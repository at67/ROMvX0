_startAddress_                    EQU                          0x0200

; Internal Variables
serialRawPrev                     EQU                          0x0081
frameCountPrev                    EQU                          0x00d6
register0                         EQU                          0x0082
register1                         EQU                          register0 + 0x02
register2                         EQU                          register0 + 0x04
register3                         EQU                          register0 + 0x06
register4                         EQU                          register0 + 0x08
register5                         EQU                          register0 + 0x0A
register6                         EQU                          register0 + 0x0C
register7                         EQU                          register0 + 0x0E
register8                         EQU                          register0 + 0x10
register9                         EQU                          register0 + 0x12
register10                        EQU                          register0 + 0x14
register11                        EQU                          register0 + 0x16
register12                        EQU                          register0 + 0x18
register13                        EQU                          register0 + 0x1A
register14                        EQU                          register0 + 0x1C
register15                        EQU                          register0 + 0x1E
fgbgColour                        EQU                          register0 + 0x20
cursorXY                          EQU                          register0 + 0x22
midiStream                        EQU                          register0 + 0x24
midiDelay                         EQU                          register0 + 0x26
miscFlags                         EQU                          register0 + 0x28
register16                        EQU                          register0 + 0x2A

; Internal Constants
MISC_WAIT_VBLANK_BIT              EQU                          0x01
MISC_ENABLE_SCROLL_BIT            EQU                          0x02
MISC_ON_BOTTOM_ROW_BIT            EQU                          0x04
MISC_DISABLE_CLIP_BIT             EQU                          0x08
MISC_ENABLE_FNT4X6_BIT            EQU                          0x10
MISC_WAIT_VBLANK_MSK              EQU                          0xfe
MISC_ENABLE_SCROLL_MSK            EQU                          0xfd
MISC_ON_BOTTOM_ROW_MSK            EQU                          0xfb
MISC_DISABLE_CLIP_MSK             EQU                          0xf7
MISC_ENABLE_FNT4X6_MSK            EQU                          0xef

; Internal Buffers
regsWorkArea                      EQU                          0x0000
textWorkArea                      EQU                          0xff40

; Includes
%includePath                      "../runtime"
%include                          util.i
%include                          gigatron.i
%include                          macros_ROMvX0.i

; Labels
_entryPoint_                      EQU                          0x0200
_loop                             EQU                          0x025c
_vuMeter                          EQU                          0x0287
_decay                            EQU                          0x033a
_oscilloscope                     EQU                          0x039e
_midiOff                          EQU                          0x03f2
_1                                EQU                          0x04d7
_2                                EQU                          0x04dd
_3                                EQU                          0x04e3
_4                                EQU                          0x04e9
_5                                EQU                          0x04ef
_6                                EQU                          0x04f5
_7                                EQU                          0x08e5
_8                                EQU                          0x08eb
_9                                EQU                          0x08f1
_10                               EQU                          0x08f7
_11                               EQU                          0x09e8
_12                               EQU                          0x09ee
_13                               EQU                          0x09f4
_14                               EQU                          0x09fa
_99                               EQU                          0x0aa5
_48                               EQU                          0x0abf
_49                               EQU                          0x0add
_50                               EQU                          0x0ba5
_51                               EQU                          0x0bc9
_52                               EQU                          0x0bed
_53                               EQU                          0x0cb4
_54                               EQU                          0x0cd8
_55                               EQU                          0x0cfc
_56                               EQU                          0x0dc9
_57                               EQU                          0x0ded
_113                              EQU                          0x0eba
_119                              EQU                          0x0ee4
_101                              EQU                          0x0fb1
_114                              EQU                          0x0fdb
_116                              EQU                          0x10ab
_117                              EQU                          0x11c0
_121                              EQU                          0x12d6
_105                              EQU                          0x13ed
_111                              EQU                          0x15ab
_siren                            EQU                          0x16c0
_crash                            EQU                          0x17d2
_beep                             EQU                          0x18e6
_tictoc                           EQU                          0x19ae
_pucDeath                         EQU                          0x19e1
_ghostMove                        EQU                          0x1ad0
_invaderMove                      EQU                          0x1ba8
_invaderShootOld                  EQU                          0x1ca5
_invaderShoot                     EQU                          0x1cdb
_saucerMove                       EQU                          0x1dc8
_invaderExplode                   EQU                          0x1dee
_testSfx                          EQU                          0x1eca
_saucerExplode                    EQU                          0x1fbe
_playerExplode                    EQU                          0x20c7
_playSample                       EQU                          0x21d3
_resetWaves                       EQU                          0x22a5
_textScroll                       EQU                          0x22a8
_initialise                       EQU                          0x22b6
_if_0x0000                        EQU                          0x0278
_vuDisplay                        EQU                          0x030b
_if_0x0002                        EQU                          0x031f
_else_0x0003                      EQU                          0x033a
_endif_0x0005                     EQU                          0x034a
_endif_0x0004                     EQU                          0x034a
_endif_0x0001                     EQU                          0x039c
_next_0x0006                      EQU                          0x03ae
_next_0x0007                      EQU                          0x03c2
_printKey                         EQU                          0x03d2
_endif_0x0008                     EQU                          0x0abd
_endif_0x0009                     EQU                          0x17d0
_endif_0x000a                     EQU                          0x18e4
_endif_0x000b                     EQU                          0x19ac
_endif_0x000c                     EQU                          0x19df
_endif_0x000d                     EQU                          0x1abc
_endif_0x000e                     EQU                          0x1ace
_endif_0x000f                     EQU                          0x1ba3
_endif_0x0011                     EQU                          0x1bf3
_elseif_0x0010                    EQU                          0x1bf6
_endif_0x0012                     EQU                          0x1ca3
_endif_0x0013                     EQU                          0x1cd9
_endif_0x0014                     EQU                          0x1dc6
_endif_0x0015                     EQU                          0x1dec
_if_0x0016                        EQU                          0x1eb4
_endif_0x0017                     EQU                          0x1ec8
_endif_0x0019                     EQU                          0x1fbc
_endif_0x0018                     EQU                          0x1fbc
_endif_0x001b                     EQU                          0x20c5
_endif_0x001a                     EQU                          0x20c5
_if_0x001c                        EQU                          0x21bd
_endif_0x001d                     EQU                          0x21d1
_endif_0x001e                     EQU                          0x22a3
_page_0x0300                      EQU                          0x0300
_page_0x04cf                      EQU                          0x04cf
_page_0x08e0                      EQU                          0x08e0
_page_0x0aa0                      EQU                          0x0aa0
_page_0x0ba0                      EQU                          0x0ba0
_page_0x0ca0                      EQU                          0x0ca0
_page_0x0da0                      EQU                          0x0da0
_page_0x0ea0                      EQU                          0x0ea0
_page_0x0fa0                      EQU                          0x0fa0
_page_0x10a0                      EQU                          0x10a0
_page_0x11a0                      EQU                          0x11a0
_page_0x12a0                      EQU                          0x12a0
_page_0x13a0                      EQU                          0x13a0
_page_0x14a0                      EQU                          0x14a0
_page_0x15a0                      EQU                          0x15a0
_page_0x16a0                      EQU                          0x16a0
_page_0x17a0                      EQU                          0x17a0
_page_0x18a0                      EQU                          0x18a0
_page_0x19a0                      EQU                          0x19a0
_page_0x1aa0                      EQU                          0x1aa0
_page_0x1ba0                      EQU                          0x1ba0
_page_0x1ca0                      EQU                          0x1ca0
_page_0x1da0                      EQU                          0x1da0
_page_0x1ea0                      EQU                          0x1ea0
_page_0x1fa0                      EQU                          0x1fa0
_page_0x20a0                      EQU                          0x20a0
_page_0x21a0                      EQU                          0x21a0
_page_0x22a0                      EQU                          0x22a0
_page_0x23a0                      EQU                          0x23a0
_page_0x24a0                      EQU                          0x24a0

; Constants
_SMP_A                            EQU                          0x8000
_SMP_N                            EQU                          0x0040
_SMP_H                            EQU                          0x0040
_OSC_X                            EQU                          0x000b
_OSC_Y                            EQU                          0x0020
_OSC_A                            EQU                          0x280b
_VU_X                             EQU                          0x004c
_VU_Y                             EQU                          0x0010
_VU_H                             EQU                          0x0040
_OFFSCREEN                        EQU                          0x78a0
_F_LUT                            EQU                          0x0500
_V_LUT                            EQU                          0x08a0
_V_SIZ                            EQU                          0x0040
_D_LUT                            EQU                          0x09a0
_D_SIZ                            EQU                          0x0040
_T_LUT                            EQU                          0x09e0
_T_SIZ                            EQU                          0x0008
_RobotSize                        EQU                          0x1345
_RobotAddr                        EQU                          0xebfb
_CurlySize                        EQU                          0x0dd1
_CurlyAddr                        EQU                          0xde2a
_AhoogSize                        EQU                          0x0486
_AhoogAddr                        EQU                          0xd9a4
_RoostSize                        EQU                          0x0f1f
_RoostAddr                        EQU                          0xca85
_BoingSize                        EQU                          0x0684
_BoingAddr                        EQU                          0xc401
_I_LUT                            EQU                          0x6ea0
_IF_LUT                           EQU                          0x6da0
_I_SIZ                            EQU                          0x0020
_SF_LUT                           EQU                          0x6ca0
_SF_SIZ                           EQU                          0x000c
_IE_LUT                           EQU                          0x6ba0
_IE_SIZ                           EQU                          0x0003
_SEF_LUT                          EQU                          0x69a0
_SEF_SIZ                          EQU                          0x000c
_PEF_LUT                          EQU                          0x6aa0
_PEF_SIZ                          EQU                          0x0020

; Global Variables
_samplesAddr                      EQU                          0x0056
_t                                EQU                          0x0058
_f                                EQU                          0x005a
_v                                EQU                          0x005c
_a0                               EQU                          0x0038
_a1                               EQU                          0x003a
_count                            EQU                          0x003c
_scrollPos                        EQU                          0x003e
_scrollTmp                        EQU                          0x0040
_vol1                             EQU                          0x0042
_vol2                             EQU                          0x0044
_vol3                             EQU                          0x0046
_vol4                             EQU                          0x0048
_ypos1                            EQU                          0x004a
_ypos2                            EQU                          0x004c
_ypos3                            EQU                          0x004e
_ypos4                            EQU                          0x0050
_kk                               EQU                          0x0052
_state                            EQU                          0x0054
_k                                EQU                          0x005e
_chanAddr                         EQU                          0x0060
_freqAddr                         EQU                          0x0062
_vol                              EQU                          0x0064
_y                                EQU                          0x0066
_lut                              EQU                          0x0068
_save                             EQU                          0x006a
_addrA                            EQU                          0x006c
_sAddr                            EQU                          0x006e
_i                                EQU                          0x0070
_vv                               EQU                          0x0072
_a                                EQU                          0x0074
_s                                EQU                          0x0076
_v_lut                            EQU                          0x0078
_f_lut                            EQU                          0x007a
_d_lut                            EQU                          0x007c
_t_lut                            EQU                          0x007e
_n                                EQU                          0x00c0
_ff                               EQU                          0x00c2
_vvv                              EQU                          0x0030
_m                                EQU                          0x0032
_sampleAddr                       EQU                          0x0034
_j                                EQU                          0x0036

; Local Variables
_vuDisplay_volAddr                EQU                          0x00c4
_vuDisplay_freqAddr               EQU                          0x00c6
_vuDisplay_vuX                    EQU                          0x00c8
_vuDisplay_v                      EQU                          0x00ca
_printKey_key                     EQU                          0x00c4

; Arrays
_pnotes                           EQU                          0xc3f1
_pnotes                           DB                           0x4a 0x48 0x47 0x45 0x43 0x41 0x40 0x3e 0x3c 0x3e 0x40 0x41 0x43 0x45 0x47 0x48 
_gnotes                           EQU                          0xc3e1
_gnotes                           DB                           0x3c 0x3e 0x40 0x41 0x43 0x45 0x47 0x48 0x4a 0x48 0x47 0x45 0x43 0x41 0x40 0x3e 
_inotes                           EQU                          0xc3dd
_inotes                           DB                           0x28 0x26 0x24 0x22 

; Strings

; Constant Strings
_str_0x77fd                       EQU                          0x77fd
_str_0x77fd                       DB                           1 '<' 0
_str_0x77fa                       EQU                          0x77fa
_str_0x77fa                       DB                           1 '>' 0
_str_0x77d4                       EQU                          0x77d4
_str_0x77d4                       DB                           36 'Muzak incoming..                    ' 0
_str_0x77ae                       EQU                          0x77ae
_str_0x77ae                       DB                           36 'Dodgey Siren incoming..             ' 0
_str_0x76da                       EQU                          0x76da
_str_0x76da                       DB                           36 'Crash Effect incoming..             ' 0
_str_0x76b4                       EQU                          0x76b4
_str_0x76b4                       DB                           36 'Ye Ole Beep incoming..              ' 0
_str_0x75da                       EQU                          0x75da
_str_0x75da                       DB                           36 'Tick Tock..Tick Tock..              ' 0
_str_0x75b4                       EQU                          0x75b4
_str_0x75b4                       DB                           36 'PucMon has had a hard day..         ' 0
_str_0x74da                       EQU                          0x74da
_str_0x74da                       DB                           36 'Ghosts on the Move..                ' 0
_str_0x74b4                       EQU                          0x74b4
_str_0x74b4                       DB                           36 'Invaders incoming..                 ' 0
_str_0x73da                       EQU                          0x73da
_str_0x73da                       DB                           36 'Shoot on sight!..                   ' 0
_str_0x73b4                       EQU                          0x73b4
_str_0x73b4                       DB                           36 'Saucer on the Move..                ' 0
_str_0x72da                       EQU                          0x72da
_str_0x72da                       DB                           36 'Invader go Pooof..                  ' 0
_str_0x72b4                       EQU                          0x72b4
_str_0x72b4                       DB                           36 'Test Fx..                           ' 0
_str_0x71da                       EQU                          0x71da
_str_0x71da                       DB                           36 'Saucer go Booom..                   ' 0
_str_0x71b4                       EQU                          0x71b4
_str_0x71b4                       DB                           36 'Player go Booom..                   ' 0
_str_0x70da                       EQU                          0x70da
_str_0x70da                       DB                           36 'Destroy Him My Robots!..            ' 0
_str_0x70b4                       EQU                          0x70b4
_str_0x70b4                       DB                           36 'Ahroooghaaaa..                      ' 0
_str_0x6fda                       EQU                          0x6fda
_str_0x6fda                       DB                           36 'Nyuk..Nyuk..Nyuk..                  ' 0
_str_0x6fb4                       EQU                          0x6fb4
_str_0x6fb4                       DB                           36 'Wakey wakey..                       ' 0
_str_0x6eda                       EQU                          0x6eda
_str_0x6eda                       DB                           36 'Booooiiiinnnng..                    ' 0
_str_0x76a2                       EQU                          0x76a2
_str_0x76a2                       DB                           16 'Keys: <1> to <0>' 0
_str_0x75a2                       EQU                          0x75a2
_str_0x75a2                       DB                           16 '      <q> to <o>' 0
_str_0x6cdb                       EQU                          0x6cdb
_str_0x6cdb                       DB                           35 'Hit a key, we don\'t have all day!..' 0

; Data

; Time

; Define Bytes
def_bytes_0x8000                  EQU                          0x8000
def_bytes_0x8000                  DB                           0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
def_bytes_0x8040                  EQU                          0x8040
def_bytes_0x8040                  DB                           0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 
def_bytes_0x0702                  EQU                          0x0702
def_bytes_0x0702                  DB(4)                        32 35 38 41 44 47 49 52 54 56 58 59 61 62 62 63 63 63 62 62 61 59 58 56 54 52 49 47 44 41 38 35 32 29 26 23 20 17 15 12 10 8 6 5 3 2 2 1 1 1 2 2 3 5 6 8 10 12 15 17 20 23 26 29 
def_bytes_0x08a0                  EQU                          0x08a0
def_bytes_0x08a0                  DB                           8 8 9 9 10 11 13 14 16 18 20 23 25 28 30 33 36 38 41 43 46 48 51 53 55 57 58 60 61 62 62 63 63 63 62 62 61 60 58 57 55 53 51 48 46 43 41 38 36 33 30 28 25 23 20 18 16 14 13 11 10 9 9 8 
def_bytes_0x09a0                  EQU                          0x09a0
def_bytes_0x09a0                  DB                           63 61 59 57 54 53 51 49 47 45 44 42 40 39 37 36 35 33 32 31 30 29 27 26 25 24 23 23 22 21 20 19 19 18 17 17 16 15 15 14 14 13 13 12 12 11 11 11 10 10 10 10 9 9 9 9 8 8 8 8 8 8 8 7 
def_bytes_0x09e0                  EQU                          0x09e0
def_bytes_0x09e0                  DB                           63 4 21 34 43 49 54 57 
def_bytes_0xebfb                  EQU                          0xebfb
def_bytes_0xebfb                  DB                           239 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 136 136 119 120 136 119 135 136 135 119 120 135 135 136 120 135 136 135 135 135 136 119 120 136 119 136 136 120 135 135 136 120 136 135 119 136 119 136 119 136 120 136 120 120 136 135 135 136 120 135 135 134 118 121 123 137 134 118 119 119 119 119 103 118 167 169 137 87 102 119 119 119 118 119 105 123 152 149 118 103 119 119 119 103 103 167 185 137 104 103 119 119 120 118 133 152 155 122 102 118 135 135 135 134 118 122 123 136 149 118 119 119 119 118 119 106 121 152 149 118 103 119 119 118 119 105 122 152 165 119 103 119 119 118 134 122 139 137 133 134 119 119 119 118 134 106 139 153 149 134 119 119 119 120 136 136 136 136 136 136 120 136 136 136 136 136 136 136 136 136 136 136 136 136 135 136 135 136 135 136 136 136 136 136 136 136 120 152 136 136 136 136 136 136 136 120 135 136 119 135 120 136 136 119 136 135 136 136 135 135 119 136 136 120 135 120 136 120 135 119 136 119 136 119 136 119 135 136 119 135 135 136 136 119 120 135 136 136 136 135 136 136 135 136 135 120 120 120 135 136 136 119 120 136 136 135 136 119 136 135 136 136 135 120 120 136 135 136 119 135 119 136 135 119 120 119 135 120 136 135 135 136 136 135 136 120 135 120 136 136 135 136 135 136 136 120 135 135 119 135 135 136 120 119 136 135 136 120 136 120 136 120 119 136 136 136 136 135 135 119 120 120 135 119 120 135 120 135 119 120 120 120 136 136 135 136 119 135 135 136 120 136 119 136 136 136 136 119 136 135 135 119 120 119 119 136 136 136 136 135 136 120 135 135 135 120 136 135 120 120 135 120 135 136 120 136 119 135 136 136 136 136 135 119 136 136 119 136 120 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 119 119 119 119 136 136 136 136 136 136 136 136 136 136 136 120 136 136 136 136 136 135 136 135 135 136 136 137 136 136 137 136 152 136 121 136 151 152 136 136 136 135 135 136 120 135 136 120 135 152 120 136 136 136 120 120 136 136 136 136 136 137 136 136 135 136 136 120 136 136 136 120 136 136 121 136 135 136 120 136 136 135 135 136 136 136 136 120 136 151 136 152 121 136 151 136 136 136 120 120 120 136 136 135 120 135 135 135 135 120 120 120 119 119 135 135 136 120 135 135 135 136 120 120 120 135 135 135 135 136 119 136 135 120 120 136 120 135 136 135 136 120 120 134 136 120 120 135 135 135 136 120 120 120 120 136 135 102 135 90 231 104 117 103 119 118 104 118 205 102 135 87 119 119 87 134 125 197 120 101 119 119 102 120 103 234 87 134 103 119 118 86 134 125 214 120 101 119 119 101 103 104 234 87 118 87 119 117 103 118 159 166 119 101 119 118 86 119 126 215 119 101 103 119 102 103 104 251 103 118 86 119 118 103 135 159 166 119 101 119 119 118 119 104 252 103 118 103 119 119 103 118 125 215 103 134 119 119 118 104 102 159 182 103 118 119 119 118 119 102 190 134 104 102 119 119 118 119 102 191 134 119 102 135 135 118 119 102 175 133 119 102 135 135 134 120 101 175 150 104 118 135 135 134 120 101 175 149 120 118 135 135 137 88 118 126 198 104 134 119 119 119 103 134 106 248 87 135 103 120 120 118 119 105 220 118 119 103 119 119 119 103 102 205 149 103 104 119 119 120 103 117 173 199 87 103 119 119 119 118 117 124 217 87 102 135 119 119 118 118 106 220 118 118 119 119 119 135 102 103 205 134 102 104 119 120 120 119 102 141 199 102 119 135 135 135 135 101 105 219 118 103 120 120 120 120 119 86 124 200 101 119 135 135 135 119 118 86 189 150 86 120 119 119 119 135 103 87 221 133 118 120 119 119 119 135 102 90 252 102 102 135 119 119 119 135 102 89 236 117 118 120 120 119 119 135 103 88 254 117 118 135 119 119 119 119 102 102 191 166 102 104 120 119 119 120 118 118 108 249 87 118 135 119 119 119 120 103 116 159 181 104 88 135 135 135 119 120 87 132 143 197 105 87 135 135 135 119 119 133 120 87 252 70 133 120 120 120 120 120 120 133 135 73 250 72 133 136 119 119 119 119 119 135 88 101 205 102 134 120 120 120 119 119 119 119 166 105 72 251 72 117 152 119 119 119 119 119 135 168 73 87 252 72 133 168 120 119 119 120 120 120 121 149 150 94 196 120 74 135 135 135 119 119 119 120 122 116 149 110 163 135 74 135 119 119 119 120 120 120 120 167 103 153 152 99 166 204 121 38 137 169 118 122 135 121 150 119 154 151 54 136 248 150 56 138 152 102 154 120 121 151 104 137 152 83 166 234 120 38 138 168 118 122 135 135 137 118 121 169 118 42 123 198 162 103 169 151 103 168 119 119 120 119 121 137 118 58 123 215 163 86 152 136 103 136 120 120 105 120 121 136 149 99 166 234 136 55 106 122 136 120 135 135 135 119 105 139 121 102 71 199 246 180 85 121 122 121 88 104 104 104 104 104 137 151 148 114 182 217 153 39 90 122 136 118 135 135 119 119 119 120 121 137 102 72 138 199 163 102 151 152 135 119 120 120 120 104 103 104 138 136 119 88 136 183 165 118 120 153 119 119 120 104 119 119 119 119 136 168 150 117 137 171 140 87 104 122 152 135 119 119 119 119 119 118 135 136 167 134 117 152 154 120 87 104 138 121 104 104 119 119 119 134 134 134 151 151 134 102 122 122 121 103 87 137 136 135 134 135 119 119 119 119 119 119 151 135 134 118 121 152 151 118 135 136 152 121 119 119 119 119 119 119 119 119 151 151 149 120 104 152 168 152 73 105 138 120 119 119 134 134 134 134 135 119 121 121 121 87 119 137 137 120 101 135 152 151 135 119 119 119 119 135 135 135 136 121 121 120 88 105 154 137 102 118 151 152 166 150 135 135 119 120 120 120 105 105 105 137 120 118 135 168 169 150 133 119 136 136 120 104 120 120 119 135 135 135 135 136 121 136 104 88 120 154 170 103 134 150 151 150 150 135 135 119 119 119 120 120 120 105 104 137 104 103 135 152 169 150 133 134 136 151 136 120 120 120 120 120 120 119 135 135 151 152 134 134 104 105 168 137 120 88 104 136 135 135 135 135 119 119 119 119 119 119 135 151 152 134 134 120 122 155 153 120 88 104 121 136 135 135 135 135 135 119 119 119 119 119 119 152 152 134 134 104 137 171 153 120 88 104 121 137 135 135 135 135 135 135 135 135 135 135 135 119 121 137 120 104 86 120 155 171 136 133 133 135 168 151 120 120 120 120 120 120 120 119 119 119 135 135 135 137 152 136 103 87 137 170 170 136 102 119 136 152 151 135 135 119 119 119 119 119 119 119 119 119 119 120 120 121 137 136 119 102 120 170 170 152 117 119 120 153 152 120 120 120 119 119 119 119 119 119 119 119 119 119 135 119 119 137 153 135 118 87 137 170 170 136 102 119 121 153 151 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 121 153 151 118 102 136 170 170 137 101 103 120 153 152 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 137 136 136 136 136 136 136 136 136 136 136 136 135 136 136 136 136 136 136 136 136 136 136 136 136 137 136 136 136 135 152 135 136 136 136 120 135 135 136 136 136 120 120 135 136 135 136 136 136 120 136 136 136 120 135 135 136 135 136 136 136 120 120 136 136 119 119 136 136 135 135 135 136 136 120 120 136 120 120 135 135 135 136 135 135 120 136 136 135 136 136 120 136 120 120 135 120 135 120 135 135 136 135 136 135 135 136 137 134 86 105 172 170 118 86 136 136 151 119 119 119 119 119 119 119 119 119 119 120 136 152 117 102 154 202 151 86 104 136 136 119 119 119 119 119 119 119 119 119 119 119 136 121 135 85 88 153 169 166 101 120 152 136 119 119 119 119 119 119 119 119 119 119 119 135 151 118 101 105 155 137 70 86 119 151 135 119 119 119 119 119 119 119 119 119 120 121 120 151 133 133 153 187 152 87 88 105 136 151 119 119 119 119 119 119 119 119 119 119 121 121 151 134 117 153 202 167 103 104 106 136 135 119 119 119 119 119 119 119 119 119 134 120 121 120 133 102 169 202 152 86 89 121 135 134 120 119 119 119 119 119 119 119 119 135 105 121 135 165 118 152 156 105 103 88 135 151 151 120 119 119 119 119 119 119 119 119 119 104 136 166 166 103 122 159 138 135 102 166 167 136 103 119 119 119 119 119 119 119 119 119 119 121 138 120 101 120 154 185 135 132 151 153 136 103 120 120 120 120 120 120 120 120 120 119 104 153 182 148 103 137 187 167 118 89 107 138 118 119 119 135 135 135 135 135 135 135 135 118 122 140 105 85 135 171 186 120 100 166 185 168 104 120 120 120 120 120 120 120 119 119 119 135 152 167 135 101 169 157 138 102 88 121 168 134 119 119 135 119 119 119 119 120 120 120 120 120 137 152 135 86 198 217 122 54 104 121 136 119 119 119 135 135 135 135 135 135 119 120 120 120 138 136 103 59 151 244 198 71 120 138 136 120 120 120 120 120 119 119 119 119 135 119 119 118 134 105 138 203 168 134 104 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 134 104 138 204 168 150 104 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 134 103 88 153 188 185 152 87 102 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 103 101 153 156 202 137 117 118 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 102 87 152 172 169 135 86 102 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 117 104 169 205 138 134 87 103 119 119 119 119 119 119 119 119 119 120 119 119 119 119 119 119 118 117 104 169 205 154 134 87 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 118 87 153 174 169 167 86 118 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 102 101 137 155 202 153 101 118 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 103 87 152 173 185 152 102 103 119 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 118 105 153 189 169 167 87 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 102 88 153 189 169 151 87 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 102 87 153 156 201 153 102 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 101 121 153 187 153 149 86 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 102 86 153 155 185 153 117 102 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 102 87 153 172 185 153 101 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 135 87 152 140 183 153 101 120 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 153 101 137 121 233 121 133 105 152 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 119 119 119 137 150 89 150 175 135 152 86 153 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 153 101 121 119 234 105 133 89 168 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 102 136 122 233 120 118 103 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 87 136 139 217 136 134 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 117 120 136 189 152 136 86 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 117 120 136 189 152 136 102 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 102 136 138 202 136 134 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 102 121 138 170 185 136 118 103 119 119 119 119 119 119 119 119 119 119 119 120 119 119 119 119 119 118 102 152 138 186 168 136 102 104 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 102 105 137 171 185 137 118 103 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 168 119 135 102 119 105 221 134 119 102 121 119 137 135 119 135 135 119 135 119 119 119 135 119 121 135 120 118 103 118 140 233 103 118 103 136 119 152 120 120 119 119 119 119 119 119 119 119 120 152 120 151 102 119 105 221 135 135 102 120 119 137 119 119 119 119 119 119 119 119 135 135 135 137 151 104 135 104 117 126 181 104 118 120 118 137 151 119 119 119 119 119 119 119 119 119 119 120 137 103 135 104 134 92 214 104 134 120 134 137 135 119 119 119 119 119 119 119 119 119 119 119 137 118 137 102 151 87 249 72 151 105 134 122 135 119 119 119 119 119 119 119 119 119 119 120 136 119 120 134 136 88 247 88 134 120 119 136 136 119 119 119 119 119 135 119 119 119 119 120 136 136 104 134 121 87 246 105 118 136 105 136 136 119 119 119 119 119 119 135 119 135 135 136 120 151 121 119 137 60 195 152 119 151 121 135 136 120 120 120 120 119 119 119 119 119 135 152 135 136 136 134 152 95 103 150 135 151 135 136 135 135 119 119 119 120 120 120 120 120 120 137 135 152 136 103 179 250 91 71 137 136 121 136 119 119 135 135 135 135 135 135 135 135 136 136 105 136 135 109 61 180 197 120 136 134 152 136 120 120 120 120 120 120 120 120 120 121 120 136 136 136 104 163 246 122 88 120 136 121 121 120 120 120 119 119 119 119 135 135 135 150 151 136 135 132 152 95 58 102 135 153 136 135 150 135 135 135 135 135 135 135 135 135 151 137 121 135 134 91 63 119 148 135 136 135 149 151 119 119 119 119 119 119 119 119 119 119 121 121 136 120 76 90 212 180 119 120 151 151 120 120 120 120 120 119 119 135 135 135 135 121 122 136 135 75 91 165 196 136 136 167 151 120 120 120 120 119 119 119 135 135 135 134 121 122 135 135 76 91 150 179 135 121 167 167 120 120 120 120 120 119 119 119 119 135 135 121 152 120 133 107 76 134 196 120 135 153 151 136 120 120 119 119 119 119 119 135 135 153 121 151 120 132 123 93 136 196 104 135 137 135 151 119 119 119 119 119 119 119 119 135 152 105 150 120 116 155 93 136 180 104 134 138 119 151 119 119 119 119 119 119 135 119 135 152 137 151 103 118 153 108 136 166 119 103 137 136 151 135 119 119 119 119 119 119 119 119 153 151 136 86 102 153 141 152 150 102 87 135 153 151 119 119 119 119 119 119 119 119 119 153 151 135 86 103 152 156 153 151 102 88 135 153 151 135 119 119 119 119 119 119 119 119 137 153 135 118 103 183 158 120 166 102 119 137 153 135 119 119 119 119 119 119 119 119 119 137 153 135 134 86 168 126 166 168 85 119 121 153 135 119 119 119 119 119 119 119 119 119 120 153 151 135 85 154 76 212 153 85 120 120 153 151 119 119 119 119 135 119 119 119 120 120 120 153 120 117 121 105 247 105 116 136 121 152 120 119 119 119 119 119 120 120 120 120 120 120 153 135 164 121 119 234 104 148 122 105 153 104 119 119 119 119 119 120 119 119 120 119 118 153 166 181 73 117 189 87 134 75 105 153 102 135 119 135 135 135 119 119 135 135 135 134 152 167 137 56 150 159 119 150 74 120 152 134 135 135 119 135 135 135 135 135 135 135 135 119 137 123 85 152 111 166 151 57 151 167 150 135 119 119 119 119 119 119 119 119 119 119 105 123 106 115 121 92 213 136 70 166 151 135 119 119 120 120 120 120 119 119 120 120 120 121 122 121 132 105 119 246 136 84 152 138 121 120 120 120 120 120 119 119 119 120 120 119 104 121 167 165 72 149 233 106 84 137 139 120 119 119 119 119 119 119 119 119 119 119 119 104 120 183 167 86 181 188 91 100 106 123 135 150 119 119 119 119 119 119 119 119 119 135 119 151 184 136 85 168 111 89 149 89 137 166 150 119 135 119 119 119 119 119 119 119 135 118 151 170 121 85 139 78 150 198 87 151 183 152 103 119 120 120 119 119 119 119 119 119 135 118 151 170 121 85 138 78 135 181 87 151 183 152 103 119 119 119 119 119 119 119 119 119 119 119 120 121 138 135 117 105 135 248 121 101 104 138 137 119 119 119 119 119 119 135 135 135 119 119 119 119 119 119 121 153 120 101 122 122 246 137 117 119 137 153 120 120 119 119 119 119 119 135 119 119 119 119 119 119 119 119 120 153 135 116 105 150 235 105 134 71 121 153 135 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 137 137 119 102 120 137 216 136 118 103 137 137 135 119 119 119 119 119 119 119 119 119 119 119 119 119 137 135 151 118 119 137 188 153 135 102 120 135 153 135 119 119 119 119 119 119 119 119 119 119 119 119 120 152 119 135 102 119 138 187 152 119 102 120 120 137 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 102 155 151 118 102 139 203 118 102 119 170 134 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 103 170 135 118 86 156 201 102 103 121 169 118 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 103 154 151 118 86 157 217 101 103 121 169 118 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 121 169 119 101 105 221 150 86 119 154 151 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 134 121 168 120 102 89 237 133 103 135 154 134 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 136 103 153 136 119 85 191 181 87 120 137 151 104 135 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 151 104 169 135 134 89 237 116 104 120 154 134 121 119 135 119 119 135 119 119 119 119 119 119 119 119 119 119 119 119 151 104 169 135 134 87 205 149 88 120 137 134 105 135 135 135 135 119 119 119 119 119 119 119 119 119 119 119 119 119 122 133 121 153 152 100 124 234 84 121 153 152 102 169 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 122 117 121 153 153 84 124 217 84 121 153 152 86 169 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 152 103 153 153 150 70 190 166 71 153 153 134 105 151 135 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 121 134 104 153 153 116 106 218 100 105 153 153 118 137 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 137 102 137 153 152 69 157 199 69 137 153 151 104 151 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 151 105 152 119 118 87 204 149 103 119 137 134 105 135 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 120 151 137 151 104 134 123 217 118 136 103 153 135 152 119 119 119 119 119 119 119 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 119 135 119 119 119 119 119 119 119 119 119 119 119 119 135 119 119 119 119 119 119 119 119 119 119 119 119 135 119 119 119 136 120 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 120 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 120 136 136 136 136 152 136 152 136 152 137 137 152 136 136 136 136 136 136 136 136 136 136 136 136 135 136 136 152 119 136 136 136 135 137 137 136 120 151 136 136 136 136 136 136 136 136 136 136 136 151 136 152 136 120 136 136 136 152 136 136 120 152 136 120 135 120 136 120 152 120 136 119 137 136 137 135 152 136 119 136 135 136 137 119 120 119 120 136 136 135 136 136 135 136 135 120 120 120 135 135 136 119 136 136 136 135 136 119 137 135 136 136 135 136 120 120 135 136 119 135 119 120 135 119 120 120 135 120 120 136 135 135 136 135 136 120 135 120 136 136 119 136 135 136 136 120 135 136 119 136 135 136 137 119 136 135 136 135 136 120 136 136 119 136 120 136 137 119 136 135 136 121 135 120 136 135 136 135 119 120 136 120 136 136 136 136 120 135 135 136 120 135 136 136 135 136 135 120 136 119 135 119 136 119 120 136 136 136 136 120 136 120 136 136 135 135 136 119 135 137 119 136 136 136 136 135 120 135 136 135 136 120 135 120 135 135 119 152 119 120 120 152 136 136 151 135 136 120 135 119 136 120 152 121 135 136 119 119 136 136 120 121 136 135 136 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 
def_bytes_0xde2a                  EQU                          0xde2a
def_bytes_0xde2a                  DB                           119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 135 119 119 119 120 135 119 119 103 136 135 103 135 102 120 135 102 136 101 104 151 102 120 118 103 153 118 103 135 118 120 152 118 119 119 119 120 152 118 119 118 102 137 151 102 119 118 119 137 135 102 102 103 119 136 135 102 103 119 119 137 135 102 103 119 119 153 135 102 119 118 119 137 119 102 102 118 118 153 118 102 102 119 120 106 134 102 102 119 136 122 119 103 102 119 135 133 182 117 134 104 136 118 168 87 88 74 106 89 74 133 133 132 167 134 133 181 119 103 74 88 89 72 148 149 133 152 105 120 76 72 102 133 166 151 135 89 132 149 118 121 104 104 103 179 135 103 91 89 103 135 132 179 105 88 89 119 119 134 117 179 121 73 89 118 134 135 135 103 167 74 103 134 150 135 119 120 103 106 84 165 134 120 104 118 118 103 149 134 153 59 103 135 151 119 118 149 120 103 135 103 152 73 118 134 119 103 118 135 88 118 135 135 120 104 132 136 105 102 134 119 119 103 119 136 104 120 119 119 104 117 135 104 119 120 135 119 118 119 135 119 104 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 119 119 119 120 118 119 119 120 104 119 119 119 119 119 119 103 119 119 119 119 119 118 135 119 119 119 119 119 120 119 119 119 119 119 119 119 119 119 119 119 119 135 119 119 120 119 135 119 119 119 103 103 119 118 119 119 119 118 135 119 119 119 119 119 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 103 103 119 119 119 119 119 119 120 119 119 119 135 119 119 119 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 119 119 119 103 103 119 119 119 119 119 119 119 119 119 135 119 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 118 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 119 119 119 119 119 119 119 119 119 119 118 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 135 117 91 102 70 119 102 118 107 103 86 119 119 150 146 216 100 89 118 121 133 156 72 58 71 106 103 90 194 131 180 119 166 117 214 86 106 26 137 72 79 69 117 160 200 117 148 228 89 74 28 148 122 72 177 163 149 93 71 153 61 70 132 161 185 88 166 61 99 148 163 125 39 151 73 176 149 149 78 54 123 85 186 24 120 131 214 89 150 101 211 75 88 57 180 107 116 132 169 12 55 117 213 89 134 134 42 160 166 119 62 116 154 101 121 84 195 91 73 104 181 121 103 133 118 148 152 26 119 134 166 104 104 103 119 134 105 165 73 117 119 118 89 116 137 117 121 103 134 153 42 132 150 152 87 150 104 103 105 119 117 135 91 84 181 104 135 119 135 102 134 120 119 120 102 150 120 106 84 120 103 118 135 120 119 104 134 166 134 135 104 88 119 118 136 101 119 120 119 120 118 119 133 104 118 135 103 149 103 119 104 119 120 118 134 118 135 104 120 119 119 136 118 120 119 102 135 120 135 103 119 120 119 120 103 119 118 134 119 134 103 119 102 135 118 120 118 120 119 120 119 120 103 120 133 134 119 119 118 135 104 118 119 136 119 102 119 134 134 136 89 119 117 135 119 103 119 119 119 118 120 119 118 150 119 119 119 120 119 120 119 120 103 135 134 135 103 119 103 119 134 135 103 119 119 134 102 135 119 119 90 103 120 103 135 134 118 119 134 120 104 119 134 136 103 119 119 103 103 134 135 103 120 103 118 119 119 103 120 102 135 134 88 119 119 119 120 134 135 134 119 120 103 120 103 120 118 120 119 119 102 134 135 119 119 103 119 103 118 119 118 120 119 119 119 118 104 104 102 134 119 118 119 119 120 134 119 119 135 119 119 119 120 119 119 119 134 119 103 103 134 103 119 103 118 119 118 135 119 119 104 103 120 118 135 119 119 119 119 103 119 119 118 119 119 119 119 119 135 103 119 119 134 103 119 119 119 103 119 118 119 119 119 119 103 119 118 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 119 119 119 119 119 119 119 103 119 119 119 104 119 119 135 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 103 119 119 119 103 118 119 119 119 119 119 119 119 119 119 119 119 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 118 119 103 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 104 136 102 103 120 119 88 153 117 85 118 135 135 92 118 100 132 148 165 103 127 42 41 102 149 193 179 216 73 44 26 90 102 135 224 178 164 90 105 59 63 39 116 160 197 148 165 153 27 28 39 181 134 164 242 120 75 12 119 121 104 176 179 166 77 72 105 74 161 164 166 77 70 105 102 209 119 121 59 117 106 131 184 26 105 116 198 57 165 74 153 167 120 44 132 139 117 91 161 137 102 92 132 123 115 104 193 105 73 44 148 122 132 120 91 113 197 87 108 100 155 69 166 54 196 74 105 73 182 119 151 101 119 118 124 24 165 148 185 56 135 70 150 104 134 138 38 150 134 151 88 103 103 132 121 119 133 138 56 150 119 138 101 150 118 120 104 119 119 135 106 69 165 134 106 87 119 102 136 103 151 118 134 104 104 135 88 118 134 134 120 120 118 103 150 136 104 119 119 118 103 136 102 150 88 120 102 151 104 118 118 151 104 135 119 119 104 118 119 119 134 135 104 119 103 135 119 118 135 103 135 119 119 104 119 135 119 120 119 119 119 119 134 119 119 104 119 104 118 119 119 118 119 135 89 135 119 135 104 119 134 151 120 118 119 104 119 119 134 134 120 105 103 119 119 118 119 136 103 119 102 135 118 119 135 104 119 119 119 135 118 119 104 134 120 118 135 135 104 103 120 118 135 119 135 118 104 119 119 119 119 119 103 119 119 119 119 119 119 119 119 119 119 119 119 120 119 119 120 120 134 135 119 119 103 119 119 135 119 119 119 119 120 119 118 135 119 119 119 118 119 118 103 103 119 119 134 135 119 103 120 103 119 119 134 119 120 119 119 119 119 119 119 119 119 118 119 119 103 119 119 119 134 103 135 119 120 119 119 119 119 119 119 119 134 119 104 119 119 119 119 119 119 119 104 119 119 119 119 118 119 118 103 103 119 119 119 118 119 119 119 119 119 119 135 119 119 119 119 119 120 119 119 119 119 119 119 119 119 119 118 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 118 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 103 92 86 101 147 164 179 149 141 26 42 86 134 163 166 95 56 85 163 165 149 122 46 100 148 179 136 119 107 71 195 118 105 58 118 90 116 154 25 73 114 199 102 198 102 209 120 107 12 133 90 134 73 176 135 134 75 147 107 117 87 211 106 74 42 181 106 133 103 89 129 196 118 109 85 154 69 151 56 178 119 105 74 165 134 136 101 119 118 124 25 149 133 184 72 135 86 119 103 136 88 177 152 89 74 132 135 135 103 104 103 134 120 88 177 137 73 104 132 136 103 103 118 135 136 120 119 150 139 41 149 134 135 87 134 104 118 119 119 119 134 120 119 118 121 100 135 120 103 150 119 104 104 103 120 103 135 133 135 120 104 117 135 119 119 118 136 103 120 118 103 134 134 120 120 119 104 102 134 118 119 104 134 119 119 120 119 119 133 119 120 103 119 119 119 119 135 134 119 120 104 119 119 118 119 118 120 103 119 118 119 102 135 118 103 119 103 119 135 119 103 119 119 120 119 120 119 134 118 120 119 119 119 119 119 118 119 119 118 119 119 120 119 118 134 118 103 88 119 103 119 103 134 118 135 120 119 119 135 119 119 119 119 119 119 119 119 104 103 119 119 119 119 120 118 118 119 103 102 119 103 118 119 119 119 118 135 119 119 104 120 119 135 119 119 119 119 104 118 119 119 119 119 120 118 119 119 119 119 119 103 119 119 119 103 119 119 119 119 119 119 119 119 120 119 134 135 119 119 119 119 119 119 119 119 119 119 119 103 135 119 119 119 119 103 119 119 119 118 119 119 119 119 119 119 119 119 119 119 119 135 135 119 119 119 119 119 119 119 119 119 119 119 119 119 120 119 119 119 119 119 119 119 119 136 117 86 118 104 136 154 136 118 101 101 118 86 120 136 136 136 136 119 119 119 118 119 135 102 101 86 102 120 137 137 149 71 205 133 6 217 99 36 108 232 83 88 188 167 33 140 198 67 73 218 83 6 175 149 19 140 215 83 72 220 99 54 174 150 17 139 232 80 57 220 115 6 190 166 18 140 216 81 73 220 116 4 158 182 32 107 233 81 40 206 133 3 141 215 64 73 236 115 5 158 182 48 106 250 81 24 207 132 4 157 215 67 89 235 98 22 191 149 18 124 232 66 56 221 116 52 158 198 32 106 249 81 39 191 149 18 140 231 64 90 236 99 22 175 182 33 124 232 81 39 206 133 3 141 198 48 106 234 82 55 173 149 35 123 200 82 55 188 133 35 107 218 115 37 141 216 65 89 219 116 21 156 166 50 106 201 99 54 171 150 52 122 132 102 155 150 68 121 169 101 119 171 149 70 136 134 86 86 137 134 69 121 185 101 85 155 183 66 87 187 116 54 139 168 82 88 187 98 39 171 133 36 123 200 82 88 220 115 38 174 182 34 105 236 115 5 173 166 33 106 218 99 54 173 150 51 122 201 100 54 156 151 51 106 201 99 37 155 183 66 122 185 99 72 188 133 37 124 216 81 55 204 150 35 105 202 116 38 154 152 82 71 172 132 52 140 200 66 89 185 84 88 154 151 84 106 169 117 52 138 168 99 71 137 134 103 119 121 134 121 135 117 87 154 150 51 105 169 133 52 121 169 116 72 135 102 123 183 52 121 187 149 35 107 200 82 37 140 167 84 104 136 134 87 152 118 103 171 132 35 107 233 82 54 173 165 67 105 202 117 71 120 85 88 153 116 69 138 184 82 88 205 132 53 139 183 84 87 138 152 117 68 121 168 68 104 168 117 103 121 168 85 104 154 150 86 120 169 117 68 138 134 101 53 138 150 68 105 186 101 104 171 151 101 122 166 102 87 151 103 100 104 102 119 121 132 70 138 167 68 120 171 133 53 124 215 52 138 217 83 54 156 150 34 107 184 98 39 172 132 19 121 219 81 72 172 183 67 105 218 83 53 140 149 102 72 168 100 73 166 119 67 155 101 86 135 155 149 120 105 200 101 86 152 102 70 116 89 116 103 119 120 151 121 103 183 87 134 106 132 87 151 104 134 104 119 118 103 118 140 98 90 132 172 82 138 71 182 52 168 136 85 166 109 130 40 183 121 82 104 185 35 137 123 117 164 60 228 71 119 124 149 101 105 53 201 55 102 198 41 177 91 164 90 98 138 135 37 216 92 83 153 138 99 137 119 148 55 135 165 39 151 122 36 186 73 145 90 185 147 73 135 180 40 135 185 22 166 91 113 75 150 146 58 170 130 56 104 214 57 150 170 83 105 165 54 105 215 55 106 214 55 38 214 23 129 173 100 118 173 148 71 141 163 53 141 145 85 109 129 135 43 178 106 56 246 40 102 247 39 104 230 40 87 232 41 99 202 38 145 156 36 147 157 53 132 173 69 132 158 99 165 93 146 150 61 146 120 43 195 90 38 214 42 114 202 39 178 156 39 162 140 38 163 125 53 196 77 99 182 60 115 181 77 114 151 108 83 134 156 86 131 187 40 162 155 39 162 139 40 146 155 56 146 156 54 179 93 99 182 41 195 106 39 215 75 84 215 72 87 214 88 56 196 108 68 200 42 146 155 53 180 108 69 180 108 68 181 123 52 182 76 130 168 42 162 139 54 179 106 72 196 91 85 214 76 84 199 43 130 170 39 179 108 84 181 76 99 185 58 114 169 91 114 138 72 178 138 56 179 92 134 98 124 87 196 75 103 196 108 84 184 42 164 167 40 181 153 37 167 123 68 135 124 99 166 42 163 107 103 162 74 151 148 38 183 123 67 120 172 115 119 74 181 73 168 131 73 185 98 40 166 153 51 154 90 148 54 139 199 54 149 140 147 122 52 168 55 182 58 163 91 114 124 115 155 83 156 132 151 54 187 84 170 53 185 68 151 56 200 55 181 74 199 53 183 57 182 55 182 73 166 54 186 84 169 69 170 116 38 136 155 132 70 156 167 83 86 156 167 84 70 171 132 70 120 185 70 152 88 150 51 105 185 118 68 104 187 134 52 103 155 167 85 119 137 152 102 120 118 120 101 137 134 84 70 120 155 167 83 103 138 150 85 120 137 152 84 104 170 117 52 103 153 169 118 102 103 153 101 104 169 135 100 87 136 137 135 84 103 153 135 102 120 169 134 68 87 138 185 116 71 152 119 118 86 137 168 136 101 85 103 154 133 86 120 169 134 68 104 153 152 116 70 121 152 118 86 120 136 152 101 86 120 153 135 85 120 152 135 101 86 121 169 134 86 120 136 152 117 86 120 154 151 85 103 136 136 118 85 104 169 134 86 103 120 137 135 86 119 137 152 117 86 120 136 135 101 103 137 136 118 102 119 119 136 118 102 119 137 152 118 86 119 119 135 118 103 120 136 136 118 103 119 120 136 118 102 120 136 136 119 103 119 119 119 119 119 119 119 135 119 119 119 119 119 119 119 119 119 120 135 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 112 
def_bytes_0xd9a4                  EQU                          0xd9a4
def_bytes_0xd9a4                  DB                           119 119 119 119 119 119 102 152 104 118 136 119 134 104 135 135 103 135 120 102 120 120 118 135 152 119 86 120 135 119 119 119 119 120 135 118 103 120 135 118 73 150 135 86 136 136 102 136 120 117 119 138 119 101 119 136 119 119 135 119 120 136 119 54 199 105 84 154 104 114 168 140 87 100 167 152 104 120 133 133 77 169 83 103 155 134 84 137 169 101 103 136 118 103 150 121 101 120 121 118 118 153 136 85 102 136 136 120 86 152 136 86 119 168 119 87 120 133 152 104 86 136 135 85 121 169 101 71 105 182 132 42 138 180 101 108 135 99 73 171 147 84 123 138 101 134 150 58 106 178 117 93 135 115 121 118 166 87 122 133 85 139 187 114 54 170 152 38 119 216 135 54 89 167 99 87 155 151 83 90 202 131 54 158 184 64 122 172 51 70 218 149 5 155 182 52 107 200 84 72 183 117 90 169 72 86 163 149 124 120 54 104 197 114 123 170 86 72 134 149 153 135 56 120 147 118 172 103 69 151 150 120 121 117 85 137 167 115 89 138 102 117 172 120 51 151 218 102 54 136 103 104 139 116 82 120 173 151 81 135 138 89 105 149 113 88 172 184 36 54 151 218 152 37 70 152 217 134 38 54 136 189 148 65 71 140 234 84 20 118 173 232 81 39 89 223 150 33 101 156 252 99 5 118 190 215 64 38 91 207 163 49 103 123 236 116 4 102 174 216 97 55 88 222 150 33 101 139 236 84 4 118 173 248 81 39 104 222 150 1 133 171 206 67 34 150 124 235 82 5 121 221 214 35 72 135 157 166 96 102 106 221 101 19 133 140 217 98 39 89 190 181 64 102 91 237 133 20 117 158 216 96 70 89 174 149 64 117 123 191 100 67 134 139 204 83 51 120 157 200 99 70 119 126 151 128 102 57 218 134 5 118 140 215 113 56 73 207 181 49 149 78 155 176 102 57 190 133 17 133 139 190 99 35 135 158 233 80 54 124 189 179 66 89 105 170 164 67 71 122 186 132 69 105 137 186 133 68 119 139 171 116 84 102 156 170 83 84 120 155 152 84 85 104 172 167 84 70 121 187 151 84 86 121 186 150 68 86 138 186 117 69 87 154 185 101 69 104 154 167 100 85 105 170 150 101 87 137 169 134 101 103 138 169 117 102 104 121 152 119 102 102 153 169 102 85 119 152 136 101 103 104 120 135 119 117 119 137 137 102 101 151 136 137 103 103 119 135 121 166 116 72 124 184 115 86 121 120 136 132 88 90 119 133 183 102 40 122 199 116 55 152 149 104 121 101 101 152 153 102 104 136 102 120 168 85 103 152 119 104 119 118 119 121 136 117 119 120 103 135 150 102 104 137 151 117 73 120 148 151 121 135 86 88 136 167 118 71 152 151 120 119 119 135 120 120 135 135 104 104 134 151 105 103 132 134 122 119 118 121 119 102 168 134 87 120 149 135 137 102 118 119 104 120 136 118 117 135 138 119 102 137 119 86 153 137 101 133 136 105 120 117 120 119 87 136 150 117 119 119 104 137 134 103 119 102 120 170 99 103 154 85 103 185 118 87 120 119 120 168 87 103 149 119 123 134 101 121 118 102 154 150 55 105 165 133 123 102 148 137 73 86 167 149 88 121 118 118 154 117 117 137 88 102 167 149 104 105 102 118 152 117 119 121 87 103 167 133 120 121 70 119 183 116 121 122 86 102 184 133 88 122 117 102 170 150 70 122 133 85 155 183 38 105 213 100 92 186 98 71 187 115 37 188 169 18 106 216 66 75 237 97 69 173 117 52 172 183 21 136 167 54 89 216 134 23 185 182 38 108 217 115 37 203 167 20 106 250 114 54 92 183 113 103 126 119 100 148 155 122 52 134 201 118 55 120 214 117 42 122 181 116 137 122 102 118 136 119 119 120 104 150 149 88 107 135 116 133 140 105 68 150 184 104 72 149 137 105 71 149 182 137 106 117 73 152 133 118 135 120 105 135 98 137 153 86 103 152 135 103 119 39 168 164 71 106 150 117 155 150 5 170 180 53 107 167 101 154 136 35 187 215 5 107 230 83 93 186 65 41 236 113 21 206 180 6 158 197 34 89 251 99 6 189 165 35 156 200 51 89 136 165 149 26 154 211 68 126 185 66 104 200 135 73 69 167 151 70 120 185 118 72 137 131 88 170 118 54 169 149 55 155 150 84 121 137 118 118 136 103 120 150 102 122 169 84 86 153 135 102 122 134 102 121 135 102 137 152 85 86 152 152 119 72 166 118 103 152 118 88 153 133 85 121 152 103 71 183 103 102 153 120 70 136 167 102 87 120 119 135 134 57 167 118 86 154 135 70 136 167 102 88 136 118 120 152 55 167 152 85 120 137 101 120 120 101 119 169 118 71 137 135 118 136 119 71 169 118 85 138 135 100 105 152 117 105 135 118 87 121 135 119 119 103 119 136 135 119 119 120 119 119 119 119 136 135 103 119 136 102 119 120 135 119 120 119 119 119 135 118 119 120 119 103 120 135 119 103 119 119 119 119 103 119 136 119 119 119 119 119 119 118 119 120 135 119 119 119 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 
def_bytes_0xca85                  EQU                          0xca85
def_bytes_0xca85                  DB                           136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 135 119 136 136 136 136 136 136 136 136 136 136 119 136 120 120 167 121 153 121 136 121 183 104 138 148 138 150 169 103 93 194 120 154 147 136 110 132 86 157 113 138 123 113 139 62 98 140 93 114 230 139 205 215 156 146 154 77 88 199 109 88 107 89 116 123 77 99 201 76 80 36 91 237 198 94 113 152 62 65 134 79 69 136 109 53 136 108 33 120 169 49 138 167 66 154 118 17 201 51 70 248 20 125 230 51 94 198 20 173 149 34 204 115 5 217 98 25 215 65 46 150 69 119 102 72 235 72 4 84 103 156 210 131 71 131 113 190 54 39 136 84 61 215 67 111 165 68 173 162 85 183 52 117 137 22 105 116 70 104 162 85 167 38 70 119 69 61 213 98 158 166 38 220 148 58 171 144 137 190 36 154 216 39 140 198 40 157 178 118 219 100 91 188 67 138 215 52 158 166 54 204 133 57 218 115 92 185 67 172 168 38 201 196 59 141 130 121 173 67 167 218 24 121 228 88 124 164 103 157 116 118 218 102 90 200 85 125 166 84 188 133 56 203 115 107 202 68 156 199 55 171 179 90 157 98 152 203 23 153 229 57 124 177 121 158 84 152 217 54 139 197 87 157 117 103 218 102 91 199 116 140 136 86 186 135 73 185 148 106 154 100 137 185 70 154 182 71 154 150 88 170 148 105 154 131 137 155 100 152 187 54 151 217 41 121 229 57 108 194 105 127 129 135 187 100 120 201 84 154 153 71 154 106 117 107 183 25 200 102 184 59 227 71 248 7 246 75 150 104 171 25 167 183 74 169 117 139 71 180 135 169 56 212 119 122 120 103 138 118 152 88 152 102 184 102 168 118 185 86 171 117 107 167 104 152 120 135 107 165 119 184 104 120 137 135 104 153 102 136 165 136 122 103 120 152 118 151 151 121 134 152 121 106 118 152 119 153 119 137 135 136 120 150 104 151 119 151 121 119 120 135 121 105 135 118 152 135 119 151 135 121 136 104 152 119 151 120 135 121 135 121 134 121 135 135 136 136 119 152 119 136 136 119 120 135 120 135 136 135 136 120 136 120 136 120 136 136 136 136 135 136 135 120 136 136 136 135 136 136 136 135 136 136 120 136 136 136 136 135 136 136 135 136 136 136 135 136 136 136 136 136 136 136 136 136 136 136 136 135 136 136 120 120 136 119 120 135 120 135 119 135 136 120 135 119 119 120 120 136 136 136 136 136 136 135 136 136 136 136 136 136 136 136 136 136 136 120 120 135 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 119 136 136 136 121 134 122 134 120 150 137 103 123 116 152 150 91 148 120 121 166 104 108 147 151 141 83 166 157 38 151 170 52 168 214 25 140 163 89 155 145 137 173 36 153 215 6 173 178 56 203 99 75 199 83 159 132 71 218 69 91 198 52 203 163 43 217 97 127 151 50 235 86 26 230 82 111 117 67 105 85 46 179 114 219 71 59 211 116 173 87 77 151 100 230 120 62 86 165 196 90 138 69 201 163 92 139 23 200 176 140 153 9 185 114 156 136 40 212 162 155 75 61 87 181 220 169 138 169 172 98 125 165 70 103 99 157 72 63 101 132 32 135 157 184 142 128 109 210 38 119 34 134 68 28 212 81 106 82 88 181 25 189 66 168 227 103 155 90 58 120 179 134 202 84 125 152 24 202 129 154 183 71 171 89 58 150 211 135 141 99 106 203 5 203 209 61 187 64 205 120 24 228 149 93 103 165 105 91 145 167 155 39 183 167 60 118 165 136 105 151 103 121 149 104 137 164 121 107 132 137 123 114 168 139 54 168 135 104 136 104 149 136 106 132 152 122 102 152 121 118 136 105 132 153 91 115 200 90 85 184 105 118 168 88 150 151 73 150 135 105 150 121 120 118 154 102 167 123 102 149 168 87 137 134 151 105 150 152 104 136 136 104 153 87 152 135 105 151 135 136 134 166 121 134 136 106 149 122 75 148 137 90 164 136 91 147 136 137 133 122 136 102 152 151 88 152 135 88 152 164 90 139 130 137 140 99 153 170 53 153 183 56 138 180 89 140 114 137 170 53 153 182 56 154 148 104 171 69 136 199 56 138 179 89 156 98 153 185 38 153 180 72 171 100 107 168 68 187 133 57 200 99 140 152 38 201 163 60 154 112 155 139 36 200 167 26 169 177 92 107 113 184 139 55 167 168 56 151 167 73 137 165 89 138 132 120 170 100 122 168 69 155 165 71 187 116 90 184 84 155 182 55 171 146 105 157 66 152 217 7 154 180 42 155 144 107 155 81 185 155 23 183 198 57 153 180 89 140 116 120 170 70 138 182 87 140 116 103 201 85 137 182 56 139 162 121 140 83 168 171 24 168 197 58 138 177 137 141 83 153 186 38 169 182 56 154 148 90 155 99 152 185 71 137 181 88 140 116 135 186 54 136 198 56 140 162 121 141 67 168 202 7 168 227 42 140 168 121 157 66 169 201 7 154 195 58 156 129 121 171 68 153 199 39 155 179 73 156 98 153 185 38 169 180 58 155 113 138 154 36 184 182 26 154 160 107 155 66 184 186 8 153 210 58 140 128 136 173 36 152 215 40 139 179 88 157 99 121 186 69 153 197 71 156 132 105 186 84 138 183 55 171 148 89 155 99 154 185 55 153 197 58 140 160 136 172 68 151 217 23 139 196 71 141 131 119 188 68 106 184 69 139 165 70 171 131 105 185 84 137 184 54 140 148 88 171 99 136 186 37 154 197 41 140 161 121 172 67 153 186 22 153 211 56 156 130 105 188 67 137 199 38 155 180 57 156 98 121 201 53 154 181 57 156 130 121 186 68 170 183 24 186 161 107 155 66 154 169 7 170 194 74 155 113 153 172 20 168 229 26 140 161 105 141 82 136 201 38 138 197 57 139 162 104 155 99 136 186 70 137 183 56 138 180 88 140 131 120 187 84 136 186 38 153 198 40 155 180 73 170 146 123 139 99 154 154 85 168 153 102 152 137 102 151 138 86 150 154 56 135 183 72 121 166 88 138 134 104 152 151 88 168 150 90 152 149 90 151 134 106 151 119 90 149 152 90 133 167 107 117 183 90 134 150 137 119 136 104 152 87 138 135 120 135 153 101 155 118 105 150 153 86 185 133 137 120 152 72 155 102 153 120 152 103 185 86 168 134 136 119 152 88 138 102 137 119 136 119 136 119 120 134 136 120 119 150 121 120 119 151 104 135 119 151 104 136 103 152 104 135 134 153 87 152 134 122 118 153 119 137 118 138 119 137 134 121 151 121 134 137 134 120 150 105 135 120 135 104 151 120 135 119 152 120 136 119 152 120 137 119 153 119 121 134 137 135 121 133 137 134 121 133 137 134 122 118 138 117 153 103 122 101 183 119 121 119 135 119 183 88 136 152 103 136 152 105 104 168 104 120 151 89 149 184 72 151 168 72 149 185 56 120 166 89 135 167 89 120 164 121 136 133 122 137 132 137 138 101 152 154 85 152 170 54 168 184 55 153 182 88 154 165 73 139 162 120 157 84 135 203 68 137 201 39 136 214 41 139 194 89 125 146 105 156 82 152 170 54 153 182 56 170 132 89 185 100 123 167 69 155 148 86 188 84 103 217 54 105 229 55 109 178 103 158 83 135 202 37 137 214 39 140 162 103 173 83 119 202 37 121 213 71 140 148 88 172 99 121 217 54 124 181 102 157 132 103 204 54 121 229 72 124 179 88 158 98 151 202 39 122 213 55 140 161 104 173 53 120 216 53 138 211 57 142 114 135 203 52 138 216 24 141 177 103 173 98 105 203 21 138 227 55 141 146 73 189 50 137 231 23 140 179 56 173 112 122 217 37 139 197 39 172 145 105 203 52 138 199 38 172 178 73 188 83 122 201 52 171 196 56 173 98 105 202 52 138 198 39 157 130 104 187 67 122 199 23 140 162 103 172 83 106 201 22 139 194 87 157 99 90 186 36 169 211 72 141 115 90 187 67 185 214 41 140 147 90 171 82 185 184 25 155 163 75 170 113 186 169 24 170 180 74 170 128 171 155 23 169 180 58 170 145 139 139 38 168 198 57 169 162 123 140 53 168 184 55 185 180 91 124 84 168 185 69 168 181 59 124 114 151 170 68 152 183 26 123 162 135 171 83 137 169 24 154 178 120 171 99 123 154 22 185 178 89 170 99 108 138 37 216 179 59 169 114 126 122 51 103 164 45 168 98 143 104 52 87 133 47 167 98 173 103 53 102 116 54 135 83 220 101 57 246 99 103 134 53 250 99 76 215 67 159 133 40 249 97 126 184 21 220 146 44 217 87 173 167 120 218 128 93 185 34 220 148 11 202 103 156 167 22 203 131 75 200 83 172 149 71 202 101 92 167 116 186 120 73 168 132 122 153 70 154 165 87 186 85 107 182 84 188 102 59 198 99 173 118 41 216 114 156 135 40 201 130 139 152 40 169 130 154 152 57 153 131 167 168 59 105 132 182 151 76 89 117 197 150 109 89 87 212 148 125 72 73 212 147 172 72 43 197 130 188 88 44 197 130 203 88 44 181 114 203 87 44 166 115 201 103 61 134 115 216 118 62 119 100 230 117 94 104 86 229 132 142 88 57 229 130 173 88 44 197 114 219 102 46 182 99 234 101 78 151 84 249 116 95 150 70 248 100 127 135 55 248 99 126 118 56 231 98 158 103 41 230 98 173 102 43 198 97 204 102 29 167 82 234 116 62 151 51 232 131 79 136 38 231 129 126 120 24 215 129 157 120 26 199 113 188 119 27 183 113 203 134 44 168 98 218 134 45 152 83 233 133 78 137 69 232 131 110 121 55 231 146 142 120 25 215 129 189 119 28 199 113 203 134 29 168 98 234 133 46 152 67 233 132 62 136 53 231 146 110 120 39 215 129 141 120 25 199 113 188 119 28 183 97 203 117 45 168 66 217 132 62 152 52 232 130 94 136 38 232 129 126 136 24 216 129 157 136 10 200 112 203 135 29 168 97 218 149 46 153 67 233 147 62 137 36 232 146 110 137 23 216 144 141 136 10 200 137 187 135 12 185 97 202 150 29 169 82 217 148 45 153 51 232 146 78 138 22 232 145 125 137 8 216 144 156 136 11 200 128 187 135 12 169 97 218 149 30 153 66 232 163 62 138 36 232 162 110 138 23 231 160 141 121 9 215 144 172 137 11 200 128 203 136 12 169 112 218 150 30 153 81 232 148 47 138 67 247 163 79 122 37 247 161 110 122 7 231 160 157 121 170 215 154 172 120 171 183 138 203 135 13 168 112 217 134 30 152 81 232 149 46 121 51 247 146 79 121 37 246 145 110 105 23 230 145 142 105 24 214 145 157 105 26 198 145 188 120 11 183 128 203 119 29 167 113 233 135 30 152 98 233 133 47 136 83 248 148 63 121 68 247 147 94 121 53 230 146 110 105 39 230 146 126 105 24 214 145 157 105 25 214 145 172 104 27 198 129 203 104 29 182 113 218 119 30 151 113 233 134 47 152 98 248 133 53 121 68 103 148 70 121 53 102 147 111 105 55 246 146 126 105 40 230 145 157 105 26 214 144 188 104 11 198 128 203 104 13 166 112 218 119 30 151 97 232 134 47 136 82 247 148 53 121 52 247 146 95 105 38 230 161 126 106 24 230 160 158 105 9 214 144 172 105 11 199 138 203 119 13 167 112 233 134 30 152 81 248 149 37 137 67 87 163 69 122 37 247 161 126 106 8 215 169 157 121 170 199 154 187 136 172 184 138 202 135 13 168 96 233 150 30 153 81 248 165 47 138 67 247 163 79 122 37 247 162 110 122 23 231 160 141 122 8 215 160 156 121 10 199 154 187 121 11 184 128 202 136 13 152 112 217 135 29 153 97 216 150 46 137 82 232 149 62 137 83 232 149 78 137 68 231 148 94 122 69 231 164 110 122 54 214 163 125 105 39 214 146 141 105 40 198 146 140 105 41 198 146 156 105 42 182 146 171 105 42 182 146 186 105 43 166 146 186 104 44 151 130 201 120 44 151 130 201 120 45 135 114 216 135 61 120 115 215 134 62 120 99 231 150 78 105 84 230 149 94 105 69 230 164 94 106 70 230 163 125 90 55 213 163 125 106 40 214 162 140 106 41 198 162 156 106 26 182 145 187 105 27 167 145 186 120 28 151 130 201 120 44 151 130 200 135 45 136 114 216 135 61 120 99 215 149 61 121 84 214 148 77 106 69 214 163 93 106 54 214 163 109 106 39 199 162 140 122 41 199 161 156 122 26 183 145 171 137 27 184 145 186 136 28 168 129 202 135 28 153 114 201 150 45 137 98 216 149 61 137 83 200 149 60 137 68 200 148 76 137 69 199 148 92 121 69 200 148 108 137 70 184 148 107 137 70 184 148 123 137 71 184 132 123 136 71 184 132 123 136 71 184 132 139 136 72 167 132 138 120 88 167 148 138 137 73 167 148 154 137 73 167 148 153 136 73 152 132 153 136 73 152 132 152 136 73 136 133 152 136 89 136 133 168 136 89 136 133 168 136 90 136 133 168 136 90 121 133 151 152 89 120 117 151 151 105 121 118 151 151 105 121 118 167 151 106 121 118 167 151 106 121 118 167 151 106 122 118 167 166 122 122 103 166 166 122 106 103 166 165 122 106 87 166 165 122 107 87 166 180 122 107 72 150 179 137 107 56 150 179 137 107 41 151 162 153 122 41 135 162 168 122 42 136 161 184 137 27 121 145 183 152 43 121 130 183 167 44 122 114 199 166 60 123 83 183 181 75 123 68 183 180 91 123 53 184 179 107 139 39 168 178 122 155 40 169 178 138 154 40 154 162 153 169 41 154 146 153 168 41 138 130 152 184 42 139 115 168 183 58 139 99 168 182 58 139 100 168 181 74 139 84 168 181 90 139 69 168 180 89 139 70 152 180 105 138 70 153 165 104 153 86 137 149 104 136 86 136 134 104 152 102 136 134 120 136 103 136 134 120 136 103 152 134 121 136 119 136 135 120 136 119 136 135 120 136 119 136 135 120 137 119 136 151 120 121 119 135 150 120 122 104 135 166 136 122 88 135 165 136 106 89 134 164 152 123 73 119 180 151 123 73 119 179 167 123 58 119 179 167 123 42 120 178 166 138 43 104 162 182 138 43 105 146 182 153 44 105 146 198 169 44 106 146 197 168 60 106 131 198 184 76 107 132 182 183 75 106 116 182 167 90 122 117 151 151 105 121 118 151 151 105 120 118 151 135 105 120 118 151 135 105 120 118 151 135 105 120 118 151 151 121 121 119 151 151 121 121 119 151 151 105 121 118 150 151 105 105 118 150 167 106 106 118 165 166 106 90 102 165 182 122 91 103 165 182 122 91 87 165 181 122 91 87 165 181 122 91 87 165 181 121 91 71 149 180 137 107 72 150 180 137 107 72 150 179 153 107 57 150 195 153 107 57 150 179 153 107 57 134 179 152 123 58 135 179 152 123 58 135 180 168 122 74 135 164 168 122 74 135 164 167 138 74 120 148 167 138 74 120 148 167 137 73 120 149 167 137 89 120 149 167 137 90 120 150 151 137 105 120 134 151 136 105 120 134 135 120 104 119 134 135 136 104 120 134 135 136 120 120 135 135 120 120 120 135 135 136 120 119 135 135 120 120 119 135 135 121 120 119 135 134 120 120 119 151 135 137 120 120 151 151 137 121 120 152 151 137 137 120 152 151 137 137 120 152 151 137 137 120 152 151 121 137 119 151 136 122 120 135 167 136 122 104 134 166 135 106 104 118 166 136 106 103 117 165 119 90 87 117 165 120 90 87 133 165 120 75 88 133 181 136 91 72 149 180 153 91 73 133 180 153 91 73 149 180 153 107 89 150 181 153 107 88 150 166 136 122 104 135 167 136 121 120 135 151 135 136 136 104 136 150 136 121 88 135 165 136 123 87 151 182 88 122 101 120 183 102 123 134 102 184 135 91 135 133 152 136 106 104 150 167 121 107 118 150 152 122 105 119 167 136 105 136 119 152 136 120 137 103 137 183 104 138 118 120 167 103 122 135 135 168 103 122 150 118 137 119 120 135 119 136 119 120 135 118 136 120 119 135 135 120 120 135 135 136 120 120 120 135 136 120 120 135 135 120 120 119 136 135 120 136 119 136 136 136 136 136 136 136 136 136 136 136 136 136 119 135 136 120 120 135 119 135 120 120 135 135 136 120 120 135 119 120 119 119 136 136 136 136 135 136 136 136 136 136 136 136 136 136 136 136 136 120 135 135 136 136 136 136 135 136 136 120 120 135 119 120 136 136 135 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 135 136 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 120 119 119 119 119 119 120 119 119 120 119 120 136 136 136 136 120 136 136 136 136 136 120 136 136 136 136 135 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 136 135 136 135 119 120 136 136 136 136 135 119 120 119 119 136 136 136 135 136 136 136 136 136 
def_bytes_0xc401                  EQU                          0xc401
def_bytes_0xc401                  DB                           119 135 119 119 119 136 135 120 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 119 135 135 120 135 135 119 135 135 119 119 119 119 119 119 119 119 119 120 136 136 136 119 119 119 103 119 121 131 140 148 106 166 89 183 87 168 102 140 130 108 164 91 182 90 183 88 184 87 169 86 155 65 172 98 108 131 90 165 73 165 42 196 40 199 55 201 70 187 102 171 117 138 133 123 146 93 163 58 181 56 183 70 168 68 125 96 108 147 92 181 90 182 89 184 88 169 87 156 72 206 96 125 129 92 163 74 164 57 198 40 199 55 184 71 186 103 170 102 153 118 153 149 43 197 40 198 55 184 70 168 85 155 66 155 99 155 116 155 117 155 118 138 118 138 122 96 205 49 172 66 172 67 155 68 153 101 137 101 153 102 153 103 168 104 167 120 151 121 154 7 101 26 194 60 146 123 99 154 86 168 72 166 105 134 137 103 152 121 135 121 119 138 112 218 8 194 92 68 182 74 116 152 89 133 136 104 134 152 121 135 152 121 120 135 120 124 26 189 229 76 40 147 182 106 89 118 150 120 105 104 135 136 136 120 136 136 120 135 136 148 181 135 104 104 104 104 104 104 119 119 134 135 135 135 136 136 136 136 136 135 136 136 136 121 120 119 119 119 119 119 119 118 119 119 119 120 120 120 120 136 136 136 119 119 135 119 135 135 119 119 119 119 119 120 120 103 102 135 135 136 136 136 136 136 136 136 136 120 120 120 120 119 135 135 119 135 135 135 134 120 88 120 120 136 136 136 136 136 136 135 135 135 120 120 120 120 119 119 119 119 119 119 101 162 167 107 91 89 135 151 152 136 136 119 135 135 135 119 119 119 119 119 119 119 119 103 73 129 197 108 73 165 168 106 119 151 121 104 134 136 104 118 151 104 118 135 120 119 134 118 136 58 148 169 89 149 153 104 150 152 104 134 136 120 136 104 149 137 103 150 121 119 135 104 148 122 87 166 122 103 167 122 119 151 121 119 135 121 148 139 71 165 106 102 150 105 102 136 88 133 136 104 134 136 120 135 136 120 119 135 120 121 116 198 75 85 149 105 87 133 120 103 119 120 119 119 135 120 120 136 136 136 135 135 136 136 91 102 164 151 89 103 134 135 120 103 134 135 120 120 120 135 136 136 120 136 136 136 136 150 167 105 89 104 134 134 135 119 134 135 120 120 120 135 135 136 136 136 136 120 136 120 120 119 134 134 135 120 104 120 119 104 102 149 151 136 121 120 120 135 136 136 120 119 119 119 135 120 104 118 134 135 119 119 117 135 74 104 150 151 136 120 119 135 135 120 119 119 119 119 119 119 120 119 119 119 119 119 102 163 138 74 133 168 106 119 151 137 120 135 136 120 135 136 120 135 136 120 119 135 119 118 106 84 183 90 133 168 105 150 153 104 150 137 119 135 120 119 120 119 135 119 119 119 119 118 151 73 165 122 102 167 105 134 137 119 151 120 135 136 119 134 105 117 136 87 134 104 118 103 117 121 102 151 104 134 136 119 136 120 135 136 119 135 121 117 168 71 148 105 101 151 87 134 104 118 136 120 135 120 120 136 136 136 136 136 135 136 153 89 180 121 70 149 105 102 150 104 118 135 120 119 135 120 120 136 136 136 136 136 136 136 166 139 73 132 150 104 103 134 135 120 119 135 135 136 120 136 136 136 136 136 136 136 120 121 119 165 150 104 88 87 118 118 134 119 120 120 120 120 136 136 136 136 136 136 135 135 136 136 120 119 119 118 118 119 119 103 102 119 135 135 136 136 136 136 136 136 136 136 119 119 119 135 135 119 119 119 119 118 118 119 88 104 136 151 152 136 136 136 136 136 136 136 120 119 119 119 119 119 119 119 119 118 102 132 122 106 135 167 136 121 135 135 136 120 119 135 120 119 118 120 104 134 136 120 118 118 89 115 170 91 165 153 105 150 136 104 134 120 103 134 103 102 118 119 103 118 119 102 118 85 121 53 200 90 165 122 118 168 88 150 121 134 136 103 135 104 135 104 134 120 118 120 119 119 135 104 151 121 135 137 136 152 120 135 120 119 119 103 119 120 117 137 85 135 87 150 104 134 119 119 135 119 136 120 135 136 136 136 136 135 136 135 136 137 103 166 72 132 120 102 135 103 134 120 119 135 120 135 136 120 135 136 120 135 119 119 136 151 106 117 135 88 117 120 103 134 120 119 135 120 120 135 136 136 135 136 120 119 119 119 136 134 152 88 117 119 104 118 135 104 119 135 120 120 135 136 136 136 136 136 136 119 120 136 136 119 134 119 103 119 135 103 119 119 119 135 136 136 136 136 136 136 136 136 135 119 119 119 119 120 119 119 119 119 118 103 102 136 120 136 136 136 120 135 136 120 119 119 119 119 119 119 119 119 119 119 119 119 118 119 103 151 137 136 151 136 120 135 120 119 135 119 119 119 119 119 119 119 119 119 119 102 86 118 88 134 137 103 135 120 119 135 119 135 120 119 135 120 119 136 119 136 120 135 120 119 120 118 120 119 135 120 135 120 119 135 120 135 120 119 135 120 136 136 104 134 104 101 119 102 118 103 118 119 119 119 119 135 136 120 135 136 135 136 120 120 137 151 121 102 118 87 117 103 102 118 103 119 135 120 119 136 136 136 136 136 136 136 136 136 154 151 167 88 101 118 103 102 118 103 103 118 119 120 120 135 135 136 136 136 135 136 120 120 153 122 134 133 118 103 103 103 119 119 119 119 119 135 136 136 136 136 136 136 135 135 136 136 152 136 119 103 103 103 103 119 119 119 119 119 136 136 136 136 136 136 136 136 136 136 136 136 136 135 119 119 119 119 119 102 119 119 119 120 120 136 136 136 136 136 136 136 136 136 136 135 135 119 119 119 119 118 102 103 119 120 120 135 135 135 135 120 120 120 119 119 119 119 119 119 119 119 119 119 102 102 102 120 136 136 136 136 136 136 136 136 120 120 119 119 119 119 118 102 101 118 103 103 101 102 103 121 137 136 136 136 119 119 119 119 119 118 118 103 103 102 102 86 101 119 103 118 119 119 136 153 153 153 153 136 136 120 136 136 136 136 136 136 136 136 120 120 119 119 119 118 103 103 103 119 119 119 120 119 119 119 119 119 119 119 135 119 119 119 119 118 119 102 118 103 118 119 103 119 120 119 136 136 135 136 136 136 136 136 136 120 120 120 136 119 135 103 102 102 102 118 103 119 119 119 119 136 120 136 136 136 136 136 120 119 136 136 136 120 134 119 102 118 119 119 119 119 120 119 136 136 136 136 136 136 136 136 136 119 135 136 135 136 103 117 102 102 102 118 119 119 119 135 119 120 136 136 136 136 136 135 135 135 136 136 136 135 103 102 101 102 103 103 119 119 120 120 136 136 120 120 120 136 119 119 120 120 119 135 119 119 119 119 103 119 119 120 119 136 136 136 136 136 136 135 136 119 119 119 119 119 119 119 119 119 119 119 103 119 120 120 136 136 136 136 136 136 135 135 119 119 119 118 119 102 102 102 102 102 102 102 102 103 119 136 136 135 135 135 119 119 119 135 119 120 119 135 135 120 119 119 119 119 103 118 119 119 136 136 120 135 135 119 119 119 119 119 119 119 119 119 119 119 119 119 118 119 102 102 103 103 119 119 119 119 119 119 119 119 119 119 135 120 119 119 136 135 135 136 135 119 119 119 119 119 119 119 119 119 135 119 135 135 119 119 135 119 119 119 120 136 136 136 128 
def_bytes_0x0701                  EQU                          0x0701
def_bytes_0x0701                  DB(4)                        32 38 43 48 52 56 60 62 63 63 61 59 55 50 44 38 31 24 17 11 7 3 1 1 3 7 13 20 28 37 45 52 58 62 63 62 57 51 42 33 23 14 7 2 1 3 9 18 28 39 50 58 62 63 58 50 39 27 15 6 1 2 8 18 
def_bytes_0x6ea0                  EQU                          0x6ea0
def_bytes_0x6ea0                  DB                           32 32 32 32 32 31 31 30 30 29 27 26 25 23 21 19 17 15 13 11 9 8 6 5 4 3 2 2 1 1 1 0 

; Define Words
def_words_0x0500                  EQU                          0x0500
def_words_0x0500                  DW                           5000 5049 5098 5147 5196 5245 5293 5342 5390 5438 5486 5533 5581 5627 5674 5720 5765 5810 5855 5899 5943 5986 6028 6070 6111 6152 6191 6230 6269 6306 6343 6379 6414 6448 6482 6514 6546 6577 6606 6635 6663 6690 6715 6740 6764 6786 6808 6828 6848 6866 6883 6899 6914 6928 6940 6951 6962 6971 6978 6985 6990 6995 6998 6999 7000 6999 6998 6995 6990 6985 6978 6971 6962 6951 6940 6928 6914 6899 6883 6866 6848 6828 6808 6786 6764 6740 6715 6690 6663 6635 6606 6577 6546 6514 6482 6448 6414 6379 6343 6306 6269 6230 6191 6152 6111 6070 6028 5986 5943 5899 5855 5810 5765 5720 5674 5627 5581 5533 5486 5438 5390 5342 5293 5245 5196 5147 5098 5049 5000 4951 4902 4853 4804 4755 4707 4658 4610 4562 4514 4467 4419 4373 4326 4280 4235 4190 4145 4101 4057 4014 3972 3930 3889 3848 3809 3770 3731 3694 3657 3621 3586 3552 3518 3486 3454 3423 3394 3365 3337 3310 3285 3260 3236 3214 3192 3172 3152 3134 3117 3101 3086 3072 3060 3049 3038 3029 3022 3015 3010 3005 3002 3001 3000 3001 3002 3005 3010 3015 3022 3029 3038 3049 3060 3072 3086 3101 3117 3134 3152 3172 3192 3214 3236 3260 3285 3310 3337 3365 3394 3423 3454 3486 3518 3552 3586 3621 3657 3694 3731 3770 3809 3848 3889 3930 3972 4014 4057 4101 4145 4190 4235 4280 4326 4373 4419 4467 4514 4562 4610 4658 4707 4755 4804 4853 4902 4951 
def_words_0x6da0                  EQU                          0x6da0
def_words_0x6da0                  DW                           20000 19463 18974 18529 18124 17755 17419 17113 16834 16581 16350 16139 15948 15774 15615 15470 15339 15219 15110 15011 14920 14838 14763 14695 14632 14576 14524 14477 14435 14396 14360 14328 
def_words_0x6ca0                  EQU                          0x6ca0
def_words_0x6ca0                  DW                           3000 3300 3600 3900 4200 4500 3000 3300 3600 3900 4200 4500 
def_words_0x6ba0                  EQU                          0x6ba0
def_words_0x6ba0                  DW                           0 2361 3793 
def_words_0x69a0                  EQU                          0x69a0
def_words_0x69a0                  DW                           3000 3300 3600 3900 4200 4500 3000 3300 3600 3900 4200 4500 
def_words_0x6aa0                  EQU                          0x6aa0
def_words_0x6aa0                  DW                           122 66 94 291 188 94 244 28 103 234 150 244 253 103 188 263 113 197 244 272 131 263 38 66 225 66 75 75 131 225 178 75 

; Define Images

; Define Loader Image Chunks

; Define Midis
def_midis_0x8080                  EQU                          0x8080
def_midis_0x8080                  DB                           0x90 0x3c 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x41 0x4d 0x07 0x80 0x06 0x90 0x43 0x4d 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3c 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x07 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x43 0x4d 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x07 0x90 0x3c 0x4d 0x91 0x24 0x40 0x92 0x43 0x4d 0x93 0x3f 0x4d 0x90 0x3c 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x93 0x3f 0x4d 0x06 0x83 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x92 0x43 0x4d 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x07 0x92 0x3f 0x4d 0x06 0x82 0x06 0x92 0x3e 0x4d 0x06 0x82 0x06 0x92 0x3c 0x4d 0x06 0x82 0x06 0x92 0x3e 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x43 0x4d 0x07 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x06 0x82 0x06 0x92 0x3e 0x4d 0x06 0x82 0x06 0x92 0x3c 0x4d 0x92 0x3c 0x40 0x91 0x24 0x40 0x90 0x3f 0x40 0x92 0x43 0x40 0x93 0x3c 0x40 0x06 0x83 0x06 0x93 0x3e 0x4d 0x06 0x83 0x06 0x90 0x3f 0x4d 0x07 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x92 0x43 0x4d 0x92 0x43 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x06 0x82 0x06 0x92 0x3e 0x4d 0x06 0x82 0x06 0x92 0x3c 0x4d 0x07 0x82 0x06 0x92 0x3e 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x90 0x3c 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x43 0x4d 0x92 0x43 0x40 0x80 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x06 0x82 0x07 0x92 0x3e 0x4d 0x90 0x48 0x40 0x06 0x82 0x06 0x92 0x3c 0x4d 0x90 0x46 0x40 0x91 0x22 0x40 0x93 0x3e 0x40 0x92 0x41 0x40 0x0c 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x06 0x83 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x43 0x4d 0x90 0x41 0x40 0x06 0x82 0x07 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3c 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x07 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x43 0x4d 0x90 0x43 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x92 0x44 0x40 0x06 0x80 0x06 0x90 0x3c 0x4d 0x92 0x43 0x40 0x91 0x1d 0x40 0x90 0x3c 0x40 0x93 0x41 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x07 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x92 0x43 0x4d 0x92 0x3f 0x40 0x0c 0x90 0x41 0x4d 0x06 0x80 0x06 0x92 0x3f 0x4d 0x06 0x82 0x06 0x92 0x3e 0x4d 0x07 0x82 0x06 0x92 0x3c 0x4d 0x06 0x82 0x06 0x92 0x3e 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x43 0x4d 0x06 0x82 0x06 0x92 0x41 0x4d 0x07 0x82 0x06 0x92 0x3f 0x4d 0x92 0x3c 0x40 0x91 0x1f 0x40 0x0c 0x90 0x3e 0x4d 0x90 0x3e 0x40 0x82 0x06 0x80 0x06 0x90 0x3c 0x4d 0x92 0x3f 0x40 0x91 0x20 0x40 0x93 0x3c 0x40 0x92 0x3f 0x40 0x90 0x38 0x40 0x06 0x83 0x06 0x93 0x3e 0x4d 0x06 0x83 0x06 0x92 0x3f 0x4d 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x07 0x92 0x43 0x4d 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x92 0x41 0x40 0x0c 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3c 0x4d 0x92 0x3f 0x40 0x91 0x22 0x40 0x90 0x3e 0x40 0x92 0x41 0x40 0x93 0x3a 0x40 0x0c 0x90 0x3e 0x4d 0x06 0x80 0x07 0x90 0x3f 0x4d 0x06 0x80 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x43 0x4d 0x90 0x3e 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x90 0x3f 0x40 0x06 0x82 0x06 0x90 0x3f 0x4d 0x90 0x3e 0x40 0x0c 0x90 0x3e 0x4d 0x06 0x80 0x07 0x90 0x3c 0x4d 0x90 0x3c 0x40 0x91 0x24 0x40 0x93 0x3f 0x40 0x92 0x43 0x40 0x90 0x3c 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x93 0x3f 0x4d 0x06 0x83 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x92 0x43 0x4d 0x92 0x43 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x07 0x82 0x06 0x92 0x3e 0x4d 0x06 0x82 0x06 0x92 0x3c 0x4d 0x06 0x82 0x06 0x92 0x3e 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x90 0x3c 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x43 0x4d 0x92 0x43 0x40 0x80 0x07 0x82 0x06 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x06 0x82 0x06 0x92 0x3e 0x4d 0x90 0x48 0x40 0x06 0x82 0x06 0x92 0x3c 0x4d 0x90 0x4a 0x40 0x91 0x22 0x40 0x92 0x3e 0x40 0x93 0x41 0x40 0x0c 0x92 0x3e 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x07 0x82 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x93 0x43 0x4d 0x90 0x46 0x40 0x06 0x83 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x06 0x83 0x06 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3c 0x4d 0x06 0x83 0x07 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x06 0x83 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x93 0x43 0x4d 0x90 0x48 0x40 0x06 0x83 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x90 0x4a 0x40 0x06 0x83 0x07 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3c 0x4d 0x90 0x4b 0x40 0x91 0x1d 0x40 0x93 0x3c 0x40 0x92 0x41 0x40 0x06 0x83 0x06 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x06 0x83 0x06 0x92 0x41 0x4d 0x90 0x4a 0x40 0x06 0x82 0x06 0x92 0x43 0x4d 0x06 0x82 0x07 0x92 0x41 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x90 0x46 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x06 0x82 0x06 0x92 0x3c 0x4d 0x90 0x48 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x06 0x82 0x06 0x92 0x3f 0x4d 0x06 0x82 0x06 0x92 0x41 0x4d 0x90 0x43 0x40 0x07 0x82 0x06 0x90 0x43 0x4d 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x92 0x41 0x40 0x91 0x1f 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3c 0x4d 0x92 0x43 0x40 0x91 0x20 0x40 0x90 0x3c 0x40 0x93 0x3f 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x07 0x80 0x06 0x93 0x3f 0x4d 0x06 0x83 0x06 0x93 0x41 0x4d 0x93 0x41 0x40 0x82 0x06 0x83 0x06 0x93 0x43 0x4d 0x06 0x83 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x93 0x3f 0x40 0x06 0x83 0x06 0x93 0x3e 0x4d 0x07 0x83 0x06 0x93 0x3c 0x4d 0x91 0x22 0x40 0x93 0x3e 0x40 0x90 0x41 0x40 0x92 0x3a 0x40 0x0c 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x93 0x3e 0x40 0x0c 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x43 0x4d 0x93 0x3f 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x07 0x93 0x3f 0x4d 0x93 0x3e 0x40 0x0c 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3c 0x4d 0x90 0x43 0x40 0x91 0x27 0x40 0x92 0x3a 0x40 0x06 0x81 0x83 0x06 0x93 0x3e 0x4d 0x91 0x27 0x40 0x06 0x83 0x06 0x93 0x3f 0x4d 0x06 0x81 0x83 0x06 0x93 0x41 0x4d 0x91 0x27 0x40 0x06 0x83 0x07 0x90 0x43 0x4d 0x06 0x80 0x81 0x06 0x90 0x41 0x4d 0x91 0x27 0x40 0x06 0x80 0x06 0x90 0x3f 0x4d 0x93 0x43 0x40 0x06 0x80 0x81 0x06 0x90 0x3e 0x4d 0x91 0x27 0x40 0x06 0x80 0x81 0x06 0x90 0x3c 0x4d 0x93 0x43 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x91 0x1c 0x40 0x06 0x80 0x81 0x07 0x90 0x3f 0x4d 0x91 0x1b 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x93 0x44 0x40 0x06 0x80 0x81 0x06 0x90 0x43 0x4d 0x91 0x1b 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x93 0x46 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x81 0x06 0x90 0x3c 0x4d 0x93 0x46 0x40 0x91 0x26 0x40 0x92 0x3e 0x40 0x07 0x80 0x81 0x06 0x92 0x3e 0x4d 0x91 0x26 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x06 0x81 0x82 0x06 0x92 0x41 0x4d 0x91 0x26 0x40 0x06 0x82 0x06 0x92 0x43 0x4d 0x93 0x41 0x40 0x06 0x81 0x82 0x06 0x93 0x41 0x4d 0x91 0x26 0x40 0x06 0x83 0x06 0x93 0x3f 0x4d 0x07 0x81 0x83 0x06 0x93 0x3e 0x4d 0x91 0x26 0x40 0x06 0x81 0x83 0x06 0x93 0x3c 0x4d 0x06 0x83 0x06 0x93 0x3e 0x4d 0x90 0x41 0x40 0x91 0x1b 0x40 0x06 0x81 0x83 0x06 0x93 0x3f 0x4d 0x91 0x1a 0x40 0x06 0x83 0x06 0x90 0x41 0x4d 0x90 0x43 0x40 0x06 0x81 0x06 0x90 0x43 0x4d 0x91 0x1a 0x40 0x07 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x92 0x44 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x81 0x06 0x90 0x3c 0x4d 0x92 0x44 0x40 0x91 0x24 0x40 0x90 0x3c 0x40 0x93 0x38 0x40 0x06 0x80 0x81 0x06 0x90 0x3e 0x4d 0x91 0x24 0x40 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x81 0x07 0x90 0x41 0x4d 0x92 0x3f 0x40 0x91 0x24 0x40 0x06 0x80 0x06 0x90 0x43 0x4d 0x06 0x80 0x81 0x06 0x90 0x41 0x4d 0x91 0x24 0x40 0x06 0x80 0x06 0x92 0x3f 0x4d 0x06 0x81 0x82 0x06 0x92 0x3e 0x4d 0x91 0x24 0x40 0x06 0x81 0x82 0x06 0x92 0x3c 0x4d 0x06 0x82 0x07 0x92 0x3e 0x4d 0x91 0x1a 0x40 0x06 0x81 0x82 0x06 0x92 0x3f 0x4d 0x92 0x3f 0x40 0x91 0x18 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x81 0x82 0x06 0x92 0x43 0x4d 0x90 0x41 0x40 0x91 0x18 0x40 0x06 0x82 0x06 0x90 0x41 0x4d 0x91 0x24 0x40 0x06 0x80 0x06 0x90 0x3f 0x4d 0x92 0x43 0x40 0x91 0x18 0x40 0x06 0x80 0x07 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3c 0x4d 0x92 0x3f 0x40 0x91 0x1f 0x40 0x93 0x37 0x40 0x90 0x33 0x40 0x06 0x81 0x06 0x91 0x3e 0x4d 0x06 0x81 0x06 0x92 0x3f 0x4d 0x06 0x82 0x06 0x92 0x41 0x4d 0x91 0x1f 0x40 0x06 0x82 0x06 0x92 0x43 0x4d 0x06 0x81 0x82 0x06 0x92 0x41 0x4d 0x91 0x1f 0x40 0x07 0x81 0x82 0x06 0x92 0x3f 0x4d 0x91 0x1f 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x06 0x81 0x82 0x06 0x92 0x3c 0x4d 0x91 0x3f 0x40 0x90 0x3e 0x40 0x92 0x3a 0x40 0x93 0x35 0x40 0x0c 0x90 0x3e 0x4d 0x06 0x80 0x06 0x91 0x3f 0x4d 0x06 0x81 0x06 0x91 0x41 0x4d 0x90 0x16 0x40 0x07 0x80 0x81 0x06 0x91 0x43 0x4d 0x90 0x3f 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x06 0x81 0x06 0x90 0x3f 0x4d 0x90 0x3e 0x40 0x0c 0x90 0x3e 0x4d 0x91 0x16 0x40 0x06 0x80 0x81 0x06 0x90 0x3c 0x4d 0x91 0x43 0x40 0x93 0x3a 0x40 0x92 0x3f 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x07 0x80 0x06 0x92 0x3f 0x4d 0x06 0x82 0x06 0x92 0x41 0x4d 0x90 0x27 0x40 0x06 0x82 0x06 0x91 0x43 0x4d 0x06 0x80 0x81 0x06 0x91 0x41 0x4d 0x90 0x27 0x40 0x06 0x81 0x06 0x91 0x3f 0x4d 0x92 0x43 0x40 0x06 0x80 0x81 0x06 0x91 0x3e 0x4d 0x90 0x27 0x40 0x06 0x80 0x81 0x07 0x91 0x3c 0x4d 0x92 0x43 0x40 0x06 0x81 0x06 0x91 0x3e 0x4d 0x90 0x1c 0x40 0x06 0x80 0x81 0x06 0x91 0x3f 0x4d 0x90 0x1b 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x92 0x44 0x40 0x06 0x80 0x81 0x06 0x91 0x43 0x4d 0x90 0x1b 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x06 0x81 0x07 0x91 0x3f 0x4d 0x92 0x46 0x40 0x06 0x81 0x06 0x91 0x3e 0x4d 0x06 0x80 0x81 0x06 0x91 0x3c 0x4d 0x92 0x46 0x40 0x90 0x26 0x40 0x93 0x3e 0x40 0x06 0x80 0x81 0x06 0x93 0x3e 0x4d 0x90 0x26 0x40 0x06 0x83 0x06 0x93 0x3f 0x4d 0x06 0x80 0x83 0x06 0x93 0x41 0x4d 0x90 0x26 0x40 0x06 0x83 0x07 0x93 0x43 0x4d 0x92 0x41 0x40 0x06 0x80 0x83 0x06 0x92 0x41 0x4d 0x90 0x26 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x06 0x80 0x82 0x06 0x92 0x3e 0x4d 0x90 0x26 0x40 0x06 0x80 0x82 0x06 0x92 0x3c 0x4d 0x06 0x82 0x06 0x92 0x3e 0x4d 0x90 0x41 0x40 0x91 0x1b 0x40 0x06 0x81 0x82 0x06 0x92 0x3f 0x4d 0x91 0x1a 0x40 0x07 0x82 0x06 0x90 0x41 0x4d 0x90 0x43 0x40 0x06 0x81 0x06 0x90 0x43 0x4d 0x91 0x1a 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x92 0x44 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x81 0x06 0x90 0x3c 0x4d 0x92 0x44 0x40 0x91 0x24 0x40 0x90 0x3c 0x40 0x93 0x38 0x40 0x07 0x80 0x81 0x06 0x90 0x3e 0x4d 0x91 0x24 0x40 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x81 0x06 0x90 0x41 0x4d 0x92 0x3f 0x40 0x91 0x24 0x40 0x06 0x80 0x06 0x90 0x43 0x4d 0x06 0x80 0x81 0x06 0x90 0x41 0x4d 0x91 0x24 0x40 0x06 0x80 0x06 0x92 0x3f 0x4d 0x07 0x81 0x82 0x06 0x92 0x3e 0x4d 0x91 0x24 0x40 0x06 0x81 0x82 0x06 0x92 0x3c 0x4d 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x1a 0x40 0x06 0x81 0x82 0x06 0x92 0x3f 0x4d 0x92 0x3f 0x40 0x91 0x18 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x06 0x81 0x82 0x06 0x92 0x43 0x4d 0x90 0x41 0x40 0x91 0x18 0x40 0x06 0x82 0x07 0x90 0x41 0x4d 0x91 0x24 0x40 0x06 0x80 0x06 0x90 0x3f 0x4d 0x92 0x43 0x40 0x91 0x18 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3c 0x4d 0x92 0x3f 0x40 0x91 0x1f 0x40 0x93 0x37 0x40 0x90 0x33 0x40 0x06 0x81 0x06 0x91 0x3e 0x4d 0x06 0x81 0x06 0x92 0x3f 0x4d 0x06 0x82 0x07 0x92 0x41 0x4d 0x91 0x1f 0x40 0x06 0x82 0x06 0x92 0x43 0x4d 0x06 0x81 0x82 0x06 0x92 0x41 0x4d 0x91 0x1f 0x40 0x06 0x81 0x82 0x06 0x92 0x3f 0x4d 0x91 0x1f 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x06 0x81 0x82 0x06 0x92 0x3c 0x4d 0x91 0x3f 0x40 0x90 0x3e 0x40 0x92 0x3a 0x40 0x93 0x35 0x40 0x0d 0x90 0x3e 0x4d 0x06 0x80 0x06 0x91 0x3f 0x4d 0x06 0x81 0x06 0x91 0x41 0x4d 0x90 0x16 0x40 0x06 0x80 0x81 0x06 0x91 0x43 0x4d 0x90 0x3f 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x06 0x81 0x06 0x90 0x3f 0x4d 0x90 0x3e 0x40 0x0c 0x90 0x3e 0x4d 0x91 0x16 0x40 0x07 0x80 0x81 0x06 0x90 0x3f 0x4d 0x91 0x46 0x40 0x93 0x3d 0x40 0x92 0x42 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x92 0x42 0x4d 0x90 0x66 0x40 0x06 0x82 0x06 0x92 0x44 0x4d 0x80 0x06 0x82 0x06 0x91 0x46 0x4d 0x90 0x66 0x40 0x06 0x81 0x06 0x91 0x44 0x4d 0x92 0x2a 0x40 0x80 0x07 0x81 0x06 0x91 0x42 0x4d 0x90 0x46 0x40 0x06 0x81 0x82 0x06 0x91 0x41 0x4d 0x92 0x2a 0x40 0x06 0x81 0x82 0x06 0x91 0x3f 0x4d 0x90 0x46 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x92 0x1f 0x40 0x06 0x81 0x82 0x06 0x91 0x42 0x4d 0x92 0x1e 0x40 0x06 0x81 0x06 0x91 0x44 0x4d 0x90 0x47 0x40 0x07 0x81 0x82 0x06 0x91 0x46 0x4d 0x92 0x1e 0x40 0x06 0x81 0x06 0x91 0x44 0x4d 0x06 0x81 0x06 0x91 0x42 0x4d 0x90 0x49 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x06 0x81 0x82 0x06 0x91 0x3f 0x4d 0x90 0x49 0x40 0x92 0x29 0x40 0x93 0x41 0x40 0x06 0x81 0x82 0x06 0x93 0x41 0x4d 0x92 0x29 0x40 0x91 0x61 0x40 0x06 0x83 0x07 0x93 0x42 0x4d 0x91 0x66 0x40 0x06 0x82 0x83 0x06 0x93 0x44 0x4d 0x92 0x29 0x40 0x81 0x06 0x83 0x06 0x93 0x46 0x4d 0x90 0x44 0x40 0x91 0x66 0x40 0x06 0x82 0x83 0x06 0x90 0x44 0x4d 0x92 0x29 0x40 0x81 0x06 0x80 0x06 0x90 0x42 0x4d 0x91 0x5a 0x40 0x06 0x80 0x82 0x06 0x90 0x41 0x4d 0x92 0x29 0x40 0x91 0x66 0x40 0x06 0x80 0x82 0x07 0x90 0x3f 0x4d 0x81 0x06 0x80 0x06 0x90 0x41 0x4d 0x91 0x44 0x40 0x92 0x1e 0x40 0x93 0x66 0x40 0x06 0x80 0x82 0x06 0x90 0x42 0x4d 0x92 0x1d 0x40 0x93 0x5a 0x40 0x06 0x80 0x06 0x91 0x44 0x4d 0x91 0x46 0x40 0x93 0x61 0x40 0x06 0x82 0x06 0x91 0x46 0x4d 0x92 0x1d 0x40 0x93 0x66 0x40 0x06 0x81 0x06 0x91 0x44 0x4d 0x93 0x5a 0x40 0x06 0x81 0x07 0x91 0x42 0x4d 0x90 0x47 0x40 0x93 0x61 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x93 0x66 0x40 0x06 0x81 0x82 0x06 0x91 0x3f 0x4d 0x90 0x47 0x40 0x92 0x27 0x40 0x93 0x5a 0x40 0x91 0x3f 0x40 0x06 0x81 0x82 0x06 0x91 0x41 0x4d 0x92 0x27 0x40 0x93 0x61 0x40 0x06 0x81 0x06 0x91 0x42 0x4d 0x93 0x66 0x40 0x06 0x81 0x82 0x06 0x91 0x44 0x4d 0x90 0x42 0x40 0x92 0x27 0x40 0x83 0x06 0x81 0x06 0x91 0x46 0x4d 0x93 0x66 0x40 0x07 0x81 0x82 0x06 0x91 0x44 0x4d 0x92 0x27 0x40 0x83 0x06 0x81 0x06 0x90 0x42 0x4d 0x93 0x5a 0x40 0x06 0x80 0x82 0x06 0x90 0x41 0x4d 0x92 0x27 0x40 0x93 0x66 0x40 0x06 0x80 0x82 0x06 0x90 0x3f 0x4d 0x83 0x06 0x80 0x06 0x90 0x41 0x4d 0x92 0x1d 0x40 0x93 0x66 0x40 0x06 0x80 0x82 0x06 0x90 0x42 0x4d 0x90 0x42 0x40 0x92 0x1b 0x40 0x93 0x5a 0x40 0x07 0x80 0x06 0x90 0x44 0x4d 0x93 0x61 0x40 0x06 0x80 0x82 0x06 0x90 0x46 0x4d 0x91 0x44 0x40 0x92 0x1b 0x40 0x93 0x66 0x40 0x06 0x80 0x06 0x91 0x44 0x4d 0x92 0x27 0x40 0x93 0x5a 0x40 0x06 0x81 0x06 0x91 0x42 0x4d 0x90 0x46 0x40 0x92 0x1b 0x40 0x93 0x61 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x93 0x66 0x40 0x06 0x81 0x06 0x91 0x3f 0x4d 0x90 0x42 0x40 0x92 0x22 0x40 0x93 0x5a 0x40 0x91 0x3a 0x40 0x07 0x82 0x06 0x92 0x41 0x4d 0x93 0x61 0x40 0x06 0x82 0x06 0x90 0x42 0x4d 0x93 0x66 0x40 0x06 0x80 0x06 0x90 0x44 0x4d 0x92 0x22 0x40 0x83 0x06 0x80 0x06 0x90 0x46 0x4d 0x93 0x66 0x40 0x06 0x80 0x82 0x06 0x90 0x44 0x4d 0x92 0x22 0x40 0x83 0x06 0x80 0x82 0x06 0x90 0x42 0x4d 0x92 0x22 0x40 0x93 0x5a 0x40 0x06 0x80 0x07 0x90 0x41 0x4d 0x93 0x66 0x40 0x06 0x80 0x82 0x06 0x90 0x3f 0x4d 0x92 0x42 0x40 0x91 0x41 0x40 0x90 0x3d 0x40 0x93 0x38 0x40 0x0c 0x91 0x41 0x4d 0x06 0x81 0x06 0x92 0x42 0x4d 0x91 0x5a 0x40 0x06 0x82 0x06 0x92 0x44 0x4d 0x91 0x61 0x40 0x06 0x82 0x06 0x92 0x46 0x4d 0x91 0x66 0x40 0x06 0x82 0x07 0x92 0x44 0x4d 0x91 0x5a 0x40 0x06 0x82 0x06 0x92 0x42 0x4d 0x92 0x41 0x40 0x91 0x61 0x40 0x0c 0x92 0x41 0x4d 0x91 0x66 0x40 0x06 0x82 0x06 0x92 0x3c 0x4d 0x92 0x3c 0x40 0x91 0x3f 0x40 0x92 0x3c 0x40 0x91 0x3f 0x40 0x90 0x43 0x40 0x92 0x3c 0x40 0x83 0x06 0x82 0x06 0x92 0x3e 0x4d 0x06 0x82 0x06 0x91 0x3f 0x4d 0x06 0x81 0x07 0x91 0x41 0x4d 0x06 0x81 0x06 0x90 0x43 0x4d 0x90 0x43 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3c 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x07 0x80 0x06 0x90 0x3f 0x4d 0x91 0x3c 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x43 0x4d 0x90 0x43 0x40 0x81 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x91 0x48 0x40 0x07 0x80 0x06 0x90 0x3c 0x4d 0x91 0x46 0x40 0x92 0x22 0x40 0x90 0x3e 0x40 0x93 0x41 0x40 0x90 0x3e 0x40 0x93 0x41 0x40 0x0c 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x93 0x43 0x4d 0x91 0x41 0x40 0x06 0x83 0x06 0x91 0x41 0x4d 0x07 0x81 0x06 0x91 0x3f 0x4d 0x06 0x81 0x06 0x91 0x3e 0x4d 0x06 0x81 0x06 0x91 0x3c 0x4d 0x06 0x81 0x06 0x91 0x3e 0x4d 0x06 0x81 0x06 0x91 0x3f 0x4d 0x06 0x81 0x06 0x91 0x41 0x4d 0x06 0x81 0x07 0x91 0x43 0x4d 0x91 0x43 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x06 0x81 0x06 0x91 0x3f 0x4d 0x06 0x81 0x06 0x91 0x3e 0x4d 0x90 0x44 0x40 0x06 0x81 0x06 0x91 0x3c 0x4d 0x90 0x43 0x40 0x92 0x1d 0x40 0x91 0x3c 0x40 0x93 0x41 0x40 0x91 0x3c 0x40 0x93 0x41 0x40 0x06 0x81 0x06 0x91 0x3e 0x4d 0x06 0x81 0x07 0x91 0x3f 0x4d 0x06 0x81 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x90 0x43 0x4d 0x90 0x3f 0x40 0x0c 0x91 0x41 0x4d 0x06 0x81 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x07 0x90 0x3c 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x43 0x4d 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x90 0x3c 0x40 0x92 0x1f 0x40 0x0d 0x91 0x3e 0x4d 0x91 0x3e 0x40 0x80 0x06 0x81 0x06 0x91 0x3c 0x4d 0x90 0x3f 0x40 0x92 0x20 0x40 0x93 0x3c 0x40 0x90 0x3f 0x40 0x91 0x38 0x40 0x93 0x3c 0x40 0x90 0x3f 0x40 0x91 0x38 0x40 0x06 0x83 0x06 0x93 0x3e 0x4d 0x06 0x83 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x43 0x4d 0x07 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x90 0x41 0x40 0x0c 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3c 0x4d 0x90 0x3f 0x40 0x92 0x22 0x40 0x91 0x3e 0x40 0x90 0x41 0x40 0x93 0x3a 0x40 0x91 0x3e 0x40 0x90 0x41 0x40 0x93 0x3a 0x40 0x0c 0x91 0x3e 0x4d 0x06 0x81 0x06 0x91 0x3f 0x4d 0x07 0x81 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x43 0x4d 0x91 0x3e 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x91 0x3f 0x40 0x06 0x80 0x06 0x91 0x3f 0x4d 0x91 0x3e 0x40 0x0c 0x91 0x3e 0x4d 0x06 0x81 0x06 0x91 0x3c 0x4d 0x91 0x3c 0x40 0x92 0x24 0x40 0x93 0x3f 0x40 0x90 0x43 0x40 0x91 0x3c 0x40 0x93 0x3f 0x40 0x90 0x43 0x40 0x91 0x3c 0x40 0x06 0x81 0x07 0x91 0x3e 0x4d 0x06 0x81 0x06 0x93 0x3f 0x4d 0x06 0x83 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x90 0x43 0x4d 0x90 0x43 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x07 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3c 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x91 0x3c 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x43 0x4d 0x90 0x43 0x40 0x81 0x06 0x80 0x07 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x3e 0x4d 0x91 0x48 0x40 0x06 0x80 0x06 0x90 0x3c 0x4d 0x91 0x4a 0x40 0x92 0x22 0x40 0x90 0x3e 0x40 0x93 0x41 0x40 0x90 0x3e 0x40 0x93 0x41 0x40 0x0c 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x93 0x41 0x4d 0x07 0x83 0x06 0x93 0x43 0x4d 0x91 0x46 0x40 0x06 0x83 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x06 0x83 0x06 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3c 0x4d 0x06 0x83 0x06 0x93 0x3e 0x4d 0x07 0x83 0x06 0x93 0x3f 0x4d 0x06 0x83 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x93 0x43 0x4d 0x91 0x48 0x40 0x06 0x83 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x91 0x4a 0x40 0x06 0x83 0x06 0x93 0x3e 0x4d 0x07 0x83 0x06 0x93 0x3c 0x4d 0x91 0x4b 0x40 0x92 0x1d 0x40 0x93 0x3c 0x40 0x90 0x41 0x40 0x93 0x3c 0x40 0x90 0x41 0x40 0x06 0x83 0x06 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x06 0x83 0x06 0x90 0x41 0x4d 0x91 0x4a 0x40 0x06 0x80 0x06 0x90 0x43 0x4d 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x07 0x90 0x3f 0x4d 0x91 0x46 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3c 0x4d 0x91 0x48 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x06 0x80 0x06 0x90 0x41 0x4d 0x91 0x43 0x40 0x06 0x80 0x07 0x91 0x43 0x4d 0x06 0x81 0x06 0x91 0x41 0x4d 0x06 0x81 0x06 0x91 0x3f 0x4d 0x90 0x41 0x40 0x92 0x1f 0x40 0x06 0x81 0x06 0x91 0x3e 0x4d 0x06 0x81 0x06 0x91 0x3c 0x4d 0x90 0x43 0x40 0x92 0x20 0x40 0x91 0x3c 0x40 0x93 0x3f 0x40 0x91 0x3c 0x40 0x93 0x3f 0x40 0x06 0x81 0x06 0x91 0x3e 0x4d 0x06 0x81 0x07 0x93 0x3f 0x4d 0x06 0x83 0x06 0x93 0x41 0x4d 0x93 0x41 0x40 0x80 0x06 0x83 0x06 0x93 0x43 0x4d 0x06 0x83 0x06 0x93 0x41 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x93 0x3f 0x40 0x06 0x83 0x06 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3c 0x4d 0x92 0x22 0x40 0x93 0x3e 0x40 0x90 0x41 0x40 0x91 0x3a 0x40 0x93 0x3e 0x40 0x90 0x41 0x40 0x91 0x3a 0x40 0x0d 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3f 0x4d 0x93 0x3e 0x40 0x0c 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x43 0x4d 0x93 0x3f 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x93 0x3f 0x4d 0x93 0x3e 0x40 0x0d 0x93 0x3e 0x4d 0x06 0x83 0x06 0x93 0x3c 0x4d 0x90 0x43 0x40 0x92 0x27 0x40 0x91 0x3a 0x40 0x91 0x3a 0x40 0x06 0x82 0x83 0x06 0x93 0x3e 0x4d 0x92 0x27 0x40 0x06 0x83 0x06 0x93 0x3f 0x4d 0x06 0x82 0x83 0x06 0x93 0x41 0x4d 0x92 0x27 0x40 0x06 0x83 0x06 0x90 0x43 0x4d 0x93 0x63 0x40 0x07 0x80 0x82 0x06 0x90 0x41 0x4d 0x92 0x27 0x40 0x83 0x06 0x80 0x06 0x90 0x3f 0x4d 0x93 0x43 0x40 0x06 0x80 0x82 0x06 0x90 0x3e 0x4d 0x92 0x27 0x40 0x06 0x80 0x82 0x06 0x90 0x3c 0x4d 0x93 0x43 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x92 0x1c 0x40 0x06 0x80 0x82 0x06 0x90 0x3f 0x4d 0x92 0x1b 0x40 0x06 0x80 0x07 0x90 0x41 0x4d 0x93 0x44 0x40 0x06 0x80 0x82 0x06 0x90 0x43 0x4d 0x92 0x1b 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x06 0x80 0x06 0x90 0x3f 0x4d 0x93 0x46 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x06 0x80 0x82 0x06 0x90 0x3c 0x4d 0x93 0x46 0x40 0x92 0x26 0x40 0x91 0x3e 0x40 0x91 0x3e 0x40 0x06 0x80 0x82 0x07 0x91 0x3e 0x4d 0x92 0x26 0x40 0x90 0x5e 0x40 0x06 0x81 0x06 0x91 0x3f 0x4d 0x90 0x63 0x40 0x06 0x81 0x82 0x06 0x91 0x41 0x4d 0x92 0x26 0x40 0x80 0x06 0x81 0x06 0x91 0x43 0x4d 0x93 0x41 0x40 0x90 0x63 0x40 0x06 0x81 0x82 0x06 0x93 0x41 0x4d 0x92 0x26 0x40 0x80 0x06 0x83 0x06 0x93 0x3f 0x4d 0x90 0x57 0x40 0x06 0x82 0x83 0x07 0x93 0x3e 0x4d 0x92 0x26 0x40 0x90 0x63 0x40 0x06 0x82 0x83 0x06 0x93 0x3c 0x4d 0x80 0x06 0x83 0x06 0x93 0x3e 0x4d 0x90 0x41 0x40 0x92 0x1b 0x40 0x91 0x63 0x40 0x06 0x82 0x83 0x06 0x93 0x3f 0x4d 0x92 0x1a 0x40 0x91 0x57 0x40 0x06 0x83 0x06 0x90 0x41 0x4d 0x90 0x43 0x40 0x91 0x5e 0x40 0x06 0x82 0x06 0x90 0x43 0x4d 0x92 0x1a 0x40 0x91 0x63 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x91 0x57 0x40 0x07 0x80 0x06 0x90 0x3f 0x4d 0x93 0x44 0x40 0x91 0x5e 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x91 0x63 0x40 0x06 0x80 0x82 0x06 0x90 0x3c 0x4d 0x93 0x44 0x40 0x92 0x24 0x40 0x91 0x57 0x40 0x90 0x3c 0x40 0x90 0x3c 0x40 0x06 0x80 0x82 0x06 0x90 0x3e 0x4d 0x92 0x24 0x40 0x91 0x5e 0x40 0x06 0x80 0x06 0x90 0x3f 0x4d 0x91 0x63 0x40 0x06 0x80 0x82 0x06 0x90 0x41 0x4d 0x93 0x3f 0x40 0x92 0x24 0x40 0x81 0x07 0x80 0x06 0x90 0x43 0x4d 0x91 0x63 0x40 0x06 0x80 0x82 0x06 0x90 0x41 0x4d 0x92 0x24 0x40 0x81 0x06 0x80 0x06 0x93 0x3f 0x4d 0x91 0x57 0x40 0x06 0x82 0x83 0x06 0x93 0x3e 0x4d 0x92 0x24 0x40 0x91 0x63 0x40 0x06 0x82 0x83 0x06 0x93 0x3c 0x4d 0x81 0x06 0x83 0x06 0x93 0x3e 0x4d 0x92 0x1a 0x40 0x91 0x63 0x40 0x07 0x82 0x83 0x06 0x93 0x3f 0x4d 0x93 0x3f 0x40 0x92 0x18 0x40 0x91 0x57 0x40 0x06 0x83 0x06 0x93 0x41 0x4d 0x91 0x5e 0x40 0x06 0x82 0x83 0x06 0x93 0x43 0x4d 0x90 0x41 0x40 0x92 0x18 0x40 0x91 0x63 0x40 0x06 0x83 0x06 0x90 0x41 0x4d 0x92 0x24 0x40 0x91 0x57 0x40 0x06 0x80 0x06 0x90 0x3f 0x4d 0x93 0x43 0x40 0x92 0x18 0x40 0x91 0x5e 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x91 0x63 0x40 0x06 0x80 0x07 0x90 0x3c 0x4d 0x93 0x3f 0x40 0x92 0x1f 0x40 0x91 0x57 0x40 0x90 0x37 0x40 0x90 0x37 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x93 0x3f 0x4d 0x91 0x63 0x40 0x06 0x83 0x06 0x93 0x41 0x4d 0x92 0x1f 0x40 0x81 0x06 0x83 0x06 0x93 0x43 0x4d 0x91 0x63 0x40 0x06 0x82 0x83 0x06 0x93 0x41 0x4d 0x92 0x1f 0x40 0x81 0x06 0x82 0x83 0x07 0x93 0x3f 0x4d 0x92 0x1f 0x40 0x91 0x57 0x40 0x06 0x83 0x06 0x93 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x83 0x06 0x93 0x3c 0x4d 0x92 0x3f 0x40 0x90 0x3e 0x40 0x91 0x3a 0x40 0x93 0x35 0x40 0x90 0x3e 0x40 0x91 0x3a 0x40 0x93 0x35 0x40 0x0c 0x90 0x3e 0x4d 0x06 0x80 0x06 0x92 0x3f 0x4d 0x90 0x57 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x90 0x5e 0x40 0x06 0x82 0x07 0x92 0x43 0x4d 0x90 0x63 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x90 0x57 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x92 0x3e 0x40 0x90 0x5e 0x40 0x0c 0x92 0x3e 0x4d 0x90 0x63 0x40 0x06 0x82 0x06 0x92 0x3c 0x4d 0x90 0x57 0x40 0x93 0x3a 0x40 0x91 0x3f 0x40 0x93 0x3a 0x40 0x91 0x3f 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x90 0x5e 0x40 0x06 0x82 0x06 0x91 0x3f 0x4d 0x90 0x63 0x40 0x07 0x81 0x06 0x91 0x41 0x4d 0x92 0x27 0x40 0x80 0x06 0x81 0x06 0x91 0x43 0x4d 0x90 0x63 0x40 0x06 0x81 0x82 0x06 0x91 0x41 0x4d 0x92 0x27 0x40 0x80 0x06 0x81 0x06 0x91 0x3f 0x4d 0x90 0x43 0x40 0x06 0x81 0x82 0x06 0x91 0x3e 0x4d 0x92 0x27 0x40 0x06 0x81 0x82 0x06 0x91 0x3c 0x4d 0x90 0x43 0x40 0x07 0x81 0x06 0x91 0x3e 0x4d 0x92 0x1c 0x40 0x06 0x81 0x82 0x06 0x91 0x3f 0x4d 0x92 0x1b 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x90 0x44 0x40 0x06 0x81 0x82 0x06 0x91 0x43 0x4d 0x92 0x1b 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x06 0x81 0x06 0x91 0x3f 0x4d 0x90 0x46 0x40 0x07 0x81 0x06 0x91 0x3e 0x4d 0x06 0x81 0x82 0x06 0x91 0x3c 0x4d 0x90 0x46 0x40 0x92 0x26 0x40 0x93 0x3e 0x40 0x93 0x3e 0x40 0x06 0x81 0x82 0x06 0x93 0x3e 0x4d 0x92 0x26 0x40 0x91 0x5e 0x40 0x06 0x83 0x06 0x93 0x3f 0x4d 0x91 0x63 0x40 0x06 0x82 0x83 0x06 0x93 0x41 0x4d 0x92 0x26 0x40 0x81 0x06 0x83 0x06 0x93 0x43 0x4d 0x90 0x41 0x40 0x91 0x63 0x40 0x06 0x82 0x83 0x07 0x90 0x41 0x4d 0x92 0x26 0x40 0x81 0x06 0x80 0x06 0x90 0x3f 0x4d 0x91 0x57 0x40 0x06 0x80 0x82 0x06 0x90 0x3e 0x4d 0x92 0x26 0x40 0x91 0x63 0x40 0x06 0x80 0x82 0x06 0x90 0x3c 0x4d 0x81 0x06 0x80 0x06 0x90 0x3e 0x4d 0x91 0x41 0x40 0x92 0x1b 0x40 0x93 0x63 0x40 0x06 0x80 0x82 0x06 0x90 0x3f 0x4d 0x92 0x1a 0x40 0x93 0x57 0x40 0x06 0x80 0x07 0x91 0x41 0x4d 0x91 0x43 0x40 0x93 0x5e 0x40 0x06 0x82 0x06 0x91 0x43 0x4d 0x92 0x1a 0x40 0x93 0x63 0x40 0x06 0x81 0x06 0x91 0x41 0x4d 0x93 0x57 0x40 0x06 0x81 0x06 0x91 0x3f 0x4d 0x90 0x44 0x40 0x93 0x5e 0x40 0x06 0x81 0x06 0x91 0x3e 0x4d 0x93 0x63 0x40 0x06 0x81 0x82 0x06 0x91 0x3c 0x4d 0x90 0x44 0x40 0x92 0x24 0x40 0x93 0x57 0x40 0x91 0x3c 0x40 0x91 0x3c 0x40 0x06 0x81 0x82 0x07 0x91 0x3e 0x4d 0x92 0x24 0x40 0x93 0x5e 0x40 0x06 0x81 0x06 0x91 0x3f 0x4d 0x93 0x63 0x40 0x06 0x81 0x82 0x06 0x91 0x41 0x4d 0x90 0x3f 0x40 0x92 0x24 0x40 0x83 0x06 0x81 0x06 0x91 0x43 0x4d 0x93 0x63 0x40 0x06 0x81 0x82 0x06 0x91 0x41 0x4d 0x92 0x24 0x40 0x83 0x06 0x81 0x06 0x90 0x3f 0x4d 0x93 0x57 0x40 0x06 0x80 0x82 0x06 0x90 0x3e 0x4d 0x92 0x24 0x40 0x93 0x63 0x40 0x07 0x80 0x82 0x06 0x90 0x3c 0x4d 0x83 0x06 0x80 0x06 0x90 0x3e 0x4d 0x92 0x1a 0x40 0x93 0x63 0x40 0x06 0x80 0x82 0x06 0x90 0x3f 0x4d 0x90 0x3f 0x40 0x92 0x18 0x40 0x93 0x57 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x93 0x5e 0x40 0x06 0x80 0x82 0x06 0x90 0x43 0x4d 0x91 0x41 0x40 0x92 0x18 0x40 0x93 0x63 0x40 0x06 0x80 0x06 0x91 0x41 0x4d 0x92 0x24 0x40 0x93 0x57 0x40 0x07 0x81 0x06 0x91 0x3f 0x4d 0x90 0x43 0x40 0x92 0x18 0x40 0x93 0x5e 0x40 0x06 0x81 0x06 0x91 0x3e 0x4d 0x93 0x63 0x40 0x06 0x81 0x06 0x91 0x3c 0x4d 0x90 0x3f 0x40 0x92 0x1f 0x40 0x93 0x57 0x40 0x91 0x37 0x40 0x91 0x37 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x93 0x5e 0x40 0x06 0x82 0x06 0x90 0x3f 0x4d 0x93 0x63 0x40 0x06 0x80 0x06 0x90 0x41 0x4d 0x92 0x1f 0x40 0x83 0x07 0x80 0x06 0x90 0x43 0x4d 0x93 0x63 0x40 0x06 0x80 0x82 0x06 0x90 0x41 0x4d 0x92 0x1f 0x40 0x83 0x06 0x80 0x82 0x06 0x90 0x3f 0x4d 0x92 0x1f 0x40 0x93 0x57 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x93 0x63 0x40 0x06 0x80 0x82 0x06 0x90 0x3c 0x4d 0x92 0x3f 0x40 0x91 0x3e 0x40 0x90 0x3a 0x40 0x93 0x35 0x40 0x91 0x3e 0x40 0x90 0x3a 0x40 0x93 0x35 0x40 0x0c 0x91 0x3e 0x4d 0x06 0x81 0x07 0x92 0x3f 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x92 0x43 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x92 0x3e 0x40 0x91 0x5e 0x40 0x0c 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x07 0x92 0x3c 0x4d 0x91 0x57 0x40 0x80 0x83 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x81 0x06 0x82 0x06 0x92 0x43 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x81 0x06 0x82 0x07 0x92 0x3f 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x3c 0x4d 0x81 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x92 0x43 0x4d 0x91 0x63 0x40 0x07 0x82 0x06 0x92 0x41 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x3c 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x63 0x40 0x07 0x82 0x06 0x92 0x41 0x4d 0x81 0x06 0x82 0x06 0x92 0x43 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x81 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x3c 0x4d 0x81 0x07 0x82 0x06 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x92 0x43 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x5e 0x40 0x06 0x82 0x07 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x3c 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x81 0x06 0x82 0x06 0x92 0x43 0x4d 0x91 0x63 0x40 0x06 0x82 0x07 0x92 0x41 0x4d 0x81 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x3c 0x4d 0x81 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x57 0x40 0x06 0x82 0x07 0x92 0x41 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x92 0x43 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x3c 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x5e 0x40 0x07 0x82 0x06 0x92 0x3f 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x81 0x06 0x82 0x06 0x92 0x43 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x81 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x63 0x40 0x07 0x82 0x06 0x92 0x3c 0x4d 0x81 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x3f 0x4d 0x91 0x57 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x92 0x43 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x92 0x41 0x4d 0x91 0x57 0x40 0x06 0x82 0x07 0x92 0x3f 0x4d 0x91 0x5e 0x40 0x06 0x82 0x06 0x92 0x3e 0x4d 0x91 0x63 0x40 0x06 0x82 0x06 0x93 0x49 0x40 0x90 0x40 0x40 0x91 0x45 0x40 0x91 0x45 0x40 0x93 0x49 0x40 0x90 0x40 0x40 0x91 0x45 0x40 0x0c 0x81 0x0c 0x90 0x40 0x40 0x0c 0x90 0x40 0x40 0x0d 0x90 0x40 0x40 0x0c 0x80 0x18 0x90 0x3d 0x40 0x0c 0x91 0x47 0x40 0x92 0x40 0x40 0x93 0x44 0x40 0x90 0x3d 0x40 0x91 0x47 0x40 0x92 0x40 0x40 0x93 0x44 0x40 0x0c 0x80 0x0d 0x90 0x3d 0x40 0x0c 0x80 0x0c 0x90 0x3e 0x40 0x0c 0x92 0x40 0x40 0x80 0x0c 0x82 0x18 0x93 0x3d 0x40 0x90 0x42 0x40 0x91 0x45 0x40 0x91 0x45 0x40 0x93 0x3d 0x40 0x90 0x42 0x40 0x91 0x45 0x40 0x0d 0x81 0x0c 0x91 0x40 0x40 0x0c 0x91 0x40 0x40 0x0c 0x91 0x40 0x40 0x0c 0x81 0x19 0x93 0x3d 0x40 0x0c 0x91 0x3b 0x40 0x90 0x44 0x40 0x92 0x40 0x40 0x93 0x3d 0x40 0x91 0x3b 0x40 0x90 0x44 0x40 0x92 0x40 0x40 0x83 0x18 0x93 0x3d 0x40 0x0c 0x83 0x0c 0x93 0x3d 0x40 0x0d 0x93 0x3e 0x40 0x0c 0x92 0x40 0x40 0x83 0x0c 0x92 0x42 0x40 0x0c 0x90 0x45 0x40 0x91 0x3e 0x40 0x92 0x42 0x40 0x90 0x45 0x40 0x91 0x3e 0x40 0x92 0x42 0x40 0x18 0x82 0x0d 0x92 0x42 0x40 0x0c 0x82 0x18 0x92 0x44 0x40 0x0c 0x90 0x45 0x40 0x82 0x0c 0x92 0x45 0x40 0x90 0x3d 0x40 0x91 0x40 0x40 0x91 0x40 0x40 0x92 0x45 0x40 0x90 0x3d 0x40 0x91 0x40 0x40 0x19 0x81 0x0c 0x91 0x40 0x40 0x0c 0x81 0x18 0x92 0x45 0x40 0x0d 0x82 0x0c 0x91 0x3f 0x40 0x90 0x47 0x40 0x92 0x42 0x40 0x91 0x3f 0x40 0x91 0x3f 0x40 0x90 0x47 0x40 0x92 0x42 0x40 0x18 0x81 0x0c 0x91 0x3f 0x40 0x0c 0x81 0x19 0x91 0x41 0x40 0x0c 0x92 0x42 0x40 0x81 0x0c 0x92 0x41 0x40 0x90 0x44 0x40 0x91 0x49 0x40 0x90 0x44 0x40 0x92 0x41 0x40 0x90 0x44 0x40 0x91 0x49 0x40 0x61 0x93 0x21 0x40 0x91 0x49 0x40 0x90 0x40 0x40 0x92 0x45 0x40 0x92 0x45 0x40 0x91 0x49 0x40 0x90 0x40 0x40 0x92 0x45 0x40 0x0c 0x93 0x2d 0x40 0x82 0x0d 0x90 0x40 0x40 0x83 0x0c 0x93 0x2d 0x40 0x90 0x40 0x40 0x06 0x83 0x06 0x93 0x21 0x40 0x90 0x40 0x40 0x0c 0x93 0x2d 0x40 0x80 0x0c 0x83 0x0c 0x93 0x2d 0x40 0x90 0x3d 0x40 0x06 0x83 0x07 0x93 0x20 0x40 0x92 0x47 0x40 0x91 0x40 0x40 0x90 0x3d 0x40 0x92 0x47 0x40 0x91 0x40 0x40 0x0c 0x93 0x2c 0x40 0x80 0x0c 0x90 0x3d 0x40 0x83 0x0c 0x93 0x2c 0x40 0x80 0x06 0x83 0x06 0x93 0x20 0x40 0x90 0x3e 0x40 0x0c 0x93 0x2c 0x40 0x91 0x40 0x40 0x80 0x0d 0x81 0x83 0x0c 0x93 0x2c 0x40 0x06 0x83 0x06 0x93 0x1e 0x40 0x91 0x3d 0x40 0x90 0x42 0x40 0x92 0x45 0x40 0x92 0x45 0x40 0x91 0x3d 0x40 0x90 0x42 0x40 0x92 0x45 0x40 0x0c 0x93 0x2a 0x40 0x82 0x0c 0x92 0x40 0x40 0x83 0x0c 0x93 0x2a 0x40 0x92 0x40 0x40 0x06 0x83 0x07 0x93 0x1e 0x40 0x92 0x40 0x40 0x0c 0x93 0x2a 0x40 0x82 0x0c 0x83 0x0c 0x93 0x2a 0x40 0x91 0x3d 0x40 0x06 0x83 0x06 0x93 0x19 0x40 0x92 0x3b 0x40 0x90 0x44 0x40 0x91 0x40 0x40 0x92 0x3b 0x40 0x90 0x44 0x40 0x91 0x40 0x40 0x0c 0x93 0x25 0x40 0x0c 0x93 0x3d 0x40 0x0d 0x83 0x0c 0x93 0x3d 0x40 0x0c 0x93 0x3e 0x40 0x0c 0x91 0x40 0x40 0x83 0x0c 0x93 0x25 0x40 0x91 0x42 0x40 0x06 0x83 0x06 0x93 0x1a 0x40 0x90 0x45 0x40 0x92 0x3e 0x40 0x91 0x42 0x40 0x90 0x45 0x40 0x92 0x3e 0x40 0x91 0x42 0x40 0x0d 0x93 0x26 0x40 0x0c 0x81 0x83 0x0c 0x93 0x26 0x40 0x91 0x42 0x40 0x06 0x83 0x06 0x93 0x1a 0x40 0x81 0x0c 0x93 0x26 0x40 0x0c 0x91 0x44 0x40 0x83 0x0d 0x93 0x26 0x40 0x90 0x45 0x40 0x81 0x06 0x83 0x06 0x93 0x15 0x40 0x91 0x45 0x40 0x90 0x3d 0x40 0x92 0x40 0x40 0x92 0x40 0x40 0x91 0x45 0x40 0x90 0x3d 0x40 0x92 0x40 0x40 0x0c 0x93 0x21 0x40 0x0c 0x82 0x83 0x0c 0x93 0x21 0x40 0x92 0x40 0x40 0x0c 0x82 0x06 0x83 0x07 0x93 0x15 0x40 0x0c 0x93 0x21 0x40 0x91 0x45 0x40 0x06 0x83 0x06 0x93 0x21 0x40 0x81 0x06 0x83 0x06 0x93 0x17 0x40 0x92 0x3f 0x40 0x90 0x47 0x40 0x91 0x42 0x40 0x92 0x3f 0x40 0x92 0x3f 0x40 0x90 0x47 0x40 0x91 0x42 0x40 0x0c 0x93 0x23 0x40 0x0c 0x82 0x83 0x0d 0x93 0x23 0x40 0x92 0x3f 0x40 0x06 0x83 0x06 0x93 0x17 0x40 0x82 0x0c 0x93 0x23 0x40 0x0c 0x92 0x41 0x40 0x83 0x0c 0x93 0x23 0x40 0x91 0x42 0x40 0x82 0x06 0x83 0x06 0x93 0x19 0x40 0x91 0x41 0x40 0x90 0x44 0x40 0x92 0x49 0x40 0x90 0x44 0x40 0x91 0x41 0x40 0x90 0x44 0x40 0x92 0x49 0x40 0x0d 0x93 0x25 0x40 0x0c 0x83 0x0c 0x93 0x25 0x40 0x0c 0x93 0x1d 0x40 0x0c 0x93 0x29 0x40 0x0c 0x93 0x2a 0x40 0x0c 0x93 0x2c 0x40 0x0d 0x93 0x2e 0x40 0x92 0x41 0x40 0x90 0x46 0x40 0x91 0x3e 0x40 0x92 0x41 0x40 0x90 0x46 0x40 0x91 0x3e 0x40 0x06 0x83 0x06 0x93 0x39 0x4d 0x06 0x83 0x06 0x93 0x3a 0x4d 0x06 0x83 0x06 0x93 0x3c 0x4d 0x06 0x83 0x06 0x91 0x3e 0x4d 0x93 0x6a 0x40 0x06 0x81 0x06 0x91 0x3c 0x4d 0x83 0x07 0x81 0x06 0x91 0x3a 0x4d 0x93 0x4a 0x40 0x06 0x81 0x06 0x91 0x39 0x4d 0x06 0x81 0x06 0x91 0x37 0x4d 0x93 0x4a 0x40 0x06 0x81 0x06 0x91 0x39 0x4d 0x06 0x81 0x06 0x91 0x3a 0x4d 0x06 0x81 0x06 0x91 0x3c 0x4d 0x93 0x4b 0x40 0x07 0x81 0x06 0x91 0x3e 0x4d 0x06 0x81 0x06 0x91 0x3c 0x4d 0x06 0x81 0x06 0x91 0x3a 0x4d 0x93 0x4d 0x40 0x06 0x81 0x06 0x91 0x39 0x4d 0x06 0x81 0x06 0x91 0x37 0x4d 0x93 0x4d 0x40 0x90 0x45 0x40 0x92 0x41 0x40 0x90 0x45 0x40 0x92 0x41 0x40 0x06 0x81 0x06 0x91 0x39 0x4d 0x06 0x81 0x07 0x91 0x3a 0x4d 0x06 0x81 0x06 0x91 0x3c 0x4d 0x06 0x81 0x06 0x91 0x3e 0x4d 0x93 0x48 0x40 0x06 0x81 0x06 0x91 0x3c 0x4d 0x06 0x81 0x06 0x91 0x3a 0x4d 0x06 0x81 0x06 0x91 0x39 0x4d 0x06 0x81 0x07 0x91 0x37 0x4d 0x06 0x81 0x06 0x91 0x39 0x4d 0x93 0x48 0x40 0x06 0x81 0x06 0x91 0x3a 0x4d 0x06 0x81 0x06 0x91 0x3c 0x4d 0x93 0x4a 0x40 0x06 0x81 0x06 0x91 0x3e 0x4d 0x06 0x81 0x06 0x91 0x3c 0x4d 0x06 0x81 0x07 0x91 0x3a 0x4d 0x93 0x4b 0x40 0x06 0x81 0x06 0x91 0x39 0x4d 0x06 0x81 0x06 0x91 0x37 0x4d 0x93 0x4b 0x40 0x92 0x43 0x40 0x90 0x3f 0x40 0x92 0x43 0x40 0x90 0x3f 0x40 0x06 0x81 0x06 0x91 0x39 0x4d 0x06 0x81 0x06 0x91 0x3a 0x4d 0x06 0x81 0x06 0x91 0x3c 0x4d 0x93 0x46 0x40 0x06 0x81 0x06 0x91 0x3e 0x4d 0x07 0x81 0x06 0x91 0x3c 0x4d 0x06 0x81 0x06 0x91 0x3a 0x4d 0x06 0x81 0x06 0x91 0x39 0x4d 0x06 0x81 0x06 0x91 0x37 0x4d 0x06 0x81 0x06 0x91 0x39 0x4d 0x06 0x81 0x06 0x91 0x3a 0x4d 0x93 0x46 0x40 0x07 0x81 0x06 0x91 0x3c 0x4d 0x06 0x81 0x06 0x91 0x3e 0x4d 0x93 0x48 0x40 0x06 0x81 0x06 0x91 0x3c 0x4d 0x06 0x81 0x06 0x91 0x3a 0x4d 0x93 0x4a 0x40 0x06 0x81 0x06 0x91 0x39 0x4d 0x06 0x81 0x06 0x91 0x37 0x4d 0x93 0x46 0x40 0x90 0x3e 0x40 0x92 0x3a 0x40 0x90 0x3e 0x40 0x92 0x3a 0x40 0x07 0x81 0x06 0x91 0x39 0x4d 0x06 0x81 0x06 0x92 0x3a 0x4d 0x91 0x6a 0x40 0x06 0x82 0x06 0x92 0x3c 0x4d 0x81 0x06 0x82 0x06 0x90 0x3e 0x4d 0x91 0x6a 0x40 0x06 0x80 0x06 0x90 0x3c 0x4d 0x92 0x26 0x40 0x81 0x06 0x80 0x82 0x06 0x90 0x3a 0x4d 0x92 0x26 0x40 0x91 0x5e 0x40 0x06 0x80 0x07 0x90 0x39 0x4d 0x91 0x6a 0x40 0x06 0x80 0x82 0x06 0x90 0x37 0x4d 0x93 0x46 0x40 0x92 0x1d 0x40 0x91 0x45 0x40 0x91 0x45 0x40 0x06 0x80 0x06 0x90 0x39 0x4d 0x92 0x29 0x40 0x06 0x80 0x06 0x90 0x3a 0x4d 0x92 0x5e 0x40 0x06 0x80 0x06 0x90 0x3c 0x4d 0x92 0x65 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x93 0x46 0x40 0x92 0x6a 0x40 0x06 0x80 0x07 0x90 0x3c 0x4d 0x92 0x5e 0x40 0x06 0x80 0x06 0x90 0x3a 0x4d 0x91 0x45 0x40 0x92 0x65 0x40 0x83 0x06 0x80 0x06 0x90 0x39 0x4d 0x93 0x1d 0x40 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x37 0x4d 0x91 0x4a 0x40 0x93 0x2e 0x40 0x92 0x5e 0x40 0x06 0x80 0x83 0x06 0x90 0x39 0x4d 0x93 0x2e 0x40 0x92 0x65 0x40 0x06 0x80 0x06 0x90 0x3a 0x4d 0x92 0x6a 0x40 0x06 0x80 0x83 0x07 0x90 0x3c 0x4d 0x93 0x2e 0x40 0x82 0x06 0x80 0x06 0x90 0x3e 0x4d 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x3c 0x4d 0x93 0x2e 0x40 0x82 0x06 0x80 0x06 0x90 0x3a 0x4d 0x91 0x4a 0x40 0x92 0x5e 0x40 0x06 0x80 0x83 0x06 0x90 0x39 0x4d 0x93 0x2e 0x40 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x37 0x4d 0x91 0x4a 0x40 0x82 0x06 0x80 0x06 0x90 0x39 0x4d 0x93 0x23 0x40 0x92 0x6a 0x40 0x07 0x80 0x83 0x06 0x90 0x3a 0x4d 0x93 0x22 0x40 0x92 0x5e 0x40 0x06 0x80 0x06 0x90 0x3c 0x4d 0x91 0x4b 0x40 0x92 0x65 0x40 0x06 0x80 0x83 0x06 0x90 0x3e 0x4d 0x93 0x22 0x40 0x92 0x6a 0x40 0x06 0x80 0x06 0x90 0x3c 0x4d 0x92 0x5e 0x40 0x06 0x80 0x06 0x90 0x3a 0x4d 0x91 0x4d 0x40 0x92 0x65 0x40 0x06 0x80 0x06 0x90 0x39 0x4d 0x92 0x6a 0x40 0x07 0x80 0x83 0x06 0x90 0x37 0x4d 0x91 0x4d 0x40 0x93 0x2d 0x40 0x92 0x5e 0x40 0x06 0x80 0x83 0x06 0x90 0x39 0x4d 0x93 0x2d 0x40 0x92 0x65 0x40 0x06 0x80 0x06 0x90 0x3a 0x4d 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x3c 0x4d 0x93 0x2d 0x40 0x82 0x06 0x80 0x06 0x90 0x3e 0x4d 0x91 0x48 0x40 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x3c 0x4d 0x93 0x2d 0x40 0x82 0x07 0x80 0x06 0x90 0x3a 0x4d 0x92 0x5e 0x40 0x06 0x80 0x83 0x06 0x90 0x39 0x4d 0x93 0x2d 0x40 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x37 0x4d 0x82 0x06 0x80 0x06 0x90 0x39 0x4d 0x91 0x48 0x40 0x93 0x22 0x40 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x3a 0x4d 0x93 0x21 0x40 0x92 0x5e 0x40 0x06 0x80 0x06 0x90 0x3c 0x4d 0x91 0x4a 0x40 0x92 0x65 0x40 0x06 0x80 0x83 0x07 0x90 0x3e 0x4d 0x93 0x21 0x40 0x92 0x6a 0x40 0x06 0x80 0x06 0x90 0x3c 0x4d 0x92 0x5e 0x40 0x06 0x80 0x06 0x90 0x3a 0x4d 0x91 0x4b 0x40 0x92 0x65 0x40 0x06 0x80 0x06 0x90 0x39 0x4d 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x37 0x4d 0x91 0x4b 0x40 0x93 0x2b 0x40 0x92 0x5e 0x40 0x06 0x80 0x83 0x06 0x90 0x39 0x4d 0x93 0x2b 0x40 0x92 0x65 0x40 0x06 0x80 0x07 0x90 0x3a 0x4d 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x3c 0x4d 0x91 0x46 0x40 0x93 0x2b 0x40 0x82 0x06 0x80 0x06 0x90 0x3e 0x4d 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x3c 0x4d 0x93 0x2b 0x40 0x82 0x06 0x80 0x06 0x90 0x3a 0x4d 0x92 0x5e 0x40 0x06 0x80 0x83 0x06 0x90 0x39 0x4d 0x93 0x2b 0x40 0x92 0x6a 0x40 0x06 0x80 0x83 0x07 0x90 0x37 0x4d 0x82 0x06 0x80 0x06 0x90 0x39 0x4d 0x93 0x21 0x40 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x3a 0x4d 0x91 0x46 0x40 0x93 0x1f 0x40 0x92 0x5e 0x40 0x06 0x80 0x06 0x90 0x3c 0x4d 0x92 0x65 0x40 0x06 0x80 0x83 0x06 0x90 0x3e 0x4d 0x91 0x48 0x40 0x93 0x1f 0x40 0x92 0x6a 0x40 0x06 0x80 0x06 0x90 0x3c 0x4d 0x93 0x2b 0x40 0x92 0x5e 0x40 0x06 0x80 0x06 0x90 0x3a 0x4d 0x91 0x4a 0x40 0x93 0x1f 0x40 0x92 0x65 0x40 0x07 0x80 0x06 0x90 0x39 0x4d 0x92 0x6a 0x40 0x06 0x80 0x06 0x90 0x37 0x4d 0x91 0x46 0x40 0x93 0x26 0x40 0x92 0x5e 0x40 0x06 0x80 0x83 0x06 0x90 0x39 0x4d 0x93 0x26 0x40 0x92 0x65 0x40 0x06 0x80 0x06 0x90 0x3a 0x4d 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x3c 0x4d 0x93 0x26 0x40 0x82 0x06 0x80 0x06 0x90 0x3e 0x4d 0x92 0x6a 0x40 0x07 0x80 0x83 0x06 0x90 0x3c 0x4d 0x93 0x26 0x40 0x82 0x06 0x80 0x83 0x06 0x90 0x3a 0x4d 0x93 0x26 0x40 0x92 0x5e 0x40 0x06 0x80 0x06 0x90 0x39 0x4d 0x92 0x6a 0x40 0x06 0x80 0x83 0x06 0x90 0x37 0x4d 0x91 0x46 0x40 0x93 0x1d 0x40 0x92 0x45 0x40 0x92 0x45 0x40 0x06 0x80 0x06 0x90 0x39 0x4d 0x93 0x29 0x40 0x06 0x80 0x06 0x90 0x3a 0x4d 0x93 0x5e 0x40 0x07 0x80 0x06 0x90 0x3c 0x4d 0x93 0x65 0x40 0x06 0x80 0x06 0x90 0x3e 0x4d 0x91 0x46 0x40 0x93 0x6a 0x40 0x06 0x80 0x06 0x90 0x3c 0x4d 0x93 0x5e 0x40 0x06 0x80 0x06 0x90 0x3a 0x4d 0x92 0x45 0x40 0x93 0x65 0x40 0x81 0x06 0x80 0x06 0x90 0x39 0x4d 0x91 0x1d 0x40 0x93 0x6a 0x40 0x06 0x80 0x81 0x06 0x92 0x4f 0x40 0x90 0x46 0x40 0x91 0x4b 0x40 0x91 0x4b 0x40 0x92 0x4f 0x40 0x90 0x46 0x40 0x91 0x4b 0x40 0x83 0x0d 0x81 0x0c 0x90 0x46 0x40 0x0c 0x90 0x46 0x40 0x0c 0x90 0x46 0x40 0x0c 0x80 0x19 0x90 0x43 0x40 0x0c 0x91 0x4d 0x40 0x92 0x46 0x40 0x93 0x4a 0x40 0x90 0x43 0x40 0x91 0x4d 0x40 0x92 0x46 0x40 0x93 0x4a 0x40 0x0c 0x80 0x0c 0x90 0x43 0x40 0x0c 0x80 0x0c 0x90 0x44 0x40 0x0d 0x92 0x46 0x40 0x80 0x0c 0x82 0x18 0x93 0x43 0x40 0x90 0x48 0x40 0x91 0x4b 0x40 0x91 0x4b 0x40 0x93 0x43 0x40 0x90 0x48 0x40 0x91 0x4b 0x40 0x0c 0x81 0x0c 0x91 0x46 0x40 0x0c 0x91 0x46 0x40 0x0d 0x91 0x46 0x40 0x0c 0x81 0x18 0x93 0x43 0x40 0x0c 0x91 0x41 0x40 0x90 0x4a 0x40 0x92 0x46 0x40 0x93 0x43 0x40 0x91 0x41 0x40 0x90 0x4a 0x40 0x92 0x46 0x40 0x83 0x19 0x93 0x43 0x40 0x0c 0x83 0x0c 0x93 0x43 0x40 0x0c 0x93 0x44 0x40 0x0c 0x92 0x46 0x40 0x83 0x0c 0x92 0x48 0x40 0x0d 0x90 0x4b 0x40 0x91 0x44 0x40 0x92 0x48 0x40 0x90 0x4b 0x40 0x91 0x44 0x40 0x92 0x48 0x40 0x18 0x82 0x0c 0x92 0x48 0x40 0x0c 0x82 0x19 0x92 0x4a 0x40 0x0c 0x90 0x4b 0x40 0x82 0x0c 0x92 0x4b 0x40 0x90 0x43 0x40 0x91 0x46 0x40 0x91 0x46 0x40 0x92 0x4b 0x40 0x90 0x43 0x40 0x91 0x46 0x40 0x18 0x81 0x0c 0x91 0x46 0x40 0x0d 0x81 0x18 0x92 0x4b 0x40 0x0c 0x82 0x0c 0x91 0x45 0x40 0x90 0x4d 0x40 0x92 0x48 0x40 0x91 0x45 0x40 0x91 0x45 0x40 0x90 0x4d 0x40 0x92 0x48 0x40 0x19 0x81 0x0c 0x91 0x45 0x40 0x0c 0x81 0x18 0x91 0x47 0x40 0x0c 0x92 0x48 0x40 0x81 0x0c 0x92 0x47 0x40 0x90 0x4a 0x40 0x91 0x4f 0x40 0x90 0x4a 0x40 0x92 0x47 0x40 0x90 0x4a 0x40 0x91 0x4f 0x40 0x62 0x80 0x81 0x82 0xd0 0x80 0x80

; Define Blits
def_blits_0x0400                  EQU                          0x0400
def_blits_0x0400                  DB                           16 16 16 16 16 16 255 
def_blits_0x0407                  EQU                          0x0407
def_blits_0x0407                  DB                           16 16 16 16 16 16 255 
def_blits_0x040e                  EQU                          0x040e
def_blits_0x040e                  DB                           4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 4 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 8 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 13 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 14 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 15 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 11 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 7 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 3 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 1 224 

; Define Fonts

; Define Sprites

; Define Patterns

; Lookup Tables
_lut_numericLabs                  EQU                          0xc397
_lut_numericLabs                  DW                           1 2 3 4 5 6 7 8 9 10 11 12 13 14 99 48 49 50 51 52 53 54 55 56 57 113 119 101 114 116 117 121 105 111 0x0000
_lut_numericAddrs                 EQU                          0xc353
_lut_numericAddrs                 DW                           0x04d7 0x04dd 0x04e3 0x04e9 0x04ef 0x04f5 0x08e5 0x08eb 0x08f1 0x08f7 0x09e8 0x09ee 0x09f4 0x09fa 0x0aa5 0x0abf 0x0add 0x0ba5 0x0bc9 0x0bed 0x0cb4 0x0cd8 0x0cfc 0x0dc9 0x0ded 0x0eba 0x0ee4 0x0fb1 0x0fdb 0x10ab 0x11c0 0x12d6 0x13ed 0x15ab 
_midisLut_                        EQU                          0xc351
_midisLut_                        DW                           0x8080 
_blitLut_0xc347                   EQU                          0xc347
_blitLut_0xc347                   DW                           0x0400 0x0000 0x0407 0x0006 0x0000
_blitLut_0xc341                   EQU                          0xc341
_blitLut_0xc341                   DW                           0x040e 0x1f00 0x0000
_blitsLut_                        EQU                          0xc33d
_blitsLut_                        DW                           0xc347 0xc341 

; Lazy Constants

; Code
_entryPoint_                      LDI                          0x80
                                  STW                          romUser
                                  RomCheck                     
                                  Initialise                   
                                  MOVQB                        0x08, 0x03
%define VBLANK_INTERRUPT                                                                    ; INIT

                                  LDWI                         -32768
                                  STW                          _samplesAddr                 ; samplesAddr = SMP_A

                                  CALLI                        _initialise                  ; gosub initialise

                                  LDI                          126
                                  STW                          _vol1
                                  STW                          _vol2
                                  STW                          _vol3
                                  STW                          _vol4                        ; vol1 = 126 : vol2 = vol1 : vol3 = vol2 : vol4 = vol3

                                  LDI                          1
                                  STW                          _ypos1
                                  STW                          _ypos2
                                  STW                          _ypos3
                                  STW                          _ypos4                       ; ypos1 = 1 : ypos2 = ypos1 : ypos3 = ypos2 : ypos4 = ypos3

                                  MOVQW                        _kk, 255                     ; kk = 255

                                  MOVQW                        _state, 0                    ; state = 0

                                  LDWI                         _textScroll
                                  STW                          realTimeProc0
                                  LDWI                         playMidiVol
                                  STW                          realTimeProc1
                                  CALLI                        setRealTimeProc1
                                  MOVQB                        giga_frameCount, 0xFF
                                  LDWI                         giga_vblankProc
                                  DOKEI                        realTimeStub                 ; init textScroll, midiv

                                  SoundAllOff                                               ; sound off

_loop                             MOVQB                        giga_soundTimer, 5           ; set SOUND_TIMER, 5

                                  CALLI                        _oscilloscope                ; gosub oscilloscope

                                  CALLI                        _vuMeter                     ; gosub vuMeter

                                  LD                           giga_serialRaw
                                  STW                          _k                           ; k = get("SERIAL_RAW")

                                  CMPI                         _kk, 255
                                  JNE                          _if_0x0000
                                  MOVWA                        _k, numericLabel
                                  MOVQW                        defaultLabel, 0
                                  GosubNumeric                                              ; if kk = 255 then gosub k

_if_0x0000                        MOVWA                        _state, numericLabel
                                  MOVQW                        defaultLabel, 0
                                  GosubNumeric                                              ; gosub state

                                  MOVWA                        _k, _kk                      ; kk = k

                                  CALLI                        _loop                        ; goto loop

_vuMeter                          PUSH                         
                                  LDWI                         506
                                  STW                          _chanAddr
                                  LDWI                         508
                                  STW                          _freqAddr                    ; chanAddr = &h01FA : freqAddr = &h01FC

                                  MOVWA                        _vol1, _vol
                                  MOVWA                        _ypos1, _y                   ; vol = vol1 : y = ypos1

                                  MOVWA                        _chanAddr, 0xc4
                                  MOVWA                        _freqAddr, 0xc6
                                  MOVQW                        0xc8, 0x5c
                                  CALLI                        _vuDisplay                   ; call vuDisplay, chanAddr, freqAddr, VU_X + 16

                                  MOVWA                        _vol, _vol1
                                  MOVWA                        _y, _ypos1                   ; vol1 = vol : ypos1 = y

                                  INC                          _chanAddr + 1
                                  INC                          _freqAddr + 1                ; inc chanAddr.hi : inc freqAddr.hi

                                  MOVWA                        _vol2, _vol
                                  MOVWA                        _ypos2, _y                   ; vol = vol2 : y = ypos2

                                  MOVWA                        _chanAddr, 0xc4
                                  MOVWA                        _freqAddr, 0xc6
                                  MOVQW                        0xc8, 0x6c
                                  CALLI                        _vuDisplay                   ; call vuDisplay, chanAddr, freqAddr, VU_X + 32

                                  MOVWA                        _vol, _vol2
                                  MOVWA                        _y, _ypos2                   ; vol2 = vol : ypos2 = y

                                  INC                          _chanAddr + 1
                                  INC                          _freqAddr + 1                ; inc chanAddr.hi : inc freqAddr.hi

                                  MOVWA                        _vol3, _vol
                                  MOVWA                        _ypos3, _y                   ; vol = vol3 : y = ypos3

                                  MOVWA                        _chanAddr, 0xc4
                                  MOVWA                        _freqAddr, 0xc6
                                  MOVQW                        0xc8, 0x7c
                                  CALLI                        _vuDisplay                   ; call vuDisplay, chanAddr, freqAddr, VU_X + 48

                                  MOVWA                        _vol, _vol3
                                  MOVWA                        _y, _ypos3                   ; vol3 = vol : ypos3 = y

                                  INC                          _chanAddr + 1
                                  INC                          _freqAddr + 1                ; inc chanAddr.hi : inc freqAddr.hi

                                  MOVWA                        _vol4, _vol
                                  MOVWA                        _ypos4, _y                   ; vol = vol4 : y = ypos4

                                  MOVWA                        _chanAddr, 0xc4
                                  MOVWA                        _freqAddr, 0xc6
                                  MOVQW                        0xc8, 0x8c
                                  CALLI                        _page_0x0300
_page_0x0300                      CALLI                        _vuDisplay                   ; call vuDisplay, chanAddr, freqAddr, VU_X + 64

                                  MOVWA                        _vol, _vol4
                                  MOVWA                        _y, _ypos4                   ; vol4 = vol : ypos4 = y

                                  Return                                                    ; return

_vuDisplay                        PUSH                                                      ; proc vuDisplay, volAddr, freqAddr, vuX

                                  PEEKV                        _vuDisplay_volAddr
                                  STW                          _vuDisplay_v                 ; v = peek(volAddr)

                                  LDW                          _vuDisplay_v
                                  SUBI                         64
                                  JLT                          _endif_0x0001                ; if v >= VU_H

                                  DEEKV                        _vuDisplay_freqAddr
                                  JNE                          _if_0x0002
                                  CALLI                        _decay                       ; if deek(freqAddr) = 0 then goto decay

_if_0x0002                        LDW                          _vuDisplay_v
                                  SUBW                         _vol
                                  JGE                          _else_0x0003                 ; if v < vol

                                  LDW                          _vuDisplay_v
                                  SUBI                         64
                                  STW                          0xe8
                                  LDI                          63
                                  SUBW                         0xe8
                                  LSRV                         giga_vAC
                                  STW                          _y                           ; y = ((VU_H-1) - (v - VU_H)) LSR 1

                                  MOVWA                        _vuDisplay_v, _vol           ; vol = v

                                  CALLI                        _endif_0x0004                ; else

_decay                            DECW                         _y                           ; dec y

                                  INCW                         _vol                         ; inc vol

                                  LDW                          _y
                                  SUBI                         1
                                  JGE                          _endif_0x0005                ; if y < 1

                                  INCW                         _y                           ; inc y

                                  MOVQW                        _vol, 126                    ; vol = 126

_endif_0x0004                     MOVQW                        blitId, 0
                                  MOVB                         _vuDisplay_vuX, blitXY
                                  LDW                          _y
                                  ADDI                         1
                                  STW                          0xe8
                                  LDI                          80
                                  SUBW                         0xe8
                                  ADDI                         8
                                  ST                           blitXY + 1
                                  DrawBlit                                                  ; blit noFlip, 0, vuX, (VU_Y + 64) - (y + 1)

                                  LDW                          _y
                                  LSLW                         
                                  LSLW                         
                                  ADDW                         _y
                                  ADDW                         _y
                                  STW                          0xec
                                  MOVQW                        blitId, 0x01
                                  GetBlitLUT                   
                                  ADDW                         0xec
                                  STW                          _lut                         ; lut = (y LSL 2) + y + y + get("BLIT_LUT", 1)

                                  PEEKV                        _lut
                                  STW                          _save                        ; save = peek(lut)

                                  LDW                          _lut
                                  POKEI                        -1                           ; poke lut, -1

                                  MOVQW                        blitId, 1
                                  MOVB                         _vuDisplay_vuX, blitXY
                                  MOVQB                        blitXY + 1, 56
                                  DrawBlitY                                                 ; blit flipY, 1, vuX, VU_Y + 32

                                  MOVQW                        blitId, 1
                                  LDW                          _vuDisplay_vuX
                                  ADDI                         6
                                  ST                           blitXY
                                  MOVQB                        blitXY + 1, 56
                                  DrawBlitY                                                 ; blit flipY, 1, vuX + 6, VU_Y + 32

                                  LDW                          _lut
                                  POKEA                        _save                        ; poke lut, save

_endif_0x0001                     Return                                                    ; endproc

_oscilloscope                     PUSH                         
                                  MOVWA                        _samplesAddr, _addrA         ; addrA = samplesAddr

                                  MOVQB                        fgbgColour + 1, 16           ; set FG_COLOUR, &h10

                                  LDW                          _samplesAddr
                                  XORI                         0x40
                                  STW                          _sAddr                       ; sAddr = samplesAddr XOR &h40

                                  MOVQW                        _i, 63                       ; for i=SMP_N-1 &downto 0

_next_0x0006                      LD                           0x13                         ; LD      0x13
                                  POKEV+                       _addrA                       ; POKEV+  _addrA
                                  LDWI                         _OSC_A                       ; LDWI    _OSC_A
                                  OSCPX                        _sAddr,_i                    ; OSCPX   _sAddr, _i

                                  ForNextDBGE                  _i _next_0x0006              ; next i

                                  MOVQB                        fgbgColour + 1, 29           ; set FG_COLOUR, &h1D

                                  MOVQW                        _i, 63                       ; for i=SMP_N-1 &downto 0

_next_0x0007                      LDWI                         _OSC_A                       ; LDWI    _OSC_A
                                  OSCPX                        _samplesAddr,_i              ; OSCPX   _samplesAddr, _i

                                  ForNextDBGE                  _i _next_0x0007              ; next i

                                  XORBI                        _samplesAddr, 0x40           ; samplesAddr = samplesAddr XOR &h40

                                  Return                                                    ; return

_printKey                         PUSH                                                      ; proc printKey, key

                                  MOVQB                        fgbgColour + 1, 15           ; set FG_COLOUR, &h0F

                                  MOVQB                        cursorXY, 134
                                  MOVQB                        cursorXY + 1, 2
                                  AtTextCursor                 
                                  PrintString                  _str_0x77fd
                                  LDW                          _printKey_key
                                  PrintAcChr                   
                                  PrintString                  _str_0x77fa                  ; at 134, 2 : print "<";chr$(key);">";

                                  Return                                                    ; endproc

_midiOff                          PUSH                         
                                  MOVQW                        midiStream, 0                ; set MIDI_STREAM, &h0000

                                  CALLI                        _page_0x04cf
_page_0x04cf                      SoundAllOff                                               ; sound off

                                  CALLI                        _resetWaves                  ; gosub resetWaves

                                  Return                                                    ; return

_1                                PUSH                         
                                  CALLI                        _siren                       ; gosub siren

                                  Return                                                    ; return

_2                                PUSH                         
                                  CALLI                        _crash                       ; gosub crash

                                  Return                                                    ; return

_3                                PUSH                         
                                  CALLI                        _beep                        ; gosub beep

                                  Return                                                    ; return

_4                                PUSH                         
                                  CALLI                        _tictoc                      ; gosub tictoc

                                  Return                                                    ; return

_5                                PUSH                         
                                  CALLI                        _pucDeath                    ; gosub pucDeath

                                  Return                                                    ; return

_6                                PUSH                         
                                  CALLI                        _page_0x08e0
_page_0x08e0                      CALLI                        _ghostMove                   ; gosub ghostMove

                                  Return                                                    ; return

_7                                PUSH                         
                                  CALLI                        _invaderMove                 ; gosub invaderMove

                                  Return                                                    ; return

_8                                PUSH                         
                                  CALLI                        _invaderShoot                ; gosub invaderShoot

                                  Return                                                    ; return

_9                                PUSH                         
                                  CALLI                        _saucerMove                  ; gosub saucerMove

                                  Return                                                    ; return

_10                               PUSH                         
                                  CALLI                        _invaderExplode              ; gosub invaderExplode

                                  Return                                                    ; return

                                  CALLI                        _11
_11                               PUSH                         
                                  CALLI                        _testSfx                     ; gosub testSfx

                                  Return                                                    ; return

_12                               PUSH                         
                                  CALLI                        _saucerExplode               ; gosub saucerExplode

                                  Return                                                    ; return

_13                               PUSH                         
                                  CALLI                        _playerExplode               ; gosub playerExplode

                                  Return                                                    ; return

_14                               PUSH                         
                                  CALLI                        _page_0x0aa0
_page_0x0aa0                      CALLI                        _playSample                  ; gosub playSample

                                  Return                                                    ; return

_99                               PUSH                         
                                  CALLI                        _resetWaves                  ; gosub resetWaves

                                  LDW                          midiStream
                                  JNE                          _endif_0x0008                ; if get("MIDI_STREAM") = &h0000

                                  MOVQB                        waveType + 1, 2
                                  LDI                          0
                                  SetMidiStream                
                                  PlayMidiV                                                 ; play mididv, 0

_endif_0x0008                     Return                                                    ; return

_48                               PUSH                         
                                  MOVQW                        _state, 99                   ; state = 99

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x77d4
                                  NewLine                                                   ; at 2, 112 : print "Muzak incoming..                    "

                                  Return                                                    ; return

_49                               PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 1                    ; state = 1

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x77ae
                                  CALLI                        _page_0x0ba0
_page_0x0ba0                      NewLine                                                   ; at 2, 112 : print "Dodgey Siren incoming..             "

                                  Return                                                    ; return

_50                               PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 2                    ; state = 2

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x76da
                                  NewLine                                                   ; at 2, 112 : print "Crash Effect incoming..             "

                                  Return                                                    ; return

_51                               PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 3                    ; state = 3

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x76b4
                                  NewLine                                                   ; at 2, 112 : print "Ye Ole Beep incoming..              "

                                  Return                                                    ; return

_52                               PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 4                    ; state = 4

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  CALLI                        _page_0x0ca0
_page_0x0ca0                      MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x75da
                                  NewLine                                                   ; at 2, 112 : print "Tick Tock..Tick Tock..              "

                                  Return                                                    ; return

_53                               PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 5                    ; state = 5

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x75b4
                                  NewLine                                                   ; at 2, 112 : print "PucMon has had a hard day..         "

                                  Return                                                    ; return

_54                               PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 6                    ; state = 6

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x74da
                                  NewLine                                                   ; at 2, 112 : print "Ghosts on the Move..                "

                                  Return                                                    ; return

_55                               PUSH                         
                                  CALLI                        _page_0x0da0
_page_0x0da0                      MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _f, 0                        ; f = 0

                                  MOVQW                        _vv, 63                      ; vv = 63

                                  MOVQW                        _state, 7                    ; state = 7

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x74b4
                                  NewLine                                                   ; at 2, 112 : print "Invaders incoming..                 "

                                  Return                                                    ; return

_56                               PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 8                    ; state = 8

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x73da
                                  NewLine                                                   ; at 2, 112 : print "Shoot on sight!..                   "

                                  Return                                                    ; return

_57                               PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _f, 0                        ; f = 0

                                  MOVQW                        _vv, 63                      ; vv = 63

                                  MOVQW                        _state, 9                    ; state = 9

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  CALLI                        _page_0x0ea0
_page_0x0ea0                      MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x73b4
                                  NewLine                                                   ; at 2, 112 : print "Saucer on the Move..                "

                                  Return                                                    ; return

_113                              PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _f, 0                        ; f = 0

                                  MOVQW                        _vv, 63                      ; vv = 63

                                  MOVQW                        _state, 10                   ; state = 10

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x72da
                                  NewLine                                                   ; at 2, 112 : print "Invader go Pooof..                  "

                                  Return                                                    ; return

_119                              PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _f, 0                        ; f = 0

                                  MOVQW                        _vv, 63                      ; vv = 63

                                  MOVQW                        _state, 11                   ; state = 11

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  CALLI                        _page_0x0fa0
_page_0x0fa0                      MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x72b4
                                  NewLine                                                   ; at 2, 112 : print "Test Fx..                           "

                                  Return                                                    ; return

_101                              PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _f, 0                        ; f = 0

                                  MOVQW                        _vv, 60                      ; vv = 60

                                  MOVQW                        _state, 12                   ; state = 12

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x71da
                                  NewLine                                                   ; at 2, 112 : print "Saucer go Booom..                   "

                                  Return                                                    ; return

_114                              PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _f, 0                        ; f = 0

                                  MOVQW                        _vv, 63                      ; vv = 63

                                  MOVQW                        _state, 13                   ; state = 13

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  CALLI                        _page_0x10a0
_page_0x10a0                      PrintString                  _str_0x71b4
                                  NewLine                                                   ; at 2, 112 : print "Player go Booom..                   "

                                  Return                                                    ; return

_116                              PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 14                   ; state = 14

                                  LDWI                         -5125
                                  STW                          _a                           ; a = RobotAddr

                                  LDWI                         4933
                                  STW                          _s                           ; s = RobotSize

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVQB                        sndChannel + 1, 1
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 2
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 2, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 3
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 3, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 4
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  CALLI                        _page_0x11a0
_page_0x11a0                      MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 4, 530, 64, 2

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x70da
                                  NewLine                                                   ; at 2, 112 : print "Destroy Him My Robots!..            "

                                  Return                                                    ; return

_117                              PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 14                   ; state = 14

                                  LDWI                         -9820
                                  STW                          _a                           ; a = AhoogAddr

                                  LDWI                         1158
                                  STW                          _s                           ; s = AhoogSize

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVQB                        sndChannel + 1, 1
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 2
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 2, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 3
                                  LDWI                         530
                                  CALLI                        _page_0x12a0
_page_0x12a0                      STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 3, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 4
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 4, 530, 64, 2

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x70b4
                                  NewLine                                                   ; at 2, 112 : print "Ahroooghaaaa..                      "

                                  Return                                                    ; return

_121                              PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 14                   ; state = 14

                                  LDWI                         -8662
                                  STW                          _a                           ; a = CurlyAddr

                                  LDWI                         3537
                                  STW                          _s                           ; s = CurlySize

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVQB                        sndChannel + 1, 1
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, 530, 64, 2

                                  CALLI                        _page_0x13a0
_page_0x13a0                      MOVQB                        sndChannel + 1, 2
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 2, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 3
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 3, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 4
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 4, 530, 64, 2

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x6fda
                                  NewLine                                                   ; at 2, 112 : print "Nyuk..Nyuk..Nyuk..                  "

                                  Return                                                    ; return

_105                              PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 14                   ; state = 14

                                  LDWI                         -13691
                                  STW                          _a                           ; a = RoostAddr

                                  LDWI                         3871
                                  CALLI                        _page_0x14a0
_page_0x14a0                      STW                          _s                           ; s = RoostSize

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVQB                        sndChannel + 1, 1
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 2
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 2, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 3
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 3, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 4
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 4, 530, 64, 2

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  CALLI                        _page_0x15a0
_page_0x15a0                      PrintString                  _str_0x6fb4
                                  NewLine                                                   ; at 2, 112 : print "Wakey wakey..                       "

                                  Return                                                    ; return

_111                              PUSH                         
                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 14                   ; state = 14

                                  LDWI                         -15359
                                  STW                          _a                           ; a = BoingAddr

                                  LDWI                         1668
                                  STW                          _s                           ; s = BoingSize

                                  CALLI                        _midiOff                     ; gosub midiOff

                                  MOVQB                        sndChannel + 1, 1
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 2
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 2, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 3
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 3, 530, 64, 2

                                  MOVQB                        sndChannel + 1, 4
                                  LDWI                         530
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 64
                                  CALLI                        _page_0x16a0
_page_0x16a0                      MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 4, 530, 64, 2

                                  MOVWA                        _k, 0xc4
                                  CALLI                        _printKey                    ; call printKey, k

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x6eda
                                  NewLine                                                   ; at 2, 112 : print "Booooiiiinnnng..                    "

                                  Return                                                    ; return

_siren                            PUSH                         
                                  ANDBK                        _t, 0x3f
                                  ADDWI                        2208
                                  PEEK                         
                                  STW                          _v_lut                       ; v_lut = peek(V_LUT + (t AND (V_SIZ - 1)))

                                  LDW                          _t
                                  LSLW                         
                                  ADDWI                        1280
                                  DEEKA                        _f_lut                       ; f_lut = deek(F_LUT + (t LSL 1))

                                  MOVQB                        sndChannel + 1, 1
                                  MOVWA                        _f_lut, sndFrequency
                                  MOVWA                        _v_lut, sndVolume
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, f_lut    , v_lut, 2

                                  MOVQB                        sndChannel + 1, 2
                                  LDW                          _f_lut
                                  ADDI                         100
                                  STW                          sndFrequency
                                  MOVWA                        _v_lut, sndVolume
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 2, f_lut+100, v_lut, 2

                                  MOVQB                        sndChannel + 1, 3
                                  LDW                          _f_lut
                                  ADDI                         200
                                  CALLI                        _page_0x17a0
_page_0x17a0                      STW                          sndFrequency
                                  MOVWA                        _v_lut, sndVolume
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 3, f_lut+200, v_lut, 2

                                  MOVQB                        sndChannel + 1, 4
                                  LDW                          _f_lut
                                  ADDWI                        300
                                  STW                          sndFrequency
                                  MOVWA                        _v_lut, sndVolume
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 4, f_lut+300, v_lut, 2

                                  INCW                         _t                           ; inc t

                                  CMPI                         _t, 64
                                  JNE                          _endif_0x0009                ; if t = 64

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x0009                     Return                                                    ; return

_crash                            PUSH                         
                                  ANDBK                        _t, 0x3f
                                  ADDWI                        2464
                                  PEEK                         
                                  STW                          _d_lut                       ; d_lut = peek(D_LUT + (t AND (D_SIZ - 1)))

                                  ANDBK                        _t, 0x01
                                  LSLW                         
                                  ADDWI                        1280
                                  DEEKA                        _f_lut                       ; f_lut = deek(F_LUT + ((t AND 1) LSL 1))

                                  MOVQB                        sndChannel + 1, 1
                                  MOVWA                        _f_lut, sndFrequency
                                  MOVWA                        _d_lut, sndVolume
                                  MOVQW                        sndWaveType, 0
                                  SoundOnV                                                  ; sound on, 1, f_lut    , d_lut, 0

                                  MOVQB                        sndChannel + 1, 2
                                  LDW                          _f_lut
                                  CALLI                        _page_0x18a0
_page_0x18a0                      ADDI                         100
                                  STW                          sndFrequency
                                  MOVWA                        _d_lut, sndVolume
                                  MOVQW                        sndWaveType, 0
                                  SoundOnV                                                  ; sound on, 2, f_lut+100, d_lut, 0

                                  MOVQB                        sndChannel + 1, 3
                                  LDW                          _f_lut
                                  ADDI                         200
                                  STW                          sndFrequency
                                  MOVWA                        _d_lut, sndVolume
                                  MOVQW                        sndWaveType, 0
                                  SoundOnV                                                  ; sound on, 3, f_lut+200, d_lut, 0

                                  MOVQB                        sndChannel + 1, 4
                                  LDW                          _f_lut
                                  ADDWI                        300
                                  STW                          sndFrequency
                                  MOVWA                        _d_lut, sndVolume
                                  MOVQW                        sndWaveType, 0
                                  SoundOnV                                                  ; sound on, 4, f_lut+300, d_lut, 0

                                  INCW                         _t                           ; inc t

                                  CMPI                         _t, 64
                                  JNE                          _endif_0x000a                ; if t = 64

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x000a                     Return                                                    ; return

_beep                             PUSH                         
                                  MOVQB                        sndChannel + 1, 1
                                  LDWI                         8000
                                  STW                          sndFrequency
                                  MOVQW                        sndVolume, 63
                                  MOVQW                        sndWaveType, 1
                                  SoundOnV                                                  ; sound on, 1, 8000, 63, 1

                                  INCW                         _t                           ; inc t

                                  CMPI                         _t, 3
                                  CALLI                        _page_0x19a0
_page_0x19a0                      JNE                          _endif_0x000b                ; if t = 3

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x000b                     Return                                                    ; return

_tictoc                           PUSH                         
                                  ANDBK                        _t, 0x07
                                  ADDWI                        2528
                                  PEEK                         
                                  STW                          _t_lut                       ; t_lut = peek(T_LUT + (t AND (T_SIZ - 1)))

                                  MOVQB                        sndChannel + 1, 1
                                  LDW                          _t_lut
                                  LSLW                         
                                  LSLW                         
                                  LSLW                         
                                  LSLW                         
                                  STW                          sndFrequency
                                  MOVWA                        _t_lut, sndVolume
                                  MOVQW                        sndWaveType, 0
                                  SoundOnV                                                  ; sound on, 1, t_lut LSL 4, t_lut, 0

                                  INCW                         _t                           ; inc t

                                  CMPI                         _t, 6
                                  JNE                          _endif_0x000c                ; if t = T_SIZ-2

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x000c                     Return                                                    ; return

_pucDeath                         PUSH                         
                                  ANDBK                        _t, 0x0f
                                  ADDWI                        -15375
                                  PEEK                         
                                  MIDI                         
                                  STW                          _n                           ; n = get("MIDI_NOTE", peek(@pnotes + (t AND 15)))

                                  MOVQB                        sndChannel + 1, 1
                                  LDW                          _n
                                  SUBW                         _f
                                  STW                          sndFrequency
                                  LDW                          _t
                                  LSRV                         giga_vAC
                                  CALLI                        _page_0x1aa0
_page_0x1aa0                      LSRV                         giga_vAC
                                  STW                          0xec
                                  LDI                          63
                                  SUBW                         0xec
                                  STW                          sndVolume
                                  MOVQW                        sndWaveType, 1
                                  SoundOnV                                                  ; sound on, 1, n - f, 63 - (t LSR 2), 1

                                  INCW                         _t                           ; inc t

                                  ANDBK                        _t, 0x07
                                  JNE                          _endif_0x000d                ; if (t AND 7) = 0

                                  ADDVI                        _f, 200                      ; f = f + 200

_endif_0x000d                     CMPI                         _t, 128
                                  JNE                          _endif_0x000e                ; if t = 128

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _f, 0                        ; f = 0

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x000e                     Return                                                    ; return

_ghostMove                        PUSH                         
                                  ANDBK                        _t, 0x0f
                                  ADDWI                        -15391
                                  PEEK                         
                                  ADDI                         10
                                  MIDI                         
                                  STW                          _n                           ; n = get("MIDI_NOTE", peek(@gnotes + (t AND 15)) + 10)

                                  MOVQB                        sndChannel + 1, 1
                                  MOVWA                        _n, sndFrequency
                                  MOVQW                        sndVolume, 63
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, n, 63, 2

                                  INCW                         _t                           ; inc t

                                  CMPI                         _t, 128
                                  JNE                          _endif_0x000f                ; if t = 128

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 0                    ; state = 0

                                  CALLI                        _page_0x1ba0
_page_0x1ba0                      SoundAllOff                                               ; sound off

_endif_0x000f                     Return                                                    ; return

                                  MOVQW                        _vv, 0                       ; vv = 0

_invaderMove                      PUSH                         
                                  ANDBK                        _f, 0x03
                                  ADDWI                        -15395
                                  PEEK                         
                                  MIDI                         
                                  STW                          _n                           ; n = get("MIDI_NOTE", peek(@inotes + (f AND 3)))

                                  MOVQB                        sndChannel + 1, 0
                                  MOVWA                        _n, sndFrequency
                                  MOVWA                        _vv, sndVolume
                                  MOVQW                        sndWaveType, 3
                                  SoundOnV                                                  ; sound on, 0, n, vv, 3

                                  MOVQB                        sndChannel + 1, 1
                                  MOVWA                        _n, sndFrequency
                                  MOVWA                        _vv, sndVolume
                                  MOVQW                        sndWaveType, 3
                                  SoundOnV                                                  ; sound on, 1, n, vv, 3

                                  INCW                         _t                           ; inc t

                                  CMPI                         _t, 25
                                  JNE                          _elseif_0x0010               ; if t = 25

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _vv, 63                      ; vv = 63

                                  INCW                         _f                           ; inc f

                                  CMPI                         _f, 4
                                  JNE                          _endif_0x0011                ; if f = 4

                                  MOVQW                        _f, 0                        ; f = 0

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x0011                     CALLI                        _endif_0x0012
_elseif_0x0010                    CMPI                         _t, 4
                                  JNE                          _endif_0x0012                ; elseif t = 4

                                  CALLI                        _page_0x1ca0
_page_0x1ca0                      MOVQW                        _vv, 0                       ; vv = 0

_endif_0x0012                     Return                                                    ; return

_invaderShootOld                  LDWI                         25000
                                  SUBW                         _f
                                  STW                          intSrcA
                                  LDWI                         13000
                                  IntMax                       
                                  STW                          _ff                          ; ff = max(25000 - f, 13000)

                                  MOVQB                        sndChannel + 1, 1
                                  MOVWA                        _ff, sndFrequency
                                  MOVWA                        _vv, sndVolume
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, ff, vv, 2

                                  INCW                         _t                           ; inc t

                                  SUBVI                        _vv, 2                       ; vv = vv - 2

                                  LDW                          _vv
                                  JGT                          _endif_0x0013                ; if vv <= 0

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _vv, 63                      ; vv = 63

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x0013                     Return                                                    ; return

_invaderShoot                     PUSH                         
                                  ANDBK                        _t, 0x1f
                                  LSLW                         
                                  ADDWI                        28064
                                  DEEKA                        _ff                          ; ff = deek(IF_LUT + ((t AND 31) LSL 1))

                                  ANDBK                        _t, 0x1f
                                  ADDWI                        28320
                                  PEEK                         
                                  STW                          _vvv                         ; vvv = peek(I_LUT + (t AND 31))

                                  MOVQB                        sndChannel + 1, 1
                                  MOVWA                        _ff, sndFrequency
                                  MOVWA                        _vvv, sndVolume
                                  CALLI                        _page_0x1da0
_page_0x1da0                      MOVQW                        sndWaveType, 3
                                  SoundOnV                                                  ; sound on, 1, ff, vvv, 3

                                  MOVQB                        sndChannel + 1, 2
                                  MOVWA                        _ff, sndFrequency
                                  MOVWA                        _vvv, sndVolume
                                  MOVQW                        sndWaveType, 0
                                  SoundOnV                                                  ; sound on, 2, ff, vvv, 0

                                  INCW                         _t                           ; inc t

                                  CMPI                         _t, 32
                                  JNE                          _endif_0x0014                ; if t = 32

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x0014                     Return                                                    ; return

_saucerMove                       PUSH                         
                                  LDW                          _t
                                  LSLW                         
                                  ADDWI                        27808
                                  DEEKA                        _ff                          ; ff = deek(SF_LUT + (t LSL 1))

                                  MOVQB                        sndChannel + 1, 1
                                  MOVWA                        _ff, sndFrequency
                                  MOVQW                        sndVolume, 32
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, ff, 32, 2

                                  INCW                         _t                           ; inc t

                                  CMPI                         _t, 12
                                  JNE                          _endif_0x0015                ; if t = SF_SIZ

                                  MOVQW                        _t, 0                        ; t = 0

_endif_0x0015                     Return                                                    ; return

_invaderExplode                   PUSH                         
                                  MOVQB                        sndChannel + 1, 1
                                  LDW                          _t
                                  LSLW                         
                                  ADDWI                        27552
                                  DEEKA                        sndFrequency
                                  CALLI                        _page_0x1ea0
_page_0x1ea0                      MOVWA                        _vv, sndVolume
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, deek(IE_LUT + (t LSL 1)), vv, 2

                                  INCW                         _t                           ; inc t

                                  CMPI                         _t, 3
                                  JNE                          _if_0x0016
                                  MOVQW                        _t, 0                        ; if t = IE_SIZ then t = 0

_if_0x0016                        SUBVI                        _vv, 2                       ; vv = vv - 2

                                  LDW                          _vv
                                  JGT                          _endif_0x0017                ; if vv <= 0

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _vv, 60                      ; vv = 60

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x0017                     Return                                                    ; return

_testSfx                          PUSH                         
                                  LDW                          _ff
                                  SUBWI                        16384
                                  STW                          _ff                          ; ff = ff - 16384

                                  MOVB                         _vv, giga_vAC + 1
                                  MOVQB                        giga_vAC, 0
                                  SUBIW                        16384
                                  ADDW                         _f
                                  STW                          _ff                          ; ff = 16384 - (vv LSL 8) + f

                                  MOVQB                        sndChannel + 1, 1
                                  MOVWA                        _ff, sndFrequency
                                  MOVWA                        _vv, sndVolume
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, ff, vv, 2

                                  INCW                         _t                           ; inc t

                                  SUBVI                        _vv, 8                       ; vv = vv - 8

                                  LDW                          _vv
                                  JGT                          _endif_0x0018                ; if vv <= 0

                                  MOVQW                        _t, 0                        ; t = 0

                                  CALLI                        _page_0x1fa0
_page_0x1fa0                      MOVQW                        _vv, 63                      ; vv = 63

                                  LDW                          _f
                                  ADDWI                        1000
                                  STW                          _f                           ; f = f + 1000

                                  LDWI                         4000
                                  XORW                         _f
                                  JNE                          _endif_0x0019                ; if f = 4000

                                  MOVQW                        _f, 0                        ; f = 0

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x0018                     Return                                                    ; return

_saucerExplode                    PUSH                         
                                  LDW                          _vv
                                  ADDI                         10
                                  STW                          intSrcA
                                  LDI                          63
                                  IntMin                       
                                  STW                          _m                           ; m = min(vv + 10, 63)

                                  LDW                          _t
                                  LSLW                         
                                  ADDWI                        27040
                                  DEEK                         
                                  SUBW                         _f
                                  STW                          _ff                          ; ff = deek(SEF_LUT + (t LSL 1)) - f

                                  MOVQB                        sndChannel + 1, 1
                                  MOVWA                        _ff, sndFrequency
                                  MOVWA                        _vv, sndVolume
                                  MOVQW                        sndWaveType, 2
                                  SoundOnV                                                  ; sound on, 1, ff, vv, 2

                                  MOVQB                        sndChannel + 1, 2
                                  MOVWA                        _ff, mathShift
                                  Lsr4bit                      giga_vAC
                                  STW                          sndFrequency
                                  MOVWA                        _vv, sndVolume
                                  MOVQW                        sndWaveType, 0
                                  SoundOnV                                                  ; sound on, 2, ff LSR 4, vv, 0

                                  INCW                         _t                           ; inc t

                                  CALLI                        _page_0x20a0
_page_0x20a0                      CMPI                         _t, 12
                                  JNE                          _endif_0x001a                ; if t = SEF_SIZ

                                  MOVQW                        _t, 0                        ; t = 0

                                  LDW                          _f
                                  ADDWI                        600
                                  STW                          _f                           ; f = f + 600

                                  SUBVI                        _vv, 15                      ; vv = vv - 15

                                  LDW                          _vv
                                  JGT                          _endif_0x001b                ; if vv <= 0

                                  MOVQW                        _f, 0                        ; f = 0

                                  MOVQW                        _vv, 60                      ; vv = 60

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x001a                     Return                                                    ; return

_playerExplode                    PUSH                         
                                  LDW                          _t
                                  LSLW                         
                                  ADDWI                        27296
                                  DEEKA                        _f                           ; f = deek(PEF_LUT + (t LSL 1))

                                  MOVQB                        sndChannel + 1, 1
                                  MOVWA                        _f, sndFrequency
                                  MOVWA                        _vv, sndVolume
                                  MOVQW                        sndWaveType, 0
                                  SoundOnV                                                  ; sound on, 1, f, vv, 0

                                  MOVQB                        sndChannel + 1, 2
                                  MOVWA                        _f, sndFrequency
                                  MOVWA                        _vv, sndVolume
                                  MOVQW                        sndWaveType, 0
                                  SoundOnV                                                  ; sound on, 2, f, vv, 0

                                  MOVQB                        sndChannel + 1, 3
                                  MOVWA                        _f, sndFrequency
                                  MOVWA                        _vv, sndVolume
                                  MOVQW                        sndWaveType, 0
                                  CALLI                        _page_0x21a0
_page_0x21a0                      SoundOnV                                                  ; sound on, 3, f, vv, 0

                                  MOVQB                        sndChannel + 1, 4
                                  MOVWA                        _f, sndFrequency
                                  MOVWA                        _vv, sndVolume
                                  MOVQW                        sndWaveType, 0
                                  SoundOnV                                                  ; sound on, 4, f, vv, 0

                                  INCW                         _t                           ; inc t

                                  CMPI                         _t, 32
                                  JNE                          _if_0x001c
                                  MOVQW                        _t, 0                        ; if t = PEF_SIZ then t = 0

_if_0x001c                        SUBVI                        _vv, 1                       ; vv = vv - 1

                                  LDW                          _vv
                                  JGT                          _endif_0x001d                ; if vv <= 0

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _vv, 60                      ; vv = 60

                                  MOVQW                        _state, 0                    ; state = 0

                                  SoundAllOff                                               ; sound off

_endif_0x001d                     Return                                                    ; return

_playSample                       PUSH                         
                                  LDWI                         1794
                                  STW                          _sampleAddr                  ; sampleAddr = &h0702

                                  LDI                          0
                                  STW                          _i
                                  STW                          _j                           ; i = 0 : j = i

                                  LDW                          _a                           ; LDW     _a
                                  SMPCPY                       _sampleAddr                  ; SMPCPY  _sampleAddr
                                  STW                          _a                           ; STW     _a

                                  ADDVI                        _t, 32                       ; t = t + 32

                                  LDW                          _s
                                  SUBI                         32
                                  STW                          0xe8
                                  LDW                          _t
                                  SUBW                         0xe8
                                  JLE                          _endif_0x001e                ; if t > s-32

                                  MOVQW                        _t, 0                        ; t = 0

                                  MOVQW                        _state, 0                    ; state = 0

                                  CALLI                        _page_0x22a0
_page_0x22a0                      SoundAllOff                                               ; sound off

_endif_0x001e                     Return                                                    ; return

_resetWaves                       PUSH                         
                                  Return                                                    ; return

_textScroll                       PUSH                                                      ; PUSH
                                  LDWI                         &h01E1                       ; LDWI    &h01E1
                                  STW                          _scrollTmp                   ; STW     _scrollTmp
                                  LDW                          _scrollPos                   ; LDW     _scrollPos
                                  POKE                         _scrollTmp                   ; POKE    _scrollTmp
                                  INC                          _scrollPos                   ; INC     _scrollPos
                                  POP                                                       ; POP

                                  RET                                                       ; ret

_initialise                       PUSH                         
                                  ResetVars                    0x58                         ; clear vars, @t

                                  MOVQW                        graphicsMode, 2
                                  ScanlineMode                                              ; mode 2

                                  MOVQB                        fgbgColour, 48               ; set BG_COLOUR, &h30

                                  ClearVertBlinds                                           ; cls

                                  LDWI                         30880
                                  STW                          clrAddress
                                  MOVQW                        clrWidth, 96
                                  MOVQW                        clrLines, 8
                                  ClearRect                                                 ; cls OFFSCREEN, 96, 8

                                  MOVQB                        fgbgColour + 1, 32           ; set FG_COLOUR, &h20

                                  MOVQW                        drawRectF_x1, 8
                                  MOVQW                        drawRectF_y1, 29
                                  MOVQW                        drawRectF_x2, 77
                                  MOVQW                        drawRectF_y2, 98
                                  DrawRectF                                                 ; rectf OSC_X - 3, OSC_Y - 3, OSC_X + SMP_N + 2, OSC_Y + SMP_H + 2

                                  MOVQW                        drawRectF_x1, 89
                                  MOVQW                        drawRectF_y1, 82
                                  MOVQW                        drawRectF_x2, 154
                                  MOVQW                        drawRectF_y2, 45
                                  DrawRectF                                                 ; rectf VU_X + 13, VU_Y + 66, VU_X + 78, VU_Y + 29

                                  MOVQB                        fgbgColour + 1, 16           ; set FG_COLOUR, &h10

                                  CALLI                        _page_0x23a0
_page_0x23a0                      MOVQW                        drawRectF_x1, 92
                                  MOVQW                        drawRectF_y1, 79
                                  MOVQW                        drawRectF_x2, 151
                                  MOVQW                        drawRectF_y2, 48
                                  DrawRectF                                                 ; rectf VU_X + 16, VU_Y + 63, VU_X + 75, VU_Y + 32

                                  MOVQW                        drawRectF_x1, 11
                                  MOVQW                        drawRectF_y1, 32
                                  MOVQW                        drawRectF_x2, 74
                                  MOVQW                        drawRectF_y2, 95
                                  DrawRectF                                                 ; rectf OSC_X, OSC_Y, OSC_X + SMP_N - 1, OSC_Y + SMP_H - 1

                                  MOVQB                        fgbgColour + 1, 32           ; set FG_COLOUR, &h20

                                  MOVQW                        drawRectF_x1, 104
                                  MOVQW                        drawRectF_y1, 82
                                  MOVQW                        drawRectF_x2, 107
                                  MOVQW                        drawRectF_y2, 45
                                  DrawRectF                                                 ; rectf VU_X + 28, VU_Y + 66, VU_X + 31, VU_Y + 29

                                  MOVQW                        drawRectF_x1, 120
                                  MOVQW                        drawRectF_y1, 82
                                  MOVQW                        drawRectF_x2, 123
                                  MOVQW                        drawRectF_y2, 45
                                  DrawRectF                                                 ; rectf VU_X + 44, VU_Y + 66, VU_X + 47, VU_Y + 29

                                  MOVQW                        drawRectF_x1, 136
                                  MOVQW                        drawRectF_y1, 82
                                  MOVQW                        drawRectF_x2, 139
                                  MOVQW                        drawRectF_y2, 45
                                  DrawRectF                                                 ; rectf VU_X + 60, VU_Y + 66, VU_X + 63, VU_Y + 29

                                  MOVQB                        fgbgColour + 1, 63           ; set FG_COLOUR, &h3F

                                  MOVQB                        cursorXY, 33
                                  MOVQB                        cursorXY + 1, 2
                                  AtTextCursor                 
                                  CALLI                        _page_0x24a0
_page_0x24a0                      PrintString                  _str_0x76a2
                                  NewLine                                                   ; at 33,2 : print "Keys: <1> to <0>"

                                  MOVQB                        cursorXY, 33
                                  AtTextCursor                 
                                  PrintString                  _str_0x75a2
                                  NewLine                                                   ; at 33 :   print "      <q> to <o>"

                                  ANDBI                        miscFlags, 0xfd              ; tscroll off

                                  ORBI                         miscFlags, 0x08              ; tclip off

                                  MOVQB                        fgbgColour + 1, 15           ; set FG_COLOUR, &h0F

                                  MOVQB                        cursorXY, 2
                                  MOVQB                        cursorXY + 1, 112
                                  AtTextCursor                 
                                  PrintString                  _str_0x6cdb
                                  NewLine                                                   ; at 2, 112 : print "Hit a key, we don't have all day!.."

                                  Return                                                    ; return

                                  HALT                                                      ; END



;*************************************************************************************************************
;*************************************************************************************************************
;* Internal runtime, DO NOT MODIFY PAST THIS POINT, modifications must be made in the original include files *
;*************************************************************************************************************
;*************************************************************************************************************

romCheck                          EQU     0xc16e
realTimeStub                      EQU     0xc103
setRealTimeProc0                  EQU     0xbf6d
setRealTimeProc1                  EQU     0xbfce
resetVars                         EQU     0xbfdd
integerMin                        EQU     0xbfbf
integerMax                        EQU     0xbfb0
lsr4bit                           EQU     0xbf4d
gosubNumericLabel                 EQU     0xc208
scanlineMode                      EQU     0xbf43
resetVideoFlags                   EQU     0xc200
initClearFuncs                    EQU     0xbf93
clearRect                         EQU     0xc06f
clearVertBlinds                   EQU     0xc197
clearCursorRow                    EQU     0xc122
clearCursorRow4x6                 EQU     0xc0dc
drawRectF                         EQU     0xc1c1
drawBlit_                         EQU     0xc059
drawBlit                          EQU     0xbf62
drawBlitY                         EQU     0xbf57
getBlitLUT                        EQU     0xc301
resetAudio                        EQU     0xc145
resetMidi                         EQU     0xbf3a
setMidiStream                     EQU     0xbf2b
playMidiVol                       EQU     0xc278
midiStartNote                     EQU     0xbf85
soundAllOff                       EQU     0xbfa1
soundOnV                          EQU     0xbfed
printInit                         EQU     0xc018
printInit4x6                      EQU     0xbf31
printText                         EQU     0xc004
printChr                          EQU     0xbf78
printChar                         EQU     0xc307
printChar4x6                      EQU     0xc085
printClip                         EQU     0xc043
printClip4x6                      EQU     0xc02d
newLineScroll                     EQU     0xc2b8
newLineScroll4x6                  EQU     0xc238
atTextCursor                      EQU     0xc0b9
atTextCursor4x6                   EQU     0xc09d



realTimeAddr        EQU     register0
realTimeProc0       EQU     register1
realTimeProc1       EQU     register2
realTimeProc2       EQU     register3
numericLabel        EQU     register0
defaultLabel        EQU     register1
lutLabs             EQU     register2
lutAddrs            EQU     register3
lutIndex            EQU     register8
romUser             EQU     register0                           
romType             EQU     register1                           
romReadAddr         EQU     register0               
romErrAddr          EQU     0x7E                                
vramErrAddr         EQU     0x0101

romErrAddr          DW      vramErrAddr
 


romCheck            LD      giga_romType
                    ANDI    0xFC
                    STW     romType
                    SUBW    romUser
                    BEQ     romC_return                         
                    LDW     romUser
                    SUBI    0x80                                
                    BNE     romC_check
                    LDW     romType
                    SUBW    romUser
                    BEQ     romC_return                         
                    BRA     romC_fail
                    
romC_check          LDW     romType                             
                    SUBW    romUser
                    BGT     romC_return                         
                    
romC_fail           LD      giga_rand0
                    POKE    romErrAddr                          
                    BRA     romC_fail

romC_return         RET


                    
                    
realTimeStub        RET                                         
                    ALLOC   -2
                    LDW     giga_sysArg6                        
                    STLW    0 
                    
realTimeStub0       CALLI   0x0000                              

realTimeStub1       BRA     realTS_exit
                    RET                                         

realTimeStub2       BRA     realTS_exit
                    RET                                         
                    
realTS_exit         LDLW    0
                    STW     giga_sysArg6                        
                    ALLOC   2
                    
realTS_rti          POP
                    MOVQB   giga_frameCount, 255                
                    LDWI    &h0400
                    LUP     0x00                                



setRealTimeProc0    LDWI    realTimeStub
                    POKEI   0x75                                
                    LDWI    realTimeStub0 + 1
                    DOKEA   realTimeProc0                       
                    RET


setRealTimeProc1    PUSH
                    CALLI   setRealTimeProc0
                    LDWI    realTimeStub1
                    POKEI   0x85                                
                    ADDI    1                                   
                    DOKEA   realTimeProc1                       
                    POP
                    RET



xreset              EQU     register0
xcount              EQU     register1
ycount              EQU     register2
treset              EQU     register3
breset              EQU     register8
top                 EQU     register9
bot                 EQU     register10
vtbLines            EQU     register10
vramAddr            EQU     register11
evenAddr            EQU     register12
clsAddress          EQU     register13
clsLines            EQU     register14
varAddress          EQU     register13
varCount            EQU     register14
clrAddress          EQU     register13
clrLines            EQU     register14
clrWidth            EQU     register15
ramAddr             EQU     register14
ramCount            EQU     register15


resetVars           LDI     giga_One
                    SUBW    varAddress
                    STW     varCount
                    LSRB    varCount                            
                    LDI     0
                    
resetV_loop         DOKEV+  varAddress
                    DBNE    varCount, resetV_loop
                    RET



intSrcA             EQU     register0
intSrcB             EQU     register1
intSrcX             EQU     register2
intSwap             EQU     register3
intSrcAddr          EQU     register8
intDigit            EQU     register9
intResult           EQU     register10
intNegative         EQU     register11
bcdLength           EQU     register8
bcdSrcAddr          EQU     register9
bcdDstAddr          EQU     register10
bcdSrcData          EQU     register11
bcdDstData          EQU     register11                          
bcdCarry            EQU     register12
bcdBorrow           EQU     register12                          
bcdValue            EQU     register0
bcdDigit            EQU     register1
bcdMult             EQU     register2


integerMin          STW     intSrcB
                    LDW     intSrcA
                    SUBW    intSrcB
                    BLE     integerMi_A
                    LDW     intSrcB
                    RET

integerMi_A         LDW     intSrcA
                    RET


integerMax          STW     intSrcB
                    LDW     intSrcA
                    SUBW    intSrcB
                    BGE     integerMa_A
                    LDW     intSrcB
                    RET

integerMa_A         LDW     intSrcA
                    RET



mathX               EQU     giga_sysArg0
mathY               EQU     giga_sysArg2
mathSum             EQU     register12
mathRem             EQU     register12
mathMask            EQU     register13
mathSign            EQU     register14
mathQuot            EQU     register15
mathShift           EQU     register15
mathBase            EQU     register10
mathPow             EQU     register11
mathResult          EQU     register14


lsr4bit             LDWI    SYS_LSRW4_50
                    STW     giga_sysFn
                    LDW     mathShift
                    SYS     50
                    RET


                    
gosubNumericLabel   PUSH
                    LDWI    _lut_numericLabs
                    STW     lutLabs
                    STW     lutIndex
                    LDWI    _lut_numericAddrs
                    STW     lutAddrs
                    
gosubNL_loop        DEEKV   lutIndex
                    BNE     gosubNL_cont                        
                    LDW     defaultLabel
                    BEQ     gosubNL_exit
                    CALL    defaultLabel                        
                    
gosubNL_exit        POP
                    RET
                    
gosubNL_cont        SUBW    numericLabel
                    BEQ     gosubNL_found
                    ADDBI   lutIndex, 2
                    BRA     gosubNL_loop                        
                    
gosubNL_found       LDW     lutIndex
                    SUBW    lutLabs
                    ADDW    lutAddrs
                    DEEK
                    CALL    giga_vAC                            
                    POP
                    RET



graphicsMode        EQU     register0
waitVBlankNum       EQU     register0

drawHLine_x1        EQU     register0
drawHLine_y1        EQU     register1
drawHLine_x2        EQU     register2

drawVLine_x1        EQU     register0
drawVLine_y1        EQU     register1
drawVLine_y2        EQU     register2

drawLine_x1         EQU     register0
drawLine_y1         EQU     register1
drawLine_x2         EQU     register2
drawLine_y2         EQU     register3
drawLine_xy1        EQU     register0
drawLine_xy2        EQU     register1
drawLine_dxy1       EQU     register2
drawLine_dxy2       EQU     register3
drawLine_dx1        EQU     register8
drawLine_dy1        EQU     register9
drawLine_dx2        EQU     register10
drawLine_dy2        EQU     register11
drawLine_sx         EQU     register12
drawLine_sy         EQU     register13
drawLine_h          EQU     register14
drawLine_num        EQU     register15
drawLine_count      EQU     register14
drawLine_dx         EQU     register2
drawLine_dy         EQU     register3
drawLine_u          EQU     register8
drawLine_v          EQU     register9
drawLine_addr       EQU     register10
drawLine_ddx        EQU     register11
drawLine_cnt        EQU     register12
drawLine_swp        EQU     register13
drawLine_xy         EQU     register7

drawPixel_xy        EQU     register0
readPixel_xy        EQU     register0

drawCircle_cx       EQU     register0
drawCircle_cy       EQU     register1
drawCircle_r        EQU     register2
drawCircle_a        EQU     register3
drawCircle_d        EQU     register8
drawCircle_x        EQU     register9
drawCircle_y        EQU     register10
drawCircle_ch0      EQU     register11
drawCircle_ch1      EQU     register12
drawCircle_ch2      EQU     register13
drawCircle_ch3      EQU     register14

drawCircleF_x1      EQU     register0
drawCircleF_y1      EQU     register1
drawCircleF_x2      EQU     register2
drawCircleF_cnt     EQU     register3
drawCircleF_cx      EQU     register15
drawCircleF_cy      EQU     register10
drawCircleF_r       EQU     register11
drawCircleF_v       EQU     register8
drawCircleF_w       EQU     register9

drawRect_x1         EQU     register7
drawRect_y1         EQU     register10
drawRect_x2         EQU     register11
drawRect_y2         EQU     register16

drawRectF_x1        EQU     register0
drawRectF_y1        EQU     register1
drawRectF_x2        EQU     register2
drawRectF_y2        EQU     register3
drawRectF_xcnt      EQU     register8
drawRectF_ycnt      EQU     register9

drawPoly_mode       EQU     register14
drawPoly_addr       EQU     register7

    
scanlineMode        LDWI    SYS_SetMode_v2_80
                    STW     giga_sysFn
                    LDW     graphicsMode
                    SYS     80
                    RET


resetVideoFlags     MOVQW   cursorXY, giga_CursorX              
                    ANDBI   miscFlags, MISC_ON_BOTTOM_ROW_MSK   
                    RET



initClearFuncs      PUSH
                    CALLI   resetVideoFlags
                    LDWI    SYS_SetMemory_v2_54                 
                    STW     giga_sysFn
                    MOVB    fgbgColour, giga_sysArg1            
                    POP
                    RET


                    
clearRect           PUSH
                    CALLI   initClearFuncs
                    MOVB    clrAddress + 1, giga_sysArg3
                    
clearR_loop         MOVB    clrWidth, giga_sysArg0
                    MOVB    clrAddress, giga_sysArg2
                    SYS     54                                  
                    INC     giga_sysArg3                        
                    DBNE    clrLines, clearR_loop
                    POP
                    RET


                    
clearVertBlinds     PUSH
                    CALLI   initClearFuncs
                    MOVQW   top, giga_vram >> 8
                    MOVQB   clsLines, giga_yres/2
                    
clearVB_loopy       MOVQB   giga_sysArg0, giga_xres
                    MOVQB   giga_sysArg2, 0                     
                    MOVB    top, giga_sysArg3                   
                    SYS     54                                  
    
                    MOVQB   giga_sysArg0, giga_xres
                    MOVQB   giga_sysArg2, 0                     
                    LDI     giga_yres - 1 + 16
                    SUBW    top
                    ST      giga_sysArg3                        
                    SYS     54                                  
                    INC     top                                 
                    DBNE    clsLines, clearVB_loopy
                    POP
                    RET


drawRectF           LDWI    SYS_SetMemory_v2_54
                    STW     giga_sysFn
                    LD      drawRectF_y2
                    SUBW    drawRectF_y1
                    STW     drawRectF_ycnt                      
                    BGE     drawRFY_cont
                    MOVB    drawRectF_y2, drawRectF_y1
                    NEGW    drawRectF_ycnt                      
                    
drawRFY_cont        ADDBI   drawRectF_y1, 8                     
                    INC     drawRectF_ycnt                      
                    LD      drawRectF_x2
                    SUBW    drawRectF_x1
                    BGE     drawRFX_cont                        
                    MOVB    drawRectF_x2, drawRectF_x1          
                    NEGW    giga_vAC                            
                    
drawRFX_cont        ADDI    1                                   
                    ST      drawRectF_xcnt
                    MOVB    fgbgColour + 1, giga_sysArg1        
                    MOVB    drawRectF_y1, giga_sysArg3          
                    
drawRF_loop         MOVB    drawRectF_xcnt, giga_sysArg0        
                    MOVB    drawRectF_x1, giga_sysArg2          
                    SYS     54                                  
                    INC     giga_sysArg3
                    DBNE    drawRectF_ycnt, drawRF_loop
                    RET




blitId              EQU     register0
blitXY              EQU     register1
blitAddrs           EQU     register2

    
drawBlit_           ARRVW   blitId, _blitsLut_
                    DEEKA   blitAddrs                     
                    
drawB_loop          DEEKV+  blitAddrs
                    BEQ     drawB_exit
                    STW     giga_sysArg0
                    DEEKV+  blitAddrs
                    ADDW    blitXY
                    SYS     64
                    BRA     drawB_loop
                    
drawB_exit          RET


drawBlit            PUSH
                    LDWI    SYS_Sprite6_v3_64
                    STW     giga_sysFn
                    CALLI   drawBlit_
                    POP
                    RET


drawBlitY           PUSH
                    LDWI    SYS_Sprite6y_v3_64
                    STW     giga_sysFn
                    CALLI   drawBlit_
                    POP
                    RET


getBlitLUT          LDARRW  blitId, _blitsLut_
                    DEEK
                    RET



midiId              EQU     register0
audioAddr           EQU     register1
waveType            EQU     register2
chnCount            EQU     register3
midiNote            EQU     register4                           
midiCommand         EQU     register5
midiPtr             EQU     register6
sndChannel          EQU     register8
sndFrequency        EQU     register9
sndVolume           EQU     register10
sndWaveType         EQU     register11
musicStream         EQU     register8
musicNote           EQU     register9
musicCommand        EQU     register10
musicPtr            EQU     register11


resetAudio          LDI     0
                    FREQI   0                                   
                    FREQI   1                                   
                    FREQI   2                                   
                    FREQI   3                                   
                    OSCZ    0                                   
                    OSCZ    1                                   
                    OSCZ    2                                   
                    OSCZ    3                                   
                    LD      waveType + 1
                    MODI   0                                    
                    MODI   1                                    
                    MODI   2                                    
                    MODI   3                                    
                    RET


resetMidi           PUSH
                    MOVQW   midiDelay, 1                        
                    CALLI   resetAudio
                    POP
                    RET


setMidiStream       ARRVW   midiId, _midisLut_
                    DEEK
                    RET



playMidiVol         LDW     midiStream
                    BEQ     playMV_exit0                        
                    MOVQB   giga_soundTimer, 5                  
                    DECWA   midiDelay
                    BLE     playMV_start

playMV_exit0        RET

playMV_start        PUSH

playMV_process      PEEKV+  midiStream                          
                    ST      midiCommand
                    ANDI    0xF0
                    XORI    0x90                                
                    BNE     playMV_endnote
                    
                    CALLI   midiStartNote                       
                    CALLI   midiSetVolume                       
                    BRA     playMV_process
                    
playMV_endnote      XORI    0x10                                
                    BNE     playMV_segment
                    FREQM   midiCommand                         
                    BRA     playMV_process

playMV_segment      XORI    0x50                                
                    BNE     playMV_delay

                    DEEKV   midiStream                          
                    STW     midiStream                          
                    BEQ     playMV_exit1                        
                    BRA     playMV_process
    
playMV_delay        LD      midiCommand
                    STW     midiDelay

playMV_exit1        POP
                    RET


midiStartNote       PEEKV+  midiStream                          
                    MIDI                                        
                    FREQM   midiCommand                         
                    RET

midiSetVolume       PEEKV+  midiStream
                    VOLM    midiCommand                         
                    RET


soundAllOff         LDI     0
                    FREQI   0                                   
                    FREQI   1                                   
                    FREQI   2                                   
                    FREQI   3                                   
                    RET


soundOnV            LSRB    sndFrequency                        
                    LDW     sndFrequency                        
                    FREQA   sndChannel + 1                      
                    LD      sndVolume
                    VOLA    sndChannel + 1
                    LD      sndWaveType
                    MODA    sndChannel + 1
                    RET





textStr             EQU     register0
textNum             EQU     register0
textBak             EQU     register0
textHex             EQU     register1
textSpc             EQU     register1
textLen             EQU     register2
textOfs             EQU     register3
textChr             EQU     register8
textFont            EQU     register9
textSlice           EQU     register10
scanLine            EQU     register11
digitMult           EQU     register12
digitIndex          EQU     register13
clearLoop           EQU     register14
    
    
printInit           ANDBK   miscFlags, MISC_ENABLE_FNT4X6_BIT
                    JNE     printInit4x6                        
                    LDWI    SYS_VDrawBits_134
                    STW     giga_sysFn
                    MOVWA   fgbgColour, giga_sysArg0
                    LDW     cursorXY
                    VTBL    giga_sysArg4                        
                    RET


printInit4x6        MOVWA   fgbgColour, giga_sysArg0
                    LDW     cursorXY
                    VTBL    giga_sysArg4                        
                    RET



                    
printText           PUSH
                    STW     textStr
                    CALLI   printInit
                    INC     textStr                             

printT_char         PEEKV+  textStr             
                    BEQ     printT_exit                         
                    CALLI   printChar
                    BRA     printT_char
                    
printT_exit         POP
                    RET


                    
printChr            PUSH
                    ST      textChr
                    CALLI   printInit
                    LD      textChr
                    CALLI   printChar
                    POP
                    RET




                    
printChar           STW     textChr
                    CMPII   32, 132                             
                    BNE     printC_exit
                    ANDBK   miscFlags, MISC_ENABLE_FNT4X6_BIT
                    JNE     printChar4x6                        
                    FNT6X8  textFont, textChr
                    FLT6X8  textFont
                    MOVQB   textSlice, 0x05

printC_slice        LDW     textFont                            
                    LUP     0x00                                
                    ST      giga_sysArg2
                    SYS     134                                 
                    INC     textFont                            
                    INC     giga_sysArg4                        
                    DBNE    textSlice, printC_slice
                    
                    MOVQB   giga_sysArg2, 0
                    SYS     134                                 
                    INC     giga_sysArg4                        
                    
                    PUSH
                    CALLI   printClip
                    POP
                    
printC_exit         RET



                    
printChar4x6        FNT4X6  textFont, textChr
                    FLT4X6  textFont
                    MOVQB   giga_sysArg2, 3                     
                    LDW     giga_sysArg4
                    PRN4X6  textFont
                    ADDBI   giga_sysArg4, 4                     
                    PUSH
                    CALLI   printClip4x6
                    POP
                    
printC46_exit       RET


printClip           ADDBI   cursorXY, giga_xfont
                    CMPI    cursorXY, giga_xres - giga_xfont    
                    BLE     printCl_exit
                    ANDBK   miscFlags, MISC_DISABLE_CLIP_BIT
                    BNE     printCl_exit                        
                    PUSH
                    CALLI   newLineScroll                       
                    POP
                    
printCl_exit        RET



printClip4x6        ADDBI   cursorXY, 4
                    CMPI    cursorXY, giga_xres - 4             
                    BLE     printCl46_exit
                    ANDBK   miscFlags, MISC_DISABLE_CLIP_BIT
                    BNE     printCl46_exit                      
                    PUSH
                    CALLI   newLineScroll4x6                    
                    POP
                    
printCl46_exit      RET



                    
clearCursorRow      PUSH
                    LDWI    SYS_SetMemory_v2_54
                    STW     giga_sysFn                          
                    MOVB    fgbgColour, giga_sysArg1            
                    LDWI    giga_videoTable
                    PEEKA   giga_sysArg3                        
                    MOVQW   clearLoop, giga_yfont

clearCR_loopy       MOVQB   giga_sysArg0, giga_xres
                    MOVQB   giga_sysArg2, 0                     
                    SYS     54                                  
                    INC     giga_sysArg3                        
                    DBNE    clearLoop, clearCR_loopy
                    CALLI   printInit                           
                    POP
                    RET


                    
newLineScroll       ANDBK   miscFlags, MISC_ENABLE_FNT4X6_BIT
                    JNE     newLineScroll4x6                    
                    LDI     giga_CursorX                        
                    ST      cursorXY
                    ST      giga_sysArg4
                    ANDBK   miscFlags, MISC_ENABLE_SCROLL_BIT
                    BNE     newLS_cont0                         
                    RET
                    
newLS_cont0         PUSH
                    ANDBK   miscFlags, MISC_ON_BOTTOM_ROW_BIT
                    BNE     newLS_cont1                         
                    ADDBI   cursorXY + 1, giga_yfont
                    CMPI    cursorXY + 1, giga_yres
                    BLT     newLS_exit
                    MOVQB   cursorXY + 1, giga_yres - giga_yfont
                    
newLS_cont1         CALLI   clearCursorRow
                    LDWI    giga_videoTable
                    STW     giga_sysArg2                        
                    MOVQB   giga_sysArg0, giga_yfont            
                    MOVQB   giga_sysArg1, giga_yres             
                    LDWI    SYS_ScrollVTableY_vX_38
                    STW     giga_sysFn
                    SYS     38
                    ORBI    miscFlags, MISC_ON_BOTTOM_ROW_BIT   
                    
newLS_exit          CALLI   printInit                           
                    POP
                    RET



                    
clearCursorRow4x6   PUSH
                    LDWI    SYS_SetMemory_v2_54
                    STW     giga_sysFn                          
                    MOVB    fgbgColour, giga_sysArg1            
                    LDWI    giga_videoTable
                    PEEKA   giga_sysArg3                        
                    MOVQW   clearLoop, 6

clearCR46_loopy     MOVQB   giga_sysArg0, giga_xres
                    MOVQB   giga_sysArg2, 0                     
                    SYS     54                                  
                    INC     giga_sysArg3                        
                    DBNE    clearLoop, clearCR46_loopy
                    CALLI   printInit                           
                    POP
                    RET


                    
newLineScroll4x6    LDI     0                                   
                    ST      cursorXY
                    ST      giga_sysArg4
                    ANDBK   miscFlags, MISC_ENABLE_SCROLL_BIT
                    BNE     newLS46_cont0                       
                    RET
                    
newLS46_cont0       PUSH
                    ANDBK   miscFlags, MISC_ON_BOTTOM_ROW_BIT
                    BNE     newLS46_cont1                       
                    ADDBI   cursorXY + 1, 6
                    CMPI    cursorXY + 1, giga_yres
                    BLT     newLS46_exit
                    MOVQB   cursorXY + 1, giga_yres - 6
                    
newLS46_cont1       CALLI   clearCursorRow4x6
                    LDWI    giga_videoTable
                    STW     giga_sysArg2                        
                    MOVQB   giga_sysArg0, 6                     
                    MOVQB   giga_sysArg1, giga_yres             
                    LDWI    SYS_ScrollVTableY_vX_38
                    STW     giga_sysFn
                    SYS     38
                    ORBI    miscFlags, MISC_ON_BOTTOM_ROW_BIT   
                    
newLS46_exit        CALLI   printInit4x6                        
                    POP
                    RET



atTextCursor        ANDBK   miscFlags, MISC_ENABLE_FNT4X6_BIT
                    JNE     atTextCursor4x6                     
                    CMPI    cursorXY, giga_xres - giga_xfont
                    BLE     atTC_checkY
                    MOVQB   cursorXY, 0
                    
atTC_checkY         CMPI    cursorXY + 1, giga_yres - giga_yfont
                    BLT     atTC_resbot
                    MOVQB   cursorXY + 1, giga_yres - giga_yfont
                    ORBI    miscFlags, MISC_ON_BOTTOM_ROW_BIT   
                    RET
                    
atTC_resbot         ANDBI   miscFlags, MISC_ON_BOTTOM_ROW_MSK   
                    RET


atTextCursor4x6     CMPI    cursorXY, giga_xres - 4
                    BLE     atTC46_checkY
                    MOVQB   cursorXY, 0
                    
atTC46_checkY       CMPI    cursorXY + 1, giga_yres - 6
                    BLT     atTC46_resbot
                    MOVQB   cursorXY + 1, giga_yres - 6
                    ORBI    miscFlags, MISC_ON_BOTTOM_ROW_BIT   
                    RET
                    
atTC46_resbot       ANDBI   miscFlags, MISC_ON_BOTTOM_ROW_MSK   
                    RET

