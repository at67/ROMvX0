_startAddress_                    EQU                          0x0200

; Internal Variables
serialRawPrev                     EQU                          0x0081
frameCountPrev                    EQU                          0x00d6
register0                         EQU                          0x0082
register1                         EQU                          register0 + 0x02
register2                         EQU                          register0 + 0x04
register3                         EQU                          register0 + 0x06
register4                         EQU                          register0 + 0x08
register5                         EQU                          register0 + 0x0A
register6                         EQU                          register0 + 0x0C
register7                         EQU                          register0 + 0x0E
register8                         EQU                          register0 + 0x10
register9                         EQU                          register0 + 0x12
register10                        EQU                          register0 + 0x14
register11                        EQU                          register0 + 0x16
register12                        EQU                          register0 + 0x18
register13                        EQU                          register0 + 0x1A
register14                        EQU                          register0 + 0x1C
register15                        EQU                          register0 + 0x1E
fgbgColour                        EQU                          register0 + 0x20
cursorXY                          EQU                          register0 + 0x22
midiStream                        EQU                          register0 + 0x24
midiDelay                         EQU                          register0 + 0x26
miscFlags                         EQU                          register0 + 0x28

; Internal Constants
MISC_WAIT_VBLANK_BIT              EQU                          0x01
MISC_ENABLE_SCROLL_BIT            EQU                          0x02
MISC_ON_BOTTOM_ROW_BIT            EQU                          0x04
MISC_DISABLE_CLIP_BIT             EQU                          0x08
MISC_ENABLE_FNT4X6_BIT            EQU                          0x10
MISC_WAIT_VBLANK_MSK              EQU                          0xfe
MISC_ENABLE_SCROLL_MSK            EQU                          0xfd
MISC_ON_BOTTOM_ROW_MSK            EQU                          0xfb
MISC_DISABLE_CLIP_MSK             EQU                          0xf7
MISC_ENABLE_FNT4X6_MSK            EQU                          0xef

; Internal Buffers
regsWorkArea                      EQU                          0x0000
textWorkArea                      EQU                          0x7fa0

; Includes
%includePath                      "../runtime"
%include                          util.i
%include                          gigatron.i
%include                          macros_ROMvX0.i

; Labels
__entryPoint_                     EQU                          0x0200

; Constants

; Global Variables

; Local Variables

; Arrays

; Strings

; Constant Strings

; Data

; Time

; Define Bytes

; Define Words

; Define Images

; Define Loader Image Chunks

; Define Midis

; Define Blits

; Define Fonts

; Define Sprites

; Define Patterns

; Lookup Tables

; Lazy Constants

; Code
__entryPoint_                     LDI                          0x80
                                  STW                          romUser
                                  RomCheck                     
                                  Initialise                                                ; INIT

                                  ClearVertBlinds                                           ; cls

                                  MOVQB                        fgbgColour + 1, 37           ; set FG_COLOUR, &h25

                                  MOVQW                        drawRectF_x1, 40
                                  MOVQW                        drawRectF_y1, 20
                                  MOVQW                        drawRectF_x2, 120
                                  MOVQW                        drawRectF_y2, 100
                                  DrawRectF                                                 ; rectf 40, 20, 120, 100

                                  MOVQB                        fgbgColour + 1, 33           ; set FG_COLOUR, &h21

                                  MOVQW                        drawCircleF_cx, 80
                                  MOVQW                        drawCircleF_cy, 60
                                  MOVQW                        drawCircleF_r, 35
                                  DrawCircleF                                               ; circlef 80, 60, 35

                                  MOVQB                        fgbgColour + 1, 0            ; set FG_COLOUR, 0

                                  MOVQW                        drawRect_x1, 40
                                  MOVQW                        drawRect_y1, 20
                                  MOVQW                        drawRect_x2, 120
                                  MOVQW                        drawRect_y2, 100
                                  DrawRect                                                  ; rect 40, 20, 120, 100

                                  MOVQW                        drawLine_x1, 40
                                  MOVQW                        drawLine_y1, 20
                                  MOVQW                        drawLine_x2, 60
                                  MOVQW                        drawLine_y2, 60
                                  DrawLine                                                  ; line 40, 20, 60, 60

                                  MOVQW                        drawLine_x1, 60
                                  MOVQW                        drawLine_y1, 60
                                  MOVQW                        drawLine_x2, 40
                                  MOVQW                        drawLine_y2, 100
                                  DrawLine                                                  ; line 60, 60, 40, 100

                                  MOVQW                        drawLine_x1, 61
                                  MOVQW                        drawLine_y1, 20
                                  MOVQW                        drawLine_x2, 61
                                  MOVQW                        drawLine_y2, 100
                                  DrawLine                                                  ; line 61, 20, 61, 100

                                  MOVQW                        drawLine_x1, 99
                                  MOVQW                        drawLine_y1, 20
                                  MOVQW                        drawLine_x2, 99
                                  MOVQW                        drawLine_y2, 100
                                  DrawLine                                                  ; line 99, 20, 99, 100

                                  MOVQW                        drawLine_x1, 120
                                  MOVQW                        drawLine_y1, 20
                                  MOVQW                        drawLine_x2, 100
                                  MOVQW                        drawLine_y2, 60
                                  DrawLine                                                  ; line 120, 20, 100, 60

                                  MOVQW                        drawLine_x1, 100
                                  MOVQW                        drawLine_y1, 60
                                  MOVQW                        drawLine_x2, 120
                                  MOVQW                        drawLine_y2, 100
                                  DrawLine                                                  ; line 100, 60, 120, 100

                                  MOVQB                        giga_sysArg2, 40
                                  MOVQB                        giga_sysArg3, 28
                                  MOVQB                        giga_sysArg4, 80
                                  MOVQB                        giga_sysArg5, 80
                                  MOVQB                        giga_sysArg1, 30
                                  MOVQB                        giga_sysArg0, 0
                                  MOVQB                        giga_sysArg7, 33
                                  MOVQB                        giga_sysArg6, 0x01
                                  ParityFill                                                ; fill 40, 20, 80, 80, &h1E, &h00, &h21, 1

                                  HALT                                                      ; end

                                  HALT                                                      ; END



;*************************************************************************************************************
;*************************************************************************************************************
;* Internal runtime, DO NOT MODIFY PAST THIS POINT, modifications must be made in the original include files *
;*************************************************************************************************************
;*************************************************************************************************************

romCheck                          EQU     0x7ad6
resetVideoFlags                   EQU     0x7da4
initClearFuncs                    EQU     0x7dac
clearVertBlinds                   EQU     0x7ba8
drawHLine                         EQU     0x7ab0
drawVLine                         EQU     0x79db
drawLine                          EQU     0x7dba
drawLineExt                       EQU     0x7eb2
drawCircleF                       EQU     0x7fa0
drawRect                          EQU     0x7bd2
drawRectF                         EQU     0x7cc1
parityFill                        EQU     0x7ea1



realTimeAddr        EQU     register0
realTimeProc0       EQU     register1
realTimeProc1       EQU     register2
realTimeProc2       EQU     register3
numericLabel        EQU     register0
defaultLabel        EQU     register1
lutLabs             EQU     register2
lutAddrs            EQU     register3
lutIndex            EQU     register8
romUser             EQU     register0                           
romType             EQU     register1                           
romReadAddr         EQU     register0               
romErrAddr          EQU     0x7E                                
vramErrAddr         EQU     0x0101

romErrAddr          DW      vramErrAddr
 


romCheck            LD      giga_romType
                    ANDI    0xFC
                    STW     romType
                    SUBW    romUser
                    BEQ     romC_return                         
                    LDW     romUser
                    SUBI    0x80                                
                    BNE     romC_check
                    LDW     romType
                    SUBW    romUser
                    BEQ     romC_return                         
                    BRA     romC_fail
                    
romC_check          LDW     romType                             
                    SUBW    romUser
                    BGT     romC_return                         
                    
romC_fail           LD      giga_rand0
                    POKE    romErrAddr                          
                    BRA     romC_fail

romC_return         RET



xreset              EQU     register0
xcount              EQU     register1
ycount              EQU     register2
treset              EQU     register3
breset              EQU     register8
top                 EQU     register9
bot                 EQU     register10
vtbLines            EQU     register10
vramAddr            EQU     register11
evenAddr            EQU     register12
clsAddress          EQU     register13
clsLines            EQU     register14
varAddress          EQU     register13
varCount            EQU     register14
clrAddress          EQU     register13
clrLines            EQU     register14
clrWidth            EQU     register15
ramAddr             EQU     register14
ramCount            EQU     register15


resetVideoFlags     MOVQW   cursorXY, giga_CursorX              
                    ANDBI   miscFlags, MISC_ON_BOTTOM_ROW_MSK   
                    RET



initClearFuncs      PUSH
                    CALLI   resetVideoFlags
                    LDWI    SYS_SetMemory_v2_54                 
                    STW     giga_sysFn
                    MOVB    fgbgColour, giga_sysArg1            
                    POP
                    RET


                    
clearVertBlinds     PUSH
                    CALLI   initClearFuncs
                    MOVQW   top, giga_vram >> 8
                    MOVQB   clsLines, giga_yres/2
                    
clearVB_loopy       MOVQB   giga_sysArg0, giga_xres
                    MOVQB   giga_sysArg2, 0                     
                    MOVB    top, giga_sysArg3                   
                    SYS     54                                  
    
                    MOVQB   giga_sysArg0, giga_xres
                    MOVQB   giga_sysArg2, 0                     
                    LDI     giga_yres - 1 + 16
                    SUBW    top
                    ST      giga_sysArg3                        
                    SYS     54                                  
                    INC     top                                 
                    DBNE    clsLines, clearVB_loopy
                    POP
                    RET




graphicsMode        EQU     register0
waitVBlankNum       EQU     register0
waitVBlankTmp       EQU     register1

drawHLine_x1        EQU     register0
drawHLine_y1        EQU     register1
drawHLine_x2        EQU     register2

drawVLine_x1        EQU     register0
drawVLine_y1        EQU     register1
drawVLine_y2        EQU     register2

drawLine_x1         EQU     register0
drawLine_y1         EQU     register1
drawLine_x2         EQU     register2
drawLine_y2         EQU     register3
drawLine_xy1        EQU     register0
drawLine_xy2        EQU     register1
drawLine_dxy1       EQU     register2
drawLine_dxy2       EQU     register3
drawLine_dx1        EQU     register8
drawLine_dy1        EQU     register9
drawLine_dx2        EQU     register10
drawLine_dy2        EQU     register11
drawLine_sx         EQU     register12
drawLine_sy         EQU     register13
drawLine_h          EQU     register14
drawLine_num        EQU     register15
drawLine_count      EQU     register14
drawLine_dx         EQU     register2
drawLine_dy         EQU     register3
drawLine_u          EQU     register8
drawLine_v          EQU     register9
drawLine_addr       EQU     register10
drawLine_ddx        EQU     register11
drawLine_cnt        EQU     register12
drawLine_swp        EQU     register13
drawLine_xy         EQU     register7

drawPixel_xy        EQU     register0
readPixel_xy        EQU     register0

drawCircle_cx       EQU     register0
drawCircle_cy       EQU     register1
drawCircle_r        EQU     register2
drawCircle_a        EQU     register3
drawCircle_d        EQU     register8
drawCircle_x        EQU     register9
drawCircle_y        EQU     register10
drawCircle_ch0      EQU     register11
drawCircle_ch1      EQU     register12
drawCircle_ch2      EQU     register13
drawCircle_ch3      EQU     register14

drawCircleF_x1      EQU     register0
drawCircleF_y1      EQU     register1
drawCircleF_x2      EQU     register2
drawCircleF_cnt     EQU     register3
drawCircleF_cx      EQU     register15
drawCircleF_cy      EQU     register10
drawCircleF_r       EQU     register11
drawCircleF_v       EQU     register8
drawCircleF_w       EQU     register9

drawRect_x1         EQU     register8
drawRect_y1         EQU     register9
drawRect_x2         EQU     register10
drawRect_y2         EQU     register11

drawRectF_x1        EQU     register0
drawRectF_y1        EQU     register1
drawRectF_x2        EQU     register2
drawRectF_y2        EQU     register3
drawRectF_xcnt      EQU     register8
drawRectF_ycnt      EQU     register9

drawPoly_mode       EQU     register14
drawPoly_addr       EQU     register7

    
drawLine            PUSH                                        
                    LDI     1
                    STW     drawLine_dx1
                    STW     drawLine_dx2
                    STW     drawLine_dy1
                    MOVQW   drawLine_dy2, 0
    
                    LDW     drawLine_x2                         
                    SUBW    drawLine_x1
                    STW     drawLine_sx
                    ANDBK   drawLine_sx+1, 0x80
                    BEQ     drawL_dy
                    LDNI    1
                    STW     drawLine_dx1        
                    STW     drawLine_dx2                        
                    NEGW    drawLine_sx                         
                    
drawL_dy            LDW     drawLine_y2
                    SUBW    drawLine_y1
                    STW     drawLine_sy
                    STW     drawLine_h                          
                    ANDBK   drawLine_h+1, 0x80
                    BEQ     drawL_ext
                    
                    LDNI    1
                    STW     drawLine_dy1                        
                    NEGW    drawLine_sy                         
                    LDW     drawLine_sy
                    SUBW    drawLine_sx
                    BLE     drawL_ext           
                    MOVWA   drawLine_dy1, drawLine_dy2          
    
drawL_ext           CALLI   drawLineExt


drawLineExt         MOVB    drawLine_x1, drawLine_xy1
                    MOVB    drawLine_y1, drawLine_xy1 + 1
                    ADDBI   drawLine_xy1 + 1, 8                 
                    
                    MOVB    drawLine_x2, drawLine_xy2
                    MOVB    drawLine_y2, drawLine_xy2 + 1
                    ADDBI   drawLine_xy2 + 1, 8                 
                    
                    LDW     drawLine_sy
                    SUBW    drawLine_sx
                    BLE     drawL_num
                    MOVQW   drawLine_dx2, 0                     
                    XCHGB   drawLine_sx, drawLine_sy            
                    LDW     drawLine_h
                    BLE     drawL_num
                    MOVQW   drawLine_dy2, 1                     
    
drawL_num           LD      drawLine_sx
                    LSRB    giga_vAC
                    ADDI    1
                    STW     drawLine_num                        
                    STW     drawLine_count                      
                    
                    MOVB    drawLine_dy1, giga_vAC + 1
                    MOVQB   giga_vAC, 0
                    ADDW    drawLine_dx1
                    STW     drawLine_dxy1                       
    
                    MOVB    drawLine_dy2, giga_vAC + 1
                    MOVQB   giga_vAC, 0
                    ADDW    drawLine_dx2
                    STW     drawLine_dxy2                       
                    
                    MOVQW   giga_sysFn, SYS_DrawLine_vX_86      
                    SYS     86                                  
                    POP                                         
                    
                    RET


drawCircleF         LDWI    SYS_SetMemory_v2_54
                    STW     giga_sysFn
                    MOVB    fgbgColour + 1, giga_sysArg1
                    LDI     0
                    STW     drawCircleF_v
                    STW     drawCircleF_w
                    
drawCF_wloop        LDW     drawCircleF_cx
                    SUBW    drawCircleF_r
                    STW     drawCircleF_x1
                    LDW     drawCircleF_cx
                    ADDW    drawCircleF_r
                    STW     drawCircleF_x2
                    SUBW    drawCircleF_x1
                    STW     drawCircleF_cnt
                    LDW     drawCircleF_cy
                    SUBW    drawCircleF_v
                    STW     giga_sysArg3
                    ADDBI   giga_sysArg3, 8                     
                    MOVB    drawCircleF_x1, giga_sysArg2        
                    MOVB    drawCircleF_cnt, giga_sysArg0       
                    SYS     54                                  
                    LDW     drawCircleF_cy
                    ADDW    drawCircleF_v
                    STW     giga_sysArg3
                    ADDBI   giga_sysArg3, 8                     
                    MOVB    drawCircleF_x1, giga_sysArg2        
                    MOVB    drawCircleF_cnt, giga_sysArg0       
                    SYS     54                                  
                    LDW     drawCircleF_w
                    ADDW    drawCircleF_v
                    ADDW    drawCircleF_v
                    ADDI    1
                    STW     drawCircleF_w
                    INC     drawCircleF_v
                    
drawCF_rloop        LDW     drawCircleF_w
                    BLT     drawCF_wloop
                    LDW     drawCircleF_w
                    SUBW    drawCircleF_r
                    SUBW    drawCircleF_r
                    ADDI    1
                    STW     drawCircleF_w
                    DBNE    drawCircleF_r, drawCF_rloop
                    RET



drawHLine           MOVB    drawHLine_x1, giga_sysArg2          
                    LD      drawHLine_x2
                    SUBW    drawHLine_x1
                    BGE     drawHL_cont
                    MOVB    drawHLine_x2, giga_sysArg2          
                    LD      drawHLine_x1
                    SUBW    drawHLine_x2
                    
drawHL_cont         ADDI    1
                    ST      giga_sysArg0                        
                    MOVB    fgbgColour + 1, giga_sysArg1        
                    MOVB    drawHLine_y1, giga_sysArg3
                    ADDBI   giga_sysArg3, 8                     
                    LDWI    SYS_SetMemory_v2_54                 
                    STW     giga_sysFn
                    SYS     54                                  
                    RET



drawVLine           MOVB    drawVLine_y1, giga_sysArg3          
                    LD      drawVLine_y2
                    SUBW    drawVLine_y1
                    BGE     drawVL_cont
                    MOVB    drawVLine_y2, giga_sysArg3          
                    LD      drawVLine_y1
                    SUBW    drawVLine_y2
                    
drawVL_cont         ADDI    1
                    ST      giga_sysArg0                        
                    MOVB    fgbgColour + 1, giga_sysArg1        
                    MOVB    drawVLine_x1, giga_sysArg2
                    ADDBI   giga_sysArg3, 8                     
                    MOVQW   giga_sysFn, SYS_DrawVLine_vX_66     
                    SYS     66                                  
                    RET


drawRect            PUSH
                    MOVWA   drawRect_x1, drawHLine_x1
                    MOVWA   drawRect_y1, drawHLine_y1
                    MOVWA   drawRect_x2, drawHLine_x2
                    CALLI   drawHLine
                    MOVWA   drawRect_y2, drawHLine_y1
                    CALLI   drawHLine

                    MOVWA   drawRect_x1, drawVLine_x1
                    MOVWA   drawRect_y1, drawVLine_y1
                    MOVWA   drawRect_y2, drawVLine_y2
                    CALLI   drawVLine
                    MOVWA   drawRect_x2, drawVLine_x1
                    MOVWA   drawRect_y1, drawVLine_y1
                    MOVWA   drawRect_y2, drawVLine_y2
                    CALLI   drawVLine

                    POP
                    RET


drawRectF           LDWI    SYS_SetMemory_v2_54
                    STW     giga_sysFn
                    LD      drawRectF_y2
                    SUBW    drawRectF_y1
                    STW     drawRectF_ycnt                      
                    BGE     drawRFY_cont
                    MOVB    drawRectF_y2, drawRectF_y1
                    NEGW    drawRectF_ycnt                      
                    
drawRFY_cont        ADDBI   drawRectF_y1, 8                     
                    INC     drawRectF_ycnt                      
                    LD      drawRectF_x2
                    SUBW    drawRectF_x1
                    BGE     drawRFX_cont                        
                    MOVB    drawRectF_x2, drawRectF_x1          
                    NEGW    giga_vAC                            
                    
drawRFX_cont        ADDI    1                                   
                    ST      drawRectF_xcnt
                    MOVB    fgbgColour + 1, giga_sysArg1        
                    MOVB    drawRectF_y1, giga_sysArg3          
                    
drawRF_loop         MOVB    drawRectF_xcnt, giga_sysArg0        
                    MOVB    drawRectF_x1, giga_sysArg2          
                    SYS     54                                  
                    INC     giga_sysArg3
                    DBNE    drawRectF_ycnt, drawRF_loop
                    RET


parityFill          LDWI    SYS_ParityFill_vX_44
                    STW     giga_sysFn
                    MOVB    giga_sysArg2, register0
                    MOVB    giga_sysArg4, register0 + 1
                    MOVB    giga_sysArg6, register1
                    SYS     44
                    RET

