* source: Core/ROMvX0.asm.py
                                          186   enableListing()
                                          187   #-----------------------------------------------------------------------
                                          188   #
                                          189   #  Start of core
                                          190   #
                                          191   #-----------------------------------------------------------------------
                                          192   #
                                          193   # Pre-loading the formal interface as a way to get warnings when
                                          194   # accidentally redefined with a different value
                                          195   loadBindings('ROMvX0_interface.json')
                                          196   loadBindings('Core/interface-dev.json') # Provisional values for DEVROM
                                          197
                                          198   # Gigatron clock
                                          199   cpuClock = 6.250e+06
                                          200
                                          201   # Output pin assignment for VGA
                                          202   R, G, B, hSync, vSync = 1, 4, 16, 64, 128
                                          203   syncBits = hSync+vSync # Both pulses negative
                                          204
                                          205   # When the XOUT register is in the circuit, the rising edge triggers its update.
                                          206   # The loop can therefore not be agnostic to the horizontal pulse polarity.
                                          207   assert syncBits & hSync != 0
                                          208
                                          209   # VGA 640x480 defaults (to be adjusted below!)
                                          210   vFront = 10     # Vertical front porch
                                          211   vPulse = 2      # Vertical sync pulse
                                          212   vBack  = 33     # Vertical back porch
                                          213   vgaLines = vFront + vPulse + vBack + 480
                                          214   vgaClock = 25.175e+06
                                          215
                                          216   # Video adjustments for Gigatron
                                          217   # 1. Our clock is (slightly) slower than 1/4th VGA clock. Not all monitors will
                                          218   #    accept the decreased frame rate, so we restore the frame rate to above
                                          219   #    minimum 59.94 Hz by cutting some lines from the vertical front porch.
                                          220   vFrontAdjust = vgaLines - int(4 * cpuClock / vgaClock * vgaLines)
                                          221   vFront -= vFrontAdjust
                                          222   # 2. Extend vertical sync pulse so we can feed the game controller the same
                                          223   #    signal. This is needed for controllers based on the 4021 instead of 74165
                                          224   vPulseExtension = max(0, 8-vPulse)
                                          225   vPulse += vPulseExtension
                                          226   # 3. Borrow these lines from the back porch so the refresh rate remains
                                          227   #    unaffected
                                          228   vBack -= vPulseExtension
                                          229
                                          230   # Start value of vertical blank counter
                                          231   videoYline0 = 1-2*(vFront+vPulse+vBack-2)
                                          232
                                          233   # Mismatch between video lines and sound channels
                                          234   soundDiscontinuity = (vFront+vPulse+vBack) % 4
                                          235
                                          236   # QQVGA resolution
                                          237   qqVgaWidth      = 160
                                          238   qqVgaHeight     = 120
                                          239
                                          240   # Game controller bits (actual controllers in kit have negative output)
                                          241   # +----------------------------------------+
                                          242   # |       Up                        B*     |
                                          243   # |  Left    Right               B     A*  |
                                          244   # |      Down      Select Start     A      |
                                          245   # +----------------------------------------+ *=Auto fire
                                          246   buttonRight     = 1
                                          247   buttonLeft      = 2
                                          248   buttonDown      = 4
                                          249   buttonUp        = 8
                                          250   buttonStart     = 16
                                          251   buttonSelect    = 32
                                          252   buttonB         = 64
                                          253   buttonA         = 128
                                          254
                                          255   #-----------------------------------------------------------------------
                                          256   #
                                          257   #  RAM page 0: zero-page variables
                                          258   #
                                          259   #-----------------------------------------------------------------------
                                          260   #
                                          261   # Memory size in pages from auto-detect
                                          262   memSize         = zpByte()
                                          263
                                          264   # Active interpreter page, swapped with channel, so that we can do a one
                                          265   # instruction vCpuSelect reset, i.e. st(vCpuSelect,[vCpuSelect])
                                          266   vCpuSelect      = zpByte()
                                          267
                                          268   # Next sound sample being synthesized
                                          269   sample          = zpByte()
                                          270   # To save one instruction in the critical inner loop, `sample' is always
                                          271   # reset with its own address instead of, for example, the value 0. Compare:
                                          272   # 1 instruction reset
                                          273   #       st sample,[sample]
                                          274   # 2 instruction reset:
                                          275   #       ld 0
                                          276   #       st [sample]
                                          277   # The difference is not audible. This is fine when the reset/address
                                          278   # value is low and doesn't overflow with 4 channels added to it.
                                          279   # There is an alternative, but it requires pull-down diodes on the data bus:
                                          280   #       st [sample],[sample]
                                          281   assert 4*63 + sample < 256
                                          282   # We pin this reset/address value to 3, so `sample' swings from 3 to 255
                                          283   assert sample == 3
                                          284
                                          285   # Former bootCount and bootCheck (<= ROMv3)
                                          286   vSPH             = zpByte()
                                          287
                                          288   # The current channel number for sound generation. Advanced every scan line
                                          289   # and independent of the vertical refresh to maintain constant oscillation.
                                          290   channel         = zpByte()
                                          291
                                          292   # Entropy harvested from SRAM startup and controller input
                                          293   entropy         = zpByte(2)
                                          294
                                          295   # Audio quantisation bit mask, (needs a HW mod for full realisation)
                                          296   audioBitMask    = zpByte() # 0xFF:0bits to 0x00:8bits, default 0x0F:4bits
                                          297
                                          298   # Visible video
                                          299   videoY          = zpByte() # Counts up from 0 to 238 in steps of 2
                                          300                              # Counts up (and is odd) during vertical blank
                                          301   videoModeB      = zpByte() # Handler for every 2nd line (pixel burst or vCPU)
                                          302   videoModeC      = zpByte() # Handler for every 3rd line (pixel burst or vCPU)
                                          303   videoModeD      = zpByte() # Handler for every 4th line (pixel burst or vCPU)
                                          304
                                          305   nextVideo       = zpByte() # Jump offset to scan line handler (videoA, B, C...)
                                          306   videoPulse      = nextVideo # Used for pulse width modulation
                                          307
                                          308   # Frame counter is good enough as system clock
                                          309   frameCount      = zpByte(1)
                                          310
                                          311   # Serial input (game controller)
                                          312   serialRaw       = zpByte() # New raw serial read
                                          313   serialLast      = zpByte() # Previous serial read
                                          314   buttonState     = zpByte() # Clearable button state
                                          315   resetTimer      = zpByte() # After 2 seconds of holding 'Start', do a soft reset
                                          316                              # XXX move to page 1 to free up space
                                          317
                                          318   # Extended output (blinkenlights in bit 0:3 and audio in bit 4:7). This
                                          319   # value must be present in AC during a rising hSync edge. It then gets
                                          320   # copied to the XOUT register by the hardware. The XOUT register is only
                                          321   # accessible in this indirect manner because it isn't part of the core
                                          322   # CPU architecture.
                                          323   xout            = zpByte()
                                          324   xoutMask        = zpByte() # The blinkenlights and sound on/off state
                                          325
                                          326   # vCPU interpreter
                                          327   vTicks          = zpByte()  # Interpreter ticks are units of 2 clocks
                                          328   vPC             = zpByte(2) # Interpreter program counter, points into RAM
                                          329   vAC             = zpByte(2) # Interpreter accumulator, 16-bits
                                          330   vLR             = zpByte(2) # Return address, for returning after CALL
                                          331   vSP             = zpByte(1) # Stack pointer
                                          332   vTmp            = zpByte()
                                          333   vReturn         = zpByte()  # Return into video loop (in page of vBlankStart)
                                          334
                                          335   # Scratch
                                          336   frameX          = zpByte() # Starting byte within page
                                          337   frameY          = zpByte() # Page of current pixel line (updated by videoA)
                                          338
                                          339   # Vertical blank (reuse some variables used in the visible part)
                                          340   videoSync0      = frameX   # Vertical sync type on current line (0xc0 or 0x40)
                                          341   videoSync1      = frameY   # Same during horizontal pulse (0x80 or 0x00)
                                          342
                                          343   # Versioning for GT1 compatibility
                                          344   # Please refer to Docs/GT1-files.txt for interpreting this variable
                                          345   romType         = zpByte(1)
                                          346
                                          347   # The low 3 bits are repurposed to select the actively updated sound channels.
                                          348   # Valid bit combinations are:
                                          349   #  xxxxx011     Default after reset: 4 channels (page 1,2,3,4)
                                          350   #  xxxxx001     2 channels at double update rate (page 1,2)
                                          351   #  xxxxx000     1 channel at quadruple update rate (page 1)
                                          352   # The main application for this is to free up the high bytes of page 2,3,4.
                                          353   channelMask = symbol('channelMask_v4')
                                          354   assert romType == channelMask
                                          355
                                          356   # SYS function arguments and results/scratch
                                          357   sysFn           = zpByte(2)
                                          358   sysArgs         = zpByte(8)
                                          359
                                          360   # Play sound if non-zero, count down and stop sound when zero
                                          361   soundTimer      = zpByte()
                                          362
                                          363   # Fow now the LED state machine itself is hard-coded in the program ROM
                                          364   #ledTimer        = zpByte() # Number of ticks until next LED change
                                          365   #ledState_v2     = zpByte() # Current LED state
                                          366   #ledTempo        = zpByte() # Next value for ledTimer after LED state change
                                          367   jiffiesTick     = zpByte() # VBlank ticks
                                          368   secondsTickLo   = zpByte() # Seconds ticks low byte
                                          369   secondsTickHi   = zpByte() # Seconds ticks high byte
                                          370
                                          371   # All bytes above userVars, except 0x80, are potentially usable by user code
                                          372   # that refrains from using ROM facilities introduced since ROMv5a.
                                          373   userVars        = zpByte(0)
                                          374
                                          375   # [0x30-0x35]
                                          376   # Saved vCPU context during vIRQ (since ROMv5a)
                                          377   # Code that uses vCPU interrupts should not use these locations.
                                          378   # area register save area
                                          379   vIrqSave        = zpByte(6)
                                          380   userVars1       = zpByte(0)
                                          381
                                          382   # [0x80]
                                          383   # Constant 0x01.
                                          384   zpReset(0x80)
                                          385   oneConst        = zpByte(1)
                                          386   userVars2       = zpByte(0)
                                          387
                                          388   # [0x82-0xB7]
                                          389   # Scratch for certain ops and sys calls introduced in ROMvX0.
                                          390   # Pending more specific information to be inserted here.
                                          391   zpReset(0x82)
                                          392   vX0Scratch      = zpByte(0xB8-0x82)
                                          393
                                          394   # [0xB8-0xBF]
                                          395   # State for ROMvX0 SYS calls with vCPU callbacks.
                                          396   # Pending more specific information to be inserted here.
                                          397   vX0State        = zpByte(0xC0-0xB8)
                                          398
                                          399   # [0xC0-0xCF]
                                          400   # Fixed locations for ROMvX0 opcodes that operate on long and floats.
                                          401   # Pending more specific information to be inserted here.
                                          402   vFAC_reserved   = zpByte(4)     # reserved for float accumulator
                                          403   vLAC            = zpByte(4)     # long accumulator/continued float accumulator
                                          404   vTmpL           = zpByte(4)     # long scratch register
                                          405   vDST            = zpByte(2)     # destination address for copy opcodes.
                                          406   vTmpW           = zpByte(2)     # word scratch register
                                          407
                                          408
                                          409
                                          410   #-----------------------------------------------------------------------
                                          411   #
                                          412   #  RAM page 1: video line table
                                          413   #
                                          414   #-----------------------------------------------------------------------
                                          415   #
                                          416   # Byte 0-239 define the video lines
                                          417   videoTable      = 0x0100 # Indirection table: Y[0] dX[0]  ..., Y[119] dX[119]
                                          418
                                          419   vReset          = 0x01f0
                                          420   vIRQ_v5         = 0x01f6
                                          421   ctrlBits        = 0x01f8
                                          422   videoTop_v5     = 0x01f9 # Number of skip lines
                                          423
                                          424   # Highest bytes are for sound channel variables
                                          425   wavA = 250      # Waveform modulation with `adda'
                                          426   wavX = 251      # Waveform modulation with `xora'
                                          427   keyL = 252      # Frequency low 7 bits (bit7 == 0)
                                          428   keyH = 253      # Frequency high 8 bits
                                          429   oscL = 254      # Phase low 7 bits
                                          430   oscH = 255      # Phase high 8 bits
                                          431
                                          432   #-----------------------------------------------------------------------
                                          433   #  Memory layout
                                          434   #-----------------------------------------------------------------------
                                          435
                                          436   userCode = 0x0200       # Application vCPU code
                                          437   soundTable = 0x0700     # Wave form tables (doubles as right-shift-2 table)
                                          438   screenMemory = 0x0800   # Default start of screen memory: 0x0800 to 0x7fff
                                          439
                                          440   #-----------------------------------------------------------------------
                                          441   #  Application definitions
                                          442   #-----------------------------------------------------------------------
                                          443
                                          444   maxTicks = 30//2                 # Duration of vCPU's slowest virtual opcode (ticks)
                                          445   minTicks = 14//2                 # vcPU's fastest instruction
                                          446   v6502_maxTicks = 38//2           # Max duration of v6502 processing phase (ticks)
                                          447
                                          448   runVcpu_overhead = 5            # Caller overhead (cycles)
                                          449   vCPU_overhead = 9               # Callee overhead of jumping in and out (cycles)
                                          450   v6502_overhead = 11             # Callee overhead for v6502 (cycles)
                                          451
                                          452   v6502_adjust = (v6502_maxTicks - maxTicks) + (v6502_overhead - vCPU_overhead)//2
                                          453   assert v6502_adjust >= 0        # v6502's overhead is a bit more than vCPU
                                          454
                                          455   def runVcpu(n, ref=None, returnTo=None):
                                          456     """Macro to run interpreter for exactly n cycles. Returns 0 in AC.
                                          457
                                          458     - `n' is the number of available Gigatron cycles including overhead.
                                          459       This is converted into interpreter ticks and takes into account
                                          460       the vCPU calling overheads. A `nop' is inserted when necessary
                                          461       for alignment between cycles and ticks.
                                          462     - `returnTo' is where program flow continues after return. If not set
                                          463        explicitely, it will be the first instruction behind the expansion.
                                          464     - If another interpreter than vCPU is active (v6502...), that one
                                          465       must adjust for the timing differences, because runVcpu wouldn't know."""
                                          466
                                          467     overhead = runVcpu_overhead + vCPU_overhead
                                          468     if returnTo == 0x100:         # Special case for videoZ
                                          469       overhead -= 2
                                          470
                                          471     if n is None:
                                          472       # (Clumsily) create a maximum time slice, corresponding to a vTicks
                                          473       # value of 127 (giving 282 cycles). A higher value doesn't work because
                                          474       # then SYS functions that just need 28 cycles (0 excess) won't start.
                                          475       n = (127 + maxTicks) * 2 + overhead
                                          476
                                          477     n -= overhead
                                          478     assert n > 0
                                          479
                                          480     if n % 2 == 1:
                                          481       nop()                       # Tick alignment
                                          482       n -= 1
                                          483     assert n % 2 == 0
                                          484
                                          485     print('runVcpu at $%04x net cycles %3s info %s' % (pc(), n, ref))
                                          486
                                          487     if returnTo != 0x100:
                                          488       if returnTo is None:
                                          489         returnTo = pc() + 5       # Next instruction
                                          490       ld(lo(returnTo))            #0
                                          491       st([vReturn])               #1
                                          492
                                          493     n //= 2
                                          494     n -= maxTicks                 # First instruction always runs
                                          495     assert n < 128
                                          496     assert n >= v6502_adjust
                                          497
                                          498     ld([vCpuSelect],Y)            #2
                                          499     jmp(Y,'ENTER')                #3
                                          500     ld(n)                         #4
                                          501   assert runVcpu_overhead ==       5
                                          502
                                          503   #-----------------------------------------------------------------------
                                          504   #       v6502 definitions
                                          505   #-----------------------------------------------------------------------
                                          506   #
                                          507   # Registers are zero page variables
                                          508   v6502_PC        = vLR           # Program Counter
                                          509   v6502_PCL       = vLR+0         # Program Counter Low
                                          510   v6502_PCH       = vLR+1         # Program Counter High
                                          511   v6502_S         = vSP           # Stack Pointer (kept as "S+1")
                                          512   v6502_A         = vAC+0         # Accumulator
                                          513   v6502_BI        = vAC+1         # B Input Register (used by SBC)
                                          514   v6502_ADL       = sysArgs+0     # Low Address Register
                                          515   v6502_ADH       = sysArgs+1     # High Address Register
                                          516   v6502_IR        = sysArgs+2     # Instruction Register
                                          517   v6502_P         = sysArgs+3     # Processor Status Register (V flag in bit 7)
                                          518   v6502_Qz        = sysArgs+4     # Quick Status Register for Z flag
                                          519   v6502_Qn        = sysArgs+5     # Quick Status Register for N flag
                                          520   v6502_X         = sysArgs+6     # Index Register X
                                          521   v6502_Y         = sysArgs+7     # Index Register Y
                                          522   v6502_Tmp       = vTmp          # Scratch (may be clobbered outside v6502)
                                          523
                                          524   # MOS 6502 definitions for P register
                                          525   v6502_Cflag = 1                 # Carry Flag (unsigned overflow)
                                          526   v6502_Zflag = 2                 # Zero Flag (all bits zero)
                                          527   v6502_Iflag = 4                 # Interrupt Enable Flag (1=Disable)
                                          528   v6502_Dflag = 8                 # Decimal Enable Flag (aka BCD mode, 1=Enable)
                                          529   v6502_Bflag = 16                # Break (or PHP) Instruction Flag
                                          530   v6502_Uflag = 32                # Unused (always 1)
                                          531   v6502_Vflag = 64                # Overflow Flag (signed overflow)
                                          532   v6502_Nflag = 128               # Negative Flag (bit 7 of result)
                                          533
                                          534   # In emulation it is much faster to keep the V flag in bit 7
                                          535   # This can be corrected when importing/exporting with PHP, PLP, etc
                                          536   v6502_Vemu = 128
                                          537
                                          538   # On overflow:
                                          539   #       """Overflow is set if two inputs with the same sign produce
                                          540   #          a result with a different sign. Otherwise it is clear."""
                                          541   # Formula (without carry/borrow in!):
                                          542   #       (A ^ (A+B)) & (B ^ (A+B)) & 0x80
                                          543   # References:
                                          544   #       http://www.righto.com/2012/12/the-6502-overflow-flag-explained.html
                                          545   #       http://6502.org/tutorials/vflag.html
                                          546
                                          547   # Memory layout
                                          548   v6502_Stack     = 0x0000        # 0x0100 is already used in the Gigatron
                                          549   #v6502_NMI      = 0xfffa
                                          550   #v6502_RESET    = 0xfffc
                                          551   #v6502_IRQ      = 0xfffe
                                          552
                                          553
                                          554   #-----------------------------------------------------------------------
                                          555   #
                                          556   #  $0000 ROM page 0: Boot
                                          557   #
                                          558   #-----------------------------------------------------------------------
                                          559
                                          560   align(0x100, size=0x80)
                                          561
                                          562   # ROM type (see also Docs/GT1-files.txt)
                                          563   romTypeValue = symbol('romTypeValue_ROMvX0')
                                          564
                                          565   #ROM's from ROMvX0 onwards will always have the romType at a fixed and known location
              address
              |    encoding
              |    |     instruction
              |    |     |    operands
              |    |     |    |
              V    V     V    V
              0000 0080  ld   $80         566   ld(romTypeValue)
              0001 c221  st   [$21]       567   st([romType])
                                          568
                                          569   # Give a first sign of life that can be checked with a voltmeter
              0002 000f  ld   $0f         570   ld(0b1111)                      # LED's
              0003 1880  ld   $80,out     571   ld(syncBits^hSync,OUT)          # Prepare XOUT update, hSync goes down, RGB to black
              0004 18c0  ld   $c0,out     572   ld(syncBits,OUT)                # hSync goes up, updating XOUT, (turn on real LED's)
                                          573
                                          574   # Setup I/O and RAM expander
              0005 c17f  ctrl $7f         575   ctrl(0b01111111)                # Expansion board: (1) reset signal.
              0006 c17c  ctrl $7c         576   ctrl(0b01111100)                # (2) disable SPI slaves, enable RAM bank 1
                                          577   #      ^^^^^^^^
                                          578   #      |||||||`-- SCLK
                                          579   #      ||||||`--- Not connected
                                          580   #      |||||`---- /SS0
                                          581   #      ||||`----- /SS1
                                          582   #      |||`------ /SS2
                                          583   #      ||`------- /SS3
                                          584   #      |`-------- B0
                                          585   #      `--------- B1
                                          586   # bit15 --------- MOSI = 0
                                          587
                                          588   # Simple RAM test and size check by writing to [1<<n] and see if [0] changes or not.
              0007 0001  ld   $01         589   ld(1)                           # Quick RAM test and count
                                          590   label('.countMem0')
.countMem0:   0008 d601  st   [$01],y     591   st([memSize],Y)                 # Store in RAM and load AC in Y
              0009 00ff  ld   $ff         592   ld(255)
              000a 6900  xora [y,$00]     593   xora([Y,0])                     # Invert value from memory
              000b ca00  st   [y,$00]     594   st([Y,0])                       # Test RAM by writing the new value
              000c c200  st   [$00]       595   st([0])                         # Copy result in [0]
              000d 6900  xora [y,$00]     596   xora([Y,0])                     # Read back and compare if written ok
              000e ec0e  bne  $000e       597   bne(pc())                       # Loop forever on RAM failure here
              000f 00ff  ld   $ff         598   ld(255)
              0010 6900  xora [y,$00]     599   xora([Y,0])                     # Invert memory value again
              0011 ca00  st   [y,$00]     600   st([Y,0])                       # To restore original value
              0012 6100  xora [$00]       601   xora([0])                       # Compare with inverted copy
              0013 f017  beq  .countMem1  602   beq('.countMem1')               # If equal, we wrapped around
              0014 0101  ld   [$01]       603   ld([memSize])
              0015 fc08  bra  .countMem0  604   bra('.countMem0')               # Loop to test next address line
              0016 8200  adda ac          605   adda(AC)                        # Executes in the branch delay slot!
                                          606   label('.countMem1')
                                          607
                                          608   #ld(syncBits^hSync,OUT)
                                          609   #ld(syncBits,OUT)
                                          610
                                          611   # Scan the entire RAM space to collect entropy for a random number generator.
                                          612   # The 16-bit address space is scanned, even if less RAM was detected.
.countMem1:   0017 0000  ld   $00         613   ld(0)                           # Collect entropy from RAM
              0018 d218  st   [$18],x     614   st([vAC+0],X)
              0019 d619  st   [$19],y     615   st([vAC+1],Y)
                                          616   label('.initEnt0')
.initEnt0:    001a 0106  ld   [$06]       617   ld([entropy+0])
              001b f41e  bge  .initEnt1   618   bpl('.initEnt1')
              001c 8d00  adda [y,x]       619   adda([Y,X])
              001d 60bf  xora $bf         620   xora(191)
                                          621   label('.initEnt1')
.initEnt1:    001e c206  st   [$06]       622   st([entropy+0])
              001f 0107  ld   [$07]       623   ld([entropy+1])
              0020 f423  bge  .initEnt2   624   bpl('.initEnt2')
              0021 8106  adda [$06]       625   adda([entropy+0])
              0022 60c1  xora $c1         626   xora(193)
                                          627   label('.initEnt2')
.initEnt2:    0023 c207  st   [$07]       628   st([entropy+1])
              0024 0118  ld   [$18]       629   ld([vAC+0])
              0025 8001  adda $01         630   adda(1)
              0026 ec1a  bne  .initEnt0   631   bne('.initEnt0')
              0027 d218  st   [$18],x     632   st([vAC+0],X)
              0028 0119  ld   [$19]       633   ld([vAC+1])
              0029 8001  adda $01         634   adda(1)
              002a ec1a  bne  .initEnt0   635   bne('.initEnt0')
              002b d619  st   [$19],y     636   st([vAC+1],Y)
                                          637
                                          638   #ld(syncBits^hSync,OUT)
                                          639   #ld(syncBits,OUT)
                                          640
                                          641   # vCPU reset handler
              002c 00ee  ld   $ee         642   ld((vReset&255)-2)              # Setup vCPU reset handler
              002d c216  st   [$16]       643   st([vPC])
              002e 9002  adda $02,x       644   adda(2,X)
              002f 0001  ld   $01         645   ld(vReset>>8)
              0030 d617  st   [$17],y     646   st([vPC+1],Y)
              0031 dc59  st   $59,[y,x++] 647   st('LDI',             [Y,Xpp])
              0032 dc52  st   $52,[y,x++] 648   st('SYS_Reset_88',    [Y,Xpp])
              0033 dc2b  st   $2b,[y,x++] 649   st('STW',             [Y,Xpp])
              0034 dc22  st   $22,[y,x++] 650   st(sysFn,             [Y,Xpp])
              0035 dcb4  st   $b4,[y,x++] 651   st('SYS',             [Y,Xpp])  # SYS -> SYS_Reset_88 -> SYS_Exec_88
              0036 dce3  st   $e3,[y,x++] 652   st(256-88//2+maxTicks,[Y,Xpp])
              0037 dc00  st   $00,[y,x++] 653   st(0,                 [Y,Xpp])  # vIRQ_v5: Disable interrupts
              0038 dc00  st   $00,[y,x++] 654   st(0,                 [Y,Xpp])  # vIRQ_v5
              0039 dcfc  st   $fc,[y,x++] 655   st(0b11111100,        [Y,Xpp])  # Control register
              003a dc00  st   $00,[y,x++] 656   st(0,                 [Y,Xpp])  # videoTop
                                          657
              003b 0002  ld   $02         658   ld(hi('ENTER'))                 # Active interpreter (vCPU,v6502) = vCPU
              003c c202  st   [$02]       659   st([vCpuSelect])
                                          660
              003d 00ff  ld   $ff         661   ld(255)                         # Setup serial input
              003e c20e  st   [$0e]       662   st([frameCount])
              003f c20f  st   [$0f]       663   st([serialRaw])
              0040 c210  st   [$10]       664   st([serialLast])
              0041 c211  st   [$11]       665   st([buttonState])
              0042 c212  st   [$12]       666   st([resetTimer])                # resetTimer<0 when entering Main.gcl
                                          667
              0043 0000  ld   $00         668   ld(0)
              0044 c200  st   [$00]       669   st([0])                         # Carry lookup ([0x80] in 1st line of vBlank)
              0045 c205  st   [$05]       670   st([channel])
              0046 c22c  st   [$2c]       671   st([soundTimer])
              0047 c22d  st   [$2d]       672   st([jiffiesTick])
              0048 c22e  st   [$2e]       673   st([secondsTickLo])
              0049 c22f  st   [$2f]       674   st([secondsTickHi])
              004a 1880  ld   $80,out     675   ld(syncBits^hSync,OUT)
              004b 18c0  ld   $c0,out     676   ld(syncBits,OUT)                # turn off real LED's
              004c c213  st   [$13]       677   st([xout])                      # Setup for control by video loop
              004d c214  st   [$14]       678   st([xoutMask])                  # audio = 0, SW LED's = 0
                                          679
              004e 000f  ld   $0f         680   ld(0x0f)                        # default 4bit sound
              004f c208  st   [$08]       681   st([audioBitMask])
                                          682
              0050 1401  ld   $01,y       683   ld(hi('startVideo'),Y)          # Enter video loop at vertical blank
              0051 e003  jmp  y,$03       684   jmp(Y,'startVideo')
                                          685
                                          686   #-----------------------------------------------------------------------
                                          687   # Extension SYS_Reset_88: Soft reset
                                          688   #-----------------------------------------------------------------------
                                          689   #
                                          690   # SYS_Reset_88 initiates an immediate Gigatron reset from within the vCPU.
                                          691   # The reset sequence itself is mostly implemented in GCL by Reset.gcl,
                                          692   # which must first be loaded into RAM. But as that takes more than 1 scanline,
                                          693   # some vCPU bootstrapping code gets loaded with SYS_Exec_88.
                                          694   # !!! This function was REMOVED from interface.json
                                          695   # !!! Better use vReset as generic entry point for soft reset
                                          696
                                          697   label('SYS_Reset_88')
                                          698   assert pc()>>8 == 0
                                          699   assert (romTypeValue & 7) == 0
SYS_Reset_88: 0052 141f  ld   $1f,y       700   ld(hi('sys_Reset_88'),Y)        #15
              0053 e041  jmp  y,$41       701   jmp(Y,'sys_Reset_88')           #16
              0054 0080  ld   $80         702   ld(romTypeValue)                #17 Set ROM type/version and clear channel mask
                                          703
                                          704
              0055 0200  nop              705   align(0x80, size=0x80)
              0056 0200  nop
              0057 0200  nop
              * 43 times
                                          706   assert pc() == 0x80
                                          707
                                          708
                                          709   # ADDW moved to page0 to free up room for more instruction slots in page3
                                          710   # This implemetation of ADDW relies on Y=0 and hence cannot be dispatched from any other page
                                          711   label('addw#13')
addw#13:      0080 0118  ld   [$18]       712   ld([vAC])                       #13 Low byte
              0081 c21d  st   [$1d]       713   st([vTmp])                      #14 Store low result
              0082 8500  adda [x]         714   adda([X])                       #15
              0083 c218  st   [$18]       715   st([vAC])                       #16
              0084 e88f  blt  .addw#19    716   bmi('.addw#19')                 #17 Now figure out if there was a carry
              0085 0500  ld   [x]         717   ld([X])                         #18
              0086 de00  st   [y,x++]     718   st([Y,Xpp])                     #29
              0087 411d  ora  [$1d]       719   ora([vTmp])                     #20
              0088 e898  blt  .addw#23    720   bmi('.addw#23')                 #21 If Carry == 1
              0089 0500  ld   [x]         721   ld([X])                         #22
              008a 8119  adda [$19]       722   adda([vAC+1])                   #23
              008b c219  st   [$19]       723   st([vAC+1])                     #24 Store high result
              008c 1403  ld   $03,y       724   ld(hi('REENTER'),Y)             #25
              008d e0cb  jmp  y,$cb       725   jmp(Y,'REENTER')                #26
              008e 00f1  ld   $f1         726   ld(-30/2)                       #27
                                          727   label('.addw#19')
.addw#19:     008f de00  st   [y,x++]     728   st([Y,Xpp])                     #19
              0090 211d  anda [$1d]       729   anda([vTmp])                    #20
              0091 e898  blt  .addw#23    730   bmi('.addw#23')                 #21 If Carry == 1
              0092 0500  ld   [x]         731   ld([X])                         #22
              0093 8119  adda [$19]       732   adda([vAC+1])                   #23
              0094 c219  st   [$19]       733   st([vAC+1])                     #24 Store high result
              0095 1403  ld   $03,y       734   ld(hi('REENTER'),Y)             #25
              0096 e0cb  jmp  y,$cb       735   jmp(Y,'REENTER')                #26
              0097 00f1  ld   $f1         736   ld(-30/2)                       #27
                                          737   label('.addw#23')
.addw#23:     0098 8001  adda $01         738   adda(1)                         #23
              0099 8119  adda [$19]       739   adda([vAC+1])                   #24
              009a c219  st   [$19]       740   st([vAC+1])                     #25 Store high result
              009b 1403  ld   $03,y       741   ld(hi('NEXTY'),Y)               #26
              009c e000  jmp  y,$00       742   jmp(Y,'NEXTY')                  #27
              009d 00f1  ld   $f1         743   ld(-30/2)                       #28
                                          744
                                          745
                                          746   #-----------------------------------------------------------------------
                                          747   # Placeholders for future SYS functions. This works as a kind of jump
                                          748   # table. The indirection allows SYS implementations to be moved around
                                          749   # between ROM versions, at the expense of 2 clock cycles (or 1). When
                                          750   # the function is not present it just acts as a NOP. Of course, when a
                                          751   # SYS function must be patched or extended it needs to have budget for
                                          752   # that in its declared maximum cycle count.
                                          753   #
                                          754   # Technically the same goal can be achieved by starting each function
                                          755   # with 2 nop's, or by overdeclaring their duration in the first place
                                          756   # (a bit is still wise to do). But this can result in fragmentation
                                          757   # of future ROM images. The indirection avoids that.
                                          758   #
                                          759   # An added advantage of having these in ROM page 0 is that it saves one
                                          760   # byte when setting sysFn: LDI+STW (4 bytes) instead of LDWI+STW (5 bytes)
                                          761   #-----------------------------------------------------------------------
                                          762
                                          763   label('SYS_Multiply_s16_vX_66')
SYS_Multiply_s16_vX_66:
              009e 1419  ld   $19,y       764   ld(hi('sys_Multiply_s16'),Y)    #15 slot 0x9e
              009f e000  jmp  y,$00       765   jmp(Y,'sys_Multiply_s16')       #16
              00a0 012a  ld   [$2a]       766   ld([sysArgs+6])                 #17 load mask.lo
                                          767
                                          768   label('SYS_Divide_s16_vX_80')
SYS_Divide_s16_vX_80:
              00a1 1419  ld   $19,y       769   ld(hi('sys_Divide_s16'),Y)      #15 slot 0xa1
              00a2 e038  jmp  y,$38       770   jmp(Y,'sys_Divide_s16')         #16
              00a3 0128  ld   [$28]       771   ld([sysArgs+4])                 #17
                                          772
                                          773   label('SYS_DrawLine_vX_86')
SYS_DrawLine_vX_86:
              00a4 1419  ld   $19,y       774   ld(hi('sys_DrawLine'),Y)        #15 slot 0xa4
              00a5 e07f  jmp  y,$7f       775   jmp(Y,'sys_DrawLine')           #16
              00a6 01a3  ld   [$a3]       776   ld([0xA3])                      #17 fgcolour
                                          777
              00a7 1403  ld   $03,y       778   ld(hi('REENTER'),Y)             #15 slot 0xa7
              00a8 e0cb  jmp  y,$cb       779   jmp(Y,'REENTER')                #16
              00a9 00f6  ld   $f6         780   ld(-20/2)                       #17
                                          781
              00aa 1403  ld   $03,y       782   ld(hi('REENTER'),Y)             #15 slot 0xaa
              00ab e0cb  jmp  y,$cb       783   jmp(Y,'REENTER')                #16
              00ac 00f6  ld   $f6         784   ld(-20/2)                       #17
                                          785
                                          786
                                          787   #-----------------------------------------------------------------------
                                          788   # Extension SYS_Exec_88: Load code from ROM into memory and execute it
                                          789   #-----------------------------------------------------------------------
                                          790   #
                                          791   # This loads the vCPU code with consideration of the current vSP
                                          792   # Used during reset, but also for switching between applications or for
                                          793   # loading data from ROM from within an application (overlays).
                                          794   #
                                          795   # ROM stream format is [<addrH> <addrL> <n&255> n*<byte>]* 0
                                          796   # on top of lookup tables.
                                          797   #
                                          798   # Variables:
                                          799   #       sysArgs[0:1]    ROM pointer (in)
                                          800   #       sysArgs[2:3]    RAM pointer (changed)
                                          801   #       sysArgs[4]      State counter (changed)
                                          802   #       vLR             vCPU continues here (in)
                                          803
                                          804   label('SYS_Exec_88')
SYS_Exec_88:  00ad 1412  ld   $12,y       805   ld(hi('sys_Exec'),Y)            #15 slot 0xad
              00ae e055  jmp  y,$55       806   jmp(Y,'sys_Exec')               #16
              00af 0000  ld   $00         807   ld(0)                           #17 Address of loader on zero page
                                          808
              00b0 1403  ld   $03,y       809   ld(hi('REENTER'),Y)             #15 slot 0xb0
              00b1 e0cb  jmp  y,$cb       810   jmp(Y,'REENTER')                #16
              00b2 00f6  ld   $f6         811   ld(-20/2)                       #17
                                          812
              00b3 1403  ld   $03,y       813   ld(hi('REENTER'),Y)             #15 slot 0xb3
              00b4 e0cb  jmp  y,$cb       814   jmp(Y,'REENTER')                #16
              00b5 00f6  ld   $f6         815   ld(-20/2)                       #17
                                          816
                                          817   label('SYS_SpritePattern_vX_134')
SYS_SpritePattern_vX_134:
              00b6 141e  ld   $1e,y       818   ld(hi('sys_SpritePattern'),Y)   #15 slot 0xb6
              00b7 e000  jmp  y,$00       819   jmp(Y,'sys_SpritePattern')      #16
              00b8 1124  ld   [$24],x     820   ld([sysArgs+0],X)               #17 src.lo
                                          821
                                          822   label('SYS_SortUint8Array_vX_52')
SYS_SortUint8Array_vX_52:
              00b9 141a  ld   $1a,y       823   ld(hi('sys_SortUint8Array'),Y)  #15 slot 0xb9
              00ba e08f  jmp  y,$8f       824   jmp(Y,'sys_SortUint8Array')     #16
              00bb 1525  ld   [$25],y     825   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          826
                                          827   label('SYS_SortSprites_vX_62')
SYS_SortSprites_vX_62:
              00bc 141c  ld   $1c,y       828   ld(hi('sys_SortSprites'),Y)     #15 slot 0xbc
              00bd e000  jmp  y,$00       829   jmp(Y,'sys_SortSprites')        #16
              00be 1525  ld   [$25],y     830   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          831
                                          832   label('SYS_SortViaIndices_vX_44')
SYS_SortViaIndices_vX_44:
              00bf 141a  ld   $1a,y       833   ld(hi('sys_SortViaIndices'),Y)  #15 slot 0xbf
              00c0 e0d6  jmp  y,$d6       834   jmp(Y,'sys_SortViaIndices')     #16
              00c1 1525  ld   [$25],y     835   ld([sysArgs+1],Y)               #17 src pointer
                                          836
                                          837   label('SYS_MemCopyByte_vX_40')
SYS_MemCopyByte_vX_40:
              00c2 141b  ld   $1b,y       838   ld(hi('sys_MemCopyByte'),Y)     #15 slot 0xc2
              00c3 e000  jmp  y,$00       839   jmp(Y,'sys_MemCopyByte')        #16
              00c4 1525  ld   [$25],y     840   ld([sysArgs+1],Y)               #17 src pointer
                                          841
                                          842   label('SYS_MemCopyWord_vX_48')
SYS_MemCopyWord_vX_48:
              00c5 141b  ld   $1b,y       843   ld(hi('sys_MemCopyWord'),Y)     #15 slot 0xc5
              00c6 e018  jmp  y,$18       844   jmp(Y,'sys_MemCopyWord')        #16
              00c7 1525  ld   [$25],y     845   ld([sysArgs+1],Y)               #17 src pointer
                                          846
                                          847   label('SYS_MemCopyDWord_vX_58')
SYS_MemCopyDWord_vX_58:
              00c8 141b  ld   $1b,y       848   ld(hi('sys_MemCopyDWord'),Y)    #15 slot 0xc8
              00c9 e037  jmp  y,$37       849   jmp(Y,'sys_MemCopyDWord')       #16
              00ca 1525  ld   [$25],y     850   ld([sysArgs+1],Y)               #17 src pointer
                                          851
                                          852   label('SYS_DrawVLine_vX_66')
SYS_DrawVLine_vX_66:
              00cb 141d  ld   $1d,y       853   ld(hi('sys_DrawVLine'),Y)       #15 slot 0xcb
              00cc e000  jmp  y,$00       854   jmp(Y,'sys_DrawVLine')          #16
              00cd 1527  ld   [$27],y     855   ld([sysArgs+3],Y)               #17
                                          856
              00ce 1403  ld   $03,y       857   ld(hi('REENTER'),Y)             #15 slot 0xce
              00cf e0cb  jmp  y,$cb       858   jmp(Y,'REENTER')                #16
              00d0 00f6  ld   $f6         859   ld(-20/2)                       #17
                                          860
                                          861   label('SYS_DrawBullet_vX_140')
SYS_DrawBullet_vX_140:
              00d1 141e  ld   $1e,y       862   ld(hi('sys_DrawBullet'),Y)      #15 slot 0xd1
              00d2 e076  jmp  y,$76       863   jmp(Y,'sys_DrawBullet')         #16
              00d3 1182  ld   [$82],x     864   ld([0x82],X)                    #17, bulletX
                                          865
                                          866   label('SYS_CmpByteBounds_vX_54')
SYS_CmpByteBounds_vX_54:
              00d4 141f  ld   $1f,y       867   ld(hi('sys_CmpByteBounds'),Y)   #15 slot 0xd4
              00d5 e000  jmp  y,$00       868   jmp(Y,'sys_CmpByteBounds')      #16
              00d6 01bf  ld   [$bf]       869   ld([0xBF])                      #17 count
                                          870
                                          871   label('SYS_Divide_u168_vX_56')
SYS_Divide_u168_vX_56:
              00d7 141f  ld   $1f,y       872   ld(hi('sys_Divide_u168'),Y)     #15 slot 0xd7
              00d8 e061  jmp  y,$61       873   jmp(Y,'sys_Divide_u168')        #16
              00d9 0125  ld   [$25]       874   ld([sysArgs+1])                 #17
                                          875
              00da 1403  ld   $03,y       876   ld(hi('REENTER'),Y)             #15 slot 0xda
              00db e0cb  jmp  y,$cb       877   jmp(Y,'REENTER')                #16
              00dc 00f6  ld   $f6         878   ld(-20/2)                       #17
                                          879
              00dd 1403  ld   $03,y       880   ld(hi('REENTER'),Y)             #15 slot 0xdd
              00de e0cb  jmp  y,$cb       881   jmp(Y,'REENTER')                #16
              00df 00f6  ld   $f6         882   ld(-20/2)                       #17
                                          883
              00e0 1403  ld   $03,y       884   ld(hi('REENTER'),Y)             #15 slot 0xe0
              00e1 e0cb  jmp  y,$cb       885   jmp(Y,'REENTER')                #16
              00e2 00f6  ld   $f6         886   ld(-20/2)                       #17
                                          887
                                          888   #-----------------------------------------------------------------------
                                          889   # Extension SYS_ScanMemoryExt_vX_50
                                          890   #-----------------------------------------------------------------------
                                          891   #
                                          892   # SYS function for searching a byte in a 0 to 256 bytes string located
                                          893   # in a different bank. Doesn't cross page boundaries. Returns a
                                          894   # pointer to the target if found or zero. Temporarily deselects SPI
                                          895   # devices.
                                          896   #
                                          897   # sysArgs[0:1]            Start address
                                          898   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          899   # vACL                    Length of the string (0 means 256)
                                          900   # vACH                    Bit 6 and 7 contain the bank number
                                          901
                                          902   label('SYS_ScanMemoryExt_vX_50')
SYS_ScanMemoryExt_vX_50:
              00e3 1430  ld   $30,y       903   ld(hi('sys_ScanMemoryExt'),Y)   #15 slot 0xe3
              00e4 e027  jmp  y,$27       904   jmp(Y,'sys_ScanMemoryExt')      #16
              00e5 0119  ld   [$19]       905   ld([vAC+1])                     #17
                                          906
                                          907
                                          908   #-----------------------------------------------------------------------
                                          909   # Extension SYS_ScanMemory_vX_50
                                          910   #-----------------------------------------------------------------------
                                          911   #
                                          912   # SYS function for searching a byte in a 0 to 256 bytes string.
                                          913   # Returns a pointer to the target if found or zero.  Doesn't cross
                                          914   # page boundaries.
                                          915
                                          916   #
                                          917   # sysArgs[0:1]            Start address
                                          918   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          919   # vACL                    Length of the string (0 means 256)
                                          920
                                          921   label('SYS_ScanMemory_vX_50')
SYS_ScanMemory_vX_50:
              00e6 1430  ld   $30,y       922   ld(hi('sys_ScanMemory'),Y)      #15 slot 0xe6
              00e7 e000  jmp  y,$00       923   jmp(Y,'sys_ScanMemory')         #16
              00e8 1525  ld   [$25],y     924   ld([sysArgs+1],Y)               #17
                                          925
                                          926   #-----------------------------------------------------------------------
                                          927   # Extension SYS_CopyMemory_vX_80
                                          928   #-----------------------------------------------------------------------
                                          929   #
                                          930   # SYS function for copying 1..256 bytes
                                          931   #
                                          932   # sysArgs[0:1]    Destination address
                                          933   # sysArgs[2:3]    Source address
                                          934   # vAC[0]          Count (0 means 256)
                                          935   #
                                          936   # Doesn't cross page boundaries.
                                          937   # Overwrites sysArgs[4:7] and vLR.
                                          938
                                          939   label('SYS_CopyMemory_vX_80')
SYS_CopyMemory_vX_80:
              00e9 142f  ld   $2f,y       940   ld(hi('sys_CopyMemory'),Y)       # 15 slot 0xe9
              00ea e000  jmp  y,$00       941   jmp(Y, 'sys_CopyMemory')         # 16
              00eb 0118  ld   [$18]       942   ld([vAC])                        # 17
                                          943
                                          944   #-----------------------------------------------------------------------
                                          945   # Extension SYS_CopyMemoryExt_vX_100
                                          946   #-----------------------------------------------------------------------
                                          947   #
                                          948   # SYS function for copying 1..256 bytes across banks
                                          949   #
                                          950   # sysArgs[0:1]  Destination address
                                          951   # sysArgs[2:3]  Source address
                                          952   # vAC[0]        Count (0 means 256)
                                          953   # vAC[1]        Bits 7 and 6 contain the destination bank number,
                                          954   #               and bits 5 and 4 the source bank number.
                                          955   #
                                          956   # Doesn't cross page boundaries.
                                          957   # Overwrites sysArgs[4:7], vLR, and vTmp.
                                          958   # Temporarily deselect all SPI devices.
                                          959   # Should not call without expansion board
                                          960
                                          961   label('SYS_CopyMemoryExt_vX_100')
SYS_CopyMemoryExt_vX_100:
              00ec 142f  ld   $2f,y       962   ld(hi('sys_CopyMemoryExt'),Y)    # 15 slot 0xec
              00ed e078  jmp  y,$78       963   jmp(Y, 'sys_CopyMemoryExt')      # 16
              00ee 0119  ld   [$19]       964   ld([vAC+1])                      # 17
                                          965
                                          966   #-----------------------------------------------------------------------
                                          967   # Extension SYS_ReadRomDir_v5_80
                                          968   #-----------------------------------------------------------------------
                                          969   #
                                          970   # Get next entry from ROM file system. Use vAC=0 to get the first entry.
                                          971
                                          972   # Variables:
                                          973   #       vAC             Start address of current entry (inout)
                                          974   #       sysArgs[0:7]    File name, padded with zeroes (out)
                                          975
                                          976   label('SYS_ReadRomDir_v5_80')
SYS_ReadRomDir_v5_80:
              00ef 14fa  ld   $fa,y       977   ld(hi('sys_ReadRomDir'),Y)      #15
              00f0 e007  jmp  y,$07       978   jmp(Y,'sys_ReadRomDir')         #16
              00f1 0119  ld   [$19]       979   ld([vAC+1])                     #17
                                          980
              00f2 0200  nop              981   fillers(until=symbol('SYS_Out_22') & 255)
              00f3 0200  nop
                                          982
                                          983   #-----------------------------------------------------------------------
                                          984   # Extension SYS_Out_22
                                          985   #-----------------------------------------------------------------------
                                          986   #
                                          987   # Send byte to output port
                                          988   #
                                          989   # Variables:
                                          990   #       vAC
                                          991
                                          992   label('SYS_Out_22')
SYS_Out_22:   00f4 1924  ld   [$24],out   993   ld([sysArgs+0],OUT)             #15
              00f5 0200  nop              994   nop()                           #16
              00f6 1403  ld   $03,y       995   ld(hi('REENTER'),Y)             #17
              00f7 e0cb  jmp  y,$cb       996   jmp(Y,'REENTER')                #18
              00f8 00f5  ld   $f5         997   ld(-22/2)                       #19
                                          998
                                          999   #-----------------------------------------------------------------------
                                          1000  # Extension SYS_In_24
                                          1001  #-----------------------------------------------------------------------
                                          1002  #
                                          1003  # Read a byte from the input port
                                          1004  #
                                          1005  # Variables:
                                          1006  #       vAC
                                          1007
                                          1008  label('SYS_In_24')
SYS_In_24:    00f9 c318  st   in,[$18]    1009  st(IN, [vAC])                   #15
              00fa 0000  ld   $00         1010  ld(0)                           #16
              00fb c219  st   [$19]       1011  st([vAC+1])                     #17
              00fc 0200  nop              1012  nop()                           #18
              00fd 1403  ld   $03,y       1013  ld(hi('REENTER'),Y)             #19
              00fe e0cb  jmp  y,$cb       1014  jmp(Y,'REENTER')                #20
              00ff 00f4  ld   $f4         1015  ld(-24/2)                       #21
                                          1016
                                          1017  assert pc()&255 == 0
                                          1018
                                          1019  #-----------------------------------------------------------------------
                                          1020  #
                                          1021  #  $0100 ROM page 1: Video loop vertical blank
                                          1022  #
                                          1023  #-----------------------------------------------------------------------
                                          1024  align(0x100, size=0x100)
                                          1025
                                          1026  # Video off mode (also no sound, serial, timer, blinkenlights, ...).
                                          1027  # For benchmarking purposes. This still has the overhead for the vTicks
                                          1028  # administration, time slice granularity etc.
                                          1029  label('videoZ')
                                          1030  videoZ = pc()
videoZ:       0100 1502  ld   [$02],y     1031  runVcpu(None, '---- novideo', returnTo=videoZ)
              0101 e0ff  jmp  y,$ff
              0102 007f  ld   $7f
                                          1032
                                          1033  label('startVideo')             # (Re)start of video signal from idle state
startVideo:   0103 00c0  ld   $c0         1034  ld(syncBits)
                                          1035
                                          1036  # Start of vertical blank interval
                                          1037  label('vBlankStart')
vBlankStart:  0104 c21f  st   [$1f]       1038  st([videoSync0])                #32 Start of vertical blank interval
              0105 0080  ld   $80         1039  ld(syncBits^hSync)              #33
              0106 c220  st   [$20]       1040  st([videoSync1])                #34
                                          1041
                                          1042  # Reset line counter before vCPU can see it
              0107 00b3  ld   $b3         1043  ld(videoYline0)                 #35
              0108 c209  st   [$09]       1044  st([videoY])                    #36
                                          1045
                                          1046  # Update frame count and [0x80] (4 cycles)
              0109 0001  ld   $01         1047  ld(1)                           #37 Reinitialize carry lookup, for robustness
              010a c280  st   [$80]       1048  st([0x80])                      #38
              010b 810e  adda [$0e]       1049  adda([frameCount])              #39 Frame counter
              010c c20e  st   [$0e]       1050  st([frameCount])                #40
                                          1051
                                          1052  # Mix entropy (11 cycles)
              010d 6107  xora [$07]       1053  xora([entropy+1])               #41 Mix entropy
              010e 610f  xora [$0f]       1054  xora([serialRaw])               #42 Mix in serial input
              010f 8106  adda [$06]       1055  adda([entropy+0])               #43
              0110 c206  st   [$06]       1056  st([entropy+0])                 #44
              0111 8116  adda [$16]       1057  adda([vPC])                     #45 Some hidden state
              0112 e815  blt  $0115       1058  bmi(pc()+3)                     #46
              0113 fc16  bra  $0116       1059  bra(pc()+3)                     #47
              0114 6053  xora $53         1060  xora(64+16+2+1)                 #48
              0115 606c  xora $6c         1061  xora(64+32+8+4)                 #48(!)
              0116 8107  adda [$07]       1062  adda([entropy+1])               #49
              0117 c207  st   [$07]       1063  st([entropy+1])                 #50
                                          1064
                                          1065
                                          1066  # Timer
              0118 012d  ld   [$2d]       1067  ld([jiffiesTick])               #51
              0119 8001  adda $01         1068  adda(1)                         #52
              011a c22d  st   [$2d]       1069  st([jiffiesTick])               #53
              011b 603c  xora $3c         1070  xora(60)                        #54
              011c f01f  beq  $011f       1071  beq(pc()+3)                     #55
              011d fc20  bra  $0120       1072  bra(pc()+3)                     #56
              011e 0200  nop              1073  nop()                           #57
              011f c22d  st   [$2d]       1074  st([jiffiesTick])               #57(!)
              0120 f023  beq  $0123       1075  beq(pc()+3)                     #58
              0121 fc24  bra  $0124       1076  bra(pc()+3)                     #59
              0122 0000  ld   $00         1077  ld(0)                           #60
              0123 0001  ld   $01         1078  ld(1)                           #60(!)
                                          1079  beq('vblankExpansion')          #61
              0124 f02e  beq  vblankExpansion
              0125 812e  adda [$2e]       1080  adda([secondsTickLo])           #62
              0126 c22e  st   [$2e]       1081  st([secondsTickLo])             #63
              0127 f02a  beq  $012a       1082  beq(pc()+3)                     #64
              0128 fc2b  bra  $012b       1083  bra(pc()+3)                     #65
              0129 0000  ld   $00         1084  ld(0)                           #66
              012a 0001  ld   $01         1085  ld(1)                           #66(!)
              012b 812f  adda [$2f]       1086  adda([secondsTickHi])           #67
              012c fc35  bra  vPulseInit  1087  bra('vPulseInit')               #68
              012d c22f  st   [$2f]       1088  st([secondsTickHi])             #69
                                          1089
                                          1090  # VBlank expansion area, LED flasher, etc
                                          1091  label('vblankExpansion')
vblankExpansion:
              012e 0200  nop              1092  nop()                           #63
              012f 0200  nop              1093  nop()                           #64
              0130 0200  nop              1094  nop()                           #65
              0131 0200  nop              1095  nop()                           #66
              0132 0200  nop              1096  nop()                           #67
              0133 0200  nop              1097  nop()                           #68
              0134 0200  nop              1098  nop()                           #69
                                          1099
                                          1100  label('vPulseInit')
vPulseInit:   0135 0114  ld   [$14]       1101  ld([xoutMask])                  #70 mask LED's
              0136 2108  anda [$08]       1102  anda([audioBitMask])            #71 configure 4/6/8bit audio
              0137 c214  st   [$14]       1103  st([xoutMask])                  #72 Sound bits will be re-enabled below
              0138 0010  ld   $10         1104  ld(vPulse*2)                    #73 vPulse default length when not modulated
              0139 c20d  st   [$0d]       1105  st([videoPulse])                #74
                                          1106
                                          1107  # When the total number of scan lines per frame is not an exact multiple of the
                                          1108  # (4) channels, there will be an audible discontinuity if no measure is taken.
                                          1109  # This static noise can be suppressed by swallowing the first `lines mod 4'
                                          1110  # partial samples after transitioning into vertical blank. This is easiest if
                                          1111  # the modulo is 0 (do nothing), 1 (reset sample when entering the last visible
                                          1112  # scan line), or 2 (reset sample while in the first blank scan line). For the
                                          1113  # last case there is no solution yet: give a warning.
                                          1114  extra = 0
                                          1115  if soundDiscontinuity == 2:
                                          1116    st(sample, [sample])          # Sound continuity
                                          1117    extra += 1
                                          1118  if soundDiscontinuity > 2:
                                          1119    highlight('Warning: sound discontinuity not suppressed')
                                          1120
                                          1121  # vCPU interrupt
              013a 010e  ld   [$0e]       1122  ld([frameCount])                #75
                                          1123  beq('vBlankFirst#78')           #76
              013b f041  beq  vBlankFirst#78
                                          1124
              013c 0044  ld   $44         1125  runVcpu(183-77-extra,           #77 Application cycles (scan line 0)
              013d c21e  st   [$1e]
              013e 1502  ld   [$02],y
              013f e0ff  jmp  y,$ff
              0140 001f  ld   $1f
                                          1126      '---D line 0 no timeout',
                                          1127      returnTo='vBlankFirst#183')
                                          1128
                                          1129  label('vBlankFirst#78')
vBlankFirst#78:
              0141 1412  ld   $12,y       1130  ld(hi('vBlankFirst#81'),Y)      #78
              0142 e000  jmp  y,$00       1131  jmp(Y,'vBlankFirst#81')         #79
              0143 1401  ld   $01,y       1132  ld(hi(vIRQ_v5),Y)               #80
                                          1133
                                          1134  # Mitigation for rogue channelMask (3 cycles)
                                          1135  label('vBlankFirst#183')
vBlankFirst#183:
              0144 0121  ld   [$21]       1136  ld([channelMask])               #183 Normalize channelMask, for robustness
              0145 20fb  anda $fb         1137  anda(0b11111011)                #184
              0146 c221  st   [$21]       1138  st([channelMask])               #185
                                          1139
                                          1140  # Sound on/off (6 cycles)
              0147 0108  ld   [$08]       1141  ld([audioBitMask])              #186 configure 4/6/8bit audio
              0148 60ff  xora $ff         1142  xora(255)                       #187
              0149 c21d  st   [$1d]       1143  st([vTmp])                      #188
              014a 012c  ld   [$2c]       1144  ld([soundTimer])                #189 Sound on/off
              014b ec4e  bne  $014e       1145  bne(pc()+3)                     #190
              014c fc4f  bra  $014f       1146  bra(pc()+3)                     #191
              014d 0000  ld   $00         1147  ld(0)                           #192 Keeps sound unchanged (should be off here)
              014e 011d  ld   [$1d]       1148  ld([vTmp])                      #192(!) Turns sound back on
              014f 4114  ora  [$14]       1149  ora([xoutMask])                 #193
              0150 c214  st   [$14]       1150  st([xoutMask])                  #194
                                          1151
                                          1152  # Sound timer count down (5 cycles)
              0151 012c  ld   [$2c]       1153  ld([soundTimer])                #195 Sound timer
              0152 f055  beq  $0155       1154  beq(pc()+3)                     #196
              0153 fc56  bra  $0156       1155  bra(pc()+3)                     #197
              0154 a001  suba $01         1156  suba(1)                         #198
              0155 0000  ld   $00         1157  ld(0)                           #198
              0156 c22c  st   [$2c]       1158  st([soundTimer])                #199
                                          1159
              0157 191f  ld   [$1f],out   1160  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1161  label('sound1')
sound1:       0158 0105  ld   [$05]       1162  ld([channel])                   #1 Advance to next sound channel
              0159 2121  anda [$21]       1163  anda([channelMask])             #2
              015a 8001  adda $01         1164  adda(1)                         #3
              015b 1920  ld   [$20],out   1165  ld([videoSync1],OUT)            #4 Start horizontal pulse
              015c d605  st   [$05],y     1166  st([channel],Y)                 #5
              015d 007f  ld   $7f         1167  ld(0x7f)                        #6 Update sound channel
              015e 29fe  anda [y,$fe]     1168  anda([Y,oscL])                  #7
              015f 89fc  adda [y,$fc]     1169  adda([Y,keyL])                  #8
              0160 cafe  st   [y,$fe]     1170  st([Y,oscL])                    #9
              0161 3080  anda $80,x       1171  anda(0x80,X)                    #10
              0162 0500  ld   [x]         1172  ld([X])                         #11
              0163 89ff  adda [y,$ff]     1173  adda([Y,oscH])                  #12
              0164 89fd  adda [y,$fd]     1174  adda([Y,keyH])                  #13
              0165 caff  st   [y,$ff]     1175  st([Y,oscH])                    #14
              0166 20fc  anda $fc         1176  anda(0xfc)                      #15
              0167 69fb  xora [y,$fb]     1177  xora([Y,wavX])                  #16
              0168 1200  ld   ac,x        1178  ld(AC,X)                        #17
              0169 09fa  ld   [y,$fa]     1179  ld([Y,wavA])                    #18
              016a 1407  ld   $07,y       1180  ld(soundTable>>8,Y)             #19
              016b 8d00  adda [y,x]       1181  adda([Y,X])                     #20
              016c e86f  blt  $016f       1182  bmi(pc()+3)                     #21
              016d fc70  bra  $0170       1183  bra(pc()+3)                     #22
              016e 203f  anda $3f         1184  anda(63)                        #23
              016f 003f  ld   $3f         1185  ld(63)                          #23(!)
              0170 8103  adda [$03]       1186  adda([sample])                  #24
              0171 c203  st   [$03]       1187  st([sample])                    #25
                                          1188
              0172 0113  ld   [$13]       1189  ld([xout])                      #26 Gets copied to XOUT
              0173 1412  ld   $12,y       1190  ld(hi('vBlankLast#34'),Y)       #27 Prepare jumping out of page in last line
              0174 191f  ld   [$1f],out   1191  ld([videoSync0],OUT)            #28 End horizontal pulse
                                          1192
                                          1193  # Count through the vertical blank interval until its last scan line
              0175 0109  ld   [$09]       1194  ld([videoY])                    #29
                                          1195  bpl('.vBlankLast#32')           #30
              0176 f4a3  bge  .vBlankLast#32
              0177 8002  adda $02         1196  adda(2)                         #31
              0178 c209  st   [$09]       1197  st([videoY])                    #32
                                          1198
                                          1199  # Determine if we're in the vertical sync pulse
              0179 a0bd  suba $bd         1200  suba(1-2*(vBack+vPulse-1))      #33 Prepare sync values
              017a ec7f  bne  .prepSync36 1201  bne('.prepSync36')              #34 Tests for start of vPulse
              017b a10d  suba [$0d]       1202  suba([videoPulse])              #35
              017c 0040  ld   $40         1203  ld(syncBits^vSync)              #36 Entering vertical sync pulse
              017d fc84  bra  .prepSync39 1204  bra('.prepSync39')              #37
              017e c21f  st   [$1f]       1205  st([videoSync0])                #38
                                          1206  label('.prepSync36')
.prepSync36:  017f ec83  bne  .prepSync38 1207  bne('.prepSync38')              #36 Tests for end of vPulse
              0180 00c0  ld   $c0         1208  ld(syncBits)                    #37
              0181 fc85  bra  .prepSync40 1209  bra('.prepSync40')              #38 Entering vertical back porch
              0182 c21f  st   [$1f]       1210  st([videoSync0])                #39
                                          1211  label('.prepSync38')
.prepSync38:  0183 011f  ld   [$1f]       1212  ld([videoSync0])                #38 Load current value
                                          1213  label('.prepSync39')
.prepSync39:  0184 0200  nop              1214  nop()                           #39
                                          1215  label('.prepSync40')
.prepSync40:  0185 6040  xora $40         1216  xora(hSync)                     #40 Precompute, as during the pulse there is no time
              0186 c220  st   [$20]       1217  st([videoSync1])                #41
                                          1218
                                          1219  # Capture the serial input before the '595 shifts it out
              0187 0109  ld   [$09]       1220  ld([videoY])                    #42 Capture serial input
              0188 60cf  xora $cf         1221  xora(1-2*(vBack-1-1))           #43 Exactly when the 74HC595 has captured all 8 controller bits
              0189 ec8c  bne  $018c       1222  bne(pc()+3)                     #44
              018a fc8d  bra  $018d       1223  bra(pc()+3)                     #45
              018b c30f  st   in,[$0f]    1224  st(IN, [serialRaw])             #46
              018c c000  st   $00,[$00]   1225  st(0,[0])                       #46(!) Reinitialize carry lookup, for robustness
                                          1226
                                          1227  # Update [xout] with the next sound sample every 4 scan lines.
                                          1228  # Keep doing this on 'videoC equivalent' scan lines in vertical blank.
              018d 0109  ld   [$09]       1229  ld([videoY])                    #47
              018e 2006  anda $06         1230  anda(6)                         #48
                                          1231  beq('vBlankSample')             #49
              018f f098  beq  vBlankSample
              0190 0103  ld   [$03]       1232  ld([sample])                    #50
                                          1233
                                          1234  label('vBlankNormal')
vBlankNormal: 0191 0096  ld   $96         1235  runVcpu(199-51, 'AB-D line 1-36')#51 Application cycles (vBlank scan lines without sound sample update)
              0192 c21e  st   [$1e]
              0193 1502  ld   [$02],y
              0194 e0ff  jmp  y,$ff
              0195 0034  ld   $34
              0196 fc58  bra  sound1      1236  bra('sound1')                   #199
              0197 191f  ld   [$1f],out   1237  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1238
                                          1239  label('vBlankSample')
vBlankSample: 0198 4108  ora  [$08]       1240  ora([audioBitMask])             #51 configure 4/6/8bit audio
              0199 2114  anda [$14]       1241  anda([xoutMask])                #52
              019a c213  st   [$13]       1242  st([xout])                      #53 New sound sample is ready
              019b c003  st   $03,[$03]   1243  st(sample, [sample])            #54 Reset for next sample
                                          1244
              019c 00a1  ld   $a1         1245  runVcpu(199-55, '--C- line 3-39')#55 Application cycles (vBlank scan lines with sound sample update)
              019d c21e  st   [$1e]
              019e 1502  ld   [$02],y
              019f e0ff  jmp  y,$ff
              01a0 0032  ld   $32
              01a1 fc58  bra  sound1      1246  bra('sound1')                   #199
              01a2 191f  ld   [$1f],out   1247  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1248
                                          1249  #-----------------------------------------------------------------------
                                          1250
                                          1251  label('.vBlankLast#32')
.vBlankLast#32:
              01a3 e038  jmp  y,$38       1252  jmp(Y,'vBlankLast#34')          #32 Jump out of page for space reasons
                                          1253  #assert hi(controllerType) == hi(pc()) # Assume these share the high address
              01a4 1401  ld   $01,y       1254  ld(hi(pc()),Y)                  #33
                                          1255
                                          1256  label('vBlankLast#52')
                                          1257
                                          1258  # Respond to reset button (14 cycles)
                                          1259  # - ResetTimer decrements as long as just [Start] is pressed down
                                          1260  # - Reaching 0 (normal) or 128 (extended) triggers the soft reset sequence
                                          1261  # - Initial value is 128 (or 255 at boot), first decrement, then check
                                          1262  # - This starts vReset -> SYS_Reset_88 -> SYS_Exec_88 -> Reset.gcl -> Main.gcl
                                          1263  # - Main.gcl then recognizes extended presses if resetTimer is 0..127 ("paasei")
                                          1264  # - This requires a full cycle (4s) in the warm boot scenario
                                          1265  # - Or a half cycle (2s) when pressing [Select] down during hard reset
                                          1266  # - This furthermore requires >=1 frame (and <=128) to have passed between
                                          1267  #   reaching 128 and getting through Reset and the start of Main, while [Start]
                                          1268  #   was still pressed so the count reaches <128. Two reasonable expectations.
                                          1269  # - The unintended power-up scenarios of ROMv1 (pulling SER_DATA low, or
                                          1270  #   pressing [Select] together with another button) now don't trigger anymore.
                                          1271
vBlankLast#52:
              01a5 0111  ld   [$11]       1272  ld([buttonState])               #52 Check [Start] for soft reset
              01a6 60ef  xora $ef         1273  xora(~buttonStart)              #53
              01a7 ecb0  bne  .restart#56 1274  bne('.restart#56')              #54
              01a8 0112  ld   [$12]       1275  ld([resetTimer])                #55 As long as button pressed
              01a9 a001  suba $01         1276  suba(1)                         #56 ... count down the timer
              01aa c212  st   [$12]       1277  st([resetTimer])                #57
              01ab 207f  anda $7f         1278  anda(127)                       #58
              01ac f0b8  beq  .restart#61 1279  beq('.restart#61')              #59 Reset at 0 (normal 2s) or 128 (extended 4s)
              01ad 00ee  ld   $ee         1280  ld((vReset&255)-2)              #60 Start force reset when hitting 0
              01ae fcb7  bra  .restart#63 1281  bra('.restart#63')              #61 ... otherwise do nothing yet
              01af fcb6  bra  .restart#64 1282  bra('.restart#64')              #62
                                          1283  label('.restart#56')
.restart#56:  01b0 0001  ld   $01         1284  wait(62-56)                     #56
              01b1 ecb1  bne  $01b1
              01b2 a001  suba $01
              01b3 0200  nop
              01b4 0080  ld   $80         1285  ld(128)                         #62 Not pressed, reset the timer
              01b5 c212  st   [$12]       1286  st([resetTimer])                #63
                                          1287  label('.restart#64')
.restart#64:  01b6 fcbd  bra  .restart#66 1288  bra('.restart#66')              #64
                                          1289  label('.restart#63')
.restart#63:  01b7 0200  nop              1290  nop()                           #63,65
                                          1291  label('.restart#61')
.restart#61:  01b8 c216  st   [$16]       1292  st([vPC])                       #61 Point vPC at vReset
              01b9 0001  ld   $01         1293  ld(vReset>>8)                   #62
              01ba c217  st   [$17]       1294  st([vPC+1])                     #63
              01bb 0002  ld   $02         1295  ld(hi('ENTER'))                 #64 Set active interpreter to vCPU
              01bc c202  st   [$02]       1296  st([vCpuSelect])                #65
                                          1297  label('.restart#66')
                                          1298
                                          1299  # Switch video mode when (only) select is pressed (16 cycles)
                                          1300  # XXX We could make this a vCPU interrupt
.restart#66:  01bd 0111  ld   [$11]       1301  ld([buttonState])               #66 Check [Select] to switch modes
              01be 60df  xora $df         1302  xora(~buttonSelect)             #67 Only trigger when just [Select] is pressed
              01bf ecd4  bne  .select#70  1303  bne('.select#70')               #68
              01c0 010b  ld   [$0b]       1304  ld([videoModeC])                #69
              01c1 e8c7  blt  .select#72  1305  bmi('.select#72')               #70 Branch when line C is off
              01c2 010a  ld   [$0a]       1306  ld([videoModeB])                #71 Rotate: Off->D->B->C
              01c3 c20b  st   [$0b]       1307  st([videoModeC])                #72
              01c4 010c  ld   [$0c]       1308  ld([videoModeD])                #73
              01c5 c20a  st   [$0a]       1309  st([videoModeB])                #74
              01c6 fccc  bra  .select#77  1310  bra('.select#77')               #75
                                          1311  label('.select#72')
.select#72:   01c7 00f6  ld   $f6         1312  ld('nopixels')                  #72,76
              01c8 000a  ld   $0a         1313  ld('pixels')                    #73 Reset: On->D->B->C
              01c9 c20b  st   [$0b]       1314  st([videoModeC])                #74
              01ca c20a  st   [$0a]       1315  st([videoModeB])                #75
              01cb 0200  nop              1316  nop()                           #76
                                          1317  label('.select#77')
.select#77:   01cc c20c  st   [$0c]       1318  st([videoModeD])                #77
              01cd 0035  ld   $35         1319  wait(188-78)                    #78 Don't waste code space expanding runVcpu here
              01ce ecce  bne  $01ce
              01cf a001  suba $01
              01d0 0200  nop
                                          1320  # AC==255 now
              01d1 c211  st   [$11]       1321  st([buttonState])               #188
                                          1322  bra('vBlankEnd#191')            #189
              01d2 fcdc  bra  vBlankEnd#191
              01d3 0000  ld   $00         1323  ld(0)                           #190
                                          1324  label('.select#70')
                                          1325
                                          1326  # Mitigation of runaway channel variable
.select#70:   01d4 0105  ld   [$05]       1327  ld([channel])                   #70 Normalize channel, for robustness
              01d5 2003  anda $03         1328  anda(0b00000011)                #71
              01d6 c205  st   [$05]       1329  st([channel])                   #72 Stop wild channel updates
                                          1330
              01d7 00dc  ld   $dc         1331  runVcpu(191-73, '---D line 40') #73 Application cycles (scan line 40)
              01d8 c21e  st   [$1e]
              01d9 1502  ld   [$02],y
              01da e0ff  jmp  y,$ff
              01db 0025  ld   $25
                                          1332
                                          1333  # AC==0 now
                                          1334  label('vBlankEnd#191')
vBlankEnd#191:
              01dc 1401  ld   $01,y       1335  ld(videoTop_v5>>8,Y)            #191
              01dd 09f9  ld   [y,$f9]     1336  ld([Y,videoTop_v5])             #192
              01de c209  st   [$09]       1337  st([videoY])                    #193
              01df c21f  st   [$1f]       1338  st([frameX])                    #194
              01e0 ece3  bne  $01e3       1339  bne(pc()+3)                     #195
              01e1 fce4  bra  $01e4       1340  bra(pc()+3)                     #196
              01e2 0001  ld   $01         1341  ld('videoA')                    #197
              01e3 00ec  ld   $ec         1342  ld('videoF')                    #197(!)
              01e4 c20d  st   [$0d]       1343  st([nextVideo])                 #198
              01e5 0105  ld   [$05]       1344  ld([channel])                   #199 Advance to next sound channel
              01e6 2121  anda [$21]       1345  anda([channelMask])             #0 <New scan line start>
              01e7 8001  adda $01         1346  adda(1)                         #1
              01e8 1402  ld   $02,y       1347  ld(hi('sound2'),Y)              #2
              01e9 e0b1  jmp  y,$b1       1348  jmp(Y,'sound2')                 #3
              01ea 1880  ld   $80,out     1349  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1350
              01eb 0200  nop              1351  fillers(until=0xff)
              01ec 0200  nop
              01ed 0200  nop
              * 20 times
                                          1352
                                          1353  #-----------------------------------------------------------------------
                                          1354  # Return point for vCPU slices during visible screen area
                                          1355  #-----------------------------------------------------------------------
                                          1356
                                          1357  assert pc() == 0x1ff            # Enables runVcpu() to re-enter into the next page
              01ff fcae  bra  sound3      1358  bra('sound3')                   #200,0 <New scan line start>
                                          1359
                                          1360  #-----------------------------------------------------------------------
                                          1361  #
                                          1362  #  $0200 ROM page 2: Video loop visible scanlines
                                          1363  #
                                          1364  #-----------------------------------------------------------------------
                                          1365  align(0x100, size=0x100)
              0200 0105  ld   [$05]       1366  ld([channel])                   #1 Advance to next sound channel
                                          1367
                                          1368  # Back porch A: first of 4 repeated scan lines
                                          1369  # - Fetch next Yi and store it for retrieval in the next scan lines
                                          1370  # - Calculate Xi from dXi, but there is no cycle time left to store it as well
                                          1371  label('videoA')
videoA:       0201 00ca  ld   $ca         1372  ld('videoB')                    #29 1st scanline of 4 (always visible)
              0202 c20d  st   [$0d]       1373  st([nextVideo])                 #30
              0203 1401  ld   $01,y       1374  ld(videoTable>>8,Y)             #31
              0204 1109  ld   [$09],x     1375  ld([videoY],X)                  #32
              0205 0d00  ld   [y,x]       1376  ld([Y,X])                       #33
              0206 de00  st   [y,x++]     1377  st([Y,Xpp])                     #34 Just X++
              0207 c220  st   [$20]       1378  st([frameY])                    #35
              0208 0d00  ld   [y,x]       1379  ld([Y,X])                       #36
              0209 911f  adda [$1f],x     1380  adda([frameX],X)                #37
                                          1381  label('pixels')
pixels:       020a 1520  ld   [$20],y     1382  ld([frameY],Y)                  #38
              020b 00c0  ld   $c0         1383  ld(syncBits)                    #39
                                          1384
                                          1385  # Stream 160 pixels from memory location <Yi,Xi> onwards
                                          1386  # Superimpose the sync signal bits to be robust against misprogramming
                                          1387  for i in range(qqVgaWidth):
              020c 5d00  ora  [y,x++],out 1388    ora([Y,Xpp],OUT)              #40-199 Pixel burst
              020d 5d00  ora  [y,x++],out
              020e 5d00  ora  [y,x++],out
              * 160 times
              02ac 18c0  ld   $c0,out     1389  ld(syncBits,OUT)                #0 <New scan line start> Back to black
                                          1390
                                          1391  # Front porch
              02ad 0105  ld   [$05]       1392  ld([channel])                   #1 Advance to next sound channel
                                          1393  label('sound3')                 # Return from vCPU interpreter
sound3:       02ae 2121  anda [$21]       1394  anda([channelMask])             #2
              02af 8001  adda $01         1395  adda(1)                         #3
              02b0 1880  ld   $80,out     1396  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1397
                                          1398  # Horizontal sync and sound channel update for scanlines outside vBlank
                                          1399  label('sound2')
sound2:       02b1 d605  st   [$05],y     1400  st([channel],Y)                 #5
              02b2 007f  ld   $7f         1401  ld(0x7f)                        #6
              02b3 29fe  anda [y,$fe]     1402  anda([Y,oscL])                  #7
              02b4 89fc  adda [y,$fc]     1403  adda([Y,keyL])                  #8
              02b5 cafe  st   [y,$fe]     1404  st([Y,oscL])                    #9
              02b6 3080  anda $80,x       1405  anda(0x80,X)                    #10
              02b7 0500  ld   [x]         1406  ld([X])                         #11
              02b8 89ff  adda [y,$ff]     1407  adda([Y,oscH])                  #12
              02b9 89fd  adda [y,$fd]     1408  adda([Y,keyH])                  #13
              02ba caff  st   [y,$ff]     1409  st([Y,oscH])                    #14
              02bb 20fc  anda $fc         1410  anda(0xfc)                      #15
              02bc 69fb  xora [y,$fb]     1411  xora([Y,wavX])                  #16
              02bd 1200  ld   ac,x        1412  ld(AC,X)                        #17
              02be 09fa  ld   [y,$fa]     1413  ld([Y,wavA])                    #18
              02bf 1407  ld   $07,y       1414  ld(soundTable>>8,Y)             #19
              02c0 8d00  adda [y,x]       1415  adda([Y,X])                     #20
              02c1 e8c4  blt  $02c4       1416  bmi(pc()+3)                     #21
              02c2 fcc5  bra  $02c5       1417  bra(pc()+3)                     #22
              02c3 203f  anda $3f         1418  anda(63)                        #23
              02c4 003f  ld   $3f         1419  ld(63)                          #23(!)
              02c5 8103  adda [$03]       1420  adda([sample])                  #24
              02c6 c203  st   [$03]       1421  st([sample])                    #25
                                          1422
              02c7 0113  ld   [$13]       1423  ld([xout])                      #26 Gets copied to XOUT
              02c8 fd0d  bra  [$0d]       1424  bra([nextVideo])                #27
              02c9 18c0  ld   $c0,out     1425  ld(syncBits,OUT)                #28 End horizontal pulse
                                          1426
                                          1427  # Back porch B: second of 4 repeated scan lines
                                          1428  # - Recompute Xi from dXi and store for retrieval in the next scan lines
                                          1429  label('videoB')
videoB:       02ca 00d3  ld   $d3         1430  ld('videoC')                    #29 2nd scanline of 4
              02cb c20d  st   [$0d]       1431  st([nextVideo])                 #30
              02cc 1401  ld   $01,y       1432  ld(videoTable>>8,Y)             #31
              02cd 0109  ld   [$09]       1433  ld([videoY])                    #32
              02ce 9001  adda $01,x       1434  adda(1,X)                       #33
              02cf 011f  ld   [$1f]       1435  ld([frameX])                    #34
              02d0 8d00  adda [y,x]       1436  adda([Y,X])                     #35
              02d1 fd0a  bra  [$0a]       1437  bra([videoModeB])               #36
              02d2 d21f  st   [$1f],x     1438  st([frameX],X)                  #37 Store in RAM and X
                                          1439
                                          1440  # Back porch C: third of 4 repeated scan lines
                                          1441  # - Nothing new to for video do as Yi and Xi are known,
                                          1442  # - This is the time to emit and reset the next sound sample
                                          1443  label('videoC')
videoC:       02d3 00dc  ld   $dc         1444  ld('videoD')                    #29 3rd scanline of 4
              02d4 c20d  st   [$0d]       1445  st([nextVideo])                 #30
              02d5 0103  ld   [$03]       1446  ld([sample])                    #31 New sound sample is ready (didn't fit in the audio loop)
              02d6 4108  ora  [$08]       1447  ora([audioBitMask])             #32 configure 4/6/8bit audio
              02d7 2114  anda [$14]       1448  anda([xoutMask])                #33
              02d8 c213  st   [$13]       1449  st([xout])                      #34 Update [xout] with new sample (4 channels just updated)
              02d9 c003  st   $03,[$03]   1450  st(sample, [sample])            #35 Reset for next sample
              02da fd0b  bra  [$0b]       1451  bra([videoModeC])               #36
              02db 111f  ld   [$1f],x     1452  ld([frameX],X)                  #37
                                          1453
                                          1454  # Back porch D: last of 4 repeated scan lines
                                          1455  # - Calculate the next frame index
                                          1456  # - Decide if this is the last line or not
                                          1457  label('videoD')                 # Default video mode
videoD:       02dc 111f  ld   [$1f],x     1458  ld([frameX], X)                 #29 4th scanline of 4
              02dd 0109  ld   [$09]       1459  ld([videoY])                    #30
              02de a0ee  suba $ee         1460  suba((120-1)*2)                 #31
                                          1461  beq('.lastpixels#34')           #32
              02df f0e5  beq  .lastpixels#34
              02e0 80f0  adda $f0         1462  adda(120*2)                     #33 More pixel lines to go
              02e1 c209  st   [$09]       1463  st([videoY])                    #34
              02e2 0001  ld   $01         1464  ld('videoA')                    #35
              02e3 fd0c  bra  [$0c]       1465  bra([videoModeD])               #36
              02e4 c20d  st   [$0d]       1466  st([nextVideo])                 #37
                                          1467
                                          1468  label('.lastpixels#34')
                                          1469  if soundDiscontinuity == 1:
.lastpixels#34:
              02e5 c003  st   $03,[$03]   1470    st(sample, [sample])          #34 Sound continuity
                                          1471  else:
                                          1472    nop()                         #34
              02e6 00e9  ld   $e9         1473  ld('videoE')                    #35 No more pixel lines to go
              02e7 fd0c  bra  [$0c]       1474  bra([videoModeD])               #36
              02e8 c20d  st   [$0d]       1475  st([nextVideo])                 #37
                                          1476
                                          1477  # Back porch "E": after the last line
                                          1478  # - Go back and and enter vertical blank (program page 2)
                                          1479  label('videoE') # Exit visible area
videoE:       02e9 1401  ld   $01,y       1480  ld(hi('vBlankStart'),Y)         #29 Return to vertical blank interval
              02ea e004  jmp  y,$04       1481  jmp(Y,'vBlankStart')            #30
              02eb 00c0  ld   $c0         1482  ld(syncBits)                    #31
                                          1483
                                          1484  # Video mode that blacks out one or more pixel lines from the top of screen.
                                          1485  # This yields some speed, but also frees up screen memory for other purposes.
                                          1486  # Note: Sound output becomes choppier the more pixel lines are skipped
                                          1487  # Note: The vertical blank driver leaves 0x80 behind in [videoSync1]
                                          1488  label('videoF')
videoF:       02ec 0120  ld   [$20]       1489  ld([videoSync1])                #29 Completely black pixel line
              02ed 8080  adda $80         1490  adda(0x80)                      #30
              02ee d220  st   [$20],x     1491  st([videoSync1],X)              #31
              02ef 011f  ld   [$1f]       1492  ld([frameX])                    #32
              02f0 a500  suba [x]         1493  suba([X])                       #33 Decrements every two VGA scanlines
              02f1 f0f4  beq  .videoF#36  1494  beq('.videoF#36')               #34
              02f2 c21f  st   [$1f]       1495  st([frameX])                    #35
              02f3 fcf6  bra  nopixels    1496  bra('nopixels')                 #36
                                          1497  label('.videoF#36')
.videoF#36:   02f4 0001  ld   $01         1498  ld('videoA')                    #36,37 Transfer to visible screen area
              02f5 c20d  st   [$0d]       1499  st([nextVideo])                 #37
                                          1500  #
                                          1501  # Alternative for pixel burst: faster application mode
                                          1502  label('nopixels')
nopixels:     02f6 00ff  ld   $ff         1503  runVcpu(200-38, 'ABCD line 40-520',
              02f7 c21e  st   [$1e]
              02f8 1502  ld   [$02],y
              02f9 e0ff  jmp  y,$ff
              02fa 003b  ld   $3b
                                          1504    returnTo=0x1ff)               #38 Application interpreter (black scanlines)
                                          1505
                                          1506  #-----------------------------------------------------------------------
                                          1507  #
                                          1508  #  $0300 ROM page 3: Application interpreter primary page
                                          1509  #
                                          1510  #-----------------------------------------------------------------------
                                          1511  #
                                          1512  # Enter the timing-aware application interpreter (aka virtual CPU, vCPU)
                                          1513  #
                                          1514  # This routine will execute as many as possible instructions in the
                                          1515  # allotted time. When time runs out, it synchronizes such that the total
                                          1516  # duration matches the caller's request. Durations are counted in `ticks',
                                          1517  # which are multiples of 2 clock cycles.
                                          1518  #
                                          1519  # Synopsis: Use the runVcpu() macro as entry point
                                          1520
                                          1521  # We let 'ENTER' begin one word before the page boundary, for a bit extra
                                          1522  # precious space in the packed interpreter code page. Although ENTER's
                                          1523  # first instruction is bra() which normally doesn't cross page boundaries,
                                          1524  # in this case it will still jump into the right space, because branches
                                          1525  # from $xxFF land in the next page anyway.
                                          1526  while pc()&255 < 255:
              02fb 0200  nop              1527    nop()
              02fc 0200  nop
              02fd 0200  nop
              02fe 0200  nop
                                          1528  label('ENTER')
ENTER:        02ff fc03  bra  .next2      1529  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          1530  # --- Page boundary ---
                                          1531  align(0x100,size=0x100)
                                          1532  label('NEXTY')                  # Alternative for REENTER
NEXTY:        0300 1517  ld   [$17],y     1533  ld([vPC+1],Y)                   #1
                                          1534
                                          1535  # Fetch next instruction and execute it, but only if there are sufficient
                                          1536  # ticks left for the slowest instruction.
                                          1537  label('NEXT')
NEXT:         0301 8115  adda [$15]       1538  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              0302 e80b  blt  EXIT        1539  blt('EXIT')                     #1 Escape near time out
                                          1540  label('.next2')
.next2:       0303 c215  st   [$15]       1541  st([vTicks])                    #2
              0304 0116  ld   [$16]       1542  ld([vPC])                       #3 Advance vPC
              0305 8002  adda $02         1543  adda(2)                         #4
              0306 d216  st   [$16],x     1544  st([vPC],X)                     #5
              0307 0d00  ld   [y,x]       1545  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              0308 de00  st   [y,x++]     1546  st([Y,Xpp])                     #7 Just X++
              0309 fe00  bra  ac          1547  bra(AC)                         #8 Dispatch
              030a 0d00  ld   [y,x]       1548  ld([Y,X])                       #9 Prefetch operand
                                          1549
                                          1550  # Resync with video driver and transfer control
                                          1551  label('EXIT')
EXIT:         030b 800f  adda $0f         1552  adda(maxTicks)                  #3
                                          1553  label('RESYNC')
RESYNC:       030c e40c  bgt  RESYNC      1554  bgt(pc()&255)                   #4 Resync
              030d a001  suba $01         1555  suba(1)                         #5
              030e 1401  ld   $01,y       1556  ld(hi('vBlankStart'),Y)         #6
              030f e11e  jmp  y,[$1e]     1557  jmp(Y,[vReturn])                #7 To video driver
              0310 0000  ld   $00         1558  ld(0)                           #8 AC should be 0 already. Still..
                                          1559  assert vCPU_overhead ==          9
                                          1560
                                          1561  # pc = 0x0311, Opcode = 0x11
                                          1562  # Instruction LDWI: Load immediate word constant (vAC=D), 24 cycles
                                          1563  label('LDWI')
LDWI:         0311 140b  ld   $0b,y       1564  ld(hi('ldwi#13'),Y)             #10
              0312 e0b0  jmp  y,$b0       1565  jmp(Y,'ldwi#13')                #11
              0313 1517  ld   [$17],y     1566  ld([vPC+1],Y)                   #12
                                          1567
                                          1568  # pc = 0x0314, Opcode = 0x14
                                          1569  # Instruction DEC: Decrement byte var ([D]--), 22 cycles
                                          1570  label('DEC')
DEC:          0314 1416  ld   $16,y       1571  ld(hi('dec#13'),Y)              #10
              0315 e00a  jmp  y,$0a       1572  jmp(Y,'dec#13')                 #11
                                          1573  # dummy                         #12 Overlap
                                          1574  #
                                          1575  # pc = 0x0316, Opcode = 0x16
                                          1576  # Instruction MOVQB: Load a byte var with a small constant 0..255, 28 cycles
                                          1577  label('MOVQB')
MOVQB:        0316 1416  ld   $16,y       1578  ld(hi('movqb#13'),Y)            #10 #12
              0317 e069  jmp  y,$69       1579  jmp(Y,'movqb#13')               #11
                                          1580  # dummy                         #12 Overlap
                                          1581  #
                                          1582  # pc = 0x0318, Opcode = 0x18
                                          1583  # Instruction LSRB: Logical shift right byte var, 28 cycles
                                          1584  label('LSRB')
LSRB:         0318 1416  ld   $16,y       1585  ld(hi('lsrb#13'),Y)             #10 #12
              0319 e0b7  jmp  y,$b7       1586  jmp(Y,'lsrb#13')                #11
                                          1587  # dummy                         #12 Overlap
                                          1588  #
                                          1589  # pc = 0x031a, Opcode = 0x1a
                                          1590  # Instruction LD: Load byte from zero page (vAC=[D]), 22 cycles
                                          1591  label('LD')
LD:           031a 1416  ld   $16,y       1592  ld(hi('ld#13'),Y)               #10 #12
              031b e011  jmp  y,$11       1593  jmp(Y,'ld#13')                  #11
                                          1594  # dummy                         #12 Overlap
                                          1595  #
                                          1596  # pc = 0x031c, Opcode = 0x1c
                                          1597  # Instruction ADDBI: dst.lo = imm + src.lo, 30 cycles
                                          1598  label('ADDBI')
ADDBI:        031c 1435  ld   $35,y       1599  ld(hi('addbi#13'),Y)            #10 #12
              031d e000  jmp  y,$00       1600  jmp(Y,'addbi#13')               #11
              031e 1517  ld   [$17],y     1601  ld([vPC+1],Y)                   #12 vPC.hi
                                          1602
                                          1603  # pc = 0x031f, Opcode = 0x1f
                                          1604  # Instruction SPARE0:
                                          1605  label('SPARE0')
SPARE0:       031f 1403  ld   $03,y       1606  ld(hi('SPARE0'),Y)              #10
              0320 e01f  jmp  y,$1f       1607  jmp(Y,'SPARE0')                 #11
                                          1608  # dummy                         #12 Overlap, not dependent on ld(AC,X) anymore
                                          1609  #
                                          1610  # pc = 0x0321, Opcode = 0x21
                                          1611  # Instruction LDW: Load word from zero page (vAC=[D]+256*[D+1]), 24 cycles
                                          1612  label('LDW')
LDW:          0321 1416  ld   $16,y       1613  ld(hi('ldw#13'),Y)              #10 #12
              0322 e0bf  jmp  y,$bf       1614  jmp(Y,'ldw#13')                 #11
                                          1615  # dummy                         #12 Overlap
                                          1616  #
                                          1617  # pc = 0x0323, Opcode = 0x23
                                          1618  # Instruction PEEKV+: Peek byte at address contained in var, inc var, 30 cycles
                                          1619  label('PEEKV+')
PEEKV+:       0323 1418  ld   $18,y       1620  ld(hi('peekv+#13'),Y)           #10 #12
              0324 e00b  jmp  y,$0b       1621  jmp(Y,'peekv+#13')              #11
                                          1622  # dummy                         #12 Overlap
                                          1623  #
                                          1624  # pc = 0x0325, Opcode = 0x25
                                          1625  # Instruction POKEI: Poke immediate byte into address contained in [vAC], 20 cycles
                                          1626  label('POKEI')
POKEI:        0325 1417  ld   $17,y       1627  ld(hi('pokei#13'),Y)            #10 #12
              0326 e0ca  jmp  y,$ca       1628  jmp(Y,'pokei#13')               #11
                                          1629  # dummy                         #12 Overlap
                                          1630  #
                                          1631  # pc = 0x0327, Opcode = 0x27
                                          1632  # Instruction LSLV: Logical shift left word var, 28 cycles
                                          1633  label('LSLV')
LSLV:         0327 1416  ld   $16,y       1634  ld(hi('lslv#13'),Y)             #10 #12
              0328 e0a3  jmp  y,$a3       1635  jmp(Y,'lslv#13')                #11
                                          1636  # dummy                         #12 Overlap
                                          1637  #
                                          1638  # pc = 0x0329, Opcode = 0x29
                                          1639  # Instruction ADDVB: dst.lo = src0.lo + src1.lo, 36 cycles
                                          1640  label('ADDVB')
ADDVB:        0329 142d  ld   $2d,y       1641  ld(hi('addvb#13'),Y)            #10 #12
              032a e0b4  jmp  y,$b4       1642  jmp(Y,'addvb#13')               #11
                                          1643  # dummy                         #12 Overlap
                                          1644  #
                                          1645  # pc = 0x032b, Opcode = 0x2b
                                          1646  # Instruction STW: Store word in zero page ([D],[D+1]=vAC&255,vAC>>8), 24 cycles
                                          1647  label('STW')
STW:          032b 1416  ld   $16,y       1648  ld(hi('stw#13'),Y)              #10 #12
              032c e0c9  jmp  y,$c9       1649  jmp(Y,'stw#13')                 #11
                                          1650  # dummy                         #12 Overlap
                                          1651  #
                                          1652  # pc = 0x032d, Opcode = 0x2d
                                          1653  # Instruction CNVXY: var = src0.lo | ((src1.lo + 8) <<8), 44 cycles
                                          1654  label('CNVXY')
CNVXY:        032d 142e  ld   $2e,y       1655  ld(hi('cnvxy#13'),Y)            #10 #12
              032e e07c  jmp  y,$7c       1656  jmp(Y,'cnvxy#13')               #11
                                          1657  # dummy                         #12 Overlap
                                          1658  #
                                          1659  # pc = 0x032f, Opcode = 0x2f
                                          1660  # Instruction PREFX2
                                          1661  label('PREFX2')
PREFX2:       032f 1414  ld   $14,y       1662  ld(hi('prefx2#13'),Y)           #10 #12
              0330 e0cd  jmp  y,$cd       1663  jmp(Y,'prefx2#13')              #11
              0331 c22b  st   [$2b]       1664  st([sysArgs+7])                 #12 Operand
                                          1665
                                          1666  # pc = 0x0332, Opcode = 0x32
                                          1667  # Instruction MOVWA: Move 16bits from src zero page var to dst zero page var, vAC=dst, 40 cycles
                                          1668  label('MOVWA')
MOVWA:        0332 1417  ld   $17,y       1669  ld(hi('movwa#13'),Y)            #10
              0333 e0df  jmp  y,$df       1670  jmp(Y,'movwa#13')               #11
              0334 1517  ld   [$17],y     1671  ld([vPC+1],Y)                   #12 vPC.hi
                                          1672
                                          1673  # pc = 0x0335, Opcode = 0x35
                                          1674  # Instruction BCC: Test AC sign and branch conditionally, variable, (24-26), cycles
                                          1675  label('BCC')
BCC:          0335 de00  st   [y,x++]     1676  st([Y,Xpp])                     #10 X++
              0336 143f  ld   $3f,y       1677  ld(0x3f,Y)                      #11
              0337 e200  jmp  y,ac        1678  jmp(Y,AC)                       #12 AC is the conditional operand
                                          1679  # dummy                         #13 Overlap
                                          1680  #
                                          1681  # pc = 0x0338, Opcode = 0x38
                                          1682  # Instruction SUBBI: dst.lo = src.lo - imm, 34 cycles
                                          1683  label('SUBBI')
SUBBI:        0338 1435  ld   $35,y       1684  ld(hi('subbi#13'),Y)            #10 #12
              0339 e010  jmp  y,$10       1685  jmp(Y,'subbi#13')               #11
              033a 1517  ld   [$17],y     1686  ld([vPC+1],Y)                   #12 vPC.hi
                                          1687
                                          1688  # pc = 0x033b, Opcode = 0x3b
                                          1689  # Instruction DEEKV: read word from address contained in var, 28 cycles
                                          1690  label('DEEKV')
DEEKV:        033b 1416  ld   $16,y       1691  ld(hi('deekv#13'),Y)            #10
              033c e093  jmp  y,$93       1692  jmp(Y,'deekv#13')               #11
                                          1693  # dummy                         #12 Overlap
                                          1694  #
                                          1695  # pc = 0x033d, Opcode = 0x3d
                                          1696  # Instruction ARRVW: vAC = imm16 + idx*2, 56 cycles
                                          1697  label('ARRVW')
ARRVW:        033d 1428  ld   $28,y       1698  ld(hi('arrvw#13'),Y)            #10 #12
              033e e0a0  jmp  y,$a0       1699  jmp(Y,'arrvw#13')               #11
                                          1700  # dummy                         #12 Overlap
                                          1701  #
                                          1702  # pc = 0x033f, Opcode = 0x3f
                                          1703  # Instruction LDARRW: vAC = deek [imm16 + idx*2], 62 cycles
                                          1704  label('LDARRW')
LDARRW:       033f 1436  ld   $36,y       1705  ld(hi('ldarrw#13'),Y)           #10
              0340 e037  jmp  y,$37       1706  jmp(Y,'ldarrw#13')              #11
              0341 1517  ld   [$17],y     1707  ld([vPC+1],Y)                   #12 vPC.hi
                                          1708
                                          1709  # pc = 0x0342, Opcode = 0x42
                                          1710  # Instruction ADDVI: dst = src + imm, vAC = dst, 54 cycles
                                          1711  label('ADDVI')
ADDVI:        0342 1428  ld   $28,y       1712  ld(hi('addvi#13'),Y)            #10
              0343 e000  jmp  y,$00       1713  jmp(Y,'addvi#13')               #11
                                          1714  # dummy                         #12 Overlap
                                          1715
                                          1716  # pc = 0x0344, Opcode = 0x44
                                          1717  # Instruction SUBVI: dst = src - imm, vAC = dst, 54 cycles
                                          1718  label('SUBVI')
SUBVI:        0344 1428  ld   $28,y       1719  ld(hi('subvi#13'),Y)            #10 #12
              0345 e02f  jmp  y,$2f       1720  jmp(Y,'subvi#13')               #11
                                          1721  # dummy                         #12 Overlap
                                          1722
                                          1723  # pc = 0x0346, Opcode = 0x46
                                          1724  # Instruction DEEKV+: Deek word at address contained in var, var += 2, 30 cycles
                                          1725  label('DEEKV+')
DEEKV+:       0346 1418  ld   $18,y       1726  ld(hi('deekv+#13'),Y)           #10 #12
              0347 e051  jmp  y,$51       1727  jmp(Y,'deekv+#13')              #11
                                          1728  # dummy                         #12 Overlap
                                          1729  #
                                          1730  # pc = 0x0348, Opcode = 0x48
                                          1731  # Instruction SUBVB: dst.lo = src0.lo - src1.lo, 36 cycles
                                          1732  label('SUBVB')
SUBVB:        0348 142d  ld   $2d,y       1733  ld(hi('subvb#13'),Y)            #10 #12
              0349 e0d0  jmp  y,$d0       1734  jmp(Y,'subvb#13')               #11
                                          1735  # dummy                         #12 Overlap
                                          1736  #
                                          1737  # pc = 0x034a, Opcode = 0x4a
                                          1738  # Instruction DJGE:
                                          1739  label('DJGE')
DJGE:         034a 142b  ld   $2b,y       1740  ld(hi('djge#13'),Y)             #10 #12
              034b e000  jmp  y,$00       1741  jmp(Y,'djge#13')                #11
              034c 1517  ld   [$17],y     1742  ld([vPC+1],Y)                   #12
                                          1743
                                          1744  # pc = 0x034d, Opcode = 0x4d
                                          1745  # Instruction MOVQW: Load a word var with a small constant 0..255, 28 cycles
                                          1746  label('MOVQW')
MOVQW:        034d 1416  ld   $16,y       1747  ld(hi('movqw#13'),Y)            #10 #12
              034e e076  jmp  y,$76       1748  jmp(Y,'movqw#13')               #11
                                          1749  # dummy                         #12 Overlap
                                          1750  #
                                          1751  # pc = 0x034f, Opcode = 0x4f
                                          1752  # Instruction STWM: store [vAC] into [imm16], 30 cycles
                                          1753  label('STWM')
STWM:         034f 142e  ld   $2e,y       1754  ld(hi('stwm#13'),Y)             #10 #12
              0350 e0af  jmp  y,$af       1755  jmp(Y,'stwm#13')                #11
                                          1756  # dummy                         #12 Overlap
                                          1757  #
                                          1758  # pc = 0x0351, Opcode = 0x51
                                          1759  # Instruction STARRW: doke [imm16 + idx*2] with vAC, 62 cycles
                                          1760  label('STARRW')
STARRW:       0351 1436  ld   $36,y       1761  ld(hi('starrw#13'),Y)           #10 #12
              0352 e06f  jmp  y,$6f       1762  jmp(Y,'starrw#13')              #11
                                          1763  # dummy                         #12 Overlap
                                          1764  #
                                          1765  # pc = 0x0353, Opcode = 0x53
                                          1766  # Instruction LDARRB: vAC = peek [imm16 + idx], 54 cycles
                                          1767  label('LDARRB')
LDARRB:       0353 143f  ld   $3f,y       1768  ld(hi('ldarrb#13'),Y)           #10 #12
              0354 e000  jmp  y,$00       1769  jmp(Y,'ldarrb#13')              #11
                                          1770  # dummy                         #12 Overlap
                                          1771  #
                                          1772  # pc = 0x0355, Opcode = 0x55
                                          1773  # Instruction STARRB: poke [imm16 + idx] with vAC.lo, 52 cycles
                                          1774  label('STARRB')
STARRB:       0355 143f  ld   $3f,y       1775  ld(hi('starrb#13'),Y)           #10 #12
              0356 e075  jmp  y,$75       1776  jmp(Y,'starrb#13')              #11
                                          1777  # dummy                         #12 Overlap
                                          1778  #
                                          1779  # pc = 0x0357, Opcode = 0x57
                                          1780  # Instruction STARRI: poke [imm16 + idx] with 8bit imm, 56 cycles
                                          1781  label('STARRI')
STARRI:       0357 143f  ld   $3f,y       1782  ld(hi('starri#13'),Y)           #10 #12
              0358 e0a3  jmp  y,$a3       1783  jmp(Y,'starri#13')              #11
                                          1784  # dummy                         #12 Overlap
                                          1785  #
                                          1786  # pc = 0x0359, Opcode = 0x59
                                          1787  # Instruction LDI: Load immediate small positive constant (vAC=D), 20 cycles
                                          1788  label('LDI')
LDI:          0359 1416  ld   $16,y       1789  ld(hi('ldi#13'),Y)              #10
              035a e019  jmp  y,$19       1790  jmp(Y,'ldi#13')                 #11
                                          1791  # dummy                         #12 Overlap
                                          1792  #
                                          1793  # pc = 0x035b, Opcode = 0x5b
                                          1794  # Instruction PEEKV: Read byte from address contained in var, 28 cycles
                                          1795  label('PEEKV')
PEEKV:        035b 1416  ld   $16,y       1796  ld(hi('peekv#13'),Y)            #10
              035c e085  jmp  y,$85       1797  jmp(Y,'peekv#13')               #11
              035d 1200  ld   ac,x        1798  ld(AC,X)                        #12
                                          1799
                                          1800  # pc = 0x035e, Opcode = 0x5e
                                          1801  # Instruction ST: Store byte in zero page ([D]=vAC&255), 20 cycles
                                          1802  label('ST')
ST:           035e 1416  ld   $16,y       1803  ld(hi('st#13'),Y)               #10
              035f e01f  jmp  y,$1f       1804  jmp(Y,'st#13')                  #11
                                          1805  # dummy                         #12 Overlap
                                          1806  #
                                          1807  # pc = 0x0360, Opcode = 0x60
                                          1808  # Instruction DOKEV+: doke word in vAC to address contained in var, var += 2, 30 cycles
                                          1809  label('DOKEV+')
DOKEV+:       0360 1418  ld   $18,y       1810  ld(hi('dokev+#13'),Y)           #10 #12
              0361 e079  jmp  y,$79       1811  jmp(Y,'dokev+#13')              #11
              0362 1400  ld   $00,y       1812  ld(0,Y)                         #12
                                          1813
                                          1814  # pc = 0x0363, Opcode = 0x63
                                          1815  # Instruction POP: Pop address from stack (vLR,vSP==[vSP]+256*[vSP+1],vSP+2), 30 cycles
                                          1816  label('POP')
POP:          0363 140b  ld   $0b,y       1817  ld(hi('pop#13'),Y)              #10
              0364 e0ba  jmp  y,$ba       1818  jmp(Y,'pop#13')                 #11
                                          1819  # dummy                         #12 Overlap
                                          1820  #
                                          1821  # pc = 0x0365, Opcode = 0x65
                                          1822  # Instruction MOVB: Moves a byte from src var to dst var, 28 cycles
                                          1823  label('MOVB')
MOVB:         0365 1416  ld   $16,y       1824  ld(hi('movb#13'),Y)             #10 #12
              0366 e042  jmp  y,$42       1825  jmp(Y,'movb#13')                #11
                                          1826  # dummy                         #12 Overlap
                                          1827  #
                                          1828  # pc = 0x0367, Opcode = 0x67
                                          1829  # Instruction PEEKA: Peek a byte from [vAC] to var, 24 cycles
                                          1830  label('PEEKA')
PEEKA:        0367 1416  ld   $16,y       1831  ld(hi('peeka#13'),Y)            #10 #12
              0368 e050  jmp  y,$50       1832  jmp(Y,'peeka#13')               #11
                                          1833  # dummy                         #12 Overlap
                                          1834  #
                                          1835  # pc = 0x0369, Opcode = 0x69
                                          1836  # Instruction POKEA: Poke a byte from var to [vAC], 22 cycles
                                          1837  label('POKEA')
POKEA:        0369 1417  ld   $17,y       1838  ld(hi('pokea#13'),Y)            #10 #12
              036a e0b2  jmp  y,$b2       1839  jmp(Y,'pokea#13')               #11
                                          1840  # dummy                         #12 Overlap
                                          1841
                                          1842  # pc = 0x036b, Opcode = 0x6b
                                          1843  # Instruction TEQ: Test for EQ, returns 0x0000 or 0xFFFF in zero page var, 24 cycles
                                          1844  label('TEQ')
TEQ:          036b 1415  ld   $15,y       1845  ld(hi('teq#13'),Y)              #10 #12
              036c e067  jmp  y,$67       1846  jmp(Y,'teq#13')                 #11
                                          1847  # dummy                         #12 Overlap
                                          1848  #
                                          1849  # pc = 0x036d, Opcode = 0x6d
                                          1850  # Instruction TNE: Test for NE, returns 0x0000 or 0xFFFF in zero page var, 24 cycles
                                          1851  label('TNE')
TNE:          036d 1415  ld   $15,y       1852  ld(hi('tne#13'),Y)              #10 #12
              036e e076  jmp  y,$76       1853  jmp(Y,'tne#13')                 #11
                                          1854  # dummy                         #12 Overlap
                                          1855  #
                                          1856  # pc = 0x036f, Opcode = 0x6f
                                          1857  # Instruction DEEKA: Deek a word from [vAC] to var, 30 cycles
                                          1858  label('DEEKA')
DEEKA:        036f 1416  ld   $16,y       1859  ld(hi('deeka#13'),Y)            #10 #12
              0370 e059  jmp  y,$59       1860  jmp(Y,'deeka#13')               #11
              0371 c21d  st   [$1d]       1861  st([vTmp])                      #12 mask
                                          1862
                                          1863  # pc = 0x0372, Opcode = 0x72
                                          1864  # Instruction LDWM: LDWI + DEEK, 30 cycles
                                          1865  label('LDWM')
LDWM:         0372 142e  ld   $2e,y       1866  ld(hi('ldwm#13'),Y)             #10
              0373 e09f  jmp  y,$9f       1867  jmp(Y,'ldwm#13')                #11
              0374 1517  ld   [$17],y     1868  ld([vPC+1],Y)                   #12 vPC.hi
                                          1869
                                          1870  # pc = 0x0375, Opcode = 0x75
                                          1871  # Instruction PUSH: Push vLR on stack ([vSP-2],v[vSP-1],vSP=vLR&255,vLR>>8,vLR-2), 30 cycles
                                          1872  label('PUSH')
PUSH:         0375 140b  ld   $0b,y       1873  ld(hi('push#13'),Y)             #10
              0376 e0ca  jmp  y,$ca       1874  jmp(Y,'push#13')                #11
                                          1875  # dummy                         #12 Overlap
                                          1876  #
                                          1877  # pc = 0x0377, Opcode = 0x77
                                          1878  # Instruction DOKEI: doke immediate word into address contained in [vAC], 28 cycles
                                          1879  label('DOKEI')
DOKEI:        0377 1417  ld   $17,y       1880  ld(hi('dokei#13'),Y)            #10 #12
              0378 e0d0  jmp  y,$d0       1881  jmp(Y,'dokei#13')               #11
                                          1882  # dummy                         #12 Overlap
                                          1883  #
                                          1884  # pc = 0x0379, Opcode = 0x79
                                          1885  # Instruction ARRW: vAC = imm16 + vAC*2, 48 cycles
                                          1886  label('ARRW')
ARRW:         0379 1428  ld   $28,y       1887  ld(hi('arrw#13'),Y)             #10
              037a e076  jmp  y,$76       1888  jmp(Y,'arrw#13')                #11
                                          1889  # dummy                         #12 Overlap
                                          1890  #
                                          1891  # pc = 0x037b, Opcode = 0x7b
                                          1892  # Instruction SCRLHR: horizontal scroll video rectangle, 46 cycles
                                          1893  label('SCRLHR')
SCRLHR:       037b 1431  ld   $31,y       1894  ld(hi('scrlhr#13'),Y)           #10
              037c e023  jmp  y,$23       1895  jmp(Y,'scrlhr#13')              #11
                                          1896  # dummy                         #12 Overlap
                                          1897  #
                                          1898  # pc = 0x037d, Opcode = 0x7d
                                          1899  # Instruction DOKEA: Doke a word from var to [vAC], 30 cycles
                                          1900  label('DOKEA')
DOKEA:        037d 1417  ld   $17,y       1901  ld(hi('dokea#13'),Y)            #10 #12
              037e e0ba  jmp  y,$ba       1902  jmp(Y,'dokea#13')               #11
                                          1903  # dummy                         #12 Overlap
                                          1904
                                          1905  # pc = 0x037f, Opcode = 0x7f
                                          1906  # Instruction LUP: ROM lookup (vAC=ROM[vAC+D]), 26 cycles
                                          1907  label('LUP')
LUP:          037f 1519  ld   [$19],y     1908  ld([vAC+1],Y)                   #10 #12
              0380 e0fb  jmp  y,$fb       1909  jmp(Y,251)                      #11 Trampoline offset
              0381 8118  adda [$18]       1910  adda([vAC])                     #12
                                          1911
                                          1912  # pc = 0x0382, Opcode = 0x82
                                          1913  # Instruction ANDI: Logical-AND with small constant (vAC&=D), 20 cycles
                                          1914  label('ANDI')
ANDI:         0382 1404  ld   $04,y       1915  ld(hi('andi#13'),Y)             #10
              0383 e022  jmp  y,$22       1916  jmp(Y,'andi#13')                #11
              0384 2118  anda [$18]       1917  anda([vAC])                     #12
                                          1918
                                          1919  # pc = 0x0385, Opcode = 0x85
                                          1920  # Instruction CALLI: Goto immediate address and remember vPC (vLR,vPC=vPC+3,$HHLL-2), 28 cycles
                                          1921  label('CALLI')
CALLI:        0385 1417  ld   $17,y       1922  ld(hi('calli#13'),Y)            #10
              0386 e000  jmp  y,$00       1923  jmp(Y,'calli#13')               #11
              0387 0116  ld   [$16]       1924  ld([vPC])                       #12
                                          1925
                                          1926  # pc = 0x0388, Opcode = 0x88
                                          1927  # Instruction ORI: Logical-OR with small constant (vAC|=D), 20 cycles
                                          1928  label('ORI')
ORI:          0388 1416  ld   $16,y       1929  ld(hi('ori#13'),Y)              #10
              0389 e025  jmp  y,$25       1930  jmp(Y,'ori#13')                 #11
                                          1931  # dummy                         #12 Overlap
                                          1932  #
                                          1933  # pc = 0x038a, Opcode = 0x8a
                                          1934  # Instruction PEEKA+: Peek a byte from [vAC] to var, incw vAC, 28-30 cycles
                                          1935  label('PEEKA+')
PEEKA+:       038a 1414  ld   $14,y       1936  ld(hi('peeka+#13'),Y)           #10 #12
              038b e046  jmp  y,$46       1937  jmp(Y,'peeka+#13')              #11
                                          1938  # dummy                         #12 Overlap
                                          1939  #
                                          1940  # pc = 0x038c, Opcode = 0x8c
                                          1941  # Instruction XORI: Logical-XOR with small constant (vAC^=D), 20 cycles
                                          1942  label('XORI')
XORI:         038c 1416  ld   $16,y       1943  ld(hi('xori#13'),Y)             #10 #12
              038d e02a  jmp  y,$2a       1944  jmp(Y,'xori#13')                #11
                                          1945  # dummy                         #12 Overlap
                                          1946  #
                                          1947  # pc = 0x038e, Opcode = 0x8e
                                          1948  # Instruction DBGE:  Decrement byte var and branch if >= 0, 30 cycles
                                          1949  label('DBGE')
DBGE:         038e 142a  ld   $2a,y       1950  ld(hi('dbge#13'),Y)             #10 #12
              038f e0a6  jmp  y,$a6       1951  jmp(Y,'dbge#13')                #11
                                          1952  # dummy                         #12 Overlap
                                          1953  #
                                          1954  # pc = 0x0390, Opcode = 0x90
                                          1955  # Instruction BRA: Branch unconditionally (vPC=(vPC&0xff00)+D), 18 cycles
                                          1956  label('BRA')
BRA:          0390 1416  ld   $16,y       1957  ld(hi('bra#13'),Y)              #10 #12
              0391 e000  jmp  y,$00       1958  jmp(Y,'bra#13')                 #11
              0392 c216  st   [$16]       1959  st([vPC])                       #12
                                          1960
                                          1961  # pc = 0x0393, Opcode = 0x93
                                          1962  # Instruction INC: Increment zero page byte ([D]++), 20 cycles
                                          1963  label('INC')
INC:          0393 1416  ld   $16,y       1964  ld(hi('inc#13'),Y)              #10
              0394 e003  jmp  y,$03       1965  jmp(Y,'inc#13')                 #11
                                          1966  # dummy                         #12 Overlap
                                          1967  #
                                          1968  # pc = 0x0395, Opcode = 0x95
                                          1969  # Instruction INCWA: Increment word var, vAC=var, 26-28 cycles
                                          1970  label('INCWA')
INCWA:        0395 1415  ld   $15,y       1971  ld(hi('incwa#13'),Y)            #10 #12
              0396 e0cd  jmp  y,$cd       1972  jmp(Y,'incwa#13')               #11
                                          1973  # dummy                         #12 Overlap
                                          1974  #
                                          1975  # pc = 0x0397, Opcode = 0x97
                                          1976  # Instruction SPARE1:
                                          1977  label('SPARE1')
SPARE1:       0397 1403  ld   $03,y       1978  ld(hi('SPARE1'),Y)              #10 #12
              0398 e097  jmp  y,$97       1979  jmp(Y,'SPARE1')                 #11
                                          1980  # dummy                         #12 Overlap, not dependent on ld(AC,X) anymore
                                          1981  #
                                          1982  # pc = 0x0399, Opcode = 0x99
                                          1983  # Instruction ADDW: Word addition with zero page (vAC+=[D]+256*[D+1]), 30 cycles
                                          1984  label('ADDW')
ADDW:         0399 1400  ld   $00,y       1985  ld(hi('addw#13'),Y)             #10 #12
              039a e080  jmp  y,$80       1986  jmp(Y,'addw#13')                #11 Y=0
              039b 1200  ld   ac,x        1987  ld(AC,X)                        #12 Address of low byte to be added
                                          1988
                                          1989  # pc = 0x039c, Opcode = 0x9c
                                          1990  # Instruction LDNI: Load an 8bit immediate as a negative 16bit immediate into vAC, 22 cycles
                                          1991  label('LDNI')
LDNI:         039c 1416  ld   $16,y       1992  ld(hi('ldni#13'),Y)             #10
              039d e02f  jmp  y,$2f       1993  jmp(Y,'ldni#13')                #11
                                          1994  # dummy                         #12 Overlap
                                          1995  #
                                          1996  # pc = 0x039e, Opcode = 0x9e
                                          1997  # Instruction DBNE:  Decrement byte var and branch if != 0, 28-30 cycles
                                          1998  label('DBNE')
DBNE:         039e 1415  ld   $15,y       1999  ld(hi('dbne#13'),Y)             #10 #12
              039f e053  jmp  y,$53       2000  jmp(Y,'dbne#13')                #11
                                          2001  #
                                          2002  # pc = 0x03a0, Opcode = 0xa0
                                          2003  # Instruction DEEKR: vAC = DEEK[vAC + idx*2], 52 cycles
                                          2004  label('DEEKR')
DEEKR:        03a0 142e  ld   $2e,y       2005  ld(hi('deekr#13'),Y)            #10 #12
              03a1 e0bf  jmp  y,$bf       2006  jmp(Y,'deekr#13')               #11
                                          2007  # dummy                         #12 Overlap
                                          2008  #
                                          2009  # pc = 0x03a2, Opcode = 0xa2
                                          2010  # Instruction PACKAW: vAC = src0.lo | (src1.lo <<8), 30 cycles
                                          2011  label('PACKAW')
PACKAW:       03a2 142e  ld   $2e,y       2012  ld(hi('packaw#13'),Y)           #10 #12
              03a3 e04a  jmp  y,$4a       2013  jmp(Y,'packaw#13')              #11
                                          2014  # dummy                         #12 Overlap
                                          2015  #
                                          2016  # pc = 0x03a4, Opcode = 0xa4, 26 to 46 cycles
                                          2017  # Instruction DJNE:
                                          2018  label('DJNE')
DJNE:         03a4 142a  ld   $2a,y       2019  ld(hi('djne#13'),Y)             #10 #12
              03a5 e0ba  jmp  y,$ba       2020  jmp(Y,'djne#13')                #11
              03a6 1517  ld   [$17],y     2021  ld([vPC+1],Y)                   #12
                                          2022
                                          2023  # pc = 0x03a7, Opcode = 0xa7
                                          2024  # Instruction CMPI: Compare byte variable to 8bit immediate, 36 cycles
                                          2025  label('CMPI')
CMPI:         03a7 1418  ld   $18,y       2026  ld(hi('cmpi#13'),Y)             #10
              03a8 e09e  jmp  y,$9e       2027  jmp(Y,'cmpi#13')                #11
                                          2028  # dummy                         #12 Overlap
                                          2029
                                          2030  # pc = 0x03a9, Opcode = 0xa9
                                          2031  # Instruction ADDVW: Add two 16bit zero page vars, dst = src0 + src1, vAC = dst, 60 cycles
                                          2032  label('ADDVW')
ADDVW:        03a9 1414  ld   $14,y       2033  ld(hi('addvw#13'),Y)            #10 #12
              03aa e05b  jmp  y,$5b       2034  jmp(Y,'addvw#13')               #11
                                          2035  # dummy                         #12 Overlap
                                          2036
                                          2037  # pc = 0x03ab, Opcode = 0xab
                                          2038  # Instruction SUBVW: Subtract two 16bit zero page vars, dst = src0 - src1, vAC = dst, 58 cycles
                                          2039  label('SUBVW')
SUBVW:        03ab 1414  ld   $14,y       2040  ld(hi('subvw#13'),Y)            #10 #12
              03ac e090  jmp  y,$90       2041  jmp(Y,'subvw#13')               #11
                                          2042  # dummy                         #12 Overlap
                                          2043
                                          2044  # pc = 0x03ad, Opcode = 0xad
                                          2045  # Instruction PEEK: Read byte from memory (vAC=[vAC]), 26 cycles
                                          2046  label('PEEK')
PEEK:         03ad 1404  ld   $04,y       2047  ld(hi('peek#13'),Y)             #10 #12
              03ae e052  jmp  y,$52       2048  jmp(Y,'peek#13')                #11
                                          2049  # dummy                         #12 Overlap
                                          2050  #
                                          2051  # The 'SYS' vCPU instruction first checks the number of desired ticks given by
                                          2052  # the operand. As long as there are insufficient ticks available in the current
                                          2053  # time slice, the instruction will be retried. This will effectively wait for
                                          2054  # the next scan line if the current slice is almost out of time. Then a jump to
                                          2055  # native code is made. This code can do whatever it wants, but it must return
                                          2056  # to the 'REENTER' label when done. When returning, AC must hold (the negative
                                          2057  # of) the actual consumed number of whole ticks for the entire virtual
                                          2058  # instruction cycle (from NEXT to NEXT). This duration may not exceed the prior
                                          2059  # declared duration in the operand + 28 (or maxTicks). The operand specifies the
                                          2060  # (negative) of the maximum number of *extra* ticks that the native call will
                                          2061  # need. The GCL compiler automatically makes this calculation from gross number
                                          2062  # of cycles to excess number of ticks.
                                          2063  # SYS functions can modify vPC to implement repetition. For example to split
                                          2064  # up work into multiple chucks.
                                          2065  label('.sys#13')
.sys#13:      03af 1418  ld   $18,y       2066  ld(hi('.sys#16'),Y)             #13 #12
              03b0 e000  jmp  y,$00       2067  jmp(Y,'.sys#16')                #14
                                          2068  # dummy                         #15 Overlap
                                          2069  #
                                          2070  # pc = 0x03b1, Opcode = 0xb1
                                          2071  # Instruction PREFX1
                                          2072  label('PREFX1')
PREFX1:       03b1 1414  ld   $14,y       2073  ld(hi('prefx1#13'),Y)           #10 #15
              03b2 e0d5  jmp  y,$d5       2074  jmp(Y,'prefx1#13')              #11
              03b3 0023  ld   $23         2075  ld(hi('PREFX1_PAGE'))           #12 ENTER is at $(n-1)ff, where n = instruction page
                                          2076
                                          2077  # pc = 0x03b4, Opcode = 0xb4
                                          2078  # Instruction SYS: Native call, <=256 cycles (<=128 ticks, in reality less)
                                          2079  label('SYS')
SYS:          03b4 8115  adda [$15]       2080  adda([vTicks])                  #10
              03b5 e8af  blt  .sys#13     2081  blt('.sys#13')                  #11
              03b6 1523  ld   [$23],y     2082  ld([sysFn+1],Y)                 #12
              03b7 e122  jmp  y,[$22]     2083  jmp(Y,[sysFn])                  #13
                                          2084  # dummy                         #14 Overlap
                                          2085  #
                                          2086  # pc = 0x03b8, Opcode = 0xb8
                                          2087  # Instruction SUBW: Word subtract with zero page (AC-=[D]+256*[D+1]), 30 cycles
                                          2088  label('SUBW')
SUBW:         03b8 1417  ld   $17,y       2089  ld(hi('subw#13'),Y)             #10 #14
              03b9 e00c  jmp  y,$0c       2090  jmp(Y,'subw#13')                #11 Y=0
              03ba 1200  ld   ac,x        2091  ld(AC,X)                        #12 Address of low byte to be added
                                          2092
                                          2093  # pc = 0x03bb, Opcode = 0xbb
                                          2094  # Instruction JEQ: jump to 16bit address if vAC=0
                                          2095  label('JEQ')
JEQ:          03bb 1418  ld   $18,y       2096  ld(hi('jeq#13'),Y)              #10
              03bc e0c4  jmp  y,$c4       2097  jmp(Y,'jeq#13')                 #11
                                          2098  # dummy                         #12 Overlap
                                          2099  #
                                          2100  # pc = 0x03bd, Opcode = 0xbd
                                          2101  # Instruction JNE: jump to 16bit address if vAC!=0
                                          2102  label('JNE')
JNE:          03bd 1418  ld   $18,y       2103  ld(hi('jne#13'),Y)              #10 #12
              03be e0d6  jmp  y,$d6       2104  jmp(Y,'jne#13')                 #11
                                          2105  # dummy                         #12 Overlap
                                          2106  #
                                          2107  # pc = 0x03bf, Opcode = 0xbf
                                          2108  # Instruction JLT: jump to 16bit address if vAC<0
                                          2109  label('JLT')
JLT:          03bf 1416  ld   $16,y       2110  ld(hi('jlt#13'),Y)              #10 #12
              03c0 e0d2  jmp  y,$d2       2111  jmp(Y,'jlt#13')                 #11
                                          2112  # dummy                         #12 Overlap
                                          2113  #
                                          2114  # pc = 0x03c1, Opcode = 0xc1
                                          2115  # Instruction JGT: jump to 16bit address if vAC>0
                                          2116  label('JGT')
JGT:          03c1 1414  ld   $14,y       2117  ld(hi('jgt#13'),Y)              #10 #12
              03c2 e000  jmp  y,$00       2118  jmp(Y,'jgt#13')                 #11
                                          2119  # dummy                         #12 Overlap
                                          2120  #
                                          2121  # pc = 0x03c3, Opcode = 0xc3
                                          2122  # Instruction JLE: jump to 16bit address if vAC<=0
                                          2123  label('JLE')
JLE:          03c3 1414  ld   $14,y       2124  ld(hi('jle#13'),Y)              #10 #12
              03c4 e019  jmp  y,$19       2125  jmp(Y,'jle#13')                 #11
                                          2126  # dummy                         #12 Overlap
                                          2127  #
                                          2128  # pc = 0x03c5, Opcode = 0xc5
                                          2129  # Instruction JGE: jump to 16bit address if vAC>=0
                                          2130  label('JGE')
JGE:          03c5 1414  ld   $14,y       2131  ld(hi('jge#13'),Y)              #10 #12
              03c6 e035  jmp  y,$35       2132  jmp(Y,'jge#13')                 #11
                                          2133  # dummy                         #12 Overlap
                                          2134  #
                                          2135  # pc = 0x03c7, Opcode = 0xc7
                                          2136  # Instruction PREFX3: switches instruction page to 0x2200
                                          2137  # original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          2138  label('PREFX3')
PREFX3:       03c7 1414  ld   $14,y       2139  ld(hi('prefx3#13'),Y)           #10 #12
              03c8 e0c5  jmp  y,$c5       2140  jmp(Y,'prefx3#13')              #11
              03c9 c22b  st   [$2b]       2141  st([sysArgs+7])                 #12 Second operand
                                          2142
                                          2143  # SYS calls and instruction implementations rely on these labels
                                          2144  label('REENTER_28')
REENTER_28:   03ca 00f2  ld   $f2         2145  ld(-28/2)                       #25
                                          2146  label('REENTER')
REENTER:      03cb fc01  bra  NEXT        2147  bra('NEXT')                     #26 Return from SYS calls
              03cc 1517  ld   [$17],y     2148  ld([vPC+1],Y)                   #27
                                          2149
                                          2150  fillers(until=0xcd)
                                          2151
                                          2152  #
                                          2153  # The instructions below are all implemented in the second code page. Jumping
                                          2154  # back and forth makes each 6 cycles slower, but it also saves space in the
                                          2155  # primary page for the instructions above. Most of them are in fact not very
                                          2156  # critical, as evidenced by the fact that they weren't needed for the first
                                          2157  # Gigatron applications (Snake, Racer, Mandelbrot, Loader). By providing them
                                          2158  # in this way, at least they don't need to be implemented as a SYS extension.
                                          2159  #
                                          2160  # pc = 0x03cd, Opcode = 0xcd
                                          2161  # Instruction DEF: Define data or code (vAC,vPC=vPC+2,(vPC&0xff00)+D), 26 cycles
                                          2162  label('DEF')
DEF:          03cd 1404  ld   $04,y       2163  ld(hi('def#13'),Y)              #10
              03ce e017  jmp  y,$17       2164  jmp(Y,'def#13')                 #11
                                          2165  # dummy                         #12 Overlap
                                          2166  #
                                          2167  # pc = 0x03cf, Opcode = 0xcf
                                          2168  # Instruction CALL: Goto address and remember vPC (vLR,vPC=vPC+2,[D]+256*[D+1]-2), 30 cycles
                                          2169  label('CALL')
CALL:         03cf 1404  ld   $04,y       2170  ld(hi('call#13'),Y)             #10 #12
              03d0 e007  jmp  y,$07       2171  jmp(Y,'call#13')                #11
                                          2172  # dummy                         #12 Overlap
                                          2173  #
                                          2174  # pc = 0x03d1, Opcode = 0xd1
                                          2175  # Instruction POKEV+: Poke byte in vAC to address contained in var, inc var, 30 cycles
                                          2176  label('POKEV+')
POKEV+:       03d1 1418  ld   $18,y       2177  ld(hi('pokev+#13'),Y)           #10 #12
              03d2 e030  jmp  y,$30       2178  jmp(Y,'pokev+#13')              #11
                                          2179  # dummy                         #12 Overlap
                                          2180  #
                                          2181  # pc = 0x03d3, Opcode = 0xd3
                                          2182  # Instruction DOKEI+: doke immediate word into [vAC], vAC += 2, 40 cycles
                                          2183  label('DOKEI+')
DOKEI+:       03d3 1438  ld   $38,y       2184  ld(hi('dokei+#13'),Y)           #10 #12
              03d4 e087  jmp  y,$87       2185  jmp(Y,'dokei+#13')              #11
                                          2186  # dummy                         #12 Overlap
                                          2187  #
                                          2188  # pc = 0x03d5, Opcode = 0xd5
                                          2189  # Instruction TGE: Test for GE, returns 0x0000 or 0xFFFF in zero page var, 24 cycles
                                          2190  label('TGE')
TGE:          03d5 1415  ld   $15,y       2191  ld(hi('tge#13'),Y)              #10 #12
              03d6 e085  jmp  y,$85       2192  jmp(Y,'tge#13')                 #11
                                          2193  # dummy                         #12 Overlap
                                          2194  #
                                          2195  # pc = 0x03d7, Opcode = 0xd7
                                          2196  # Instruction TLT: Test for LT, returns 0x0000 or 0xFFFF in zero page var, 24 cycles
                                          2197  label('TLT')
TLT:          03d7 1415  ld   $15,y       2198  ld(hi('tlt#13'),Y)             #10 #12
              03d8 e093  jmp  y,$93       2199  jmp(Y,'tlt#13')                #11
                                          2200  # dummy                        #12 Overlap
                                          2201  #
                                          2202  # pc = 0x03d9, Opcode = 0xd9
                                          2203  # Instruction TGT: Test for GT, returns 0x0000 or 0xFFFF in zero page var, 24-26 cycles
                                          2204  label('TGT')
TGT:          03d9 1415  ld   $15,y       2205  ld(hi('tgt#13'),Y)             #10 #12
              03da e0a1  jmp  y,$a1       2206  jmp(Y,'tgt#13')                #11
                                          2207  # dummy                        #12 Overlap
                                          2208  #
                                          2209  # pc = 0x03db, Opcode = 0xdb
                                          2210  # Instruction TLE: Test for LE, returns 0x0000 or 0xFFFF in zero page var, 24-26 cycles
                                          2211  label('TLE')
TLE:          03db 1415  ld   $15,y       2212  ld(hi('tle#13'),Y)             #10 #12
              03dc e0b7  jmp  y,$b7       2213  jmp(Y,'tle#13')                #11
                                          2214  # dummy                        #12 Overlap
                                          2215  #
                                          2216  # pc = 0x03dd, Opcode = 0xdd
                                          2217  # Instruction DECWA: Decrement word var, vAC=var, 28-30 cycles
                                          2218  label('DECWA')
DECWA:        03dd 1415  ld   $15,y       2219  ld(hi('decwa#13'),Y)           #10 #12
              03de e0df  jmp  y,$df       2220  jmp(Y,'decwa#13')              #11
                                          2221  # dummy                        #12 Overlap
                                          2222  #
                                          2223  # pc = 0x03df, Opcode = 0xdf
                                          2224  # Instruction ALLOC: Create or destroy stack frame (vSP+=D), 20 cycles
                                          2225  label('ALLOC')
ALLOC:        03df 1416  ld   $16,y       2226  ld(hi('alloc#13'),Y)           #10 #12
              03e0 e03d  jmp  y,$3d       2227  jmp(Y,'alloc#13')              #11
                                          2228  # dummy                        #12 Overlap
                                          2229  #
                                          2230  # pc = 0x03e1, Opcode = 0xe1
                                          2231  # Instruction PACKVW: var = src0.lo | (src1.lo <<8), 42 cycles
                                          2232  label('PACKVW')
PACKVW:       03e1 142e  ld   $2e,y       2233  ld(hi('packvw#13'),Y)           #10 #12
              03e2 e05a  jmp  y,$5a       2234  jmp(Y,'packvw#13')              #11
                                          2235  # dummy                         #12 Overlap
                                          2236  #
                                          2237  # pc = 0x03e3, Opcode = 0xe3
                                          2238  # Instruction ADDI: Add small positive constant (vAC+=D), 26 cycles
                                          2239  label('ADDI')
ADDI:         03e3 1415  ld   $15,y       2240  ld(hi('addi#13'),Y)             #10 #12
              03e4 e000  jmp  y,$00       2241  jmp(Y,'addi#13')                #11
              03e5 c21d  st   [$1d]       2242  st([vTmp])                      #12
                                          2243
                                          2244  # pc = 0x03e6, Opcode = 0xe6
                                          2245  # Instruction SUBI: Subtract small positive constant (vAC+=D), 26 cycles
                                          2246  label('SUBI')
SUBI:         03e6 1415  ld   $15,y       2247  ld(hi('subi#13'),Y)             #10
              03e7 e014  jmp  y,$14       2248  jmp(Y,'subi#13')                #11
              03e8 c21d  st   [$1d]       2249  st([vTmp])                      #12
                                          2250
                                          2251  # pc = 0x03e9, Opcode = 0xe9
                                          2252  # Instruction LSLW: Logical shift left (vAC<<=1), 28 cycles
                                          2253  # Useful, because ADDW can't add vAC to itself. Also more compact.
                                          2254  label('LSLW')
LSLW:         03e9 1404  ld   $04,y       2255  ld(hi('lslw#13'),Y)             #10
              03ea e028  jmp  y,$28       2256  jmp(Y,'lslw#13')                #11
              03eb 0118  ld   [$18]       2257  ld([vAC])                       #12
                                          2258
                                          2259  # pc = 0x03ec, Opcode = 0xec
                                          2260  # Instruction STLW: Store word in stack frame ([vSP+D],[vSP+D+1]=vAC&255,vAC>>8), 24 cycles
                                          2261  label('STLW')
STLW:         03ec 1404  ld   $04,y       2262  ld(hi('stlw#13'),Y)             #10
              03ed e034  jmp  y,$34       2263  jmp(Y,'stlw#13')                #11
                                          2264  #dummy()                        #12 Overlap
                                          2265  #
                                          2266  # pc = 0x03ee, Opcode = 0xee
                                          2267  # Instruction LDLW: Load word from stack frame (vAC=[vSP+D]+256*[vSP+D+1]), 24 cycles
                                          2268  label('LDLW')
LDLW:         03ee 1404  ld   $04,y       2269  ld(hi('ldlw#13'),Y)             #10 #12
              03ef e03d  jmp  y,$3d       2270  jmp(Y,'ldlw#13')                #11
                                          2271  #dummy()                        #12 Overlap
                                          2272  #
                                          2273  # pc = 0x03f0, Opcode = 0xf0
                                          2274  # Instruction POKE: Write byte in memory ([[D+1],[D]]=vAC&255), 26 cycles
                                          2275  label('POKE')
POKE:         03f0 1404  ld   $04,y       2276  ld(hi('poke#13'),Y)             #10 #12
              03f1 e047  jmp  y,$47       2277  jmp(Y,'poke#13')                #11
              03f2 c21d  st   [$1d]       2278  st([vTmp])                      #12
                                          2279
                                          2280  # pc = 0x03f3, Opcode = 0xf3
                                          2281  # Instruction DOKE: Write word in memory ([[D+1],[D]],[[D+1],[D]+1]=vAC&255,vAC>>8), 28 cycles
                                          2282  label('DOKE')
DOKE:         03f3 1404  ld   $04,y       2283  ld(hi('doke#13'),Y)             #10
              03f4 e05e  jmp  y,$5e       2284  jmp(Y,'doke#13')                #11
              03f5 c21d  st   [$1d]       2285  st([vTmp])                      #12
                                          2286
                                          2287  # pc = 0x03f6, Opcode = 0xf6
                                          2288  # Instruction DEEK: Read word from memory (vAC=[vAC]+256*[vAC+1]), 28 cycles
                                          2289  label('DEEK')
DEEK:         03f6 1404  ld   $04,y       2290  ld(hi('deek#13'),Y)             #10
              03f7 e06b  jmp  y,$6b       2291  jmp(Y,'deek#13')                #11
                                          2292  #dummy()                        #12 Overlap
                                          2293  #
                                          2294  # pc = 0x03f8, Opcode = 0xf8
                                          2295  # Instruction ANDW: Word logical-AND with zero page (vAC&=[D]+256*[D+1]), 28 cycles
                                          2296  label('ANDW')
ANDW:         03f8 1404  ld   $04,y       2297  ld(hi('andw#13'),Y)             #10 #12
              03f9 e077  jmp  y,$77       2298  jmp(Y,'andw#13')                #11
                                          2299  #dummy()                        #12 Overlap
                                          2300  #
                                          2301  # pc = 0x03fa, Opcode = 0xfa
                                          2302  # Instruction ORW: Word logical-OR with zero page (vAC|=[D]+256*[D+1]), 28 cycles
                                          2303  label('ORW')
ORW:          03fa 1404  ld   $04,y       2304  ld(hi('orw#13'),Y)              #10 #12
              03fb e083  jmp  y,$83       2305  jmp(Y,'orw#13')                 #11
                                          2306  #dummy()                        #12 Overlap
                                          2307  #
                                          2308  # pc = 0x03fc, Opcode = 0xfc
                                          2309  # Instruction XORW: Word logical-XOR with zero page (vAC^=[D]+256*[D+1]), 28 cycles
                                          2310  label('XORW')
XORW:         03fc 1415  ld   $15,y       2311  ld(hi('xorw#13'),Y)             #10 #12
              03fd e029  jmp  y,$29       2312  jmp(Y,'xorw#13')                #11
              03fe 1200  ld   ac,x        2313  ld(AC,X)                        #12
                                          2314
                                          2315  # pc = 0x03ff, Opcode = 0xff
                                          2316  # Instruction RET: Function return (vPC=vLR-2), 16 cycles
                                          2317  label('RET')
RET:          03ff 011a  ld   [$1a]       2318  ld([vLR])                       #10
                                          2319  assert pc()&255 == 0
                                          2320
                                          2321
                                          2322  #-----------------------------------------------------------------------
                                          2323  #
                                          2324  #  $0400 ROM page 4: Application interpreter extension
                                          2325  #
                                          2326  #-----------------------------------------------------------------------
                                          2327  align(0x100, size=0x100)
                                          2328
                                          2329  # (Continue RET)
              0400 a002  suba $02         2330  suba(2)                         #11
              0401 c216  st   [$16]       2331  st([vPC])                       #12
              0402 011b  ld   [$1b]       2332  ld([vLR+1])                     #13
              0403 c217  st   [$17]       2333  st([vPC+1])                     #14
              0404 1403  ld   $03,y       2334  ld(hi('REENTER'),Y)             #15
              0405 e0cb  jmp  y,$cb       2335  jmp(Y,'REENTER')                #16
              0406 00f6  ld   $f6         2336  ld(-20/2)                       #17
                                          2337
                                          2338  # CALL implementation
                                          2339  label('call#13')
call#13:      0407 1200  ld   ac,x        2340  ld(AC,X)                        #13
              0408 0116  ld   [$16]       2341  ld([vPC])                       #14
              0409 8002  adda $02         2342  adda(2)                         #15 Point to instruction after CALL
              040a c21a  st   [$1a]       2343  st([vLR])                       #16
              040b 0117  ld   [$17]       2344  ld([vPC+1])                     #17
              040c c21b  st   [$1b]       2345  st([vLR+1])                     #18
              040d 1400  ld   $00,y       2346  ld(0,Y)                         #19
              040e 0500  ld   [x]         2347  ld([X])                         #20
              040f de00  st   [y,x++]     2348  st([Y,Xpp])                     #21
              0410 a002  suba $02         2349  suba(2)                         #22 Because NEXT will add 2
              0411 c216  st   [$16]       2350  st([vPC])                       #23
              0412 0500  ld   [x]         2351  ld([X])                         #24
              0413 c217  st   [$17]       2352  st([vPC+1])                     #25
              0414 1403  ld   $03,y       2353  ld(hi('NEXTY'),Y)               #26
              0415 e000  jmp  y,$00       2354  jmp(Y,'NEXTY')                  #27
              0416 00f1  ld   $f1         2355  ld(-30/2)                       #28
                                          2356
                                          2357  # DEF implementation
                                          2358  label('def#13')
def#13:       0417 c21d  st   [$1d]       2359  st([vTmp])                      #13
              0418 0116  ld   [$16]       2360  ld([vPC])                       #14
              0419 8002  adda $02         2361  adda(2)                         #15
              041a c218  st   [$18]       2362  st([vAC])                       #16
              041b 0117  ld   [$17]       2363  ld([vPC+1])                     #17
              041c c219  st   [$19]       2364  st([vAC+1])                     #18
              041d 011d  ld   [$1d]       2365  ld([vTmp])                      #19
              041e c216  st   [$16]       2366  st([vPC])                       #20
              041f 1403  ld   $03,y       2367  ld(hi('REENTER'),Y)             #21
              0420 e0cb  jmp  y,$cb       2368  jmp(Y,'REENTER')                #22
              0421 00f3  ld   $f3         2369  ld(-26/2)                       #23
                                          2370
                                          2371  # ANDI implementation
                                          2372  label('andi#13')
andi#13:      0422 c218  st   [$18]       2373  st([vAC])                       #13
              0423 0000  ld   $00         2374  ld(0)                           #14 Clear high byte
              0424 c219  st   [$19]       2375  st([vAC+1])                     #15
              0425 1403  ld   $03,y       2376  ld(hi('NEXTY'),Y)               #16
              0426 e000  jmp  y,$00       2377  jmp(Y,'NEXTY')                  #17
              0427 00f6  ld   $f6         2378  ld(-20/2)                       #18
                                          2379
                                          2380  # LSLW implementation
                                          2381  label('lslw#13')
lslw#13:      0428 3080  anda $80,x       2382  anda(128,X)                     #13
              0429 8118  adda [$18]       2383  adda([vAC])                     #14
              042a c218  st   [$18]       2384  st([vAC])                       #15
              042b 0500  ld   [x]         2385  ld([X])                         #16
              042c 8119  adda [$19]       2386  adda([vAC+1])                   #17
              042d 8119  adda [$19]       2387  adda([vAC+1])                   #18
              042e c219  st   [$19]       2388  st([vAC+1])                     #19
              042f 0116  ld   [$16]       2389  ld([vPC])                       #20
              0430 a001  suba $01         2390  suba(1)                         #21
              0431 1403  ld   $03,y       2391  ld(hi('REENTER_28'),Y)          #22
              0432 e0ca  jmp  y,$ca       2392  jmp(Y,'REENTER_28')             #23
              0433 c216  st   [$16]       2393  st([vPC])                       #24
                                          2394
                                          2395  # STLW implementation
                                          2396  label('stlw#13')
stlw#13:      0434 1504  ld   [$04],y     2397  ld([vSPH],Y)                    #13
              0435 911c  adda [$1c],x     2398  adda([vSP],X)                   #14
              0436 0118  ld   [$18]       2399  ld([vAC])                       #15
              0437 de00  st   [y,x++]     2400  st([Y,Xpp])                     #16
              0438 0119  ld   [$19]       2401  ld([vAC+1])                     #17
              0439 ce00  st   [y,x]       2402  st([Y,X])                       #18
              043a 1403  ld   $03,y       2403  ld(hi('REENTER'),Y)             #19
              043b e0cb  jmp  y,$cb       2404  jmp(Y,'REENTER')                #20
              043c 00f4  ld   $f4         2405  ld(-24/2)                       #21
                                          2406
                                          2407  # LDLW implementation
                                          2408  label('ldlw#13')
ldlw#13:      043d 1504  ld   [$04],y     2409  ld([vSPH],Y)                    #13
              043e 911c  adda [$1c],x     2410  adda([vSP],X)                   #14
              043f 0d00  ld   [y,x]       2411  ld([Y,X])                       #15
              0440 de00  st   [y,x++]     2412  st([Y,Xpp])                     #16
              0441 c218  st   [$18]       2413  st([vAC])                       #17
              0442 0d00  ld   [y,x]       2414  ld([Y,X])                       #18
              0443 c219  st   [$19]       2415  st([vAC+1])                     #19
              0444 1403  ld   $03,y       2416  ld(hi('NEXTY'),Y)               #20
              0445 e000  jmp  y,$00       2417  jmp(Y,'NEXTY')                  #21
              0446 00f4  ld   $f4         2418  ld(-24/2)                       #22
                                          2419
                                          2420  # POKE implementation
                                          2421  label('poke#13')
poke#13:      0447 9001  adda $01,x       2422  adda(1,X)                       #13
              0448 0500  ld   [x]         2423  ld([X])                         #14
              0449 1600  ld   ac,y        2424  ld(AC,Y)                        #15
              044a 111d  ld   [$1d],x     2425  ld([vTmp],X)                    #16
              044b 0500  ld   [x]         2426  ld([X])                         #17
              044c 1200  ld   ac,x        2427  ld(AC,X)                        #18
              044d 0118  ld   [$18]       2428  ld([vAC])                       #19
              044e ce00  st   [y,x]       2429  st([Y,X])                       #20
              044f 1403  ld   $03,y       2430  ld(hi('REENTER'),Y)             #21
              0450 e0cb  jmp  y,$cb       2431  jmp(Y,'REENTER')                #22
              0451 00f3  ld   $f3         2432  ld(-26/2)                       #23
                                          2433
                                          2434  # PEEK implementation
                                          2435  label('peek#13')
peek#13:      0452 1118  ld   [$18],x     2436  ld([vAC],X)                     #13
              0453 1519  ld   [$19],y     2437  ld([vAC+1],Y)                   #14
              0454 0d00  ld   [y,x]       2438  ld([Y,X])                       #15
              0455 c218  st   [$18]       2439  st([vAC])                       #16
              0456 0000  ld   $00         2440  ld(0)                           #17
              0457 c219  st   [$19]       2441  st([vAC+1])                     #18
              0458 0116  ld   [$16]       2442  ld([vPC])                       #19
              0459 a001  suba $01         2443  suba(1)                         #20
              045a c216  st   [$16]       2444  st([vPC])                       #21
              045b 1403  ld   $03,y       2445  ld(hi('NEXTY'),Y)               #22
              045c e000  jmp  y,$00       2446  jmp(Y,'NEXTY')                  #23
              045d 00f3  ld   $f3         2447  ld(-26/2)                       #24
                                          2448
                                          2449  # DOKE implementation
                                          2450  label('doke#13')
doke#13:      045e 9001  adda $01,x       2451  adda(1,X)                       #13
              045f 0500  ld   [x]         2452  ld([X])                         #14
              0460 1600  ld   ac,y        2453  ld(AC,Y)                        #15
              0461 111d  ld   [$1d],x     2454  ld([vTmp],X)                    #16
              0462 0500  ld   [x]         2455  ld([X])                         #17
              0463 1200  ld   ac,x        2456  ld(AC,X)                        #18
              0464 0118  ld   [$18]       2457  ld([vAC])                       #19
              0465 de00  st   [y,x++]     2458  st([Y,Xpp])                     #20
              0466 0119  ld   [$19]       2459  ld([vAC+1])                     #21
              0467 ce00  st   [y,x]       2460  st([Y,X])                       #22 Incompatible with REENTER_28
              0468 1403  ld   $03,y       2461  ld(hi('REENTER'),Y)             #23
              0469 e0cb  jmp  y,$cb       2462  jmp(Y,'REENTER')                #24
              046a 00f2  ld   $f2         2463  ld(-28/2)                       #25
                                          2464
                                          2465  # DEEK implementation
                                          2466  label('deek#13')
deek#13:      046b 0116  ld   [$16]       2467  ld([vPC])                       #13
              046c a001  suba $01         2468  suba(1)                         #14
              046d c216  st   [$16]       2469  st([vPC])                       #15
              046e 1118  ld   [$18],x     2470  ld([vAC],X)                     #16
              046f 1519  ld   [$19],y     2471  ld([vAC+1],Y)                   #17
              0470 0d00  ld   [y,x]       2472  ld([Y,X])                       #18
              0471 de00  st   [y,x++]     2473  st([Y,Xpp])                     #19 Just X++
              0472 c218  st   [$18]       2474  st([vAC])                       #20
              0473 0d00  ld   [y,x]       2475  ld([Y,X])                       #21
              0474 1403  ld   $03,y       2476  ld(hi('REENTER_28'),Y)          #22
              0475 e0ca  jmp  y,$ca       2477  jmp(Y,'REENTER_28')             #23
              0476 c219  st   [$19]       2478  st([vAC+1])                     #24
                                          2479
                                          2480  # ANDW implementation
                                          2481  label('andw#13')
andw#13:      0477 1200  ld   ac,x        2482  ld(AC,X)                        #13
              0478 1400  ld   $00,y       2483  ld(0,Y)                         #14
              0479 0500  ld   [x]         2484  ld([X])                         #15
              047a de00  st   [y,x++]     2485  st([Y,Xpp])                     #16
              047b 2118  anda [$18]       2486  anda([vAC])                     #17
              047c c218  st   [$18]       2487  st([vAC])                       #18
              047d 0500  ld   [x]         2488  ld([X])                         #19
              047e 2119  anda [$19]       2489  anda([vAC+1])                   #20
              047f c219  st   [$19]       2490  st([vAC+1])                     #21
              0480 1403  ld   $03,y       2491  ld(hi('NEXTY'),Y)               #22
              0481 e000  jmp  y,$00       2492  jmp(Y,'NEXTY')                  #23
              0482 00f3  ld   $f3         2493  ld(-26/2)                       #24
                                          2494
                                          2495  # ORW implementation
                                          2496  label('orw#13')
orw#13:       0483 1200  ld   ac,x        2497  ld(AC,X)                        #13
              0484 1400  ld   $00,y       2498  ld(0,Y)                         #14
              0485 0500  ld   [x]         2499  ld([X])                         #15
              0486 de00  st   [y,x++]     2500  st([Y,Xpp])                     #16
              0487 4118  ora  [$18]       2501  ora([vAC])                      #17
              0488 c218  st   [$18]       2502  st([vAC])                       #18
              0489 0500  ld   [x]         2503  ld([X])                         #19
              048a 4119  ora  [$19]       2504  ora([vAC+1])                    #20
              048b c219  st   [$19]       2505  st([vAC+1])                     #21
              048c 1403  ld   $03,y       2506  ld(hi('NEXTY'),Y)               #22
              048d e000  jmp  y,$00       2507  jmp(Y,'NEXTY')                  #23
              048e 00f3  ld   $f3         2508  ld(-26/2)                       #24
                                          2509
                                          2510
              048f 0200  nop              2511  fillers(until=0xa7)
              0490 0200  nop
              0491 0200  nop
              * 24 times
                                          2512
                                          2513  # pc = 0x04a7
                                          2514  #-----------------------------------------------------------------------
                                          2515  #
                                          2516  #  vCPU extension functions (for acceleration and compaction) follow below.
                                          2517  #
                                          2518  #  The naming convention is: SYS_<CamelCase>[_v<V>]_<N>
                                          2519  #
                                          2520  #  With <N> the maximum number of cycles the function will run
                                          2521  #  (counted from NEXT to NEXT). This is the same number that must
                                          2522  #  be passed to the 'SYS' vCPU instruction as operand, and it will
                                          2523  #  appear in the GCL code upon use.
                                          2524  #
                                          2525  #  If a SYS extension got introduced after ROM v1, the version number of
                                          2526  #  introduction is included in the name. This helps the programmer to be
                                          2527  #  reminded to verify the acutal ROM version and fail gracefully on older
                                          2528  #  ROMs than required. See also Docs/GT1-files.txt on using [romType].
                                          2529  #
                                          2530  #-----------------------------------------------------------------------
                                          2531
                                          2532  #-----------------------------------------------------------------------
                                          2533  # Extension SYS_Random_34: Update entropy and copy to vAC
                                          2534  #-----------------------------------------------------------------------
                                          2535  #
                                          2536  # This same algorithm runs automatically once per vertical blank.
                                          2537  # Use this function to get numbers at a higher rate.
                                          2538  #
                                          2539  # Variables:
                                          2540  #       vAC
                                          2541
                                          2542  label('SYS_Random_34')          # leave name as 34 to remain compatible with previous ROM's
SYS_Random_34:
              04a7 010e  ld   [$0e]       2543  ld([frameCount])                #15
              04a8 6107  xora [$07]       2544  xora([entropy+1])               #16
              04a9 610f  xora [$0f]       2545  xora([serialRaw])               #17
              04aa 8106  adda [$06]       2546  adda([entropy+0])               #18
              04ab c206  st   [$06]       2547  st([entropy+0])                 #19
              04ac c218  st   [$18]       2548  st([vAC+0])                     #20
              04ad 8116  adda [$16]       2549  adda([vPC])                     #21
              04ae e8b1  blt  $04b1       2550  bmi(pc()+3)                     #22
              04af fcb2  bra  $04b2       2551  bra(pc()+3)                     #23
              04b0 6053  xora $53         2552  xora(64+16+2+1)                 #24
              04b1 606c  xora $6c         2553  xora(64+32+8+4)                 #24 (!)
              04b2 8107  adda [$07]       2554  adda([entropy+1])               #25
              04b3 c207  st   [$07]       2555  st([entropy+1])                 #26
              04b4 c219  st   [$19]       2556  st([vAC+1])                     #27
              04b5 1403  ld   $03,y       2557  ld(hi('NEXTY'),Y)               #28
              04b6 e000  jmp  y,$00       2558  jmp(Y,'NEXTY')                  #29
              04b7 00f0  ld   $f0         2559  ld(-32/2)                       #30
                                          2560
              04b8 0200  nop              2561  nop()                           # padding required to remain compatible with previous ROM's
                                          2562  label('SYS_LSRW7_30')
SYS_LSRW7_30: 04b9 0118  ld   [$18]       2563  ld([vAC])                       #15
              04ba 3080  anda $80,x       2564  anda(128,X)                     #16
              04bb 0119  ld   [$19]       2565  ld([vAC+1])                     #17
              04bc 8200  adda ac          2566  adda(AC)                        #18
              04bd 4500  ora  [x]         2567  ora([X])                        #19
              04be c218  st   [$18]       2568  st([vAC])                       #20
              04bf 0119  ld   [$19]       2569  ld([vAC+1])                     #21
              04c0 3080  anda $80,x       2570  anda(128,X)                     #22
              04c1 0500  ld   [x]         2571  ld([X])                         #23
              04c2 c219  st   [$19]       2572  st([vAC+1])                     #24
              04c3 1403  ld   $03,y       2573  ld(hi('REENTER'),Y)             #25
              04c4 e0cb  jmp  y,$cb       2574  jmp(Y,'REENTER')                #26
              04c5 00f1  ld   $f1         2575  ld(-30/2)                       #27
                                          2576
                                          2577  label('SYS_LSRW8_24')
SYS_LSRW8_24: 04c6 0119  ld   [$19]       2578  ld([vAC+1])                     #15
              04c7 c218  st   [$18]       2579  st([vAC])                       #16
              04c8 0000  ld   $00         2580  ld(0)                           #17
              04c9 c219  st   [$19]       2581  st([vAC+1])                     #18
              04ca 1403  ld   $03,y       2582  ld(hi('REENTER'),Y)             #19
              04cb e0cb  jmp  y,$cb       2583  jmp(Y,'REENTER')                #20
              04cc 00f4  ld   $f4         2584  ld(-24/2)                       #21
                                          2585
                                          2586  label('SYS_LSLW8_24')
SYS_LSLW8_24: 04cd 0118  ld   [$18]       2587  ld([vAC])                       #15
              04ce c219  st   [$19]       2588  st([vAC+1])                     #16
              04cf 0000  ld   $00         2589  ld(0)                           #17
              04d0 c218  st   [$18]       2590  st([vAC])                       #18
              04d1 1403  ld   $03,y       2591  ld(hi('REENTER'),Y)             #19
              04d2 e0cb  jmp  y,$cb       2592  jmp(Y,'REENTER')                #20
              04d3 00f4  ld   $f4         2593  ld(-24/2)                       #21
                                          2594
                                          2595  #-----------------------------------------------------------------------
                                          2596  # Extension SYS_Draw4_30
                                          2597  #-----------------------------------------------------------------------
                                          2598  #
                                          2599  # Draw 4 pixels on screen, horizontally next to each other
                                          2600  #
                                          2601  # Variables:
                                          2602  #       sysArgs[0:3]    Pixels (in)
                                          2603  #       sysArgs[4:5]    Position on screen (in)
                                          2604
                                          2605  label('SYS_Draw4_30')
SYS_Draw4_30: 04d4 1128  ld   [$28],x     2606  ld([sysArgs+4],X)               #15
              04d5 1529  ld   [$29],y     2607  ld([sysArgs+5],Y)               #16
              04d6 0124  ld   [$24]       2608  ld([sysArgs+0])                 #17
              04d7 de00  st   [y,x++]     2609  st([Y,Xpp])                     #18
              04d8 0125  ld   [$25]       2610  ld([sysArgs+1])                 #19
              04d9 de00  st   [y,x++]     2611  st([Y,Xpp])                     #20
              04da 0126  ld   [$26]       2612  ld([sysArgs+2])                 #21
              04db de00  st   [y,x++]     2613  st([Y,Xpp])                     #22
              04dc 0127  ld   [$27]       2614  ld([sysArgs+3])                 #23
              04dd de00  st   [y,x++]     2615  st([Y,Xpp])                     #24
              04de 1403  ld   $03,y       2616  ld(hi('REENTER'),Y)             #25
              04df e0cb  jmp  y,$cb       2617  jmp(Y,'REENTER')                #26
              04e0 00f1  ld   $f1         2618  ld(-30/2)                       #27
                                          2619
                                          2620  #-----------------------------------------------------------------------
                                          2621  # Extension SYS_VDrawBits_134:
                                          2622  #-----------------------------------------------------------------------
                                          2623  #
                                          2624  # Draw slice of a character, 8 pixels vertical
                                          2625  #
                                          2626  # Variables:
                                          2627  #       sysArgs[0]      Color 0 "background" (in)
                                          2628  #       sysArgs[1]      Color 1 "pen" (in)
                                          2629  #       sysArgs[2]      8 bits, highest bit first (in, changed)
                                          2630  #       sysArgs[4:5]    Position on screen (in)
                                          2631
                                          2632  label('SYS_VDrawBits_134')
SYS_VDrawBits_134:
              04e1 1412  ld   $12,y       2633  ld(hi('sys_VDrawBits'),Y)       #15
              04e2 e099  jmp  y,$99       2634  jmp(Y,'sys_VDrawBits')          #16
              04e3 1128  ld   [$28],x     2635  ld([sysArgs+4],X)               #17
                                          2636
                                          2637  #-----------------------------------------------------------------------
                                          2638  #
                                          2639  # Interrupt handler:
                                          2640  #       STW  $xx        -> optionally store vCpuSelect
                                          2641  #       ... IRQ payload ...
                                          2642  # either:
                                          2643  #       LDWI $400
                                          2644  #       LUP  0          -> vRTI and don't switch interpreter (immediate resume)
                                          2645  # or:
                                          2646  #       LDWI $400
                                          2647  #       LUP  $xx        -> vRTI and switch interpreter type as stored in [$xx]
              04e4 0200  nop              2648  fillers(until=251-13)
              04e5 0200  nop
              04e6 0200  nop
              * 10 times
                                          2649  label('vRTI#15')
vRTI#15:      04ee 0130  ld   [$30]       2650  ld([vIrqSave+0])                #15 Continue with vCPU in the same timeslice (faster)
              04ef c216  st   [$16]       2651  st([vPC])                       #16
              04f0 0131  ld   [$31]       2652  ld([vIrqSave+1])                #17
              04f1 c217  st   [$17]       2653  st([vPC+1])                     #18
              04f2 0132  ld   [$32]       2654  ld([vIrqSave+2])                #19
              04f3 c218  st   [$18]       2655  st([vAC])                       #20
              04f4 0133  ld   [$33]       2656  ld([vIrqSave+3])                #21
              04f5 c219  st   [$19]       2657  st([vAC+1])                     #22
              04f6 0134  ld   [$34]       2658  ld([vIrqSave+4])                #23 Restore vCpuSelect for PREFIX
              04f7 c202  st   [$02]       2659  st([vCpuSelect])                #24
              04f8 9401  adda $01,y       2660  adda(1,Y)                       #25 Jump to correct PREFIX page, (or page3 by default)
              04f9 e0cb  jmp  y,$cb       2661  jmp(Y,'REENTER')                #26
              04fa 00f1  ld   $f1         2662  ld(-30/2)                       #27
                                          2663  # vRTI entry point
                                          2664  assert(pc()&255 == 251)         # The landing offset 251 for LUP trampoline is fixed
              04fb f0ee  beq  vRTI#15     2665  beq('vRTI#15')                  #13 vRTI sequence
              04fc 9001  adda $01,x       2666  adda(1,X)                       #14
              04fd 1412  ld   $12,y       2667  ld(hi('vRTI#18'),Y)             #15 Switch and wait for end of timeslice (slower)
              04fe e022  jmp  y,$22       2668  jmp(Y,'vRTI#18')                #16
              04ff c21d  st   [$1d]       2669  st([vTmp])                      #17
                                          2670
                                          2671  #-----------------------------------------------------------------------
                                          2672  #
                                          2673  #  $0500 ROM page 5-6: Shift table and code
                                          2674  #
                                          2675  #-----------------------------------------------------------------------
                                          2676
                                          2677  align(0x100, size=0x200)
                                          2678
                                          2679  # Lookup table for i>>n, with n in 1..6
                                          2680  # Indexing ix = i & ~b | (b-1), where b = 1<<(n-1)
                                          2681  #       ...
                                          2682  #       ld   <.ret
                                          2683  #       st   [vTmp]
                                          2684  #       ld   >shiftTable,y
                                          2685  #       <calculate ix>
                                          2686  #       jmp  y,ac
                                          2687  #       bra  $ff
                                          2688  # .ret: ...
                                          2689  #
                                          2690  # i >> 7 can be always be done with RAM: [i&128]
                                          2691  #       ...
                                          2692  #       anda $80,x
                                          2693  #       ld   [x]
                                          2694  #       ...
                                          2695
                                          2696  label('shiftTable')
                                          2697  shiftTable = pc()
                                          2698
                                          2699  for ix in range(255):
                                          2700    for n in range(1,7): # Find first zero
                                          2701      if ~ix & (1 << (n-1)):
                                          2702        break
                                          2703    pattern = ['x' if i<n else '1' if ix&(1<<i) else '0' for i in range(8)]
                                          2704    ld(ix>>n); C('0b%s >> %d' % (''.join(reversed(pattern)), n))
shiftTable:   0500 0000  ld   $00         ;0b0000000x >> 1
              0501 0000  ld   $00         ;0b000000xx >> 2
              0502 0001  ld   $01         ;0b0000001x >> 1
              0503 0000  ld   $00         ;0b00000xxx >> 3
              0504 0002  ld   $02         ;0b0000010x >> 1
              0505 0001  ld   $01         ;0b000001xx >> 2
              0506 0003  ld   $03         ;0b0000011x >> 1
              0507 0000  ld   $00         ;0b0000xxxx >> 4
              0508 0004  ld   $04         ;0b0000100x >> 1
              0509 0002  ld   $02         ;0b000010xx >> 2
              050a 0005  ld   $05         ;0b0000101x >> 1
              050b 0001  ld   $01         ;0b00001xxx >> 3
              050c 0006  ld   $06         ;0b0000110x >> 1
              050d 0003  ld   $03         ;0b000011xx >> 2
              050e 0007  ld   $07         ;0b0000111x >> 1
              050f 0000  ld   $00         ;0b000xxxxx >> 5
              0510 0008  ld   $08         ;0b0001000x >> 1
              0511 0004  ld   $04         ;0b000100xx >> 2
              0512 0009  ld   $09         ;0b0001001x >> 1
              0513 0002  ld   $02         ;0b00010xxx >> 3
              0514 000a  ld   $0a         ;0b0001010x >> 1
              0515 0005  ld   $05         ;0b000101xx >> 2
              0516 000b  ld   $0b         ;0b0001011x >> 1
              0517 0001  ld   $01         ;0b0001xxxx >> 4
              0518 000c  ld   $0c         ;0b0001100x >> 1
              0519 0006  ld   $06         ;0b000110xx >> 2
              051a 000d  ld   $0d         ;0b0001101x >> 1
              051b 0003  ld   $03         ;0b00011xxx >> 3
              051c 000e  ld   $0e         ;0b0001110x >> 1
              051d 0007  ld   $07         ;0b000111xx >> 2
              051e 000f  ld   $0f         ;0b0001111x >> 1
              051f 0000  ld   $00         ;0b00xxxxxx >> 6
              0520 0010  ld   $10         ;0b0010000x >> 1
              0521 0008  ld   $08         ;0b001000xx >> 2
              0522 0011  ld   $11         ;0b0010001x >> 1
              0523 0004  ld   $04         ;0b00100xxx >> 3
              0524 0012  ld   $12         ;0b0010010x >> 1
              0525 0009  ld   $09         ;0b001001xx >> 2
              0526 0013  ld   $13         ;0b0010011x >> 1
              0527 0002  ld   $02         ;0b0010xxxx >> 4
              0528 0014  ld   $14         ;0b0010100x >> 1
              0529 000a  ld   $0a         ;0b001010xx >> 2
              052a 0015  ld   $15         ;0b0010101x >> 1
              052b 0005  ld   $05         ;0b00101xxx >> 3
              052c 0016  ld   $16         ;0b0010110x >> 1
              052d 000b  ld   $0b         ;0b001011xx >> 2
              052e 0017  ld   $17         ;0b0010111x >> 1
              052f 0001  ld   $01         ;0b001xxxxx >> 5
              0530 0018  ld   $18         ;0b0011000x >> 1
              0531 000c  ld   $0c         ;0b001100xx >> 2
              0532 0019  ld   $19         ;0b0011001x >> 1
              0533 0006  ld   $06         ;0b00110xxx >> 3
              0534 001a  ld   $1a         ;0b0011010x >> 1
              0535 000d  ld   $0d         ;0b001101xx >> 2
              0536 001b  ld   $1b         ;0b0011011x >> 1
              0537 0003  ld   $03         ;0b0011xxxx >> 4
              0538 001c  ld   $1c         ;0b0011100x >> 1
              0539 000e  ld   $0e         ;0b001110xx >> 2
              053a 001d  ld   $1d         ;0b0011101x >> 1
              053b 0007  ld   $07         ;0b00111xxx >> 3
              053c 001e  ld   $1e         ;0b0011110x >> 1
              053d 000f  ld   $0f         ;0b001111xx >> 2
              053e 001f  ld   $1f         ;0b0011111x >> 1
              053f 0000  ld   $00         ;0b00xxxxxx >> 6
              0540 0020  ld   $20         ;0b0100000x >> 1
              0541 0010  ld   $10         ;0b010000xx >> 2
              0542 0021  ld   $21         ;0b0100001x >> 1
              0543 0008  ld   $08         ;0b01000xxx >> 3
              0544 0022  ld   $22         ;0b0100010x >> 1
              0545 0011  ld   $11         ;0b010001xx >> 2
              0546 0023  ld   $23         ;0b0100011x >> 1
              0547 0004  ld   $04         ;0b0100xxxx >> 4
              0548 0024  ld   $24         ;0b0100100x >> 1
              0549 0012  ld   $12         ;0b010010xx >> 2
              054a 0025  ld   $25         ;0b0100101x >> 1
              054b 0009  ld   $09         ;0b01001xxx >> 3
              054c 0026  ld   $26         ;0b0100110x >> 1
              054d 0013  ld   $13         ;0b010011xx >> 2
              054e 0027  ld   $27         ;0b0100111x >> 1
              054f 0002  ld   $02         ;0b010xxxxx >> 5
              0550 0028  ld   $28         ;0b0101000x >> 1
              0551 0014  ld   $14         ;0b010100xx >> 2
              0552 0029  ld   $29         ;0b0101001x >> 1
              0553 000a  ld   $0a         ;0b01010xxx >> 3
              0554 002a  ld   $2a         ;0b0101010x >> 1
              0555 0015  ld   $15         ;0b010101xx >> 2
              0556 002b  ld   $2b         ;0b0101011x >> 1
              0557 0005  ld   $05         ;0b0101xxxx >> 4
              0558 002c  ld   $2c         ;0b0101100x >> 1
              0559 0016  ld   $16         ;0b010110xx >> 2
              055a 002d  ld   $2d         ;0b0101101x >> 1
              055b 000b  ld   $0b         ;0b01011xxx >> 3
              055c 002e  ld   $2e         ;0b0101110x >> 1
              055d 0017  ld   $17         ;0b010111xx >> 2
              055e 002f  ld   $2f         ;0b0101111x >> 1
              055f 0001  ld   $01         ;0b01xxxxxx >> 6
              0560 0030  ld   $30         ;0b0110000x >> 1
              0561 0018  ld   $18         ;0b011000xx >> 2
              0562 0031  ld   $31         ;0b0110001x >> 1
              0563 000c  ld   $0c         ;0b01100xxx >> 3
              0564 0032  ld   $32         ;0b0110010x >> 1
              0565 0019  ld   $19         ;0b011001xx >> 2
              0566 0033  ld   $33         ;0b0110011x >> 1
              0567 0006  ld   $06         ;0b0110xxxx >> 4
              0568 0034  ld   $34         ;0b0110100x >> 1
              0569 001a  ld   $1a         ;0b011010xx >> 2
              056a 0035  ld   $35         ;0b0110101x >> 1
              056b 000d  ld   $0d         ;0b01101xxx >> 3
              056c 0036  ld   $36         ;0b0110110x >> 1
              056d 001b  ld   $1b         ;0b011011xx >> 2
              056e 0037  ld   $37         ;0b0110111x >> 1
              056f 0003  ld   $03         ;0b011xxxxx >> 5
              0570 0038  ld   $38         ;0b0111000x >> 1
              0571 001c  ld   $1c         ;0b011100xx >> 2
              0572 0039  ld   $39         ;0b0111001x >> 1
              0573 000e  ld   $0e         ;0b01110xxx >> 3
              0574 003a  ld   $3a         ;0b0111010x >> 1
              0575 001d  ld   $1d         ;0b011101xx >> 2
              0576 003b  ld   $3b         ;0b0111011x >> 1
              0577 0007  ld   $07         ;0b0111xxxx >> 4
              0578 003c  ld   $3c         ;0b0111100x >> 1
              0579 001e  ld   $1e         ;0b011110xx >> 2
              057a 003d  ld   $3d         ;0b0111101x >> 1
              057b 000f  ld   $0f         ;0b01111xxx >> 3
              057c 003e  ld   $3e         ;0b0111110x >> 1
              057d 001f  ld   $1f         ;0b011111xx >> 2
              057e 003f  ld   $3f         ;0b0111111x >> 1
              057f 0001  ld   $01         ;0b01xxxxxx >> 6
              0580 0040  ld   $40         ;0b1000000x >> 1
              0581 0020  ld   $20         ;0b100000xx >> 2
              0582 0041  ld   $41         ;0b1000001x >> 1
              0583 0010  ld   $10         ;0b10000xxx >> 3
              0584 0042  ld   $42         ;0b1000010x >> 1
              0585 0021  ld   $21         ;0b100001xx >> 2
              0586 0043  ld   $43         ;0b1000011x >> 1
              0587 0008  ld   $08         ;0b1000xxxx >> 4
              0588 0044  ld   $44         ;0b1000100x >> 1
              0589 0022  ld   $22         ;0b100010xx >> 2
              058a 0045  ld   $45         ;0b1000101x >> 1
              058b 0011  ld   $11         ;0b10001xxx >> 3
              058c 0046  ld   $46         ;0b1000110x >> 1
              058d 0023  ld   $23         ;0b100011xx >> 2
              058e 0047  ld   $47         ;0b1000111x >> 1
              058f 0004  ld   $04         ;0b100xxxxx >> 5
              0590 0048  ld   $48         ;0b1001000x >> 1
              0591 0024  ld   $24         ;0b100100xx >> 2
              0592 0049  ld   $49         ;0b1001001x >> 1
              0593 0012  ld   $12         ;0b10010xxx >> 3
              0594 004a  ld   $4a         ;0b1001010x >> 1
              0595 0025  ld   $25         ;0b100101xx >> 2
              0596 004b  ld   $4b         ;0b1001011x >> 1
              0597 0009  ld   $09         ;0b1001xxxx >> 4
              0598 004c  ld   $4c         ;0b1001100x >> 1
              0599 0026  ld   $26         ;0b100110xx >> 2
              059a 004d  ld   $4d         ;0b1001101x >> 1
              059b 0013  ld   $13         ;0b10011xxx >> 3
              059c 004e  ld   $4e         ;0b1001110x >> 1
              059d 0027  ld   $27         ;0b100111xx >> 2
              059e 004f  ld   $4f         ;0b1001111x >> 1
              059f 0002  ld   $02         ;0b10xxxxxx >> 6
              05a0 0050  ld   $50         ;0b1010000x >> 1
              05a1 0028  ld   $28         ;0b101000xx >> 2
              05a2 0051  ld   $51         ;0b1010001x >> 1
              05a3 0014  ld   $14         ;0b10100xxx >> 3
              05a4 0052  ld   $52         ;0b1010010x >> 1
              05a5 0029  ld   $29         ;0b101001xx >> 2
              05a6 0053  ld   $53         ;0b1010011x >> 1
              05a7 000a  ld   $0a         ;0b1010xxxx >> 4
              05a8 0054  ld   $54         ;0b1010100x >> 1
              05a9 002a  ld   $2a         ;0b101010xx >> 2
              05aa 0055  ld   $55         ;0b1010101x >> 1
              05ab 0015  ld   $15         ;0b10101xxx >> 3
              05ac 0056  ld   $56         ;0b1010110x >> 1
              05ad 002b  ld   $2b         ;0b101011xx >> 2
              05ae 0057  ld   $57         ;0b1010111x >> 1
              05af 0005  ld   $05         ;0b101xxxxx >> 5
              05b0 0058  ld   $58         ;0b1011000x >> 1
              05b1 002c  ld   $2c         ;0b101100xx >> 2
              05b2 0059  ld   $59         ;0b1011001x >> 1
              05b3 0016  ld   $16         ;0b10110xxx >> 3
              05b4 005a  ld   $5a         ;0b1011010x >> 1
              05b5 002d  ld   $2d         ;0b101101xx >> 2
              05b6 005b  ld   $5b         ;0b1011011x >> 1
              05b7 000b  ld   $0b         ;0b1011xxxx >> 4
              05b8 005c  ld   $5c         ;0b1011100x >> 1
              05b9 002e  ld   $2e         ;0b101110xx >> 2
              05ba 005d  ld   $5d         ;0b1011101x >> 1
              05bb 0017  ld   $17         ;0b10111xxx >> 3
              05bc 005e  ld   $5e         ;0b1011110x >> 1
              05bd 002f  ld   $2f         ;0b101111xx >> 2
              05be 005f  ld   $5f         ;0b1011111x >> 1
              05bf 0002  ld   $02         ;0b10xxxxxx >> 6
              05c0 0060  ld   $60         ;0b1100000x >> 1
              05c1 0030  ld   $30         ;0b110000xx >> 2
              05c2 0061  ld   $61         ;0b1100001x >> 1
              05c3 0018  ld   $18         ;0b11000xxx >> 3
              05c4 0062  ld   $62         ;0b1100010x >> 1
              05c5 0031  ld   $31         ;0b110001xx >> 2
              05c6 0063  ld   $63         ;0b1100011x >> 1
              05c7 000c  ld   $0c         ;0b1100xxxx >> 4
              05c8 0064  ld   $64         ;0b1100100x >> 1
              05c9 0032  ld   $32         ;0b110010xx >> 2
              05ca 0065  ld   $65         ;0b1100101x >> 1
              05cb 0019  ld   $19         ;0b11001xxx >> 3
              05cc 0066  ld   $66         ;0b1100110x >> 1
              05cd 0033  ld   $33         ;0b110011xx >> 2
              05ce 0067  ld   $67         ;0b1100111x >> 1
              05cf 0006  ld   $06         ;0b110xxxxx >> 5
              05d0 0068  ld   $68         ;0b1101000x >> 1
              05d1 0034  ld   $34         ;0b110100xx >> 2
              05d2 0069  ld   $69         ;0b1101001x >> 1
              05d3 001a  ld   $1a         ;0b11010xxx >> 3
              05d4 006a  ld   $6a         ;0b1101010x >> 1
              05d5 0035  ld   $35         ;0b110101xx >> 2
              05d6 006b  ld   $6b         ;0b1101011x >> 1
              05d7 000d  ld   $0d         ;0b1101xxxx >> 4
              05d8 006c  ld   $6c         ;0b1101100x >> 1
              05d9 0036  ld   $36         ;0b110110xx >> 2
              05da 006d  ld   $6d         ;0b1101101x >> 1
              05db 001b  ld   $1b         ;0b11011xxx >> 3
              05dc 006e  ld   $6e         ;0b1101110x >> 1
              05dd 0037  ld   $37         ;0b110111xx >> 2
              05de 006f  ld   $6f         ;0b1101111x >> 1
              05df 0003  ld   $03         ;0b11xxxxxx >> 6
              05e0 0070  ld   $70         ;0b1110000x >> 1
              05e1 0038  ld   $38         ;0b111000xx >> 2
              05e2 0071  ld   $71         ;0b1110001x >> 1
              05e3 001c  ld   $1c         ;0b11100xxx >> 3
              05e4 0072  ld   $72         ;0b1110010x >> 1
              05e5 0039  ld   $39         ;0b111001xx >> 2
              05e6 0073  ld   $73         ;0b1110011x >> 1
              05e7 000e  ld   $0e         ;0b1110xxxx >> 4
              05e8 0074  ld   $74         ;0b1110100x >> 1
              05e9 003a  ld   $3a         ;0b111010xx >> 2
              05ea 0075  ld   $75         ;0b1110101x >> 1
              05eb 001d  ld   $1d         ;0b11101xxx >> 3
              05ec 0076  ld   $76         ;0b1110110x >> 1
              05ed 003b  ld   $3b         ;0b111011xx >> 2
              05ee 0077  ld   $77         ;0b1110111x >> 1
              05ef 0007  ld   $07         ;0b111xxxxx >> 5
              05f0 0078  ld   $78         ;0b1111000x >> 1
              05f1 003c  ld   $3c         ;0b111100xx >> 2
              05f2 0079  ld   $79         ;0b1111001x >> 1
              05f3 001e  ld   $1e         ;0b11110xxx >> 3
              05f4 007a  ld   $7a         ;0b1111010x >> 1
              05f5 003d  ld   $3d         ;0b111101xx >> 2
              05f6 007b  ld   $7b         ;0b1111011x >> 1
              05f7 000f  ld   $0f         ;0b1111xxxx >> 4
              05f8 007c  ld   $7c         ;0b1111100x >> 1
              05f9 003e  ld   $3e         ;0b111110xx >> 2
              05fa 007d  ld   $7d         ;0b1111101x >> 1
              05fb 001f  ld   $1f         ;0b11111xxx >> 3
              05fc 007e  ld   $7e         ;0b1111110x >> 1
              05fd 003f  ld   $3f         ;0b111111xx >> 2
              05fe 007f  ld   $7f         ;0b1111111x >> 1
                                          2705
                                          2706  assert pc()&255 == 255
              05ff fd1d  bra  [$1d]       2707  bra([vTmp])                     # Jumps back into next page
                                          2708
                                          2709  label('SYS_LSRW1_48')
                                          2710  assert pc()&255 == 0            # First instruction on this page *must* be a nop
SYS_LSRW1_48: 0600 0200  nop              2711  nop()                           #15
              0601 1405  ld   $05,y       2712  ld(hi('shiftTable'),Y)          #16 Logical shift right 1 bit (X >> 1)
              0602 0008  ld   $08         2713  ld('.sysLsrw1a')                #17 Shift low byte
              0603 c21d  st   [$1d]       2714  st([vTmp])                      #18
              0604 0118  ld   [$18]       2715  ld([vAC])                       #19
              0605 20fe  anda $fe         2716  anda(0b11111110)                #20
              0606 e200  jmp  y,ac        2717  jmp(Y,AC)                       #21
              0607 fcff  bra  $ff         2718  bra(255)                        #22 bra shiftTable+255
                                          2719  label('.sysLsrw1a')
.sysLsrw1a:   0608 c218  st   [$18]       2720  st([vAC])                       #26
              0609 0119  ld   [$19]       2721  ld([vAC+1])                     #27 Transfer bit 8
              060a 2001  anda $01         2722  anda(1)                         #28
              060b 807f  adda $7f         2723  adda(127)                       #29
              060c 2080  anda $80         2724  anda(128)                       #30
              060d 4118  ora  [$18]       2725  ora([vAC])                      #31
              060e c218  st   [$18]       2726  st([vAC])                       #32
              060f 0015  ld   $15         2727  ld('.sysLsrw1b')                #33 Shift high byte
              0610 c21d  st   [$1d]       2728  st([vTmp])                      #34
              0611 0119  ld   [$19]       2729  ld([vAC+1])                     #35
              0612 20fe  anda $fe         2730  anda(0b11111110)                #36
              0613 e200  jmp  y,ac        2731  jmp(Y,AC)                       #37
              0614 fcff  bra  $ff         2732  bra(255)                        #38 bra shiftTable+255
                                          2733  label('.sysLsrw1b')
.sysLsrw1b:   0615 c219  st   [$19]       2734  st([vAC+1])                     #42
              0616 1403  ld   $03,y       2735  ld(hi('REENTER'),Y)             #43
              0617 e0cb  jmp  y,$cb       2736  jmp(Y,'REENTER')                #44
              0618 00e8  ld   $e8         2737  ld(-48/2)                       #45
                                          2738
                                          2739  label('SYS_LSRW2_52')
SYS_LSRW2_52: 0619 1405  ld   $05,y       2740  ld(hi('shiftTable'),Y)          #15 Logical shift right 2 bit (X >> 2)
              061a 0021  ld   $21         2741  ld('.sysLsrw2a')                #16 Shift low byte
              061b c21d  st   [$1d]       2742  st([vTmp])                      #17
              061c 0118  ld   [$18]       2743  ld([vAC])                       #18
              061d 20fc  anda $fc         2744  anda(0b11111100)                #19
              061e 4001  ora  $01         2745  ora( 0b00000001)                #20
              061f e200  jmp  y,ac        2746  jmp(Y,AC)                       #21
              0620 fcff  bra  $ff         2747  bra(255)                        #22 bra shiftTable+255
                                          2748  label('.sysLsrw2a')
.sysLsrw2a:   0621 c218  st   [$18]       2749  st([vAC])                       #26
              0622 0119  ld   [$19]       2750  ld([vAC+1])                     #27 Transfer bit 8:9
              0623 8200  adda ac          2751  adda(AC)                        #28
              0624 8200  adda ac          2752  adda(AC)                        #29
              0625 8200  adda ac          2753  adda(AC)                        #30
              0626 8200  adda ac          2754  adda(AC)                        #31
              0627 8200  adda ac          2755  adda(AC)                        #32
              0628 8200  adda ac          2756  adda(AC)                        #33
              0629 4118  ora  [$18]       2757  ora([vAC])                      #34
              062a c218  st   [$18]       2758  st([vAC])                       #35
              062b 0032  ld   $32         2759  ld('.sysLsrw2b')                #36 Shift high byte
              062c c21d  st   [$1d]       2760  st([vTmp])                      #37
              062d 0119  ld   [$19]       2761  ld([vAC+1])                     #38
              062e 20fc  anda $fc         2762  anda(0b11111100)                #39
              062f 4001  ora  $01         2763  ora( 0b00000001)                #40
              0630 e200  jmp  y,ac        2764  jmp(Y,AC)                       #41
              0631 fcff  bra  $ff         2765  bra(255)                        #42 bra shiftTable+255
                                          2766  label('.sysLsrw2b')
.sysLsrw2b:   0632 c219  st   [$19]       2767  st([vAC+1])                     #46
              0633 1403  ld   $03,y       2768  ld(hi('REENTER'),Y)             #47
              0634 e0cb  jmp  y,$cb       2769  jmp(Y,'REENTER')                #48
              0635 00e6  ld   $e6         2770  ld(-52/2)                       #49
                                          2771
                                          2772  label('SYS_LSRW3_52')
SYS_LSRW3_52: 0636 1405  ld   $05,y       2773  ld(hi('shiftTable'),Y)          #15 Logical shift right 3 bit (X >> 3)
              0637 003e  ld   $3e         2774  ld('.sysLsrw3a')                #16 Shift low byte
              0638 c21d  st   [$1d]       2775  st([vTmp])                      #17
              0639 0118  ld   [$18]       2776  ld([vAC])                       #18
              063a 20f8  anda $f8         2777  anda(0b11111000)                #19
              063b 4003  ora  $03         2778  ora( 0b00000011)                #20
              063c e200  jmp  y,ac        2779  jmp(Y,AC)                       #21
              063d fcff  bra  $ff         2780  bra(255)                        #22 bra shiftTable+255
                                          2781  label('.sysLsrw3a')
.sysLsrw3a:   063e c218  st   [$18]       2782  st([vAC])                       #26
              063f 0119  ld   [$19]       2783  ld([vAC+1])                     #27 Transfer bit 8:10
              0640 8200  adda ac          2784  adda(AC)                        #28
              0641 8200  adda ac          2785  adda(AC)                        #29
              0642 8200  adda ac          2786  adda(AC)                        #30
              0643 8200  adda ac          2787  adda(AC)                        #31
              0644 8200  adda ac          2788  adda(AC)                        #32
              0645 4118  ora  [$18]       2789  ora([vAC])                      #33
              0646 c218  st   [$18]       2790  st([vAC])                       #34
              0647 004e  ld   $4e         2791  ld('.sysLsrw3b')                #35 Shift high byte
              0648 c21d  st   [$1d]       2792  st([vTmp])                      #36
              0649 0119  ld   [$19]       2793  ld([vAC+1])                     #37
              064a 20f8  anda $f8         2794  anda(0b11111000)                #38
              064b 4003  ora  $03         2795  ora( 0b00000011)                #39
              064c e200  jmp  y,ac        2796  jmp(Y,AC)                       #40
              064d fcff  bra  $ff         2797  bra(255)                        #41 bra shiftTable+255
                                          2798  label('.sysLsrw3b')
.sysLsrw3b:   064e c219  st   [$19]       2799  st([vAC+1])                     #45
              064f 00e6  ld   $e6         2800  ld(-52/2)                       #46
              0650 1403  ld   $03,y       2801  ld(hi('REENTER'),Y)             #47
              0651 e0cb  jmp  y,$cb       2802  jmp(Y,'REENTER')                #48
                                          2803  #nop()                          #49
                                          2804
                                          2805  label('SYS_LSRW4_50')
SYS_LSRW4_50: 0652 1405  ld   $05,y       2806  ld(hi('shiftTable'),Y)          #15,49 Logical shift right 4 bit (X >> 4)
              0653 005a  ld   $5a         2807  ld('.sysLsrw4a')                #16 Shift low byte
              0654 c21d  st   [$1d]       2808  st([vTmp])                      #17
              0655 0118  ld   [$18]       2809  ld([vAC])                       #18
              0656 20f0  anda $f0         2810  anda(0b11110000)                #19
              0657 4007  ora  $07         2811  ora( 0b00000111)                #20
              0658 e200  jmp  y,ac        2812  jmp(Y,AC)                       #21
              0659 fcff  bra  $ff         2813  bra(255)                        #22 bra shiftTable+255
                                          2814  label('.sysLsrw4a')
.sysLsrw4a:   065a c218  st   [$18]       2815  st([vAC])                       #26
              065b 0119  ld   [$19]       2816  ld([vAC+1])                     #27 Transfer bit 8:11
              065c 8200  adda ac          2817  adda(AC)                        #28
              065d 8200  adda ac          2818  adda(AC)                        #29
              065e 8200  adda ac          2819  adda(AC)                        #30
              065f 8200  adda ac          2820  adda(AC)                        #31
              0660 4118  ora  [$18]       2821  ora([vAC])                      #32
              0661 c218  st   [$18]       2822  st([vAC])                       #33
              0662 0069  ld   $69         2823  ld('.sysLsrw4b')                #34 Shift high byte'
              0663 c21d  st   [$1d]       2824  st([vTmp])                      #35
              0664 0119  ld   [$19]       2825  ld([vAC+1])                     #36
              0665 20f0  anda $f0         2826  anda(0b11110000)                #37
              0666 4007  ora  $07         2827  ora( 0b00000111)                #38
              0667 e200  jmp  y,ac        2828  jmp(Y,AC)                       #39
              0668 fcff  bra  $ff         2829  bra(255)                        #40 bra shiftTable+255
                                          2830  label('.sysLsrw4b')
.sysLsrw4b:   0669 c219  st   [$19]       2831  st([vAC+1])                     #44
              066a 1403  ld   $03,y       2832  ld(hi('REENTER'),Y)             #45
              066b e0cb  jmp  y,$cb       2833  jmp(Y,'REENTER')                #46
              066c 00e7  ld   $e7         2834  ld(-50/2)                       #47
                                          2835
                                          2836  label('SYS_LSRW5_50')
SYS_LSRW5_50: 066d 1405  ld   $05,y       2837  ld(hi('shiftTable'),Y)          #15 Logical shift right 5 bit (X >> 5)
              066e 0075  ld   $75         2838  ld('.sysLsrw5a')                #16 Shift low byte
              066f c21d  st   [$1d]       2839  st([vTmp])                      #17
              0670 0118  ld   [$18]       2840  ld([vAC])                       #18
              0671 20e0  anda $e0         2841  anda(0b11100000)                #19
              0672 400f  ora  $0f         2842  ora( 0b00001111)                #20
              0673 e200  jmp  y,ac        2843  jmp(Y,AC)                       #21
              0674 fcff  bra  $ff         2844  bra(255)                        #22 bra shiftTable+255
                                          2845  label('.sysLsrw5a')
.sysLsrw5a:   0675 c218  st   [$18]       2846  st([vAC])                       #26
              0676 0119  ld   [$19]       2847  ld([vAC+1])                     #27 Transfer bit 8:13
              0677 8200  adda ac          2848  adda(AC)                        #28
              0678 8200  adda ac          2849  adda(AC)                        #29
              0679 8200  adda ac          2850  adda(AC)                        #30
              067a 4118  ora  [$18]       2851  ora([vAC])                      #31
              067b c218  st   [$18]       2852  st([vAC])                       #32
              067c 0083  ld   $83         2853  ld('.sysLsrw5b')                #33 Shift high byte
              067d c21d  st   [$1d]       2854  st([vTmp])                      #34
              067e 0119  ld   [$19]       2855  ld([vAC+1])                     #35
              067f 20e0  anda $e0         2856  anda(0b11100000)                #36
              0680 400f  ora  $0f         2857  ora( 0b00001111)                #37
              0681 e200  jmp  y,ac        2858  jmp(Y,AC)                       #38
              0682 fcff  bra  $ff         2859  bra(255)                        #39 bra shiftTable+255
                                          2860  label('.sysLsrw5b')
.sysLsrw5b:   0683 c219  st   [$19]       2861  st([vAC+1])                     #44
              0684 00e7  ld   $e7         2862  ld(-50/2)                       #45
              0685 1403  ld   $03,y       2863  ld(hi('REENTER'),Y)             #46
              0686 e0cb  jmp  y,$cb       2864  jmp(Y,'REENTER')                #47
                                          2865  #nop()                          #48
                                          2866
                                          2867  label('SYS_LSRW6_48')
SYS_LSRW6_48: 0687 1405  ld   $05,y       2868  ld(hi('shiftTable'),Y)          #15,44 Logical shift right 6 bit (X >> 6)
              0688 008f  ld   $8f         2869  ld('.sysLsrw6a')                #16 Shift low byte
              0689 c21d  st   [$1d]       2870  st([vTmp])                      #17
              068a 0118  ld   [$18]       2871  ld([vAC])                       #18
              068b 20c0  anda $c0         2872  anda(0b11000000)                #19
              068c 401f  ora  $1f         2873  ora( 0b00011111)                #20
              068d e200  jmp  y,ac        2874  jmp(Y,AC)                       #21
              068e fcff  bra  $ff         2875  bra(255)                        #22 bra shiftTable+255
                                          2876  label('.sysLsrw6a')
.sysLsrw6a:   068f c218  st   [$18]       2877  st([vAC])                       #26
              0690 0119  ld   [$19]       2878  ld([vAC+1])                     #27 Transfer bit 8:13
              0691 8200  adda ac          2879  adda(AC)                        #28
              0692 8200  adda ac          2880  adda(AC)                        #29
              0693 4118  ora  [$18]       2881  ora([vAC])                      #30
              0694 c218  st   [$18]       2882  st([vAC])                       #31
              0695 009c  ld   $9c         2883  ld('.sysLsrw6b')                #32 Shift high byte
              0696 c21d  st   [$1d]       2884  st([vTmp])                      #33
              0697 0119  ld   [$19]       2885  ld([vAC+1])                     #34
              0698 20c0  anda $c0         2886  anda(0b11000000)                #35
              0699 401f  ora  $1f         2887  ora( 0b00011111)                #36
              069a e200  jmp  y,ac        2888  jmp(Y,AC)                       #37
              069b fcff  bra  $ff         2889  bra(255)                        #38 bra shiftTable+255
                                          2890  label('.sysLsrw6b')
.sysLsrw6b:   069c c219  st   [$19]       2891  st([vAC+1])                     #42
              069d 1403  ld   $03,y       2892  ld(hi('REENTER'),Y)             #43
              069e e0cb  jmp  y,$cb       2893  jmp(Y,'REENTER')                #44
              069f 00e8  ld   $e8         2894  ld(-48/2)                       #45
                                          2895
                                          2896  label('SYS_LSLW4_46')
SYS_LSLW4_46: 06a0 1405  ld   $05,y       2897  ld(hi('shiftTable'),Y)          #15 Logical shift left 4 bit (X << 4)
              06a1 00ae  ld   $ae         2898  ld('.sysLsrl4')                 #16
              06a2 c21d  st   [$1d]       2899  st([vTmp])                      #17
              06a3 0119  ld   [$19]       2900  ld([vAC+1])                     #18
              06a4 8200  adda ac          2901  adda(AC)                        #19
              06a5 8200  adda ac          2902  adda(AC)                        #20
              06a6 8200  adda ac          2903  adda(AC)                        #21
              06a7 8200  adda ac          2904  adda(AC)                        #22
              06a8 c219  st   [$19]       2905  st([vAC+1])                     #23
              06a9 0118  ld   [$18]       2906  ld([vAC])                       #24
              06aa 20f0  anda $f0         2907  anda(0b11110000)                #25
              06ab 4007  ora  $07         2908  ora( 0b00000111)                #26
              06ac e200  jmp  y,ac        2909  jmp(Y,AC)                       #27
              06ad fcff  bra  $ff         2910  bra(255)                        #28 bra shiftTable+255
                                          2911  label('.sysLsrl4')
.sysLsrl4:    06ae 4119  ora  [$19]       2912  ora([vAC+1])                    #32
              06af c219  st   [$19]       2913  st([vAC+1])                     #33
              06b0 0118  ld   [$18]       2914  ld([vAC])                       #34
              06b1 8200  adda ac          2915  adda(AC)                        #35
              06b2 8200  adda ac          2916  adda(AC)                        #36
              06b3 8200  adda ac          2917  adda(AC)                        #37
              06b4 8200  adda ac          2918  adda(AC)                        #38
              06b5 c218  st   [$18]       2919  st([vAC])                       #39
              06b6 00e9  ld   $e9         2920  ld(-46/2)                       #40
              06b7 1403  ld   $03,y       2921  ld(hi('REENTER'),Y)             #41
              06b8 e0cb  jmp  y,$cb       2922  jmp(Y,'REENTER')                #42
                                          2923  #nop()                          #43
                                          2924
                                          2925  #-----------------------------------------------------------------------
                                          2926  #       v6502 right shift instruction
                                          2927  #-----------------------------------------------------------------------
                                          2928
                                          2929  label('v6502_lsr#30')
v6502_lsr#30: 06b9 1525  ld   [$25],y     2930  ld([v6502_ADH],Y)               #30 Result
              06ba ce00  st   [y,x]       2931  st([Y,X])                       #31
              06bb c228  st   [$28]       2932  st([v6502_Qz])                  #32 Z flag
              06bc c229  st   [$29]       2933  st([v6502_Qn])                  #33 N flag
              06bd 140e  ld   $0e,y       2934  ld(hi('v6502_next'),Y)          #34
              06be 00ed  ld   $ed         2935  ld(-38/2)                       #35
              06bf e020  jmp  y,$20       2936  jmp(Y,'v6502_next')             #36
                                          2937  #nop()                          #37 Overlap
                                          2938  #
                                          2939  label('v6502_ror#38')
v6502_ror#38: 06c0 1525  ld   [$25],y     2940  ld([v6502_ADH],Y)               #38,38 Result
              06c1 4119  ora  [$19]       2941  ora([v6502_BI])                 #39 Transfer bit 8
              06c2 ce00  st   [y,x]       2942  st([Y,X])                       #40
              06c3 c228  st   [$28]       2943  st([v6502_Qz])                  #41 Z flag
              06c4 c229  st   [$29]       2944  st([v6502_Qn])                  #42 N flag
              06c5 140e  ld   $0e,y       2945  ld(hi('v6502_next'),Y)          #43
              06c6 e020  jmp  y,$20       2946  jmp(Y,'v6502_next')             #44
              06c7 00e9  ld   $e9         2947  ld(-46/2)                       #45
                                          2948
                                          2949  #-----------------------------------------------------------------------
                                          2950  #       vCPU LSRB
                                          2951  #-----------------------------------------------------------------------
                                          2952
                                          2953  label('.lsrb#24')
.lsrb#24:     06c8 c600  st   [x]         2954  st([X])                         #24
              06c9 1403  ld   $03,y       2955  ld(hi('REENTER'),Y)             #25
              06ca e0cb  jmp  y,$cb       2956  jmp(Y,'REENTER')                #26
              06cb 00f1  ld   $f1         2957  ld(-30/2)                       #27
                                          2958
                                          2959  #-----------------------------------------------------------------------
                                          2960  #       vCPU LSRV
                                          2961  #-----------------------------------------------------------------------
                                          2962
                                          2963  label('.lsrv#27')
.lsrv#27:     06cc 142c  ld   $2c,y       2964  ld(hi('.lsrv#30'),Y)            #27
              06cd e053  jmp  y,$53       2965  jmp(Y,'.lsrv#30')               #28
              06ce c600  st   [x]         2966  st([X])                         #29 shifted byte low
                                          2967
                                          2968  label('.lsrv#51')
.lsrv#51:     06cf c600  st   [x]         2969  st([X])                         #51 shifted byte hi
              06d0 1403  ld   $03,y       2970  ld(hi('NEXTY'),Y)               #52
              06d1 e000  jmp  y,$00       2971  jmp(Y,'NEXTY')                  #53
              06d2 00e4  ld   $e4         2972  ld(-56/2)                       #54
                                          2973
                                          2974  #-----------------------------------------------------------------------
                                          2975  #       vCPU LSRVL
                                          2976  #-----------------------------------------------------------------------
                                          2977
                                          2978  label('.lsrvl#26')
.lsrvl#26:    06d3 142c  ld   $2c,y       2979  ld(hi('.lsrvl#29'),Y)           #26
              06d4 e074  jmp  y,$74       2980  jmp(Y,'.lsrvl#29')              #27
              06d5 c600  st   [x]         2981  st([X])                         #28 shifted byte 0
                                          2982
                                          2983  label('.lsrvl#54')
.lsrvl#54:    06d6 142c  ld   $2c,y       2984  ld(hi('.lsrvl#57'),Y)           #54
              06d7 e08a  jmp  y,$8a       2985  jmp(Y,'.lsrvl#57')              #55
              06d8 c600  st   [x]         2986  st([X])                         #56 shifted byte 1
                                          2987
                                          2988  label('.lsrvl#76')
.lsrvl#76:    06d9 142c  ld   $2c,y       2989  ld(hi('.lsrvl#79'),Y)           #76
              06da e09a  jmp  y,$9a       2990  jmp(Y,'.lsrvl#79')              #77
              06db c600  st   [x]         2991  st([X])                         #78 shifted byte 2
                                          2992
                                          2993  label('.lsrvl#98')
.lsrvl#98:    06dc c600  st   [x]         2994  st([X])                         #98 shifted byte 3
              06dd 1403  ld   $03,y       2995  ld(hi('REENTER'),Y)             #99
              06de e0cb  jmp  y,$cb       2996  jmp(Y,'REENTER')                #100
              06df 00cc  ld   $cc         2997  ld(-104/2)                      #101
                                          2998
                                          2999  #-----------------------------------------------------------------------
                                          3000  #       vCPU NROR (lb3361)
                                          3001  #-----------------------------------------------------------------------
                                          3002
                                          3003  label('nror#35')
nror#35:      06e0 4118  ora  [$18]       3004  ora([vAC])                      #35
              06e1 c600  st   [x]         3005  st([X])                         #36
              06e2 012b  ld   [$2b]       3006  ld([sysArgs+7])                 #37
              06e3 612a  xora [$2a]       3007  xora([sysArgs+6])               #38
              06e4 ece8  bne  nror#41     3008  bne('nror#41')                  #39
              06e5 1403  ld   $03,y       3009  ld(hi('NEXTY'),Y)               #40
              06e6 e000  jmp  y,$00       3010  jmp(Y,'NEXTY')                  #41
              06e7 00ea  ld   $ea         3011  ld(-44/2)                       #42
                                          3012  label('nror#41')
nror#41:      06e8 00f1  ld   $f1         3013  ld(-30/2)                       #41
              06e9 8115  adda [$15]       3014  adda([vTicks])                  #12=42-30
              06ea 1434  ld   $34,y       3015  ld(hi('nror#16'),Y)             #13=43-30
              06eb e037  jmp  y,$37       3016  jmp(Y,'nror#16')                #14=44-30
              06ec c215  st   [$15]       3017  st([vTicks])                    #15=45-30
                                          3018
                                          3019
                                          3020
                                          3021  #-----------------------------------------------------------------------
                                          3022  #
                                          3023  #  $0700 ROM page 7-8: Gigatron font data
                                          3024  #
                                          3025  #-----------------------------------------------------------------------
                                          3026
              06ed 0200  nop              3027  align(0x100, size=0x100)
              06ee 0200  nop
              06ef 0200  nop
              * 19 times
                                          3028
                                          3029  label('font32up')
                                          3030  for ch in range(32, 32+50):
                                          3031    comment = 'Char %s' % repr(chr(ch))
                                          3032    for byte in font.font[ch-32]:
                                          3033      ld(byte)
font32up:     0700 0000  ld   $00         ;Char ' '
              0701 0000  ld   $00
              0702 0000  ld   $00
              * 5 times
              0705 0000  ld   $00         ;Char '!'
              0706 0000  ld   $00
              0707 00fa  ld   $fa
              0708 0000  ld   $00
              0709 0000  ld   $00
              070a 00a0  ld   $a0         ;Char '"'
              070b 00c0  ld   $c0
              070c 0000  ld   $00
              070d 00a0  ld   $a0
              070e 00c0  ld   $c0
              070f 0028  ld   $28         ;Char '#'
              0710 00fe  ld   $fe
              0711 0028  ld   $28
              0712 00fe  ld   $fe
              0713 0028  ld   $28
              0714 0024  ld   $24         ;Char '$'
              0715 0054  ld   $54
              0716 00fe  ld   $fe
              0717 0054  ld   $54
              0718 0048  ld   $48
              0719 00c4  ld   $c4         ;Char '%'
              071a 00c8  ld   $c8
              071b 0010  ld   $10
              071c 0026  ld   $26
              071d 0046  ld   $46
              071e 006c  ld   $6c         ;Char '&'
              071f 0092  ld   $92
              0720 006a  ld   $6a
              0721 0004  ld   $04
              0722 000a  ld   $0a
              0723 0000  ld   $00         ;Char "'"
              0724 00a0  ld   $a0
              0725 00c0  ld   $c0
              0726 0000  ld   $00
              0727 0000  ld   $00
              0728 0000  ld   $00         ;Char '('
              0729 0038  ld   $38
              072a 0044  ld   $44
              072b 0082  ld   $82
              072c 0000  ld   $00
              072d 0000  ld   $00         ;Char ')'
              072e 0082  ld   $82
              072f 0044  ld   $44
              0730 0038  ld   $38
              0731 0000  ld   $00
              0732 0028  ld   $28         ;Char '*'
              0733 0010  ld   $10
              0734 007c  ld   $7c
              0735 0010  ld   $10
              0736 0028  ld   $28
              0737 0010  ld   $10         ;Char '+'
              0738 0010  ld   $10
              0739 007c  ld   $7c
              073a 0010  ld   $10
              073b 0010  ld   $10
              073c 0000  ld   $00         ;Char ','
              073d 0005  ld   $05
              073e 0006  ld   $06
              073f 0000  ld   $00
              0740 0000  ld   $00
              0741 0010  ld   $10         ;Char '-'
              0742 0010  ld   $10
              0743 0010  ld   $10
              * 5 times
              0746 0000  ld   $00         ;Char '.'
              0747 0002  ld   $02
              0748 0002  ld   $02
              0749 0000  ld   $00
              074a 0000  ld   $00
              074b 0000  ld   $00         ;Char '/'
              074c 0006  ld   $06
              074d 0018  ld   $18
              074e 0060  ld   $60
              074f 0000  ld   $00
              0750 007c  ld   $7c         ;Char '0'
              0751 008a  ld   $8a
              0752 0092  ld   $92
              0753 00a2  ld   $a2
              0754 007c  ld   $7c
              0755 0022  ld   $22         ;Char '1'
              0756 0042  ld   $42
              0757 00fe  ld   $fe
              0758 0002  ld   $02
              0759 0002  ld   $02
              075a 0046  ld   $46         ;Char '2'
              075b 008a  ld   $8a
              075c 0092  ld   $92
              075d 0092  ld   $92
              075e 0062  ld   $62
              075f 0044  ld   $44         ;Char '3'
              0760 0082  ld   $82
              0761 0092  ld   $92
              0762 0092  ld   $92
              0763 006c  ld   $6c
              0764 0018  ld   $18         ;Char '4'
              0765 0028  ld   $28
              0766 0048  ld   $48
              0767 00fe  ld   $fe
              0768 0008  ld   $08
              0769 00e4  ld   $e4         ;Char '5'
              076a 00a2  ld   $a2
              076b 00a2  ld   $a2
              076c 00a2  ld   $a2
              076d 009c  ld   $9c
              076e 003c  ld   $3c         ;Char '6'
              076f 0052  ld   $52
              0770 0092  ld   $92
              0771 0092  ld   $92
              0772 000c  ld   $0c
              0773 0080  ld   $80         ;Char '7'
              0774 008e  ld   $8e
              0775 0090  ld   $90
              0776 00a0  ld   $a0
              0777 00c0  ld   $c0
              0778 006c  ld   $6c         ;Char '8'
              0779 0092  ld   $92
              077a 0092  ld   $92
              077b 0092  ld   $92
              077c 006c  ld   $6c
              077d 0060  ld   $60         ;Char '9'
              077e 0092  ld   $92
              077f 0092  ld   $92
              0780 0094  ld   $94
              0781 0078  ld   $78
              0782 0000  ld   $00         ;Char ':'
              0783 0024  ld   $24
              0784 0024  ld   $24
              0785 0000  ld   $00
              0786 0000  ld   $00
              0787 0000  ld   $00         ;Char ';'
              0788 0025  ld   $25
              0789 0026  ld   $26
              078a 0000  ld   $00
              078b 0000  ld   $00
              078c 0010  ld   $10         ;Char '<'
              078d 0028  ld   $28
              078e 0044  ld   $44
              078f 0082  ld   $82
              0790 0000  ld   $00
              0791 0028  ld   $28         ;Char '='
              0792 0028  ld   $28
              0793 0028  ld   $28
              * 5 times
              0796 0000  ld   $00         ;Char '>'
              0797 0082  ld   $82
              0798 0044  ld   $44
              0799 0028  ld   $28
              079a 0010  ld   $10
              079b 0040  ld   $40         ;Char '?'
              079c 0080  ld   $80
              079d 008a  ld   $8a
              079e 0090  ld   $90
              079f 0060  ld   $60
              07a0 007c  ld   $7c         ;Char '@'
              07a1 0082  ld   $82
              07a2 00ba  ld   $ba
              07a3 00aa  ld   $aa
              07a4 0078  ld   $78
              07a5 003e  ld   $3e         ;Char 'A'
              07a6 0048  ld   $48
              07a7 0088  ld   $88
              07a8 0048  ld   $48
              07a9 003e  ld   $3e
              07aa 00fe  ld   $fe         ;Char 'B'
              07ab 0092  ld   $92
              07ac 0092  ld   $92
              07ad 0092  ld   $92
              07ae 006c  ld   $6c
              07af 007c  ld   $7c         ;Char 'C'
              07b0 0082  ld   $82
              07b1 0082  ld   $82
              07b2 0082  ld   $82
              07b3 0044  ld   $44
              07b4 00fe  ld   $fe         ;Char 'D'
              07b5 0082  ld   $82
              07b6 0082  ld   $82
              07b7 0044  ld   $44
              07b8 0038  ld   $38
              07b9 00fe  ld   $fe         ;Char 'E'
              07ba 0092  ld   $92
              07bb 0092  ld   $92
              07bc 0092  ld   $92
              07bd 0082  ld   $82
              07be 00fe  ld   $fe         ;Char 'F'
              07bf 0090  ld   $90
              07c0 0090  ld   $90
              07c1 0090  ld   $90
              07c2 0080  ld   $80
              07c3 007c  ld   $7c         ;Char 'G'
              07c4 0082  ld   $82
              07c5 0082  ld   $82
              07c6 0092  ld   $92
              07c7 005c  ld   $5c
              07c8 00fe  ld   $fe         ;Char 'H'
              07c9 0010  ld   $10
              07ca 0010  ld   $10
              07cb 0010  ld   $10
              07cc 00fe  ld   $fe
              07cd 0000  ld   $00         ;Char 'I'
              07ce 0082  ld   $82
              07cf 00fe  ld   $fe
              07d0 0082  ld   $82
              07d1 0000  ld   $00
              07d2 0004  ld   $04         ;Char 'J'
              07d3 0002  ld   $02
              07d4 0082  ld   $82
              07d5 00fc  ld   $fc
              07d6 0080  ld   $80
              07d7 00fe  ld   $fe         ;Char 'K'
              07d8 0010  ld   $10
              07d9 0028  ld   $28
              07da 0044  ld   $44
              07db 0082  ld   $82
              07dc 00fe  ld   $fe         ;Char 'L'
              07dd 0002  ld   $02
              07de 0002  ld   $02
              07df 0002  ld   $02
              07e0 0002  ld   $02
              07e1 00fe  ld   $fe         ;Char 'M'
              07e2 0040  ld   $40
              07e3 0030  ld   $30
              07e4 0040  ld   $40
              07e5 00fe  ld   $fe
              07e6 00fe  ld   $fe         ;Char 'N'
              07e7 0020  ld   $20
              07e8 0010  ld   $10
              07e9 0008  ld   $08
              07ea 00fe  ld   $fe
              07eb 007c  ld   $7c         ;Char 'O'
              07ec 0082  ld   $82
              07ed 0082  ld   $82
              07ee 0082  ld   $82
              07ef 007c  ld   $7c
              07f0 00fe  ld   $fe         ;Char 'P'
              07f1 0090  ld   $90
              07f2 0090  ld   $90
              07f3 0090  ld   $90
              07f4 0060  ld   $60
              07f5 007c  ld   $7c         ;Char 'Q'
              07f6 0082  ld   $82
              07f7 008a  ld   $8a
              07f8 0084  ld   $84
              07f9 007a  ld   $7a
                                          3034      comment = C(comment)
                                          3035
              07fa 0200  nop              3036  trampoline()
              07fb fe00  bra  ac          ;+-----------------------------------+
              07fc fcfd  bra  $07fd       ;|                                   |
              07fd 1418  ld   $18,y       ;| Trampoline for page $0700 lookups |
              07fe e006  jmp  y,$06       ;|                                   |
              07ff c218  st   [$18]       ;+-----------------------------------+
                                          3037
                                          3038  #-----------------------------------------------------------------------
                                          3039
                                          3040  align(0x100, size=0x100)
                                          3041
                                          3042  label('font82up')
                                          3043  for ch in range(32+50, 132):
                                          3044    comment = 'Char %s' % repr(chr(ch))
                                          3045    for byte in font.font[ch-32]:
                                          3046      ld(byte)
font82up:     0800 00fe  ld   $fe         ;Char 'R'
              0801 0090  ld   $90
              0802 0098  ld   $98
              0803 0094  ld   $94
              0804 0062  ld   $62
              0805 0062  ld   $62         ;Char 'S'
              0806 0092  ld   $92
              0807 0092  ld   $92
              0808 0092  ld   $92
              0809 000c  ld   $0c
              080a 0080  ld   $80         ;Char 'T'
              080b 0080  ld   $80
              080c 00fe  ld   $fe
              080d 0080  ld   $80
              080e 0080  ld   $80
              080f 00fc  ld   $fc         ;Char 'U'
              0810 0002  ld   $02
              0811 0002  ld   $02
              0812 0002  ld   $02
              0813 00fc  ld   $fc
              0814 00f0  ld   $f0         ;Char 'V'
              0815 000c  ld   $0c
              0816 0002  ld   $02
              0817 000c  ld   $0c
              0818 00f0  ld   $f0
              0819 00fe  ld   $fe         ;Char 'W'
              081a 0004  ld   $04
              081b 0018  ld   $18
              081c 0004  ld   $04
              081d 00fe  ld   $fe
              081e 00c6  ld   $c6         ;Char 'X'
              081f 0028  ld   $28
              0820 0010  ld   $10
              0821 0028  ld   $28
              0822 00c6  ld   $c6
              0823 00e0  ld   $e0         ;Char 'Y'
              0824 0010  ld   $10
              0825 000e  ld   $0e
              0826 0010  ld   $10
              0827 00e0  ld   $e0
              0828 0086  ld   $86         ;Char 'Z'
              0829 008a  ld   $8a
              082a 0092  ld   $92
              082b 00a2  ld   $a2
              082c 00c2  ld   $c2
              082d 0000  ld   $00         ;Char '['
              082e 00fe  ld   $fe
              082f 0082  ld   $82
              0830 0082  ld   $82
              0831 0000  ld   $00
              0832 0000  ld   $00         ;Char '\\'
              0833 0060  ld   $60
              0834 0018  ld   $18
              0835 0006  ld   $06
              0836 0000  ld   $00
              0837 0000  ld   $00         ;Char ']'
              0838 0082  ld   $82
              0839 0082  ld   $82
              083a 00fe  ld   $fe
              083b 0000  ld   $00
              083c 0020  ld   $20         ;Char '^'
              083d 0040  ld   $40
              083e 0080  ld   $80
              083f 0040  ld   $40
              0840 0020  ld   $20
              0841 0002  ld   $02         ;Char '_'
              0842 0002  ld   $02
              0843 0002  ld   $02
              * 5 times
              0846 0000  ld   $00         ;Char '`'
              0847 0000  ld   $00
              0848 00c0  ld   $c0
              0849 00a0  ld   $a0
              084a 0000  ld   $00
              084b 0004  ld   $04         ;Char 'a'
              084c 002a  ld   $2a
              084d 002a  ld   $2a
              084e 002a  ld   $2a
              084f 001e  ld   $1e
              0850 00fe  ld   $fe         ;Char 'b'
              0851 0022  ld   $22
              0852 0022  ld   $22
              0853 0022  ld   $22
              0854 001c  ld   $1c
              0855 001c  ld   $1c         ;Char 'c'
              0856 0022  ld   $22
              0857 0022  ld   $22
              0858 0022  ld   $22
              0859 0002  ld   $02
              085a 001c  ld   $1c         ;Char 'd'
              085b 0022  ld   $22
              085c 0022  ld   $22
              085d 0022  ld   $22
              085e 00fe  ld   $fe
              085f 001c  ld   $1c         ;Char 'e'
              0860 002a  ld   $2a
              0861 002a  ld   $2a
              0862 002a  ld   $2a
              0863 0018  ld   $18
              0864 0010  ld   $10         ;Char 'f'
              0865 007e  ld   $7e
              0866 0090  ld   $90
              0867 0080  ld   $80
              0868 0040  ld   $40
              0869 0018  ld   $18         ;Char 'g'
              086a 0025  ld   $25
              086b 0025  ld   $25
              086c 0025  ld   $25
              086d 001e  ld   $1e
              086e 00fe  ld   $fe         ;Char 'h'
              086f 0020  ld   $20
              0870 0020  ld   $20
              0871 0020  ld   $20
              0872 001e  ld   $1e
              0873 0000  ld   $00         ;Char 'i'
              0874 0022  ld   $22
              0875 00be  ld   $be
              0876 0002  ld   $02
              0877 0000  ld   $00
              0878 0002  ld   $02         ;Char 'j'
              0879 0001  ld   $01
              087a 0021  ld   $21
              087b 00be  ld   $be
              087c 0000  ld   $00
              087d 00fe  ld   $fe         ;Char 'k'
              087e 0008  ld   $08
              087f 0018  ld   $18
              0880 0024  ld   $24
              0881 0002  ld   $02
              0882 0000  ld   $00         ;Char 'l'
              0883 0082  ld   $82
              0884 00fe  ld   $fe
              0885 0002  ld   $02
              0886 0000  ld   $00
              0887 003e  ld   $3e         ;Char 'm'
              0888 0020  ld   $20
              0889 001c  ld   $1c
              088a 0020  ld   $20
              088b 001e  ld   $1e
              088c 003e  ld   $3e         ;Char 'n'
              088d 0010  ld   $10
              088e 0020  ld   $20
              088f 0020  ld   $20
              0890 001e  ld   $1e
              0891 001c  ld   $1c         ;Char 'o'
              0892 0022  ld   $22
              0893 0022  ld   $22
              0894 0022  ld   $22
              0895 001c  ld   $1c
              0896 003f  ld   $3f         ;Char 'p'
              0897 0024  ld   $24
              0898 0024  ld   $24
              0899 0024  ld   $24
              089a 0018  ld   $18
              089b 0018  ld   $18         ;Char 'q'
              089c 0024  ld   $24
              089d 0024  ld   $24
              089e 0024  ld   $24
              089f 003f  ld   $3f
              08a0 003e  ld   $3e         ;Char 'r'
              08a1 0010  ld   $10
              08a2 0020  ld   $20
              08a3 0020  ld   $20
              08a4 0010  ld   $10
              08a5 0012  ld   $12         ;Char 's'
              08a6 002a  ld   $2a
              08a7 002a  ld   $2a
              08a8 002a  ld   $2a
              08a9 0004  ld   $04
              08aa 0020  ld   $20         ;Char 't'
              08ab 00fc  ld   $fc
              08ac 0022  ld   $22
              08ad 0002  ld   $02
              08ae 0004  ld   $04
              08af 003c  ld   $3c         ;Char 'u'
              08b0 0002  ld   $02
              08b1 0002  ld   $02
              08b2 0004  ld   $04
              08b3 003e  ld   $3e
              08b4 0038  ld   $38         ;Char 'v'
              08b5 0004  ld   $04
              08b6 0002  ld   $02
              08b7 0004  ld   $04
              08b8 0038  ld   $38
              08b9 003c  ld   $3c         ;Char 'w'
              08ba 0002  ld   $02
              08bb 000c  ld   $0c
              08bc 0002  ld   $02
              08bd 003c  ld   $3c
              08be 0022  ld   $22         ;Char 'x'
              08bf 0014  ld   $14
              08c0 0008  ld   $08
              08c1 0014  ld   $14
              08c2 0022  ld   $22
              08c3 0038  ld   $38         ;Char 'y'
              08c4 0005  ld   $05
              08c5 0005  ld   $05
              08c6 0005  ld   $05
              08c7 003e  ld   $3e
              08c8 0022  ld   $22         ;Char 'z'
              08c9 0026  ld   $26
              08ca 002a  ld   $2a
              08cb 0032  ld   $32
              08cc 0022  ld   $22
              08cd 0010  ld   $10         ;Char '{'
              08ce 006c  ld   $6c
              08cf 0082  ld   $82
              08d0 0082  ld   $82
              08d1 0000  ld   $00
              08d2 0000  ld   $00         ;Char '|'
              08d3 0000  ld   $00
              08d4 00fe  ld   $fe
              08d5 0000  ld   $00
              08d6 0000  ld   $00
              08d7 0000  ld   $00         ;Char '}'
              08d8 0082  ld   $82
              08d9 0082  ld   $82
              08da 006c  ld   $6c
              08db 0010  ld   $10
              08dc 0040  ld   $40         ;Char '~'
              08dd 0080  ld   $80
              08de 0040  ld   $40
              08df 0020  ld   $20
              08e0 0040  ld   $40
              08e1 00fe  ld   $fe         ;Char '\x7f'
              08e2 00fe  ld   $fe
              08e3 00fe  ld   $fe
              * 5 times
              08e6 0010  ld   $10         ;Char '\x80'
              08e7 0038  ld   $38
              08e8 0054  ld   $54
              08e9 0010  ld   $10
              08ea 0010  ld   $10
              08eb 0010  ld   $10         ;Char '\x81'
              08ec 0020  ld   $20
              08ed 007c  ld   $7c
              08ee 0020  ld   $20
              08ef 0010  ld   $10
              08f0 0010  ld   $10         ;Char '\x82'
              08f1 0010  ld   $10
              08f2 0054  ld   $54
              08f3 0038  ld   $38
              08f4 0010  ld   $10
              08f5 0010  ld   $10         ;Char '\x83'
              08f6 0008  ld   $08
              08f7 007c  ld   $7c
              08f8 0008  ld   $08
              08f9 0010  ld   $10
                                          3047      comment = C(comment)
                                          3048
              08fa 0200  nop              3049  trampoline()
              08fb fe00  bra  ac          ;+-----------------------------------+
              08fc fcfd  bra  $08fd       ;|                                   |
              08fd 1418  ld   $18,y       ;| Trampoline for page $0800 lookups |
              08fe e006  jmp  y,$06       ;|                                   |
              08ff c218  st   [$18]       ;+-----------------------------------+
                                          3050
                                          3051  #-----------------------------------------------------------------------
                                          3052  #
                                          3053  #  $0900 ROM page 9: Key table for music
                                          3054  #
                                          3055  #-----------------------------------------------------------------------
                                          3056
                                          3057  align(0x100, size=0x100)
                                          3058  notes = 'CCDDEFFGGAAB'
                                          3059  sampleRate = cpuClock / 200.0 / 4
                                          3060  label('notesTable')
notesTable:   0900 0000  ld   $00         3061  ld(0)
              0901 0000  ld   $00         3062  ld(0)
                                          3063  for i in range(0, 250, 2):
                                          3064    j = i//2-1
                                          3065    freq = 440.0*2.0**((j-57)/12.0)
                                          3066    if j>=0 and freq <= sampleRate/2.0:
                                          3067      key = int(round(32768 * freq / sampleRate))
                                          3068      octave, note = j//12, notes[j%12]
                                          3069      sharp = '-' if notes[j%12-1] != note else '#'
                                          3070      comment = '%s%s%s (%0.1f Hz)' % (note, sharp, octave, freq)
                                          3071      ld(key&127); C(comment); ld(key>>7)
              0902 0045  ld   $45         ;C-0 (16.4 Hz)
              0903 0000  ld   $00
              0904 0049  ld   $49         ;C#0 (17.3 Hz)
              0905 0000  ld   $00
              0906 004d  ld   $4d         ;D-0 (18.4 Hz)
              0907 0000  ld   $00
              0908 0052  ld   $52         ;D#0 (19.4 Hz)
              0909 0000  ld   $00
              090a 0056  ld   $56         ;E-0 (20.6 Hz)
              090b 0000  ld   $00
              090c 005c  ld   $5c         ;F-0 (21.8 Hz)
              090d 0000  ld   $00
              090e 0061  ld   $61         ;F#0 (23.1 Hz)
              090f 0000  ld   $00
              0910 0067  ld   $67         ;G-0 (24.5 Hz)
              0911 0000  ld   $00
              0912 006d  ld   $6d         ;G#0 (26.0 Hz)
              0913 0000  ld   $00
              0914 0073  ld   $73         ;A-0 (27.5 Hz)
              0915 0000  ld   $00
              0916 007a  ld   $7a         ;A#0 (29.1 Hz)
              0917 0000  ld   $00
              0918 0001  ld   $01         ;B-0 (30.9 Hz)
              0919 0001  ld   $01
              091a 0009  ld   $09         ;C-1 (32.7 Hz)
              091b 0001  ld   $01
              091c 0011  ld   $11         ;C#1 (34.6 Hz)
              091d 0001  ld   $01
              091e 001a  ld   $1a         ;D-1 (36.7 Hz)
              091f 0001  ld   $01
              0920 0023  ld   $23         ;D#1 (38.9 Hz)
              0921 0001  ld   $01
              0922 002d  ld   $2d         ;E-1 (41.2 Hz)
              0923 0001  ld   $01
              0924 0037  ld   $37         ;F-1 (43.7 Hz)
              0925 0001  ld   $01
              0926 0042  ld   $42         ;F#1 (46.2 Hz)
              0927 0001  ld   $01
              0928 004e  ld   $4e         ;G-1 (49.0 Hz)
              0929 0001  ld   $01
              092a 005a  ld   $5a         ;G#1 (51.9 Hz)
              092b 0001  ld   $01
              092c 0067  ld   $67         ;A-1 (55.0 Hz)
              092d 0001  ld   $01
              092e 0074  ld   $74         ;A#1 (58.3 Hz)
              092f 0001  ld   $01
              0930 0003  ld   $03         ;B-1 (61.7 Hz)
              0931 0002  ld   $02
              0932 0012  ld   $12         ;C-2 (65.4 Hz)
              0933 0002  ld   $02
              0934 0023  ld   $23         ;C#2 (69.3 Hz)
              0935 0002  ld   $02
              0936 0034  ld   $34         ;D-2 (73.4 Hz)
              0937 0002  ld   $02
              0938 0046  ld   $46         ;D#2 (77.8 Hz)
              0939 0002  ld   $02
              093a 005a  ld   $5a         ;E-2 (82.4 Hz)
              093b 0002  ld   $02
              093c 006e  ld   $6e         ;F-2 (87.3 Hz)
              093d 0002  ld   $02
              093e 0004  ld   $04         ;F#2 (92.5 Hz)
              093f 0003  ld   $03
              0940 001b  ld   $1b         ;G-2 (98.0 Hz)
              0941 0003  ld   $03
              0942 0033  ld   $33         ;G#2 (103.8 Hz)
              0943 0003  ld   $03
              0944 004d  ld   $4d         ;A-2 (110.0 Hz)
              0945 0003  ld   $03
              0946 0069  ld   $69         ;A#2 (116.5 Hz)
              0947 0003  ld   $03
              0948 0006  ld   $06         ;B-2 (123.5 Hz)
              0949 0004  ld   $04
              094a 0025  ld   $25         ;C-3 (130.8 Hz)
              094b 0004  ld   $04
              094c 0045  ld   $45         ;C#3 (138.6 Hz)
              094d 0004  ld   $04
              094e 0068  ld   $68         ;D-3 (146.8 Hz)
              094f 0004  ld   $04
              0950 000c  ld   $0c         ;D#3 (155.6 Hz)
              0951 0005  ld   $05
              0952 0033  ld   $33         ;E-3 (164.8 Hz)
              0953 0005  ld   $05
              0954 005c  ld   $5c         ;F-3 (174.6 Hz)
              0955 0005  ld   $05
              0956 0008  ld   $08         ;F#3 (185.0 Hz)
              0957 0006  ld   $06
              0958 0036  ld   $36         ;G-3 (196.0 Hz)
              0959 0006  ld   $06
              095a 0067  ld   $67         ;G#3 (207.7 Hz)
              095b 0006  ld   $06
              095c 001b  ld   $1b         ;A-3 (220.0 Hz)
              095d 0007  ld   $07
              095e 0052  ld   $52         ;A#3 (233.1 Hz)
              095f 0007  ld   $07
              0960 000c  ld   $0c         ;B-3 (246.9 Hz)
              0961 0008  ld   $08
              0962 0049  ld   $49         ;C-4 (261.6 Hz)
              0963 0008  ld   $08
              0964 000b  ld   $0b         ;C#4 (277.2 Hz)
              0965 0009  ld   $09
              0966 0050  ld   $50         ;D-4 (293.7 Hz)
              0967 0009  ld   $09
              0968 0019  ld   $19         ;D#4 (311.1 Hz)
              0969 000a  ld   $0a
              096a 0067  ld   $67         ;E-4 (329.6 Hz)
              096b 000a  ld   $0a
              096c 0039  ld   $39         ;F-4 (349.2 Hz)
              096d 000b  ld   $0b
              096e 0010  ld   $10         ;F#4 (370.0 Hz)
              096f 000c  ld   $0c
              0970 006c  ld   $6c         ;G-4 (392.0 Hz)
              0971 000c  ld   $0c
              0972 004e  ld   $4e         ;G#4 (415.3 Hz)
              0973 000d  ld   $0d
              0974 0035  ld   $35         ;A-4 (440.0 Hz)
              0975 000e  ld   $0e
              0976 0023  ld   $23         ;A#4 (466.2 Hz)
              0977 000f  ld   $0f
              0978 0017  ld   $17         ;B-4 (493.9 Hz)
              0979 0010  ld   $10
              097a 0013  ld   $13         ;C-5 (523.3 Hz)
              097b 0011  ld   $11
              097c 0015  ld   $15         ;C#5 (554.4 Hz)
              097d 0012  ld   $12
              097e 001f  ld   $1f         ;D-5 (587.3 Hz)
              097f 0013  ld   $13
              0980 0032  ld   $32         ;D#5 (622.3 Hz)
              0981 0014  ld   $14
              0982 004d  ld   $4d         ;E-5 (659.3 Hz)
              0983 0015  ld   $15
              0984 0072  ld   $72         ;F-5 (698.5 Hz)
              0985 0016  ld   $16
              0986 0020  ld   $20         ;F#5 (740.0 Hz)
              0987 0018  ld   $18
              0988 0058  ld   $58         ;G-5 (784.0 Hz)
              0989 0019  ld   $19
              098a 001c  ld   $1c         ;G#5 (830.6 Hz)
              098b 001b  ld   $1b
              098c 006b  ld   $6b         ;A-5 (880.0 Hz)
              098d 001c  ld   $1c
              098e 0046  ld   $46         ;A#5 (932.3 Hz)
              098f 001e  ld   $1e
              0990 002f  ld   $2f         ;B-5 (987.8 Hz)
              0991 0020  ld   $20
              0992 0025  ld   $25         ;C-6 (1046.5 Hz)
              0993 0022  ld   $22
              0994 002a  ld   $2a         ;C#6 (1108.7 Hz)
              0995 0024  ld   $24
              0996 003f  ld   $3f         ;D-6 (1174.7 Hz)
              0997 0026  ld   $26
              0998 0064  ld   $64         ;D#6 (1244.5 Hz)
              0999 0028  ld   $28
              099a 001a  ld   $1a         ;E-6 (1318.5 Hz)
              099b 002b  ld   $2b
              099c 0063  ld   $63         ;F-6 (1396.9 Hz)
              099d 002d  ld   $2d
              099e 003f  ld   $3f         ;F#6 (1480.0 Hz)
              099f 0030  ld   $30
              09a0 0031  ld   $31         ;G-6 (1568.0 Hz)
              09a1 0033  ld   $33
              09a2 0038  ld   $38         ;G#6 (1661.2 Hz)
              09a3 0036  ld   $36
              09a4 0056  ld   $56         ;A-6 (1760.0 Hz)
              09a5 0039  ld   $39
              09a6 000d  ld   $0d         ;A#6 (1864.7 Hz)
              09a7 003d  ld   $3d
              09a8 005e  ld   $5e         ;B-6 (1975.5 Hz)
              09a9 0040  ld   $40
              09aa 004b  ld   $4b         ;C-7 (2093.0 Hz)
              09ab 0044  ld   $44
              09ac 0055  ld   $55         ;C#7 (2217.5 Hz)
              09ad 0048  ld   $48
              09ae 007e  ld   $7e         ;D-7 (2349.3 Hz)
              09af 004c  ld   $4c
              09b0 0048  ld   $48         ;D#7 (2489.0 Hz)
              09b1 0051  ld   $51
              09b2 0034  ld   $34         ;E-7 (2637.0 Hz)
              09b3 0056  ld   $56
              09b4 0046  ld   $46         ;F-7 (2793.8 Hz)
              09b5 005b  ld   $5b
              09b6 007f  ld   $7f         ;F#7 (2960.0 Hz)
              09b7 0060  ld   $60
              09b8 0061  ld   $61         ;G-7 (3136.0 Hz)
              09b9 0066  ld   $66
              09ba 006f  ld   $6f         ;G#7 (3322.4 Hz)
              09bb 006c  ld   $6c
              09bc 002c  ld   $2c         ;A-7 (3520.0 Hz)
              09bd 0073  ld   $73
              09be 001a  ld   $1a         ;A#7 (3729.3 Hz)
              09bf 007a  ld   $7a
                                          3072
                                          3073  # NOTE trampoline, (0x09c0),
                                          3074  label('noteTrampoline')
noteTrampoline:
              09c0 fe00  bra  ac          3075  bra(AC)                         #+1
              09c1 fcc2  bra  $09c2       3076  bra(pc()+1)                     #+3
              09c2 15c1  ld   [$c1],y     3077  ld([0xC1],Y)                    #+4
              09c3 e11d  jmp  y,[$1d]     3078  jmp(Y,[vTmp])                   #+5
              09c4 0200  nop              3079  nop()                           #+6
                                          3080
              09c5 0200  nop              3081  trampoline()
              09c6 0200  nop
              09c7 0200  nop
              * 54 times
              09fb fe00  bra  ac          ;+-----------------------------------+
              09fc fcfd  bra  $09fd       ;|                                   |
              09fd 1418  ld   $18,y       ;| Trampoline for page $0900 lookups |
              09fe e006  jmp  y,$06       ;|                                   |
              09ff c218  st   [$18]       ;+-----------------------------------+
                                          3082
                                          3083  #-----------------------------------------------------------------------
                                          3084  #
                                          3085  #  $0a00 ROM page 10: Inversion table
                                          3086  #
                                          3087  #-----------------------------------------------------------------------
                                          3088
                                          3089  align(0x100, size=0x100)
                                          3090  label('invTable')
                                          3091
                                          3092  # Unit 64, table offset 16 (=1/4), value offset 1: (x+16)*(y+1) == 64*64 - e
                                          3093  for i in range(251):
invTable:     0a00 00ff  ld   $ff         3094    ld(4096//(i+16)-1)
              0a01 00ef  ld   $ef
              0a02 00e2  ld   $e2
              0a03 00d6  ld   $d6
              0a04 00cb  ld   $cb
              0a05 00c2  ld   $c2
              0a06 00b9  ld   $b9
              0a07 00b1  ld   $b1
              0a08 00a9  ld   $a9
              0a09 00a2  ld   $a2
              0a0a 009c  ld   $9c
              0a0b 0096  ld   $96
              0a0c 0091  ld   $91
              0a0d 008c  ld   $8c
              0a0e 0087  ld   $87
              0a0f 0083  ld   $83
              0a10 007f  ld   $7f
              0a11 007b  ld   $7b
              0a12 0077  ld   $77
              0a13 0074  ld   $74
              0a14 0070  ld   $70
              0a15 006d  ld   $6d
              0a16 006a  ld   $6a
              0a17 0068  ld   $68
              0a18 0065  ld   $65
              0a19 0062  ld   $62
              0a1a 0060  ld   $60
              0a1b 005e  ld   $5e
              0a1c 005c  ld   $5c
              0a1d 005a  ld   $5a
              0a1e 0058  ld   $58
              0a1f 0056  ld   $56
              0a20 0054  ld   $54
              0a21 0052  ld   $52
              0a22 0050  ld   $50
              0a23 004f  ld   $4f
              0a24 004d  ld   $4d
              0a25 004c  ld   $4c
              0a26 004a  ld   $4a
              0a27 0049  ld   $49
              0a28 0048  ld   $48
              0a29 0046  ld   $46
              0a2a 0045  ld   $45
              0a2b 0044  ld   $44
              0a2c 0043  ld   $43
              0a2d 0042  ld   $42
              0a2e 0041  ld   $41
              0a2f 0040  ld   $40
              0a30 003f  ld   $3f
              0a31 003e  ld   $3e
              0a32 003d  ld   $3d
              0a33 003c  ld   $3c
              0a34 003b  ld   $3b
              0a35 003a  ld   $3a
              0a36 0039  ld   $39
              0a37 0038  ld   $38
              0a38 0037  ld   $37
              0a39 0037  ld   $37
              0a3a 0036  ld   $36
              0a3b 0035  ld   $35
              0a3c 0034  ld   $34
              0a3d 0034  ld   $34
              0a3e 0033  ld   $33
              0a3f 0032  ld   $32
              0a40 0032  ld   $32
              0a41 0031  ld   $31
              0a42 0030  ld   $30
              0a43 0030  ld   $30
              0a44 002f  ld   $2f
              0a45 002f  ld   $2f
              0a46 002e  ld   $2e
              0a47 002e  ld   $2e
              0a48 002d  ld   $2d
              0a49 002d  ld   $2d
              0a4a 002c  ld   $2c
              0a4b 002c  ld   $2c
              0a4c 002b  ld   $2b
              0a4d 002b  ld   $2b
              0a4e 002a  ld   $2a
              0a4f 002a  ld   $2a
              0a50 0029  ld   $29
              0a51 0029  ld   $29
              0a52 0028  ld   $28
              0a53 0028  ld   $28
              0a54 0027  ld   $27
              0a55 0027  ld   $27
              0a56 0027  ld   $27
              0a57 0026  ld   $26
              0a58 0026  ld   $26
              0a59 0026  ld   $26
              0a5a 0025  ld   $25
              0a5b 0025  ld   $25
              0a5c 0024  ld   $24
              0a5d 0024  ld   $24
              0a5e 0024  ld   $24
              0a5f 0023  ld   $23
              0a60 0023  ld   $23
              0a61 0023  ld   $23
              0a62 0022  ld   $22
              0a63 0022  ld   $22
              0a64 0022  ld   $22
              0a65 0022  ld   $22
              0a66 0021  ld   $21
              0a67 0021  ld   $21
              0a68 0021  ld   $21
              0a69 0020  ld   $20
              0a6a 0020  ld   $20
              0a6b 0020  ld   $20
              0a6c 0020  ld   $20
              0a6d 001f  ld   $1f
              0a6e 001f  ld   $1f
              0a6f 001f  ld   $1f
              0a70 001f  ld   $1f
              0a71 001e  ld   $1e
              0a72 001e  ld   $1e
              0a73 001e  ld   $1e
              0a74 001e  ld   $1e
              0a75 001d  ld   $1d
              0a76 001d  ld   $1d
              0a77 001d  ld   $1d
              0a78 001d  ld   $1d
              0a79 001c  ld   $1c
              0a7a 001c  ld   $1c
              0a7b 001c  ld   $1c
              * 5 times
              0a7e 001b  ld   $1b
              0a7f 001b  ld   $1b
              0a80 001b  ld   $1b
              * 5 times
              0a83 001a  ld   $1a
              0a84 001a  ld   $1a
              0a85 001a  ld   $1a
              * 5 times
              0a88 0019  ld   $19
              0a89 0019  ld   $19
              0a8a 0019  ld   $19
              * 6 times
              0a8e 0018  ld   $18
              0a8f 0018  ld   $18
              0a90 0018  ld   $18
              * 6 times
              0a94 0017  ld   $17
              0a95 0017  ld   $17
              0a96 0017  ld   $17
              * 7 times
              0a9b 0016  ld   $16
              0a9c 0016  ld   $16
              0a9d 0016  ld   $16
              * 8 times
              0aa3 0015  ld   $15
              0aa4 0015  ld   $15
              0aa5 0015  ld   $15
              * 8 times
              0aab 0014  ld   $14
              0aac 0014  ld   $14
              0aad 0014  ld   $14
              * 9 times
              0ab4 0013  ld   $13
              0ab5 0013  ld   $13
              0ab6 0013  ld   $13
              * 9 times
              0abd 0012  ld   $12
              0abe 0012  ld   $12
              0abf 0012  ld   $12
              * 11 times
              0ac8 0011  ld   $11
              0ac9 0011  ld   $11
              0aca 0011  ld   $11
              * 12 times
              0ad4 0010  ld   $10
              0ad5 0010  ld   $10
              0ad6 0010  ld   $10
              * 13 times
              0ae1 000f  ld   $0f
              0ae2 000f  ld   $0f
              0ae3 000f  ld   $0f
              * 16 times
              0af1 000e  ld   $0e
              0af2 000e  ld   $0e
              0af3 000e  ld   $0e
              * 10 times
                                          3095
                                          3096  trampoline()
              0afb fe00  bra  ac          ;+-----------------------------------+
              0afc fcfd  bra  $0afd       ;|                                   |
              0afd 1418  ld   $18,y       ;| Trampoline for page $0a00 lookups |
              0afe e006  jmp  y,$06       ;|                                   |
              0aff c218  st   [$18]       ;+-----------------------------------+
                                          3097
                                          3098  #-----------------------------------------------------------------------
                                          3099  #
                                          3100  #  $0b00 ROM page 11: More SYS functions
                                          3101  #
                                          3102  #-----------------------------------------------------------------------
                                          3103
                                          3104  align(0x100, size=0x100)
                                          3105
                                          3106  #-----------------------------------------------------------------------
                                          3107  # Extension SYS_SetMode_v2_80
                                          3108  #-----------------------------------------------------------------------
                                          3109  #
                                          3110  # Set video mode to 0 to 3 black scanlines per pixel line.
                                          3111  #
                                          3112  # Mainly for making the MODE command available in Tiny BASIC, so that
                                          3113  # the user can experiment. It's adviced to refrain from using
                                          3114  # SYS_SetMode_v2_80 in regular applications. Video mode is a deeply
                                          3115  # personal preference, and the programmer shouldn't overrule the user
                                          3116  # in that choice. The Gigatron philisophy is that the end user has
                                          3117  # the final say on what happens on the system, not the application,
                                          3118  # even if that implies a degraded performance. This doesn't mean that
                                          3119  # all applications must work well in all video modes: mode 1 is still
                                          3120  # the default. If an application really doesn't work at all in that
                                          3121  # mode, it's acceptable to change mode once after loading.
                                          3122  #
                                          3123  # There's no "SYS_GetMode" function.
                                          3124  #
                                          3125  # Variables:
                                          3126  #       vAC bit 0:1     Mode:
                                          3127  #                         0      "ABCD" -> Full mode (slowest)
                                          3128  #                         1      "ABC-" -> Default mode after reset
                                          3129  #                         2      "A-C-" -> at67's mode
                                          3130  #                         3      "A---" -> HGM's mode
                                          3131  #       vAC bit 2:15    Ignored bits and should be 0
                                          3132  #
                                          3133  # Special values (ROM v4):
                                          3134  #       vAC = 1975      Zombie mode (no video signals, no input,
                                          3135  #                        no blinkenlights).
                                          3136  #       vAC = -1        Leave zombie mode and restore previous mode.
                                          3137
                                          3138  # Actual duration is <80 cycles, but keep some room for future extensions
                                          3139  label('SYS_SetMode_v2_80')
SYS_SetMode_v2_80:
              0b00 140b  ld   $0b,y       3140  ld(hi('sys_SetMode'),Y)         #15
              0b01 e054  jmp  y,$54       3141  jmp(Y,'sys_SetMode')            #16
              0b02 011e  ld   [$1e]       3142  ld([vReturn])                   #17
                                          3143
                                          3144  #-----------------------------------------------------------------------
                                          3145  # Extension SYS_SetMemory_v2_54
                                          3146  #-----------------------------------------------------------------------
                                          3147  #
                                          3148  # SYS function for setting 1..256 bytes
                                          3149  #
                                          3150  # sysArgs[0]   Copy count (in, changed)
                                          3151  # sysArgs[1]   Copy value (in)
                                          3152  # sysArgs[2:3] Destination address (in, changed)
                                          3153  #
                                          3154  # Sets up to 8 bytes per invocation before restarting itself through vCPU.
                                          3155  # Doesn't wrap around page boundary. Can run 3 times per 148-cycle time slice.
                                          3156  # All combined that gives a 300% speedup over ROMv4 and before.
                                          3157
                                          3158  label('SYS_SetMemory_v2_54')
SYS_SetMemory_v2_54:
              0b03 0124  ld   [$24]       3159  ld([sysArgs+0])                 #15
                                          3160  bra('sys_SetMemory#18')         #16
              0b04 fc18  bra  sys_SetMemory#18
              0b05 1126  ld   [$26],x     3161  ld([sysArgs+2],X)               #17
                                          3162
                                          3163  #-----------------------------------------------------------------------
                                          3164  # Extension SYS_SendSerial1_v3_80
                                          3165  #-----------------------------------------------------------------------
                                          3166  #
                                          3167  # SYS function for sending data over serial controller port using
                                          3168  # pulse width modulation of the vertical sync signal.
                                          3169  #
                                          3170  # Variables:
                                          3171  #       sysArgs[0:1]    Source address               (in, changed)
                                          3172  #       sysArgs[2]      Start bit mask (typically 1) (in, changed)
                                          3173  #       sysArgs[3]      Number of send frames X      (in, changed)
                                          3174  #
                                          3175  # The sending will abort if input data is detected on the serial port.
                                          3176  # Returns 0 in case of all bits sent, or <>0 in case of abort
                                          3177  #
                                          3178  # This modulates the next upcoming X vertical pulses with the supplied
                                          3179  # data. A zero becomes a 7 line vPulse, a one will be 9 lines.
                                          3180  # After that, the vPulse width falls back to 8 lines (idle).
                                          3181
                                          3182  label('SYS_SendSerial1_v3_80')
SYS_SendSerial1_v3_80:
              0b06 0109  ld   [$09]       3183  ld([videoY])                    #15
                                          3184  bra('sys_SendSerial1')          #16
              0b07 fc83  bra  sys_SendSerial1
              0b08 60b3  xora $b3         3185  xora(videoYline0)               #17 First line of vertical blank
                                          3186
                                          3187  #-----------------------------------------------------------------------
                                          3188  # Extension SYS_ExpanderControl_v4_40
                                          3189  #-----------------------------------------------------------------------
                                          3190  #
                                          3191  # Sets the I/O and RAM expander's control register
                                          3192  #
                                          3193  # Variables:
                                          3194  #       vAC bit 2       Device enable /SS0
                                          3195  #           bit 3       Device enable /SS1
                                          3196  #           bit 4       Device enable /SS2
                                          3197  #           bit 5       Device enable /SS3
                                          3198  #           bit 6       Banking B0
                                          3199  #           bit 7       Banking B1
                                          3200  #           bit 15      Data out MOSI
                                          3201  #       sysArgs[7]      Cache for control state (written to)
                                          3202  #
                                          3203  # Intended for prototyping, and probably too low-level for most applications
                                          3204  # Still there's a safeguard: it's not possible to disable RAM using this
                                          3205
                                          3206  label('SYS_ExpanderControl_v4_40')
SYS_ExpanderControl_v4_40:
              0b09 140d  ld   $0d,y       3207  ld(hi('sys_ExpanderControl'),Y) #15
              0b0a e000  jmp  y,$00       3208  jmp(Y,'sys_ExpanderControl')    #16
              0b0b 000c  ld   $0c         3209  ld(0b00001100)                  #17
                                          3210  #    ^^^^^^^^
                                          3211  #    |||||||`-- SCLK
                                          3212  #    ||||||`--- Not connected
                                          3213  #    |||||`---- /SS0
                                          3214  #    ||||`----- /SS1
                                          3215  #    |||`------ /SS2
                                          3216  #    ||`------- /SS3
                                          3217  #    |`-------- B0
                                          3218  #    `--------- B1
                                          3219
                                          3220  #-----------------------------------------------------------------------
                                          3221  # Extension SYS_Run6502_v4_80
                                          3222  #-----------------------------------------------------------------------
                                          3223  #
                                          3224  # Transfer control to v6502
                                          3225  #
                                          3226  # Calling 6502 code from vCPU goes (only) through this SYS function.
                                          3227  # Directly modifying the vCpuSelect variable is unreliable. The
                                          3228  # control transfer is immediate, without waiting for the current
                                          3229  # time slice to end or first returning to vCPU.
                                          3230  #
                                          3231  # vCPU code and v6502 code can interoperate without much hassle:
                                          3232  # - The v6502 program counter is vLR, and v6502 doesn't touch vPC
                                          3233  # - Returning to vCPU is with the BRK instruction
                                          3234  # - BRK doesn't dump process state on the stack
                                          3235  # - vCPU can save/restore the vLR with PUSH/POP
                                          3236  # - Stacks are shared, vAC is shared
                                          3237  # - vAC can indicate what the v6502 code wants. vAC+1 will be cleared
                                          3238  # - Alternative is to leave a word in sysArgs[6:7] (v6502 X and Y registers)
                                          3239  # - Another way is to set vPC before BRK, and vCPU will continue there(+2)
                                          3240  #
                                          3241  # Calling v6502 code from vCPU looks like this:
                                          3242  #       LDWI  SYS_Run6502_v4_80
                                          3243  #       STW   sysFn
                                          3244  #       LDWI  $6502_start_address
                                          3245  #       STW   vLR
                                          3246  #       SYS   80
                                          3247  #
                                          3248  # Variables:
                                          3249  #       vAC             Accumulator
                                          3250  #       vLR             Program Counter
                                          3251  #       vSP             Stack Pointer (+1)
                                          3252  #       sysArgs[6]      Index Register X
                                          3253  #       sysArgs[7]      Index Register Y
                                          3254  # For info:
                                          3255  #       sysArgs[0:1]    Address Register, free to clobber
                                          3256  #       sysArgs[2]      Instruction Register, free to clobber
                                          3257  #       sysArgs[3:5]    Flags, don't touch
                                          3258  #
                                          3259  # Implementation details::
                                          3260  #
                                          3261  #  The time to reserve for this transition is the maximum time
                                          3262  #  between NEXT and v6502_check. This is
                                          3263  #       SYS call duration + 2*v6502_maxTicks + (v6502_overhead - vCPU_overhead)
                                          3264  #     = 22 + 38 + (11 - 9) = 62 cycles.
                                          3265  #  So reserving 80 cycles is future proof. This isn't overhead, as it includes
                                          3266  #  the fetching of the first 6502 opcode and its operands..
                                          3267  #
                                          3268  #                      0            10                 28=0         9
                                          3269  #    ---+----+---------+------------+------------------+-----------+---
                                          3270  # video | nop| runVcpu |   ENTER    | At least one ins |   EXIT    | video
                                          3271  #    ---+----+---------+------------+------------------+-----------+---
                                          3272  #        sync  prelude  ENTER-to-ins    ins-to-NEXT     NEXT-to-video
                                          3273  #       |<-->|
                                          3274  #        0/1 |<------->|
                                          3275  #                 5    |<----------------------------->|
                                          3276  #          runVCpu_overhead           28               |<--------->|
                                          3277  #                                 2*maxTicks                 9
                                          3278  #                                                      vCPU_overhead
                                          3279  #
                                          3280  #                      0                21                    38=0       11
                                          3281  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3282  # video | nop| runVcpu |   v6502_ENTER  | At least one fetch |v6502_exitB| video
                                          3283  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3284  #        sync  prelude   enter-to-fetch     fetch-to-check    check-to-video
                                          3285  #       |<-->|
                                          3286  #        0/1 |<------->|
                                          3287  #                 5    |<----------------------------------->|
                                          3288  #          runVcpu_overhead           38                     |<--------->|
                                          3289  #                              2*v6520_maxTicks                    11
                                          3290  #                                                            v6502_overhead
                                          3291
                                          3292  label('SYS_Run6502_v4_80')
SYS_Run6502_v4_80:
              0b0c 140d  ld   $0d,y       3293  ld(hi('sys_v6502'),Y)           #15
              0b0d e08b  jmp  y,$8b       3294  jmp(Y,'sys_v6502')              #16
              0b0e 000d  ld   $0d         3295  ld(hi('v6502_ENTER'))           #17 Activate v6502
                                          3296
                                          3297  #-----------------------------------------------------------------------
                                          3298  # Extension SYS_ResetWaveforms_v4_50
                                          3299  #-----------------------------------------------------------------------
                                          3300  #
                                          3301  # soundTable[4x+0] = sawtooth, to be modified into metallic/noise
                                          3302  # soundTable[4x+1] = pulse
                                          3303  # soundTable[4x+2] = triangle
                                          3304  # soundTable[4x+3] = sawtooth, also useful to right shift 2 bits
                                          3305
                                          3306  label('SYS_ResetWaveforms_v4_50')
SYS_ResetWaveforms_v4_50:
              0b0f 1412  ld   $12,y       3307  ld(hi('sys_ResetWaveforms'),Y)  #15 Initial setup of waveforms. [vAC+0]=i
              0b10 e0b8  jmp  y,$b8       3308  jmp(Y,'sys_ResetWaveforms')     #16
              0b11 1407  ld   $07,y       3309  ld(soundTable>>8,Y)             #17
                                          3310
                                          3311  #-----------------------------------------------------------------------
                                          3312  # Extension SYS_ShuffleNoise_v4_46
                                          3313  #-----------------------------------------------------------------------
                                          3314  #
                                          3315  # Use simple 6-bits variation of RC4 to permutate waveform 0 in soundTable
                                          3316
                                          3317  label('SYS_ShuffleNoise_v4_46')
SYS_ShuffleNoise_v4_46:
              0b12 1412  ld   $12,y       3318  ld(hi('sys_ShuffleNoise'),Y)    #15 Shuffle soundTable[4i+0]. [vAC+0]=4j, [vAC+1]=4i
              0b13 e0d9  jmp  y,$d9       3319  jmp(Y,'sys_ShuffleNoise')       #16
              0b14 1407  ld   $07,y       3320  ld(soundTable>>8,Y)             #17
                                          3321
                                          3322  #-----------------------------------------------------------------------
                                          3323  # Extension SYS_SpiExchangeBytes_v4_134
                                          3324  #-----------------------------------------------------------------------
                                          3325  #
                                          3326  # Send AND receive 1..256 bytes over SPI interface
                                          3327
                                          3328  # Variables:
                                          3329  #       sysArgs[0]      Page index start, for both send/receive (in, changed)
                                          3330  #       sysArgs[1]      Memory page for send data (in)
                                          3331  #       sysArgs[2]      Page index stop (in)
                                          3332  #       sysArgs[3]      Memory page for receive data (in)
                                          3333  #       sysArgs[4]      Scratch (changed)
                                          3334
                                          3335  label('SYS_SpiExchangeBytes_v4_134')
SYS_SpiExchangeBytes_v4_134:
              0b15 140d  ld   $0d,y       3336  ld(hi('sys_SpiExchangeBytes'),Y)#15
              0b16 e015  jmp  y,$15       3337  jmp(Y,'sys_SpiExchangeBytes')   #16
              0b17 1401  ld   $01,y       3338  ld(hi(ctrlBits),Y)              #17 Control state as saved by SYS_ExpanderControl
                                          3339
                                          3340
                                          3341  #-----------------------------------------------------------------------
                                          3342  #  SYS Implementations
                                          3343  #-----------------------------------------------------------------------
                                          3344  #
                                          3345  # SYS_SetMemory_54 implementation
                                          3346  label('sys_SetMemory#18')
sys_SetMemory#18:
              0b18 1527  ld   [$27],y     3347  ld([sysArgs+3],Y)               #18
              0b19 f83c  ble  .sysSb#21   3348  ble('.sysSb#21')                #19 Enter fast lane if >=128 or at 0 (-> 256)
              0b1a a008  suba $08         3349  suba(8)                         #20
              0b1b f43e  bge  .sysSb#23   3350  bge('.sysSb#23')                #21 Or when >=8
              0b1c c224  st   [$24]       3351  st([sysArgs+0])                 #22
              0b1d 2004  anda $04         3352  anda(4)                         #23
              0b1e f025  beq  .sysSb#26   3353  beq('.sysSb#26')                #24
              0b1f 0125  ld   [$25]       3354  ld([sysArgs+1])                 #25 Set 4 pixels
              0b20 de00  st   [y,x++]     3355  st([Y,Xpp])                     #26
              0b21 de00  st   [y,x++]     3356  st([Y,Xpp])                     #27
              0b22 de00  st   [y,x++]     3357  st([Y,Xpp])                     #28
              0b23 fc28  bra  .sysSb#31   3358  bra('.sysSb#31')                #29
              0b24 de00  st   [y,x++]     3359  st([Y,Xpp])                     #30
                                          3360  label('.sysSb#26')
.sysSb#26:    0b25 0001  ld   $01         3361  wait(31-26)                     #26
              0b26 ec26  bne  $0b26
              0b27 a001  suba $01
                                          3362  label('.sysSb#31')
.sysSb#31:    0b28 0124  ld   [$24]       3363  ld([sysArgs+0])                 #31
              0b29 2002  anda $02         3364  anda(2)                         #32
              0b2a f02f  beq  .sysSb#35   3365  beq('.sysSb#35')                #33
              0b2b 0125  ld   [$25]       3366  ld([sysArgs+1])                 #34 Set 2 pixels
              0b2c de00  st   [y,x++]     3367  st([Y,Xpp])                     #35
              0b2d fc32  bra  .sysSb#38   3368  bra('.sysSb#38')                #36
              0b2e de00  st   [y,x++]     3369  st([Y,Xpp])                     #37
                                          3370  label('.sysSb#35')
.sysSb#35:    0b2f 0200  nop              3371  wait(38-35)                     #35
              0b30 0200  nop
              0b31 0200  nop
                                          3372  label('.sysSb#38')
.sysSb#38:    0b32 0124  ld   [$24]       3373  ld([sysArgs+0])                 #38
              0b33 2001  anda $01         3374  anda(1)                         #39
              0b34 f037  beq  $0b37       3375  beq(pc()+3)                     #40
              0b35 fc38  bra  $0b38       3376  bra(pc()+3)                     #41
              0b36 0125  ld   [$25]       3377  ld([sysArgs+1])                 #42 Set 1 pixel
              0b37 0d00  ld   [y,x]       3378  ld([Y,X])                       #42(!) No change
              0b38 ce00  st   [y,x]       3379  st([Y,X])                       #43
              0b39 1403  ld   $03,y       3380  ld(hi('NEXTY'),Y)               #44 Return
              0b3a e000  jmp  y,$00       3381  jmp(Y,'NEXTY')                  #45 All done
              0b3b 00e8  ld   $e8         3382  ld(-48/2)                       #46
                                          3383  label('.sysSb#21')
.sysSb#21:    0b3c 0200  nop              3384  nop()                           #21
              0b3d c224  st   [$24]       3385  st([sysArgs+0])                 #22
                                          3386  label('.sysSb#23')
.sysSb#23:    0b3e 0125  ld   [$25]       3387  ld([sysArgs+1])                 #23 Set 8 pixels
              0b3f de00  st   [y,x++]     3388  st([Y,Xpp])                     #24
              0b40 de00  st   [y,x++]     3389  st([Y,Xpp])                     #25
              0b41 de00  st   [y,x++]     3390  st([Y,Xpp])                     #26
              0b42 de00  st   [y,x++]     3391  st([Y,Xpp])                     #27
              0b43 de00  st   [y,x++]     3392  st([Y,Xpp])                     #28
              0b44 de00  st   [y,x++]     3393  st([Y,Xpp])                     #29
              0b45 de00  st   [y,x++]     3394  st([Y,Xpp])                     #30
              0b46 de00  st   [y,x++]     3395  st([Y,Xpp])                     #31
              0b47 0126  ld   [$26]       3396  ld([sysArgs+2])                 #32 Advance write pointer
              0b48 8008  adda $08         3397  adda(8)                         #33
              0b49 c226  st   [$26]       3398  st([sysArgs+2])                 #34
              0b4a 0124  ld   [$24]       3399  ld([sysArgs+0])                 #35
              0b4b f04e  beq  $0b4e       3400  beq(pc()+3)                     #36
              0b4c fc4f  bra  $0b4f       3401  bra(pc()+3)                     #37
              0b4d 00fe  ld   $fe         3402  ld(-2)                          #38 Self-restart when more to do
              0b4e 0000  ld   $00         3403  ld(0)                           #38(!)
              0b4f 8116  adda [$16]       3404  adda([vPC])                     #39
              0b50 c216  st   [$16]       3405  st([vPC])                       #40
              0b51 1403  ld   $03,y       3406  ld(hi('REENTER'),Y)             #41
              0b52 e0cb  jmp  y,$cb       3407  jmp(Y,'REENTER')                #42
              0b53 00e9  ld   $e9         3408  ld(-46/2)                       #43
                                          3409
                                          3410  # SYS_SetMode_80 implementation
                                          3411  label('sys_SetMode')
sys_SetMode:  0b54 ec57  bne  $0b57       3412  bne(pc()+3)                     #18
              0b55 fc57  bra  $0b57       3413  bra(pc()+2)                     #19
              0b56 0003  ld   $03         3414  ld('startVideo')                #20 First enable video if disabled
              0b57 c21e  st   [$1e]       3415  st([vReturn])                   #20,21
              0b58 0119  ld   [$19]       3416  ld([vAC+1])                     #22
              0b59 f063  beq  .sysSm#25   3417  beq('.sysSm#25')                #23
              0b5a 1403  ld   $03,y       3418  ld(hi('REENTER'),Y)             #24
              0b5b 6118  xora [$18]       3419  xora([vAC])                     #25
              0b5c 60b0  xora $b0         3420  xora((1975>>8)^(1975&255))      #26 Poor man\'s 1975 detection
              0b5d ec60  bne  $0b60       3421  bne(pc()+3)                     #27
              0b5e fc61  bra  $0b61       3422  bra(pc()+3)                     #28
                                          3423  assert videoZ == 0x0100
              0b5f c21e  st   [$1e]       3424  st([vReturn])                   #29 DISABLE video/audio/serial/etc
              0b60 0200  nop              3425  nop()                           #29(!) Ignore and return
              0b61 e0cb  jmp  y,$cb       3426  jmp(Y,'REENTER')                #30
              0b62 00ef  ld   $ef         3427  ld(-34/2)                       #31
                                          3428  label('.sysSm#25')
.sysSm#25:    0b63 0118  ld   [$18]       3429  ld([vAC])                       #25 Mode 0,1,2,3
              0b64 2003  anda $03         3430  anda(3)                         #26
              0b65 8068  adda $68         3431  adda('.sysSm#30')               #27
              0b66 fe00  bra  ac          3432  bra(AC)                         #28
              0b67 fc6c  bra  .sysSm#31   3433  bra('.sysSm#31')                #29
                                          3434  label('.sysSm#30')
.sysSm#30:    0b68 000a  ld   $0a         3435  ld('pixels')                    #30 videoB lines
              0b69 000a  ld   $0a         3436  ld('pixels')                    #30
              0b6a 00f6  ld   $f6         3437  ld('nopixels')                  #30
              0b6b 00f6  ld   $f6         3438  ld('nopixels')                  #30
                                          3439  label('.sysSm#31')
.sysSm#31:    0b6c c20a  st   [$0a]       3440  st([videoModeB])                #31
              0b6d 0118  ld   [$18]       3441  ld([vAC])                       #32
              0b6e 2003  anda $03         3442  anda(3)                         #33
              0b6f 8072  adda $72         3443  adda('.sysSm#37')               #34
              0b70 fe00  bra  ac          3444  bra(AC)                         #35
              0b71 fc76  bra  .sysSm#38   3445  bra('.sysSm#38')                #36
                                          3446  label('.sysSm#37')
.sysSm#37:    0b72 000a  ld   $0a         3447  ld('pixels')                    #37 videoC lines
              0b73 000a  ld   $0a         3448  ld('pixels')                    #37
              0b74 000a  ld   $0a         3449  ld('pixels')                    #37
              0b75 00f6  ld   $f6         3450  ld('nopixels')                  #37
                                          3451  label('.sysSm#38')
.sysSm#38:    0b76 c20b  st   [$0b]       3452  st([videoModeC])                #38
              0b77 0118  ld   [$18]       3453  ld([vAC])                       #39
              0b78 2003  anda $03         3454  anda(3)                         #40
              0b79 807c  adda $7c         3455  adda('.sysSm#44')               #41
              0b7a fe00  bra  ac          3456  bra(AC)                         #42
              0b7b fc80  bra  .sysSm#45   3457  bra('.sysSm#45')                #43
                                          3458  label('.sysSm#44')
.sysSm#44:    0b7c 000a  ld   $0a         3459  ld('pixels')                    #44 videoD lines
              0b7d 00f6  ld   $f6         3460  ld('nopixels')                  #44
              0b7e 00f6  ld   $f6         3461  ld('nopixels')                  #44
              0b7f 00f6  ld   $f6         3462  ld('nopixels')                  #44
                                          3463  label('.sysSm#45')
.sysSm#45:    0b80 c20c  st   [$0c]       3464  st([videoModeD])                #45
              0b81 e0cb  jmp  y,$cb       3465  jmp(Y,'REENTER')                #46
              0b82 00e7  ld   $e7         3466  ld(-50/2)                       #47
                                          3467
                                          3468  # SYS_SendSerial1_v3_80 implementation
                                          3469  label('sys_SendSerial1')
sys_SendSerial1:
              0b83 f08a  beq  .sysSs#20   3470  beq('.sysSs#20')                #18
              0b84 1124  ld   [$24],x     3471  ld([sysArgs+0],X)               #19
              0b85 0116  ld   [$16]       3472  ld([vPC])                       #20 Wait for vBlank
              0b86 a002  suba $02         3473  suba(2)                         #21
              0b87 1403  ld   $03,y       3474  ld(hi('REENTER_28'),Y)          #22
              0b88 e0ca  jmp  y,$ca       3475  jmp(Y,'REENTER_28')             #23
              0b89 c216  st   [$16]       3476  st([vPC])                       #24
                                          3477  label('.sysSs#20')
.sysSs#20:    0b8a 1525  ld   [$25],y     3478  ld([sysArgs+1],Y)               #20 Synchronized with vBlank
              0b8b 0d00  ld   [y,x]       3479  ld([Y,X])                       #21 Copy next bit
              0b8c 2126  anda [$26]       3480  anda([sysArgs+2])               #22
              0b8d ec90  bne  $0b90       3481  bne(pc()+3)                     #23
              0b8e fc91  bra  $0b91       3482  bra(pc()+3)                     #24
              0b8f 000e  ld   $0e         3483  ld(7*2)                         #25
              0b90 0012  ld   $12         3484  ld(9*2)                         #25
              0b91 c20d  st   [$0d]       3485  st([videoPulse])                #26
              0b92 0126  ld   [$26]       3486  ld([sysArgs+2])                 #27 Rotate input bit
              0b93 8200  adda ac          3487  adda(AC)                        #28
              0b94 ec97  bne  $0b97       3488  bne(pc()+3)                     #29
              0b95 fc97  bra  $0b97       3489  bra(pc()+2)                     #30
              0b96 0001  ld   $01         3490  ld(1)                           #31
              0b97 c226  st   [$26]       3491  st([sysArgs+2])                 #31,32 (must be idempotent)
              0b98 2001  anda $01         3492  anda(1)                         #33 Optionally increment pointer
              0b99 8124  adda [$24]       3493  adda([sysArgs+0])               #34
              0b9a d224  st   [$24],x     3494  st([sysArgs+0],X)               #35
              0b9b 0127  ld   [$27]       3495  ld([sysArgs+3])                 #36 Frame counter
              0b9c a001  suba $01         3496  suba(1)                         #37
              0b9d f0ac  beq  .sysSs#40   3497  beq('.sysSs#40')                #38
              0b9e 1403  ld   $03,y       3498  ld(hi('REENTER'),Y)             #39
              0b9f c227  st   [$27]       3499  st([sysArgs+3])                 #40
              0ba0 010f  ld   [$0f]       3500  ld([serialRaw])                 #41 Test for anything being sent back
              0ba1 60ff  xora $ff         3501  xora(255)                       #42
              0ba2 f0a7  beq  .sysSs#45   3502  beq('.sysSs#45')                #43
              0ba3 c218  st   [$18]       3503  st([vAC])                       #44 Abort after key press with non-zero error
              0ba4 c219  st   [$19]       3504  st([vAC+1])                     #45
              0ba5 e0cb  jmp  y,$cb       3505  jmp(Y,'REENTER')                #46
              0ba6 00e7  ld   $e7         3506  ld(-50/2)                       #47
                                          3507  label('.sysSs#45')
.sysSs#45:    0ba7 0116  ld   [$16]       3508  ld([vPC])                       #45 Continue sending bits
              0ba8 a002  suba $02         3509  suba(2)                         #46
              0ba9 c216  st   [$16]       3510  st([vPC])                       #47
              0baa e0cb  jmp  y,$cb       3511  jmp(Y,'REENTER')                #48
              0bab 00e6  ld   $e6         3512  ld(-52/2)                       #49
                                          3513  label('.sysSs#40')
.sysSs#40:    0bac c218  st   [$18]       3514  st([vAC])                       #40 Stop sending bits, no error
              0bad c219  st   [$19]       3515  st([vAC+1])                     #41
              0bae e0cb  jmp  y,$cb       3516  jmp(Y,'REENTER')                #42
              0baf 00e9  ld   $e9         3517  ld(-46/2)                       #43
                                          3518
                                          3519
                                          3520  #-----------------------------------------------------------------------
                                          3521  #  vCPU Implementations
                                          3522  #-----------------------------------------------------------------------
                                          3523  #
                                          3524  # LDWI implementation
                                          3525  label('ldwi#13')
ldwi#13:      0bb0 c218  st   [$18]       3526  st([vAC])                       #13 Operand
              0bb1 de00  st   [y,x++]     3527  st([Y,Xpp])                     #14 Just X++
              0bb2 0d00  ld   [y,x]       3528  ld([Y,X])                       #15 Fetch second operand
              0bb3 c219  st   [$19]       3529  st([vAC+1])                     #16
              0bb4 0116  ld   [$16]       3530  ld([vPC])                       #17 Advance vPC one more
              0bb5 8001  adda $01         3531  adda(1)                         #18
              0bb6 c216  st   [$16]       3532  st([vPC])                       #19
              0bb7 1403  ld   $03,y       3533  ld(hi('NEXTY'),Y)               #20
              0bb8 e000  jmp  y,$00       3534  jmp(Y,'NEXTY')                  #21
              0bb9 00f4  ld   $f4         3535  ld(-24/2)                       #22
                                          3536
                                          3537  # POP implementation
                                          3538  label('pop#13')
pop#13:       0bba 1504  ld   [$04],y     3539  ld([vSPH],Y)                    #13 vSP.hi
              0bbb 111c  ld   [$1c],x     3540  ld([vSP],X)                     #14
              0bbc 0d00  ld   [y,x]       3541  ld([Y,X])                       #15
              0bbd de00  st   [y,x++]     3542  st([Y,Xpp])                     #16
              0bbe c21a  st   [$1a]       3543  st([vLR])                       #17
              0bbf 0d00  ld   [y,x]       3544  ld([Y,X])                       #18
              0bc0 c21b  st   [$1b]       3545  st([vLR+1])                     #19
              0bc1 011c  ld   [$1c]       3546  ld([vSP])                       #20
              0bc2 8002  adda $02         3547  adda(2)                         #21
              0bc3 c21c  st   [$1c]       3548  st([vSP])                       #22
              0bc4 0116  ld   [$16]       3549  ld([vPC])                       #23
              0bc5 a001  suba $01         3550  suba(1)                         #24
              0bc6 c216  st   [$16]       3551  st([vPC])                       #25
              0bc7 1403  ld   $03,y       3552  ld(hi('NEXTY'),Y)               #26
              0bc8 e000  jmp  y,$00       3553  jmp(Y,'NEXTY')                  #27
              0bc9 00f1  ld   $f1         3554  ld(-30/2)                       #28
                                          3555
                                          3556  # PUSH implementation
                                          3557  label('push#13')
push#13:      0bca 1504  ld   [$04],y     3558  ld([vSPH],Y)                    #13 vSP.hi
              0bcb 011c  ld   [$1c]       3559  ld([vSP])                       #14
              0bcc a002  suba $02         3560  suba(2)                         #15
              0bcd d21c  st   [$1c],x     3561  st([vSP],X)                     #16
              0bce 011a  ld   [$1a]       3562  ld([vLR])                       #17
              0bcf de00  st   [y,x++]     3563  st([Y,Xpp])                     #18
              0bd0 011b  ld   [$1b]       3564  ld([vLR+1])                     #19
              0bd1 ce00  st   [y,x]       3565  st([Y,X])                       #20
              0bd2 0116  ld   [$16]       3566  ld([vPC])                       #21
              0bd3 a001  suba $01         3567  suba(1)                         #22
              0bd4 c216  st   [$16]       3568  st([vPC])                       #23
              0bd5 1403  ld   $03,y       3569  ld(hi('NEXTY'),Y)               #24
              0bd6 e000  jmp  y,$00       3570  jmp(Y,'NEXTY')                  #25
              0bd7 00f2  ld   $f2         3571  ld(-28/2)                       #26
                                          3572
                                          3573
                                          3574  #-----------------------------------------------------------------------
                                          3575  #
                                          3576  #  $0c00 ROM page 12: More SYS functions (sprites)
                                          3577  #
                                          3578  #       Page 1: vertical blank interval
                                          3579  #       Page 2: visible scanlines
                                          3580  #
                                          3581  #-----------------------------------------------------------------------
                                          3582
              0bd8 0200  nop              3583  align(0x100, size=0x100)
              0bd9 0200  nop
              0bda 0200  nop
              * 40 times
                                          3584
                                          3585  #-----------------------------------------------------------------------
                                          3586  # Extension SYS_Sprite6_v3_64
                                          3587  # Extension SYS_Sprite6x_v3_64
                                          3588  # Extension SYS_Sprite6y_v3_64
                                          3589  # Extension SYS_Sprite6xy_v3_64
                                          3590  #-----------------------------------------------------------------------
                                          3591  #
                                          3592  # Blit sprite in screen memory
                                          3593  #
                                          3594  # Variables
                                          3595  #       vAC             Destination address in screen
                                          3596  #       sysArgs[0:1]    Source address of 6xY pixels (colors 0..63) terminated
                                          3597  #                       by negative byte value N (typically N = -Y)
                                          3598  #       sysArgs[2:7]    Scratch (user as copy buffer)
                                          3599  #
                                          3600  # This SYS function draws a sprite of 6 pixels wide and Y pixels high.
                                          3601  # The pixel data is read sequentually from RAM, in horizontal chunks
                                          3602  # of 6 pixels at a time, and then written to the screen through the
                                          3603  # destination pointer (each chunk underneath the previous), thus
                                          3604  # drawing a 6xY stripe. Pixel values should be non-negative. The first
                                          3605  # negative byte N after a chunk signals the end of the sprite data.
                                          3606  # So the sprite's height Y is determined by the source data and is
                                          3607  # therefore flexible. This negative byte value, typically N == -Y,
                                          3608  # is then used to adjust the destination pointer's high byte, to make
                                          3609  # it easier to draw sprites wider than 6 pixels: just repeat the SYS
                                          3610  # call for as many 6-pixel wide stripes you need. All arguments are
                                          3611  # already left in place to facilitate this. After one call, the source
                                          3612  # pointer will point past that source data, effectively:
                                          3613  #       src += Y * 6 + 1
                                          3614  # The destination pointer will have been adjusted as:
                                          3615  #       dst += (Y + N) * 256 + 6
                                          3616  # (With arithmetic wrapping around on the same memory page)
                                          3617  #
                                          3618  # Y is only limited by source memory, not by CPU cycles. The
                                          3619  # implementation is such that the SYS function self-repeats, each
                                          3620  # time drawing the next 6-pixel chunk. It can typically draw 12
                                          3621  # pixels per scanline this way.
                                          3622
                                          3623  label('SYS_Sprite6_v3_64')
                                          3624
SYS_Sprite6_v3_64:
              0c00 1124  ld   [$24],x     3625  ld([sysArgs+0],X)               #15 Pixel data source address
              0c01 1525  ld   [$25],y     3626  ld([sysArgs+1],Y)               #16
              0c02 0d00  ld   [y,x]       3627  ld([Y,X])                       #17 Next pixel or stop
              0c03 f411  bge  .sysDpx0    3628  bpl('.sysDpx0')                 #18
              0c04 de00  st   [y,x++]     3629  st([Y,Xpp])                     #19 Just X++
                                          3630
              0c05 8119  adda [$19]       3631  adda([vAC+1])                   #20 Adjust dst for convenience
              0c06 c219  st   [$19]       3632  st([vAC+1])                     #21
              0c07 0118  ld   [$18]       3633  ld([vAC])                       #22
              0c08 8006  adda $06         3634  adda(6)                         #23
              0c09 c218  st   [$18]       3635  st([vAC])                       #24
              0c0a 0124  ld   [$24]       3636  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c0b 8001  adda $01         3637  adda(1)                         #26
              0c0c c224  st   [$24]       3638  st([sysArgs+0])                 #27
              0c0d 0200  nop              3639  nop()                           #28
              0c0e 1403  ld   $03,y       3640  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c0f e0cb  jmp  y,$cb       3641  jmp(Y,'REENTER')                #30
              0c10 00ef  ld   $ef         3642  ld(-34/2)                       #31
                                          3643
                                          3644  label('.sysDpx0')
.sysDpx0:     0c11 c226  st   [$26]       3645  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c12 0d00  ld   [y,x]       3646  ld([Y,X])                       #21
              0c13 de00  st   [y,x++]     3647  st([Y,Xpp])                     #22 Just X++
              0c14 c227  st   [$27]       3648  st([sysArgs+3])                 #23
              0c15 0d00  ld   [y,x]       3649  ld([Y,X])                       #24
              0c16 de00  st   [y,x++]     3650  st([Y,Xpp])                     #25 Just X++
              0c17 c228  st   [$28]       3651  st([sysArgs+4])                 #26
              0c18 0d00  ld   [y,x]       3652  ld([Y,X])                       #27
              0c19 de00  st   [y,x++]     3653  st([Y,Xpp])                     #28 Just X++
              0c1a c229  st   [$29]       3654  st([sysArgs+5])                 #29
              0c1b 0d00  ld   [y,x]       3655  ld([Y,X])                       #30
              0c1c de00  st   [y,x++]     3656  st([Y,Xpp])                     #31 Just X++
              0c1d c22a  st   [$2a]       3657  st([sysArgs+6])                 #32
              0c1e 0d00  ld   [y,x]       3658  ld([Y,X])                       #33
              0c1f de00  st   [y,x++]     3659  st([Y,Xpp])                     #34 Just X++
              0c20 c22b  st   [$2b]       3660  st([sysArgs+7])                 #35
                                          3661
              0c21 1118  ld   [$18],x     3662  ld([vAC],X)                     #36 Screen memory destination address
              0c22 1519  ld   [$19],y     3663  ld([vAC+1],Y)                   #37
              0c23 0126  ld   [$26]       3664  ld([sysArgs+2])                 #38 Write 6 pixels
              0c24 de00  st   [y,x++]     3665  st([Y,Xpp])                     #39
              0c25 0127  ld   [$27]       3666  ld([sysArgs+3])                 #40
              0c26 de00  st   [y,x++]     3667  st([Y,Xpp])                     #41
              0c27 0128  ld   [$28]       3668  ld([sysArgs+4])                 #42
              0c28 de00  st   [y,x++]     3669  st([Y,Xpp])                     #43
              0c29 0129  ld   [$29]       3670  ld([sysArgs+5])                 #44
              0c2a de00  st   [y,x++]     3671  st([Y,Xpp])                     #45
              0c2b 012a  ld   [$2a]       3672  ld([sysArgs+6])                 #46
              0c2c de00  st   [y,x++]     3673  st([Y,Xpp])                     #47
              0c2d 012b  ld   [$2b]       3674  ld([sysArgs+7])                 #48
              0c2e de00  st   [y,x++]     3675  st([Y,Xpp])                     #49
                                          3676
              0c2f 0124  ld   [$24]       3677  ld([sysArgs+0])                 #50 src += 6
              0c30 8006  adda $06         3678  adda(6)                         #51
              0c31 c224  st   [$24]       3679  st([sysArgs+0])                 #52
              0c32 0119  ld   [$19]       3680  ld([vAC+1])                     #53 dst += 256
              0c33 8001  adda $01         3681  adda(1)                         #54
              0c34 c219  st   [$19]       3682  st([vAC+1])                     #55
                                          3683
              0c35 0116  ld   [$16]       3684  ld([vPC])                       #56 Self-repeating SYS call
              0c36 a002  suba $02         3685  suba(2)                         #57
              0c37 c216  st   [$16]       3686  st([vPC])                       #58
              0c38 1403  ld   $03,y       3687  ld(hi('REENTER'),Y)             #59
              0c39 e0cb  jmp  y,$cb       3688  jmp(Y,'REENTER')                #60
              0c3a 00e0  ld   $e0         3689  ld(-64/2)                       #61
                                          3690
              0c3b 0200  nop              3691  align(64)
              0c3c 0200  nop
              0c3d 0200  nop
              * 5 times
                                          3692  label('SYS_Sprite6x_v3_64')
                                          3693
SYS_Sprite6x_v3_64:
              0c40 1124  ld   [$24],x     3694  ld([sysArgs+0],X)               #15 Pixel data source address
              0c41 1525  ld   [$25],y     3695  ld([sysArgs+1],Y)               #16
              0c42 0d00  ld   [y,x]       3696  ld([Y,X])                       #17 Next pixel or stop
              0c43 f451  bge  .sysDpx1    3697  bpl('.sysDpx1')                 #18
              0c44 de00  st   [y,x++]     3698  st([Y,Xpp])                     #19 Just X++
                                          3699
              0c45 8119  adda [$19]       3700  adda([vAC+1])                   #20 Adjust dst for convenience
              0c46 c219  st   [$19]       3701  st([vAC+1])                     #21
              0c47 0118  ld   [$18]       3702  ld([vAC])                       #22
              0c48 a006  suba $06         3703  suba(6)                         #23
              0c49 c218  st   [$18]       3704  st([vAC])                       #24
              0c4a 0124  ld   [$24]       3705  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c4b 8001  adda $01         3706  adda(1)                         #26
              0c4c c224  st   [$24]       3707  st([sysArgs+0])                 #27
              0c4d 0200  nop              3708  nop()                           #28
              0c4e 1403  ld   $03,y       3709  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c4f e0cb  jmp  y,$cb       3710  jmp(Y,'REENTER')                #30
              0c50 00ef  ld   $ef         3711  ld(-34/2)                       #31
                                          3712
                                          3713  label('.sysDpx1')
.sysDpx1:     0c51 c22b  st   [$2b]       3714  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0c52 0d00  ld   [y,x]       3715  ld([Y,X])                       #21
              0c53 de00  st   [y,x++]     3716  st([Y,Xpp])                     #22 Just X++
              0c54 c22a  st   [$2a]       3717  st([sysArgs+6])                 #23
              0c55 0d00  ld   [y,x]       3718  ld([Y,X])                       #24
              0c56 de00  st   [y,x++]     3719  st([Y,Xpp])                     #25 Just X++
              0c57 c229  st   [$29]       3720  st([sysArgs+5])                 #26
              0c58 0d00  ld   [y,x]       3721  ld([Y,X])                       #27
              0c59 de00  st   [y,x++]     3722  st([Y,Xpp])                     #28 Just X++
              0c5a c228  st   [$28]       3723  st([sysArgs+4])                 #29
              0c5b 0d00  ld   [y,x]       3724  ld([Y,X])                       #30
              0c5c de00  st   [y,x++]     3725  st([Y,Xpp])                     #31 Just X++
              0c5d c227  st   [$27]       3726  st([sysArgs+3])                 #32
              0c5e 0d00  ld   [y,x]       3727  ld([Y,X])                       #33
              0c5f de00  st   [y,x++]     3728  st([Y,Xpp])                     #34 Just X++
                                          3729
              0c60 1118  ld   [$18],x     3730  ld([vAC],X)                     #35 Screen memory destination address
              0c61 1519  ld   [$19],y     3731  ld([vAC+1],Y)                   #36
              0c62 de00  st   [y,x++]     3732  st([Y,Xpp])                     #37 Write 6 pixels
              0c63 0127  ld   [$27]       3733  ld([sysArgs+3])                 #38
              0c64 de00  st   [y,x++]     3734  st([Y,Xpp])                     #39
              0c65 0128  ld   [$28]       3735  ld([sysArgs+4])                 #40
              0c66 de00  st   [y,x++]     3736  st([Y,Xpp])                     #41
              0c67 0129  ld   [$29]       3737  ld([sysArgs+5])                 #42
              0c68 de00  st   [y,x++]     3738  st([Y,Xpp])                     #43
              0c69 012a  ld   [$2a]       3739  ld([sysArgs+6])                 #44
              0c6a de00  st   [y,x++]     3740  st([Y,Xpp])                     #45
              0c6b 012b  ld   [$2b]       3741  ld([sysArgs+7])                 #46
              0c6c de00  st   [y,x++]     3742  st([Y,Xpp])                     #47
                                          3743
              0c6d 0124  ld   [$24]       3744  ld([sysArgs+0])                 #48 src += 6
              0c6e 8006  adda $06         3745  adda(6)                         #49
              0c6f c224  st   [$24]       3746  st([sysArgs+0])                 #50
              0c70 0119  ld   [$19]       3747  ld([vAC+1])                     #51 dst += 256
              0c71 8001  adda $01         3748  adda(1)                         #52
              0c72 c219  st   [$19]       3749  st([vAC+1])                     #53
                                          3750
              0c73 0116  ld   [$16]       3751  ld([vPC])                       #54 Self-repeating SYS call
              0c74 a002  suba $02         3752  suba(2)                         #55
              0c75 c216  st   [$16]       3753  st([vPC])                       #56
              0c76 1403  ld   $03,y       3754  ld(hi('REENTER'),Y)             #57
              0c77 e0cb  jmp  y,$cb       3755  jmp(Y,'REENTER')                #58
              0c78 00e1  ld   $e1         3756  ld(-62/2)                       #59
                                          3757
              0c79 0200  nop              3758  align(64)
              0c7a 0200  nop
              0c7b 0200  nop
              * 7 times
                                          3759  label('SYS_Sprite6y_v3_64')
                                          3760
SYS_Sprite6y_v3_64:
              0c80 1124  ld   [$24],x     3761  ld([sysArgs+0],X)               #15 Pixel data source address
              0c81 1525  ld   [$25],y     3762  ld([sysArgs+1],Y)               #16
              0c82 0d00  ld   [y,x]       3763  ld([Y,X])                       #17 Next pixel or stop
              0c83 f493  bge  .sysDpx2    3764  bpl('.sysDpx2')                 #18
              0c84 de00  st   [y,x++]     3765  st([Y,Xpp])                     #19 Just X++
                                          3766
              0c85 60ff  xora $ff         3767  xora(255)                       #20 Adjust dst for convenience
              0c86 8001  adda $01         3768  adda(1)                         #21
              0c87 8119  adda [$19]       3769  adda([vAC+1])                   #22
              0c88 c219  st   [$19]       3770  st([vAC+1])                     #23
              0c89 0118  ld   [$18]       3771  ld([vAC])                       #24
              0c8a 8006  adda $06         3772  adda(6)                         #25
              0c8b c218  st   [$18]       3773  st([vAC])                       #26
              0c8c 0124  ld   [$24]       3774  ld([sysArgs+0])                 #27 Adjust src for convenience
              0c8d 8001  adda $01         3775  adda(1)                         #28
              0c8e c224  st   [$24]       3776  st([sysArgs+0])                 #29
              0c8f 0200  nop              3777  nop()                           #30
              0c90 1403  ld   $03,y       3778  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0c91 e0cb  jmp  y,$cb       3779  jmp(Y,'REENTER')                #32
              0c92 00ee  ld   $ee         3780  ld(-36/2)                       #33
                                          3781
                                          3782  label('.sysDpx2')
.sysDpx2:     0c93 c226  st   [$26]       3783  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c94 0d00  ld   [y,x]       3784  ld([Y,X])                       #21
              0c95 de00  st   [y,x++]     3785  st([Y,Xpp])                     #22 Just X++
              0c96 c227  st   [$27]       3786  st([sysArgs+3])                 #23
              0c97 0d00  ld   [y,x]       3787  ld([Y,X])                       #24
              0c98 de00  st   [y,x++]     3788  st([Y,Xpp])                     #25 Just X++
              0c99 c228  st   [$28]       3789  st([sysArgs+4])                 #26
              0c9a 0d00  ld   [y,x]       3790  ld([Y,X])                       #27
              0c9b de00  st   [y,x++]     3791  st([Y,Xpp])                     #28 Just X++
              0c9c c229  st   [$29]       3792  st([sysArgs+5])                 #29
              0c9d 0d00  ld   [y,x]       3793  ld([Y,X])                       #30
              0c9e de00  st   [y,x++]     3794  st([Y,Xpp])                     #31 Just X++
              0c9f c22a  st   [$2a]       3795  st([sysArgs+6])                 #32
              0ca0 0d00  ld   [y,x]       3796  ld([Y,X])                       #33
              0ca1 de00  st   [y,x++]     3797  st([Y,Xpp])                     #34 Just X++
              0ca2 c22b  st   [$2b]       3798  st([sysArgs+7])                 #35
                                          3799
              0ca3 1118  ld   [$18],x     3800  ld([vAC],X)                     #36 Screen memory destination address
              0ca4 1519  ld   [$19],y     3801  ld([vAC+1],Y)                   #37
              0ca5 0126  ld   [$26]       3802  ld([sysArgs+2])                 #38 Write 6 pixels
              0ca6 de00  st   [y,x++]     3803  st([Y,Xpp])                     #39
              0ca7 0127  ld   [$27]       3804  ld([sysArgs+3])                 #40
              0ca8 de00  st   [y,x++]     3805  st([Y,Xpp])                     #41
              0ca9 0128  ld   [$28]       3806  ld([sysArgs+4])                 #42
              0caa de00  st   [y,x++]     3807  st([Y,Xpp])                     #43
              0cab 0129  ld   [$29]       3808  ld([sysArgs+5])                 #44
              0cac de00  st   [y,x++]     3809  st([Y,Xpp])                     #45
              0cad 012a  ld   [$2a]       3810  ld([sysArgs+6])                 #46
              0cae de00  st   [y,x++]     3811  st([Y,Xpp])                     #47
              0caf 012b  ld   [$2b]       3812  ld([sysArgs+7])                 #48
              0cb0 de00  st   [y,x++]     3813  st([Y,Xpp])                     #49
                                          3814
              0cb1 0124  ld   [$24]       3815  ld([sysArgs+0])                 #50 src += 6
              0cb2 8006  adda $06         3816  adda(6)                         #51
              0cb3 c224  st   [$24]       3817  st([sysArgs+0])                 #52
              0cb4 0119  ld   [$19]       3818  ld([vAC+1])                     #53 dst -= 256
              0cb5 a001  suba $01         3819  suba(1)                         #54
              0cb6 c219  st   [$19]       3820  st([vAC+1])                     #55
                                          3821
              0cb7 0116  ld   [$16]       3822  ld([vPC])                       #56 Self-repeating SYS call
              0cb8 a002  suba $02         3823  suba(2)                         #57
              0cb9 c216  st   [$16]       3824  st([vPC])                       #58
              0cba 1403  ld   $03,y       3825  ld(hi('REENTER'),Y)             #59
              0cbb e0cb  jmp  y,$cb       3826  jmp(Y,'REENTER')                #60
              0cbc 00e0  ld   $e0         3827  ld(-64/2)                       #61
                                          3828
              0cbd 0200  nop              3829  align(64)
              0cbe 0200  nop
              0cbf 0200  nop
                                          3830  label('SYS_Sprite6xy_v3_64')
                                          3831
SYS_Sprite6xy_v3_64:
              0cc0 1124  ld   [$24],x     3832  ld([sysArgs+0],X)               #15 Pixel data source address
              0cc1 1525  ld   [$25],y     3833  ld([sysArgs+1],Y)               #16
              0cc2 0d00  ld   [y,x]       3834  ld([Y,X])                       #17 Next pixel or stop
              0cc3 f4d3  bge  .sysDpx3    3835  bpl('.sysDpx3')                 #18
              0cc4 de00  st   [y,x++]     3836  st([Y,Xpp])                     #19 Just X++
                                          3837
              0cc5 60ff  xora $ff         3838  xora(255)                       #20 Adjust dst for convenience
              0cc6 8001  adda $01         3839  adda(1)                         #21
              0cc7 8119  adda [$19]       3840  adda([vAC+1])                   #22
              0cc8 c219  st   [$19]       3841  st([vAC+1])                     #23
              0cc9 0118  ld   [$18]       3842  ld([vAC])                       #24
              0cca a006  suba $06         3843  suba(6)                         #25
              0ccb c218  st   [$18]       3844  st([vAC])                       #26
              0ccc 0124  ld   [$24]       3845  ld([sysArgs+0])                 #27 Adjust src for convenience
              0ccd 8001  adda $01         3846  adda(1)                         #28
              0cce c224  st   [$24]       3847  st([sysArgs+0])                 #29
              0ccf 0200  nop              3848  nop()                           #30
              0cd0 1403  ld   $03,y       3849  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0cd1 e0cb  jmp  y,$cb       3850  jmp(Y,'REENTER')                #32
              0cd2 00ee  ld   $ee         3851  ld(-36/2)                       #33
                                          3852
                                          3853  label('.sysDpx3')
.sysDpx3:     0cd3 c22b  st   [$2b]       3854  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0cd4 0d00  ld   [y,x]       3855  ld([Y,X])                       #21
              0cd5 de00  st   [y,x++]     3856  st([Y,Xpp])                     #22 Just X++
              0cd6 c22a  st   [$2a]       3857  st([sysArgs+6])                 #23
              0cd7 0d00  ld   [y,x]       3858  ld([Y,X])                       #24
              0cd8 de00  st   [y,x++]     3859  st([Y,Xpp])                     #25 Just X++
              0cd9 c229  st   [$29]       3860  st([sysArgs+5])                 #26
              0cda 0d00  ld   [y,x]       3861  ld([Y,X])                       #27
              0cdb de00  st   [y,x++]     3862  st([Y,Xpp])                     #28 Just X++
              0cdc c228  st   [$28]       3863  st([sysArgs+4])                 #29
              0cdd 0d00  ld   [y,x]       3864  ld([Y,X])                       #30
              0cde de00  st   [y,x++]     3865  st([Y,Xpp])                     #31 Just X++
              0cdf c227  st   [$27]       3866  st([sysArgs+3])                 #32
              0ce0 0d00  ld   [y,x]       3867  ld([Y,X])                       #33
              0ce1 de00  st   [y,x++]     3868  st([Y,Xpp])                     #34 Just X++
                                          3869
              0ce2 1118  ld   [$18],x     3870  ld([vAC],X)                     #35 Screen memory destination address
              0ce3 1519  ld   [$19],y     3871  ld([vAC+1],Y)                   #36
              0ce4 de00  st   [y,x++]     3872  st([Y,Xpp])                     #37 Write 6 pixels
              0ce5 0127  ld   [$27]       3873  ld([sysArgs+3])                 #38
              0ce6 de00  st   [y,x++]     3874  st([Y,Xpp])                     #39
              0ce7 0128  ld   [$28]       3875  ld([sysArgs+4])                 #40
              0ce8 de00  st   [y,x++]     3876  st([Y,Xpp])                     #41
              0ce9 0129  ld   [$29]       3877  ld([sysArgs+5])                 #42
              0cea de00  st   [y,x++]     3878  st([Y,Xpp])                     #43
              0ceb 012a  ld   [$2a]       3879  ld([sysArgs+6])                 #44
              0cec de00  st   [y,x++]     3880  st([Y,Xpp])                     #45
              0ced 012b  ld   [$2b]       3881  ld([sysArgs+7])                 #46
              0cee de00  st   [y,x++]     3882  st([Y,Xpp])                     #47
                                          3883
              0cef 0124  ld   [$24]       3884  ld([sysArgs+0])                 #48 src += 6
              0cf0 8006  adda $06         3885  adda(6)                         #49
              0cf1 c224  st   [$24]       3886  st([sysArgs+0])                 #50
              0cf2 0119  ld   [$19]       3887  ld([vAC+1])                     #51 dst -= 256
              0cf3 a001  suba $01         3888  suba(1)                         #52
              0cf4 c219  st   [$19]       3889  st([vAC+1])                     #53
                                          3890
              0cf5 0116  ld   [$16]       3891  ld([vPC])                       #54 Self-repeating SYS call
              0cf6 a002  suba $02         3892  suba(2)                         #55
              0cf7 c216  st   [$16]       3893  st([vPC])                       #56
              0cf8 1403  ld   $03,y       3894  ld(hi('REENTER'),Y)             #57
              0cf9 e0cb  jmp  y,$cb       3895  jmp(Y,'REENTER')                #58
              0cfa 00e1  ld   $e1         3896  ld(-62/2)                       #59
                                          3897
                                          3898  #-----------------------------------------------------------------------
                                          3899
              0cfb 0200  nop              3900  align(0x100)
              0cfc 0200  nop
              0cfd 0200  nop
              * 5 times
                                          3901
                                          3902  label('sys_ExpanderControl')
                                          3903
sys_ExpanderControl:
              0d00 1401  ld   $01,y       3904  ld(hi(ctrlBits),Y)                  #18
              0d01 2118  anda [$18]       3905  anda([vAC])                         #19 check for special ctrl code space
              0d02 f009  beq  sysEx#22    3906  beq('sysEx#22')                     #20
              0d03 0118  ld   [$18]       3907  ld([vAC])                           #21 load low byte of ctrl code in delay slot
              0d04 20fc  anda $fc         3908  anda(0xfc)                          #22 sanitize normal ctrl code
              0d05 caf8  st   [y,$f8]     3909  st([Y,ctrlBits])                    #23 store in ctrlBits
              0d06 c21d  st   [$1d]       3910  st([vTmp])                          #24 store in vTmp
              0d07 fc0e  bra  sysEx#27    3911  bra('sysEx#27')                     #25 jump to issuing normal ctrl code
              0d08 1519  ld   [$19],y     3912  ld([vAC+1],Y)                       #26 load high byte of ctrl code in delay slot
                                          3913  label('sysEx#22')
sysEx#22:     0d09 30fc  anda $fc,x       3914  anda(0xfc,X)                        #22 * special ctrl code
              0d0a 09f8  ld   [y,$f8]     3915  ld([Y,ctrlBits])                    #23 get previous normal code from ctrlBits
              0d0b c21d  st   [$1d]       3916  st([vTmp])                          #24 save it in vTmp
              0d0c 1519  ld   [$19],y     3917  ld([vAC+1],Y)                       #25 load high byte of ctrl code
              0d0d cd00  ctrl y,x         3918  ctrl(Y,X)                           #26 issue special ctrl code
                                          3919  label('sysEx#27')
sysEx#27:     0d0e 011d  ld   [$1d]       3920  ld([vTmp])                          #27 load saved normal ctrl code
              0d0f 30fc  anda $fc,x       3921  anda(0xfc,X)                        #28 sanitize ctrlBits
              0d10 cd00  ctrl y,x         3922  ctrl(Y,X)                           #29 issue normal ctrl code
              0d11 011d  ld   [$1d]       3923  ld([vTmp])                          #30 always load something after ctrl
              0d12 1403  ld   $03,y       3924  ld(hi('REENTER'),Y)                 #31
              0d13 e0cb  jmp  y,$cb       3925  jmp(Y,'REENTER')                    #32
              0d14 00ee  ld   $ee         3926  ld(-36/2)                           #33
                                          3927
                                          3928  #-----------------------------------------------------------------------
                                          3929
                                          3930  label('sys_SpiExchangeBytes')
                                          3931
sys_SpiExchangeBytes:
              0d15 09f8  ld   [y,$f8]     3932  ld([Y,ctrlBits])                #18
              0d16 c228  st   [$28]       3933  st([sysArgs+4])                 #19
                                          3934
              0d17 1124  ld   [$24],x     3935  ld([sysArgs+0],X)               #20 Fetch byte to send
              0d18 1525  ld   [$25],y     3936  ld([sysArgs+1],Y)               #21
              0d19 0d00  ld   [y,x]       3937  ld([Y,X])                       #22
                                          3938
                                          3939  for i in range(8):
                                          3940    st([vTmp],Y);C('Bit %d'%(7-i))#23+i*12
              0d1a d61d  st   [$1d],y     ;Bit 7
              0d1b 1128  ld   [$28],x     3941    ld([sysArgs+4],X)             #24+i*12
              0d1c dd00  ctrl y,x++       3942    ctrl(Y,Xpp)                   #25+i*12 Set MOSI
              0d1d dd00  ctrl y,x++       3943    ctrl(Y,Xpp)                   #26+i*12 Raise SCLK, disable RAM!
              0d1e 0100  ld   [$00]       3944    ld([0])                       #27+i*12 Get MISO
              0d1f 200f  anda $0f         3945    anda(0b00001111)              #28+i*12 This is why R1 as pull-DOWN is simpler
              0d20 f023  beq  $0d23       3946    beq(pc()+3)                   #29+i*12
              0d21 fc23  bra  $0d23       3947    bra(pc()+2)                   #30+i*12
              0d22 0001  ld   $01         3948    ld(1)                         #31+i*12
              0d23 cd00  ctrl y,x         3949    ctrl(Y,X)                     #32+i*12,29+i*12 (Must be idempotent) Lower SCLK
              0d24 811d  adda [$1d]       3950    adda([vTmp])                  #33+i*12 Shift
              0d25 811d  adda [$1d]       3951    adda([vTmp])                  #34+i*12
              0d26 d61d  st   [$1d],y     ;Bit 6
              0d27 1128  ld   [$28],x
              0d28 dd00  ctrl y,x++
              0d29 dd00  ctrl y,x++
              0d2a 0100  ld   [$00]
              0d2b 200f  anda $0f
              0d2c f02f  beq  $0d2f
              0d2d fc2f  bra  $0d2f
              0d2e 0001  ld   $01
              0d2f cd00  ctrl y,x
              0d30 811d  adda [$1d]
              0d31 811d  adda [$1d]
              0d32 d61d  st   [$1d],y     ;Bit 5
              0d33 1128  ld   [$28],x
              0d34 dd00  ctrl y,x++
              0d35 dd00  ctrl y,x++
              0d36 0100  ld   [$00]
              0d37 200f  anda $0f
              0d38 f03b  beq  $0d3b
              0d39 fc3b  bra  $0d3b
              0d3a 0001  ld   $01
              0d3b cd00  ctrl y,x
              0d3c 811d  adda [$1d]
              0d3d 811d  adda [$1d]
              0d3e d61d  st   [$1d],y     ;Bit 4
              0d3f 1128  ld   [$28],x
              0d40 dd00  ctrl y,x++
              0d41 dd00  ctrl y,x++
              0d42 0100  ld   [$00]
              0d43 200f  anda $0f
              0d44 f047  beq  $0d47
              0d45 fc47  bra  $0d47
              0d46 0001  ld   $01
              0d47 cd00  ctrl y,x
              0d48 811d  adda [$1d]
              0d49 811d  adda [$1d]
              0d4a d61d  st   [$1d],y     ;Bit 3
              0d4b 1128  ld   [$28],x
              0d4c dd00  ctrl y,x++
              0d4d dd00  ctrl y,x++
              0d4e 0100  ld   [$00]
              0d4f 200f  anda $0f
              0d50 f053  beq  $0d53
              0d51 fc53  bra  $0d53
              0d52 0001  ld   $01
              0d53 cd00  ctrl y,x
              0d54 811d  adda [$1d]
              0d55 811d  adda [$1d]
              0d56 d61d  st   [$1d],y     ;Bit 2
              0d57 1128  ld   [$28],x
              0d58 dd00  ctrl y,x++
              0d59 dd00  ctrl y,x++
              0d5a 0100  ld   [$00]
              0d5b 200f  anda $0f
              0d5c f05f  beq  $0d5f
              0d5d fc5f  bra  $0d5f
              0d5e 0001  ld   $01
              0d5f cd00  ctrl y,x
              0d60 811d  adda [$1d]
              0d61 811d  adda [$1d]
              0d62 d61d  st   [$1d],y     ;Bit 1
              0d63 1128  ld   [$28],x
              0d64 dd00  ctrl y,x++
              0d65 dd00  ctrl y,x++
              0d66 0100  ld   [$00]
              0d67 200f  anda $0f
              0d68 f06b  beq  $0d6b
              0d69 fc6b  bra  $0d6b
              0d6a 0001  ld   $01
              0d6b cd00  ctrl y,x
              0d6c 811d  adda [$1d]
              0d6d 811d  adda [$1d]
              0d6e d61d  st   [$1d],y     ;Bit 0
              0d6f 1128  ld   [$28],x
              0d70 dd00  ctrl y,x++
              0d71 dd00  ctrl y,x++
              0d72 0100  ld   [$00]
              0d73 200f  anda $0f
              0d74 f077  beq  $0d77
              0d75 fc77  bra  $0d77
              0d76 0001  ld   $01
              0d77 cd00  ctrl y,x
              0d78 811d  adda [$1d]
              0d79 811d  adda [$1d]
                                          3952
              0d7a 1124  ld   [$24],x     3953  ld([sysArgs+0],X)               #119 Store received byte
              0d7b 1527  ld   [$27],y     3954  ld([sysArgs+3],Y)               #120
              0d7c ce00  st   [y,x]       3955  st([Y,X])                       #121
                                          3956
              0d7d 0124  ld   [$24]       3957  ld([sysArgs+0])                 #122 Advance pointer
              0d7e 8001  adda $01         3958  adda(1)                         #123
              0d7f c224  st   [$24]       3959  st([sysArgs+0])                 #124
                                          3960
              0d80 6126  xora [$26]       3961  xora([sysArgs+2])               #125 Reached end?
              0d81 f088  beq  .sysSpi#128 3962  beq('.sysSpi#128')              #126
                                          3963
              0d82 0116  ld   [$16]       3964  ld([vPC])                       #127 Self-repeating SYS call
              0d83 a002  suba $02         3965  suba(2)                         #128
              0d84 c216  st   [$16]       3966  st([vPC])                       #129
              0d85 1403  ld   $03,y       3967  ld(hi('NEXTY'),Y)               #130
              0d86 e000  jmp  y,$00       3968  jmp(Y,'NEXTY')                  #131
              0d87 00bd  ld   $bd         3969  ld(-134/2)                      #132
                                          3970
                                          3971  label('.sysSpi#128')
.sysSpi#128:  0d88 1403  ld   $03,y       3972  ld(hi('NEXTY'),Y)               #128 Continue program
              0d89 e000  jmp  y,$00       3973  jmp(Y,'NEXTY')                  #129
              0d8a 00be  ld   $be         3974  ld(-132/2)                      #130
                                          3975
                                          3976  #-----------------------------------------------------------------------
                                          3977
                                          3978  label('sys_v6502')
                                          3979
sys_v6502:    0d8b d602  st   [$02],y     3980  st([vCpuSelect],Y)              #18 Activate v6502
              0d8c 00f5  ld   $f5         3981  ld(-22/2)                       #19
              0d8d e0ff  jmp  y,$ff       3982  jmp(Y,'v6502_ENTER')            #20 Transfer control in the same time slice
              0d8e 8115  adda [$15]       3983  adda([vTicks])                  #21
                                          3984  assert (38 - 22)//2 >= v6502_adjust
                                          3985
                                          3986  #-----------------------------------------------------------------------
                                          3987  #       MOS 6502 emulator
                                          3988  #-----------------------------------------------------------------------
                                          3989  #
                                          3990  # Some quirks:
                                          3991  # - Stack in zero page instead of page 1
                                          3992  # - No interrupts
                                          3993  # - No decimal mode (may never be added). D flag is emulated but ignored.
                                          3994  # - BRK switches back to running 16-bits vCPU
                                          3995  # - Illegal opcodes map to BRK, but can read ghost operands before trapping
                                          3996  # - Illegal opcode $ff won't be trapped and cause havoc instead
                                          3997
                                          3998  # Big things TODO:
                                          3999  # XXX Tuning, put most frequent instructions in the primary page
                                          4000
                                          4001  label('v6502_ror')
                                          4002  assert v6502_Cflag == 1
v6502_ror:    0d8f 1525  ld   [$25],y     4003  ld([v6502_ADH],Y)               #12
              0d90 00fc  ld   $fc         4004  ld(-46//2+v6502_maxTicks)       #13 Is there enough time for the excess ticks?
              0d91 8115  adda [$15]       4005  adda([vTicks])                  #14
              0d92 e8a6  blt  .recheck17  4006  blt('.recheck17')               #15
              0d93 0127  ld   [$27]       4007  ld([v6502_P])                   #16 Transfer C to "bit 8"
              0d94 2001  anda $01         4008  anda(1)                         #17
              0d95 807f  adda $7f         4009  adda(127)                       #18
              0d96 2080  anda $80         4010  anda(128)                       #19
              0d97 c219  st   [$19]       4011  st([v6502_BI])                  #20 The real 6502 wouldn't use BI for this
              0d98 0127  ld   [$27]       4012  ld([v6502_P])                   #21 Transfer bit 0 to C
              0d99 20fe  anda $fe         4013  anda(~1)                        #22
              0d9a c227  st   [$27]       4014  st([v6502_P])                   #23
              0d9b 0d00  ld   [y,x]       4015  ld([Y,X])                       #24
              0d9c 2001  anda $01         4016  anda(1)                         #25
              0d9d 4127  ora  [$27]       4017  ora([v6502_P])                  #26
              0d9e c227  st   [$27]       4018  st([v6502_P])                   #27
              0d9f 00c0  ld   $c0         4019  ld('v6502_ror#38')              #28 Shift table lookup
              0da0 c21d  st   [$1d]       4020  st([vTmp])                      #29
              0da1 0d00  ld   [y,x]       4021  ld([Y,X])                       #30
              0da2 20fe  anda $fe         4022  anda(~1)                        #31
              0da3 1405  ld   $05,y       4023  ld(hi('shiftTable'),Y)          #32
              0da4 e200  jmp  y,ac        4024  jmp(Y,AC)                       #33
              0da5 fcff  bra  $ff         4025  bra(255)                        #34 bra shiftTable+255
                                          4026  label('.recheck17')
.recheck17:   0da6 140e  ld   $0e,y       4027  ld(hi('v6502_check'),Y)         #17 Go back to time check before dispatch
              0da7 e0f2  jmp  y,$f2       4028  jmp(Y,'v6502_check')            #18
              0da8 00f6  ld   $f6         4029  ld(-20/2)                       #19
                                          4030
                                          4031  label('v6502_lsr')
                                          4032  assert v6502_Cflag == 1
v6502_lsr:    0da9 1525  ld   [$25],y     4033  ld([v6502_ADH],Y)               #12
              0daa 0127  ld   [$27]       4034  ld([v6502_P])                   #13 Transfer bit 0 to C
              0dab 20fe  anda $fe         4035  anda(~1)                        #14
              0dac c227  st   [$27]       4036  st([v6502_P])                   #15
              0dad 0d00  ld   [y,x]       4037  ld([Y,X])                       #16
              0dae 2001  anda $01         4038  anda(1)                         #17
              0daf 4127  ora  [$27]       4039  ora([v6502_P])                  #18
              0db0 c227  st   [$27]       4040  st([v6502_P])                   #19
              0db1 00b9  ld   $b9         4041  ld('v6502_lsr#30')              #20 Shift table lookup
              0db2 c21d  st   [$1d]       4042  st([vTmp])                      #21
              0db3 0d00  ld   [y,x]       4043  ld([Y,X])                       #22
              0db4 20fe  anda $fe         4044  anda(~1)                        #23
              0db5 1405  ld   $05,y       4045  ld(hi('shiftTable'),Y)          #24
              0db6 e200  jmp  y,ac        4046  jmp(Y,AC)                       #25
              0db7 fcff  bra  $ff         4047  bra(255)                        #26 bra shiftTable+255
                                          4048
                                          4049  label('v6502_rol')
                                          4050  assert v6502_Cflag == 1
v6502_rol:    0db8 1525  ld   [$25],y     4051  ld([v6502_ADH],Y)               #12
              0db9 0d00  ld   [y,x]       4052  ld([Y,X])                       #13
              0dba 2080  anda $80         4053  anda(0x80)                      #14
              0dbb c21d  st   [$1d]       4054  st([v6502_Tmp])                 #15
              0dbc 0127  ld   [$27]       4055  ld([v6502_P])                   #16
              0dbd 2001  anda $01         4056  anda(1)                         #17
                                          4057  label('.rol#18')
.rol#18:      0dbe 8d00  adda [y,x]       4058  adda([Y,X])                     #18
              0dbf 8d00  adda [y,x]       4059  adda([Y,X])                     #19
              0dc0 ce00  st   [y,x]       4060  st([Y,X])                       #20
              0dc1 c228  st   [$28]       4061  st([v6502_Qz])                  #21 Z flag
              0dc2 c229  st   [$29]       4062  st([v6502_Qn])                  #22 N flag
              0dc3 0127  ld   [$27]       4063  ld([v6502_P])                   #23 C Flag
              0dc4 20fe  anda $fe         4064  anda(~1)                        #24
              0dc5 111d  ld   [$1d],x     4065  ld([v6502_Tmp],X)               #25
              0dc6 4500  ora  [x]         4066  ora([X])                        #26
              0dc7 c227  st   [$27]       4067  st([v6502_P])                   #27
              0dc8 140e  ld   $0e,y       4068  ld(hi('v6502_next'),Y)          #28
              0dc9 00f0  ld   $f0         4069  ld(-32/2)                       #29
              0dca e020  jmp  y,$20       4070  jmp(Y,'v6502_next')             #30
                                          4071  #nop()                          #31 Overlap
                                          4072  #
                                          4073  label('v6502_asl')
v6502_asl:    0dcb 1525  ld   [$25],y     4074  ld([v6502_ADH],Y)               #12,32
              0dcc 0d00  ld   [y,x]       4075  ld([Y,X])                       #13
              0dcd 2080  anda $80         4076  anda(0x80)                      #14
              0dce c21d  st   [$1d]       4077  st([v6502_Tmp])                 #15
              0dcf fcbe  bra  .rol#18     4078  bra('.rol#18')                  #16
              0dd0 0000  ld   $00         4079  ld(0)                           #17
                                          4080
                                          4081  label('v6502_jmp1')
v6502_jmp1:   0dd1 0200  nop              4082  nop()                           #12
              0dd2 0124  ld   [$24]       4083  ld([v6502_ADL])                 #13
              0dd3 c21a  st   [$1a]       4084  st([v6502_PCL])                 #14
              0dd4 0125  ld   [$25]       4085  ld([v6502_ADH])                 #15
              0dd5 c21b  st   [$1b]       4086  st([v6502_PCH])                 #16
              0dd6 140e  ld   $0e,y       4087  ld(hi('v6502_next'),Y)          #17
              0dd7 e020  jmp  y,$20       4088  jmp(Y,'v6502_next')             #18
              0dd8 00f6  ld   $f6         4089  ld(-20/2)                       #19
                                          4090
                                          4091  label('v6502_jmp2')
v6502_jmp2:   0dd9 0200  nop              4092  nop()                           #12
              0dda 1525  ld   [$25],y     4093  ld([v6502_ADH],Y)               #13
              0ddb 0d00  ld   [y,x]       4094  ld([Y,X])                       #14
              0ddc de00  st   [y,x++]     4095  st([Y,Xpp])                     #15 (Just X++) Wrap around: bug compatible with NMOS
              0ddd c21a  st   [$1a]       4096  st([v6502_PCL])                 #16
              0dde 0d00  ld   [y,x]       4097  ld([Y,X])                       #17
              0ddf c21b  st   [$1b]       4098  st([v6502_PCH])                 #18
              0de0 140e  ld   $0e,y       4099  ld(hi('v6502_next'),Y)          #19
              0de1 e020  jmp  y,$20       4100  jmp(Y,'v6502_next')             #20
              0de2 00f5  ld   $f5         4101  ld(-22/2)                       #21
                                          4102
                                          4103  label('v6502_pla')
v6502_pla:    0de3 011c  ld   [$1c]       4104  ld([v6502_S])                   #12
              0de4 1200  ld   ac,x        4105  ld(AC,X)                        #13
              0de5 8001  adda $01         4106  adda(1)                         #14
              0de6 c21c  st   [$1c]       4107  st([v6502_S])                   #15
              0de7 0500  ld   [x]         4108  ld([X])                         #16
              0de8 c218  st   [$18]       4109  st([v6502_A])                   #17
              0de9 c228  st   [$28]       4110  st([v6502_Qz])                  #18 Z flag
              0dea c229  st   [$29]       4111  st([v6502_Qn])                  #19 N flag
              0deb 140e  ld   $0e,y       4112  ld(hi('v6502_next'),Y)          #20
              0dec 00f4  ld   $f4         4113  ld(-24/2)                       #21
              0ded e020  jmp  y,$20       4114  jmp(Y,'v6502_next')             #22
                                          4115  #nop()                          #23 Overlap
                                          4116  #
                                          4117  label('v6502_pha')
v6502_pha:    0dee 140e  ld   $0e,y       4118  ld(hi('v6502_next'),Y)          #12,24
              0def 011c  ld   [$1c]       4119  ld([v6502_S])                   #13
              0df0 a001  suba $01         4120  suba(1)                         #14
              0df1 d21c  st   [$1c],x     4121  st([v6502_S],X)                 #15
              0df2 0118  ld   [$18]       4122  ld([v6502_A])                   #16
              0df3 c600  st   [x]         4123  st([X])                         #17
              0df4 e020  jmp  y,$20       4124  jmp(Y,'v6502_next')             #18
              0df5 00f6  ld   $f6         4125  ld(-20/2)                       #19
                                          4126
                                          4127  label('v6502_brk')
v6502_brk:    0df6 0002  ld   $02         4128  ld(hi('ENTER'))                 #12 Switch to vCPU
              0df7 c202  st   [$02]       4129  st([vCpuSelect])                #13
                                          4130  assert v6502_A == vAC
              0df8 0000  ld   $00         4131  ld(0)                           #14
              0df9 c219  st   [$19]       4132  st([vAC+1])                     #15
              0dfa 1403  ld   $03,y       4133  ld(hi('REENTER'),Y)             #16 Switch in the current time slice
              0dfb 00fa  ld   $fa         4134  ld(-22//2+v6502_adjust)         #17
              0dfc e0cb  jmp  y,$cb       4135  jmp(Y,'REENTER')                #18
              0dfd 0200  nop              4136  nop()                           #19
                                          4137
                                          4138  # All interpreter entry points must share the same page offset, because
                                          4139  # this offset is hard-coded as immediate operand in the video driver.
                                          4140  # The Gigatron's original vCPU's 'ENTER' label is already at $2ff, so we
                                          4141  # just use $dff for 'v6502_ENTER'. v6502 actually has two entry points.
                                          4142  # The other is 'v6502_RESUME' at $10ff. It is used for instructions
                                          4143  # that were fetched but not yet executed. Allowing the split gives finer
                                          4144  # granulariy, and hopefully more throughput for the simpler instructions.
                                          4145  # (There is no "overhead" for allowing instruction splitting, because
                                          4146  #  both emulation phases must administer [vTicks] anyway.)
                                          4147  while pc()&255 < 255:
              0dfe 0200  nop              4148    nop()
                                          4149  label('v6502_ENTER')
v6502_ENTER:  0dff fc22  bra  v6502_next2 4150  bra('v6502_next2')              #0 v6502 primary entry point
                                          4151  # --- Page boundary ---
              0e00 a005  suba $05         4152  suba(v6502_adjust)              #1,19 Adjust for vCPU/v6520 timing differences
                                          4153
                                          4154  #19 Addressing modes
                                          4155  (   'v6502_mode0'  ); bra('v6502_modeIZX'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $00 xxx000xx
              0e01 fce0  bra  v6502_modeIZX
              0e02 fc42  bra  v6502_modeIMM
              0e03 fc58  bra  v6502_modeIMP
                                          4156  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeILL') # $04 xxx001xx
              0e04 fc5d  bra  v6502_modeZP
              0e05 fc5d  bra  v6502_modeZP
              0e06 fc5d  bra  v6502_modeZP
              0e07 fc58  bra  v6502_modeIMP
                                          4157  bra('v6502_modeIMP'); bra('v6502_modeIMM'); bra('v6502_modeACC'); bra('v6502_modeILL') # $08 xxx010xx
              0e08 fc58  bra  v6502_modeIMP
              0e09 fc42  bra  v6502_modeIMM
              0e0a fc52  bra  v6502_modeACC
              0e0b fc58  bra  v6502_modeIMP
                                          4158  bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeILL') # $0c xxx011xx
              0e0c fc78  bra  v6502_modeABS
              0e0d fc78  bra  v6502_modeABS
              0e0e fc78  bra  v6502_modeABS
              0e0f fc58  bra  v6502_modeIMP
                                          4159  bra('v6502_modeREL'); bra('v6502_modeIZY'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $10 xxx100xx
              0e10 fccf  bra  v6502_modeREL
              0e11 fcab  bra  v6502_modeIZY
              0e12 fc42  bra  v6502_modeIMM
              0e13 fc58  bra  v6502_modeIMP
                                          4160  bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeILL') # $14 xxx101xx
              0e14 fc5b  bra  v6502_modeZPX
              0e15 fc5b  bra  v6502_modeZPX
              0e16 fc5b  bra  v6502_modeZPX
              0e17 fc58  bra  v6502_modeIMP
                                          4161  bra('v6502_modeIMP'); bra('v6502_modeABY'); bra('v6502_modeIMP'); bra('v6502_modeILL') # $18 xxx110xx
              0e18 fc58  bra  v6502_modeIMP
              0e19 fc7b  bra  v6502_modeABY
              0e1a fc58  bra  v6502_modeIMP
              0e1b fc58  bra  v6502_modeIMP
                                          4162  bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeILL') # $1c xxx111xx
              0e1c fc7a  bra  v6502_modeABX
              0e1d fc7a  bra  v6502_modeABX
              0e1e fc7a  bra  v6502_modeABX
              0e1f fc58  bra  v6502_modeIMP
                                          4163
                                          4164  # Special encoding cases for emulator:
                                          4165  #     $00 BRK -         but gets mapped to #$DD      handled in v6502_mode0
                                          4166  #     $20 JSR $DDDD     but gets mapped to #$DD      handled in v6502_mode0 and v6502_JSR
                                          4167  #     $40 RTI -         but gets mapped to #$DD      handled in v6502_mode0
                                          4168  #     $60 RTS -         but gets mapped to #$DD      handled in v6502_mode0
                                          4169  #     $6C JMP ($DDDD)   but gets mapped to $DDDD     handled in v6502_JMP2
                                          4170  #     $96 STX $DD,Y     but gets mapped to $DD,X     handled in v6502_STX2
                                          4171  #     $B6 LDX $DD,Y     but gets mapped to $DD,X     handled in v6502_LDX2
                                          4172  #     $BE LDX $DDDD,Y   but gets mapped to $DDDD,X   handled in v6502_modeABX
                                          4173
                                          4174  label('v6502_next')
v6502_next:   0e20 8115  adda [$15]       4175  adda([vTicks])                  #0
                                          4176  blt('v6502_exitBefore')         #1 No more ticks
              0e21 e83a  blt  v6502_exitBefore
                                          4177  label('v6502_next2')
v6502_next2:  0e22 c215  st   [$15]       4178  st([vTicks])                    #2
                                          4179  #
                                          4180  # Fetch opcode
              0e23 111a  ld   [$1a],x     4181  ld([v6502_PCL],X)               #3
              0e24 151b  ld   [$1b],y     4182  ld([v6502_PCH],Y)               #4
              0e25 0d00  ld   [y,x]       4183  ld([Y,X])                       #5 Fetch IR
              0e26 c226  st   [$26]       4184  st([v6502_IR])                  #6
              0e27 011a  ld   [$1a]       4185  ld([v6502_PCL])                 #7 PC++
              0e28 8001  adda $01         4186  adda(1)                         #8
              0e29 d21a  st   [$1a],x     4187  st([v6502_PCL],X)               #9
              0e2a f02d  beq  $0e2d       4188  beq(pc()+3)                     #10
              0e2b fc2e  bra  $0e2e       4189  bra(pc()+3)                     #11
              0e2c 0000  ld   $00         4190  ld(0)                           #12
              0e2d 0001  ld   $01         4191  ld(1)                           #12(!)
              0e2e 811b  adda [$1b]       4192  adda([v6502_PCH])               #13
              0e2f d61b  st   [$1b],y     4193  st([v6502_PCH],Y)               #14
                                          4194  #
                                          4195  # Get addressing mode and fetch operands
              0e30 0126  ld   [$26]       4196  ld([v6502_IR])                  #15 Get addressing mode
              0e31 201f  anda $1f         4197  anda(31)                        #16
              0e32 fe00  bra  ac          4198  bra(AC)                         #17
              0e33 fc34  bra  .next20     4199  bra('.next20')                  #18
                                          4200  # (jump table)                  #19
                                          4201  label('.next20')
.next20:      0e34 0d00  ld   [y,x]       4202  ld([Y,X])                       #20 Fetch L
                                          4203  # Most opcodes branch away at this point, but IR & 31 == 0 falls through
                                          4204  #
                                          4205  # Implicit Mode for  BRK JSR RTI RTS (<  0x80) -- 26 cycles
                                          4206  # Immediate Mode for LDY CPY CPX     (>= 0x80) -- 36 cycles
                                          4207  label('v6502_mode0')
v6502_mode0:  0e35 0126  ld   [$26]       4208  ld([v6502_IR])                  #21 'xxx0000'
              0e36 e845  blt  .imm24      4209  bmi('.imm24')                   #22
              0e37 011b  ld   [$1b]       4210  ld([v6502_PCH])                 #23
              0e38 fcf2  bra  v6502_check 4211  bra('v6502_check')              #24
              0e39 00f3  ld   $f3         4212  ld(-26/2)                       #25
                                          4213
                                          4214  # Resync with video driver. At this point we're returning BEFORE
                                          4215  # fetching and executing the next instruction.
                                          4216  label('v6502_exitBefore')
v6502_exitBefore:
              0e3a 8013  adda $13         4217  adda(v6502_maxTicks)            #3 Exit BEFORE fetch
              0e3b e43b  bgt  $0e3b       4218  bgt(pc()&255)                   #4 Resync
              0e3c a001  suba $01         4219  suba(1)                         #5
              0e3d 000d  ld   $0d         4220  ld(hi('v6502_ENTER'))           #6 Set entry point to before 'fetch'
              0e3e c202  st   [$02]       4221  st([vCpuSelect])                #7
              0e3f 1401  ld   $01,y       4222  ld(hi('vBlankStart'),Y)         #8
              0e40 e11e  jmp  y,[$1e]     4223  jmp(Y,[vReturn])                #9 To video driver
              0e41 0000  ld   $00         4224  ld(0)                           #10
                                          4225  assert v6502_overhead ==         11
                                          4226
                                          4227  # Immediate Mode: #$FF -- 36 cycles
                                          4228  label('v6502_modeIMM')
v6502_modeIMM:
              0e42 0200  nop              4229  nop()                           #21 Wait for v6502_mode0 to join
              0e43 0200  nop              4230  nop()                           #22
              0e44 011b  ld   [$1b]       4231  ld([v6502_PCH])                 #23 Copy PC
                                          4232  label('.imm24')
.imm24:       0e45 c225  st   [$25]       4233  st([v6502_ADH])                 #24
              0e46 011a  ld   [$1a]       4234  ld([v6502_PCL])                 #25
              0e47 d224  st   [$24],x     4235  st([v6502_ADL],X)               #26
              0e48 8001  adda $01         4236  adda(1)                         #27 PC++
              0e49 c21a  st   [$1a]       4237  st([v6502_PCL])                 #28
              0e4a f04d  beq  $0e4d       4238  beq(pc()+3)                     #29
              0e4b fc4e  bra  $0e4e       4239  bra(pc()+3)                     #30
              0e4c 0000  ld   $00         4240  ld(0)                           #31
              0e4d 0001  ld   $01         4241  ld(1)                           #31(!)
              0e4e 811b  adda [$1b]       4242  adda([v6502_PCH])               #32
              0e4f c21b  st   [$1b]       4243  st([v6502_PCH])                 #33
              0e50 fcf2  bra  v6502_check 4244  bra('v6502_check')              #34
              0e51 00ee  ld   $ee         4245  ld(-36/2)                       #35
                                          4246
                                          4247  # Accumulator Mode: ROL ROR LSL ASR -- 28 cycles
                                          4248  label('v6502_modeACC')
v6502_modeACC:
              0e52 0018  ld   $18         4249  ld(v6502_A&255)                 #21 Address of AC
              0e53 d224  st   [$24],x     4250  st([v6502_ADL],X)               #22
              0e54 0000  ld   $00         4251  ld(v6502_A>>8)                  #23
              0e55 c225  st   [$25]       4252  st([v6502_ADH])                 #24
              0e56 00f2  ld   $f2         4253  ld(-28/2)                       #25
              0e57 fcf2  bra  v6502_check 4254  bra('v6502_check')              #26
                                          4255  #nop()                          #27 Overlap
                                          4256  #
                                          4257  # Implied Mode: no operand -- 24 cycles
                                          4258  label('v6502_modeILL')
                                          4259  label('v6502_modeIMP')
v6502_modeILL:
v6502_modeIMP:
              0e58 0200  nop              4260  nop()                           #21,27
              0e59 fcf2  bra  v6502_check 4261  bra('v6502_check')              #22
              0e5a 00f4  ld   $f4         4262  ld(-24/2)                       #23
                                          4263
                                          4264  # Zero Page Modes: $DD $DD,X $DD,Y -- 36 cycles
                                          4265  label('v6502_modeZPX')
v6502_modeZPX:
              0e5b fc5f  bra  .zp23       4266  bra('.zp23')                    #21
              0e5c 812a  adda [$2a]       4267  adda([v6502_X])                 #22
                                          4268  label('v6502_modeZP')
v6502_modeZP: 0e5d fc5f  bra  .zp23       4269  bra('.zp23')                    #21
              0e5e 0200  nop              4270  nop()                           #22
                                          4271  label('.zp23')
.zp23:        0e5f d224  st   [$24],x     4272  st([v6502_ADL],X)               #23
              0e60 0000  ld   $00         4273  ld(0)                           #24 H=0
              0e61 c225  st   [$25]       4274  st([v6502_ADH])                 #25
              0e62 0001  ld   $01         4275  ld(1)                           #26 PC++
              0e63 811a  adda [$1a]       4276  adda([v6502_PCL])               #27
              0e64 c21a  st   [$1a]       4277  st([v6502_PCL])                 #28
              0e65 f068  beq  $0e68       4278  beq(pc()+3)                     #29
              0e66 fc69  bra  $0e69       4279  bra(pc()+3)                     #30
              0e67 0000  ld   $00         4280  ld(0)                           #31
              0e68 0001  ld   $01         4281  ld(1)                           #31(!)
              0e69 811b  adda [$1b]       4282  adda([v6502_PCH])               #32
              0e6a c21b  st   [$1b]       4283  st([v6502_PCH])                 #33
              0e6b fcf2  bra  v6502_check 4284  bra('v6502_check')              #34
              0e6c 00ee  ld   $ee         4285  ld(-36/2)                       #35
                                          4286
                                          4287  # Possible retry loop for modeABS and modeIZY. Because these need
                                          4288  # more time than the v6502_maxTicks of 38 Gigatron cycles, we may
                                          4289  # have to restart them after the next horizontal pulse.
                                          4290  label('.retry28')
.retry28:     0e6d f070  beq  $0e70       4291  beq(pc()+3)                     #28,37 PC--
              0e6e fc71  bra  $0e71       4292  bra(pc()+3)                     #29
              0e6f 0000  ld   $00         4293  ld(0)                           #30
              0e70 00ff  ld   $ff         4294  ld(-1)                          #30(!)
              0e71 811b  adda [$1b]       4295  adda([v6502_PCH])               #31
              0e72 c21b  st   [$1b]       4296  st([v6502_PCH])                 #32
              0e73 011a  ld   [$1a]       4297  ld([v6502_PCL])                 #33
              0e74 a001  suba $01         4298  suba(1)                         #34
              0e75 c21a  st   [$1a]       4299  st([v6502_PCL])                 #35
              0e76 fc20  bra  v6502_next  4300  bra('v6502_next')               #36 Retry until sufficient time
              0e77 00ed  ld   $ed         4301  ld(-38/2)                       #37
                                          4302
                                          4303  # Absolute Modes: $DDDD $DDDD,X $DDDD,Y -- 64 cycles
                                          4304  label('v6502_modeABS')
v6502_modeABS:
              0e78 fc7d  bra  .abs23      4305  bra('.abs23')                   #21
              0e79 0000  ld   $00         4306  ld(0)                           #22
                                          4307  label('v6502_modeABX')
v6502_modeABX:
              0e7a fc7d  bra  .abs23      4308  bra('.abs23')                   #21
                                          4309  label('v6502_modeABY')
v6502_modeABY:
              0e7b 012a  ld   [$2a]       4310  ld([v6502_X])                   #21,22
              0e7c 012b  ld   [$2b]       4311  ld([v6502_Y])                   #22
                                          4312  label('.abs23')
.abs23:       0e7d c224  st   [$24]       4313  st([v6502_ADL])                 #23
              0e7e 00f3  ld   $f3         4314  ld(-64//2+v6502_maxTicks)       #24 Is there enough time for the excess ticks?
              0e7f 8115  adda [$15]       4315  adda([vTicks])                  #25
              0e80 e86d  blt  .retry28    4316  blt('.retry28')                 #26
              0e81 011a  ld   [$1a]       4317  ld([v6502_PCL])                 #27
              0e82 0126  ld   [$26]       4318  ld([v6502_IR])                  #28 Special case $BE: LDX $DDDD,Y (we got X in ADL)
              0e83 60be  xora $be         4319  xora(0xbe)                      #29
              0e84 f087  beq  $0e87       4320  beq(pc()+3)                     #30
              0e85 fc88  bra  $0e88       4321  bra(pc()+3)                     #31
              0e86 0124  ld   [$24]       4322  ld([v6502_ADL])                 #32
              0e87 012b  ld   [$2b]       4323  ld([v6502_Y])                   #32(!)
              0e88 8d00  adda [y,x]       4324  adda([Y,X])                     #33 Fetch and add L
              0e89 c224  st   [$24]       4325  st([v6502_ADL])                 #34
              0e8a e88e  blt  .abs37      4326  bmi('.abs37')                   #35 Carry?
              0e8b ad00  suba [y,x]       4327  suba([Y,X])                     #36 Gets back original operand
              0e8c fc90  bra  .abs39      4328  bra('.abs39')                   #37
              0e8d 4d00  ora  [y,x]       4329  ora([Y,X])                      #38 Carry in bit 7
                                          4330  label('.abs37')
.abs37:       0e8e 2d00  anda [y,x]       4331  anda([Y,X])                     #37 Carry in bit 7
              0e8f 0200  nop              4332  nop()                           #38
                                          4333  label('.abs39')
.abs39:       0e90 3080  anda $80,x       4334  anda(0x80,X)                    #39 Move carry to bit 0
              0e91 0500  ld   [x]         4335  ld([X])                         #40
              0e92 c225  st   [$25]       4336  st([v6502_ADH])                 #41
              0e93 011a  ld   [$1a]       4337  ld([v6502_PCL])                 #42 PC++
              0e94 8001  adda $01         4338  adda(1)                         #43
              0e95 d21a  st   [$1a],x     4339  st([v6502_PCL],X)               #44
              0e96 f099  beq  $0e99       4340  beq(pc()+3)                     #45
              0e97 fc9a  bra  $0e9a       4341  bra(pc()+3)                     #46
              0e98 0000  ld   $00         4342  ld(0)                           #47
              0e99 0001  ld   $01         4343  ld(1)                           #47(!)
              0e9a 811b  adda [$1b]       4344  adda([v6502_PCH])               #48
              0e9b d61b  st   [$1b],y     4345  st([v6502_PCH],Y)               #49
              0e9c 0d00  ld   [y,x]       4346  ld([Y,X])                       #50 Fetch H
              0e9d 8125  adda [$25]       4347  adda([v6502_ADH])               #51
              0e9e c225  st   [$25]       4348  st([v6502_ADH])                 #52
              0e9f 011a  ld   [$1a]       4349  ld([v6502_PCL])                 #53 PC++
              0ea0 8001  adda $01         4350  adda(1)                         #54
              0ea1 c21a  st   [$1a]       4351  st([v6502_PCL])                 #55
              0ea2 f0a5  beq  $0ea5       4352  beq(pc()+3)                     #56
              0ea3 fca6  bra  $0ea6       4353  bra(pc()+3)                     #57
              0ea4 0000  ld   $00         4354  ld(0)                           #58
              0ea5 0001  ld   $01         4355  ld(1)                           #58(!)
              0ea6 811b  adda [$1b]       4356  adda([v6502_PCH])               #59
              0ea7 c21b  st   [$1b]       4357  st([v6502_PCH])                 #60
              0ea8 1124  ld   [$24],x     4358  ld([v6502_ADL],X)               #61
              0ea9 fcf2  bra  v6502_check 4359  bra('v6502_check')              #62
              0eaa 00e0  ld   $e0         4360  ld(-64/2)                       #63
                                          4361
                                          4362  # Indirect Indexed Mode: ($DD),Y -- 54 cycles
                                          4363  label('v6502_modeIZY')
v6502_modeIZY:
              0eab 1200  ld   ac,x        4364  ld(AC,X)                        #21 $DD
              0eac 1400  ld   $00,y       4365  ld(0,Y)                         #22 $00DD
              0ead 00f8  ld   $f8         4366  ld(-54//2+v6502_maxTicks)       #23 Is there enough time for the excess ticks?
              0eae 8115  adda [$15]       4367  adda([vTicks])                  #24
              0eaf 0200  nop              4368  nop()                           #25
              0eb0 e86d  blt  .retry28    4369  blt('.retry28')                 #26
              0eb1 011a  ld   [$1a]       4370  ld([v6502_PCL])                 #27
              0eb2 8001  adda $01         4371  adda(1)                         #28 PC++
              0eb3 c21a  st   [$1a]       4372  st([v6502_PCL])                 #29
              0eb4 f0b7  beq  $0eb7       4373  beq(pc()+3)                     #30
              0eb5 fcb8  bra  $0eb8       4374  bra(pc()+3)                     #31
              0eb6 0000  ld   $00         4375  ld(0)                           #32
              0eb7 0001  ld   $01         4376  ld(1)                           #32(!)
              0eb8 811b  adda [$1b]       4377  adda([v6502_PCH])               #33
              0eb9 c21b  st   [$1b]       4378  st([v6502_PCH])                 #34
              0eba 0d00  ld   [y,x]       4379  ld([Y,X])                       #35 Read word from zero-page
              0ebb de00  st   [y,x++]     4380  st([Y,Xpp])                     #36 (Just X++) Wrap-around is correct
              0ebc c224  st   [$24]       4381  st([v6502_ADL])                 #37
              0ebd 0d00  ld   [y,x]       4382  ld([Y,X])                       #38
              0ebe c225  st   [$25]       4383  st([v6502_ADH])                 #39
              0ebf 012b  ld   [$2b]       4384  ld([v6502_Y])                   #40 Add Y
              0ec0 8124  adda [$24]       4385  adda([v6502_ADL])               #41
              0ec1 c224  st   [$24]       4386  st([v6502_ADL])                 #42
              0ec2 e8c6  blt  .izy45      4387  bmi('.izy45')                   #43 Carry?
              0ec3 a12b  suba [$2b]       4388  suba([v6502_Y])                 #44 Gets back original operand
              0ec4 fcc8  bra  .izy47      4389  bra('.izy47')                   #45
              0ec5 412b  ora  [$2b]       4390  ora([v6502_Y])                  #46 Carry in bit 7
                                          4391  label('.izy45')
.izy45:       0ec6 212b  anda [$2b]       4392  anda([v6502_Y])                 #45 Carry in bit 7
              0ec7 0200  nop              4393  nop()                           #46
                                          4394  label('.izy47')
.izy47:       0ec8 3080  anda $80,x       4395  anda(0x80,X)                    #47 Move carry to bit 0
              0ec9 0500  ld   [x]         4396  ld([X])                         #48
              0eca 8125  adda [$25]       4397  adda([v6502_ADH])               #49
              0ecb c225  st   [$25]       4398  st([v6502_ADH])                 #50
              0ecc 1124  ld   [$24],x     4399  ld([v6502_ADL],X)               #51
              0ecd fcf2  bra  v6502_check 4400  bra('v6502_check')              #52
              0ece 00e5  ld   $e5         4401  ld(-54/2)                       #53
                                          4402
                                          4403  # Relative Mode: BEQ BNE BPL BMI BCC BCS BVC BVS -- 36 cycles
                                          4404  label('v6502_modeREL')
v6502_modeREL:
              0ecf d224  st   [$24],x     4405  st([v6502_ADL],X)               #21 Offset (Only needed for branch)
              0ed0 e8d3  blt  $0ed3       4406  bmi(pc()+3)                     #22 Sign extend
              0ed1 fcd4  bra  $0ed4       4407  bra(pc()+3)                     #23
              0ed2 0000  ld   $00         4408  ld(0)                           #24
              0ed3 00ff  ld   $ff         4409  ld(255)                         #24(!)
              0ed4 c225  st   [$25]       4410  st([v6502_ADH])                 #25
              0ed5 011a  ld   [$1a]       4411  ld([v6502_PCL])                 #26 PC++ (Needed for both cases)
              0ed6 8001  adda $01         4412  adda(1)                         #27
              0ed7 c21a  st   [$1a]       4413  st([v6502_PCL])                 #28
              0ed8 f0db  beq  $0edb       4414  beq(pc()+3)                     #29
              0ed9 fcdc  bra  $0edc       4415  bra(pc()+3)                     #30
              0eda 0000  ld   $00         4416  ld(0)                           #31
              0edb 0001  ld   $01         4417  ld(1)                           #31(!)
              0edc 811b  adda [$1b]       4418  adda([v6502_PCH])               #32
              0edd c21b  st   [$1b]       4419  st([v6502_PCH])                 #33
              0ede fcf2  bra  v6502_check 4420  bra('v6502_check')              #34
              0edf 00ee  ld   $ee         4421  ld(-36/2)                       #53
                                          4422
                                          4423  # Indexed Indirect Mode: ($DD,X) -- 38 cycles
                                          4424  label('v6502_modeIZX')
v6502_modeIZX:
              0ee0 812a  adda [$2a]       4425  adda([v6502_X])                 #21 Add X
              0ee1 c21d  st   [$1d]       4426  st([v6502_Tmp])                 #22
              0ee2 9001  adda $01,x       4427  adda(1,X)                       #23 Read word from zero-page
              0ee3 0500  ld   [x]         4428  ld([X])                         #24
              0ee4 c225  st   [$25]       4429  st([v6502_ADH])                 #25
              0ee5 111d  ld   [$1d],x     4430  ld([v6502_Tmp],X)               #26
              0ee6 0500  ld   [x]         4431  ld([X])                         #27
              0ee7 d224  st   [$24],x     4432  st([v6502_ADL],X)               #28
              0ee8 011a  ld   [$1a]       4433  ld([v6502_PCL])                 #29 PC++
              0ee9 8001  adda $01         4434  adda(1)                         #30
              0eea c21a  st   [$1a]       4435  st([v6502_PCL])                 #31
              0eeb f0ee  beq  $0eee       4436  beq(pc()+3)                     #32
              0eec fcef  bra  $0eef       4437  bra(pc()+3)                     #33
              0eed 0000  ld   $00         4438  ld(0)                           #34
              0eee 0001  ld   $01         4439  ld(1)                           #34(!)
              0eef 811b  adda [$1b]       4440  adda([v6502_PCH])               #35
              0ef0 c21b  st   [$1b]       4441  st([v6502_PCH])                 #36
              0ef1 00ed  ld   $ed         4442  ld(-38/2)                       #37 !!! Fall through to v6502_check !!!
                                          4443  #
                                          4444  # Update elapsed time for the addressing mode processing.
                                          4445  # Then check if we can immediately execute this instruction.
                                          4446  # Otherwise transfer control to the video driver.
                                          4447  label('v6502_check')
v6502_check:  0ef2 8115  adda [$15]       4448  adda([vTicks])                  #0
                                          4449  blt('v6502_exitAfter')          #1 No more ticks
              0ef3 e8f8  blt  v6502_exitAfter
              0ef4 c215  st   [$15]       4450  st([vTicks])                    #2
              0ef5 140f  ld   $0f,y       4451  ld(hi('v6502_execute'),Y)       #3
              0ef6 e126  jmp  y,[$26]     4452  jmp(Y,[v6502_IR])               #4
              0ef7 fcff  bra  $ff         4453  bra(255)                        #5
                                          4454
                                          4455  # Otherwise resync with video driver. At this point we're returning AFTER
                                          4456  # addressing mode decoding, but before executing the instruction.
                                          4457  label('v6502_exitAfter')
v6502_exitAfter:
              0ef8 8013  adda $13         4458  adda(v6502_maxTicks)            #3 Exit AFTER fetch
              0ef9 e4f9  bgt  $0ef9       4459  bgt(pc()&255)                   #4 Resync
              0efa a001  suba $01         4460  suba(1)                         #5
              0efb 0010  ld   $10         4461  ld(hi('v6502_RESUME'))          #6 Set entry point to before 'execute'
              0efc c202  st   [$02]       4462  st([vCpuSelect])                #7
              0efd 1401  ld   $01,y       4463  ld(hi('vBlankStart'),Y)         #8
              0efe e11e  jmp  y,[$1e]     4464  jmp(Y,[vReturn])                #9 To video driver
              0eff 0000  ld   $00         4465  ld(0)                           #10
                                          4466  assert v6502_overhead ==         11
                                          4467
                                          4468  align(0x100,size=0x100)
                                          4469  label('v6502_execute')
                                          4470  # This page works as a 255-entry (0..254) jump table for 6502 opcodes.
                                          4471  # Jumping into this page must have 'bra 255' in the branch delay slot
                                          4472  # in order to get out again and dispatch to the right continuation.
                                          4473  # X must hold [v6502_ADL],
                                          4474  # Y will hold hi('v6502_execute'),
                                          4475  # A will be loaded with the code offset (this is skipped at offset $ff)
v6502_execute:
              0f00 00fd  ld   $fd         4476  ld('v6502_BRK'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $00
              0f01 0089  ld   $89
              0f02 00fd  ld   $fd
              0f03 00fd  ld   $fd
              0f04 00fd  ld   $fd         4477  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f05 0089  ld   $89
              0f06 00f1  ld   $f1
              0f07 00fd  ld   $fd
              0f08 00f3  ld   $f3         4478  ld('v6502_PHP'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f09 0089  ld   $89
              0f0a 00f1  ld   $f1
              0f0b 00fd  ld   $fd
              0f0c 00fd  ld   $fd         4479  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f0d 0089  ld   $89
              0f0e 00f1  ld   $f1
              0f0f 00fd  ld   $fd
              0f10 003f  ld   $3f         4480  ld('v6502_BPL'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $10
              0f11 0089  ld   $89
              0f12 00fd  ld   $fd
              0f13 00fd  ld   $fd
              0f14 00fd  ld   $fd         4481  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f15 0089  ld   $89
              0f16 00f1  ld   $f1
              0f17 00fd  ld   $fd
              0f18 0036  ld   $36         4482  ld('v6502_CLC'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f19 0089  ld   $89
              0f1a 00fd  ld   $fd
              0f1b 00fd  ld   $fd
              0f1c 00fd  ld   $fd         4483  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f1d 0089  ld   $89
              0f1e 00f1  ld   $f1
              0f1f 00fd  ld   $fd
              0f20 009a  ld   $9a         4484  ld('v6502_JSR'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $20
              0f21 0085  ld   $85
              0f22 00fd  ld   $fd
              0f23 00fd  ld   $fd
              0f24 00f5  ld   $f5         4485  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f25 0085  ld   $85
              0f26 00f7  ld   $f7
              0f27 00fd  ld   $fd
              0f28 00f9  ld   $f9         4486  ld('v6502_PLP'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f29 0085  ld   $85
              0f2a 00f7  ld   $f7
              0f2b 00fd  ld   $fd
              0f2c 00f5  ld   $f5         4487  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f2d 0085  ld   $85
              0f2e 00f7  ld   $f7
              0f2f 00fd  ld   $fd
              0f30 0042  ld   $42         4488  ld('v6502_BMI'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $30
              0f31 0085  ld   $85
              0f32 00fd  ld   $fd
              0f33 00fd  ld   $fd
              0f34 00fd  ld   $fd         4489  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f35 0085  ld   $85
              0f36 00f7  ld   $f7
              0f37 00fd  ld   $fd
              0f38 0038  ld   $38         4490  ld('v6502_SEC'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f39 0085  ld   $85
              0f3a 00fd  ld   $fd
              0f3b 00fd  ld   $fd
              0f3c 00fd  ld   $fd         4491  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f3d 0085  ld   $85
              0f3e 00f7  ld   $f7
              0f3f 00fd  ld   $fd
              0f40 00d3  ld   $d3         4492  ld('v6502_RTI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $40
              0f41 008c  ld   $8c
              0f42 00fd  ld   $fd
              0f43 00fd  ld   $fd
              0f44 00fd  ld   $fd         4493  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f45 008c  ld   $8c
              0f46 00d7  ld   $d7
              0f47 00fd  ld   $fd
              0f48 00d9  ld   $d9         4494  ld('v6502_PHA'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f49 008c  ld   $8c
              0f4a 00d7  ld   $d7
              0f4b 00fd  ld   $fd
              0f4c 0096  ld   $96         4495  ld('v6502_JMP1');ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f4d 008c  ld   $8c
              0f4e 00d7  ld   $d7
              0f4f 00fd  ld   $fd
              0f50 0045  ld   $45         4496  ld('v6502_BVC'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $50
              0f51 008c  ld   $8c
              0f52 00fd  ld   $fd
              0f53 00fd  ld   $fd
              0f54 00fd  ld   $fd         4497  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f55 008c  ld   $8c
              0f56 00d7  ld   $d7
              0f57 00fd  ld   $fd
              0f58 00db  ld   $db         4498  ld('v6502_CLI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f59 008c  ld   $8c
              0f5a 00fd  ld   $fd
              0f5b 00fd  ld   $fd
              0f5c 00fd  ld   $fd         4499  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f5d 008c  ld   $8c
              0f5e 00d7  ld   $d7
              0f5f 00fd  ld   $fd
              0f60 00dd  ld   $dd         4500  ld('v6502_RTS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $60
              0f61 0001  ld   $01
              0f62 00fd  ld   $fd
              0f63 00fd  ld   $fd
              0f64 00fd  ld   $fd         4501  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f65 0001  ld   $01
              0f66 00d5  ld   $d5
              0f67 00fd  ld   $fd
              0f68 00df  ld   $df         4502  ld('v6502_PLA'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f69 0001  ld   $01
              0f6a 00d5  ld   $d5
              0f6b 00fd  ld   $fd
              0f6c 0098  ld   $98         4503  ld('v6502_JMP2');ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f6d 0001  ld   $01
              0f6e 00d5  ld   $d5
              0f6f 00fd  ld   $fd
              0f70 0049  ld   $49         4504  ld('v6502_BVS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $70
              0f71 0001  ld   $01
              0f72 00fd  ld   $fd
              0f73 00fd  ld   $fd
              0f74 00fd  ld   $fd         4505  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f75 0001  ld   $01
              0f76 00d5  ld   $d5
              0f77 00fd  ld   $fd
              0f78 00e1  ld   $e1         4506  ld('v6502_SEI'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f79 0001  ld   $01
              0f7a 00fd  ld   $fd
              0f7b 00fd  ld   $fd
              0f7c 00fd  ld   $fd         4507  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f7d 0001  ld   $01
              0f7e 00d5  ld   $d5
              0f7f 00fd  ld   $fd
              0f80 00fd  ld   $fd         4508  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $80
              0f81 00c1  ld   $c1
              0f82 00fd  ld   $fd
              0f83 00fd  ld   $fd
              0f84 00c7  ld   $c7         4509  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f85 00c1  ld   $c1
              0f86 00c3  ld   $c3
              0f87 00fd  ld   $fd
              0f88 007f  ld   $7f         4510  ld('v6502_DEY'); ld('v6502_ILL'); ld('v6502_TXA'); ld('v6502_ILL') #6
              0f89 00fd  ld   $fd
              0f8a 00cd  ld   $cd
              0f8b 00fd  ld   $fd
              0f8c 00c7  ld   $c7         4511  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f8d 00c1  ld   $c1
              0f8e 00c3  ld   $c3
              0f8f 00fd  ld   $fd
              0f90 004d  ld   $4d         4512  ld('v6502_BCC'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $90
              0f91 00c1  ld   $c1
              0f92 00fd  ld   $fd
              0f93 00fd  ld   $fd
              0f94 00c7  ld   $c7         4513  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX2');ld('v6502_ILL') #6
              0f95 00c1  ld   $c1
              0f96 00c5  ld   $c5
              0f97 00fd  ld   $fd
              0f98 00cf  ld   $cf         4514  ld('v6502_TYA'); ld('v6502_STA'); ld('v6502_TXS'); ld('v6502_ILL') #6
              0f99 00c1  ld   $c1
              0f9a 00e3  ld   $e3
              0f9b 00fd  ld   $fd
              0f9c 00fd  ld   $fd         4515  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f9d 00c1  ld   $c1
              0f9e 00fd  ld   $fd
              0f9f 00fd  ld   $fd
              0fa0 00bf  ld   $bf         4516  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6 $A0
              0fa1 00b9  ld   $b9
              0fa2 00bb  ld   $bb
              0fa3 00fd  ld   $fd
              0fa4 00bf  ld   $bf         4517  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fa5 00b9  ld   $b9
              0fa6 00bb  ld   $bb
              0fa7 00fd  ld   $fd
              0fa8 00cb  ld   $cb         4518  ld('v6502_TAY'); ld('v6502_LDA'); ld('v6502_TAX'); ld('v6502_ILL') #6
              0fa9 00b9  ld   $b9
              0faa 00c9  ld   $c9
              0fab 00fd  ld   $fd
              0fac 00bf  ld   $bf         4519  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fad 00b9  ld   $b9
              0fae 00bb  ld   $bb
              0faf 00fd  ld   $fd
              0fb0 0051  ld   $51         4520  ld('v6502_BCS'); ld('v6502_LDA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $B0
              0fb1 00b9  ld   $b9
              0fb2 00fd  ld   $fd
              0fb3 00fd  ld   $fd
              0fb4 00bf  ld   $bf         4521  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX2');ld('v6502_ILL') #6
              0fb5 00b9  ld   $b9
              0fb6 00bd  ld   $bd
              0fb7 00fd  ld   $fd
              0fb8 00d1  ld   $d1         4522  ld('v6502_CLV'); ld('v6502_LDA'); ld('v6502_TSX'); ld('v6502_ILL') #6
              0fb9 00b9  ld   $b9
              0fba 00e5  ld   $e5
              0fbb 00fd  ld   $fd
              0fbc 00bf  ld   $bf         4523  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fbd 00b9  ld   $b9
              0fbe 00bb  ld   $bb
              0fbf 00fd  ld   $fd
              0fc0 00e7  ld   $e7         4524  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $C0
              0fc1 00e9  ld   $e9
              0fc2 00fd  ld   $fd
              0fc3 00fd  ld   $fd
              0fc4 00e7  ld   $e7         4525  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fc5 00e9  ld   $e9
              0fc6 00eb  ld   $eb
              0fc7 00fd  ld   $fd
              0fc8 007b  ld   $7b         4526  ld('v6502_INY'); ld('v6502_CMP'); ld('v6502_DEX'); ld('v6502_ILL') #6
              0fc9 00e9  ld   $e9
              0fca 0077  ld   $77
              0fcb 00fd  ld   $fd
              0fcc 00e7  ld   $e7         4527  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fcd 00e9  ld   $e9
              0fce 00eb  ld   $eb
              0fcf 00fd  ld   $fd
              0fd0 0055  ld   $55         4528  ld('v6502_BNE'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $D0
              0fd1 00e9  ld   $e9
              0fd2 00fd  ld   $fd
              0fd3 00fd  ld   $fd
              0fd4 00fd  ld   $fd         4529  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fd5 00e9  ld   $e9
              0fd6 00eb  ld   $eb
              0fd7 00fd  ld   $fd
              0fd8 00ed  ld   $ed         4530  ld('v6502_CLD'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0fd9 00e9  ld   $e9
              0fda 00fd  ld   $fd
              0fdb 00fd  ld   $fd
              0fdc 00fd  ld   $fd         4531  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fdd 00e9  ld   $e9
              0fde 00eb  ld   $eb
              0fdf 00fd  ld   $fd
              0fe0 00ef  ld   $ef         4532  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $E0
              0fe1 0029  ld   $29
              0fe2 00fd  ld   $fd
              0fe3 00fd  ld   $fd
              0fe4 00ef  ld   $ef         4533  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fe5 0029  ld   $29
              0fe6 00b7  ld   $b7
              0fe7 00fd  ld   $fd
              0fe8 006c  ld   $6c         4534  ld('v6502_INX'); ld('v6502_SBC'); ld('v6502_NOP'); ld('v6502_ILL') #6
              0fe9 0029  ld   $29
              0fea 0083  ld   $83
              0feb 00fd  ld   $fd
              0fec 00ef  ld   $ef         4535  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fed 0029  ld   $29
              0fee 00b7  ld   $b7
              0fef 00fd  ld   $fd
              0ff0 0058  ld   $58         4536  ld('v6502_BEQ'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $F0
              0ff1 0029  ld   $29
              0ff2 00fd  ld   $fd
              0ff3 00fd  ld   $fd
              0ff4 00fd  ld   $fd         4537  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0ff5 0029  ld   $29
              0ff6 00b7  ld   $b7
              0ff7 00fd  ld   $fd
              0ff8 00fb  ld   $fb         4538  ld('v6502_SED'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0ff9 0029  ld   $29
              0ffa 00fd  ld   $fd
              0ffb 00fd  ld   $fd
              0ffc 00fd  ld   $fd         4539  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC')                  #6
              0ffd 0029  ld   $29
              0ffe 00b7  ld   $b7
              0fff fe00  bra  ac          4540  bra(AC)                         #6,7 Dispatch into next page
                                          4541  # --- Page boundary ---
                                          4542  align(0x100,size=0x100)
              1000 140e  ld   $0e,y       4543  ld(hi('v6502_next'),Y)          #8 Handy for instructions that don't clobber Y
                                          4544
                                          4545  label('v6502_ADC')
                                          4546  assert pc()&255 == 1
                                          4547  assert v6502_Cflag == 1
                                          4548  assert v6502_Vemu == 128
v6502_ADC:    1001 1525  ld   [$25],y     4549  ld([v6502_ADH],Y)               #9 Must be at page offset 1, so A=1
              1002 2127  anda [$27]       4550  anda([v6502_P])                 #10 Carry in (AC=1 because lo('v6502_ADC')=1)
              1003 8118  adda [$18]       4551  adda([v6502_A])                 #11 Sum
              1004 f020  beq  .adc14      4552  beq('.adc14')                   #12 Danger zone for dropping a carry
              1005 8d00  adda [y,x]       4553  adda([Y,X])                     #13
              1006 c228  st   [$28]       4554  st([v6502_Qz])                  #14 Z flag, don't overwrite left-hand side (A) yet
              1007 c229  st   [$29]       4555  st([v6502_Qn])                  #15 N flag
              1008 6118  xora [$18]       4556  xora([v6502_A])                 #16 V flag, (Q^A) & (B^Q) & 0x80
              1009 c218  st   [$18]       4557  st([v6502_A])                   #17
              100a 0d00  ld   [y,x]       4558  ld([Y,X])                       #18
              100b 6128  xora [$28]       4559  xora([v6502_Qz])                #19
              100c 2118  anda [$18]       4560  anda([v6502_A])                 #20
              100d 2080  anda $80         4561  anda(0x80)                      #21
              100e c21d  st   [$1d]       4562  st([v6502_Tmp])                 #22
              100f 0128  ld   [$28]       4563  ld([v6502_Qz])                  #23 Update A
              1010 c218  st   [$18]       4564  st([v6502_A])                   #24
              1011 e815  blt  .adc27      4565  bmi('.adc27')                   #25 C flag
              1012 ad00  suba [y,x]       4566  suba([Y,X])                     #26
              1013 fc17  bra  .adc29      4567  bra('.adc29')                   #27
              1014 4d00  ora  [y,x]       4568  ora([Y,X])                      #28
                                          4569  label('.adc27')
.adc27:       1015 2d00  anda [y,x]       4570  anda([Y,X])                     #27
              1016 0200  nop              4571  nop()                           #28
                                          4572  label('.adc29')
.adc29:       1017 3080  anda $80,x       4573  anda(0x80,X)                    #29
              1018 0127  ld   [$27]       4574  ld([v6502_P])                   #30 Update P
              1019 207e  anda $7e         4575  anda(~v6502_Vemu&~v6502_Cflag)  #31
              101a 4500  ora  [x]         4576  ora([X])                        #32
              101b 411d  ora  [$1d]       4577  ora([v6502_Tmp])                #33
              101c c227  st   [$27]       4578  st([v6502_P])                   #34
              101d 140e  ld   $0e,y       4579  ld(hi('v6502_next'),Y)          #35
              101e e020  jmp  y,$20       4580  jmp(Y,'v6502_next')             #36
              101f 00ed  ld   $ed         4581  ld(-38/2)                       #37
                                          4582  # Cin=1, A=$FF, B=$DD --> Result=$DD, Cout=1, V=0
                                          4583  # Cin=0, A=$00, B=$DD --> Result=$DD, Cout=0, V=0
                                          4584  label('.adc14')
.adc14:       1020 c218  st   [$18]       4585  st([v6502_A])                   #14 Special case
              1021 c228  st   [$28]       4586  st([v6502_Qz])                  #15 Z flag
              1022 c229  st   [$29]       4587  st([v6502_Qn])                  #16 N flag
              1023 0127  ld   [$27]       4588  ld([v6502_P])                   #17
              1024 207f  anda $7f         4589  anda(0x7f)                      #18 V=0, keep C
              1025 c227  st   [$27]       4590  st([v6502_P])                   #19
              1026 140e  ld   $0e,y       4591  ld(hi('v6502_next'),Y)          #20
              1027 00f4  ld   $f4         4592  ld(-24/2)                       #21
              1028 e020  jmp  y,$20       4593  jmp(Y,'v6502_next')             #22
                                          4594  #nop()                          #23 Overlap
                                          4595  #
                                          4596  label('v6502_SBC')
                                          4597  # No matter how hard we try, v6502_SBC always comes out a lot clumsier
                                          4598  # than v6502_ADC. And that one already barely fits in 38 cycles and is
                                          4599  # hard to follow. So we use a hack: transmorph our SBC into an ADC with
                                          4600  # inverted operand, and then dispatch again. Simple and effective.
v6502_SBC:    1029 1525  ld   [$25],y     4601  ld([v6502_ADH],Y)               #9,24
              102a 0d00  ld   [y,x]       4602  ld([Y,X])                       #10
              102b 60ff  xora $ff         4603  xora(255)                       #11 Invert right-hand side operand
              102c c219  st   [$19]       4604  st([v6502_BI])                  #12 Park modified operand for v6502_ADC
              102d 0019  ld   $19         4605  ld(v6502_BI&255)                #13 Address of BI
              102e d224  st   [$24],x     4606  st([v6502_ADL],X)               #14
              102f 0000  ld   $00         4607  ld(v6502_BI>>8)                 #15
              1030 c225  st   [$25]       4608  st([v6502_ADH])                 #16
              1031 0069  ld   $69         4609  ld(0x69)                        #17 ADC #$xx (Any ADC opcode will do)
              1032 c226  st   [$26]       4610  st([v6502_IR])                  #18
              1033 140e  ld   $0e,y       4611  ld(hi('v6502_check'),Y)         #20 Go back to time check before dispatch
              1034 e0f2  jmp  y,$f2       4612  jmp(Y,'v6502_check')            #20
              1035 00f5  ld   $f5         4613  ld(-22/2)                       #21
                                          4614
                                          4615  # Carry calculation table
                                          4616  #   L7 R7 C7   RX UC SC
                                          4617  #   -- -- -- | -- -- --
                                          4618  #    0  0  0 |  0  0  0
                                          4619  #    0  0  1 |  0  0  0
                                          4620  #    1  0  0 |  0  1 +1
                                          4621  #    1  0  1 |  0  0  0
                                          4622  #    0  1  0 | -1  1  0
                                          4623  #    0  1  1 | -1  0 -1
                                          4624  #    1  1  0 | -1  1  0
                                          4625  #    1  1  1 | -1  1  0
                                          4626  #   -- -- -- | -- -- --
                                          4627  #    ^  ^  ^    ^  ^  ^
                                          4628  #    |  |  |    |  |  `--- Carry of unsigned L + signed R: SC = RX + UC
                                          4629  #    |  |  |    |  `----- Carry of unsigned L + unsigned R: UC = C7 ? L7&R7 : L7|R7
                                          4630  #    |  |  |    `------- Sign extension of signed R
                                          4631  #    |  |  `--------- MSB of unextended L + R
                                          4632  #    |  `----------- MSB of right operand R
                                          4633  #    `------------- MSB of left operand L
                                          4634
                                          4635  label('v6502_CLC')
v6502_CLC:    1036 0127  ld   [$27]       4636  ld([v6502_P])                   #9
              1037 fc3b  bra  .sec12      4637  bra('.sec12')                   #10
                                          4638  label('v6502_SEC')
v6502_SEC:    1038 20fe  anda $fe         4639  anda(~v6502_Cflag)              #9,11 Overlap
              1039 0127  ld   [$27]       4640  ld([v6502_P])                   #10
              103a 4001  ora  $01         4641  ora(v6502_Cflag)                #11
                                          4642  label('.sec12')
.sec12:       103b c227  st   [$27]       4643  st([v6502_P])                   #12
              103c 0200  nop              4644  nop()                           #13
                                          4645  label('.next14')
.next14:      103d e020  jmp  y,$20       4646  jmp(Y,'v6502_next')             #14
              103e 00f8  ld   $f8         4647  ld(-16/2)                       #15
                                          4648
                                          4649  label('v6502_BPL')
v6502_BPL:    103f 0129  ld   [$29]       4650  ld([v6502_Qn])                  #9
              1040 e875  blt  .next12     4651  bmi('.next12')                  #10
              1041 f45b  bge  .branch13   4652  bpl('.branch13')                #11
                                          4653  #nop()                          #12 Overlap
                                          4654  label('v6502_BMI')
v6502_BMI:    1042 0129  ld   [$29]       4655  ld([v6502_Qn])                  #9,12
              1043 f475  bge  .next12     4656  bpl('.next12')                  #10
              1044 e85b  blt  .branch13   4657  bmi('.branch13')                #11
                                          4658  #nop()                          #12 Overlap
                                          4659  label('v6502_BVC')
v6502_BVC:    1045 0127  ld   [$27]       4660  ld([v6502_P])                   #9,12
              1046 2080  anda $80         4661  anda(v6502_Vemu)                #10
              1047 f05b  beq  .branch13   4662  beq('.branch13')                #11
              1048 ec3d  bne  .next14     4663  bne('.next14')                  #12
                                          4664  #nop()                          #13 Overlap
                                          4665  label('v6502_BVS')
v6502_BVS:    1049 0127  ld   [$27]       4666  ld([v6502_P])                   #9,13
              104a 2080  anda $80         4667  anda(v6502_Vemu)                #10
              104b ec5b  bne  .branch13   4668  bne('.branch13')                #11
              104c f03d  beq  .next14     4669  beq('.next14')                  #12
                                          4670  #nop()                          #13 Overlap
                                          4671  label('v6502_BCC')
v6502_BCC:    104d 0127  ld   [$27]       4672  ld([v6502_P])                   #9,13
              104e 2001  anda $01         4673  anda(v6502_Cflag)               #10
              104f f05b  beq  .branch13   4674  beq('.branch13')                #11
              1050 ec3d  bne  .next14     4675  bne('.next14')                  #12
                                          4676  #nop()                          #13 Overlap
                                          4677  label('v6502_BCS')
v6502_BCS:    1051 0127  ld   [$27]       4678  ld([v6502_P])                   #9,13
              1052 2001  anda $01         4679  anda(v6502_Cflag)               #10
              1053 ec5b  bne  .branch13   4680  bne('.branch13')                #11
              1054 f03d  beq  .next14     4681  beq('.next14')                  #12
                                          4682  #nop()                          #13 Overlap
                                          4683  label('v6502_BNE')
v6502_BNE:    1055 0128  ld   [$28]       4684  ld([v6502_Qz])                  #9,13
              1056 f075  beq  .next12     4685  beq('.next12')                  #10
              1057 ec5b  bne  .branch13   4686  bne('.branch13')                #11
                                          4687  #nop()                          #12 Overlap
                                          4688  label('v6502_BEQ')
v6502_BEQ:    1058 0128  ld   [$28]       4689  ld([v6502_Qz])                  #9,12
              1059 ec75  bne  .next12     4690  bne('.next12')                  #10
              105a f05b  beq  .branch13   4691  beq('.branch13')                #11
                                          4692  #nop()                          #12 Overlap
                                          4693  label('.branch13')
.branch13:    105b 0124  ld   [$24]       4694  ld([v6502_ADL])                 #13,12 PC + offset
              105c 811a  adda [$1a]       4695  adda([v6502_PCL])               #14
              105d c21a  st   [$1a]       4696  st([v6502_PCL])                 #15
              105e e862  blt  .bra0       4697  bmi('.bra0')                    #16 Carry
              105f a124  suba [$24]       4698  suba([v6502_ADL])               #17
              1060 fc64  bra  .bra1       4699  bra('.bra1')                    #18
              1061 4124  ora  [$24]       4700  ora([v6502_ADL])                #19
                                          4701  label('.bra0')
.bra0:        1062 2124  anda [$24]       4702  anda([v6502_ADL])               #18
              1063 0200  nop              4703  nop()                           #19
                                          4704  label('.bra1')
.bra1:        1064 3080  anda $80,x       4705  anda(0x80,X)                    #20
              1065 0500  ld   [x]         4706  ld([X])                         #21
              1066 8125  adda [$25]       4707  adda([v6502_ADH])               #22
              1067 811b  adda [$1b]       4708  adda([v6502_PCH])               #23
              1068 c21b  st   [$1b]       4709  st([v6502_PCH])                 #24
              1069 0200  nop              4710  nop()                           #25
              106a e020  jmp  y,$20       4711  jmp(Y,'v6502_next')             #26
              106b 00f2  ld   $f2         4712  ld(-28/2)                       #27
                                          4713
                                          4714  label('v6502_INX')
v6502_INX:    106c 0200  nop              4715  nop()                           #9
              106d 012a  ld   [$2a]       4716  ld([v6502_X])                   #10
              106e 8001  adda $01         4717  adda(1)                         #11
              106f c22a  st   [$2a]       4718  st([v6502_X])                   #12
                                          4719  label('.inx13')
.inx13:       1070 c228  st   [$28]       4720  st([v6502_Qz])                  #13 Z flag
              1071 c229  st   [$29]       4721  st([v6502_Qn])                  #14 N flag
              1072 00f7  ld   $f7         4722  ld(-18/2)                       #15
              1073 e020  jmp  y,$20       4723  jmp(Y,'v6502_next')             #16
              1074 0200  nop              4724  nop()                           #17
                                          4725
                                          4726  label('.next12')
.next12:      1075 e020  jmp  y,$20       4727  jmp(Y,'v6502_next')             #12
              1076 00f9  ld   $f9         4728  ld(-14/2)                       #13
                                          4729
                                          4730  label('v6502_DEX')
v6502_DEX:    1077 012a  ld   [$2a]       4731  ld([v6502_X])                   #9
              1078 a001  suba $01         4732  suba(1)                         #10
              1079 fc70  bra  .inx13      4733  bra('.inx13')                   #11
              107a c22a  st   [$2a]       4734  st([v6502_X])                   #12
                                          4735
                                          4736  label('v6502_INY')
v6502_INY:    107b 012b  ld   [$2b]       4737  ld([v6502_Y])                   #9
              107c 8001  adda $01         4738  adda(1)                         #10
              107d fc70  bra  .inx13      4739  bra('.inx13')                   #11
              107e c22b  st   [$2b]       4740  st([v6502_Y])                   #12
                                          4741
                                          4742  label('v6502_DEY')
v6502_DEY:    107f 012b  ld   [$2b]       4743  ld([v6502_Y])                   #9
              1080 a001  suba $01         4744  suba(1)                         #10
              1081 fc70  bra  .inx13      4745  bra('.inx13')                   #11
              1082 c22b  st   [$2b]       4746  st([v6502_Y])                   #12
                                          4747
                                          4748  label('v6502_NOP')
v6502_NOP:    1083 00fa  ld   $fa         4749  ld(-12/2)                       #9
              1084 e020  jmp  y,$20       4750  jmp(Y,'v6502_next')             #10
                                          4751  #nop()                          #11 Overlap
                                          4752  #
                                          4753  label('v6502_AND')
v6502_AND:    1085 1525  ld   [$25],y     4754  ld([v6502_ADH],Y)               #9,11
              1086 0118  ld   [$18]       4755  ld([v6502_A])                   #10
              1087 fc90  bra  .eor13      4756  bra('.eor13')                   #11
              1088 2d00  anda [y,x]       4757  anda([Y,X])                     #12
                                          4758
                                          4759  label('v6502_ORA')
v6502_ORA:    1089 1525  ld   [$25],y     4760  ld([v6502_ADH],Y)               #9
              108a 0118  ld   [$18]       4761  ld([v6502_A])                   #10
              108b fc90  bra  .eor13      4762  bra('.eor13')                   #11
                                          4763  label('v6502_EOR')
v6502_EOR:    108c 4d00  ora  [y,x]       4764  ora([Y,X])                      #12,9
                                          4765  #
                                          4766  #label('v6502_EOR')
                                          4767  #nop()                          #9 Overlap
              108d 1525  ld   [$25],y     4768  ld([v6502_ADH],Y)               #10
              108e 0118  ld   [$18]       4769  ld([v6502_A])                   #11
              108f 6d00  xora [y,x]       4770  xora([Y,X])                     #12
                                          4771  label('.eor13')
.eor13:       1090 c218  st   [$18]       4772  st([v6502_A])                   #13
              1091 c228  st   [$28]       4773  st([v6502_Qz])                  #14 Z flag
              1092 c229  st   [$29]       4774  st([v6502_Qn])                  #15 N flag
              1093 140e  ld   $0e,y       4775  ld(hi('v6502_next'),Y)          #16
              1094 00f6  ld   $f6         4776  ld(-20/2)                       #17
              1095 e020  jmp  y,$20       4777  jmp(Y,'v6502_next')             #18
                                          4778  #nop()                          #19 Overlap
                                          4779  #
                                          4780  label('v6502_JMP1')
v6502_JMP1:   1096 140d  ld   $0d,y       4781  ld(hi('v6502_jmp1'),Y)          #9,19 JMP $DDDD
              1097 e0d1  jmp  y,$d1       4782  jmp(Y,'v6502_jmp1')             #10
                                          4783  #nop()                          #11 Overlap
                                          4784  label('v6502_JMP2')
v6502_JMP2:   1098 140d  ld   $0d,y       4785  ld(hi('v6502_jmp2'),Y)          #9 JMP ($DDDD)
              1099 e0d9  jmp  y,$d9       4786  jmp(Y,'v6502_jmp2')             #10
                                          4787  #nop()                          #11 Overlap
                                          4788  label('v6502_JSR')
v6502_JSR:    109a 011c  ld   [$1c]       4789  ld([v6502_S])                   #9,11
              109b a002  suba $02         4790  suba(2)                         #10
              109c d21c  st   [$1c],x     4791  st([v6502_S],X)                 #11
              109d 1400  ld   $00,y       4792  ld(v6502_Stack>>8,Y)            #12
              109e 011b  ld   [$1b]       4793  ld([v6502_PCH])                 #13 Let ADL,ADH point to L operand
              109f c225  st   [$25]       4794  st([v6502_ADH])                 #14
              10a0 011a  ld   [$1a]       4795  ld([v6502_PCL])                 #15
              10a1 c224  st   [$24]       4796  st([v6502_ADL])                 #16
              10a2 8001  adda $01         4797  adda(1)                         #17 Push ++PC
              10a3 c21a  st   [$1a]       4798  st([v6502_PCL])                 #18 Let PCL,PCH point to H operand
              10a4 de00  st   [y,x++]     4799  st([Y,Xpp])                     #19
              10a5 f0a8  beq  $10a8       4800  beq(pc()+3)                     #20
              10a6 fca9  bra  $10a9       4801  bra(pc()+3)                     #21
              10a7 0000  ld   $00         4802  ld(0)                           #22
              10a8 0001  ld   $01         4803  ld(1)                           #22(!)
              10a9 811b  adda [$1b]       4804  adda([v6502_PCH])               #23
              10aa c21b  st   [$1b]       4805  st([v6502_PCH])                 #24
              10ab ce00  st   [y,x]       4806  st([Y,X])                       #25
              10ac 1124  ld   [$24],x     4807  ld([v6502_ADL],X)               #26 Fetch L
              10ad 1525  ld   [$25],y     4808  ld([v6502_ADH],Y)               #27
              10ae 0d00  ld   [y,x]       4809  ld([Y,X])                       #28
              10af 111a  ld   [$1a],x     4810  ld([v6502_PCL],X)               #29 Fetch H
              10b0 c21a  st   [$1a]       4811  st([v6502_PCL])                 #30
              10b1 151b  ld   [$1b],y     4812  ld([v6502_PCH],Y)               #31
              10b2 0d00  ld   [y,x]       4813  ld([Y,X])                       #32
              10b3 c21b  st   [$1b]       4814  st([v6502_PCH])                 #33
              10b4 140e  ld   $0e,y       4815  ld(hi('v6502_next'),Y)          #34
              10b5 00ed  ld   $ed         4816  ld(-38/2)                       #35
              10b6 e020  jmp  y,$20       4817  jmp(Y,'v6502_next')             #36
                                          4818  #nop()                          #37 Overlap
                                          4819  #
                                          4820  label('v6502_INC')
v6502_INC:    10b7 1411  ld   $11,y       4821  ld(hi('v6502_inc'),Y)           #9,37
              10b8 e00e  jmp  y,$0e       4822  jmp(Y,'v6502_inc')              #10
                                          4823  #nop()                          #11 Overlap
                                          4824  label('v6502_LDA')
v6502_LDA:    10b9 1411  ld   $11,y       4825  ld(hi('v6502_lda'),Y)           #9,11
              10ba e018  jmp  y,$18       4826  jmp(Y,'v6502_lda')              #10
                                          4827  #nop()                          #11 Overlap
                                          4828  label('v6502_LDX')
v6502_LDX:    10bb 1411  ld   $11,y       4829  ld(hi('v6502_ldx'),Y)           #9,11
              10bc e022  jmp  y,$22       4830  jmp(Y,'v6502_ldx')              #10
                                          4831  #nop()                          #11 Overlap
                                          4832  label('v6502_LDX2')
v6502_LDX2:   10bd 1411  ld   $11,y       4833  ld(hi('v6502_ldx2'),Y)          #9,11
              10be e02a  jmp  y,$2a       4834  jmp(Y,'v6502_ldx2')             #10
                                          4835  #nop()                          #11 Overlap
                                          4836  label('v6502_LDY')
v6502_LDY:    10bf 1411  ld   $11,y       4837  ld(hi('v6502_ldy'),Y)           #9,11
              10c0 e026  jmp  y,$26       4838  jmp(Y,'v6502_ldy')              #10
                                          4839  #nop()                          #11 Overlap
                                          4840  label('v6502_STA')
v6502_STA:    10c1 1411  ld   $11,y       4841  ld(hi('v6502_sta'),Y)           #9,11
              10c2 e034  jmp  y,$34       4842  jmp(Y,'v6502_sta')              #10
                                          4843  #nop()                          #11 Overlap
                                          4844  label('v6502_STX')
v6502_STX:    10c3 1411  ld   $11,y       4845  ld(hi('v6502_stx'),Y)           #9,11
              10c4 e03a  jmp  y,$3a       4846  jmp(Y,'v6502_stx')              #10
                                          4847  #nop()                          #11 Overlap
                                          4848  label('v6502_STX2')
v6502_STX2:   10c5 1411  ld   $11,y       4849  ld(hi('v6502_stx2'),Y)          #9,11
              10c6 e040  jmp  y,$40       4850  jmp(Y,'v6502_stx2')             #10
                                          4851  #nop()                          #11 Overlap
                                          4852  label('v6502_STY')
v6502_STY:    10c7 1411  ld   $11,y       4853  ld(hi('v6502_sty'),Y)           #9,11
              10c8 e048  jmp  y,$48       4854  jmp(Y,'v6502_sty')              #10
                                          4855  #nop()                          #11 Overlap
                                          4856  label('v6502_TAX')
v6502_TAX:    10c9 1411  ld   $11,y       4857  ld(hi('v6502_tax'),Y)           #9,11
              10ca e04d  jmp  y,$4d       4858  jmp(Y,'v6502_tax')              #10
                                          4859  #nop()                          #11 Overlap
                                          4860  label('v6502_TAY')
v6502_TAY:    10cb 1411  ld   $11,y       4861  ld(hi('v6502_tay'),Y)           #9,11
              10cc e062  jmp  y,$62       4862  jmp(Y,'v6502_tay')              #10
                                          4863  #nop()                          #11 Overlap
                                          4864  label('v6502_TXA')
v6502_TXA:    10cd 1411  ld   $11,y       4865  ld(hi('v6502_txa'),Y)           #9,11
              10ce e065  jmp  y,$65       4866  jmp(Y,'v6502_txa')              #10
                                          4867  #nop()                          #11 Overlap
                                          4868  label('v6502_TYA')
v6502_TYA:    10cf 1411  ld   $11,y       4869  ld(hi('v6502_tya'),Y)           #9,11
              10d0 e068  jmp  y,$68       4870  jmp(Y,'v6502_tya')              #10
                                          4871  #nop()                          #11 Overlap
                                          4872  label('v6502_CLV')
v6502_CLV:    10d1 1411  ld   $11,y       4873  ld(hi('v6502_clv'),Y)           #9,11
              10d2 e076  jmp  y,$76       4874  jmp(Y,'v6502_clv')              #10
                                          4875  #nop()                          #11 Overlap
                                          4876  label('v6502_RTI')
v6502_RTI:    10d3 1411  ld   $11,y       4877  ld(hi('v6502_rti'),Y)           #9,11
              10d4 e0e4  jmp  y,$e4       4878  jmp(Y,'v6502_rti')              #10
                                          4879  #nop()                          #11 Overlap
                                          4880  label('v6502_ROR')
v6502_ROR:    10d5 140d  ld   $0d,y       4881  ld(hi('v6502_ror'),Y)           #9,11
              10d6 e08f  jmp  y,$8f       4882  jmp(Y,'v6502_ror')              #10
                                          4883  #nop()                          #11 Overlap
                                          4884  label('v6502_LSR')
v6502_LSR:    10d7 140d  ld   $0d,y       4885  ld(hi('v6502_lsr'),Y)           #9,11
              10d8 e0a9  jmp  y,$a9       4886  jmp(Y,'v6502_lsr')              #10
                                          4887  #nop()                          #11 Overlap
                                          4888  label('v6502_PHA')
v6502_PHA:    10d9 140d  ld   $0d,y       4889  ld(hi('v6502_pha'),Y)           #9,11
              10da e0ee  jmp  y,$ee       4890  jmp(Y,'v6502_pha')              #10
                                          4891  #nop()                          #11 Overlap
                                          4892  label('v6502_CLI')
v6502_CLI:    10db 1411  ld   $11,y       4893  ld(hi('v6502_cli'),Y)           #9,11
              10dc e06b  jmp  y,$6b       4894  jmp(Y,'v6502_cli')              #10
                                          4895  #nop()                          #11 Overlap
                                          4896  label('v6502_RTS')
v6502_RTS:    10dd 1411  ld   $11,y       4897  ld(hi('v6502_rts'),Y)           #9,11
              10de e08f  jmp  y,$8f       4898  jmp(Y,'v6502_rts')              #10
                                          4899  #nop()                          #11 Overlap
                                          4900  label('v6502_PLA')
v6502_PLA:    10df 140d  ld   $0d,y       4901  ld(hi('v6502_pla'),Y)           #9,11
              10e0 e0e3  jmp  y,$e3       4902  jmp(Y,'v6502_pla')              #10
                                          4903  #nop()                          #11 Overlap
                                          4904  label('v6502_SEI')
v6502_SEI:    10e1 1411  ld   $11,y       4905  ld(hi('v6502_sei'),Y)           #9,11
              10e2 e06e  jmp  y,$6e       4906  jmp(Y,'v6502_sei')              #10
                                          4907  #nop()                          #11 Overlap
                                          4908  label('v6502_TXS')
v6502_TXS:    10e3 1411  ld   $11,y       4909  ld(hi('v6502_txs'),Y)           #9,11
              10e4 e05e  jmp  y,$5e       4910  jmp(Y,'v6502_txs')              #10
                                          4911  #nop()                          #11 Overlap
                                          4912  label('v6502_TSX')
v6502_TSX:    10e5 1411  ld   $11,y       4913  ld(hi('v6502_tsx'),Y)           #9,11
              10e6 e054  jmp  y,$54       4914  jmp(Y,'v6502_tsx')              #10
                                          4915  #nop()                          #11 Overlap
                                          4916  label('v6502_CPY')
v6502_CPY:    10e7 1411  ld   $11,y       4917  ld(hi('v6502_cpy'),Y)           #9,11
              10e8 e0bd  jmp  y,$bd       4918  jmp(Y,'v6502_cpy')              #10
                                          4919  #nop()                          #11 Overlap
                                          4920  label('v6502_CMP')
v6502_CMP:    10e9 1411  ld   $11,y       4921  ld(hi('v6502_cmp'),Y)           #9,11
              10ea e0be  jmp  y,$be       4922  jmp(Y,'v6502_cmp')              #10
                                          4923  #nop()                          #11 Overlap
                                          4924  label('v6502_DEC')
v6502_DEC:    10eb 1411  ld   $11,y       4925  ld(hi('v6502_dec'),Y)           #9,11
              10ec e005  jmp  y,$05       4926  jmp(Y,'v6502_dec')              #10
                                          4927  #nop()                          #11 Overlap
                                          4928  label('v6502_CLD')
v6502_CLD:    10ed 1411  ld   $11,y       4929  ld(hi('v6502_cld'),Y)           #9,11
              10ee e071  jmp  y,$71       4930  jmp(Y,'v6502_cld')              #10
                                          4931  #nop()                          #11 Overlap
                                          4932  label('v6502_CPX')
v6502_CPX:    10ef 1411  ld   $11,y       4933  ld(hi('v6502_cpx'),Y)           #9,11
              10f0 e0bb  jmp  y,$bb       4934  jmp(Y,'v6502_cpx')              #10
                                          4935  #nop()                          #11 Overlap
                                          4936  label('v6502_ASL')
v6502_ASL:    10f1 140d  ld   $0d,y       4937  ld(hi('v6502_asl'),Y)           #9,11
              10f2 e0cb  jmp  y,$cb       4938  jmp(Y,'v6502_asl')              #10
                                          4939  #nop()                          #11 Overlap
                                          4940  label('v6502_PHP')
v6502_PHP:    10f3 1411  ld   $11,y       4941  ld(hi('v6502_php'),Y)           #9,11
              10f4 e0a2  jmp  y,$a2       4942  jmp(Y,'v6502_php')              #10
                                          4943  #nop()                          #11 Overlap
                                          4944  label('v6502_BIT')
v6502_BIT:    10f5 1411  ld   $11,y       4945  ld(hi('v6502_bit'),Y)           #9
              10f6 e07d  jmp  y,$7d       4946  jmp(Y,'v6502_bit')              #10
                                          4947  #nop()                          #11 Overlap
                                          4948  label('v6502_ROL')
v6502_ROL:    10f7 140d  ld   $0d,y       4949  ld(hi('v6502_rol'),Y)           #9
              10f8 e0b8  jmp  y,$b8       4950  jmp(Y,'v6502_rol')              #10
                                          4951  #nop()                          #11 Overlap
                                          4952  label('v6502_PLP')
v6502_PLP:    10f9 1411  ld   $11,y       4953  ld(hi('v6502_plp'),Y)           #9
              10fa e0d4  jmp  y,$d4       4954  jmp(Y,'v6502_plp')              #10
                                          4955  #nop()                          #11 Overlap
                                          4956  label('v6502_SED')              # Decimal mode not implemented
v6502_SED:    10fb 1411  ld   $11,y       4957  ld(hi('v6502_sed'),Y)           #9,11
              10fc e074  jmp  y,$74       4958  jmp(Y,'v6502_sed')              #10
                                          4959  #nop()                          #11 Overlap
                                          4960  label('v6502_ILL') # All illegal opcodes map to BRK, except $FF which will crash
                                          4961  label('v6502_BRK')
v6502_ILL:
v6502_BRK:    10fd 140d  ld   $0d,y       4962  ld(hi('v6502_brk'),Y)           #9
              10fe e0f6  jmp  y,$f6       4963  jmp(Y,'v6502_brk')              #10
                                          4964  #nop()                          #11 Overlap
                                          4965
                                          4966  while pc()&255 < 255:
                                          4967    nop()
                                          4968
                                          4969  # `v6502_RESUME' is the interpreter's secondary entry point for when
                                          4970  # the opcode and operands were already fetched, just before the last hPulse.
                                          4971  # It must be at $xxff, prefably somewhere in v6502's own code pages.
                                          4972  label('v6502_RESUME')
                                          4973  assert (pc()&255) == 255
v6502_RESUME: 10ff a005  suba $05         4974  suba(v6502_adjust)              #0,11 v6502 secondary entry point
                                          4975  # --- Page boundary ---
                                          4976  align(0x100,size=0x200)
              1100 c215  st   [$15]       4977  st([vTicks])                    #1
              1101 1124  ld   [$24],x     4978  ld([v6502_ADL],X)               #2
              1102 140f  ld   $0f,y       4979  ld(hi('v6502_execute'),Y)       #3
              1103 e126  jmp  y,[$26]     4980  jmp(Y,[v6502_IR])               #4
              1104 fcff  bra  $ff         4981  bra(255)                        #5
                                          4982
                                          4983  label('v6502_dec')
v6502_dec:    1105 1525  ld   [$25],y     4984  ld([v6502_ADH],Y)               #12
              1106 0d00  ld   [y,x]       4985  ld([Y,X])                       #13
              1107 a001  suba $01         4986  suba(1)                         #14
              1108 ce00  st   [y,x]       4987  st([Y,X])                       #15
              1109 c228  st   [$28]       4988  st([v6502_Qz])                  #16 Z flag
              110a c229  st   [$29]       4989  st([v6502_Qn])                  #17 N flag
              110b 140e  ld   $0e,y       4990  ld(hi('v6502_next'),Y)          #18
              110c 00f5  ld   $f5         4991  ld(-22/2)                       #19
              110d e020  jmp  y,$20       4992  jmp(Y,'v6502_next')             #20
                                          4993  #nop()                          #21 Overlap
                                          4994  #
                                          4995  label('v6502_inc')
v6502_inc:    110e 1525  ld   [$25],y     4996  ld([v6502_ADH],Y)               #12,22
              110f 0d00  ld   [y,x]       4997  ld([Y,X])                       #13
              1110 8001  adda $01         4998  adda(1)                         #14
              1111 ce00  st   [y,x]       4999  st([Y,X])                       #15
              1112 c228  st   [$28]       5000  st([v6502_Qz])                  #16 Z flag
              1113 c229  st   [$29]       5001  st([v6502_Qn])                  #17 N flag
              1114 140e  ld   $0e,y       5002  ld(hi('v6502_next'),Y)          #18
              1115 00f5  ld   $f5         5003  ld(-22/2)                       #19
              1116 e020  jmp  y,$20       5004  jmp(Y,'v6502_next')             #20
              1117 0200  nop              5005  nop()                           #21
                                          5006
                                          5007  label('v6502_lda')
v6502_lda:    1118 0200  nop              5008  nop()                           #12
              1119 1525  ld   [$25],y     5009  ld([v6502_ADH],Y)               #13
              111a 0d00  ld   [y,x]       5010  ld([Y,X])                       #14
              111b c218  st   [$18]       5011  st([v6502_A])                   #15
                                          5012  label('.lda16')
.lda16:       111c c228  st   [$28]       5013  st([v6502_Qz])                  #16 Z flag
              111d c229  st   [$29]       5014  st([v6502_Qn])                  #17 N flag
              111e 0200  nop              5015  nop()                           #18
              111f 140e  ld   $0e,y       5016  ld(hi('v6502_next'),Y)          #19
              1120 e020  jmp  y,$20       5017  jmp(Y,'v6502_next')             #20
              1121 00f5  ld   $f5         5018  ld(-22/2)                       #21
                                          5019
                                          5020  label('v6502_ldx')
v6502_ldx:    1122 1525  ld   [$25],y     5021  ld([v6502_ADH],Y)               #12
              1123 0d00  ld   [y,x]       5022  ld([Y,X])                       #13
              1124 fc1c  bra  .lda16      5023  bra('.lda16')                   #14
              1125 c22a  st   [$2a]       5024  st([v6502_X])                   #15
                                          5025
                                          5026  label('v6502_ldy')
v6502_ldy:    1126 1525  ld   [$25],y     5027  ld([v6502_ADH],Y)               #12
              1127 0d00  ld   [y,x]       5028  ld([Y,X])                       #13
              1128 fc1c  bra  .lda16      5029  bra('.lda16')                   #14
              1129 c22b  st   [$2b]       5030  st([v6502_Y])                   #15
                                          5031
                                          5032  label('v6502_ldx2')
v6502_ldx2:   112a 0124  ld   [$24]       5033  ld([v6502_ADL])                 #12 Special case $B6: LDX $DD,Y
              112b a12a  suba [$2a]       5034  suba([v6502_X])                 #13 Undo X offset
              112c 912b  adda [$2b],x     5035  adda([v6502_Y],X)               #14 Apply Y instead
              112d 0500  ld   [x]         5036  ld([X])                         #15
              112e c22a  st   [$2a]       5037  st([v6502_X])                   #16
              112f c228  st   [$28]       5038  st([v6502_Qz])                  #17 Z flag
              1130 c229  st   [$29]       5039  st([v6502_Qn])                  #18 N flag
              1131 140e  ld   $0e,y       5040  ld(hi('v6502_next'),Y)          #19
              1132 e020  jmp  y,$20       5041  jmp(Y,'v6502_next')             #20
              1133 00f5  ld   $f5         5042  ld(-22/2)                       #21
                                          5043
                                          5044  label('v6502_sta')
v6502_sta:    1134 1525  ld   [$25],y     5045  ld([v6502_ADH],Y)               #12
              1135 0118  ld   [$18]       5046  ld([v6502_A])                   #13
              1136 ce00  st   [y,x]       5047  st([Y,X])                       #14
              1137 140e  ld   $0e,y       5048  ld(hi('v6502_next'),Y)          #15
              1138 e020  jmp  y,$20       5049  jmp(Y,'v6502_next')             #16
              1139 00f7  ld   $f7         5050  ld(-18/2)                       #17
                                          5051
                                          5052  label('v6502_stx')
v6502_stx:    113a 1525  ld   [$25],y     5053  ld([v6502_ADH],Y)               #12
              113b 012a  ld   [$2a]       5054  ld([v6502_X])                   #13
              113c ce00  st   [y,x]       5055  st([Y,X])                       #14
              113d 140e  ld   $0e,y       5056  ld(hi('v6502_next'),Y)          #15
              113e e020  jmp  y,$20       5057  jmp(Y,'v6502_next')             #16
              113f 00f7  ld   $f7         5058  ld(-18/2)                       #17
                                          5059
                                          5060  label('v6502_stx2')
v6502_stx2:   1140 0124  ld   [$24]       5061  ld([v6502_ADL])                 #12 Special case $96: STX $DD,Y
              1141 a12a  suba [$2a]       5062  suba([v6502_X])                 #13 Undo X offset
              1142 912b  adda [$2b],x     5063  adda([v6502_Y],X)               #14 Apply Y instead
              1143 012a  ld   [$2a]       5064  ld([v6502_X])                   #15
              1144 c600  st   [x]         5065  st([X])                         #16
              1145 140e  ld   $0e,y       5066  ld(hi('v6502_next'),Y)          #17
              1146 e020  jmp  y,$20       5067  jmp(Y,'v6502_next')             #18
              1147 00f6  ld   $f6         5068  ld(-20/2)                       #19
                                          5069
                                          5070  label('v6502_sty')
v6502_sty:    1148 1525  ld   [$25],y     5071  ld([v6502_ADH],Y)               #12
              1149 012b  ld   [$2b]       5072  ld([v6502_Y])                   #13
              114a ce00  st   [y,x]       5073  st([Y,X])                       #14
              114b 140e  ld   $0e,y       5074  ld(hi('v6502_next'),Y)          #15
              114c e020  jmp  y,$20       5075  jmp(Y,'v6502_next')             #16
                                          5076  label('v6502_tax')
v6502_tax:    114d 00f7  ld   $f7         5077  ld(-18/2)                       #17,12
                                          5078  #
                                          5079  #label('v6502_tax')
                                          5080  #nop()                          #12 Overlap
              114e 0118  ld   [$18]       5081  ld([v6502_A])                   #13
              114f c22a  st   [$2a]       5082  st([v6502_X])                   #14
                                          5083  label('.tax15')
.tax15:       1150 c228  st   [$28]       5084  st([v6502_Qz])                  #15 Z flag
              1151 c229  st   [$29]       5085  st([v6502_Qn])                  #16 N flag
              1152 140e  ld   $0e,y       5086  ld(hi('v6502_next'),Y)          #17
              1153 e020  jmp  y,$20       5087  jmp(Y,'v6502_next')             #18
                                          5088  label('v6502_tsx')
v6502_tsx:    1154 00f6  ld   $f6         5089  ld(-20/2)                       #19
                                          5090  #
                                          5091  #label('v6502_tsx')
                                          5092  #nop()                          #12 Overlap
              1155 011c  ld   [$1c]       5093  ld([v6502_S])                   #13
              1156 a001  suba $01         5094  suba(1)                         #14 Shift down on export
              1157 c22a  st   [$2a]       5095  st([v6502_X])                   #15
                                          5096  label('.tsx16')
.tsx16:       1158 c228  st   [$28]       5097  st([v6502_Qz])                  #16 Z flag
              1159 c229  st   [$29]       5098  st([v6502_Qn])                  #17 N flag
              115a 0200  nop              5099  nop()                           #18
              115b 140e  ld   $0e,y       5100  ld(hi('v6502_next'),Y)          #19
              115c e020  jmp  y,$20       5101  jmp(Y,'v6502_next')             #20
              115d 00f5  ld   $f5         5102  ld(-22/2)                       #21
                                          5103
                                          5104  label('v6502_txs')
v6502_txs:    115e 012a  ld   [$2a]       5105  ld([v6502_X])                   #12
              115f 8001  adda $01         5106  adda(1)                         #13 Shift up on import
              1160 fc58  bra  .tsx16      5107  bra('.tsx16')                   #14
              1161 c21c  st   [$1c]       5108  st([v6502_S])                   #15
                                          5109
                                          5110  label('v6502_tay')
v6502_tay:    1162 0118  ld   [$18]       5111  ld([v6502_A])                   #12
              1163 fc50  bra  .tax15      5112  bra('.tax15')                   #13
              1164 c22b  st   [$2b]       5113  st([v6502_Y])                   #14
                                          5114
                                          5115  label('v6502_txa')
v6502_txa:    1165 012a  ld   [$2a]       5116  ld([v6502_X])                   #12
              1166 fc50  bra  .tax15      5117  bra('.tax15')                   #13
              1167 c218  st   [$18]       5118  st([v6502_A])                   #14
                                          5119
                                          5120  label('v6502_tya')
v6502_tya:    1168 012b  ld   [$2b]       5121  ld([v6502_Y])                   #12
              1169 fc50  bra  .tax15      5122  bra('.tax15')                   #13
              116a c218  st   [$18]       5123  st([v6502_A])                   #14
                                          5124
                                          5125  label('v6502_cli')
v6502_cli:    116b 0127  ld   [$27]       5126  ld([v6502_P])                   #12
              116c fc79  bra  .clv15      5127  bra('.clv15')                   #13
              116d 20fb  anda $fb         5128  anda(~v6502_Iflag)              #14
                                          5129
                                          5130  label('v6502_sei')
v6502_sei:    116e 0127  ld   [$27]       5131  ld([v6502_P])                   #12
              116f fc79  bra  .clv15      5132  bra('.clv15')                   #13
              1170 4004  ora  $04         5133  ora(v6502_Iflag)                #14
                                          5134
                                          5135  label('v6502_cld')
v6502_cld:    1171 0127  ld   [$27]       5136  ld([v6502_P])                   #12
              1172 fc79  bra  .clv15      5137  bra('.clv15')                   #13
              1173 20f7  anda $f7         5138  anda(~v6502_Dflag)              #14
                                          5139
                                          5140  label('v6502_sed')
v6502_sed:    1174 0127  ld   [$27]       5141  ld([v6502_P])                   #12
              1175 fc79  bra  .clv15      5142  bra('.clv15')                   #13
                                          5143  label('v6502_clv')
v6502_clv:    1176 4008  ora  $08         5144  ora(v6502_Dflag)                #14,12 Overlap
                                          5145  #
                                          5146  #label('v6502_clv')
                                          5147  #nop()                          #12
              1177 0127  ld   [$27]       5148  ld([v6502_P])                   #13
              1178 207f  anda $7f         5149  anda(~v6502_Vemu)               #14
                                          5150  label('.clv15')
.clv15:       1179 c227  st   [$27]       5151  st([v6502_P])                   #15
              117a 140e  ld   $0e,y       5152  ld(hi('v6502_next'),Y)          #16
              117b 00f6  ld   $f6         5153  ld(-20/2)                       #17
              117c e020  jmp  y,$20       5154  jmp(Y,'v6502_next')             #18
                                          5155  label('v6502_bit')
v6502_bit:    117d 0200  nop              5156  nop()                           #19,12
                                          5157  #
                                          5158  #label('v6502_bit')
                                          5159  #nop()                          #12 Overlap
              117e 1124  ld   [$24],x     5160  ld([v6502_ADL],X)               #13
              117f 1525  ld   [$25],y     5161  ld([v6502_ADH],Y)               #14
              1180 0d00  ld   [y,x]       5162  ld([Y,X])                       #15
              1181 c229  st   [$29]       5163  st([v6502_Qn])                  #16 N flag
              1182 2118  anda [$18]       5164  anda([v6502_A])                 #17 This is a reason we keep N and Z in separate bytes
              1183 c228  st   [$28]       5165  st([v6502_Qz])                  #18 Z flag
              1184 0127  ld   [$27]       5166  ld([v6502_P])                   #19
              1185 207f  anda $7f         5167  anda(~v6502_Vemu)               #20
              1186 c227  st   [$27]       5168  st([v6502_P])                   #21
              1187 0d00  ld   [y,x]       5169  ld([Y,X])                       #22
              1188 8200  adda ac          5170  adda(AC)                        #23
              1189 2080  anda $80         5171  anda(v6502_Vemu)                #24
              118a 4127  ora  [$27]       5172  ora([v6502_P])                  #25
              118b c227  st   [$27]       5173  st([v6502_P])                   #26 Update V
              118c 140e  ld   $0e,y       5174  ld(hi('v6502_next'),Y)          #27
              118d e020  jmp  y,$20       5175  jmp(Y,'v6502_next')             #28
              118e 00f1  ld   $f1         5176  ld(-30/2)                       #29
                                          5177
                                          5178  label('v6502_rts')
v6502_rts:    118f 011c  ld   [$1c]       5179  ld([v6502_S])                   #12
              1190 1200  ld   ac,x        5180  ld(AC,X)                        #13
              1191 8002  adda $02         5181  adda(2)                         #14
              1192 c21c  st   [$1c]       5182  st([v6502_S])                   #15
              1193 1400  ld   $00,y       5183  ld(0,Y)                         #16
              1194 0d00  ld   [y,x]       5184  ld([Y,X])                       #17
              1195 de00  st   [y,x++]     5185  st([Y,Xpp])                     #18 Just X++
              1196 8001  adda $01         5186  adda(1)                         #19
              1197 c21a  st   [$1a]       5187  st([v6502_PCL])                 #20
              1198 f09b  beq  $119b       5188  beq(pc()+3)                     #21
              1199 fc9c  bra  $119c       5189  bra(pc()+3)                     #22
              119a 0000  ld   $00         5190  ld(0)                           #23
              119b 0001  ld   $01         5191  ld(1)                           #23(!)
              119c 8d00  adda [y,x]       5192  adda([Y,X])                     #24
              119d c21b  st   [$1b]       5193  st([v6502_PCH])                 #25
              119e 0200  nop              5194  nop()                           #26
              119f 140e  ld   $0e,y       5195  ld(hi('v6502_next'),Y)          #27
              11a0 e020  jmp  y,$20       5196  jmp(Y,'v6502_next')             #28
              11a1 00f1  ld   $f1         5197  ld(-30/2)                       #29
                                          5198
                                          5199  label('v6502_php')
v6502_php:    11a2 011c  ld   [$1c]       5200  ld([v6502_S])                   #12
              11a3 a001  suba $01         5201  suba(1)                         #13
              11a4 d21c  st   [$1c],x     5202  st([v6502_S],X)                 #14
              11a5 0127  ld   [$27]       5203  ld([v6502_P])                   #15
              11a6 20bd  anda $bd         5204  anda(~v6502_Vflag&~v6502_Zflag) #16 Keep Vemu,B,D,I,C
              11a7 f4aa  bge  $11aa       5205  bpl(pc()+3)                     #17 V to bit 6 and clear N
              11a8 fcaa  bra  $11aa       5206  bra(pc()+2)                     #18
              11a9 60c0  xora $c0         5207  xora(v6502_Vflag^v6502_Vemu)    #19
              11aa c600  st   [x]         5208  st([X])                         #19,20
              11ab 0128  ld   [$28]       5209  ld([v6502_Qz])                  #21 Z flag
              11ac f0af  beq  $11af       5210  beq(pc()+3)                     #22
              11ad fcb0  bra  $11b0       5211  bra(pc()+3)                     #23
              11ae 0000  ld   $00         5212  ld(0)                           #24
              11af 0002  ld   $02         5213  ld(v6502_Zflag)                 #24(!)
              11b0 4500  ora  [x]         5214  ora([X])                        #25
              11b1 c600  st   [x]         5215  st([X])                         #26
              11b2 0129  ld   [$29]       5216  ld([v6502_Qn])                  #27 N flag
              11b3 2080  anda $80         5217  anda(0x80)                      #28
              11b4 4500  ora  [x]         5218  ora([X])                        #29
              11b5 4020  ora  $20         5219  ora(v6502_Uflag)                #30 Unused bit
              11b6 c600  st   [x]         5220  st([X])                         #31
              11b7 0200  nop              5221  nop()                           #32
              11b8 140e  ld   $0e,y       5222  ld(hi('v6502_next'),Y)          #33
              11b9 e020  jmp  y,$20       5223  jmp(Y,'v6502_next')             #34
              11ba 00ee  ld   $ee         5224  ld(-36/2)                       #35
                                          5225
                                          5226  label('v6502_cpx')
v6502_cpx:    11bb fcc0  bra  .cmp14      5227  bra('.cmp14')                   #12
              11bc 012a  ld   [$2a]       5228  ld([v6502_X])                   #13
                                          5229
                                          5230  label('v6502_cpy')
v6502_cpy:    11bd fcc0  bra  .cmp14      5231  bra('.cmp14')                   #12
                                          5232  label('v6502_cmp')
v6502_cmp:    11be 012b  ld   [$2b]       5233  ld([v6502_Y])                   #13,12
                                          5234  #
                                          5235  #label('v6502_cmp')             #12 Overlap
                                          5236  assert v6502_Cflag == 1
              11bf 0118  ld   [$18]       5237  ld([v6502_A])                   #13
                                          5238  label('.cmp14')
.cmp14:       11c0 1525  ld   [$25],y     5239  ld([v6502_ADH],Y)               #14
              11c1 e8c7  blt  .cmp17      5240  bmi('.cmp17')                   #15 Carry?
              11c2 ad00  suba [y,x]       5241  suba([Y,X])                     #16
              11c3 c228  st   [$28]       5242  st([v6502_Qz])                  #17 Z flag
              11c4 c229  st   [$29]       5243  st([v6502_Qn])                  #18 N flag
              11c5 fccb  bra  .cmp21      5244  bra('.cmp21')                   #19
              11c6 4d00  ora  [y,x]       5245  ora([Y,X])                      #20
                                          5246  label('.cmp17')
.cmp17:       11c7 c228  st   [$28]       5247  st([v6502_Qz])                  #17 Z flag
              11c8 c229  st   [$29]       5248  st([v6502_Qn])                  #18 N flag
              11c9 2d00  anda [y,x]       5249  anda([Y,X])                     #19
              11ca 0200  nop              5250  nop()                           #20
                                          5251  label('.cmp21')
.cmp21:       11cb 6080  xora $80         5252  xora(0x80)                      #21
              11cc 3080  anda $80,x       5253  anda(0x80,X)                    #22 Move carry to bit 0
              11cd 0127  ld   [$27]       5254  ld([v6502_P])                   #23 C flag
              11ce 20fe  anda $fe         5255  anda(~1)                        #24
              11cf 4500  ora  [x]         5256  ora([X])                        #25
              11d0 c227  st   [$27]       5257  st([v6502_P])                   #26
              11d1 140e  ld   $0e,y       5258  ld(hi('v6502_next'),Y)          #27
              11d2 e020  jmp  y,$20       5259  jmp(Y,'v6502_next')             #28
              11d3 00f1  ld   $f1         5260  ld(-30/2)                       #29
                                          5261
                                          5262  label('v6502_plp')
                                          5263  assert v6502_Nflag == 128
                                          5264  assert 2*v6502_Vflag == v6502_Vemu
v6502_plp:    11d4 011c  ld   [$1c]       5265  ld([v6502_S])                   #12
              11d5 1200  ld   ac,x        5266  ld(AC,X)                        #13
              11d6 8001  adda $01         5267  adda(1)                         #14
              11d7 c21c  st   [$1c]       5268  st([v6502_S])                   #15
              11d8 0500  ld   [x]         5269  ld([X])                         #16
              11d9 c229  st   [$29]       5270  st([v6502_Qn])                  #17 N flag
              11da 2002  anda $02         5271  anda(v6502_Zflag)               #18
              11db 6002  xora $02         5272  xora(v6502_Zflag)               #19
              11dc c228  st   [$28]       5273  st([v6502_Qz])                  #20 Z flag
              11dd 0500  ld   [x]         5274  ld([X])                         #21
              11de 207f  anda $7f         5275  anda(~v6502_Vemu)               #22 V to bit 7
              11df 8040  adda $40         5276  adda(v6502_Vflag)               #23
              11e0 c227  st   [$27]       5277  st([v6502_P])                   #24 All other flags
              11e1 140e  ld   $0e,y       5278  ld(hi('v6502_next'),Y)          #25
              11e2 e020  jmp  y,$20       5279  jmp(Y,'v6502_next')             #26
              11e3 00f2  ld   $f2         5280  ld(-28/2)                       #27
                                          5281
                                          5282  label('v6502_rti')
v6502_rti:    11e4 011c  ld   [$1c]       5283  ld([v6502_S])                   #12
              11e5 1200  ld   ac,x        5284  ld(AC,X)                        #13
              11e6 8003  adda $03         5285  adda(3)                         #14
              11e7 c21c  st   [$1c]       5286  st([v6502_S])                   #15
              11e8 0500  ld   [x]         5287  ld([X])                         #16
              11e9 c229  st   [$29]       5288  st([v6502_Qn])                  #17 N flag
              11ea 2002  anda $02         5289  anda(v6502_Zflag)               #18
              11eb 6002  xora $02         5290  xora(v6502_Zflag)               #19
              11ec c228  st   [$28]       5291  st([v6502_Qz])                  #20 Z flag
              11ed 1400  ld   $00,y       5292  ld(0,Y)                         #21
              11ee 0d00  ld   [y,x]       5293  ld([Y,X])                       #22
              11ef de00  st   [y,x++]     5294  st([Y,Xpp])                     #23 Just X++
              11f0 207f  anda $7f         5295  anda(~v6502_Vemu)               #24 V to bit 7
              11f1 8040  adda $40         5296  adda(v6502_Vflag)               #25
              11f2 c227  st   [$27]       5297  st([v6502_P])                   #26 All other flags
              11f3 0d00  ld   [y,x]       5298  ld([Y,X])                       #27
              11f4 de00  st   [y,x++]     5299  st([Y,Xpp])                     #28 Just X++
              11f5 c21a  st   [$1a]       5300  st([v6502_PCL])                 #29
              11f6 0d00  ld   [y,x]       5301  ld([Y,X])                       #30
              11f7 c21b  st   [$1b]       5302  st([v6502_PCH])                 #31
              11f8 0200  nop              5303  nop()                           #32
              11f9 140e  ld   $0e,y       5304  ld(hi('v6502_next'),Y)          #33
              11fa e020  jmp  y,$20       5305  jmp(Y,'v6502_next')             #34
              11fb 00ee  ld   $ee         5306  ld(-36/2)                       #35
                                          5307
                                          5308  #-----------------------------------------------------------------------
                                          5309  #       Extended vertical blank logic: interrupts
                                          5310  #-----------------------------------------------------------------------
              11fc 0200  nop              5311  align(0x100)
              11fd 0200  nop
              11fe 0200  nop
              11ff 0200  nop
                                          5312
                                          5313  # Check if an IRQ handler is defined
                                          5314  label('vBlankFirst#81')
vBlankFirst#81:
              1200 09f6  ld   [y,$f6]     5315  ld([Y,vIRQ_v5])                 #81
              1201 49f7  ora  [y,$f7]     5316  ora([Y,vIRQ_v5+1])              #82
                                          5317  bne('vBlankFirst#85')           #83
              1202 ec09  bne  vBlankFirst#85
              1203 0116  ld   [$16]       5318  ld([vPC])                       #84
              1204 0044  ld   $44         5319  runVcpu(183-85-extra,           #85 Application cycles (scan line 0)
              1205 c21e  st   [$1e]
              1206 1502  ld   [$02],y
              1207 e0ff  jmp  y,$ff
              1208 001b  ld   $1b
                                          5320      '---D line 0 timeout but no irq',
                                          5321      returnTo='vBlankFirst#183')
                                          5322
                                          5323  label('vBlankFirst#85')
vBlankFirst#85:
              1209 c230  st   [$30]       5324  st([vIrqSave+0])                #85 Save vPC
              120a 0117  ld   [$17]       5325  ld([vPC+1])                     #86
              120b c231  st   [$31]       5326  st([vIrqSave+1])                #87
              120c 0118  ld   [$18]       5327  ld([vAC])                       #88 Save vAC
              120d c232  st   [$32]       5328  st([vIrqSave+2])                #89
              120e 0119  ld   [$19]       5329  ld([vAC+1])                     #90
              120f c233  st   [$33]       5330  st([vIrqSave+3])                #91
              1210 0102  ld   [$02]       5331  ld([vCpuSelect])                #92 Save vCpuSelect for PREFIX
              1211 c234  st   [$34]       5332  st([vIrqSave+4])                #93
              1212 09f6  ld   [y,$f6]     5333  ld([Y,vIRQ_v5])                 #94 Set vPC to vIRQ
              1213 a002  suba $02         5334  suba(2)                         #95
              1214 c216  st   [$16]       5335  st([vPC])                       #96
              1215 09f7  ld   [y,$f7]     5336  ld([Y,vIRQ_v5+1])               #97
              1216 c217  st   [$17]       5337  st([vPC+1])                     #98
              1217 0102  ld   [$02]       5338  ld([vCpuSelect])                #99 Handler must save this if needed
              1218 c219  st   [$19]       5339  st([vAC+1])                     #100
              1219 0000  ld   $00         5340  ld(0)                           #101
              121a c218  st   [$18]       5341  st([vAC])                       #102
              121b 0002  ld   $02         5342  ld(hi('ENTER'))                 #103 Set vCpuSelect to ENTER (=regular vCPU)
              121c c202  st   [$02]       5343  st([vCpuSelect])                #104
              121d 0044  ld   $44         5344  runVcpu(183-105-extra,          #105 Application cycles (scan line 0)
              121e c21e  st   [$1e]
              121f 1502  ld   [$02],y
              1220 e0ff  jmp  y,$ff
              1221 0011  ld   $11
                                          5345      '---D line 0 timeout with irq',
                                          5346      returnTo='vBlankFirst#183')
                                          5347
                                          5348  # vIRQ sequence WITH interpreter switch
                                          5349  label('vRTI#18')
vRTI#18:      1222 0500  ld   [x]         5350  ld([X])                         #18
              1223 c202  st   [$02]       5351  st([vCpuSelect])                #19
              1224 0130  ld   [$30]       5352  ld([0x30])                      #20
              1225 c216  st   [$16]       5353  st([vPC])                       #21
              1226 0131  ld   [$31]       5354  ld([0x31])                      #22
              1227 c217  st   [$17]       5355  st([vPC+1])                     #23
              1228 0132  ld   [$32]       5356  ld([0x32])                      #24
              1229 c218  st   [$18]       5357  st([vAC])                       #25
              122a 0133  ld   [$33]       5358  ld([0x33])                      #26
              122b c219  st   [$19]       5359  st([vAC+1])                     #27
              122c 0200  nop              5360  nop()                           #28
              122d 0200  nop              5361  nop()                           #29
              122e 0200  nop              5362  nop()                           #30
              122f 0200  nop              5363  nop()                           #31
              1230 0200  nop              5364  nop()                           #32
              1231 0200  nop              5365  nop()                           #33
              1232 0200  nop              5366  nop()                           #34
              1233 0200  nop              5367  nop()                           #35
              1234 0200  nop              5368  nop()                           #36 #0 This MUST match maxTicks, (ie maxTicks=36)
              1235 1403  ld   $03,y       5369  ld(hi('RESYNC'),Y)              #1
              1236 e00c  jmp  y,$0c       5370  jmp(Y,'RESYNC')                 #2
              1237 0115  ld   [$15]       5371  ld([vTicks])                    #3
                                          5372
                                          5373  # Entered last line of vertical blank (line 40)
                                          5374  label('vBlankLast#34')
                                          5375
                                          5376  #-----------------------------------------------------------------------
                                          5377  #       Extended vertical blank logic: game controller decoding
                                          5378  #-----------------------------------------------------------------------
                                          5379  #
                                          5380  # Game controller types
                                          5381  # TypeA: Based on 74LS165 shift register (not supported)
                                          5382  # TypeB: Based on CD4021B shift register (standard)
                                          5383  # TypeC: Based on priority encoder
                                          5384  #
                                          5385  # Notes:
                                          5386  # - TypeA was only used during development and first beta test, before ROM v1
                                          5387  # - TypeB appears as type A with negative logic levels
                                          5388  # - TypeB is the game controller type that comes with the original kit and ROM v1
                                          5389  # - TypeB is mimicked by BabelFish / Pluggy McPlugface
                                          5390  # - TypeB requires a prolonged /SER_LATCH, therefore vPulse is 8 scanlines, not 2
                                          5391  # - TypeB and TypeC can be sampled in the same scanline
                                          5392  # - TypeA is 1 scanline shifted as it looks at a different edge (XXX up or down?)
                                          5393  # - TypeC gives incomplete information: lower buttons overshadow higher ones
                                          5394  #
                                          5395  #       TypeC    Alias    Button TypeB
                                          5396  #       00000000  ^@   -> Right  11111110
                                          5397  #       00000001  ^A   -> Left   11111101
                                          5398  #       00000011  ^C   -> Down   11111011
                                          5399  #       00000111  ^G   -> Up     11110111
                                          5400  #       00001111  ^O   -> Start  11101111
                                          5401  #       00011111  ^_   -> Select 11011111
                                          5402  #       00111111  ?    -> B      10111111
                                          5403  #       01111111  DEL  -> A      01111111
                                          5404  #       11111111       -> (None) 11111111
                                          5405  #
                                          5406  #       Conversion formula:
                                          5407  #               f(x) := 254 - x
                                          5408
                                          5409  # Detect controller TypeC codes
vBlankLast#34:
              1238 010f  ld   [$0f]       5410  ld([serialRaw])                 #34 if serialRaw in [0,1,3,7,15,31,63,127,255]
              1239 8001  adda $01         5411  adda(1)                         #35
              123a 210f  anda [$0f]       5412  anda([serialRaw])               #36
              123b ec4c  bne  .buttons#39 5413  bne('.buttons#39')              #37
                                          5414
                                          5415  # TypeC
              123c 010f  ld   [$0f]       5416  ld([serialRaw])                 #38 [TypeC] if serialRaw < serialLast
              123d 8001  adda $01         5417  adda(1)                         #39
              123e 2110  anda [$10]       5418  anda([serialLast])              #40
              123f ec43  bne  .buttons#43 5419  bne('.buttons#43')              #41
              1240 00fe  ld   $fe         5420  ld(254)                         #42 then clear the selected bit
              1241 0200  nop              5421  nop()                           #43
              1242 fc46  bra  .buttons#46 5422  bra('.buttons#46')              #44
                                          5423  label('.buttons#43')
.buttons#43:  1243 a10f  suba [$0f]       5424  suba([serialRaw])               #43,45
              1244 2111  anda [$11]       5425  anda([buttonState])             #44
              1245 c211  st   [$11]       5426  st([buttonState])               #45
                                          5427  label('.buttons#46')
.buttons#46:  1246 010f  ld   [$0f]       5428  ld([serialRaw])                 #46 Set the lower bits
              1247 4111  ora  [$11]       5429  ora([buttonState])              #47
                                          5430  label('.buttons#48')
.buttons#48:  1248 c211  st   [$11]       5431  st([buttonState])               #48
              1249 010f  ld   [$0f]       5432  ld([serialRaw])                 #49 Update serialLast for next pass
              124a e0a5  jmp  y,$a5       5433  jmp(Y,'vBlankLast#52')          #50
              124b c210  st   [$10]       5434  st([serialLast])                #51
                                          5435
                                          5436  # TypeB
                                          5437  # pChange = pNew & ~pOld
                                          5438  # nChange = nNew | ~nOld {DeMorgan}
                                          5439  label('.buttons#39')
.buttons#39:  124c 00ff  ld   $ff         5440  ld(255)                         #39 [TypeB] Bitwise edge-filter to detect button presses
              124d 6110  xora [$10]       5441  xora([serialLast])              #40
              124e 410f  ora  [$0f]       5442  ora([serialRaw])                #41 Catch button-press events
              124f 2111  anda [$11]       5443  anda([buttonState])             #42 Keep active button presses
              1250 410f  ora  [$0f]       5444  ora([serialRaw])                #43
              1251 0200  nop              5445  nop()                           #44
              1252 0200  nop              5446  nop()                           #45
              1253 fc48  bra  .buttons#48 5447  bra('.buttons#48')              #46
              1254 0200  nop              5448  nop()                           #47
                                          5449
                                          5450
                                          5451  #-----------------------------------------------------------------------
                                          5452  #       More SYS functions, (0x1200)
                                          5453  #-----------------------------------------------------------------------
                                          5454  #
                                          5455  # SYS_Exec_88 implementation
                                          5456  label('sys_Exec')
sys_Exec:     1255 d617  st   [$17],y     5457  st([vPC+1],Y)                   #18 Clear vPCH and Y
              1256 011c  ld   [$1c]       5458  ld([vSP])                       #19 Place ROM loader below current stack pointer
              1257 a037  suba $37         5459  suba(53+2)                      #20 (AC -> *+0) One extra word for PUSH
              1258 d21d  st   [$1d],x     5460  st([vTmp],X)                    #21
              1259 80fe  adda $fe         5461  adda(-2)                        #22 (AC -> *-2)
              125a c216  st   [$16]       5462  st([vPC])                       #23
                                          5463  # Start of manually compiled vCPU section
              125b dc75  st   $75,[y,x++] 5464  st('PUSH',    [Y,Xpp])          #24 *+0
              125c dccf  st   $cf,[y,x++] 5465  st('CALL',    [Y,Xpp])          #25 *+26 Fetch first byte
              125d 8023  adda $23         5466  adda(33-(-2))                   #26 (AC -> *+33)
              125e de00  st   [y,x++]     5467  st(           [Y,Xpp])          #27 *+27
              125f dc5e  st   $5e,[y,x++] 5468  st('ST',      [Y,Xpp])          #28 *+3 Chunk copy loop
              1260 dc27  st   $27,[y,x++] 5469  st(sysArgs+3, [Y,Xpp])          #29 *+4 High-address comes first
              1261 dccf  st   $cf,[y,x++] 5470  st('CALL',    [Y,Xpp])          #30 *+5
              1262 de00  st   [y,x++]     5471  st(           [Y,Xpp])          #31 *+6
              1263 dc5e  st   $5e,[y,x++] 5472  st('ST',      [Y,Xpp])          #32 *+7
              1264 dc26  st   $26,[y,x++] 5473  st(sysArgs+2, [Y,Xpp])          #33 *+8 Then the low address
              1265 dccf  st   $cf,[y,x++] 5474  st('CALL',    [Y,Xpp])          #34 *+9
              1266 de00  st   [y,x++]     5475  st(           [Y,Xpp])          #35 *+10
              1267 dc5e  st   $5e,[y,x++] 5476  st('ST',      [Y,Xpp])          #36 *+11 Byte copy loop
              1268 dc28  st   $28,[y,x++] 5477  st(sysArgs+4, [Y,Xpp])          #37 *+12 Byte count (0 means 256)
              1269 dccf  st   $cf,[y,x++] 5478  st('CALL',    [Y,Xpp])          #38 *+13
              126a de00  st   [y,x++]     5479  st(           [Y,Xpp])          #39 *+14
              126b dcf0  st   $f0,[y,x++] 5480  st('POKE',    [Y,Xpp])          #40 *+15
              126c dc26  st   $26,[y,x++] 5481  st(sysArgs+2, [Y,Xpp])          #41 *+16
              126d dc93  st   $93,[y,x++] 5482  st('INC',     [Y,Xpp])          #42 *+17
              126e dc26  st   $26,[y,x++] 5483  st(sysArgs+2, [Y,Xpp])          #43 *+18
              126f dc1a  st   $1a,[y,x++] 5484  st('LD',      [Y,Xpp])          #44 *+19
              1270 dc28  st   $28,[y,x++] 5485  st(sysArgs+4, [Y,Xpp])          #45 *+20
              1271 dce6  st   $e6,[y,x++] 5486  st('SUBI',    [Y,Xpp])          #46 *+21
              1272 dc01  st   $01,[y,x++] 5487  st(1,         [Y,Xpp])          #47 *+22
              1273 dc35  st   $35,[y,x++] 5488  st('BCC',     [Y,Xpp])          #48 *+23
              1274 dc72  st   $72,[y,x++] 5489  st('NE',      [Y,Xpp])          #49 *+24
              1275 80e8  adda $e8         5490  adda(11-2-33)                   #50 (AC -> *+9)
              1276 de00  st   [y,x++]     5491  st(           [Y,Xpp])          #51 *+25
              1277 dccf  st   $cf,[y,x++] 5492  st('CALL',    [Y,Xpp])          #52 *+26 Go to next block
              1278 8018  adda $18         5493  adda(33-9)                      #53 (AC -> *+33)
              1279 de00  st   [y,x++]     5494  st(           [Y,Xpp])          #54 *+27
              127a dc35  st   $35,[y,x++] 5495  st('BCC',     [Y,Xpp])          #55 *+28
              127b dc72  st   $72,[y,x++] 5496  st('NE',      [Y,Xpp])          #56 *+29
              127c 80e0  adda $e0         5497  adda(3-2-33)                    #57 (AC -> *+1)
              127d de00  st   [y,x++]     5498  st(           [Y,Xpp])          #58 *+30
              127e dc63  st   $63,[y,x++] 5499  st('POP',     [Y,Xpp])          #59 *+31 End
              127f dcff  st   $ff,[y,x++] 5500  st('RET',     [Y,Xpp])          #60 *+32
                                          5501  # Pointer constant pointing to the routine below (for use by CALL)
              1280 8022  adda $22         5502  adda(35-1)                      #61 (AC -> *+35)
              1281 de00  st   [y,x++]     5503  st(           [Y,Xpp])          #62 *+33
              1282 dc00  st   $00,[y,x++] 5504  st(0,         [Y,Xpp])          #63 *+34
                                          5505  # Routine to read next byte from ROM and advance read pointer
              1283 dc1a  st   $1a,[y,x++] 5506  st('LD',      [Y,Xpp])          #64 *+35 Test for end of ROM table
              1284 dc24  st   $24,[y,x++] 5507  st(sysArgs+0, [Y,Xpp])          #65 *+36
              1285 dc8c  st   $8c,[y,x++] 5508  st('XORI',    [Y,Xpp])          #66 *+37
              1286 dcfb  st   $fb,[y,x++] 5509  st(251,       [Y,Xpp])          #67 *+38
              1287 dc35  st   $35,[y,x++] 5510  st('BCC',     [Y,Xpp])          #68 *+39
              1288 dc72  st   $72,[y,x++] 5511  st('NE',      [Y,Xpp])          #69 *+40
              1289 8009  adda $09         5512  adda(46-2-35)                   #70 (AC -> *+44)
              128a de00  st   [y,x++]     5513  st(           [Y,Xpp])          #71 *+41
              128b dc5e  st   $5e,[y,x++] 5514  st('ST',      [Y,Xpp])          #72 *+42 Wrap to next ROM page
              128c dc24  st   $24,[y,x++] 5515  st(sysArgs+0, [Y,Xpp])          #73 *+43
              128d dc93  st   $93,[y,x++] 5516  st('INC',     [Y,Xpp])          #74 *+44
              128e dc25  st   $25,[y,x++] 5517  st(sysArgs+1, [Y,Xpp])          #75 *+45
              128f dc21  st   $21,[y,x++] 5518  st('LDW',     [Y,Xpp])          #76 *+46 Read next byte from ROM table
              1290 dc24  st   $24,[y,x++] 5519  st(sysArgs+0, [Y,Xpp])          #77 *+47
              1291 dc7f  st   $7f,[y,x++] 5520  st('LUP',     [Y,Xpp])          #78 *+48
              1292 dc00  st   $00,[y,x++] 5521  st(0,         [Y,Xpp])          #79 *+49
              1293 dc93  st   $93,[y,x++] 5522  st('INC',     [Y,Xpp])          #80 *+50 Increment read pointer
              1294 dc24  st   $24,[y,x++] 5523  st(sysArgs+0, [Y,Xpp])          #81 *+51
              1295 dcff  st   $ff,[y,x++] 5524  st('RET',     [Y,Xpp])          #82 *+52 Return
                                          5525  # Return to interpreter
              1296 1403  ld   $03,y       5526  ld(hi('REENTER'),Y)             #83
              1297 e0cb  jmp  y,$cb       5527  jmp(Y,'REENTER')                #84
              1298 00d4  ld   $d4         5528  ld(-88/2)                       #85
                                          5529
                                          5530  # SYS_VDrawBits_134 implementation
                                          5531  label('sys_VDrawBits')
sys_VDrawBits:
              1299 0000  ld   $00         5532  ld(0)                           #18
                                          5533  label('.sysVdb0')
.sysVdb0:     129a c21d  st   [$1d]       5534  st([vTmp])                      #19+i*25
              129b 9529  adda [$29],y     5535  adda([sysArgs+5],Y)             #20+i*25 Y=[sysPos+1]+[vTmp]
              129c 0126  ld   [$26]       5536  ld([sysArgs+2])                 #21+i*25 Select color
              129d e8a0  blt  $12a0       5537  bmi(pc()+3)                     #22+i*25
              129e fca1  bra  $12a1       5538  bra(pc()+3)                     #23+i*25
              129f 0124  ld   [$24]       5539  ld([sysArgs+0])                 #24+i*25
              12a0 0125  ld   [$25]       5540  ld([sysArgs+1])                 #24+i*25(!)
              12a1 ce00  st   [y,x]       5541  st([Y,X])                       #25+i*25 Draw pixel
              12a2 0126  ld   [$26]       5542  ld([sysArgs+2])                 #26+i*25 Shift byte left
              12a3 8200  adda ac          5543  adda(AC)                        #27+i*25
              12a4 c226  st   [$26]       5544  st([sysArgs+2])                 #28+i*25
              12a5 011d  ld   [$1d]       5545  ld([vTmp])                      #29+i*25 Unrolled loop (once)
              12a6 8129  adda [$29]       5546  adda([sysArgs+5])               #31+i*25
              12a7 9401  adda $01,y       5547  adda(1,Y)                       #30+i*25 Y=[sysPos+1]+[vTmp]+1
              12a8 0126  ld   [$26]       5548  ld([sysArgs+2])                 #32+i*25 Select color
              12a9 e8ac  blt  $12ac       5549  bmi(pc()+3)                     #33+i*25
              12aa fcad  bra  $12ad       5550  bra(pc()+3)                     #34+i*25
              12ab 0124  ld   [$24]       5551  ld([sysArgs+0])                 #35+i*25
              12ac 0125  ld   [$25]       5552  ld([sysArgs+1])                 #35+i*25(!)
              12ad ce00  st   [y,x]       5553  st([Y,X])                       #36+i*25 Draw pixel
              12ae 0126  ld   [$26]       5554  ld([sysArgs+2])                 #37+i*25 Shift byte left
              12af 8200  adda ac          5555  adda(AC)                        #38+i*25
              12b0 c226  st   [$26]       5556  st([sysArgs+2])                 #39+i*25
              12b1 011d  ld   [$1d]       5557  ld([vTmp])                      #40+i*25 Loop counter
              12b2 a006  suba $06         5558  suba(6)                         #41+i*25
              12b3 ec9a  bne  .sysVdb0    5559  bne('.sysVdb0')                 #42+i*25
              12b4 8008  adda $08         5560  adda(8)                         #43+i*25 Steps of 2
              12b5 1403  ld   $03,y       5561  ld(hi('REENTER'),Y)             #119
              12b6 e0cb  jmp  y,$cb       5562  jmp(Y,'REENTER')                #120
              12b7 00c2  ld   $c2         5563  ld(-124/2)                      #121
                                          5564
                                          5565  # SYS_ResetWaveforms_v4_50 implementation
                                          5566  label('sys_ResetWaveforms')
sys_ResetWaveforms:
              12b8 0118  ld   [$18]       5567  ld([vAC+0])                     #18 X=4i
              12b9 8200  adda ac          5568  adda(AC)                        #19
              12ba 9200  adda ac,x        5569  adda(AC,X)                      #20
              12bb 0118  ld   [$18]       5570  ld([vAC+0])                     #21
              12bc de00  st   [y,x++]     5571  st([Y,Xpp])                     #22 Sawtooth: T[4i+0] = i
              12bd 2020  anda $20         5572  anda(0x20)                      #23 Triangle: T[4i+1] = 2i if i<32 else 127-2i
              12be ecc1  bne  $12c1       5573  bne(pc()+3)                     #24
              12bf 0118  ld   [$18]       5574  ld([vAC+0])                     #25
              12c0 fcc3  bra  $12c3       5575  bra(pc()+3)                     #26
              12c1 8118  adda [$18]       5576  adda([vAC+0])                   #26,27
              12c2 607f  xora $7f         5577  xora(127)                       #27
              12c3 de00  st   [y,x++]     5578  st([Y,Xpp])                     #28
              12c4 0118  ld   [$18]       5579  ld([vAC+0])                     #29 Pulse: T[4i+2] = 0 if i<32 else 63
              12c5 2020  anda $20         5580  anda(0x20)                      #30
              12c6 ecc9  bne  $12c9       5581  bne(pc()+3)                     #31
              12c7 fcca  bra  $12ca       5582  bra(pc()+3)                     #32
              12c8 0000  ld   $00         5583  ld(0)                           #33
              12c9 003f  ld   $3f         5584  ld(63)                          #33(!)
              12ca de00  st   [y,x++]     5585  st([Y,Xpp])                     #34
              12cb 0118  ld   [$18]       5586  ld([vAC+0])                     #35 Sawtooth: T[4i+3] = i
              12cc ce00  st   [y,x]       5587  st([Y,X])                       #36
              12cd 8001  adda $01         5588  adda(1)                         #37 i += 1
              12ce c218  st   [$18]       5589  st([vAC+0])                     #38
              12cf 6040  xora $40         5590  xora(64)                        #39 For 64 iterations
              12d0 f0d3  beq  $12d3       5591  beq(pc()+3)                     #40
              12d1 fcd4  bra  $12d4       5592  bra(pc()+3)                     #41
              12d2 00fe  ld   $fe         5593  ld(-2)                          #42
              12d3 0000  ld   $00         5594  ld(0)                           #42(!)
              12d4 8116  adda [$16]       5595  adda([vPC])                     #43
              12d5 c216  st   [$16]       5596  st([vPC])                       #44
              12d6 1403  ld   $03,y       5597  ld(hi('REENTER'),Y)             #45
              12d7 e0cb  jmp  y,$cb       5598  jmp(Y,'REENTER')                #46
              12d8 00e7  ld   $e7         5599  ld(-50/2)                       #47
                                          5600
                                          5601  # SYS_ShuffleNoise_v4_46 implementation
                                          5602  label('sys_ShuffleNoise')
sys_ShuffleNoise:
              12d9 1118  ld   [$18],x     5603  ld([vAC+0],X)                   #18 tmp = T[4j]
              12da 0d00  ld   [y,x]       5604  ld([Y,X])                       #19
              12db c21d  st   [$1d]       5605  st([vTmp])                      #20
              12dc 1119  ld   [$19],x     5606  ld([vAC+1],X)                   #21 T[4j] = T[4i]
              12dd 0d00  ld   [y,x]       5607  ld([Y,X])                       #22
              12de 1118  ld   [$18],x     5608  ld([vAC+0],X)                   #23
              12df ce00  st   [y,x]       5609  st([Y,X])                       #24
              12e0 8200  adda ac          5610  adda(AC)                        #25 j += T[4i]
              12e1 8200  adda ac          5611  adda(AC,)                       #26
              12e2 8118  adda [$18]       5612  adda([vAC+0])                   #27
              12e3 c218  st   [$18]       5613  st([vAC+0])                     #28
              12e4 1119  ld   [$19],x     5614  ld([vAC+1],X)                   #29 T[4i] = tmp
              12e5 011d  ld   [$1d]       5615  ld([vTmp])                      #30
              12e6 ce00  st   [y,x]       5616  st([Y,X])                       #31
              12e7 0119  ld   [$19]       5617  ld([vAC+1])                     #32 i += 1
              12e8 8004  adda $04         5618  adda(4)                         #33
              12e9 c219  st   [$19]       5619  st([vAC+1])                     #34
              12ea f0ed  beq  $12ed       5620  beq(pc()+3)                     #35 For 64 iterations
              12eb fcee  bra  $12ee       5621  bra(pc()+3)                     #36
              12ec 00fe  ld   $fe         5622  ld(-2)                          #37
              12ed 0000  ld   $00         5623  ld(0)                           #37(!)
              12ee 8116  adda [$16]       5624  adda([vPC])                     #38
              12ef c216  st   [$16]       5625  st([vPC])                       #39
              12f0 1403  ld   $03,y       5626  ld(hi('NEXTY'),Y)               #40
              12f1 e000  jmp  y,$00       5627  jmp(Y,'NEXTY')                  #41
              12f2 00ea  ld   $ea         5628  ld(-44/2)                       #42
                                          5629
                                          5630
              12f3 0200  nop              5631  fillers(until=0xff)
              12f4 0200  nop
              12f5 0200  nop
              * 12 times
              12ff 0200  nop              5632  align(0x100, size=0x100)
                                          5633
                                          5634
                                          5635  #-----------------------------------------------------------------------
                                          5636  #       More SYS functions, (0x1300)
                                          5637  #-----------------------------------------------------------------------
                                          5638  #
                                          5639  # sys_Multiply_u8, res:u16 = x:u8 * y:u8
                                          5640  # sysArgs0,1=res, sysArgs2=x, sysArgs3=y, sysArgs4=count
                                          5641  label('SYS_Multiply_u8_vX_48')
SYS_Multiply_u8_vX_48:
              1300 0128  ld   [$28]       5642  ld([sysArgs+4])                 #15,
              1301 a001  suba $01         5643  suba(1)                         #16, count--
                                          5644  bge('.sys_multiply_u8_19')      #17,
              1302 f407  bge  .sys_multiply_u8_19
              1303 c228  st   [$28]       5645  st([sysArgs+4])                 #18,
              1304 1403  ld   $03,y       5646  ld(hi('REENTER'),Y)             #19,
              1305 e0cb  jmp  y,$cb       5647  jmp(Y,'REENTER')                #20,
              1306 00f4  ld   $f4         5648  ld(-24/2)                       #21,
                                          5649
                                          5650  label('.sys_multiply_u8_19')
.sys_multiply_u8_19:
              1307 0124  ld   [$24]       5651  ld([sysArgs+0])                 #19,
              1308 3080  anda $80,x       5652  anda(128,X)                     #20,
              1309 8124  adda [$24]       5653  adda([sysArgs+0])               #21,
              130a c224  st   [$24]       5654  st([sysArgs+0])                 #22,
              130b 0500  ld   [x]         5655  ld([X])                         #23,
              130c 8125  adda [$25]       5656  adda([sysArgs+1])               #24,
              130d 8125  adda [$25]       5657  adda([sysArgs+1])               #25,
              130e c225  st   [$25]       5658  st([sysArgs+1])                 #26, result <<1
              130f 0126  ld   [$26]       5659  ld([sysArgs+2])                 #27,
                                          5660  bmi('.sys_multiply_u8_30')      #28, if(x & 0x80)
              1310 e819  blt  .sys_multiply_u8_30
              1311 8126  adda [$26]       5661  adda([sysArgs+2])               #29,
              1312 c226  st   [$26]       5662  st([sysArgs+2])                 #30, x <<= 1
              1313 0116  ld   [$16]       5663  ld([vPC])                       #31,
              1314 a002  suba $02         5664  suba(2)                         #32,
              1315 c216  st   [$16]       5665  st([vPC])                       #33, restart
              1316 1403  ld   $03,y       5666  ld(hi('NEXTY'),Y)               #34,
              1317 e000  jmp  y,$00       5667  jmp(Y,'NEXTY')                  #35,
              1318 00ed  ld   $ed         5668  ld(-38/2)                       #36,
                                          5669
                                          5670  label('.sys_multiply_u8_30')
.sys_multiply_u8_30:
              1319 c226  st   [$26]       5671  st([sysArgs+2])                 #30, x <<= 1
              131a 0124  ld   [$24]       5672  ld([sysArgs+0])                 #31,
              131b 8127  adda [$27]       5673  adda([sysArgs+3])               #32,
              131c c224  st   [$24]       5674  st([sysArgs+0])                 #33, res.lo += y
                                          5675  bmi('.sys_multiply_u8_36')      #34, check carry
              131d e82a  blt  .sys_multiply_u8_36
              131e a127  suba [$27]       5676  suba([sysArgs+3])               #35, initial value of res.lo
              131f 4127  ora  [$27]       5677  ora([sysArgs+3])                #36, carry in bit 7
              1320 3080  anda $80,x       5678  anda(0x80,X)                    #37, move carry to bit 0
              1321 0500  ld   [x]         5679  ld([X])                         #38,
              1322 8125  adda [$25]       5680  adda([sysArgs+1])               #39,
              1323 c225  st   [$25]       5681  st([sysArgs+1])                 #40, res.hi += carry
              1324 0116  ld   [$16]       5682  ld([vPC])                       #41,
              1325 a002  suba $02         5683  suba(2)                         #42,
              1326 c216  st   [$16]       5684  st([vPC])                       #43, restart
              1327 1403  ld   $03,y       5685  ld(hi('NEXTY'),Y)               #44,
              1328 e000  jmp  y,$00       5686  jmp(Y,'NEXTY')                  #45,
              1329 00e8  ld   $e8         5687  ld(-48/2)                       #46,
                                          5688
                                          5689  label('.sys_multiply_u8_36')
.sys_multiply_u8_36:
              132a 2127  anda [$27]       5690  anda([sysArgs+3])               #36, carry in bit 7
              132b 3080  anda $80,x       5691  anda(0x80,X)                    #37, move carry to bit 0
              132c 0500  ld   [x]         5692  ld([X])                         #38,
              132d 8125  adda [$25]       5693  adda([sysArgs+1])               #39,
              132e c225  st   [$25]       5694  st([sysArgs+1])                 #40, res.hi += carry
              132f 0116  ld   [$16]       5695  ld([vPC])                       #41,
              1330 a002  suba $02         5696  suba(2)                         #42,
              1331 c216  st   [$16]       5697  st([vPC])                       #43, restart
              1332 1403  ld   $03,y       5698  ld(hi('NEXTY'),Y)               #44,
              1333 e000  jmp  y,$00       5699  jmp(Y,'NEXTY')                  #45,
              1334 00e8  ld   $e8         5700  ld(-48/2)                       #46,
                                          5701
                                          5702  # leave some room for updates
              1335 0200  nop              5703  fillers(until=0x40)
              1336 0200  nop
              1337 0200  nop
              * 11 times
                                          5704
                                          5705
                                          5706  # sys_OffsetVTableY, sysArgs0 = scanline:8, sysArgs1 = scanCount:8, sysArgs2,3 = videoTable:16
                                          5707  label('SYS_OffsetVTableY_vX_36')
SYS_OffsetVTableY_vX_36:
              1340 0124  ld   [$24]       5708  ld([sysArgs+0])                 #15, scanline
              1341 1126  ld   [$26],x     5709  ld([sysArgs+2],X)               #16,
              1342 1527  ld   [$27],y     5710  ld([sysArgs+3],Y)               #17,
              1343 ce00  st   [y,x]       5711  st([Y,X])                       #18, [videoTable] = scanline
              1344 8001  adda $01         5712  adda(1)                         #19,
              1345 c224  st   [$24]       5713  st([sysArgs+0])                 #20, scanline++
              1346 0126  ld   [$26]       5714  ld([sysArgs+2])                 #21,
              1347 8002  adda $02         5715  adda(2)                         #22,
              1348 c226  st   [$26]       5716  st([sysArgs+2])                 #23, videoTable += 2
              1349 0125  ld   [$25]       5717  ld([sysArgs+1])                 #24,
              134a a001  suba $01         5718  suba(1)                         #25,
                                          5719  beq('.sys_offsetvty_28')        #26,
              134b f053  beq  .sys_offsetvty_28
              134c c225  st   [$25]       5720  st([sysArgs+1])                 #27, scanCount--
              134d 0116  ld   [$16]       5721  ld([vPC])                       #28,
              134e a002  suba $02         5722  suba(2)                         #29,
              134f c216  st   [$16]       5723  st([vPC])                       #30, restart
              1350 1403  ld   $03,y       5724  ld(hi('REENTER'),Y)             #31,
              1351 e0cb  jmp  y,$cb       5725  jmp(Y,'REENTER')                #32,
              1352 00ee  ld   $ee         5726  ld(-36/2)                       #33,
                                          5727  label('.sys_offsetvty_28')
.sys_offsetvty_28:
              1353 1403  ld   $03,y       5728  ld(hi('NEXTY'),Y)               #28,
              1354 e000  jmp  y,$00       5729  jmp(Y,'NEXTY')                  #29,
              1355 00f0  ld   $f0         5730  ld(-32/2)                       #30,
                                          5731
                                          5732  # leave some room for updates
              1356 0200  nop              5733  fillers(until=0x60)
              1357 0200  nop
              1358 0200  nop
              * 10 times
                                          5734
                                          5735
                                          5736  # sys_FillByteSeq, sysArgs0,1=dst, sysArg2=start, sysArg3=step, sysArg4=count
                                          5737  label('SYS_FillByteSeq_vX_36')
SYS_FillByteSeq_vX_36:
              1360 1525  ld   [$25],y     5738  ld([sysArgs+1],Y)               #15 dst pointer
              1361 1124  ld   [$24],x     5739  ld([sysArgs+0],X)               #16,
              1362 0124  ld   [$24]       5740  ld([sysArgs+0])                 #17,
              1363 8001  adda $01         5741  adda(1)                         #18,
              1364 c224  st   [$24]       5742  st([sysArgs+0])                 #19, dst++
              1365 0126  ld   [$26]       5743  ld([sysArgs+2])                 #20,
              1366 ce00  st   [y,x]       5744  st([Y,X])                       #21, start
              1367 8127  adda [$27]       5745  adda([sysArgs+3])               #22,
              1368 c226  st   [$26]       5746  st([sysArgs+2])                 #23, start += step
              1369 0128  ld   [$28]       5747  ld([sysArgs+4])                 #24,
              136a a001  suba $01         5748  suba(1)                         #25,
                                          5749  beq('.sys_fillbyteseq_28')      #26,
              136b f073  beq  .sys_fillbyteseq_28
              136c c228  st   [$28]       5750  st([sysArgs+4])                 #27,
              136d 0116  ld   [$16]       5751  ld([vPC])                       #28,
              136e a002  suba $02         5752  suba(2)                         #29,
              136f c216  st   [$16]       5753  st([vPC])                       #30, restart
              1370 1403  ld   $03,y       5754  ld(hi('REENTER'),Y)             #31,
              1371 e0cb  jmp  y,$cb       5755  jmp(Y,'REENTER')                #32,
              1372 00ee  ld   $ee         5756  ld(-36/2)                       #33,
                                          5757  label('.sys_fillbyteseq_28')
.sys_fillbyteseq_28:
              1373 1403  ld   $03,y       5758  ld(hi('NEXTY'),Y)               #28,
              1374 e000  jmp  y,$00       5759  jmp(Y,'NEXTY')                  #29,
              1375 00f0  ld   $f0         5760  ld(-32/2)                       #30,
                                          5761
                                          5762  # leave some room for updates
              1376 0200  nop              5763  fillers(until=0x80)
              1377 0200  nop
              1378 0200  nop
              * 10 times
                                          5764
                                          5765
                                          5766  # sys_AddInt8Array, sysArgs0,1=src, sysArgs2,3=dst, sysArgs4=index, sysArgs5=count, dst(i) += src(i)
                                          5767  label('SYS_AddInt8Array_vX_40')
SYS_AddInt8Array_vX_40:
              1380 0124  ld   [$24]       5768  ld([sysArgs+0])                 #15,
              1381 9128  adda [$28],x     5769  adda([sysArgs+4],X)             #16,
              1382 1525  ld   [$25],y     5770  ld([sysArgs+1],Y)               #17,
              1383 0d00  ld   [y,x]       5771  ld([Y,X])                       #18,
              1384 c21d  st   [$1d]       5772  st([vTmp])                      #19
              1385 0126  ld   [$26]       5773  ld([sysArgs+2])                 #20,
              1386 9128  adda [$28],x     5774  adda([sysArgs+4],X)             #21,
              1387 1527  ld   [$27],y     5775  ld([sysArgs+3],Y)               #22,
              1388 011d  ld   [$1d]       5776  ld([vTmp])                      #23
              1389 8d00  adda [y,x]       5777  adda([Y,X])                     #24,
              138a ce00  st   [y,x]       5778  st([Y,X])                       #25,
              138b 0129  ld   [$29]       5779  ld([sysArgs+5])                 #26,
              138c a001  suba $01         5780  suba(1)                         #27,
                                          5781  beq('.sys_addint8Array_30')     #28,
              138d f098  beq  .sys_addint8Array_30
              138e c229  st   [$29]       5782  st([sysArgs+5])                 #29,
              138f 0128  ld   [$28]       5783  ld([sysArgs+4])                 #30,
              1390 8001  adda $01         5784  adda(1)                         #31,
              1391 c228  st   [$28]       5785  st([sysArgs+4])                 #32, index++
              1392 0116  ld   [$16]       5786  ld([vPC])                       #33,
              1393 a002  suba $02         5787  suba(2)                         #34,
              1394 c216  st   [$16]       5788  st([vPC])                       #35,
              1395 1403  ld   $03,y       5789  ld(hi('NEXTY'),Y)               #36,
              1396 e000  jmp  y,$00       5790  jmp(Y,'NEXTY')                  #37,
              1397 00ec  ld   $ec         5791  ld(-40/2)                       #38,
                                          5792  label('.sys_addint8Array_30')
.sys_addint8Array_30:
              1398 1403  ld   $03,y       5793  ld(hi('NEXTY'),Y)               #30,
              1399 e000  jmp  y,$00       5794  jmp(Y,'NEXTY')                  #31,
              139a 00ef  ld   $ef         5795  ld(-34/2)                       #32,
                                          5796
                                          5797  # leave some room for updates
              139b 0200  nop              5798  fillers(until=0xa0)
              139c 0200  nop
              139d 0200  nop
              * 5 times
                                          5799
                                          5800
                                          5801  # sys_ParityFill, sysArgs0,1=borderColour:fillColour, sysArgs2,3=X:Y start address
                                          5802  #                 sysArgs4=countXY, sysArgs6=fill toggle, sysArgs7=replace colour
                                          5803  label('SYS_ParityFill_vX_44')
SYS_ParityFill_vX_44:
              13a0 1527  ld   [$27],y     5804  ld([sysArgs+3],Y)               #15,
              13a1 1126  ld   [$26],x     5805  ld([sysArgs+2],X)               #16,
              13a2 0126  ld   [$26]       5806  ld([sysArgs+2])                 #17,
              13a3 8001  adda $01         5807  adda(1)                         #18,
              13a4 c226  st   [$26]       5808  st([sysArgs+2])                 #19, x++
              13a5 0128  ld   [$28]       5809  ld([sysArgs+4])                 #20,
              13a6 a001  suba $01         5810  suba(1)                         #21, countX--
                                          5811  bge('.sys_parityfill_24')       #22,
              13a7 f4be  bge  .sys_parityfill_24
              13a8 c228  st   [$28]       5812  st([sysArgs+4])                 #23,
              13a9 0127  ld   [$27]       5813  ld([sysArgs+3])                 #24,
              13aa 8001  adda $01         5814  adda(1)                         #25,
              13ab c227  st   [$27]       5815  st([sysArgs+3])                 #26, y++
              13ac 0129  ld   [$29]       5816  ld([sysArgs+5])                 #27,
              13ad a001  suba $01         5817  suba(1)                         #28, countY--
              13ae c229  st   [$29]       5818  st([sysArgs+5])                 #29,
                                          5819  bne('.sys_parityfill_32')       #30,
              13af ecb3  bne  .sys_parityfill_32
              13b0 1403  ld   $03,y       5820  ld(hi('REENTER'),Y)             #31,
              13b1 e0cb  jmp  y,$cb       5821  jmp(Y,'REENTER')                #32,
              13b2 00ee  ld   $ee         5822  ld(-36/2)                       #33,
                                          5823  label('.sys_parityfill_32')
.sys_parityfill_32:
              13b3 0182  ld   [$82]       5824  ld([0x82])                      #32,
              13b4 c226  st   [$26]       5825  st([sysArgs+2])                 #33, restore x
              13b5 0183  ld   [$83]       5826  ld([0x83])                      #34,
              13b6 c228  st   [$28]       5827  st([sysArgs+4])                 #35, restore countX
              13b7 0184  ld   [$84]       5828  ld([0x84])                      #36,
              13b8 c22a  st   [$2a]       5829  st([sysArgs+6])                 #37, restore fill toggle
              13b9 0116  ld   [$16]       5830  ld([vPC])                       #38,
              13ba a002  suba $02         5831  suba(2)                         #39,
              13bb c216  st   [$16]       5832  st([vPC])                       #40, restart
              13bc e000  jmp  y,$00       5833  jmp(Y,'NEXTY')                  #41,
              13bd 00ea  ld   $ea         5834  ld(-44/2)                       #42,
                                          5835
                                          5836  label('.sys_parityfill_24')
.sys_parityfill_24:
              13be 012a  ld   [$2a]       5837  ld([sysArgs+6])                 #24, check fill toggle
                                          5838  bne('.sys_parityfill_27')       #25,
              13bf ecc9  bne  .sys_parityfill_27
              13c0 0d00  ld   [y,x]       5839  ld([Y,X])                       #26, get pixel
              13c1 6124  xora [$24]       5840  xora([sysArgs+0])               #27, check border colour
                                          5841  beq('.sys_parityfill_30')       #28,
              13c2 f0d8  beq  .sys_parityfill_30
              13c3 0116  ld   [$16]       5842  ld([vPC])                       #29,
              13c4 a002  suba $02         5843  suba(2)                         #30,
              13c5 c216  st   [$16]       5844  st([vPC])                       #31, restart
              13c6 1403  ld   $03,y       5845  ld(hi('NEXTY'),Y)               #32,
              13c7 e000  jmp  y,$00       5846  jmp(Y,'NEXTY')                  #33,
              13c8 00ee  ld   $ee         5847  ld(-36/2)                       #34,
                                          5848
                                          5849  label('.sys_parityfill_27')
.sys_parityfill_27:
              13c9 6124  xora [$24]       5850  xora([sysArgs+0])               #27, check border colour
                                          5851  beq('.sys_parityfill_30')       #28,
              13ca f0d8  beq  .sys_parityfill_30
              13cb 0d00  ld   [y,x]       5852  ld([Y,X])                       #29, get pixel
              13cc 612b  xora [$2b]       5853  xora([sysArgs+7])               #30, check replace colour
              13cd ecd0  bne  $13d0       5854  bne(pc()+3)                     #31, ignore replace colour
              13ce fcd1  bra  $13d1       5855  bra(pc()+3)                     #32,
              13cf 0125  ld   [$25]       5856  ld([sysArgs+1])                 #33, fill colour
              13d0 0d00  ld   [y,x]       5857  ld([Y,X])                       #33! get pixel
              13d1 ce00  st   [y,x]       5858  st([Y,X])                       #34, set pixel
              13d2 0116  ld   [$16]       5859  ld([vPC])                       #35,
              13d3 a002  suba $02         5860  suba(2)                         #36,
              13d4 c216  st   [$16]       5861  st([vPC])                       #37, restart
              13d5 1403  ld   $03,y       5862  ld(hi('NEXTY'),Y)               #38,
              13d6 e000  jmp  y,$00       5863  jmp(Y,'NEXTY')                  #39,
              13d7 00eb  ld   $eb         5864  ld(-42/2)                       #40,
                                          5865
                                          5866  label('.sys_parityfill_30')
.sys_parityfill_30:
              13d8 012a  ld   [$2a]       5867  ld([sysArgs+6])                 #30,
              13d9 6001  xora $01         5868  xora(0x01)                      #31,
              13da c22a  st   [$2a]       5869  st([sysArgs+6])                 #32, toggle fill
              13db 0116  ld   [$16]       5870  ld([vPC])                       #33,
              13dc a002  suba $02         5871  suba(2)                         #34,
              13dd c216  st   [$16]       5872  st([vPC])                       #35, restart
              13de 1403  ld   $03,y       5873  ld(hi('NEXTY'),Y)               #36,
              13df e000  jmp  y,$00       5874  jmp(Y,'NEXTY')                  #37,
              13e0 00ec  ld   $ec         5875  ld(-40/2)                       #38,
                                          5876
                                          5877
              13e1 0200  nop              5878  fillers(until=0xff)
              13e2 0200  nop
              13e3 0200  nop
              * 30 times
              13ff 0200  nop              5879  align(0x100, size=0x100)
                                          5880
                                          5881  #-----------------------------------------------------------------------
                                          5882  #       More vCPU instruction implementations, (0x1400)
                                          5883  #-----------------------------------------------------------------------
                                          5884  #
                                          5885  # JGT implementation
                                          5886  label('jgt#13')
jgt#13:       1400 0119  ld   [$19]       5887  ld([vAC+1])                     #13
              1401 e80a  blt  .jgt#16     5888  blt('.jgt#16')                  #14 if vAC.hi < 0
              1402 4118  ora  [$18]       5889  ora([vAC])                      #15
              1403 ec10  bne  .jgt#18     5890  bne('.jgt#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              1404 0116  ld   [$16]       5891  ld([vPC])                       #17
              1405 8001  adda $01         5892  adda(1)                         #18
              1406 c216  st   [$16]       5893  st([vPC])                       #19
              1407 1403  ld   $03,y       5894  ld(hi('NEXTY'),Y)               #20
              1408 e000  jmp  y,$00       5895  jmp(Y,'NEXTY')                  #21
              1409 00f4  ld   $f4         5896  ld(-24/2)                       #22
                                          5897  label('.jgt#16')
.jgt#16:      140a 0116  ld   [$16]       5898  ld([vPC])                       #16
              140b 8001  adda $01         5899  adda(1)                         #17
              140c c216  st   [$16]       5900  st([vPC])                       #18
              140d 1403  ld   $03,y       5901  ld(hi('REENTER'),Y)             #19
              140e e0cb  jmp  y,$cb       5902  jmp(Y,'REENTER')                #20
              140f 00f4  ld   $f4         5903  ld(-24/2)                       #21
                                          5904  label('.jgt#18')
.jgt#18:      1410 1517  ld   [$17],y     5905  ld([vPC+1],Y)                   #18 vPC.hi
              1411 0d00  ld   [y,x]       5906  ld([Y,X])                       #19 address of branch destination
              1412 c216  st   [$16]       5907  st([vPC])                       #20
              1413 de00  st   [y,x++]     5908  st([Y,Xpp])                     #21
              1414 0d00  ld   [y,x]       5909  ld([Y,X])                       #22 hi address of jump destination
              1415 c217  st   [$17]       5910  st([vPC+1])                     #23
              1416 1403  ld   $03,y       5911  ld(hi('NEXTY'),Y)               #24
              1417 e000  jmp  y,$00       5912  jmp(Y,'NEXTY')                  #25
              1418 00f2  ld   $f2         5913  ld(-28/2)                       #26
                                          5914
                                          5915  # JLE implementation
                                          5916  label('jle#13')
jle#13:       1419 0119  ld   [$19]       5917  ld([vAC+1])                     #13
              141a e827  blt  .jle#16     5918  blt('.jle#16')                  #14 if vAC.hi < 0
              141b 4118  ora  [$18]       5919  ora([vAC])                      #15
              141c ec30  bne  .jle#18     5920  bne('.jle#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              141d 0116  ld   [$16]       5921  ld([vPC])                       #17
              141e 1517  ld   [$17],y     5922  ld([vPC+1],Y)                   #18 vPC.hi
              141f 0d00  ld   [y,x]       5923  ld([Y,X])                       #19 address of branch destination
              1420 c216  st   [$16]       5924  st([vPC])                       #20
              1421 de00  st   [y,x++]     5925  st([Y,Xpp])                     #21
              1422 0d00  ld   [y,x]       5926  ld([Y,X])                       #22 hi address of jump destination
              1423 c217  st   [$17]       5927  st([vPC+1])                     #23
              1424 1403  ld   $03,y       5928  ld(hi('NEXTY'),Y)               #24
              1425 e000  jmp  y,$00       5929  jmp(Y,'NEXTY')                  #25
              1426 00f2  ld   $f2         5930  ld(-28/2)                       #26
                                          5931  label('.jle#16')
.jle#16:      1427 1517  ld   [$17],y     5932  ld([vPC+1],Y)                   #16 vPC.hi
              1428 0d00  ld   [y,x]       5933  ld([Y,X])                       #17 address of branch destination
              1429 c216  st   [$16]       5934  st([vPC])                       #18
              142a de00  st   [y,x++]     5935  st([Y,Xpp])                     #19
              142b 0d00  ld   [y,x]       5936  ld([Y,X])                       #20 hi address of jump destination
              142c c217  st   [$17]       5937  st([vPC+1])                     #21
              142d 1403  ld   $03,y       5938  ld(hi('NEXTY'),Y)               #22
              142e e000  jmp  y,$00       5939  jmp(Y,'NEXTY')                  #23
              142f 00f3  ld   $f3         5940  ld(-26/2)                       #24
                                          5941  label('.jle#18')
.jle#18:      1430 8001  adda $01         5942  adda(1)                         #18
              1431 c216  st   [$16]       5943  st([vPC])                       #19
              1432 1403  ld   $03,y       5944  ld(hi('NEXTY'),Y)               #20
              1433 e000  jmp  y,$00       5945  jmp(Y,'NEXTY')                  #21
              1434 00f4  ld   $f4         5946  ld(-24/2)                       #22
                                          5947
                                          5948  # JGE implementation
                                          5949  label('jge#13')
jge#13:       1435 0119  ld   [$19]       5950  ld([vAC+1])                     #13
              1436 e841  blt  .jge#16     5951  blt('.jge#16')                  #14 if vAC.hi < 0
              1437 0116  ld   [$16]       5952  ld([vPC])                       #15
              1438 1517  ld   [$17],y     5953  ld([vPC+1],Y)                   #16 vPC.hi
              1439 0d00  ld   [y,x]       5954  ld([Y,X])                       #17 address of branch destination
              143a c216  st   [$16]       5955  st([vPC])                       #18
              143b de00  st   [y,x++]     5956  st([Y,Xpp])                     #19
              143c 0d00  ld   [y,x]       5957  ld([Y,X])                       #20 hi address of jump destination
              143d c217  st   [$17]       5958  st([vPC+1])                     #21
              143e 1403  ld   $03,y       5959  ld(hi('NEXTY'),Y)               #22
              143f e000  jmp  y,$00       5960  jmp(Y,'NEXTY')                  #23
              1440 00f3  ld   $f3         5961  ld(-26/2)                       #24
                                          5962  label('.jge#16')
.jge#16:      1441 8001  adda $01         5963  adda(1)                         #16
              1442 c216  st   [$16]       5964  st([vPC])                       #17
              1443 1403  ld   $03,y       5965  ld(hi('NEXTY'),Y)               #18
              1444 e000  jmp  y,$00       5966  jmp(Y,'NEXTY')                  #19
              1445 00f5  ld   $f5         5967  ld(-22/2)                       #20
                                          5968
                                          5969
                                          5970  # PEEKA+ implementation
                                          5971  label('peeka+#13')
peeka+#13:    1446 c21d  st   [$1d]       5972  st([vTmp])                      #13
              1447 1519  ld   [$19],y     5973  ld([vAC+1],Y)                   #14
              1448 0118  ld   [$18]       5974  ld([vAC])                       #15
              1449 1200  ld   ac,x        5975  ld(AC,X)                        #16
              144a 8001  adda $01         5976  adda(1)                         #17
              144b c218  st   [$18]       5977  st([vAC])                       #18 inc vAC.lo
              144c f053  beq  .peeka+#21  5978  beq('.peeka+#21')               #19 if low byte is 0x00
              144d 0d00  ld   [y,x]       5979  ld([Y,X])                       #20 peek [vAC]
              144e 111d  ld   [$1d],x     5980  ld([vTmp],X)                    #21 dst var
              144f c600  st   [x]         5981  st([X])                         #22 dst.lo = peek [vAC]
              1450 1403  ld   $03,y       5982  ld(hi('REENTER'),Y)             #23
              1451 e0cb  jmp  y,$cb       5983  jmp(Y,'REENTER')                #24
              1452 00f2  ld   $f2         5984  ld(-28/2)                       #25
                                          5985
                                          5986  label('.peeka+#21')
.peeka+#21:   1453 111d  ld   [$1d],x     5987  ld([vTmp],X)                    #21 dst var
              1454 c600  st   [x]         5988  st([X])                         #22 dst.lo = peek [vAC]
              1455 0119  ld   [$19]       5989  ld([vAC+1])                     #23
              1456 8001  adda $01         5990  adda(1)                         #24
              1457 c219  st   [$19]       5991  st([vAC+1])                     #25 inc vAC.hi
              1458 1403  ld   $03,y       5992  ld(hi('NEXTY'),Y)               #26
              1459 e000  jmp  y,$00       5993  jmp(Y,'NEXTY')                  #27
              145a 00f1  ld   $f1         5994  ld(-30/2)                       #28
                                          5995
                                          5996
                                          5997  # ADDVW implementation
                                          5998  label('addvw#13')
addvw#13:     145b 1517  ld   [$17],y     5999  ld([vPC+1],Y)                   #13
              145c de00  st   [y,x++]     6000  st([Y,Xpp])                     #14
              145d c22a  st   [$2a]       6001  st([sysArgs+6])                 #15 dst addr
              145e 00f1  ld   $f1         6002  ld(min(0,maxTicks-60/2))        #16
              145f 8115  adda [$15]       6003  adda([vTicks])                  #17
              1460 e88a  blt  .addvw#20   6004  blt('.addvw#20')                #18 not enough time left, so retry
              1461 0d00  ld   [y,x]       6005  ld([Y,X])                       #19
              1462 de00  st   [y,x++]     6006  st([Y,Xpp])                     #20
              1463 c22b  st   [$2b]       6007  st([sysArgs+7])                 #21 src1 addr
              1464 0d00  ld   [y,x]       6008  ld([Y,X])                       #22
              1465 1200  ld   ac,x        6009  ld(AC,X)                        #23 src0 addr
              1466 1400  ld   $00,y       6010  ld(0,Y)                         #24
              1467 0500  ld   [x]         6011  ld([X])                         #25
              1468 c218  st   [$18]       6012  st([vAC])                       #26 vAC.lo = src0.lo
              1469 de00  st   [y,x++]     6013  st([Y,Xpp])                     #27
              146a 0500  ld   [x]         6014  ld([X])                         #28
              146b c219  st   [$19]       6015  st([vAC+1])                     #29 vAC.hi = src0.hi
              146c 112b  ld   [$2b],x     6016  ld([sysArgs+7],X)               #30
              146d 0118  ld   [$18]       6017  ld([vAC])                       #31
              146e 8500  adda [x]         6018  adda([X])                       #32
              146f c218  st   [$18]       6019  st([vAC])                       #33 vAC.lo = src0.lo + src1.lo
              1470 e874  blt  .addvw#36   6020  bmi('.addvw#36')                #34 calculate carry
              1471 a500  suba [x]         6021  suba([X])                       #35
              1472 fc76  bra  .addvw#38   6022  bra('.addvw#38')                #36
              1473 4500  ora  [x]         6023  ora([X])                        #37 carry in bit 7
                                          6024
                                          6025  label('.addvw#36')
.addvw#36:    1474 2500  anda [x]         6026  anda([X])                       #36 carry in bit 7
              1475 0200  nop              6027  nop()                           #37
                                          6028
                                          6029  label('.addvw#38')
.addvw#38:    1476 3080  anda $80,x       6030  anda(0x80,X)                    #38
              1477 0500  ld   [x]         6031  ld([X])                         #39 carry in bit 0
              1478 c21d  st   [$1d]       6032  st([vTmp])                      #40
              1479 012b  ld   [$2b]       6033  ld([sysArgs+7])                 #41
              147a 9001  adda $01,x       6034  adda(1,X)                       #42
              147b 0500  ld   [x]         6035  ld([X])                         #43
              147c 8119  adda [$19]       6036  adda([vAC+1])                   #44
              147d 811d  adda [$1d]       6037  adda([vTmp])                    #45
              147e c219  st   [$19]       6038  st([vAC+1])                     #46
              147f 112a  ld   [$2a],x     6039  ld([sysArgs+6],X)               #47
              1480 0118  ld   [$18]       6040  ld([vAC])                       #48
              1481 de00  st   [y,x++]     6041  st([Y,Xpp])                     #49
              1482 0119  ld   [$19]       6042  ld([vAC+1])                     #50
              1483 ce00  st   [y,x]       6043  st([Y,X])                       #51
              1484 0116  ld   [$16]       6044  ld([vPC])                       #52
              1485 8002  adda $02         6045  adda(2)                         #53
              1486 c216  st   [$16]       6046  st([vPC])                       #54
              1487 1403  ld   $03,y       6047  ld(hi('REENTER'),Y)             #55
              1488 e0cb  jmp  y,$cb       6048  jmp(Y,'REENTER')                #56
              1489 00e2  ld   $e2         6049  ld(-60/2)                       #57
                                          6050
                                          6051  label('.addvw#20')
.addvw#20:    148a 0116  ld   [$16]       6052  ld([vPC])                       #20 retry instruction
              148b a002  suba $02         6053  suba(2)                         #21
              148c c216  st   [$16]       6054  st([vPC])                       #22
              148d 1403  ld   $03,y       6055  ld(hi('REENTER'),Y)             #23
              148e e0cb  jmp  y,$cb       6056  jmp(Y,'REENTER')                #24
              148f 00f2  ld   $f2         6057  ld(-28/2)                       #25
                                          6058
                                          6059
                                          6060  # SUBVW implementation
                                          6061  label('subvw#13')
subvw#13:     1490 1517  ld   [$17],y     6062  ld([vPC+1],Y)                   #13
              1491 de00  st   [y,x++]     6063  st([Y,Xpp])                     #14
              1492 c22a  st   [$2a]       6064  st([sysArgs+6])                 #15 dst addr
              1493 00f2  ld   $f2         6065  ld(min(0,maxTicks-58/2))        #16
              1494 8115  adda [$15]       6066  adda([vTicks])                  #17
              1495 e8bf  blt  .subvw#20   6067  blt('.subvw#20')                #18 not enough time left, so retry
              1496 0d00  ld   [y,x]       6068  ld([Y,X])                       #19
              1497 de00  st   [y,x++]     6069  st([Y,Xpp])                     #20
              1498 c22b  st   [$2b]       6070  st([sysArgs+7])                 #21 src1 addr
              1499 0d00  ld   [y,x]       6071  ld([Y,X])                       #22
              149a 1200  ld   ac,x        6072  ld(AC,X)                        #23 src0 addr
              149b 1400  ld   $00,y       6073  ld(0,Y)                         #24
              149c 0500  ld   [x]         6074  ld([X])                         #25
              149d c218  st   [$18]       6075  st([vAC])                       #26 vAC.lo = src0.lo
              149e de00  st   [y,x++]     6076  st([Y,Xpp])                     #27
              149f 0500  ld   [x]         6077  ld([X])                         #28
              14a0 c219  st   [$19]       6078  st([vAC+1])                     #29 vAC.hi = src0.hi
              14a1 112b  ld   [$2b],x     6079  ld([sysArgs+7],X)               #30
              14a2 0118  ld   [$18]       6080  ld([vAC])                       #31
              14a3 e8a8  blt  .subvw#34   6081  bmi('.subvw#34')                #32
              14a4 a500  suba [x]         6082  suba([X])                       #33 vAC.lo = src0.lo - src1.lo
              14a5 c218  st   [$18]       6083  st([vAC])                       #34 low result
              14a6 fcab  bra  .subvw#37   6084  bra('.subvw#37')                #35
              14a7 4500  ora  [x]         6085  ora([X])                        #36 borrow in bit 7
                                          6086
                                          6087  label('.subvw#34')
.subvw#34:    14a8 c218  st   [$18]       6088  st([vAC])                       #34 low result
              14a9 2500  anda [x]         6089  anda([X])                       #35 borrow in bit 7
              14aa 0200  nop              6090  nop()                           #36
                                          6091
                                          6092  label('.subvw#37')
.subvw#37:    14ab 3080  anda $80,x       6093  anda(0x80,X)                    #37 borrow to bit 0
              14ac 0119  ld   [$19]       6094  ld([vAC+1])                     #38
              14ad a500  suba [x]         6095  suba([X])                       #39
              14ae c21d  st   [$1d]       6096  st([vTmp])                      #40 src0.hi - borrow
              14af 012b  ld   [$2b]       6097  ld([sysArgs+7])                 #41
              14b0 9001  adda $01,x       6098  adda(1,X)                       #42
              14b1 011d  ld   [$1d]       6099  ld([vTmp])                      #43
              14b2 a500  suba [x]         6100  suba([X])                       #44 src0.hi - borrow - src1.hi
              14b3 c219  st   [$19]       6101  st([vAC+1])                     #45
              14b4 112a  ld   [$2a],x     6102  ld([sysArgs+6],X)               #46
              14b5 0118  ld   [$18]       6103  ld([vAC])                       #47
              14b6 de00  st   [y,x++]     6104  st([Y,Xpp])                     #48
              14b7 0119  ld   [$19]       6105  ld([vAC+1])                     #49
              14b8 ce00  st   [y,x]       6106  st([Y,X])                       #50
              14b9 0116  ld   [$16]       6107  ld([vPC])                       #51
              14ba 8002  adda $02         6108  adda(2)                         #52
              14bb c216  st   [$16]       6109  st([vPC])                       #53
              14bc 1403  ld   $03,y       6110  ld(hi('NEXTY'),Y)               #54
              14bd e000  jmp  y,$00       6111  jmp(Y,'NEXTY')                  #55
              14be 00e3  ld   $e3         6112  ld(-58/2)                       #56
                                          6113
                                          6114  label('.subvw#20')
.subvw#20:    14bf 0116  ld   [$16]       6115  ld([vPC])                       #20 retry instruction
              14c0 a002  suba $02         6116  suba(2)                         #21
              14c1 c216  st   [$16]       6117  st([vPC])                       #22
              14c2 1403  ld   $03,y       6118  ld(hi('REENTER'),Y)             #23
              14c3 e0cb  jmp  y,$cb       6119  jmp(Y,'REENTER')                #24
              14c4 00f2  ld   $f2         6120  ld(-28/2)                       #25
                                          6121
                                          6122
                                          6123  # PREFX3 implementation
                                          6124  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          6125  label('prefx3#13')
prefx3#13:    14c5 0116  ld   [$16]       6126  ld([vPC])                       #13
              14c6 8002  adda $02         6127  adda(2)                         #14
              14c7 c216  st   [$16]       6128  st([vPC])                       #15 Advance vPC
              14c8 0021  ld   $21         6129  ld(hi('PREFX3_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14c9 c202  st   [$02]       6130  st([vCpuSelect])                #17
              14ca 9401  adda $01,y       6131  adda(1,Y)                       #18
              14cb e000  jmp  y,$00       6132  jmp(Y,'NEXTY')                  #19
              14cc 00f5  ld   $f5         6133  ld(-22/2)                       #20
                                          6134
                                          6135  # PREFX2 implementation
                                          6136  label('prefx2#13')
prefx2#13:    14cd 0116  ld   [$16]       6137  ld([vPC])                       #13
              14ce 8001  adda $01         6138  adda(1)                         #14
              14cf c216  st   [$16]       6139  st([vPC])                       #15 Advance vPC
              14d0 0022  ld   $22         6140  ld(hi('PREFX2_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14d1 c202  st   [$02]       6141  st([vCpuSelect])                #17
              14d2 9401  adda $01,y       6142  adda(1,Y)                       #18
              14d3 e000  jmp  y,$00       6143  jmp(Y,'NEXTY')                  #19
              14d4 00f5  ld   $f5         6144  ld(-22/2)                       #20
                                          6145
                                          6146  # PREFX1 implementation
                                          6147  label('prefx1#13')
prefx1#13:    14d5 c202  st   [$02]       6148  st([vCpuSelect])                #13
              14d6 9401  adda $01,y       6149  adda(1,Y)                       #14
              14d7 e000  jmp  y,$00       6150  jmp(Y,'NEXTY')                  #15
              14d8 00f7  ld   $f7         6151  ld(-18/2)                       #16
                                          6152
                                          6153
              14d9 0200  nop              6154  fillers(until=0xff)
              14da 0200  nop
              14db 0200  nop
              * 38 times
              14ff 0200  nop              6155  align(0x100, size=0x100)
                                          6156
                                          6157  #-----------------------------------------------------------------------
                                          6158  #       More vCPU instruction implementations, (0x1500)
                                          6159  #-----------------------------------------------------------------------
                                          6160  #
                                          6161  # ADDI implementation
                                          6162  label('addi#13')
addi#13:      1500 8118  adda [$18]       6163  adda([vAC])                     #13
              1501 c218  st   [$18]       6164  st([vAC])                       #14 Store low result
              1502 e80c  blt  .addi#17    6165  bmi('.addi#17')                 #15 Now figure out if there was a carry
              1503 a11d  suba [$1d]       6166  suba([vTmp])                    #16 Gets back the initial value of vAC
              1504 411d  ora  [$1d]       6167  ora([vTmp])                     #17 Carry in bit 7
              1505 3080  anda $80,x       6168  anda(0x80,X)                    #18 Move carry to bit 0
              1506 0500  ld   [x]         6169  ld([X])                         #19
              1507 8119  adda [$19]       6170  adda([vAC+1])                   #20 Add the high bytes with carry
              1508 c219  st   [$19]       6171  st([vAC+1])                     #21 Store high result
              1509 1403  ld   $03,y       6172  ld(hi('NEXTY'),Y)               #22
              150a e000  jmp  y,$00       6173  jmp(Y,'NEXTY')                  #23
              150b 00f3  ld   $f3         6174  ld(-26/2)                       #24
                                          6175  label('.addi#17')
.addi#17:     150c 211d  anda [$1d]       6176  anda([vTmp])                    #17 Carry in bit 7
              150d 3080  anda $80,x       6177  anda(0x80,X)                    #18 Move carry to bit 0
              150e 0500  ld   [x]         6178  ld([X])                         #19
              150f 8119  adda [$19]       6179  adda([vAC+1])                   #20 Add the high bytes with carry
              1510 c219  st   [$19]       6180  st([vAC+1])                     #21 Store high result
              1511 1403  ld   $03,y       6181  ld(hi('NEXTY'),Y)               #22
              1512 e000  jmp  y,$00       6182  jmp(Y,'NEXTY')                  #23
              1513 00f3  ld   $f3         6183  ld(-26/2)                       #24
                                          6184
                                          6185  # SUBI implementation
                                          6186  label('subi#13')
subi#13:      1514 0118  ld   [$18]       6187  ld([vAC])                       #13
              1515 e820  blt  .subi#16    6188  bmi('.subi#16')                 #14
              1516 a11d  suba [$1d]       6189  suba([vTmp])                    #15
              1517 c218  st   [$18]       6190  st([vAC])                       #16 Store low result
              1518 411d  ora  [$1d]       6191  ora([vTmp])                     #17 Carry in bit 7
              1519 3080  anda $80,x       6192  anda(0x80,X)                    #18 Move carry to bit 0
              151a 0119  ld   [$19]       6193  ld([vAC+1])                     #19
              151b a500  suba [x]         6194  suba([X])                       #20
              151c c219  st   [$19]       6195  st([vAC+1])                     #21
              151d 1403  ld   $03,y       6196  ld(hi('NEXTY'),Y)               #22
              151e e000  jmp  y,$00       6197  jmp(Y,'NEXTY')                  #23
              151f 00f3  ld   $f3         6198  ld(-26/2)                       #24
                                          6199  label('.subi#16')
.subi#16:     1520 c218  st   [$18]       6200  st([vAC])                       #16 Store low result
              1521 211d  anda [$1d]       6201  anda([vTmp])                    #17 Carry in bit 7
              1522 3080  anda $80,x       6202  anda(0x80,X)                    #18 Move carry to bit 0
              1523 0119  ld   [$19]       6203  ld([vAC+1])                     #19
              1524 a500  suba [x]         6204  suba([X])                       #20
              1525 c219  st   [$19]       6205  st([vAC+1])                     #21
              1526 1403  ld   $03,y       6206  ld(hi('NEXTY'),Y)               #22
              1527 e000  jmp  y,$00       6207  jmp(Y,'NEXTY')                  #23
              1528 00f3  ld   $f3         6208  ld(-26/2)                       #24
                                          6209
                                          6210  # XORW implementation
                                          6211  label('xorw#13')
xorw#13:      1529 1400  ld   $00,y       6212  ld(0,Y)                         #13
              152a 0500  ld   [x]         6213  ld([X])                         #14
              152b de00  st   [y,x++]     6214  st([Y,Xpp])                     #15
              152c 6118  xora [$18]       6215  xora([vAC])                     #16
              152d c218  st   [$18]       6216  st([vAC])                       #17
              152e 0500  ld   [x]         6217  ld([X])                         #18
              152f 6119  xora [$19]       6218  xora([vAC+1])                   #19
              1530 c219  st   [$19]       6219  st([vAC+1])                     #20
              1531 1403  ld   $03,y       6220  ld(hi('REENTER'),Y)             #21
              1532 e0cb  jmp  y,$cb       6221  jmp(Y,'REENTER')                #22
              1533 00f3  ld   $f3         6222  ld(-26/2)                       #23
                                          6223
                                          6224  # INCW implementation
                                          6225  label('incw#13')
incw#13:      1534 1400  ld   $00,y       6226  ld(0,Y)                         #13
              1535 1200  ld   ac,x        6227  ld(AC,X)                        #14 address of low byte to be added
              1536 0500  ld   [x]         6228  ld([X])                         #15
              1537 8001  adda $01         6229  adda(1)                         #16
              1538 f03d  beq  .incw#19    6230  beq('.incw#19')                 #17 if low byte is 0x00
              1539 de00  st   [y,x++]     6231  st([Y,Xpp])                     #18 inc low byte
              153a 1403  ld   $03,y       6232  ld(hi('REENTER'),Y)             #19
              153b e0cb  jmp  y,$cb       6233  jmp(Y,'REENTER')                #20
              153c 00f4  ld   $f4         6234  ld(-24/2)                       #21
                                          6235  label('.incw#19')
.incw#19:     153d 0500  ld   [x]         6236  ld([X])                         #19
              153e 8001  adda $01         6237  adda(1)                         #20
              153f c600  st   [x]         6238  st([X])                         #21 inc high byte
              1540 1403  ld   $03,y       6239  ld(hi('NEXTY'),Y)               #22
              1541 e000  jmp  y,$00       6240  jmp(Y,'NEXTY')                  #23
              1542 00f3  ld   $f3         6241  ld(-26/2)                       #24
                                          6242
                                          6243  # DECW implementation
                                          6244  label('decw#13')
decw#13:      1543 1400  ld   $00,y       6245  ld(0,Y)                         #13
              1544 1200  ld   ac,x        6246  ld(AC,X)                        #14 address of low byte to be added
              1545 0500  ld   [x]         6247  ld([X])                         #15
              1546 a001  suba $01         6248  suba(1)                         #16
              1547 de00  st   [y,x++]     6249  st([Y,Xpp])                     #17 dec low byte
              1548 60ff  xora $ff         6250  xora(0xff)                      #18 if low byte is 0xff
              1549 f04d  beq  .decw#21    6251  beq('.decw#21')                 #19
              154a 1403  ld   $03,y       6252  ld(hi('NEXTY'),Y)               #20
              154b e000  jmp  y,$00       6253  jmp(Y,'NEXTY')                  #21
              154c 00f4  ld   $f4         6254  ld(-24/2)                       #22
                                          6255  label('.decw#21')
.decw#21:     154d 0500  ld   [x]         6256  ld([X])                         #21
              154e a001  suba $01         6257  suba(1)                         #22
              154f c600  st   [x]         6258  st([X])                         #23 dec high byte
              1550 1403  ld   $03,y       6259  ld(hi('NEXTY'),Y)               #24
              1551 e000  jmp  y,$00       6260  jmp(Y,'NEXTY')                  #25
              1552 00f2  ld   $f2         6261  ld(-28/2)                       #26
                                          6262
                                          6263  # DBNE implementation
                                          6264  label('dbne#13')
dbne#13:      1553 1517  ld   [$17],y     6265  ld([vPC+1],Y)                   #13 vPC.hi
              1554 c21d  st   [$1d]       6266  st([vTmp])                      #14 branch offset
              1555 de00  st   [y,x++]     6267  st([Y,Xpp])                     #15 X++, address of counter
              1556 0d00  ld   [y,x]       6268  ld([Y,X])                       #16
              1557 1200  ld   ac,x        6269  ld(AC,X)                        #17 fetch counter
              1558 0500  ld   [x]         6270  ld([X])                         #18
              1559 a001  suba $01         6271  suba(1)                         #19 decrement counter
              155a f061  beq  .dbne#22    6272  beq('.dbne#22')                 #20 if zero BRA
              155b c600  st   [x]         6273  st([X])                         #21
              155c 011d  ld   [$1d]       6274  ld([vTmp])                      #22
              155d c216  st   [$16]       6275  st([vPC])                       #23 BRA to branch offset
              155e 1403  ld   $03,y       6276  ld(hi('NEXTY'),Y)               #24
              155f e000  jmp  y,$00       6277  jmp(Y,'NEXTY')                  #25
              1560 00f2  ld   $f2         6278  ld(-28/2)                       #26
                                          6279  label('.dbne#22')
.dbne#22:     1561 0116  ld   [$16]       6280  ld([vPC])                       #22
              1562 8001  adda $01         6281  adda(1)                         #23
              1563 c216  st   [$16]       6282  st([vPC])                       #24 advance vPC by 1
              1564 1403  ld   $03,y       6283  ld(hi('REENTER'),Y)             #25
              1565 e0cb  jmp  y,$cb       6284  jmp(Y,'REENTER')                #26
              1566 00f1  ld   $f1         6285  ld(-30/2)                       #27
                                          6286
                                          6287  # TEQ implementation
                                          6288  label('teq#13')
teq#13:       1567 1200  ld   ac,x        6289  ld(AC,X)                        #13 address of var
              1568 0119  ld   [$19]       6290  ld([vAC+1])                     #14
              1569 4118  ora  [$18]       6291  ora([vAC])                      #15
              156a f071  beq  .teq#18     6292  beq('.teq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              156b 1400  ld   $00,y       6293  ld(0,Y)                         #17
              156c dc00  st   $00,[y,x++] 6294  st(0,[Y,Xpp])                   #18
              156d cc00  st   $00,[y,x]   6295  st(0,[Y,X])                     #19 var = 0
              156e 1403  ld   $03,y       6296  ld(hi('NEXTY'),Y)               #20
              156f e000  jmp  y,$00       6297  jmp(Y,'NEXTY')                  #21
              1570 00f4  ld   $f4         6298  ld(-24/2)                       #22
                                          6299  label('.teq#18')
.teq#18:      1571 dcff  st   $ff,[y,x++] 6300  st(0xFF,[Y,Xpp])                #18
              1572 ccff  st   $ff,[y,x]   6301  st(0xFF,[Y,X])                  #19 var = -1
              1573 1403  ld   $03,y       6302  ld(hi('NEXTY'),Y)               #20
              1574 e000  jmp  y,$00       6303  jmp(Y,'NEXTY')                  #21
              1575 00f4  ld   $f4         6304  ld(-24/2)                       #22
                                          6305
                                          6306  # TNE implementation
                                          6307  label('tne#13')
tne#13:       1576 1200  ld   ac,x        6308  ld(AC,X)                        #13 address of var
              1577 0119  ld   [$19]       6309  ld([vAC+1])                     #14
              1578 4118  ora  [$18]       6310  ora([vAC])                      #15
              1579 f080  beq  .tne#18     6311  beq('.tne#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              157a 1400  ld   $00,y       6312  ld(0,Y)                         #17
              157b dcff  st   $ff,[y,x++] 6313  st(0xFF,[Y,Xpp])                #18
              157c ccff  st   $ff,[y,x]   6314  st(0xFF,[Y,X])                  #19 var = -1
              157d 1403  ld   $03,y       6315  ld(hi('NEXTY'),Y)               #20
              157e e000  jmp  y,$00       6316  jmp(Y,'NEXTY')                  #21
              157f 00f4  ld   $f4         6317  ld(-24/2)                       #22
                                          6318  label('.tne#18')
.tne#18:      1580 dc00  st   $00,[y,x++] 6319  st(0,[Y,Xpp])                   #18
              1581 cc00  st   $00,[y,x]   6320  st(0,[Y,X])                     #19 var = 0
              1582 1403  ld   $03,y       6321  ld(hi('NEXTY'),Y)               #20
              1583 e000  jmp  y,$00       6322  jmp(Y,'NEXTY')                  #21
              1584 00f4  ld   $f4         6323  ld(-24/2)                       #22
                                          6324
                                          6325  # TGE implementation
                                          6326  label('tge#13')
tge#13:       1585 1200  ld   ac,x        6327  ld(AC,X)                        #13 address of var
              1586 0119  ld   [$19]       6328  ld([vAC+1])                     #14
              1587 e88e  blt  .tge#17     6329  bmi('.tge#17')                  #15 if vAC.hi < 0
              1588 1400  ld   $00,y       6330  ld(0,Y)                         #16
              1589 dcff  st   $ff,[y,x++] 6331  st(0xFF,[Y,Xpp])                #17
              158a ccff  st   $ff,[y,x]   6332  st(0xFF,[Y,X])                  #18 var = -1
              158b 1403  ld   $03,y       6333  ld(hi('REENTER'),Y)             #19
              158c e0cb  jmp  y,$cb       6334  jmp(Y,'REENTER')                #20
              158d 00f4  ld   $f4         6335  ld(-24/2)                       #21
                                          6336  label('.tge#17')
.tge#17:      158e dc00  st   $00,[y,x++] 6337  st(0,[Y,Xpp])                   #17
              158f cc00  st   $00,[y,x]   6338  st(0,[Y,X])                     #18 var = 0
              1590 1403  ld   $03,y       6339  ld(hi('REENTER'),Y)             #19
              1591 e0cb  jmp  y,$cb       6340  jmp(Y,'REENTER')                #20
              1592 00f4  ld   $f4         6341  ld(-24/2)                       #21
                                          6342
                                          6343  # TLT implementation
                                          6344  label('tlt#13')
tlt#13:       1593 1200  ld   ac,x        6345  ld(AC,X)                        #13 address of var
              1594 0119  ld   [$19]       6346  ld([vAC+1])                     #14
              1595 e89c  blt  .tlt#17     6347  bmi('.tlt#17')                  #15 if vAC.hi < 0
              1596 1400  ld   $00,y       6348  ld(0,Y)                         #16
              1597 dc00  st   $00,[y,x++] 6349  st(0,[Y,Xpp])                   #17
              1598 cc00  st   $00,[y,x]   6350  st(0,[Y,X])                     #18 var = 0
              1599 1403  ld   $03,y       6351  ld(hi('REENTER'),Y)             #19
              159a e0cb  jmp  y,$cb       6352  jmp(Y,'REENTER')                #20
              159b 00f4  ld   $f4         6353  ld(-24/2)                       #21
                                          6354  label('.tlt#17')
.tlt#17:      159c dcff  st   $ff,[y,x++] 6355  st(0xFF,[Y,Xpp])                #17
              159d ccff  st   $ff,[y,x]   6356  st(0xFF,[Y,X])                  #18 var = -1
              159e 1403  ld   $03,y       6357  ld(hi('REENTER'),Y)             #19
              159f e0cb  jmp  y,$cb       6358  jmp(Y,'REENTER')                #20
              15a0 00f4  ld   $f4         6359  ld(-24/2)                       #21
                                          6360
                                          6361  # TGT implementation
                                          6362  label('tgt#13')
tgt#13:       15a1 1400  ld   $00,y       6363  ld(0,Y)                         #13
              15a2 1200  ld   ac,x        6364  ld(AC,X)                        #14 address of var
              15a3 0119  ld   [$19]       6365  ld([vAC+1])                     #15
              15a4 e8ad  blt  .tgt#18     6366  blt('.tgt#18')                  #16 if vAC.hi < 0
              15a5 4118  ora  [$18]       6367  ora([vAC])                      #17
              15a6 ecb2  bne  .tgt#20     6368  bne('.tgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15a7 0200  nop              6369  nop()                           #19
              15a8 dc00  st   $00,[y,x++] 6370  st(0,[Y,Xpp])                   #20
              15a9 cc00  st   $00,[y,x]   6371  st(0,[Y,X])                     #21 var = 0
              15aa 1403  ld   $03,y       6372  ld(hi('NEXTY'),Y)               #22
              15ab e000  jmp  y,$00       6373  jmp(Y,'NEXTY')                  #23
              15ac 00f3  ld   $f3         6374  ld(-26/2)                       #24
                                          6375  label('.tgt#18')
.tgt#18:      15ad dc00  st   $00,[y,x++] 6376  st(0,[Y,Xpp])                   #18
              15ae cc00  st   $00,[y,x]   6377  st(0,[Y,X])                     #19 var = 0
              15af 1403  ld   $03,y       6378  ld(hi('NEXTY'),Y)               #20
              15b0 e000  jmp  y,$00       6379  jmp(Y,'NEXTY')                  #21
              15b1 00f4  ld   $f4         6380  ld(-24/2)                       #22
                                          6381  label('.tgt#20')
.tgt#20:      15b2 dcff  st   $ff,[y,x++] 6382  st(0xFF,[Y,Xpp])                #20
              15b3 ccff  st   $ff,[y,x]   6383  st(0xFF,[Y,X])                  #21 var = -1
              15b4 1403  ld   $03,y       6384  ld(hi('NEXTY'),Y)               #22
              15b5 e000  jmp  y,$00       6385  jmp(Y,'NEXTY')                  #23
              15b6 00f3  ld   $f3         6386  ld(-26/2)                       #24
                                          6387
                                          6388  # TLE implementation
                                          6389  label('tle#13')
tle#13:       15b7 1400  ld   $00,y       6390  ld(0,Y)                         #13
              15b8 1200  ld   ac,x        6391  ld(AC,X)                        #14 address of var
              15b9 0119  ld   [$19]       6392  ld([vAC+1])                     #15
              15ba e8c3  blt  .tle#18     6393  blt('.tle#18')                  #16 if vAC.hi < 0
              15bb 4118  ora  [$18]       6394  ora([vAC])                      #17
              15bc ecc8  bne  .tle#20     6395  bne('.tle#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15bd 0200  nop              6396  nop()                           #19
              15be dcff  st   $ff,[y,x++] 6397  st(0xFF,[Y,Xpp])                #20
              15bf ccff  st   $ff,[y,x]   6398  st(0xFF,[Y,X])                  #21 var = -1
              15c0 1403  ld   $03,y       6399  ld(hi('NEXTY'),Y)               #22
              15c1 e000  jmp  y,$00       6400  jmp(Y,'NEXTY')                  #23
              15c2 00f3  ld   $f3         6401  ld(-26/2)                       #24
                                          6402  label('.tle#18')
.tle#18:      15c3 dcff  st   $ff,[y,x++] 6403  st(0xFF,[Y,Xpp])                #18
              15c4 ccff  st   $ff,[y,x]   6404  st(0xFF,[Y,X])                  #19 var = -1
              15c5 1403  ld   $03,y       6405  ld(hi('NEXTY'),Y)               #20
              15c6 e000  jmp  y,$00       6406  jmp(Y,'NEXTY')                  #21
              15c7 00f4  ld   $f4         6407  ld(-24/2)                       #22
                                          6408  label('.tle#20')
.tle#20:      15c8 dc00  st   $00,[y,x++] 6409  st(0,[Y,Xpp])                   #20
              15c9 cc00  st   $00,[y,x]   6410  st(0,[Y,X])                     #21 var = 0
              15ca 1403  ld   $03,y       6411  ld(hi('NEXTY'),Y)               #22
              15cb e000  jmp  y,$00       6412  jmp(Y,'NEXTY')                  #23
              15cc 00f3  ld   $f3         6413  ld(-26/2)                       #24
                                          6414
                                          6415  # INCWA implementation
                                          6416  label('incwa#13')
incwa#13:     15cd 1400  ld   $00,y       6417  ld(0,Y)                         #13
              15ce 1200  ld   ac,x        6418  ld(AC,X)                        #14 address of low byte to be added
              15cf 0500  ld   [x]         6419  ld([X])                         #15
              15d0 8001  adda $01         6420  adda(1)                         #16
              15d1 de00  st   [y,x++]     6421  st([Y,Xpp])                     #17 inc low byte
              15d2 c218  st   [$18]       6422  st([vAC])                       #18
              15d3 f0d9  beq  .incwa#21   6423  beq('.incwa#21')                #19 if low byte is 0x00
              15d4 0500  ld   [x]         6424  ld([X])                         #20
              15d5 c219  st   [$19]       6425  st([vAC+1])                     #21
              15d6 1403  ld   $03,y       6426  ld(hi('NEXTY'),Y)               #22
              15d7 e000  jmp  y,$00       6427  jmp(Y,'NEXTY')                  #23
              15d8 00f3  ld   $f3         6428  ld(-26/2)                       #24
                                          6429  label('.incwa#21')
.incwa#21:    15d9 8001  adda $01         6430  adda(1)                         #21
              15da c600  st   [x]         6431  st([X])                         #22 inc high byte
              15db c219  st   [$19]       6432  st([vAC+1])                     #23
              15dc 1403  ld   $03,y       6433  ld(hi('NEXTY'),Y)               #24
              15dd e000  jmp  y,$00       6434  jmp(Y,'NEXTY')                  #25
              15de 00f2  ld   $f2         6435  ld(-28/2)                       #26
                                          6436
                                          6437  # DECWA implementation
                                          6438  label('decwa#13')
decwa#13:     15df 1400  ld   $00,y       6439  ld(0,Y)                         #13
              15e0 1200  ld   ac,x        6440  ld(AC,X)                        #14 address of low byte to be added
              15e1 0500  ld   [x]         6441  ld([X])                         #15
              15e2 a001  suba $01         6442  suba(1)                         #16
              15e3 de00  st   [y,x++]     6443  st([Y,Xpp])                     #17 dec low byte
              15e4 c218  st   [$18]       6444  st([vAC])                       #18
              15e5 60ff  xora $ff         6445  xora(0xff)                      #19 if low byte is 0xff
              15e6 f0ec  beq  .decwa#22   6446  beq('.decwa#22')                #20
              15e7 0500  ld   [x]         6447  ld([X])                         #21
              15e8 c219  st   [$19]       6448  st([vAC+1])                     #22
              15e9 1403  ld   $03,y       6449  ld(hi('REENTER'),Y)             #23
              15ea e0cb  jmp  y,$cb       6450  jmp(Y,'REENTER')                #24
              15eb 00f2  ld   $f2         6451  ld(-28/2)                       #25
                                          6452  label('.decwa#22')
.decwa#22:    15ec a001  suba $01         6453  suba(1)                         #22
              15ed c600  st   [x]         6454  st([X])                         #23 dec high byte
              15ee c219  st   [$19]       6455  st([vAC+1])                     #24
              15ef 1403  ld   $03,y       6456  ld(hi('REENTER'),Y)             #25
              15f0 e0cb  jmp  y,$cb       6457  jmp(Y,'REENTER')                #26
              15f1 00f1  ld   $f1         6458  ld(-30/2)                       #27
                                          6459
                                          6460
              15f2 0200  nop              6461  fillers(until=0xff)
              15f3 0200  nop
              15f4 0200  nop
              * 13 times
              15ff 0200  nop              6462  align(0x100, size=0x100)
                                          6463
                                          6464  #-----------------------------------------------------------------------
                                          6465  #       More vCPU instruction implementations, (0x1600)
                                          6466  #-----------------------------------------------------------------------
                                          6467  #
                                          6468  # BRA implementation
                                          6469  label('bra#13')
bra#13:       1600 1403  ld   $03,y       6470  ld(hi('REENTER'),Y)             #13
              1601 e0cb  jmp  y,$cb       6471  jmp(Y,'REENTER')                #14
              1602 00f7  ld   $f7         6472  ld(-18/2)                       #15
                                          6473
                                          6474  # INC implementation
                                          6475  label('inc#13')
inc#13:       1603 1200  ld   ac,x        6476  ld(AC,X)                        #13
              1604 0500  ld   [x]         6477  ld([X])                         #14
              1605 8001  adda $01         6478  adda(1)                         #15
              1606 c600  st   [x]         6479  st([X])                         #16
              1607 1403  ld   $03,y       6480  ld(hi('REENTER'),Y)             #17
              1608 e0cb  jmp  y,$cb       6481  jmp(Y,'REENTER')                #18
              1609 00f5  ld   $f5         6482  ld(-22/2)                       #19
                                          6483
                                          6484  # DEC implementation
                                          6485  label('dec#13')
dec#13:       160a 1200  ld   ac,x        6486  ld(AC,X)                        #13
              160b 0500  ld   [x]         6487  ld([X])                         #14
              160c a001  suba $01         6488  suba(1)                         #15
              160d c600  st   [x]         6489  st([X])                         #16
              160e 1403  ld   $03,y       6490  ld(hi('REENTER'),Y)             #17
              160f e0cb  jmp  y,$cb       6491  jmp(Y,'REENTER')                #18
              1610 00f5  ld   $f5         6492  ld(-22/2)                       #19
                                          6493
                                          6494  # LD implementation
                                          6495  label('ld#13')
ld#13:        1611 1200  ld   ac,x        6496  ld(AC,X)                        #13
              1612 0500  ld   [x]         6497  ld([X])                         #14
              1613 c218  st   [$18]       6498  st([vAC])                       #15
              1614 0000  ld   $00         6499  ld(0)                           #16
              1615 c219  st   [$19]       6500  st([vAC+1])                     #17
              1616 1403  ld   $03,y       6501  ld(hi('NEXTY'),Y)               #18
              1617 e000  jmp  y,$00       6502  jmp(Y,'NEXTY')                  #19
              1618 00f5  ld   $f5         6503  ld(-22/2)                       #20
                                          6504
                                          6505  # LDI implementation
                                          6506  label('ldi#13')
ldi#13:       1619 c218  st   [$18]       6507  st([vAC])                       #13
              161a 0000  ld   $00         6508  ld(0)                           #14
              161b c219  st   [$19]       6509  st([vAC+1])                     #15
              161c 1403  ld   $03,y       6510  ld(hi('NEXTY'),Y)               #16
              161d e000  jmp  y,$00       6511  jmp(Y,'NEXTY')                  #17
              161e 00f6  ld   $f6         6512  ld(-20/2)                       #18
                                          6513
                                          6514  # ST implementation
                                          6515  label('st#13')
st#13:        161f 1200  ld   ac,x        6516  ld(AC,X)                        #13
              1620 0118  ld   [$18]       6517  ld([vAC])                       #14
              1621 c600  st   [x]         6518  st([X])                         #15
              1622 1403  ld   $03,y       6519  ld(hi('NEXTY'),Y)               #16
              1623 e000  jmp  y,$00       6520  jmp(Y,'NEXTY')                  #17
              1624 00f6  ld   $f6         6521  ld(-20/2)                       #18
                                          6522
                                          6523  # ORI implementation
                                          6524  label('ori#13')
ori#13:       1625 4118  ora  [$18]       6525  ora([vAC])                      #13
              1626 c218  st   [$18]       6526  st([vAC])                       #14
              1627 1403  ld   $03,y       6527  ld(hi('REENTER'),Y)             #15
              1628 e0cb  jmp  y,$cb       6528  jmp(Y,'REENTER')                #16
              1629 00f6  ld   $f6         6529  ld(-20/2)                       #17
                                          6530
                                          6531  # XORI implementation
                                          6532  label('xori#13')
xori#13:      162a 6118  xora [$18]       6533  xora([vAC])                     #13
              162b c218  st   [$18]       6534  st([vAC])                       #14
              162c 1403  ld   $03,y       6535  ld(hi('REENTER'),Y)             #15
              162d e0cb  jmp  y,$cb       6536  jmp(Y,'REENTER')                #16
              162e 00f6  ld   $f6         6537  ld(-20/2)                       #17
                                          6538
                                          6539  # LDNI implementation
                                          6540  label('ldni#13')
ldni#13:      162f 60ff  xora $ff         6541  xora(255)                       #13
              1630 8001  adda $01         6542  adda(1)                         #14
              1631 c218  st   [$18]       6543  st([vAC])                       #15
              1632 00ff  ld   $ff         6544  ld(255)                         #16
              1633 c219  st   [$19]       6545  st([vAC+1])                     #17
              1634 1403  ld   $03,y       6546  ld(hi('NEXTY'),Y)               #18
              1635 e000  jmp  y,$00       6547  jmp(Y,'NEXTY')                  #19
              1636 00f5  ld   $f5         6548  ld(-22/2)                       #20
                                          6549
                                          6550  # NOTB implementation
                                          6551  label('notb#13')
notb#13:      1637 0500  ld   [x]         6552  ld([X])                         #13
              1638 60ff  xora $ff         6553  xora(255)                       #14
              1639 c600  st   [x]         6554  st([X])                         #15
              163a 1403  ld   $03,y       6555  ld(hi('NEXTY'),Y)               #16
              163b e000  jmp  y,$00       6556  jmp(Y,'NEXTY')                  #17
              163c 00f6  ld   $f6         6557  ld(-20/2)                       #18
                                          6558
                                          6559  # ALLOC implementation
                                          6560  label('alloc#13')
alloc#13:     163d 811c  adda [$1c]       6561  adda([vSP])                     #13
              163e c21c  st   [$1c]       6562  st([vSP])                       #14
              163f 1403  ld   $03,y       6563  ld(hi('REENTER'),Y)             #15
              1640 e0cb  jmp  y,$cb       6564  jmp(Y,'REENTER')                #16
              1641 00f6  ld   $f6         6565  ld(-20/2)                       #17
                                          6566
                                          6567  # MOVB implementation
                                          6568  label('movb#13')
movb#13:      1642 1517  ld   [$17],y     6569  ld([vPC+1],Y)                   #13
              1643 c21d  st   [$1d]       6570  st([vTmp])                      #14 save address of dst var
              1644 de00  st   [y,x++]     6571  st([Y,Xpp])                     #15 X++
              1645 0d00  ld   [y,x]       6572  ld([Y,X])                       #16 address of src var
              1646 1200  ld   ac,x        6573  ld(AC,X)                        #17
              1647 0500  ld   [x]         6574  ld([X])                         #18 get src
              1648 111d  ld   [$1d],x     6575  ld([vTmp],X)                    #19 address of dst var
              1649 c600  st   [x]         6576  st([X])                         #20 dst.lo = src.lo
              164a 0116  ld   [$16]       6577  ld([vPC])                       #21
              164b 8001  adda $01         6578  adda(1)                         #22
              164c c216  st   [$16]       6579  st([vPC])                       #23
              164d 1403  ld   $03,y       6580  ld(hi('NEXTY'),Y)               #24
              164e e000  jmp  y,$00       6581  jmp(Y,'NEXTY')                  #25
              164f 00f2  ld   $f2         6582  ld(-28/2)                       #26
                                          6583
                                          6584  # PEEKA implementation
                                          6585  label('peeka#13')
peeka#13:     1650 c21d  st   [$1d]       6586  st([vTmp])                      #13
              1651 1519  ld   [$19],y     6587  ld([vAC+1],Y)                   #14
              1652 1118  ld   [$18],x     6588  ld([vAC],X)                     #15
              1653 0d00  ld   [y,x]       6589  ld([Y,X])                       #16 peek [vAC]
              1654 111d  ld   [$1d],x     6590  ld([vTmp],X)                    #17 dst var
              1655 c600  st   [x]         6591  st([X])                         #18 dst = peek [vAC]
              1656 1403  ld   $03,y       6592  ld(hi('REENTER'),Y)             #19
              1657 e0cb  jmp  y,$cb       6593  jmp(Y,'REENTER')                #20
              1658 00f4  ld   $f4         6594  ld(-24/2)                       #21
                                          6595
                                          6596  # DEEKA implementation
                                          6597  label('deeka#13')
deeka#13:     1659 1519  ld   [$19],y     6598  ld([vAC+1],Y)                   #13
              165a 1118  ld   [$18],x     6599  ld([vAC],X)                     #14
              165b 0d00  ld   [y,x]       6600  ld([Y,X])                       #15 peek [vAC]
              165c de00  st   [y,x++]     6601  st([Y,Xpp])                     #16
              165d c22a  st   [$2a]       6602  st([sysArgs+6])                 #17
              165e 0d00  ld   [y,x]       6603  ld([Y,X])                       #18 peek [vAC+1]
              165f c22b  st   [$2b]       6604  st([sysArgs+7])                 #19
              1660 1400  ld   $00,y       6605  ld(0,Y)                         #20
              1661 111d  ld   [$1d],x     6606  ld([vTmp],X)                    #21 dst var
              1662 012a  ld   [$2a]       6607  ld([sysArgs+6])                 #22
              1663 de00  st   [y,x++]     6608  st([Y,Xpp])                     #23 [var.lo] = peek [vAC]
              1664 012b  ld   [$2b]       6609  ld([sysArgs+7])                 #24
              1665 ce00  st   [y,x]       6610  st([Y,X])                       #25 [var.hi] = peek [vAC+1]
              1666 1403  ld   $03,y       6611  ld(hi('NEXTY'),Y)               #26
              1667 e000  jmp  y,$00       6612  jmp(Y,'NEXTY')                  #27
              1668 00f1  ld   $f1         6613  ld(-30/2)                       #28
                                          6614
                                          6615  # MOVQB implementation
                                          6616  label('movqb#13')
movqb#13:     1669 1517  ld   [$17],y     6617  ld([vPC+1],Y)                   #13 vPC.hi
              166a c21d  st   [$1d]       6618  st([vTmp])                      #14 immediate value
              166b de00  st   [y,x++]     6619  st([Y,Xpp])                     #15 X++
              166c 0d00  ld   [y,x]       6620  ld([Y,X])                       #16
              166d 1200  ld   ac,x        6621  ld(AC,X)                        #17 address of var
              166e 011d  ld   [$1d]       6622  ld([vTmp])                      #18
              166f c600  st   [x]         6623  st([X])                         #19 var.lo = immediate value
              1670 0116  ld   [$16]       6624  ld([vPC])                       #20
              1671 8001  adda $01         6625  adda(1)                         #21
              1672 c216  st   [$16]       6626  st([vPC])                       #22 advance vPC by 1
              1673 1403  ld   $03,y       6627  ld(hi('REENTER'),Y)             #23
              1674 e0cb  jmp  y,$cb       6628  jmp(Y,'REENTER')                #24
              1675 00f2  ld   $f2         6629  ld(-28/2)                       #25
                                          6630
                                          6631  # MOVQW implementation
                                          6632  label('movqw#13')
movqw#13:     1676 1517  ld   [$17],y     6633  ld([vPC+1],Y)                   #13 vPC.hi
              1677 c21d  st   [$1d]       6634  st([vTmp])                      #14 immediate value
              1678 de00  st   [y,x++]     6635  st([Y,Xpp])                     #15 X++
              1679 0d00  ld   [y,x]       6636  ld([Y,X])                       #16
              167a 1200  ld   ac,x        6637  ld(AC,X)                        #17 address of var
              167b 011d  ld   [$1d]       6638  ld([vTmp])                      #18
              167c 1400  ld   $00,y       6639  ld(0,Y)                         #19
              167d de00  st   [y,x++]     6640  st([Y,Xpp])                     #20 var.lo = immediate value
              167e c400  st   $00,[x]     6641  st(0,[X])                       #21 var.hi = 0
              167f 0116  ld   [$16]       6642  ld([vPC])                       #22
              1680 8001  adda $01         6643  adda(1)                         #23
              1681 c216  st   [$16]       6644  st([vPC])                       #24 advance vPC by 1
              1682 1403  ld   $03,y       6645  ld(hi('REENTER'),Y)             #25
              1683 e0cb  jmp  y,$cb       6646  jmp(Y,'REENTER')                #26
              1684 00f1  ld   $f1         6647  ld(-30/2)                       #27
                                          6648
                                          6649  # PEEKV implementation
                                          6650  label('peekv#13')
peekv#13:     1685 1400  ld   $00,y       6651  ld(0,Y)                         #13
              1686 0d00  ld   [y,x]       6652  ld([Y,X])                       #14 low byte peek address
              1687 de00  st   [y,x++]     6653  st([Y,Xpp])                     #15 X++
              1688 c21d  st   [$1d]       6654  st([vTmp])                      #16
              1689 0d00  ld   [y,x]       6655  ld([Y,X])                       #17 high byte peek address
              168a 1600  ld   ac,y        6656  ld(AC,Y)                        #18
              168b 111d  ld   [$1d],x     6657  ld([vTmp],X)                    #19
              168c 0d00  ld   [y,x]       6658  ld([Y,X])                       #20 peek byte
              168d c218  st   [$18]       6659  st([vAC])                       #21
              168e 0000  ld   $00         6660  ld(0)                           #22
              168f c219  st   [$19]       6661  st([vAC+1])                     #23
              1690 1403  ld   $03,y       6662  ld(hi('NEXTY'),Y)               #24
              1691 e000  jmp  y,$00       6663  jmp(Y,'NEXTY')                  #25
              1692 00f2  ld   $f2         6664  ld(-28/2)                       #26
                                          6665
                                          6666  # DEEKV implementation
                                          6667  label('deekv#13')
deekv#13:     1693 1200  ld   ac,x        6668  ld(AC,X)                        #13
              1694 1400  ld   $00,y       6669  ld(0,Y)                         #14
              1695 0d00  ld   [y,x]       6670  ld([Y,X])                       #15 low byte deek address
              1696 de00  st   [y,x++]     6671  st([Y,Xpp])                     #16 X++
              1697 c21d  st   [$1d]       6672  st([vTmp])                      #17
              1698 0d00  ld   [y,x]       6673  ld([Y,X])                       #18 high byte deek address
              1699 1600  ld   ac,y        6674  ld(AC,Y)                        #19
              169a 111d  ld   [$1d],x     6675  ld([vTmp],X)                    #20
              169b 0d00  ld   [y,x]       6676  ld([Y,X])                       #21 peek low byte
              169c c218  st   [$18]       6677  st([vAC])                       #22
              169d de00  st   [y,x++]     6678  st([Y,Xpp])                     #23 X++
              169e 0d00  ld   [y,x]       6679  ld([Y,X])                       #24 peek high byte
              169f c219  st   [$19]       6680  st([vAC+1])                     #25
              16a0 1403  ld   $03,y       6681  ld(hi('NEXTY'),Y)               #26
              16a1 e000  jmp  y,$00       6682  jmp(Y,'NEXTY')                  #27
              16a2 00f1  ld   $f1         6683  ld(-30/2)                       #28
                                          6684
                                          6685
                                          6686  # LSLV implementation
                                          6687  label('lslv#13')
lslv#13:      16a3 1400  ld   $00,y       6688  ld(0,Y)                         #13
              16a4 1200  ld   ac,x        6689  ld(AC,X)                        #14 var
              16a5 0500  ld   [x]         6690  ld([X])                         #15
              16a6 f4b0  bge  .lslv#18    6691  bge('.lslv#18')                 #16
              16a7 8500  adda [x]         6692  adda([X])                       #17
              16a8 de00  st   [y,x++]     6693  st([Y,Xpp])                     #18 var.lo <<1
              16a9 0500  ld   [x]         6694  ld([X])                         #19
              16aa 8500  adda [x]         6695  adda([X])                       #20
              16ab 4001  ora  $01         6696  ora(1)                          #21
              16ac c600  st   [x]         6697  st([X])                         #22 var.hi <<1 | 1
              16ad 1403  ld   $03,y       6698  ld(hi('REENTER'),Y)             #23
              16ae e0cb  jmp  y,$cb       6699  jmp(Y,'REENTER')                #24
              16af 00f2  ld   $f2         6700  ld(-28/2)                       #25
                                          6701
                                          6702  label('.lslv#18')
.lslv#18:     16b0 de00  st   [y,x++]     6703  st([Y,Xpp])                     #18
              16b1 0500  ld   [x]         6704  ld([X])                         #19
              16b2 8500  adda [x]         6705  adda([X])                       #20
              16b3 c600  st   [x]         6706  st([X])                         #21
              16b4 1403  ld   $03,y       6707  ld(hi('NEXTY'),Y)               #22
              16b5 e000  jmp  y,$00       6708  jmp(Y,'NEXTY')                  #23
              16b6 00f3  ld   $f3         6709  ld(-26/2)                       #24
                                          6710
                                          6711
                                          6712  # LSRB implementation
                                          6713  label('lsrb#13')
lsrb#13:      16b7 1200  ld   ac,x        6714  ld(AC,X)                        #13 var address
              16b8 1405  ld   $05,y       6715  ld(hi('shiftTable'),Y)          #14 logical shift right 1 bit (X >> 1)
              16b9 00c8  ld   $c8         6716  ld('.lsrb#24')                  #15 continuation address
              16ba c21d  st   [$1d]       6717  st([vTmp])                      #16
              16bb 0500  ld   [x]         6718  ld([X])                         #17 load byte from var
              16bc 20fe  anda $fe         6719  anda(0xfe)                      #18
              16bd e200  jmp  y,ac        6720  jmp(Y,AC)                       #19
              16be fcff  bra  $ff         6721  bra(255)                        #20 bra shiftTable+255
                                          6722  #dummy
                                          6723  # continues in page 0x0600 at label('.lsrb#24') after fetching shifted byte from 0x0500
                                          6724
                                          6725  # LDW implementation
                                          6726  label('ldw#13')
ldw#13:       16bf 1400  ld   $00,y       6727  ld(0,Y)                         #13
              16c0 1200  ld   ac,x        6728  ld(AC,X)                        #14 Operand
              16c1 0500  ld   [x]         6729  ld([X])                         #15
              16c2 c218  st   [$18]       6730  st([vAC])                       #16
              16c3 de00  st   [y,x++]     6731  st([Y,Xpp])                     #17 X++
              16c4 0500  ld   [x]         6732  ld([X])                         #18
              16c5 c219  st   [$19]       6733  st([vAC+1])                     #19
              16c6 1403  ld   $03,y       6734  ld(hi('NEXTY'),Y)               #20
              16c7 e000  jmp  y,$00       6735  jmp(Y,'NEXTY')                  #21
              16c8 00f4  ld   $f4         6736  ld(-24/2)                       #22
                                          6737
                                          6738  # STW implementation
                                          6739  label('stw#13')
stw#13:       16c9 1400  ld   $00,y       6740  ld(0,Y)                         #13
              16ca 1200  ld   ac,x        6741  ld(AC,X)                        #14 Operand
              16cb 0118  ld   [$18]       6742  ld([vAC])                       #15
              16cc de00  st   [y,x++]     6743  st([Y,Xpp])                     #16
              16cd 0119  ld   [$19]       6744  ld([vAC+1])                     #17
              16ce c600  st   [x]         6745  st([X])                         #18
              16cf 1403  ld   $03,y       6746  ld(hi('REENTER'),Y)             #19
              16d0 e0cb  jmp  y,$cb       6747  jmp(Y,'REENTER')                #20
              16d1 00f4  ld   $f4         6748  ld(-24/2)                       #21
                                          6749
                                          6750  # JLT implementation
                                          6751  label('jlt#13')
jlt#13:       16d2 1517  ld   [$17],y     6752  ld([vPC+1],Y)                   #13 vPC.hi
              16d3 0119  ld   [$19]       6753  ld([vAC+1])                     #14
              16d4 e8dc  blt  .jlt#17     6754  blt('.jlt#17')                  #15 if vAC.hi < 0
              16d5 0d00  ld   [y,x]       6755  ld([Y,X])                       #16 address of branch destination
              16d6 0116  ld   [$16]       6756  ld([vPC])                       #17
              16d7 8001  adda $01         6757  adda(1)                         #18
              16d8 c216  st   [$16]       6758  st([vPC])                       #19
              16d9 1403  ld   $03,y       6759  ld(hi('NEXTY'),Y)               #20
              16da e000  jmp  y,$00       6760  jmp(Y,'NEXTY')                  #21
              16db 00f4  ld   $f4         6761  ld(-24/2)                       #22
                                          6762  label('.jlt#17')
.jlt#17:      16dc c216  st   [$16]       6763  st([vPC])                       #17
              16dd de00  st   [y,x++]     6764  st([Y,Xpp])                     #18
              16de 0d00  ld   [y,x]       6765  ld([Y,X])                       #19 hi address of jump destination
              16df c217  st   [$17]       6766  st([vPC+1])                     #20
              16e0 1403  ld   $03,y       6767  ld(hi('REENTER'),Y)             #21
              16e1 e0cb  jmp  y,$cb       6768  jmp(Y,'REENTER')                #22
              16e2 00f3  ld   $f3         6769  ld(-26/2)                       #23
                                          6770
                                          6771  # SCRLH implementation
                                          6772  label('scrlh#13')
scrlh#13:     16e3 0500  ld   [x]         6773  ld([X])                         #13 ac = scroll amount
              16e4 1401  ld   $01,y       6774  ld(1,Y)                         #14
              16e5 1001  ld   $01,x       6775  ld(1,X)                         #15
              16e6 8d00  adda [y,x]       6776  adda([Y,X])                     #16 ac += peek(0x0101)
              16e7 ce00  st   [y,x]       6777  st([Y,X])                       #17 poke 0x0101, ac
              16e8 1403  ld   $03,y       6778  ld(hi('NEXTY'),Y)               #18
              16e9 e000  jmp  y,$00       6779  jmp(Y,'NEXTY')                  #19
              16ea 00f5  ld   $f5         6780  ld(-22/2)                       #20
                                          6781
                                          6782
              16eb 0200  nop              6783  fillers(until=0xff)
              16ec 0200  nop
              16ed 0200  nop
              * 20 times
              16ff 0200  nop              6784  align(0x100, size=0x100)
                                          6785
                                          6786  #-----------------------------------------------------------------------
                                          6787  #       More vCPU instruction implementations, (0x1700)
                                          6788  #-----------------------------------------------------------------------
                                          6789  #
                                          6790  # CALLI implementation
                                          6791  label('calli#13')
calli#13:     1700 8003  adda $03         6792  adda(3)                         #13
              1701 c21a  st   [$1a]       6793  st([vLR])                       #14
              1702 0117  ld   [$17]       6794  ld([vPC+1])                     #15
              1703 d61b  st   [$1b],y     6795  st([vLR+1],Y)                   #16
              1704 0d00  ld   [y,x]       6796  ld([Y,X])                       #17
              1705 de00  st   [y,x++]     6797  st([Y,Xpp])                     #18 Just X++
              1706 a002  suba $02         6798  suba(2)                         #19
              1707 c216  st   [$16]       6799  st([vPC])                       #20
              1708 0d00  ld   [y,x]       6800  ld([Y,X])                       #21
              1709 1403  ld   $03,y       6801  ld(hi('REENTER_28'),Y)          #22
              170a e0ca  jmp  y,$ca       6802  jmp(Y,'REENTER_28')             #23
              170b c217  st   [$17]       6803  st([vPC+1])                     #24
                                          6804
                                          6805  # SUBW implemetation
                                          6806  label('subw#13')
subw#13:      170c 8001  adda $01         6807  adda(1)                         #13
              170d c21d  st   [$1d]       6808  st([vTmp])                      #14 Address of high byte to be subtracted
              170e 0118  ld   [$18]       6809  ld([vAC])                       #15 Low byte
              170f e81c  blt  .subw#18    6810  bmi('.subw#18')                 #16
              1710 a500  suba [x]         6811  suba([X])                       #17
              1711 c218  st   [$18]       6812  st([vAC])                       #18 Store low result
              1712 4500  ora  [x]         6813  ora([X])                        #19 Carry in bit 7
              1713 3080  anda $80,x       6814  anda(0x80,X)                    #20 Move carry to bit 0
              1714 0119  ld   [$19]       6815  ld([vAC+1])                     #21
              1715 a500  suba [x]         6816  suba([X])                       #22
              1716 111d  ld   [$1d],x     6817  ld([vTmp],X)                    #23
              1717 a500  suba [x]         6818  suba([X])                       #24
              1718 c219  st   [$19]       6819  st([vAC+1])                     #25
              1719 1403  ld   $03,y       6820  ld(hi('NEXTY'),Y)               #26
              171a e000  jmp  y,$00       6821  jmp(Y,'NEXTY')                  #27
              171b 00f1  ld   $f1         6822  ld(-30/2)                       #28
                                          6823  label('.subw#18')
.subw#18:     171c c218  st   [$18]       6824  st([vAC])                       #18 Store low result
              171d 2500  anda [x]         6825  anda([X])                       #19 Carry in bit 7
              171e 3080  anda $80,x       6826  anda(0x80,X)                    #20 Move carry to bit 0
              171f 0119  ld   [$19]       6827  ld([vAC+1])                     #21
              1720 a500  suba [x]         6828  suba([X])                       #22
              1721 111d  ld   [$1d],x     6829  ld([vTmp],X)                    #23
              1722 a500  suba [x]         6830  suba([X])                       #24
              1723 c219  st   [$19]       6831  st([vAC+1])                     #25
              1724 1403  ld   $03,y       6832  ld(hi('NEXTY'),Y)               #26
              1725 e000  jmp  y,$00       6833  jmp(Y,'NEXTY')                  #27
              1726 00f1  ld   $f1         6834  ld(-30/2)                       #28
                                          6835
                                          6836  # BEQ implementation
                                          6837  label('beq#17')
beq#17:       1727 0119  ld   [$19]       6838  ld([vAC+1])                     #17
              1728 4118  ora  [$18]       6839  ora([vAC])                      #18
              1729 f031  beq  .beq#21     6840  beq('.beq#21')                  #19 if (vAC.hi OR vAC.lo) == 0
              172a 0d00  ld   [y,x]       6841  ld([Y,X])                       #20 address of branch destination
              172b 0116  ld   [$16]       6842  ld([vPC])                       #21
              172c 8001  adda $01         6843  adda(1)                         #22
              172d c216  st   [$16]       6844  st([vPC])                       #23
              172e 1403  ld   $03,y       6845  ld(hi('NEXTY'),Y)               #24
              172f e000  jmp  y,$00       6846  jmp(Y,'NEXTY')                  #25
              1730 00f2  ld   $f2         6847  ld(-28/2)                       #26
                                          6848  label('.beq#21')
.beq#21:      1731 c216  st   [$16]       6849  st([vPC])                       #21
              1732 1403  ld   $03,y       6850  ld(hi('NEXTY'),Y)               #22
              1733 e000  jmp  y,$00       6851  jmp(Y,'NEXTY')                  #23
              1734 00f3  ld   $f3         6852  ld(-26/2)                       #24
                                          6853
                                          6854  # BNE implementation
                                          6855  label('bne#17')
bne#17:       1735 0119  ld   [$19]       6856  ld([vAC+1])                     #17
              1736 4118  ora  [$18]       6857  ora([vAC])                      #18
              1737 ec3f  bne  .bne#21     6858  bne('.bne#21')                  #19 if (vAC.hi OR vAC.lo) != 0
              1738 0d00  ld   [y,x]       6859  ld([Y,X])                       #20 address of branch destination
              1739 0116  ld   [$16]       6860  ld([vPC])                       #21
              173a 8001  adda $01         6861  adda(1)                         #22
              173b c216  st   [$16]       6862  st([vPC])                       #23
              173c 1403  ld   $03,y       6863  ld(hi('NEXTY'),Y)               #24
              173d e000  jmp  y,$00       6864  jmp(Y,'NEXTY')                  #25
              173e 00f2  ld   $f2         6865  ld(-28/2)                       #26
                                          6866  label('.bne#21')
.bne#21:      173f c216  st   [$16]       6867  st([vPC])                       #21
              1740 1403  ld   $03,y       6868  ld(hi('NEXTY'),Y)               #22
              1741 e000  jmp  y,$00       6869  jmp(Y,'NEXTY')                  #23
              1742 00f3  ld   $f3         6870  ld(-26/2)                       #24
                                          6871
                                          6872  # BGT implementation
                                          6873  label('bgt#17')
bgt#17:       1743 0119  ld   [$19]       6874  ld([vAC+1])                     #17
              1744 e84d  blt  .bgt#20     6875  blt('.bgt#20')                  #18 if vAC.hi < 0
              1745 4118  ora  [$18]       6876  ora([vAC])                      #19
              1746 ec53  bne  .bgt#22     6877  bne('.bgt#22')                  #20 if (vAC.hi OR vAC.lo) != 0
              1747 0116  ld   [$16]       6878  ld([vPC])                       #21
              1748 8001  adda $01         6879  adda(1)                         #22
              1749 c216  st   [$16]       6880  st([vPC])                       #23
              174a 1403  ld   $03,y       6881  ld(hi('NEXTY'),Y)               #24
              174b e000  jmp  y,$00       6882  jmp(Y,'NEXTY')                  #25
              174c 00f2  ld   $f2         6883  ld(-28/2)                       #26
                                          6884  label('.bgt#20')
.bgt#20:      174d 0116  ld   [$16]       6885  ld([vPC])                       #20
              174e 8001  adda $01         6886  adda(1)                         #21
              174f c216  st   [$16]       6887  st([vPC])                       #22
              1750 1403  ld   $03,y       6888  ld(hi('REENTER'),Y)             #23
              1751 e0cb  jmp  y,$cb       6889  jmp(Y,'REENTER')                #24
              1752 00f2  ld   $f2         6890  ld(-28/2)                       #25
                                          6891  label('.bgt#22')
.bgt#22:      1753 0d00  ld   [y,x]       6892  ld([Y,X])                       #22 address of branch destination
              1754 c216  st   [$16]       6893  st([vPC])                       #23
              1755 1403  ld   $03,y       6894  ld(hi('NEXTY'),Y)               #24
              1756 e000  jmp  y,$00       6895  jmp(Y,'NEXTY')                  #25
              1757 00f2  ld   $f2         6896  ld(-28/2)                       #26
                                          6897
                                          6898  # BLT implementation
                                          6899  label('blt#17')
blt#17:       1758 0119  ld   [$19]       6900  ld([vAC+1])                     #17
              1759 e860  blt  .blt#20     6901  blt('.blt#20')                  #18 if vAC.hi < 0
              175a 0116  ld   [$16]       6902  ld([vPC])                       #19
              175b 8001  adda $01         6903  adda(1)                         #20
              175c c216  st   [$16]       6904  st([vPC])                       #21
              175d 1403  ld   $03,y       6905  ld(hi('NEXTY'),Y)               #22
              175e e000  jmp  y,$00       6906  jmp(Y,'NEXTY')                  #23
              175f 00f3  ld   $f3         6907  ld(-26/2)                       #24
                                          6908  label('.blt#20')
.blt#20:      1760 0d00  ld   [y,x]       6909  ld([Y,X])                       #20 address of branch destination
              1761 c216  st   [$16]       6910  st([vPC])                       #21
              1762 1403  ld   $03,y       6911  ld(hi('NEXTY'),Y)               #22
              1763 e000  jmp  y,$00       6912  jmp(Y,'NEXTY')                  #23
              1764 00f3  ld   $f3         6913  ld(-26/2)                       #24
                                          6914
                                          6915  # BGE implementation
                                          6916  label('bge#17')
bge#17:       1765 0119  ld   [$19]       6917  ld([vAC+1])                     #17
              1766 e86d  blt  .bge#20     6918  blt('.bge#20')                  #18 if vAC.hi < 0
              1767 0116  ld   [$16]       6919  ld([vPC])                       #19
              1768 0d00  ld   [y,x]       6920  ld([Y,X])                       #20 address of branch destination
              1769 c216  st   [$16]       6921  st([vPC])                       #21
              176a 1403  ld   $03,y       6922  ld(hi('NEXTY'),Y)               #22
              176b e000  jmp  y,$00       6923  jmp(Y,'NEXTY')                  #23
              176c 00f3  ld   $f3         6924  ld(-26/2)                       #24
                                          6925  label('.bge#20')
.bge#20:      176d 8001  adda $01         6926  adda(1)                         #20
              176e c216  st   [$16]       6927  st([vPC])                       #21
              176f 1403  ld   $03,y       6928  ld(hi('NEXTY'),Y)               #22
              1770 e000  jmp  y,$00       6929  jmp(Y,'NEXTY')                  #23
              1771 00f3  ld   $f3         6930  ld(-26/2)                       #24
                                          6931
                                          6932  # BLE implementation
                                          6933  label('ble#17')
ble#17:       1772 0119  ld   [$19]       6934  ld([vAC+1])                     #17
              1773 e87c  blt  .ble#20     6935  blt('.ble#20')                  #18 if vAC.hi < 0
              1774 4118  ora  [$18]       6936  ora([vAC])                      #19
              1775 ec81  bne  .ble#22     6937  bne('.ble#22')                  #20 if (vAC.hi OR vAC.lo) != 0
              1776 0116  ld   [$16]       6938  ld([vPC])                       #21
              1777 0d00  ld   [y,x]       6939  ld([Y,X])                       #22 address of branch destination
              1778 c216  st   [$16]       6940  st([vPC])                       #23
              1779 1403  ld   $03,y       6941  ld(hi('NEXTY'),Y)               #24
              177a e000  jmp  y,$00       6942  jmp(Y,'NEXTY')                  #25
              177b 00f2  ld   $f2         6943  ld(-28/2)                       #26
                                          6944  label('.ble#20')
.ble#20:      177c 0d00  ld   [y,x]       6945  ld([Y,X])                       #20 address of branch destination
              177d c216  st   [$16]       6946  st([vPC])                       #21
              177e 1403  ld   $03,y       6947  ld(hi('NEXTY'),Y)               #22
              177f e000  jmp  y,$00       6948  jmp(Y,'NEXTY')                  #23
              1780 00f3  ld   $f3         6949  ld(-26/2)                       #24
                                          6950  label('.ble#22')
.ble#22:      1781 8001  adda $01         6951  adda(1)                         #22
              1782 c216  st   [$16]       6952  st([vPC])                       #23
              1783 1403  ld   $03,y       6953  ld(hi('NEXTY'),Y)               #24
              1784 e000  jmp  y,$00       6954  jmp(Y,'NEXTY')                  #25
              1785 00f2  ld   $f2         6955  ld(-28/2)                       #26
                                          6956
                                          6957  # ADDBA implementation
                                          6958  label('addba#13')
addba#13:     1786 1200  ld   ac,x        6959  ld(AC,X)                        #13 src var
              1787 0118  ld   [$18]       6960  ld([vAC])                       #14
              1788 8500  adda [x]         6961  adda([X])                       #15
              1789 c218  st   [$18]       6962  st([vAC])                       #16 vAC.lo += var.lo
              178a e894  blt  .addba#19   6963  bmi('.addba#19')                #17 Now figure out if there was a carry
              178b a500  suba [x]         6964  suba([X])                       #18 Gets back the initial value of vAC
              178c 4500  ora  [x]         6965  ora([X])                        #19 Carry in bit 7
              178d 3080  anda $80,x       6966  anda(0x80,X)                    #20 Move carry to bit 0
              178e 0500  ld   [x]         6967  ld([X])                         #21
              178f 8119  adda [$19]       6968  adda([vAC+1])                   #22 Add the high byte and carry
              1790 c219  st   [$19]       6969  st([vAC+1])                     #23 Store high result
              1791 1403  ld   $03,y       6970  ld(hi('NEXTY'),Y)               #24
              1792 e000  jmp  y,$00       6971  jmp(Y,'NEXTY')                  #25
              1793 00f2  ld   $f2         6972  ld(-28/2)                       #26
                                          6973  label('.addba#19')
.addba#19:    1794 2500  anda [x]         6974  anda([X])                       #19 Carry in bit 7
              1795 3080  anda $80,x       6975  anda(0x80,X)                    #20 Move carry to bit 0
              1796 0500  ld   [x]         6976  ld([X])                         #21
              1797 8119  adda [$19]       6977  adda([vAC+1])                   #22 Add high byte and carry
              1798 c219  st   [$19]       6978  st([vAC+1])                     #23 Store high result
              1799 1403  ld   $03,y       6979  ld(hi('NEXTY'),Y)               #24
              179a e000  jmp  y,$00       6980  jmp(Y,'NEXTY')                  #25
              179b 00f2  ld   $f2         6981  ld(-28/2)                       #26
                                          6982
                                          6983  # SUBBA implementation
                                          6984  label('subba#13')
subba#13:     179c 1200  ld   ac,x        6985  ld(AC,X)                        #13 src var
              179d 0118  ld   [$18]       6986  ld([vAC])                       #14
              179e e8a9  blt  .subba#17   6987  bmi('.subba#17')                 #15
              179f a500  suba [x]         6988  suba([X])                       #16
              17a0 c218  st   [$18]       6989  st([vAC])                       #17 vAC.lo -= var.lo
              17a1 4500  ora  [x]         6990  ora([X])                        #18 Borrow in bit 7
              17a2 3080  anda $80,x       6991  anda(0x80,X)                    #19 Move borrow to bit 0
              17a3 0119  ld   [$19]       6992  ld([vAC+1])                     #20
              17a4 a500  suba [x]         6993  suba([X])                       #21 Sub borrow from high byte
              17a5 c219  st   [$19]       6994  st([vAC+1])                     #22 Store high result
              17a6 1403  ld   $03,y       6995  ld(hi('REENTER'),Y)             #23
              17a7 e0cb  jmp  y,$cb       6996  jmp(Y,'REENTER')                #24
              17a8 00f2  ld   $f2         6997  ld(-28/2)                       #25
                                          6998  label('.subba#17')
.subba#17:    17a9 c218  st   [$18]       6999  st([vAC])                       #17
              17aa 2500  anda [x]         7000  anda([X])                       #18 Borrow in bit 7
              17ab 3080  anda $80,x       7001  anda(0x80,X)                    #19 Move borrow to bit 0
              17ac 0119  ld   [$19]       7002  ld([vAC+1])                     #20
              17ad a500  suba [x]         7003  suba([X])                       #21 Sub borrow from high byte
              17ae c219  st   [$19]       7004  st([vAC+1])                     #22 Store high result
              17af 1403  ld   $03,y       7005  ld(hi('REENTER'),Y)             #23
              17b0 e0cb  jmp  y,$cb       7006  jmp(Y,'REENTER')                #24
              17b1 00f2  ld   $f2         7007  ld(-28/2)                       #25
                                          7008
                                          7009  # POKEA implementation
                                          7010  label('pokea#13')
pokea#13:     17b2 1200  ld   ac,x        7011  ld(AC,X)                        #13
              17b3 0500  ld   [x]         7012  ld([X])                         #14 var.lo
              17b4 1118  ld   [$18],x     7013  ld([vAC],X)                     #15
              17b5 1519  ld   [$19],y     7014  ld([vAC+1],Y)                   #16
              17b6 ce00  st   [y,x]       7015  st([Y,X])                       #17 poke [vAC], var.lo
              17b7 1403  ld   $03,y       7016  ld(hi('NEXTY'),Y)               #18
              17b8 e000  jmp  y,$00       7017  jmp(Y,'NEXTY')                  #19
              17b9 00f5  ld   $f5         7018  ld(-22/2)                       #20
                                          7019
                                          7020  # DOKEA implementation
                                          7021  label('dokea#13')
dokea#13:     17ba d21d  st   [$1d],x     7022  st([vTmp],X)                    #13
              17bb 0500  ld   [x]         7023  ld([X])                         #14 var.lo
              17bc 1118  ld   [$18],x     7024  ld([vAC],X)                     #15
              17bd 1519  ld   [$19],y     7025  ld([vAC+1],Y)                   #16
              17be ce00  st   [y,x]       7026  st([Y,X])                       #17 poke [vAC], var.lo
              17bf 011d  ld   [$1d]       7027  ld([vTmp])                      #18
              17c0 9001  adda $01,x       7028  adda(1,X)                       #19
              17c1 0500  ld   [x]         7029  ld([X])                         #20 var.hi
              17c2 c21d  st   [$1d]       7030  st([vTmp])                      #21
              17c3 0118  ld   [$18]       7031  ld([vAC])                       #22
              17c4 9001  adda $01,x       7032  adda(1,X)                       #23
              17c5 011d  ld   [$1d]       7033  ld([vTmp])                      #24
              17c6 ce00  st   [y,x]       7034  st([Y,X])                       #25 poke [vAC+1], var.hi
              17c7 1403  ld   $03,y       7035  ld(hi('NEXTY'),Y)               #26
              17c8 e000  jmp  y,$00       7036  jmp(Y,'NEXTY')                  #27
              17c9 00f1  ld   $f1         7037  ld(-30/2)                       #28
                                          7038
                                          7039  # POKEI implementation
                                          7040  label('pokei#13')
pokei#13:     17ca 1519  ld   [$19],y     7041  ld([vAC+1],Y)                   #13
              17cb 1118  ld   [$18],x     7042  ld([vAC],X)                     #14
              17cc de00  st   [y,x++]     7043  st([Y,Xpp])                     #15
              17cd 1403  ld   $03,y       7044  ld(hi('NEXTY'),Y)               #16
              17ce e000  jmp  y,$00       7045  jmp(Y,'NEXTY')                  #17
              17cf 00f6  ld   $f6         7046  ld(-20/2)                       #18
                                          7047
                                          7048  # DOKEI implementation
                                          7049  label('dokei#13')
dokei#13:     17d0 1517  ld   [$17],y     7050  ld([vPC+1],Y)                   #13
              17d1 c21d  st   [$1d]       7051  st([vTmp])                      #14 imm.hi
              17d2 de00  st   [y,x++]     7052  st([Y,Xpp])                     #15 X++
              17d3 0d00  ld   [y,x]       7053  ld([Y,X])                       #16 imm.lo
              17d4 1519  ld   [$19],y     7054  ld([vAC+1],Y)                   #17
              17d5 1118  ld   [$18],x     7055  ld([vAC],X)                     #18
              17d6 de00  st   [y,x++]     7056  st([Y,Xpp])                     #19
              17d7 011d  ld   [$1d]       7057  ld([vTmp])                      #20
              17d8 ce00  st   [y,x]       7058  st([Y,X])                       #21
              17d9 0116  ld   [$16]       7059  ld([vPC])                       #22
              17da 8001  adda $01         7060  adda(1)                         #23
              17db c216  st   [$16]       7061  st([vPC])                       #24
              17dc 1403  ld   $03,y       7062  ld(hi('REENTER'),Y)             #25
              17dd e0cb  jmp  y,$cb       7063  jmp(Y,'REENTER')                #26
              17de 00f1  ld   $f1         7064  ld(-30/2)                       #27
                                          7065
                                          7066
                                          7067  # MOVWA implementation
                                          7068  label('movwa#13')
movwa#13:     17df c21d  st   [$1d]       7069  st([vTmp])                      #13 address of dst var
              17e0 de00  st   [y,x++]     7070  st([Y,Xpp])                     #14 X++
              17e1 00fb  ld   $fb         7071  ld(min(0,maxTicks-40/2))        #15
              17e2 8115  adda [$15]       7072  adda([vTicks])                  #16
              17e3 e8f9  blt  .movwa#19   7073  blt('.movwa#19')                #17 not enough time left, so retry
              17e4 0d00  ld   [y,x]       7074  ld([Y,X])                       #18
              17e5 1200  ld   ac,x        7075  ld(AC,X)                        #19 address of src var
              17e6 1400  ld   $00,y       7076  ld(0,Y)                         #20
              17e7 0d00  ld   [y,x]       7077  ld([Y,X])                       #21 src.lo
              17e8 de00  st   [y,x++]     7078  st([Y,Xpp])                     #22 X++
              17e9 c22a  st   [$2a]       7079  st([sysArgs+6])                 #23
              17ea 0500  ld   [x]         7080  ld([X])                         #24 src.hi
              17eb c22b  st   [$2b]       7081  st([sysArgs+7])                 #25
              17ec 111d  ld   [$1d],x     7082  ld([vTmp],X)                    #26 address of dst var
              17ed 012a  ld   [$2a]       7083  ld([sysArgs+6])                 #27
              17ee de00  st   [y,x++]     7084  st([Y,Xpp])                     #28 dst.lo = src.lo, X++
              17ef c218  st   [$18]       7085  st([vAC])                       #29 vAC.lo = dst.lo
              17f0 012b  ld   [$2b]       7086  ld([sysArgs+7])                 #30
              17f1 ce00  st   [y,x]       7087  st([Y,X])                       #31 dst.hi = src.hi
              17f2 c219  st   [$19]       7088  st([vAC+1])                     #32 vAC.hi = dst.hi
              17f3 0116  ld   [$16]       7089  ld([vPC])                       #33
              17f4 8001  adda $01         7090  adda(1)                         #34
              17f5 c216  st   [$16]       7091  st([vPC])                       #35 advance vPC by 1
              17f6 1403  ld   $03,y       7092  ld(hi('NEXTY'),Y)               #36
              17f7 e000  jmp  y,$00       7093  jmp(Y,'NEXTY')                  #37
              17f8 00ec  ld   $ec         7094  ld(-40/2)                       #38
                                          7095
                                          7096  label('.movwa#19')
.movwa#19:    17f9 0116  ld   [$16]       7097  ld([vPC])                       #19 retry instruction
              17fa a002  suba $02         7098  suba(2)                         #20
              17fb c216  st   [$16]       7099  st([vPC])                       #21
              17fc 1403  ld   $03,y       7100  ld(hi('NEXTY'),Y)               #22
              17fd e000  jmp  y,$00       7101  jmp(Y,'NEXTY')                  #23
              17fe 00f3  ld   $f3         7102  ld(-26/2)                       #24
                                          7103
                                          7104
                                          7105  fillers(until=0xff)
              17ff 0200  nop              7106  align(0x100, size=0x100)
                                          7107
                                          7108  #-----------------------------------------------------------------------
                                          7109  #       More vCPU instruction implementations, (0x1800)
                                          7110  #-----------------------------------------------------------------------
                                          7111  #
                                          7112  # SYS retry implementation
                                          7113  label('.sys#16')
.sys#16:      1800 0116  ld   [$16]       7114  ld([vPC])                       #16
              1801 a002  suba $02         7115  suba(2)                         #17
              1802 c216  st   [$16]       7116  st([vPC])                       #18
              1803 1403  ld   $03,y       7117  ld(hi('REENTER'),Y)             #19
              1804 e0cb  jmp  y,$cb       7118  jmp(Y,'REENTER')                #20
              1805 00f4  ld   $f4         7119  ld(-24/2)                       #21
                                          7120
                                          7121  # LUP return, no longer part of PEEK
                                          7122  label('lupReturn#19')
lupReturn#19: 1806 0000  ld   $00         7123  ld(0)                           #19
              1807 c219  st   [$19]       7124  st([vAC+1])                     #20
              1808 1403  ld   $03,y       7125  ld(hi('REENTER'),Y)             #21
              1809 e0cb  jmp  y,$cb       7126  jmp(Y,'REENTER')                #22
              180a 00f3  ld   $f3         7127  ld(-26/2)                       #23
                                          7128
                                          7129
                                          7130  # PEEKV+ implementation
                                          7131  label('peekv+#13')
peekv+#13:    180b 1400  ld   $00,y       7132  ld(0,Y)                         #13
              180c 1200  ld   ac,x        7133  ld(AC,X)                        #14
              180d 00fd  ld   $fd         7134  ld(min(0,maxTicks-36/2))        #15
              180e 8115  adda [$15]       7135  adda([vTicks])                  #16
              180f e82a  blt  .peekv+#19  7136  blt('.peekv+#19')               #17 not enough time left, so retry
              1810 0500  ld   [x]         7137  ld([X])                         #18 low byte peek address
              1811 c21d  st   [$1d]       7138  st([vTmp])                      #19
              1812 8001  adda $01         7139  adda(1)                         #20
              1813 de00  st   [y,x++]     7140  st([Y,Xpp])                     #21
              1814 f01f  beq  .peekv+#24  7141  beq('.peekv+#24')               #22 if low byte is 0x00
              1815 0500  ld   [x]         7142  ld([X])                         #23 high byte peek address
              1816 1600  ld   ac,y        7143  ld(AC,Y)                        #24
              1817 111d  ld   [$1d],x     7144  ld([vTmp],X)                    #25
              1818 0d00  ld   [y,x]       7145  ld([Y,X])                       #26
              1819 c218  st   [$18]       7146  st([vAC])                       #27
              181a 0000  ld   $00         7147  ld(0)                           #28
              181b c219  st   [$19]       7148  st([vAC+1])                     #29
              181c 1403  ld   $03,y       7149  ld(hi('NEXTY'),Y)               #30
              181d e000  jmp  y,$00       7150  jmp(Y,'NEXTY')                  #31
              181e 00ef  ld   $ef         7151  ld(-34/2)                       #32
                                          7152
                                          7153  label('.peekv+#24')
.peekv+#24:   181f 1600  ld   ac,y        7154  ld(AC,Y)                        #24
              1820 8001  adda $01         7155  adda(1)                         #25
              1821 c600  st   [x]         7156  st([X])                         #26
              1822 111d  ld   [$1d],x     7157  ld([vTmp],X)                    #27
              1823 0d00  ld   [y,x]       7158  ld([Y,X])                       #28
              1824 c218  st   [$18]       7159  st([vAC])                       #29
              1825 0000  ld   $00         7160  ld(0)                           #30
              1826 c219  st   [$19]       7161  st([vAC+1])                     #31
              1827 1403  ld   $03,y       7162  ld(hi('NEXTY'),Y)               #32
              1828 e000  jmp  y,$00       7163  jmp(Y,'NEXTY')                  #33
              1829 00ee  ld   $ee         7164  ld(-36/2)                       #34
                                          7165
                                          7166  label('.peekv+#19')
.peekv+#19:   182a 0116  ld   [$16]       7167  ld([vPC])                       #19 retry instruction
              182b a002  suba $02         7168  suba(2)                         #20
              182c c216  st   [$16]       7169  st([vPC])                       #21
              182d 1403  ld   $03,y       7170  ld(hi('NEXTY'),Y)               #22
              182e e000  jmp  y,$00       7171  jmp(Y,'NEXTY')                  #23
              182f 00f3  ld   $f3         7172  ld(-26/2)                       #24
                                          7173
                                          7174
                                          7175  # POKEV+ implementation
                                          7176  label('pokev+#13')
pokev+#13:    1830 1400  ld   $00,y       7177  ld(0,Y)                         #13
              1831 1200  ld   ac,x        7178  ld(AC,X)                        #14 Operand
              1832 00fe  ld   $fe         7179  ld(min(0,maxTicks-34/2))        #15
              1833 8115  adda [$15]       7180  adda([vTicks])                  #16
              1834 e84b  blt  .pokev+#19  7181  blt('.pokev+#19')               #17 not enough time left, so retry
              1835 0500  ld   [x]         7182  ld([X])                         #18 low byte poke address
              1836 c21d  st   [$1d]       7183  st([vTmp])                      #19
              1837 8001  adda $01         7184  adda(1)                         #20
              1838 de00  st   [y,x++]     7185  st([Y,Xpp])                     #21
              1839 f042  beq  .pokev+#24  7186  beq('.pokev+#24')               #22 if low byte is 0x00
              183a 0500  ld   [x]         7187  ld([X])                         #23 high byte poke address
              183b 1600  ld   ac,y        7188  ld(AC,Y)                        #24
              183c 111d  ld   [$1d],x     7189  ld([vTmp],X)                    #25
              183d 0118  ld   [$18]       7190  ld([vAC])                       #26
              183e ce00  st   [y,x]       7191  st([Y,X])                       #27
              183f 1403  ld   $03,y       7192  ld(hi('NEXTY'),Y)               #28
              1840 e000  jmp  y,$00       7193  jmp(Y,'NEXTY')                  #29
              1841 00f0  ld   $f0         7194  ld(-32/2)                       #30
                                          7195
                                          7196  label('.pokev+#24')
.pokev+#24:   1842 1600  ld   ac,y        7197  ld(AC,Y)                        #24
              1843 8001  adda $01         7198  adda(1)                         #25
              1844 c600  st   [x]         7199  st([X])                         #26
              1845 111d  ld   [$1d],x     7200  ld([vTmp],X)                    #27
              1846 0118  ld   [$18]       7201  ld([vAC])                       #28
              1847 ce00  st   [y,x]       7202  st([Y,X])                       #29
              1848 1403  ld   $03,y       7203  ld(hi('NEXTY'),Y)               #30
              1849 e000  jmp  y,$00       7204  jmp(Y,'NEXTY')                  #31
              184a 00ef  ld   $ef         7205  ld(-34/2)                       #32
                                          7206
                                          7207  label('.pokev+#19')
.pokev+#19:   184b 0116  ld   [$16]       7208  ld([vPC])                       #19 retry instruction
              184c a002  suba $02         7209  suba(2)                         #20
              184d c216  st   [$16]       7210  st([vPC])                       #21
              184e 1403  ld   $03,y       7211  ld(hi('NEXTY'),Y)               #22
              184f e000  jmp  y,$00       7212  jmp(Y,'NEXTY')                  #23
              1850 00f3  ld   $f3         7213  ld(-26/2)                       #24
                                          7214
                                          7215
                                          7216  # DEEKV+ implementation
                                          7217  label('deekv+#13')
deekv+#13:    1851 1400  ld   $00,y       7218  ld(0,Y)                         #13
              1852 1200  ld   ac,x        7219  ld(AC,X)                        #14
              1853 00fc  ld   $fc         7220  ld(min(0,maxTicks-38/2))        #15
              1854 8115  adda [$15]       7221  adda([vTicks])                  #16
              1855 e873  blt  .deekv+#19  7222  blt('.deekv+#19')               #17 not enough time left, so retry
              1856 0500  ld   [x]         7223  ld([X])                         #18 low byte deek address
              1857 c21d  st   [$1d]       7224  st([vTmp])                      #19
              1858 8002  adda $02         7225  adda(2)                         #20
              1859 de00  st   [y,x++]     7226  st([Y,Xpp])                     #21
              185a 20fe  anda $fe         7227  anda(0xFE)                      #22
              185b f067  beq  .deekv+#25  7228  beq('.deekv+#25')               #23 if low byte is 0x00 or 0x01
              185c 0500  ld   [x]         7229  ld([X])                         #24 high byte deek address
              185d 1600  ld   ac,y        7230  ld(AC,Y)                        #25
              185e 111d  ld   [$1d],x     7231  ld([vTmp],X)                    #26
              185f 0d00  ld   [y,x]       7232  ld([Y,X])                       #27
              1860 de00  st   [y,x++]     7233  st([Y,Xpp])                     #28 X++
              1861 c218  st   [$18]       7234  st([vAC])                       #29
              1862 0d00  ld   [y,x]       7235  ld([Y,X])                       #30
              1863 c219  st   [$19]       7236  st([vAC+1])                     #31
              1864 1403  ld   $03,y       7237  ld(hi('NEXTY'),Y)               #32
              1865 e000  jmp  y,$00       7238  jmp(Y,'NEXTY')                  #33
              1866 00ee  ld   $ee         7239  ld(-36/2)                       #34
                                          7240
                                          7241  label('.deekv+#25')
.deekv+#25:   1867 1600  ld   ac,y        7242  ld(AC,Y)                        #25
              1868 8001  adda $01         7243  adda(1)                         #26
              1869 c600  st   [x]         7244  st([X])                         #27
              186a 111d  ld   [$1d],x     7245  ld([vTmp],X)                    #28
              186b 0d00  ld   [y,x]       7246  ld([Y,X])                       #29
              186c de00  st   [y,x++]     7247  st([Y,Xpp])                     #30 X++
              186d c218  st   [$18]       7248  st([vAC])                       #31
              186e 0d00  ld   [y,x]       7249  ld([Y,X])                       #32
              186f c219  st   [$19]       7250  st([vAC+1])                     #33
              1870 1403  ld   $03,y       7251  ld(hi('NEXTY'),Y)               #34
              1871 e000  jmp  y,$00       7252  jmp(Y,'NEXTY')                  #35
              1872 00ed  ld   $ed         7253  ld(-38/2)                       #36
                                          7254
                                          7255  label('.deekv+#19')
.deekv+#19:   1873 0116  ld   [$16]       7256  ld([vPC])                       #19 retry instruction
              1874 a002  suba $02         7257  suba(2)                         #20
              1875 c216  st   [$16]       7258  st([vPC])                       #21
              1876 1403  ld   $03,y       7259  ld(hi('NEXTY'),Y)               #22
              1877 e000  jmp  y,$00       7260  jmp(Y,'NEXTY')                  #23
              1878 00f3  ld   $f3         7261  ld(-26/2)                       #24
                                          7262
                                          7263
                                          7264  # DOKEV+ implementation
                                          7265  label('dokev+#13')
dokev+#13:    1879 1200  ld   ac,x        7266  ld(AC,X)                        #13
              187a 00fd  ld   $fd         7267  ld(min(0,maxTicks-36/2))        #14
              187b 8115  adda [$15]       7268  adda([vTicks])                  #15
              187c e898  blt  .dokev+#18  7269  blt('.dokev+#18')               #16 not enough time left, so retry
              187d 0500  ld   [x]         7270  ld([X])                         #17 low byte poke address
              187e c21d  st   [$1d]       7271  st([vTmp])                      #18
              187f 8002  adda $02         7272  adda(2)                         #19
              1880 de00  st   [y,x++]     7273  st([Y,Xpp])                     #20
              1881 20fe  anda $fe         7274  anda(0xFE)                      #21
              1882 f08d  beq  .dokev+#24  7275  beq('.dokev+#24')               #22 if low byte is 0x00 or 0x01
              1883 0500  ld   [x]         7276  ld([X])                         #23 high byte poke address
              1884 1600  ld   ac,y        7277  ld(AC,Y)                        #24
              1885 111d  ld   [$1d],x     7278  ld([vTmp],X)                    #25
              1886 0118  ld   [$18]       7279  ld([vAC])                       #26
              1887 de00  st   [y,x++]     7280  st([Y,Xpp])                     #27
              1888 0119  ld   [$19]       7281  ld([vAC+1])                     #28
              1889 ce00  st   [y,x]       7282  st([Y,X])                       #29
              188a 1403  ld   $03,y       7283  ld(hi('NEXTY'),Y)               #30
              188b e000  jmp  y,$00       7284  jmp(Y,'NEXTY')                  #31
              188c 00ef  ld   $ef         7285  ld(-34/2)                       #32
                                          7286
                                          7287  label('.dokev+#24')
.dokev+#24:   188d 1600  ld   ac,y        7288  ld(AC,Y)                        #24
              188e 8001  adda $01         7289  adda(1)                         #25
              188f c600  st   [x]         7290  st([X])                         #26
              1890 111d  ld   [$1d],x     7291  ld([vTmp],X)                    #27
              1891 0118  ld   [$18]       7292  ld([vAC])                       #28
              1892 de00  st   [y,x++]     7293  st([Y,Xpp])                     #29
              1893 0119  ld   [$19]       7294  ld([vAC+1])                     #30
              1894 ce00  st   [y,x]       7295  st([Y,X])                       #31
              1895 1403  ld   $03,y       7296  ld(hi('NEXTY'),Y)               #32
              1896 e000  jmp  y,$00       7297  jmp(Y,'NEXTY')                  #33
              1897 00ee  ld   $ee         7298  ld(-36/2)                       #34
                                          7299
                                          7300  label('.dokev+#18')
.dokev+#18:   1898 0116  ld   [$16]       7301  ld([vPC])                       #18 retry instruction
              1899 a002  suba $02         7302  suba(2)                         #19
              189a c216  st   [$16]       7303  st([vPC])                       #20
              189b 1403  ld   $03,y       7304  ld(hi('REENTER'),Y)             #21
              189c e0cb  jmp  y,$cb       7305  jmp(Y,'REENTER')                #22
              189d 00f3  ld   $f3         7306  ld(-26/2)                       #23
                                          7307
                                          7308
                                          7309  # CMPI implementation
                                          7310  label('cmpi#13')
cmpi#13:      189e c21d  st   [$1d]       7311  st([vTmp])                      #13 immediate value
              189f 00fd  ld   $fd         7312  ld(min(0,maxTicks-36/2))        #14
              18a0 8115  adda [$15]       7313  adda([vTicks])                  #15
              18a1 e8be  blt  .cmpi#18    7314  blt('.cmpi#18')                 #16 not enough time left, so retry
              18a2 1517  ld   [$17],y     7315  ld([vPC+1],Y)                   #17
              18a3 011d  ld   [$1d]       7316  ld([vTmp])                      #18 immediate value
              18a4 de00  st   [y,x++]     7317  st([Y,Xpp])                     #19 X++
              18a5 0d00  ld   [y,x]       7318  ld([Y,X])                       #20 address of var
              18a6 1200  ld   ac,x        7319  ld(AC,X)                        #21
              18a7 0500  ld   [x]         7320  ld([X])                         #22 low byte of var
              18a8 e8b4  blt  .cmpi#25    7321  bmi('.cmpi#25')                 #23
              18a9 a11d  suba [$1d]       7322  suba([vTmp])                    #24
              18aa c218  st   [$18]       7323  st([vAC])                       #25 store low result
              18ab 411d  ora  [$1d]       7324  ora([vTmp])                     #26
              18ac 2080  anda $80         7325  anda(0x80)                      #27
              18ad c219  st   [$19]       7326  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              18ae 0116  ld   [$16]       7327  ld([vPC])                       #29
              18af 8001  adda $01         7328  adda(1)                         #30
              18b0 c216  st   [$16]       7329  st([vPC])                       #31 advance vPC by 1
              18b1 1403  ld   $03,y       7330  ld(hi('NEXTY'),Y)               #32
              18b2 e000  jmp  y,$00       7331  jmp(Y,'NEXTY')                  #33
              18b3 00ee  ld   $ee         7332  ld(-36/2)                       #34
                                          7333  label('.cmpi#25')
.cmpi#25:     18b4 c218  st   [$18]       7334  st([vAC])                       #25 store low result
              18b5 211d  anda [$1d]       7335  anda([vTmp])                    #26
              18b6 2080  anda $80         7336  anda(0x80)                      #27
              18b7 c219  st   [$19]       7337  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              18b8 0116  ld   [$16]       7338  ld([vPC])                       #29
              18b9 8001  adda $01         7339  adda(1)                         #30
              18ba c216  st   [$16]       7340  st([vPC])                       #31 advance vPC by 1
              18bb 1403  ld   $03,y       7341  ld(hi('NEXTY'),Y)               #32
              18bc e000  jmp  y,$00       7342  jmp(Y,'NEXTY')                  #33
              18bd 00ee  ld   $ee         7343  ld(-36/2)                       #34
                                          7344  label('.cmpi#18')
.cmpi#18:     18be 0116  ld   [$16]       7345  ld([vPC])                       #18 retry instruction
              18bf a002  suba $02         7346  suba(2)                         #19
              18c0 c216  st   [$16]       7347  st([vPC])                       #20
              18c1 1403  ld   $03,y       7348  ld(hi('REENTER'),Y)             #21
              18c2 e0cb  jmp  y,$cb       7349  jmp(Y,'REENTER')                #22
              18c3 00f3  ld   $f3         7350  ld(-26/2)                       #23
                                          7351  # CMPI implementation
                                          7352  #label('cmpi#13')
                                          7353  #st([vTmp])                      #13 immediate value
                                          7354  #ld(min(0,maxTicks-42/2))        #14
                                          7355  #adda([vTicks])                  #15
                                          7356  #blt('.cmpi#18')                 #16 not enough time left, so retry
                                          7357  #ld([vPC+1],Y)                   #17
                                          7358  #ld([vTmp])                      #18 immediate value
                                          7359  #st([Y,Xpp])                     #19 X++
                                          7360  #ld([Y,X])                       #20 address of var
                                          7361  #ld(AC,X)                        #21
                                          7362  #ld(0,Y)                         #22
                                          7363  #ld([X])                         #23 low byte of var
                                          7364  #st([sysArgs+7])                 #24
                                          7365  #st([Y,Xpp])                     #25 X++
                                          7366  #ld([X])                         #26 high byte of var
                                          7367  #beq('.cmpi#29')                 #27 exit if var.hi != 0
                                          7368  #ld([sysArgs+7])                 #28 var.lo
                                          7369  #ld([vPC])                       #29
                                          7370  #adda(1)                         #30
                                          7371  #st([vPC])                       #31 advance vPC by 1
                                          7372  #ld(hi('NEXTY'),Y)               #32
                                          7373  #jmp(Y,'NEXTY')                  #33
                                          7374  #ld(-36/2)                       #34
                                          7375  #
                                          7376  #label('.cmpi#29')
                                          7377  #bmi('.cmpi#31')                 #29
                                          7378  #suba([vTmp])                    #30
                                          7379  #st([vAC])                       #31 store low result
                                          7380  #ora([vTmp])                     #32
                                          7381  #anda(0x80)                      #33
                                          7382  #st([vAC+1])                     #34 [vAC.hi] = sign bit, numerical accuracy is not important
                                          7383  #ld([vPC])                       #35
                                          7384  #adda(1)                         #36
                                          7385  #st([vPC])                       #37 advance vPC by 1
                                          7386  #ld(hi('NEXTY'),Y)               #38
                                          7387  #jmp(Y,'NEXTY')                  #39
                                          7388  #ld(-42/2)                       #40
                                          7389  #
                                          7390  #label('.cmpi#31')
                                          7391  #st([vAC])                       #31 store low result
                                          7392  #anda([vTmp])                    #32
                                          7393  #anda(0x80)                      #33
                                          7394  #st([vAC+1])                     #34 [vAC.hi] = sign bit, numerical accuracy is not important
                                          7395  #ld([vPC])                       #35
                                          7396  #adda(1)                         #36
                                          7397  #st([vPC])                       #37 advance vPC by 1
                                          7398  #ld(hi('NEXTY'),Y)               #38
                                          7399  #jmp(Y,'NEXTY')                  #39
                                          7400  #ld(-42/2)                       #40
                                          7401  #
                                          7402  #label('.cmpi#18')
                                          7403  #ld([vPC])                       #18 retry instruction
                                          7404  #suba(2)                         #19
                                          7405  #st([vPC])                       #20
                                          7406  #ld(hi('REENTER'),Y)             #21
                                          7407  #jmp(Y,'REENTER')                #22
                                          7408  #ld(-26/2)                       #23
                                          7409
                                          7410
                                          7411  # JEQ implementation
                                          7412  label('jeq#13')
jeq#13:       18c4 1517  ld   [$17],y     7413  ld([vPC+1],Y)                   #13 vPC.hi
              18c5 0119  ld   [$19]       7414  ld([vAC+1])                     #14
              18c6 4118  ora  [$18]       7415  ora([vAC])                      #15
              18c7 f0cf  beq  .jeq#18     7416  beq('.jeq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              18c8 0d00  ld   [y,x]       7417  ld([Y,X])                       #17 lo address of jump destination
              18c9 0116  ld   [$16]       7418  ld([vPC])                       #18
              18ca 8001  adda $01         7419  adda(1)                         #19
              18cb c216  st   [$16]       7420  st([vPC])                       #20
              18cc 1403  ld   $03,y       7421  ld(hi('REENTER'),Y)             #21
              18cd e0cb  jmp  y,$cb       7422  jmp(Y,'REENTER')                #22
              18ce 00f3  ld   $f3         7423  ld(-26/2)                       #23
                                          7424  label('.jeq#18')
.jeq#18:      18cf c216  st   [$16]       7425  st([vPC])                       #18
              18d0 de00  st   [y,x++]     7426  st([Y,Xpp])                     #19
              18d1 0d00  ld   [y,x]       7427  ld([Y,X])                       #20 hi address of jump destination
              18d2 c217  st   [$17]       7428  st([vPC+1])                     #21
              18d3 1403  ld   $03,y       7429  ld(hi('NEXTY'),Y)               #22
              18d4 e000  jmp  y,$00       7430  jmp(Y,'NEXTY')                  #23
              18d5 00f3  ld   $f3         7431  ld(-26/2)                       #24
                                          7432
                                          7433  # JNE implementation
                                          7434  label('jne#13')
jne#13:       18d6 1517  ld   [$17],y     7435  ld([vPC+1],Y)                   #13 vPC.hi
              18d7 0119  ld   [$19]       7436  ld([vAC+1])                     #14
              18d8 4118  ora  [$18]       7437  ora([vAC])                      #15
              18d9 ece1  bne  .jne#18     7438  bne('.jne#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              18da 0d00  ld   [y,x]       7439  ld([Y,X])                       #17 address of branch destination
              18db 0116  ld   [$16]       7440  ld([vPC])                       #18
              18dc 8001  adda $01         7441  adda(1)                         #19
              18dd c216  st   [$16]       7442  st([vPC])                       #20
              18de 1403  ld   $03,y       7443  ld(hi('REENTER'),Y)             #21
              18df e0cb  jmp  y,$cb       7444  jmp(Y,'REENTER')                #22
              18e0 00f3  ld   $f3         7445  ld(-26/2)                       #23
                                          7446  label('.jne#18')
.jne#18:      18e1 c216  st   [$16]       7447  st([vPC])                       #18
              18e2 de00  st   [y,x++]     7448  st([Y,Xpp])                     #19
              18e3 0d00  ld   [y,x]       7449  ld([Y,X])                       #20 hi address of jump destination
              18e4 c217  st   [$17]       7450  st([vPC+1])                     #21
              18e5 1403  ld   $03,y       7451  ld(hi('NEXTY'),Y)               #22
              18e6 e000  jmp  y,$00       7452  jmp(Y,'NEXTY')                  #23
              18e7 00f3  ld   $f3         7453  ld(-26/2)                       #24
                                          7454
                                          7455
              18e8 0200  nop              7456  fillers(until=0xff)
              18e9 0200  nop
              18ea 0200  nop
              * 23 times
              18ff 0200  nop              7457  align(0x100, size=0x100)
                                          7458
                                          7459  #-----------------------------------------------------------------------
                                          7460  #       More sys implementations, (0x1900)
                                          7461  #-----------------------------------------------------------------------
                                          7462  # sys_Multiply_s16, sum:s16 = x:s16 * y:s16
                                          7463  # x:args0:1 y:args2:3 sum:args4:5 mask:args6:7
                                          7464  label('sys_Multiply_s16')
sys_Multiply_s16:
              1900 2126  anda [$26]       7465  anda([sysArgs+2])               #18,
              1901 c218  st   [$18]       7466  st([vAC])                       #19, AC.lo = mask.lo AND y.lo
              1902 012b  ld   [$2b]       7467  ld([sysArgs+7])                 #20, load mask.hio
              1903 2127  anda [$27]       7468  anda([sysArgs+3])               #21,
              1904 c219  st   [$19]       7469  st([vAC+1])                     #22, AC.hi = mask.hi AND y.hi
              1905 4118  ora  [$18]       7470  ora([vAC])                      #23,
                                          7471  beq('.sys_ms16_26')             #24, AC = 0 then skip
              1906 f00e  beq  .sys_ms16_26
              1907 0128  ld   [$28]       7472  ld([sysArgs+4])                 #25, load sum.lo
              1908 8124  adda [$24]       7473  adda([sysArgs+0])               #26, load x.lo
              1909 c228  st   [$28]       7474  st([sysArgs+4])                 #27, sum.lo = sum.lo + x.lo
                                          7475  blt('.sys_ms16_30')             #28, check for carry
              190a e810  blt  .sys_ms16_30
              190b a124  suba [$24]       7476  suba([sysArgs+0])               #29, get original sum.lo back
                                          7477  bra('.sys_ms16_32')             #30,
              190c fc12  bra  .sys_ms16_32
              190d 4124  ora  [$24]       7478  ora([sysArgs+0])                #31, carry in bit 7
                                          7479
                                          7480  label('.sys_ms16_26')
                                          7481  bra('.sys_ms16_28')             #26,
.sys_ms16_26: 190e fc18  bra  .sys_ms16_28
              190f 00e4  ld   $e4         7482  ld(-56/2)                       #27, no accumulate sys ticks
                                          7483
                                          7484  label('.sys_ms16_30')
.sys_ms16_30: 1910 2124  anda [$24]       7485  anda([sysArgs+0])               #30, carry in bit 7
              1911 0200  nop              7486  nop()                           #31,
                                          7487
                                          7488  label('.sys_ms16_32')
.sys_ms16_32: 1912 3080  anda $80,x       7489  anda(0x80,X)                    #32,
              1913 0500  ld   [x]         7490  ld([X])                         #33, move carry to bit 0
              1914 8129  adda [$29]       7491  adda([sysArgs+5])               #34,
              1915 8125  adda [$25]       7492  adda([sysArgs+1])               #35,
              1916 c229  st   [$29]       7493  st([sysArgs+5])                 #36, sum.hi = sum.hi + x.hi
              1917 00df  ld   $df         7494  ld(-66/2)                       #37, accumulate sys ticks
                                          7495
                                          7496  label('.sys_ms16_28')
.sys_ms16_28: 1918 c21d  st   [$1d]       7497  st([vTmp])                      #28,#38,
              1919 0124  ld   [$24]       7498  ld([sysArgs+0])                 #29,#39, AC = x.lo
              191a 3080  anda $80,x       7499  anda(0x80,X)                    #30,#40, X = AC & 0x80
              191b 8124  adda [$24]       7500  adda([sysArgs+0])               #31,#41, AC = x.lo <<1
              191c c224  st   [$24]       7501  st([sysArgs+0])                 #32,#42, x.lo = AC
              191d 0500  ld   [x]         7502  ld([X])                         #33,#43, AC = X >>7
              191e 8125  adda [$25]       7503  adda([sysArgs+1])               #34,#44,
              191f 8125  adda [$25]       7504  adda([sysArgs+1])               #35,#45,
              1920 c225  st   [$25]       7505  st([sysArgs+1])                 #36,#46, x.hi = x.hi <<1 + AC
              1921 012a  ld   [$2a]       7506  ld([sysArgs+6])                 #37,#47, AC = mask.lo
              1922 3080  anda $80,x       7507  anda(0x80,X)                    #38,#48, X = AC & 0x80
              1923 812a  adda [$2a]       7508  adda([sysArgs+6])               #39,#49, AC = mask.lo <<1
              1924 c22a  st   [$2a]       7509  st([sysArgs+6])                 #40,#50, mask.lo = AC
              1925 0500  ld   [x]         7510  ld([X])                         #41,#51, AC = X >>7
              1926 812b  adda [$2b]       7511  adda([sysArgs+7])               #42,#52,
              1927 812b  adda [$2b]       7512  adda([sysArgs+7])               #43,#53,
              1928 c22b  st   [$2b]       7513  st([sysArgs+7])                 #44,#54, mask.hi = mask.hi <<1 + AC
              1929 412a  ora  [$2a]       7514  ora([sysArgs+6])                #45,#55,
                                          7515  beq('.sys_ms16_48')             #46,#56, if mask = 0
              192a f032  beq  .sys_ms16_48
              192b 0128  ld   [$28]       7516  ld([sysArgs+4])                 #47,#57
              192c 0116  ld   [$16]       7517  ld([vPC])                       #48,#58,
              192d a002  suba $02         7518  suba(2)                         #49,#59,
              192e c216  st   [$16]       7519  st([vPC])                       #50,#60, restart SYS function
              192f 1403  ld   $03,y       7520  ld(hi('REENTER'),Y)             #51,#61,
              1930 e0cb  jmp  y,$cb       7521  jmp(Y,'REENTER')                #52,#62,
              1931 011d  ld   [$1d]       7522  ld([vTmp])                      #53,#63,
                                          7523
                                          7524  label('.sys_ms16_48')
.sys_ms16_48: 1932 c218  st   [$18]       7525  st([vAC])                       #48,#58,
              1933 0129  ld   [$29]       7526  ld([sysArgs+5])                 #49,#59,
              1934 c219  st   [$19]       7527  st([vAC+1])                     #50,#60,
              1935 1403  ld   $03,y       7528  ld(hi('REENTER'),Y)             #51,#61,
              1936 e0cb  jmp  y,$cb       7529  jmp(Y,'REENTER')                #52,#62,
              1937 011d  ld   [$1d]       7530  ld([vTmp])                      #53,#63,
                                          7531
                                          7532
                                          7533  #-----------------------------------------------------------------------
                                          7534  # sys_Divide_s16, x:s16 = x:s16 / y:s16, rem:s16 = x:s16 % y:s16
                                          7535  # x:args0:1 y:args2:3 rem:args4:5 mask:args6:7
                                          7536  label('sys_Divide_s16')
sys_Divide_s16:
              1938 3080  anda $80,x       7537  anda(0x80,X)                    #18, X = AC & 0x80
              1939 8128  adda [$28]       7538  adda([sysArgs+4])               #19, AC = rem.lo <<1
              193a c228  st   [$28]       7539  st([sysArgs+4])                 #20, rem.lo = AC
              193b 0500  ld   [x]         7540  ld([X])                         #21, AC = X >>7
              193c 8129  adda [$29]       7541  adda([sysArgs+5])               #22,
              193d 8129  adda [$29]       7542  adda([sysArgs+5])               #23,
              193e c229  st   [$29]       7543  st([sysArgs+5])                 #24, rem.hi = rem.hi <<1 + AC
              193f 0125  ld   [$25]       7544  ld([sysArgs+1])                 #25,
              1940 2080  anda $80         7545  anda(0x80)                      #26, sign of x
                                          7546  beq('.sys_ds16_29')             #27, if x >= 0
              1941 f046  beq  .sys_ds16_29
              1942 0128  ld   [$28]       7547  ld([sysArgs+4])                 #28,
              1943 8001  adda $01         7548  adda(1)                         #29,
                                          7549  bra('.sys_ds16_32')             #30,
              1944 fc49  bra  .sys_ds16_32
              1945 c228  st   [$28]       7550  st([sysArgs+4])                 #31, rem.lo++
                                          7551
                                          7552  label('.sys_ds16_29')
.sys_ds16_29: 1946 0200  nop              7553  nop()                           #29
              1947 0200  nop              7554  nop()                           #30
              1948 0200  nop              7555  nop()                           #31
                                          7556
                                          7557  label('.sys_ds16_32')
.sys_ds16_32: 1949 0124  ld   [$24]       7558  ld([sysArgs+0])                 #32, AC = x.lo
              194a 3080  anda $80,x       7559  anda(0x80,X)                    #33, X = AC & 0x80
              194b 8124  adda [$24]       7560  adda([sysArgs+0])               #34, AC = x.lo <<1
              194c c224  st   [$24]       7561  st([sysArgs+0])                 #35, x.lo = AC
              194d 0500  ld   [x]         7562  ld([X])                         #36, AC = X >>7
              194e 8125  adda [$25]       7563  adda([sysArgs+1])               #37,
              194f 8125  adda [$25]       7564  adda([sysArgs+1])               #38,
              1950 c225  st   [$25]       7565  st([sysArgs+1])                 #39, x.hi = x.hi <<1 + AC
                                          7566
              1951 0128  ld   [$28]       7567  ld([sysArgs+4])                 #40, load rem.lo
                                          7568  blt('.sys_ds16_43')             #41, check for borrow
              1952 e857  blt  .sys_ds16_43
              1953 a126  suba [$26]       7569  suba([sysArgs+2])               #42,
              1954 c218  st   [$18]       7570  st([vAC])                       #43, vAC.lo = rem.lo - y.lo
                                          7571  bra('.sys_ds16_46')             #44,
              1955 fc5a  bra  .sys_ds16_46
              1956 4126  ora  [$26]       7572  ora([sysArgs+2])                #45,
                                          7573
                                          7574  label('.sys_ds16_43')
.sys_ds16_43: 1957 c218  st   [$18]       7575  st([vAC])                       #43,
              1958 2126  anda [$26]       7576  anda([sysArgs+2])               #44,
              1959 0200  nop              7577  nop()                           #45,
                                          7578
                                          7579  label('.sys_ds16_46')
.sys_ds16_46: 195a 3080  anda $80,x       7580  anda(0x80,X)                    #46, move borrow to bit 0
              195b 0129  ld   [$29]       7581  ld([sysArgs+5])                 #47, load rem.hi
              195c a500  suba [x]         7582  suba([X])                       #48,
              195d a127  suba [$27]       7583  suba([sysArgs+3])               #49,
              195e c219  st   [$19]       7584  st([vAC+1])                     #50, vAC.hi = rem.hi - y.hi
                                          7585  blt('.sys_ds16_53')             #51,
              195f e869  blt  .sys_ds16_53
              1960 00dc  ld   $dc         7586  ld(-72/2)                       #52
              1961 0118  ld   [$18]       7587  ld([vAC])                       #53,
              1962 c228  st   [$28]       7588  st([sysArgs+4])                 #54,
              1963 0119  ld   [$19]       7589  ld([vAC+1])                     #55,
              1964 c229  st   [$29]       7590  st([sysArgs+5])                 #56, rem = vAC
              1965 0124  ld   [$24]       7591  ld([sysArgs+0])                 #57,
              1966 8001  adda $01         7592  adda(1)                         #58,
              1967 c224  st   [$24]       7593  st([sysArgs+0])                 #59, x.lo++
              1968 00d8  ld   $d8         7594  ld(-80/2)                       #60,
                                          7595
                                          7596  label('.sys_ds16_53')
.sys_ds16_53: 1969 c21d  st   [$1d]       7597  st([vTmp])                      #53, #61,
              196a 012a  ld   [$2a]       7598  ld([sysArgs+6])                 #54, #62, AC = mask.lo
              196b 3080  anda $80,x       7599  anda(0x80,X)                    #55, #63, X = AC & 0x80
              196c 812a  adda [$2a]       7600  adda([sysArgs+6])               #56, #64, AC = mask.lo <<1
              196d c22a  st   [$2a]       7601  st([sysArgs+6])                 #57, #65, mask.lo = AC
              196e 0500  ld   [x]         7602  ld([X])                         #58, #66, AC = X >>7
              196f 812b  adda [$2b]       7603  adda([sysArgs+7])               #59, #67,
              1970 812b  adda [$2b]       7604  adda([sysArgs+7])               #60, #68,
              1971 c22b  st   [$2b]       7605  st([sysArgs+7])                 #61, #69, mask.hi = mask.hi <<1 + AC
              1972 412a  ora  [$2a]       7606  ora([sysArgs+6])                #62, #70,
                                          7607  bne('.sys_ds16_65')             #63, #71,
              1973 ec7a  bne  .sys_ds16_65
              1974 0116  ld   [$16]       7608  ld([vPC])                       #64, #72,
              1975 0200  nop              7609  nop()                           #65, #73,
              1976 0200  nop              7610  nop()                           #66, #74,
              1977 1403  ld   $03,y       7611  ld(hi('REENTER'),Y)             #67, #75,
              1978 e0cb  jmp  y,$cb       7612  jmp(Y,'REENTER')                #68, #76,
              1979 011d  ld   [$1d]       7613  ld([vTmp])                      #69, #77,
                                          7614
                                          7615  label('.sys_ds16_65')
.sys_ds16_65: 197a a002  suba $02         7616  suba(2)                         #65, #73,
              197b c216  st   [$16]       7617  st([vPC])                       #66, #74, restart SYS function
              197c 1403  ld   $03,y       7618  ld(hi('REENTER'),Y)             #67, #75,
              197d e0cb  jmp  y,$cb       7619  jmp(Y,'REENTER')                #68, #76,
              197e 011d  ld   [$1d]       7620  ld([vTmp])                      #69, #77,
                                          7621
                                          7622
                                          7623  #-----------------------------------------------------------------------
                                          7624  # sys_DrawLine
                                          7625  label('sys_DrawLine')
sys_DrawLine: 197f 1182  ld   [$82],x     7626  ld([0x82],X)                    #18, X = [xy1].lo
              1980 1583  ld   [$83],y     7627  ld([0x83],Y)                    #19, Y = [xy1].hi
              1981 ce00  st   [y,x]       7628  st([Y,X])                       #20, [Y, X] = fgColour
              1982 1184  ld   [$84],x     7629  ld([0x84],X)                    #21, X = [xy2].lo
              1983 1585  ld   [$85],y     7630  ld([0x85],Y)                    #22, Y = [xy2].hi
              1984 ce00  st   [y,x]       7631  st([Y,X])                       #23, [Y, X] = fgColour
                                          7632
              1985 01a0  ld   [$a0]       7633  ld([0xA0])                      #24, num.lo
              1986 819c  adda [$9c]       7634  adda([0x9C])                    #25, sy.lo
              1987 c2a0  st   [$a0]       7635  st([0xA0])                      #26, num.lo = num.lo + sy.lo
                                          7636  blt('.sys_drawl_29')            #27, check for carry
              1988 e88c  blt  .sys_drawl_29
              1989 a19c  suba [$9c]       7637  suba([0x9C])                    #28, get original num.lo back
                                          7638  bra('.sys_drawl_31')            #29,
              198a fc8e  bra  .sys_drawl_31
              198b 419c  ora  [$9c]       7639  ora([0x9C])                     #30, carry in bit 7
                                          7640
                                          7641  label('.sys_drawl_29')
.sys_drawl_29:
              198c 219c  anda [$9c]       7642  anda([0x9C])                    #29, carry in bit 7
              198d 0200  nop              7643  nop()                           #30,
                                          7644
                                          7645  label('.sys_drawl_31')
.sys_drawl_31:
              198e 3080  anda $80,x       7646  anda(0x80,X)                    #31,
              198f 0500  ld   [x]         7647  ld([X])                         #32, move carry to bit 0
              1990 81a1  adda [$a1]       7648  adda([0xA1])                    #33,
              1991 819d  adda [$9d]       7649  adda([0x9D])                    #34,
              1992 c2a1  st   [$a1]       7650  st([0xA1])                      #35, num.hi = num.hi + sy.hi
                                          7651
              1993 01a0  ld   [$a0]       7652  ld([0xA0])                      #36, num.lo
                                          7653  blt('.sys_drawl_39')            #37, check for borrow
              1994 e899  blt  .sys_drawl_39
              1995 a19a  suba [$9a]       7654  suba([0x9A])                    #38, sx.lo
              1996 c218  st   [$18]       7655  st([vAC])                       #39, vAC.lo = num.lo - sx.lo
                                          7656  bra('.sys_drawl_42')            #40,
              1997 fc9c  bra  .sys_drawl_42
              1998 419a  ora  [$9a]       7657  ora([0x9A])                     #41,
                                          7658
                                          7659  label('.sys_drawl_39')
.sys_drawl_39:
              1999 c218  st   [$18]       7660  st([vAC])                       #39,
              199a 219a  anda [$9a]       7661  anda([0x9A])                    #40,
              199b 0200  nop              7662  nop()                           #41,
                                          7663
                                          7664  label('.sys_drawl_42')
.sys_drawl_42:
              199c 3080  anda $80,x       7665  anda(0x80,X)                    #42, move borrow to bit 0
              199d 01a1  ld   [$a1]       7666  ld([0xA1])                      #43, num.hi
              199e a500  suba [x]         7667  suba([X])                       #44,
              199f a19b  suba [$9b]       7668  suba([0x9B])                    #45,
                                          7669  blt('.sys_drawl_48')            #46,
              19a0 e8cf  blt  .sys_drawl_48
              19a1 c219  st   [$19]       7670  st([vAC+1])                     #47, vAC.hi = num.hi - sx.hi
              19a2 0118  ld   [$18]       7671  ld([vAC])                       #48,
              19a3 c2a0  st   [$a0]       7672  st([0xA0])                      #49,
              19a4 0119  ld   [$19]       7673  ld([vAC+1])                     #50,
              19a5 c2a1  st   [$a1]       7674  st([0xA1])                      #51, num = vAC
                                          7675
              19a6 0182  ld   [$82]       7676  ld([0x82])                      #52, xy1.lo
              19a7 8186  adda [$86]       7677  adda([0x86])                    #53, dxy1.lo
              19a8 c282  st   [$82]       7678  st([0x82])                      #54, xy1.lo = xy1.lo + dxy1.lo
                                          7679  blt('.sys_drawl_57')            #55, check for carry
              19a9 e8ad  blt  .sys_drawl_57
              19aa a186  suba [$86]       7680  suba([0x86])                    #56, get original xy1.lo back
                                          7681  bra('.sys_drawl_59')            #57,
              19ab fcaf  bra  .sys_drawl_59
              19ac 4186  ora  [$86]       7682  ora([0x86])                     #58, carry in bit 7
                                          7683
                                          7684  label('.sys_drawl_57')
.sys_drawl_57:
              19ad 2186  anda [$86]       7685  anda([0x86])                    #57, carry in bit 7
              19ae 0200  nop              7686  nop()                           #58,
                                          7687
                                          7688  label('.sys_drawl_59')
.sys_drawl_59:
              19af 3080  anda $80,x       7689  anda(0x80,X)                    #59,
              19b0 0500  ld   [x]         7690  ld([X])                         #60, move carry to bit 0
              19b1 8183  adda [$83]       7691  adda([0x83])                    #61,
              19b2 8187  adda [$87]       7692  adda([0x87])                    #62,
              19b3 c283  st   [$83]       7693  st([0x83])                      #63, xy1.hi = xy1.hi + dxy1.hi
                                          7694
              19b4 0184  ld   [$84]       7695  ld([0x84])                      #64, xy2.lo
                                          7696  blt('.sys_drawl_67')            #65, check for borrow
              19b5 e8ba  blt  .sys_drawl_67
              19b6 a186  suba [$86]       7697  suba([0x86])                    #66, dxy1.lo
              19b7 c284  st   [$84]       7698  st([0x84])                      #67, xy2.lo = xy2.lo - dxy1.lo
                                          7699  bra('.sys_drawl_70')            #68,
              19b8 fcbd  bra  .sys_drawl_70
              19b9 4186  ora  [$86]       7700  ora([0x86])                     #69,
                                          7701
                                          7702  label('.sys_drawl_67')
.sys_drawl_67:
              19ba c284  st   [$84]       7703  st([0x84])                      #67,
              19bb 2186  anda [$86]       7704  anda([0x86])                    #68,
              19bc 0200  nop              7705  nop()                           #69,
                                          7706
                                          7707  label('.sys_drawl_70')
.sys_drawl_70:
              19bd 3080  anda $80,x       7708  anda(0x80,X)                    #70, move borrow to bit 0
              19be 0185  ld   [$85]       7709  ld([0x85])                      #71, xy2.hi
              19bf a500  suba [x]         7710  suba([X])                       #72,
              19c0 a187  suba [$87]       7711  suba([0x87])                    #73,
              19c1 c285  st   [$85]       7712  st([0x85])                      #74, xy2.hi = xy2.hi - dxy1.hi
                                          7713
              19c2 019e  ld   [$9e]       7714  ld([0x9E])                      #75,
              19c3 a001  suba $01         7715  suba(1)                         #76,
                                          7716  bne('.sys_drawl_79')            #77,
              19c4 ecc9  bne  .sys_drawl_79
              19c5 c29e  st   [$9e]       7717  st([0x9E])                      #78, drawLine_count--
              19c6 1403  ld   $03,y       7718  ld(hi('REENTER'),Y)             #79,
              19c7 e0cb  jmp  y,$cb       7719  jmp(Y,'REENTER')                #80,
              19c8 00d6  ld   $d6         7720  ld(-84/2)                       #81,
                                          7721
                                          7722  label('.sys_drawl_79')
.sys_drawl_79:
              19c9 0116  ld   [$16]       7723  ld([vPC])                       #79,
              19ca a002  suba $02         7724  suba(2)                         #80,
              19cb c216  st   [$16]       7725  st([vPC])                       #81, restart
              19cc 1403  ld   $03,y       7726  ld(hi('NEXTY'),Y)               #82,
              19cd e000  jmp  y,$00       7727  jmp(Y,'NEXTY')                  #83,
              19ce 00d5  ld   $d5         7728  ld(-86/2)                       #84,
                                          7729
                                          7730  label('.sys_drawl_48')
.sys_drawl_48:
              19cf 0182  ld   [$82]       7731  ld([0x82])                      #48, xy1.lo
              19d0 8188  adda [$88]       7732  adda([0x88])                    #49, dxy2.lo
              19d1 c282  st   [$82]       7733  st([0x82])                      #50, xy1.lo = xy1.lo + dxy2.lo
                                          7734  blt('.sys_drawl_53')            #51, check for carry
              19d2 e8d6  blt  .sys_drawl_53
              19d3 a188  suba [$88]       7735  suba([0x88])                    #52, get original xy1.lo back
                                          7736  bra('.sys_drawl_55')            #53,
              19d4 fcd8  bra  .sys_drawl_55
              19d5 4188  ora  [$88]       7737  ora([0x88])                     #54, carry in bit 7
                                          7738
                                          7739  label('.sys_drawl_53')
.sys_drawl_53:
              19d6 2188  anda [$88]       7740  anda([0x88])                    #53, carry in bit 7
              19d7 0200  nop              7741  nop()                           #54,
                                          7742
                                          7743  label('.sys_drawl_55')
.sys_drawl_55:
              19d8 3080  anda $80,x       7744  anda(0x80,X)                    #55,
              19d9 0500  ld   [x]         7745  ld([X])                         #56, move carry to bit 0
              19da 8183  adda [$83]       7746  adda([0x83])                    #57,
              19db 8189  adda [$89]       7747  adda([0x89])                    #58,
              19dc c283  st   [$83]       7748  st([0x83])                      #59, xy1.hi = xy1.hi + dxy2.hi
                                          7749
              19dd 0184  ld   [$84]       7750  ld([0x84])                      #60, xy2.lo
                                          7751  blt('.sys_drawl_63')            #61, check for borrow
              19de e8e3  blt  .sys_drawl_63
              19df a188  suba [$88]       7752  suba([0x88])                    #62, dxy2.lo
              19e0 c284  st   [$84]       7753  st([0x84])                      #63, xy2.lo = xy2.lo - dxy2.lo
                                          7754  bra('.sys_drawl_66')            #64,
              19e1 fce6  bra  .sys_drawl_66
              19e2 4188  ora  [$88]       7755  ora([0x88])                     #65,
                                          7756
                                          7757  label('.sys_drawl_63')
.sys_drawl_63:
              19e3 c284  st   [$84]       7758  st([0x84])                      #63,
              19e4 2188  anda [$88]       7759  anda([0x88])                    #64,
              19e5 0200  nop              7760  nop()                           #65,
                                          7761
                                          7762  label('.sys_drawl_66')
.sys_drawl_66:
              19e6 3080  anda $80,x       7763  anda(0x80,X)                    #66, move borrow to bit 0
              19e7 0185  ld   [$85]       7764  ld([0x85])                      #67, xy2.hi
              19e8 a500  suba [x]         7765  suba([X])                       #68,
              19e9 a189  suba [$89]       7766  suba([0x89])                    #69,
              19ea c285  st   [$85]       7767  st([0x85])                      #70, xy2.hi = xy2.hi - dxy2.hi
                                          7768
              19eb 019e  ld   [$9e]       7769  ld([0x9E])                      #71,
              19ec a001  suba $01         7770  suba(1)                         #72,
                                          7771  bne('.sys_drawl_75')            #73,
              19ed ecf2  bne  .sys_drawl_75
              19ee c29e  st   [$9e]       7772  st([0x9E])                      #74, drawLine_count--
              19ef 1403  ld   $03,y       7773  ld(hi('REENTER'),Y)             #75,
              19f0 e0cb  jmp  y,$cb       7774  jmp(Y,'REENTER')                #76,
              19f1 00d8  ld   $d8         7775  ld(-80/2)                       #77,
                                          7776
                                          7777  label('.sys_drawl_75')
.sys_drawl_75:
              19f2 0116  ld   [$16]       7778  ld([vPC])                       #75,
              19f3 a002  suba $02         7779  suba(2)                         #76,
              19f4 c216  st   [$16]       7780  st([vPC])                       #77, restart
              19f5 1403  ld   $03,y       7781  ld(hi('NEXTY'),Y)               #78,
              19f6 e000  jmp  y,$00       7782  jmp(Y,'NEXTY')                  #79,
              19f7 00d7  ld   $d7         7783  ld(-82/2)                       #80,
                                          7784
                                          7785
              19f8 0200  nop              7786  fillers(until=0xff)
              19f9 0200  nop
              19fa 0200  nop
              * 7 times
              19ff 0200  nop              7787  align(0x100, size=0x100)
                                          7788
                                          7789  #-----------------------------------------------------------------------
                                          7790  #       More sys implementations, (0x1A00)
                                          7791  #-----------------------------------------------------------------------
                                          7792  #
                                          7793  # SYS_LoaderNextByteIn_32
                                          7794  # sysArgs[0:1] Current address
                                          7795  # sysArgs[2]   Checksum
                                          7796  # sysArgs[3]   Wait value (videoY)
                                          7797  label('SYS_LoaderNextByteIn_32')
SYS_LoaderNextByteIn_32:
              1a00 0109  ld   [$09]       7798  ld([videoY])                    #15
              1a01 6127  xora [$27]       7799  xora([sysArgs+3])               #16
              1a02 ec10  bne  .sysNbi#19  7800  bne('.sysNbi#19')               #17
              1a03 1124  ld   [$24],x     7801  ld([sysArgs+0],X)               #18
              1a04 1525  ld   [$25],y     7802  ld([sysArgs+1],Y)               #19
              1a05 0300  ld   in          7803  ld(IN)                          #20
              1a06 ce00  st   [y,x]       7804  st([Y,X])                       #21
              1a07 c218  st   [$18]       7805  st([vAC])                       #22
              1a08 8126  adda [$26]       7806  adda([sysArgs+2])               #23
              1a09 c226  st   [$26]       7807  st([sysArgs+2])                 #24
              1a0a 0124  ld   [$24]       7808  ld([sysArgs+0])                 #25
              1a0b 8001  adda $01         7809  adda(1)                         #26
              1a0c c224  st   [$24]       7810  st([sysArgs+0])                 #27
              1a0d 1403  ld   $03,y       7811  ld(hi('NEXTY'),Y)               #28
              1a0e e000  jmp  y,$00       7812  jmp(Y,'NEXTY')                  #29
              1a0f 00f0  ld   $f0         7813  ld(-32/2)                       #30
                                          7814
                                          7815  # Restart the instruction in the next timeslice
                                          7816  label('.sysNbi#19')
.sysNbi#19:   1a10 0116  ld   [$16]       7817  ld([vPC])                       #19
              1a11 a002  suba $02         7818  suba(2)                         #20
              1a12 c216  st   [$16]       7819  st([vPC])                       #21
              1a13 1403  ld   $03,y       7820  ld(hi('NEXTY'),Y)               #22
              1a14 e000  jmp  y,$00       7821  jmp(Y,'NEXTY')                  #23
              1a15 00f3  ld   $f3         7822  ld(-26/2)                       #24
                                          7823
                                          7824
                                          7825  # SYS_LoaderProcessInput_64
                                          7826  # sysArgs[0:1] Source address
                                          7827  # sysArgs[2]   Checksum
                                          7828  # sysArgs[4]   Copy count
                                          7829  # sysArgs[5:6] Destination address
                                          7830  label('SYS_LoaderProcessInput_64')
SYS_LoaderProcessInput_64:
              1a16 1525  ld   [$25],y     7831  ld([sysArgs+1],Y)               #15
              1a17 0126  ld   [$26]       7832  ld([sysArgs+2])                 #16
              1a18 ec3d  bne  .sysPi#19   7833  bne('.sysPi#19')                #17
              1a19 0124  ld   [$24]       7834  ld([sysArgs+0])                 #18
              1a1a b041  suba $41,x       7835  suba(65,X)                      #19 Point at first byte of buffer
              1a1b 0d00  ld   [y,x]       7836  ld([Y,X])                       #20 Command byte
                                          7837  st([Y,Xpp]);                    C('Just X++')#21
              1a1c de00  st   [y,x++]     ;Just X++
              1a1d 604c  xora $4c         7838  xora(ord('L'))                  #22 This loader lumps everything under 'L'
              1a1e ec41  bne  .sysPi#25   7839  bne('.sysPi#25')                #23
                                          7840  ld([Y,X]);                      C('Valid command')#24 Length byte
              1a1f 0d00  ld   [y,x]       ;Valid command
                                          7841  st([Y,Xpp]);                    C('Just X++')#25
              1a20 de00  st   [y,x++]     ;Just X++
              1a21 203f  anda $3f         7842  anda(63)                        #26 Bit 6:7 are garbage
              1a22 c228  st   [$28]       7843  st([sysArgs+4])                 #27 Copy count 0..60
              1a23 8d00  adda [y,x]       7844  adda([Y,X])                     #28 One location past (+1) the last byte of fragment
              1a24 8001  adda $01         7845  adda(1)                         #29 254+1 = $ff becomes 0, 255+1 = $00 becomes 1
              1a25 20fe  anda $fe         7846  anda(0xfe)                      #30 Will be zero only when writing in top 2 bytes of page
              1a26 c21d  st   [$1d]       7847  st([vTmp])                      #31 Remember as first condition
              1a27 0d00  ld   [y,x]       7848  ld([Y,X])                       #32 Low copy address
                                          7849  st([Y,Xpp]);                    C('Just X++')#33
              1a28 de00  st   [y,x++]     ;Just X++
              1a29 c229  st   [$29]       7850  st([sysArgs+5])                 #34
              1a2a 0d00  ld   [y,x]       7851  ld([Y,X])                       #35 High copy address
                                          7852  st([Y,Xpp]);                    C('Just X++')#36
              1a2b de00  st   [y,x++]     ;Just X++
              1a2c c22a  st   [$2a]       7853  st([sysArgs+6])                 #37
              1a2d a001  suba $01         7854  suba(1)                         #38 Check if writing into sound channel page (1..4)
              1a2e 20fc  anda $fc         7855  anda(0xfc)                      #39
              1a2f 411d  ora  [$1d]       7856  ora([vTmp])                     #40 Combine second condition with first
              1a30 c21d  st   [$1d]       7857  st([vTmp])                      #41 Zero when overwriting one of oscL[1..4] or oscH[1..4]
              1a31 0128  ld   [$28]       7858  ld([sysArgs+4])                 #42 Check copy count
              1a32 ec46  bne  .sysPi#45   7859  bne('.sysPi#45')                #43
                                          7860  # Execute code (don't care about checksum anymore)
                                          7861  ld([sysArgs+5]);                C('Execute')#44 Low run address
              1a33 0129  ld   [$29]       ;Execute
              1a34 c21a  st   [$1a]       7862  st([vLR])                       #45 https://forum.gigatron.io/viewtopic.php?p=29#p29
              1a35 a002  suba $02         7863  suba(2)                         #46
              1a36 c216  st   [$16]       7864  st([vPC])                       #47
              1a37 012a  ld   [$2a]       7865  ld([sysArgs+6])                 #48 High run address
              1a38 c217  st   [$17]       7866  st([vPC+1])                     #49
              1a39 c21b  st   [$1b]       7867  st([vLR+1])                     #50
              1a3a 1403  ld   $03,y       7868  ld(hi('REENTER'),Y)             #51
              1a3b e0cb  jmp  y,$cb       7869  jmp(Y,'REENTER')                #52
              1a3c 00e4  ld   $e4         7870  ld(-56/2)                       #53
                                          7871
                                          7872  # Invalid checksum
                                          7873  label('.sysPi#19')
.sysPi#19:    1a3d 0001  ld   $01         7874  wait(25-19);                    C('Invalid checksum')#19 Reset checksum
              1a3e ec3e  bne  $1a3e
              1a3f a001  suba $01
              1a40 0200  nop              ;Invalid checksum
                                          7875
                                          7876  # Unknown command
                                          7877  label('.sysPi#25')
                                          7878  ld(ord('g'));                   C('Unknown command')#25 Reset checksum
.sysPi#25:    1a41 0067  ld   $67         ;Unknown command
              1a42 c226  st   [$26]       7879  st([sysArgs+2])                 #26
              1a43 1403  ld   $03,y       7880  ld(hi('REENTER'),Y)             #27
              1a44 e0cb  jmp  y,$cb       7881  jmp(Y,'REENTER')                #28
              1a45 00f0  ld   $f0         7882  ld(-32/2)                       #29
                                          7883
                                          7884  # Loading data
                                          7885  label('.sysPi#45')
                                          7886  ld([vTmp]);                     C('Loading data')#45
.sysPi#45:    1a46 011d  ld   [$1d]       ;Loading data
              1a47 ec4a  bne  $1a4a       7887  bne(pc()+3)                     #46
              1a48 fc4b  bra  $1a4b       7888  bra(pc()+3)                     #47
                                          7889  ld(0xfc);                       C('Unsafe')#48  Clear low channelMask bits so it becomes safe
              1a49 00fc  ld   $fc         ;Unsafe
                                          7890  ld(0xff);                       C('Safe')#48(!) No change to channelMask because already safe
              1a4a 00ff  ld   $ff         ;Safe
              1a4b 2121  anda [$21]       7891  anda([channelMask])             #49
              1a4c c221  st   [$21]       7892  st([channelMask])               #50
              1a4d 0124  ld   [$24]       7893  ld([sysArgs+0])                 #51 Continue checksum
              1a4e b001  suba $01,x       7894  suba(1,X)                       #52 Point at last byte
              1a4f 0d00  ld   [y,x]       7895  ld([Y,X])                       #53
              1a50 c226  st   [$26]       7896  st([sysArgs+2])                 #54
              1a51 1403  ld   $03,y       7897  ld(hi('REENTER'),Y)             #55
              1a52 e0cb  jmp  y,$cb       7898  jmp(Y,'REENTER')                #56
              1a53 00e2  ld   $e2         7899  ld(-60/2)                       #57
                                          7900
                                          7901
                                          7902  # SYS_LoaderPayloadCopy_34
                                          7903  # sysArgs[0:1] Source address
                                          7904  # sysArgs[4]   Copy count
                                          7905  # sysArgs[5:6] Destination address
                                          7906  label('SYS_LoaderPayloadCopy_34')
SYS_LoaderPayloadCopy_34:
              1a54 0128  ld   [$28]       7907  ld([sysArgs+4])                 #15 Copy count
              1a55 f062  beq  .sysCc#18   7908  beq('.sysCc#18')                #16
              1a56 a001  suba $01         7909  suba(1)                         #17
              1a57 c228  st   [$28]       7910  st([sysArgs+4])                 #18
              1a58 1124  ld   [$24],x     7911  ld([sysArgs+0],X)               #19 Current pointer
              1a59 1525  ld   [$25],y     7912  ld([sysArgs+1],Y)               #20
              1a5a 0d00  ld   [y,x]       7913  ld([Y,X])                       #21
              1a5b 1129  ld   [$29],x     7914  ld([sysArgs+5],X)               #22 Target pointer
              1a5c 152a  ld   [$2a],y     7915  ld([sysArgs+6],Y)               #23
              1a5d ce00  st   [y,x]       7916  st([Y,X])                       #24
              1a5e 0129  ld   [$29]       7917  ld([sysArgs+5])                 #25 Increment target
              1a5f 8001  adda $01         7918  adda(1)                         #26
              1a60 c229  st   [$29]       7919  st([sysArgs+5])                 #27
              1a61 fc66  bra  .sysCc#30   7920  bra('.sysCc#30')                #28
                                          7921
                                          7922  label('.sysCc#18')
.sysCc#18:    1a62 1403  ld   $03,y       7923  ld(hi('REENTER'),Y)             #18,29
              1a63 0004  ld   $04         7924  wait(30-19)                     #19
              1a64 ec64  bne  $1a64
              1a65 a001  suba $01
                                          7925  label('.sysCc#30')
.sysCc#30:    1a66 e0cb  jmp  y,$cb       7926  jmp(Y,'REENTER')                #30
              1a67 00ef  ld   $ef         7927  ld(-34/2)                       #31
                                          7928
                                          7929
                                          7930  # SYS_Unpack_56
                                          7931  # Unpack 3 bytes into 4 pixels
                                          7932  #
                                          7933  # Variables:
                                          7934  #       sysArgs[0:2]    Packed bytes (in)
                                          7935  #       sysArgs[0:3]    Pixels (out)
                                          7936  label('SYS_Unpack_56')
SYS_Unpack_56:
              1a68 1407  ld   $07,y       7937  ld(soundTable>>8,Y)             #15
              1a69 0126  ld   [$26]       7938  ld([sysArgs+2])                 #16 a[2]>>2
              1a6a 5003  ora  $03,x       7939  ora(0x03,X)                     #17
              1a6b 0d00  ld   [y,x]       7940  ld([Y,X])                       #18
              1a6c c227  st   [$27]       7941  st([sysArgs+3])                 #19 -> Pixel 3
                                          7942
              1a6d 0126  ld   [$26]       7943  ld([sysArgs+2])                 #20 (a[2]&3)<<4
              1a6e 2003  anda $03         7944  anda(0x03)                      #21
              1a6f 8200  adda ac          7945  adda(AC)                        #22
              1a70 8200  adda ac          7946  adda(AC)                        #23
              1a71 8200  adda ac          7947  adda(AC)                        #24
              1a72 8200  adda ac          7948  adda(AC)                        #25
              1a73 c226  st   [$26]       7949  st([sysArgs+2])                 #26
              1a74 0125  ld   [$25]       7950  ld([sysArgs+1])                 #27 | a[1]>>4
              1a75 5003  ora  $03,x       7951  ora(0x03,X)                     #28
              1a76 0d00  ld   [y,x]       7952  ld([Y,X])                       #29
              1a77 5003  ora  $03,x       7953  ora(0x03,X)                     #30
              1a78 0d00  ld   [y,x]       7954  ld([Y,X])                       #31
              1a79 4126  ora  [$26]       7955  ora([sysArgs+2])                #32
              1a7a c226  st   [$26]       7956  st([sysArgs+2])                 #33 -> Pixel 2
                                          7957
              1a7b 0125  ld   [$25]       7958  ld([sysArgs+1])                 #34 (a[1]&15)<<2
              1a7c 200f  anda $0f         7959  anda(0x0f)                      #35
              1a7d 8200  adda ac          7960  adda(AC)                        #36
              1a7e 8200  adda ac          7961  adda(AC)                        #37
              1a7f c225  st   [$25]       7962  st([sysArgs+1])                 #38
                                          7963
              1a80 0124  ld   [$24]       7964  ld([sysArgs+0])                 #39 | a[0]>>6
              1a81 5003  ora  $03,x       7965  ora(0x03,X)                     #40
              1a82 0d00  ld   [y,x]       7966  ld([Y,X])                       #41
              1a83 5003  ora  $03,x       7967  ora(0x03,X)                     #42
              1a84 0d00  ld   [y,x]       7968  ld([Y,X])                       #43
              1a85 5003  ora  $03,x       7969  ora(0x03,X)                     #44
              1a86 0d00  ld   [y,x]       7970  ld([Y,X])                       #45
              1a87 4125  ora  [$25]       7971  ora([sysArgs+1])                #46
              1a88 c225  st   [$25]       7972  st([sysArgs+1])                 #47 -> Pixel 1
                                          7973
              1a89 0124  ld   [$24]       7974  ld([sysArgs+0])                 #48 a[1]&63
              1a8a 203f  anda $3f         7975  anda(0x3f)                      #49
              1a8b c224  st   [$24]       7976  st([sysArgs+0])                 #50 -> Pixel 0
                                          7977
              1a8c 1403  ld   $03,y       7978  ld(hi('REENTER'),Y)             #51
              1a8d e0cb  jmp  y,$cb       7979  jmp(Y,'REENTER')                #52
              1a8e 00e4  ld   $e4         7980  ld(-56/2)                       #53
                                          7981
                                          7982
                                          7983  # sys_SortUint8Array, sysArgs0,1=array, sysArg2=i, sysArg3=j, sysArg4=key, sysArg5=length
                                          7984  label('sys_SortUint8Array')
sys_SortUint8Array:
              1a8f 0127  ld   [$27]       7985  ld([sysArgs+3])                 #18,
                                          7986  ble('.sys_sortuint8array_21')   #19, j == 0
              1a90 f8a8  ble  .sys_sortuint8array_21
              1a91 0124  ld   [$24]       7987  ld([sysArgs+0])                 #20,
              1a92 8127  adda [$27]       7988  adda([sysArgs+3])               #21,
              1a93 b001  suba $01,x       7989  suba(1,X)                       #22,
              1a94 0d00  ld   [y,x]       7990  ld([Y,X])                       #23,
                                          7991  bmi('.sys_sortuint8array_26')   #24, convert signed < to unsigned <
              1a95 e899  blt  .sys_sortuint8array_26
              1a96 a128  suba [$28]       7992  suba([sysArgs+4])               #25,
                                          7993  bra('.sys_sortuint8array_28')   #26,
              1a97 fc9b  bra  .sys_sortuint8array_28
              1a98 4128  ora  [$28]       7994  ora([sysArgs+4])                #27, borrow
                                          7995  label('.sys_sortuint8array_26')
.sys_sortuint8array_26:
              1a99 2128  anda [$28]       7996  anda([sysArgs+4])               #26, borrow
              1a9a 0200  nop              7997  nop()                           #27,
                                          7998  label('.sys_sortuint8array_28')
.sys_sortuint8array_28:                   7999  bmi('.sys_sortuint8array_30_0') #28, a[j-1] < key
              1a9b e8b4  blt  .sys_sortuint8array_30_0
              1a9c 0d00  ld   [y,x]       8000  ld([Y,X])                       #29,
              1a9d de00  st   [y,x++]     8001  st([Y,Xpp])                     #30,
              1a9e ce00  st   [y,x]       8002  st([Y,X])                       #31, a[j] = a[j-1]
              1a9f 0127  ld   [$27]       8003  ld([sysArgs+3])                 #32,
              1aa0 a001  suba $01         8004  suba(1)                         #33,
              1aa1 c227  st   [$27]       8005  st([sysArgs+3])                 #34, j--
              1aa2 0116  ld   [$16]       8006  ld([vPC])                       #35,
              1aa3 a002  suba $02         8007  suba(2)                         #36,
              1aa4 c216  st   [$16]       8008  st([vPC])                       #37, restart
              1aa5 1403  ld   $03,y       8009  ld(hi('NEXTY'),Y)               #38,
              1aa6 e000  jmp  y,$00       8010  jmp(Y,'NEXTY')                  #39,
              1aa7 00eb  ld   $eb         8011  ld(-42/2)                       #40,
                                          8012  label('.sys_sortuint8array_21')
.sys_sortuint8array_21:
              1aa8 9127  adda [$27],x     8013  adda([sysArgs+3],X)             #21,
              1aa9 0128  ld   [$28]       8014  ld([sysArgs+4])                 #22,
              1aaa ce00  st   [y,x]       8015  st([Y,X])                       #23, a[j] = key
              1aab 0126  ld   [$26]       8016  ld([sysArgs+2])                 #24,
              1aac 8001  adda $01         8017  adda(1)                         #25,
              1aad c226  st   [$26]       8018  st([sysArgs+2])                 #26, i++
              1aae a129  suba [$29]       8019  suba([sysArgs+5])               #27,
                                          8020  blt('.sys_sortuint8array_30_1') #28, i < length
              1aaf e8c0  blt  .sys_sortuint8array_30_1
              1ab0 0124  ld   [$24]       8021  ld([sysArgs+0])                 #29,
              1ab1 1403  ld   $03,y       8022  ld(hi('NEXTY'),Y)               #30,
              1ab2 e000  jmp  y,$00       8023  jmp(Y,'NEXTY')                  #31,
              1ab3 00ef  ld   $ef         8024  ld(-34/2)                       #32,
                                          8025  label('.sys_sortuint8array_30_0')
.sys_sortuint8array_30_0:
              1ab4 de00  st   [y,x++]     8026  st([Y,Xpp])                     #30,
              1ab5 0128  ld   [$28]       8027  ld([sysArgs+4])                 #31,
              1ab6 ce00  st   [y,x]       8028  st([Y,X])                       #32, a[j] = key
              1ab7 0126  ld   [$26]       8029  ld([sysArgs+2])                 #33,
              1ab8 8001  adda $01         8030  adda(1)                         #34,
              1ab9 c226  st   [$26]       8031  st([sysArgs+2])                 #35, i++
              1aba a129  suba [$29]       8032  suba([sysArgs+5])               #36,
                                          8033  blt('.sys_sortuint8array_39')   #37, i < length
              1abb e8cb  blt  .sys_sortuint8array_39
              1abc 0124  ld   [$24]       8034  ld([sysArgs+0])                 #38,
              1abd 1403  ld   $03,y       8035  ld(hi('REENTER'),Y)             #39,
              1abe e0cb  jmp  y,$cb       8036  jmp(Y,'REENTER')                #40,
              1abf 00ea  ld   $ea         8037  ld(-44/2)                       #41,
                                          8038  label('.sys_sortuint8array_30_1')
.sys_sortuint8array_30_1:
              1ac0 9126  adda [$26],x     8039  adda([sysArgs+2],X)             #30,
              1ac1 0d00  ld   [y,x]       8040  ld([Y,X])                       #31,
              1ac2 c228  st   [$28]       8041  st([sysArgs+4])                 #32, key = a[i]
              1ac3 0126  ld   [$26]       8042  ld([sysArgs+2])                 #33,
              1ac4 c227  st   [$27]       8043  st([sysArgs+3])                 #34, j = i
              1ac5 0116  ld   [$16]       8044  ld([vPC])                       #35,
              1ac6 a002  suba $02         8045  suba(2)                         #36,
              1ac7 c216  st   [$16]       8046  st([vPC])                       #37, restart
              1ac8 1403  ld   $03,y       8047  ld(hi('NEXTY'),Y)               #38,
              1ac9 e000  jmp  y,$00       8048  jmp(Y,'NEXTY')                  #39,
              1aca 00eb  ld   $eb         8049  ld(-42/2)                       #40,
                                          8050  label('.sys_sortuint8array_39')
.sys_sortuint8array_39:
              1acb 9126  adda [$26],x     8051  adda([sysArgs+2],X)             #39,
              1acc 0d00  ld   [y,x]       8052  ld([Y,X])                       #40,
              1acd c228  st   [$28]       8053  st([sysArgs+4])                 #41, key = a[i]
              1ace 0126  ld   [$26]       8054  ld([sysArgs+2])                 #42,
              1acf c227  st   [$27]       8055  st([sysArgs+3])                 #43, j = i
              1ad0 0116  ld   [$16]       8056  ld([vPC])                       #44,
              1ad1 a002  suba $02         8057  suba(2)                         #45,
              1ad2 c216  st   [$16]       8058  st([vPC])                       #46, restart
              1ad3 1403  ld   $03,y       8059  ld(hi('REENTER'),Y)             #47,
              1ad4 e0cb  jmp  y,$cb       8060  jmp(Y,'REENTER')                #48,
              1ad5 00e6  ld   $e6         8061  ld(-52/2)                       #49,
                                          8062
                                          8063
                                          8064  # sys_SortViaIndices, sysArgs0,1=indices, sysArgs2,3=src, sysArg4,5=dst, sysArg6=dst step, vAC=count
                                          8065  label('sys_SortViaIndices')
sys_SortViaIndices:
              1ad6 1124  ld   [$24],x     8066  ld([sysArgs+0],X)               #18,
              1ad7 0d00  ld   [y,x]       8067  ld([Y,X])                       #19, [index]
              1ad8 1527  ld   [$27],y     8068  ld([sysArgs+3],Y)               #20,
              1ad9 9126  adda [$26],x     8069  adda([sysArgs+2],X)             #21, src
              1ada 0d00  ld   [y,x]       8070  ld([Y,X])                       #22, peek(src + index)
              1adb 1529  ld   [$29],y     8071  ld([sysArgs+5],Y)               #23,
              1adc 1128  ld   [$28],x     8072  ld([sysArgs+4],X)               #24, dst
              1add ce00  st   [y,x]       8073  st([Y,X])                       #25,
              1ade 0124  ld   [$24]       8074  ld([sysArgs+0])                 #26,
              1adf 8001  adda $01         8075  adda(1)                         #27,
              1ae0 c224  st   [$24]       8076  st([sysArgs+0])                 #28, indices++
              1ae1 0128  ld   [$28]       8077  ld([sysArgs+4])                 #29,
              1ae2 812a  adda [$2a]       8078  adda([sysArgs+6])               #30,
              1ae3 c228  st   [$28]       8079  st([sysArgs+4])                 #31, dst += step
              1ae4 0118  ld   [$18]       8080  ld([vAC])                       #32,
              1ae5 a001  suba $01         8081  suba(1)                         #33,
                                          8082  beq('.sys_sortviaindices_36')   #34,
              1ae6 f0ee  beq  .sys_sortviaindices_36
              1ae7 c218  st   [$18]       8083  st([vAC])                       #35, count--
              1ae8 0116  ld   [$16]       8084  ld([vPC])                       #36,
              1ae9 a002  suba $02         8085  suba(2)                         #37,
              1aea c216  st   [$16]       8086  st([vPC])                       #38, restart
              1aeb 1403  ld   $03,y       8087  ld(hi('REENTER'),Y)             #39,
              1aec e0cb  jmp  y,$cb       8088  jmp(Y,'REENTER')                #40,
              1aed 00ea  ld   $ea         8089  ld(-44/2)                       #41,
                                          8090  label('.sys_sortviaindices_36')
.sys_sortviaindices_36:
              1aee 1403  ld   $03,y       8091  ld(hi('NEXTY'),Y)               #36,
              1aef e000  jmp  y,$00       8092  jmp(Y,'NEXTY')                  #37,
              1af0 00ec  ld   $ec         8093  ld(-40/2)                       #38,
                                          8094
                                          8095
              1af1 0200  nop              8096  fillers(until=0xff)
              1af2 0200  nop
              1af3 0200  nop
              * 14 times
              1aff 0200  nop              8097  align(0x100, size=0x100)
                                          8098
                                          8099  #-----------------------------------------------------------------------
                                          8100  #       More sys implementations, (0x1B00)
                                          8101  #-----------------------------------------------------------------------
                                          8102  #
                                          8103  # sys_MemCopyByte, sysArgs0,1=src, sysArg2,3=dst, sysArg4=src step, sysArg5=dst step, vAC=count
                                          8104  label('sys_MemCopyByte')
sys_MemCopyByte:
              1b00 1124  ld   [$24],x     8105  ld([sysArgs+0],X)               #18,
              1b01 0d00  ld   [y,x]       8106  ld([Y,X])                       #19, [src]
              1b02 1527  ld   [$27],y     8107  ld([sysArgs+3],Y)               #20,
              1b03 1126  ld   [$26],x     8108  ld([sysArgs+2],X)               #21,
              1b04 ce00  st   [y,x]       8109  st([Y,X])                       #22, [dst] = [src]
              1b05 0124  ld   [$24]       8110  ld([sysArgs+0])                 #23,
              1b06 8128  adda [$28]       8111  adda([sysArgs+4])               #24,
              1b07 c224  st   [$24]       8112  st([sysArgs+0])                 #25, src++
              1b08 0126  ld   [$26]       8113  ld([sysArgs+2])                 #26,
              1b09 8129  adda [$29]       8114  adda([sysArgs+5])               #27,
              1b0a c226  st   [$26]       8115  st([sysArgs+2])                 #28, dst++
              1b0b 0118  ld   [$18]       8116  ld([vAC])                       #29,
              1b0c a001  suba $01         8117  suba(1)                         #30,
                                          8118  beq('.sys_memcopybyte_33')      #31,
              1b0d f015  beq  .sys_memcopybyte_33
              1b0e c218  st   [$18]       8119  st([vAC])                       #32, count--
              1b0f 0116  ld   [$16]       8120  ld([vPC])                       #33,
              1b10 a002  suba $02         8121  suba(2)                         #34,
              1b11 c216  st   [$16]       8122  st([vPC])                       #35, restart
              1b12 1403  ld   $03,y       8123  ld(hi('NEXTY'),Y)               #36,
              1b13 e000  jmp  y,$00       8124  jmp(Y,'NEXTY')                  #37,
              1b14 00ec  ld   $ec         8125  ld(-40/2)                       #38,
                                          8126  label('.sys_memcopybyte_33')
.sys_memcopybyte_33:
              1b15 1403  ld   $03,y       8127  ld(hi('REENTER'),Y)             #33,
              1b16 e0cb  jmp  y,$cb       8128  jmp(Y,'REENTER')                #34,
              1b17 00ed  ld   $ed         8129  ld(-38/2)                       #35,
                                          8130
                                          8131
                                          8132  # sys_MemCopyWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp
                                          8133  label('sys_MemCopyWord')
sys_MemCopyWord:
              1b18 1124  ld   [$24],x     8134  ld([sysArgs+0],X)               #18,
              1b19 0d00  ld   [y,x]       8135  ld([Y,X])                       #19, [src + 0]
              1b1a de00  st   [y,x++]     8136  st([Y,Xpp])                     #20
              1b1b c228  st   [$28]       8137  st([sysArgs+4])                 #21,
              1b1c 0d00  ld   [y,x]       8138  ld([Y,X])                       #22, [src + 1]
              1b1d c229  st   [$29]       8139  st([sysArgs+5])                 #23,
              1b1e 1527  ld   [$27],y     8140  ld([sysArgs+3],Y)               #24,
              1b1f 1126  ld   [$26],x     8141  ld([sysArgs+2],X)               #25,
              1b20 0128  ld   [$28]       8142  ld([sysArgs+4])                 #26,
              1b21 de00  st   [y,x++]     8143  st([Y,Xpp])                     #27, [dst + 0] = [src + 0]
              1b22 0129  ld   [$29]       8144  ld([sysArgs+5])                 #28,
              1b23 ce00  st   [y,x]       8145  st([Y,X])                       #29, [dst + 1] = [src + 1]
              1b24 0124  ld   [$24]       8146  ld([sysArgs+0])                 #30,
              1b25 8002  adda $02         8147  adda(2)                         #31,
              1b26 c224  st   [$24]       8148  st([sysArgs+0])                 #32, src += 2
              1b27 0126  ld   [$26]       8149  ld([sysArgs+2])                 #33,
              1b28 8002  adda $02         8150  adda(2)                         #34,
              1b29 c226  st   [$26]       8151  st([sysArgs+2])                 #35, dst += 2
              1b2a 0118  ld   [$18]       8152  ld([vAC])                       #36,
              1b2b a001  suba $01         8153  suba(1)                         #37,
                                          8154  beq('.sys_memcopyword_40')      #38,
              1b2c f034  beq  .sys_memcopyword_40
              1b2d c218  st   [$18]       8155  st([vAC])                       #39, count--
              1b2e 0116  ld   [$16]       8156  ld([vPC])                       #40,
              1b2f a002  suba $02         8157  suba(2)                         #41,
              1b30 c216  st   [$16]       8158  st([vPC])                       #42, restart
              1b31 1403  ld   $03,y       8159  ld(hi('REENTER'),Y)             #43,
              1b32 e0cb  jmp  y,$cb       8160  jmp(Y,'REENTER')                #44,
              1b33 00e8  ld   $e8         8161  ld(-48/2)                       #45,
                                          8162  label('.sys_memcopyword_40')
.sys_memcopyword_40:
              1b34 1403  ld   $03,y       8163  ld(hi('NEXTY'),Y)               #40,
              1b35 e000  jmp  y,$00       8164  jmp(Y,'NEXTY')                  #41,
              1b36 00ea  ld   $ea         8165  ld(-44/2)                       #42,
                                          8166
                                          8167
                                          8168  # sys_MemCopyDWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp, sysArg6,7=tmp
                                          8169  label('sys_MemCopyDWord')
sys_MemCopyDWord:
              1b37 1124  ld   [$24],x     8170  ld([sysArgs+0],X)               #18,
              1b38 0d00  ld   [y,x]       8171  ld([Y,X])                       #19, [src + 0]
              1b39 de00  st   [y,x++]     8172  st([Y,Xpp])                     #20
              1b3a c228  st   [$28]       8173  st([sysArgs+4])                 #21,
              1b3b 0d00  ld   [y,x]       8174  ld([Y,X])                       #22, [src + 1]
              1b3c de00  st   [y,x++]     8175  st([Y,Xpp])                     #23
              1b3d c229  st   [$29]       8176  st([sysArgs+5])                 #24,
              1b3e 0d00  ld   [y,x]       8177  ld([Y,X])                       #25, [src + 2]
              1b3f de00  st   [y,x++]     8178  st([Y,Xpp])                     #26
              1b40 c22a  st   [$2a]       8179  st([sysArgs+6])                 #27,
              1b41 0d00  ld   [y,x]       8180  ld([Y,X])                       #28, [src + 3]
              1b42 c22b  st   [$2b]       8181  st([sysArgs+7])                 #29,
              1b43 1527  ld   [$27],y     8182  ld([sysArgs+3],Y)               #30,
              1b44 1126  ld   [$26],x     8183  ld([sysArgs+2],X)               #31,
              1b45 0128  ld   [$28]       8184  ld([sysArgs+4])                 #32,
              1b46 de00  st   [y,x++]     8185  st([Y,Xpp])                     #33, [dst + 0] = [src + 0]
              1b47 0129  ld   [$29]       8186  ld([sysArgs+5])                 #34,
              1b48 de00  st   [y,x++]     8187  st([Y,Xpp])                     #35, [dst + 1] = [src + 1]
              1b49 012a  ld   [$2a]       8188  ld([sysArgs+6])                 #36,
              1b4a de00  st   [y,x++]     8189  st([Y,Xpp])                     #37, [dst + 2] = [src + 2]
              1b4b 012b  ld   [$2b]       8190  ld([sysArgs+7])                 #38,
              1b4c ce00  st   [y,x]       8191  st([Y,X])                       #39, [dst + 3] = [src + 3]
              1b4d 0124  ld   [$24]       8192  ld([sysArgs+0])                 #40,
              1b4e 8004  adda $04         8193  adda(4)                         #41,
              1b4f c224  st   [$24]       8194  st([sysArgs+0])                 #42, src += 4
              1b50 0126  ld   [$26]       8195  ld([sysArgs+2])                 #43,
              1b51 8004  adda $04         8196  adda(4)                         #44,
              1b52 c226  st   [$26]       8197  st([sysArgs+2])                 #45, dst += 4
              1b53 0118  ld   [$18]       8198  ld([vAC])                       #46,
              1b54 a001  suba $01         8199  suba(1)                         #47,
                                          8200  beq('.sys_memcopydword_50')     #48,
              1b55 f05d  beq  .sys_memcopydword_50
              1b56 c218  st   [$18]       8201  st([vAC])                       #49, count--
              1b57 0116  ld   [$16]       8202  ld([vPC])                       #50,
              1b58 a002  suba $02         8203  suba(2)                         #51,
              1b59 c216  st   [$16]       8204  st([vPC])                       #52, restart
              1b5a 1403  ld   $03,y       8205  ld(hi('REENTER'),Y)             #53,
              1b5b e0cb  jmp  y,$cb       8206  jmp(Y,'REENTER')                #54,
              1b5c 00e3  ld   $e3         8207  ld(-58/2)                       #55,
                                          8208  label('.sys_memcopydword_50')
.sys_memcopydword_50:
              1b5d 1403  ld   $03,y       8209  ld(hi('NEXTY'),Y)               #50,
              1b5e e000  jmp  y,$00       8210  jmp(Y,'NEXTY')                  #51,
              1b5f 00e5  ld   $e5         8211  ld(-54/2)                       #52,
                                          8212
                                          8213
              1b60 0200  nop              8214  fillers(until=0xff)
              1b61 0200  nop
              1b62 0200  nop
              * 159 times
              1bff 0200  nop              8215  align(0x100, size=0x100)
                                          8216
                                          8217  #-----------------------------------------------------------------------
                                          8218  #       More sys implementations, (0x1C00)
                                          8219  #-----------------------------------------------------------------------
                                          8220  #
                                          8221  # sys_SortSprites, sysArgs0,1=_y_array, sysArg2=i, sysArg3=j, sysArg4=key0, sysArg5=length
                                          8222  #                  sysArgs6,7=_is_array, vAC.lo=key1
                                          8223  label('sys_SortSprites')
sys_SortSprites:
              1c00 0127  ld   [$27]       8224  ld([sysArgs+3])                 #18,
                                          8225  ble('.sys_sortsprites_21')      #19, j <= 0
              1c01 f820  ble  .sys_sortsprites_21
              1c02 0124  ld   [$24]       8226  ld([sysArgs+0])                 #20,
              1c03 8127  adda [$27]       8227  adda([sysArgs+3])               #21,
              1c04 b001  suba $01,x       8228  suba(1,X)                       #22,
              1c05 0d00  ld   [y,x]       8229  ld([Y,X])                       #23,
                                          8230  bmi('.sys_sortsprites_26')      #24, convert signed < to unsigned <
              1c06 e80a  blt  .sys_sortsprites_26
              1c07 a128  suba [$28]       8231  suba([sysArgs+4])               #25,
                                          8232  bra('.sys_sortsprites_28')      #26,
              1c08 fc0c  bra  .sys_sortsprites_28
              1c09 4128  ora  [$28]       8233  ora([sysArgs+4])                #27, borrow
                                          8234  label('.sys_sortsprites_26')
.sys_sortsprites_26:
              1c0a 2128  anda [$28]       8235  anda([sysArgs+4])               #26, borrow
              1c0b 0200  nop              8236  nop()                           #27,
                                          8237  label('.sys_sortsprites_28')
.sys_sortsprites_28:                      8238  bmi('.sys_sortsprites_30')      #28, y[j-1] < key
              1c0c e831  blt  .sys_sortsprites_30
              1c0d 0d00  ld   [y,x]       8239  ld([Y,X])                       #29,
              1c0e de00  st   [y,x++]     8240  st([Y,Xpp])                     #30,
              1c0f ce00  st   [y,x]       8241  st([Y,X])                       #31, y[j] = y[j-1]
              1c10 152b  ld   [$2b],y     8242  ld([sysArgs+7],Y)               #32,
              1c11 012a  ld   [$2a]       8243  ld([sysArgs+6])                 #33,
              1c12 8127  adda [$27]       8244  adda([sysArgs+3])               #34,
              1c13 b001  suba $01,x       8245  suba(1,X)                       #35,
              1c14 0d00  ld   [y,x]       8246  ld([Y,X])                       #36,
              1c15 de00  st   [y,x++]     8247  st([Y,Xpp])                     #37,
              1c16 ce00  st   [y,x]       8248  st([Y,X])                       #38, is[j] = is[j-1]
              1c17 0127  ld   [$27]       8249  ld([sysArgs+3])                 #39,
              1c18 a001  suba $01         8250  suba(1)                         #40,
              1c19 c227  st   [$27]       8251  st([sysArgs+3])                 #41, j--
              1c1a 0116  ld   [$16]       8252  ld([vPC])                       #42,
              1c1b a002  suba $02         8253  suba(2)                         #43,
              1c1c c216  st   [$16]       8254  st([vPC])                       #44, restart
              1c1d 1403  ld   $03,y       8255  ld(hi('REENTER'),Y)             #45,
              1c1e e0cb  jmp  y,$cb       8256  jmp(Y,'REENTER')                #46,
              1c1f 00e7  ld   $e7         8257  ld(-50/2)                       #47,
                                          8258  label('.sys_sortsprites_21')
.sys_sortsprites_21:
              1c20 9127  adda [$27],x     8259  adda([sysArgs+3],X)             #21,
              1c21 0128  ld   [$28]       8260  ld([sysArgs+4])                 #22,
              1c22 ce00  st   [y,x]       8261  st([Y,X])                       #23, y[j] = key0
              1c23 152b  ld   [$2b],y     8262  ld([sysArgs+7],Y)               #24,
              1c24 012a  ld   [$2a]       8263  ld([sysArgs+6])                 #25,
              1c25 9127  adda [$27],x     8264  adda([sysArgs+3],X)             #26,
              1c26 0182  ld   [$82]       8265  ld([0x82])                      #27,
              1c27 ce00  st   [y,x]       8266  st([Y,X])                       #28, is[j] = key1
              1c28 0126  ld   [$26]       8267  ld([sysArgs+2])                 #29,
              1c29 8001  adda $01         8268  adda(1)                         #30,
              1c2a c226  st   [$26]       8269  st([sysArgs+2])                 #31, i++
              1c2b a129  suba [$29]       8270  suba([sysArgs+5])               #32,
                                          8271  blt('.sys_sortsprites_35')      #33, i < length
              1c2c e842  blt  .sys_sortsprites_35
              1c2d 1525  ld   [$25],y     8272  ld([sysArgs+1],Y)               #34,
              1c2e 1403  ld   $03,y       8273  ld(hi('REENTER'),Y)             #35,
              1c2f e0cb  jmp  y,$cb       8274  jmp(Y,'REENTER')                #36,
              1c30 00ec  ld   $ec         8275  ld(-40/2)                       #37,
                                          8276  label('.sys_sortsprites_30')
.sys_sortsprites_30:
              1c31 de00  st   [y,x++]     8277  st([Y,Xpp])                     #30,
              1c32 0128  ld   [$28]       8278  ld([sysArgs+4])                 #31,
              1c33 ce00  st   [y,x]       8279  st([Y,X])                       #32, y[j] = key0
              1c34 152b  ld   [$2b],y     8280  ld([sysArgs+7],Y)               #33,
              1c35 012a  ld   [$2a]       8281  ld([sysArgs+6])                 #34,
              1c36 9127  adda [$27],x     8282  adda([sysArgs+3],X)             #35,
              1c37 0182  ld   [$82]       8283  ld([0x82])                      #36,
              1c38 ce00  st   [y,x]       8284  st([Y,X])                       #37, is[j] = key1
              1c39 0126  ld   [$26]       8285  ld([sysArgs+2])                 #38,
              1c3a 8001  adda $01         8286  adda(1)                         #39,
              1c3b c226  st   [$26]       8287  st([sysArgs+2])                 #40, i++
              1c3c a129  suba [$29]       8288  suba([sysArgs+5])               #41,
                                          8289  blt('.sys_sortsprites_44')      #42, i < length
              1c3d e853  blt  .sys_sortsprites_44
              1c3e 1525  ld   [$25],y     8290  ld([sysArgs+1],Y)               #43
              1c3f 1403  ld   $03,y       8291  ld(hi('NEXTY'),Y)               #44,
              1c40 e000  jmp  y,$00       8292  jmp(Y,'NEXTY')                  #45,
              1c41 00e8  ld   $e8         8293  ld(-48/2)                       #46,
                                          8294  label('.sys_sortsprites_35')
.sys_sortsprites_35:
              1c42 0124  ld   [$24]       8295  ld([sysArgs+0])                 #35,
              1c43 9126  adda [$26],x     8296  adda([sysArgs+2],X)             #36,
              1c44 0d00  ld   [y,x]       8297  ld([Y,X])                       #37,
              1c45 c228  st   [$28]       8298  st([sysArgs+4])                 #38, key0 = y[i]
              1c46 152b  ld   [$2b],y     8299  ld([sysArgs+7],Y)               #39,
              1c47 012a  ld   [$2a]       8300  ld([sysArgs+6])                 #40,
              1c48 9126  adda [$26],x     8301  adda([sysArgs+2],X)             #41,
              1c49 0d00  ld   [y,x]       8302  ld([Y,X])                       #42,
              1c4a c282  st   [$82]       8303  st([0x82])                      #43, key1 = is[i]
              1c4b 0126  ld   [$26]       8304  ld([sysArgs+2])                 #44,
              1c4c c227  st   [$27]       8305  st([sysArgs+3])                 #45, j = i
              1c4d 0116  ld   [$16]       8306  ld([vPC])                       #46,
              1c4e a002  suba $02         8307  suba(2)                         #47,
              1c4f c216  st   [$16]       8308  st([vPC])                       #48, restart
              1c50 1403  ld   $03,y       8309  ld(hi('REENTER'),Y)             #49,
              1c51 e0cb  jmp  y,$cb       8310  jmp(Y,'REENTER')                #50,
              1c52 00e5  ld   $e5         8311  ld(-54/2)                       #51,
                                          8312  label('.sys_sortsprites_44')
.sys_sortsprites_44:
              1c53 0124  ld   [$24]       8313  ld([sysArgs+0])                 #44,
              1c54 9126  adda [$26],x     8314  adda([sysArgs+2],X)             #45,
              1c55 0d00  ld   [y,x]       8315  ld([Y,X])                       #46,
              1c56 c228  st   [$28]       8316  st([sysArgs+4])                 #47, key0 = y[i]
              1c57 152b  ld   [$2b],y     8317  ld([sysArgs+7],Y)               #48,
              1c58 012a  ld   [$2a]       8318  ld([sysArgs+6])                 #49,
              1c59 9126  adda [$26],x     8319  adda([sysArgs+2],X)             #50,
              1c5a 0d00  ld   [y,x]       8320  ld([Y,X])                       #51,
              1c5b c282  st   [$82]       8321  st([0x82])                      #52, key1 = is[i]
              1c5c 0126  ld   [$26]       8322  ld([sysArgs+2])                 #53,
              1c5d c227  st   [$27]       8323  st([sysArgs+3])                 #54, j = i
              1c5e 0116  ld   [$16]       8324  ld([vPC])                       #55,
              1c5f a002  suba $02         8325  suba(2)                         #56,
              1c60 c216  st   [$16]       8326  st([vPC])                       #57, restart
              1c61 1403  ld   $03,y       8327  ld(hi('NEXTY'),Y)               #58,
              1c62 e000  jmp  y,$00       8328  jmp(Y,'NEXTY')                  #59,
              1c63 00e1  ld   $e1         8329  ld(-62/2)                       #60,
                                          8330
                                          8331
              1c64 0200  nop              8332  fillers(until=0xff)
              1c65 0200  nop
              1c66 0200  nop
              * 155 times
              1cff 0200  nop              8333  align(0x100, size=0x100)
                                          8334
                                          8335  #-----------------------------------------------------------------------
                                          8336  #       More sys implementations, (0x1D00)
                                          8337  #-----------------------------------------------------------------------
                                          8338  #
                                          8339  # sys_DrawVLine, sysArgs0,1=count:colour, sysArgs2,3=X:Y address
                                          8340  label('sys_DrawVLine')
sys_DrawVLine:
              1d00 1126  ld   [$26],x     8341  ld([sysArgs+2],X)               #18,
              1d01 0124  ld   [$24]       8342  ld([sysArgs+0])                 #19,
              1d02 a008  suba $08         8343  suba(8)                         #20,
                                          8344  blt('.sys_drawvline_23')        #21,
              1d03 e82e  blt  .sys_drawvline_23
              1d04 0124  ld   [$24]       8345  ld([sysArgs+0])                 #22,
              1d05 0125  ld   [$25]       8346  ld([sysArgs+1])                 #23, 8 pixels
              1d06 ce00  st   [y,x]       8347  st([Y,X])                       #24,
              1d07 0127  ld   [$27]       8348  ld([sysArgs+3])                 #25,
              1d08 9401  adda $01,y       8349  adda(1,Y)                       #26,
              1d09 0125  ld   [$25]       8350  ld([sysArgs+1])                 #27,
              1d0a ce00  st   [y,x]       8351  st([Y,X])                       #28,
              1d0b 0127  ld   [$27]       8352  ld([sysArgs+3])                 #29,
              1d0c 9402  adda $02,y       8353  adda(2,Y)                       #30,
              1d0d 0125  ld   [$25]       8354  ld([sysArgs+1])                 #31,
              1d0e ce00  st   [y,x]       8355  st([Y,X])                       #32,
              1d0f 0127  ld   [$27]       8356  ld([sysArgs+3])                 #33,
              1d10 9403  adda $03,y       8357  adda(3,Y)                       #34,
              1d11 0125  ld   [$25]       8358  ld([sysArgs+1])                 #35,
              1d12 ce00  st   [y,x]       8359  st([Y,X])                       #36,
              1d13 0127  ld   [$27]       8360  ld([sysArgs+3])                 #37,
              1d14 9404  adda $04,y       8361  adda(4,Y)                       #38,
              1d15 0125  ld   [$25]       8362  ld([sysArgs+1])                 #39,
              1d16 ce00  st   [y,x]       8363  st([Y,X])                       #40,
              1d17 0127  ld   [$27]       8364  ld([sysArgs+3])                 #41,
              1d18 9405  adda $05,y       8365  adda(5,Y)                       #42,
              1d19 0125  ld   [$25]       8366  ld([sysArgs+1])                 #43,
              1d1a ce00  st   [y,x]       8367  st([Y,X])                       #44,
              1d1b 0127  ld   [$27]       8368  ld([sysArgs+3])                 #45,
              1d1c 9406  adda $06,y       8369  adda(6,Y)                       #46,
              1d1d 0125  ld   [$25]       8370  ld([sysArgs+1])                 #47,
              1d1e ce00  st   [y,x]       8371  st([Y,X])                       #48,
              1d1f 0127  ld   [$27]       8372  ld([sysArgs+3])                 #49,
              1d20 9407  adda $07,y       8373  adda(7,Y)                       #50,
              1d21 8008  adda $08         8374  adda(8)                         #51,
              1d22 c227  st   [$27]       8375  st([sysArgs+3])                 #52,
              1d23 0125  ld   [$25]       8376  ld([sysArgs+1])                 #53,
              1d24 ce00  st   [y,x]       8377  st([Y,X])                       #54,
              1d25 0124  ld   [$24]       8378  ld([sysArgs+0])                 #55,
              1d26 a008  suba $08         8379  suba(8)                         #56,
              1d27 c224  st   [$24]       8380  st([sysArgs+0])                 #57,
              1d28 0116  ld   [$16]       8381  ld([vPC])                       #58,
              1d29 a002  suba $02         8382  suba(2)                         #59,
              1d2a c216  st   [$16]       8383  st([vPC])                       #60, restart
              1d2b 1403  ld   $03,y       8384  ld(hi('REENTER'),Y)             #61,
              1d2c e0cb  jmp  y,$cb       8385  jmp(Y,'REENTER')                #62,
              1d2d 00df  ld   $df         8386  ld(-66/2)                       #63,
                                          8387  label('.sys_drawvline_23')
.sys_drawvline_23:
              1d2e a004  suba $04         8388  suba(4)                         #23,
                                          8389  blt('.sys_drawvline_26')        #24,
              1d2f e84a  blt  .sys_drawvline_26
              1d30 0124  ld   [$24]       8390  ld([sysArgs+0])                 #25,
              1d31 0125  ld   [$25]       8391  ld([sysArgs+1])                 #26, 4 pixels
              1d32 ce00  st   [y,x]       8392  st([Y,X])                       #27,
              1d33 0127  ld   [$27]       8393  ld([sysArgs+3])                 #28,
              1d34 9401  adda $01,y       8394  adda(1,Y)                       #29,
              1d35 0125  ld   [$25]       8395  ld([sysArgs+1])                 #30,
              1d36 ce00  st   [y,x]       8396  st([Y,X])                       #31,
              1d37 0127  ld   [$27]       8397  ld([sysArgs+3])                 #32,
              1d38 9402  adda $02,y       8398  adda(2,Y)                       #33,
              1d39 0125  ld   [$25]       8399  ld([sysArgs+1])                 #34,
              1d3a ce00  st   [y,x]       8400  st([Y,X])                       #35,
              1d3b 0127  ld   [$27]       8401  ld([sysArgs+3])                 #36,
              1d3c 9403  adda $03,y       8402  adda(3,Y)                       #37,
              1d3d 8004  adda $04         8403  adda(4)                         #38,
              1d3e c227  st   [$27]       8404  st([sysArgs+3])                 #39,
              1d3f 0125  ld   [$25]       8405  ld([sysArgs+1])                 #40,
              1d40 ce00  st   [y,x]       8406  st([Y,X])                       #41,
              1d41 0124  ld   [$24]       8407  ld([sysArgs+0])                 #42,
              1d42 a004  suba $04         8408  suba(4)                         #43,
              1d43 c224  st   [$24]       8409  st([sysArgs+0])                 #44,
              1d44 0116  ld   [$16]       8410  ld([vPC])                       #45,
              1d45 a002  suba $02         8411  suba(2)                         #46,
              1d46 c216  st   [$16]       8412  st([vPC])                       #47, restart
              1d47 1403  ld   $03,y       8413  ld(hi('NEXTY'),Y)               #48,
              1d48 e000  jmp  y,$00       8414  jmp(Y,'NEXTY')                  #49,
              1d49 00e6  ld   $e6         8415  ld(-52/2)                       #50,
                                          8416  label('.sys_drawvline_26')
.sys_drawvline_26:
              1d4a a002  suba $02         8417  suba(2)                         #26,
                                          8418  blt('.sys_drawvline_29')        #27,
              1d4b e85e  blt  .sys_drawvline_29
              1d4c 0124  ld   [$24]       8419  ld([sysArgs+0])                 #28,
              1d4d 0125  ld   [$25]       8420  ld([sysArgs+1])                 #29, 2 pixels
              1d4e ce00  st   [y,x]       8421  st([Y,X])                       #30,
              1d4f 0127  ld   [$27]       8422  ld([sysArgs+3])                 #31,
              1d50 9401  adda $01,y       8423  adda(1,Y)                       #32,
              1d51 8002  adda $02         8424  adda(2)                         #33,
              1d52 c227  st   [$27]       8425  st([sysArgs+3])                 #34,
              1d53 0125  ld   [$25]       8426  ld([sysArgs+1])                 #35,
              1d54 ce00  st   [y,x]       8427  st([Y,X])                       #36,
              1d55 0124  ld   [$24]       8428  ld([sysArgs+0])                 #37,
              1d56 a002  suba $02         8429  suba(2)                         #38,
              1d57 c224  st   [$24]       8430  st([sysArgs+0])                 #39,
              1d58 0116  ld   [$16]       8431  ld([vPC])                       #40,
              1d59 a002  suba $02         8432  suba(2)                         #41,
              1d5a c216  st   [$16]       8433  st([vPC])                       #42, restart
              1d5b 1403  ld   $03,y       8434  ld(hi('REENTER'),Y)             #43,
              1d5c e0cb  jmp  y,$cb       8435  jmp(Y,'REENTER')                #44,
              1d5d 00e8  ld   $e8         8436  ld(-48/2)                       #45,
                                          8437  label('.sys_drawvline_29')
.sys_drawvline_29:
              1d5e a001  suba $01         8438  suba(1)                         #29,
                                          8439  blt('.sys_drawvline_32')        #30,
              1d5f e86c  blt  .sys_drawvline_32
              1d60 0124  ld   [$24]       8440  ld([sysArgs+0])                 #31,
              1d61 0125  ld   [$25]       8441  ld([sysArgs+1])                 #32, 1 pixel
              1d62 ce00  st   [y,x]       8442  st([Y,X])                       #33,
              1d63 0124  ld   [$24]       8443  ld([sysArgs+0])                 #34,
              1d64 a001  suba $01         8444  suba(1)                         #35,
              1d65 c224  st   [$24]       8445  st([sysArgs+0])                 #36,
              1d66 0116  ld   [$16]       8446  ld([vPC])                       #37,
              1d67 a002  suba $02         8447  suba(2)                         #38,
              1d68 c216  st   [$16]       8448  st([vPC])                       #39, restart
              1d69 1403  ld   $03,y       8449  ld(hi('NEXTY'),Y)               #40,
              1d6a e000  jmp  y,$00       8450  jmp(Y,'NEXTY')                  #41,
              1d6b 00ea  ld   $ea         8451  ld(-44/2)                       #42,
                                          8452  label('.sys_drawvline_32')
.sys_drawvline_32:
              1d6c 1403  ld   $03,y       8453  ld(hi('NEXTY'),Y)               #32, done
              1d6d e000  jmp  y,$00       8454  jmp(Y,'NEXTY')                  #33,
              1d6e 00ee  ld   $ee         8455  ld(-36/2)                       #34,
                                          8456
                                          8457
              1d6f 0200  nop              8458  fillers(until=0x80)
              1d70 0200  nop
              1d71 0200  nop
              * 17 times
                                          8459
                                          8460
              1d80 0200  nop              8461  fillers(until=0xff)
              1d81 0200  nop
              1d82 0200  nop
              * 127 times
              1dff 0200  nop              8462  align(0x100, size=0x100)
                                          8463
                                          8464  #-----------------------------------------------------------------------
                                          8465  #       More sys implementations, (0x1E00)
                                          8466  #-----------------------------------------------------------------------
                                          8467  #
                                          8468  # sys_SpritePattern, sysArgs0,1=src, sysArgs2=dstY, sysArgs3=height/2, sysArgs4,5=patternLut
                                          8469  label('sys_SpritePattern')
sys_SpritePattern:
              1e00 1525  ld   [$25],y     8470  ld([sysArgs+1],Y)               #18, src.hi
              1e01 0d00  ld   [y,x]       8471  ld([Y,X])                       #19,
              1e02 de00  st   [y,x++]     8472  st([Y,Xpp])                     #20, src.lo++
              1e03 1526  ld   [$26],y     8473  ld([sysArgs+2],Y)               #21,
              1e04 caa3  st   [y,$a3]     8474  st([Y,0xA3])                    #22, pixel0
              1e05 1525  ld   [$25],y     8475  ld([sysArgs+1],Y)               #23, src.hi
              1e06 0d00  ld   [y,x]       8476  ld([Y,X])                       #24,
              1e07 de00  st   [y,x++]     8477  st([Y,Xpp])                     #25, src.lo++
              1e08 1526  ld   [$26],y     8478  ld([sysArgs+2],Y)               #26,
              1e09 caa5  st   [y,$a5]     8479  st([Y,0xA5])                    #27, pixel1
              1e0a 1525  ld   [$25],y     8480  ld([sysArgs+1],Y)               #28, src.hi
              1e0b 0d00  ld   [y,x]       8481  ld([Y,X])                       #29,
              1e0c de00  st   [y,x++]     8482  st([Y,Xpp])                     #30, src.lo++
              1e0d 1526  ld   [$26],y     8483  ld([sysArgs+2],Y)               #31,
              1e0e caa7  st   [y,$a7]     8484  st([Y,0xA7])                    #32, pixel2
              1e0f 1525  ld   [$25],y     8485  ld([sysArgs+1],Y)               #33, src.hi
              1e10 0d00  ld   [y,x]       8486  ld([Y,X])                       #34,
              1e11 de00  st   [y,x++]     8487  st([Y,Xpp])                     #35, src.lo++
              1e12 1526  ld   [$26],y     8488  ld([sysArgs+2],Y)               #36,
              1e13 caa9  st   [y,$a9]     8489  st([Y,0xA9])                    #37, pixel3
              1e14 1525  ld   [$25],y     8490  ld([sysArgs+1],Y)               #38, src.hi
              1e15 0d00  ld   [y,x]       8491  ld([Y,X])                       #39,
              1e16 de00  st   [y,x++]     8492  st([Y,Xpp])                     #40, src.lo++
              1e17 1526  ld   [$26],y     8493  ld([sysArgs+2],Y)               #41,
              1e18 caab  st   [y,$ab]     8494  st([Y,0xAB])                    #42, pixel4
              1e19 1525  ld   [$25],y     8495  ld([sysArgs+1],Y)               #43, src.hi
              1e1a 0d00  ld   [y,x]       8496  ld([Y,X])                       #44,
              1e1b de00  st   [y,x++]     8497  st([Y,Xpp])                     #45, src.lo++
              1e1c 1526  ld   [$26],y     8498  ld([sysArgs+2],Y)               #46,
              1e1d caad  st   [y,$ad]     8499  st([Y,0xAD])                    #47, pixel5
              1e1e 1525  ld   [$25],y     8500  ld([sysArgs+1],Y)               #48, src.hi
              1e1f 0d00  ld   [y,x]       8501  ld([Y,X])                       #49,
              1e20 de00  st   [y,x++]     8502  st([Y,Xpp])                     #50, src.lo++
              1e21 1526  ld   [$26],y     8503  ld([sysArgs+2],Y)               #51,
              1e22 caaf  st   [y,$af]     8504  st([Y,0xAF])                    #52, pixel6
              1e23 1525  ld   [$25],y     8505  ld([sysArgs+1],Y)               #53, src.hi
              1e24 0d00  ld   [y,x]       8506  ld([Y,X])                       #54,
              1e25 de00  st   [y,x++]     8507  st([Y,Xpp])                     #55, src.lo++
              1e26 1526  ld   [$26],y     8508  ld([sysArgs+2],Y)               #56,
              1e27 cab1  st   [y,$b1]     8509  st([Y,0xB1])                    #57, pixel7
              1e28 1525  ld   [$25],y     8510  ld([sysArgs+1],Y)               #58, src.hi
              1e29 0d00  ld   [y,x]       8511  ld([Y,X])                       #59,
              1e2a de00  st   [y,x++]     8512  st([Y,Xpp])                     #60, src.lo++
              1e2b 1526  ld   [$26],y     8513  ld([sysArgs+2],Y)               #61,
              1e2c cab3  st   [y,$b3]     8514  st([Y,0xB3])                    #62, pixel8
              1e2d 0126  ld   [$26]       8515  ld([sysArgs+2])                 #63,
              1e2e 8001  adda $01         8516  adda(1)                         #64,
              1e2f c226  st   [$26]       8517  st([sysArgs+2])                 #65, dstY++
              1e30 1525  ld   [$25],y     8518  ld([sysArgs+1],Y)               #66, src.hi
              1e31 0d00  ld   [y,x]       8519  ld([Y,X])                       #67,
              1e32 de00  st   [y,x++]     8520  st([Y,Xpp])                     #68, src.lo++
              1e33 1526  ld   [$26],y     8521  ld([sysArgs+2],Y)               #69,
              1e34 caa3  st   [y,$a3]     8522  st([Y,0xA3])                    #70, pixel9
              1e35 1525  ld   [$25],y     8523  ld([sysArgs+1],Y)               #71, src.hi
              1e36 0d00  ld   [y,x]       8524  ld([Y,X])                       #72,
              1e37 de00  st   [y,x++]     8525  st([Y,Xpp])                     #73, src.lo++
              1e38 1526  ld   [$26],y     8526  ld([sysArgs+2],Y)               #74,
              1e39 caa5  st   [y,$a5]     8527  st([Y,0xA5])                    #75, pixel10
              1e3a 1525  ld   [$25],y     8528  ld([sysArgs+1],Y)               #76, src.hi
              1e3b 0d00  ld   [y,x]       8529  ld([Y,X])                       #77,
              1e3c de00  st   [y,x++]     8530  st([Y,Xpp])                     #78, src.lo++
              1e3d 1526  ld   [$26],y     8531  ld([sysArgs+2],Y)               #79,
              1e3e caa7  st   [y,$a7]     8532  st([Y,0xA7])                    #80, pixel11
              1e3f 1525  ld   [$25],y     8533  ld([sysArgs+1],Y)               #81, src.hi
              1e40 0d00  ld   [y,x]       8534  ld([Y,X])                       #82,
              1e41 de00  st   [y,x++]     8535  st([Y,Xpp])                     #83, src.lo++
              1e42 1526  ld   [$26],y     8536  ld([sysArgs+2],Y)               #84,
              1e43 caa9  st   [y,$a9]     8537  st([Y,0xA9])                    #85, pixel12
              1e44 1525  ld   [$25],y     8538  ld([sysArgs+1],Y)               #86, src.hi
              1e45 0d00  ld   [y,x]       8539  ld([Y,X])                       #87,
              1e46 de00  st   [y,x++]     8540  st([Y,Xpp])                     #88, src.lo++
              1e47 1526  ld   [$26],y     8541  ld([sysArgs+2],Y)               #89,
              1e48 caab  st   [y,$ab]     8542  st([Y,0xAB])                    #90, pixel13
              1e49 1525  ld   [$25],y     8543  ld([sysArgs+1],Y)               #91, src.hi
              1e4a 0d00  ld   [y,x]       8544  ld([Y,X])                       #92,
              1e4b de00  st   [y,x++]     8545  st([Y,Xpp])                     #93, src.lo++
              1e4c 1526  ld   [$26],y     8546  ld([sysArgs+2],Y)               #94,
              1e4d caad  st   [y,$ad]     8547  st([Y,0xAD])                    #95, pixel14
              1e4e 1525  ld   [$25],y     8548  ld([sysArgs+1],Y)               #96, src.hi
              1e4f 0d00  ld   [y,x]       8549  ld([Y,X])                       #97,
              1e50 de00  st   [y,x++]     8550  st([Y,Xpp])                     #98, src.lo++
              1e51 1526  ld   [$26],y     8551  ld([sysArgs+2],Y)               #99,
              1e52 caaf  st   [y,$af]     8552  st([Y,0xAF])                    #100, pixel15
              1e53 1525  ld   [$25],y     8553  ld([sysArgs+1],Y)               #101, src.hi
              1e54 0d00  ld   [y,x]       8554  ld([Y,X])                       #102,
              1e55 de00  st   [y,x++]     8555  st([Y,Xpp])                     #103, src.lo++
              1e56 1526  ld   [$26],y     8556  ld([sysArgs+2],Y)               #104,
              1e57 cab1  st   [y,$b1]     8557  st([Y,0xB1])                    #105, pixel16
              1e58 1525  ld   [$25],y     8558  ld([sysArgs+1],Y)               #106, src.hi
              1e59 0d00  ld   [y,x]       8559  ld([Y,X])                       #107,
              1e5a de00  st   [y,x++]     8560  st([Y,Xpp])                     #108, src.lo++
              1e5b 1526  ld   [$26],y     8561  ld([sysArgs+2],Y)               #109,
              1e5c cab3  st   [y,$b3]     8562  st([Y,0xB3])                    #110, pixel17
              1e5d 0126  ld   [$26]       8563  ld([sysArgs+2])                 #111,
              1e5e 8001  adda $01         8564  adda(1)                         #112,
              1e5f c226  st   [$26]       8565  st([sysArgs+2])                 #113, dstY++
                                          8566
              1e60 0128  ld   [$28]       8567  ld([sysArgs+4])                 #114,
              1e61 8002  adda $02         8568  adda(2)                         #115,
              1e62 d228  st   [$28],x     8569  st([sysArgs+4],X)               #116, patternLut += 2
              1e63 1529  ld   [$29],y     8570  ld([sysArgs+5],Y)               #117,
              1e64 0d00  ld   [y,x]       8571  ld([Y,X])                       #118,
              1e65 de00  st   [y,x++]     8572  st([Y,Xpp])                     #119,
              1e66 c224  st   [$24]       8573  st([sysArgs+0])                 #120, src.lo
              1e67 0d00  ld   [y,x]       8574  ld([Y,X])                       #121,
              1e68 c225  st   [$25]       8575  st([sysArgs+1])                 #122, src.hi
                                          8576
              1e69 0127  ld   [$27]       8577  ld([sysArgs+3])                 #123,
              1e6a a001  suba $01         8578  suba(1)                         #124,
              1e6b c227  st   [$27]       8579  st([sysArgs+3])                 #125, height/2 --
                                          8580  beq('.sys_spritepattern_128')   #126,
              1e6c f073  beq  .sys_spritepattern_128
              1e6d 0116  ld   [$16]       8581  ld([vPC])                       #127,
              1e6e a002  suba $02         8582  suba(2)                         #128,
              1e6f c216  st   [$16]       8583  st([vPC])                       #129, restart
              1e70 1403  ld   $03,y       8584  ld(hi('NEXTY'),Y)               #130,
              1e71 e000  jmp  y,$00       8585  jmp(Y,'NEXTY')                  #131,
              1e72 00bd  ld   $bd         8586  ld(-134/2)                      #132,
                                          8587
                                          8588  label('.sys_spritepattern_128')
.sys_spritepattern_128:
              1e73 1403  ld   $03,y       8589  ld(hi('NEXTY'),Y)               #128,
              1e74 e000  jmp  y,$00       8590  jmp(Y,'NEXTY')                  #129,
              1e75 00be  ld   $be         8591  ld(-132/2)                      #130,
                                          8592
                                          8593
                                          8594  # sys_DrawBullet
                                          8595  label('sys_DrawBullet')
sys_DrawBullet:
              1e76 1583  ld   [$83],y     8596  ld([0x83],Y)                    #18, bulletY
              1e77 0d00  ld   [y,x]       8597  ld([Y,X])                       #19, AC = screen
              1e78 1587  ld   [$87],y     8598  ld([0x87],Y)                    #20, bulletData
              1e79 69b4  xora [y,$b4]     8599  xora([Y,0xB4])                  #21, AC ^= bullet
              1e7a 1583  ld   [$83],y     8600  ld([0x83],Y)                    #22, bulletY
              1e7b de00  st   [y,x++]     8601  st([Y,Xpp])                     #23, screen = AC
                                          8602
              1e7c 0d00  ld   [y,x]       8603  ld([Y,X])                       #24, AC = screen
              1e7d 1587  ld   [$87],y     8604  ld([0x87],Y)                    #25, bulletData
              1e7e 69b5  xora [y,$b5]     8605  xora([Y,0xB5])                  #26, AC ^= bullet
              1e7f 1583  ld   [$83],y     8606  ld([0x83],Y)                    #27, bulletY
              1e80 de00  st   [y,x++]     8607  st([Y,Xpp])                     #28, screen = AC
                                          8608
              1e81 0d00  ld   [y,x]       8609  ld([Y,X])                       #29, AC = screen
              1e82 1587  ld   [$87],y     8610  ld([0x87],Y)                    #30, bulletData
              1e83 69b6  xora [y,$b6]     8611  xora([Y,0xB6])                  #31, AC ^= bullet
              1e84 1583  ld   [$83],y     8612  ld([0x83],Y)                    #32, bulletY
              1e85 de00  st   [y,x++]     8613  st([Y,Xpp])                     #33, screen = AC
                                          8614
              1e86 0d00  ld   [y,x]       8615  ld([Y,X])                       #34, AC = screen
              1e87 1587  ld   [$87],y     8616  ld([0x87],Y)                    #35, bulletData
              1e88 69b7  xora [y,$b7]     8617  xora([Y,0xB7])                  #36, AC ^= bullet
              1e89 1583  ld   [$83],y     8618  ld([0x83],Y)                    #37, bulletY
              1e8a de00  st   [y,x++]     8619  st([Y,Xpp])                     #38, screen = AC
                                          8620
              1e8b 1182  ld   [$82],x     8621  ld([0x82],X)                    #39, bulletX
              1e8c 0183  ld   [$83]       8622  ld([0x83])                      #40,
              1e8d 8001  adda $01         8623  adda(1)                         #41,
              1e8e d683  st   [$83],y     8624  st([0x83],Y)                    #42, bulletY++
                                          8625
              1e8f 0d00  ld   [y,x]       8626  ld([Y,X])                       #43, AC = screen
              1e90 1587  ld   [$87],y     8627  ld([0x87],Y)                    #44, bulletData
              1e91 69b8  xora [y,$b8]     8628  xora([Y,0xB8])                  #45, AC ^= bullet
              1e92 1583  ld   [$83],y     8629  ld([0x83],Y)                    #46, bulletY
              1e93 de00  st   [y,x++]     8630  st([Y,Xpp])                     #47, screen = AC
                                          8631
              1e94 0d00  ld   [y,x]       8632  ld([Y,X])                       #48, AC = screen
              1e95 1587  ld   [$87],y     8633  ld([0x87],Y)                    #49, bulletData
              1e96 69b9  xora [y,$b9]     8634  xora([Y,0xB9])                  #50, AC ^= bullet
              1e97 1583  ld   [$83],y     8635  ld([0x83],Y)                    #51, bulletY
              1e98 de00  st   [y,x++]     8636  st([Y,Xpp])                     #52, screen = AC
                                          8637
              1e99 0d00  ld   [y,x]       8638  ld([Y,X])                       #53, AC = screen
              1e9a 1587  ld   [$87],y     8639  ld([0x87],Y)                    #54, bulletData
              1e9b 69ba  xora [y,$ba]     8640  xora([Y,0xBA])                  #55, AC ^= bullet
              1e9c 1583  ld   [$83],y     8641  ld([0x83],Y)                    #56, bulletY
              1e9d de00  st   [y,x++]     8642  st([Y,Xpp])                     #57, screen = AC
                                          8643
              1e9e 0d00  ld   [y,x]       8644  ld([Y,X])                       #58, AC = screen
              1e9f 1587  ld   [$87],y     8645  ld([0x87],Y)                    #59, bulletData
              1ea0 69bb  xora [y,$bb]     8646  xora([Y,0xBB])                  #60, AC ^= bullet
              1ea1 1583  ld   [$83],y     8647  ld([0x83],Y)                    #61, bulletY
              1ea2 de00  st   [y,x++]     8648  st([Y,Xpp])                     #62, screen = AC
                                          8649
              1ea3 1182  ld   [$82],x     8650  ld([0x82],X)                    #63, bulletX
              1ea4 0183  ld   [$83]       8651  ld([0x83])                      #64,
              1ea5 8001  adda $01         8652  adda(1)                         #65,
              1ea6 d683  st   [$83],y     8653  st([0x83],Y)                    #66, bulletY++
                                          8654
              1ea7 0d00  ld   [y,x]       8655  ld([Y,X])                       #67, AC = screen
              1ea8 1587  ld   [$87],y     8656  ld([0x87],Y)                    #68, bulletData
              1ea9 69bc  xora [y,$bc]     8657  xora([Y,0xBC])                  #69, AC ^= bullet
              1eaa 1583  ld   [$83],y     8658  ld([0x83],Y)                    #70, bulletY
              1eab de00  st   [y,x++]     8659  st([Y,Xpp])                     #71, screen = AC
                                          8660
              1eac 0d00  ld   [y,x]       8661  ld([Y,X])                       #72, AC = screen
              1ead 1587  ld   [$87],y     8662  ld([0x87],Y)                    #73, bulletData
              1eae 69bd  xora [y,$bd]     8663  xora([Y,0xBD])                  #74, AC ^= bullet
              1eaf 1583  ld   [$83],y     8664  ld([0x83],Y)                    #75, bulletY
              1eb0 de00  st   [y,x++]     8665  st([Y,Xpp])                     #76, screen = AC
                                          8666
              1eb1 0d00  ld   [y,x]       8667  ld([Y,X])                       #77, AC = screen
              1eb2 1587  ld   [$87],y     8668  ld([0x87],Y)                    #78, bulletData
              1eb3 69be  xora [y,$be]     8669  xora([Y,0xBE])                  #79, AC ^= bullet
              1eb4 1583  ld   [$83],y     8670  ld([0x83],Y)                    #80, bulletY
              1eb5 de00  st   [y,x++]     8671  st([Y,Xpp])                     #81, screen = AC
                                          8672
              1eb6 0d00  ld   [y,x]       8673  ld([Y,X])                       #82, AC = screen
              1eb7 1587  ld   [$87],y     8674  ld([0x87],Y)                    #83, bulletData
              1eb8 69bf  xora [y,$bf]     8675  xora([Y,0xBF])                  #84, AC ^= bullet
              1eb9 1583  ld   [$83],y     8676  ld([0x83],Y)                    #85, bulletY
              1eba de00  st   [y,x++]     8677  st([Y,Xpp])                     #86, screen = AC
                                          8678
              1ebb 1182  ld   [$82],x     8679  ld([0x82],X)                    #87, bulletX
              1ebc 0183  ld   [$83]       8680  ld([0x83])                      #88,
              1ebd 8001  adda $01         8681  adda(1)                         #89,
              1ebe d683  st   [$83],y     8682  st([0x83],Y)                    #90, bulletY++
                                          8683
              1ebf 0d00  ld   [y,x]       8684  ld([Y,X])                       #91, AC = screen
              1ec0 1587  ld   [$87],y     8685  ld([0x87],Y)                    #92, bulletData
              1ec1 69c0  xora [y,$c0]     8686  xora([Y,0xC0])                  #93, AC ^= bullet
              1ec2 1583  ld   [$83],y     8687  ld([0x83],Y)                    #94, bulletY
              1ec3 de00  st   [y,x++]     8688  st([Y,Xpp])                     #95, screen = AC
                                          8689
              1ec4 0d00  ld   [y,x]       8690  ld([Y,X])                       #96, AC = screen
              1ec5 1587  ld   [$87],y     8691  ld([0x87],Y)                    #97, bulletData
              1ec6 69c1  xora [y,$c1]     8692  xora([Y,0xC1])                  #98, AC ^= bullet
              1ec7 1583  ld   [$83],y     8693  ld([0x83],Y)                    #99, bulletY
              1ec8 de00  st   [y,x++]     8694  st([Y,Xpp])                     #100, screen = AC
                                          8695
              1ec9 0d00  ld   [y,x]       8696  ld([Y,X])                       #101, AC = screen
              1eca 1587  ld   [$87],y     8697  ld([0x87],Y)                    #102, bulletData
              1ecb 69c2  xora [y,$c2]     8698  xora([Y,0xC2])                  #103, AC ^= bullet
              1ecc 1583  ld   [$83],y     8699  ld([0x83],Y)                    #104, bulletY
              1ecd de00  st   [y,x++]     8700  st([Y,Xpp])                     #105, screen = AC
                                          8701
              1ece 0d00  ld   [y,x]       8702  ld([Y,X])                       #106, AC = screen
              1ecf 1587  ld   [$87],y     8703  ld([0x87],Y)                    #107, bulletData
              1ed0 69c3  xora [y,$c3]     8704  xora([Y,0xC3])                  #108, AC ^= bullet
              1ed1 1583  ld   [$83],y     8705  ld([0x83],Y)                    #109, bulletY
              1ed2 de00  st   [y,x++]     8706  st([Y,Xpp])                     #110, screen = AC
                                          8707
              1ed3 019c  ld   [$9c]       8708  ld([0x9C])                      #111, register13
              1ed4 8001  adda $01         8709  adda(1)                         #112,
              1ed5 d29c  st   [$9c],x     8710  st([0x9C],X)                    #113, register13++
              1ed6 159d  ld   [$9d],y     8711  ld([0x9D],Y)                    #114,
              1ed7 0d00  ld   [y,x]       8712  ld([Y,X])                       #115, peek(register13)
              1ed8 c282  st   [$82]       8713  st([0x82])                      #116, bulletX
                                          8714
              1ed9 019e  ld   [$9e]       8715  ld([0x9E])                      #117,
              1eda 8001  adda $01         8716  adda(1)                         #118,
              1edb d29e  st   [$9e],x     8717  st([0x9E],X)                    #119, register14++
              1edc 159f  ld   [$9f],y     8718  ld([0x9F],Y)                    #120,
              1edd 0d00  ld   [y,x]       8719  ld([Y,X])                       #121, peek(register14)
              1ede c283  st   [$83]       8720  st([0x83])                      #122, bulletY
                                          8721
              1edf 01a0  ld   [$a0]       8722  ld([0xA0])                      #123,
              1ee0 8001  adda $01         8723  adda(1)                         #124,
              1ee1 d2a0  st   [$a0],x     8724  st([0xA0],X)                    #125, register15++
              1ee2 15a1  ld   [$a1],y     8725  ld([0xA1],Y)                    #126,
              1ee3 0d00  ld   [y,x]       8726  ld([Y,X])                       #127, peek(register15)
              1ee4 c287  st   [$87]       8727  st([0x87])                      #128, bulletData
                                          8728
              1ee5 019a  ld   [$9a]       8729  ld([0x9A])                      #129,
              1ee6 a001  suba $01         8730  suba(1)                         #130,
                                          8731  beq('.sys_drawbullet_133')      #131,
              1ee7 f0ef  beq  .sys_drawbullet_133
              1ee8 c29a  st   [$9a]       8732  st([0x9A])                      #132, register12--
              1ee9 1403  ld   $03,y       8733  ld(hi('NEXTY'),Y)               #133,
              1eea 0116  ld   [$16]       8734  ld([vPC])                       #134,
              1eeb a002  suba $02         8735  suba(2)                         #135,
              1eec c216  st   [$16]       8736  st([vPC])                       #136, restart
              1eed e000  jmp  y,$00       8737  jmp(Y,'NEXTY')                  #137,
              1eee 00ba  ld   $ba         8738  ld(-140/2)                      #138,
                                          8739  label('.sys_drawbullet_133')
.sys_drawbullet_133:
              1eef 1403  ld   $03,y       8740  ld(hi('REENTER'),Y)             #133,
              1ef0 e0cb  jmp  y,$cb       8741  jmp(Y,'REENTER')                #134,
              1ef1 00bb  ld   $bb         8742  ld(-138/2)                      #135,
                                          8743
                                          8744
              1ef2 0200  nop              8745  fillers(until=0xff)
              1ef3 0200  nop
              1ef4 0200  nop
              * 13 times
              1eff 0200  nop              8746  align(0x100, size=0x100)
                                          8747
                                          8748  #-----------------------------------------------------------------------
                                          8749  #       More sys implementations, (0x1F00)
                                          8750  #-----------------------------------------------------------------------
                                          8751  #
                                          8752  # sys_CmpByteBounds, 0xB8,B9=src, 0xBA,BB=vPC_bounds, 0xBC,BD=bounds, 0xBE=index,
                                          8753  #                    0xBF=count, output:vAC.lo=index
                                          8754  label('sys_CmpByteBounds')
sys_CmpByteBounds:
              1f00 a001  suba $01         8755  suba(1)                         #18,
                                          8756  bge('.sys_cmpbytebounds_21')    #19,
              1f01 f406  bge  .sys_cmpbytebounds_21
              1f02 c2bf  st   [$bf]       8757  st([0xBF])                      #20, count--
              1f03 1403  ld   $03,y       8758  ld(hi('REENTER'),Y)             #21,
              1f04 e0cb  jmp  y,$cb       8759  jmp(Y,'REENTER')                #22,
              1f05 00f3  ld   $f3         8760  ld(-26/2)                       #23,
                                          8761  label('.sys_cmpbytebounds_21')
.sys_cmpbytebounds_21:
              1f06 01b8  ld   [$b8]       8762  ld([0xB8])                      #21,
              1f07 91be  adda [$be],x     8763  adda([0xBE],X)                  #22,
              1f08 15b9  ld   [$b9],y     8764  ld([0xB9],Y)                    #23,
              1f09 0d00  ld   [y,x]       8765  ld([Y,X])                       #24,
                                          8766  bmi('.sys_cmpbytebounds_27')    #25,
              1f0a e80e  blt  .sys_cmpbytebounds_27
              1f0b a1bc  suba [$bc]       8767  suba([0xBC])                    #26,
                                          8768  bra('.sys_cmpbytebounds_29')    #27,
              1f0c fc10  bra  .sys_cmpbytebounds_29
              1f0d 41bc  ora  [$bc]       8769  ora([0xBC])                     #28,
                                          8770  label('.sys_cmpbytebounds_27')
.sys_cmpbytebounds_27:
              1f0e 21bc  anda [$bc]       8771  anda([0xBC])                    #27,
              1f0f 0200  nop              8772  nop()                           #28,
                                          8773
                                          8774  label('.sys_cmpbytebounds_29')
.sys_cmpbytebounds_29:                    8775  bpl('.sys_cmpbytebounds_31')    #29,
              1f10 f422  bge  .sys_cmpbytebounds_31
              1f11 0d00  ld   [y,x]       8776  ld([Y,X])                       #30,
              1f12 0116  ld   [$16]       8777  ld([vPC])                       #31, < lbounds
              1f13 c21a  st   [$1a]       8778  st([vLR])                       #32, return to SYS call
              1f14 0117  ld   [$17]       8779  ld([vPC+1])                     #33,
              1f15 c21b  st   [$1b]       8780  st([vLR+1])                     #34,
              1f16 01ba  ld   [$ba]       8781  ld([0xBA])                      #35,
              1f17 a002  suba $02         8782  suba(2)                         #36,
              1f18 c216  st   [$16]       8783  st([vPC])                       #37, NEXT adds 2
              1f19 01bb  ld   [$bb]       8784  ld([0xBB])                      #38,
              1f1a c217  st   [$17]       8785  st([vPC+1])                     #39, bounds call address
              1f1b 01be  ld   [$be]       8786  ld([0xBE])                      #40,
              1f1c c218  st   [$18]       8787  st([vAC])                       #41, vAC.lo = index
              1f1d 8001  adda $01         8788  adda(1)                         #42,
              1f1e c2be  st   [$be]       8789  st([0xBE])                      #43, index++
              1f1f 1403  ld   $03,y       8790  ld(hi('NEXTY'),Y)               #44,
              1f20 e000  jmp  y,$00       8791  jmp(Y,'NEXTY')                  #45,
              1f21 00e8  ld   $e8         8792  ld(-48/2)                       #46,
                                          8793
                                          8794  label('.sys_cmpbytebounds_31')
.sys_cmpbytebounds_31:                    8795  bmi('.sys_cmpbytebounds_33')    #31,
              1f22 e826  blt  .sys_cmpbytebounds_33
              1f23 a1bd  suba [$bd]       8796  suba([0xBD])                    #32,
                                          8797  bra('.sys_cmpbytebounds_35')    #33,
              1f24 fc28  bra  .sys_cmpbytebounds_35
              1f25 41bd  ora  [$bd]       8798  ora([0xBD])                     #34,
                                          8799  label('.sys_cmpbytebounds_33')
.sys_cmpbytebounds_33:
              1f26 21bd  anda [$bd]       8800  anda([0xBD])                    #33,
              1f27 0200  nop              8801  nop()                           #34,
                                          8802  label('.sys_cmpbytebounds_35')
.sys_cmpbytebounds_35:                    8803  bmi('.sys_cmpbytebounds_37')    #35,
              1f28 e839  blt  .sys_cmpbytebounds_37
              1f29 0116  ld   [$16]       8804  ld([vPC])                       #36, >= ubounds
              1f2a c21a  st   [$1a]       8805  st([vLR])                       #37, return to SYS call
              1f2b 0117  ld   [$17]       8806  ld([vPC+1])                     #38,
              1f2c c21b  st   [$1b]       8807  st([vLR+1])                     #39,
              1f2d 01ba  ld   [$ba]       8808  ld([0xBA])                      #40,
              1f2e a002  suba $02         8809  suba(2)                         #41,
              1f2f c216  st   [$16]       8810  st([vPC])                       #42, NEXT adds 2
              1f30 01bb  ld   [$bb]       8811  ld([0xBB])                      #43,
              1f31 c217  st   [$17]       8812  st([vPC+1])                     #44, bounds call address
              1f32 01be  ld   [$be]       8813  ld([0xBE])                      #45,
              1f33 c218  st   [$18]       8814  st([vAC])                       #46, vAC.lo = index
              1f34 8001  adda $01         8815  adda(1)                         #47,
              1f35 c2be  st   [$be]       8816  st([0xBE])                      #48, index++
              1f36 1403  ld   $03,y       8817  ld(hi('REENTER'),Y)             #49,
              1f37 e0cb  jmp  y,$cb       8818  jmp(Y,'REENTER')                #50,
              1f38 00e5  ld   $e5         8819  ld(-54/2)                       #51,
                                          8820
                                          8821  label('.sys_cmpbytebounds_37')
.sys_cmpbytebounds_37:
              1f39 a002  suba $02         8822  suba(2)                         #37,
              1f3a c216  st   [$16]       8823  st([vPC])                       #38, restart
              1f3b 01be  ld   [$be]       8824  ld([0xBE])                      #39,
              1f3c 8001  adda $01         8825  adda(1)                         #40,
              1f3d c2be  st   [$be]       8826  st([0xBE])                      #41, index++
              1f3e 1403  ld   $03,y       8827  ld(hi('NEXTY'),Y)               #42,
              1f3f e000  jmp  y,$00       8828  jmp(Y,'NEXTY')                  #43,
              1f40 00e9  ld   $e9         8829  ld(-46/2)                       #44,
                                          8830
                                          8831
                                          8832  # SYS_Reset_88 implementation
                                          8833  label('sys_Reset_88')
sys_Reset_88: 1f41 c221  st   [$21]       8834  st([romType])                   #18
              1f42 0000  ld   $00         8835  ld(0)                           #19
              1f43 c21c  st   [$1c]       8836  st([vSP])                       #20
              1f44 c204  st   [$04]       8837  st([vSPH])                      #21
              1f45 1401  ld   $01,y       8838  ld(hi('videoTop_v5'),Y)         #22
              1f46 caf9  st   [y,$f9]     8839  st([Y,lo('videoTop_v5')])       #23 Show all 120 pixel lines
              1f47 caf6  st   [y,$f6]     8840  st([Y,vIRQ_v5])                 #24 Disable vIRQ dispatch
              1f48 caf7  st   [y,$f7]     8841  st([Y,vIRQ_v5+1])               #25
              1f49 c22c  st   [$2c]       8842  st([soundTimer])                #26 soundTimer
                                          8843  assert userCode&255 == 0
              1f4a c21a  st   [$1a]       8844  st([vLR])                       #27 vLR
              1f4b 0002  ld   $02         8845  ld(userCode>>8)                 #28
              1f4c c21b  st   [$1b]       8846  st([vLR+1])                     #29
              1f4d 00f6  ld   $f6         8847  ld('nopixels')                  #30 Video mode 3 (fast)
              1f4e c20a  st   [$0a]       8848  st([videoModeB])                #31
              1f4f c20b  st   [$0b]       8849  st([videoModeC])                #32
              1f50 c20c  st   [$0c]       8850  st([videoModeD])                #33
              1f51 00ad  ld   $ad         8851  ld('SYS_Exec_88')               #34 SYS_Exec_88
              1f52 c222  st   [$22]       8852  st([sysFn])                     #35 High byte (remains) 0
              1f53 0045  ld   $45         8853  ld('Reset')                     #36 Reset.gt1 from EPROM
              1f54 c224  st   [$24]       8854  st([sysArgs+0])                 #37
              1f55 00f8  ld   $f8         8855  ld(hi('Reset'))                 #38
              1f56 c225  st   [$25]       8856  st([sysArgs+1])                 #39
              1f57 0116  ld   [$16]       8857  ld([vPC])                       #40 Force second SYS call
              1f58 a002  suba $02         8858  suba(2)                         #41
              1f59 c216  st   [$16]       8859  st([vPC])                       #42
              1f5a c17f  ctrl $7f         8860  ctrl(0b01111111)                #43 Expansion board: (1) reset signal.
              1f5b c17c  ctrl $7c         8861  ctrl(0b01111100)                #44 (2) disable SPI slaves, enable RAM bank 1
              1f5c 000f  ld   $0f         8862  ld(0x0f)                        #45 default 4bit sound
              1f5d c208  st   [$08]       8863  st([audioBitMask])              #46
              1f5e 1403  ld   $03,y       8864  ld(hi('REENTER'),Y)             #47
              1f5f e0cb  jmp  y,$cb       8865  jmp(Y,'REENTER')                #48
              1f60 00e6  ld   $e6         8866  ld(-52/2)                       #49
                                          8867
                                          8868
                                          8869  #-----------------------------------------------------------------------
                                          8870  # sys_Divide_u168, x:u8 = x:u16 / y:u8, rem:u8 = x:u16 % y:u8
                                          8871  # sysArgs0,1=x, sysArgs2=y, sysArgs4=count, output : sysArgs0=res, sysArgs1=rem
                                          8872  label('sys_Divide_u168')
sys_Divide_u168:
              1f61 c229  st   [$29]       8873  st([sysArgs+5])                 #18, save x.hi
              1f62 0128  ld   [$28]       8874  ld([sysArgs+4])                 #19,
              1f63 a001  suba $01         8875  suba(1)                         #20, count--
                                          8876  bge('.sys_divide_u168_23')      #21,
              1f64 f469  bge  .sys_divide_u168_23
              1f65 c228  st   [$28]       8877  st([sysArgs+4])                 #22,
              1f66 1403  ld   $03,y       8878  ld(hi('REENTER'),Y)             #23,
              1f67 e0cb  jmp  y,$cb       8879  jmp(Y,'REENTER')                #24,
              1f68 00f2  ld   $f2         8880  ld(-28/2)                       #25,
                                          8881
                                          8882  label('.sys_divide_u168_23')
.sys_divide_u168_23:
              1f69 0124  ld   [$24]       8883  ld([sysArgs+0])                 #23,
              1f6a 3080  anda $80,x       8884  anda(128,X)                     #24,
              1f6b 8124  adda [$24]       8885  adda([sysArgs+0])               #25,
              1f6c c224  st   [$24]       8886  st([sysArgs+0])                 #26,
              1f6d 0500  ld   [x]         8887  ld([X])                         #27,
              1f6e 8125  adda [$25]       8888  adda([sysArgs+1])               #28,
              1f6f 8125  adda [$25]       8889  adda([sysArgs+1])               #29,
              1f70 c225  st   [$25]       8890  st([sysArgs+1])                 #30, x <<1
                                          8891  bmi('.sys_divide_u168_33')      #31, unsigned compare
              1f71 e876  blt  .sys_divide_u168_33
              1f72 a126  suba [$26]       8892  suba([sysArgs+2])               #32, x.hi - y
              1f73 c21d  st   [$1d]       8893  st([vTmp])                      #33,
                                          8894  bra('.sys_divide_u168_36')      #34,
              1f74 fc79  bra  .sys_divide_u168_36
              1f75 4126  ora  [$26]       8895  ora([sysArgs+2])                #35,
                                          8896  label('.sys_divide_u168_33')
.sys_divide_u168_33:
              1f76 c21d  st   [$1d]       8897  st([vTmp])                      #33,
              1f77 2126  anda [$26]       8898  anda([sysArgs+2])               #34,
              1f78 0200  nop              8899  nop()                           #35,
                                          8900
                                          8901  label('.sys_divide_u168_36')
.sys_divide_u168_36:                      8902  bmi('.sys_divide_u168_38')      #36,
              1f79 e88f  blt  .sys_divide_u168_38
              1f7a 011d  ld   [$1d]       8903  ld([vTmp])                      #37, x.hi >= y
              1f7b c225  st   [$25]       8904  st([sysArgs+1])                 #38, x.hi = (x.hi - y) <<8
              1f7c 0124  ld   [$24]       8905  ld([sysArgs+0])                 #39,
              1f7d 8001  adda $01         8906  adda(1)                         #40, x.lo++
                                          8907  bne('.sys_divide_u168_43')      #41,
              1f7e ec89  bne  .sys_divide_u168_43
              1f7f c224  st   [$24]       8908  st([sysArgs+0])                 #42,
              1f80 0125  ld   [$25]       8909  ld([sysArgs+1])                 #43,
              1f81 8001  adda $01         8910  adda(1)                         #44, x.hi++
              1f82 c225  st   [$25]       8911  st([sysArgs+1])                 #45,
              1f83 0116  ld   [$16]       8912  ld([vPC])                       #46,
              1f84 a002  suba $02         8913  suba(2)                         #47,
              1f85 c216  st   [$16]       8914  st([vPC])                       #48, restart
              1f86 1403  ld   $03,y       8915  ld(hi('REENTER'),Y)             #49,
              1f87 e0cb  jmp  y,$cb       8916  jmp(Y,'REENTER')                #50,
              1f88 00e5  ld   $e5         8917  ld(-54/2)                       #51,
                                          8918  label('.sys_divide_u168_43')
.sys_divide_u168_43:
              1f89 0116  ld   [$16]       8919  ld([vPC])                       #43,
              1f8a a002  suba $02         8920  suba(2)                         #44,
              1f8b c216  st   [$16]       8921  st([vPC])                       #45, restart
              1f8c 1403  ld   $03,y       8922  ld(hi('NEXTY'),Y)               #46,
              1f8d e000  jmp  y,$00       8923  jmp(Y,'NEXTY')                  #47,
              1f8e 00e7  ld   $e7         8924  ld(-50/2)                       #48,
                                          8925
                                          8926  label('.sys_divide_u168_38')
.sys_divide_u168_38:
              1f8f 0129  ld   [$29]       8927  ld([sysArgs+5])                 #38,
                                          8928  bpl('.sys_divide_u168_41')      #39, msb(x.hi) = 0
              1f90 f4a6  bge  .sys_divide_u168_41
              1f91 011d  ld   [$1d]       8929  ld([vTmp])                      #40, x.hi >= y
              1f92 c225  st   [$25]       8930  st([sysArgs+1])                 #41, x.hi = (x.hi - y) <<8
              1f93 0124  ld   [$24]       8931  ld([sysArgs+0])                 #42,
              1f94 8001  adda $01         8932  adda(1)                         #43, x.lo++
                                          8933  bne('.sys_divide_u168_46')      #44,
              1f95 eca0  bne  .sys_divide_u168_46
              1f96 c224  st   [$24]       8934  st([sysArgs+0])                 #45,
              1f97 0125  ld   [$25]       8935  ld([sysArgs+1])                 #46,
              1f98 8001  adda $01         8936  adda(1)                         #47, x.hi++
              1f99 c225  st   [$25]       8937  st([sysArgs+1])                 #48,
              1f9a 0116  ld   [$16]       8938  ld([vPC])                       #49,
              1f9b a002  suba $02         8939  suba(2)                         #50,
              1f9c c216  st   [$16]       8940  st([vPC])                       #51, restart
              1f9d 1403  ld   $03,y       8941  ld(hi('NEXTY'),Y)               #52,
              1f9e e000  jmp  y,$00       8942  jmp(Y,'NEXTY')                  #53,
              1f9f 00e4  ld   $e4         8943  ld(-56/2)                       #54,
                                          8944  label('.sys_divide_u168_46')
.sys_divide_u168_46:
              1fa0 0116  ld   [$16]       8945  ld([vPC])                       #46,
              1fa1 a002  suba $02         8946  suba(2)                         #47,
              1fa2 c216  st   [$16]       8947  st([vPC])                       #48, restart
              1fa3 1403  ld   $03,y       8948  ld(hi('REENTER'),Y)             #49,
              1fa4 e0cb  jmp  y,$cb       8949  jmp(Y,'REENTER')                #50,
              1fa5 00e5  ld   $e5         8950  ld(-54/2)                       #51,
                                          8951
                                          8952  label('.sys_divide_u168_41')
.sys_divide_u168_41:
              1fa6 0116  ld   [$16]       8953  ld([vPC])                       #41,
              1fa7 a002  suba $02         8954  suba(2)                         #42,
              1fa8 c216  st   [$16]       8955  st([vPC])                       #43, restart
              1fa9 1403  ld   $03,y       8956  ld(hi('NEXTY'),Y)               #44,
              1faa e000  jmp  y,$00       8957  jmp(Y,'NEXTY')                  #45,
              1fab 00e8  ld   $e8         8958  ld(-48/2)                       #46,
                                          8959
                                          8960
              1fac 0200  nop              8961  fillers(until=0xc0)
              1fad 0200  nop
              1fae 0200  nop
              * 20 times
                                          8962
                                          8963  # sys_ConvertVTableX, sysArgs0=dst, sysArgs2=offsetX, sysArgs3=accum, sysArgs4=count
                                          8964  label('SYS_ConvertVTableX_66')
SYS_ConvertVTableX_66:
              1fc0 1401  ld   $01,y       8965  ld(1,Y)                         #15, VTable.hi
              1fc1 1126  ld   [$26],x     8966  ld([sysArgs+2],X)               #16, VTable.lo
              1fc2 0d00  ld   [y,x]       8967  ld([Y,X])                       #17, get VTableX
              1fc3 8127  adda [$27]       8968  adda([sysArgs+3])               #18,
              1fc4 1525  ld   [$25],y     8969  ld([sysArgs+1],Y)               #19, dst.hi
              1fc5 1124  ld   [$24],x     8970  ld([sysArgs+0],X)               #20, dst.lo
              1fc6 ce00  st   [y,x]       8971  st([Y,X])                       #21,
              1fc7 c227  st   [$27]       8972  st([sysArgs+3])                 #22, accum
                                          8973
              1fc8 1401  ld   $01,y       8974  ld(1,Y)                         #23
              1fc9 0124  ld   [$24]       8975  ld([sysArgs+0])                 #24,
              1fca 8001  adda $01         8976  adda(1)                         #25,
              1fcb c224  st   [$24]       8977  st([sysArgs+0])                 #26, dst++
              1fcc 0126  ld   [$26]       8978  ld([sysArgs+2])                 #27,
              1fcd 8002  adda $02         8979  adda(2)                         #28,
              1fce d226  st   [$26],x     8980  st([sysArgs+2],X)               #29, offsetX += 2
              1fcf 0d00  ld   [y,x]       8981  ld([Y,X])                       #30, get video table X
              1fd0 8127  adda [$27]       8982  adda([sysArgs+3])               #31,
              1fd1 1525  ld   [$25],y     8983  ld([sysArgs+1],Y)               #32, dst.hi
              1fd2 1124  ld   [$24],x     8984  ld([sysArgs+0],X)               #33, dst.lo
              1fd3 ce00  st   [y,x]       8985  st([Y,X])                       #34,
              1fd4 c227  st   [$27]       8986  st([sysArgs+3])                 #35, accum
                                          8987
              1fd5 1401  ld   $01,y       8988  ld(1,Y)                         #36
              1fd6 0124  ld   [$24]       8989  ld([sysArgs+0])                 #37,
              1fd7 8001  adda $01         8990  adda(1)                         #38,
              1fd8 c224  st   [$24]       8991  st([sysArgs+0])                 #39, dst++
              1fd9 0126  ld   [$26]       8992  ld([sysArgs+2])                 #40,
              1fda 8002  adda $02         8993  adda(2)                         #41,
              1fdb d226  st   [$26],x     8994  st([sysArgs+2],X)               #42, offsetX += 2
              1fdc 0d00  ld   [y,x]       8995  ld([Y,X])                       #43, get video table X
              1fdd 8127  adda [$27]       8996  adda([sysArgs+3])               #44,
              1fde 1525  ld   [$25],y     8997  ld([sysArgs+1],Y)               #45, dst.hi
              1fdf 1124  ld   [$24],x     8998  ld([sysArgs+0],X)               #46, dst.lo
              1fe0 ce00  st   [y,x]       8999  st([Y,X])                       #47,
              1fe1 c227  st   [$27]       9000  st([sysArgs+3])                 #48, accum
                                          9001
              1fe2 0128  ld   [$28]       9002  ld([sysArgs+4])                 #49,
              1fe3 a001  suba $01         9003  suba(1)                         #50,
              1fe4 c228  st   [$28]       9004  st([sysArgs+4])                 #51, count--
                                          9005  beq('.sys_convertvtablex_54')   #52,
              1fe5 f0f2  beq  .sys_convertvtablex_54
              1fe6 0124  ld   [$24]       9006  ld([sysArgs+0])                 #53,
              1fe7 8001  adda $01         9007  adda(1)                         #54,
              1fe8 c224  st   [$24]       9008  st([sysArgs+0])                 #55, dst++
              1fe9 0126  ld   [$26]       9009  ld([sysArgs+2])                 #56,
              1fea 8002  adda $02         9010  adda(2)                         #57,
              1feb c226  st   [$26]       9011  st([sysArgs+2])                 #58, offsetX += 2
              1fec 0116  ld   [$16]       9012  ld([vPC])                       #59,
              1fed a002  suba $02         9013  suba(2)                         #60,
              1fee c216  st   [$16]       9014  st([vPC])                       #61, restart
              1fef 1403  ld   $03,y       9015  ld(hi('NEXTY'),Y)               #62,
              1ff0 e000  jmp  y,$00       9016  jmp(Y,'NEXTY')                  #63,
              1ff1 00df  ld   $df         9017  ld(-66/2)                       #64,
                                          9018  label('.sys_convertvtablex_54')
.sys_convertvtablex_54:
              1ff2 1403  ld   $03,y       9019  ld(hi('NEXTY'),Y)               #54,
              1ff3 e000  jmp  y,$00       9020  jmp(Y,'NEXTY')                  #55,
              1ff4 00e3  ld   $e3         9021  ld(-58/2)                       #56,
                                          9022
                                          9023
              1ff5 0200  nop              9024  fillers(until=0xff)
              1ff6 0200  nop
              1ff7 0200  nop
              * 10 times
              1fff 0200  nop              9025  align(0x100, size=0x100)
                                          9026
                                          9027  #-----------------------------------------------------------------------
                                          9028  #       More sys implementations, (0x2000)
                                          9029  #-----------------------------------------------------------------------
                                          9030  #
                                          9031  # SYS_DrawSprite_vX_140
                                          9032  label('SYS_DrawSprite_vX_140')
SYS_DrawSprite_vX_140:
              2000 0186  ld   [$86]       9033  ld([0x86])                      #15, spriteEnable
                                          9034  bmi('.sys_drawsprite_18')       #16,
              2001 e89b  blt  .sys_drawsprite_18
              2002 0183  ld   [$83]       9035  ld([0x83])                      #17, spriteY
              2003 8183  adda [$83]       9036  adda([0x83])                    #18, spriteY
              2004 1200  ld   ac,x        9037  ld(AC,X)                        #19,
              2005 1401  ld   $01,y       9038  ld(1,Y)                         #20, 0x0100
              2006 0d00  ld   [y,x]       9039  ld([Y,X])                       #21, VTableY
              2007 c285  st   [$85]       9040  st([0x85])                      #22,
              2008 1525  ld   [$25],y     9041  ld([sysArgs+1],Y)               #23, VTableAbsX.hi
              2009 0124  ld   [$24]       9042  ld([sysArgs+0])                 #24, VTableAbsX.lo
              200a 8183  adda [$83]       9043  adda([0x83])                    #25, spriteY
              200b 1200  ld   ac,x        9044  ld(AC,X)                        #26,
              200c 0182  ld   [$82]       9045  ld([0x82])                      #27, spriteX
              200d 8d00  adda [y,x]       9046  adda([Y,X])                     #28, VTableX offset, (absolute)
              200e d284  st   [$84],x     9047  st([0x84],X)                    #29,
              200f 1585  ld   [$85],y     9048  ld([0x85],Y)                    #30,
                                          9049
              2010 0d00  ld   [y,x]       9050  ld([Y,X])                       #31, get back0
              2011 1587  ld   [$87],y     9051  ld([0x87],Y)                    #32, spriteData
              2012 caa2  st   [y,$a2]     9052  st([Y,0xA2])                    #33, save back0
              2013 09a3  ld   [y,$a3]     9053  ld([Y,0xA3])                    #34, load pixel0
              2014 1585  ld   [$85],y     9054  ld([0x85],Y)                    #35, spriteY
              2015 ec18  bne  $2018       9055  bne(pc()+3)                     #36, colourkey
              2016 fc19  bra  $2019       9056  bra(pc()+3)                     #37,
              2017 0d00  ld   [y,x]       9057  ld([Y,X])                       #38,
              2018 61b8  xora [$b8]       9058  xora([0xB8])                    #38, (!)
              2019 de00  st   [y,x++]     9059  st([Y,Xpp])                     #39, draw pixel0
                                          9060
              201a 0d00  ld   [y,x]       9061  ld([Y,X])                       #40, get back1
              201b 1587  ld   [$87],y     9062  ld([0x87],Y)                    #41, spriteData
              201c caa4  st   [y,$a4]     9063  st([Y,0xA4])                    #42, save back1
              201d 09a5  ld   [y,$a5]     9064  ld([Y,0xA5])                    #43, load pixel1
              201e 1585  ld   [$85],y     9065  ld([0x85],Y)                    #44, spriteY
              201f ec22  bne  $2022       9066  bne(pc()+3)                     #45, colourkey
              2020 fc23  bra  $2023       9067  bra(pc()+3)                     #46,
              2021 0d00  ld   [y,x]       9068  ld([Y,X])                       #47,
              2022 61b8  xora [$b8]       9069  xora([0xB8])                    #47, (!)
              2023 de00  st   [y,x++]     9070  st([Y,Xpp])                     #48, draw pixel1
                                          9071
              2024 0d00  ld   [y,x]       9072  ld([Y,X])                       #49, get back2
              2025 1587  ld   [$87],y     9073  ld([0x87],Y)                    #50, spriteData
              2026 caa6  st   [y,$a6]     9074  st([Y,0xA6])                    #51, save back2
              2027 09a7  ld   [y,$a7]     9075  ld([Y,0xA7])                    #52, load pixel2
              2028 1585  ld   [$85],y     9076  ld([0x85],Y)                    #53, spriteY
              2029 ec2c  bne  $202c       9077  bne(pc()+3)                     #54, colourkey
              202a fc2d  bra  $202d       9078  bra(pc()+3)                     #55,
              202b 0d00  ld   [y,x]       9079  ld([Y,X])                       #56,
              202c 61b8  xora [$b8]       9080  xora([0xB8])                    #56, (!)
              202d de00  st   [y,x++]     9081  st([Y,Xpp])                     #57, draw pixel2
                                          9082
              202e 0d00  ld   [y,x]       9083  ld([Y,X])                       #58, get back3
              202f 1587  ld   [$87],y     9084  ld([0x87],Y)                    #59, spriteData
              2030 caa8  st   [y,$a8]     9085  st([Y,0xA8])                    #60, save back3
              2031 09a9  ld   [y,$a9]     9086  ld([Y,0xA9])                    #61, load pixel3
              2032 1585  ld   [$85],y     9087  ld([0x85],Y)                    #62, spriteY
              2033 ec36  bne  $2036       9088  bne(pc()+3)                     #63, colourkey
              2034 fc37  bra  $2037       9089  bra(pc()+3)                     #64,
              2035 0d00  ld   [y,x]       9090  ld([Y,X])                       #65,
              2036 61b8  xora [$b8]       9091  xora([0xB8])                    #65, (!)
              2037 de00  st   [y,x++]     9092  st([Y,Xpp])                     #66, draw pixel3
                                          9093
              2038 0d00  ld   [y,x]       9094  ld([Y,X])                       #67, get back4
              2039 1587  ld   [$87],y     9095  ld([0x87],Y)                    #68, spriteData
              203a caaa  st   [y,$aa]     9096  st([Y,0xAA])                    #69, save back4
              203b 09ab  ld   [y,$ab]     9097  ld([Y,0xAB])                    #70, load pixel4
              203c 1585  ld   [$85],y     9098  ld([0x85],Y)                    #71, spriteY
              203d ec40  bne  $2040       9099  bne(pc()+3)                     #72, colourkey
              203e fc41  bra  $2041       9100  bra(pc()+3)                     #73,
              203f 0d00  ld   [y,x]       9101  ld([Y,X])                       #74,
              2040 61b8  xora [$b8]       9102  xora([0xB8])                    #74, (!)
              2041 de00  st   [y,x++]     9103  st([Y,Xpp])                     #75, draw pixel4
                                          9104
              2042 0d00  ld   [y,x]       9105  ld([Y,X])                       #76, get back5
              2043 1587  ld   [$87],y     9106  ld([0x87],Y)                    #77, spriteData
              2044 caac  st   [y,$ac]     9107  st([Y,0xAC])                    #78, save back5
              2045 09ad  ld   [y,$ad]     9108  ld([Y,0xAD])                    #79, load pixel5
              2046 1585  ld   [$85],y     9109  ld([0x85],Y)                    #80, spriteY
              2047 ec4a  bne  $204a       9110  bne(pc()+3)                     #81, colourkey
              2048 fc4b  bra  $204b       9111  bra(pc()+3)                     #82,
              2049 0d00  ld   [y,x]       9112  ld([Y,X])                       #83,
              204a 61b8  xora [$b8]       9113  xora([0xB8])                    #83, (!)
              204b de00  st   [y,x++]     9114  st([Y,Xpp])                     #84, draw pixel5
                                          9115
              204c 0d00  ld   [y,x]       9116  ld([Y,X])                       #85, get back6
              204d 1587  ld   [$87],y     9117  ld([0x87],Y)                    #86, spriteData
              204e caae  st   [y,$ae]     9118  st([Y,0xAE])                    #87, save back6
              204f 09af  ld   [y,$af]     9119  ld([Y,0xAF])                    #88, load pixel6
              2050 1585  ld   [$85],y     9120  ld([0x85],Y)                    #89, spriteY
              2051 ec54  bne  $2054       9121  bne(pc()+3)                     #90, colourkey
              2052 fc55  bra  $2055       9122  bra(pc()+3)                     #91,
              2053 0d00  ld   [y,x]       9123  ld([Y,X])                       #92,
              2054 61b8  xora [$b8]       9124  xora([0xB8])                    #92, (!)
              2055 de00  st   [y,x++]     9125  st([Y,Xpp])                     #93, draw pixel6
                                          9126
              2056 0d00  ld   [y,x]       9127  ld([Y,X])                       #94, get back7
              2057 1587  ld   [$87],y     9128  ld([0x87],Y)                    #95, spriteData
              2058 cab0  st   [y,$b0]     9129  st([Y,0xB0])                    #96, save back7
              2059 09b1  ld   [y,$b1]     9130  ld([Y,0xB1])                    #97, load pixel7
              205a 1585  ld   [$85],y     9131  ld([0x85],Y)                    #98, spriteY
              205b ec5e  bne  $205e       9132  bne(pc()+3)                     #99, colourkey
              205c fc5f  bra  $205f       9133  bra(pc()+3)                     #100,
              205d 0d00  ld   [y,x]       9134  ld([Y,X])                       #101,
              205e 61b8  xora [$b8]       9135  xora([0xB8])                    #101, (!)
              205f de00  st   [y,x++]     9136  st([Y,Xpp])                     #102, draw pixel7
                                          9137
              2060 0d00  ld   [y,x]       9138  ld([Y,X])                       #103, get back8
              2061 1587  ld   [$87],y     9139  ld([0x87],Y)                    #104, spriteData
              2062 cab2  st   [y,$b2]     9140  st([Y,0xB2])                    #105, save back8
              2063 09b3  ld   [y,$b3]     9141  ld([Y,0xB3])                    #106, load pixel8
              2064 1585  ld   [$85],y     9142  ld([0x85],Y)                    #107, spriteY
              2065 ec68  bne  $2068       9143  bne(pc()+3)                     #108, colourkey
              2066 fc69  bra  $2069       9144  bra(pc()+3)                     #109,
              2067 0d00  ld   [y,x]       9145  ld([Y,X])                       #110,
              2068 61b8  xora [$b8]       9146  xora([0xB8])                    #110, (!)
              2069 de00  st   [y,x++]     9147  st([Y,Xpp])                     #111, draw pixel8
                                          9148
              206a 1587  ld   [$87],y     9149  ld([0x87],Y)                    #112, spriteData
              206b 0184  ld   [$84]       9150  ld([0x84])                      #113, spriteX
              206c caa0  st   [y,$a0]     9151  st([Y,0xA0])                    #114, spriteOldX
              206d 0185  ld   [$85]       9152  ld([0x85])                      #115, spriteY
              206e caa1  st   [y,$a1]     9153  st([Y,0xA1])                    #116, spriteOldY
              206f 0186  ld   [$86]       9154  ld([0x86])                      #117,
              2070 a001  suba $01         9155  suba(1)                         #118,
              2071 c286  st   [$86]       9156  st([0x86])                      #119, scanLines--
                                          9157  beq('.sys_drawsprite_122')      #120,
              2072 f07f  beq  .sys_drawsprite_122
              2073 0183  ld   [$83]       9158  ld([0x83])                      #121, spriteY
              2074 8001  adda $01         9159  adda(1)                         #122,
              2075 c283  st   [$83]       9160  st([0x83])                      #123, spriteY++
              2076 0187  ld   [$87]       9161  ld([0x87])                      #124,
              2077 8001  adda $01         9162  adda(1)                         #125,
              2078 c287  st   [$87]       9163  st([0x87])                      #126, spriteData++
              2079 0116  ld   [$16]       9164  ld([vPC])                       #127,
              207a a002  suba $02         9165  suba(2)                         #128,
              207b c216  st   [$16]       9166  st([vPC])                       #129, restart
              207c 1403  ld   $03,y       9167  ld(hi('NEXTY'),Y)               #130,
              207d e000  jmp  y,$00       9168  jmp(Y,'NEXTY')                  #131,
              207e 00bd  ld   $bd         9169  ld(-134/2)                      #132,
                                          9170
                                          9171  label('.sys_drawsprite_122')
.sys_drawsprite_122:
              207f 01a0  ld   [$a0]       9172  ld([0xA0])                      #122,
              2080 8004  adda $04         9173  adda(4)                         #123,
              2081 d2a0  st   [$a0],x     9174  st([0xA0],X)                    #124, register15 += 4
              2082 15a1  ld   [$a1],y     9175  ld([0xA1],Y)                    #125,
              2083 0d00  ld   [y,x]       9176  ld([Y,X])                       #126, peek(register15 + 0)
              2084 c282  st   [$82]       9177  st([0x82])                      #127, spriteX
              2085 de00  st   [y,x++]     9178  st([Y,Xpp])                     #128, X++
              2086 0d00  ld   [y,x]       9179  ld([Y,X])                       #129, peek(register15 + 1)
              2087 c283  st   [$83]       9180  st([0x83])                      #130, spriteY
              2088 de00  st   [y,x++]     9181  st([Y,Xpp])                     #131, X++
              2089 0d00  ld   [y,x]       9182  ld([Y,X])                       #132, peek(register15 + 2)
              208a c286  st   [$86]       9183  st([0x86])                      #133, spriteHeight
              208b de00  st   [y,x++]     9184  st([Y,Xpp])                     #134, X++
              208c 0d00  ld   [y,x]       9185  ld([Y,X])                       #135, peek(register15 + 3)
              208d c287  st   [$87]       9186  st([0x87])                      #136, spriteData
              208e 0188  ld   [$88]       9187  ld([0x88])                      #137,
              208f a001  suba $01         9188  suba(1)                         #138,
              2090 c288  st   [$88]       9189  st([0x88])                      #139, register3--, spriteCount
                                          9190  beq('.sys_drawsprite_142')      #140,
              2091 f098  beq  .sys_drawsprite_142
              2092 0116  ld   [$16]       9191  ld([vPC])                       #141,
              2093 a002  suba $02         9192  suba(2)                         #142,
              2094 c216  st   [$16]       9193  st([vPC])                       #143, restart
              2095 1403  ld   $03,y       9194  ld(hi('NEXTY'),Y)               #144,
              2096 e000  jmp  y,$00       9195  jmp(Y,'NEXTY')                  #145,
              2097 00b6  ld   $b6         9196  ld(-148/2)                      #146,
                                          9197  label('.sys_drawsprite_142')
.sys_drawsprite_142:
              2098 1403  ld   $03,y       9198  ld(hi('NEXTY'),Y)               #142,
              2099 e000  jmp  y,$00       9199  jmp(Y,'NEXTY')                  #143,
              209a 00b7  ld   $b7         9200  ld(-146/2)                      #144,
                                          9201
                                          9202  label('.sys_drawsprite_18')
.sys_drawsprite_18:
              209b 01a0  ld   [$a0]       9203  ld([0xA0])                      #18,
              209c 8004  adda $04         9204  adda(4)                         #19,
              209d d2a0  st   [$a0],x     9205  st([0xA0],X)                    #20, register15 += 4
              209e 15a1  ld   [$a1],y     9206  ld([0xA1],Y)                    #21,
              209f 0d00  ld   [y,x]       9207  ld([Y,X])                       #22, peek(register15 + 0)
              20a0 c282  st   [$82]       9208  st([0x82])                      #23, spriteX
              20a1 de00  st   [y,x++]     9209  st([Y,Xpp])                     #24, X++
              20a2 0d00  ld   [y,x]       9210  ld([Y,X])                       #25, peek(register15 + 1)
              20a3 c283  st   [$83]       9211  st([0x83])                      #26, spriteY
              20a4 de00  st   [y,x++]     9212  st([Y,Xpp])                     #27, X++
              20a5 0d00  ld   [y,x]       9213  ld([Y,X])                       #28, peek(register15 + 2)
              20a6 c286  st   [$86]       9214  st([0x86])                      #29, spriteHeight
              20a7 de00  st   [y,x++]     9215  st([Y,Xpp])                     #30, X++
              20a8 0d00  ld   [y,x]       9216  ld([Y,X])                       #31, peek(register15 + 3)
              20a9 c287  st   [$87]       9217  st([0x87])                      #32, spriteData
              20aa 0188  ld   [$88]       9218  ld([0x88])                      #33,
              20ab a001  suba $01         9219  suba(1)                         #34,
              20ac c288  st   [$88]       9220  st([0x88])                      #35, register3--, spriteCount
                                          9221  beq('.sys_drawsprite_38')       #36,
              20ad f0b4  beq  .sys_drawsprite_38
              20ae 0116  ld   [$16]       9222  ld([vPC])                       #37,
              20af a002  suba $02         9223  suba(2)                         #38,
              20b0 c216  st   [$16]       9224  st([vPC])                       #39, restart
              20b1 1403  ld   $03,y       9225  ld(hi('NEXTY'),Y)               #40,
              20b2 e000  jmp  y,$00       9226  jmp(Y,'NEXTY')                  #41,
              20b3 00ea  ld   $ea         9227  ld(-44/2)                       #42,
                                          9228  label('.sys_drawsprite_38')
.sys_drawsprite_38:
              20b4 1403  ld   $03,y       9229  ld(hi('NEXTY'),Y)               #38,
              20b5 e000  jmp  y,$00       9230  jmp(Y,'NEXTY')                  #39,
              20b6 00eb  ld   $eb         9231  ld(-42/2)                       #40,
                                          9232
                                          9233
              20b7 0200  nop              9234  fillers(until=0xc0)
              20b8 0200  nop
              20b9 0200  nop
              * 9 times
                                          9235
                                          9236  # SYS_ScrollVTableY_vX_38, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable
                                          9237  label('SYS_ScrollVTableY_vX_38')
SYS_ScrollVTableY_vX_38:
              20c0 0125  ld   [$25]       9238  ld([sysArgs+1])                 #15,
              20c1 a001  suba $01         9239  suba(1)                         #16,
              20c2 c225  st   [$25]       9240  st([sysArgs+1])                 #17, scanCount--
                                          9241  bge('.sys_scrollvty_20')        #18,
              20c3 f4c8  bge  .sys_scrollvty_20
              20c4 1527  ld   [$27],y     9242  ld([sysArgs+3],Y)               #19, VTable.hi
              20c5 1403  ld   $03,y       9243  ld(hi('NEXTY'),Y)               #20,
              20c6 e000  jmp  y,$00       9244  jmp(Y,'NEXTY')                  #21,
              20c7 00f4  ld   $f4         9245  ld(-24/2)                       #22,
                                          9246  label('.sys_scrollvty_20')
.sys_scrollvty_20:
              20c8 1126  ld   [$26],x     9247  ld([sysArgs+2],X)               #20, VTable.low
              20c9 0d00  ld   [y,x]       9248  ld([Y,X])                       #21, scanline = peek [VTable]
              20ca 8124  adda [$24]       9249  adda([sysArgs+0])               #22, scanline += scrollOffset
              20cb a07f  suba $7f         9250  suba(0x7f)                      #23, scanline -= 0x7f
                                          9251  ble('.sys_scrollvty_26')        #24,
              20cc f8d9  ble  .sys_scrollvty_26
              20cd 807f  adda $7f         9252  adda(0x7F)                      #25, original scanline
              20ce 8088  adda $88         9253  adda(0x88)                      #26, overflow into the range 0x08 to 0x7f
              20cf ce00  st   [y,x]       9254  st([Y,X])                       #27,
              20d0 0126  ld   [$26]       9255  ld([sysArgs+2])                 #28,
              20d1 8002  adda $02         9256  adda(2)                         #29,
              20d2 c226  st   [$26]       9257  st([sysArgs+2])                 #30,
              20d3 0116  ld   [$16]       9258  ld([vPC])                       #31,
              20d4 a002  suba $02         9259  suba(2)                         #32,
              20d5 c216  st   [$16]       9260  st([vPC])                       #33, restart
              20d6 1403  ld   $03,y       9261  ld(hi('NEXTY'),Y)               #34,
              20d7 e000  jmp  y,$00       9262  jmp(Y,'NEXTY')                  #35,
              20d8 00ed  ld   $ed         9263  ld(-38/2)                       #36,
                                          9264
                                          9265  label('.sys_scrollvty_26')
.sys_scrollvty_26:
              20d9 ce00  st   [y,x]       9266  st([Y,X])                       #26,
              20da 0126  ld   [$26]       9267  ld([sysArgs+2])                 #27,
              20db 8002  adda $02         9268  adda(2)                         #28,
              20dc c226  st   [$26]       9269  st([sysArgs+2])                 #29,
              20dd 0116  ld   [$16]       9270  ld([vPC])                       #30,
              20de a002  suba $02         9271  suba(2)                         #31,
              20df c216  st   [$16]       9272  st([vPC])                       #32, restart
              20e0 1403  ld   $03,y       9273  ld(hi('REENTER'),Y)             #33,
              20e1 e0cb  jmp  y,$cb       9274  jmp(Y,'REENTER')                #34,
              20e2 00ed  ld   $ed         9275  ld(-38/2)                       #35,
                                          9276
                                          9277
              20e3 0200  nop              9278  fillers(until=0xff)
              20e4 0200  nop
              20e5 0200  nop
              * 28 times
              20ff 0200  nop              9279  align(0x100, size=0x100)
                                          9280
                                          9281  #-----------------------------------------------------------------------
                                          9282  #       More sys implementations, (0x2100)
                                          9283  #-----------------------------------------------------------------------
                                          9284  # SYS_RestoreSprite_vX_124
                                          9285  label('SYS_RestoreSprite_vX_124')
SYS_RestoreSprite_vX_124:
              2100 0186  ld   [$86]       9286  ld([0x86])                      #15, spriteEnable
                                          9287  bmi('.sys_restoresprite_18')    #16,
              2101 e877  blt  .sys_restoresprite_18
              2102 1587  ld   [$87],y     9288  ld([0x87],Y)                    #17, spriteData
              2103 09a0  ld   [y,$a0]     9289  ld([Y,0xA0])                    #18, spriteOldX
              2104 1200  ld   ac,x        9290  ld(AC,X)                        #19,
              2105 09a1  ld   [y,$a1]     9291  ld([Y,0xA1])                    #20, spriteOldY
              2106 c21d  st   [$1d]       9292  st([vTmp])                      #21,
                                          9293
              2107 09a2  ld   [y,$a2]     9294  ld([Y,0xA2])                    #22, load back0
              2108 151d  ld   [$1d],y     9295  ld([vTmp],Y)                    #23, spriteOldY
              2109 de00  st   [y,x++]     9296  st([Y,Xpp])                     #24, restore back0
                                          9297
              210a 1587  ld   [$87],y     9298  ld([0x87],Y)                    #25, spriteData
              210b 09a4  ld   [y,$a4]     9299  ld([Y,0xA4])                    #26, load back1
              210c 151d  ld   [$1d],y     9300  ld([vTmp],Y)                    #27, spriteOldY
              210d de00  st   [y,x++]     9301  st([Y,Xpp])                     #28, restore back1
                                          9302
              210e 1587  ld   [$87],y     9303  ld([0x87],Y)                    #29, spriteData
              210f 09a6  ld   [y,$a6]     9304  ld([Y,0xA6])                    #30, load back2
              2110 151d  ld   [$1d],y     9305  ld([vTmp],Y)                    #31, spriteOldY
              2111 de00  st   [y,x++]     9306  st([Y,Xpp])                     #32, restore back2
                                          9307
              2112 1587  ld   [$87],y     9308  ld([0x87],Y)                    #33, spriteData
              2113 09a8  ld   [y,$a8]     9309  ld([Y,0xA8])                    #34, load back3
              2114 151d  ld   [$1d],y     9310  ld([vTmp],Y)                    #35, spriteOldY
              2115 de00  st   [y,x++]     9311  st([Y,Xpp])                     #36, restore back3
                                          9312
              2116 1587  ld   [$87],y     9313  ld([0x87],Y)                    #37, spriteData
              2117 09aa  ld   [y,$aa]     9314  ld([Y,0xAA])                    #38, load back4
              2118 151d  ld   [$1d],y     9315  ld([vTmp],Y)                    #39, spriteOldY
              2119 de00  st   [y,x++]     9316  st([Y,Xpp])                     #40, restore back4
                                          9317
              211a 1587  ld   [$87],y     9318  ld([0x87],Y)                    #41, spriteData
              211b 09ac  ld   [y,$ac]     9319  ld([Y,0xAC])                    #42, load back5
              211c 151d  ld   [$1d],y     9320  ld([vTmp],Y)                    #43, spriteOldY
              211d de00  st   [y,x++]     9321  st([Y,Xpp])                     #44, restore back5
                                          9322
              211e 1587  ld   [$87],y     9323  ld([0x87],Y)                    #45, spriteData
              211f 09ae  ld   [y,$ae]     9324  ld([Y,0xAE])                    #46, load back6
              2120 151d  ld   [$1d],y     9325  ld([vTmp],Y)                    #47, spriteOldY
              2121 de00  st   [y,x++]     9326  st([Y,Xpp])                     #48, restore back6
                                          9327
              2122 1587  ld   [$87],y     9328  ld([0x87],Y)                    #49, spriteData
              2123 09b0  ld   [y,$b0]     9329  ld([Y,0xB0])                    #50, load back7
              2124 151d  ld   [$1d],y     9330  ld([vTmp],Y)                    #51, spriteOldY
              2125 de00  st   [y,x++]     9331  st([Y,Xpp])                     #52, restore back7
                                          9332
              2126 1587  ld   [$87],y     9333  ld([0x87],Y)                    #53, spriteData
              2127 09b2  ld   [y,$b2]     9334  ld([Y,0xB2])                    #54, load back8
              2128 151d  ld   [$1d],y     9335  ld([vTmp],Y)                    #55, spriteOldY
              2129 de00  st   [y,x++]     9336  st([Y,Xpp])                     #56, restore back8
                                          9337
              212a 0187  ld   [$87]       9338  ld([0x87])                      #57,
              212b 8001  adda $01         9339  adda(1)                         #58,
              212c d687  st   [$87],y     9340  st([0x87],Y)                    #59, spriteData++
                                          9341
              212d 09a0  ld   [y,$a0]     9342  ld([Y,0xA0])                    #60, spriteOldX
              212e 1200  ld   ac,x        9343  ld(AC,X)                        #61,
              212f 09a1  ld   [y,$a1]     9344  ld([Y,0xA1])                    #62, spriteOldY
              2130 c21d  st   [$1d]       9345  st([vTmp])                      #63,
                                          9346
              2131 09a2  ld   [y,$a2]     9347  ld([Y,0xA2])                    #64, load back0
              2132 151d  ld   [$1d],y     9348  ld([vTmp],Y)                    #65, spriteOldY
              2133 de00  st   [y,x++]     9349  st([Y,Xpp])                     #66, restore back0
                                          9350
              2134 1587  ld   [$87],y     9351  ld([0x87],Y)                    #67, spriteData
              2135 09a4  ld   [y,$a4]     9352  ld([Y,0xA4])                    #68, load back1
              2136 151d  ld   [$1d],y     9353  ld([vTmp],Y)                    #69, spriteOldY
              2137 de00  st   [y,x++]     9354  st([Y,Xpp])                     #70, restore back1
                                          9355
              2138 1587  ld   [$87],y     9356  ld([0x87],Y)                    #71, spriteData
              2139 09a6  ld   [y,$a6]     9357  ld([Y,0xA6])                    #72, load back2
              213a 151d  ld   [$1d],y     9358  ld([vTmp],Y)                    #73, spriteOldY
              213b de00  st   [y,x++]     9359  st([Y,Xpp])                     #74, restore back2
                                          9360
              213c 1587  ld   [$87],y     9361  ld([0x87],Y)                    #75, spriteData
              213d 09a8  ld   [y,$a8]     9362  ld([Y,0xA8])                    #76, load back3
              213e 151d  ld   [$1d],y     9363  ld([vTmp],Y)                    #77, spriteOldY
              213f de00  st   [y,x++]     9364  st([Y,Xpp])                     #78, restore back3
                                          9365
              2140 1587  ld   [$87],y     9366  ld([0x87],Y)                    #79, spriteData
              2141 09aa  ld   [y,$aa]     9367  ld([Y,0xAA])                    #80, load back4
              2142 151d  ld   [$1d],y     9368  ld([vTmp],Y)                    #81, spriteOldY
              2143 de00  st   [y,x++]     9369  st([Y,Xpp])                     #82, restore back4
                                          9370
              2144 1587  ld   [$87],y     9371  ld([0x87],Y)                    #83, spriteData
              2145 09ac  ld   [y,$ac]     9372  ld([Y,0xAC])                    #84, load back5
              2146 151d  ld   [$1d],y     9373  ld([vTmp],Y)                    #85, spriteOldY
              2147 de00  st   [y,x++]     9374  st([Y,Xpp])                     #86, restore back5
                                          9375
              2148 1587  ld   [$87],y     9376  ld([0x87],Y)                    #87, spriteData
              2149 09ae  ld   [y,$ae]     9377  ld([Y,0xAE])                    #88, load back6
              214a 151d  ld   [$1d],y     9378  ld([vTmp],Y)                    #89, spriteOldY
              214b de00  st   [y,x++]     9379  st([Y,Xpp])                     #90, restore back6
                                          9380
              214c 1587  ld   [$87],y     9381  ld([0x87],Y)                    #91, spriteData
              214d 09b0  ld   [y,$b0]     9382  ld([Y,0xB0])                    #92, load back7
              214e 151d  ld   [$1d],y     9383  ld([vTmp],Y)                    #93, spriteOldY
              214f de00  st   [y,x++]     9384  st([Y,Xpp])                     #94, restore back7
                                          9385
              2150 1587  ld   [$87],y     9386  ld([0x87],Y)                    #95, spriteData
              2151 09b2  ld   [y,$b2]     9387  ld([Y,0xB2])                    #96, load back8
              2152 151d  ld   [$1d],y     9388  ld([vTmp],Y)                    #97, spriteOldY
              2153 de00  st   [y,x++]     9389  st([Y,Xpp])                     #98, restore back8
                                          9390
              2154 0186  ld   [$86]       9391  ld([0x86])                      #99,
              2155 a002  suba $02         9392  suba(2)                         #100,
              2156 c286  st   [$86]       9393  st([0x86])                      #101, scanLines -= 2
                                          9394  beq('.sys_restoresprite_104')   #102,
              2157 f061  beq  .sys_restoresprite_104
              2158 0187  ld   [$87]       9395  ld([0x87])                      #103,
              2159 8001  adda $01         9396  adda(1)                         #104,
              215a c287  st   [$87]       9397  st([0x87])                      #105, spriteData++
              215b 0116  ld   [$16]       9398  ld([vPC])                       #106,
              215c a002  suba $02         9399  suba(2)                         #107,
              215d c216  st   [$16]       9400  st([vPC])                       #108, restart
              215e 1403  ld   $03,y       9401  ld(hi('REENTER'),Y)             #109,
              215f e0cb  jmp  y,$cb       9402  jmp(Y,'REENTER')                #110,
              2160 00c7  ld   $c7         9403  ld(-114/2)                      #111,
                                          9404  label('.sys_restoresprite_104')
.sys_restoresprite_104:
              2161 01a0  ld   [$a0]       9405  ld([0xA0])                      #104,
              2162 a004  suba $04         9406  suba(4)                         #105,
              2163 d2a0  st   [$a0],x     9407  st([0xA0],X)                    #106, register15 -= 4
              2164 15a1  ld   [$a1],y     9408  ld([0xA1],Y)                    #107,
              2165 0d00  ld   [y,x]       9409  ld([Y,X])                       #108, peek(register15 + 2)
              2166 c286  st   [$86]       9410  st([0x86])                      #109, spriteHeight
              2167 de00  st   [y,x++]     9411  st([Y,Xpp])                     #110, X++
              2168 0d00  ld   [y,x]       9412  ld([Y,X])                       #111, peek(register15 + 3)
              2169 c287  st   [$87]       9413  st([0x87])                      #112, spriteData
              216a 0188  ld   [$88]       9414  ld([0x88])                      #113,
              216b a001  suba $01         9415  suba(1)                         #114,
              216c c288  st   [$88]       9416  st([0x88])                      #115, numSprites--
                                          9417  beq('.sys_restoresprite_118')   #116,
              216d f074  beq  .sys_restoresprite_118
              216e 0116  ld   [$16]       9418  ld([vPC])                       #117,
              216f a002  suba $02         9419  suba(2)                         #118,
              2170 c216  st   [$16]       9420  st([vPC])                       #119, restart
              2171 1403  ld   $03,y       9421  ld(hi('NEXTY'),Y)               #120,
              2172 e000  jmp  y,$00       9422  jmp(Y,'NEXTY')                  #121,
              2173 00c2  ld   $c2         9423  ld(-124/2)                      #122,
                                          9424  label('.sys_restoresprite_118')
.sys_restoresprite_118:
              2174 1403  ld   $03,y       9425  ld(hi('NEXTY'),Y)               #118,
              2175 e000  jmp  y,$00       9426  jmp(Y,'NEXTY')                  #119,
              2176 00c3  ld   $c3         9427  ld(-122/2)                      #120,
                                          9428
                                          9429  label('.sys_restoresprite_18')
.sys_restoresprite_18:
              2177 01a0  ld   [$a0]       9430  ld([0xA0])                      #18,
              2178 a004  suba $04         9431  suba(4)                         #19,
              2179 d2a0  st   [$a0],x     9432  st([0xA0],X)                    #20, register15 -= 4
              217a 15a1  ld   [$a1],y     9433  ld([0xA1],Y)                    #21,
              217b 0d00  ld   [y,x]       9434  ld([Y,X])                       #22, peek(register15 + 2)
              217c c286  st   [$86]       9435  st([0x86])                      #23, spriteHeight
              217d de00  st   [y,x++]     9436  st([Y,Xpp])                     #24, X++
              217e 0d00  ld   [y,x]       9437  ld([Y,X])                       #25, peek(register15 + 3)
              217f c287  st   [$87]       9438  st([0x87])                      #26, spriteData
              2180 0188  ld   [$88]       9439  ld([0x88])                      #27,
              2181 a001  suba $01         9440  suba(1)                         #28,
              2182 c288  st   [$88]       9441  st([0x88])                      #29, numSprites--
                                          9442  beq('.sys_restoresprite_32')    #30,
              2183 f08a  beq  .sys_restoresprite_32
              2184 0116  ld   [$16]       9443  ld([vPC])                       #31,
              2185 a002  suba $02         9444  suba(2)                         #32,
              2186 c216  st   [$16]       9445  st([vPC])                       #33, restart
              2187 1403  ld   $03,y       9446  ld(hi('NEXTY'),Y)               #34,
              2188 e000  jmp  y,$00       9447  jmp(Y,'NEXTY')                  #35,
              2189 00ed  ld   $ed         9448  ld(-38/2)                       #36,
                                          9449  label('.sys_restoresprite_32')
.sys_restoresprite_32:
              218a 1403  ld   $03,y       9450  ld(hi('NEXTY'),Y)               #32,
              218b e000  jmp  y,$00       9451  jmp(Y,'NEXTY')                  #33,
              218c 00ee  ld   $ee         9452  ld(-36/2)                       #34,
                                          9453
                                          9454
              218d 0200  nop              9455  fillers(until=0xa0)
              218e 0200  nop
              218f 0200  nop
              * 19 times
                                          9456
                                          9457  # SYS_ScrollRectVTableY_vX_44, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable,
                                          9458  #                              sysArgs4,5=scrollStart,scrollEnd
                                          9459  label('SYS_ScrollRectVTableY_vX_44')
SYS_ScrollRectVTableY_vX_44:
              21a0 0125  ld   [$25]       9460  ld([sysArgs+1])                 #15,
              21a1 a001  suba $01         9461  suba(1)                         #16,
              21a2 c225  st   [$25]       9462  st([sysArgs+1])                 #17, scanCount--
                                          9463  bge('.sys_scrollrectvty_20')    #18,
              21a3 f4a8  bge  .sys_scrollrectvty_20
              21a4 1527  ld   [$27],y     9464  ld([sysArgs+3],Y)               #19, VTable.hi
              21a5 1403  ld   $03,y       9465  ld(hi('NEXTY'),Y)               #20,
              21a6 e000  jmp  y,$00       9466  jmp(Y,'NEXTY')                  #21,
              21a7 00f4  ld   $f4         9467  ld(-24/2)                       #22,
                                          9468  label('.sys_scrollrectvty_20')
.sys_scrollrectvty_20:
              21a8 1126  ld   [$26],x     9469  ld([sysArgs+2],X)               #20, VTable.low
              21a9 0d00  ld   [y,x]       9470  ld([Y,X])                       #21, scanline = peek [VTable]
              21aa 8124  adda [$24]       9471  adda([sysArgs+0])               #22, scanline += scrollOffset
              21ab c21d  st   [$1d]       9472  st([vTmp])                      #23,
              21ac a128  suba [$28]       9473  suba([sysArgs+4])               #24,
                                          9474  bge('.sys_scrollrectvty_27')    #25,
              21ad f4b9  bge  .sys_scrollrectvty_27
              21ae 8129  adda [$29]       9475  adda([sysArgs+5])               #26,
              21af ce00  st   [y,x]       9476  st([Y,X])                       #27,
              21b0 0126  ld   [$26]       9477  ld([sysArgs+2])                 #28,
              21b1 8002  adda $02         9478  adda(2)                         #29,
              21b2 c226  st   [$26]       9479  st([sysArgs+2])                 #30,
              21b3 0116  ld   [$16]       9480  ld([vPC])                       #31,
              21b4 a002  suba $02         9481  suba(2)                         #32,
              21b5 c216  st   [$16]       9482  st([vPC])                       #33, restart
              21b6 1403  ld   $03,y       9483  ld(hi('NEXTY'),Y)               #34,
              21b7 e000  jmp  y,$00       9484  jmp(Y,'NEXTY')                  #35,
              21b8 00ed  ld   $ed         9485  ld(-38/2)                       #36,
                                          9486
                                          9487  label('.sys_scrollrectvty_27')
.sys_scrollrectvty_27:
              21b9 011d  ld   [$1d]       9488  ld([vTmp])                      #27,
              21ba a129  suba [$29]       9489  suba([sysArgs+5])               #28,
                                          9490  blt('.sys_scrollrectvty_31')    #29,
              21bb e8c7  blt  .sys_scrollrectvty_31
              21bc 8128  adda [$28]       9491  adda([sysArgs+4])               #30,
              21bd ce00  st   [y,x]       9492  st([Y,X])                       #31,
              21be 0126  ld   [$26]       9493  ld([sysArgs+2])                 #32,
              21bf 8002  adda $02         9494  adda(2)                         #33,
              21c0 c226  st   [$26]       9495  st([sysArgs+2])                 #34,
              21c1 0116  ld   [$16]       9496  ld([vPC])                       #35,
              21c2 a002  suba $02         9497  suba(2)                         #36,
              21c3 c216  st   [$16]       9498  st([vPC])                       #37, restart
              21c4 1403  ld   $03,y       9499  ld(hi('NEXTY'),Y)               #38,
              21c5 e000  jmp  y,$00       9500  jmp(Y,'NEXTY')                  #39,
              21c6 00eb  ld   $eb         9501  ld(-42/2)                       #40,
                                          9502
                                          9503  label('.sys_scrollrectvty_31')
.sys_scrollrectvty_31:
              21c7 011d  ld   [$1d]       9504  ld([vTmp])                      #31,
              21c8 ce00  st   [y,x]       9505  st([Y,X])                       #32,
              21c9 0126  ld   [$26]       9506  ld([sysArgs+2])                 #33,
              21ca 8002  adda $02         9507  adda(2)                         #34,
              21cb c226  st   [$26]       9508  st([sysArgs+2])                 #35,
              21cc 0116  ld   [$16]       9509  ld([vPC])                       #36,
              21cd a002  suba $02         9510  suba(2)                         #37,
              21ce c216  st   [$16]       9511  st([vPC])                       #38, restart
              21cf 1403  ld   $03,y       9512  ld(hi('REENTER'),Y)             #39,
              21d0 e0cb  jmp  y,$cb       9513  jmp(Y,'REENTER')                #40,
              21d1 00ea  ld   $ea         9514  ld(-44/2)                       #41,
                                          9515
                                          9516
              21d2 0200  nop              9517  fillers(until=0xff)
              21d3 0200  nop
              21d4 0200  nop
              * 45 times
                                          9518
                                          9519  #-----------------------------------------------------------------------
                                          9520  #       PREFX3 instruction page, (0x2200), PREFIX ARG1 OPCODE ARG0
                                          9521  #-----------------------------------------------------------------------
                                          9522  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          9523  #
                                          9524  label('PREFX3_PAGE')
PREFX3_PAGE:  21ff fc03  bra  $2203       9525  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9526  # --- Page boundary ---
                                          9527  align(0x100,size=0x100)
              2200 1517  ld   [$17],y     9528  ld([vPC+1],Y)                   #1
                                          9529
                                          9530  # Fetch next instruction and execute it, but only if there are sufficient
                                          9531  # ticks left for the slowest instruction.
              2201 8115  adda [$15]       9532  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2202 e80b  blt  $220b       9533  blt('EXIT')                     #1 Escape near time out
              2203 c215  st   [$15]       9534  st([vTicks])                    #2
              2204 1116  ld   [$16],x     9535  ld([vPC],X)                     #3 PREFIX+ARG1 is 2 bytes, vPC has been incremented by 2
              2205 0200  nop              9536  nop()                           #4
              2206 c002  st   $02,[$02]   9537  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2207 0d00  ld   [y,x]       9538  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2208 de00  st   [y,x++]     9539  st([Y,Xpp])                     #7 Just X++
              2209 fe00  bra  ac          9540  bra(AC)                         #8 Dispatch
              220a 0d00  ld   [y,x]       9541  ld([Y,X])                       #9 Prefetch operand
                                          9542
                                          9543  # Resync with video driver and transfer control
              220b 800f  adda $0f         9544  adda(maxTicks)                  #3
              220c e40c  bgt  $220c       9545  bgt(pc()&255)                   #4 Resync
              220d a001  suba $01         9546  suba(1)                         #5
              220e 1401  ld   $01,y       9547  ld(hi('vBlankStart'),Y)         #6
              220f e11e  jmp  y,[$1e]     9548  jmp(Y,[vReturn])                #7 To video driver
              2210 0000  ld   $00         9549  ld(0)                           #8 AC should be 0 already. Still..
                                          9550  assert vCPU_overhead ==          9
                                          9551
                                          9552  # pc = 0x2211, Opcode = 0x11
                                          9553  # Instruction STB2: Store vAC.lo into 16bit immediate address, 22 + 20 cycles
                                          9554  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9555  label('STB2')
STB2:         2211 1425  ld   $25,y       9556  ld(hi('stb2#13'),Y)             #10
              2212 e000  jmp  y,$00       9557  jmp(Y,'stb2#13')                #11
              2213 1200  ld   ac,x        9558  ld(AC,X)                        #12
                                          9559
                                          9560  # pc = 0x2214, Opcode = 0x14
                                          9561  # Instruction STW2: Store vAC into 16bit immediate address, 22 + 22 cycles
                                          9562  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9563  label('STW2')
STW2:         2214 1425  ld   $25,y       9564  ld(hi('stw2#13'),Y)             #10
              2215 e006  jmp  y,$06       9565  jmp(Y,'stw2#13')                #11
              2216 1200  ld   ac,x        9566  ld(AC,X)                        #12
                                          9567
                                          9568  # pc = 0x2217, Opcode = 0x17
                                          9569  # Instruction XCHGB: Exchange two zero byte variables, 22 + 28 cycles
                                          9570  label('XCHGB')
XCHGB:        2217 1425  ld   $25,y       9571  ld(hi('xchgb#13'),Y)            #10
              2218 e00e  jmp  y,$0e       9572  jmp(Y,'xchgb#13')               #11
                                          9573  # dummy                         #12 Overlap
                                          9574  #
                                          9575  # pc = 0x2219, Opcode = 0x19
                                          9576  # Instruction MOVW: Move 16bits from src zero page var to dst zero page var, 22 + 30 cycles
                                          9577  label('MOVW')
MOVW:         2219 1425  ld   $25,y       9578  ld(hi('movw#13'),Y)             #10
              221a e040  jmp  y,$40       9579  jmp(Y,'movw#13')                #11
                                          9580  # dummy                         #12 Overlap
                                          9581  #
                                          9582  # pc = 0x221b, Opcode = 0x1b
                                          9583  # Instruction ADDWI: vAC += imm16, 22 + 28 cycles
                                          9584  label('ADDWI')
ADDWI:        221b 1425  ld   $25,y       9585  ld(hi('addwi#13'),Y)            #10 #12
              221c e050  jmp  y,$50       9586  jmp(Y,'addwi#13')               #11
                                          9587  # dummy                         #12 Overlap
                                          9588  #
                                          9589  # pc = 0x221d, Opcode = 0x1d
                                          9590  # Instruction SUBWI: vAC -= imm16, 22 + 28 cycles
                                          9591  label('SUBWI')
SUBWI:        221d 1425  ld   $25,y       9592  ld(hi('subwi#13'),Y)            #10 #12
              221e e06b  jmp  y,$6b       9593  jmp(Y,'subwi#13')               #11
                                          9594  # dummy                         #12 Overlap
                                          9595  #
                                          9596  # pc = 0x221f, Opcode = 0x1f
                                          9597  # Instruction ANDWI: vAC &= imm16, 22 + 22 cycles
                                          9598  label('ANDWI')
ANDWI:        221f 1425  ld   $25,y       9599  ld(hi('andwi#13'),Y)            #10 #12
              2220 e09d  jmp  y,$9d       9600  jmp(Y,'andwi#13')               #11
                                          9601  # dummy                         #12 Overlap
                                          9602  #
                                          9603  # pc = 0x2221, Opcode = 0x21
                                          9604  # Instruction ORWI: vAC |= imm16, 22 + 22 cycles
                                          9605  label('ORWI')
ORWI:         2221 1425  ld   $25,y       9606  ld(hi('orwi#13'),Y)             #10 #12
              2222 e0a5  jmp  y,$a5       9607  jmp(Y,'orwi#13')                #11
                                          9608  # dummy                         #12 Overlap
                                          9609  #
                                          9610  # pc = 0x2223, Opcode = 0x23
                                          9611  # Instruction XORWI: vAC ^= imm16, 22 + 22 cycles
                                          9612  label('XORWI')
XORWI:        2223 1425  ld   $25,y       9613  ld(hi('xorwi#13'),Y)            #10 #12
              2224 e0ad  jmp  y,$ad       9614  jmp(Y,'xorwi#13')               #11
                                          9615  # dummy                         #12 Overlap
                                          9616  #
                                          9617  # pc = 0x2225, Opcode = 0x25
                                          9618  # Instruction FNT6X8: fontTable = FNT6X8(char), vAC = index(char), 22 + 42 cycles
                                          9619  label('FNT6X8')
FNT6X8:       2225 1435  ld   $35,y       9620  ld(hi('fnt6x8#13'),Y)           #10
              2226 e02a  jmp  y,$2a       9621  jmp(Y,'fnt6x8#13')              #11
              2227 c22a  st   [$2a]       9622  st([sysArgs+6])                 #12 fontChr addr
                                          9623
                                          9624  # pc = 0x2228, Opcode = 0x28
                                          9625  # Instruction FNT4X6: fontTable = FNT4X6(char), vAC = index(char), 22 + 42 cycles
                                          9626  label('FNT4X6')
FNT4X6:       2228 1435  ld   $35,y       9627  ld(hi('fnt4x6#13'),Y)           #10
              2229 e051  jmp  y,$51       9628  jmp(Y,'fnt4x6#13')              #11
                                          9629  # dummy                         #12 Overlap
                                          9630  #
                                          9631  # pc = 0x222a, Opcode = 0x2a
                                          9632  # Instruction CONDII: chooses immediate operand based on condition, (vAC == 0), 22 + 26 cycles
                                          9633  label('CONDII')
CONDII:       222a 1425  ld   $25,y       9634  ld(hi('condii#13'),Y)           #10 #12
              222b e0b5  jmp  y,$b5       9635  jmp(Y,'condii#13')              #11
                                          9636  # dummy                         #12 Overlap
                                          9637  #
                                          9638  # pc = 0x222c, Opcode = 0x2c
                                          9639  # Instruction CONDBB: chooses zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9640  label('CONDBB')
CONDBB:       222c 1425  ld   $25,y       9641  ld(hi('condbb#13'),Y)           #10 #12
              222d e0c2  jmp  y,$c2       9642  jmp(Y,'condbb#13')              #11
              222e 1200  ld   ac,x        9643  ld(AC,X)                        #12
                                          9644
                                          9645  # pc = 0x222f, Opcode = 0x2f
                                          9646  # Instruction CONDIB: chooses between imm and zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9647  label('CONDIB')
CONDIB:       222f 1425  ld   $25,y       9648  ld(hi('condib#13'),Y)           #10
              2230 e0d1  jmp  y,$d1       9649  jmp(Y,'condib#13')              #11
              2231 c21d  st   [$1d]       9650  st([vTmp])                      #12
                                          9651
                                          9652  # pc = 0x2232, Opcode = 0x32
                                          9653  # Instruction CONDBI: chooses between zero page byte var and imm based on condition, (vAC == 0), 22 + 26 cycles
                                          9654  label('CONDBI')
CONDBI:       2232 1425  ld   $25,y       9655  ld(hi('condbi#13'),Y)           #10
              2233 e0de  jmp  y,$de       9656  jmp(Y,'condbi#13')              #11
                                          9657  # dummy                         #12 Overlap
                                          9658  #
                                          9659  # pc = 0x2234, Opcode = 0x34
                                          9660  # Instruction XCHGW: Exchange two zero word variables, 22 + 46 cycles
                                          9661  label('XCHGW')
XCHGW:        2234 1425  ld   $25,y       9662  ld(hi('xchgw#13'),Y)            #10 #12
              2235 e01c  jmp  y,$1c       9663  jmp(Y,'xchgw#13')               #11
              2236 c22a  st   [$2a]       9664  st([sysArgs+6])                 #12 var1
                                          9665
                                          9666  # pc = 0x2237, Opcode = 0x37
                                          9667  # Instruction OSCPX:
                                          9668  label('OSCPX')
OSCPX:        2237 1428  ld   $28,y       9669  ld(hi('oscpx#13'),Y)            #10
              2238 e0d4  jmp  y,$d4       9670  jmp(Y,'oscpx#13')               #11
                                          9671  # dummy                         #12 Overlap
                                          9672  #
                                          9673  # pc = 0x2239, Opcode = 0x39
                                          9674  # Instruction SWAPB: Swap two bytes in memory, 22 + 46 cycles
                                          9675  label('SWAPB')
SWAPB:        2239 1429  ld   $29,y       9676  ld(hi('swapb#13'),Y)            #10 #12
              223a e093  jmp  y,$93       9677  jmp(Y,'swapb#13')               #11
              223b 1200  ld   ac,x        9678  ld(AC,X)                        #12 var1
                                          9679  #
                                          9680  # pc = 0x223c, Opcode = 0x3c
                                          9681  # Instruction SWAPW: Swap two words in memory, 22 + 58 cycles
                                          9682  label('SWAPW')
SWAPW:        223c 1429  ld   $29,y       9683  ld(hi('swapw#13'),Y)            #10
              223d e0b8  jmp  y,$b8       9684  jmp(Y,'swapw#13')               #11
              223e 1200  ld   ac,x        9685  ld(AC,X)                        #12 var1
                                          9686
                                          9687  # pc = 0x223f, Opcode = 0x3f
                                          9688  # Instruction NEEKA: Peek <n> bytes from [vAC] into [var], 22 + 34*n + 24 cycles
                                          9689  label('NEEKA')
NEEKA:        223f 142a  ld   $2a,y       9690  ld(hi('neeka#13'),Y)            #10
              2240 e06e  jmp  y,$6e       9691  jmp(Y,'neeka#13')               #11
              2241 c22a  st   [$2a]       9692  st([sysArgs+6])                 #12 var
                                          9693
                                          9694  # pc = 0x2242, Opcode = 0x42
                                          9695  # Instruction NOKEA: Poke <n> bytes from [var] into [vAC], 22 + 34*n + 24 cycles
                                          9696  label('NOKEA')
NOKEA:        2242 142a  ld   $2a,y       9697  ld(hi('nokea#13'),Y)            #10
              2243 e08a  jmp  y,$8a       9698  jmp(Y,'nokea#13')               #11
              2244 c22a  st   [$2a]       9699  st([sysArgs+6])                 #12 var
                                          9700
                                          9701  # pc = 0x2245, Opcode = 0x45
                                          9702  # Instruction ADDVL: Add two 32bit zero page vars, dst += src, 22 + 78 cycles
                                          9703  label('ADDVL')
ADDVL:        2245 142b  ld   $2b,y       9704  ld(hi('addvl#13'),Y)            #10
              2246 e02f  jmp  y,$2f       9705  jmp(Y,'addvl#13')               #11
              2247 d22a  st   [$2a],x     9706  st([sysArgs+6],X)               #12 src var
                                          9707
                                          9708  # pc = 0x2248, Opcode = 0x48
                                          9709  # Instruction SUBVL: Subtract two 32bit zero page vars, dst -= src, 22 + 74 cycles
                                          9710  label('SUBVL')
SUBVL:        2248 142b  ld   $2b,y       9711  ld(hi('subvl#13'),Y)            #10
              2249 e079  jmp  y,$79       9712  jmp(Y,'subvl#13')               #11
              224a d22a  st   [$2a],x     9713  st([sysArgs+6],X)               #12 src var
                                          9714
                                          9715  # pc = 0x224c, Opcode = 0x4c
                                          9716  # Instruction ANDVL: And two 32bit zero page vars, dst &= src, 22 + 46 cycles
                                          9717  label('ANDVL')
ANDVL:        224b 142b  ld   $2b,y       9718  ld(hi('andvl#13'),Y)            #10
              224c e0c5  jmp  y,$c5       9719  jmp(Y,'andvl#13')               #11
              224d 1200  ld   ac,x        9720  ld(AC,X)                        #12 src var
                                          9721
                                          9722  # pc = 0x224e, Opcode = 0x4e
                                          9723  # Instruction ORVL: Or two 32bit zero page vars, dst |= src, 22 + 46 cycles
                                          9724  label('ORVL')
ORVL:         224e 142c  ld   $2c,y       9725  ld(hi('orvl#13'),Y)             #10
              224f e000  jmp  y,$00       9726  jmp(Y,'orvl#13')                #11
              2250 1200  ld   ac,x        9727  ld(AC,X)                        #12 src var
                                          9728
                                          9729  # pc = 0x2251, Opcode = 0x51
                                          9730  # Instruction XORVL: Xor two 32bit zero page vars, dst ^= src, 22 + 76 cycles
                                          9731  label('XORVL')
XORVL:        2251 142c  ld   $2c,y       9732  ld(hi('xorvl#13'),Y)            #10
              2252 e024  jmp  y,$24       9733  jmp(Y,'xorvl#13')               #11
              2253 1200  ld   ac,x        9734  ld(AC,X)                        #12 src var
                                          9735
                                          9736  # pc = 0x2254, Opcode = 0x54
                                          9737  # Instruction JEQL: 22 + 40 cycles
                                          9738  label('JEQL')
JEQL:         2254 142d  ld   $2d,y       9739  ld(hi('jeql#13'),Y)             #10
              2255 e000  jmp  y,$00       9740  jmp(Y,'jeql#13')                #11
              2256 c22a  st   [$2a]       9741  st([sysArgs+6])                 #12 jump.hi
                                          9742
                                          9743  # pc = 0x2257, Opcode = 0x57
                                          9744  # Instruction JNEL: 22 + 40 cycles
                                          9745  label('JNEL')
JNEL:         2257 142d  ld   $2d,y       9746  ld(hi('jnel#13'),Y)             #10
              2258 e022  jmp  y,$22       9747  jmp(Y,'jnel#13')                #11
              2259 c22a  st   [$2a]       9748  st([sysArgs+6])                 #12 jump.hi
                                          9749
                                          9750  # pc = 0x225a, Opcode = 0x5a
                                          9751  # Instruction JLTL: 22 + 26 cycles
                                          9752  label('JLTL')
JLTL:         225a 142d  ld   $2d,y       9753  ld(hi('jltl#13'),Y)             #10
              225b e044  jmp  y,$44       9754  jmp(Y,'jltl#13')                #11
              225c c22a  st   [$2a]       9755  st([sysArgs+6])                 #12 jump.hi
                                          9756
                                          9757  # pc = 0x225d, Opcode = 0x5d
                                          9758  # Instruction JGTL: 22 + 42 cycles
                                          9759  label('JGTL')
JGTL:         225d 142d  ld   $2d,y       9760  ld(hi('jgtl#13'),Y)             #10
              225e e053  jmp  y,$53       9761  jmp(Y,'jgtl#13')                #11
              225f c22a  st   [$2a]       9762  st([sysArgs+6])                 #12 jump.hi
                                          9763
                                          9764  # pc = 0x2260, Opcode = 0x60
                                          9765  # Instruction JLEL: 22 + 42 cycles
                                          9766  label('JLEL')
JLEL:         2260 142d  ld   $2d,y       9767  ld(hi('jlel#13'),Y)             #10
              2261 e07a  jmp  y,$7a       9768  jmp(Y,'jlel#13')                #11
              2262 c22a  st   [$2a]       9769  st([sysArgs+6])                 #12 jump.hi
                                          9770
                                          9771  # pc = 0x2263, Opcode = 0x63
                                          9772  # Instruction JGEL: 22 + 26 cycles
                                          9773  label('JGEL')
JGEL:         2263 142d  ld   $2d,y       9774  ld(hi('jgel#13'),Y)             #10
              2264 e0a5  jmp  y,$a5       9775  jmp(Y,'jgel#13')                #11
              2265 c22a  st   [$2a]       9776  st([sysArgs+6])                 #12 jump.hi
                                          9777
                                          9778  # pc = 0x2266, Opcode = 0x66
                                          9779  # Instruction ANDBI: And immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9780  label('ANDBI')
ANDBI:        2266 142e  ld   $2e,y       9781  ld(hi('andbi#13'),Y)            #10
              2267 e000  jmp  y,$00       9782  jmp(Y,'andbi#13')               #11
              2268 1200  ld   ac,x        9783  ld(AC,X)                        #12 address of var
                                          9784
                                          9785  # pc = 0x2269, Opcode = 0x69
                                          9786  # Instruction ORBI: OR immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9787  label('ORBI')
ORBI:         2269 142e  ld   $2e,y       9788  ld(hi('orbi#13'),Y)             #10
              226a e006  jmp  y,$06       9789  jmp(Y,'orbi#13')                #11
              226b 1200  ld   ac,x        9790  ld(AC,X)                        #12 address of var
                                          9791
                                          9792  # pc = 0x226c, Opcode = 0x6c
                                          9793  # Instruction XORBI: var.lo ^= imm, 22 + 20 cycles
                                          9794  label('XORBI')
XORBI:        226c 142e  ld   $2e,y       9795  ld(hi('xorbi#13'),Y)            #10
              226d e00c  jmp  y,$0c       9796  jmp(Y,'xorbi#13')               #11
              226e 1200  ld   ac,x        9797  ld(AC,X)                        #12 address of var
                                          9798
                                          9799  # pc = 0x226f, Opcode = 0x6f
                                          9800  # Instruction ANDBK: vAC.hi = 0, vAC.lo = var.lo & imm, 22 + 22 cycles
                                          9801  label('ANDBK')
ANDBK:        226f 142e  ld   $2e,y       9802  ld(hi('andbk#13'),Y)            #10
              2270 e012  jmp  y,$12       9803  jmp(Y,'andbk#13')               #11
              2271 1200  ld   ac,x        9804  ld(AC,X)                        #12 address of var
                                          9805
                                          9806  # pc = 0x2272, Opcode = 0x72
                                          9807  # Instruction ORBK: vAC.lo = var.lo | imm, 22 + 22 cycles
                                          9808  label('ORBK')
ORBK:         2272 142e  ld   $2e,y       9809  ld(hi('orbk#13'),Y)             #10
              2273 e01a  jmp  y,$1a       9810  jmp(Y,'orbk#13')                #11
              2274 1200  ld   ac,x        9811  ld(AC,X)                        #12 address of var
                                          9812
                                          9813  # pc = 0x2275, Opcode = 0x75
                                          9814  # Instruction XORBK: vAC.lo = var.lo ^ imm, 22 + 22 cycles
                                          9815  label('XORBK')
XORBK:        2275 142e  ld   $2e,y       9816  ld(hi('xorbk#13'),Y)            #10
              2276 e022  jmp  y,$22       9817  jmp(Y,'xorbk#13')               #11
              2277 1200  ld   ac,x        9818  ld(AC,X)                        #12 address of var
                                          9819
                                          9820  # pc = 0x2278, Opcode = 0x78
                                          9821  # Instruction JMPI, (lb3361): Jump to 16bit address, preserve vLR, 22 + 20 cycles
                                          9822  label('JMPI')
JMPI:         2278 1428  ld   $28,y       9823  ld(hi('jmpi#13'),Y)             #10
              2279 e05e  jmp  y,$5e       9824  jmp(Y,'jmpi#13')                #11
              227a a002  suba $02         9825  suba(2)                         #12
                                          9826
                                          9827  # pc = 0x227b, Opcode = 0x7b
                                          9828  # Instruction SUBIW: vAC = imm16 - vAC, 22 + 28 cycles
                                          9829  label('SUBIW')
SUBIW:        227b 1425  ld   $25,y       9830  ld(hi('subiw#13'),Y)            #10 #12
              227c e083  jmp  y,$83       9831  jmp(Y,'subiw#13')               #11
                                          9832  # dummy                         #12 Overlap
                                          9833  #
                                          9834  # pc = 0x227d, Opcode = 0x7d
                                          9835  # Instruction VADDBW: dst.0 += src.0, dst.1 += src.1, 22 + 30 cycles
                                          9836  label('VADDBW')
VADDBW:       227d 142e  ld   $2e,y       9837  ld(hi('vaddbw#13'),Y)           #10 overlap
              227e e02a  jmp  y,$2a       9838  jmp(Y,'vaddbw#13')              #11
              227f 1200  ld   ac,x        9839  ld(AC,X)                        #12 src var
                                          9840
                                          9841  # pc = 0x2280, Opcode = 0x80
                                          9842  # Instruction VSUBBW: dst.0 -= src.0, dst.1 -= src.1, 22 + 30 cycles
                                          9843  label('VSUBBW')
VSUBBW:       2280 142e  ld   $2e,y       9844  ld(hi('vsubbw#13'),Y)           #10
              2281 e03a  jmp  y,$3a       9845  jmp(Y,'vsubbw#13')              #11
              2282 1200  ld   ac,x        9846  ld(AC,X)                        #12 src var
                                          9847
                                          9848  # pc = 0x2283, Opcode = 0x83
                                          9849  # Instruction VADDBL: dst.0 += src.0, dst.1 += src.1, dst.2 += src.2, dst.3 += src.3, 22 + 46 cycles
                                          9850  label('VADDBL')
VADDBL:       2283 1434  ld   $34,y       9851  ld(hi('vaddbl#13'),Y)           #10
              2284 e0aa  jmp  y,$aa       9852  jmp(Y,'vaddbl#13')              #11
              2285 1200  ld   ac,x        9853  ld(AC,X)                        #12 src var
                                          9854
                                          9855  # pc = 0x2286, Opcode = 0x86
                                          9856  # Instruction VSUBBL: dst.0 -= src.0, dst.1 -= src.1, dst.2 -= src.2, dst.3 -= src.3, 22 + 46 cycles
                                          9857  label('VSUBBL')
VSUBBL:       2286 1434  ld   $34,y       9858  ld(hi('vsubbl#13'),Y)           #10
              2287 e0cf  jmp  y,$cf       9859  jmp(Y,'vsubbl#13')              #11
              2288 1200  ld   ac,x        9860  ld(AC,X)                        #12 src var
                                          9861
                                          9862  # pc = 0x2289 Opcode = 0x89
                                          9863  # Instruction CMPII: if vAC < imm0 vAC=-1, if vAC >= imm1 vAC=1, else vAC=0, 22 + 28 cycles
                                          9864  label('CMPII')
CMPII:        2289 1436  ld   $36,y       9865  ld(hi('cmpii#13'),Y)            #10
              228a e00e  jmp  y,$0e       9866  jmp(Y,'cmpii#13')               #11
                                          9867  # dummy                         #12 Overlap
                                          9868  #
                                          9869  # pc = 0x228b, Opcode = 0x8b
                                          9870  # Instruction IMIDI: init midi, var midiStream, var midiDelay, 22 + 40 cycles
                                          9871  label('IMIDI')
IMIDI:        228b 1431  ld   $31,y       9872  ld(hi('imidi#13'),Y)            #10
              228c e048  jmp  y,$48       9873  jmp(Y,'imidi#13')               #11
              228d d22a  st   [$2a],x     9874  st([sysArgs+6],X)               #12 midi stream
                                          9875
                                          9876  # pc = 0x228e, Opcode = 0x8e
                                          9877  # Instruction PMIDI: play midi without volume, var midiStream, var midiDelay, 22 + 88 cycles
                                          9878  label('PMIDI')
PMIDI:        228e 1431  ld   $31,y       9879  ld(hi('pmidi#13'),Y)            #10
              228f e06e  jmp  y,$6e       9880  jmp(Y,'pmidi#13')               #11
              2290 d22a  st   [$2a],x     9881  st([sysArgs+6],X)               #12 midi stream
                                          9882
                                          9883  # pc = 0x2291, Opcode = 0x91
                                          9884  # Instruction PMIDIV: play midi with volume, var midiStream, var midiDelay, 22 + 106 cycles
                                          9885  label('PMIDIV')
PMIDIV:       2291 1437  ld   $37,y       9886  ld(hi('pmidiv#13'),Y)           #10
              2292 e000  jmp  y,$00       9887  jmp(Y,'pmidiv#13')              #11
              2293 d22a  st   [$2a],x     9888  st([sysArgs+6],X)               #12 midi stream
                                          9889
                                          9890  # pc = 0x2294, Opcode = 0x94
                                          9891  # Instruction MERGE4: merge four arrays into one, 22 + 126 cycles
                                          9892  label('MERGE4')
MERGE4:       2294 1439  ld   $39,y       9893  ld(hi('merge4#13'),Y)           #10
              2295 e000  jmp  y,$00       9894  jmp(Y,'merge4#13')              #11
              2296 c22a  st   [$2a]       9895  st([sysArgs+6])                 #12 output.lo
                                          9896
                                          9897  # SYS calls and instruction implementations rely on these
              2297 0200  nop              9898  fillers(until=0xca)
              2298 0200  nop
              2299 0200  nop
              * 51 times
              22ca 00f2  ld   $f2         9899  ld(-28/2)                       #25
              22cb fc01  bra  $2201       9900  bra('NEXT')                     #26 Return from SYS calls
              22cc 1517  ld   [$17],y     9901  ld([vPC+1],Y)                   #27
                                          9902
                                          9903  # pc = 0x22cd, Opcode = 0xcd
                                          9904  # Instruction MOVL (lb3361): Move long variable. 22+40 cycles
                                          9905  label('MOVL')
MOVL:         22cd 1432  ld   $32,y       9906  ld(hi('movl#13'),Y)             #10
              22ce e000  jmp  y,$00       9907  jmp(Y,'movl#13')                #11
              22cf c22a  st   [$2a]       9908  st([sysArgs+6])                 #12
                                          9909
                                          9910  # pc = 0x22d0, Opcode = 0xd0
                                          9911  # Instruction MOVF (lb3361): Move float variable. 22+46 cycles
                                          9912  label('MOVF')
MOVF:         22d0 1432  ld   $32,y       9913  ld(hi('movf#13'),Y)             #10
              22d1 e01f  jmp  y,$1f       9914  jmp(Y,'movf#13')                #11
              22d2 c22a  st   [$2a]       9915  st([sysArgs+6])                 #12
                                          9916
                                          9917  # pc = 0x22d3 Opcode = 0xd3
                                          9918  # Instruction NROL (lb3361): Left rotate n bytes. 22+18+n*18
                                          9919  # Shift vACsign<-bit(8n-1)<-...<-bit(0)<-vACsign. Destroys vAC
                                          9920  # Encoding: [0xc7,v,0xd3,v+n]
                                          9921  label('NROL')
NROL:         22d3 1434  ld   $34,y       9922  ld(hi('nrol#13'),Y)             #10
              22d4 e010  jmp  y,$10       9923  jmp(Y,'nrol#13')                #11
              22d5 c22a  st   [$2a]       9924  st([sysArgs+6])                 #12
                                          9925
                                          9926  # pc = 0x22d6 Opcode = 0xd6
                                          9927  # Instruction NROR (lb3361): Right rotate n bytes. 22+26+n*32
                                          9928  # Shift vACsign->bit(8n-1)->...->bit(0)->vACsign. Destroys vAC
                                          9929  # Encoding: [0xc7,v+n,0xd6,v]
                                          9930  label('NROR')
NROR:         22d6 1434  ld   $34,y       9931  ld(hi('nror#13'),Y)             #10
              22d7 e034  jmp  y,$34       9932  jmp(Y,'nror#13')                #11
              22d8 c22a  st   [$2a]       9933  st([sysArgs+6])                 #12
                                          9934
                                          9935
                                          9936
              22d9 0200  nop              9937  fillers(until=0xff)
              22da 0200  nop
              22db 0200  nop
              * 38 times
                                          9938
                                          9939  #-----------------------------------------------------------------------
                                          9940  #       PREFX2 instruction page, (0x2300), PREFIX ARG0 OPCODE
                                          9941  #-----------------------------------------------------------------------
                                          9942  #
                                          9943  label('PREFX2_PAGE')
PREFX2_PAGE:  22ff fc03  bra  $2303       9944  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9945  # --- Page boundary ---
                                          9946  align(0x100,size=0x100)
              2300 1517  ld   [$17],y     9947  ld([vPC+1],Y)                   #1
                                          9948
                                          9949  # Fetch next instruction and execute it, but only if there are sufficient
                                          9950  # ticks left for the slowest instruction.
              2301 8115  adda [$15]       9951  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2302 e80b  blt  $230b       9952  blt('EXIT')                     #1 Escape near time out
              2303 c215  st   [$15]       9953  st([vTicks])                    #2
              2304 0116  ld   [$16]       9954  ld([vPC])                       #3 PREFIX+ARG0 is 2 bytes, vPC has been incremented by 1
              2305 9001  adda $01,x       9955  adda(1,X)                       #4 point to opcode
              2306 c002  st   $02,[$02]   9956  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2307 0d00  ld   [y,x]       9957  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2308 de00  st   [y,x++]     9958  st([Y,Xpp])                     #7 Just X++
              2309 fe00  bra  ac          9959  bra(AC)                         #8 Dispatch
              230a 012b  ld   [$2b]       9960  ld([sysArgs+7])                 #9 Operand
                                          9961
                                          9962  # Resync with video driver and transfer control
              230b 800f  adda $0f         9963  adda(maxTicks)                  #3
              230c e40c  bgt  $230c       9964  bgt(pc()&255)                   #4 Resync
              230d a001  suba $01         9965  suba(1)                         #5
              230e 1401  ld   $01,y       9966  ld(hi('vBlankStart'),Y)         #6
              230f e11e  jmp  y,[$1e]     9967  jmp(Y,[vReturn])                #7 To video driver
              2310 0000  ld   $00         9968  ld(0)                           #8 AC should be 0 already. Still..
                                          9969  assert vCPU_overhead ==          9
                                          9970
                                          9971  # pc = 0x2311, Opcode = 0x11
                                          9972  # Instruction LSLN: Logical shift left vAC, (16bit), n times, 22 + 30*n + 20 cycles
                                          9973  label('LSLN')
LSLN:         2311 1426  ld   $26,y       9974  ld(hi('lsln#13'),Y)             #10
              2312 e000  jmp  y,$00       9975  jmp(Y,'lsln#13')                #11
                                          9976  # dummy                         #12 Overlap
                                          9977  #
                                          9978  # pc = 0x2313, Opcode = 0x13
                                          9979  # Instruction SEXT: Sign extend vAC based on a variable mask, 22 + 24 cycles
                                          9980  label('SEXT')
SEXT:         2313 1426  ld   $26,y       9981  ld(hi('sext#13'),Y)             #10 #12
              2314 e013  jmp  y,$13       9982  jmp(Y,'sext#13')                #11
                                          9983  # dummy                         #12 Overlap
                                          9984  #
                                          9985  # pc = 0x2315, Opcode = 0x15
                                          9986  # Instruction NOTW: Boolean invert var, 22 + 26 cycles
                                          9987  label('NOTW')
NOTW:         2315 1426  ld   $26,y       9988  ld(hi('notw#13'),Y)             #10 #12
              2316 e020  jmp  y,$20       9989  jmp(Y,'notw#13')                #11
                                          9990  # dummy                         #12 Overlap
                                          9991  #
                                          9992  # pc = 0x2317, Opcode = 0x17
                                          9993  # Instruction NEGW: Arithmetic negate var, 22 + 28 cycles
                                          9994  label('NEGW')
NEGW:         2317 1426  ld   $26,y       9995  ld(hi('negw#13'),Y)             #10 #12
              2318 e02b  jmp  y,$2b       9996  jmp(Y,'negw#13')                #11
                                          9997  # dummy                         #12 Overlap
                                          9998  #
                                          9999  # pc = 0x2319, Opcode = 0x19
                                          10000  # Instruction ANDBA: vAC &= var.lo, 22 + 22 cycles
                                          10001  label('ANDBA')
ANDBA:        2319 1426  ld   $26,y       10002  ld(hi('andba#13'),Y)            #10 #12
              231a e03f  jmp  y,$3f       10003  jmp(Y,'andba#13')               #11
              231b 1200  ld   ac,x        10004  ld(AC,X)                        #12
                                          10005
                                          10006  # pc = 0x231c, Opcode = 0x1c
                                          10007  # Instruction ORBA: vAC |= var.lo, 22 + 20 cycles
                                          10008  label('ORBA')
ORBA:         231c 1426  ld   $26,y       10009  ld(hi('orba#13'),Y)             #10
              231d e047  jmp  y,$47       10010  jmp(Y,'orba#13')                #11
              231e 1200  ld   ac,x        10011  ld(AC,X)                        #12
                                          10012
                                          10013  # pc = 0x231f, Opcode = 0x1f
                                          10014  # Instruction XORBA: vAC ^= var.lo, 22 + 20 cycles
                                          10015  label('XORBA')
XORBA:        231f 1426  ld   $26,y       10016  ld(hi('xorba#13'),Y)            #10
              2320 e04d  jmp  y,$4d       10017  jmp(Y,'xorba#13')               #11
              2321 1200  ld   ac,x        10018  ld(AC,X)                        #12
                                          10019
                                          10020  # pc = 0x2322, Opcode = 0x22
                                          10021  # Instruction FREQM: [(((chan & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [0..3], 22 + 26 cycles
                                          10022  label('FREQM')
FREQM:        2322 1426  ld   $26,y       10023  ld(hi('freqm#13'),Y)            #10
              2323 e053  jmp  y,$53       10024  jmp(Y,'freqm#13')               #11
                                          10025  # dummy                         #12 Overlap
                                          10026  #
                                          10027  # pc = 0x2324, Opcode = 0x24
                                          10028  # Instruction FREQA: [((((chan - 1) & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [1..4], 22 + 26 cycles
                                          10029  label('FREQA')
FREQA:        2324 1426  ld   $26,y       10030  ld(hi('freqa#13'),Y)            #10 #12
              2325 e05f  jmp  y,$5f       10031  jmp(Y,'freqa#13')               #11
              2326 1200  ld   ac,x        10032  ld(AC,X)                        #12
                                          10033
                                          10034  # pc = 0x2327, Opcode = 0x27
                                          10035  # Instruction FREQI: [(((imm & 3) + 1) <<8) | 0x00FC] = vAC, chan imm = [0..3], 22 + 24 cycles
                                          10036  label('FREQI')
FREQI:        2327 1426  ld   $26,y       10037  ld(hi('freqi#13'),Y)            #10
              2328 e06b  jmp  y,$6b       10038  jmp(Y,'freqi#13')               #11
                                          10039  # dummy                         #12 Overlap
                                          10040  #
                                          10041  # pc = 0x2329, Opcode = 0x29
                                          10042  # Instruction VOLM: [(((chan & 3) + 1) <<8) | 0x00FA] = vAC.low, chan var = [0..3], 22 + 24 cycles
                                          10043  label('VOLM')
VOLM:         2329 1426  ld   $26,y       10044  ld(hi('volm#13'),Y)             #10 #12
              232a e075  jmp  y,$75       10045  jmp(Y,'volm#13')                #11
              232b 1200  ld   ac,x        10046  ld(AC,X)                        #12
                                          10047
                                          10048  # pc = 0x232c, Opcode = 0x2c
                                          10049  # Instruction VOLA: [((((chan - 1) & 3) + 1) <<8) | 0x00FA] = 63 - vAC.low + 64, chan var = [1..4],  22 + 26 cycles
                                          10050  label('VOLA')
VOLA:         232c 1426  ld   $26,y       10051  ld(hi('vola#13'),Y)             #10
              232d e07e  jmp  y,$7e       10052  jmp(Y,'vola#13')                #11
              232e 1200  ld   ac,x        10053  ld(AC,X)                        #12
                                          10054
                                          10055  # pc = 0x232f, Opcode = 0x2f
                                          10056  # Instruction MODA: [((((chan - 1) & 3) + 1) <<8) | 0x00FB] = vAC.low, chan var = [1..4], 22 + 24 cycles
                                          10057  label('MODA')
MODA:         232f 1426  ld   $26,y       10058  ld(hi('moda#13'),Y)             #10
              2330 e08a  jmp  y,$8a       10059  jmp(Y,'moda#13')                #11
              2331 1200  ld   ac,x        10060  ld(AC,X)                        #12
                                          10061
                                          10062  # pc = 0x2332, Opcode = 0x32
                                          10063  # Instruction MODI: [(((imm & 3) + 1) <<8) | 0x00FA] = (vAC.lo <<8) | 0, chan imm = [0..3], 22 + 24 cycles
                                          10064  label('MODI')
MODI:         2332 1426  ld   $26,y       10065  ld(hi('modi#13'),Y)             #10
              2333 e094  jmp  y,$94       10066  jmp(Y,'modi#13')                #11
                                          10067  # dummy                         #12 Overlap
                                          10068  #
                                          10069  # pc = 0x2334, Opcode = 0x34
                                          10070  # Instruction SMPCPY:
                                          10071  label('SMPCPY')
SMPCPY:       2334 1426  ld   $26,y       10072  ld(hi('smpcpy#13'),Y)           #10 #12
              2335 e0a5  jmp  y,$a5       10073  jmp(Y,'smpcpy#13')              #11
              2336 1200  ld   ac,x        10074  ld(AC,X)                        #12
                                          10075
                                          10076  # pc = 0x2337, Opcode = 0x37
                                          10077  # Instruction CMPHS: Adjust high byte for signed compare (vACH=XXX), 22 + 26 cycles
                                          10078  label('CMPHS')
CMPHS:        2337 1426  ld   $26,y       10079  ld(hi('cmphs#13'),Y)            #10
              2338 e0e0  jmp  y,$e0       10080  jmp(Y,'cmphs#13')               #11
              2339 1200  ld   ac,x        10081  ld(AC,X)                        #12
                                          10082
                                          10083  # pc = 0x233a, Opcode = 0x3a
                                          10084  # Instruction CMPHU: Adjust high byte for unsigned compare (vACH=XXX), 22 + 26 cycles
                                          10085  label('CMPHU')
CMPHU:        233a 1426  ld   $26,y       10086  ld(hi('cmphu#13'),Y)            #10
              233b e0ed  jmp  y,$ed       10087  jmp(Y,'cmphu#13')               #11
              233c 1200  ld   ac,x        10088  ld(AC,X)                        #12
                                          10089
                                          10090  # pc = 0x233d, Opcode = 0x3d
                                          10091  # Instruction LEEKA:
                                          10092  label('LEEKA')
LEEKA:        233d 1429  ld   $29,y       10093  ld(hi('leeka#13'),Y)            #10
              233e e000  jmp  y,$00       10094  jmp(Y,'leeka#13')               #11
                                          10095  # dummy                         #12 Overlap
                                          10096  #
                                          10097  # pc = 0x233f, Opcode = 0x3f
                                          10098  # Instruction LOKEA:
                                          10099  label('LOKEA')
LOKEA:        233f 1429  ld   $29,y       10100  ld(hi('lokea#13'),Y)            #10 #12
              2340 e023  jmp  y,$23       10101  jmp(Y,'lokea#13')               #11
                                          10102  # dummy                         #12 Overlap
                                          10103  #
                                          10104  # pc = 0x2341, Opcode = 0x41
                                          10105  # Instruction FEEKA:
                                          10106  label('FEEKA')
FEEKA:        2341 1429  ld   $29,y       10107  ld(hi('feeka#13'),Y)            #10 #12
              2342 e045  jmp  y,$45       10108  jmp(Y,'feeka#13')               #11
                                          10109  # dummy                         #12 Overlap
                                          10110  #
                                          10111  # pc = 0x2343, Opcode = 0x43
                                          10112  # Instruction FOKEA:
                                          10113  label('FOKEA')
FOKEA:        2343 1429  ld   $29,y       10114  ld(hi('fokea#13'),Y)            #10 #12
              2344 e06c  jmp  y,$6c       10115  jmp(Y,'fokea#13')               #11
                                          10116  # dummy                         #12 Overlap
                                          10117  #
                                          10118  # pc = 0x2345, Opcode = 0x45
                                          10119  # Instruction MEEKA: Peek 8 bytes from [vAC] to [var], 22 + 64 cycles
                                          10120  label('MEEKA')
MEEKA:        2345 142a  ld   $2a,y       10121  ld(hi('meeka#13'),Y)            #10 #12
              2346 e000  jmp  y,$00       10122  jmp(Y,'meeka#13')               #11
                                          10123  # dummy                         #12 Overlap
                                          10124  #
                                          10125  # pc = 0x2347, Opcode = 0x47
                                          10126  # Instruction MOKEA: Poke 8 bytes from [var] to [vAC], 22 + 64 cycles
                                          10127  label('MOKEA')
MOKEA:        2347 142a  ld   $2a,y       10128  ld(hi('mokea#13'),Y)            #10 #12
              2348 e037  jmp  y,$37       10129  jmp(Y,'mokea#13')               #11
                                          10130  # dummy                         #12 Overlap
                                          10131  #
                                          10132  # pc = 0x2349, Opcode = 0x49
                                          10133  # Instruction LSRVL: Logical shift right var long, 22 + 104 cycles
                                          10134  label('LSRVL')
LSRVL:        2349 142c  ld   $2c,y       10135  ld(hi('lsrvl#13'),Y)            #10 #12
              234a e06a  jmp  y,$6a       10136  jmp(Y,'lsrvl#13')               #11
              234b 1200  ld   ac,x        10137  ld(AC,X)                        #12
                                          10138
                                          10139  # pc = 0x234c, Opcode = 0x4c
                                          10140  # Instruction LSLVL: Logical shift left var long, 22 + 56 cycles
                                          10141  label('LSLVL')
LSLVL:        234c 142c  ld   $2c,y       10142  ld(hi('lslvl#13'),Y)            #10
              234d e0af  jmp  y,$af       10143  jmp(Y,'lslvl#13')               #11
              234e 1200  ld   ac,x        10144  ld(AC,X)                        #12
                                          10145
                                          10146  # pc = 0x234f, Opcode = 0x4f
                                          10147  # Instruction INCL: Increment var long, 22 + 36 cycles
                                          10148  label('INCL')
INCL:         234f 1434  ld   $34,y       10149  ld(hi('incl#13'),Y)             #10
              2350 e047  jmp  y,$47       10150  jmp(Y,'incl#13')                #11
              2351 1200  ld   ac,x        10151  ld(AC,X)                        #12
                                          10152
                                          10153  # pc = 0x2352, Opcode = 0x52
                                          10154  # Instruction DECL: Decrement var long, 22 + 40 cycles
                                          10155  label('DECL')
DECL:         2352 1434  ld   $34,y       10156  ld(hi('decl#13'),Y)             #10
              2353 e06b  jmp  y,$6b       10157  jmp(Y,'decl#13')                #11
                                          10158  # dummy                         #12 Overlap
                                          10159  #
                                          10160  # pc = 0x2354 Opcode = 0x54
                                          10161  # Instruction STPX: [vAC.xy] = var, scanline table y taken into account, 22 + 28 cycles
                                          10162  label('STPX')
STPX:         2354 1429  ld   $29,y       10163  ld(hi('stpx#13'),Y)             #10 #12
              2355 e0e9  jmp  y,$e9       10164  jmp(Y,'stpx#13')                #11
              2356 1200  ld   ac,x        10165  ld(AC,X)                        #12
                                          10166
                                          10167  # pc = 0x2357, Opcode = 0x57
                                          10168  # Instruction PRN4X6: print 4x6 font char to screen from var, 22 + 102 cycles
                                          10169  # sysArgs01 = FG/BG COLOUR, sysArgs2 = 3, (LUP count), var = textFont address, vAC = dest addr
                                          10170  label('PRN4X6')
PRN4X6:       2357 1435  ld   $35,y       10171  ld(hi('prn4x6#13'),Y)           #10 #12
              2358 e078  jmp  y,$78       10172  jmp(Y,'prn4x6#13')              #11
                                          10173  # dummy                         #12 Overlap
                                          10174  #
                                          10175  # pc = 0x2359, Opcode = 0x59
                                          10176  # Instruction VTBL: var = VTBL(vAC), 22 + 28 cycles
                                          10177  label('VTBL')
VTBL:         2359 1436  ld   $36,y       10178  ld(hi('vtbl#13'),Y)             #10 #12
              235a e000  jmp  y,$00       10179  jmp(Y,'vtbl#13')                #11
              235b 0119  ld   [$19]       10180  ld([vAC+1])                     #12 y
                                          10181
                                          10182  # pc = 0x235c, Opcode = 0x5c
                                          10183  # Instruction OSCZ: [(((imm & 3) + 1) <<8) | 0x00FE] = 0, chan imm = [0..3], 22 + 22 cycles
                                          10184  label('OSCZ')
OSCZ:         235c 1426  ld   $26,y       10185  ld(hi('oscz#13'),Y)             #10 #12
              235d e09d  jmp  y,$9d       10186  jmp(Y,'oscz#13')                #11
                                          10187  # dummy                         #12 Overlap
                                          10188  #
                                          10189  # pc = 0x235e, Opcode = 0x5e
                                          10190  # Instruction LSL8: vAC.hi = var.lo, vAC.lo = 0, 22 + 22 cycles
                                          10191  label('LSL8')
LSL8:         235e 1427  ld   $27,y       10192  ld(hi('lsl8#13'),Y)             #10 #12
              235f e0d7  jmp  y,$d7       10193  jmp(Y,'lsl8#13')                #11
                                          10194  # dummy                         #12 Overlap
                                          10195  #
                                          10196  # pc = 0x2360, Opcode = 0x60
                                          10197  # Instruction ADDBA: vAC += var.lo, 22 + 28 cycles
                                          10198  label('ADDBA')
ADDBA:        2360 1417  ld   $17,y       10199  ld(hi('addba#13'),Y)            #10 #12
              2361 e086  jmp  y,$86       10200  jmp(Y,'addba#13')               #11
                                          10201  # dummy                         #12 Overlap
                                          10202  #
                                          10203  # pc = 0x2362, Opcode = 0x62
                                          10204  # Instruction SUBBA: vAC -= var.lo, 22 + 28 cycles
                                          10205  label('SUBBA')
SUBBA:        2362 1417  ld   $17,y       10206  ld(hi('subba#13'),Y)            #10 #12
              2363 e09c  jmp  y,$9c       10207  jmp(Y,'subba#13')               #11
                                          10208  # dummy                         #12 Overlap
                                          10209  #
                                          10210  # pc = 0x2364, Opcode = 0x64
                                          10211  # Instruction NOTB: var.lo = ~var.lo, 22 + 20 cycles
                                          10212  label('NOTB')
NOTB:         2364 1416  ld   $16,y       10213  ld(hi('notb#13'),Y)             #10 #12
              2365 e037  jmp  y,$37       10214  jmp(Y,'notb#13')                #11
              2366 1200  ld   ac,x        10215  ld(AC,X)                        #12 address of var
                                          10216
                                          10217  # pc = 0x2367, Opcode = 0x67
                                          10218  # Instruction ABSVW: var = abs(var), 22 + 34 cycles
                                          10219  label('ABSVW')
ABSVW:        2367 1431  ld   $31,y       10220  ld(hi('absvw#13'),Y)            #10
              2368 e000  jmp  y,$00       10221  jmp(Y,'absvw#13')               #11
              2369 c21d  st   [$1d]       10222  st([vTmp])                      #12 address of var.lo
                                          10223
                                          10224  # pc = 0x236a, Opcode = 0x6a
                                          10225  # Instruction INCW: Increment word var, 22 + 24-26 cycles
                                          10226  label('INCW')
INCW:         236a 1415  ld   $15,y       10227  ld(hi('incw#13'),Y)             #10 #12
              236b e034  jmp  y,$34       10228  jmp(Y,'incw#13')                #11
                                          10229  # dummy                         #12 Overlap
                                          10230  #
                                          10231  # pc = 0x236c, Opcode = 0x6c
                                          10232  # Instruction DECW: Decrement word var, 22 + 24-28 cycles
                                          10233  label('DECW')
DECW:         236c 1415  ld   $15,y       10234  ld(hi('decw#13'),Y)             #10 #12
              236d e043  jmp  y,$43       10235  jmp(Y,'decw#13')                #11
                                          10236  # dummy                         #12 Overlap
                                          10237  #
                                          10238  # pc = 0x236e, Opcode = 0x6e
                                          10239  # Instruction WAITVV: more robust WAITVB, 22 + 24 cycles
                                          10240  label('WAITVV')
WAITVV:       236e 1427  ld   $27,y       10241  ld(hi('waitvv#13'),Y)           #10 #12
              236f e0ea  jmp  y,$ea       10242  jmp(Y,'waitvv#13')              #11
              2370 1200  ld   ac,x        10243  ld(AC,X)                        #12
                                          10244
                                          10245  # pc = 0x2371, Opcode = 0x71
                                          10246  # Instruction POKEA+: Poke a byte from var to [vAC], incw vAC, 22 + (26 to 30) cycles
                                          10247  label('POKEA+')
POKEA+:       2371 1428  ld   $28,y       10248  ld(hi('pokea+#13'),Y)           #10
              2372 e064  jmp  y,$64       10249  jmp(Y,'pokea+#13')              #11
                                          10250  # dummy                         #12 Overlap
                                          10251  #
                                          10252  # pc = 0x2373, Opcode = 0x73
                                          10253  # Instruction LSRV: Logical shift right word var, 22 + 56 cycles
                                          10254  label('LSRV')
LSRV:         2373 142c  ld   $2c,y       10255  ld(hi('lsrv#13'),Y)             #10 #12
              2374 e048  jmp  y,$48       10256  jmp(Y,'lsrv#13')                #11
                                          10257  # dummy                         #12 Overlap
                                          10258  #
                                          10259  # pc = 0x2375, Opcode = 0x75
                                          10260  # Instruction DEEKRI: vAC = DEEK[vAC + imm*2], 22 + 42 cycles
                                          10261  label('DEEKRI')
DEEKRI:       2375 1438  ld   $38,y       10262  ld(hi('deekri#13'),Y)           #10 #12
              2376 e0ac  jmp  y,$ac       10263  jmp(Y,'deekri#13')              #11
                                          10264  # dummy                         #12 Overlap
                                          10265  #
                                          10266  # pc = 0x2377, Opcode = 0x77
                                          10267  # Instruction SCRLH: poke 0x0101 with peek(0x0101) + scroll, 22 + 22 cycles
                                          10268  label('SCRLH')
SCRLH:        2377 1416  ld   $16,y       10269  ld(hi('scrlh#13'),Y)            #10 #12
              2378 e0e3  jmp  y,$e3       10270  jmp(Y,'scrlh#13')               #11
              2379 1200  ld   ac,x        10271  ld(AC,X)                        #12
                                          10272
                                          10273  # SYS calls and instruction implementations rely on these
              237a 0200  nop              10274  fillers(until=0xca)
              237b 0200  nop
              237c 0200  nop
              * 80 times
              23ca 00f2  ld   $f2         10275  ld(-28/2)                       #25
              23cb fc01  bra  $2301       10276  bra('NEXT')                     #26 Return from SYS calls
              23cc 1517  ld   [$17],y     10277  ld([vPC+1],Y)                   #27
                                          10278
                                          10279  # pc = 0x23cd, Opcode = 0xcd
                                          10280  # Instruction NCOPY (lb3361): copy n bytes from [vAC] to [vDST]. vAC+=n. vDST+=n
                                          10281  label('NCOPY')
NCOPY:        23cd 1433  ld   $33,y       10282  ld(hi('ncopy#13'),Y)            #10
              23ce e007  jmp  y,$07       10283  jmp(Y,'ncopy#13')               #11
              23cf 0115  ld   [$15]       10284  ld([vTicks])                    #12
                                          10285
                                          10286
                                          10287  # pc = 0x23d0, Opcode = 0xd0
                                          10288  # Instruction STLU (lb3361): store zero extended vAC into long var. 22+26 cycles
                                          10289  label('STLU')
STLU:         23d0 1433  ld   $33,y       10290  ld(hi('stlu#13'),Y)             #10
              23d1 e073  jmp  y,$73       10291  jmp(Y,'stlu#13')                #11
              23d2 1200  ld   ac,x        10292  ld(AC,X)                        #12
                                          10293
                                          10294  # pc = 0x23d3, Opcode = 0xd3
                                          10295  # Instruction STLS (lb3361): store sign extended vAC into long var. 22+28 cycles
                                          10296  label('STLS')
STLS:         23d3 1433  ld   $33,y       10297  ld(hi('stls#13'),Y)             #10
              23d4 e07d  jmp  y,$7d       10298  jmp(Y,'stls#13')                #11
                                          10299  # dummy                         #12 Overlap
                                          10300  #
                                          10301  # pc = 0x23d5, Opcode = 0xd5
                                          10302  # Instruction NOTL (lb3361): complement long var. 22+30 cycles
                                          10303  label('NOTL')
NOTL:         23d5 1434  ld   $34,y       10304  ld(hi('notl#13'),Y)             #10 #12
              23d6 e000  jmp  y,$00       10305  jmp(Y,'notl#13')                #11
              23d7 1200  ld   ac,x        10306  ld(AC,X)                        #12
                                          10307
                                          10308  # pc = 0x23d8, Opcode = 0xd8
                                          10309  # Instruction NEGL (lb3361): negate long var. 22+58(max) cycles
                                          10310  label('NEGL')
NEGL:         23d8 1434  ld   $34,y       10311  ld(hi('negl#13'),Y)             #10
              23d9 e093  jmp  y,$93       10312  jmp(Y,'negl#13')                #11
              23da 1200  ld   ac,x        10313  ld(AC,X)                        #12
                                          10314
                                          10315
              23db 0200  nop              10316  fillers(until=0xff)
              23dc 0200  nop
              23dd 0200  nop
              * 36 times
                                          10317
                                          10318  #-----------------------------------------------------------------------
                                          10319  #       PREFX1 instruction page, (0x2400), PREFIX OPCODE
                                          10320  #-----------------------------------------------------------------------
                                          10321  #
                                          10322  label('PREFX1_PAGE')
PREFX1_PAGE:  23ff fc03  bra  $2403       10323  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          10324  # --- Page boundary ---
                                          10325  align(0x100,size=0x100)
              2400 1517  ld   [$17],y     10326  ld([vPC+1],Y)                   #1
                                          10327
                                          10328  # Fetch next instruction and execute it, but only if there are sufficient
                                          10329  # ticks left for the slowest instruction.
              2401 8115  adda [$15]       10330  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2402 e80b  blt  $240b       10331  blt('EXIT')                     #1 Escape near time out
              2403 c215  st   [$15]       10332  st([vTicks])                    #2
              2404 0116  ld   [$16]       10333  ld([vPC])                       #3 PREFIX is 1 byte, vPC hasn't been incremented
              2405 9001  adda $01,x       10334  adda(1,X)                       #4
              2406 c002  st   $02,[$02]   10335  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2407 0d00  ld   [y,x]       10336  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2408 de00  st   [y,x++]     10337  st([Y,Xpp])                     #7 Just X++
              2409 fe00  bra  ac          10338  bra(AC)                         #8 Dispatch
              240a 0d00  ld   [y,x]       10339  ld([Y,X])                       #9 Prefetch operand
                                          10340
                                          10341  # Resync with video driver and transfer control
              240b 800f  adda $0f         10342  adda(maxTicks)                  #3
              240c e40c  bgt  $240c       10343  bgt(pc()&255)                   #4 Resync
              240d a001  suba $01         10344  suba(1)                         #5
              240e 1401  ld   $01,y       10345  ld(hi('vBlankStart'),Y)         #6
              240f e11e  jmp  y,[$1e]     10346  jmp(Y,[vReturn])                #7 To video driver
              2410 0000  ld   $00         10347  ld(0)                           #8 AC should be 0 already. Still..
                                          10348  assert vCPU_overhead ==          9
                                          10349
                                          10350  # pc = 0x2411, Opcode = 0x11
                                          10351  # Instruction NOTE: vAC = ROM:[NotesTable + vAC.lo*2], 18 + 48 cycles
                                          10352  label('NOTE')
NOTE:         2411 1427  ld   $27,y       10353  ld(hi('note#13'),Y)             #10
              2412 e000  jmp  y,$00       10354  jmp(Y,'note#13')                #11
              2413 000b  ld   $0b         10355  ld('.note#30')                  #12 low byte of low note return address
                                          10356
                                          10357  # pc = 0x2414, Opcode = 0x14
                                          10358  # Instruction MIDI: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 18 + 50 cycles
                                          10359  label('MIDI')
MIDI:         2414 1427  ld   $27,y       10360  ld(hi('midi#13'),Y)             #10
              2415 e01b  jmp  y,$1b       10361  jmp(Y,'midi#13')                #11
              2416 0027  ld   $27         10362  ld('.midi#31')                  #12 low byte of low midi return address
                                          10363
                                          10364  # pc = 0x2417, Opcode = 0x17
                                          10365  # Instruction XLA, (lb3361): Exchange vLR with vAC, 18 + 28 cycles
                                          10366  label('XLA')
XLA:          2417 1427  ld   $27,y       10367  ld(hi('xla#13'),Y)              #10
              2418 e037  jmp  y,$37       10368  jmp(Y,'xla#13')                 #11
              2419 0118  ld   [$18]       10369  ld([vAC])                       #12
                                          10370
                                          10371  # pc = 0x241a Opcode = 0x1a
                                          10372  # Instruction ADDLP (lb3361): vLAC += [vAC]. 18 + 66 cycles
                                          10373  label('ADDLP')
ADDLP:        241a 1432  ld   $32,y       10374  ld(hi('addlp#13'),Y)            #10
              241b e03f  jmp  y,$3f       10375  jmp(Y,'addlp#13')               #11
              241c 0115  ld   [$15]       10376  ld([vTicks])                    #12
                                          10377
                                          10378  # pc = 0x241d Opcode = 0x1d
                                          10379  # Instruction SUBLP (lb3361): vLAC -= [vAC]. 18 + 60 cycles
                                          10380  label('SUBLP')
SUBLP:        241d 1432  ld   $32,y       10381  ld(hi('sublp#13'),Y)            #10
              241e e07f  jmp  y,$7f       10382  jmp(Y,'sublp#13')               #11
              241f 0115  ld   [$15]       10383  ld([vTicks])                    #12
                                          10384
                                          10385  # pc = 0x2420 Opcode = 0x20
                                          10386  # Instruction ANDLP (lb3361): vLAC &= [vAC]. 18 + 42 cycles
                                          10387  # On return vAC>0 (resp =0, <0) iff LAC>0 (resp =0, <0)
                                          10388  label('ANDLP')
ANDLP:        2420 1432  ld   $32,y       10389  ld(hi('andlp#13'),Y)            #10
              2421 e0b8  jmp  y,$b8       10390  jmp(Y,'andlp#13')               #11
              2422 0115  ld   [$15]       10391  ld([vTicks])                    #12
                                          10392
                                          10393  # pc = 0x2423 Opcode = 0x23
                                          10394  # Instruction ORLP (lb3361): vLAC |= [vAC]. 18 + 42 cycles
                                          10395  # On return vAC>0 (resp =0, <0) iff LAC>0 (resp =0, <0)
                                          10396  label('ORLP')
ORLP:         2423 1432  ld   $32,y       10397  ld(hi('orlp#13'),Y)             #10
              2424 e0d4  jmp  y,$d4       10398  jmp(Y,'orlp#13')                #11
              2425 0115  ld   [$15]       10399  ld([vTicks])                    #12
                                          10400
                                          10401  # pc = 0x2426 Opcode = 0x26
                                          10402  # Instruction XORLP (lb3361): vLAC ^= [vAC]. 18 + 42 cycles
                                          10403  # On return vAC>0 (resp =0, <0) iff LAC>0 (resp =0, <0)
                                          10404  label('XORLP')
XORLP:        2426 1432  ld   $32,y       10405  ld(hi('xorlp#13'),Y)            #10
              2427 e0e7  jmp  y,$e7       10406  jmp(Y,'xorlp#13')               #11
              2428 0115  ld   [$15]       10407  ld([vTicks])                    #12
                                          10408
                                          10409  # pc = 0x2429 Opcode = 0x29
                                          10410  # Instruction CMPLPU (lb3361): compare vLAC and [vAC] unsigned. 18 + 72(max) cycles
                                          10411  # On return vAC>0 (resp =0, <0)
                                          10412  label('CMPLPU')
CMPLPU:       2429 1433  ld   $33,y       10413  ld(hi('cmplpu#13'),Y)           #10
              242a e0a0  jmp  y,$a0       10414  jmp(Y,'cmplpu#13')              #11
              242b 0115  ld   [$15]       10415  ld([vTicks])                    #12
                                          10416
                                          10417  # pc = 0x242c Opcode = 0x2c
                                          10418  # Instruction CMPLPS (lb3361): compare vLAC and [vAC] signed. 18 + 72(max) cycles
                                          10419  # On return vAC>0 (resp =0, <0)
                                          10420  label('CMPLPS')
CMPLPS:       242c 1433  ld   $33,y       10421  ld(hi('cmplps#13'),Y)           #10
              242d e0e0  jmp  y,$e0       10422  jmp(Y,'cmplps#13')              #11
              242e 0115  ld   [$15]       10423  ld([vTicks])                    #12
                                          10424
                                          10425  # pc = 0x242f Opcode = 0x2f
                                          10426  # Instruction RANDW: vAC = rand(65535), uses Marcel's algorithm from SYS_Random_34, 18 + 30 cycles
                                          10427  label('RANDW')
RANDW:        242f 1427  ld   $27,y       10428  ld(hi('randw#13'),Y)            #10
              2430 e045  jmp  y,$45       10429  jmp(Y,'randw#13')               #11
                                          10430  # dummy                         #12 Overlap
                                          10431  #
                                          10432  # pc = 0x2431 Opcode = 0x31
                                          10433  # Instruction LDPX: vAC = [vAC.xy], scanline table y taken into account, 18 + 28 cycles
                                          10434  label('LDPX')
LDPX:         2431 1427  ld   $27,y       10435  ld(hi('ldpx#13'),Y)             #10 #12
              2432 e056  jmp  y,$56       10436  jmp(Y,'ldpx#13')                #11
                                          10437  # dummy                         #12 Overlap
                                          10438  #
                                          10439  # pc = 0x2433 Opcode = 0x33
                                          10440  # Instruction ABSW: vAC = abs(vAC), 18 + (18 or 28) cycles
                                          10441  label('ABSW')
ABSW:         2433 1427  ld   $27,y       10442  ld(hi('absw#13'),Y)             #10 #12
              2434 e064  jmp  y,$64       10443  jmp(Y,'absw#13')                #11
              2435 0119  ld   [$19]       10444  ld([vAC+1])                     #12
                                          10445
                                          10446  # pc = 0x2436 Opcode = 0x36
                                          10447  # Instruction SGNW: vAC = sgn(vAC), 18 + (20, 22 or 26) cycles
                                          10448  label('SGNW')
SGNW:         2436 1427  ld   $27,y       10449  ld(hi('sgnw#13'),Y)             #10
              2437 e07a  jmp  y,$7a       10450  jmp(Y,'sgnw#13')                #11
              2438 0119  ld   [$19]       10451  ld([vAC+1])                     #12
                                          10452
                                          10453  # pc = 0x2439 Opcode = 0x39
                                          10454  # Instruction MULB3: vAC = vAC.lo * 3, 18 + 24 cycles
                                          10455  label('MULB3')
MULB3:        2439 1427  ld   $27,y       10456  ld(hi('mulb3#13'),Y)            #10
              243a e08d  jmp  y,$8d       10457  jmp(Y,'mulb3#13')               #11
                                          10458  # dummy                         #12 Overlap
                                          10459  #
                                          10460  # pc = 0x243b Opcode = 0x3b
                                          10461  # Instruction MULB5: vAC = vAC.lo * 5, 18 + 24 cycles
                                          10462  label('MULB5')
MULB5:        243b 1427  ld   $27,y       10463  ld(hi('mulb5#13'),Y)            #10 #12
              243c e096  jmp  y,$96       10464  jmp(Y,'mulb5#13')               #11
                                          10465  # dummy                         #12 Overlap
                                          10466  #
                                          10467  # pc = 0x243d Opcode = 0x3d
                                          10468  # Instruction MULB6: vAC = vAC.lo * 6, 18 + 26 cycles
                                          10469  label('MULB6')
MULB6:        243d 1427  ld   $27,y       10470  ld(hi('mulb6#13'),Y)            #10 #12
              243e e0a0  jmp  y,$a0       10471  jmp(Y,'mulb6#13')               #11
                                          10472  # dummy                         #12 Overlap
                                          10473  #
                                          10474  # pc = 0x243f Opcode = 0x3f
                                          10475  # Instruction MULB7: vAC = vAC.lo * 7, 18 + 26 cycles
                                          10476  label('MULB7')
MULB7:        243f 1427  ld   $27,y       10477  ld(hi('mulb7#13'),Y)            #10 #12
              2440 e0ab  jmp  y,$ab       10478  jmp(Y,'mulb7#13')               #11
                                          10479  # dummy                         #12 Overlap
                                          10480  #
                                          10481  # pc = 0x2441 Opcode = 0x41
                                          10482  # Instruction MULB8: vAC = vAC.lo * 8, 18 + 24 cycles
                                          10483  label('MULB8')
MULB8:        2441 1427  ld   $27,y       10484  ld(hi('mulb8#13'),Y)            #10 #12
              2442 e0b6  jmp  y,$b6       10485  jmp(Y,'mulb8#13')               #11
                                          10486  # dummy                         #12 Overlap
                                          10487  #
                                          10488  # pc = 0x2443 Opcode = 0x43
                                          10489  # Instruction MULB9: vAC = vAC.lo * 9, 18 + 26 cycles
                                          10490  label('MULB9')
MULB9:        2443 1427  ld   $27,y       10491  ld(hi('mulb9#13'),Y)            #10 #12
              2444 e0c0  jmp  y,$c0       10492  jmp(Y,'mulb9#13')               #11
                                          10493  # dummy                         #12 Overlap
                                          10494  #
                                          10495  # pc = 0x2445 Opcode = 0x45
                                          10496  # Instruction MULB10: vAC = vAC.lo * 10, 18 + 26 cycles
                                          10497  label('MULB10')
MULB10:       2445 1427  ld   $27,y       10498  ld(hi('mulb10#13'),Y)           #10 #12
              2446 e0cb  jmp  y,$cb       10499  jmp(Y,'mulb10#13')              #11
                                          10500  # dummy                         #12 Overlap
                                          10501  #
                                          10502  # pc = 0x2447 Opcode = 0x47
                                          10503  # Instruction WAITVB: wait for VBlank, 18 + 22 cycles
                                          10504  label('WAITVB')
WAITVB:       2447 1427  ld   $27,y       10505  ld(hi('waitvb#13'),Y)           #10 #12
              2448 e0df  jmp  y,$df       10506  jmp(Y,'waitvb#13')              #11
                                          10507  # dummy                         #12 Overlap
                                          10508  #
                                          10509  # pc = 0x2449 Opcode = 0x49
                                          10510  # Instruction MULW3: vAC = vAC * 3, 18 + 40 cycles
                                          10511  label('MULW3')
MULW3:        2449 1436  ld   $36,y       10512  ld(hi('mulw3#13'),Y)            #10 #12
              244a e0a7  jmp  y,$a7       10513  jmp(Y,'mulw3#13')               #11
                                          10514  # dummy                         #12 Overlap
                                          10515  #
                                          10516  # pc = 0x244b Opcode = 0x4b
                                          10517  # Instruction MULW5: vAC = vAC * 5, 18 + 48 cycles
                                          10518  label('MULW5')
MULW5:        244b 1436  ld   $36,y       10519  ld(hi('mulw5#13'),Y)            #10 #12
              244c e0c8  jmp  y,$c8       10520  jmp(Y,'mulw5#13')               #11
                                          10521  # dummy                         #12 Overlap
                                          10522  #
                                          10523  # pc = 0x244d Opcode = 0x4d
                                          10524  # Instruction MULW6: vAC = vAC * 6, 18 + 50 cycles
                                          10525  label('MULW6')
MULW6:        244d 1437  ld   $37,y       10526  ld(hi('mulw6#13'),Y)            #10 #12
              244e e091  jmp  y,$91       10527  jmp(Y,'mulw6#13')               #11
                                          10528  # dummy                         #12 Overlap
                                          10529  #
                                          10530  # pc = 0x244f Opcode = 0x4f
                                          10531  # Instruction MULW7: vAC = vAC * 7, 18 + 58 cycles
                                          10532  label('MULW7')
MULW7:        244f 1437  ld   $37,y       10533  ld(hi('mulw7#13'),Y)            #10 #12
              2450 e0bc  jmp  y,$bc       10534  jmp(Y,'mulw7#13')               #11
                                          10535  # dummy                         #12 Overlap
                                          10536  #
                                          10537  # pc = 0x2451 Opcode = 0x51
                                          10538  # Instruction MULW8: vAC = vAC * 8, 18 + 44 cycles
                                          10539  label('MULW8')
MULW8:        2451 1438  ld   $38,y       10540  ld(hi('mulw8#13'),Y)            #10 #12
              2452 e000  jmp  y,$00       10541  jmp(Y,'mulw8#13')               #11
                                          10542  # dummy                         #12 Overlap
                                          10543  #
                                          10544  # pc = 0x2453 Opcode = 0x53
                                          10545  # Instruction MULW9: vAC = vAC * 9, 18 + 56 cycles
                                          10546  label('MULW9')
MULW9:        2453 1438  ld   $38,y       10547  ld(hi('mulw9#13'),Y)            #10 #12
              2454 e023  jmp  y,$23       10548  jmp(Y,'mulw9#13')               #11
                                          10549  # dummy                         #12 Overlap
                                          10550  #
                                          10551  # pc = 0x2455 Opcode = 0x55
                                          10552  # Instruction MULW10: vAC = vAC * 10, 18 + 58 cycles
                                          10553  label('MULW10')
MULW10:       2455 1438  ld   $38,y       10554  ld(hi('mulw10#13'),Y)           #10 #12
              2456 e054  jmp  y,$54       10555  jmp(Y,'mulw10#13')              #11
                                          10556  # dummy                         #12 Overlap
                                          10557
                                          10558
                                          10559  # SYS calls and instruction implementations rely on these
              2457 0200  nop              10560  fillers(until=0xca)
              2458 0200  nop
              2459 0200  nop
              * 115 times
              24ca 00f2  ld   $f2         10561  ld(-28/2)                       #25
              24cb fc01  bra  $2401       10562  bra('NEXT')                     #26 Return from SYS calls
              24cc 1517  ld   [$17],y     10563  ld([vPC+1],Y)                   #27
                                          10564
                                          10565
              24cd 0200  nop              10566  fillers(until=0xff)
              24ce 0200  nop
              24cf 0200  nop
              * 50 times
              24ff 0200  nop              10567  align(0x100, size=0x100)
                                          10568
                                          10569  #-----------------------------------------------------------------------
                                          10570  #       PREFX3 implementation page, (0x2500)
                                          10571  #-----------------------------------------------------------------------
                                          10572  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          10573  #
                                          10574  # STB2 implementation
                                          10575  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10576  label('stb2#13')
stb2#13:      2500 152b  ld   [$2b],y     10577  ld([sysArgs+7],Y)               #13 Second operand
              2501 0118  ld   [$18]       10578  ld([vAC])                       #14
              2502 ce00  st   [y,x]       10579  st([Y,X])                       #15
              2503 1403  ld   $03,y       10580  ld(hi('NEXTY'),Y)               #16
              2504 e000  jmp  y,$00       10581  jmp(Y,'NEXTY')                  #17
              2505 00f6  ld   $f6         10582  ld(-20/2)                       #18
                                          10583
                                          10584  # STW2 implementation
                                          10585  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10586  label('stw2#13')
stw2#13:      2506 152b  ld   [$2b],y     10587  ld([sysArgs+7],Y)               #13 Second operand
              2507 0118  ld   [$18]       10588  ld([vAC])                       #14
              2508 de00  st   [y,x++]     10589  st([Y,Xpp])                     #15
              2509 0119  ld   [$19]       10590  ld([vAC+1])                     #16
              250a ce00  st   [y,x]       10591  st([Y,X])                       #17
              250b 1403  ld   $03,y       10592  ld(hi('NEXTY'),Y)               #18
              250c e000  jmp  y,$00       10593  jmp(Y,'NEXTY')                  #19
              250d 00f5  ld   $f5         10594  ld(-22/2)                       #20
                                          10595
                                          10596  # XCHGB implementation
                                          10597  label('xchgb#13')
xchgb#13:     250e c22a  st   [$2a]       10598  st([sysArgs+6])                 #13 1st var
              250f 112b  ld   [$2b],x     10599  ld([sysArgs+7],X)               #14 2nd var
              2510 0500  ld   [x]         10600  ld([X])                         #15
              2511 c21d  st   [$1d]       10601  st([vTmp])                      #16
              2512 112a  ld   [$2a],x     10602  ld([sysArgs+6],X)               #17
              2513 0500  ld   [x]         10603  ld([X])                         #18
              2514 112b  ld   [$2b],x     10604  ld([sysArgs+7],X)               #19
              2515 c600  st   [x]         10605  st([X])                         #20
              2516 112a  ld   [$2a],x     10606  ld([sysArgs+6],X)               #21
              2517 011d  ld   [$1d]       10607  ld([vTmp])                      #22
              2518 c600  st   [x]         10608  st([X])                         #23
              2519 1403  ld   $03,y       10609  ld(hi('NEXTY'),Y)               #24
              251a e000  jmp  y,$00       10610  jmp(Y,'NEXTY')                  #25
              251b 00f2  ld   $f2         10611  ld(-28/2)                       #26
                                          10612
                                          10613  # XCHGW implementation
                                          10614  label('xchgw#13')
xchgw#13:     251c 00f8  ld   $f8         10615  ld(min(0,maxTicks-46/2))        #13
              251d 8115  adda [$15]       10616  adda([vTicks])                  #14
              251e e83b  blt  .xchgw#17   10617  blt('.xchgw#17')                #15 not enough time left, so retry
              251f 1400  ld   $00,y       10618  ld(0,Y)                         #16
              2520 112b  ld   [$2b],x     10619  ld([sysArgs+7],X)               #17
              2521 0500  ld   [x]         10620  ld([X])                         #18
              2522 c21d  st   [$1d]       10621  st([vTmp])                      #19 vTmp = var2.lo
              2523 112a  ld   [$2a],x     10622  ld([sysArgs+6],X)               #20
              2524 0500  ld   [x]         10623  ld([X])                         #21 AC = var1.lo
              2525 112b  ld   [$2b],x     10624  ld([sysArgs+7],X)               #22
              2526 c600  st   [x]         10625  st([X])                         #23 var2.lo = AC
              2527 112a  ld   [$2a],x     10626  ld([sysArgs+6],X)               #24
              2528 011d  ld   [$1d]       10627  ld([vTmp])                      #25
              2529 c600  st   [x]         10628  st([X])                         #26 var1.lo = vTmp
              252a 012b  ld   [$2b]       10629  ld([sysArgs+7])                 #27
              252b 8001  adda $01         10630  adda(1)                         #28
              252c d22b  st   [$2b],x     10631  st([sysArgs+7],X)               #29 inc sysArgs+7
              252d 0500  ld   [x]         10632  ld([X])                         #30
              252e c21d  st   [$1d]       10633  st([vTmp])                      #31 vTmp = var2.hi
              252f 012a  ld   [$2a]       10634  ld([sysArgs+6])                 #32
              2530 9001  adda $01,x       10635  adda(1,X)                       #33
              2531 0500  ld   [x]         10636  ld([X])                         #34 AC = var1.hi
              2532 112b  ld   [$2b],x     10637  ld([sysArgs+7],X)               #35
              2533 c600  st   [x]         10638  st([X])                         #36 var2.hi = AC
              2534 012a  ld   [$2a]       10639  ld([sysArgs+6])                 #37
              2535 9001  adda $01,x       10640  adda(1,X)                       #38
              2536 011d  ld   [$1d]       10641  ld([vTmp])                      #39
              2537 c600  st   [x]         10642  st([X])                         #40 var1.hi = vTmp
              2538 1403  ld   $03,y       10643  ld(hi('REENTER'),Y)             #41
              2539 e0cb  jmp  y,$cb       10644  jmp(Y,'REENTER')                #42
              253a 00e9  ld   $e9         10645  ld(-46/2)                       #43
                                          10646  label('.xchgw#17')
.xchgw#17:    253b 0021  ld   $21         10647  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              253c c202  st   [$02]       10648  st([vCpuSelect])                #18 restore PREFX3 instruction page
              253d 9401  adda $01,y       10649  adda(1,Y)                       #19 retry instruction
              253e e0cb  jmp  y,$cb       10650  jmp(Y,'REENTER')                #20
              253f 00f4  ld   $f4         10651  ld(-24/2)                       #21
                                          10652
                                          10653  # MOVW implementation
                                          10654  label('movw#13')
movw#13:      2540 1200  ld   ac,x        10655  ld(AC,X)                        #13
              2541 8001  adda $01         10656  adda(1)                         #14
              2542 c21d  st   [$1d]       10657  st([vTmp])                      #15 address of src.hi
              2543 0500  ld   [x]         10658  ld([X])                         #16 src.lo
              2544 112b  ld   [$2b],x     10659  ld([sysArgs+7],X)               #17 address of dst.lo
              2545 c600  st   [x]         10660  st([X])                         #18 dst.lo = src.lo
              2546 111d  ld   [$1d],x     10661  ld([vTmp],X)                    #19
              2547 0500  ld   [x]         10662  ld([X])                         #20 src.hi
              2548 c21d  st   [$1d]       10663  st([vTmp])                      #21
              2549 012b  ld   [$2b]       10664  ld([sysArgs+7])                 #22
              254a 9001  adda $01,x       10665  adda(1,X)                       #23 address of dst.hi
              254b 011d  ld   [$1d]       10666  ld([vTmp])                      #24
              254c c600  st   [x]         10667  st([X])                         #25 dst.hi = src.hi
              254d 1403  ld   $03,y       10668  ld(hi('NEXTY'),Y)               #26
              254e e000  jmp  y,$00       10669  jmp(Y,'NEXTY')                  #27
              254f 00f1  ld   $f1         10670  ld(-30/2)                       #28
                                          10671
                                          10672  # ADDWI implementation
                                          10673  label('addwi#13')
addwi#13:     2550 c21d  st   [$1d]       10674  st([vTmp])                      #13 save imm.lo
              2551 8118  adda [$18]       10675  adda([vAC])                     #14
              2552 c218  st   [$18]       10676  st([vAC])                       #15 vAC.lo += imm.lo
              2553 e85d  blt  .addwi#18   10677  bmi('.addwi#18')                #16 overflow
              2554 a11d  suba [$1d]       10678  suba([vTmp])                    #17 restore vAC.lo
              2555 411d  ora  [$1d]       10679  ora([vTmp])                     #18 imm.lo | vAC.lo
              2556 e865  blt  .addwi#21   10680  bmi('.addwi#21')                #19 if carry == 1
              2557 012b  ld   [$2b]       10681  ld([sysArgs+7])                 #20 imm.hi
              2558 8119  adda [$19]       10682  adda([vAC+1])                   #21 carry = 0
              2559 c219  st   [$19]       10683  st([vAC+1])                     #22 vAC.hi += imm.hi
              255a 1403  ld   $03,y       10684  ld(hi('REENTER'),Y)             #23
              255b e0cb  jmp  y,$cb       10685  jmp(Y,'REENTER')                #24
              255c 00f2  ld   $f2         10686  ld(-28/2)                       #25
                                          10687  label('.addwi#18')
.addwi#18:    255d 211d  anda [$1d]       10688  anda([vTmp])                    #18 imm.lo & vAC.lo
              255e e865  blt  .addwi#21   10689  bmi('.addwi#21')                #19 If carry == 1
              255f 012b  ld   [$2b]       10690  ld([sysArgs+7])                 #20 imm.hi
              2560 8119  adda [$19]       10691  adda([vAC+1])                   #21 carry = 0
              2561 c219  st   [$19]       10692  st([vAC+1])                     #22 vAC.hi += imm.hi
              2562 1403  ld   $03,y       10693  ld(hi('REENTER'),Y)             #23
              2563 e0cb  jmp  y,$cb       10694  jmp(Y,'REENTER')                #24
              2564 00f2  ld   $f2         10695  ld(-28/2)                       #25
                                          10696  label('.addwi#21')
.addwi#21:    2565 8001  adda $01         10697  adda(1)                         #21 carry = 1
              2566 8119  adda [$19]       10698  adda([vAC+1])                   #22
              2567 c219  st   [$19]       10699  st([vAC+1])                     #23 vAC.hi = vAC.hi + carry + imm.hi
              2568 1403  ld   $03,y       10700  ld(hi('NEXTY'),Y)               #24
              2569 e000  jmp  y,$00       10701  jmp(Y,'NEXTY')                  #25
              256a 00f2  ld   $f2         10702  ld(-28/2)                       #26
                                          10703
                                          10704  # SUBWI implementation
                                          10705  label('subwi#13')
subwi#13:     256b c21d  st   [$1d]       10706  st([vTmp])                      #13 save imm.lo
              256c 0118  ld   [$18]       10707  ld([vAC])                       #14
              256d e879  blt  .subwi#17   10708  bmi('.subwi#17')                #15 is -ve?
              256e a11d  suba [$1d]       10709  suba([vTmp])                    #16
              256f c218  st   [$18]       10710  st([vAC])                       #17 vAC.lo -= imm.lo
              2570 411d  ora  [$1d]       10711  ora([vTmp])                     #18 borrow in bit 7
              2571 3080  anda $80,x       10712  anda(0x80,X)                    #19 move borrow to bit 0
              2572 0119  ld   [$19]       10713  ld([vAC+1])                     #20
              2573 a500  suba [x]         10714  suba([X])                       #21
              2574 a12b  suba [$2b]       10715  suba([sysArgs+7])               #22
              2575 c219  st   [$19]       10716  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              2576 1403  ld   $03,y       10717  ld(hi('NEXTY'),Y)               #24
              2577 e000  jmp  y,$00       10718  jmp(Y,'NEXTY')                  #25
              2578 00f2  ld   $f2         10719  ld(-28/2)                       #26
                                          10720  label('.subwi#17')
.subwi#17:    2579 c218  st   [$18]       10721  st([vAC])                       #17 vAC.lo -= imm.lo
              257a 211d  anda [$1d]       10722  anda([vTmp])                    #18 borrow in bit 7
              257b 3080  anda $80,x       10723  anda(0x80,X)                    #19 move borrow to bit 0
              257c 0119  ld   [$19]       10724  ld([vAC+1])                     #20
              257d a500  suba [x]         10725  suba([X])                       #21
              257e a12b  suba [$2b]       10726  suba([sysArgs+7])               #22
              257f c219  st   [$19]       10727  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              2580 1403  ld   $03,y       10728  ld(hi('NEXTY'),Y)               #24
              2581 e000  jmp  y,$00       10729  jmp(Y,'NEXTY')                  #25
              2582 00f2  ld   $f2         10730  ld(-28/2)                       #26
                                          10731
                                          10732  # SUBIW implementation
                                          10733  label('subiw#13')
subiw#13:     2583 e891  blt  .subiw#15   10734  bmi('.subiw#15')                #13 is -ve?
              2584 a118  suba [$18]       10735  suba([vAC])                     #14
              2585 c21d  st   [$1d]       10736  st([vTmp])                      #15 vAC.lo = imm.lo - vAC.lo
              2586 4118  ora  [$18]       10737  ora([vAC])                      #16 borrow in bit 7
              2587 3080  anda $80,x       10738  anda(0x80,X)                    #17 move borrow to bit 0
              2588 011d  ld   [$1d]       10739  ld([vTmp])                      #18
              2589 c218  st   [$18]       10740  st([vAC])                       #19 vAC.lo
              258a 012b  ld   [$2b]       10741  ld([sysArgs+7])                 #20 imm.hi
              258b a500  suba [x]         10742  suba([X])                       #21
              258c a119  suba [$19]       10743  suba([vAC+1])                   #22
              258d c219  st   [$19]       10744  st([vAC+1])                     #23 vAC.hi = imm.hi - borrow - vAC.hi
              258e 1403  ld   $03,y       10745  ld(hi('NEXTY'),Y)               #24
              258f e000  jmp  y,$00       10746  jmp(Y,'NEXTY')                  #25
              2590 00f2  ld   $f2         10747  ld(-28/2)                       #26
                                          10748  label('.subiw#15')
.subiw#15:    2591 c21d  st   [$1d]       10749  st([vTmp])                      #15 vAC.lo = imm.lo - vAC.lo
              2592 2118  anda [$18]       10750  anda([vAC])                     #16 borrow in bit 7
              2593 3080  anda $80,x       10751  anda(0x80,X)                    #17 move borrow to bit 0
              2594 011d  ld   [$1d]       10752  ld([vTmp])                      #18
              2595 c218  st   [$18]       10753  st([vAC])                       #19 vAC.lo
              2596 012b  ld   [$2b]       10754  ld([sysArgs+7])                 #20 imm.hi
              2597 a500  suba [x]         10755  suba([X])                       #21
              2598 a119  suba [$19]       10756  suba([vAC+1])                   #22
              2599 c219  st   [$19]       10757  st([vAC+1])                     #23 vAC.hi = imm.hi - borrow - vAC.hi
              259a 1403  ld   $03,y       10758  ld(hi('NEXTY'),Y)               #24
              259b e000  jmp  y,$00       10759  jmp(Y,'NEXTY')                  #25
              259c 00f2  ld   $f2         10760  ld(-28/2)                       #26
                                          10761
                                          10762  # ANDWI implementation
                                          10763  label('andwi#13')
andwi#13:     259d 2118  anda [$18]       10764  anda([vAC])                     #13
              259e c218  st   [$18]       10765  st([vAC])                       #14 vAC.lo &= imm.lo
              259f 012b  ld   [$2b]       10766  ld([sysArgs+7])                 #15
              25a0 2119  anda [$19]       10767  anda([vAC+1])                   #16
              25a1 c219  st   [$19]       10768  st([vAC+1])                     #17 vAC.hi &= imm.hi
              25a2 1403  ld   $03,y       10769  ld(hi('NEXTY'),Y)               #18
              25a3 e000  jmp  y,$00       10770  jmp(Y,'NEXTY')                  #19
              25a4 00f5  ld   $f5         10771  ld(-22/2)                       #20
                                          10772
                                          10773  # ORWI implementation
                                          10774  label('orwi#13')
orwi#13:      25a5 4118  ora  [$18]       10775  ora([vAC])                      #13
              25a6 c218  st   [$18]       10776  st([vAC])                       #14 vAC.lo |= imm.lo
              25a7 012b  ld   [$2b]       10777  ld([sysArgs+7])                 #15
              25a8 4119  ora  [$19]       10778  ora([vAC+1])                    #16
              25a9 c219  st   [$19]       10779  st([vAC+1])                     #17 vAC.hi |= imm.hi
              25aa 1403  ld   $03,y       10780  ld(hi('NEXTY'),Y)               #18
              25ab e000  jmp  y,$00       10781  jmp(Y,'NEXTY')                  #19
              25ac 00f5  ld   $f5         10782  ld(-22/2)                       #20
                                          10783
                                          10784  # XORWI implementation
                                          10785  label('xorwi#13')
xorwi#13:     25ad 6118  xora [$18]       10786  xora([vAC])                     #13
              25ae c218  st   [$18]       10787  st([vAC])                       #14 vAC.lo ^= imm.lo
              25af 012b  ld   [$2b]       10788  ld([sysArgs+7])                 #15
              25b0 6119  xora [$19]       10789  xora([vAC+1])                   #16
              25b1 c219  st   [$19]       10790  st([vAC+1])                     #17 vAC.hi ^= imm.hi
              25b2 1403  ld   $03,y       10791  ld(hi('NEXTY'),Y)               #18
              25b3 e000  jmp  y,$00       10792  jmp(Y,'NEXTY')                  #19
              25b4 00f5  ld   $f5         10793  ld(-22/2)                       #20
                                          10794
                                          10795  # CONDII implementation
                                          10796  label('condii#13')
condii#13:    25b5 c21d  st   [$1d]       10797  st([vTmp])                      #13
              25b6 0118  ld   [$18]       10798  ld([vAC])                       #14
              25b7 4119  ora  [$19]       10799  ora([vAC+1])                    #15
              25b8 ecbb  bne  $25bb       10800  bne(pc()+3)                     #16
              25b9 fcbc  bra  $25bc       10801  bra(pc()+3)                     #17
              25ba 012b  ld   [$2b]       10802  ld([sysArgs+7])                 #18 get result cond == 0
              25bb 011d  ld   [$1d]       10803  ld([vTmp])                      #18 get result cond != 0
              25bc c218  st   [$18]       10804  st([vAC])                       #19 result.lo
              25bd 0000  ld   $00         10805  ld(0)                           #20
              25be c219  st   [$19]       10806  st([vAC+1])                     #21 result.hi = 0
              25bf 1403  ld   $03,y       10807  ld(hi('NEXTY'),Y)               #22
              25c0 e000  jmp  y,$00       10808  jmp(Y,'NEXTY')                  #23
              25c1 00f3  ld   $f3         10809  ld(-26/2)                       #24
                                          10810
                                          10811  # CONDBB implementation
                                          10812  label('condbb#13')
condbb#13:    25c2 0500  ld   [x]         10813  ld([X])                         #13
              25c3 c21d  st   [$1d]       10814  st([vTmp])                      #14
              25c4 112b  ld   [$2b],x     10815  ld([sysArgs+7],X)               #15 get result cond=0
              25c5 0118  ld   [$18]       10816  ld([vAC])                       #16
              25c6 4119  ora  [$19]       10817  ora([vAC+1])                    #17
              25c7 ecca  bne  $25ca       10818  bne(pc()+3)                     #18
              25c8 fccb  bra  $25cb       10819  bra(pc()+3)                     #19
              25c9 0500  ld   [x]         10820  ld([X])                         #20 get result cond == 0
              25ca 011d  ld   [$1d]       10821  ld([vTmp])                      #20 get result cond != 0
              25cb c218  st   [$18]       10822  st([vAC])                       #21 result.lo
              25cc 0000  ld   $00         10823  ld(0)                           #22
              25cd c219  st   [$19]       10824  st([vAC+1])                     #23 result.hi = 0
              25ce 1403  ld   $03,y       10825  ld(hi('NEXTY'),Y)               #24
              25cf e000  jmp  y,$00       10826  jmp(Y,'NEXTY')                  #25
              25d0 00f2  ld   $f2         10827  ld(-28/2)                       #26
                                          10828
                                          10829  # CONDIB implementation
                                          10830  label('condib#13')
condib#13:    25d1 112b  ld   [$2b],x     10831  ld([sysArgs+7],X)               #13 get result cond=0
              25d2 0118  ld   [$18]       10832  ld([vAC])                       #14
              25d3 4119  ora  [$19]       10833  ora([vAC+1])                    #15
              25d4 ecd7  bne  $25d7       10834  bne(pc()+3)                     #16
              25d5 fcd8  bra  $25d8       10835  bra(pc()+3)                     #17
              25d6 0500  ld   [x]         10836  ld([X])                         #18 get result cond == 0
              25d7 011d  ld   [$1d]       10837  ld([vTmp])                      #18 get result cond != 0
              25d8 c218  st   [$18]       10838  st([vAC])                       #19 result.lo
              25d9 0000  ld   $00         10839  ld(0)                           #20
              25da c219  st   [$19]       10840  st([vAC+1])                     #21 result.hi = 0
              25db 1403  ld   $03,y       10841  ld(hi('NEXTY'),Y)               #22
              25dc e000  jmp  y,$00       10842  jmp(Y,'NEXTY')                  #23
              25dd 00f3  ld   $f3         10843  ld(-26/2)                       #24
                                          10844
                                          10845  # CONDBI implementation
                                          10846  label('condbi#13')
condbi#13:    25de 1200  ld   ac,x        10847  ld(AC,X)                        #13
              25df 0118  ld   [$18]       10848  ld([vAC])                       #14
              25e0 4119  ora  [$19]       10849  ora([vAC+1])                    #15
              25e1 ece4  bne  $25e4       10850  bne(pc()+3)                     #16
              25e2 fce5  bra  $25e5       10851  bra(pc()+3)                     #17
              25e3 012b  ld   [$2b]       10852  ld([sysArgs+7])                 #18 get result cond == 0
              25e4 0500  ld   [x]         10853  ld([X])                         #18 get result cond != 0
              25e5 c218  st   [$18]       10854  st([vAC])                       #19 result.lo
              25e6 0000  ld   $00         10855  ld(0)                           #20
              25e7 c219  st   [$19]       10856  st([vAC+1])                     #21 result.hi = 0
              25e8 1403  ld   $03,y       10857  ld(hi('NEXTY'),Y)               #22
              25e9 e000  jmp  y,$00       10858  jmp(Y,'NEXTY')                  #23
              25ea 00f3  ld   $f3         10859  ld(-26/2)                       #24
                                          10860
                                          10861
              25eb 0200  nop              10862  fillers(until=0xff)
              25ec 0200  nop
              25ed 0200  nop
              * 20 times
              25ff 0200  nop              10863  align(0x100, size=0x100)
                                          10864
                                          10865  #-----------------------------------------------------------------------
                                          10866  #       PREFX2 implementation page, (0x2600)
                                          10867  #-----------------------------------------------------------------------
                                          10868  #
                                          10869  # LSLN implementation
                                          10870  label('lsln#13')
lsln#13:      2600 a001  suba $01         10871  suba(1)                         #13
              2601 f406  bge  .lsln#16    10872  bge('.lsln#16')                 #14
              2602 c22b  st   [$2b]       10873  st([sysArgs+7])                 #15
              2603 1403  ld   $03,y       10874  ld(hi('NEXTY'),Y)               #16 exit PREFX2 instruction page
              2604 e000  jmp  y,$00       10875  jmp(Y,'NEXTY')                  #17
              2605 00f6  ld   $f6         10876  ld(-20/2)                       #18
                                          10877  label('.lsln#16')
.lsln#16:     2606 0118  ld   [$18]       10878  ld([vAC])                       #16
              2607 3080  anda $80,x       10879  anda(128,X)                     #17
              2608 8118  adda [$18]       10880  adda([vAC])                     #18
              2609 c218  st   [$18]       10881  st([vAC])                       #19
              260a 0500  ld   [x]         10882  ld([X])                         #20
              260b 8119  adda [$19]       10883  adda([vAC+1])                   #21
              260c 8119  adda [$19]       10884  adda([vAC+1])                   #22
              260d c219  st   [$19]       10885  st([vAC+1])                     #23
              260e 0022  ld   $22         10886  ld(hi('PREFX2_PAGE'))           #24 ENTER is at $(n-1)ff, where n = instruction page
              260f c202  st   [$02]       10887  st([vCpuSelect])                #25 restore PREFX2 instruction page
              2610 9401  adda $01,y       10888  adda(1,Y)                       #26 restart instruction
              2611 e000  jmp  y,$00       10889  jmp(Y,'NEXTY')                  #27
              2612 00f1  ld   $f1         10890  ld(-30/2)                       #28
                                          10891
                                          10892  # SEXT implementation
                                          10893  label('sext#13')
sext#13:      2613 2119  anda [$19]       10894  anda([vAC+1])                   #13
              2614 ec19  bne  .sext#16    10895  bne('.sext#16')                 #14 check mask
              2615 012b  ld   [$2b]       10896  ld([sysArgs+7])                 #15
              2616 1403  ld   $03,y       10897  ld(hi('NEXTY'),Y)               #16
              2617 e000  jmp  y,$00       10898  jmp(Y,'NEXTY')                  #17
              2618 00f6  ld   $f6         10899  ld(-20/2)                       #18
                                          10900  label('.sext#16')
.sext#16:     2619 60ff  xora $ff         10901  xora(255)                       #16
              261a 8001  adda $01         10902  adda(1)                         #17 mask = (~mask) + 1
              261b 4119  ora  [$19]       10903  ora([vAC+1])                    #18
              261c c219  st   [$19]       10904  st([vAC+1])                     #19 set sign bits
              261d 1403  ld   $03,y       10905  ld(hi('NEXTY'),Y)               #20
              261e e000  jmp  y,$00       10906  jmp(Y,'NEXTY')                  #21
              261f 00f4  ld   $f4         10907  ld(-24/2)                       #22
                                          10908
                                          10909  # NOTW implementation
                                          10910  label('notw#13')
notw#13:      2620 112b  ld   [$2b],x     10911  ld([sysArgs+7],X)               #13 PREFX2 saves operand in [sysArgs+7]
              2621 1400  ld   $00,y       10912  ld(0,Y)                         #14
              2622 0500  ld   [x]         10913  ld([X])                         #15
              2623 60ff  xora $ff         10914  xora(255)                       #16
              2624 de00  st   [y,x++]     10915  st([Y,Xpp])                     #17
              2625 0500  ld   [x]         10916  ld([X])                         #18
              2626 60ff  xora $ff         10917  xora(255)                       #19
              2627 c600  st   [x]         10918  st([X])                         #20
              2628 1403  ld   $03,y       10919  ld(hi('REENTER'),Y)             #21
              2629 e0cb  jmp  y,$cb       10920  jmp(Y,'REENTER')                #22
              262a 00f3  ld   $f3         10921  ld(-26/2)                       #23
                                          10922
                                          10923  # NEGW implementation
                                          10924  label('negw#13')
negw#13:      262b 1400  ld   $00,y       10925  ld(0,Y)                         #13
              262c 112b  ld   [$2b],x     10926  ld([sysArgs+7],X)               #14 var addr
              262d 0500  ld   [x]         10927  ld([X])                         #15
              262e 60ff  xora $ff         10928  xora(255)                       #16
              262f 8001  adda $01         10929  adda(1)                         #17
              2630 f038  beq  .negw#20    10930  beq('.negw#20')                 #18
              2631 de00  st   [y,x++]     10931  st([Y,Xpp])                     #19
              2632 0500  ld   [x]         10932  ld([X])                         #20
              2633 60ff  xora $ff         10933  xora(255)                       #21
              2634 c600  st   [x]         10934  st([X])                         #22
              2635 1403  ld   $03,y       10935  ld(hi('REENTER'),Y)             #23
              2636 e0cb  jmp  y,$cb       10936  jmp(Y,'REENTER')                #24
              2637 00f2  ld   $f2         10937  ld(-28/2)                       #25
                                          10938  label('.negw#20')
.negw#20:     2638 0500  ld   [x]         10939  ld([X])                         #20
              2639 60ff  xora $ff         10940  xora(255)                       #21
              263a 8001  adda $01         10941  adda(1)                         #22
              263b c600  st   [x]         10942  st([X])                         #23
              263c 1403  ld   $03,y       10943  ld(hi('NEXTY'),Y)               #24
              263d e000  jmp  y,$00       10944  jmp(Y,'NEXTY')                  #25
              263e 00f2  ld   $f2         10945  ld(-28/2)                       #26
                                          10946
                                          10947  # ANDBA implementation
                                          10948  label('andba#13')
andba#13:     263f 0118  ld   [$18]       10949  ld([vAC])                       #13
              2640 2500  anda [x]         10950  anda([X])                       #14
              2641 c218  st   [$18]       10951  st([vAC])                       #15 vAC.lo &= var.lo
              2642 0000  ld   $00         10952  ld(0)                           #16
              2643 c219  st   [$19]       10953  st([vAC+1])                     #17 Store high result
              2644 1403  ld   $03,y       10954  ld(hi('NEXTY'),Y)               #18
              2645 e000  jmp  y,$00       10955  jmp(Y,'NEXTY')                  #19
              2646 00f5  ld   $f5         10956  ld(-22/2)                       #20
                                          10957
                                          10958  # ORBA implementation
                                          10959  label('orba#13')
orba#13:      2647 0118  ld   [$18]       10960  ld([vAC])                       #13
              2648 4500  ora  [x]         10961  ora([X])                        #14
              2649 c218  st   [$18]       10962  st([vAC])                       #15 vAC.lo |= var.lo
              264a 1403  ld   $03,y       10963  ld(hi('NEXTY'),Y)               #16
              264b e000  jmp  y,$00       10964  jmp(Y,'NEXTY')                  #17
              264c 00f6  ld   $f6         10965  ld(-20/2)                       #18
                                          10966
                                          10967  # XORBA implementation
                                          10968  label('xorba#13')
xorba#13:     264d 0118  ld   [$18]       10969  ld([vAC])                       #13
              264e 6500  xora [x]         10970  xora([X])                       #14
              264f c218  st   [$18]       10971  st([vAC])                       #15 vAC.lo ^= var.lo
              2650 1403  ld   $03,y       10972  ld(hi('NEXTY'),Y)               #16
              2651 e000  jmp  y,$00       10973  jmp(Y,'NEXTY')                  #17
              2652 00f6  ld   $f6         10974  ld(-20/2)                       #18
                                          10975
                                          10976  # FREQM implementation, (frequency control for static data in the correct format, i.e. MIDI)
                                          10977  label('freqm#13')
freqm#13:     2653 112b  ld   [$2b],x     10978  ld([sysArgs+7],X)               #13 chan var, (operand from PREFX2)
              2654 0500  ld   [x]         10979  ld([X])                         #14
              2655 2003  anda $03         10980  anda(3)                         #15
              2656 9401  adda $01,y       10981  adda(1,Y)                       #16
              2657 10fc  ld   $fc,x       10982  ld(0xFC,X)                      #17
              2658 0118  ld   [$18]       10983  ld([vAC])                       #18
              2659 de00  st   [y,x++]     10984  st([Y,Xpp])                     #19
              265a 0119  ld   [$19]       10985  ld([vAC+1])                     #20
              265b ce00  st   [y,x]       10986  st([Y,X])                       #21
              265c 1403  ld   $03,y       10987  ld(hi('NEXTY'),Y)               #22
              265d e000  jmp  y,$00       10988  jmp(Y,'NEXTY')                  #23
              265e 00f3  ld   $f3         10989  ld(-26/2)                       #24
                                          10990
                                          10991  # FREQA implementation
                                          10992  label('freqa#13')
freqa#13:     265f 0500  ld   [x]         10993  ld([X])                         #13
              2660 a001  suba $01         10994  suba(1)                         #14
              2661 2003  anda $03         10995  anda(3)                         #15
              2662 9401  adda $01,y       10996  adda(1,Y)                       #16
              2663 10fc  ld   $fc,x       10997  ld(0xFC,X)                      #17
              2664 0118  ld   [$18]       10998  ld([vAC])                       #18
              2665 de00  st   [y,x++]     10999  st([Y,Xpp])                     #19
              2666 0119  ld   [$19]       11000  ld([vAC+1])                     #20
              2667 ce00  st   [y,x]       11001  st([Y,X])                       #21
              2668 1403  ld   $03,y       11002  ld(hi('NEXTY'),Y)               #22
              2669 e000  jmp  y,$00       11003  jmp(Y,'NEXTY')                  #23
              266a 00f3  ld   $f3         11004  ld(-26/2)                       #24
                                          11005
                                          11006  # FREQI implementation
                                          11007  label('freqi#13')
freqi#13:     266b 2003  anda $03         11008  anda(3)                         #13 channel
              266c 9401  adda $01,y       11009  adda(1,Y)                       #14
              266d 10fc  ld   $fc,x       11010  ld(0xFC,X)                      #15
              266e 0118  ld   [$18]       11011  ld([vAC])                       #16
              266f de00  st   [y,x++]     11012  st([Y,Xpp])                     #17
              2670 0119  ld   [$19]       11013  ld([vAC+1])                     #18
              2671 ce00  st   [y,x]       11014  st([Y,X])                       #19
              2672 1403  ld   $03,y       11015  ld(hi('NEXTY'),Y)               #20
              2673 e000  jmp  y,$00       11016  jmp(Y,'NEXTY')                  #21
              2674 00f4  ld   $f4         11017  ld(-24/2)                       #22
                                          11018
                                          11019  # VOLM implementation, (volume control for static data in the correct format, i.e. MIDI)
                                          11020  label('volm#13')
volm#13:      2675 0500  ld   [x]         11021  ld([X])                         #13 chan var, (operand from PREFX2)
              2676 2003  anda $03         11022  anda(3)                         #14
              2677 9401  adda $01,y       11023  adda(1,Y)                       #15
              2678 10fa  ld   $fa,x       11024  ld(0xFA,X)                      #16
              2679 0118  ld   [$18]       11025  ld([vAC])                       #17
              267a ce00  st   [y,x]       11026  st([Y,X])                       #18
              267b 1403  ld   $03,y       11027  ld(hi('REENTER'),Y)             #19
              267c e0cb  jmp  y,$cb       11028  jmp(Y,'REENTER')                #20
              267d 00f4  ld   $f4         11029  ld(-24/2)                       #21
                                          11030
                                          11031  # VOLA implementation
                                          11032  label('vola#13')
vola#13:      267e 0500  ld   [x]         11033  ld([X])                         #13
              267f a001  suba $01         11034  suba(1)                         #14
              2680 2003  anda $03         11035  anda(3)                         #15
              2681 9401  adda $01,y       11036  adda(1,Y)                       #16
              2682 10fa  ld   $fa,x       11037  ld(0xFA,X)                      #17
              2683 003f  ld   $3f         11038  ld(63)                          #18
              2684 a118  suba [$18]       11039  suba([vAC])                     #19
              2685 8040  adda $40         11040  adda(64)                        #20
              2686 ce00  st   [y,x]       11041  st([Y,X])                       #21
              2687 1403  ld   $03,y       11042  ld(hi('NEXTY'),Y)               #22
              2688 e000  jmp  y,$00       11043  jmp(Y,'NEXTY')                  #23
              2689 00f3  ld   $f3         11044  ld(-26/2)                       #24
                                          11045
                                          11046  # MODA implementation
                                          11047  label('moda#13')
moda#13:      268a 0500  ld   [x]         11048  ld([X])                         #13
              268b a001  suba $01         11049  suba(1)                         #14
              268c 2003  anda $03         11050  anda(3)                         #15
              268d 9401  adda $01,y       11051  adda(1,Y)                       #16
              268e 10fb  ld   $fb,x       11052  ld(0xFB,X)                      #17
              268f 0118  ld   [$18]       11053  ld([vAC])                       #18
              2690 ce00  st   [y,x]       11054  st([Y,X])                       #19
              2691 1403  ld   $03,y       11055  ld(hi('NEXTY'),Y)               #20
              2692 e000  jmp  y,$00       11056  jmp(Y,'NEXTY')                  #21
              2693 00f4  ld   $f4         11057  ld(-24/2)                       #22
                                          11058
                                          11059  # MODI implementation
                                          11060  label('modi#13')
modi#13:      2694 2003  anda $03         11061  anda(3)                         #13
              2695 9401  adda $01,y       11062  adda(1,Y)                       #14
              2696 10fa  ld   $fa,x       11063  ld(0xFA,X)                      #15
              2697 dc00  st   $00,[y,x++] 11064  st(0,[Y,Xpp])                   #16
              2698 0118  ld   [$18]       11065  ld([vAC])                       #17
              2699 ce00  st   [y,x]       11066  st([Y,X])                       #18
              269a 1403  ld   $03,y       11067  ld(hi('REENTER'),Y)             #19
              269b e0cb  jmp  y,$cb       11068  jmp(Y,'REENTER')                #20
              269c 00f4  ld   $f4         11069  ld(-24/2)                       #21
                                          11070
                                          11071  # OSCZ implementation
                                          11072  label('oscz#13')
oscz#13:      269d 2003  anda $03         11073  anda(3)                         #13 channel
              269e 9401  adda $01,y       11074  adda(1,Y)                       #14
              269f 10fe  ld   $fe,x       11075  ld(0xFE,X)                      #15
              26a0 dc00  st   $00,[y,x++] 11076  st(0,[Y,Xpp])                   #16
              26a1 cc00  st   $00,[y,x]   11077  st(0,[Y,X])                     #17
              26a2 1403  ld   $03,y       11078  ld(hi('NEXTY'),Y)               #18
              26a3 e000  jmp  y,$00       11079  jmp(Y,'NEXTY')                  #19
              26a4 00f5  ld   $f5         11080  ld(-22/2)                       #20
                                          11081
                                          11082
                                          11083  # SMPCPY implementation
                                          11084  label('smpcpy#13')
smpcpy#13:    26a5 1400  ld   $00,y       11085  ld(0,Y)                         #13
              26a6 00f1  ld   $f1         11086  ld(min(0,maxTicks-60/2))        #14
              26a7 8115  adda [$15]       11087  adda([vTicks])                  #15
              26a8 e8db  blt  .smpcpy#18  11088  blt('.smpcpy#18')               #16 not enough time left, so retry
              26a9 0500  ld   [x]         11089  ld([X])                         #17 dst address = [dst var]
              26aa de00  st   [y,x++]     11090  st([Y,Xpp])                     #18
              26ab c2b0  st   [$b0]       11091  st([0xB0])                      #19
              26ac 0500  ld   [x]         11092  ld([X])                         #20
              26ad c2b1  st   [$b1]       11093  st([0xB1])                      #21
              26ae 1118  ld   [$18],x     11094  ld([vAC],X)                     #22 low byte of src address
              26af 1519  ld   [$19],y     11095  ld([vAC+1],Y)                   #23 high byte of arc address
              26b0 0d00  ld   [y,x]       11096  ld([Y,X])                       #24
              26b1 c21d  st   [$1d]       11097  st([vTmp])                      #25 packed sample, 4:4
              26b2 1407  ld   $07,y       11098  ld(soundTable>>8,Y)             #26
              26b3 20f0  anda $f0         11099  anda(0xF0)                      #27 high nibble
              26b4 5003  ora  $03,x       11100  ora(0x03,X)                     #28
              26b5 0d00  ld   [y,x]       11101  ld([Y,X])                       #29 high nibble >>2
              26b6 11b0  ld   [$b0],x     11102  ld([0xB0],X)                    #30 low byte dst address
              26b7 15b1  ld   [$b1],y     11103  ld([0xB1],Y)                    #31 high byte dst address
              26b8 ce00  st   [y,x]       11104  st([Y,X])                       #32 [0x0702 + i] = 6bit sample
              26b9 01b0  ld   [$b0]       11105  ld([0xB0])                      #33
              26ba 9004  adda $04,x       11106  adda(4,X)                       #34
              26bb 8008  adda $08         11107  adda(8)                         #35
              26bc c2b0  st   [$b0]       11108  st([0xB0])                      #36
              26bd 011d  ld   [$1d]       11109  ld([vTmp])                      #37 packed sample, 4:4
              26be 200f  anda $0f         11110  anda(0x0F)                      #38 low nibble
              26bf 8200  adda ac          11111  adda(AC)                        #39
              26c0 8200  adda ac          11112  adda(AC)                        #40 low nibble <<2
              26c1 ce00  st   [y,x]       11113  st([Y,X])                       #41 [0x0706 + i] = 6bit sample
              26c2 112b  ld   [$2b],x     11114  ld([sysArgs+7],X)               #42
              26c3 01b0  ld   [$b0]       11115  ld([0xB0])                      #43
              26c4 c600  st   [x]         11116  st([X])                         #44
              26c5 a002  suba $02         11117  suba(0x02)                      #45
              26c6 f0d8  beq  .smpcpy#48  11118  beq('.smpcpy#48')               #46 check for end sample
              26c7 0118  ld   [$18]       11119  ld([vAC])                       #47
              26c8 8001  adda $01         11120  adda(1)                         #48
              26c9 ecd3  bne  .smpcpy#51  11121  bne('.smpcpy#51')               #49
              26ca c218  st   [$18]       11122  st([vAC])                       #50
              26cb 0119  ld   [$19]       11123  ld([vAC+1])                     #51
              26cc 8001  adda $01         11124  adda(1)                         #52
              26cd c219  st   [$19]       11125  st([vAC+1])                     #53
              26ce 0022  ld   $22         11126  ld(hi('PREFX2_PAGE'))           #54 ENTER is at $(n-1)ff, where n = instruction page
              26cf c202  st   [$02]       11127  st([vCpuSelect])                #55 restore PREFX2 instruction page
              26d0 9401  adda $01,y       11128  adda(1,Y)                       #56 restart instruction
              26d1 e000  jmp  y,$00       11129  jmp(Y,'NEXTY')                  #57
              26d2 00e2  ld   $e2         11130  ld(-60/2)                       #58
                                          11131
                                          11132  label('.smpcpy#51')
.smpcpy#51:   26d3 0022  ld   $22         11133  ld(hi('PREFX2_PAGE'))           #51 ENTER is at $(n-1)ff, where n = instruction page
              26d4 c202  st   [$02]       11134  st([vCpuSelect])                #52 restore PREFX2 instruction page
              26d5 9401  adda $01,y       11135  adda(1,Y)                       #53 restart instruction
              26d6 e0cb  jmp  y,$cb       11136  jmp(Y,'REENTER')                #54
              26d7 00e3  ld   $e3         11137  ld(-58/2)                       #55
                                          11138
                                          11139  label('.smpcpy#48')
.smpcpy#48:   26d8 1403  ld   $03,y       11140  ld(hi('NEXTY'),Y)               #48
              26d9 e000  jmp  y,$00       11141  jmp(Y,'NEXTY')                  #49
              26da 00e6  ld   $e6         11142  ld(-52/2)                       #50
                                          11143
                                          11144  label('.smpcpy#18')
.smpcpy#18:   26db 0022  ld   $22         11145  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              26dc c202  st   [$02]       11146  st([vCpuSelect])                #19 restore PREFX2 instruction page
              26dd 9401  adda $01,y       11147  adda(1,Y)                       #20 retry instruction
              26de e000  jmp  y,$00       11148  jmp(Y,'NEXTY')                  #21
              26df 00f4  ld   $f4         11149  ld(-24/2)                       #22
                                          11150
                                          11151
                                          11152  # -------------------------------------------------------------
                                          11153  # vCPU instructions for comparisons between two 16-bit operands
                                          11154  # -------------------------------------------------------------
                                          11155  #
                                          11156  # vCPU's conditional branching (BCC) always compares vAC against 0,
                                          11157  # treating vAC as a two's complement 16-bit number. When we need to
                                          11158  # compare two arbitrary numnbers we normally first take their difference
                                          11159  # with SUBW.  However, when this difference is too large, the subtraction
                                          11160  # overflows and we get the wrong outcome. To get it right over the
                                          11161  # entire range, an elaborate sequence is needed. TinyBASIC uses this
                                          11162  # blurp for its relational operators. (It compares stack variable $02
                                          11163  # with zero page variable $3a.)
                                          11164  #
                                          11165  #       0461  ee 02            LDLW  $02
                                          11166  #       0463  fc 3a            XORW  $3a
                                          11167  #       0465  35 53 6a         BGE   $046c
                                          11168  #       0468  ee 02            LDLW  $02
                                          11169  #       046a  90 6e            BRA   $0470
                                          11170  #       046c  ee 02            LDLW  $02
                                          11171  #       046e  b8 3a            SUBW  $3a
                                          11172  #       0470  35 56 73         BLE   $0475
                                          11173  #
                                          11174  # The CMPHS and CMPHU instructions were introduced to simplify this.
                                          11175  # They inspect both operands to see if there is an overflow risk. If
                                          11176  # so, they modify vAC such that their difference gets smaller, while
                                          11177  # preserving the relation between the two operands. After that, the
                                          11178  # SUBW instruction can't overflow and we achieve a correct comparison.
                                          11179  # Use CMPHS for signed comparisons and CMPHU for unsigned. With these,
                                          11180  # the sequence above becomes:
                                          11181  #
                                          11182  #       0461  ee 02            LDLW  $02
                                          11183  #       0463  1f 3b            CMPHS $3b        Note: high byte of operand
                                          11184  #       0465  b8 3a            SUBW  $3a
                                          11185  #       0467  35 56 73         BLE   $0475
                                          11186  #
                                          11187  # CMPHS/CMPHU don't make much sense other than in combination with
                                          11188  # SUBW. These modify vACH, if needed, as given in the following table:
                                          11189  #
                                          11190  #       vACH  varH  |     vACH
                                          11191  #       bit7  bit7  | CMPHS  CMPHU
                                          11192  #       ---------------------------
                                          11193  #         0     0   |  vACH   vACH      no change needed
                                          11194  #         0     1   | varH+1 varH-1     narrowing the range
                                          11195  #         1     0   | varH-1 varH+1     narrowing the range
                                          11196  #         1     1   |  vACH   vACH      no change needed
                                          11197  #       ---------------------------
                                          11198
                                          11199  # CMPHS implementation
                                          11200  label('cmphs#13')
cmphs#13:     26e0 0500  ld   [x]         11201  ld([X])                         #13
              26e1 6119  xora [$19]       11202  xora([vAC+1])                   #14
              26e2 f4f4  bge  .cmphu#17   11203  bpl('.cmphu#17')                #15 Skip if same sign
              26e3 0119  ld   [$19]       11204  ld([vAC+1])                     #16
              26e4 e8e7  blt  $26e7       11205  bmi(pc()+3)                     #17
              26e5 fce8  bra  .cmphs#20   11206  bra(pc()+3)                     #18
                                          11207
                                          11208  label('.cmphs#19')
.cmphs#19:    26e6 0001  ld   $01         11209  ld(+1)                          #19    vAC < variable
              26e7 00ff  ld   $ff         11210  ld(-1)                          #19(!) vAC > variable
                                          11211
                                          11212  label('.cmphs#20')
.cmphs#20:    26e8 8500  adda [x]         11213  adda([X])                       #20
              26e9 c219  st   [$19]       11214  st([vAC+1])                     #21
              26ea 1403  ld   $03,y       11215  ld(hi('NEXTY'),Y)               #22
              26eb e000  jmp  y,$00       11216  jmp(Y,'NEXTY')                  #23
              26ec 00f3  ld   $f3         11217  ld(-26/2)                       #24
                                          11218
                                          11219  # CMPHU implementation
                                          11220  label('cmphu#13')
cmphu#13:     26ed 0500  ld   [x]         11221  ld([X])                         #13
              26ee 6119  xora [$19]       11222  xora([vAC+1])                   #14
              26ef f4f4  bge  .cmphu#17   11223  bpl('.cmphu#17')                #15 Skip if same sign
              26f0 0119  ld   [$19]       11224  ld([vAC+1])                     #16
              26f1 e8e6  blt  .cmphs#19   11225  bmi('.cmphs#19')                #17
              26f2 fce8  bra  .cmphs#20   11226  bra('.cmphs#20')                #18
              26f3 00ff  ld   $ff         11227  ld(-1)                          #19    vAC > variable
                                          11228
                                          11229  # No-operation for CMPHS/CMPHU when high bits are equal
                                          11230  label('.cmphu#17')
.cmphu#17:    26f4 1403  ld   $03,y       11231  ld(hi('REENTER'),Y)             #17
              26f5 e0cb  jmp  y,$cb       11232  jmp(Y,'REENTER')                #18
              26f6 00f5  ld   $f5         11233  ld(-22/2)                       #19
                                          11234
                                          11235
              26f7 0200  nop              11236  fillers(until=0xff)
              26f8 0200  nop
              26f9 0200  nop
              * 8 times
              26ff 0200  nop              11237  align(0x100, size=0x100)
                                          11238
                                          11239  #-----------------------------------------------------------------------
                                          11240  #       PREFX1 implementation page, (0x2700)
                                          11241  #-----------------------------------------------------------------------
                                          11242  #
                                          11243  # NOTE implementation: vAC = ROM:[NotesTable + vAC.lo*2], 22 + 46 cycles
                                          11244  label('note#13')
note#13:      2700 c21d  st   [$1d]       11245  st([vTmp])                      #13 low byte of low note return address
              2701 00f7  ld   $f7         11246  ld(min(0,maxTicks-48/2))        #14
              2702 8115  adda [$15]       11247  adda([vTicks])                  #15
              2703 e816  blt  .note#18    11248  blt('.note#18')                 #16 not enough time left, so retry
              2704 0027  ld   $27         11249  ld(hi('note#13'))               #17
              2705 c2c1  st   [$c1]       11250  st([0xC1])                      #18
              2706 1409  ld   $09,y       11251  ld(hi('noteTrampoline'),Y)      #19
              2707 0118  ld   [$18]       11252  ld([vAC])                       #20 vAC.lo = note index
              2708 8200  adda ac          11253  adda(AC)                        #21 vAC.lo*2, (low note byte)
              2709 e0c0  jmp  y,$c0       11254  jmp(Y,'noteTrampoline')         #22
              270a c219  st   [$19]       11255  st([vAC+1])                     #23 vAC.hi = vAC.lo*2
                                          11256  label('.note#30')
.note#30:     270b c218  st   [$18]       11257  st([vAC])                       #30 vAC.lo = note.lo
              270c 0012  ld   $12         11258  ld('.note#43')                  #31
              270d c21d  st   [$1d]       11259  st([vTmp])                      #32 low byte of high note return address
              270e 1409  ld   $09,y       11260  ld(hi('noteTrampoline'),Y)      #33
              270f 0119  ld   [$19]       11261  ld([vAC+1])                     #34
              2710 e0c0  jmp  y,$c0       11262  jmp(Y,'noteTrampoline')         #35
              2711 8001  adda $01         11263  adda(1)                         #36 vAC.lo*2 + 1, (high note byte)
                                          11264  label('.note#43')
.note#43:     2712 c219  st   [$19]       11265  st([vAC+1])                     #43
              2713 1403  ld   $03,y       11266  ld(hi('NEXTY'),Y)               #44
              2714 e000  jmp  y,$00       11267  jmp(Y,'NEXTY')                  #45
              2715 00e8  ld   $e8         11268  ld(-48/2)                       #46
                                          11269  label('.note#18')
.note#18:     2716 0023  ld   $23         11270  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2717 c202  st   [$02]       11271  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2718 9401  adda $01,y       11272  adda(1,Y)                       #20 retry instruction
              2719 e000  jmp  y,$00       11273  jmp(Y,'NEXTY')                  #21
              271a 00f4  ld   $f4         11274  ld(-24/2)                       #22
                                          11275
                                          11276  # MIDI implementation: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 22 + 48 cycles
                                          11277  label('midi#13')
midi#13:      271b c21d  st   [$1d]       11278  st([vTmp])                      #13 low byte of low midi return address
              271c 00f6  ld   $f6         11279  ld(min(0,maxTicks-50/2))        #14
              271d 8115  adda [$15]       11280  adda([vTicks])                  #15
              271e e832  blt  .midi#18    11281  blt('.midi#18')                 #16 not enough time left, so retry
              271f 0027  ld   $27         11282  ld(hi('midi#13'))               #17
              2720 c2c1  st   [$c1]       11283  st([0xC1])                      #18
              2721 1409  ld   $09,y       11284  ld(hi('noteTrampoline'),Y)      #19
              2722 0118  ld   [$18]       11285  ld([vAC])                       #20 vAC.lo = midi index
              2723 a00b  suba $0b         11286  suba(11)                        #21 vAC.lo -= 11
              2724 8200  adda ac          11287  adda(AC)                        #22 vAC.lo*2, (low midi byte)
              2725 e0c0  jmp  y,$c0       11288  jmp(Y,'noteTrampoline')         #23
              2726 c219  st   [$19]       11289  st([vAC+1])                     #24 vAC.hi = vAC.lo*2
                                          11290  label('.midi#31')
.midi#31:     2727 c218  st   [$18]       11291  st([vAC])                       #31 vAC.lo = midi.lo
              2728 002e  ld   $2e         11292  ld('.midi#44')                  #32
              2729 c21d  st   [$1d]       11293  st([vTmp])                      #33 low byte of high midi return address
              272a 1409  ld   $09,y       11294  ld(hi('noteTrampoline'),Y)      #34
              272b 0119  ld   [$19]       11295  ld([vAC+1])                     #35
              272c e0c0  jmp  y,$c0       11296  jmp(Y,'noteTrampoline')         #36
              272d 8001  adda $01         11297  adda(1)                         #37 vAC.lo*2 + 1, (high midi byte)
                                          11298  label('.midi#44')
.midi#44:     272e c219  st   [$19]       11299  st([vAC+1])                     #44
              272f 1403  ld   $03,y       11300  ld(hi('REENTER'),Y)             #45
              2730 e0cb  jmp  y,$cb       11301  jmp(Y,'REENTER')                #46
              2731 00e7  ld   $e7         11302  ld(-50/2)                       #47
                                          11303  label('.midi#18')
.midi#18:     2732 0023  ld   $23         11304  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2733 c202  st   [$02]       11305  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2734 9401  adda $01,y       11306  adda(1,Y)                       #20 retry instruction
              2735 e000  jmp  y,$00       11307  jmp(Y,'NEXTY')                  #21
              2736 00f4  ld   $f4         11308  ld(-24/2)                       #22
                                          11309
                                          11310  # XLA implementation, (lb3361)
                                          11311  label('xla#13')
xla#13:       2737 c21d  st   [$1d]       11312  st([vTmp])                      #13
              2738 011a  ld   [$1a]       11313  ld([vLR])                       #14
              2739 c218  st   [$18]       11314  st([vAC])                       #15
              273a 011d  ld   [$1d]       11315  ld([vTmp])                      #16
              273b c21a  st   [$1a]       11316  st([vLR])                       #17
              273c 0119  ld   [$19]       11317  ld([vAC+1])                     #18
              273d c21d  st   [$1d]       11318  st([vTmp])                      #19
              273e 011b  ld   [$1b]       11319  ld([vLR+1])                     #20
              273f c219  st   [$19]       11320  st([vAC+1])                     #21
              2740 011d  ld   [$1d]       11321  ld([vTmp])                      #22
              2741 c21b  st   [$1b]       11322  st([vLR+1])                     #23
              2742 1403  ld   $03,y       11323  ld(hi('NEXTY'),Y)               #24
              2743 e000  jmp  y,$00       11324  jmp(Y,'NEXTY')                  #25
              2744 00f2  ld   $f2         11325  ld(-28/2)                       #26
                                          11326
                                          11327  # RANDW implementation: uses Marcel's algorithm from SYS_Random_34
                                          11328  label('randw#13')
randw#13:     2745 010e  ld   [$0e]       11329  ld([frameCount])                #13
              2746 6107  xora [$07]       11330  xora([entropy+1])               #14
              2747 610f  xora [$0f]       11331  xora([serialRaw])               #15
              2748 8106  adda [$06]       11332  adda([entropy+0])               #16
              2749 c206  st   [$06]       11333  st([entropy+0])                 #17
              274a c218  st   [$18]       11334  st([vAC+0])                     #18
              274b 8116  adda [$16]       11335  adda([vPC])                     #19
              274c e84f  blt  $274f       11336  bmi(pc()+3)                     #20
              274d fc50  bra  $2750       11337  bra(pc()+3)                     #21
              274e 6053  xora $53         11338  xora(64+16+2+1)                 #22
              274f 606c  xora $6c         11339  xora(64+32+8+4)                 #22(!)
              2750 8107  adda [$07]       11340  adda([entropy+1])               #23
              2751 c207  st   [$07]       11341  st([entropy+1])                 #24
              2752 c219  st   [$19]       11342  st([vAC+1])                     #25
              2753 1403  ld   $03,y       11343  ld(hi('NEXTY'),Y)               #26
              2754 e000  jmp  y,$00       11344  jmp(Y,'NEXTY')                  #27
              2755 00f1  ld   $f1         11345  ld(-30/2)                       #28
                                          11346
                                          11347  # LDPX implementation
                                          11348  label('ldpx#13')
ldpx#13:      2756 0119  ld   [$19]       11349  ld([vAC+1])                     #13 y
              2757 8119  adda [$19]       11350  adda([vAC+1])                   #14 y*2
              2758 1200  ld   ac,x        11351  ld(AC,X)                        #15
              2759 1401  ld   $01,y       11352  ld(1,Y)                         #16 Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              275a 0d00  ld   [y,x]       11353  ld([Y,X])                       #17
              275b 1600  ld   ac,y        11354  ld(AC,Y)                        #18 Y = [Y,X]
              275c 1118  ld   [$18],x     11355  ld([vAC],X)                     #19
              275d 0d00  ld   [y,x]       11356  ld([Y,X])                       #20 colour = [Y,X]
              275e c218  st   [$18]       11357  st([vAC])                       #21
              275f 0000  ld   $00         11358  ld(0)                           #22
              2760 c219  st   [$19]       11359  st([vAC+1])                     #23
              2761 1403  ld   $03,y       11360  ld(hi('NEXTY'),Y)               #24
              2762 e000  jmp  y,$00       11361  jmp(Y,'NEXTY')                  #25
              2763 00f2  ld   $f2         11362  ld(-28/2)                       #26
                                          11363
                                          11364
                                          11365  # ABSW implementation
                                          11366  label('absw#13')
absw#13:      2764 e868  blt  .absw#15    11367  bmi('.absw#15')                 #13
              2765 1403  ld   $03,y       11368  ld(hi('NEXTY'),Y)               #14
              2766 e000  jmp  y,$00       11369  jmp(Y,'NEXTY')                  #15
              2767 00f7  ld   $f7         11370  ld(-18/2)                       #16
                                          11371
                                          11372  label('.absw#15')
.absw#15:     2768 0118  ld   [$18]       11373  ld([vAC])                       #15
              2769 60ff  xora $ff         11374  xora(0xFF)                      #16
              276a 8001  adda $01         11375  adda(1)                         #17
              276b f073  beq  .absw#20    11376  beq('.absw#20')                 #18
              276c c218  st   [$18]       11377  st([vAC])                       #19
              276d 0119  ld   [$19]       11378  ld([vAC+1])                     #20
              276e 60ff  xora $ff         11379  xora(255)                       #21
              276f c219  st   [$19]       11380  st([vAC+1])                     #22
              2770 1403  ld   $03,y       11381  ld(hi('REENTER'),Y)             #23
              2771 e0cb  jmp  y,$cb       11382  jmp(Y,'REENTER')                #24
              2772 00f2  ld   $f2         11383  ld(-28/2)                       #25
                                          11384
                                          11385  label('.absw#20')
.absw#20:     2773 0119  ld   [$19]       11386  ld([vAC+1])                     #20
              2774 60ff  xora $ff         11387  xora(255)                       #21
              2775 8001  adda $01         11388  adda(1)                         #22
              2776 c219  st   [$19]       11389  st([vAC+1])                     #23
              2777 1403  ld   $03,y       11390  ld(hi('NEXTY'),Y)               #24
              2778 e000  jmp  y,$00       11391  jmp(Y,'NEXTY')                  #25
              2779 00f2  ld   $f2         11392  ld(-28/2)                       #26
                                          11393
                                          11394
                                          11395  # SGNW implementation
                                          11396  label('sgnw#13')
sgnw#13:      277a e880  blt  .sgnw#15    11397  bmi('.sgnw#15')                 #13
              277b 4118  ora  [$18]       11398  ora([vAC])                      #14
              277c ec86  bne  .sgnw#17    11399  bne('.sgnw#17')                 #15
              277d 1403  ld   $03,y       11400  ld(hi('NEXTY'),Y)               #16 sgn(vAC) = 0
              277e e000  jmp  y,$00       11401  jmp(Y,'NEXTY')                  #17
              277f 00f6  ld   $f6         11402  ld(-20/2)                       #18
                                          11403
                                          11404  label('.sgnw#15')
.sgnw#15:     2780 00ff  ld   $ff         11405  ld(0xFF)                        #15
              2781 c218  st   [$18]       11406  st([vAC])                       #16
              2782 c219  st   [$19]       11407  st([vAC+1])                     #17
              2783 1403  ld   $03,y       11408  ld(hi('NEXTY'),Y)               #18 sgn(vAC) = -1
              2784 e000  jmp  y,$00       11409  jmp(Y,'NEXTY')                  #19
              2785 00f5  ld   $f5         11410  ld(-22/2)                       #20
                                          11411
                                          11412  label('.sgnw#17')
.sgnw#17:     2786 0001  ld   $01         11413  ld(1)                           #17
              2787 c218  st   [$18]       11414  st([vAC])                       #18
              2788 0000  ld   $00         11415  ld(0)                           #19
              2789 c219  st   [$19]       11416  st([vAC+1])                     #20
              278a 1403  ld   $03,y       11417  ld(hi('REENTER'),Y)             #21 sgn(vAC) = 1
              278b e0cb  jmp  y,$cb       11418  jmp(Y,'REENTER')                #22
              278c 00f3  ld   $f3         11419  ld(-26/2)                       #23
                                          11420
                                          11421
                                          11422  # MULB3 implementation
                                          11423  label('mulb3#13')
mulb3#13:     278d 0118  ld   [$18]       11424  ld([vAC])                       #13
              278e 8200  adda ac          11425  adda(AC)                        #14
              278f 8118  adda [$18]       11426  adda([vAC])                     #15
              2790 c218  st   [$18]       11427  st([vAC])                       #16
              2791 0000  ld   $00         11428  ld(0)                           #17
              2792 c219  st   [$19]       11429  st([vAC+1])                     #18
              2793 1403  ld   $03,y       11430  ld(hi('REENTER'),Y)             #19
              2794 e0cb  jmp  y,$cb       11431  jmp(Y,'REENTER')                #20
              2795 00f4  ld   $f4         11432  ld(-24/2)                       #21
                                          11433
                                          11434  # MULB5 implementation
                                          11435  label('mulb5#13')
mulb5#13:     2796 0118  ld   [$18]       11436  ld([vAC])                       #13
              2797 8200  adda ac          11437  adda(AC)                        #14
              2798 8200  adda ac          11438  adda(AC)                        #15
              2799 8118  adda [$18]       11439  adda([vAC])                     #16
              279a c218  st   [$18]       11440  st([vAC])                       #17
              279b 0000  ld   $00         11441  ld(0)                           #18
              279c c219  st   [$19]       11442  st([vAC+1])                     #19
              279d 1403  ld   $03,y       11443  ld(hi('NEXTY'),Y)               #20
              279e e000  jmp  y,$00       11444  jmp(Y,'NEXTY')                  #21
              279f 00f4  ld   $f4         11445  ld(-24/2)                       #22
                                          11446
                                          11447  # MULB6 implementation
                                          11448  label('mulb6#13')
mulb6#13:     27a0 0118  ld   [$18]       11449  ld([vAC])                       #13
              27a1 8200  adda ac          11450  adda(AC)                        #14
              27a2 8200  adda ac          11451  adda(AC)                        #15
              27a3 8118  adda [$18]       11452  adda([vAC])                     #16
              27a4 8118  adda [$18]       11453  adda([vAC])                     #17
              27a5 c218  st   [$18]       11454  st([vAC])                       #18
              27a6 0000  ld   $00         11455  ld(0)                           #19
              27a7 c219  st   [$19]       11456  st([vAC+1])                     #20
              27a8 1403  ld   $03,y       11457  ld(hi('REENTER'),Y)             #21
              27a9 e0cb  jmp  y,$cb       11458  jmp(Y,'REENTER')                #22
              27aa 00f3  ld   $f3         11459  ld(-26/2)                       #23
                                          11460
                                          11461  # MULB7 implementation, (overflows at the same rate as MULB8)
                                          11462  label('mulb7#13')
mulb7#13:     27ab 0118  ld   [$18]       11463  ld([vAC])                       #13
              27ac 8200  adda ac          11464  adda(AC)                        #14
              27ad 8200  adda ac          11465  adda(AC)                        #15
              27ae 8200  adda ac          11466  adda(AC)                        #16
              27af a118  suba [$18]       11467  suba([vAC])                     #17
              27b0 c218  st   [$18]       11468  st([vAC])                       #18
              27b1 0000  ld   $00         11469  ld(0)                           #19
              27b2 c219  st   [$19]       11470  st([vAC+1])                     #20
              27b3 1403  ld   $03,y       11471  ld(hi('REENTER'),Y)             #21
              27b4 e0cb  jmp  y,$cb       11472  jmp(Y,'REENTER')                #22
              27b5 00f3  ld   $f3         11473  ld(-26/2)                       #23
                                          11474
                                          11475  # MULB8 implementation
                                          11476  label('mulb8#13')
mulb8#13:     27b6 0118  ld   [$18]       11477  ld([vAC])                       #13
              27b7 8200  adda ac          11478  adda(AC)                        #14
              27b8 8200  adda ac          11479  adda(AC)                        #15
              27b9 8200  adda ac          11480  adda(AC)                        #16
              27ba c218  st   [$18]       11481  st([vAC])                       #17
              27bb 0000  ld   $00         11482  ld(0)                           #18
              27bc c219  st   [$19]       11483  st([vAC+1])                     #19
              27bd 1403  ld   $03,y       11484  ld(hi('NEXTY'),Y)               #20
              27be e000  jmp  y,$00       11485  jmp(Y,'NEXTY')                  #21
              27bf 00f4  ld   $f4         11486  ld(-24/2)                       #22
                                          11487
                                          11488  # MULB9 implementation
                                          11489  label('mulb9#13')
mulb9#13:     27c0 0118  ld   [$18]       11490  ld([vAC])                       #13
              27c1 8200  adda ac          11491  adda(AC)                        #14
              27c2 8200  adda ac          11492  adda(AC)                        #15
              27c3 8200  adda ac          11493  adda(AC)                        #16
              27c4 8118  adda [$18]       11494  adda([vAC])                     #17
              27c5 c218  st   [$18]       11495  st([vAC])                       #18
              27c6 0000  ld   $00         11496  ld(0)                           #19
              27c7 c219  st   [$19]       11497  st([vAC+1])                     #20
              27c8 1403  ld   $03,y       11498  ld(hi('REENTER'),Y)             #21
              27c9 e0cb  jmp  y,$cb       11499  jmp(Y,'REENTER')                #22
              27ca 00f3  ld   $f3         11500  ld(-26/2)                       #23
                                          11501
                                          11502  # MULB10 implementation
                                          11503  label('mulb10#13')
mulb10#13:    27cb 0118  ld   [$18]       11504  ld([vAC])                       #13
              27cc 8200  adda ac          11505  adda(AC)                        #14
              27cd 8200  adda ac          11506  adda(AC)                        #15
              27ce 8200  adda ac          11507  adda(AC)                        #16
              27cf 8118  adda [$18]       11508  adda([vAC])                     #17
              27d0 8118  adda [$18]       11509  adda([vAC])                     #18
              27d1 c218  st   [$18]       11510  st([vAC])                       #19
              27d2 0000  ld   $00         11511  ld(0)                           #20
              27d3 c219  st   [$19]       11512  st([vAC+1])                     #21
              27d4 1403  ld   $03,y       11513  ld(hi('NEXTY'),Y)               #22
              27d5 e000  jmp  y,$00       11514  jmp(Y,'NEXTY')                  #23
              27d6 00f3  ld   $f3         11515  ld(-26/2)                       #24
                                          11516
                                          11517  # LSL8 implementation
                                          11518  label('lsl8#13')
lsl8#13:      27d7 1200  ld   ac,x        11519  ld(AC,X)                        #13
              27d8 0500  ld   [x]         11520  ld([X])                         #14
              27d9 c219  st   [$19]       11521  st([vAC+1])                     #15
              27da 0000  ld   $00         11522  ld(0)                           #16
              27db c218  st   [$18]       11523  st([vAC])                       #17
              27dc 1403  ld   $03,y       11524  ld(hi('NEXTY'),Y)               #18
              27dd e000  jmp  y,$00       11525  jmp(Y,'NEXTY')                  #19
              27de 00f5  ld   $f5         11526  ld(-22/2)                       #20
                                          11527
                                          11528  # WAITVB implementation
                                          11529  label('waitvb#13')
waitvb#13:    27df 0109  ld   [$09]       11530  ld([videoY])                    #13
              27e0 60b3  xora $b3         11531  xora(videoYline0)               #14
              27e1 f0e7  beq  .waitvb#17  11532  beq('.waitvb#17')               #15
              27e2 0023  ld   $23         11533  ld(hi('PREFX1_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              27e3 c202  st   [$02]       11534  st([vCpuSelect])                #17 restore PREFX1 instruction page
              27e4 9401  adda $01,y       11535  adda(1,Y)                       #18 retry instruction
              27e5 e000  jmp  y,$00       11536  jmp(Y,'NEXTY')                  #19
              27e6 00f5  ld   $f5         11537  ld(-22/2)                       #20
                                          11538  label('.waitvb#17')
.waitvb#17:   27e7 1403  ld   $03,y       11539  ld(hi('REENTER'),Y)             #17
              27e8 e0cb  jmp  y,$cb       11540  jmp(Y,'REENTER')                #18
              27e9 00f5  ld   $f5         11541  ld(-22/2)                       #19
                                          11542
                                          11543  # WAITVV implementation
                                          11544  label('waitvv#13')
waitvv#13:    27ea 012d  ld   [$2d]       11545  ld([jiffiesTick])               #13
              27eb 6500  xora [x]         11546  xora([X])                       #14
              27ec ecf2  bne  .waitvv#17  11547  bne('.waitvv#17')               #15
              27ed 0022  ld   $22         11548  ld(hi('PREFX2_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              27ee c202  st   [$02]       11549  st([vCpuSelect])                #17 restore PREFX2 instruction page
              27ef 9401  adda $01,y       11550  adda(1,Y)                       #18 retry instruction
              27f0 e000  jmp  y,$00       11551  jmp(Y,'NEXTY')                  #19
              27f1 00f5  ld   $f5         11552  ld(-22/2)                       #20
                                          11553  label('.waitvv#17')
.waitvv#17:   27f2 012d  ld   [$2d]       11554  ld([jiffiesTick])               #17
              27f3 c600  st   [x]         11555  st([X])                         #18
              27f4 1403  ld   $03,y       11556  ld(hi('REENTER'),Y)             #19
              27f5 e0cb  jmp  y,$cb       11557  jmp(Y,'REENTER')                #20
              27f6 00f4  ld   $f4         11558  ld(-24/2)                       #21
                                          11559
                                          11560
              27f7 0200  nop              11561  fillers(until=0xff)
              27f8 0200  nop
              27f9 0200  nop
              * 8 times
              27ff 0200  nop              11562  align(0x100, size=0x100)
                                          11563
                                          11564  #-----------------------------------------------------------------------
                                          11565  #       More vCPU instruction implementations, (0x2800)
                                          11566  #-----------------------------------------------------------------------
                                          11567  #
                                          11568  # ADDVI implementation
                                          11569  label('addvi#13')
addvi#13:     2800 1517  ld   [$17],y     11570  ld([vPC+1],Y)                   #13 vPC.hi
              2801 de00  st   [y,x++]     11571  st([Y,Xpp])                     #14 X++
              2802 c22a  st   [$2a]       11572  st([sysArgs+6])                 #15 immediate 8bit
              2803 00f4  ld   $f4         11573  ld(min(0,maxTicks-54/2))        #16
              2804 8115  adda [$15]       11574  adda([vTicks])                  #17
              2805 e829  blt  .addvi#20   11575  blt('.addvi#20')                #18 not enough time left, so retry
              2806 0d00  ld   [y,x]       11576  ld([Y,X])                       #19
              2807 de00  st   [y,x++]     11577  st([Y,Xpp])                     #20 X++
              2808 c22b  st   [$2b]       11578  st([sysArgs+7])                 #21 dst var addr
              2809 0d00  ld   [y,x]       11579  ld([Y,X])                       #22
              280a 1200  ld   ac,x        11580  ld(AC,X)                        #23 src addr
              280b 1400  ld   $00,y       11581  ld(0,Y)                         #24
              280c 0500  ld   [x]         11582  ld([X])                         #25
              280d c218  st   [$18]       11583  st([vAC])                       #26 vAC.lo = src.lo
              280e de00  st   [y,x++]     11584  st([Y,Xpp])                     #27
              280f 0500  ld   [x]         11585  ld([X])                         #28
              2810 c219  st   [$19]       11586  st([vAC+1])                     #29 vAC.hi = src.hi
              2811 0118  ld   [$18]       11587  ld([vAC])                       #30
              2812 812a  adda [$2a]       11588  adda([sysArgs+6])               #31
              2813 c218  st   [$18]       11589  st([vAC])                       #32 vAC.lo = src0.lo + src1.lo
              2814 e818  blt  .addvi#35   11590  bmi('.addvi#35')                #33 calculate carry
              2815 a12a  suba [$2a]       11591  suba([sysArgs+6])               #34
              2816 fc1a  bra  .addvi#37   11592  bra('.addvi#37')                #35
              2817 412a  ora  [$2a]       11593  ora([sysArgs+6])                #36 carry in bit 7
                                          11594
                                          11595  label('.addvi#35')
.addvi#35:    2818 212a  anda [$2a]       11596  anda([sysArgs+6])               #35 carry in bit 7
              2819 0200  nop              11597  nop()                           #36
                                          11598
                                          11599  label('.addvi#37')
.addvi#37:    281a 3080  anda $80,x       11600  anda(0x80,X)                    #37
              281b 0500  ld   [x]         11601  ld([X])                         #38 carry in bit 0
              281c 8119  adda [$19]       11602  adda([vAC+1])                   #39
              281d c219  st   [$19]       11603  st([vAC+1])                     #40
              281e 112b  ld   [$2b],x     11604  ld([sysArgs+7],X)               #41
              281f 0118  ld   [$18]       11605  ld([vAC])                       #42
              2820 de00  st   [y,x++]     11606  st([Y,Xpp])                     #43
              2821 0119  ld   [$19]       11607  ld([vAC+1])                     #44
              2822 ce00  st   [y,x]       11608  st([Y,X])                       #45
              2823 0116  ld   [$16]       11609  ld([vPC])                       #46
              2824 8002  adda $02         11610  adda(2)                         #47
              2825 c216  st   [$16]       11611  st([vPC])                       #48
              2826 1403  ld   $03,y       11612  ld(hi('REENTER'),Y)             #49
              2827 e0cb  jmp  y,$cb       11613  jmp(Y,'REENTER')                #50
              2828 00e5  ld   $e5         11614  ld(-54/2)                       #51
                                          11615
                                          11616  label('.addvi#20')
.addvi#20:    2829 0116  ld   [$16]       11617  ld([vPC])                       #20 retry instruction
              282a a002  suba $02         11618  suba(2)                         #21
              282b c216  st   [$16]       11619  st([vPC])                       #22
              282c 1403  ld   $03,y       11620  ld(hi('REENTER'),Y)             #23
              282d e0cb  jmp  y,$cb       11621  jmp(Y,'REENTER')                #24
              282e 00f2  ld   $f2         11622  ld(-28/2)                       #25
                                          11623
                                          11624
                                          11625  # SUBVI implementation
                                          11626  label('subvi#13')
subvi#13:     282f 1517  ld   [$17],y     11627  ld([vPC+1],Y)                   #13 vPC.hi
              2830 de00  st   [y,x++]     11628  st([Y,Xpp])                     #14 X++
              2831 c22a  st   [$2a]       11629  st([sysArgs+6])                 #15 immediate 8bit
              2832 00f5  ld   $f5         11630  ld(min(0,maxTicks-52/2))        #16
              2833 8115  adda [$15]       11631  adda([vTicks])                  #17
              2834 e858  blt  .subvi#20   11632  blt('.subvi#20')                #18 not enough time left, so retry
              2835 0d00  ld   [y,x]       11633  ld([Y,X])                       #19
              2836 de00  st   [y,x++]     11634  st([Y,Xpp])                     #20 X++
              2837 c22b  st   [$2b]       11635  st([sysArgs+7])                 #21 dst var addr
              2838 0d00  ld   [y,x]       11636  ld([Y,X])                       #22
              2839 1200  ld   ac,x        11637  ld(AC,X)                        #23 src addr
              283a 1400  ld   $00,y       11638  ld(0,Y)                         #24
              283b 0500  ld   [x]         11639  ld([X])                         #25
              283c c218  st   [$18]       11640  st([vAC])                       #26 vAC.lo = src.lo
              283d de00  st   [y,x++]     11641  st([Y,Xpp])                     #27
              283e 0500  ld   [x]         11642  ld([X])                         #28
              283f c219  st   [$19]       11643  st([vAC+1])                     #29 vAC.hi = src.hi
              2840 0118  ld   [$18]       11644  ld([vAC])                       #30
              2841 e846  blt  .subvi#33   11645  bmi('.subvi#33')                #31
              2842 a12a  suba [$2a]       11646  suba([sysArgs+6])               #32
              2843 c218  st   [$18]       11647  st([vAC])                       #33 store low result
              2844 fc49  bra  .subvi#36   11648  bra('.subvi#36')                #34
              2845 412a  ora  [$2a]       11649  ora([sysArgs+6])                #35 borrow in bit 7
                                          11650
                                          11651  label('.subvi#33')
.subvi#33:    2846 c218  st   [$18]       11652  st([vAC])                       #33 store low result
              2847 212a  anda [$2a]       11653  anda([sysArgs+6])               #34 borrow in bit 7
              2848 0200  nop              11654  nop()                           #35
                                          11655
                                          11656  label('.subvi#36')
.subvi#36:    2849 3080  anda $80,x       11657  anda(0x80,X)                    #36 move borrow to bit 0
              284a 0119  ld   [$19]       11658  ld([vAC+1])                     #37
              284b a500  suba [x]         11659  suba([X])                       #38
              284c c219  st   [$19]       11660  st([vAC+1])                     #39 store high result
              284d 112b  ld   [$2b],x     11661  ld([sysArgs+7],X)               #40
              284e 0118  ld   [$18]       11662  ld([vAC])                       #41
              284f de00  st   [y,x++]     11663  st([Y,Xpp])                     #42
              2850 0119  ld   [$19]       11664  ld([vAC+1])                     #43
              2851 c600  st   [x]         11665  st([X])                         #44
              2852 0116  ld   [$16]       11666  ld([vPC])                       #45
              2853 8002  adda $02         11667  adda(2)                         #46
              2854 c216  st   [$16]       11668  st([vPC])                       #47
              2855 1403  ld   $03,y       11669  ld(hi('NEXTY'),Y)               #48
              2856 e000  jmp  y,$00       11670  jmp(Y,'NEXTY')                  #49
              2857 00e6  ld   $e6         11671  ld(-52/2)                       #50
                                          11672
                                          11673  label('.subvi#20')
.subvi#20:    2858 0116  ld   [$16]       11674  ld([vPC])                       #20 retry instruction
              2859 a002  suba $02         11675  suba(2)                         #21
              285a c216  st   [$16]       11676  st([vPC])                       #22
              285b 1403  ld   $03,y       11677  ld(hi('REENTER'),Y)             #23
              285c e0cb  jmp  y,$cb       11678  jmp(Y,'REENTER')                #24
              285d 00f2  ld   $f2         11679  ld(-28/2)                       #25
                                          11680
                                          11681
                                          11682  # JMPI implementation, (lb3361)
                                          11683  label('jmpi#13')
jmpi#13:      285e c216  st   [$16]       11684  st([vPC])                       #13
              285f 012b  ld   [$2b]       11685  ld([sysArgs+7])                 #14
              2860 c217  st   [$17]       11686  st([vPC+1])                     #15
              2861 1403  ld   $03,y       11687  ld(hi('NEXTY'),Y)               #16
              2862 e000  jmp  y,$00       11688  jmp(Y,'NEXTY')                  #17
              2863 00f6  ld   $f6         11689  ld(-20/2)                       #18
                                          11690
                                          11691
                                          11692  # POKEA+ implementation
                                          11693  label('pokea+#13')
pokea+#13:    2864 1200  ld   ac,x        11694  ld(AC,X)                        #13
              2865 0500  ld   [x]         11695  ld([X])                         #14 var.lo
              2866 1118  ld   [$18],x     11696  ld([vAC],X)                     #15
              2867 1519  ld   [$19],y     11697  ld([vAC+1],Y)                   #16
              2868 ce00  st   [y,x]       11698  st([Y,X])                       #17 poke [vAC], var.lo
              2869 0118  ld   [$18]       11699  ld([vAC])                       #18
              286a 8001  adda $01         11700  adda(1)                         #19
              286b f070  beq  .pokea+#22  11701  beq('.pokea+#22')               #20 if low byte is 0x00
              286c c218  st   [$18]       11702  st([vAC])                       #21
              286d 1403  ld   $03,y       11703  ld(hi('NEXTY'),Y)               #22
              286e e000  jmp  y,$00       11704  jmp(Y,'NEXTY')                  #23
              286f 00f3  ld   $f3         11705  ld(-26/2)                       #24
                                          11706
                                          11707  label('.pokea+#22')
.pokea+#22:   2870 0119  ld   [$19]       11708  ld([vAC+1])                     #22
              2871 8001  adda $01         11709  adda(1)                         #23
              2872 c219  st   [$19]       11710  st([vAC+1])                     #24
              2873 1403  ld   $03,y       11711  ld(hi('REENTER'),Y)             #25
              2874 e0cb  jmp  y,$cb       11712  jmp(Y,'REENTER')                #26
              2875 00f1  ld   $f1         11713  ld(-30/2)                       #27
                                          11714
                                          11715
                                          11716  # ARRW implementation
                                          11717  label('arrw#13')
arrw#13:      2876 1517  ld   [$17],y     11718  ld([vPC+1],Y)                   #13 vPC.hi
              2877 de00  st   [y,x++]     11719  st([Y,Xpp])                     #14 X++
              2878 c22a  st   [$2a]       11720  st([sysArgs+6])                 #15 imm.lo
              2879 00f7  ld   $f7         11721  ld(min(0,maxTicks-48/2))        #16
              287a 8115  adda [$15]       11722  adda([vTicks])                  #17
              287b e89a  blt  .arrw#20    11723  blt('.arrw#20')                 #18 not enough time left, so retry
              287c 0d00  ld   [y,x]       11724  ld([Y,X])                       #19
              287d c22b  st   [$2b]       11725  st([sysArgs+7])                 #20 imm.hi
              287e 0118  ld   [$18]       11726  ld([vAC])                       #21 idx.lo
              287f 3080  anda $80,x       11727  anda(0x80,X)                    #22
              2880 8118  adda [$18]       11728  adda([vAC])                     #23
              2881 c218  st   [$18]       11729  st([vAC])                       #24 idx.lo*2
              2882 0500  ld   [x]         11730  ld([X])                         #25 msb idx.lo
              2883 8119  adda [$19]       11731  adda([vAC+1])                   #26
              2884 8119  adda [$19]       11732  adda([vAC+1])                   #27
              2885 c219  st   [$19]       11733  st([vAC+1])                     #28 idx.hi*2
              2886 0118  ld   [$18]       11734  ld([vAC])                       #29
              2887 812a  adda [$2a]       11735  adda([sysArgs+6])               #30
              2888 c218  st   [$18]       11736  st([vAC])                       #31 vAC = imm.lo + idx.lo
              2889 e88d  blt  .arrw#34    11737  bmi('.arrw#34')                 #32 check carry
              288a a12a  suba [$2a]       11738  suba([sysArgs+6])               #33 restore idx.lo
              288b fc8f  bra  .arrw#36    11739  bra('.arrw#36')                 #34
              288c 412a  ora  [$2a]       11740  ora([sysArgs+6])                #35 carry in bit 7
                                          11741
                                          11742  label('.arrw#34')
.arrw#34:     288d 212a  anda [$2a]       11743  anda([sysArgs+6])               #34 carry in bit 7
              288e 0200  nop              11744  nop()                           #35
                                          11745
                                          11746  label('.arrw#36')
.arrw#36:     288f 3080  anda $80,x       11747  anda(0x80,X)                    #36
              2890 0500  ld   [x]         11748  ld([X])                         #37 carry in bit 0
              2891 8119  adda [$19]       11749  adda([vAC+1])                   #38
              2892 812b  adda [$2b]       11750  adda([sysArgs+7])               #39
              2893 c219  st   [$19]       11751  st([vAC+1])                     #40 vAC.hi = imm.hi + idx.hi + carry
              2894 0116  ld   [$16]       11752  ld([vPC])                       #41
              2895 8001  adda $01         11753  adda(1)                         #42
              2896 c216  st   [$16]       11754  st([vPC])                       #43
              2897 1403  ld   $03,y       11755  ld(hi('NEXTY'),Y)               #44
              2898 e000  jmp  y,$00       11756  jmp(Y,'NEXTY')                  #45
              2899 00e8  ld   $e8         11757  ld(-48/2)                       #46
                                          11758
                                          11759  label('.arrw#20')
.arrw#20:     289a 0116  ld   [$16]       11760  ld([vPC])                       #20 retry instruction
              289b a002  suba $02         11761  suba(2)                         #21
              289c c216  st   [$16]       11762  st([vPC])                       #22
              289d 1403  ld   $03,y       11763  ld(hi('REENTER'),Y)             #23
              289e e0cb  jmp  y,$cb       11764  jmp(Y,'REENTER')                #24
              289f 00f2  ld   $f2         11765  ld(-28/2)                       #25
                                          11766
                                          11767
                                          11768  # ARRVW implementation
                                          11769  label('arrvw#13')
arrvw#13:     28a0 1517  ld   [$17],y     11770  ld([vPC+1],Y)                   #13 vPC.hi
              28a1 de00  st   [y,x++]     11771  st([Y,Xpp])                     #14 X++
              28a2 c21d  st   [$1d]       11772  st([vTmp])                      #15 var
              28a3 00f2  ld   $f2         11773  ld(min(0,maxTicks-58/2))        #16
              28a4 8115  adda [$15]       11774  adda([vTicks])                  #17
              28a5 e8ce  blt  .arrvw#20   11775  blt('.arrvw#20')                #18 not enough time left, so retry
              28a6 0d00  ld   [y,x]       11776  ld([Y,X])                       #19
              28a7 de00  st   [y,x++]     11777  st([Y,Xpp])                     #20 X++
              28a8 c218  st   [$18]       11778  st([vAC])                       #21 imm.lo
              28a9 0d00  ld   [y,x]       11779  ld([Y,X])                       #22
              28aa c219  st   [$19]       11780  st([vAC+1])                     #23 imm.hi
              28ab 1400  ld   $00,y       11781  ld(0,Y)                         #24
              28ac 111d  ld   [$1d],x     11782  ld([vTmp],X)                    #25
              28ad 0500  ld   [x]         11783  ld([X])                         #26
              28ae de00  st   [y,x++]     11784  st([Y,Xpp])                     #27 X++
              28af c22a  st   [$2a]       11785  st([sysArgs+6])                 #28 idx.lo
              28b0 0500  ld   [x]         11786  ld([X])                         #29
              28b1 c22b  st   [$2b]       11787  st([sysArgs+7])                 #30 idx.hi
              28b2 012a  ld   [$2a]       11788  ld([sysArgs+6])                 #31
              28b3 3080  anda $80,x       11789  anda(0x80,X)                    #32
              28b4 812a  adda [$2a]       11790  adda([sysArgs+6])               #33
              28b5 c22a  st   [$2a]       11791  st([sysArgs+6])                 #34 idx.lo*2
              28b6 0500  ld   [x]         11792  ld([X])                         #35 msb idx.lo
              28b7 812b  adda [$2b]       11793  adda([sysArgs+7])               #36
              28b8 812b  adda [$2b]       11794  adda([sysArgs+7])               #37
              28b9 c22b  st   [$2b]       11795  st([sysArgs+7])                 #38 idx.hi*2
              28ba 0118  ld   [$18]       11796  ld([vAC])                       #39
              28bb 812a  adda [$2a]       11797  adda([sysArgs+6])               #40
              28bc c218  st   [$18]       11798  st([vAC])                       #41 vAC = vAC.lo + idx.lo
              28bd e8c1  blt  .arrvw#44   11799  bmi('.arrvw#44')                #42 check carry
              28be a12a  suba [$2a]       11800  suba([sysArgs+6])               #43 restore vAC.lo
              28bf fcc3  bra  .arrvw#46   11801  bra('.arrvw#46')                #44
              28c0 412a  ora  [$2a]       11802  ora([sysArgs+6])                #45 carry in bit 7
                                          11803
                                          11804  label('.arrvw#44')
.arrvw#44:    28c1 212a  anda [$2a]       11805  anda([sysArgs+6])               #44 carry in bit 7
              28c2 0200  nop              11806  nop()                           #45
                                          11807
                                          11808  label('.arrvw#46')
.arrvw#46:    28c3 3080  anda $80,x       11809  anda(0x80,X)                    #46
              28c4 0500  ld   [x]         11810  ld([X])                         #47 carry in bit 0
              28c5 8119  adda [$19]       11811  adda([vAC+1])                   #48
              28c6 812b  adda [$2b]       11812  adda([sysArgs+7])               #49
              28c7 c219  st   [$19]       11813  st([vAC+1])                     #50 vAC.hi = vAC.hi + idx.hi + carry
              28c8 0116  ld   [$16]       11814  ld([vPC])                       #51
              28c9 8002  adda $02         11815  adda(2)                         #52
              28ca c216  st   [$16]       11816  st([vPC])                       #53
              28cb 1403  ld   $03,y       11817  ld(hi('NEXTY'),Y)               #54
              28cc e000  jmp  y,$00       11818  jmp(Y,'NEXTY')                  #55
              28cd 00e3  ld   $e3         11819  ld(-58/2)                       #56
                                          11820
                                          11821  label('.arrvw#20')
.arrvw#20:    28ce 0116  ld   [$16]       11822  ld([vPC])                       #20 retry instruction
              28cf a002  suba $02         11823  suba(2)                         #21
              28d0 c216  st   [$16]       11824  st([vPC])                       #22
              28d1 1403  ld   $03,y       11825  ld(hi('REENTER'),Y)             #23
              28d2 e0cb  jmp  y,$cb       11826  jmp(Y,'REENTER')                #24
              28d3 00f2  ld   $f2         11827  ld(-28/2)                       #25
                                          11828
                                          11829
                                          11830  # OSCPX implementation
                                          11831  label('oscpx#13')
oscpx#13:     28d4 d22a  st   [$2a],x     11832  st([sysArgs+6],X)               #13 sample address var
              28d5 00fa  ld   $fa         11833  ld(min(0,maxTicks-42/2))        #14
              28d6 8115  adda [$15]       11834  adda([vTicks])                  #15
              28d7 e8f0  blt  .oscpx#18   11835  blt('.oscpx#18')                #16 not enough time left, so retry
              28d8 0500  ld   [x]         11836  ld([X])                         #17 sample address low byte
              28d9 112b  ld   [$2b],x     11837  ld([sysArgs+7],X)               #18 index var
              28da 8500  adda [x]         11838  adda([X])                       #19 sample address low byte + index
              28db c21d  st   [$1d]       11839  st([vTmp])                      #20
              28dc 012a  ld   [$2a]       11840  ld([sysArgs+6])                 #21
              28dd 9001  adda $01,x       11841  adda(1,X)                       #22
              28de 0500  ld   [x]         11842  ld([X])                         #23
              28df 1600  ld   ac,y        11843  ld(AC,Y)                        #24 sample address high byte
              28e0 111d  ld   [$1d],x     11844  ld([vTmp],X)                    #25
              28e1 0d00  ld   [y,x]       11845  ld([Y,X])                       #26
              28e2 20fc  anda $fc         11846  anda(0xfc)                      #27 6bit sample in upper 8bits
              28e3 1407  ld   $07,y       11847  ld(soundTable>>8,Y)             #28
              28e4 5003  ora  $03,x       11848  ora(0x03,X)                     #29
              28e5 0d00  ld   [y,x]       11849  ld([Y,X])                       #30 6bit sample, (>>2)
              28e6 9519  adda [$19],y     11850  adda([vAC+1],Y)                 #31 dest pixel address high byte
              28e7 0118  ld   [$18]       11851  ld([vAC])                       #32 dest pixel address low byte
              28e8 112b  ld   [$2b],x     11852  ld([sysArgs+7],X)               #33 index
              28e9 8500  adda [x]         11853  adda([X])                       #34 sample address low byte + index
              28ea 1200  ld   ac,x        11854  ld(AC,X)                        #35
              28eb 01a3  ld   [$a3]       11855  ld([0xA3])                      #36 pixel colour
              28ec ce00  st   [y,x]       11856  st([Y,X])                       #37
              28ed 1403  ld   $03,y       11857  ld(hi('NEXTY'),Y)               #38
              28ee e000  jmp  y,$00       11858  jmp(Y,'NEXTY')                  #39
              28ef 00eb  ld   $eb         11859  ld(-42/2)                       #40
                                          11860
                                          11861  label('.oscpx#18')
.oscpx#18:    28f0 0021  ld   $21         11862  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              28f1 c202  st   [$02]       11863  st([vCpuSelect])                #19 restore PREFX3 instruction page
              28f2 9401  adda $01,y       11864  adda(1,Y)                       #20 retry instruction
              28f3 e000  jmp  y,$00       11865  jmp(Y,'NEXTY')                  #21
              28f4 00f4  ld   $f4         11866  ld(-24/2)                       #22
                                          11867
                                          11868
              28f5 0200  nop              11869  fillers(until=0xff)
              28f6 0200  nop
              28f7 0200  nop
              * 10 times
              28ff 0200  nop              11870  align(0x100, size=0x100)
                                          11871
                                          11872  #-----------------------------------------------------------------------
                                          11873  #       More vCPU instruction implementations, (0x2900)
                                          11874  #-----------------------------------------------------------------------
                                          11875  #
                                          11876  # LEEKA implementation
                                          11877  label('leeka#13')
leeka#13:     2900 c21d  st   [$1d]       11878  st([vTmp])                      #13
              2901 00f9  ld   $f9         11879  ld(min(0,maxTicks-44/2))        #14
              2902 8115  adda [$15]       11880  adda([vTicks])                  #15
              2903 e81e  blt  .leeka#18   11881  blt('.leeka#18')                #16 not enough time left, so retry
              2904 1519  ld   [$19],y     11882  ld([vAC+1],Y)                   #17
              2905 1118  ld   [$18],x     11883  ld([vAC],X)                     #18
              2906 0d00  ld   [y,x]       11884  ld([Y,X])                       #19 peek [vAC]
              2907 de00  st   [y,x++]     11885  st([Y,Xpp])                     #20
              2908 c2c8  st   [$c8]       11886  st([vTmpL+0])                   #21
              2909 0d00  ld   [y,x]       11887  ld([Y,X])                       #22 peek [vAC+1]
              290a de00  st   [y,x++]     11888  st([Y,Xpp])                     #23
              290b c2c9  st   [$c9]       11889  st([vTmpL+1])                   #24
              290c 0d00  ld   [y,x]       11890  ld([Y,X])                       #25 peek [vAC+2]
              290d de00  st   [y,x++]     11891  st([Y,Xpp])                     #26
              290e c2ca  st   [$ca]       11892  st([vTmpL+2])                   #27
              290f 0d00  ld   [y,x]       11893  ld([Y,X])                       #28 peek [vAC+3]
              2910 c2cb  st   [$cb]       11894  st([vTmpL+3])                   #29
              2911 1400  ld   $00,y       11895  ld(0,Y)                         #30
              2912 111d  ld   [$1d],x     11896  ld([vTmp],X)                    #31 dst var
              2913 01c8  ld   [$c8]       11897  ld([vTmpL+0])                   #32
              2914 de00  st   [y,x++]     11898  st([Y,Xpp])                     #33 [var.0] = peek [vAC]
              2915 01c9  ld   [$c9]       11899  ld([vTmpL+1])                   #34
              2916 de00  st   [y,x++]     11900  st([Y,Xpp])                     #35 [var.1] = peek [vAC+1]
              2917 01ca  ld   [$ca]       11901  ld([vTmpL+2])                   #36
              2918 de00  st   [y,x++]     11902  st([Y,Xpp])                     #37 [var.2] = peek [vAC+2]
              2919 01cb  ld   [$cb]       11903  ld([vTmpL+3])                   #38
              291a ce00  st   [y,x]       11904  st([Y,X])                       #39 [var.3] = peek [vAC+3]
              291b 1403  ld   $03,y       11905  ld(hi('NEXTY'),Y)               #40
              291c e000  jmp  y,$00       11906  jmp(Y,'NEXTY')                  #41
              291d 00ea  ld   $ea         11907  ld(-44/2)                       #42
                                          11908
                                          11909  label('.leeka#18')
.leeka#18:    291e 0022  ld   $22         11910  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              291f c202  st   [$02]       11911  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2920 9401  adda $01,y       11912  adda(1,Y)                       #20 retry instruction
              2921 e000  jmp  y,$00       11913  jmp(Y,'NEXTY')                  #21
              2922 00f4  ld   $f4         11914  ld(-24/2)                       #22
                                          11915
                                          11916
                                          11917  # LOKEA implementation
                                          11918  label('lokea#13')
lokea#13:     2923 1200  ld   ac,x        11919  ld(AC,X)                        #13
              2924 00f9  ld   $f9         11920  ld(min(0,maxTicks-44/2))        #14
              2925 8115  adda [$15]       11921  adda([vTicks])                  #15
              2926 e840  blt  .lokea#18   11922  blt('.lokea#18')                #16 not enough time left, so retry
              2927 1400  ld   $00,y       11923  ld(0,Y)                         #17
              2928 0500  ld   [x]         11924  ld([X])                         #18 var.0
              2929 de00  st   [y,x++]     11925  st([Y,Xpp])                     #19
              292a c2c8  st   [$c8]       11926  st([vTmpL+0])                   #20
              292b 0500  ld   [x]         11927  ld([X])                         #21 var.1
              292c de00  st   [y,x++]     11928  st([Y,Xpp])                     #22
              292d c2c9  st   [$c9]       11929  st([vTmpL+1])                   #23
              292e 0500  ld   [x]         11930  ld([X])                         #24 var.2
              292f de00  st   [y,x++]     11931  st([Y,Xpp])                     #25
              2930 c2ca  st   [$ca]       11932  st([vTmpL+2])                   #26
              2931 0500  ld   [x]         11933  ld([X])                         #27 var.3
              2932 c2cb  st   [$cb]       11934  st([vTmpL+3])                   #28
              2933 1118  ld   [$18],x     11935  ld([vAC],X)                     #29
              2934 1519  ld   [$19],y     11936  ld([vAC+1],Y)                   #30
              2935 01c8  ld   [$c8]       11937  ld([vTmpL+0])                   #31
              2936 de00  st   [y,x++]     11938  st([Y,Xpp])                     #32 poke [vAC], var.0
              2937 01c9  ld   [$c9]       11939  ld([vTmpL+1])                   #33
              2938 de00  st   [y,x++]     11940  st([Y,Xpp])                     #34 poke [vAC], var.1
              2939 01ca  ld   [$ca]       11941  ld([vTmpL+2])                   #35
              293a de00  st   [y,x++]     11942  st([Y,Xpp])                     #36 poke [vAC], var.2
              293b 01cb  ld   [$cb]       11943  ld([vTmpL+3])                   #37
              293c ce00  st   [y,x]       11944  st([Y,X])                       #38 poke [vAC], var.3
              293d 1403  ld   $03,y       11945  ld(hi('REENTER'),Y)             #39
              293e e0cb  jmp  y,$cb       11946  jmp(Y,'REENTER')                #40
              293f 00ea  ld   $ea         11947  ld(-44/2)                       #41
                                          11948
                                          11949  label('.lokea#18')
.lokea#18:    2940 0022  ld   $22         11950  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2941 c202  st   [$02]       11951  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2942 9401  adda $01,y       11952  adda(1,Y)                       #20 retry instruction
              2943 e000  jmp  y,$00       11953  jmp(Y,'NEXTY')                  #21
              2944 00f4  ld   $f4         11954  ld(-24/2)                       #22
                                          11955
                                          11956
                                          11957  # FEEKA implementation
                                          11958  label('feeka#13')
feeka#13:     2945 1519  ld   [$19],y     11959  ld([vAC+1],Y)                   #13
              2946 00f7  ld   $f7         11960  ld(min(0,maxTicks-48/2))        #14
              2947 8115  adda [$15]       11961  adda([vTicks])                  #15
              2948 e867  blt  .feeka#18   11962  blt('.feeka#18')                #16 not enough time left, so retry
              2949 1118  ld   [$18],x     11963  ld([vAC],X)                     #17
              294a 0d00  ld   [y,x]       11964  ld([Y,X])                       #18 peek [vAC]
              294b de00  st   [y,x++]     11965  st([Y,Xpp])                     #19
              294c c2b0  st   [$b0]       11966  st([0xB0])                      #20
              294d 0d00  ld   [y,x]       11967  ld([Y,X])                       #21 peek [vAC+1]
              294e de00  st   [y,x++]     11968  st([Y,Xpp])                     #22
              294f c2b1  st   [$b1]       11969  st([0xB1])                      #23
              2950 0d00  ld   [y,x]       11970  ld([Y,X])                       #24 peek [vAC+2]
              2951 de00  st   [y,x++]     11971  st([Y,Xpp])                     #25
              2952 c2b2  st   [$b2]       11972  st([0xB2])                      #26
              2953 0d00  ld   [y,x]       11973  ld([Y,X])                       #27 peek [vAC+3]
              2954 de00  st   [y,x++]     11974  st([Y,Xpp])                     #28
              2955 c2b3  st   [$b3]       11975  st([0xB3])                      #29
              2956 0d00  ld   [y,x]       11976  ld([Y,X])                       #30 peek [vAC+4]
              2957 c2b4  st   [$b4]       11977  st([0xB4])                      #31
              2958 1400  ld   $00,y       11978  ld(0,Y)                         #32
              2959 112b  ld   [$2b],x     11979  ld([sysArgs+7],X)               #33 dst var
              295a 01b0  ld   [$b0]       11980  ld([0xB0])                      #34
              295b de00  st   [y,x++]     11981  st([Y,Xpp])                     #35 [var.0] = peek [vAC]
              295c 01b1  ld   [$b1]       11982  ld([0xB1])                      #36
              295d de00  st   [y,x++]     11983  st([Y,Xpp])                     #37 [var.1] = peek [vAC+1]
              295e 01b2  ld   [$b2]       11984  ld([0xB2])                      #38
              295f de00  st   [y,x++]     11985  st([Y,Xpp])                     #39 [var.2] = peek [vAC+2]
              2960 01b3  ld   [$b3]       11986  ld([0xB3])                      #40
              2961 ce00  st   [y,x]       11987  st([Y,X])                       #41 [var.3] = peek [vAC+3]
              2962 01b4  ld   [$b4]       11988  ld([0xB4])                      #42
              2963 ce00  st   [y,x]       11989  st([Y,X])                       #43 [var.4] = peek [vAC+4]
              2964 1403  ld   $03,y       11990  ld(hi('NEXTY'),Y)               #44
              2965 e000  jmp  y,$00       11991  jmp(Y,'NEXTY')                  #45
              2966 00e8  ld   $e8         11992  ld(-48/2)                       #46
                                          11993
                                          11994  label('.feeka#18')
.feeka#18:    2967 0022  ld   $22         11995  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2968 c202  st   [$02]       11996  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2969 9401  adda $01,y       11997  adda(1,Y)                       #20 retry instruction
              296a e000  jmp  y,$00       11998  jmp(Y,'NEXTY')                  #21
              296b 00f4  ld   $f4         11999  ld(-24/2)                       #22
                                          12000
                                          12001
                                          12002  # FOKEA implementation
                                          12003  label('fokea#13')
fokea#13:     296c 112b  ld   [$2b],x     12004  ld([sysArgs+7],X)               #13 var address
              296d 00f7  ld   $f7         12005  ld(min(0,maxTicks-48/2))        #14
              296e 8115  adda [$15]       12006  adda([vTicks])                  #15
              296f e88e  blt  .fokea#18   12007  blt('.fokea#18')                #16 not enough time left, so retry
              2970 1400  ld   $00,y       12008  ld(0,Y)                         #17
              2971 0500  ld   [x]         12009  ld([X])                         #18 [var.0]
              2972 de00  st   [y,x++]     12010  st([Y,Xpp])                     #19
              2973 c2b0  st   [$b0]       12011  st([0xB0])                      #20
              2974 0500  ld   [x]         12012  ld([X])                         #21 [var.1]
              2975 de00  st   [y,x++]     12013  st([Y,Xpp])                     #22
              2976 c2b1  st   [$b1]       12014  st([0xB1])                      #23
              2977 0500  ld   [x]         12015  ld([X])                         #24 [var.2]
              2978 de00  st   [y,x++]     12016  st([Y,Xpp])                     #25
              2979 c2b2  st   [$b2]       12017  st([0xB2])                      #26
              297a 0500  ld   [x]         12018  ld([X])                         #27 [var.3]
              297b de00  st   [y,x++]     12019  st([Y,Xpp])                     #28
              297c c2b3  st   [$b3]       12020  st([0xB3])                      #29
              297d 0500  ld   [x]         12021  ld([X])                         #30 [var.4]
              297e c2b4  st   [$b4]       12022  st([0xB4])                      #31
              297f 1118  ld   [$18],x     12023  ld([vAC],X)                     #32
              2980 1519  ld   [$19],y     12024  ld([vAC+1],Y)                   #33
              2981 01b0  ld   [$b0]       12025  ld([0xB0])                      #34
              2982 de00  st   [y,x++]     12026  st([Y,Xpp])                     #35 poke [vAC], [var.0]
              2983 01b1  ld   [$b1]       12027  ld([0xB1])                      #36
              2984 de00  st   [y,x++]     12028  st([Y,Xpp])                     #37 poke [vAC], [var.1]
              2985 01b2  ld   [$b2]       12029  ld([0xB2])                      #38
              2986 de00  st   [y,x++]     12030  st([Y,Xpp])                     #39 poke [vAC], [var.2]
              2987 01b3  ld   [$b3]       12031  ld([0xB3])                      #40
              2988 ce00  st   [y,x]       12032  st([Y,X])                       #41 poke [vAC], [var.3]
              2989 01b4  ld   [$b4]       12033  ld([0xB4])                      #42
              298a ce00  st   [y,x]       12034  st([Y,X])                       #43 poke [vAC], [var.4]
              298b 1403  ld   $03,y       12035  ld(hi('NEXTY'),Y)               #44
              298c e000  jmp  y,$00       12036  jmp(Y,'NEXTY')                  #45
              298d 00e8  ld   $e8         12037  ld(-48/2)                       #46
                                          12038
                                          12039  label('.fokea#18')
.fokea#18:    298e 0022  ld   $22         12040  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              298f c202  st   [$02]       12041  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2990 9401  adda $01,y       12042  adda(1,Y)                       #20 retry instruction
              2991 e000  jmp  y,$00       12043  jmp(Y,'NEXTY')                  #21
              2992 00f4  ld   $f4         12044  ld(-24/2)                       #22
                                          12045
                                          12046
                                          12047  # SWAPB implementation
                                          12048  label('swapb#13')
swapb#13:     2993 00f8  ld   $f8         12049  ld(min(0,maxTicks-46/2))        #13
              2994 8115  adda [$15]       12050  adda([vTicks])                  #14
              2995 e8b3  blt  .swapb#17   12051  blt('.swapb#17')                #15 not enough time left, so retry
              2996 1400  ld   $00,y       12052  ld(0,Y)                         #16
              2997 0500  ld   [x]         12053  ld([X])                         #17
              2998 de00  st   [y,x++]     12054  st([Y,Xpp])                     #18
              2999 c2b2  st   [$b2]       12055  st([0xB2])                      #19 var1.lo
              299a 0500  ld   [x]         12056  ld([X])                         #20
              299b c2b3  st   [$b3]       12057  st([0xB3])                      #21 var1.hi
              299c 112b  ld   [$2b],x     12058  ld([sysArgs+7],X)               #22 var0
              299d 0500  ld   [x]         12059  ld([X])                         #23
              299e de00  st   [y,x++]     12060  st([Y,Xpp])                     #24
              299f c2b4  st   [$b4]       12061  st([0xB4])                      #25 var0.lo
              29a0 0500  ld   [x]         12062  ld([X])                         #26
              29a1 c2b5  st   [$b5]       12063  st([0xB5])                      #27 var0.hi
              29a2 11b2  ld   [$b2],x     12064  ld([0xB2],X)                    #28
              29a3 15b3  ld   [$b3],y     12065  ld([0xB3],Y)                    #29
              29a4 0d00  ld   [y,x]       12066  ld([Y,X])                       #30
              29a5 c2b1  st   [$b1]       12067  st([0xB1])                      #31 tmp1 = [var1]
              29a6 11b4  ld   [$b4],x     12068  ld([0xB4],X)                    #32
              29a7 15b5  ld   [$b5],y     12069  ld([0xB5],Y)                    #33
              29a8 0d00  ld   [y,x]       12070  ld([Y,X])                       #34
              29a9 c2b0  st   [$b0]       12071  st([0xB0])                      #35 tmp0 = [var0]
              29aa 01b1  ld   [$b1]       12072  ld([0xB1])                      #36
              29ab ce00  st   [y,x]       12073  st([Y,X])                       #37 [var0] = tmp1
              29ac 11b2  ld   [$b2],x     12074  ld([0xB2],X)                    #38
              29ad 15b3  ld   [$b3],y     12075  ld([0xB3],Y)                    #39
              29ae 01b0  ld   [$b0]       12076  ld([0xB0])                      #40
              29af ce00  st   [y,x]       12077  st([Y,X])                       #41 [var1] = tmp0
              29b0 1403  ld   $03,y       12078  ld(hi('NEXTY'),Y)               #42
              29b1 e000  jmp  y,$00       12079  jmp(Y,'NEXTY')                  #43
              29b2 00e9  ld   $e9         12080  ld(-46/2)                       #44
                                          12081
                                          12082  label('.swapb#17')
.swapb#17:    29b3 0021  ld   $21         12083  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29b4 c202  st   [$02]       12084  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29b5 9401  adda $01,y       12085  adda(1,Y)                       #19 retry instruction
              29b6 e0cb  jmp  y,$cb       12086  jmp(Y,'REENTER')                #20
              29b7 00f4  ld   $f4         12087  ld(-24/2)                       #21
                                          12088
                                          12089
                                          12090  # SWAPW implementation
                                          12091  label('swapw#13')
swapw#13:     29b8 00f2  ld   $f2         12092  ld(min(0,maxTicks-58/2))        #13
              29b9 8115  adda [$15]       12093  adda([vTicks])                  #14
              29ba e8e4  blt  .swapw#17   12094  blt('.swapw#17')                #15 not enough time left, so retry
              29bb 1400  ld   $00,y       12095  ld(0,Y)                         #16
              29bc 0500  ld   [x]         12096  ld([X])                         #17
              29bd de00  st   [y,x++]     12097  st([Y,Xpp])                     #18
              29be c2b2  st   [$b2]       12098  st([0xB2])                      #19 var1.lo
              29bf 0500  ld   [x]         12099  ld([X])                         #20
              29c0 c2b3  st   [$b3]       12100  st([0xB3])                      #21 var1.hi
              29c1 112b  ld   [$2b],x     12101  ld([sysArgs+7],X)               #22 var0
              29c2 0500  ld   [x]         12102  ld([X])                         #23
              29c3 de00  st   [y,x++]     12103  st([Y,Xpp])                     #24
              29c4 c2b4  st   [$b4]       12104  st([0xB4])                      #25 var0.lo
              29c5 0500  ld   [x]         12105  ld([X])                         #26
              29c6 c2b5  st   [$b5]       12106  st([0xB5])                      #27 var0.hi
              29c7 11b2  ld   [$b2],x     12107  ld([0xB2],X)                    #28
              29c8 15b3  ld   [$b3],y     12108  ld([0xB3],Y)                    #29
              29c9 0d00  ld   [y,x]       12109  ld([Y,X])                       #30
              29ca de00  st   [y,x++]     12110  st([Y,Xpp])                     #31
              29cb c2b0  st   [$b0]       12111  st([0xB0])                      #32 temp.lo = var1.lo
              29cc 0d00  ld   [y,x]       12112  ld([Y,X])                       #33
              29cd c2b1  st   [$b1]       12113  st([0xB1])                      #34 temp.hi = var1.hi
              29ce 11b4  ld   [$b4],x     12114  ld([0xB4],X)                    #35
              29cf 15b5  ld   [$b5],y     12115  ld([0xB5],Y)                    #36
              29d0 0d00  ld   [y,x]       12116  ld([Y,X])                       #37
              29d1 de00  st   [y,x++]     12117  st([Y,Xpp])                     #38
              29d2 c218  st   [$18]       12118  st([vAC])                       #39
              29d3 0d00  ld   [y,x]       12119  ld([Y,X])                       #40
              29d4 c219  st   [$19]       12120  st([vAC+1])                     #41
              29d5 11b2  ld   [$b2],x     12121  ld([0xB2],X)                    #42
              29d6 15b3  ld   [$b3],y     12122  ld([0xB3],Y)                    #43
              29d7 0118  ld   [$18]       12123  ld([vAC])                       #44
              29d8 de00  st   [y,x++]     12124  st([Y,Xpp])                     #45 var1.lo = var0.lo
              29d9 0119  ld   [$19]       12125  ld([vAC+1])                     #46
              29da ce00  st   [y,x]       12126  st([Y,X])                       #47 var1.lo = var0.lo
              29db 11b4  ld   [$b4],x     12127  ld([0xB4],X)                    #48
              29dc 15b5  ld   [$b5],y     12128  ld([0xB5],Y)                    #49
              29dd 01b0  ld   [$b0]       12129  ld([0xB0])                      #50
              29de de00  st   [y,x++]     12130  st([Y,Xpp])                     #51 var0.lo = temp.lo
              29df 01b1  ld   [$b1]       12131  ld([0xB1])                      #52
              29e0 ce00  st   [y,x]       12132  st([Y,X])                       #53 var0.hi = temp.hi
              29e1 1403  ld   $03,y       12133  ld(hi('NEXTY'),Y)               #54
              29e2 e000  jmp  y,$00       12134  jmp(Y,'NEXTY')                  #55
              29e3 00e3  ld   $e3         12135  ld(-58/2)                       #56
                                          12136
                                          12137  label('.swapw#17')
.swapw#17:    29e4 0021  ld   $21         12138  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29e5 c202  st   [$02]       12139  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29e6 9401  adda $01,y       12140  adda(1,Y)                       #19 retry instruction
              29e7 e0cb  jmp  y,$cb       12141  jmp(Y,'REENTER')                #20
              29e8 00f4  ld   $f4         12142  ld(-24/2)                       #21
                                          12143
                                          12144
                                          12145  # STPX implementation
                                          12146  label('stpx#13')
stpx#13:      29e9 0500  ld   [x]         12147  ld([X])                         #13
              29ea c21d  st   [$1d]       12148  st([vTmp])                      #14 colour
              29eb 0119  ld   [$19]       12149  ld([vAC+1])                     #15 y
              29ec 8119  adda [$19]       12150  adda([vAC+1])                   #16 y*2
              29ed 1200  ld   ac,x        12151  ld(AC,X)                        #17
              29ee 1401  ld   $01,y       12152  ld(1,Y)                         #18 Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              29ef 0d00  ld   [y,x]       12153  ld([Y,X])                       #19
              29f0 1600  ld   ac,y        12154  ld(AC,Y)                        #20 Y = [Y,X]
              29f1 1118  ld   [$18],x     12155  ld([vAC],X)                     #21
              29f2 011d  ld   [$1d]       12156  ld([vTmp])                      #22
              29f3 ce00  st   [y,x]       12157  st([Y,X])                       #23 [Y,X] = colour
              29f4 1403  ld   $03,y       12158  ld(hi('NEXTY'),Y)               #24
              29f5 e000  jmp  y,$00       12159  jmp(Y,'NEXTY')                  #25
              29f6 00f2  ld   $f2         12160  ld(-28/2)                       #26
                                          12161
                                          12162
              29f7 0200  nop              12163  fillers(until=0xff)
              29f8 0200  nop
              29f9 0200  nop
              * 8 times
              29ff 0200  nop              12164  align(0x100, size=0x100)
                                          12165
                                          12166  #-----------------------------------------------------------------------
                                          12167  #       More vCPU instruction implementations, (0x2A00)
                                          12168  #-----------------------------------------------------------------------
                                          12169  #
                                          12170  # MEEKA implementation
                                          12171  label('meeka#13')
meeka#13:     2a00 c21d  st   [$1d]       12172  st([vTmp])                      #13
              2a01 00ef  ld   $ef         12173  ld(min(0,maxTicks-64/2))        #14
              2a02 8115  adda [$15]       12174  adda([vTicks])                  #15
              2a03 e832  blt  .meeka#18   12175  blt('.meeka#18')                #16 not enough time left, so retry
              2a04 1519  ld   [$19],y     12176  ld([vAC+1],Y)                   #17
              2a05 1118  ld   [$18],x     12177  ld([vAC],X)                     #18
              2a06 0d00  ld   [y,x]       12178  ld([Y,X])                       #19 peek [vAC]
              2a07 de00  st   [y,x++]     12179  st([Y,Xpp])                     #20
              2a08 c2b0  st   [$b0]       12180  st([0xB0])                      #21
              2a09 0d00  ld   [y,x]       12181  ld([Y,X])                       #22 peek [vAC+1]
              2a0a de00  st   [y,x++]     12182  st([Y,Xpp])                     #23
              2a0b c2b1  st   [$b1]       12183  st([0xB1])                      #24
              2a0c 0d00  ld   [y,x]       12184  ld([Y,X])                       #25 peek [vAC+2]
              2a0d de00  st   [y,x++]     12185  st([Y,Xpp])                     #26
              2a0e c2b2  st   [$b2]       12186  st([0xB2])                      #27
              2a0f 0d00  ld   [y,x]       12187  ld([Y,X])                       #28 peek [vAC+3]
              2a10 de00  st   [y,x++]     12188  st([Y,Xpp])                     #29
              2a11 c2b3  st   [$b3]       12189  st([0xB3])                      #30
              2a12 0d00  ld   [y,x]       12190  ld([Y,X])                       #31 peek [vAC+4]
              2a13 de00  st   [y,x++]     12191  st([Y,Xpp])                     #32
              2a14 c2b4  st   [$b4]       12192  st([0xB4])                      #33
              2a15 0d00  ld   [y,x]       12193  ld([Y,X])                       #34 peek [vAC+5]
              2a16 de00  st   [y,x++]     12194  st([Y,Xpp])                     #35
              2a17 c2b5  st   [$b5]       12195  st([0xB5])                      #36
              2a18 0d00  ld   [y,x]       12196  ld([Y,X])                       #37 peek [vAC+6]
              2a19 de00  st   [y,x++]     12197  st([Y,Xpp])                     #38
              2a1a c2b6  st   [$b6]       12198  st([0xB6])                      #39
              2a1b 0d00  ld   [y,x]       12199  ld([Y,X])                       #40 peek [vAC+7]
              2a1c c2b7  st   [$b7]       12200  st([0xB7])                      #41
              2a1d 1400  ld   $00,y       12201  ld(0,Y)                         #42
              2a1e 111d  ld   [$1d],x     12202  ld([vTmp],X)                    #43 dst var
              2a1f 01b0  ld   [$b0]       12203  ld([0xB0])                      #44
              2a20 de00  st   [y,x++]     12204  st([Y,Xpp])                     #45 [var.0] = peek [vAC]
              2a21 01b1  ld   [$b1]       12205  ld([0xB1])                      #46
              2a22 de00  st   [y,x++]     12206  st([Y,Xpp])                     #47 [var.1] = peek [vAC+1]
              2a23 01b2  ld   [$b2]       12207  ld([0xB2])                      #48
              2a24 de00  st   [y,x++]     12208  st([Y,Xpp])                     #49 [var.2] = peek [vAC+2]
              2a25 01b3  ld   [$b3]       12209  ld([0xB3])                      #50
              2a26 de00  st   [y,x++]     12210  st([Y,Xpp])                     #51 [var.3] = peek [vAC+3]
              2a27 01b4  ld   [$b4]       12211  ld([0xB4])                      #52
              2a28 de00  st   [y,x++]     12212  st([Y,Xpp])                     #53 [var.0] = peek [vAC+4]
              2a29 01b5  ld   [$b5]       12213  ld([0xB5])                      #54
              2a2a de00  st   [y,x++]     12214  st([Y,Xpp])                     #55 [var.1] = peek [vAC+5]
              2a2b 01b6  ld   [$b6]       12215  ld([0xB6])                      #56
              2a2c de00  st   [y,x++]     12216  st([Y,Xpp])                     #57 [var.2] = peek [vAC+6]
              2a2d 01b7  ld   [$b7]       12217  ld([0xB7])                      #58
              2a2e ce00  st   [y,x]       12218  st([Y,X])                       #59 [var.3] = peek [vAC+7]
              2a2f 1403  ld   $03,y       12219  ld(hi('NEXTY'),Y)               #60
              2a30 e000  jmp  y,$00       12220  jmp(Y,'NEXTY')                  #61
              2a31 00e0  ld   $e0         12221  ld(-64/2)                       #62
                                          12222
                                          12223  label('.meeka#18')
.meeka#18:    2a32 0022  ld   $22         12224  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a33 c202  st   [$02]       12225  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a34 9401  adda $01,y       12226  adda(1,Y)                       #20 retry instruction
              2a35 e000  jmp  y,$00       12227  jmp(Y,'NEXTY')                  #21
              2a36 00f4  ld   $f4         12228  ld(-24/2)                       #22
                                          12229
                                          12230
                                          12231  # MOKEA
                                          12232  label('mokea#13')
mokea#13:     2a37 112b  ld   [$2b],x     12233  ld([sysArgs+7],X)               #13 var address
              2a38 00ef  ld   $ef         12234  ld(min(0,maxTicks-64/2))        #14
              2a39 8115  adda [$15]       12235  adda([vTicks])                  #15
              2a3a e869  blt  .mokea#18   12236  blt('.mokea#18')                #16 not enough time left, so retry
              2a3b 1400  ld   $00,y       12237  ld(0,Y)                         #17
              2a3c 0500  ld   [x]         12238  ld([X])                         #18 var.0
              2a3d de00  st   [y,x++]     12239  st([Y,Xpp])                     #19
              2a3e c2b0  st   [$b0]       12240  st([0xB0])                      #20
              2a3f 0500  ld   [x]         12241  ld([X])                         #21 var.1
              2a40 de00  st   [y,x++]     12242  st([Y,Xpp])                     #22
              2a41 c2b1  st   [$b1]       12243  st([0xB1])                      #23
              2a42 0500  ld   [x]         12244  ld([X])                         #24 var.2
              2a43 de00  st   [y,x++]     12245  st([Y,Xpp])                     #25
              2a44 c2b2  st   [$b2]       12246  st([0xB2])                      #26
              2a45 0500  ld   [x]         12247  ld([X])                         #27 var.3
              2a46 de00  st   [y,x++]     12248  st([Y,Xpp])                     #28
              2a47 c2b3  st   [$b3]       12249  st([0xB3])                      #29
              2a48 0500  ld   [x]         12250  ld([X])                         #30 var.4
              2a49 de00  st   [y,x++]     12251  st([Y,Xpp])                     #31
              2a4a c2b4  st   [$b4]       12252  st([0xB4])                      #32
              2a4b 0500  ld   [x]         12253  ld([X])                         #33 var.5
              2a4c de00  st   [y,x++]     12254  st([Y,Xpp])                     #34
              2a4d c2b5  st   [$b5]       12255  st([0xB5])                      #35
              2a4e 0500  ld   [x]         12256  ld([X])                         #36 var.6
              2a4f de00  st   [y,x++]     12257  st([Y,Xpp])                     #37
              2a50 c2b6  st   [$b6]       12258  st([0xB6])                      #38
              2a51 0500  ld   [x]         12259  ld([X])                         #39 var.7
              2a52 de00  st   [y,x++]     12260  st([Y,Xpp])                     #40
              2a53 c2b7  st   [$b7]       12261  st([0xB7])                      #41
              2a54 1118  ld   [$18],x     12262  ld([vAC],X)                     #42
              2a55 1519  ld   [$19],y     12263  ld([vAC+1],Y)                   #43
              2a56 01b0  ld   [$b0]       12264  ld([0xB0])                      #44
              2a57 de00  st   [y,x++]     12265  st([Y,Xpp])                     #45 poke [vAC], var.0
              2a58 01b1  ld   [$b1]       12266  ld([0xB1])                      #46
              2a59 de00  st   [y,x++]     12267  st([Y,Xpp])                     #47 poke [vAC], var.1
              2a5a 01b2  ld   [$b2]       12268  ld([0xB2])                      #48
              2a5b de00  st   [y,x++]     12269  st([Y,Xpp])                     #49 poke [vAC], var.2
              2a5c 01b3  ld   [$b3]       12270  ld([0xB3])                      #50
              2a5d de00  st   [y,x++]     12271  st([Y,Xpp])                     #51 poke [vAC], var.3
              2a5e 01b4  ld   [$b4]       12272  ld([0xB4])                      #52
              2a5f de00  st   [y,x++]     12273  st([Y,Xpp])                     #53 poke [vAC], var.4
              2a60 01b5  ld   [$b5]       12274  ld([0xB5])                      #54
              2a61 de00  st   [y,x++]     12275  st([Y,Xpp])                     #55 poke [vAC], var.5
              2a62 01b6  ld   [$b6]       12276  ld([0xB6])                      #56
              2a63 de00  st   [y,x++]     12277  st([Y,Xpp])                     #57 poke [vAC], var.6
              2a64 01b7  ld   [$b7]       12278  ld([0xB7])                      #58
              2a65 de00  st   [y,x++]     12279  st([Y,Xpp])                     #59 poke [vAC], var.7
              2a66 1403  ld   $03,y       12280  ld(hi('NEXTY'),Y)               #60
              2a67 e000  jmp  y,$00       12281  jmp(Y,'NEXTY')                  #61
              2a68 00e0  ld   $e0         12282  ld(-64/2)                       #62
                                          12283
                                          12284  label('.mokea#18')
.mokea#18:    2a69 0022  ld   $22         12285  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a6a c202  st   [$02]       12286  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a6b 9401  adda $01,y       12287  adda(1,Y)                       #20 retry instruction
              2a6c e000  jmp  y,$00       12288  jmp(Y,'NEXTY')                  #21
              2a6d 00f4  ld   $f4         12289  ld(-24/2)                       #22
                                          12290
                                          12291
                                          12292  # NEEKA implementation
                                          12293  label('neeka#13')
neeka#13:     2a6e 00fe  ld   $fe         12294  ld(min(0,maxTicks-34/2))        #13
              2a6f 8115  adda [$15]       12295  adda([vTicks])                  #14
              2a70 e885  blt  .neeka#17   12296  blt('.neeka#17')                #15 not enough time left, so retry
              2a71 012b  ld   [$2b]       12297  ld([sysArgs+7])                 #16 number of bytes to peek
              2a72 a001  suba $01         12298  suba(1)                         #17
              2a73 f478  bge  .neeka#20   12299  bge('.neeka#20')                #18
              2a74 c22b  st   [$2b]       12300  st([sysArgs+7])                 #19
              2a75 1403  ld   $03,y       12301  ld(hi('NEXTY'),Y)               #20 done
              2a76 e000  jmp  y,$00       12302  jmp(Y,'NEXTY')                  #21
              2a77 00f4  ld   $f4         12303  ld(-24/2)                       #22
                                          12304
                                          12305  label('.neeka#20')
.neeka#20:    2a78 1519  ld   [$19],y     12306  ld([vAC+1],Y)                   #20
              2a79 9118  adda [$18],x     12307  adda([vAC],X)                   #21
              2a7a 0d00  ld   [y,x]       12308  ld([Y,X])                       #22 peek [vAC + index]
              2a7b c21d  st   [$1d]       12309  st([vTmp])                      #23
              2a7c 012a  ld   [$2a]       12310  ld([sysArgs+6])                 #24
              2a7d 912b  adda [$2b],x     12311  adda([sysArgs+7],X)             #25 var + index
              2a7e 011d  ld   [$1d]       12312  ld([vTmp])                      #26
              2a7f c600  st   [x]         12313  st([X])                         #27 [var + index] = peek [vAC + index]
              2a80 0021  ld   $21         12314  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a81 c202  st   [$02]       12315  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a82 9401  adda $01,y       12316  adda(1,Y)                       #30 restart instruction
              2a83 e000  jmp  y,$00       12317  jmp(Y,'NEXTY')                  #31
              2a84 00ef  ld   $ef         12318  ld(-34/2)                       #32
                                          12319
                                          12320  label('.neeka#17')
.neeka#17:    2a85 0021  ld   $21         12321  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2a86 c202  st   [$02]       12322  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2a87 9401  adda $01,y       12323  adda(1,Y)                       #19 retry instruction
              2a88 e0cb  jmp  y,$cb       12324  jmp(Y,'REENTER')                #20
              2a89 00f4  ld   $f4         12325  ld(-24/2)                       #21
                                          12326
                                          12327
                                          12328  # NOKEA implementation
                                          12329  label('nokea#13')
nokea#13:     2a8a 00fe  ld   $fe         12330  ld(min(0,maxTicks-34/2))        #13
              2a8b 8115  adda [$15]       12331  adda([vTicks])                  #14
              2a8c e8a1  blt  .nokea#17   12332  blt('.nokea#17')                #15 not enough time left, so retry
              2a8d 012b  ld   [$2b]       12333  ld([sysArgs+7])                 #16 number of bytes to peek
              2a8e a001  suba $01         12334  suba(1)                         #17
              2a8f f494  bge  .nokea#20   12335  bge('.nokea#20')                #18
              2a90 c22b  st   [$2b]       12336  st([sysArgs+7])                 #19
              2a91 1403  ld   $03,y       12337  ld(hi('NEXTY'),Y)               #20 done
              2a92 e000  jmp  y,$00       12338  jmp(Y,'NEXTY')                  #21
              2a93 00f4  ld   $f4         12339  ld(-24/2)                       #22
                                          12340
                                          12341  label('.nokea#20')
.nokea#20:    2a94 912a  adda [$2a],x     12342  adda([sysArgs+6],X)             #20 var + index
              2a95 0500  ld   [x]         12343  ld([X])                         #21
              2a96 c21d  st   [$1d]       12344  st([vTmp])                      #22
              2a97 1519  ld   [$19],y     12345  ld([vAC+1],Y)                   #23
              2a98 012b  ld   [$2b]       12346  ld([sysArgs+7])                 #24
              2a99 9118  adda [$18],x     12347  adda([vAC],X)                   #25 vAC + index
              2a9a 011d  ld   [$1d]       12348  ld([vTmp])                      #26
              2a9b ce00  st   [y,x]       12349  st([Y,X])                       #27 [vAC + index] = peek [var + index]
              2a9c 0021  ld   $21         12350  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a9d c202  st   [$02]       12351  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a9e 9401  adda $01,y       12352  adda(1,Y)                       #30 restart instruction
              2a9f e000  jmp  y,$00       12353  jmp(Y,'NEXTY')                  #31
              2aa0 00ef  ld   $ef         12354  ld(-34/2)                       #32
                                          12355
                                          12356  label('.nokea#17')
.nokea#17:    2aa1 0021  ld   $21         12357  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2aa2 c202  st   [$02]       12358  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2aa3 9401  adda $01,y       12359  adda(1,Y)                       #19 retry instruction
              2aa4 e0cb  jmp  y,$cb       12360  jmp(Y,'REENTER')                #20
              2aa5 00f4  ld   $f4         12361  ld(-24/2)                       #21
                                          12362
                                          12363
                                          12364  # DBGE implementation
                                          12365  label('dbge#13')
dbge#13:      2aa6 1517  ld   [$17],y     12366  ld([vPC+1],Y)                   #13 vPC.hi
              2aa7 c21d  st   [$1d]       12367  st([vTmp])                      #14 branch offset
              2aa8 de00  st   [y,x++]     12368  st([Y,Xpp])                     #15 X++, address of counter
              2aa9 0d00  ld   [y,x]       12369  ld([Y,X])                       #16
              2aaa 1200  ld   ac,x        12370  ld(AC,X)                        #17 fetch counter
              2aab 0500  ld   [x]         12371  ld([X])                         #18
              2aac a001  suba $01         12372  suba(1)                         #19 decrement counter
              2aad e8b4  blt  .dbge#22    12373  blt('.dbge#22')                 #20 if < 0 BRA
              2aae c600  st   [x]         12374  st([X])                         #21
              2aaf 011d  ld   [$1d]       12375  ld([vTmp])                      #22
              2ab0 c216  st   [$16]       12376  st([vPC])                       #23 BRA to branch offset
              2ab1 1403  ld   $03,y       12377  ld(hi('NEXTY'),Y)               #24
              2ab2 e000  jmp  y,$00       12378  jmp(Y,'NEXTY')                  #25
              2ab3 00f2  ld   $f2         12379  ld(-28/2)                       #26
                                          12380
                                          12381  label('.dbge#22')
.dbge#22:     2ab4 0116  ld   [$16]       12382  ld([vPC])                       #22
              2ab5 8001  adda $01         12383  adda(1)                         #23
              2ab6 c216  st   [$16]       12384  st([vPC])                       #24 advance vPC by 1
              2ab7 1403  ld   $03,y       12385  ld(hi('REENTER'),Y)             #25
              2ab8 e0cb  jmp  y,$cb       12386  jmp(Y,'REENTER')                #26
              2ab9 00f1  ld   $f1         12387  ld(-30/2)                       #27
                                          12388
                                          12389
                                          12390  # DJNE implementation
                                          12391  label('djne#13')
djne#13:      2aba de00  st   [y,x++]     12392  st([Y,Xpp])                     #13 X++
              2abb c21d  st   [$1d]       12393  st([vTmp])                      #14 var
              2abc 00f8  ld   $f8         12394  ld(min(0,maxTicks-46/2))        #15
              2abd 8115  adda [$15]       12395  adda([vTicks])                  #16
              2abe e8e7  blt  .djne#19    12396  blt('.djne#19')                 #17 not enough time left, so retry
              2abf 0d00  ld   [y,x]       12397  ld([Y,X])                       #18
              2ac0 de00  st   [y,x++]     12398  st([Y,Xpp])                     #19 X++
              2ac1 c22a  st   [$2a]       12399  st([sysArgs+6])                 #20 jump addr.lo
              2ac2 0d00  ld   [y,x]       12400  ld([Y,X])                       #21
              2ac3 c22b  st   [$2b]       12401  st([sysArgs+7])                 #22 jump addr.hi
              2ac4 1400  ld   $00,y       12402  ld(0,Y)                         #23
              2ac5 111d  ld   [$1d],x     12403  ld([vTmp],X)                    #24
              2ac6 0500  ld   [x]         12404  ld([X])                         #25 count.lo
              2ac7 a001  suba $01         12405  suba(1)                         #26
              2ac8 de00  st   [y,x++]     12406  st([Y,Xpp])                     #27 count.lo-- X++
              2ac9 4500  ora  [x]         12407  ora([X])                        #28 count.lo | count.hi
              2aca f0da  beq  .djne#31    12408  beq('.djne#31')                 #19 count = 0
              2acb 111d  ld   [$1d],x     12409  ld([vTmp],X)                    #30
              2acc 0500  ld   [x]         12410  ld([X])                         #31 count.lo
              2acd de00  st   [y,x++]     12411  st([Y,Xpp])                     #32 X++
              2ace 60ff  xora $ff         12412  xora(0xFF)                      #33 if low byte is 0xFF
              2acf ece0  bne  .djne#36    12413  bne('.djne#36')                 #34
              2ad0 0500  ld   [x]         12414  ld([X])                         #35 count.hi
              2ad1 a001  suba $01         12415  suba(1)                         #36
              2ad2 c600  st   [x]         12416  st([X])                         #37
              2ad3 012a  ld   [$2a]       12417  ld([sysArgs+6])                 #38 jump
              2ad4 c216  st   [$16]       12418  st([vPC])                       #39
              2ad5 012b  ld   [$2b]       12419  ld([sysArgs+7])                 #40
              2ad6 c217  st   [$17]       12420  st([vPC+1])                     #41
              2ad7 1403  ld   $03,y       12421  ld(hi('NEXTY'),Y)               #42
              2ad8 e000  jmp  y,$00       12422  jmp(Y,'NEXTY')                  #43
              2ad9 00e9  ld   $e9         12423  ld(-46/2)                       #44
                                          12424
                                          12425  label('.djne#31')
.djne#31:     2ada 0116  ld   [$16]       12426  ld([vPC])                       #31 done
              2adb 8002  adda $02         12427  adda(2)                         #32
              2adc c216  st   [$16]       12428  st([vPC])                       #33
              2add 1403  ld   $03,y       12429  ld(hi('NEXTY'),Y)               #34
              2ade e000  jmp  y,$00       12430  jmp(Y,'NEXTY')                  #35
              2adf 00ed  ld   $ed         12431  ld(-38/2)                       #36
                                          12432
                                          12433  label('.djne#36')
.djne#36:     2ae0 012a  ld   [$2a]       12434  ld([sysArgs+6])                 #36 jump
              2ae1 c216  st   [$16]       12435  st([vPC])                       #37
              2ae2 012b  ld   [$2b]       12436  ld([sysArgs+7])                 #38
              2ae3 c217  st   [$17]       12437  st([vPC+1])                     #39
              2ae4 1403  ld   $03,y       12438  ld(hi('NEXTY'),Y)               #40
              2ae5 e000  jmp  y,$00       12439  jmp(Y,'NEXTY')                  #41
              2ae6 00ea  ld   $ea         12440  ld(-44/2)                       #42
                                          12441
                                          12442  label('.djne#19')
.djne#19:     2ae7 0116  ld   [$16]       12443  ld([vPC])                       #19 retry
              2ae8 a002  suba $02         12444  suba(2)                         #20
              2ae9 c216  st   [$16]       12445  st([vPC])                       #21
              2aea 1403  ld   $03,y       12446  ld(hi('NEXTY'),Y)               #22
              2aeb e000  jmp  y,$00       12447  jmp(Y,'NEXTY')                  #23
              2aec 00f3  ld   $f3         12448  ld(-26/2)                       #24
                                          12449
                                          12450
              2aed 0200  nop              12451  fillers(until=0xff)
              2aee 0200  nop
              2aef 0200  nop
              * 18 times
              2aff 0200  nop              12452  align(0x100, size=0x100)
                                          12453
                                          12454  #-----------------------------------------------------------------------
                                          12455  #       More vCPU instruction implementations, (0x2B00)
                                          12456  #-----------------------------------------------------------------------
                                          12457  #
                                          12458  # DJGE implementation
                                          12459  label('djge#13')
djge#13:      2b00 de00  st   [y,x++]     12460  st([Y,Xpp])                     #13
              2b01 c21d  st   [$1d]       12461  st([vTmp])                      #14 var
              2b02 00fa  ld   $fa         12462  ld(min(0,maxTicks-42/2))        #15
              2b03 8115  adda [$15]       12463  adda([vTicks])                  #16
              2b04 e829  blt  .djge#19    12464  blt('.djge#19')                 #17 not enough time left, so retry
              2b05 0d00  ld   [y,x]       12465  ld([Y,X])                       #18
              2b06 de00  st   [y,x++]     12466  st([Y,Xpp])                     #19
              2b07 c22a  st   [$2a]       12467  st([sysArgs+6])                 #20 jump addr.lo
              2b08 0d00  ld   [y,x]       12468  ld([Y,X])                       #21
              2b09 c22b  st   [$2b]       12469  st([sysArgs+7])                 #22 jump addr.hi
              2b0a 1400  ld   $00,y       12470  ld(0,Y)                         #23
              2b0b 111d  ld   [$1d],x     12471  ld([vTmp],X)                    #24
              2b0c 0500  ld   [x]         12472  ld([X])                         #25 count.lo
              2b0d a001  suba $01         12473  suba(1)                         #26
              2b0e de00  st   [y,x++]     12474  st([Y,Xpp])                     #27 count.lo-- X++
              2b0f 60ff  xora $ff         12475  xora(0xFF)                      #28 if low byte is 0xFF
              2b10 ec1c  bne  .djge#31    12476  bne('.djge#31')                 #29
              2b11 0500  ld   [x]         12477  ld([X])                         #30 count.hi
              2b12 f023  beq  .djge#33    12478  beq('.djge#33')                 #31
              2b13 a001  suba $01         12479  suba(1)                         #32
              2b14 c600  st   [x]         12480  st([X])                         #33
              2b15 012a  ld   [$2a]       12481  ld([sysArgs+6])                 #34 jump
              2b16 c216  st   [$16]       12482  st([vPC])                       #35
              2b17 012b  ld   [$2b]       12483  ld([sysArgs+7])                 #36
              2b18 c217  st   [$17]       12484  st([vPC+1])                     #37
              2b19 1403  ld   $03,y       12485  ld(hi('NEXTY'),Y)               #38
              2b1a e000  jmp  y,$00       12486  jmp(Y,'NEXTY')                  #39
              2b1b 00eb  ld   $eb         12487  ld(-42/2)                       #40
                                          12488
                                          12489  label('.djge#31')
.djge#31:     2b1c 012a  ld   [$2a]       12490  ld([sysArgs+6])                 #31 jump
              2b1d c216  st   [$16]       12491  st([vPC])                       #32
              2b1e 012b  ld   [$2b]       12492  ld([sysArgs+7])                 #33
              2b1f c217  st   [$17]       12493  st([vPC+1])                     #34
              2b20 1403  ld   $03,y       12494  ld(hi('REENTER'),Y)             #35
              2b21 e0cb  jmp  y,$cb       12495  jmp(Y,'REENTER')                #36
              2b22 00ec  ld   $ec         12496  ld(-40/2)                       #37
                                          12497
                                          12498  label('.djge#33')
.djge#33:     2b23 0116  ld   [$16]       12499  ld([vPC])                       #33 done
              2b24 8002  adda $02         12500  adda(2)                         #34
              2b25 c216  st   [$16]       12501  st([vPC])                       #35
              2b26 1403  ld   $03,y       12502  ld(hi('NEXTY'),Y)               #36
              2b27 e000  jmp  y,$00       12503  jmp(Y,'NEXTY')                  #37
              2b28 00ec  ld   $ec         12504  ld(-40/2)                       #38
                                          12505
                                          12506  label('.djge#19')
.djge#19:     2b29 0116  ld   [$16]       12507  ld([vPC])                       #19 retry
              2b2a a002  suba $02         12508  suba(2)                         #20
              2b2b c216  st   [$16]       12509  st([vPC])                       #21
              2b2c 1403  ld   $03,y       12510  ld(hi('NEXTY'),Y)               #22
              2b2d e000  jmp  y,$00       12511  jmp(Y,'NEXTY')                  #23
              2b2e 00f3  ld   $f3         12512  ld(-26/2)                       #24
                                          12513
                                          12514
                                          12515  # ADDVL
                                          12516  label('addvl#13')
addvl#13:     2b2f 0500  ld   [x]         12517  ld([X])                         #13
              2b30 c21d  st   [$1d]       12518  st([vTmp])                      #14 save src.0
              2b31 112b  ld   [$2b],x     12519  ld([sysArgs+7],X)               #15 dst.0
              2b32 00e8  ld   $e8         12520  ld(min(0,maxTicks-78/2))        #16
              2b33 8115  adda [$15]       12521  adda([vTicks])                  #17
              2b34 e874  blt  .addvl#20   12522  blt('.addvl#20')                #18 not enough time left, so retry
              2b35 011d  ld   [$1d]       12523  ld([vTmp])                      #19 src.0
              2b36 8500  adda [x]         12524  adda([X])                       #20
              2b37 c600  st   [x]         12525  st([X])                         #21 dst.0 += src.0
              2b38 e83c  blt  .addvl#24   12526  bmi('.addvl#24')                #22 carry
              2b39 a11d  suba [$1d]       12527  suba([vTmp])                    #23 original dst.0
              2b3a fc3e  bra  .addvl#26   12528  bra('.addvl#26')                #24
              2b3b 411d  ora  [$1d]       12529  ora([vTmp])                     #25 carry in bit 7
                                          12530
                                          12531  label('.addvl#24')
.addvl#24:    2b3c 211d  anda [$1d]       12532  anda([vTmp])                    #24 carry in bit 7
              2b3d 0200  nop              12533  nop()                           #25
                                          12534
                                          12535  label('.addvl#26')
.addvl#26:    2b3e 3080  anda $80,x       12536  anda(0x80,X)                    #26 carry to bit 0
              2b3f 0500  ld   [x]         12537  ld([X])                         #27
              2b40 c21d  st   [$1d]       12538  st([vTmp])                      #28 store carry
              2b41 012a  ld   [$2a]       12539  ld([sysArgs+6])                 #29
              2b42 9001  adda $01,x       12540  adda(1,X)                       #30 src.1
              2b43 011d  ld   [$1d]       12541  ld([vTmp])                      #31
              2b44 8500  adda [x]         12542  adda([X])                       #32
              2b45 c21d  st   [$1d]       12543  st([vTmp])                      #33 src.1 += carry
              2b46 012b  ld   [$2b]       12544  ld([sysArgs+7])                 #34
              2b47 9001  adda $01,x       12545  adda(1,X)                       #35
              2b48 011d  ld   [$1d]       12546  ld([vTmp])                      #36
              2b49 8500  adda [x]         12547  adda([X])                       #37
              2b4a c600  st   [x]         12548  st([X])                         #38 dst.1 += src.1
              2b4b e84f  blt  .addvl#41   12549  bmi('.addvl#41')                #39 carry
              2b4c a11d  suba [$1d]       12550  suba([vTmp])                    #40 original dst.1
              2b4d fc51  bra  .addvl#43   12551  bra('.addvl#43')                #41
              2b4e 411d  ora  [$1d]       12552  ora([vTmp])                     #42 carry in bit 7
                                          12553
                                          12554  label('.addvl#41')
.addvl#41:    2b4f 211d  anda [$1d]       12555  anda([vTmp])                    #41 carry in bit 7
              2b50 0200  nop              12556  nop()                           #42
                                          12557
                                          12558  label('.addvl#43')
.addvl#43:    2b51 3080  anda $80,x       12559  anda(0x80,X)                    #43 carry to bit 0
              2b52 0500  ld   [x]         12560  ld([X])                         #44
              2b53 c21d  st   [$1d]       12561  st([vTmp])                      #45 store carry
              2b54 012a  ld   [$2a]       12562  ld([sysArgs+6])                 #46
              2b55 9002  adda $02,x       12563  adda(2,X)                       #47 src.2
              2b56 011d  ld   [$1d]       12564  ld([vTmp])                      #48
              2b57 8500  adda [x]         12565  adda([X])                       #49
              2b58 c21d  st   [$1d]       12566  st([vTmp])                      #50 src.2 += carry
              2b59 012b  ld   [$2b]       12567  ld([sysArgs+7])                 #51
              2b5a 9002  adda $02,x       12568  adda(2,X)                       #52
              2b5b 011d  ld   [$1d]       12569  ld([vTmp])                      #53
              2b5c 8500  adda [x]         12570  adda([X])                       #54
              2b5d c600  st   [x]         12571  st([X])                         #55 dst.2 += src.2
              2b5e e862  blt  .addvl#58   12572  bmi('.addvl#58')                #56 carry
              2b5f a11d  suba [$1d]       12573  suba([vTmp])                    #57 original dst.2
              2b60 fc64  bra  .addvl#60   12574  bra('.addvl#60')                #58
              2b61 411d  ora  [$1d]       12575  ora([vTmp])                     #59 carry in bit 7
                                          12576
                                          12577  label('.addvl#58')
.addvl#58:    2b62 211d  anda [$1d]       12578  anda([vTmp])                    #58 carry in bit 7
              2b63 0200  nop              12579  nop()                           #59
                                          12580
                                          12581  label('.addvl#60')
.addvl#60:    2b64 3080  anda $80,x       12582  anda(0x80,X)                    #60 carry to bit 0
              2b65 0500  ld   [x]         12583  ld([X])                         #61
              2b66 c21d  st   [$1d]       12584  st([vTmp])                      #62 store carry
              2b67 012a  ld   [$2a]       12585  ld([sysArgs+6])                 #63
              2b68 9003  adda $03,x       12586  adda(3,X)                       #64 src.3
              2b69 011d  ld   [$1d]       12587  ld([vTmp])                      #65
              2b6a 8500  adda [x]         12588  adda([X])                       #66
              2b6b c21d  st   [$1d]       12589  st([vTmp])                      #67 src.3 += carry
              2b6c 012b  ld   [$2b]       12590  ld([sysArgs+7])                 #68
              2b6d 9003  adda $03,x       12591  adda(3,X)                       #69
              2b6e 011d  ld   [$1d]       12592  ld([vTmp])                      #70
              2b6f 8500  adda [x]         12593  adda([X])                       #71
              2b70 c600  st   [x]         12594  st([X])                         #72 dst.3 += src.3
              2b71 1403  ld   $03,y       12595  ld(hi('REENTER'),Y)             #73
              2b72 e0cb  jmp  y,$cb       12596  jmp(Y,'REENTER')                #74
              2b73 00d9  ld   $d9         12597  ld(-78/2)                       #75
                                          12598
                                          12599  label('.addvl#20')
.addvl#20:    2b74 0021  ld   $21         12600  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2b75 c202  st   [$02]       12601  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2b76 9401  adda $01,y       12602  adda(1,Y)                       #22 retry instruction
              2b77 e000  jmp  y,$00       12603  jmp(Y,'NEXTY')                  #23
              2b78 00f3  ld   $f3         12604  ld(-26/2)                       #24
                                          12605
                                          12606
                                          12607  # SUBVL
                                          12608  label('subvl#13')
subvl#13:     2b79 0500  ld   [x]         12609  ld([X])                         #13
              2b7a c21d  st   [$1d]       12610  st([vTmp])                      #14 save src.0
              2b7b 112b  ld   [$2b],x     12611  ld([sysArgs+7],X)               #15 dst.0
              2b7c 00ea  ld   $ea         12612  ld(min(0,maxTicks-74/2))        #16
              2b7d 8115  adda [$15]       12613  adda([vTicks])                  #17
              2b7e e8c0  blt  .subvl#20   12614  blt('.subvl#20')                #18 not enough time left, so retry
              2b7f 0500  ld   [x]         12615  ld([X])                         #19 dst.0
              2b80 e885  blt  .subvl#22   12616  bmi('.subvl#22')                #20
              2b81 a11d  suba [$1d]       12617  suba([vTmp])                    #21
              2b82 c600  st   [x]         12618  st([X])                         #22 dst.0 -= src.0
              2b83 fc88  bra  .subvl#25   12619  bra('.subvl#25')                #23
              2b84 411d  ora  [$1d]       12620  ora([vTmp])                     #24 borrow in bit 7
                                          12621
                                          12622  label('.subvl#22')
.subvl#22:    2b85 c600  st   [x]         12623  st([X])                         #22 dst.0 -= src.0
              2b86 211d  anda [$1d]       12624  anda([vTmp])                    #23 borrow in bit 7
              2b87 0200  nop              12625  nop()                           #24
                                          12626
                                          12627  label('.subvl#25')
.subvl#25:    2b88 3080  anda $80,x       12628  anda(0x80,X)                    #25 borrow to bit 0
              2b89 0500  ld   [x]         12629  ld([X])                         #26
              2b8a c2b0  st   [$b0]       12630  st([0xB0])                      #27 store borrow
              2b8b 012a  ld   [$2a]       12631  ld([sysArgs+6])                 #28
              2b8c 9001  adda $01,x       12632  adda(1,X)                       #29
              2b8d 0500  ld   [x]         12633  ld([X])                         #30
              2b8e c21d  st   [$1d]       12634  st([vTmp])                      #31 src.1
              2b8f 012b  ld   [$2b]       12635  ld([sysArgs+7])                 #32
              2b90 9001  adda $01,x       12636  adda(1,X)                       #33
              2b91 0500  ld   [x]         12637  ld([X])                         #34 dst.1
              2b92 e898  blt  .subvl#37   12638  bmi('.subvl#37')                #35
              2b93 a11d  suba [$1d]       12639  suba([vTmp])                    #36
              2b94 a1b0  suba [$b0]       12640  suba([0xB0])                    #37
              2b95 c600  st   [x]         12641  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b96 fc9c  bra  .subvl#41   12642  bra('.subvl#41')                #39
              2b97 411d  ora  [$1d]       12643  ora([vTmp])                     #40 borrow in bit 7
                                          12644
                                          12645  label('.subvl#37')
.subvl#37:    2b98 a1b0  suba [$b0]       12646  suba([0xB0])                    #37
              2b99 c600  st   [x]         12647  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b9a 211d  anda [$1d]       12648  anda([vTmp])                    #39 borrow in bit 7
              2b9b 0200  nop              12649  nop()                           #40
                                          12650
                                          12651  label('.subvl#41')
.subvl#41:    2b9c 3080  anda $80,x       12652  anda(0x80,X)                    #41 borrow to bit 0
              2b9d 0500  ld   [x]         12653  ld([X])                         #42
              2b9e c2b0  st   [$b0]       12654  st([0xB0])                      #43 store borrow
              2b9f 012a  ld   [$2a]       12655  ld([sysArgs+6])                 #44
              2ba0 9002  adda $02,x       12656  adda(2,X)                       #45
              2ba1 0500  ld   [x]         12657  ld([X])                         #46
              2ba2 c21d  st   [$1d]       12658  st([vTmp])                      #47 src.2
              2ba3 012b  ld   [$2b]       12659  ld([sysArgs+7])                 #48
              2ba4 9002  adda $02,x       12660  adda(2,X)                       #49
              2ba5 0500  ld   [x]         12661  ld([X])                         #50 dst.2
              2ba6 e8ac  blt  .subvl#53   12662  bmi('.subvl#53')                #51
              2ba7 a11d  suba [$1d]       12663  suba([vTmp])                    #52
              2ba8 a1b0  suba [$b0]       12664  suba([0xB0])                    #53
              2ba9 c600  st   [x]         12665  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2baa fcb0  bra  .subvl#57   12666  bra('.subvl#57')                #55
              2bab 411d  ora  [$1d]       12667  ora([vTmp])                     #56 borrow in bit 7
                                          12668
                                          12669  label('.subvl#53')
.subvl#53:    2bac a1b0  suba [$b0]       12670  suba([0xB0])                    #53
              2bad c600  st   [x]         12671  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2bae 211d  anda [$1d]       12672  anda([vTmp])                    #55 borrow in bit 7
              2baf 0200  nop              12673  nop()                           #56
                                          12674
                                          12675  label('.subvl#57')
.subvl#57:    2bb0 3080  anda $80,x       12676  anda(0x80,X)                    #57 borrow to bit 0
              2bb1 0500  ld   [x]         12677  ld([X])                         #58
              2bb2 c2b0  st   [$b0]       12678  st([0xB0])                      #59 store borrow
              2bb3 012a  ld   [$2a]       12679  ld([sysArgs+6])                 #60
              2bb4 9003  adda $03,x       12680  adda(3,X)                       #61
              2bb5 0500  ld   [x]         12681  ld([X])                         #62
              2bb6 c21d  st   [$1d]       12682  st([vTmp])                      #63 src.3
              2bb7 012b  ld   [$2b]       12683  ld([sysArgs+7])                 #64
              2bb8 9003  adda $03,x       12684  adda(3,X)                       #65 dst.3
              2bb9 0500  ld   [x]         12685  ld([X])                         #66
              2bba a11d  suba [$1d]       12686  suba([vTmp])                    #67
              2bbb a1b0  suba [$b0]       12687  suba([0xB0])                    #68
              2bbc c600  st   [x]         12688  st([X])                         #69 dst.3 = dst.3 - src.3 - borrow
              2bbd 1403  ld   $03,y       12689  ld(hi('NEXTY'),Y)               #70
              2bbe e000  jmp  y,$00       12690  jmp(Y,'NEXTY')                  #71
              2bbf 00db  ld   $db         12691  ld(-74/2)                       #72
                                          12692
                                          12693  label('.subvl#20')
.subvl#20:    2bc0 0021  ld   $21         12694  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2bc1 c202  st   [$02]       12695  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2bc2 9401  adda $01,y       12696  adda(1,Y)                       #22 retry instruction
              2bc3 e000  jmp  y,$00       12697  jmp(Y,'NEXTY')                  #23
              2bc4 00f3  ld   $f3         12698  ld(-26/2)                       #24
                                          12699
                                          12700
                                          12701  # ANDVL
                                          12702  label('andvl#13')
andvl#13:     2bc5 1400  ld   $00,y       12703  ld(0,Y)                         #13
              2bc6 00f8  ld   $f8         12704  ld(min(0,maxTicks-46/2))        #14
              2bc7 8115  adda [$15]       12705  adda([vTicks])                  #15
              2bc8 e8e4  blt  .andvl#18   12706  blt('.andvl#18')                #16 not enough time left, so retry
              2bc9 0d00  ld   [y,x]       12707  ld([Y,X])                       #17 src.0
              2bca de00  st   [y,x++]     12708  st([Y,Xpp])                     #18
              2bcb c2b0  st   [$b0]       12709  st([0xB0])                      #19
              2bcc 0d00  ld   [y,x]       12710  ld([Y,X])                       #20 src.1
              2bcd de00  st   [y,x++]     12711  st([Y,Xpp])                     #21
              2bce c2b1  st   [$b1]       12712  st([0xB1])                      #22
              2bcf 0d00  ld   [y,x]       12713  ld([Y,X])                       #23 src.2
              2bd0 de00  st   [y,x++]     12714  st([Y,Xpp])                     #24
              2bd1 c2b2  st   [$b2]       12715  st([0xB2])                      #25
              2bd2 0500  ld   [x]         12716  ld([X])                         #26 src.3
              2bd3 c2b3  st   [$b3]       12717  st([0xB3])                      #27
              2bd4 112b  ld   [$2b],x     12718  ld([sysArgs+7],X)               #28
              2bd5 0500  ld   [x]         12719  ld([X])                         #29 dst.0
              2bd6 21b0  anda [$b0]       12720  anda([0xB0])                    #30
              2bd7 de00  st   [y,x++]     12721  st([Y,Xpp])                     #31 dst.0 &= src.0
              2bd8 0500  ld   [x]         12722  ld([X])                         #32 dst.1
              2bd9 21b1  anda [$b1]       12723  anda([0xB1])                    #33
              2bda de00  st   [y,x++]     12724  st([Y,Xpp])                     #34 dst.1 &= src.1
              2bdb 0500  ld   [x]         12725  ld([X])                         #35 dst.2
              2bdc 21b2  anda [$b2]       12726  anda([0xB2])                    #36
              2bdd de00  st   [y,x++]     12727  st([Y,Xpp])                     #37 dst.2 &= src.2
              2bde 0500  ld   [x]         12728  ld([X])                         #38 dst.3
              2bdf 21b3  anda [$b3]       12729  anda([0xB3])                    #39
              2be0 de00  st   [y,x++]     12730  st([Y,Xpp])                     #40 dst.3 &= src.3
              2be1 1403  ld   $03,y       12731  ld(hi('REENTER'),Y)             #41
              2be2 e0cb  jmp  y,$cb       12732  jmp(Y,'REENTER')                #42
              2be3 00e9  ld   $e9         12733  ld(-46/2)                       #43
                                          12734
                                          12735  label('.andvl#18')
.andvl#18:    2be4 0021  ld   $21         12736  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2be5 c202  st   [$02]       12737  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2be6 9401  adda $01,y       12738  adda(1,Y)                       #20 retry instruction
              2be7 e000  jmp  y,$00       12739  jmp(Y,'NEXTY')                  #21
              2be8 00f4  ld   $f4         12740  ld(-24/2)                       #22
                                          12741
                                          12742
              2be9 0200  nop              12743  fillers(until=0xff)
              2bea 0200  nop
              2beb 0200  nop
              * 22 times
              2bff 0200  nop              12744  align(0x100, size=0x100)
                                          12745
                                          12746  #-----------------------------------------------------------------------
                                          12747  #       More vCPU instruction implementations, (0x2C00)
                                          12748  #-----------------------------------------------------------------------
                                          12749  #
                                          12750  # ORVL
                                          12751  label('orvl#13')
orvl#13:      2c00 1400  ld   $00,y       12752  ld(0,Y)                         #13
              2c01 00f8  ld   $f8         12753  ld(min(0,maxTicks-46/2))        #14
              2c02 8115  adda [$15]       12754  adda([vTicks])                  #15
              2c03 e81f  blt  .orvl#18    12755  blt('.orvl#18')                 #16 not enough time left, so retry
              2c04 0d00  ld   [y,x]       12756  ld([Y,X])                       #17 src.0
              2c05 de00  st   [y,x++]     12757  st([Y,Xpp])                     #18
              2c06 c2b0  st   [$b0]       12758  st([0xB0])                      #19
              2c07 0d00  ld   [y,x]       12759  ld([Y,X])                       #20 src.1
              2c08 de00  st   [y,x++]     12760  st([Y,Xpp])                     #21
              2c09 c2b1  st   [$b1]       12761  st([0xB1])                      #22
              2c0a 0d00  ld   [y,x]       12762  ld([Y,X])                       #23 src.2
              2c0b de00  st   [y,x++]     12763  st([Y,Xpp])                     #24
              2c0c c2b2  st   [$b2]       12764  st([0xB2])                      #25
              2c0d 0500  ld   [x]         12765  ld([X])                         #26 src.3
              2c0e c2b3  st   [$b3]       12766  st([0xB3])                      #27
              2c0f 112b  ld   [$2b],x     12767  ld([sysArgs+7],X)               #28
              2c10 0500  ld   [x]         12768  ld([X])                         #29 dst.0
              2c11 41b0  ora  [$b0]       12769  ora([0xB0])                     #30
              2c12 de00  st   [y,x++]     12770  st([Y,Xpp])                     #31 dst.0 |= src.0
              2c13 0500  ld   [x]         12771  ld([X])                         #32 dst.1
              2c14 41b1  ora  [$b1]       12772  ora([0xB1])                     #33
              2c15 de00  st   [y,x++]     12773  st([Y,Xpp])                     #34 dst.1 |= src.1
              2c16 0500  ld   [x]         12774  ld([X])                         #35 dst.2
              2c17 41b2  ora  [$b2]       12775  ora([0xB2])                     #36
              2c18 de00  st   [y,x++]     12776  st([Y,Xpp])                     #37 dst.2 |= src.2
              2c19 0500  ld   [x]         12777  ld([X])                         #38 dst.3
              2c1a 41b3  ora  [$b3]       12778  ora([0xB3])                     #39
              2c1b de00  st   [y,x++]     12779  st([Y,Xpp])                     #40 dst.3 |= src.3
              2c1c 1403  ld   $03,y       12780  ld(hi('REENTER'),Y)             #41
              2c1d e0cb  jmp  y,$cb       12781  jmp(Y,'REENTER')                #42
              2c1e 00e9  ld   $e9         12782  ld(-46/2)                       #43
                                          12783
                                          12784  label('.orvl#18')
.orvl#18:     2c1f 0021  ld   $21         12785  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c20 c202  st   [$02]       12786  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c21 9401  adda $01,y       12787  adda(1,Y)                       #20 retry instruction
              2c22 e000  jmp  y,$00       12788  jmp(Y,'NEXTY')                  #21
              2c23 00f4  ld   $f4         12789  ld(-24/2)                       #22
                                          12790
                                          12791
                                          12792  # XORVL
                                          12793  label('xorvl#13')
xorvl#13:     2c24 1400  ld   $00,y       12794  ld(0,Y)                         #13
              2c25 00f8  ld   $f8         12795  ld(min(0,maxTicks-46/2))        #14
              2c26 8115  adda [$15]       12796  adda([vTicks])                  #15
              2c27 e843  blt  .xorvl#18   12797  blt('.xorvl#18')                #16 not enough time left, so retry
              2c28 0d00  ld   [y,x]       12798  ld([Y,X])                       #17 src.0
              2c29 de00  st   [y,x++]     12799  st([Y,Xpp])                     #18
              2c2a c2b0  st   [$b0]       12800  st([0xB0])                      #19
              2c2b 0d00  ld   [y,x]       12801  ld([Y,X])                       #20 src.1
              2c2c de00  st   [y,x++]     12802  st([Y,Xpp])                     #21
              2c2d c2b1  st   [$b1]       12803  st([0xB1])                      #22
              2c2e 0d00  ld   [y,x]       12804  ld([Y,X])                       #23 src.2
              2c2f de00  st   [y,x++]     12805  st([Y,Xpp])                     #24
              2c30 c2b2  st   [$b2]       12806  st([0xB2])                      #25
              2c31 0500  ld   [x]         12807  ld([X])                         #26 src.3
              2c32 c2b3  st   [$b3]       12808  st([0xB3])                      #27
              2c33 112b  ld   [$2b],x     12809  ld([sysArgs+7],X)               #28
              2c34 0500  ld   [x]         12810  ld([X])                         #29 dst.0
              2c35 61b0  xora [$b0]       12811  xora([0xB0])                    #30
              2c36 de00  st   [y,x++]     12812  st([Y,Xpp])                     #31 dst.0 ^= src.0
              2c37 0500  ld   [x]         12813  ld([X])                         #32 dst.1
              2c38 61b1  xora [$b1]       12814  xora([0xB1])                    #33
              2c39 de00  st   [y,x++]     12815  st([Y,Xpp])                     #34 dst.1 ^= src.1
              2c3a 0500  ld   [x]         12816  ld([X])                         #35 dst.2
              2c3b 61b2  xora [$b2]       12817  xora([0xB2])                    #36
              2c3c de00  st   [y,x++]     12818  st([Y,Xpp])                     #37 dst.2 ^= src.2
              2c3d 0500  ld   [x]         12819  ld([X])                         #38 dst.3
              2c3e 61b3  xora [$b3]       12820  xora([0xB3])                    #39
              2c3f de00  st   [y,x++]     12821  st([Y,Xpp])                     #40 dst.3 ^= src.3
              2c40 1403  ld   $03,y       12822  ld(hi('REENTER'),Y)             #41
              2c41 e0cb  jmp  y,$cb       12823  jmp(Y,'REENTER')                #42
              2c42 00e9  ld   $e9         12824  ld(-46/2)                       #43
                                          12825
                                          12826  label('.xorvl#18')
.xorvl#18:    2c43 0021  ld   $21         12827  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c44 c202  st   [$02]       12828  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c45 9401  adda $01,y       12829  adda(1,Y)                       #20 retry instruction
              2c46 e000  jmp  y,$00       12830  jmp(Y,'NEXTY')                  #21
              2c47 00f4  ld   $f4         12831  ld(-24/2)                       #22
                                          12832
                                          12833
                                          12834  # LSRV implementation
                                          12835  label('lsrv#13')
lsrv#13:      2c48 d22b  st   [$2b],x     12836  st([sysArgs+7],X)               #13 var address
              2c49 00f3  ld   $f3         12837  ld(min(0,maxTicks-56/2))        #14
              2c4a 8115  adda [$15]       12838  adda([vTicks])                  #15
              2c4b e865  blt  .lsrv#18    12839  blt('.lsrv#18')                 #16 not enough time left, so retry
              2c4c 1405  ld   $05,y       12840  ld(hi('shiftTable'),Y)          #17 (ac >> 1) table
              2c4d 00cc  ld   $cc         12841  ld('.lsrv#27')                  #18 continuation address
              2c4e c21d  st   [$1d]       12842  st([vTmp])                      #19
              2c4f 0500  ld   [x]         12843  ld([X])                         #20 load byte from var
              2c50 20fe  anda $fe         12844  anda(0xfe)                      #21
              2c51 e200  jmp  y,ac        12845  jmp(Y,AC)                       #22
              2c52 fcff  bra  $ff         12846  bra(255)                        #23 bra shiftTable+255
                                          12847  # continues in page 0x0600 at label('.lsrv#27') fetching shifted byte from 0x0500
                                          12848
                                          12849  label('.lsrv#30')
.lsrv#30:     2c53 012b  ld   [$2b]       12850  ld([sysArgs+7])                 #30 low byte address
              2c54 8001  adda $01         12851  adda(1)                         #31
              2c55 d22a  st   [$2a],x     12852  st([sysArgs+6],X)               #32 high byte address
              2c56 0500  ld   [x]         12853  ld([X])                         #33 bit 0 of high byte
              2c57 2001  anda $01         12854  anda(1)                         #34
              2c58 807f  adda $7f         12855  adda(127)                       #35
              2c59 2080  anda $80         12856  anda(128)                       #36
              2c5a 112b  ld   [$2b],x     12857  ld([sysArgs+7],X)               #37
              2c5b 4500  ora  [x]         12858  ora([X])                        #38
              2c5c c600  st   [x]         12859  st([X])                         #39 transfer to bit 7 of low byte
              2c5d 1405  ld   $05,y       12860  ld(hi('shiftTable'),Y)          #40 (ac >> 1) table
              2c5e 00cf  ld   $cf         12861  ld('.lsrv#51')                  #41 continuation address
              2c5f c21d  st   [$1d]       12862  st([vTmp])                      #42
              2c60 112a  ld   [$2a],x     12863  ld([sysArgs+6],X)               #43
              2c61 0500  ld   [x]         12864  ld([X])                         #44
              2c62 20fe  anda $fe         12865  anda(0b11111110)                #45
              2c63 e200  jmp  y,ac        12866  jmp(Y,AC)                       #46
              2c64 fcff  bra  $ff         12867  bra(255)                        #47 bra shiftTable+255
                                          12868  # continues in page 0x0600 at label('.lsrv#51') fetching shifted byte from 0x0500
                                          12869
                                          12870  label('.lsrv#18')
.lsrv#18:     2c65 0022  ld   $22         12871  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c66 c202  st   [$02]       12872  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2c67 9401  adda $01,y       12873  adda(1,Y)                       #20 retry instruction
              2c68 e000  jmp  y,$00       12874  jmp(Y,'NEXTY')                  #21
              2c69 00f4  ld   $f4         12875  ld(-24/2)                       #22
                                          12876  #ld([vPC])                       #18 retry instruction
                                          12877  #suba(2)                         #19
                                          12878  #st([vPC])                       #20
                                          12879  #ld(hi('REENTER'),Y)             #21
                                          12880  #jmp(Y,'REENTER')                #22
                                          12881  #ld(-26/2)                       #23
                                          12882
                                          12883
                                          12884  # LSRVL implementation
                                          12885  label('lsrvl#13')
lsrvl#13:     2c6a 1405  ld   $05,y       12886  ld(hi('shiftTable'),Y)          #13 (ac >> 1) table
              2c6b 00db  ld   $db         12887  ld(min(0,maxTicks-104/2))       #14
              2c6c 8115  adda [$15]       12888  adda([vTicks])                  #15
              2c6d e8aa  blt  .lsrvl#18   12889  blt('.lsrvl#18')                #16 not enough time left, so retry
              2c6e 00d3  ld   $d3         12890  ld('.lsrvl#26')                 #17 continuation address
              2c6f c21d  st   [$1d]       12891  st([vTmp])                      #18
              2c70 0500  ld   [x]         12892  ld([X])                         #19 load byte 0 from var
              2c71 20fe  anda $fe         12893  anda(0xfe)                      #20
              2c72 e200  jmp  y,ac        12894  jmp(Y,AC)                       #21
              2c73 fcff  bra  $ff         12895  bra(255)                        #22 bra shiftTable+255
                                          12896  # continues in page 0x0600 at label('.lsrvl#26') fetching shifted byte from 0x0500
                                          12897
                                          12898  label('.lsrvl#29')
.lsrvl#29:    2c74 012b  ld   [$2b]       12899  ld([sysArgs+7])                 #29 byte 0 address
              2c75 8001  adda $01         12900  adda(1)                         #30
              2c76 d2b0  st   [$b0],x     12901  st([0xB0],X)                    #31 byte 1 address
              2c77 8001  adda $01         12902  adda(1)                         #32
              2c78 c2b1  st   [$b1]       12903  st([0xB1])                      #33 byte 2 address
              2c79 8001  adda $01         12904  adda(1)                         #34
              2c7a c2b2  st   [$b2]       12905  st([0xB2])                      #35 byte 3 address
              2c7b 0500  ld   [x]         12906  ld([X])                         #36 bit 0 of byte 1
              2c7c 2001  anda $01         12907  anda(1)                         #37
              2c7d 807f  adda $7f         12908  adda(127)                       #38
              2c7e 2080  anda $80         12909  anda(128)                       #39
              2c7f 112b  ld   [$2b],x     12910  ld([sysArgs+7],X)               #40 byte 0 address
              2c80 4500  ora  [x]         12911  ora([X])                        #41
              2c81 c600  st   [x]         12912  st([X])                         #42 transfer to bit 7 of byte 0
              2c82 1405  ld   $05,y       12913  ld(hi('shiftTable'),Y)          #43 (ac >> 1) table
              2c83 00d6  ld   $d6         12914  ld('.lsrvl#54')                 #44 continuation address
              2c84 c21d  st   [$1d]       12915  st([vTmp])                      #45
              2c85 11b0  ld   [$b0],x     12916  ld([0xB0],X)                    #46 byte 1 address
              2c86 0500  ld   [x]         12917  ld([X])                         #47
              2c87 20fe  anda $fe         12918  anda(0b11111110)                #48
              2c88 e200  jmp  y,ac        12919  jmp(Y,AC)                       #49
              2c89 fcff  bra  $ff         12920  bra(255)                        #50 bra shiftTable+255
                                          12921  # continues in page 0x0600 at label('.lsrvl#54') fetching shifted byte from 0x0500
                                          12922
                                          12923  label('.lsrvl#57')
.lsrvl#57:    2c8a 11b1  ld   [$b1],x     12924  ld([0xB1],X)                    #57 byte 2 address
              2c8b 0500  ld   [x]         12925  ld([X])                         #58 bit 0 of byte 2
              2c8c 2001  anda $01         12926  anda(1)                         #59
              2c8d 807f  adda $7f         12927  adda(127)                       #60
              2c8e 2080  anda $80         12928  anda(128)                       #61
              2c8f 11b0  ld   [$b0],x     12929  ld([0xB0],X)                    #62 byte 1 address
              2c90 4500  ora  [x]         12930  ora([X])                        #63
              2c91 c600  st   [x]         12931  st([X])                         #64 transfer to bit 7 of byte 1
              2c92 1405  ld   $05,y       12932  ld(hi('shiftTable'),Y)          #65 (ac >> 1) table
              2c93 00d9  ld   $d9         12933  ld('.lsrvl#76')                 #66 continuation address
              2c94 c21d  st   [$1d]       12934  st([vTmp])                      #67
              2c95 11b1  ld   [$b1],x     12935  ld([0xB1],X)                    #68 byte 2 address
              2c96 0500  ld   [x]         12936  ld([X])                         #69
              2c97 20fe  anda $fe         12937  anda(0b11111110)                #70
              2c98 e200  jmp  y,ac        12938  jmp(Y,AC)                       #71
              2c99 fcff  bra  $ff         12939  bra(255)                        #72 bra shiftTable+255
                                          12940  # continues in page 0x0600 at label('.lsrvl#76') fetching shifted byte from 0x0500
                                          12941
                                          12942  label('.lsrvl#79')
.lsrvl#79:    2c9a 11b2  ld   [$b2],x     12943  ld([0xB2],X)                    #79 byte 3 address
              2c9b 0500  ld   [x]         12944  ld([X])                         #80 bit 0 of byte 3
              2c9c 2001  anda $01         12945  anda(1)                         #81
              2c9d 807f  adda $7f         12946  adda(127)                       #82
              2c9e 2080  anda $80         12947  anda(128)                       #83
              2c9f 11b1  ld   [$b1],x     12948  ld([0xB1],X)                    #84 byte 2 address
              2ca0 4500  ora  [x]         12949  ora([X])                        #85
              2ca1 c600  st   [x]         12950  st([X])                         #86 transfer to bit 7 of byte 2
              2ca2 1405  ld   $05,y       12951  ld(hi('shiftTable'),Y)          #87 (ac >> 1) table
              2ca3 00dc  ld   $dc         12952  ld('.lsrvl#98')                 #88 continuation address
              2ca4 c21d  st   [$1d]       12953  st([vTmp])                      #89
              2ca5 11b2  ld   [$b2],x     12954  ld([0xB2],X)                    #90 byte 3 address
              2ca6 0500  ld   [x]         12955  ld([X])                         #91
              2ca7 20fe  anda $fe         12956  anda(0b11111110)                #92
              2ca8 e200  jmp  y,ac        12957  jmp(Y,AC)                       #93
              2ca9 fcff  bra  $ff         12958  bra(255)                        #94 bra shiftTable+255
                                          12959  # continues in page 0x0600 at label('.lsrvl#98') fetching shifted byte from 0x0500
                                          12960
                                          12961  label('.lsrvl#18')
.lsrvl#18:    2caa 0022  ld   $22         12962  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cab c202  st   [$02]       12963  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2cac 9401  adda $01,y       12964  adda(1,Y)                       #20 retry instruction
              2cad e000  jmp  y,$00       12965  jmp(Y,'NEXTY')                  #21
              2cae 00f4  ld   $f4         12966  ld(-24/2)                       #22
                                          12967
                                          12968
                                          12969  # LSLVL implementation
                                          12970  label('lslvl#13')
lslvl#13:     2caf 1400  ld   $00,y       12971  ld(0,Y)                         #13
              2cb0 00f3  ld   $f3         12972  ld(min(0,maxTicks-56/2))        #14
              2cb1 8115  adda [$15]       12973  adda([vTicks])                  #15
              2cb2 e8dd  blt  .lslvl#18   12974  blt('.lslvl#18')                #16 not enough time left, so retry
              2cb3 0500  ld   [x]         12975  ld([X])                         #17
              2cb4 f4b7  bge  $2cb7       12976  bge(pc()+3)                     #18
              2cb5 fcb8  bra  $2cb8       12977  bra(pc()+3)                     #19
              2cb6 0001  ld   $01         12978  ld(1)                           #20
              2cb7 0000  ld   $00         12979  ld(0)                           #20
              2cb8 c2b0  st   [$b0]       12980  st([0xB0])                      #21 (var.0 & 0x80) >>7
              2cb9 0500  ld   [x]         12981  ld([X])                         #22
              2cba 8500  adda [x]         12982  adda([X])                       #23
              2cbb de00  st   [y,x++]     12983  st([Y,Xpp])                     #24 var.0 <<1
              2cbc 0500  ld   [x]         12984  ld([X])                         #25
              2cbd f4c0  bge  $2cc0       12985  bge(pc()+3)                     #26
              2cbe fcc1  bra  $2cc1       12986  bra(pc()+3)                     #27
              2cbf 0001  ld   $01         12987  ld(1)                           #28
              2cc0 0000  ld   $00         12988  ld(0)                           #28
              2cc1 c2b1  st   [$b1]       12989  st([0xB1])                      #29 (var.1 & 0x80) >>7
              2cc2 0500  ld   [x]         12990  ld([X])                         #30
              2cc3 8500  adda [x]         12991  adda([X])                       #31
              2cc4 41b0  ora  [$b0]       12992  ora([0xB0])                     #32
              2cc5 de00  st   [y,x++]     12993  st([Y,Xpp])                     #33 (var.1 <<1) | [0xB0]
              2cc6 0500  ld   [x]         12994  ld([X])                         #34
              2cc7 f4ca  bge  $2cca       12995  bge(pc()+3)                     #35
              2cc8 fccb  bra  $2ccb       12996  bra(pc()+3)                     #36
              2cc9 0001  ld   $01         12997  ld(1)                           #37
              2cca 0000  ld   $00         12998  ld(0)                           #37
              2ccb c2b0  st   [$b0]       12999  st([0xB0])                      #38 (var.2 & 0x80) >>7
              2ccc 0500  ld   [x]         13000  ld([X])                         #39
              2ccd 8500  adda [x]         13001  adda([X])                       #40
              2cce 41b1  ora  [$b1]       13002  ora([0xB1])                     #41
              2ccf de00  st   [y,x++]     13003  st([Y,Xpp])                     #42 (var.2 <<1) | [0xB1]
              2cd0 0500  ld   [x]         13004  ld([X])                         #43
              2cd1 f4d4  bge  $2cd4       13005  bge(pc()+3)                     #44
              2cd2 fcd5  bra  $2cd5       13006  bra(pc()+3)                     #45
              2cd3 0001  ld   $01         13007  ld(1)                           #46
              2cd4 0000  ld   $00         13008  ld(0)                           #46
              2cd5 c2b1  st   [$b1]       13009  st([0xB1])                      #47 (var.3 & 0x80) >>7
              2cd6 0500  ld   [x]         13010  ld([X])                         #48
              2cd7 8500  adda [x]         13011  adda([X])                       #49
              2cd8 41b0  ora  [$b0]       13012  ora([0xB0])                     #50
              2cd9 de00  st   [y,x++]     13013  st([Y,Xpp])                     #51 (var.3 <<1) | [0xB0]
              2cda 1403  ld   $03,y       13014  ld(hi('NEXTY'),Y)               #52
              2cdb e000  jmp  y,$00       13015  jmp(Y,'NEXTY')                  #53
              2cdc 00e4  ld   $e4         13016  ld(-56/2)                       #54
                                          13017
                                          13018  label('.lslvl#18')
.lslvl#18:    2cdd 0022  ld   $22         13019  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cde c202  st   [$02]       13020  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2cdf 9401  adda $01,y       13021  adda(1,Y)                       #20 retry instruction
              2ce0 e000  jmp  y,$00       13022  jmp(Y,'NEXTY')                  #21
              2ce1 00f4  ld   $f4         13023  ld(-24/2)                       #22
                                          13024
                                          13025
              2ce2 0200  nop              13026  fillers(until=0xff)
              2ce3 0200  nop
              2ce4 0200  nop
              * 29 times
              2cff 0200  nop              13027  align(0x100, size=0x100)
                                          13028
                                          13029  #-----------------------------------------------------------------------
                                          13030  #       More vCPU instruction implementations, (0x2D00)
                                          13031  #-----------------------------------------------------------------------
                                          13032  #
                                          13033  # JEQL implementation
                                          13034  label('jeql#13')
jeql#13:      2d00 1519  ld   [$19],y     13035  ld([vAC+1],Y)                   #13
              2d01 00fb  ld   $fb         13036  ld(min(0,maxTicks-40/2))        #14
              2d02 8115  adda [$15]       13037  adda([vTicks])                  #15
              2d03 e81d  blt  .jeql#18    13038  blt('.jeql#18')                 #16 not enough time left, so retry
              2d04 1118  ld   [$18],x     13039  ld([vAC],X)                     #17
              2d05 0d00  ld   [y,x]       13040  ld([Y,X])                       #18
              2d06 de00  st   [y,x++]     13041  st([Y,Xpp])                     #19
              2d07 c2b0  st   [$b0]       13042  st([0xB0])                      #20 [vAC].0
              2d08 0d00  ld   [y,x]       13043  ld([Y,X])                       #21
              2d09 de00  st   [y,x++]     13044  st([Y,Xpp])                     #22
              2d0a c2b1  st   [$b1]       13045  st([0xB1])                      #23 [vAC].1
              2d0b 0d00  ld   [y,x]       13046  ld([Y,X])                       #24
              2d0c de00  st   [y,x++]     13047  st([Y,Xpp])                     #25
              2d0d c2b2  st   [$b2]       13048  st([0xB2])                      #26 [vAC].2
              2d0e 0d00  ld   [y,x]       13049  ld([Y,X])                       #27 [vAC].3
              2d0f 41b2  ora  [$b2]       13050  ora([0xB2])                     #28
              2d10 41b1  ora  [$b1]       13051  ora([0xB1])                     #29
              2d11 41b0  ora  [$b0]       13052  ora([0xB0])                     #30
              2d12 ec1a  bne  .jeql#33    13053  bne('.jeql#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d13 012b  ld   [$2b]       13054  ld([sysArgs+7])                 #32 address of branch destination
              2d14 c216  st   [$16]       13055  st([vPC])                       #33
              2d15 012a  ld   [$2a]       13056  ld([sysArgs+6])                 #34
              2d16 c217  st   [$17]       13057  st([vPC+1])                     #35
              2d17 1403  ld   $03,y       13058  ld(hi('NEXTY'),Y)               #36
              2d18 e000  jmp  y,$00       13059  jmp(Y,'NEXTY')                  #37
              2d19 00ec  ld   $ec         13060  ld(-40/2)                       #38
                                          13061
                                          13062  label('.jeql#33')
.jeql#33:     2d1a 1403  ld   $03,y       13063  ld(hi('REENTER'),Y)             #33
              2d1b e0cb  jmp  y,$cb       13064  jmp(Y,'REENTER')                #34
              2d1c 00ed  ld   $ed         13065  ld(-38/2)                       #35
                                          13066
                                          13067  label('.jeql#18')
.jeql#18:     2d1d 0021  ld   $21         13068  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d1e c202  st   [$02]       13069  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d1f 9401  adda $01,y       13070  adda(1,Y)                       #20 retry instruction
              2d20 e000  jmp  y,$00       13071  jmp(Y,'NEXTY')                  #21
              2d21 00f4  ld   $f4         13072  ld(-24/2)                       #22
                                          13073
                                          13074
                                          13075  # JNEL implementation
                                          13076  label('jnel#13')
jnel#13:      2d22 1519  ld   [$19],y     13077  ld([vAC+1],Y)                   #13
              2d23 00fb  ld   $fb         13078  ld(min(0,maxTicks-40/2))        #14
              2d24 8115  adda [$15]       13079  adda([vTicks])                  #15
              2d25 e83f  blt  .jnel#18    13080  blt('.jnel#18')                 #16 not enough time left, so retry
              2d26 1118  ld   [$18],x     13081  ld([vAC],X)                     #17
              2d27 0d00  ld   [y,x]       13082  ld([Y,X])                       #18
              2d28 de00  st   [y,x++]     13083  st([Y,Xpp])                     #19
              2d29 c2b0  st   [$b0]       13084  st([0xB0])                      #20 [vAC].0
              2d2a 0d00  ld   [y,x]       13085  ld([Y,X])                       #21
              2d2b de00  st   [y,x++]     13086  st([Y,Xpp])                     #22
              2d2c c2b1  st   [$b1]       13087  st([0xB1])                      #23 [vAC].1
              2d2d 0d00  ld   [y,x]       13088  ld([Y,X])                       #24
              2d2e de00  st   [y,x++]     13089  st([Y,Xpp])                     #25
              2d2f c2b2  st   [$b2]       13090  st([0xB2])                      #26 [vAC].2
              2d30 0d00  ld   [y,x]       13091  ld([Y,X])                       #27 [vAC].3
              2d31 41b2  ora  [$b2]       13092  ora([0xB2])                     #28
              2d32 41b1  ora  [$b1]       13093  ora([0xB1])                     #29
              2d33 41b0  ora  [$b0]       13094  ora([0xB0])                     #30
              2d34 f03c  beq  .jnel#33    13095  beq('.jnel#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d35 012b  ld   [$2b]       13096  ld([sysArgs+7])                 #32 address of branch destination
              2d36 c216  st   [$16]       13097  st([vPC])                       #33
              2d37 012a  ld   [$2a]       13098  ld([sysArgs+6])                 #34
              2d38 c217  st   [$17]       13099  st([vPC+1])                     #35
              2d39 1403  ld   $03,y       13100  ld(hi('NEXTY'),Y)               #36
              2d3a e000  jmp  y,$00       13101  jmp(Y,'NEXTY')                  #37
              2d3b 00ec  ld   $ec         13102  ld(-40/2)                       #38
                                          13103
                                          13104  label('.jnel#33')
.jnel#33:     2d3c 1403  ld   $03,y       13105  ld(hi('REENTER'),Y)             #33
              2d3d e0cb  jmp  y,$cb       13106  jmp(Y,'REENTER')                #34
              2d3e 00ed  ld   $ed         13107  ld(-38/2)                       #35
                                          13108
                                          13109  label('.jnel#18')
.jnel#18:     2d3f 0021  ld   $21         13110  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d40 c202  st   [$02]       13111  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d41 9401  adda $01,y       13112  adda(1,Y)                       #20 retry instruction
              2d42 e000  jmp  y,$00       13113  jmp(Y,'NEXTY')                  #21
              2d43 00f4  ld   $f4         13114  ld(-24/2)                       #22
                                          13115
                                          13116
                                          13117  # JLTL implementation
                                          13118  label('jltl#13')
jltl#13:      2d44 1519  ld   [$19],y     13119  ld([vAC+1],Y)                   #13
              2d45 0118  ld   [$18]       13120  ld([vAC])                       #14
              2d46 9003  adda $03,x       13121  adda(3,X)                       #15
              2d47 0d00  ld   [y,x]       13122  ld([Y,X])                       #16
              2d48 e84d  blt  .jltl#19    13123  blt('.jltl#19')                 #17 if [vAC.3] < 0
              2d49 012b  ld   [$2b]       13124  ld([sysArgs+7])                 #18 address of branch destination
              2d4a 1403  ld   $03,y       13125  ld(hi('REENTER'),Y)             #19
              2d4b e0cb  jmp  y,$cb       13126  jmp(Y,'REENTER')                #20
              2d4c 00f4  ld   $f4         13127  ld(-24/2)                       #21
                                          13128
                                          13129  label('.jltl#19')
.jltl#19:     2d4d c216  st   [$16]       13130  st([vPC])                       #19
              2d4e 012a  ld   [$2a]       13131  ld([sysArgs+6])                 #20
              2d4f c217  st   [$17]       13132  st([vPC+1])                     #21
              2d50 1403  ld   $03,y       13133  ld(hi('NEXTY'),Y)               #22
              2d51 e000  jmp  y,$00       13134  jmp(Y,'NEXTY')                  #23
              2d52 00f3  ld   $f3         13135  ld(-26/2)                       #24
                                          13136
                                          13137
                                          13138  # JGTL implementation
                                          13139  label('jgtl#13')
jgtl#13:      2d53 1519  ld   [$19],y     13140  ld([vAC+1],Y)                   #13
              2d54 00fa  ld   $fa         13141  ld(min(0,maxTicks-42/2))        #14
              2d55 8115  adda [$15]       13142  adda([vTicks])                  #15
              2d56 e875  blt  .jgtl#18    13143  blt('.jgtl#18')                 #16 not enough time left, so retry
              2d57 1118  ld   [$18],x     13144  ld([vAC],X)                     #17
              2d58 0d00  ld   [y,x]       13145  ld([Y,X])                       #18
              2d59 de00  st   [y,x++]     13146  st([Y,Xpp])                     #19
              2d5a c2b0  st   [$b0]       13147  st([0xB0])                      #20 [vAC].0
              2d5b 0d00  ld   [y,x]       13148  ld([Y,X])                       #21
              2d5c de00  st   [y,x++]     13149  st([Y,Xpp])                     #22
              2d5d c2b1  st   [$b1]       13150  st([0xB1])                      #23 [vAC].1
              2d5e 0d00  ld   [y,x]       13151  ld([Y,X])                       #24
              2d5f de00  st   [y,x++]     13152  st([Y,Xpp])                     #25
              2d60 c2b2  st   [$b2]       13153  st([0xB2])                      #26 [vAC].2
              2d61 0d00  ld   [y,x]       13154  ld([Y,X])                       #27
              2d62 c2b3  st   [$b3]       13155  st([0xB3])                      #28 [vAC].3
              2d63 e86c  blt  .jgtl#31    13156  blt('.jgtl#31')                 #29 if [vAC.3] < 0
              2d64 41b2  ora  [$b2]       13157  ora([0xB2])                     #30
              2d65 41b1  ora  [$b1]       13158  ora([0xB1])                     #31
              2d66 41b0  ora  [$b0]       13159  ora([0xB0])                     #32
              2d67 ec6f  bne  .jgtl#35    13160  bne('.jgtl#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d68 012b  ld   [$2b]       13161  ld([sysArgs+7])                 #34 address of branch destination
              2d69 1403  ld   $03,y       13162  ld(hi('REENTER'),Y)             #35
              2d6a e0cb  jmp  y,$cb       13163  jmp(Y,'REENTER')                #36
              2d6b 00ec  ld   $ec         13164  ld(-40/2)                       #37
                                          13165
                                          13166  label('.jgtl#31')
.jgtl#31:     2d6c 1403  ld   $03,y       13167  ld(hi('REENTER'),Y)             #31
              2d6d e0cb  jmp  y,$cb       13168  jmp(Y,'REENTER')                #32
              2d6e 00ee  ld   $ee         13169  ld(-36/2)                       #33
                                          13170
                                          13171  label('.jgtl#35')
.jgtl#35:     2d6f c216  st   [$16]       13172  st([vPC])                       #35
              2d70 012a  ld   [$2a]       13173  ld([sysArgs+6])                 #36
              2d71 c217  st   [$17]       13174  st([vPC+1])                     #37
              2d72 1403  ld   $03,y       13175  ld(hi('NEXTY'),Y)               #38
              2d73 e000  jmp  y,$00       13176  jmp(Y,'NEXTY')                  #39
              2d74 00eb  ld   $eb         13177  ld(-42/2)                       #40
                                          13178
                                          13179  label('.jgtl#18')
.jgtl#18:     2d75 0021  ld   $21         13180  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d76 c202  st   [$02]       13181  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d77 9401  adda $01,y       13182  adda(1,Y)                       #20 retry instruction
              2d78 e000  jmp  y,$00       13183  jmp(Y,'NEXTY')                  #21
              2d79 00f4  ld   $f4         13184  ld(-24/2)                       #22
                                          13185
                                          13186
                                          13187  # JLEL implementation
                                          13188  label('jlel#13')
jlel#13:      2d7a 1519  ld   [$19],y     13189  ld([vAC+1],Y)                   #13
              2d7b 00fa  ld   $fa         13190  ld(min(0,maxTicks-42/2))        #14
              2d7c 8115  adda [$15]       13191  adda([vTicks])                  #15
              2d7d e8a0  blt  .jlel#18    13192  blt('.jlel#18')                 #16 not enough time left, so retry
              2d7e 1118  ld   [$18],x     13193  ld([vAC],X)                     #17
              2d7f 0d00  ld   [y,x]       13194  ld([Y,X])                       #18
              2d80 de00  st   [y,x++]     13195  st([Y,Xpp])                     #19
              2d81 c2b0  st   [$b0]       13196  st([0xB0])                      #20 [vAC].0
              2d82 0d00  ld   [y,x]       13197  ld([Y,X])                       #21
              2d83 de00  st   [y,x++]     13198  st([Y,Xpp])                     #22
              2d84 c2b1  st   [$b1]       13199  st([0xB1])                      #23 [vAC].1
              2d85 0d00  ld   [y,x]       13200  ld([Y,X])                       #24
              2d86 de00  st   [y,x++]     13201  st([Y,Xpp])                     #25
              2d87 c2b2  st   [$b2]       13202  st([0xB2])                      #26 [vAC].2
              2d88 0d00  ld   [y,x]       13203  ld([Y,X])                       #27
              2d89 c2b3  st   [$b3]       13204  st([0xB3])                      #28 [vAC].3
              2d8a e893  blt  .jlel#31    13205  blt('.jlel#31')                 #29 if [vAC.3] < 0
              2d8b 41b2  ora  [$b2]       13206  ora([0xB2])                     #30
              2d8c 41b1  ora  [$b1]       13207  ora([0xB1])                     #31
              2d8d 41b0  ora  [$b0]       13208  ora([0xB0])                     #32
              2d8e f09a  beq  .jlel#35    13209  beq('.jlel#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d8f 012b  ld   [$2b]       13210  ld([sysArgs+7])                 #34 address of branch destination
              2d90 1403  ld   $03,y       13211  ld(hi('REENTER'),Y)             #35
              2d91 e0cb  jmp  y,$cb       13212  jmp(Y,'REENTER')                #36
              2d92 00ec  ld   $ec         13213  ld(-40/2)                       #37
                                          13214
                                          13215  label('.jlel#31')
.jlel#31:     2d93 012b  ld   [$2b]       13216  ld([sysArgs+7])                 #31 address of branch destination
              2d94 c216  st   [$16]       13217  st([vPC])                       #32
              2d95 012a  ld   [$2a]       13218  ld([sysArgs+6])                 #33
              2d96 c217  st   [$17]       13219  st([vPC+1])                     #34
              2d97 1403  ld   $03,y       13220  ld(hi('REENTER'),Y)             #35
              2d98 e0cb  jmp  y,$cb       13221  jmp(Y,'REENTER')                #36
              2d99 00ec  ld   $ec         13222  ld(-40/2)                       #37
                                          13223
                                          13224  label('.jlel#35')
.jlel#35:     2d9a c216  st   [$16]       13225  st([vPC])                       #35
              2d9b 012a  ld   [$2a]       13226  ld([sysArgs+6])                 #36
              2d9c c217  st   [$17]       13227  st([vPC+1])                     #37
              2d9d 1403  ld   $03,y       13228  ld(hi('NEXTY'),Y)               #38
              2d9e e000  jmp  y,$00       13229  jmp(Y,'NEXTY')                  #39
              2d9f 00eb  ld   $eb         13230  ld(-42/2)                       #40
                                          13231
                                          13232  label('.jlel#18')
.jlel#18:     2da0 0021  ld   $21         13233  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2da1 c202  st   [$02]       13234  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2da2 9401  adda $01,y       13235  adda(1,Y)                       #20 retry instruction
              2da3 e000  jmp  y,$00       13236  jmp(Y,'NEXTY')                  #21
              2da4 00f4  ld   $f4         13237  ld(-24/2)                       #22
                                          13238
                                          13239
                                          13240  # JGEL implementation
                                          13241  label('jgel#13')
jgel#13:      2da5 1519  ld   [$19],y     13242  ld([vAC+1],Y)                   #13
              2da6 0118  ld   [$18]       13243  ld([vAC])                       #14
              2da7 9003  adda $03,x       13244  adda(3,X)                       #15
              2da8 0d00  ld   [y,x]       13245  ld([Y,X])                       #16
              2da9 e8b1  blt  .jgel#19    13246  blt('.jgel#19')                 #17 if [vAC.3] < 0
              2daa 012b  ld   [$2b]       13247  ld([sysArgs+7])                 #18 address of branch destination
              2dab c216  st   [$16]       13248  st([vPC])                       #19
              2dac 012a  ld   [$2a]       13249  ld([sysArgs+6])                 #20
              2dad c217  st   [$17]       13250  st([vPC+1])                     #21
              2dae 1403  ld   $03,y       13251  ld(hi('NEXTY'),Y)               #22
              2daf e000  jmp  y,$00       13252  jmp(Y,'NEXTY')                  #23
              2db0 00f3  ld   $f3         13253  ld(-26/2)                       #24
                                          13254
                                          13255  label('.jgel#19')
.jgel#19:     2db1 1403  ld   $03,y       13256  ld(hi('REENTER'),Y)             #19
              2db2 e0cb  jmp  y,$cb       13257  jmp(Y,'REENTER')                #20
              2db3 00f4  ld   $f4         13258  ld(-24/2)                       #21
                                          13259
                                          13260
                                          13261  # ADDVB implementation
                                          13262  label('addvb#13')
addvb#13:     2db4 1517  ld   [$17],y     13263  ld([vPC+1],Y)                   #13
              2db5 c21d  st   [$1d]       13264  st([vTmp])                      #14 dst addr
              2db6 de00  st   [y,x++]     13265  st([Y,Xpp])                     #15
              2db7 00fd  ld   $fd         13266  ld(min(0,maxTicks-36/2))        #16
              2db8 8115  adda [$15]       13267  adda([vTicks])                  #17
              2db9 e8ca  blt  .addvb#20   13268  blt('.addvb#20')                #18 not enough time left, so retry
              2dba 0d00  ld   [y,x]       13269  ld([Y,X])                       #19
              2dbb de00  st   [y,x++]     13270  st([Y,Xpp])                     #20
              2dbc c22b  st   [$2b]       13271  st([sysArgs+7])                 #21 src1 addr
              2dbd 0d00  ld   [y,x]       13272  ld([Y,X])                       #22 src0 addr
              2dbe 1200  ld   ac,x        13273  ld(AC,X)                        #23
              2dbf 0500  ld   [x]         13274  ld([X])                         #24 src0.lo
              2dc0 112b  ld   [$2b],x     13275  ld([sysArgs+7],X)               #25
              2dc1 8500  adda [x]         13276  adda([X])                       #26 src0.lo + src1.lo
              2dc2 111d  ld   [$1d],x     13277  ld([vTmp],X)                    #27
              2dc3 c600  st   [x]         13278  st([X])                         #28 dst.lo = src0.lo + src1.lo
              2dc4 0116  ld   [$16]       13279  ld([vPC])                       #29
              2dc5 8002  adda $02         13280  adda(2)                         #30
              2dc6 c216  st   [$16]       13281  st([vPC])                       #31 advance vPC by 2
              2dc7 1403  ld   $03,y       13282  ld(hi('NEXTY'),Y)               #32
              2dc8 e000  jmp  y,$00       13283  jmp(Y,'NEXTY')                  #33
              2dc9 00ee  ld   $ee         13284  ld(-36/2)                       #34
                                          13285
                                          13286  label('.addvb#20')
.addvb#20:    2dca 0116  ld   [$16]       13287  ld([vPC])                       #20 retry instruction
              2dcb a002  suba $02         13288  suba(2)                         #21
              2dcc c216  st   [$16]       13289  st([vPC])                       #22
              2dcd 1403  ld   $03,y       13290  ld(hi('REENTER'),Y)             #23
              2dce e0cb  jmp  y,$cb       13291  jmp(Y,'REENTER')                #24
              2dcf 00f2  ld   $f2         13292  ld(-28/2)                       #25
                                          13293
                                          13294
                                          13295  # SUBVB implementation
                                          13296  label('subvb#13')
subvb#13:     2dd0 1517  ld   [$17],y     13297  ld([vPC+1],Y)                   #13
              2dd1 c21d  st   [$1d]       13298  st([vTmp])                      #14 dst addr
              2dd2 de00  st   [y,x++]     13299  st([Y,Xpp])                     #15
              2dd3 00fd  ld   $fd         13300  ld(min(0,maxTicks-36/2))        #16
              2dd4 8115  adda [$15]       13301  adda([vTicks])                  #17
              2dd5 e8ca  blt  .addvb#20   13302  blt('.addvb#20')                #18 not enough time left, so retry, (reuse '.addvb#20')
              2dd6 0d00  ld   [y,x]       13303  ld([Y,X])                       #19
              2dd7 de00  st   [y,x++]     13304  st([Y,Xpp])                     #20
              2dd8 c22b  st   [$2b]       13305  st([sysArgs+7])                 #21 src1 addr
              2dd9 0d00  ld   [y,x]       13306  ld([Y,X])                       #22 src0 addr
              2dda 1200  ld   ac,x        13307  ld(AC,X)                        #23
              2ddb 0500  ld   [x]         13308  ld([X])                         #24 src0.lo
              2ddc 112b  ld   [$2b],x     13309  ld([sysArgs+7],X)               #25
              2ddd a500  suba [x]         13310  suba([X])                       #26 src0.lo - src1.lo
              2dde 111d  ld   [$1d],x     13311  ld([vTmp],X)                    #27
              2ddf c600  st   [x]         13312  st([X])                         #28 dst.lo = src0.lo - src1.lo
              2de0 0116  ld   [$16]       13313  ld([vPC])                       #29
              2de1 8002  adda $02         13314  adda(2)                         #30
              2de2 c216  st   [$16]       13315  st([vPC])                       #31 advance vPC by 2
              2de3 1403  ld   $03,y       13316  ld(hi('NEXTY'),Y)               #32
              2de4 e000  jmp  y,$00       13317  jmp(Y,'NEXTY')                  #33
              2de5 00ee  ld   $ee         13318  ld(-36/2)                       #34
                                          13319
                                          13320
              2de6 0200  nop              13321  fillers(until=0xff)
              2de7 0200  nop
              2de8 0200  nop
              * 25 times
              2dff 0200  nop              13322  align(0x100, size=0x100)
                                          13323
                                          13324  #-----------------------------------------------------------------------
                                          13325  #       More vCPU instruction implementations, (0x2E00)
                                          13326  #-----------------------------------------------------------------------
                                          13327  #
                                          13328  # ANDBI implementation
                                          13329  label('andbi#13')
andbi#13:     2e00 0500  ld   [x]         13330  ld([X])                         #13
              2e01 212b  anda [$2b]       13331  anda([sysArgs+7])               #14 immediate value
              2e02 c600  st   [x]         13332  st([X])                         #15
              2e03 1403  ld   $03,y       13333  ld(hi('NEXTY'),Y)               #16
              2e04 e000  jmp  y,$00       13334  jmp(Y,'NEXTY')                  #17
              2e05 00f6  ld   $f6         13335  ld(-20/2)                       #18
                                          13336
                                          13337  # ORBI implementation
                                          13338  label('orbi#13')
orbi#13:      2e06 0500  ld   [x]         13339  ld([X])                         #13
              2e07 412b  ora  [$2b]       13340  ora([sysArgs+7])                #14 immediate value
              2e08 c600  st   [x]         13341  st([X])                         #15
              2e09 1403  ld   $03,y       13342  ld(hi('NEXTY'),Y)               #16
              2e0a e000  jmp  y,$00       13343  jmp(Y,'NEXTY')                  #17
              2e0b 00f6  ld   $f6         13344  ld(-20/2)                       #18
                                          13345
                                          13346  # XORBI implementation
                                          13347  label('xorbi#13')
xorbi#13:     2e0c 0500  ld   [x]         13348  ld([X])                         #13
              2e0d 612b  xora [$2b]       13349  xora([sysArgs+7])               #14 immediate value
              2e0e c600  st   [x]         13350  st([X])                         #15
              2e0f 1403  ld   $03,y       13351  ld(hi('NEXTY'),Y)               #16
              2e10 e000  jmp  y,$00       13352  jmp(Y,'NEXTY')                  #17
              2e11 00f6  ld   $f6         13353  ld(-20/2)                       #18
                                          13354
                                          13355  # ANDBK implementation
                                          13356  label('andbk#13')
andbk#13:     2e12 0500  ld   [x]         13357  ld([X])                         #13
              2e13 212b  anda [$2b]       13358  anda([sysArgs+7])               #14 immediate value
              2e14 c218  st   [$18]       13359  st([vAC])                       #15
              2e15 0000  ld   $00         13360  ld(0)                           #16
              2e16 c219  st   [$19]       13361  st([vAC+1])                     #17 clear high result
              2e17 1403  ld   $03,y       13362  ld(hi('NEXTY'),Y)               #18
              2e18 e000  jmp  y,$00       13363  jmp(Y,'NEXTY')                  #19
              2e19 00f5  ld   $f5         13364  ld(-22/2)                       #20
                                          13365
                                          13366  # ORBK implementation
                                          13367  label('orbk#13')
orbk#13:      2e1a 0500  ld   [x]         13368  ld([X])                         #13
              2e1b 412b  ora  [$2b]       13369  ora([sysArgs+7])                #14 immediate value
              2e1c c218  st   [$18]       13370  st([vAC])                       #15
              2e1d 0000  ld   $00         13371  ld(0)                           #16
              2e1e c219  st   [$19]       13372  st([vAC+1])                     #17 clear high result
              2e1f 1403  ld   $03,y       13373  ld(hi('NEXTY'),Y)               #18
              2e20 e000  jmp  y,$00       13374  jmp(Y,'NEXTY')                  #19
              2e21 00f5  ld   $f5         13375  ld(-22/2)                       #20
                                          13376
                                          13377  # XORBK implementation
                                          13378  label('xorbk#13')
xorbk#13:     2e22 0500  ld   [x]         13379  ld([X])                         #13
              2e23 612b  xora [$2b]       13380  xora([sysArgs+7])               #14 immediate value
              2e24 c218  st   [$18]       13381  st([vAC])                       #15
              2e25 0000  ld   $00         13382  ld(0)                           #16
              2e26 c219  st   [$19]       13383  st([vAC+1])                     #17 clear high result
              2e27 1403  ld   $03,y       13384  ld(hi('NEXTY'),Y)               #18
              2e28 e000  jmp  y,$00       13385  jmp(Y,'NEXTY')                  #19
              2e29 00f5  ld   $f5         13386  ld(-22/2)                       #20
                                          13387
                                          13388  # VADDBW implementation
                                          13389  label('vaddbw#13')
vaddbw#13:    2e2a 1400  ld   $00,y       13390  ld(0,Y)                         #13
              2e2b 0500  ld   [x]         13391  ld([X])                         #14
              2e2c de00  st   [y,x++]     13392  st([Y,Xpp])                     #15
              2e2d c2b0  st   [$b0]       13393  st([0xB0])                      #16 src.0
              2e2e 0500  ld   [x]         13394  ld([X])                         #17
              2e2f c2b1  st   [$b1]       13395  st([0xB1])                      #18 src.1
              2e30 112b  ld   [$2b],x     13396  ld([sysArgs+7],X)               #19
              2e31 0500  ld   [x]         13397  ld([X])                         #20
              2e32 81b0  adda [$b0]       13398  adda([0xB0])                    #21
              2e33 de00  st   [y,x++]     13399  st([Y,Xpp])                     #22 dst.0 += src.0
              2e34 0500  ld   [x]         13400  ld([X])                         #23
              2e35 81b1  adda [$b1]       13401  adda([0xB1])                    #24
              2e36 c600  st   [x]         13402  st([X])                         #25 dst.1 += src.1
              2e37 1403  ld   $03,y       13403  ld(hi('NEXTY'),Y)               #26
              2e38 e000  jmp  y,$00       13404  jmp(Y,'NEXTY')                  #27
              2e39 00f1  ld   $f1         13405  ld(-30/2)                       #28
                                          13406
                                          13407  # VSUBBW implementation
                                          13408  label('vsubbw#13')
vsubbw#13:    2e3a 1400  ld   $00,y       13409  ld(0,Y)                         #13
              2e3b 0500  ld   [x]         13410  ld([X])                         #14
              2e3c de00  st   [y,x++]     13411  st([Y,Xpp])                     #15
              2e3d c2b0  st   [$b0]       13412  st([0xB0])                      #16 src.0
              2e3e 0500  ld   [x]         13413  ld([X])                         #17
              2e3f c2b1  st   [$b1]       13414  st([0xB1])                      #18 src.1
              2e40 112b  ld   [$2b],x     13415  ld([sysArgs+7],X)               #19
              2e41 0500  ld   [x]         13416  ld([X])                         #20
              2e42 a1b0  suba [$b0]       13417  suba([0xB0])                    #21
              2e43 de00  st   [y,x++]     13418  st([Y,Xpp])                     #22 dst.0 -= src.0
              2e44 0500  ld   [x]         13419  ld([X])                         #23
              2e45 a1b1  suba [$b1]       13420  suba([0xB1])                    #24
              2e46 c600  st   [x]         13421  st([X])                         #25 dst.1 -= src.1
              2e47 1403  ld   $03,y       13422  ld(hi('NEXTY'),Y)               #26
              2e48 e000  jmp  y,$00       13423  jmp(Y,'NEXTY')                  #27
              2e49 00f1  ld   $f1         13424  ld(-30/2)                       #28
                                          13425
                                          13426  # PACKAW implementation
                                          13427  label('packaw#13')
packaw#13:    2e4a c21d  st   [$1d]       13428  st([vTmp])                      #13 src1 addr
              2e4b 1517  ld   [$17],y     13429  ld([vPC+1],Y)                   #14
              2e4c de00  st   [y,x++]     13430  st([Y,Xpp])                     #15
              2e4d 0d00  ld   [y,x]       13431  ld([Y,X])                       #16 src0 addr
              2e4e 1200  ld   ac,x        13432  ld(AC,X)                        #17
              2e4f 0500  ld   [x]         13433  ld([X])                         #18
              2e50 c218  st   [$18]       13434  st([vAC])                       #19 vAC.lo = src0.lo
              2e51 111d  ld   [$1d],x     13435  ld([vTmp],X)                    #20
              2e52 0500  ld   [x]         13436  ld([X])                         #21
              2e53 c219  st   [$19]       13437  st([vAC+1])                     #22 vAC.hi = src1.lo
              2e54 0116  ld   [$16]       13438  ld([vPC])                       #23
              2e55 8001  adda $01         13439  adda(1)                         #24
              2e56 c216  st   [$16]       13440  st([vPC])                       #25 advance vPC by 1
              2e57 1403  ld   $03,y       13441  ld(hi('NEXTY'),Y)               #26
              2e58 e000  jmp  y,$00       13442  jmp(Y,'NEXTY')                  #27
              2e59 00f1  ld   $f1         13443  ld(-30/2)                       #28
                                          13444
                                          13445
                                          13446  # PACKVW implementation
                                          13447  label('packvw#13')
packvw#13:    2e5a 1517  ld   [$17],y     13448  ld([vPC+1],Y)                   #13
              2e5b c21d  st   [$1d]       13449  st([vTmp])                      #14 var addr
              2e5c de00  st   [y,x++]     13450  st([Y,Xpp])                     #15
              2e5d 00fa  ld   $fa         13451  ld(min(0,maxTicks-42/2))        #16
              2e5e 8115  adda [$15]       13452  adda([vTicks])                  #17
              2e5f e876  blt  .packvw#20  13453  blt('.packvw#20')               #18 not enough time left, so retry
              2e60 0d00  ld   [y,x]       13454  ld([Y,X])                       #19 src1 addr
              2e61 de00  st   [y,x++]     13455  st([Y,Xpp])                     #20
              2e62 c2b1  st   [$b1]       13456  st([0xB1])                      #21 0xB1 = src1 addr
              2e63 0d00  ld   [y,x]       13457  ld([Y,X])                       #22 src0 addr
              2e64 1200  ld   ac,x        13458  ld(AC,X)                        #23
              2e65 0500  ld   [x]         13459  ld([X])                         #24
              2e66 c2b0  st   [$b0]       13460  st([0xB0])                      #25 src0.lo
              2e67 11b1  ld   [$b1],x     13461  ld([0xB1],X)                    #26
              2e68 0500  ld   [x]         13462  ld([X])                         #27
              2e69 c2b1  st   [$b1]       13463  st([0xB1])                      #28 src1.lo
              2e6a 1400  ld   $00,y       13464  ld(0,Y)                         #29
              2e6b 111d  ld   [$1d],x     13465  ld([vTmp],X)                    #30
              2e6c 01b0  ld   [$b0]       13466  ld([0xB0])                      #31
              2e6d de00  st   [y,x++]     13467  st([Y,Xpp])                     #32 var.lo = src0.lo
              2e6e 01b1  ld   [$b1]       13468  ld([0xB1])                      #33
              2e6f c600  st   [x]         13469  st([X])                         #34 var.hi = src1.lo
              2e70 0116  ld   [$16]       13470  ld([vPC])                       #35
              2e71 8002  adda $02         13471  adda(2)                         #36
              2e72 c216  st   [$16]       13472  st([vPC])                       #37 advance vPC by 2
              2e73 1403  ld   $03,y       13473  ld(hi('NEXTY'),Y)               #38
              2e74 e000  jmp  y,$00       13474  jmp(Y,'NEXTY')                  #39
              2e75 00eb  ld   $eb         13475  ld(-42/2)                       #40
                                          13476
                                          13477  label('.packvw#20')
.packvw#20:   2e76 0116  ld   [$16]       13478  ld([vPC])                       #20 retry instruction
              2e77 a002  suba $02         13479  suba(2)                         #21
              2e78 c216  st   [$16]       13480  st([vPC])                       #22
              2e79 1403  ld   $03,y       13481  ld(hi('REENTER'),Y)             #23
              2e7a e0cb  jmp  y,$cb       13482  jmp(Y,'REENTER')                #24
              2e7b 00f2  ld   $f2         13483  ld(-28/2)                       #25
                                          13484
                                          13485
                                          13486  # CNVXY implementation
                                          13487  label('cnvxy#13')
cnvxy#13:     2e7c 1517  ld   [$17],y     13488  ld([vPC+1],Y)                   #13
              2e7d c21d  st   [$1d]       13489  st([vTmp])                      #14 var addr
              2e7e de00  st   [y,x++]     13490  st([Y,Xpp])                     #15
              2e7f 00f9  ld   $f9         13491  ld(min(0,maxTicks-44/2))        #16
              2e80 8115  adda [$15]       13492  adda([vTicks])                  #17
              2e81 e899  blt  .cnvxy#20   13493  blt('.cnvxy#20')                #18 not enough time left, so retry
              2e82 0d00  ld   [y,x]       13494  ld([Y,X])                       #19 src1 addr
              2e83 de00  st   [y,x++]     13495  st([Y,Xpp])                     #20
              2e84 c2b1  st   [$b1]       13496  st([0xB1])                      #21 0xB1 = src1 addr
              2e85 0d00  ld   [y,x]       13497  ld([Y,X])                       #22 src0 addr
              2e86 1200  ld   ac,x        13498  ld(AC,X)                        #23
              2e87 0500  ld   [x]         13499  ld([X])                         #24
              2e88 c2b0  st   [$b0]       13500  st([0xB0])                      #25 src0.lo
              2e89 11b1  ld   [$b1],x     13501  ld([0xB1],X)                    #26
              2e8a 0500  ld   [x]         13502  ld([X])                         #27
              2e8b c2b1  st   [$b1]       13503  st([0xB1])                      #28 src1.lo
              2e8c 1400  ld   $00,y       13504  ld(0,Y)                         #29
              2e8d 111d  ld   [$1d],x     13505  ld([vTmp],X)                    #30
              2e8e 01b0  ld   [$b0]       13506  ld([0xB0])                      #31
              2e8f de00  st   [y,x++]     13507  st([Y,Xpp])                     #32 var.lo = src0.lo
              2e90 01b1  ld   [$b1]       13508  ld([0xB1])                      #33
              2e91 8008  adda $08         13509  adda(8)                         #34
              2e92 c600  st   [x]         13510  st([X])                         #35 var.hi = src1.lo + 8
              2e93 0116  ld   [$16]       13511  ld([vPC])                       #36
              2e94 8002  adda $02         13512  adda(2)                         #37
              2e95 c216  st   [$16]       13513  st([vPC])                       #38 advance vPC by 2
              2e96 1403  ld   $03,y       13514  ld(hi('REENTER'),Y)             #39
              2e97 e0cb  jmp  y,$cb       13515  jmp(Y,'REENTER')                #40
              2e98 00ea  ld   $ea         13516  ld(-44/2)                       #41
                                          13517
                                          13518  label('.cnvxy#20')
.cnvxy#20:    2e99 0116  ld   [$16]       13519  ld([vPC])                       #20 retry instruction
              2e9a a002  suba $02         13520  suba(2)                         #21
              2e9b c216  st   [$16]       13521  st([vPC])                       #22
              2e9c 1403  ld   $03,y       13522  ld(hi('REENTER'),Y)             #23
              2e9d e0cb  jmp  y,$cb       13523  jmp(Y,'REENTER')                #24
              2e9e 00f2  ld   $f2         13524  ld(-28/2)                       #25
                                          13525
                                          13526
                                          13527  # LDWM implementation
                                          13528  label('ldwm#13')
ldwm#13:      2e9f c21d  st   [$1d]       13529  st([vTmp])                      #13 addr.lo
              2ea0 de00  st   [y,x++]     13530  st([Y,Xpp])                     #14
              2ea1 0d00  ld   [y,x]       13531  ld([Y,X])                       #15
              2ea2 1600  ld   ac,y        13532  ld(AC,Y)                        #16 addr.hi
              2ea3 111d  ld   [$1d],x     13533  ld([vTmp],X)                    #17
              2ea4 0d00  ld   [y,x]       13534  ld([Y,X])                       #18
              2ea5 c218  st   [$18]       13535  st([vAC])                       #19 vAC.lo = peek(addr + 0)
              2ea6 de00  st   [y,x++]     13536  st([Y,Xpp])                     #20
              2ea7 0d00  ld   [y,x]       13537  ld([Y,X])                       #21
              2ea8 c219  st   [$19]       13538  st([vAC+1])                     #22 vAC.hi = peek(addr + 1)
              2ea9 0116  ld   [$16]       13539  ld([vPC])                       #23
              2eaa 8001  adda $01         13540  adda(1)                         #24
              2eab c216  st   [$16]       13541  st([vPC])                       #25
              2eac 1403  ld   $03,y       13542  ld(hi('NEXTY'),Y)               #26
              2ead e000  jmp  y,$00       13543  jmp(Y,'NEXTY')                  #27
              2eae 00f1  ld   $f1         13544  ld(-30/2)                       #28
                                          13545
                                          13546  # STWM implementation
                                          13547  label('stwm#13')
stwm#13:      2eaf 1517  ld   [$17],y     13548  ld([vPC+1],Y)                   #13 vPC.hi
              2eb0 c21d  st   [$1d]       13549  st([vTmp])                      #14 addr.lo
              2eb1 de00  st   [y,x++]     13550  st([Y,Xpp])                     #15
              2eb2 0d00  ld   [y,x]       13551  ld([Y,X])                       #16
              2eb3 1600  ld   ac,y        13552  ld(AC,Y)                        #17 addr.hi
              2eb4 111d  ld   [$1d],x     13553  ld([vTmp],X)                    #18
              2eb5 0118  ld   [$18]       13554  ld([vAC])                       #19
              2eb6 de00  st   [y,x++]     13555  st([Y,Xpp])                     #20
              2eb7 0119  ld   [$19]       13556  ld([vAC+1])                     #21
              2eb8 ce00  st   [y,x]       13557  st([Y,X])                       #22
              2eb9 0116  ld   [$16]       13558  ld([vPC])                       #23
              2eba 8001  adda $01         13559  adda(1)                         #24
              2ebb c216  st   [$16]       13560  st([vPC])                       #25
              2ebc 1403  ld   $03,y       13561  ld(hi('NEXTY'),Y)               #26
              2ebd e000  jmp  y,$00       13562  jmp(Y,'NEXTY')                  #27
              2ebe 00f1  ld   $f1         13563  ld(-30/2)                       #28
                                          13564
                                          13565
                                          13566  # DEEKR implementation
                                          13567  label('deekr#13')
deekr#13:     2ebf 1400  ld   $00,y       13568  ld(0,Y)                         #13
              2ec0 1200  ld   ac,x        13569  ld(AC,X)                        #14 index var
              2ec1 00f5  ld   $f5         13570  ld(min(0,maxTicks-52/2))        #15
              2ec2 8115  adda [$15]       13571  adda([vTicks])                  #16
              2ec3 e8e7  blt  .deekr#19   13572  blt('.deekr#19')                #17 not enough time left, so retry
              2ec4 0500  ld   [x]         13573  ld([X])                         #18
              2ec5 de00  st   [y,x++]     13574  st([Y,Xpp])                     #19
              2ec6 c22a  st   [$2a]       13575  st([sysArgs+6])                 #20 index.lo
              2ec7 0500  ld   [x]         13576  ld([X])                         #21
              2ec8 c22b  st   [$2b]       13577  st([sysArgs+7])                 #22 index.hi
              2ec9 012a  ld   [$2a]       13578  ld([sysArgs+6])                 #23
              2eca 3080  anda $80,x       13579  anda(0x80,X)                    #24
              2ecb 812a  adda [$2a]       13580  adda([sysArgs+6])               #25
              2ecc c22a  st   [$2a]       13581  st([sysArgs+6])                 #26 index.lo*2
              2ecd 0500  ld   [x]         13582  ld([X])                         #27 msb index.lo
              2ece 812b  adda [$2b]       13583  adda([sysArgs+7])               #28
              2ecf 812b  adda [$2b]       13584  adda([sysArgs+7])               #29
              2ed0 c22b  st   [$2b]       13585  st([sysArgs+7])                 #30 index.hi*2
              2ed1 0118  ld   [$18]       13586  ld([vAC])                       #31
              2ed2 812a  adda [$2a]       13587  adda([sysArgs+6])               #32
              2ed3 c21d  st   [$1d]       13588  st([vTmp])                      #33 vTmp = vAC.lo + index.lo
              2ed4 e8d8  blt  .deekr#36   13589  bmi('.deekr#36')                #34 check carry
              2ed5 a12a  suba [$2a]       13590  suba([sysArgs+6])               #35 restore vAC.lo
              2ed6 fcda  bra  .deekr#38   13591  bra('.deekr#38')                #36
              2ed7 412a  ora  [$2a]       13592  ora([sysArgs+6])                #37 carry in bit 7
                                          13593
                                          13594  label('.deekr#36')
.deekr#36:    2ed8 212a  anda [$2a]       13595  anda([sysArgs+6])               #36 carry in bit 7
              2ed9 0200  nop              13596  nop()                           #37
                                          13597
                                          13598  label('.deekr#38')
.deekr#38:    2eda 3080  anda $80,x       13599  anda(0x80,X)                    #38
              2edb 0500  ld   [x]         13600  ld([X])                         #39 carry in bit 0
              2edc 8119  adda [$19]       13601  adda([vAC+1])                   #40
              2edd 952b  adda [$2b],y     13602  adda([sysArgs+7],Y)             #41 Y = vAC.hi + index.hi + carry
              2ede 111d  ld   [$1d],x     13603  ld([vTmp],X)                    #42
              2edf 0d00  ld   [y,x]       13604  ld([Y,X])                       #43
              2ee0 c218  st   [$18]       13605  st([vAC])                       #44
              2ee1 de00  st   [y,x++]     13606  st([Y,Xpp])                     #45
              2ee2 0d00  ld   [y,x]       13607  ld([Y,X])                       #46
              2ee3 c219  st   [$19]       13608  st([vAC+1])                     #47
              2ee4 1403  ld   $03,y       13609  ld(hi('NEXTY'),Y)               #48
              2ee5 e000  jmp  y,$00       13610  jmp(Y,'NEXTY')                  #49
              2ee6 00e6  ld   $e6         13611  ld(-52/2)                       #50
                                          13612
                                          13613  label('.deekr#19')
.deekr#19:    2ee7 0116  ld   [$16]       13614  ld([vPC])                       #19 retry instruction
              2ee8 a002  suba $02         13615  suba(2)                         #20
              2ee9 c216  st   [$16]       13616  st([vPC])                       #21
              2eea 1403  ld   $03,y       13617  ld(hi('NEXTY'),Y)               #22
              2eeb e000  jmp  y,$00       13618  jmp(Y,'NEXTY')                  #23
              2eec 00f3  ld   $f3         13619  ld(-26/2)                       #24
                                          13620
                                          13621
                                          13622  # DOKER implementation
                                          13623  #label('doker#13')
                                          13624  #ld([vPC+1],Y)                   #13 vPC.hi
                                          13625  #st([vTmp])                      #14 var addr
                                          13626  #st([Y,Xpp])                     #15
                                          13627  #ld(min(0,maxTicks-62/2))        #16
                                          13628  #adda([vTicks])                  #17
                                          13629  #blt('.doker#20')                #18 not enough time left, so retry
                                          13630  #ld([Y,X])                       #19
                                          13631  #ld(AC,X)                        #20 idx addr
                                          13632  #ld(0,Y)                         #21
                                          13633  #ld([X])                         #22
                                          13634  #st([sysArgs+6])                 #23 idx.lo
                                          13635  #st([Y,Xpp])                     #24 X++
                                          13636  #ld([X])                         #25
                                          13637  #st([sysArgs+7])                 #26 idx.hi
                                          13638  #ld([sysArgs+6])                 #27
                                          13639  #anda(0x80,X)                    #28
                                          13640  #adda([sysArgs+6])               #29
                                          13641  #st([sysArgs+6])                 #30 idx.lo*2
                                          13642  #ld([X])                         #31 msb idx.lo
                                          13643  #adda([sysArgs+7])               #32
                                          13644  #adda([sysArgs+7])               #33
                                          13645  #st([sysArgs+7])                 #34 idx.hi*2
                                          13646  #ld([vAC])                       #35
                                          13647  #adda([sysArgs+6])               #36
                                          13648  #st([vAC])                       #37 vAC.lo = vAC.lo + index.lo
                                          13649  #bmi('.doker#40')                #38 check carry
                                          13650  #suba([sysArgs+6])               #39 restore vAC.lo
                                          13651  #bra('.doker#42')                #40
                                          13652  #ora([sysArgs+6])                #41 carry in bit 7
                                          13653  #
                                          13654  #label('.doker#40')
                                          13655  #anda([sysArgs+6])               #40 carry in bit 7
                                          13656  #nop()                           #41
                                          13657  #
                                          13658  #label('.doker#42')
                                          13659  #anda(0x80,X)                    #42
                                          13660  #ld([X])                         #43 carry in bit 0
                                          13661  #adda([vAC+1])                   #44
                                          13662  #adda([sysArgs+7],Y)             #45 Y = vAC.hi + index.hi + carry
                                          13663  #st([vAC+1])                     #46 for consistancy
                                          13664  #ld([vTmp],X)                    #47
                                          13665  #ld([X])                         #48 var.lo
                                          13666  #ld([vAC],X)                     #49
                                          13667  #st([Y,X])                       #50 poke [vAC], var.lo
                                          13668  #ld([vTmp])                      #51
                                          13669  #adda(1,X)                       #52
                                          13670  #ld([X])                         #53 var.hi
                                          13671  #st([vTmp])                      #54
                                          13672  #ld([vAC])                       #55
                                          13673  #adda(1,X)                       #56
                                          13674  #ld([vTmp])                      #57
                                          13675  #st([Y,X])                       #58 poke [vAC+1], var.hi
                                          13676  #ld([vPC])                       #59
                                          13677  #adda(1)                         #60
                                          13678  #st([vPC])                       #61
                                          13679  #ld(hi('NEXTY'),Y)               #62
                                          13680  #jmp(Y,'NEXTY')                  #63
                                          13681  #ld(-66/2)                       #64
                                          13682  #
                                          13683  #label('.doker#20')
                                          13684  #ld([vPC])                       #20 retry instruction
                                          13685  #suba(2)                         #21
                                          13686  #st([vPC])                       #22
                                          13687  #ld(hi('REENTER'),Y)             #23
                                          13688  #jmp(Y,'REENTER')                #24
                                          13689  #ld(-28/2)                       #25
                                          13690
                                          13691
              2eed 0200  nop              13692  fillers(until=0xff)
              2eee 0200  nop
              2eef 0200  nop
              * 18 times
              2eff 0200  nop              13693  align(0x100, size=0x100)
                                          13694
                                          13695  #-----------------------------------------------------------------------
                                          13696  #  Implementation of SYS_CopyMemory[Ext], (0x2F00)
                                          13697  #-----------------------------------------------------------------------
                                          13698  #
                                          13699  # SYS_CopyMemory_vX_80 implementation, (lb3361)
                                          13700  label('sys_CopyMemory')
sys_CopyMemory:
              2f00 f83e  ble  .sysCm#20   13701  ble('.sysCm#20')                     #18   goto burst6
              2f01 a006  suba $06         13702  suba(6)                              #19
              2f02 f440  bge  .sysCm#22   13703  bge('.sysCm#22')                     #20   goto burst6
              2f03 1527  ld   [$27],y     13704  ld([sysArgs+3],Y)                    #21
              2f04 8003  adda $03         13705  adda(3)                              #22
              2f05 f41d  bge  .sysCm#25   13706  bge('.sysCm#25')                     #23   goto burst3
              2f06 1126  ld   [$26],x     13707  ld([sysArgs+2],X)                    #24
                                          13708
              2f07 8002  adda $02         13709  adda(2)                              #25   single
              2f08 c218  st   [$18]       13710  st([vAC])                            #26
              2f09 0d00  ld   [y,x]       13711  ld([Y,X])                            #27
              2f0a 1525  ld   [$25],y     13712  ld([sysArgs+1],Y)                    #28
              2f0b 1124  ld   [$24],x     13713  ld([sysArgs+0],X)                    #29
              2f0c ce00  st   [y,x]       13714  st([Y,X])                            #30
              2f0d 0124  ld   [$24]       13715  ld([sysArgs+0])                      #31
              2f0e 8001  adda $01         13716  adda(1)                              #32
              2f0f c224  st   [$24]       13717  st([sysArgs+0])                      #33
              2f10 0126  ld   [$26]       13718  ld([sysArgs+2])                      #34
              2f11 8001  adda $01         13719  adda(1)                              #35
              2f12 c226  st   [$26]       13720  st([sysArgs+2])                      #36
              2f13 0118  ld   [$18]       13721  ld([vAC])                            #37
              2f14 f017  beq  $2f17       13722  beq(pc()+3)                          #38
              2f15 fc18  bra  $2f18       13723  bra(pc()+3)                          #39
              2f16 00fe  ld   $fe         13724  ld(-2)                               #40
              2f17 0000  ld   $00         13725  ld(0)                                #40!
              2f18 8116  adda [$16]       13726  adda([vPC])                          #41
              2f19 c216  st   [$16]       13727  st([vPC])                            #42
              2f1a 1403  ld   $03,y       13728  ld(hi('REENTER'),Y)                  #43
              2f1b e0cb  jmp  y,$cb       13729  jmp(Y,'REENTER')                     #44
              2f1c 00e8  ld   $e8         13730  ld(-48/2)                            #45
                                          13731
                                          13732  label('.sysCm#25')
.sysCm#25:    2f1d c218  st   [$18]       13733  st([vAC])                            #25   burst3
                                          13734  for i in range(3):
              2f1e 0d00  ld   [y,x]       13735    ld([Y,X])                            #26+3*i
              2f1f c228  st   [$28]       13736    st([sysArgs+4+i])                    #27+3*i
              2f20 de00  st   [y,x++]     13737    st([Y,Xpp]) if i<2 else None         #28+3*i
              2f21 0d00  ld   [y,x]
              2f22 c229  st   [$29]
              2f23 de00  st   [y,x++]
              2f24 0d00  ld   [y,x]
              2f25 c22a  st   [$2a]
              2f26 1525  ld   [$25],y     13738  ld([sysArgs+1],Y)                    #34
              2f27 1124  ld   [$24],x     13739  ld([sysArgs+0],X)                    #35
                                          13740  for i in range(3):
              2f28 0128  ld   [$28]       13741    ld([sysArgs+4+i])                    #36+2*i
              2f29 de00  st   [y,x++]     13742    st([Y,Xpp])                          #37+2*i
              2f2a 0129  ld   [$29]
              2f2b de00  st   [y,x++]
              2f2c 012a  ld   [$2a]
              2f2d de00  st   [y,x++]
              2f2e 0124  ld   [$24]       13743  ld([sysArgs+0])                      #42
              2f2f 8003  adda $03         13744  adda(3)                              #43
              2f30 c224  st   [$24]       13745  st([sysArgs+0])                      #44
              2f31 0126  ld   [$26]       13746  ld([sysArgs+2])                      #45
              2f32 8003  adda $03         13747  adda(3)                              #46
              2f33 c226  st   [$26]       13748  st([sysArgs+2])                      #47
              2f34 0118  ld   [$18]       13749  ld([vAC])                            #48
              2f35 f038  beq  $2f38       13750  beq(pc()+3)                          #49
              2f36 fc39  bra  $2f39       13751  bra(pc()+3)                          #50
              2f37 00fe  ld   $fe         13752  ld(-2)                               #51
              2f38 0000  ld   $00         13753  ld(0)                                #51!
              2f39 8116  adda [$16]       13754  adda([vPC])                          #52
              2f3a c216  st   [$16]       13755  st([vPC])                            #53
              2f3b 1403  ld   $03,y       13756  ld(hi('NEXTY'),Y)                    #54
              2f3c e000  jmp  y,$00       13757  jmp(Y,'NEXTY')                       #55
              2f3d 00e3  ld   $e3         13758  ld(-58/2)                            #56
                                          13759
                                          13760  label('.sysCm#20')
.sysCm#20:    2f3e 0200  nop              13761  nop()                                #20   burst6
              2f3f 1527  ld   [$27],y     13762  ld([sysArgs+3],Y)                    #21
                                          13763  label('.sysCm#22')
.sysCm#22:    2f40 c218  st   [$18]       13764  st([vAC])                            #22   burst6
              2f41 1126  ld   [$26],x     13765  ld([sysArgs+2],X)                    #23
                                          13766  for i in range(6):
              2f42 0d00  ld   [y,x]       13767    ld([Y,X])                            #24+i*3
              2f43 c21a  st   [$1a]       13768    st([vLR+i if i<2 else sysArgs+2+i])  #25+i*3
              2f44 de00  st   [y,x++]     13769    st([Y,Xpp]) if i<5 else None         #26+i*3 if i<5
              2f45 0d00  ld   [y,x]
              2f46 c21b  st   [$1b]
              2f47 de00  st   [y,x++]
              2f48 0d00  ld   [y,x]
              2f49 c228  st   [$28]
              2f4a de00  st   [y,x++]
              2f4b 0d00  ld   [y,x]
              2f4c c229  st   [$29]
              2f4d de00  st   [y,x++]
              2f4e 0d00  ld   [y,x]
              2f4f c22a  st   [$2a]
              2f50 de00  st   [y,x++]
              2f51 0d00  ld   [y,x]
              2f52 c22b  st   [$2b]
              2f53 1525  ld   [$25],y     13770  ld([sysArgs+1],Y)                    #41
              2f54 1124  ld   [$24],x     13771  ld([sysArgs+0],X)                    #42
                                          13772  for i in range(6):
              2f55 011a  ld   [$1a]       13773    ld([vLR+i if i<2 else sysArgs+2+i])  #43+i*2
              2f56 de00  st   [y,x++]     13774    st([Y,Xpp])                          #44+i*2
              2f57 011b  ld   [$1b]
              2f58 de00  st   [y,x++]
              2f59 0128  ld   [$28]
              2f5a de00  st   [y,x++]
              2f5b 0129  ld   [$29]
              2f5c de00  st   [y,x++]
              2f5d 012a  ld   [$2a]
              2f5e de00  st   [y,x++]
              2f5f 012b  ld   [$2b]
              2f60 de00  st   [y,x++]
              2f61 0124  ld   [$24]       13775  ld([sysArgs+0])                      #55
              2f62 8006  adda $06         13776  adda(6)                              #56
              2f63 c224  st   [$24]       13777  st([sysArgs+0])                      #57
              2f64 0126  ld   [$26]       13778  ld([sysArgs+2])                      #58
              2f65 8006  adda $06         13779  adda(6)                              #59
              2f66 c226  st   [$26]       13780  st([sysArgs+2])                      #60
                                          13781
              2f67 0118  ld   [$18]       13782  ld([vAC])                            #61
              2f68 ec6c  bne  .sysCm#64   13783  bne('.sysCm#64')                     #62
              2f69 1403  ld   $03,y       13784  ld(hi('REENTER'),Y)                  #63
              2f6a e0cb  jmp  y,$cb       13785  jmp(Y,'REENTER')                     #64
              2f6b 00de  ld   $de         13786  ld(-68/2)                            #65
                                          13787
                                          13788  label('.sysCm#64')
.sysCm#64:    2f6c 00e6  ld   $e6         13789  ld(-52/2)                            #64
              2f6d 8115  adda [$15]       13790  adda([vTicks])                       #13 = 65 - 52
              2f6e c215  st   [$15]       13791  st([vTicks])                         #14
              2f6f 80e8  adda $e8         13792  adda(min(0,maxTicks-(26+52)/2))      #15   could probably be min(0,maxTicks-(26+52)/2)
                                          13793  bge('sys_CopyMemory')                #16
              2f70 f400  bge  sys_CopyMemory
              2f71 0118  ld   [$18]       13794  ld([vAC])                            #17
              2f72 00fe  ld   $fe         13795  ld(-2)                               #18   notime
              2f73 8116  adda [$16]       13796  adda([vPC])                          #19
              2f74 c216  st   [$16]       13797  st([vPC])                            #20
              2f75 1403  ld   $03,y       13798  ld(hi('REENTER'),Y)                  #21
              2f76 e0cb  jmp  y,$cb       13799  jmp(Y,'REENTER')                     #22
              2f77 00f3  ld   $f3         13800  ld(-26/2)                            #23
                                          13801
                                          13802
                                          13803  # SYS_CopyMemoryExt_vX_100 implementation, (lb3361)
                                          13804  label('sys_CopyMemoryExt')
sys_CopyMemoryExt:
              2f78 8200  adda ac          13805  adda(AC)                             #18
              2f79 8200  adda ac          13806  adda(AC)                             #19
              2f7a 403c  ora  $3c         13807  ora(0x3c)                            #20
              2f7b c21d  st   [$1d]       13808  st([vTmp])                           #21 [vTmp] = src ctrl value
              2f7c 0119  ld   [$19]       13809  ld([vAC+1])                          #22
              2f7d 20fc  anda $fc         13810  anda(0xfc)                           #23
              2f7e 403c  ora  $3c         13811  ora(0x3c)                            #24
              2f7f c21a  st   [$1a]       13812  st([vLR])                            #25 [vLR] = dest ctrl value
                                          13813
                                          13814  label('.sysCme#26')
.sysCme#26:   2f80 0118  ld   [$18]       13815  ld([vAC])                            #26
              2f81 f8a4  ble  .sysCme#29  13816  ble('.sysCme#29')                    #27   goto burst5
              2f82 a005  suba $05         13817  suba(5)                              #28
              2f83 f4a6  bge  .sysCme#31  13818  bge('.sysCme#31')                    #29   goto burst5
              2f84 1527  ld   [$27],y     13819  ld([sysArgs+3],Y)                    #30
              2f85 8004  adda $04         13820  adda(4)                              #31
                                          13821
              2f86 c218  st   [$18]       13822  st([vAC])                            #32   single
              2f87 111d  ld   [$1d],x     13823  ld([vTmp],X)                         #33
              2f88 c500  ctrl x           13824  ctrl(X)                              #34
              2f89 1126  ld   [$26],x     13825  ld([sysArgs+2],X)                    #35
              2f8a 0d00  ld   [y,x]       13826  ld([Y,X])                            #36
              2f8b 111a  ld   [$1a],x     13827  ld([vLR],X)                          #37
              2f8c c500  ctrl x           13828  ctrl(X)                              #38
              2f8d 1525  ld   [$25],y     13829  ld([sysArgs+1],Y)                    #39
              2f8e 1124  ld   [$24],x     13830  ld([sysArgs+0],X)                    #40
              2f8f ce00  st   [y,x]       13831  st([Y,X])                            #41
              2f90 1401  ld   $01,y       13832  ld(hi(ctrlBits), Y)                  #42
              2f91 09f8  ld   [y,$f8]     13833  ld([Y,ctrlBits])                     #43
              2f92 1200  ld   ac,x        13834  ld(AC,X)                             #44
              2f93 c500  ctrl x           13835  ctrl(X)                              #45
              2f94 0124  ld   [$24]       13836  ld([sysArgs+0])                      #46
              2f95 8001  adda $01         13837  adda(1)                              #47
              2f96 c224  st   [$24]       13838  st([sysArgs+0])                      #48
              2f97 0126  ld   [$26]       13839  ld([sysArgs+2])                      #49
              2f98 8001  adda $01         13840  adda(1)                              #50
              2f99 c226  st   [$26]       13841  st([sysArgs+2])                      #51
              2f9a 0118  ld   [$18]       13842  ld([vAC])                            #52  done?
              2f9b f09e  beq  $2f9e       13843  beq(pc()+3)                          #53
              2f9c fc9f  bra  $2f9f       13844  bra(pc()+3)                          #54
              2f9d 00fe  ld   $fe         13845  ld(-2)                               #55  restart
              2f9e 0000  ld   $00         13846  ld(0)                                #55! finished
              2f9f 8116  adda [$16]       13847  adda([vPC])                          #56
              2fa0 c216  st   [$16]       13848  st([vPC])                            #57
              2fa1 1403  ld   $03,y       13849  ld(hi('NEXTY'),Y)                    #58
              2fa2 e000  jmp  y,$00       13850  jmp(Y,'NEXTY')                       #59
              2fa3 00e1  ld   $e1         13851  ld(-62/2)                            #60
                                          13852
                                          13853  label('.sysCme#29')
.sysCme#29:   2fa4 0200  nop              13854  nop()                                #29   burst5
              2fa5 1527  ld   [$27],y     13855  ld([sysArgs+3],Y)                    #30
                                          13856  label('.sysCme#31')
.sysCme#31:   2fa6 c218  st   [$18]       13857  st([vAC])                            #31   burst5
              2fa7 111d  ld   [$1d],x     13858  ld([vTmp],X)                         #32
              2fa8 c500  ctrl x           13859  ctrl(X)                              #33
              2fa9 1126  ld   [$26],x     13860  ld([sysArgs+2],X)                    #34
                                          13861  for i in range(5):
              2faa 0d00  ld   [y,x]       13862    ld([Y,X])                            #35+i*3
              2fab c21b  st   [$1b]       13863    st([vLR+1 if i<1 else sysArgs+3+i])  #36+i*3
              2fac de00  st   [y,x++]     13864    st([Y,Xpp]) if i<4 else None         #37+i*3 if i<4
              2fad 0d00  ld   [y,x]
              2fae c228  st   [$28]
              2faf de00  st   [y,x++]
              2fb0 0d00  ld   [y,x]
              2fb1 c229  st   [$29]
              2fb2 de00  st   [y,x++]
              2fb3 0d00  ld   [y,x]
              2fb4 c22a  st   [$2a]
              2fb5 de00  st   [y,x++]
              2fb6 0d00  ld   [y,x]
              2fb7 c22b  st   [$2b]
              2fb8 111a  ld   [$1a],x     13865  ld([vLR],X)                          #49
              2fb9 c500  ctrl x           13866  ctrl(X)                              #50
              2fba 1525  ld   [$25],y     13867  ld([sysArgs+1],Y)                    #51
              2fbb 1124  ld   [$24],x     13868  ld([sysArgs+0],X)                    #52
                                          13869  for i in range(5):
              2fbc 011b  ld   [$1b]       13870    ld([vLR+1 if i<1 else sysArgs+3+i])  #53+i*2
              2fbd de00  st   [y,x++]     13871    st([Y,Xpp])                          #54+i*2
              2fbe 0128  ld   [$28]
              2fbf de00  st   [y,x++]
              2fc0 0129  ld   [$29]
              2fc1 de00  st   [y,x++]
              2fc2 012a  ld   [$2a]
              2fc3 de00  st   [y,x++]
              2fc4 012b  ld   [$2b]
              2fc5 de00  st   [y,x++]
              2fc6 0124  ld   [$24]       13872  ld([sysArgs+0])                      #63
              2fc7 8005  adda $05         13873  adda(5)                              #64
              2fc8 c224  st   [$24]       13874  st([sysArgs+0])                      #65
              2fc9 0126  ld   [$26]       13875  ld([sysArgs+2])                      #66
              2fca 8005  adda $05         13876  adda(5)                              #67
              2fcb c226  st   [$26]       13877  st([sysArgs+2])                      #68
                                          13878
              2fcc 0118  ld   [$18]       13879  ld([vAC])                            #69
              2fcd ecd6  bne  .sysCme#72  13880  bne('.sysCme#72')                    #70
              2fce 1401  ld   $01,y       13881  ld(hi(ctrlBits), Y)                  #71  we're done!
              2fcf 09f8  ld   [y,$f8]     13882  ld([Y,ctrlBits])                     #72
              2fd0 30fc  anda $fc,x       13883  anda(0xfc,X)                         #73
              2fd1 c500  ctrl x           13884  ctrl(X)                              #74
              2fd2 011d  ld   [$1d]       13885  ld([vTmp])                           #75  always read after ctrl
              2fd3 1403  ld   $03,y       13886  ld(hi('NEXTY'),Y)                    #76
              2fd4 e000  jmp  y,$00       13887  jmp(Y,'NEXTY')                       #77
              2fd5 00d8  ld   $d8         13888  ld(-80/2)                            #78
                                          13889
                                          13890  label('.sysCme#72')
.sysCme#72:   2fd6 00e6  ld   $e6         13891  ld(-52/2)                            #72
              2fd7 8115  adda [$15]       13892  adda([vTicks])                       #21 = 72 - 52
              2fd8 c215  st   [$15]       13893  st([vTicks])                         #22
              2fd9 80e1  adda $e1         13894  adda(min(0,maxTicks-(40+52)/2))      #23
              2fda f480  bge  .sysCme#26  13895  bge('.sysCme#26')                    #24  enough time for another loop
              2fdb 00fe  ld   $fe         13896  ld(-2)                               #25
              2fdc 8116  adda [$16]       13897  adda([vPC])                          #26  restart
              2fdd c216  st   [$16]       13898  st([vPC])                            #27
              2fde 1401  ld   $01,y       13899  ld(hi(ctrlBits), Y)                  #28
              2fdf 09f8  ld   [y,$f8]     13900  ld([Y,ctrlBits])                     #29
              2fe0 30fc  anda $fc,x       13901  anda(0xfc,X)                         #30
              2fe1 c500  ctrl x           13902  ctrl(X)                              #31
              2fe2 011d  ld   [$1d]       13903  ld([vTmp])                           #32 always read after ctrl
              2fe3 1403  ld   $03,y       13904  ld(hi('REENTER'),Y)                  #33
              2fe4 e0cb  jmp  y,$cb       13905  jmp(Y,'REENTER')                     #34
              2fe5 00ed  ld   $ed         13906  ld(-38/2)                            #35 max: 38 + 52 = 90 cycles
                                          13907
                                          13908
              2fe6 0200  nop              13909  fillers(until=0xff)
              2fe7 0200  nop
              2fe8 0200  nop
              * 25 times
              2fff 0200  nop              13910  align(0x100, size=0x100)
                                          13911
                                          13912  #-----------------------------------------------------------------------
                                          13913  #  Implementation of SYS_ScanMemory[Ext], (0x3000)
                                          13914  #-----------------------------------------------------------------------
                                          13915  #
                                          13916  # SYS_ScanMemory_vX_50 implementation, (lb3361)
                                          13917  label('sys_ScanMemory')
sys_ScanMemory:
              3000 1124  ld   [$24],x     13918  ld([sysArgs+0],X)                    #18
              3001 0d00  ld   [y,x]       13919  ld([Y,X])                            #19
                                          13920  label('.sysSme#20')
.sysSme#20:   3002 6126  xora [$26]       13921  xora([sysArgs+2])                    #20
              3003 f01e  beq  .sysSme#23  13922  beq('.sysSme#23')                    #21
              3004 0d00  ld   [y,x]       13923  ld([Y,X])                            #22
              3005 6127  xora [$27]       13924  xora([sysArgs+3])                    #23
              3006 f021  beq  .sysSme#26  13925  beq('.sysSme#26')                    #24
              3007 0124  ld   [$24]       13926  ld([sysArgs+0])                      #25
              3008 8001  adda $01         13927  adda(1);                             #26
              3009 d224  st   [$24],x     13928  st([sysArgs+0],X)                    #27
              300a 0118  ld   [$18]       13929  ld([vAC])                            #28
              300b a001  suba $01         13930  suba(1)                              #29
              300c f01a  beq  .sysSme#32  13931  beq('.sysSme#32')                    #30 return zero
              300d c218  st   [$18]       13932  st([vAC])                            #31
              300e 00f7  ld   $f7         13933  ld(-18/2)                            #14 = 32 - 18
              300f 8115  adda [$15]       13934  adda([vTicks])                       #15
              3010 c215  st   [$15]       13935  st([vTicks])                         #16
              3011 80f8  adda $f8         13936  adda(min(0,maxTicks -(28+18)/2))     #17
              3012 f402  bge  .sysSme#20  13937  bge('.sysSme#20')                    #18
              3013 0d00  ld   [y,x]       13938  ld([Y,X])                            #19
              3014 00fe  ld   $fe         13939  ld(-2)                               #20 restart
              3015 8116  adda [$16]       13940  adda([vPC])                          #21
              3016 c216  st   [$16]       13941  st([vPC])                            #22
              3017 1403  ld   $03,y       13942  ld(hi('REENTER'),Y)                  #23
              3018 e0cb  jmp  y,$cb       13943  jmp(Y,'REENTER')                     #24
              3019 00f2  ld   $f2         13944  ld(-28/2)                            #25
                                          13945
                                          13946  label('.sysSme#32')
.sysSme#32:   301a c219  st   [$19]       13947  st([vAC+1])                          #32 return zero
              301b 1403  ld   $03,y       13948  ld(hi('REENTER'),Y)                  #33
              301c e0cb  jmp  y,$cb       13949  jmp(Y,'REENTER')                     #34
              301d 00ed  ld   $ed         13950  ld(-38/2)                            #35
                                          13951
                                          13952  label('.sysSme#23')
.sysSme#23:   301e 0200  nop              13953  nop()                                #23 success
              301f 0200  nop              13954  nop()                                #24
              3020 0124  ld   [$24]       13955  ld([sysArgs+0])                      #25
                                          13956  label('.sysSme#26')
.sysSme#26:   3021 c218  st   [$18]       13957  st([vAC])                            #26 success
              3022 0125  ld   [$25]       13958  ld([sysArgs+1])                      #27
              3023 c219  st   [$19]       13959  st([vAC+1])                          #28
              3024 1403  ld   $03,y       13960  ld(hi('REENTER'),Y)                  #29
              3025 e0cb  jmp  y,$cb       13961  jmp(Y,'REENTER')                     #30
              3026 00ef  ld   $ef         13962  ld(-34/2)                            #31
                                          13963
                                          13964
                                          13965  # SYS_ScanMemoryExt_vX_50 implementation, (lb3361)
                                          13966  label('sys_ScanMemoryExt')
sys_ScanMemoryExt:
              3027 503c  ora  $3c,x       13967  ora(0x3c,X)                          #18
              3028 c500  ctrl x           13968  ctrl(X)                              #19
              3029 1525  ld   [$25],y     13969  ld([sysArgs+1],Y)                    #20
              302a 1124  ld   [$24],x     13970  ld([sysArgs+0],X)                    #21
              302b 0d00  ld   [y,x]       13971  ld([Y,X])                            #22
              302c 0200  nop              13972  nop()                                #23
                                          13973  label('.sysSmx#24')
.sysSmx#24:   302d 6126  xora [$26]       13974  xora([sysArgs+2])                    #24
              302e f04a  beq  .sysSmx#27  13975  beq('.sysSmx#27')                    #25
              302f 0d00  ld   [y,x]       13976  ld([Y,X])                            #26
              3030 6127  xora [$27]       13977  xora([sysArgs+3])                    #27
              3031 f04d  beq  .sysSmx#30  13978  beq('.sysSmx#30')                    #28
              3032 0124  ld   [$24]       13979  ld([sysArgs+0])                      #29
              3033 8001  adda $01         13980  adda(1);                             #30
              3034 d224  st   [$24],x     13981  st([sysArgs+0],X)                    #31
              3035 0118  ld   [$18]       13982  ld([vAC])                            #32
              3036 a001  suba $01         13983  suba(1)                              #33
              3037 f053  beq  .sysSmx#36  13984  beq('.sysSmx#36')                    #34 return zero
              3038 c218  st   [$18]       13985  st([vAC])                            #35
              3039 00f7  ld   $f7         13986  ld(-18/2)                            #18 = 36 - 18
              303a 8115  adda [$15]       13987  adda([vTicks])                       #19
              303b c215  st   [$15]       13988  st([vTicks])                         #20
              303c 80f7  adda $f7         13989  adda(min(0,maxTicks -(30+18)/2))     #21
              303d f42d  bge  .sysSmx#24  13990  bge('.sysSmx#24')                    #22
              303e 0d00  ld   [y,x]       13991  ld([Y,X])                            #23
              303f 0116  ld   [$16]       13992  ld([vPC])                            #24
              3040 a002  suba $02         13993  suba(2)                              #25 restart
              3041 c216  st   [$16]       13994  st([vPC])                            #26
              3042 1401  ld   $01,y       13995  ld(hi(ctrlBits),Y)                   #27 restore and return
              3043 09f8  ld   [y,$f8]     13996  ld([Y,ctrlBits])                     #28
              3044 30fc  anda $fc,x       13997  anda(0xfc,X)                         #29
              3045 c500  ctrl x           13998  ctrl(X)                              #30
              3046 011d  ld   [$1d]       13999  ld([vTmp])                           #31
              3047 1403  ld   $03,y       14000  ld(hi('NEXTY'),Y)                    #32
              3048 e000  jmp  y,$00       14001  jmp(Y,'NEXTY')                       #33
              3049 00ee  ld   $ee         14002  ld(-36/2)                            #34
                                          14003
                                          14004  label('.sysSmx#27')
.sysSmx#27:   304a 0200  nop              14005  nop()                                #27 success
              304b 0200  nop              14006  nop()                                #28
              304c 0124  ld   [$24]       14007  ld([sysArgs+0])                      #29
                                          14008  label('.sysSmx#30')
.sysSmx#30:   304d c218  st   [$18]       14009  st([vAC])                            #30 success
              304e 0125  ld   [$25]       14010  ld([sysArgs+1])                      #31
              304f 0200  nop              14011  nop()                                #32
              3050 0200  nop              14012  nop()                                #33
              3051 0200  nop              14013  nop()                                #34
              3052 0200  nop              14014  nop()                                #35
                                          14015  label('.sysSmx#36')
.sysSmx#36:   3053 c219  st   [$19]       14016  st([vAC+1])                          #36
              3054 1401  ld   $01,y       14017  ld(hi(ctrlBits),Y)                   #37 restore and return
              3055 09f8  ld   [y,$f8]     14018  ld([Y,ctrlBits])                     #38
              3056 30fc  anda $fc,x       14019  anda(0xfc,X)                         #39
              3057 c500  ctrl x           14020  ctrl(X)                              #40
              3058 011d  ld   [$1d]       14021  ld([vTmp])                           #41
              3059 1403  ld   $03,y       14022  ld(hi('NEXTY'),Y)                    #42
              305a e000  jmp  y,$00       14023  jmp(Y,'NEXTY')                       #43
              305b 00e9  ld   $e9         14024  ld(-46/2)                            #44
                                          14025
                                          14026
              305c 0200  nop              14027  fillers(until=0x80)
              305d 0200  nop
              305e 0200  nop
              * 36 times
                                          14028
                                          14029  # SYS_LoaderSerialIN
                                          14030  # sysArgs[0]   (in), zero page address of odd videoY waits and first even videoY wait, 207 219 235 251 2
                                          14031  # sysArgs[1]   (in), sysArgs2 address, buffer that receives protocol, packet length and packet address
                                          14032  # sysArgs[2]   (out), protocol, filled in automatically by the Sys call
                                          14033  # sysArgs[3]   (out), packet length, filled in automatically by the Sys call
                                          14034  # sysArgs[4:5] (out), packet address, filled in automatically by the Sys call
                                          14035  # No error checks are performed, (apart from checking protocol)
                                          14036  # No checksums are performed
                                          14037  label('SYS_LoadSerialIn_vX_56')
SYS_LoadSerialIn_vX_56:
              3080 1124  ld   [$24],x     14038  ld([sysArgs+0],X)                   #15
              3081 0109  ld   [$09]       14039  ld([videoY])                        #16
              3082 6500  xora [x]         14040  xora([X])                           #17
              3083 ec95  bne  .sysLsi#20  14041  bne('.sysLsi#20')                   #18 wrong videoY so restart
              3084 0500  ld   [x]         14042  ld([X])                             #19
              3085 2001  anda $01         14043  anda(1)                             #20
              3086 f09b  beq  .sysLsi#23  14044  beq('.sysLsi#23')                   #21 even videoY
              3087 0124  ld   [$24]       14045  ld([sysArgs+0])                     #22
              3088 8001  adda $01         14046  adda(1)                             #23 odd videoY
              3089 c224  st   [$24]       14047  st([sysArgs+0])                     #24
              308a 1125  ld   [$25],x     14048  ld([sysArgs+1],X)                   #25 sysArgs address
              308b c700  st   in,[x]      14049  st(IN,[X])                          #26
              308c 0125  ld   [$25]       14050  ld([sysArgs+1])                     #27
              308d 8001  adda $01         14051  adda(1)                             #28
              308e c225  st   [$25]       14052  st([sysArgs+1])                     #29
              308f 0116  ld   [$16]       14053  ld([vPC])                           #30 restart
              3090 a002  suba $02         14054  suba(2)                             #31
              3091 c216  st   [$16]       14055  st([vPC])                           #32
              3092 1403  ld   $03,y       14056  ld(hi('REENTER'),Y)                 #33
              3093 e0cb  jmp  y,$cb       14057  jmp(Y,'REENTER')                    #34
              3094 00ed  ld   $ed         14058  ld(-38/2)                           #35
                                          14059
                                          14060  # wrong videoY
                                          14061  label('.sysLsi#20')
.sysLsi#20:   3095 0116  ld   [$16]       14062  ld([vPC])                           #20 restart
              3096 a002  suba $02         14063  suba(2)                             #21
              3097 c216  st   [$16]       14064  st([vPC])                           #22
              3098 1403  ld   $03,y       14065  ld(hi('REENTER'),Y)                 #23
              3099 e0cb  jmp  y,$cb       14066  jmp(Y,'REENTER')                    #24
              309a 00f2  ld   $f2         14067  ld(-28/2)                           #25
                                          14068
                                          14069  # even videoY
                                          14070  label('.sysLsi#23')
.sysLsi#23:   309b 0500  ld   [x]         14071  ld([X])                             #23
              309c 8004  adda $04         14072  adda(4)                             #24
              309d c600  st   [x]         14073  st([X])                             #25
              309e 0126  ld   [$26]       14074  ld([sysArgs+2])                     #26 protocol
              309f 604c  xora $4c         14075  xora(ord('L'))                      #27 check valid load
              30a0 ecb3  bne  .sysLsi#30  14076  bne('.sysLsi#30')                   #28 invalid packet
              30a1 0127  ld   [$27]       14077  ld([sysArgs+3])                     #29 check length
              30a2 f0d0  beq  .sysLsi#32  14078  beq('.sysLsi#32')                   #30 execute
              30a3 a001  suba $01         14079  suba(1)                             #31
              30a4 c227  st   [$27]       14080  st([sysArgs+3])                     #32 length--
              30a5 1128  ld   [$28],x     14081  ld([sysArgs+4],X)                   #33
              30a6 1529  ld   [$29],y     14082  ld([sysArgs+5],Y)                   #34
              30a7 cf00  st   in,[y,x]    14083  st(IN,[Y,X])                        #35
              30a8 0127  ld   [$27]       14084  ld([sysArgs+3])                     #36 check length
              30a9 f0c1  beq  .sysLsi#39  14085  beq('.sysLsi#39')                   #37 new packet
              30aa 0128  ld   [$28]       14086  ld([sysArgs+4])                     #38
              30ab 8001  adda $01         14087  adda(1)                             #39
              30ac c228  st   [$28]       14088  st([sysArgs+4])                     #40
              30ad 0116  ld   [$16]       14089  ld([vPC])                           #41 restart
              30ae a002  suba $02         14090  suba(2)                             #42
              30af c216  st   [$16]       14091  st([vPC])                           #43
              30b0 1403  ld   $03,y       14092  ld(hi('NEXTY'),Y)                   #44
              30b1 e000  jmp  y,$00       14093  jmp(Y,'NEXTY')                      #45
              30b2 00e8  ld   $e8         14094  ld(-48/2)                           #46
                                          14095
                                          14096  # even videoY
                                          14097  #label('.sysLsi#23')
                                          14098  #ld([X])                             #23
                                          14099  #adda(4)                             #24
                                          14100  #st([X])                             #25
                                          14101  #ld([sysArgs+2])                     #26 protocol
                                          14102  #xora(ord('L'))                      #27 check valid load
                                          14103  #bne('.sysLsi#30')                   #28 invalid packet
                                          14104  #ld([sysArgs+3])                     #29 check length
                                          14105  #beq('.sysLsi#32')                   #30 execute
                                          14106  #suba(1)                             #31
                                          14107  #st([sysArgs+3])                     #32 length--
                                          14108  #ld([sysArgs+4],X)                   #33
                                          14109  #ld([sysArgs+5],Y)                   #34
                                          14110  #st(IN,[Y,X])                        #35
                                          14111  #ld([sysArgs+3])                     #36 check length
                                          14112  #beq('.sysLsi#39')                   #37 new packet
                                          14113  #ld([sysArgs+4])                     #38
                                          14114  #adda(1)                             #39
                                          14115  #st([sysArgs+4])                     #40 address.lo++
                                          14116  #adda(1)                             #41 254+1+1 = 0, 255+1+1 = 1
                                          14117  #anda(0xfe)                          #42 will be zero only when writing to top 2 bytes of page
                                          14118  #st([vTmp])                          #43 remember as first condition
                                          14119  #ld([sysArgs+5])                     #44 address.hi
                                          14120  #suba(1)                             #45
                                          14121  #anda(0xfc)                          #46 will be zero only when writing to pages 1, 2, 3, 4
                                          14122  #ora([vTmp])                         #47 combine second condition with first
                                          14123  #bne(pc()+3)                         #48 condition is non zero, so do nothing
                                          14124  #bra(pc()+3)                         #49 condition is zero, so disable channels 1, 2, 3
                                          14125  #ld(0xfc);                           #50 disable channels 1, 2, 3
                                          14126  #ld(0xff);                           #50 (!) do nothing
                                          14127  #anda([channelMask])                 #51
                                          14128  #st([channelMask])                   #52
                                          14129  #ld([vPC])                           #53 restart
                                          14130  #suba(2)                             #54
                                          14131  #st([vPC])                           #55
                                          14132  #ld(hi('NEXTY'),Y)                   #56
                                          14133  #jmp(Y,'NEXTY')                      #57
                                          14134  #ld(-60/2)                           #58
                                          14135
                                          14136  # invalid packet
                                          14137  label('.sysLsi#30')
.sysLsi#30:   30b3 0002  ld   $02         14138  ld(2)                               #30
              30b4 c2bc  st   [$bc]       14139  st([0xBC])                          #31 reset even videoY
              30b5 00b8  ld   $b8         14140  ld(0xB8)                            #32
              30b6 c224  st   [$24]       14141  st([sysArgs+0])                     #33 reset videoY address
              30b7 0026  ld   $26         14142  ld(0x26)                            #34
              30b8 c225  st   [$25]       14143  st([sysArgs+1])                     #35 reset sys args address
              30b9 0116  ld   [$16]       14144  ld([vPC])                           #36 restart
              30ba a002  suba $02         14145  suba(2)                             #37
              30bb c216  st   [$16]       14146  st([vPC])                           #38
              30bc 0000  ld   $00         14147  ld(0)                               #39
              30bd c214  st   [$14]       14148  st([xoutMask])                      #40
              30be 1403  ld   $03,y       14149  ld(hi('REENTER'),Y)                 #41
              30bf e0cb  jmp  y,$cb       14150  jmp(Y,'REENTER')                    #42
              30c0 00e9  ld   $e9         14151  ld(-46/2)                           #43
                                          14152
                                          14153  # new packet
                                          14154  label('.sysLsi#39')
.sysLsi#39:   30c1 0002  ld   $02         14155  ld(2)                               #39
              30c2 c2bc  st   [$bc]       14156  st([0xBC])                          #40 reset even videoY
              30c3 00b8  ld   $b8         14157  ld(0xB8)                            #41
              30c4 c224  st   [$24]       14158  st([sysArgs+0])                     #42 reset videoY address
              30c5 0026  ld   $26         14159  ld(0x26)                            #43
              30c6 c225  st   [$25]       14160  st([sysArgs+1])                     #44 reset sys args address
              30c7 0116  ld   [$16]       14161  ld([vPC])                           #45 restart
              30c8 a002  suba $02         14162  suba(2)                             #46
              30c9 c216  st   [$16]       14163  st([vPC])                           #47
              30ca 0129  ld   [$29]       14164  ld([sysArgs+5])                     #48 hi address
              30cb 200f  anda $0f         14165  anda(0x0F)                          #49
              30cc c214  st   [$14]       14166  st([xoutMask])                      #50
              30cd 1403  ld   $03,y       14167  ld(hi('REENTER'),Y)                 #51
              30ce e0cb  jmp  y,$cb       14168  jmp(Y,'REENTER')                    #52
              30cf 00e4  ld   $e4         14169  ld(-56/2)                           #53
                                          14170
                                          14171  # execute
                                          14172  label('.sysLsi#32')
.sysLsi#32:   30d0 0128  ld   [$28]       14173  ld([sysArgs+4])                     #32 low execute address
              30d1 c21a  st   [$1a]       14174  st([vLR])                           #33
              30d2 a002  suba $02         14175  suba(2)                             #34
              30d3 c216  st   [$16]       14176  st([vPC])                           #35
              30d4 0129  ld   [$29]       14177  ld([sysArgs+5])                     #36 high execute address
              30d5 c217  st   [$17]       14178  st([vPC+1])                         #37
              30d6 c21b  st   [$1b]       14179  st([vLR+1])                         #38
              30d7 0000  ld   $00         14180  ld(0)                               #39
              30d8 c214  st   [$14]       14181  st([xoutMask])                      #40
              30d9 1403  ld   $03,y       14182  ld(hi('REENTER'),Y)                 #41
              30da e0cb  jmp  y,$cb       14183  jmp(Y,'REENTER')                    #42
              30db 00e9  ld   $e9         14184  ld(-46/2)                           #43
                                          14185
                                          14186
              30dc 0200  nop              14187  fillers(until=0xff)
              30dd 0200  nop
              30de 0200  nop
              * 35 times
              30ff 0200  nop              14188  align(0x100, size=0x100)
                                          14189
                                          14190  #-----------------------------------------------------------------------
                                          14191  #       More vCPU instruction implementations, (0x3100)
                                          14192  #-----------------------------------------------------------------------
                                          14193  #
                                          14194  # ABSVW implementation
                                          14195  label('absvw#13')
absvw#13:     3100 9001  adda $01,x       14196  adda(1,X)                       #13 address of var.hi
              3101 00fe  ld   $fe         14197  ld(min(0,maxTicks-34/2))        #14
              3102 8115  adda [$15]       14198  adda([vTicks])                  #15
              3103 e81e  blt  .absvw#18   14199  blt('.absvw#18')                #16
              3104 0500  ld   [x]         14200  ld([X])                         #17
              3105 e80a  blt  .absvw#20   14201  bmi('.absvw#20')                #18
              3106 1400  ld   $00,y       14202  ld(0,Y)                         #19
              3107 1403  ld   $03,y       14203  ld(hi('NEXTY'),Y)               #20
              3108 e000  jmp  y,$00       14204  jmp(Y,'NEXTY')                  #21
              3109 00f4  ld   $f4         14205  ld(-24/2)                       #22
                                          14206
                                          14207  label('.absvw#20')
.absvw#20:    310a 111d  ld   [$1d],x     14208  ld([vTmp],X)                    #20
              310b 0500  ld   [x]         14209  ld([X])                         #21
              310c 60ff  xora $ff         14210  xora(0xFF)                      #22
              310d 8001  adda $01         14211  adda(1)                         #23
              310e f017  beq  .absvw#26   14212  beq('.absvw#26')                #24
              310f c600  st   [x]         14213  st([X])                         #25
              3110 de00  st   [y,x++]     14214  st([Y,Xpp])                     #26
              3111 0500  ld   [x]         14215  ld([X])                         #27
              3112 60ff  xora $ff         14216  xora(255)                       #28
              3113 c600  st   [x]         14217  st([X])                         #29
              3114 1403  ld   $03,y       14218  ld(hi('NEXTY'),Y)               #30
              3115 e000  jmp  y,$00       14219  jmp(Y,'NEXTY')                  #31
              3116 00ef  ld   $ef         14220  ld(-34/2)                       #32
                                          14221
                                          14222  label('.absvw#26')
.absvw#26:    3117 de00  st   [y,x++]     14223  st([Y,Xpp])                     #26
              3118 0500  ld   [x]         14224  ld([X])                         #27
              3119 60ff  xora $ff         14225  xora(255)                       #28
              311a c600  st   [x]         14226  st([X])                         #29
              311b 1403  ld   $03,y       14227  ld(hi('NEXTY'),Y)               #30
              311c e000  jmp  y,$00       14228  jmp(Y,'NEXTY')                  #31
              311d 00ef  ld   $ef         14229  ld(-34/2)                       #32
                                          14230
                                          14231  label('.absvw#18')
.absvw#18:    311e 0022  ld   $22         14232  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              311f c202  st   [$02]       14233  st([vCpuSelect])                #19 restore PREFX2 instruction page
              3120 9401  adda $01,y       14234  adda(1,Y)                       #20 retry instruction
              3121 e000  jmp  y,$00       14235  jmp(Y,'NEXTY')                  #21
              3122 00f4  ld   $f4         14236  ld(-24/2)                       #22
                                          14237
                                          14238
                                          14239  # SCRLHR implementation
                                          14240  label('scrlhr#13')
scrlhr#13:    3123 c21d  st   [$1d]       14241  st([vTmp])                      #13 amount imm
              3124 1517  ld   [$17],y     14242  ld([vPC+1],Y)                   #14
              3125 de00  st   [y,x++]     14243  st([Y,Xpp])                     #15
              3126 00f8  ld   $f8         14244  ld(min(0,maxTicks-46/2))        #16
              3127 8115  adda [$15]       14245  adda([vTicks])                  #17
              3128 e842  blt  .scrlhr#20  14246  blt('.scrlhr#20')               #18 not enough time left, so retry
              3129 0d00  ld   [y,x]       14247  ld([Y,X])                       #19
              312a c22a  st   [$2a]       14248  st([sysArgs+6])                 #20 count imm
              312b de00  st   [y,x++]     14249  st([Y,Xpp])                     #21
              312c 0d00  ld   [y,x]       14250  ld([Y,X])                       #22 start imm
              312d 8200  adda ac          14251  adda(AC)                        #23
              312e 8001  adda $01         14252  adda(1)                         #24
              312f d22b  st   [$2b],x     14253  st([sysArgs+7],X)               #25 start_vtbl.lo
              3130 1401  ld   $01,y       14254  ld(1,Y)                         #26
              3131 011d  ld   [$1d]       14255  ld([vTmp])                      #27
              3132 8d00  adda [y,x]       14256  adda([Y,X])                     #28
              3133 ce00  st   [y,x]       14257  st([Y,X])                       #29
              3134 012a  ld   [$2a]       14258  ld([sysArgs+6])                 #30
              3135 8200  adda ac          14259  adda(AC)                        #31
              3136 912b  adda [$2b],x     14260  adda([sysArgs+7],X)             #32 end_vtbl.lo
              3137 011d  ld   [$1d]       14261  ld([vTmp])                      #33
              3138 60ff  xora $ff         14262  xora(0xFF)                      #34
              3139 8001  adda $01         14263  adda(1)                         #35
              313a 8d00  adda [y,x]       14264  adda([Y,X])                     #36
              313b ce00  st   [y,x]       14265  st([Y,X])                       #37
              313c 0116  ld   [$16]       14266  ld([vPC])                       #38
              313d 8002  adda $02         14267  adda(2)                         #39
              313e c216  st   [$16]       14268  st([vPC])                       #40
              313f 1403  ld   $03,y       14269  ld(hi('REENTER'),Y)             #41
              3140 e0cb  jmp  y,$cb       14270  jmp(Y,'REENTER')                #42
              3141 00e9  ld   $e9         14271  ld(-46/2)                       #43
                                          14272
                                          14273  label('.scrlhr#20')
.scrlhr#20:   3142 0116  ld   [$16]       14274  ld([vPC])                       #20
              3143 a002  suba $02         14275  suba(2)                         #21
              3144 c216  st   [$16]       14276  st([vPC])                       #22
              3145 1403  ld   $03,y       14277  ld(hi('REENTER'),Y)             #23
              3146 e0cb  jmp  y,$cb       14278  jmp(Y,'REENTER')                #24
              3147 00f2  ld   $f2         14279  ld(-28/2)                       #25
                                          14280
                                          14281
                                          14282  # IMIDI implementation
                                          14283  label('imidi#13')
imidi#13:     3148 1400  ld   $00,y       14284  ld(0,Y)                         #13
              3149 00fb  ld   $fb         14285  ld(min(0,maxTicks-40/2))        #14
              314a 8115  adda [$15]       14286  adda([vTicks])                  #15
              314b e869  blt  .imidi#18   14287  blt('.imidi#18')                #16 not enough time left, so retry
              314c 0d00  ld   [y,x]       14288  ld([Y,X])                       #17 midiStream.lo
              314d de00  st   [y,x++]     14289  st([Y,Xpp])                     #18
              314e c218  st   [$18]       14290  st([vAC])                       #19
              314f 0d00  ld   [y,x]       14291  ld([Y,X])                       #20 midiStream.hi
              3150 c219  st   [$19]       14292  st([vAC+1])                     #21
              3151 4118  ora  [$18]       14293  ora([vAC])                      #22
              3152 ec59  bne  .imidi#25   14294  bne('.imidi#25')                #23
              3153 0116  ld   [$16]       14295  ld([vPC])                       #24 midiStream = 0
              3154 8004  adda $04         14296  adda(4)                         #25
              3155 c216  st   [$16]       14297  st([vPC])                       #26 skip PMIDI, (next instruction)
              3156 1403  ld   $03,y       14298  ld(hi('REENTER'),Y)             #27
              3157 e0cb  jmp  y,$cb       14299  jmp(Y,'REENTER')                #28
              3158 00f0  ld   $f0         14300  ld(-32/2)                       #29
                                          14301
                                          14302  label('.imidi#25')
.imidi#25:    3159 0005  ld   $05         14303  ld(5)                           #25
              315a c22c  st   [$2c]       14304  st([soundTimer])                #26 pump soundTimer, (allows for 5 VBlanks of latency before audio disruption)
              315b 112b  ld   [$2b],x     14305  ld([sysArgs+7],X)               #27 midiDelay.lo
              315c 0500  ld   [x]         14306  ld([X])                         #28
              315d a001  suba $01         14307  suba(1)                         #29
              315e f866  ble  .imidi#32   14308  ble('.imidi#32')                #30
              315f c600  st   [x]         14309  st([X])                         #31
              3160 0116  ld   [$16]       14310  ld([vPC])                       #32 midiDelay.lo > 0
              3161 8004  adda $04         14311  adda(4)                         #33
              3162 c216  st   [$16]       14312  st([vPC])                       #34 skip PMIDI, (next instruction)
              3163 1403  ld   $03,y       14313  ld(hi('REENTER'),Y)             #35
              3164 e0cb  jmp  y,$cb       14314  jmp(Y,'REENTER')                #36
              3165 00ec  ld   $ec         14315  ld(-40/2)                       #37
                                          14316
                                          14317  label('.imidi#32')
.imidi#32:    3166 1403  ld   $03,y       14318  ld(hi('NEXTY'),Y)               #32 do PMIDI, (next instruction)
              3167 e000  jmp  y,$00       14319  jmp(Y,'NEXTY')                  #33
              3168 00ee  ld   $ee         14320  ld(-36/2)                       #34
                                          14321
                                          14322  label('.imidi#18')
.imidi#18:    3169 0021  ld   $21         14323  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              316a c202  st   [$02]       14324  st([vCpuSelect])                #19 restore PREFX3 instruction page
              316b 9401  adda $01,y       14325  adda(1,Y)                       #20 retry instruction
              316c e000  jmp  y,$00       14326  jmp(Y,'NEXTY')                  #21
              316d 00f4  ld   $f4         14327  ld(-24/2)                       #22
                                          14328
                                          14329
                                          14330  # PMIDI implementation
                                          14331  label('pmidi#13')
pmidi#13:     316e 1400  ld   $00,y       14332  ld(0,Y)                         #13
              316f 00e3  ld   $e3         14333  ld(min(0,maxTicks-88/2))        #14
              3170 8115  adda [$15]       14334  adda([vTicks])                  #15
              3171 e8ad  blt  .pmidi#18   14335  blt('.pmidi#18')                #16 not enough time left, so retry
              3172 1519  ld   [$19],y     14336  ld([vAC+1],Y)                   #17
              3173 1118  ld   [$18],x     14337  ld([vAC],X)                     #18
              3174 0118  ld   [$18]       14338  ld([vAC])                       #19
              3175 8001  adda $01         14339  adda(1)                         #20
              3176 c218  st   [$18]       14340  st([vAC])                       #21
              3177 f07a  beq  $317a       14341  beq(pc()+3)                     #22
              3178 fc7b  bra  $317b       14342  bra(pc()+3)                     #23
              3179 0000  ld   $00         14343  ld(0)                           #24
              317a 0001  ld   $01         14344  ld(1)                           #24 (!)
              317b 8119  adda [$19]       14345  adda([vAC+1])                   #25
              317c c219  st   [$19]       14346  st([vAC+1])                     #26 midiStream++
              317d 0d00  ld   [y,x]       14347  ld([Y,X])                       #27
              317e c2c0  st   [$c0]       14348  st([0xC0])                      #28 midiCommand.lo
              317f 20f0  anda $f0         14349  anda(0xF0)                      #29
              3180 6090  xora $90         14350  xora(0x90)                      #30
              3181 ecb2  bne  .pmidi#33   14351  bne('.pmidi#33')                #31 end note
              3182 1519  ld   [$19],y     14352  ld([vAC+1],Y)                   #32
              3183 1118  ld   [$18],x     14353  ld([vAC],X)                     #33
              3184 0118  ld   [$18]       14354  ld([vAC])                       #34
              3185 8001  adda $01         14355  adda(1)                         #35
              3186 c218  st   [$18]       14356  st([vAC])                       #36
              3187 f08a  beq  $318a       14357  beq(pc()+3)                     #37
              3188 fc8b  bra  $318b       14358  bra(pc()+3)                     #38
              3189 0000  ld   $00         14359  ld(0)                           #39
              318a 0001  ld   $01         14360  ld(1)                           #39 (!)
              318b 8119  adda [$19]       14361  adda([vAC+1])                   #40
              318c c219  st   [$19]       14362  st([vAC+1])                     #41 midiStream++
              318d 0031  ld   $31         14363  ld(hi('pmidi#13'))              #42
              318e c2c1  st   [$c1]       14364  st([0xC1])                      #43
              318f 0098  ld   $98         14365  ld('.pmidi#59_0')               #44 low byte of low midi return address
              3190 c21d  st   [$1d]       14366  st([vTmp])                      #45
              3191 0d00  ld   [y,x]       14367  ld([Y,X])                       #46
              3192 c2c2  st   [$c2]       14368  st([0xC2])                      #47 note
              3193 a00b  suba $0b         14369  suba(11)                        #48 note -= 11
              3194 8200  adda ac          14370  adda(AC)                        #49 note*2
              3195 1409  ld   $09,y       14371  ld(hi('noteTrampoline'),Y)      #50
              3196 e0c0  jmp  y,$c0       14372  jmp(Y,'noteTrampoline')         #51
              3197 c2c3  st   [$c3]       14373  st([0xC3])                      #52 index, (low freq byte)
                                          14374  label('.pmidi#59_0')
.pmidi#59_0:  3198 c2c2  st   [$c2]       14375  st([0xC2])                      #59 freq.lo
              3199 009f  ld   $9f         14376  ld('.pmidi#72')                 #60
              319a c21d  st   [$1d]       14377  st([vTmp])                      #61 low byte of high midi return address
              319b 1409  ld   $09,y       14378  ld(hi('noteTrampoline'),Y)      #62
              319c 01c3  ld   [$c3]       14379  ld([0xC3])                      #63
              319d e0c0  jmp  y,$c0       14380  jmp(Y,'noteTrampoline')         #64
              319e 8001  adda $01         14381  adda(1)                         #65 index + 1, (high freq byte)
                                          14382  label('.pmidi#72')
.pmidi#72:    319f c2c3  st   [$c3]       14383  st([0xC3])                      #72 freq.hi
              31a0 01c0  ld   [$c0]       14384  ld([0xC0])                      #73 midiCommand.lo
              31a1 2003  anda $03         14385  anda(3)                         #74
              31a2 9401  adda $01,y       14386  adda(1,Y)                       #75 chan.hi
              31a3 10fc  ld   $fc,x       14387  ld(0xFC,X)                      #76 chan.lo
              31a4 01c2  ld   [$c2]       14388  ld([0xC2])                      #77
              31a5 de00  st   [y,x++]     14389  st([Y,Xpp])                     #78
              31a6 01c3  ld   [$c3]       14390  ld([0xC3])                      #79
              31a7 ce00  st   [y,x]       14391  st([Y,X])                       #80 [chan] = freq
              31a8 0021  ld   $21         14392  ld(hi('PREFX3_PAGE'))           #81 ENTER is at $(n-1)ff, where n = instruction page
              31a9 c202  st   [$02]       14393  st([vCpuSelect])                #82 restore PREFX3 instruction page
              31aa 9401  adda $01,y       14394  adda(1,Y)                       #83 restart instruction
              31ab e0cb  jmp  y,$cb       14395  jmp(Y,'REENTER')                #84
              31ac 00d4  ld   $d4         14396  ld(-88/2)                       #85
                                          14397
                                          14398  label('.pmidi#18')
.pmidi#18:    31ad 0021  ld   $21         14399  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              31ae c202  st   [$02]       14400  st([vCpuSelect])                #19 restore PREFX3 instruction page
              31af 9401  adda $01,y       14401  adda(1,Y)                       #20 retry instruction
              31b0 e000  jmp  y,$00       14402  jmp(Y,'NEXTY')                  #21
              31b1 00f4  ld   $f4         14403  ld(-24/2)                       #22
                                          14404
                                          14405  # end note
                                          14406  label('.pmidi#33')
.pmidi#33:    31b2 01c0  ld   [$c0]       14407  ld([0xC0])                      #33 midiCommand.lo
              31b3 20f0  anda $f0         14408  anda(0xF0)                      #34
              31b4 6080  xora $80         14409  xora(0x80)                      #35
              31b5 ecc3  bne  .pmidi#38   14410  bne('.pmidi#38')                #36 new segment
              31b6 01c0  ld   [$c0]       14411  ld([0xC0])                      #37 midiCommand.lo
              31b7 2003  anda $03         14412  anda(3)                         #38
              31b8 9401  adda $01,y       14413  adda(1,Y)                       #39 chan.hi
              31b9 10fc  ld   $fc,x       14414  ld(0xFC,X)                      #40 chan.lo
              31ba dc00  st   $00,[y,x++] 14415  st(0,[Y,Xpp])                   #41
              31bb dc00  st   $00,[y,x++] 14416  st(0,[Y,Xpp])                   #42 [chan] = freq
              31bc dc00  st   $00,[y,x++] 14417  st(0,[Y,Xpp])                   #43
              31bd cc00  st   $00,[y,x]   14418  st(0,[Y,X])                     #44
              31be 0021  ld   $21         14419  ld(hi('PREFX3_PAGE'))           #45 ENTER is at $(n-1)ff, where n = instruction page
              31bf c202  st   [$02]       14420  st([vCpuSelect])                #46 restore PREFX3 instruction page
              31c0 9401  adda $01,y       14421  adda(1,Y)                       #47 restart instruction
              31c1 e0cb  jmp  y,$cb       14422  jmp(Y,'REENTER')                #48
              31c2 00e6  ld   $e6         14423  ld(-52/2)                       #49
                                          14424
                                          14425  # new segment
                                          14426  label('.pmidi#38')
.pmidi#38:    31c3 01c0  ld   [$c0]       14427  ld([0xC0])                      #38 midiCommand.lo
              31c4 20f0  anda $f0         14428  anda(0xF0)                      #39
              31c5 60d0  xora $d0         14429  xora(0xD0)                      #40
              31c6 ecdf  bne  .pmidi#43   14430  bne('.pmidi#43')                #41 new delay
              31c7 1519  ld   [$19],y     14431  ld([vAC+1],Y)                   #42
              31c8 1118  ld   [$18],x     14432  ld([vAC],X)                     #43
              31c9 0d00  ld   [y,x]       14433  ld([Y,X])                       #44 peek(midiStream)
              31ca c218  st   [$18]       14434  st([vAC])                       #45 newStream.lo
              31cb de00  st   [y,x++]     14435  st([Y,Xpp])                     #46
              31cc 0d00  ld   [y,x]       14436  ld([Y,X])                       #47 peek(midiStream + 1)
              31cd c219  st   [$19]       14437  st([vAC+1])                     #48 newStream.hi
              31ce 1400  ld   $00,y       14438  ld(0,Y)                         #49
              31cf 112a  ld   [$2a],x     14439  ld([sysArgs+6],X)               #50 midiStream.lo
              31d0 0118  ld   [$18]       14440  ld([vAC])                       #51
              31d1 de00  st   [y,x++]     14441  st([Y,Xpp])                     #52
              31d2 0119  ld   [$19]       14442  ld([vAC+1])                     #53
              31d3 ce00  st   [y,x]       14443  st([Y,X])                       #54 midiStream = vAC
              31d4 0118  ld   [$18]       14444  ld([vAC])                       #55
              31d5 4119  ora  [$19]       14445  ora([vAC+1])                    #56
              31d6 ecda  bne  .pmidi#59_1 14446  bne('.pmidi#59_1')              #57 continue
              31d7 1403  ld   $03,y       14447  ld(hi('NEXTY'),Y)               #58 finished
              31d8 e000  jmp  y,$00       14448  jmp(Y,'NEXTY')                  #59
              31d9 00e1  ld   $e1         14449  ld(-62/2)                       #60
                                          14450
                                          14451  label('.pmidi#59_1')
.pmidi#59_1:  31da 0021  ld   $21         14452  ld(hi('PREFX3_PAGE'))           #59 ENTER is at $(n-1)ff, where n = instruction page
              31db c202  st   [$02]       14453  st([vCpuSelect])                #60 restore PREFX3 instruction page
              31dc 9401  adda $01,y       14454  adda(1,Y)                       #61 restart instruction
              31dd e0cb  jmp  y,$cb       14455  jmp(Y,'REENTER')                #62
              31de 00df  ld   $df         14456  ld(-66/2)                       #63
                                          14457
                                          14458  # new delay
                                          14459  label('.pmidi#43')
.pmidi#43:    31df 1400  ld   $00,y       14460  ld(0,Y)                         #43
              31e0 112a  ld   [$2a],x     14461  ld([sysArgs+6],X)               #44 midiStream.lo
              31e1 0118  ld   [$18]       14462  ld([vAC])                       #45
              31e2 de00  st   [y,x++]     14463  st([Y,Xpp])                     #46
              31e3 0119  ld   [$19]       14464  ld([vAC+1])                     #47
              31e4 ce00  st   [y,x]       14465  st([Y,X])                       #48 midiStream = vAC
              31e5 112b  ld   [$2b],x     14466  ld([sysArgs+7],X)               #49 midiDelay.lo
              31e6 01c0  ld   [$c0]       14467  ld([0xC0])                      #50 midiCommand.lo, (delay)
              31e7 207f  anda $7f         14468  anda(0x7F)                      #51
              31e8 c600  st   [x]         14469  st([X])                         #52
              31e9 1403  ld   $03,y       14470  ld(hi('REENTER'),Y)             #53
              31ea e0cb  jmp  y,$cb       14471  jmp(Y,'REENTER')                #54
              31eb 00e3  ld   $e3         14472  ld(-58/2)                       #55
                                          14473
                                          14474
              31ec 0200  nop              14475  fillers(until=0xff)
              31ed 0200  nop
              31ee 0200  nop
              * 19 times
              31ff 0200  nop              14476  align(0x100, size=0x100)
                                          14477
                                          14478  #-----------------------------------------------------------------------
                                          14479  #  More vCPU instruction implementations, (0x3200)
                                          14480  #-----------------------------------------------------------------------
                                          14481  #
                                          14482  # MOVL implementation, (lb3361)
                                          14483  label('movl#13')
movl#13:      3200 9001  adda $01,x       14484  adda(1,X)                       #13
              3201 00fb  ld   $fb         14485  ld(min(0,maxTicks-40/2))        #14
              3202 8115  adda [$15]       14486  adda([vTicks])                  #15
              3203 e81a  blt  movl#18     14487  blt('movl#18')                  #16
              3204 1400  ld   $00,y       14488  ld(0,Y)                         #17
              3205 0d00  ld   [y,x]       14489  ld([Y,X])                       #18
              3206 de00  st   [y,x++]     14490  st([Y,Xpp])                     #19
              3207 c2c8  st   [$c8]       14491  st([vTmpL])                     #20
              3208 0d00  ld   [y,x]       14492  ld([Y,X])                       #21
              3209 de00  st   [y,x++]     14493  st([Y,Xpp])                     #22
              320a c2c9  st   [$c9]       14494  st([vTmpL+1])                   #23
              320b 0d00  ld   [y,x]       14495  ld([Y,X])                       #24
              320c c2ca  st   [$ca]       14496  st([vTmpL+2])                   #25
              320d 112a  ld   [$2a],x     14497  ld([sysArgs+6],X)               #26
              320e 0d00  ld   [y,x]       14498  ld([Y,X])                       #27
              320f 112b  ld   [$2b],x     14499  ld([sysArgs+7],X)               #28
              3210 de00  st   [y,x++]     14500  st([Y,Xpp])                     #29
              3211 01c8  ld   [$c8]       14501  ld([vTmpL])                     #30
              3212 de00  st   [y,x++]     14502  st([Y,Xpp])                     #31
              3213 01c9  ld   [$c9]       14503  ld([vTmpL+1])                   #32
              3214 de00  st   [y,x++]     14504  st([Y,Xpp])                     #33
              3215 01ca  ld   [$ca]       14505  ld([vTmpL+2])                   #34
              3216 de00  st   [y,x++]     14506  st([Y,Xpp])                     #35
              3217 1403  ld   $03,y       14507  ld(hi('NEXTY'),Y)               #36
              3218 e000  jmp  y,$00       14508  jmp(Y,'NEXTY')                  #37
              3219 00ec  ld   $ec         14509  ld(-40/2)                       #38
                                          14510  label('movl#18')
movl#18:      321a 0021  ld   $21         14511  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              321b c202  st   [$02]       14512  st([vCpuSelect])                #19 restore PREFX3 instruction page
              321c 9401  adda $01,y       14513  adda(1,Y)                       #20 retry instruction
              321d e000  jmp  y,$00       14514  jmp(Y,'NEXTY')                  #21
              321e 00f4  ld   $f4         14515  ld(-24/2)                       #22
                                          14516
                                          14517
                                          14518  # MOVF implementation, (lb3361)
                                          14519  label('movf#13')
movf#13:      321f 9001  adda $01,x       14520  adda(1,X)                       #13
              3220 00f8  ld   $f8         14521  ld(min(0,maxTicks-46/2))        #14
              3221 8115  adda [$15]       14522  adda([vTicks])                  #15
              3222 e81a  blt  movl#18     14523  blt('movl#18')                  #16
              3223 1400  ld   $00,y       14524  ld(0,Y)                         #17
              3224 0d00  ld   [y,x]       14525  ld([Y,X])                       #18
              3225 de00  st   [y,x++]     14526  st([Y,Xpp])                     #19
              3226 c2c8  st   [$c8]       14527  st([vTmpL])                     #20
              3227 0d00  ld   [y,x]       14528  ld([Y,X])                       #21
              3228 de00  st   [y,x++]     14529  st([Y,Xpp])                     #22
              3229 c2c9  st   [$c9]       14530  st([vTmpL+1])                   #23
              322a 0d00  ld   [y,x]       14531  ld([Y,X])                       #24
              322b de00  st   [y,x++]     14532  st([Y,Xpp])                     #25
              322c c2ca  st   [$ca]       14533  st([vTmpL+2])                   #26
              322d 0d00  ld   [y,x]       14534  ld([Y,X])                       #27
              322e c2cb  st   [$cb]       14535  st([vTmpL+3])                   #28
              322f 112a  ld   [$2a],x     14536  ld([sysArgs+6],X)               #29
              3230 0d00  ld   [y,x]       14537  ld([Y,X])                       #30
              3231 112b  ld   [$2b],x     14538  ld([sysArgs+7],X)               #31
              3232 de00  st   [y,x++]     14539  st([Y,Xpp])                     #32
              3233 01c8  ld   [$c8]       14540  ld([vTmpL])                     #33
              3234 de00  st   [y,x++]     14541  st([Y,Xpp])                     #34
              3235 01c9  ld   [$c9]       14542  ld([vTmpL+1])                   #35
              3236 de00  st   [y,x++]     14543  st([Y,Xpp])                     #36
              3237 01ca  ld   [$ca]       14544  ld([vTmpL+2])                   #37
              3238 de00  st   [y,x++]     14545  st([Y,Xpp])                     #38
              3239 01cb  ld   [$cb]       14546  ld([vTmpL+3])                   #39
              323a de00  st   [y,x++]     14547  st([Y,Xpp])                     #40
              323b 0200  nop              14548  nop()                           #41
              323c 1403  ld   $03,y       14549  ld(hi('NEXTY'),Y)               #42
              323d e000  jmp  y,$00       14550  jmp(Y,'NEXTY')                  #43
              323e 00e9  ld   $e9         14551  ld(-46/2)                       #44
                                          14552
                                          14553
                                          14554  # ADDLP implementation, (lb3361)
                                          14555  label('addlp#13')
addlp#13:     323f 80ee  adda $ee         14556  adda(min(0,maxTicks-66/2))      #13
              3240 e87a  blt  addlp#16    14557  blt('addlp#16')                 #14
              3241 1519  ld   [$19],y     14558  ld([vAC+1],Y)                   #15
              3242 1118  ld   [$18],x     14559  ld([vAC],X)                     #16
              3243 01c4  ld   [$c4]       14560  ld([vLAC])                      #17 lac0
              3244 8d00  adda [y,x]       14561  adda([Y,X])                     #18 +arg0
              3245 c2c4  st   [$c4]       14562  st([vLAC])                      #19
              3246 e84a  blt  addlp#22    14563  bmi('addlp#22')                 #20
              3247 ad00  suba [y,x]       14564  suba([Y,X])                     #21 reconstruct lac0
              3248 fc4c  bra  addlp#24    14565  bra('addlp#24')                 #22
              3249 4d00  ora  [y,x]       14566  ora([Y,X])                      #23
                                          14567  label('addlp#22')
addlp#22:     324a 2d00  anda [y,x]       14568  anda([Y,X])                     #22
              324b 0200  nop              14569  nop()                           #23
                                          14570  label('addlp#24')
addlp#24:     324c 3080  anda $80,x       14571  anda(0x80,X)                    #24
              324d 0500  ld   [x]         14572  ld([X])                         #25
              324e c21d  st   [$1d]       14573  st([vTmp])                      #26 save carry
              324f 0118  ld   [$18]       14574  ld([vAC])                       #27
              3250 9001  adda $01,x       14575  adda(1,X)                       #28
              3251 01c5  ld   [$c5]       14576  ld([vLAC+1])                    #29 lac1
              3252 811d  adda [$1d]       14577  adda([vTmp])                    #30 +carry
              3253 8d00  adda [y,x]       14578  adda([Y,X])                     #31 +arg1
              3254 c2c5  st   [$c5]       14579  st([vLAC+1])                    #32
              3255 e85a  blt  addlp#35    14580  bmi('addlp#35')                 #33
              3256 ad00  suba [y,x]       14581  suba([Y,X])                     #34
              3257 a11d  suba [$1d]       14582  suba([vTmp])                    #35 reconstruct lac1
              3258 fc5d  bra  addlp#38    14583  bra('addlp#38')                 #36
              3259 4d00  ora  [y,x]       14584  ora([Y,X])                      #37
                                          14585  label('addlp#35')
addlp#35:     325a a11d  suba [$1d]       14586  suba([vTmp])                    #35
              325b 2d00  anda [y,x]       14587  anda([Y,X])                     #36
              325c 0200  nop              14588  nop()                           #37
                                          14589  label('addlp#38')
addlp#38:     325d 3080  anda $80,x       14590  anda(0x80,X)                    #38
              325e 0500  ld   [x]         14591  ld([X])                         #39
              325f c21d  st   [$1d]       14592  st([vTmp])                      #40
              3260 0118  ld   [$18]       14593  ld([vAC])                       #41
              3261 9002  adda $02,x       14594  adda(2,X)                       #42
              3262 01c6  ld   [$c6]       14595  ld([vLAC+2])                    #43 lac2
              3263 811d  adda [$1d]       14596  adda([vTmp])                    #44 +carry
              3264 8d00  adda [y,x]       14597  adda([Y,X])                     #45 +arg2
              3265 c2c6  st   [$c6]       14598  st([vLAC+2])                    #46
              3266 e86b  blt  addlp#49    14599  bmi('addlp#49')                 #47
              3267 ad00  suba [y,x]       14600  suba([Y,X])                     #48
              3268 a11d  suba [$1d]       14601  suba([vTmp])                    #49 reconstruct lac2
              3269 fc6e  bra  addlp#52    14602  bra('addlp#52')                 #50
              326a 4d00  ora  [y,x]       14603  ora([Y,X])                      #51
                                          14604  label('addlp#49')
addlp#49:     326b a11d  suba [$1d]       14605  suba([vTmp])                    #49
              326c 2d00  anda [y,x]       14606  anda([Y,X])                     #50
              326d 0200  nop              14607  nop()                           #51
                                          14608  label('addlp#52')
addlp#52:     326e 3080  anda $80,x       14609  anda(0x80,X)                    #52
              326f 0500  ld   [x]         14610  ld([X])                         #53
              3270 c21d  st   [$1d]       14611  st([vTmp])                      #54
              3271 0118  ld   [$18]       14612  ld([vAC])                       #55
              3272 9003  adda $03,x       14613  adda(3,X)                       #56
              3273 01c7  ld   [$c7]       14614  ld([vLAC+3])                    #57 lac3
              3274 811d  adda [$1d]       14615  adda([vTmp])                    #58 +carry
              3275 8d00  adda [y,x]       14616  adda([Y,X])                     #59 +arg3
              3276 c2c7  st   [$c7]       14617  st([vLAC+3])                    #60
              3277 1403  ld   $03,y       14618  ld(hi('REENTER'),Y)             #61
              3278 e0cb  jmp  y,$cb       14619  jmp(Y,'REENTER')                #62
              3279 00df  ld   $df         14620  ld(-66/2)                       #63
                                          14621  label('addlp#16')
addlp#16:     327a 0023  ld   $23         14622  ld(hi('PREFX1_PAGE'))           #16 restart
              327b c202  st   [$02]       14623  st([vCpuSelect])                #17
              327c 9401  adda $01,y       14624  adda(1,Y)                       #18
              327d e000  jmp  y,$00       14625  jmp(Y,'NEXTY')                  #19
              327e 00f5  ld   $f5         14626  ld(-22/2)                       #20
                                          14627
                                          14628
                                          14629  # SUBLP implementation, (lb3361)
                                          14630  label('sublp#13')
sublp#13:     327f 80f1  adda $f1         14631  adda(min(0,maxTicks-60/2))      #13
              3280 e87a  blt  addlp#16    14632  blt('addlp#16')                 #14
              3281 1519  ld   [$19],y     14633  ld([vAC+1],Y)                   #15
              3282 1118  ld   [$18],x     14634  ld([vAC],X)                     #16
              3283 01c4  ld   [$c4]       14635  ld([vLAC])                      #17 lac0
              3284 e889  blt  sublp#20    14636  bmi('sublp#20')                 #18
              3285 ad00  suba [y,x]       14637  suba([Y,X])                     #19 -arg0
              3286 c2c4  st   [$c4]       14638  st([vLAC])                      #20
              3287 fc8c  bra  sublp#23    14639  bra('sublp#23')                 #21
              3288 4d00  ora  [y,x]       14640  ora([Y,X])                      #22
                                          14641  label('sublp#20')
sublp#20:     3289 c2c4  st   [$c4]       14642  st([vLAC])                      #20
              328a 2d00  anda [y,x]       14643  anda([Y,X])                     #21
              328b 0200  nop              14644  nop()                           #22
                                          14645  label('sublp#23')
sublp#23:     328c 3080  anda $80,x       14646  anda(0x80,X)                    #23
              328d 0500  ld   [x]         14647  ld([X])                         #24
              328e c21d  st   [$1d]       14648  st([vTmp])                      #25 borrow
              328f 0118  ld   [$18]       14649  ld([vAC])                       #26
              3290 9001  adda $01,x       14650  adda(1,X)                       #27
              3291 01c5  ld   [$c5]       14651  ld([vLAC+1])                    #28 lac1
              3292 e898  blt  sublp#31    14652  bmi('sublp#31')                 #29
              3293 ad00  suba [y,x]       14653  suba([Y,X])                     #30 -arg1
              3294 a11d  suba [$1d]       14654  suba([vTmp])                    #31 -borrow
              3295 c2c5  st   [$c5]       14655  st([vLAC+1])                    #32
              3296 fc9c  bra  sublp#35    14656  bra('sublp#35')                 #33
              3297 4d00  ora  [y,x]       14657  ora([Y,X])                      #34
                                          14658  label('sublp#31')
sublp#31:     3298 a11d  suba [$1d]       14659  suba([vTmp])                    #31
              3299 c2c5  st   [$c5]       14660  st([vLAC+1])                    #32
              329a 2d00  anda [y,x]       14661  anda([Y,X])                     #33
              329b 0200  nop              14662  nop()                           #34
                                          14663  label('sublp#35')
sublp#35:     329c 3080  anda $80,x       14664  anda(0x80,X)                    #35
              329d 0500  ld   [x]         14665  ld([X])                         #36
              329e c21d  st   [$1d]       14666  st([vTmp])                      #37
              329f 0118  ld   [$18]       14667  ld([vAC])                       #38
              32a0 9002  adda $02,x       14668  adda(2,X)                       #39
              32a1 01c6  ld   [$c6]       14669  ld([vLAC+2])                    #40 lac2
              32a2 e8a8  blt  sublp#43    14670  bmi('sublp#43')                 #41
              32a3 ad00  suba [y,x]       14671  suba([Y,X])                     #42 -arg2
              32a4 a11d  suba [$1d]       14672  suba([vTmp])                    #43 -borrow
              32a5 c2c6  st   [$c6]       14673  st([vLAC+2])                    #44
              32a6 fcac  bra  sublp#47    14674  bra('sublp#47')                 #45
              32a7 4d00  ora  [y,x]       14675  ora([Y,X])                      #46
                                          14676  label('sublp#43')
sublp#43:     32a8 a11d  suba [$1d]       14677  suba([vTmp])                    #43
              32a9 c2c6  st   [$c6]       14678  st([vLAC+2])                    #44
              32aa 2d00  anda [y,x]       14679  anda([Y,X])                     #45
              32ab 0200  nop              14680  nop()                           #46
                                          14681  label('sublp#47')
sublp#47:     32ac 3080  anda $80,x       14682  anda(0x80,X)                    #47
              32ad 0500  ld   [x]         14683  ld([X])                         #48
              32ae c21d  st   [$1d]       14684  st([vTmp])                      #49
              32af 0118  ld   [$18]       14685  ld([vAC])                       #50
              32b0 9003  adda $03,x       14686  adda(3,X)                       #51
              32b1 01c7  ld   [$c7]       14687  ld([vLAC+3])                    #52 lac3
              32b2 ad00  suba [y,x]       14688  suba([Y,X])                     #53 -arg3
              32b3 a11d  suba [$1d]       14689  suba([vTmp])                    #54 -borrow
              32b4 c2c7  st   [$c7]       14690  st([vLAC+3])                    #55
              32b5 1403  ld   $03,y       14691  ld(hi('NEXTY'),Y)               #56
              32b6 e000  jmp  y,$00       14692  jmp(Y,'NEXTY')                  #57
              32b7 00e2  ld   $e2         14693  ld(-60/2)                       #58
                                          14694
                                          14695
                                          14696  # ANDLP implementation, (lb3361)
                                          14697  label('andlp#13')
andlp#13:     32b8 80fa  adda $fa         14698  adda(min(0,maxTicks-42/2))      #13
              32b9 e87a  blt  addlp#16    14699  blt('addlp#16')                 #14
              32ba 1519  ld   [$19],y     14700  ld([vAC+1],Y)                   #15
              32bb 1118  ld   [$18],x     14701  ld([vAC],X)                     #16
              32bc 0d00  ld   [y,x]       14702  ld([Y,X])                       #17
              32bd de00  st   [y,x++]     14703  st([Y,Xpp])                     #18
              32be 21c4  anda [$c4]       14704  anda([vLAC+0])                  #19
              32bf c2c4  st   [$c4]       14705  st([vLAC+0])                    #20
              32c0 0d00  ld   [y,x]       14706  ld([Y,X])                       #21
              32c1 de00  st   [y,x++]     14707  st([Y,Xpp])                     #22
              32c2 21c5  anda [$c5]       14708  anda([vLAC+1])                  #23
              32c3 c2c5  st   [$c5]       14709  st([vLAC+1])                    #24
              32c4 0d00  ld   [y,x]       14710  ld([Y,X])                       #25
              32c5 de00  st   [y,x++]     14711  st([Y,Xpp])                     #26
              32c6 21c6  anda [$c6]       14712  anda([vLAC+2])                  #27
              32c7 c2c6  st   [$c6]       14713  st([vLAC+2])                    #28
              32c8 0d00  ld   [y,x]       14714  ld([Y,X])                       #29
              32c9 21c7  anda [$c7]       14715  anda([vLAC+3])                  #30
              32ca 0200  nop              14716  nop()                           #31
                                          14717  label('andlp#32')
andlp#32:     32cb c2c7  st   [$c7]       14718  st([vLAC+3])                    #32
              32cc c219  st   [$19]       14719  st([vAC+1])                     #33
              32cd 01c4  ld   [$c4]       14720  ld([vLAC+0])                    #34
              32ce 41c5  ora  [$c5]       14721  ora([vLAC+1])                   #35
              32cf 41c6  ora  [$c6]       14722  ora([vLAC+2])                   #36
              32d0 c218  st   [$18]       14723  st([vAC])                       #37
              32d1 1403  ld   $03,y       14724  ld(hi('NEXTY'),Y)               #38
              32d2 e000  jmp  y,$00       14725  jmp(Y,'NEXTY')                  #39
              32d3 00eb  ld   $eb         14726  ld(-42/2)                       #40
                                          14727
                                          14728
                                          14729  # ORLP implementation, (lb3361)
                                          14730  label('orlp#13')
orlp#13:      32d4 80fa  adda $fa         14731  adda(min(0,maxTicks-42/2))      #13
              32d5 e87a  blt  addlp#16    14732  blt('addlp#16')                 #14
              32d6 1519  ld   [$19],y     14733  ld([vAC+1],Y)                   #15
              32d7 1118  ld   [$18],x     14734  ld([vAC],X)                     #16
              32d8 0d00  ld   [y,x]       14735  ld([Y,X])                       #17
              32d9 de00  st   [y,x++]     14736  st([Y,Xpp])                     #18
              32da 41c4  ora  [$c4]       14737  ora([vLAC+0])                   #19
              32db c2c4  st   [$c4]       14738  st([vLAC+0])                    #20
              32dc 0d00  ld   [y,x]       14739  ld([Y,X])                       #21
              32dd de00  st   [y,x++]     14740  st([Y,Xpp])                     #22
              32de 41c5  ora  [$c5]       14741  ora([vLAC+1])                   #23
              32df c2c5  st   [$c5]       14742  st([vLAC+1])                    #24
              32e0 0d00  ld   [y,x]       14743  ld([Y,X])                       #25
              32e1 de00  st   [y,x++]     14744  st([Y,Xpp])                     #26
              32e2 41c6  ora  [$c6]       14745  ora([vLAC+2])                   #27
              32e3 c2c6  st   [$c6]       14746  st([vLAC+2])                    #28
              32e4 0d00  ld   [y,x]       14747  ld([Y,X])                       #29
              32e5 fccb  bra  andlp#32    14748  bra('andlp#32')                 #30
              32e6 41c7  ora  [$c7]       14749  ora([vLAC+3])                   #31
                                          14750
                                          14751
                                          14752  # XORLP implementation, (lb3361)
                                          14753  label('xorlp#13')
xorlp#13:     32e7 80fa  adda $fa         14754  adda(min(0,maxTicks-42/2))      #13
              32e8 e87a  blt  addlp#16    14755  blt('addlp#16')                 #14
              32e9 1519  ld   [$19],y     14756  ld([vAC+1],Y)                   #15
              32ea 1118  ld   [$18],x     14757  ld([vAC],X)                     #16
              32eb 0d00  ld   [y,x]       14758  ld([Y,X])                       #17
              32ec de00  st   [y,x++]     14759  st([Y,Xpp])                     #18
              32ed 61c4  xora [$c4]       14760  xora([vLAC+0])                  #19
              32ee c2c4  st   [$c4]       14761  st([vLAC+0])                    #20
              32ef 0d00  ld   [y,x]       14762  ld([Y,X])                       #21
              32f0 de00  st   [y,x++]     14763  st([Y,Xpp])                     #22
              32f1 61c5  xora [$c5]       14764  xora([vLAC+1])                  #23
              32f2 c2c5  st   [$c5]       14765  st([vLAC+1])                    #24
              32f3 0d00  ld   [y,x]       14766  ld([Y,X])                       #25
              32f4 de00  st   [y,x++]     14767  st([Y,Xpp])                     #26
              32f5 61c6  xora [$c6]       14768  xora([vLAC+2])                  #27
              32f6 c2c6  st   [$c6]       14769  st([vLAC+2])                    #28
              32f7 0d00  ld   [y,x]       14770  ld([Y,X])                       #29
              32f8 fccb  bra  andlp#32    14771  bra('andlp#32')                 #30
              32f9 61c7  xora [$c7]       14772  xora([vLAC+3])                  #31
                                          14773
                                          14774
              32fa 0200  nop              14775  fillers(until=0xff)
              32fb 0200  nop
              32fc 0200  nop
              * 5 times
              32ff 0200  nop              14776  align(0x100, size=0x100)
                                          14777
                                          14778  #-----------------------------------------------------------------------
                                          14779  #  More vCPU instruction implementations, (0x3300)
                                          14780  #-----------------------------------------------------------------------
                                          14781  #
                                          14782  # NCOPY implementation, (lb3361)
                                          14783  label('ncopy#16')
ncopy#16:     3300 0022  ld   $22         14784  ld(hi('PREFX2_PAGE'))           #16 restart
              3301 c202  st   [$02]       14785  st([vCpuSelect])                #17
              3302 9401  adda $01,y       14786  adda(1,Y)                       #18
              3303 e000  jmp  y,$00       14787  jmp(Y,'NEXTY')                  #19
              3304 00f5  ld   $f5         14788  ld(-22/2)                       #20
                                          14789
                                          14790  label('ncopy#11')
ncopy#11:     3305 8115  adda [$15]       14791  adda([vTicks])                  #11
              3306 c215  st   [$15]       14792  st([vTicks])                    #12
                                          14793  label('ncopy#13')               #-- entry point
ncopy#13:     3307 80eb  adda $eb         14794  adda(min(0,maxTicks-(22+50)/2)) #13 time for longest path (72 cycles)
              3308 e800  blt  ncopy#16    14795  blt('ncopy#16')                 #14 > restart
              3309 0118  ld   [$18]       14796  ld([vAC])                       #15
              330a 20fc  anda $fc         14797  anda(0xfc)                      #16
              330b 60fc  xora $fc         14798  xora(0xfc)                      #17
              330c f04e  beq  ncopy#20    14799  beq('ncopy#20')                 #18 > slow because src crosses page boundary
              330d 01cc  ld   [$cc]       14800  ld([vDST])                      #19
              330e 20fc  anda $fc         14801  anda(0xfc)                      #20
              330f 60fc  xora $fc         14802  xora(0xfc)                      #21
              3310 f052  beq  ncopy#24    14803  beq('ncopy#24')                 #22 > slow because dst crosses page boundnary
              3311 012b  ld   [$2b]       14804  ld([sysArgs+7])                 #23
              3312 20fc  anda $fc         14805  anda(0xfc)                      #24
              3313 f03a  beq  ncopy#27    14806  beq('ncopy#27')                 #25 > slow because n<4 but no page crossings
              3314 1519  ld   [$19],y     14807  ld([vAC+1],Y)                   #26
              3315 1118  ld   [$18],x     14808  ld([vAC],X)                     #27 four bytes burst
              3316 0d00  ld   [y,x]       14809  ld([Y,X])                       #28
              3317 de00  st   [y,x++]     14810  st([Y,Xpp])                     #29
              3318 c2c8  st   [$c8]       14811  st([vTmpL])                     #30
              3319 0d00  ld   [y,x]       14812  ld([Y,X])                       #31
              331a de00  st   [y,x++]     14813  st([Y,Xpp])                     #32
              331b c2c9  st   [$c9]       14814  st([vTmpL+1])                   #33
              331c 0d00  ld   [y,x]       14815  ld([Y,X])                       #34
              331d de00  st   [y,x++]     14816  st([Y,Xpp])                     #35
              331e c2ca  st   [$ca]       14817  st([vTmpL+2])                   #36
              331f 0d00  ld   [y,x]       14818  ld([Y,X])                       #37
              3320 de00  st   [y,x++]     14819  st([Y,Xpp])                     #38
              3321 c2cb  st   [$cb]       14820  st([vTmpL+3])                   #39
              3322 15cd  ld   [$cd],y     14821  ld([vDST+1],Y)                  #40
              3323 11cc  ld   [$cc],x     14822  ld([vDST],X)                    #41
              3324 01c8  ld   [$c8]       14823  ld([vTmpL])                     #42
              3325 de00  st   [y,x++]     14824  st([Y,Xpp])                     #43
              3326 01c9  ld   [$c9]       14825  ld([vTmpL+1])                   #44
              3327 de00  st   [y,x++]     14826  st([Y,Xpp])                     #45
              3328 01ca  ld   [$ca]       14827  ld([vTmpL+2])                   #46
              3329 de00  st   [y,x++]     14828  st([Y,Xpp])                     #47
              332a 01cb  ld   [$cb]       14829  ld([vTmpL+3])                   #48
              332b de00  st   [y,x++]     14830  st([Y,Xpp])                     #40
              332c 0004  ld   $04         14831  ld(4)                           #50 increment (no page crossing)
              332d 8118  adda [$18]       14832  adda([vAC])                     #51
              332e c218  st   [$18]       14833  st([vAC])                       #52
              332f 0004  ld   $04         14834  ld(4)                           #53
              3330 81cc  adda [$cc]       14835  adda([vDST])                    #54
              3331 c2cc  st   [$cc]       14836  st([vDST])                      #55
              3332 012b  ld   [$2b]       14837  ld([sysArgs+7])                 #56
              3333 a004  suba $04         14838  suba(4)                         #57
              3334 c22b  st   [$2b]       14839  st([sysArgs+7])                 #58
              3335 ec05  bne  ncopy#11    14840  bne('ncopy#11')                 #59-50=9
              3336 00e7  ld   $e7         14841  ld(-50/2)                       #60-50=10
              3337 1403  ld   $03,y       14842  ld(hi('REENTER'),Y)             #61
              3338 e0cb  jmp  y,$cb       14843  jmp(Y,'REENTER')                #62
              3339 00df  ld   $df         14844  ld(-66/2)                       #63
                                          14845
                                          14846  label('ncopy#27')
ncopy#27:     333a 1118  ld   [$18],x     14847  ld([vAC],X)                     #27 one byte, no page crossings
              333b 0d00  ld   [y,x]       14848  ld([Y,X])                       #28
              333c 15cd  ld   [$cd],y     14849  ld([vDST+1],Y)                  #29
              333d 11cc  ld   [$cc],x     14850  ld([vDST],X)                    #30
              333e ce00  st   [y,x]       14851  st([Y,X])                       #31
              333f 0001  ld   $01         14852  ld(1)                           #32 increment (no page crossing)
              3340 8118  adda [$18]       14853  adda([vAC])                     #33
              3341 c218  st   [$18]       14854  st([vAC])                       #34
              3342 0001  ld   $01         14855  ld(1)                           #35
              3343 81cc  adda [$cc]       14856  adda([vDST])                    #36
              3344 c2cc  st   [$cc]       14857  st([vDST])                      #37
              3345 012b  ld   [$2b]       14858  ld([sysArgs+7])                 #38
              3346 a001  suba $01         14859  suba(1)                         #39
              3347 c22b  st   [$2b]       14860  st([sysArgs+7])                 #40
              3348 ec05  bne  ncopy#11    14861  bne('ncopy#11')                 #41-32=9
              3349 00f0  ld   $f0         14862  ld(-32/2)                       #42-32=10
              334a 0200  nop              14863  nop()                           #43
              334b 1403  ld   $03,y       14864  ld(hi('NEXTY'),Y)               #44
              334c e000  jmp  y,$00       14865  jmp(Y,'NEXTY')                  #45
              334d 00e8  ld   $e8         14866  ld(-48/2)                       #46
                                          14867
                                          14868  label('ncopy#20')
ncopy#20:     334e 0200  nop              14869  nop()                           #20
              334f 0200  nop              14870  nop()                           #21
              3350 0200  nop              14871  nop()                           #22
              3351 0200  nop              14872  nop()                           #23
                                          14873  label('ncopy#24')
ncopy#24:     3352 1519  ld   [$19],y     14874  ld([vAC+1],Y)                   #24
              3353 1118  ld   [$18],x     14875  ld([vAC],X)                     #25 one byte, possible page crossings
              3354 0d00  ld   [y,x]       14876  ld([Y,X])                       #26
              3355 15cd  ld   [$cd],y     14877  ld([vDST+1],Y)                  #27
              3356 11cc  ld   [$cc],x     14878  ld([vDST],X)                    #28
              3357 ce00  st   [y,x]       14879  st([Y,X])                       #29
              3358 0001  ld   $01         14880  ld(1)                           #30 increment vAC
              3359 8118  adda [$18]       14881  adda([vAC])                     #31
              335a c218  st   [$18]       14882  st([vAC])                       #32
              335b f05e  beq  $335e       14883  beq(pc()+3)                     #33
              335c fc5f  bra  $335f       14884  bra(pc()+3)                     #34
              335d 0000  ld   $00         14885  ld(0)                           #35
              335e 0001  ld   $01         14886  ld(1)                           #35!
              335f 8119  adda [$19]       14887  adda([vAC+1])                   #36
              3360 c219  st   [$19]       14888  st([vAC+1])                     #37
              3361 0001  ld   $01         14889  ld(1)                           #38 increment vDST
              3362 81cc  adda [$cc]       14890  adda([vDST])                    #39
              3363 c2cc  st   [$cc]       14891  st([vDST])                      #40
              3364 f067  beq  $3367       14892  beq(pc()+3)                     #41
              3365 fc68  bra  $3368       14893  bra(pc()+3)                     #42
              3366 0000  ld   $00         14894  ld(0)                           #43
              3367 0001  ld   $01         14895  ld(1)                           #43!
              3368 81cd  adda [$cd]       14896  adda([vDST+1])                  #44
              3369 c2cd  st   [$cd]       14897  st([vDST+1])                    #45
              336a 0200  nop              14898  nop()                           #46
              336b 012b  ld   [$2b]       14899  ld([sysArgs+7])                 #47 decrement sysArgs7
              336c a001  suba $01         14900  suba(1)                         #48
              336d c22b  st   [$2b]       14901  st([sysArgs+7])                 #49
              336e 1403  ld   $03,y       14902  ld(hi('NEXTY'),Y)               #50
              336f ec05  bne  ncopy#11    14903  bne('ncopy#11')                 #51-42=9
              3370 00eb  ld   $eb         14904  ld(-42/2)                       #52-42=10
              3371 e000  jmp  y,$00       14905  jmp(Y,'NEXTY')                  #53
              3372 00e4  ld   $e4         14906  ld(-56/2)                       #54
                                          14907
                                          14908
                                          14909  # STLU implementation, (lb3361)
                                          14910  label('stlu#13')
stlu#13:      3373 1400  ld   $00,y       14911  ld(0,Y)                         #13
              3374 0118  ld   [$18]       14912  ld([vAC])                       #14
              3375 de00  st   [y,x++]     14913  st([Y,Xpp])                     #15
              3376 0119  ld   [$19]       14914  ld([vAC+1])                     #16
              3377 de00  st   [y,x++]     14915  st([Y,Xpp])                     #17
              3378 dc00  st   $00,[y,x++] 14916  st(0,[Y,Xpp])                   #18
              3379 cc00  st   $00,[y,x]   14917  st(0,[Y,X])                     #19
              337a 1403  ld   $03,y       14918  ld(hi('NEXTY'),Y)               #20
              337b e000  jmp  y,$00       14919  jmp(Y,'NEXTY')                  #21
              337c 00f4  ld   $f4         14920  ld(-24/2)                       #22
                                          14921
                                          14922
                                          14923  # STLS implementation, (lb3361)
                                          14924  label('stls#13')
stls#13:      337d 1200  ld   ac,x        14925  ld(AC,X)                        #13
              337e 1400  ld   $00,y       14926  ld(0,Y)                         #14
              337f 0118  ld   [$18]       14927  ld([vAC])                       #15
              3380 de00  st   [y,x++]     14928  st([Y,Xpp])                     #16
              3381 0119  ld   [$19]       14929  ld([vAC+1])                     #17
              3382 e889  blt  .stls#20    14930  bmi('.stls#20')                 #18
              3383 de00  st   [y,x++]     14931  st([Y,Xpp])                     #19
              3384 dc00  st   $00,[y,x++] 14932  st(0,[Y,Xpp])                   #20
              3385 cc00  st   $00,[y,x]   14933  st(0,[Y,X])                     #21
              3386 1403  ld   $03,y       14934  ld(hi('NEXTY'),Y)               #22
              3387 e000  jmp  y,$00       14935  jmp(Y,'NEXTY')                  #23
              3388 00f3  ld   $f3         14936  ld(-26/2)                       #24
                                          14937  label('.stls#20')
.stls#20:     3389 dcff  st   $ff,[y,x++] 14938  st(0xff,[Y,Xpp])                #20
              338a ccff  st   $ff,[y,x]   14939  st(0xff,[Y,X])                  #21
              338b 1403  ld   $03,y       14940  ld(hi('NEXTY'),Y)               #22
              338c e000  jmp  y,$00       14941  jmp(Y,'NEXTY')                  #23
              338d 00f3  ld   $f3         14942  ld(-26/2)                       #24
                                          14943
                                          14944
                                          14945  # CMPLPU/CMPLPS implementation, (lb3361)
                                          14946  label('cmplp#16')
cmplp#16:     338e 0023  ld   $23         14947  ld(hi('PREFX1_PAGE'))           #16 restart
              338f c202  st   [$02]       14948  st([vCpuSelect])                #17
              3390 9401  adda $01,y       14949  adda(1,Y)                       #18
              3391 e000  jmp  y,$00       14950  jmp(Y,'NEXTY')                  #19
              3392 00f5  ld   $f5         14951  ld(-22/2)                       #20
                                          14952
                                          14953  label('cmplp#lt')
cmplp#lt:     3393 00ff  ld   $ff         14954  ld(0xff)                        #vTmp-7
              3394 c218  st   [$18]       14955  st([vAC])                       #vTmp-6
              3395 c219  st   [$19]       14956  st([vAC+1])                     #vTmp-5
              3396 1403  ld   $03,y       14957  ld(hi('NEXTY'),Y)               #vTmp-4
              3397 e000  jmp  y,$00       14958  jmp(Y,'NEXTY')                  #vTmp-3
              3398 011d  ld   [$1d]       14959  ld([vTmp])                      #vTmp-2
                                          14960
                                          14961  label('cmplp#gt')
cmplp#gt:     3399 0001  ld   $01         14962  ld(1)                           #vTmp-8
              339a c218  st   [$18]       14963  st([vAC])                       #vTmp-7
              339b 0000  ld   $00         14964  ld(0)                           #vTmp-6
              339c c219  st   [$19]       14965  st([vAC+1])                     #vTmp-5
              339d 1403  ld   $03,y       14966  ld(hi('NEXTY'),Y)               #vTmp-4
              339e e000  jmp  y,$00       14967  jmp(Y,'NEXTY')                  #vTmp-3
              339f 011d  ld   [$1d]       14968  ld([vTmp])                      #vTmp-2
                                          14969
                                          14970  label('cmplpu#13')
cmplpu#13:    33a0 80eb  adda $eb         14971  adda(min(0,maxTicks-72/2))      #13
              33a1 e88e  blt  cmplp#16    14972  blt('cmplp#16')                 #14
              33a2 1519  ld   [$19],y     14973  ld([vAC+1],Y)                   #15
                                          14974  # byte3
              33a3 0118  ld   [$18]       14975  ld([vAC])                       #16
              33a4 9003  adda $03,x       14976  adda(3,X)                       #17
              33a5 00ee  ld   $ee         14977  ld(-36/2)                       #18
              33a6 c21d  st   [$1d]       14978  st([vTmp])                      #19
              33a7 01c7  ld   [$c7]       14979  ld([vLAC+3])                    #20
              33a8 6d00  xora [y,x]       14980  xora([Y,X])                     #21
              33a9 e8ad  blt  $33ad       14981  blt(pc()+4)                     #22
              33aa 01c7  ld   [$c7]       14982  ld([vLAC+3])                    #23
              33ab fcaf  bra  cmplp#26    14983  bra('cmplp#26')                 #24
              33ac ad00  suba [y,x]       14984  suba([Y,X])                     #25
              33ad 6080  xora $80         14985  xora(0x80)                      #24
              33ae 4001  ora  $01         14986  ora(1)                          #25
                                          14987  label('cmplp#26')
cmplp#26:     33af e499  bgt  cmplp#gt    14988  bgt('cmplp#gt')                 #26
              33b0 e893  blt  cmplp#lt    14989  blt('cmplp#lt')                 #27
                                          14990  # byte2
              33b1 0118  ld   [$18]       14991  ld([vAC])                       #28
              33b2 9002  adda $02,x       14992  adda(2,X)                       #29
              33b3 00e8  ld   $e8         14993  ld(-48/2)                       #30
              33b4 c21d  st   [$1d]       14994  st([vTmp])                      #31
              33b5 01c6  ld   [$c6]       14995  ld([vLAC+2])                    #32
              33b6 6d00  xora [y,x]       14996  xora([Y,X])                     #33
              33b7 e8bb  blt  $33bb       14997  blt(pc()+4)                     #34
              33b8 01c6  ld   [$c6]       14998  ld([vLAC+2])                    #35
              33b9 fcbd  bra  $33bd       14999  bra(pc()+4)                     #36
              33ba ad00  suba [y,x]       15000  suba([Y,X])                     #37
              33bb 6080  xora $80         15001  xora(0x80)                      #36
              33bc 4001  ora  $01         15002  ora(1)                          #37
              33bd e499  bgt  cmplp#gt    15003  bgt('cmplp#gt')                 #38
              33be e893  blt  cmplp#lt    15004  blt('cmplp#lt')                 #39
                                          15005  # byte1
              33bf 0118  ld   [$18]       15006  ld([vAC])                       #40
              33c0 9001  adda $01,x       15007  adda(1,X)                       #41
              33c1 00e2  ld   $e2         15008  ld(-60/2)                       #42
              33c2 c21d  st   [$1d]       15009  st([vTmp])                      #43
              33c3 01c5  ld   [$c5]       15010  ld([vLAC+1])                    #44
              33c4 6d00  xora [y,x]       15011  xora([Y,X])                     #45
              33c5 e8c9  blt  $33c9       15012  blt(pc()+4)                     #46
              33c6 01c5  ld   [$c5]       15013  ld([vLAC+1])                    #47
              33c7 fccb  bra  $33cb       15014  bra(pc()+4)                     #48
              33c8 ad00  suba [y,x]       15015  suba([Y,X])                     #49
              33c9 6080  xora $80         15016  xora(0x80)                      #48
              33ca 4001  ora  $01         15017  ora(1)                          #49
              33cb e499  bgt  cmplp#gt    15018  bgt('cmplp#gt')                 #50
              33cc e893  blt  cmplp#lt    15019  blt('cmplp#lt')                 #51
                                          15020  # byte0
              33cd 0118  ld   [$18]       15021  ld([vAC])                       #52
              33ce 9000  adda $00,x       15022  adda(0,X)                       #53
              33cf 00dc  ld   $dc         15023  ld(-72/2)                       #54
              33d0 c21d  st   [$1d]       15024  st([vTmp])                      #55
              33d1 01c4  ld   [$c4]       15025  ld([vLAC])                      #56
              33d2 6d00  xora [y,x]       15026  xora([Y,X])                     #57
              33d3 e8d7  blt  $33d7       15027  blt(pc()+4)                     #58
              33d4 01c4  ld   [$c4]       15028  ld([vLAC])                      #59
              33d5 fcd9  bra  $33d9       15029  bra(pc()+4)                     #60
              33d6 ad00  suba [y,x]       15030  suba([Y,X])                     #61
              33d7 6080  xora $80         15031  xora(0x80)                      #60
              33d8 4001  ora  $01         15032  ora(1)                          #61
              33d9 e499  bgt  cmplp#gt    15033  bgt('cmplp#gt')                 #62
              33da e893  blt  cmplp#lt    15034  blt('cmplp#lt')                 #63
              33db c219  st   [$19]       15035  st([vAC+1])                     #64
              33dc c218  st   [$18]       15036  st([vAC])                       #65
              33dd 1403  ld   $03,y       15037  ld(hi('NEXTY'),Y)               #66
              33de e000  jmp  y,$00       15038  jmp(Y,'NEXTY')                  #67
              33df 00dd  ld   $dd         15039  ld(-70/2)                       #68
                                          15040
                                          15041  label('cmplps#13')
cmplps#13:    33e0 80eb  adda $eb         15042  adda(min(0,maxTicks-72/2))      #13
              33e1 e88e  blt  cmplp#16    15043  blt('cmplp#16')                 #14
              33e2 1519  ld   [$19],y     15044  ld([vAC+1],Y)                   #15
                                          15045  #byte3
              33e3 0118  ld   [$18]       15046  ld([vAC])                       #16
              33e4 9003  adda $03,x       15047  adda(3,X)                       #17
              33e5 00ee  ld   $ee         15048  ld(-36/2)                       #18
              33e6 c21d  st   [$1d]       15049  st([vTmp])                      #19
              33e7 01c7  ld   [$c7]       15050  ld([vLAC+3])                    #20
              33e8 6d00  xora [y,x]       15051  xora([Y,X])                     #21
              33e9 e8ed  blt  $33ed       15052  blt(pc()+4)                     #22
              33ea 01c7  ld   [$c7]       15053  ld([vLAC+3])                    #23
              33eb fcaf  bra  cmplp#26    15054  bra('cmplp#26')                 #24
              33ec ad00  suba [y,x]       15055  suba([Y,X])                     #25
              33ed 0200  nop              15056  nop()                           #24
              33ee 4001  ora  $01         15057  ora(1)                          #25
              33ef e499  bgt  cmplp#gt    15058  bgt('cmplp#gt')                 #26
              33f0 e893  blt  cmplp#lt    15059  blt('cmplp#lt')                 #27
                                          15060  #dummy                          #28
                                          15061
                                          15062
              33f1 0200  nop              15063  fillers(until=0xff)
              33f2 0200  nop
              33f3 0200  nop
              * 14 times
              33ff 0200  nop              15064  align(0x100, size=0x100)
                                          15065
                                          15066  #-----------------------------------------------------------------------
                                          15067  #  More vCPU instruction implementations, (0x3400)
                                          15068  #-----------------------------------------------------------------------
                                          15069  #
                                          15070  # NOTL implementation, (lb3361)
                                          15071  label('notl#13')
notl#13:      3400 1400  ld   $00,y       15072  ld(0,Y)                         #13
              3401 0d00  ld   [y,x]       15073  ld([Y,X])                       #14
              3402 60ff  xora $ff         15074  xora(0xff)                      #15
              3403 de00  st   [y,x++]     15075  st([Y,Xpp])                     #16
              3404 0d00  ld   [y,x]       15076  ld([Y,X])                       #17
              3405 60ff  xora $ff         15077  xora(0xff)                      #18
              3406 de00  st   [y,x++]     15078  st([Y,Xpp])                     #19
              3407 0d00  ld   [y,x]       15079  ld([Y,X])                       #20
              3408 60ff  xora $ff         15080  xora(0xff)                      #21
              3409 de00  st   [y,x++]     15081  st([Y,Xpp])                     #22
              340a 0d00  ld   [y,x]       15082  ld([Y,X])                       #23
              340b 60ff  xora $ff         15083  xora(0xff)                      #24
              340c de00  st   [y,x++]     15084  st([Y,Xpp])                     #25
              340d 1403  ld   $03,y       15085  ld(hi('NEXTY'),Y)               #26
              340e e000  jmp  y,$00       15086  jmp(Y,'NEXTY')                  #27
              340f 00f1  ld   $f1         15087  ld(-30/2)                       #28
                                          15088
                                          15089
                                          15090  # NROL implementation, (lb3361)
                                          15091  label('nrol#13')
nrol#13:      3410 112b  ld   [$2b],x     15092  ld([sysArgs+7],X)               #13
              3411 fc15  bra  nrol#16     15093  bra('nrol#16')                  #14
              3412 0115  ld   [$15]       15094  ld([vTicks])                    #15
                                          15095
                                          15096  label('nrol#14')
nrol#14:      3413 8115  adda [$15]       15097  adda([vTicks])                  #14
              3414 c215  st   [$15]       15098  st([vTicks])                    #15
                                          15099  label('nrol#16')
nrol#16:      3415 80fa  adda $fa         15100  adda(min(0,maxTicks-(24+18)/2)) #16
              3416 f41c  bge  nrol#19     15101  bge('nrol#19')                  #17 -> enough time
              3417 0021  ld   $21         15102  ld(hi('PREFX3_PAGE'))           #18 restart
              3418 c202  st   [$02]       15103  st([vCpuSelect])                #19
              3419 9401  adda $01,y       15104  adda(1,Y)                       #20
              341a e000  jmp  y,$00       15105  jmp(Y,'NEXTY')                  #21
              341b 00f4  ld   $f4         15106  ld(-24/2)                       #22
                                          15107
                                          15108  label('nrol#19')
nrol#19:      341c 0119  ld   [$19]       15109  ld([vAC+1])                     #19 enough time
              341d e822  blt  nrol#22     15110  blt('nrol#22')                  #20
              341e 0500  ld   [x]         15111  ld([X])                         #21
              341f c219  st   [$19]       15112  st([vAC+1])                     #22
              3420 fc25  bra  nrol#25     15113  bra('nrol#25')                  #23
              3421 8200  adda ac          15114  adda(AC)                        #24
                                          15115  label('nrol#22')
nrol#22:      3422 c219  st   [$19]       15116  st([vAC+1])                     #22
              3423 8200  adda ac          15117  adda(AC)                        #23
              3424 8001  adda $01         15118  adda(1)                         #24
                                          15119  label('nrol#25')
nrol#25:      3425 c600  st   [x]         15120  st([X])                         #25
              3426 0001  ld   $01         15121  ld(1)                           #26
              3427 812b  adda [$2b]       15122  adda([sysArgs+7])               #27
              3428 d22b  st   [$2b],x     15123  st([sysArgs+7],X)               #28
              3429 612a  xora [$2a]       15124  xora([sysArgs+6])               #29
              342a ec13  bne  nrol#14     15125  bne('nrol#14')                  #30-18=12
              342b 00f7  ld   $f7         15126  ld(-18/2)                       #31-18=13
              342c 1403  ld   $03,y       15127  ld(hi('NEXTY'),Y)               #32
              342d e000  jmp  y,$00       15128  jmp(Y,'NEXTY')                  #33
              342e 00ee  ld   $ee         15129  ld(-36/2)                       #34
                                          15130
                                          15131
                                          15132  # NROR implementation, (lb3361)
                                          15133  label('nror#20')
nror#20:      342f 0021  ld   $21         15134  ld(hi('PREFX3_PAGE'))           #20 restart
              3430 c202  st   [$02]       15135  st([vCpuSelect])                #21
              3431 9401  adda $01,y       15136  adda(1,Y)                       #22
              3432 e000  jmp  y,$00       15137  jmp(Y,'NEXTY')                  #23
              3433 00f3  ld   $f3         15138  ld(-26/2)                       #24
                                          15139
                                          15140  label('nror#13')
nror#13:      3434 00e0  ld   $e0         15141  ld('nror#35')                   #13
              3435 c21d  st   [$1d]       15142  st([vTmp])                      #14
              3436 0115  ld   [$15]       15143  ld([vTicks])                    #15
                                          15144  label('nror#16')
nror#16:      3437 1405  ld   $05,y       15145  ld(hi('shiftTable'),Y)          #16
              3438 80f3  adda $f3         15146  adda(min(0,maxTicks-(26+30)/2)) #17
              3439 e82f  blt  nror#20     15147  blt('nror#20')                  #18
              343a 012b  ld   [$2b]       15148  ld([sysArgs+7])                 #19
              343b a001  suba $01         15149  suba(1)                         #20
              343c d22b  st   [$2b],x     15150  st([sysArgs+7],X)               #21
              343d 0119  ld   [$19]       15151  ld([vAC+1])                     #22
              343e 2080  anda $80         15152  anda(0x80)                      #23
              343f c218  st   [$18]       15153  st([vAC])                       #24
              3440 0500  ld   [x]         15154  ld([X])                         #25
              3441 20fe  anda $fe         15155  anda(0xfe)                      #26
              3442 a500  suba [x]         15156  suba([X])                       #27
              3443 c219  st   [$19]       15157  st([vAC+1])                     #28
              3444 8500  adda [x]         15158  adda([X])                       #29
              3445 e200  jmp  y,ac        15159  jmp(Y,AC)                       #30
              3446 fcff  bra  $ff         15160  bra(255)                        #31 continues in page 0x600
                                          15161
                                          15162
                                          15163  # INCL implementation
                                          15164  label('incl#13')
incl#13:      3447 00fd  ld   $fd         15165  ld(min(0,maxTicks-36/2))        #13
              3448 8115  adda [$15]       15166  adda([vTicks])                  #14
              3449 e866  blt  .incl#17    15167  blt('.incl#17')                 #15 not enough time left, so retry
              344a 1400  ld   $00,y       15168  ld(0,Y)                         #16
              344b 0500  ld   [x]         15169  ld([X])                         #17
                                          15170  label('incl#18')
incl#18:      344c 8001  adda $01         15171  adda(1)                         #18
              344d f052  beq  .incl#21    15172  beq('.incl#21')                 #19 if 0 byte is 0x00
              344e de00  st   [y,x++]     15173  st([Y,Xpp])                     #20 inc 0 byte
              344f 1403  ld   $03,y       15174  ld(hi('REENTER'),Y)             #21
              3450 e0cb  jmp  y,$cb       15175  jmp(Y,'REENTER')                #22
              3451 00f3  ld   $f3         15176  ld(-26/2)                       #23
                                          15177
                                          15178  label('.incl#21')
.incl#21:     3452 0500  ld   [x]         15179  ld([X])                         #21
              3453 8001  adda $01         15180  adda(1)                         #22
              3454 f059  beq  .incl#25    15181  beq('.incl#25')                 #23 if 1 byte is 0x00
              3455 de00  st   [y,x++]     15182  st([Y,Xpp])                     #24 inc 1 byte
              3456 1403  ld   $03,y       15183  ld(hi('REENTER'),Y)             #25
              3457 e0cb  jmp  y,$cb       15184  jmp(Y,'REENTER')                #26
              3458 00f1  ld   $f1         15185  ld(-30/2)                       #27
                                          15186
                                          15187  label('.incl#25')
.incl#25:     3459 0500  ld   [x]         15188  ld([X])                         #25
              345a 8001  adda $01         15189  adda(1)                         #26
              345b f060  beq  .incl#29    15190  beq('.incl#29')                 #27 if 2 byte is 0x00
              345c de00  st   [y,x++]     15191  st([Y,Xpp])                     #28 inc 2 byte
              345d 1403  ld   $03,y       15192  ld(hi('REENTER'),Y)             #29
              345e e0cb  jmp  y,$cb       15193  jmp(Y,'REENTER')                #30
              345f 00ef  ld   $ef         15194  ld(-34/2)                       #31
                                          15195
                                          15196  label('.incl#29')
.incl#29:     3460 0500  ld   [x]         15197  ld([X])                         #29
              3461 8001  adda $01         15198  adda(1)                         #30
              3462 c600  st   [x]         15199  st([X])                         #31 inc high byte
              3463 1403  ld   $03,y       15200  ld(hi('NEXTY'),Y)               #32
              3464 e000  jmp  y,$00       15201  jmp(Y,'NEXTY')                  #33
              3465 00ee  ld   $ee         15202  ld(-36/2)                       #34
                                          15203
                                          15204  label('.incl#17')
.incl#17:     3466 0022  ld   $22         15205  ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              3467 c202  st   [$02]       15206  st([vCpuSelect])                #18 restore PREFX2 instruction page
              3468 9401  adda $01,y       15207  adda(1,Y)                       #19 retry instruction
              3469 e0cb  jmp  y,$cb       15208  jmp(Y,'REENTER')                #20
              346a 00f4  ld   $f4         15209  ld(-24/2)                       #21
                                          15210
                                          15211
                                          15212  # DECL implementation
                                          15213  label('decl#13')
decl#13:      346b 112b  ld   [$2b],x     15214  ld([sysArgs+7],X)               #13 var address
              346c 00fb  ld   $fb         15215  ld(min(0,maxTicks-40/2))        #14
              346d 8115  adda [$15]       15216  adda([vTicks])                  #15
              346e e88e  blt  .decl#18    15217  blt('.decl#18')                 #16 not enough time left, so retry
              346f 1400  ld   $00,y       15218  ld(0,Y)                         #17
              3470 0500  ld   [x]         15219  ld([X])                         #18
              3471 a001  suba $01         15220  suba(1)                         #19
              3472 de00  st   [y,x++]     15221  st([Y,Xpp])                     #20 dec 0 byte
              3473 60ff  xora $ff         15222  xora(0xff)                      #21 if 0 byte is 0xff
              3474 f079  beq  .decl#24    15223  beq('.decl#24')                 #22
              3475 0500  ld   [x]         15224  ld([X])                         #23
              3476 1403  ld   $03,y       15225  ld(hi('NEXTY'),Y)               #24
              3477 e000  jmp  y,$00       15226  jmp(Y,'NEXTY')                  #25
              3478 00f2  ld   $f2         15227  ld(-28/2)                       #26
                                          15228
                                          15229  label('.decl#24')
.decl#24:     3479 a001  suba $01         15230  suba(1)                         #24
              347a de00  st   [y,x++]     15231  st([Y,Xpp])                     #25 dec 1 byte
              347b 60ff  xora $ff         15232  xora(0xff)                      #26 if 1 byte is 0xff
              347c f081  beq  .decl#29    15233  beq('.decl#29')                 #27
              347d 0500  ld   [x]         15234  ld([X])                         #28
              347e 1403  ld   $03,y       15235  ld(hi('REENTER'),Y)             #29
              347f e0cb  jmp  y,$cb       15236  jmp(Y,'REENTER')                #30
              3480 00ef  ld   $ef         15237  ld(-34/2)                       #31
                                          15238
                                          15239  label('.decl#29')
.decl#29:     3481 a001  suba $01         15240  suba(1)                         #29
              3482 de00  st   [y,x++]     15241  st([Y,Xpp])                     #30 dec 2 byte
              3483 60ff  xora $ff         15242  xora(0xff)                      #31 if 2 byte is 0xff
              3484 f089  beq  .decl#34    15243  beq('.decl#34')                 #32
              3485 0500  ld   [x]         15244  ld([X])                         #33
              3486 1403  ld   $03,y       15245  ld(hi('NEXTY'),Y)               #34
              3487 e000  jmp  y,$00       15246  jmp(Y,'NEXTY')                  #35
              3488 00ed  ld   $ed         15247  ld(-38/2)                       #36
                                          15248
                                          15249  label('.decl#34')
.decl#34:     3489 a001  suba $01         15250  suba(1)                         #34
              348a c600  st   [x]         15251  st([X])                         #35 dec 3 byte
              348b 1403  ld   $03,y       15252  ld(hi('NEXTY'),Y)               #36
              348c e000  jmp  y,$00       15253  jmp(Y,'NEXTY')                  #37
              348d 00ec  ld   $ec         15254  ld(-40/2)                       #38
                                          15255
                                          15256  label('.decl#18')
.decl#18:     348e 0022  ld   $22         15257  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              348f c202  st   [$02]       15258  st([vCpuSelect])                #19 restore PREFX2 instruction page
              3490 9401  adda $01,y       15259  adda(1,Y)                       #20 retry instruction
              3491 e000  jmp  y,$00       15260  jmp(Y,'NEXTY')                  #21
              3492 00f4  ld   $f4         15261  ld(-24/2)                       #22
                                          15262
                                          15263
                                          15264  # NEGL implementation, (lb3361)
                                          15265  # Complement then jumps into INCL
                                          15266  label('negl#13')
negl#13:      3493 1400  ld   $00,y       15267  ld(0,Y)                         #13
              3494 00f2  ld   $f2         15268  ld(min(0,maxTicks-(40+18)/2))   #14
              3495 8115  adda [$15]       15269  adda([vTicks])                  #15
              3496 e88e  blt  .decl#18    15270  blt('.decl#18')                 #16 restart
              3497 0d00  ld   [y,x]       15271  ld([Y,X])                       #17
              3498 60ff  xora $ff         15272  xora(0xff)                      #18
              3499 de00  st   [y,x++]     15273  st([Y,Xpp])                     #19
              349a 0d00  ld   [y,x]       15274  ld([Y,X])                       #20
              349b 60ff  xora $ff         15275  xora(0xff)                      #21
              349c de00  st   [y,x++]     15276  st([Y,Xpp])                     #22
              349d 0d00  ld   [y,x]       15277  ld([Y,X])                       #23
              349e 60ff  xora $ff         15278  xora(0xff)                      #24
              349f de00  st   [y,x++]     15279  st([Y,Xpp])                     #25
              34a0 0d00  ld   [y,x]       15280  ld([Y,X])                       #26
              34a1 60ff  xora $ff         15281  xora(0xff)                      #27
              34a2 de00  st   [y,x++]     15282  st([Y,Xpp])                     #28
              34a3 0200  nop              15283  nop()                           #29
              34a4 0115  ld   [$15]       15284  ld([vTicks])                    #30
              34a5 80f7  adda $f7         15285  adda(-18/2)                     #13=31-18
              34a6 c215  st   [$15]       15286  st([vTicks])                    #14
              34a7 112b  ld   [$2b],x     15287  ld([sysArgs+7],X)               #15
              34a8 fc4c  bra  incl#18     15288  bra('incl#18')                  #16
              34a9 0500  ld   [x]         15289  ld([X])                         #17
                                          15290
                                          15291
                                          15292  # VADDBL implementation
                                          15293  label('vaddbl#13')
vaddbl#13:    34aa 1400  ld   $00,y       15294  ld(0,Y)                         #13
              34ab 00f8  ld   $f8         15295  ld(min(0,maxTicks-46/2))        #14
              34ac 8115  adda [$15]       15296  adda([vTicks])                  #15
              34ad e8ca  blt  .vaddbl#18  15297  blt('.vaddbl#18')               #16 not enough time left, so retry
              34ae 0500  ld   [x]         15298  ld([X])                         #17
              34af de00  st   [y,x++]     15299  st([Y,Xpp])                     #18
              34b0 c2b0  st   [$b0]       15300  st([0xB0])                      #19 src.0
              34b1 0500  ld   [x]         15301  ld([X])                         #20
              34b2 de00  st   [y,x++]     15302  st([Y,Xpp])                     #21
              34b3 c2b1  st   [$b1]       15303  st([0xB1])                      #22 src.1
              34b4 0500  ld   [x]         15304  ld([X])                         #23
              34b5 de00  st   [y,x++]     15305  st([Y,Xpp])                     #24
              34b6 c2b2  st   [$b2]       15306  st([0xB2])                      #25 src.2
              34b7 0500  ld   [x]         15307  ld([X])                         #26
              34b8 de00  st   [y,x++]     15308  st([Y,Xpp])                     #27
              34b9 c2b3  st   [$b3]       15309  st([0xB3])                      #28 src.3
              34ba 112b  ld   [$2b],x     15310  ld([sysArgs+7],X)               #29
              34bb 0500  ld   [x]         15311  ld([X])                         #30
              34bc 81b0  adda [$b0]       15312  adda([0xB0])                    #31
              34bd de00  st   [y,x++]     15313  st([Y,Xpp])                     #32 dst.0 += src.0
              34be 0500  ld   [x]         15314  ld([X])                         #33
              34bf 81b1  adda [$b1]       15315  adda([0xB1])                    #34
              34c0 de00  st   [y,x++]     15316  st([Y,Xpp])                     #35 dst.1 += src.1
              34c1 0500  ld   [x]         15317  ld([X])                         #36
              34c2 81b2  adda [$b2]       15318  adda([0xB2])                    #37
              34c3 de00  st   [y,x++]     15319  st([Y,Xpp])                     #38 dst.2 += src.2
              34c4 0500  ld   [x]         15320  ld([X])                         #39
              34c5 81b3  adda [$b3]       15321  adda([0xB3])                    #40
              34c6 c600  st   [x]         15322  st([X])                         #41 dst.3 += src.3
              34c7 1403  ld   $03,y       15323  ld(hi('NEXTY'),Y)               #42
              34c8 e000  jmp  y,$00       15324  jmp(Y,'NEXTY')                  #43
              34c9 00e9  ld   $e9         15325  ld(-46/2)                       #44
                                          15326
                                          15327  label('.vaddbl#18')
.vaddbl#18:   34ca 0021  ld   $21         15328  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              34cb c202  st   [$02]       15329  st([vCpuSelect])                #19 restore PREFX2 instruction page
              34cc 9401  adda $01,y       15330  adda(1,Y)                       #20 retry instruction
              34cd e000  jmp  y,$00       15331  jmp(Y,'NEXTY')                  #21
              34ce 00f4  ld   $f4         15332  ld(-24/2)                       #22
                                          15333
                                          15334
                                          15335  # VSUBBL implementation
                                          15336  label('vsubbl#13')
vsubbl#13:    34cf 1400  ld   $00,y       15337  ld(0,Y)                         #13
              34d0 00f8  ld   $f8         15338  ld(min(0,maxTicks-46/2))        #14
              34d1 8115  adda [$15]       15339  adda([vTicks])                  #15
              34d2 e8ef  blt  .vsubbl#18  15340  blt('.vsubbl#18')               #16 not enough time left, so retry
              34d3 0500  ld   [x]         15341  ld([X])                         #17
              34d4 de00  st   [y,x++]     15342  st([Y,Xpp])                     #18
              34d5 c2b0  st   [$b0]       15343  st([0xB0])                      #19 src.0
              34d6 0500  ld   [x]         15344  ld([X])                         #20
              34d7 de00  st   [y,x++]     15345  st([Y,Xpp])                     #21
              34d8 c2b1  st   [$b1]       15346  st([0xB1])                      #22 src.1
              34d9 0500  ld   [x]         15347  ld([X])                         #23
              34da de00  st   [y,x++]     15348  st([Y,Xpp])                     #24
              34db c2b2  st   [$b2]       15349  st([0xB2])                      #25 src.2
              34dc 0500  ld   [x]         15350  ld([X])                         #26
              34dd de00  st   [y,x++]     15351  st([Y,Xpp])                     #27
              34de c2b3  st   [$b3]       15352  st([0xB3])                      #28 src.3
              34df 112b  ld   [$2b],x     15353  ld([sysArgs+7],X)               #29
              34e0 0500  ld   [x]         15354  ld([X])                         #30
              34e1 a1b0  suba [$b0]       15355  suba([0xB0])                    #31
              34e2 de00  st   [y,x++]     15356  st([Y,Xpp])                     #32 dst.0 -= src.0
              34e3 0500  ld   [x]         15357  ld([X])                         #33
              34e4 a1b1  suba [$b1]       15358  suba([0xB1])                    #34
              34e5 de00  st   [y,x++]     15359  st([Y,Xpp])                     #35 dst.1 -= src.1
              34e6 0500  ld   [x]         15360  ld([X])                         #36
              34e7 a1b2  suba [$b2]       15361  suba([0xB2])                    #37
              34e8 de00  st   [y,x++]     15362  st([Y,Xpp])                     #38 dst.2 -= src.2
              34e9 0500  ld   [x]         15363  ld([X])                         #39
              34ea a1b3  suba [$b3]       15364  suba([0xB3])                    #40
              34eb c600  st   [x]         15365  st([X])                         #41 dst.3 -= src.3
              34ec 1403  ld   $03,y       15366  ld(hi('NEXTY'),Y)               #42
              34ed e000  jmp  y,$00       15367  jmp(Y,'NEXTY')                  #43
              34ee 00e9  ld   $e9         15368  ld(-46/2)                       #44
                                          15369
                                          15370  label('.vsubbl#18')
.vsubbl#18:   34ef 0021  ld   $21         15371  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              34f0 c202  st   [$02]       15372  st([vCpuSelect])                #19 restore PREFX2 instruction page
              34f1 9401  adda $01,y       15373  adda(1,Y)                       #20 retry instruction
              34f2 e000  jmp  y,$00       15374  jmp(Y,'NEXTY')                  #21
              34f3 00f4  ld   $f4         15375  ld(-24/2)                       #22
                                          15376
                                          15377
              34f4 0200  nop              15378  fillers(until=0xff)
              34f5 0200  nop
              34f6 0200  nop
              * 11 times
              34ff 0200  nop              15379  align(0x100, size=0x100)
                                          15380
                                          15381  #-----------------------------------------------------------------------
                                          15382  #  More vCPU instruction implementations, (0x3500)
                                          15383  #-----------------------------------------------------------------------
                                          15384  #
                                          15385  # ADDBI implementation, dst.lo = imm + src.lo, does NOT modify dst.hi
                                          15386  label('addbi#13')
addbi#13:     3500 c21d  st   [$1d]       15387  st([vTmp])                      #13 src var
              3501 de00  st   [y,x++]     15388  st([Y,Xpp])                     #14
              3502 0d00  ld   [y,x]       15389  ld([Y,X])                       #15
              3503 c22b  st   [$2b]       15390  st([sysArgs+7])                 #16 dst var
              3504 de00  st   [y,x++]     15391  st([Y,Xpp])                     #17
              3505 0d00  ld   [y,x]       15392  ld([Y,X])                       #18 imm
              3506 111d  ld   [$1d],x     15393  ld([vTmp],X)                    #19
              3507 8500  adda [x]         15394  adda([X])                       #20
              3508 112b  ld   [$2b],x     15395  ld([sysArgs+7],X)               #21
              3509 c600  st   [x]         15396  st([X])                         #22
              350a 0116  ld   [$16]       15397  ld([vPC])                       #23
              350b 8002  adda $02         15398  adda(2)                         #24
              350c c216  st   [$16]       15399  st([vPC])                       #25
              350d 1403  ld   $03,y       15400  ld(hi('NEXTY'),Y)               #26
              350e e000  jmp  y,$00       15401  jmp(Y,'NEXTY')                  #27
              350f 00f1  ld   $f1         15402  ld(-30/2)                       #28
                                          15403
                                          15404
                                          15405  # SUBBI implementation, dst.lo = src.lo - imm, does NOT modify dst.hi
                                          15406  label('subbi#13')
subbi#13:     3510 c21d  st   [$1d]       15407  st([vTmp])                      #13 imm
              3511 de00  st   [y,x++]     15408  st([Y,Xpp])                     #14
              3512 00fe  ld   $fe         15409  ld(min(0,maxTicks-34/2))        #15
              3513 8115  adda [$15]       15410  adda([vTicks])                  #16
              3514 e824  blt  .subbi#19   15411  blt('.subbi#19')                #17 not enough time left, so retry
              3515 0d00  ld   [y,x]       15412  ld([Y,X])                       #18
              3516 c22b  st   [$2b]       15413  st([sysArgs+7])                 #19 dst var
              3517 de00  st   [y,x++]     15414  st([Y,Xpp])                     #20
              3518 0d00  ld   [y,x]       15415  ld([Y,X])                       #21 src var
              3519 1200  ld   ac,x        15416  ld(AC,X)                        #22
              351a 0500  ld   [x]         15417  ld([X])                         #23
              351b a11d  suba [$1d]       15418  suba([vTmp])                    #24
              351c 112b  ld   [$2b],x     15419  ld([sysArgs+7],X)               #25
              351d c600  st   [x]         15420  st([X])                         #26
              351e 0116  ld   [$16]       15421  ld([vPC])                       #27
              351f 8002  adda $02         15422  adda(2)                         #28
              3520 c216  st   [$16]       15423  st([vPC])                       #29
              3521 1403  ld   $03,y       15424  ld(hi('NEXTY'),Y)               #30
              3522 e000  jmp  y,$00       15425  jmp(Y,'NEXTY')                  #31
              3523 00ef  ld   $ef         15426  ld(-34/2)                       #32
                                          15427
                                          15428  label('.subbi#19')
.subbi#19:    3524 0116  ld   [$16]       15429  ld([vPC])                       #19 retry instruction
              3525 a002  suba $02         15430  suba(2)                         #20
              3526 c216  st   [$16]       15431  st([vPC])                       #21
              3527 1403  ld   $03,y       15432  ld(hi('NEXTY'),Y)               #22
              3528 e000  jmp  y,$00       15433  jmp(Y,'NEXTY')                  #23
              3529 00f3  ld   $f3         15434  ld(-26/2)                       #24
                                          15435
                                          15436
                                          15437  # FNT6X8 implementation
                                          15438  label('fnt6x8#13')
fnt6x8#13:    352a 00fa  ld   $fa         15439  ld(min(0,maxTicks-42/2))        #13
              352b 8115  adda [$15]       15440  adda([vTicks])                  #14
              352c e84c  blt  .fnt6x8#17  15441  blt('.fnt6x8#17')               #15 not enough time left, so retry
              352d 112a  ld   [$2a],x     15442  ld([sysArgs+6],X)               #16
              352e 0500  ld   [x]         15443  ld([X])                         #17 fontChr
              352f e833  blt  fnt6x8#20   15444  bmi('fnt6x8#20')                #18
              3530 a052  suba $52         15445  suba(82)                        #19
              3531 fc35  bra  fnt6x8#22   15446  bra('fnt6x8#22')                #20
              3532 4052  ora  $52         15447  ora(82)                         #21
                                          15448
                                          15449  label('fnt6x8#20')
fnt6x8#20:    3533 2052  anda $52         15450  anda(82)                        #20
              3534 0200  nop              15451  nop()                           #21
                                          15452
                                          15453  label('fnt6x8#22')
fnt6x8#22:    3535 e83b  blt  fnt6x8#24   15454  bmi('fnt6x8#24')                #22
              3536 0500  ld   [x]         15455  ld([X])                         #23 fontChr >= 82
              3537 a052  suba $52         15456  suba(82)                        #24
              3538 c22a  st   [$2a]       15457  st([sysArgs+6])                 #25 sysArgs+6 = fontChr - 82
              3539 fc3f  bra  fnt6x8#28   15458  bra('fnt6x8#28')                #26
              353a 0008  ld   $08         15459  ld(hi('font82up'))              #27 vTmp = font82up.hi
                                          15460
                                          15461  label('fnt6x8#24')
fnt6x8#24:    353b a020  suba $20         15462  suba(32)                        #24 fontChr < 82, (assumes fontChr is 32 to 130)
              353c c22a  st   [$2a]       15463  st([sysArgs+6])                 #25 sysArgs+6 = fontChr - 32
              353d 0007  ld   $07         15464  ld(hi('font32up'))              #26 vTmp = font32up.hi
              353e 0200  nop              15465  nop()                           #27
                                          15466
                                          15467  label('fnt6x8#28')
fnt6x8#28:    353f c21d  st   [$1d]       15468  st([vTmp])                      #28
              3540 1400  ld   $00,y       15469  ld(0,Y)                         #29
              3541 112b  ld   [$2b],x     15470  ld([sysArgs+7],X)               #30
              3542 012a  ld   [$2a]       15471  ld([sysArgs+6])                 #31
              3543 8200  adda ac          15472  adda(AC)                        #32
              3544 8200  adda ac          15473  adda(AC)                        #33
              3545 812a  adda [$2a]       15474  adda([sysArgs+6])               #34
              3546 de00  st   [y,x++]     15475  st([Y,Xpp])                     #35 fontTable.lo = sysArgs+6*5
              3547 011d  ld   [$1d]       15476  ld([vTmp])                      #36
              3548 c600  st   [x]         15477  st([X])                         #37 fontTable.hi = vTmp
              3549 1403  ld   $03,y       15478  ld(hi('NEXTY'),Y)               #38
              354a e000  jmp  y,$00       15479  jmp(Y,'NEXTY')                  #39
              354b 00eb  ld   $eb         15480  ld(-42/2)                       #40
                                          15481
                                          15482  label('.fnt6x8#17')
.fnt6x8#17:   354c 0021  ld   $21         15483  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              354d c202  st   [$02]       15484  st([vCpuSelect])                #18 restore PREFX3 instruction page
              354e 9401  adda $01,y       15485  adda(1,Y)                       #19 retry instruction
              354f e0cb  jmp  y,$cb       15486  jmp(Y,'REENTER')                #20
              3550 00f4  ld   $f4         15487  ld(-24/2)                       #21
                                          15488
                                          15489
                                          15490  # FNT4X6 implementation
                                          15491  label('fnt4x6#13')
fnt4x6#13:    3551 c22a  st   [$2a]       15492  st([sysArgs+6])                 #13 fontChr addr
              3552 00fa  ld   $fa         15493  ld(min(0,maxTicks-42/2))        #14
              3553 8115  adda [$15]       15494  adda([vTicks])                  #15
              3554 e873  blt  .fnt4x6#18  15495  blt('.fnt4x6#18')               #16 not enough time left, so retry
              3555 112a  ld   [$2a],x     15496  ld([sysArgs+6],X)               #17
              3556 0500  ld   [x]         15497  ld([X])                         #18 fontChr
              3557 e85b  blt  fnt4x6#21   15498  bmi('fnt4x6#21')                #19
              3558 a073  suba $73         15499  suba(115)                       #20
              3559 fc5d  bra  fnt4x6#23   15500  bra('fnt4x6#23')                #21
              355a 4073  ora  $73         15501  ora(115)                        #22
                                          15502
                                          15503  label('fnt4x6#21')
fnt4x6#21:    355b 2073  anda $73         15504  anda(115)                       #21
              355c 0200  nop              15505  nop()                           #22
                                          15506
                                          15507  label('fnt4x6#23')
fnt4x6#23:    355d e863  blt  fnt4x6#25   15508  bmi('fnt4x6#25')                #23
              355e 0500  ld   [x]         15509  ld([X])                         #24 fontChr >= 82
              355f a073  suba $73         15510  suba(115)                       #25
              3560 c22a  st   [$2a]       15511  st([sysArgs+6])                 #26 sysArgs+6 = fontChr - 82
              3561 fc67  bra  fnt4x6#29   15512  bra('fnt4x6#29')                #27
              3562 004f  ld   $4f         15513  ld(hi('font4x6_115up'))         #28 vTmp = font4x6_115up.hi
                                          15514
                                          15515  label('fnt4x6#25')
fnt4x6#25:    3563 a020  suba $20         15516  suba(32)                        #25 fontChr < 82, (assumes fontChr is 32 to 130)
              3564 c22a  st   [$2a]       15517  st([sysArgs+6])                 #26 vAC.lo = fontChr - 32
              3565 004e  ld   $4e         15518  ld(hi('font4x6_32up'))          #27 vTmp = font4x6_32up.hi
              3566 0200  nop              15519  nop()                           #28
                                          15520
                                          15521  label('fnt4x6#29')
fnt4x6#29:    3567 c21d  st   [$1d]       15522  st([vTmp])                      #29
              3568 1400  ld   $00,y       15523  ld(0,Y)                         #30
              3569 112b  ld   [$2b],x     15524  ld([sysArgs+7],X)               #31
              356a 012a  ld   [$2a]       15525  ld([sysArgs+6])                 #32
              356b 8200  adda ac          15526  adda(AC)                        #33
              356c 812a  adda [$2a]       15527  adda([sysArgs+6])               #34
              356d de00  st   [y,x++]     15528  st([Y,Xpp])                     #35 fontTable.lo = sysArgs+6*3
              356e 011d  ld   [$1d]       15529  ld([vTmp])                      #36
              356f c600  st   [x]         15530  st([X])                         #37 fontTable.hi = vTmp
              3570 1403  ld   $03,y       15531  ld(hi('NEXTY'),Y)               #38
              3571 e000  jmp  y,$00       15532  jmp(Y,'NEXTY')                  #39
              3572 00eb  ld   $eb         15533  ld(-42/2)                       #40
                                          15534
                                          15535  label('.fnt4x6#18')
.fnt4x6#18:   3573 0021  ld   $21         15536  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              3574 c202  st   [$02]       15537  st([vCpuSelect])                #19 restore PREFX3 instruction page
              3575 9401  adda $01,y       15538  adda(1,Y)                       #20 retry instruction
              3576 e000  jmp  y,$00       15539  jmp(Y,'NEXTY')                  #21
              3577 00f4  ld   $f4         15540  ld(-24/2)                       #22
                                          15541
                                          15542
                                          15543  # PRN4X6 implementation
                                          15544  label('prn4x6#13')
prn4x6#13:    3578 00da  ld   $da         15545  ld(min(0,maxTicks-106/2))       #13
              3579 8115  adda [$15]       15546  adda([vTicks])                  #14
              357a e8db  blt  .prn4x6#17  15547  blt('.prn4x6#17')               #15 not enough time left, so retry
              357b 1400  ld   $00,y       15548  ld(0,Y)                         #16
              357c 112b  ld   [$2b],x     15549  ld([sysArgs+7],X)               #17 textFont addr
              357d 0500  ld   [x]         15550  ld([X])                         #18
              357e c21d  st   [$1d]       15551  st([vTmp])                      #19
              357f de00  st   [y,x++]     15552  st([Y,Xpp])                     #20
              3580 0500  ld   [x]         15553  ld([X])                         #21 LUP to $4E00 or $4F00
              3581 1600  ld   ac,y        15554  ld(AC,Y)                        #22
              3582 011d  ld   [$1d]       15555  ld([vTmp])                      #23
              3583 e200  jmp  y,ac        15556  jmp(Y,AC)                       #24
              3584 fcfd  bra  $fd         15557  bra(0xFD)                       #25 branch to trampoline after fetching byte
                                          15558
                                          15559  label('prn4x6Return')
prn4x6Return: 3585 e888  blt  $3588       15560  bmi(pc()+3)                     #30
              3586 fc89  bra  $3589       15561  bra(pc()+3)                     #31
              3587 0124  ld   [$24]       15562  ld([sysArgs+0])                 #32
              3588 0125  ld   [$25]       15563  ld([sysArgs+1])                 #32(!)
              3589 1519  ld   [$19],y     15564  ld([vAC+1],Y)                   #33
              358a 1118  ld   [$18],x     15565  ld([vAC],X)                     #34 dest addr
              358b de00  st   [y,x++]     15566  st([Y,Xpp])                     #35 draw pixel0
                                          15567
              358c 011d  ld   [$1d]       15568  ld([vTmp])                      #36
              358d 8200  adda ac          15569  adda(AC)                        #37
              358e c21d  st   [$1d]       15570  st([vTmp])                      #38
              358f e892  blt  $3592       15571  bmi(pc()+3)                     #39
              3590 fc93  bra  $3593       15572  bra(pc()+3)                     #40
              3591 0124  ld   [$24]       15573  ld([sysArgs+0])                 #41
              3592 0125  ld   [$25]       15574  ld([sysArgs+1])                 #41(!)
              3593 de00  st   [y,x++]     15575  st([Y,Xpp])                     #42 draw pixel1
                                          15576
              3594 011d  ld   [$1d]       15577  ld([vTmp])                      #43
              3595 8200  adda ac          15578  adda(AC)                        #44
              3596 c21d  st   [$1d]       15579  st([vTmp])                      #45
              3597 e89a  blt  $359a       15580  bmi(pc()+3)                     #46
              3598 fc9b  bra  $359b       15581  bra(pc()+3)                     #47
              3599 0124  ld   [$24]       15582  ld([sysArgs+0])                 #48
              359a 0125  ld   [$25]       15583  ld([sysArgs+1])                 #48(!)
              359b de00  st   [y,x++]     15584  st([Y,Xpp])                     #49 draw pixel2
                                          15585
              359c 011d  ld   [$1d]       15586  ld([vTmp])                      #50
              359d 8200  adda ac          15587  adda(AC)                        #51
              359e c21d  st   [$1d]       15588  st([vTmp])                      #52
              359f e8a2  blt  $35a2       15589  bmi(pc()+3)                     #53
              35a0 fca3  bra  $35a3       15590  bra(pc()+3)                     #54
              35a1 0124  ld   [$24]       15591  ld([sysArgs+0])                 #55
              35a2 0125  ld   [$25]       15592  ld([sysArgs+1])                 #55(!)
              35a3 de00  st   [y,x++]     15593  st([Y,Xpp])                     #56 draw pixel3
                                          15594
              35a4 0119  ld   [$19]       15595  ld([vAC+1])                     #57
              35a5 8001  adda $01         15596  adda(1)                         #58
              35a6 d619  st   [$19],y     15597  st([vAC+1],Y)                   #59
              35a7 1118  ld   [$18],x     15598  ld([vAC],X)                     #60 next scanline addr
                                          15599
              35a8 011d  ld   [$1d]       15600  ld([vTmp])                      #61
              35a9 8200  adda ac          15601  adda(AC)                        #62
              35aa c21d  st   [$1d]       15602  st([vTmp])                      #63
              35ab e8ae  blt  $35ae       15603  bmi(pc()+3)                     #64
              35ac fcaf  bra  $35af       15604  bra(pc()+3)                     #65
              35ad 0124  ld   [$24]       15605  ld([sysArgs+0])                 #66
              35ae 0125  ld   [$25]       15606  ld([sysArgs+1])                 #66(!)
              35af de00  st   [y,x++]     15607  st([Y,Xpp])                     #67 draw pixel4
                                          15608
              35b0 011d  ld   [$1d]       15609  ld([vTmp])                      #68
              35b1 8200  adda ac          15610  adda(AC)                        #69
              35b2 c21d  st   [$1d]       15611  st([vTmp])                      #70
              35b3 e8b6  blt  $35b6       15612  bmi(pc()+3)                     #71
              35b4 fcb7  bra  $35b7       15613  bra(pc()+3)                     #72
              35b5 0124  ld   [$24]       15614  ld([sysArgs+0])                 #73
              35b6 0125  ld   [$25]       15615  ld([sysArgs+1])                 #73(!)
              35b7 de00  st   [y,x++]     15616  st([Y,Xpp])                     #74 draw pixel5
                                          15617
              35b8 011d  ld   [$1d]       15618  ld([vTmp])                      #75
              35b9 8200  adda ac          15619  adda(AC)                        #76
              35ba c21d  st   [$1d]       15620  st([vTmp])                      #77
              35bb e8be  blt  $35be       15621  bmi(pc()+3)                     #78
              35bc fcbf  bra  $35bf       15622  bra(pc()+3)                     #79
              35bd 0124  ld   [$24]       15623  ld([sysArgs+0])                 #80
              35be 0125  ld   [$25]       15624  ld([sysArgs+1])                 #80(!)
              35bf de00  st   [y,x++]     15625  st([Y,Xpp])                     #81 draw pixel6
                                          15626
              35c0 011d  ld   [$1d]       15627  ld([vTmp])                      #82
              35c1 8200  adda ac          15628  adda(AC)                        #83
              35c2 c21d  st   [$1d]       15629  st([vTmp])                      #84
              35c3 e8c6  blt  $35c6       15630  bmi(pc()+3)                     #85
              35c4 fcc7  bra  $35c7       15631  bra(pc()+3)                     #86
              35c5 0124  ld   [$24]       15632  ld([sysArgs+0])                 #87
              35c6 0125  ld   [$25]       15633  ld([sysArgs+1])                 #87(!)
              35c7 de00  st   [y,x++]     15634  st([Y,Xpp])                     #88 draw pixel7
                                          15635
              35c8 0119  ld   [$19]       15636  ld([vAC+1])                     #89
              35c9 8001  adda $01         15637  adda(1)                         #90
              35ca c219  st   [$19]       15638  st([vAC+1])                     #91
                                          15639
              35cb 112b  ld   [$2b],x     15640  ld([sysArgs+7],X)               #92 textFont addr
              35cc 0500  ld   [x]         15641  ld([X])                         #93
              35cd 8001  adda $01         15642  adda(1)                         #94
              35ce c600  st   [x]         15643  st([X])                         #95 increment next byte address
                                          15644
              35cf 0126  ld   [$26]       15645  ld([sysArgs+2])                 #96 LUP counter, (3 LUP's per 4x6 char)
              35d0 a001  suba $01         15646  suba(1)                         #97
              35d1 f0d8  beq  .prn4x6#100 15647  beq('.prn4x6#100')              #98
              35d2 c226  st   [$26]       15648  st([sysArgs+2])                 #99
              35d3 0022  ld   $22         15649  ld(hi('PREFX2_PAGE'))           #100 ENTER is at $(n-1)ff, where n = instruction page
              35d4 c202  st   [$02]       15650  st([vCpuSelect])                #101 restore PREFX2 instruction page
              35d5 9401  adda $01,y       15651  adda(1,Y)                       #102 restart instruction
              35d6 e000  jmp  y,$00       15652  jmp(Y,'NEXTY')                  #103
              35d7 00cb  ld   $cb         15653  ld(-106/2)                      #104
                                          15654
                                          15655  label('.prn4x6#100')
.prn4x6#100:  35d8 1403  ld   $03,y       15656  ld(hi('NEXTY'),Y)               #100
              35d9 e000  jmp  y,$00       15657  jmp(Y,'NEXTY')                  #101
              35da 00cc  ld   $cc         15658  ld(-104/2)                      #102
                                          15659
                                          15660  label('.prn4x6#17')
.prn4x6#17:   35db 0022  ld   $22         15661  ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              35dc c202  st   [$02]       15662  st([vCpuSelect])                #18 restore PREFX2 instruction page
              35dd 9401  adda $01,y       15663  adda(1,Y)                       #19 retry instruction
              35de e0cb  jmp  y,$cb       15664  jmp(Y,'REENTER')                #20
              35df 00f4  ld   $f4         15665  ld(-24/2)                       #21
                                          15666
                                          15667
              35e0 0200  nop              15668  fillers(until=0xff)
              35e1 0200  nop
              35e2 0200  nop
              * 31 times
              35ff 0200  nop              15669  align(0x100, size=0x100)
                                          15670
                                          15671  #-----------------------------------------------------------------------
                                          15672  #  More vCPU instruction implementations, (0x3600)
                                          15673  #-----------------------------------------------------------------------
                                          15674  #
                                          15675  # VTBL implementation
                                          15676  label('vtbl#13')
vtbl#13:      3600 8119  adda [$19]       15677  adda([vAC+1])                   #13 y*2
              3601 1200  ld   ac,x        15678  ld(AC,X)                        #14
              3602 1401  ld   $01,y       15679  ld(1,Y)                         #15 Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              3603 0d00  ld   [y,x]       15680  ld([Y,X])                       #16
              3604 c21d  st   [$1d]       15681  st([vTmp])                      #17
              3605 1400  ld   $00,y       15682  ld(0,Y)                         #18
              3606 112b  ld   [$2b],x     15683  ld([sysArgs+7],X)               #19
              3607 0118  ld   [$18]       15684  ld([vAC])                       #20
              3608 de00  st   [y,x++]     15685  st([Y,Xpp])                     #21
              3609 011d  ld   [$1d]       15686  ld([vTmp])                      #22
              360a ce00  st   [y,x]       15687  st([Y,X])                       #23
              360b 1403  ld   $03,y       15688  ld(hi('NEXTY'),Y)               #24
              360c e000  jmp  y,$00       15689  jmp(Y,'NEXTY')                  #25
              360d 00f2  ld   $f2         15690  ld(-28/2)                       #26
                                          15691
                                          15692
                                          15693  # CMPII implementation
                                          15694  label('cmpii#13')
cmpii#13:     360e c22a  st   [$2a]       15695  st([sysArgs+6])                 #13 imm1
              360f 00fd  ld   $fd         15696  ld(min(0,maxTicks-36/2))        #14
              3610 8115  adda [$15]       15697  adda([vTicks])                  #15
              3611 e832  blt  .cmpii#18   15698  blt('.cmpii#18')                #16 not enough time left, so retry
              3612 0118  ld   [$18]       15699  ld([vAC])                       #17
              3613 e817  blt  cmpii#20    15700  bmi('cmpii#20')                 #18
              3614 a12a  suba [$2a]       15701  suba([sysArgs+6])               #19 imm0
              3615 fc19  bra  cmpii#22    15702  bra('cmpii#22')                 #20
              3616 412a  ora  [$2a]       15703  ora([sysArgs+6])                #21
                                          15704
                                          15705  label('cmpii#20')
cmpii#20:     3617 212a  anda [$2a]       15706  anda([sysArgs+6])               #20
              3618 0200  nop              15707  nop()                           #21
                                          15708
                                          15709  label('cmpii#22')
cmpii#22:     3619 f421  bge  cmpii#24    15710  bpl('cmpii#24')                 #22
              361a 0118  ld   [$18]       15711  ld([vAC])                       #23
              361b 00ff  ld   $ff         15712  ld(0xFF)                        #24 vAC < imm0
              361c c218  st   [$18]       15713  st([vAC])                       #25
              361d c219  st   [$19]       15714  st([vAC+1])                     #26
              361e 1403  ld   $03,y       15715  ld(hi('REENTER'),Y)             #27
              361f e0cb  jmp  y,$cb       15716  jmp(Y,'REENTER')                #28
              3620 00f0  ld   $f0         15717  ld(-32/2)                       #29
                                          15718
                                          15719  label('cmpii#24')
cmpii#24:     3621 e825  blt  cmpii#26    15720  bmi('cmpii#26')                 #24
              3622 a12b  suba [$2b]       15721  suba([sysArgs+7])               #25 imm1
              3623 fc27  bra  cmpii#28    15722  bra('cmpii#28')                 #26
              3624 412b  ora  [$2b]       15723  ora([sysArgs+7])                #27
                                          15724
                                          15725  label('cmpii#26')
cmpii#26:     3625 212b  anda [$2b]       15726  anda([sysArgs+7])               #26
              3626 0200  nop              15727  nop()                           #27
                                          15728
                                          15729  label('cmpii#28')
cmpii#28:     3627 e82d  blt  cmpii#30    15730  bmi('cmpii#30')                 #28
              3628 0001  ld   $01         15731  ld(0x01)                        #29 vAC >= imm1
              3629 c218  st   [$18]       15732  st([vAC])                       #30
              362a 1403  ld   $03,y       15733  ld(hi('REENTER'),Y)             #31
              362b e0cb  jmp  y,$cb       15734  jmp(Y,'REENTER')                #32
              362c 00ee  ld   $ee         15735  ld(-36/2)                       #33
                                          15736
                                          15737  label('cmpii#30')
cmpii#30:     362d 0000  ld   $00         15738  ld(0x00)                        #30 imm0 >= vAC < imm1
              362e c218  st   [$18]       15739  st([vAC])                       #31
              362f 1403  ld   $03,y       15740  ld(hi('NEXTY'),Y)               #32
              3630 e000  jmp  y,$00       15741  jmp(Y,'NEXTY')                  #33
              3631 00ee  ld   $ee         15742  ld(-36/2)                       #34
                                          15743
                                          15744  label('.cmpii#18')
.cmpii#18:    3632 0021  ld   $21         15745  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              3633 c202  st   [$02]       15746  st([vCpuSelect])                #19 restore PREFX3 instruction page
              3634 9401  adda $01,y       15747  adda(1,Y)                       #20 retry instruction
              3635 e000  jmp  y,$00       15748  jmp(Y,'NEXTY')                  #21
              3636 00f4  ld   $f4         15749  ld(-24/2)                       #22
                                          15750
                                          15751
                                          15752  # LDARRW implementation
                                          15753  label('ldarrw#13')
ldarrw#13:    3637 de00  st   [y,x++]     15754  st([Y,Xpp])                     #13 X++
              3638 c21d  st   [$1d]       15755  st([vTmp])                      #14 var
              3639 00f0  ld   $f0         15756  ld(min(0,maxTicks-62/2))        #15
              363a 8115  adda [$15]       15757  adda([vTicks])                  #16
              363b e869  blt  .ldarrw#19  15758  blt('.ldarrw#19')               #17 not enough time left, so retry
              363c 0d00  ld   [y,x]       15759  ld([Y,X])                       #18
              363d de00  st   [y,x++]     15760  st([Y,Xpp])                     #19 X++
              363e c2b0  st   [$b0]       15761  st([0xB0])                      #20 imm.lo
              363f 0d00  ld   [y,x]       15762  ld([Y,X])                       #21
              3640 c2b1  st   [$b1]       15763  st([0xB1])                      #22 imm.hi
              3641 1400  ld   $00,y       15764  ld(0,Y)                         #23
              3642 111d  ld   [$1d],x     15765  ld([vTmp],X)                    #24
              3643 0500  ld   [x]         15766  ld([X])                         #25
              3644 de00  st   [y,x++]     15767  st([Y,Xpp])                     #26 X++
              3645 c22a  st   [$2a]       15768  st([sysArgs+6])                 #27 idx.lo
              3646 0500  ld   [x]         15769  ld([X])                         #28
              3647 c22b  st   [$2b]       15770  st([sysArgs+7])                 #29 idx.hi
              3648 012a  ld   [$2a]       15771  ld([sysArgs+6])                 #30
              3649 3080  anda $80,x       15772  anda(0x80,X)                    #31
              364a 812a  adda [$2a]       15773  adda([sysArgs+6])               #32
              364b c22a  st   [$2a]       15774  st([sysArgs+6])                 #33 idx.lo*2
              364c 0500  ld   [x]         15775  ld([X])                         #34 msb idx.lo
              364d 812b  adda [$2b]       15776  adda([sysArgs+7])               #35
              364e 812b  adda [$2b]       15777  adda([sysArgs+7])               #36
              364f c22b  st   [$2b]       15778  st([sysArgs+7])                 #37 idx.hi*2
              3650 01b0  ld   [$b0]       15779  ld([0xB0])                      #38
              3651 812a  adda [$2a]       15780  adda([sysArgs+6])               #39
              3652 c2b0  st   [$b0]       15781  st([0xB0])                      #40 [0xB0] = [0xB0] + idx.lo
              3653 e857  blt  .ldarrw#43  15782  bmi('.ldarrw#43')               #41 check carry
              3654 a12a  suba [$2a]       15783  suba([sysArgs+6])               #42 restore [0xB0]
              3655 fc59  bra  .ldarrw#45  15784  bra('.ldarrw#45')               #43
              3656 412a  ora  [$2a]       15785  ora([sysArgs+6])                #44 carry in bit 7
                                          15786
                                          15787  label('.ldarrw#43')
.ldarrw#43:   3657 212a  anda [$2a]       15788  anda([sysArgs+6])               #43 carry in bit 7
              3658 0200  nop              15789  nop()                           #44
                                          15790
                                          15791  label('.ldarrw#45')
.ldarrw#45:   3659 3080  anda $80,x       15792  anda(0x80,X)                    #45
              365a 0500  ld   [x]         15793  ld([X])                         #46 carry in bit 0
              365b 81b1  adda [$b1]       15794  adda([0xB1])                    #47
              365c 952b  adda [$2b],y     15795  adda([sysArgs+7],Y)             #48 Y = [0xB1] + idx.hi*2 + carry
              365d 11b0  ld   [$b0],x     15796  ld([0xB0],X)                    #49 X = [0xB0] + idx.lo*2
              365e 0d00  ld   [y,x]       15797  ld([Y,X])                       #50
              365f de00  st   [y,x++]     15798  st([Y,Xpp])                     #51
              3660 c218  st   [$18]       15799  st([vAC])                       #52
              3661 0d00  ld   [y,x]       15800  ld([Y,X])                       #53
              3662 c219  st   [$19]       15801  st([vAC+1])                     #54
              3663 0116  ld   [$16]       15802  ld([vPC])                       #55
              3664 8002  adda $02         15803  adda(2)                         #56
              3665 c216  st   [$16]       15804  st([vPC])                       #57
              3666 1403  ld   $03,y       15805  ld(hi('NEXTY'),Y)               #58
              3667 e000  jmp  y,$00       15806  jmp(Y,'NEXTY')                  #59
              3668 00e1  ld   $e1         15807  ld(-62/2)                       #60
                                          15808
                                          15809  label('.ldarrw#19')
.ldarrw#19:   3669 0116  ld   [$16]       15810  ld([vPC])                       #19 retry instruction
              366a a002  suba $02         15811  suba(2)                         #20
              366b c216  st   [$16]       15812  st([vPC])                       #21
              366c 1403  ld   $03,y       15813  ld(hi('NEXTY'),Y)               #22
              366d e000  jmp  y,$00       15814  jmp(Y,'NEXTY')                  #23
              366e 00f3  ld   $f3         15815  ld(-26/2)                       #24
                                          15816
                                          15817
                                          15818  # STARRW implementation
                                          15819  label('starrw#13')
starrw#13:    366f 1517  ld   [$17],y     15820  ld([vPC+1],Y)                   #13 vPC.hi
              3670 de00  st   [y,x++]     15821  st([Y,Xpp])                     #14 X++
              3671 c21d  st   [$1d]       15822  st([vTmp])                      #15 var
              3672 00f0  ld   $f0         15823  ld(min(0,maxTicks-62/2))        #16
              3673 8115  adda [$15]       15824  adda([vTicks])                  #17
              3674 e8a1  blt  .starrw#20  15825  blt('.starrw#20')               #18 not enough time left, so retry
              3675 0d00  ld   [y,x]       15826  ld([Y,X])                       #19
              3676 de00  st   [y,x++]     15827  st([Y,Xpp])                     #20 X++
              3677 c2b0  st   [$b0]       15828  st([0xB0])                      #21 imm.lo
              3678 0d00  ld   [y,x]       15829  ld([Y,X])                       #22
              3679 c2b1  st   [$b1]       15830  st([0xB1])                      #23 imm.hi
              367a 1400  ld   $00,y       15831  ld(0,Y)                         #24
              367b 111d  ld   [$1d],x     15832  ld([vTmp],X)                    #25
              367c 0500  ld   [x]         15833  ld([X])                         #26
              367d de00  st   [y,x++]     15834  st([Y,Xpp])                     #27 X++
              367e c22a  st   [$2a]       15835  st([sysArgs+6])                 #28 idx.lo
              367f 0500  ld   [x]         15836  ld([X])                         #29
              3680 c22b  st   [$2b]       15837  st([sysArgs+7])                 #30 idx.hi
              3681 012a  ld   [$2a]       15838  ld([sysArgs+6])                 #31
              3682 3080  anda $80,x       15839  anda(0x80,X)                    #32
              3683 812a  adda [$2a]       15840  adda([sysArgs+6])               #33
              3684 c22a  st   [$2a]       15841  st([sysArgs+6])                 #34 idx.lo*2
              3685 0500  ld   [x]         15842  ld([X])                         #35 msb idx.lo
              3686 812b  adda [$2b]       15843  adda([sysArgs+7])               #36
              3687 812b  adda [$2b]       15844  adda([sysArgs+7])               #37
              3688 c22b  st   [$2b]       15845  st([sysArgs+7])                 #38 idx.hi*2
              3689 01b0  ld   [$b0]       15846  ld([0xB0])                      #39
              368a 812a  adda [$2a]       15847  adda([sysArgs+6])               #40
              368b c2b0  st   [$b0]       15848  st([0xB0])                      #41 [0xB0] = [0xB0] + idx.lo
              368c e890  blt  .starrw#44  15849  bmi('.starrw#44')               #42 check carry
              368d a12a  suba [$2a]       15850  suba([sysArgs+6])               #43 restore [0xB0]
              368e fc92  bra  .starrw#46  15851  bra('.starrw#46')               #44
              368f 412a  ora  [$2a]       15852  ora([sysArgs+6])                #45 carry in bit 7
                                          15853
                                          15854  label('.starrw#44')
.starrw#44:   3690 212a  anda [$2a]       15855  anda([sysArgs+6])               #44 carry in bit 7
              3691 0200  nop              15856  nop()                           #45
                                          15857
                                          15858  label('.starrw#46')
.starrw#46:   3692 3080  anda $80,x       15859  anda(0x80,X)                    #46
              3693 0500  ld   [x]         15860  ld([X])                         #47 carry in bit 0
              3694 81b1  adda [$b1]       15861  adda([0xB1])                    #48
              3695 952b  adda [$2b],y     15862  adda([sysArgs+7],Y)             #49 Y = [0xB1] + idx.hi*2 + carry
              3696 11b0  ld   [$b0],x     15863  ld([0xB0],X)                    #50 X = [0xB0] + idx.lo*2
              3697 0118  ld   [$18]       15864  ld([vAC])                       #51
              3698 de00  st   [y,x++]     15865  st([Y,Xpp])                     #52
              3699 0119  ld   [$19]       15866  ld([vAC+1])                     #53
              369a ce00  st   [y,x]       15867  st([Y,X])                       #54
              369b 0116  ld   [$16]       15868  ld([vPC])                       #55
              369c 8002  adda $02         15869  adda(2)                         #56
              369d c216  st   [$16]       15870  st([vPC])                       #57
              369e 1403  ld   $03,y       15871  ld(hi('NEXTY'),Y)               #58
              369f e000  jmp  y,$00       15872  jmp(Y,'NEXTY')                  #59
              36a0 00e1  ld   $e1         15873  ld(-62/2)                       #60
                                          15874
                                          15875  label('.starrw#20')
.starrw#20:   36a1 0116  ld   [$16]       15876  ld([vPC])                       #20 retry instruction
              36a2 a002  suba $02         15877  suba(2)                         #21
              36a3 c216  st   [$16]       15878  st([vPC])                       #22
              36a4 1403  ld   $03,y       15879  ld(hi('REENTER'),Y)             #23
              36a5 e0cb  jmp  y,$cb       15880  jmp(Y,'REENTER')                #24
              36a6 00f2  ld   $f2         15881  ld(-28/2)                       #25
                                          15882
                                          15883
                                          15884  # MULW3 implementation
                                          15885  label('mulw3#13')
mulw3#13:     36a7 00fb  ld   $fb         15886  ld(min(0,maxTicks-40/2))        #13
              36a8 8115  adda [$15]       15887  adda([vTicks])                  #14
              36a9 e8c3  blt  .mulw3#17   15888  blt('.mulw3#17')                #15 not enough time left, so retry
              36aa 0118  ld   [$18]       15889  ld([vAC])                       #16
              36ab 3080  anda $80,x       15890  anda(0x80,X)                    #17
              36ac 8118  adda [$18]       15891  adda([vAC])                     #18
              36ad c22a  st   [$2a]       15892  st([sysArgs+6])                 #19 vAC.lo*2
              36ae 0119  ld   [$19]       15893  ld([vAC+1])                     #20
              36af 8119  adda [$19]       15894  adda([vAC+1])                   #21
              36b0 8500  adda [x]         15895  adda([X])                       #22 msb vAC.lo
              36b1 c22b  st   [$2b]       15896  st([sysArgs+7])                 #23 vAC.hi*2
              36b2 0118  ld   [$18]       15897  ld([vAC])                       #24
              36b3 812a  adda [$2a]       15898  adda([sysArgs+6])               #25
              36b4 c218  st   [$18]       15899  st([vAC])                       #26 vAC.lo*2 + vAC.lo
              36b5 e8b9  blt  .mulw3#29   15900  bmi('.mulw3#29')                #27 check carry
              36b6 a12a  suba [$2a]       15901  suba([sysArgs+6])               #28 restore [vAC]
              36b7 fcbb  bra  .mulw3#31   15902  bra('.mulw3#31')                #29
              36b8 412a  ora  [$2a]       15903  ora([sysArgs+6])                #30 carry in bit 7
                                          15904
                                          15905  label('.mulw3#29')
.mulw3#29:    36b9 212a  anda [$2a]       15906  anda([sysArgs+6])               #29 carry in bit 7
              36ba 0200  nop              15907  nop()                           #30
                                          15908
                                          15909  label('.mulw3#31')
.mulw3#31:    36bb 3080  anda $80,x       15910  anda(0x80,X)                    #31
              36bc 0500  ld   [x]         15911  ld([X])                         #32 carry in bit 0
              36bd 812b  adda [$2b]       15912  adda([sysArgs+7])               #33
              36be 8119  adda [$19]       15913  adda([vAC+1])                   #34 vAC.hi*2 + vAC.hi + carry
              36bf c219  st   [$19]       15914  st([vAC+1])                     #35
              36c0 1403  ld   $03,y       15915  ld(hi('NEXTY'),Y)               #36
              36c1 e000  jmp  y,$00       15916  jmp(Y,'NEXTY')                  #37
              36c2 00ec  ld   $ec         15917  ld(-40/2)                       #38
                                          15918
                                          15919  label('.mulw3#17')
.mulw3#17:    36c3 0023  ld   $23         15920  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              36c4 c202  st   [$02]       15921  st([vCpuSelect])                #18 restore PREFX1 instruction page
              36c5 9401  adda $01,y       15922  adda(1,Y)                       #19 retry instruction
              36c6 e0cb  jmp  y,$cb       15923  jmp(Y,'REENTER')                #20
              36c7 00f4  ld   $f4         15924  ld(-24/2)                       #21
                                          15925
                                          15926
                                          15927  # MULW5 implementation
                                          15928  label('mulw5#13')
mulw5#13:     36c8 00f7  ld   $f7         15929  ld(min(0,maxTicks-48/2))        #13
              36c9 8115  adda [$15]       15930  adda([vTicks])                  #14
              36ca e8ec  blt  .mulw5#17   15931  blt('.mulw5#17')                #15 not enough time left, so retry
              36cb 0118  ld   [$18]       15932  ld([vAC])                       #16
              36cc 3080  anda $80,x       15933  anda(0x80,X)                    #17
              36cd 8118  adda [$18]       15934  adda([vAC])                     #18
              36ce c22a  st   [$2a]       15935  st([sysArgs+6])                 #19 vAC.lo*2
              36cf 0119  ld   [$19]       15936  ld([vAC+1])                     #20
              36d0 8119  adda [$19]       15937  adda([vAC+1])                   #21
              36d1 8500  adda [x]         15938  adda([X])                       #22 msb vAC.lo
              36d2 c22b  st   [$2b]       15939  st([sysArgs+7])                 #23 vAC.hi*2
              36d3 012a  ld   [$2a]       15940  ld([sysArgs+6])                 #24
              36d4 3080  anda $80,x       15941  anda(0x80,X)                    #25
              36d5 812a  adda [$2a]       15942  adda([sysArgs+6])               #26
              36d6 c22a  st   [$2a]       15943  st([sysArgs+6])                 #27 vAC.lo*4
              36d7 012b  ld   [$2b]       15944  ld([sysArgs+7])                 #28
              36d8 812b  adda [$2b]       15945  adda([sysArgs+7])               #29
              36d9 8500  adda [x]         15946  adda([X])                       #30 msb sysArgs+6
              36da c22b  st   [$2b]       15947  st([sysArgs+7])                 #31 vAC.hi*4
              36db 0118  ld   [$18]       15948  ld([vAC])                       #32
              36dc 812a  adda [$2a]       15949  adda([sysArgs+6])               #33
              36dd c218  st   [$18]       15950  st([vAC])                       #34 vAC.lo*4 + vAC.lo
              36de e8e2  blt  .mulw5#37   15951  bmi('.mulw5#37')                #35 check carry
              36df a12a  suba [$2a]       15952  suba([sysArgs+6])               #36 restore [vAC]
              36e0 fce4  bra  .mulw5#39   15953  bra('.mulw5#39')                #37
              36e1 412a  ora  [$2a]       15954  ora([sysArgs+6])                #38 carry in bit 7
                                          15955
                                          15956  label('.mulw5#37')
.mulw5#37:    36e2 212a  anda [$2a]       15957  anda([sysArgs+6])               #37 carry in bit 7
              36e3 0200  nop              15958  nop()                           #38
                                          15959
                                          15960  label('.mulw5#39')
.mulw5#39:    36e4 3080  anda $80,x       15961  anda(0x80,X)                    #39
              36e5 0500  ld   [x]         15962  ld([X])                         #40 carry in bit 0
              36e6 812b  adda [$2b]       15963  adda([sysArgs+7])               #41
              36e7 8119  adda [$19]       15964  adda([vAC+1])                   #42 vAC.hi*4 + vAC.hi + carry
              36e8 c219  st   [$19]       15965  st([vAC+1])                     #43
              36e9 1403  ld   $03,y       15966  ld(hi('NEXTY'),Y)               #44
              36ea e000  jmp  y,$00       15967  jmp(Y,'NEXTY')                  #45
              36eb 00e8  ld   $e8         15968  ld(-48/2)                       #46
                                          15969
                                          15970  label('.mulw5#17')
.mulw5#17:    36ec 0023  ld   $23         15971  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              36ed c202  st   [$02]       15972  st([vCpuSelect])                #18 restore PREFX1 instruction page
              36ee 9401  adda $01,y       15973  adda(1,Y)                       #19 retry instruction
              36ef e0cb  jmp  y,$cb       15974  jmp(Y,'REENTER')                #20
              36f0 00f4  ld   $f4         15975  ld(-24/2)                       #21
                                          15976
                                          15977
              36f1 0200  nop              15978  fillers(until=0xff)
              36f2 0200  nop
              36f3 0200  nop
              * 14 times
              36ff 0200  nop              15979  align(0x100, size=0x100)
                                          15980
                                          15981  #-----------------------------------------------------------------------
                                          15982  #  More vCPU instruction implementations, (0x3700)
                                          15983  #-----------------------------------------------------------------------
                                          15984  #
                                          15985  # PMIDIV implementation
                                          15986  label('pmidiv#13')
pmidiv#13:    3700 1400  ld   $00,y       15987  ld(0,Y)                         #13
              3701 00da  ld   $da         15988  ld(min(0,maxTicks-106/2))       #14
              3702 8115  adda [$15]       15989  adda([vTicks])                  #15
              3703 e852  blt  .pmidiv#18  15990  blt('.pmidiv#18')               #16 not enough time left, so retry
              3704 1519  ld   [$19],y     15991  ld([vAC+1],Y)                   #17
              3705 1118  ld   [$18],x     15992  ld([vAC],X)                     #18
              3706 0118  ld   [$18]       15993  ld([vAC])                       #19
              3707 8001  adda $01         15994  adda(1)                         #20
              3708 c218  st   [$18]       15995  st([vAC])                       #21
              3709 f00c  beq  $370c       15996  beq(pc()+3)                     #22
              370a fc0d  bra  $370d       15997  bra(pc()+3)                     #23
              370b 0000  ld   $00         15998  ld(0)                           #24
              370c 0001  ld   $01         15999  ld(1)                           #24 (!)
              370d 8119  adda [$19]       16000  adda([vAC+1])                   #25
              370e c219  st   [$19]       16001  st([vAC+1])                     #26 midiStream++
              370f 0d00  ld   [y,x]       16002  ld([Y,X])                       #27
              3710 c2c0  st   [$c0]       16003  st([0xC0])                      #28 midiCommand.lo
              3711 20f0  anda $f0         16004  anda(0xF0)                      #29
              3712 6090  xora $90         16005  xora(0x90)                      #30
              3713 ec57  bne  .pmidiv#33  16006  bne('.pmidiv#33')               #31 end note
              3714 1519  ld   [$19],y     16007  ld([vAC+1],Y)                   #32
              3715 1118  ld   [$18],x     16008  ld([vAC],X)                     #33
              3716 0118  ld   [$18]       16009  ld([vAC])                       #34
              3717 8001  adda $01         16010  adda(1)                         #35
              3718 c218  st   [$18]       16011  st([vAC])                       #36
              3719 f01c  beq  $371c       16012  beq(pc()+3)                     #37
              371a fc1d  bra  $371d       16013  bra(pc()+3)                     #38
              371b 0000  ld   $00         16014  ld(0)                           #39
              371c 0001  ld   $01         16015  ld(1)                           #39 (!)
              371d 8119  adda [$19]       16016  adda([vAC+1])                   #40
              371e c219  st   [$19]       16017  st([vAC+1])                     #41 midiStream++
              371f 0037  ld   $37         16018  ld(hi('pmidiv#13'))             #42
              3720 c2c1  st   [$c1]       16019  st([0xC1])                      #43
              3721 002a  ld   $2a         16020  ld('.pmidiv#59_0')              #44 low byte of low midi return address
              3722 c21d  st   [$1d]       16021  st([vTmp])                      #45
              3723 0d00  ld   [y,x]       16022  ld([Y,X])                       #46
              3724 c2c2  st   [$c2]       16023  st([0xC2])                      #47 note
              3725 a00b  suba $0b         16024  suba(11)                        #48 note -= 11
              3726 8200  adda ac          16025  adda(AC)                        #49 note*2
              3727 1409  ld   $09,y       16026  ld(hi('noteTrampoline'),Y)      #50
              3728 e0c0  jmp  y,$c0       16027  jmp(Y,'noteTrampoline')         #51
              3729 c2c3  st   [$c3]       16028  st([0xC3])                      #52 index, (low freq byte)
                                          16029  label('.pmidiv#59_0')
.pmidiv#59_0: 372a c2c2  st   [$c2]       16030  st([0xC2])                      #59 freq.lo
              372b 0031  ld   $31         16031  ld('.pmidiv#72')                #60
              372c c21d  st   [$1d]       16032  st([vTmp])                      #61 low byte of high midi return address
              372d 1409  ld   $09,y       16033  ld(hi('noteTrampoline'),Y)      #62
              372e 01c3  ld   [$c3]       16034  ld([0xC3])                      #63
              372f e0c0  jmp  y,$c0       16035  jmp(Y,'noteTrampoline')         #64
              3730 8001  adda $01         16036  adda(1)                         #65 index + 1, (high freq byte)
                                          16037  label('.pmidiv#72')
.pmidiv#72:   3731 c2c3  st   [$c3]       16038  st([0xC3])                      #72 freq.hi
              3732 01c0  ld   [$c0]       16039  ld([0xC0])                      #73 midiCommand.lo
              3733 2003  anda $03         16040  anda(3)                         #74
              3734 9401  adda $01,y       16041  adda(1,Y)                       #75 chan.hi
              3735 10fc  ld   $fc,x       16042  ld(0xFC,X)                      #76 chan.lo
              3736 01c2  ld   [$c2]       16043  ld([0xC2])                      #77
              3737 de00  st   [y,x++]     16044  st([Y,Xpp])                     #78
              3738 01c3  ld   [$c3]       16045  ld([0xC3])                      #79
              3739 ce00  st   [y,x]       16046  st([Y,X])                       #80 [chan] = freq
              373a 1519  ld   [$19],y     16047  ld([vAC+1],Y)                   #81
              373b 1118  ld   [$18],x     16048  ld([vAC],X)                     #82
              373c 0118  ld   [$18]       16049  ld([vAC])                       #83
              373d 8001  adda $01         16050  adda(1)                         #84
              373e c218  st   [$18]       16051  st([vAC])                       #85
              373f f042  beq  $3742       16052  beq(pc()+3)                     #86
              3740 fc43  bra  $3743       16053  bra(pc()+3)                     #87
              3741 0000  ld   $00         16054  ld(0)                           #88
              3742 0001  ld   $01         16055  ld(1)                           #88 (!)
              3743 8119  adda [$19]       16056  adda([vAC+1])                   #89
              3744 c219  st   [$19]       16057  st([vAC+1])                     #90 midiStream++
              3745 0d00  ld   [y,x]       16058  ld([Y,X])                       #91 volume
              3746 c21d  st   [$1d]       16059  st([vTmp])                      #92
              3747 01c0  ld   [$c0]       16060  ld([0xC0])                      #93 midiCommand.lo
              3748 2003  anda $03         16061  anda(3)                         #94
              3749 9401  adda $01,y       16062  adda(1,Y)                       #95
              374a 10fa  ld   $fa,x       16063  ld(0xFA,X)                      #96
              374b 011d  ld   [$1d]       16064  ld([vTmp])                      #97
              374c ce00  st   [y,x]       16065  st([Y,X])                       #98
              374d 0021  ld   $21         16066  ld(hi('PREFX3_PAGE'))           #99 ENTER is at $(n-1)ff, where n = instruction page
              374e c202  st   [$02]       16067  st([vCpuSelect])                #100 restore PREFX3 instruction page
              374f 9401  adda $01,y       16068  adda(1,Y)                       #101 restart instruction
              3750 e0cb  jmp  y,$cb       16069  jmp(Y,'REENTER')                #102
              3751 00cb  ld   $cb         16070  ld(-106/2)                      #103
                                          16071
                                          16072  label('.pmidiv#18')
.pmidiv#18:   3752 0021  ld   $21         16073  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              3753 c202  st   [$02]       16074  st([vCpuSelect])                #19 restore PREFX3 instruction page
              3754 9401  adda $01,y       16075  adda(1,Y)                       #20 retry instruction
              3755 e000  jmp  y,$00       16076  jmp(Y,'NEXTY')                  #21
              3756 00f4  ld   $f4         16077  ld(-24/2)                       #22
                                          16078
                                          16079  # end note
                                          16080  label('.pmidiv#33')
.pmidiv#33:   3757 01c0  ld   [$c0]       16081  ld([0xC0])                      #33 midiCommand.lo
              3758 20f0  anda $f0         16082  anda(0xF0)                      #34
              3759 6080  xora $80         16083  xora(0x80)                      #35
              375a ec68  bne  .pmidiv#38  16084  bne('.pmidiv#38')               #36 new segment
              375b 01c0  ld   [$c0]       16085  ld([0xC0])                      #37 midiCommand.lo
              375c 2003  anda $03         16086  anda(3)                         #38
              375d 9401  adda $01,y       16087  adda(1,Y)                       #39 chan.hi
              375e 10fc  ld   $fc,x       16088  ld(0xFC,X)                      #40 chan.lo
              375f dc00  st   $00,[y,x++] 16089  st(0,[Y,Xpp])                   #41
              3760 dc00  st   $00,[y,x++] 16090  st(0,[Y,Xpp])                   #42 [chan] = freq
              3761 dc00  st   $00,[y,x++] 16091  st(0,[Y,Xpp])                   #43
              3762 cc00  st   $00,[y,x]   16092  st(0,[Y,X])                     #44 stop osc
              3763 0021  ld   $21         16093  ld(hi('PREFX3_PAGE'))           #45 ENTER is at $(n-1)ff, where n = instruction page
              3764 c202  st   [$02]       16094  st([vCpuSelect])                #46 restore PREFX3 instruction page
              3765 9401  adda $01,y       16095  adda(1,Y)                       #47 restart instruction
              3766 e0cb  jmp  y,$cb       16096  jmp(Y,'REENTER')                #48
              3767 00e6  ld   $e6         16097  ld(-52/2)                       #49
                                          16098
                                          16099  # new segment
                                          16100  label('.pmidiv#38')
.pmidiv#38:   3768 01c0  ld   [$c0]       16101  ld([0xC0])                      #38 midiCommand.lo
              3769 20f0  anda $f0         16102  anda(0xF0)                      #39
              376a 60d0  xora $d0         16103  xora(0xD0)                      #40
              376b ec84  bne  .pmidiv#43  16104  bne('.pmidiv#43')               #41 new delay
              376c 1519  ld   [$19],y     16105  ld([vAC+1],Y)                   #42
              376d 1118  ld   [$18],x     16106  ld([vAC],X)                     #43
              376e 0d00  ld   [y,x]       16107  ld([Y,X])                       #44 peek(midiStream)
              376f c218  st   [$18]       16108  st([vAC])                       #45 newStream.lo
              3770 de00  st   [y,x++]     16109  st([Y,Xpp])                     #46
              3771 0d00  ld   [y,x]       16110  ld([Y,X])                       #47 peek(midiStream + 1)
              3772 c219  st   [$19]       16111  st([vAC+1])                     #48 newStream.hi
              3773 1400  ld   $00,y       16112  ld(0,Y)                         #49
              3774 112a  ld   [$2a],x     16113  ld([sysArgs+6],X)               #50 midiStream.lo
              3775 0118  ld   [$18]       16114  ld([vAC])                       #51
              3776 de00  st   [y,x++]     16115  st([Y,Xpp])                     #52
              3777 0119  ld   [$19]       16116  ld([vAC+1])                     #53
              3778 ce00  st   [y,x]       16117  st([Y,X])                       #54 midiStream = vAC
              3779 0118  ld   [$18]       16118  ld([vAC])                       #55
              377a 4119  ora  [$19]       16119  ora([vAC+1])                    #56
                                          16120  bne('.pmidiv#59_1')             #57 continue
              377b ec7f  bne  .pmidiv#59_1
              377c 1403  ld   $03,y       16121  ld(hi('NEXTY'),Y)               #58 finished
              377d e000  jmp  y,$00       16122  jmp(Y,'NEXTY')                  #59
              377e 00e1  ld   $e1         16123  ld(-62/2)                       #60
                                          16124
                                          16125  label('.pmidiv#59_1')
.pmidiv#59_1: 377f 0021  ld   $21         16126  ld(hi('PREFX3_PAGE'))           #59 ENTER is at $(n-1)ff, where n = instruction page
              3780 c202  st   [$02]       16127  st([vCpuSelect])                #60 restore PREFX3 instruction page
              3781 9401  adda $01,y       16128  adda(1,Y)                       #61 restart instruction
              3782 e0cb  jmp  y,$cb       16129  jmp(Y,'REENTER')                #62
              3783 00df  ld   $df         16130  ld(-66/2)                       #63
                                          16131
                                          16132  # new delay
                                          16133  label('.pmidiv#43')
.pmidiv#43:   3784 1400  ld   $00,y       16134  ld(0,Y)                         #43
              3785 112a  ld   [$2a],x     16135  ld([sysArgs+6],X)               #44 midiStream.lo
              3786 0118  ld   [$18]       16136  ld([vAC])                       #45
              3787 de00  st   [y,x++]     16137  st([Y,Xpp])                     #46
              3788 0119  ld   [$19]       16138  ld([vAC+1])                     #47
              3789 ce00  st   [y,x]       16139  st([Y,X])                       #48 midiStream = vAC
              378a 112b  ld   [$2b],x     16140  ld([sysArgs+7],X)               #49 midiDelay.lo
              378b 01c0  ld   [$c0]       16141  ld([0xC0])                      #50 midiCommand.lo, (delay)
              378c 207f  anda $7f         16142  anda(0x7F)                      #51
              378d c600  st   [x]         16143  st([X])                         #52
              378e 1403  ld   $03,y       16144  ld(hi('REENTER'),Y)             #53
              378f e0cb  jmp  y,$cb       16145  jmp(Y,'REENTER')                #54
              3790 00e3  ld   $e3         16146  ld(-58/2)                       #55
                                          16147
                                          16148
                                          16149  # MULW6 implementation
                                          16150  label('mulw6#13')
mulw6#13:     3791 00f6  ld   $f6         16151  ld(min(0,maxTicks-50/2))        #13
              3792 8115  adda [$15]       16152  adda([vTicks])                  #14
              3793 e8b7  blt  .mulw6#17   16153  blt('.mulw6#17')                #15 not enough time left, so retry
              3794 0118  ld   [$18]       16154  ld([vAC])                       #16
              3795 3080  anda $80,x       16155  anda(0x80,X)                    #17
              3796 8118  adda [$18]       16156  adda([vAC])                     #18
              3797 c22a  st   [$2a]       16157  st([sysArgs+6])                 #19 vAC.lo*2
              3798 c2b0  st   [$b0]       16158  st([0xB0])                      #20
              3799 0119  ld   [$19]       16159  ld([vAC+1])                     #21
              379a 8119  adda [$19]       16160  adda([vAC+1])                   #22
              379b 8500  adda [x]         16161  adda([X])                       #23 msb vAC.lo
              379c c22b  st   [$2b]       16162  st([sysArgs+7])                 #24 vAC.hi*2
              379d c2b1  st   [$b1]       16163  st([0xB1])                      #25
              379e 012a  ld   [$2a]       16164  ld([sysArgs+6])                 #26
              379f 3080  anda $80,x       16165  anda(0x80,X)                    #27
              37a0 812a  adda [$2a]       16166  adda([sysArgs+6])               #28
              37a1 c22a  st   [$2a]       16167  st([sysArgs+6])                 #29 vAC.lo*4
              37a2 012b  ld   [$2b]       16168  ld([sysArgs+7])                 #30
              37a3 812b  adda [$2b]       16169  adda([sysArgs+7])               #31
              37a4 8500  adda [x]         16170  adda([X])                       #32 msb sysArgs+6
              37a5 c22b  st   [$2b]       16171  st([sysArgs+7])                 #33 vAC.hi*4
              37a6 01b0  ld   [$b0]       16172  ld([0xB0])                      #34
              37a7 812a  adda [$2a]       16173  adda([sysArgs+6])               #35
              37a8 c218  st   [$18]       16174  st([vAC])                       #36 vAC.lo*4 + vAC.lo*2
              37a9 e8ad  blt  .mulw6#39   16175  bmi('.mulw6#39')                #37 check carry
              37aa a12a  suba [$2a]       16176  suba([sysArgs+6])               #38 restore [vAC]
              37ab fcaf  bra  .mulw6#41   16177  bra('.mulw6#41')                #39
              37ac 412a  ora  [$2a]       16178  ora([sysArgs+6])                #40 carry in bit 7
                                          16179
                                          16180  label('.mulw6#39')
.mulw6#39:    37ad 212a  anda [$2a]       16181  anda([sysArgs+6])               #39 carry in bit 7
              37ae 0200  nop              16182  nop()                           #40
                                          16183
                                          16184  label('.mulw6#41')
.mulw6#41:    37af 3080  anda $80,x       16185  anda(0x80,X)                    #41
              37b0 0500  ld   [x]         16186  ld([X])                         #42 carry in bit 0
              37b1 812b  adda [$2b]       16187  adda([sysArgs+7])               #43
              37b2 81b1  adda [$b1]       16188  adda([0xB1])                    #44 vAC.hi*4 + vAC.hi*2 + carry
              37b3 c219  st   [$19]       16189  st([vAC+1])                     #45
              37b4 1403  ld   $03,y       16190  ld(hi('NEXTY'),Y)               #46
              37b5 e000  jmp  y,$00       16191  jmp(Y,'NEXTY')                  #47
              37b6 00e7  ld   $e7         16192  ld(-50/2)                       #48
                                          16193
                                          16194  label('.mulw6#17')
.mulw6#17:    37b7 0023  ld   $23         16195  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              37b8 c202  st   [$02]       16196  st([vCpuSelect])                #18 restore PREFX1 instruction page
              37b9 9401  adda $01,y       16197  adda(1,Y)                       #19 retry instruction
              37ba e0cb  jmp  y,$cb       16198  jmp(Y,'REENTER')                #20
              37bb 00f4  ld   $f4         16199  ld(-24/2)                       #21
                                          16200
                                          16201
                                          16202  # MULW7 implementation, (overflows at the same rate as MULW8)
                                          16203  label('mulw7#13')
mulw7#13:     37bc 00f2  ld   $f2         16204  ld(min(0,maxTicks-58/2))        #13
              37bd 8115  adda [$15]       16205  adda([vTicks])                  #14
              37be e8ea  blt  .mulw7#17   16206  blt('.mulw7#17')                #15 not enough time left, so retry
              37bf 0118  ld   [$18]       16207  ld([vAC])                       #16
              37c0 3080  anda $80,x       16208  anda(0x80,X)                    #17
              37c1 8118  adda [$18]       16209  adda([vAC])                     #18
              37c2 c22a  st   [$2a]       16210  st([sysArgs+6])                 #19 vAC.lo*2
              37c3 0119  ld   [$19]       16211  ld([vAC+1])                     #20
              37c4 8119  adda [$19]       16212  adda([vAC+1])                   #21
              37c5 8500  adda [x]         16213  adda([X])                       #22 msb vAC.lo
              37c6 c22b  st   [$2b]       16214  st([sysArgs+7])                 #23 vAC.hi*2
              37c7 012a  ld   [$2a]       16215  ld([sysArgs+6])                 #24
              37c8 3080  anda $80,x       16216  anda(0x80,X)                    #25
              37c9 812a  adda [$2a]       16217  adda([sysArgs+6])               #26
              37ca c22a  st   [$2a]       16218  st([sysArgs+6])                 #27 vAC.lo*4
              37cb 012b  ld   [$2b]       16219  ld([sysArgs+7])                 #28
              37cc 812b  adda [$2b]       16220  adda([sysArgs+7])               #29
              37cd 8500  adda [x]         16221  adda([X])                       #30 msb sysArgs+6
              37ce c22b  st   [$2b]       16222  st([sysArgs+7])                 #31 vAC.hi*4
              37cf 012a  ld   [$2a]       16223  ld([sysArgs+6])                 #32
              37d0 3080  anda $80,x       16224  anda(0x80,X)                    #33
              37d1 812a  adda [$2a]       16225  adda([sysArgs+6])               #34
              37d2 c22a  st   [$2a]       16226  st([sysArgs+6])                 #35 vAC.lo*8
              37d3 012b  ld   [$2b]       16227  ld([sysArgs+7])                 #36
              37d4 812b  adda [$2b]       16228  adda([sysArgs+7])               #37
              37d5 8500  adda [x]         16229  adda([X])                       #38 msb sysArgs+6
              37d6 c22b  st   [$2b]       16230  st([sysArgs+7])                 #39 vAC.hi*8
              37d7 012a  ld   [$2a]       16231  ld([sysArgs+6])                 #40
              37d8 e8dd  blt  .mulw7#43   16232  bmi('.mulw7#43')                #41 check borrow
              37d9 a118  suba [$18]       16233  suba([vAC])                     #42
              37da c22a  st   [$2a]       16234  st([sysArgs+6])                 #43 vAC.lo*8 - vAC.lo
              37db fce0  bra  .mulw7#46   16235  bra('.mulw7#46')                #44
              37dc 4118  ora  [$18]       16236  ora([vAC])                      #45 borrow in bit 7
                                          16237
                                          16238  label('.mulw7#43')
.mulw7#43:    37dd c22a  st   [$2a]       16239  st([sysArgs+6])                 #43 vAC.lo*8 - vAC.lo
              37de 2118  anda [$18]       16240  anda([vAC])                     #44 borrow in bit 7
              37df 0200  nop              16241  nop()                           #45
                                          16242
                                          16243  label('.mulw7#46')
.mulw7#46:    37e0 3080  anda $80,x       16244  anda(0x80,X)                    #46
              37e1 012a  ld   [$2a]       16245  ld([sysArgs+6])                 #47
              37e2 c218  st   [$18]       16246  st([vAC])                       #48 vAC.lo*8 - vAC.lo
              37e3 012b  ld   [$2b]       16247  ld([sysArgs+7])                 #49
              37e4 a500  suba [x]         16248  suba([X])                       #50
              37e5 a119  suba [$19]       16249  suba([vAC+1])                   #51
              37e6 c219  st   [$19]       16250  st([vAC+1])                     #52 vAC.hi*8 - borrow - vAC.hi
              37e7 1403  ld   $03,y       16251  ld(hi('REENTER'),Y)             #53
              37e8 e0cb  jmp  y,$cb       16252  jmp(Y,'REENTER')                #54
              37e9 00e3  ld   $e3         16253  ld(-58/2)                       #55
                                          16254
                                          16255  label('.mulw7#17')
.mulw7#17:    37ea 0023  ld   $23         16256  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              37eb c202  st   [$02]       16257  st([vCpuSelect])                #18 restore PREFX1 instruction page
              37ec 9401  adda $01,y       16258  adda(1,Y)                       #19 retry instruction
              37ed e0cb  jmp  y,$cb       16259  jmp(Y,'REENTER')                #20
              37ee 00f4  ld   $f4         16260  ld(-24/2)                       #21
                                          16261
                                          16262
              37ef 0200  nop              16263  fillers(until=0xff)
              37f0 0200  nop
              37f1 0200  nop
              * 16 times
              37ff 0200  nop              16264  align(0x100, size=0x100)
                                          16265
                                          16266  #-----------------------------------------------------------------------
                                          16267  #  More vCPU instruction implementations, (0x3800)
                                          16268  #-----------------------------------------------------------------------
                                          16269  #
                                          16270  # MULW8 implementation
                                          16271  label('mulw8#13')
mulw8#13:     3800 00f9  ld   $f9         16272  ld(min(0,maxTicks-44/2))        #13
              3801 8115  adda [$15]       16273  adda([vTicks])                  #14
              3802 e81e  blt  .mulw8#17   16274  blt('.mulw8#17')                #15 not enough time left, so retry
              3803 0118  ld   [$18]       16275  ld([vAC])                       #16
              3804 3080  anda $80,x       16276  anda(0x80,X)                    #17
              3805 8118  adda [$18]       16277  adda([vAC])                     #18
              3806 c22a  st   [$2a]       16278  st([sysArgs+6])                 #19 vAC.lo*2
              3807 0119  ld   [$19]       16279  ld([vAC+1])                     #20
              3808 8119  adda [$19]       16280  adda([vAC+1])                   #21
              3809 8500  adda [x]         16281  adda([X])                       #22 msb vAC.lo
              380a c22b  st   [$2b]       16282  st([sysArgs+7])                 #23 vAC.hi*2
              380b 012a  ld   [$2a]       16283  ld([sysArgs+6])                 #24
              380c 3080  anda $80,x       16284  anda(0x80,X)                    #25
              380d 812a  adda [$2a]       16285  adda([sysArgs+6])               #26
              380e c22a  st   [$2a]       16286  st([sysArgs+6])                 #27 vAC.lo*4
              380f 012b  ld   [$2b]       16287  ld([sysArgs+7])                 #28
              3810 812b  adda [$2b]       16288  adda([sysArgs+7])               #29
              3811 8500  adda [x]         16289  adda([X])                       #30 msb sysArgs+6
              3812 c22b  st   [$2b]       16290  st([sysArgs+7])                 #31 vAC.hi*4
              3813 012a  ld   [$2a]       16291  ld([sysArgs+6])                 #32
              3814 3080  anda $80,x       16292  anda(0x80,X)                    #33
              3815 812a  adda [$2a]       16293  adda([sysArgs+6])               #34
              3816 c218  st   [$18]       16294  st([vAC])                       #35 vAC.lo*8
              3817 012b  ld   [$2b]       16295  ld([sysArgs+7])                 #36
              3818 812b  adda [$2b]       16296  adda([sysArgs+7])               #37
              3819 8500  adda [x]         16297  adda([X])                       #38 msb sysArgs+6
              381a c219  st   [$19]       16298  st([vAC+1])                     #39 vAC.hi*8
              381b 1403  ld   $03,y       16299  ld(hi('NEXTY'),Y)               #40
              381c e000  jmp  y,$00       16300  jmp(Y,'NEXTY')                  #41
              381d 00ea  ld   $ea         16301  ld(-44/2)                       #42
                                          16302
                                          16303  label('.mulw8#17')
.mulw8#17:    381e 0023  ld   $23         16304  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              381f c202  st   [$02]       16305  st([vCpuSelect])                #18 restore PREFX1 instruction page
              3820 9401  adda $01,y       16306  adda(1,Y)                       #19 retry instruction
              3821 e0cb  jmp  y,$cb       16307  jmp(Y,'REENTER')                #20
              3822 00f4  ld   $f4         16308  ld(-24/2)                       #21
                                          16309
                                          16310
                                          16311  # MULW9 implementation
                                          16312  label('mulw9#13')
mulw9#13:     3823 00f3  ld   $f3         16313  ld(min(0,maxTicks-56/2))        #13
              3824 8115  adda [$15]       16314  adda([vTicks])                  #14
              3825 e84f  blt  .mulw9#17   16315  blt('.mulw9#17')                #15 not enough time left, so retry
              3826 0118  ld   [$18]       16316  ld([vAC])                       #16
              3827 3080  anda $80,x       16317  anda(0x80,X)                    #17
              3828 8118  adda [$18]       16318  adda([vAC])                     #18
              3829 c22a  st   [$2a]       16319  st([sysArgs+6])                 #19 vAC.lo*2
              382a 0119  ld   [$19]       16320  ld([vAC+1])                     #20
              382b 8119  adda [$19]       16321  adda([vAC+1])                   #21
              382c 8500  adda [x]         16322  adda([X])                       #22 msb vAC.lo
              382d c22b  st   [$2b]       16323  st([sysArgs+7])                 #23 vAC.hi*2
              382e 012a  ld   [$2a]       16324  ld([sysArgs+6])                 #24
              382f 3080  anda $80,x       16325  anda(0x80,X)                    #25
              3830 812a  adda [$2a]       16326  adda([sysArgs+6])               #26
              3831 c22a  st   [$2a]       16327  st([sysArgs+6])                 #27 vAC.lo*4
              3832 012b  ld   [$2b]       16328  ld([sysArgs+7])                 #28
              3833 812b  adda [$2b]       16329  adda([sysArgs+7])               #29
              3834 8500  adda [x]         16330  adda([X])                       #30 msb sysArgs+6
              3835 c22b  st   [$2b]       16331  st([sysArgs+7])                 #31 vAC.hi*4
              3836 012a  ld   [$2a]       16332  ld([sysArgs+6])                 #32
              3837 3080  anda $80,x       16333  anda(0x80,X)                    #33
              3838 812a  adda [$2a]       16334  adda([sysArgs+6])               #34
              3839 c22a  st   [$2a]       16335  st([sysArgs+6])                 #35 vAC.lo*8
              383a 012b  ld   [$2b]       16336  ld([sysArgs+7])                 #36
              383b 812b  adda [$2b]       16337  adda([sysArgs+7])               #37
              383c 8500  adda [x]         16338  adda([X])                       #38 msb sysArgs+6
              383d c22b  st   [$2b]       16339  st([sysArgs+7])                 #39 vAC.hi*8
              383e 0118  ld   [$18]       16340  ld([vAC])                       #40
              383f 812a  adda [$2a]       16341  adda([sysArgs+6])               #41
              3840 c218  st   [$18]       16342  st([vAC])                       #42 vAC.lo*8 + vAC.lo
              3841 e845  blt  .mulw9#45   16343  bmi('.mulw9#45')                #43 check carry
              3842 a12a  suba [$2a]       16344  suba([sysArgs+6])               #44 restore [vAC]
              3843 fc47  bra  .mulw9#47   16345  bra('.mulw9#47')                #45
              3844 412a  ora  [$2a]       16346  ora([sysArgs+6])                #46 carry in bit 7
                                          16347
                                          16348  label('.mulw9#45')
.mulw9#45:    3845 212a  anda [$2a]       16349  anda([sysArgs+6])               #45 carry in bit 7
              3846 0200  nop              16350  nop()                           #46
                                          16351
                                          16352  label('.mulw9#47')
.mulw9#47:    3847 3080  anda $80,x       16353  anda(0x80,X)                    #47
              3848 0500  ld   [x]         16354  ld([X])                         #48 carry in bit 0
              3849 812b  adda [$2b]       16355  adda([sysArgs+7])               #49
              384a 8119  adda [$19]       16356  adda([vAC+1])                   #50 vAC.hi*8 + vAC.hi + carry
              384b c219  st   [$19]       16357  st([vAC+1])                     #51
              384c 1403  ld   $03,y       16358  ld(hi('NEXTY'),Y)               #52
              384d e000  jmp  y,$00       16359  jmp(Y,'NEXTY')                  #53
              384e 00e4  ld   $e4         16360  ld(-56/2)                       #54
                                          16361
                                          16362  label('.mulw9#17')
.mulw9#17:    384f 0023  ld   $23         16363  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              3850 c202  st   [$02]       16364  st([vCpuSelect])                #18 restore PREFX1 instruction page
              3851 9401  adda $01,y       16365  adda(1,Y)                       #19 retry instruction
              3852 e0cb  jmp  y,$cb       16366  jmp(Y,'REENTER')                #20
              3853 00f4  ld   $f4         16367  ld(-24/2)                       #21
                                          16368
                                          16369
                                          16370  # MULW10 implementation
                                          16371  label('mulw10#13')
mulw10#13:    3854 00f2  ld   $f2         16372  ld(min(0,maxTicks-58/2))        #13
              3855 8115  adda [$15]       16373  adda([vTicks])                  #14
              3856 e882  blt  .mulw10#17  16374  blt('.mulw10#17')               #15 not enough time left, so retry
              3857 0118  ld   [$18]       16375  ld([vAC])                       #16
              3858 3080  anda $80,x       16376  anda(0x80,X)                    #17
              3859 8118  adda [$18]       16377  adda([vAC])                     #18
              385a c22a  st   [$2a]       16378  st([sysArgs+6])                 #19 vAC.lo*2
              385b c2b0  st   [$b0]       16379  st([0xB0])                      #20
              385c 0119  ld   [$19]       16380  ld([vAC+1])                     #21
              385d 8119  adda [$19]       16381  adda([vAC+1])                   #22
              385e 8500  adda [x]         16382  adda([X])                       #23 msb vAC.lo
              385f c22b  st   [$2b]       16383  st([sysArgs+7])                 #24 vAC.hi*2
              3860 c2b1  st   [$b1]       16384  st([0xB1])                      #25
              3861 012a  ld   [$2a]       16385  ld([sysArgs+6])                 #26
              3862 3080  anda $80,x       16386  anda(0x80,X)                    #27
              3863 812a  adda [$2a]       16387  adda([sysArgs+6])               #28
              3864 c22a  st   [$2a]       16388  st([sysArgs+6])                 #29 vAC.lo*4
              3865 012b  ld   [$2b]       16389  ld([sysArgs+7])                 #30
              3866 812b  adda [$2b]       16390  adda([sysArgs+7])               #31
              3867 8500  adda [x]         16391  adda([X])                       #32 msb sysArgs+6
              3868 c22b  st   [$2b]       16392  st([sysArgs+7])                 #33 vAC.hi*4
              3869 012a  ld   [$2a]       16393  ld([sysArgs+6])                 #34
              386a 3080  anda $80,x       16394  anda(0x80,X)                    #35
              386b 812a  adda [$2a]       16395  adda([sysArgs+6])               #36
              386c c22a  st   [$2a]       16396  st([sysArgs+6])                 #37 vAC.lo*8
              386d 012b  ld   [$2b]       16397  ld([sysArgs+7])                 #38
              386e 812b  adda [$2b]       16398  adda([sysArgs+7])               #39
              386f 8500  adda [x]         16399  adda([X])                       #40 msb sysArgs+6
              3870 c22b  st   [$2b]       16400  st([sysArgs+7])                 #41 vAC.hi*8
              3871 01b0  ld   [$b0]       16401  ld([0xB0])                      #42
              3872 812a  adda [$2a]       16402  adda([sysArgs+6])               #43
              3873 c218  st   [$18]       16403  st([vAC])                       #44 vAC.lo*8 + vAC.lo*2
              3874 e878  blt  .mulw10#47  16404  bmi('.mulw10#47')               #45 check carry
              3875 a12a  suba [$2a]       16405  suba([sysArgs+6])               #46 restore [vAC]
              3876 fc7a  bra  .mulw10#49  16406  bra('.mulw10#49')               #47
              3877 412a  ora  [$2a]       16407  ora([sysArgs+6])                #48 carry in bit 7
                                          16408
                                          16409  label('.mulw10#47')
.mulw10#47:   3878 212a  anda [$2a]       16410  anda([sysArgs+6])               #47 carry in bit 7
              3879 0200  nop              16411  nop()                           #48
                                          16412
                                          16413  label('.mulw10#49')
.mulw10#49:   387a 3080  anda $80,x       16414  anda(0x80,X)                    #49
              387b 0500  ld   [x]         16415  ld([X])                         #50 carry in bit 0
              387c 812b  adda [$2b]       16416  adda([sysArgs+7])               #51
              387d 81b1  adda [$b1]       16417  adda([0xB1])                    #52 vAC.hi*8 + vAC.hi*2 + carry
              387e c219  st   [$19]       16418  st([vAC+1])                     #53
              387f 1403  ld   $03,y       16419  ld(hi('NEXTY'),Y)               #54
              3880 e000  jmp  y,$00       16420  jmp(Y,'NEXTY')                  #55
              3881 00e3  ld   $e3         16421  ld(-58/2)                       #56
                                          16422
                                          16423  label('.mulw10#17')
.mulw10#17:   3882 0023  ld   $23         16424  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              3883 c202  st   [$02]       16425  st([vCpuSelect])                #18 restore PREFX1 instruction page
              3884 9401  adda $01,y       16426  adda(1,Y)                       #19 retry instruction
              3885 e0cb  jmp  y,$cb       16427  jmp(Y,'REENTER')                #20
              3886 00f4  ld   $f4         16428  ld(-24/2)                       #21
                                          16429
                                          16430
                                          16431  # DOKEI+ implementation
                                          16432  label('dokei+#13')
dokei+#13:    3887 1517  ld   [$17],y     16433  ld([vPC+1],Y)                   #13
              3888 c21d  st   [$1d]       16434  st([vTmp])                      #14 imm.hi
              3889 de00  st   [y,x++]     16435  st([Y,Xpp])                     #15 X++
              388a 00fb  ld   $fb         16436  ld(min(0,maxTicks-40/2))        #16
              388b 8115  adda [$15]       16437  adda([vTicks])                  #17
              388c e8a6  blt  .dokei+#20  16438  blt('.dokei+#20')               #18 not enough time left, so retry
              388d 0d00  ld   [y,x]       16439  ld([Y,X])                       #19 imm.lo
              388e 1519  ld   [$19],y     16440  ld([vAC+1],Y)                   #20
              388f 1118  ld   [$18],x     16441  ld([vAC],X)                     #21
              3890 de00  st   [y,x++]     16442  st([Y,Xpp])                     #22
              3891 011d  ld   [$1d]       16443  ld([vTmp])                      #23
              3892 ce00  st   [y,x]       16444  st([Y,X])                       #24
              3893 0118  ld   [$18]       16445  ld([vAC])                       #25
              3894 8002  adda $02         16446  adda(2)                         #26
              3895 c218  st   [$18]       16447  st([vAC])                       #27
              3896 20fe  anda $fe         16448  anda(0xFE)                      #28
              3897 f09e  beq  .dokei+#31  16449  beq('.dokei+#31')               #29 if low byte is 0x00 or 0x01
              3898 0116  ld   [$16]       16450  ld([vPC])                       #30
              3899 8001  adda $01         16451  adda(1)                         #31
              389a c216  st   [$16]       16452  st([vPC])                       #32
              389b 1403  ld   $03,y       16453  ld(hi('REENTER'),Y)             #33
              389c e0cb  jmp  y,$cb       16454  jmp(Y,'REENTER')                #34
              389d 00ed  ld   $ed         16455  ld(-38/2)                       #35
                                          16456
                                          16457  label('.dokei+#31')
.dokei+#31:   389e 8001  adda $01         16458  adda(1)                         #31
              389f c216  st   [$16]       16459  st([vPC])                       #32
              38a0 0119  ld   [$19]       16460  ld([vAC+1])                     #33
              38a1 8001  adda $01         16461  adda(1)                         #34
              38a2 c219  st   [$19]       16462  st([vAC+1])                     #35
              38a3 1403  ld   $03,y       16463  ld(hi('NEXTY'),Y)               #36
              38a4 e000  jmp  y,$00       16464  jmp(Y,'NEXTY')                  #37
              38a5 00ec  ld   $ec         16465  ld(-40/2)                       #38
                                          16466
                                          16467  label('.dokei+#20')
.dokei+#20:   38a6 0116  ld   [$16]       16468  ld([vPC])                       #20 retry instruction
              38a7 a002  suba $02         16469  suba(2)                         #21
              38a8 c216  st   [$16]       16470  st([vPC])                       #22
              38a9 1403  ld   $03,y       16471  ld(hi('REENTER'),Y)             #23
              38aa e0cb  jmp  y,$cb       16472  jmp(Y,'REENTER')                #24
              38ab 00f2  ld   $f2         16473  ld(-28/2)                       #25
                                          16474
                                          16475
                                          16476  # DEEKRI implementation
                                          16477  label('deekri#13')
deekri#13:    38ac 3080  anda $80,x       16478  anda(0x80,X)                    #13 msb of immediate 8bit index, (sysArgs+7)
              38ad 812b  adda [$2b]       16479  adda([sysArgs+7])               #14
              38ae c22a  st   [$2a]       16480  st([sysArgs+6])                 #15 index.lo*2
              38af 00fa  ld   $fa         16481  ld(min(0,maxTicks-42/2))        #16
              38b0 8115  adda [$15]       16482  adda([vTicks])                  #17
              38b1 e8ca  blt  .deekri#20  16483  blt('.deekri#20')               #18 not enough time left, so retry
              38b2 0500  ld   [x]         16484  ld([X])                         #19 msb index.lo
              38b3 c22b  st   [$2b]       16485  st([sysArgs+7])                 #20 index.hi
              38b4 0118  ld   [$18]       16486  ld([vAC])                       #21
              38b5 812a  adda [$2a]       16487  adda([sysArgs+6])               #22
              38b6 c21d  st   [$1d]       16488  st([vTmp])                      #23 vTmp = vAC.lo + index.lo
              38b7 e8bb  blt  .deekri#26  16489  bmi('.deekri#26')               #24 check carry
              38b8 a12a  suba [$2a]       16490  suba([sysArgs+6])               #25 restore vAC.lo
              38b9 fcbd  bra  .deekri#28  16491  bra('.deekri#28')               #26
              38ba 412a  ora  [$2a]       16492  ora([sysArgs+6])                #27 carry in bit 7
                                          16493
                                          16494  label('.deekri#26')
.deekri#26:   38bb 212a  anda [$2a]       16495  anda([sysArgs+6])               #26 carry in bit 7
              38bc 0200  nop              16496  nop()                           #27
                                          16497
                                          16498  label('.deekri#28')
.deekri#28:   38bd 3080  anda $80,x       16499  anda(0x80,X)                    #28
              38be 0500  ld   [x]         16500  ld([X])                         #29 carry in bit 0
              38bf 8119  adda [$19]       16501  adda([vAC+1])                   #30
              38c0 952b  adda [$2b],y     16502  adda([sysArgs+7],Y)             #31 Y = vAC.hi + index.hi + carry
              38c1 111d  ld   [$1d],x     16503  ld([vTmp],X)                    #32
              38c2 0d00  ld   [y,x]       16504  ld([Y,X])                       #33
              38c3 c218  st   [$18]       16505  st([vAC])                       #34
              38c4 de00  st   [y,x++]     16506  st([Y,Xpp])                     #35
              38c5 0d00  ld   [y,x]       16507  ld([Y,X])                       #36
              38c6 c219  st   [$19]       16508  st([vAC+1])                     #37
              38c7 1403  ld   $03,y       16509  ld(hi('NEXTY'),Y)               #38
              38c8 e000  jmp  y,$00       16510  jmp(Y,'NEXTY')                  #39
              38c9 00eb  ld   $eb         16511  ld(-42/2)                       #40
                                          16512
                                          16513  label('.deekri#20')
.deekri#20:   38ca 0022  ld   $22         16514  ld(hi('PREFX2_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              38cb c202  st   [$02]       16515  st([vCpuSelect])                #21 restore PREFX2 instruction page
              38cc 9401  adda $01,y       16516  adda(1,Y)                       #22 retry instruction
              38cd e000  jmp  y,$00       16517  jmp(Y,'NEXTY')                  #23
              38ce 00f3  ld   $f3         16518  ld(-26/2)                       #24
                                          16519
                                          16520
              38cf 0200  nop              16521  fillers(until=0xff)
              38d0 0200  nop
              38d1 0200  nop
              * 48 times
              38ff 0200  nop              16522  align(0x100, size=0x100)
                                          16523
                                          16524  #-----------------------------------------------------------------------
                                          16525  #  More vCPU instruction implementations, (0x3900)
                                          16526  #-----------------------------------------------------------------------
                                          16527  #
                                          16528  # MERGE4 implementation
                                          16529  label('merge4#13')
merge4#13:    3900 00d0  ld   $d0         16530  ld(min(0,maxTicks-126/2))       #13
              3901 8115  adda [$15]       16531  adda([vTicks])                  #14
              3902 e87b  blt  .merge4#17  16532  blt('.merge4#17')               #15 not enough time left, so retry
              3903 0128  ld   [$28]       16533  ld([sysArgs+4])                 #16 count
              3904 a001  suba $01         16534  suba(1)                         #17
              3905 e878  blt  .merge4#20  16535  blt('.merge4#20')               #18
              3906 c228  st   [$28]       16536  st([sysArgs+4])                 #19 count -= 1
                                          16537
              3907 15b1  ld   [$b1],y     16538  ld([0xB1],Y)                    #20 arrays0.hi
              3908 11b0  ld   [$b0],x     16539  ld([0xB0],X)                    #21 arrays0.lo
              3909 0d00  ld   [y,x]       16540  ld([Y,X])                       #22
              390a c21d  st   [$1d]       16541  st([vTmp])                      #23
              390b 152b  ld   [$2b],y     16542  ld([sysArgs+7],Y)               #24
              390c 0129  ld   [$29]       16543  ld([sysArgs+5])                 #25
              390d 912a  adda [$2a],x     16544  adda([sysArgs+6],X)             #26
              390e 8001  adda $01         16545  adda(1)                         #27
              390f c229  st   [$29]       16546  st([sysArgs+5])                 #28
              3910 812a  adda [$2a]       16547  adda([sysArgs+6])               #29
              3911 f014  beq  $3914       16548  beq(pc()+3)                     #30
              3912 fc15  bra  $3915       16549  bra(pc()+3)                     #31
              3913 0000  ld   $00         16550  ld(0)                           #32
              3914 0001  ld   $01         16551  ld(1)                           #32 (!)
              3915 812b  adda [$2b]       16552  adda([sysArgs+7])               #33
              3916 c22b  st   [$2b]       16553  st([sysArgs+7])                 #34
              3917 011d  ld   [$1d]       16554  ld([vTmp])                      #35
              3918 ce00  st   [y,x]       16555  st([Y,X])                       #36
                                          16556
              3919 15b3  ld   [$b3],y     16557  ld([0xB3],Y)                    #37 arrays1.hi
              391a 11b2  ld   [$b2],x     16558  ld([0xB2],X)                    #38 arrays1.lo
              391b 0d00  ld   [y,x]       16559  ld([Y,X])                       #39
              391c c21d  st   [$1d]       16560  st([vTmp])                      #40
              391d 152b  ld   [$2b],y     16561  ld([sysArgs+7],Y)               #41
              391e 0129  ld   [$29]       16562  ld([sysArgs+5])                 #42
              391f 912a  adda [$2a],x     16563  adda([sysArgs+6],X)             #43
              3920 8001  adda $01         16564  adda(1)                         #44
              3921 c229  st   [$29]       16565  st([sysArgs+5])                 #45
              3922 812a  adda [$2a]       16566  adda([sysArgs+6])               #46
              3923 f026  beq  $3926       16567  beq(pc()+3)                     #47
              3924 fc27  bra  $3927       16568  bra(pc()+3)                     #48
              3925 0000  ld   $00         16569  ld(0)                           #49
              3926 0001  ld   $01         16570  ld(1)                           #49 (!)
              3927 812b  adda [$2b]       16571  adda([sysArgs+7])               #50
              3928 c22b  st   [$2b]       16572  st([sysArgs+7])                 #51
              3929 011d  ld   [$1d]       16573  ld([vTmp])                      #52
              392a ce00  st   [y,x]       16574  st([Y,X])                       #53
                                          16575
              392b 15b5  ld   [$b5],y     16576  ld([0xB5],Y)                    #54 arrays2.hi
              392c 11b4  ld   [$b4],x     16577  ld([0xB4],X)                    #55 arrays2.lo
              392d 0d00  ld   [y,x]       16578  ld([Y,X])                       #56
              392e c21d  st   [$1d]       16579  st([vTmp])                      #57
              392f 152b  ld   [$2b],y     16580  ld([sysArgs+7],Y)               #58
              3930 0129  ld   [$29]       16581  ld([sysArgs+5])                 #59
              3931 912a  adda [$2a],x     16582  adda([sysArgs+6],X)             #60
              3932 8001  adda $01         16583  adda(1)                         #61
              3933 c229  st   [$29]       16584  st([sysArgs+5])                 #62
              3934 812a  adda [$2a]       16585  adda([sysArgs+6])               #63
              3935 f038  beq  $3938       16586  beq(pc()+3)                     #64
              3936 fc39  bra  $3939       16587  bra(pc()+3)                     #65
              3937 0000  ld   $00         16588  ld(0)                           #66
              3938 0001  ld   $01         16589  ld(1)                           #66 (!)
              3939 812b  adda [$2b]       16590  adda([sysArgs+7])               #67
              393a c22b  st   [$2b]       16591  st([sysArgs+7])                 #68
              393b 011d  ld   [$1d]       16592  ld([vTmp])                      #69
              393c ce00  st   [y,x]       16593  st([Y,X])                       #70
                                          16594
              393d 15b7  ld   [$b7],y     16595  ld([0xB7],Y)                    #71 arrays3.hi
              393e 11b6  ld   [$b6],x     16596  ld([0xB6],X)                    #72 arrays3.lo
              393f 0d00  ld   [y,x]       16597  ld([Y,X])                       #73
              3940 c21d  st   [$1d]       16598  st([vTmp])                      #74
              3941 152b  ld   [$2b],y     16599  ld([sysArgs+7],Y)               #75
              3942 0129  ld   [$29]       16600  ld([sysArgs+5])                 #76
              3943 912a  adda [$2a],x     16601  adda([sysArgs+6],X)             #77
              3944 8001  adda $01         16602  adda(1)                         #78
              3945 c229  st   [$29]       16603  st([sysArgs+5])                 #79
              3946 812a  adda [$2a]       16604  adda([sysArgs+6])               #80
              3947 f04a  beq  $394a       16605  beq(pc()+3)                     #81
              3948 fc4b  bra  $394b       16606  bra(pc()+3)                     #82
              3949 0000  ld   $00         16607  ld(0)                           #83
              394a 0001  ld   $01         16608  ld(1)                           #83 (!)
              394b 812b  adda [$2b]       16609  adda([sysArgs+7])               #84
              394c c22b  st   [$2b]       16610  st([sysArgs+7])                 #85
              394d 011d  ld   [$1d]       16611  ld([vTmp])                      #86
              394e ce00  st   [y,x]       16612  st([Y,X])                       #87
                                          16613
              394f 01b0  ld   [$b0]       16614  ld([0xB0])                      #88
              3950 8001  adda $01         16615  adda(1)                         #89
              3951 c2b0  st   [$b0]       16616  st([0xB0])                      #90
              3952 f055  beq  $3955       16617  beq(pc()+3)                     #91
              3953 fc56  bra  $3956       16618  bra(pc()+3)                     #92
              3954 0000  ld   $00         16619  ld(0)                           #93
              3955 0001  ld   $01         16620  ld(1)                           #93 (!)
              3956 81b1  adda [$b1]       16621  adda([0xB1])                    #94
              3957 c2b1  st   [$b1]       16622  st([0xB1])                      #95
                                          16623
              3958 01b2  ld   [$b2]       16624  ld([0xB2])                      #96
              3959 8001  adda $01         16625  adda(1)                         #97
              395a c2b2  st   [$b2]       16626  st([0xB2])                      #98
              395b f05e  beq  $395e       16627  beq(pc()+3)                     #99
              395c fc5f  bra  $395f       16628  bra(pc()+3)                     #100
              395d 0000  ld   $00         16629  ld(0)                           #101
              395e 0001  ld   $01         16630  ld(1)                           #101 (!)
              395f 81b3  adda [$b3]       16631  adda([0xB3])                    #102
              3960 c2b3  st   [$b3]       16632  st([0xB3])                      #103
                                          16633
              3961 01b4  ld   [$b4]       16634  ld([0xB4])                      #104
              3962 8001  adda $01         16635  adda(1)                         #105
              3963 c2b4  st   [$b4]       16636  st([0xB4])                      #106
              3964 f067  beq  $3967       16637  beq(pc()+3)                     #107
              3965 fc68  bra  $3968       16638  bra(pc()+3)                     #108
              3966 0000  ld   $00         16639  ld(0)                           #109
              3967 0001  ld   $01         16640  ld(1)                           #109 (!)
              3968 81b5  adda [$b5]       16641  adda([0xB5])                    #110
              3969 c2b5  st   [$b5]       16642  st([0xB5])                      #111
                                          16643
              396a 01b6  ld   [$b6]       16644  ld([0xB6])                      #112
              396b 8001  adda $01         16645  adda(1)                         #113
              396c c2b6  st   [$b6]       16646  st([0xB6])                      #114
              396d f070  beq  $3970       16647  beq(pc()+3)                     #115
              396e fc71  bra  $3971       16648  bra(pc()+3)                     #116
              396f 0000  ld   $00         16649  ld(0)                           #117
              3970 0001  ld   $01         16650  ld(1)                           #117 (!)
              3971 81b7  adda [$b7]       16651  adda([0xB7])                    #118
              3972 c2b7  st   [$b7]       16652  st([0xB7])                      #119
                                          16653
              3973 0021  ld   $21         16654  ld(hi('PREFX3_PAGE'))           #120 ENTER is at $(n-1)ff, where n = instruction page
              3974 c202  st   [$02]       16655  st([vCpuSelect])                #121 restore PREFX3 instruction page
              3975 9401  adda $01,y       16656  adda(1,Y)                       #122 retry instruction
              3976 e000  jmp  y,$00       16657  jmp(Y,'NEXTY')                  #123
              3977 00c1  ld   $c1         16658  ld(-126/2)                      #124
                                          16659
                                          16660  label('.merge4#20')
.merge4#20:   3978 1403  ld   $03,y       16661  ld(hi('NEXTY'),Y)               #20
              3979 e000  jmp  y,$00       16662  jmp(Y,'NEXTY')                  #21
              397a 00f4  ld   $f4         16663  ld(-24/2)                       #22
                                          16664
                                          16665  label('.merge4#17')
.merge4#17:   397b 0021  ld   $21         16666  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              397c c202  st   [$02]       16667  st([vCpuSelect])                #18 restore PREFX3 instruction page
              397d 9401  adda $01,y       16668  adda(1,Y)                       #19 retry instruction
              397e e0cb  jmp  y,$cb       16669  jmp(Y,'REENTER')                #20
              397f 00f4  ld   $f4         16670  ld(-24/2)                       #21
                                          16671
                                          16672
              3980 0200  nop              16673  fillers(until=0xff)
              3981 0200  nop
              3982 0200  nop
              * 127 times
              39ff 0200  nop              16674  align(0x100, size=0x100)
                                          16675
                                          16676  #-----------------------------------------------------------------------
                                          16677  #  More vCPU instruction implementations, (0x3A00)
                                          16678  #-----------------------------------------------------------------------
                                          16679  #
                                          16680
                                          16681
              3a00 0200  nop              16682  fillers(until=0xff)
              3a01 0200  nop
              3a02 0200  nop
              * 255 times
              3aff 0200  nop              16683  align(0x100, size=0x100)
                                          16684
                                          16685  #-----------------------------------------------------------------------
                                          16686  #  More vCPU instruction implementations, (0x3B00)
                                          16687  #-----------------------------------------------------------------------
                                          16688  #
                                          16689
                                          16690
              3b00 0200  nop              16691  fillers(until=0xff)
              3b01 0200  nop
              3b02 0200  nop
              * 255 times
              3bff 0200  nop              16692  align(0x100, size=0x100)
                                          16693
                                          16694  #-----------------------------------------------------------------------
                                          16695  #  More vCPU instruction implementations, (0x3C00)
                                          16696  #-----------------------------------------------------------------------
                                          16697  #
                                          16698
                                          16699
              3c00 0200  nop              16700  fillers(until=0xff)
              3c01 0200  nop
              3c02 0200  nop
              * 255 times
              3cff 0200  nop              16701  align(0x100, size=0x100)
                                          16702
                                          16703  #-----------------------------------------------------------------------
                                          16704  #  More vCPU instruction implementations, (0x3D00)
                                          16705  #-----------------------------------------------------------------------
                                          16706  #
                                          16707
                                          16708
              3d00 0200  nop              16709  fillers(until=0xff)
              3d01 0200  nop
              3d02 0200  nop
              * 255 times
              3dff 0200  nop              16710  align(0x100, size=0x100)
                                          16711
                                          16712  #-----------------------------------------------------------------------
                                          16713  #  More vCPU instruction implementations, (0x3E00)
                                          16714  #-----------------------------------------------------------------------
                                          16715  #
                                          16716
                                          16717
              3e00 0200  nop              16718  fillers(until=0xff)
              3e01 0200  nop
              3e02 0200  nop
              * 255 times
              3eff 0200  nop              16719  align(0x100, size=0x100)
                                          16720
                                          16721  #-----------------------------------------------------------------------
                                          16722  #  Legacy branch springboards, (BCC), and vCPU instructions, (0x3F00)
                                          16723  #-----------------------------------------------------------------------
                                          16724  #
                                          16725  # LDARRB implementation
                                          16726  label('ldarrb#13')
ldarrb#13:    3f00 1517  ld   [$17],y     16727  ld([vPC+1],Y)                   #13 vPC.hi
              3f01 de00  st   [y,x++]     16728  st([Y,Xpp])                     #14 X++
              3f02 c21d  st   [$1d]       16729  st([vTmp])                      #15 var
              3f03 00f4  ld   $f4         16730  ld(min(0,maxTicks-54/2))        #16
              3f04 8115  adda [$15]       16731  adda([vTicks])                  #17
              3f05 e82a  blt  .ldarrb#20  16732  blt('.ldarrb#20')               #18 not enough time left, so retry
              3f06 0d00  ld   [y,x]       16733  ld([Y,X])                       #19
              3f07 de00  st   [y,x++]     16734  st([Y,Xpp])                     #20 X++
              3f08 c218  st   [$18]       16735  st([vAC])                       #21 imm.lo
              3f09 0d00  ld   [y,x]       16736  ld([Y,X])                       #22
              3f0a c219  st   [$19]       16737  st([vAC+1])                     #23 imm.hi
              3f0b 1400  ld   $00,y       16738  ld(0,Y)                         #24
              3f0c 111d  ld   [$1d],x     16739  ld([vTmp],X)                    #25
              3f0d 0500  ld   [x]         16740  ld([X])                         #26
              3f0e de00  st   [y,x++]     16741  st([Y,Xpp])                     #27 X++
              3f0f c22a  st   [$2a]       16742  st([sysArgs+6])                 #28 idx.lo
              3f10 0500  ld   [x]         16743  ld([X])                         #29
              3f11 c22b  st   [$2b]       16744  st([sysArgs+7])                 #30 idx.hi
              3f12 0118  ld   [$18]       16745  ld([vAC])                       #31
              3f13 812a  adda [$2a]       16746  adda([sysArgs+6])               #32
              3f14 c21d  st   [$1d]       16747  st([vTmp])                      #33 vTmp = vAC.lo + idx.lo
              3f15 e819  blt  .ldarrb#36  16748  bmi('.ldarrb#36')               #34 check carry
              3f16 a12a  suba [$2a]       16749  suba([sysArgs+6])               #35 restore vAC.lo
              3f17 fc1b  bra  .ldarrb#38  16750  bra('.ldarrb#38')               #36
              3f18 412a  ora  [$2a]       16751  ora([sysArgs+6])                #37 carry in bit 7
                                          16752
                                          16753  label('.ldarrb#36')
.ldarrb#36:   3f19 212a  anda [$2a]       16754  anda([sysArgs+6])               #36 carry in bit 7
              3f1a 0200  nop              16755  nop()                           #37
                                          16756
                                          16757  label('.ldarrb#38')
.ldarrb#38:   3f1b 3080  anda $80,x       16758  anda(0x80,X)                    #38
              3f1c 0500  ld   [x]         16759  ld([X])                         #39 carry in bit 0
              3f1d 8119  adda [$19]       16760  adda([vAC+1])                   #40
              3f1e 952b  adda [$2b],y     16761  adda([sysArgs+7],Y)             #41 Y = vAC.hi + idx.hi + carry
              3f1f 111d  ld   [$1d],x     16762  ld([vTmp],X)                    #42
              3f20 0d00  ld   [y,x]       16763  ld([Y,X])                       #43
              3f21 c218  st   [$18]       16764  st([vAC])                       #44
              3f22 0000  ld   $00         16765  ld(0)                           #45
              3f23 c219  st   [$19]       16766  st([vAC+1])                     #46
              3f24 0116  ld   [$16]       16767  ld([vPC])                       #47
              3f25 8002  adda $02         16768  adda(2)                         #48
              3f26 c216  st   [$16]       16769  st([vPC])                       #49
              3f27 1403  ld   $03,y       16770  ld(hi('NEXTY'),Y)               #50
              3f28 e000  jmp  y,$00       16771  jmp(Y,'NEXTY')                  #51
              3f29 00e5  ld   $e5         16772  ld(-54/2)                       #52
                                          16773
                                          16774  label('.ldarrb#20')
.ldarrb#20:   3f2a 0116  ld   [$16]       16775  ld([vPC])                       #20 retry instruction
              3f2b a002  suba $02         16776  suba(2)                         #21
              3f2c c216  st   [$16]       16777  st([vPC])                       #22
              3f2d 1403  ld   $03,y       16778  ld(hi('REENTER'),Y)             #23
              3f2e e0cb  jmp  y,$cb       16779  jmp(Y,'REENTER')                #24
              3f2f 00f2  ld   $f2         16780  ld(-28/2)                       #25
                                          16781
                                          16782
                                          16783  # pc = 0x3f3f, Opcode = 0x3f
                                          16784  # Conditional EQ: Branch if zero (if(vACL==0)vPCL=D)
              3f30 0200  nop              16785  fillers(until=0x3f)
              3f31 0200  nop
              3f32 0200  nop
              * 15 times
              3f3f 1417  ld   $17,y       16786  ld(hi('beq#17'),Y)              #14
              3f40 e027  jmp  y,$27       16787  jmp(Y,'beq#17')                 #15
              3f41 1517  ld   [$17],y     16788  ld([vPC+1],Y)                   #16 vPC.hi
                                          16789
                                          16790  # pc = 0x3f4d, Opcode = 0x4d
                                          16791  # Conditional GT: Branch if positive (if(vACL>0)vPCL=D)
              3f42 0200  nop              16792  fillers(until=0x4d)
              3f43 0200  nop
              3f44 0200  nop
              * 11 times
              3f4d 1417  ld   $17,y       16793  ld(hi('bgt#17'),Y)              #13
              3f4e e043  jmp  y,$43       16794  jmp(Y,'bgt#17')                 #14
              3f4f 1517  ld   [$17],y     16795  ld([vPC+1],Y)                   #15 vPC.hi
                                          16796
                                          16797  # pc = 0x3f50, Opcode = 0x50
                                          16798  # Conditional LT: Branch if negative (if(vACL<0)vPCL=D)
              3f50 1417  ld   $17,y       16799  ld(hi('blt#17'),Y)              #13
              3f51 e058  jmp  y,$58       16800  jmp(Y,'blt#17')                 #14
              3f52 1517  ld   [$17],y     16801  ld([vPC+1],Y)                   #15 vPC.hi
                                          16802
                                          16803  # pc = 0x3f53, Opcode = 0x53
                                          16804  # Conditional GE: Branch if positive or zero (if(vACL>=0)vPCL=D)
              3f53 1417  ld   $17,y       16805  ld(hi('bge#17'),Y)              #13
              3f54 e065  jmp  y,$65       16806  jmp(Y,'bge#17')                 #14
              3f55 1517  ld   [$17],y     16807  ld([vPC+1],Y)                   #15 vPC.hi
                                          16808
                                          16809  # pc = 0x3f56, Opcode = 0x56
                                          16810  # Conditional LE: Branch if negative or zero (if(vACL<=0)vPCL=D)
              3f56 1417  ld   $17,y       16811  ld(hi('ble#17'),Y)              #13
              3f57 e072  jmp  y,$72       16812  jmp(Y,'ble#17')                 #14
              3f58 1517  ld   [$17],y     16813  ld([vPC+1],Y)                   #15 vPC.hi
                                          16814
                                          16815  # pc = 0x3f72, Opcode = 0x72
                                          16816  # Conditional NE: Branch if not zero (if(vACL!=0)vPCL=D)
              3f59 0200  nop              16817  fillers(until=0x72)
              3f5a 0200  nop
              3f5b 0200  nop
              * 25 times
              3f72 1417  ld   $17,y       16818  ld(hi('bne#17'),Y)              #13
              3f73 e035  jmp  y,$35       16819  jmp(Y,'bne#17')                 #14
              3f74 1517  ld   [$17],y     16820  ld([vPC+1],Y)                   #15 vPC.hi
                                          16821
                                          16822
                                          16823  # STARRB implementation
                                          16824  label('starrb#13')
starrb#13:    3f75 1517  ld   [$17],y     16825  ld([vPC+1],Y)                   #13 vPC.hi
              3f76 de00  st   [y,x++]     16826  st([Y,Xpp])                     #14 X++
              3f77 c21d  st   [$1d]       16827  st([vTmp])                      #15 var
              3f78 00f5  ld   $f5         16828  ld(min(0,maxTicks-52/2))        #16
              3f79 8115  adda [$15]       16829  adda([vTicks])                  #17
              3f7a e89d  blt  .starrb#20  16830  blt('.starrb#20')               #18 not enough time left, so retry
              3f7b 0d00  ld   [y,x]       16831  ld([Y,X])                       #19
              3f7c de00  st   [y,x++]     16832  st([Y,Xpp])                     #20 X++
              3f7d c2b0  st   [$b0]       16833  st([0xB0])                      #21 imm.lo
              3f7e 0d00  ld   [y,x]       16834  ld([Y,X])                       #22
              3f7f c2b1  st   [$b1]       16835  st([0xB1])                      #23 imm.hi
              3f80 1400  ld   $00,y       16836  ld(0,Y)                         #24
              3f81 111d  ld   [$1d],x     16837  ld([vTmp],X)                    #25
              3f82 0500  ld   [x]         16838  ld([X])                         #26
              3f83 de00  st   [y,x++]     16839  st([Y,Xpp])                     #27 X++
              3f84 c22a  st   [$2a]       16840  st([sysArgs+6])                 #28 idx.lo
              3f85 0500  ld   [x]         16841  ld([X])                         #29
              3f86 c22b  st   [$2b]       16842  st([sysArgs+7])                 #30 idx.hi
              3f87 01b0  ld   [$b0]       16843  ld([0xB0])                      #31
              3f88 812a  adda [$2a]       16844  adda([sysArgs+6])               #32
              3f89 c21d  st   [$1d]       16845  st([vTmp])                      #33 vTmp = vAC.lo + idx.lo
              3f8a e88e  blt  .starrb#36  16846  bmi('.starrb#36')               #34 check carry
              3f8b a12a  suba [$2a]       16847  suba([sysArgs+6])               #35 restore vAC.lo
              3f8c fc90  bra  .starrb#38  16848  bra('.starrb#38')               #36
              3f8d 412a  ora  [$2a]       16849  ora([sysArgs+6])                #37 carry in bit 7
                                          16850
                                          16851  label('.starrb#36')
.starrb#36:   3f8e 212a  anda [$2a]       16852  anda([sysArgs+6])               #36 carry in bit 7
              3f8f 0200  nop              16853  nop()                           #37
                                          16854
                                          16855  label('.starrb#38')
.starrb#38:   3f90 3080  anda $80,x       16856  anda(0x80,X)                    #38
              3f91 0500  ld   [x]         16857  ld([X])                         #39 carry in bit 0
              3f92 81b1  adda [$b1]       16858  adda([0xB1])                    #40
              3f93 952b  adda [$2b],y     16859  adda([sysArgs+7],Y)             #41 Y = vAC.hi + idx.hi + carry
              3f94 111d  ld   [$1d],x     16860  ld([vTmp],X)                    #42
              3f95 0118  ld   [$18]       16861  ld([vAC])                       #43
              3f96 ce00  st   [y,x]       16862  st([Y,X])                       #44
              3f97 0116  ld   [$16]       16863  ld([vPC])                       #45
              3f98 8002  adda $02         16864  adda(2)                         #46
              3f99 c216  st   [$16]       16865  st([vPC])                       #47
              3f9a 1403  ld   $03,y       16866  ld(hi('NEXTY'),Y)               #48
              3f9b e000  jmp  y,$00       16867  jmp(Y,'NEXTY')                  #49
              3f9c 00e6  ld   $e6         16868  ld(-52/2)                       #50
                                          16869
                                          16870  label('.starrb#20')
.starrb#20:   3f9d 0116  ld   [$16]       16871  ld([vPC])                       #20 retry instruction
              3f9e a002  suba $02         16872  suba(2)                         #21
              3f9f c216  st   [$16]       16873  st([vPC])                       #22
              3fa0 1403  ld   $03,y       16874  ld(hi('REENTER'),Y)             #23
              3fa1 e0cb  jmp  y,$cb       16875  jmp(Y,'REENTER')                #24
              3fa2 00f2  ld   $f2         16876  ld(-28/2)                       #25
                                          16877
                                          16878
                                          16879  # STARRI implementation
                                          16880  label('starri#13')
starri#13:    3fa3 1517  ld   [$17],y     16881  ld([vPC+1],Y)                   #13 vPC.hi
              3fa4 de00  st   [y,x++]     16882  st([Y,Xpp])                     #14 X++
              3fa5 c21d  st   [$1d]       16883  st([vTmp])                      #15 var
              3fa6 00f3  ld   $f3         16884  ld(min(0,maxTicks-56/2))        #16
              3fa7 8115  adda [$15]       16885  adda([vTicks])                  #17
              3fa8 e8ce  blt  .starri#20  16886  blt('.starri#20')               #18 not enough time left, so retry
              3fa9 0d00  ld   [y,x]       16887  ld([Y,X])                       #19
              3faa de00  st   [y,x++]     16888  st([Y,Xpp])                     #20 X++
              3fab c2b0  st   [$b0]       16889  st([0xB0])                      #21 addr imm.lo
              3fac 0d00  ld   [y,x]       16890  ld([Y,X])                       #22
              3fad de00  st   [y,x++]     16891  st([Y,Xpp])                     #23 X++
              3fae c2b1  st   [$b1]       16892  st([0xB1])                      #24 addr imm.hi
              3faf 0d00  ld   [y,x]       16893  ld([Y,X])                       #25
              3fb0 c2b2  st   [$b2]       16894  st([0xB2])                      #26 data imm
              3fb1 1400  ld   $00,y       16895  ld(0,Y)                         #27
              3fb2 111d  ld   [$1d],x     16896  ld([vTmp],X)                    #28
              3fb3 0500  ld   [x]         16897  ld([X])                         #29
              3fb4 de00  st   [y,x++]     16898  st([Y,Xpp])                     #30 X++
              3fb5 c22a  st   [$2a]       16899  st([sysArgs+6])                 #31 idx.lo
              3fb6 0500  ld   [x]         16900  ld([X])                         #32
              3fb7 c22b  st   [$2b]       16901  st([sysArgs+7])                 #33 idx.hi
              3fb8 01b0  ld   [$b0]       16902  ld([0xB0])                      #34
              3fb9 812a  adda [$2a]       16903  adda([sysArgs+6])               #35
              3fba c21d  st   [$1d]       16904  st([vTmp])                      #36 vTmp = vAC.lo + idx.lo
              3fbb e8bf  blt  .starri#39  16905  bmi('.starri#39')               #37 check carry
              3fbc a12a  suba [$2a]       16906  suba([sysArgs+6])               #38 restore vAC.lo
              3fbd fcc1  bra  .starri#41  16907  bra('.starri#41')               #39
              3fbe 412a  ora  [$2a]       16908  ora([sysArgs+6])                #40 carry in bit 7
                                          16909
                                          16910  label('.starri#39')
.starri#39:   3fbf 212a  anda [$2a]       16911  anda([sysArgs+6])               #39 carry in bit 7
              3fc0 0200  nop              16912  nop()                           #40
                                          16913
                                          16914  label('.starri#41')
.starri#41:   3fc1 3080  anda $80,x       16915  anda(0x80,X)                    #41
              3fc2 0500  ld   [x]         16916  ld([X])                         #42 carry in bit 0
              3fc3 81b1  adda [$b1]       16917  adda([0xB1])                    #43
              3fc4 952b  adda [$2b],y     16918  adda([sysArgs+7],Y)             #44 Y = vAC.hi + idx.hi + carry
              3fc5 111d  ld   [$1d],x     16919  ld([vTmp],X)                    #45
              3fc6 01b2  ld   [$b2]       16920  ld([0xB2])                      #46
              3fc7 ce00  st   [y,x]       16921  st([Y,X])                       #47
              3fc8 0116  ld   [$16]       16922  ld([vPC])                       #48
              3fc9 8003  adda $03         16923  adda(3)                         #49
              3fca c216  st   [$16]       16924  st([vPC])                       #50
              3fcb 1403  ld   $03,y       16925  ld(hi('REENTER'),Y)             #51
              3fcc e0cb  jmp  y,$cb       16926  jmp(Y,'REENTER')                #52
              3fcd 00e4  ld   $e4         16927  ld(-56/2)                       #53
                                          16928
                                          16929  label('.starri#20')
.starri#20:   3fce 0116  ld   [$16]       16930  ld([vPC])                       #20 retry instruction
              3fcf a002  suba $02         16931  suba(2)                         #21
              3fd0 c216  st   [$16]       16932  st([vPC])                       #22
              3fd1 1403  ld   $03,y       16933  ld(hi('REENTER'),Y)             #23
              3fd2 e0cb  jmp  y,$cb       16934  jmp(Y,'REENTER')                #24
              3fd3 00f2  ld   $f2         16935  ld(-28/2)                       #25
                                          16936
                                          16937
              3fd4 0200  nop              16938  fillers(until=0xff)
              3fd5 0200  nop
              3fd6 0200  nop
              * 43 times
              3fff 0200  nop              16939  align(0x100, size=0x100)
                                          16940
                                          16941  #-----------------------------------------------------------------------
                                          16942  #  More vCPU instruction implementations, (0x4000)
                                          16943  #-----------------------------------------------------------------------
                                          16944  #
                                          16945
                                          16946
              4000 0200  nop              16947  fillers(until=0xff)
              4001 0200  nop
              4002 0200  nop
              * 255 times
              40ff 0200  nop              16948  align(0x100, size=0x100)
                                          16949
                                          16950  #-----------------------------------------------------------------------
                                          16951  #  More vCPU instruction implementations, (0x4100)
                                          16952  #-----------------------------------------------------------------------
                                          16953  #
                                          16954
                                          16955
              4100 0200  nop              16956  fillers(until=0xff)
              4101 0200  nop
              4102 0200  nop
              * 255 times
              41ff 0200  nop              16957  align(0x100, size=0x100)
                                          16958
                                          16959  #-----------------------------------------------------------------------
                                          16960  #  More vCPU instruction implementations, (0x4200)
                                          16961  #-----------------------------------------------------------------------
                                          16962  #
                                          16963
                                          16964
              4200 0200  nop              16965  fillers(until=0xff)
              4201 0200  nop
              4202 0200  nop
              * 255 times
              42ff 0200  nop              16966  align(0x100, size=0x100)
                                          16967
                                          16968  #-----------------------------------------------------------------------
                                          16969  #  More vCPU instruction implementations, (0x4300)
                                          16970  #-----------------------------------------------------------------------
                                          16971  #
                                          16972
                                          16973
              4300 0200  nop              16974  fillers(until=0xff)
              4301 0200  nop
              4302 0200  nop
              * 255 times
              43ff 0200  nop              16975  align(0x100, size=0x100)
                                          16976
                                          16977  #-----------------------------------------------------------------------
                                          16978  #  More vCPU instruction implementations, (0x4400)
                                          16979  #-----------------------------------------------------------------------
                                          16980  #
                                          16981
                                          16982
              4400 0200  nop              16983  fillers(until=0xff)
              4401 0200  nop
              4402 0200  nop
              * 255 times
              44ff 0200  nop              16984  align(0x100, size=0x100)
                                          16985
                                          16986  #-----------------------------------------------------------------------
                                          16987  #  More vCPU instruction implementations, (0x4500)
                                          16988  #-----------------------------------------------------------------------
                                          16989  #
                                          16990
                                          16991
              4500 0200  nop              16992  fillers(until=0xff)
              4501 0200  nop
              4502 0200  nop
              * 255 times
              45ff 0200  nop              16993  align(0x100, size=0x100)
                                          16994
                                          16995  #-----------------------------------------------------------------------
                                          16996  #  More vCPU instruction implementations, (0x4600)
                                          16997  #-----------------------------------------------------------------------
                                          16998  #
                                          16999
                                          17000
              4600 0200  nop              17001  fillers(until=0xff)
              4601 0200  nop
              4602 0200  nop
              * 255 times
              46ff 0200  nop              17002  align(0x100, size=0x100)
                                          17003
                                          17004  #-----------------------------------------------------------------------
                                          17005  #  More vCPU instruction implementations, (0x4700)
                                          17006  #-----------------------------------------------------------------------
                                          17007  #
                                          17008
                                          17009
              4700 0200  nop              17010  fillers(until=0xff)
              4701 0200  nop
              4702 0200  nop
              * 255 times
              47ff 0200  nop              17011  align(0x100, size=0x100)
                                          17012
                                          17013  #-----------------------------------------------------------------------
                                          17014  #  More vCPU instruction implementations, (0x4800)
                                          17015  #-----------------------------------------------------------------------
                                          17016  #
                                          17017
                                          17018
              4800 0200  nop              17019  fillers(until=0xff)
              4801 0200  nop
              4802 0200  nop
              * 255 times
              48ff 0200  nop              17020  align(0x100, size=0x100)
                                          17021
                                          17022  #-----------------------------------------------------------------------
                                          17023  #  More vCPU instruction implementations, (0x4900)
                                          17024  #-----------------------------------------------------------------------
                                          17025  #
                                          17026
                                          17027
              4900 0200  nop              17028  fillers(until=0xff)
              4901 0200  nop
              4902 0200  nop
              * 255 times
              49ff 0200  nop              17029  align(0x100, size=0x100)
                                          17030
                                          17031  #-----------------------------------------------------------------------
                                          17032  #  More vCPU instruction implementations, (0x4A00)
                                          17033  #-----------------------------------------------------------------------
                                          17034  #
                                          17035
                                          17036
              4a00 0200  nop              17037  fillers(until=0xff)
              4a01 0200  nop
              4a02 0200  nop
              * 255 times
              4aff 0200  nop              17038  align(0x100, size=0x100)
                                          17039
                                          17040  #-----------------------------------------------------------------------
                                          17041  #  More vCPU instruction implementations, (0x4B00)
                                          17042  #-----------------------------------------------------------------------
                                          17043  #
                                          17044
                                          17045
              4b00 0200  nop              17046  fillers(until=0xff)
              4b01 0200  nop
              4b02 0200  nop
              * 255 times
              4bff 0200  nop              17047  align(0x100, size=0x100)
                                          17048
                                          17049  #-----------------------------------------------------------------------
                                          17050  #  More vCPU instruction implementations, (0x4C00)
                                          17051  #-----------------------------------------------------------------------
                                          17052  #
                                          17053
                                          17054
              4c00 0200  nop              17055  fillers(until=0xff)
              4c01 0200  nop
              4c02 0200  nop
              * 255 times
              4cff 0200  nop              17056  align(0x100, size=0x100)
                                          17057
                                          17058  #-----------------------------------------------------------------------
                                          17059  #  More vCPU instruction implementations, (0x4D00)
                                          17060  #-----------------------------------------------------------------------
                                          17061  #
                                          17062
                                          17063
              4d00 0200  nop              17064  fillers(until=0xff)
              4d01 0200  nop
              4d02 0200  nop
              * 255 times
              4dff 0200  nop              17065  align(0x100, size=0x100)
                                          17066
                                          17067  #-----------------------------------------------------------------------
                                          17068  #  Gigatron font4x6 data, (0x4E00 )
                                          17069  #-----------------------------------------------------------------------
                                          17070  #
                                          17071  label('font4x6_32up')
                                          17072  for ch in range(32, 32+83):
                                          17073    comment = 'Char4x6 %s' % repr(chr(ch))
                                          17074    for byte in fontvX0.font4x6[ch-32]:
                                          17075      ld(byte)
font4x6_32up: 4e00 0000  ld   $00         ;Char4x6 ' '
              4e01 0000  ld   $00
              4e02 0000  ld   $00
              4e03 0044  ld   $44         ;Char4x6 '!'
              4e04 0040  ld   $40
              4e05 0040  ld   $40
              4e06 00aa  ld   $aa         ;Char4x6 '"'
              4e07 00a0  ld   $a0
              4e08 0000  ld   $00
              4e09 004e  ld   $4e         ;Char4x6 '#'
              4e0a 004e  ld   $4e
              4e0b 0040  ld   $40
              4e0c 0068  ld   $68         ;Char4x6 '$'
              4e0d 0042  ld   $42
              4e0e 00c0  ld   $c0
              4e0f 0082  ld   $82         ;Char4x6 '%'
              4e10 0048  ld   $48
              4e11 0020  ld   $20
              4e12 004a  ld   $4a         ;Char4x6 '&'
              4e13 00ac  ld   $ac
              4e14 0060  ld   $60
              4e15 0044  ld   $44         ;Char4x6 "'"
              4e16 0080  ld   $80
              4e17 0000  ld   $00
              4e18 0024  ld   $24         ;Char4x6 '('
              4e19 0044  ld   $44
              4e1a 0020  ld   $20
              4e1b 0084  ld   $84         ;Char4x6 ')'
              4e1c 0044  ld   $44
              4e1d 0080  ld   $80
              4e1e 000a  ld   $0a         ;Char4x6 '*'
              4e1f 004a  ld   $4a
              4e20 0000  ld   $00
              4e21 0004  ld   $04         ;Char4x6 '+'
              4e22 00e4  ld   $e4
              4e23 0000  ld   $00
              4e24 0000  ld   $00         ;Char4x6 ','
              4e25 0000  ld   $00
              4e26 0048  ld   $48
              4e27 0000  ld   $00         ;Char4x6 '-'
              4e28 00e0  ld   $e0
              4e29 0000  ld   $00
              4e2a 0000  ld   $00         ;Char4x6 '.'
              4e2b 0000  ld   $00
              4e2c 0080  ld   $80
              4e2d 0002  ld   $02         ;Char4x6 '/'
              4e2e 0048  ld   $48
              4e2f 0000  ld   $00
              4e30 00ea  ld   $ea         ;Char4x6 '0'
              4e31 00aa  ld   $aa
              4e32 00e0  ld   $e0
              4e33 004c  ld   $4c         ;Char4x6 '1'
              4e34 0044  ld   $44
              4e35 00e0  ld   $e0
              4e36 00e2  ld   $e2         ;Char4x6 '2'
              4e37 00e8  ld   $e8
              4e38 00e0  ld   $e0
              4e39 00e2  ld   $e2         ;Char4x6 '3'
              4e3a 0062  ld   $62
              4e3b 00e0  ld   $e0
              4e3c 0088  ld   $88         ;Char4x6 '4'
              4e3d 00ce  ld   $ce
              4e3e 0040  ld   $40
              4e3f 00e8  ld   $e8         ;Char4x6 '5'
              4e40 00e2  ld   $e2
              4e41 00e0  ld   $e0
              4e42 00e8  ld   $e8         ;Char4x6 '6'
              4e43 00ea  ld   $ea
              4e44 00e0  ld   $e0
              4e45 00e2  ld   $e2         ;Char4x6 '7'
              4e46 0022  ld   $22
              4e47 0020  ld   $20
              4e48 00ea  ld   $ea         ;Char4x6 '8'
              4e49 00ea  ld   $ea
              4e4a 00e0  ld   $e0
              4e4b 00ea  ld   $ea         ;Char4x6 '9'
              4e4c 00e2  ld   $e2
              4e4d 00e0  ld   $e0
              4e4e 0004  ld   $04         ;Char4x6 ':'
              4e4f 0004  ld   $04
              4e50 0000  ld   $00
              4e51 0000  ld   $00         ;Char4x6 ';'
              4e52 0040  ld   $40
              4e53 0048  ld   $48
              4e54 0024  ld   $24         ;Char4x6 '<'
              4e55 0084  ld   $84
              4e56 0020  ld   $20
              4e57 000e  ld   $0e         ;Char4x6 '='
              4e58 000e  ld   $0e
              4e59 0000  ld   $00
              4e5a 0084  ld   $84         ;Char4x6 '>'
              4e5b 0024  ld   $24
              4e5c 0080  ld   $80
              4e5d 00c2  ld   $c2         ;Char4x6 '?'
              4e5e 0060  ld   $60
              4e5f 0040  ld   $40
              4e60 006a  ld   $6a         ;Char4x6 '@'
              4e61 00e8  ld   $e8
              4e62 0060  ld   $60
              4e63 004a  ld   $4a         ;Char4x6 'A'
              4e64 00ea  ld   $ea
              4e65 00a0  ld   $a0
              4e66 00ca  ld   $ca         ;Char4x6 'B'
              4e67 00ca  ld   $ca
              4e68 00c0  ld   $c0
              4e69 0068  ld   $68         ;Char4x6 'C'
              4e6a 0088  ld   $88
              4e6b 0060  ld   $60
              4e6c 00ca  ld   $ca         ;Char4x6 'D'
              4e6d 00aa  ld   $aa
              4e6e 00c0  ld   $c0
              4e6f 00e8  ld   $e8         ;Char4x6 'E'
              4e70 00c8  ld   $c8
              4e71 00e0  ld   $e0
              4e72 00e8  ld   $e8         ;Char4x6 'F'
              4e73 00c8  ld   $c8
              4e74 0080  ld   $80
              4e75 0068  ld   $68         ;Char4x6 'G'
              4e76 00aa  ld   $aa
              4e77 0060  ld   $60
              4e78 00aa  ld   $aa         ;Char4x6 'H'
              4e79 00ea  ld   $ea
              4e7a 00a0  ld   $a0
              4e7b 00e4  ld   $e4         ;Char4x6 'I'
              4e7c 0044  ld   $44
              4e7d 00e0  ld   $e0
              4e7e 0062  ld   $62         ;Char4x6 'J'
              4e7f 002a  ld   $2a
              4e80 0040  ld   $40
              4e81 00aa  ld   $aa         ;Char4x6 'K'
              4e82 00ca  ld   $ca
              4e83 00a0  ld   $a0
              4e84 0088  ld   $88         ;Char4x6 'L'
              4e85 0088  ld   $88
              4e86 00e0  ld   $e0
              4e87 00ae  ld   $ae         ;Char4x6 'M'
              4e88 00aa  ld   $aa
              4e89 00a0  ld   $a0
              4e8a 00ea  ld   $ea         ;Char4x6 'N'
              4e8b 00aa  ld   $aa
              4e8c 00a0  ld   $a0
              4e8d 004a  ld   $4a         ;Char4x6 'O'
              4e8e 00aa  ld   $aa
              4e8f 0040  ld   $40
              4e90 00ca  ld   $ca         ;Char4x6 'P'
              4e91 00c8  ld   $c8
              4e92 0080  ld   $80
              4e93 004a  ld   $4a         ;Char4x6 'Q'
              4e94 00ae  ld   $ae
              4e95 0060  ld   $60
              4e96 00ca  ld   $ca         ;Char4x6 'R'
              4e97 00ca  ld   $ca
              4e98 00a0  ld   $a0
              4e99 0068  ld   $68         ;Char4x6 'S'
              4e9a 0042  ld   $42
              4e9b 00c0  ld   $c0
              4e9c 00e4  ld   $e4         ;Char4x6 'T'
              4e9d 0044  ld   $44
              4e9e 0040  ld   $40
              4e9f 00aa  ld   $aa         ;Char4x6 'U'
              4ea0 00aa  ld   $aa
              4ea1 00e0  ld   $e0
              4ea2 00aa  ld   $aa         ;Char4x6 'V'
              4ea3 00aa  ld   $aa
              4ea4 0040  ld   $40
              4ea5 00aa  ld   $aa         ;Char4x6 'W'
              4ea6 00ae  ld   $ae
              4ea7 00a0  ld   $a0
              4ea8 00aa  ld   $aa         ;Char4x6 'X'
              4ea9 004a  ld   $4a
              4eaa 00a0  ld   $a0
              4eab 00aa  ld   $aa         ;Char4x6 'Y'
              4eac 00a4  ld   $a4
              4ead 0040  ld   $40
              4eae 00e2  ld   $e2         ;Char4x6 'Z'
              4eaf 0048  ld   $48
              4eb0 00e0  ld   $e0
              4eb1 0064  ld   $64         ;Char4x6 '['
              4eb2 0044  ld   $44
              4eb3 0060  ld   $60
              4eb4 0008  ld   $08         ;Char4x6 '\\'
              4eb5 0042  ld   $42
              4eb6 0000  ld   $00
              4eb7 00c4  ld   $c4         ;Char4x6 ']'
              4eb8 0044  ld   $44
              4eb9 00c0  ld   $c0
              4eba 004a  ld   $4a         ;Char4x6 '^'
              4ebb 0000  ld   $00
              4ebc 0000  ld   $00
              4ebd 0000  ld   $00         ;Char4x6 '_'
              4ebe 0000  ld   $00
              4ebf 00e0  ld   $e0
              4ec0 0084  ld   $84         ;Char4x6 '`'
              4ec1 0000  ld   $00
              4ec2 0000  ld   $00
              4ec3 0006  ld   $06         ;Char4x6 'a'
              4ec4 00aa  ld   $aa
              4ec5 0060  ld   $60
              4ec6 008c  ld   $8c         ;Char4x6 'b'
              4ec7 00aa  ld   $aa
              4ec8 00c0  ld   $c0
              4ec9 0006  ld   $06         ;Char4x6 'c'
              4eca 0088  ld   $88
              4ecb 0060  ld   $60
              4ecc 0026  ld   $26         ;Char4x6 'd'
              4ecd 00aa  ld   $aa
              4ece 0060  ld   $60
              4ecf 0006  ld   $06         ;Char4x6 'e'
              4ed0 00ac  ld   $ac
              4ed1 0060  ld   $60
              4ed2 0064  ld   $64         ;Char4x6 'f'
              4ed3 00e4  ld   $e4
              4ed4 0040  ld   $40
              4ed5 0006  ld   $06         ;Char4x6 'g'
              4ed6 00a6  ld   $a6
              4ed7 002c  ld   $2c
              4ed8 008c  ld   $8c         ;Char4x6 'h'
              4ed9 00aa  ld   $aa
              4eda 00a0  ld   $a0
              4edb 0040  ld   $40         ;Char4x6 'i'
              4edc 0044  ld   $44
              4edd 0040  ld   $40
              4ede 0040  ld   $40         ;Char4x6 'j'
              4edf 0044  ld   $44
              4ee0 004c  ld   $4c
              4ee1 008a  ld   $8a         ;Char4x6 'k'
              4ee2 00ca  ld   $ca
              4ee3 00a0  ld   $a0
              4ee4 0044  ld   $44         ;Char4x6 'l'
              4ee5 0044  ld   $44
              4ee6 0020  ld   $20
              4ee7 000e  ld   $0e         ;Char4x6 'm'
              4ee8 00ea  ld   $ea
              4ee9 00a0  ld   $a0
              4eea 000c  ld   $0c         ;Char4x6 'n'
              4eeb 00aa  ld   $aa
              4eec 00a0  ld   $a0
              4eed 0004  ld   $04         ;Char4x6 'o'
              4eee 00aa  ld   $aa
              4eef 0040  ld   $40
              4ef0 000c  ld   $0c         ;Char4x6 'p'
              4ef1 00aa  ld   $aa
              4ef2 00c8  ld   $c8
              4ef3 0006  ld   $06         ;Char4x6 'q'
              4ef4 00aa  ld   $aa
              4ef5 0062  ld   $62
              4ef6 000c  ld   $0c         ;Char4x6 'r'
              4ef7 00a8  ld   $a8
              4ef8 0080  ld   $80
                                          17076      comment = C(comment)
                                          17077
              4ef9 0200  nop              17078  fillers(until=0xfd)
              4efa 0200  nop
              4efb 0200  nop
              4efc 0200  nop
              4efd 1435  ld   $35,y       17079  ld(hi('prn4x6Return'),Y)        #27 skip a cycle as byte is fetched from table
              4efe e085  jmp  y,$85       17080  jmp(Y,'prn4x6Return')           #28
              4eff c21d  st   [$1d]       17081  st([vTmp])                      #29
                                          17082
                                          17083  align(0x100, size=0x100)
                                          17084
                                          17085  #-----------------------------------------------------------------------
                                          17086  #  Gigatron font4x6 data, (0x4F00 )
                                          17087  #-----------------------------------------------------------------------
                                          17088  #
                                          17089  label('font4x6_115up')
                                          17090  for ch in range(32+83, 132):
                                          17091    comment = 'Char4x6 %s' % repr(chr(ch))
                                          17092    for byte in fontvX0.font4x6[ch-32]:
font4x6_115up:                            17093      ld(byte)
              4f00 0006  ld   $06         ;Char4x6 's'
              4f01 00c6  ld   $c6
              4f02 00c0  ld   $c0
              4f03 004e  ld   $4e         ;Char4x6 't'
              4f04 0044  ld   $44
              4f05 0060  ld   $60
              4f06 000a  ld   $0a         ;Char4x6 'u'
              4f07 00aa  ld   $aa
              4f08 00e0  ld   $e0
              4f09 000a  ld   $0a         ;Char4x6 'v'
              4f0a 00aa  ld   $aa
              4f0b 0040  ld   $40
              4f0c 000a  ld   $0a         ;Char4x6 'w'
              4f0d 00ae  ld   $ae
              4f0e 00e0  ld   $e0
              4f0f 000a  ld   $0a         ;Char4x6 'x'
              4f10 0044  ld   $44
              4f11 00a0  ld   $a0
              4f12 000a  ld   $0a         ;Char4x6 'y'
              4f13 00aa  ld   $aa
              4f14 0044  ld   $44
              4f15 000e  ld   $0e         ;Char4x6 'z'
              4f16 0024  ld   $24
              4f17 00e0  ld   $e0
              4f18 0064  ld   $64         ;Char4x6 '{'
              4f19 00c4  ld   $c4
              4f1a 0060  ld   $60
              4f1b 0044  ld   $44         ;Char4x6 '|'
              4f1c 0044  ld   $44
              4f1d 0040  ld   $40
              4f1e 00c4  ld   $c4         ;Char4x6 '}'
              4f1f 0064  ld   $64
              4f20 00c0  ld   $c0
              4f21 0000  ld   $00         ;Char4x6 '~'
              4f22 00e0  ld   $e0
              4f23 0000  ld   $00
              4f24 00ee  ld   $ee         ;Char4x6 '\x7f'
              4f25 00ee  ld   $ee
              4f26 00e0  ld   $e0
              4f27 0004  ld   $04         ;Char4x6 '\x80'
              4f28 0088  ld   $88
              4f29 0040  ld   $40
              4f2a 0006  ld   $06         ;Char4x6 '\x81'
              4f2b 0090  ld   $90
              4f2c 0000  ld   $00
              4f2d 0002  ld   $02         ;Char4x6 '\x82'
              4f2e 0011  ld   $11
              4f2f 0020  ld   $20
              4f30 0000  ld   $00         ;Char4x6 '\x83'
              4f31 0009  ld   $09
              4f32 0060  ld   $60
                                          17094      comment = C(comment)
                                          17095
              4f33 0200  nop              17096  fillers(until=0xfd)
              4f34 0200  nop
              4f35 0200  nop
              * 202 times
              4ffd 1435  ld   $35,y       17097  ld(hi('prn4x6Return'),Y)        #27 skip a cycle as byte is fetched from table
              4ffe e085  jmp  y,$85       17098  jmp(Y,'prn4x6Return')           #28
              4fff c21d  st   [$1d]       17099  st([vTmp])                      #29
                                          17100
                                          17101  align(0x100, size=0x100)
                                          17102
                                          17103  #-----------------------------------------------------------------------
                                          17104  #
                                          17105  #  End of core
                                          17106  #
                                          17107  #-----------------------------------------------------------------------
                                          17108  disableListing()
                                          ;+-----------------------------------+
                                          ;| SYS_Racer_v1.py                   |
                                          ;+-----------------------------------+
SYS_Racer_v1:
SYS_RacerUpdateVideoX_40:
              5000 1126  ld   [$26],x
              5001 1527  ld   [$27],y
              5002 0d00  ld   [y,x]
              5003 c21d  st   [$1d]
              5004 a128  suba [$28]
              5005 1124  ld   [$24],x
              5006 1525  ld   [$25],y
              5007 ce00  st   [y,x]
              5008 0124  ld   [$24]
              5009 a004  suba $04
              500a c224  st   [$24]
              500b 011d  ld   [$1d]
              500c c228  st   [$28]
              500d 0126  ld   [$26]
              500e 8001  adda $01
              500f c226  st   [$26]
              5010 ec14  bne  .sysRacer0
              5011 0116  ld   [$16]
              5012 fc16  bra  .sysRacer1
              5013 0200  nop
.sysRacer0:   5014 a002  suba $02
              5015 c216  st   [$16]
.sysRacer1:   5016 1403  ld   $03,y
              5017 e0cb  jmp  y,$cb
              5018 00ec  ld   $ec
SYS_RacerUpdateVideoY_40:
              5019 0127  ld   [$27]
              501a 2008  anda $08
              501b ec1e  bne  $501e
              501c fc1f  bra  $501f
              501d 0000  ld   $00
              501e 0001  ld   $01
              501f c21d  st   [$1d]
              5020 1525  ld   [$25],y
              5021 0124  ld   [$24]
              5022 8002  adda $02
              5023 d224  st   [$24],x
              5024 60ee  xora $ee
              5025 c218  st   [$18]
              5026 c219  st   [$19]
              5027 0126  ld   [$26]
              5028 20fe  anda $fe
              5029 811d  adda [$1d]
              502a ce00  st   [y,x]
              502b 0126  ld   [$26]
              502c 8001  adda $01
              502d c226  st   [$26]
              502e 1403  ld   $03,y
              502f e0cb  jmp  y,$cb
              5030 00ec  ld   $ec         ;End of SYS_Racer_v1.py, size 49
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Horizon-256x16.rgb     |
                                          ;+-----------------------------------+
              5031 dc00  st   $00,[y,x++] ;'\x00'
              5032 dc00  st   $00,[y,x++] ;'\x00'
              5033 dc00  st   $00,[y,x++] ;'\x00'
              5034 dc00  st   $00,[y,x++] ;'\x00'
              5035 dc00  st   $00,[y,x++] ;'\x00'
              5036 dc00  st   $00,[y,x++] ;'\x00'
              5037 dc00  st   $00,[y,x++] ;'\x00'
              5038 dc00  st   $00,[y,x++] ;'\x00'
              5039 0000  ld   $00
              503a c218  st   [$18]
              503b 0000  ld   $00
              503c 14fa  ld   $fa,y
              503d e020  jmp  y,$20
              503e c219  st   [$19]
zippedRacerHorizon:
              503f 0041  ld   $41
              5040 0000  ld   $00
              5041 00c3  ld   $c3
              5042 0030  ld   $30
              5043 000c  ld   $0c
              5044 00c3  ld   $c3
              5045 0030  ld   $30
              5046 000c  ld   $0c
              5047 00c3  ld   $c3
              5048 0030  ld   $30
              5049 000c  ld   $0c
              504a 00c3  ld   $c3
              504b 0030  ld   $30
              504c 000c  ld   $0c
              504d 00c3  ld   $c3
              504e 0030  ld   $30
              504f 000c  ld   $0c
              5050 00c3  ld   $c3
              5051 0030  ld   $30
              5052 000c  ld   $0c
              5053 00c3  ld   $c3
              5054 0030  ld   $30
              5055 000c  ld   $0c
              5056 00c3  ld   $c3
              5057 0000  ld   $00
              5058 000c  ld   $0c
              5059 00c3  ld   $c3
              505a 0030  ld   $30
              505b 000c  ld   $0c
              505c 00c3  ld   $c3
              505d 0030  ld   $30
              505e 00fc  ld   $fc
              505f 0002  ld   $02
              5060 0030  ld   $30
              5061 000c  ld   $0c
              5062 00c3  ld   $c3
              5063 0030  ld   $30
              5064 000c  ld   $0c
              5065 00c3  ld   $c3
              5066 0030  ld   $30
              5067 000c  ld   $0c
              5068 00c3  ld   $c3
              5069 0030  ld   $30
              506a 000c  ld   $0c
              506b 00c3  ld   $c3
              506c 0030  ld   $30
              506d 000c  ld   $0c
              506e 00c3  ld   $c3
              506f 0030  ld   $30
              5070 000c  ld   $0c
              5071 00c3  ld   $c3
              5072 0030  ld   $30
              5073 000c  ld   $0c
              5074 00c3  ld   $c3
              5075 0030  ld   $30
              5076 000c  ld   $0c
              5077 00c3  ld   $c3
              5078 0030  ld   $30
              5079 000c  ld   $0c
              507a 00c3  ld   $c3
              507b 0030  ld   $30
              507c 000c  ld   $0c
              507d 00c3  ld   $c3
              507e 0030  ld   $30
              507f 000c  ld   $0c
              5080 00c3  ld   $c3
              5081 0030  ld   $30
              5082 000c  ld   $0c
              5083 00c3  ld   $c3
              5084 0030  ld   $30
              5085 000c  ld   $0c
              5086 00c3  ld   $c3
              5087 0030  ld   $30
              5088 000c  ld   $0c
              5089 00c3  ld   $c3
              508a 0030  ld   $30
              508b 000c  ld   $0c
              508c 00c3  ld   $c3
              508d 0030  ld   $30
              508e 000c  ld   $0c
              508f 00c3  ld   $c3
              5090 0030  ld   $30
              5091 000c  ld   $0c
              5092 00c3  ld   $c3
              5093 0013  ld   $13
              5094 000c  ld   $0c
              5095 00c3  ld   $c3
              5096 0030  ld   $30
              5097 000c  ld   $0c
              5098 00c3  ld   $c3
              5099 002a  ld   $2a
              509a 000c  ld   $0c
              509b 00c3  ld   $c3
              509c 0030  ld   $30
              509d 000c  ld   $0c
              509e 00c3  ld   $c3
              509f 0030  ld   $30
              50a0 000c  ld   $0c
              50a1 00c3  ld   $c3
              50a2 0030  ld   $30
              50a3 000c  ld   $0c
              50a4 00c3  ld   $c3
              50a5 0030  ld   $30
              50a6 000c  ld   $0c
              50a7 00c3  ld   $c3
              50a8 0030  ld   $30
              50a9 000c  ld   $0c
              50aa 00c3  ld   $c3
              50ab 0030  ld   $30
              50ac 000c  ld   $0c
              50ad 00c3  ld   $c3
              50ae 0030  ld   $30
              50af 000c  ld   $0c
              50b0 00c3  ld   $c3
              50b1 0030  ld   $30
              50b2 000c  ld   $0c
              50b3 00c3  ld   $c3
              50b4 0030  ld   $30
              50b5 000c  ld   $0c
              50b6 00c3  ld   $c3
              50b7 0030  ld   $30
              50b8 000c  ld   $0c
              50b9 00c3  ld   $c3
              50ba 0030  ld   $30
              50bb 000c  ld   $0c
              50bc 00c3  ld   $c3
              50bd 0030  ld   $30
              50be 000c  ld   $0c
              50bf 00ab  ld   $ab
              50c0 002a  ld   $2a
              50c1 000c  ld   $0c
              50c2 00c3  ld   $c3
              50c3 0030  ld   $30
              50c4 000c  ld   $0c
              50c5 00c3  ld   $c3
              50c6 0030  ld   $30
              50c7 000c  ld   $0c
              50c8 00c3  ld   $c3
              50c9 0030  ld   $30
              50ca 000c  ld   $0c
              50cb 00c3  ld   $c3
              50cc 0030  ld   $30
              50cd 000c  ld   $0c
              50ce 00c3  ld   $c3
              50cf 00f0  ld   $f0
              50d0 000f  ld   $0f
              50d1 00c3  ld   $c3
              50d2 0030  ld   $30
              50d3 000c  ld   $0c
              50d4 00c3  ld   $c3
              50d5 00f0  ld   $f0
              50d6 000f  ld   $0f
              50d7 00c3  ld   $c3
              50d8 0030  ld   $30
              50d9 000c  ld   $0c
              50da 00c3  ld   $c3
              50db 003f  ld   $3f
              50dc 000c  ld   $0c
              50dd 00c3  ld   $c3
              50de 0030  ld   $30
              50df 000c  ld   $0c
              50e0 00c3  ld   $c3
              50e1 0030  ld   $30
              50e2 000c  ld   $0c
              50e3 00c3  ld   $c3
              50e4 0030  ld   $30
              50e5 000c  ld   $0c
              50e6 00c3  ld   $c3
              50e7 0030  ld   $30
              50e8 000c  ld   $0c
              50e9 00c3  ld   $c3
              50ea 0030  ld   $30
              50eb 000c  ld   $0c
              50ec 00c3  ld   $c3
              50ed 0030  ld   $30
              50ee 000c  ld   $0c
              50ef 00c3  ld   $c3
              50f0 0030  ld   $30
              50f1 000c  ld   $0c
              50f2 00c3  ld   $c3
              50f3 0015  ld   $15
              50f4 000c  ld   $0c
              50f5 00c3  ld   $c3
              50f6 0030  ld   $30
              50f7 000c  ld   $0c
              50f8 00c3  ld   $c3
              50f9 0030  ld   $30
              50fa 000c  ld   $0c
              50fb fe00  bra  ac          ;+-----------------------------------+
              50fc fcfd  bra  $50fd       ;|                                   |
              50fd 1418  ld   $18,y       ;| Trampoline for page $5000 lookups |
              50fe e006  jmp  y,$06       ;|                                   |
              50ff c218  st   [$18]       ;+-----------------------------------+
              5100 00c3  ld   $c3
              5101 0030  ld   $30
              5102 001c  ld   $1c
              5103 0004  ld   $04
              5104 006b  ld   $6b
              5105 0000  ld   $00
              5106 00c3  ld   $c3
              5107 0030  ld   $30
              5108 000c  ld   $0c
              5109 00c3  ld   $c3
              510a 0030  ld   $30
              510b 000c  ld   $0c
              510c 00c3  ld   $c3
              510d 0030  ld   $30
              510e 000c  ld   $0c
              510f 00c3  ld   $c3
              5110 0030  ld   $30
              5111 000c  ld   $0c
              5112 00c3  ld   $c3
              5113 0030  ld   $30
              5114 000c  ld   $0c
              5115 00c3  ld   $c3
              5116 0030  ld   $30
              5117 000c  ld   $0c
              5118 00c3  ld   $c3
              5119 0030  ld   $30
              511a 000c  ld   $0c
              511b 00c3  ld   $c3
              511c 003f  ld   $3f
              511d 0000  ld   $00
              511e 00c3  ld   $c3
              511f 0030  ld   $30
              5120 000c  ld   $0c
              5121 00c3  ld   $c3
              5122 00f0  ld   $f0
              5123 000f  ld   $0f
              5124 00c0  ld   $c0
              5125 0030  ld   $30
              5126 000c  ld   $0c
              5127 00c3  ld   $c3
              5128 0030  ld   $30
              5129 000c  ld   $0c
              512a 00c3  ld   $c3
              512b 0030  ld   $30
              512c 000c  ld   $0c
              512d 00c3  ld   $c3
              512e 0030  ld   $30
              512f 000c  ld   $0c
              5130 00c3  ld   $c3
              5131 0030  ld   $30
              5132 000c  ld   $0c
              5133 00c3  ld   $c3
              5134 0030  ld   $30
              5135 000c  ld   $0c
              5136 00c3  ld   $c3
              5137 0030  ld   $30
              5138 000c  ld   $0c
              5139 00c3  ld   $c3
              513a 0030  ld   $30
              513b 000c  ld   $0c
              513c 00c3  ld   $c3
              513d 0030  ld   $30
              513e 000c  ld   $0c
              513f 00c3  ld   $c3
              5140 0030  ld   $30
              5141 000c  ld   $0c
              5142 00c3  ld   $c3
              5143 0030  ld   $30
              5144 000c  ld   $0c
              5145 00c3  ld   $c3
              5146 0030  ld   $30
              5147 000c  ld   $0c
              5148 00c3  ld   $c3
              5149 0030  ld   $30
              514a 000c  ld   $0c
              514b 00c3  ld   $c3
              514c 0030  ld   $30
              514d 000c  ld   $0c
              514e 00c3  ld   $c3
              514f 0030  ld   $30
              5150 000c  ld   $0c
              5151 00c3  ld   $c3
              5152 0030  ld   $30
              5153 000c  ld   $0c
              5154 00c3  ld   $c3
              5155 0030  ld   $30
              5156 000c  ld   $0c
              5157 00c3  ld   $c3
              5158 002a  ld   $2a
              5159 000c  ld   $0c
              515a 00c3  ld   $c3
              515b 0030  ld   $30
              515c 000c  ld   $0c
              515d 00ab  ld   $ab
              515e 002a  ld   $2a
              515f 000c  ld   $0c
              5160 00c3  ld   $c3
              5161 0030  ld   $30
              5162 000c  ld   $0c
              5163 00c3  ld   $c3
              5164 0030  ld   $30
              5165 000c  ld   $0c
              5166 00c3  ld   $c3
              5167 0030  ld   $30
              5168 000c  ld   $0c
              5169 00c3  ld   $c3
              516a 0030  ld   $30
              516b 000c  ld   $0c
              516c 00c3  ld   $c3
              516d 00ff  ld   $ff
              516e 00fb  ld   $fb
              516f 00bf  ld   $bf
              5170 003f  ld   $3f
              5171 000c  ld   $0c
              5172 00c3  ld   $c3
              5173 0030  ld   $30
              5174 000c  ld   $0c
              5175 00c3  ld   $c3
              5176 0030  ld   $30
              5177 000c  ld   $0c
              5178 00c3  ld   $c3
              5179 0030  ld   $30
              517a 000c  ld   $0c
              517b 00c3  ld   $c3
              517c 0030  ld   $30
              517d 000c  ld   $0c
              517e 00c3  ld   $c3
              517f 0030  ld   $30
              5180 000c  ld   $0c
              5181 00c3  ld   $c3
              5182 0030  ld   $30
              5183 00ac  ld   $ac
              5184 0056  ld   $56
              5185 0095  ld   $95
              5186 000a  ld   $0a
              5187 00c3  ld   $c3
              5188 0030  ld   $30
              5189 000c  ld   $0c
              518a 00c3  ld   $c3
              518b 0030  ld   $30
              518c 000c  ld   $0c
              518d 00c3  ld   $c3
              518e 0030  ld   $30
              518f 000c  ld   $0c
              5190 00c3  ld   $c3
              5191 0030  ld   $30
              5192 000c  ld   $0c
              5193 00c3  ld   $c3
              5194 00f0  ld   $f0
              5195 00ff  ld   $ff
              5196 00c3  ld   $c3
              5197 0030  ld   $30
              5198 000c  ld   $0c
              5199 00c3  ld   $c3
              519a 00f0  ld   $f0
              519b 00ff  ld   $ff
              519c 00c3  ld   $c3
              519d 0030  ld   $30
              519e 000c  ld   $0c
              519f 00c3  ld   $c3
              51a0 00ff  ld   $ff
              51a1 000f  ld   $0f
              51a2 00c3  ld   $c3
              51a3 0030  ld   $30
              51a4 000c  ld   $0c
              51a5 00c3  ld   $c3
              51a6 0030  ld   $30
              51a7 000c  ld   $0c
              51a8 00c3  ld   $c3
              51a9 0030  ld   $30
              51aa 000c  ld   $0c
              51ab 00c3  ld   $c3
              51ac 0030  ld   $30
              51ad 000c  ld   $0c
              51ae 00c3  ld   $c3
              51af 0030  ld   $30
              51b0 000c  ld   $0c
              51b1 00c3  ld   $c3
              51b2 0030  ld   $30
              51b3 000c  ld   $0c
              51b4 00c3  ld   $c3
              51b5 0030  ld   $30
              51b6 000c  ld   $0c
              51b7 00c3  ld   $c3
              51b8 0015  ld   $15
              51b9 000c  ld   $0c
              51ba 00c3  ld   $c3
              51bb 0030  ld   $30
              51bc 000c  ld   $0c
              51bd 00c3  ld   $c3
              51be 0030  ld   $30
              51bf 000c  ld   $0c
              51c0 00c3  ld   $c3
              51c1 0030  ld   $30
              51c2 001c  ld   $1c
              51c3 00ac  ld   $ac
              51c4 0056  ld   $56
              51c5 0060  ld   $60
              51c6 0059  ld   $59
              51c7 0030  ld   $30
              51c8 000c  ld   $0c
              51c9 00c3  ld   $c3
              51ca 0070  ld   $70
              51cb 0055  ld   $55
              51cc 00fd  ld   $fd
              51cd 0055  ld   $55
              51ce 00f5  ld   $f5
              51cf 0057  ld   $57
              51d0 00d5  ld   $d5
              51d1 005f  ld   $5f
              51d2 0055  ld   $55
              51d3 007f  ld   $7f
              51d4 0055  ld   $55
              51d5 00fd  ld   $fd
              51d6 0055  ld   $55
              51d7 0005  ld   $05
              51d8 00c3  ld   $c3
              51d9 0030  ld   $30
              51da 000c  ld   $0c
              51db 00c3  ld   $c3
              51dc 00f0  ld   $f0
              51dd 000b  ld   $0b
              51de 00c0  ld   $c0
              51df 0030  ld   $30
              51e0 000c  ld   $0c
              51e1 00c3  ld   $c3
              51e2 002f  ld   $2f
              51e3 0000  ld   $00
              51e4 00c3  ld   $c3
              51e5 0030  ld   $30
              51e6 000c  ld   $0c
              51e7 00c3  ld   $c3
              51e8 0030  ld   $30
              51e9 000c  ld   $0c
              51ea 00c3  ld   $c3
              51eb 0030  ld   $30
              51ec 000c  ld   $0c
              51ed 00c3  ld   $c3
              51ee 0030  ld   $30
              51ef 000c  ld   $0c
              51f0 00c3  ld   $c3
              51f1 0030  ld   $30
              51f2 000c  ld   $0c
              51f3 00c3  ld   $c3
              51f4 0030  ld   $30
              51f5 000c  ld   $0c
              51f6 00c3  ld   $c3
              51f7 0030  ld   $30
              51f8 000c  ld   $0c
              51f9 00c3  ld   $c3
              51fa 0030  ld   $30
              51fb fe00  bra  ac          ;+-----------------------------------+
              51fc fcfd  bra  $51fd       ;|                                   |
              51fd 1418  ld   $18,y       ;| Trampoline for page $5100 lookups |
              51fe e006  jmp  y,$06       ;|                                   |
              51ff c218  st   [$18]       ;+-----------------------------------+
              5200 000c  ld   $0c
              5201 00c3  ld   $c3
              5202 0030  ld   $30
              5203 000c  ld   $0c
              5204 00c3  ld   $c3
              5205 0030  ld   $30
              5206 000c  ld   $0c
              5207 00c3  ld   $c3
              5208 0030  ld   $30
              5209 000c  ld   $0c
              520a 00c3  ld   $c3
              520b 0030  ld   $30
              520c 000c  ld   $0c
              520d 00c3  ld   $c3
              520e 0030  ld   $30
              520f 000c  ld   $0c
              5210 00c3  ld   $c3
              5211 0030  ld   $30
              5212 000c  ld   $0c
              5213 00c3  ld   $c3
              5214 0030  ld   $30
              5215 000c  ld   $0c
              5216 00c3  ld   $c3
              5217 0030  ld   $30
              5218 000c  ld   $0c
              5219 00c3  ld   $c3
              521a 0030  ld   $30
              521b 000c  ld   $0c
              521c 00c3  ld   $c3
              521d 002a  ld   $2a
              521e 000c  ld   $0c
              521f 00c3  ld   $c3
              5220 00b0  ld   $b0
              5221 00aa  ld   $aa
              5222 00aa  ld   $aa
              5223 002a  ld   $2a
              5224 000c  ld   $0c
              5225 00c3  ld   $c3
              5226 0030  ld   $30
              5227 000c  ld   $0c
              5228 00c3  ld   $c3
              5229 0030  ld   $30
              522a 000c  ld   $0c
              522b 00c3  ld   $c3
              522c 0030  ld   $30
              522d 000c  ld   $0c
              522e 00c3  ld   $c3
              522f 0030  ld   $30
              5230 000c  ld   $0c
              5231 00bf  ld   $bf
              5232 0091  ld   $91
              5233 00f4  ld   $f4
              5234 0046  ld   $46
              5235 00d2  ld   $d2
              5236 000b  ld   $0b
              5237 00c3  ld   $c3
              5238 0030  ld   $30
              5239 000c  ld   $0c
              523a 00c3  ld   $c3
              523b 0030  ld   $30
              523c 000c  ld   $0c
              523d 00c3  ld   $c3
              523e 0030  ld   $30
              523f 000c  ld   $0c
              5240 00c3  ld   $c3
              5241 0030  ld   $30
              5242 000c  ld   $0c
              5243 00c3  ld   $c3
              5244 0030  ld   $30
              5245 00ac  ld   $ac
              5246 00c2  ld   $c2
              5247 00b0  ld   $b0
              5248 00aa  ld   $aa
              5249 00aa  ld   $aa
              524a 00aa  ld   $aa
              524b 00aa  ld   $aa
              524c 00c2  ld   $c2
              524d 00b0  ld   $b0
              524e 000a  ld   $0a
              524f 00c3  ld   $c3
              5250 0030  ld   $30
              5251 000c  ld   $0c
              5252 00c3  ld   $c3
              5253 0030  ld   $30
              5254 000c  ld   $0c
              5255 00c3  ld   $c3
              5256 0030  ld   $30
              5257 000c  ld   $0c
              5258 00c3  ld   $c3
              5259 0030  ld   $30
              525a 00ac  ld   $ac
              525b 00fe  ld   $fe
              525c 00ff  ld   $ff
              525d 003f  ld   $3f
              525e 00c0  ld   $c0
              525f 0030  ld   $30
              5260 00ac  ld   $ac
              5261 00fe  ld   $fe
              5262 00ff  ld   $ff
              5263 003f  ld   $3f
              5264 00c0  ld   $c0
              5265 00b0  ld   $b0
              5266 00fa  ld   $fa
              5267 00ff  ld   $ff
              5268 00ff  ld   $ff
              5269 0000  ld   $00
              526a 00c3  ld   $c3
              526b 0030  ld   $30
              526c 000c  ld   $0c
              526d 00c3  ld   $c3
              526e 0030  ld   $30
              526f 000c  ld   $0c
              5270 00c3  ld   $c3
              5271 0030  ld   $30
              5272 000c  ld   $0c
              5273 00c3  ld   $c3
              5274 0030  ld   $30
              5275 000c  ld   $0c
              5276 00c3  ld   $c3
              5277 0030  ld   $30
              5278 000c  ld   $0c
              5279 00c3  ld   $c3
              527a 0030  ld   $30
              527b 000c  ld   $0c
              527c 0057  ld   $57
              527d 0055  ld   $55
              527e 0005  ld   $05
              527f 00c3  ld   $c3
              5280 0030  ld   $30
              5281 000c  ld   $0c
              5282 00c3  ld   $c3
              5283 0030  ld   $30
              5284 000c  ld   $0c
              5285 00c3  ld   $c3
              5286 0096  ld   $96
              5287 0015  ld   $15
              5288 0058  ld   $58
              5289 006b  ld   $6b
              528a 00b0  ld   $b0
              528b 00ae  ld   $ae
              528c 0030  ld   $30
              528d 000c  ld   $0c
              528e 00c3  ld   $c3
              528f 00f0  ld   $f0
              5290 00ff  ld   $ff
              5291 00ff  ld   $ff
              5292 00ff  ld   $ff
              * 12 times
              529c 000f  ld   $0f
              529d 00c3  ld   $c3
              529e 0030  ld   $30
              529f 000c  ld   $0c
              52a0 00c3  ld   $c3
              52a1 0030  ld   $30
              52a2 00fc  ld   $fc
              52a3 0003  ld   $03
              52a4 0030  ld   $30
              52a5 000c  ld   $0c
              52a6 00ff  ld   $ff
              52a7 0000  ld   $00
              52a8 000c  ld   $0c
              52a9 00c3  ld   $c3
              52aa 0030  ld   $30
              52ab 000c  ld   $0c
              52ac 00c3  ld   $c3
              52ad 0030  ld   $30
              52ae 00fc  ld   $fc
              52af 00bf  ld   $bf
              52b0 0030  ld   $30
              52b1 000c  ld   $0c
              52b2 00c3  ld   $c3
              52b3 0030  ld   $30
              52b4 000c  ld   $0c
              52b5 00c3  ld   $c3
              52b6 0030  ld   $30
              52b7 000c  ld   $0c
              52b8 00c3  ld   $c3
              52b9 0030  ld   $30
              52ba 000c  ld   $0c
              52bb 00c3  ld   $c3
              52bc 0030  ld   $30
              52bd 000c  ld   $0c
              52be 00c3  ld   $c3
              52bf 0030  ld   $30
              52c0 000c  ld   $0c
              52c1 00c3  ld   $c3
              52c2 0030  ld   $30
              52c3 000c  ld   $0c
              52c4 00c3  ld   $c3
              52c5 0030  ld   $30
              52c6 000c  ld   $0c
              52c7 00c3  ld   $c3
              52c8 0030  ld   $30
              52c9 000c  ld   $0c
              52ca 00c3  ld   $c3
              52cb 0030  ld   $30
              52cc 000c  ld   $0c
              52cd 00c3  ld   $c3
              52ce 0030  ld   $30
              52cf 000c  ld   $0c
              52d0 00c3  ld   $c3
              52d1 0030  ld   $30
              52d2 000c  ld   $0c
              52d3 00c3  ld   $c3
              52d4 0030  ld   $30
              52d5 000c  ld   $0c
              52d6 00c3  ld   $c3
              52d7 0030  ld   $30
              52d8 000c  ld   $0c
              52d9 00c3  ld   $c3
              52da 00f0  ld   $f0
              52db 00ff  ld   $ff
              52dc 00ab  ld   $ab
              52dd 00ff  ld   $ff
              52de 000f  ld   $0f
              52df 00c3  ld   $c3
              52e0 006a  ld   $6a
              52e1 00a5  ld   $a5
              52e2 0056  ld   $56
              52e3 002a  ld   $2a
              52e4 000c  ld   $0c
              52e5 00c3  ld   $c3
              52e6 0030  ld   $30
              52e7 000c  ld   $0c
              52e8 00c3  ld   $c3
              52e9 0030  ld   $30
              52ea 000c  ld   $0c
              52eb 00c3  ld   $c3
              52ec 0030  ld   $30
              52ed 000c  ld   $0c
              52ee 00c3  ld   $c3
              52ef 0030  ld   $30
              52f0 00fc  ld   $fc
              52f1 004a  ld   $4a
              52f2 0030  ld   $30
              52f3 00fc  ld   $fc
              52f4 00c2  ld   $c2
              52f5 0070  ld   $70
              52f6 00f4  ld   $f4
              52f7 00c2  ld   $c2
              52f8 0030  ld   $30
              52f9 000c  ld   $0c
              52fa 00c3  ld   $c3
              52fb fe00  bra  ac          ;+-----------------------------------+
              52fc fcfd  bra  $52fd       ;|                                   |
              52fd 1418  ld   $18,y       ;| Trampoline for page $5200 lookups |
              52fe e006  jmp  y,$06       ;|                                   |
              52ff c218  st   [$18]       ;+-----------------------------------+
              5300 0030  ld   $30
              5301 000c  ld   $0c
              5302 00c3  ld   $c3
              5303 0030  ld   $30
              5304 000c  ld   $0c
              5305 00c3  ld   $c3
              5306 0030  ld   $30
              5307 000c  ld   $0c
              5308 00c3  ld   $c3
              5309 00f0  ld   $f0
              530a 00af  ld   $af
              530b 00fe  ld   $fe
              530c 00aa  ld   $aa
              530d 00aa  ld   $aa
              530e 00aa  ld   $aa
              * 6 times
              5312 00bf  ld   $bf
              5313 00fa  ld   $fa
              5314 00c3  ld   $c3
              5315 0030  ld   $30
              5316 000c  ld   $0c
              5317 00c3  ld   $c3
              5318 0030  ld   $30
              5319 000c  ld   $0c
              531a 00c3  ld   $c3
              531b 0030  ld   $30
              531c 000c  ld   $0c
              531d 00c3  ld   $c3
              531e 00f0  ld   $f0
              531f 00ff  ld   $ff
              5320 00ff  ld   $ff
              5321 0030  ld   $30
              5322 000c  ld   $0c
              5323 00c3  ld   $c3
              5324 00f0  ld   $f0
              5325 00ff  ld   $ff
              5326 00ff  ld   $ff
              5327 0030  ld   $30
              5328 000c  ld   $0c
              5329 00c3  ld   $c3
              532a 00ff  ld   $ff
              532b 00ff  ld   $ff
              532c 00c3  ld   $c3
              532d 0030  ld   $30
              532e 000c  ld   $0c
              532f 00c3  ld   $c3
              5330 0030  ld   $30
              5331 000c  ld   $0c
              5332 00c3  ld   $c3
              5333 0030  ld   $30
              5334 000c  ld   $0c
              5335 00c3  ld   $c3
              5336 0030  ld   $30
              5337 000c  ld   $0c
              5338 00c3  ld   $c3
              5339 0030  ld   $30
              533a 000c  ld   $0c
              533b 00c3  ld   $c3
              533c 0030  ld   $30
              533d 000c  ld   $0c
              533e 00c3  ld   $c3
              533f 0030  ld   $30
              5340 000c  ld   $0c
              5341 00c3  ld   $c3
              5342 0015  ld   $15
              5343 000c  ld   $0c
              5344 00c3  ld   $c3
              5345 0030  ld   $30
              5346 000c  ld   $0c
              5347 00c3  ld   $c3
              5348 0030  ld   $30
              5349 000c  ld   $0c
              534a 00c3  ld   $c3
              534b 00eb  ld   $eb
              534c 001a  ld   $1a
              534d 00ac  ld   $ac
              534e 0056  ld   $56
              534f 00b0  ld   $b0
              5350 00a6  ld   $a6
              5351 0030  ld   $30
              5352 000c  ld   $0c
              5353 00c3  ld   $c3
              5354 0070  ld   $70
              5355 0055  ld   $55
              5356 00fd  ld   $fd
              5357 0055  ld   $55
              5358 00f5  ld   $f5
              5359 0057  ld   $57
              535a 00d5  ld   $d5
              535b 005f  ld   $5f
              535c 0055  ld   $55
              535d 007f  ld   $7f
              535e 0055  ld   $55
              535f 00fd  ld   $fd
              5360 0055  ld   $55
              5361 0005  ld   $05
              5362 00c3  ld   $c3
              5363 0030  ld   $30
              5364 000c  ld   $0c
              5365 00c3  ld   $c3
              5366 0030  ld   $30
              5367 000c  ld   $0c
              5368 00bf  ld   $bf
              5369 0000  ld   $00
              536a 00fc  ld   $fc
              536b 0002  ld   $02
              536c 0030  ld   $30
              536d 000c  ld   $0c
              536e 00c3  ld   $c3
              536f 0030  ld   $30
              5370 000c  ld   $0c
              5371 00c3  ld   $c3
              5372 0030  ld   $30
              5373 006c  ld   $6c
              5374 00fc  ld   $fc
              5375 0030  ld   $30
              5376 000c  ld   $0c
              5377 00c3  ld   $c3
              5378 0030  ld   $30
              5379 000c  ld   $0c
              537a 00c3  ld   $c3
              537b 0030  ld   $30
              537c 000c  ld   $0c
              537d 00c3  ld   $c3
              537e 0030  ld   $30
              537f 000c  ld   $0c
              5380 00c3  ld   $c3
              5381 0030  ld   $30
              5382 000c  ld   $0c
              5383 00c3  ld   $c3
              5384 0030  ld   $30
              5385 000c  ld   $0c
              5386 00c3  ld   $c3
              5387 0030  ld   $30
              5388 000c  ld   $0c
              5389 00c3  ld   $c3
              538a 0030  ld   $30
              538b 000c  ld   $0c
              538c 00c3  ld   $c3
              538d 0030  ld   $30
              538e 000c  ld   $0c
              538f 00c3  ld   $c3
              5390 0030  ld   $30
              5391 000c  ld   $0c
              5392 00c3  ld   $c3
              5393 0030  ld   $30
              5394 000c  ld   $0c
              5395 00c3  ld   $c3
              5396 0030  ld   $30
              5397 000c  ld   $0c
              5398 00c3  ld   $c3
              5399 0030  ld   $30
              539a 000c  ld   $0c
              539b 00c3  ld   $c3
              539c 0030  ld   $30
              539d 000c  ld   $0c
              539e 00c3  ld   $c3
              539f 00f0  ld   $f0
              53a0 00af  ld   $af
              53a1 00fe  ld   $fe
              53a2 00ea  ld   $ea
              53a3 000f  ld   $0f
              53a4 00ab  ld   $ab
              53a5 00aa  ld   $aa
              53a6 00aa  ld   $aa
              53a7 00aa  ld   $aa
              53a8 002a  ld   $2a
              53a9 000c  ld   $0c
              53aa 00c3  ld   $c3
              53ab 0030  ld   $30
              53ac 000c  ld   $0c
              53ad 00c3  ld   $c3
              53ae 0030  ld   $30
              53af 000c  ld   $0c
              53b0 00c3  ld   $c3
              53b1 0030  ld   $30
              53b2 000c  ld   $0c
              53b3 00c3  ld   $c3
              53b4 00f0  ld   $f0
              53b5 001b  ld   $1b
              53b6 00bd  ld   $bd
              53b7 0030  ld   $30
              53b8 00fc  ld   $fc
              53b9 00c2  ld   $c2
              53ba 00f0  ld   $f0
              53bb 002b  ld   $2b
              53bc 00bd  ld   $bd
              53bd 0030  ld   $30
              53be 000c  ld   $0c
              53bf 00c3  ld   $c3
              53c0 0030  ld   $30
              53c1 000c  ld   $0c
              53c2 00c3  ld   $c3
              53c3 0030  ld   $30
              53c4 000c  ld   $0c
              53c5 00c3  ld   $c3
              53c6 0030  ld   $30
              53c7 000c  ld   $0c
              53c8 00c3  ld   $c3
              53c9 00f0  ld   $f0
              53ca 00af  ld   $af
              53cb 00ab  ld   $ab
              53cc 0095  ld   $95
              53cd 005a  ld   $5a
              53ce 0055  ld   $55
              53cf 006a  ld   $6a
              53d0 00a5  ld   $a5
              53d1 0056  ld   $56
              53d2 00aa  ld   $aa
              53d3 00fe  ld   $fe
              53d4 00c3  ld   $c3
              53d5 0030  ld   $30
              53d6 000c  ld   $0c
              53d7 00c3  ld   $c3
              53d8 0030  ld   $30
              53d9 000c  ld   $0c
              53da 00c3  ld   $c3
              53db 0030  ld   $30
              53dc 000c  ld   $0c
              53dd 00c3  ld   $c3
              53de 00ff  ld   $ff
              53df 00af  ld   $af
              53e0 00fe  ld   $fe
              53e1 0030  ld   $30
              53e2 000c  ld   $0c
              53e3 00c3  ld   $c3
              53e4 00ff  ld   $ff
              53e5 00af  ld   $af
              53e6 00fe  ld   $fe
              53e7 0030  ld   $30
              53e8 000c  ld   $0c
              53e9 00ff  ld   $ff
              53ea 00bf  ld   $bf
              53eb 00fa  ld   $fa
              53ec 00c3  ld   $c3
              53ed 0030  ld   $30
              53ee 000c  ld   $0c
              53ef 00c3  ld   $c3
              53f0 0030  ld   $30
              53f1 000c  ld   $0c
              53f2 00c3  ld   $c3
              53f3 0030  ld   $30
              53f4 000c  ld   $0c
              53f5 00c3  ld   $c3
              53f6 0030  ld   $30
              53f7 000c  ld   $0c
              53f8 00c3  ld   $c3
              53f9 0030  ld   $30
              53fa 000c  ld   $0c
              53fb fe00  bra  ac          ;+-----------------------------------+
              53fc fcfd  bra  $53fd       ;|                                   |
              53fd 1418  ld   $18,y       ;| Trampoline for page $5300 lookups |
              53fe e006  jmp  y,$06       ;|                                   |
              53ff c218  st   [$18]       ;+-----------------------------------+
              5400 00c3  ld   $c3
              5401 0030  ld   $30
              5402 000c  ld   $0c
              5403 00c3  ld   $c3
              5404 0030  ld   $30
              5405 000c  ld   $0c
              5406 00ab  ld   $ab
              5407 0095  ld   $95
              5408 000a  ld   $0a
              5409 00c3  ld   $c3
              540a 0030  ld   $30
              540b 000c  ld   $0c
              540c 00c3  ld   $c3
              540d 0030  ld   $30
              540e 000c  ld   $0c
              540f 00c3  ld   $c3
              5410 00e9  ld   $e9
              5411 001a  ld   $1a
              5412 0058  ld   $58
              5413 0041  ld   $41
              5414 00b0  ld   $b0
              5415 00ae  ld   $ae
              5416 0030  ld   $30
              5417 000c  ld   $0c
              5418 00c3  ld   $c3
              5419 00b0  ld   $b0
              541a 00ae  ld   $ae
              541b 00fe  ld   $fe
              541c 00aa  ld   $aa
              541d 00fe  ld   $fe
              541e 00ab  ld   $ab
              541f 00ea  ld   $ea
              5420 00af  ld   $af
              5421 00ab  ld   $ab
              5422 00bf  ld   $bf
              5423 00aa  ld   $aa
              5424 00ff  ld   $ff
              5425 00aa  ld   $aa
              5426 000e  ld   $0e
              5427 00c3  ld   $c3
              5428 0030  ld   $30
              5429 000c  ld   $0c
              542a 00c3  ld   $c3
              542b 0030  ld   $30
              542c 000c  ld   $0c
              542d 00c3  ld   $c3
              542e 007f  ld   $7f
              542f 0005  ld   $05
              5430 00c0  ld   $c0
              5431 0030  ld   $30
              5432 000c  ld   $0c
              5433 00c3  ld   $c3
              5434 0030  ld   $30
              5435 000c  ld   $0c
              5436 00c3  ld   $c3
              5437 0030  ld   $30
              5438 00bc  ld   $bc
              5439 00bc  ld   $bc
              543a 0030  ld   $30
              543b 000c  ld   $0c
              543c 00c3  ld   $c3
              543d 0030  ld   $30
              543e 000c  ld   $0c
              543f 00c3  ld   $c3
              5440 0030  ld   $30
              5441 000c  ld   $0c
              5442 00c3  ld   $c3
              5443 0030  ld   $30
              5444 000c  ld   $0c
              5445 00c3  ld   $c3
              5446 0030  ld   $30
              5447 000c  ld   $0c
              5448 00c3  ld   $c3
              5449 0030  ld   $30
              544a 000c  ld   $0c
              544b 00c3  ld   $c3
              544c 0030  ld   $30
              544d 000c  ld   $0c
              544e 00c3  ld   $c3
              544f 0030  ld   $30
              5450 000c  ld   $0c
              5451 00c3  ld   $c3
              5452 0030  ld   $30
              5453 000c  ld   $0c
              5454 00c3  ld   $c3
              5455 0030  ld   $30
              5456 000c  ld   $0c
              5457 00c3  ld   $c3
              5458 0030  ld   $30
              5459 000c  ld   $0c
              545a 00c3  ld   $c3
              545b 0030  ld   $30
              545c 000c  ld   $0c
              545d 00c3  ld   $c3
              545e 0030  ld   $30
              545f 000c  ld   $0c
              5460 00c3  ld   $c3
              5461 0030  ld   $30
              5462 000c  ld   $0c
              5463 00c3  ld   $c3
              5464 00b0  ld   $b0
              5465 00fa  ld   $fa
              5466 00ab  ld   $ab
              5467 00bf  ld   $bf
              5468 000a  ld   $0a
              5469 00ab  ld   $ab
              546a 0095  ld   $95
              546b 005a  ld   $5a
              546c 00a9  ld   $a9
              546d 002a  ld   $2a
              546e 000c  ld   $0c
              546f 00c3  ld   $c3
              5470 0012  ld   $12
              5471 005c  ld   $5c
              5472 00c2  ld   $c2
              5473 0030  ld   $30
              5474 000c  ld   $0c
              5475 00c3  ld   $c3
              5476 0030  ld   $30
              5477 000c  ld   $0c
              5478 00c3  ld   $c3
              5479 00bf  ld   $bf
              547a 0004  ld   $04
              547b 00c3  ld   $c3
              547c 002f  ld   $2f
              547d 00fc  ld   $fc
              547e 00c2  ld   $c2
              547f 002f  ld   $2f
              5480 000c  ld   $0c
              5481 0047  ld   $47
              5482 003f  ld   $3f
              5483 000c  ld   $0c
              5484 00c3  ld   $c3
              5485 0030  ld   $30
              5486 000c  ld   $0c
              5487 00c3  ld   $c3
              5488 0030  ld   $30
              5489 000c  ld   $0c
              548a 00c3  ld   $c3
              548b 0030  ld   $30
              548c 000c  ld   $0c
              548d 00c3  ld   $c3
              548e 00b0  ld   $b0
              548f 00aa  ld   $aa
              5490 00aa  ld   $aa
              5491 0095  ld   $95
              5492 005a  ld   $5a
              5493 00a9  ld   $a9
              5494 006a  ld   $6a
              5495 00a5  ld   $a5
              5496 0056  ld   $56
              5497 00aa  ld   $aa
              5498 00aa  ld   $aa
              5499 00c2  ld   $c2
              549a 0030  ld   $30
              549b 000c  ld   $0c
              549c 00c3  ld   $c3
              549d 0030  ld   $30
              549e 000c  ld   $0c
              549f 00c3  ld   $c3
              54a0 0030  ld   $30
              54a1 000c  ld   $0c
              54a2 000f  ld   $0f
              54a3 003f  ld   $3f
              54a4 00ac  ld   $ac
              54a5 00fe  ld   $fe
              54a6 0030  ld   $30
              54a7 000c  ld   $0c
              54a8 000f  ld   $0f
              54a9 003f  ld   $3f
              54aa 00ac  ld   $ac
              54ab 00fe  ld   $fe
              54ac 0030  ld   $30
              54ad 003c  ld   $3c
              54ae 00fc  ld   $fc
              54af 00b0  ld   $b0
              54b0 00fa  ld   $fa
              54b1 00c3  ld   $c3
              54b2 0030  ld   $30
              54b3 000c  ld   $0c
              54b4 00c3  ld   $c3
              54b5 0030  ld   $30
              54b6 000c  ld   $0c
              54b7 00c3  ld   $c3
              54b8 0030  ld   $30
              54b9 000c  ld   $0c
              54ba 00c3  ld   $c3
              54bb 0030  ld   $30
              54bc 000c  ld   $0c
              54bd 00c3  ld   $c3
              54be 0030  ld   $30
              54bf 000c  ld   $0c
              54c0 00c3  ld   $c3
              54c1 0030  ld   $30
              54c2 000c  ld   $0c
              54c3 00c3  ld   $c3
              54c4 0030  ld   $30
              54c5 000c  ld   $0c
              54c6 00c3  ld   $c3
              54c7 0015  ld   $15
              54c8 000c  ld   $0c
              54c9 00c3  ld   $c3
              54ca 0030  ld   $30
              54cb 000c  ld   $0c
              54cc 00c3  ld   $c3
              54cd 0030  ld   $30
              54ce 000c  ld   $0c
              54cf 00c3  ld   $c3
              54d0 00eb  ld   $eb
              54d1 001a  ld   $1a
              54d2 0004  ld   $04
              54d3 0069  ld   $69
              54d4 00b0  ld   $b0
              54d5 00a6  ld   $a6
              54d6 0030  ld   $30
              54d7 000c  ld   $0c
              54d8 00c3  ld   $c3
              54d9 0070  ld   $70
              54da 0055  ld   $55
              54db 00fd  ld   $fd
              54dc 0055  ld   $55
              54dd 00f5  ld   $f5
              54de 0057  ld   $57
              54df 00d5  ld   $d5
              54e0 005f  ld   $5f
              54e1 0055  ld   $55
              54e2 007f  ld   $7f
              54e3 0055  ld   $55
              54e4 00fd  ld   $fd
              54e5 0055  ld   $55
              54e6 0005  ld   $05
              54e7 00c3  ld   $c3
              54e8 0030  ld   $30
              54e9 000c  ld   $0c
              54ea 00c3  ld   $c3
              54eb 0030  ld   $30
              54ec 000c  ld   $0c
              54ed 00c3  ld   $c3
              54ee 0030  ld   $30
              54ef 0050  ld   $50
              54f0 00fd  ld   $fd
              54f1 0030  ld   $30
              54f2 000c  ld   $0c
              54f3 00c3  ld   $c3
              54f4 0030  ld   $30
              54f5 000c  ld   $0c
              54f6 00c3  ld   $c3
              54f7 0030  ld   $30
              54f8 006c  ld   $6c
              54f9 00fc  ld   $fc
              54fa 0030  ld   $30
              54fb fe00  bra  ac          ;+-----------------------------------+
              54fc fcfd  bra  $54fd       ;|                                   |
              54fd 1418  ld   $18,y       ;| Trampoline for page $5400 lookups |
              54fe e006  jmp  y,$06       ;|                                   |
              54ff c218  st   [$18]       ;+-----------------------------------+
              5500 000c  ld   $0c
              5501 00c3  ld   $c3
              5502 0030  ld   $30
              5503 000c  ld   $0c
              5504 00c3  ld   $c3
              5505 0030  ld   $30
              5506 000c  ld   $0c
              5507 00c3  ld   $c3
              5508 0030  ld   $30
              5509 000c  ld   $0c
              550a 00c3  ld   $c3
              550b 0030  ld   $30
              550c 000c  ld   $0c
              550d 00c3  ld   $c3
              550e 0030  ld   $30
              550f 000c  ld   $0c
              5510 00c3  ld   $c3
              5511 0030  ld   $30
              5512 000c  ld   $0c
              5513 00c3  ld   $c3
              5514 0030  ld   $30
              5515 000c  ld   $0c
              5516 00c3  ld   $c3
              5517 0030  ld   $30
              5518 000c  ld   $0c
              5519 00c3  ld   $c3
              551a 0030  ld   $30
              551b 000c  ld   $0c
              551c 00c3  ld   $c3
              551d 0030  ld   $30
              551e 000c  ld   $0c
              551f 00c3  ld   $c3
              5520 0030  ld   $30
              5521 000c  ld   $0c
              5522 00c3  ld   $c3
              5523 0030  ld   $30
              5524 000c  ld   $0c
              5525 00c3  ld   $c3
              5526 0030  ld   $30
              5527 000c  ld   $0c
              5528 00c3  ld   $c3
              5529 0070  ld   $70
              552a 00a5  ld   $a5
              552b 00fe  ld   $fe
              552c 00ea  ld   $ea
              552d 000f  ld   $0f
              552e 00ab  ld   $ab
              552f 006a  ld   $6a
              5530 00a5  ld   $a5
              5531 0056  ld   $56
              5532 002a  ld   $2a
              5533 000c  ld   $0c
              5534 004b  ld   $4b
              5535 0092  ld   $92
              5536 0054  ld   $54
              5537 0096  ld   $96
              5538 0030  ld   $30
              5539 000c  ld   $0c
              553a 00c3  ld   $c3
              553b 0030  ld   $30
              553c 000c  ld   $0c
              553d 00c3  ld   $c3
              553e 006f  ld   $6f
              553f 0004  ld   $04
              5540 00c3  ld   $c3
              5541 00f0  ld   $f0
              5542 000b  ld   $0b
              5543 00bf  ld   $bf
              5544 0030  ld   $30
              5545 000c  ld   $0c
              5546 004b  ld   $4b
              5547 002f  ld   $2f
              5548 000c  ld   $0c
              5549 00c3  ld   $c3
              554a 0030  ld   $30
              554b 000c  ld   $0c
              554c 00c3  ld   $c3
              554d 0030  ld   $30
              554e 00fc  ld   $fc
              554f 00ff  ld   $ff
              5550 00ff  ld   $ff
              5551 00ff  ld   $ff
              5552 00ff  ld   $ff
              5553 00aa  ld   $aa
              5554 0065  ld   $65
              5555 00a9  ld   $a9
              5556 00aa  ld   $aa
              5557 00aa  ld   $aa
              5558 00aa  ld   $aa
              * 7 times
              555d 0065  ld   $65
              555e 00a9  ld   $a9
              555f 00ff  ld   $ff
              5560 00ff  ld   $ff
              5561 00ff  ld   $ff
              5562 00ff  ld   $ff
              5563 000f  ld   $0f
              5564 00c3  ld   $c3
              5565 0030  ld   $30
              5566 000c  ld   $0c
              5567 00c3  ld   $c3
              5568 0030  ld   $30
              5569 00ac  ld   $ac
              556a 00fe  ld   $fe
              556b 0030  ld   $30
              556c 000c  ld   $0c
              556d 00c3  ld   $c3
              556e 0030  ld   $30
              556f 00ac  ld   $ac
              5570 00fe  ld   $fe
              5571 0030  ld   $30
              5572 000c  ld   $0c
              5573 00c3  ld   $c3
              5574 00b0  ld   $b0
              5575 00fa  ld   $fa
              5576 00c3  ld   $c3
              5577 0030  ld   $30
              5578 000c  ld   $0c
              5579 00c3  ld   $c3
              557a 0030  ld   $30
              557b 000c  ld   $0c
              557c 00c3  ld   $c3
              557d 0030  ld   $30
              557e 000c  ld   $0c
              557f 00c3  ld   $c3
              5580 0030  ld   $30
              5581 000c  ld   $0c
              5582 00c3  ld   $c3
              5583 0030  ld   $30
              5584 000c  ld   $0c
              5585 00c3  ld   $c3
              5586 0030  ld   $30
              5587 000c  ld   $0c
              5588 00c3  ld   $c3
              5589 0030  ld   $30
              558a 000c  ld   $0c
              558b 00c3  ld   $c3
              558c 0015  ld   $15
              558d 000c  ld   $0c
              558e 00c3  ld   $c3
              558f 0030  ld   $30
              5590 000c  ld   $0c
              5591 00c3  ld   $c3
              5592 0030  ld   $30
              5593 000c  ld   $0c
              5594 00c3  ld   $c3
              5595 00e9  ld   $e9
              5596 001a  ld   $1a
              5597 00a4  ld   $a4
              5598 0041  ld   $41
              5599 00b0  ld   $b0
              559a 00ae  ld   $ae
              559b 0030  ld   $30
              559c 000c  ld   $0c
              559d 00c3  ld   $c3
              559e 00b0  ld   $b0
              559f 00aa  ld   $aa
              55a0 00ff  ld   $ff
              55a1 00ba  ld   $ba
              55a2 00fa  ld   $fa
              55a3 00ab  ld   $ab
              55a4 00fa  ld   $fa
              55a5 00af  ld   $af
              55a6 00aa  ld   $aa
              55a7 00bf  ld   $bf
              55a8 00ae  ld   $ae
              55a9 00fe  ld   $fe
              55aa 00ba  ld   $ba
              55ab 000a  ld   $0a
              55ac 00c3  ld   $c3
              55ad 0030  ld   $30
              55ae 000c  ld   $0c
              55af 00c3  ld   $c3
              55b0 0030  ld   $30
              55b1 000c  ld   $0c
              55b2 00c3  ld   $c3
              55b3 00c0  ld   $c0
              55b4 006b  ld   $6b
              55b5 0001  ld   $01
              55b6 002f  ld   $2f
              55b7 000c  ld   $0c
              55b8 00c3  ld   $c3
              55b9 0030  ld   $30
              55ba 000c  ld   $0c
              55bb 00c3  ld   $c3
              55bc 0030  ld   $30
              55bd 00bc  ld   $bc
              55be 00bc  ld   $bc
              55bf 0030  ld   $30
              55c0 000c  ld   $0c
              55c1 00c3  ld   $c3
              55c2 0030  ld   $30
              55c3 000c  ld   $0c
              55c4 00c3  ld   $c3
              55c5 0030  ld   $30
              55c6 000c  ld   $0c
              55c7 00c3  ld   $c3
              55c8 0030  ld   $30
              55c9 000c  ld   $0c
              55ca 00c3  ld   $c3
              55cb 0030  ld   $30
              55cc 000c  ld   $0c
              55cd 00c3  ld   $c3
              55ce 0030  ld   $30
              55cf 000c  ld   $0c
              55d0 00c3  ld   $c3
              55d1 0030  ld   $30
              55d2 000c  ld   $0c
              55d3 00c3  ld   $c3
              55d4 0030  ld   $30
              55d5 000c  ld   $0c
              55d6 00c3  ld   $c3
              55d7 0030  ld   $30
              55d8 000c  ld   $0c
              55d9 00c3  ld   $c3
              55da 0030  ld   $30
              55db 000c  ld   $0c
              55dc 00c3  ld   $c3
              55dd 0030  ld   $30
              55de 000c  ld   $0c
              55df 00c3  ld   $c3
              55e0 0030  ld   $30
              55e1 000c  ld   $0c
              55e2 00c3  ld   $c3
              55e3 0030  ld   $30
              55e4 000c  ld   $0c
              55e5 00c3  ld   $c3
              55e6 0030  ld   $30
              55e7 000c  ld   $0c
              55e8 00c3  ld   $c3
              55e9 00b0  ld   $b0
              55ea 005a  ld   $5a
              55eb 00a9  ld   $a9
              55ec 00bf  ld   $bf
              55ed 000a  ld   $0a
              55ee 00ab  ld   $ab
              55ef 0095  ld   $95
              55f0 005a  ld   $5a
              55f1 00a9  ld   $a9
              55f2 002a  ld   $2a
              55f3 000c  ld   $0c
              55f4 004b  ld   $4b
              55f5 00a3  ld   $a3
              55f6 0094  ld   $94
              55f7 0097  ld   $97
              55f8 0030  ld   $30
              55f9 000c  ld   $0c
              55fa 00c3  ld   $c3
              55fb fe00  bra  ac          ;+-----------------------------------+
              55fc fcfd  bra  $55fd       ;|                                   |
              55fd 1418  ld   $18,y       ;| Trampoline for page $5500 lookups |
              55fe e006  jmp  y,$06       ;|                                   |
              55ff c218  st   [$18]       ;+-----------------------------------+
              5600 0030  ld   $30
              5601 000c  ld   $0c
              5602 00c3  ld   $c3
              5603 00ff  ld   $ff
              5604 00fb  ld   $fb
              5605 00be  ld   $be
              5606 002f  ld   $2f
              5607 00fc  ld   $fc
              5608 00c3  ld   $c3
              5609 00ef  ld   $ef
              560a 00fb  ld   $fb
              560b 00be  ld   $be
              560c 003f  ld   $3f
              560d 000c  ld   $0c
              560e 00c3  ld   $c3
              560f 0030  ld   $30
              5610 000c  ld   $0c
              5611 00c3  ld   $c3
              5612 0030  ld   $30
              5613 00ac  ld   $ac
              5614 0069  ld   $69
              5615 009a  ld   $9a
              5616 00a6  ld   $a6
              5617 0069  ld   $69
              5618 0096  ld   $96
              5619 00aa  ld   $aa
              561a 001a  ld   $1a
              561b 0096  ld   $96
              561c 0065  ld   $65
              561d 0059  ld   $59
              561e 0096  ld   $96
              561f 0065  ld   $65
              5620 0059  ld   $59
              5621 0086  ld   $86
              5622 00aa  ld   $aa
              5623 005a  ld   $5a
              5624 009a  ld   $9a
              5625 00a6  ld   $a6
              5626 0069  ld   $69
              5627 009a  ld   $9a
              5628 0006  ld   $06
              5629 00c3  ld   $c3
              562a 0030  ld   $30
              562b 000c  ld   $0c
              562c 00c3  ld   $c3
              562d 0030  ld   $30
              562e 00ac  ld   $ac
              562f 00fe  ld   $fe
              5630 0030  ld   $30
              5631 000c  ld   $0c
              5632 00c3  ld   $c3
              5633 0030  ld   $30
              5634 00ac  ld   $ac
              5635 00fe  ld   $fe
              5636 0030  ld   $30
              5637 000c  ld   $0c
              5638 00c3  ld   $c3
              5639 00b0  ld   $b0
              563a 00fa  ld   $fa
              563b 00c3  ld   $c3
              563c 0030  ld   $30
              563d 000c  ld   $0c
              563e 00c3  ld   $c3
              563f 0030  ld   $30
              5640 000c  ld   $0c
              5641 00c3  ld   $c3
              5642 0030  ld   $30
              5643 000c  ld   $0c
              5644 00c3  ld   $c3
              5645 0030  ld   $30
              5646 000c  ld   $0c
              5647 00c3  ld   $c3
              5648 0030  ld   $30
              5649 00ac  ld   $ac
              564a 00aa  ld   $aa
              564b 00ff  ld   $ff
              564c 00ff  ld   $ff
              564d 00ff  ld   $ff
              * 5 times
              5650 00c3  ld   $c3
              5651 0015  ld   $15
              5652 000c  ld   $0c
              5653 00c3  ld   $c3
              5654 0030  ld   $30
              5655 000c  ld   $0c
              5656 00c3  ld   $c3
              5657 0030  ld   $30
              5658 000c  ld   $0c
              5659 00c3  ld   $c3
              565a 00eb  ld   $eb
              565b 001a  ld   $1a
              565c 0004  ld   $04
              565d 0069  ld   $69
              565e 00b0  ld   $b0
              565f 00a6  ld   $a6
              5660 0030  ld   $30
              5661 000c  ld   $0c
              5662 00c3  ld   $c3
              5663 0070  ld   $70
              5664 0055  ld   $55
              5665 00fd  ld   $fd
              5666 0055  ld   $55
              5667 00f5  ld   $f5
              5668 0057  ld   $57
              5669 00d5  ld   $d5
              566a 005f  ld   $5f
              566b 0055  ld   $55
              566c 007f  ld   $7f
              566d 0055  ld   $55
              566e 00fd  ld   $fd
              566f 0055  ld   $55
              5670 0005  ld   $05
              5671 00c3  ld   $c3
              5672 0030  ld   $30
              5673 000c  ld   $0c
              5674 00c3  ld   $c3
              5675 0030  ld   $30
              5676 000c  ld   $0c
              5677 0003  ld   $03
              5678 007f  ld   $7f
              5679 0010  ld   $10
              567a 0004  ld   $04
              567b 00c0  ld   $c0
              567c 000f  ld   $0f
              567d 00c3  ld   $c3
              567e 0030  ld   $30
              567f 000c  ld   $0c
              5680 00c3  ld   $c3
              5681 0030  ld   $30
              5682 006c  ld   $6c
              5683 00fc  ld   $fc
              5684 0041  ld   $41
              5685 0010  ld   $10
              5686 0004  ld   $04
              5687 0041  ld   $41
              5688 0010  ld   $10
              5689 0004  ld   $04
              568a 0041  ld   $41
              568b 0010  ld   $10
              568c 0004  ld   $04
              568d 0041  ld   $41
              568e 0010  ld   $10
              568f 0004  ld   $04
              5690 0041  ld   $41
              5691 0010  ld   $10
              5692 0004  ld   $04
              5693 0030  ld   $30
              5694 000c  ld   $0c
              5695 00c3  ld   $c3
              5696 0030  ld   $30
              5697 000c  ld   $0c
              5698 00c3  ld   $c3
              5699 0030  ld   $30
              569a 000c  ld   $0c
              569b 00c3  ld   $c3
              569c 0030  ld   $30
              569d 000c  ld   $0c
              569e 00c3  ld   $c3
              569f 0030  ld   $30
              56a0 000c  ld   $0c
              56a1 00c3  ld   $c3
              56a2 0030  ld   $30
              56a3 000c  ld   $0c
              56a4 00c3  ld   $c3
              56a5 0030  ld   $30
              56a6 000c  ld   $0c
              56a7 00c3  ld   $c3
              56a8 0030  ld   $30
              56a9 000c  ld   $0c
              56aa 00c3  ld   $c3
              56ab 0030  ld   $30
              56ac 000c  ld   $0c
              56ad 00c3  ld   $c3
              56ae 0070  ld   $70
              56af 00a5  ld   $a5
              56b0 00fe  ld   $fe
              56b1 00ea  ld   $ea
              56b2 000f  ld   $0f
              56b3 00ab  ld   $ab
              56b4 006a  ld   $6a
              56b5 00a5  ld   $a5
              56b6 0056  ld   $56
              56b7 002a  ld   $2a
              56b8 001c  ld   $1c
              56b9 0058  ld   $58
              56ba 0081  ld   $81
              56bb 0015  ld   $15
              56bc 0058  ld   $58
              56bd 0011  ld   $11
              56be 000c  ld   $0c
              56bf 00c3  ld   $c3
              56c0 0030  ld   $30
              56c1 000c  ld   $0c
              56c2 00c3  ld   $c3
              56c3 00af  ld   $af
              56c4 0004  ld   $04
              56c5 00c3  ld   $c3
              56c6 00f0  ld   $f0
              56c7 000f  ld   $0f
              56c8 00ff  ld   $ff
              56c9 0030  ld   $30
              56ca 000c  ld   $0c
              56cb 0047  ld   $47
              56cc 002f  ld   $2f
              56cd 000c  ld   $0c
              56ce 00c3  ld   $c3
              56cf 0030  ld   $30
              56d0 000c  ld   $0c
              56d1 00c3  ld   $c3
              56d2 0030  ld   $30
              56d3 005c  ld   $5c
              56d4 0055  ld   $55
              56d5 0055  ld   $55
              56d6 0055  ld   $55
              56d7 0055  ld   $55
              56d8 00d6  ld   $d6
              56d9 00fa  ld   $fa
              56da 005a  ld   $5a
              56db 0069  ld   $69
              56dc 009a  ld   $9a
              56dd 00a6  ld   $a6
              56de 0069  ld   $69
              56df 009a  ld   $9a
              56e0 00a6  ld   $a6
              56e1 00d6  ld   $d6
              56e2 00bb  ld   $bb
              56e3 005a  ld   $5a
              56e4 0055  ld   $55
              56e5 0055  ld   $55
              56e6 0055  ld   $55
              56e7 0055  ld   $55
              56e8 0005  ld   $05
              56e9 00c3  ld   $c3
              56ea 0030  ld   $30
              56eb 000c  ld   $0c
              56ec 00c3  ld   $c3
              56ed 0030  ld   $30
              56ee 00ac  ld   $ac
              56ef 00fe  ld   $fe
              56f0 0030  ld   $30
              56f1 000c  ld   $0c
              56f2 00c3  ld   $c3
              56f3 0030  ld   $30
              56f4 00ac  ld   $ac
              56f5 00fe  ld   $fe
              56f6 0030  ld   $30
              56f7 000c  ld   $0c
              56f8 00c3  ld   $c3
              56f9 00b0  ld   $b0
              56fa 00fa  ld   $fa
              56fb fe00  bra  ac          ;+-----------------------------------+
              56fc fcfd  bra  $56fd       ;|                                   |
              56fd 1418  ld   $18,y       ;| Trampoline for page $5600 lookups |
              56fe e006  jmp  y,$06       ;|                                   |
              56ff c218  st   [$18]       ;+-----------------------------------+
              5700 00c3  ld   $c3
              5701 0030  ld   $30
              5702 000c  ld   $0c
              5703 00c3  ld   $c3
              5704 0030  ld   $30
              5705 000c  ld   $0c
              5706 00c3  ld   $c3
              5707 0030  ld   $30
              5708 000c  ld   $0c
              5709 00c3  ld   $c3
              570a 0030  ld   $30
              570b 000c  ld   $0c
              570c 00ab  ld   $ab
              570d 00aa  ld   $aa
              570e 00aa  ld   $aa
              570f 00aa  ld   $aa
              5710 00aa  ld   $aa
              5711 00fa  ld   $fa
              5712 00ff  ld   $ff
              5713 00ff  ld   $ff
              5714 00ff  ld   $ff
              * 5 times
              5717 000f  ld   $0f
              5718 00c3  ld   $c3
              5719 0030  ld   $30
              571a 000c  ld   $0c
              571b 00c3  ld   $c3
              571c 0030  ld   $30
              571d 000c  ld   $0c
              571e 00c3  ld   $c3
              571f 00e9  ld   $e9
              5720 001a  ld   $1a
              5721 00a4  ld   $a4
              5722 0041  ld   $41
              5723 00b0  ld   $b0
              5724 00ae  ld   $ae
              5725 0030  ld   $30
              5726 000c  ld   $0c
              5727 00c3  ld   $c3
              5728 00b0  ld   $b0
              5729 00aa  ld   $aa
              572a 00ff  ld   $ff
              572b 00aa  ld   $aa
              572c 00fe  ld   $fe
              572d 00ab  ld   $ab
              572e 00ea  ld   $ea
              572f 00af  ld   $af
              5730 00ea  ld   $ea
              5731 00bf  ld   $bf
              5732 00aa  ld   $aa
              5733 00ff  ld   $ff
              5734 00aa  ld   $aa
              5735 000e  ld   $0e
              5736 00c3  ld   $c3
              5737 0030  ld   $30
              5738 000c  ld   $0c
              5739 00c3  ld   $c3
              573a 0030  ld   $30
              573b 000c  ld   $0c
              573c 00bc  ld   $bc
              573d 0081  ld   $81
              573e 0065  ld   $65
              573f 0005  ld   $05
              5740 0020  ld   $20
              5741 00f0  ld   $f0
              5742 00c2  ld   $c2
              5743 0030  ld   $30
              5744 000c  ld   $0c
              5745 00c3  ld   $c3
              5746 0030  ld   $30
              5747 00bc  ld   $bc
              5748 00bc  ld   $bc
              5749 00ff  ld   $ff
              574a 00fb  ld   $fb
              574b 00bf  ld   $bf
              574c 00ff  ld   $ff
              574d 00fb  ld   $fb
              574e 00bf  ld   $bf
              574f 00ff  ld   $ff
              5750 00fb  ld   $fb
              5751 00bf  ld   $bf
              5752 00ff  ld   $ff
              5753 00fb  ld   $fb
              5754 00bf  ld   $bf
              5755 00ff  ld   $ff
              5756 00fb  ld   $fb
              5757 0007  ld   $07
              5758 0030  ld   $30
              5759 000c  ld   $0c
              575a 00c3  ld   $c3
              575b 0030  ld   $30
              575c 000c  ld   $0c
              575d 00c3  ld   $c3
              575e 0030  ld   $30
              575f 000c  ld   $0c
              5760 00c3  ld   $c3
              5761 0030  ld   $30
              5762 000c  ld   $0c
              5763 00c3  ld   $c3
              5764 0030  ld   $30
              5765 000c  ld   $0c
              5766 00c3  ld   $c3
              5767 0030  ld   $30
              5768 000c  ld   $0c
              5769 00c3  ld   $c3
              576a 0030  ld   $30
              576b 000c  ld   $0c
              576c 00c3  ld   $c3
              576d 0030  ld   $30
              576e 000c  ld   $0c
              576f 00c3  ld   $c3
              5770 0030  ld   $30
              5771 000c  ld   $0c
              5772 00c3  ld   $c3
              5773 00b0  ld   $b0
              5774 005a  ld   $5a
              5775 00a9  ld   $a9
              5776 00bf  ld   $bf
              5777 000a  ld   $0a
              5778 00ab  ld   $ab
              5779 0095  ld   $95
              577a 005a  ld   $5a
              577b 00a9  ld   $a9
              577c 002a  ld   $2a
              577d 001c  ld   $1c
              577e 0004  ld   $04
              577f 0041  ld   $41
              5780 0010  ld   $10
              5781 0044  ld   $44
              5782 0011  ld   $11
              5783 000c  ld   $0c
              5784 00c3  ld   $c3
              5785 0030  ld   $30
              5786 000c  ld   $0c
              5787 00c3  ld   $c3
              5788 007f  ld   $7f
              5789 0004  ld   $04
              578a 00c3  ld   $c3
              578b 00ef  ld   $ef
              578c 00ff  ld   $ff
              578d 00fe  ld   $fe
              578e 003f  ld   $3f
              578f 000c  ld   $0c
              5790 004b  ld   $4b
              5791 003f  ld   $3f
              5792 000c  ld   $0c
              5793 00c3  ld   $c3
              5794 0030  ld   $30
              5795 000c  ld   $0c
              5796 00c3  ld   $c3
              5797 0030  ld   $30
              5798 00ac  ld   $ac
              5799 00aa  ld   $aa
              579a 0095  ld   $95
              579b 00aa  ld   $aa
              579c 0056  ld   $56
              579d 00d6  ld   $d6
              579e 00fa  ld   $fa
              579f 005a  ld   $5a
              57a0 006a  ld   $6a
              57a1 00a5  ld   $a5
              57a2 00aa  ld   $aa
              57a3 006a  ld   $6a
              57a4 00a5  ld   $a5
              57a5 00aa  ld   $aa
              57a6 00d6  ld   $d6
              57a7 00bb  ld   $bb
              57a8 005a  ld   $5a
              57a9 0095  ld   $95
              57aa 00aa  ld   $aa
              57ab 0056  ld   $56
              57ac 00aa  ld   $aa
              57ad 000a  ld   $0a
              57ae 00c3  ld   $c3
              57af 0030  ld   $30
              57b0 000c  ld   $0c
              57b1 00c3  ld   $c3
              57b2 0030  ld   $30
              57b3 00ac  ld   $ac
              57b4 00fe  ld   $fe
              57b5 0030  ld   $30
              57b6 000c  ld   $0c
              57b7 00c3  ld   $c3
              57b8 0030  ld   $30
              57b9 00ac  ld   $ac
              57ba 00fe  ld   $fe
              57bb 0030  ld   $30
              57bc 000c  ld   $0c
              57bd 00c3  ld   $c3
              57be 00b0  ld   $b0
              57bf 00fa  ld   $fa
              57c0 00c3  ld   $c3
              57c1 0030  ld   $30
              57c2 000c  ld   $0c
              57c3 00c3  ld   $c3
              57c4 0030  ld   $30
              57c5 000c  ld   $0c
              57c6 00c3  ld   $c3
              57c7 0030  ld   $30
              57c8 000c  ld   $0c
              57c9 00c3  ld   $c3
              57ca 0055  ld   $55
              57cb 0055  ld   $55
              57cc 0055  ld   $55
              * 6 times
              57d0 00aa  ld   $aa
              57d1 00aa  ld   $aa
              57d2 00aa  ld   $aa
              57d3 00ea  ld   $ea
              57d4 00ff  ld   $ff
              57d5 00ff  ld   $ff
              57d6 00ff  ld   $ff
              * 5 times
              57d9 003f  ld   $3f
              57da 000c  ld   $0c
              57db 00c3  ld   $c3
              57dc 0030  ld   $30
              57dd 000c  ld   $0c
              57de 00c3  ld   $c3
              57df 00eb  ld   $eb
              57e0 001a  ld   $1a
              57e1 0004  ld   $04
              57e2 0069  ld   $69
              57e3 00b0  ld   $b0
              57e4 00a6  ld   $a6
              57e5 0030  ld   $30
              57e6 000c  ld   $0c
              57e7 00c3  ld   $c3
              57e8 0070  ld   $70
              57e9 0055  ld   $55
              57ea 00fd  ld   $fd
              57eb 0055  ld   $55
              57ec 00f5  ld   $f5
              57ed 0057  ld   $57
              57ee 00d5  ld   $d5
              57ef 005f  ld   $5f
              57f0 0055  ld   $55
              57f1 007f  ld   $7f
              57f2 0055  ld   $55
              57f3 00fd  ld   $fd
              57f4 0055  ld   $55
              57f5 0005  ld   $05
              57f6 00c3  ld   $c3
              57f7 0030  ld   $30
              57f8 000c  ld   $0c
              57f9 00c3  ld   $c3
              57fa 0030  ld   $30
              57fb fe00  bra  ac          ;+-----------------------------------+
              57fc fcfd  bra  $57fd       ;|                                   |
              57fd 1418  ld   $18,y       ;| Trampoline for page $5700 lookups |
              57fe e006  jmp  y,$06       ;|                                   |
              57ff c218  st   [$18]       ;+-----------------------------------+
              5800 00f0  ld   $f0
              5801 0083  ld   $83
              5802 0081  ld   $81
              5803 0065  ld   $65
              5804 0005  ld   $05
              5805 0020  ld   $20
              5806 0008  ld   $08
              5807 00fc  ld   $fc
              5808 0030  ld   $30
              5809 000c  ld   $0c
              580a 00c3  ld   $c3
              580b 0030  ld   $30
              580c 006c  ld   $6c
              580d 00fc  ld   $fc
              580e 006f  ld   $6f
              580f 0060  ld   $60
              5810 0004  ld   $04
              5811 0046  ld   $46
              5812 0060  ld   $60
              5813 0004  ld   $04
              5814 0046  ld   $46
              5815 0060  ld   $60
              5816 0004  ld   $04
              5817 00c6  ld   $c6
              5818 006f  ld   $6f
              5819 002c  ld   $2c
              581a 0056  ld   $56
              581b 00f0  ld   $f0
              581c 0006  ld   $06
              581d 0030  ld   $30
              581e 000c  ld   $0c
              581f 00c3  ld   $c3
              5820 0030  ld   $30
              5821 000c  ld   $0c
              5822 00c3  ld   $c3
              5823 0030  ld   $30
              5824 000c  ld   $0c
              5825 00c3  ld   $c3
              5826 0030  ld   $30
              5827 000c  ld   $0c
              5828 00c3  ld   $c3
              5829 0030  ld   $30
              582a 000c  ld   $0c
              582b 00c3  ld   $c3
              582c 0030  ld   $30
              582d 000c  ld   $0c
              582e 00c3  ld   $c3
              582f 0030  ld   $30
              5830 000c  ld   $0c
              5831 00c3  ld   $c3
              5832 0030  ld   $30
              5833 000c  ld   $0c
              5834 00c3  ld   $c3
              5835 0030  ld   $30
              5836 000c  ld   $0c
              5837 00c3  ld   $c3
              5838 0070  ld   $70
              5839 00a5  ld   $a5
              583a 00fe  ld   $fe
              583b 00ea  ld   $ea
              583c 000f  ld   $0f
              583d 00ab  ld   $ab
              583e 006a  ld   $6a
              583f 00a5  ld   $a5
              5840 0056  ld   $56
              5841 002a  ld   $2a
              5842 001c  ld   $1c
              5843 0058  ld   $58
              5844 0081  ld   $81
              5845 0015  ld   $15
              5846 0058  ld   $58
              5847 0011  ld   $11
              5848 000c  ld   $0c
              5849 00c3  ld   $c3
              584a 0030  ld   $30
              584b 000c  ld   $0c
              584c 00c3  ld   $c3
              584d 00f0  ld   $f0
              584e 000b  ld   $0b
              584f 00bf  ld   $bf
              5850 003f  ld   $3f
              5851 00fc  ld   $fc
              5852 00c2  ld   $c2
              5853 00ff  ld   $ff
              5854 000f  ld   $0f
              5855 00bf  ld   $bf
              5856 0030  ld   $30
              5857 000c  ld   $0c
              5858 00c3  ld   $c3
              5859 0030  ld   $30
              585a 000c  ld   $0c
              585b 00c3  ld   $c3
              585c 0030  ld   $30
              585d 00ac  ld   $ac
              585e 0069  ld   $69
              585f 0055  ld   $55
              5860 0055  ld   $55
              5861 0055  ld   $55
              5862 0096  ld   $96
              5863 00aa  ld   $aa
              5864 005a  ld   $5a
              5865 00aa  ld   $aa
              5866 006a  ld   $6a
              5867 00a9  ld   $a9
              5868 0096  ld   $96
              5869 00aa  ld   $aa
              586a 00aa  ld   $aa
              586b 0096  ld   $96
              586c 00aa  ld   $aa
              586d 005a  ld   $5a
              586e 0055  ld   $55
              586f 0055  ld   $55
              5870 0055  ld   $55
              5871 009a  ld   $9a
              5872 0006  ld   $06
              5873 00c3  ld   $c3
              5874 0030  ld   $30
              5875 000c  ld   $0c
              5876 00c3  ld   $c3
              5877 0030  ld   $30
              5878 00ac  ld   $ac
              5879 00fe  ld   $fe
              587a 0030  ld   $30
              587b 000c  ld   $0c
              587c 00c3  ld   $c3
              587d 0030  ld   $30
              587e 00ac  ld   $ac
              587f 00fe  ld   $fe
              5880 0030  ld   $30
              5881 000c  ld   $0c
              5882 00c3  ld   $c3
              5883 00b0  ld   $b0
              5884 00fa  ld   $fa
              5885 00c3  ld   $c3
              5886 0030  ld   $30
              5887 000c  ld   $0c
              5888 00c3  ld   $c3
              5889 0030  ld   $30
              588a 000c  ld   $0c
              588b 00c3  ld   $c3
              588c 0030  ld   $30
              588d 0000  ld   $00
              588e 0000  ld   $00
              588f 0000  ld   $00
              * 5 times
              5892 0055  ld   $55
              5893 0055  ld   $55
              5894 0055  ld   $55
              5895 0055  ld   $55
              5896 00a5  ld   $a5
              5897 00aa  ld   $aa
              5898 00aa  ld   $aa
              5899 00aa  ld   $aa
              589a 00fe  ld   $fe
              589b 00ff  ld   $ff
              589c 00ff  ld   $ff
              589d 00ff  ld   $ff
              * 6 times
              58a1 0030  ld   $30
              58a2 000c  ld   $0c
              58a3 00c3  ld   $c3
              58a4 00e9  ld   $e9
              58a5 001a  ld   $1a
              58a6 00a4  ld   $a4
              58a7 0041  ld   $41
              58a8 00b0  ld   $b0
              58a9 00ae  ld   $ae
              58aa 0030  ld   $30
              58ab 000c  ld   $0c
              58ac 00c3  ld   $c3
              58ad 00b0  ld   $b0
              58ae 00ae  ld   $ae
              58af 00fe  ld   $fe
              58b0 00ba  ld   $ba
              58b1 00fa  ld   $fa
              58b2 00ab  ld   $ab
              58b3 00fa  ld   $fa
              58b4 00af  ld   $af
              58b5 00aa  ld   $aa
              58b6 00bf  ld   $bf
              58b7 00ae  ld   $ae
              58b8 00fe  ld   $fe
              58b9 00aa  ld   $aa
              58ba 000e  ld   $0e
              58bb 00c3  ld   $c3
              58bc 0030  ld   $30
              58bd 000c  ld   $0c
              58be 00c3  ld   $c3
              58bf 00c0  ld   $c0
              58c0 001b  ld   $1b
              58c1 0004  ld   $04
              58c2 0041  ld   $41
              58c3 0010  ld   $10
              58c4 0004  ld   $04
              58c5 0041  ld   $41
              58c6 0000  ld   $00
              58c7 0003  ld   $03
              58c8 0030  ld   $30
              58c9 000c  ld   $0c
              58ca 00c3  ld   $c3
              58cb 0030  ld   $30
              58cc 00bc  ld   $bc
              58cd 00bc  ld   $bc
              58ce 00bf  ld   $bf
              58cf 00f1  ld   $f1
              58d0 001a  ld   $1a
              58d1 008b  ld   $8b
              58d2 00b1  ld   $b1
              58d3 0018  ld   $18
              58d4 008b  ld   $8b
              58d5 00b1  ld   $b1
              58d6 0018  ld   $18
              58d7 00c1  ld   $c1
              58d8 00bb  ld   $bb
              58d9 0058  ld   $58
              58da 0046  ld   $46
              58db 00f0  ld   $f0
              58dc 0007  ld   $07
              58dd 0030  ld   $30
              58de 000c  ld   $0c
              58df 00c3  ld   $c3
              58e0 0030  ld   $30
              58e1 000c  ld   $0c
              58e2 00c3  ld   $c3
              58e3 0030  ld   $30
              58e4 000c  ld   $0c
              58e5 00c3  ld   $c3
              58e6 0030  ld   $30
              58e7 000c  ld   $0c
              58e8 00c3  ld   $c3
              58e9 0030  ld   $30
              58ea 000c  ld   $0c
              58eb 00c3  ld   $c3
              58ec 0030  ld   $30
              58ed 000c  ld   $0c
              58ee 00c3  ld   $c3
              58ef 0030  ld   $30
              58f0 000c  ld   $0c
              58f1 00c3  ld   $c3
              58f2 0030  ld   $30
              58f3 000c  ld   $0c
              58f4 00c3  ld   $c3
              58f5 0030  ld   $30
              58f6 000c  ld   $0c
              58f7 00c3  ld   $c3
              58f8 00b0  ld   $b0
              58f9 005a  ld   $5a
              58fa 00a9  ld   $a9
              58fb fe00  bra  ac          ;+-----------------------------------+
              58fc fcfd  bra  $58fd       ;|                                   |
              58fd 1418  ld   $18,y       ;| Trampoline for page $5800 lookups |
              58fe e006  jmp  y,$06       ;|                                   |
              58ff c218  st   [$18]       ;+-----------------------------------+
              5900 00bf  ld   $bf
              5901 000a  ld   $0a
              5902 00ab  ld   $ab
              5903 0095  ld   $95
              5904 005a  ld   $5a
              5905 00a9  ld   $a9
              5906 002a  ld   $2a
              5907 001c  ld   $1c
              5908 0004  ld   $04
              5909 0041  ld   $41
              590a 0010  ld   $10
              590b 0044  ld   $44
              590c 0011  ld   $11
              590d 000c  ld   $0c
              590e 00c3  ld   $c3
              590f 0030  ld   $30
              5910 000c  ld   $0c
              5911 00c3  ld   $c3
              5912 0070  ld   $70
              5913 00f4  ld   $f4
              5914 00fe  ld   $fe
              5915 0030  ld   $30
              5916 00fc  ld   $fc
              5917 00c2  ld   $c2
              5918 00f0  ld   $f0
              5919 00ff  ld   $ff
              591a 004b  ld   $4b
              591b 0030  ld   $30
              591c 000c  ld   $0c
              591d 00c3  ld   $c3
              591e 0030  ld   $30
              591f 000c  ld   $0c
              5920 00c3  ld   $c3
              5921 0030  ld   $30
              5922 00ac  ld   $ac
              5923 0069  ld   $69
              5924 009a  ld   $9a
              5925 00aa  ld   $aa
              5926 006a  ld   $6a
              5927 0016  ld   $16
              5928 00a5  ld   $a5
              5929 005a  ld   $5a
              592a 00aa  ld   $aa
              592b 0061  ld   $61
              592c 00a9  ld   $a9
              592d 0056  ld   $56
              592e 0065  ld   $65
              592f 00a8  ld   $a8
              5930 0056  ld   $56
              5931 0095  ld   $95
              5932 005a  ld   $5a
              5933 009a  ld   $9a
              5934 00aa  ld   $aa
              5935 006a  ld   $6a
              5936 009a  ld   $9a
              5937 0006  ld   $06
              5938 00c3  ld   $c3
              5939 0030  ld   $30
              593a 000c  ld   $0c
              593b 00c3  ld   $c3
              593c 0030  ld   $30
              593d 00ac  ld   $ac
              593e 00fe  ld   $fe
              593f 0030  ld   $30
              5940 000c  ld   $0c
              5941 00c3  ld   $c3
              5942 0030  ld   $30
              5943 00ac  ld   $ac
              5944 00fe  ld   $fe
              5945 0030  ld   $30
              5946 000c  ld   $0c
              5947 00c3  ld   $c3
              5948 00b0  ld   $b0
              5949 00fa  ld   $fa
              594a 00c3  ld   $c3
              594b 0030  ld   $30
              594c 000c  ld   $0c
              594d 00c3  ld   $c3
              594e 0030  ld   $30
              594f 000c  ld   $0c
              5950 00c3  ld   $c3
              5951 0030  ld   $30
              5952 000c  ld   $0c
              5953 0003  ld   $03
              5954 0000  ld   $00
              5955 0000  ld   $00
              5956 0000  ld   $00
              * 5 times
              5959 0054  ld   $54
              595a 0055  ld   $55
              595b 0055  ld   $55
              595c 0055  ld   $55
              595d 0055  ld   $55
              595e 00a5  ld   $a5
              595f 00aa  ld   $aa
              5960 00aa  ld   $aa
              5961 00fa  ld   $fa
              5962 00ff  ld   $ff
              5963 00ff  ld   $ff
              5964 000f  ld   $0f
              5965 00c3  ld   $c3
              5966 0030  ld   $30
              5967 000c  ld   $0c
              5968 00c3  ld   $c3
              5969 00eb  ld   $eb
              596a 001a  ld   $1a
              596b 0004  ld   $04
              596c 0069  ld   $69
              596d 00b0  ld   $b0
              596e 00a6  ld   $a6
              596f 0030  ld   $30
              5970 000c  ld   $0c
              5971 00c3  ld   $c3
              5972 0070  ld   $70
              5973 0055  ld   $55
              5974 00fd  ld   $fd
              5975 0055  ld   $55
              5976 00f5  ld   $f5
              5977 0057  ld   $57
              5978 00d5  ld   $d5
              5979 005f  ld   $5f
              597a 0055  ld   $55
              597b 007f  ld   $7f
              597c 0055  ld   $55
              597d 00fd  ld   $fd
              597e 0055  ld   $55
              597f 0005  ld   $05
              5980 00c3  ld   $c3
              5981 0030  ld   $30
              5982 000c  ld   $0c
              5983 00c3  ld   $c3
              5984 0030  ld   $30
              5985 000c  ld   $0c
              5986 0007  ld   $07
              5987 0096  ld   $96
              5988 0065  ld   $65
              5989 0059  ld   $59
              598a 0001  ld   $01
              598b 000c  ld   $0c
              598c 00c3  ld   $c3
              598d 0030  ld   $30
              598e 000c  ld   $0c
              598f 00c3  ld   $c3
              5990 0030  ld   $30
              5991 006c  ld   $6c
              5992 00fc  ld   $fc
              5993 006f  ld   $6f
              5994 0060  ld   $60
              5995 002c  ld   $2c
              5996 00c6  ld   $c6
              5997 0062  ld   $62
              5998 002c  ld   $2c
              5999 00c6  ld   $c6
              599a 0062  ld   $62
              599b 002c  ld   $2c
              599c 00c6  ld   $c6
              599d 006f  ld   $6f
              599e 0019  ld   $19
              599f 0056  ld   $56
              59a0 00f0  ld   $f0
              59a1 0006  ld   $06
              59a2 0030  ld   $30
              59a3 000c  ld   $0c
              59a4 00c3  ld   $c3
              59a5 0030  ld   $30
              59a6 000c  ld   $0c
              59a7 00c3  ld   $c3
              59a8 0030  ld   $30
              59a9 000c  ld   $0c
              59aa 00c3  ld   $c3
              59ab 0030  ld   $30
              59ac 000c  ld   $0c
              59ad 00c3  ld   $c3
              59ae 0030  ld   $30
              59af 000c  ld   $0c
              59b0 00c3  ld   $c3
              59b1 0030  ld   $30
              59b2 000c  ld   $0c
              59b3 00c3  ld   $c3
              59b4 0030  ld   $30
              59b5 000c  ld   $0c
              59b6 00c3  ld   $c3
              59b7 0030  ld   $30
              59b8 000c  ld   $0c
              59b9 00c3  ld   $c3
              59ba 0030  ld   $30
              59bb 000c  ld   $0c
              59bc 00c3  ld   $c3
              59bd 0070  ld   $70
              59be 00a5  ld   $a5
              59bf 00fe  ld   $fe
              59c0 00ea  ld   $ea
              59c1 000f  ld   $0f
              59c2 00ab  ld   $ab
              59c3 006a  ld   $6a
              59c4 00a5  ld   $a5
              59c5 0056  ld   $56
              59c6 002a  ld   $2a
              59c7 001c  ld   $1c
              59c8 0058  ld   $58
              59c9 0081  ld   $81
              59ca 0015  ld   $15
              59cb 0058  ld   $58
              59cc 0011  ld   $11
              59cd 000c  ld   $0c
              59ce 00c3  ld   $c3
              59cf 0030  ld   $30
              59d0 000c  ld   $0c
              59d1 00c3  ld   $c3
              59d2 0030  ld   $30
              59d3 00fc  ld   $fc
              59d4 00bf  ld   $bf
              59d5 0030  ld   $30
              59d6 00fc  ld   $fc
              59d7 00c2  ld   $c2
              59d8 00f0  ld   $f0
              59d9 00fb  ld   $fb
              59da 00c3  ld   $c3
              59db 0030  ld   $30
              59dc 000c  ld   $0c
              59dd 00c3  ld   $c3
              59de 0030  ld   $30
              59df 000c  ld   $0c
              59e0 00c3  ld   $c3
              59e1 0030  ld   $30
              59e2 005c  ld   $5c
              59e3 00a9  ld   $a9
              59e4 0069  ld   $69
              59e5 0055  ld   $55
              59e6 0055  ld   $55
              59e7 0029  ld   $29
              59e8 0055  ld   $55
              59e9 0055  ld   $55
              59ea 0055  ld   $55
              59eb 0055  ld   $55
              59ec 0051  ld   $51
              59ed 0054  ld   $54
              59ee 0055  ld   $55
              59ef 0055  ld   $55
              59f0 0014  ld   $14
              59f1 0090  ld   $90
              59f2 0052  ld   $52
              59f3 0055  ld   $55
              59f4 0055  ld   $55
              59f5 0055  ld   $55
              59f6 006a  ld   $6a
              59f7 0005  ld   $05
              59f8 00c3  ld   $c3
              59f9 0030  ld   $30
              59fa 000c  ld   $0c
              59fb fe00  bra  ac          ;+-----------------------------------+
              59fc fcfd  bra  $59fd       ;|                                   |
              59fd 1418  ld   $18,y       ;| Trampoline for page $5900 lookups |
              59fe e006  jmp  y,$06       ;|                                   |
              59ff c218  st   [$18]       ;+-----------------------------------+
              5a00 00c3  ld   $c3
              5a01 0030  ld   $30
              5a02 00ac  ld   $ac
              5a03 00fe  ld   $fe
              5a04 0030  ld   $30
              5a05 000c  ld   $0c
              5a06 00c3  ld   $c3
              5a07 0030  ld   $30
              5a08 00ac  ld   $ac
              5a09 00fe  ld   $fe
              5a0a 0030  ld   $30
              5a0b 000c  ld   $0c
              5a0c 00c3  ld   $c3
              5a0d 00b0  ld   $b0
              5a0e 00fa  ld   $fa
              5a0f 00c3  ld   $c3
              5a10 0030  ld   $30
              5a11 000c  ld   $0c
              5a12 00c3  ld   $c3
              5a13 0030  ld   $30
              5a14 000c  ld   $0c
              5a15 00c3  ld   $c3
              5a16 0030  ld   $30
              5a17 000c  ld   $0c
              5a18 00c3  ld   $c3
              5a19 0030  ld   $30
              5a1a 0000  ld   $00
              5a1b 0000  ld   $00
              5a1c 0000  ld   $00
              * 8 times
              5a22 0040  ld   $40
              5a23 0055  ld   $55
              5a24 0055  ld   $55
              5a25 0055  ld   $55
              * 5 times
              5a28 0030  ld   $30
              5a29 000c  ld   $0c
              5a2a 00c3  ld   $c3
              5a2b 0030  ld   $30
              5a2c 000c  ld   $0c
              5a2d 00c3  ld   $c3
              5a2e 00e9  ld   $e9
              5a2f 001a  ld   $1a
              5a30 00a4  ld   $a4
              5a31 0041  ld   $41
              5a32 00b0  ld   $b0
              5a33 00ae  ld   $ae
              5a34 0030  ld   $30
              5a35 000c  ld   $0c
              5a36 00c3  ld   $c3
              5a37 00b0  ld   $b0
              5a38 004a  ld   $4a
              5a39 00d3  ld   $d3
              5a3a 0034  ld   $34
              5a3b 004d  ld   $4d
              5a3c 00d3  ld   $d3
              5a3d 0034  ld   $34
              5a3e 004d  ld   $4d
              5a3f 00d3  ld   $d3
              5a40 0034  ld   $34
              5a41 004d  ld   $4d
              5a42 00d3  ld   $d3
              5a43 00b4  ld   $b4
              5a44 000a  ld   $0a
              5a45 00c3  ld   $c3
              5a46 0030  ld   $30
              5a47 000c  ld   $0c
              5a48 00c3  ld   $c3
              5a49 0030  ld   $30
              5a4a 000c  ld   $0c
              5a4b 0007  ld   $07
              5a4c 0096  ld   $96
              5a4d 0045  ld   $45
              5a4e 0058  ld   $58
              5a4f 0001  ld   $01
              5a50 000c  ld   $0c
              5a51 00c3  ld   $c3
              5a52 0030  ld   $30
              5a53 000c  ld   $0c
              5a54 00c3  ld   $c3
              5a55 0030  ld   $30
              5a56 00bc  ld   $bc
              5a57 00bc  ld   $bc
              5a58 00bf  ld   $bf
              5a59 0011  ld   $11
              5a5a 0018  ld   $18
              5a5b 0081  ld   $81
              5a5c 0011  ld   $11
              5a5d 0018  ld   $18
              5a5e 0081  ld   $81
              5a5f 0011  ld   $11
              5a60 0018  ld   $18
              5a61 00c1  ld   $c1
              5a62 001b  ld   $1b
              5a63 0004  ld   $04
              5a64 0041  ld   $41
              5a65 00f0  ld   $f0
              5a66 0007  ld   $07
              5a67 0030  ld   $30
              5a68 000c  ld   $0c
              5a69 00c3  ld   $c3
              5a6a 0030  ld   $30
              5a6b 000c  ld   $0c
              5a6c 00fc  ld   $fc
              5a6d 0030  ld   $30
              5a6e 000c  ld   $0c
              5a6f 00ff  ld   $ff
              5a70 003f  ld   $3f
              5a71 000c  ld   $0c
              5a72 00c3  ld   $c3
              5a73 003f  ld   $3f
              5a74 00f0  ld   $f0
              5a75 00c3  ld   $c3
              5a76 0030  ld   $30
              5a77 000c  ld   $0c
              5a78 00ff  ld   $ff
              5a79 00c0  ld   $c0
              5a7a 000f  ld   $0f
              5a7b 00c3  ld   $c3
              5a7c 00ff  ld   $ff
              5a7d 000f  ld   $0f
              5a7e 00c3  ld   $c3
              5a7f 0030  ld   $30
              5a80 000c  ld   $0c
              5a81 00c3  ld   $c3
              5a82 00b0  ld   $b0
              5a83 005a  ld   $5a
              5a84 00a9  ld   $a9
              5a85 00bf  ld   $bf
              5a86 000a  ld   $0a
              5a87 00ab  ld   $ab
              5a88 0095  ld   $95
              5a89 005a  ld   $5a
              5a8a 00a9  ld   $a9
              5a8b 002a  ld   $2a
              5a8c 001c  ld   $1c
              5a8d 0004  ld   $04
              5a8e 0041  ld   $41
              5a8f 0010  ld   $10
              5a90 0044  ld   $44
              5a91 0011  ld   $11
              5a92 000c  ld   $0c
              5a93 00c3  ld   $c3
              5a94 0030  ld   $30
              5a95 000c  ld   $0c
              5a96 00c3  ld   $c3
              5a97 00f0  ld   $f0
              5a98 00ff  ld   $ff
              5a99 004b  ld   $4b
              5a9a 00ff  ld   $ff
              5a9b 00fb  ld   $fb
              5a9c 00bf  ld   $bf
              5a9d 00bf  ld   $bf
              5a9e 00f4  ld   $f4
              5a9f 00ff  ld   $ff
              5aa0 0030  ld   $30
              5aa1 000c  ld   $0c
              5aa2 00c3  ld   $c3
              5aa3 0030  ld   $30
              5aa4 000c  ld   $0c
              5aa5 00c3  ld   $c3
              5aa6 0030  ld   $30
              5aa7 00ac  ld   $ac
              5aa8 00aa  ld   $aa
              5aa9 00aa  ld   $aa
              5aaa 005a  ld   $5a
              5aab 00a9  ld   $a9
              5aac 00aa  ld   $aa
              5aad 00aa  ld   $aa
              5aae 00aa  ld   $aa
              * 5 times
              5ab1 006a  ld   $6a
              5ab2 009a  ld   $9a
              5ab3 00aa  ld   $aa
              5ab4 00aa  ld   $aa
              5ab5 00aa  ld   $aa
              * 5 times
              5ab8 006a  ld   $6a
              5ab9 00a5  ld   $a5
              5aba 0069  ld   $69
              5abb 009a  ld   $9a
              5abc 0006  ld   $06
              5abd 00c3  ld   $c3
              5abe 0030  ld   $30
              5abf 000c  ld   $0c
              5ac0 00c3  ld   $c3
              5ac1 0030  ld   $30
              5ac2 00ac  ld   $ac
              5ac3 00fe  ld   $fe
              5ac4 0030  ld   $30
              5ac5 000c  ld   $0c
              5ac6 00c3  ld   $c3
              5ac7 0030  ld   $30
              5ac8 00ac  ld   $ac
              5ac9 00fe  ld   $fe
              5aca 0030  ld   $30
              5acb 000c  ld   $0c
              5acc 00c3  ld   $c3
              5acd 00b0  ld   $b0
              5ace 00fa  ld   $fa
              5acf 00c3  ld   $c3
              5ad0 0030  ld   $30
              5ad1 000c  ld   $0c
              5ad2 00c3  ld   $c3
              5ad3 0030  ld   $30
              5ad4 000c  ld   $0c
              5ad5 00c3  ld   $c3
              5ad6 0030  ld   $30
              5ad7 000c  ld   $0c
              5ad8 00c3  ld   $c3
              5ad9 0030  ld   $30
              5ada 000c  ld   $0c
              5adb 0003  ld   $03
              5adc 0000  ld   $00
              5add 0000  ld   $00
              5ade 0000  ld   $00
              * 11 times
              5ae7 00c3  ld   $c3
              5ae8 0030  ld   $30
              5ae9 000c  ld   $0c
              5aea 00c3  ld   $c3
              5aeb 0030  ld   $30
              5aec 000c  ld   $0c
              5aed 00c3  ld   $c3
              5aee 00eb  ld   $eb
              5aef 001a  ld   $1a
              5af0 0004  ld   $04
              5af1 0069  ld   $69
              5af2 00b0  ld   $b0
              5af3 00a6  ld   $a6
              5af4 0030  ld   $30
              5af5 000c  ld   $0c
              5af6 00c3  ld   $c3
              5af7 0070  ld   $70
              5af8 0005  ld   $05
              5af9 00c3  ld   $c3
              5afa 00fe  ld   $fe
              5afb fe00  bra  ac          ;+-----------------------------------+
              5afc fcfd  bra  $5afd       ;|                                   |
              5afd 1418  ld   $18,y       ;| Trampoline for page $5a00 lookups |
              5afe e006  jmp  y,$06       ;|                                   |
              5aff c218  st   [$18]       ;+-----------------------------------+
              5b00 00ef  ld   $ef
              5b01 00ff  ld   $ff
              5b02 00fe  ld   $fe
              5b03 00ef  ld   $ef
              5b04 00ff  ld   $ff
              5b05 00fe  ld   $fe
              5b06 00ef  ld   $ef
              5b07 00c3  ld   $c3
              5b08 0070  ld   $70
              5b09 0005  ld   $05
              5b0a 00c3  ld   $c3
              5b0b 0030  ld   $30
              5b0c 000c  ld   $0c
              5b0d 00c3  ld   $c3
              5b0e 0030  ld   $30
              5b0f 000c  ld   $0c
              5b10 0007  ld   $07
              5b11 0084  ld   $84
              5b12 0065  ld   $65
              5b13 0059  ld   $59
              5b14 0001  ld   $01
              5b15 000c  ld   $0c
              5b16 00c3  ld   $c3
              5b17 0030  ld   $30
              5b18 000c  ld   $0c
              5b19 00c3  ld   $c3
              5b1a 0030  ld   $30
              5b1b 006c  ld   $6c
              5b1c 00fc  ld   $fc
              5b1d 00ef  ld   $ef
              5b1e 00ff  ld   $ff
              5b1f 00fe  ld   $fe
              5b20 00ef  ld   $ef
              5b21 00ff  ld   $ff
              5b22 00fe  ld   $fe
              5b23 00ef  ld   $ef
              5b24 00ff  ld   $ff
              5b25 00fe  ld   $fe
              5b26 00ef  ld   $ef
              5b27 00ff  ld   $ff
              5b28 00fe  ld   $fe
              5b29 00ef  ld   $ef
              5b2a 00ff  ld   $ff
              5b2b 0006  ld   $06
              5b2c 0030  ld   $30
              5b2d 000c  ld   $0c
              5b2e 00c3  ld   $c3
              5b2f 000c  ld   $0c
              5b30 00f3  ld   $f3
              5b31 0003  ld   $03
              5b32 000c  ld   $0c
              5b33 00c3  ld   $c3
              5b34 0030  ld   $30
              5b35 000c  ld   $0c
              5b36 00c3  ld   $c3
              5b37 0030  ld   $30
              5b38 00cc  ld   $cc
              5b39 00ff  ld   $ff
              5b3a 0033  ld   $33
              5b3b 000c  ld   $0c
              5b3c 00c3  ld   $c3
              5b3d 0000  ld   $00
              5b3e 003f  ld   $3f
              5b3f 00c3  ld   $c3
              5b40 0030  ld   $30
              5b41 000c  ld   $0c
              5b42 00c3  ld   $c3
              5b43 0030  ld   $30
              5b44 000c  ld   $0c
              5b45 000c  ld   $0c
              5b46 00c3  ld   $c3
              5b47 0070  ld   $70
              5b48 00a5  ld   $a5
              5b49 00fe  ld   $fe
              5b4a 00ea  ld   $ea
              5b4b 000f  ld   $0f
              5b4c 00ab  ld   $ab
              5b4d 006a  ld   $6a
              5b4e 00a5  ld   $a5
              5b4f 0056  ld   $56
              5b50 002a  ld   $2a
              5b51 001c  ld   $1c
              5b52 0058  ld   $58
              5b53 0081  ld   $81
              5b54 0015  ld   $15
              5b55 0058  ld   $58
              5b56 0011  ld   $11
              5b57 000c  ld   $0c
              5b58 00c3  ld   $c3
              5b59 0030  ld   $30
              5b5a 000c  ld   $0c
              5b5b 00c3  ld   $c3
              5b5c 00f0  ld   $f0
              5b5d 000f  ld   $0f
              5b5e 00c3  ld   $c3
              5b5f 0052  ld   $52
              5b60 0024  ld   $24
              5b61 0005  ld   $05
              5b62 0012  ld   $12
              5b63 000c  ld   $0c
              5b64 00ff  ld   $ff
              5b65 0030  ld   $30
              5b66 000c  ld   $0c
              5b67 00c3  ld   $c3
              5b68 0030  ld   $30
              5b69 000c  ld   $0c
              5b6a 00c3  ld   $c3
              5b6b 0030  ld   $30
              5b6c 005c  ld   $5c
              5b6d 0055  ld   $55
              5b6e 0055  ld   $55
              5b6f 0055  ld   $55
              5b70 0055  ld   $55
              5b71 0015  ld   $15
              5b72 0055  ld   $55
              5b73 00a9  ld   $a9
              5b74 0095  ld   $95
              5b75 00aa  ld   $aa
              5b76 00aa  ld   $aa
              5b77 00aa  ld   $aa
              5b78 001a  ld   $1a
              5b79 0054  ld   $54
              5b7a 0041  ld   $41
              5b7b 0055  ld   $55
              5b7c 0055  ld   $55
              5b7d 0055  ld   $55
              5b7e 0055  ld   $55
              5b7f 0005  ld   $05
              5b80 0095  ld   $95
              5b81 000a  ld   $0a
              5b82 00c3  ld   $c3
              5b83 0030  ld   $30
              5b84 00cc  ld   $cc
              5b85 0030  ld   $30
              5b86 008c  ld   $8c
              5b87 00fa  ld   $fa
              5b88 00ff  ld   $ff
              5b89 003f  ld   $3f
              5b8a 00c3  ld   $c3
              5b8b 0030  ld   $30
              5b8c 008c  ld   $8c
              5b8d 00fa  ld   $fa
              5b8e 00ff  ld   $ff
              5b8f 003f  ld   $3f
              5b90 00c3  ld   $c3
              5b91 0030  ld   $30
              5b92 00ea  ld   $ea
              5b93 00ff  ld   $ff
              5b94 00ff  ld   $ff
              5b95 000c  ld   $0c
              5b96 00c3  ld   $c3
              5b97 00c0  ld   $c0
              5b98 0030  ld   $30
              5b99 000c  ld   $0c
              5b9a 00c3  ld   $c3
              5b9b 0030  ld   $30
              5b9c 000c  ld   $0c
              5b9d 00c3  ld   $c3
              5b9e 0030  ld   $30
              5b9f 000c  ld   $0c
              5ba0 00c3  ld   $c3
              5ba1 0030  ld   $30
              5ba2 0000  ld   $00
              5ba3 0000  ld   $00
              5ba4 0000  ld   $00
              * 8 times
              5baa 0015  ld   $15
              5bab 000c  ld   $0c
              5bac 00c3  ld   $c3
              5bad 0030  ld   $30
              5bae 000c  ld   $0c
              5baf 00c3  ld   $c3
              5bb0 0030  ld   $30
              5bb1 000c  ld   $0c
              5bb2 00c3  ld   $c3
              5bb3 00e9  ld   $e9
              5bb4 001a  ld   $1a
              5bb5 00a4  ld   $a4
              5bb6 0041  ld   $41
              5bb7 00b0  ld   $b0
              5bb8 00ae  ld   $ae
              5bb9 0030  ld   $30
              5bba 000c  ld   $0c
              5bbb 00c3  ld   $c3
              5bbc 0070  ld   $70
              5bbd 00f5  ld   $f5
              5bbe 00fb  ld   $fb
              5bbf 00bf  ld   $bf
              5bc0 00af  ld   $af
              5bc1 00aa  ld   $aa
              5bc2 00aa  ld   $aa
              5bc3 00aa  ld   $aa
              * 5 times
              5bc6 00fa  ld   $fa
              5bc7 00fb  ld   $fb
              5bc8 007f  ld   $7f
              5bc9 0005  ld   $05
              5bca 00c3  ld   $c3
              5bcb 0030  ld   $30
              5bcc 000c  ld   $0c
              5bcd 00c3  ld   $c3
              5bce 0030  ld   $30
              5bcf 000c  ld   $0c
              5bd0 0007  ld   $07
              5bd1 0084  ld   $84
              5bd2 0065  ld   $65
              5bd3 0059  ld   $59
              5bd4 0001  ld   $01
              5bd5 000c  ld   $0c
              5bd6 00c3  ld   $c3
              5bd7 0030  ld   $30
              5bd8 000c  ld   $0c
              5bd9 00c3  ld   $c3
              5bda 0030  ld   $30
              5bdb 00bc  ld   $bc
              5bdc 00bc  ld   $bc
              5bdd 0000  ld   $00
              5bde 0000  ld   $00
              5bdf 0000  ld   $00
              * 13 times
              5bea 00f0  ld   $f0
              5beb 0007  ld   $07
              5bec 0030  ld   $30
              5bed 000c  ld   $0c
              5bee 0033  ld   $33
              5bef 0008  ld   $08
              5bf0 0082  ld   $82
              5bf1 0020  ld   $20
              5bf2 0008  ld   $08
              5bf3 0082  ld   $82
              5bf4 0020  ld   $20
              5bf5 0008  ld   $08
              5bf6 0082  ld   $82
              5bf7 0020  ld   $20
              5bf8 0008  ld   $08
              5bf9 0082  ld   $82
              5bfa 0020  ld   $20
              5bfb fe00  bra  ac          ;+-----------------------------------+
              5bfc fcfd  bra  $5bfd       ;|                                   |
              5bfd 1418  ld   $18,y       ;| Trampoline for page $5b00 lookups |
              5bfe e006  jmp  y,$06       ;|                                   |
              5bff c218  st   [$18]       ;+-----------------------------------+
              5c00 0008  ld   $08
              5c01 0082  ld   $82
              5c02 0020  ld   $20
              5c03 0008  ld   $08
              5c04 0082  ld   $82
              5c05 0020  ld   $20
              5c06 0008  ld   $08
              5c07 0082  ld   $82
              5c08 0020  ld   $20
              5c09 0008  ld   $08
              5c0a 0003  ld   $03
              5c0b 00c3  ld   $c3
              5c0c 00b0  ld   $b0
              5c0d 005a  ld   $5a
              5c0e 00a9  ld   $a9
              5c0f 00bf  ld   $bf
              5c10 000a  ld   $0a
              5c11 00ab  ld   $ab
              5c12 00aa  ld   $aa
              5c13 00aa  ld   $aa
              5c14 00aa  ld   $aa
              5c15 002a  ld   $2a
              5c16 001c  ld   $1c
              5c17 0004  ld   $04
              5c18 0041  ld   $41
              5c19 0010  ld   $10
              5c1a 0044  ld   $44
              5c1b 0011  ld   $11
              5c1c 000c  ld   $0c
              5c1d 00c3  ld   $c3
              5c1e 0030  ld   $30
              5c1f 000c  ld   $0c
              5c20 00ff  ld   $ff
              5c21 00ff  ld   $ff
              5c22 00ff  ld   $ff
              * 11 times
              5c2b 000f  ld   $0f
              5c2c 00c3  ld   $c3
              5c2d 0030  ld   $30
              5c2e 000c  ld   $0c
              5c2f 00c3  ld   $c3
              5c30 0030  ld   $30
              5c31 005c  ld   $5c
              5c32 0014  ld   $14
              5c33 0045  ld   $45
              5c34 0051  ld   $51
              5c35 0014  ld   $14
              5c36 0045  ld   $45
              5c37 0051  ld   $51
              5c38 0014  ld   $14
              5c39 0045  ld   $45
              5c3a 0051  ld   $51
              5c3b 0014  ld   $14
              5c3c 0045  ld   $45
              5c3d 0051  ld   $51
              5c3e 0014  ld   $14
              5c3f 0045  ld   $45
              5c40 0051  ld   $51
              5c41 0014  ld   $14
              5c42 0045  ld   $45
              5c43 0051  ld   $51
              5c44 0014  ld   $14
              5c45 0045  ld   $45
              5c46 0001  ld   $01
              5c47 00c3  ld   $c3
              5c48 0030  ld   $30
              5c49 0083  ld   $83
              5c4a 0020  ld   $20
              5c4b 0008  ld   $08
              5c4c 0082  ld   $82
              5c4d 0020  ld   $20
              5c4e 0008  ld   $08
              5c4f 0082  ld   $82
              5c50 0020  ld   $20
              5c51 0008  ld   $08
              5c52 0082  ld   $82
              5c53 0020  ld   $20
              5c54 0008  ld   $08
              5c55 0082  ld   $82
              5c56 0020  ld   $20
              5c57 0008  ld   $08
              5c58 0082  ld   $82
              5c59 0020  ld   $20
              5c5a 0008  ld   $08
              5c5b 0082  ld   $82
              5c5c 0030  ld   $30
              5c5d 0030  ld   $30
              5c5e 000c  ld   $0c
              5c5f 00c3  ld   $c3
              5c60 0030  ld   $30
              5c61 000c  ld   $0c
              5c62 00c3  ld   $c3
              5c63 0030  ld   $30
              5c64 000c  ld   $0c
              5c65 00c3  ld   $c3
              5c66 0030  ld   $30
              5c67 000c  ld   $0c
              5c68 0003  ld   $03
              5c69 0000  ld   $00
              5c6a 0000  ld   $00
              5c6b 0000  ld   $00
              * 5 times
              5c6e 00c3  ld   $c3
              5c6f 0015  ld   $15
              5c70 000c  ld   $0c
              5c71 00c3  ld   $c3
              5c72 0030  ld   $30
              5c73 000c  ld   $0c
              5c74 00c3  ld   $c3
              5c75 0030  ld   $30
              5c76 000c  ld   $0c
              5c77 00c3  ld   $c3
              5c78 00eb  ld   $eb
              5c79 001a  ld   $1a
              5c7a 0004  ld   $04         ;End of Apps/Racer/Horizon-256x16.rgb, size 3132
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Racer_v2.gcl           |
                                          ;+-----------------------------------+
              5c7b dc7a  st   $7a,[y,x++] ;'z'
              5c7c dc69  st   $69,[y,x++] ;'i'
              5c7d dc70  st   $70,[y,x++] ;'p'
              5c7e dc70  st   $70,[y,x++] ;'p'
              5c7f dc65  st   $65,[y,x++] ;'e'
              5c80 dc64  st   $64,[y,x++] ;'d'
              5c81 dc52  st   $52,[y,x++] ;'R'
              5c82 dc61  st   $61,[y,x++] ;'a'
              5c83 003f  ld   $3f
              5c84 c218  st   [$18]
              5c85 0050  ld   $50
              5c86 14fa  ld   $fa,y
              5c87 e020  jmp  y,$20
              5c88 c219  st   [$19]
Racer:        5c89 0002  ld   $02         ;| RAM segment address (high byte first)
              5c8a 0000  ld   $00         ;|
              5c8b 00f7  ld   $f7         ;| Length (1..256)
              5c8c 001a  ld   $1a         ;0200 LD
              5c8d 0021  ld   $21
              5c8e 00e6  ld   $e6         ;0202 SUBI
              5c8f 0020  ld   $20
              5c90 0035  ld   $35         ;0204 BCC
              5c91 0053  ld   $53         ;0205 GE
              5c92 000b  ld   $0b
              5c93 0021  ld   $21         ;0207 LDW
              5c94 000e  ld   $0e         ;0207 '_frameCount'
              5c95 00f3  ld   $f3         ;0209 DOKE
              5c96 0017  ld   $17         ;0209 '_vPCH'
              5c97 0090  ld   $90         ;020b BRA
              5c98 0005  ld   $05
              5c99 00cd  ld   $cd         ;020d DEF
              5c9a 0057  ld   $57
              5c9b 00e6  ld   $e6         ;020f SUBI
              5c9c 0052  ld   $52
              5c9d 0035  ld   $35         ;0211 BCC
              5c9e 0053  ld   $53         ;0212 GE
              5c9f 001b  ld   $1b
              5ca0 00e3  ld   $e3         ;0214 ADDI
              5ca1 0032  ld   $32
              5ca2 002b  ld   $2b         ;0216 STW
              5ca3 0030  ld   $30         ;0216 'i'
              5ca4 0011  ld   $11         ;0218 LDWI
              5ca5 0000  ld   $00
              5ca6 0007  ld   $07
              5ca7 0090  ld   $90         ;021b BRA
              5ca8 0020  ld   $20
              5ca9 002b  ld   $2b         ;021d STW
              5caa 0030  ld   $30         ;021d 'i'
              5cab 0011  ld   $11         ;021f LDWI
              5cac 0000  ld   $00
              5cad 0008  ld   $08
              5cae 002b  ld   $2b         ;0222 STW
              5caf 0032  ld   $32         ;0222 'fontData'
              5cb0 0021  ld   $21         ;0224 LDW
              5cb1 0030  ld   $30         ;0224 'i'
              5cb2 00e9  ld   $e9         ;0226 LSLW
              5cb3 00e9  ld   $e9         ;0227 LSLW
              5cb4 0099  ld   $99         ;0228 ADDW
              5cb5 0030  ld   $30         ;0228 'i'
              5cb6 0099  ld   $99         ;022a ADDW
              5cb7 0032  ld   $32         ;022a 'fontData'
              5cb8 002b  ld   $2b         ;022c STW
              5cb9 0032  ld   $32         ;022c 'fontData'
              5cba 0021  ld   $21         ;022e LDW
              5cbb 0034  ld   $34         ;022e 'BgColor'
              5cbc 005e  ld   $5e         ;0230 ST
              5cbd 0024  ld   $24
              5cbe 0021  ld   $21         ;0232 LDW
              5cbf 0036  ld   $36         ;0232 'Color'
              5cc0 005e  ld   $5e         ;0234 ST
              5cc1 0025  ld   $25
              5cc2 0021  ld   $21         ;0236 LDW
              5cc3 0038  ld   $38         ;0236 'Pos'
              5cc4 002b  ld   $2b         ;0238 STW
              5cc5 0028  ld   $28
              5cc6 0011  ld   $11         ;023a LDWI
              5cc7 00e1  ld   $e1
              5cc8 0004  ld   $04
              5cc9 002b  ld   $2b         ;023d STW
              5cca 0022  ld   $22
              5ccb 0059  ld   $59         ;023f LDI
              5ccc 00fb  ld   $fb
              5ccd 002b  ld   $2b         ;0241 STW
              5cce 0030  ld   $30         ;0241 'i'
              5ccf 0021  ld   $21         ;0243 LDW
              5cd0 0032  ld   $32         ;0243 'fontData'
              5cd1 007f  ld   $7f         ;0245 LUP
              5cd2 0000  ld   $00
              5cd3 0093  ld   $93         ;0247 INC
              5cd4 0032  ld   $32         ;0247 'fontData'
              5cd5 005e  ld   $5e         ;0249 ST
              5cd6 0026  ld   $26
              5cd7 00b4  ld   $b4         ;024b SYS
              5cd8 00cc  ld   $cc
              5cd9 0093  ld   $93         ;024d INC
              5cda 0028  ld   $28
              5cdb 0093  ld   $93         ;024f INC
              5cdc 0030  ld   $30         ;024f 'i'
              5cdd 0021  ld   $21         ;0251 LDW
              5cde 0030  ld   $30         ;0251 'i'
              5cdf 0035  ld   $35         ;0253 BCC
              5ce0 0072  ld   $72         ;0254 NE
              5ce1 0041  ld   $41
              5ce2 0021  ld   $21         ;0256 LDW
              5ce3 0038  ld   $38         ;0256 'Pos'
              5ce4 00ff  ld   $ff         ;0258 RET
              5ce5 002b  ld   $2b         ;0259 STW
              5ce6 003a  ld   $3a         ;0259 'QPrintChar'
              5ce7 00cd  ld   $cd         ;025b DEF
              5ce8 00f0  ld   $f0
              5ce9 001a  ld   $1a         ;025d LD
              5cea 000e  ld   $0e
              5ceb 00b8  ld   $b8         ;025f SUBW
              5cec 003c  ld   $3c         ;025f 'LastFrame'
              5ced 0082  ld   $82         ;0261 ANDI
              5cee 00ff  ld   $ff
              5cef 005e  ld   $5e         ;0263 ST
              5cf0 002b  ld   $2b
              5cf1 0099  ld   $99         ;0265 ADDW
              5cf2 003e  ld   $3e         ;0265 'Time'
              5cf3 0035  ld   $35         ;0267 BCC
              5cf4 0053  ld   $53         ;0268 GE
              5cf5 006b  ld   $6b
              5cf6 0011  ld   $11         ;026a LDWI
              5cf7 00ff  ld   $ff
              5cf8 007f  ld   $7f
              5cf9 002b  ld   $2b         ;026d STW
              5cfa 003e  ld   $3e         ;026d 'Time'
              5cfb fe00  bra  ac          ;+-----------------------------------+
              5cfc fcfd  bra  $5cfd       ;|                                   |
              5cfd 1418  ld   $18,y       ;| Trampoline for page $5c00 lookups |
              5cfe e006  jmp  y,$06       ;|                                   |
              5cff c218  st   [$18]       ;+-----------------------------------+
              5d00 001a  ld   $1a         ;026f LD
              5d01 000e  ld   $0e
              5d02 002b  ld   $2b         ;0271 STW
              5d03 003c  ld   $3c         ;0271 'LastFrame'
              5d04 001a  ld   $1a         ;0273 LD
              5d05 0041  ld   $41         ;0273 'Speed'+1
              5d06 0035  ld   $35         ;0275 BCC
              5d07 0056  ld   $56         ;0276 LE
              5d08 008a  ld   $8a
              5d09 002b  ld   $2b         ;0278 STW
              5d0a 0030  ld   $30         ;0278 'i'
              5d0b 0021  ld   $21         ;027a LDW
              5d0c 0042  ld   $42         ;027a 'CarX'
              5d0d 00b8  ld   $b8         ;027c SUBW
              5d0e 0044  ld   $44         ;027c 'DriftX'
              5d0f 002b  ld   $2b         ;027e STW
              5d10 0042  ld   $42         ;027e 'CarX'
              5d11 0021  ld   $21         ;0280 LDW
              5d12 0046  ld   $46         ;0280 'HorizonX'
              5d13 0099  ld   $99         ;0282 ADDW
              5d14 0048  ld   $48         ;0282 'HorizonDX'
              5d15 002b  ld   $2b         ;0284 STW
              5d16 0046  ld   $46         ;0284 'HorizonX'
              5d17 0021  ld   $21         ;0286 LDW
              5d18 0030  ld   $30         ;0286 'i'
              5d19 00e6  ld   $e6         ;0288 SUBI
              5d1a 0001  ld   $01
              5d1b 0090  ld   $90         ;028a BRA
              5d1c 0073  ld   $73
              5d1d 0059  ld   $59         ;028c LDI
              5d1e 0000  ld   $00
              5d1f 002b  ld   $2b         ;028e STW
              5d20 004a  ld   $4a         ;028e 'Steer'
              5d21 001a  ld   $1a         ;0290 LD
              5d22 0011  ld   $11
              5d23 0082  ld   $82         ;0292 ANDI
              5d24 0001  ld   $01
              5d25 0035  ld   $35         ;0294 BCC
              5d26 0072  ld   $72         ;0295 NE
              5d27 00a0  ld   $a0
              5d28 0011  ld   $11         ;0297 LDWI
              5d29 0000  ld   $00
              5d2a 0002  ld   $02
              5d2b 0099  ld   $99         ;029a ADDW
              5d2c 0042  ld   $42         ;029a 'CarX'
              5d2d 002b  ld   $2b         ;029c STW
              5d2e 0042  ld   $42         ;029c 'CarX'
              5d2f 0059  ld   $59         ;029e LDI
              5d30 0001  ld   $01
              5d31 002b  ld   $2b         ;02a0 STW
              5d32 004a  ld   $4a         ;02a0 'Steer'
              5d33 001a  ld   $1a         ;02a2 LD
              5d34 0011  ld   $11
              5d35 0082  ld   $82         ;02a4 ANDI
              5d36 0002  ld   $02
              5d37 0035  ld   $35         ;02a6 BCC
              5d38 0072  ld   $72         ;02a7 NE
              5d39 00b3  ld   $b3
              5d3a 0011  ld   $11         ;02a9 LDWI
              5d3b 0000  ld   $00
              5d3c 00fe  ld   $fe
              5d3d 0099  ld   $99         ;02ac ADDW
              5d3e 0042  ld   $42         ;02ac 'CarX'
              5d3f 002b  ld   $2b         ;02ae STW
              5d40 0042  ld   $42         ;02ae 'CarX'
              5d41 0011  ld   $11         ;02b0 LDWI
              5d42 00ff  ld   $ff
              5d43 00ff  ld   $ff
              5d44 002b  ld   $2b         ;02b3 STW
              5d45 004a  ld   $4a         ;02b3 'Steer'
              5d46 001a  ld   $1a         ;02b5 LD
              5d47 0011  ld   $11
              5d48 0082  ld   $82         ;02b7 ANDI
              5d49 0080  ld   $80
              5d4a 0035  ld   $35         ;02b9 BCC
              5d4b 0072  ld   $72         ;02ba NE
              5d4c 00cf  ld   $cf
              5d4d 0021  ld   $21         ;02bc LDW
              5d4e 0040  ld   $40         ;02bc 'Speed'
              5d4f 00e3  ld   $e3         ;02be ADDI
              5d50 0010  ld   $10
              5d51 002b  ld   $2b         ;02c0 STW
              5d52 0040  ld   $40         ;02c0 'Speed'
              5d53 0011  ld   $11         ;02c2 LDWI
              5d54 00ff  ld   $ff
              5d55 0005  ld   $05
              5d56 00b8  ld   $b8         ;02c5 SUBW
              5d57 0040  ld   $40         ;02c5 'Speed'
              5d58 0035  ld   $35         ;02c7 BCC
              5d59 0053  ld   $53         ;02c8 GE
              5d5a 00cd  ld   $cd
              5d5b 0011  ld   $11         ;02ca LDWI
              5d5c 00ff  ld   $ff
              5d5d 0005  ld   $05
              5d5e 002b  ld   $2b         ;02cd STW
              5d5f 0040  ld   $40         ;02cd 'Speed'
              5d60 0090  ld   $90         ;02cf BRA
              5d61 00dd  ld   $dd
              5d62 0011  ld   $11         ;02d1 LDWI
              5d63 00f8  ld   $f8
              5d64 00fe  ld   $fe
              5d65 0099  ld   $99         ;02d4 ADDW
              5d66 0040  ld   $40         ;02d4 'Speed'
              5d67 0035  ld   $35         ;02d6 BCC
              5d68 0050  ld   $50         ;02d7 LT
              5d69 00dd  ld   $dd
              5d6a 0021  ld   $21         ;02d9 LDW
              5d6b 0040  ld   $40         ;02d9 'Speed'
              5d6c 00e6  ld   $e6         ;02db SUBI
              5d6d 0008  ld   $08
              5d6e 002b  ld   $2b         ;02dd STW
              5d6f 0040  ld   $40         ;02dd 'Speed'
              5d70 001a  ld   $1a         ;02df LD
              5d71 0011  ld   $11
              5d72 0082  ld   $82         ;02e1 ANDI
              5d73 0040  ld   $40
              5d74 0035  ld   $35         ;02e3 BCC
              5d75 0072  ld   $72         ;02e4 NE
              5d76 00ef  ld   $ef
              5d77 0021  ld   $21         ;02e6 LDW
              5d78 0040  ld   $40         ;02e6 'Speed'
              5d79 00e6  ld   $e6         ;02e8 SUBI
              5d7a 0040  ld   $40
              5d7b 0035  ld   $35         ;02ea BCC
              5d7c 0053  ld   $53         ;02eb GE
              5d7d 00ed  ld   $ed
              5d7e 0059  ld   $59         ;02ed LDI
              5d7f 0000  ld   $00
              5d80 002b  ld   $2b         ;02ef STW
              5d81 0040  ld   $40         ;02ef 'Speed'
              5d82 00ff  ld   $ff         ;02f1 RET
              5d83 002b  ld   $2b         ;02f2 STW
              5d84 004c  ld   $4c         ;02f2 'ControlRaceCar'
              5d85 0093  ld   $93         ;02f4 INC
              5d86 001b  ld   $1b         ;02f4 '_vLR'+1
              5d87 00ff  ld   $ff         ;02f6 RET
              5d88 0003  ld   $03         ;| RAM segment address (high byte first)
              5d89 0000  ld   $00         ;|
              5d8a 00e1  ld   $e1         ;| Length (1..256)
              5d8b 00cd  ld   $cd         ;0300 DEF
              5d8c 0009  ld   $09
              5d8d 0047  ld   $47         ;0302 'G'
              5d8e 0069  ld   $69         ;0303 'i'
              5d8f 0067  ld   $67         ;0304 'g'
              5d90 0061  ld   $61         ;0305 'a'
              5d91 0074  ld   $74         ;0306 't'
              5d92 0072  ld   $72         ;0307 'r'
              5d93 006f  ld   $6f         ;0308 'o'
              5d94 006e  ld   $6e         ;0309 'n'
              5d95 0000  ld   $00         ;030a 0
              5d96 002b  ld   $2b         ;030b STW
              5d97 004e  ld   $4e         ;030b 'GigatronText'
              5d98 00cd  ld   $cd         ;030d DEF
              5d99 001d  ld   $1d
              5d9a 001a  ld   $1a         ;030f LD
              5d9b 000e  ld   $0e
              5d9c 0099  ld   $99         ;0311 ADDW
              5d9d 0050  ld   $50         ;0311 'Delay'
              5d9e 0082  ld   $82         ;0313 ANDI
              5d9f 00ff  ld   $ff
              5da0 002b  ld   $2b         ;0315 STW
              5da1 0052  ld   $52         ;0315 'tmp'
              5da2 001a  ld   $1a         ;0317 LD
              5da3 000e  ld   $0e
              5da4 00b8  ld   $b8         ;0319 SUBW
              5da5 0052  ld   $52         ;0319 'tmp'
              5da6 0035  ld   $35         ;031b BCC
              5da7 0072  ld   $72         ;031c NE
              5da8 0015  ld   $15
              5da9 00ff  ld   $ff         ;031e RET
              5daa 002b  ld   $2b         ;031f STW
              5dab 0054  ld   $54         ;031f 'Wait'
              5dac 00cd  ld   $cd         ;0321 DEF
              5dad 00a1  ld   $a1
              5dae 0021  ld   $21         ;0323 LDW
              5daf 0056  ld   $56         ;0323 'Video'
              5db0 00ad  ld   $ad         ;0325 PEEK
              5db1 0082  ld   $82         ;0326 ANDI
              5db2 00fe  ld   $fe
              5db3 005e  ld   $5e         ;0328 ST
              5db4 0059  ld   $59         ;0328 'p'+1
              5db5 0088  ld   $88         ;032a ORI
              5db6 0001  ld   $01
              5db7 005e  ld   $5e         ;032c ST
              5db8 005b  ld   $5b         ;032c 'q'+1
              5db9 0093  ld   $93         ;032e INC
              5dba 0056  ld   $56         ;032e 'Video'
              5dbb 0059  ld   $59         ;0330 LDI
              5dbc 0000  ld   $00
              5dbd 005e  ld   $5e         ;0332 ST
              5dbe 0058  ld   $58         ;0332 'p'
              5dbf 005e  ld   $5e         ;0334 ST
              5dc0 005a  ld   $5a         ;0334 'q'
              5dc1 0021  ld   $21         ;0336 LDW
              5dc2 0058  ld   $58         ;0336 'p'
              5dc3 00ad  ld   $ad         ;0338 PEEK
              5dc4 002b  ld   $2b         ;0339 STW
              5dc5 0030  ld   $30         ;0339 'i'
              5dc6 0021  ld   $21         ;033b LDW
              5dc7 005a  ld   $5a         ;033b 'q'
              5dc8 00ad  ld   $ad         ;033d PEEK
              5dc9 00b8  ld   $b8         ;033e SUBW
              5dca 0030  ld   $30         ;033e 'i'
              5dcb 002b  ld   $2b         ;0340 STW
              5dcc 0030  ld   $30         ;0340 'i'
              5dcd 0021  ld   $21         ;0342 LDW
              5dce 0058  ld   $58         ;0342 'p'
              5dcf 00ad  ld   $ad         ;0344 PEEK
              5dd0 005e  ld   $5e         ;0345 ST
              5dd1 0058  ld   $58         ;0345 'p'
              5dd2 005e  ld   $5e         ;0347 ST
              5dd3 005a  ld   $5a         ;0347 'q'
              5dd4 0059  ld   $59         ;0349 LDI
              5dd5 0015  ld   $15
              5dd6 00f0  ld   $f0         ;034b POKE
              5dd7 0058  ld   $58         ;034b 'p'
              5dd8 00f0  ld   $f0         ;034d POKE
              5dd9 005a  ld   $5a         ;034d 'q'
              5dda 0093  ld   $93         ;034f INC
              5ddb 0058  ld   $58         ;034f 'p'
              5ddc 0093  ld   $93         ;0351 INC
              5ddd 005a  ld   $5a         ;0351 'q'
              5dde 0021  ld   $21         ;0353 LDW
              5ddf 0030  ld   $30         ;0353 'i'
              5de0 00e6  ld   $e6         ;0355 SUBI
              5de1 0001  ld   $01
              5de2 002b  ld   $2b         ;0357 STW
              5de3 0030  ld   $30         ;0357 'i'
              5de4 0035  ld   $35         ;0359 BCC
              5de5 004d  ld   $4d         ;035a GT
              5de6 0047  ld   $47
              5de7 0021  ld   $21         ;035c LDW
              5de8 005c  ld   $5c         ;035c 'Sprite'
              5de9 002b  ld   $2b         ;035e STW
              5dea 005e  ld   $5e         ;035e 's'
              5deb 0059  ld   $59         ;0360 LDI
              5dec 0000  ld   $00
              5ded 005e  ld   $5e         ;0362 ST
              5dee 0058  ld   $58         ;0362 'p'
              5def 0021  ld   $21         ;0364 LDW
              5df0 0056  ld   $56         ;0364 'Video'
              5df1 00ad  ld   $ad         ;0366 PEEK
              5df2 0099  ld   $99         ;0367 ADDW
              5df3 0060  ld   $60         ;0367 'X'
              5df4 002b  ld   $2b         ;0369 STW
              5df5 0060  ld   $60         ;0369 'X'
              5df6 0021  ld   $21         ;036b LDW
              5df7 005e  ld   $5e         ;036b 's'
              5df8 00ad  ld   $ad         ;036d PEEK
              5df9 0099  ld   $99         ;036e ADDW
              5dfa 0060  ld   $60         ;036e 'X'
              5dfb fe00  bra  ac          ;+-----------------------------------+
              5dfc fcfd  bra  $5dfd       ;|                                   |
              5dfd 1418  ld   $18,y       ;| Trampoline for page $5d00 lookups |
              5dfe e006  jmp  y,$06       ;|                                   |
              5dff c218  st   [$18]       ;+-----------------------------------+
              5e00 00f0  ld   $f0         ;0370 POKE
              5e01 0058  ld   $58         ;0370 'p'
              5e02 005e  ld   $5e         ;0372 ST
              5e03 0058  ld   $58         ;0372 'p'
              5e04 005e  ld   $5e         ;0374 ST
              5e05 005a  ld   $5a         ;0374 'q'
              5e06 0093  ld   $93         ;0376 INC
              5e07 005e  ld   $5e         ;0376 's'
              5e08 0021  ld   $21         ;0378 LDW
              5e09 0058  ld   $58         ;0378 'p'
              5e0a 00ad  ld   $ad         ;037a PEEK
              5e0b 008c  ld   $8c         ;037b XORI
              5e0c 0015  ld   $15
              5e0d 0099  ld   $99         ;037d ADDW
              5e0e 0062  ld   $62         ;037d 'Collision'
              5e0f 002b  ld   $2b         ;037f STW
              5e10 0062  ld   $62         ;037f 'Collision'
              5e11 0021  ld   $21         ;0381 LDW
              5e12 005e  ld   $5e         ;0381 's'
              5e13 00ad  ld   $ad         ;0383 PEEK
              5e14 00f0  ld   $f0         ;0384 POKE
              5e15 0058  ld   $58         ;0384 'p'
              5e16 0093  ld   $93         ;0386 INC
              5e17 0058  ld   $58         ;0386 'p'
              5e18 00f0  ld   $f0         ;0388 POKE
              5e19 005a  ld   $5a         ;0388 'q'
              5e1a 0093  ld   $93         ;038a INC
              5e1b 005a  ld   $5a         ;038a 'q'
              5e1c 0093  ld   $93         ;038c INC
              5e1d 005e  ld   $5e         ;038c 's'
              5e1e 0021  ld   $21         ;038e LDW
              5e1f 005e  ld   $5e         ;038e 's'
              5e20 00ad  ld   $ad         ;0390 PEEK
              5e21 0035  ld   $35         ;0391 BCC
              5e22 0072  ld   $72         ;0392 NE
              5e23 0076  ld   $76
              5e24 0059  ld   $59         ;0394 LDI
              5e25 0000  ld   $00
              5e26 005e  ld   $5e         ;0396 ST
              5e27 005a  ld   $5a         ;0396 'q'
              5e28 001a  ld   $1a         ;0398 LD
              5e29 0058  ld   $58         ;0398 'p'
              5e2a 00f0  ld   $f0         ;039a POKE
              5e2b 005a  ld   $5a         ;039a 'q'
              5e2c 0021  ld   $21         ;039c LDW
              5e2d 0056  ld   $56         ;039c 'Video'
              5e2e 00e3  ld   $e3         ;039e ADDI
              5e2f 0003  ld   $03
              5e30 002b  ld   $2b         ;03a0 STW
              5e31 0056  ld   $56         ;03a0 'Video'
              5e32 00ff  ld   $ff         ;03a2 RET
              5e33 002b  ld   $2b         ;03a3 STW
              5e34 0064  ld   $64         ;03a3 'DrawPixels'
              5e35 00cd  ld   $cd         ;03a5 DEF
              5e36 00da  ld   $da
              5e37 0011  ld   $11         ;03a7 LDWI
              5e38 00fd  ld   $fd
              5e39 0001  ld   $01
              5e3a 002b  ld   $2b         ;03aa STW
              5e3b 0058  ld   $58         ;03aa 'p'
              5e3c 0021  ld   $21         ;03ac LDW
              5e3d 0040  ld   $40         ;03ac 'Speed'
              5e3e 0099  ld   $99         ;03ae ADDW
              5e3f 0040  ld   $40         ;03ae 'Speed'
              5e40 001a  ld   $1a         ;03b0 LD
              5e41 0019  ld   $19
              5e42 00f0  ld   $f0         ;03b2 POKE
              5e43 0058  ld   $58         ;03b2 'p'
              5e44 0093  ld   $93         ;03b4 INC
              5e45 0059  ld   $59         ;03b4 'p'+1
              5e46 00f0  ld   $f0         ;03b6 POKE
              5e47 0058  ld   $58         ;03b6 'p'
              5e48 0093  ld   $93         ;03b8 INC
              5e49 0059  ld   $59         ;03b8 'p'+1
              5e4a 00f0  ld   $f0         ;03ba POKE
              5e4b 0058  ld   $58         ;03ba 'p'
              5e4c 0093  ld   $93         ;03bc INC
              5e4d 0059  ld   $59         ;03bc 'p'+1
              5e4e 00f0  ld   $f0         ;03be POKE
              5e4f 0058  ld   $58         ;03be 'p'
              5e50 0011  ld   $11         ;03c0 LDWI
              5e51 00fc  ld   $fc
              5e52 0001  ld   $01
              5e53 002b  ld   $2b         ;03c3 STW
              5e54 0058  ld   $58         ;03c3 'p'
              5e55 0021  ld   $21         ;03c5 LDW
              5e56 0040  ld   $40         ;03c5 'Speed'
              5e57 0082  ld   $82         ;03c7 ANDI
              5e58 007f  ld   $7f
              5e59 00f0  ld   $f0         ;03c9 POKE
              5e5a 0058  ld   $58         ;03c9 'p'
              5e5b 0093  ld   $93         ;03cb INC
              5e5c 0059  ld   $59         ;03cb 'p'+1
              5e5d 00f0  ld   $f0         ;03cd POKE
              5e5e 0058  ld   $58         ;03cd 'p'
              5e5f 0093  ld   $93         ;03cf INC
              5e60 0059  ld   $59         ;03cf 'p'+1
              5e61 00f0  ld   $f0         ;03d1 POKE
              5e62 0058  ld   $58         ;03d1 'p'
              5e63 0093  ld   $93         ;03d3 INC
              5e64 0059  ld   $59         ;03d3 'p'+1
              5e65 00f0  ld   $f0         ;03d5 POKE
              5e66 0058  ld   $58         ;03d5 'p'
              5e67 0059  ld   $59         ;03d7 LDI
              5e68 000a  ld   $0a
              5e69 005e  ld   $5e         ;03d9 ST
              5e6a 002c  ld   $2c
              5e6b 00ff  ld   $ff         ;03db RET
              5e6c 002b  ld   $2b         ;03dc STW
              5e6d 0066  ld   $66         ;03dc 'PlayEngineSound'
              5e6e 0093  ld   $93         ;03de INC
              5e6f 001b  ld   $1b         ;03de '_vLR'+1
              5e70 00ff  ld   $ff         ;03e0 RET
              5e71 0004  ld   $04         ;| RAM segment address (high byte first)
              5e72 0000  ld   $00         ;|
              5e73 00ef  ld   $ef         ;| Length (1..256)
              5e74 00cd  ld   $cd         ;0400 DEF
              5e75 003e  ld   $3e
              5e76 0075  ld   $75         ;0402 PUSH
              5e77 0011  ld   $11         ;0403 LDWI
              5e78 0080  ld   $80
              5e79 0020  ld   $20
              5e7a 002b  ld   $2b         ;0406 STW
              5e7b 0038  ld   $38         ;0406 'Pos'
              5e7c 0011  ld   $11         ;0408 LDWI
              5e7d 0003  ld   $03
              5e7e 000b  ld   $0b
              5e7f 002b  ld   $2b         ;040b STW
              5e80 0022  ld   $22
              5e81 0059  ld   $59         ;040d LDI
              5e82 0000  ld   $00
              5e83 002b  ld   $2b         ;040f STW
              5e84 0068  ld   $68         ;040f 'Width'
              5e85 0021  ld   $21         ;0411 LDW
              5e86 0068  ld   $68         ;0411 'Width'
              5e87 00e3  ld   $e3         ;0413 ADDI
              5e88 0001  ld   $01
              5e89 002b  ld   $2b         ;0415 STW
              5e8a 0068  ld   $68         ;0415 'Width'
              5e8b 0059  ld   $59         ;0417 LDI
              5e8c 003f  ld   $3f
              5e8d 002b  ld   $2b         ;0419 STW
              5e8e 006a  ld   $6a         ;0419 'CurbColor'
              5e8f 0059  ld   $59         ;041b LDI
              5e90 000c  ld   $0c
              5e91 002b  ld   $2b         ;041d STW
              5e92 006c  ld   $6c         ;041d 'GrassColor'
              5e93 00cf  ld   $cf         ;041f CALL
              5e94 006e  ld   $6e         ;041f 'SetupSegment'
              5e95 0093  ld   $93         ;0421 INC
              5e96 0039  ld   $39         ;0421 'Pos'+1
              5e97 0059  ld   $59         ;0423 LDI
              5e98 0003  ld   $03
              5e99 002b  ld   $2b         ;0425 STW
              5e9a 006a  ld   $6a         ;0425 'CurbColor'
              5e9b 0059  ld   $59         ;0427 LDI
              5e9c 0008  ld   $08
              5e9d 002b  ld   $2b         ;0429 STW
              5e9e 006c  ld   $6c         ;0429 'GrassColor'
              5e9f 00cf  ld   $cf         ;042b CALL
              5ea0 006e  ld   $6e         ;042b 'SetupSegment'
              5ea1 0093  ld   $93         ;042d INC
              5ea2 0039  ld   $39         ;042d 'Pos'+1
              5ea3 0021  ld   $21         ;042f LDW
              5ea4 0038  ld   $38         ;042f 'Pos'
              5ea5 0035  ld   $35         ;0431 BCC
              5ea6 0053  ld   $53         ;0432 GE
              5ea7 000f  ld   $0f
              5ea8 0011  ld   $11         ;0434 LDWI
              5ea9 0000  ld   $00
              5eaa 0074  ld   $74
              5eab 00f0  ld   $f0         ;0437 1008
              5eac 0018  ld   $18         ;0438 24
              5ead 0093  ld   $93         ;0439 INC
              5eae 0019  ld   $19
              5eaf 0035  ld   $35         ;043b BCC
              5eb0 004d  ld   $4d         ;043c GT
              5eb1 0035  ld   $35
              5eb2 0063  ld   $63         ;043e POP
              5eb3 00ff  ld   $ff         ;043f RET
              5eb4 002b  ld   $2b         ;0440 STW
              5eb5 0070  ld   $70         ;0440 'SetupRoad'
              5eb6 00cd  ld   $cd         ;0442 DEF
              5eb7 0086  ld   $86
              5eb8 0021  ld   $21         ;0444 LDW
              5eb9 0068  ld   $68         ;0444 'Width'
              5eba 00e9  ld   $e9         ;0446 LSLW
              5ebb 005e  ld   $5e         ;0447 ST
              5ebc 0024  ld   $24
              5ebd 0021  ld   $21         ;0449 LDW
              5ebe 0038  ld   $38         ;0449 'Pos'
              5ebf 00b8  ld   $b8         ;044b SUBW
              5ec0 0068  ld   $68         ;044b 'Width'
              5ec1 002b  ld   $2b         ;044d STW
              5ec2 0058  ld   $58         ;044d 'p'
              5ec3 002b  ld   $2b         ;044f STW
              5ec4 0026  ld   $26
              5ec5 0059  ld   $59         ;0451 LDI
              5ec6 0015  ld   $15
              5ec7 005e  ld   $5e         ;0453 ST
              5ec8 0025  ld   $25
              5ec9 00b4  ld   $b4         ;0455 SYS
              5eca 00f4  ld   $f4
              5ecb 0059  ld   $59         ;0457 LDI
              5ecc 0080  ld   $80
              5ecd 00b8  ld   $b8         ;0459 SUBW
              5ece 0068  ld   $68         ;0459 'Width'
              5ecf 00e9  ld   $e9         ;045b LSLW
              5ed0 005e  ld   $5e         ;045c ST
              5ed1 0024  ld   $24
              5ed2 0021  ld   $21         ;045e LDW
              5ed3 0038  ld   $38         ;045e 'Pos'
              5ed4 0099  ld   $99         ;0460 ADDW
              5ed5 0068  ld   $68         ;0460 'Width'
              5ed6 002b  ld   $2b         ;0462 STW
              5ed7 005a  ld   $5a         ;0462 'q'
              5ed8 002b  ld   $2b         ;0464 STW
              5ed9 0026  ld   $26
              5eda 0021  ld   $21         ;0466 LDW
              5edb 006c  ld   $6c         ;0466 'GrassColor'
              5edc 005e  ld   $5e         ;0468 ST
              5edd 0025  ld   $25
              5ede 00b4  ld   $b4         ;046a SYS
              5edf 00f4  ld   $f4
              5ee0 0021  ld   $21         ;046c LDW
              5ee1 0068  ld   $68         ;046c 'Width'
              5ee2 00e6  ld   $e6         ;046e SUBI
              5ee3 0008  ld   $08
              5ee4 0035  ld   $35         ;0470 BCC
              5ee5 0056  ld   $56         ;0471 LE
              5ee6 0085  ld   $85
              5ee7 002b  ld   $2b         ;0473 STW
              5ee8 0052  ld   $52         ;0473 'tmp'
              5ee9 0021  ld   $21         ;0475 LDW
              5eea 005a  ld   $5a         ;0475 'q'
              5eeb 00e6  ld   $e6         ;0477 SUBI
              5eec 0001  ld   $01
              5eed 002b  ld   $2b         ;0479 STW
              5eee 005a  ld   $5a         ;0479 'q'
              5eef 0021  ld   $21         ;047b LDW
              5ef0 006a  ld   $6a         ;047b 'CurbColor'
              5ef1 00f0  ld   $f0         ;047d POKE
              5ef2 0058  ld   $58         ;047d 'p'
              5ef3 00f0  ld   $f0         ;047f POKE
              5ef4 005a  ld   $5a         ;047f 'q'
              5ef5 0093  ld   $93         ;0481 INC
              5ef6 0058  ld   $58         ;0481 'p'
              5ef7 0021  ld   $21         ;0483 LDW
              5ef8 0052  ld   $52         ;0483 'tmp'
              5ef9 0090  ld   $90         ;0485 BRA
              5efa 006c  ld   $6c
              5efb fe00  bra  ac          ;+-----------------------------------+
              5efc fcfd  bra  $5efd       ;|                                   |
              5efd 1418  ld   $18,y       ;| Trampoline for page $5e00 lookups |
              5efe e006  jmp  y,$06       ;|                                   |
              5eff c218  st   [$18]       ;+-----------------------------------+
              5f00 00ff  ld   $ff         ;0487 RET
              5f01 002b  ld   $2b         ;0488 STW
              5f02 006e  ld   $6e         ;0488 'SetupSegment'
              5f03 00cd  ld   $cd         ;048a DEF
              5f04 00e8  ld   $e8
              5f05 0075  ld   $75         ;048c PUSH
              5f06 0011  ld   $11         ;048d LDWI
              5f07 000f  ld   $0f
              5f08 000e  ld   $0e
              5f09 002b  ld   $2b         ;0490 STW
              5f0a 0072  ld   $72         ;0490 'Radix'
              5f0b 00cf  ld   $cf         ;0492 CALL
              5f0c 0074  ld   $74         ;0492 'ExtractDigit'
              5f0d 0021  ld   $21         ;0494 LDW
              5f0e 0076  ld   $76         ;0494 'Prev3'
              5f0f 00fc  ld   $fc         ;0496 XORW
              5f10 0078  ld   $78         ;0496 'Char'
              5f11 0035  ld   $35         ;0498 BCC
              5f12 003f  ld   $3f         ;0499 EQ
              5f13 00a1  ld   $a1
              5f14 0021  ld   $21         ;049b LDW
              5f15 0078  ld   $78         ;049b 'Char'
              5f16 002b  ld   $2b         ;049d STW
              5f17 0076  ld   $76         ;049d 'Prev3'
              5f18 00cf  ld   $cf         ;049f CALL
              5f19 003a  ld   $3a         ;049f 'QPrintChar'
              5f1a 0090  ld   $90         ;04a1 BRA
              5f1b 00a3  ld   $a3
              5f1c 0021  ld   $21         ;04a3 LDW
              5f1d 0038  ld   $38         ;04a3 'Pos'
              5f1e 00e3  ld   $e3         ;04a5 ADDI
              5f1f 000c  ld   $0c
              5f20 002b  ld   $2b         ;04a7 STW
              5f21 0038  ld   $38         ;04a7 'Pos'
              5f22 0011  ld   $11         ;04a9 LDWI
              5f23 0058  ld   $58
              5f24 0002  ld   $02
              5f25 002b  ld   $2b         ;04ac STW
              5f26 0072  ld   $72         ;04ac 'Radix'
              5f27 00cf  ld   $cf         ;04ae CALL
              5f28 0074  ld   $74         ;04ae 'ExtractDigit'
              5f29 0021  ld   $21         ;04b0 LDW
              5f2a 007a  ld   $7a         ;04b0 'Prev2'
              5f2b 00fc  ld   $fc         ;04b2 XORW
              5f2c 0078  ld   $78         ;04b2 'Char'
              5f2d 0035  ld   $35         ;04b4 BCC
              5f2e 003f  ld   $3f         ;04b5 EQ
              5f2f 00bd  ld   $bd
              5f30 0021  ld   $21         ;04b7 LDW
              5f31 0078  ld   $78         ;04b7 'Char'
              5f32 002b  ld   $2b         ;04b9 STW
              5f33 007a  ld   $7a         ;04b9 'Prev2'
              5f34 00cf  ld   $cf         ;04bb CALL
              5f35 003a  ld   $3a         ;04bb 'QPrintChar'
              5f36 0090  ld   $90         ;04bd BRA
              5f37 00bf  ld   $bf
              5f38 0021  ld   $21         ;04bf LDW
              5f39 0038  ld   $38         ;04bf 'Pos'
              5f3a 00e3  ld   $e3         ;04c1 ADDI
              5f3b 0006  ld   $06
              5f3c 002b  ld   $2b         ;04c3 STW
              5f3d 0038  ld   $38         ;04c3 'Pos'
              5f3e 0059  ld   $59         ;04c5 LDI
              5f3f 003c  ld   $3c
              5f40 002b  ld   $2b         ;04c7 STW
              5f41 0072  ld   $72         ;04c7 'Radix'
              5f42 00cf  ld   $cf         ;04c9 CALL
              5f43 0074  ld   $74         ;04c9 'ExtractDigit'
              5f44 0021  ld   $21         ;04cb LDW
              5f45 007c  ld   $7c         ;04cb 'Prev1'
              5f46 00fc  ld   $fc         ;04cd XORW
              5f47 0078  ld   $78         ;04cd 'Char'
              5f48 0035  ld   $35         ;04cf BCC
              5f49 003f  ld   $3f         ;04d0 EQ
              5f4a 00d8  ld   $d8
              5f4b 0021  ld   $21         ;04d2 LDW
              5f4c 0078  ld   $78         ;04d2 'Char'
              5f4d 002b  ld   $2b         ;04d4 STW
              5f4e 007c  ld   $7c         ;04d4 'Prev1'
              5f4f 00cf  ld   $cf         ;04d6 CALL
              5f50 003a  ld   $3a         ;04d6 'QPrintChar'
              5f51 0090  ld   $90         ;04d8 BRA
              5f52 00da  ld   $da
              5f53 0021  ld   $21         ;04da LDW
              5f54 0038  ld   $38         ;04da 'Pos'
              5f55 00e3  ld   $e3         ;04dc ADDI
              5f56 000c  ld   $0c
              5f57 002b  ld   $2b         ;04de STW
              5f58 0038  ld   $38         ;04de 'Pos'
              5f59 0059  ld   $59         ;04e0 LDI
              5f5a 0006  ld   $06
              5f5b 002b  ld   $2b         ;04e2 STW
              5f5c 0072  ld   $72         ;04e2 'Radix'
              5f5d 00cf  ld   $cf         ;04e4 CALL
              5f5e 0074  ld   $74         ;04e4 'ExtractDigit'
              5f5f 00cf  ld   $cf         ;04e6 CALL
              5f60 003a  ld   $3a         ;04e6 'QPrintChar'
              5f61 0063  ld   $63         ;04e8 POP
              5f62 00ff  ld   $ff         ;04e9 RET
              5f63 002b  ld   $2b         ;04ea STW
              5f64 007e  ld   $7e         ;04ea 'PrintTime'
              5f65 0093  ld   $93         ;04ec INC
              5f66 001b  ld   $1b         ;04ec '_vLR'+1
              5f67 00ff  ld   $ff         ;04ee RET
              5f68 0005  ld   $05         ;| RAM segment address (high byte first)
              5f69 0000  ld   $00         ;|
              5f6a 00e6  ld   $e6         ;| Length (1..256)
              5f6b 00cd  ld   $cd         ;0500 DEF
              5f6c 0017  ld   $17
              5f6d 0059  ld   $59         ;0502 LDI
              5f6e 0030  ld   $30
              5f6f 002b  ld   $2b         ;0504 STW
              5f70 0078  ld   $78         ;0504 'Char'
              5f71 0021  ld   $21         ;0506 LDW
              5f72 0081  ld   $81         ;0506 'Value'
              5f73 00b8  ld   $b8         ;0508 SUBW
              5f74 0072  ld   $72         ;0508 'Radix'
              5f75 0035  ld   $35         ;050a BCC
              5f76 0050  ld   $50         ;050b LT
              5f77 0014  ld   $14
              5f78 002b  ld   $2b         ;050d STW
              5f79 0081  ld   $81         ;050d 'Value'
              5f7a 0093  ld   $93         ;050f INC
              5f7b 0078  ld   $78         ;050f 'Char'
              5f7c 00b8  ld   $b8         ;0511 SUBW
              5f7d 0072  ld   $72         ;0511 'Radix'
              5f7e 0035  ld   $35         ;0513 BCC
              5f7f 0053  ld   $53         ;0514 GE
              5f80 000b  ld   $0b
              5f81 0021  ld   $21         ;0516 LDW
              5f82 0078  ld   $78         ;0516 'Char'
              5f83 00ff  ld   $ff         ;0518 RET
              5f84 002b  ld   $2b         ;0519 STW
              5f85 0074  ld   $74         ;0519 'ExtractDigit'
              5f86 00cd  ld   $cd         ;051b DEF
              5f87 0032  ld   $32
              5f88 0075  ld   $75         ;051d PUSH
              5f89 002b  ld   $2b         ;051e STW
              5f8a 0083  ld   $83         ;051e 'Text'
              5f8b 0021  ld   $21         ;0520 LDW
              5f8c 0083  ld   $83         ;0520 'Text'
              5f8d 00ad  ld   $ad         ;0522 PEEK
              5f8e 002b  ld   $2b         ;0523 STW
              5f8f 0078  ld   $78         ;0523 'Char'
              5f90 0035  ld   $35         ;0525 BCC
              5f91 003f  ld   $3f         ;0526 EQ
              5f92 0030  ld   $30
              5f93 0093  ld   $93         ;0528 INC
              5f94 0083  ld   $83         ;0528 'Text'
              5f95 00cf  ld   $cf         ;052a CALL
              5f96 003a  ld   $3a         ;052a 'QPrintChar'
              5f97 00e3  ld   $e3         ;052c ADDI
              5f98 0006  ld   $06
              5f99 002b  ld   $2b         ;052e STW
              5f9a 0038  ld   $38         ;052e 'Pos'
              5f9b 0090  ld   $90         ;0530 BRA
              5f9c 001e  ld   $1e
              5f9d 0063  ld   $63         ;0532 POP
              5f9e 00ff  ld   $ff         ;0533 RET
              5f9f 002b  ld   $2b         ;0534 STW
              5fa0 0085  ld   $85         ;0534 'PrintText'
              5fa1 00cd  ld   $cd         ;0536 DEF
              5fa2 00df  ld   $df
              5fa3 0011  ld   $11         ;0538 LDWI
              5fa4 00d0  ld   $d0
              5fa5 0074  ld   $74
              5fa6 002b  ld   $2b         ;053b STW
              5fa7 0058  ld   $58         ;053b 'p'
              5fa8 0059  ld   $59         ;053d LDI
              5fa9 0000  ld   $00
              5faa 002b  ld   $2b         ;053f STW
              5fab 0060  ld   $60         ;053f 'X'
              5fac 0021  ld   $21         ;0541 LDW
              5fad 0087  ld   $87         ;0541 'DX0'
              5fae 002b  ld   $2b         ;0543 STW
              5faf 0089  ld   $89         ;0543 'DX'
              5fb0 0021  ld   $21         ;0545 LDW
              5fb1 008b  ld   $8b         ;0545 'NextTurn'
              5fb2 00b8  ld   $b8         ;0547 SUBW
              5fb3 008d  ld   $8d         ;0547 'Distance'
              5fb4 002b  ld   $2b         ;0549 STW
              5fb5 0052  ld   $52         ;0549 'tmp'
              5fb6 0099  ld   $99         ;054b ADDW
              5fb7 0052  ld   $52         ;054b 'tmp'
              5fb8 002b  ld   $2b         ;054d STW
              5fb9 0052  ld   $52         ;054d 'tmp'
              5fba 0011  ld   $11         ;054f LDWI
              5fbb 0000  ld   $00
              5fbc 000a  ld   $0a
              5fbd 0099  ld   $99         ;0552 ADDW
              5fbe 0052  ld   $52         ;0552 'tmp'
              5fbf 007f  ld   $7f         ;0554 LUP
              5fc0 0035  ld   $35
              5fc1 002b  ld   $2b         ;0556 STW
              5fc2 0052  ld   $52         ;0556 'tmp'
              5fc3 0059  ld   $59         ;0558 LDI
              5fc4 00c5  ld   $c5
              5fc5 0099  ld   $99         ;055a ADDW
              5fc6 0052  ld   $52         ;055a 'tmp'
              5fc7 002b  ld   $2b         ;055c STW
              5fc8 0030  ld   $30         ;055c 'i'
              5fc9 001a  ld   $1a         ;055e LD
              5fca 0061  ld   $61         ;055e 'X'+1
              5fcb 00f0  ld   $f0         ;0560 POKE
              5fcc 0058  ld   $58         ;0560 'p'
              5fcd 0093  ld   $93         ;0562 INC
              5fce 0058  ld   $58         ;0562 'p'
              5fcf 0021  ld   $21         ;0564 LDW
              5fd0 0089  ld   $89         ;0564 'DX'
              5fd1 0099  ld   $99         ;0566 ADDW
              5fd2 008f  ld   $8f         ;0566 'DDX'
              5fd3 002b  ld   $2b         ;0568 STW
              5fd4 0089  ld   $89         ;0568 'DX'
              5fd5 0099  ld   $99         ;056a ADDW
              5fd6 0060  ld   $60         ;056a 'X'
              5fd7 002b  ld   $2b         ;056c STW
              5fd8 0060  ld   $60         ;056c 'X'
              5fd9 0093  ld   $93         ;056e INC
              5fda 0030  ld   $30         ;056e 'i'
              5fdb 0021  ld   $21         ;0570 LDW
              5fdc 0030  ld   $30         ;0570 'i'
              5fdd 0035  ld   $35         ;0572 BCC
              5fde 0072  ld   $72         ;0573 NE
              5fdf 005c  ld   $5c
              5fe0 001a  ld   $1a         ;0575 LD
              5fe1 0061  ld   $61         ;0575 'X'+1
              5fe2 00f0  ld   $f0         ;0577 POKE
              5fe3 0058  ld   $58         ;0577 'p'
              5fe4 0093  ld   $93         ;0579 INC
              5fe5 0058  ld   $58         ;0579 'p'
              5fe6 0021  ld   $21         ;057b LDW
              5fe7 0089  ld   $89         ;057b 'DX'
              5fe8 0099  ld   $99         ;057d ADDW
              5fe9 0091  ld   $91         ;057d 'NextDDX'
              5fea 002b  ld   $2b         ;057f STW
              5feb 0089  ld   $89         ;057f 'DX'
              5fec 0099  ld   $99         ;0581 ADDW
              5fed 0060  ld   $60         ;0581 'X'
              5fee 002b  ld   $2b         ;0583 STW
              5fef 0060  ld   $60         ;0583 'X'
              5ff0 001a  ld   $1a         ;0585 LD
              5ff1 0058  ld   $58         ;0585 'p'
              5ff2 0035  ld   $35         ;0587 BCC
              5ff3 0072  ld   $72         ;0588 NE
              5ff4 0073  ld   $73
              5ff5 0011  ld   $11         ;058a LDWI
              5ff6 00ed  ld   $ed
              5ff7 0001  ld   $01
              5ff8 002b  ld   $2b         ;058d STW
              5ff9 0024  ld   $24
              5ffa 0011  ld   $11         ;058f LDWI
              5ffb fe00  bra  ac          ;+-----------------------------------+
              5ffc fcfd  bra  $5ffd       ;|                                   |
              5ffd 1418  ld   $18,y       ;| Trampoline for page $5f00 lookups |
              5ffe e006  jmp  y,$06       ;|                                   |
              5fff c218  st   [$18]       ;+-----------------------------------+
              6000 00d1  ld   $d1
              6001 0074  ld   $74
              6002 002b  ld   $2b         ;0592 STW
              6003 0026  ld   $26
              6004 00e6  ld   $e6         ;0594 SUBI
              6005 0001  ld   $01
              6006 00ad  ld   $ad         ;0596 PEEK
              6007 002b  ld   $2b         ;0597 STW
              6008 0028  ld   $28
              6009 001a  ld   $1a         ;0599 LD
              600a 0047  ld   $47         ;0599 'HorizonX'+1
              600b 002b  ld   $2b         ;059b STW
              600c 0052  ld   $52         ;059b 'tmp'
              600d 0011  ld   $11         ;059d LDWI
              600e 00d5  ld   $d5
              600f 0074  ld   $74
              6010 00ad  ld   $ad         ;05a0 PEEK
              6011 00e3  ld   $e3         ;05a1 ADDI
              6012 0030  ld   $30
              6013 00b8  ld   $b8         ;05a3 SUBW
              6014 0052  ld   $52         ;05a3 'tmp'
              6015 002b  ld   $2b         ;05a5 STW
              6016 0052  ld   $52         ;05a5 'tmp'
              6017 0011  ld   $11         ;05a7 LDWI
              6018 00d4  ld   $d4
              6019 0074  ld   $74
              601a 00ad  ld   $ad         ;05aa PEEK
              601b 002b  ld   $2b         ;05ab STW
              601c 0087  ld   $87         ;05ab 'DX0'
              601d 0011  ld   $11         ;05ad LDWI
              601e 00ec  ld   $ec
              601f 0074  ld   $74
              6020 00ad  ld   $ad         ;05b0 PEEK
              6021 00b8  ld   $b8         ;05b1 SUBW
              6022 0087  ld   $87         ;05b1 'DX0'
              6023 0082  ld   $82         ;05b3 ANDI
              6024 00ff  ld   $ff
              6025 008c  ld   $8c         ;05b5 XORI
              6026 0080  ld   $80
              6027 00e6  ld   $e6         ;05b7 SUBI
              6028 0080  ld   $80
              6029 002b  ld   $2b         ;05b9 STW
              602a 0087  ld   $87         ;05b9 'DX0'
              602b 0011  ld   $11         ;05bb LDWI
              602c 0011  ld   $11
              602d 0001  ld   $01
              602e 002b  ld   $2b         ;05be STW
              602f 005e  ld   $5e         ;05be 's'
              6030 001a  ld   $1a         ;05c0 LD
              6031 0009  ld   $09
              6032 0082  ld   $82         ;05c2 ANDI
              6033 0001  ld   $01
              6034 0035  ld   $35         ;05c4 BCC
              6035 003f  ld   $3f         ;05c5 EQ
              6036 00be  ld   $be
              6037 001a  ld   $1a         ;05c7 LD
              6038 0047  ld   $47         ;05c7 'HorizonX'+1
              6039 00f0  ld   $f0         ;05c9 POKE
              603a 005e  ld   $5e         ;05c9 's'
              603b 0011  ld   $11         ;05cb LDWI
              603c 0000  ld   $00
              603d 0050  ld   $50
              603e 002b  ld   $2b         ;05ce STW
              603f 0022  ld   $22
              6040 00b4  ld   $b4         ;05d0 SYS
              6041 00fb  ld   $fb
              6042 0021  ld   $21         ;05d2 LDW
              6043 0024  ld   $24
              6044 002b  ld   $2b         ;05d4 STW
              6045 005e  ld   $5e         ;05d4 's'
              6046 0021  ld   $21         ;05d6 LDW
              6047 0028  ld   $28
              6048 002b  ld   $2b         ;05d8 STW
              6049 0060  ld   $60         ;05d8 'X'
              604a 0021  ld   $21         ;05da LDW
              604b 0052  ld   $52         ;05da 'tmp'
              604c 00b8  ld   $b8         ;05dc SUBW
              604d 0060  ld   $60         ;05dc 'X'
              604e 00f0  ld   $f0         ;05de POKE
              604f 005e  ld   $5e         ;05de 's'
              6050 00ff  ld   $ff         ;05e0 RET
              6051 002b  ld   $2b         ;05e1 STW
              6052 0093  ld   $93         ;05e1 'DrawRoad'
              6053 0093  ld   $93         ;05e3 INC
              6054 001b  ld   $1b         ;05e3 '_vLR'+1
              6055 00ff  ld   $ff         ;05e5 RET
              6056 0006  ld   $06         ;| RAM segment address (high byte first)
              6057 0000  ld   $00         ;|
              6058 00df  ld   $df         ;| Length (1..256)
              6059 00cd  ld   $cd         ;0600 DEF
              605a 00a7  ld   $a7
              605b 0075  ld   $75         ;0602 PUSH
              605c 0059  ld   $59         ;0603 LDI
              605d 0000  ld   $00
              605e 002b  ld   $2b         ;0605 STW
              605f 0062  ld   $62         ;0605 'Collision'
              6060 002b  ld   $2b         ;0607 STW
              6061 0076  ld   $76         ;0607 'Prev3'
              6062 002b  ld   $2b         ;0609 STW
              6063 007a  ld   $7a         ;0609 'Prev2'
              6064 002b  ld   $2b         ;060b STW
              6065 007c  ld   $7c         ;060b 'Prev1'
              6066 00cf  ld   $cf         ;060d CALL
              6067 0095  ld   $95         ;060d 'AdvanceCar'
              6068 0021  ld   $21         ;060f LDW
              6069 008d  ld   $8d         ;060f 'Distance'
              606a 0035  ld   $35         ;0611 BCC
              606b 0053  ld   $53         ;0612 GE
              606c 002e  ld   $2e
              606d 0021  ld   $21         ;0614 LDW
              606e 003e  ld   $3e         ;0614 'Time'
              606f 00b8  ld   $b8         ;0616 SUBW
              6070 0097  ld   $97         ;0616 'BestTime'
              6071 0035  ld   $35         ;0618 BCC
              6072 0053  ld   $53         ;0619 GE
              6073 001d  ld   $1d
              6074 0021  ld   $21         ;061b LDW
              6075 003e  ld   $3e         ;061b 'Time'
              6076 002b  ld   $2b         ;061d STW
              6077 0097  ld   $97         ;061d 'BestTime'
              6078 0059  ld   $59         ;061f LDI
              6079 000f  ld   $0f
              607a 00cf  ld   $cf         ;0621 CALL
              607b 0099  ld   $99         ;0621 'PrintBestTime'
              607c 0059  ld   $59         ;0623 LDI
              607d 0000  ld   $00
              607e 002b  ld   $2b         ;0625 STW
              607f 003e  ld   $3e         ;0625 'Time'
              6080 002b  ld   $2b         ;0627 STW
              6081 009b  ld   $9b         ;0627 'Random'
              6082 0011  ld   $11         ;0629 LDWI
              6083 0000  ld   $00
              6084 0074  ld   $74
              6085 002b  ld   $2b         ;062c STW
              6086 008d  ld   $8d         ;062c 'Distance'
              6087 002b  ld   $2b         ;062e STW
              6088 008b  ld   $8b         ;062e 'NextTurn'
              6089 00b8  ld   $b8         ;0630 SUBW
              608a 008b  ld   $8b         ;0630 'NextTurn'
              608b 0035  ld   $35         ;0632 BCC
              608c 0056  ld   $56         ;0633 LE
              608d 0073  ld   $73
              608e 0021  ld   $21         ;0635 LDW
              608f 009b  ld   $9b         ;0635 'Random'
              6090 0099  ld   $99         ;0637 ADDW
              6091 008b  ld   $8b         ;0637 'NextTurn'
              6092 008c  ld   $8c         ;0639 XORI
              6093 006d  ld   $6d
              6094 002b  ld   $2b         ;063b STW
              6095 009b  ld   $9b         ;063b 'Random'
              6096 0082  ld   $82         ;063d ANDI
              6097 001f  ld   $1f
              6098 00e3  ld   $e3         ;063f ADDI
              6099 0028  ld   $28
              609a 0099  ld   $99         ;0641 ADDW
              609b 008b  ld   $8b         ;0641 'NextTurn'
              609c 002b  ld   $2b         ;0643 STW
              609d 008b  ld   $8b         ;0643 'NextTurn'
              609e 001a  ld   $1a         ;0645 LD
              609f 009c  ld   $9c         ;0645 'Random'+1
              60a0 0082  ld   $82         ;0647 ANDI
              60a1 0003  ld   $03
              60a2 00e3  ld   $e3         ;0649 ADDI
              60a3 0001  ld   $01
              60a4 002b  ld   $2b         ;064b STW
              60a5 0030  ld   $30         ;064b 'i'
              60a6 0099  ld   $99         ;064d ADDW
              60a7 0030  ld   $30         ;064d 'i'
              60a8 0099  ld   $99         ;064f ADDW
              60a9 0030  ld   $30         ;064f 'i'
              60aa 00e9  ld   $e9         ;0651 LSLW
              60ab 002b  ld   $2b         ;0652 STW
              60ac 0030  ld   $30         ;0652 'i'
              60ad 0021  ld   $21         ;0654 LDW
              60ae 0091  ld   $91         ;0654 'NextDDX'
              60af 002b  ld   $2b         ;0656 STW
              60b0 008f  ld   $8f         ;0656 'DDX'
              60b1 0035  ld   $35         ;0658 BCC
              60b2 0053  ld   $53         ;0659 GE
              60b3 005d  ld   $5d
              60b4 0099  ld   $99         ;065b ADDW
              60b5 0030  ld   $30         ;065b 'i'
              60b6 0090  ld   $90         ;065d BRA
              60b7 0071  ld   $71
              60b8 0035  ld   $35         ;065f BCC
              60b9 0056  ld   $56         ;0660 LE
              60ba 0064  ld   $64
              60bb 00b8  ld   $b8         ;0662 SUBW
              60bc 0030  ld   $30         ;0662 'i'
              60bd 0090  ld   $90         ;0664 BRA
              60be 0071  ld   $71
              60bf 0021  ld   $21         ;0666 LDW
              60c0 009b  ld   $9b         ;0666 'Random'
              60c1 0035  ld   $35         ;0668 BCC
              60c2 0050  ld   $50         ;0669 LT
              60c3 006d  ld   $6d
              60c4 0021  ld   $21         ;066b LDW
              60c5 0030  ld   $30         ;066b 'i'
              60c6 0090  ld   $90         ;066d BRA
              60c7 0071  ld   $71
              60c8 0059  ld   $59         ;066f LDI
              60c9 0000  ld   $00
              60ca 00b8  ld   $b8         ;0671 SUBW
              60cb 0030  ld   $30         ;0671 'i'
              60cc 002b  ld   $2b         ;0673 STW
              60cd 0091  ld   $91         ;0673 'NextDDX'
              60ce 00cf  ld   $cf         ;0675 CALL
              60cf 0093  ld   $93         ;0675 'DrawRoad'
              60d0 0021  ld   $21         ;0677 LDW
              60d1 008f  ld   $8f         ;0677 'DDX'
              60d2 00e9  ld   $e9         ;0679 LSLW
              60d3 00e9  ld   $e9         ;067a LSLW
              60d4 00e9  ld   $e9         ;067b LSLW
              60d5 002b  ld   $2b         ;067c STW
              60d6 0048  ld   $48         ;067c 'HorizonDX'
              60d7 00e9  ld   $e9         ;067e LSLW
              60d8 002b  ld   $2b         ;067f STW
              60d9 0044  ld   $44         ;067f 'DriftX'
              60da 00cf  ld   $cf         ;0681 CALL
              60db 004c  ld   $4c         ;0681 'ControlRaceCar'
              60dc 00cf  ld   $cf         ;0683 CALL
              60dd 0066  ld   $66         ;0683 'PlayEngineSound'
              60de 00cf  ld   $cf         ;0685 CALL
              60df 009d  ld   $9d         ;0685 'DrawRaceCar'
              60e0 00cf  ld   $cf         ;0687 CALL
              60e1 009f  ld   $9f         ;0687 'DrawGrass'
              60e2 0011  ld   $11         ;0689 LDWI
              60e3 00b5  ld   $b5
              60e4 00b9  ld   $b9
              60e5 0099  ld   $99         ;068c ADDW
              60e6 003e  ld   $3e         ;068c 'Time'
              60e7 0035  ld   $35         ;068e BCC
              60e8 0056  ld   $56         ;068f LE
              60e9 0091  ld   $91
              60ea 002b  ld   $2b         ;0691 STW
              60eb 0062  ld   $62         ;0691 'Collision'
              60ec 0021  ld   $21         ;0693 LDW
              60ed 003e  ld   $3e         ;0693 'Time'
              60ee 002b  ld   $2b         ;0695 STW
              60ef 0081  ld   $81         ;0695 'Value'
              60f0 0011  ld   $11         ;0697 LDWI
              60f1 0001  ld   $01
              60f2 0008  ld   $08
              60f3 002b  ld   $2b         ;069a STW
              60f4 0038  ld   $38         ;069a 'Pos'
              60f5 0059  ld   $59         ;069c LDI
              60f6 003f  ld   $3f
              60f7 002b  ld   $2b         ;069e STW
              60f8 0036  ld   $36         ;069e 'Color'
              60f9 00cf  ld   $cf         ;06a0 CALL
              60fa 007e  ld   $7e         ;06a0 'PrintTime'
              60fb fe00  bra  ac          ;+-----------------------------------+
              60fc fcfd  bra  $60fd       ;|                                   |
              60fd 1418  ld   $18,y       ;| Trampoline for page $6000 lookups |
              60fe e006  jmp  y,$06       ;|                                   |
              60ff c218  st   [$18]       ;+-----------------------------------+
              6100 0021  ld   $21         ;06a2 LDW
              6101 0062  ld   $62         ;06a2 'Collision'
              6102 0035  ld   $35         ;06a4 BCC
              6103 003f  ld   $3f         ;06a5 EQ
              6104 000b  ld   $0b
              6105 0063  ld   $63         ;06a7 POP
              6106 00ff  ld   $ff         ;06a8 RET
              6107 002b  ld   $2b         ;06a9 STW
              6108 00a1  ld   $a1         ;06a9 'PlayGame'
              6109 00cd  ld   $cd         ;06ab DEF
              610a 00b7  ld   $b7
              610b 0002  ld   $02         ;06ad 2
              610c 0040  ld   $40         ;06ae 64
              610d 0040  ld   $40         ;06af 64
              610e 0040  ld   $40         ;06b0 64
              610f 0028  ld   $28         ;06b1 40
              6110 003c  ld   $3c         ;06b2 60
              6111 003c  ld   $3c         ;06b3 60
              6112 0028  ld   $28         ;06b4 40
              6113 0040  ld   $40         ;06b5 64
              6114 0040  ld   $40         ;06b6 64
              6115 0040  ld   $40         ;06b7 64
              6116 0000  ld   $00         ;06b8 0
              6117 002b  ld   $2b         ;06b9 STW
              6118 00a3  ld   $a3         ;06b9 'Car0'
              6119 00cd  ld   $cd         ;06bb DEF
              611a 00c5  ld   $c5
              611b 0003  ld   $03         ;06bd 3
              611c 0028  ld   $28         ;06be 40
              611d 0014  ld   $14         ;06bf 20
              611e 0014  ld   $14         ;06c0 20
              611f 003f  ld   $3f         ;06c1 63
              6120 003f  ld   $3f         ;06c2 63
              6121 0014  ld   $14         ;06c3 20
              6122 0014  ld   $14         ;06c4 20
              6123 0028  ld   $28         ;06c5 40
              6124 0000  ld   $00         ;06c6 0
              6125 002b  ld   $2b         ;06c7 STW
              6126 00a5  ld   $a5         ;06c7 'Car1'
              6127 00cd  ld   $cd         ;06c9 DEF
              6128 00d5  ld   $d5
              6129 0002  ld   $02         ;06cb 2
              612a 0028  ld   $28         ;06cc 40
              612b 0014  ld   $14         ;06cd 20
              612c 0014  ld   $14         ;06ce 20
              612d 0014  ld   $14         ;06cf 20
              612e 0028  ld   $28         ;06d0 40
              612f 0028  ld   $28         ;06d1 40
              6130 0014  ld   $14         ;06d2 20
              6131 0014  ld   $14         ;06d3 20
              6132 0014  ld   $14         ;06d4 20
              6133 0028  ld   $28         ;06d5 40
              6134 0000  ld   $00         ;06d6 0
              6135 002b  ld   $2b         ;06d7 STW
              6136 00a7  ld   $a7         ;06d7 'Car2'
              6137 0011  ld   $11         ;06d9 LDWI
              6138 00a0  ld   $a0
              6139 0008  ld   $08
              613a 002b  ld   $2b         ;06dc STW
              613b 001a  ld   $1a
              613c 00ff  ld   $ff         ;06de RET
              613d 0008  ld   $08         ;| RAM segment address (high byte first)
              613e 00a0  ld   $a0         ;|
              613f 0052  ld   $52         ;| Length (1..256)
              6140 00cd  ld   $cd         ;08a0 DEF
              6141 00b0  ld   $b0
              6142 0000  ld   $00         ;08a2 0
              6143 0040  ld   $40         ;08a3 64
              6144 0040  ld   $40         ;08a4 64
              6145 0040  ld   $40         ;08a5 64
              6146 0040  ld   $40         ;08a6 64
              6147 0028  ld   $28         ;08a7 40
              6148 0014  ld   $14         ;08a8 20
              6149 0014  ld   $14         ;08a9 20
              614a 0014  ld   $14         ;08aa 20
              614b 0014  ld   $14         ;08ab 20
              614c 0028  ld   $28         ;08ac 40
              614d 0040  ld   $40         ;08ad 64
              614e 0040  ld   $40         ;08ae 64
              614f 0040  ld   $40         ;08af 64
              6150 0040  ld   $40         ;08b0 64
              6151 0000  ld   $00         ;08b1 0
              6152 002b  ld   $2b         ;08b2 STW
              6153 00a9  ld   $a9         ;08b2 'Car3'
              6154 00cd  ld   $cd         ;08b4 DEF
              6155 00c4  ld   $c4
              6156 0000  ld   $00         ;08b6 0
              6157 0040  ld   $40         ;08b7 64
              6158 0040  ld   $40         ;08b8 64
              6159 0040  ld   $40         ;08b9 64
              615a 0040  ld   $40         ;08ba 64
              615b 0015  ld   $15         ;08bb 21
              615c 0015  ld   $15         ;08bc 21
              615d 0015  ld   $15         ;08bd 21
              615e 0015  ld   $15         ;08be 21
              615f 0015  ld   $15         ;08bf 21
              6160 0015  ld   $15         ;08c0 21
              6161 0040  ld   $40         ;08c1 64
              6162 0040  ld   $40         ;08c2 64
              6163 0040  ld   $40         ;08c3 64
              6164 0040  ld   $40         ;08c4 64
              6165 0000  ld   $00         ;08c5 0
              6166 002b  ld   $2b         ;08c6 STW
              6167 00ab  ld   $ab         ;08c6 'Car4'
              6168 00cd  ld   $cd         ;08c8 DEF
              6169 00eb  ld   $eb
              616a 0011  ld   $11         ;08ca LDWI
              616b 002e  ld   $2e
              616c 0001  ld   $01
              616d 002b  ld   $2b         ;08cd STW
              616e 0024  ld   $24
              616f 0059  ld   $59         ;08cf LDI
              6170 0020  ld   $20
              6171 005e  ld   $5e         ;08d1 ST
              6172 0026  ld   $26
              6173 0011  ld   $11         ;08d3 LDWI
              6174 0000  ld   $00
              6175 000a  ld   $0a
              6176 002b  ld   $2b         ;08d6 STW
              6177 005a  ld   $5a         ;08d6 'q'
              6178 0011  ld   $11         ;08d8 LDWI
              6179 0019  ld   $19
              617a 0050  ld   $50
              617b 002b  ld   $2b         ;08db STW
              617c 0022  ld   $22
              617d 0021  ld   $21         ;08dd LDW
              617e 005a  ld   $5a         ;08dd 'q'
              617f 007f  ld   $7f         ;08df LUP
              6180 0008  ld   $08
              6181 0099  ld   $99         ;08e1 ADDW
              6182 008d  ld   $8d         ;08e1 'Distance'
              6183 005e  ld   $5e         ;08e3 ST
              6184 0027  ld   $27
              6185 00b4  ld   $b4         ;08e5 SYS
              6186 00fb  ld   $fb
              6187 0093  ld   $93         ;08e7 INC
              6188 005a  ld   $5a         ;08e7 'q'
              6189 0035  ld   $35         ;08e9 BCC
              618a 0072  ld   $72         ;08ea NE
              618b 00db  ld   $db
              618c 00ff  ld   $ff         ;08ec RET
              618d 002b  ld   $2b         ;08ed STW
              618e 009f  ld   $9f         ;08ed 'DrawGrass'
              618f 0093  ld   $93         ;08ef INC
              6190 001b  ld   $1b         ;08ef '_vLR'+1
              6191 00ff  ld   $ff         ;08f1 RET
              6192 0009  ld   $09         ;| RAM segment address (high byte first)
              6193 00a0  ld   $a0         ;|
              6194 0038  ld   $38         ;| Length (1..256)
              6195 00cd  ld   $cd         ;09a0 DEF
              6196 00b8  ld   $b8
              6197 0011  ld   $11         ;09a2 LDWI
              6198 00f7  ld   $f7
              6199 000b  ld   $0b
              619a 002b  ld   $2b         ;09a5 STW
              619b 00ad  ld   $ad         ;09a5 'Indicator'
              619c 0011  ld   $11         ;09a7 LDWI
              619d 006b  ld   $6b
              619e 000c  ld   $0c
              619f 002b  ld   $2b         ;09aa STW
              61a0 00af  ld   $af         ;09aa 'Tracking'
              61a1 0059  ld   $59         ;09ac LDI
              61a2 0000  ld   $00
              61a3 00f0  ld   $f0         ;09ae POKE
              61a4 00af  ld   $af         ;09ae 'Tracking'
              61a5 0093  ld   $93         ;09b0 INC
              61a6 00af  ld   $af         ;09b0 'Tracking'
              61a7 001a  ld   $1a         ;09b2 LD
              61a8 00af  ld   $af         ;09b2 'Tracking'
              61a9 008c  ld   $8c         ;09b4 XORI
              61aa 0076  ld   $76
              61ab 0035  ld   $35         ;09b6 BCC
              61ac 0072  ld   $72         ;09b7 NE
              61ad 00aa  ld   $aa
              61ae 00ff  ld   $ff         ;09b9 RET
              61af 002b  ld   $2b         ;09ba STW
              61b0 00b1  ld   $b1         ;09ba 'SetupIndicator'
              61b1 00cd  ld   $cd         ;09bc DEF
              61b2 00d1  ld   $d1
              61b3 0059  ld   $59         ;09be LDI
              61b4 0000  ld   $00
              61b5 00f0  ld   $f0         ;09c0 POKE
              61b6 00af  ld   $af         ;09c0 'Tracking'
              61b7 001a  ld   $1a         ;09c2 LD
              61b8 008e  ld   $8e         ;09c2 'Distance'+1
              61b9 0099  ld   $99         ;09c4 ADDW
              61ba 00ad  ld   $ad         ;09c4 'Indicator'
              61bb 002b  ld   $2b         ;09c6 STW
              61bc 00af  ld   $af         ;09c6 'Tracking'
              61bd 0059  ld   $59         ;09c8 LDI
              61be 003c  ld   $3c
              61bf 00f0  ld   $f0         ;09ca POKE
              61c0 00af  ld   $af         ;09ca 'Tracking'
              61c1 001a  ld   $1a         ;09cc LD
              61c2 0041  ld   $41         ;09cc 'Speed'+1
              61c3 0099  ld   $99         ;09ce ADDW
              61c4 008d  ld   $8d         ;09ce 'Distance'
              61c5 002b  ld   $2b         ;09d0 STW
              61c6 008d  ld   $8d         ;09d0 'Distance'
              61c7 00ff  ld   $ff         ;09d2 RET
              61c8 002b  ld   $2b         ;09d3 STW
              61c9 0095  ld   $95         ;09d3 'AdvanceCar'
              61ca 0093  ld   $93         ;09d5 INC
              61cb 001b  ld   $1b         ;09d5 '_vLR'+1
              61cc 00ff  ld   $ff         ;09d7 RET
              61cd 000a  ld   $0a         ;| RAM segment address (high byte first)
              61ce 00a0  ld   $a0         ;|
              61cf 0041  ld   $41         ;| Length (1..256)
              61d0 00cd  ld   $cd         ;0aa0 DEF
              61d1 00da  ld   $da
              61d2 0075  ld   $75         ;0aa2 PUSH
              61d3 0011  ld   $11         ;0aa3 LDWI
              61d4 00d9  ld   $d9
              61d5 0001  ld   $01
              61d6 00ad  ld   $ad         ;0aa6 PEEK
              61d7 008c  ld   $8c         ;0aa7 XORI
              61d8 00ff  ld   $ff
              61d9 002b  ld   $2b         ;0aa9 STW
              61da 0060  ld   $60         ;0aa9 'X'
              61db 001a  ld   $1a         ;0aab LD
              61dc 0043  ld   $43         ;0aab 'CarX'+1
              61dd 0099  ld   $99         ;0aad ADDW
              61de 0060  ld   $60         ;0aad 'X'
              61df 002b  ld   $2b         ;0aaf STW
              61e0 0060  ld   $60         ;0aaf 'X'
              61e1 0011  ld   $11         ;0ab1 LDWI
              61e2 00d8  ld   $d8
              61e3 0001  ld   $01
              61e4 002b  ld   $2b         ;0ab4 STW
              61e5 0056  ld   $56         ;0ab4 'Video'
              61e6 0021  ld   $21         ;0ab6 LDW
              61e7 00a3  ld   $a3         ;0ab6 'Car0'
              61e8 002b  ld   $2b         ;0ab8 STW
              61e9 005c  ld   $5c         ;0ab8 'Sprite'
              61ea 00cf  ld   $cf         ;0aba CALL
              61eb 0064  ld   $64         ;0aba 'DrawPixels'
              61ec 0021  ld   $21         ;0abc LDW
              61ed 00a5  ld   $a5         ;0abc 'Car1'
              61ee 002b  ld   $2b         ;0abe STW
              61ef 005c  ld   $5c         ;0abe 'Sprite'
              61f0 00cf  ld   $cf         ;0ac0 CALL
              61f1 0064  ld   $64         ;0ac0 'DrawPixels'
              61f2 0021  ld   $21         ;0ac2 LDW
              61f3 0060  ld   $60         ;0ac2 'X'
              61f4 00b8  ld   $b8         ;0ac4 SUBW
              61f5 004a  ld   $4a         ;0ac4 'Steer'
              61f6 002b  ld   $2b         ;0ac6 STW
              61f7 0060  ld   $60         ;0ac6 'X'
              61f8 0021  ld   $21         ;0ac8 LDW
              61f9 00a7  ld   $a7         ;0ac8 'Car2'
              61fa 002b  ld   $2b         ;0aca STW
              61fb fe00  bra  ac          ;+-----------------------------------+
              61fc fcfd  bra  $61fd       ;|                                   |
              61fd 1418  ld   $18,y       ;| Trampoline for page $6100 lookups |
              61fe e006  jmp  y,$06       ;|                                   |
              61ff c218  st   [$18]       ;+-----------------------------------+
              6200 005c  ld   $5c         ;0aca 'Sprite'
              6201 00cf  ld   $cf         ;0acc CALL
              6202 0064  ld   $64         ;0acc 'DrawPixels'
              6203 0021  ld   $21         ;0ace LDW
              6204 00a9  ld   $a9         ;0ace 'Car3'
              6205 002b  ld   $2b         ;0ad0 STW
              6206 005c  ld   $5c         ;0ad0 'Sprite'
              6207 00cf  ld   $cf         ;0ad2 CALL
              6208 0064  ld   $64         ;0ad2 'DrawPixels'
              6209 0021  ld   $21         ;0ad4 LDW
              620a 00ab  ld   $ab         ;0ad4 'Car4'
              620b 002b  ld   $2b         ;0ad6 STW
              620c 005c  ld   $5c         ;0ad6 'Sprite'
              620d 00cf  ld   $cf         ;0ad8 CALL
              620e 0064  ld   $64         ;0ad8 'DrawPixels'
              620f 0063  ld   $63         ;0ada POP
              6210 00ff  ld   $ff         ;0adb RET
              6211 002b  ld   $2b         ;0adc STW
              6212 009d  ld   $9d         ;0adc 'DrawRaceCar'
              6213 0093  ld   $93         ;0ade INC
              6214 001b  ld   $1b         ;0ade '_vLR'+1
              6215 00ff  ld   $ff         ;0ae0 RET
              6216 000b  ld   $0b         ;| RAM segment address (high byte first)
              6217 00a0  ld   $a0         ;|
              6218 004c  ld   $4c         ;| Length (1..256)
              6219 00cd  ld   $cd         ;0ba0 DEF
              621a 00e5  ld   $e5
              621b 0075  ld   $75         ;0ba2 PUSH
              621c 0059  ld   $59         ;0ba3 LDI
              621d 0030  ld   $30
              621e 002b  ld   $2b         ;0ba5 STW
              621f 0034  ld   $34         ;0ba5 'BgColor'
              6220 0021  ld   $21         ;0ba7 LDW
              6221 0034  ld   $34         ;0ba7 'BgColor'
              6222 005e  ld   $5e         ;0ba9 ST
              6223 0024  ld   $24
              6224 005e  ld   $5e         ;0bab ST
              6225 0025  ld   $25
              6226 0011  ld   $11         ;0bad LDWI
              6227 0000  ld   $00
              6228 0008  ld   $08
              6229 002b  ld   $2b         ;0bb0 STW
              622a 0028  ld   $28
              622b 0011  ld   $11         ;0bb2 LDWI
              622c 00e1  ld   $e1
              622d 0004  ld   $04
              622e 002b  ld   $2b         ;0bb5 STW
              622f 0022  ld   $22
              6230 00b4  ld   $b4         ;0bb7 SYS
              6231 00cc  ld   $cc
              6232 0093  ld   $93         ;0bb9 INC
              6233 0028  ld   $28
              6234 001a  ld   $1a         ;0bbb LD
              6235 0028  ld   $28
              6236 008c  ld   $8c         ;0bbd XORI
              6237 00a0  ld   $a0
              6238 0035  ld   $35         ;0bbf BCC
              6239 0072  ld   $72         ;0bc0 NE
              623a 00b5  ld   $b5
              623b 0059  ld   $59         ;0bc2 LDI
              623c 003f  ld   $3f
              623d 002b  ld   $2b         ;0bc4 STW
              623e 0036  ld   $36         ;0bc4 'Color'
              623f 0011  ld   $11         ;0bc6 LDWI
              6240 0007  ld   $07
              6241 0008  ld   $08
              6242 002b  ld   $2b         ;0bc9 STW
              6243 0038  ld   $38         ;0bc9 'Pos'
              6244 0059  ld   $59         ;0bcb LDI
              6245 003a  ld   $3a
              6246 00cf  ld   $cf         ;0bcd CALL
              6247 003a  ld   $3a         ;0bcd 'QPrintChar'
              6248 00e3  ld   $e3         ;0bcf ADDI
              6249 0012  ld   $12
              624a 002b  ld   $2b         ;0bd1 STW
              624b 0038  ld   $38         ;0bd1 'Pos'
              624c 0059  ld   $59         ;0bd3 LDI
              624d 002e  ld   $2e
              624e 00cf  ld   $cf         ;0bd5 CALL
              624f 003a  ld   $3a         ;0bd5 'QPrintChar'
              6250 00e3  ld   $e3         ;0bd7 ADDI
              6251 001f  ld   $1f
              6252 002b  ld   $2b         ;0bd9 STW
              6253 0038  ld   $38         ;0bd9 'Pos'
              6254 0021  ld   $21         ;0bdb LDW
              6255 004e  ld   $4e         ;0bdb 'GigatronText'
              6256 00cf  ld   $cf         ;0bdd CALL
              6257 0085  ld   $85         ;0bdd 'PrintText'
              6258 0059  ld   $59         ;0bdf LDI
              6259 003c  ld   $3c
              625a 002b  ld   $2b         ;0be1 STW
              625b 0050  ld   $50         ;0be1 'Delay'
              625c 00cf  ld   $cf         ;0be3 CALL
              625d 0054  ld   $54         ;0be3 'Wait'
              625e 0063  ld   $63         ;0be5 POP
              625f 00ff  ld   $ff         ;0be6 RET
              6260 002b  ld   $2b         ;0be7 STW
              6261 00b3  ld   $b3         ;0be7 'Intro'
              6262 0093  ld   $93         ;0be9 INC
              6263 001b  ld   $1b         ;0be9 '_vLR'+1
              6264 00ff  ld   $ff         ;0beb RET
              6265 000c  ld   $0c         ;| RAM segment address (high byte first)
              6266 00a0  ld   $a0         ;|
              6267 0059  ld   $59         ;| Length (1..256)
              6268 00cd  ld   $cd         ;0ca0 DEF
              6269 00f2  ld   $f2
              626a 002b  ld   $2b         ;0ca2 STW
              626b 0036  ld   $36         ;0ca2 'Color'
              626c 0021  ld   $21         ;0ca4 LDW
              626d 0097  ld   $97         ;0ca4 'BestTime'
              626e 002b  ld   $2b         ;0ca6 STW
              626f 0081  ld   $81         ;0ca6 'Value'
              6270 00e3  ld   $e3         ;0ca8 ADDI
              6271 0001  ld   $01
              6272 0035  ld   $35         ;0caa BCC
              6273 0053  ld   $53         ;0cab GE
              6274 00ac  ld   $ac
              6275 00ff  ld   $ff         ;0cad RET
              6276 0075  ld   $75         ;0cae PUSH
              6277 0011  ld   $11         ;0caf LDWI
              6278 007c  ld   $7c
              6279 0008  ld   $08
              627a 002b  ld   $2b         ;0cb2 STW
              627b 0038  ld   $38         ;0cb2 'Pos'
              627c 0011  ld   $11         ;0cb4 LDWI
              627d 000f  ld   $0f
              627e 000e  ld   $0e
              627f 002b  ld   $2b         ;0cb7 STW
              6280 0072  ld   $72         ;0cb7 'Radix'
              6281 00cf  ld   $cf         ;0cb9 CALL
              6282 0074  ld   $74         ;0cb9 'ExtractDigit'
              6283 00cf  ld   $cf         ;0cbb CALL
              6284 003a  ld   $3a         ;0cbb 'QPrintChar'
              6285 00e3  ld   $e3         ;0cbd ADDI
              6286 0006  ld   $06
              6287 002b  ld   $2b         ;0cbf STW
              6288 0038  ld   $38         ;0cbf 'Pos'
              6289 0059  ld   $59         ;0cc1 LDI
              628a 003a  ld   $3a
              628b 00cf  ld   $cf         ;0cc3 CALL
              628c 003a  ld   $3a         ;0cc3 'QPrintChar'
              628d 00e3  ld   $e3         ;0cc5 ADDI
              628e 0006  ld   $06
              628f 002b  ld   $2b         ;0cc7 STW
              6290 0038  ld   $38         ;0cc7 'Pos'
              6291 0011  ld   $11         ;0cc9 LDWI
              6292 0058  ld   $58
              6293 0002  ld   $02
              6294 002b  ld   $2b         ;0ccc STW
              6295 0072  ld   $72         ;0ccc 'Radix'
              6296 00cf  ld   $cf         ;0cce CALL
              6297 0074  ld   $74         ;0cce 'ExtractDigit'
              6298 00cf  ld   $cf         ;0cd0 CALL
              6299 003a  ld   $3a         ;0cd0 'QPrintChar'
              629a 00e3  ld   $e3         ;0cd2 ADDI
              629b 0006  ld   $06
              629c 002b  ld   $2b         ;0cd4 STW
              629d 0038  ld   $38         ;0cd4 'Pos'
              629e 0059  ld   $59         ;0cd6 LDI
              629f 003c  ld   $3c
              62a0 002b  ld   $2b         ;0cd8 STW
              62a1 0072  ld   $72         ;0cd8 'Radix'
              62a2 00cf  ld   $cf         ;0cda CALL
              62a3 0074  ld   $74         ;0cda 'ExtractDigit'
              62a4 00cf  ld   $cf         ;0cdc CALL
              62a5 003a  ld   $3a         ;0cdc 'QPrintChar'
              62a6 00e3  ld   $e3         ;0cde ADDI
              62a7 0006  ld   $06
              62a8 002b  ld   $2b         ;0ce0 STW
              62a9 0038  ld   $38         ;0ce0 'Pos'
              62aa 0059  ld   $59         ;0ce2 LDI
              62ab 002e  ld   $2e
              62ac 00cf  ld   $cf         ;0ce4 CALL
              62ad 003a  ld   $3a         ;0ce4 'QPrintChar'
              62ae 00e3  ld   $e3         ;0ce6 ADDI
              62af 0006  ld   $06
              62b0 002b  ld   $2b         ;0ce8 STW
              62b1 0038  ld   $38         ;0ce8 'Pos'
              62b2 0059  ld   $59         ;0cea LDI
              62b3 0006  ld   $06
              62b4 002b  ld   $2b         ;0cec STW
              62b5 0072  ld   $72         ;0cec 'Radix'
              62b6 00cf  ld   $cf         ;0cee CALL
              62b7 0074  ld   $74         ;0cee 'ExtractDigit'
              62b8 00cf  ld   $cf         ;0cf0 CALL
              62b9 003a  ld   $3a         ;0cf0 'QPrintChar'
              62ba 0063  ld   $63         ;0cf2 POP
              62bb 00ff  ld   $ff         ;0cf3 RET
              62bc 002b  ld   $2b         ;0cf4 STW
              62bd 0099  ld   $99         ;0cf4 'PrintBestTime'
              62be 0093  ld   $93         ;0cf6 INC
              62bf 001b  ld   $1b         ;0cf6 '_vLR'+1
              62c0 00ff  ld   $ff         ;0cf8 RET
              62c1 000d  ld   $0d         ;| RAM segment address (high byte first)
              62c2 00a0  ld   $a0         ;|
              62c3 0056  ld   $56         ;| Length (1..256)
              62c4 00cd  ld   $cd         ;0da0 DEF
              62c5 00ef  ld   $ef
              62c6 0075  ld   $75         ;0da2 PUSH
              62c7 0011  ld   $11         ;0da3 LDWI
              62c8 0035  ld   $35
              62c9 0014  ld   $14
              62ca 002b  ld   $2b         ;0da6 STW
              62cb 0038  ld   $38         ;0da6 'Pos'
              62cc 00cd  ld   $cd         ;0da8 DEF
              62cd 00b2  ld   $b2
              62ce 0047  ld   $47         ;0daa 'G'
              62cf 0041  ld   $41         ;0dab 'A'
              62d0 004d  ld   $4d         ;0dac 'M'
              62d1 0045  ld   $45         ;0dad 'E'
              62d2 0020  ld   $20         ;0dae ' '
              62d3 004f  ld   $4f         ;0daf 'O'
              62d4 0056  ld   $56         ;0db0 'V'
              62d5 0045  ld   $45         ;0db1 'E'
              62d6 0052  ld   $52         ;0db2 'R'
              62d7 0000  ld   $00         ;0db3 0
              62d8 00cf  ld   $cf         ;0db4 CALL
              62d9 0085  ld   $85         ;0db4 'PrintText'
              62da 0011  ld   $11         ;0db6 LDWI
              62db 0011  ld   $11
              62dc 0001  ld   $01
              62dd 002b  ld   $2b         ;0db9 STW
              62de 005e  ld   $5e         ;0db9 's'
              62df 00e3  ld   $e3         ;0dbb ADDI
              62e0 0020  ld   $20
              62e1 002b  ld   $2b         ;0dbd STW
              62e2 00b5  ld   $b5         ;0dbd 't'
              62e3 0059  ld   $59         ;0dbf LDI
              62e4 0001  ld   $01
              62e5 002b  ld   $2b         ;0dc1 STW
              62e6 0050  ld   $50         ;0dc1 'Delay'
              62e7 0021  ld   $21         ;0dc3 LDW
              62e8 005e  ld   $5e         ;0dc3 's'
              62e9 00ad  ld   $ad         ;0dc5 PEEK
              62ea 0082  ld   $82         ;0dc6 ANDI
              62eb 0080  ld   $80
              62ec 0035  ld   $35         ;0dc8 BCC
              62ed 0072  ld   $72         ;0dc9 NE
              62ee 00cd  ld   $cd
              62ef 0059  ld   $59         ;0dcb LDI
              62f0 0001  ld   $01
              62f1 0090  ld   $90         ;0dcd BRA
              62f2 00d0  ld   $d0
              62f3 0011  ld   $11         ;0dcf LDWI
              62f4 00ff  ld   $ff
              62f5 00ff  ld   $ff
              62f6 002b  ld   $2b         ;0dd2 STW
              62f7 0030  ld   $30         ;0dd2 'i'
              62f8 00cf  ld   $cf         ;0dd4 CALL
              62f9 0054  ld   $54         ;0dd4 'Wait'
              62fa 0021  ld   $21         ;0dd6 LDW
              62fb fe00  bra  ac          ;+-----------------------------------+
              62fc fcfd  bra  $62fd       ;|                                   |
              62fd 1418  ld   $18,y       ;| Trampoline for page $6200 lookups |
              62fe e006  jmp  y,$06       ;|                                   |
              62ff c218  st   [$18]       ;+-----------------------------------+
              6300 00b5  ld   $b5         ;0dd6 't'
              6301 00ad  ld   $ad         ;0dd8 PEEK
              6302 00b8  ld   $b8         ;0dd9 SUBW
              6303 0030  ld   $30         ;0dd9 'i'
              6304 00f0  ld   $f0         ;0ddb POKE
              6305 00b5  ld   $b5         ;0ddb 't'
              6306 0021  ld   $21         ;0ddd LDW
              6307 005e  ld   $5e         ;0ddd 's'
              6308 00ad  ld   $ad         ;0ddf PEEK
              6309 0099  ld   $99         ;0de0 ADDW
              630a 0030  ld   $30         ;0de0 'i'
              630b 00f0  ld   $f0         ;0de2 POKE
              630c 005e  ld   $5e         ;0de2 's'
              630d 0082  ld   $82         ;0de4 ANDI
              630e 00ff  ld   $ff
              630f 0035  ld   $35         ;0de6 BCC
              6310 0072  ld   $72         ;0de7 NE
              6311 00d2  ld   $d2
              6312 0059  ld   $59         ;0de9 LDI
              6313 001e  ld   $1e
              6314 002b  ld   $2b         ;0deb STW
              6315 0050  ld   $50         ;0deb 'Delay'
              6316 00cf  ld   $cf         ;0ded CALL
              6317 0054  ld   $54         ;0ded 'Wait'
              6318 0063  ld   $63         ;0def POP
              6319 00ff  ld   $ff         ;0df0 RET
              631a 002b  ld   $2b         ;0df1 STW
              631b 00b7  ld   $b7         ;0df1 'GameOver'
              631c 0093  ld   $93         ;0df3 INC
              631d 001b  ld   $1b         ;0df3 '_vLR'+1
              631e 00ff  ld   $ff         ;0df5 RET
              631f 000e  ld   $0e         ;| RAM segment address (high byte first)
              6320 00a0  ld   $a0         ;|
              6321 005b  ld   $5b         ;| Length (1..256)
              6322 00cd  ld   $cd         ;0ea0 DEF
              6323 00f4  ld   $f4
              6324 0075  ld   $75         ;0ea2 PUSH
              6325 0011  ld   $11         ;0ea3 LDWI
              6326 003f  ld   $3f
              6327 0050  ld   $50
              6328 002b  ld   $2b         ;0ea6 STW
              6329 0058  ld   $58         ;0ea6 'p'
              632a 0011  ld   $11         ;0ea8 LDWI
              632b 0000  ld   $00
              632c 0010  ld   $10
              632d 002b  ld   $2b         ;0eab STW
              632e 005a  ld   $5a         ;0eab 'q'
              632f 00cd  ld   $cd         ;0ead DEF
              6330 00bf  ld   $bf
              6331 001a  ld   $1a         ;0eaf LD
              6332 0058  ld   $58         ;0eaf 'p'
              6333 008c  ld   $8c         ;0eb1 XORI
              6334 00fa  ld   $fa
              6335 0035  ld   $35         ;0eb3 BCC
              6336 003f  ld   $3f         ;0eb4 EQ
              6337 00b8  ld   $b8
              6338 0059  ld   $59         ;0eb6 LDI
              6339 0001  ld   $01
              633a 0090  ld   $90         ;0eb8 BRA
              633b 00ba  ld   $ba
              633c 0059  ld   $59         ;0eba LDI
              633d 0006  ld   $06
              633e 0099  ld   $99         ;0ebc ADDW
              633f 0058  ld   $58         ;0ebc 'p'
              6340 002b  ld   $2b         ;0ebe STW
              6341 0058  ld   $58         ;0ebe 'p'
              6342 00ff  ld   $ff         ;0ec0 RET
              6343 002b  ld   $2b         ;0ec1 STW
              6344 0052  ld   $52         ;0ec1 'tmp'
              6345 0021  ld   $21         ;0ec3 LDW
              6346 0058  ld   $58         ;0ec3 'p'
              6347 007f  ld   $7f         ;0ec5 LUP
              6348 0000  ld   $00
              6349 005e  ld   $5e         ;0ec7 ST
              634a 0024  ld   $24
              634b 00cf  ld   $cf         ;0ec9 CALL
              634c 0052  ld   $52         ;0ec9 'tmp'
              634d 007f  ld   $7f         ;0ecb LUP
              634e 0000  ld   $00
              634f 005e  ld   $5e         ;0ecd ST
              6350 0025  ld   $25
              6351 00cf  ld   $cf         ;0ecf CALL
              6352 0052  ld   $52         ;0ecf 'tmp'
              6353 007f  ld   $7f         ;0ed1 LUP
              6354 0000  ld   $00
              6355 005e  ld   $5e         ;0ed3 ST
              6356 0026  ld   $26
              6357 00cf  ld   $cf         ;0ed5 CALL
              6358 0052  ld   $52         ;0ed5 'tmp'
              6359 0011  ld   $11         ;0ed7 LDWI
              635a 0068  ld   $68
              635b 001a  ld   $1a
              635c 002b  ld   $2b         ;0eda STW
              635d 0022  ld   $22
              635e 00b4  ld   $b4         ;0edc SYS
              635f 00f3  ld   $f3
              6360 0021  ld   $21         ;0ede LDW
              6361 005a  ld   $5a         ;0ede 'q'
              6362 002b  ld   $2b         ;0ee0 STW
              6363 0028  ld   $28
              6364 00e3  ld   $e3         ;0ee2 ADDI
              6365 0004  ld   $04
              6366 002b  ld   $2b         ;0ee4 STW
              6367 005a  ld   $5a         ;0ee4 'q'
              6368 0011  ld   $11         ;0ee6 LDWI
              6369 00d4  ld   $d4
              636a 0004  ld   $04
              636b 002b  ld   $2b         ;0ee9 STW
              636c 0022  ld   $22
              636d 00b4  ld   $b4         ;0eeb SYS
              636e 0000  ld   $00
              636f 001a  ld   $1a         ;0eed LD
              6370 005b  ld   $5b         ;0eed 'q'+1
              6371 008c  ld   $8c         ;0eef XORI
              6372 0020  ld   $20
              6373 0035  ld   $35         ;0ef1 BCC
              6374 0072  ld   $72         ;0ef2 NE
              6375 00c1  ld   $c1
              6376 0063  ld   $63         ;0ef4 POP
              6377 00ff  ld   $ff         ;0ef5 RET
              6378 002b  ld   $2b         ;0ef6 STW
              6379 00b9  ld   $b9         ;0ef6 'SetupHorizon'
              637a 0093  ld   $93         ;0ef8 INC
              637b 001b  ld   $1b         ;0ef8 '_vLR'+1
              637c 00ff  ld   $ff         ;0efa RET
              637d 000f  ld   $0f         ;| RAM segment address (high byte first)
              637e 00a0  ld   $a0         ;|
              637f 0054  ld   $54         ;| Length (1..256)
              6380 00cf  ld   $cf         ;0fa0 CALL
              6381 00b3  ld   $b3         ;0fa0 'Intro'
              6382 0011  ld   $11         ;0fa2 LDWI
              6383 0000  ld   $00
              6384 0074  ld   $74
              6385 002b  ld   $2b         ;0fa5 STW
              6386 008d  ld   $8d         ;0fa5 'Distance'
              6387 002b  ld   $2b         ;0fa7 STW
              6388 008b  ld   $8b         ;0fa7 'NextTurn'
              6389 0011  ld   $11         ;0fa9 LDWI
              638a 00ff  ld   $ff
              638b 007f  ld   $7f
              638c 002b  ld   $2b         ;0fac STW
              638d 0097  ld   $97         ;0fac 'BestTime'
              638e 0059  ld   $59         ;0fae LDI
              638f 0000  ld   $00
              6390 002b  ld   $2b         ;0fb0 STW
              6391 003e  ld   $3e         ;0fb0 'Time'
              6392 002b  ld   $2b         ;0fb2 STW
              6393 0081  ld   $81         ;0fb2 'Value'
              6394 002b  ld   $2b         ;0fb4 STW
              6395 0046  ld   $46         ;0fb4 'HorizonX'
              6396 002b  ld   $2b         ;0fb6 STW
              6397 0044  ld   $44         ;0fb6 'DriftX'
              6398 002b  ld   $2b         ;0fb8 STW
              6399 0040  ld   $40         ;0fb8 'Speed'
              639a 002b  ld   $2b         ;0fba STW
              639b 009b  ld   $9b         ;0fba 'Random'
              639c 002b  ld   $2b         ;0fbc STW
              639d 0087  ld   $87         ;0fbc 'DX0'
              639e 002b  ld   $2b         ;0fbe STW
              639f 008f  ld   $8f         ;0fbe 'DDX'
              63a0 002b  ld   $2b         ;0fc0 STW
              63a1 0091  ld   $91         ;0fc0 'NextDDX'
              63a2 00cf  ld   $cf         ;0fc2 CALL
              63a3 0093  ld   $93         ;0fc2 'DrawRoad'
              63a4 00cf  ld   $cf         ;0fc4 CALL
              63a5 009f  ld   $9f         ;0fc4 'DrawGrass'
              63a6 00cf  ld   $cf         ;0fc6 CALL
              63a7 00b9  ld   $b9         ;0fc6 'SetupHorizon'
              63a8 0011  ld   $11         ;0fc8 LDWI
              63a9 0035  ld   $35
              63aa 0014  ld   $14
              63ab 002b  ld   $2b         ;0fcb STW
              63ac 0038  ld   $38         ;0fcb 'Pos'
              63ad 00cd  ld   $cd         ;0fcd DEF
              63ae 00d7  ld   $d7
              63af 0047  ld   $47         ;0fcf 'G'
              63b0 0045  ld   $45         ;0fd0 'E'
              63b1 0054  ld   $54         ;0fd1 'T'
              63b2 0020  ld   $20         ;0fd2 ' '
              63b3 0052  ld   $52         ;0fd3 'R'
              63b4 0045  ld   $45         ;0fd4 'E'
              63b5 0041  ld   $41         ;0fd5 'A'
              63b6 0044  ld   $44         ;0fd6 'D'
              63b7 0059  ld   $59         ;0fd7 'Y'
              63b8 0000  ld   $00         ;0fd8 0
              63b9 00cf  ld   $cf         ;0fd9 CALL
              63ba 0085  ld   $85         ;0fd9 'PrintText'
              63bb 00cf  ld   $cf         ;0fdb CALL
              63bc 0070  ld   $70         ;0fdb 'SetupRoad'
              63bd 00cf  ld   $cf         ;0fdd CALL
              63be 00b9  ld   $b9         ;0fdd 'SetupHorizon'
              63bf 00cf  ld   $cf         ;0fdf CALL
              63c0 00b1  ld   $b1         ;0fdf 'SetupIndicator'
              63c1 0011  ld   $11         ;0fe1 LDWI
              63c2 0000  ld   $00
              63c3 0079  ld   $79
              63c4 002b  ld   $2b         ;0fe4 STW
              63c5 0042  ld   $42         ;0fe4 'CarX'
              63c6 001a  ld   $1a         ;0fe6 LD
              63c7 000e  ld   $0e
              63c8 002b  ld   $2b         ;0fe8 STW
              63c9 003c  ld   $3c         ;0fe8 'LastFrame'
              63ca 00cf  ld   $cf         ;0fea CALL
              63cb 00a1  ld   $a1         ;0fea 'PlayGame'
              63cc 00cf  ld   $cf         ;0fec CALL
              63cd 00b7  ld   $b7         ;0fec 'GameOver'
              63ce 0059  ld   $59         ;0fee LDI
              63cf 003f  ld   $3f
              63d0 00cf  ld   $cf         ;0ff0 CALL
              63d1 0099  ld   $99         ;0ff0 'PrintBestTime'
              63d2 0090  ld   $90         ;0ff2 BRA
              63d3 00a0  ld   $a0
              63d4 0000  ld   $00         ;End of Apps/Racer/Racer_v2.gcl, size 1868
                                          ;+-----------------------------------+
                                          ;| Apps/Mandelbrot/Mandelbrot_v1.gcl |
                                          ;+-----------------------------------+
              63d5 dc52  st   $52,[y,x++] ;'R'
              63d6 dc61  st   $61,[y,x++] ;'a'
              63d7 dc63  st   $63,[y,x++] ;'c'
              63d8 dc65  st   $65,[y,x++] ;'e'
              63d9 dc72  st   $72,[y,x++] ;'r'
              63da dc00  st   $00,[y,x++] ;'\x00'
              63db dc00  st   $00,[y,x++] ;'\x00'
              63dc dc00  st   $00,[y,x++] ;'\x00'
              63dd 0089  ld   $89
              63de c218  st   [$18]
              63df 005c  ld   $5c
              63e0 14fa  ld   $fa,y
              63e1 e020  jmp  y,$20
              63e2 c219  st   [$19]
Mandelbrot:   63e3 0002  ld   $02         ;| RAM segment address (high byte first)
              63e4 0000  ld   $00         ;|
              63e5 00ef  ld   $ef         ;| Length (1..256)
              63e6 00cd  ld   $cd         ;0200 DEF
              63e7 00e8  ld   $e8
              63e8 0075  ld   $75         ;0202 PUSH
              63e9 0059  ld   $59         ;0203 LDI
              63ea 0000  ld   $00
              63eb 002b  ld   $2b         ;0205 STW
              63ec 0030  ld   $30         ;0205 'sign'
              63ed 002b  ld   $2b         ;0207 STW
              63ee 0032  ld   $32         ;0207 'C'
              63ef 00b8  ld   $b8         ;0209 SUBW
              63f0 0034  ld   $34         ;0209 'A'
              63f1 0035  ld   $35         ;020b BCC
              63f2 0056  ld   $56         ;020c LE
              63f3 0012  ld   $12
              63f4 002b  ld   $2b         ;020e STW
              63f5 0034  ld   $34         ;020e 'A'
              63f6 0059  ld   $59         ;0210 LDI
              63f7 0001  ld   $01
              63f8 002b  ld   $2b         ;0212 STW
              63f9 0030  ld   $30         ;0212 'sign'
              63fa 0059  ld   $59         ;0214 LDI
              63fb fe00  bra  ac          ;+-----------------------------------+
              63fc fcfd  bra  $63fd       ;|                                   |
              63fd 1418  ld   $18,y       ;| Trampoline for page $6300 lookups |
              63fe e006  jmp  y,$06       ;|                                   |
              63ff c218  st   [$18]       ;+-----------------------------------+
              6400 0000  ld   $00
              6401 00b8  ld   $b8         ;0216 SUBW
              6402 0036  ld   $36         ;0216 'B'
              6403 0035  ld   $35         ;0218 BCC
              6404 0056  ld   $56         ;0219 LE
              6405 0021  ld   $21
              6406 002b  ld   $2b         ;021b STW
              6407 0036  ld   $36         ;021b 'B'
              6408 0021  ld   $21         ;021d LDW
              6409 0030  ld   $30         ;021d 'sign'
              640a 008c  ld   $8c         ;021f XORI
              640b 0001  ld   $01
              640c 002b  ld   $2b         ;0221 STW
              640d 0030  ld   $30         ;0221 'sign'
              640e 0059  ld   $59         ;0223 LDI
              640f 0007  ld   $07
              6410 002b  ld   $2b         ;0225 STW
              6411 0038  ld   $38         ;0225 'shift'
              6412 0011  ld   $11         ;0227 LDWI
              6413 0000  ld   $00
              6414 0006  ld   $06
              6415 002b  ld   $2b         ;022a STW
              6416 0022  ld   $22
              6417 0011  ld   $11         ;022c LDWI
              6418 0000  ld   $00
              6419 0002  ld   $02
              641a 002b  ld   $2b         ;022f STW
              641b 003a  ld   $3a         ;022f 'bit'
              641c 0011  ld   $11         ;0231 LDWI
              641d 0000  ld   $00
              641e 00c0  ld   $c0
              641f 0099  ld   $99         ;0234 ADDW
              6420 0032  ld   $32         ;0234 'C'
              6421 0035  ld   $35         ;0236 BCC
              6422 0053  ld   $53         ;0237 GE
              6423 003e  ld   $3e
              6424 0021  ld   $21         ;0239 LDW
              6425 0032  ld   $32         ;0239 'C'
              6426 00e9  ld   $e9         ;023b LSLW
              6427 002b  ld   $2b         ;023c STW
              6428 0032  ld   $32         ;023c 'C'
              6429 0090  ld   $90         ;023e BRA
              642a 004a  ld   $4a
              642b 0021  ld   $21         ;0240 LDW
              642c 0036  ld   $36         ;0240 'B'
              642d 00b4  ld   $b4         ;0242 SYS
              642e 00f7  ld   $f7
              642f 002b  ld   $2b         ;0244 STW
              6430 0036  ld   $36         ;0244 'B'
              6431 0021  ld   $21         ;0246 LDW
              6432 0038  ld   $38         ;0246 'shift'
              6433 00e6  ld   $e6         ;0248 SUBI
              6434 0001  ld   $01
              6435 002b  ld   $2b         ;024a STW
              6436 0038  ld   $38         ;024a 'shift'
              6437 0021  ld   $21         ;024c LDW
              6438 0034  ld   $34         ;024c 'A'
              6439 00b8  ld   $b8         ;024e SUBW
              643a 003a  ld   $3a         ;024e 'bit'
              643b 0035  ld   $35         ;0250 BCC
              643c 0050  ld   $50         ;0251 LT
              643d 0059  ld   $59
              643e 002b  ld   $2b         ;0253 STW
              643f 0034  ld   $34         ;0253 'A'
              6440 0021  ld   $21         ;0255 LDW
              6441 0032  ld   $32         ;0255 'C'
              6442 0099  ld   $99         ;0257 ADDW
              6443 0036  ld   $36         ;0257 'B'
              6444 002b  ld   $2b         ;0259 STW
              6445 0032  ld   $32         ;0259 'C'
              6446 0021  ld   $21         ;025b LDW
              6447 003a  ld   $3a         ;025b 'bit'
              6448 00b4  ld   $b4         ;025d SYS
              6449 00f7  ld   $f7
              644a 0035  ld   $35         ;025f BCC
              644b 0072  ld   $72         ;0260 NE
              644c 002d  ld   $2d
              644d 0021  ld   $21         ;0262 LDW
              644e 0038  ld   $38         ;0262 'shift'
              644f 008c  ld   $8c         ;0264 XORI
              6450 0007  ld   $07
              6451 0035  ld   $35         ;0266 BCC
              6452 0072  ld   $72         ;0267 NE
              6453 0072  ld   $72
              6454 0011  ld   $11         ;0269 LDWI
              6455 00b9  ld   $b9
              6456 0004  ld   $04
              6457 002b  ld   $2b         ;026c STW
              6458 0022  ld   $22
              6459 0021  ld   $21         ;026e LDW
              645a 0032  ld   $32         ;026e 'C'
              645b 00b4  ld   $b4         ;0270 SYS
              645c 0000  ld   $00
              645d 0090  ld   $90         ;0272 BRA
              645e 00d7  ld   $d7
              645f 0021  ld   $21         ;0274 LDW
              6460 0038  ld   $38         ;0274 'shift'
              6461 008c  ld   $8c         ;0276 XORI
              6462 0006  ld   $06
              6463 0035  ld   $35         ;0278 BCC
              6464 0072  ld   $72         ;0279 NE
              6465 0084  ld   $84
              6466 0011  ld   $11         ;027b LDWI
              6467 0087  ld   $87
              6468 0006  ld   $06
              6469 002b  ld   $2b         ;027e STW
              646a 0022  ld   $22
              646b 0021  ld   $21         ;0280 LDW
              646c 0032  ld   $32         ;0280 'C'
              646d 00b4  ld   $b4         ;0282 SYS
              646e 00f7  ld   $f7
              646f 0090  ld   $90         ;0284 BRA
              6470 00d7  ld   $d7
              6471 0021  ld   $21         ;0286 LDW
              6472 0038  ld   $38         ;0286 'shift'
              6473 008c  ld   $8c         ;0288 XORI
              6474 0005  ld   $05
              6475 0035  ld   $35         ;028a BCC
              6476 0072  ld   $72         ;028b NE
              6477 0096  ld   $96
              6478 0011  ld   $11         ;028d LDWI
              6479 006d  ld   $6d
              647a 0006  ld   $06
              647b 002b  ld   $2b         ;0290 STW
              647c 0022  ld   $22
              647d 0021  ld   $21         ;0292 LDW
              647e 0032  ld   $32         ;0292 'C'
              647f 00b4  ld   $b4         ;0294 SYS
              6480 00f6  ld   $f6
              6481 0090  ld   $90         ;0296 BRA
              6482 00d7  ld   $d7
              6483 0021  ld   $21         ;0298 LDW
              6484 0038  ld   $38         ;0298 'shift'
              6485 008c  ld   $8c         ;029a XORI
              6486 0004  ld   $04
              6487 0035  ld   $35         ;029c BCC
              6488 0072  ld   $72         ;029d NE
              6489 00a8  ld   $a8
              648a 0011  ld   $11         ;029f LDWI
              648b 0052  ld   $52
              648c 0006  ld   $06
              648d 002b  ld   $2b         ;02a2 STW
              648e 0022  ld   $22
              648f 0021  ld   $21         ;02a4 LDW
              6490 0032  ld   $32         ;02a4 'C'
              6491 00b4  ld   $b4         ;02a6 SYS
              6492 00f6  ld   $f6
              6493 0090  ld   $90         ;02a8 BRA
              6494 00d7  ld   $d7
              6495 0021  ld   $21         ;02aa LDW
              6496 0038  ld   $38         ;02aa 'shift'
              6497 008c  ld   $8c         ;02ac XORI
              6498 0003  ld   $03
              6499 0035  ld   $35         ;02ae BCC
              649a 0072  ld   $72         ;02af NE
              649b 00ba  ld   $ba
              649c 0011  ld   $11         ;02b1 LDWI
              649d 0036  ld   $36
              649e 0006  ld   $06
              649f 002b  ld   $2b         ;02b4 STW
              64a0 0022  ld   $22
              64a1 0021  ld   $21         ;02b6 LDW
              64a2 0032  ld   $32         ;02b6 'C'
              64a3 00b4  ld   $b4         ;02b8 SYS
              64a4 00f5  ld   $f5
              64a5 0090  ld   $90         ;02ba BRA
              64a6 00d7  ld   $d7
              64a7 0021  ld   $21         ;02bc LDW
              64a8 0038  ld   $38         ;02bc 'shift'
              64a9 008c  ld   $8c         ;02be XORI
              64aa 0002  ld   $02
              64ab 0035  ld   $35         ;02c0 BCC
              64ac 0072  ld   $72         ;02c1 NE
              64ad 00cc  ld   $cc
              64ae 0011  ld   $11         ;02c3 LDWI
              64af 0019  ld   $19
              64b0 0006  ld   $06
              64b1 002b  ld   $2b         ;02c6 STW
              64b2 0022  ld   $22
              64b3 0021  ld   $21         ;02c8 LDW
              64b4 0032  ld   $32         ;02c8 'C'
              64b5 00b4  ld   $b4         ;02ca SYS
              64b6 00f5  ld   $f5
              64b7 0090  ld   $90         ;02cc BRA
              64b8 00d7  ld   $d7
              64b9 0021  ld   $21         ;02ce LDW
              64ba 0038  ld   $38         ;02ce 'shift'
              64bb 008c  ld   $8c         ;02d0 XORI
              64bc 0001  ld   $01
              64bd 0035  ld   $35         ;02d2 BCC
              64be 0072  ld   $72         ;02d3 NE
              64bf 00d7  ld   $d7
              64c0 0021  ld   $21         ;02d5 LDW
              64c1 0032  ld   $32         ;02d5 'C'
              64c2 00b4  ld   $b4         ;02d7 SYS
              64c3 00f7  ld   $f7
              64c4 002b  ld   $2b         ;02d9 STW
              64c5 0032  ld   $32         ;02d9 'C'
              64c6 0021  ld   $21         ;02db LDW
              64c7 0030  ld   $30         ;02db 'sign'
              64c8 0035  ld   $35         ;02dd BCC
              64c9 003f  ld   $3f         ;02de EQ
              64ca 00e4  ld   $e4
              64cb 0059  ld   $59         ;02e0 LDI
              64cc 0000  ld   $00
              64cd 00b8  ld   $b8         ;02e2 SUBW
              64ce 0032  ld   $32         ;02e2 'C'
              64cf 0090  ld   $90         ;02e4 BRA
              64d0 00e6  ld   $e6
              64d1 0021  ld   $21         ;02e6 LDW
              64d2 0032  ld   $32         ;02e6 'C'
              64d3 0063  ld   $63         ;02e8 POP
              64d4 00ff  ld   $ff         ;02e9 RET
              64d5 002b  ld   $2b         ;02ea STW
              64d6 003c  ld   $3c         ;02ea 'MulShift7'
              64d7 0093  ld   $93         ;02ec INC
              64d8 001b  ld   $1b
              64d9 00ff  ld   $ff         ;02ee RET
              64da 0003  ld   $03         ;| RAM segment address (high byte first)
              64db 0000  ld   $00         ;|
              64dc 00eb  ld   $eb         ;| Length (1..256)
              64dd 00cd  ld   $cd         ;0300 DEF
              64de 00e4  ld   $e4
              64df 0075  ld   $75         ;0302 PUSH
              64e0 0011  ld   $11         ;0303 LDWI
              64e1 0000  ld   $00
              64e2 0008  ld   $08
              64e3 002b  ld   $2b         ;0306 STW
              64e4 003e  ld   $3e         ;0306 'Pen'
              64e5 0059  ld   $59         ;0308 LDI
              64e6 0078  ld   $78
              64e7 002b  ld   $2b         ;030a STW
              64e8 0040  ld   $40         ;030a 'Height'
              64e9 0059  ld   $59         ;030c LDI
              64ea 00a0  ld   $a0
              64eb 002b  ld   $2b         ;030e STW
              64ec 0042  ld   $42         ;030e 'Width'
              64ed 002b  ld   $2b         ;0310 STW
              64ee 0044  ld   $44         ;0310 'len'
              64ef 002b  ld   $2b         ;0312 STW
              64f0 0046  ld   $46         ;0312 'LastPixel'
              64f1 0059  ld   $59         ;0314 LDI
              64f2 0000  ld   $00
              64f3 002b  ld   $2b         ;0316 STW
              64f4 0048  ld   $48         ;0316 'DY'
              64f5 0021  ld   $21         ;0318 LDW
              64f6 004a  ld   $4a         ;0318 'Step'
              64f7 002b  ld   $2b         ;031a STW
              64f8 004c  ld   $4c         ;031a 'DX'
              64f9 0059  ld   $59         ;031c LDI
              64fa 003f  ld   $3f
              64fb fe00  bra  ac          ;+-----------------------------------+
              64fc fcfd  bra  $64fd       ;|                                   |
              64fd 1418  ld   $18,y       ;| Trampoline for page $6400 lookups |
              64fe e006  jmp  y,$06       ;|                                   |
              64ff c218  st   [$18]       ;+-----------------------------------+
              6500 00f0  ld   $f0         ;031e POKE
              6501 003e  ld   $3e         ;031e 'Pen'
              6502 00cf  ld   $cf         ;0320 CALL
              6503 004e  ld   $4e         ;0320 'UpdateClock'
              6504 0021  ld   $21         ;0322 LDW
              6505 0046  ld   $46         ;0322 'LastPixel'
              6506 0035  ld   $35         ;0324 BCC
              6507 0072  ld   $72         ;0325 NE
              6508 0071  ld   $71
              6509 0021  ld   $21         ;0327 LDW
              650a 0050  ld   $50         ;0327 'Y0'
              650b 002b  ld   $2b         ;0329 STW
              650c 0034  ld   $34         ;0329 'A'
              650d 002b  ld   $2b         ;032b STW
              650e 0036  ld   $36         ;032b 'B'
              650f 00cf  ld   $cf         ;032d CALL
              6510 003c  ld   $3c         ;032d 'MulShift7'
              6511 002b  ld   $2b         ;032f STW
              6512 0052  ld   $52         ;032f 'YY'
              6513 0021  ld   $21         ;0331 LDW
              6514 0054  ld   $54         ;0331 'X0'
              6515 00e3  ld   $e3         ;0333 ADDI
              6516 0080  ld   $80
              6517 002b  ld   $2b         ;0335 STW
              6518 0034  ld   $34         ;0335 'A'
              6519 002b  ld   $2b         ;0337 STW
              651a 0036  ld   $36         ;0337 'B'
              651b 00cf  ld   $cf         ;0339 CALL
              651c 003c  ld   $3c         ;0339 'MulShift7'
              651d 0099  ld   $99         ;033b ADDW
              651e 0052  ld   $52         ;033b 'YY'
              651f 00e6  ld   $e6         ;033d SUBI
              6520 0008  ld   $08
              6521 0035  ld   $35         ;033f BCC
              6522 0053  ld   $53         ;0340 GE
              6523 0044  ld   $44
              6524 0059  ld   $59         ;0342 LDI
              6525 0000  ld   $00
              6526 0090  ld   $90         ;0344 BRA
              6527 006f  ld   $6f
              6528 0021  ld   $21         ;0346 LDW
              6529 0054  ld   $54         ;0346 'X0'
              652a 00e6  ld   $e6         ;0348 SUBI
              652b 0020  ld   $20
              652c 002b  ld   $2b         ;034a STW
              652d 0034  ld   $34         ;034a 'A'
              652e 002b  ld   $2b         ;034c STW
              652f 0036  ld   $36         ;034c 'B'
              6530 00cf  ld   $cf         ;034e CALL
              6531 003c  ld   $3c         ;034e 'MulShift7'
              6532 0099  ld   $99         ;0350 ADDW
              6533 0052  ld   $52         ;0350 'YY'
              6534 002b  ld   $2b         ;0352 STW
              6535 0034  ld   $34         ;0352 'A'
              6536 0099  ld   $99         ;0354 ADDW
              6537 0054  ld   $54         ;0354 'X0'
              6538 00e6  ld   $e6         ;0356 SUBI
              6539 0020  ld   $20
              653a 002b  ld   $2b         ;0358 STW
              653b 0036  ld   $36         ;0358 'B'
              653c 00cf  ld   $cf         ;035a CALL
              653d 003c  ld   $3c         ;035a 'MulShift7'
              653e 002b  ld   $2b         ;035c STW
              653f 0056  ld   $56         ;035c 'tmp'
              6540 0099  ld   $99         ;035e ADDW
              6541 0056  ld   $56         ;035e 'tmp'
              6542 002b  ld   $2b         ;0360 STW
              6543 0056  ld   $56         ;0360 'tmp'
              6544 0099  ld   $99         ;0362 ADDW
              6545 0056  ld   $56         ;0362 'tmp'
              6546 002b  ld   $2b         ;0364 STW
              6547 0056  ld   $56         ;0364 'tmp'
              6548 00b8  ld   $b8         ;0366 SUBW
              6549 0052  ld   $52         ;0366 'YY'
              654a 0035  ld   $35         ;0368 BCC
              654b 0053  ld   $53         ;0369 GE
              654c 006d  ld   $6d
              654d 0059  ld   $59         ;036b LDI
              654e 0000  ld   $00
              654f 0090  ld   $90         ;036d BRA
              6550 006f  ld   $6f
              6551 00cf  ld   $cf         ;036f CALL
              6552 0058  ld   $58         ;036f 'CalcPixel'
              6553 0090  ld   $90         ;0371 BRA
              6554 0073  ld   $73
              6555 00cf  ld   $cf         ;0373 CALL
              6556 0058  ld   $58         ;0373 'CalcPixel'
              6557 002b  ld   $2b         ;0375 STW
              6558 0046  ld   $46         ;0375 'LastPixel'
              6559 00f0  ld   $f0         ;0377 POKE
              655a 003e  ld   $3e         ;0377 'Pen'
              655b 0021  ld   $21         ;0379 LDW
              655c 0044  ld   $44         ;0379 'len'
              655d 00e6  ld   $e6         ;037b SUBI
              655e 0001  ld   $01
              655f 0035  ld   $35         ;037d BCC
              6560 004d  ld   $4d         ;037e GT
              6561 009f  ld   $9f
              6562 0021  ld   $21         ;0380 LDW
              6563 0048  ld   $48         ;0380 'DY'
              6564 002b  ld   $2b         ;0382 STW
              6565 0056  ld   $56         ;0382 'tmp'
              6566 0021  ld   $21         ;0384 LDW
              6567 004c  ld   $4c         ;0384 'DX'
              6568 002b  ld   $2b         ;0386 STW
              6569 0048  ld   $48         ;0386 'DY'
              656a 0059  ld   $59         ;0388 LDI
              656b 0000  ld   $00
              656c 00b8  ld   $b8         ;038a SUBW
              656d 0056  ld   $56         ;038a 'tmp'
              656e 002b  ld   $2b         ;038c STW
              656f 004c  ld   $4c         ;038c 'DX'
              6570 0021  ld   $21         ;038e LDW
              6571 004c  ld   $4c         ;038e 'DX'
              6572 0035  ld   $35         ;0390 BCC
              6573 003f  ld   $3f         ;0391 EQ
              6574 0099  ld   $99
              6575 0021  ld   $21         ;0393 LDW
              6576 0042  ld   $42         ;0393 'Width'
              6577 00e6  ld   $e6         ;0395 SUBI
              6578 0001  ld   $01
              6579 002b  ld   $2b         ;0397 STW
              657a 0042  ld   $42         ;0397 'Width'
              657b 0090  ld   $90         ;0399 BRA
              657c 009f  ld   $9f
              657d 0021  ld   $21         ;039b LDW
              657e 0040  ld   $40         ;039b 'Height'
              657f 00e6  ld   $e6         ;039d SUBI
              6580 0001  ld   $01
              6581 002b  ld   $2b         ;039f STW
              6582 0040  ld   $40         ;039f 'Height'
              6583 002b  ld   $2b         ;03a1 STW
              6584 0044  ld   $44         ;03a1 'len'
              6585 0035  ld   $35         ;03a3 BCC
              6586 0056  ld   $56         ;03a4 LE
              6587 00e0  ld   $e0
              6588 0021  ld   $21         ;03a6 LDW
              6589 0054  ld   $54         ;03a6 'X0'
              658a 0099  ld   $99         ;03a8 ADDW
              658b 004c  ld   $4c         ;03a8 'DX'
              658c 002b  ld   $2b         ;03aa STW
              658d 0054  ld   $54         ;03aa 'X0'
              658e 0021  ld   $21         ;03ac LDW
              658f 0050  ld   $50         ;03ac 'Y0'
              6590 0099  ld   $99         ;03ae ADDW
              6591 0048  ld   $48         ;03ae 'DY'
              6592 002b  ld   $2b         ;03b0 STW
              6593 0050  ld   $50         ;03b0 'Y0'
              6594 0021  ld   $21         ;03b2 LDW
              6595 004c  ld   $4c         ;03b2 'DX'
              6596 0035  ld   $35         ;03b4 BCC
              6597 0053  ld   $53         ;03b5 GE
              6598 00bb  ld   $bb
              6599 0021  ld   $21         ;03b7 LDW
              659a 003e  ld   $3e         ;03b7 'Pen'
              659b 00e6  ld   $e6         ;03b9 SUBI
              659c 0001  ld   $01
              659d 002b  ld   $2b         ;03bb STW
              659e 003e  ld   $3e         ;03bb 'Pen'
              659f 0021  ld   $21         ;03bd LDW
              65a0 004c  ld   $4c         ;03bd 'DX'
              65a1 0035  ld   $35         ;03bf BCC
              65a2 0056  ld   $56         ;03c0 LE
              65a3 00c6  ld   $c6
              65a4 0021  ld   $21         ;03c2 LDW
              65a5 003e  ld   $3e         ;03c2 'Pen'
              65a6 00e3  ld   $e3         ;03c4 ADDI
              65a7 0001  ld   $01
              65a8 002b  ld   $2b         ;03c6 STW
              65a9 003e  ld   $3e         ;03c6 'Pen'
              65aa 0021  ld   $21         ;03c8 LDW
              65ab 0048  ld   $48         ;03c8 'DY'
              65ac 0035  ld   $35         ;03ca BCC
              65ad 0053  ld   $53         ;03cb GE
              65ae 00d2  ld   $d2
              65af 0011  ld   $11         ;03cd LDWI
              65b0 0000  ld   $00
              65b1 00ff  ld   $ff
              65b2 0099  ld   $99         ;03d0 ADDW
              65b3 003e  ld   $3e         ;03d0 'Pen'
              65b4 002b  ld   $2b         ;03d2 STW
              65b5 003e  ld   $3e         ;03d2 'Pen'
              65b6 0021  ld   $21         ;03d4 LDW
              65b7 0048  ld   $48         ;03d4 'DY'
              65b8 0035  ld   $35         ;03d6 BCC
              65b9 0056  ld   $56         ;03d7 LE
              65ba 00de  ld   $de
              65bb 0011  ld   $11         ;03d9 LDWI
              65bc 0000  ld   $00
              65bd 0001  ld   $01
              65be 0099  ld   $99         ;03dc ADDW
              65bf 003e  ld   $3e         ;03dc 'Pen'
              65c0 002b  ld   $2b         ;03de STW
              65c1 003e  ld   $3e         ;03de 'Pen'
              65c2 0090  ld   $90         ;03e0 BRA
              65c3 001a  ld   $1a
              65c4 00cf  ld   $cf         ;03e2 CALL
              65c5 005a  ld   $5a         ;03e2 'GrayOut'
              65c6 0063  ld   $63         ;03e4 POP
              65c7 00ff  ld   $ff         ;03e5 RET
              65c8 002b  ld   $2b         ;03e6 STW
              65c9 005c  ld   $5c         ;03e6 'CalcSet'
              65ca 0093  ld   $93         ;03e8 INC
              65cb 001b  ld   $1b
              65cc 00ff  ld   $ff         ;03ea RET
              65cd 0004  ld   $04         ;| RAM segment address (high byte first)
              65ce 0000  ld   $00         ;|
              65cf 00f0  ld   $f0         ;| Length (1..256)
              65d0 00cd  ld   $cd         ;0400 DEF
              65d1 00e4  ld   $e4
              65d2 0075  ld   $75         ;0402 PUSH
              65d3 0011  ld   $11         ;0403 LDWI
              65d4 0000  ld   $00
              65d5 0008  ld   $08
              65d6 002b  ld   $2b         ;0406 STW
              65d7 003e  ld   $3e         ;0406 'Pen'
              65d8 0059  ld   $59         ;0408 LDI
              65d9 0078  ld   $78
              65da 002b  ld   $2b         ;040a STW
              65db 0040  ld   $40         ;040a 'Height'
              65dc 0059  ld   $59         ;040c LDI
              65dd 00a0  ld   $a0
              65de 002b  ld   $2b         ;040e STW
              65df 0042  ld   $42         ;040e 'Width'
              65e0 002b  ld   $2b         ;0410 STW
              65e1 0044  ld   $44         ;0410 'len'
              65e2 0059  ld   $59         ;0412 LDI
              65e3 0001  ld   $01
              65e4 002b  ld   $2b         ;0414 STW
              65e5 004c  ld   $4c         ;0414 'DX'
              65e6 0059  ld   $59         ;0416 LDI
              65e7 0000  ld   $00
              65e8 002b  ld   $2b         ;0418 STW
              65e9 0048  ld   $48         ;0418 'DY'
              65ea 0011  ld   $11         ;041a LDWI
              65eb 0000  ld   $00
              65ec 0006  ld   $06
              65ed 002b  ld   $2b         ;041d STW
              65ee 0022  ld   $22
              65ef 0059  ld   $59         ;041f LDI
              65f0 0000  ld   $00
              65f1 002b  ld   $2b         ;0421 STW
              65f2 005e  ld   $5e         ;0421 'Level'
              65f3 0059  ld   $59         ;0423 LDI
              65f4 0020  ld   $20
              65f5 002b  ld   $2b         ;0425 STW
              65f6 0060  ld   $60         ;0425 'i'
              65f7 0021  ld   $21         ;0427 LDW
              65f8 003e  ld   $3e         ;0427 'Pen'
              65f9 00ad  ld   $ad         ;0429 PEEK
              65fa 0082  ld   $82         ;042a ANDI
              65fb fe00  bra  ac          ;+-----------------------------------+
              65fc fcfd  bra  $65fd       ;|                                   |
              65fd 1418  ld   $18,y       ;| Trampoline for page $6500 lookups |
              65fe e006  jmp  y,$06       ;|                                   |
              65ff c218  st   [$18]       ;+-----------------------------------+
              6600 003f  ld   $3f
              6601 00b8  ld   $b8         ;042c SUBW
              6602 0060  ld   $60         ;042c 'i'
              6603 0035  ld   $35         ;042e BCC
              6604 0050  ld   $50         ;042f LT
              6605 0042  ld   $42
              6606 00f0  ld   $f0         ;0431 POKE
              6607 003e  ld   $3e         ;0431 'Pen'
              6608 0021  ld   $21         ;0433 LDW
              6609 0060  ld   $60         ;0433 'i'
              660a 0082  ld   $82         ;0435 ANDI
              660b 0015  ld   $15
              660c 0035  ld   $35         ;0437 BCC
              660d 003f  ld   $3f         ;0438 EQ
              660e 003c  ld   $3c
              660f 0059  ld   $59         ;043a LDI
              6610 0001  ld   $01
              6611 0090  ld   $90         ;043c BRA
              6612 003e  ld   $3e
              6613 0059  ld   $59         ;043e LDI
              6614 0002  ld   $02
              6615 0099  ld   $99         ;0440 ADDW
              6616 005e  ld   $5e         ;0440 'Level'
              6617 002b  ld   $2b         ;0442 STW
              6618 005e  ld   $5e         ;0442 'Level'
              6619 0021  ld   $21         ;0444 LDW
              661a 0060  ld   $60         ;0444 'i'
              661b 00b4  ld   $b4         ;0446 SYS
              661c 00f7  ld   $f7
              661d 0035  ld   $35         ;0448 BCC
              661e 004d  ld   $4d         ;0449 GT
              661f 0023  ld   $23
              6620 00f0  ld   $f0         ;044b POKE
              6621 003e  ld   $3e         ;044b 'Pen'
              6622 0021  ld   $21         ;044d LDW
              6623 005e  ld   $5e         ;044d 'Level'
              6624 0035  ld   $35         ;044f BCC
              6625 003f  ld   $3f         ;0450 EQ
              6626 0083  ld   $83
              6627 001a  ld   $1a         ;0452 LD
              6628 003f  ld   $3f         ;0452 'Pen'+1
              6629 0082  ld   $82         ;0454 ANDI
              662a 0001  ld   $01
              662b 002b  ld   $2b         ;0456 STW
              662c 0060  ld   $60         ;0456 'i'
              662d 0099  ld   $99         ;0458 ADDW
              662e 0060  ld   $60         ;0458 'i'
              662f 002b  ld   $2b         ;045a STW
              6630 0060  ld   $60         ;045a 'i'
              6631 0021  ld   $21         ;045c LDW
              6632 003e  ld   $3e         ;045c 'Pen'
              6633 0082  ld   $82         ;045e ANDI
              6634 0001  ld   $01
              6635 0099  ld   $99         ;0460 ADDW
              6636 0060  ld   $60         ;0460 'i'
              6637 002b  ld   $2b         ;0462 STW
              6638 0060  ld   $60         ;0462 'i'
              6639 00cd  ld   $cd         ;0464 DEF
              663a 0068  ld   $68
              663b 0000  ld   $00
              663c 0002  ld   $02
              663d 0003  ld   $03
              663e 0001  ld   $01
              663f 0099  ld   $99         ;046a ADDW
              6640 0060  ld   $60         ;046a 'i'
              6641 00ad  ld   $ad         ;046c PEEK
              6642 0099  ld   $99         ;046d ADDW
              6643 005e  ld   $5e         ;046d 'Level'
              6644 00e6  ld   $e6         ;046f SUBI
              6645 0001  ld   $01
              6646 002b  ld   $2b         ;0471 STW
              6647 005e  ld   $5e         ;0471 'Level'
              6648 0021  ld   $21         ;0473 LDW
              6649 005e  ld   $5e         ;0473 'Level'
              664a 00e6  ld   $e6         ;0475 SUBI
              664b 0003  ld   $03
              664c 0035  ld   $35         ;0477 BCC
              664d 0050  ld   $50         ;0478 LT
              664e 0083  ld   $83
              664f 002b  ld   $2b         ;047a STW
              6650 005e  ld   $5e         ;047a 'Level'
              6651 0021  ld   $21         ;047c LDW
              6652 003e  ld   $3e         ;047c 'Pen'
              6653 00ad  ld   $ad         ;047e PEEK
              6654 00e3  ld   $e3         ;047f ADDI
              6655 0015  ld   $15
              6656 00f0  ld   $f0         ;0481 POKE
              6657 003e  ld   $3e         ;0481 'Pen'
              6658 0090  ld   $90         ;0483 BRA
              6659 0071  ld   $71
              665a 0021  ld   $21         ;0485 LDW
              665b 0044  ld   $44         ;0485 'len'
              665c 00e6  ld   $e6         ;0487 SUBI
              665d 0001  ld   $01
              665e 0035  ld   $35         ;0489 BCC
              665f 004d  ld   $4d         ;048a GT
              6660 00ab  ld   $ab
              6661 0021  ld   $21         ;048c LDW
              6662 0048  ld   $48         ;048c 'DY'
              6663 002b  ld   $2b         ;048e STW
              6664 0056  ld   $56         ;048e 'tmp'
              6665 0021  ld   $21         ;0490 LDW
              6666 004c  ld   $4c         ;0490 'DX'
              6667 002b  ld   $2b         ;0492 STW
              6668 0048  ld   $48         ;0492 'DY'
              6669 0059  ld   $59         ;0494 LDI
              666a 0000  ld   $00
              666b 00b8  ld   $b8         ;0496 SUBW
              666c 0056  ld   $56         ;0496 'tmp'
              666d 002b  ld   $2b         ;0498 STW
              666e 004c  ld   $4c         ;0498 'DX'
              666f 0021  ld   $21         ;049a LDW
              6670 004c  ld   $4c         ;049a 'DX'
              6671 0035  ld   $35         ;049c BCC
              6672 003f  ld   $3f         ;049d EQ
              6673 00a5  ld   $a5
              6674 0021  ld   $21         ;049f LDW
              6675 0042  ld   $42         ;049f 'Width'
              6676 00e6  ld   $e6         ;04a1 SUBI
              6677 0001  ld   $01
              6678 002b  ld   $2b         ;04a3 STW
              6679 0042  ld   $42         ;04a3 'Width'
              667a 0090  ld   $90         ;04a5 BRA
              667b 00ab  ld   $ab
              667c 0021  ld   $21         ;04a7 LDW
              667d 0040  ld   $40         ;04a7 'Height'
              667e 00e6  ld   $e6         ;04a9 SUBI
              667f 0001  ld   $01
              6680 002b  ld   $2b         ;04ab STW
              6681 0040  ld   $40         ;04ab 'Height'
              6682 002b  ld   $2b         ;04ad STW
              6683 0044  ld   $44         ;04ad 'len'
              6684 0035  ld   $35         ;04af BCC
              6685 0056  ld   $56         ;04b0 LE
              6686 00e2  ld   $e2
              6687 0021  ld   $21         ;04b2 LDW
              6688 004c  ld   $4c         ;04b2 'DX'
              6689 0035  ld   $35         ;04b4 BCC
              668a 0053  ld   $53         ;04b5 GE
              668b 00bb  ld   $bb
              668c 0021  ld   $21         ;04b7 LDW
              668d 003e  ld   $3e         ;04b7 'Pen'
              668e 00e6  ld   $e6         ;04b9 SUBI
              668f 0001  ld   $01
              6690 002b  ld   $2b         ;04bb STW
              6691 003e  ld   $3e         ;04bb 'Pen'
              6692 0021  ld   $21         ;04bd LDW
              6693 004c  ld   $4c         ;04bd 'DX'
              6694 0035  ld   $35         ;04bf BCC
              6695 0056  ld   $56         ;04c0 LE
              6696 00c6  ld   $c6
              6697 0021  ld   $21         ;04c2 LDW
              6698 003e  ld   $3e         ;04c2 'Pen'
              6699 00e3  ld   $e3         ;04c4 ADDI
              669a 0001  ld   $01
              669b 002b  ld   $2b         ;04c6 STW
              669c 003e  ld   $3e         ;04c6 'Pen'
              669d 0021  ld   $21         ;04c8 LDW
              669e 0048  ld   $48         ;04c8 'DY'
              669f 0035  ld   $35         ;04ca BCC
              66a0 0053  ld   $53         ;04cb GE
              66a1 00d2  ld   $d2
              66a2 0011  ld   $11         ;04cd LDWI
              66a3 0000  ld   $00
              66a4 00ff  ld   $ff
              66a5 0099  ld   $99         ;04d0 ADDW
              66a6 003e  ld   $3e         ;04d0 'Pen'
              66a7 002b  ld   $2b         ;04d2 STW
              66a8 003e  ld   $3e         ;04d2 'Pen'
              66a9 0021  ld   $21         ;04d4 LDW
              66aa 0048  ld   $48         ;04d4 'DY'
              66ab 0035  ld   $35         ;04d6 BCC
              66ac 0056  ld   $56         ;04d7 LE
              66ad 00de  ld   $de
              66ae 0011  ld   $11         ;04d9 LDWI
              66af 0000  ld   $00
              66b0 0001  ld   $01
              66b1 0099  ld   $99         ;04dc ADDW
              66b2 003e  ld   $3e         ;04dc 'Pen'
              66b3 002b  ld   $2b         ;04de STW
              66b4 003e  ld   $3e         ;04de 'Pen'
              66b5 00cf  ld   $cf         ;04e0 CALL
              66b6 004e  ld   $4e         ;04e0 'UpdateClock'
              66b7 0090  ld   $90         ;04e2 BRA
              66b8 0018  ld   $18
              66b9 0063  ld   $63         ;04e4 POP
              66ba 00ff  ld   $ff         ;04e5 RET
              66bb 002b  ld   $2b         ;04e6 STW
              66bc 005a  ld   $5a         ;04e6 'GrayOut'
              66bd 0011  ld   $11         ;04e8 LDWI
              66be 001a  ld   $1a
              66bf 0020  ld   $20
              66c0 002b  ld   $2b         ;04eb STW
              66c1 0062  ld   $62         ;04eb 'Separator'
              66c2 0093  ld   $93         ;04ed INC
              66c3 001b  ld   $1b
              66c4 00ff  ld   $ff         ;04ef RET
              66c5 0005  ld   $05         ;| RAM segment address (high byte first)
              66c6 0000  ld   $00         ;|
              66c7 00f6  ld   $f6         ;| Length (1..256)
              66c8 00cd  ld   $cd         ;0500 DEF
              66c9 00a4  ld   $a4
              66ca 001a  ld   $1a         ;0502 LD
              66cb 000e  ld   $0e
              66cc 00b8  ld   $b8         ;0504 SUBW
              66cd 0064  ld   $64         ;0504 'LastFrame'
              66ce 0082  ld   $82         ;0506 ANDI
              66cf 00ff  ld   $ff
              66d0 002b  ld   $2b         ;0508 STW
              66d1 0066  ld   $66         ;0508 'Elapsed'
              66d2 00e6  ld   $e6         ;050a SUBI
              66d3 003c  ld   $3c
              66d4 0035  ld   $35         ;050c BCC
              66d5 0053  ld   $53         ;050d GE
              66d6 0019  ld   $19
              66d7 001a  ld   $1a         ;050f LD
              66d8 0011  ld   $11
              66d9 0082  ld   $82         ;0511 ANDI
              66da 0080  ld   $80
              66db 0035  ld   $35         ;0513 BCC
              66dc 003f  ld   $3f         ;0514 EQ
              66dd 0015  ld   $15
              66de 00ff  ld   $ff         ;0516 RET
              66df 0059  ld   $59         ;0517 LDI
              66e0 000f  ld   $0f
              66e1 0090  ld   $90         ;0519 BRA
              66e2 001b  ld   $1b
              66e3 0059  ld   $59         ;051b LDI
              66e4 003f  ld   $3f
              66e5 002b  ld   $2b         ;051d STW
              66e6 0068  ld   $68         ;051d 'Color'
              66e7 0075  ld   $75         ;051f PUSH
              66e8 0021  ld   $21         ;0520 LDW
              66e9 006a  ld   $6a         ;0520 'Clock0'
              66ea 0099  ld   $99         ;0522 ADDW
              66eb 0066  ld   $66         ;0522 'Elapsed'
              66ec 002b  ld   $2b         ;0524 STW
              66ed 006a  ld   $6a         ;0524 'Clock0'
              66ee 0021  ld   $21         ;0526 LDW
              66ef 0064  ld   $64         ;0526 'LastFrame'
              66f0 0099  ld   $99         ;0528 ADDW
              66f1 0066  ld   $66         ;0528 'Elapsed'
              66f2 002b  ld   $2b         ;052a STW
              66f3 0064  ld   $64         ;052a 'LastFrame'
              66f4 0011  ld   $11         ;052c LDWI
              66f5 00f1  ld   $f1
              66f6 00f1  ld   $f1
              66f7 0099  ld   $99         ;052f ADDW
              66f8 006a  ld   $6a         ;052f 'Clock0'
              66f9 0035  ld   $35         ;0531 BCC
              66fa 0050  ld   $50         ;0532 LT
              66fb fe00  bra  ac          ;+-----------------------------------+
              66fc fcfd  bra  $66fd       ;|                                   |
              66fd 1418  ld   $18,y       ;| Trampoline for page $6600 lookups |
              66fe e006  jmp  y,$06       ;|                                   |
              66ff c218  st   [$18]       ;+-----------------------------------+
              6700 0038  ld   $38
              6701 002b  ld   $2b         ;0534 STW
              6702 006a  ld   $6a         ;0534 'Clock0'
              6703 0059  ld   $59         ;0536 LDI
              6704 0001  ld   $01
              6705 00cf  ld   $cf         ;0538 CALL
              6706 006c  ld   $6c         ;0538 'AddMinutes'
              6707 001a  ld   $1a         ;053a LD
              6708 0063  ld   $63         ;053a 'Separator'+1
              6709 00fc  ld   $fc         ;053c XORW
              670a 0062  ld   $62         ;053c 'Separator'
              670b 005e  ld   $5e         ;053e ST
              670c 0063  ld   $63         ;053e 'Separator'+1
              670d 001a  ld   $1a         ;0540 LD
              670e 0011  ld   $11
              670f 008c  ld   $8c         ;0542 XORI
              6710 0077  ld   $77
              6711 0035  ld   $35         ;0544 BCC
              6712 0072  ld   $72         ;0545 NE
              6713 004b  ld   $4b
              6714 002b  ld   $2b         ;0547 STW
              6715 006a  ld   $6a         ;0547 'Clock0'
              6716 0059  ld   $59         ;0549 LDI
              6717 0001  ld   $01
              6718 0090  ld   $90         ;054b BRA
              6719 0070  ld   $70
              671a 008c  ld   $8c         ;054d XORI
              671b 000c  ld   $0c
              671c 0035  ld   $35         ;054f BCC
              671d 0072  ld   $72         ;0550 NE
              671e 0057  ld   $57
              671f 002b  ld   $2b         ;0552 STW
              6720 006a  ld   $6a         ;0552 'Clock0'
              6721 0011  ld   $11         ;0554 LDWI
              6722 00ff  ld   $ff
              6723 00ff  ld   $ff
              6724 0090  ld   $90         ;0557 BRA
              6725 0070  ld   $70
              6726 008c  ld   $8c         ;0559 XORI
              6727 0006  ld   $06
              6728 0035  ld   $35         ;055b BCC
              6729 0072  ld   $72         ;055c NE
              672a 0063  ld   $63
              672b 002b  ld   $2b         ;055e STW
              672c 006a  ld   $6a         ;055e 'Clock0'
              672d 0011  ld   $11         ;0560 LDWI
              672e 00c4  ld   $c4
              672f 00ff  ld   $ff
              6730 0090  ld   $90         ;0563 BRA
              6731 0070  ld   $70
              6732 008c  ld   $8c         ;0565 XORI
              6733 0003  ld   $03
              6734 0035  ld   $35         ;0567 BCC
              6735 0072  ld   $72         ;0568 NE
              6736 006e  ld   $6e
              6737 002b  ld   $2b         ;056a STW
              6738 006a  ld   $6a         ;056a 'Clock0'
              6739 0059  ld   $59         ;056c LDI
              673a 003c  ld   $3c
              673b 0090  ld   $90         ;056e BRA
              673c 0070  ld   $70
              673d 0059  ld   $59         ;0570 LDI
              673e 0000  ld   $00
              673f 0035  ld   $35         ;0572 BCC
              6740 003f  ld   $3f         ;0573 EQ
              6741 007e  ld   $7e
              6742 00cf  ld   $cf         ;0575 CALL
              6743 006c  ld   $6c         ;0575 'AddMinutes'
              6744 0059  ld   $59         ;0577 LDI
              6745 0000  ld   $00
              6746 002b  ld   $2b         ;0579 STW
              6747 006a  ld   $6a         ;0579 'Clock0'
              6748 0011  ld   $11         ;057b LDWI
              6749 0000  ld   $00
              674a 003a  ld   $3a
              674b 002b  ld   $2b         ;057e STW
              674c 0062  ld   $62         ;057e 'Separator'
              674d 001a  ld   $1a         ;0580 LD
              674e 0011  ld   $11
              674f 0088  ld   $88         ;0582 ORI
              6750 000f  ld   $0f
              6751 005e  ld   $5e         ;0584 ST
              6752 0011  ld   $11
              6753 0011  ld   $11         ;0586 LDWI
              6754 005c  ld   $5c
              6755 0044  ld   $44
              6756 002b  ld   $2b         ;0589 STW
              6757 006e  ld   $6e         ;0589 'Pos'
              6758 0021  ld   $21         ;058b LDW
              6759 0070  ld   $70         ;058b 'Clock1'
              675a 002b  ld   $2b         ;058d STW
              675b 0072  ld   $72         ;058d 'Value'
              675c 0011  ld   $11         ;058f LDWI
              675d 0058  ld   $58
              675e 0002  ld   $02
              675f 00cf  ld   $cf         ;0592 CALL
              6760 0074  ld   $74         ;0592 'NextDigit'
              6761 0059  ld   $59         ;0594 LDI
              6762 003c  ld   $3c
              6763 00cf  ld   $cf         ;0596 CALL
              6764 0074  ld   $74         ;0596 'NextDigit'
              6765 001a  ld   $1a         ;0598 LD
              6766 0063  ld   $63         ;0598 'Separator'+1
              6767 00cf  ld   $cf         ;059a CALL
              6768 0076  ld   $76         ;059a 'PrintChar'
              6769 0059  ld   $59         ;059c LDI
              676a 000a  ld   $0a
              676b 00cf  ld   $cf         ;059e CALL
              676c 0074  ld   $74         ;059e 'NextDigit'
              676d 0059  ld   $59         ;05a0 LDI
              676e 0001  ld   $01
              676f 00cf  ld   $cf         ;05a2 CALL
              6770 0074  ld   $74         ;05a2 'NextDigit'
              6771 0063  ld   $63         ;05a4 POP
              6772 00ff  ld   $ff         ;05a5 RET
              6773 002b  ld   $2b         ;05a6 STW
              6774 004e  ld   $4e         ;05a6 'UpdateClock'
              6775 00cd  ld   $cd         ;05a8 DEF
              6776 00ef  ld   $ef
              6777 00e6  ld   $e6         ;05aa SUBI
              6778 0020  ld   $20
              6779 002b  ld   $2b         ;05ac STW
              677a 0060  ld   $60         ;05ac 'i'
              677b 0011  ld   $11         ;05ae LDWI
              677c 0000  ld   $00
              677d 0007  ld   $07
              677e 002b  ld   $2b         ;05b1 STW
              677f 0078  ld   $78         ;05b1 'fontData'
              6780 0021  ld   $21         ;05b3 LDW
              6781 0060  ld   $60         ;05b3 'i'
              6782 00e9  ld   $e9         ;05b5 LSLW
              6783 00e9  ld   $e9         ;05b6 LSLW
              6784 0099  ld   $99         ;05b7 ADDW
              6785 0060  ld   $60         ;05b7 'i'
              6786 0099  ld   $99         ;05b9 ADDW
              6787 0078  ld   $78         ;05b9 'fontData'
              6788 002b  ld   $2b         ;05bb STW
              6789 0078  ld   $78         ;05bb 'fontData'
              678a 0011  ld   $11         ;05bd LDWI
              678b 0000  ld   $00
              678c 0008  ld   $08
              678d 0099  ld   $99         ;05c0 ADDW
              678e 006e  ld   $6e         ;05c0 'Pos'
              678f 002b  ld   $2b         ;05c2 STW
              6790 007a  ld   $7a         ;05c2 'q'
              6791 0059  ld   $59         ;05c4 LDI
              6792 0000  ld   $00
              6793 005e  ld   $5e         ;05c6 ST
              6794 0024  ld   $24
              6795 0021  ld   $21         ;05c8 LDW
              6796 0068  ld   $68         ;05c8 'Color'
              6797 005e  ld   $5e         ;05ca ST
              6798 0025  ld   $25
              6799 0021  ld   $21         ;05cc LDW
              679a 006e  ld   $6e         ;05cc 'Pos'
              679b 002b  ld   $2b         ;05ce STW
              679c 0028  ld   $28
              679d 00e3  ld   $e3         ;05d0 ADDI
              679e 0006  ld   $06
              679f 002b  ld   $2b         ;05d2 STW
              67a0 006e  ld   $6e         ;05d2 'Pos'
              67a1 0011  ld   $11         ;05d4 LDWI
              67a2 00e1  ld   $e1
              67a3 0004  ld   $04
              67a4 002b  ld   $2b         ;05d7 STW
              67a5 0022  ld   $22
              67a6 0059  ld   $59         ;05d9 LDI
              67a7 00fb  ld   $fb
              67a8 002b  ld   $2b         ;05db STW
              67a9 0060  ld   $60         ;05db 'i'
              67aa 0021  ld   $21         ;05dd LDW
              67ab 0078  ld   $78         ;05dd 'fontData'
              67ac 007f  ld   $7f         ;05df LUP
              67ad 0000  ld   $00
              67ae 0093  ld   $93         ;05e1 INC
              67af 0078  ld   $78         ;05e1 'fontData'
              67b0 005e  ld   $5e         ;05e3 ST
              67b1 0026  ld   $26
              67b2 00b4  ld   $b4         ;05e5 SYS
              67b3 00cc  ld   $cc
              67b4 0093  ld   $93         ;05e7 INC
              67b5 0028  ld   $28
              67b6 0093  ld   $93         ;05e9 INC
              67b7 0060  ld   $60         ;05e9 'i'
              67b8 0021  ld   $21         ;05eb LDW
              67b9 0060  ld   $60         ;05eb 'i'
              67ba 0035  ld   $35         ;05ed BCC
              67bb 0072  ld   $72         ;05ee NE
              67bc 00db  ld   $db
              67bd 00ff  ld   $ff         ;05f0 RET
              67be 002b  ld   $2b         ;05f1 STW
              67bf 0076  ld   $76         ;05f1 'PrintChar'
              67c0 0093  ld   $93         ;05f3 INC
              67c1 001b  ld   $1b
              67c2 00ff  ld   $ff         ;05f5 RET
              67c3 0006  ld   $06         ;| RAM segment address (high byte first)
              67c4 0000  ld   $00         ;|
              67c5 00fe  ld   $fe         ;| Length (1..256)
              67c6 00cd  ld   $cd         ;0600 DEF
              67c7 001d  ld   $1d
              67c8 0075  ld   $75         ;0602 PUSH
              67c9 002b  ld   $2b         ;0603 STW
              67ca 007c  ld   $7c         ;0603 'Radix'
              67cb 0059  ld   $59         ;0605 LDI
              67cc 0030  ld   $30
              67cd 002b  ld   $2b         ;0607 STW
              67ce 007e  ld   $7e         ;0607 'Digit'
              67cf 0021  ld   $21         ;0609 LDW
              67d0 0072  ld   $72         ;0609 'Value'
              67d1 00b8  ld   $b8         ;060b SUBW
              67d2 007c  ld   $7c         ;060b 'Radix'
              67d3 0035  ld   $35         ;060d BCC
              67d4 0050  ld   $50         ;060e LT
              67d5 0017  ld   $17
              67d6 002b  ld   $2b         ;0610 STW
              67d7 0072  ld   $72         ;0610 'Value'
              67d8 0093  ld   $93         ;0612 INC
              67d9 007e  ld   $7e         ;0612 'Digit'
              67da 00b8  ld   $b8         ;0614 SUBW
              67db 007c  ld   $7c         ;0614 'Radix'
              67dc 0035  ld   $35         ;0616 BCC
              67dd 0053  ld   $53         ;0617 GE
              67de 000e  ld   $0e
              67df 0021  ld   $21         ;0619 LDW
              67e0 007e  ld   $7e         ;0619 'Digit'
              67e1 00cf  ld   $cf         ;061b CALL
              67e2 0076  ld   $76         ;061b 'PrintChar'
              67e3 0063  ld   $63         ;061d POP
              67e4 00ff  ld   $ff         ;061e RET
              67e5 002b  ld   $2b         ;061f STW
              67e6 0074  ld   $74         ;061f 'NextDigit'
              67e7 00cd  ld   $cd         ;0621 DEF
              67e8 003a  ld   $3a
              67e9 0099  ld   $99         ;0623 ADDW
              67ea 0070  ld   $70         ;0623 'Clock1'
              67eb 002b  ld   $2b         ;0625 STW
              67ec 0070  ld   $70         ;0625 'Clock1'
              67ed 0035  ld   $35         ;0627 BCC
              67ee 0053  ld   $53         ;0628 GE
              67ef 002f  ld   $2f
              67f0 0011  ld   $11         ;062a LDWI
              67f1 00a0  ld   $a0
              67f2 0005  ld   $05
              67f3 0099  ld   $99         ;062d ADDW
              67f4 0070  ld   $70         ;062d 'Clock1'
              67f5 002b  ld   $2b         ;062f STW
              67f6 0070  ld   $70         ;062f 'Clock1'
              67f7 0011  ld   $11         ;0631 LDWI
              67f8 0060  ld   $60
              67f9 00fa  ld   $fa
              67fa 0099  ld   $99         ;0634 ADDW
              67fb fe00  bra  ac          ;+-----------------------------------+
              67fc fcfd  bra  $67fd       ;|                                   |
              67fd 1418  ld   $18,y       ;| Trampoline for page $6700 lookups |
              67fe e006  jmp  y,$06       ;|                                   |
              67ff c218  st   [$18]       ;+-----------------------------------+
              6800 0070  ld   $70         ;0634 'Clock1'
              6801 0035  ld   $35         ;0636 BCC
              6802 0050  ld   $50         ;0637 LT
              6803 0039  ld   $39
              6804 002b  ld   $2b         ;0639 STW
              6805 0070  ld   $70         ;0639 'Clock1'
              6806 00ff  ld   $ff         ;063b RET
              6807 002b  ld   $2b         ;063c STW
              6808 006c  ld   $6c         ;063c 'AddMinutes'
              6809 00cd  ld   $cd         ;063e DEF
              680a 008e  ld   $8e
              680b 0075  ld   $75         ;0640 PUSH
              680c 0059  ld   $59         ;0641 LDI
              680d 0000  ld   $00
              680e 002b  ld   $2b         ;0643 STW
              680f 0081  ld   $81         ;0643 'X'
              6810 002b  ld   $2b         ;0645 STW
              6811 0083  ld   $83         ;0645 'XX'
              6812 002b  ld   $2b         ;0647 STW
              6813 0085  ld   $85         ;0647 'Y'
              6814 002b  ld   $2b         ;0649 STW
              6815 0052  ld   $52         ;0649 'YY'
              6816 002b  ld   $2b         ;064b STW
              6817 0060  ld   $60         ;064b 'i'
              6818 0021  ld   $21         ;064d LDW
              6819 0060  ld   $60         ;064d 'i'
              681a 00e3  ld   $e3         ;064f ADDI
              681b 0001  ld   $01
              681c 002b  ld   $2b         ;0651 STW
              681d 0060  ld   $60         ;0651 'i'
              681e 008c  ld   $8c         ;0653 XORI
              681f 0040  ld   $40
              6820 0035  ld   $35         ;0655 BCC
              6821 003f  ld   $3f         ;0656 EQ
              6822 008c  ld   $8c
              6823 0021  ld   $21         ;0658 LDW
              6824 0081  ld   $81         ;0658 'X'
              6825 002b  ld   $2b         ;065a STW
              6826 0034  ld   $34         ;065a 'A'
              6827 0021  ld   $21         ;065c LDW
              6828 0085  ld   $85         ;065c 'Y'
              6829 0099  ld   $99         ;065e ADDW
              682a 0085  ld   $85         ;065e 'Y'
              682b 002b  ld   $2b         ;0660 STW
              682c 0036  ld   $36         ;0660 'B'
              682d 00cf  ld   $cf         ;0662 CALL
              682e 003c  ld   $3c         ;0662 'MulShift7'
              682f 0099  ld   $99         ;0664 ADDW
              6830 0050  ld   $50         ;0664 'Y0'
              6831 002b  ld   $2b         ;0666 STW
              6832 0085  ld   $85         ;0666 'Y'
              6833 0021  ld   $21         ;0668 LDW
              6834 0083  ld   $83         ;0668 'XX'
              6835 00b8  ld   $b8         ;066a SUBW
              6836 0052  ld   $52         ;066a 'YY'
              6837 0099  ld   $99         ;066c ADDW
              6838 0054  ld   $54         ;066c 'X0'
              6839 002b  ld   $2b         ;066e STW
              683a 0081  ld   $81         ;066e 'X'
              683b 002b  ld   $2b         ;0670 STW
              683c 0034  ld   $34         ;0670 'A'
              683d 002b  ld   $2b         ;0672 STW
              683e 0036  ld   $36         ;0672 'B'
              683f 00cf  ld   $cf         ;0674 CALL
              6840 003c  ld   $3c         ;0674 'MulShift7'
              6841 002b  ld   $2b         ;0676 STW
              6842 0083  ld   $83         ;0676 'XX'
              6843 0021  ld   $21         ;0678 LDW
              6844 0085  ld   $85         ;0678 'Y'
              6845 002b  ld   $2b         ;067a STW
              6846 0034  ld   $34         ;067a 'A'
              6847 002b  ld   $2b         ;067c STW
              6848 0036  ld   $36         ;067c 'B'
              6849 00cf  ld   $cf         ;067e CALL
              684a 003c  ld   $3c         ;067e 'MulShift7'
              684b 002b  ld   $2b         ;0680 STW
              684c 0052  ld   $52         ;0680 'YY'
              684d 0011  ld   $11         ;0682 LDWI
              684e 0000  ld   $00
              684f 00fe  ld   $fe
              6850 0099  ld   $99         ;0685 ADDW
              6851 0083  ld   $83         ;0685 'XX'
              6852 0099  ld   $99         ;0687 ADDW
              6853 0052  ld   $52         ;0687 'YY'
              6854 0035  ld   $35         ;0689 BCC
              6855 0056  ld   $56         ;068a LE
              6856 004b  ld   $4b
              6857 0021  ld   $21         ;068c LDW
              6858 0060  ld   $60         ;068c 'i'
              6859 0063  ld   $63         ;068e POP
              685a 00ff  ld   $ff         ;068f RET
              685b 002b  ld   $2b         ;0690 STW
              685c 0058  ld   $58         ;0690 'CalcPixel'
              685d 0059  ld   $59         ;0692 LDI
              685e 0000  ld   $00
              685f 002b  ld   $2b         ;0694 STW
              6860 006a  ld   $6a         ;0694 'Clock0'
              6861 002b  ld   $2b         ;0696 STW
              6862 0070  ld   $70         ;0696 'Clock1'
              6863 002b  ld   $2b         ;0698 STW
              6864 007e  ld   $7e         ;0698 'Digit'
              6865 001a  ld   $1a         ;069a LD
              6866 000e  ld   $0e
              6867 002b  ld   $2b         ;069c STW
              6868 0064  ld   $64         ;069c 'LastFrame'
              6869 0011  ld   $11         ;069e LDWI
              686a 004c  ld   $4c
              686b 00ff  ld   $ff
              686c 002b  ld   $2b         ;06a1 STW
              686d 0050  ld   $50         ;06a1 'Y0'
              686e 0011  ld   $11         ;06a3 LDWI
              686f 00c0  ld   $c0
              6870 00fe  ld   $fe
              6871 002b  ld   $2b         ;06a6 STW
              6872 0054  ld   $54         ;06a6 'X0'
              6873 0059  ld   $59         ;06a8 LDI
              6874 0003  ld   $03
              6875 002b  ld   $2b         ;06aa STW
              6876 004a  ld   $4a         ;06aa 'Step'
              6877 00cf  ld   $cf         ;06ac CALL
              6878 005c  ld   $5c         ;06ac 'CalcSet'
              6879 0011  ld   $11         ;06ae LDWI
              687a 006c  ld   $6c
              687b 00ff  ld   $ff
              687c 002b  ld   $2b         ;06b1 STW
              687d 0050  ld   $50         ;06b1 'Y0'
              687e 0011  ld   $11         ;06b3 LDWI
              687f 009e  ld   $9e
              6880 00ff  ld   $ff
              6881 002b  ld   $2b         ;06b6 STW
              6882 0054  ld   $54         ;06b6 'X0'
              6883 0059  ld   $59         ;06b8 LDI
              6884 0001  ld   $01
              6885 002b  ld   $2b         ;06ba STW
              6886 004a  ld   $4a         ;06ba 'Step'
              6887 00cf  ld   $cf         ;06bc CALL
              6888 005c  ld   $5c         ;06bc 'CalcSet'
              6889 0011  ld   $11         ;06be LDWI
              688a 00c4  ld   $c4
              688b 00ff  ld   $ff
              688c 002b  ld   $2b         ;06c1 STW
              688d 0050  ld   $50         ;06c1 'Y0'
              688e 0011  ld   $11         ;06c3 LDWI
              688f 0000  ld   $00
              6890 00ff  ld   $ff
              6891 002b  ld   $2b         ;06c6 STW
              6892 0054  ld   $54         ;06c6 'X0'
              6893 0059  ld   $59         ;06c8 LDI
              6894 0001  ld   $01
              6895 002b  ld   $2b         ;06ca STW
              6896 004a  ld   $4a         ;06ca 'Step'
              6897 00cf  ld   $cf         ;06cc CALL
              6898 005c  ld   $5c         ;06cc 'CalcSet'
              6899 0011  ld   $11         ;06ce LDWI
              689a 00c0  ld   $c0
              689b 00fe  ld   $fe
              689c 002b  ld   $2b         ;06d1 STW
              689d 0050  ld   $50         ;06d1 'Y0'
              689e 0011  ld   $11         ;06d3 LDWI
              689f 0098  ld   $98
              68a0 00fe  ld   $fe
              68a1 002b  ld   $2b         ;06d6 STW
              68a2 0054  ld   $54         ;06d6 'X0'
              68a3 0059  ld   $59         ;06d8 LDI
              68a4 0009  ld   $09
              68a5 002b  ld   $2b         ;06da STW
              68a6 004a  ld   $4a         ;06da 'Step'
              68a7 00cf  ld   $cf         ;06dc CALL
              68a8 005c  ld   $5c         ;06dc 'CalcSet'
              68a9 0059  ld   $59         ;06de LDI
              68aa 0000  ld   $00
              68ab 002b  ld   $2b         ;06e0 STW
              68ac 0050  ld   $50         ;06e0 'Y0'
              68ad 0011  ld   $11         ;06e2 LDWI
              68ae 009c  ld   $9c
              68af 00ff  ld   $ff
              68b0 002b  ld   $2b         ;06e5 STW
              68b1 0054  ld   $54         ;06e5 'X0'
              68b2 0059  ld   $59         ;06e7 LDI
              68b3 0001  ld   $01
              68b4 002b  ld   $2b         ;06e9 STW
              68b5 004a  ld   $4a         ;06e9 'Step'
              68b6 00cf  ld   $cf         ;06eb CALL
              68b7 005c  ld   $5c         ;06eb 'CalcSet'
              68b8 0011  ld   $11         ;06ed LDWI
              68b9 00c4  ld   $c4
              68ba 00ff  ld   $ff
              68bb 002b  ld   $2b         ;06f0 STW
              68bc 0050  ld   $50         ;06f0 'Y0'
              68bd 0059  ld   $59         ;06f2 LDI
              68be 0000  ld   $00
              68bf 002b  ld   $2b         ;06f4 STW
              68c0 0054  ld   $54         ;06f4 'X0'
              68c1 0059  ld   $59         ;06f6 LDI
              68c2 0001  ld   $01
              68c3 002b  ld   $2b         ;06f8 STW
              68c4 004a  ld   $4a         ;06f8 'Step'
              68c5 00cf  ld   $cf         ;06fa CALL
              68c6 005c  ld   $5c         ;06fa 'CalcSet'
              68c7 0090  ld   $90         ;06fc BRA
              68c8 009c  ld   $9c
              68c9 0000  ld   $00         ;End of Apps/Mandelbrot/Mandelbrot_v1.gcl, size 1255
                                          ;+-----------------------------------+
                                          ;| Apps/Credits/Credits_v3.gcl       |
                                          ;+-----------------------------------+
              68ca dc4d  st   $4d,[y,x++] ;'M'
              68cb dc61  st   $61,[y,x++] ;'a'
              68cc dc6e  st   $6e,[y,x++] ;'n'
              68cd dc64  st   $64,[y,x++] ;'d'
              68ce dc65  st   $65,[y,x++] ;'e'
              68cf dc6c  st   $6c,[y,x++] ;'l'
              68d0 dc62  st   $62,[y,x++] ;'b'
              68d1 dc72  st   $72,[y,x++] ;'r'
              68d2 00e3  ld   $e3
              68d3 c218  st   [$18]
              68d4 0063  ld   $63
              68d5 14fa  ld   $fa,y
              68d6 e020  jmp  y,$20
              68d7 c219  st   [$19]
Credits:      68d8 0002  ld   $02         ;| RAM segment address (high byte first)
              68d9 0000  ld   $00         ;|
              68da 00d4  ld   $d4         ;| Length (1..256)
              68db 00cd  ld   $cd         ;0200 DEF
              68dc 0025  ld   $25
              68dd 0075  ld   $75         ;0202 PUSH
              68de 0021  ld   $21         ;0203 LDW
              68df 0030  ld   $30         ;0203 'Text'
              68e0 00ad  ld   $ad         ;0205 PEEK
              68e1 002b  ld   $2b         ;0206 STW
              68e2 0032  ld   $32         ;0206 'Char'
              68e3 0035  ld   $35         ;0208 BCC
              68e4 003f  ld   $3f         ;0209 EQ
              68e5 0023  ld   $23
              68e6 0093  ld   $93         ;020b INC
              68e7 0030  ld   $30         ;020b 'Text'
              68e8 0021  ld   $21         ;020d LDW
              68e9 0032  ld   $32         ;020d 'Char'
              68ea 008c  ld   $8c         ;020f XORI
              68eb 000a  ld   $0a
              68ec 0035  ld   $35         ;0211 BCC
              68ed 0072  ld   $72         ;0212 NE
              68ee 001f  ld   $1f
              68ef 0059  ld   $59         ;0214 LDI
              68f0 0002  ld   $02
              68f1 005e  ld   $5e         ;0216 ST
              68f2 0034  ld   $34         ;0216 'Pos'
              68f3 0011  ld   $11         ;0218 LDWI
              68f4 0000  ld   $00
              68f5 0008  ld   $08
              68f6 0099  ld   $99         ;021b ADDW
              68f7 0034  ld   $34         ;021b 'Pos'
              68f8 002b  ld   $2b         ;021d STW
              68f9 0034  ld   $34         ;021d 'Pos'
              68fa 0090  ld   $90         ;021f BRA
              68fb fe00  bra  ac          ;+-----------------------------------+
              68fc fcfd  bra  $68fd       ;|                                   |
              68fd 1418  ld   $18,y       ;| Trampoline for page $6800 lookups |
              68fe e006  jmp  y,$06       ;|                                   |
              68ff c218  st   [$18]       ;+-----------------------------------+
              6900 0021  ld   $21
              6901 00cf  ld   $cf         ;0221 CALL
              6902 0036  ld   $36         ;0221 'PrintChar'
              6903 0090  ld   $90         ;0223 BRA
              6904 0001  ld   $01
              6905 0063  ld   $63         ;0225 POP
              6906 00ff  ld   $ff         ;0226 RET
              6907 002b  ld   $2b         ;0227 STW
              6908 0038  ld   $38         ;0227 'PrintText'
              6909 00cd  ld   $cd         ;0229 DEF
              690a 00cd  ld   $cd
              690b 0054  ld   $54         ;022b 'T'
              690c 0068  ld   $68         ;022c 'h'
              690d 0069  ld   $69         ;022d 'i'
              690e 0073  ld   $73         ;022e 's'
              690f 0020  ld   $20         ;022f ' '
              6910 0047  ld   $47         ;0230 'G'
              6911 0069  ld   $69         ;0231 'i'
              6912 0067  ld   $67         ;0232 'g'
              6913 0061  ld   $61         ;0233 'a'
              6914 0074  ld   $74         ;0234 't'
              6915 0072  ld   $72         ;0235 'r'
              6916 006f  ld   $6f         ;0236 'o'
              6917 006e  ld   $6e         ;0237 'n'
              6918 0020  ld   $20         ;0238 ' '
              6919 0054  ld   $54         ;0239 'T'
              691a 0054  ld   $54         ;023a 'T'
              691b 004c  ld   $4c         ;023b 'L'
              691c 0020  ld   $20         ;023c ' '
              691d 0063  ld   $63         ;023d 'c'
              691e 006f  ld   $6f         ;023e 'o'
              691f 006d  ld   $6d         ;023f 'm'
              6920 0070  ld   $70         ;0240 'p'
              6921 0075  ld   $75         ;0241 'u'
              6922 0074  ld   $74         ;0242 't'
              6923 0065  ld   $65         ;0243 'e'
              6924 0072  ld   $72         ;0244 'r'
              6925 000a  ld   $0a         ;0245 10
              6926 006b  ld   $6b         ;0246 'k'
              6927 0069  ld   $69         ;0247 'i'
              6928 0074  ld   $74         ;0248 't'
              6929 0020  ld   $20         ;0249 ' '
              692a 0077  ld   $77         ;024a 'w'
              692b 0061  ld   $61         ;024b 'a'
              692c 0073  ld   $73         ;024c 's'
              692d 0020  ld   $20         ;024d ' '
              692e 0062  ld   $62         ;024e 'b'
              692f 0072  ld   $72         ;024f 'r'
              6930 006f  ld   $6f         ;0250 'o'
              6931 0075  ld   $75         ;0251 'u'
              6932 0067  ld   $67         ;0252 'g'
              6933 0068  ld   $68         ;0253 'h'
              6934 0074  ld   $74         ;0254 't'
              6935 0020  ld   $20         ;0255 ' '
              6936 0074  ld   $74         ;0256 't'
              6937 006f  ld   $6f         ;0257 'o'
              6938 0020  ld   $20         ;0258 ' '
              6939 0079  ld   $79         ;0259 'y'
              693a 006f  ld   $6f         ;025a 'o'
              693b 0075  ld   $75         ;025b 'u'
              693c 0020  ld   $20         ;025c ' '
              693d 0062  ld   $62         ;025d 'b'
              693e 0079  ld   $79         ;025e 'y'
              693f 000a  ld   $0a         ;025f 10
              6940 004d  ld   $4d         ;0260 'M'
              6941 0061  ld   $61         ;0261 'a'
              6942 0072  ld   $72         ;0262 'r'
              6943 0063  ld   $63         ;0263 'c'
              6944 0065  ld   $65         ;0264 'e'
              6945 006c  ld   $6c         ;0265 'l'
              6946 0020  ld   $20         ;0266 ' '
              6947 0076  ld   $76         ;0267 'v'
              6948 0061  ld   $61         ;0268 'a'
              6949 006e  ld   $6e         ;0269 'n'
              694a 0020  ld   $20         ;026a ' '
              694b 004b  ld   $4b         ;026b 'K'
              694c 0065  ld   $65         ;026c 'e'
              694d 0072  ld   $72         ;026d 'r'
              694e 0076  ld   $76         ;026e 'v'
              694f 0069  ld   $69         ;026f 'i'
              6950 006e  ld   $6e         ;0270 'n'
              6951 0063  ld   $63         ;0271 'c'
              6952 006b  ld   $6b         ;0272 'k'
              6953 0020  ld   $20         ;0273 ' '
              6954 0061  ld   $61         ;0274 'a'
              6955 006e  ld   $6e         ;0275 'n'
              6956 0064  ld   $64         ;0276 'd'
              6957 000a  ld   $0a         ;0277 10
              6958 0057  ld   $57         ;0278 'W'
              6959 0061  ld   $61         ;0279 'a'
              695a 006c  ld   $6c         ;027a 'l'
              695b 0074  ld   $74         ;027b 't'
              695c 0065  ld   $65         ;027c 'e'
              695d 0072  ld   $72         ;027d 'r'
              695e 0020  ld   $20         ;027e ' '
              695f 0042  ld   $42         ;027f 'B'
              6960 0065  ld   $65         ;0280 'e'
              6961 006c  ld   $6c         ;0281 'l'
              6962 0067  ld   $67         ;0282 'g'
              6963 0065  ld   $65         ;0283 'e'
              6964 0072  ld   $72         ;0284 'r'
              6965 0073  ld   $73         ;0285 's'
              6966 002e  ld   $2e         ;0286 '.'
              6967 000a  ld   $0a         ;0287 10
              6968 000a  ld   $0a         ;0288 10
              6969 0060  ld   $60         ;0289 '`'
              696a 0054  ld   $54         ;028a 'T'
              696b 0065  ld   $65         ;028b 'e'
              696c 0074  ld   $74         ;028c 't'
              696d 0072  ld   $72         ;028d 'r'
              696e 006f  ld   $6f         ;028e 'o'
              696f 006e  ld   $6e         ;028f 'n'
              6970 0069  ld   $69         ;0290 'i'
              6971 0073  ld   $73         ;0291 's'
              6972 0027  ld   $27         ;0292 "'"
              6973 0020  ld   $20         ;0293 ' '
              6974 0069  ld   $69         ;0294 'i'
              6975 0073  ld   $73         ;0295 's'
              6976 0020  ld   $20         ;0296 ' '
              6977 0062  ld   $62         ;0297 'b'
              6978 0079  ld   $79         ;0298 'y'
              6979 0020  ld   $20         ;0299 ' '
              697a 0061  ld   $61         ;029a 'a'
              697b 0074  ld   $74         ;029b 't'
              697c 0036  ld   $36         ;029c '6'
              697d 0037  ld   $37         ;029d '7'
              697e 0020  ld   $20         ;029e ' '
              697f 0061  ld   $61         ;029f 'a'
              6980 006e  ld   $6e         ;02a0 'n'
              6981 0064  ld   $64         ;02a1 'd'
              6982 000a  ld   $0a         ;02a2 10
              6983 0060  ld   $60         ;02a3 '`'
              6984 0042  ld   $42         ;02a4 'B'
              6985 0072  ld   $72         ;02a5 'r'
              6986 0069  ld   $69         ;02a6 'i'
              6987 0063  ld   $63         ;02a7 'c'
              6988 006b  ld   $6b         ;02a8 'k'
              6989 0073  ld   $73         ;02a9 's'
              698a 0027  ld   $27         ;02aa "'"
              698b 0020  ld   $20         ;02ab ' '
              698c 0062  ld   $62         ;02ac 'b'
              698d 0079  ld   $79         ;02ad 'y'
              698e 0020  ld   $20         ;02ae ' '
              698f 0078  ld   $78         ;02af 'x'
              6990 0062  ld   $62         ;02b0 'b'
              6991 0078  ld   $78         ;02b1 'x'
              6992 002e  ld   $2e         ;02b2 '.'
              6993 000a  ld   $0a         ;02b3 10
              6994 000a  ld   $0a         ;02b4 10
              6995 0053  ld   $53         ;02b5 'S'
              6996 0070  ld   $70         ;02b6 'p'
              6997 0065  ld   $65         ;02b7 'e'
              6998 0063  ld   $63         ;02b8 'c'
              6999 0069  ld   $69         ;02b9 'i'
              699a 0061  ld   $61         ;02ba 'a'
              699b 006c  ld   $6c         ;02bb 'l'
              699c 0020  ld   $20         ;02bc ' '
              699d 0074  ld   $74         ;02bd 't'
              699e 0068  ld   $68         ;02be 'h'
              699f 0061  ld   $61         ;02bf 'a'
              69a0 006e  ld   $6e         ;02c0 'n'
              69a1 006b  ld   $6b         ;02c1 'k'
              69a2 0073  ld   $73         ;02c2 's'
              69a3 0020  ld   $20         ;02c3 ' '
              69a4 006d  ld   $6d         ;02c4 'm'
              69a5 0075  ld   $75         ;02c5 'u'
              69a6 0073  ld   $73         ;02c6 's'
              69a7 0074  ld   $74         ;02c7 't'
              69a8 0020  ld   $20         ;02c8 ' '
              69a9 0067  ld   $67         ;02c9 'g'
              69aa 006f  ld   $6f         ;02ca 'o'
              69ab 0020  ld   $20         ;02cb ' '
              69ac 0074  ld   $74         ;02cc 't'
              69ad 006f  ld   $6f         ;02cd 'o'
              69ae 0000  ld   $00         ;02ce 0
              69af 002b  ld   $2b         ;02cf STW
              69b0 003a  ld   $3a         ;02cf 'Part1'
              69b1 0093  ld   $93         ;02d1 INC
              69b2 001b  ld   $1b
              69b3 00ff  ld   $ff         ;02d3 RET
              69b4 0003  ld   $03         ;| RAM segment address (high byte first)
              69b5 0000  ld   $00         ;|
              69b6 00e8  ld   $e8         ;| Length (1..256)
              69b7 00cd  ld   $cd         ;0300 DEF
              69b8 0098  ld   $98
              69b9 000a  ld   $0a         ;0302 10
              69ba 004d  ld   $4d         ;0303 'M'
              69bb 0061  ld   $61         ;0304 'a'
              69bc 0072  ld   $72         ;0305 'r'
              69bd 0063  ld   $63         ;0306 'c'
              69be 002c  ld   $2c         ;0307 ','
              69bf 0020  ld   $20         ;0308 ' '
              69c0 0050  ld   $50         ;0309 'P'
              69c1 0061  ld   $61         ;030a 'a'
              69c2 0075  ld   $75         ;030b 'u'
              69c3 006c  ld   $6c         ;030c 'l'
              69c4 002c  ld   $2c         ;030d ','
              69c5 0020  ld   $20         ;030e ' '
              69c6 0049  ld   $49         ;030f 'I'
              69c7 0076  ld   $76         ;0310 'v'
              69c8 0061  ld   $61         ;0311 'a'
              69c9 006e  ld   $6e         ;0312 'n'
              69ca 0061  ld   $61         ;0313 'a'
              69cb 002c  ld   $2c         ;0314 ','
              69cc 0020  ld   $20         ;0315 ' '
              69cd 004f  ld   $4f         ;0316 'O'
              69ce 0073  ld   $73         ;0317 's'
              69cf 0063  ld   $63         ;0318 'c'
              69d0 0061  ld   $61         ;0319 'a'
              69d1 0072  ld   $72         ;031a 'r'
              69d2 002c  ld   $2c         ;031b ','
              69d3 000a  ld   $0a         ;031c 10
              69d4 004d  ld   $4d         ;031d 'M'
              69d5 0061  ld   $61         ;031e 'a'
              69d6 0072  ld   $72         ;031f 'r'
              69d7 0074  ld   $74         ;0320 't'
              69d8 0069  ld   $69         ;0321 'i'
              69d9 006a  ld   $6a         ;0322 'j'
              69da 006e  ld   $6e         ;0323 'n'
              69db 002c  ld   $2c         ;0324 ','
              69dc 0020  ld   $20         ;0325 ' '
              69dd 0045  ld   $45         ;0326 'E'
              69de 0072  ld   $72         ;0327 'r'
              69df 0069  ld   $69         ;0328 'i'
              69e0 006b  ld   $6b         ;0329 'k'
              69e1 002c  ld   $2c         ;032a ','
              69e2 0020  ld   $20         ;032b ' '
              69e3 0043  ld   $43         ;032c 'C'
              69e4 0068  ld   $68         ;032d 'h'
              69e5 0075  ld   $75         ;032e 'u'
              69e6 0063  ld   $63         ;032f 'c'
              69e7 006b  ld   $6b         ;0330 'k'
              69e8 002c  ld   $2c         ;0331 ','
              69e9 0020  ld   $20         ;0332 ' '
              69ea 0042  ld   $42         ;0333 'B'
              69eb 0065  ld   $65         ;0334 'e'
              69ec 006e  ld   $6e         ;0335 'n'
              69ed 002c  ld   $2c         ;0336 ','
              69ee 000a  ld   $0a         ;0337 10
              69ef 0044  ld   $44         ;0338 'D'
              69f0 0069  ld   $69         ;0339 'i'
              69f1 0065  ld   $65         ;033a 'e'
              69f2 0074  ld   $74         ;033b 't'
              69f3 0065  ld   $65         ;033c 'e'
              69f4 0072  ld   $72         ;033d 'r'
              69f5 002c  ld   $2c         ;033e ','
              69f6 0020  ld   $20         ;033f ' '
              69f7 004d  ld   $4d         ;0340 'M'
              69f8 0061  ld   $61         ;0341 'a'
              69f9 0072  ld   $72         ;0342 'r'
              69fa 0074  ld   $74         ;0343 't'
              69fb fe00  bra  ac          ;+-----------------------------------+
              69fc fcfd  bra  $69fd       ;|                                   |
              69fd 1418  ld   $18,y       ;| Trampoline for page $6900 lookups |
              69fe e006  jmp  y,$06       ;|                                   |
              69ff c218  st   [$18]       ;+-----------------------------------+
              6a00 0069  ld   $69         ;0344 'i'
              6a01 006e  ld   $6e         ;0345 'n'
              6a02 002c  ld   $2c         ;0346 ','
              6a03 0020  ld   $20         ;0347 ' '
              6a04 0042  ld   $42         ;0348 'B'
              6a05 0072  ld   $72         ;0349 'r'
              6a06 0061  ld   $61         ;034a 'a'
              6a07 0064  ld   $64         ;034b 'd'
              6a08 002c  ld   $2c         ;034c ','
              6a09 0020  ld   $20         ;034d ' '
              6a0a 004c  ld   $4c         ;034e 'L'
              6a0b 006f  ld   $6f         ;034f 'o'
              6a0c 0075  ld   $75         ;0350 'u'
              6a0d 002c  ld   $2c         ;0351 ','
              6a0e 000a  ld   $0a         ;0352 10
              6a0f 0050  ld   $50         ;0353 'P'
              6a10 0068  ld   $68         ;0354 'h'
              6a11 0069  ld   $69         ;0355 'i'
              6a12 006c  ld   $6c         ;0356 'l'
              6a13 002c  ld   $2c         ;0357 ','
              6a14 0020  ld   $20         ;0358 ' '
              6a15 0042  ld   $42         ;0359 'B'
              6a16 0072  ld   $72         ;035a 'r'
              6a17 0069  ld   $69         ;035b 'i'
              6a18 0061  ld   $61         ;035c 'a'
              6a19 006e  ld   $6e         ;035d 'n'
              6a1a 002c  ld   $2c         ;035e ','
              6a1b 0020  ld   $20         ;035f ' '
              6a1c 0044  ld   $44         ;0360 'D'
              6a1d 0061  ld   $61         ;0361 'a'
              6a1e 0076  ld   $76         ;0362 'v'
              6a1f 0069  ld   $69         ;0363 'i'
              6a20 0064  ld   $64         ;0364 'd'
              6a21 002c  ld   $2c         ;0365 ','
              6a22 0020  ld   $20         ;0366 ' '
              6a23 0044  ld   $44         ;0367 'D'
              6a24 0061  ld   $61         ;0368 'a'
              6a25 0076  ld   $76         ;0369 'v'
              6a26 0065  ld   $65         ;036a 'e'
              6a27 002c  ld   $2c         ;036b ','
              6a28 000a  ld   $0a         ;036c 10
              6a29 0048  ld   $48         ;036d 'H'
              6a2a 0047  ld   $47         ;036e 'G'
              6a2b 0020  ld   $20         ;036f ' '
              6a2c 0061  ld   $61         ;0370 'a'
              6a2d 006e  ld   $6e         ;0371 'n'
              6a2e 0064  ld   $64         ;0372 'd'
              6a2f 0020  ld   $20         ;0373 ' '
              6a30 0061  ld   $61         ;0374 'a'
              6a31 006c  ld   $6c         ;0375 'l'
              6a32 006c  ld   $6c         ;0376 'l'
              6a33 0020  ld   $20         ;0377 ' '
              6a34 0066  ld   $66         ;0378 'f'
              6a35 0061  ld   $61         ;0379 'a'
              6a36 006e  ld   $6e         ;037a 'n'
              6a37 0073  ld   $73         ;037b 's'
              6a38 0021  ld   $21         ;037c '!'
              6a39 000a  ld   $0a         ;037d 10
              6a3a 0020  ld   $20         ;037e ' '
              6a3b 0020  ld   $20         ;037f ' '
              6a3c 0020  ld   $20         ;0380 ' '
              6a3d 0020  ld   $20         ;0381 ' '
              6a3e 0020  ld   $20         ;0382 ' '
              6a3f 0020  ld   $20         ;0383 ' '
              6a40 0020  ld   $20         ;0384 ' '
              6a41 0020  ld   $20         ;0385 ' '
              6a42 0020  ld   $20         ;0386 ' '
              6a43 0020  ld   $20         ;0387 ' '
              6a44 0020  ld   $20         ;0388 ' '
              6a45 004d  ld   $4d         ;0389 'M'
              6a46 0061  ld   $61         ;038a 'a'
              6a47 0072  ld   $72         ;038b 'r'
              6a48 0063  ld   $63         ;038c 'c'
              6a49 0065  ld   $65         ;038d 'e'
              6a4a 006c  ld   $6c         ;038e 'l'
              6a4b 0020  ld   $20         ;038f ' '
              6a4c 0026  ld   $26         ;0390 '&'
              6a4d 0020  ld   $20         ;0391 ' '
              6a4e 0057  ld   $57         ;0392 'W'
              6a4f 0061  ld   $61         ;0393 'a'
              6a50 006c  ld   $6c         ;0394 'l'
              6a51 0074  ld   $74         ;0395 't'
              6a52 0065  ld   $65         ;0396 'e'
              6a53 0072  ld   $72         ;0397 'r'
              6a54 000a  ld   $0a         ;0398 10
              6a55 0000  ld   $00         ;0399 0
              6a56 002b  ld   $2b         ;039a STW
              6a57 003c  ld   $3c         ;039a 'Part2'
              6a58 00cd  ld   $cd         ;039c DEF
              6a59 00cd  ld   $cd
              6a5a 0011  ld   $11         ;039e LDWI
              6a5b 0000  ld   $00
              6a5c 0008  ld   $08
              6a5d 002b  ld   $2b         ;03a1 STW
              6a5e 003e  ld   $3e         ;03a1 'p'
              6a5f 0011  ld   $11         ;03a3 LDWI
              6a60 0001  ld   $01
              6a61 0088  ld   $88
              6a62 002b  ld   $2b         ;03a6 STW
              6a63 0040  ld   $40         ;03a6 'i'
              6a64 0059  ld   $59         ;03a8 LDI
              6a65 0000  ld   $00
              6a66 005e  ld   $5e         ;03aa ST
              6a67 0024  ld   $24
              6a68 005e  ld   $5e         ;03ac ST
              6a69 0025  ld   $25
              6a6a 0011  ld   $11         ;03ae LDWI
              6a6b 00e1  ld   $e1
              6a6c 0004  ld   $04
              6a6d 002b  ld   $2b         ;03b1 STW
              6a6e 0022  ld   $22
              6a6f 0021  ld   $21         ;03b3 LDW
              6a70 003e  ld   $3e         ;03b3 'p'
              6a71 002b  ld   $2b         ;03b5 STW
              6a72 0028  ld   $28
              6a73 00b4  ld   $b4         ;03b7 SYS
              6a74 00cc  ld   $cc
              6a75 0011  ld   $11         ;03b9 LDWI
              6a76 0000  ld   $00
              6a77 0008  ld   $08
              6a78 0099  ld   $99         ;03bc ADDW
              6a79 003e  ld   $3e         ;03bc 'p'
              6a7a 002b  ld   $2b         ;03be STW
              6a7b 003e  ld   $3e         ;03be 'p'
              6a7c 0035  ld   $35         ;03c0 BCC
              6a7d 004d  ld   $4d         ;03c1 GT
              6a7e 00b3  ld   $b3
              6a7f 0099  ld   $99         ;03c3 ADDW
              6a80 0040  ld   $40         ;03c3 'i'
              6a81 002b  ld   $2b         ;03c5 STW
              6a82 003e  ld   $3e         ;03c5 'p'
              6a83 0082  ld   $82         ;03c7 ANDI
              6a84 00ff  ld   $ff
              6a85 008c  ld   $8c         ;03c9 XORI
              6a86 00a0  ld   $a0
              6a87 0035  ld   $35         ;03cb BCC
              6a88 0072  ld   $72         ;03cc NE
              6a89 00b1  ld   $b1
              6a8a 00ff  ld   $ff         ;03ce RET
              6a8b 002b  ld   $2b         ;03cf STW
              6a8c 0042  ld   $42         ;03cf 'ClearScreen'
              6a8d 00cd  ld   $cd         ;03d1 DEF
              6a8e 00e1  ld   $e1
              6a8f 001a  ld   $1a         ;03d3 LD
              6a90 000e  ld   $0e
              6a91 0099  ld   $99         ;03d5 ADDW
              6a92 0044  ld   $44         ;03d5 'Delay'
              6a93 0082  ld   $82         ;03d7 ANDI
              6a94 00ff  ld   $ff
              6a95 002b  ld   $2b         ;03d9 STW
              6a96 0046  ld   $46         ;03d9 'tmp'
              6a97 001a  ld   $1a         ;03db LD
              6a98 000e  ld   $0e
              6a99 00b8  ld   $b8         ;03dd SUBW
              6a9a 0046  ld   $46         ;03dd 'tmp'
              6a9b 0035  ld   $35         ;03df BCC
              6a9c 0072  ld   $72         ;03e0 NE
              6a9d 00d9  ld   $d9
              6a9e 00ff  ld   $ff         ;03e2 RET
              6a9f 002b  ld   $2b         ;03e3 STW
              6aa0 0048  ld   $48         ;03e3 'Wait'
              6aa1 0093  ld   $93         ;03e5 INC
              6aa2 001b  ld   $1b
              6aa3 00ff  ld   $ff         ;03e7 RET
              6aa4 0004  ld   $04         ;| RAM segment address (high byte first)
              6aa5 0000  ld   $00         ;|
              6aa6 0081  ld   $81         ;| Length (1..256)
              6aa7 00cd  ld   $cd         ;0400 DEF
              6aa8 004a  ld   $4a
              6aa9 0021  ld   $21         ;0402 LDW
              6aaa 0032  ld   $32         ;0402 'Char'
              6aab 00e6  ld   $e6         ;0404 SUBI
              6aac 0052  ld   $52
              6aad 0035  ld   $35         ;0406 BCC
              6aae 0053  ld   $53         ;0407 GE
              6aaf 0010  ld   $10
              6ab0 00e3  ld   $e3         ;0409 ADDI
              6ab1 0032  ld   $32
              6ab2 002b  ld   $2b         ;040b STW
              6ab3 0040  ld   $40         ;040b 'i'
              6ab4 0011  ld   $11         ;040d LDWI
              6ab5 0000  ld   $00
              6ab6 0007  ld   $07
              6ab7 0090  ld   $90         ;0410 BRA
              6ab8 0015  ld   $15
              6ab9 002b  ld   $2b         ;0412 STW
              6aba 0040  ld   $40         ;0412 'i'
              6abb 0011  ld   $11         ;0414 LDWI
              6abc 0000  ld   $00
              6abd 0008  ld   $08
              6abe 002b  ld   $2b         ;0417 STW
              6abf 004a  ld   $4a         ;0417 'fontData'
              6ac0 0021  ld   $21         ;0419 LDW
              6ac1 0040  ld   $40         ;0419 'i'
              6ac2 00e9  ld   $e9         ;041b LSLW
              6ac3 00e9  ld   $e9         ;041c LSLW
              6ac4 0099  ld   $99         ;041d ADDW
              6ac5 0040  ld   $40         ;041d 'i'
              6ac6 0099  ld   $99         ;041f ADDW
              6ac7 004a  ld   $4a         ;041f 'fontData'
              6ac8 002b  ld   $2b         ;0421 STW
              6ac9 004a  ld   $4a         ;0421 'fontData'
              6aca 0021  ld   $21         ;0423 LDW
              6acb 004c  ld   $4c         ;0423 'Color'
              6acc 005e  ld   $5e         ;0425 ST
              6acd 0025  ld   $25
              6ace 0021  ld   $21         ;0427 LDW
              6acf 0034  ld   $34         ;0427 'Pos'
              6ad0 002b  ld   $2b         ;0429 STW
              6ad1 0028  ld   $28
              6ad2 00e3  ld   $e3         ;042b ADDI
              6ad3 0006  ld   $06
              6ad4 002b  ld   $2b         ;042d STW
              6ad5 0034  ld   $34         ;042d 'Pos'
              6ad6 0011  ld   $11         ;042f LDWI
              6ad7 00e1  ld   $e1
              6ad8 0004  ld   $04
              6ad9 002b  ld   $2b         ;0432 STW
              6ada 0022  ld   $22
              6adb 0059  ld   $59         ;0434 LDI
              6adc 00fb  ld   $fb
              6add 002b  ld   $2b         ;0436 STW
              6ade 0040  ld   $40         ;0436 'i'
              6adf 0021  ld   $21         ;0438 LDW
              6ae0 004a  ld   $4a         ;0438 'fontData'
              6ae1 007f  ld   $7f         ;043a LUP
              6ae2 0000  ld   $00
              6ae3 0093  ld   $93         ;043c INC
              6ae4 004a  ld   $4a         ;043c 'fontData'
              6ae5 005e  ld   $5e         ;043e ST
              6ae6 0026  ld   $26
              6ae7 00b4  ld   $b4         ;0440 SYS
              6ae8 00cc  ld   $cc
              6ae9 0093  ld   $93         ;0442 INC
              6aea 0028  ld   $28
              6aeb 0093  ld   $93         ;0444 INC
              6aec 0040  ld   $40         ;0444 'i'
              6aed 0021  ld   $21         ;0446 LDW
              6aee 0040  ld   $40         ;0446 'i'
              6aef 0035  ld   $35         ;0448 BCC
              6af0 0072  ld   $72         ;0449 NE
              6af1 0036  ld   $36
              6af2 00ff  ld   $ff         ;044b RET
              6af3 002b  ld   $2b         ;044c STW
              6af4 0036  ld   $36         ;044c 'PrintChar'
              6af5 0011  ld   $11         ;044e LDWI
              6af6 0002  ld   $02
              6af7 0008  ld   $08
              6af8 002b  ld   $2b         ;0451 STW
              6af9 0034  ld   $34         ;0451 'Pos'
              6afa 00cf  ld   $cf         ;0453 CALL
              6afb fe00  bra  ac          ;+-----------------------------------+
              6afc fcfd  bra  $6afd       ;|                                   |
              6afd 1418  ld   $18,y       ;| Trampoline for page $6a00 lookups |
              6afe e006  jmp  y,$06       ;|                                   |
              6aff c218  st   [$18]       ;+-----------------------------------+
              6b00 0042  ld   $42         ;0453 'ClearScreen'
              6b01 0059  ld   $59         ;0455 LDI
              6b02 003e  ld   $3e
              6b03 002b  ld   $2b         ;0457 STW
              6b04 004c  ld   $4c         ;0457 'Color'
              6b05 0011  ld   $11         ;0459 LDWI
              6b06 0000  ld   $00
              6b07 0008  ld   $08
              6b08 002b  ld   $2b         ;045c STW
              6b09 0034  ld   $34         ;045c 'Pos'
              6b0a 0021  ld   $21         ;045e LDW
              6b0b 003a  ld   $3a         ;045e 'Part1'
              6b0c 002b  ld   $2b         ;0460 STW
              6b0d 0030  ld   $30         ;0460 'Text'
              6b0e 00cf  ld   $cf         ;0462 CALL
              6b0f 0038  ld   $38         ;0462 'PrintText'
              6b10 0021  ld   $21         ;0464 LDW
              6b11 003c  ld   $3c         ;0464 'Part2'
              6b12 002b  ld   $2b         ;0466 STW
              6b13 0030  ld   $30         ;0466 'Text'
              6b14 00cf  ld   $cf         ;0468 CALL
              6b15 0038  ld   $38         ;0468 'PrintText'
              6b16 0059  ld   $59         ;046a LDI
              6b17 00f0  ld   $f0
              6b18 002b  ld   $2b         ;046c STW
              6b19 0044  ld   $44         ;046c 'Delay'
              6b1a 00cf  ld   $cf         ;046e CALL
              6b1b 0048  ld   $48         ;046e 'Wait'
              6b1c 0021  ld   $21         ;0470 LDW
              6b1d 004c  ld   $4c         ;0470 'Color'
              6b1e 008c  ld   $8c         ;0472 XORI
              6b1f 0008  ld   $08
              6b20 0035  ld   $35         ;0474 BCC
              6b21 003f  ld   $3f         ;0475 EQ
              6b22 007d  ld   $7d
              6b23 0021  ld   $21         ;0477 LDW
              6b24 004c  ld   $4c         ;0477 'Color'
              6b25 00e6  ld   $e6         ;0479 SUBI
              6b26 0009  ld   $09
              6b27 002b  ld   $2b         ;047b STW
              6b28 004c  ld   $4c         ;047b 'Color'
              6b29 0090  ld   $90         ;047d BRA
              6b2a 0057  ld   $57
              6b2b 0090  ld   $90         ;047f BRA
              6b2c 0053  ld   $53
              6b2d 0000  ld   $00         ;End of Apps/Credits/Credits_v3.gcl, size 598
                                          ;+-----------------------------------+
                                          ;| Apps/Snake/Snake_v3.gcl           |
                                          ;+-----------------------------------+
              6b2e dc43  st   $43,[y,x++] ;'C'
              6b2f dc72  st   $72,[y,x++] ;'r'
              6b30 dc65  st   $65,[y,x++] ;'e'
              6b31 dc64  st   $64,[y,x++] ;'d'
              6b32 dc69  st   $69,[y,x++] ;'i'
              6b33 dc74  st   $74,[y,x++] ;'t'
              6b34 dc73  st   $73,[y,x++] ;'s'
              6b35 dc00  st   $00,[y,x++] ;'\x00'
              6b36 00d8  ld   $d8
              6b37 c218  st   [$18]
              6b38 0068  ld   $68
              6b39 14fa  ld   $fa,y
              6b3a e020  jmp  y,$20
              6b3b c219  st   [$19]
Snake:        6b3c 0002  ld   $02         ;| RAM segment address (high byte first)
              6b3d 0000  ld   $00         ;|
              6b3e 00e5  ld   $e5         ;| Length (1..256)
              6b3f 001a  ld   $1a         ;0200 LD
              6b40 0021  ld   $21
              6b41 00e6  ld   $e6         ;0202 SUBI
              6b42 0020  ld   $20
              6b43 0035  ld   $35         ;0204 BCC
              6b44 0053  ld   $53         ;0205 GE
              6b45 000b  ld   $0b
              6b46 0021  ld   $21         ;0207 LDW
              6b47 000e  ld   $0e         ;0207 '_frameCount'
              6b48 00f3  ld   $f3         ;0209 DOKE
              6b49 0017  ld   $17         ;0209 '_vPCH'
              6b4a 0090  ld   $90         ;020b BRA
              6b4b 0005  ld   $05
              6b4c 0059  ld   $59         ;020d LDI
              6b4d 0000  ld   $00
              6b4e 002b  ld   $2b         ;020f STW
              6b4f 0030  ld   $30         ;020f 'HighScore'
              6b50 00cd  ld   $cd         ;0211 DEF
              6b51 005f  ld   $5f
              6b52 0021  ld   $21         ;0213 LDW
              6b53 0032  ld   $32         ;0213 'Char'
              6b54 00e6  ld   $e6         ;0215 SUBI
              6b55 0052  ld   $52
              6b56 0035  ld   $35         ;0217 BCC
              6b57 0053  ld   $53         ;0218 GE
              6b58 0021  ld   $21
              6b59 00e3  ld   $e3         ;021a ADDI
              6b5a 0032  ld   $32
              6b5b 002b  ld   $2b         ;021c STW
              6b5c 0034  ld   $34         ;021c 'i'
              6b5d 0011  ld   $11         ;021e LDWI
              6b5e 0000  ld   $00
              6b5f 0007  ld   $07
              6b60 0090  ld   $90         ;0221 BRA
              6b61 0026  ld   $26
              6b62 002b  ld   $2b         ;0223 STW
              6b63 0034  ld   $34         ;0223 'i'
              6b64 0011  ld   $11         ;0225 LDWI
              6b65 0000  ld   $00
              6b66 0008  ld   $08
              6b67 002b  ld   $2b         ;0228 STW
              6b68 0036  ld   $36         ;0228 'fontData'
              6b69 0021  ld   $21         ;022a LDW
              6b6a 0034  ld   $34         ;022a 'i'
              6b6b 00e9  ld   $e9         ;022c LSLW
              6b6c 00e9  ld   $e9         ;022d LSLW
              6b6d 0099  ld   $99         ;022e ADDW
              6b6e 0034  ld   $34         ;022e 'i'
              6b6f 0099  ld   $99         ;0230 ADDW
              6b70 0036  ld   $36         ;0230 'fontData'
              6b71 002b  ld   $2b         ;0232 STW
              6b72 0036  ld   $36         ;0232 'fontData'
              6b73 0021  ld   $21         ;0234 LDW
              6b74 0038  ld   $38         ;0234 'BgColor'
              6b75 005e  ld   $5e         ;0236 ST
              6b76 0024  ld   $24
              6b77 0021  ld   $21         ;0238 LDW
              6b78 003a  ld   $3a         ;0238 'Color'
              6b79 005e  ld   $5e         ;023a ST
              6b7a 0025  ld   $25
              6b7b 0021  ld   $21         ;023c LDW
              6b7c 003c  ld   $3c         ;023c 'Pos'
              6b7d 002b  ld   $2b         ;023e STW
              6b7e 0028  ld   $28
              6b7f 00e3  ld   $e3         ;0240 ADDI
              6b80 0006  ld   $06
              6b81 002b  ld   $2b         ;0242 STW
              6b82 003c  ld   $3c         ;0242 'Pos'
              6b83 0011  ld   $11         ;0244 LDWI
              6b84 00e1  ld   $e1
              6b85 0004  ld   $04
              6b86 002b  ld   $2b         ;0247 STW
              6b87 0022  ld   $22
              6b88 0059  ld   $59         ;0249 LDI
              6b89 00fb  ld   $fb
              6b8a 002b  ld   $2b         ;024b STW
              6b8b 0034  ld   $34         ;024b 'i'
              6b8c 0021  ld   $21         ;024d LDW
              6b8d 0036  ld   $36         ;024d 'fontData'
              6b8e 007f  ld   $7f         ;024f LUP
              6b8f 0000  ld   $00
              6b90 0093  ld   $93         ;0251 INC
              6b91 0036  ld   $36         ;0251 'fontData'
              6b92 005e  ld   $5e         ;0253 ST
              6b93 0026  ld   $26
              6b94 00b4  ld   $b4         ;0255 SYS
              6b95 00cc  ld   $cc
              6b96 0093  ld   $93         ;0257 INC
              6b97 0028  ld   $28
              6b98 0093  ld   $93         ;0259 INC
              6b99 0034  ld   $34         ;0259 'i'
              6b9a 0021  ld   $21         ;025b LDW
              6b9b 0034  ld   $34         ;025b 'i'
              6b9c 0035  ld   $35         ;025d BCC
              6b9d 0072  ld   $72         ;025e NE
              6b9e 004b  ld   $4b
              6b9f 00ff  ld   $ff         ;0260 RET
              6ba0 002b  ld   $2b         ;0261 STW
              6ba1 003e  ld   $3e         ;0261 'PrintChar'
              6ba2 00cd  ld   $cd         ;0263 DEF
              6ba3 0076  ld   $76
              6ba4 0075  ld   $75         ;0265 PUSH
              6ba5 002b  ld   $2b         ;0266 STW
              6ba6 0040  ld   $40         ;0266 'Text'
              6ba7 0021  ld   $21         ;0268 LDW
              6ba8 0040  ld   $40         ;0268 'Text'
              6ba9 00ad  ld   $ad         ;026a PEEK
              6baa 002b  ld   $2b         ;026b STW
              6bab 0032  ld   $32         ;026b 'Char'
              6bac 0093  ld   $93         ;026d INC
              6bad 0040  ld   $40         ;026d 'Text'
              6bae 0035  ld   $35         ;026f BCC
              6baf 003f  ld   $3f         ;0270 EQ
              6bb0 0074  ld   $74
              6bb1 00cf  ld   $cf         ;0272 CALL
              6bb2 003e  ld   $3e         ;0272 'PrintChar'
              6bb3 0090  ld   $90         ;0274 BRA
              6bb4 0066  ld   $66
              6bb5 0063  ld   $63         ;0276 POP
              6bb6 00ff  ld   $ff         ;0277 RET
              6bb7 002b  ld   $2b         ;0278 STW
              6bb8 0042  ld   $42         ;0278 'PrintText'
              6bb9 00cd  ld   $cd         ;027a DEF
              6bba 0090  ld   $90
              6bbb 0035  ld   $35         ;027c BCC
              6bbc 0056  ld   $56         ;027d LE
              6bbd 008f  ld   $8f
              6bbe 002b  ld   $2b         ;027f STW
              6bbf 0034  ld   $34         ;027f 'i'
              6bc0 0021  ld   $21         ;0281 LDW
              6bc1 003a  ld   $3a         ;0281 'Color'
              6bc2 00f0  ld   $f0         ;0283 POKE
              6bc3 003c  ld   $3c         ;0283 'Pos'
              6bc4 0021  ld   $21         ;0285 LDW
              6bc5 003c  ld   $3c         ;0285 'Pos'
              6bc6 0099  ld   $99         ;0287 ADDW
              6bc7 0044  ld   $44         ;0287 'Step'
              6bc8 002b  ld   $2b         ;0289 STW
              6bc9 003c  ld   $3c         ;0289 'Pos'
              6bca 0021  ld   $21         ;028b LDW
              6bcb 0034  ld   $34         ;028b 'i'
              6bcc 00e6  ld   $e6         ;028d SUBI
              6bcd 0001  ld   $01
              6bce 0090  ld   $90         ;028f BRA
              6bcf 007a  ld   $7a
              6bd0 00ff  ld   $ff         ;0291 RET
              6bd1 002b  ld   $2b         ;0292 STW
              6bd2 0046  ld   $46         ;0292 'DrawLine'
              6bd3 00cd  ld   $cd         ;0294 DEF
              6bd4 00bc  ld   $bc
              6bd5 0075  ld   $75         ;0296 PUSH
              6bd6 001a  ld   $1a         ;0297 LD
              6bd7 000e  ld   $0e
              6bd8 00b8  ld   $b8         ;0299 SUBW
              6bd9 0048  ld   $48         ;0299 'TimeOut'
              6bda 0082  ld   $82         ;029b ANDI
              6bdb 0080  ld   $80
              6bdc 0035  ld   $35         ;029d BCC
              6bdd 0072  ld   $72         ;029e NE
              6bde 00a9  ld   $a9
              6bdf 0021  ld   $21         ;02a0 LDW
              6be0 004a  ld   $4a         ;02a0 'Timer'
              6be1 0035  ld   $35         ;02a2 BCC
              6be2 0056  ld   $56         ;02a3 LE
              6be3 00a7  ld   $a7
              6be4 00e6  ld   $e6         ;02a5 SUBI
              6be5 0001  ld   $01
              6be6 002b  ld   $2b         ;02a7 STW
              6be7 004a  ld   $4a         ;02a7 'Timer'
              6be8 00cf  ld   $cf         ;02a9 CALL
              6be9 004c  ld   $4c         ;02a9 'DrawTimer'
              6bea 001a  ld   $1a         ;02ab LD
              6beb 0011  ld   $11
              6bec 0082  ld   $82         ;02ad ANDI
              6bed 0080  ld   $80
              6bee 0035  ld   $35         ;02af BCC
              6bef 0072  ld   $72         ;02b0 NE
              6bf0 00b4  ld   $b4
              6bf1 00e6  ld   $e6         ;02b2 SUBI
              6bf2 0001  ld   $01
              6bf3 0090  ld   $90         ;02b4 BRA
              6bf4 00b6  ld   $b6
              6bf5 0059  ld   $59         ;02b6 LDI
              6bf6 0000  ld   $00
              6bf7 0099  ld   $99         ;02b8 ADDW
              6bf8 004e  ld   $4e         ;02b8 'Delay'
              6bf9 00cf  ld   $cf         ;02ba CALL
              6bfa 0050  ld   $50         ;02ba 'Wait'
              6bfb fe00  bra  ac          ;+-----------------------------------+
              6bfc fcfd  bra  $6bfd       ;|                                   |
              6bfd 1418  ld   $18,y       ;| Trampoline for page $6b00 lookups |
              6bfe e006  jmp  y,$06       ;|                                   |
              6bff c218  st   [$18]       ;+-----------------------------------+
              6c00 0063  ld   $63         ;02bc POP
              6c01 00ff  ld   $ff         ;02bd RET
              6c02 002b  ld   $2b         ;02be STW
              6c03 0052  ld   $52         ;02be 'TimeStep'
              6c04 00cd  ld   $cd         ;02c0 DEF
              6c05 00de  ld   $de
              6c06 0075  ld   $75         ;02c2 PUSH
              6c07 0011  ld   $11         ;02c3 LDWI
              6c08 0020  ld   $20
              6c09 0008  ld   $08
              6c0a 002b  ld   $2b         ;02c6 STW
              6c0b 003c  ld   $3c         ;02c6 'Pos'
              6c0c 0059  ld   $59         ;02c8 LDI
              6c0d 0008  ld   $08
              6c0e 002b  ld   $2b         ;02ca STW
              6c0f 003a  ld   $3a         ;02ca 'Color'
              6c10 0059  ld   $59         ;02cc LDI
              6c11 0000  ld   $00
              6c12 002b  ld   $2b         ;02ce STW
              6c13 0038  ld   $38         ;02ce 'BgColor'
              6c14 0021  ld   $21         ;02d0 LDW
              6c15 004a  ld   $4a         ;02d0 'Timer'
              6c16 002b  ld   $2b         ;02d2 STW
              6c17 0054  ld   $54         ;02d2 'Value'
              6c18 00cf  ld   $cf         ;02d4 CALL
              6c19 0056  ld   $56         ;02d4 'DrawNumber2'
              6c1a 0021  ld   $21         ;02d6 LDW
              6c1b 0048  ld   $48         ;02d6 'TimeOut'
              6c1c 00e3  ld   $e3         ;02d8 ADDI
              6c1d 003c  ld   $3c
              6c1e 0082  ld   $82         ;02da ANDI
              6c1f 00ff  ld   $ff
              6c20 002b  ld   $2b         ;02dc STW
              6c21 0048  ld   $48         ;02dc 'TimeOut'
              6c22 0063  ld   $63         ;02de POP
              6c23 00ff  ld   $ff         ;02df RET
              6c24 002b  ld   $2b         ;02e0 STW
              6c25 004c  ld   $4c         ;02e0 'DrawTimer'
              6c26 0093  ld   $93         ;02e2 INC
              6c27 001b  ld   $1b         ;02e2 '_vLR'+1
              6c28 00ff  ld   $ff         ;02e4 RET
              6c29 0003  ld   $03         ;| RAM segment address (high byte first)
              6c2a 0000  ld   $00         ;|
              6c2b 00f7  ld   $f7         ;| Length (1..256)
              6c2c 00cd  ld   $cd         ;0300 DEF
              6c2d 000b  ld   $0b
              6c2e 0075  ld   $75         ;0302 PUSH
              6c2f 0059  ld   $59         ;0303 LDI
              6c30 000f  ld   $0f
              6c31 002b  ld   $2b         ;0305 STW
              6c32 003a  ld   $3a         ;0305 'Color'
              6c33 0021  ld   $21         ;0307 LDW
              6c34 0058  ld   $58         ;0307 'Head'
              6c35 00cf  ld   $cf         ;0309 CALL
              6c36 005a  ld   $5a         ;0309 'DrawBlock'
              6c37 0063  ld   $63         ;030b POP
              6c38 00ff  ld   $ff         ;030c RET
              6c39 002b  ld   $2b         ;030d STW
              6c3a 005c  ld   $5c         ;030d 'DrawHead'
              6c3b 00cd  ld   $cd         ;030f DEF
              6c3c 0043  ld   $43
              6c3d 0075  ld   $75         ;0311 PUSH
              6c3e 0011  ld   $11         ;0312 LDWI
              6c3f 0035  ld   $35
              6c40 0044  ld   $44
              6c41 002b  ld   $2b         ;0315 STW
              6c42 003c  ld   $3c         ;0315 'Pos'
              6c43 0059  ld   $59         ;0317 LDI
              6c44 0004  ld   $04
              6c45 002b  ld   $2b         ;0319 STW
              6c46 0038  ld   $38         ;0319 'BgColor'
              6c47 00cd  ld   $cd         ;031b DEF
              6c48 0025  ld   $25
              6c49 0047  ld   $47         ;031d 'G'
              6c4a 0041  ld   $41         ;031e 'A'
              6c4b 004d  ld   $4d         ;031f 'M'
              6c4c 0045  ld   $45         ;0320 'E'
              6c4d 0020  ld   $20         ;0321 ' '
              6c4e 004f  ld   $4f         ;0322 'O'
              6c4f 0056  ld   $56         ;0323 'V'
              6c50 0045  ld   $45         ;0324 'E'
              6c51 0052  ld   $52         ;0325 'R'
              6c52 0000  ld   $00         ;0326 0
              6c53 00cf  ld   $cf         ;0327 CALL
              6c54 0042  ld   $42         ;0327 'PrintText'
              6c55 0021  ld   $21         ;0329 LDW
              6c56 005e  ld   $5e         ;0329 'Score'
              6c57 00b8  ld   $b8         ;032b SUBW
              6c58 0030  ld   $30         ;032b 'HighScore'
              6c59 0035  ld   $35         ;032d BCC
              6c5a 0056  ld   $56         ;032e LE
              6c5b 003f  ld   $3f
              6c5c 0021  ld   $21         ;0330 LDW
              6c5d 0060  ld   $60         ;0330 'Control'
              6c5e 00fc  ld   $fc         ;0332 XORW
              6c5f 0062  ld   $62         ;0332 'PlayerControl'
              6c60 0035  ld   $35         ;0334 BCC
              6c61 0072  ld   $72         ;0335 NE
              6c62 003f  ld   $3f
              6c63 0021  ld   $21         ;0337 LDW
              6c64 005e  ld   $5e         ;0337 'Score'
              6c65 002b  ld   $2b         ;0339 STW
              6c66 0030  ld   $30         ;0339 'HighScore'
              6c67 0059  ld   $59         ;033b LDI
              6c68 001e  ld   $1e
              6c69 002b  ld   $2b         ;033d STW
              6c6a 003a  ld   $3a         ;033d 'Color'
              6c6b 00cf  ld   $cf         ;033f CALL
              6c6c 0064  ld   $64         ;033f 'DrawHighScore'
              6c6d 00cf  ld   $cf         ;0341 CALL
              6c6e 0066  ld   $66         ;0341 'PlayGameOverSound'
              6c6f 0063  ld   $63         ;0343 POP
              6c70 00ff  ld   $ff         ;0344 RET
              6c71 002b  ld   $2b         ;0345 STW
              6c72 0068  ld   $68         ;0345 'GameOver'
              6c73 00cd  ld   $cd         ;0347 DEF
              6c74 0059  ld   $59
              6c75 002b  ld   $2b         ;0349 STW
              6c76 006a  ld   $6a         ;0349 'tmp'
              6c77 001a  ld   $1a         ;034b LD
              6c78 000e  ld   $0e
              6c79 0099  ld   $99         ;034d ADDW
              6c7a 006a  ld   $6a         ;034d 'tmp'
              6c7b 0082  ld   $82         ;034f ANDI
              6c7c 00ff  ld   $ff
              6c7d 002b  ld   $2b         ;0351 STW
              6c7e 006a  ld   $6a         ;0351 'tmp'
              6c7f 001a  ld   $1a         ;0353 LD
              6c80 000e  ld   $0e
              6c81 00b8  ld   $b8         ;0355 SUBW
              6c82 006a  ld   $6a         ;0355 'tmp'
              6c83 0035  ld   $35         ;0357 BCC
              6c84 0072  ld   $72         ;0358 NE
              6c85 0051  ld   $51
              6c86 00ff  ld   $ff         ;035a RET
              6c87 002b  ld   $2b         ;035b STW
              6c88 0050  ld   $50         ;035b 'Wait'
              6c89 00cd  ld   $cd         ;035d DEF
              6c8a 007f  ld   $7f
              6c8b 0075  ld   $75         ;035f PUSH
              6c8c 0059  ld   $59         ;0360 LDI
              6c8d 0008  ld   $08
              6c8e 002b  ld   $2b         ;0362 STW
              6c8f 003a  ld   $3a         ;0362 'Color'
              6c90 0059  ld   $59         ;0364 LDI
              6c91 0000  ld   $00
              6c92 002b  ld   $2b         ;0366 STW
              6c93 0038  ld   $38         ;0366 'BgColor'
              6c94 0011  ld   $11         ;0368 LDWI
              6c95 0000  ld   $00
              6c96 0008  ld   $08
              6c97 00cf  ld   $cf         ;036b CALL
              6c98 006c  ld   $6c         ;036b 'ClearScreen'
              6c99 0011  ld   $11         ;036d LDWI
              6c9a 0038  ld   $38
              6c9b 0008  ld   $08
              6c9c 002b  ld   $2b         ;0370 STW
              6c9d 003c  ld   $3c         ;0370 'Pos'
              6c9e 00cd  ld   $cd         ;0372 DEF
              6c9f 007b  ld   $7b
              6ca0 0047  ld   $47         ;0374 'G'
              6ca1 0069  ld   $69         ;0375 'i'
              6ca2 0067  ld   $67         ;0376 'g'
              6ca3 0061  ld   $61         ;0377 'a'
              6ca4 0074  ld   $74         ;0378 't'
              6ca5 0072  ld   $72         ;0379 'r'
              6ca6 006f  ld   $6f         ;037a 'o'
              6ca7 006e  ld   $6e         ;037b 'n'
              6ca8 0000  ld   $00         ;037c 0
              6ca9 00cf  ld   $cf         ;037d CALL
              6caa 0042  ld   $42         ;037d 'PrintText'
              6cab 0063  ld   $63         ;037f POP
              6cac 00ff  ld   $ff         ;0380 RET
              6cad 002b  ld   $2b         ;0381 STW
              6cae 006e  ld   $6e         ;0381 'Intro'
              6caf 00cd  ld   $cd         ;0383 DEF
              6cb0 00a3  ld   $a3
              6cb1 002b  ld   $2b         ;0385 STW
              6cb2 0070  ld   $70         ;0385 'p'
              6cb3 0011  ld   $11         ;0387 LDWI
              6cb4 0003  ld   $03
              6cb5 000b  ld   $0b
              6cb6 002b  ld   $2b         ;038a STW
              6cb7 0022  ld   $22
              6cb8 0021  ld   $21         ;038c LDW
              6cb9 0038  ld   $38         ;038c 'BgColor'
              6cba 005e  ld   $5e         ;038e ST
              6cbb 0025  ld   $25
              6cbc 0021  ld   $21         ;0390 LDW
              6cbd 0070  ld   $70         ;0390 'p'
              6cbe 002b  ld   $2b         ;0392 STW
              6cbf 0026  ld   $26
              6cc0 0059  ld   $59         ;0394 LDI
              6cc1 00a0  ld   $a0
              6cc2 005e  ld   $5e         ;0396 ST
              6cc3 0024  ld   $24
              6cc4 00b4  ld   $b4         ;0398 SYS
              6cc5 00f4  ld   $f4
              6cc6 0011  ld   $11         ;039a LDWI
              6cc7 0000  ld   $00
              6cc8 0001  ld   $01
              6cc9 0099  ld   $99         ;039d ADDW
              6cca 0070  ld   $70         ;039d 'p'
              6ccb 002b  ld   $2b         ;039f STW
              6ccc 0070  ld   $70         ;039f 'p'
              6ccd 0035  ld   $35         ;03a1 BCC
              6cce 004d  ld   $4d         ;03a2 GT
              6ccf 0090  ld   $90
              6cd0 00ff  ld   $ff         ;03a4 RET
              6cd1 002b  ld   $2b         ;03a5 STW
              6cd2 006c  ld   $6c         ;03a5 'ClearScreen'
              6cd3 00cd  ld   $cd         ;03a7 DEF
              6cd4 00c1  ld   $c1
              6cd5 0059  ld   $59         ;03a9 LDI
              6cd6 0000  ld   $00
              6cd7 00b8  ld   $b8         ;03ab SUBW
              6cd8 0072  ld   $72         ;03ab 'stepV'
              6cd9 002b  ld   $2b         ;03ad STW
              6cda 006a  ld   $6a         ;03ad 'tmp'
              6cdb 0021  ld   $21         ;03af LDW
              6cdc 0074  ld   $74         ;03af 'stepU'
              6cdd 002b  ld   $2b         ;03b1 STW
              6cde 0072  ld   $72         ;03b1 'stepV'
              6cdf 0021  ld   $21         ;03b3 LDW
              6ce0 006a  ld   $6a         ;03b3 'tmp'
              6ce1 002b  ld   $2b         ;03b5 STW
              6ce2 0074  ld   $74         ;03b5 'stepU'
              6ce3 0021  ld   $21         ;03b7 LDW
              6ce4 0076  ld   $76         ;03b7 'Bias'
              6ce5 0035  ld   $35         ;03b9 BCC
              6ce6 0053  ld   $53         ;03ba GE
              6ce7 00bc  ld   $bc
              6ce8 0059  ld   $59         ;03bc LDI
              6ce9 0000  ld   $00
              6cea 00e3  ld   $e3         ;03be ADDI
              6ceb 003c  ld   $3c
              6cec 002b  ld   $2b         ;03c0 STW
              6ced 0076  ld   $76         ;03c0 'Bias'
              6cee 00ff  ld   $ff         ;03c2 RET
              6cef 002b  ld   $2b         ;03c3 STW
              6cf0 0078  ld   $78         ;03c3 'TurnL'
              6cf1 00cd  ld   $cd         ;03c5 DEF
              6cf2 00df  ld   $df
              6cf3 0059  ld   $59         ;03c7 LDI
              6cf4 0000  ld   $00
              6cf5 00b8  ld   $b8         ;03c9 SUBW
              6cf6 0074  ld   $74         ;03c9 'stepU'
              6cf7 002b  ld   $2b         ;03cb STW
              6cf8 006a  ld   $6a         ;03cb 'tmp'
              6cf9 0021  ld   $21         ;03cd LDW
              6cfa 0072  ld   $72         ;03cd 'stepV'
              6cfb fe00  bra  ac          ;+-----------------------------------+
              6cfc fcfd  bra  $6cfd       ;|                                   |
              6cfd 1418  ld   $18,y       ;| Trampoline for page $6c00 lookups |
              6cfe e006  jmp  y,$06       ;|                                   |
              6cff c218  st   [$18]       ;+-----------------------------------+
              6d00 002b  ld   $2b         ;03cf STW
              6d01 0074  ld   $74         ;03cf 'stepU'
              6d02 0021  ld   $21         ;03d1 LDW
              6d03 006a  ld   $6a         ;03d1 'tmp'
              6d04 002b  ld   $2b         ;03d3 STW
              6d05 0072  ld   $72         ;03d3 'stepV'
              6d06 0021  ld   $21         ;03d5 LDW
              6d07 0076  ld   $76         ;03d5 'Bias'
              6d08 0035  ld   $35         ;03d7 BCC
              6d09 0056  ld   $56         ;03d8 LE
              6d0a 00da  ld   $da
              6d0b 0059  ld   $59         ;03da LDI
              6d0c 0000  ld   $00
              6d0d 00e6  ld   $e6         ;03dc SUBI
              6d0e 003c  ld   $3c
              6d0f 002b  ld   $2b         ;03de STW
              6d10 0076  ld   $76         ;03de 'Bias'
              6d11 00ff  ld   $ff         ;03e0 RET
              6d12 002b  ld   $2b         ;03e1 STW
              6d13 007a  ld   $7a         ;03e1 'TurnR'
              6d14 00cd  ld   $cd         ;03e3 DEF
              6d15 00f0  ld   $f0
              6d16 002b  ld   $2b         ;03e5 STW
              6d17 003c  ld   $3c         ;03e5 'Pos'
              6d18 0021  ld   $21         ;03e7 LDW
              6d19 003a  ld   $3a         ;03e7 'Color'
              6d1a 005e  ld   $5e         ;03e9 ST
              6d1b 0019  ld   $19
              6d1c 00f3  ld   $f3         ;03eb DOKE
              6d1d 003c  ld   $3c         ;03eb 'Pos'
              6d1e 0093  ld   $93         ;03ed INC
              6d1f 003d  ld   $3d         ;03ed 'Pos'+1
              6d20 00f3  ld   $f3         ;03ef DOKE
              6d21 003c  ld   $3c         ;03ef 'Pos'
              6d22 00ff  ld   $ff         ;03f1 RET
              6d23 002b  ld   $2b         ;03f2 STW
              6d24 005a  ld   $5a         ;03f2 'DrawBlock'
              6d25 0093  ld   $93         ;03f4 INC
              6d26 001b  ld   $1b         ;03f4 '_vLR'+1
              6d27 00ff  ld   $ff         ;03f6 RET
              6d28 0004  ld   $04         ;| RAM segment address (high byte first)
              6d29 0000  ld   $00         ;|
              6d2a 00f9  ld   $f9         ;| Length (1..256)
              6d2b 00cd  ld   $cd         ;0400 DEF
              6d2c 00ae  ld   $ae
              6d2d 0075  ld   $75         ;0402 PUSH
              6d2e 00cf  ld   $cf         ;0403 CALL
              6d2f 0060  ld   $60         ;0403 'Control'
              6d30 001a  ld   $1a         ;0405 LD
              6d31 0075  ld   $75         ;0405 'stepU'+1
              6d32 0082  ld   $82         ;0407 ANDI
              6d33 0080  ld   $80
              6d34 002b  ld   $2b         ;0409 STW
              6d35 006a  ld   $6a         ;0409 'tmp'
              6d36 0021  ld   $21         ;040b LDW
              6d37 0074  ld   $74         ;040b 'stepU'
              6d38 0082  ld   $82         ;040d ANDI
              6d39 0002  ld   $02
              6d3a 0035  ld   $35         ;040f BCC
              6d3b 003f  ld   $3f         ;0410 EQ
              6d3c 0012  ld   $12
              6d3d 0059  ld   $59         ;0412 LDI
              6d3e 0040  ld   $40
              6d3f 0099  ld   $99         ;0414 ADDW
              6d40 006a  ld   $6a         ;0414 'tmp'
              6d41 00e3  ld   $e3         ;0416 ADDI
              6d42 001b  ld   $1b
              6d43 002b  ld   $2b         ;0418 STW
              6d44 003a  ld   $3a         ;0418 'Color'
              6d45 001a  ld   $1a         ;041a LD
              6d46 0059  ld   $59         ;041a 'Head'+1
              6d47 00fc  ld   $fc         ;041c XORW
              6d48 0058  ld   $58         ;041c 'Head'
              6d49 0082  ld   $82         ;041e ANDI
              6d4a 0002  ld   $02
              6d4b 0035  ld   $35         ;0420 BCC
              6d4c 003f  ld   $3f         ;0421 EQ
              6d4d 0023  ld   $23
              6d4e 0059  ld   $59         ;0423 LDI
              6d4f 0001  ld   $01
              6d50 00fc  ld   $fc         ;0425 XORW
              6d51 003a  ld   $3a         ;0425 'Color'
              6d52 002b  ld   $2b         ;0427 STW
              6d53 003a  ld   $3a         ;0427 'Color'
              6d54 0021  ld   $21         ;0429 LDW
              6d55 0058  ld   $58         ;0429 'Head'
              6d56 00cf  ld   $cf         ;042b CALL
              6d57 005a  ld   $5a         ;042b 'DrawBlock'
              6d58 0021  ld   $21         ;042d LDW
              6d59 0058  ld   $58         ;042d 'Head'
              6d5a 0099  ld   $99         ;042f ADDW
              6d5b 0074  ld   $74         ;042f 'stepU'
              6d5c 002b  ld   $2b         ;0431 STW
              6d5d 0058  ld   $58         ;0431 'Head'
              6d5e 0021  ld   $21         ;0433 LDW
              6d5f 0058  ld   $58         ;0433 'Head'
              6d60 00ad  ld   $ad         ;0435 PEEK
              6d61 0082  ld   $82         ;0436 ANDI
              6d62 0003  ld   $03
              6d63 0035  ld   $35         ;0438 BCC
              6d64 003f  ld   $3f         ;0439 EQ
              6d65 003b  ld   $3b
              6d66 0063  ld   $63         ;043b POP
              6d67 00ff  ld   $ff         ;043c RET
              6d68 0021  ld   $21         ;043d LDW
              6d69 0058  ld   $58         ;043d 'Head'
              6d6a 00ad  ld   $ad         ;043f PEEK
              6d6b 008c  ld   $8c         ;0440 XORI
              6d6c 0018  ld   $18
              6d6d 0035  ld   $35         ;0442 BCC
              6d6e 0072  ld   $72         ;0443 NE
              6d6f 005d  ld   $5d
              6d70 0059  ld   $59         ;0445 LDI
              6d71 0040  ld   $40
              6d72 0099  ld   $99         ;0447 ADDW
              6d73 004a  ld   $4a         ;0447 'Timer'
              6d74 00cf  ld   $cf         ;0449 CALL
              6d75 007c  ld   $7c         ;0449 'SetNote'
              6d76 0059  ld   $59         ;044b LDI
              6d77 0002  ld   $02
              6d78 005e  ld   $5e         ;044d ST
              6d79 002c  ld   $2c
              6d7a 0021  ld   $21         ;044f LDW
              6d7b 005e  ld   $5e         ;044f 'Score'
              6d7c 0099  ld   $99         ;0451 ADDW
              6d7d 004a  ld   $4a         ;0451 'Timer'
              6d7e 002b  ld   $2b         ;0453 STW
              6d7f 005e  ld   $5e         ;0453 'Score'
              6d80 00cf  ld   $cf         ;0455 CALL
              6d81 007e  ld   $7e         ;0455 'DrawScore'
              6d82 0059  ld   $59         ;0457 LDI
              6d83 0005  ld   $05
              6d84 00cf  ld   $cf         ;0459 CALL
              6d85 0081  ld   $81         ;0459 'AddTimer'
              6d86 0093  ld   $93         ;045b INC
              6d87 0083  ld   $83         ;045b 'Grow'
              6d88 0093  ld   $93         ;045d INC
              6d89 0085  ld   $85         ;045d 'Drops'
              6d8a 00cf  ld   $cf         ;045f CALL
              6d8b 005c  ld   $5c         ;045f 'DrawHead'
              6d8c 0021  ld   $21         ;0461 LDW
              6d8d 0083  ld   $83         ;0461 'Grow'
              6d8e 0035  ld   $35         ;0463 BCC
              6d8f 0056  ld   $56         ;0464 LE
              6d90 006c  ld   $6c
              6d91 00e6  ld   $e6         ;0466 SUBI
              6d92 0001  ld   $01
              6d93 002b  ld   $2b         ;0468 STW
              6d94 0083  ld   $83         ;0468 'Grow'
              6d95 00cf  ld   $cf         ;046a CALL
              6d96 0087  ld   $87         ;046a 'AddFood'
              6d97 0090  ld   $90         ;046c BRA
              6d98 00aa  ld   $aa
              6d99 0021  ld   $21         ;046e LDW
              6d9a 0089  ld   $89         ;046e 'Tail'
              6d9b 00ad  ld   $ad         ;0470 PEEK
              6d9c 002b  ld   $2b         ;0471 STW
              6d9d 006a  ld   $6a         ;0471 'tmp'
              6d9e 0021  ld   $21         ;0473 LDW
              6d9f 0085  ld   $85         ;0473 'Drops'
              6da0 0035  ld   $35         ;0475 BCC
              6da1 0056  ld   $56         ;0476 LE
              6da2 007e  ld   $7e
              6da3 00e6  ld   $e6         ;0478 SUBI
              6da4 0001  ld   $01
              6da5 002b  ld   $2b         ;047a STW
              6da6 0085  ld   $85         ;047a 'Drops'
              6da7 0059  ld   $59         ;047c LDI
              6da8 003e  ld   $3e
              6da9 0090  ld   $90         ;047e BRA
              6daa 0080  ld   $80
              6dab 0059  ld   $59         ;0480 LDI
              6dac 0004  ld   $04
              6dad 002b  ld   $2b         ;0482 STW
              6dae 003a  ld   $3a         ;0482 'Color'
              6daf 0021  ld   $21         ;0484 LDW
              6db0 0089  ld   $89         ;0484 'Tail'
              6db1 00cf  ld   $cf         ;0486 CALL
              6db2 005a  ld   $5a         ;0486 'DrawBlock'
              6db3 0021  ld   $21         ;0488 LDW
              6db4 006a  ld   $6a         ;0488 'tmp'
              6db5 0082  ld   $82         ;048a ANDI
              6db6 0040  ld   $40
              6db7 0035  ld   $35         ;048c BCC
              6db8 0072  ld   $72         ;048d NE
              6db9 0092  ld   $92
              6dba 0011  ld   $11         ;048f LDWI
              6dbb 0000  ld   $00
              6dbc 0001  ld   $01
              6dbd 0090  ld   $90         ;0492 BRA
              6dbe 0094  ld   $94
              6dbf 0059  ld   $59         ;0494 LDI
              6dc0 0001  ld   $01
              6dc1 002b  ld   $2b         ;0496 STW
              6dc2 008b  ld   $8b         ;0496 'x'
              6dc3 0021  ld   $21         ;0498 LDW
              6dc4 006a  ld   $6a         ;0498 'tmp'
              6dc5 0082  ld   $82         ;049a ANDI
              6dc6 0080  ld   $80
              6dc7 0035  ld   $35         ;049c BCC
              6dc8 0072  ld   $72         ;049d NE
              6dc9 00a1  ld   $a1
              6dca 0021  ld   $21         ;049f LDW
              6dcb 008b  ld   $8b         ;049f 'x'
              6dcc 0090  ld   $90         ;04a1 BRA
              6dcd 00a5  ld   $a5
              6dce 0059  ld   $59         ;04a3 LDI
              6dcf 0000  ld   $00
              6dd0 00b8  ld   $b8         ;04a5 SUBW
              6dd1 008b  ld   $8b         ;04a5 'x'
              6dd2 00e9  ld   $e9         ;04a7 LSLW
              6dd3 0099  ld   $99         ;04a8 ADDW
              6dd4 0089  ld   $89         ;04a8 'Tail'
              6dd5 002b  ld   $2b         ;04aa STW
              6dd6 0089  ld   $89         ;04aa 'Tail'
              6dd7 00cf  ld   $cf         ;04ac CALL
              6dd8 0052  ld   $52         ;04ac 'TimeStep'
              6dd9 0090  ld   $90         ;04ae BRA
              6dda 0001  ld   $01
              6ddb 002b  ld   $2b         ;04b0 STW
              6ddc 008d  ld   $8d         ;04b0 'RunGame'
              6ddd 00cd  ld   $cd         ;04b2 DEF
              6dde 00ee  ld   $ee
              6ddf 0075  ld   $75         ;04b4 PUSH
              6de0 0059  ld   $59         ;04b5 LDI
              6de1 0018  ld   $18
              6de2 002b  ld   $2b         ;04b7 STW
              6de3 003a  ld   $3a         ;04b7 'Color'
              6de4 0011  ld   $11         ;04b9 LDWI
              6de5 00a7  ld   $a7
              6de6 0004  ld   $04
              6de7 002b  ld   $2b         ;04bc STW
              6de8 0022  ld   $22
              6de9 00b4  ld   $b4         ;04be SYS
              6dea 00fe  ld   $fe
              6deb 002b  ld   $2b         ;04c0 STW
              6dec 003c  ld   $3c         ;04c0 'Pos'
              6ded 001a  ld   $1a         ;04c2 LD
              6dee 003c  ld   $3c         ;04c2 'Pos'
              6def 00e6  ld   $e6         ;04c4 SUBI
              6df0 0080  ld   $80
              6df1 0035  ld   $35         ;04c6 BCC
              6df2 0053  ld   $53         ;04c7 GE
              6df3 00c9  ld   $c9
              6df4 00e3  ld   $e3         ;04c9 ADDI
              6df5 0096  ld   $96
              6df6 00e3  ld   $e3         ;04cb ADDI
              6df7 0005  ld   $05
              6df8 0082  ld   $82         ;04cd ANDI
              6df9 00fe  ld   $fe
              6dfa 005e  ld   $5e         ;04cf ST
              6dfb fe00  bra  ac          ;+-----------------------------------+
              6dfc fcfd  bra  $6dfd       ;|                                   |
              6dfd 1418  ld   $18,y       ;| Trampoline for page $6d00 lookups |
              6dfe e006  jmp  y,$06       ;|                                   |
              6dff c218  st   [$18]       ;+-----------------------------------+
              6e00 003c  ld   $3c         ;04cf 'Pos'
              6e01 001a  ld   $1a         ;04d1 LD
              6e02 003d  ld   $3d         ;04d1 'Pos'+1
              6e03 0082  ld   $82         ;04d3 ANDI
              6e04 007f  ld   $7f
              6e05 00e6  ld   $e6         ;04d5 SUBI
              6e06 0040  ld   $40
              6e07 0035  ld   $35         ;04d7 BCC
              6e08 0053  ld   $53         ;04d8 GE
              6e09 00da  ld   $da
              6e0a 00e3  ld   $e3         ;04da ADDI
              6e0b 0066  ld   $66
              6e0c 00e3  ld   $e3         ;04dc ADDI
              6e0d 0015  ld   $15
              6e0e 0082  ld   $82         ;04de ANDI
              6e0f 00fe  ld   $fe
              6e10 005e  ld   $5e         ;04e0 ST
              6e11 003d  ld   $3d         ;04e0 'Pos'+1
              6e12 0021  ld   $21         ;04e2 LDW
              6e13 003c  ld   $3c         ;04e2 'Pos'
              6e14 00ad  ld   $ad         ;04e4 PEEK
              6e15 008c  ld   $8c         ;04e5 XORI
              6e16 0004  ld   $04
              6e17 0035  ld   $35         ;04e7 BCC
              6e18 0072  ld   $72         ;04e8 NE
              6e19 00b7  ld   $b7
              6e1a 0021  ld   $21         ;04ea LDW
              6e1b 003c  ld   $3c         ;04ea 'Pos'
              6e1c 00cf  ld   $cf         ;04ec CALL
              6e1d 005a  ld   $5a         ;04ec 'DrawBlock'
              6e1e 0063  ld   $63         ;04ee POP
              6e1f 00ff  ld   $ff         ;04ef RET
              6e20 002b  ld   $2b         ;04f0 STW
              6e21 0087  ld   $87         ;04f0 'AddFood'
              6e22 0059  ld   $59         ;04f2 LDI
              6e23 0000  ld   $00
              6e24 002b  ld   $2b         ;04f4 STW
              6e25 0076  ld   $76         ;04f4 'Bias'
              6e26 0093  ld   $93         ;04f6 INC
              6e27 001b  ld   $1b         ;04f6 '_vLR'+1
              6e28 00ff  ld   $ff         ;04f8 RET
              6e29 0005  ld   $05         ;| RAM segment address (high byte first)
              6e2a 0000  ld   $00         ;|
              6e2b 00ed  ld   $ed         ;| Length (1..256)
              6e2c 00cd  ld   $cd         ;0500 DEF
              6e2d 00e6  ld   $e6
              6e2e 0075  ld   $75         ;0502 PUSH
              6e2f 001a  ld   $1a         ;0503 LD
              6e30 0011  ld   $11
              6e31 0082  ld   $82         ;0505 ANDI
              6e32 00cf  ld   $cf
              6e33 008c  ld   $8c         ;0507 XORI
              6e34 00cf  ld   $cf
              6e35 0035  ld   $35         ;0509 BCC
              6e36 003f  ld   $3f         ;050a EQ
              6e37 000e  ld   $0e
              6e38 00cf  ld   $cf         ;050c CALL
              6e39 008f  ld   $8f         ;050c 'SetupGame'
              6e3a 0063  ld   $63         ;050e POP
              6e3b 00ff  ld   $ff         ;050f RET
              6e3c 0021  ld   $21         ;0510 LDW
              6e3d 0078  ld   $78         ;0510 'TurnL'
              6e3e 002b  ld   $2b         ;0512 STW
              6e3f 0070  ld   $70         ;0512 'p'
              6e40 0021  ld   $21         ;0514 LDW
              6e41 007a  ld   $7a         ;0514 'TurnR'
              6e42 002b  ld   $2b         ;0516 STW
              6e43 0091  ld   $91         ;0516 'q'
              6e44 0021  ld   $21         ;0518 LDW
              6e45 0058  ld   $58         ;0518 'Head'
              6e46 0099  ld   $99         ;051a ADDW
              6e47 0074  ld   $74         ;051a 'stepU'
              6e48 00ad  ld   $ad         ;051c PEEK
              6e49 008c  ld   $8c         ;051d XORI
              6e4a 0004  ld   $04
              6e4b 002b  ld   $2b         ;051f STW
              6e4c 006a  ld   $6a         ;051f 'tmp'
              6e4d 0035  ld   $35         ;0521 BCC
              6e4e 003f  ld   $3f         ;0522 EQ
              6e4f 002b  ld   $2b
              6e50 008c  ld   $8c         ;0524 XORI
              6e51 001c  ld   $1c
              6e52 0035  ld   $35         ;0526 BCC
              6e53 0072  ld   $72         ;0527 NE
              6e54 0029  ld   $29
              6e55 002b  ld   $2b         ;0529 STW
              6e56 006a  ld   $6a         ;0529 'tmp'
              6e57 0090  ld   $90         ;052b BRA
              6e58 0039  ld   $39
              6e59 0021  ld   $21         ;052d LDW
              6e5a 0058  ld   $58         ;052d 'Head'
              6e5b 0099  ld   $99         ;052f ADDW
              6e5c 0074  ld   $74         ;052f 'stepU'
              6e5d 0099  ld   $99         ;0531 ADDW
              6e5e 0074  ld   $74         ;0531 'stepU'
              6e5f 00ad  ld   $ad         ;0533 PEEK
              6e60 008c  ld   $8c         ;0534 XORI
              6e61 003e  ld   $3e
              6e62 0035  ld   $35         ;0536 BCC
              6e63 0072  ld   $72         ;0537 NE
              6e64 0039  ld   $39
              6e65 0093  ld   $93         ;0539 INC
              6e66 006b  ld   $6b         ;0539 'tmp'+1
              6e67 0021  ld   $21         ;053b LDW
              6e68 0058  ld   $58         ;053b 'Head'
              6e69 00b8  ld   $b8         ;053d SUBW
              6e6a 0072  ld   $72         ;053d 'stepV'
              6e6b 00ad  ld   $ad         ;053f PEEK
              6e6c 008c  ld   $8c         ;0540 XORI
              6e6d 0004  ld   $04
              6e6e 0035  ld   $35         ;0542 BCC
              6e6f 003f  ld   $3f         ;0543 EQ
              6e70 0054  ld   $54
              6e71 008c  ld   $8c         ;0545 XORI
              6e72 001c  ld   $1c
              6e73 0035  ld   $35         ;0547 BCC
              6e74 0072  ld   $72         ;0548 NE
              6e75 004e  ld   $4e
              6e76 002b  ld   $2b         ;054a STW
              6e77 0091  ld   $91         ;054a 'q'
              6e78 0093  ld   $93         ;054c INC
              6e79 006b  ld   $6b         ;054c 'tmp'+1
              6e7a 0090  ld   $90         ;054e BRA
              6e7b 0052  ld   $52
              6e7c 0059  ld   $59         ;0550 LDI
              6e7d 0000  ld   $00
              6e7e 002b  ld   $2b         ;0552 STW
              6e7f 0070  ld   $70         ;0552 'p'
              6e80 0090  ld   $90         ;0554 BRA
              6e81 0071  ld   $71
              6e82 0021  ld   $21         ;0556 LDW
              6e83 0058  ld   $58         ;0556 'Head'
              6e84 00b8  ld   $b8         ;0558 SUBW
              6e85 0072  ld   $72         ;0558 'stepV'
              6e86 00b8  ld   $b8         ;055a SUBW
              6e87 0072  ld   $72         ;055a 'stepV'
              6e88 00ad  ld   $ad         ;055c PEEK
              6e89 008c  ld   $8c         ;055d XORI
              6e8a 0004  ld   $04
              6e8b 0035  ld   $35         ;055f BCC
              6e8c 003f  ld   $3f         ;0560 EQ
              6e8d 0071  ld   $71
              6e8e 008c  ld   $8c         ;0562 XORI
              6e8f 001c  ld   $1c
              6e90 0035  ld   $35         ;0564 BCC
              6e91 0072  ld   $72         ;0565 NE
              6e92 006b  ld   $6b
              6e93 002b  ld   $2b         ;0567 STW
              6e94 0091  ld   $91         ;0567 'q'
              6e95 0093  ld   $93         ;0569 INC
              6e96 006b  ld   $6b         ;0569 'tmp'+1
              6e97 0090  ld   $90         ;056b BRA
              6e98 0071  ld   $71
              6e99 0021  ld   $21         ;056d LDW
              6e9a 0076  ld   $76         ;056d 'Bias'
              6e9b 00e3  ld   $e3         ;056f ADDI
              6e9c 000f  ld   $0f
              6e9d 0021  ld   $21         ;0571 LDW
              6e9e 0076  ld   $76         ;0571 'Bias'
              6e9f 0021  ld   $21         ;0573 LDW
              6ea0 0058  ld   $58         ;0573 'Head'
              6ea1 0099  ld   $99         ;0575 ADDW
              6ea2 0072  ld   $72         ;0575 'stepV'
              6ea3 00ad  ld   $ad         ;0577 PEEK
              6ea4 008c  ld   $8c         ;0578 XORI
              6ea5 0004  ld   $04
              6ea6 0035  ld   $35         ;057a BCC
              6ea7 003f  ld   $3f         ;057b EQ
              6ea8 008c  ld   $8c
              6ea9 008c  ld   $8c         ;057d XORI
              6eaa 001c  ld   $1c
              6eab 0035  ld   $35         ;057f BCC
              6eac 0072  ld   $72         ;0580 NE
              6ead 0086  ld   $86
              6eae 002b  ld   $2b         ;0582 STW
              6eaf 0070  ld   $70         ;0582 'p'
              6eb0 0093  ld   $93         ;0584 INC
              6eb1 006b  ld   $6b         ;0584 'tmp'+1
              6eb2 0090  ld   $90         ;0586 BRA
              6eb3 008a  ld   $8a
              6eb4 0059  ld   $59         ;0588 LDI
              6eb5 0000  ld   $00
              6eb6 002b  ld   $2b         ;058a STW
              6eb7 0091  ld   $91         ;058a 'q'
              6eb8 0090  ld   $90         ;058c BRA
              6eb9 00a9  ld   $a9
              6eba 0021  ld   $21         ;058e LDW
              6ebb 0058  ld   $58         ;058e 'Head'
              6ebc 0099  ld   $99         ;0590 ADDW
              6ebd 0072  ld   $72         ;0590 'stepV'
              6ebe 0099  ld   $99         ;0592 ADDW
              6ebf 0072  ld   $72         ;0592 'stepV'
              6ec0 00ad  ld   $ad         ;0594 PEEK
              6ec1 008c  ld   $8c         ;0595 XORI
              6ec2 0004  ld   $04
              6ec3 0035  ld   $35         ;0597 BCC
              6ec4 003f  ld   $3f         ;0598 EQ
              6ec5 00a9  ld   $a9
              6ec6 008c  ld   $8c         ;059a XORI
              6ec7 001c  ld   $1c
              6ec8 0035  ld   $35         ;059c BCC
              6ec9 0072  ld   $72         ;059d NE
              6eca 00a3  ld   $a3
              6ecb 002b  ld   $2b         ;059f STW
              6ecc 0070  ld   $70         ;059f 'p'
              6ecd 0093  ld   $93         ;05a1 INC
              6ece 006b  ld   $6b         ;05a1 'tmp'+1
              6ecf 0090  ld   $90         ;05a3 BRA
              6ed0 00a9  ld   $a9
              6ed1 0021  ld   $21         ;05a5 LDW
              6ed2 0076  ld   $76         ;05a5 'Bias'
              6ed3 00e6  ld   $e6         ;05a7 SUBI
              6ed4 000f  ld   $0f
              6ed5 0021  ld   $21         ;05a9 LDW
              6ed6 0076  ld   $76         ;05a9 'Bias'
              6ed7 0021  ld   $21         ;05ab LDW
              6ed8 006a  ld   $6a         ;05ab 'tmp'
              6ed9 0035  ld   $35         ;05ad BCC
              6eda 0072  ld   $72         ;05ae NE
              6edb 00bb  ld   $bb
              6edc 001a  ld   $1a         ;05b0 LD
              6edd 0006  ld   $06
              6ede 00e6  ld   $e6         ;05b2 SUBI
              6edf 000d  ld   $0d
              6ee0 0035  ld   $35         ;05b4 BCC
              6ee1 0053  ld   $53         ;05b5 GE
              6ee2 00b9  ld   $b9
              6ee3 0059  ld   $59         ;05b7 LDI
              6ee4 0001  ld   $01
              6ee5 0090  ld   $90         ;05b9 BRA
              6ee6 00bb  ld   $bb
              6ee7 0059  ld   $59         ;05bb LDI
              6ee8 0000  ld   $00
              6ee9 0035  ld   $35         ;05bd BCC
              6eea 003f  ld   $3f         ;05be EQ
              6eeb 00e4  ld   $e4
              6eec 0021  ld   $21         ;05c0 LDW
              6eed 0070  ld   $70         ;05c0 'p'
              6eee 0035  ld   $35         ;05c2 BCC
              6eef 0072  ld   $72         ;05c3 NE
              6ef0 00c7  ld   $c7
              6ef1 0021  ld   $21         ;05c5 LDW
              6ef2 0091  ld   $91         ;05c5 'q'
              6ef3 0090  ld   $90         ;05c7 BRA
              6ef4 00df  ld   $df
              6ef5 0021  ld   $21         ;05c9 LDW
              6ef6 0091  ld   $91         ;05c9 'q'
              6ef7 0035  ld   $35         ;05cb BCC
              6ef8 0072  ld   $72         ;05cc NE
              6ef9 00d0  ld   $d0
              6efa 0021  ld   $21         ;05ce LDW
              6efb fe00  bra  ac          ;+-----------------------------------+
              6efc fcfd  bra  $6efd       ;|                                   |
              6efd 1418  ld   $18,y       ;| Trampoline for page $6e00 lookups |
              6efe e006  jmp  y,$06       ;|                                   |
              6eff c218  st   [$18]       ;+-----------------------------------+
              6f00 0070  ld   $70         ;05ce 'p'
              6f01 0090  ld   $90         ;05d0 BRA
              6f02 00df  ld   $df
              6f03 001a  ld   $1a         ;05d2 LD
              6f04 0006  ld   $06
              6f05 00e6  ld   $e6         ;05d4 SUBI
              6f06 0080  ld   $80
              6f07 0099  ld   $99         ;05d6 ADDW
              6f08 0076  ld   $76         ;05d6 'Bias'
              6f09 0035  ld   $35         ;05d8 BCC
              6f0a 0053  ld   $53         ;05d9 GE
              6f0b 00dd  ld   $dd
              6f0c 0021  ld   $21         ;05db LDW
              6f0d 0070  ld   $70         ;05db 'p'
              6f0e 0090  ld   $90         ;05dd BRA
              6f0f 00df  ld   $df
              6f10 0021  ld   $21         ;05df LDW
              6f11 0091  ld   $91         ;05df 'q'
              6f12 0035  ld   $35         ;05e1 BCC
              6f13 003f  ld   $3f         ;05e2 EQ
              6f14 00e4  ld   $e4
              6f15 00cf  ld   $cf         ;05e4 CALL
              6f16 0018  ld   $18         ;05e4 vAC
              6f17 0063  ld   $63         ;05e6 POP
              6f18 00ff  ld   $ff         ;05e7 RET
              6f19 002b  ld   $2b         ;05e8 STW
              6f1a 0093  ld   $93         ;05e8 'AutoControl'
              6f1b 0093  ld   $93         ;05ea INC
              6f1c 001b  ld   $1b         ;05ea '_vLR'+1
              6f1d 00ff  ld   $ff         ;05ec RET
              6f1e 0006  ld   $06         ;| RAM segment address (high byte first)
              6f1f 0000  ld   $00         ;|
              6f20 00fa  ld   $fa         ;| Length (1..256)
              6f21 00cd  ld   $cd         ;0600 DEF
              6f22 0016  ld   $16
              6f23 0075  ld   $75         ;0602 PUSH
              6f24 0099  ld   $99         ;0603 ADDW
              6f25 004a  ld   $4a         ;0603 'Timer'
              6f26 002b  ld   $2b         ;0605 STW
              6f27 004a  ld   $4a         ;0605 'Timer'
              6f28 00e6  ld   $e6         ;0607 SUBI
              6f29 000f  ld   $0f
              6f2a 0035  ld   $35         ;0609 BCC
              6f2b 0056  ld   $56         ;060a LE
              6f2c 000e  ld   $0e
              6f2d 0059  ld   $59         ;060c LDI
              6f2e 000f  ld   $0f
              6f2f 002b  ld   $2b         ;060e STW
              6f30 004a  ld   $4a         ;060e 'Timer'
              6f31 001a  ld   $1a         ;0610 LD
              6f32 000e  ld   $0e
              6f33 002b  ld   $2b         ;0612 STW
              6f34 0048  ld   $48         ;0612 'TimeOut'
              6f35 00cf  ld   $cf         ;0614 CALL
              6f36 004c  ld   $4c         ;0614 'DrawTimer'
              6f37 0063  ld   $63         ;0616 POP
              6f38 00ff  ld   $ff         ;0617 RET
              6f39 002b  ld   $2b         ;0618 STW
              6f3a 0081  ld   $81         ;0618 'AddTimer'
              6f3b 00cd  ld   $cd         ;061a DEF
              6f3c 00b3  ld   $b3
              6f3d 0075  ld   $75         ;061c PUSH
              6f3e 0059  ld   $59         ;061d LDI
              6f3f 0000  ld   $00
              6f40 002b  ld   $2b         ;061f STW
              6f41 005e  ld   $5e         ;061f 'Score'
              6f42 002b  ld   $2b         ;0621 STW
              6f43 004a  ld   $4a         ;0621 'Timer'
              6f44 00cf  ld   $cf         ;0623 CALL
              6f45 007e  ld   $7e         ;0623 'DrawScore'
              6f46 0059  ld   $59         ;0625 LDI
              6f47 000f  ld   $0f
              6f48 002b  ld   $2b         ;0627 STW
              6f49 004a  ld   $4a         ;0627 'Timer'
              6f4a 00cf  ld   $cf         ;0629 CALL
              6f4b 004c  ld   $4c         ;0629 'DrawTimer'
              6f4c 00cf  ld   $cf         ;062b CALL
              6f4d 0064  ld   $64         ;062b 'DrawHighScore'
              6f4e 0059  ld   $59         ;062d LDI
              6f4f 0004  ld   $04
              6f50 002b  ld   $2b         ;062f STW
              6f51 0038  ld   $38         ;062f 'BgColor'
              6f52 0011  ld   $11         ;0631 LDWI
              6f53 0000  ld   $00
              6f54 0010  ld   $10
              6f55 002b  ld   $2b         ;0634 STW
              6f56 003c  ld   $3c         ;0634 'Pos'
              6f57 00cf  ld   $cf         ;0636 CALL
              6f58 006c  ld   $6c         ;0636 'ClearScreen'
              6f59 0059  ld   $59         ;0638 LDI
              6f5a 001a  ld   $1a
              6f5b 002b  ld   $2b         ;063a STW
              6f5c 003a  ld   $3a         ;063a 'Color'
              6f5d 0059  ld   $59         ;063c LDI
              6f5e 0001  ld   $01
              6f5f 002b  ld   $2b         ;063e STW
              6f60 0044  ld   $44         ;063e 'Step'
              6f61 0059  ld   $59         ;0640 LDI
              6f62 009f  ld   $9f
              6f63 00cf  ld   $cf         ;0642 CALL
              6f64 0046  ld   $46         ;0642 'DrawLine'
              6f65 0011  ld   $11         ;0644 LDWI
              6f66 0000  ld   $00
              6f67 0001  ld   $01
              6f68 002b  ld   $2b         ;0647 STW
              6f69 0044  ld   $44         ;0647 'Step'
              6f6a 0059  ld   $59         ;0649 LDI
              6f6b 006f  ld   $6f
              6f6c 00cf  ld   $cf         ;064b CALL
              6f6d 0046  ld   $46         ;064b 'DrawLine'
              6f6e 0011  ld   $11         ;064d LDWI
              6f6f 00ff  ld   $ff
              6f70 00ff  ld   $ff
              6f71 002b  ld   $2b         ;0650 STW
              6f72 0044  ld   $44         ;0650 'Step'
              6f73 0059  ld   $59         ;0652 LDI
              6f74 009f  ld   $9f
              6f75 00cf  ld   $cf         ;0654 CALL
              6f76 0046  ld   $46         ;0654 'DrawLine'
              6f77 0011  ld   $11         ;0656 LDWI
              6f78 0000  ld   $00
              6f79 00ff  ld   $ff
              6f7a 002b  ld   $2b         ;0659 STW
              6f7b 0044  ld   $44         ;0659 'Step'
              6f7c 0059  ld   $59         ;065b LDI
              6f7d 006e  ld   $6e
              6f7e 00cf  ld   $cf         ;065d CALL
              6f7f 0046  ld   $46         ;065d 'DrawLine'
              6f80 0059  ld   $59         ;065f LDI
              6f81 0001  ld   $01
              6f82 002b  ld   $2b         ;0661 STW
              6f83 0044  ld   $44         ;0661 'Step'
              6f84 0059  ld   $59         ;0663 LDI
              6f85 009e  ld   $9e
              6f86 00cf  ld   $cf         ;0665 CALL
              6f87 0046  ld   $46         ;0665 'DrawLine'
              6f88 0011  ld   $11         ;0667 LDWI
              6f89 0000  ld   $00
              6f8a 0001  ld   $01
              6f8b 002b  ld   $2b         ;066a STW
              6f8c 0044  ld   $44         ;066a 'Step'
              6f8d 0059  ld   $59         ;066c LDI
              6f8e 006d  ld   $6d
              6f8f 00cf  ld   $cf         ;066e CALL
              6f90 0046  ld   $46         ;066e 'DrawLine'
              6f91 0011  ld   $11         ;0670 LDWI
              6f92 00ff  ld   $ff
              6f93 00ff  ld   $ff
              6f94 002b  ld   $2b         ;0673 STW
              6f95 0044  ld   $44         ;0673 'Step'
              6f96 0059  ld   $59         ;0675 LDI
              6f97 009d  ld   $9d
              6f98 00cf  ld   $cf         ;0677 CALL
              6f99 0046  ld   $46         ;0677 'DrawLine'
              6f9a 0011  ld   $11         ;0679 LDWI
              6f9b 0000  ld   $00
              6f9c 00ff  ld   $ff
              6f9d 002b  ld   $2b         ;067c STW
              6f9e 0044  ld   $44         ;067c 'Step'
              6f9f 0059  ld   $59         ;067e LDI
              6fa0 006d  ld   $6d
              6fa1 00cf  ld   $cf         ;0680 CALL
              6fa2 0046  ld   $46         ;0680 'DrawLine'
              6fa3 00cf  ld   $cf         ;0682 CALL
              6fa4 0095  ld   $95         ;0682 'GetReady'
              6fa5 0011  ld   $11         ;0684 LDWI
              6fa6 0030  ld   $30
              6fa7 0044  ld   $44
              6fa8 002b  ld   $2b         ;0687 STW
              6fa9 0058  ld   $58         ;0687 'Head'
              6faa 002b  ld   $2b         ;0689 STW
              6fab 0089  ld   $89         ;0689 'Tail'
              6fac 00cf  ld   $cf         ;068b CALL
              6fad 005c  ld   $5c         ;068b 'DrawHead'
              6fae 0059  ld   $59         ;068d LDI
              6faf 0000  ld   $00
              6fb0 002b  ld   $2b         ;068f STW
              6fb1 0083  ld   $83         ;068f 'Grow'
              6fb2 002b  ld   $2b         ;0691 STW
              6fb3 0085  ld   $85         ;0691 'Drops'
              6fb4 002b  ld   $2b         ;0693 STW
              6fb5 004a  ld   $4a         ;0693 'Timer'
              6fb6 0059  ld   $59         ;0695 LDI
              6fb7 000f  ld   $0f
              6fb8 00cf  ld   $cf         ;0697 CALL
              6fb9 0081  ld   $81         ;0697 'AddTimer'
              6fba 0059  ld   $59         ;0699 LDI
              6fbb 0002  ld   $02
              6fbc 002b  ld   $2b         ;069b STW
              6fbd 0074  ld   $74         ;069b 'stepU'
              6fbe 0011  ld   $11         ;069d LDWI
              6fbf 0000  ld   $00
              6fc0 0002  ld   $02
              6fc1 002b  ld   $2b         ;06a0 STW
              6fc2 0072  ld   $72         ;06a0 'stepV'
              6fc3 0059  ld   $59         ;06a2 LDI
              6fc4 0019  ld   $19
              6fc5 002b  ld   $2b         ;06a4 STW
              6fc6 0034  ld   $34         ;06a4 'i'
              6fc7 00cf  ld   $cf         ;06a6 CALL
              6fc8 0087  ld   $87         ;06a6 'AddFood'
              6fc9 0021  ld   $21         ;06a8 LDW
              6fca 0034  ld   $34         ;06a8 'i'
              6fcb 00e6  ld   $e6         ;06aa SUBI
              6fcc 0001  ld   $01
              6fcd 0035  ld   $35         ;06ac BCC
              6fce 004d  ld   $4d         ;06ad GT
              6fcf 00a2  ld   $a2
              6fd0 0021  ld   $21         ;06af LDW
              6fd1 0097  ld   $97         ;06af 'LaunchControl'
              6fd2 002b  ld   $2b         ;06b1 STW
              6fd3 0060  ld   $60         ;06b1 'Control'
              6fd4 0063  ld   $63         ;06b3 POP
              6fd5 00ff  ld   $ff         ;06b4 RET
              6fd6 002b  ld   $2b         ;06b5 STW
              6fd7 008f  ld   $8f         ;06b5 'SetupGame'
              6fd8 00cd  ld   $cd         ;06b7 DEF
              6fd9 00f0  ld   $f0
              6fda 0075  ld   $75         ;06b9 PUSH
              6fdb 0011  ld   $11         ;06ba LDWI
              6fdc 0002  ld   $02
              6fdd 0008  ld   $08
              6fde 002b  ld   $2b         ;06bd STW
              6fdf 003c  ld   $3c         ;06bd 'Pos'
              6fe0 0021  ld   $21         ;06bf LDW
              6fe1 005e  ld   $5e         ;06bf 'Score'
              6fe2 00b8  ld   $b8         ;06c1 SUBW
              6fe3 0030  ld   $30         ;06c1 'HighScore'
              6fe4 0035  ld   $35         ;06c3 BCC
              6fe5 0056  ld   $56         ;06c4 LE
              6fe6 00c8  ld   $c8
              6fe7 0059  ld   $59         ;06c6 LDI
              6fe8 001e  ld   $1e
              6fe9 0090  ld   $90         ;06c8 BRA
              6fea 00ca  ld   $ca
              6feb 0059  ld   $59         ;06ca LDI
              6fec 0008  ld   $08
              6fed 002b  ld   $2b         ;06cc STW
              6fee 003a  ld   $3a         ;06cc 'Color'
              6fef 0059  ld   $59         ;06ce LDI
              6ff0 0000  ld   $00
              6ff1 002b  ld   $2b         ;06d0 STW
              6ff2 0038  ld   $38         ;06d0 'BgColor'
              6ff3 0021  ld   $21         ;06d2 LDW
              6ff4 005e  ld   $5e         ;06d2 'Score'
              6ff5 002b  ld   $2b         ;06d4 STW
              6ff6 0054  ld   $54         ;06d4 'Value'
              6ff7 00cf  ld   $cf         ;06d6 CALL
              6ff8 0099  ld   $99         ;06d6 'DrawNumber4'
              6ff9 0021  ld   $21         ;06d8 LDW
              6ffa 005e  ld   $5e         ;06d8 'Score'
              6ffb fe00  bra  ac          ;+-----------------------------------+
              6ffc fcfd  bra  $6ffd       ;|                                   |
              6ffd 1418  ld   $18,y       ;| Trampoline for page $6f00 lookups |
              6ffe e006  jmp  y,$06       ;|                                   |
              6fff c218  st   [$18]       ;+-----------------------------------+
              7000 00e6  ld   $e6         ;06da SUBI
              7001 0064  ld   $64
              7002 0035  ld   $35         ;06dc BCC
              7003 0053  ld   $53         ;06dd GE
              7004 00e1  ld   $e1
              7005 0059  ld   $59         ;06df LDI
              7006 0004  ld   $04
              7007 0090  ld   $90         ;06e1 BRA
              7008 00ec  ld   $ec
              7009 00e6  ld   $e6         ;06e3 SUBI
              700a 00c8  ld   $c8
              700b 0035  ld   $35         ;06e5 BCC
              700c 0053  ld   $53         ;06e6 GE
              700d 00ea  ld   $ea
              700e 0059  ld   $59         ;06e8 LDI
              700f 0003  ld   $03
              7010 0090  ld   $90         ;06ea BRA
              7011 00ec  ld   $ec
              7012 0059  ld   $59         ;06ec LDI
              7013 0002  ld   $02
              7014 002b  ld   $2b         ;06ee STW
              7015 004e  ld   $4e         ;06ee 'Delay'
              7016 0063  ld   $63         ;06f0 POP
              7017 00ff  ld   $ff         ;06f1 RET
              7018 002b  ld   $2b         ;06f2 STW
              7019 007e  ld   $7e         ;06f2 'DrawScore'
              701a 0011  ld   $11         ;06f4 LDWI
              701b 00a0  ld   $a0
              701c 0008  ld   $08
              701d 002b  ld   $2b         ;06f7 STW
              701e 001a  ld   $1a
              701f 00ff  ld   $ff         ;06f9 RET
              7020 0008  ld   $08         ;| RAM segment address (high byte first)
              7021 00a0  ld   $a0         ;|
              7022 0056  ld   $56         ;| Length (1..256)
              7023 00cd  ld   $cd         ;08a0 DEF
              7024 00d4  ld   $d4
              7025 0075  ld   $75         ;08a2 PUSH
              7026 0011  ld   $11         ;08a3 LDWI
              7027 009c  ld   $9c
              7028 0044  ld   $44
              7029 00b8  ld   $b8         ;08a6 SUBW
              702a 0058  ld   $58         ;08a6 'Head'
              702b 0035  ld   $35         ;08a8 BCC
              702c 0072  ld   $72         ;08a9 NE
              702d 00c3  ld   $c3
              702e 0059  ld   $59         ;08ab LDI
              702f 001e  ld   $1e
              7030 002b  ld   $2b         ;08ad STW
              7031 003a  ld   $3a         ;08ad 'Color'
              7032 0011  ld   $11         ;08af LDWI
              7033 0002  ld   $02
              7034 0008  ld   $08
              7035 002b  ld   $2b         ;08b2 STW
              7036 003c  ld   $3c         ;08b2 'Pos'
              7037 00cd  ld   $cd         ;08b4 DEF
              7038 00b9  ld   $b9
              7039 0041  ld   $41         ;08b6 'A'
              703a 0055  ld   $55         ;08b7 'U'
              703b 0054  ld   $54         ;08b8 'T'
              703c 004f  ld   $4f         ;08b9 'O'
              703d 0000  ld   $00         ;08ba 0
              703e 00cf  ld   $cf         ;08bb CALL
              703f 0042  ld   $42         ;08bb 'PrintText'
              7040 0021  ld   $21         ;08bd LDW
              7041 0093  ld   $93         ;08bd 'AutoControl'
              7042 002b  ld   $2b         ;08bf STW
              7043 0060  ld   $60         ;08bf 'Control'
              7044 00cf  ld   $cf         ;08c1 CALL
              7045 0018  ld   $18         ;08c1 vAC
              7046 0090  ld   $90         ;08c3 BRA
              7047 00d2  ld   $d2
              7048 001a  ld   $1a         ;08c5 LD
              7049 0011  ld   $11
              704a 0082  ld   $82         ;08c7 ANDI
              704b 00cf  ld   $cf
              704c 008c  ld   $8c         ;08c9 XORI
              704d 00cf  ld   $cf
              704e 0035  ld   $35         ;08cb BCC
              704f 003f  ld   $3f         ;08cc EQ
              7050 00d2  ld   $d2
              7051 0021  ld   $21         ;08ce LDW
              7052 0062  ld   $62         ;08ce 'PlayerControl'
              7053 002b  ld   $2b         ;08d0 STW
              7054 0060  ld   $60         ;08d0 'Control'
              7055 00cf  ld   $cf         ;08d2 CALL
              7056 0018  ld   $18         ;08d2 vAC
              7057 0063  ld   $63         ;08d4 POP
              7058 00ff  ld   $ff         ;08d5 RET
              7059 002b  ld   $2b         ;08d6 STW
              705a 0097  ld   $97         ;08d6 'LaunchControl'
              705b 00cd  ld   $cd         ;08d8 DEF
              705c 00ef  ld   $ef
              705d 0075  ld   $75         ;08da PUSH
              705e 0059  ld   $59         ;08db LDI
              705f 0020  ld   $20
              7060 002b  ld   $2b         ;08dd STW
              7061 0032  ld   $32         ;08dd 'Char'
              7062 0059  ld   $59         ;08df LDI
              7063 000a  ld   $0a
              7064 002b  ld   $2b         ;08e1 STW
              7065 009b  ld   $9b         ;08e1 'Radix'
              7066 00cf  ld   $cf         ;08e3 CALL
              7067 009d  ld   $9d         ;08e3 'DrawNextDigit'
              7068 0059  ld   $59         ;08e5 LDI
              7069 0030  ld   $30
              706a 002b  ld   $2b         ;08e7 STW
              706b 0032  ld   $32         ;08e7 'Char'
              706c 0059  ld   $59         ;08e9 LDI
              706d 0001  ld   $01
              706e 002b  ld   $2b         ;08eb STW
              706f 009b  ld   $9b         ;08eb 'Radix'
              7070 00cf  ld   $cf         ;08ed CALL
              7071 009d  ld   $9d         ;08ed 'DrawNextDigit'
              7072 0063  ld   $63         ;08ef POP
              7073 00ff  ld   $ff         ;08f0 RET
              7074 002b  ld   $2b         ;08f1 STW
              7075 0056  ld   $56         ;08f1 'DrawNumber2'
              7076 0093  ld   $93         ;08f3 INC
              7077 001b  ld   $1b         ;08f3 '_vLR'+1
              7078 00ff  ld   $ff         ;08f5 RET
              7079 0009  ld   $09         ;| RAM segment address (high byte first)
              707a 00a0  ld   $a0         ;|
              707b 0056  ld   $56         ;| Length (1..256)
              707c 00cd  ld   $cd         ;09a0 DEF
              707d 00c7  ld   $c7
              707e 0075  ld   $75         ;09a2 PUSH
              707f 0021  ld   $21         ;09a3 LDW
              7080 0054  ld   $54         ;09a3 'Value'
              7081 00b8  ld   $b8         ;09a5 SUBW
              7082 009b  ld   $9b         ;09a5 'Radix'
              7083 0035  ld   $35         ;09a7 BCC
              7084 0050  ld   $50         ;09a8 LT
              7085 00c3  ld   $c3
              7086 002b  ld   $2b         ;09aa STW
              7087 0054  ld   $54         ;09aa 'Value'
              7088 0059  ld   $59         ;09ac LDI
              7089 0031  ld   $31
              708a 002b  ld   $2b         ;09ae STW
              708b 0032  ld   $32         ;09ae 'Char'
              708c 0021  ld   $21         ;09b0 LDW
              708d 0054  ld   $54         ;09b0 'Value'
              708e 00b8  ld   $b8         ;09b2 SUBW
              708f 009b  ld   $9b         ;09b2 'Radix'
              7090 0035  ld   $35         ;09b4 BCC
              7091 0050  ld   $50         ;09b5 LT
              7092 00bb  ld   $bb
              7093 002b  ld   $2b         ;09b7 STW
              7094 0054  ld   $54         ;09b7 'Value'
              7095 0093  ld   $93         ;09b9 INC
              7096 0032  ld   $32         ;09b9 'Char'
              7097 0090  ld   $90         ;09bb BRA
              7098 00b0  ld   $b0
              7099 00cf  ld   $cf         ;09bd CALL
              709a 003e  ld   $3e         ;09bd 'PrintChar'
              709b 0059  ld   $59         ;09bf LDI
              709c 0030  ld   $30
              709d 002b  ld   $2b         ;09c1 STW
              709e 0032  ld   $32         ;09c1 'Char'
              709f 0090  ld   $90         ;09c3 BRA
              70a0 00c5  ld   $c5
              70a1 00cf  ld   $cf         ;09c5 CALL
              70a2 003e  ld   $3e         ;09c5 'PrintChar'
              70a3 0063  ld   $63         ;09c7 POP
              70a4 00ff  ld   $ff         ;09c8 RET
              70a5 002b  ld   $2b         ;09c9 STW
              70a6 009d  ld   $9d         ;09c9 'DrawNextDigit'
              70a7 00cd  ld   $cd         ;09cb DEF
              70a8 00ef  ld   $ef
              70a9 0075  ld   $75         ;09cd PUSH
              70aa 0059  ld   $59         ;09ce LDI
              70ab 0020  ld   $20
              70ac 002b  ld   $2b         ;09d0 STW
              70ad 0032  ld   $32         ;09d0 'Char'
              70ae 0011  ld   $11         ;09d2 LDWI
              70af 00e8  ld   $e8
              70b0 0003  ld   $03
              70b1 002b  ld   $2b         ;09d5 STW
              70b2 009b  ld   $9b         ;09d5 'Radix'
              70b3 00cf  ld   $cf         ;09d7 CALL
              70b4 009d  ld   $9d         ;09d7 'DrawNextDigit'
              70b5 0059  ld   $59         ;09d9 LDI
              70b6 0064  ld   $64
              70b7 002b  ld   $2b         ;09db STW
              70b8 009b  ld   $9b         ;09db 'Radix'
              70b9 00cf  ld   $cf         ;09dd CALL
              70ba 009d  ld   $9d         ;09dd 'DrawNextDigit'
              70bb 0059  ld   $59         ;09df LDI
              70bc 000a  ld   $0a
              70bd 002b  ld   $2b         ;09e1 STW
              70be 009b  ld   $9b         ;09e1 'Radix'
              70bf 00cf  ld   $cf         ;09e3 CALL
              70c0 009d  ld   $9d         ;09e3 'DrawNextDigit'
              70c1 0059  ld   $59         ;09e5 LDI
              70c2 0030  ld   $30
              70c3 002b  ld   $2b         ;09e7 STW
              70c4 0032  ld   $32         ;09e7 'Char'
              70c5 0059  ld   $59         ;09e9 LDI
              70c6 0001  ld   $01
              70c7 002b  ld   $2b         ;09eb STW
              70c8 009b  ld   $9b         ;09eb 'Radix'
              70c9 00cf  ld   $cf         ;09ed CALL
              70ca 009d  ld   $9d         ;09ed 'DrawNextDigit'
              70cb 0063  ld   $63         ;09ef POP
              70cc 00ff  ld   $ff         ;09f0 RET
              70cd 002b  ld   $2b         ;09f1 STW
              70ce 0099  ld   $99         ;09f1 'DrawNumber4'
              70cf 0093  ld   $93         ;09f3 INC
              70d0 001b  ld   $1b         ;09f3 '_vLR'+1
              70d1 00ff  ld   $ff         ;09f5 RET
              70d2 000a  ld   $0a         ;| RAM segment address (high byte first)
              70d3 00a0  ld   $a0         ;|
              70d4 0056  ld   $56         ;| Length (1..256)
              70d5 00cd  ld   $cd         ;0aa0 DEF
              70d6 00ba  ld   $ba
              70d7 0075  ld   $75         ;0aa2 PUSH
              70d8 0011  ld   $11         ;0aa3 LDWI
              70d9 0074  ld   $74
              70da 0008  ld   $08
              70db 002b  ld   $2b         ;0aa6 STW
              70dc 003c  ld   $3c         ;0aa6 'Pos'
              70dd 0059  ld   $59         ;0aa8 LDI
              70de 0000  ld   $00
              70df 002b  ld   $2b         ;0aaa STW
              70e0 0038  ld   $38         ;0aaa 'BgColor'
              70e1 00cd  ld   $cd         ;0aac DEF
              70e2 00b0  ld   $b0
              70e3 0048  ld   $48         ;0aae 'H'
              70e4 0049  ld   $49         ;0aaf 'I'
              70e5 0020  ld   $20         ;0ab0 ' '
              70e6 0000  ld   $00         ;0ab1 0
              70e7 00cf  ld   $cf         ;0ab2 CALL
              70e8 0042  ld   $42         ;0ab2 'PrintText'
              70e9 0021  ld   $21         ;0ab4 LDW
              70ea 0030  ld   $30         ;0ab4 'HighScore'
              70eb 002b  ld   $2b         ;0ab6 STW
              70ec 0054  ld   $54         ;0ab6 'Value'
              70ed 00cf  ld   $cf         ;0ab8 CALL
              70ee 0099  ld   $99         ;0ab8 'DrawNumber4'
              70ef 0063  ld   $63         ;0aba POP
              70f0 00ff  ld   $ff         ;0abb RET
              70f1 002b  ld   $2b         ;0abc STW
              70f2 0064  ld   $64         ;0abc 'DrawHighScore'
              70f3 00cd  ld   $cd         ;0abe DEF
              70f4 00ef  ld   $ef
              70f5 002b  ld   $2b         ;0ac0 STW
              70f6 0034  ld   $34         ;0ac0 'i'
              70f7 0088  ld   $88         ;0ac2 ORI
              70f8 00ff  ld   $ff
              70f9 008c  ld   $8c         ;0ac4 XORI
              70fa 00ff  ld   $ff
              70fb fe00  bra  ac          ;+-----------------------------------+
              70fc fcfd  bra  $70fd       ;|                                   |
              70fd 1418  ld   $18,y       ;| Trampoline for page $7000 lookups |
              70fe e006  jmp  y,$06       ;|                                   |
              70ff c218  st   [$18]       ;+-----------------------------------+
              7100 0088  ld   $88         ;0ac6 ORI
              7101 00fa  ld   $fa
              7102 002b  ld   $2b         ;0ac8 STW
              7103 0070  ld   $70         ;0ac8 'p'
              7104 001a  ld   $1a         ;0aca LD
              7105 0034  ld   $34         ;0aca 'i'
              7106 002b  ld   $2b         ;0acc STW
              7107 0034  ld   $34         ;0acc 'i'
              7108 0059  ld   $59         ;0ace LDI
              7109 0000  ld   $00
              710a 00f0  ld   $f0         ;0ad0 POKE
              710b 0070  ld   $70         ;0ad0 'p'
              710c 0093  ld   $93         ;0ad2 INC
              710d 0070  ld   $70         ;0ad2 'p'
              710e 0059  ld   $59         ;0ad4 LDI
              710f 0001  ld   $01
              7110 00f0  ld   $f0         ;0ad6 POKE
              7111 0070  ld   $70         ;0ad6 'p'
              7112 0093  ld   $93         ;0ad8 INC
              7113 0070  ld   $70         ;0ad8 'p'
              7114 0011  ld   $11         ;0ada LDWI
              7115 0000  ld   $00
              7116 0009  ld   $09
              7117 0099  ld   $99         ;0add ADDW
              7118 0034  ld   $34         ;0add 'i'
              7119 007f  ld   $7f         ;0adf LUP
              711a 0000  ld   $00
              711b 00f0  ld   $f0         ;0ae1 POKE
              711c 0070  ld   $70         ;0ae1 'p'
              711d 0093  ld   $93         ;0ae3 INC
              711e 0070  ld   $70         ;0ae3 'p'
              711f 0011  ld   $11         ;0ae5 LDWI
              7120 0000  ld   $00
              7121 0009  ld   $09
              7122 0099  ld   $99         ;0ae8 ADDW
              7123 0034  ld   $34         ;0ae8 'i'
              7124 007f  ld   $7f         ;0aea LUP
              7125 0001  ld   $01
              7126 00f0  ld   $f0         ;0aec POKE
              7127 0070  ld   $70         ;0aec 'p'
              7128 0093  ld   $93         ;0aee INC
              7129 0070  ld   $70         ;0aee 'p'
              712a 00ff  ld   $ff         ;0af0 RET
              712b 002b  ld   $2b         ;0af1 STW
              712c 009f  ld   $9f         ;0af1 'SetupChannel'
              712d 0093  ld   $93         ;0af3 INC
              712e 001b  ld   $1b         ;0af3 '_vLR'+1
              712f 00ff  ld   $ff         ;0af5 RET
              7130 000b  ld   $0b         ;| RAM segment address (high byte first)
              7131 00a0  ld   $a0         ;|
              7132 004c  ld   $4c         ;| Length (1..256)
              7133 00cd  ld   $cd         ;0ba0 DEF
              7134 00c2  ld   $c2
              7135 0075  ld   $75         ;0ba2 PUSH
              7136 00e9  ld   $e9         ;0ba3 LSLW
              7137 002b  ld   $2b         ;0ba4 STW
              7138 006a  ld   $6a         ;0ba4 'tmp'
              7139 0011  ld   $11         ;0ba6 LDWI
              713a 0000  ld   $00
              713b 0001  ld   $01
              713c 00fa  ld   $fa         ;0ba9 ORW
              713d 006a  ld   $6a         ;0ba9 'tmp'
              713e 00cf  ld   $cf         ;0bab CALL
              713f 009f  ld   $9f         ;0bab 'SetupChannel'
              7140 0011  ld   $11         ;0bad LDWI
              7141 0000  ld   $00
              7142 0002  ld   $02
              7143 00fa  ld   $fa         ;0bb0 ORW
              7144 006a  ld   $6a         ;0bb0 'tmp'
              7145 00cf  ld   $cf         ;0bb2 CALL
              7146 009f  ld   $9f         ;0bb2 'SetupChannel'
              7147 0011  ld   $11         ;0bb4 LDWI
              7148 0000  ld   $00
              7149 0003  ld   $03
              714a 00fa  ld   $fa         ;0bb7 ORW
              714b 006a  ld   $6a         ;0bb7 'tmp'
              714c 00cf  ld   $cf         ;0bb9 CALL
              714d 009f  ld   $9f         ;0bb9 'SetupChannel'
              714e 0011  ld   $11         ;0bbb LDWI
              714f 0000  ld   $00
              7150 0004  ld   $04
              7151 00fa  ld   $fa         ;0bbe ORW
              7152 006a  ld   $6a         ;0bbe 'tmp'
              7153 00cf  ld   $cf         ;0bc0 CALL
              7154 009f  ld   $9f         ;0bc0 'SetupChannel'
              7155 0063  ld   $63         ;0bc2 POP
              7156 00ff  ld   $ff         ;0bc3 RET
              7157 002b  ld   $2b         ;0bc4 STW
              7158 007c  ld   $7c         ;0bc4 'SetNote'
              7159 00cd  ld   $cd         ;0bc6 DEF
              715a 00e5  ld   $e5
              715b 0075  ld   $75         ;0bc8 PUSH
              715c 0059  ld   $59         ;0bc9 LDI
              715d 0049  ld   $49
              715e 002b  ld   $2b         ;0bcb STW
              715f 00a1  ld   $a1         ;0bcb 'j'
              7160 0021  ld   $21         ;0bcd LDW
              7161 00a1  ld   $a1         ;0bcd 'j'
              7162 00cf  ld   $cf         ;0bcf CALL
              7163 007c  ld   $7c         ;0bcf 'SetNote'
              7164 0059  ld   $59         ;0bd1 LDI
              7165 0005  ld   $05
              7166 005e  ld   $5e         ;0bd3 ST
              7167 002c  ld   $2c
              7168 001a  ld   $1a         ;0bd5 LD
              7169 002c  ld   $2c
              716a 0035  ld   $35         ;0bd7 BCC
              716b 0072  ld   $72         ;0bd8 NE
              716c 00d3  ld   $d3
              716d 0021  ld   $21         ;0bda LDW
              716e 00a1  ld   $a1         ;0bda 'j'
              716f 00e6  ld   $e6         ;0bdc SUBI
              7170 0001  ld   $01
              7171 002b  ld   $2b         ;0bde STW
              7172 00a1  ld   $a1         ;0bde 'j'
              7173 008c  ld   $8c         ;0be0 XORI
              7174 0030  ld   $30
              7175 0035  ld   $35         ;0be2 BCC
              7176 0072  ld   $72         ;0be3 NE
              7177 00cb  ld   $cb
              7178 0063  ld   $63         ;0be5 POP
              7179 00ff  ld   $ff         ;0be6 RET
              717a 002b  ld   $2b         ;0be7 STW
              717b 0066  ld   $66         ;0be7 'PlayGameOverSound'
              717c 0093  ld   $93         ;0be9 INC
              717d 001b  ld   $1b         ;0be9 '_vLR'+1
              717e 00ff  ld   $ff         ;0beb RET
              717f 000c  ld   $0c         ;| RAM segment address (high byte first)
              7180 00a0  ld   $a0         ;|
              7181 0045  ld   $45         ;| Length (1..256)
              7182 00cd  ld   $cd         ;0ca0 DEF
              7183 00de  ld   $de
              7184 0075  ld   $75         ;0ca2 PUSH
              7185 0011  ld   $11         ;0ca3 LDWI
              7186 0033  ld   $33
              7187 0045  ld   $45
              7188 002b  ld   $2b         ;0ca6 STW
              7189 0070  ld   $70         ;0ca6 'p'
              718a 002b  ld   $2b         ;0ca8 STW
              718b 003c  ld   $3c         ;0ca8 'Pos'
              718c 0059  ld   $59         ;0caa LDI
              718d 0018  ld   $18
              718e 002b  ld   $2b         ;0cac STW
              718f 003a  ld   $3a         ;0cac 'Color'
              7190 0021  ld   $21         ;0cae LDW
              7191 00a3  ld   $a3         ;0cae 'Messages'
              7192 00cf  ld   $cf         ;0cb0 CALL
              7193 0042  ld   $42         ;0cb0 'PrintText'
              7194 0059  ld   $59         ;0cb2 LDI
              7195 002d  ld   $2d
              7196 00cf  ld   $cf         ;0cb4 CALL
              7197 0050  ld   $50         ;0cb4 'Wait'
              7198 0021  ld   $21         ;0cb6 LDW
              7199 0070  ld   $70         ;0cb6 'p'
              719a 002b  ld   $2b         ;0cb8 STW
              719b 003c  ld   $3c         ;0cb8 'Pos'
              719c 0059  ld   $59         ;0cba LDI
              719d 003e  ld   $3e
              719e 002b  ld   $2b         ;0cbc STW
              719f 003a  ld   $3a         ;0cbc 'Color'
              71a0 0021  ld   $21         ;0cbe LDW
              71a1 0040  ld   $40         ;0cbe 'Text'
              71a2 00cf  ld   $cf         ;0cc0 CALL
              71a3 0042  ld   $42         ;0cc0 'PrintText'
              71a4 0059  ld   $59         ;0cc2 LDI
              71a5 002d  ld   $2d
              71a6 00cf  ld   $cf         ;0cc4 CALL
              71a7 0050  ld   $50         ;0cc4 'Wait'
              71a8 0021  ld   $21         ;0cc6 LDW
              71a9 0070  ld   $70         ;0cc6 'p'
              71aa 002b  ld   $2b         ;0cc8 STW
              71ab 003c  ld   $3c         ;0cc8 'Pos'
              71ac 0059  ld   $59         ;0cca LDI
              71ad 000f  ld   $0f
              71ae 002b  ld   $2b         ;0ccc STW
              71af 003a  ld   $3a         ;0ccc 'Color'
              71b0 0021  ld   $21         ;0cce LDW
              71b1 0040  ld   $40         ;0cce 'Text'
              71b2 00cf  ld   $cf         ;0cd0 CALL
              71b3 0042  ld   $42         ;0cd0 'PrintText'
              71b4 0059  ld   $59         ;0cd2 LDI
              71b5 002d  ld   $2d
              71b6 00cf  ld   $cf         ;0cd4 CALL
              71b7 0050  ld   $50         ;0cd4 'Wait'
              71b8 0021  ld   $21         ;0cd6 LDW
              71b9 0070  ld   $70         ;0cd6 'p'
              71ba 002b  ld   $2b         ;0cd8 STW
              71bb 003c  ld   $3c         ;0cd8 'Pos'
              71bc 0021  ld   $21         ;0cda LDW
              71bd 0040  ld   $40         ;0cda 'Text'
              71be 00cf  ld   $cf         ;0cdc CALL
              71bf 0042  ld   $42         ;0cdc 'PrintText'
              71c0 0063  ld   $63         ;0cde POP
              71c1 00ff  ld   $ff         ;0cdf RET
              71c2 002b  ld   $2b         ;0ce0 STW
              71c3 0095  ld   $95         ;0ce0 'GetReady'
              71c4 0093  ld   $93         ;0ce2 INC
              71c5 001b  ld   $1b         ;0ce2 '_vLR'+1
              71c6 00ff  ld   $ff         ;0ce4 RET
              71c7 000d  ld   $0d         ;| RAM segment address (high byte first)
              71c8 00a0  ld   $a0         ;|
              71c9 0046  ld   $46         ;| Length (1..256)
              71ca 00cd  ld   $cd         ;0da0 DEF
              71cb 00df  ld   $df
              71cc 0021  ld   $21         ;0da2 LDW
              71cd 0074  ld   $74         ;0da2 'stepU'
              71ce 002b  ld   $2b         ;0da4 STW
              71cf 006a  ld   $6a         ;0da4 'tmp'
              71d0 001a  ld   $1a         ;0da6 LD
              71d1 0011  ld   $11
              71d2 008c  ld   $8c         ;0da8 XORI
              71d3 00fe  ld   $fe
              71d4 0035  ld   $35         ;0daa BCC
              71d5 0072  ld   $72         ;0dab NE
              71d6 00af  ld   $af
              71d7 0059  ld   $59         ;0dad LDI
              71d8 0002  ld   $02
              71d9 002b  ld   $2b         ;0daf STW
              71da 006a  ld   $6a         ;0daf 'tmp'
              71db 001a  ld   $1a         ;0db1 LD
              71dc 0011  ld   $11
              71dd 008c  ld   $8c         ;0db3 XORI
              71de 00fd  ld   $fd
              71df 0035  ld   $35         ;0db5 BCC
              71e0 0072  ld   $72         ;0db6 NE
              71e1 00bb  ld   $bb
              71e2 0011  ld   $11         ;0db8 LDWI
              71e3 00fe  ld   $fe
              71e4 00ff  ld   $ff
              71e5 002b  ld   $2b         ;0dbb STW
              71e6 006a  ld   $6a         ;0dbb 'tmp'
              71e7 001a  ld   $1a         ;0dbd LD
              71e8 0011  ld   $11
              71e9 008c  ld   $8c         ;0dbf XORI
              71ea 00fb  ld   $fb
              71eb 0035  ld   $35         ;0dc1 BCC
              71ec 0072  ld   $72         ;0dc2 NE
              71ed 00c7  ld   $c7
              71ee 0011  ld   $11         ;0dc4 LDWI
              71ef 0000  ld   $00
              71f0 0002  ld   $02
              71f1 002b  ld   $2b         ;0dc7 STW
              71f2 006a  ld   $6a         ;0dc7 'tmp'
              71f3 001a  ld   $1a         ;0dc9 LD
              71f4 0011  ld   $11
              71f5 008c  ld   $8c         ;0dcb XORI
              71f6 00f7  ld   $f7
              71f7 0035  ld   $35         ;0dcd BCC
              71f8 0072  ld   $72         ;0dce NE
              71f9 00d3  ld   $d3
              71fa 0011  ld   $11         ;0dd0 LDWI
              71fb fe00  bra  ac          ;+-----------------------------------+
              71fc fcfd  bra  $71fd       ;|                                   |
              71fd 1418  ld   $18,y       ;| Trampoline for page $7100 lookups |
              71fe e006  jmp  y,$06       ;|                                   |
              71ff c218  st   [$18]       ;+-----------------------------------+
              7200 0000  ld   $00
              7201 00fe  ld   $fe
              7202 002b  ld   $2b         ;0dd3 STW
              7203 006a  ld   $6a         ;0dd3 'tmp'
              7204 0021  ld   $21         ;0dd5 LDW
              7205 006a  ld   $6a         ;0dd5 'tmp'
              7206 0099  ld   $99         ;0dd7 ADDW
              7207 0074  ld   $74         ;0dd7 'stepU'
              7208 0035  ld   $35         ;0dd9 BCC
              7209 003f  ld   $3f         ;0dda EQ
              720a 00de  ld   $de
              720b 0021  ld   $21         ;0ddc LDW
              720c 006a  ld   $6a         ;0ddc 'tmp'
              720d 002b  ld   $2b         ;0dde STW
              720e 0074  ld   $74         ;0dde 'stepU'
              720f 00ff  ld   $ff         ;0de0 RET
              7210 002b  ld   $2b         ;0de1 STW
              7211 0062  ld   $62         ;0de1 'PlayerControl'
              7212 0093  ld   $93         ;0de3 INC
              7213 001b  ld   $1b         ;0de3 '_vLR'+1
              7214 00ff  ld   $ff         ;0de5 RET
              7215 000e  ld   $0e         ;| RAM segment address (high byte first)
              7216 00a0  ld   $a0         ;|
              7217 004d  ld   $4d         ;| Length (1..256)
              7218 00cd  ld   $cd         ;0ea0 DEF
              7219 00cb  ld   $cb
              721a 0020  ld   $20         ;0ea2 ' '
              721b 0045  ld   $45         ;0ea3 'E'
              721c 0041  ld   $41         ;0ea4 'A'
              721d 0054  ld   $54         ;0ea5 'T'
              721e 0020  ld   $20         ;0ea6 ' '
              721f 0046  ld   $46         ;0ea7 'F'
              7220 004f  ld   $4f         ;0ea8 'O'
              7221 004f  ld   $4f         ;0ea9 'O'
              7222 0044  ld   $44         ;0eaa 'D'
              7223 0000  ld   $00         ;0eab 0
              7224 004e  ld   $4e         ;0eac 'N'
              7225 004f  ld   $4f         ;0ead 'O'
              7226 0054  ld   $54         ;0eae 'T'
              7227 0020  ld   $20         ;0eaf ' '
              7228 0050  ld   $50         ;0eb0 'P'
              7229 004f  ld   $4f         ;0eb1 'O'
              722a 0049  ld   $49         ;0eb2 'I'
              722b 0053  ld   $53         ;0eb3 'S'
              722c 004f  ld   $4f         ;0eb4 'O'
              722d 004e  ld   $4e         ;0eb5 'N'
              722e 0000  ld   $00         ;0eb6 0
              722f 0047  ld   $47         ;0eb7 'G'
              7230 0045  ld   $45         ;0eb8 'E'
              7231 0054  ld   $54         ;0eb9 'T'
              7232 0020  ld   $20         ;0eba ' '
              7233 0052  ld   $52         ;0ebb 'R'
              7234 0045  ld   $45         ;0ebc 'E'
              7235 0041  ld   $41         ;0ebd 'A'
              7236 0044  ld   $44         ;0ebe 'D'
              7237 0059  ld   $59         ;0ebf 'Y'
              7238 0021  ld   $21         ;0ec0 '!'
              7239 0000  ld   $00         ;0ec1 0
              723a 0020  ld   $20         ;0ec2 ' '
              723b 0020  ld   $20         ;0ec3 ' '
              723c 0020  ld   $20         ;0ec4 ' '
              723d 0020  ld   $20         ;0ec5 ' '
              723e 0020  ld   $20         ;0ec6 ' '
              723f 0020  ld   $20         ;0ec7 ' '
              7240 0020  ld   $20         ;0ec8 ' '
              7241 0020  ld   $20         ;0ec9 ' '
              7242 0020  ld   $20         ;0eca ' '
              7243 0020  ld   $20         ;0ecb ' '
              7244 0000  ld   $00         ;0ecc 0
              7245 002b  ld   $2b         ;0ecd STW
              7246 00a3  ld   $a3         ;0ecd 'Messages'
              7247 00cf  ld   $cf         ;0ecf CALL
              7248 006e  ld   $6e         ;0ecf 'Intro'
              7249 0059  ld   $59         ;0ed1 LDI
              724a 0049  ld   $49
              724b 00cf  ld   $cf         ;0ed3 CALL
              724c 007c  ld   $7c         ;0ed3 'SetNote'
              724d 00cf  ld   $cf         ;0ed5 CALL
              724e 008f  ld   $8f         ;0ed5 'SetupGame'
              724f 00cf  ld   $cf         ;0ed7 CALL
              7250 008d  ld   $8d         ;0ed7 'RunGame'
              7251 0059  ld   $59         ;0ed9 LDI
              7252 0078  ld   $78
              7253 005e  ld   $5e         ;0edb ST
              7254 002c  ld   $2c
              7255 0059  ld   $59         ;0edd LDI
              7256 0007  ld   $07
              7257 002b  ld   $2b         ;0edf STW
              7258 003a  ld   $3a         ;0edf 'Color'
              7259 0021  ld   $21         ;0ee1 LDW
              725a 0058  ld   $58         ;0ee1 'Head'
              725b 00cf  ld   $cf         ;0ee3 CALL
              725c 005a  ld   $5a         ;0ee3 'DrawBlock'
              725d 00cf  ld   $cf         ;0ee5 CALL
              725e 0068  ld   $68         ;0ee5 'GameOver'
              725f 0059  ld   $59         ;0ee7 LDI
              7260 003c  ld   $3c
              7261 00cf  ld   $cf         ;0ee9 CALL
              7262 0050  ld   $50         ;0ee9 'Wait'
              7263 0090  ld   $90         ;0eeb BRA
              7264 00d3  ld   $d3
              7265 0000  ld   $00         ;End of Apps/Snake/Snake_v3.gcl, size 1834
                                          ;+-----------------------------------+
                                          ;| Apps/TinyBASIC/TinyBASIC_v4.gcl   |
                                          ;+-----------------------------------+
              7266 dc53  st   $53,[y,x++] ;'S'
              7267 dc6e  st   $6e,[y,x++] ;'n'
              7268 dc61  st   $61,[y,x++] ;'a'
              7269 dc6b  st   $6b,[y,x++] ;'k'
              726a dc65  st   $65,[y,x++] ;'e'
              726b dc00  st   $00,[y,x++] ;'\x00'
              726c dc00  st   $00,[y,x++] ;'\x00'
              726d dc00  st   $00,[y,x++] ;'\x00'
              726e 003c  ld   $3c
              726f c218  st   [$18]
              7270 006b  ld   $6b
              7271 14fa  ld   $fa,y
              7272 e020  jmp  y,$20
              7273 c219  st   [$19]
TinyBASIC:    7274 0002  ld   $02         ;| RAM segment address (high byte first)
              7275 0000  ld   $00         ;|
              7276 00f8  ld   $f8         ;| Length (1..256)
              7277 0011  ld   $11         ;0200 LDWI
              7278 00df  ld   $df
              7279 0001  ld   $01
              727a 00f6  ld   $f6         ;0203 DEEK
              727b 002b  ld   $2b         ;0204 STW
              727c 0030  ld   $30         ;0204 'Pos'
              727d 00cd  ld   $cd         ;0206 DEF
              727e 00c3  ld   $c3
              727f 0075  ld   $75         ;0208 PUSH
              7280 00cf  ld   $cf         ;0209 CALL
              7281 0032  ld   $32         ;0209 'Number'
              7282 0035  ld   $35         ;020b BCC
              7283 0050  ld   $50         ;020c LT
              7284 0010  ld   $10
              7285 00cf  ld   $cf         ;020e CALL
              7286 0034  ld   $34         ;020e 'Spaces'
              7287 0063  ld   $63         ;0210 POP
              7288 00ff  ld   $ff         ;0211 RET
              7289 0021  ld   $21         ;0212 LDW
              728a 0036  ld   $36         ;0212 'Active'
              728b 00ad  ld   $ad         ;0214 PEEK
              728c 008c  ld   $8c         ;0215 XORI
              728d 0024  ld   $24
              728e 0035  ld   $35         ;0217 BCC
              728f 0072  ld   $72         ;0218 NE
              7290 0021  ld   $21
              7291 0011  ld   $11         ;021a LDWI
              7292 00ce  ld   $ce
              7293 0005  ld   $05
              7294 00cf  ld   $cf         ;021d CALL
              7295 0018  ld   $18         ;021d vAC
              7296 00cf  ld   $cf         ;021f CALL
              7297 0034  ld   $34         ;021f 'Spaces'
              7298 0063  ld   $63         ;0221 POP
              7299 00ff  ld   $ff         ;0222 RET
              729a 00cf  ld   $cf         ;0223 CALL
              729b 0038  ld   $38         ;0223 'Keyword'
              729c 0028  ld   $28         ;0225 '('
              729d 0000  ld   $00         ;0226 0
              729e 0035  ld   $35         ;0227 BCC
              729f 003f  ld   $3f         ;0228 EQ
              72a0 002c  ld   $2c
              72a1 00cf  ld   $cf         ;022a CALL
              72a2 003a  ld   $3a         ;022a 'Expression'
              72a3 0090  ld   $90         ;022c BRA
              72a4 00b8  ld   $b8
              72a5 00cf  ld   $cf         ;022e CALL
              72a6 0038  ld   $38         ;022e 'Keyword'
              72a7 0070  ld   $70         ;0230 'p'
              72a8 0065  ld   $65         ;0231 'e'
              72a9 0065  ld   $65         ;0232 'e'
              72aa 006b  ld   $6b         ;0233 'k'
              72ab 0028  ld   $28         ;0234 '('
              72ac 0000  ld   $00         ;0235 0
              72ad 0035  ld   $35         ;0236 BCC
              72ae 003f  ld   $3f         ;0237 EQ
              72af 003e  ld   $3e
              72b0 00cf  ld   $cf         ;0239 CALL
              72b1 003a  ld   $3a         ;0239 'Expression'
              72b2 00ad  ld   $ad         ;023b PEEK
              72b3 002b  ld   $2b         ;023c STW
              72b4 003c  ld   $3c         ;023c 'Value'
              72b5 0090  ld   $90         ;023e BRA
              72b6 00b8  ld   $b8
              72b7 00cf  ld   $cf         ;0240 CALL
              72b8 0038  ld   $38         ;0240 'Keyword'
              72b9 0072  ld   $72         ;0242 'r'
              72ba 006e  ld   $6e         ;0243 'n'
              72bb 0064  ld   $64         ;0244 'd'
              72bc 0028  ld   $28         ;0245 '('
              72bd 0000  ld   $00         ;0246 0
              72be 0035  ld   $35         ;0247 BCC
              72bf 003f  ld   $3f         ;0248 EQ
              72c0 005c  ld   $5c
              72c1 00cf  ld   $cf         ;024a CALL
              72c2 003a  ld   $3a         ;024a 'Expression'
              72c3 0011  ld   $11         ;024c LDWI
              72c4 00a7  ld   $a7
              72c5 0004  ld   $04
              72c6 002b  ld   $2b         ;024f STW
              72c7 0022  ld   $22         ;024f '_sysFn'
              72c8 00b4  ld   $b4         ;0251 SYS
              72c9 00fe  ld   $fe
              72ca 0035  ld   $35         ;0253 BCC
              72cb 0050  ld   $50         ;0254 LT
              72cc 004f  ld   $4f
              72cd 00cf  ld   $cf         ;0256 CALL
              72ce 003e  ld   $3e         ;0256 'Divide'
              72cf 0021  ld   $21         ;0258 LDW
              72d0 0040  ld   $40         ;0258 'i'
              72d1 002b  ld   $2b         ;025a STW
              72d2 003c  ld   $3c         ;025a 'Value'
              72d3 0090  ld   $90         ;025c BRA
              72d4 00b8  ld   $b8
              72d5 00cf  ld   $cf         ;025e CALL
              72d6 0038  ld   $38         ;025e 'Keyword'
              72d7 0075  ld   $75         ;0260 'u'
              72d8 0073  ld   $73         ;0261 's'
              72d9 0072  ld   $72         ;0262 'r'
              72da 0028  ld   $28         ;0263 '('
              72db 0000  ld   $00         ;0264 0
              72dc 0035  ld   $35         ;0265 BCC
              72dd 003f  ld   $3f         ;0266 EQ
              72de 006e  ld   $6e
              72df 00cf  ld   $cf         ;0268 CALL
              72e0 003a  ld   $3a         ;0268 'Expression'
              72e1 00cf  ld   $cf         ;026a CALL
              72e2 003c  ld   $3c         ;026a 'Value'
              72e3 002b  ld   $2b         ;026c STW
              72e4 003c  ld   $3c         ;026c 'Value'
              72e5 0090  ld   $90         ;026e BRA
              72e6 00b8  ld   $b8
              72e7 00cf  ld   $cf         ;0270 CALL
              72e8 0042  ld   $42         ;0270 'Variable'
              72e9 002b  ld   $2b         ;0272 STW
              72ea 0044  ld   $44         ;0272 'k'
              72eb 00cf  ld   $cf         ;0274 CALL
              72ec 0034  ld   $34         ;0274 'Spaces'
              72ed 00cf  ld   $cf         ;0276 CALL
              72ee 0038  ld   $38         ;0276 'Keyword'
              72ef 0028  ld   $28         ;0278 '('
              72f0 0000  ld   $00         ;0279 0
              72f1 0035  ld   $35         ;027a BCC
              72f2 003f  ld   $3f         ;027b EQ
              72f3 00b1  ld   $b1
              72f4 0075  ld   $75         ;027d PUSH
              72f5 0021  ld   $21         ;027e LDW
              72f6 0044  ld   $44         ;027e 'k'
              72f7 00ec  ld   $ec         ;0280 STLW
              72f8 0000  ld   $00
              72f9 00cf  ld   $cf         ;0282 CALL
              72fa 003a  ld   $3a         ;0282 'Expression'
              72fb fe00  bra  ac          ;+-----------------------------------+
              72fc fcfd  bra  $72fd       ;|                                   |
              72fd 1418  ld   $18,y       ;| Trampoline for page $7200 lookups |
              72fe e006  jmp  y,$06       ;|                                   |
              72ff c218  st   [$18]       ;+-----------------------------------+
              7300 0035  ld   $35         ;0284 BCC
              7301 0053  ld   $53         ;0285 GE
              7302 0087  ld   $87
              7303 00cf  ld   $cf         ;0287 CALL
              7304 0046  ld   $46         ;0287 'ValueError'
              7305 00ee  ld   $ee         ;0289 LDLW
              7306 0000  ld   $00
              7307 002b  ld   $2b         ;028b STW
              7308 0044  ld   $44         ;028b 'k'
              7309 0063  ld   $63         ;028d POP
              730a 001a  ld   $1a         ;028e LD
              730b 0045  ld   $45         ;028e 'k'+1
              730c 00b8  ld   $b8         ;0290 SUBW
              730d 003c  ld   $3c         ;0290 'Value'
              730e 00e6  ld   $e6         ;0292 SUBI
              730f 0002  ld   $02
              7310 005e  ld   $5e         ;0294 ST
              7311 0045  ld   $45         ;0294 'k'+1
              7312 0021  ld   $21         ;0296 LDW
              7313 0048  ld   $48         ;0296 'End'
              7314 00fc  ld   $fc         ;0298 XORW
              7315 0044  ld   $44         ;0298 'k'
              7316 0035  ld   $35         ;029a BCC
              7317 0053  ld   $53         ;029b GE
              7318 009f  ld   $9f
              7319 0021  ld   $21         ;029d LDW
              731a 0048  ld   $48         ;029d 'End'
              731b 0090  ld   $90         ;029f BRA
              731c 00a3  ld   $a3
              731d 0021  ld   $21         ;02a1 LDW
              731e 0044  ld   $44         ;02a1 'k'
              731f 00b8  ld   $b8         ;02a3 SUBW
              7320 0048  ld   $48         ;02a3 'End'
              7321 0035  ld   $35         ;02a5 BCC
              7322 0053  ld   $53         ;02a6 GE
              7323 00a8  ld   $a8
              7324 00cf  ld   $cf         ;02a8 CALL
              7325 0046  ld   $46         ;02a8 'ValueError'
              7326 00cf  ld   $cf         ;02aa CALL
              7327 0038  ld   $38         ;02aa 'Keyword'
              7328 0029  ld   $29         ;02ac ')'
              7329 0000  ld   $00         ;02ad 0
              732a 0035  ld   $35         ;02ae BCC
              732b 0072  ld   $72         ;02af NE
              732c 00b1  ld   $b1
              732d 00cf  ld   $cf         ;02b1 CALL
              732e 004a  ld   $4a         ;02b1 'SyntaxError'
              732f 0021  ld   $21         ;02b3 LDW
              7330 0044  ld   $44         ;02b3 'k'
              7331 00f6  ld   $f6         ;02b5 DEEK
              7332 002b  ld   $2b         ;02b6 STW
              7333 003c  ld   $3c         ;02b6 'Value'
              7334 0063  ld   $63         ;02b8 POP
              7335 00ff  ld   $ff         ;02b9 RET
              7336 00cf  ld   $cf         ;02ba CALL
              7337 0038  ld   $38         ;02ba 'Keyword'
              7338 0029  ld   $29         ;02bc ')'
              7339 0000  ld   $00         ;02bd 0
              733a 0035  ld   $35         ;02be BCC
              733b 0072  ld   $72         ;02bf NE
              733c 00c1  ld   $c1
              733d 00cf  ld   $cf         ;02c1 CALL
              733e 004a  ld   $4a         ;02c1 'SyntaxError'
              733f 0063  ld   $63         ;02c3 POP
              7340 00ff  ld   $ff         ;02c4 RET
              7341 002b  ld   $2b         ;02c5 STW
              7342 004c  ld   $4c         ;02c5 'Factor'
              7343 00cd  ld   $cd         ;02c7 DEF
              7344 00d9  ld   $d9
              7345 0021  ld   $21         ;02c9 LDW
              7346 001a  ld   $1a
              7347 002b  ld   $2b         ;02cb STW
              7348 004e  ld   $4e         ;02cb 'tmp'
              7349 0021  ld   $21         ;02cd LDW
              734a 004e  ld   $4e         ;02cd 'tmp'
              734b 00ad  ld   $ad         ;02cf PEEK
              734c 0093  ld   $93         ;02d0 INC
              734d 004e  ld   $4e         ;02d0 'tmp'
              734e 0035  ld   $35         ;02d2 BCC
              734f 003f  ld   $3f         ;02d3 EQ
              7350 00d7  ld   $d7
              7351 00cf  ld   $cf         ;02d5 CALL
              7352 0050  ld   $50         ;02d5 'PrintChar'
              7353 0090  ld   $90         ;02d7 BRA
              7354 00cb  ld   $cb
              7355 00cf  ld   $cf         ;02d9 CALL
              7356 004e  ld   $4e         ;02d9 'tmp'
              7357 002b  ld   $2b         ;02db STW
              7358 0052  ld   $52         ;02db 'PrintS'
              7359 00cd  ld   $cd         ;02dd DEF
              735a 00f1  ld   $f1
              735b 001a  ld   $1a         ;02df LD
              735c 000f  ld   $0f
              735d 008c  ld   $8c         ;02e1 XORI
              735e 0003  ld   $03
              735f 0035  ld   $35         ;02e3 BCC
              7360 0072  ld   $72         ;02e4 NE
              7361 00f0  ld   $f0
              7362 0021  ld   $21         ;02e6 LDW
              7363 0054  ld   $54         ;02e6 'PrintCharScreen'
              7364 002b  ld   $2b         ;02e8 STW
              7365 0050  ld   $50         ;02e8 'PrintChar'
              7366 00cf  ld   $cf         ;02ea CALL
              7367 0056  ld   $56         ;02ea 'Prompt'
              7368 0042  ld   $42         ;02ec 'B'
              7369 0072  ld   $72         ;02ed 'r'
              736a 0065  ld   $65         ;02ee 'e'
              736b 0061  ld   $61         ;02ef 'a'
              736c 006b  ld   $6b         ;02f0 'k'
              736d 0000  ld   $00         ;02f1 0
              736e 00ff  ld   $ff         ;02f2 RET
              736f 002b  ld   $2b         ;02f3 STW
              7370 0058  ld   $58         ;02f3 'TestBreak'
              7371 0093  ld   $93         ;02f5 INC
              7372 001b  ld   $1b
              7373 00ff  ld   $ff         ;02f7 RET
              7374 0003  ld   $03         ;| RAM segment address (high byte first)
              7375 0000  ld   $00         ;|
              7376 00f9  ld   $f9         ;| Length (1..256)
              7377 00cd  ld   $cd         ;0300 DEF
              7378 006e  ld   $6e
              7379 002b  ld   $2b         ;0302 STW
              737a 0044  ld   $44         ;0302 'k'
              737b 00e6  ld   $e6         ;0304 SUBI
              737c 0083  ld   $83
              737d 0035  ld   $35         ;0306 BCC
              737e 004d  ld   $4d         ;0307 GT
              737f 006d  ld   $6d
              7380 001a  ld   $1a         ;0309 LD
              7381 0031  ld   $31         ;0309 'Pos'+1
              7382 00e6  ld   $e6         ;030b SUBI
              7383 0078  ld   $78
              7384 0035  ld   $35         ;030d BCC
              7385 004d  ld   $4d         ;030e GT
              7386 006d  ld   $6d
              7387 001a  ld   $1a         ;0310 LD
              7388 0030  ld   $30         ;0310 'Pos'
              7389 00e6  ld   $e6         ;0312 SUBI
              738a 009a  ld   $9a
              738b 0035  ld   $35         ;0314 BCC
              738c 0056  ld   $56         ;0315 LE
              738d 0019  ld   $19
              738e 0075  ld   $75         ;0317 PUSH
              738f 00cf  ld   $cf         ;0318 CALL
              7390 005a  ld   $5a         ;0318 'Newline'
              7391 0063  ld   $63         ;031a POP
              7392 0021  ld   $21         ;031b LDW
              7393 0044  ld   $44         ;031b 'k'
              7394 00e6  ld   $e6         ;031d SUBI
              7395 0052  ld   $52
              7396 0035  ld   $35         ;031f BCC
              7397 0053  ld   $53         ;0320 GE
              7398 0029  ld   $29
              7399 00e3  ld   $e3         ;0322 ADDI
              739a 0032  ld   $32
              739b 002b  ld   $2b         ;0324 STW
              739c 0040  ld   $40         ;0324 'i'
              739d 0011  ld   $11         ;0326 LDWI
              739e 0000  ld   $00
              739f 0007  ld   $07
              73a0 0090  ld   $90         ;0329 BRA
              73a1 002e  ld   $2e
              73a2 002b  ld   $2b         ;032b STW
              73a3 0040  ld   $40         ;032b 'i'
              73a4 0011  ld   $11         ;032d LDWI
              73a5 0000  ld   $00
              73a6 0008  ld   $08
              73a7 002b  ld   $2b         ;0330 STW
              73a8 0044  ld   $44         ;0330 'k'
              73a9 0021  ld   $21         ;0332 LDW
              73aa 0040  ld   $40         ;0332 'i'
              73ab 0035  ld   $35         ;0334 BCC
              73ac 0050  ld   $50         ;0335 LT
              73ad 006d  ld   $6d
              73ae 00e9  ld   $e9         ;0337 LSLW
              73af 00e9  ld   $e9         ;0338 LSLW
              73b0 0099  ld   $99         ;0339 ADDW
              73b1 0040  ld   $40         ;0339 'i'
              73b2 0099  ld   $99         ;033b ADDW
              73b3 0044  ld   $44         ;033b 'k'
              73b4 002b  ld   $2b         ;033d STW
              73b5 0044  ld   $44         ;033d 'k'
              73b6 0011  ld   $11         ;033f LDWI
              73b7 00e1  ld   $e1
              73b8 0004  ld   $04
              73b9 002b  ld   $2b         ;0342 STW
              73ba 0022  ld   $22         ;0342 '_sysFn'
              73bb 0021  ld   $21         ;0344 LDW
              73bc 002a  ld   $2a         ;0344 '_sysArgs6'
              73bd 002b  ld   $2b         ;0346 STW
              73be 0024  ld   $24         ;0346 '_sysArgs0'
              73bf 0021  ld   $21         ;0348 LDW
              73c0 0030  ld   $30         ;0348 'Pos'
              73c1 002b  ld   $2b         ;034a STW
              73c2 0028  ld   $28
              73c3 00ec  ld   $ec         ;034c STLW
              73c4 00fe  ld   $fe
              73c5 00e3  ld   $e3         ;034e ADDI
              73c6 0006  ld   $06
              73c7 002b  ld   $2b         ;0350 STW
              73c8 0030  ld   $30         ;0350 'Pos'
              73c9 0059  ld   $59         ;0352 LDI
              73ca 0005  ld   $05
              73cb 002b  ld   $2b         ;0354 STW
              73cc 0040  ld   $40         ;0354 'i'
              73cd 0021  ld   $21         ;0356 LDW
              73ce 0044  ld   $44         ;0356 'k'
              73cf 007f  ld   $7f         ;0358 LUP
              73d0 0000  ld   $00
              73d1 005e  ld   $5e         ;035a ST
              73d2 0026  ld   $26
              73d3 00b4  ld   $b4         ;035c SYS
              73d4 00cc  ld   $cc
              73d5 0093  ld   $93         ;035e INC
              73d6 0044  ld   $44         ;035e 'k'
              73d7 0093  ld   $93         ;0360 INC
              73d8 0028  ld   $28
              73d9 0021  ld   $21         ;0362 LDW
              73da 0040  ld   $40         ;0362 'i'
              73db 00e6  ld   $e6         ;0364 SUBI
              73dc 0001  ld   $01
              73dd 0035  ld   $35         ;0366 BCC
              73de 004d  ld   $4d         ;0367 GT
              73df 0052  ld   $52
              73e0 005e  ld   $5e         ;0369 ST
              73e1 0026  ld   $26
              73e2 00b4  ld   $b4         ;036b SYS
              73e3 00cc  ld   $cc
              73e4 00ee  ld   $ee         ;036d LDLW
              73e5 00fe  ld   $fe
              73e6 00ff  ld   $ff         ;036f RET
              73e7 002b  ld   $2b         ;0370 STW
              73e8 0050  ld   $50         ;0370 'PrintChar'
              73e9 002b  ld   $2b         ;0372 STW
              73ea 0054  ld   $54         ;0372 'PrintCharScreen'
              73eb 00cd  ld   $cd         ;0374 DEF
              73ec 00f4  ld   $f4
              73ed 0075  ld   $75         ;0376 PUSH
              73ee 002b  ld   $2b         ;0377 STW
              73ef 004e  ld   $4e         ;0377 'tmp'
              73f0 0011  ld   $11         ;0379 LDWI
              73f1 0000  ld   $00
              73f2 000b  ld   $0b
              73f3 002b  ld   $2b         ;037c STW
              73f4 0022  ld   $22         ;037c '_sysFn'
              73f5 001a  ld   $1a         ;037e LD
              73f6 0021  ld   $21
              73f7 00e6  ld   $e6         ;0380 SUBI
              73f8 0038  ld   $38
              73f9 0035  ld   $35         ;0382 BCC
              73fa 0050  ld   $50         ;0383 LT
              73fb fe00  bra  ac          ;+-----------------------------------+
              73fc fcfd  bra  $73fd       ;|                                   |
              73fd 1418  ld   $18,y       ;| Trampoline for page $7300 lookups |
              73fe e006  jmp  y,$06       ;|                                   |
              73ff c218  st   [$18]       ;+-----------------------------------+
              7400 0087  ld   $87
              7401 00e6  ld   $e6         ;0385 SUBI
              7402 00ff  ld   $ff
              7403 00b4  ld   $b4         ;0387 SYS
              7404 00e7  ld   $e7
              7405 0011  ld   $11         ;0389 LDWI
              7406 00a0  ld   $a0
              7407 001b  ld   $1b
              7408 002b  ld   $2b         ;038c STW
              7409 0036  ld   $36         ;038c 'Active'
              740a 0021  ld   $21         ;038e LDW
              740b 004e  ld   $4e         ;038e 'tmp'
              740c 00f3  ld   $f3         ;0390 DOKE
              740d 0036  ld   $36         ;0390 'Active'
              740e 0059  ld   $59         ;0392 LDI
              740f 00a2  ld   $a2
              7410 005e  ld   $5e         ;0394 ST
              7411 0036  ld   $36         ;0394 'Active'
              7412 0059  ld   $59         ;0396 LDI
              7413 007f  ld   $7f
              7414 00cf  ld   $cf         ;0398 CALL
              7415 0050  ld   $50         ;0398 'PrintChar'
              7416 002b  ld   $2b         ;039a STW
              7417 0030  ld   $30         ;039a 'Pos'
              7418 001a  ld   $1a         ;039c LD
              7419 000f  ld   $0f
              741a 002b  ld   $2b         ;039e STW
              741b 004e  ld   $4e         ;039e 'tmp'
              741c 001a  ld   $1a         ;03a0 LD
              741d 000f  ld   $0f
              741e 00f0  ld   $f0         ;03a2 POKE
              741f 0036  ld   $36         ;03a2 'Active'
              7420 00fc  ld   $fc         ;03a4 XORW
              7421 004e  ld   $4e         ;03a4 'tmp'
              7422 0035  ld   $35         ;03a6 BCC
              7423 0072  ld   $72         ;03a7 NE
              7424 00ac  ld   $ac
              7425 0021  ld   $21         ;03a9 LDW
              7426 0036  ld   $36         ;03a9 'Active'
              7427 00ad  ld   $ad         ;03ab PEEK
              7428 0090  ld   $90         ;03ac BRA
              7429 009c  ld   $9c
              742a 0021  ld   $21         ;03ae LDW
              742b 0036  ld   $36         ;03ae 'Active'
              742c 00ad  ld   $ad         ;03b0 PEEK
              742d 008c  ld   $8c         ;03b1 XORI
              742e 000a  ld   $0a
              742f 0035  ld   $35         ;03b3 BCC
              7430 003f  ld   $3f         ;03b4 EQ
              7431 00ef  ld   $ef
              7432 008c  ld   $8c         ;03b6 XORI
              7433 0075  ld   $75
              7434 0035  ld   $35         ;03b8 BCC
              7435 0072  ld   $72         ;03b9 NE
              7436 00d0  ld   $d0
              7437 0059  ld   $59         ;03bb LDI
              7438 0020  ld   $20
              7439 00cf  ld   $cf         ;03bd CALL
              743a 0050  ld   $50         ;03bd 'PrintChar'
              743b 002b  ld   $2b         ;03bf STW
              743c 0030  ld   $30         ;03bf 'Pos'
              743d 001a  ld   $1a         ;03c1 LD
              743e 0030  ld   $30         ;03c1 'Pos'
              743f 00e6  ld   $e6         ;03c3 SUBI
              7440 0006  ld   $06
              7441 0035  ld   $35         ;03c5 BCC
              7442 0050  ld   $50         ;03c6 LT
              7443 00ce  ld   $ce
              7444 005e  ld   $5e         ;03c8 ST
              7445 0030  ld   $30         ;03c8 'Pos'
              7446 0021  ld   $21         ;03ca LDW
              7447 0036  ld   $36         ;03ca 'Active'
              7448 00e6  ld   $e6         ;03cc SUBI
              7449 0001  ld   $01
              744a 002b  ld   $2b         ;03ce STW
              744b 0036  ld   $36         ;03ce 'Active'
              744c 0090  ld   $90         ;03d0 BRA
              744d 0094  ld   $94
              744e 00e6  ld   $e6         ;03d2 SUBI
              744f 0060  ld   $60
              7450 0035  ld   $35         ;03d4 BCC
              7451 0053  ld   $53         ;03d5 GE
              7452 0094  ld   $94
              7453 001a  ld   $1a         ;03d7 LD
              7454 0030  ld   $30         ;03d7 'Pos'
              7455 00e6  ld   $e6         ;03d9 SUBI
              7456 0096  ld   $96
              7457 0035  ld   $35         ;03db BCC
              7458 0050  ld   $50         ;03dc LT
              7459 00e6  ld   $e6
              745a 0059  ld   $59         ;03de LDI
              745b 00a2  ld   $a2
              745c 005e  ld   $5e         ;03e0 ST
              745d 0036  ld   $36         ;03e0 'Active'
              745e 0059  ld   $59         ;03e2 LDI
              745f 005c  ld   $5c
              7460 00cf  ld   $cf         ;03e4 CALL
              7461 0050  ld   $50         ;03e4 'PrintChar'
              7462 0090  ld   $90         ;03e6 BRA
              7463 0094  ld   $94
              7464 0021  ld   $21         ;03e8 LDW
              7465 0036  ld   $36         ;03e8 'Active'
              7466 00ad  ld   $ad         ;03ea PEEK
              7467 00cf  ld   $cf         ;03eb CALL
              7468 0050  ld   $50         ;03eb 'PrintChar'
              7469 0093  ld   $93         ;03ed INC
              746a 0036  ld   $36         ;03ed 'Active'
              746b 0090  ld   $90         ;03ef BRA
              746c 0094  ld   $94
              746d 0011  ld   $11         ;03f1 LDWI
              746e 00e8  ld   $e8
              746f 0006  ld   $06
              7470 00cf  ld   $cf         ;03f4 CALL
              7471 0018  ld   $18         ;03f4 vAC
              7472 0093  ld   $93         ;03f6 INC
              7473 001b  ld   $1b
              7474 00ff  ld   $ff         ;03f8 RET
              7475 0004  ld   $04         ;| RAM segment address (high byte first)
              7476 0000  ld   $00         ;|
              7477 00f8  ld   $f8         ;| Length (1..256)
              7478 002b  ld   $2b         ;0400 STW
              7479 005c  ld   $5c         ;0400 'GetLine'
              747a 00cd  ld   $cd         ;0402 DEF
              747b 00ef  ld   $ef
              747c 00cf  ld   $cf         ;0404 CALL
              747d 0034  ld   $34         ;0404 'Spaces'
              747e 00cf  ld   $cf         ;0406 CALL
              747f 0038  ld   $38         ;0406 'Keyword'
              7480 0067  ld   $67         ;0408 'g'
              7481 006f  ld   $6f         ;0409 'o'
              7482 0074  ld   $74         ;040a 't'
              7483 006f  ld   $6f         ;040b 'o'
              7484 0000  ld   $00         ;040c 0
              7485 0035  ld   $35         ;040d BCC
              7486 003f  ld   $3f         ;040e EQ
              7487 0012  ld   $12
              7488 00cf  ld   $cf         ;0410 CALL
              7489 003a  ld   $3a         ;0410 'Expression'
              748a 00cf  ld   $cf         ;0412 CALL
              748b 005e  ld   $5e         ;0412 'GotoValue'
              748c 00cf  ld   $cf         ;0414 CALL
              748d 0038  ld   $38         ;0414 'Keyword'
              748e 0067  ld   $67         ;0416 'g'
              748f 006f  ld   $6f         ;0417 'o'
              7490 0073  ld   $73         ;0418 's'
              7491 0075  ld   $75         ;0419 'u'
              7492 0062  ld   $62         ;041a 'b'
              7493 0000  ld   $00         ;041b 0
              7494 0035  ld   $35         ;041c BCC
              7495 003f  ld   $3f         ;041d EQ
              7496 0026  ld   $26
              7497 00cf  ld   $cf         ;041f CALL
              7498 003a  ld   $3a         ;041f 'Expression'
              7499 0075  ld   $75         ;0421 PUSH
              749a 0021  ld   $21         ;0422 LDW
              749b 0036  ld   $36         ;0422 'Active'
              749c 00ec  ld   $ec         ;0424 STLW
              749d 0000  ld   $00
              749e 00cf  ld   $cf         ;0426 CALL
              749f 005e  ld   $5e         ;0426 'GotoValue'
              74a0 00cf  ld   $cf         ;0428 CALL
              74a1 0038  ld   $38         ;0428 'Keyword'
              74a2 0072  ld   $72         ;042a 'r'
              74a3 0065  ld   $65         ;042b 'e'
              74a4 0074  ld   $74         ;042c 't'
              74a5 0075  ld   $75         ;042d 'u'
              74a6 0072  ld   $72         ;042e 'r'
              74a7 006e  ld   $6e         ;042f 'n'
              74a8 0000  ld   $00         ;0430 0
              74a9 0035  ld   $35         ;0431 BCC
              74aa 003f  ld   $3f         ;0432 EQ
              74ab 003f  ld   $3f
              74ac 001a  ld   $1a         ;0434 LD
              74ad 001c  ld   $1c
              74ae 0035  ld   $35         ;0436 BCC
              74af 0072  ld   $72         ;0437 NE
              74b0 0039  ld   $39
              74b1 00cf  ld   $cf         ;0439 CALL
              74b2 0060  ld   $60         ;0439 'StackError'
              74b3 00f6  ld   $f6         ;043b DEEK
              74b4 002b  ld   $2b         ;043c STW
              74b5 0036  ld   $36         ;043c 'Active'
              74b6 0063  ld   $63         ;043e POP
              74b7 00cf  ld   $cf         ;043f CALL
              74b8 0062  ld   $62         ;043f 'EndOfLine'
              74b9 00cf  ld   $cf         ;0441 CALL
              74ba 0038  ld   $38         ;0441 'Keyword'
              74bb 0069  ld   $69         ;0443 'i'
              74bc 0066  ld   $66         ;0444 'f'
              74bd 0000  ld   $00         ;0445 0
              74be 0035  ld   $35         ;0446 BCC
              74bf 003f  ld   $3f         ;0447 EQ
              74c0 0096  ld   $96
              74c1 00cf  ld   $cf         ;0449 CALL
              74c2 003a  ld   $3a         ;0449 'Expression'
              74c3 00df  ld   $df         ;044b ALLOC
              74c4 00fc  ld   $fc
              74c5 00ec  ld   $ec         ;044d STLW
              74c6 0002  ld   $02
              74c7 00cf  ld   $cf         ;044f CALL
              74c8 0064  ld   $64         ;044f 'RelOp'
              74c9 0035  ld   $35         ;0451 BCC
              74ca 0072  ld   $72         ;0452 NE
              74cb 0054  ld   $54
              74cc 00cf  ld   $cf         ;0454 CALL
              74cd 004a  ld   $4a         ;0454 'SyntaxError'
              74ce 00ec  ld   $ec         ;0456 STLW
              74cf 0000  ld   $00
              74d0 00cf  ld   $cf         ;0458 CALL
              74d1 003a  ld   $3a         ;0458 'Expression'
              74d2 00cf  ld   $cf         ;045a CALL
              74d3 0038  ld   $38         ;045a 'Keyword'
              74d4 0074  ld   $74         ;045c 't'
              74d5 0068  ld   $68         ;045d 'h'
              74d6 0065  ld   $65         ;045e 'e'
              74d7 006e  ld   $6e         ;045f 'n'
              74d8 0000  ld   $00         ;0460 0
              74d9 00ee  ld   $ee         ;0461 LDLW
              74da 0002  ld   $02
              74db 00fc  ld   $fc         ;0463 XORW
              74dc 003c  ld   $3c         ;0463 'Value'
              74dd 0035  ld   $35         ;0465 BCC
              74de 0053  ld   $53         ;0466 GE
              74df 006a  ld   $6a
              74e0 00ee  ld   $ee         ;0468 LDLW
              74e1 0002  ld   $02
              74e2 0090  ld   $90         ;046a BRA
              74e3 006e  ld   $6e
              74e4 00ee  ld   $ee         ;046c LDLW
              74e5 0002  ld   $02
              74e6 00b8  ld   $b8         ;046e SUBW
              74e7 003c  ld   $3c         ;046e 'Value'
              74e8 0035  ld   $35         ;0470 BCC
              74e9 0056  ld   $56         ;0471 LE
              74ea 0073  ld   $73
              74eb 0059  ld   $59         ;0473 LDI
              74ec 0004  ld   $04
              74ed 0035  ld   $35         ;0475 BCC
              74ee 0053  ld   $53         ;0476 GE
              74ef 0078  ld   $78
              74f0 0059  ld   $59         ;0478 LDI
              74f1 0001  ld   $01
              74f2 0035  ld   $35         ;047a BCC
              74f3 0072  ld   $72         ;047b NE
              74f4 007d  ld   $7d
              74f5 0059  ld   $59         ;047d LDI
              74f6 0002  ld   $02
              74f7 002b  ld   $2b         ;047f STW
              74f8 0040  ld   $40         ;047f 'i'
              74f9 00ee  ld   $ee         ;0481 LDLW
              74fa 0000  ld   $00
              74fb fe00  bra  ac          ;+-----------------------------------+
              74fc fcfd  bra  $74fd       ;|                                   |
              74fd 1418  ld   $18,y       ;| Trampoline for page $7400 lookups |
              74fe e006  jmp  y,$06       ;|                                   |
              74ff c218  st   [$18]       ;+-----------------------------------+
              7500 00f8  ld   $f8         ;0483 ANDW
              7501 0040  ld   $40         ;0483 'i'
              7502 00df  ld   $df         ;0485 ALLOC
              7503 0004  ld   $04
              7504 0035  ld   $35         ;0487 BCC
              7505 003f  ld   $3f         ;0488 EQ
              7506 008a  ld   $8a
              7507 00cf  ld   $cf         ;048a CALL
              7508 0066  ld   $66         ;048a 'Statements'
              7509 0021  ld   $21         ;048c LDW
              750a 0036  ld   $36         ;048c 'Active'
              750b 00ad  ld   $ad         ;048e PEEK
              750c 0035  ld   $35         ;048f BCC
              750d 003f  ld   $3f         ;0490 EQ
              750e 0094  ld   $94
              750f 0093  ld   $93         ;0492 INC
              7510 0036  ld   $36         ;0492 'Active'
              7511 0090  ld   $90         ;0494 BRA
              7512 008a  ld   $8a
              7513 00cf  ld   $cf         ;0496 CALL
              7514 0062  ld   $62         ;0496 'EndOfLine'
              7515 00cf  ld   $cf         ;0498 CALL
              7516 0038  ld   $38         ;0498 'Keyword'
              7517 0070  ld   $70         ;049a 'p'
              7518 006f  ld   $6f         ;049b 'o'
              7519 006b  ld   $6b         ;049c 'k'
              751a 0065  ld   $65         ;049d 'e'
              751b 0000  ld   $00         ;049e 0
              751c 0035  ld   $35         ;049f BCC
              751d 003f  ld   $3f         ;04a0 EQ
              751e 00b3  ld   $b3
              751f 00cf  ld   $cf         ;04a2 CALL
              7520 003a  ld   $3a         ;04a2 'Expression'
              7521 002b  ld   $2b         ;04a4 STW
              7522 0068  ld   $68         ;04a4 'Address'
              7523 00cf  ld   $cf         ;04a6 CALL
              7524 0038  ld   $38         ;04a6 'Keyword'
              7525 002c  ld   $2c         ;04a8 ','
              7526 0000  ld   $00         ;04a9 0
              7527 0035  ld   $35         ;04aa BCC
              7528 0072  ld   $72         ;04ab NE
              7529 00ad  ld   $ad
              752a 00cf  ld   $cf         ;04ad CALL
              752b 004a  ld   $4a         ;04ad 'SyntaxError'
              752c 00cf  ld   $cf         ;04af CALL
              752d 003a  ld   $3a         ;04af 'Expression'
              752e 00f0  ld   $f0         ;04b1 POKE
              752f 0068  ld   $68         ;04b1 'Address'
              7530 00cf  ld   $cf         ;04b3 CALL
              7531 0062  ld   $62         ;04b3 'EndOfLine'
              7532 00cf  ld   $cf         ;04b5 CALL
              7533 0038  ld   $38         ;04b5 'Keyword'
              7534 0027  ld   $27         ;04b7 "'"
              7535 0000  ld   $00         ;04b8 0
              7536 0035  ld   $35         ;04b9 BCC
              7537 0072  ld   $72         ;04ba NE
              7538 00c0  ld   $c0
              7539 00cf  ld   $cf         ;04bc CALL
              753a 0038  ld   $38         ;04bc 'Keyword'
              753b 0072  ld   $72         ;04be 'r'
              753c 0065  ld   $65         ;04bf 'e'
              753d 006d  ld   $6d         ;04c0 'm'
              753e 0000  ld   $00         ;04c1 0
              753f 0035  ld   $35         ;04c2 BCC
              7540 003f  ld   $3f         ;04c3 EQ
              7541 00cf  ld   $cf
              7542 0021  ld   $21         ;04c5 LDW
              7543 0036  ld   $36         ;04c5 'Active'
              7544 00ad  ld   $ad         ;04c7 PEEK
              7545 0035  ld   $35         ;04c8 BCC
              7546 003f  ld   $3f         ;04c9 EQ
              7547 00cd  ld   $cd
              7548 0093  ld   $93         ;04cb INC
              7549 0036  ld   $36         ;04cb 'Active'
              754a 0090  ld   $90         ;04cd BRA
              754b 00c3  ld   $c3
              754c 00cf  ld   $cf         ;04cf CALL
              754d 0062  ld   $62         ;04cf 'EndOfLine'
              754e 00cf  ld   $cf         ;04d1 CALL
              754f 0038  ld   $38         ;04d1 'Keyword'
              7550 006c  ld   $6c         ;04d3 'l'
              7551 0069  ld   $69         ;04d4 'i'
              7552 006e  ld   $6e         ;04d5 'n'
              7553 0065  ld   $65         ;04d6 'e'
              7554 0000  ld   $00         ;04d7 0
              7555 0035  ld   $35         ;04d8 BCC
              7556 003f  ld   $3f         ;04d9 EQ
              7557 00de  ld   $de
              7558 0011  ld   $11         ;04db LDWI
              7559 00a0  ld   $a0
              755a 0019  ld   $19
              755b 00cf  ld   $cf         ;04de CALL
              755c 0018  ld   $18         ;04de vAC
              755d 00cf  ld   $cf         ;04e0 CALL
              755e 0038  ld   $38         ;04e0 'Keyword'
              755f 0065  ld   $65         ;04e2 'e'
              7560 006e  ld   $6e         ;04e3 'n'
              7561 0064  ld   $64         ;04e4 'd'
              7562 0000  ld   $00         ;04e5 0
              7563 0035  ld   $35         ;04e6 BCC
              7564 003f  ld   $3f         ;04e7 EQ
              7565 00ea  ld   $ea
              7566 00cf  ld   $cf         ;04e9 CALL
              7567 0056  ld   $56         ;04e9 'Prompt'
              7568 0000  ld   $00         ;04eb 0
              7569 0011  ld   $11         ;04ec LDWI
              756a 0000  ld   $00
              756b 0005  ld   $05
              756c 00cf  ld   $cf         ;04ef CALL
              756d 0018  ld   $18         ;04ef vAC
              756e 002b  ld   $2b         ;04f1 STW
              756f 0066  ld   $66         ;04f1 'Statements'
              7570 0093  ld   $93         ;04f3 INC
              7571 001b  ld   $1b
              7572 0093  ld   $93         ;04f5 INC
              7573 001b  ld   $1b
              7574 00ff  ld   $ff         ;04f7 RET
              7575 0005  ld   $05         ;| RAM segment address (high byte first)
              7576 0000  ld   $00         ;|
              7577 0000  ld   $00         ;| Length (1..256)
              7578 00cf  ld   $cf         ;0500 CALL
              7579 0038  ld   $38         ;0500 'Keyword'
              757a 006e  ld   $6e         ;0502 'n'
              757b 0065  ld   $65         ;0503 'e'
              757c 0078  ld   $78         ;0504 'x'
              757d 0074  ld   $74         ;0505 't'
              757e 0000  ld   $00         ;0506 0
              757f 0035  ld   $35         ;0507 BCC
              7580 003f  ld   $3f         ;0508 EQ
              7581 0037  ld   $37
              7582 00cf  ld   $cf         ;050a CALL
              7583 0042  ld   $42         ;050a 'Variable'
              7584 002b  ld   $2b         ;050c STW
              7585 0068  ld   $68         ;050c 'Address'
              7586 0075  ld   $75         ;050e PUSH
              7587 0021  ld   $21         ;050f LDW
              7588 0036  ld   $36         ;050f 'Active'
              7589 00ec  ld   $ec         ;0511 STLW
              758a 0000  ld   $00
              758b 0011  ld   $11         ;0513 LDWI
              758c 0000  ld   $00
              758d 00ff  ld   $ff
              758e 0099  ld   $99         ;0516 ADDW
              758f 0068  ld   $68         ;0516 'Address'
              7590 00f6  ld   $f6         ;0518 DEEK
              7591 0035  ld   $35         ;0519 BCC
              7592 0072  ld   $72         ;051a NE
              7593 001c  ld   $1c
              7594 00cf  ld   $cf         ;051c CALL
              7595 0046  ld   $46         ;051c 'ValueError'
              7596 002b  ld   $2b         ;051e STW
              7597 0036  ld   $36         ;051e 'Active'
              7598 00cf  ld   $cf         ;0520 CALL
              7599 003a  ld   $3a         ;0520 'Expression'
              759a 0021  ld   $21         ;0522 LDW
              759b 0068  ld   $68         ;0522 'Address'
              759c 00f6  ld   $f6         ;0524 DEEK
              759d 00e3  ld   $e3         ;0525 ADDI
              759e 0001  ld   $01
              759f 00f3  ld   $f3         ;0527 DOKE
              75a0 0068  ld   $68         ;0527 'Address'
              75a1 00b8  ld   $b8         ;0529 SUBW
              75a2 003c  ld   $3c         ;0529 'Value'
              75a3 0035  ld   $35         ;052b BCC
              75a4 0056  ld   $56         ;052c LE
              75a5 0032  ld   $32
              75a6 00ee  ld   $ee         ;052e LDLW
              75a7 0000  ld   $00
              75a8 002b  ld   $2b         ;0530 STW
              75a9 0036  ld   $36         ;0530 'Active'
              75aa 00cf  ld   $cf         ;0532 CALL
              75ab 0034  ld   $34         ;0532 'Spaces'
              75ac 0063  ld   $63         ;0534 POP
              75ad 00cf  ld   $cf         ;0535 CALL
              75ae 0058  ld   $58         ;0535 'TestBreak'
              75af 00cf  ld   $cf         ;0537 CALL
              75b0 0062  ld   $62         ;0537 'EndOfLine'
              75b1 00cf  ld   $cf         ;0539 CALL
              75b2 0038  ld   $38         ;0539 'Keyword'
              75b3 0066  ld   $66         ;053b 'f'
              75b4 006f  ld   $6f         ;053c 'o'
              75b5 0072  ld   $72         ;053d 'r'
              75b6 0000  ld   $00         ;053e 0
              75b7 0035  ld   $35         ;053f BCC
              75b8 003f  ld   $3f         ;0540 EQ
              75b9 006c  ld   $6c
              75ba 00cf  ld   $cf         ;0542 CALL
              75bb 0042  ld   $42         ;0542 'Variable'
              75bc 002b  ld   $2b         ;0544 STW
              75bd 0068  ld   $68         ;0544 'Address'
              75be 00cf  ld   $cf         ;0546 CALL
              75bf 0034  ld   $34         ;0546 'Spaces'
              75c0 00cf  ld   $cf         ;0548 CALL
              75c1 0038  ld   $38         ;0548 'Keyword'
              75c2 003d  ld   $3d         ;054a '='
              75c3 0000  ld   $00         ;054b 0
              75c4 0035  ld   $35         ;054c BCC
              75c5 0072  ld   $72         ;054d NE
              75c6 004f  ld   $4f
              75c7 00cf  ld   $cf         ;054f CALL
              75c8 004a  ld   $4a         ;054f 'SyntaxError'
              75c9 00cf  ld   $cf         ;0551 CALL
              75ca 003a  ld   $3a         ;0551 'Expression'
              75cb 00f3  ld   $f3         ;0553 DOKE
              75cc 0068  ld   $68         ;0553 'Address'
              75cd 00cf  ld   $cf         ;0555 CALL
              75ce 0038  ld   $38         ;0555 'Keyword'
              75cf 0074  ld   $74         ;0557 't'
              75d0 006f  ld   $6f         ;0558 'o'
              75d1 0000  ld   $00         ;0559 0
              75d2 0035  ld   $35         ;055a BCC
              75d3 0072  ld   $72         ;055b NE
              75d4 005d  ld   $5d
              75d5 00cf  ld   $cf         ;055d CALL
              75d6 004a  ld   $4a         ;055d 'SyntaxError'
              75d7 0011  ld   $11         ;055f LDWI
              75d8 0000  ld   $00
              75d9 00ff  ld   $ff
              75da 0099  ld   $99         ;0562 ADDW
              75db 0068  ld   $68         ;0562 'Address'
              75dc 002b  ld   $2b         ;0564 STW
              75dd 006a  ld   $6a         ;0564 'j'
              75de 0021  ld   $21         ;0566 LDW
              75df 0036  ld   $36         ;0566 'Active'
              75e0 00f3  ld   $f3         ;0568 DOKE
              75e1 006a  ld   $6a         ;0568 'j'
              75e2 00cf  ld   $cf         ;056a CALL
              75e3 003a  ld   $3a         ;056a 'Expression'
              75e4 00cf  ld   $cf         ;056c CALL
              75e5 0062  ld   $62         ;056c 'EndOfLine'
              75e6 00cf  ld   $cf         ;056e CALL
              75e7 0038  ld   $38         ;056e 'Keyword'
              75e8 0061  ld   $61         ;0570 'a'
              75e9 0074  ld   $74         ;0571 't'
              75ea 0000  ld   $00         ;0572 0
              75eb 0035  ld   $35         ;0573 BCC
              75ec 003f  ld   $3f         ;0574 EQ
              75ed 009a  ld   $9a
              75ee 00cf  ld   $cf         ;0576 CALL
              75ef 003a  ld   $3a         ;0576 'Expression'
              75f0 0035  ld   $35         ;0578 BCC
              75f1 0053  ld   $53         ;0579 GE
              75f2 007b  ld   $7b
              75f3 00cf  ld   $cf         ;057b CALL
              75f4 0046  ld   $46         ;057b 'ValueError'
              75f5 005e  ld   $5e         ;057d ST
              75f6 0030  ld   $30         ;057d 'Pos'
              75f7 00cf  ld   $cf         ;057f CALL
              75f8 0038  ld   $38         ;057f 'Keyword'
              75f9 002c  ld   $2c         ;0581 ','
              75fa 0000  ld   $00         ;0582 0
              75fb fe00  bra  ac          ;+-----------------------------------+
              75fc fcfd  bra  $75fd       ;|                                   |
              75fd 1418  ld   $18,y       ;| Trampoline for page $7500 lookups |
              75fe e006  jmp  y,$06       ;|                                   |
              75ff c218  st   [$18]       ;+-----------------------------------+
              7600 0035  ld   $35         ;0583 BCC
              7601 003f  ld   $3f         ;0584 EQ
              7602 0098  ld   $98
              7603 00cf  ld   $cf         ;0586 CALL
              7604 003a  ld   $3a         ;0586 'Expression'
              7605 0035  ld   $35         ;0588 BCC
              7606 0053  ld   $53         ;0589 GE
              7607 008b  ld   $8b
              7608 00cf  ld   $cf         ;058b CALL
              7609 0046  ld   $46         ;058b 'ValueError'
              760a 00e6  ld   $e6         ;058d SUBI
              760b 0078  ld   $78
              760c 0035  ld   $35         ;058f BCC
              760d 0050  ld   $50         ;0590 LT
              760e 0092  ld   $92
              760f 00cf  ld   $cf         ;0592 CALL
              7610 0046  ld   $46         ;0592 'ValueError'
              7611 00e3  ld   $e3         ;0594 ADDI
              7612 00f8  ld   $f8
              7613 00e9  ld   $e9         ;0596 LSLW
              7614 00ad  ld   $ad         ;0597 PEEK
              7615 005e  ld   $5e         ;0598 ST
              7616 0031  ld   $31         ;0598 'Pos'+1
              7617 00cf  ld   $cf         ;059a CALL
              7618 0062  ld   $62         ;059a 'EndOfLine'
              7619 00cf  ld   $cf         ;059c CALL
              761a 0038  ld   $38         ;059c 'Keyword'
              761b 0070  ld   $70         ;059e 'p'
              761c 0075  ld   $75         ;059f 'u'
              761d 0074  ld   $74         ;05a0 't'
              761e 0000  ld   $00         ;05a1 0
              761f 0035  ld   $35         ;05a2 BCC
              7620 003f  ld   $3f         ;05a3 EQ
              7621 00a9  ld   $a9
              7622 00cf  ld   $cf         ;05a5 CALL
              7623 003a  ld   $3a         ;05a5 'Expression'
              7624 00cf  ld   $cf         ;05a7 CALL
              7625 0050  ld   $50         ;05a7 'PrintChar'
              7626 00cf  ld   $cf         ;05a9 CALL
              7627 0062  ld   $62         ;05a9 'EndOfLine'
              7628 00cf  ld   $cf         ;05ab CALL
              7629 0038  ld   $38         ;05ab 'Keyword'
              762a 006d  ld   $6d         ;05ad 'm'
              762b 006f  ld   $6f         ;05ae 'o'
              762c 0064  ld   $64         ;05af 'd'
              762d 0065  ld   $65         ;05b0 'e'
              762e 0000  ld   $00         ;05b1 0
              762f 0035  ld   $35         ;05b2 BCC
              7630 003f  ld   $3f         ;05b3 EQ
              7631 00c7  ld   $c7
              7632 00cf  ld   $cf         ;05b5 CALL
              7633 003a  ld   $3a         ;05b5 'Expression'
              7634 001a  ld   $1a         ;05b7 LD
              7635 0021  ld   $21
              7636 00e6  ld   $e6         ;05b9 SUBI
              7637 0020  ld   $20
              7638 0035  ld   $35         ;05bb BCC
              7639 0050  ld   $50         ;05bc LT
              763a 00c5  ld   $c5
              763b 0011  ld   $11         ;05be LDWI
              763c 0000  ld   $00
              763d 000b  ld   $0b
              763e 002b  ld   $2b         ;05c1 STW
              763f 0022  ld   $22         ;05c1 '_sysFn'
              7640 0021  ld   $21         ;05c3 LDW
              7641 003c  ld   $3c         ;05c3 'Value'
              7642 00b4  ld   $b4         ;05c5 SYS
              7643 00e7  ld   $e7
              7644 00cf  ld   $cf         ;05c7 CALL
              7645 0062  ld   $62         ;05c7 'EndOfLine'
              7646 0011  ld   $11         ;05c9 LDWI
              7647 00a0  ld   $a0
              7648 0014  ld   $14
              7649 00cf  ld   $cf         ;05cc CALL
              764a 0018  ld   $18         ;05cc vAC
              764b 0059  ld   $59         ;05ce LDI
              764c 0000  ld   $00
              764d 002b  ld   $2b         ;05d0 STW
              764e 003c  ld   $3c         ;05d0 'Value'
              764f 00e9  ld   $e9         ;05d2 LSLW
              7650 00e9  ld   $e9         ;05d3 LSLW
              7651 00e9  ld   $e9         ;05d4 LSLW
              7652 00e9  ld   $e9         ;05d5 LSLW
              7653 002b  ld   $2b         ;05d6 STW
              7654 0040  ld   $40         ;05d6 'i'
              7655 0093  ld   $93         ;05d8 INC
              7656 0036  ld   $36         ;05d8 'Active'
              7657 0021  ld   $21         ;05da LDW
              7658 0036  ld   $36         ;05da 'Active'
              7659 00ad  ld   $ad         ;05dc PEEK
              765a 00e6  ld   $e6         ;05dd SUBI
              765b 0030  ld   $30
              765c 0035  ld   $35         ;05df BCC
              765d 0050  ld   $50         ;05e0 LT
              765e 00fd  ld   $fd
              765f 00e6  ld   $e6         ;05e2 SUBI
              7660 000a  ld   $0a
              7661 0035  ld   $35         ;05e4 BCC
              7662 0053  ld   $53         ;05e5 GE
              7663 00eb  ld   $eb
              7664 00e3  ld   $e3         ;05e7 ADDI
              7665 000a  ld   $0a
              7666 0099  ld   $99         ;05e9 ADDW
              7667 0040  ld   $40         ;05e9 'i'
              7668 0090  ld   $90         ;05eb BRA
              7669 00ce  ld   $ce
              766a 0082  ld   $82         ;05ed ANDI
              766b 00df  ld   $df
              766c 00e6  ld   $e6         ;05ef SUBI
              766d 0007  ld   $07
              766e 0035  ld   $35         ;05f1 BCC
              766f 0050  ld   $50         ;05f2 LT
              7670 00fd  ld   $fd
              7671 00e6  ld   $e6         ;05f4 SUBI
              7672 0006  ld   $06
              7673 0035  ld   $35         ;05f6 BCC
              7674 0053  ld   $53         ;05f7 GE
              7675 00fd  ld   $fd
              7676 00e3  ld   $e3         ;05f9 ADDI
              7677 0010  ld   $10
              7678 0099  ld   $99         ;05fb ADDW
              7679 0040  ld   $40         ;05fb 'i'
              767a 0090  ld   $90         ;05fd BRA
              767b 00ce  ld   $ce
              767c 00ff  ld   $ff         ;05ff RET
              767d 0006  ld   $06         ;| RAM segment address (high byte first)
              767e 0000  ld   $00         ;|
              767f 00fd  ld   $fd         ;| Length (1..256)
              7680 00cd  ld   $cd         ;0600 DEF
              7681 00bb  ld   $bb
              7682 0075  ld   $75         ;0602 PUSH
              7683 00cf  ld   $cf         ;0603 CALL
              7684 0032  ld   $32         ;0603 'Number'
              7685 0035  ld   $35         ;0605 BCC
              7686 0056  ld   $56         ;0606 LE
              7687 00b9  ld   $b9
              7688 0021  ld   $21         ;0608 LDW
              7689 0048  ld   $48         ;0608 'End'
              768a 002b  ld   $2b         ;060a STW
              768b 0040  ld   $40         ;060a 'i'
              768c 002b  ld   $2b         ;060c STW
              768d 006a  ld   $6a         ;060c 'j'
              768e 00fc  ld   $fc         ;060e XORW
              768f 006c  ld   $6c         ;060e 'Begin'
              7690 0035  ld   $35         ;0610 BCC
              7691 003f  ld   $3f         ;0611 EQ
              7692 0016  ld   $16
              7693 0021  ld   $21         ;0613 LDW
              7694 0048  ld   $48         ;0613 'End'
              7695 00cf  ld   $cf         ;0615 CALL
              7696 006e  ld   $6e         ;0615 'PrevBlock'
              7697 00f6  ld   $f6         ;0617 DEEK
              7698 00b8  ld   $b8         ;0618 SUBW
              7699 003c  ld   $3c         ;0618 'Value'
              769a 0035  ld   $35         ;061a BCC
              769b 0050  ld   $50         ;061b LT
              769c 005a  ld   $5a
              769d 0021  ld   $21         ;061d LDW
              769e 006c  ld   $6c         ;061d 'Begin'
              769f 002b  ld   $2b         ;061f STW
              76a0 0040  ld   $40         ;061f 'i'
              76a1 0021  ld   $21         ;0621 LDW
              76a2 0040  ld   $40         ;0621 'i'
              76a3 00f6  ld   $f6         ;0623 DEEK
              76a4 00b8  ld   $b8         ;0624 SUBW
              76a5 003c  ld   $3c         ;0624 'Value'
              76a6 0035  ld   $35         ;0626 BCC
              76a7 0053  ld   $53         ;0627 GE
              76a8 002d  ld   $2d
              76a9 0021  ld   $21         ;0629 LDW
              76aa 0040  ld   $40         ;0629 'i'
              76ab 00cf  ld   $cf         ;062b CALL
              76ac 0070  ld   $70         ;062b 'NextBlock'
              76ad 0090  ld   $90         ;062d BRA
              76ae 001d  ld   $1d
              76af 0035  ld   $35         ;062f BCC
              76b0 0056  ld   $56         ;0630 LE
              76b1 005a  ld   $5a
              76b2 0021  ld   $21         ;0632 LDW
              76b3 0000  ld   $00
              76b4 00fc  ld   $fc         ;0634 XORW
              76b5 0048  ld   $48         ;0634 'End'
              76b6 0035  ld   $35         ;0636 BCC
              76b7 003f  ld   $3f         ;0637 EQ
              76b8 0058  ld   $58
              76b9 0021  ld   $21         ;0639 LDW
              76ba 006a  ld   $6a         ;0639 'j'
              76bb 002b  ld   $2b         ;063b STW
              76bc 0044  ld   $44         ;063b 'k'
              76bd 00cf  ld   $cf         ;063d CALL
              76be 006e  ld   $6e         ;063d 'PrevBlock'
              76bf 002b  ld   $2b         ;063f STW
              76c0 006a  ld   $6a         ;063f 'j'
              76c1 002b  ld   $2b         ;0641 STW
              76c2 004e  ld   $4e         ;0641 'tmp'
              76c3 0021  ld   $21         ;0643 LDW
              76c4 004e  ld   $4e         ;0643 'tmp'
              76c5 00ad  ld   $ad         ;0645 PEEK
              76c6 00f0  ld   $f0         ;0646 POKE
              76c7 0044  ld   $44         ;0646 'k'
              76c8 0093  ld   $93         ;0648 INC
              76c9 004e  ld   $4e         ;0648 'tmp'
              76ca 0093  ld   $93         ;064a INC
              76cb 0044  ld   $44         ;064a 'k'
              76cc 0021  ld   $21         ;064c LDW
              76cd 004e  ld   $4e         ;064c 'tmp'
              76ce 0082  ld   $82         ;064e ANDI
              76cf 001f  ld   $1f
              76d0 0035  ld   $35         ;0650 BCC
              76d1 0072  ld   $72         ;0651 NE
              76d2 0041  ld   $41
              76d3 0021  ld   $21         ;0653 LDW
              76d4 006a  ld   $6a         ;0653 'j'
              76d5 00fc  ld   $fc         ;0655 XORW
              76d6 0040  ld   $40         ;0655 'i'
              76d7 0035  ld   $35         ;0657 BCC
              76d8 0072  ld   $72         ;0658 NE
              76d9 0037  ld   $37
              76da 0059  ld   $59         ;065a LDI
              76db 0001  ld   $01
              76dc 0035  ld   $35         ;065c BCC
              76dd 003f  ld   $3f         ;065d EQ
              76de 0070  ld   $70
              76df 0021  ld   $21         ;065f LDW
              76e0 0000  ld   $00
              76e1 00e6  ld   $e6         ;0661 SUBI
              76e2 0080  ld   $80
              76e3 00e6  ld   $e6         ;0663 SUBI
              76e4 00c0  ld   $c0
              76e5 00fc  ld   $fc         ;0665 XORW
              76e6 0048  ld   $48         ;0665 'End'
              76e7 0035  ld   $35         ;0667 BCC
              76e8 0072  ld   $72         ;0668 NE
              76e9 006a  ld   $6a
              76ea 00cf  ld   $cf         ;066a CALL
              76eb 004a  ld   $4a         ;066a 'SyntaxError'
              76ec 0021  ld   $21         ;066c LDW
              76ed 0048  ld   $48         ;066c 'End'
              76ee 00cf  ld   $cf         ;066e CALL
              76ef 0070  ld   $70         ;066e 'NextBlock'
              76f0 002b  ld   $2b         ;0670 STW
              76f1 0048  ld   $48         ;0670 'End'
              76f2 0021  ld   $21         ;0672 LDW
              76f3 0036  ld   $36         ;0672 'Active'
              76f4 00ad  ld   $ad         ;0674 PEEK
              76f5 0035  ld   $35         ;0675 BCC
              76f6 003f  ld   $3f         ;0676 EQ
              76f7 008a  ld   $8a
              76f8 0021  ld   $21         ;0678 LDW
              76f9 003c  ld   $3c         ;0678 'Value'
              76fa 00f3  ld   $f3         ;067a DOKE
              76fb fe00  bra  ac          ;+-----------------------------------+
              76fc fcfd  bra  $76fd       ;|                                   |
              76fd 1418  ld   $18,y       ;| Trampoline for page $7600 lookups |
              76fe e006  jmp  y,$06       ;|                                   |
              76ff c218  st   [$18]       ;+-----------------------------------+
              7700 0040  ld   $40         ;067a 'i'
              7701 0093  ld   $93         ;067c INC
              7702 0040  ld   $40         ;067c 'i'
              7703 0093  ld   $93         ;067e INC
              7704 0040  ld   $40         ;067e 'i'
              7705 0021  ld   $21         ;0680 LDW
              7706 0036  ld   $36         ;0680 'Active'
              7707 00ad  ld   $ad         ;0682 PEEK
              7708 0093  ld   $93         ;0683 INC
              7709 0036  ld   $36         ;0683 'Active'
              770a 00f0  ld   $f0         ;0685 POKE
              770b 0040  ld   $40         ;0685 'i'
              770c 0035  ld   $35         ;0687 BCC
              770d 0072  ld   $72         ;0688 NE
              770e 007c  ld   $7c
              770f 0090  ld   $90         ;068a BRA
              7710 00b7  ld   $b7
              7711 0021  ld   $21         ;068c LDW
              7712 0040  ld   $40         ;068c 'i'
              7713 002b  ld   $2b         ;068e STW
              7714 006a  ld   $6a         ;068e 'j'
              7715 00fc  ld   $fc         ;0690 XORW
              7716 0048  ld   $48         ;0690 'End'
              7717 0035  ld   $35         ;0692 BCC
              7718 003f  ld   $3f         ;0693 EQ
              7719 00b1  ld   $b1
              771a 0021  ld   $21         ;0695 LDW
              771b 006a  ld   $6a         ;0695 'j'
              771c 00cf  ld   $cf         ;0697 CALL
              771d 0070  ld   $70         ;0697 'NextBlock'
              771e 002b  ld   $2b         ;0699 STW
              771f 006a  ld   $6a         ;0699 'j'
              7720 002b  ld   $2b         ;069b STW
              7721 004e  ld   $4e         ;069b 'tmp'
              7722 0021  ld   $21         ;069d LDW
              7723 004e  ld   $4e         ;069d 'tmp'
              7724 00ad  ld   $ad         ;069f PEEK
              7725 00f0  ld   $f0         ;06a0 POKE
              7726 0040  ld   $40         ;06a0 'i'
              7727 0093  ld   $93         ;06a2 INC
              7728 004e  ld   $4e         ;06a2 'tmp'
              7729 0093  ld   $93         ;06a4 INC
              772a 0040  ld   $40         ;06a4 'i'
              772b 0021  ld   $21         ;06a6 LDW
              772c 004e  ld   $4e         ;06a6 'tmp'
              772d 0082  ld   $82         ;06a8 ANDI
              772e 001f  ld   $1f
              772f 0035  ld   $35         ;06aa BCC
              7730 0072  ld   $72         ;06ab NE
              7731 009b  ld   $9b
              7732 0021  ld   $21         ;06ad LDW
              7733 006a  ld   $6a         ;06ad 'j'
              7734 002b  ld   $2b         ;06af STW
              7735 0040  ld   $40         ;06af 'i'
              7736 0090  ld   $90         ;06b1 BRA
              7737 008e  ld   $8e
              7738 0021  ld   $21         ;06b3 LDW
              7739 0048  ld   $48         ;06b3 'End'
              773a 00cf  ld   $cf         ;06b5 CALL
              773b 006e  ld   $6e         ;06b5 'PrevBlock'
              773c 002b  ld   $2b         ;06b7 STW
              773d 0048  ld   $48         ;06b7 'End'
              773e 0021  ld   $21         ;06b9 LDW
              773f 003c  ld   $3c         ;06b9 'Value'
              7740 0063  ld   $63         ;06bb POP
              7741 00ff  ld   $ff         ;06bc RET
              7742 002b  ld   $2b         ;06bd STW
              7743 0072  ld   $72         ;06bd 'Insert'
              7744 0011  ld   $11         ;06bf LDWI
              7745 003f  ld   $3f
              7746 0035  ld   $35
              7747 002b  ld   $2b         ;06c2 STW
              7748 002a  ld   $2a
              7749 0011  ld   $11         ;06c4 LDWI
              774a 00a0  ld   $a0
              774b 0018  ld   $18
              774c 002b  ld   $2b         ;06c7 STW
              774d 005a  ld   $5a         ;06c7 'Newline'
              774e 00cf  ld   $cf         ;06c9 CALL
              774f 0018  ld   $18         ;06c9 vAC
              7750 00cf  ld   $cf         ;06cb CALL
              7751 0052  ld   $52         ;06cb 'PrintS'
              7752 002a  ld   $2a         ;06cd '*'
              7753 002a  ld   $2a         ;06ce '*'
              7754 002a  ld   $2a         ;06cf '*'
              7755 0020  ld   $20         ;06d0 ' '
              7756 0054  ld   $54         ;06d1 'T'
              7757 0069  ld   $69         ;06d2 'i'
              7758 006e  ld   $6e         ;06d3 'n'
              7759 0079  ld   $79         ;06d4 'y'
              775a 0020  ld   $20         ;06d5 ' '
              775b 0042  ld   $42         ;06d6 'B'
              775c 0041  ld   $41         ;06d7 'A'
              775d 0053  ld   $53         ;06d8 'S'
              775e 0049  ld   $49         ;06d9 'I'
              775f 0043  ld   $43         ;06da 'C'
              7760 0020  ld   $20         ;06db ' '
              7761 0044  ld   $44         ;06dc 'D'
              7762 0045  ld   $45         ;06dd 'E'
              7763 0056  ld   $56         ;06de 'V'
              7764 0000  ld   $00         ;06df 0
              7765 00cf  ld   $cf         ;06e0 CALL
              7766 005a  ld   $5a         ;06e0 'Newline'
              7767 0011  ld   $11         ;06e2 LDWI
              7768 00a0  ld   $a0
              7769 0008  ld   $08
              776a 002b  ld   $2b         ;06e5 STW
              776b 001a  ld   $1a         ;06e5 '_vLR'
              776c 00ff  ld   $ff         ;06e7 RET
              776d 0059  ld   $59         ;06e8 LDI
              776e 0000  ld   $00
              776f 00f0  ld   $f0         ;06ea POKE
              7770 0036  ld   $36         ;06ea 'Active'
              7771 0059  ld   $59         ;06ec LDI
              7772 0020  ld   $20
              7773 00cf  ld   $cf         ;06ee CALL
              7774 0050  ld   $50         ;06ee 'PrintChar'
              7775 00cf  ld   $cf         ;06f0 CALL
              7776 005a  ld   $5a         ;06f0 'Newline'
              7777 0059  ld   $59         ;06f2 LDI
              7778 00a2  ld   $a2
              7779 005e  ld   $5e         ;06f4 ST
              777a 0036  ld   $36         ;06f4 'Active'
              777b 00cf  ld   $cf         ;06f6 CALL
              777c 0034  ld   $34         ;06f6 'Spaces'
              777d 0021  ld   $21         ;06f8 LDW
              777e 0036  ld   $36         ;06f8 'Active'
              777f 00ad  ld   $ad         ;06fa PEEK
              7780 0063  ld   $63         ;06fb POP
              7781 00ff  ld   $ff         ;06fc RET
              7782 0008  ld   $08         ;| RAM segment address (high byte first)
              7783 00a0  ld   $a0         ;|
              7784 005f  ld   $5f         ;| Length (1..256)
              7785 00cd  ld   $cd         ;08a0 DEF
              7786 00b6  ld   $b6
              7787 0088  ld   $88         ;08a2 ORI
              7788 001f  ld   $1f
              7789 00e3  ld   $e3         ;08a4 ADDI
              778a 0001  ld   $01
              778b 002b  ld   $2b         ;08a6 STW
              778c 004e  ld   $4e         ;08a6 'tmp'
              778d 0035  ld   $35         ;08a8 BCC
              778e 0056  ld   $56         ;08a9 LE
              778f 00b3  ld   $b3
              7790 0082  ld   $82         ;08ab ANDI
              7791 00e0  ld   $e0
              7792 0035  ld   $35         ;08ad BCC
              7793 0072  ld   $72         ;08ae NE
              7794 00b3  ld   $b3
              7795 0021  ld   $21         ;08b0 LDW
              7796 004e  ld   $4e         ;08b0 'tmp'
              7797 00e3  ld   $e3         ;08b2 ADDI
              7798 00a0  ld   $a0
              7799 00ff  ld   $ff         ;08b4 RET
              779a 0021  ld   $21         ;08b5 LDW
              779b 004e  ld   $4e         ;08b5 'tmp'
              779c 00ff  ld   $ff         ;08b7 RET
              779d 002b  ld   $2b         ;08b8 STW
              779e 0070  ld   $70         ;08b8 'NextBlock'
              779f 00cd  ld   $cd         ;08ba DEF
              77a0 00ce  ld   $ce
              77a1 00e6  ld   $e6         ;08bc SUBI
              77a2 0020  ld   $20
              77a3 002b  ld   $2b         ;08be STW
              77a4 004e  ld   $4e         ;08be 'tmp'
              77a5 0035  ld   $35         ;08c0 BCC
              77a6 0050  ld   $50         ;08c1 LT
              77a7 00cb  ld   $cb
              77a8 0082  ld   $82         ;08c3 ANDI
              77a9 0060  ld   $60
              77aa 0035  ld   $35         ;08c5 BCC
              77ab 0072  ld   $72         ;08c6 NE
              77ac 00cb  ld   $cb
              77ad 0021  ld   $21         ;08c8 LDW
              77ae 004e  ld   $4e         ;08c8 'tmp'
              77af 00e6  ld   $e6         ;08ca SUBI
              77b0 00a0  ld   $a0
              77b1 00ff  ld   $ff         ;08cc RET
              77b2 0021  ld   $21         ;08cd LDW
              77b3 004e  ld   $4e         ;08cd 'tmp'
              77b4 00ff  ld   $ff         ;08cf RET
              77b5 002b  ld   $2b         ;08d0 STW
              77b6 006e  ld   $6e         ;08d0 'PrevBlock'
              77b7 00cd  ld   $cd         ;08d2 DEF
              77b8 00fa  ld   $fa
              77b9 0021  ld   $21         ;08d4 LDW
              77ba 006c  ld   $6c         ;08d4 'Begin'
              77bb 002b  ld   $2b         ;08d6 STW
              77bc 0040  ld   $40         ;08d6 'i'
              77bd 00fc  ld   $fc         ;08d8 XORW
              77be 0048  ld   $48         ;08d8 'End'
              77bf 0035  ld   $35         ;08da BCC
              77c0 003f  ld   $3f         ;08db EQ
              77c1 00f3  ld   $f3
              77c2 0021  ld   $21         ;08dd LDW
              77c3 0040  ld   $40         ;08dd 'i'
              77c4 00f6  ld   $f6         ;08df DEEK
              77c5 00fc  ld   $fc         ;08e0 XORW
              77c6 003c  ld   $3c         ;08e0 'Value'
              77c7 0035  ld   $35         ;08e2 BCC
              77c8 0072  ld   $72         ;08e3 NE
              77c9 00ed  ld   $ed
              77ca 0021  ld   $21         ;08e5 LDW
              77cb 0040  ld   $40         ;08e5 'i'
              77cc 00e3  ld   $e3         ;08e7 ADDI
              77cd 0002  ld   $02
              77ce 002b  ld   $2b         ;08e9 STW
              77cf 0036  ld   $36         ;08e9 'Active'
              77d0 00cf  ld   $cf         ;08eb CALL
              77d1 0058  ld   $58         ;08eb 'TestBreak'
              77d2 00cf  ld   $cf         ;08ed CALL
              77d3 0066  ld   $66         ;08ed 'Statements'
              77d4 0021  ld   $21         ;08ef LDW
              77d5 0040  ld   $40         ;08ef 'i'
              77d6 00cf  ld   $cf         ;08f1 CALL
              77d7 0070  ld   $70         ;08f1 'NextBlock'
              77d8 0090  ld   $90         ;08f3 BRA
              77d9 00d4  ld   $d4
              77da 00cf  ld   $cf         ;08f5 CALL
              77db 0056  ld   $56         ;08f5 'Prompt'
              77dc 004c  ld   $4c         ;08f7 'L'
              77dd 0069  ld   $69         ;08f8 'i'
              77de 006e  ld   $6e         ;08f9 'n'
              77df 0065  ld   $65         ;08fa 'e'
              77e0 0000  ld   $00         ;08fb 0
              77e1 0093  ld   $93         ;08fc INC
              77e2 001b  ld   $1b
              77e3 00ff  ld   $ff         ;08fe RET
              77e4 0009  ld   $09         ;| RAM segment address (high byte first)
              77e5 00a0  ld   $a0         ;|
              77e6 005e  ld   $5e         ;| Length (1..256)
              77e7 002b  ld   $2b         ;09a0 STW
              77e8 005e  ld   $5e         ;09a0 'GotoValue'
              77e9 00cd  ld   $cd         ;09a2 DEF
              77ea 00de  ld   $de
              77eb 0075  ld   $75         ;09a4 PUSH
              77ec 0035  ld   $35         ;09a5 BCC
              77ed 0053  ld   $53         ;09a6 GE
              77ee 00b0  ld   $b0
              77ef 0059  ld   $59         ;09a8 LDI
              77f0 0000  ld   $00
              77f1 00b8  ld   $b8         ;09aa SUBW
              77f2 003c  ld   $3c         ;09aa 'Value'
              77f3 002b  ld   $2b         ;09ac STW
              77f4 003c  ld   $3c         ;09ac 'Value'
              77f5 0059  ld   $59         ;09ae LDI
              77f6 002d  ld   $2d
              77f7 00cf  ld   $cf         ;09b0 CALL
              77f8 0050  ld   $50         ;09b0 'PrintChar'
              77f9 0059  ld   $59         ;09b2 LDI
              77fa 0000  ld   $00
              77fb fe00  bra  ac          ;+-----------------------------------+
              77fc fcfd  bra  $77fd       ;|                                   |
              77fd 1418  ld   $18,y       ;| Trampoline for page $7700 lookups |
              77fe e006  jmp  y,$06       ;|                                   |
              77ff c218  st   [$18]       ;+-----------------------------------+
              7800 002b  ld   $2b         ;09b4 STW
              7801 0044  ld   $44         ;09b4 'k'
              7802 0021  ld   $21         ;09b6 LDW
              7803 003c  ld   $3c         ;09b6 'Value'
              7804 0035  ld   $35         ;09b8 BCC
              7805 0053  ld   $53         ;09b9 GE
              7806 00c4  ld   $c4
              7807 0011  ld   $11         ;09bb LDWI
              7808 00d0  ld   $d0
              7809 008a  ld   $8a
              780a 0099  ld   $99         ;09be ADDW
              780b 003c  ld   $3c         ;09be 'Value'
              780c 002b  ld   $2b         ;09c0 STW
              780d 003c  ld   $3c         ;09c0 'Value'
              780e 0059  ld   $59         ;09c2 LDI
              780f 0003  ld   $03
              7810 002b  ld   $2b         ;09c4 STW
              7811 0044  ld   $44         ;09c4 'k'
              7812 0011  ld   $11         ;09c6 LDWI
              7813 0010  ld   $10
              7814 0027  ld   $27
              7815 00cf  ld   $cf         ;09c9 CALL
              7816 0074  ld   $74         ;09c9 'PrintDigit'
              7817 0011  ld   $11         ;09cb LDWI
              7818 00e8  ld   $e8
              7819 0003  ld   $03
              781a 00cf  ld   $cf         ;09ce CALL
              781b 0074  ld   $74         ;09ce 'PrintDigit'
              781c 0059  ld   $59         ;09d0 LDI
              781d 0064  ld   $64
              781e 00cf  ld   $cf         ;09d2 CALL
              781f 0074  ld   $74         ;09d2 'PrintDigit'
              7820 0059  ld   $59         ;09d4 LDI
              7821 000a  ld   $0a
              7822 00cf  ld   $cf         ;09d6 CALL
              7823 0074  ld   $74         ;09d6 'PrintDigit'
              7824 0059  ld   $59         ;09d8 LDI
              7825 0030  ld   $30
              7826 0099  ld   $99         ;09da ADDW
              7827 003c  ld   $3c         ;09da 'Value'
              7828 00cf  ld   $cf         ;09dc CALL
              7829 0050  ld   $50         ;09dc 'PrintChar'
              782a 0063  ld   $63         ;09de POP
              782b 00ff  ld   $ff         ;09df RET
              782c 002b  ld   $2b         ;09e0 STW
              782d 0076  ld   $76         ;09e0 'PrintValue'
              782e 00cd  ld   $cd         ;09e2 DEF
              782f 00ea  ld   $ea
              7830 00cf  ld   $cf         ;09e4 CALL
              7831 0056  ld   $56         ;09e4 'Prompt'
              7832 0053  ld   $53         ;09e6 'S'
              7833 0074  ld   $74         ;09e7 't'
              7834 0061  ld   $61         ;09e8 'a'
              7835 0063  ld   $63         ;09e9 'c'
              7836 006b  ld   $6b         ;09ea 'k'
              7837 0000  ld   $00         ;09eb 0
              7838 002b  ld   $2b         ;09ec STW
              7839 0060  ld   $60         ;09ec 'StackError'
              783a 00cd  ld   $cd         ;09ee DEF
              783b 00f7  ld   $f7
              783c 00cf  ld   $cf         ;09f0 CALL
              783d 0056  ld   $56         ;09f0 'Prompt'
              783e 0053  ld   $53         ;09f2 'S'
              783f 0079  ld   $79         ;09f3 'y'
              7840 006e  ld   $6e         ;09f4 'n'
              7841 0074  ld   $74         ;09f5 't'
              7842 0061  ld   $61         ;09f6 'a'
              7843 0078  ld   $78         ;09f7 'x'
              7844 0000  ld   $00         ;09f8 0
              7845 002b  ld   $2b         ;09f9 STW
              7846 004a  ld   $4a         ;09f9 'SyntaxError'
              7847 0093  ld   $93         ;09fb INC
              7848 001b  ld   $1b
              7849 00ff  ld   $ff         ;09fd RET
              784a 000a  ld   $0a         ;| RAM segment address (high byte first)
              784b 00a0  ld   $a0         ;|
              784c 005f  ld   $5f         ;| Length (1..256)
              784d 00cd  ld   $cd         ;0aa0 DEF
              784e 00d2  ld   $d2
              784f 0021  ld   $21         ;0aa2 LDW
              7850 001a  ld   $1a
              7851 002b  ld   $2b         ;0aa4 STW
              7852 004e  ld   $4e         ;0aa4 'tmp'
              7853 0021  ld   $21         ;0aa6 LDW
              7854 0036  ld   $36         ;0aa6 'Active'
              7855 002b  ld   $2b         ;0aa8 STW
              7856 006a  ld   $6a         ;0aa8 'j'
              7857 0021  ld   $21         ;0aaa LDW
              7858 004e  ld   $4e         ;0aaa 'tmp'
              7859 00ad  ld   $ad         ;0aac PEEK
              785a 0093  ld   $93         ;0aad INC
              785b 004e  ld   $4e         ;0aad 'tmp'
              785c 0035  ld   $35         ;0aaf BCC
              785d 003f  ld   $3f         ;0ab0 EQ
              785e 00ce  ld   $ce
              785f 002b  ld   $2b         ;0ab2 STW
              7860 0040  ld   $40         ;0ab2 'i'
              7861 0021  ld   $21         ;0ab4 LDW
              7862 0036  ld   $36         ;0ab4 'Active'
              7863 00ad  ld   $ad         ;0ab6 PEEK
              7864 0088  ld   $88         ;0ab7 ORI
              7865 0020  ld   $20
              7866 00fc  ld   $fc         ;0ab9 XORW
              7867 0040  ld   $40         ;0ab9 'i'
              7868 0035  ld   $35         ;0abb BCC
              7869 0072  ld   $72         ;0abc NE
              786a 00c0  ld   $c0
              786b 0093  ld   $93         ;0abe INC
              786c 0036  ld   $36         ;0abe 'Active'
              786d 0090  ld   $90         ;0ac0 BRA
              786e 00a8  ld   $a8
              786f 0021  ld   $21         ;0ac2 LDW
              7870 006a  ld   $6a         ;0ac2 'j'
              7871 002b  ld   $2b         ;0ac4 STW
              7872 0036  ld   $36         ;0ac4 'Active'
              7873 0021  ld   $21         ;0ac6 LDW
              7874 004e  ld   $4e         ;0ac6 'tmp'
              7875 00ad  ld   $ad         ;0ac8 PEEK
              7876 0093  ld   $93         ;0ac9 INC
              7877 004e  ld   $4e         ;0ac9 'tmp'
              7878 0035  ld   $35         ;0acb BCC
              7879 0072  ld   $72         ;0acc NE
              787a 00c4  ld   $c4
              787b 00cf  ld   $cf         ;0ace CALL
              787c 004e  ld   $4e         ;0ace 'tmp'
              787d 00cf  ld   $cf         ;0ad0 CALL
              787e 0034  ld   $34         ;0ad0 'Spaces'
              787f 00cf  ld   $cf         ;0ad2 CALL
              7880 004e  ld   $4e         ;0ad2 'tmp'
              7881 002b  ld   $2b         ;0ad4 STW
              7882 0038  ld   $38         ;0ad4 'Keyword'
              7883 00cd  ld   $cd         ;0ad6 DEF
              7884 00fa  ld   $fa
              7885 0011  ld   $11         ;0ad8 LDWI
              7886 0000  ld   $00
              7887 0080  ld   $80
              7888 002b  ld   $2b         ;0adb STW
              7889 003c  ld   $3c         ;0adb 'Value'
              788a 00e9  ld   $e9         ;0add LSLW
              788b 00e9  ld   $e9         ;0ade LSLW
              788c 0099  ld   $99         ;0adf ADDW
              788d 003c  ld   $3c         ;0adf 'Value'
              788e 00e9  ld   $e9         ;0ae1 LSLW
              788f 002b  ld   $2b         ;0ae2 STW
              7890 0040  ld   $40         ;0ae2 'i'
              7891 0021  ld   $21         ;0ae4 LDW
              7892 0036  ld   $36         ;0ae4 'Active'
              7893 00ad  ld   $ad         ;0ae6 PEEK
              7894 00e6  ld   $e6         ;0ae7 SUBI
              7895 0030  ld   $30
              7896 0035  ld   $35         ;0ae9 BCC
              7897 0050  ld   $50         ;0aea LT
              7898 00f7  ld   $f7
              7899 00e6  ld   $e6         ;0aec SUBI
              789a 000a  ld   $0a
              789b 0035  ld   $35         ;0aee BCC
              789c 0053  ld   $53         ;0aef GE
              789d 00f7  ld   $f7
              789e 00e3  ld   $e3         ;0af1 ADDI
              789f 000a  ld   $0a
              78a0 0099  ld   $99         ;0af3 ADDW
              78a1 0040  ld   $40         ;0af3 'i'
              78a2 0093  ld   $93         ;0af5 INC
              78a3 0036  ld   $36         ;0af5 'Active'
              78a4 0090  ld   $90         ;0af7 BRA
              78a5 00d9  ld   $d9
              78a6 0021  ld   $21         ;0af9 LDW
              78a7 003c  ld   $3c         ;0af9 'Value'
              78a8 00ff  ld   $ff         ;0afb RET
              78a9 0093  ld   $93         ;0afc INC
              78aa 001b  ld   $1b
              78ab 00ff  ld   $ff         ;0afe RET
              78ac 000b  ld   $0b         ;| RAM segment address (high byte first)
              78ad 00a0  ld   $a0         ;|
              78ae 0060  ld   $60         ;| Length (1..256)
              78af 002b  ld   $2b         ;0ba0 STW
              78b0 0032  ld   $32         ;0ba0 'Number'
              78b1 00cd  ld   $cd         ;0ba2 DEF
              78b2 00d1  ld   $d1
              78b3 0021  ld   $21         ;0ba4 LDW
              78b4 0036  ld   $36         ;0ba4 'Active'
              78b5 00ad  ld   $ad         ;0ba6 PEEK
              78b6 0035  ld   $35         ;0ba7 BCC
              78b7 003f  ld   $3f         ;0ba8 EQ
              78b8 00b3  ld   $b3
              78b9 008c  ld   $8c         ;0baa XORI
              78ba 003a  ld   $3a
              78bb 0035  ld   $35         ;0bac BCC
              78bc 0072  ld   $72         ;0bad NE
              78bd 00b1  ld   $b1
              78be 0093  ld   $93         ;0baf INC
              78bf 0036  ld   $36         ;0baf 'Active'
              78c0 00cf  ld   $cf         ;0bb1 CALL
              78c1 0066  ld   $66         ;0bb1 'Statements'
              78c2 00cf  ld   $cf         ;0bb3 CALL
              78c3 004a  ld   $4a         ;0bb3 'SyntaxError'
              78c4 0021  ld   $21         ;0bb5 LDW
              78c5 0036  ld   $36         ;0bb5 'Active'
              78c6 00cf  ld   $cf         ;0bb7 CALL
              78c7 0070  ld   $70         ;0bb7 'NextBlock'
              78c8 002b  ld   $2b         ;0bb9 STW
              78c9 0036  ld   $36         ;0bb9 'Active'
              78ca 00fc  ld   $fc         ;0bbb XORW
              78cb 0048  ld   $48         ;0bbb 'End'
              78cc 0035  ld   $35         ;0bbd BCC
              78cd 003f  ld   $3f         ;0bbe EQ
              78ce 00ce  ld   $ce
              78cf 0011  ld   $11         ;0bc0 LDWI
              78d0 00c0  ld   $c0
              78d1 001b  ld   $1b
              78d2 00fc  ld   $fc         ;0bc3 XORW
              78d3 0036  ld   $36         ;0bc3 'Active'
              78d4 0035  ld   $35         ;0bc5 BCC
              78d5 003f  ld   $3f         ;0bc6 EQ
              78d6 00ce  ld   $ce
              78d7 0021  ld   $21         ;0bc8 LDW
              78d8 0036  ld   $36         ;0bc8 'Active'
              78d9 00e3  ld   $e3         ;0bca ADDI
              78da 0002  ld   $02
              78db 002b  ld   $2b         ;0bcc STW
              78dc 0036  ld   $36         ;0bcc 'Active'
              78dd 00cf  ld   $cf         ;0bce CALL
              78de 0066  ld   $66         ;0bce 'Statements'
              78df 00cf  ld   $cf         ;0bd0 CALL
              78e0 0056  ld   $56         ;0bd0 'Prompt'
              78e1 0000  ld   $00         ;0bd2 0
              78e2 002b  ld   $2b         ;0bd3 STW
              78e3 0062  ld   $62         ;0bd3 'EndOfLine'
              78e4 00cd  ld   $cd         ;0bd5 DEF
              78e5 00fb  ld   $fb
              78e6 0021  ld   $21         ;0bd7 LDW
              78e7 0000  ld   $00
              78e8 002b  ld   $2b         ;0bd9 STW
              78e9 0040  ld   $40         ;0bd9 'i'
              78ea 0059  ld   $59         ;0bdb LDI
              78eb 0002  ld   $02
              78ec 002b  ld   $2b         ;0bdd STW
              78ed 006a  ld   $6a         ;0bdd 'j'
              78ee 0021  ld   $21         ;0bdf LDW
              78ef 0040  ld   $40         ;0bdf 'i'
              78f0 00e6  ld   $e6         ;0be1 SUBI
              78f1 0036  ld   $36
              78f2 002b  ld   $2b         ;0be3 STW
              78f3 0040  ld   $40         ;0be3 'i'
              78f4 0059  ld   $59         ;0be5 LDI
              78f5 0000  ld   $00
              78f6 00f0  ld   $f0         ;0be7 POKE
              78f7 0040  ld   $40         ;0be7 'i'
              78f8 0093  ld   $93         ;0be9 INC
              78f9 0040  ld   $40         ;0be9 'i'
              78fa 001a  ld   $1a         ;0beb LD
              78fb fe00  bra  ac          ;+-----------------------------------+
              78fc fcfd  bra  $78fd       ;|                                   |
              78fd 1418  ld   $18,y       ;| Trampoline for page $7800 lookups |
              78fe e006  jmp  y,$06       ;|                                   |
              78ff c218  st   [$18]       ;+-----------------------------------+
              7900 0040  ld   $40         ;0beb 'i'
              7901 0035  ld   $35         ;0bed BCC
              7902 0072  ld   $72         ;0bee NE
              7903 00e3  ld   $e3
              7904 0021  ld   $21         ;0bf0 LDW
              7905 006a  ld   $6a         ;0bf0 'j'
              7906 00e6  ld   $e6         ;0bf2 SUBI
              7907 0001  ld   $01
              7908 0035  ld   $35         ;0bf4 BCC
              7909 0072  ld   $72         ;0bf5 NE
              790a 00db  ld   $db
              790b 0011  ld   $11         ;0bf7 LDWI
              790c 00c0  ld   $c0
              790d 001b  ld   $1b
              790e 002b  ld   $2b         ;0bfa STW
              790f 006c  ld   $6c         ;0bfa 'Begin'
              7910 00ff  ld   $ff         ;0bfc RET
              7911 0093  ld   $93         ;0bfd INC
              7912 001b  ld   $1b
              7913 00ff  ld   $ff         ;0bff RET
              7914 000c  ld   $0c         ;| RAM segment address (high byte first)
              7915 00a0  ld   $a0         ;|
              7916 0060  ld   $60         ;| Length (1..256)
              7917 002b  ld   $2b         ;0ca0 STW
              7918 0078  ld   $78         ;0ca0 'Clear'
              7919 00cd  ld   $cd         ;0ca2 DEF
              791a 00ed  ld   $ed
              791b 0075  ld   $75         ;0ca4 PUSH
              791c 001a  ld   $1a         ;0ca5 LD
              791d 001c  ld   $1c
              791e 00e6  ld   $e6         ;0ca7 SUBI
              791f 008d  ld   $8d
              7920 0035  ld   $35         ;0ca9 BCC
              7921 0053  ld   $53         ;0caa GE
              7922 00ac  ld   $ac
              7923 00cf  ld   $cf         ;0cac CALL
              7924 0060  ld   $60         ;0cac 'StackError'
              7925 00cf  ld   $cf         ;0cae CALL
              7926 0038  ld   $38         ;0cae 'Keyword'
              7927 002d  ld   $2d         ;0cb0 '-'
              7928 0000  ld   $00         ;0cb1 0
              7929 0035  ld   $35         ;0cb2 BCC
              792a 003f  ld   $3f         ;0cb3 EQ
              792b 00bb  ld   $bb
              792c 00cf  ld   $cf         ;0cb5 CALL
              792d 007a  ld   $7a         ;0cb5 'Term'
              792e 0059  ld   $59         ;0cb7 LDI
              792f 0000  ld   $00
              7930 00b8  ld   $b8         ;0cb9 SUBW
              7931 003c  ld   $3c         ;0cb9 'Value'
              7932 0090  ld   $90         ;0cbb BRA
              7933 00c1  ld   $c1
              7934 00cf  ld   $cf         ;0cbd CALL
              7935 0038  ld   $38         ;0cbd 'Keyword'
              7936 002b  ld   $2b         ;0cbf '+'
              7937 0000  ld   $00         ;0cc0 0
              7938 00cf  ld   $cf         ;0cc1 CALL
              7939 007a  ld   $7a         ;0cc1 'Term'
              793a 0075  ld   $75         ;0cc3 PUSH
              793b 00ec  ld   $ec         ;0cc4 STLW
              793c 0000  ld   $00
              793d 00cf  ld   $cf         ;0cc6 CALL
              793e 0038  ld   $38         ;0cc6 'Keyword'
              793f 002b  ld   $2b         ;0cc8 '+'
              7940 0000  ld   $00         ;0cc9 0
              7941 0035  ld   $35         ;0cca BCC
              7942 003f  ld   $3f         ;0ccb EQ
              7943 00d5  ld   $d5
              7944 00cf  ld   $cf         ;0ccd CALL
              7945 007a  ld   $7a         ;0ccd 'Term'
              7946 00ee  ld   $ee         ;0ccf LDLW
              7947 0000  ld   $00
              7948 0099  ld   $99         ;0cd1 ADDW
              7949 003c  ld   $3c         ;0cd1 'Value'
              794a 00ec  ld   $ec         ;0cd3 STLW
              794b 0000  ld   $00
              794c 0090  ld   $90         ;0cd5 BRA
              794d 00c4  ld   $c4
              794e 00cf  ld   $cf         ;0cd7 CALL
              794f 0038  ld   $38         ;0cd7 'Keyword'
              7950 002d  ld   $2d         ;0cd9 '-'
              7951 0000  ld   $00         ;0cda 0
              7952 0035  ld   $35         ;0cdb BCC
              7953 003f  ld   $3f         ;0cdc EQ
              7954 00e6  ld   $e6
              7955 00cf  ld   $cf         ;0cde CALL
              7956 007a  ld   $7a         ;0cde 'Term'
              7957 00ee  ld   $ee         ;0ce0 LDLW
              7958 0000  ld   $00
              7959 00b8  ld   $b8         ;0ce2 SUBW
              795a 003c  ld   $3c         ;0ce2 'Value'
              795b 00ec  ld   $ec         ;0ce4 STLW
              795c 0000  ld   $00
              795d 0090  ld   $90         ;0ce6 BRA
              795e 00c4  ld   $c4
              795f 00ee  ld   $ee         ;0ce8 LDLW
              7960 0000  ld   $00
              7961 002b  ld   $2b         ;0cea STW
              7962 003c  ld   $3c         ;0cea 'Value'
              7963 0063  ld   $63         ;0cec POP
              7964 0063  ld   $63         ;0ced POP
              7965 00ff  ld   $ff         ;0cee RET
              7966 002b  ld   $2b         ;0cef STW
              7967 003a  ld   $3a         ;0cef 'Expression'
              7968 00cd  ld   $cd         ;0cf1 DEF
              7969 00f9  ld   $f9
              796a 00cf  ld   $cf         ;0cf3 CALL
              796b 0056  ld   $56         ;0cf3 'Prompt'
              796c 0056  ld   $56         ;0cf5 'V'
              796d 0061  ld   $61         ;0cf6 'a'
              796e 006c  ld   $6c         ;0cf7 'l'
              796f 0075  ld   $75         ;0cf8 'u'
              7970 0065  ld   $65         ;0cf9 'e'
              7971 0000  ld   $00         ;0cfa 0
              7972 002b  ld   $2b         ;0cfb STW
              7973 0046  ld   $46         ;0cfb 'ValueError'
              7974 0093  ld   $93         ;0cfd INC
              7975 001b  ld   $1b
              7976 00ff  ld   $ff         ;0cff RET
              7977 000d  ld   $0d         ;| RAM segment address (high byte first)
              7978 00a0  ld   $a0         ;|
              7979 0060  ld   $60         ;| Length (1..256)
              797a 00cd  ld   $cd         ;0da0 DEF
              797b 00e4  ld   $e4
              797c 0075  ld   $75         ;0da2 PUSH
              797d 00cf  ld   $cf         ;0da3 CALL
              797e 004c  ld   $4c         ;0da3 'Factor'
              797f 0075  ld   $75         ;0da5 PUSH
              7980 0021  ld   $21         ;0da6 LDW
              7981 003c  ld   $3c         ;0da6 'Value'
              7982 00ec  ld   $ec         ;0da8 STLW
              7983 0000  ld   $00
              7984 00cf  ld   $cf         ;0daa CALL
              7985 0038  ld   $38         ;0daa 'Keyword'
              7986 002a  ld   $2a         ;0dac '*'
              7987 0000  ld   $00         ;0dad 0
              7988 0035  ld   $35         ;0dae BCC
              7989 003f  ld   $3f         ;0daf EQ
              798a 00b9  ld   $b9
              798b 00cf  ld   $cf         ;0db1 CALL
              798c 004c  ld   $4c         ;0db1 'Factor'
              798d 00ee  ld   $ee         ;0db3 LDLW
              798e 0000  ld   $00
              798f 00cf  ld   $cf         ;0db5 CALL
              7990 007c  ld   $7c         ;0db5 'Multiply'
              7991 00ec  ld   $ec         ;0db7 STLW
              7992 0000  ld   $00
              7993 0090  ld   $90         ;0db9 BRA
              7994 00a8  ld   $a8
              7995 00cf  ld   $cf         ;0dbb CALL
              7996 0038  ld   $38         ;0dbb 'Keyword'
              7997 002f  ld   $2f         ;0dbd '/'
              7998 0000  ld   $00         ;0dbe 0
              7999 0035  ld   $35         ;0dbf BCC
              799a 003f  ld   $3f         ;0dc0 EQ
              799b 00ca  ld   $ca
              799c 00cf  ld   $cf         ;0dc2 CALL
              799d 004c  ld   $4c         ;0dc2 'Factor'
              799e 00ee  ld   $ee         ;0dc4 LDLW
              799f 0000  ld   $00
              79a0 00cf  ld   $cf         ;0dc6 CALL
              79a1 003e  ld   $3e         ;0dc6 'Divide'
              79a2 00ec  ld   $ec         ;0dc8 STLW
              79a3 0000  ld   $00
              79a4 0090  ld   $90         ;0dca BRA
              79a5 00a8  ld   $a8
              79a6 00cf  ld   $cf         ;0dcc CALL
              79a7 0038  ld   $38         ;0dcc 'Keyword'
              79a8 0025  ld   $25         ;0dce '%'
              79a9 0000  ld   $00         ;0dcf 0
              79aa 0035  ld   $35         ;0dd0 BCC
              79ab 003f  ld   $3f         ;0dd1 EQ
              79ac 00dd  ld   $dd
              79ad 00cf  ld   $cf         ;0dd3 CALL
              79ae 004c  ld   $4c         ;0dd3 'Factor'
              79af 00ee  ld   $ee         ;0dd5 LDLW
              79b0 0000  ld   $00
              79b1 00cf  ld   $cf         ;0dd7 CALL
              79b2 003e  ld   $3e         ;0dd7 'Divide'
              79b3 0021  ld   $21         ;0dd9 LDW
              79b4 0040  ld   $40         ;0dd9 'i'
              79b5 00ec  ld   $ec         ;0ddb STLW
              79b6 0000  ld   $00
              79b7 0090  ld   $90         ;0ddd BRA
              79b8 00a8  ld   $a8
              79b9 00ee  ld   $ee         ;0ddf LDLW
              79ba 0000  ld   $00
              79bb 002b  ld   $2b         ;0de1 STW
              79bc 003c  ld   $3c         ;0de1 'Value'
              79bd 0063  ld   $63         ;0de3 POP
              79be 0063  ld   $63         ;0de4 POP
              79bf 00ff  ld   $ff         ;0de5 RET
              79c0 002b  ld   $2b         ;0de6 STW
              79c1 007a  ld   $7a         ;0de6 'Term'
              79c2 0093  ld   $93         ;0de8 INC
              79c3 001b  ld   $1b
              79c4 00ff  ld   $ff         ;0dea RET
              79c5 00cf  ld   $cf         ;0deb CALL
              79c6 0038  ld   $38         ;0deb 'Keyword'
              79c7 0072  ld   $72         ;0ded 'r'
              79c8 0075  ld   $75         ;0dee 'u'
              79c9 006e  ld   $6e         ;0def 'n'
              79ca 0000  ld   $00         ;0df0 0
              79cb 0035  ld   $35         ;0df1 BCC
              79cc 003f  ld   $3f         ;0df2 EQ
              79cd 00f9  ld   $f9
              79ce 00cf  ld   $cf         ;0df4 CALL
              79cf 0078  ld   $78         ;0df4 'Clear'
              79d0 00f6  ld   $f6         ;0df6 DEEK
              79d1 002b  ld   $2b         ;0df7 STW
              79d2 003c  ld   $3c         ;0df7 'Value'
              79d3 00cf  ld   $cf         ;0df9 CALL
              79d4 005e  ld   $5e         ;0df9 'GotoValue'
              79d5 0011  ld   $11         ;0dfb LDWI
              79d6 00a0  ld   $a0
              79d7 0016  ld   $16
              79d8 00cf  ld   $cf         ;0dfe CALL
              79d9 0018  ld   $18         ;0dfe vAC
              79da 000e  ld   $0e         ;| RAM segment address (high byte first)
              79db 00a0  ld   $a0         ;|
              79dc 0060  ld   $60         ;| Length (1..256)
              79dd 00cd  ld   $cd         ;0ea0 DEF
              79de 00fb  ld   $fb
              79df 002b  ld   $2b         ;0ea2 STW
              79e0 006a  ld   $6a         ;0ea2 'j'
              79e1 00fc  ld   $fc         ;0ea4 XORW
              79e2 003c  ld   $3c         ;0ea4 'Value'
              79e3 002b  ld   $2b         ;0ea6 STW
              79e4 0044  ld   $44         ;0ea6 'k'
              79e5 0021  ld   $21         ;0ea8 LDW
              79e6 006a  ld   $6a         ;0ea8 'j'
              79e7 0035  ld   $35         ;0eaa BCC
              79e8 0053  ld   $53         ;0eab GE
              79e9 00b1  ld   $b1
              79ea 0059  ld   $59         ;0ead LDI
              79eb 0000  ld   $00
              79ec 00b8  ld   $b8         ;0eaf SUBW
              79ed 006a  ld   $6a         ;0eaf 'j'
              79ee 002b  ld   $2b         ;0eb1 STW
              79ef 006a  ld   $6a         ;0eb1 'j'
              79f0 0021  ld   $21         ;0eb3 LDW
              79f1 003c  ld   $3c         ;0eb3 'Value'
              79f2 0035  ld   $35         ;0eb5 BCC
              79f3 0053  ld   $53         ;0eb6 GE
              79f4 00bc  ld   $bc
              79f5 0059  ld   $59         ;0eb8 LDI
              79f6 0000  ld   $00
              79f7 00b8  ld   $b8         ;0eba SUBW
              79f8 003c  ld   $3c         ;0eba 'Value'
              79f9 002b  ld   $2b         ;0ebc STW
              79fa 003c  ld   $3c         ;0ebc 'Value'
              79fb fe00  bra  ac          ;+-----------------------------------+
              79fc fcfd  bra  $79fd       ;|                                   |
              79fd 1418  ld   $18,y       ;| Trampoline for page $7900 lookups |
              79fe e006  jmp  y,$06       ;|                                   |
              79ff c218  st   [$18]       ;+-----------------------------------+
              7a00 0035  ld   $35         ;0ebe BCC
              7a01 0072  ld   $72         ;0ebf NE
              7a02 00c1  ld   $c1
              7a03 00cf  ld   $cf         ;0ec1 CALL
              7a04 0046  ld   $46         ;0ec1 'ValueError'
              7a05 0059  ld   $59         ;0ec3 LDI
              7a06 0000  ld   $00
              7a07 002b  ld   $2b         ;0ec5 STW
              7a08 0040  ld   $40         ;0ec5 'i'
              7a09 002b  ld   $2b         ;0ec7 STW
              7a0a 004e  ld   $4e         ;0ec7 'tmp'
              7a0b 0021  ld   $21         ;0ec9 LDW
              7a0c 0040  ld   $40         ;0ec9 'i'
              7a0d 0099  ld   $99         ;0ecb ADDW
              7a0e 0040  ld   $40         ;0ecb 'i'
              7a0f 002b  ld   $2b         ;0ecd STW
              7a10 0040  ld   $40         ;0ecd 'i'
              7a11 0021  ld   $21         ;0ecf LDW
              7a12 006a  ld   $6a         ;0ecf 'j'
              7a13 0035  ld   $35         ;0ed1 BCC
              7a14 0053  ld   $53         ;0ed2 GE
              7a15 00d4  ld   $d4
              7a16 0093  ld   $93         ;0ed4 INC
              7a17 0040  ld   $40         ;0ed4 'i'
              7a18 0021  ld   $21         ;0ed6 LDW
              7a19 006a  ld   $6a         ;0ed6 'j'
              7a1a 0099  ld   $99         ;0ed8 ADDW
              7a1b 006a  ld   $6a         ;0ed8 'j'
              7a1c 002b  ld   $2b         ;0eda STW
              7a1d 006a  ld   $6a         ;0eda 'j'
              7a1e 0021  ld   $21         ;0edc LDW
              7a1f 0040  ld   $40         ;0edc 'i'
              7a20 00b8  ld   $b8         ;0ede SUBW
              7a21 003c  ld   $3c         ;0ede 'Value'
              7a22 0035  ld   $35         ;0ee0 BCC
              7a23 0050  ld   $50         ;0ee1 LT
              7a24 00e5  ld   $e5
              7a25 002b  ld   $2b         ;0ee3 STW
              7a26 0040  ld   $40         ;0ee3 'i'
              7a27 0093  ld   $93         ;0ee5 INC
              7a28 006a  ld   $6a         ;0ee5 'j'
              7a29 0021  ld   $21         ;0ee7 LDW
              7a2a 004e  ld   $4e         ;0ee7 'tmp'
              7a2b 00e3  ld   $e3         ;0ee9 ADDI
              7a2c 0001  ld   $01
              7a2d 0082  ld   $82         ;0eeb ANDI
              7a2e 000f  ld   $0f
              7a2f 0035  ld   $35         ;0eed BCC
              7a30 0072  ld   $72         ;0eee NE
              7a31 00c5  ld   $c5
              7a32 0021  ld   $21         ;0ef0 LDW
              7a33 0044  ld   $44         ;0ef0 'k'
              7a34 0035  ld   $35         ;0ef2 BCC
              7a35 0053  ld   $53         ;0ef3 GE
              7a36 00f8  ld   $f8
              7a37 0059  ld   $59         ;0ef5 LDI
              7a38 0000  ld   $00
              7a39 00b8  ld   $b8         ;0ef7 SUBW
              7a3a 006a  ld   $6a         ;0ef7 'j'
              7a3b 00ff  ld   $ff         ;0ef9 RET
              7a3c 0021  ld   $21         ;0efa LDW
              7a3d 006a  ld   $6a         ;0efa 'j'
              7a3e 00ff  ld   $ff         ;0efc RET
              7a3f 0093  ld   $93         ;0efd INC
              7a40 001b  ld   $1b
              7a41 00ff  ld   $ff         ;0eff RET
              7a42 000f  ld   $0f         ;| RAM segment address (high byte first)
              7a43 00a0  ld   $a0         ;|
              7a44 005e  ld   $5e         ;| Length (1..256)
              7a45 002b  ld   $2b         ;0fa0 STW
              7a46 003e  ld   $3e         ;0fa0 'Divide'
              7a47 00cd  ld   $cd         ;0fa2 DEF
              7a48 00c7  ld   $c7
              7a49 002b  ld   $2b         ;0fa4 STW
              7a4a 004e  ld   $4e         ;0fa4 'tmp'
              7a4b 0059  ld   $59         ;0fa6 LDI
              7a4c 0000  ld   $00
              7a4d 002b  ld   $2b         ;0fa8 STW
              7a4e 006a  ld   $6a         ;0fa8 'j'
              7a4f 0059  ld   $59         ;0faa LDI
              7a50 0001  ld   $01
              7a51 002b  ld   $2b         ;0fac STW
              7a52 0040  ld   $40         ;0fac 'i'
              7a53 00f8  ld   $f8         ;0fae ANDW
              7a54 004e  ld   $4e         ;0fae 'tmp'
              7a55 0035  ld   $35         ;0fb0 BCC
              7a56 003f  ld   $3f         ;0fb1 EQ
              7a57 00b7  ld   $b7
              7a58 0021  ld   $21         ;0fb3 LDW
              7a59 006a  ld   $6a         ;0fb3 'j'
              7a5a 0099  ld   $99         ;0fb5 ADDW
              7a5b 003c  ld   $3c         ;0fb5 'Value'
              7a5c 002b  ld   $2b         ;0fb7 STW
              7a5d 006a  ld   $6a         ;0fb7 'j'
              7a5e 0021  ld   $21         ;0fb9 LDW
              7a5f 003c  ld   $3c         ;0fb9 'Value'
              7a60 0099  ld   $99         ;0fbb ADDW
              7a61 003c  ld   $3c         ;0fbb 'Value'
              7a62 002b  ld   $2b         ;0fbd STW
              7a63 003c  ld   $3c         ;0fbd 'Value'
              7a64 0021  ld   $21         ;0fbf LDW
              7a65 0040  ld   $40         ;0fbf 'i'
              7a66 0099  ld   $99         ;0fc1 ADDW
              7a67 0040  ld   $40         ;0fc1 'i'
              7a68 0035  ld   $35         ;0fc3 BCC
              7a69 0072  ld   $72         ;0fc4 NE
              7a6a 00aa  ld   $aa
              7a6b 0021  ld   $21         ;0fc6 LDW
              7a6c 006a  ld   $6a         ;0fc6 'j'
              7a6d 00ff  ld   $ff         ;0fc8 RET
              7a6e 002b  ld   $2b         ;0fc9 STW
              7a6f 007c  ld   $7c         ;0fc9 'Multiply'
              7a70 00cd  ld   $cd         ;0fcb DEF
              7a71 00e6  ld   $e6
              7a72 0021  ld   $21         ;0fcd LDW
              7a73 0000  ld   $00
              7a74 002b  ld   $2b         ;0fcf STW
              7a75 0040  ld   $40         ;0fcf 'i'
              7a76 0021  ld   $21         ;0fd1 LDW
              7a77 0036  ld   $36         ;0fd1 'Active'
              7a78 00ad  ld   $ad         ;0fd3 PEEK
              7a79 0082  ld   $82         ;0fd4 ANDI
              7a7a 005f  ld   $5f
              7a7b 00e6  ld   $e6         ;0fd6 SUBI
              7a7c 0040  ld   $40
              7a7d 0035  ld   $35         ;0fd8 BCC
              7a7e 0050  ld   $50         ;0fd9 LT
              7a7f 00e4  ld   $e4
              7a80 00e6  ld   $e6         ;0fdb SUBI
              7a81 001b  ld   $1b
              7a82 0035  ld   $35         ;0fdd BCC
              7a83 0053  ld   $53         ;0fde GE
              7a84 00e4  ld   $e4
              7a85 0093  ld   $93         ;0fe0 INC
              7a86 0036  ld   $36         ;0fe0 'Active'
              7a87 00e9  ld   $e9         ;0fe2 LSLW
              7a88 0099  ld   $99         ;0fe3 ADDW
              7a89 0040  ld   $40         ;0fe3 'i'
              7a8a 00ff  ld   $ff         ;0fe5 RET
              7a8b 00cf  ld   $cf         ;0fe6 CALL
              7a8c 004a  ld   $4a         ;0fe6 'SyntaxError'
              7a8d 002b  ld   $2b         ;0fe8 STW
              7a8e 0042  ld   $42         ;0fe8 'Variable'
              7a8f 00cd  ld   $cd         ;0fea DEF
              7a90 00f7  ld   $f7
              7a91 0021  ld   $21         ;0fec LDW
              7a92 0036  ld   $36         ;0fec 'Active'
              7a93 00ad  ld   $ad         ;0fee PEEK
              7a94 008c  ld   $8c         ;0fef XORI
              7a95 0020  ld   $20
              7a96 0035  ld   $35         ;0ff1 BCC
              7a97 0072  ld   $72         ;0ff2 NE
              7a98 00f6  ld   $f6
              7a99 0093  ld   $93         ;0ff4 INC
              7a9a 0036  ld   $36         ;0ff4 'Active'
              7a9b 0090  ld   $90         ;0ff6 BRA
              7a9c 00ea  ld   $ea
              7a9d 00ff  ld   $ff         ;0ff8 RET
              7a9e 002b  ld   $2b         ;0ff9 STW
              7a9f 0034  ld   $34         ;0ff9 'Spaces'
              7aa0 0093  ld   $93         ;0ffb INC
              7aa1 001b  ld   $1b
              7aa2 00ff  ld   $ff         ;0ffd RET
              7aa3 0010  ld   $10         ;| RAM segment address (high byte first)
              7aa4 00a0  ld   $a0         ;|
              7aa5 0060  ld   $60         ;| Length (1..256)
              7aa6 00cd  ld   $cd         ;10a0 DEF
              7aa7 00fb  ld   $fb
              7aa8 0075  ld   $75         ;10a2 PUSH
              7aa9 0021  ld   $21         ;10a3 LDW
              7aaa 006c  ld   $6c         ;10a3 'Begin'
              7aab 002b  ld   $2b         ;10a5 STW
              7aac 006a  ld   $6a         ;10a5 'j'
              7aad 00fc  ld   $fc         ;10a7 XORW
              7aae 0048  ld   $48         ;10a7 'End'
              7aaf 0035  ld   $35         ;10a9 BCC
              7ab0 003f  ld   $3f         ;10aa EQ
              7ab1 00c9  ld   $c9
              7ab2 00cf  ld   $cf         ;10ac CALL
              7ab3 0058  ld   $58         ;10ac 'TestBreak'
              7ab4 0021  ld   $21         ;10ae LDW
              7ab5 006a  ld   $6a         ;10ae 'j'
              7ab6 00f6  ld   $f6         ;10b0 DEEK
              7ab7 002b  ld   $2b         ;10b1 STW
              7ab8 003c  ld   $3c         ;10b1 'Value'
              7ab9 00cf  ld   $cf         ;10b3 CALL
              7aba 0076  ld   $76         ;10b3 'PrintValue'
              7abb 0093  ld   $93         ;10b5 INC
              7abc 006a  ld   $6a         ;10b5 'j'
              7abd 0093  ld   $93         ;10b7 INC
              7abe 006a  ld   $6a         ;10b7 'j'
              7abf 0021  ld   $21         ;10b9 LDW
              7ac0 006a  ld   $6a         ;10b9 'j'
              7ac1 00ad  ld   $ad         ;10bb PEEK
              7ac2 0035  ld   $35         ;10bc BCC
              7ac3 003f  ld   $3f         ;10bd EQ
              7ac4 00c1  ld   $c1
              7ac5 00cf  ld   $cf         ;10bf CALL
              7ac6 0050  ld   $50         ;10bf 'PrintChar'
              7ac7 0090  ld   $90         ;10c1 BRA
              7ac8 00b5  ld   $b5
              7ac9 00cf  ld   $cf         ;10c3 CALL
              7aca 005a  ld   $5a         ;10c3 'Newline'
              7acb 0021  ld   $21         ;10c5 LDW
              7acc 006a  ld   $6a         ;10c5 'j'
              7acd 00cf  ld   $cf         ;10c7 CALL
              7ace 0070  ld   $70         ;10c7 'NextBlock'
              7acf 0090  ld   $90         ;10c9 BRA
              7ad0 00a3  ld   $a3
              7ad1 002b  ld   $2b         ;10cb STW
              7ad2 003c  ld   $3c         ;10cb 'Value'
              7ad3 0021  ld   $21         ;10cd LDW
              7ad4 0000  ld   $00
              7ad5 00e6  ld   $e6         ;10cf SUBI
              7ad6 0080  ld   $80
              7ad7 00e6  ld   $e6         ;10d1 SUBI
              7ad8 00c0  ld   $c0
              7ad9 00fc  ld   $fc         ;10d3 XORW
              7ada 006a  ld   $6a         ;10d3 'j'
              7adb 0035  ld   $35         ;10d5 BCC
              7adc 003f  ld   $3f         ;10d6 EQ
              7add 00e2  ld   $e2
              7ade 0021  ld   $21         ;10d8 LDW
              7adf 006a  ld   $6a         ;10d8 'j'
              7ae0 00cf  ld   $cf         ;10da CALL
              7ae1 0070  ld   $70         ;10da 'NextBlock'
              7ae2 002b  ld   $2b         ;10dc STW
              7ae3 006a  ld   $6a         ;10dc 'j'
              7ae4 0021  ld   $21         ;10de LDW
              7ae5 003c  ld   $3c         ;10de 'Value'
              7ae6 00e3  ld   $e3         ;10e0 ADDI
              7ae7 0020  ld   $20
              7ae8 0090  ld   $90         ;10e2 BRA
              7ae9 00c9  ld   $c9
              7aea 0021  ld   $21         ;10e4 LDW
              7aeb 0050  ld   $50         ;10e4 'PrintChar'
              7aec 00fc  ld   $fc         ;10e6 XORW
              7aed 0054  ld   $54         ;10e6 'PrintCharScreen'
              7aee 0035  ld   $35         ;10e8 BCC
              7aef 0072  ld   $72         ;10e9 NE
              7af0 00f9  ld   $f9
              7af1 00cf  ld   $cf         ;10eb CALL
              7af2 0076  ld   $76         ;10eb 'PrintValue'
              7af3 00cf  ld   $cf         ;10ed CALL
              7af4 0052  ld   $52         ;10ed 'PrintS'
              7af5 0020  ld   $20         ;10ef ' '
              7af6 0062  ld   $62         ;10f0 'b'
              7af7 0079  ld   $79         ;10f1 'y'
              7af8 0074  ld   $74         ;10f2 't'
              7af9 0065  ld   $65         ;10f3 'e'
              7afa 0073  ld   $73         ;10f4 's'
              7afb fe00  bra  ac          ;+-----------------------------------+
              7afc fcfd  bra  $7afd       ;|                                   |
              7afd 1418  ld   $18,y       ;| Trampoline for page $7a00 lookups |
              7afe e006  jmp  y,$06       ;|                                   |
              7aff c218  st   [$18]       ;+-----------------------------------+
              7b00 0020  ld   $20         ;10f5 ' '
              7b01 0066  ld   $66         ;10f6 'f'
              7b02 0072  ld   $72         ;10f7 'r'
              7b03 0065  ld   $65         ;10f8 'e'
              7b04 0065  ld   $65         ;10f9 'e'
              7b05 0000  ld   $00         ;10fa 0
              7b06 0063  ld   $63         ;10fb POP
              7b07 00ff  ld   $ff         ;10fc RET
              7b08 0093  ld   $93         ;10fd INC
              7b09 001b  ld   $1b
              7b0a 00ff  ld   $ff         ;10ff RET
              7b0b 0011  ld   $11         ;| RAM segment address (high byte first)
              7b0c 00a0  ld   $a0         ;|
              7b0d 0060  ld   $60         ;| Length (1..256)
              7b0e 002b  ld   $2b         ;11a0 STW
              7b0f 007e  ld   $7e         ;11a0 'List'
              7b10 00cd  ld   $cd         ;11a2 DEF
              7b11 00c1  ld   $c1
              7b12 0075  ld   $75         ;11a4 PUSH
              7b13 002b  ld   $2b         ;11a5 STW
              7b14 0040  ld   $40         ;11a5 'i'
              7b15 0021  ld   $21         ;11a7 LDW
              7b16 003c  ld   $3c         ;11a7 'Value'
              7b17 00b8  ld   $b8         ;11a9 SUBW
              7b18 0040  ld   $40         ;11a9 'i'
              7b19 0035  ld   $35         ;11ab BCC
              7b1a 0050  ld   $50         ;11ac LT
              7b1b 00b2  ld   $b2
              7b1c 002b  ld   $2b         ;11ae STW
              7b1d 003c  ld   $3c         ;11ae 'Value'
              7b1e 0093  ld   $93         ;11b0 INC
              7b1f 0044  ld   $44         ;11b0 'k'
              7b20 0090  ld   $90         ;11b2 BRA
              7b21 00a7  ld   $a7
              7b22 0021  ld   $21         ;11b4 LDW
              7b23 0044  ld   $44         ;11b4 'k'
              7b24 0035  ld   $35         ;11b6 BCC
              7b25 003f  ld   $3f         ;11b7 EQ
              7b26 00bf  ld   $bf
              7b27 0088  ld   $88         ;11b9 ORI
              7b28 0030  ld   $30
              7b29 00cf  ld   $cf         ;11bb CALL
              7b2a 0050  ld   $50         ;11bb 'PrintChar'
              7b2b 0059  ld   $59         ;11bd LDI
              7b2c 0030  ld   $30
              7b2d 002b  ld   $2b         ;11bf STW
              7b2e 0044  ld   $44         ;11bf 'k'
              7b2f 0063  ld   $63         ;11c1 POP
              7b30 00ff  ld   $ff         ;11c2 RET
              7b31 002b  ld   $2b         ;11c3 STW
              7b32 0074  ld   $74         ;11c3 'PrintDigit'
              7b33 00cd  ld   $cd         ;11c5 DEF
              7b34 00f1  ld   $f1
              7b35 0075  ld   $75         ;11c7 PUSH
              7b36 0059  ld   $59         ;11c8 LDI
              7b37 0000  ld   $00
              7b38 002b  ld   $2b         ;11ca STW
              7b39 0044  ld   $44         ;11ca 'k'
              7b3a 00cf  ld   $cf         ;11cc CALL
              7b3b 0038  ld   $38         ;11cc 'Keyword'
              7b3c 003c  ld   $3c         ;11ce '<'
              7b3d 0000  ld   $00         ;11cf 0
              7b3e 0035  ld   $35         ;11d0 BCC
              7b3f 003f  ld   $3f         ;11d1 EQ
              7b40 00d3  ld   $d3
              7b41 0093  ld   $93         ;11d3 INC
              7b42 0044  ld   $44         ;11d3 'k'
              7b43 00cf  ld   $cf         ;11d5 CALL
              7b44 0038  ld   $38         ;11d5 'Keyword'
              7b45 003e  ld   $3e         ;11d7 '>'
              7b46 0000  ld   $00         ;11d8 0
              7b47 0035  ld   $35         ;11d9 BCC
              7b48 003f  ld   $3f         ;11da EQ
              7b49 00e0  ld   $e0
              7b4a 0021  ld   $21         ;11dc LDW
              7b4b 0044  ld   $44         ;11dc 'k'
              7b4c 00e3  ld   $e3         ;11de ADDI
              7b4d 0004  ld   $04
              7b4e 002b  ld   $2b         ;11e0 STW
              7b4f 0044  ld   $44         ;11e0 'k'
              7b50 00cf  ld   $cf         ;11e2 CALL
              7b51 0038  ld   $38         ;11e2 'Keyword'
              7b52 003d  ld   $3d         ;11e4 '='
              7b53 0000  ld   $00         ;11e5 0
              7b54 0035  ld   $35         ;11e6 BCC
              7b55 003f  ld   $3f         ;11e7 EQ
              7b56 00ed  ld   $ed
              7b57 0021  ld   $21         ;11e9 LDW
              7b58 0044  ld   $44         ;11e9 'k'
              7b59 00e3  ld   $e3         ;11eb ADDI
              7b5a 0002  ld   $02
              7b5b 002b  ld   $2b         ;11ed STW
              7b5c 0044  ld   $44         ;11ed 'k'
              7b5d 0021  ld   $21         ;11ef LDW
              7b5e 0044  ld   $44         ;11ef 'k'
              7b5f 0063  ld   $63         ;11f1 POP
              7b60 00ff  ld   $ff         ;11f2 RET
              7b61 002b  ld   $2b         ;11f3 STW
              7b62 0064  ld   $64         ;11f3 'RelOp'
              7b63 0011  ld   $11         ;11f5 LDWI
              7b64 00a0  ld   $a0
              7b65 001b  ld   $1b
              7b66 00f6  ld   $f6         ;11f8 DEEK
              7b67 002b  ld   $2b         ;11f9 STW
              7b68 0048  ld   $48         ;11f9 'End'
              7b69 00e3  ld   $e3         ;11fb ADDI
              7b6a 0002  ld   $02
              7b6b 0093  ld   $93         ;11fd INC
              7b6c 001b  ld   $1b
              7b6d 00ff  ld   $ff         ;11ff RET
              7b6e 0012  ld   $12         ;| RAM segment address (high byte first)
              7b6f 00a0  ld   $a0         ;|
              7b70 005d  ld   $5d         ;| Length (1..256)
              7b71 002b  ld   $2b         ;12a0 STW
              7b72 0036  ld   $36         ;12a0 'Active'
              7b73 00cd  ld   $cd         ;12a2 DEF
              7b74 00f7  ld   $f7
              7b75 0021  ld   $21         ;12a4 LDW
              7b76 001a  ld   $1a
              7b77 002b  ld   $2b         ;12a6 STW
              7b78 004e  ld   $4e         ;12a6 'tmp'
              7b79 001a  ld   $1a         ;12a8 LD
              7b7a 0030  ld   $30         ;12a8 'Pos'
              7b7b 00e6  ld   $e6         ;12aa SUBI
              7b7c 0002  ld   $02
              7b7d 0035  ld   $35         ;12ac BCC
              7b7e 0056  ld   $56         ;12ad LE
              7b7f 00af  ld   $af
              7b80 00cf  ld   $cf         ;12af CALL
              7b81 005a  ld   $5a         ;12af 'Newline'
              7b82 0059  ld   $59         ;12b1 LDI
              7b83 0000  ld   $00
              7b84 005e  ld   $5e         ;12b3 ST
              7b85 001c  ld   $1c
              7b86 0021  ld   $21         ;12b5 LDW
              7b87 004e  ld   $4e         ;12b5 'tmp'
              7b88 00ad  ld   $ad         ;12b7 PEEK
              7b89 0035  ld   $35         ;12b8 BCC
              7b8a 003f  ld   $3f         ;12b9 EQ
              7b8b 00e3  ld   $e3
              7b8c 0059  ld   $59         ;12bb LDI
              7b8d 003f  ld   $3f
              7b8e 00cf  ld   $cf         ;12bd CALL
              7b8f 0050  ld   $50         ;12bd 'PrintChar'
              7b90 0021  ld   $21         ;12bf LDW
              7b91 004e  ld   $4e         ;12bf 'tmp'
              7b92 00ad  ld   $ad         ;12c1 PEEK
              7b93 0093  ld   $93         ;12c2 INC
              7b94 004e  ld   $4e         ;12c2 'tmp'
              7b95 0035  ld   $35         ;12c4 BCC
              7b96 0072  ld   $72         ;12c5 NE
              7b97 00bb  ld   $bb
              7b98 00cf  ld   $cf         ;12c7 CALL
              7b99 0052  ld   $52         ;12c7 'PrintS'
              7b9a 0020  ld   $20         ;12c9 ' '
              7b9b 0065  ld   $65         ;12ca 'e'
              7b9c 0072  ld   $72         ;12cb 'r'
              7b9d 0072  ld   $72         ;12cc 'r'
              7b9e 006f  ld   $6f         ;12cd 'o'
              7b9f 0072  ld   $72         ;12ce 'r'
              7ba0 0000  ld   $00         ;12cf 0
              7ba1 00e6  ld   $e6         ;12d0 SUBI
              7ba2 0020  ld   $20
              7ba3 00f8  ld   $f8         ;12d2 ANDW
              7ba4 0036  ld   $36         ;12d2 'Active'
              7ba5 00f6  ld   $f6         ;12d4 DEEK
              7ba6 0035  ld   $35         ;12d5 BCC
              7ba7 003f  ld   $3f         ;12d6 EQ
              7ba8 00e1  ld   $e1
              7ba9 002b  ld   $2b         ;12d8 STW
              7baa 003c  ld   $3c         ;12d8 'Value'
              7bab 00cf  ld   $cf         ;12da CALL
              7bac 0052  ld   $52         ;12da 'PrintS'
              7bad 0020  ld   $20         ;12dc ' '
              7bae 0069  ld   $69         ;12dd 'i'
              7baf 006e  ld   $6e         ;12de 'n'
              7bb0 0020  ld   $20         ;12df ' '
              7bb1 0000  ld   $00         ;12e0 0
              7bb2 00cf  ld   $cf         ;12e1 CALL
              7bb3 0076  ld   $76         ;12e1 'PrintValue'
              7bb4 00cf  ld   $cf         ;12e3 CALL
              7bb5 005a  ld   $5a         ;12e3 'Newline'
              7bb6 00cf  ld   $cf         ;12e5 CALL
              7bb7 0052  ld   $52         ;12e5 'PrintS'
              7bb8 004f  ld   $4f         ;12e7 'O'
              7bb9 006b  ld   $6b         ;12e8 'k'
              7bba 0000  ld   $00         ;12e9 0
              7bbb 00cf  ld   $cf         ;12ea CALL
              7bbc 005a  ld   $5a         ;12ea 'Newline'
              7bbd 0059  ld   $59         ;12ec LDI
              7bbe 0000  ld   $00
              7bbf 00cf  ld   $cf         ;12ee CALL
              7bc0 005c  ld   $5c         ;12ee 'GetLine'
              7bc1 0035  ld   $35         ;12f0 BCC
              7bc2 003f  ld   $3f         ;12f1 EQ
              7bc3 00ea  ld   $ea
              7bc4 00cf  ld   $cf         ;12f3 CALL
              7bc5 0072  ld   $72         ;12f3 'Insert'
              7bc6 0035  ld   $35         ;12f5 BCC
              7bc7 004d  ld   $4d         ;12f6 GT
              7bc8 00ea  ld   $ea
              7bc9 0011  ld   $11         ;12f8 785
              7bca 002b  ld   $2b         ;12f9 STW
              7bcb 0056  ld   $56         ;12f9 'Prompt'
              7bcc 00cf  ld   $cf         ;12fb CALL
              7bcd 0066  ld   $66         ;12fb 'Statements'
              7bce 0013  ld   $13         ;| RAM segment address (high byte first)
              7bcf 00a0  ld   $a0         ;|
              7bd0 0059  ld   $59         ;| Length (1..256)
              7bd1 0021  ld   $21         ;13a0 LDW
              7bd2 0036  ld   $36         ;13a0 'Active'
              7bd3 00ad  ld   $ad         ;13a2 PEEK
              7bd4 0035  ld   $35         ;13a3 BCC
              7bd5 003f  ld   $3f         ;13a4 EQ
              7bd6 00f3  ld   $f3
              7bd7 008c  ld   $8c         ;13a6 XORI
              7bd8 003a  ld   $3a
              7bd9 0035  ld   $35         ;13a8 BCC
              7bda 003f  ld   $3f         ;13a9 EQ
              7bdb 00f3  ld   $f3
              7bdc 0021  ld   $21         ;13ab LDW
              7bdd 0036  ld   $36         ;13ab 'Active'
              7bde 00ad  ld   $ad         ;13ad PEEK
              7bdf 0035  ld   $35         ;13ae BCC
              7be0 003f  ld   $3f         ;13af EQ
              7be1 00f1  ld   $f1
              7be2 008c  ld   $8c         ;13b1 XORI
              7be3 003a  ld   $3a
              7be4 0035  ld   $35         ;13b3 BCC
              7be5 003f  ld   $3f         ;13b4 EQ
              7be6 00f1  ld   $f1
              7be7 008c  ld   $8c         ;13b6 XORI
              7be8 0018  ld   $18
              7be9 0035  ld   $35         ;13b8 BCC
              7bea 0072  ld   $72         ;13b9 NE
              7beb 00ce  ld   $ce
              7bec 0093  ld   $93         ;13bb INC
              7bed 0036  ld   $36         ;13bb 'Active'
              7bee 00cf  ld   $cf         ;13bd CALL
              7bef 0038  ld   $38         ;13bd 'Keyword'
              7bf0 0022  ld   $22         ;13bf 34
              7bf1 0000  ld   $00         ;13c0 0
              7bf2 0035  ld   $35         ;13c1 BCC
              7bf3 0072  ld   $72         ;13c2 NE
              7bf4 00cc  ld   $cc
              7bf5 0021  ld   $21         ;13c4 LDW
              7bf6 0036  ld   $36         ;13c4 'Active'
              7bf7 00ad  ld   $ad         ;13c6 PEEK
              7bf8 0035  ld   $35         ;13c7 BCC
              7bf9 003f  ld   $3f         ;13c8 EQ
              7bfa 00cc  ld   $cc
              7bfb fe00  bra  ac          ;+-----------------------------------+
              7bfc fcfd  bra  $7bfd       ;|                                   |
              7bfd 1418  ld   $18,y       ;| Trampoline for page $7b00 lookups |
              7bfe e006  jmp  y,$06       ;|                                   |
              7bff c218  st   [$18]       ;+-----------------------------------+
              7c00 00cf  ld   $cf         ;13ca CALL
              7c01 0050  ld   $50         ;13ca 'PrintChar'
              7c02 0090  ld   $90         ;13cc BRA
              7c03 00b9  ld   $b9
              7c04 0090  ld   $90         ;13ce BRA
              7c05 00d2  ld   $d2
              7c06 00cf  ld   $cf         ;13d0 CALL
              7c07 003a  ld   $3a         ;13d0 'Expression'
              7c08 00cf  ld   $cf         ;13d2 CALL
              7c09 0076  ld   $76         ;13d2 'PrintValue'
              7c0a 00cf  ld   $cf         ;13d4 CALL
              7c0b 0038  ld   $38         ;13d4 'Keyword'
              7c0c 002c  ld   $2c         ;13d6 44
              7c0d 0000  ld   $00         ;13d7 0
              7c0e 0035  ld   $35         ;13d8 BCC
              7c0f 003f  ld   $3f         ;13d9 EQ
              7c10 00e8  ld   $e8
              7c11 0059  ld   $59         ;13db LDI
              7c12 0020  ld   $20
              7c13 00cf  ld   $cf         ;13dd CALL
              7c14 0050  ld   $50         ;13dd 'PrintChar'
              7c15 001a  ld   $1a         ;13df LD
              7c16 0030  ld   $30         ;13df 'Pos'
              7c17 00e6  ld   $e6         ;13e1 SUBI
              7c18 0002  ld   $02
              7c19 0082  ld   $82         ;13e3 ANDI
              7c1a 0007  ld   $07
              7c1b 0035  ld   $35         ;13e5 BCC
              7c1c 0072  ld   $72         ;13e6 NE
              7c1d 00d9  ld   $d9
              7c1e 0090  ld   $90         ;13e8 BRA
              7c1f 00a9  ld   $a9
              7c20 00cf  ld   $cf         ;13ea CALL
              7c21 0038  ld   $38         ;13ea 'Keyword'
              7c22 003b  ld   $3b         ;13ec 59
              7c23 0000  ld   $00         ;13ed 0
              7c24 0035  ld   $35         ;13ee BCC
              7c25 0072  ld   $72         ;13ef NE
              7c26 00a9  ld   $a9
              7c27 00cf  ld   $cf         ;13f1 CALL
              7c28 005a  ld   $5a         ;13f1 'Newline'
              7c29 0090  ld   $90         ;13f3 BRA
              7c2a 00f5  ld   $f5
              7c2b 00cf  ld   $cf         ;13f5 CALL
              7c2c 005a  ld   $5a         ;13f5 'Newline'
              7c2d 00cf  ld   $cf         ;13f7 CALL
              7c2e 0062  ld   $62         ;13f7 'EndOfLine'
              7c2f 0014  ld   $14         ;| RAM segment address (high byte first)
              7c30 00a0  ld   $a0         ;|
              7c31 005f  ld   $5f         ;| Length (1..256)
              7c32 00cf  ld   $cf         ;14a0 CALL
              7c33 0038  ld   $38         ;14a0 'Keyword'
              7c34 003f  ld   $3f         ;14a2 '?'
              7c35 0000  ld   $00         ;14a3 0
              7c36 0035  ld   $35         ;14a4 BCC
              7c37 0072  ld   $72         ;14a5 NE
              7c38 00ad  ld   $ad
              7c39 00cf  ld   $cf         ;14a7 CALL
              7c3a 0038  ld   $38         ;14a7 'Keyword'
              7c3b 0070  ld   $70         ;14a9 'p'
              7c3c 0072  ld   $72         ;14aa 'r'
              7c3d 0069  ld   $69         ;14ab 'i'
              7c3e 006e  ld   $6e         ;14ac 'n'
              7c3f 0074  ld   $74         ;14ad 't'
              7c40 0000  ld   $00         ;14ae 0
              7c41 0035  ld   $35         ;14af BCC
              7c42 003f  ld   $3f         ;14b0 EQ
              7c43 00b5  ld   $b5
              7c44 0011  ld   $11         ;14b2 LDWI
              7c45 00a0  ld   $a0
              7c46 0013  ld   $13
              7c47 00cf  ld   $cf         ;14b5 CALL
              7c48 0018  ld   $18         ;14b5 vAC
              7c49 00cf  ld   $cf         ;14b7 CALL
              7c4a 0038  ld   $38         ;14b7 'Keyword'
              7c4b 0069  ld   $69         ;14b9 'i'
              7c4c 006e  ld   $6e         ;14ba 'n'
              7c4d 0070  ld   $70         ;14bb 'p'
              7c4e 0075  ld   $75         ;14bc 'u'
              7c4f 0074  ld   $74         ;14bd 't'
              7c50 0000  ld   $00         ;14be 0
              7c51 0035  ld   $35         ;14bf BCC
              7c52 003f  ld   $3f         ;14c0 EQ
              7c53 00f8  ld   $f8
              7c54 0021  ld   $21         ;14c2 LDW
              7c55 0036  ld   $36         ;14c2 'Active'
              7c56 00ad  ld   $ad         ;14c4 PEEK
              7c57 00cf  ld   $cf         ;14c5 CALL
              7c58 0050  ld   $50         ;14c5 'PrintChar'
              7c59 00cf  ld   $cf         ;14c7 CALL
              7c5a 0042  ld   $42         ;14c7 'Variable'
              7c5b 002b  ld   $2b         ;14c9 STW
              7c5c 0068  ld   $68         ;14c9 'Address'
              7c5d 00cf  ld   $cf         ;14cb CALL
              7c5e 0034  ld   $34         ;14cb 'Spaces'
              7c5f 00df  ld   $df         ;14cd ALLOC
              7c60 00fc  ld   $fc
              7c61 0021  ld   $21         ;14cf LDW
              7c62 0036  ld   $36         ;14cf 'Active'
              7c63 00ec  ld   $ec         ;14d1 STLW
              7c64 0002  ld   $02
              7c65 0088  ld   $88         ;14d3 ORI
              7c66 001f  ld   $1f
              7c67 00e6  ld   $e6         ;14d5 SUBI
              7c68 001f  ld   $1f
              7c69 00f6  ld   $f6         ;14d7 DEEK
              7c6a 00ec  ld   $ec         ;14d8 STLW
              7c6b 0000  ld   $00
              7c6c 0059  ld   $59         ;14da LDI
              7c6d 003f  ld   $3f
              7c6e 00cf  ld   $cf         ;14dc CALL
              7c6f 0050  ld   $50         ;14dc 'PrintChar'
              7c70 00cf  ld   $cf         ;14de CALL
              7c71 005a  ld   $5a         ;14de 'Newline'
              7c72 00ee  ld   $ee         ;14e0 LDLW
              7c73 0000  ld   $00
              7c74 00cf  ld   $cf         ;14e2 CALL
              7c75 005c  ld   $5c         ;14e2 'GetLine'
              7c76 0035  ld   $35         ;14e4 BCC
              7c77 003f  ld   $3f         ;14e5 EQ
              7c78 00d8  ld   $d8
              7c79 00cf  ld   $cf         ;14e7 CALL
              7c7a 003a  ld   $3a         ;14e7 'Expression'
              7c7b 00f3  ld   $f3         ;14e9 DOKE
              7c7c 0068  ld   $68         ;14e9 'Address'
              7c7d 00ee  ld   $ee         ;14eb LDLW
              7c7e 0002  ld   $02
              7c7f 002b  ld   $2b         ;14ed STW
              7c80 0036  ld   $36         ;14ed 'Active'
              7c81 00df  ld   $df         ;14ef ALLOC
              7c82 0004  ld   $04
              7c83 00cf  ld   $cf         ;14f1 CALL
              7c84 0038  ld   $38         ;14f1 'Keyword'
              7c85 002c  ld   $2c         ;14f3 ','
              7c86 0000  ld   $00         ;14f4 0
              7c87 0035  ld   $35         ;14f5 BCC
              7c88 0072  ld   $72         ;14f6 NE
              7c89 00c0  ld   $c0
              7c8a 00cf  ld   $cf         ;14f8 CALL
              7c8b 0062  ld   $62         ;14f8 'EndOfLine'
              7c8c 0011  ld   $11         ;14fa LDWI
              7c8d 00a0  ld   $a0
              7c8e 0015  ld   $15
              7c8f 00cf  ld   $cf         ;14fd CALL
              7c90 0018  ld   $18         ;14fd vAC
              7c91 0015  ld   $15         ;| RAM segment address (high byte first)
              7c92 00a0  ld   $a0         ;|
              7c93 0058  ld   $58         ;| Length (1..256)
              7c94 00cf  ld   $cf         ;15a0 CALL
              7c95 0038  ld   $38         ;15a0 'Keyword'
              7c96 0063  ld   $63         ;15a2 'c'
              7c97 006c  ld   $6c         ;15a3 'l'
              7c98 0073  ld   $73         ;15a4 's'
              7c99 0000  ld   $00         ;15a5 0
              7c9a 0035  ld   $35         ;15a6 BCC
              7c9b 003f  ld   $3f         ;15a7 EQ
              7c9c 00cb  ld   $cb
              7c9d 0011  ld   $11         ;15a9 LDWI
              7c9e 0000  ld   $00
              7c9f 0001  ld   $01
              7ca0 00ad  ld   $ad         ;15ac PEEK
              7ca1 005e  ld   $5e         ;15ad ST
              7ca2 0031  ld   $31         ;15ad 'Pos'+1
              7ca3 0059  ld   $59         ;15af LDI
              7ca4 000e  ld   $0e
              7ca5 002b  ld   $2b         ;15b1 STW
              7ca6 006a  ld   $6a         ;15b1 'j'
              7ca7 00cf  ld   $cf         ;15b3 CALL
              7ca8 005a  ld   $5a         ;15b3 'Newline'
              7ca9 0021  ld   $21         ;15b5 LDW
              7caa 006a  ld   $6a         ;15b5 'j'
              7cab 00e6  ld   $e6         ;15b7 SUBI
              7cac 0001  ld   $01
              7cad 0035  ld   $35         ;15b9 BCC
              7cae 004d  ld   $4d         ;15ba GT
              7caf 00af  ld   $af
              7cb0 00cf  ld   $cf         ;15bc CALL
              7cb1 005a  ld   $5a         ;15bc 'Newline'
              7cb2 0011  ld   $11         ;15be LDWI
              7cb3 0000  ld   $00
              7cb4 0001  ld   $01
              7cb5 00ad  ld   $ad         ;15c1 PEEK
              7cb6 008c  ld   $8c         ;15c2 XORI
              7cb7 0008  ld   $08
              7cb8 0035  ld   $35         ;15c4 BCC
              7cb9 0072  ld   $72         ;15c5 NE
              7cba 00ba  ld   $ba
              7cbb 0059  ld   $59         ;15c7 LDI
              7cbc 0008  ld   $08
              7cbd 005e  ld   $5e         ;15c9 ST
              7cbe 0031  ld   $31         ;15c9 'Pos'+1
              7cbf 00cf  ld   $cf         ;15cb CALL
              7cc0 0062  ld   $62         ;15cb 'EndOfLine'
              7cc1 00cf  ld   $cf         ;15cd CALL
              7cc2 0038  ld   $38         ;15cd 'Keyword'
              7cc3 006c  ld   $6c         ;15cf 'l'
              7cc4 0069  ld   $69         ;15d0 'i'
              7cc5 0073  ld   $73         ;15d1 's'
              7cc6 0074  ld   $74         ;15d2 't'
              7cc7 0000  ld   $00         ;15d3 0
              7cc8 0035  ld   $35         ;15d4 BCC
              7cc9 003f  ld   $3f         ;15d5 EQ
              7cca 00d9  ld   $d9
              7ccb 00cf  ld   $cf         ;15d7 CALL
              7ccc 007e  ld   $7e         ;15d7 'List'
              7ccd 00cf  ld   $cf         ;15d9 CALL
              7cce 0062  ld   $62         ;15d9 'EndOfLine'
              7ccf 00cf  ld   $cf         ;15db CALL
              7cd0 0038  ld   $38         ;15db 'Keyword'
              7cd1 0073  ld   $73         ;15dd 's'
              7cd2 0061  ld   $61         ;15de 'a'
              7cd3 0076  ld   $76         ;15df 'v'
              7cd4 0065  ld   $65         ;15e0 'e'
              7cd5 0000  ld   $00         ;15e1 0
              7cd6 0035  ld   $35         ;15e2 BCC
              7cd7 003f  ld   $3f         ;15e3 EQ
              7cd8 00f1  ld   $f1
              7cd9 001a  ld   $1a         ;15e5 LD
              7cda 0021  ld   $21
              7cdb 00e6  ld   $e6         ;15e7 SUBI
              7cdc 0028  ld   $28
              7cdd 0035  ld   $35         ;15e9 BCC
              7cde 0053  ld   $53         ;15ea GE
              7cdf 00ec  ld   $ec
              7ce0 00cf  ld   $cf         ;15ec CALL
              7ce1 0046  ld   $46         ;15ec 'ValueError'
              7ce2 0011  ld   $11         ;15ee LDWI
              7ce3 00a0  ld   $a0
              7ce4 0017  ld   $17
              7ce5 00cf  ld   $cf         ;15f1 CALL
              7ce6 0018  ld   $18         ;15f1 vAC
              7ce7 0011  ld   $11         ;15f3 LDWI
              7ce8 00eb  ld   $eb
              7ce9 000d  ld   $0d
              7cea 00cf  ld   $cf         ;15f6 CALL
              7ceb 0018  ld   $18         ;15f6 vAC
              7cec 0016  ld   $16         ;| RAM segment address (high byte first)
              7ced 00a0  ld   $a0         ;|
              7cee 0060  ld   $60         ;| Length (1..256)
              7cef 00cf  ld   $cf         ;16a0 CALL
              7cf0 0038  ld   $38         ;16a0 'Keyword'
              7cf1 006e  ld   $6e         ;16a2 'n'
              7cf2 0065  ld   $65         ;16a3 'e'
              7cf3 0077  ld   $77         ;16a4 'w'
              7cf4 0000  ld   $00         ;16a5 0
              7cf5 0035  ld   $35         ;16a6 BCC
              7cf6 003f  ld   $3f         ;16a7 EQ
              7cf7 00b0  ld   $b0
              7cf8 00cf  ld   $cf         ;16a9 CALL
              7cf9 0078  ld   $78         ;16a9 'Clear'
              7cfa 002b  ld   $2b         ;16ab STW
              7cfb fe00  bra  ac          ;+-----------------------------------+
              7cfc fcfd  bra  $7cfd       ;|                                   |
              7cfd 1418  ld   $18,y       ;| Trampoline for page $7c00 lookups |
              7cfe e006  jmp  y,$06       ;|                                   |
              7cff c218  st   [$18]       ;+-----------------------------------+
              7d00 0048  ld   $48         ;16ab 'End'
              7d01 00cf  ld   $cf         ;16ad CALL
              7d02 007e  ld   $7e         ;16ad 'List'
              7d03 00cf  ld   $cf         ;16af CALL
              7d04 0056  ld   $56         ;16af 'Prompt'
              7d05 0000  ld   $00         ;16b1 0
              7d06 00cf  ld   $cf         ;16b2 CALL
              7d07 0038  ld   $38         ;16b2 'Keyword'
              7d08 006c  ld   $6c         ;16b4 'l'
              7d09 0065  ld   $65         ;16b5 'e'
              7d0a 0074  ld   $74         ;16b6 't'
              7d0b 0000  ld   $00         ;16b7 0
              7d0c 00cf  ld   $cf         ;16b8 CALL
              7d0d 0042  ld   $42         ;16b8 'Variable'
              7d0e 002b  ld   $2b         ;16ba STW
              7d0f 0068  ld   $68         ;16ba 'Address'
              7d10 00cf  ld   $cf         ;16bc CALL
              7d11 0034  ld   $34         ;16bc 'Spaces'
              7d12 00cf  ld   $cf         ;16be CALL
              7d13 0038  ld   $38         ;16be 'Keyword'
              7d14 0028  ld   $28         ;16c0 40
              7d15 0000  ld   $00         ;16c1 0
              7d16 0035  ld   $35         ;16c2 BCC
              7d17 003f  ld   $3f         ;16c3 EQ
              7d18 00ef  ld   $ef
              7d19 00cf  ld   $cf         ;16c5 CALL
              7d1a 003a  ld   $3a         ;16c5 'Expression'
              7d1b 0035  ld   $35         ;16c7 BCC
              7d1c 0053  ld   $53         ;16c8 GE
              7d1d 00ca  ld   $ca
              7d1e 00cf  ld   $cf         ;16ca CALL
              7d1f 0046  ld   $46         ;16ca 'ValueError'
              7d20 001a  ld   $1a         ;16cc LD
              7d21 0069  ld   $69         ;16cc 'Address'+1
              7d22 00b8  ld   $b8         ;16ce SUBW
              7d23 003c  ld   $3c         ;16ce 'Value'
              7d24 00e6  ld   $e6         ;16d0 SUBI
              7d25 0002  ld   $02
              7d26 005e  ld   $5e         ;16d2 ST
              7d27 0069  ld   $69         ;16d2 'Address'+1
              7d28 0021  ld   $21         ;16d4 LDW
              7d29 0048  ld   $48         ;16d4 'End'
              7d2a 00fc  ld   $fc         ;16d6 XORW
              7d2b 0068  ld   $68         ;16d6 'Address'
              7d2c 0035  ld   $35         ;16d8 BCC
              7d2d 0053  ld   $53         ;16d9 GE
              7d2e 00dd  ld   $dd
              7d2f 0021  ld   $21         ;16db LDW
              7d30 0048  ld   $48         ;16db 'End'
              7d31 0090  ld   $90         ;16dd BRA
              7d32 00e1  ld   $e1
              7d33 0021  ld   $21         ;16df LDW
              7d34 0068  ld   $68         ;16df 'Address'
              7d35 00b8  ld   $b8         ;16e1 SUBW
              7d36 0048  ld   $48         ;16e1 'End'
              7d37 0035  ld   $35         ;16e3 BCC
              7d38 0053  ld   $53         ;16e4 GE
              7d39 00e6  ld   $e6
              7d3a 00cf  ld   $cf         ;16e6 CALL
              7d3b 0046  ld   $46         ;16e6 'ValueError'
              7d3c 00cf  ld   $cf         ;16e8 CALL
              7d3d 0038  ld   $38         ;16e8 'Keyword'
              7d3e 0029  ld   $29         ;16ea 41
              7d3f 0000  ld   $00         ;16eb 0
              7d40 0035  ld   $35         ;16ec BCC
              7d41 0072  ld   $72         ;16ed NE
              7d42 00ef  ld   $ef
              7d43 00cf  ld   $cf         ;16ef CALL
              7d44 004a  ld   $4a         ;16ef 'SyntaxError'
              7d45 00cf  ld   $cf         ;16f1 CALL
              7d46 0038  ld   $38         ;16f1 'Keyword'
              7d47 003d  ld   $3d         ;16f3 '='
              7d48 0000  ld   $00         ;16f4 0
              7d49 0035  ld   $35         ;16f5 BCC
              7d4a 0072  ld   $72         ;16f6 NE
              7d4b 00f8  ld   $f8
              7d4c 00cf  ld   $cf         ;16f8 CALL
              7d4d 004a  ld   $4a         ;16f8 'SyntaxError'
              7d4e 00cf  ld   $cf         ;16fa CALL
              7d4f 003a  ld   $3a         ;16fa 'Expression'
              7d50 00f3  ld   $f3         ;16fc DOKE
              7d51 0068  ld   $68         ;16fc 'Address'
              7d52 00cf  ld   $cf         ;16fe CALL
              7d53 0062  ld   $62         ;16fe 'EndOfLine'
              7d54 0017  ld   $17         ;| RAM segment address (high byte first)
              7d55 00a0  ld   $a0         ;|
              7d56 005f  ld   $5f         ;| Length (1..256)
              7d57 0021  ld   $21         ;17a0 LDW
              7d58 0000  ld   $00
              7d59 005e  ld   $5e         ;17a2 ST
              7d5a 0027  ld   $27
              7d5b 00e6  ld   $e6         ;17a4 SUBI
              7d5c 0060  ld   $60
              7d5d 002b  ld   $2b         ;17a6 STW
              7d5e 0068  ld   $68         ;17a6 'Address'
              7d5f 00cd  ld   $cd         ;17a8 DEF
              7d60 00e8  ld   $e8
              7d61 0075  ld   $75         ;17aa PUSH
              7d62 002b  ld   $2b         ;17ab STW
              7d63 0044  ld   $44         ;17ab 'k'
              7d64 001a  ld   $1a         ;17ad LD
              7d65 0027  ld   $27
              7d66 00e3  ld   $e3         ;17af ADDI
              7d67 0008  ld   $08
              7d68 005e  ld   $5e         ;17b1 ST
              7d69 0027  ld   $27
              7d6a 001a  ld   $1a         ;17b3 LD
              7d6b 0030  ld   $30         ;17b3 'Pos'
              7d6c 00e6  ld   $e6         ;17b5 SUBI
              7d6d 0006  ld   $06
              7d6e 0035  ld   $35         ;17b7 BCC
              7d6f 0053  ld   $53         ;17b8 GE
              7d70 00de  ld   $de
              7d71 0059  ld   $59         ;17ba LDI
              7d72 000a  ld   $0a
              7d73 00f0  ld   $f0         ;17bc POKE
              7d74 0068  ld   $68         ;17bc 'Address'
              7d75 0021  ld   $21         ;17be LDW
              7d76 0068  ld   $68         ;17be 'Address'
              7d77 0088  ld   $88         ;17c0 ORI
              7d78 001f  ld   $1f
              7d79 008c  ld   $8c         ;17c2 XORI
              7d7a 001f  ld   $1f
              7d7b 002b  ld   $2b         ;17c4 STW
              7d7c 0068  ld   $68         ;17c4 'Address'
              7d7d 002b  ld   $2b         ;17c6 STW
              7d7e 0024  ld   $24
              7d7f 0059  ld   $59         ;17c8 LDI
              7d80 0001  ld   $01
              7d81 005e  ld   $5e         ;17ca ST
              7d82 0026  ld   $26
              7d83 0011  ld   $11         ;17cc LDWI
              7d84 0006  ld   $06
              7d85 000b  ld   $0b
              7d86 002b  ld   $2b         ;17cf STW
              7d87 0022  ld   $22         ;17cf '_sysFn'
              7d88 00b4  ld   $b4         ;17d1 SYS
              7d89 00e7  ld   $e7
              7d8a 0035  ld   $35         ;17d3 BCC
              7d8b 003f  ld   $3f         ;17d4 EQ
              7d8c 00da  ld   $da
              7d8d 0059  ld   $59         ;17d6 LDI
              7d8e 0003  ld   $03
              7d8f 005e  ld   $5e         ;17d8 ST
              7d90 000f  ld   $0f
              7d91 00cf  ld   $cf         ;17da CALL
              7d92 0058  ld   $58         ;17da 'TestBreak'
              7d93 0059  ld   $59         ;17dc LDI
              7d94 0008  ld   $08
              7d95 005e  ld   $5e         ;17de ST
              7d96 0027  ld   $27
              7d97 0021  ld   $21         ;17e0 LDW
              7d98 0044  ld   $44         ;17e0 'k'
              7d99 00f0  ld   $f0         ;17e2 POKE
              7d9a 0068  ld   $68         ;17e2 'Address'
              7d9b 0093  ld   $93         ;17e4 INC
              7d9c 0068  ld   $68         ;17e4 'Address'
              7d9d 00cf  ld   $cf         ;17e6 CALL
              7d9e 0054  ld   $54         ;17e6 'PrintCharScreen'
              7d9f 0063  ld   $63         ;17e8 POP
              7da0 00ff  ld   $ff         ;17e9 RET
              7da1 002b  ld   $2b         ;17ea STW
              7da2 0050  ld   $50         ;17ea 'PrintChar'
              7da3 001a  ld   $1a         ;17ec LD
              7da4 000f  ld   $0f
              7da5 008c  ld   $8c         ;17ee XORI
              7da6 00ff  ld   $ff
              7da7 0035  ld   $35         ;17f0 BCC
              7da8 0072  ld   $72         ;17f1 NE
              7da9 00ea  ld   $ea
              7daa 00cf  ld   $cf         ;17f3 CALL
              7dab 007e  ld   $7e         ;17f3 'List'
              7dac 0059  ld   $59         ;17f5 LDI
              7dad 0020  ld   $20
              7dae 00cf  ld   $cf         ;17f7 CALL
              7daf 0050  ld   $50         ;17f7 'PrintChar'
              7db0 0021  ld   $21         ;17f9 LDW
              7db1 0054  ld   $54         ;17f9 'PrintCharScreen'
              7db2 002b  ld   $2b         ;17fb STW
              7db3 0050  ld   $50         ;17fb 'PrintChar'
              7db4 00cf  ld   $cf         ;17fd CALL
              7db5 0062  ld   $62         ;17fd 'EndOfLine'
              7db6 0018  ld   $18         ;| RAM segment address (high byte first)
              7db7 00a0  ld   $a0         ;|
              7db8 0060  ld   $60         ;| Length (1..256)
              7db9 0011  ld   $11         ;18a0 LDWI
              7dba 00e1  ld   $e1
              7dbb 0004  ld   $04
              7dbc 002b  ld   $2b         ;18a3 STW
              7dbd 0022  ld   $22         ;18a3 '_sysFn'
              7dbe 0059  ld   $59         ;18a5 LDI
              7dbf 0000  ld   $00
              7dc0 005e  ld   $5e         ;18a7 ST
              7dc1 0030  ld   $30         ;18a7 'Pos'
              7dc2 005e  ld   $5e         ;18a9 ST
              7dc3 0026  ld   $26
              7dc4 001a  ld   $1a         ;18ab LD
              7dc5 0031  ld   $31         ;18ab 'Pos'+1
              7dc6 00e3  ld   $e3         ;18ad ADDI
              7dc7 000f  ld   $0f
              7dc8 0082  ld   $82         ;18af ANDI
              7dc9 0078  ld   $78
              7dca 0035  ld   $35         ;18b1 BCC
              7dcb 0072  ld   $72         ;18b2 NE
              7dcc 00b4  ld   $b4
              7dcd 0059  ld   $59         ;18b4 LDI
              7dce 0008  ld   $08
              7dcf 005e  ld   $5e         ;18b6 ST
              7dd0 0031  ld   $31         ;18b6 'Pos'+1
              7dd1 0021  ld   $21         ;18b8 LDW
              7dd2 002a  ld   $2a
              7dd3 002b  ld   $2b         ;18ba STW
              7dd4 0024  ld   $24
              7dd5 0021  ld   $21         ;18bc LDW
              7dd6 0030  ld   $30         ;18bc 'Pos'
              7dd7 002b  ld   $2b         ;18be STW
              7dd8 0028  ld   $28
              7dd9 00b4  ld   $b4         ;18c0 SYS
              7dda 00cc  ld   $cc
              7ddb 0093  ld   $93         ;18c2 INC
              7ddc 0028  ld   $28
              7ddd 00b4  ld   $b4         ;18c4 SYS
              7dde 00cc  ld   $cc
              7ddf 0093  ld   $93         ;18c6 INC
              7de0 0028  ld   $28
              7de1 001a  ld   $1a         ;18c8 LD
              7de2 0028  ld   $28
              7de3 008c  ld   $8c         ;18ca XORI
              7de4 00a0  ld   $a0
              7de5 0035  ld   $35         ;18cc BCC
              7de6 0072  ld   $72         ;18cd NE
              7de7 00be  ld   $be
              7de8 0011  ld   $11         ;18cf LDWI
              7de9 0000  ld   $00
              7dea 0001  ld   $01
              7deb 002b  ld   $2b         ;18d2 STW
              7dec 0040  ld   $40         ;18d2 'i'
              7ded 0088  ld   $88         ;18d4 ORI
              7dee 00ff  ld   $ff
              7def 00f6  ld   $f6         ;18d6 DEEK
              7df0 00b8  ld   $b8         ;18d7 SUBW
              7df1 0030  ld   $30         ;18d7 'Pos'
              7df2 001a  ld   $1a         ;18d9 LD
              7df3 0019  ld   $19
              7df4 0035  ld   $35         ;18db BCC
              7df5 0072  ld   $72         ;18dc NE
              7df6 00f9  ld   $f9
              7df7 0021  ld   $21         ;18de LDW
              7df8 0040  ld   $40         ;18de 'i'
              7df9 00e3  ld   $e3         ;18e0 ADDI
              7dfa 0010  ld   $10
              7dfb fe00  bra  ac          ;+-----------------------------------+
              7dfc fcfd  bra  $7dfd       ;|                                   |
              7dfd 1418  ld   $18,y       ;| Trampoline for page $7d00 lookups |
              7dfe e006  jmp  y,$06       ;|                                   |
              7dff c218  st   [$18]       ;+-----------------------------------+
              7e00 002b  ld   $2b         ;18e2 STW
              7e01 0024  ld   $24         ;18e2 '_sysArgs0'
              7e02 00ad  ld   $ad         ;18e4 PEEK
              7e03 005e  ld   $5e         ;18e5 ST
              7e04 0026  ld   $26
              7e05 0021  ld   $21         ;18e7 LDW
              7e06 0040  ld   $40         ;18e7 'i'
              7e07 00ad  ld   $ad         ;18e9 PEEK
              7e08 00f0  ld   $f0         ;18ea POKE
              7e09 0024  ld   $24         ;18ea '_sysArgs0'
              7e0a 001a  ld   $1a         ;18ec LD
              7e0b 0026  ld   $26
              7e0c 00f0  ld   $f0         ;18ee POKE
              7e0d 0040  ld   $40         ;18ee 'i'
              7e0e 0093  ld   $93         ;18f0 INC
              7e0f 0040  ld   $40         ;18f0 'i'
              7e10 0093  ld   $93         ;18f2 INC
              7e11 0040  ld   $40         ;18f2 'i'
              7e12 001a  ld   $1a         ;18f4 LD
              7e13 0040  ld   $40         ;18f4 'i'
              7e14 008c  ld   $8c         ;18f6 XORI
              7e15 00e0  ld   $e0
              7e16 0035  ld   $35         ;18f8 BCC
              7e17 0072  ld   $72         ;18f9 NE
              7e18 00dc  ld   $dc
              7e19 0093  ld   $93         ;18fb INC
              7e1a 0030  ld   $30         ;18fb 'Pos'
              7e1b 0093  ld   $93         ;18fd INC
              7e1c 0030  ld   $30         ;18fd 'Pos'
              7e1d 00ff  ld   $ff         ;18ff RET
              7e1e 0019  ld   $19         ;| RAM segment address (high byte first)
              7e1f 00a0  ld   $a0         ;|
              7e20 0060  ld   $60         ;| Length (1..256)
              7e21 0059  ld   $59         ;19a0 LDI
              7e22 0001  ld   $01
              7e23 002b  ld   $2b         ;19a2 STW
              7e24 0024  ld   $24
              7e25 0011  ld   $11         ;19a4 LDWI
              7e26 0000  ld   $00
              7e27 0001  ld   $01
              7e28 002b  ld   $2b         ;19a7 STW
              7e29 0026  ld   $26
              7e2a 00cf  ld   $cf         ;19a9 CALL
              7e2b 003a  ld   $3a         ;19a9 'Expression'
              7e2c 0075  ld   $75         ;19ab PUSH
              7e2d 00ec  ld   $ec         ;19ac STLW
              7e2e 0000  ld   $00
              7e2f 00cf  ld   $cf         ;19ae CALL
              7e30 0038  ld   $38         ;19ae 'Keyword'
              7e31 002c  ld   $2c         ;19b0 ','
              7e32 0000  ld   $00         ;19b1 0
              7e33 0035  ld   $35         ;19b2 BCC
              7e34 0072  ld   $72         ;19b3 NE
              7e35 00b5  ld   $b5
              7e36 00cf  ld   $cf         ;19b5 CALL
              7e37 004a  ld   $4a         ;19b5 'SyntaxError'
              7e38 00cf  ld   $cf         ;19b7 CALL
              7e39 003a  ld   $3a         ;19b7 'Expression'
              7e3a 002b  ld   $2b         ;19b9 STW
              7e3b 006a  ld   $6a         ;19b9 'j'
              7e3c 0035  ld   $35         ;19bb BCC
              7e3d 0053  ld   $53         ;19bc GE
              7e3e 00c8  ld   $c8
              7e3f 0059  ld   $59         ;19be LDI
              7e40 0000  ld   $00
              7e41 00b8  ld   $b8         ;19c0 952
              7e42 0026  ld   $26         ;19c1 38
              7e43 002b  ld   $2b         ;19c2 STW
              7e44 0026  ld   $26
              7e45 0059  ld   $59         ;19c4 LDI
              7e46 0000  ld   $00
              7e47 00b8  ld   $b8         ;19c6 SUBW
              7e48 006a  ld   $6a         ;19c6 'j'
              7e49 002b  ld   $2b         ;19c8 STW
              7e4a 006a  ld   $6a         ;19c8 'j'
              7e4b 00ee  ld   $ee         ;19ca LDLW
              7e4c 0000  ld   $00
              7e4d 002b  ld   $2b         ;19cc STW
              7e4e 0040  ld   $40         ;19cc 'i'
              7e4f 0035  ld   $35         ;19ce BCC
              7e50 0053  ld   $53         ;19cf GE
              7e51 00db  ld   $db
              7e52 0059  ld   $59         ;19d1 LDI
              7e53 0000  ld   $00
              7e54 00b8  ld   $b8         ;19d3 952
              7e55 0024  ld   $24         ;19d4 36
              7e56 002b  ld   $2b         ;19d5 STW
              7e57 0024  ld   $24
              7e58 0059  ld   $59         ;19d7 LDI
              7e59 0000  ld   $00
              7e5a 00b8  ld   $b8         ;19d9 SUBW
              7e5b 0040  ld   $40         ;19d9 'i'
              7e5c 002b  ld   $2b         ;19db STW
              7e5d 0040  ld   $40         ;19db 'i'
              7e5e 00b8  ld   $b8         ;19dd SUBW
              7e5f 006a  ld   $6a         ;19dd 'j'
              7e60 0035  ld   $35         ;19df BCC
              7e61 0053  ld   $53         ;19e0 GE
              7e62 00f8  ld   $f8
              7e63 0021  ld   $21         ;19e2 LDW
              7e64 0040  ld   $40         ;19e2 'i'
              7e65 002b  ld   $2b         ;19e4 STW
              7e66 004e  ld   $4e         ;19e4 'tmp'
              7e67 0021  ld   $21         ;19e6 LDW
              7e68 006a  ld   $6a         ;19e6 'j'
              7e69 002b  ld   $2b         ;19e8 STW
              7e6a 0040  ld   $40         ;19e8 'i'
              7e6b 0021  ld   $21         ;19ea LDW
              7e6c 004e  ld   $4e         ;19ea 'tmp'
              7e6d 002b  ld   $2b         ;19ec STW
              7e6e 006a  ld   $6a         ;19ec 'j'
              7e6f 0021  ld   $21         ;19ee LDW
              7e70 0024  ld   $24
              7e71 002b  ld   $2b         ;19f0 STW
              7e72 004e  ld   $4e         ;19f0 'tmp'
              7e73 0021  ld   $21         ;19f2 LDW
              7e74 0026  ld   $26
              7e75 002b  ld   $2b         ;19f4 STW
              7e76 0024  ld   $24
              7e77 0021  ld   $21         ;19f6 LDW
              7e78 004e  ld   $4e         ;19f6 'tmp'
              7e79 002b  ld   $2b         ;19f8 STW
              7e7a 0026  ld   $26
              7e7b 0063  ld   $63         ;19fa POP
              7e7c 0011  ld   $11         ;19fb LDWI
              7e7d 00a0  ld   $a0
              7e7e 001a  ld   $1a
              7e7f 00cf  ld   $cf         ;19fe CALL
              7e80 0018  ld   $18         ;19fe vAC
              7e81 001a  ld   $1a         ;| RAM segment address (high byte first)
              7e82 00a0  ld   $a0         ;|
              7e83 0060  ld   $60         ;| Length (1..256)
              7e84 0021  ld   $21         ;1aa0 LDW
              7e85 003c  ld   $3c         ;1aa0 'Value'
              7e86 0035  ld   $35         ;1aa2 BCC
              7e87 0053  ld   $53         ;1aa3 GE
              7e88 00a8  ld   $a8
              7e89 0011  ld   $11         ;1aa5 LDWI
              7e8a 0000  ld   $00
              7e8b 0078  ld   $78
              7e8c 0090  ld   $90         ;1aa8 BRA
              7e8d 00ab  ld   $ab
              7e8e 0011  ld   $11         ;1aaa LDWI
              7e8f 0000  ld   $00
              7e90 0088  ld   $88
              7e91 002b  ld   $2b         ;1aad STW
              7e92 0028  ld   $28
              7e93 0021  ld   $21         ;1aaf LDW
              7e94 0040  ld   $40         ;1aaf 'i'
              7e95 002b  ld   $2b         ;1ab1 STW
              7e96 004e  ld   $4e         ;1ab1 'tmp'
              7e97 002b  ld   $2b         ;1ab3 STW
              7e98 0044  ld   $44         ;1ab3 'k'
              7e99 001a  ld   $1a         ;1ab5 LD
              7e9a 002b  ld   $2b
              7e9b 00f0  ld   $f0         ;1ab7 POKE
              7e9c 0030  ld   $30         ;1ab7 'Pos'
              7e9d 0021  ld   $21         ;1ab9 LDW
              7e9e 004e  ld   $4e         ;1ab9 'tmp'
              7e9f 00e6  ld   $e6         ;1abb SUBI
              7ea0 0001  ld   $01
              7ea1 002b  ld   $2b         ;1abd STW
              7ea2 004e  ld   $4e         ;1abd 'tmp'
              7ea3 0035  ld   $35         ;1abf BCC
              7ea4 0050  ld   $50         ;1ac0 LT
              7ea5 00fc  ld   $fc
              7ea6 0021  ld   $21         ;1ac2 LDW
              7ea7 0044  ld   $44         ;1ac2 'k'
              7ea8 00b8  ld   $b8         ;1ac4 SUBW
              7ea9 006a  ld   $6a         ;1ac4 'j'
              7eaa 00b8  ld   $b8         ;1ac6 SUBW
              7eab 006a  ld   $6a         ;1ac6 'j'
              7eac 002b  ld   $2b         ;1ac8 STW
              7ead 0044  ld   $44         ;1ac8 'k'
              7eae 0035  ld   $35         ;1aca BCC
              7eaf 0053  ld   $53         ;1acb GE
              7eb0 00d7  ld   $d7
              7eb1 0099  ld   $99         ;1acd ADDW
              7eb2 0040  ld   $40         ;1acd 'i'
              7eb3 0099  ld   $99         ;1acf ADDW
              7eb4 0040  ld   $40         ;1acf 'i'
              7eb5 002b  ld   $2b         ;1ad1 STW
              7eb6 0044  ld   $44         ;1ad1 'k'
              7eb7 0021  ld   $21         ;1ad3 LDW
              7eb8 0026  ld   $26
              7eb9 0099  ld   $99         ;1ad5 ADDW
              7eba 0030  ld   $30         ;1ad5 'Pos'
              7ebb 002b  ld   $2b         ;1ad7 STW
              7ebc 0030  ld   $30         ;1ad7 'Pos'
              7ebd 0021  ld   $21         ;1ad9 LDW
              7ebe 0024  ld   $24
              7ebf 0099  ld   $99         ;1adb ADDW
              7ec0 0030  ld   $30         ;1adb 'Pos'
              7ec1 002b  ld   $2b         ;1add STW
              7ec2 0030  ld   $30         ;1add 'Pos'
              7ec3 001a  ld   $1a         ;1adf LD
              7ec4 0030  ld   $30         ;1adf 'Pos'
              7ec5 00e6  ld   $e6         ;1ae1 SUBI
              7ec6 00a0  ld   $a0
              7ec7 0035  ld   $35         ;1ae3 BCC
              7ec8 0050  ld   $50         ;1ae4 LT
              7ec9 00ed  ld   $ed
              7eca 0035  ld   $35         ;1ae6 BCC
              7ecb 0056  ld   $56         ;1ae7 LE
              7ecc 00eb  ld   $eb
              7ecd 0093  ld   $93         ;1ae9 INC
              7ece 0031  ld   $31         ;1ae9 'Pos'+1
              7ecf 00e3  ld   $e3         ;1aeb ADDI
              7ed0 0040  ld   $40
              7ed1 005e  ld   $5e         ;1aed ST
              7ed2 0030  ld   $30         ;1aed 'Pos'
              7ed3 001a  ld   $1a         ;1aef LD
              7ed4 0031  ld   $31         ;1aef 'Pos'+1
              7ed5 0082  ld   $82         ;1af1 ANDI
              7ed6 0078  ld   $78
              7ed7 0035  ld   $35         ;1af3 BCC
              7ed8 0072  ld   $72         ;1af4 NE
              7ed9 00fa  ld   $fa
              7eda 0021  ld   $21         ;1af6 LDW
              7edb 0028  ld   $28
              7edc 0099  ld   $99         ;1af8 ADDW
              7edd 0030  ld   $30         ;1af8 'Pos'
              7ede 002b  ld   $2b         ;1afa STW
              7edf 0030  ld   $30         ;1afa 'Pos'
              7ee0 0090  ld   $90         ;1afc BRA
              7ee1 00b3  ld   $b3
              7ee2 00cf  ld   $cf         ;1afe CALL
              7ee3 0062  ld   $62         ;1afe 'EndOfLine'
              7ee4 001b  ld   $1b         ;| RAM segment address (high byte first)
              7ee5 00a0  ld   $a0         ;|
              7ee6 0006  ld   $06         ;| Length (1..256)
              7ee7 00a0  ld   $a0         ;1ba0 _Buffer
              7ee8 001b  ld   $1b
              7ee9 004e  ld   $4e         ;1ba2 'N'
              7eea 0045  ld   $45         ;1ba3 'E'
              7eeb 0057  ld   $57         ;1ba4 'W'
              7eec 0000  ld   $00         ;1ba5 0
              7eed 0000  ld   $00         ;End of Apps/TinyBASIC/TinyBASIC_v4.gcl, size 3194
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/LoadTicTac_v1.gcl     |
                                          ;+-----------------------------------+
              7eee 0200  nop              ;13 fillers
              7eef 0200  nop
              7ef0 0200  nop
              * 13 times
              7efb fe00  bra  ac          ;+-----------------------------------+
              7efc fcfd  bra  $7efd       ;|                                   |
              7efd 1418  ld   $18,y       ;| Trampoline for page $7e00 lookups |
              7efe e006  jmp  y,$06       ;|                                   |
              7eff c218  st   [$18]       ;+-----------------------------------+
              7f00 dc54  st   $54,[y,x++] ;'T'
              7f01 dc69  st   $69,[y,x++] ;'i'
              7f02 dc6e  st   $6e,[y,x++] ;'n'
              7f03 dc79  st   $79,[y,x++] ;'y'
              7f04 dc42  st   $42,[y,x++] ;'B'
              7f05 dc41  st   $41,[y,x++] ;'A'
              7f06 dc53  st   $53,[y,x++] ;'S'
              7f07 dc49  st   $49,[y,x++] ;'I'
              7f08 0074  ld   $74
              7f09 c218  st   [$18]
              7f0a 0072  ld   $72
              7f0b 14fa  ld   $fa,y
              7f0c e020  jmp  y,$20
              7f0d c219  st   [$19]
TicTac:       7f0e 0002  ld   $02         ;| RAM segment address (high byte first)
              7f0f 0000  ld   $00         ;|
              7f10 0010  ld   $10         ;| Length (1..256)
              7f11 0059  ld   $59         ;0200 LDI
              7f12 00ad  ld   $ad
              7f13 002b  ld   $2b         ;0202 STW
              7f14 0022  ld   $22         ;0202 '_sysFn'
              7f15 0011  ld   $11         ;0204 LDWI
              7f16 00a0  ld   $a0
              7f17 00ff  ld   $ff
              7f18 002b  ld   $2b         ;0207 STW
              7f19 001a  ld   $1a         ;0207 '_vLR'
              7f1a 0011  ld   $11         ;0209 LDWI
              7f1b 0074  ld   $74
              7f1c 0072  ld   $72
              7f1d 002b  ld   $2b         ;020c STW
              7f1e 0024  ld   $24         ;020c '_sysArgs0'
              7f1f 00b4  ld   $b4         ;020e SYS
              7f20 00e3  ld   $e3
              7f21 00ff  ld   $ff         ;| RAM segment address (high byte first)
              7f22 00a0  ld   $a0         ;|
              7f23 000c  ld   $0c         ;| Length (1..256)
              7f24 0011  ld   $11         ;ffa0 LDWI
              7f25 0000  ld   $00
              7f26 0002  ld   $02
              7f27 002b  ld   $2b         ;ffa3 STW
              7f28 001a  ld   $1a         ;ffa3 '_vLR'
              7f29 0011  ld   $11         ;ffa5 LDWI
              7f2a 0031  ld   $31
              7f2b 007f  ld   $7f
              7f2c 002b  ld   $2b         ;ffa8 STW
              7f2d 0024  ld   $24         ;ffa8 '_sysArgs0'
              7f2e 00b4  ld   $b4         ;ffaa SYS
              7f2f 00e3  ld   $e3
              7f30 0000  ld   $00         ;End of Apps/TicTac/LoadTicTac_v1.gcl, size 35
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/TicTac_v2.gtb         |
                                          ;+-----------------------------------+
TicTacGtb:    7f31 001b  ld   $1b
              7f32 00c0  ld   $c0
              7f33 0019  ld   $19
              7f34 0064  ld   $64
              7f35 0000  ld   $00
              7f36 0027  ld   $27         ;"'"
              7f37 0054  ld   $54         ;'T'
              7f38 0049  ld   $49         ;'I'
              7f39 0043  ld   $43         ;'C'
              7f3a 002d  ld   $2d         ;'-'
              7f3b 0054  ld   $54         ;'T'
              7f3c 0041  ld   $41         ;'A'
              7f3d 0043  ld   $43         ;'C'
              7f3e 002d  ld   $2d         ;'-'
              7f3f 0054  ld   $54         ;'T'
              7f40 004f  ld   $4f         ;'O'
              7f41 0045  ld   $45         ;'E'
              7f42 002e  ld   $2e         ;'.'
              7f43 0020  ld   $20         ;' '
              7f44 0059  ld   $59         ;'Y'
              7f45 004f  ld   $4f         ;'O'
              7f46 0055  ld   $55         ;'U'
              7f47 0020  ld   $20         ;' '
              7f48 0028  ld   $28         ;'('
              7f49 0058  ld   $58         ;'X'
              7f4a 0029  ld   $29         ;')'
              7f4b 0020  ld   $20         ;' '
              7f4c 0000  ld   $00         ;'\x00'
              7f4d 001b  ld   $1b
              7f4e 00e0  ld   $e0
              7f4f 0015  ld   $15
              7f50 00d2  ld   $d2
              7f51 0000  ld   $00
              7f52 003f  ld   $3f         ;'?'
              7f53 0022  ld   $22         ;'"'
              7f54 0054  ld   $54         ;'T'
              7f55 004f  ld   $4f         ;'O'
              7f56 004d  ld   $4d         ;'M'
              7f57 0020  ld   $20         ;' '
              7f58 0050  ld   $50         ;'P'
              7f59 0049  ld   $49         ;'I'
              7f5a 0054  ld   $54         ;'T'
              7f5b 0054  ld   $54         ;'T'
              7f5c 004d  ld   $4d         ;'M'
              7f5d 0041  ld   $41         ;'A'
              7f5e 004e  ld   $4e         ;'N'
              7f5f 0027  ld   $27         ;"'"
              7f60 0053  ld   $53         ;'S'
              7f61 0020  ld   $20         ;' '
              7f62 0022  ld   $22         ;'"'
              7f63 003b  ld   $3b         ;';'
              7f64 0000  ld   $00         ;'\x00'
              7f65 001c  ld   $1c
              7f66 00a0  ld   $a0
              7f67 0012  ld   $12
              7f68 00d3  ld   $d3
              7f69 0000  ld   $00
              7f6a 003f  ld   $3f         ;'?'
              7f6b 0022  ld   $22         ;'"'
              7f6c 0054  ld   $54         ;'T'
              7f6d 0049  ld   $49         ;'I'
              7f6e 0043  ld   $43         ;'C'
              7f6f 002d  ld   $2d         ;'-'
              7f70 0054  ld   $54         ;'T'
              7f71 0041  ld   $41         ;'A'
              7f72 0043  ld   $43         ;'C'
              7f73 002d  ld   $2d         ;'-'
              7f74 0054  ld   $54         ;'T'
              7f75 004f  ld   $4f         ;'O'
              7f76 0045  ld   $45         ;'E'
              7f77 002e  ld   $2e         ;'.'
              7f78 0022  ld   $22         ;'"'
              7f79 0000  ld   $00         ;'\x00'
              7f7a 001c  ld   $1c
              7f7b 00c0  ld   $c0
              7f7c 0012  ld   $12
              7f7d 00d4  ld   $d4
              7f7e 0000  ld   $00
              7f7f 003f  ld   $3f         ;'?'
              7f80 0022  ld   $22         ;'"'
              7f81 0059  ld   $59         ;'Y'
              7f82 004f  ld   $4f         ;'O'
              7f83 0055  ld   $55         ;'U'
              7f84 0020  ld   $20         ;' '
              7f85 0041  ld   $41         ;'A'
              7f86 0047  ld   $47         ;'G'
              7f87 0041  ld   $41         ;'A'
              7f88 0049  ld   $49         ;'I'
              7f89 004e  ld   $4e         ;'N'
              7f8a 0053  ld   $53         ;'S'
              7f8b 0054  ld   $54         ;'T'
              7f8c 0022  ld   $22         ;'"'
              7f8d 003b  ld   $3b         ;';'
              7f8e 0000  ld   $00         ;'\x00'
              7f8f 001c  ld   $1c
              7f90 00e0  ld   $e0
              7f91 0011  ld   $11
              7f92 00d5  ld   $d5
              7f93 0000  ld   $00
              7f94 003f  ld   $3f         ;'?'
              7f95 0022  ld   $22         ;'"'
              7f96 0020  ld   $20         ;' '
              7f97 0054  ld   $54         ;'T'
              7f98 0049  ld   $49         ;'I'
              7f99 004e  ld   $4e         ;'N'
              7f9a 0059  ld   $59         ;'Y'
              7f9b 0020  ld   $20         ;' '
              7f9c 0042  ld   $42         ;'B'
              7f9d 0041  ld   $41         ;'A'
              7f9e 0053  ld   $53         ;'S'
              7f9f 0049  ld   $49         ;'I'
              7fa0 0043  ld   $43         ;'C'
              7fa1 0022  ld   $22         ;'"'
              7fa2 0000  ld   $00         ;'\x00'
              7fa3 001d  ld   $1d
              7fa4 00a0  ld   $a0
              7fa5 0016  ld   $16
              7fa6 00dd  ld   $dd
              7fa7 0000  ld   $00
              7fa8 003f  ld   $3f         ;'?'
              7fa9 0022  ld   $22         ;'"'
              7faa 0059  ld   $59         ;'Y'
              7fab 004f  ld   $4f         ;'O'
              7fac 0055  ld   $55         ;'U'
              7fad 0020  ld   $20         ;' '
              7fae 0041  ld   $41         ;'A'
              7faf 0052  ld   $52         ;'R'
              7fb0 0045  ld   $45         ;'E'
              7fb1 0020  ld   $20         ;' '
              7fb2 0058  ld   $58         ;'X'
              7fb3 002e  ld   $2e         ;'.'
              7fb4 0020  ld   $20         ;' '
              7fb5 0049  ld   $49         ;'I'
              7fb6 0020  ld   $20         ;' '
              7fb7 0041  ld   $41         ;'A'
              7fb8 004d  ld   $4d         ;'M'
              7fb9 0022  ld   $22         ;'"'
              7fba 003b  ld   $3b         ;';'
              7fbb 0000  ld   $00         ;'\x00'
              7fbc 001d  ld   $1d
              7fbd 00c0  ld   $c0
              7fbe 000d  ld   $0d
              7fbf 00de  ld   $de
              7fc0 0000  ld   $00
              7fc1 003f  ld   $3f         ;'?'
              7fc2 0022  ld   $22         ;'"'
              7fc3 0020  ld   $20         ;' '
              7fc4 004f  ld   $4f         ;'O'
              7fc5 002e  ld   $2e         ;'.'
              7fc6 0020  ld   $20         ;' '
              7fc7 0059  ld   $59         ;'Y'
              7fc8 004f  ld   $4f         ;'O'
              7fc9 0055  ld   $55         ;'U'
              7fca 0022  ld   $22         ;'"'
              7fcb 0000  ld   $00         ;'\x00'
              7fcc 001d  ld   $1d
              7fcd 00e0  ld   $e0
              7fce 0010  ld   $10
              7fcf 00e7  ld   $e7
              7fd0 0000  ld   $00
              7fd1 003f  ld   $3f         ;'?'
              7fd2 0022  ld   $22         ;'"'
              7fd3 0050  ld   $50         ;'P'
              7fd4 004c  ld   $4c         ;'L'
              7fd5 0041  ld   $41         ;'A'
              7fd6 0059  ld   $59         ;'Y'
              7fd7 0020  ld   $20         ;' '
              7fd8 0059  ld   $59         ;'Y'
              7fd9 004f  ld   $4f         ;'O'
              7fda 0055  ld   $55         ;'U'
              7fdb 0052  ld   $52         ;'R'
              7fdc 0022  ld   $22         ;'"'
              7fdd 003b  ld   $3b         ;';'
              7fde 0000  ld   $00         ;'\x00'
              7fdf 001e  ld   $1e
              7fe0 00a0  ld   $a0
              7fe1 0015  ld   $15
              7fe2 00e8  ld   $e8
              7fe3 0000  ld   $00
              7fe4 003f  ld   $3f         ;'?'
              7fe5 0022  ld   $22         ;'"'
              7fe6 0020  ld   $20         ;' '
              7fe7 0054  ld   $54         ;'T'
              7fe8 0055  ld   $55         ;'U'
              7fe9 0052  ld   $52         ;'R'
              7fea 004e  ld   $4e         ;'N'
              7feb 0020  ld   $20         ;' '
              7fec 0042  ld   $42         ;'B'
              7fed 0059  ld   $59         ;'Y'
              7fee 0020  ld   $20         ;' '
              7fef 0054  ld   $54         ;'T'
              7ff0 0059  ld   $59         ;'Y'
              7ff1 0050  ld   $50         ;'P'
              7ff2 0049  ld   $49         ;'I'
              7ff3 004e  ld   $4e         ;'N'
              7ff4 0047  ld   $47         ;'G'
              7ff5 0022  ld   $22         ;'"'
              7ff6 0000  ld   $00         ;'\x00'
              7ff7 001e  ld   $1e
              7ff8 00c0  ld   $c0
              7ff9 0016  ld   $16
              7ffa 00e9  ld   $e9
              7ffb fe00  bra  ac          ;+-----------------------------------+
              7ffc fcfd  bra  $7ffd       ;|                                   |
              7ffd 1418  ld   $18,y       ;| Trampoline for page $7f00 lookups |
              7ffe e006  jmp  y,$06       ;|                                   |
              7fff c218  st   [$18]       ;+-----------------------------------+
              8000 0000  ld   $00
              8001 003f  ld   $3f         ;'?'
              8002 0022  ld   $22         ;'"'
              8003 0054  ld   $54         ;'T'
              8004 0048  ld   $48         ;'H'
              8005 0045  ld   $45         ;'E'
              8006 0020  ld   $20         ;' '
              8007 004e  ld   $4e         ;'N'
              8008 0055  ld   $55         ;'U'
              8009 004d  ld   $4d         ;'M'
              800a 0042  ld   $42         ;'B'
              800b 0045  ld   $45         ;'E'
              800c 0052  ld   $52         ;'R'
              800d 0020  ld   $20         ;' '
              800e 004f  ld   $4f         ;'O'
              800f 0046  ld   $46         ;'F'
              8010 0020  ld   $20         ;' '
              8011 0041  ld   $41         ;'A'
              8012 0022  ld   $22         ;'"'
              8013 003b  ld   $3b         ;';'
              8014 0000  ld   $00         ;'\x00'
              8015 001e  ld   $1e
              8016 00e0  ld   $e0
              8017 000e  ld   $0e
              8018 00ea  ld   $ea
              8019 0000  ld   $00
              801a 003f  ld   $3f         ;'?'
              801b 0022  ld   $22         ;'"'
              801c 0020  ld   $20         ;' '
              801d 0053  ld   $53         ;'S'
              801e 0051  ld   $51         ;'Q'
              801f 0055  ld   $55         ;'U'
              8020 0041  ld   $41         ;'A'
              8021 0052  ld   $52         ;'R'
              8022 0045  ld   $45         ;'E'
              8023 002e  ld   $2e         ;'.'
              8024 0022  ld   $22         ;'"'
              8025 0000  ld   $00         ;'\x00'
              8026 001f  ld   $1f
              8027 00a0  ld   $a0
              8028 0006  ld   $06
              8029 00f0  ld   $f0
              802a 0000  ld   $00
              802b 0041  ld   $41         ;'A'
              802c 003d  ld   $3d         ;'='
              802d 0030  ld   $30         ;'0'
              802e 0000  ld   $00         ;'\x00'
              802f 001f  ld   $1f
              8030 00c0  ld   $c0
              8031 0006  ld   $06
              8032 00fa  ld   $fa
              8033 0000  ld   $00
              8034 0042  ld   $42         ;'B'
              8035 003d  ld   $3d         ;'='
              8036 0030  ld   $30         ;'0'
              8037 0000  ld   $00         ;'\x00'
              8038 001f  ld   $1f
              8039 00e0  ld   $e0
              803a 0006  ld   $06
              803b 0004  ld   $04
              803c 0001  ld   $01
              803d 0043  ld   $43         ;'C'
              803e 003d  ld   $3d         ;'='
              803f 0030  ld   $30         ;'0'
              8040 0000  ld   $00         ;'\x00'
              8041 0020  ld   $20
              8042 00a0  ld   $a0
              8043 0006  ld   $06
              8044 000e  ld   $0e
              8045 0001  ld   $01
              8046 0044  ld   $44         ;'D'
              8047 003d  ld   $3d         ;'='
              8048 0030  ld   $30         ;'0'
              8049 0000  ld   $00         ;'\x00'
              804a 0020  ld   $20
              804b 00c0  ld   $c0
              804c 0006  ld   $06
              804d 0018  ld   $18
              804e 0001  ld   $01
              804f 0045  ld   $45         ;'E'
              8050 003d  ld   $3d         ;'='
              8051 0030  ld   $30         ;'0'
              8052 0000  ld   $00         ;'\x00'
              8053 0020  ld   $20
              8054 00e0  ld   $e0
              8055 0006  ld   $06
              8056 0022  ld   $22
              8057 0001  ld   $01
              8058 0046  ld   $46         ;'F'
              8059 003d  ld   $3d         ;'='
              805a 0030  ld   $30         ;'0'
              805b 0000  ld   $00         ;'\x00'
              805c 0021  ld   $21
              805d 00a0  ld   $a0
              805e 0006  ld   $06
              805f 00e8  ld   $e8
              8060 0003  ld   $03
              8061 0046  ld   $46         ;'F'
              8062 003d  ld   $3d         ;'='
              8063 0031  ld   $31         ;'1'
              8064 0000  ld   $00         ;'\x00'
              8065 0021  ld   $21
              8066 00c0  ld   $c0
              8067 0004  ld   $04
              8068 00f2  ld   $f2
              8069 0003  ld   $03
              806a 003f  ld   $3f         ;'?'
              806b 0000  ld   $00         ;'\x00'
              806c 0021  ld   $21
              806d 00e0  ld   $e0
              806e 000f  ld   $0f
              806f 00fc  ld   $fc
              8070 0003  ld   $03
              8071 003f  ld   $3f         ;'?'
              8072 0022  ld   $22         ;'"'
              8073 004e  ld   $4e         ;'N'
              8074 0045  ld   $45         ;'E'
              8075 0057  ld   $57         ;'W'
              8076 0020  ld   $20         ;' '
              8077 0047  ld   $47         ;'G'
              8078 0041  ld   $41         ;'A'
              8079 004d  ld   $4d         ;'M'
              807a 0045  ld   $45         ;'E'
              807b 002e  ld   $2e         ;'.'
              807c 0022  ld   $22         ;'"'
              807d 0000  ld   $00         ;'\x00'
              807e 0022  ld   $22
              807f 00a0  ld   $a0
              8080 0006  ld   $06
              8081 004c  ld   $4c
              8082 0004  ld   $04
              8083 0049  ld   $49         ;'I'
              8084 003d  ld   $3d         ;'='
              8085 0037  ld   $37         ;'7'
              8086 0000  ld   $00         ;'\x00'
              8087 0022  ld   $22
              8088 00c0  ld   $c0
              8089 000f  ld   $0f
              808a 0056  ld   $56
              808b 0004  ld   $04
              808c 0041  ld   $41         ;'A'
              808d 0028  ld   $28         ;'('
              808e 0049  ld   $49         ;'I'
              808f 0029  ld   $29         ;')'
              8090 003d  ld   $3d         ;'='
              8091 0030  ld   $30         ;'0'
              8092 003a  ld   $3a         ;':'
              8093 0049  ld   $49         ;'I'
              8094 003d  ld   $3d         ;'='
              8095 0049  ld   $49         ;'I'
              8096 002b  ld   $2b         ;'+'
              8097 0031  ld   $31         ;'1'
              8098 0000  ld   $00         ;'\x00'
              8099 0022  ld   $22
              809a 00e0  ld   $e0
              809b 0011  ld   $11
              809c 0060  ld   $60
              809d 0004  ld   $04
              809e 0049  ld   $49         ;'I'
              809f 0046  ld   $46         ;'F'
              80a0 0049  ld   $49         ;'I'
              80a1 003c  ld   $3c         ;'<'
              80a2 0031  ld   $31         ;'1'
              80a3 0036  ld   $36         ;'6'
              80a4 0047  ld   $47         ;'G'
              80a5 004f  ld   $4f         ;'O'
              80a6 0054  ld   $54         ;'T'
              80a7 004f  ld   $4f         ;'O'
              80a8 0031  ld   $31         ;'1'
              80a9 0031  ld   $31         ;'1'
              80aa 0031  ld   $31         ;'1'
              80ab 0030  ld   $30         ;'0'
              80ac 0000  ld   $00         ;'\x00'
              80ad 0023  ld   $23
              80ae 00a0  ld   $a0
              80af 0006  ld   $06
              80b0 006a  ld   $6a
              80b1 0004  ld   $04
              80b2 0055  ld   $55         ;'U'
              80b3 003d  ld   $3d         ;'='
              80b4 0039  ld   $39         ;'9'
              80b5 0000  ld   $00         ;'\x00'
              80b6 0023  ld   $23
              80b7 00c0  ld   $c0
              80b8 0006  ld   $06
              80b9 0074  ld   $74
              80ba 0004  ld   $04
              80bb 005a  ld   $5a         ;'Z'
              80bc 003d  ld   $3d         ;'='
              80bd 0030  ld   $30         ;'0'
              80be 0000  ld   $00         ;'\x00'
              80bf 0023  ld   $23
              80c0 00e0  ld   $e0
              80c1 0010  ld   $10
              80c2 007f  ld   $7f
              80c3 0004  ld   $04
              80c4 0049  ld   $49         ;'I'
              80c5 0046  ld   $46         ;'F'
              80c6 0046  ld   $46         ;'F'
              80c7 003d  ld   $3d         ;'='
              80c8 0030  ld   $30         ;'0'
              80c9 0047  ld   $47         ;'G'
              80ca 004f  ld   $4f         ;'O'
              80cb 0054  ld   $54         ;'T'
              80cc 004f  ld   $4f         ;'O'
              80cd 0034  ld   $34         ;'4'
              80ce 0030  ld   $30         ;'0'
              80cf 0031  ld   $31         ;'1'
              80d0 0030  ld   $30         ;'0'
              80d1 0000  ld   $00         ;'\x00'
              80d2 0024  ld   $24
              80d3 00a0  ld   $a0
              80d4 000b  ld   $0b
              80d5 0089  ld   $89
              80d6 0004  ld   $04
              80d7 0047  ld   $47         ;'G'
              80d8 004f  ld   $4f         ;'O'
              80d9 0054  ld   $54         ;'T'
              80da 004f  ld   $4f         ;'O'
              80db 0032  ld   $32         ;'2'
              80dc 0030  ld   $30         ;'0'
              80dd 0031  ld   $31         ;'1'
              80de 0030  ld   $30         ;'0'
              80df 0000  ld   $00         ;'\x00'
              80e0 0024  ld   $24
              80e1 00c0  ld   $c0
              80e2 0006  ld   $06
              80e3 00e6  ld   $e6
              80e4 0005  ld   $05
              80e5 005a  ld   $5a         ;'Z'
              80e6 003d  ld   $3d         ;'='
              80e7 0031  ld   $31         ;'1'
              80e8 0000  ld   $00         ;'\x00'
              80e9 0024  ld   $24
              80ea 00e0  ld   $e0
              80eb 0006  ld   $06
              80ec 00f0  ld   $f0
              80ed 0005  ld   $05
              80ee 0046  ld   $46         ;'F'
              80ef 003d  ld   $3d         ;'='
              80f0 0030  ld   $30         ;'0'
              80f1 0000  ld   $00         ;'\x00'
              80f2 0025  ld   $25
              80f3 00a0  ld   $a0
              80f4 0006  ld   $06
              80f5 00da  ld   $da
              80f6 0007  ld   $07
              80f7 0049  ld   $49         ;'I'
              80f8 003d  ld   $3d         ;'='
              80f9 0036  ld   $36         ;'6'
              80fa 0000  ld   $00         ;'\x00'
              80fb fe00  bra  ac          ;+-----------------------------------+
              80fc fcfd  bra  $80fd       ;|                                   |
              80fd 1418  ld   $18,y       ;| Trampoline for page $8000 lookups |
              80fe e006  jmp  y,$06       ;|                                   |
              80ff c218  st   [$18]       ;+-----------------------------------+
              8100 0025  ld   $25
              8101 00c0  ld   $c0
              8102 0008  ld   $08
              8103 003e  ld   $3e
              8104 0008  ld   $08
              8105 0049  ld   $49         ;'I'
              8106 003d  ld   $3d         ;'='
              8107 0049  ld   $49         ;'I'
              8108 002b  ld   $2b         ;'+'
              8109 0031  ld   $31         ;'1'
              810a 0000  ld   $00         ;'\x00'
              810b 0025  ld   $25
              810c 00e0  ld   $e0
              810d 0008  ld   $08
              810e 0048  ld   $48
              810f 0008  ld   $08
              8110 003f  ld   $3f         ;'?'
              8111 0022  ld   $22         ;'"'
              8112 0020  ld   $20         ;' '
              8113 0022  ld   $22         ;'"'
              8114 003b  ld   $3b         ;';'
              8115 0000  ld   $00         ;'\x00'
              8116 0026  ld   $26
              8117 00a0  ld   $a0
              8118 0013  ld   $13
              8119 0053  ld   $53
              811a 0008  ld   $08
              811b 0047  ld   $47         ;'G'
              811c 004f  ld   $4f         ;'O'
              811d 0054  ld   $54         ;'T'
              811e 004f  ld   $4f         ;'O'
              811f 0041  ld   $41         ;'A'
              8120 0028  ld   $28         ;'('
              8121 0049  ld   $49         ;'I'
              8122 0029  ld   $29         ;')'
              8123 002a  ld   $2a         ;'*'
              8124 0032  ld   $32         ;'2'
              8125 0030  ld   $30         ;'0'
              8126 002b  ld   $2b         ;'+'
              8127 0032  ld   $32         ;'2'
              8128 0032  ld   $32         ;'2'
              8129 0030  ld   $30         ;'0'
              812a 0030  ld   $30         ;'0'
              812b 0000  ld   $00         ;'\x00'
              812c 0026  ld   $26
              812d 00c0  ld   $c0
              812e 0008  ld   $08
              812f 0098  ld   $98
              8130 0008  ld   $08
              8131 003f  ld   $3f         ;'?'
              8132 0049  ld   $49         ;'I'
              8133 002d  ld   $2d         ;'-'
              8134 0036  ld   $36         ;'6'
              8135 003b  ld   $3b         ;';'
              8136 0000  ld   $00         ;'\x00'
              8137 0026  ld   $26
              8138 00e0  ld   $e0
              8139 000b  ld   $0b
              813a 00a2  ld   $a2
              813b 0008  ld   $08
              813c 0047  ld   $47         ;'G'
              813d 004f  ld   $4f         ;'O'
              813e 0054  ld   $54         ;'T'
              813f 004f  ld   $4f         ;'O'
              8140 0032  ld   $32         ;'2'
              8141 0033  ld   $33         ;'3'
              8142 0030  ld   $30         ;'0'
              8143 0030  ld   $30         ;'0'
              8144 0000  ld   $00         ;'\x00'
              8145 0027  ld   $27
              8146 00a0  ld   $a0
              8147 0008  ld   $08
              8148 00ac  ld   $ac
              8149 0008  ld   $08
              814a 003f  ld   $3f         ;'?'
              814b 0022  ld   $22         ;'"'
              814c 0058  ld   $58         ;'X'
              814d 0022  ld   $22         ;'"'
              814e 003b  ld   $3b         ;';'
              814f 0000  ld   $00         ;'\x00'
              8150 0027  ld   $27
              8151 00c0  ld   $c0
              8152 000b  ld   $0b
              8153 00b6  ld   $b6
              8154 0008  ld   $08
              8155 0047  ld   $47         ;'G'
              8156 004f  ld   $4f         ;'O'
              8157 0054  ld   $54         ;'T'
              8158 004f  ld   $4f         ;'O'
              8159 0032  ld   $32         ;'2'
              815a 0033  ld   $33         ;'3'
              815b 0030  ld   $30         ;'0'
              815c 0030  ld   $30         ;'0'
              815d 0000  ld   $00         ;'\x00'
              815e 0027  ld   $27
              815f 00e0  ld   $e0
              8160 0008  ld   $08
              8161 00d4  ld   $d4
              8162 0008  ld   $08
              8163 003f  ld   $3f         ;'?'
              8164 0022  ld   $22         ;'"'
              8165 004f  ld   $4f         ;'O'
              8166 0022  ld   $22         ;'"'
              8167 003b  ld   $3b         ;';'
              8168 0000  ld   $00         ;'\x00'
              8169 0028  ld   $28
              816a 00a0  ld   $a0
              816b 0014  ld   $14
              816c 00fc  ld   $fc
              816d 0008  ld   $08
              816e 0049  ld   $49         ;'I'
              816f 0046  ld   $46         ;'F'
              8170 0049  ld   $49         ;'I'
              8171 002f  ld   $2f         ;'/'
              8172 0033  ld   $33         ;'3'
              8173 002a  ld   $2a         ;'*'
              8174 0033  ld   $33         ;'3'
              8175 003d  ld   $3d         ;'='
              8176 0049  ld   $49         ;'I'
              8177 0047  ld   $47         ;'G'
              8178 004f  ld   $4f         ;'O'
              8179 0054  ld   $54         ;'T'
              817a 004f  ld   $4f         ;'O'
              817b 0032  ld   $32         ;'2'
              817c 0034  ld   $34         ;'4'
              817d 0030  ld   $30         ;'0'
              817e 0030  ld   $30         ;'0'
              817f 0000  ld   $00         ;'\x00'
              8180 0028  ld   $28
              8181 00c0  ld   $c0
              8182 0009  ld   $09
              8183 0006  ld   $06
              8184 0009  ld   $09
              8185 003f  ld   $3f         ;'?'
              8186 0022  ld   $22         ;'"'
              8187 0020  ld   $20         ;' '
              8188 007c  ld   $7c         ;'|'
              8189 0022  ld   $22         ;'"'
              818a 003b  ld   $3b         ;';'
              818b 0000  ld   $00         ;'\x00'
              818c 0028  ld   $28
              818d 00e0  ld   $e0
              818e 000b  ld   $0b
              818f 0010  ld   $10
              8190 0009  ld   $09
              8191 0047  ld   $47         ;'G'
              8192 004f  ld   $4f         ;'O'
              8193 0054  ld   $54         ;'T'
              8194 004f  ld   $4f         ;'O'
              8195 0032  ld   $32         ;'2'
              8196 0031  ld   $31         ;'1'
              8197 0031  ld   $31         ;'1'
              8198 0030  ld   $30         ;'0'
              8199 0000  ld   $00         ;'\x00'
              819a 0029  ld   $29
              819b 00a0  ld   $a0
              819c 0004  ld   $04
              819d 0060  ld   $60
              819e 0009  ld   $09
              819f 003f  ld   $3f         ;'?'
              81a0 0000  ld   $00         ;'\x00'
              81a1 0029  ld   $29
              81a2 00c0  ld   $c0
              81a3 0011  ld   $11
              81a4 0074  ld   $74
              81a5 0009  ld   $09
              81a6 0049  ld   $49         ;'I'
              81a7 0046  ld   $46         ;'F'
              81a8 0049  ld   $49         ;'I'
              81a9 003d  ld   $3d         ;'='
              81aa 0031  ld   $31         ;'1'
              81ab 0035  ld   $35         ;'5'
              81ac 0047  ld   $47         ;'G'
              81ad 004f  ld   $4f         ;'O'
              81ae 0054  ld   $54         ;'T'
              81af 004f  ld   $4f         ;'O'
              81b0 0033  ld   $33         ;'3'
              81b1 0030  ld   $30         ;'0'
              81b2 0030  ld   $30         ;'0'
              81b3 0030  ld   $30         ;'0'
              81b4 0000  ld   $00         ;'\x00'
              81b5 0029  ld   $29
              81b6 00e0  ld   $e0
              81b7 0011  ld   $11
              81b8 007e  ld   $7e
              81b9 0009  ld   $09
              81ba 003f  ld   $3f         ;'?'
              81bb 0022  ld   $22         ;'"'
              81bc 002d  ld   $2d         ;'-'
              81bd 002d  ld   $2d         ;'-'
              81be 002d  ld   $2d         ;'-'
              81bf 002b  ld   $2b         ;'+'
              81c0 002d  ld   $2d         ;'-'
              81c1 002d  ld   $2d         ;'-'
              81c2 002d  ld   $2d         ;'-'
              81c3 002b  ld   $2b         ;'+'
              81c4 002d  ld   $2d         ;'-'
              81c5 002d  ld   $2d         ;'-'
              81c6 002d  ld   $2d         ;'-'
              81c7 0022  ld   $22         ;'"'
              81c8 0000  ld   $00         ;'\x00'
              81c9 002a  ld   $2a
              81ca 00a0  ld   $a0
              81cb 000b  ld   $0b
              81cc 0088  ld   $88
              81cd 0009  ld   $09
              81ce 0047  ld   $47         ;'G'
              81cf 004f  ld   $4f         ;'O'
              81d0 0054  ld   $54         ;'T'
              81d1 004f  ld   $4f         ;'O'
              81d2 0032  ld   $32         ;'2'
              81d3 0031  ld   $31         ;'1'
              81d4 0031  ld   $31         ;'1'
              81d5 0030  ld   $30         ;'0'
              81d6 0000  ld   $00         ;'\x00'
              81d7 002a  ld   $2a
              81d8 00c0  ld   $c0
              81d9 0010  ld   $10
              81da 00b8  ld   $b8
              81db 000b  ld   $0b
              81dc 0049  ld   $49         ;'I'
              81dd 0046  ld   $46         ;'F'
              81de 005a  ld   $5a         ;'Z'
              81df 003d  ld   $3d         ;'='
              81e0 0030  ld   $30         ;'0'
              81e1 0047  ld   $47         ;'G'
              81e2 004f  ld   $4f         ;'O'
              81e3 0054  ld   $54         ;'T'
              81e4 004f  ld   $4f         ;'O'
              81e5 0033  ld   $33         ;'3'
              81e6 0031  ld   $31         ;'1'
              81e7 0030  ld   $30         ;'0'
              81e8 0030  ld   $30         ;'0'
              81e9 0000  ld   $00         ;'\x00'
              81ea 002a  ld   $2a
              81eb 00e0  ld   $e0
              81ec 0010  ld   $10
              81ed 00cc  ld   $cc
              81ee 000b  ld   $0b
              81ef 0049  ld   $49         ;'I'
              81f0 0046  ld   $46         ;'F'
              81f1 0046  ld   $46         ;'F'
              81f2 003d  ld   $3d         ;'='
              81f3 0031  ld   $31         ;'1'
              81f4 0047  ld   $47         ;'G'
              81f5 004f  ld   $4f         ;'O'
              81f6 0054  ld   $54         ;'T'
              81f7 004f  ld   $4f         ;'O'
              81f8 0033  ld   $33         ;'3'
              81f9 0030  ld   $30         ;'0'
              81fa 0035  ld   $35         ;'5'
              81fb fe00  bra  ac          ;+-----------------------------------+
              81fc fcfd  bra  $81fd       ;|                                   |
              81fd 1418  ld   $18,y       ;| Trampoline for page $8100 lookups |
              81fe e006  jmp  y,$06       ;|                                   |
              81ff c218  st   [$18]       ;+-----------------------------------+
              8200 0030  ld   $30         ;'0'
              8201 0000  ld   $00         ;'\x00'
              8202 002b  ld   $2b
              8203 00a0  ld   $a0
              8204 000e  ld   $0e
              8205 00d6  ld   $d6
              8206 000b  ld   $0b
              8207 003f  ld   $3f         ;'?'
              8208 0022  ld   $22         ;'"'
              8209 0059  ld   $59         ;'Y'
              820a 004f  ld   $4f         ;'O'
              820b 0055  ld   $55         ;'U'
              820c 0020  ld   $20         ;' '
              820d 0057  ld   $57         ;'W'
              820e 0049  ld   $49         ;'I'
              820f 004e  ld   $4e         ;'N'
              8210 002e  ld   $2e         ;'.'
              8211 0022  ld   $22         ;'"'
              8212 0000  ld   $00         ;'\x00'
              8213 002b  ld   $2b
              8214 00c0  ld   $c0
              8215 000b  ld   $0b
              8216 00e0  ld   $e0
              8217 000b  ld   $0b
              8218 0047  ld   $47         ;'G'
              8219 004f  ld   $4f         ;'O'
              821a 0054  ld   $54         ;'T'
              821b 004f  ld   $4f         ;'O'
              821c 0031  ld   $31         ;'1'
              821d 0030  ld   $30         ;'0'
              821e 0031  ld   $31         ;'1'
              821f 0030  ld   $30         ;'0'
              8220 0000  ld   $00         ;'\x00'
              8221 002b  ld   $2b
              8222 00e0  ld   $e0
              8223 000c  ld   $0c
              8224 00ea  ld   $ea
              8225 000b  ld   $0b
              8226 003f  ld   $3f         ;'?'
              8227 0022  ld   $22         ;'"'
              8228 0049  ld   $49         ;'I'
              8229 0020  ld   $20         ;' '
              822a 0057  ld   $57         ;'W'
              822b 0049  ld   $49         ;'I'
              822c 004e  ld   $4e         ;'N'
              822d 002e  ld   $2e         ;'.'
              822e 0022  ld   $22         ;'"'
              822f 0000  ld   $00         ;'\x00'
              8230 002c  ld   $2c
              8231 00a0  ld   $a0
              8232 000b  ld   $0b
              8233 00f4  ld   $f4
              8234 000b  ld   $0b
              8235 0047  ld   $47         ;'G'
              8236 004f  ld   $4f         ;'O'
              8237 0054  ld   $54         ;'T'
              8238 004f  ld   $4f         ;'O'
              8239 0031  ld   $31         ;'1'
              823a 0030  ld   $30         ;'0'
              823b 0031  ld   $31         ;'1'
              823c 0030  ld   $30         ;'0'
              823d 0000  ld   $00         ;'\x00'
              823e 002c  ld   $2c
              823f 00c0  ld   $c0
              8240 0010  ld   $10
              8241 001c  ld   $1c
              8242 000c  ld   $0c
              8243 0049  ld   $49         ;'I'
              8244 0046  ld   $46         ;'F'
              8245 0055  ld   $55         ;'U'
              8246 003e  ld   $3e         ;'>'
              8247 0030  ld   $30         ;'0'
              8248 0047  ld   $47         ;'G'
              8249 004f  ld   $4f         ;'O'
              824a 0054  ld   $54         ;'T'
              824b 004f  ld   $4f         ;'O'
              824c 0033  ld   $33         ;'3'
              824d 0032  ld   $32         ;'2'
              824e 0031  ld   $31         ;'1'
              824f 0030  ld   $30         ;'0'
              8250 0000  ld   $00         ;'\x00'
              8251 002c  ld   $2c
              8252 00e0  ld   $e0
              8253 0011  ld   $11
              8254 0026  ld   $26
              8255 000c  ld   $0c
              8256 003f  ld   $3f         ;'?'
              8257 0022  ld   $22         ;'"'
              8258 0043  ld   $43         ;'C'
              8259 0041  ld   $41         ;'A'
              825a 0054  ld   $54         ;'T'
              825b 0027  ld   $27         ;"'"
              825c 0053  ld   $53         ;'S'
              825d 0020  ld   $20         ;' '
              825e 0047  ld   $47         ;'G'
              825f 0041  ld   $41         ;'A'
              8260 004d  ld   $4d         ;'M'
              8261 0045  ld   $45         ;'E'
              8262 002e  ld   $2e         ;'.'
              8263 0022  ld   $22         ;'"'
              8264 0000  ld   $00         ;'\x00'
              8265 002d  ld   $2d
              8266 00a0  ld   $a0
              8267 0008  ld   $08
              8268 0030  ld   $30
              8269 000c  ld   $0c
              826a 0046  ld   $46         ;'F'
              826b 003d  ld   $3d         ;'='
              826c 0031  ld   $31         ;'1'
              826d 002d  ld   $2d         ;'-'
              826e 0046  ld   $46         ;'F'
              826f 0000  ld   $00         ;'\x00'
              8270 002d  ld   $2d
              8271 00c0  ld   $c0
              8272 000b  ld   $0b
              8273 003a  ld   $3a
              8274 000c  ld   $0c
              8275 0047  ld   $47         ;'G'
              8276 004f  ld   $4f         ;'O'
              8277 0054  ld   $54         ;'T'
              8278 004f  ld   $4f         ;'O'
              8279 0031  ld   $31         ;'1'
              827a 0030  ld   $30         ;'0'
              827b 0031  ld   $31         ;'1'
              827c 0030  ld   $30         ;'0'
              827d 0000  ld   $00         ;'\x00'
              827e 002d  ld   $2d
              827f 00e0  ld   $e0
              8280 000f  ld   $0f
              8281 008a  ld   $8a
              8282 000c  ld   $0c
              8283 003f  ld   $3f         ;'?'
              8284 0022  ld   $22         ;'"'
              8285 0059  ld   $59         ;'Y'
              8286 004f  ld   $4f         ;'O'
              8287 0055  ld   $55         ;'U'
              8288 0052  ld   $52         ;'R'
              8289 0020  ld   $20         ;' '
              828a 0050  ld   $50         ;'P'
              828b 004c  ld   $4c         ;'L'
              828c 0041  ld   $41         ;'A'
              828d 0022  ld   $22         ;'"'
              828e 003b  ld   $3b         ;';'
              828f 0000  ld   $00         ;'\x00'
              8290 002e  ld   $2e
              8291 00a0  ld   $a0
              8292 000d  ld   $0d
              8293 0097  ld   $97
              8294 000c  ld   $0c
              8295 0049  ld   $49         ;'I'
              8296 004e  ld   $4e         ;'N'
              8297 0050  ld   $50         ;'P'
              8298 0055  ld   $55         ;'U'
              8299 0054  ld   $54         ;'T'
              829a 0059  ld   $59         ;'Y'
              829b 003a  ld   $3a         ;':'
              829c 0049  ld   $49         ;'I'
              829d 003d  ld   $3d         ;'='
              829e 0059  ld   $59         ;'Y'
              829f 0000  ld   $00         ;'\x00'
              82a0 002e  ld   $2e
              82a1 00c0  ld   $c0
              82a2 0011  ld   $11
              82a3 009f  ld   $9f
              82a4 000c  ld   $0c
              82a5 0049  ld   $49         ;'I'
              82a6 0046  ld   $46         ;'F'
              82a7 0049  ld   $49         ;'I'
              82a8 003c  ld   $3c         ;'<'
              82a9 003d  ld   $3d         ;'='
              82aa 0030  ld   $30         ;'0'
              82ab 0047  ld   $47         ;'G'
              82ac 004f  ld   $4f         ;'O'
              82ad 0054  ld   $54         ;'T'
              82ae 004f  ld   $4f         ;'O'
              82af 0033  ld   $33         ;'3'
              82b0 0032  ld   $32         ;'2'
              82b1 0034  ld   $34         ;'4'
              82b2 0030  ld   $30         ;'0'
              82b3 0000  ld   $00         ;'\x00'
              82b4 002e  ld   $2e
              82b5 00e0  ld   $e0
              82b6 0011  ld   $11
              82b7 00a0  ld   $a0
              82b8 000c  ld   $0c
              82b9 0049  ld   $49         ;'I'
              82ba 0046  ld   $46         ;'F'
              82bb 0049  ld   $49         ;'I'
              82bc 003c  ld   $3c         ;'<'
              82bd 0031  ld   $31         ;'1'
              82be 0030  ld   $30         ;'0'
              82bf 0047  ld   $47         ;'G'
              82c0 004f  ld   $4f         ;'O'
              82c1 0054  ld   $54         ;'T'
              82c2 004f  ld   $4f         ;'O'
              82c3 0033  ld   $33         ;'3'
              82c4 0032  ld   $32         ;'2'
              82c5 0037  ld   $37         ;'7'
              82c6 0030  ld   $30         ;'0'
              82c7 0000  ld   $00         ;'\x00'
              82c8 002f  ld   $2f
              82c9 00a0  ld   $a0
              82ca 0014  ld   $14
              82cb 00a8  ld   $a8
              82cc 000c  ld   $0c
              82cd 003f  ld   $3f         ;'?'
              82ce 0022  ld   $22         ;'"'
              82cf 0050  ld   $50         ;'P'
              82d0 004c  ld   $4c         ;'L'
              82d1 0045  ld   $45         ;'E'
              82d2 0041  ld   $41         ;'A'
              82d3 0053  ld   $53         ;'S'
              82d4 0045  ld   $45         ;'E'
              82d5 0020  ld   $20         ;' '
              82d6 0054  ld   $54         ;'T'
              82d7 0059  ld   $59         ;'Y'
              82d8 0050  ld   $50         ;'P'
              82d9 0045  ld   $45         ;'E'
              82da 0020  ld   $20         ;' '
              82db 0041  ld   $41         ;'A'
              82dc 0022  ld   $22         ;'"'
              82dd 003b  ld   $3b         ;';'
              82de 0000  ld   $00         ;'\x00'
              82df 002f  ld   $2f
              82e0 00c0  ld   $c0
              82e1 000d  ld   $0d
              82e2 00aa  ld   $aa
              82e3 000c  ld   $0c
              82e4 003f  ld   $3f         ;'?'
              82e5 0022  ld   $22         ;'"'
              82e6 0020  ld   $20         ;' '
              82e7 004e  ld   $4e         ;'N'
              82e8 0055  ld   $55         ;'U'
              82e9 004d  ld   $4d         ;'M'
              82ea 0042  ld   $42         ;'B'
              82eb 0045  ld   $45         ;'E'
              82ec 0052  ld   $52         ;'R'
              82ed 0022  ld   $22         ;'"'
              82ee 0000  ld   $00         ;'\x00'
              82ef 002f  ld   $2f
              82f0 00e0  ld   $e0
              82f1 0016  ld   $16
              82f2 00ab  ld   $ab
              82f3 000c  ld   $0c
              82f4 003f  ld   $3f         ;'?'
              82f5 0022  ld   $22         ;'"'
              82f6 0042  ld   $42         ;'B'
              82f7 0045  ld   $45         ;'E'
              82f8 0054  ld   $54         ;'T'
              82f9 0057  ld   $57         ;'W'
              82fa 0045  ld   $45         ;'E'
              82fb fe00  bra  ac          ;+-----------------------------------+
              82fc fcfd  bra  $82fd       ;|                                   |
              82fd 1418  ld   $18,y       ;| Trampoline for page $8200 lookups |
              82fe e006  jmp  y,$06       ;|                                   |
              82ff c218  st   [$18]       ;+-----------------------------------+
              8300 0045  ld   $45         ;'E'
              8301 004e  ld   $4e         ;'N'
              8302 0020  ld   $20         ;' '
              8303 0031  ld   $31         ;'1'
              8304 0020  ld   $20         ;' '
              8305 0041  ld   $41         ;'A'
              8306 004e  ld   $4e         ;'N'
              8307 0044  ld   $44         ;'D'
              8308 0020  ld   $20         ;' '
              8309 0039  ld   $39         ;'9'
              830a 0022  ld   $22         ;'"'
              830b 003b  ld   $3b         ;';'
              830c 0000  ld   $00         ;'\x00'
              830d 0030  ld   $30
              830e 00a0  ld   $a0
              830f 0010  ld   $10
              8310 00b3  ld   $b3
              8311 000c  ld   $0c
              8312 003f  ld   $3f         ;'?'
              8313 0022  ld   $22         ;'"'
              8314 0020  ld   $20         ;' '
              8315 0057  ld   $57         ;'W'
              8316 0048  ld   $48         ;'H'
              8317 0045  ld   $45         ;'E'
              8318 0052  ld   $52         ;'R'
              8319 0045  ld   $45         ;'E'
              831a 0020  ld   $20         ;' '
              831b 0059  ld   $59         ;'Y'
              831c 004f  ld   $4f         ;'O'
              831d 0055  ld   $55         ;'U'
              831e 0022  ld   $22         ;'"'
              831f 0000  ld   $00         ;'\x00'
              8320 0030  ld   $30
              8321 00c0  ld   $c0
              8322 0013  ld   $13
              8323 00b4  ld   $b4
              8324 000c  ld   $0c
              8325 003f  ld   $3f         ;'?'
              8326 0022  ld   $22         ;'"'
              8327 0057  ld   $57         ;'W'
              8328 0049  ld   $49         ;'I'
              8329 0053  ld   $53         ;'S'
              832a 0048  ld   $48         ;'H'
              832b 0020  ld   $20         ;' '
              832c 0054  ld   $54         ;'T'
              832d 004f  ld   $4f         ;'O'
              832e 0020  ld   $20         ;' '
              832f 0050  ld   $50         ;'P'
              8330 004c  ld   $4c         ;'L'
              8331 0041  ld   $41         ;'A'
              8332 0059  ld   $59         ;'Y'
              8333 0022  ld   $22         ;'"'
              8334 003b  ld   $3b         ;';'
              8335 0000  ld   $00         ;'\x00'
              8336 0030  ld   $30
              8337 00e0  ld   $e0
              8338 000d  ld   $0d
              8339 00b5  ld   $b5
              833a 000c  ld   $0c
              833b 003f  ld   $3f         ;'?'
              833c 0022  ld   $22         ;'"'
              833d 0020  ld   $20         ;' '
              833e 0059  ld   $59         ;'Y'
              833f 004f  ld   $4f         ;'O'
              8340 0055  ld   $55         ;'U'
              8341 0052  ld   $52         ;'R'
              8342 0020  ld   $20         ;' '
              8343 0058  ld   $58         ;'X'
              8344 0022  ld   $22         ;'"'
              8345 0000  ld   $00         ;'\x00'
              8346 0031  ld   $31
              8347 00a0  ld   $a0
              8348 000b  ld   $0b
              8349 00bc  ld   $bc
              834a 000c  ld   $0c
              834b 0047  ld   $47         ;'G'
              834c 004f  ld   $4f         ;'O'
              834d 0054  ld   $54         ;'T'
              834e 004f  ld   $4f         ;'O'
              834f 0033  ld   $33         ;'3'
              8350 0032  ld   $32         ;'2'
              8351 0031  ld   $31         ;'1'
              8352 0030  ld   $30         ;'0'
              8353 0000  ld   $00         ;'\x00'
              8354 0031  ld   $31
              8355 00c0  ld   $c0
              8356 0015  ld   $15
              8357 00c6  ld   $c6
              8358 000c  ld   $0c
              8359 0049  ld   $49         ;'I'
              835a 0046  ld   $46         ;'F'
              835b 0041  ld   $41         ;'A'
              835c 0028  ld   $28         ;'('
              835d 0049  ld   $49         ;'I'
              835e 002b  ld   $2b         ;'+'
              835f 0036  ld   $36         ;'6'
              8360 0029  ld   $29         ;')'
              8361 003d  ld   $3d         ;'='
              8362 0030  ld   $30         ;'0'
              8363 0047  ld   $47         ;'G'
              8364 004f  ld   $4f         ;'O'
              8365 0054  ld   $54         ;'T'
              8366 004f  ld   $4f         ;'O'
              8367 0033  ld   $33         ;'3'
              8368 0033  ld   $33         ;'3'
              8369 0031  ld   $31         ;'1'
              836a 0030  ld   $30         ;'0'
              836b 0000  ld   $00         ;'\x00'
              836c 0031  ld   $31
              836d 00e0  ld   $e0
              836e 0015  ld   $15
              836f 00d1  ld   $d1
              8370 000c  ld   $0c
              8371 003f  ld   $3f         ;'?'
              8372 0022  ld   $22         ;'"'
              8373 0054  ld   $54         ;'T'
              8374 0048  ld   $48         ;'H'
              8375 0041  ld   $41         ;'A'
              8376 0054  ld   $54         ;'T'
              8377 0020  ld   $20         ;' '
              8378 0053  ld   $53         ;'S'
              8379 0051  ld   $51         ;'Q'
              837a 0055  ld   $55         ;'U'
              837b 0041  ld   $41         ;'A'
              837c 0052  ld   $52         ;'R'
              837d 0045  ld   $45         ;'E'
              837e 0020  ld   $20         ;' '
              837f 0049  ld   $49         ;'I'
              8380 0053  ld   $53         ;'S'
              8381 0022  ld   $22         ;'"'
              8382 003b  ld   $3b         ;';'
              8383 0000  ld   $00         ;'\x00'
              8384 0032  ld   $32
              8385 00a0  ld   $a0
              8386 0017  ld   $17
              8387 00d2  ld   $d2
              8388 000c  ld   $0c
              8389 003f  ld   $3f         ;'?'
              838a 0022  ld   $22         ;'"'
              838b 0020  ld   $20         ;' '
              838c 0041  ld   $41         ;'A'
              838d 004c  ld   $4c         ;'L'
              838e 0052  ld   $52         ;'R'
              838f 0045  ld   $45         ;'E'
              8390 0041  ld   $41         ;'A'
              8391 0044  ld   $44         ;'D'
              8392 0059  ld   $59         ;'Y'
              8393 0022  ld   $22         ;'"'
              8394 003a  ld   $3a         ;':'
              8395 003f  ld   $3f         ;'?'
              8396 0022  ld   $22         ;'"'
              8397 0054  ld   $54         ;'T'
              8398 0041  ld   $41         ;'A'
              8399 004b  ld   $4b         ;'K'
              839a 0045  ld   $45         ;'E'
              839b 004e  ld   $4e         ;'N'
              839c 0022  ld   $22         ;'"'
              839d 0000  ld   $00         ;'\x00'
              839e 0032  ld   $32
              839f 00c0  ld   $c0
              83a0 000b  ld   $0b
              83a1 00da  ld   $da
              83a2 000c  ld   $0c
              83a3 0047  ld   $47         ;'G'
              83a4 004f  ld   $4f         ;'O'
              83a5 0054  ld   $54         ;'T'
              83a6 004f  ld   $4f         ;'O'
              83a7 0033  ld   $33         ;'3'
              83a8 0032  ld   $32         ;'2'
              83a9 0031  ld   $31         ;'1'
              83aa 0030  ld   $30         ;'0'
              83ab 0000  ld   $00         ;'\x00'
              83ac 0032  ld   $32
              83ad 00e0  ld   $e0
              83ae 0011  ld   $11
              83af 00ee  ld   $ee
              83b0 000c  ld   $0c
              83b1 0041  ld   $41         ;'A'
              83b2 0028  ld   $28         ;'('
              83b3 0049  ld   $49         ;'I'
              83b4 002b  ld   $2b         ;'+'
              83b5 0036  ld   $36         ;'6'
              83b6 0029  ld   $29         ;')'
              83b7 003d  ld   $3d         ;'='
              83b8 0031  ld   $31         ;'1'
              83b9 003a  ld   $3a         ;':'
              83ba 0055  ld   $55         ;'U'
              83bb 003d  ld   $3d         ;'='
              83bc 0055  ld   $55         ;'U'
              83bd 002d  ld   $2d         ;'-'
              83be 0031  ld   $31         ;'1'
              83bf 0000  ld   $00         ;'\x00'
              83c0 0033  ld   $33
              83c1 00a0  ld   $a0
              83c2 0009  ld   $09
              83c3 00f8  ld   $f8
              83c4 000c  ld   $0c
              83c5 0057  ld   $57         ;'W'
              83c6 003d  ld   $3d         ;'='
              83c7 0036  ld   $36         ;'6'
              83c8 0031  ld   $31         ;'1'
              83c9 0030  ld   $30         ;'0'
              83ca 0030  ld   $30         ;'0'
              83cb 0000  ld   $00         ;'\x00'
              83cc 0033  ld   $33
              83cd 00c0  ld   $c0
              83ce 0009  ld   $09
              83cf 0002  ld   $02
              83d0 000d  ld   $0d
              83d1 0047  ld   $47         ;'G'
              83d2 004f  ld   $4f         ;'O'
              83d3 0053  ld   $53         ;'S'
              83d4 0055  ld   $55         ;'U'
              83d5 0042  ld   $42         ;'B'
              83d6 0057  ld   $57         ;'W'
              83d7 0000  ld   $00         ;'\x00'
              83d8 0033  ld   $33
              83d9 00e0  ld   $e0
              83da 0011  ld   $11
              83db 000d  ld   $0d
              83dc 000d  ld   $0d
              83dd 0049  ld   $49         ;'I'
              83de 0046  ld   $46         ;'F'
              83df 004a  ld   $4a         ;'J'
              83e0 003c  ld   $3c         ;'<'
              83e1 003d  ld   $3d         ;'='
              83e2 0030  ld   $30         ;'0'
              83e3 0047  ld   $47         ;'G'
              83e4 004f  ld   $4f         ;'O'
              83e5 0054  ld   $54         ;'T'
              83e6 004f  ld   $4f         ;'O'
              83e7 0033  ld   $33         ;'3'
              83e8 0033  ld   $33         ;'3'
              83e9 0035  ld   $35         ;'5'
              83ea 0030  ld   $30         ;'0'
              83eb 0000  ld   $00         ;'\x00'
              83ec 0034  ld   $34
              83ed 00a0  ld   $a0
              83ee 0014  ld   $14
              83ef 000e  ld   $0e
              83f0 000d  ld   $0d
              83f1 0049  ld   $49         ;'I'
              83f2 0046  ld   $46         ;'F'
              83f3 004c  ld   $4c         ;'L'
              83f4 002a  ld   $2a         ;'*'
              83f5 004d  ld   $4d         ;'M'
              83f6 002a  ld   $2a         ;'*'
              83f7 004e  ld   $4e         ;'N'
              83f8 003d  ld   $3d         ;'='
              83f9 0031  ld   $31         ;'1'
              83fa 0047  ld   $47         ;'G'
              83fb fe00  bra  ac          ;+-----------------------------------+
              83fc fcfd  bra  $83fd       ;|                                   |
              83fd 1418  ld   $18,y       ;| Trampoline for page $8300 lookups |
              83fe e006  jmp  y,$06       ;|                                   |
              83ff c218  st   [$18]       ;+-----------------------------------+
              8400 004f  ld   $4f         ;'O'
              8401 0054  ld   $54         ;'T'
              8402 004f  ld   $4f         ;'O'
              8403 0031  ld   $31         ;'1'
              8404 0035  ld   $35         ;'5'
              8405 0031  ld   $31         ;'1'
              8406 0030  ld   $30         ;'0'
              8407 0000  ld   $00         ;'\x00'
              8408 0034  ld   $34
              8409 00c0  ld   $c0
              840a 000a  ld   $0a
              840b 0016  ld   $16
              840c 000d  ld   $0d
              840d 0057  ld   $57         ;'W'
              840e 003d  ld   $3d         ;'='
              840f 0057  ld   $57         ;'W'
              8410 002b  ld   $2b         ;'+'
              8411 0031  ld   $31         ;'1'
              8412 0030  ld   $30         ;'0'
              8413 0030  ld   $30         ;'0'
              8414 0000  ld   $00         ;'\x00'
              8415 0034  ld   $34
              8416 00e0  ld   $e0
              8417 0013  ld   $13
              8418 0020  ld   $20
              8419 000d  ld   $0d
              841a 0049  ld   $49         ;'I'
              841b 0046  ld   $46         ;'F'
              841c 0057  ld   $57         ;'W'
              841d 003c  ld   $3c         ;'<'
              841e 0036  ld   $36         ;'6'
              841f 0035  ld   $35         ;'5'
              8420 0030  ld   $30         ;'0'
              8421 0030  ld   $30         ;'0'
              8422 0047  ld   $47         ;'G'
              8423 004f  ld   $4f         ;'O'
              8424 0054  ld   $54         ;'T'
              8425 004f  ld   $4f         ;'O'
              8426 0033  ld   $33         ;'3'
              8427 0033  ld   $33         ;'3'
              8428 0033  ld   $33         ;'3'
              8429 0030  ld   $30         ;'0'
              842a 0000  ld   $00         ;'\x00'
              842b 0035  ld   $35
              842c 00a0  ld   $a0
              842d 0010  ld   $10
              842e 0052  ld   $52
              842f 000d  ld   $0d
              8430 0049  ld   $49         ;'I'
              8431 0046  ld   $46         ;'F'
              8432 0055  ld   $55         ;'U'
              8433 003d  ld   $3d         ;'='
              8434 0030  ld   $30         ;'0'
              8435 0047  ld   $47         ;'G'
              8436 004f  ld   $4f         ;'O'
              8437 0054  ld   $54         ;'T'
              8438 004f  ld   $4f         ;'O'
              8439 0032  ld   $32         ;'2'
              843a 0030  ld   $30         ;'0'
              843b 0031  ld   $31         ;'1'
              843c 0030  ld   $30         ;'0'
              843d 0000  ld   $00         ;'\x00'
              843e 0035  ld   $35
              843f 00c0  ld   $c0
              8440 0006  ld   $06
              8441 00aa  ld   $aa
              8442 000f  ld   $0f
              8443 0049  ld   $49         ;'I'
              8444 003d  ld   $3d         ;'='
              8445 0031  ld   $31         ;'1'
              8446 0000  ld   $00         ;'\x00'
              8447 0035  ld   $35
              8448 00e0  ld   $e0
              8449 0007  ld   $07
              844a 00b4  ld   $b4
              844b 000f  ld   $0f
              844c 0054  ld   $54         ;'T'
              844d 003d  ld   $3d         ;'='
              844e 002d  ld   $2d         ;'-'
              844f 0031  ld   $31         ;'1'
              8450 0000  ld   $00         ;'\x00'
              8451 0036  ld   $36
              8452 00a0  ld   $a0
              8453 0006  ld   $06
              8454 00cc  ld   $cc
              8455 0010  ld   $10
              8456 0053  ld   $53         ;'S'
              8457 003d  ld   $3d         ;'='
              8458 0030  ld   $30         ;'0'
              8459 0000  ld   $00         ;'\x00'
              845a 0036  ld   $36
              845b 00c0  ld   $c0
              845c 0015  ld   $15
              845d 00d7  ld   $d7
              845e 0010  ld   $10
              845f 0049  ld   $49         ;'I'
              8460 0046  ld   $46         ;'F'
              8461 0041  ld   $41         ;'A'
              8462 0028  ld   $28         ;'('
              8463 0049  ld   $49         ;'I'
              8464 002b  ld   $2b         ;'+'
              8465 0036  ld   $36         ;'6'
              8466 0029  ld   $29         ;')'
              8467 003e  ld   $3e         ;'>'
              8468 0030  ld   $30         ;'0'
              8469 0047  ld   $47         ;'G'
              846a 004f  ld   $4f         ;'O'
              846b 0054  ld   $54         ;'T'
              846c 004f  ld   $4f         ;'O'
              846d 0034  ld   $34         ;'4'
              846e 0034  ld   $34         ;'4'
              846f 0038  ld   $38         ;'8'
              8470 0030  ld   $30         ;'0'
              8471 0000  ld   $00         ;'\x00'
              8472 0036  ld   $36
              8473 00e0  ld   $e0
              8474 0009  ld   $09
              8475 00e0  ld   $e0
              8476 0010  ld   $10
              8477 0057  ld   $57         ;'W'
              8478 003d  ld   $3d         ;'='
              8479 0036  ld   $36         ;'6'
              847a 0031  ld   $31         ;'1'
              847b 0030  ld   $30         ;'0'
              847c 0030  ld   $30         ;'0'
              847d 0000  ld   $00         ;'\x00'
              847e 0037  ld   $37
              847f 00a0  ld   $a0
              8480 0009  ld   $09
              8481 00ea  ld   $ea
              8482 0010  ld   $10
              8483 0047  ld   $47         ;'G'
              8484 004f  ld   $4f         ;'O'
              8485 0053  ld   $53         ;'S'
              8486 0055  ld   $55         ;'U'
              8487 0042  ld   $42         ;'B'
              8488 0057  ld   $57         ;'W'
              8489 0000  ld   $00         ;'\x00'
              848a 0037  ld   $37
              848b 00c0  ld   $c0
              848c 0010  ld   $10
              848d 00f4  ld   $f4
              848e 0010  ld   $10
              848f 0049  ld   $49         ;'I'
              8490 0046  ld   $46         ;'F'
              8491 004a  ld   $4a         ;'J'
              8492 003d  ld   $3d         ;'='
              8493 0030  ld   $30         ;'0'
              8494 0047  ld   $47         ;'G'
              8495 004f  ld   $4f         ;'O'
              8496 0054  ld   $54         ;'T'
              8497 004f  ld   $4f         ;'O'
              8498 0034  ld   $34         ;'4'
              8499 0034  ld   $34         ;'4'
              849a 0031  ld   $31         ;'1'
              849b 0030  ld   $30         ;'0'
              849c 0000  ld   $00         ;'\x00'
              849d 0037  ld   $37
              849e 00e0  ld   $e0
              849f 000a  ld   $0a
              84a0 00fe  ld   $fe
              84a1 0010  ld   $10
              84a2 004a  ld   $4a         ;'J'
              84a3 003d  ld   $3d         ;'='
              84a4 004c  ld   $4c         ;'L'
              84a5 002b  ld   $2b         ;'+'
              84a6 004d  ld   $4d         ;'M'
              84a7 002b  ld   $2b         ;'+'
              84a8 004e  ld   $4e         ;'N'
              84a9 0000  ld   $00         ;'\x00'
              84aa 0038  ld   $38
              84ab 00a0  ld   $a0
              84ac 0010  ld   $10
              84ad 0009  ld   $09
              84ae 0011  ld   $11
              84af 0049  ld   $49         ;'I'
              84b0 0046  ld   $46         ;'F'
              84b1 004a  ld   $4a         ;'J'
              84b2 003d  ld   $3d         ;'='
              84b3 0034  ld   $34         ;'4'
              84b4 0047  ld   $47         ;'G'
              84b5 004f  ld   $4f         ;'O'
              84b6 0054  ld   $54         ;'T'
              84b7 004f  ld   $4f         ;'O'
              84b8 0034  ld   $34         ;'4'
              84b9 0034  ld   $34         ;'4'
              84ba 0031  ld   $31         ;'1'
              84bb 0030  ld   $30         ;'0'
              84bc 0000  ld   $00         ;'\x00'
              84bd 0038  ld   $38
              84be 00c0  ld   $c0
              84bf 000e  ld   $0e
              84c0 0013  ld   $13
              84c1 0011  ld   $11
              84c2 0049  ld   $49         ;'I'
              84c3 0046  ld   $46         ;'F'
              84c4 004a  ld   $4a         ;'J'
              84c5 003d  ld   $3d         ;'='
              84c6 0032  ld   $32         ;'2'
              84c7 0053  ld   $53         ;'S'
              84c8 003d  ld   $3d         ;'='
              84c9 0053  ld   $53         ;'S'
              84ca 002b  ld   $2b         ;'+'
              84cb 0032  ld   $32         ;'2'
              84cc 0030  ld   $30         ;'0'
              84cd 0000  ld   $00         ;'\x00'
              84ce 0038  ld   $38
              84cf 00e0  ld   $e0
              84d0 000f  ld   $0f
              84d1 001d  ld   $1d
              84d2 0011  ld   $11
              84d3 0049  ld   $49         ;'I'
              84d4 0046  ld   $46         ;'F'
              84d5 004a  ld   $4a         ;'J'
              84d6 003d  ld   $3d         ;'='
              84d7 0036  ld   $36         ;'6'
              84d8 0053  ld   $53         ;'S'
              84d9 003d  ld   $3d         ;'='
              84da 0053  ld   $53         ;'S'
              84db 002b  ld   $2b         ;'+'
              84dc 0031  ld   $31         ;'1'
              84dd 0030  ld   $30         ;'0'
              84de 0030  ld   $30         ;'0'
              84df 0000  ld   $00         ;'\x00'
              84e0 0039  ld   $39
              84e1 00a0  ld   $a0
              84e2 000d  ld   $0d
              84e3 0027  ld   $27
              84e4 0011  ld   $11
              84e5 0049  ld   $49         ;'I'
              84e6 0046  ld   $46         ;'F'
              84e7 004a  ld   $4a         ;'J'
              84e8 003d  ld   $3d         ;'='
              84e9 0030  ld   $30         ;'0'
              84ea 0053  ld   $53         ;'S'
              84eb 003d  ld   $3d         ;'='
              84ec 0053  ld   $53         ;'S'
              84ed 002b  ld   $2b         ;'+'
              84ee 0032  ld   $32         ;'2'
              84ef 0000  ld   $00         ;'\x00'
              84f0 0039  ld   $39
              84f1 00c0  ld   $c0
              84f2 0008  ld   $08
              84f3 0030  ld   $30
              84f4 0011  ld   $11
              84f5 0053  ld   $53         ;'S'
              84f6 003d  ld   $3d         ;'='
              84f7 0053  ld   $53         ;'S'
              84f8 002b  ld   $2b         ;'+'
              84f9 004a  ld   $4a         ;'J'
              84fa 0000  ld   $00         ;'\x00'
              84fb fe00  bra  ac          ;+-----------------------------------+
              84fc fcfd  bra  $84fd       ;|                                   |
              84fd 1418  ld   $18,y       ;| Trampoline for page $8400 lookups |
              84fe e006  jmp  y,$06       ;|                                   |
              84ff c218  st   [$18]       ;+-----------------------------------+
              8500 0039  ld   $39
              8501 00e0  ld   $e0
              8502 000a  ld   $0a
              8503 003a  ld   $3a
              8504 0011  ld   $11
              8505 0057  ld   $57         ;'W'
              8506 003d  ld   $3d         ;'='
              8507 0057  ld   $57         ;'W'
              8508 002b  ld   $2b         ;'+'
              8509 0031  ld   $31         ;'1'
              850a 0030  ld   $30         ;'0'
              850b 0030  ld   $30         ;'0'
              850c 0000  ld   $00         ;'\x00'
              850d 003a  ld   $3a
              850e 00a0  ld   $a0
              850f 0013  ld   $13
              8510 0044  ld   $44
              8511 0011  ld   $11
              8512 0049  ld   $49         ;'I'
              8513 0046  ld   $46         ;'F'
              8514 0057  ld   $57         ;'W'
              8515 003c  ld   $3c         ;'<'
              8516 0036  ld   $36         ;'6'
              8517 0035  ld   $35         ;'5'
              8518 0030  ld   $30         ;'0'
              8519 0030  ld   $30         ;'0'
              851a 0047  ld   $47         ;'G'
              851b 004f  ld   $4f         ;'O'
              851c 0054  ld   $54         ;'T'
              851d 004f  ld   $4f         ;'O'
              851e 0034  ld   $34         ;'4'
              851f 0033  ld   $33         ;'3'
              8520 0033  ld   $33         ;'3'
              8521 0030  ld   $30         ;'0'
              8522 0000  ld   $00         ;'\x00'
              8523 003a  ld   $3a
              8524 00c0  ld   $c0
              8525 0010  ld   $10
              8526 004f  ld   $4f
              8527 0011  ld   $11
              8528 0049  ld   $49         ;'I'
              8529 0046  ld   $46         ;'F'
              852a 0053  ld   $53         ;'S'
              852b 003c  ld   $3c         ;'<'
              852c 0054  ld   $54         ;'T'
              852d 0047  ld   $47         ;'G'
              852e 004f  ld   $4f         ;'O'
              852f 0054  ld   $54         ;'T'
              8530 004f  ld   $4f         ;'O'
              8531 0034  ld   $34         ;'4'
              8532 0034  ld   $34         ;'4'
              8533 0037  ld   $37         ;'7'
              8534 0030  ld   $30         ;'0'
              8535 0000  ld   $00         ;'\x00'
              8536 003a  ld   $3a
              8537 00e0  ld   $e0
              8538 0006  ld   $06
              8539 0058  ld   $58
              853a 0011  ld   $11
              853b 0054  ld   $54         ;'T'
              853c 003d  ld   $3d         ;'='
              853d 0053  ld   $53         ;'S'
              853e 0000  ld   $00         ;'\x00'
              853f 003b  ld   $3b
              8540 00a0  ld   $a0
              8541 0006  ld   $06
              8542 0062  ld   $62
              8543 0011  ld   $11
              8544 0042  ld   $42         ;'B'
              8545 003d  ld   $3d         ;'='
              8546 0049  ld   $49         ;'I'
              8547 0000  ld   $00         ;'\x00'
              8548 003b  ld   $3b
              8549 00c0  ld   $c0
              854a 0008  ld   $08
              854b 0076  ld   $76
              854c 0011  ld   $11
              854d 003f  ld   $3f         ;'?'
              854e 0022  ld   $22         ;'"'
              854f 002e  ld   $2e         ;'.'
              8550 0022  ld   $22         ;'"'
              8551 003b  ld   $3b         ;';'
              8552 0000  ld   $00         ;'\x00'
              8553 003b  ld   $3b
              8554 00e0  ld   $e0
              8555 0008  ld   $08
              8556 0080  ld   $80
              8557 0011  ld   $11
              8558 0049  ld   $49         ;'I'
              8559 003d  ld   $3d         ;'='
              855a 0049  ld   $49         ;'I'
              855b 002b  ld   $2b         ;'+'
              855c 0031  ld   $31         ;'1'
              855d 0000  ld   $00         ;'\x00'
              855e 003c  ld   $3c
              855f 00a0  ld   $a0
              8560 0011  ld   $11
              8561 008a  ld   $8a
              8562 0011  ld   $11
              8563 0049  ld   $49         ;'I'
              8564 0046  ld   $46         ;'F'
              8565 0049  ld   $49         ;'I'
              8566 003c  ld   $3c         ;'<'
              8567 0031  ld   $31         ;'1'
              8568 0030  ld   $30         ;'0'
              8569 0047  ld   $47         ;'G'
              856a 004f  ld   $4f         ;'O'
              856b 0054  ld   $54         ;'T'
              856c 004f  ld   $4f         ;'O'
              856d 0034  ld   $34         ;'4'
              856e 0033  ld   $33         ;'3'
              856f 0030  ld   $30         ;'0'
              8570 0030  ld   $30         ;'0'
              8571 0000  ld   $00         ;'\x00'
              8572 003c  ld   $3c
              8573 00c0  ld   $c0
              8574 000f  ld   $0f
              8575 0094  ld   $94
              8576 0011  ld   $11
              8577 003f  ld   $3f         ;'?'
              8578 0022  ld   $22         ;'"'
              8579 0049  ld   $49         ;'I'
              857a 0020  ld   $20         ;' '
              857b 0050  ld   $50         ;'P'
              857c 004c  ld   $4c         ;'L'
              857d 0041  ld   $41         ;'A'
              857e 0059  ld   $59         ;'Y'
              857f 0020  ld   $20         ;' '
              8580 0022  ld   $22         ;'"'
              8581 003b  ld   $3b         ;';'
              8582 0042  ld   $42         ;'B'
              8583 0000  ld   $00         ;'\x00'
              8584 003c  ld   $3c
              8585 00e0  ld   $e0
              8586 0004  ld   $04
              8587 009e  ld   $9e
              8588 0011  ld   $11
              8589 003f  ld   $3f         ;'?'
              858a 0000  ld   $00         ;'\x00'
              858b 003d  ld   $3d
              858c 00a0  ld   $a0
              858d 000b  ld   $0b
              858e 00a9  ld   $a9
              858f 0011  ld   $11
              8590 0041  ld   $41         ;'A'
              8591 0028  ld   $28         ;'('
              8592 0042  ld   $42         ;'B'
              8593 002b  ld   $2b         ;'+'
              8594 0036  ld   $36         ;'6'
              8595 0029  ld   $29         ;')'
              8596 003d  ld   $3d         ;'='
              8597 0033  ld   $33         ;'3'
              8598 0000  ld   $00         ;'\x00'
              8599 003d  ld   $3d
              859a 00c0  ld   $c0
              859b 0008  ld   $08
              859c 00b2  ld   $b2
              859d 0011  ld   $11
              859e 0055  ld   $55         ;'U'
              859f 003d  ld   $3d         ;'='
              85a0 0055  ld   $55         ;'U'
              85a1 002d  ld   $2d         ;'-'
              85a2 0031  ld   $31         ;'1'
              85a3 0000  ld   $00         ;'\x00'
              85a4 003d  ld   $3d
              85a5 00e0  ld   $e0
              85a6 0012  ld   $12
              85a7 00bd  ld   $bd
              85a8 0011  ld   $11
              85a9 0049  ld   $49         ;'I'
              85aa 0046  ld   $46         ;'F'
              85ab 0054  ld   $54         ;'T'
              85ac 003c  ld   $3c         ;'<'
              85ad 0031  ld   $31         ;'1'
              85ae 0030  ld   $30         ;'0'
              85af 0030  ld   $30         ;'0'
              85b0 0047  ld   $47         ;'G'
              85b1 004f  ld   $4f         ;'O'
              85b2 0054  ld   $54         ;'T'
              85b3 004f  ld   $4f         ;'O'
              85b4 0032  ld   $32         ;'2'
              85b5 0030  ld   $30         ;'0'
              85b6 0031  ld   $31         ;'1'
              85b7 0030  ld   $30         ;'0'
              85b8 0000  ld   $00         ;'\x00'
              85b9 003e  ld   $3e
              85ba 00a0  ld   $a0
              85bb 0006  ld   $06
              85bc 00d0  ld   $d0
              85bd 0011  ld   $11
              85be 0046  ld   $46         ;'F'
              85bf 003d  ld   $3d         ;'='
              85c0 0031  ld   $31         ;'1'
              85c1 0000  ld   $00         ;'\x00'
              85c2 003e  ld   $3e
              85c3 00c0  ld   $c0
              85c4 0006  ld   $06
              85c5 00da  ld   $da
              85c6 0011  ld   $11
              85c7 005a  ld   $5a         ;'Z'
              85c8 003d  ld   $3d         ;'='
              85c9 0031  ld   $31         ;'1'
              85ca 0000  ld   $00         ;'\x00'
              85cb 003e  ld   $3e
              85cc 00e0  ld   $e0
              85cd 000b  ld   $0b
              85ce 00e4  ld   $e4
              85cf 0011  ld   $11
              85d0 0047  ld   $47         ;'G'
              85d1 004f  ld   $4f         ;'O'
              85d2 0054  ld   $54         ;'T'
              85d3 004f  ld   $4f         ;'O'
              85d4 0032  ld   $32         ;'2'
              85d5 0030  ld   $30         ;'0'
              85d6 0031  ld   $31         ;'1'
              85d7 0030  ld   $30         ;'0'
              85d8 0000  ld   $00         ;'\x00'
              85d9 003f  ld   $3f
              85da 00a0  ld   $a0
              85db 0010  ld   $10
              85dc 00d4  ld   $d4
              85dd 0017  ld   $17
              85de 004a  ld   $4a         ;'J'
              85df 003d  ld   $3d         ;'='
              85e0 0028  ld   $28         ;'('
              85e1 0049  ld   $49         ;'I'
              85e2 002d  ld   $2d         ;'-'
              85e3 0031  ld   $31         ;'1'
              85e4 0029  ld   $29         ;')'
              85e5 002f  ld   $2f         ;'/'
              85e6 0033  ld   $33         ;'3'
              85e7 002a  ld   $2a         ;'*'
              85e8 0033  ld   $33         ;'3'
              85e9 002b  ld   $2b         ;'+'
              85ea 0038  ld   $38         ;'8'
              85eb 0000  ld   $00         ;'\x00'
              85ec 003f  ld   $3f
              85ed 00c0  ld   $c0
              85ee 0006  ld   $06
              85ef 00de  ld   $de
              85f0 0017  ld   $17
              85f1 0044  ld   $44         ;'D'
              85f2 003d  ld   $3d         ;'='
              85f3 0031  ld   $31         ;'1'
              85f4 0000  ld   $00         ;'\x00'
              85f5 003f  ld   $3f
              85f6 00e0  ld   $e0
              85f7 000b  ld   $0b
              85f8 00e8  ld   $e8
              85f9 0017  ld   $17
              85fa 0047  ld   $47         ;'G'
              85fb fe00  bra  ac          ;+-----------------------------------+
              85fc fcfd  bra  $85fd       ;|                                   |
              85fd 1418  ld   $18,y       ;| Trampoline for page $8500 lookups |
              85fe e006  jmp  y,$06       ;|                                   |
              85ff c218  st   [$18]       ;+-----------------------------------+
              8600 004f  ld   $4f         ;'O'
              8601 0054  ld   $54         ;'T'
              8602 004f  ld   $4f         ;'O'
              8603 0036  ld   $36         ;'6'
              8604 0035  ld   $35         ;'5'
              8605 0030  ld   $30         ;'0'
              8606 0030  ld   $30         ;'0'
              8607 0000  ld   $00         ;'\x00'
              8608 0040  ld   $40
              8609 00a0  ld   $a0
              860a 0012  ld   $12
              860b 0038  ld   $38
              860c 0018  ld   $18
              860d 004a  ld   $4a         ;'J'
              860e 003d  ld   $3d         ;'='
              860f 0049  ld   $49         ;'I'
              8610 002d  ld   $2d         ;'-'
              8611 0028  ld   $28         ;'('
              8612 0049  ld   $49         ;'I'
              8613 002d  ld   $2d         ;'-'
              8614 0031  ld   $31         ;'1'
              8615 0029  ld   $29         ;')'
              8616 002f  ld   $2f         ;'/'
              8617 0033  ld   $33         ;'3'
              8618 002a  ld   $2a         ;'*'
              8619 0033  ld   $33         ;'3'
              861a 002b  ld   $2b         ;'+'
              861b 0039  ld   $39         ;'9'
              861c 0000  ld   $00         ;'\x00'
              861d 0040  ld   $40
              861e 00c0  ld   $c0
              861f 0006  ld   $06
              8620 0042  ld   $42
              8621 0018  ld   $18
              8622 0044  ld   $44         ;'D'
              8623 003d  ld   $3d         ;'='
              8624 0033  ld   $33         ;'3'
              8625 0000  ld   $00         ;'\x00'
              8626 0040  ld   $40
              8627 00e0  ld   $e0
              8628 000b  ld   $0b
              8629 004c  ld   $4c
              862a 0018  ld   $18
              862b 0047  ld   $47         ;'G'
              862c 004f  ld   $4f         ;'O'
              862d 0054  ld   $54         ;'T'
              862e 004f  ld   $4f         ;'O'
              862f 0036  ld   $36         ;'6'
              8630 0035  ld   $35         ;'5'
              8631 0030  ld   $30         ;'0'
              8632 0030  ld   $30         ;'0'
              8633 0000  ld   $00         ;'\x00'
              8634 0041  ld   $41
              8635 00a0  ld   $a0
              8636 0013  ld   $13
              8637 009c  ld   $9c
              8638 0018  ld   $18
              8639 0049  ld   $49         ;'I'
              863a 0046  ld   $46         ;'F'
              863b 0049  ld   $49         ;'I'
              863c 0025  ld   $25         ;'%'
              863d 0034  ld   $34         ;'4'
              863e 003c  ld   $3c         ;'<'
              863f 003e  ld   $3e         ;'>'
              8640 0031  ld   $31         ;'1'
              8641 0047  ld   $47         ;'G'
              8642 004f  ld   $4f         ;'O'
              8643 0054  ld   $54         ;'T'
              8644 004f  ld   $4f         ;'O'
              8645 0036  ld   $36         ;'6'
              8646 0034  ld   $34         ;'4'
              8647 0034  ld   $34         ;'4'
              8648 0030  ld   $30         ;'0'
              8649 0000  ld   $00         ;'\x00'
              864a 0041  ld   $41
              864b 00c0  ld   $c0
              864c 0006  ld   $06
              864d 00a6  ld   $a6
              864e 0018  ld   $18
              864f 0044  ld   $44         ;'D'
              8650 003d  ld   $3d         ;'='
              8651 0034  ld   $34         ;'4'
              8652 0000  ld   $00         ;'\x00'
              8653 0041  ld   $41
              8654 00e0  ld   $e0
              8655 0007  ld   $07
              8656 00ba  ld   $ba
              8657 0018  ld   $18
              8658 004a  ld   $4a         ;'J'
              8659 003d  ld   $3d         ;'='
              865a 0031  ld   $31         ;'1'
              865b 0031  ld   $31         ;'1'
              865c 0000  ld   $00         ;'\x00'
              865d 0042  ld   $42
              865e 00a0  ld   $a0
              865f 000b  ld   $0b
              8660 00c4  ld   $c4
              8661 0018  ld   $18
              8662 0047  ld   $47         ;'G'
              8663 004f  ld   $4f         ;'O'
              8664 0054  ld   $54         ;'T'
              8665 004f  ld   $4f         ;'O'
              8666 0036  ld   $36         ;'6'
              8667 0035  ld   $35         ;'5'
              8668 0030  ld   $30         ;'0'
              8669 0030  ld   $30         ;'0'
              866a 0000  ld   $00         ;'\x00'
              866b 0042  ld   $42
              866c 00c0  ld   $c0
              866d 0006  ld   $06
              866e 0000  ld   $00
              866f 0019  ld   $19
              8670 0044  ld   $44         ;'D'
              8671 003d  ld   $3d         ;'='
              8672 0032  ld   $32         ;'2'
              8673 0000  ld   $00         ;'\x00'
              8674 0042  ld   $42
              8675 00e0  ld   $e0
              8676 0011  ld   $11
              8677 000b  ld   $0b
              8678 0019  ld   $19
              8679 0049  ld   $49         ;'I'
              867a 0046  ld   $46         ;'F'
              867b 0049  ld   $49         ;'I'
              867c 003c  ld   $3c         ;'<'
              867d 003d  ld   $3d         ;'='
              867e 0031  ld   $31         ;'1'
              867f 0047  ld   $47         ;'G'
              8680 004f  ld   $4f         ;'O'
              8681 0054  ld   $54         ;'T'
              8682 004f  ld   $4f         ;'O'
              8683 0036  ld   $36         ;'6'
              8684 0034  ld   $34         ;'4'
              8685 0034  ld   $34         ;'4'
              8686 0030  ld   $30         ;'0'
              8687 0000  ld   $00         ;'\x00'
              8688 0043  ld   $43
              8689 00a0  ld   $a0
              868a 0011  ld   $11
              868b 000c  ld   $0c
              868c 0019  ld   $19
              868d 0049  ld   $49         ;'I'
              868e 0046  ld   $46         ;'F'
              868f 0049  ld   $49         ;'I'
              8690 003e  ld   $3e         ;'>'
              8691 003d  ld   $3d         ;'='
              8692 0039  ld   $39         ;'9'
              8693 0047  ld   $47         ;'G'
              8694 004f  ld   $4f         ;'O'
              8695 0054  ld   $54         ;'T'
              8696 004f  ld   $4f         ;'O'
              8697 0036  ld   $36         ;'6'
              8698 0034  ld   $34         ;'4'
              8699 0034  ld   $34         ;'4'
              869a 0030  ld   $30         ;'0'
              869b 0000  ld   $00         ;'\x00'
              869c 0043  ld   $43
              869d 00c0  ld   $c0
              869e 0012  ld   $12
              869f 000d  ld   $0d
              86a0 0019  ld   $19
              86a1 0049  ld   $49         ;'I'
              86a2 0046  ld   $46         ;'F'
              86a3 0049  ld   $49         ;'I'
              86a4 0025  ld   $25         ;'%'
              86a5 0032  ld   $32         ;'2'
              86a6 003d  ld   $3d         ;'='
              86a7 0031  ld   $31         ;'1'
              86a8 0047  ld   $47         ;'G'
              86a9 004f  ld   $4f         ;'O'
              86aa 0054  ld   $54         ;'T'
              86ab 004f  ld   $4f         ;'O'
              86ac 0036  ld   $36         ;'6'
              86ad 0033  ld   $33         ;'3'
              86ae 0033  ld   $33         ;'3'
              86af 0030  ld   $30         ;'0'
              86b0 0000  ld   $00         ;'\x00'
              86b1 0043  ld   $43
              86b2 00e0  ld   $e0
              86b3 0006  ld   $06
              86b4 0028  ld   $28
              86b5 0019  ld   $19
              86b6 004a  ld   $4a         ;'J'
              86b7 003d  ld   $3d         ;'='
              86b8 0030  ld   $30         ;'0'
              86b9 0000  ld   $00         ;'\x00'
              86ba 0044  ld   $44
              86bb 00a0  ld   $a0
              86bc 0009  ld   $09
              86bd 0032  ld   $32
              86be 0019  ld   $19
              86bf 0052  ld   $52         ;'R'
              86c0 0045  ld   $45         ;'E'
              86c1 0054  ld   $54         ;'T'
              86c2 0055  ld   $55         ;'U'
              86c3 0052  ld   $52         ;'R'
              86c4 004e  ld   $4e         ;'N'
              86c5 0000  ld   $00         ;'\x00'
              86c6 0044  ld   $44
              86c7 00c0  ld   $c0
              86c8 000b  ld   $0b
              86c9 0064  ld   $64
              86ca 0019  ld   $19
              86cb 004c  ld   $4c         ;'L'
              86cc 003d  ld   $3d         ;'='
              86cd 0041  ld   $41         ;'A'
              86ce 0028  ld   $28         ;'('
              86cf 004a  ld   $4a         ;'J'
              86d0 002d  ld   $2d         ;'-'
              86d1 0044  ld   $44         ;'D'
              86d2 0029  ld   $29         ;')'
              86d3 0000  ld   $00         ;'\x00'
              86d4 0044  ld   $44
              86d5 00e0  ld   $e0
              86d6 0009  ld   $09
              86d7 0066  ld   $66
              86d8 0019  ld   $19
              86d9 004d  ld   $4d         ;'M'
              86da 003d  ld   $3d         ;'='
              86db 0041  ld   $41         ;'A'
              86dc 0028  ld   $28         ;'('
              86dd 004a  ld   $4a         ;'J'
              86de 0029  ld   $29         ;')'
              86df 0000  ld   $00         ;'\x00'
              86e0 0045  ld   $45
              86e1 00a0  ld   $a0
              86e2 000b  ld   $0b
              86e3 006e  ld   $6e
              86e4 0019  ld   $19
              86e5 004e  ld   $4e         ;'N'
              86e6 003d  ld   $3d         ;'='
              86e7 0041  ld   $41         ;'A'
              86e8 0028  ld   $28         ;'('
              86e9 004a  ld   $4a         ;'J'
              86ea 002b  ld   $2b         ;'+'
              86eb 0044  ld   $44         ;'D'
              86ec 0029  ld   $29         ;')'
              86ed 0000  ld   $00         ;'\x00'
              86ee 0045  ld   $45
              86ef 00c0  ld   $c0
              86f0 0009  ld   $09
              86f1 0082  ld   $82
              86f2 0019  ld   $19
              86f3 0052  ld   $52         ;'R'
              86f4 0045  ld   $45         ;'E'
              86f5 0054  ld   $54         ;'T'
              86f6 0055  ld   $55         ;'U'
              86f7 0052  ld   $52         ;'R'
              86f8 004e  ld   $4e         ;'N'
              86f9 0000  ld   $00         ;'\x00'
              86fa 0045  ld   $45
              86fb fe00  bra  ac          ;+-----------------------------------+
              86fc fcfd  bra  $86fd       ;|                                   |
              86fd 1418  ld   $18,y       ;| Trampoline for page $8600 lookups |
              86fe e006  jmp  y,$06       ;|                                   |
              86ff c218  st   [$18]       ;+-----------------------------------+
              8700 00e2  ld   $e2
              8701 0004  ld   $04
              8702 0052  ld   $52         ;'R'
              8703 0055  ld   $55         ;'U'
              8704 004e  ld   $4e         ;'N'
              8705 0000  ld   $00         ;'\x00'
              8706 001b  ld   $1b
              8707 00a0  ld   $a0
              8708 0002  ld   $02
              8709 00e0  ld   $e0
              870a 0045  ld   $45
              870b 0000  ld   $00
              870c 0000  ld   $00         ;End of Apps/TicTac/TicTac_v2.gtb, size 2012
                                          ;+-----------------------------------+
                                          ;| Apps/WozMon/WozMon_v2.gcl         |
                                          ;+-----------------------------------+
              870d dc54  st   $54,[y,x++] ;'T'
              870e dc69  st   $69,[y,x++] ;'i'
              870f dc63  st   $63,[y,x++] ;'c'
              8710 dc54  st   $54,[y,x++] ;'T'
              8711 dc61  st   $61,[y,x++] ;'a'
              8712 dc63  st   $63,[y,x++] ;'c'
              8713 dc00  st   $00,[y,x++] ;'\x00'
              8714 dc00  st   $00,[y,x++] ;'\x00'
              8715 000e  ld   $0e
              8716 c218  st   [$18]
              8717 007f  ld   $7f
              8718 14fa  ld   $fa,y
              8719 e020  jmp  y,$20
              871a c219  st   [$19]
WozMon:       871b 0002  ld   $02         ;| RAM segment address (high byte first)
              871c 0000  ld   $00         ;|
              871d 00e2  ld   $e2         ;| Length (1..256)
              871e 00cd  ld   $cd         ;0200 DEF
              871f 000a  ld   $0a
              8720 002a  ld   $2a
              8721 002a  ld   $2a
              8722 0020  ld   $20
              8723 0057  ld   $57
              8724 006f  ld   $6f
              8725 007a  ld   $7a
              8726 004d  ld   $4d
              8727 006f  ld   $6f
              8728 006e  ld   $6e
              8729 0000  ld   $00
              872a 002b  ld   $2b         ;020c STW
              872b 0030  ld   $30         ;020c 'tmp'
              872c 0011  ld   $11         ;020e LDWI
              872d 00df  ld   $df
              872e 0001  ld   $01
              872f 00f6  ld   $f6         ;0211 DEEK
              8730 002b  ld   $2b         ;0212 STW
              8731 0032  ld   $32         ;0212 'Pos'
              8732 00cd  ld   $cd         ;0214 DEF
              8733 0060  ld   $60
              8734 00e6  ld   $e6         ;0216 SUBI
              8735 0052  ld   $52
              8736 0035  ld   $35         ;0218 BCC
              8737 0053  ld   $53         ;0219 GE
              8738 0022  ld   $22
              8739 00e3  ld   $e3         ;021b ADDI
              873a 0032  ld   $32
              873b 002b  ld   $2b         ;021d STW
              873c 0034  ld   $34         ;021d 'i'
              873d 0011  ld   $11         ;021f LDWI
              873e 0000  ld   $00
              873f 0007  ld   $07
              8740 0090  ld   $90         ;0222 BRA
              8741 0027  ld   $27
              8742 002b  ld   $2b         ;0224 STW
              8743 0034  ld   $34         ;0224 'i'
              8744 0011  ld   $11         ;0226 LDWI
              8745 0000  ld   $00
              8746 0008  ld   $08
              8747 002b  ld   $2b         ;0229 STW
              8748 0036  ld   $36         ;0229 'k'
              8749 0021  ld   $21         ;022b LDW
              874a 0034  ld   $34         ;022b 'i'
              874b 00e9  ld   $e9         ;022d LSLW
              874c 00e9  ld   $e9         ;022e LSLW
              874d 0099  ld   $99         ;022f ADDW
              874e 0034  ld   $34         ;022f 'i'
              874f 0099  ld   $99         ;0231 ADDW
              8750 0036  ld   $36         ;0231 'k'
              8751 002b  ld   $2b         ;0233 STW
              8752 0036  ld   $36         ;0233 'k'
              8753 0011  ld   $11         ;0235 LDWI
              8754 00e1  ld   $e1
              8755 0004  ld   $04
              8756 002b  ld   $2b         ;0238 STW
              8757 0022  ld   $22
              8758 0021  ld   $21         ;023a LDW
              8759 002a  ld   $2a
              875a 002b  ld   $2b         ;023c STW
              875b 0024  ld   $24
              875c 0021  ld   $21         ;023e LDW
              875d 0032  ld   $32         ;023e 'Pos'
              875e 002b  ld   $2b         ;0240 STW
              875f 0028  ld   $28
              8760 00ec  ld   $ec         ;0242 STLW
              8761 00fe  ld   $fe
              8762 00e3  ld   $e3         ;0244 ADDI
              8763 0006  ld   $06
              8764 002b  ld   $2b         ;0246 STW
              8765 0032  ld   $32         ;0246 'Pos'
              8766 0059  ld   $59         ;0248 LDI
              8767 0005  ld   $05
              8768 002b  ld   $2b         ;024a STW
              8769 0034  ld   $34         ;024a 'i'
              876a 0021  ld   $21         ;024c LDW
              876b 0036  ld   $36         ;024c 'k'
              876c 007f  ld   $7f         ;024e LUP
              876d 0000  ld   $00
              876e 005e  ld   $5e         ;0250 ST
              876f 0026  ld   $26
              8770 00b4  ld   $b4         ;0252 SYS
              8771 00cc  ld   $cc
              8772 0093  ld   $93         ;0254 INC
              8773 0036  ld   $36         ;0254 'k'
              8774 0093  ld   $93         ;0256 INC
              8775 0028  ld   $28
              8776 0021  ld   $21         ;0258 LDW
              8777 0034  ld   $34         ;0258 'i'
              8778 00e6  ld   $e6         ;025a SUBI
              8779 0001  ld   $01
              877a 0035  ld   $35         ;025c BCC
              877b 004d  ld   $4d         ;025d GT
              877c 0048  ld   $48
              877d 00ee  ld   $ee         ;025f LDLW
              877e 00fe  ld   $fe
              877f 00ff  ld   $ff         ;0261 RET
              8780 002b  ld   $2b         ;0262 STW
              8781 0038  ld   $38         ;0262 'PrintChar'
              8782 00cd  ld   $cd         ;0264 DEF
              8783 00ad  ld   $ad
              8784 001a  ld   $1a         ;0266 LD
              8785 0032  ld   $32         ;0266 'Pos'
              8786 0035  ld   $35         ;0268 BCC
              8787 003f  ld   $3f         ;0269 EQ
              8788 00ac  ld   $ac
              8789 0011  ld   $11         ;026b LDWI
              878a 00e1  ld   $e1
              878b 0004  ld   $04
              878c 002b  ld   $2b         ;026e STW
              878d 0022  ld   $22
              878e 0011  ld   $11         ;0270 LDWI
              878f 0000  ld   $00
              8790 0008  ld   $08
              8791 005e  ld   $5e         ;0273 ST
              8792 0032  ld   $32         ;0273 'Pos'
              8793 0099  ld   $99         ;0275 ADDW
              8794 0032  ld   $32         ;0275 'Pos'
              8795 0035  ld   $35         ;0277 BCC
              8796 0053  ld   $53         ;0278 GE
              8797 007b  ld   $7b
              8798 0011  ld   $11         ;027a LDWI
              8799 0000  ld   $00
              879a 0008  ld   $08
              879b 002b  ld   $2b         ;027d STW
              879c 0032  ld   $32         ;027d 'Pos'
              879d 002b  ld   $2b         ;027f STW
              879e 0028  ld   $28
              879f 005e  ld   $5e         ;0281 ST
              87a0 0026  ld   $26
              87a1 00b4  ld   $b4         ;0283 SYS
              87a2 00cc  ld   $cc
              87a3 0093  ld   $93         ;0285 INC
              87a4 0028  ld   $28
              87a5 001a  ld   $1a         ;0287 LD
              87a6 0028  ld   $28
              87a7 008c  ld   $8c         ;0289 XORI
              87a8 00a0  ld   $a0
              87a9 0035  ld   $35         ;028b BCC
              87aa 0072  ld   $72         ;028c NE
              87ab 0081  ld   $81
              87ac 0011  ld   $11         ;028e LDWI
              87ad 00ee  ld   $ee
              87ae 0001  ld   $01
              87af 002b  ld   $2b         ;0291 STW
              87b0 0034  ld   $34         ;0291 'i'
              87b1 0021  ld   $21         ;0293 LDW
              87b2 0034  ld   $34         ;0293 'i'
              87b3 00ad  ld   $ad         ;0295 PEEK
              87b4 00e6  ld   $e6         ;0296 SUBI
              87b5 0078  ld   $78
              87b6 0035  ld   $35         ;0298 BCC
              87b7 0053  ld   $53         ;0299 GE
              87b8 009d  ld   $9d
              87b9 008c  ld   $8c         ;029b XORI
              87ba 0080  ld   $80
              87bb 0090  ld   $90         ;029d BRA
              87bc 009f  ld   $9f
              87bd 008c  ld   $8c         ;029f XORI
              87be 0008  ld   $08
              87bf 00f0  ld   $f0         ;02a1 POKE
              87c0 0034  ld   $34         ;02a1 'i'
              87c1 0021  ld   $21         ;02a3 LDW
              87c2 0034  ld   $34         ;02a3 'i'
              87c3 00e6  ld   $e6         ;02a5 SUBI
              87c4 0002  ld   $02
              87c5 002b  ld   $2b         ;02a7 STW
              87c6 0034  ld   $34         ;02a7 'i'
              87c7 008c  ld   $8c         ;02a9 XORI
              87c8 00fe  ld   $fe
              87c9 0035  ld   $35         ;02ab BCC
              87ca 0072  ld   $72         ;02ac NE
              87cb 0091  ld   $91
              87cc 00ff  ld   $ff         ;02ae RET
              87cd 002b  ld   $2b         ;02af STW
              87ce 003a  ld   $3a         ;02af 'CNewline'
              87cf 00cd  ld   $cd         ;02b1 DEF
              87d0 00d9  ld   $d9
              87d1 0075  ld   $75         ;02b3 PUSH
              87d2 002b  ld   $2b         ;02b4 STW
              87d3 0030  ld   $30         ;02b4 'tmp'
              87d4 0011  ld   $11         ;02b6 LDWI
              87d5 0052  ld   $52
              87d6 0006  ld   $06
              87d7 002b  ld   $2b         ;02b9 STW
              87d8 0022  ld   $22
              87d9 0021  ld   $21         ;02bb LDW
              87da 0030  ld   $30         ;02bb 'tmp'
              87db 00b4  ld   $b4         ;02bd SYS
              87dc 00f6  ld   $f6
              87dd 00e6  ld   $e6         ;02bf SUBI
              87de 000a  ld   $0a
              87df 0035  ld   $35         ;02c1 BCC
              87e0 0050  ld   $50         ;02c2 LT
              87e1 00c4  ld   $c4
              87e2 00e3  ld   $e3         ;02c4 ADDI
              87e3 0007  ld   $07
              87e4 00e3  ld   $e3         ;02c6 ADDI
              87e5 003a  ld   $3a
              87e6 00cf  ld   $cf         ;02c8 CALL
              87e7 0038  ld   $38         ;02c8 'PrintChar'
              87e8 0021  ld   $21         ;02ca LDW
              87e9 0030  ld   $30         ;02ca 'tmp'
              87ea 0082  ld   $82         ;02cc ANDI
              87eb 000f  ld   $0f
              87ec 00e6  ld   $e6         ;02ce SUBI
              87ed 000a  ld   $0a
              87ee 0035  ld   $35         ;02d0 BCC
              87ef 0050  ld   $50         ;02d1 LT
              87f0 00d3  ld   $d3
              87f1 00e3  ld   $e3         ;02d3 ADDI
              87f2 0007  ld   $07
              87f3 00e3  ld   $e3         ;02d5 ADDI
              87f4 003a  ld   $3a
              87f5 00cf  ld   $cf         ;02d7 CALL
              87f6 0038  ld   $38         ;02d7 'PrintChar'
              87f7 0063  ld   $63         ;02d9 POP
              87f8 00ff  ld   $ff         ;02da RET
              87f9 002b  ld   $2b         ;02db STW
              87fa 003c  ld   $3c         ;02db 'PrintByte'
              87fb fe00  bra  ac          ;+-----------------------------------+
              87fc fcfd  bra  $87fd       ;|                                   |
              87fd 1418  ld   $18,y       ;| Trampoline for page $8700 lookups |
              87fe e006  jmp  y,$06       ;|                                   |
              87ff c218  st   [$18]       ;+-----------------------------------+
              8800 0011  ld   $11         ;02dd LDWI
              8801 0000  ld   $00
              8802 0003  ld   $03
              8803 00cf  ld   $cf         ;02e0 CALL
              8804 0018  ld   $18         ;02e0 vAC
              8805 0003  ld   $03         ;| RAM segment address (high byte first)
              8806 0000  ld   $00         ;|
              8807 00f3  ld   $f3         ;| Length (1..256)
              8808 00cd  ld   $cd         ;0300 DEF
              8809 00d3  ld   $d3
              880a 0075  ld   $75         ;0302 PUSH
              880b 0059  ld   $59         ;0303 LDI
              880c 0080  ld   $80
              880d 002b  ld   $2b         ;0305 STW
              880e 003e  ld   $3e         ;0305 'Buffer'
              880f 00cf  ld   $cf         ;0307 CALL
              8810 003a  ld   $3a         ;0307 'CNewline'
              8811 0093  ld   $93         ;0309 INC
              8812 003e  ld   $3e         ;0309 'Buffer'
              8813 0021  ld   $21         ;030b LDW
              8814 003e  ld   $3e         ;030b 'Buffer'
              8815 00ad  ld   $ad         ;030d PEEK
              8816 0035  ld   $35         ;030e BCC
              8817 003f  ld   $3f         ;030f EQ
              8818 00d1  ld   $d1
              8819 00e6  ld   $e6         ;0311 SUBI
              881a 002e  ld   $2e
              881b 0035  ld   $35         ;0313 BCC
              881c 0050  ld   $50         ;0314 LT
              881d 0007  ld   $07
              881e 0035  ld   $35         ;0316 BCC
              881f 0072  ld   $72         ;0317 NE
              8820 001d  ld   $1d
              8821 0059  ld   $59         ;0319 LDI
              8822 0001  ld   $01
              8823 002b  ld   $2b         ;031b STW
              8824 0040  ld   $40         ;031b 'Mode'
              8825 0090  ld   $90         ;031d BRA
              8826 0007  ld   $07
              8827 00e6  ld   $e6         ;031f SUBI
              8828 000c  ld   $0c
              8829 0035  ld   $35         ;0321 BCC
              882a 0072  ld   $72         ;0322 NE
              882b 0028  ld   $28
              882c 00e6  ld   $e6         ;0324 SUBI
              882d 0001  ld   $01
              882e 002b  ld   $2b         ;0326 STW
              882f 0040  ld   $40         ;0326 'Mode'
              8830 0090  ld   $90         ;0328 BRA
              8831 0007  ld   $07
              8832 00e6  ld   $e6         ;032a SUBI
              8833 0018  ld   $18
              8834 0035  ld   $35         ;032c BCC
              8835 0072  ld   $72         ;032d NE
              8836 0031  ld   $31
              8837 00cf  ld   $cf         ;032f CALL
              8838 0042  ld   $42         ;032f 'Examine'
              8839 0090  ld   $90         ;0331 BRA
              883a 0007  ld   $07
              883b 0059  ld   $59         ;0333 LDI
              883c 0000  ld   $00
              883d 002b  ld   $2b         ;0335 STW
              883e 0030  ld   $30         ;0335 'tmp'
              883f 002b  ld   $2b         ;0337 STW
              8840 0044  ld   $44         ;0337 'Value'
              8841 00e9  ld   $e9         ;0339 LSLW
              8842 00e9  ld   $e9         ;033a LSLW
              8843 00e9  ld   $e9         ;033b LSLW
              8844 00e9  ld   $e9         ;033c LSLW
              8845 002b  ld   $2b         ;033d STW
              8846 0034  ld   $34         ;033d 'i'
              8847 0021  ld   $21         ;033f LDW
              8848 003e  ld   $3e         ;033f 'Buffer'
              8849 00ad  ld   $ad         ;0341 PEEK
              884a 0093  ld   $93         ;0342 INC
              884b 003e  ld   $3e         ;0342 'Buffer'
              884c 00e6  ld   $e6         ;0344 SUBI
              884d 0030  ld   $30
              884e 0035  ld   $35         ;0346 BCC
              884f 0050  ld   $50         ;0347 LT
              8850 0068  ld   $68
              8851 00e6  ld   $e6         ;0349 SUBI
              8852 000a  ld   $0a
              8853 0035  ld   $35         ;034b BCC
              8854 0053  ld   $53         ;034c GE
              8855 0054  ld   $54
              8856 002b  ld   $2b         ;034e STW
              8857 0030  ld   $30         ;034e 'tmp'
              8858 00e3  ld   $e3         ;0350 ADDI
              8859 000a  ld   $0a
              885a 0099  ld   $99         ;0352 ADDW
              885b 0034  ld   $34         ;0352 'i'
              885c 0090  ld   $90         ;0354 BRA
              885d 0035  ld   $35
              885e 00e6  ld   $e6         ;0356 SUBI
              885f 0006  ld   $06
              8860 0082  ld   $82         ;0358 ANDI
              8861 001f  ld   $1f
              8862 0035  ld   $35         ;035a BCC
              8863 0056  ld   $56         ;035b LE
              8864 0068  ld   $68
              8865 00e6  ld   $e6         ;035d SUBI
              8866 0007  ld   $07
              8867 0035  ld   $35         ;035f BCC
              8868 0053  ld   $53         ;0360 GE
              8869 0068  ld   $68
              886a 002b  ld   $2b         ;0362 STW
              886b 0030  ld   $30         ;0362 'tmp'
              886c 00e3  ld   $e3         ;0364 ADDI
              886d 0010  ld   $10
              886e 0099  ld   $99         ;0366 ADDW
              886f 0034  ld   $34         ;0366 'i'
              8870 0090  ld   $90         ;0368 BRA
              8871 0035  ld   $35
              8872 0021  ld   $21         ;036a LDW
              8873 0030  ld   $30         ;036a 'tmp'
              8874 0035  ld   $35         ;036c BCC
              8875 003f  ld   $3f         ;036d EQ
              8876 00cd  ld   $cd
              8877 0021  ld   $21         ;036f LDW
              8878 003e  ld   $3e         ;036f 'Buffer'
              8879 00e6  ld   $e6         ;0371 SUBI
              887a 0002  ld   $02
              887b 002b  ld   $2b         ;0373 STW
              887c 003e  ld   $3e         ;0373 'Buffer'
              887d 0021  ld   $21         ;0375 LDW
              887e 0040  ld   $40         ;0375 'Mode'
              887f 0035  ld   $35         ;0377 BCC
              8880 0053  ld   $53         ;0378 GE
              8881 0084  ld   $84
              8882 0021  ld   $21         ;037a LDW
              8883 0044  ld   $44         ;037a 'Value'
              8884 00f0  ld   $f0         ;037c POKE
              8885 0046  ld   $46         ;037c 'Store'
              8886 0021  ld   $21         ;037e LDW
              8887 0046  ld   $46         ;037e 'Store'
              8888 00e3  ld   $e3         ;0380 ADDI
              8889 0001  ld   $01
              888a 002b  ld   $2b         ;0382 STW
              888b 0046  ld   $46         ;0382 'Store'
              888c 0090  ld   $90         ;0384 BRA
              888d 0007  ld   $07
              888e 0035  ld   $35         ;0386 BCC
              888f 0072  ld   $72         ;0387 NE
              8890 0091  ld   $91
              8891 00cf  ld   $cf         ;0389 CALL
              8892 003a  ld   $3a         ;0389 'CNewline'
              8893 0021  ld   $21         ;038b LDW
              8894 0044  ld   $44         ;038b 'Value'
              8895 002b  ld   $2b         ;038d STW
              8896 0046  ld   $46         ;038d 'Store'
              8897 00e6  ld   $e6         ;038f SUBI
              8898 0001  ld   $01
              8899 002b  ld   $2b         ;0391 STW
              889a 0042  ld   $42         ;0391 'Examine'
              889b 0021  ld   $21         ;0393 LDW
              889c 0042  ld   $42         ;0393 'Examine'
              889d 00b8  ld   $b8         ;0395 SUBW
              889e 0044  ld   $44         ;0395 'Value'
              889f 0035  ld   $35         ;0397 BCC
              88a0 0053  ld   $53         ;0398 GE
              88a1 00c7  ld   $c7
              88a2 0021  ld   $21         ;039a LDW
              88a3 0042  ld   $42         ;039a 'Examine'
              88a4 00e3  ld   $e3         ;039c ADDI
              88a5 0001  ld   $01
              88a6 002b  ld   $2b         ;039e STW
              88a7 0042  ld   $42         ;039e 'Examine'
              88a8 0082  ld   $82         ;03a0 ANDI
              88a9 0007  ld   $07
              88aa 0035  ld   $35         ;03a2 BCC
              88ab 0072  ld   $72         ;03a3 NE
              88ac 00a5  ld   $a5
              88ad 00cf  ld   $cf         ;03a5 CALL
              88ae 003a  ld   $3a         ;03a5 'CNewline'
              88af 001a  ld   $1a         ;03a7 LD
              88b0 0032  ld   $32         ;03a7 'Pos'
              88b1 0035  ld   $35         ;03a9 BCC
              88b2 0072  ld   $72         ;03aa NE
              88b3 00ba  ld   $ba
              88b4 0059  ld   $59         ;03ac LDI
              88b5 0002  ld   $02
              88b6 005e  ld   $5e         ;03ae ST
              88b7 0032  ld   $32         ;03ae 'Pos'
              88b8 001a  ld   $1a         ;03b0 LD
              88b9 0043  ld   $43         ;03b0 'Examine'+1
              88ba 00cf  ld   $cf         ;03b2 CALL
              88bb 003c  ld   $3c         ;03b2 'PrintByte'
              88bc 001a  ld   $1a         ;03b4 LD
              88bd 0042  ld   $42         ;03b4 'Examine'
              88be 00cf  ld   $cf         ;03b6 CALL
              88bf 003c  ld   $3c         ;03b6 'PrintByte'
              88c0 0059  ld   $59         ;03b8 LDI
              88c1 003a  ld   $3a
              88c2 00cf  ld   $cf         ;03ba CALL
              88c3 0038  ld   $38         ;03ba 'PrintChar'
              88c4 0021  ld   $21         ;03bc LDW
              88c5 0032  ld   $32         ;03bc 'Pos'
              88c6 00e3  ld   $e3         ;03be ADDI
              88c7 0004  ld   $04
              88c8 002b  ld   $2b         ;03c0 STW
              88c9 0032  ld   $32         ;03c0 'Pos'
              88ca 0021  ld   $21         ;03c2 LDW
              88cb 0042  ld   $42         ;03c2 'Examine'
              88cc 00ad  ld   $ad         ;03c4 PEEK
              88cd 00cf  ld   $cf         ;03c5 CALL
              88ce 003c  ld   $3c         ;03c5 'PrintByte'
              88cf 0090  ld   $90         ;03c7 BRA
              88d0 0091  ld   $91
              88d1 0059  ld   $59         ;03c9 LDI
              88d2 0000  ld   $00
              88d3 002b  ld   $2b         ;03cb STW
              88d4 0040  ld   $40         ;03cb 'Mode'
              88d5 0090  ld   $90         ;03cd BRA
              88d6 0007  ld   $07
              88d7 0059  ld   $59         ;03cf LDI
              88d8 005c  ld   $5c
              88d9 00cf  ld   $cf         ;03d1 CALL
              88da 0038  ld   $38         ;03d1 'PrintChar'
              88db 0063  ld   $63         ;03d3 POP
              88dc 00ff  ld   $ff         ;03d4 RET
              88dd 002b  ld   $2b         ;03d5 STW
              88de 0048  ld   $48         ;03d5 'ProcessBuffer'
              88df 0093  ld   $93         ;03d7 INC
              88e0 0032  ld   $32         ;03d7 'Pos'
              88e1 0011  ld   $11         ;03d9 LDWI
              88e2 0020  ld   $20
              88e3 000f  ld   $0f
              88e4 002b  ld   $2b         ;03dc STW
              88e5 002a  ld   $2a
              88e6 005e  ld   $5e         ;03de ST
              88e7 0024  ld   $24
              88e8 00cf  ld   $cf         ;03e0 CALL
              88e9 003a  ld   $3a         ;03e0 'CNewline'
              88ea 0059  ld   $59         ;03e2 LDI
              88eb 002a  ld   $2a
              88ec 00cf  ld   $cf         ;03e4 CALL
              88ed 0038  ld   $38         ;03e4 'PrintChar'
              88ee 0021  ld   $21         ;03e6 LDW
              88ef 0030  ld   $30         ;03e6 'tmp'
              88f0 00ad  ld   $ad         ;03e8 PEEK
              88f1 0093  ld   $93         ;03e9 INC
              88f2 0030  ld   $30         ;03e9 'tmp'
              88f3 0035  ld   $35         ;03eb BCC
              88f4 0072  ld   $72         ;03ec NE
              88f5 00e2  ld   $e2
              88f6 0011  ld   $11         ;03ee LDWI
              88f7 0000  ld   $00
              88f8 0004  ld   $04
              88f9 00cf  ld   $cf         ;03f1 CALL
              88fa 0018  ld   $18         ;03f1 vAC
              88fb fe00  bra  ac          ;+-----------------------------------+
              88fc fcfd  bra  $88fd       ;|                                   |
              88fd 1418  ld   $18,y       ;| Trampoline for page $8800 lookups |
              88fe e006  jmp  y,$06       ;|                                   |
              88ff c218  st   [$18]       ;+-----------------------------------+
              8900 0004  ld   $04         ;| RAM segment address (high byte first)
              8901 0000  ld   $00         ;|
              8902 0072  ld   $72         ;| Length (1..256)
              8903 0059  ld   $59         ;0400 LDI
              8904 0081  ld   $81
              8905 002b  ld   $2b         ;0402 STW
              8906 003e  ld   $3e         ;0402 'Buffer'
              8907 00cf  ld   $cf         ;0404 CALL
              8908 003a  ld   $3a         ;0404 'CNewline'
              8909 0059  ld   $59         ;0406 LDI
              890a 007f  ld   $7f
              890b 005e  ld   $5e         ;0408 ST
              890c 002b  ld   $2b
              890d 00cf  ld   $cf         ;040a CALL
              890e 0038  ld   $38         ;040a 'PrintChar'
              890f 002b  ld   $2b         ;040c STW
              8910 0032  ld   $32         ;040c 'Pos'
              8911 001a  ld   $1a         ;040e LD
              8912 000f  ld   $0f
              8913 002b  ld   $2b         ;0410 STW
              8914 0030  ld   $30         ;0410 'tmp'
              8915 001a  ld   $1a         ;0412 LD
              8916 000f  ld   $0f
              8917 00f0  ld   $f0         ;0414 POKE
              8918 003e  ld   $3e         ;0414 'Buffer'
              8919 00fc  ld   $fc         ;0416 XORW
              891a 0030  ld   $30         ;0416 'tmp'
              891b 0035  ld   $35         ;0418 BCC
              891c 0072  ld   $72         ;0419 NE
              891d 001e  ld   $1e
              891e 0021  ld   $21         ;041b LDW
              891f 003e  ld   $3e         ;041b 'Buffer'
              8920 00ad  ld   $ad         ;041d PEEK
              8921 0090  ld   $90         ;041e BRA
              8922 000e  ld   $0e
              8923 0021  ld   $21         ;0420 LDW
              8924 003e  ld   $3e         ;0420 'Buffer'
              8925 00ad  ld   $ad         ;0422 PEEK
              8926 008c  ld   $8c         ;0423 XORI
              8927 000a  ld   $0a
              8928 0035  ld   $35         ;0425 BCC
              8929 003f  ld   $3f         ;0426 EQ
              892a 0060  ld   $60
              892b 008c  ld   $8c         ;0428 XORI
              892c 0075  ld   $75
              892d 0035  ld   $35         ;042a BCC
              892e 0072  ld   $72         ;042b NE
              892f 0042  ld   $42
              8930 0059  ld   $59         ;042d LDI
              8931 0020  ld   $20
              8932 00cf  ld   $cf         ;042f CALL
              8933 0038  ld   $38         ;042f 'PrintChar'
              8934 002b  ld   $2b         ;0431 STW
              8935 0032  ld   $32         ;0431 'Pos'
              8936 001a  ld   $1a         ;0433 LD
              8937 0032  ld   $32         ;0433 'Pos'
              8938 00e6  ld   $e6         ;0435 SUBI
              8939 0006  ld   $06
              893a 0035  ld   $35         ;0437 BCC
              893b 0050  ld   $50         ;0438 LT
              893c 0040  ld   $40
              893d 005e  ld   $5e         ;043a ST
              893e 0032  ld   $32         ;043a 'Pos'
              893f 0021  ld   $21         ;043c LDW
              8940 003e  ld   $3e         ;043c 'Buffer'
              8941 00e6  ld   $e6         ;043e SUBI
              8942 0001  ld   $01
              8943 002b  ld   $2b         ;0440 STW
              8944 003e  ld   $3e         ;0440 'Buffer'
              8945 0090  ld   $90         ;0442 BRA
              8946 0004  ld   $04
              8947 00e6  ld   $e6         ;0444 SUBI
              8948 0060  ld   $60
              8949 0035  ld   $35         ;0446 BCC
              894a 0053  ld   $53         ;0447 GE
              894b 0004  ld   $04
              894c 001a  ld   $1a         ;0449 LD
              894d 0032  ld   $32         ;0449 'Pos'
              894e 008c  ld   $8c         ;044b XORI
              894f 0096  ld   $96
              8950 0035  ld   $35         ;044d BCC
              8951 0072  ld   $72         ;044e NE
              8952 0057  ld   $57
              8953 0059  ld   $59         ;0450 LDI
              8954 005c  ld   $5c
              8955 00cf  ld   $cf         ;0452 CALL
              8956 0038  ld   $38         ;0452 'PrintChar'
              8957 0011  ld   $11         ;0454 LDWI
              8958 0000  ld   $00
              8959 0004  ld   $04
              895a 00cf  ld   $cf         ;0457 CALL
              895b 0018  ld   $18         ;0457 vAC
              895c 0021  ld   $21         ;0459 LDW
              895d 003e  ld   $3e         ;0459 'Buffer'
              895e 00ad  ld   $ad         ;045b PEEK
              895f 00cf  ld   $cf         ;045c CALL
              8960 0038  ld   $38         ;045c 'PrintChar'
              8961 0093  ld   $93         ;045e INC
              8962 003e  ld   $3e         ;045e 'Buffer'
              8963 0090  ld   $90         ;0460 BRA
              8964 0004  ld   $04
              8965 00f0  ld   $f0         ;0462 POKE
              8966 003e  ld   $3e         ;0462 'Buffer'
              8967 002b  ld   $2b         ;0464 STW
              8968 0040  ld   $40         ;0464 'Mode'
              8969 0059  ld   $59         ;0466 LDI
              896a 0020  ld   $20
              896b 00cf  ld   $cf         ;0468 CALL
              896c 0038  ld   $38         ;0468 'PrintChar'
              896d 0059  ld   $59         ;046a LDI
              896e 000f  ld   $0f
              896f 005e  ld   $5e         ;046c ST
              8970 002b  ld   $2b
              8971 00cf  ld   $cf         ;046e CALL
              8972 0048  ld   $48         ;046e 'ProcessBuffer'
              8973 0090  ld   $90         ;0470 BRA
              8974 00fe  ld   $fe
              8975 0000  ld   $00         ;End of Apps/WozMon/WozMon_v2.gcl, size 603
                                          ;+-----------------------------------+
                                          ;| Apps/Apple-1/Apple-1_v2.gt1       |
                                          ;+-----------------------------------+
              8976 dc57  st   $57,[y,x++] ;'W'
              8977 dc6f  st   $6f,[y,x++] ;'o'
              8978 dc7a  st   $7a,[y,x++] ;'z'
              8979 dc4d  st   $4d,[y,x++] ;'M'
              897a dc6f  st   $6f,[y,x++] ;'o'
              897b dc6e  st   $6e,[y,x++] ;'n'
              897c dc00  st   $00,[y,x++] ;'\x00'
              897d dc00  st   $00,[y,x++] ;'\x00'
              897e 001b  ld   $1b
              897f c218  st   [$18]
              8980 0087  ld   $87
              8981 14fa  ld   $fa,y
              8982 e020  jmp  y,$20
              8983 c219  st   [$19]
Apple1:       8984 0002  ld   $02
              8985 0000  ld   $00
              8986 0054  ld   $54
              8987 001a  ld   $1a
              8988 0021  ld   $21
              8989 00e6  ld   $e6
              898a 0040  ld   $40
              898b 0035  ld   $35
              898c 0053  ld   $53
              898d 000b  ld   $0b
              898e 0021  ld   $21
              898f 000e  ld   $0e
              8990 00f3  ld   $f3
              8991 0017  ld   $17
              8992 0090  ld   $90
              8993 0005  ld   $05
              8994 0059  ld   $59
              8995 00a0  ld   $a0
              8996 002b  ld   $2b
              8997 0024  ld   $24
              8998 0011  ld   $11
              8999 0060  ld   $60
              899a 007e  ld   $7e
              899b 002b  ld   $2b
              899c 0026  ld   $26
              899d 0011  ld   $11
              899e 0003  ld   $03
              899f 000b  ld   $0b
              89a0 002b  ld   $2b
              89a1 0022  ld   $22
              89a2 00b4  ld   $b4
              89a3 00f3  ld   $f3
              89a4 0011  ld   $11
              89a5 00ee  ld   $ee
              89a6 0001  ld   $01
              89a7 002b  ld   $2b
              89a8 007a  ld   $7a
              89a9 0059  ld   $59
              89aa 007e  ld   $7e
              89ab 00f0  ld   $f0
              89ac 007a  ld   $7a
              89ad 001a  ld   $1a
              89ae 007a  ld   $7a
              89af 00e6  ld   $e6
              89b0 0002  ld   $02
              89b1 005e  ld   $5e
              89b2 007a  ld   $7a
              89b3 0035  ld   $35
              89b4 0053  ld   $53
              89b5 0020  ld   $20
              89b6 0011  ld   $11
              89b7 0001  ld   $01
              89b8 0001  ld   $01
              89b9 002b  ld   $2b
              89ba 007a  ld   $7a
              89bb 0059  ld   $59
              89bc 0060  ld   $60
              89bd 00f0  ld   $f0
              89be 007a  ld   $7a
              89bf 0011  ld   $11
              89c0 00ff  ld   $ff
              89c1 0010  ld   $10
              89c2 002b  ld   $2b
              89c3 007a  ld   $7a
              89c4 0011  ld   $11
              89c5 00f6  ld   $f6
              89c6 0001  ld   $01
              89c7 002b  ld   $2b
              89c8 007c  ld   $7c
              89c9 0011  ld   $11
              89ca 0000  ld   $00
              89cb 005e  ld   $5e
              89cc 00f3  ld   $f3
              89cd 007c  ld   $7c
              89ce 0059  ld   $59
              89cf 00fe  ld   $fe
              89d0 005e  ld   $5e
              89d1 000e  ld   $0e
              89d2 0011  ld   $11
              89d3 0000  ld   $00
              89d4 005f  ld   $5f
              89d5 002b  ld   $2b
              89d6 001a  ld   $1a
              89d7 0011  ld   $11
              89d8 00ac  ld   $ac
              89d9 005e  ld   $5e
              89da 00ff  ld   $ff
              89db 0003  ld   $03
              89dc 0000  ld   $00
              89dd 00cf  ld   $cf
              89de 00a2  ld   $a2
              89df 0024  ld   $24
              89e0 00bd  ld   $bd
              89e1 0093  ld   $93
              89e2 0003  ld   $03
              89e3 0020  ld   $20
              89e4 00ef  ld   $ef
              89e5 00ff  ld   $ff
              89e6 00ca  ld   $ca
              89e7 00d0  ld   $d0
              89e8 00f7  ld   $f7
              89e9 0086  ld   $86
              89ea 00e2  ld   $e2
              89eb 00e6  ld   $e6
              89ec 00e3  ld   $e3
              89ed 00d0  ld   $d0
              89ee 0002  ld   $02
              89ef 00e6  ld   $e6
              89f0 00e4  ld   $e4
              89f1 00ad  ld   $ad
              89f2 0011  ld   $11
              89f3 00d0  ld   $d0
              89f4 0010  ld   $10
              89f5 00f5  ld   $f5
              89f6 0020  ld   $20
              89f7 00c6  ld   $c6
              89f8 0003  ld   $03
              89f9 00e6  ld   $e6
              89fa 00e2  ld   $e2
              89fb fe00  bra  ac          ;+-----------------------------------+
              89fc fcfd  bra  $89fd       ;|                                   |
              89fd 1418  ld   $18,y       ;| Trampoline for page $8900 lookups |
              89fe e006  jmp  y,$06       ;|                                   |
              89ff c218  st   [$18]       ;+-----------------------------------+
              8a00 00a5  ld   $a5
              8a01 00e2  ld   $e2
              8a02 0029  ld   $29
              8a03 000f  ld   $0f
              8a04 00c9  ld   $c9
              8a05 000a  ld   $0a
              8a06 00b0  ld   $b0
              8a07 00f6  ld   $f6
              8a08 0020  ld   $20
              8a09 00c1  ld   $c1
              8a0a 0003  ld   $03
              8a0b 00a5  ld   $a5
              8a0c 00e2  ld   $e2
              8a0d 0020  ld   $20
              8a0e 00dc  ld   $dc
              8a0f 00ff  ld   $ff
              8a10 00a9  ld   $a9
              8a11 00a0  ld   $a0
              8a12 00a8  ld   $a8
              8a13 0020  ld   $20
              8a14 00ef  ld   $ef
              8a15 00ff  ld   $ff
              8a16 00a5  ld   $a5
              8a17 00e3  ld   $e3
              8a18 0085  ld   $85
              8a19 00e5  ld   $e5
              8a1a 00a5  ld   $a5
              8a1b 00e4  ld   $e4
              8a1c 00a2  ld   $a2
              8a1d 0005  ld   $05
              8a1e 0094  ld   $94
              8a1f 00e5  ld   $e5
              8a20 00a0  ld   $a0
              8a21 0003  ld   $03
              8a22 004a  ld   $4a
              8a23 0026  ld   $26
              8a24 00e5  ld   $e5
              8a25 0036  ld   $36
              8a26 00e5  ld   $e5
              8a27 0088  ld   $88
              8a28 00d0  ld   $d0
              8a29 00f8  ld   $f8
              8a2a 00ca  ld   $ca
              8a2b 00d0  ld   $d0
              8a2c 00f1  ld   $f1
              8a2d 0020  ld   $20
              8a2e 00c6  ld   $c6
              8a2f 0003  ld   $03
              8a30 0020  ld   $20
              8a31 00ef  ld   $ef
              8a32 00ff  ld   $ff
              8a33 0049  ld   $49
              8a34 00b0  ld   $b0
              8a35 00c9  ld   $c9
              8a36 0008  ld   $08
              8a37 00b0  ld   $b0
              8a38 00cf  ld   $cf
              8a39 0095  ld   $95
              8a3a 00ef  ld   $ef
              8a3b 00ca  ld   $ca
              8a3c 00e0  ld   $e0
              8a3d 00fb  ld   $fb
              8a3e 00d0  ld   $d0
              8a3f 00ed  ld   $ed
              8a40 00a0  ld   $a0
              8a41 00fb  ld   $fb
              8a42 00a9  ld   $a9
              8a43 00a0  ld   $a0
              8a44 0020  ld   $20
              8a45 00ef  ld   $ef
              8a46 00ff  ld   $ff
              8a47 00b5  ld   $b5
              8a48 00f0  ld   $f0
              8a49 00d5  ld   $d5
              8a4a 00eb  ld   $eb
              8a4b 00d0  ld   $d0
              8a4c 000d  ld   $0d
              8a4d 0094  ld   $94
              8a4e 00eb  ld   $eb
              8a4f 00a9  ld   $a9
              8a50 00ab  ld   $ab
              8a51 0095  ld   $95
              8a52 00f0  ld   $f0
              8a53 00c8  ld   $c8
              8a54 00d0  ld   $d0
              8a55 00ee  ld   $ee
              8a56 00a2  ld   $a2
              8a57 002d  ld   $2d
              8a58 00d0  ld   $d0
              8a59 008b  ld   $8b
              8a5a 00e8  ld   $e8
              8a5b 00d0  ld   $d0
              8a5c 00ea  ld   $ea
              8a5d 00a0  ld   $a0
              8a5e 00fb  ld   $fb
              8a5f 00b6  ld   $b6
              8a60 00f0  ld   $f0
              8a61 008a  ld   $8a
              8a62 00a2  ld   $a2
              8a63 00fb  ld   $fb
              8a64 00d5  ld   $d5
              8a65 00eb  ld   $eb
              8a66 00d0  ld   $d0
              8a67 0007  ld   $07
              8a68 0094  ld   $94
              8a69 00eb  ld   $eb
              8a6a 00a9  ld   $a9
              8a6b 00ad  ld   $ad
              8a6c 0020  ld   $20
              8a6d 00ef  ld   $ef
              8a6e 00ff  ld   $ff
              8a6f 00e8  ld   $e8
              8a70 00d0  ld   $d0
              8a71 00f2  ld   $f2
              8a72 00c8  ld   $c8
              8a73 00d0  ld   $d0
              8a74 00ea  ld   $ea
              8a75 00f0  ld   $f0
              8a76 0087  ld   $87
              8a77 00bf  ld   $bf
              8a78 00d9  ld   $d9
              8a79 00c4  ld   $c4
              8a7a 00c1  ld   $c1
              8a7b 00c5  ld   $c5
              8a7c 00d2  ld   $d2
              8a7d 008d  ld   $8d
              8a7e 008d  ld   $8d
              8a7f 00b7  ld   $b7
              8a80 00ad  ld   $ad
              8a81 00b0  ld   $b0
              8a82 00a0  ld   $a0
              8a83 00cd  ld   $cd
              8a84 00cf  ld   $cf
              8a85 00d2  ld   $d2
              8a86 00c6  ld   $c6
              8a87 00a0  ld   $a0
              8a88 00d3  ld   $d3
              8a89 00d4  ld   $d4
              8a8a 00c9  ld   $c9
              8a8b 00c7  ld   $c7
              8a8c 00c9  ld   $c9
              8a8d 00c4  ld   $c4
              8a8e 00a0  ld   $a0
              8a8f 00c5  ld   $c5
              8a90 00d6  ld   $d6
              8a91 00c9  ld   $c9
              8a92 00c6  ld   $c6
              8a93 00a0  ld   $a0
              8a94 00d3  ld   $d3
              8a95 00d3  ld   $d3
              8a96 00c5  ld   $c5
              8a97 00d5  ld   $d5
              8a98 00c7  ld   $c7
              8a99 008d  ld   $8d
              8a9a 008d  ld   $8d
              8a9b 00ce  ld   $ce
              8a9c 00c9  ld   $c9
              8a9d 00d7  ld   $d7
              8a9e 00a0  ld   $a0
              8a9f 00d5  ld   $d5
              8aa0 00cf  ld   $cf
              8aa1 00d9  ld   $d9
              8aa2 00a0  ld   $a0
              8aa3 00ab  ld   $ab
              8aa4 00a9  ld   $a9
              8aa5 008d  ld   $8d
              8aa6 004c  ld   $4c
              8aa7 00ef  ld   $ef
              8aa8 00ff  ld   $ff
              8aa9 00ad  ld   $ad
              8aaa 0011  ld   $11
              8aab 00d0  ld   $d0
              8aac 0010  ld   $10
              8aad 00fb  ld   $fb
              8aae 00ad  ld   $ad
              8aaf 0010  ld   $10
              8ab0 00d0  ld   $d0
              8ab1 0060  ld   $60
              8ab2 0004  ld   $04
              8ab3 0000  ld   $00
              8ab4 0000  ld   $00
              8ab5 00d8  ld   $d8
              8ab6 00a2  ld   $a2
              8ab7 00ff  ld   $ff
              8ab8 009a  ld   $9a
              8ab9 00a9  ld   $a9
              8aba 002a  ld   $2a
              8abb 0085  ld   $85
              8abc 005a  ld   $5a
              8abd 0020  ld   $20
              8abe 0055  ld   $55
              8abf 0005  ld   $05
              8ac0 00a9  ld   $a9
              8ac1 008b  ld   $8b
              8ac2 0085  ld   $85
              8ac3 0058  ld   $58
              8ac4 00a9  ld   $a9
              8ac5 0006  ld   $06
              8ac6 0085  ld   $85
              8ac7 0059  ld   $59
              8ac8 0020  ld   $20
              8ac9 00ad  ld   $ad
              8aca 0004  ld   $04
              8acb 0020  ld   $20
              8acc 00cb  ld   $cb
              8acd 0004  ld   $04
              8ace 00d0  ld   $d0
              8acf 000e  ld   $0e
              8ad0 00a9  ld   $a9
              8ad1 00be  ld   $be
              8ad2 0085  ld   $85
              8ad3 0058  ld   $58
              8ad4 00a9  ld   $a9
              8ad5 0006  ld   $06
              8ad6 0085  ld   $85
              8ad7 0059  ld   $59
              8ad8 0020  ld   $20
              8ad9 00ad  ld   $ad
              8ada 0004  ld   $04
              8adb 0020  ld   $20
              8adc 00e8  ld   $e8
              8add 0004  ld   $04
              8ade 0020  ld   $20
              8adf 001f  ld   $1f
              8ae0 0006  ld   $06
              8ae1 0020  ld   $20
              8ae2 006a  ld   $6a
              8ae3 0005  ld   $05
              8ae4 0020  ld   $20
              8ae5 00e8  ld   $e8
              8ae6 0004  ld   $04
              8ae7 0020  ld   $20
              8ae8 00a8  ld   $a8
              8ae9 0004  ld   $04
              8aea 0020  ld   $20
              8aeb 0009  ld   $09
              8aec 0005  ld   $05
              8aed 0020  ld   $20
              8aee 0027  ld   $27
              8aef 0005  ld   $05
              8af0 0020  ld   $20
              8af1 00bb  ld   $bb
              8af2 0004  ld   $04
              8af3 00c9  ld   $c9
              8af4 0051  ld   $51
              8af5 00d0  ld   $d0
              8af6 0003  ld   $03
              8af7 004c  ld   $4c
              8af8 009a  ld   $9a
              8af9 0004  ld   $04
              8afa 0020  ld   $20
              8afb fe00  bra  ac          ;+-----------------------------------+
              8afc fcfd  bra  $8afd       ;|                                   |
              8afd 1418  ld   $18,y       ;| Trampoline for page $8a00 lookups |
              8afe e006  jmp  y,$06       ;|                                   |
              8aff c218  st   [$18]       ;+-----------------------------------+
              8b00 009e  ld   $9e
              8b01 0005  ld   $05
              8b02 00a5  ld   $a5
              8b03 0051  ld   $51
              8b04 00c9  ld   $c9
              8b05 0010  ld   $10
              8b06 00d0  ld   $d0
              8b07 000a  ld   $0a
              8b08 00c6  ld   $c6
              8b09 005d  ld   $5d
              8b0a 00f0  ld   $f0
              8b0b 00b6  ld   $b6
              8b0c 0020  ld   $20
              8b0d 0038  ld   $38
              8b0e 0005  ld   $05
              8b0f 004c  ld   $4c
              8b10 003b  ld   $3b
              8b11 0004  ld   $04
              8b12 0020  ld   $20
              8b13 00e8  ld   $e8
              8b14 0004  ld   $04
              8b15 0020  ld   $20
              8b16 00a8  ld   $a8
              8b17 0004  ld   $04
              8b18 0020  ld   $20
              8b19 000c  ld   $0c
              8b1a 0006  ld   $06
              8b1b 00f0  ld   $f0
              8b1c 0003  ld   $03
              8b1d 004c  ld   $4c
              8b1e 0035  ld   $35
              8b1f 0004  ld   $04
              8b20 0020  ld   $20
              8b21 0043  ld   $43
              8b22 0005  ld   $05
              8b23 00a9  ld   $a9
              8b24 008e  ld   $8e
              8b25 0085  ld   $85
              8b26 0058  ld   $58
              8b27 00a9  ld   $a9
              8b28 0007  ld   $07
              8b29 0085  ld   $85
              8b2a 0059  ld   $59
              8b2b 0020  ld   $20
              8b2c 00ad  ld   $ad
              8b2d 0004  ld   $04
              8b2e 00a5  ld   $a5
              8b2f 0055  ld   $55
              8b30 0020  ld   $20
              8b31 00ef  ld   $ef
              8b32 00ff  ld   $ff
              8b33 00a9  ld   $a9
              8b34 00a3  ld   $a3
              8b35 0085  ld   $85
              8b36 0058  ld   $58
              8b37 00a9  ld   $a9
              8b38 0007  ld   $07
              8b39 0085  ld   $85
              8b3a 0059  ld   $59
              8b3b 0020  ld   $20
              8b3c 00ad  ld   $ad
              8b3d 0004  ld   $04
              8b3e 0020  ld   $20
              8b3f 0027  ld   $27
              8b40 0005  ld   $05
              8b41 00a9  ld   $a9
              8b42 00bb  ld   $bb
              8b43 0085  ld   $85
              8b44 0058  ld   $58
              8b45 00a9  ld   $a9
              8b46 0007  ld   $07
              8b47 0085  ld   $85
              8b48 0059  ld   $59
              8b49 0020  ld   $20
              8b4a 00ad  ld   $ad
              8b4b 0004  ld   $04
              8b4c 0020  ld   $20
              8b4d 00cb  ld   $cb
              8b4e 0004  ld   $04
              8b4f 00d0  ld   $d0
              8b50 0003  ld   $03
              8b51 004c  ld   $4c
              8b52 0029  ld   $29
              8b53 0004  ld   $04
              8b54 00a9  ld   $a9
              8b55 00d0  ld   $d0
              8b56 0085  ld   $85
              8b57 0058  ld   $58
              8b58 00a9  ld   $a9
              8b59 0007  ld   $07
              8b5a 0085  ld   $85
              8b5b 0059  ld   $59
              8b5c 0020  ld   $20
              8b5d 00ad  ld   $ad
              8b5e 0004  ld   $04
              8b5f 004c  ld   $4c
              8b60 0000  ld   $00
              8b61 00c1  ld   $c1
              8b62 00a9  ld   $a9
              8b63 000d  ld   $0d
              8b64 004c  ld   $4c
              8b65 00ef  ld   $ef
              8b66 00ff  ld   $ff
              8b67 00a0  ld   $a0
              8b68 0000  ld   $00
              8b69 00b1  ld   $b1
              8b6a 0058  ld   $58
              8b6b 00f0  ld   $f0
              8b6c 0007  ld   $07
              8b6d 0020  ld   $20
              8b6e 00ef  ld   $ef
              8b6f 00ff  ld   $ff
              8b70 00c8  ld   $c8
              8b71 004c  ld   $4c
              8b72 00af  ld   $af
              8b73 0004  ld   $04
              8b74 0060  ld   $60
              8b75 0020  ld   $20
              8b76 00de  ld   $de
              8b77 0004  ld   $04
              8b78 00ad  ld   $ad
              8b79 0011  ld   $11
              8b7a 00d0  ld   $d0
              8b7b 0010  ld   $10
              8b7c 00f8  ld   $f8
              8b7d 00ad  ld   $ad
              8b7e 0010  ld   $10
              8b7f 00d0  ld   $d0
              8b80 0029  ld   $29
              8b81 007f  ld   $7f
              8b82 004c  ld   $4c
              8b83 00ef  ld   $ef
              8b84 00ff  ld   $ff
              8b85 0020  ld   $20
              8b86 00bb  ld   $bb
              8b87 0004  ld   $04
              8b88 00c9  ld   $c9
              8b89 004e  ld   $4e
              8b8a 00f0  ld   $f0
              8b8b 000a  ld   $0a
              8b8c 00c9  ld   $c9
              8b8d 0059  ld   $59
              8b8e 00f0  ld   $f0
              8b8f 0007  ld   $07
              8b90 0020  ld   $20
              8b91 0038  ld   $38
              8b92 0005  ld   $05
              8b93 004c  ld   $4c
              8b94 00cb  ld   $cb
              8b95 0004  ld   $04
              8b96 00ba  ld   $ba
              8b97 0060  ld   $60
              8b98 00a5  ld   $a5
              8b99 005a  ld   $5a
              8b9a 000a  ld   $0a
              8b9b 0090  ld   $90
              8b9c 0002  ld   $02
              8b9d 0049  ld   $49
              8b9e 00a9  ld   $a9
              8b9f 0085  ld   $85
              8ba0 005a  ld   $5a
              8ba1 0060  ld   $60
              8ba2 0020  ld   $20
              8ba3 00a8  ld   $a8
              8ba4 0004  ld   $04
              8ba5 0020  ld   $20
              8ba6 00a8  ld   $a8
              8ba7 0004  ld   $04
              8ba8 00a2  ld   $a2
              8ba9 0000  ld   $00
              8baa 00a0  ld   $a0
              8bab 0004  ld   $04
              8bac 00b5  ld   $b5
              8bad 0040  ld   $40
              8bae 0020  ld   $20
              8baf 00ef  ld   $ef
              8bb0 00ff  ld   $ff
              8bb1 0088  ld   $88
              8bb2 00d0  ld   $d0
              8bb3 0005  ld   $05
              8bb4 00a0  ld   $a0
              8bb5 0004  ld   $04
              8bb6 0020  ld   $20
              8bb7 00a8  ld   $a8
              8bb8 0004  ld   $04
              8bb9 00e8  ld   $e8
              8bba 0005  ld   $05
              8bbb 0000  ld   $00
              8bbc 0000  ld   $00
              8bbd 00e0  ld   $e0
              8bbe 0010  ld   $10
              8bbf 00d0  ld   $d0
              8bc0 00ee  ld   $ee
              8bc1 00a9  ld   $a9
              8bc2 0008  ld   $08
              8bc3 0085  ld   $85
              8bc4 005d  ld   $5d
              8bc5 0060  ld   $60
              8bc6 00e6  ld   $e6
              8bc7 0056  ld   $56
              8bc8 00a5  ld   $a5
              8bc9 0056  ld   $56
              8bca 0029  ld   $29
              8bcb 000f  ld   $0f
              8bcc 00c9  ld   $c9
              8bcd 000a  ld   $0a
              8bce 00b0  ld   $b0
              8bcf 00f6  ld   $f6
              8bd0 00a5  ld   $a5
              8bd1 0056  ld   $56
              8bd2 0038  ld   $38
              8bd3 00e9  ld   $e9
              8bd4 00a0  ld   $a0
              8bd5 0090  ld   $90
              8bd6 000c  ld   $0c
              8bd7 0085  ld   $85
              8bd8 0056  ld   $56
              8bd9 00e6  ld   $e6
              8bda 0057  ld   $57
              8bdb 00a5  ld   $a5
              8bdc 0057  ld   $57
              8bdd 0029  ld   $29
              8bde 000f  ld   $0f
              8bdf 00c9  ld   $c9
              8be0 000a  ld   $0a
              8be1 00b0  ld   $b0
              8be2 00f6  ld   $f6
              8be3 0060  ld   $60
              8be4 00a5  ld   $a5
              8be5 0057  ld   $57
              8be6 00f0  ld   $f0
              8be7 0003  ld   $03
              8be8 0020  ld   $20
              8be9 00dc  ld   $dc
              8bea 00ff  ld   $ff
              8beb 00a5  ld   $a5
              8bec 0056  ld   $56
              8bed 0020  ld   $20
              8bee 00dc  ld   $dc
              8bef 00ff  ld   $ff
              8bf0 00a9  ld   $a9
              8bf1 0020  ld   $20
              8bf2 004c  ld   $4c
              8bf3 00ef  ld   $ef
              8bf4 00ff  ld   $ff
              8bf5 00a9  ld   $a9
              8bf6 007a  ld   $7a
              8bf7 0085  ld   $85
              8bf8 0058  ld   $58
              8bf9 00a9  ld   $a9
              8bfa 0007  ld   $07
              8bfb fe00  bra  ac          ;+-----------------------------------+
              8bfc fcfd  bra  $8bfd       ;|                                   |
              8bfd 1418  ld   $18,y       ;| Trampoline for page $8b00 lookups |
              8bfe e006  jmp  y,$06       ;|                                   |
              8bff c218  st   [$18]       ;+-----------------------------------+
              8c00 0085  ld   $85
              8c01 0059  ld   $59
              8c02 004c  ld   $4c
              8c03 00ad  ld   $ad
              8c04 0004  ld   $04
              8c05 00a5  ld   $a5
              8c06 005a  ld   $5a
              8c07 0029  ld   $29
              8c08 0038  ld   $38
              8c09 00aa  ld   $aa
              8c0a 00bd  ld   $bd
              8c0b 0049  ld   $49
              8c0c 0006  ld   $06
              8c0d 00f0  ld   $f0
              8c0e 0007  ld   $07
              8c0f 0020  ld   $20
              8c10 00ef  ld   $ef
              8c11 00ff  ld   $ff
              8c12 00e8  ld   $e8
              8c13 004c  ld   $4c
              8c14 0048  ld   $48
              8c15 0005  ld   $05
              8c16 0060  ld   $60
              8c17 00a9  ld   $a9
              8c18 0020  ld   $20
              8c19 0085  ld   $85
              8c1a 004f  ld   $4f
              8c1b 00a9  ld   $a9
              8c1c 000f  ld   $0f
              8c1d 0085  ld   $85
              8c1e 0052  ld   $52
              8c1f 00a2  ld   $a2
              8c20 000f  ld   $0f
              8c21 00a0  ld   $a0
              8c22 004f  ld   $4f
              8c23 0098  ld   $98
              8c24 009d  ld   $9d
              8c25 003f  ld   $3f
              8c26 0000  ld   $00
              8c27 0088  ld   $88
              8c28 00ca  ld   $ca
              8c29 00d0  ld   $d0
              8c2a 00f8  ld   $f8
              8c2b 0060  ld   $60
              8c2c 00a9  ld   $a9
              8c2d 0000  ld   $00
              8c2e 0085  ld   $85
              8c2f 0056  ld   $56
              8c30 0085  ld   $85
              8c31 0057  ld   $57
              8c32 0085  ld   $85
              8c33 005c  ld   $5c
              8c34 00a6  ld   $a6
              8c35 0055  ld   $55
              8c36 00bd  ld   $bd
              8c37 0013  ld   $13
              8c38 0006  ld   $06
              8c39 0085  ld   $85
              8c3a 005b  ld   $5b
              8c3b 0020  ld   $20
              8c3c 00de  ld   $de
              8c3d 0004  ld   $04
              8c3e 00a5  ld   $a5
              8c3f 005a  ld   $5a
              8c40 0029  ld   $29
              8c41 000f  ld   $0f
              8c42 0018  ld   $18
              8c43 0069  ld   $69
              8c44 0041  ld   $41
              8c45 00c5  ld   $c5
              8c46 005c  ld   $5c
              8c47 00f0  ld   $f0
              8c48 00f2  ld   $f2
              8c49 0020  ld   $20
              8c4a 009e  ld   $9e
              8c4b 0005  ld   $05
              8c4c 00a5  ld   $a5
              8c4d 0051  ld   $51
              8c4e 00c9  ld   $c9
              8c4f 0010  ld   $10
              8c50 00f0  ld   $f0
              8c51 00e9  ld   $e9
              8c52 00a5  ld   $a5
              8c53 0050  ld   $50
              8c54 0085  ld   $85
              8c55 005c  ld   $5c
              8c56 00c6  ld   $c6
              8c57 005b  ld   $5b
              8c58 00d0  ld   $d0
              8c59 00e1  ld   $e1
              8c5a 0020  ld   $20
              8c5b 000c  ld   $0c
              8c5c 0006  ld   $06
              8c5d 00f0  ld   $f0
              8c5e 00cd  ld   $cd
              8c5f 0060  ld   $60
              8c60 0085  ld   $85
              8c61 0050  ld   $50
              8c62 00c9  ld   $c9
              8c63 0020  ld   $20
              8c64 00f0  ld   $f0
              8c65 003c  ld   $3c
              8c66 00a2  ld   $a2
              8c67 0000  ld   $00
              8c68 00b5  ld   $b5
              8c69 0040  ld   $40
              8c6a 00c5  ld   $c5
              8c6b 0050  ld   $50
              8c6c 00f0  ld   $f0
              8c6d 0008  ld   $08
              8c6e 00e8  ld   $e8
              8c6f 00e0  ld   $e0
              8c70 0010  ld   $10
              8c71 00d0  ld   $d0
              8c72 00f5  ld   $f5
              8c73 004c  ld   $4c
              8c74 00e0  ld   $e0
              8c75 0005  ld   $05
              8c76 0086  ld   $86
              8c77 0051  ld   $51
              8c78 008a  ld   $8a
              8c79 0029  ld   $29
              8c7a 000c  ld   $0c
              8c7b 0085  ld   $85
              8c7c 0053  ld   $53
              8c7d 00a5  ld   $a5
              8c7e 0052  ld   $52
              8c7f 0029  ld   $29
              8c80 000c  ld   $0c
              8c81 00c5  ld   $c5
              8c82 0053  ld   $53
              8c83 00d0  ld   $d0
              8c84 0010  ld   $10
              8c85 008a  ld   $8a
              8c86 0038  ld   $38
              8c87 00e5  ld   $e5
              8c88 0052  ld   $52
              8c89 0010  ld   $10
              8c8a 0005  ld   $05
              8c8b 00a9  ld   $a9
              8c8c 00ff  ld   $ff
              8c8d 004c  ld   $4c
              8c8e 00f2  ld   $f2
              8c8f 0005  ld   $05
              8c90 00a9  ld   $a9
              8c91 0001  ld   $01
              8c92 004c  ld   $4c
              8c93 00f2  ld   $f2
              8c94 0005  ld   $05
              8c95 008a  ld   $8a
              8c96 0029  ld   $29
              8c97 0003  ld   $03
              8c98 0085  ld   $85
              8c99 0053  ld   $53
              8c9a 00a5  ld   $a5
              8c9b 0052  ld   $52
              8c9c 0029  ld   $29
              8c9d 0003  ld   $03
              8c9e 00c5  ld   $c5
              8c9f 0053  ld   $53
              8ca0 00f0  ld   $f0
              8ca1 0005  ld   $05
              8ca2 00a2  ld   $a2
              8ca3 0010  ld   $10
              8ca4 0086  ld   $86
              8ca5 0051  ld   $51
              8ca6 0060  ld   $60
              8ca7 008a  ld   $8a
              8ca8 0038  ld   $38
              8ca9 00e5  ld   $e5
              8caa 0052  ld   $52
              8cab 0010  ld   $10
              8cac 0005  ld   $05
              8cad 00a9  ld   $a9
              8cae 00fc  ld   $fc
              8caf 004c  ld   $4c
              8cb0 00f2  ld   $f2
              8cb1 0005  ld   $05
              8cb2 00a9  ld   $a9
              8cb3 0004  ld   $04
              8cb4 0085  ld   $85
              8cb5 0054  ld   $54
              8cb6 00a5  ld   $a5
              8cb7 0052  ld   $52
              8cb8 00aa  ld   $aa
              8cb9 0018  ld   $18
              8cba 0065  ld   $65
              8cbb 0054  ld   $54
              8cbc 00a8  ld   $a8
              8cbd 00b9  ld   $b9
              8cbe 0040  ld   $40
              8cbf 0000  ld   $00
              8cc0 0095  ld   $95
              8cc1 0040  ld   $40
              8cc2 0006  ld   $06
              8cc3 0000  ld   $00
              8cc4 0000  ld   $00
              8cc5 00a9  ld   $a9
              8cc6 0020  ld   $20
              8cc7 0099  ld   $99
              8cc8 0040  ld   $40
              8cc9 0000  ld   $00
              8cca 0084  ld   $84
              8ccb 0052  ld   $52
              8ccc 00c4  ld   $c4
              8ccd 0051  ld   $51
              8cce 00d0  ld   $d0
              8ccf 00e9  ld   $e9
              8cd0 0060  ld   $60
              8cd1 00a2  ld   $a2
              8cd2 000f  ld   $0f
              8cd3 00a9  ld   $a9
              8cd4 004f  ld   $4f
              8cd5 0085  ld   $85
              8cd6 0053  ld   $53
              8cd7 00bd  ld   $bd
              8cd8 003f  ld   $3f
              8cd9 0000  ld   $00
              8cda 00c5  ld   $c5
              8cdb 0053  ld   $53
              8cdc 00d0  ld   $d0
              8cdd 0005  ld   $05
              8cde 00c6  ld   $c6
              8cdf 0053  ld   $53
              8ce0 00ca  ld   $ca
              8ce1 00d0  ld   $d0
              8ce2 00f4  ld   $f4
              8ce3 0060  ld   $60
              8ce4 00a9  ld   $a9
              8ce5 0060  ld   $60
              8ce6 0085  ld   $85
              8ce7 0058  ld   $58
              8ce8 00a9  ld   $a9
              8ce9 0007  ld   $07
              8cea 0085  ld   $85
              8ceb 0059  ld   $59
              8cec 0020  ld   $20
              8ced 00ad  ld   $ad
              8cee 0004  ld   $04
              8cef 0020  ld   $20
              8cf0 00bb  ld   $bb
              8cf1 0004  ld   $04
              8cf2 0085  ld   $85
              8cf3 0055  ld   $55
              8cf4 00c9  ld   $c9
              8cf5 0031  ld   $31
              8cf6 0010  ld   $10
              8cf7 0003  ld   $03
              8cf8 004c  ld   $4c
              8cf9 003e  ld   $3e
              8cfa 0006  ld   $06
              8cfb fe00  bra  ac          ;+-----------------------------------+
              8cfc fcfd  bra  $8cfd       ;|                                   |
              8cfd 1418  ld   $18,y       ;| Trampoline for page $8c00 lookups |
              8cfe e006  jmp  y,$06       ;|                                   |
              8cff c218  st   [$18]       ;+-----------------------------------+
              8d00 00a9  ld   $a9
              8d01 0035  ld   $35
              8d02 0038  ld   $38
              8d03 00e5  ld   $e5
              8d04 0055  ld   $55
              8d05 0030  ld   $30
              8d06 0001  ld   $01
              8d07 0060  ld   $60
              8d08 0020  ld   $20
              8d09 0038  ld   $38
              8d0a 0005  ld   $05
              8d0b 004c  ld   $4c
              8d0c 002a  ld   $2a
              8d0d 0006  ld   $06
              8d0e 0003  ld   $03
              8d0f 0009  ld   $09
              8d10 0013  ld   $13
              8d11 0023  ld   $23
              8d12 00ff  ld   $ff
              8d13 0048  ld   $48
              8d14 004f  ld   $4f
              8d15 004f  ld   $4f
              8d16 0052  ld   $52
              8d17 0041  ld   $41
              8d18 0059  ld   $59
              8d19 0021  ld   $21
              8d1a 0000  ld   $00
              8d1b 0048  ld   $48
              8d1c 0055  ld   $55
              8d1d 005a  ld   $5a
              8d1e 005a  ld   $5a
              8d1f 0041  ld   $41
              8d20 0048  ld   $48
              8d21 0021  ld   $21
              8d22 0000  ld   $00
              8d23 0057  ld   $57
              8d24 004f  ld   $4f
              8d25 004f  ld   $4f
              8d26 0048  ld   $48
              8d27 004f  ld   $4f
              8d28 004f  ld   $4f
              8d29 0021  ld   $21
              8d2a 0000  ld   $00
              8d2b 0059  ld   $59
              8d2c 0049  ld   $49
              8d2d 0050  ld   $50
              8d2e 0050  ld   $50
              8d2f 0049  ld   $49
              8d30 0045  ld   $45
              8d31 0021  ld   $21
              8d32 0000  ld   $00
              8d33 0053  ld   $53
              8d34 0057  ld   $57
              8d35 0045  ld   $45
              8d36 0045  ld   $45
              8d37 0054  ld   $54
              8d38 0021  ld   $21
              8d39 0000  ld   $00
              8d3a 0000  ld   $00
              8d3b 0043  ld   $43
              8d3c 004f  ld   $4f
              8d3d 004f  ld   $4f
              8d3e 004c  ld   $4c
              8d3f 0021  ld   $21
              8d40 0000  ld   $00
              8d41 0000  ld   $00
              8d42 0000  ld   $00
              8d43 004e  ld   $4e
              8d44 0049  ld   $49
              8d45 0043  ld   $43
              8d46 0045  ld   $45
              8d47 0021  ld   $21
              8d48 0000  ld   $00
              8d49 0000  ld   $00
              8d4a 0000  ld   $00
              8d4b 0047  ld   $47
              8d4c 0041  ld   $41
              8d4d 0044  ld   $44
              8d4e 005a  ld   $5a
              8d4f 004f  ld   $4f
              8d50 004f  ld   $4f
              8d51 004b  ld   $4b
              8d52 0053  ld   $53
              8d53 0021  ld   $21
              8d54 0000  ld   $00
              8d55 000d  ld   $0d
              8d56 000d  ld   $0d
              8d57 0031  ld   $31
              8d58 0035  ld   $35
              8d59 0020  ld   $20
              8d5a 0050  ld   $50
              8d5b 0055  ld   $55
              8d5c 005a  ld   $5a
              8d5d 005a  ld   $5a
              8d5e 004c  ld   $4c
              8d5f 0045  ld   $45
              8d60 0020  ld   $20
              8d61 002d  ld   $2d
              8d62 0020  ld   $20
              8d63 0042  ld   $42
              8d64 0059  ld   $59
              8d65 0020  ld   $20
              8d66 004a  ld   $4a
              8d67 0045  ld   $45
              8d68 0046  ld   $46
              8d69 0046  ld   $46
              8d6a 0020  ld   $20
              8d6b 004a  ld   $4a
              8d6c 0045  ld   $45
              8d6d 0054  ld   $54
              8d6e 0054  ld   $54
              8d6f 004f  ld   $4f
              8d70 004e  ld   $4e
              8d71 000d  ld   $0d
              8d72 000d  ld   $0d
              8d73 0049  ld   $49
              8d74 004e  ld   $4e
              8d75 0053  ld   $53
              8d76 0054  ld   $54
              8d77 0052  ld   $52
              8d78 0055  ld   $55
              8d79 0043  ld   $43
              8d7a 0054  ld   $54
              8d7b 0049  ld   $49
              8d7c 004f  ld   $4f
              8d7d 004e  ld   $4e
              8d7e 0053  ld   $53
              8d7f 0020  ld   $20
              8d80 0028  ld   $28
              8d81 0059  ld   $59
              8d82 002f  ld   $2f
              8d83 004e  ld   $4e
              8d84 0029  ld   $29
              8d85 003f  ld   $3f
              8d86 0020  ld   $20
              8d87 0000  ld   $00
              8d88 000d  ld   $0d
              8d89 000d  ld   $0d
              8d8a 0054  ld   $54
              8d8b 0059  ld   $59
              8d8c 0050  ld   $50
              8d8d 0045  ld   $45
              8d8e 0020  ld   $20
              8d8f 0041  ld   $41
              8d90 0020  ld   $20
              8d91 004c  ld   $4c
              8d92 0045  ld   $45
              8d93 0054  ld   $54
              8d94 0054  ld   $54
              8d95 0045  ld   $45
              8d96 0052  ld   $52
              8d97 0020  ld   $20
              8d98 004f  ld   $4f
              8d99 004e  ld   $4e
              8d9a 0020  ld   $20
              8d9b 0054  ld   $54
              8d9c 0048  ld   $48
              8d9d 0045  ld   $45
              8d9e 0020  ld   $20
              8d9f 0053  ld   $53
              8da0 0041  ld   $41
              8da1 004d  ld   $4d
              8da2 0045  ld   $45
              8da3 000d  ld   $0d
              8da4 0052  ld   $52
              8da5 004f  ld   $4f
              8da6 0057  ld   $57
              8da7 0020  ld   $20
              8da8 004f  ld   $4f
              8da9 0052  ld   $52
              8daa 0020  ld   $20
              8dab 0043  ld   $43
              8dac 004f  ld   $4f
              8dad 004c  ld   $4c
              8dae 0055  ld   $55
              8daf 004d  ld   $4d
              8db0 004e  ld   $4e
              8db1 0020  ld   $20
              8db2 0041  ld   $41
              8db3 0053  ld   $53
              8db4 0020  ld   $20
              8db5 0054  ld   $54
              8db6 0048  ld   $48
              8db7 0045  ld   $45
              8db8 0020  ld   $20
              8db9 0045  ld   $45
              8dba 004d  ld   $4d
              8dbb 0050  ld   $50
              8dbc 0054  ld   $54
              8dbd 0059  ld   $59
              8dbe 000d  ld   $0d
              8dbf 0053  ld   $53
              8dc0 0050  ld   $50
              8dc1 0041  ld   $41
              8dc2 0043  ld   $43
              8dc3 0045  ld   $45
              8dc4 0020  ld   $20
              8dc5 0054  ld   $54
              8dc6 004f  ld   $4f
              8dc7 0020  ld   $20
              8dc8 0053  ld   $53
              8dc9 004c  ld   $4c
              8dca 0007  ld   $07
              8dcb 0000  ld   $00
              8dcc 00d8  ld   $d8
              8dcd 0049  ld   $49
              8dce 0044  ld   $44
              8dcf 0045  ld   $45
              8dd0 0020  ld   $20
              8dd1 0054  ld   $54
              8dd2 0048  ld   $48
              8dd3 0041  ld   $41
              8dd4 0054  ld   $54
              8dd5 0020  ld   $20
              8dd6 004c  ld   $4c
              8dd7 0045  ld   $45
              8dd8 0054  ld   $54
              8dd9 0054  ld   $54
              8dda 0045  ld   $45
              8ddb 0052  ld   $52
              8ddc 000d  ld   $0d
              8ddd 0028  ld   $28
              8dde 0041  ld   $41
              8ddf 004e  ld   $4e
              8de0 0044  ld   $44
              8de1 0020  ld   $20
              8de2 0041  ld   $41
              8de3 004e  ld   $4e
              8de4 0059  ld   $59
              8de5 0020  ld   $20
              8de6 0042  ld   $42
              8de7 0045  ld   $45
              8de8 0054  ld   $54
              8de9 0057  ld   $57
              8dea 0045  ld   $45
              8deb 0045  ld   $45
              8dec 004e  ld   $4e
              8ded 0029  ld   $29
              8dee 0020  ld   $20
              8def 0054  ld   $54
              8df0 004f  ld   $4f
              8df1 0057  ld   $57
              8df2 0041  ld   $41
              8df3 0052  ld   $52
              8df4 0044  ld   $44
              8df5 0053  ld   $53
              8df6 000d  ld   $0d
              8df7 0054  ld   $54
              8df8 0048  ld   $48
              8df9 0045  ld   $45
              8dfa 0020  ld   $20
              8dfb fe00  bra  ac          ;+-----------------------------------+
              8dfc fcfd  bra  $8dfd       ;|                                   |
              8dfd 1418  ld   $18,y       ;| Trampoline for page $8d00 lookups |
              8dfe e006  jmp  y,$06       ;|                                   |
              8dff c218  st   [$18]       ;+-----------------------------------+
              8e00 0053  ld   $53
              8e01 0050  ld   $50
              8e02 0041  ld   $41
              8e03 0043  ld   $43
              8e04 0045  ld   $45
              8e05 002e  ld   $2e
              8e06 0020  ld   $20
              8e07 0054  ld   $54
              8e08 0059  ld   $59
              8e09 0050  ld   $50
              8e0a 0045  ld   $45
              8e0b 0020  ld   $20
              8e0c 0051  ld   $51
              8e0d 0020  ld   $20
              8e0e 0054  ld   $54
              8e0f 004f  ld   $4f
              8e10 0020  ld   $20
              8e11 0051  ld   $51
              8e12 0055  ld   $55
              8e13 0049  ld   $49
              8e14 0054  ld   $54
              8e15 002e  ld   $2e
              8e16 000d  ld   $0d
              8e17 0054  ld   $54
              8e18 0048  ld   $48
              8e19 0049  ld   $49
              8e1a 0053  ld   $53
              8e1b 0020  ld   $20
              8e1c 0049  ld   $49
              8e1d 0053  ld   $53
              8e1e 0020  ld   $20
              8e1f 0054  ld   $54
              8e20 0048  ld   $48
              8e21 0045  ld   $45
              8e22 0020  ld   $20
              8e23 0053  ld   $53
              8e24 004f  ld   $4f
              8e25 004c  ld   $4c
              8e26 0056  ld   $56
              8e27 0045  ld   $45
              8e28 0044  ld   $44
              8e29 0020  ld   $20
              8e2a 0050  ld   $50
              8e2b 0055  ld   $55
              8e2c 005a  ld   $5a
              8e2d 005a  ld   $5a
              8e2e 004c  ld   $4c
              8e2f 0045  ld   $45
              8e30 003a  ld   $3a
              8e31 0000  ld   $00
              8e32 000d  ld   $0d
              8e33 0044  ld   $44
              8e34 0049  ld   $49
              8e35 0046  ld   $46
              8e36 0046  ld   $46
              8e37 0049  ld   $49
              8e38 0043  ld   $43
              8e39 0055  ld   $55
              8e3a 004c  ld   $4c
              8e3b 0054  ld   $54
              8e3c 0059  ld   $59
              8e3d 0020  ld   $20
              8e3e 004c  ld   $4c
              8e3f 0045  ld   $45
              8e40 0056  ld   $56
              8e41 0045  ld   $45
              8e42 004c  ld   $4c
              8e43 0020  ld   $20
              8e44 0028  ld   $28
              8e45 0031  ld   $31
              8e46 002d  ld   $2d
              8e47 0035  ld   $35
              8e48 0029  ld   $29
              8e49 003f  ld   $3f
              8e4a 0020  ld   $20
              8e4b 0000  ld   $00
              8e4c 000d  ld   $0d
              8e4d 0053  ld   $53
              8e4e 004f  ld   $4f
              8e4f 0052  ld   $52
              8e50 0052  ld   $52
              8e51 0059  ld   $59
              8e52 002e  ld   $2e
              8e53 0020  ld   $20
              8e54 0054  ld   $54
              8e55 0052  ld   $52
              8e56 0059  ld   $59
              8e57 0020  ld   $20
              8e58 0041  ld   $41
              8e59 0047  ld   $47
              8e5a 0041  ld   $41
              8e5b 0049  ld   $49
              8e5c 004e  ld   $4e
              8e5d 003a  ld   $3a
              8e5e 0020  ld   $20
              8e5f 0000  ld   $00
              8e60 0020  ld   $20
              8e61 0059  ld   $59
              8e62 004f  ld   $4f
              8e63 0055  ld   $55
              8e64 0020  ld   $20
              8e65 0053  ld   $53
              8e66 004f  ld   $4f
              8e67 004c  ld   $4c
              8e68 0056  ld   $56
              8e69 0045  ld   $45
              8e6a 0044  ld   $44
              8e6b 000d  ld   $0d
              8e6c 0041  ld   $41
              8e6d 0020  ld   $20
              8e6e 004c  ld   $4c
              8e6f 0045  ld   $45
              8e70 0056  ld   $56
              8e71 0045  ld   $45
              8e72 004c  ld   $4c
              8e73 0020  ld   $20
              8e74 0000  ld   $00
              8e75 0020  ld   $20
              8e76 0050  ld   $50
              8e77 0055  ld   $55
              8e78 005a  ld   $5a
              8e79 005a  ld   $5a
              8e7a 004c  ld   $4c
              8e7b 0045  ld   $45
              8e7c 0021  ld   $21
              8e7d 000d  ld   $0d
              8e7e 000d  ld   $0d
              8e7f 0054  ld   $54
              8e80 004f  ld   $4f
              8e81 0054  ld   $54
              8e82 0041  ld   $41
              8e83 004c  ld   $4c
              8e84 0020  ld   $20
              8e85 004d  ld   $4d
              8e86 004f  ld   $4f
              8e87 0056  ld   $56
              8e88 0045  ld   $45
              8e89 0053  ld   $53
              8e8a 003a  ld   $3a
              8e8b 0020  ld   $20
              8e8c 0000  ld   $00
              8e8d 000d  ld   $0d
              8e8e 000d  ld   $0d
              8e8f 0050  ld   $50
              8e90 004c  ld   $4c
              8e91 0041  ld   $41
              8e92 0059  ld   $59
              8e93 0020  ld   $20
              8e94 0041  ld   $41
              8e95 0047  ld   $47
              8e96 0041  ld   $41
              8e97 0049  ld   $49
              8e98 004e  ld   $4e
              8e99 0020  ld   $20
              8e9a 0028  ld   $28
              8e9b 0059  ld   $59
              8e9c 002f  ld   $2f
              8e9d 004e  ld   $4e
              8e9e 0029  ld   $29
              8e9f 003f  ld   $3f
              8ea0 0020  ld   $20
              8ea1 0000  ld   $00
              8ea2 000d  ld   $0d
              8ea3 000d  ld   $0d
              8ea4 0042  ld   $42
              8ea5 0059  ld   $59
              8ea6 0045  ld   $45
              8ea7 0021  ld   $21
              8ea8 000d  ld   $0d
              8ea9 0000  ld   $00
              8eaa 000b  ld   $0b
              8eab 00e5  ld   $e5
              8eac 001b  ld   $1b
              8ead 0020  ld   $20
              8eae 00ef  ld   $ef
              8eaf 00ff  ld   $ff
              8eb0 00e8  ld   $e8
              8eb1 00bd  ld   $bd
              8eb2 00f1  ld   $f1
              8eb3 000b  ld   $0b
              8eb4 00d0  ld   $d0
              8eb5 00f7  ld   $f7
              8eb6 004c  ld   $4c
              8eb7 009d  ld   $9d
              8eb8 000c  ld   $0c
              8eb9 000d  ld   $0d
              8eba 0055  ld   $55
              8ebb 0053  ld   $53
              8ebc 0041  ld   $41
              8ebd 0047  ld   $47
              8ebe 0045  ld   $45
              8ebf 003a  ld   $3a
              8ec0 000d  ld   $0d
              8ec1 0020  ld   $20
              8ec2 0021  ld   $21
              8ec3 0038  ld   $38
              8ec4 0030  ld   $30
              8ec5 0030  ld   $30
              8ec6 003a  ld   $3a
              8ec7 0050  ld   $50
              8ec8 000c  ld   $0c
              8ec9 0000  ld   $00
              8eca 008a  ld   $8a
              8ecb 0048  ld   $48
              8ecc 0041  ld   $41
              8ecd 0020  ld   $20
              8ece 0020  ld   $20
              8ecf 0020  ld   $20
              8ed0 0020  ld   $20
              8ed1 0041  ld   $41
              8ed2 0053  ld   $53
              8ed3 0053  ld   $53
              8ed4 0045  ld   $45
              8ed5 004d  ld   $4d
              8ed6 0042  ld   $42
              8ed7 004c  ld   $4c
              8ed8 0045  ld   $45
              8ed9 0020  ld   $20
              8eda 0031  ld   $31
              8edb 0053  ld   $53
              8edc 0054  ld   $54
              8edd 000d  ld   $0d
              8ede 0020  ld   $20
              8edf 0021  ld   $21
              8ee0 0020  ld   $20
              8ee1 004c  ld   $4c
              8ee2 0044  ld   $44
              8ee3 0041  ld   $41
              8ee4 0020  ld   $20
              8ee5 0023  ld   $23
              8ee6 0031  ld   $31
              8ee7 0020  ld   $20
              8ee8 0020  ld   $20
              8ee9 0020  ld   $20
              8eea 0020  ld   $20
              8eeb 0041  ld   $41
              8eec 0053  ld   $53
              8eed 0053  ld   $53
              8eee 0045  ld   $45
              8eef 004d  ld   $4d
              8ef0 0042  ld   $42
              8ef1 004c  ld   $4c
              8ef2 0045  ld   $45
              8ef3 0020  ld   $20
              8ef4 004e  ld   $4e
              8ef5 0045  ld   $45
              8ef6 0058  ld   $58
              8ef7 0054  ld   $54
              8ef8 000d  ld   $0d
              8ef9 0020  ld   $20
              8efa 0021  ld   $21
              8efb fe00  bra  ac          ;+-----------------------------------+
              8efc fcfd  bra  $8efd       ;|                                   |
              8efd 1418  ld   $18,y       ;| Trampoline for page $8e00 lookups |
              8efe e006  jmp  y,$06       ;|                                   |
              8eff c218  st   [$18]       ;+-----------------------------------+
              8f00 0038  ld   $38
              8f01 0030  ld   $30
              8f02 0030  ld   $30
              8f03 004c  ld   $4c
              8f04 0020  ld   $20
              8f05 0020  ld   $20
              8f06 0020  ld   $20
              * 7 times
              8f0b 0044  ld   $44
              8f0c 0049  ld   $49
              8f0d 0053  ld   $53
              8f0e 0041  ld   $41
              8f0f 0053  ld   $53
              8f10 0053  ld   $53
              8f11 0045  ld   $45
              8f12 004d  ld   $4d
              8f13 0042  ld   $42
              8f14 004c  ld   $4c
              8f15 0045  ld   $45
              8f16 000d  ld   $0d
              8f17 0020  ld   $20
              8f18 0021  ld   $21
              8f19 004c  ld   $4c
              8f1a 0020  ld   $20
              8f1b 0020  ld   $20
              8f1c 0020  ld   $20
              * 10 times
              8f24 004e  ld   $4e
              8f25 0045  ld   $45
              8f26 0058  ld   $58
              8f27 0054  ld   $54
              8f28 0020  ld   $20
              8f29 0053  ld   $53
              8f2a 0043  ld   $43
              8f2b 0052  ld   $52
              8f2c 0045  ld   $45
              8f2d 0045  ld   $45
              8f2e 004e  ld   $4e
              8f2f 000d  ld   $0d
              8f30 0020  ld   $20
              8f31 0021  ld   $21
              8f32 0028  ld   $28
              8f33 0052  ld   $52
              8f34 0045  ld   $45
              8f35 0054  ld   $54
              8f36 0055  ld   $55
              8f37 0052  ld   $52
              8f38 004e  ld   $4e
              8f39 0029  ld   $29
              8f3a 0020  ld   $20
              8f3b 0020  ld   $20
              8f3c 0020  ld   $20
              8f3d 0045  ld   $45
              8f3e 0058  ld   $58
              8f3f 0049  ld   $49
              8f40 0054  ld   $54
              8f41 000d  ld   $0d
              8f42 0020  ld   $20
              8f43 0042  ld   $42
              8f44 0045  ld   $45
              8f45 0045  ld   $45
              8f46 0052  ld   $52
              8f47 0020  ld   $20
              8f48 0020  ld   $20
              8f49 0020  ld   $20
              * 8 times
              8f4f 0053  ld   $53
              8f50 004b  ld   $4b
              8f51 0049  ld   $49
              8f52 0050  ld   $50
              8f53 0020  ld   $20
              8f54 0055  ld   $55
              8f55 0053  ld   $53
              8f56 0041  ld   $41
              8f57 0047  ld   $47
              8f58 0045  ld   $45
              8f59 0000  ld   $00
              8f5a 000c  ld   $0c
              8f5b 008a  ld   $8a
              8f5c 0076  ld   $76
              8f5d 00a9  ld   $a9
              8f5e 000c  ld   $0c
              8f5f 0048  ld   $48
              8f60 0020  ld   $20
              8f61 00fd  ld   $fd
              8f62 000d  ld   $0d
              8f63 0020  ld   $20
              8f64 00f1  ld   $f1
              8f65 000e  ld   $0e
              8f66 0085  ld   $85
              8f67 0044  ld   $44
              8f68 0084  ld   $84
              8f69 0045  ld   $45
              8f6a 0068  ld   $68
              8f6b 0038  ld   $38
              8f6c 00e9  ld   $e9
              8f6d 0001  ld   $01
              8f6e 00d0  ld   $d0
              8f6f 00ef  ld   $ef
              8f70 0020  ld   $20
              8f71 0095  ld   $95
              8f72 000e  ld   $0e
              8f73 008a  ld   $8a
              8f74 00d0  ld   $d0
              8f75 0003  ld   $03
              8f76 004c  ld   $4c
              8f77 001f  ld   $1f
              8f78 00ff  ld   $ff
              8f79 00a0  ld   $a0
              8f7a 0000  ld   $00
              8f7b 0020  ld   $20
              8f7c 00c0  ld   $c0
              8f7d 000e  ld   $0e
              8f7e 0048  ld   $48
              8f7f 008a  ld   $8a
              8f80 00f0  ld   $f0
              8f81 0007  ld   $07
              8f82 00b5  ld   $b5
              8f83 0046  ld   $46
              8f84 0095  ld   $95
              8f85 0044  ld   $44
              8f86 00ca  ld   $ca
              8f87 0010  ld   $10
              8f88 00f9  ld   $f9
              8f89 0068  ld   $68
              8f8a 00c9  ld   $c9
              8f8b 0005  ld   $05
              8f8c 00f0  ld   $f0
              8f8d 00cf  ld   $cf
              8f8e 00c9  ld   $c9
              8f8f 0099  ld   $99
              8f90 00f0  ld   $f0
              8f91 0004  ld   $04
              8f92 00c9  ld   $c9
              8f93 0093  ld   $93
              8f94 00d0  ld   $d0
              8f95 0076  ld   $76
              8f96 00a9  ld   $a9
              8f97 0003  ld   $03
              8f98 0085  ld   $85
              8f99 0047  ld   $47
              8f9a 0020  ld   $20
              8f9b 00b2  ld   $b2
              8f9c 000e  ld   $0e
              8f9d 000a  ld   $0a
              8f9e 00e9  ld   $e9
              8f9f 00be  ld   $be
              8fa0 00c5  ld   $c5
              8fa1 00c2  ld   $c2
              8fa2 0090  ld   $90
              8fa3 0068  ld   $68
              8fa4 000a  ld   $0a
              8fa5 000a  ld   $0a
              8fa6 00a2  ld   $a2
              8fa7 0004  ld   $04
              8fa8 000a  ld   $0a
              8fa9 0026  ld   $26
              8faa 004a  ld   $4a
              8fab 0026  ld   $26
              8fac 004b  ld   $4b
              8fad 00ca  ld   $ca
              8fae 0010  ld   $10
              8faf 00f8  ld   $f8
              8fb0 00c6  ld   $c6
              8fb1 0047  ld   $47
              8fb2 00f0  ld   $f0
              8fb3 00f4  ld   $f4
              8fb4 0010  ld   $10
              8fb5 00e4  ld   $e4
              8fb6 00a2  ld   $a2
              8fb7 0005  ld   $05
              8fb8 0020  ld   $20
              8fb9 00b2  ld   $b2
              8fba 000e  ld   $0e
              8fbb 0084  ld   $84
              8fbc 003a  ld   $3a
              8fbd 00dd  ld   $dd
              8fbe 0052  ld   $52
              8fbf 000f  ld   $0f
              8fc0 00d0  ld   $d0
              8fc1 0013  ld   $13
              8fc2 0020  ld   $20
              8fc3 00b2  ld   $b2
              8fc4 000e  ld   $0e
              8fc5 00dd  ld   $dd
              8fc6 0058  ld   $58
              8fc7 000f  ld   $0f
              8fc8 00f0  ld   $f0
              8fc9 000d  ld   $0d
              8fca 00bd  ld   $bd
              8fcb 0058  ld   $58
              8fcc 000f  ld   $0f
              8fcd 00f0  ld   $f0
              8fce 0007  ld   $07
              8fcf 00c9  ld   $c9
              8fd0 00a4  ld   $a4
              8fd1 00f0  ld   $f0
              8fd2 0003  ld   $03
              8fd3 000d  ld   $0d
              8fd4 0000  ld   $00
              8fd5 0000  ld   $00
              8fd6 00a4  ld   $a4
              8fd7 003a  ld   $3a
              8fd8 0018  ld   $18
              8fd9 0088  ld   $88
              8fda 0026  ld   $26
              8fdb 004c  ld   $4c
              8fdc 00e0  ld   $e0
              8fdd 0003  ld   $03
              8fde 00d0  ld   $d0
              8fdf 000d  ld   $0d
              8fe0 0020  ld   $20
              8fe1 00c0  ld   $c0
              8fe2 000e  ld   $0e
              8fe3 00a5  ld   $a5
              8fe4 0049  ld   $49
              8fe5 00f0  ld   $f0
              8fe6 0001  ld   $01
              8fe7 00e8  ld   $e8
              8fe8 0086  ld   $86
              8fe9 0038  ld   $38
              8fea 00a2  ld   $a2
              8feb 0003  ld   $03
              8fec 0088  ld   $88
              8fed 0086  ld   $86
              8fee 0047  ld   $47
              8fef 00ca  ld   $ca
              8ff0 0010  ld   $10
              8ff1 00c9  ld   $c9
              8ff2 00a5  ld   $a5
              8ff3 004c  ld   $4c
              8ff4 000a  ld   $0a
              8ff5 000a  ld   $0a
              8ff6 0005  ld   $05
              8ff7 0038  ld   $38
              8ff8 00c9  ld   $c9
              8ff9 0020  ld   $20
              8ffa 00b0  ld   $b0
              8ffb fe00  bra  ac          ;+-----------------------------------+
              8ffc fcfd  bra  $8ffd       ;|                                   |
              8ffd 1418  ld   $18,y       ;| Trampoline for page $8f00 lookups |
              8ffe e006  jmp  y,$06       ;|                                   |
              8fff c218  st   [$18]       ;+-----------------------------------+
              9000 0006  ld   $06
              9001 00a6  ld   $a6
              9002 0038  ld   $38
              9003 00f0  ld   $f0
              9004 0002  ld   $02
              9005 0009  ld   $09
              9006 0080  ld   $80
              9007 0085  ld   $85
              9008 004c  ld   $4c
              9009 0084  ld   $84
              900a 003a  ld   $3a
              900b 00b9  ld   $b9
              900c 0000  ld   $00
              900d 0002  ld   $02
              900e 00c9  ld   $c9
              900f 00bb  ld   $bb
              9010 00f0  ld   $f0
              9011 0004  ld   $04
              9012 00c9  ld   $c9
              9013 008d  ld   $8d
              9014 00d0  ld   $d0
              9015 002c  ld   $2c
              9016 00a5  ld   $a5
              9017 0047  ld   $47
              9018 0020  ld   $20
              9019 00b7  ld   $b7
              901a 000d  ld   $0d
              901b 00aa  ld   $aa
              901c 00bd  ld   $bd
              901d 009e  ld   $9e
              901e 000f  ld   $0f
              901f 00c5  ld   $c5
              9020 004a  ld   $4a
              9021 00d0  ld   $d0
              9022 0013  ld   $13
              9023 00bd  ld   $bd
              9024 005e  ld   $5e
              9025 000f  ld   $0f
              9026 00c5  ld   $c5
              9027 004b  ld   $4b
              9028 00d0  ld   $d0
              9029 000c  ld   $0c
              902a 00a5  ld   $a5
              902b 004c  ld   $4c
              902c 00a4  ld   $a4
              902d 0040  ld   $40
              902e 00c0  ld   $c0
              902f 009d  ld   $9d
              9030 00f0  ld   $f0
              9031 0020  ld   $20
              9032 00c5  ld   $c5
              9033 0040  ld   $40
              9034 00f0  ld   $f0
              9035 0037  ld   $37
              9036 00c6  ld   $c6
              9037 0047  ld   $47
              9038 00d0  ld   $d0
              9039 00dc  ld   $dc
              903a 00e6  ld   $e6
              903b 004c  ld   $4c
              903c 00c6  ld   $c6
              903d 0038  ld   $38
              903e 00f0  ld   $f0
              903f 00d6  ld   $d6
              9040 00a4  ld   $a4
              9041 003a  ld   $3a
              9042 0098  ld   $98
              9043 00aa  ld   $aa
              9044 0020  ld   $20
              9045 00bb  ld   $bb
              9046 000e  ld   $0e
              9047 0020  ld   $20
              9048 0079  ld   $79
              9049 000e  ld   $0e
              904a 00a9  ld   $a9
              904b 00de  ld   $de
              904c 0020  ld   $20
              904d 00ef  ld   $ef
              904e 00ff  ld   $ff
              904f 004c  ld   $4c
              9050 009d  ld   $9d
              9051 000c  ld   $0c
              9052 00e9  ld   $e9
              9053 0081  ld   $81
              9054 004a  ld   $4a
              9055 00d0  ld   $d0
              9056 00e9  ld   $e9
              9057 00a4  ld   $a4
              9058 0049  ld   $49
              9059 00a6  ld   $a6
              905a 0048  ld   $48
              905b 00d0  ld   $d0
              905c 0001  ld   $01
              905d 0088  ld   $88
              905e 00ca  ld   $ca
              905f 008a  ld   $8a
              9060 0018  ld   $18
              9061 00e5  ld   $e5
              9062 0044  ld   $44
              9063 0085  ld   $85
              9064 0048  ld   $48
              9065 0010  ld   $10
              9066 0001  ld   $01
              9067 00c8  ld   $c8
              9068 0098  ld   $98
              9069 00e5  ld   $e5
              906a 0045  ld   $45
              906b 00d0  ld   $d0
              906c 0043  ld   $43
              906d 00a4  ld   $a4
              906e 0041  ld   $41
              906f 00b9  ld   $b9
              9070 0047  ld   $47
              9071 0000  ld   $00
              9072 0091  ld   $91
              9073 0044  ld   $44
              9074 0088  ld   $88
              9075 0010  ld   $10
              9076 00f8  ld   $f8
              9077 00a9  ld   $a9
              9078 0001  ld   $01
              9079 004c  ld   $4c
              907a 008c  ld   $8c
              907b 000c  ld   $0c
              907c 00a6  ld   $a6
              907d 0044  ld   $44
              907e 00a4  ld   $a4
              907f 0045  ld   $45
              9080 0020  ld   $20
              9081 00bb  ld   $bb
              9082 000e  ld   $0e
              9083 0020  ld   $20
              9084 006f  ld   $6f
              9085 000e  ld   $0e
              9086 00a0  ld   $a0
              9087 0000  ld   $00
              9088 00a9  ld   $a9
              9089 00ad  ld   $ad
              908a 0020  ld   $20
              908b 00ef  ld   $ef
              908c 00ff  ld   $ff
              908d 0020  ld   $20
              908e 0077  ld   $77
              908f 000e  ld   $0e
              9090 00a1  ld   $a1
              9091 0044  ld   $44
              9092 00a8  ld   $a8
              9093 004a  ld   $4a
              9094 0090  ld   $90
              9095 000b  ld   $0b
              9096 004a  ld   $4a
              9097 00b0  ld   $b0
              9098 0017  ld   $17
              9099 00c9  ld   $c9
              909a 0022  ld   $22
              909b 00f0  ld   $f0
              909c 0013  ld   $13
              909d 0029  ld   $29
              909e 0007  ld   $07
              909f 0009  ld   $09
              90a0 0080  ld   $80
              90a1 004a  ld   $4a
              90a2 00aa  ld   $aa
              90a3 00bd  ld   $bd
              90a4 0000  ld   $00
              90a5 000f  ld   $0f
              90a6 00b0  ld   $b0
              90a7 0004  ld   $04
              90a8 004a  ld   $4a
              90a9 004a  ld   $4a
              90aa 004a  ld   $4a
              90ab 004a  ld   $4a
              90ac 0029  ld   $29
              90ad 000f  ld   $0f
              90ae 00d0  ld   $d0
              90af 0004  ld   $04
              90b0 00a0  ld   $a0
              90b1 0080  ld   $80
              90b2 00a9  ld   $a9
              90b3 0000  ld   $00
              90b4 00aa  ld   $aa
              90b5 00bd  ld   $bd
              90b6 0044  ld   $44
              90b7 000f  ld   $0f
              90b8 0085  ld   $85
              90b9 0040  ld   $40
              90ba 0029  ld   $29
              90bb 0003  ld   $03
              90bc 0085  ld   $85
              90bd 0041  ld   $41
              90be 0098  ld   $98
              90bf 0029  ld   $29
              90c0 008f  ld   $8f
              90c1 00aa  ld   $aa
              90c2 0098  ld   $98
              90c3 00a0  ld   $a0
              90c4 0003  ld   $03
              90c5 00e0  ld   $e0
              90c6 008a  ld   $8a
              90c7 00f0  ld   $f0
              90c8 000b  ld   $0b
              90c9 004a  ld   $4a
              90ca 0090  ld   $90
              90cb 0008  ld   $08
              90cc 004a  ld   $4a
              90cd 004a  ld   $4a
              90ce 0009  ld   $09
              90cf 0020  ld   $20
              90d0 0088  ld   $88
              90d1 00d0  ld   $d0
              90d2 00fa  ld   $fa
              90d3 00c8  ld   $c8
              90d4 0088  ld   $88
              90d5 00d0  ld   $d0
              90d6 00f2  ld   $f2
              90d7 0060  ld   $60
              90d8 0020  ld   $20
              90d9 00a1  ld   $a1
              90da 000d  ld   $0d
              90db 000e  ld   $0e
              90dc 0000  ld   $00
              90dd 0000  ld   $00
              90de 0048  ld   $48
              90df 00b1  ld   $b1
              90e0 0044  ld   $44
              90e1 0020  ld   $20
              90e2 00dc  ld   $dc
              90e3 00ff  ld   $ff
              90e4 00a2  ld   $a2
              90e5 0001  ld   $01
              90e6 0020  ld   $20
              90e7 0079  ld   $79
              90e8 000e  ld   $0e
              90e9 00c4  ld   $c4
              90ea 0041  ld   $41
              90eb 00c8  ld   $c8
              90ec 0090  ld   $90
              90ed 00f1  ld   $f1
              90ee 00a2  ld   $a2
              90ef 0003  ld   $03
              90f0 00c0  ld   $c0
              90f1 0003  ld   $03
              90f2 0090  ld   $90
              90f3 00f2  ld   $f2
              90f4 0068  ld   $68
              90f5 00a8  ld   $a8
              90f6 00b9  ld   $b9
              90f7 005e  ld   $5e
              90f8 000f  ld   $0f
              90f9 0085  ld   $85
              90fa 0042  ld   $42
              90fb fe00  bra  ac          ;+-----------------------------------+
              90fc fcfd  bra  $90fd       ;|                                   |
              90fd 1418  ld   $18,y       ;| Trampoline for page $9000 lookups |
              90fe e006  jmp  y,$06       ;|                                   |
              90ff c218  st   [$18]       ;+-----------------------------------+
              9100 00b9  ld   $b9
              9101 009e  ld   $9e
              9102 000f  ld   $0f
              9103 0085  ld   $85
              9104 0043  ld   $43
              9105 00a9  ld   $a9
              9106 0000  ld   $00
              9107 00a0  ld   $a0
              9108 0005  ld   $05
              9109 0006  ld   $06
              910a 0043  ld   $43
              910b 0026  ld   $26
              910c 0042  ld   $42
              910d 002a  ld   $2a
              910e 0088  ld   $88
              910f 00d0  ld   $d0
              9110 00f8  ld   $f8
              9111 0069  ld   $69
              9112 00bf  ld   $bf
              9113 0020  ld   $20
              9114 00ef  ld   $ef
              9115 00ff  ld   $ff
              9116 00ca  ld   $ca
              9117 00d0  ld   $d0
              9118 00ec  ld   $ec
              9119 0020  ld   $20
              911a 0077  ld   $77
              911b 000e  ld   $0e
              911c 00a2  ld   $a2
              911d 0006  ld   $06
              911e 00e0  ld   $e0
              911f 0003  ld   $03
              9120 00d0  ld   $d0
              9121 0012  ld   $12
              9122 00a4  ld   $a4
              9123 0041  ld   $41
              9124 00f0  ld   $f0
              9125 000e  ld   $0e
              9126 00a5  ld   $a5
              9127 0040  ld   $40
              9128 00c9  ld   $c9
              9129 00e8  ld   $e8
              912a 00b1  ld   $b1
              912b 0044  ld   $44
              912c 00b0  ld   $b0
              912d 001c  ld   $1c
              912e 0020  ld   $20
              912f 00dc  ld   $dc
              9130 00ff  ld   $ff
              9131 0088  ld   $88
              9132 00d0  ld   $d0
              9133 00f2  ld   $f2
              9134 0006  ld   $06
              9135 0040  ld   $40
              9136 0090  ld   $90
              9137 000e  ld   $0e
              9138 00bd  ld   $bd
              9139 0051  ld   $51
              913a 000f  ld   $0f
              913b 0020  ld   $20
              913c 00ef  ld   $ef
              913d 00ff  ld   $ff
              913e 00bd  ld   $bd
              913f 0057  ld   $57
              9140 000f  ld   $0f
              9141 00f0  ld   $f0
              9142 0003  ld   $03
              9143 0020  ld   $20
              9144 00ef  ld   $ef
              9145 00ff  ld   $ff
              9146 00ca  ld   $ca
              9147 00d0  ld   $d0
              9148 00d5  ld   $d5
              9149 0060  ld   $60
              914a 0020  ld   $20
              914b 00f4  ld   $f4
              914c 000e  ld   $0e
              914d 00aa  ld   $aa
              914e 00e8  ld   $e8
              914f 00d0  ld   $d0
              9150 0001  ld   $01
              9151 00c8  ld   $c8
              9152 0098  ld   $98
              9153 0020  ld   $20
              9154 00dc  ld   $dc
              9155 00ff  ld   $ff
              9156 008a  ld   $8a
              9157 004c  ld   $4c
              9158 00dc  ld   $dc
              9159 00ff  ld   $ff
              915a 00a2  ld   $a2
              915b 0001  ld   $01
              915c 00a9  ld   $a9
              915d 00a0  ld   $a0
              915e 0020  ld   $20
              915f 00ef  ld   $ef
              9160 00ff  ld   $ff
              9161 00ca  ld   $ca
              9162 00d0  ld   $d0
              9163 00f8  ld   $f8
              9164 0060  ld   $60
              9165 00c9  ld   $c9
              9166 009b  ld   $9b
              9167 00f0  ld   $f0
              9168 000a  ld   $0a
              9169 0020  ld   $20
              916a 00ef  ld   $ef
              916b 00ff  ld   $ff
              916c 00c9  ld   $c9
              916d 00df  ld   $df
              916e 00f0  ld   $f0
              916f 0012  ld   $12
              9170 00e8  ld   $e8
              9171 0010  ld   $10
              9172 0012  ld   $12
              9173 00a9  ld   $a9
              9174 00dc  ld   $dc
              9175 0020  ld   $20
              9176 00ef  ld   $ef
              9177 00ff  ld   $ff
              9178 0020  ld   $20
              9179 00bb  ld   $bb
              917a 000e  ld   $0e
              917b 00a9  ld   $a9
              917c 00a1  ld   $a1
              917d 0020  ld   $20
              917e 00ef  ld   $ef
              917f 00ff  ld   $ff
              9180 00a2  ld   $a2
              9181 0001  ld   $01
              9182 00ca  ld   $ca
              9183 0030  ld   $30
              9184 00f3  ld   $f3
              9185 002c  ld   $2c
              9186 0011  ld   $11
              9187 00d0  ld   $d0
              9188 0010  ld   $10
              9189 00fb  ld   $fb
              918a 00ad  ld   $ad
              918b 0010  ld   $10
              918c 00d0  ld   $d0
              918d 009d  ld   $9d
              918e 0000  ld   $00
              918f 0002  ld   $02
              9190 00c9  ld   $c9
              9191 008d  ld   $8d
              9192 00d0  ld   $d0
              9193 00d1  ld   $d1
              9194 0060  ld   $60
              9195 00b9  ld   $b9
              9196 0000  ld   $00
              9197 0002  ld   $02
              9198 00c8  ld   $c8
              9199 00c9  ld   $c9
              919a 00a0  ld   $a0
              919b 00f0  ld   $f0
              919c 00f8  ld   $f8
              919d 0060  ld   $60
              919e 00a9  ld   $a9
              919f 008d  ld   $8d
              91a0 004c  ld   $4c
              91a1 00ef  ld   $ef
              91a2 00ff  ld   $ff
              91a3 00a2  ld   $a2
              91a4 0000  ld   $00
              91a5 0086  ld   $86
              91a6 0048  ld   $48
              91a7 0086  ld   $86
              91a8 0049  ld   $49
              91a9 00f0  ld   $f0
              91aa 0015  ld   $15
              91ab 00a2  ld   $a2
              91ac 0003  ld   $03
              91ad 000a  ld   $0a
              91ae 000a  ld   $0a
              91af 000a  ld   $0a
              * 5 times
              91b2 0026  ld   $26
              91b3 0048  ld   $48
              91b4 0026  ld   $26
              91b5 0049  ld   $49
              91b6 00ca  ld   $ca
              91b7 0010  ld   $10
              91b8 00f8  ld   $f8
              91b9 00b5  ld   $b5
              91ba 0049  ld   $49
              91bb 0095  ld   $95
              91bc 0047  ld   $47
              91bd 00e8  ld   $e8
              91be 00f0  ld   $f0
              91bf 00f9  ld   $f9
              91c0 00b9  ld   $b9
              91c1 0000  ld   $00
              91c2 0002  ld   $02
              91c3 00c8  ld   $c8
              91c4 0049  ld   $49
              91c5 00b0  ld   $b0
              91c6 00c9  ld   $c9
              91c7 000a  ld   $0a
              91c8 0090  ld   $90
              91c9 00e1  ld   $e1
              91ca 0069  ld   $69
              91cb 0088  ld   $88
              91cc 00c9  ld   $c9
              91cd 00fa  ld   $fa
              91ce 00b0  ld   $b0
              91cf 00db  ld   $db
              91d0 0060  ld   $60
              91d1 004c  ld   $4c
              91d2 00e9  ld   $e9
              91d3 000b  ld   $0b
              91d4 00a5  ld   $a5
              91d5 0041  ld   $41
              91d6 0038  ld   $38
              91d7 00a4  ld   $a4
              91d8 0045  ld   $45
              91d9 00aa  ld   $aa
              91da 0010  ld   $10
              91db 0001  ld   $01
              91dc 0088  ld   $88
              91dd 0065  ld   $65
              91de 0044  ld   $44
              91df 0090  ld   $90
              91e0 0001  ld   $01
              91e1 00c8  ld   $c8
              91e2 0060  ld   $60
              91e3 000f  ld   $0f
              91e4 0000  ld   $00
              91e5 00de  ld   $de
              91e6 0040  ld   $40
              91e7 0002  ld   $02
              91e8 0045  ld   $45
              91e9 0003  ld   $03
              91ea 00d0  ld   $d0
              91eb 0008  ld   $08
              91ec 0040  ld   $40
              91ed 0009  ld   $09
              91ee 0030  ld   $30
              91ef 0022  ld   $22
              91f0 0045  ld   $45
              91f1 0033  ld   $33
              91f2 00d0  ld   $d0
              91f3 0008  ld   $08
              91f4 0040  ld   $40
              91f5 0009  ld   $09
              91f6 0040  ld   $40
              91f7 0002  ld   $02
              91f8 0045  ld   $45
              91f9 0033  ld   $33
              91fa 00d0  ld   $d0
              91fb fe00  bra  ac          ;+-----------------------------------+
              91fc fcfd  bra  $91fd       ;|                                   |
              91fd 1418  ld   $18,y       ;| Trampoline for page $9100 lookups |
              91fe e006  jmp  y,$06       ;|                                   |
              91ff c218  st   [$18]       ;+-----------------------------------+
              9200 0008  ld   $08
              9201 0040  ld   $40
              9202 0009  ld   $09
              9203 0040  ld   $40
              9204 0002  ld   $02
              9205 0045  ld   $45
              9206 00b3  ld   $b3
              9207 00d0  ld   $d0
              9208 0008  ld   $08
              9209 0040  ld   $40
              920a 0009  ld   $09
              920b 0000  ld   $00
              920c 0022  ld   $22
              920d 0044  ld   $44
              920e 0033  ld   $33
              920f 00d0  ld   $d0
              9210 008c  ld   $8c
              9211 0044  ld   $44
              9212 0000  ld   $00
              9213 0011  ld   $11
              9214 0022  ld   $22
              9215 0044  ld   $44
              9216 0033  ld   $33
              9217 00d0  ld   $d0
              9218 008c  ld   $8c
              9219 0044  ld   $44
              921a 009a  ld   $9a
              921b 0010  ld   $10
              921c 0022  ld   $22
              921d 0044  ld   $44
              921e 0033  ld   $33
              921f 00d0  ld   $d0
              9220 0008  ld   $08
              9221 0040  ld   $40
              9222 0009  ld   $09
              9223 0010  ld   $10
              9224 0022  ld   $22
              9225 0044  ld   $44
              9226 0033  ld   $33
              9227 00d0  ld   $d0
              9228 0008  ld   $08
              9229 0040  ld   $40
              922a 0009  ld   $09
              922b 0062  ld   $62
              922c 0013  ld   $13
              922d 0078  ld   $78
              922e 00a9  ld   $a9
              922f 0000  ld   $00
              9230 0021  ld   $21
              9231 0081  ld   $81
              9232 0082  ld   $82
              9233 0000  ld   $00
              9234 0000  ld   $00
              9235 0059  ld   $59
              9236 004d  ld   $4d
              9237 0091  ld   $91
              9238 0092  ld   $92
              9239 0086  ld   $86
              923a 004a  ld   $4a
              923b 0085  ld   $85
              923c 009d  ld   $9d
              923d 00ac  ld   $ac
              923e 00a9  ld   $a9
              923f 00ac  ld   $ac
              9240 00a3  ld   $a3
              9241 00a8  ld   $a8
              9242 00a4  ld   $a4
              9243 00d9  ld   $d9
              9244 0000  ld   $00
              9245 00d8  ld   $d8
              9246 00a4  ld   $a4
              9247 00a4  ld   $a4
              9248 0000  ld   $00
              9249 001c  ld   $1c
              924a 008a  ld   $8a
              924b 001c  ld   $1c
              924c 0023  ld   $23
              924d 005d  ld   $5d
              924e 008b  ld   $8b
              924f 001b  ld   $1b
              9250 00a1  ld   $a1
              9251 009d  ld   $9d
              9252 008a  ld   $8a
              9253 001d  ld   $1d
              9254 0023  ld   $23
              9255 009d  ld   $9d
              9256 008b  ld   $8b
              9257 001d  ld   $1d
              9258 00a1  ld   $a1
              9259 0000  ld   $00
              925a 0029  ld   $29
              925b 0019  ld   $19
              925c 00ae  ld   $ae
              925d 0069  ld   $69
              925e 00a8  ld   $a8
              925f 0019  ld   $19
              9260 0023  ld   $23
              9261 0024  ld   $24
              9262 0053  ld   $53
              9263 001b  ld   $1b
              9264 0023  ld   $23
              9265 0024  ld   $24
              9266 0053  ld   $53
              9267 0019  ld   $19
              9268 00a1  ld   $a1
              9269 0000  ld   $00
              926a 001a  ld   $1a
              926b 005b  ld   $5b
              926c 005b  ld   $5b
              926d 00a5  ld   $a5
              926e 0069  ld   $69
              926f 0024  ld   $24
              9270 0024  ld   $24
              9271 00ae  ld   $ae
              9272 00ae  ld   $ae
              9273 00a8  ld   $a8
              9274 00ad  ld   $ad
              9275 0029  ld   $29
              9276 0000  ld   $00
              9277 007c  ld   $7c
              9278 0000  ld   $00
              9279 0015  ld   $15
              927a 009c  ld   $9c
              927b 006d  ld   $6d
              927c 009c  ld   $9c
              927d 00a5  ld   $a5
              927e 0069  ld   $69
              927f 0029  ld   $29
              9280 0053  ld   $53
              9281 0084  ld   $84
              9282 0013  ld   $13
              9283 0034  ld   $34
              9284 0011  ld   $11
              9285 00a5  ld   $a5
              9286 0069  ld   $69
              9287 0023  ld   $23
              9288 00a0  ld   $a0
              9289 00d8  ld   $d8
              928a 0062  ld   $62
              928b 005a  ld   $5a
              928c 0048  ld   $48
              928d 0026  ld   $26
              928e 0062  ld   $62
              928f 0094  ld   $94
              9290 0088  ld   $88
              9291 0054  ld   $54
              9292 0044  ld   $44
              9293 00c8  ld   $c8
              9294 0054  ld   $54
              9295 0068  ld   $68
              9296 0044  ld   $44
              9297 00e8  ld   $e8
              9298 0094  ld   $94
              9299 0000  ld   $00
              929a 00b4  ld   $b4
              929b 0008  ld   $08
              929c 0084  ld   $84
              929d 0074  ld   $74
              929e 00b4  ld   $b4
              929f 0028  ld   $28
              92a0 006e  ld   $6e
              92a1 0074  ld   $74
              92a2 00f4  ld   $f4
              92a3 00cc  ld   $cc
              92a4 004a  ld   $4a
              92a5 0072  ld   $72
              92a6 00f2  ld   $f2
              92a7 00a4  ld   $a4
              92a8 008a  ld   $8a
              92a9 0000  ld   $00
              92aa 00aa  ld   $aa
              92ab 00a2  ld   $a2
              92ac 00a2  ld   $a2
              92ad 0074  ld   $74
              92ae 0074  ld   $74
              92af 0074  ld   $74
              92b0 0072  ld   $72
              92b1 0044  ld   $44
              92b2 0068  ld   $68
              92b3 00b2  ld   $b2
              92b4 0032  ld   $32
              92b5 00b2  ld   $b2
              92b6 0000  ld   $00
              92b7 0022  ld   $22
              92b8 0026  ld   $26
              92b9 001a  ld   $1a
              92ba 001a  ld   $1a
              92bb 0026  ld   $26
              92bc 0026  ld   $26
              92bd 0072  ld   $72
              92be 0072  ld   $72
              92bf 0088  ld   $88
              92c0 00c8  ld   $c8
              92c1 00c4  ld   $c4
              92c2 00ca  ld   $ca
              92c3 0026  ld   $26
              92c4 0048  ld   $48
              92c5 0044  ld   $44
              92c6 0044  ld   $44
              92c7 00a2  ld   $a2
              92c8 00c8  ld   $c8
              92c9 005e  ld   $5e
              92ca 0000  ld   $00
              92cb 00e3  ld   $e3
              92cc 0075  ld   $75
              92cd 002b  ld   $2b
              92ce 003e  ld   $3e
              92cf 001a  ld   $1a
              92d0 003d  ld   $3d
              92d1 00fc  ld   $fc
              92d2 000f  ld   $0f
              92d3 0082  ld   $82
              92d4 00ff  ld   $ff
              92d5 0035  ld   $35
              92d6 003f  ld   $3f
              92d7 003b  ld   $3b
              92d8 0011  ld   $11
              92d9 0010  ld   $10
              92da 00d0  ld   $d0
              92db 002b  ld   $2b
              92dc 0030  ld   $30
              92dd 001a  ld   $1a
              92de 000f  ld   $0f
              92df 005e  ld   $5e
              92e0 003d  ld   $3d
              92e1 008c  ld   $8c
              92e2 00ff  ld   $ff
              92e3 0035  ld   $35
              92e4 003f  ld   $3f
              92e5 003b  ld   $3b
              92e6 008c  ld   $8c
              92e7 00ff  ld   $ff
              92e8 00e6  ld   $e6
              92e9 0060  ld   $60
              92ea 0035  ld   $35
              92eb 0050  ld   $50
              92ec 0021  ld   $21
              92ed 00e6  ld   $e6
              92ee 0020  ld   $20
              92ef 00e3  ld   $e3
              92f0 0060  ld   $60
              92f1 008c  ld   $8c
              92f2 000a  ld   $0a
              92f3 0035  ld   $35
              92f4 0072  ld   $72
              92f5 002a  ld   $2a
              92f6 0059  ld   $59
              92f7 0007  ld   $07
              92f8 008c  ld   $8c
              92f9 000a  ld   $0a
              92fa 008c  ld   $8c
              92fb fe00  bra  ac          ;+-----------------------------------+
              92fc fcfd  bra  $92fd       ;|                                   |
              92fd 1418  ld   $18,y       ;| Trampoline for page $9200 lookups |
              92fe e006  jmp  y,$06       ;|                                   |
              92ff c218  st   [$18]       ;+-----------------------------------+
              9300 001a  ld   $1a
              9301 0035  ld   $35
              9302 0072  ld   $72
              9303 0033  ld   $33
              9304 00ec  ld   $ec
              9305 0000  ld   $00
              9306 008c  ld   $8c
              9307 001a  ld   $1a
              9308 0082  ld   $82
              9309 007f  ld   $7f
              930a 00e6  ld   $e6
              930b 0080  ld   $80
              930c 00f3  ld   $f3
              930d 0030  ld   $30
              930e 0011  ld   $11
              930f 0012  ld   $12
              9310 00d0  ld   $d0
              9311 002b  ld   $2b
              9312 0030  ld   $30
              9313 00ad  ld   $ad
              9314 0035  ld   $35
              9315 003f  ld   $3f
              9316 0075  ld   $75
              9317 005e  ld   $5e
              9318 003c  ld   $3c
              9319 0088  ld   $88
              931a 0080  ld   $80
              931b 0085  ld   $85
              931c 000f  ld   $0f
              931d 005f  ld   $5f
              931e 001a  ld   $1a
              931f 001c  ld   $1c
              9320 00e3  ld   $e3
              9321 0002  ld   $02
              9322 00f6  ld   $f6
              9323 00e3  ld   $e3
              9324 0042  ld   $42
              9325 0035  ld   $35
              9326 0072  ld   $72
              9327 005b  ld   $5b
              9328 0021  ld   $21
              9329 007a  ld   $7a
              932a 00e6  ld   $e6
              932b 0002  ld   $02
              932c 002b  ld   $2b
              932d 007a  ld   $7a
              932e 0059  ld   $59
              932f 0000  ld   $00
              9330 00f0  ld   $f0
              9331 0030  ld   $30
              9332 0011  ld   $11
              9333 0010  ld   $10
              9334 00d0  ld   $d0
              9335 002b  ld   $2b
              9336 0030  ld   $30
              9337 00ad  ld   $ad
              9338 0035  ld   $35
              9339 003f  ld   $3f
              933a 006c  ld   $6c
              933b 00fc  ld   $fc
              933c 003c  ld   $3c
              933d 0082  ld   $82
              933e 007f  ld   $7f
              933f 0035  ld   $35
              9340 0072  ld   $72
              9341 0071  ld   $71
              9342 00f3  ld   $f3
              9343 0030  ld   $30
              9344 0059  ld   $59
              9345 001f  ld   $1f
              9346 005e  ld   $5e
              9347 003c  ld   $3c
              9348 001a  ld   $1a
              9349 003c  ld   $3c
              934a 00e6  ld   $e6
              934b 0001  ld   $01
              934c 0035  ld   $35
              934d 0053  ld   $53
              934e 0089  ld   $89
              934f 0059  ld   $59
              9350 00a0  ld   $a0
              9351 0085  ld   $85
              9352 000f  ld   $0f
              9353 005f  ld   $5f
              9354 0021  ld   $21
              9355 007a  ld   $7a
              9356 00e6  ld   $e6
              9357 0006  ld   $06
              9358 002b  ld   $2b
              9359 007a  ld   $7a
              935a 0059  ld   $59
              935b 001e  ld   $1e
              935c 005e  ld   $5e
              935d 003c  ld   $3c
              935e 008c  ld   $8c
              935f 0014  ld   $14
              9360 0035  ld   $35
              9361 0072  ld   $72
              9362 009b  ld   $9b
              9363 0059  ld   $59
              9364 00c0  ld   $c0
              9365 0085  ld   $85
              9366 000f  ld   $0f
              9367 005f  ld   $5f
              9368 0021  ld   $21
              9369 007a  ld   $7a
              936a 00e6  ld   $e6
              936b 0006  ld   $06
              936c 002b  ld   $2b
              936d 007a  ld   $7a
              936e 0011  ld   $11
              936f 0007  ld   $07
              9370 005f  ld   $5f
              9371 002b  ld   $2b
              9372 0030  ld   $30
              9373 0063  ld   $63
              9374 0059  ld   $59
              9375 00ff  ld   $ff
              9376 005e  ld   $5e
              9377 000e  ld   $0e
              9378 0011  ld   $11
              9379 0000  ld   $00
              937a 0004  ld   $04
              937b 007f  ld   $7f
              937c 003e  ld   $3e
              937d 0018  ld   $18
              937e 00a2  ld   $a2
              937f 0000  ld   $00
              9380 00a0  ld   $a0
              9381 000c  ld   $0c
              9382 00b9  ld   $b9
              9383 00ce  ld   $ce
              9384 005e  ld   $5e
              9385 0084  ld   $84
              9386 003a  ld   $3a
              9387 00a0  ld   $a0
              9388 0007  ld   $07
              9389 009d  ld   $9d
              938a 0000  ld   $00
              938b 0001  ld   $01
              938c 0069  ld   $69
              938d 0001  ld   $01
              938e 00e8  ld   $e8
              938f 00e8  ld   $e8
              9390 0088  ld   $88
              9391 00d0  ld   $d0
              9392 00f6  ld   $f6
              9393 00e8  ld   $e8
              9394 00e8  ld   $e8
              9395 00e8  ld   $e8
              9396 00e8  ld   $e8
              9397 00a4  ld   $a4
              9398 003a  ld   $3a
              9399 0088  ld   $88
              939a 0010  ld   $10
              939b 00e6  ld   $e6
              939c 004c  ld   $4c
              939d 0005  ld   $05
              939e 00c1  ld   $c1
              939f 0077  ld   $77
              93a0 0070  ld   $70
              93a1 0056  ld   $56
              93a2 004f  ld   $4f
              93a3 0048  ld   $48
              93a4 0041  ld   $41
              93a5 003a  ld   $3a
              93a6 0033  ld   $33
              93a7 002c  ld   $2c
              93a8 0025  ld   $25
              93a9 001e  ld   $1e
              93aa 0017  ld   $17
              93ab 0010  ld   $10
              93ac 00d8  ld   $d8
              93ad 0058  ld   $58
              93ae 00a2  ld   $a2
              93af 00f7  ld   $f7
              93b0 009a  ld   $9a
              93b1 004c  ld   $4c
              93b2 001a  ld   $1a
              93b3 00ff  ld   $ff
              93b4 005f  ld   $5f
              93b5 0000  ld   $00
              93b6 0000  ld   $00
              93b7 002b  ld   $2b
              93b8 001a  ld   $1a
              93b9 0011  ld   $11
              93ba 000c  ld   $0c
              93bb 000b  ld   $0b
              93bc 002b  ld   $2b
              93bd 0022  ld   $22
              93be 00b4  ld   $b4
              93bf 00e6  ld   $e6
              93c0 0011  ld   $11
              93c1 00fe  ld   $fe
              93c2 00ff  ld   $ff
              93c3 00f6  ld   $f6
              93c4 0090  ld   $90
              93c5 00fe  ld   $fe
              93c6 002b  ld   $2b
              93c7 007c  ld   $7c
              93c8 00df  ld   $df
              93c9 00fa  ld   $fa
              93ca 0021  ld   $21
              93cb 0024  ld   $24
              93cc 00ec  ld   $ec
              93cd 0000  ld   $00
              93ce 0021  ld   $21
              93cf 0026  ld   $26
              93d0 00ec  ld   $ec
              93d1 0002  ld   $02
              93d2 0021  ld   $21
              93d3 0028  ld   $28
              93d4 00ec  ld   $ec
              93d5 0004  ld   $04
              93d6 0011  ld   $11
              93d7 00e1  ld   $e1
              93d8 0004  ld   $04
              93d9 002b  ld   $2b
              93da 0022  ld   $22
              93db 0011  ld   $11
              93dc 0000  ld   $00
              93dd 003f  ld   $3f
              93de 002b  ld   $2b
              93df 0024  ld   $24
              93e0 005e  ld   $5e
              93e1 0026  ld   $26
              93e2 0021  ld   $21
              93e3 007c  ld   $7c
              93e4 005e  ld   $5e
              93e5 0027  ld   $27
              93e6 008c  ld   $8c
              93e7 008d  ld   $8d
              93e8 0035  ld   $35
              93e9 003f  ld   $3f
              93ea 003b  ld   $3b
              93eb 001a  ld   $1a
              93ec 007a  ld   $7a
              93ed 00e6  ld   $e6
              93ee 00fb  ld   $fb
              93ef 0035  ld   $35
              93f0 0056  ld   $56
              93f1 003b  ld   $3b
              93f2 0059  ld   $59
              93f3 0000  ld   $00
              93f4 0035  ld   $35
              93f5 0072  ld   $72
              93f6 0096  ld   $96
              93f7 0021  ld   $21
              93f8 007a  ld   $7a
              93f9 002b  ld   $2b
              93fa 0028  ld   $28
              93fb fe00  bra  ac          ;+-----------------------------------+
              93fc fcfd  bra  $93fd       ;|                                   |
              93fd 1418  ld   $18,y       ;| Trampoline for page $9300 lookups |
              93fe e006  jmp  y,$06       ;|                                   |
              93ff c218  st   [$18]       ;+-----------------------------------+
              9400 0082  ld   $82
              9401 00ff  ld   $ff
              9402 00e6  ld   $e6
              9403 00fb  ld   $fb
              9404 0035  ld   $35
              9405 004d  ld   $4d
              9406 004c  ld   $4c
              9407 0011  ld   $11
              9408 00fb  ld   $fb
              9409 00ff  ld   $ff
              940a 00b4  ld   $b4
              940b 00cb  ld   $cb
              940c 0093  ld   $93
              940d 0028  ld   $28
              940e 00e3  ld   $e3
              940f 0001  ld   $01
              9410 0035  ld   $35
              9411 0050  ld   $50
              9412 004c  ld   $4c
              9413 0059  ld   $59
              9414 0061  ld   $61
              9415 005e  ld   $5e
              9416 007a  ld   $7a
              9417 00e3  ld   $e3
              9418 009f  ld   $9f
              9419 002b  ld   $2b
              941a 007c  ld   $7c
              941b 00ad  ld   $ad
              941c 005e  ld   $5e
              941d 007b  ld   $7b
              941e 0021  ld   $21
              941f 007a  ld   $7a
              9420 00e6  ld   $e6
              9421 0002  ld   $02
              9422 002b  ld   $2b
              9423 0028  ld   $28
              9424 0011  ld   $11
              9425 0000  ld   $00
              9426 0007  ld   $07
              9427 0099  ld   $99
              9428 0028  ld   $28
              9429 00ad  ld   $ad
              942a 0082  ld   $82
              942b 0001  ld   $01
              942c 005e  ld   $5e
              942d 0026  ld   $26
              942e 00b4  ld   $b4
              942f 00cb  ld   $cb
              9430 0093  ld   $93
              9431 0028  ld   $28
              9432 001a  ld   $1a
              9433 0028  ld   $28
              9434 0035  ld   $35
              9435 0072  ld   $72
              9436 0066  ld   $66
              9437 0021  ld   $21
              9438 007c  ld   $7c
              9439 00e3  ld   $e3
              943a 0012  ld   $12
              943b 002b  ld   $2b
              943c 007e  ld   $7e
              943d 00ad  ld   $ad
              943e 005e  ld   $5e
              943f 0026  ld   $26
              9440 0021  ld   $21
              9441 007c  ld   $7c
              9442 00ad  ld   $ad
              9443 00f0  ld   $f0
              9444 007e  ld   $7e
              9445 001a  ld   $1a
              9446 0026  ld   $26
              9447 00f0  ld   $f0
              9448 007c  ld   $7c
              9449 0093  ld   $93
              944a 007c  ld   $7c
              944b 0093  ld   $93
              944c 007c  ld   $7c
              944d 001a  ld   $1a
              944e 007c  ld   $7c
              944f 008c  ld   $8c
              9450 00d8  ld   $d8
              9451 0035  ld   $35
              9452 0072  ld   $72
              9453 0079  ld   $79
              9454 001a  ld   $1a
              9455 0027  ld   $27
              9456 00e6  ld   $e6
              9457 00a0  ld   $a0
              9458 0035  ld   $35
              9459 0050  ld   $50
              945a 00ef  ld   $ef
              945b 00e6  ld   $e6
              945c 0040  ld   $40
              945d 0035  ld   $35
              945e 0050  ld   $50
              945f 00a4  ld   $a4
              9460 00e6  ld   $e6
              9461 0020  ld   $20
              9462 00e3  ld   $e3
              9463 000e  ld   $0e
              9464 0035  ld   $35
              9465 0053  ld   $53
              9466 00b2  ld   $b2
              9467 00e3  ld   $e3
              9468 0032  ld   $32
              9469 002b  ld   $2b
              946a 007c  ld   $7c
              946b 0011  ld   $11
              946c 0000  ld   $00
              946d 0007  ld   $07
              946e 0090  ld   $90
              946f 00b7  ld   $b7
              9470 002b  ld   $2b
              9471 007c  ld   $7c
              9472 0011  ld   $11
              9473 0000  ld   $00
              9474 0008  ld   $08
              9475 002b  ld   $2b
              9476 007e  ld   $7e
              9477 0021  ld   $21
              9478 007c  ld   $7c
              9479 00e9  ld   $e9
              947a 00e9  ld   $e9
              947b 0099  ld   $99
              947c 007c  ld   $7c
              947d 0099  ld   $99
              947e 007e  ld   $7e
              947f 002b  ld   $2b
              9480 007e  ld   $7e
              9481 0021  ld   $21
              9482 007a  ld   $7a
              9483 002b  ld   $2b
              9484 0028  ld   $28
              9485 00e3  ld   $e3
              9486 0006  ld   $06
              9487 002b  ld   $2b
              9488 007a  ld   $7a
              9489 0059  ld   $59
              948a 0005  ld   $05
              948b 002b  ld   $2b
              948c 007c  ld   $7c
              948d 0021  ld   $21
              948e 007e  ld   $7e
              948f 007f  ld   $7f
              9490 0000  ld   $00
              9491 0082  ld   $82
              9492 00fe  ld   $fe
              9493 005e  ld   $5e
              9494 0026  ld   $26
              9495 0011  ld   $11
              9496 0000  ld   $00
              9497 0007  ld   $07
              9498 0099  ld   $99
              9499 0028  ld   $28
              949a 00ad  ld   $ad
              949b 0035  ld   $35
              949c 003f  ld   $3f
              949d 00e2  ld   $e2
              949e 0093  ld   $93
              949f 0026  ld   $26
              94a0 00b4  ld   $b4
              94a1 00cb  ld   $cb
              94a2 0093  ld   $93
              94a3 007e  ld   $7e
              94a4 0093  ld   $93
              94a5 0028  ld   $28
              94a6 0021  ld   $21
              94a7 007c  ld   $7c
              94a8 00e6  ld   $e6
              94a9 0001  ld   $01
              94aa 0035  ld   $35
              94ab 004d  ld   $4d
              94ac 00cd  ld   $cd
              94ad 00ee  ld   $ee
              94ae 0000  ld   $00
              94af 002b  ld   $2b
              94b0 0024  ld   $24
              94b1 00ee  ld   $ee
              94b2 0002  ld   $02
              94b3 002b  ld   $2b
              94b4 0026  ld   $26
              94b5 00ee  ld   $ee
              94b6 0004  ld   $04
              94b7 002b  ld   $2b
              94b8 0028  ld   $28
              94b9 00df  ld   $df
              94ba 0006  ld   $06
              94bb 00ff  ld   $ff
              94bc 00c1  ld   $c1
              94bd 0000  ld   $00
              94be 0058  ld   $58
              94bf 00a9  ld   $a9
              94c0 00aa  ld   $aa
              94c1 0020  ld   $20
              94c2 00ef  ld   $ef
              94c3 00ff  ld   $ff
              94c4 00ae  ld   $ae
              94c5 0000  ld   $00
              94c6 00c2  ld   $c2
              94c7 00bd  ld   $bd
              94c8 0000  ld   $00
              94c9 00c2  ld   $c2
              94ca 0020  ld   $20
              94cb 00ef  ld   $ef
              94cc 00ff  ld   $ff
              94cd 00ca  ld   $ca
              94ce 00d0  ld   $d0
              94cf 00f7  ld   $f7
              94d0 00ae  ld   $ae
              94d1 0025  ld   $25
              94d2 00c1  ld   $c1
              94d3 00bd  ld   $bd
              94d4 0025  ld   $25
              94d5 00c1  ld   $c1
              94d6 0020  ld   $20
              94d7 00ef  ld   $ef
              94d8 00ff  ld   $ff
              94d9 00ca  ld   $ca
              94da 00d0  ld   $d0
              94db 00f7  ld   $f7
              94dc 002c  ld   $2c
              94dd 0012  ld   $12
              94de 00d0  ld   $d0
              94df 0030  ld   $30
              94e0 00fb  ld   $fb
              94e1 004c  ld   $4c
              94e2 0000  ld   $00
              94e3 00ff  ld   $ff
              94e4 0032  ld   $32
              94e5 008d  ld   $8d
              94e6 00ce  ld   $ce
              94e7 00cf  ld   $cf
              94e8 00cd  ld   $cd
              94e9 00da  ld   $da
              94ea 00cf  ld   $cf
              94eb 00d7  ld   $d7
              94ec 00a0  ld   $a0
              94ed 00da  ld   $da
              94ee 00ad  ld   $ad
              94ef 00cc  ld   $cc
              94f0 00d4  ld   $d4
              94f1 00c3  ld   $c3
              94f2 008d  ld   $8d
              94f3 00d4  ld   $d4
              94f4 00d2  ld   $d2
              94f5 00c1  ld   $c1
              94f6 00d4  ld   $d4
              94f7 00d3  ld   $d3
              94f8 00a0  ld   $a0
              94f9 00cd  ld   $cd
              94fa 00d2  ld   $d2
              94fb fe00  bra  ac          ;+-----------------------------------+
              94fc fcfd  bra  $94fd       ;|                                   |
              94fd 1418  ld   $18,y       ;| Trampoline for page $9400 lookups |
              94fe e006  jmp  y,$06       ;|                                   |
              94ff c218  st   [$18]       ;+-----------------------------------+
              9500 00c1  ld   $c1
              9501 00d7  ld   $d7
              9502 00a0  ld   $a0
              9503 00c3  ld   $c3
              9504 00c9  ld   $c9
              9505 00d3  ld   $d3
              9506 00c1  ld   $c1
              9507 00c2  ld   $c2
              9508 00a0  ld   $a0
              9509 00d2  ld   $d2
              950a 00b3  ld   $b3
              950b 00c2  ld   $c2
              950c 00b2  ld   $b2
              950d 00c5  ld   $c5
              950e 008d  ld   $8d
              950f 00c3  ld   $c3
              9510 00c9  ld   $c9
              9511 00d3  ld   $d3
              9512 00c1  ld   $c1
              9513 00c2  ld   $c2
              9514 00a0  ld   $a0
              9515 00d2  ld   $d2
              9516 00c5  ld   $c5
              9517 00c7  ld   $c7
              9518 00c5  ld   $c5
              9519 00d4  ld   $d4
              951a 00ce  ld   $ce
              951b 00c9  ld   $c9
              951c 00c2  ld   $c2
              951d 0000  ld   $00
              951e 005b  ld   $5b
              951f 005a  ld   $5a
              9520 00a0  ld   $a0
              9521 00d2  ld   $d2
              9522 00b0  ld   $b0
              9523 00b0  ld   $b0
              9524 00b0  ld   $b0
              9525 00c5  ld   $c5
              9526 008d  ld   $8d
              9527 00d5  ld   $d5
              9528 00ce  ld   $ce
              9529 00c5  ld   $c5
              952a 00cd  ld   $cd
              952b 00a0  ld   $a0
              952c 00d2  ld   $d2
              952d 00b0  ld   $b0
              952e 00b0  ld   $b0
              952f 00b1  ld   $b1
              9530 00c3  ld   $c3
              9531 008d  ld   $8d
              9532 00d2  ld   $d2
              9533 00c5  ld   $c5
              9534 00cc  ld   $cc
              9535 00c2  ld   $c2
              9536 00cd  ld   $cd
              9537 00c5  ld   $c5
              9538 00d3  ld   $d3
              9539 00d3  ld   $d3
              953a 00c1  ld   $c1
              953b 00ad  ld   $ad
              953c 00c9  ld   $c9
              953d 00ce  ld   $ce
              953e 00c9  ld   $c9
              953f 00cd  ld   $cd
              9540 00a0  ld   $a0
              9541 00a0  ld   $a0
              9542 00d2  ld   $d2
              9543 00c5  ld   $c5
              9544 00c5  ld   $c5
              9545 00c5  ld   $c5
              9546 008d  ld   $8d
              9547 00c5  ld   $c5
              9548 00cc  ld   $cc
              9549 00da  ld   $da
              954a 00da  ld   $da
              954b 00d5  ld   $d5
              954c 00d0  ld   $d0
              954d 00ad  ld   $ad
              954e 00b5  ld   $b5
              954f 00b1  ld   $b1
              9550 00a0  ld   $a0
              9551 00a0  ld   $a0
              9552 00d2  ld   $d2
              9553 00b0  ld   $b0
              9554 00b0  ld   $b0
              9555 00b4  ld   $b4
              9556 008d  ld   $8d
              9557 00c4  ld   $c4
              9558 00ce  ld   $ce
              9559 00c9  ld   $c9
              955a 00cd  ld   $cd
              955b 00d2  ld   $d2
              955c 00c5  ld   $c5
              955d 00d4  ld   $d4
              955e 00d3  ld   $d3
              955f 00c1  ld   $c1
              9560 00cd  ld   $cd
              9561 00a0  ld   $a0
              9562 00a0  ld   $a0
              9563 00d2  ld   $d2
              9564 00b0  ld   $b0
              9565 00b0  ld   $b0
              9566 00b3  ld   $b3
              9567 008d  ld   $8d
              9568 008d  ld   $8d
              9569 00cc  ld   $cc
              956a 00d4  ld   $d4
              956b 00d4  ld   $d4
              956c 00a0  ld   $a0
              956d 00ce  ld   $ce
              956e 00cf  ld   $cf
              956f 00a0  ld   $a0
              9570 00b1  ld   $b1
              9571 00ad  ld   $ad
              9572 00c5  ld   $c5
              9573 00cc  ld   $cc
              9574 00d0  ld   $d0
              9575 00d0  ld   $d0
              9576 00c1  ld   $c1
              9577 008d  ld   $8d
              9578 008d  ld   $8d
              9579 008d  ld   $8d
              957a 00d0  ld   $d0
              957b 0010  ld   $10
              957c 0004  ld   $04
              957d 0000  ld   $00
              957e 0000  ld   $00
              957f 0000  ld   $00
              9580 0000  ld   $00
              9581 00e0  ld   $e0
              9582 0000  ld   $00
              9583 0000  ld   $00
              9584 004c  ld   $4c
              9585 00b0  ld   $b0
              9586 00e2  ld   $e2
              9587 00ad  ld   $ad
              9588 0011  ld   $11
              9589 00d0  ld   $d0
              958a 0010  ld   $10
              958b 00fb  ld   $fb
              958c 00ad  ld   $ad
              958d 0010  ld   $10
              958e 00d0  ld   $d0
              958f 0060  ld   $60
              9590 008a  ld   $8a
              9591 0029  ld   $29
              9592 0020  ld   $20
              9593 00f0  ld   $f0
              9594 0023  ld   $23
              9595 00a9  ld   $a9
              9596 00a0  ld   $a0
              9597 0085  ld   $85
              9598 0044  ld   $44
              9599 004c  ld   $4c
              959a 00c9  ld   $c9
              959b 00e3  ld   $e3
              959c 00a9  ld   $a9
              959d 0020  ld   $20
              959e 00c5  ld   $c5
              959f 0081  ld   $81
              95a0 00b0  ld   $b0
              95a1 000c  ld   $0c
              95a2 00a9  ld   $a9
              95a3 008d  ld   $8d
              95a4 00a0  ld   $a0
              95a5 0007  ld   $07
              95a6 0020  ld   $20
              95a7 00c9  ld   $c9
              95a8 00e3  ld   $e3
              95a9 00a9  ld   $a9
              95aa 00a0  ld   $a0
              95ab 0088  ld   $88
              95ac 00d0  ld   $d0
              95ad 00f8  ld   $f8
              95ae 00a0  ld   $a0
              95af 0000  ld   $00
              95b0 00b1  ld   $b1
              95b1 0042  ld   $42
              95b2 00e6  ld   $e6
              95b3 0042  ld   $42
              95b4 00d0  ld   $d0
              95b5 0002  ld   $02
              95b6 00e6  ld   $e6
              95b7 0043  ld   $43
              95b8 0060  ld   $60
              95b9 0020  ld   $20
              95ba 0015  ld   $15
              95bb 00e7  ld   $e7
              95bc 0020  ld   $20
              95bd 0076  ld   $76
              95be 00e5  ld   $e5
              95bf 00a5  ld   $a5
              95c0 0042  ld   $42
              95c1 00c5  ld   $c5
              95c2 0046  ld   $46
              95c3 00a5  ld   $a5
              95c4 0043  ld   $43
              95c5 00e5  ld   $e5
              95c6 0047  ld   $47
              95c7 00b0  ld   $b0
              95c8 00ef  ld   $ef
              95c9 0020  ld   $20
              95ca 006d  ld   $6d
              95cb 00e0  ld   $e0
              95cc 004c  ld   $4c
              95cd 003b  ld   $3b
              95ce 00e0  ld   $e0
              95cf 00a5  ld   $a5
              95d0 00ca  ld   $ca
              95d1 0085  ld   $85
              95d2 0042  ld   $42
              95d3 00a5  ld   $a5
              95d4 00cb  ld   $cb
              95d5 0085  ld   $85
              95d6 0043  ld   $43
              95d7 00a5  ld   $a5
              95d8 004c  ld   $4c
              95d9 0085  ld   $85
              95da 0046  ld   $46
              95db 00a5  ld   $a5
              95dc 004d  ld   $4d
              95dd 0085  ld   $85
              95de 0047  ld   $47
              95df 00d0  ld   $d0
              95e0 00de  ld   $de
              95e1 0020  ld   $20
              95e2 0015  ld   $15
              95e3 00e7  ld   $e7
              95e4 0020  ld   $20
              95e5 006d  ld   $6d
              95e6 00e5  ld   $e5
              95e7 00a5  ld   $a5
              95e8 0044  ld   $44
              95e9 0085  ld   $85
              95ea 0042  ld   $42
              95eb 00a5  ld   $a5
              95ec 0045  ld   $45
              95ed 0085  ld   $85
              95ee 0043  ld   $43
              95ef 00b0  ld   $b0
              95f0 00c7  ld   $c7
              95f1 0086  ld   $86
              95f2 00d8  ld   $d8
              95f3 00a9  ld   $a9
              95f4 00a0  ld   $a0
              95f5 0085  ld   $85
              95f6 0082  ld   $82
              95f7 0020  ld   $20
              95f8 002a  ld   $2a
              95f9 00e0  ld   $e0
              95fa 0098  ld   $98
              95fb fe00  bra  ac          ;+-----------------------------------+
              95fc fcfd  bra  $95fd       ;|                                   |
              95fd 1418  ld   $18,y       ;| Trampoline for page $9500 lookups |
              95fe e006  jmp  y,$06       ;|                                   |
              95ff c218  st   [$18]       ;+-----------------------------------+
              9600 0085  ld   $85
              9601 0044  ld   $44
              9602 0020  ld   $20
              9603 002a  ld   $2a
              9604 00e0  ld   $e0
              9605 00aa  ld   $aa
              9606 0020  ld   $20
              9607 002a  ld   $2a
              9608 00e0  ld   $e0
              9609 0020  ld   $20
              960a 001b  ld   $1b
              960b 00e5  ld   $e5
              960c 0020  ld   $20
              960d 0018  ld   $18
              960e 00e0  ld   $e0
              960f 0084  ld   $84
              9610 0082  ld   $82
              9611 00aa  ld   $aa
              9612 0010  ld   $10
              9613 0018  ld   $18
              9614 000a  ld   $0a
              9615 0010  ld   $10
              9616 00e9  ld   $e9
              9617 00a5  ld   $a5
              9618 0044  ld   $44
              9619 00d0  ld   $d0
              961a 0003  ld   $03
              961b 0020  ld   $20
              961c 0011  ld   $11
              961d 00e0  ld   $e0
              961e 008a  ld   $8a
              961f 0020  ld   $20
              9620 00c9  ld   $c9
              9621 00e3  ld   $e3
              9622 00a9  ld   $a9
              9623 0025  ld   $25
              9624 0020  ld   $20
              9625 001a  ld   $1a
              9626 00e0  ld   $e0
              9627 00aa  ld   $aa
              9628 0030  ld   $30
              9629 00f5  ld   $f5
              962a 0085  ld   $85
              962b 0044  ld   $44
              962c 00c9  ld   $c9
              962d 0001  ld   $01
              962e 00d0  ld   $d0
              962f 0005  ld   $05
              9630 00a6  ld   $a6
              9631 00d8  ld   $d8
              9632 004c  ld   $4c
              9633 00cd  ld   $cd
              9634 00e3  ld   $e3
              9635 0048  ld   $48
              9636 0084  ld   $84
              9637 00ce  ld   $ce
              9638 00a2  ld   $a2
              9639 00ed  ld   $ed
              963a 0086  ld   $86
              963b 00cf  ld   $cf
              963c 00c9  ld   $c9
              963d 0051  ld   $51
              963e 0090  ld   $90
              963f 0004  ld   $04
              9640 00c6  ld   $c6
              9641 00cf  ld   $cf
              9642 00e9  ld   $e9
              9643 0050  ld   $50
              9644 0048  ld   $48
              9645 00b1  ld   $b1
              9646 00ce  ld   $ce
              9647 00aa  ld   $aa
              9648 0088  ld   $88
              9649 00b1  ld   $b1
              964a 00ce  ld   $ce
              964b 0010  ld   $10
              964c 00fa  ld   $fa
              964d 00e0  ld   $e0
              964e 00c0  ld   $c0
              964f 00b0  ld   $b0
              9650 0004  ld   $04
              9651 00e0  ld   $e0
              9652 0000  ld   $00
              9653 0030  ld   $30
              9654 00f2  ld   $f2
              9655 00aa  ld   $aa
              9656 0068  ld   $68
              9657 00e9  ld   $e9
              9658 0001  ld   $01
              9659 00d0  ld   $d0
              965a 00e9  ld   $e9
              965b 0024  ld   $24
              965c 0044  ld   $44
              965d 0030  ld   $30
              965e 0003  ld   $03
              965f 0020  ld   $20
              9660 00f8  ld   $f8
              9661 00ef  ld   $ef
              9662 00b1  ld   $b1
              9663 00ce  ld   $ce
              9664 0010  ld   $10
              9665 0010  ld   $10
              9666 00aa  ld   $aa
              9667 0029  ld   $29
              9668 003f  ld   $3f
              9669 0085  ld   $85
              966a 0044  ld   $44
              966b 0018  ld   $18
              966c 0069  ld   $69
              966d 00a0  ld   $a0
              966e 0020  ld   $20
              966f 00c9  ld   $c9
              9670 00e3  ld   $e3
              9671 0088  ld   $88
              9672 00e0  ld   $e0
              9673 00c0  ld   $c0
              9674 0090  ld   $90
              9675 00ec  ld   $ec
              9676 0020  ld   $20
              9677 000c  ld   $0c
              9678 00e0  ld   $e0
              9679 0068  ld   $68
              967a 00c9  ld   $c9
              967b 005d  ld   $5d
              967c 00f0  ld   $f0
              967d 00a4  ld   $a4
              967e 00c9  ld   $c9
              967f 0028  ld   $28
              9680 00d0  ld   $d0
              9681 008a  ld   $8a
              9682 00f0  ld   $f0
              9683 009e  ld   $9e
              9684 0020  ld   $20
              9685 0018  ld   $18
              9686 00e1  ld   $e1
              9687 0095  ld   $95
              9688 0050  ld   $50
              9689 00e1  ld   $e1
              968a 0000  ld   $00
              968b 0000  ld   $00
              968c 00d5  ld   $d5
              968d 0088  ld   $88
              968e 0090  ld   $90
              968f 0011  ld   $11
              9690 00a0  ld   $a0
              9691 002b  ld   $2b
              9692 004c  ld   $4c
              9693 00e0  ld   $e0
              9694 00e3  ld   $e3
              9695 0020  ld   $20
              9696 0034  ld   $34
              9697 00ee  ld   $ee
              9698 00d5  ld   $d5
              9699 0050  ld   $50
              969a 0090  ld   $90
              969b 00f4  ld   $f4
              969c 0020  ld   $20
              969d 00e4  ld   $e4
              969e 00ef  ld   $ef
              969f 0095  ld   $95
              96a0 0088  ld   $88
              96a1 004c  ld   $4c
              96a2 0023  ld   $23
              96a3 00e8  ld   $e8
              96a4 0020  ld   $20
              96a5 0034  ld   $34
              96a6 00ee  ld   $ee
              96a7 00f0  ld   $f0
              96a8 00e7  ld   $e7
              96a9 0038  ld   $38
              96aa 00e9  ld   $e9
              96ab 0001  ld   $01
              96ac 0060  ld   $60
              96ad 0020  ld   $20
              96ae 0018  ld   $18
              96af 00e1  ld   $e1
              96b0 0095  ld   $95
              96b1 0050  ld   $50
              96b2 0018  ld   $18
              96b3 00f5  ld   $f5
              96b4 0088  ld   $88
              96b5 004c  ld   $4c
              96b6 0002  ld   $02
              96b7 00e1  ld   $e1
              96b8 00a0  ld   $a0
              96b9 0014  ld   $14
              96ba 00d0  ld   $d0
              96bb 00d6  ld   $d6
              96bc 0020  ld   $20
              96bd 0018  ld   $18
              96be 00e1  ld   $e1
              96bf 00e8  ld   $e8
              96c0 00b5  ld   $b5
              96c1 0050  ld   $50
              96c2 0085  ld   $85
              96c3 00da  ld   $da
              96c4 0065  ld   $65
              96c5 00ce  ld   $ce
              96c6 0048  ld   $48
              96c7 00a8  ld   $a8
              96c8 00b5  ld   $b5
              96c9 0088  ld   $88
              96ca 0085  ld   $85
              96cb 00db  ld   $db
              96cc 0065  ld   $65
              96cd 00cf  ld   $cf
              96ce 0048  ld   $48
              96cf 00c4  ld   $c4
              96d0 00ca  ld   $ca
              96d1 00e5  ld   $e5
              96d2 00cb  ld   $cb
              96d3 00b0  ld   $b0
              96d4 00e3  ld   $e3
              96d5 00a5  ld   $a5
              96d6 00da  ld   $da
              96d7 0069  ld   $69
              96d8 00fe  ld   $fe
              96d9 0085  ld   $85
              96da 00da  ld   $da
              96db 00a9  ld   $a9
              96dc 00ff  ld   $ff
              96dd 00a8  ld   $a8
              96de 0065  ld   $65
              96df 00db  ld   $db
              96e0 0085  ld   $85
              96e1 00db  ld   $db
              96e2 00c8  ld   $c8
              96e3 00b1  ld   $b1
              96e4 00da  ld   $da
              96e5 00d9  ld   $d9
              96e6 00cc  ld   $cc
              96e7 0000  ld   $00
              96e8 00d0  ld   $d0
              96e9 000f  ld   $0f
              96ea 0098  ld   $98
              96eb 00f0  ld   $f0
              96ec 00f5  ld   $f5
              96ed 0068  ld   $68
              96ee 0091  ld   $91
              96ef 00da  ld   $da
              96f0 0099  ld   $99
              96f1 00cc  ld   $cc
              96f2 0000  ld   $00
              96f3 0088  ld   $88
              96f4 0010  ld   $10
              96f5 00f7  ld   $f7
              96f6 00e8  ld   $e8
              96f7 0060  ld   $60
              96f8 00ea  ld   $ea
              96f9 00a0  ld   $a0
              96fa 0080  ld   $80
              96fb fe00  bra  ac          ;+-----------------------------------+
              96fc fcfd  bra  $96fd       ;|                                   |
              96fd 1418  ld   $18,y       ;| Trampoline for page $9600 lookups |
              96fe e006  jmp  y,$06       ;|                                   |
              96ff c218  st   [$18]       ;+-----------------------------------+
              9700 00d0  ld   $d0
              9701 0095  ld   $95
              9702 00a9  ld   $a9
              9703 0000  ld   $00
              9704 0020  ld   $20
              9705 000a  ld   $0a
              9706 00e7  ld   $e7
              9707 00a0  ld   $a0
              9708 0002  ld   $02
              9709 0094  ld   $94
              970a 0088  ld   $88
              970b 0020  ld   $20
              970c 000a  ld   $0a
              970d 00e7  ld   $e7
              970e 00a9  ld   $a9
              970f 00bf  ld   $bf
              9710 0020  ld   $20
              9711 00c9  ld   $c9
              9712 00e3  ld   $e3
              9713 00a0  ld   $a0
              9714 0000  ld   $00
              9715 0020  ld   $20
              9716 009e  ld   $9e
              9717 00e2  ld   $e2
              9718 0094  ld   $94
              9719 0088  ld   $88
              971a 00ea  ld   $ea
              971b 00ea  ld   $ea
              971c 00ea  ld   $ea
              971d 00b5  ld   $b5
              971e 0051  ld   $51
              971f 0085  ld   $85
              9720 00ce  ld   $ce
              9721 00b5  ld   $b5
              9722 0089  ld   $89
              9723 0085  ld   $85
              9724 00cf  ld   $cf
              9725 00e8  ld   $e8
              9726 00e8  ld   $e8
              9727 0020  ld   $20
              9728 00bc  ld   $bc
              9729 00e1  ld   $e1
              972a 00b5  ld   $b5
              972b 004e  ld   $4e
              972c 00d5  ld   $d5
              972d 0086  ld   $86
              972e 00b0  ld   $b0
              972f 0015  ld   $15
              9730 00f6  ld   $f6
              9731 004e  ld   $4e
              9732 00a8  ld   $a8
              9733 00b1  ld   $b1
              9734 00ce  ld   $ce
              9735 00b4  ld   $b4
              9736 0050  ld   $50
              9737 00c4  ld   $c4
              9738 0044  ld   $44
              9739 0090  ld   $90
              973a 0004  ld   $04
              973b 00a0  ld   $a0
              973c 0083  ld   $83
              973d 00d0  ld   $d0
              973e 00c1  ld   $c1
              973f 0091  ld   $91
              9740 00da  ld   $da
              9741 00f6  ld   $f6
              9742 0050  ld   $50
              9743 0090  ld   $90
              9744 00e5  ld   $e5
              9745 00b4  ld   $b4
              9746 0050  ld   $50
              9747 008a  ld   $8a
              9748 0091  ld   $91
              9749 00da  ld   $da
              974a 00e8  ld   $e8
              974b 00e8  ld   $e8
              974c 0060  ld   $60
              974d 00b5  ld   $b5
              974e 0051  ld   $51
              974f 0085  ld   $85
              9750 00da  ld   $da
              9751 0038  ld   $38
              9752 00e9  ld   $e9
              9753 0002  ld   $02
              9754 0085  ld   $85
              9755 0044  ld   $44
              9756 00b5  ld   $b5
              9757 0089  ld   $89
              9758 0085  ld   $85
              9759 00db  ld   $db
              975a 00e9  ld   $e9
              975b 0000  ld   $00
              975c 0085  ld   $85
              975d 0045  ld   $45
              975e 00a0  ld   $a0
              975f 0000  ld   $00
              9760 00b1  ld   $b1
              9761 0044  ld   $44
              9762 0018  ld   $18
              9763 00e5  ld   $e5
              9764 00da  ld   $da
              9765 0085  ld   $85
              9766 0044  ld   $44
              9767 0060  ld   $60
              9768 00b5  ld   $b5
              9769 0053  ld   $53
              976a 0085  ld   $85
              976b 00ce  ld   $ce
              976c 00b5  ld   $b5
              976d 008b  ld   $8b
              976e 0085  ld   $85
              976f 00cf  ld   $cf
              9770 00b5  ld   $b5
              9771 0051  ld   $51
              9772 0085  ld   $85
              9773 00da  ld   $da
              9774 00b5  ld   $b5
              9775 0089  ld   $89
              9776 0085  ld   $85
              9777 00db  ld   $db
              9778 00e8  ld   $e8
              9779 00e8  ld   $e8
              977a 00e8  ld   $e8
              977b 00a0  ld   $a0
              977c 0000  ld   $00
              977d 0094  ld   $94
              977e 0088  ld   $88
              977f 0094  ld   $94
              9780 00a8  ld   $a8
              9781 00c8  ld   $c8
              9782 0094  ld   $94
              9783 0050  ld   $50
              9784 00b5  ld   $b5
              9785 004d  ld   $4d
              9786 00d5  ld   $d5
              9787 0085  ld   $85
              9788 0008  ld   $08
              9789 0048  ld   $48
              978a 00b5  ld   $b5
              978b 004f  ld   $4f
              978c 00d5  ld   $d5
              978d 0087  ld   $87
              978e 0090  ld   $90
              978f 0007  ld   $07
              9790 0068  ld   $68
              9791 00e2  ld   $e2
              9792 0000  ld   $00
              9793 0000  ld   $00
              9794 0028  ld   $28
              9795 00b0  ld   $b0
              9796 0002  ld   $02
              9797 0056  ld   $56
              9798 0050  ld   $50
              9799 0060  ld   $60
              979a 00a8  ld   $a8
              979b 00b1  ld   $b1
              979c 00ce  ld   $ce
              979d 0085  ld   $85
              979e 0044  ld   $44
              979f 0068  ld   $68
              97a0 00a8  ld   $a8
              97a1 0028  ld   $28
              97a2 00b0  ld   $b0
              97a3 00f3  ld   $f3
              97a4 00b1  ld   $b1
              97a5 00da  ld   $da
              97a6 00c5  ld   $c5
              97a7 0044  ld   $44
              97a8 00d0  ld   $d0
              97a9 00ed  ld   $ed
              97aa 00f6  ld   $f6
              97ab 004f  ld   $4f
              97ac 00f6  ld   $f6
              97ad 004d  ld   $4d
              97ae 00b0  ld   $b0
              97af 00d7  ld   $d7
              97b0 0020  ld   $20
              97b1 00d7  ld   $d7
              97b2 00e1  ld   $e1
              97b3 004c  ld   $4c
              97b4 0036  ld   $36
              97b5 00e7  ld   $e7
              97b6 0020  ld   $20
              97b7 0054  ld   $54
              97b8 00e2  ld   $e2
              97b9 0006  ld   $06
              97ba 00ce  ld   $ce
              97bb 0026  ld   $26
              97bc 00cf  ld   $cf
              97bd 0090  ld   $90
              97be 000d  ld   $0d
              97bf 0018  ld   $18
              97c0 00a5  ld   $a5
              97c1 0046  ld   $46
              97c2 0065  ld   $65
              97c3 00da  ld   $da
              97c4 0085  ld   $85
              97c5 0046  ld   $46
              97c6 00a5  ld   $a5
              97c7 0047  ld   $47
              97c8 0065  ld   $65
              97c9 00db  ld   $db
              97ca 0085  ld   $85
              97cb 0047  ld   $47
              97cc 0088  ld   $88
              97cd 00f0  ld   $f0
              97ce 0009  ld   $09
              97cf 0006  ld   $06
              97d0 0046  ld   $46
              97d1 0026  ld   $26
              97d2 0047  ld   $47
              97d3 0010  ld   $10
              97d4 00e4  ld   $e4
              97d5 004c  ld   $4c
              97d6 007e  ld   $7e
              97d7 00e7  ld   $e7
              97d8 00a5  ld   $a5
              97d9 0046  ld   $46
              97da 0020  ld   $20
              97db 0008  ld   $08
              97dc 00e7  ld   $e7
              97dd 00a5  ld   $a5
              97de 0047  ld   $47
              97df 0095  ld   $95
              97e0 00a8  ld   $a8
              97e1 0006  ld   $06
              97e2 0045  ld   $45
              97e3 0090  ld   $90
              97e4 0028  ld   $28
              97e5 004c  ld   $4c
              97e6 006f  ld   $6f
              97e7 00e7  ld   $e7
              97e8 00a9  ld   $a9
              97e9 0055  ld   $55
              97ea 0085  ld   $85
              97eb 0045  ld   $45
              97ec 0020  ld   $20
              97ed 005b  ld   $5b
              97ee 00e2  ld   $e2
              97ef 00a5  ld   $a5
              97f0 00ce  ld   $ce
              97f1 0085  ld   $85
              97f2 00da  ld   $da
              97f3 00a5  ld   $a5
              97f4 00cf  ld   $cf
              97f5 0085  ld   $85
              97f6 00db  ld   $db
              97f7 0020  ld   $20
              97f8 0015  ld   $15
              97f9 00e7  ld   $e7
              97fa 0084  ld   $84
              97fb fe00  bra  ac          ;+-----------------------------------+
              97fc fcfd  bra  $97fd       ;|                                   |
              97fd 1418  ld   $18,y       ;| Trampoline for page $9700 lookups |
              97fe e006  jmp  y,$06       ;|                                   |
              97ff c218  st   [$18]       ;+-----------------------------------+
              9800 0046  ld   $46
              9801 0084  ld   $84
              9802 0047  ld   $47
              9803 00a5  ld   $a5
              9804 00cf  ld   $cf
              9805 0010  ld   $10
              9806 0009  ld   $09
              9807 00ca  ld   $ca
              9808 0006  ld   $06
              9809 0045  ld   $45
              980a 0020  ld   $20
              980b 006f  ld   $6f
              980c 00e7  ld   $e7
              980d 0020  ld   $20
              980e 0015  ld   $15
              980f 00e7  ld   $e7
              9810 00a0  ld   $a0
              9811 0010  ld   $10
              9812 0060  ld   $60
              9813 0020  ld   $20
              9814 006c  ld   $6c
              9815 00ee  ld   $ee
              9816 00f0  ld   $f0
              9817 00c5  ld   $c5
              9818 00ff  ld   $ff
              9819 00c9  ld   $c9
              981a 0084  ld   $84
              981b 00d0  ld   $d0
              981c 0002  ld   $02
              981d 0046  ld   $46
              981e 0078  ld   $78
              981f 00c9  ld   $c9
              9820 00df  ld   $df
              9821 00f0  ld   $f0
              9822 0011  ld   $11
              9823 00c9  ld   $c9
              9824 009b  ld   $9b
              9825 00f0  ld   $f0
              9826 0006  ld   $06
              9827 0099  ld   $99
              9828 0000  ld   $00
              9829 0002  ld   $02
              982a 00c8  ld   $c8
              982b 0010  ld   $10
              982c 000a  ld   $0a
              982d 00a0  ld   $a0
              982e 008b  ld   $8b
              982f 0020  ld   $20
              9830 00c4  ld   $c4
              9831 00e3  ld   $e3
              9832 00a0  ld   $a0
              9833 0001  ld   $01
              9834 0088  ld   $88
              9835 0030  ld   $30
              9836 00f6  ld   $f6
              9837 0020  ld   $20
              9838 0003  ld   $03
              9839 00e0  ld   $e0
              983a 00ea  ld   $ea
              983b 00ea  ld   $ea
              983c 0020  ld   $20
              983d 00c9  ld   $c9
              983e 00e3  ld   $e3
              983f 00c9  ld   $c9
              9840 008d  ld   $8d
              9841 00d0  ld   $d0
              9842 00d6  ld   $d6
              9843 00a9  ld   $a9
              9844 00df  ld   $df
              9845 0099  ld   $99
              9846 0000  ld   $00
              9847 0002  ld   $02
              9848 0060  ld   $60
              9849 0020  ld   $20
              984a 00d3  ld   $d3
              984b 00ef  ld   $ef
              984c 0020  ld   $20
              984d 00cd  ld   $cd
              984e 00e3  ld   $e3
              984f 0046  ld   $46
              9850 00d9  ld   $d9
              9851 00a9  ld   $a9
              9852 00be  ld   $be
              9853 0020  ld   $20
              9854 00c9  ld   $c9
              9855 00e3  ld   $e3
              9856 00a0  ld   $a0
              9857 0000  ld   $00
              9858 0084  ld   $84
              9859 0082  ld   $82
              985a 0024  ld   $24
              985b 0078  ld   $78
              985c 0010  ld   $10
              985d 000c  ld   $0c
              985e 00a6  ld   $a6
              985f 0076  ld   $76
              9860 00a5  ld   $a5
              9861 0077  ld   $77
              9862 0020  ld   $20
              9863 001b  ld   $1b
              9864 00e5  ld   $e5
              9865 00a9  ld   $a9
              9866 00a0  ld   $a0
              9867 0020  ld   $20
              9868 00c9  ld   $c9
              9869 00e3  ld   $e3
              986a 00a2  ld   $a2
              986b 00ff  ld   $ff
              986c 009a  ld   $9a
              986d 0020  ld   $20
              986e 009e  ld   $9e
              986f 00e2  ld   $e2
              9870 0084  ld   $84
              9871 00e9  ld   $e9
              9872 008a  ld   $8a
              9873 0085  ld   $85
              9874 00c8  ld   $c8
              9875 00a2  ld   $a2
              9876 0018  ld   $18
              9877 0020  ld   $20
              9878 0091  ld   $91
              9879 00e4  ld   $e4
              987a 00a5  ld   $a5
              987b 00c8  ld   $c8
              987c 0069  ld   $69
              987d 0000  ld   $00
              987e 0085  ld   $85
              987f 00de  ld   $de
              9880 00a9  ld   $a9
              9881 0000  ld   $00
              9882 00aa  ld   $aa
              9883 0069  ld   $69
              9884 0002  ld   $02
              9885 0085  ld   $85
              9886 00df  ld   $df
              9887 00a1  ld   $a1
              9888 00de  ld   $de
              9889 0029  ld   $29
              988a 00f0  ld   $f0
              988b 00c9  ld   $c9
              988c 00b0  ld   $b0
              988d 00f0  ld   $f0
              988e 0003  ld   $03
              988f 004c  ld   $4c
              9890 0083  ld   $83
              9891 00e8  ld   $e8
              9892 00a0  ld   $a0
              9893 0002  ld   $02
              9894 00b1  ld   $b1
              9895 00de  ld   $de
              9896 0099  ld   $99
              9897 00cd  ld   $cd
              9898 0000  ld   $00
              9899 00e3  ld   $e3
              989a 0000  ld   $00
              989b 0000  ld   $00
              989c 0088  ld   $88
              989d 00d0  ld   $d0
              989e 00f8  ld   $f8
              989f 0020  ld   $20
              98a0 008a  ld   $8a
              98a1 00e3  ld   $e3
              98a2 00a5  ld   $a5
              98a3 00e9  ld   $e9
              98a4 00e5  ld   $e5
              98a5 00c8  ld   $c8
              98a6 00c9  ld   $c9
              98a7 0004  ld   $04
              98a8 00f0  ld   $f0
              98a9 00a8  ld   $a8
              98aa 0091  ld   $91
              98ab 00de  ld   $de
              98ac 00a5  ld   $a5
              98ad 00ca  ld   $ca
              98ae 00f1  ld   $f1
              98af 00de  ld   $de
              98b0 0085  ld   $85
              98b1 0044  ld   $44
              98b2 00a5  ld   $a5
              98b3 00cb  ld   $cb
              98b4 00e9  ld   $e9
              98b5 0000  ld   $00
              98b6 0085  ld   $85
              98b7 0045  ld   $45
              98b8 00a5  ld   $a5
              98b9 0044  ld   $44
              98ba 00c5  ld   $c5
              98bb 00cc  ld   $cc
              98bc 00a5  ld   $a5
              98bd 0045  ld   $45
              98be 00e5  ld   $e5
              98bf 00cd  ld   $cd
              98c0 0090  ld   $90
              98c1 0045  ld   $45
              98c2 00a5  ld   $a5
              98c3 00ca  ld   $ca
              98c4 00f1  ld   $f1
              98c5 00de  ld   $de
              98c6 0085  ld   $85
              98c7 0046  ld   $46
              98c8 00a5  ld   $a5
              98c9 00cb  ld   $cb
              98ca 00e9  ld   $e9
              98cb 0000  ld   $00
              98cc 0085  ld   $85
              98cd 0047  ld   $47
              98ce 00b1  ld   $b1
              98cf 00ca  ld   $ca
              98d0 0091  ld   $91
              98d1 0046  ld   $46
              98d2 00e6  ld   $e6
              98d3 00ca  ld   $ca
              98d4 00d0  ld   $d0
              98d5 0002  ld   $02
              98d6 00e6  ld   $e6
              98d7 00cb  ld   $cb
              98d8 00a5  ld   $a5
              98d9 0042  ld   $42
              98da 00c5  ld   $c5
              98db 00ca  ld   $ca
              98dc 00a5  ld   $a5
              98dd 0043  ld   $43
              98de 00e5  ld   $e5
              98df 00cb  ld   $cb
              98e0 00b0  ld   $b0
              98e1 00e0  ld   $e0
              98e2 00b5  ld   $b5
              98e3 0044  ld   $44
              98e4 0095  ld   $95
              98e5 00ca  ld   $ca
              98e6 00ca  ld   $ca
              98e7 0010  ld   $10
              98e8 00f9  ld   $f9
              98e9 00b1  ld   $b1
              98ea 00de  ld   $de
              98eb 00a8  ld   $a8
              98ec 0088  ld   $88
              98ed 00b1  ld   $b1
              98ee 00de  ld   $de
              98ef 0091  ld   $91
              98f0 0046  ld   $46
              98f1 0098  ld   $98
              98f2 00d0  ld   $d0
              98f3 00f8  ld   $f8
              98f4 0024  ld   $24
              98f5 0078  ld   $78
              98f6 0010  ld   $10
              98f7 0009  ld   $09
              98f8 00b5  ld   $b5
              98f9 0077  ld   $77
              98fa 0075  ld   $75
              98fb fe00  bra  ac          ;+-----------------------------------+
              98fc fcfd  bra  $98fd       ;|                                   |
              98fd 1418  ld   $18,y       ;| Trampoline for page $9800 lookups |
              98fe e006  jmp  y,$06       ;|                                   |
              98ff c218  st   [$18]       ;+-----------------------------------+
              9900 0075  ld   $75
              9901 0095  ld   $95
              9902 0077  ld   $77
              9903 00e8  ld   $e8
              9904 00f0  ld   $f0
              9905 00f7  ld   $f7
              9906 0010  ld   $10
              9907 007e  ld   $7e
              9908 0000  ld   $00
              9909 0000  ld   $00
              990a 0000  ld   $00
              990b 0000  ld   $00
              990c 00a0  ld   $a0
              990d 0014  ld   $14
              990e 00d0  ld   $d0
              990f 0071  ld   $71
              9910 0020  ld   $20
              9911 0015  ld   $15
              9912 00e7  ld   $e7
              9913 00a5  ld   $a5
              9914 0042  ld   $42
              9915 0085  ld   $85
              9916 0046  ld   $46
              9917 00a5  ld   $a5
              9918 0043  ld   $43
              9919 0085  ld   $85
              991a 0047  ld   $47
              991b 0020  ld   $20
              991c 0075  ld   $75
              991d 00e5  ld   $e5
              991e 00a5  ld   $a5
              991f 0042  ld   $42
              9920 0085  ld   $85
              9921 0044  ld   $44
              9922 00a5  ld   $a5
              9923 0043  ld   $43
              9924 0085  ld   $85
              9925 0045  ld   $45
              9926 00d0  ld   $d0
              9927 000e  ld   $0e
              9928 0020  ld   $20
              9929 0015  ld   $15
              992a 00e7  ld   $e7
              992b 0020  ld   $20
              992c 006d  ld   $6d
              992d 00e5  ld   $e5
              992e 00a5  ld   $a5
              992f 0046  ld   $46
              9930 0085  ld   $85
              9931 0042  ld   $42
              9932 00a5  ld   $a5
              9933 0047  ld   $47
              9934 0085  ld   $85
              9935 0043  ld   $43
              9936 00a0  ld   $a0
              9937 0000  ld   $00
              9938 00a5  ld   $a5
              9939 00ca  ld   $ca
              993a 00c5  ld   $c5
              993b 0044  ld   $44
              993c 00a5  ld   $a5
              993d 00cb  ld   $cb
              993e 00e5  ld   $e5
              993f 0045  ld   $45
              9940 00b0  ld   $b0
              9941 0016  ld   $16
              9942 00a5  ld   $a5
              9943 0044  ld   $44
              9944 00d0  ld   $d0
              9945 0002  ld   $02
              9946 00c6  ld   $c6
              9947 0045  ld   $45
              9948 00c6  ld   $c6
              9949 0044  ld   $44
              994a 00a5  ld   $a5
              994b 0046  ld   $46
              994c 00d0  ld   $d0
              994d 0002  ld   $02
              994e 00c6  ld   $c6
              994f 0047  ld   $47
              9950 00c6  ld   $c6
              9951 0046  ld   $46
              9952 00b1  ld   $b1
              9953 0044  ld   $44
              9954 0091  ld   $91
              9955 0046  ld   $46
              9956 0090  ld   $90
              9957 00e0  ld   $e0
              9958 00a5  ld   $a5
              9959 0046  ld   $46
              995a 0085  ld   $85
              995b 00ca  ld   $ca
              995c 00a5  ld   $a5
              995d 0047  ld   $47
              995e 0085  ld   $85
              995f 00cb  ld   $cb
              9960 0060  ld   $60
              9961 0020  ld   $20
              9962 00c9  ld   $c9
              9963 00e3  ld   $e3
              9964 00c8  ld   $c8
              9965 00b9  ld   $b9
              9966 0000  ld   $00
              9967 00eb  ld   $eb
              9968 0030  ld   $30
              9969 00f7  ld   $f7
              996a 00c9  ld   $c9
              996b 008d  ld   $8d
              996c 00d0  ld   $d0
              996d 0006  ld   $06
              996e 00a9  ld   $a9
              996f 0000  ld   $00
              9970 0085  ld   $85
              9971 0081  ld   $81
              9972 00a9  ld   $a9
              9973 008d  ld   $8d
              9974 00e6  ld   $e6
              9975 0081  ld   $81
              9976 004c  ld   $4c
              9977 00ef  ld   $ef
              9978 00ff  ld   $ff
              9979 00ea  ld   $ea
              997a 00ea  ld   $ea
              997b 00ea  ld   $ea
              * 6 times
              997f 00a0  ld   $a0
              9980 0006  ld   $06
              9981 0020  ld   $20
              9982 00d3  ld   $d3
              9983 00ee  ld   $ee
              9984 0024  ld   $24
              9985 00d9  ld   $d9
              9986 0030  ld   $30
              9987 0003  ld   $03
              9988 004c  ld   $4c
              9989 00b6  ld   $b6
              998a 00e2  ld   $e2
              998b 004c  ld   $4c
              998c 009a  ld   $9a
              998d 00eb  ld   $eb
              998e 002a  ld   $2a
              998f 0069  ld   $69
              9990 00a0  ld   $a0
              9991 00dd  ld   $dd
              9992 0000  ld   $00
              9993 0002  ld   $02
              9994 00d0  ld   $d0
              9995 0053  ld   $53
              9996 00b1  ld   $b1
              9997 0086  ld   $86
              9998 000a  ld   $0a
              9999 0030  ld   $30
              999a 0006  ld   $06
              999b 0088  ld   $88
              999c 00b1  ld   $b1
              999d 0086  ld   $86
              999e 0030  ld   $30
              999f 0029  ld   $29
              99a0 00c8  ld   $c8
              99a1 00e4  ld   $e4
              99a2 0000  ld   $00
              99a3 0000  ld   $00
              99a4 0086  ld   $86
              99a5 00c8  ld   $c8
              99a6 0098  ld   $98
              99a7 0048  ld   $48
              99a8 00a2  ld   $a2
              99a9 0000  ld   $00
              99aa 00a1  ld   $a1
              99ab 0086  ld   $86
              99ac 00aa  ld   $aa
              99ad 004a  ld   $4a
              99ae 0049  ld   $49
              99af 0048  ld   $48
              99b0 0011  ld   $11
              99b1 0086  ld   $86
              99b2 00c9  ld   $c9
              99b3 00c0  ld   $c0
              99b4 0090  ld   $90
              99b5 0001  ld   $01
              99b6 00e8  ld   $e8
              99b7 00c8  ld   $c8
              99b8 00d0  ld   $d0
              99b9 00f3  ld   $f3
              99ba 0068  ld   $68
              99bb 00a8  ld   $a8
              99bc 008a  ld   $8a
              99bd 004c  ld   $4c
              99be 00c0  ld   $c0
              99bf 00e4  ld   $e4
              99c0 00e6  ld   $e6
              99c1 00e9  ld   $e9
              99c2 00a6  ld   $a6
              99c3 00e9  ld   $e9
              99c4 00f0  ld   $f0
              99c5 00bc  ld   $bc
              99c6 009d  ld   $9d
              99c7 0000  ld   $00
              99c8 0002  ld   $02
              99c9 0060  ld   $60
              99ca 00a6  ld   $a6
              99cb 00c8  ld   $c8
              99cc 00a9  ld   $a9
              99cd 00a0  ld   $a0
              99ce 00e8  ld   $e8
              99cf 00dd  ld   $dd
              99d0 0000  ld   $00
              99d1 0002  ld   $02
              99d2 00b0  ld   $b0
              99d3 00fa  ld   $fa
              99d4 00b1  ld   $b1
              99d5 0086  ld   $86
              99d6 0029  ld   $29
              99d7 003f  ld   $3f
              99d8 004a  ld   $4a
              99d9 00d0  ld   $d0
              99da 00b6  ld   $b6
              99db 00bd  ld   $bd
              99dc 0000  ld   $00
              99dd 0002  ld   $02
              99de 00b0  ld   $b0
              99df 0006  ld   $06
              99e0 0069  ld   $69
              99e1 003f  ld   $3f
              99e2 00c9  ld   $c9
              99e3 001a  ld   $1a
              99e4 0090  ld   $90
              99e5 006f  ld   $6f
              99e6 0069  ld   $69
              99e7 004f  ld   $4f
              99e8 00c9  ld   $c9
              99e9 000a  ld   $0a
              99ea 0090  ld   $90
              99eb 0069  ld   $69
              99ec 00a6  ld   $a6
              99ed 0085  ld   $85
              99ee 00c8  ld   $c8
              99ef 00b1  ld   $b1
              99f0 0086  ld   $86
              99f1 0029  ld   $29
              99f2 00e0  ld   $e0
              99f3 00c9  ld   $c9
              99f4 0020  ld   $20
              99f5 00f0  ld   $f0
              99f6 007a  ld   $7a
              99f7 00b5  ld   $b5
              99f8 00b0  ld   $b0
              99f9 0085  ld   $85
              99fa 00c8  ld   $c8
              99fb fe00  bra  ac          ;+-----------------------------------+
              99fc fcfd  bra  $99fd       ;|                                   |
              99fd 1418  ld   $18,y       ;| Trampoline for page $9900 lookups |
              99fe e006  jmp  y,$06       ;|                                   |
              99ff c218  st   [$18]       ;+-----------------------------------+
              9a00 00b5  ld   $b5
              9a01 00d1  ld   $d1
              9a02 0085  ld   $85
              9a03 00e9  ld   $e9
              9a04 0088  ld   $88
              9a05 00b1  ld   $b1
              9a06 0086  ld   $86
              9a07 000a  ld   $0a
              9a08 0010  ld   $10
              9a09 00fa  ld   $fa
              9a0a 0088  ld   $88
              9a0b 00b0  ld   $b0
              9a0c 0038  ld   $38
              9a0d 000a  ld   $0a
              9a0e 0030  ld   $30
              9a0f 0035  ld   $35
              9a10 00b4  ld   $b4
              9a11 0058  ld   $58
              9a12 0084  ld   $84
              9a13 0087  ld   $87
              9a14 00b4  ld   $b4
              9a15 0090  ld   $90
              9a16 00e8  ld   $e8
              9a17 0010  ld   $10
              9a18 00da  ld   $da
              9a19 00f0  ld   $f0
              9a1a 00b3  ld   $b3
              9a1b 00c9  ld   $c9
              9a1c 007e  ld   $7e
              9a1d 00b0  ld   $b0
              9a1e 0022  ld   $22
              9a1f 00ca  ld   $ca
              9a20 0010  ld   $10
              9a21 0004  ld   $04
              9a22 00a0  ld   $a0
              9a23 0006  ld   $06
              9a24 0010  ld   $10
              9a25 0029  ld   $29
              9a26 0094  ld   $94
              9a27 0090  ld   $90
              9a28 00a4  ld   $a4
              9a29 0087  ld   $87
              9a2a 0094  ld   $94
              9a2b 0058  ld   $58
              9a2c 00a4  ld   $a4
              9a2d 00c8  ld   $c8
              9a2e 0094  ld   $94
              9a2f 00b0  ld   $b0
              9a30 00a4  ld   $a4
              9a31 00e9  ld   $e9
              9a32 0094  ld   $94
              9a33 00d1  ld   $d1
              9a34 0029  ld   $29
              9a35 001f  ld   $1f
              9a36 00a8  ld   $a8
              9a37 00b9  ld   $b9
              9a38 0020  ld   $20
              9a39 00ec  ld   $ec
              9a3a 000a  ld   $0a
              9a3b 00a8  ld   $a8
              9a3c 00a9  ld   $a9
              9a3d 0076  ld   $76
              9a3e 002a  ld   $2a
              9a3f 0085  ld   $85
              9a40 0087  ld   $87
              9a41 00d0  ld   $d0
              9a42 0001  ld   $01
              9a43 00c8  ld   $c8
              9a44 00c8  ld   $c8
              9a45 0086  ld   $86
              9a46 0085  ld   $85
              9a47 00b1  ld   $b1
              9a48 0086  ld   $86
              9a49 0030  ld   $30
              9a4a 0084  ld   $84
              9a4b 00d0  ld   $d0
              9a4c 0005  ld   $05
              9a4d 00a0  ld   $a0
              9a4e 000e  ld   $0e
              9a4f 004c  ld   $4c
              9a50 00e0  ld   $e0
              9a51 00e3  ld   $e3
              9a52 00c9  ld   $c9
              9a53 0003  ld   $03
              9a54 00b0  ld   $b0
              9a55 00c3  ld   $c3
              9a56 004a  ld   $4a
              9a57 00a6  ld   $a6
              9a58 00c8  ld   $c8
              9a59 00e8  ld   $e8
              9a5a 00bd  ld   $bd
              9a5b 0000  ld   $00
              9a5c 0002  ld   $02
              9a5d 0090  ld   $90
              9a5e 0004  ld   $04
              9a5f 00c9  ld   $c9
              9a60 00a2  ld   $a2
              9a61 00f0  ld   $f0
              9a62 000a  ld   $0a
              9a63 00c9  ld   $c9
              9a64 00df  ld   $df
              9a65 00f0  ld   $f0
              9a66 0006  ld   $06
              9a67 0086  ld   $86
              9a68 00c8  ld   $c8
              9a69 0020  ld   $20
              9a6a 001c  ld   $1c
              9a6b 00e4  ld   $e4
              9a6c 00c8  ld   $c8
              9a6d 0088  ld   $88
              9a6e 00a6  ld   $a6
              9a6f 0085  ld   $85
              9a70 00b1  ld   $b1
              9a71 0086  ld   $86
              9a72 0088  ld   $88
              9a73 000a  ld   $0a
              9a74 0010  ld   $10
              9a75 00cf  ld   $cf
              9a76 00b4  ld   $b4
              9a77 0058  ld   $58
              9a78 0084  ld   $84
              9a79 0087  ld   $87
              9a7a 00b4  ld   $b4
              9a7b 0090  ld   $90
              9a7c 00e8  ld   $e8
              9a7d 00b1  ld   $b1
              9a7e 0086  ld   $86
              9a7f 0029  ld   $29
              9a80 009f  ld   $9f
              9a81 00d0  ld   $d0
              9a82 00ed  ld   $ed
              9a83 0085  ld   $85
              9a84 0072  ld   $72
              9a85 0085  ld   $85
              9a86 0073  ld   $73
              9a87 0098  ld   $98
              9a88 0048  ld   $48
              9a89 0086  ld   $86
              9a8a 0085  ld   $85
              9a8b 00b4  ld   $b4
              9a8c 00d0  ld   $d0
              9a8d 0084  ld   $84
              9a8e 00c9  ld   $c9
              9a8f 0018  ld   $18
              9a90 00a9  ld   $a9
              9a91 000a  ld   $0a
              9a92 0085  ld   $85
              9a93 0079  ld   $79
              9a94 00a2  ld   $a2
              9a95 0000  ld   $00
              9a96 00c8  ld   $c8
              9a97 00b9  ld   $b9
              9a98 0000  ld   $00
              9a99 0002  ld   $02
              9a9a 0029  ld   $29
              9a9b 000f  ld   $0f
              9a9c 0065  ld   $65
              9a9d 0072  ld   $72
              9a9e 0048  ld   $48
              9a9f 008a  ld   $8a
              9aa0 0065  ld   $65
              9aa1 0073  ld   $73
              9aa2 0030  ld   $30
              9aa3 001c  ld   $1c
              9aa4 00aa  ld   $aa
              9aa5 0068  ld   $68
              9aa6 00c6  ld   $c6
              9aa7 0079  ld   $79
              9aa8 00d0  ld   $d0
              9aa9 00e5  ld   $e5
              9aaa 0000  ld   $00
              9aab 0000  ld   $00
              9aac 00f2  ld   $f2
              9aad 0085  ld   $85
              9aae 0072  ld   $72
              9aaf 0086  ld   $86
              9ab0 0073  ld   $73
              9ab1 00c4  ld   $c4
              9ab2 00e9  ld   $e9
              9ab3 00d0  ld   $d0
              9ab4 00de  ld   $de
              9ab5 00a4  ld   $a4
              9ab6 00c9  ld   $c9
              9ab7 00c8  ld   $c8
              9ab8 0084  ld   $84
              9ab9 00e9  ld   $e9
              9aba 0020  ld   $20
              9abb 001c  ld   $1c
              9abc 00e4  ld   $e4
              9abd 0068  ld   $68
              9abe 00a8  ld   $a8
              9abf 00a5  ld   $a5
              9ac0 0073  ld   $73
              9ac1 00b0  ld   $b0
              9ac2 00a9  ld   $a9
              9ac3 00a0  ld   $a0
              9ac4 0000  ld   $00
              9ac5 0010  ld   $10
              9ac6 008b  ld   $8b
              9ac7 0085  ld   $85
              9ac8 0073  ld   $73
              9ac9 0086  ld   $86
              9aca 0072  ld   $72
              9acb 00a2  ld   $a2
              9acc 0004  ld   $04
              9acd 0086  ld   $86
              9ace 00c9  ld   $c9
              9acf 00a9  ld   $a9
              9ad0 00b0  ld   $b0
              9ad1 0085  ld   $85
              9ad2 0079  ld   $79
              9ad3 00a5  ld   $a5
              9ad4 0072  ld   $72
              9ad5 00dd  ld   $dd
              9ad6 0063  ld   $63
              9ad7 00e5  ld   $e5
              9ad8 00a5  ld   $a5
              9ad9 0073  ld   $73
              9ada 00fd  ld   $fd
              9adb 0068  ld   $68
              9adc 00e5  ld   $e5
              9add 0090  ld   $90
              9ade 000d  ld   $0d
              9adf 0085  ld   $85
              9ae0 0073  ld   $73
              9ae1 00a5  ld   $a5
              9ae2 0072  ld   $72
              9ae3 00fd  ld   $fd
              9ae4 0063  ld   $63
              9ae5 00e5  ld   $e5
              9ae6 0085  ld   $85
              9ae7 0072  ld   $72
              9ae8 00e6  ld   $e6
              9ae9 0079  ld   $79
              9aea 00d0  ld   $d0
              9aeb 00e7  ld   $e7
              9aec 00a5  ld   $a5
              9aed 0079  ld   $79
              9aee 00e8  ld   $e8
              9aef 00ca  ld   $ca
              9af0 00f0  ld   $f0
              9af1 000e  ld   $0e
              9af2 00c9  ld   $c9
              9af3 00b0  ld   $b0
              9af4 00f0  ld   $f0
              9af5 0002  ld   $02
              9af6 0085  ld   $85
              9af7 00c9  ld   $c9
              9af8 0024  ld   $24
              9af9 00c9  ld   $c9
              9afa 0030  ld   $30
              9afb fe00  bra  ac          ;+-----------------------------------+
              9afc fcfd  bra  $9afd       ;|                                   |
              9afd 1418  ld   $18,y       ;| Trampoline for page $9a00 lookups |
              9afe e006  jmp  y,$06       ;|                                   |
              9aff c218  st   [$18]       ;+-----------------------------------+
              9b00 0004  ld   $04
              9b01 00a5  ld   $a5
              9b02 0082  ld   $82
              9b03 00f0  ld   $f0
              9b04 000b  ld   $0b
              9b05 0020  ld   $20
              9b06 00c9  ld   $c9
              9b07 00e3  ld   $e3
              9b08 0024  ld   $24
              9b09 0078  ld   $78
              9b0a 0010  ld   $10
              9b0b 0004  ld   $04
              9b0c 0099  ld   $99
              9b0d 0000  ld   $00
              9b0e 0002  ld   $02
              9b0f 00c8  ld   $c8
              9b10 00ca  ld   $ca
              9b11 0010  ld   $10
              9b12 00c1  ld   $c1
              9b13 0060  ld   $60
              9b14 0001  ld   $01
              9b15 000a  ld   $0a
              9b16 0064  ld   $64
              9b17 00e8  ld   $e8
              9b18 0010  ld   $10
              9b19 0000  ld   $00
              9b1a 0000  ld   $00
              9b1b 0000  ld   $00
              9b1c 0003  ld   $03
              9b1d 0027  ld   $27
              9b1e 00a5  ld   $a5
              9b1f 00ca  ld   $ca
              9b20 0085  ld   $85
              9b21 0046  ld   $46
              9b22 00a5  ld   $a5
              9b23 00cb  ld   $cb
              9b24 0085  ld   $85
              9b25 0047  ld   $47
              9b26 00e8  ld   $e8
              9b27 00a5  ld   $a5
              9b28 0047  ld   $47
              9b29 0085  ld   $85
              9b2a 0045  ld   $45
              9b2b 00a5  ld   $a5
              9b2c 0046  ld   $46
              9b2d 0085  ld   $85
              9b2e 0044  ld   $44
              9b2f 00c5  ld   $c5
              9b30 004c  ld   $4c
              9b31 00a5  ld   $a5
              9b32 0045  ld   $45
              9b33 00e5  ld   $e5
              9b34 004d  ld   $4d
              9b35 00b0  ld   $b0
              9b36 0026  ld   $26
              9b37 00a0  ld   $a0
              9b38 0001  ld   $01
              9b39 00b1  ld   $b1
              9b3a 0044  ld   $44
              9b3b 00e5  ld   $e5
              9b3c 00ce  ld   $ce
              9b3d 00c8  ld   $c8
              9b3e 00b1  ld   $b1
              9b3f 0044  ld   $44
              9b40 00e5  ld   $e5
              9b41 00cf  ld   $cf
              9b42 00b0  ld   $b0
              9b43 0019  ld   $19
              9b44 00a0  ld   $a0
              9b45 0000  ld   $00
              9b46 00a5  ld   $a5
              9b47 0046  ld   $46
              9b48 0071  ld   $71
              9b49 0044  ld   $44
              9b4a 0085  ld   $85
              9b4b 0046  ld   $46
              9b4c 0090  ld   $90
              9b4d 0003  ld   $03
              9b4e 00e6  ld   $e6
              9b4f 0047  ld   $47
              9b50 0018  ld   $18
              9b51 00c8  ld   $c8
              9b52 00a5  ld   $a5
              9b53 00ce  ld   $ce
              9b54 00f1  ld   $f1
              9b55 0044  ld   $44
              9b56 00c8  ld   $c8
              9b57 00a5  ld   $a5
              9b58 00cf  ld   $cf
              9b59 00f1  ld   $f1
              9b5a 0044  ld   $44
              9b5b 00b0  ld   $b0
              9b5c 00ca  ld   $ca
              9b5d 0060  ld   $60
              9b5e 0046  ld   $46
              9b5f 0078  ld   $78
              9b60 00a5  ld   $a5
              9b61 004c  ld   $4c
              9b62 0085  ld   $85
              9b63 00ca  ld   $ca
              9b64 00a5  ld   $a5
              9b65 004d  ld   $4d
              9b66 0085  ld   $85
              9b67 00cb  ld   $cb
              9b68 00a5  ld   $a5
              9b69 004a  ld   $4a
              9b6a 0085  ld   $85
              9b6b 00cc  ld   $cc
              9b6c 00a5  ld   $a5
              9b6d 004b  ld   $4b
              9b6e 0085  ld   $85
              9b6f 00cd  ld   $cd
              9b70 00a9  ld   $a9
              9b71 0000  ld   $00
              9b72 0085  ld   $85
              9b73 0083  ld   $83
              9b74 0085  ld   $85
              9b75 0084  ld   $84
              9b76 0085  ld   $85
              9b77 0086  ld   $86
              9b78 00a9  ld   $a9
              9b79 0000  ld   $00
              9b7a 0085  ld   $85
              9b7b 001d  ld   $1d
              9b7c 0060  ld   $60
              9b7d 00a5  ld   $a5
              9b7e 00d0  ld   $d0
              9b7f 0069  ld   $69
              9b80 0005  ld   $05
              9b81 0085  ld   $85
              9b82 00d2  ld   $d2
              9b83 00a5  ld   $a5
              9b84 00d1  ld   $d1
              9b85 0069  ld   $69
              9b86 0000  ld   $00
              9b87 0085  ld   $85
              9b88 00d3  ld   $d3
              9b89 00a5  ld   $a5
              9b8a 00d2  ld   $d2
              9b8b 00c5  ld   $c5
              9b8c 00ca  ld   $ca
              9b8d 00a5  ld   $a5
              9b8e 00d3  ld   $d3
              9b8f 00e5  ld   $e5
              9b90 00cb  ld   $cb
              9b91 0090  ld   $90
              9b92 0003  ld   $03
              9b93 004c  ld   $4c
              9b94 006b  ld   $6b
              9b95 00e3  ld   $e3
              9b96 00a5  ld   $a5
              9b97 00ce  ld   $ce
              9b98 0091  ld   $91
              9b99 00d0  ld   $d0
              9b9a 00a5  ld   $a5
              9b9b 00cf  ld   $cf
              9b9c 00c8  ld   $c8
              9b9d 0091  ld   $91
              9b9e 00d0  ld   $d0
              9b9f 00a5  ld   $a5
              9ba0 00d2  ld   $d2
              9ba1 00c8  ld   $c8
              9ba2 0091  ld   $91
              9ba3 00d0  ld   $d0
              9ba4 00a5  ld   $a5
              9ba5 00d3  ld   $d3
              9ba6 00c8  ld   $c8
              9ba7 0091  ld   $91
              9ba8 00d0  ld   $d0
              9ba9 00a9  ld   $a9
              9baa 0000  ld   $00
              9bab 00c8  ld   $c8
              9bac 0091  ld   $91
              9bad 00d0  ld   $d0
              9bae 00c8  ld   $c8
              9baf 0091  ld   $91
              9bb0 00d0  ld   $d0
              9bb1 00e6  ld   $e6
              9bb2 0000  ld   $00
              9bb3 0000  ld   $00
              9bb4 00a5  ld   $a5
              9bb5 00d2  ld   $d2
              9bb6 0085  ld   $85
              9bb7 00cc  ld   $cc
              9bb8 00a5  ld   $a5
              9bb9 00d3  ld   $d3
              9bba 0085  ld   $85
              9bbb 00cd  ld   $cd
              9bbc 00a5  ld   $a5
              9bbd 00d0  ld   $d0
              9bbe 0090  ld   $90
              9bbf 0043  ld   $43
              9bc0 0085  ld   $85
              9bc1 00ce  ld   $ce
              9bc2 0084  ld   $84
              9bc3 00cf  ld   $cf
              9bc4 0020  ld   $20
              9bc5 00ff  ld   $ff
              9bc6 00e6  ld   $e6
              9bc7 0030  ld   $30
              9bc8 000e  ld   $0e
              9bc9 00c9  ld   $c9
              9bca 0040  ld   $40
              9bcb 00f0  ld   $f0
              9bcc 000a  ld   $0a
              9bcd 004c  ld   $4c
              9bce 0028  ld   $28
              9bcf 00e6  ld   $e6
              9bd0 0006  ld   $06
              9bd1 00c9  ld   $c9
              9bd2 0049  ld   $49
              9bd3 00d0  ld   $d0
              9bd4 0007  ld   $07
              9bd5 00a9  ld   $a9
              9bd6 0049  ld   $49
              9bd7 0085  ld   $85
              9bd8 00cf  ld   $cf
              9bd9 0020  ld   $20
              9bda 00ff  ld   $ff
              9bdb 00e6  ld   $e6
              9bdc 00a5  ld   $a5
              9bdd 004b  ld   $4b
              9bde 0085  ld   $85
              9bdf 00d1  ld   $d1
              9be0 00a5  ld   $a5
              9be1 004a  ld   $4a
              9be2 0085  ld   $85
              9be3 00d0  ld   $d0
              9be4 00c5  ld   $c5
              9be5 00cc  ld   $cc
              9be6 00a5  ld   $a5
              9be7 00d1  ld   $d1
              9be8 00e5  ld   $e5
              9be9 00cd  ld   $cd
              9bea 00b0  ld   $b0
              9beb 0094  ld   $94
              9bec 00b1  ld   $b1
              9bed 00d0  ld   $d0
              9bee 00c8  ld   $c8
              9bef 00c5  ld   $c5
              9bf0 00ce  ld   $ce
              9bf1 00d0  ld   $d0
              9bf2 0006  ld   $06
              9bf3 00b1  ld   $b1
              9bf4 00d0  ld   $d0
              9bf5 00c5  ld   $c5
              9bf6 00cf  ld   $cf
              9bf7 00f0  ld   $f0
              9bf8 000e  ld   $0e
              9bf9 00c8  ld   $c8
              9bfa 00b1  ld   $b1
              9bfb fe00  bra  ac          ;+-----------------------------------+
              9bfc fcfd  bra  $9bfd       ;|                                   |
              9bfd 1418  ld   $18,y       ;| Trampoline for page $9b00 lookups |
              9bfe e006  jmp  y,$06       ;|                                   |
              9bff c218  st   [$18]       ;+-----------------------------------+
              9c00 00d0  ld   $d0
              9c01 0048  ld   $48
              9c02 00c8  ld   $c8
              9c03 00b1  ld   $b1
              9c04 00d0  ld   $d0
              9c05 0085  ld   $85
              9c06 00d1  ld   $d1
              9c07 0068  ld   $68
              9c08 00a0  ld   $a0
              9c09 0000  ld   $00
              9c0a 00f0  ld   $f0
              9c0b 00db  ld   $db
              9c0c 00a5  ld   $a5
              9c0d 00d0  ld   $d0
              9c0e 0069  ld   $69
              9c0f 0003  ld   $03
              9c10 0020  ld   $20
              9c11 000a  ld   $0a
              9c12 00e7  ld   $e7
              9c13 00a5  ld   $a5
              9c14 00d1  ld   $d1
              9c15 0069  ld   $69
              9c16 0000  ld   $00
              9c17 0095  ld   $95
              9c18 0088  ld   $88
              9c19 00a5  ld   $a5
              9c1a 00cf  ld   $cf
              9c1b 00c9  ld   $c9
              9c1c 0040  ld   $40
              9c1d 00d0  ld   $d0
              9c1e 001c  ld   $1c
              9c1f 0088  ld   $88
              9c20 0098  ld   $98
              9c21 0020  ld   $20
              9c22 000a  ld   $0a
              9c23 00e7  ld   $e7
              9c24 0088  ld   $88
              9c25 0094  ld   $94
              9c26 0088  ld   $88
              9c27 00a0  ld   $a0
              9c28 0003  ld   $03
              9c29 00f6  ld   $f6
              9c2a 0088  ld   $88
              9c2b 00c8  ld   $c8
              9c2c 00b1  ld   $b1
              9c2d 00d0  ld   $d0
              9c2e 0030  ld   $30
              9c2f 00f9  ld   $f9
              9c30 0010  ld   $10
              9c31 0009  ld   $09
              9c32 00a9  ld   $a9
              9c33 0000  ld   $00
              9c34 0085  ld   $85
              9c35 00d4  ld   $d4
              9c36 0085  ld   $85
              9c37 00d5  ld   $d5
              9c38 00a2  ld   $a2
              9c39 0018  ld   $18
              9c3a 0048  ld   $48
              9c3b 00a0  ld   $a0
              9c3c 0000  ld   $00
              9c3d 00b1  ld   $b1
              9c3e 00de  ld   $de
              9c3f 0010  ld   $10
              9c40 0018  ld   $18
              9c41 000a  ld   $0a
              9c42 0030  ld   $30
              9c43 0081  ld   $81
              9c44 0020  ld   $20
              9c45 00ff  ld   $ff
              9c46 00e6  ld   $e6
              9c47 0020  ld   $20
              9c48 0008  ld   $08
              9c49 00e7  ld   $e7
              9c4a 0020  ld   $20
              9c4b 00ff  ld   $ff
              9c4c 00e6  ld   $e6
              9c4d 0095  ld   $95
              9c4e 00a8  ld   $a8
              9c4f 0024  ld   $24
              9c50 00d4  ld   $d4
              9c51 0010  ld   $10
              9c52 0001  ld   $01
              9c53 00ca  ld   $ca
              9c54 0020  ld   $20
              9c55 00ff  ld   $ff
              9c56 00e6  ld   $e6
              9c57 00b0  ld   $b0
              9c58 00e6  ld   $e6
              9c59 00c9  ld   $c9
              9c5a 0028  ld   $28
              9c5b 00d0  ld   $d0
              9c5c 001f  ld   $1f
              9c5d 00a5  ld   $a5
              9c5e 00de  ld   $de
              9c5f 0020  ld   $20
              9c60 000a  ld   $0a
              9c61 00e7  ld   $e7
              9c62 00a5  ld   $a5
              9c63 00df  ld   $df
              9c64 0095  ld   $95
              9c65 0088  ld   $88
              9c66 0024  ld   $24
              9c67 00d4  ld   $d4
              9c68 0030  ld   $30
              9c69 000b  ld   $0b
              9c6a 00a9  ld   $a9
              9c6b 0001  ld   $01
              9c6c 0020  ld   $20
              9c6d 000a  ld   $0a
              9c6e 00e7  ld   $e7
              9c6f 00a9  ld   $a9
              9c70 0000  ld   $00
              9c71 0095  ld   $95
              9c72 0088  ld   $88
              9c73 00f6  ld   $f6
              9c74 0088  ld   $88
              9c75 0020  ld   $20
              9c76 00ff  ld   $ff
              9c77 00e6  ld   $e6
              9c78 0030  ld   $30
              9c79 00f9  ld   $f9
              9c7a 00b0  ld   $b0
              9c7b 00d3  ld   $d3
              9c7c 0024  ld   $24
              9c7d 00d4  ld   $d4
              9c7e 0010  ld   $10
              9c7f 0006  ld   $06
              9c80 00c9  ld   $c9
              9c81 0004  ld   $04
              9c82 00b0  ld   $b0
              9c83 00d0  ld   $d0
              9c84 0046  ld   $46
              9c85 00d4  ld   $d4
              9c86 00a8  ld   $a8
              9c87 0085  ld   $85
              9c88 00d6  ld   $d6
              9c89 00b9  ld   $b9
              9c8a 0098  ld   $98
              9c8b 00e9  ld   $e9
              9c8c 0029  ld   $29
              9c8d 0055  ld   $55
              9c8e 000a  ld   $0a
              9c8f 0085  ld   $85
              9c90 00d7  ld   $d7
              9c91 0068  ld   $68
              9c92 00a8  ld   $a8
              9c93 00b9  ld   $b9
              9c94 0098  ld   $98
              9c95 00e9  ld   $e9
              9c96 0029  ld   $29
              9c97 00aa  ld   $aa
              9c98 00c5  ld   $c5
              9c99 00d7  ld   $d7
              9c9a 00b0  ld   $b0
              9c9b 0009  ld   $09
              9c9c 0098  ld   $98
              9c9d 0048  ld   $48
              9c9e 0020  ld   $20
              9c9f 00ff  ld   $ff
              9ca0 00e6  ld   $e6
              9ca1 00a5  ld   $a5
              9ca2 00d6  ld   $d6
              9ca3 0090  ld   $90
              9ca4 0095  ld   $95
              9ca5 00b9  ld   $b9
              9ca6 0010  ld   $10
              9ca7 00ea  ld   $ea
              9ca8 0085  ld   $85
              9ca9 00ce  ld   $ce
              9caa 00b9  ld   $b9
              9cab 0088  ld   $88
              9cac 00ea  ld   $ea
              9cad 0085  ld   $85
              9cae 00cf  ld   $cf
              9caf 0020  ld   $20
              9cb0 00fc  ld   $fc
              9cb1 00e6  ld   $e6
              9cb2 004c  ld   $4c
              9cb3 00d8  ld   $d8
              9cb4 00e6  ld   $e6
              9cb5 006c  ld   $6c
              9cb6 00ce  ld   $ce
              9cb7 0000  ld   $00
              9cb8 00e6  ld   $e6
              9cb9 00e7  ld   $e7
              9cba 0000  ld   $00
              9cbb 0000  ld   $00
              9cbc 00de  ld   $de
              9cbd 00d0  ld   $d0
              9cbe 0002  ld   $02
              9cbf 00e6  ld   $e6
              9cc0 00df  ld   $df
              9cc1 00b1  ld   $b1
              9cc2 00de  ld   $de
              9cc3 0060  ld   $60
              9cc4 0094  ld   $94
              9cc5 0087  ld   $87
              9cc6 00ca  ld   $ca
              9cc7 0030  ld   $30
              9cc8 0003  ld   $03
              9cc9 0095  ld   $95
              9cca 0050  ld   $50
              9ccb 0060  ld   $60
              9ccc 00a0  ld   $a0
              9ccd 0066  ld   $66
              9cce 004c  ld   $4c
              9ccf 00e0  ld   $e0
              9cd0 00e3  ld   $e3
              9cd1 00a0  ld   $a0
              9cd2 0000  ld   $00
              9cd3 00b5  ld   $b5
              9cd4 0050  ld   $50
              9cd5 0085  ld   $85
              9cd6 00ce  ld   $ce
              9cd7 00b5  ld   $b5
              9cd8 00a8  ld   $a8
              9cd9 0085  ld   $85
              9cda 00cf  ld   $cf
              9cdb 00b5  ld   $b5
              9cdc 0088  ld   $88
              9cdd 00f0  ld   $f0
              9cde 000e  ld   $0e
              9cdf 0085  ld   $85
              9ce0 00cf  ld   $cf
              9ce1 00b1  ld   $b1
              9ce2 00ce  ld   $ce
              9ce3 0048  ld   $48
              9ce4 00c8  ld   $c8
              9ce5 00b1  ld   $b1
              9ce6 00ce  ld   $ce
              9ce7 0085  ld   $85
              9ce8 00cf  ld   $cf
              9ce9 0068  ld   $68
              9cea 0085  ld   $85
              9ceb 00ce  ld   $ce
              9cec 0088  ld   $88
              9ced 00e8  ld   $e8
              9cee 0060  ld   $60
              9cef 0020  ld   $20
              9cf0 004a  ld   $4a
              9cf1 00e7  ld   $e7
              9cf2 0020  ld   $20
              9cf3 0015  ld   $15
              9cf4 00e7  ld   $e7
              9cf5 0098  ld   $98
              9cf6 0020  ld   $20
              9cf7 0008  ld   $08
              9cf8 00e7  ld   $e7
              9cf9 0095  ld   $95
              9cfa 00a8  ld   $a8
              9cfb fe00  bra  ac          ;+-----------------------------------+
              9cfc fcfd  bra  $9cfd       ;|                                   |
              9cfd 1418  ld   $18,y       ;| Trampoline for page $9c00 lookups |
              9cfe e006  jmp  y,$06       ;|                                   |
              9cff c218  st   [$18]       ;+-----------------------------------+
              9d00 00c5  ld   $c5
              9d01 00ce  ld   $ce
              9d02 00d0  ld   $d0
              9d03 0006  ld   $06
              9d04 00c5  ld   $c5
              9d05 00cf  ld   $cf
              9d06 00d0  ld   $d0
              9d07 0002  ld   $02
              9d08 00f6  ld   $f6
              9d09 0050  ld   $50
              9d0a 0060  ld   $60
              9d0b 0020  ld   $20
              9d0c 0082  ld   $82
              9d0d 00e7  ld   $e7
              9d0e 0020  ld   $20
              9d0f 0059  ld   $59
              9d10 00e7  ld   $e7
              9d11 0020  ld   $20
              9d12 0015  ld   $15
              9d13 00e7  ld   $e7
              9d14 0024  ld   $24
              9d15 00cf  ld   $cf
              9d16 0030  ld   $30
              9d17 001b  ld   $1b
              9d18 00ca  ld   $ca
              9d19 0060  ld   $60
              9d1a 0020  ld   $20
              9d1b 0015  ld   $15
              9d1c 00e7  ld   $e7
              9d1d 00a5  ld   $a5
              9d1e 00cf  ld   $cf
              9d1f 00d0  ld   $d0
              9d20 0004  ld   $04
              9d21 00a5  ld   $a5
              9d22 00ce  ld   $ce
              9d23 00f0  ld   $f0
              9d24 00f3  ld   $f3
              9d25 00a9  ld   $a9
              9d26 00ff  ld   $ff
              9d27 0020  ld   $20
              9d28 0008  ld   $08
              9d29 00e7  ld   $e7
              9d2a 0095  ld   $95
              9d2b 00a8  ld   $a8
              9d2c 0024  ld   $24
              9d2d 00cf  ld   $cf
              9d2e 0030  ld   $30
              9d2f 00e9  ld   $e9
              9d30 0020  ld   $20
              9d31 0015  ld   $15
              9d32 00e7  ld   $e7
              9d33 0098  ld   $98
              9d34 0038  ld   $38
              9d35 00e5  ld   $e5
              9d36 00ce  ld   $ce
              9d37 0020  ld   $20
              9d38 0008  ld   $08
              9d39 00e7  ld   $e7
              9d3a 0098  ld   $98
              9d3b 00e5  ld   $e5
              9d3c 00cf  ld   $cf
              9d3d 0050  ld   $50
              9d3e 0023  ld   $23
              9d3f 00a0  ld   $a0
              9d40 0000  ld   $00
              9d41 0010  ld   $10
              9d42 0090  ld   $90
              9d43 0020  ld   $20
              9d44 006f  ld   $6f
              9d45 00e7  ld   $e7
              9d46 0020  ld   $20
              9d47 0015  ld   $15
              9d48 00e7  ld   $e7
              9d49 00a5  ld   $a5
              9d4a 00ce  ld   $ce
              9d4b 0085  ld   $85
              9d4c 00da  ld   $da
              9d4d 00a5  ld   $a5
              9d4e 00cf  ld   $cf
              9d4f 0085  ld   $85
              9d50 00db  ld   $db
              9d51 0020  ld   $20
              9d52 0015  ld   $15
              9d53 00e7  ld   $e7
              9d54 0018  ld   $18
              9d55 00a5  ld   $a5
              9d56 00ce  ld   $ce
              9d57 0065  ld   $65
              9d58 00da  ld   $da
              9d59 0020  ld   $20
              9d5a 0008  ld   $08
              9d5b 00e7  ld   $e7
              9d5c 00a5  ld   $a5
              9d5d 00cf  ld   $cf
              9d5e 0065  ld   $65
              9d5f 00db  ld   $db
              9d60 0070  ld   $70
              9d61 00dd  ld   $dd
              9d62 0095  ld   $95
              9d63 00a8  ld   $a8
              9d64 0060  ld   $60
              9d65 0020  ld   $20
              9d66 0015  ld   $15
              9d67 00e7  ld   $e7
              9d68 00a4  ld   $a4
              9d69 00ce  ld   $ce
              9d6a 00f0  ld   $f0
              9d6b 0005  ld   $05
              9d6c 0088  ld   $88
              9d6d 00a5  ld   $a5
              9d6e 00cf  ld   $cf
              9d6f 00f0  ld   $f0
              9d70 000c  ld   $0c
              9d71 0060  ld   $60
              9d72 00a5  ld   $a5
              9d73 0081  ld   $81
              9d74 0009  ld   $09
              9d75 0007  ld   $07
              9d76 00a8  ld   $a8
              9d77 00c8  ld   $c8
              9d78 00a9  ld   $a9
              9d79 00a0  ld   $a0
              9d7a 0020  ld   $20
              9d7b 00c9  ld   $c9
              9d7c 00e3  ld   $e3
              9d7d 00c4  ld   $c4
              9d7e 0081  ld   $81
              9d7f 00b0  ld   $b0
              9d80 00f7  ld   $f7
              9d81 0060  ld   $60
              9d82 0020  ld   $20
              9d83 00b1  ld   $b1
              9d84 00e7  ld   $e7
              9d85 0020  ld   $20
              9d86 0015  ld   $15
              9d87 00e7  ld   $e7
              9d88 00a5  ld   $a5
              9d89 00cf  ld   $cf
              9d8a 0010  ld   $10
              9d8b 000a  ld   $0a
              9d8c 00a9  ld   $a9
              9d8d 00ad  ld   $ad
              9d8e 0020  ld   $20
              9d8f 00c9  ld   $c9
              9d90 00e3  ld   $e3
              9d91 0020  ld   $20
              9d92 0072  ld   $72
              9d93 00e7  ld   $e7
              9d94 0050  ld   $50
              9d95 00ef  ld   $ef
              9d96 0088  ld   $88
              9d97 0084  ld   $84
              9d98 00d5  ld   $d5
              9d99 0086  ld   $86
              9d9a 00cf  ld   $cf
              9d9b 00a6  ld   $a6
              9d9c 00ce  ld   $ce
              9d9d 0020  ld   $20
              9d9e 001b  ld   $1b
              9d9f 00e5  ld   $e5
              9da0 00a6  ld   $a6
              9da1 00cf  ld   $cf
              9da2 0060  ld   $60
              9da3 0020  ld   $20
              9da4 0015  ld   $15
              9da5 00e7  ld   $e7
              9da6 00a5  ld   $a5
              9da7 00ce  ld   $ce
              9da8 0085  ld   $85
              9da9 0076  ld   $76
              9daa 00a5  ld   $a5
              9dab 00cf  ld   $cf
              9dac 0085  ld   $85
              9dad 0077  ld   $77
              9dae 0088  ld   $88
              9daf 0084  ld   $84
              9db0 0078  ld   $78
              9db1 00c8  ld   $c8
              9db2 00a9  ld   $a9
              9db3 000a  ld   $0a
              9db4 0085  ld   $85
              9db5 0074  ld   $74
              9db6 0084  ld   $84
              9db7 0075  ld   $75
              9db8 0060  ld   $60
              9db9 0020  ld   $20
              9dba 0015  ld   $15
              9dbb 00e7  ld   $e7
              9dbc 00a5  ld   $a5
              9dbd 00ce  ld   $ce
              9dbe 00a4  ld   $a4
              9dbf 00cf  ld   $cf
              9dc0 0010  ld   $10
              9dc1 00e8  ld   $e8
              9dc2 0000  ld   $00
              9dc3 0000  ld   $00
              9dc4 00f2  ld   $f2
              9dc5 0020  ld   $20
              9dc6 0015  ld   $15
              9dc7 00e7  ld   $e7
              9dc8 00b5  ld   $b5
              9dc9 0050  ld   $50
              9dca 0085  ld   $85
              9dcb 00da  ld   $da
              9dcc 00b5  ld   $b5
              9dcd 0088  ld   $88
              9dce 0085  ld   $85
              9dcf 00db  ld   $db
              9dd0 00a5  ld   $a5
              9dd1 00ce  ld   $ce
              9dd2 0091  ld   $91
              9dd3 00da  ld   $da
              9dd4 00c8  ld   $c8
              9dd5 00a5  ld   $a5
              9dd6 00cf  ld   $cf
              9dd7 0091  ld   $91
              9dd8 00da  ld   $da
              9dd9 00e8  ld   $e8
              9dda 0060  ld   $60
              9ddb 0068  ld   $68
              9ddc 0068  ld   $68
              9ddd 0024  ld   $24
              9dde 00d5  ld   $d5
              9ddf 0010  ld   $10
              9de0 0005  ld   $05
              9de1 0020  ld   $20
              9de2 00cd  ld   $cd
              9de3 00e3  ld   $e3
              9de4 0046  ld   $46
              9de5 00d5  ld   $d5
              9de6 0060  ld   $60
              9de7 00a0  ld   $a0
              9de8 00ff  ld   $ff
              9de9 0084  ld   $84
              9dea 00d7  ld   $d7
              9deb 0060  ld   $60
              9dec 0020  ld   $20
              9ded 00cd  ld   $cd
              9dee 00ef  ld   $ef
              9def 00f0  ld   $f0
              9df0 0007  ld   $07
              9df1 00a9  ld   $a9
              9df2 0025  ld   $25
              9df3 0085  ld   $85
              9df4 00d6  ld   $d6
              9df5 0088  ld   $88
              9df6 0084  ld   $84
              9df7 00d4  ld   $d4
              9df8 00e8  ld   $e8
              9df9 0060  ld   $60
              9dfa 00a5  ld   $a5
              9dfb fe00  bra  ac          ;+-----------------------------------+
              9dfc fcfd  bra  $9dfd       ;|                                   |
              9dfd 1418  ld   $18,y       ;| Trampoline for page $9d00 lookups |
              9dfe e006  jmp  y,$06       ;|                                   |
              9dff c218  st   [$18]       ;+-----------------------------------+
              9e00 00ca  ld   $ca
              9e01 00a4  ld   $a4
              9e02 00cb  ld   $cb
              9e03 00d0  ld   $d0
              9e04 005a  ld   $5a
              9e05 00a0  ld   $a0
              9e06 0041  ld   $41
              9e07 00a5  ld   $a5
              9e08 0084  ld   $84
              9e09 00c9  ld   $c9
              9e0a 0008  ld   $08
              9e0b 00b0  ld   $b0
              9e0c 005e  ld   $5e
              9e0d 00a8  ld   $a8
              9e0e 00e6  ld   $e6
              9e0f 0084  ld   $84
              9e10 00a5  ld   $a5
              9e11 00de  ld   $de
              9e12 0099  ld   $99
              9e13 0000  ld   $00
              9e14 0011  ld   $11
              9e15 00a5  ld   $a5
              9e16 00df  ld   $df
              9e17 0099  ld   $99
              9e18 0008  ld   $08
              9e19 0011  ld   $11
              9e1a 00a5  ld   $a5
              9e1b 00dc  ld   $dc
              9e1c 0099  ld   $99
              9e1d 0010  ld   $10
              9e1e 0011  ld   $11
              9e1f 00a5  ld   $a5
              9e20 00dd  ld   $dd
              9e21 0099  ld   $99
              9e22 0018  ld   $18
              9e23 0011  ld   $11
              9e24 0020  ld   $20
              9e25 0015  ld   $15
              9e26 00e7  ld   $e7
              9e27 0020  ld   $20
              9e28 006d  ld   $6d
              9e29 00e5  ld   $e5
              9e2a 0090  ld   $90
              9e2b 0004  ld   $04
              9e2c 00a0  ld   $a0
              9e2d 0037  ld   $37
              9e2e 00d0  ld   $d0
              9e2f 003b  ld   $3b
              9e30 00a5  ld   $a5
              9e31 0044  ld   $44
              9e32 00a4  ld   $a4
              9e33 0045  ld   $45
              9e34 0085  ld   $85
              9e35 00dc  ld   $dc
              9e36 0084  ld   $84
              9e37 00dd  ld   $dd
              9e38 002c  ld   $2c
              9e39 0011  ld   $11
              9e3a 00d0  ld   $d0
              9e3b 0030  ld   $30
              9e3c 004f  ld   $4f
              9e3d 0018  ld   $18
              9e3e 0069  ld   $69
              9e3f 0003  ld   $03
              9e40 0090  ld   $90
              9e41 0001  ld   $01
              9e42 00c8  ld   $c8
              9e43 00a2  ld   $a2
              9e44 00ff  ld   $ff
              9e45 0086  ld   $86
              9e46 00d9  ld   $d9
              9e47 009a  ld   $9a
              9e48 0085  ld   $85
              9e49 00de  ld   $de
              9e4a 0084  ld   $84
              9e4b 00df  ld   $df
              9e4c 0020  ld   $20
              9e4d 0079  ld   $79
              9e4e 00e6  ld   $e6
              9e4f 0024  ld   $24
              9e50 00d9  ld   $d9
              9e51 0010  ld   $10
              9e52 0049  ld   $49
              9e53 0018  ld   $18
              9e54 00a0  ld   $a0
              9e55 0000  ld   $00
              9e56 00a5  ld   $a5
              9e57 00dc  ld   $dc
              9e58 0071  ld   $71
              9e59 00dc  ld   $dc
              9e5a 00a4  ld   $a4
              9e5b 00dd  ld   $dd
              9e5c 0090  ld   $90
              9e5d 0001  ld   $01
              9e5e 00c8  ld   $c8
              9e5f 00c5  ld   $c5
              9e60 004c  ld   $4c
              9e61 00d0  ld   $d0
              9e62 00d1  ld   $d1
              9e63 00c4  ld   $c4
              9e64 004d  ld   $4d
              9e65 00d0  ld   $d0
              9e66 00cd  ld   $cd
              9e67 00a0  ld   $a0
              9e68 0034  ld   $34
              9e69 0046  ld   $46
              9e6a 00d9  ld   $d9
              9e6b 004c  ld   $4c
              9e6c 00e0  ld   $e0
              9e6d 00e3  ld   $e3
              9e6e 00a0  ld   $a0
              9e6f 004a  ld   $4a
              9e70 00a5  ld   $a5
              9e71 0084  ld   $84
              9e72 00f0  ld   $f0
              9e73 00f7  ld   $f7
              9e74 00c6  ld   $c6
              9e75 0084  ld   $84
              9e76 00a8  ld   $a8
              9e77 00b9  ld   $b9
              9e78 000f  ld   $0f
              9e79 0011  ld   $11
              9e7a 0085  ld   $85
              9e7b 00dc  ld   $dc
              9e7c 00b9  ld   $b9
              9e7d 0017  ld   $17
              9e7e 0011  ld   $11
              9e7f 0085  ld   $85
              9e80 00dd  ld   $dd
              9e81 00be  ld   $be
              9e82 0087  ld   $87
              9e83 0000  ld   $00
              9e84 00b9  ld   $b9
              9e85 0007  ld   $07
              9e86 0011  ld   $11
              9e87 00a8  ld   $a8
              9e88 008a  ld   $8a
              9e89 004c  ld   $4c
              9e8a 007a  ld   $7a
              9e8b 00e8  ld   $e8
              9e8c 00a0  ld   $a0
              9e8d 0063  ld   $63
              9e8e 0020  ld   $20
              9e8f 00c4  ld   $c4
              9e90 00e3  ld   $e3
              9e91 00a0  ld   $a0
              9e92 0001  ld   $01
              9e93 00b1  ld   $b1
              9e94 00dc  ld   $dc
              9e95 00aa  ld   $aa
              9e96 00c8  ld   $c8
              9e97 00b1  ld   $b1
              9e98 00dc  ld   $dc
              9e99 0020  ld   $20
              9e9a 001b  ld   $1b
              9e9b 00e5  ld   $e5
              9e9c 004c  ld   $4c
              9e9d 00b3  ld   $b3
              9e9e 00e2  ld   $e2
              9e9f 00c6  ld   $c6
              9ea0 0083  ld   $83
              9ea1 00a0  ld   $a0
              9ea2 005b  ld   $5b
              9ea3 00a5  ld   $a5
              9ea4 0083  ld   $83
              9ea5 00f0  ld   $f0
              9ea6 00c4  ld   $c4
              9ea7 00a8  ld   $a8
              9ea8 00b5  ld   $b5
              9ea9 0050  ld   $50
              9eaa 00d9  ld   $d9
              9eab 00ff  ld   $ff
              9eac 0011  ld   $11
              9ead 00d0  ld   $d0
              9eae 00f0  ld   $f0
              9eaf 00b5  ld   $b5
              9eb0 0088  ld   $88
              9eb1 00d9  ld   $d9
              9eb2 0007  ld   $07
              9eb3 0012  ld   $12
              9eb4 00d0  ld   $d0
              9eb5 00e9  ld   $e9
              9eb6 00b9  ld   $b9
              9eb7 000f  ld   $0f
              9eb8 0012  ld   $12
              9eb9 0085  ld   $85
              9eba 00da  ld   $da
              9ebb 00b9  ld   $b9
              9ebc 0017  ld   $17
              9ebd 0012  ld   $12
              9ebe 0085  ld   $85
              9ebf 00db  ld   $db
              9ec0 0020  ld   $20
              9ec1 0015  ld   $15
              9ec2 00e7  ld   $e7
              9ec3 00ca  ld   $ca
              9ec4 0020  ld   $20
              9ec5 0093  ld   $93
              9ec6 00e7  ld   $e7
              9ec7 0020  ld   $20
              9ec8 0001  ld   $01
              9ec9 00e9  ld   $e9
              9eca 0000  ld   $00
              9ecb 0000  ld   $00
              9ecc 00e8  ld   $e8
              9ecd 00ca  ld   $ca
              9ece 00a4  ld   $a4
              9ecf 0083  ld   $83
              9ed0 00b9  ld   $b9
              9ed1 0047  ld   $47
              9ed2 0012  ld   $12
              9ed3 0095  ld   $95
              9ed4 00a7  ld   $a7
              9ed5 00b9  ld   $b9
              9ed6 003f  ld   $3f
              9ed7 0012  ld   $12
              9ed8 00a0  ld   $a0
              9ed9 0000  ld   $00
              9eda 0020  ld   $20
              9edb 0008  ld   $08
              9edc 00e7  ld   $e7
              9edd 0020  ld   $20
              9ede 0082  ld   $82
              9edf 00e7  ld   $e7
              9ee0 0020  ld   $20
              9ee1 0059  ld   $59
              9ee2 00e7  ld   $e7
              9ee3 0020  ld   $20
              9ee4 0015  ld   $15
              9ee5 00e7  ld   $e7
              9ee6 00a4  ld   $a4
              9ee7 0083  ld   $83
              9ee8 00a5  ld   $a5
              9ee9 00ce  ld   $ce
              9eea 00f0  ld   $f0
              9eeb 0005  ld   $05
              9eec 0059  ld   $59
              9eed 0017  ld   $17
              9eee 0012  ld   $12
              9eef 0010  ld   $10
              9ef0 0012  ld   $12
              9ef1 00b9  ld   $b9
              9ef2 001f  ld   $1f
              9ef3 0012  ld   $12
              9ef4 0085  ld   $85
              9ef5 00dc  ld   $dc
              9ef6 00b9  ld   $b9
              9ef7 0027  ld   $27
              9ef8 0012  ld   $12
              9ef9 0085  ld   $85
              9efa 00dd  ld   $dd
              9efb fe00  bra  ac          ;+-----------------------------------+
              9efc fcfd  bra  $9efd       ;|                                   |
              9efd 1418  ld   $18,y       ;| Trampoline for page $9e00 lookups |
              9efe e006  jmp  y,$06       ;|                                   |
              9eff c218  st   [$18]       ;+-----------------------------------+
              9f00 00be  ld   $be
              9f01 002f  ld   $2f
              9f02 0012  ld   $12
              9f03 00b9  ld   $b9
              9f04 0037  ld   $37
              9f05 0012  ld   $12
              9f06 00d0  ld   $d0
              9f07 0087  ld   $87
              9f08 00c6  ld   $c6
              9f09 0083  ld   $83
              9f0a 0060  ld   $60
              9f0b 00a0  ld   $a0
              9f0c 0054  ld   $54
              9f0d 00a5  ld   $a5
              9f0e 0083  ld   $83
              9f0f 00c9  ld   $c9
              9f10 0008  ld   $08
              9f11 00f0  ld   $f0
              9f12 009a  ld   $9a
              9f13 00e6  ld   $e6
              9f14 0083  ld   $83
              9f15 00a8  ld   $a8
              9f16 00b5  ld   $b5
              9f17 0050  ld   $50
              9f18 0099  ld   $99
              9f19 0000  ld   $00
              9f1a 0012  ld   $12
              9f1b 00b5  ld   $b5
              9f1c 0088  ld   $88
              9f1d 0099  ld   $99
              9f1e 0008  ld   $08
              9f1f 0012  ld   $12
              9f20 0060  ld   $60
              9f21 0020  ld   $20
              9f22 0015  ld   $15
              9f23 00e7  ld   $e7
              9f24 00a4  ld   $a4
              9f25 0083  ld   $83
              9f26 00a5  ld   $a5
              9f27 00ce  ld   $ce
              9f28 0099  ld   $99
              9f29 003f  ld   $3f
              9f2a 0012  ld   $12
              9f2b 00a5  ld   $a5
              9f2c 00cf  ld   $cf
              9f2d 0099  ld   $99
              9f2e 0047  ld   $47
              9f2f 0012  ld   $12
              9f30 00a9  ld   $a9
              9f31 0001  ld   $01
              9f32 0099  ld   $99
              9f33 000f  ld   $0f
              9f34 0012  ld   $12
              9f35 00a9  ld   $a9
              9f36 0000  ld   $00
              9f37 0099  ld   $99
              9f38 0017  ld   $17
              9f39 0012  ld   $12
              9f3a 00a5  ld   $a5
              9f3b 00dc  ld   $dc
              9f3c 0099  ld   $99
              9f3d 001f  ld   $1f
              9f3e 0012  ld   $12
              9f3f 00a5  ld   $a5
              9f40 00dd  ld   $dd
              9f41 0099  ld   $99
              9f42 0027  ld   $27
              9f43 0012  ld   $12
              9f44 00a5  ld   $a5
              9f45 00de  ld   $de
              9f46 0099  ld   $99
              9f47 002f  ld   $2f
              9f48 0012  ld   $12
              9f49 00a5  ld   $a5
              9f4a 00df  ld   $df
              9f4b 0099  ld   $99
              9f4c 0037  ld   $37
              9f4d 0012  ld   $12
              9f4e 0060  ld   $60
              9f4f 0020  ld   $20
              9f50 0015  ld   $15
              9f51 00e7  ld   $e7
              9f52 00a4  ld   $a4
              9f53 0083  ld   $83
              9f54 00a5  ld   $a5
              9f55 00ce  ld   $ce
              9f56 0099  ld   $99
              9f57 000f  ld   $0f
              9f58 0012  ld   $12
              9f59 00a5  ld   $a5
              9f5a 00cf  ld   $cf
              9f5b 004c  ld   $4c
              9f5c 0066  ld   $66
              9f5d 00e9  ld   $e9
              9f5e 0000  ld   $00
              9f5f 0000  ld   $00
              9f60 0000  ld   $00
              * 14 times
              9f6c 00ab  ld   $ab
              9f6d 0003  ld   $03
              9f6e 0003  ld   $03
              9f6f 0003  ld   $03
              * 14 times
              9f7b 003f  ld   $3f
              9f7c 003f  ld   $3f
              9f7d 00c0  ld   $c0
              9f7e 00c0  ld   $c0
              9f7f 003c  ld   $3c
              9f80 003c  ld   $3c
              9f81 003c  ld   $3c
              * 7 times
              9f86 0030  ld   $30
              9f87 000f  ld   $0f
              9f88 00c0  ld   $c0
              9f89 00cc  ld   $cc
              9f8a 00ff  ld   $ff
              9f8b 0055  ld   $55
              9f8c 0000  ld   $00
              9f8d 00ab  ld   $ab
              9f8e 00ab  ld   $ab
              9f8f 0003  ld   $03
              9f90 0003  ld   $03
              9f91 00ff  ld   $ff
              9f92 00ff  ld   $ff
              9f93 0055  ld   $55
              9f94 00ff  ld   $ff
              9f95 00ff  ld   $ff
              9f96 0055  ld   $55
              9f97 00cf  ld   $cf
              9f98 00cf  ld   $cf
              9f99 00cf  ld   $cf
              * 5 times
              9f9c 00ff  ld   $ff
              9f9d 0055  ld   $55
              9f9e 00c3  ld   $c3
              9f9f 00c3  ld   $c3
              9fa0 00c3  ld   $c3
              9fa1 0055  ld   $55
              9fa2 00f0  ld   $f0
              9fa3 00f0  ld   $f0
              9fa4 00cf  ld   $cf
              9fa5 0056  ld   $56
              9fa6 0056  ld   $56
              9fa7 0056  ld   $56
              9fa8 0055  ld   $55
              9fa9 00ff  ld   $ff
              9faa 00ff  ld   $ff
              9fab 0055  ld   $55
              9fac 0003  ld   $03
              9fad 0003  ld   $03
              9fae 0003  ld   $03
              * 7 times
              9fb3 00ff  ld   $ff
              9fb4 00ff  ld   $ff
              9fb5 00ff  ld   $ff
              9fb6 0003  ld   $03
              9fb7 0003  ld   $03
              9fb8 0003  ld   $03
              * 16 times
              9fc6 0000  ld   $00
              9fc7 00ab  ld   $ab
              9fc8 0003  ld   $03
              9fc9 0057  ld   $57
              9fca 0003  ld   $03
              9fcb 0003  ld   $03
              9fcc 0003  ld   $03
              9fcd 0003  ld   $03
              9fce 0007  ld   $07
              9fcf 0003  ld   $03
              9fd0 0003  ld   $03
              9fd1 00ea  ld   $ea
              9fd2 0000  ld   $00
              9fd3 0000  ld   $00
              9fd4 0003  ld   $03
              9fd5 0003  ld   $03
              9fd6 0003  ld   $03
              * 10 times
              9fde 00aa  ld   $aa
              9fdf 00ff  ld   $ff
              9fe0 00ff  ld   $ff
              9fe1 00ff  ld   $ff
              * 5 times
              9fe4 0017  ld   $17
              9fe5 00ff  ld   $ff
              9fe6 00ff  ld   $ff
              9fe7 0019  ld   $19
              9fe8 005d  ld   $5d
              9fe9 0035  ld   $35
              9fea 004b  ld   $4b
              9feb 00f2  ld   $f2
              9fec 00ec  ld   $ec
              9fed 0087  ld   $87
              9fee 006f  ld   $6f
              9fef 00ad  ld   $ad
              9ff0 00b7  ld   $b7
              9ff1 00e2  ld   $e2
              9ff2 00f8  ld   $f8
              9ff3 0054  ld   $54
              9ff4 0080  ld   $80
              9ff5 0096  ld   $96
              9ff6 0085  ld   $85
              9ff7 0082  ld   $82
              9ff8 0022  ld   $22
              9ff9 0010  ld   $10
              9ffa 0033  ld   $33
              9ffb fe00  bra  ac          ;+-----------------------------------+
              9ffc fcfd  bra  $9ffd       ;|                                   |
              9ffd 1418  ld   $18,y       ;| Trampoline for page $9f00 lookups |
              9ffe e006  jmp  y,$06       ;|                                   |
              9fff c218  st   [$18]       ;+-----------------------------------+
              a000 004a  ld   $4a
              a001 0013  ld   $13
              a002 0006  ld   $06
              a003 000b  ld   $0b
              a004 004a  ld   $4a
              a005 0001  ld   $01
              a006 0040  ld   $40
              a007 0047  ld   $47
              a008 007a  ld   $7a
              a009 0000  ld   $00
              a00a 00ff  ld   $ff
              a00b 0023  ld   $23
              a00c 0009  ld   $09
              a00d 005b  ld   $5b
              a00e 0016  ld   $16
              a00f 00b6  ld   $b6
              a010 00cb  ld   $cb
              a011 00ff  ld   $ff
              a012 00ff  ld   $ff
              a013 00fb  ld   $fb
              a014 00ff  ld   $ff
              a015 00ff  ld   $ff
              a016 0024  ld   $24
              a017 00f6  ld   $f6
              a018 004e  ld   $4e
              a019 0059  ld   $59
              a01a 0050  ld   $50
              a01b 0000  ld   $00
              a01c 00ff  ld   $ff
              a01d 0023  ld   $23
              a01e 00a3  ld   $a3
              a01f 006f  ld   $6f
              a020 0036  ld   $36
              a021 0023  ld   $23
              a022 00d7  ld   $d7
              a023 001c  ld   $1c
              a024 0022  ld   $22
              a025 00c2  ld   $c2
              a026 00ae  ld   $ae
              a027 00ba  ld   $ba
              a028 0023  ld   $23
              a029 00ff  ld   $ff
              a02a 00ff  ld   $ff
              a02b 0021  ld   $21
              a02c 0030  ld   $30
              a02d 001e  ld   $1e
              a02e 0003  ld   $03
              a02f 00c4  ld   $c4
              a030 0020  ld   $20
              a031 0000  ld   $00
              a032 00c1  ld   $c1
              a033 00ff  ld   $ff
              a034 00ff  ld   $ff
              a035 00ff  ld   $ff
              a036 00a0  ld   $a0
              a037 0030  ld   $30
              a038 001e  ld   $1e
              a039 00a4  ld   $a4
              a03a 00d3  ld   $d3
              a03b 00b6  ld   $b6
              a03c 00bc  ld   $bc
              a03d 00aa  ld   $aa
              a03e 003a  ld   $3a
              a03f 0001  ld   $01
              a040 0050  ld   $50
              a041 007e  ld   $7e
              a042 00d8  ld   $d8
              a043 00d8  ld   $d8
              a044 00a5  ld   $a5
              a045 003c  ld   $3c
              a046 00ff  ld   $ff
              a047 0016  ld   $16
              a048 005b  ld   $5b
              a049 0028  ld   $28
              a04a 0003  ld   $03
              a04b 00c4  ld   $c4
              a04c 001d  ld   $1d
              a04d 0000  ld   $00
              a04e 000c  ld   $0c
              a04f 004e  ld   $4e
              a050 0000  ld   $00
              a051 003e  ld   $3e
              a052 0000  ld   $00
              a053 00a6  ld   $a6
              a054 00b0  ld   $b0
              a055 0000  ld   $00
              a056 00bc  ld   $bc
              a057 00c6  ld   $c6
              a058 0057  ld   $57
              a059 008c  ld   $8c
              a05a 0001  ld   $01
              a05b 0027  ld   $27
              a05c 00ff  ld   $ff
              a05d 00ff  ld   $ff
              a05e 00ff  ld   $ff
              * 5 times
              a061 00e8  ld   $e8
              a062 00ff  ld   $ff
              a063 00ff  ld   $ff
              a064 00e8  ld   $e8
              a065 00e0  ld   $e0
              a066 00e0  ld   $e0
              a067 00e0  ld   $e0
              a068 00ef  ld   $ef
              a069 00ef  ld   $ef
              a06a 00e3  ld   $e3
              a06b 00e3  ld   $e3
              a06c 00e5  ld   $e5
              a06d 00e5  ld   $e5
              a06e 00e7  ld   $e7
              a06f 00e7  ld   $e7
              a070 00ee  ld   $ee
              a071 00ef  ld   $ef
              a072 00ef  ld   $ef
              a073 00e7  ld   $e7
              a074 00e7  ld   $e7
              a075 00e2  ld   $e2
              a076 00ef  ld   $ef
              a077 00e7  ld   $e7
              a078 00e7  ld   $e7
              a079 00ec  ld   $ec
              a07a 00ec  ld   $ec
              a07b 00ec  ld   $ec
              a07c 00e7  ld   $e7
              a07d 00ec  ld   $ec
              a07e 00ec  ld   $ec
              a07f 00ec  ld   $ec
              a080 00e2  ld   $e2
              a081 0000  ld   $00
              a082 00ff  ld   $ff
              a083 00e8  ld   $e8
              a084 00e1  ld   $e1
              a085 00e8  ld   $e8
              a086 00e8  ld   $e8
              a087 00ef  ld   $ef
              a088 00eb  ld   $eb
              a089 00ff  ld   $ff
              a08a 00ff  ld   $ff
              a08b 00e0  ld   $e0
              a08c 00ff  ld   $ff
              a08d 00ff  ld   $ff
              a08e 00ef  ld   $ef
              a08f 00ee  ld   $ee
              a090 00ef  ld   $ef
              a091 00e7  ld   $e7
              a092 00e7  ld   $e7
              a093 0000  ld   $00
              a094 00ff  ld   $ff
              a095 00e8  ld   $e8
              a096 00e7  ld   $e7
              a097 00e7  ld   $e7
              a098 00e7  ld   $e7
              a099 00e8  ld   $e8
              a09a 00e1  ld   $e1
              a09b 00e2  ld   $e2
              a09c 00ee  ld   $ee
              a09d 00ee  ld   $ee
              a09e 00ee  ld   $ee
              a09f 00ee  ld   $ee
              a0a0 00e8  ld   $e8
              a0a1 00ff  ld   $ff
              a0a2 00ff  ld   $ff
              a0a3 00e1  ld   $e1
              a0a4 00e1  ld   $e1
              a0a5 00ef  ld   $ef
              a0a6 00ee  ld   $ee
              a0a7 00e7  ld   $e7
              a0a8 00e8  ld   $e8
              a0a9 00ee  ld   $ee
              a0aa 00e7  ld   $e7
              a0ab 00ff  ld   $ff
              a0ac 00ff  ld   $ff
              a0ad 00ff  ld   $ff
              a0ae 00ee  ld   $ee
              a0af 00e1  ld   $e1
              a0b0 00ef  ld   $ef
              a0b1 00e7  ld   $e7
              a0b2 00e8  ld   $e8
              a0b3 00ef  ld   $ef
              a0b4 00ef  ld   $ef
              a0b5 00eb  ld   $eb
              a0b6 00e9  ld   $e9
              a0b7 00e8  ld   $e8
              a0b8 00e9  ld   $e9
              a0b9 00e9  ld   $e9
              a0ba 00e8  ld   $e8
              a0bb 00e8  ld   $e8
              a0bc 00e8  ld   $e8
              a0bd 00e8  ld   $e8
              a0be 00ff  ld   $ff
              a0bf 00e8  ld   $e8
              a0c0 00e8  ld   $e8
              a0c1 00e8  ld   $e8
              a0c2 00ee  ld   $ee
              a0c3 00e7  ld   $e7
              a0c4 00e8  ld   $e8
              a0c5 00ef  ld   $ef
              a0c6 00ef  ld   $ef
              a0c7 00ee  ld   $ee
              a0c8 00ef  ld   $ef
              a0c9 00ee  ld   $ee
              a0ca 00ef  ld   $ef
              a0cb 00ee  ld   $ee
              a0cc 00ee  ld   $ee
              a0cd 00ef  ld   $ef
              a0ce 00ee  ld   $ee
              a0cf 00ee  ld   $ee
              a0d0 00ee  ld   $ee
              a0d1 00e1  ld   $e1
              a0d2 00e8  ld   $e8
              a0d3 00e8  ld   $e8
              a0d4 00ff  ld   $ff
              a0d5 00ff  ld   $ff
              a0d6 00ff  ld   $ff
              * 5 times
              a0d9 00eb  ld   $eb
              a0da 0000  ld   $00
              a0db 0000  ld   $00
              a0dc 00be  ld   $be
              a0dd 00b3  ld   $b3
              a0de 00b2  ld   $b2
              a0df 00b7  ld   $b7
              a0e0 00b6  ld   $b6
              a0e1 0037  ld   $37
              a0e2 00d4  ld   $d4
              a0e3 00cf  ld   $cf
              a0e4 00cf  ld   $cf
              a0e5 00a0  ld   $a0
              a0e6 00cc  ld   $cc
              a0e7 00cf  ld   $cf
              a0e8 00ce  ld   $ce
              a0e9 0047  ld   $47
              a0ea 00d3  ld   $d3
              a0eb 00d9  ld   $d9
              a0ec 00ce  ld   $ce
              a0ed 00d4  ld   $d4
              a0ee 00c1  ld   $c1
              a0ef 0058  ld   $58
              a0f0 00cd  ld   $cd
              a0f1 00c5  ld   $c5
              a0f2 00cd  ld   $cd
              a0f3 00a0  ld   $a0
              a0f4 00c6  ld   $c6
              a0f5 00d5  ld   $d5
              a0f6 00cc  ld   $cc
              a0f7 004c  ld   $4c
              a0f8 00d4  ld   $d4
              a0f9 00cf  ld   $cf
              a0fa 00cf  ld   $cf
              a0fb fe00  bra  ac          ;+-----------------------------------+
              a0fc fcfd  bra  $a0fd       ;|                                   |
              a0fd 1418  ld   $18,y       ;| Trampoline for page $a000 lookups |
              a0fe e006  jmp  y,$06       ;|                                   |
              a0ff c218  st   [$18]       ;+-----------------------------------+
              a100 00a0  ld   $a0
              a101 00cd  ld   $cd
              a102 00c1  ld   $c1
              a103 00ce  ld   $ce
              a104 00d9  ld   $d9
              a105 00a0  ld   $a0
              a106 00d0  ld   $d0
              a107 00c1  ld   $c1
              a108 00d2  ld   $d2
              a109 00c5  ld   $c5
              a10a 00ce  ld   $ce
              a10b 0053  ld   $53
              a10c 00d3  ld   $d3
              a10d 00d4  ld   $d4
              a10e 00d2  ld   $d2
              a10f 00c9  ld   $c9
              a110 00ce  ld   $ce
              a111 0047  ld   $47
              a112 00ce  ld   $ce
              a113 00cf  ld   $cf
              a114 00a0  ld   $a0
              a115 00c5  ld   $c5
              a116 00ce  ld   $ce
              a117 0044  ld   $44
              a118 00c2  ld   $c2
              a119 00c1  ld   $c1
              a11a 00c4  ld   $c4
              a11b 00a0  ld   $a0
              a11c 00c2  ld   $c2
              a11d 00d2  ld   $d2
              a11e 00c1  ld   $c1
              a11f 00ce  ld   $ce
              a120 00c3  ld   $c3
              a121 0048  ld   $48
              a122 00be  ld   $be
              a123 00b8  ld   $b8
              a124 00a0  ld   $a0
              a125 00c7  ld   $c7
              a126 00cf  ld   $cf
              a127 00d3  ld   $d3
              a128 00d5  ld   $d5
              a129 00c2  ld   $c2
              a12a 0053  ld   $53
              a12b 00c2  ld   $c2
              a12c 00c1  ld   $c1
              a12d 00c4  ld   $c4
              a12e 00a0  ld   $a0
              a12f 00d2  ld   $d2
              a130 00c5  ld   $c5
              a131 00d4  ld   $d4
              a132 00d5  ld   $d5
              a133 00d2  ld   $d2
              a134 004e  ld   $4e
              a135 00be  ld   $be
              a136 00b8  ld   $b8
              a137 00a0  ld   $a0
              a138 00c6  ld   $c6
              a139 00cf  ld   $cf
              a13a 00d2  ld   $d2
              a13b 0053  ld   $53
              a13c 00c2  ld   $c2
              a13d 00c1  ld   $c1
              a13e 00c4  ld   $c4
              a13f 00a0  ld   $a0
              a140 00ce  ld   $ce
              a141 00c5  ld   $c5
              a142 00d8  ld   $d8
              a143 0054  ld   $54
              a144 00d3  ld   $d3
              a145 00d4  ld   $d4
              a146 00cf  ld   $cf
              a147 00d0  ld   $d0
              a148 00d0  ld   $d0
              a149 00c5  ld   $c5
              a14a 00c4  ld   $c4
              a14b 00a0  ld   $a0
              a14c 00c1  ld   $c1
              a14d 00d4  ld   $d4
              a14e 0020  ld   $20
              a14f 00aa  ld   $aa
              a150 00aa  ld   $aa
              a151 00aa  ld   $aa
              a152 0020  ld   $20
              a153 00a0  ld   $a0
              a154 00c5  ld   $c5
              a155 00d2  ld   $d2
              a156 00d2  ld   $d2
              a157 000d  ld   $0d
              a158 00be  ld   $be
              a159 00b2  ld   $b2
              a15a 00b5  ld   $b5
              a15b 0035  ld   $35
              a15c 00d2  ld   $d2
              a15d 00c1  ld   $c1
              a15e 00ce  ld   $ce
              a15f 00c7  ld   $c7
              a160 0045  ld   $45
              a161 00c4  ld   $c4
              a162 00c9  ld   $c9
              a163 004d  ld   $4d
              a164 00d3  ld   $d3
              a165 00d4  ld   $d4
              a166 00d2  ld   $d2
              a167 00a0  ld   $a0
              a168 00cf  ld   $cf
              a169 00d6  ld   $d6
              a16a 00c6  ld   $c6
              a16b 004c  ld   $4c
              a16c 00dc  ld   $dc
              a16d 000d  ld   $0d
              a16e 00d2  ld   $d2
              a16f 00c5  ld   $c5
              a170 00d4  ld   $d4
              a171 00d9  ld   $d9
              a172 00d0  ld   $d0
              a173 00c5  ld   $c5
              a174 00a0  ld   $a0
              a175 00cc  ld   $cc
              a176 00c9  ld   $c9
              a177 00ce  ld   $ce
              a178 00c5  ld   $c5
              a179 008d  ld   $8d
              a17a 003f  ld   $3f
              a17b 0046  ld   $46
              a17c 00d9  ld   $d9
              a17d 0090  ld   $90
              a17e 0003  ld   $03
              a17f 004c  ld   $4c
              a180 00c3  ld   $c3
              a181 00e8  ld   $e8
              a182 00a6  ld   $a6
              a183 00cf  ld   $cf
              a184 009a  ld   $9a
              a185 00a6  ld   $a6
              a186 00ce  ld   $ce
              a187 00a0  ld   $a0
              a188 008d  ld   $8d
              a189 00d0  ld   $d0
              a18a 0002  ld   $02
              a18b 00a0  ld   $a0
              a18c 0099  ld   $99
              a18d 0020  ld   $20
              a18e 00c4  ld   $c4
              a18f 00e3  ld   $e3
              a190 0086  ld   $86
              a191 00ce  ld   $ce
              a192 00ba  ld   $ba
              a193 0086  ld   $86
              a194 00cf  ld   $cf
              a195 00a0  ld   $a0
              a196 00fe  ld   $fe
              a197 0084  ld   $84
              a198 00d9  ld   $d9
              a199 00c8  ld   $c8
              a19a 0084  ld   $84
              a19b 00c8  ld   $c8
              a19c 0020  ld   $20
              a19d 0099  ld   $99
              a19e 00e2  ld   $e2
              a19f 0084  ld   $84
              a1a0 00e9  ld   $e9
              a1a1 00a2  ld   $a2
              a1a2 0018  ld   $18
              a1a3 00a9  ld   $a9
              a1a4 0030  ld   $30
              a1a5 0020  ld   $20
              a1a6 0091  ld   $91
              a1a7 00e4  ld   $e4
              a1a8 00e6  ld   $e6
              a1a9 00d9  ld   $d9
              a1aa 00a6  ld   $a6
              a1ab 00ce  ld   $ce
              a1ac 00a4  ld   $a4
              a1ad 00c8  ld   $c8
              a1ae 000a  ld   $0a
              a1af 0085  ld   $85
              a1b0 00ce  ld   $ce
              a1b1 00c8  ld   $c8
              a1b2 00b9  ld   $b9
              a1b3 0000  ld   $00
              a1b4 0002  ld   $02
              a1b5 00c9  ld   $c9
              a1b6 0074  ld   $74
              a1b7 00f0  ld   $f0
              a1b8 00d2  ld   $d2
              a1b9 0049  ld   $49
              a1ba 00b0  ld   $b0
              a1bb 00c9  ld   $c9
              a1bc 000a  ld   $0a
              a1bd 00b0  ld   $b0
              a1be 00f0  ld   $f0
              a1bf 00c8  ld   $c8
              a1c0 00c8  ld   $c8
              a1c1 0084  ld   $84
              a1c2 00c8  ld   $c8
              a1c3 00b9  ld   $b9
              a1c4 0000  ld   $00
              a1c5 0002  ld   $02
              a1c6 0048  ld   $48
              a1c7 00b9  ld   $b9
              a1c8 00ff  ld   $ff
              a1c9 0001  ld   $01
              a1ca 00a0  ld   $a0
              a1cb 0000  ld   $00
              a1cc 0020  ld   $20
              a1cd 0008  ld   $08
              a1ce 00e7  ld   $e7
              a1cf 0068  ld   $68
              a1d0 0095  ld   $95
              a1d1 00a8  ld   $a8
              a1d2 00a5  ld   $a5
              a1d3 00ce  ld   $ce
              a1d4 00c9  ld   $c9
              a1d5 00c7  ld   $c7
              a1d6 00d0  ld   $d0
              a1d7 0003  ld   $03
              a1d8 0020  ld   $20
              a1d9 006f  ld   $6f
              a1da 00e7  ld   $e7
              a1db 004c  ld   $4c
              a1dc 0001  ld   $01
              a1dd 00e8  ld   $e8
              a1de 00ff  ld   $ff
              a1df 00ff  ld   $ff
              a1e0 00ff  ld   $ff
              a1e1 00ec  ld   $ec
              a1e2 0000  ld   $00
              a1e3 0000  ld   $00
              a1e4 0050  ld   $50
              a1e5 0020  ld   $20
              a1e6 0013  ld   $13
              a1e7 00ec  ld   $ec
              a1e8 00d0  ld   $d0
              a1e9 0015  ld   $15
              a1ea 0020  ld   $20
              a1eb 000b  ld   $0b
              a1ec 00ec  ld   $ec
              a1ed 00d0  ld   $d0
              a1ee 0010  ld   $10
              a1ef 0020  ld   $20
              a1f0 0082  ld   $82
              a1f1 00e7  ld   $e7
              a1f2 0020  ld   $20
              a1f3 006f  ld   $6f
              a1f4 00e7  ld   $e7
              a1f5 0050  ld   $50
              a1f6 0003  ld   $03
              a1f7 0020  ld   $20
              a1f8 0082  ld   $82
              a1f9 00e7  ld   $e7
              a1fa 0020  ld   $20
              a1fb fe00  bra  ac          ;+-----------------------------------+
              a1fc fcfd  bra  $a1fd       ;|                                   |
              a1fd 1418  ld   $18,y       ;| Trampoline for page $a100 lookups |
              a1fe e006  jmp  y,$06       ;|                                   |
              a1ff c218  st   [$18]       ;+-----------------------------------+
              a200 0059  ld   $59
              a201 00e7  ld   $e7
              a202 0056  ld   $56
              a203 0050  ld   $50
              a204 004c  ld   $4c
              a205 0036  ld   $36
              a206 00e7  ld   $e7
              a207 00ff  ld   $ff
              a208 00ff  ld   $ff
              a209 00c1  ld   $c1
              a20a 00ff  ld   $ff
              a20b 007f  ld   $7f
              a20c 00d1  ld   $d1
              a20d 00cc  ld   $cc
              a20e 00c7  ld   $c7
              a20f 00cf  ld   $cf
              a210 00ce  ld   $ce
              a211 00c5  ld   $c5
              a212 009a  ld   $9a
              a213 0098  ld   $98
              a214 008b  ld   $8b
              a215 0096  ld   $96
              a216 0095  ld   $95
              a217 0093  ld   $93
              a218 00bf  ld   $bf
              a219 00b2  ld   $b2
              a21a 0032  ld   $32
              a21b 002d  ld   $2d
              a21c 002b  ld   $2b
              a21d 00bc  ld   $bc
              a21e 00b0  ld   $b0
              a21f 00ac  ld   $ac
              a220 00be  ld   $be
              a221 0035  ld   $35
              a222 008e  ld   $8e
              a223 0061  ld   $61
              a224 00ff  ld   $ff
              a225 00ff  ld   $ff
              a226 00ff  ld   $ff
              a227 00dd  ld   $dd
              a228 00fb  ld   $fb
              a229 0020  ld   $20
              a22a 00c9  ld   $c9
              a22b 00ef  ld   $ef
              a22c 0015  ld   $15
              a22d 004f  ld   $4f
              a22e 0010  ld   $10
              a22f 0005  ld   $05
              a230 0020  ld   $20
              a231 00c9  ld   $c9
              a232 00ef  ld   $ef
              a233 0035  ld   $35
              a234 004f  ld   $4f
              a235 0095  ld   $95
              a236 0050  ld   $50
              a237 0010  ld   $10
              a238 00cb  ld   $cb
              a239 004c  ld   $4c
              a23a 00c9  ld   $c9
              a23b 00ef  ld   $ef
              a23c 0040  ld   $40
              a23d 0060  ld   $60
              a23e 008d  ld   $8d
              a23f 0060  ld   $60
              a240 008b  ld   $8b
              a241 0000  ld   $00
              a242 007e  ld   $7e
              a243 008c  ld   $8c
              a244 0033  ld   $33
              a245 0000  ld   $00
              a246 0000  ld   $00
              a247 0060  ld   $60
              a248 0003  ld   $03
              a249 00bf  ld   $bf
              a24a 0012  ld   $12
              a24b 0000  ld   $00
              a24c 0040  ld   $40
              a24d 0089  ld   $89
              a24e 00c9  ld   $c9
              a24f 0047  ld   $47
              a250 009d  ld   $9d
              a251 0017  ld   $17
              a252 0068  ld   $68
              a253 009d  ld   $9d
              a254 000a  ld   $0a
              a255 0000  ld   $00
              a256 0040  ld   $40
              a257 0060  ld   $60
              a258 008d  ld   $8d
              a259 0060  ld   $60
              a25a 008b  ld   $8b
              a25b 0000  ld   $00
              a25c 007e  ld   $7e
              a25d 008c  ld   $8c
              a25e 003c  ld   $3c
              a25f 0000  ld   $00
              a260 0000  ld   $00
              a261 0060  ld   $60
              a262 0003  ld   $03
              a263 00bf  ld   $bf
              a264 001b  ld   $1b
              a265 004b  ld   $4b
              a266 0067  ld   $67
              a267 00b4  ld   $b4
              a268 00a1  ld   $a1
              a269 0007  ld   $07
              a26a 008c  ld   $8c
              a26b 0007  ld   $07
              a26c 00ae  ld   $ae
              a26d 00a9  ld   $a9
              a26e 00ac  ld   $ac
              a26f 00a8  ld   $a8
              a270 0067  ld   $67
              a271 008c  ld   $8c
              a272 0007  ld   $07
              a273 00b4  ld   $b4
              a274 00af  ld   $af
              a275 00ac  ld   $ac
              a276 00b0  ld   $b0
              a277 0067  ld   $67
              a278 009d  ld   $9d
              a279 00b2  ld   $b2
              a27a 00af  ld   $af
              a27b 00ac  ld   $ac
              a27c 00af  ld   $af
              a27d 00a3  ld   $a3
              a27e 0067  ld   $67
              a27f 008c  ld   $8c
              a280 0007  ld   $07
              a281 00a5  ld   $a5
              a282 00ab  ld   $ab
              a283 00af  ld   $af
              a284 00b0  ld   $b0
              a285 00f4  ld   $f4
              a286 00ae  ld   $ae
              a287 00a9  ld   $a9
              a288 00b2  ld   $b2
              a289 00b0  ld   $b0
              a28a 007f  ld   $7f
              a28b 000e  ld   $0e
              a28c 0027  ld   $27
              a28d 00b4  ld   $b4
              a28e 00ae  ld   $ae
              a28f 00a9  ld   $a9
              a290 00b2  ld   $b2
              a291 00b0  ld   $b0
              a292 007f  ld   $7f
              a293 000e  ld   $0e
              a294 0028  ld   $28
              a295 00b4  ld   $b4
              a296 00ae  ld   $ae
              a297 00a9  ld   $a9
              a298 00b2  ld   $b2
              a299 00b0  ld   $b0
              a29a 0064  ld   $64
              a29b 0007  ld   $07
              a29c 00a6  ld   $a6
              a29d 00a9  ld   $a9
              a29e 0067  ld   $67
              a29f 00af  ld   $af
              a2a0 00b4  ld   $b4
              a2a1 00af  ld   $af
              a2a2 00a7  ld   $a7
              a2a3 0078  ld   $78
              a2a4 00b4  ld   $b4
              a2a5 00a5  ld   $a5
              a2a6 00ac  ld   $ac
              a2a7 0078  ld   $78
              a2a8 007f  ld   $7f
              a2a9 0002  ld   $02
              a2aa 00ad  ld   $ad
              a2ab 00a5  ld   $a5
              a2ac 00b2  ld   $b2
              a2ad 0067  ld   $67
              a2ae 00a2  ld   $a2
              a2af 00b5  ld   $b5
              a2b0 00b3  ld   $b3
              a2b1 00af  ld   $af
              a2b2 00a7  ld   $a7
              a2b3 00ee  ld   $ee
              a2b4 00b2  ld   $b2
              a2b5 00b5  ld   $b5
              a2b6 00b4  ld   $b4
              a2b7 00a5  ld   $a5
              a2b8 00b2  ld   $b2
              a2b9 007e  ld   $7e
              a2ba 008c  ld   $8c
              a2bb 0039  ld   $39
              a2bc 00b4  ld   $b4
              a2bd 00b8  ld   $b8
              a2be 00a5  ld   $a5
              a2bf 00ae  ld   $ae
              a2c0 0067  ld   $67
              a2c1 00b0  ld   $b0
              a2c2 00a5  ld   $a5
              a2c3 00b4  ld   $b4
              a2c4 00b3  ld   $b3
              a2c5 0027  ld   $27
              a2c6 00af  ld   $af
              a2c7 00b4  ld   $b4
              a2c8 0007  ld   $07
              a2c9 009d  ld   $9d
              a2ca 0019  ld   $19
              a2cb 00b2  ld   $b2
              a2cc 00af  ld   $af
              a2cd 00a6  ld   $a6
              a2ce 007f  ld   $7f
              a2cf 0005  ld   $05
              a2d0 0037  ld   $37
              a2d1 00b4  ld   $b4
              a2d2 00b5  ld   $b5
              a2d3 00b0  ld   $b0
              a2d4 00ae  ld   $ae
              a2d5 00a9  ld   $a9
              a2d6 007f  ld   $7f
              a2d7 0005  ld   $05
              a2d8 0028  ld   $28
              a2d9 00b4  ld   $b4
              a2da 00b5  ld   $b5
              a2db 00b0  ld   $b0
              a2dc 00ae  ld   $ae
              a2dd 00a9  ld   $a9
              a2de 007f  ld   $7f
              a2df 0005  ld   $05
              a2e0 002a  ld   $2a
              a2e1 00b4  ld   $b4
              a2e2 00b5  ld   $b5
              a2e3 00b0  ld   $b0
              a2e4 00ae  ld   $ae
              a2e5 00a9  ld   $a9
              a2e6 00e4  ld   $e4
              a2e7 00ae  ld   $ae
              a2e8 00a5  ld   $a5
              a2e9 00ed  ld   $ed
              a2ea 0000  ld   $00
              a2eb 0000  ld   $00
              a2ec 0000  ld   $00
              a2ed 00ff  ld   $ff
              a2ee 00ff  ld   $ff
              a2ef 0047  ld   $47
              a2f0 00a2  ld   $a2
              a2f1 00a1  ld   $a1
              a2f2 00b4  ld   $b4
              a2f3 007f  ld   $7f
              a2f4 000d  ld   $0d
              a2f5 0030  ld   $30
              a2f6 00ad  ld   $ad
              a2f7 00a9  ld   $a9
              a2f8 00a4  ld   $a4
              a2f9 007f  ld   $7f
              a2fa 000d  ld   $0d
              a2fb fe00  bra  ac          ;+-----------------------------------+
              a2fc fcfd  bra  $a2fd       ;|                                   |
              a2fd 1418  ld   $18,y       ;| Trampoline for page $a200 lookups |
              a2fe e006  jmp  y,$06       ;|                                   |
              a2ff c218  st   [$18]       ;+-----------------------------------+
              a300 0023  ld   $23
              a301 00ad  ld   $ad
              a302 00a9  ld   $a9
              a303 00a4  ld   $a4
              a304 0067  ld   $67
              a305 00ac  ld   $ac
              a306 00ac  ld   $ac
              a307 00a1  ld   $a1
              a308 00a3  ld   $a3
              a309 0000  ld   $00
              a30a 0040  ld   $40
              a30b 0080  ld   $80
              a30c 00c0  ld   $c0
              a30d 00c1  ld   $c1
              a30e 0080  ld   $80
              a30f 0000  ld   $00
              a310 0047  ld   $47
              a311 008c  ld   $8c
              a312 0068  ld   $68
              a313 008c  ld   $8c
              a314 00db  ld   $db
              a315 0067  ld   $67
              a316 009b  ld   $9b
              a317 0068  ld   $68
              a318 009b  ld   $9b
              a319 0050  ld   $50
              a31a 008c  ld   $8c
              a31b 0063  ld   $63
              a31c 008c  ld   $8c
              a31d 007f  ld   $7f
              a31e 0001  ld   $01
              a31f 0051  ld   $51
              a320 0007  ld   $07
              a321 0088  ld   $88
              a322 0029  ld   $29
              a323 0084  ld   $84
              a324 0080  ld   $80
              a325 00c4  ld   $c4
              a326 0080  ld   $80
              a327 0057  ld   $57
              a328 0071  ld   $71
              a329 0007  ld   $07
              a32a 0088  ld   $88
              a32b 0014  ld   $14
              a32c 00ed  ld   $ed
              a32d 00a5  ld   $a5
              a32e 00ad  ld   $ad
              a32f 00af  ld   $af
              a330 00ac  ld   $ac
              a331 00ed  ld   $ed
              a332 00a5  ld   $a5
              a333 00ad  ld   $ad
              a334 00a9  ld   $a9
              a335 00a8  ld   $a8
              a336 00f2  ld   $f2
              a337 00af  ld   $af
              a338 00ac  ld   $ac
              a339 00af  ld   $af
              a33a 00a3  ld   $a3
              a33b 0071  ld   $71
              a33c 0008  ld   $08
              a33d 0088  ld   $88
              a33e 00ae  ld   $ae
              a33f 00a5  ld   $a5
              a340 00ac  ld   $ac
              a341 0068  ld   $68
              a342 0083  ld   $83
              a343 0008  ld   $08
              a344 0068  ld   $68
              a345 009d  ld   $9d
              a346 0008  ld   $08
              a347 0071  ld   $71
              a348 0007  ld   $07
              a349 0088  ld   $88
              a34a 0060  ld   $60
              a34b 0076  ld   $76
              a34c 00b4  ld   $b4
              a34d 00af  ld   $af
              a34e 00ae  ld   $ae
              a34f 0076  ld   $76
              a350 008d  ld   $8d
              a351 0076  ld   $76
              a352 008b  ld   $8b
              a353 0051  ld   $51
              a354 0007  ld   $07
              a355 0088  ld   $88
              a356 0019  ld   $19
              a357 00b8  ld   $b8
              a358 00a4  ld   $a4
              a359 00ae  ld   $ae
              a35a 00b2  ld   $b2
              a35b 00f2  ld   $f2
              a35c 00b3  ld   $b3
              a35d 00b5  ld   $b5
              a35e 00f3  ld   $f3
              a35f 00a2  ld   $a2
              a360 00a1  ld   $a1
              a361 00ee  ld   $ee
              a362 00a7  ld   $a7
              a363 00b3  ld   $b3
              a364 00e4  ld   $e4
              a365 00ae  ld   $ae
              a366 00b2  ld   $b2
              a367 00eb  ld   $eb
              a368 00a5  ld   $a5
              a369 00a5  ld   $a5
              a36a 00b0  ld   $b0
              a36b 0051  ld   $51
              a36c 0007  ld   $07
              a36d 0088  ld   $88
              a36e 0039  ld   $39
              a36f 0081  ld   $81
              a370 00c1  ld   $c1
              a371 004f  ld   $4f
              a372 007f  ld   $7f
              a373 000f  ld   $0f
              a374 002f  ld   $2f
              a375 0000  ld   $00
              a376 0051  ld   $51
              a377 0006  ld   $06
              a378 0088  ld   $88
              a379 0029  ld   $29
              a37a 00c2  ld   $c2
              a37b 000c  ld   $0c
              a37c 0082  ld   $82
              a37d 0057  ld   $57
              a37e 008c  ld   $8c
              a37f 006a  ld   $6a
              a380 008c  ld   $8c
              a381 0042  ld   $42
              a382 00ae  ld   $ae
              a383 00a5  ld   $a5
              a384 00a8  ld   $a8
              a385 00b4  ld   $b4
              a386 0060  ld   $60
              a387 00ae  ld   $ae
              a388 00a5  ld   $a5
              a389 00a8  ld   $a8
              a38a 00b4  ld   $b4
              a38b 004f  ld   $4f
              a38c 007e  ld   $7e
              a38d 001e  ld   $1e
              a38e 0035  ld   $35
              a38f 008c  ld   $8c
              a390 0027  ld   $27
              a391 0051  ld   $51
              a392 0007  ld   $07
              a393 0088  ld   $88
              a394 0009  ld   $09
              a395 008b  ld   $8b
              a396 00fe  ld   $fe
              a397 00e4  ld   $e4
              a398 00af  ld   $af
              a399 00ad  ld   $ad
              a39a 00f2  ld   $f2
              a39b 00af  ld   $af
              a39c 00e4  ld   $e4
              a39d 00ae  ld   $ae
              a39e 00a1  ld   $a1
              a39f 00dc  ld   $dc
              a3a0 00de  ld   $de
              a3a1 009c  ld   $9c
              a3a2 00dd  ld   $dd
              a3a3 009c  ld   $9c
              a3a4 00de  ld   $de
              a3a5 00dd  ld   $dd
              a3a6 009e  ld   $9e
              a3a7 00c3  ld   $c3
              a3a8 00dd  ld   $dd
              a3a9 00cf  ld   $cf
              a3aa 00ca  ld   $ca
              a3ab 00cd  ld   $cd
              a3ac 00cb  ld   $cb
              a3ad 0000  ld   $00
              a3ae 0047  ld   $47
              a3af 009d  ld   $9d
              a3b0 00ad  ld   $ad
              a3b1 00a5  ld   $a5
              a3b2 00ad  ld   $ad
              a3b3 00af  ld   $af
              a3b4 00ac  ld   $ac
              a3b5 0076  ld   $76
              a3b6 009d  ld   $9d
              a3b7 00ad  ld   $ad
              a3b8 00a5  ld   $a5
              a3b9 00ad  ld   $ad
              a3ba 00a9  ld   $a9
              a3bb 00a8  ld   $a8
              a3bc 00e6  ld   $e6
              a3bd 00a6  ld   $a6
              a3be 00af  ld   $af
              a3bf 0060  ld   $60
              a3c0 008c  ld   $8c
              a3c1 0020  ld   $20
              a3c2 00af  ld   $af
              a3c3 00b4  ld   $b4
              a3c4 00b5  ld   $b5
              a3c5 00a1  ld   $a1
              a3c6 00f2  ld   $f2
              a3c7 00ac  ld   $ac
              a3c8 00a3  ld   $a3
              a3c9 00f2  ld   $f2
              a3ca 00a3  ld   $a3
              a3cb 00b3  ld   $b3
              a3cc 0060  ld   $60
              a3cd 008c  ld   $8c
              a3ce 0020  ld   $20
              a3cf 00ac  ld   $ac
              a3d0 00a5  ld   $a5
              a3d1 00a4  ld   $a4
              a3d2 00ee  ld   $ee
              a3d3 00b5  ld   $b5
              a3d4 00b2  ld   $b2
              a3d5 0060  ld   $60
              a3d6 00ae  ld   $ae
              a3d7 00b5  ld   $b5
              a3d8 00b2  ld   $b2
              a3d9 00f4  ld   $f4
              a3da 00b3  ld   $b3
              a3db 00a9  ld   $a9
              a3dc 00ac  ld   $ac
              a3dd 0060  ld   $60
              a3de 008c  ld   $8c
              a3df 0020  ld   $20
              a3e0 00b4  ld   $b4
              a3e1 00b3  ld   $b3
              a3e2 00a9  ld   $a9
              a3e3 00ac  ld   $ac
              a3e4 007a  ld   $7a
              a3e5 007e  ld   $7e
              a3e6 009a  ld   $9a
              a3e7 0022  ld   $22
              a3e8 0020  ld   $20
              a3e9 0000  ld   $00
              a3ea 0060  ld   $60
              a3eb 0003  ld   $03
              a3ec 00bf  ld   $bf
              a3ed 0060  ld   $60
              a3ee 0003  ld   $03
              a3ef 00bf  ld   $bf
              a3f0 001f  ld   $1f
              a3f1 00ee  ld   $ee
              a3f2 0000  ld   $00
              a3f3 0000  ld   $00
              a3f4 0020  ld   $20
              a3f5 00b1  ld   $b1
              a3f6 00e7  ld   $e7
              a3f7 00e8  ld   $e8
              a3f8 00e8  ld   $e8
              a3f9 00b5  ld   $b5
              a3fa 004f  ld   $4f
              a3fb fe00  bra  ac          ;+-----------------------------------+
              a3fc fcfd  bra  $a3fd       ;|                                   |
              a3fd 1418  ld   $18,y       ;| Trampoline for page $a300 lookups |
              a3fe e006  jmp  y,$06       ;|                                   |
              a3ff c218  st   [$18]       ;+-----------------------------------+
              a400 0085  ld   $85
              a401 00da  ld   $da
              a402 00b5  ld   $b5
              a403 0087  ld   $87
              a404 0085  ld   $85
              a405 00db  ld   $db
              a406 00b4  ld   $b4
              a407 004e  ld   $4e
              a408 0098  ld   $98
              a409 00d5  ld   $d5
              a40a 0086  ld   $86
              a40b 00b0  ld   $b0
              a40c 0009  ld   $09
              a40d 00b1  ld   $b1
              a40e 00da  ld   $da
              a40f 0020  ld   $20
              a410 00c9  ld   $c9
              a411 00e3  ld   $e3
              a412 00c8  ld   $c8
              a413 004c  ld   $4c
              a414 000f  ld   $0f
              a415 00ee  ld   $ee
              a416 00a9  ld   $a9
              a417 00ff  ld   $ff
              a418 0085  ld   $85
              a419 00d5  ld   $d5
              a41a 0060  ld   $60
              a41b 00e8  ld   $e8
              a41c 00a9  ld   $a9
              a41d 0000  ld   $00
              a41e 0095  ld   $95
              a41f 0088  ld   $88
              a420 0095  ld   $95
              a421 00a8  ld   $a8
              a422 00b5  ld   $b5
              a423 0087  ld   $87
              a424 0038  ld   $38
              a425 00f5  ld   $f5
              a426 004f  ld   $4f
              a427 0095  ld   $95
              a428 0050  ld   $50
              a429 004c  ld   $4c
              a42a 0023  ld   $23
              a42b 00e8  ld   $e8
              a42c 00ff  ld   $ff
              a42d 0020  ld   $20
              a42e 0015  ld   $15
              a42f 00e7  ld   $e7
              a430 00a5  ld   $a5
              a431 00cf  ld   $cf
              a432 00d0  ld   $d0
              a433 0028  ld   $28
              a434 00a5  ld   $a5
              a435 00ce  ld   $ce
              a436 0060  ld   $60
              a437 0020  ld   $20
              a438 0034  ld   $34
              a439 00ee  ld   $ee
              a43a 00a4  ld   $a4
              a43b 00c8  ld   $c8
              a43c 00c9  ld   $c9
              a43d 0030  ld   $30
              a43e 00b0  ld   $b0
              a43f 0021  ld   $21
              a440 00c0  ld   $c0
              a441 0028  ld   $28
              a442 00b0  ld   $b0
              a443 001d  ld   $1d
              a444 0060  ld   $60
              a445 00ea  ld   $ea
              a446 00ea  ld   $ea
              a447 0020  ld   $20
              a448 0034  ld   $34
              a449 00ee  ld   $ee
              a44a 0060  ld   $60
              a44b 00ea  ld   $ea
              a44c 008a  ld   $8a
              a44d 00a2  ld   $a2
              a44e 0001  ld   $01
              a44f 00b4  ld   $b4
              a450 00ce  ld   $ce
              a451 0094  ld   $94
              a452 004c  ld   $4c
              a453 00b4  ld   $b4
              a454 0048  ld   $48
              a455 0094  ld   $94
              a456 00ca  ld   $ca
              a457 00ca  ld   $ca
              a458 00f0  ld   $f0
              a459 00f5  ld   $f5
              a45a 00aa  ld   $aa
              a45b 0060  ld   $60
              a45c 00a0  ld   $a0
              a45d 0077  ld   $77
              a45e 004c  ld   $4c
              a45f 00e0  ld   $e0
              a460 00e3  ld   $e3
              a461 00a0  ld   $a0
              a462 007b  ld   $7b
              a463 00d0  ld   $d0
              a464 00f9  ld   $f9
              a465 0020  ld   $20
              a466 0054  ld   $54
              a467 00e2  ld   $e2
              a468 00a5  ld   $a5
              a469 00da  ld   $da
              a46a 00d0  ld   $d0
              a46b 0007  ld   $07
              a46c 00a5  ld   $a5
              a46d 00db  ld   $db
              a46e 00d0  ld   $d0
              a46f 0003  ld   $03
              a470 004c  ld   $4c
              a471 007e  ld   $7e
              a472 00e7  ld   $e7
              a473 0006  ld   $06
              a474 00ce  ld   $ce
              a475 0026  ld   $26
              a476 00cf  ld   $cf
              a477 0026  ld   $26
              a478 0046  ld   $46
              a479 0026  ld   $26
              a47a 0047  ld   $47
              a47b 00a5  ld   $a5
              a47c 0046  ld   $46
              a47d 00c5  ld   $c5
              a47e 00da  ld   $da
              a47f 00a5  ld   $a5
              a480 0047  ld   $47
              a481 00e5  ld   $e5
              a482 00db  ld   $db
              a483 0090  ld   $90
              a484 000a  ld   $0a
              a485 0085  ld   $85
              a486 0047  ld   $47
              a487 00a5  ld   $a5
              a488 0046  ld   $46
              a489 00e5  ld   $e5
              a48a 00da  ld   $da
              a48b 0085  ld   $85
              a48c 0046  ld   $46
              a48d 00e6  ld   $e6
              a48e 00ce  ld   $ce
              a48f 0088  ld   $88
              a490 00d0  ld   $d0
              a491 00e1  ld   $e1
              a492 0060  ld   $60
              a493 00ff  ld   $ff
              a494 00ff  ld   $ff
              a495 00ff  ld   $ff
              * 6 times
              a499 0020  ld   $20
              a49a 0015  ld   $15
              a49b 00e7  ld   $e7
              a49c 006c  ld   $6c
              a49d 00ce  ld   $ce
              a49e 0000  ld   $00
              a49f 00a5  ld   $a5
              a4a0 004c  ld   $4c
              a4a1 00d0  ld   $d0
              a4a2 0002  ld   $02
              a4a3 00c6  ld   $c6
              a4a4 004d  ld   $4d
              a4a5 00c6  ld   $c6
              a4a6 004c  ld   $4c
              a4a7 00a5  ld   $a5
              a4a8 0048  ld   $48
              a4a9 00d0  ld   $d0
              a4aa 0002  ld   $02
              a4ab 00c6  ld   $c6
              a4ac 0049  ld   $49
              a4ad 00c6  ld   $c6
              a4ae 0048  ld   $48
              a4af 00a0  ld   $a0
              a4b0 0000  ld   $00
              a4b1 00b1  ld   $b1
              a4b2 004c  ld   $4c
              a4b3 0091  ld   $91
              a4b4 0048  ld   $48
              a4b5 00a5  ld   $a5
              a4b6 00ca  ld   $ca
              a4b7 00c5  ld   $c5
              a4b8 004c  ld   $4c
              a4b9 00a5  ld   $a5
              a4ba 00cb  ld   $cb
              a4bb 00e5  ld   $e5
              a4bc 004d  ld   $4d
              a4bd 0090  ld   $90
              a4be 00e0  ld   $e0
              a4bf 004c  ld   $4c
              a4c0 0053  ld   $53
              a4c1 00ee  ld   $ee
              a4c2 00c9  ld   $c9
              a4c3 0028  ld   $28
              a4c4 00b0  ld   $b0
              a4c5 009b  ld   $9b
              a4c6 00a8  ld   $a8
              a4c7 00a5  ld   $a5
              a4c8 00c8  ld   $c8
              a4c9 0060  ld   $60
              a4ca 00ea  ld   $ea
              a4cb 00ea  ld   $ea
              a4cc 0098  ld   $98
              a4cd 00aa  ld   $aa
              a4ce 00a0  ld   $a0
              a4cf 006e  ld   $6e
              a4d0 0020  ld   $20
              a4d1 00c4  ld   $c4
              a4d2 00e3  ld   $e3
              a4d3 008a  ld   $8a
              a4d4 00a8  ld   $a8
              a4d5 0020  ld   $20
              a4d6 00c4  ld   $c4
              a4d7 00e3  ld   $e3
              a4d8 00a0  ld   $a0
              a4d9 0072  ld   $72
              a4da 004c  ld   $4c
              a4db 00c4  ld   $c4
              a4dc 00e3  ld   $e3
              a4dd 0020  ld   $20
              a4de 0015  ld   $15
              a4df 00e7  ld   $e7
              a4e0 0006  ld   $06
              a4e1 00ce  ld   $ce
              a4e2 0026  ld   $26
              a4e3 00cf  ld   $cf
              a4e4 0030  ld   $30
              a4e5 00fa  ld   $fa
              a4e6 00b0  ld   $b0
              a4e7 00dc  ld   $dc
              a4e8 00d0  ld   $d0
              a4e9 0004  ld   $04
              a4ea 00c5  ld   $c5
              a4eb 00ce  ld   $ce
              a4ec 00b0  ld   $b0
              a4ed 00d6  ld   $d6
              a4ee 0060  ld   $60
              a4ef 0020  ld   $20
              a4f0 0015  ld   $15
              a4f1 00e7  ld   $e7
              a4f2 00b1  ld   $b1
              a4f3 00ce  ld   $ce
              a4f4 0094  ld   $94
              a4f5 00a7  ld   $a7
              a4f6 004c  ld   $4c
              a4f7 0008  ld   $08
              a4f8 00e7  ld   $e7
              a4f9 00ef  ld   $ef
              a4fa 0000  ld   $00
              a4fb fe00  bra  ac          ;+-----------------------------------+
              a4fc fcfd  bra  $a4fd       ;|                                   |
              a4fd 1418  ld   $18,y       ;| Trampoline for page $a400 lookups |
              a4fe e006  jmp  y,$06       ;|                                   |
              a4ff c218  st   [$18]       ;+-----------------------------------+
              a500 0000  ld   $00
              a501 0020  ld   $20
              a502 0034  ld   $34
              a503 00ee  ld   $ee
              a504 00a5  ld   $a5
              a505 00ce  ld   $ce
              a506 0048  ld   $48
              a507 0020  ld   $20
              a508 0015  ld   $15
              a509 00e7  ld   $e7
              a50a 0068  ld   $68
              a50b 0091  ld   $91
              a50c 00ce  ld   $ce
              a50d 0060  ld   $60
              a50e 00ff  ld   $ff
              a50f 00ff  ld   $ff
              a510 00ff  ld   $ff
              a511 0020  ld   $20
              a512 006c  ld   $6c
              a513 00ee  ld   $ee
              a514 00a5  ld   $a5
              a515 00ce  ld   $ce
              a516 0085  ld   $85
              a517 0046  ld   $46
              a518 00a5  ld   $a5
              a519 00cf  ld   $cf
              a51a 0085  ld   $85
              a51b 0047  ld   $47
              a51c 004c  ld   $4c
              a51d 0044  ld   $44
              a51e 00e2  ld   $e2
              a51f 0020  ld   $20
              a520 00e4  ld   $e4
              a521 00ee  ld   $ee
              a522 004c  ld   $4c
              a523 0034  ld   $34
              a524 00e1  ld   $e1
              a525 0020  ld   $20
              a526 00e4  ld   $e4
              a527 00ee  ld   $ee
              a528 00b4  ld   $b4
              a529 0088  ld   $88
              a52a 00b5  ld   $b5
              a52b 0050  ld   $50
              a52c 0069  ld   $69
              a52d 00fe  ld   $fe
              a52e 00b0  ld   $b0
              a52f 0001  ld   $01
              a530 0088  ld   $88
              a531 0085  ld   $85
              a532 00da  ld   $da
              a533 0084  ld   $84
              a534 00db  ld   $db
              a535 0018  ld   $18
              a536 0065  ld   $65
              a537 00ce  ld   $ce
              a538 0095  ld   $95
              a539 0050  ld   $50
              a53a 0098  ld   $98
              a53b 0065  ld   $65
              a53c 00cf  ld   $cf
              a53d 0095  ld   $95
              a53e 0088  ld   $88
              a53f 00a0  ld   $a0
              a540 0000  ld   $00
              a541 00b5  ld   $b5
              a542 0050  ld   $50
              a543 00d1  ld   $d1
              a544 00da  ld   $da
              a545 00c8  ld   $c8
              a546 00b5  ld   $b5
              a547 0088  ld   $88
              a548 00f1  ld   $f1
              a549 00da  ld   $da
              a54a 00b0  ld   $b0
              a54b 0080  ld   $80
              a54c 004c  ld   $4c
              a54d 0023  ld   $23
              a54e 00e8  ld   $e8
              a54f 0020  ld   $20
              a550 0015  ld   $15
              a551 00e7  ld   $e7
              a552 00a5  ld   $a5
              a553 004e  ld   $4e
              a554 0020  ld   $20
              a555 0008  ld   $08
              a556 00e7  ld   $e7
              a557 00a5  ld   $a5
              a558 004f  ld   $4f
              a559 00d0  ld   $d0
              a55a 0004  ld   $04
              a55b 00c5  ld   $c5
              a55c 004e  ld   $4e
              a55d 0069  ld   $69
              a55e 0000  ld   $00
              a55f 0029  ld   $29
              a560 007f  ld   $7f
              a561 0085  ld   $85
              a562 004f  ld   $4f
              a563 0095  ld   $95
              a564 00a8  ld   $a8
              a565 00a0  ld   $a0
              a566 0011  ld   $11
              a567 00a5  ld   $a5
              a568 004f  ld   $4f
              a569 000a  ld   $0a
              a56a 0018  ld   $18
              a56b 0069  ld   $69
              a56c 0040  ld   $40
              a56d 000a  ld   $0a
              a56e 0026  ld   $26
              a56f 004e  ld   $4e
              a570 0026  ld   $26
              a571 004f  ld   $4f
              a572 0088  ld   $88
              a573 00d0  ld   $d0
              a574 00f2  ld   $f2
              a575 00a5  ld   $a5
              a576 00ce  ld   $ce
              a577 0020  ld   $20
              a578 0008  ld   $08
              a579 00e7  ld   $e7
              a57a 00a5  ld   $a5
              a57b 00cf  ld   $cf
              a57c 0095  ld   $95
              a57d 00a8  ld   $a8
              a57e 004c  ld   $4c
              a57f 007a  ld   $7a
              a580 00e2  ld   $e2
              a581 0020  ld   $20
              a582 0015  ld   $15
              a583 00e7  ld   $e7
              a584 00a4  ld   $a4
              a585 00ce  ld   $ce
              a586 00c4  ld   $c4
              a587 004c  ld   $4c
              a588 00a5  ld   $a5
              a589 00cf  ld   $cf
              a58a 00e5  ld   $e5
              a58b 004d  ld   $4d
              a58c 0090  ld   $90
              a58d 001f  ld   $1f
              a58e 0084  ld   $84
              a58f 0048  ld   $48
              a590 00a5  ld   $a5
              a591 00cf  ld   $cf
              a592 0085  ld   $85
              a593 0049  ld   $49
              a594 004c  ld   $4c
              a595 00b6  ld   $b6
              a596 00ee  ld   $ee
              a597 0020  ld   $20
              a598 0015  ld   $15
              a599 00e7  ld   $e7
              a59a 00a4  ld   $a4
              a59b 00ce  ld   $ce
              a59c 00c4  ld   $c4
              a59d 00ca  ld   $ca
              a59e 00a5  ld   $a5
              a59f 00cf  ld   $cf
              a5a0 00e5  ld   $e5
              a5a1 00cb  ld   $cb
              a5a2 00b0  ld   $b0
              a5a3 0009  ld   $09
              a5a4 0084  ld   $84
              a5a5 004a  ld   $4a
              a5a6 00a5  ld   $a5
              a5a7 00cf  ld   $cf
              a5a8 0085  ld   $85
              a5a9 004b  ld   $4b
              a5aa 004c  ld   $4c
              a5ab 00b7  ld   $b7
              a5ac 00e5  ld   $e5
              a5ad 004c  ld   $4c
              a5ae 00cb  ld   $cb
              a5af 00ee  ld   $ee
              a5b0 00ea  ld   $ea
              a5b1 00ea  ld   $ea
              a5b2 00ea  ld   $ea
              a5b3 00ea  ld   $ea
              a5b4 0020  ld   $20
              a5b5 00c9  ld   $c9
              a5b6 00ef  ld   $ef
              a5b7 0020  ld   $20
              a5b8 0071  ld   $71
              a5b9 00e1  ld   $e1
              a5ba 004c  ld   $4c
              a5bb 00bf  ld   $bf
              a5bc 00ef  ld   $ef
              a5bd 0020  ld   $20
              a5be 0003  ld   $03
              a5bf 00ee  ld   $ee
              a5c0 00a9  ld   $a9
              a5c1 00ff  ld   $ff
              a5c2 0085  ld   $85
              a5c3 00c8  ld   $c8
              a5c4 00a9  ld   $a9
              a5c5 0074  ld   $74
              a5c6 008d  ld   $8d
              a5c7 0000  ld   $00
              a5c8 0002  ld   $02
              a5c9 0060  ld   $60
              a5ca 0020  ld   $20
              a5cb 0036  ld   $36
              a5cc 00e7  ld   $e7
              a5cd 00e8  ld   $e8
              a5ce 0020  ld   $20
              a5cf 0036  ld   $36
              a5d0 00e7  ld   $e7
              a5d1 00b5  ld   $b5
              a5d2 0050  ld   $50
              a5d3 0060  ld   $60
              a5d4 00a9  ld   $a9
              a5d5 0000  ld   $00
              a5d6 0085  ld   $85
              a5d7 004a  ld   $4a
              a5d8 0085  ld   $85
              a5d9 004c  ld   $4c
              a5da 00a9  ld   $a9
              a5db 0008  ld   $08
              a5dc 0085  ld   $85
              a5dd 004b  ld   $4b
              a5de 00a9  ld   $a9
              a5df 0010  ld   $10
              a5e0 0085  ld   $85
              a5e1 004d  ld   $4d
              a5e2 004c  ld   $4c
              a5e3 00ad  ld   $ad
              a5e4 00e5  ld   $e5
              a5e5 00d5  ld   $d5
              a5e6 0088  ld   $88
              a5e7 00d0  ld   $d0
              a5e8 0001  ld   $01
              a5e9 0018  ld   $18
              a5ea 004c  ld   $4c
              a5eb 0002  ld   $02
              a5ec 00e1  ld   $e1
              a5ed 0020  ld   $20
              a5ee 00b7  ld   $b7
              a5ef 00e5  ld   $e5
              a5f0 004c  ld   $4c
              a5f1 0036  ld   $36
              a5f2 00e8  ld   $e8
              a5f3 0020  ld   $20
              a5f4 00b7  ld   $b7
              a5f5 00e5  ld   $e5
              a5f6 004c  ld   $4c
              a5f7 005b  ld   $5b
              a5f8 00e8  ld   $e8
              a5f9 00e0  ld   $e0
              a5fa 0080  ld   $80
              a5fb fe00  bra  ac          ;+-----------------------------------+
              a5fc fcfd  bra  $a5fd       ;|                                   |
              a5fd 1418  ld   $18,y       ;| Trampoline for page $a500 lookups |
              a5fe e006  jmp  y,$06       ;|                                   |
              a5ff c218  st   [$18]       ;+-----------------------------------+
              a600 00d0  ld   $d0
              a601 0001  ld   $01
              a602 0088  ld   $88
              a603 004c  ld   $4c
              a604 000c  ld   $0c
              a605 00e0  ld   $e0
              a606 00ff  ld   $ff
              a607 0000  ld   $00
              a608 0000  ld   $00
              a609 00d8  ld   $d8
              a60a 0058  ld   $58
              a60b 00a0  ld   $a0
              a60c 007f  ld   $7f
              a60d 008c  ld   $8c
              a60e 0012  ld   $12
              a60f 00d0  ld   $d0
              a610 00a9  ld   $a9
              a611 00a7  ld   $a7
              a612 008d  ld   $8d
              a613 0011  ld   $11
              a614 00d0  ld   $d0
              a615 008d  ld   $8d
              a616 0013  ld   $13
              a617 00d0  ld   $d0
              a618 00c9  ld   $c9
              a619 00df  ld   $df
              a61a 00f0  ld   $f0
              a61b 0013  ld   $13
              a61c 00c9  ld   $c9
              a61d 009b  ld   $9b
              a61e 00f0  ld   $f0
              a61f 0003  ld   $03
              a620 00c8  ld   $c8
              a621 0010  ld   $10
              a622 000f  ld   $0f
              a623 00a9  ld   $a9
              a624 00dc  ld   $dc
              a625 0020  ld   $20
              a626 00ef  ld   $ef
              a627 00ff  ld   $ff
              a628 00a9  ld   $a9
              a629 008d  ld   $8d
              a62a 0020  ld   $20
              a62b 00ef  ld   $ef
              a62c 00ff  ld   $ff
              a62d 00a0  ld   $a0
              a62e 0001  ld   $01
              a62f 0088  ld   $88
              a630 0030  ld   $30
              a631 00f6  ld   $f6
              a632 00ad  ld   $ad
              a633 0011  ld   $11
              a634 00d0  ld   $d0
              a635 0010  ld   $10
              a636 00fb  ld   $fb
              a637 00ad  ld   $ad
              a638 0010  ld   $10
              a639 00d0  ld   $d0
              a63a 0099  ld   $99
              a63b 0000  ld   $00
              a63c 0002  ld   $02
              a63d 0020  ld   $20
              a63e 00ef  ld   $ef
              a63f 00ff  ld   $ff
              a640 00c9  ld   $c9
              a641 008d  ld   $8d
              a642 00d0  ld   $d0
              a643 00d4  ld   $d4
              a644 00a0  ld   $a0
              a645 00ff  ld   $ff
              a646 00a9  ld   $a9
              a647 0000  ld   $00
              a648 00aa  ld   $aa
              a649 000a  ld   $0a
              a64a 0085  ld   $85
              a64b 003b  ld   $3b
              a64c 00c8  ld   $c8
              a64d 00b9  ld   $b9
              a64e 0000  ld   $00
              a64f 0002  ld   $02
              a650 00c9  ld   $c9
              a651 008d  ld   $8d
              a652 00f0  ld   $f0
              a653 00d4  ld   $d4
              a654 00c9  ld   $c9
              a655 00ae  ld   $ae
              a656 0090  ld   $90
              a657 00f4  ld   $f4
              a658 00f0  ld   $f0
              a659 00f0  ld   $f0
              a65a 00c9  ld   $c9
              a65b 00ba  ld   $ba
              a65c 00f0  ld   $f0
              a65d 00eb  ld   $eb
              a65e 00c9  ld   $c9
              a65f 00d2  ld   $d2
              a660 00f0  ld   $f0
              a661 003b  ld   $3b
              a662 0086  ld   $86
              a663 0038  ld   $38
              a664 0086  ld   $86
              a665 0039  ld   $39
              a666 0084  ld   $84
              a667 003a  ld   $3a
              a668 00b9  ld   $b9
              a669 0000  ld   $00
              a66a 0002  ld   $02
              a66b 0049  ld   $49
              a66c 00b0  ld   $b0
              a66d 00c9  ld   $c9
              a66e 000a  ld   $0a
              a66f 0090  ld   $90
              a670 0006  ld   $06
              a671 0069  ld   $69
              a672 0088  ld   $88
              a673 00c9  ld   $c9
              a674 00fa  ld   $fa
              a675 0090  ld   $90
              a676 0011  ld   $11
              a677 000a  ld   $0a
              a678 000a  ld   $0a
              a679 000a  ld   $0a
              a67a 000a  ld   $0a
              a67b 00a2  ld   $a2
              a67c 0004  ld   $04
              a67d 000a  ld   $0a
              a67e 0026  ld   $26
              a67f 0038  ld   $38
              a680 0026  ld   $26
              a681 0039  ld   $39
              a682 00ca  ld   $ca
              a683 00d0  ld   $d0
              a684 00f8  ld   $f8
              a685 00c8  ld   $c8
              a686 00d0  ld   $d0
              a687 00e0  ld   $e0
              a688 00c4  ld   $c4
              a689 003a  ld   $3a
              a68a 00f0  ld   $f0
              a68b 0097  ld   $97
              a68c 0024  ld   $24
              a68d 003b  ld   $3b
              a68e 0050  ld   $50
              a68f 0010  ld   $10
              a690 00a5  ld   $a5
              a691 0038  ld   $38
              a692 0081  ld   $81
              a693 0036  ld   $36
              a694 00e6  ld   $e6
              a695 0036  ld   $36
              a696 00d0  ld   $d0
              a697 00b5  ld   $b5
              a698 00e6  ld   $e6
              a699 0037  ld   $37
              a69a 004c  ld   $4c
              a69b 0044  ld   $44
              a69c 00ff  ld   $ff
              a69d 006c  ld   $6c
              a69e 0034  ld   $34
              a69f 0000  ld   $00
              a6a0 0030  ld   $30
              a6a1 002b  ld   $2b
              a6a2 00a2  ld   $a2
              a6a3 0002  ld   $02
              a6a4 00b5  ld   $b5
              a6a5 0037  ld   $37
              a6a6 0095  ld   $95
              a6a7 0035  ld   $35
              a6a8 0095  ld   $95
              a6a9 0033  ld   $33
              a6aa 00ca  ld   $ca
              a6ab 00d0  ld   $d0
              a6ac 00f7  ld   $f7
              a6ad 00d0  ld   $d0
              a6ae 0014  ld   $14
              a6af 00a9  ld   $a9
              a6b0 008d  ld   $8d
              a6b1 0020  ld   $20
              a6b2 00ef  ld   $ef
              a6b3 00ff  ld   $ff
              a6b4 00a5  ld   $a5
              a6b5 0035  ld   $35
              a6b6 0020  ld   $20
              a6b7 00dc  ld   $dc
              a6b8 00ff  ld   $ff
              a6b9 00a5  ld   $a5
              a6ba 0034  ld   $34
              a6bb 0020  ld   $20
              a6bc 00dc  ld   $dc
              a6bd 00ff  ld   $ff
              a6be 00a9  ld   $a9
              a6bf 00ba  ld   $ba
              a6c0 0020  ld   $20
              a6c1 00ef  ld   $ef
              a6c2 00ff  ld   $ff
              a6c3 00a9  ld   $a9
              a6c4 00a0  ld   $a0
              a6c5 0020  ld   $20
              a6c6 00ef  ld   $ef
              a6c7 00ff  ld   $ff
              a6c8 00a1  ld   $a1
              a6c9 0034  ld   $34
              a6ca 0020  ld   $20
              a6cb 00dc  ld   $dc
              a6cc 00ff  ld   $ff
              a6cd 0086  ld   $86
              a6ce 003b  ld   $3b
              a6cf 00a5  ld   $a5
              a6d0 0034  ld   $34
              a6d1 00c5  ld   $c5
              a6d2 0038  ld   $38
              a6d3 00a5  ld   $a5
              a6d4 0035  ld   $35
              a6d5 00e5  ld   $e5
              a6d6 0039  ld   $39
              a6d7 00b0  ld   $b0
              a6d8 00c1  ld   $c1
              a6d9 00e6  ld   $e6
              a6da 0034  ld   $34
              a6db 00d0  ld   $d0
              a6dc 0002  ld   $02
              a6dd 00e6  ld   $e6
              a6de 0035  ld   $35
              a6df 00a5  ld   $a5
              a6e0 0034  ld   $34
              a6e1 0029  ld   $29
              a6e2 0007  ld   $07
              a6e3 0010  ld   $10
              a6e4 00c8  ld   $c8
              a6e5 0048  ld   $48
              a6e6 004a  ld   $4a
              a6e7 004a  ld   $4a
              a6e8 004a  ld   $4a
              a6e9 004a  ld   $4a
              a6ea 0020  ld   $20
              a6eb 00e5  ld   $e5
              a6ec 00ff  ld   $ff
              a6ed 0068  ld   $68
              a6ee 0029  ld   $29
              a6ef 000f  ld   $0f
              a6f0 0009  ld   $09
              a6f1 00b0  ld   $b0
              a6f2 00c9  ld   $c9
              a6f3 00ba  ld   $ba
              a6f4 0090  ld   $90
              a6f5 0002  ld   $02
              a6f6 0069  ld   $69
              a6f7 0006  ld   $06
              a6f8 008d  ld   $8d
              a6f9 0012  ld   $12
              a6fa 00d0  ld   $d0
              a6fb fe00  bra  ac          ;+-----------------------------------+
              a6fc fcfd  bra  $a6fd       ;|                                   |
              a6fd 1418  ld   $18,y       ;| Trampoline for page $a600 lookups |
              a6fe e006  jmp  y,$06       ;|                                   |
              a6ff c218  st   [$18]       ;+-----------------------------------+
              a700 002c  ld   $2c
              a701 0012  ld   $12
              a702 00d0  ld   $d0
              a703 00d0  ld   $d0
              a704 00fb  ld   $fb
              a705 0060  ld   $60
              a706 0000  ld   $00
              a707 0000  ld   $00
              a708 0000  ld   $00
              * 5 times
              a70b 00ff  ld   $ff
              a70c 00db  ld   $db
              a70d 005e  ld   $5e
              a70e 0000  ld   $00
              a70f 0000  ld   $00         ;End of Apps/Apple-1/Apple-1_v2.gt1, size 7564
                                          ;+-----------------------------------+
                                          ;| Apps/MSBASIC/MSBASIC_v1.gt1       |
                                          ;+-----------------------------------+
              a710 dc41  st   $41,[y,x++] ;'A'
              a711 dc70  st   $70,[y,x++] ;'p'
              a712 dc70  st   $70,[y,x++] ;'p'
              a713 dc6c  st   $6c,[y,x++] ;'l'
              a714 dc65  st   $65,[y,x++] ;'e'
              a715 dc31  st   $31,[y,x++] ;'1'
              a716 dc00  st   $00,[y,x++] ;'\x00'
              a717 dc00  st   $00,[y,x++] ;'\x00'
              a718 0084  ld   $84
              a719 c218  st   [$18]
              a71a 0089  ld   $89
              a71b 14fa  ld   $fa,y
              a71c e020  jmp  y,$20
              a71d c219  st   [$19]
MSBASIC:      a71e 0002  ld   $02
              a71f 0000  ld   $00
              a720 0012  ld   $12
              a721 001a  ld   $1a
              a722 0021  ld   $21
              a723 00e6  ld   $e6
              a724 0038  ld   $38
              a725 0035  ld   $35
              a726 0053  ld   $53
              a727 000b  ld   $0b
              a728 0021  ld   $21
              a729 000e  ld   $0e
              a72a 00f3  ld   $f3
              a72b 0017  ld   $17
              a72c 0090  ld   $90
              a72d 0005  ld   $05
              a72e 0011  ld   $11
              a72f 0000  ld   $00
              a730 0024  ld   $24
              a731 00cf  ld   $cf
              a732 0018  ld   $18
              a733 0002  ld   $02
              a734 0018  ld   $18
              a735 00e8  ld   $e8
              a736 0027  ld   $27
              a737 0009  ld   $09
              a738 003e  ld   $3e
              a739 0008  ld   $08
              a73a 0090  ld   $90
              a73b 000d  ld   $0d
              a73c 00e6  ld   $e6
              a73d 0009  ld   $09
              a73e 0051  ld   $51
              a73f 000c  ld   $0c
              a740 00c5  ld   $c5
              a741 0010  ld   $10
              a742 007f  ld   $7f
              a743 000c  ld   $0c
              a744 0093  ld   $93
              a745 000a  ld   $0a
              a746 0093  ld   $93
              a747 0009  ld   $09
              a748 006b  ld   $6b
              a749 0009  ld   $09
              a74a 0016  ld   $16
              a74b 000a  ld   $0a
              a74c 0016  ld   $16
              a74d 0009  ld   $09
              a74e 0076  ld   $76
              a74f 0009  ld   $09
              a750 00c0  ld   $c0
              a751 0009  ld   $09
              a752 0029  ld   $29
              a753 000a  ld   $0a
              a754 0025  ld   $25
              a755 0009  ld   $09
              a756 0039  ld   $39
              a757 000a  ld   $0a
              a758 0071  ld   $71
              a759 0018  ld   $18
              a75a 00ff  ld   $ff
              a75b 0031  ld   $31
              a75c 00ff  ld   $ff
              a75d 002f  ld   $2f
              a75e 006d  ld   $6d
              a75f 000f  ld   $0f
              a760 00ee  ld   $ee
              a761 0013  ld   $13
              a762 0068  ld   $68
              a763 0018  ld   $18
              a764 0078  ld   $78
              a765 000b  ld   $0b
              a766 0051  ld   $51
              a767 0009  ld   $09
              a768 009b  ld   $9b
              a769 0007  ld   $07
              a76a 005d  ld   $5d
              a76b 0007  ld   $07
              a76c 003f  ld   $3f
              a76d 000c  ld   $0c
              a76e 0041  ld   $41
              a76f 0007  ld   $07
              a770 00b1  ld   $b1
              a771 001c  ld   $1c
              a772 0044  ld   $44
              a773 001d  ld   $1d
              a774 00d0  ld   $d0
              a775 001c  ld   $1c
              a776 0038  ld   $38
              a777 0000  ld   $00
              a778 00b8  ld   $b8
              a779 0013  ld   $13
              a77a 00d9  ld   $d9
              a77b 0013  ld   $13
              a77c 00ca  ld   $ca
              a77d 001f  ld   $1f
              a77e 00eb  ld   $eb
              a77f 0020  ld   $20
              a780 0062  ld   $62
              a781 001a  ld   $1a
              a782 0046  ld   $46
              a783 0020  ld   $20
              a784 0040  ld   $40
              a785 0021  ld   $21
              a786 0047  ld   $47
              a787 0021  ld   $21
              a788 0090  ld   $90
              a789 0021  ld   $21
              a78a 00fe  ld   $fe
              a78b 0021  ld   $21
              a78c 004a  ld   $4a
              a78d 0018  ld   $18
              a78e 00b8  ld   $b8
              a78f 0017  ld   $17
              a790 00a1  ld   $a1
              a791 0014  ld   $14
              a792 00e9  ld   $e9
              a793 0017  ld   $17
              a794 00c7  ld   $c7
              a795 0017  ld   $17
              a796 0028  ld   $28
              a797 0017  ld   $17
              a798 003c  ld   $3c
              a799 0017  ld   $17
              a79a 0068  ld   $68
              a79b 0017  ld   $17
              a79c 0073  ld   $73
              a79d 0017  ld   $17
              a79e 0079  ld   $79
              a79f 00e1  ld   $e1
              a7a0 0018  ld   $18
              a7a1 0079  ld   $79
              a7a2 0097  ld   $97
              a7a3 0018  ld   $18
              a7a4 007b  ld   $7b
              a7a5 00a2  ld   $a2
              a7a6 001a  ld   $1a
              a7a7 007b  ld   $7b
              a7a8 0089  ld   $89
              a7a9 001b  ld   $1b
              a7aa 007f  ld   $7f
              a7ab 00d3  ld   $d3
              a7ac 001f  ld   $1f
              a7ad 0050  ld   $50
              a7ae 002d  ld   $2d
              a7af 0010  ld   $10
              a7b0 0046  ld   $46
              a7b1 002a  ld   $2a
              a7b2 0010  ld   $10
              a7b3 007d  ld   $7d
              a7b4 000c  ld   $0c
              a7b5 0020  ld   $20
              a7b6 005a  ld   $5a
              a7b7 0039  ld   $39
              a7b8 000f  ld   $0f
              a7b9 0064  ld   $64
              a7ba 005a  ld   $5a
              a7bb 0010  ld   $10
              a7bc 0045  ld   $45
              a7bd 004e  ld   $4e
              a7be 00c4  ld   $c4
              a7bf 0046  ld   $46
              a7c0 004f  ld   $4f
              a7c1 00d2  ld   $d2
              a7c2 004e  ld   $4e
              a7c3 0045  ld   $45
              a7c4 0058  ld   $58
              a7c5 00d4  ld   $d4
              a7c6 0044  ld   $44
              a7c7 0041  ld   $41
              a7c8 0054  ld   $54
              a7c9 00c1  ld   $c1
              a7ca 0049  ld   $49
              a7cb 004e  ld   $4e
              a7cc 0050  ld   $50
              a7cd 0055  ld   $55
              a7ce 00d4  ld   $d4
              a7cf 0044  ld   $44
              a7d0 0049  ld   $49
              a7d1 00cd  ld   $cd
              a7d2 0052  ld   $52
              a7d3 0045  ld   $45
              a7d4 0041  ld   $41
              a7d5 00c4  ld   $c4
              a7d6 004c  ld   $4c
              a7d7 0045  ld   $45
              a7d8 00d4  ld   $d4
              a7d9 0047  ld   $47
              a7da 004f  ld   $4f
              a7db 0054  ld   $54
              a7dc 00cf  ld   $cf
              a7dd 0052  ld   $52
              a7de 0055  ld   $55
              a7df 00ce  ld   $ce
              a7e0 0049  ld   $49
              a7e1 00c6  ld   $c6
              a7e2 0052  ld   $52
              a7e3 0045  ld   $45
              a7e4 0053  ld   $53
              a7e5 0054  ld   $54
              a7e6 004f  ld   $4f
              a7e7 0052  ld   $52
              a7e8 00c5  ld   $c5
              a7e9 0047  ld   $47
              a7ea 004f  ld   $4f
              a7eb 0053  ld   $53
              a7ec 0055  ld   $55
              a7ed 00c2  ld   $c2
              a7ee 0052  ld   $52
              a7ef 0045  ld   $45
              a7f0 0054  ld   $54
              a7f1 0055  ld   $55
              a7f2 0052  ld   $52
              a7f3 00ce  ld   $ce
              a7f4 0052  ld   $52
              a7f5 0045  ld   $45
              a7f6 00cd  ld   $cd
              a7f7 0053  ld   $53
              a7f8 0054  ld   $54
              a7f9 004f  ld   $4f
              a7fa 00d0  ld   $d0
              a7fb fe00  bra  ac          ;+-----------------------------------+
              a7fc fcfd  bra  $a7fd       ;|                                   |
              a7fd 1418  ld   $18,y       ;| Trampoline for page $a700 lookups |
              a7fe e006  jmp  y,$06       ;|                                   |
              a7ff c218  st   [$18]       ;+-----------------------------------+
              a800 004f  ld   $4f
              a801 00ce  ld   $ce
              a802 0057  ld   $57
              a803 0041  ld   $41
              a804 0049  ld   $49
              a805 00d4  ld   $d4
              a806 004c  ld   $4c
              a807 004f  ld   $4f
              a808 0041  ld   $41
              a809 00c4  ld   $c4
              a80a 0053  ld   $53
              a80b 0041  ld   $41
              a80c 0056  ld   $56
              a80d 00c5  ld   $c5
              a80e 0056  ld   $56
              a80f 0045  ld   $45
              a810 0052  ld   $52
              a811 0049  ld   $49
              a812 0046  ld   $46
              a813 00d9  ld   $d9
              a814 0044  ld   $44
              a815 0045  ld   $45
              a816 00c6  ld   $c6
              a817 0050  ld   $50
              a818 004f  ld   $4f
              a819 004b  ld   $4b
              a81a 00c5  ld   $c5
              a81b 0050  ld   $50
              a81c 0052  ld   $52
              a81d 0049  ld   $49
              a81e 004e  ld   $4e
              a81f 00d4  ld   $d4
              a820 0043  ld   $43
              a821 004f  ld   $4f
              a822 004e  ld   $4e
              a823 0003  ld   $03
              a824 0000  ld   $00
              a825 0000  ld   $00
              a826 00d4  ld   $d4
              a827 004c  ld   $4c
              a828 0049  ld   $49
              a829 0053  ld   $53
              a82a 00d4  ld   $d4
              a82b 0043  ld   $43
              a82c 004c  ld   $4c
              a82d 00d2  ld   $d2
              a82e 0047  ld   $47
              a82f 0045  ld   $45
              a830 00d4  ld   $d4
              a831 004e  ld   $4e
              a832 0045  ld   $45
              a833 00d7  ld   $d7
              a834 0054  ld   $54
              a835 0041  ld   $41
              a836 0042  ld   $42
              a837 00a8  ld   $a8
              a838 0054  ld   $54
              a839 00cf  ld   $cf
              a83a 0046  ld   $46
              a83b 00ce  ld   $ce
              a83c 0053  ld   $53
              a83d 0050  ld   $50
              a83e 0043  ld   $43
              a83f 00a8  ld   $a8
              a840 0054  ld   $54
              a841 0048  ld   $48
              a842 0045  ld   $45
              a843 00ce  ld   $ce
              a844 004e  ld   $4e
              a845 004f  ld   $4f
              a846 00d4  ld   $d4
              a847 0053  ld   $53
              a848 0054  ld   $54
              a849 0045  ld   $45
              a84a 00d0  ld   $d0
              a84b 00ab  ld   $ab
              a84c 00ad  ld   $ad
              a84d 00aa  ld   $aa
              a84e 00af  ld   $af
              a84f 00de  ld   $de
              a850 0041  ld   $41
              a851 004e  ld   $4e
              a852 00c4  ld   $c4
              a853 004f  ld   $4f
              a854 00d2  ld   $d2
              a855 00be  ld   $be
              a856 00bd  ld   $bd
              a857 00bc  ld   $bc
              a858 0053  ld   $53
              a859 0047  ld   $47
              a85a 00ce  ld   $ce
              a85b 0049  ld   $49
              a85c 004e  ld   $4e
              a85d 00d4  ld   $d4
              a85e 0041  ld   $41
              a85f 0042  ld   $42
              a860 00d3  ld   $d3
              a861 0055  ld   $55
              a862 0053  ld   $53
              a863 00d2  ld   $d2
              a864 0046  ld   $46
              a865 0052  ld   $52
              a866 00c5  ld   $c5
              a867 0050  ld   $50
              a868 004f  ld   $4f
              a869 00d3  ld   $d3
              a86a 0053  ld   $53
              a86b 0051  ld   $51
              a86c 00d2  ld   $d2
              a86d 0052  ld   $52
              a86e 004e  ld   $4e
              a86f 00c4  ld   $c4
              a870 004c  ld   $4c
              a871 004f  ld   $4f
              a872 00c7  ld   $c7
              a873 0045  ld   $45
              a874 0058  ld   $58
              a875 00d0  ld   $d0
              a876 0043  ld   $43
              a877 004f  ld   $4f
              a878 00d3  ld   $d3
              a879 0053  ld   $53
              a87a 0049  ld   $49
              a87b 00ce  ld   $ce
              a87c 0054  ld   $54
              a87d 0041  ld   $41
              a87e 00ce  ld   $ce
              a87f 0041  ld   $41
              a880 0054  ld   $54
              a881 00ce  ld   $ce
              a882 0050  ld   $50
              a883 0045  ld   $45
              a884 0045  ld   $45
              a885 00cb  ld   $cb
              a886 004c  ld   $4c
              a887 0045  ld   $45
              a888 00ce  ld   $ce
              a889 0053  ld   $53
              a88a 0054  ld   $54
              a88b 0052  ld   $52
              a88c 00a4  ld   $a4
              a88d 0056  ld   $56
              a88e 0041  ld   $41
              a88f 00cc  ld   $cc
              a890 0041  ld   $41
              a891 0053  ld   $53
              a892 00c3  ld   $c3
              a893 0043  ld   $43
              a894 0048  ld   $48
              a895 0052  ld   $52
              a896 00a4  ld   $a4
              a897 004c  ld   $4c
              a898 0045  ld   $45
              a899 0046  ld   $46
              a89a 0054  ld   $54
              a89b 00a4  ld   $a4
              a89c 0052  ld   $52
              a89d 0049  ld   $49
              a89e 0047  ld   $47
              a89f 0048  ld   $48
              a8a0 0054  ld   $54
              a8a1 00a4  ld   $a4
              a8a2 004d  ld   $4d
              a8a3 0049  ld   $49
              a8a4 0044  ld   $44
              a8a5 00a4  ld   $a4
              a8a6 0047  ld   $47
              a8a7 00cf  ld   $cf
              a8a8 0000  ld   $00
              a8a9 004e  ld   $4e
              a8aa 0045  ld   $45
              a8ab 0058  ld   $58
              a8ac 0054  ld   $54
              a8ad 0020  ld   $20
              a8ae 0057  ld   $57
              a8af 0049  ld   $49
              a8b0 0054  ld   $54
              a8b1 0048  ld   $48
              a8b2 004f  ld   $4f
              a8b3 0055  ld   $55
              a8b4 0054  ld   $54
              a8b5 0020  ld   $20
              a8b6 0046  ld   $46
              a8b7 004f  ld   $4f
              a8b8 00d2  ld   $d2
              a8b9 0053  ld   $53
              a8ba 0059  ld   $59
              a8bb 004e  ld   $4e
              a8bc 0054  ld   $54
              a8bd 0041  ld   $41
              a8be 00d8  ld   $d8
              a8bf 0052  ld   $52
              a8c0 0045  ld   $45
              a8c1 0054  ld   $54
              a8c2 0055  ld   $55
              a8c3 0052  ld   $52
              a8c4 004e  ld   $4e
              a8c5 0020  ld   $20
              a8c6 0057  ld   $57
              a8c7 0049  ld   $49
              a8c8 0054  ld   $54
              a8c9 0048  ld   $48
              a8ca 004f  ld   $4f
              a8cb 0055  ld   $55
              a8cc 0054  ld   $54
              a8cd 0020  ld   $20
              a8ce 0047  ld   $47
              a8cf 004f  ld   $4f
              a8d0 0053  ld   $53
              a8d1 0055  ld   $55
              a8d2 00c2  ld   $c2
              a8d3 004f  ld   $4f
              a8d4 0055  ld   $55
              a8d5 0054  ld   $54
              a8d6 0020  ld   $20
              a8d7 004f  ld   $4f
              a8d8 0046  ld   $46
              a8d9 0020  ld   $20
              a8da 0044  ld   $44
              a8db 0041  ld   $41
              a8dc 0054  ld   $54
              a8dd 00c1  ld   $c1
              a8de 0049  ld   $49
              a8df 004c  ld   $4c
              a8e0 004c  ld   $4c
              a8e1 0045  ld   $45
              a8e2 0047  ld   $47
              a8e3 0041  ld   $41
              a8e4 004c  ld   $4c
              a8e5 0020  ld   $20
              a8e6 0051  ld   $51
              a8e7 0055  ld   $55
              a8e8 0041  ld   $41
              a8e9 004e  ld   $4e
              a8ea 0054  ld   $54
              a8eb 0049  ld   $49
              a8ec 0054  ld   $54
              a8ed 00d9  ld   $d9
              a8ee 004f  ld   $4f
              a8ef 0056  ld   $56
              a8f0 0045  ld   $45
              a8f1 0052  ld   $52
              a8f2 0046  ld   $46
              a8f3 004c  ld   $4c
              a8f4 004f  ld   $4f
              a8f5 00d7  ld   $d7
              a8f6 004f  ld   $4f
              a8f7 0055  ld   $55
              a8f8 0054  ld   $54
              a8f9 0020  ld   $20
              a8fa 004f  ld   $4f
              a8fb fe00  bra  ac          ;+-----------------------------------+
              a8fc fcfd  bra  $a8fd       ;|                                   |
              a8fd 1418  ld   $18,y       ;| Trampoline for page $a800 lookups |
              a8fe e006  jmp  y,$06       ;|                                   |
              a8ff c218  st   [$18]       ;+-----------------------------------+
              a900 0046  ld   $46
              a901 0020  ld   $20
              a902 004d  ld   $4d
              a903 0045  ld   $45
              a904 004d  ld   $4d
              a905 004f  ld   $4f
              a906 0052  ld   $52
              a907 00d9  ld   $d9
              a908 0055  ld   $55
              a909 004e  ld   $4e
              a90a 0044  ld   $44
              a90b 0045  ld   $45
              a90c 0046  ld   $46
              a90d 0027  ld   $27
              a90e 0044  ld   $44
              a90f 0020  ld   $20
              a910 0053  ld   $53
              a911 0054  ld   $54
              a912 0041  ld   $41
              a913 0054  ld   $54
              a914 0045  ld   $45
              a915 004d  ld   $4d
              a916 0045  ld   $45
              a917 004e  ld   $4e
              a918 00d4  ld   $d4
              a919 0042  ld   $42
              a91a 0041  ld   $41
              a91b 0044  ld   $44
              a91c 0020  ld   $20
              a91d 0053  ld   $53
              a91e 0055  ld   $55
              a91f 0042  ld   $42
              a920 0053  ld   $53
              a921 0043  ld   $43
              a922 0052  ld   $52
              a923 0049  ld   $49
              a924 0050  ld   $50
              a925 00d4  ld   $d4
              a926 0052  ld   $52
              a927 0045  ld   $45
              a928 0044  ld   $44
              a929 0049  ld   $49
              a92a 004d  ld   $4d
              a92b 0004  ld   $04
              a92c 0000  ld   $00
              a92d 0000  ld   $00
              a92e 0027  ld   $27
              a92f 0044  ld   $44
              a930 0020  ld   $20
              a931 0041  ld   $41
              a932 0052  ld   $52
              a933 0052  ld   $52
              a934 0041  ld   $41
              a935 00d9  ld   $d9
              a936 0044  ld   $44
              a937 0049  ld   $49
              a938 0056  ld   $56
              a939 0049  ld   $49
              a93a 0053  ld   $53
              a93b 0049  ld   $49
              a93c 004f  ld   $4f
              a93d 004e  ld   $4e
              a93e 0020  ld   $20
              a93f 0042  ld   $42
              a940 0059  ld   $59
              a941 0020  ld   $20
              a942 005a  ld   $5a
              a943 0045  ld   $45
              a944 0052  ld   $52
              a945 00cf  ld   $cf
              a946 0049  ld   $49
              a947 004c  ld   $4c
              a948 004c  ld   $4c
              a949 0045  ld   $45
              a94a 0047  ld   $47
              a94b 0041  ld   $41
              a94c 004c  ld   $4c
              a94d 0020  ld   $20
              a94e 0044  ld   $44
              a94f 0049  ld   $49
              a950 0052  ld   $52
              a951 0045  ld   $45
              a952 0043  ld   $43
              a953 00d4  ld   $d4
              a954 0054  ld   $54
              a955 0059  ld   $59
              a956 0050  ld   $50
              a957 0045  ld   $45
              a958 0020  ld   $20
              a959 004d  ld   $4d
              a95a 0049  ld   $49
              a95b 0053  ld   $53
              a95c 004d  ld   $4d
              a95d 0041  ld   $41
              a95e 0054  ld   $54
              a95f 0043  ld   $43
              a960 00c8  ld   $c8
              a961 0053  ld   $53
              a962 0054  ld   $54
              a963 0052  ld   $52
              a964 0049  ld   $49
              a965 004e  ld   $4e
              a966 0047  ld   $47
              a967 0020  ld   $20
              a968 0054  ld   $54
              a969 004f  ld   $4f
              a96a 004f  ld   $4f
              a96b 0020  ld   $20
              a96c 004c  ld   $4c
              a96d 004f  ld   $4f
              a96e 004e  ld   $4e
              a96f 00c7  ld   $c7
              a970 0046  ld   $46
              a971 004f  ld   $4f
              a972 0052  ld   $52
              a973 004d  ld   $4d
              a974 0055  ld   $55
              a975 004c  ld   $4c
              a976 0041  ld   $41
              a977 0020  ld   $20
              a978 0054  ld   $54
              a979 004f  ld   $4f
              a97a 004f  ld   $4f
              a97b 0020  ld   $20
              a97c 0043  ld   $43
              a97d 004f  ld   $4f
              a97e 004d  ld   $4d
              a97f 0050  ld   $50
              a980 004c  ld   $4c
              a981 0045  ld   $45
              a982 00d8  ld   $d8
              a983 0043  ld   $43
              a984 0041  ld   $41
              a985 004e  ld   $4e
              a986 0027  ld   $27
              a987 0054  ld   $54
              a988 0020  ld   $20
              a989 0043  ld   $43
              a98a 004f  ld   $4f
              a98b 004e  ld   $4e
              a98c 0054  ld   $54
              a98d 0049  ld   $49
              a98e 004e  ld   $4e
              a98f 0055  ld   $55
              a990 00c5  ld   $c5
              a991 0055  ld   $55
              a992 004e  ld   $4e
              a993 0044  ld   $44
              a994 0045  ld   $45
              a995 0046  ld   $46
              a996 0027  ld   $27
              a997 0044  ld   $44
              a998 0020  ld   $20
              a999 0046  ld   $46
              a99a 0055  ld   $55
              a99b 004e  ld   $4e
              a99c 0043  ld   $43
              a99d 0054  ld   $54
              a99e 0049  ld   $49
              a99f 004f  ld   $4f
              a9a0 00ce  ld   $ce
              a9a1 0020  ld   $20
              a9a2 0000  ld   $00
              a9a3 002e  ld   $2e
              a9a4 0038  ld   $38
              a9a5 004c  ld   $4c
              a9a6 00cc  ld   $cc
              a9a7 000f  ld   $0f
              a9a8 00a0  ld   $a0
              a9a9 001b  ld   $1b
              a9aa 0018  ld   $18
              a9ab 0088  ld   $88
              a9ac 0069  ld   $69
              a9ad 0006  ld   $06
              a9ae 0090  ld   $90
              a9af 00fb  ld   $fb
              a9b0 0060  ld   $60
              a9b1 0020  ld   $20
              a9b2 0045  ld   $45
              a9b3 0052  ld   $52
              a9b4 0052  ld   $52
              a9b5 004f  ld   $4f
              a9b6 0052  ld   $52
              a9b7 0000  ld   $00
              a9b8 0020  ld   $20
              a9b9 0049  ld   $49
              a9ba 004e  ld   $4e
              a9bb 0020  ld   $20
              a9bc 0000  ld   $00
              a9bd 000d  ld   $0d
              a9be 000a  ld   $0a
              a9bf 0052  ld   $52
              a9c0 0045  ld   $45
              a9c1 0041  ld   $41
              a9c2 0044  ld   $44
              a9c3 0059  ld   $59
              a9c4 002e  ld   $2e
              a9c5 000d  ld   $0d
              a9c6 000a  ld   $0a
              a9c7 0000  ld   $00
              a9c8 000d  ld   $0d
              a9c9 000a  ld   $0a
              a9ca 0042  ld   $42
              a9cb 0052  ld   $52
              a9cc 0045  ld   $45
              a9cd 0041  ld   $41
              a9ce 004b  ld   $4b
              a9cf 0000  ld   $00
              a9d0 00ba  ld   $ba
              a9d1 00e8  ld   $e8
              a9d2 00e8  ld   $e8
              a9d3 00e8  ld   $e8
              a9d4 00e8  ld   $e8
              a9d5 00b5  ld   $b5
              a9d6 0001  ld   $01
              a9d7 00c9  ld   $c9
              a9d8 0081  ld   $81
              a9d9 00d0  ld   $d0
              a9da 001d  ld   $1d
              a9db 00a5  ld   $a5
              a9dc 007c  ld   $7c
              a9dd 00d0  ld   $d0
              a9de 0008  ld   $08
              a9df 00b5  ld   $b5
              a9e0 0002  ld   $02
              a9e1 0085  ld   $85
              a9e2 007b  ld   $7b
              a9e3 00b5  ld   $b5
              a9e4 0003  ld   $03
              a9e5 0085  ld   $85
              a9e6 007c  ld   $7c
              a9e7 00d5  ld   $d5
              a9e8 0003  ld   $03
              a9e9 00d0  ld   $d0
              a9ea 0006  ld   $06
              a9eb 00a5  ld   $a5
              a9ec 007b  ld   $7b
              a9ed 00d5  ld   $d5
              a9ee 0002  ld   $02
              a9ef 00f0  ld   $f0
              a9f0 0007  ld   $07
              a9f1 008a  ld   $8a
              a9f2 0018  ld   $18
              a9f3 0069  ld   $69
              a9f4 0012  ld   $12
              a9f5 00aa  ld   $aa
              a9f6 00d0  ld   $d0
              a9f7 00dd  ld   $dd
              a9f8 0060  ld   $60
              a9f9 0020  ld   $20
              a9fa 001b  ld   $1b
              a9fb fe00  bra  ac          ;+-----------------------------------+
              a9fc fcfd  bra  $a9fd       ;|                                   |
              a9fd 1418  ld   $18,y       ;| Trampoline for page $a900 lookups |
              a9fe e006  jmp  y,$06       ;|                                   |
              a9ff c218  st   [$18]       ;+-----------------------------------+
              aa00 0005  ld   $05
              aa01 0085  ld   $85
              aa02 0063  ld   $63
              aa03 0084  ld   $84
              aa04 0064  ld   $64
              aa05 0038  ld   $38
              aa06 00a5  ld   $a5
              aa07 008d  ld   $8d
              aa08 00e5  ld   $e5
              aa09 0092  ld   $92
              aa0a 0085  ld   $85
              aa0b 0054  ld   $54
              aa0c 00a8  ld   $a8
              aa0d 00a5  ld   $a5
              aa0e 008e  ld   $8e
              aa0f 00e5  ld   $e5
              aa10 0093  ld   $93
              aa11 00aa  ld   $aa
              aa12 00e8  ld   $e8
              aa13 0098  ld   $98
              aa14 00f0  ld   $f0
              aa15 0023  ld   $23
              aa16 00a5  ld   $a5
              aa17 008d  ld   $8d
              aa18 0038  ld   $38
              aa19 00e5  ld   $e5
              aa1a 0054  ld   $54
              aa1b 0085  ld   $85
              aa1c 008d  ld   $8d
              aa1d 00b0  ld   $b0
              aa1e 0003  ld   $03
              aa1f 00c6  ld   $c6
              aa20 008e  ld   $8e
              aa21 0038  ld   $38
              aa22 00a5  ld   $a5
              aa23 008b  ld   $8b
              aa24 00e5  ld   $e5
              aa25 0054  ld   $54
              aa26 0085  ld   $85
              aa27 008b  ld   $8b
              aa28 00b0  ld   $b0
              aa29 0008  ld   $08
              aa2a 00c6  ld   $c6
              aa2b 008c  ld   $8c
              aa2c 0090  ld   $90
              aa2d 0004  ld   $04
              aa2e 00b1  ld   $b1
              aa2f 008d  ld   $8d
              aa30 0091  ld   $91
              aa31 008b  ld   $8b
              aa32 0088  ld   $88
              aa33 0005  ld   $05
              aa34 0000  ld   $00
              aa35 0000  ld   $00
              aa36 00d0  ld   $d0
              aa37 00f9  ld   $f9
              aa38 00b1  ld   $b1
              aa39 008d  ld   $8d
              aa3a 0091  ld   $91
              aa3b 008b  ld   $8b
              aa3c 00c6  ld   $c6
              aa3d 008e  ld   $8e
              aa3e 00c6  ld   $c6
              aa3f 008c  ld   $8c
              aa40 00ca  ld   $ca
              aa41 00d0  ld   $d0
              aa42 00f2  ld   $f2
              aa43 0060  ld   $60
              aa44 000a  ld   $0a
              aa45 0069  ld   $69
              aa46 00b2  ld   $b2
              aa47 00b0  ld   $b0
              aa48 0035  ld   $35
              aa49 0085  ld   $85
              aa4a 0054  ld   $54
              aa4b 00ba  ld   $ba
              aa4c 00e4  ld   $e4
              aa4d 0054  ld   $54
              aa4e 0090  ld   $90
              aa4f 002e  ld   $2e
              aa50 0060  ld   $60
              aa51 00c4  ld   $c4
              aa52 0066  ld   $66
              aa53 0090  ld   $90
              aa54 0028  ld   $28
              aa55 00d0  ld   $d0
              aa56 0004  ld   $04
              aa57 00c5  ld   $c5
              aa58 0065  ld   $65
              aa59 0090  ld   $90
              aa5a 0022  ld   $22
              aa5b 0048  ld   $48
              aa5c 00a2  ld   $a2
              aa5d 0009  ld   $09
              aa5e 0098  ld   $98
              aa5f 0048  ld   $48
              aa60 00b5  ld   $b5
              aa61 008a  ld   $8a
              aa62 00ca  ld   $ca
              aa63 0010  ld   $10
              aa64 00fa  ld   $fa
              aa65 0020  ld   $20
              aa66 0062  ld   $62
              aa67 0015  ld   $15
              aa68 00a2  ld   $a2
              aa69 00f7  ld   $f7
              aa6a 0068  ld   $68
              aa6b 0095  ld   $95
              aa6c 0094  ld   $94
              aa6d 00e8  ld   $e8
              aa6e 0030  ld   $30
              aa6f 00fa  ld   $fa
              aa70 0068  ld   $68
              aa71 00a8  ld   $a8
              aa72 0068  ld   $68
              aa73 00c4  ld   $c4
              aa74 0066  ld   $66
              aa75 0090  ld   $90
              aa76 0006  ld   $06
              aa77 00d0  ld   $d0
              aa78 0005  ld   $05
              aa79 00c5  ld   $c5
              aa7a 0065  ld   $65
              aa7b 00b0  ld   $b0
              aa7c 0001  ld   $01
              aa7d 0060  ld   $60
              aa7e 00a2  ld   $a2
              aa7f 004d  ld   $4d
              aa80 0046  ld   $46
              aa81 0045  ld   $45
              aa82 0020  ld   $20
              aa83 00ac  ld   $ac
              aa84 000b  ld   $0b
              aa85 0020  ld   $20
              aa86 000f  ld   $0f
              aa87 000c  ld   $0c
              aa88 00bd  ld   $bd
              aa89 0083  ld   $83
              aa8a 0003  ld   $03
              aa8b 0048  ld   $48
              aa8c 0029  ld   $29
              aa8d 007f  ld   $7f
              aa8e 0020  ld   $20
              aa8f 0011  ld   $11
              aa90 000c  ld   $0c
              aa91 00e8  ld   $e8
              aa92 0068  ld   $68
              aa93 0010  ld   $10
              aa94 00f3  ld   $f3
              aa95 0020  ld   $20
              aa96 007a  ld   $7a
              aa97 0007  ld   $07
              aa98 00a9  ld   $a9
              aa99 0083  ld   $83
              aa9a 00a0  ld   $a0
              aa9b 0004  ld   $04
              aa9c 0020  ld   $20
              aa9d 00ef  ld   $ef
              aa9e 000b  ld   $0b
              aa9f 00a4  ld   $a4
              aaa0 006c  ld   $6c
              aaa1 00c8  ld   $c8
              aaa2 00f0  ld   $f0
              aaa3 0003  ld   $03
              aaa4 0020  ld   $20
              aaa5 003a  ld   $3a
              aaa6 001e  ld   $1e
              aaa7 0046  ld   $46
              aaa8 0045  ld   $45
              aaa9 00a9  ld   $a9
              aaaa 008f  ld   $8f
              aaab 00a0  ld   $a0
              aaac 0004  ld   $04
              aaad 0020  ld   $20
              aaae 00ef  ld   $ef
              aaaf 000b  ld   $0b
              aab0 0020  ld   $20
              aab1 0057  ld   $57
              aab2 0006  ld   $06
              aab3 0086  ld   $86
              aab4 00a6  ld   $a6
              aab5 0084  ld   $84
              aab6 00a7  ld   $a7
              aab7 0020  ld   $20
              aab8 006b  ld   $6b
              aab9 0022  ld   $22
              aaba 00aa  ld   $aa
              aabb 00f0  ld   $f0
              aabc 00f3  ld   $f3
              aabd 00a2  ld   $a2
              aabe 00ff  ld   $ff
              aabf 0086  ld   $86
              aac0 006c  ld   $6c
              aac1 0090  ld   $90
              aac2 0006  ld   $06
              aac3 0020  ld   $20
              aac4 007e  ld   $7e
              aac5 0006  ld   $06
              aac6 004c  ld   $4c
              aac7 00de  ld   $de
              aac8 0008  ld   $08
              aac9 0020  ld   $20
              aaca 005a  ld   $5a
              aacb 000a  ld   $0a
              aacc 0020  ld   $20
              aacd 007e  ld   $7e
              aace 0006  ld   $06
              aacf 0084  ld   $84
              aad0 003d  ld   $3d
              aad1 0020  ld   $20
              aad2 0013  ld   $13
              aad3 0007  ld   $07
              aad4 0090  ld   $90
              aad5 0044  ld   $44
              aad6 00a0  ld   $a0
              aad7 0001  ld   $01
              aad8 00b1  ld   $b1
              aad9 0092  ld   $92
              aada 0085  ld   $85
              aadb 0055  ld   $55
              aadc 00a5  ld   $a5
              aadd 005f  ld   $5f
              aade 0085  ld   $85
              aadf 0054  ld   $54
              aae0 00a5  ld   $a5
              aae1 0093  ld   $93
              aae2 0085  ld   $85
              aae3 0057  ld   $57
              aae4 00a5  ld   $a5
              aae5 0092  ld   $92
              aae6 0088  ld   $88
              aae7 00f1  ld   $f1
              aae8 0092  ld   $92
              aae9 0018  ld   $18
              aaea 0065  ld   $65
              aaeb 005f  ld   $5f
              aaec 0085  ld   $85
              aaed 005f  ld   $5f
              aaee 0085  ld   $85
              aaef 0056  ld   $56
              aaf0 00a5  ld   $a5
              aaf1 0060  ld   $60
              aaf2 0069  ld   $69
              aaf3 00ff  ld   $ff
              aaf4 0085  ld   $85
              aaf5 0060  ld   $60
              aaf6 00e5  ld   $e5
              aaf7 0093  ld   $93
              aaf8 00aa  ld   $aa
              aaf9 0038  ld   $38
              aafa 00a5  ld   $a5
              aafb fe00  bra  ac          ;+-----------------------------------+
              aafc fcfd  bra  $aafd       ;|                                   |
              aafd 1418  ld   $18,y       ;| Trampoline for page $aa00 lookups |
              aafe e006  jmp  y,$06       ;|                                   |
              aaff c218  st   [$18]       ;+-----------------------------------+
              ab00 0092  ld   $92
              ab01 00e5  ld   $e5
              ab02 005f  ld   $5f
              ab03 00a8  ld   $a8
              ab04 00b0  ld   $b0
              ab05 0003  ld   $03
              ab06 00e8  ld   $e8
              ab07 00c6  ld   $c6
              ab08 0057  ld   $57
              ab09 0018  ld   $18
              ab0a 0065  ld   $65
              ab0b 0054  ld   $54
              ab0c 0090  ld   $90
              ab0d 0003  ld   $03
              ab0e 00c6  ld   $c6
              ab0f 0055  ld   $55
              ab10 0018  ld   $18
              ab11 00b1  ld   $b1
              ab12 0054  ld   $54
              ab13 0091  ld   $91
              ab14 0056  ld   $56
              ab15 00c8  ld   $c8
              ab16 00d0  ld   $d0
              ab17 00f9  ld   $f9
              ab18 00e6  ld   $e6
              ab19 0055  ld   $55
              ab1a 00e6  ld   $e6
              ab1b 0057  ld   $57
              ab1c 00ca  ld   $ca
              ab1d 00d0  ld   $d0
              ab1e 00f2  ld   $f2
              ab1f 0020  ld   $20
              ab20 0059  ld   $59
              ab21 0007  ld   $07
              ab22 0020  ld   $20
              ab23 002a  ld   $2a
              ab24 0006  ld   $06
              ab25 00ad  ld   $ad
              ab26 0005  ld   $05
              ab27 0024  ld   $24
              ab28 00f0  ld   $f0
              ab29 008b  ld   $8b
              ab2a 0018  ld   $18
              ab2b 00a5  ld   $a5
              ab2c 005f  ld   $5f
              ab2d 0085  ld   $85
              ab2e 008d  ld   $8d
              ab2f 0065  ld   $65
              ab30 003d  ld   $3d
              ab31 0085  ld   $85
              ab32 008b  ld   $8b
              ab33 00a4  ld   $a4
              ab34 0060  ld   $60
              ab35 0084  ld   $84
              ab36 008e  ld   $8e
              ab37 0090  ld   $90
              ab38 0001  ld   $01
              ab39 00c8  ld   $c8
              ab3a 0084  ld   $84
              ab3b 0006  ld   $06
              ab3c 0000  ld   $00
              ab3d 0000  ld   $00
              ab3e 008c  ld   $8c
              ab3f 0020  ld   $20
              ab40 00cb  ld   $cb
              ab41 0004  ld   $04
              ab42 00a5  ld   $a5
              ab43 0046  ld   $46
              ab44 00a4  ld   $a4
              ab45 0047  ld   $47
              ab46 008d  ld   $8d
              ab47 0003  ld   $03
              ab48 0024  ld   $24
              ab49 008c  ld   $8c
              ab4a 0004  ld   $04
              ab4b 0024  ld   $24
              ab4c 00a5  ld   $a5
              ab4d 0063  ld   $63
              ab4e 00a4  ld   $a4
              ab4f 0064  ld   $64
              ab50 0085  ld   $85
              ab51 005f  ld   $5f
              ab52 0084  ld   $84
              ab53 0060  ld   $60
              ab54 00a4  ld   $a4
              ab55 003d  ld   $3d
              ab56 0088  ld   $88
              ab57 00b9  ld   $b9
              ab58 0001  ld   $01
              ab59 0024  ld   $24
              ab5a 0091  ld   $91
              ab5b 0092  ld   $92
              ab5c 0088  ld   $88
              ab5d 0010  ld   $10
              ab5e 00f8  ld   $f8
              ab5f 0020  ld   $20
              ab60 0059  ld   $59
              ab61 0007  ld   $07
              ab62 0020  ld   $20
              ab63 002a  ld   $2a
              ab64 0006  ld   $06
              ab65 004c  ld   $4c
              ab66 007a  ld   $7a
              ab67 0005  ld   $05
              ab68 00a5  ld   $a5
              ab69 005d  ld   $5d
              ab6a 00a4  ld   $a4
              ab6b 005e  ld   $5e
              ab6c 0085  ld   $85
              ab6d 0054  ld   $54
              ab6e 0084  ld   $84
              ab6f 0055  ld   $55
              ab70 0018  ld   $18
              ab71 00a0  ld   $a0
              ab72 0001  ld   $01
              ab73 00b1  ld   $b1
              ab74 0054  ld   $54
              ab75 00f0  ld   $f0
              ab76 001d  ld   $1d
              ab77 00a0  ld   $a0
              ab78 0004  ld   $04
              ab79 00c8  ld   $c8
              ab7a 00b1  ld   $b1
              ab7b 0054  ld   $54
              ab7c 00d0  ld   $d0
              ab7d 00fb  ld   $fb
              ab7e 00c8  ld   $c8
              ab7f 0098  ld   $98
              ab80 0065  ld   $65
              ab81 0054  ld   $54
              ab82 00aa  ld   $aa
              ab83 00a0  ld   $a0
              ab84 0000  ld   $00
              ab85 0091  ld   $91
              ab86 0054  ld   $54
              ab87 00a5  ld   $a5
              ab88 0055  ld   $55
              ab89 0069  ld   $69
              ab8a 0000  ld   $00
              ab8b 00c8  ld   $c8
              ab8c 0091  ld   $91
              ab8d 0054  ld   $54
              ab8e 0086  ld   $86
              ab8f 0054  ld   $54
              ab90 0085  ld   $85
              ab91 0055  ld   $55
              ab92 0090  ld   $90
              ab93 00dd  ld   $dd
              ab94 0060  ld   $60
              ab95 00a2  ld   $a2
              ab96 0000  ld   $00
              ab97 0020  ld   $20
              ab98 006e  ld   $6e
              ab99 0006  ld   $06
              ab9a 00c9  ld   $c9
              ab9b 000d  ld   $0d
              ab9c 00f0  ld   $f0
              ab9d 000b  ld   $0b
              ab9e 0020  ld   $20
              ab9f 0000  ld   $00
              aba0 002f  ld   $2f
              aba1 00f0  ld   $f0
              aba2 00f4  ld   $f4
              aba3 009d  ld   $9d
              aba4 0005  ld   $05
              aba5 0024  ld   $24
              aba6 00e8  ld   $e8
              aba7 00d0  ld   $d0
              aba8 00ee  ld   $ee
              aba9 004c  ld   $4c
              abaa 00a3  ld   $a3
              abab 000b  ld   $0b
              abac 0020  ld   $20
              abad 0000  ld   $00
              abae 002c  ld   $2c
              abaf 00c9  ld   $c9
              abb0 000f  ld   $0f
              abb1 00d0  ld   $d0
              abb2 0008  ld   $08
              abb3 0048  ld   $48
              abb4 00a5  ld   $a5
              abb5 0045  ld   $45
              abb6 0049  ld   $49
              abb7 00ff  ld   $ff
              abb8 0085  ld   $85
              abb9 0045  ld   $45
              abba 0068  ld   $68
              abbb 0060  ld   $60
              abbc 00a6  ld   $a6
              abbd 00a6  ld   $a6
              abbe 00a0  ld   $a0
              abbf 0004  ld   $04
              abc0 0084  ld   $84
              abc1 0041  ld   $41
              abc2 00bd  ld   $bd
              abc3 0000  ld   $00
              abc4 0024  ld   $24
              abc5 0010  ld   $10
              abc6 0007  ld   $07
              abc7 00c9  ld   $c9
              abc8 00ff  ld   $ff
              abc9 00f0  ld   $f0
              abca 003e  ld   $3e
              abcb 00e8  ld   $e8
              abcc 00d0  ld   $d0
              abcd 00f4  ld   $f4
              abce 00c9  ld   $c9
              abcf 0020  ld   $20
              abd0 00f0  ld   $f0
              abd1 0037  ld   $37
              abd2 0085  ld   $85
              abd3 003c  ld   $3c
              abd4 00c9  ld   $c9
              abd5 0022  ld   $22
              abd6 00f0  ld   $f0
              abd7 0056  ld   $56
              abd8 0024  ld   $24
              abd9 0041  ld   $41
              abda 0070  ld   $70
              abdb 002d  ld   $2d
              abdc 00c9  ld   $c9
              abdd 003f  ld   $3f
              abde 00d0  ld   $d0
              abdf 0004  ld   $04
              abe0 00a9  ld   $a9
              abe1 0097  ld   $97
              abe2 00d0  ld   $d0
              abe3 0025  ld   $25
              abe4 00c9  ld   $c9
              abe5 0030  ld   $30
              abe6 0090  ld   $90
              abe7 0004  ld   $04
              abe8 00c9  ld   $c9
              abe9 003c  ld   $3c
              abea 0090  ld   $90
              abeb 001d  ld   $1d
              abec 0084  ld   $84
              abed 00a4  ld   $a4
              abee 00a0  ld   $a0
              abef 0000  ld   $00
              abf0 0084  ld   $84
              abf1 003d  ld   $3d
              abf2 0088  ld   $88
              abf3 0086  ld   $86
              abf4 00a6  ld   $a6
              abf5 00ca  ld   $ca
              abf6 00c8  ld   $c8
              abf7 00e8  ld   $e8
              abf8 00bd  ld   $bd
              abf9 0000  ld   $00
              abfa 0024  ld   $24
              abfb fe00  bra  ac          ;+-----------------------------------+
              abfc fcfd  bra  $abfd       ;|                                   |
              abfd 1418  ld   $18,y       ;| Trampoline for page $ab00 lookups |
              abfe e006  jmp  y,$06       ;|                                   |
              abff c218  st   [$18]       ;+-----------------------------------+
              ac00 0038  ld   $38
              ac01 00f9  ld   $f9
              ac02 009e  ld   $9e
              ac03 0002  ld   $02
              ac04 00f0  ld   $f0
              ac05 00f5  ld   $f5
              ac06 00c9  ld   $c9
              ac07 0080  ld   $80
              ac08 00d0  ld   $d0
              ac09 0030  ld   $30
              ac0a 0005  ld   $05
              ac0b 003d  ld   $3d
              ac0c 00a4  ld   $a4
              ac0d 00a4  ld   $a4
              ac0e 00e8  ld   $e8
              ac0f 00c8  ld   $c8
              ac10 0099  ld   $99
              ac11 0000  ld   $00
              ac12 0024  ld   $24
              ac13 00b9  ld   $b9
              ac14 0000  ld   $00
              ac15 0024  ld   $24
              ac16 00f0  ld   $f0
              ac17 0036  ld   $36
              ac18 0038  ld   $38
              ac19 00e9  ld   $e9
              ac1a 003a  ld   $3a
              ac1b 00f0  ld   $f0
              ac1c 0004  ld   $04
              ac1d 00c9  ld   $c9
              ac1e 0049  ld   $49
              ac1f 00d0  ld   $d0
              ac20 0002  ld   $02
              ac21 0085  ld   $85
              ac22 0041  ld   $41
              ac23 0038  ld   $38
              ac24 00e9  ld   $e9
              ac25 0054  ld   $54
              ac26 00d0  ld   $d0
              ac27 009f  ld   $9f
              ac28 0085  ld   $85
              ac29 003c  ld   $3c
              ac2a 00bd  ld   $bd
              ac2b 0000  ld   $00
              ac2c 0024  ld   $24
              ac2d 00f0  ld   $f0
              ac2e 00df  ld   $df
              ac2f 00c5  ld   $c5
              ac30 003c  ld   $3c
              ac31 00f0  ld   $f0
              ac32 00db  ld   $db
              ac33 00c8  ld   $c8
              ac34 0099  ld   $99
              ac35 0000  ld   $00
              ac36 0024  ld   $24
              ac37 00e8  ld   $e8
              ac38 00d0  ld   $d0
              ac39 00f0  ld   $f0
              ac3a 00a6  ld   $a6
              ac3b 00a6  ld   $a6
              ac3c 00e6  ld   $e6
              ac3d 003d  ld   $3d
              ac3e 00c8  ld   $c8
              ac3f 00b9  ld   $b9
              ac40 009d  ld   $9d
              ac41 0002  ld   $02
              ac42 0010  ld   $10
              ac43 0007  ld   $07
              ac44 0000  ld   $00
              ac45 0000  ld   $00
              ac46 00fa  ld   $fa
              ac47 00b9  ld   $b9
              ac48 009e  ld   $9e
              ac49 0002  ld   $02
              ac4a 00d0  ld   $d0
              ac4b 00b4  ld   $b4
              ac4c 00bd  ld   $bd
              ac4d 0000  ld   $00
              ac4e 0024  ld   $24
              ac4f 0010  ld   $10
              ac50 00be  ld   $be
              ac51 0099  ld   $99
              ac52 0002  ld   $02
              ac53 0024  ld   $24
              ac54 00a9  ld   $a9
              ac55 0004  ld   $04
              ac56 0085  ld   $85
              ac57 00a6  ld   $a6
              ac58 0060  ld   $60
              ac59 00a5  ld   $a5
              ac5a 005d  ld   $5d
              ac5b 00a6  ld   $a6
              ac5c 005e  ld   $5e
              ac5d 00a0  ld   $a0
              ac5e 0001  ld   $01
              ac5f 0085  ld   $85
              ac60 0092  ld   $92
              ac61 0086  ld   $86
              ac62 0093  ld   $93
              ac63 00b1  ld   $b1
              ac64 0092  ld   $92
              ac65 00f0  ld   $f0
              ac66 001f  ld   $1f
              ac67 00c8  ld   $c8
              ac68 00c8  ld   $c8
              ac69 00a5  ld   $a5
              ac6a 0047  ld   $47
              ac6b 00d1  ld   $d1
              ac6c 0092  ld   $92
              ac6d 0090  ld   $90
              ac6e 0018  ld   $18
              ac6f 00f0  ld   $f0
              ac70 0003  ld   $03
              ac71 0088  ld   $88
              ac72 00d0  ld   $d0
              ac73 0009  ld   $09
              ac74 00a5  ld   $a5
              ac75 0046  ld   $46
              ac76 0088  ld   $88
              ac77 00d1  ld   $d1
              ac78 0092  ld   $92
              ac79 0090  ld   $90
              ac7a 000c  ld   $0c
              ac7b 00f0  ld   $f0
              ac7c 000a  ld   $0a
              ac7d 0088  ld   $88
              ac7e 00b1  ld   $b1
              ac7f 0092  ld   $92
              ac80 00aa  ld   $aa
              ac81 0088  ld   $88
              ac82 00b1  ld   $b1
              ac83 0092  ld   $92
              ac84 00b0  ld   $b0
              ac85 00d7  ld   $d7
              ac86 0018  ld   $18
              ac87 0060  ld   $60
              ac88 00d0  ld   $d0
              ac89 00fd  ld   $fd
              ac8a 00a9  ld   $a9
              ac8b 0000  ld   $00
              ac8c 00a8  ld   $a8
              ac8d 0091  ld   $91
              ac8e 005d  ld   $5d
              ac8f 00c8  ld   $c8
              ac90 0091  ld   $91
              ac91 005d  ld   $5d
              ac92 00a5  ld   $a5
              ac93 005d  ld   $5d
              ac94 0018  ld   $18
              ac95 0069  ld   $69
              ac96 0002  ld   $02
              ac97 0085  ld   $85
              ac98 005f  ld   $5f
              ac99 00a5  ld   $a5
              ac9a 005e  ld   $5e
              ac9b 0069  ld   $69
              ac9c 0000  ld   $00
              ac9d 0085  ld   $85
              ac9e 0060  ld   $60
              ac9f 0020  ld   $20
              aca0 008e  ld   $8e
              aca1 0007  ld   $07
              aca2 00a9  ld   $a9
              aca3 0000  ld   $00
              aca4 00d0  ld   $d0
              aca5 002d  ld   $2d
              aca6 00a5  ld   $a5
              aca7 0069  ld   $69
              aca8 00a4  ld   $a4
              aca9 006a  ld   $6a
              acaa 0085  ld   $85
              acab 0065  ld   $65
              acac 0084  ld   $84
              acad 0066  ld   $66
              acae 0020  ld   $20
              acaf 0000  ld   $00
              acb0 002e  ld   $2e
              acb1 00a5  ld   $a5
              acb2 005f  ld   $5f
              acb3 00a4  ld   $a4
              acb4 0060  ld   $60
              acb5 0085  ld   $85
              acb6 0061  ld   $61
              acb7 0084  ld   $84
              acb8 0062  ld   $62
              acb9 0085  ld   $85
              acba 0063  ld   $63
              acbb 0084  ld   $84
              acbc 0064  ld   $64
              acbd 0020  ld   $20
              acbe 0017  ld   $17
              acbf 0009  ld   $09
              acc0 00a2  ld   $a2
              acc1 004b  ld   $4b
              acc2 0086  ld   $86
              acc3 0048  ld   $48
              acc4 0068  ld   $68
              acc5 00a8  ld   $a8
              acc6 0068  ld   $68
              acc7 00a2  ld   $a2
              acc8 00ff  ld   $ff
              acc9 009a  ld   $9a
              acca 0048  ld   $48
              accb 0098  ld   $98
              accc 0048  ld   $48
              accd 00a9  ld   $a9
              acce 0000  ld   $00
              accf 0085  ld   $85
              acd0 0070  ld   $70
              acd1 0085  ld   $85
              acd2 0042  ld   $42
              acd3 0060  ld   $60
              acd4 0018  ld   $18
              acd5 00a5  ld   $a5
              acd6 005d  ld   $5d
              acd7 0069  ld   $69
              acd8 00ff  ld   $ff
              acd9 0085  ld   $85
              acda 00a6  ld   $a6
              acdb 00a5  ld   $a5
              acdc 005e  ld   $5e
              acdd 0069  ld   $69
              acde 00ff  ld   $ff
              acdf 0085  ld   $85
              ace0 00a7  ld   $a7
              ace1 0060  ld   $60
              ace2 0090  ld   $90
              ace3 0006  ld   $06
              ace4 00f0  ld   $f0
              ace5 0004  ld   $04
              ace6 00c9  ld   $c9
              ace7 00a5  ld   $a5
              ace8 00d0  ld   $d0
              ace9 00e9  ld   $e9
              acea 0020  ld   $20
              aceb 005a  ld   $5a
              acec 000a  ld   $0a
              aced 0020  ld   $20
              acee 0013  ld   $13
              acef 0007  ld   $07
              acf0 0020  ld   $20
              acf1 0071  ld   $71
              acf2 0022  ld   $22
              acf3 00f0  ld   $f0
              acf4 000c  ld   $0c
              acf5 00c9  ld   $c9
              acf6 00a5  ld   $a5
              acf7 00d0  ld   $d0
              acf8 008e  ld   $8e
              acf9 0020  ld   $20
              acfa 006b  ld   $6b
              acfb fe00  bra  ac          ;+-----------------------------------+
              acfc fcfd  bra  $acfd       ;|                                   |
              acfd 1418  ld   $18,y       ;| Trampoline for page $ac00 lookups |
              acfe e006  jmp  y,$06       ;|                                   |
              acff c218  st   [$18]       ;+-----------------------------------+
              ad00 0022  ld   $22
              ad01 0020  ld   $20
              ad02 005a  ld   $5a
              ad03 000a  ld   $0a
              ad04 00d0  ld   $d0
              ad05 0086  ld   $86
              ad06 0068  ld   $68
              ad07 0068  ld   $68
              ad08 00a5  ld   $a5
              ad09 0046  ld   $46
              ad0a 0005  ld   $05
              ad0b 0047  ld   $47
              ad0c 00d0  ld   $d0
              ad0d 0006  ld   $06
              ad0e 00a9  ld   $a9
              ad0f 00ff  ld   $ff
              ad10 0085  ld   $85
              ad11 0046  ld   $46
              ad12 0085  ld   $85
              ad13 0047  ld   $47
              ad14 00a0  ld   $a0
              ad15 0001  ld   $01
              ad16 0084  ld   $84
              ad17 0041  ld   $41
              ad18 00b1  ld   $b1
              ad19 0092  ld   $92
              ad1a 00f0  ld   $f0
              ad1b 0043  ld   $43
              ad1c 0020  ld   $20
              ad1d 0000  ld   $00
              ad1e 002d  ld   $2d
              ad1f 0020  ld   $20
              ad20 00ac  ld   $ac
              ad21 000b  ld   $0b
              ad22 00c8  ld   $c8
              ad23 00b1  ld   $b1
              ad24 0092  ld   $92
              ad25 00aa  ld   $aa
              ad26 00c8  ld   $c8
              ad27 00b1  ld   $b1
              ad28 0092  ld   $92
              ad29 00c5  ld   $c5
              ad2a 0047  ld   $47
              ad2b 00d0  ld   $d0
              ad2c 0004  ld   $04
              ad2d 00e4  ld   $e4
              ad2e 0046  ld   $46
              ad2f 00f0  ld   $f0
              ad30 0002  ld   $02
              ad31 00b0  ld   $b0
              ad32 002c  ld   $2c
              ad33 0084  ld   $84
              ad34 007b  ld   $7b
              ad35 0020  ld   $20
              ad36 0045  ld   $45
              ad37 001e  ld   $1e
              ad38 00a9  ld   $a9
              ad39 0020  ld   $20
              ad3a 00a4  ld   $a4
              ad3b 007b  ld   $7b
              ad3c 0029  ld   $29
              ad3d 007f  ld   $7f
              ad3e 0020  ld   $20
              ad3f 0011  ld   $11
              ad40 000c  ld   $0c
              ad41 00c9  ld   $c9
              ad42 0022  ld   $22
              ad43 00d0  ld   $d0
              ad44 0006  ld   $06
              ad45 00a5  ld   $a5
              ad46 0041  ld   $41
              ad47 0049  ld   $49
              ad48 00ff  ld   $ff
              ad49 0085  ld   $85
              ad4a 0041  ld   $41
              ad4b 0008  ld   $08
              ad4c 0000  ld   $00
              ad4d 0000  ld   $00
              ad4e 00c8  ld   $c8
              ad4f 00f0  ld   $f0
              ad50 0011  ld   $11
              ad51 00b1  ld   $b1
              ad52 0092  ld   $92
              ad53 00d0  ld   $d0
              ad54 0010  ld   $10
              ad55 00a8  ld   $a8
              ad56 00b1  ld   $b1
              ad57 0092  ld   $92
              ad58 00aa  ld   $aa
              ad59 00c8  ld   $c8
              ad5a 00b1  ld   $b1
              ad5b 0092  ld   $92
              ad5c 0086  ld   $86
              ad5d 0092  ld   $92
              ad5e 0085  ld   $85
              ad5f 0093  ld   $93
              ad60 00d0  ld   $d0
              ad61 00b5  ld   $b5
              ad62 004c  ld   $4c
              ad63 0071  ld   $71
              ad64 0005  ld   $05
              ad65 0010  ld   $10
              ad66 00da  ld   $da
              ad67 00c9  ld   $c9
              ad68 00ff  ld   $ff
              ad69 00f0  ld   $f0
              ad6a 00d6  ld   $d6
              ad6b 0024  ld   $24
              ad6c 0041  ld   $41
              ad6d 0030  ld   $30
              ad6e 00d2  ld   $d2
              ad6f 0038  ld   $38
              ad70 00e9  ld   $e9
              ad71 007f  ld   $7f
              ad72 00aa  ld   $aa
              ad73 0084  ld   $84
              ad74 007b  ld   $7b
              ad75 00a0  ld   $a0
              ad76 00ff  ld   $ff
              ad77 00ca  ld   $ca
              ad78 00f0  ld   $f0
              ad79 0008  ld   $08
              ad7a 00c8  ld   $c8
              ad7b 00b9  ld   $b9
              ad7c 009e  ld   $9e
              ad7d 0002  ld   $02
              ad7e 0010  ld   $10
              ad7f 00fa  ld   $fa
              ad80 0030  ld   $30
              ad81 00f5  ld   $f5
              ad82 00c8  ld   $c8
              ad83 00b9  ld   $b9
              ad84 009e  ld   $9e
              ad85 0002  ld   $02
              ad86 0030  ld   $30
              ad87 00b5  ld   $b5
              ad88 0020  ld   $20
              ad89 0011  ld   $11
              ad8a 000c  ld   $0c
              ad8b 00d0  ld   $d0
              ad8c 00f5  ld   $f5
              ad8d 00a9  ld   $a9
              ad8e 0080  ld   $80
              ad8f 0085  ld   $85
              ad90 0042  ld   $42
              ad91 0020  ld   $20
              ad92 0094  ld   $94
              ad93 000a  ld   $0a
              ad94 0020  ld   $20
              ad95 00a2  ld   $a2
              ad96 0004  ld   $04
              ad97 00d0  ld   $d0
              ad98 0005  ld   $05
              ad99 008a  ld   $8a
              ad9a 0069  ld   $69
              ad9b 000f  ld   $0f
              ad9c 00aa  ld   $aa
              ad9d 009a  ld   $9a
              ad9e 0068  ld   $68
              ad9f 0068  ld   $68
              ada0 00a9  ld   $a9
              ada1 0009  ld   $09
              ada2 0020  ld   $20
              ada3 000e  ld   $0e
              ada4 0005  ld   $05
              ada5 0020  ld   $20
              ada6 00f5  ld   $f5
              ada7 0009  ld   $09
              ada8 0018  ld   $18
              ada9 0098  ld   $98
              adaa 0065  ld   $65
              adab 00a6  ld   $a6
              adac 0048  ld   $48
              adad 00a5  ld   $a5
              adae 00a7  ld   $a7
              adaf 0069  ld   $69
              adb0 0000  ld   $00
              adb1 0048  ld   $48
              adb2 00a5  ld   $a5
              adb3 006c  ld   $6c
              adb4 0048  ld   $48
              adb5 00a5  ld   $a5
              adb6 006b  ld   $6b
              adb7 0048  ld   $48
              adb8 00a9  ld   $a9
              adb9 009e  ld   $9e
              adba 0020  ld   $20
              adbb 0065  ld   $65
              adbc 000f  ld   $0f
              adbd 0020  ld   $20
              adbe 00f9  ld   $f9
              adbf 000d  ld   $0d
              adc0 0020  ld   $20
              adc1 00f6  ld   $f6
              adc2 000d  ld   $0d
              adc3 00a5  ld   $a5
              adc4 0099  ld   $99
              adc5 0009  ld   $09
              adc6 007f  ld   $7f
              adc7 0025  ld   $25
              adc8 0095  ld   $95
              adc9 0085  ld   $85
              adca 0095  ld   $95
              adcb 00a9  ld   $a9
              adcc 0088  ld   $88
              adcd 00a0  ld   $a0
              adce 0008  ld   $08
              adcf 0085  ld   $85
              add0 0054  ld   $54
              add1 0084  ld   $84
              add2 0055  ld   $55
              add3 004c  ld   $4c
              add4 00af  ld   $af
              add5 000e  ld   $0e
              add6 00a9  ld   $a9
              add7 0034  ld   $34
              add8 00a0  ld   $a0
              add9 001a  ld   $1a
              adda 0020  ld   $20
              addb 001a  ld   $1a
              addc 001c  ld   $1c
              addd 0020  ld   $20
              adde 0071  ld   $71
              addf 0022  ld   $22
              ade0 00c9  ld   $c9
              ade1 00a3  ld   $a3
              ade2 00d0  ld   $d0
              ade3 0006  ld   $06
              ade4 0020  ld   $20
              ade5 006b  ld   $6b
              ade6 0022  ld   $22
              ade7 0020  ld   $20
              ade8 00f6  ld   $f6
              ade9 000d  ld   $0d
              adea 0020  ld   $20
              adeb 00a3  ld   $a3
              adec 001c  ld   $1c
              aded 0020  ld   $20
              adee 00a4  ld   $a4
              adef 000e  ld   $0e
              adf0 00a5  ld   $a5
              adf1 007c  ld   $7c
              adf2 0048  ld   $48
              adf3 00a5  ld   $a5
              adf4 007b  ld   $7b
              adf5 0048  ld   $48
              adf6 00a9  ld   $a9
              adf7 0081  ld   $81
              adf8 0048  ld   $48
              adf9 0020  ld   $20
              adfa 0000  ld   $00
              adfb fe00  bra  ac          ;+-----------------------------------+
              adfc fcfd  bra  $adfd       ;|                                   |
              adfd 1418  ld   $18,y       ;| Trampoline for page $ad00 lookups |
              adfe e006  jmp  y,$06       ;|                                   |
              adff c218  st   [$18]       ;+-----------------------------------+
              ae00 002d  ld   $2d
              ae01 00a5  ld   $a5
              ae02 00a6  ld   $a6
              ae03 00a4  ld   $a4
              ae04 00a7  ld   $a7
              ae05 00c0  ld   $c0
              ae06 0024  ld   $24
              ae07 00ea  ld   $ea
              ae08 00f0  ld   $f0
              ae09 0004  ld   $04
              ae0a 0085  ld   $85
              ae0b 006f  ld   $6f
              ae0c 0084  ld   $84
              ae0d 0070  ld   $70
              ae0e 00a0  ld   $a0
              ae0f 0000  ld   $00
              ae10 00b1  ld   $b1
              ae11 00a6  ld   $a6
              ae12 00d0  ld   $d0
              ae13 0040  ld   $40
              ae14 00a0  ld   $a0
              ae15 0002  ld   $02
              ae16 00b1  ld   $b1
              ae17 00a6  ld   $a6
              ae18 0018  ld   $18
              ae19 00d0  ld   $d0
              ae1a 0003  ld   $03
              ae1b 004c  ld   $4c
              ae1c 0042  ld   $42
              ae1d 0009  ld   $09
              ae1e 00c8  ld   $c8
              ae1f 00b1  ld   $b1
              ae20 00a6  ld   $a6
              ae21 0085  ld   $85
              ae22 006b  ld   $6b
              ae23 00c8  ld   $c8
              ae24 00b1  ld   $b1
              ae25 00a6  ld   $a6
              ae26 0085  ld   $85
              ae27 006c  ld   $6c
              ae28 0098  ld   $98
              ae29 0065  ld   $65
              ae2a 00a6  ld   $a6
              ae2b 0085  ld   $85
              ae2c 00a6  ld   $a6
              ae2d 0090  ld   $90
              ae2e 0002  ld   $02
              ae2f 00e6  ld   $e6
              ae30 00a7  ld   $a7
              ae31 0020  ld   $20
              ae32 006b  ld   $6b
              ae33 0022  ld   $22
              ae34 0020  ld   $20
              ae35 00e7  ld   $e7
              ae36 0008  ld   $08
              ae37 004c  ld   $4c
              ae38 00ab  ld   $ab
              ae39 0008  ld   $08
              ae3a 00f0  ld   $f0
              ae3b 003c  ld   $3c
              ae3c 00e9  ld   $e9
              ae3d 0080  ld   $80
              ae3e 0090  ld   $90
              ae3f 0011  ld   $11
              ae40 00c9  ld   $c9
              ae41 001d  ld   $1d
              ae42 00b0  ld   $b0
              ae43 0017  ld   $17
              ae44 000a  ld   $0a
              ae45 00a8  ld   $a8
              ae46 00b9  ld   $b9
              ae47 0019  ld   $19
              ae48 0002  ld   $02
              ae49 0048  ld   $48
              ae4a 00b9  ld   $b9
              ae4b 0018  ld   $18
              ae4c 0002  ld   $02
              ae4d 0048  ld   $48
              ae4e 004c  ld   $4c
              ae4f 006b  ld   $6b
              ae50 0022  ld   $22
              ae51 004c  ld   $4c
              ae52 0094  ld   $94
              ae53 0009  ld   $09
              ae54 0000  ld   $00
              ae55 0000  ld   $00
              ae56 000a  ld   $0a
              ae57 00c9  ld   $c9
              ae58 003a  ld   $3a
              ae59 00f0  ld   $f0
              ae5a 00d9  ld   $d9
              ae5b 004c  ld   $4c
              ae5c 006e  ld   $6e
              ae5d 000f  ld   $0f
              ae5e 00c9  ld   $c9
              ae5f 0045  ld   $45
              ae60 00d0  ld   $d0
              ae61 00f9  ld   $f9
              ae62 0020  ld   $20
              ae63 006b  ld   $6b
              ae64 0022  ld   $22
              ae65 00a9  ld   $a9
              ae66 009e  ld   $9e
              ae67 0020  ld   $20
              ae68 0065  ld   $65
              ae69 000f  ld   $0f
              ae6a 004c  ld   $4c
              ae6b 0094  ld   $94
              ae6c 0009  ld   $09
              ae6d 0038  ld   $38
              ae6e 00a5  ld   $a5
              ae6f 005d  ld   $5d
              ae70 00e9  ld   $e9
              ae71 0001  ld   $01
              ae72 00a4  ld   $a4
              ae73 005e  ld   $5e
              ae74 00b0  ld   $b0
              ae75 0001  ld   $01
              ae76 0088  ld   $88
              ae77 0085  ld   $85
              ae78 0073  ld   $73
              ae79 0084  ld   $84
              ae7a 0074  ld   $74
              ae7b 0060  ld   $60
              ae7c 00b0  ld   $b0
              ae7d 0001  ld   $01
              ae7e 0018  ld   $18
              ae7f 00d0  ld   $d0
              ae80 0040  ld   $40
              ae81 00a5  ld   $a5
              ae82 00a6  ld   $a6
              ae83 00a4  ld   $a4
              ae84 00a7  ld   $a7
              ae85 00a6  ld   $a6
              ae86 006c  ld   $6c
              ae87 00e8  ld   $e8
              ae88 00f0  ld   $f0
              ae89 000c  ld   $0c
              ae8a 0085  ld   $85
              ae8b 006f  ld   $6f
              ae8c 0084  ld   $84
              ae8d 0070  ld   $70
              ae8e 00a5  ld   $a5
              ae8f 006b  ld   $6b
              ae90 00a4  ld   $a4
              ae91 006c  ld   $6c
              ae92 0085  ld   $85
              ae93 006d  ld   $6d
              ae94 0084  ld   $84
              ae95 006e  ld   $6e
              ae96 0068  ld   $68
              ae97 0068  ld   $68
              ae98 00a9  ld   $a9
              ae99 009a  ld   $9a
              ae9a 00a0  ld   $a0
              ae9b 0004  ld   $04
              ae9c 00a2  ld   $a2
              ae9d 0000  ld   $00
              ae9e 0086  ld   $86
              ae9f 0045  ld   $45
              aea0 0090  ld   $90
              aea1 0003  ld   $03
              aea2 004c  ld   $4c
              aea3 0066  ld   $66
              aea4 0005  ld   $05
              aea5 004c  ld   $4c
              aea6 0071  ld   $71
              aea7 0005  ld   $05
              aea8 00d0  ld   $d0
              aea9 0017  ld   $17
              aeaa 00a2  ld   $a2
              aeab 00d2  ld   $d2
              aeac 00a4  ld   $a4
              aead 0070  ld   $70
              aeae 00d0  ld   $d0
              aeaf 0003  ld   $03
              aeb0 004c  ld   $4c
              aeb1 004a  ld   $4a
              aeb2 0005  ld   $05
              aeb3 00a5  ld   $a5
              aeb4 006f  ld   $6f
              aeb5 0085  ld   $85
              aeb6 00a6  ld   $a6
              aeb7 0084  ld   $84
              aeb8 00a7  ld   $a7
              aeb9 00a5  ld   $a5
              aeba 006d  ld   $6d
              aebb 00a4  ld   $a4
              aebc 006e  ld   $6e
              aebd 0085  ld   $85
              aebe 006b  ld   $6b
              aebf 0084  ld   $84
              aec0 006c  ld   $6c
              aec1 0060  ld   $60
              aec2 00d0  ld   $d0
              aec3 0003  ld   $03
              aec4 004c  ld   $4c
              aec5 0059  ld   $59
              aec6 0007  ld   $07
              aec7 0020  ld   $20
              aec8 0060  ld   $60
              aec9 0007  ld   $07
              aeca 004c  ld   $4c
              aecb 008b  ld   $8b
              aecc 0009  ld   $09
              aecd 00a9  ld   $a9
              aece 0003  ld   $03
              aecf 0020  ld   $20
              aed0 000e  ld   $0e
              aed1 0005  ld   $05
              aed2 00a5  ld   $a5
              aed3 00a7  ld   $a7
              aed4 0048  ld   $48
              aed5 00a5  ld   $a5
              aed6 00a6  ld   $a6
              aed7 0048  ld   $48
              aed8 00a5  ld   $a5
              aed9 006c  ld   $6c
              aeda 0048  ld   $48
              aedb 00a5  ld   $a5
              aedc 006b  ld   $6b
              aedd 0048  ld   $48
              aede 00a9  ld   $a9
              aedf 008c  ld   $8c
              aee0 0048  ld   $48
              aee1 0020  ld   $20
              aee2 0071  ld   $71
              aee3 0022  ld   $22
              aee4 0020  ld   $20
              aee5 0094  ld   $94
              aee6 0009  ld   $09
              aee7 004c  ld   $4c
              aee8 00ab  ld   $ab
              aee9 0008  ld   $08
              aeea 0020  ld   $20
              aeeb 005a  ld   $5a
              aeec 000a  ld   $0a
              aeed 0020  ld   $20
              aeee 00f8  ld   $f8
              aeef 0009  ld   $09
              aef0 00a5  ld   $a5
              aef1 006c  ld   $6c
              aef2 00c5  ld   $c5
              aef3 0047  ld   $47
              aef4 00b0  ld   $b0
              aef5 000b  ld   $0b
              aef6 0098  ld   $98
              aef7 0038  ld   $38
              aef8 0065  ld   $65
              aef9 00a6  ld   $a6
              aefa 00a6  ld   $a6
              aefb fe00  bra  ac          ;+-----------------------------------+
              aefc fcfd  bra  $aefd       ;|                                   |
              aefd 1418  ld   $18,y       ;| Trampoline for page $ae00 lookups |
              aefe e006  jmp  y,$06       ;|                                   |
              aeff c218  st   [$18]       ;+-----------------------------------+
              af00 00a7  ld   $a7
              af01 0090  ld   $90
              af02 0007  ld   $07
              af03 00e8  ld   $e8
              af04 00b0  ld   $b0
              af05 0004  ld   $04
              af06 00a5  ld   $a5
              af07 005d  ld   $5d
              af08 00a6  ld   $a6
              af09 005e  ld   $5e
              af0a 0020  ld   $20
              af0b 0017  ld   $17
              af0c 0007  ld   $07
              af0d 0090  ld   $90
              af0e 001e  ld   $1e
              af0f 00a5  ld   $a5
              af10 0092  ld   $92
              af11 00e9  ld   $e9
              af12 0001  ld   $01
              af13 0085  ld   $85
              af14 00a6  ld   $a6
              af15 00a5  ld   $a5
              af16 0093  ld   $93
              af17 00e9  ld   $e9
              af18 0000  ld   $00
              af19 0085  ld   $85
              af1a 00a7  ld   $a7
              af1b 0060  ld   $60
              af1c 00d0  ld   $d0
              af1d 00fd  ld   $fd
              af1e 00a9  ld   $a9
              af1f 00ff  ld   $ff
              af20 0085  ld   $85
              af21 007c  ld   $7c
              af22 0020  ld   $20
              af23 00a2  ld   $a2
              af24 0004  ld   $04
              af25 009a  ld   $9a
              af26 00c9  ld   $c9
              af27 008c  ld   $8c
              af28 00f0  ld   $f0
              af29 000b  ld   $0b
              af2a 00a2  ld   $a2
              af2b 0016  ld   $16
              af2c 002c  ld   $2c
              af2d 00a2  ld   $a2
              af2e 005a  ld   $5a
              af2f 004c  ld   $4c
              af30 004a  ld   $4a
              af31 0005  ld   $05
              af32 004c  ld   $4c
              af33 006e  ld   $6e
              af34 000f  ld   $0f
              af35 0068  ld   $68
              af36 0068  ld   $68
              af37 0085  ld   $85
              af38 006b  ld   $6b
              af39 0068  ld   $68
              af3a 0085  ld   $85
              af3b 006c  ld   $6c
              af3c 0068  ld   $68
              af3d 0085  ld   $85
              af3e 00a6  ld   $a6
              af3f 0068  ld   $68
              af40 0085  ld   $85
              af41 00a7  ld   $a7
              af42 0020  ld   $20
              af43 00f5  ld   $f5
              af44 0009  ld   $09
              af45 0098  ld   $98
              af46 0018  ld   $18
              af47 0065  ld   $65
              af48 00a6  ld   $a6
              af49 0085  ld   $85
              af4a 00a6  ld   $a6
              af4b 0090  ld   $90
              af4c 0002  ld   $02
              af4d 00e6  ld   $e6
              af4e 00a7  ld   $a7
              af4f 0060  ld   $60
              af50 00a2  ld   $a2
              af51 003a  ld   $3a
              af52 002c  ld   $2c
              af53 00a2  ld   $a2
              af54 0000  ld   $00
              af55 0086  ld   $86
              af56 003b  ld   $3b
              af57 00a0  ld   $a0
              af58 0000  ld   $00
              af59 0084  ld   $84
              af5a 003c  ld   $3c
              af5b 000a  ld   $0a
              af5c 0000  ld   $00
              af5d 0000  ld   $00
              af5e 00a5  ld   $a5
              af5f 003c  ld   $3c
              af60 00a6  ld   $a6
              af61 003b  ld   $3b
              af62 0085  ld   $85
              af63 003b  ld   $3b
              af64 0086  ld   $86
              af65 003c  ld   $3c
              af66 00b1  ld   $b1
              af67 00a6  ld   $a6
              af68 00f0  ld   $f0
              af69 00e8  ld   $e8
              af6a 00c5  ld   $c5
              af6b 003c  ld   $3c
              af6c 00f0  ld   $f0
              af6d 00e4  ld   $e4
              af6e 00c8  ld   $c8
              af6f 00c9  ld   $c9
              af70 0022  ld   $22
              af71 00d0  ld   $d0
              af72 00f3  ld   $f3
              af73 00f0  ld   $f0
              af74 00e9  ld   $e9
              af75 0020  ld   $20
              af76 000a  ld   $0a
              af77 000e  ld   $0e
              af78 0020  ld   $20
              af79 0071  ld   $71
              af7a 0022  ld   $22
              af7b 00c9  ld   $c9
              af7c 0088  ld   $88
              af7d 00f0  ld   $f0
              af7e 0005  ld   $05
              af7f 00a9  ld   $a9
              af80 00a1  ld   $a1
              af81 0020  ld   $20
              af82 0065  ld   $65
              af83 000f  ld   $0f
              af84 00a5  ld   $a5
              af85 0094  ld   $94
              af86 00d0  ld   $d0
              af87 0005  ld   $05
              af88 0020  ld   $20
              af89 00f8  ld   $f8
              af8a 0009  ld   $09
              af8b 00f0  ld   $f0
              af8c 00bb  ld   $bb
              af8d 0020  ld   $20
              af8e 0071  ld   $71
              af8f 0022  ld   $22
              af90 00b0  ld   $b0
              af91 0003  ld   $03
              af92 004c  ld   $4c
              af93 0094  ld   $94
              af94 0009  ld   $09
              af95 004c  ld   $4c
              af96 00e7  ld   $e7
              af97 0008  ld   $08
              af98 0020  ld   $20
              af99 00da  ld   $da
              af9a 0017  ld   $17
              af9b 0048  ld   $48
              af9c 00c9  ld   $c9
              af9d 008c  ld   $8c
              af9e 00f0  ld   $f0
              af9f 0004  ld   $04
              afa0 00c9  ld   $c9
              afa1 0088  ld   $88
              afa2 00d0  ld   $d0
              afa3 0091  ld   $91
              afa4 00c6  ld   $c6
              afa5 0098  ld   $98
              afa6 00d0  ld   $d0
              afa7 0004  ld   $04
              afa8 0068  ld   $68
              afa9 004c  ld   $4c
              afaa 00e9  ld   $e9
              afab 0008  ld   $08
              afac 0020  ld   $20
              afad 006b  ld   $6b
              afae 0022  ld   $22
              afaf 0020  ld   $20
              afb0 005a  ld   $5a
              afb1 000a  ld   $0a
              afb2 00c9  ld   $c9
              afb3 002c  ld   $2c
              afb4 00f0  ld   $f0
              afb5 00ee  ld   $ee
              afb6 0068  ld   $68
              afb7 0060  ld   $60
              afb8 00a2  ld   $a2
              afb9 0000  ld   $00
              afba 0086  ld   $86
              afbb 0046  ld   $46
              afbc 0086  ld   $86
              afbd 0047  ld   $47
              afbe 00b0  ld   $b0
              afbf 00f7  ld   $f7
              afc0 00e9  ld   $e9
              afc1 002f  ld   $2f
              afc2 0085  ld   $85
              afc3 003b  ld   $3b
              afc4 00a5  ld   $a5
              afc5 0047  ld   $47
              afc6 0085  ld   $85
              afc7 0054  ld   $54
              afc8 00c9  ld   $c9
              afc9 0019  ld   $19
              afca 00b0  ld   $b0
              afcb 00d4  ld   $d4
              afcc 00a5  ld   $a5
              afcd 0046  ld   $46
              afce 000a  ld   $0a
              afcf 0026  ld   $26
              afd0 0054  ld   $54
              afd1 000a  ld   $0a
              afd2 0026  ld   $26
              afd3 0054  ld   $54
              afd4 0065  ld   $65
              afd5 0046  ld   $46
              afd6 0085  ld   $85
              afd7 0046  ld   $46
              afd8 00a5  ld   $a5
              afd9 0054  ld   $54
              afda 0065  ld   $65
              afdb 0047  ld   $47
              afdc 0085  ld   $85
              afdd 0047  ld   $47
              afde 0006  ld   $06
              afdf 0046  ld   $46
              afe0 0026  ld   $26
              afe1 0047  ld   $47
              afe2 00a5  ld   $a5
              afe3 0046  ld   $46
              afe4 0065  ld   $65
              afe5 003b  ld   $3b
              afe6 0085  ld   $85
              afe7 0046  ld   $46
              afe8 0090  ld   $90
              afe9 0002  ld   $02
              afea 00e6  ld   $e6
              afeb 0047  ld   $47
              afec 0020  ld   $20
              afed 006b  ld   $6b
              afee 0022  ld   $22
              afef 004c  ld   $4c
              aff0 0060  ld   $60
              aff1 000a  ld   $0a
              aff2 0020  ld   $20
              aff3 00d0  ld   $d0
              aff4 0010  ld   $10
              aff5 0085  ld   $85
              aff6 007b  ld   $7b
              aff7 0084  ld   $84
              aff8 007c  ld   $7c
              aff9 00a9  ld   $a9
              affa 00ac  ld   $ac
              affb fe00  bra  ac          ;+-----------------------------------+
              affc fcfd  bra  $affd       ;|                                   |
              affd 1418  ld   $18,y       ;| Trampoline for page $af00 lookups |
              affe e006  jmp  y,$06       ;|                                   |
              afff c218  st   [$18]       ;+-----------------------------------+
              b000 0020  ld   $20
              b001 0065  ld   $65
              b002 000f  ld   $0f
              b003 00a5  ld   $a5
              b004 0040  ld   $40
              b005 0048  ld   $48
              b006 00a5  ld   $a5
              b007 003f  ld   $3f
              b008 0048  ld   $48
              b009 0020  ld   $20
              b00a 000a  ld   $0a
              b00b 000e  ld   $0e
              b00c 0068  ld   $68
              b00d 002a  ld   $2a
              b00e 0020  ld   $20
              b00f 00fc  ld   $fc
              b010 000d  ld   $0d
              b011 00d0  ld   $d0
              b012 0018  ld   $18
              b013 0068  ld   $68
              b014 0010  ld   $10
              b015 0012  ld   $12
              b016 0020  ld   $20
              b017 0093  ld   $93
              b018 001c  ld   $1c
              b019 0020  ld   $20
              b01a 00fd  ld   $fd
              b01b 0011  ld   $11
              b01c 00a0  ld   $a0
              b01d 0000  ld   $00
              b01e 00a5  ld   $a5
              b01f 0097  ld   $97
              b020 0091  ld   $91
              b021 007b  ld   $7b
              b022 00c8  ld   $c8
              b023 00a5  ld   $a5
              b024 0098  ld   $98
              b025 0091  ld   $91
              b026 007b  ld   $7b
              b027 0060  ld   $60
              b028 004c  ld   $4c
              b029 0048  ld   $48
              b02a 001c  ld   $1c
              b02b 0068  ld   $68
              b02c 00a4  ld   $a4
              b02d 007c  ld   $7c
              b02e 00c0  ld   $c0
              b02f 001f  ld   $1f
              b030 00d0  ld   $d0
              b031 0050  ld   $50
              b032 0020  ld   $20
              b033 00e2  ld   $e2
              b034 0016  ld   $16
              b035 00c9  ld   $c9
              b036 0006  ld   $06
              b037 00d0  ld   $d0
              b038 0041  ld   $41
              b039 00a0  ld   $a0
              b03a 0000  ld   $00
              b03b 0084  ld   $84
              b03c 0094  ld   $94
              b03d 0084  ld   $84
              b03e 0099  ld   $99
              b03f 0084  ld   $84
              b040 00a4  ld   $a4
              b041 0020  ld   $20
              b042 0010  ld   $10
              b043 000b  ld   $0b
              b044 0020  ld   $20
              b045 005a  ld   $5a
              b046 001b  ld   $1b
              b047 00e6  ld   $e6
              b048 00a4  ld   $a4
              b049 00a4  ld   $a4
              b04a 00a4  ld   $a4
              b04b 0020  ld   $20
              b04c 0010  ld   $10
              b04d 000b  ld   $0b
              b04e 0020  ld   $20
              b04f 0084  ld   $84
              b050 001c  ld   $1c
              b051 00aa  ld   $aa
              b052 00f0  ld   $f0
              b053 0005  ld   $05
              b054 00e8  ld   $e8
              b055 008a  ld   $8a
              b056 0020  ld   $20
              b057 0065  ld   $65
              b058 001b  ld   $1b
              b059 00a4  ld   $a4
              b05a 00a4  ld   $a4
              b05b 00c8  ld   $c8
              b05c 00c0  ld   $c0
              b05d 0006  ld   $06
              b05e 00d0  ld   $d0
              b05f 00df  ld   $df
              b060 0020  ld   $20
              b061 005a  ld   $5a
              b062 001b  ld   $1b
              b063 000b  ld   $0b
              b064 0000  ld   $00
              b065 0000  ld   $00
              b066 0020  ld   $20
              b067 0013  ld   $13
              b068 001d  ld   $1d
              b069 00a2  ld   $a2
              b06a 0002  ld   $02
              b06b 0078  ld   $78
              b06c 00b5  ld   $b5
              b06d 0096  ld   $96
              b06e 009d  ld   $9d
              b06f 0000  ld   $00
              b070 0002  ld   $02
              b071 00ca  ld   $ca
              b072 0010  ld   $10
              b073 00f8  ld   $f8
              b074 0058  ld   $58
              b075 0060  ld   $60
              b076 00b1  ld   $b1
              b077 0054  ld   $54
              b078 0020  ld   $20
              b079 007d  ld   $7d
              b07a 0022  ld   $22
              b07b 0090  ld   $90
              b07c 0003  ld   $03
              b07d 004c  ld   $4c
              b07e 0082  ld   $82
              b07f 0012  ld   $12
              b080 00e9  ld   $e9
              b081 002f  ld   $2f
              b082 004c  ld   $4c
              b083 00f6  ld   $f6
              b084 001d  ld   $1d
              b085 00a0  ld   $a0
              b086 0002  ld   $02
              b087 00b1  ld   $b1
              b088 0097  ld   $97
              b089 00c5  ld   $c5
              b08a 0066  ld   $66
              b08b 0090  ld   $90
              b08c 0017  ld   $17
              b08d 00d0  ld   $d0
              b08e 0007  ld   $07
              b08f 0088  ld   $88
              b090 00b1  ld   $b1
              b091 0097  ld   $97
              b092 00c5  ld   $c5
              b093 0065  ld   $65
              b094 0090  ld   $90
              b095 000e  ld   $0e
              b096 00a4  ld   $a4
              b097 0098  ld   $98
              b098 00c4  ld   $c4
              b099 0060  ld   $60
              b09a 0090  ld   $90
              b09b 0008  ld   $08
              b09c 00d0  ld   $d0
              b09d 000d  ld   $0d
              b09e 00a5  ld   $a5
              b09f 0097  ld   $97
              b0a0 00c5  ld   $c5
              b0a1 005f  ld   $5f
              b0a2 00b0  ld   $b0
              b0a3 0007  ld   $07
              b0a4 00a5  ld   $a5
              b0a5 0097  ld   $97
              b0a6 00a4  ld   $a4
              b0a7 0098  ld   $98
              b0a8 004c  ld   $4c
              b0a9 005b  ld   $5b
              b0aa 000b  ld   $0b
              b0ab 00a0  ld   $a0
              b0ac 0000  ld   $00
              b0ad 00b1  ld   $b1
              b0ae 0097  ld   $97
              b0af 0020  ld   $20
              b0b0 00b1  ld   $b1
              b0b1 0014  ld   $14
              b0b2 00a5  ld   $a5
              b0b3 0083  ld   $83
              b0b4 00a4  ld   $a4
              b0b5 0084  ld   $84
              b0b6 0085  ld   $85
              b0b7 00a2  ld   $a2
              b0b8 0084  ld   $84
              b0b9 00a3  ld   $a3
              b0ba 0020  ld   $20
              b0bb 00b6  ld   $b6
              b0bc 0016  ld   $16
              b0bd 00a9  ld   $a9
              b0be 0094  ld   $94
              b0bf 00a0  ld   $a0
              b0c0 0000  ld   $00
              b0c1 0085  ld   $85
              b0c2 0083  ld   $83
              b0c3 0084  ld   $84
              b0c4 0084  ld   $84
              b0c5 0020  ld   $20
              b0c6 0017  ld   $17
              b0c7 0017  ld   $17
              b0c8 00a0  ld   $a0
              b0c9 0000  ld   $00
              b0ca 00b1  ld   $b1
              b0cb 0083  ld   $83
              b0cc 0091  ld   $91
              b0cd 007b  ld   $7b
              b0ce 00c8  ld   $c8
              b0cf 00b1  ld   $b1
              b0d0 0083  ld   $83
              b0d1 0091  ld   $91
              b0d2 007b  ld   $7b
              b0d3 00c8  ld   $c8
              b0d4 00b1  ld   $b1
              b0d5 0083  ld   $83
              b0d6 0091  ld   $91
              b0d7 007b  ld   $7b
              b0d8 0060  ld   $60
              b0d9 0020  ld   $20
              b0da 00f2  ld   $f2
              b0db 000b  ld   $0b
              b0dc 0020  ld   $20
              b0dd 0071  ld   $71
              b0de 0022  ld   $22
              b0df 00f0  ld   $f0
              b0e0 0031  ld   $31
              b0e1 00f0  ld   $f0
              b0e2 003b  ld   $3b
              b0e3 00c9  ld   $c9
              b0e4 009d  ld   $9d
              b0e5 00f0  ld   $f0
              b0e6 0049  ld   $49
              b0e7 00c9  ld   $c9
              b0e8 00a0  ld   $a0
              b0e9 0018  ld   $18
              b0ea 00f0  ld   $f0
              b0eb 0044  ld   $44
              b0ec 00c9  ld   $c9
              b0ed 002c  ld   $2c
              b0ee 00f0  ld   $f0
              b0ef 002f  ld   $2f
              b0f0 00c9  ld   $c9
              b0f1 003b  ld   $3b
              b0f2 00f0  ld   $f0
              b0f3 0056  ld   $56
              b0f4 0020  ld   $20
              b0f5 000a  ld   $0a
              b0f6 000e  ld   $0e
              b0f7 0024  ld   $24
              b0f8 003f  ld   $3f
              b0f9 0030  ld   $30
              b0fa 00de  ld   $de
              b0fb fe00  bra  ac          ;+-----------------------------------+
              b0fc fcfd  bra  $b0fd       ;|                                   |
              b0fd 1418  ld   $18,y       ;| Trampoline for page $b000 lookups |
              b0fe e006  jmp  y,$06       ;|                                   |
              b0ff c218  st   [$18]       ;+-----------------------------------+
              b100 0020  ld   $20
              b101 0055  ld   $55
              b102 001e  ld   $1e
              b103 0020  ld   $20
              b104 00c3  ld   $c3
              b105 0014  ld   $14
              b106 0020  ld   $20
              b107 00f2  ld   $f2
              b108 000b  ld   $0b
              b109 0020  ld   $20
              b10a 000c  ld   $0c
              b10b 000c  ld   $0c
              b10c 00d0  ld   $d0
              b10d 00d3  ld   $d3
              b10e 00a9  ld   $a9
              b10f 0000  ld   $00
              b110 009d  ld   $9d
              b111 0005  ld   $05
              b112 0024  ld   $24
              b113 00a2  ld   $a2
              b114 0004  ld   $04
              b115 00a0  ld   $a0
              b116 0024  ld   $24
              b117 00a9  ld   $a9
              b118 000d  ld   $0d
              b119 0020  ld   $20
              b11a 0011  ld   $11
              b11b 000c  ld   $0c
              b11c 00a9  ld   $a9
              b11d 000a  ld   $0a
              b11e 0020  ld   $20
              b11f 0011  ld   $11
              b120 000c  ld   $0c
              b121 0049  ld   $49
              b122 00ff  ld   $ff
              b123 0060  ld   $60
              b124 00a5  ld   $a5
              b125 0030  ld   $30
              b126 0020  ld   $20
              b127 007a  ld   $7a
              b128 0004  ld   $04
              b129 0098  ld   $98
              b12a 0038  ld   $38
              b12b 00e9  ld   $e9
              b12c 000a  ld   $0a
              b12d 00b0  ld   $b0
              b12e 00fc  ld   $fc
              b12f 0049  ld   $49
              b130 00ff  ld   $ff
              b131 0069  ld   $69
              b132 0001  ld   $01
              b133 00d0  ld   $d0
              b134 0015  ld   $15
              b135 0008  ld   $08
              b136 0020  ld   $20
              b137 00d7  ld   $d7
              b138 0017  ld   $17
              b139 00c9  ld   $c9
              b13a 0029  ld   $29
              b13b 00d0  ld   $d0
              b13c 005b  ld   $5b
              b13d 0028  ld   $28
              b13e 0090  ld   $90
              b13f 000b  ld   $0b
              b140 00a5  ld   $a5
              b141 0030  ld   $30
              b142 0020  ld   $20
              b143 007a  ld   $7a
              b144 0004  ld   $04
              b145 008a  ld   $8a
              b146 00e5  ld   $e5
              b147 002b  ld   $2b
              b148 0090  ld   $90
              b149 0005  ld   $05
              b14a 00aa  ld   $aa
              b14b 00e8  ld   $e8
              b14c 00ca  ld   $ca
              b14d 00d0  ld   $d0
              b14e 0006  ld   $06
              b14f 0020  ld   $20
              b150 006b  ld   $6b
              b151 0022  ld   $22
              b152 004c  ld   $4c
              b153 007b  ld   $7b
              b154 000b  ld   $0b
              b155 0020  ld   $20
              b156 000c  ld   $0c
              b157 000c  ld   $0c
              b158 00d0  ld   $d0
              b159 00f2  ld   $f2
              b15a 0020  ld   $20
              b15b 00c3  ld   $c3
              b15c 0014  ld   $14
              b15d 0020  ld   $20
              b15e 00e2  ld   $e2
              b15f 0016  ld   $16
              b160 00aa  ld   $aa
              b161 00a0  ld   $a0
              b162 0000  ld   $00
              b163 00e8  ld   $e8
              b164 00ca  ld   $ca
              b165 00f0  ld   $f0
              b166 00bc  ld   $bc
              b167 00b1  ld   $b1
              b168 0054  ld   $54
              b169 0020  ld   $20
              b16a 0011  ld   $11
              b16b 000c  ld   $0c
              b16c 0000  ld   $00
              b16d 0000  ld   $00
              b16e 000c  ld   $0c
              b16f 00c8  ld   $c8
              b170 00c9  ld   $c9
              b171 000d  ld   $0d
              b172 00d0  ld   $d0
              b173 00f3  ld   $f3
              b174 0020  ld   $20
              b175 00b6  ld   $b6
              b176 000b  ld   $0b
              b177 004c  ld   $4c
              b178 00f9  ld   $f9
              b179 000b  ld   $0b
              b17a 00a9  ld   $a9
              b17b 0020  ld   $20
              b17c 002c  ld   $2c
              b17d 00a9  ld   $a9
              b17e 003f  ld   $3f
              b17f 0024  ld   $24
              b180 0045  ld   $45
              b181 0030  ld   $30
              b182 0003  ld   $03
              b183 0020  ld   $20
              b184 0000  ld   $00
              b185 002b  ld   $2b
              b186 0029  ld   $29
              b187 00ff  ld   $ff
              b188 0060  ld   $60
              b189 00a5  ld   $a5
              b18a 0043  ld   $43
              b18b 00f0  ld   $f0
              b18c 0011  ld   $11
              b18d 0030  ld   $30
              b18e 0004  ld   $04
              b18f 00a0  ld   $a0
              b190 00ff  ld   $ff
              b191 00d0  ld   $d0
              b192 0004  ld   $04
              b193 00a5  ld   $a5
              b194 0071  ld   $71
              b195 00a4  ld   $a4
              b196 0072  ld   $72
              b197 0085  ld   $85
              b198 006b  ld   $6b
              b199 0084  ld   $84
              b19a 006c  ld   $6c
              b19b 004c  ld   $4c
              b19c 006e  ld   $6e
              b19d 000f  ld   $0f
              b19e 00a9  ld   $a9
              b19f 007e  ld   $7e
              b1a0 00a0  ld   $a0
              b1a1 000d  ld   $0d
              b1a2 0020  ld   $20
              b1a3 00ef  ld   $ef
              b1a4 000b  ld   $0b
              b1a5 00a5  ld   $a5
              b1a6 006f  ld   $6f
              b1a7 00a4  ld   $a4
              b1a8 0070  ld   $70
              b1a9 0085  ld   $85
              b1aa 00a6  ld   $a6
              b1ab 0084  ld   $84
              b1ac 00a7  ld   $a7
              b1ad 0060  ld   $60
              b1ae 0020  ld   $20
              b1af 00e2  ld   $e2
              b1b0 0013  ld   $13
              b1b1 00a2  ld   $a2
              b1b2 0006  ld   $06
              b1b3 00a0  ld   $a0
              b1b4 0024  ld   $24
              b1b5 00a9  ld   $a9
              b1b6 0000  ld   $00
              b1b7 008d  ld   $8d
              b1b8 0006  ld   $06
              b1b9 0024  ld   $24
              b1ba 00a9  ld   $a9
              b1bb 0040  ld   $40
              b1bc 0020  ld   $20
              b1bd 0089  ld   $89
              b1be 000c  ld   $0c
              b1bf 0060  ld   $60
              b1c0 0046  ld   $46
              b1c1 0045  ld   $45
              b1c2 00c9  ld   $c9
              b1c3 0022  ld   $22
              b1c4 00d0  ld   $d0
              b1c5 000b  ld   $0b
              b1c6 0020  ld   $20
              b1c7 0023  ld   $23
              b1c8 000f  ld   $0f
              b1c9 00a9  ld   $a9
              b1ca 003b  ld   $3b
              b1cb 0020  ld   $20
              b1cc 0065  ld   $65
              b1cd 000f  ld   $0f
              b1ce 0020  ld   $20
              b1cf 00f2  ld   $f2
              b1d0 000b  ld   $0b
              b1d1 0020  ld   $20
              b1d2 00e2  ld   $e2
              b1d3 0013  ld   $13
              b1d4 00a9  ld   $a9
              b1d5 002c  ld   $2c
              b1d6 008d  ld   $8d
              b1d7 0004  ld   $04
              b1d8 0024  ld   $24
              b1d9 0020  ld   $20
              b1da 0077  ld   $77
              b1db 000c  ld   $0c
              b1dc 00ad  ld   $ad
              b1dd 0005  ld   $05
              b1de 0024  ld   $24
              b1df 00d0  ld   $d0
              b1e0 0014  ld   $14
              b1e1 0018  ld   $18
              b1e2 004c  ld   $4c
              b1e3 0038  ld   $38
              b1e4 0009  ld   $09
              b1e5 0020  ld   $20
              b1e6 000f  ld   $0f
              b1e7 000c  ld   $0c
              b1e8 0020  ld   $20
              b1e9 000c  ld   $0c
              b1ea 000c  ld   $0c
              b1eb 004c  ld   $4c
              b1ec 0057  ld   $57
              b1ed 0006  ld   $06
              b1ee 00a6  ld   $a6
              b1ef 0073  ld   $73
              b1f0 00a4  ld   $a4
              b1f1 0074  ld   $74
              b1f2 00a9  ld   $a9
              b1f3 0098  ld   $98
              b1f4 002c  ld   $2c
              b1f5 00a9  ld   $a9
              b1f6 0000  ld   $00
              b1f7 0085  ld   $85
              b1f8 0043  ld   $43
              b1f9 0086  ld   $86
              b1fa 0075  ld   $75
              b1fb fe00  bra  ac          ;+-----------------------------------+
              b1fc fcfd  bra  $b1fd       ;|                                   |
              b1fd 1418  ld   $18,y       ;| Trampoline for page $b100 lookups |
              b1fe e006  jmp  y,$06       ;|                                   |
              b1ff c218  st   [$18]       ;+-----------------------------------+
              b200 0084  ld   $84
              b201 0076  ld   $76
              b202 0020  ld   $20
              b203 00d0  ld   $d0
              b204 0010  ld   $10
              b205 0085  ld   $85
              b206 007b  ld   $7b
              b207 0084  ld   $84
              b208 007c  ld   $7c
              b209 00a5  ld   $a5
              b20a 00a6  ld   $a6
              b20b 00a4  ld   $a4
              b20c 00a7  ld   $a7
              b20d 0085  ld   $85
              b20e 007d  ld   $7d
              b20f 0084  ld   $84
              b210 007e  ld   $7e
              b211 00a6  ld   $a6
              b212 0075  ld   $75
              b213 00a4  ld   $a4
              b214 0076  ld   $76
              b215 0086  ld   $86
              b216 00a6  ld   $a6
              b217 0084  ld   $84
              b218 00a7  ld   $a7
              b219 0020  ld   $20
              b21a 0071  ld   $71
              b21b 0022  ld   $22
              b21c 00d0  ld   $d0
              b21d 001c  ld   $1c
              b21e 0024  ld   $24
              b21f 0043  ld   $43
              b220 0050  ld   $50
              b221 000c  ld   $0c
              b222 0020  ld   $20
              b223 0000  ld   $00
              b224 002c  ld   $2c
              b225 008d  ld   $8d
              b226 0005  ld   $05
              b227 0024  ld   $24
              b228 00a2  ld   $a2
              b229 0004  ld   $04
              b22a 00a0  ld   $a0
              b22b 0024  ld   $24
              b22c 00d0  ld   $d0
              b22d 0008  ld   $08
              b22e 0030  ld   $30
              b22f 0071  ld   $71
              b230 0020  ld   $20
              b231 000f  ld   $0f
              b232 000c  ld   $0c
              b233 0020  ld   $20
              b234 0077  ld   $77
              b235 000c  ld   $0c
              b236 0086  ld   $86
              b237 00a6  ld   $a6
              b238 0084  ld   $84
              b239 00a7  ld   $a7
              b23a 0020  ld   $20
              b23b 006b  ld   $6b
              b23c 0022  ld   $22
              b23d 0024  ld   $24
              b23e 003f  ld   $3f
              b23f 0010  ld   $10
              b240 0031  ld   $31
              b241 0024  ld   $24
              b242 0043  ld   $43
              b243 0050  ld   $50
              b244 0009  ld   $09
              b245 00e8  ld   $e8
              b246 0086  ld   $86
              b247 00a6  ld   $a6
              b248 00a9  ld   $a9
              b249 0000  ld   $00
              b24a 0085  ld   $85
              b24b 003b  ld   $3b
              b24c 00f0  ld   $f0
              b24d 000c  ld   $0c
              b24e 0085  ld   $85
              b24f 003b  ld   $3b
              b250 00c9  ld   $c9
              b251 0022  ld   $22
              b252 00f0  ld   $f0
              b253 0007  ld   $07
              b254 00a9  ld   $a9
              b255 003a  ld   $3a
              b256 0085  ld   $85
              b257 003b  ld   $3b
              b258 00a9  ld   $a9
              b259 002c  ld   $2c
              b25a 0018  ld   $18
              b25b 0085  ld   $85
              b25c 003c  ld   $3c
              b25d 00a5  ld   $a5
              b25e 00a6  ld   $a6
              b25f 00a4  ld   $a4
              b260 00a7  ld   $a7
              b261 0069  ld   $69
              b262 0000  ld   $00
              b263 0090  ld   $90
              b264 0001  ld   $01
              b265 00c8  ld   $c8
              b266 0020  ld   $20
              b267 00c9  ld   $c9
              b268 0014  ld   $14
              b269 0020  ld   $20
              b26a 001f  ld   $1f
              b26b 0018  ld   $18
              b26c 0020  ld   $20
              b26d 00c9  ld   $c9
              b26e 000a  ld   $0a
              b26f 004c  ld   $4c
              b270 0007  ld   $07
              b271 000d  ld   $0d
              b272 0020  ld   $20
              b273 000d  ld   $0d
              b274 0000  ld   $00
              b275 0000  ld   $00
              b276 006b  ld   $6b
              b277 001d  ld   $1d
              b278 00a5  ld   $a5
              b279 0040  ld   $40
              b27a 0020  ld   $20
              b27b 00b1  ld   $b1
              b27c 000a  ld   $0a
              b27d 0020  ld   $20
              b27e 0071  ld   $71
              b27f 0022  ld   $22
              b280 00f0  ld   $f0
              b281 0007  ld   $07
              b282 00c9  ld   $c9
              b283 002c  ld   $2c
              b284 00f0  ld   $f0
              b285 0003  ld   $03
              b286 004c  ld   $4c
              b287 001b  ld   $1b
              b288 000c  ld   $0c
              b289 00a5  ld   $a5
              b28a 00a6  ld   $a6
              b28b 00a4  ld   $a4
              b28c 00a7  ld   $a7
              b28d 0085  ld   $85
              b28e 0075  ld   $75
              b28f 0084  ld   $84
              b290 0076  ld   $76
              b291 00a5  ld   $a5
              b292 007d  ld   $7d
              b293 00a4  ld   $a4
              b294 007e  ld   $7e
              b295 0085  ld   $85
              b296 00a6  ld   $a6
              b297 0084  ld   $84
              b298 00a7  ld   $a7
              b299 0020  ld   $20
              b29a 0071  ld   $71
              b29b 0022  ld   $22
              b29c 00f0  ld   $f0
              b29d 002c  ld   $2c
              b29e 0020  ld   $20
              b29f 0063  ld   $63
              b2a0 000f  ld   $0f
              b2a1 004c  ld   $4c
              b2a2 008f  ld   $8f
              b2a3 000c  ld   $0c
              b2a4 0020  ld   $20
              b2a5 00f5  ld   $f5
              b2a6 0009  ld   $09
              b2a7 00c8  ld   $c8
              b2a8 00aa  ld   $aa
              b2a9 00d0  ld   $d0
              b2aa 0012  ld   $12
              b2ab 00a2  ld   $a2
              b2ac 002a  ld   $2a
              b2ad 00c8  ld   $c8
              b2ae 00b1  ld   $b1
              b2af 00a6  ld   $a6
              b2b0 00f0  ld   $f0
              b2b1 0069  ld   $69
              b2b2 00c8  ld   $c8
              b2b3 00b1  ld   $b1
              b2b4 00a6  ld   $a6
              b2b5 0085  ld   $85
              b2b6 0071  ld   $71
              b2b7 00c8  ld   $c8
              b2b8 00b1  ld   $b1
              b2b9 00a6  ld   $a6
              b2ba 00c8  ld   $c8
              b2bb 0085  ld   $85
              b2bc 0072  ld   $72
              b2bd 00b1  ld   $b1
              b2be 00a6  ld   $a6
              b2bf 00aa  ld   $aa
              b2c0 0020  ld   $20
              b2c1 00ea  ld   $ea
              b2c2 0009  ld   $09
              b2c3 00e0  ld   $e0
              b2c4 0083  ld   $83
              b2c5 00d0  ld   $d0
              b2c6 00dd  ld   $dd
              b2c7 004c  ld   $4c
              b2c8 00c7  ld   $c7
              b2c9 000c  ld   $0c
              b2ca 00a5  ld   $a5
              b2cb 0075  ld   $75
              b2cc 00a4  ld   $a4
              b2cd 0076  ld   $76
              b2ce 00a6  ld   $a6
              b2cf 0043  ld   $43
              b2d0 0010  ld   $10
              b2d1 0003  ld   $03
              b2d2 004c  ld   $4c
              b2d3 0021  ld   $21
              b2d4 0009  ld   $09
              b2d5 00a0  ld   $a0
              b2d6 0000  ld   $00
              b2d7 00b1  ld   $b1
              b2d8 0075  ld   $75
              b2d9 00f0  ld   $f0
              b2da 0007  ld   $07
              b2db 00a9  ld   $a9
              b2dc 006d  ld   $6d
              b2dd 00a0  ld   $a0
              b2de 000d  ld   $0d
              b2df 004c  ld   $4c
              b2e0 00ef  ld   $ef
              b2e1 000b  ld   $0b
              b2e2 0060  ld   $60
              b2e3 003f  ld   $3f
              b2e4 0045  ld   $45
              b2e5 0058  ld   $58
              b2e6 0054  ld   $54
              b2e7 0052  ld   $52
              b2e8 0041  ld   $41
              b2e9 0020  ld   $20
              b2ea 0049  ld   $49
              b2eb 0047  ld   $47
              b2ec 004e  ld   $4e
              b2ed 004f  ld   $4f
              b2ee 0052  ld   $52
              b2ef 0045  ld   $45
              b2f0 0044  ld   $44
              b2f1 000d  ld   $0d
              b2f2 000a  ld   $0a
              b2f3 0000  ld   $00
              b2f4 003f  ld   $3f
              b2f5 0052  ld   $52
              b2f6 0045  ld   $45
              b2f7 0044  ld   $44
              b2f8 004f  ld   $4f
              b2f9 0020  ld   $20
              b2fa 0046  ld   $46
              b2fb fe00  bra  ac          ;+-----------------------------------+
              b2fc fcfd  bra  $b2fd       ;|                                   |
              b2fd 1418  ld   $18,y       ;| Trampoline for page $b200 lookups |
              b2fe e006  jmp  y,$06       ;|                                   |
              b2ff c218  st   [$18]       ;+-----------------------------------+
              b300 0052  ld   $52
              b301 004f  ld   $4f
              b302 004d  ld   $4d
              b303 0020  ld   $20
              b304 0053  ld   $53
              b305 0054  ld   $54
              b306 0041  ld   $41
              b307 0052  ld   $52
              b308 0054  ld   $54
              b309 000d  ld   $0d
              b30a 000a  ld   $0a
              b30b 0000  ld   $00
              b30c 00d0  ld   $d0
              b30d 0004  ld   $04
              b30e 00a0  ld   $a0
              b30f 0000  ld   $00
              b310 00f0  ld   $f0
              b311 0003  ld   $03
              b312 0020  ld   $20
              b313 00d0  ld   $d0
              b314 0010  ld   $10
              b315 0085  ld   $85
              b316 007b  ld   $7b
              b317 0084  ld   $84
              b318 007c  ld   $7c
              b319 0020  ld   $20
              b31a 00a2  ld   $a2
              b31b 0004  ld   $04
              b31c 00f0  ld   $f0
              b31d 0004  ld   $04
              b31e 00a2  ld   $a2
              b31f 0000  ld   $00
              b320 00f0  ld   $f0
              b321 0060  ld   $60
              b322 009a  ld   $9a
              b323 008a  ld   $8a
              b324 0018  ld   $18
              b325 0069  ld   $69
              b326 0004  ld   $04
              b327 0048  ld   $48
              b328 0069  ld   $69
              b329 0006  ld   $06
              b32a 0085  ld   $85
              b32b 0056  ld   $56
              b32c 0068  ld   $68
              b32d 00a0  ld   $a0
              b32e 0000  ld   $00
              b32f 0020  ld   $20
              b330 001a  ld   $1a
              b331 001c  ld   $1c
              b332 00ba  ld   $ba
              b333 00b5  ld   $b5
              b334 0009  ld   $09
              b335 0085  ld   $85
              b336 0099  ld   $99
              b337 00a5  ld   $a5
              b338 007b  ld   $7b
              b339 00a4  ld   $a4
              b33a 007c  ld   $7c
              b33b 0020  ld   $20
              b33c 00df  ld   $df
              b33d 0018  ld   $18
              b33e 0020  ld   $20
              b33f 0048  ld   $48
              b340 001c  ld   $1c
              b341 00a0  ld   $a0
              b342 0000  ld   $00
              b343 0020  ld   $20
              b344 00d5  ld   $d5
              b345 001c  ld   $1c
              b346 00ba  ld   $ba
              b347 0038  ld   $38
              b348 00f5  ld   $f5
              b349 0009  ld   $09
              b34a 00f0  ld   $f0
              b34b 0013  ld   $13
              b34c 00b5  ld   $b5
              b34d 000f  ld   $0f
              b34e 0085  ld   $85
              b34f 006b  ld   $6b
              b350 00b5  ld   $b5
              b351 0010  ld   $10
              b352 0085  ld   $85
              b353 006c  ld   $6c
              b354 00b5  ld   $b5
              b355 0012  ld   $12
              b356 0085  ld   $85
              b357 00a6  ld   $a6
              b358 00b5  ld   $b5
              b359 0011  ld   $11
              b35a 0085  ld   $85
              b35b 00a7  ld   $a7
              b35c 004c  ld   $4c
              b35d 00ab  ld   $ab
              b35e 0008  ld   $08
              b35f 008a  ld   $8a
              b360 0069  ld   $69
              b361 0011  ld   $11
              b362 00aa  ld   $aa
              b363 009a  ld   $9a
              b364 0020  ld   $20
              b365 0071  ld   $71
              b366 0022  ld   $22
              b367 00c9  ld   $c9
              b368 002c  ld   $2c
              b369 00d0  ld   $d0
              b36a 00f1  ld   $f1
              b36b 0020  ld   $20
              b36c 006b  ld   $6b
              b36d 0022  ld   $22
              b36e 0020  ld   $20
              b36f 0097  ld   $97
              b370 000d  ld   $0d
              b371 0020  ld   $20
              b372 000a  ld   $0a
              b373 000e  ld   $0e
              b374 0018  ld   $18
              b375 0024  ld   $24
              b376 0038  ld   $38
              b377 0024  ld   $24
              b378 003f  ld   $3f
              b379 0030  ld   $30
              b37a 0003  ld   $03
              b37b 000e  ld   $0e
              b37c 0000  ld   $00
              b37d 0000  ld   $00
              b37e 00b0  ld   $b0
              b37f 0003  ld   $03
              b380 0060  ld   $60
              b381 00b0  ld   $b0
              b382 00fd  ld   $fd
              b383 00a2  ld   $a2
              b384 00a3  ld   $a3
              b385 004c  ld   $4c
              b386 004a  ld   $4a
              b387 0005  ld   $05
              b388 00a6  ld   $a6
              b389 00a6  ld   $a6
              b38a 00d0  ld   $d0
              b38b 0002  ld   $02
              b38c 00c6  ld   $c6
              b38d 00a7  ld   $a7
              b38e 00c6  ld   $c6
              b38f 00a6  ld   $a6
              b390 00a2  ld   $a2
              b391 0000  ld   $00
              b392 0024  ld   $24
              b393 0048  ld   $48
              b394 008a  ld   $8a
              b395 0048  ld   $48
              b396 00a9  ld   $a9
              b397 0001  ld   $01
              b398 0020  ld   $20
              b399 000e  ld   $0e
              b39a 0005  ld   $05
              b39b 0020  ld   $20
              b39c 00ef  ld   $ef
              b39d 000e  ld   $0e
              b39e 00a9  ld   $a9
              b39f 0000  ld   $00
              b3a0 0085  ld   $85
              b3a1 007f  ld   $7f
              b3a2 0020  ld   $20
              b3a3 0071  ld   $71
              b3a4 0022  ld   $22
              b3a5 0038  ld   $38
              b3a6 00e9  ld   $e9
              b3a7 00ab  ld   $ab
              b3a8 0090  ld   $90
              b3a9 0017  ld   $17
              b3aa 00c9  ld   $c9
              b3ab 0003  ld   $03
              b3ac 00b0  ld   $b0
              b3ad 0013  ld   $13
              b3ae 00c9  ld   $c9
              b3af 0001  ld   $01
              b3b0 002a  ld   $2a
              b3b1 0049  ld   $49
              b3b2 0001  ld   $01
              b3b3 0045  ld   $45
              b3b4 007f  ld   $7f
              b3b5 00c5  ld   $c5
              b3b6 007f  ld   $7f
              b3b7 0090  ld   $90
              b3b8 0061  ld   $61
              b3b9 0085  ld   $85
              b3ba 007f  ld   $7f
              b3bb 0020  ld   $20
              b3bc 006b  ld   $6b
              b3bd 0022  ld   $22
              b3be 004c  ld   $4c
              b3bf 0027  ld   $27
              b3c0 000e  ld   $0e
              b3c1 00a6  ld   $a6
              b3c2 007f  ld   $7f
              b3c3 00d0  ld   $d0
              b3c4 002c  ld   $2c
              b3c5 00b0  ld   $b0
              b3c6 007b  ld   $7b
              b3c7 0069  ld   $69
              b3c8 0007  ld   $07
              b3c9 0090  ld   $90
              b3ca 0077  ld   $77
              b3cb 0065  ld   $65
              b3cc 003f  ld   $3f
              b3cd 00d0  ld   $d0
              b3ce 0003  ld   $03
              b3cf 004c  ld   $4c
              b3d0 0079  ld   $79
              b3d1 0016  ld   $16
              b3d2 0069  ld   $69
              b3d3 00ff  ld   $ff
              b3d4 0085  ld   $85
              b3d5 0054  ld   $54
              b3d6 000a  ld   $0a
              b3d7 0065  ld   $65
              b3d8 0054  ld   $54
              b3d9 00a8  ld   $a8
              b3da 0068  ld   $68
              b3db 00d9  ld   $d9
              b3dc 0080  ld   $80
              b3dd 0002  ld   $02
              b3de 00b0  ld   $b0
              b3df 0067  ld   $67
              b3e0 0020  ld   $20
              b3e1 00f9  ld   $f9
              b3e2 000d  ld   $0d
              b3e3 0048  ld   $48
              b3e4 0020  ld   $20
              b3e5 008c  ld   $8c
              b3e6 000e  ld   $0e
              b3e7 0068  ld   $68
              b3e8 00a4  ld   $a4
              b3e9 007d  ld   $7d
              b3ea 0010  ld   $10
              b3eb 0017  ld   $17
              b3ec 00aa  ld   $aa
              b3ed 00f0  ld   $f0
              b3ee 0056  ld   $56
              b3ef 00d0  ld   $d0
              b3f0 005f  ld   $5f
              b3f1 0046  ld   $46
              b3f2 003f  ld   $3f
              b3f3 008a  ld   $8a
              b3f4 002a  ld   $2a
              b3f5 00a6  ld   $a6
              b3f6 00a6  ld   $a6
              b3f7 00d0  ld   $d0
              b3f8 0002  ld   $02
              b3f9 00c6  ld   $c6
              b3fa 00a7  ld   $a7
              b3fb fe00  bra  ac          ;+-----------------------------------+
              b3fc fcfd  bra  $b3fd       ;|                                   |
              b3fd 1418  ld   $18,y       ;| Trampoline for page $b300 lookups |
              b3fe e006  jmp  y,$06       ;|                                   |
              b3ff c218  st   [$18]       ;+-----------------------------------+
              b400 00c6  ld   $c6
              b401 00a6  ld   $a6
              b402 00a0  ld   $a0
              b403 001b  ld   $1b
              b404 0085  ld   $85
              b405 007f  ld   $7f
              b406 00d0  ld   $d0
              b407 00d7  ld   $d7
              b408 00d9  ld   $d9
              b409 0080  ld   $80
              b40a 0002  ld   $02
              b40b 00b0  ld   $b0
              b40c 0048  ld   $48
              b40d 0090  ld   $90
              b40e 00d9  ld   $d9
              b40f 00b9  ld   $b9
              b410 0082  ld   $82
              b411 0002  ld   $02
              b412 0048  ld   $48
              b413 00b9  ld   $b9
              b414 0081  ld   $81
              b415 0002  ld   $02
              b416 0048  ld   $48
              b417 0020  ld   $20
              b418 009f  ld   $9f
              b419 000e  ld   $0e
              b41a 00a5  ld   $a5
              b41b 007f  ld   $7f
              b41c 004c  ld   $4c
              b41d 0015  ld   $15
              b41e 000e  ld   $0e
              b41f 004c  ld   $4c
              b420 006e  ld   $6e
              b421 000f  ld   $0f
              b422 00a5  ld   $a5
              b423 0099  ld   $99
              b424 00be  ld   $be
              b425 0080  ld   $80
              b426 0002  ld   $02
              b427 00a8  ld   $a8
              b428 0068  ld   $68
              b429 0085  ld   $85
              b42a 0054  ld   $54
              b42b 00e6  ld   $e6
              b42c 0054  ld   $54
              b42d 0068  ld   $68
              b42e 0085  ld   $85
              b42f 0055  ld   $55
              b430 0098  ld   $98
              b431 0048  ld   $48
              b432 0020  ld   $20
              b433 0093  ld   $93
              b434 001c  ld   $1c
              b435 00a5  ld   $a5
              b436 0098  ld   $98
              b437 0048  ld   $48
              b438 00a5  ld   $a5
              b439 0097  ld   $97
              b43a 0048  ld   $48
              b43b 00a5  ld   $a5
              b43c 0096  ld   $96
              b43d 0048  ld   $48
              b43e 00a5  ld   $a5
              b43f 0095  ld   $95
              b440 0048  ld   $48
              b441 00a5  ld   $a5
              b442 0094  ld   $94
              b443 0048  ld   $48
              b444 006c  ld   $6c
              b445 0054  ld   $54
              b446 0000  ld   $00
              b447 00a0  ld   $a0
              b448 00ff  ld   $ff
              b449 0068  ld   $68
              b44a 00f0  ld   $f0
              b44b 0023  ld   $23
              b44c 00c9  ld   $c9
              b44d 0064  ld   $64
              b44e 00f0  ld   $f0
              b44f 0003  ld   $03
              b450 0020  ld   $20
              b451 00f9  ld   $f9
              b452 000d  ld   $0d
              b453 0084  ld   $84
              b454 007d  ld   $7d
              b455 0068  ld   $68
              b456 004a  ld   $4a
              b457 0085  ld   $85
              b458 0044  ld   $44
              b459 0068  ld   $68
              b45a 0085  ld   $85
              b45b 009c  ld   $9c
              b45c 0068  ld   $68
              b45d 0085  ld   $85
              b45e 009d  ld   $9d
              b45f 0068  ld   $68
              b460 0085  ld   $85
              b461 009e  ld   $9e
              b462 0068  ld   $68
              b463 0085  ld   $85
              b464 009f  ld   $9f
              b465 0068  ld   $68
              b466 0085  ld   $85
              b467 00a0  ld   $a0
              b468 0068  ld   $68
              b469 0085  ld   $85
              b46a 00a1  ld   $a1
              b46b 0045  ld   $45
              b46c 0099  ld   $99
              b46d 0085  ld   $85
              b46e 00a2  ld   $a2
              b46f 00a5  ld   $a5
              b470 0094  ld   $94
              b471 0060  ld   $60
              b472 00a9  ld   $a9
              b473 0000  ld   $00
              b474 0085  ld   $85
              b475 003f  ld   $3f
              b476 0020  ld   $20
              b477 006b  ld   $6b
              b478 0022  ld   $22
              b479 00b0  ld   $b0
              b47a 0003  ld   $03
              b47b 004c  ld   $4c
              b47c 006b  ld   $6b
              b47d 001d  ld   $1d
              b47e 0020  ld   $20
              b47f 005a  ld   $5a
              b480 0011  ld   $11
              b481 00b0  ld   $b0
              b482 007a  ld   $7a
              b483 000f  ld   $0f
              b484 0000  ld   $00
              b485 0000  ld   $00
              b486 00c9  ld   $c9
              b487 00ff  ld   $ff
              b488 00d0  ld   $d0
              b489 000f  ld   $0f
              b48a 00a9  ld   $a9
              b48b 000e  ld   $0e
              b48c 00a0  ld   $a0
              b48d 000f  ld   $0f
              b48e 0020  ld   $20
              b48f 001a  ld   $1a
              b490 001c  ld   $1c
              b491 004c  ld   $4c
              b492 006b  ld   $6b
              b493 0022  ld   $22
              b494 0082  ld   $82
              b495 0049  ld   $49
              b496 000f  ld   $0f
              b497 00da  ld   $da
              b498 00a1  ld   $a1
              b499 00c9  ld   $c9
              b49a 002e  ld   $2e
              b49b 00f0  ld   $f0
              b49c 00e1  ld   $e1
              b49d 00c9  ld   $c9
              b49e 00a5  ld   $a5
              b49f 00f0  ld   $f0
              b4a0 0058  ld   $58
              b4a1 00c9  ld   $c9
              b4a2 00a4  ld   $a4
              b4a3 00f0  ld   $f0
              b4a4 00d4  ld   $d4
              b4a5 00c9  ld   $c9
              b4a6 0022  ld   $22
              b4a7 00d0  ld   $d0
              b4a8 000f  ld   $0f
              b4a9 00a5  ld   $a5
              b4aa 00a6  ld   $a6
              b4ab 00a4  ld   $a4
              b4ac 00a7  ld   $a7
              b4ad 0069  ld   $69
              b4ae 0000  ld   $00
              b4af 0090  ld   $90
              b4b0 0001  ld   $01
              b4b1 00c8  ld   $c8
              b4b2 0020  ld   $20
              b4b3 00c3  ld   $c3
              b4b4 0014  ld   $14
              b4b5 004c  ld   $4c
              b4b6 001f  ld   $1f
              b4b7 0018  ld   $18
              b4b8 00c9  ld   $c9
              b4b9 00a2  ld   $a2
              b4ba 00d0  ld   $d0
              b4bb 0013  ld   $13
              b4bc 00a0  ld   $a0
              b4bd 0018  ld   $18
              b4be 00d0  ld   $d0
              b4bf 003b  ld   $3b
              b4c0 0020  ld   $20
              b4c1 00fd  ld   $fd
              b4c2 0011  ld   $11
              b4c3 00a5  ld   $a5
              b4c4 0098  ld   $98
              b4c5 0049  ld   $49
              b4c6 00ff  ld   $ff
              b4c7 00a8  ld   $a8
              b4c8 00a5  ld   $a5
              b4c9 0097  ld   $97
              b4ca 0049  ld   $49
              b4cb 00ff  ld   $ff
              b4cc 004c  ld   $4c
              b4cd 00cc  ld   $cc
              b4ce 0013  ld   $13
              b4cf 00c9  ld   $c9
              b4d0 009f  ld   $9f
              b4d1 00d0  ld   $d0
              b4d2 0003  ld   $03
              b4d3 004c  ld   $4c
              b4d4 0030  ld   $30
              b4d5 0014  ld   $14
              b4d6 00c9  ld   $c9
              b4d7 00ae  ld   $ae
              b4d8 0090  ld   $90
              b4d9 0003  ld   $03
              b4da 004c  ld   $4c
              b4db 00ec  ld   $ec
              b4dc 000f  ld   $0f
              b4dd 0020  ld   $20
              b4de 0060  ld   $60
              b4df 000f  ld   $0f
              b4e0 0020  ld   $20
              b4e1 000a  ld   $0a
              b4e2 000e  ld   $0e
              b4e3 00a9  ld   $a9
              b4e4 0029  ld   $29
              b4e5 002c  ld   $2c
              b4e6 00a9  ld   $a9
              b4e7 0028  ld   $28
              b4e8 002c  ld   $2c
              b4e9 00a9  ld   $a9
              b4ea 002c  ld   $2c
              b4eb 00a0  ld   $a0
              b4ec 0000  ld   $00
              b4ed 00d1  ld   $d1
              b4ee 00a6  ld   $a6
              b4ef 00d0  ld   $d0
              b4f0 0003  ld   $03
              b4f1 004c  ld   $4c
              b4f2 006b  ld   $6b
              b4f3 0022  ld   $22
              b4f4 00a2  ld   $a2
              b4f5 0010  ld   $10
              b4f6 004c  ld   $4c
              b4f7 004a  ld   $4a
              b4f8 0005  ld   $05
              b4f9 00a0  ld   $a0
              b4fa 0015  ld   $15
              b4fb fe00  bra  ac          ;+-----------------------------------+
              b4fc fcfd  bra  $b4fd       ;|                                   |
              b4fd 1418  ld   $18,y       ;| Trampoline for page $b400 lookups |
              b4fe e006  jmp  y,$06       ;|                                   |
              b4ff c218  st   [$18]       ;+-----------------------------------+
              b500 0068  ld   $68
              b501 0068  ld   $68
              b502 004c  ld   $4c
              b503 0066  ld   $66
              b504 000e  ld   $0e
              b505 0020  ld   $20
              b506 00d0  ld   $d0
              b507 0010  ld   $10
              b508 0085  ld   $85
              b509 0097  ld   $97
              b50a 0084  ld   $84
              b50b 0098  ld   $98
              b50c 00a5  ld   $a5
              b50d 0077  ld   $77
              b50e 00a4  ld   $a4
              b50f 0078  ld   $78
              b510 00a6  ld   $a6
              b511 003f  ld   $3f
              b512 00f0  ld   $f0
              b513 0021  ld   $21
              b514 00a2  ld   $a2
              b515 0000  ld   $00
              b516 0086  ld   $86
              b517 00a3  ld   $a3
              b518 00c9  ld   $c9
              b519 0054  ld   $54
              b51a 00d0  ld   $d0
              b51b 0018  ld   $18
              b51c 00c0  ld   $c0
              b51d 00c9  ld   $c9
              b51e 00d0  ld   $d0
              b51f 0014  ld   $14
              b520 0020  ld   $20
              b521 0073  ld   $73
              b522 0004  ld   $04
              b523 0084  ld   $84
              b524 0091  ld   $91
              b525 0088  ld   $88
              b526 0084  ld   $84
              b527 00a4  ld   $a4
              b528 00a0  ld   $a0
              b529 0006  ld   $06
              b52a 0084  ld   $84
              b52b 0090  ld   $90
              b52c 00a0  ld   $a0
              b52d 0024  ld   $24
              b52e 0020  ld   $20
              b52f 00e0  ld   $e0
              b530 001e  ld   $1e
              b531 004c  ld   $4c
              b532 00ab  ld   $ab
              b533 0014  ld   $14
              b534 0060  ld   $60
              b535 00a6  ld   $a6
              b536 0040  ld   $40
              b537 0010  ld   $10
              b538 000d  ld   $0d
              b539 00a0  ld   $a0
              b53a 0000  ld   $00
              b53b 00b1  ld   $b1
              b53c 0097  ld   $97
              b53d 00aa  ld   $aa
              b53e 00c8  ld   $c8
              b53f 00b1  ld   $b1
              b540 0097  ld   $97
              b541 00a8  ld   $a8
              b542 008a  ld   $8a
              b543 004c  ld   $4c
              b544 00cc  ld   $cc
              b545 0013  ld   $13
              b546 00c9  ld   $c9
              b547 0054  ld   $54
              b548 00d0  ld   $d0
              b549 0019  ld   $19
              b54a 00c0  ld   $c0
              b54b 0049  ld   $49
              b54c 00d0  ld   $d0
              b54d 0022  ld   $22
              b54e 0020  ld   $20
              b54f 0073  ld   $73
              b550 0004  ld   $04
              b551 0098  ld   $98
              b552 00a2  ld   $a2
              b553 00a0  ld   $a0
              b554 004c  ld   $4c
              b555 00c7  ld   $c7
              b556 001c  ld   $1c
              b557 00a9  ld   $a9
              b558 00fe  ld   $fe
              b559 00a0  ld   $a0
              b55a 0001  ld   $01
              b55b 0078  ld   $78
              b55c 0020  ld   $20
              b55d 001a  ld   $1a
              b55e 001c  ld   $1c
              b55f 0058  ld   $58
              b560 0084  ld   $84
              b561 0095  ld   $95
              b562 0060  ld   $60
              b563 00c9  ld   $c9
              b564 0053  ld   $53
              b565 00d0  ld   $d0
              b566 0009  ld   $09
              b567 00c0  ld   $c0
              b568 0054  ld   $54
              b569 00d0  ld   $d0
              b56a 0005  ld   $05
              b56b 00a5  ld   $a5
              b56c 0019  ld   $19
              b56d 004c  ld   $4c
              b56e 00b4  ld   $b4
              b56f 001c  ld   $1c
              b570 00a5  ld   $a5
              b571 0097  ld   $97
              b572 00a4  ld   $a4
              b573 0098  ld   $98
              b574 004c  ld   $4c
              b575 001a  ld   $1a
              b576 001c  ld   $1c
              b577 000a  ld   $0a
              b578 0048  ld   $48
              b579 00aa  ld   $aa
              b57a 0020  ld   $20
              b57b 006b  ld   $6b
              b57c 0022  ld   $22
              b57d 00e0  ld   $e0
              b57e 0083  ld   $83
              b57f 0090  ld   $90
              b580 0020  ld   $20
              b581 0020  ld   $20
              b582 0060  ld   $60
              b583 000f  ld   $0f
              b584 0020  ld   $20
              b585 000a  ld   $0a
              b586 000e  ld   $0e
              b587 0020  ld   $20
              b588 0063  ld   $63
              b589 000f  ld   $0f
              b58a 0020  ld   $20
              b58b 0010  ld   $10
              b58c 0000  ld   $00
              b58d 0000  ld   $00
              b58e 00fb  ld   $fb
              b58f 000d  ld   $0d
              b590 0068  ld   $68
              b591 00aa  ld   $aa
              b592 00a5  ld   $a5
              b593 0098  ld   $98
              b594 0048  ld   $48
              b595 00a5  ld   $a5
              b596 0097  ld   $97
              b597 0048  ld   $48
              b598 008a  ld   $8a
              b599 0048  ld   $48
              b59a 0020  ld   $20
              b59b 00da  ld   $da
              b59c 0017  ld   $17
              b59d 0068  ld   $68
              b59e 00a8  ld   $a8
              b59f 008a  ld   $8a
              b5a0 0048  ld   $48
              b5a1 004c  ld   $4c
              b5a2 001b  ld   $1b
              b5a3 0010  ld   $10
              b5a4 0020  ld   $20
              b5a5 0057  ld   $57
              b5a6 000f  ld   $0f
              b5a7 0068  ld   $68
              b5a8 00a8  ld   $a8
              b5a9 00b9  ld   $b9
              b5aa 00f6  ld   $f6
              b5ab 0001  ld   $01
              b5ac 0085  ld   $85
              b5ad 0088  ld   $88
              b5ae 00b9  ld   $b9
              b5af 00f7  ld   $f7
              b5b0 0001  ld   $01
              b5b1 0085  ld   $85
              b5b2 0089  ld   $89
              b5b3 0020  ld   $20
              b5b4 0087  ld   $87
              b5b5 0000  ld   $00
              b5b6 004c  ld   $4c
              b5b7 00f9  ld   $f9
              b5b8 000d  ld   $0d
              b5b9 00a0  ld   $a0
              b5ba 00ff  ld   $ff
              b5bb 002c  ld   $2c
              b5bc 00a0  ld   $a0
              b5bd 0000  ld   $00
              b5be 0084  ld   $84
              b5bf 003d  ld   $3d
              b5c0 0020  ld   $20
              b5c1 00fd  ld   $fd
              b5c2 0011  ld   $11
              b5c3 00a5  ld   $a5
              b5c4 0097  ld   $97
              b5c5 0045  ld   $45
              b5c6 003d  ld   $3d
              b5c7 0085  ld   $85
              b5c8 003b  ld   $3b
              b5c9 00a5  ld   $a5
              b5ca 0098  ld   $98
              b5cb 0045  ld   $45
              b5cc 003d  ld   $3d
              b5cd 0085  ld   $85
              b5ce 003c  ld   $3c
              b5cf 0020  ld   $20
              b5d0 0074  ld   $74
              b5d1 001c  ld   $1c
              b5d2 0020  ld   $20
              b5d3 00fd  ld   $fd
              b5d4 0011  ld   $11
              b5d5 00a5  ld   $a5
              b5d6 0098  ld   $98
              b5d7 0045  ld   $45
              b5d8 003d  ld   $3d
              b5d9 0025  ld   $25
              b5da 003c  ld   $3c
              b5db 0045  ld   $45
              b5dc 003d  ld   $3d
              b5dd 00a8  ld   $a8
              b5de 00a5  ld   $a5
              b5df 0097  ld   $97
              b5e0 0045  ld   $45
              b5e1 003d  ld   $3d
              b5e2 0025  ld   $25
              b5e3 003b  ld   $3b
              b5e4 0045  ld   $45
              b5e5 003d  ld   $3d
              b5e6 004c  ld   $4c
              b5e7 00cc  ld   $cc
              b5e8 0013  ld   $13
              b5e9 0020  ld   $20
              b5ea 00fc  ld   $fc
              b5eb 000d  ld   $0d
              b5ec 00b0  ld   $b0
              b5ed 0013  ld   $13
              b5ee 00a5  ld   $a5
              b5ef 00a1  ld   $a1
              b5f0 0009  ld   $09
              b5f1 007f  ld   $7f
              b5f2 0025  ld   $25
              b5f3 009d  ld   $9d
              b5f4 0085  ld   $85
              b5f5 009d  ld   $9d
              b5f6 00a9  ld   $a9
              b5f7 009c  ld   $9c
              b5f8 00a0  ld   $a0
              b5f9 0000  ld   $00
              b5fa 0020  ld   $20
              b5fb fe00  bra  ac          ;+-----------------------------------+
              b5fc fcfd  bra  $b5fd       ;|                                   |
              b5fd 1418  ld   $18,y       ;| Trampoline for page $b500 lookups |
              b5fe e006  jmp  y,$06       ;|                                   |
              b5ff c218  st   [$18]       ;+-----------------------------------+
              b600 00d3  ld   $d3
              b601 001c  ld   $1c
              b602 00aa  ld   $aa
              b603 004c  ld   $4c
              b604 00a6  ld   $a6
              b605 0010  ld   $10
              b606 00a9  ld   $a9
              b607 0000  ld   $00
              b608 0085  ld   $85
              b609 003f  ld   $3f
              b60a 00c6  ld   $c6
              b60b 007f  ld   $7f
              b60c 0020  ld   $20
              b60d 00e2  ld   $e2
              b60e 0016  ld   $16
              b60f 0085  ld   $85
              b610 0094  ld   $94
              b611 0086  ld   $86
              b612 0095  ld   $95
              b613 0084  ld   $84
              b614 0096  ld   $96
              b615 00a5  ld   $a5
              b616 009f  ld   $9f
              b617 00a4  ld   $a4
              b618 00a0  ld   $a0
              b619 0020  ld   $20
              b61a 00e6  ld   $e6
              b61b 0016  ld   $16
              b61c 0086  ld   $86
              b61d 009f  ld   $9f
              b61e 0084  ld   $84
              b61f 00a0  ld   $a0
              b620 00aa  ld   $aa
              b621 0038  ld   $38
              b622 00e5  ld   $e5
              b623 0094  ld   $94
              b624 00f0  ld   $f0
              b625 0008  ld   $08
              b626 00a9  ld   $a9
              b627 0001  ld   $01
              b628 0090  ld   $90
              b629 0004  ld   $04
              b62a 00a6  ld   $a6
              b62b 0094  ld   $94
              b62c 00a9  ld   $a9
              b62d 00ff  ld   $ff
              b62e 0085  ld   $85
              b62f 0099  ld   $99
              b630 00a0  ld   $a0
              b631 00ff  ld   $ff
              b632 00e8  ld   $e8
              b633 00c8  ld   $c8
              b634 00ca  ld   $ca
              b635 00d0  ld   $d0
              b636 0007  ld   $07
              b637 00a6  ld   $a6
              b638 0099  ld   $99
              b639 0030  ld   $30
              b63a 000f  ld   $0f
              b63b 0018  ld   $18
              b63c 0090  ld   $90
              b63d 000c  ld   $0c
              b63e 00b1  ld   $b1
              b63f 009f  ld   $9f
              b640 00d1  ld   $d1
              b641 0095  ld   $95
              b642 00f0  ld   $f0
              b643 00ef  ld   $ef
              b644 00a2  ld   $a2
              b645 00ff  ld   $ff
              b646 00b0  ld   $b0
              b647 0002  ld   $02
              b648 00a2  ld   $a2
              b649 0001  ld   $01
              b64a 00e8  ld   $e8
              b64b 008a  ld   $8a
              b64c 002a  ld   $2a
              b64d 0025  ld   $25
              b64e 0044  ld   $44
              b64f 00f0  ld   $f0
              b650 0002  ld   $02
              b651 00a9  ld   $a9
              b652 00ff  ld   $ff
              b653 004c  ld   $4c
              b654 00b4  ld   $b4
              b655 001c  ld   $1c
              b656 0020  ld   $20
              b657 0063  ld   $63
              b658 000f  ld   $0f
              b659 00aa  ld   $aa
              b65a 0020  ld   $20
              b65b 00d5  ld   $d5
              b65c 0010  ld   $10
              b65d 0020  ld   $20
              b65e 0071  ld   $71
              b65f 0022  ld   $22
              b660 00d0  ld   $d0
              b661 00f4  ld   $f4
              b662 0060  ld   $60
              b663 00a2  ld   $a2
              b664 0000  ld   $00
              b665 0020  ld   $20
              b666 0071  ld   $71
              b667 0022  ld   $22
              b668 0086  ld   $86
              b669 003e  ld   $3e
              b66a 0085  ld   $85
              b66b 0077  ld   $77
              b66c 0020  ld   $20
              b66d 0071  ld   $71
              b66e 0022  ld   $22
              b66f 0020  ld   $20
              b670 005a  ld   $5a
              b671 0011  ld   $11
              b672 00b0  ld   $b0
              b673 0003  ld   $03
              b674 004c  ld   $4c
              b675 006e  ld   $6e
              b676 000f  ld   $0f
              b677 00a2  ld   $a2
              b678 0000  ld   $00
              b679 0086  ld   $86
              b67a 003f  ld   $3f
              b67b 0086  ld   $86
              b67c 0040  ld   $40
              b67d 0020  ld   $20
              b67e 006b  ld   $6b
              b67f 0022  ld   $22
              b680 0090  ld   $90
              b681 0005  ld   $05
              b682 0020  ld   $20
              b683 005a  ld   $5a
              b684 0011  ld   $11
              b685 0090  ld   $90
              b686 000b  ld   $0b
              b687 00aa  ld   $aa
              b688 0020  ld   $20
              b689 006b  ld   $6b
              b68a 0022  ld   $22
              b68b 0090  ld   $90
              b68c 00fb  ld   $fb
              b68d 0020  ld   $20
              b68e 005a  ld   $5a
              b68f 0011  ld   $11
              b690 00b0  ld   $b0
              b691 00f6  ld   $f6
              b692 00c9  ld   $c9
              b693 0011  ld   $11
              b694 0000  ld   $00
              b695 0000  ld   $00
              b696 0024  ld   $24
              b697 00d0  ld   $d0
              b698 0006  ld   $06
              b699 00a9  ld   $a9
              b69a 00ff  ld   $ff
              b69b 0085  ld   $85
              b69c 003f  ld   $3f
              b69d 00d0  ld   $d0
              b69e 0010  ld   $10
              b69f 00c9  ld   $c9
              b6a0 0025  ld   $25
              b6a1 00d0  ld   $d0
              b6a2 0013  ld   $13
              b6a3 00a5  ld   $a5
              b6a4 0042  ld   $42
              b6a5 00d0  ld   $d0
              b6a6 00d0  ld   $d0
              b6a7 00a9  ld   $a9
              b6a8 0080  ld   $80
              b6a9 0085  ld   $85
              b6aa 0040  ld   $40
              b6ab 0005  ld   $05
              b6ac 0077  ld   $77
              b6ad 0085  ld   $85
              b6ae 0077  ld   $77
              b6af 008a  ld   $8a
              b6b0 0009  ld   $09
              b6b1 0080  ld   $80
              b6b2 00aa  ld   $aa
              b6b3 0020  ld   $20
              b6b4 006b  ld   $6b
              b6b5 0022  ld   $22
              b6b6 0086  ld   $86
              b6b7 0078  ld   $78
              b6b8 0038  ld   $38
              b6b9 0005  ld   $05
              b6ba 0042  ld   $42
              b6bb 00e9  ld   $e9
              b6bc 0028  ld   $28
              b6bd 00d0  ld   $d0
              b6be 0003  ld   $03
              b6bf 004c  ld   $4c
              b6c0 000f  ld   $0f
              b6c1 0012  ld   $12
              b6c2 00a9  ld   $a9
              b6c3 0000  ld   $00
              b6c4 0085  ld   $85
              b6c5 0042  ld   $42
              b6c6 00a5  ld   $a5
              b6c7 005f  ld   $5f
              b6c8 00a6  ld   $a6
              b6c9 0060  ld   $60
              b6ca 00a0  ld   $a0
              b6cb 0000  ld   $00
              b6cc 0086  ld   $86
              b6cd 0093  ld   $93
              b6ce 0085  ld   $85
              b6cf 0092  ld   $92
              b6d0 00e4  ld   $e4
              b6d1 0062  ld   $62
              b6d2 00d0  ld   $d0
              b6d3 0004  ld   $04
              b6d4 00c5  ld   $c5
              b6d5 0061  ld   $61
              b6d6 00f0  ld   $f0
              b6d7 0022  ld   $22
              b6d8 00a5  ld   $a5
              b6d9 0077  ld   $77
              b6da 00d1  ld   $d1
              b6db 0092  ld   $92
              b6dc 00d0  ld   $d0
              b6dd 0008  ld   $08
              b6de 00a5  ld   $a5
              b6df 0078  ld   $78
              b6e0 00c8  ld   $c8
              b6e1 00d1  ld   $d1
              b6e2 0092  ld   $92
              b6e3 00f0  ld   $f0
              b6e4 007d  ld   $7d
              b6e5 0088  ld   $88
              b6e6 0018  ld   $18
              b6e7 00a5  ld   $a5
              b6e8 0092  ld   $92
              b6e9 0069  ld   $69
              b6ea 0007  ld   $07
              b6eb 0090  ld   $90
              b6ec 00e1  ld   $e1
              b6ed 00e8  ld   $e8
              b6ee 00d0  ld   $d0
              b6ef 00dc  ld   $dc
              b6f0 00c9  ld   $c9
              b6f1 0041  ld   $41
              b6f2 0090  ld   $90
              b6f3 0005  ld   $05
              b6f4 00e9  ld   $e9
              b6f5 005b  ld   $5b
              b6f6 0038  ld   $38
              b6f7 00e9  ld   $e9
              b6f8 00a5  ld   $a5
              b6f9 0060  ld   $60
              b6fa 0068  ld   $68
              b6fb fe00  bra  ac          ;+-----------------------------------+
              b6fc fcfd  bra  $b6fd       ;|                                   |
              b6fd 1418  ld   $18,y       ;| Trampoline for page $b600 lookups |
              b6fe e006  jmp  y,$06       ;|                                   |
              b6ff c218  st   [$18]       ;+-----------------------------------+
              b700 0048  ld   $48
              b701 00c9  ld   $c9
              b702 007c  ld   $7c
              b703 00d0  ld   $d0
              b704 0005  ld   $05
              b705 00a9  ld   $a9
              b706 008b  ld   $8b
              b707 00a0  ld   $a0
              b708 001f  ld   $1f
              b709 0060  ld   $60
              b70a 00a5  ld   $a5
              b70b 0077  ld   $77
              b70c 00a4  ld   $a4
              b70d 0078  ld   $78
              b70e 00c9  ld   $c9
              b70f 0054  ld   $54
              b710 00d0  ld   $d0
              b711 000b  ld   $0b
              b712 00c0  ld   $c0
              b713 00c9  ld   $c9
              b714 00f0  ld   $f0
              b715 00ef  ld   $ef
              b716 00c0  ld   $c0
              b717 0049  ld   $49
              b718 00d0  ld   $d0
              b719 0003  ld   $03
              b71a 004c  ld   $4c
              b71b 006e  ld   $6e
              b71c 000f  ld   $0f
              b71d 00c9  ld   $c9
              b71e 0053  ld   $53
              b71f 00d0  ld   $d0
              b720 0004  ld   $04
              b721 00c0  ld   $c0
              b722 0054  ld   $54
              b723 00f0  ld   $f0
              b724 00f5  ld   $f5
              b725 00a5  ld   $a5
              b726 0061  ld   $61
              b727 00a4  ld   $a4
              b728 0062  ld   $62
              b729 0085  ld   $85
              b72a 0092  ld   $92
              b72b 0084  ld   $84
              b72c 0093  ld   $93
              b72d 00a5  ld   $a5
              b72e 0063  ld   $63
              b72f 00a4  ld   $a4
              b730 0064  ld   $64
              b731 0085  ld   $85
              b732 008d  ld   $8d
              b733 0084  ld   $84
              b734 008e  ld   $8e
              b735 0018  ld   $18
              b736 0069  ld   $69
              b737 0007  ld   $07
              b738 0090  ld   $90
              b739 0001  ld   $01
              b73a 00c8  ld   $c8
              b73b 0085  ld   $85
              b73c 008b  ld   $8b
              b73d 0084  ld   $84
              b73e 008c  ld   $8c
              b73f 0020  ld   $20
              b740 00cb  ld   $cb
              b741 0004  ld   $04
              b742 00a5  ld   $a5
              b743 008b  ld   $8b
              b744 00a4  ld   $a4
              b745 008c  ld   $8c
              b746 00c8  ld   $c8
              b747 0085  ld   $85
              b748 0061  ld   $61
              b749 0084  ld   $84
              b74a 0062  ld   $62
              b74b 00a0  ld   $a0
              b74c 0000  ld   $00
              b74d 00a5  ld   $a5
              b74e 0077  ld   $77
              b74f 0091  ld   $91
              b750 0092  ld   $92
              b751 00c8  ld   $c8
              b752 00a5  ld   $a5
              b753 0078  ld   $78
              b754 0091  ld   $91
              b755 0092  ld   $92
              b756 00a9  ld   $a9
              b757 0000  ld   $00
              b758 00c8  ld   $c8
              b759 0091  ld   $91
              b75a 0092  ld   $92
              b75b 00c8  ld   $c8
              b75c 0091  ld   $91
              b75d 0092  ld   $92
              b75e 00c8  ld   $c8
              b75f 0091  ld   $91
              b760 0092  ld   $92
              b761 00c8  ld   $c8
              b762 0091  ld   $91
              b763 0092  ld   $92
              b764 00c8  ld   $c8
              b765 0091  ld   $91
              b766 0092  ld   $92
              b767 00a5  ld   $a5
              b768 0092  ld   $92
              b769 0018  ld   $18
              b76a 0069  ld   $69
              b76b 0002  ld   $02
              b76c 00a4  ld   $a4
              b76d 0093  ld   $93
              b76e 0090  ld   $90
              b76f 0001  ld   $01
              b770 00c8  ld   $c8
              b771 0085  ld   $85
              b772 0079  ld   $79
              b773 0084  ld   $84
              b774 007a  ld   $7a
              b775 0060  ld   $60
              b776 00a5  ld   $a5
              b777 003d  ld   $3d
              b778 000a  ld   $0a
              b779 0069  ld   $69
              b77a 0005  ld   $05
              b77b 0065  ld   $65
              b77c 0092  ld   $92
              b77d 00a4  ld   $a4
              b77e 0093  ld   $93
              b77f 0090  ld   $90
              b780 0001  ld   $01
              b781 00c8  ld   $c8
              b782 0085  ld   $85
              b783 008b  ld   $8b
              b784 0084  ld   $84
              b785 008c  ld   $8c
              b786 0060  ld   $60
              b787 0090  ld   $90
              b788 0080  ld   $80
              b789 0000  ld   $00
              b78a 0000  ld   $00
              b78b 0020  ld   $20
              b78c 006b  ld   $6b
              b78d 0022  ld   $22
              b78e 0020  ld   $20
              b78f 000a  ld   $0a
              b790 000e  ld   $0e
              b791 0020  ld   $20
              b792 00f9  ld   $f9
              b793 000d  ld   $0d
              b794 00a5  ld   $a5
              b795 0099  ld   $99
              b796 0030  ld   $30
              b797 000d  ld   $0d
              b798 00a5  ld   $a5
              b799 0094  ld   $94
              b79a 00c9  ld   $c9
              b79b 0012  ld   $12
              b79c 0000  ld   $00
              b79d 0000  ld   $00
              b79e 0090  ld   $90
              b79f 0090  ld   $90
              b7a0 0009  ld   $09
              b7a1 00a9  ld   $a9
              b7a2 00ec  ld   $ec
              b7a3 00a0  ld   $a0
              b7a4 0011  ld   $11
              b7a5 0020  ld   $20
              b7a6 00d3  ld   $d3
              b7a7 001c  ld   $1c
              b7a8 00d0  ld   $d0
              b7a9 0076  ld   $76
              b7aa 004c  ld   $4c
              b7ab 0013  ld   $13
              b7ac 001d  ld   $1d
              b7ad 00a5  ld   $a5
              b7ae 003e  ld   $3e
              b7af 0005  ld   $05
              b7b0 0040  ld   $40
              b7b1 0048  ld   $48
              b7b2 00a5  ld   $a5
              b7b3 003f  ld   $3f
              b7b4 0048  ld   $48
              b7b5 00a0  ld   $a0
              b7b6 0000  ld   $00
              b7b7 0098  ld   $98
              b7b8 0048  ld   $48
              b7b9 00a5  ld   $a5
              b7ba 0078  ld   $78
              b7bb 0048  ld   $48
              b7bc 00a5  ld   $a5
              b7bd 0077  ld   $77
              b7be 0048  ld   $48
              b7bf 0020  ld   $20
              b7c0 00f0  ld   $f0
              b7c1 0011  ld   $11
              b7c2 0068  ld   $68
              b7c3 0085  ld   $85
              b7c4 0077  ld   $77
              b7c5 0068  ld   $68
              b7c6 0085  ld   $85
              b7c7 0078  ld   $78
              b7c8 0068  ld   $68
              b7c9 00a8  ld   $a8
              b7ca 00ba  ld   $ba
              b7cb 00b5  ld   $b5
              b7cc 0002  ld   $02
              b7cd 0048  ld   $48
              b7ce 00b5  ld   $b5
              b7cf 0001  ld   $01
              b7d0 0048  ld   $48
              b7d1 00a5  ld   $a5
              b7d2 0097  ld   $97
              b7d3 0095  ld   $95
              b7d4 0002  ld   $02
              b7d5 00a5  ld   $a5
              b7d6 0098  ld   $98
              b7d7 0095  ld   $95
              b7d8 0001  ld   $01
              b7d9 00c8  ld   $c8
              b7da 0020  ld   $20
              b7db 0071  ld   $71
              b7dc 0022  ld   $22
              b7dd 00c9  ld   $c9
              b7de 002c  ld   $2c
              b7df 00f0  ld   $f0
              b7e0 00d6  ld   $d6
              b7e1 0084  ld   $84
              b7e2 003d  ld   $3d
              b7e3 0020  ld   $20
              b7e4 005d  ld   $5d
              b7e5 000f  ld   $0f
              b7e6 0068  ld   $68
              b7e7 0085  ld   $85
              b7e8 003f  ld   $3f
              b7e9 0068  ld   $68
              b7ea 0085  ld   $85
              b7eb 0040  ld   $40
              b7ec 0029  ld   $29
              b7ed 007f  ld   $7f
              b7ee 0085  ld   $85
              b7ef 003e  ld   $3e
              b7f0 00a6  ld   $a6
              b7f1 0061  ld   $61
              b7f2 00a5  ld   $a5
              b7f3 0062  ld   $62
              b7f4 0086  ld   $86
              b7f5 0092  ld   $92
              b7f6 0085  ld   $85
              b7f7 0093  ld   $93
              b7f8 00c5  ld   $c5
              b7f9 0064  ld   $64
              b7fa 00d0  ld   $d0
              b7fb fe00  bra  ac          ;+-----------------------------------+
              b7fc fcfd  bra  $b7fd       ;|                                   |
              b7fd 1418  ld   $18,y       ;| Trampoline for page $b700 lookups |
              b7fe e006  jmp  y,$06       ;|                                   |
              b7ff c218  st   [$18]       ;+-----------------------------------+
              b800 0004  ld   $04
              b801 00e4  ld   $e4
              b802 0063  ld   $63
              b803 00f0  ld   $f0
              b804 0039  ld   $39
              b805 00a0  ld   $a0
              b806 0000  ld   $00
              b807 00b1  ld   $b1
              b808 0092  ld   $92
              b809 00c8  ld   $c8
              b80a 00c5  ld   $c5
              b80b 0077  ld   $77
              b80c 00d0  ld   $d0
              b80d 0006  ld   $06
              b80e 00a5  ld   $a5
              b80f 0078  ld   $78
              b810 00d1  ld   $d1
              b811 0092  ld   $92
              b812 00f0  ld   $f0
              b813 0016  ld   $16
              b814 00c8  ld   $c8
              b815 00b1  ld   $b1
              b816 0092  ld   $92
              b817 0018  ld   $18
              b818 0065  ld   $65
              b819 0092  ld   $92
              b81a 00aa  ld   $aa
              b81b 00c8  ld   $c8
              b81c 00b1  ld   $b1
              b81d 0092  ld   $92
              b81e 0065  ld   $65
              b81f 0093  ld   $93
              b820 0090  ld   $90
              b821 00d7  ld   $d7
              b822 00a2  ld   $a2
              b823 006b  ld   $6b
              b824 002c  ld   $2c
              b825 00a2  ld   $a2
              b826 0035  ld   $35
              b827 004c  ld   $4c
              b828 004a  ld   $4a
              b829 0005  ld   $05
              b82a 00a2  ld   $a2
              b82b 0078  ld   $78
              b82c 00a5  ld   $a5
              b82d 003e  ld   $3e
              b82e 00d0  ld   $d0
              b82f 00f7  ld   $f7
              b830 0020  ld   $20
              b831 00db  ld   $db
              b832 0011  ld   $11
              b833 00a5  ld   $a5
              b834 003d  ld   $3d
              b835 00a0  ld   $a0
              b836 0004  ld   $04
              b837 00d1  ld   $d1
              b838 0092  ld   $92
              b839 00d0  ld   $d0
              b83a 00e7  ld   $e7
              b83b 004c  ld   $4c
              b83c 0025  ld   $25
              b83d 0013  ld   $13
              b83e 0020  ld   $20
              b83f 00db  ld   $db
              b840 0011  ld   $11
              b841 0020  ld   $20
              b842 001b  ld   $1b
              b843 0005  ld   $05
              b844 00a9  ld   $a9
              b845 0000  ld   $00
              b846 00a8  ld   $a8
              b847 0085  ld   $85
              b848 00a5  ld   $a5
              b849 00a2  ld   $a2
              b84a 0005  ld   $05
              b84b 00a5  ld   $a5
              b84c 0077  ld   $77
              b84d 0091  ld   $91
              b84e 0092  ld   $92
              b84f 0010  ld   $10
              b850 0001  ld   $01
              b851 00ca  ld   $ca
              b852 00c8  ld   $c8
              b853 00a5  ld   $a5
              b854 0078  ld   $78
              b855 0091  ld   $91
              b856 0092  ld   $92
              b857 0010  ld   $10
              b858 0002  ld   $02
              b859 00ca  ld   $ca
              b85a 00ca  ld   $ca
              b85b 0086  ld   $86
              b85c 00a4  ld   $a4
              b85d 00a5  ld   $a5
              b85e 003d  ld   $3d
              b85f 00c8  ld   $c8
              b860 00c8  ld   $c8
              b861 00c8  ld   $c8
              b862 0091  ld   $91
              b863 0092  ld   $92
              b864 00a2  ld   $a2
              b865 000b  ld   $0b
              b866 00a9  ld   $a9
              b867 0000  ld   $00
              b868 0024  ld   $24
              b869 003e  ld   $3e
              b86a 0050  ld   $50
              b86b 0008  ld   $08
              b86c 0068  ld   $68
              b86d 0018  ld   $18
              b86e 0069  ld   $69
              b86f 0001  ld   $01
              b870 00aa  ld   $aa
              b871 0068  ld   $68
              b872 0069  ld   $69
              b873 0000  ld   $00
              b874 00c8  ld   $c8
              b875 0091  ld   $91
              b876 0092  ld   $92
              b877 00c8  ld   $c8
              b878 008a  ld   $8a
              b879 0091  ld   $91
              b87a 0092  ld   $92
              b87b 0020  ld   $20
              b87c 0087  ld   $87
              b87d 0013  ld   $13
              b87e 0086  ld   $86
              b87f 00a4  ld   $a4
              b880 0085  ld   $85
              b881 00a5  ld   $a5
              b882 00a4  ld   $a4
              b883 0054  ld   $54
              b884 00c6  ld   $c6
              b885 003d  ld   $3d
              b886 00d0  ld   $d0
              b887 00dc  ld   $dc
              b888 0065  ld   $65
              b889 008c  ld   $8c
              b88a 00b0  ld   $b0
              b88b 005d  ld   $5d
              b88c 0085  ld   $85
              b88d 008c  ld   $8c
              b88e 00a8  ld   $a8
              b88f 008a  ld   $8a
              b890 0065  ld   $65
              b891 008b  ld   $8b
              b892 0090  ld   $90
              b893 0003  ld   $03
              b894 00c8  ld   $c8
              b895 00f0  ld   $f0
              b896 0052  ld   $52
              b897 0020  ld   $20
              b898 001b  ld   $1b
              b899 0005  ld   $05
              b89a 0085  ld   $85
              b89b 0063  ld   $63
              b89c 0084  ld   $84
              b89d 0064  ld   $64
              b89e 00a9  ld   $a9
              b89f 0000  ld   $00
              b8a0 00e6  ld   $e6
              b8a1 00a5  ld   $a5
              b8a2 00a4  ld   $a4
              b8a3 0013  ld   $13
              b8a4 0000  ld   $00
              b8a5 0000  ld   $00
              b8a6 00a4  ld   $a4
              b8a7 00f0  ld   $f0
              b8a8 0005  ld   $05
              b8a9 0088  ld   $88
              b8aa 0091  ld   $91
              b8ab 008b  ld   $8b
              b8ac 00d0  ld   $d0
              b8ad 00fb  ld   $fb
              b8ae 00c6  ld   $c6
              b8af 008c  ld   $8c
              b8b0 00c6  ld   $c6
              b8b1 00a5  ld   $a5
              b8b2 00d0  ld   $d0
              b8b3 00f5  ld   $f5
              b8b4 00e6  ld   $e6
              b8b5 008c  ld   $8c
              b8b6 0038  ld   $38
              b8b7 00a5  ld   $a5
              b8b8 0063  ld   $63
              b8b9 00e5  ld   $e5
              b8ba 0092  ld   $92
              b8bb 00a0  ld   $a0
              b8bc 0002  ld   $02
              b8bd 0091  ld   $91
              b8be 0092  ld   $92
              b8bf 00a5  ld   $a5
              b8c0 0064  ld   $64
              b8c1 00c8  ld   $c8
              b8c2 00e5  ld   $e5
              b8c3 0093  ld   $93
              b8c4 0091  ld   $91
              b8c5 0092  ld   $92
              b8c6 00a5  ld   $a5
              b8c7 003e  ld   $3e
              b8c8 00d0  ld   $d0
              b8c9 0062  ld   $62
              b8ca 00c8  ld   $c8
              b8cb 00b1  ld   $b1
              b8cc 0092  ld   $92
              b8cd 0085  ld   $85
              b8ce 003d  ld   $3d
              b8cf 00a9  ld   $a9
              b8d0 0000  ld   $00
              b8d1 0085  ld   $85
              b8d2 00a4  ld   $a4
              b8d3 0085  ld   $85
              b8d4 00a5  ld   $a5
              b8d5 00c8  ld   $c8
              b8d6 0068  ld   $68
              b8d7 00aa  ld   $aa
              b8d8 0085  ld   $85
              b8d9 0097  ld   $97
              b8da 0068  ld   $68
              b8db 0085  ld   $85
              b8dc 0098  ld   $98
              b8dd 00d1  ld   $d1
              b8de 0092  ld   $92
              b8df 0090  ld   $90
              b8e0 000e  ld   $0e
              b8e1 00d0  ld   $d0
              b8e2 0006  ld   $06
              b8e3 00c8  ld   $c8
              b8e4 008a  ld   $8a
              b8e5 00d1  ld   $d1
              b8e6 0092  ld   $92
              b8e7 0090  ld   $90
              b8e8 0007  ld   $07
              b8e9 004c  ld   $4c
              b8ea 007f  ld   $7f
              b8eb 0012  ld   $12
              b8ec 004c  ld   $4c
              b8ed 0048  ld   $48
              b8ee 0005  ld   $05
              b8ef 00c8  ld   $c8
              b8f0 00a5  ld   $a5
              b8f1 00a5  ld   $a5
              b8f2 0005  ld   $05
              b8f3 00a4  ld   $a4
              b8f4 0018  ld   $18
              b8f5 00f0  ld   $f0
              b8f6 000a  ld   $0a
              b8f7 0020  ld   $20
              b8f8 0087  ld   $87
              b8f9 0013  ld   $13
              b8fa 008a  ld   $8a
              b8fb fe00  bra  ac          ;+-----------------------------------+
              b8fc fcfd  bra  $b8fd       ;|                                   |
              b8fd 1418  ld   $18,y       ;| Trampoline for page $b800 lookups |
              b8fe e006  jmp  y,$06       ;|                                   |
              b8ff c218  st   [$18]       ;+-----------------------------------+
              b900 0065  ld   $65
              b901 0097  ld   $97
              b902 00aa  ld   $aa
              b903 0098  ld   $98
              b904 00a4  ld   $a4
              b905 0054  ld   $54
              b906 0065  ld   $65
              b907 0098  ld   $98
              b908 0086  ld   $86
              b909 00a4  ld   $a4
              b90a 00c6  ld   $c6
              b90b 003d  ld   $3d
              b90c 00d0  ld   $d0
              b90d 00ca  ld   $ca
              b90e 0085  ld   $85
              b90f 00a5  ld   $a5
              b910 00a2  ld   $a2
              b911 0005  ld   $05
              b912 00a5  ld   $a5
              b913 0077  ld   $77
              b914 0010  ld   $10
              b915 0001  ld   $01
              b916 00ca  ld   $ca
              b917 00a5  ld   $a5
              b918 0078  ld   $78
              b919 0010  ld   $10
              b91a 0002  ld   $02
              b91b 00ca  ld   $ca
              b91c 00ca  ld   $ca
              b91d 0086  ld   $86
              b91e 005a  ld   $5a
              b91f 00a9  ld   $a9
              b920 0000  ld   $00
              b921 0020  ld   $20
              b922 0090  ld   $90
              b923 0013  ld   $13
              b924 008a  ld   $8a
              b925 0065  ld   $65
              b926 008b  ld   $8b
              b927 0085  ld   $85
              b928 0079  ld   $79
              b929 0098  ld   $98
              b92a 0065  ld   $65
              b92b 008c  ld   $8c
              b92c 0085  ld   $85
              b92d 007a  ld   $7a
              b92e 00a8  ld   $a8
              b92f 00a5  ld   $a5
              b930 0079  ld   $79
              b931 0060  ld   $60
              b932 0084  ld   $84
              b933 0054  ld   $54
              b934 00b1  ld   $b1
              b935 0092  ld   $92
              b936 0085  ld   $85
              b937 005a  ld   $5a
              b938 0088  ld   $88
              b939 00b1  ld   $b1
              b93a 0092  ld   $92
              b93b 0085  ld   $85
              b93c 005b  ld   $5b
              b93d 00a9  ld   $a9
              b93e 0010  ld   $10
              b93f 0085  ld   $85
              b940 0090  ld   $90
              b941 00a2  ld   $a2
              b942 0000  ld   $00
              b943 00a0  ld   $a0
              b944 0000  ld   $00
              b945 008a  ld   $8a
              b946 000a  ld   $0a
              b947 00aa  ld   $aa
              b948 0098  ld   $98
              b949 002a  ld   $2a
              b94a 00a8  ld   $a8
              b94b 00b0  ld   $b0
              b94c 00a4  ld   $a4
              b94d 0006  ld   $06
              b94e 00a4  ld   $a4
              b94f 0026  ld   $26
              b950 00a5  ld   $a5
              b951 0090  ld   $90
              b952 000b  ld   $0b
              b953 0018  ld   $18
              b954 008a  ld   $8a
              b955 0065  ld   $65
              b956 005a  ld   $5a
              b957 00aa  ld   $aa
              b958 0098  ld   $98
              b959 0065  ld   $65
              b95a 005b  ld   $5b
              b95b 00a8  ld   $a8
              b95c 00b0  ld   $b0
              b95d 0093  ld   $93
              b95e 00c6  ld   $c6
              b95f 0090  ld   $90
              b960 00d0  ld   $d0
              b961 00e3  ld   $e3
              b962 0060  ld   $60
              b963 00a5  ld   $a5
              b964 003f  ld   $3f
              b965 00f0  ld   $f0
              b966 0003  ld   $03
              b967 0020  ld   $20
              b968 00e2  ld   $e2
              b969 0016  ld   $16
              b96a 0020  ld   $20
              b96b 0062  ld   $62
              b96c 0015  ld   $15
              b96d 0038  ld   $38
              b96e 00a5  ld   $a5
              b96f 0065  ld   $65
              b970 00e5  ld   $e5
              b971 0063  ld   $63
              b972 00a8  ld   $a8
              b973 00a5  ld   $a5
              b974 0066  ld   $66
              b975 00e5  ld   $e5
              b976 0064  ld   $64
              b977 00a2  ld   $a2
              b978 0000  ld   $00
              b979 0086  ld   $86
              b97a 003f  ld   $3f
              b97b 0085  ld   $85
              b97c 0095  ld   $95
              b97d 0084  ld   $84
              b97e 0096  ld   $96
              b97f 00a2  ld   $a2
              b980 0090  ld   $90
              b981 004c  ld   $4c
              b982 00bc  ld   $bc
              b983 001c  ld   $1c
              b984 00a5  ld   $a5
              b985 0030  ld   $30
              b986 0020  ld   $20
              b987 007a  ld   $7a
              b988 0004  ld   $04
              b989 00a9  ld   $a9
              b98a 0000  ld   $00
              b98b 00f0  ld   $f0
              b98c 00ea  ld   $ea
              b98d 00a6  ld   $a6
              b98e 006c  ld   $6c
              b98f 00e8  ld   $e8
              b990 00d0  ld   $d0
              b991 009f  ld   $9f
              b992 00a2  ld   $a2
              b993 0095  ld   $95
              b994 002c  ld   $2c
              b995 00a2  ld   $a2
              b996 00e0  ld   $e0
              b997 004c  ld   $4c
              b998 004a  ld   $4a
              b999 0005  ld   $05
              b99a 0020  ld   $20
              b99b 001d  ld   $1d
              b99c 0014  ld   $14
              b99d 0020  ld   $20
              b99e 00e2  ld   $e2
              b99f 0013  ld   $13
              b9a0 0020  ld   $20
              b9a1 0060  ld   $60
              b9a2 000f  ld   $0f
              b9a3 00a9  ld   $a9
              b9a4 0080  ld   $80
              b9a5 0085  ld   $85
              b9a6 0042  ld   $42
              b9a7 0020  ld   $20
              b9a8 00d0  ld   $d0
              b9a9 0010  ld   $10
              b9aa 0020  ld   $20
              b9ab 0014  ld   $14
              b9ac 0000  ld   $00
              b9ad 0000  ld   $00
              b9ae 00f9  ld   $f9
              b9af 000d  ld   $0d
              b9b0 0020  ld   $20
              b9b1 005d  ld   $5d
              b9b2 000f  ld   $0f
              b9b3 00a9  ld   $a9
              b9b4 00ac  ld   $ac
              b9b5 0020  ld   $20
              b9b6 0065  ld   $65
              b9b7 000f  ld   $0f
              b9b8 0048  ld   $48
              b9b9 00a5  ld   $a5
              b9ba 007a  ld   $7a
              b9bb 0048  ld   $48
              b9bc 00a5  ld   $a5
              b9bd 0079  ld   $79
              b9be 0048  ld   $48
              b9bf 00a5  ld   $a5
              b9c0 00a7  ld   $a7
              b9c1 0048  ld   $48
              b9c2 00a5  ld   $a5
              b9c3 00a6  ld   $a6
              b9c4 0048  ld   $48
              b9c5 0020  ld   $20
              b9c6 00e7  ld   $e7
              b9c7 0009  ld   $09
              b9c8 004c  ld   $4c
              b9c9 008b  ld   $8b
              b9ca 0014  ld   $14
              b9cb 00a9  ld   $a9
              b9cc 009f  ld   $9f
              b9cd 0020  ld   $20
              b9ce 0065  ld   $65
              b9cf 000f  ld   $0f
              b9d0 0009  ld   $09
              b9d1 0080  ld   $80
              b9d2 0085  ld   $85
              b9d3 0042  ld   $42
              b9d4 0020  ld   $20
              b9d5 00d7  ld   $d7
              b9d6 0010  ld   $10
              b9d7 0085  ld   $85
              b9d8 0081  ld   $81
              b9d9 0084  ld   $84
              b9da 0082  ld   $82
              b9db 004c  ld   $4c
              b9dc 00f9  ld   $f9
              b9dd 000d  ld   $0d
              b9de 0020  ld   $20
              b9df 001d  ld   $1d
              b9e0 0014  ld   $14
              b9e1 00a5  ld   $a5
              b9e2 0082  ld   $82
              b9e3 0048  ld   $48
              b9e4 00a5  ld   $a5
              b9e5 0081  ld   $81
              b9e6 0048  ld   $48
              b9e7 0020  ld   $20
              b9e8 0057  ld   $57
              b9e9 000f  ld   $0f
              b9ea 0020  ld   $20
              b9eb 00f9  ld   $f9
              b9ec 000d  ld   $0d
              b9ed 0068  ld   $68
              b9ee 0085  ld   $85
              b9ef 0081  ld   $81
              b9f0 0068  ld   $68
              b9f1 0085  ld   $85
              b9f2 0082  ld   $82
              b9f3 00a0  ld   $a0
              b9f4 0002  ld   $02
              b9f5 00b1  ld   $b1
              b9f6 0081  ld   $81
              b9f7 0085  ld   $85
              b9f8 0079  ld   $79
              b9f9 00aa  ld   $aa
              b9fa 00c8  ld   $c8
              b9fb fe00  bra  ac          ;+-----------------------------------+
              b9fc fcfd  bra  $b9fd       ;|                                   |
              b9fd 1418  ld   $18,y       ;| Trampoline for page $b900 lookups |
              b9fe e006  jmp  y,$06       ;|                                   |
              b9ff c218  st   [$18]       ;+-----------------------------------+
              ba00 00b1  ld   $b1
              ba01 0081  ld   $81
              ba02 00f0  ld   $f0
              ba03 0099  ld   $99
              ba04 0085  ld   $85
              ba05 007a  ld   $7a
              ba06 00c8  ld   $c8
              ba07 00b1  ld   $b1
              ba08 0079  ld   $79
              ba09 0048  ld   $48
              ba0a 0088  ld   $88
              ba0b 0010  ld   $10
              ba0c 00fa  ld   $fa
              ba0d 00a4  ld   $a4
              ba0e 007a  ld   $7a
              ba0f 0020  ld   $20
              ba10 004c  ld   $4c
              ba11 001c  ld   $1c
              ba12 00a5  ld   $a5
              ba13 00a7  ld   $a7
              ba14 0048  ld   $48
              ba15 00a5  ld   $a5
              ba16 00a6  ld   $a6
              ba17 0048  ld   $48
              ba18 00b1  ld   $b1
              ba19 0081  ld   $81
              ba1a 0085  ld   $85
              ba1b 00a6  ld   $a6
              ba1c 00c8  ld   $c8
              ba1d 00b1  ld   $b1
              ba1e 0081  ld   $81
              ba1f 0085  ld   $85
              ba20 00a7  ld   $a7
              ba21 00a5  ld   $a5
              ba22 007a  ld   $7a
              ba23 0048  ld   $48
              ba24 00a5  ld   $a5
              ba25 0079  ld   $79
              ba26 0048  ld   $48
              ba27 0020  ld   $20
              ba28 00f6  ld   $f6
              ba29 000d  ld   $0d
              ba2a 0068  ld   $68
              ba2b 0085  ld   $85
              ba2c 0081  ld   $81
              ba2d 0068  ld   $68
              ba2e 0085  ld   $85
              ba2f 0082  ld   $82
              ba30 0020  ld   $20
              ba31 0071  ld   $71
              ba32 0022  ld   $22
              ba33 00f0  ld   $f0
              ba34 0003  ld   $03
              ba35 004c  ld   $4c
              ba36 006e  ld   $6e
              ba37 000f  ld   $0f
              ba38 0068  ld   $68
              ba39 0085  ld   $85
              ba3a 00a6  ld   $a6
              ba3b 0068  ld   $68
              ba3c 0085  ld   $85
              ba3d 00a7  ld   $a7
              ba3e 00a0  ld   $a0
              ba3f 0000  ld   $00
              ba40 0068  ld   $68
              ba41 0091  ld   $91
              ba42 0081  ld   $81
              ba43 0068  ld   $68
              ba44 00c8  ld   $c8
              ba45 0091  ld   $91
              ba46 0081  ld   $81
              ba47 0068  ld   $68
              ba48 00c8  ld   $c8
              ba49 0091  ld   $91
              ba4a 0081  ld   $81
              ba4b 0068  ld   $68
              ba4c 00c8  ld   $c8
              ba4d 0091  ld   $91
              ba4e 0081  ld   $81
              ba4f 0068  ld   $68
              ba50 00c8  ld   $c8
              ba51 0091  ld   $91
              ba52 0081  ld   $81
              ba53 0060  ld   $60
              ba54 0020  ld   $20
              ba55 00f9  ld   $f9
              ba56 000d  ld   $0d
              ba57 00a0  ld   $a0
              ba58 0000  ld   $00
              ba59 0020  ld   $20
              ba5a 0057  ld   $57
              ba5b 001e  ld   $1e
              ba5c 0068  ld   $68
              ba5d 0068  ld   $68
              ba5e 00a9  ld   $a9
              ba5f 0004  ld   $04
              ba60 00a0  ld   $a0
              ba61 0002  ld   $02
              ba62 00d0  ld   $d0
              ba63 0012  ld   $12
              ba64 00a6  ld   $a6
              ba65 0097  ld   $97
              ba66 00a4  ld   $a4
              ba67 0098  ld   $98
              ba68 0086  ld   $86
              ba69 0083  ld   $83
              ba6a 0084  ld   $84
              ba6b 0084  ld   $84
              ba6c 0020  ld   $20
              ba6d 0030  ld   $30
              ba6e 0015  ld   $15
              ba6f 0086  ld   $86
              ba70 0095  ld   $95
              ba71 0084  ld   $84
              ba72 0096  ld   $96
              ba73 0085  ld   $85
              ba74 0094  ld   $94
              ba75 0060  ld   $60
              ba76 00a2  ld   $a2
              ba77 0022  ld   $22
              ba78 0086  ld   $86
              ba79 003b  ld   $3b
              ba7a 0086  ld   $86
              ba7b 003c  ld   $3c
              ba7c 0085  ld   $85
              ba7d 00a2  ld   $a2
              ba7e 0084  ld   $84
              ba7f 00a3  ld   $a3
              ba80 0085  ld   $85
              ba81 0095  ld   $95
              ba82 0084  ld   $84
              ba83 0096  ld   $96
              ba84 00a0  ld   $a0
              ba85 00ff  ld   $ff
              ba86 00c8  ld   $c8
              ba87 00b1  ld   $b1
              ba88 00a2  ld   $a2
              ba89 00f0  ld   $f0
              ba8a 000c  ld   $0c
              ba8b 00c5  ld   $c5
              ba8c 003b  ld   $3b
              ba8d 00f0  ld   $f0
              ba8e 0004  ld   $04
              ba8f 00c5  ld   $c5
              ba90 003c  ld   $3c
              ba91 00d0  ld   $d0
              ba92 00f3  ld   $f3
              ba93 00c9  ld   $c9
              ba94 0022  ld   $22
              ba95 00f0  ld   $f0
              ba96 0001  ld   $01
              ba97 0018  ld   $18
              ba98 0084  ld   $84
              ba99 0094  ld   $94
              ba9a 0098  ld   $98
              ba9b 0065  ld   $65
              ba9c 00a2  ld   $a2
              ba9d 0085  ld   $85
              ba9e 00a4  ld   $a4
              ba9f 00a6  ld   $a6
              baa0 00a3  ld   $a3
              baa1 0090  ld   $90
              baa2 0001  ld   $01
              baa3 00e8  ld   $e8
              baa4 0086  ld   $86
              baa5 00a5  ld   $a5
              baa6 00a5  ld   $a5
              baa7 00a3  ld   $a3
              baa8 00f0  ld   $f0
              baa9 0004  ld   $04
              baaa 00c9  ld   $c9
              baab 0024  ld   $24
              baac 00d0  ld   $d0
              baad 000b  ld   $0b
              baae 0098  ld   $98
              baaf 0020  ld   $20
              bab0 00b1  ld   $b1
              bab1 0014  ld   $14
              bab2 00a6  ld   $a6
              bab3 0015  ld   $15
              bab4 0000  ld   $00
              bab5 0000  ld   $00
              bab6 00a2  ld   $a2
              bab7 00a4  ld   $a4
              bab8 00a3  ld   $a3
              bab9 0020  ld   $20
              baba 00c4  ld   $c4
              babb 0016  ld   $16
              babc 00a6  ld   $a6
              babd 0048  ld   $48
              babe 00e0  ld   $e0
              babf 0054  ld   $54
              bac0 00d0  ld   $d0
              bac1 0005  ld   $05
              bac2 00a2  ld   $a2
              bac3 00bf  ld   $bf
              bac4 004c  ld   $4c
              bac5 004a  ld   $4a
              bac6 0005  ld   $05
              bac7 00a5  ld   $a5
              bac8 0094  ld   $94
              bac9 0095  ld   $95
              baca 0000  ld   $00
              bacb 00a5  ld   $a5
              bacc 0095  ld   $95
              bacd 0095  ld   $95
              bace 0001  ld   $01
              bacf 00a5  ld   $a5
              bad0 0096  ld   $96
              bad1 0095  ld   $95
              bad2 0002  ld   $02
              bad3 00a0  ld   $a0
              bad4 0000  ld   $00
              bad5 0086  ld   $86
              bad6 0097  ld   $97
              bad7 0084  ld   $84
              bad8 0098  ld   $98
              bad9 0084  ld   $84
              bada 00a3  ld   $a3
              badb 0088  ld   $88
              badc 0084  ld   $84
              badd 003f  ld   $3f
              bade 0086  ld   $86
              badf 0049  ld   $49
              bae0 00e8  ld   $e8
              bae1 00e8  ld   $e8
              bae2 00e8  ld   $e8
              bae3 0086  ld   $86
              bae4 0048  ld   $48
              bae5 0060  ld   $60
              bae6 0046  ld   $46
              bae7 0041  ld   $41
              bae8 0048  ld   $48
              bae9 0049  ld   $49
              baea 00ff  ld   $ff
              baeb 0038  ld   $38
              baec 0065  ld   $65
              baed 0065  ld   $65
              baee 00a4  ld   $a4
              baef 0066  ld   $66
              baf0 00b0  ld   $b0
              baf1 0001  ld   $01
              baf2 0088  ld   $88
              baf3 00c4  ld   $c4
              baf4 0064  ld   $64
              baf5 0090  ld   $90
              baf6 0011  ld   $11
              baf7 00d0  ld   $d0
              baf8 0004  ld   $04
              baf9 00c5  ld   $c5
              bafa 0063  ld   $63
              bafb fe00  bra  ac          ;+-----------------------------------+
              bafc fcfd  bra  $bafd       ;|                                   |
              bafd 1418  ld   $18,y       ;| Trampoline for page $ba00 lookups |
              bafe e006  jmp  y,$06       ;|                                   |
              baff c218  st   [$18]       ;+-----------------------------------+
              bb00 0090  ld   $90
              bb01 000b  ld   $0b
              bb02 0085  ld   $85
              bb03 0065  ld   $65
              bb04 0084  ld   $84
              bb05 0066  ld   $66
              bb06 0085  ld   $85
              bb07 0067  ld   $67
              bb08 0084  ld   $84
              bb09 0068  ld   $68
              bb0a 00aa  ld   $aa
              bb0b 0068  ld   $68
              bb0c 0060  ld   $60
              bb0d 00a2  ld   $a2
              bb0e 004d  ld   $4d
              bb0f 00a5  ld   $a5
              bb10 0041  ld   $41
              bb11 0030  ld   $30
              bb12 00b6  ld   $b6
              bb13 0020  ld   $20
              bb14 0062  ld   $62
              bb15 0015  ld   $15
              bb16 00a9  ld   $a9
              bb17 0080  ld   $80
              bb18 0085  ld   $85
              bb19 0041  ld   $41
              bb1a 0068  ld   $68
              bb1b 00d0  ld   $d0
              bb1c 00d0  ld   $d0
              bb1d 00a6  ld   $a6
              bb1e 0069  ld   $69
              bb1f 00a5  ld   $a5
              bb20 006a  ld   $6a
              bb21 0086  ld   $86
              bb22 0065  ld   $65
              bb23 0085  ld   $85
              bb24 0066  ld   $66
              bb25 00a0  ld   $a0
              bb26 0000  ld   $00
              bb27 0084  ld   $84
              bb28 0082  ld   $82
              bb29 0084  ld   $84
              bb2a 0081  ld   $81
              bb2b 00a5  ld   $a5
              bb2c 0063  ld   $63
              bb2d 00a6  ld   $a6
              bb2e 0064  ld   $64
              bb2f 0085  ld   $85
              bb30 0092  ld   $92
              bb31 0086  ld   $86
              bb32 0093  ld   $93
              bb33 00a9  ld   $a9
              bb34 004b  ld   $4b
              bb35 00a2  ld   $a2
              bb36 0000  ld   $00
              bb37 0085  ld   $85
              bb38 0054  ld   $54
              bb39 0086  ld   $86
              bb3a 0055  ld   $55
              bb3b 00c5  ld   $c5
              bb3c 0048  ld   $48
              bb3d 00f0  ld   $f0
              bb3e 0005  ld   $05
              bb3f 0020  ld   $20
              bb40 0003  ld   $03
              bb41 0016  ld   $16
              bb42 00f0  ld   $f0
              bb43 00f7  ld   $f7
              bb44 00a9  ld   $a9
              bb45 0007  ld   $07
              bb46 0085  ld   $85
              bb47 0086  ld   $86
              bb48 00a5  ld   $a5
              bb49 005f  ld   $5f
              bb4a 00a6  ld   $a6
              bb4b 0060  ld   $60
              bb4c 0085  ld   $85
              bb4d 0054  ld   $54
              bb4e 0086  ld   $86
              bb4f 0055  ld   $55
              bb50 00e4  ld   $e4
              bb51 0062  ld   $62
              bb52 00d0  ld   $d0
              bb53 0004  ld   $04
              bb54 00c5  ld   $c5
              bb55 0061  ld   $61
              bb56 00f0  ld   $f0
              bb57 0005  ld   $05
              bb58 0020  ld   $20
              bb59 00f9  ld   $f9
              bb5a 0015  ld   $15
              bb5b 00f0  ld   $f0
              bb5c 00f3  ld   $f3
              bb5d 0085  ld   $85
              bb5e 008b  ld   $8b
              bb5f 0086  ld   $86
              bb60 008c  ld   $8c
              bb61 00a9  ld   $a9
              bb62 0003  ld   $03
              bb63 0085  ld   $85
              bb64 0086  ld   $86
              bb65 00a5  ld   $a5
              bb66 008b  ld   $8b
              bb67 00a6  ld   $a6
              bb68 008c  ld   $8c
              bb69 00e4  ld   $e4
              bb6a 0064  ld   $64
              bb6b 00d0  ld   $d0
              bb6c 0007  ld   $07
              bb6d 00c5  ld   $c5
              bb6e 0063  ld   $63
              bb6f 00d0  ld   $d0
              bb70 0003  ld   $03
              bb71 004c  ld   $4c
              bb72 0042  ld   $42
              bb73 0016  ld   $16
              bb74 0085  ld   $85
              bb75 0054  ld   $54
              bb76 0086  ld   $86
              bb77 0055  ld   $55
              bb78 00a0  ld   $a0
              bb79 0000  ld   $00
              bb7a 00b1  ld   $b1
              bb7b 0054  ld   $54
              bb7c 00aa  ld   $aa
              bb7d 00c8  ld   $c8
              bb7e 00b1  ld   $b1
              bb7f 0054  ld   $54
              bb80 0008  ld   $08
              bb81 00c8  ld   $c8
              bb82 00b1  ld   $b1
              bb83 0054  ld   $54
              bb84 0065  ld   $65
              bb85 008b  ld   $8b
              bb86 0085  ld   $85
              bb87 008b  ld   $8b
              bb88 00c8  ld   $c8
              bb89 00b1  ld   $b1
              bb8a 0054  ld   $54
              bb8b 0065  ld   $65
              bb8c 008c  ld   $8c
              bb8d 0085  ld   $85
              bb8e 008c  ld   $8c
              bb8f 0028  ld   $28
              bb90 0010  ld   $10
              bb91 00d3  ld   $d3
              bb92 008a  ld   $8a
              bb93 0030  ld   $30
              bb94 00d0  ld   $d0
              bb95 00c8  ld   $c8
              bb96 00b1  ld   $b1
              bb97 0054  ld   $54
              bb98 00a0  ld   $a0
              bb99 0000  ld   $00
              bb9a 000a  ld   $0a
              bb9b 0069  ld   $69
              bb9c 0005  ld   $05
              bb9d 0065  ld   $65
              bb9e 0054  ld   $54
              bb9f 0085  ld   $85
              bba0 0054  ld   $54
              bba1 0090  ld   $90
              bba2 0002  ld   $02
              bba3 00e6  ld   $e6
              bba4 0055  ld   $55
              bba5 00a6  ld   $a6
              bba6 0055  ld   $55
              bba7 00e4  ld   $e4
              bba8 008c  ld   $8c
              bba9 00d0  ld   $d0
              bbaa 0004  ld   $04
              bbab 00c5  ld   $c5
              bbac 008b  ld   $8b
              bbad 00f0  ld   $f0
              bbae 00ba  ld   $ba
              bbaf 0020  ld   $20
              bbb0 0003  ld   $03
              bbb1 0016  ld   $16
              bbb2 00f0  ld   $f0
              bbb3 00f3  ld   $f3
              bbb4 00b1  ld   $b1
              bbb5 0054  ld   $54
              bbb6 0030  ld   $30
              bbb7 0035  ld   $35
              bbb8 00c8  ld   $c8
              bbb9 00b1  ld   $b1
              bbba 0054  ld   $54
              bbbb 0016  ld   $16
              bbbc 0000  ld   $00
              bbbd 0000  ld   $00
              bbbe 0010  ld   $10
              bbbf 0030  ld   $30
              bbc0 00c8  ld   $c8
              bbc1 00b1  ld   $b1
              bbc2 0054  ld   $54
              bbc3 00f0  ld   $f0
              bbc4 002b  ld   $2b
              bbc5 00c8  ld   $c8
              bbc6 00b1  ld   $b1
              bbc7 0054  ld   $54
              bbc8 00aa  ld   $aa
              bbc9 00c8  ld   $c8
              bbca 00b1  ld   $b1
              bbcb 0054  ld   $54
              bbcc 00c5  ld   $c5
              bbcd 0066  ld   $66
              bbce 0090  ld   $90
              bbcf 0006  ld   $06
              bbd0 00d0  ld   $d0
              bbd1 001e  ld   $1e
              bbd2 00e4  ld   $e4
              bbd3 0065  ld   $65
              bbd4 00b0  ld   $b0
              bbd5 001a  ld   $1a
              bbd6 00c5  ld   $c5
              bbd7 0093  ld   $93
              bbd8 0090  ld   $90
              bbd9 0016  ld   $16
              bbda 00d0  ld   $d0
              bbdb 0004  ld   $04
              bbdc 00e4  ld   $e4
              bbdd 0092  ld   $92
              bbde 0090  ld   $90
              bbdf 0010  ld   $10
              bbe0 0086  ld   $86
              bbe1 0092  ld   $92
              bbe2 0085  ld   $85
              bbe3 0093  ld   $93
              bbe4 00a5  ld   $a5
              bbe5 0054  ld   $54
              bbe6 00a6  ld   $a6
              bbe7 0055  ld   $55
              bbe8 0085  ld   $85
              bbe9 0081  ld   $81
              bbea 0086  ld   $86
              bbeb 0082  ld   $82
              bbec 00a5  ld   $a5
              bbed 0086  ld   $86
              bbee 0085  ld   $85
              bbef 0088  ld   $88
              bbf0 00a5  ld   $a5
              bbf1 0086  ld   $86
              bbf2 0018  ld   $18
              bbf3 0065  ld   $65
              bbf4 0054  ld   $54
              bbf5 0085  ld   $85
              bbf6 0054  ld   $54
              bbf7 0090  ld   $90
              bbf8 0002  ld   $02
              bbf9 00e6  ld   $e6
              bbfa 0055  ld   $55
              bbfb fe00  bra  ac          ;+-----------------------------------+
              bbfc fcfd  bra  $bbfd       ;|                                   |
              bbfd 1418  ld   $18,y       ;| Trampoline for page $bb00 lookups |
              bbfe e006  jmp  y,$06       ;|                                   |
              bbff c218  st   [$18]       ;+-----------------------------------+
              bc00 00a6  ld   $a6
              bc01 0055  ld   $55
              bc02 00a0  ld   $a0
              bc03 0000  ld   $00
              bc04 0060  ld   $60
              bc05 00a5  ld   $a5
              bc06 0082  ld   $82
              bc07 0005  ld   $05
              bc08 0081  ld   $81
              bc09 00f0  ld   $f0
              bc0a 00f5  ld   $f5
              bc0b 00a5  ld   $a5
              bc0c 0088  ld   $88
              bc0d 0029  ld   $29
              bc0e 0004  ld   $04
              bc0f 004a  ld   $4a
              bc10 00a8  ld   $a8
              bc11 0085  ld   $85
              bc12 0088  ld   $88
              bc13 00b1  ld   $b1
              bc14 0081  ld   $81
              bc15 0065  ld   $65
              bc16 0092  ld   $92
              bc17 0085  ld   $85
              bc18 008d  ld   $8d
              bc19 00a5  ld   $a5
              bc1a 0093  ld   $93
              bc1b 0069  ld   $69
              bc1c 0000  ld   $00
              bc1d 0085  ld   $85
              bc1e 008e  ld   $8e
              bc1f 00a5  ld   $a5
              bc20 0065  ld   $65
              bc21 00a6  ld   $a6
              bc22 0066  ld   $66
              bc23 0085  ld   $85
              bc24 008b  ld   $8b
              bc25 0086  ld   $86
              bc26 008c  ld   $8c
              bc27 0020  ld   $20
              bc28 00d2  ld   $d2
              bc29 0004  ld   $04
              bc2a 00a4  ld   $a4
              bc2b 0088  ld   $88
              bc2c 00c8  ld   $c8
              bc2d 00a5  ld   $a5
              bc2e 008b  ld   $8b
              bc2f 0091  ld   $91
              bc30 0081  ld   $81
              bc31 00aa  ld   $aa
              bc32 00e6  ld   $e6
              bc33 008c  ld   $8c
              bc34 00a5  ld   $a5
              bc35 008c  ld   $8c
              bc36 00c8  ld   $c8
              bc37 0091  ld   $91
              bc38 0081  ld   $81
              bc39 004c  ld   $4c
              bc3a 0066  ld   $66
              bc3b 0015  ld   $15
              bc3c 00a5  ld   $a5
              bc3d 0098  ld   $98
              bc3e 0048  ld   $48
              bc3f 00a5  ld   $a5
              bc40 0097  ld   $97
              bc41 0048  ld   $48
              bc42 0020  ld   $20
              bc43 00ef  ld   $ef
              bc44 000e  ld   $0e
              bc45 0020  ld   $20
              bc46 00fb  ld   $fb
              bc47 000d  ld   $0d
              bc48 0068  ld   $68
              bc49 0085  ld   $85
              bc4a 00a2  ld   $a2
              bc4b 0068  ld   $68
              bc4c 0085  ld   $85
              bc4d 00a3  ld   $a3
              bc4e 00a0  ld   $a0
              bc4f 0000  ld   $00
              bc50 00b1  ld   $b1
              bc51 00a2  ld   $a2
              bc52 0018  ld   $18
              bc53 0071  ld   $71
              bc54 0097  ld   $97
              bc55 0090  ld   $90
              bc56 0005  ld   $05
              bc57 00a2  ld   $a2
              bc58 00b0  ld   $b0
              bc59 004c  ld   $4c
              bc5a 004a  ld   $4a
              bc5b 0005  ld   $05
              bc5c 0020  ld   $20
              bc5d 00b1  ld   $b1
              bc5e 0014  ld   $14
              bc5f 0020  ld   $20
              bc60 00b6  ld   $b6
              bc61 0016  ld   $16
              bc62 00a5  ld   $a5
              bc63 0083  ld   $83
              bc64 00a4  ld   $a4
              bc65 0084  ld   $84
              bc66 0020  ld   $20
              bc67 00e6  ld   $e6
              bc68 0016  ld   $16
              bc69 0020  ld   $20
              bc6a 00c8  ld   $c8
              bc6b 0016  ld   $16
              bc6c 00a5  ld   $a5
              bc6d 00a2  ld   $a2
              bc6e 00a4  ld   $a4
              bc6f 00a3  ld   $a3
              bc70 0020  ld   $20
              bc71 00e6  ld   $e6
              bc72 0016  ld   $16
              bc73 0020  ld   $20
              bc74 0006  ld   $06
              bc75 0015  ld   $15
              bc76 004c  ld   $4c
              bc77 0024  ld   $24
              bc78 000e  ld   $0e
              bc79 00a0  ld   $a0
              bc7a 0000  ld   $00
              bc7b 00b1  ld   $b1
              bc7c 00a2  ld   $a2
              bc7d 0048  ld   $48
              bc7e 00c8  ld   $c8
              bc7f 00b1  ld   $b1
              bc80 00a2  ld   $a2
              bc81 00aa  ld   $aa
              bc82 00c8  ld   $c8
              bc83 00b1  ld   $b1
              bc84 00a2  ld   $a2
              bc85 00a8  ld   $a8
              bc86 0068  ld   $68
              bc87 0086  ld   $86
              bc88 0054  ld   $54
              bc89 0084  ld   $84
              bc8a 0055  ld   $55
              bc8b 00a8  ld   $a8
              bc8c 00f0  ld   $f0
              bc8d 000a  ld   $0a
              bc8e 0048  ld   $48
              bc8f 0088  ld   $88
              bc90 00b1  ld   $b1
              bc91 0054  ld   $54
              bc92 0091  ld   $91
              bc93 0067  ld   $67
              bc94 0098  ld   $98
              bc95 00d0  ld   $d0
              bc96 00f8  ld   $f8
              bc97 0068  ld   $68
              bc98 0018  ld   $18
              bc99 0065  ld   $65
              bc9a 0067  ld   $67
              bc9b 0085  ld   $85
              bc9c 0067  ld   $67
              bc9d 0090  ld   $90
              bc9e 0002  ld   $02
              bc9f 00e6  ld   $e6
              bca0 0068  ld   $68
              bca1 0060  ld   $60
              bca2 0020  ld   $20
              bca3 00fb  ld   $fb
              bca4 000d  ld   $0d
              bca5 00a5  ld   $a5
              bca6 0097  ld   $97
              bca7 00a4  ld   $a4
              bca8 0098  ld   $98
              bca9 0085  ld   $85
              bcaa 0054  ld   $54
              bcab 0084  ld   $84
              bcac 0055  ld   $55
              bcad 0020  ld   $20
              bcae 0017  ld   $17
              bcaf 0017  ld   $17
              bcb0 0008  ld   $08
              bcb1 00a0  ld   $a0
              bcb2 0000  ld   $00
              bcb3 00b1  ld   $b1
              bcb4 0054  ld   $54
              bcb5 0048  ld   $48
              bcb6 00c8  ld   $c8
              bcb7 00b1  ld   $b1
              bcb8 0054  ld   $54
              bcb9 00aa  ld   $aa
              bcba 00c8  ld   $c8
              bcbb 00b1  ld   $b1
              bcbc 0054  ld   $54
              bcbd 00a8  ld   $a8
              bcbe 0068  ld   $68
              bcbf 0028  ld   $28
              bcc0 00d0  ld   $d0
              bcc1 0013  ld   $13
              bcc2 00c4  ld   $c4
              bcc3 0017  ld   $17
              bcc4 0000  ld   $00
              bcc5 0000  ld   $00
              bcc6 0066  ld   $66
              bcc7 00d0  ld   $d0
              bcc8 000f  ld   $0f
              bcc9 00e4  ld   $e4
              bcca 0065  ld   $65
              bccb 00d0  ld   $d0
              bccc 000b  ld   $0b
              bccd 0048  ld   $48
              bcce 0018  ld   $18
              bccf 0065  ld   $65
              bcd0 0065  ld   $65
              bcd1 0085  ld   $85
              bcd2 0065  ld   $65
              bcd3 0090  ld   $90
              bcd4 0002  ld   $02
              bcd5 00e6  ld   $e6
              bcd6 0066  ld   $66
              bcd7 0068  ld   $68
              bcd8 0086  ld   $86
              bcd9 0054  ld   $54
              bcda 0084  ld   $84
              bcdb 0055  ld   $55
              bcdc 0060  ld   $60
              bcdd 00c4  ld   $c4
              bcde 004a  ld   $4a
              bcdf 00d0  ld   $d0
              bce0 000c  ld   $0c
              bce1 00c5  ld   $c5
              bce2 0049  ld   $49
              bce3 00d0  ld   $d0
              bce4 0008  ld   $08
              bce5 0085  ld   $85
              bce6 0048  ld   $48
              bce7 00e9  ld   $e9
              bce8 0003  ld   $03
              bce9 0085  ld   $85
              bcea 0049  ld   $49
              bceb 00a0  ld   $a0
              bcec 0000  ld   $00
              bced 0060  ld   $60
              bcee 0020  ld   $20
              bcef 00dd  ld   $dd
              bcf0 0017  ld   $17
              bcf1 008a  ld   $8a
              bcf2 0048  ld   $48
              bcf3 00a9  ld   $a9
              bcf4 0001  ld   $01
              bcf5 0020  ld   $20
              bcf6 00b9  ld   $b9
              bcf7 0014  ld   $14
              bcf8 0068  ld   $68
              bcf9 00a0  ld   $a0
              bcfa 0000  ld   $00
              bcfb fe00  bra  ac          ;+-----------------------------------+
              bcfc fcfd  bra  $bcfd       ;|                                   |
              bcfd 1418  ld   $18,y       ;| Trampoline for page $bc00 lookups |
              bcfe e006  jmp  y,$06       ;|                                   |
              bcff c218  st   [$18]       ;+-----------------------------------+
              bd00 0091  ld   $91
              bd01 0095  ld   $95
              bd02 0068  ld   $68
              bd03 0068  ld   $68
              bd04 004c  ld   $4c
              bd05 0006  ld   $06
              bd06 0015  ld   $15
              bd07 0020  ld   $20
              bd08 009d  ld   $9d
              bd09 0017  ld   $17
              bd0a 00d1  ld   $d1
              bd0b 0083  ld   $83
              bd0c 0098  ld   $98
              bd0d 0090  ld   $90
              bd0e 0004  ld   $04
              bd0f 00b1  ld   $b1
              bd10 0083  ld   $83
              bd11 00aa  ld   $aa
              bd12 0098  ld   $98
              bd13 0048  ld   $48
              bd14 008a  ld   $8a
              bd15 0048  ld   $48
              bd16 0020  ld   $20
              bd17 00b9  ld   $b9
              bd18 0014  ld   $14
              bd19 00a5  ld   $a5
              bd1a 0083  ld   $83
              bd1b 00a4  ld   $a4
              bd1c 0084  ld   $84
              bd1d 0020  ld   $20
              bd1e 00e6  ld   $e6
              bd1f 0016  ld   $16
              bd20 0068  ld   $68
              bd21 00a8  ld   $a8
              bd22 0068  ld   $68
              bd23 0018  ld   $18
              bd24 0065  ld   $65
              bd25 0054  ld   $54
              bd26 0085  ld   $85
              bd27 0054  ld   $54
              bd28 0090  ld   $90
              bd29 0002  ld   $02
              bd2a 00e6  ld   $e6
              bd2b 0055  ld   $55
              bd2c 0098  ld   $98
              bd2d 0020  ld   $20
              bd2e 00c8  ld   $c8
              bd2f 0016  ld   $16
              bd30 004c  ld   $4c
              bd31 0006  ld   $06
              bd32 0015  ld   $15
              bd33 0020  ld   $20
              bd34 009d  ld   $9d
              bd35 0017  ld   $17
              bd36 0018  ld   $18
              bd37 00f1  ld   $f1
              bd38 0083  ld   $83
              bd39 0049  ld   $49
              bd3a 00ff  ld   $ff
              bd3b 004c  ld   $4c
              bd3c 0042  ld   $42
              bd3d 0017  ld   $17
              bd3e 00a9  ld   $a9
              bd3f 00ff  ld   $ff
              bd40 0085  ld   $85
              bd41 0098  ld   $98
              bd42 0020  ld   $20
              bd43 0071  ld   $71
              bd44 0022  ld   $22
              bd45 00c9  ld   $c9
              bd46 0029  ld   $29
              bd47 00f0  ld   $f0
              bd48 0006  ld   $06
              bd49 0020  ld   $20
              bd4a 0063  ld   $63
              bd4b 000f  ld   $0f
              bd4c 0020  ld   $20
              bd4d 00da  ld   $da
              bd4e 0017  ld   $17
              bd4f 0020  ld   $20
              bd50 009d  ld   $9d
              bd51 0017  ld   $17
              bd52 00f0  ld   $f0
              bd53 004b  ld   $4b
              bd54 00ca  ld   $ca
              bd55 008a  ld   $8a
              bd56 0048  ld   $48
              bd57 0018  ld   $18
              bd58 00a2  ld   $a2
              bd59 0000  ld   $00
              bd5a 00f1  ld   $f1
              bd5b 0083  ld   $83
              bd5c 00b0  ld   $b0
              bd5d 00b6  ld   $b6
              bd5e 0049  ld   $49
              bd5f 00ff  ld   $ff
              bd60 00c5  ld   $c5
              bd61 0098  ld   $98
              bd62 0090  ld   $90
              bd63 00b1  ld   $b1
              bd64 00a5  ld   $a5
              bd65 0098  ld   $98
              bd66 00b0  ld   $b0
              bd67 00ad  ld   $ad
              bd68 0020  ld   $20
              bd69 005d  ld   $5d
              bd6a 000f  ld   $0f
              bd6b 0068  ld   $68
              bd6c 00a8  ld   $a8
              bd6d 0068  ld   $68
              bd6e 0085  ld   $85
              bd6f 0088  ld   $88
              bd70 0068  ld   $68
              bd71 0068  ld   $68
              bd72 0068  ld   $68
              bd73 00aa  ld   $aa
              bd74 0068  ld   $68
              bd75 0085  ld   $85
              bd76 0083  ld   $83
              bd77 0068  ld   $68
              bd78 0085  ld   $85
              bd79 0084  ld   $84
              bd7a 00a5  ld   $a5
              bd7b 0088  ld   $88
              bd7c 0048  ld   $48
              bd7d 0098  ld   $98
              bd7e 0048  ld   $48
              bd7f 00a0  ld   $a0
              bd80 0000  ld   $00
              bd81 008a  ld   $8a
              bd82 0060  ld   $60
              bd83 0020  ld   $20
              bd84 00be  ld   $be
              bd85 0017  ld   $17
              bd86 004c  ld   $4c
              bd87 00de  ld   $de
              bd88 0013  ld   $13
              bd89 0020  ld   $20
              bd8a 00df  ld   $df
              bd8b 0016  ld   $16
              bd8c 00a2  ld   $a2
              bd8d 0000  ld   $00
              bd8e 0086  ld   $86
              bd8f 003f  ld   $3f
              bd90 00a8  ld   $a8
              bd91 0060  ld   $60
              bd92 0020  ld   $20
              bd93 00be  ld   $be
              bd94 0017  ld   $17
              bd95 00f0  ld   $f0
              bd96 0008  ld   $08
              bd97 00a0  ld   $a0
              bd98 0000  ld   $00
              bd99 00b1  ld   $b1
              bd9a 0054  ld   $54
              bd9b 00a8  ld   $a8
              bd9c 004c  ld   $4c
              bd9d 00de  ld   $de
              bd9e 0013  ld   $13
              bd9f 004c  ld   $4c
              bda0 0082  ld   $82
              bda1 0012  ld   $12
              bda2 0020  ld   $20
              bda3 006b  ld   $6b
              bda4 0022  ld   $22
              bda5 0020  ld   $20
              bda6 00f6  ld   $f6
              bda7 000d  ld   $0d
              bda8 0020  ld   $20
              bda9 00f6  ld   $f6
              bdaa 0011  ld   $11
              bdab 00a6  ld   $a6
              bdac 0097  ld   $97
              bdad 00d0  ld   $d0
              bdae 00f0  ld   $f0
              bdaf 00a6  ld   $a6
              bdb0 0098  ld   $98
              bdb1 004c  ld   $4c
              bdb2 0071  ld   $71
              bdb3 0022  ld   $22
              bdb4 0020  ld   $20
              bdb5 00be  ld   $be
              bdb6 0017  ld   $17
              bdb7 00d0  ld   $d0
              bdb8 0003  ld   $03
              bdb9 004c  ld   $4c
              bdba 006f  ld   $6f
              bdbb 0019  ld   $19
              bdbc 00a6  ld   $a6
              bdbd 00a6  ld   $a6
              bdbe 00a4  ld   $a4
              bdbf 00a7  ld   $a7
              bdc0 0086  ld   $86
              bdc1 00a4  ld   $a4
              bdc2 0084  ld   $84
              bdc3 00a5  ld   $a5
              bdc4 00a6  ld   $a6
              bdc5 0054  ld   $54
              bdc6 0086  ld   $86
              bdc7 00a6  ld   $a6
              bdc8 0018  ld   $18
              bdc9 0065  ld   $65
              bdca 0054  ld   $54
              bdcb 0018  ld   $18
              bdcc 0000  ld   $00
              bdcd 0000  ld   $00
              bdce 0085  ld   $85
              bdcf 0056  ld   $56
              bdd0 00a6  ld   $a6
              bdd1 0055  ld   $55
              bdd2 0086  ld   $86
              bdd3 00a7  ld   $a7
              bdd4 0090  ld   $90
              bdd5 0001  ld   $01
              bdd6 00e8  ld   $e8
              bdd7 0086  ld   $86
              bdd8 0057  ld   $57
              bdd9 00a0  ld   $a0
              bdda 0000  ld   $00
              bddb 00b1  ld   $b1
              bddc 0056  ld   $56
              bddd 0048  ld   $48
              bdde 00a9  ld   $a9
              bddf 0000  ld   $00
              bde0 0091  ld   $91
              bde1 0056  ld   $56
              bde2 0020  ld   $20
              bde3 0071  ld   $71
              bde4 0022  ld   $22
              bde5 0020  ld   $20
              bde6 006b  ld   $6b
              bde7 001d  ld   $1d
              bde8 0068  ld   $68
              bde9 00a0  ld   $a0
              bdea 0000  ld   $00
              bdeb 0091  ld   $91
              bdec 0056  ld   $56
              bded 00a6  ld   $a6
              bdee 00a4  ld   $a4
              bdef 00a4  ld   $a4
              bdf0 00a5  ld   $a5
              bdf1 0086  ld   $86
              bdf2 00a6  ld   $a6
              bdf3 0084  ld   $84
              bdf4 00a7  ld   $a7
              bdf5 0060  ld   $60
              bdf6 0020  ld   $20
              bdf7 00f6  ld   $f6
              bdf8 000d  ld   $0d
              bdf9 0020  ld   $20
              bdfa 0034  ld   $34
              bdfb fe00  bra  ac          ;+-----------------------------------+
              bdfc fcfd  bra  $bdfd       ;|                                   |
              bdfd 1418  ld   $18,y       ;| Trampoline for page $bd00 lookups |
              bdfe e006  jmp  y,$06       ;|                                   |
              bdff c218  st   [$18]       ;+-----------------------------------+
              be00 0018  ld   $18
              be01 0020  ld   $20
              be02 0063  ld   $63
              be03 000f  ld   $0f
              be04 004c  ld   $4c
              be05 00da  ld   $da
              be06 0017  ld   $17
              be07 00a5  ld   $a5
              be08 0099  ld   $99
              be09 0030  ld   $30
              be0a 009c  ld   $9c
              be0b 00a5  ld   $a5
              be0c 0094  ld   $94
              be0d 00c9  ld   $c9
              be0e 0091  ld   $91
              be0f 00b0  ld   $b0
              be10 0096  ld   $96
              be11 0020  ld   $20
              be12 0013  ld   $13
              be13 001d  ld   $1d
              be14 00a5  ld   $a5
              be15 0097  ld   $97
              be16 00a4  ld   $a4
              be17 0098  ld   $98
              be18 0084  ld   $84
              be19 0046  ld   $46
              be1a 0085  ld   $85
              be1b 0047  ld   $47
              be1c 0060  ld   $60
              be1d 00a5  ld   $a5
              be1e 0047  ld   $47
              be1f 0048  ld   $48
              be20 00a5  ld   $a5
              be21 0046  ld   $46
              be22 0048  ld   $48
              be23 0020  ld   $20
              be24 0034  ld   $34
              be25 0018  ld   $18
              be26 00a0  ld   $a0
              be27 0000  ld   $00
              be28 00ea  ld   $ea
              be29 00ea  ld   $ea
              be2a 00ea  ld   $ea
              * 8 times
              be30 00b1  ld   $b1
              be31 0046  ld   $46
              be32 00a8  ld   $a8
              be33 0068  ld   $68
              be34 0085  ld   $85
              be35 0046  ld   $46
              be36 0068  ld   $68
              be37 0085  ld   $85
              be38 0047  ld   $47
              be39 004c  ld   $4c
              be3a 00de  ld   $de
              be3b 0013  ld   $13
              be3c 0020  ld   $20
              be3d 0028  ld   $28
              be3e 0018  ld   $18
              be3f 008a  ld   $8a
              be40 00a0  ld   $a0
              be41 0000  ld   $00
              be42 0091  ld   $91
              be43 0046  ld   $46
              be44 0060  ld   $60
              be45 0020  ld   $20
              be46 0028  ld   $28
              be47 0018  ld   $18
              be48 0086  ld   $86
              be49 007b  ld   $7b
              be4a 00a2  ld   $a2
              be4b 0000  ld   $00
              be4c 0020  ld   $20
              be4d 0071  ld   $71
              be4e 0022  ld   $22
              be4f 00f0  ld   $f0
              be50 0029  ld   $29
              be51 0020  ld   $20
              be52 002e  ld   $2e
              be53 0018  ld   $18
              be54 0086  ld   $86
              be55 007c  ld   $7c
              be56 00a0  ld   $a0
              be57 0000  ld   $00
              be58 00b1  ld   $b1
              be59 0046  ld   $46
              be5a 0045  ld   $45
              be5b 007c  ld   $7c
              be5c 0025  ld   $25
              be5d 007b  ld   $7b
              be5e 00f0  ld   $f0
              be5f 00f8  ld   $f8
              be60 0060  ld   $60
              be61 00a9  ld   $a9
              be62 0089  ld   $89
              be63 00a0  ld   $a0
              be64 001f  ld   $1f
              be65 004c  ld   $4c
              be66 00df  ld   $df
              be67 0018  ld   $18
              be68 0020  ld   $20
              be69 0004  ld   $04
              be6a 001b  ld   $1b
              be6b 00a5  ld   $a5
              be6c 0099  ld   $99
              be6d 0049  ld   $49
              be6e 00ff  ld   $ff
              be6f 0085  ld   $85
              be70 0099  ld   $99
              be71 0045  ld   $45
              be72 00a1  ld   $a1
              be73 0085  ld   $85
              be74 00a2  ld   $a2
              be75 00a5  ld   $a5
              be76 0094  ld   $94
              be77 004c  ld   $4c
              be78 00e2  ld   $e2
              be79 0018  ld   $18
              be7a 00a5  ld   $a5
              be7b 0046  ld   $46
              be7c 0049  ld   $49
              be7d 00e8  ld   $e8
              be7e 00d0  ld   $d0
              be7f 0008  ld   $08
              be80 00a2  ld   $a2
              be81 0014  ld   $14
              be82 0045  ld   $45
              be83 0047  ld   $47
              be84 0049  ld   $49
              be85 001c  ld   $1c
              be86 00f0  ld   $f0
              be87 000e  ld   $0e
              be88 00a5  ld   $a5
              be89 0046  ld   $46
              be8a 00c9  ld   $c9
              be8b 0066  ld   $66
              be8c 00d0  ld   $d0
              be8d 00c6  ld   $c6
              be8e 00a5  ld   $a5
              be8f 0047  ld   $47
              be90 00e9  ld   $e9
              be91 0019  ld   $19
              be92 00d0  ld   $d0
              be93 00c0  ld   $c0
              be94 00a2  ld   $a2
              be95 000a  ld   $0a
              be96 00bd  ld   $bd
              be97 00e9  ld   $e9
              be98 0021  ld   $21
              be99 0029  ld   $29
              be9a 003f  ld   $3f
              be9b 0049  ld   $49
              be9c 0020  ld   $20
              be9d 0018  ld   $18
              be9e 0069  ld   $69
              be9f 0020  ld   $20
              bea0 0020  ld   $20
              bea1 0000  ld   $00
              bea2 002b  ld   $2b
              bea3 00ca  ld   $ca
              bea4 0049  ld   $49
              bea5 0021  ld   $21
              bea6 00d0  ld   $d0
              bea7 00ee  ld   $ee
              bea8 00c6  ld   $c6
              bea9 007b  ld   $7b
              beaa 00d0  ld   $d0
              beab 00e8  ld   $e8
              beac 0060  ld   $60
              bead 0020  ld   $20
              beae 0011  ld   $11
              beaf 001a  ld   $1a
              beb0 0090  ld   $90
              beb1 003c  ld   $3c
              beb2 0020  ld   $20
              beb3 0004  ld   $04
              beb4 001b  ld   $1b
              beb5 00d0  ld   $d0
              beb6 0003  ld   $03
              beb7 004c  ld   $4c
              beb8 0074  ld   $74
              beb9 001c  ld   $1c
              beba 00a6  ld   $a6
              bebb 00a3  ld   $a3
              bebc 0086  ld   $86
              bebd 0089  ld   $89
              bebe 00a2  ld   $a2
              bebf 009c  ld   $9c
              bec0 00a5  ld   $a5
              bec1 009c  ld   $9c
              bec2 00a8  ld   $a8
              bec3 00f0  ld   $f0
              bec4 009b  ld   $9b
              bec5 0038  ld   $38
              bec6 00e5  ld   $e5
              bec7 0094  ld   $94
              bec8 00f0  ld   $f0
              bec9 0024  ld   $24
              beca 0090  ld   $90
              becb 0012  ld   $12
              becc 0084  ld   $84
              becd 0094  ld   $94
              bece 00a4  ld   $a4
              becf 00a1  ld   $a1
              bed0 0084  ld   $84
              bed1 0099  ld   $99
              bed2 0049  ld   $49
              bed3 0019  ld   $19
              bed4 0000  ld   $00
              bed5 0000  ld   $00
              bed6 00ff  ld   $ff
              bed7 0069  ld   $69
              bed8 0000  ld   $00
              bed9 00a0  ld   $a0
              beda 0000  ld   $00
              bedb 0084  ld   $84
              bedc 0089  ld   $89
              bedd 00a2  ld   $a2
              bede 0094  ld   $94
              bedf 00d0  ld   $d0
              bee0 0004  ld   $04
              bee1 00a0  ld   $a0
              bee2 0000  ld   $00
              bee3 0084  ld   $84
              bee4 00a3  ld   $a3
              bee5 00c9  ld   $c9
              bee6 00f9  ld   $f9
              bee7 0030  ld   $30
              bee8 00c7  ld   $c7
              bee9 00a8  ld   $a8
              beea 00a5  ld   $a5
              beeb 00a3  ld   $a3
              beec 0056  ld   $56
              beed 0001  ld   $01
              beee 0020  ld   $20
              beef 0028  ld   $28
              bef0 001a  ld   $1a
              bef1 0024  ld   $24
              bef2 00a2  ld   $a2
              bef3 0010  ld   $10
              bef4 0057  ld   $57
              bef5 00a0  ld   $a0
              bef6 0094  ld   $94
              bef7 00e0  ld   $e0
              bef8 009c  ld   $9c
              bef9 00f0  ld   $f0
              befa 0002  ld   $02
              befb fe00  bra  ac          ;+-----------------------------------+
              befc fcfd  bra  $befd       ;|                                   |
              befd 1418  ld   $18,y       ;| Trampoline for page $be00 lookups |
              befe e006  jmp  y,$06       ;|                                   |
              beff c218  st   [$18]       ;+-----------------------------------+
              bf00 00a0  ld   $a0
              bf01 009c  ld   $9c
              bf02 0038  ld   $38
              bf03 0049  ld   $49
              bf04 00ff  ld   $ff
              bf05 0065  ld   $65
              bf06 0089  ld   $89
              bf07 0085  ld   $85
              bf08 00a3  ld   $a3
              bf09 00b9  ld   $b9
              bf0a 0004  ld   $04
              bf0b 0000  ld   $00
              bf0c 00f5  ld   $f5
              bf0d 0004  ld   $04
              bf0e 0085  ld   $85
              bf0f 0098  ld   $98
              bf10 00b9  ld   $b9
              bf11 0003  ld   $03
              bf12 0000  ld   $00
              bf13 00f5  ld   $f5
              bf14 0003  ld   $03
              bf15 0085  ld   $85
              bf16 0097  ld   $97
              bf17 00b9  ld   $b9
              bf18 0002  ld   $02
              bf19 0000  ld   $00
              bf1a 00f5  ld   $f5
              bf1b 0002  ld   $02
              bf1c 0085  ld   $85
              bf1d 0096  ld   $96
              bf1e 00b9  ld   $b9
              bf1f 0001  ld   $01
              bf20 0000  ld   $00
              bf21 00f5  ld   $f5
              bf22 0001  ld   $01
              bf23 0085  ld   $85
              bf24 0095  ld   $95
              bf25 00b0  ld   $b0
              bf26 0003  ld   $03
              bf27 0020  ld   $20
              bf28 00bf  ld   $bf
              bf29 0019  ld   $19
              bf2a 00a0  ld   $a0
              bf2b 0000  ld   $00
              bf2c 0098  ld   $98
              bf2d 0018  ld   $18
              bf2e 00a6  ld   $a6
              bf2f 0095  ld   $95
              bf30 00d0  ld   $d0
              bf31 004a  ld   $4a
              bf32 00a6  ld   $a6
              bf33 0096  ld   $96
              bf34 0086  ld   $86
              bf35 0095  ld   $95
              bf36 00a6  ld   $a6
              bf37 0097  ld   $97
              bf38 0086  ld   $86
              bf39 0096  ld   $96
              bf3a 00a6  ld   $a6
              bf3b 0098  ld   $98
              bf3c 0086  ld   $86
              bf3d 0097  ld   $97
              bf3e 00a6  ld   $a6
              bf3f 00a3  ld   $a3
              bf40 0086  ld   $86
              bf41 0098  ld   $98
              bf42 0084  ld   $84
              bf43 00a3  ld   $a3
              bf44 0069  ld   $69
              bf45 0008  ld   $08
              bf46 00c9  ld   $c9
              bf47 0020  ld   $20
              bf48 00d0  ld   $d0
              bf49 00e4  ld   $e4
              bf4a 00a9  ld   $a9
              bf4b 0000  ld   $00
              bf4c 0085  ld   $85
              bf4d 0094  ld   $94
              bf4e 0085  ld   $85
              bf4f 0099  ld   $99
              bf50 0060  ld   $60
              bf51 0065  ld   $65
              bf52 0089  ld   $89
              bf53 0085  ld   $85
              bf54 00a3  ld   $a3
              bf55 00a5  ld   $a5
              bf56 0098  ld   $98
              bf57 0065  ld   $65
              bf58 00a0  ld   $a0
              bf59 0085  ld   $85
              bf5a 0098  ld   $98
              bf5b 00a5  ld   $a5
              bf5c 0097  ld   $97
              bf5d 0065  ld   $65
              bf5e 009f  ld   $9f
              bf5f 0085  ld   $85
              bf60 0097  ld   $97
              bf61 00a5  ld   $a5
              bf62 0096  ld   $96
              bf63 0065  ld   $65
              bf64 009e  ld   $9e
              bf65 0085  ld   $85
              bf66 0096  ld   $96
              bf67 00a5  ld   $a5
              bf68 0095  ld   $95
              bf69 0065  ld   $65
              bf6a 009d  ld   $9d
              bf6b 0085  ld   $85
              bf6c 0095  ld   $95
              bf6d 004c  ld   $4c
              bf6e 00ae  ld   $ae
              bf6f 0019  ld   $19
              bf70 0069  ld   $69
              bf71 0001  ld   $01
              bf72 0006  ld   $06
              bf73 00a3  ld   $a3
              bf74 0026  ld   $26
              bf75 0098  ld   $98
              bf76 0026  ld   $26
              bf77 0097  ld   $97
              bf78 0026  ld   $26
              bf79 0096  ld   $96
              bf7a 0026  ld   $26
              bf7b 0095  ld   $95
              bf7c 0010  ld   $10
              bf7d 00f2  ld   $f2
              bf7e 0038  ld   $38
              bf7f 00e5  ld   $e5
              bf80 0094  ld   $94
              bf81 00b0  ld   $b0
              bf82 00c7  ld   $c7
              bf83 0049  ld   $49
              bf84 00ff  ld   $ff
              bf85 0069  ld   $69
              bf86 0001  ld   $01
              bf87 0085  ld   $85
              bf88 0094  ld   $94
              bf89 0090  ld   $90
              bf8a 000e  ld   $0e
              bf8b 00e6  ld   $e6
              bf8c 0094  ld   $94
              bf8d 00f0  ld   $f0
              bf8e 0042  ld   $42
              bf8f 0066  ld   $66
              bf90 0095  ld   $95
              bf91 0066  ld   $66
              bf92 0096  ld   $96
              bf93 0066  ld   $66
              bf94 0097  ld   $97
              bf95 0066  ld   $66
              bf96 0098  ld   $98
              bf97 0066  ld   $66
              bf98 00a3  ld   $a3
              bf99 0060  ld   $60
              bf9a 00a5  ld   $a5
              bf9b 0099  ld   $99
              bf9c 0049  ld   $49
              bf9d 00ff  ld   $ff
              bf9e 0085  ld   $85
              bf9f 0099  ld   $99
              bfa0 00a5  ld   $a5
              bfa1 0095  ld   $95
              bfa2 0049  ld   $49
              bfa3 00ff  ld   $ff
              bfa4 0085  ld   $85
              bfa5 0095  ld   $95
              bfa6 00a5  ld   $a5
              bfa7 0096  ld   $96
              bfa8 0049  ld   $49
              bfa9 00ff  ld   $ff
              bfaa 0085  ld   $85
              bfab 0096  ld   $96
              bfac 00a5  ld   $a5
              bfad 0097  ld   $97
              bfae 0049  ld   $49
              bfaf 00ff  ld   $ff
              bfb0 0085  ld   $85
              bfb1 0097  ld   $97
              bfb2 00a5  ld   $a5
              bfb3 0098  ld   $98
              bfb4 0049  ld   $49
              bfb5 00ff  ld   $ff
              bfb6 0085  ld   $85
              bfb7 0098  ld   $98
              bfb8 00a5  ld   $a5
              bfb9 00a3  ld   $a3
              bfba 0049  ld   $49
              bfbb 00ff  ld   $ff
              bfbc 0085  ld   $85
              bfbd 00a3  ld   $a3
              bfbe 00e6  ld   $e6
              bfbf 00a3  ld   $a3
              bfc0 00d0  ld   $d0
              bfc1 000e  ld   $0e
              bfc2 00e6  ld   $e6
              bfc3 0098  ld   $98
              bfc4 00d0  ld   $d0
              bfc5 000a  ld   $0a
              bfc6 00e6  ld   $e6
              bfc7 0097  ld   $97
              bfc8 00d0  ld   $d0
              bfc9 0006  ld   $06
              bfca 00e6  ld   $e6
              bfcb 0096  ld   $96
              bfcc 00d0  ld   $d0
              bfcd 0002  ld   $02
              bfce 00e6  ld   $e6
              bfcf 0095  ld   $95
              bfd0 0060  ld   $60
              bfd1 00a2  ld   $a2
              bfd2 0045  ld   $45
              bfd3 004c  ld   $4c
              bfd4 004a  ld   $4a
              bfd5 0005  ld   $05
              bfd6 00a2  ld   $a2
              bfd7 0057  ld   $57
              bfd8 00b4  ld   $b4
              bfd9 0004  ld   $04
              bfda 0084  ld   $84
              bfdb 001a  ld   $1a
              bfdc 0000  ld   $00
              bfdd 0000  ld   $00
              bfde 00a3  ld   $a3
              bfdf 00b4  ld   $b4
              bfe0 0003  ld   $03
              bfe1 0094  ld   $94
              bfe2 0004  ld   $04
              bfe3 00b4  ld   $b4
              bfe4 0002  ld   $02
              bfe5 0094  ld   $94
              bfe6 0003  ld   $03
              bfe7 00b4  ld   $b4
              bfe8 0001  ld   $01
              bfe9 0094  ld   $94
              bfea 0002  ld   $02
              bfeb 00a4  ld   $a4
              bfec 009b  ld   $9b
              bfed 0094  ld   $94
              bfee 0001  ld   $01
              bfef 0069  ld   $69
              bff0 0008  ld   $08
              bff1 0030  ld   $30
              bff2 00e8  ld   $e8
              bff3 00f0  ld   $f0
              bff4 00e6  ld   $e6
              bff5 00e9  ld   $e9
              bff6 0008  ld   $08
              bff7 00a8  ld   $a8
              bff8 00a5  ld   $a5
              bff9 00a3  ld   $a3
              bffa 00b0  ld   $b0
              bffb fe00  bra  ac          ;+-----------------------------------+
              bffc fcfd  bra  $bffd       ;|                                   |
              bffd 1418  ld   $18,y       ;| Trampoline for page $bf00 lookups |
              bffe e006  jmp  y,$06       ;|                                   |
              bfff c218  st   [$18]       ;+-----------------------------------+
              c000 0014  ld   $14
              c001 0016  ld   $16
              c002 0001  ld   $01
              c003 0090  ld   $90
              c004 0002  ld   $02
              c005 00f6  ld   $f6
              c006 0001  ld   $01
              c007 0076  ld   $76
              c008 0001  ld   $01
              c009 0076  ld   $76
              c00a 0001  ld   $01
              c00b 0076  ld   $76
              c00c 0002  ld   $02
              c00d 0076  ld   $76
              c00e 0003  ld   $03
              c00f 0076  ld   $76
              c010 0004  ld   $04
              c011 006a  ld   $6a
              c012 00c8  ld   $c8
              c013 00d0  ld   $d0
              c014 00ec  ld   $ec
              c015 0018  ld   $18
              c016 0060  ld   $60
              c017 0081  ld   $81
              c018 0000  ld   $00
              c019 0000  ld   $00
              c01a 0000  ld   $00
              c01b 0000  ld   $00
              c01c 0003  ld   $03
              c01d 007f  ld   $7f
              c01e 005e  ld   $5e
              c01f 0056  ld   $56
              c020 00cb  ld   $cb
              c021 0079  ld   $79
              c022 0080  ld   $80
              c023 0013  ld   $13
              c024 009b  ld   $9b
              c025 000b  ld   $0b
              c026 0064  ld   $64
              c027 0080  ld   $80
              c028 0076  ld   $76
              c029 0038  ld   $38
              c02a 0093  ld   $93
              c02b 0016  ld   $16
              c02c 0082  ld   $82
              c02d 0038  ld   $38
              c02e 00aa  ld   $aa
              c02f 003b  ld   $3b
              c030 0020  ld   $20
              c031 0080  ld   $80
              c032 0035  ld   $35
              c033 0004  ld   $04
              c034 00f3  ld   $f3
              c035 0034  ld   $34
              c036 0081  ld   $81
              c037 0035  ld   $35
              c038 0004  ld   $04
              c039 00f3  ld   $f3
              c03a 0034  ld   $34
              c03b 0080  ld   $80
              c03c 0080  ld   $80
              c03d 0000  ld   $00
              c03e 0000  ld   $00
              c03f 0000  ld   $00
              c040 0080  ld   $80
              c041 0031  ld   $31
              c042 0072  ld   $72
              c043 0017  ld   $17
              c044 00f8  ld   $f8
              c045 0020  ld   $20
              c046 00a3  ld   $a3
              c047 001c  ld   $1c
              c048 00f0  ld   $f0
              c049 0002  ld   $02
              c04a 0010  ld   $10
              c04b 0003  ld   $03
              c04c 004c  ld   $4c
              c04d 0082  ld   $82
              c04e 0012  ld   $12
              c04f 00a5  ld   $a5
              c050 0094  ld   $94
              c051 00e9  ld   $e9
              c052 007f  ld   $7f
              c053 0048  ld   $48
              c054 00a9  ld   $a9
              c055 0080  ld   $80
              c056 0085  ld   $85
              c057 0094  ld   $94
              c058 00a9  ld   $a9
              c059 004e  ld   $4e
              c05a 00a0  ld   $a0
              c05b 001a  ld   $1a
              c05c 0020  ld   $20
              c05d 00df  ld   $df
              c05e 0018  ld   $18
              c05f 00a9  ld   $a9
              c060 0053  ld   $53
              c061 00a0  ld   $a0
              c062 001a  ld   $1a
              c063 0020  ld   $20
              c064 0087  ld   $87
              c065 001b  ld   $1b
              c066 00a9  ld   $a9
              c067 0034  ld   $34
              c068 00a0  ld   $a0
              c069 001a  ld   $1a
              c06a 0020  ld   $20
              c06b 0095  ld   $95
              c06c 0018  ld   $18
              c06d 00a9  ld   $a9
              c06e 0039  ld   $39
              c06f 00a0  ld   $a0
              c070 001a  ld   $1a
              c071 0020  ld   $20
              c072 0099  ld   $99
              c073 0020  ld   $20
              c074 00a9  ld   $a9
              c075 0058  ld   $58
              c076 00a0  ld   $a0
              c077 001a  ld   $1a
              c078 0020  ld   $20
              c079 00df  ld   $df
              c07a 0018  ld   $18
              c07b 0068  ld   $68
              c07c 0020  ld   $20
              c07d 00f6  ld   $f6
              c07e 001d  ld   $1d
              c07f 00a9  ld   $a9
              c080 005d  ld   $5d
              c081 00a0  ld   $a0
              c082 001a  ld   $1a
              c083 0020  ld   $20
              c084 0004  ld   $04
              c085 001b  ld   $1b
              c086 00d0  ld   $d0
              c087 0003  ld   $03
              c088 004c  ld   $4c
              c089 0003  ld   $03
              c08a 001b  ld   $1b
              c08b 0020  ld   $20
              c08c 002f  ld   $2f
              c08d 001b  ld   $1b
              c08e 00a9  ld   $a9
              c08f 0000  ld   $00
              c090 0085  ld   $85
              c091 0058  ld   $58
              c092 0085  ld   $85
              c093 0059  ld   $59
              c094 0085  ld   $85
              c095 005a  ld   $5a
              c096 0085  ld   $85
              c097 005b  ld   $5b
              c098 00a5  ld   $a5
              c099 00a3  ld   $a3
              c09a 0020  ld   $20
              c09b 00d1  ld   $d1
              c09c 001a  ld   $1a
              c09d 00a5  ld   $a5
              c09e 0098  ld   $98
              c09f 0020  ld   $20
              c0a0 00d1  ld   $d1
              c0a1 001a  ld   $1a
              c0a2 00a5  ld   $a5
              c0a3 0097  ld   $97
              c0a4 0020  ld   $20
              c0a5 00d1  ld   $d1
              c0a6 001a  ld   $1a
              c0a7 00a5  ld   $a5
              c0a8 0096  ld   $96
              c0a9 0020  ld   $20
              c0aa 00d1  ld   $d1
              c0ab 001a  ld   $1a
              c0ac 00a5  ld   $a5
              c0ad 0095  ld   $95
              c0ae 0020  ld   $20
              c0af 00d6  ld   $d6
              c0b0 001a  ld   $1a
              c0b1 004c  ld   $4c
              c0b2 0007  ld   $07
              c0b3 001c  ld   $1c
              c0b4 00d0  ld   $d0
              c0b5 0003  ld   $03
              c0b6 004c  ld   $4c
              c0b7 00fb  ld   $fb
              c0b8 0019  ld   $19
              c0b9 004a  ld   $4a
              c0ba 0009  ld   $09
              c0bb 0080  ld   $80
              c0bc 00a8  ld   $a8
              c0bd 0090  ld   $90
              c0be 0019  ld   $19
              c0bf 0018  ld   $18
              c0c0 00a5  ld   $a5
              c0c1 005b  ld   $5b
              c0c2 0065  ld   $65
              c0c3 00a0  ld   $a0
              c0c4 0085  ld   $85
              c0c5 005b  ld   $5b
              c0c6 00a5  ld   $a5
              c0c7 005a  ld   $5a
              c0c8 0065  ld   $65
              c0c9 009f  ld   $9f
              c0ca 0085  ld   $85
              c0cb 005a  ld   $5a
              c0cc 00a5  ld   $a5
              c0cd 0059  ld   $59
              c0ce 0065  ld   $65
              c0cf 009e  ld   $9e
              c0d0 0085  ld   $85
              c0d1 0059  ld   $59
              c0d2 00a5  ld   $a5
              c0d3 0058  ld   $58
              c0d4 0065  ld   $65
              c0d5 009d  ld   $9d
              c0d6 0085  ld   $85
              c0d7 0058  ld   $58
              c0d8 0066  ld   $66
              c0d9 0058  ld   $58
              c0da 0066  ld   $66
              c0db 0059  ld   $59
              c0dc 0066  ld   $66
              c0dd 005a  ld   $5a
              c0de 0066  ld   $66
              c0df 005b  ld   $5b
              c0e0 0066  ld   $66
              c0e1 00a3  ld   $a3
              c0e2 0098  ld   $98
              c0e3 001b  ld   $1b
              c0e4 0000  ld   $00
              c0e5 0000  ld   $00
              c0e6 004a  ld   $4a
              c0e7 00d0  ld   $d0
              c0e8 00d6  ld   $d6
              c0e9 0060  ld   $60
              c0ea 0085  ld   $85
              c0eb 0054  ld   $54
              c0ec 0084  ld   $84
              c0ed 0055  ld   $55
              c0ee 00a0  ld   $a0
              c0ef 0004  ld   $04
              c0f0 00b1  ld   $b1
              c0f1 0054  ld   $54
              c0f2 0085  ld   $85
              c0f3 00a0  ld   $a0
              c0f4 0088  ld   $88
              c0f5 00b1  ld   $b1
              c0f6 0054  ld   $54
              c0f7 0085  ld   $85
              c0f8 009f  ld   $9f
              c0f9 0088  ld   $88
              c0fa 00b1  ld   $b1
              c0fb fe00  bra  ac          ;+-----------------------------------+
              c0fc fcfd  bra  $c0fd       ;|                                   |
              c0fd 1418  ld   $18,y       ;| Trampoline for page $c000 lookups |
              c0fe e006  jmp  y,$06       ;|                                   |
              c0ff c218  st   [$18]       ;+-----------------------------------+
              c100 0054  ld   $54
              c101 0085  ld   $85
              c102 009e  ld   $9e
              c103 0088  ld   $88
              c104 00b1  ld   $b1
              c105 0054  ld   $54
              c106 0085  ld   $85
              c107 00a1  ld   $a1
              c108 0045  ld   $45
              c109 0099  ld   $99
              c10a 0085  ld   $85
              c10b 00a2  ld   $a2
              c10c 00a5  ld   $a5
              c10d 00a1  ld   $a1
              c10e 0009  ld   $09
              c10f 0080  ld   $80
              c110 0085  ld   $85
              c111 009d  ld   $9d
              c112 0088  ld   $88
              c113 00b1  ld   $b1
              c114 0054  ld   $54
              c115 0085  ld   $85
              c116 009c  ld   $9c
              c117 00a5  ld   $a5
              c118 0094  ld   $94
              c119 0060  ld   $60
              c11a 00a5  ld   $a5
              c11b 009c  ld   $9c
              c11c 00f0  ld   $f0
              c11d 001f  ld   $1f
              c11e 0018  ld   $18
              c11f 0065  ld   $65
              c120 0094  ld   $94
              c121 0090  ld   $90
              c122 0004  ld   $04
              c123 0030  ld   $30
              c124 001d  ld   $1d
              c125 0018  ld   $18
              c126 002c  ld   $2c
              c127 0010  ld   $10
              c128 0014  ld   $14
              c129 0069  ld   $69
              c12a 0080  ld   $80
              c12b 0085  ld   $85
              c12c 0094  ld   $94
              c12d 00d0  ld   $d0
              c12e 0003  ld   $03
              c12f 004c  ld   $4c
              c130 0073  ld   $73
              c131 0019  ld   $19
              c132 00a5  ld   $a5
              c133 00a2  ld   $a2
              c134 0085  ld   $85
              c135 0099  ld   $99
              c136 0060  ld   $60
              c137 00a5  ld   $a5
              c138 0099  ld   $99
              c139 0049  ld   $49
              c13a 00ff  ld   $ff
              c13b 0030  ld   $30
              c13c 0005  ld   $05
              c13d 0068  ld   $68
              c13e 0068  ld   $68
              c13f 004c  ld   $4c
              c140 006f  ld   $6f
              c141 0019  ld   $19
              c142 004c  ld   $4c
              c143 00f6  ld   $f6
              c144 0019  ld   $19
              c145 0020  ld   $20
              c146 0084  ld   $84
              c147 001c  ld   $1c
              c148 00aa  ld   $aa
              c149 00f0  ld   $f0
              c14a 0010  ld   $10
              c14b 0018  ld   $18
              c14c 0069  ld   $69
              c14d 0002  ld   $02
              c14e 00b0  ld   $b0
              c14f 00f2  ld   $f2
              c150 00a2  ld   $a2
              c151 0000  ld   $00
              c152 0086  ld   $86
              c153 00a2  ld   $a2
              c154 0020  ld   $20
              c155 00ef  ld   $ef
              c156 0018  ld   $18
              c157 00e6  ld   $e6
              c158 0094  ld   $94
              c159 00f0  ld   $f0
              c15a 00e7  ld   $e7
              c15b 0060  ld   $60
              c15c 0084  ld   $84
              c15d 0020  ld   $20
              c15e 0000  ld   $00
              c15f 0000  ld   $00
              c160 0000  ld   $00
              c161 0020  ld   $20
              c162 0084  ld   $84
              c163 001c  ld   $1c
              c164 00a9  ld   $a9
              c165 0071  ld   $71
              c166 00a0  ld   $a0
              c167 001b  ld   $1b
              c168 00a2  ld   $a2
              c169 0000  ld   $00
              c16a 0086  ld   $86
              c16b 00a2  ld   $a2
              c16c 0020  ld   $20
              c16d 001a  ld   $1a
              c16e 001c  ld   $1c
              c16f 004c  ld   $4c
              c170 008a  ld   $8a
              c171 001b  ld   $1b
              c172 0020  ld   $20
              c173 0004  ld   $04
              c174 001b  ld   $1b
              c175 00f0  ld   $f0
              c176 0076  ld   $76
              c177 0020  ld   $20
              c178 0093  ld   $93
              c179 001c  ld   $1c
              c17a 00a9  ld   $a9
              c17b 0000  ld   $00
              c17c 0038  ld   $38
              c17d 00e5  ld   $e5
              c17e 0094  ld   $94
              c17f 0085  ld   $85
              c180 0094  ld   $94
              c181 0020  ld   $20
              c182 002f  ld   $2f
              c183 001b  ld   $1b
              c184 00e6  ld   $e6
              c185 0094  ld   $94
              c186 00f0  ld   $f0
              c187 00ba  ld   $ba
              c188 00a2  ld   $a2
              c189 00fc  ld   $fc
              c18a 00a9  ld   $a9
              c18b 0001  ld   $01
              c18c 00a4  ld   $a4
              c18d 009d  ld   $9d
              c18e 00c4  ld   $c4
              c18f 0095  ld   $95
              c190 00d0  ld   $d0
              c191 0010  ld   $10
              c192 00a4  ld   $a4
              c193 009e  ld   $9e
              c194 00c4  ld   $c4
              c195 0096  ld   $96
              c196 00d0  ld   $d0
              c197 000a  ld   $0a
              c198 00a4  ld   $a4
              c199 009f  ld   $9f
              c19a 00c4  ld   $c4
              c19b 0097  ld   $97
              c19c 00d0  ld   $d0
              c19d 0004  ld   $04
              c19e 00a4  ld   $a4
              c19f 00a0  ld   $a0
              c1a0 00c4  ld   $c4
              c1a1 0098  ld   $98
              c1a2 0008  ld   $08
              c1a3 002a  ld   $2a
              c1a4 0090  ld   $90
              c1a5 0009  ld   $09
              c1a6 00e8  ld   $e8
              c1a7 0095  ld   $95
              c1a8 005b  ld   $5b
              c1a9 00f0  ld   $f0
              c1aa 0032  ld   $32
              c1ab 0010  ld   $10
              c1ac 0034  ld   $34
              c1ad 00a9  ld   $a9
              c1ae 0001  ld   $01
              c1af 0028  ld   $28
              c1b0 00b0  ld   $b0
              c1b1 000e  ld   $0e
              c1b2 0006  ld   $06
              c1b3 00a0  ld   $a0
              c1b4 0026  ld   $26
              c1b5 009f  ld   $9f
              c1b6 0026  ld   $26
              c1b7 009e  ld   $9e
              c1b8 0026  ld   $26
              c1b9 009d  ld   $9d
              c1ba 00b0  ld   $b0
              c1bb 00e6  ld   $e6
              c1bc 0030  ld   $30
              c1bd 00ce  ld   $ce
              c1be 0010  ld   $10
              c1bf 00e2  ld   $e2
              c1c0 00a8  ld   $a8
              c1c1 00a5  ld   $a5
              c1c2 00a0  ld   $a0
              c1c3 00e5  ld   $e5
              c1c4 0098  ld   $98
              c1c5 0085  ld   $85
              c1c6 00a0  ld   $a0
              c1c7 00a5  ld   $a5
              c1c8 009f  ld   $9f
              c1c9 00e5  ld   $e5
              c1ca 0097  ld   $97
              c1cb 0085  ld   $85
              c1cc 009f  ld   $9f
              c1cd 00a5  ld   $a5
              c1ce 009e  ld   $9e
              c1cf 00e5  ld   $e5
              c1d0 0096  ld   $96
              c1d1 0085  ld   $85
              c1d2 009e  ld   $9e
              c1d3 00a5  ld   $a5
              c1d4 009d  ld   $9d
              c1d5 00e5  ld   $e5
              c1d6 0095  ld   $95
              c1d7 0085  ld   $85
              c1d8 009d  ld   $9d
              c1d9 0098  ld   $98
              c1da 004c  ld   $4c
              c1db 00c7  ld   $c7
              c1dc 001b  ld   $1b
              c1dd 00a9  ld   $a9
              c1de 0040  ld   $40
              c1df 00d0  ld   $d0
              c1e0 00ce  ld   $ce
              c1e1 000a  ld   $0a
              c1e2 000a  ld   $0a
              c1e3 000a  ld   $0a
              * 6 times
              c1e7 0085  ld   $85
              c1e8 00a3  ld   $a3
              c1e9 0028  ld   $28
              c1ea 004c  ld   $4c
              c1eb 001c  ld   $1c
              c1ec 0000  ld   $00
              c1ed 0000  ld   $00
              c1ee 0007  ld   $07
              c1ef 001c  ld   $1c
              c1f0 00a2  ld   $a2
              c1f1 0085  ld   $85
              c1f2 004c  ld   $4c
              c1f3 004a  ld   $4a
              c1f4 0005  ld   $05
              c1f5 00a5  ld   $a5
              c1f6 0058  ld   $58
              c1f7 0085  ld   $85
              c1f8 0095  ld   $95
              c1f9 00a5  ld   $a5
              c1fa 0059  ld   $59
              c1fb fe00  bra  ac          ;+-----------------------------------+
              c1fc fcfd  bra  $c1fd       ;|                                   |
              c1fd 1418  ld   $18,y       ;| Trampoline for page $c100 lookups |
              c1fe e006  jmp  y,$06       ;|                                   |
              c1ff c218  st   [$18]       ;+-----------------------------------+
              c200 0085  ld   $85
              c201 0096  ld   $96
              c202 00a5  ld   $a5
              c203 005a  ld   $5a
              c204 0085  ld   $85
              c205 0097  ld   $97
              c206 00a5  ld   $a5
              c207 005b  ld   $5b
              c208 0085  ld   $85
              c209 0098  ld   $98
              c20a 004c  ld   $4c
              c20b 004f  ld   $4f
              c20c 0019  ld   $19
              c20d 0085  ld   $85
              c20e 0054  ld   $54
              c20f 0084  ld   $84
              c210 0055  ld   $55
              c211 00a0  ld   $a0
              c212 0004  ld   $04
              c213 00b1  ld   $b1
              c214 0054  ld   $54
              c215 0085  ld   $85
              c216 0098  ld   $98
              c217 0088  ld   $88
              c218 00b1  ld   $b1
              c219 0054  ld   $54
              c21a 0085  ld   $85
              c21b 0097  ld   $97
              c21c 0088  ld   $88
              c21d 00b1  ld   $b1
              c21e 0054  ld   $54
              c21f 0085  ld   $85
              c220 0096  ld   $96
              c221 0088  ld   $88
              c222 00b1  ld   $b1
              c223 0054  ld   $54
              c224 0085  ld   $85
              c225 0099  ld   $99
              c226 0009  ld   $09
              c227 0080  ld   $80
              c228 0085  ld   $85
              c229 0095  ld   $95
              c22a 0088  ld   $88
              c22b 00b1  ld   $b1
              c22c 0054  ld   $54
              c22d 0085  ld   $85
              c22e 0094  ld   $94
              c22f 0084  ld   $84
              c230 00a3  ld   $a3
              c231 0060  ld   $60
              c232 00a2  ld   $a2
              c233 008f  ld   $8f
              c234 002c  ld   $2c
              c235 00a2  ld   $a2
              c236 008a  ld   $8a
              c237 00a0  ld   $a0
              c238 0000  ld   $00
              c239 00f0  ld   $f0
              c23a 0004  ld   $04
              c23b 00a6  ld   $a6
              c23c 007b  ld   $7b
              c23d 00a4  ld   $a4
              c23e 007c  ld   $7c
              c23f 0020  ld   $20
              c240 0093  ld   $93
              c241 001c  ld   $1c
              c242 0086  ld   $86
              c243 0054  ld   $54
              c244 0084  ld   $84
              c245 0055  ld   $55
              c246 00a0  ld   $a0
              c247 0004  ld   $04
              c248 00a5  ld   $a5
              c249 0098  ld   $98
              c24a 0091  ld   $91
              c24b 0054  ld   $54
              c24c 0088  ld   $88
              c24d 00a5  ld   $a5
              c24e 0097  ld   $97
              c24f 0091  ld   $91
              c250 0054  ld   $54
              c251 0088  ld   $88
              c252 00a5  ld   $a5
              c253 0096  ld   $96
              c254 0091  ld   $91
              c255 0054  ld   $54
              c256 0088  ld   $88
              c257 00a5  ld   $a5
              c258 0099  ld   $99
              c259 0009  ld   $09
              c25a 007f  ld   $7f
              c25b 0025  ld   $25
              c25c 0095  ld   $95
              c25d 0091  ld   $91
              c25e 0054  ld   $54
              c25f 0088  ld   $88
              c260 00a5  ld   $a5
              c261 0094  ld   $94
              c262 0091  ld   $91
              c263 0054  ld   $54
              c264 0084  ld   $84
              c265 00a3  ld   $a3
              c266 0060  ld   $60
              c267 00a5  ld   $a5
              c268 00a1  ld   $a1
              c269 0085  ld   $85
              c26a 0099  ld   $99
              c26b 00a2  ld   $a2
              c26c 0005  ld   $05
              c26d 00b5  ld   $b5
              c26e 009b  ld   $9b
              c26f 0095  ld   $95
              c270 0093  ld   $93
              c271 00ca  ld   $ca
              c272 00d0  ld   $d0
              c273 00f9  ld   $f9
              c274 0086  ld   $86
              c275 00a3  ld   $a3
              c276 0060  ld   $60
              c277 0020  ld   $20
              c278 0093  ld   $93
              c279 001c  ld   $1c
              c27a 00a2  ld   $a2
              c27b 0006  ld   $06
              c27c 00b5  ld   $b5
              c27d 0093  ld   $93
              c27e 0095  ld   $95
              c27f 009b  ld   $9b
              c280 00ca  ld   $ca
              c281 00d0  ld   $d0
              c282 00f9  ld   $f9
              c283 0086  ld   $86
              c284 00a3  ld   $a3
              c285 0060  ld   $60
              c286 00a5  ld   $a5
              c287 0094  ld   $94
              c288 00f0  ld   $f0
              c289 00fb  ld   $fb
              c28a 0006  ld   $06
              c28b 00a3  ld   $a3
              c28c 0090  ld   $90
              c28d 00f7  ld   $f7
              c28e 0020  ld   $20
              c28f 00e7  ld   $e7
              c290 0019  ld   $19
              c291 00d0  ld   $d0
              c292 00f2  ld   $f2
              c293 004c  ld   $4c
              c294 00b0  ld   $b0
              c295 0019  ld   $19
              c296 00a5  ld   $a5
              c297 0094  ld   $94
              c298 00f0  ld   $f0
              c299 0009  ld   $09
              c29a 00a5  ld   $a5
              c29b 0099  ld   $99
              c29c 002a  ld   $2a
              c29d 00a9  ld   $a9
              c29e 00ff  ld   $ff
              c29f 00b0  ld   $b0
              c2a0 0002  ld   $02
              c2a1 00a9  ld   $a9
              c2a2 0001  ld   $01
              c2a3 0060  ld   $60
              c2a4 0020  ld   $20
              c2a5 00a3  ld   $a3
              c2a6 001c  ld   $1c
              c2a7 0085  ld   $85
              c2a8 0095  ld   $95
              c2a9 00a9  ld   $a9
              c2aa 0000  ld   $00
              c2ab 0085  ld   $85
              c2ac 0096  ld   $96
              c2ad 00a2  ld   $a2
              c2ae 0088  ld   $88
              c2af 00a5  ld   $a5
              c2b0 0095  ld   $95
              c2b1 0049  ld   $49
              c2b2 00ff  ld   $ff
              c2b3 002a  ld   $2a
              c2b4 00a9  ld   $a9
              c2b5 0000  ld   $00
              c2b6 0085  ld   $85
              c2b7 0098  ld   $98
              c2b8 0085  ld   $85
              c2b9 0097  ld   $97
              c2ba 0086  ld   $86
              c2bb 0094  ld   $94
              c2bc 0085  ld   $85
              c2bd 00a3  ld   $a3
              c2be 0085  ld   $85
              c2bf 0099  ld   $99
              c2c0 004c  ld   $4c
              c2c1 004a  ld   $4a
              c2c2 0019  ld   $19
              c2c3 0046  ld   $46
              c2c4 0099  ld   $99
              c2c5 0060  ld   $60
              c2c6 0085  ld   $85
              c2c7 0056  ld   $56
              c2c8 0084  ld   $84
              c2c9 0057  ld   $57
              c2ca 00a0  ld   $a0
              c2cb 0000  ld   $00
              c2cc 00b1  ld   $b1
              c2cd 0056  ld   $56
              c2ce 00c8  ld   $c8
              c2cf 00aa  ld   $aa
              c2d0 00f0  ld   $f0
              c2d1 00c4  ld   $c4
              c2d2 00b1  ld   $b1
              c2d3 0056  ld   $56
              c2d4 0045  ld   $45
              c2d5 0099  ld   $99
              c2d6 0030  ld   $30
              c2d7 00c2  ld   $c2
              c2d8 00e4  ld   $e4
              c2d9 0094  ld   $94
              c2da 00d0  ld   $d0
              c2db 0021  ld   $21
              c2dc 00b1  ld   $b1
              c2dd 0056  ld   $56
              c2de 0009  ld   $09
              c2df 0080  ld   $80
              c2e0 00c5  ld   $c5
              c2e1 0095  ld   $95
              c2e2 00d0  ld   $d0
              c2e3 0019  ld   $19
              c2e4 00c8  ld   $c8
              c2e5 00b1  ld   $b1
              c2e6 0056  ld   $56
              c2e7 00c5  ld   $c5
              c2e8 0096  ld   $96
              c2e9 00d0  ld   $d0
              c2ea 0012  ld   $12
              c2eb 00c8  ld   $c8
              c2ec 00b1  ld   $b1
              c2ed 0056  ld   $56
              c2ee 00c5  ld   $c5
              c2ef 0097  ld   $97
              c2f0 00d0  ld   $d0
              c2f1 000b  ld   $0b
              c2f2 00c8  ld   $c8
              c2f3 001d  ld   $1d
              c2f4 0000  ld   $00
              c2f5 0000  ld   $00
              c2f6 00a9  ld   $a9
              c2f7 007f  ld   $7f
              c2f8 00c5  ld   $c5
              c2f9 00a3  ld   $a3
              c2fa 00b1  ld   $b1
              c2fb fe00  bra  ac          ;+-----------------------------------+
              c2fc fcfd  bra  $c2fd       ;|                                   |
              c2fd 1418  ld   $18,y       ;| Trampoline for page $c200 lookups |
              c2fe e006  jmp  y,$06       ;|                                   |
              c2ff c218  st   [$18]       ;+-----------------------------------+
              c300 0056  ld   $56
              c301 00e5  ld   $e5
              c302 0098  ld   $98
              c303 00f0  ld   $f0
              c304 0028  ld   $28
              c305 00a5  ld   $a5
              c306 0099  ld   $99
              c307 0090  ld   $90
              c308 0002  ld   $02
              c309 0049  ld   $49
              c30a 00ff  ld   $ff
              c30b 004c  ld   $4c
              c30c 00a9  ld   $a9
              c30d 001c  ld   $1c
              c30e 00a5  ld   $a5
              c30f 0094  ld   $94
              c310 00f0  ld   $f0
              c311 004a  ld   $4a
              c312 0038  ld   $38
              c313 00e9  ld   $e9
              c314 00a0  ld   $a0
              c315 0024  ld   $24
              c316 0099  ld   $99
              c317 0010  ld   $10
              c318 0009  ld   $09
              c319 00aa  ld   $aa
              c31a 00a9  ld   $a9
              c31b 00ff  ld   $ff
              c31c 0085  ld   $85
              c31d 009b  ld   $9b
              c31e 0020  ld   $20
              c31f 00c5  ld   $c5
              c320 0019  ld   $19
              c321 008a  ld   $8a
              c322 00a2  ld   $a2
              c323 0094  ld   $94
              c324 00c9  ld   $c9
              c325 00f9  ld   $f9
              c326 0010  ld   $10
              c327 0006  ld   $06
              c328 0020  ld   $20
              c329 0011  ld   $11
              c32a 001a  ld   $1a
              c32b 0084  ld   $84
              c32c 009b  ld   $9b
              c32d 0060  ld   $60
              c32e 00a8  ld   $a8
              c32f 00a5  ld   $a5
              c330 0099  ld   $99
              c331 0029  ld   $29
              c332 0080  ld   $80
              c333 0046  ld   $46
              c334 0095  ld   $95
              c335 0005  ld   $05
              c336 0095  ld   $95
              c337 0085  ld   $85
              c338 0095  ld   $95
              c339 0020  ld   $20
              c33a 0028  ld   $28
              c33b 001a  ld   $1a
              c33c 0084  ld   $84
              c33d 009b  ld   $9b
              c33e 0060  ld   $60
              c33f 00a5  ld   $a5
              c340 0094  ld   $94
              c341 00c9  ld   $c9
              c342 00a0  ld   $a0
              c343 00b0  ld   $b0
              c344 0020  ld   $20
              c345 0020  ld   $20
              c346 0013  ld   $13
              c347 001d  ld   $1d
              c348 0084  ld   $84
              c349 00a3  ld   $a3
              c34a 00a5  ld   $a5
              c34b 0099  ld   $99
              c34c 0084  ld   $84
              c34d 0099  ld   $99
              c34e 0049  ld   $49
              c34f 0080  ld   $80
              c350 002a  ld   $2a
              c351 00a9  ld   $a9
              c352 00a0  ld   $a0
              c353 0085  ld   $85
              c354 0094  ld   $94
              c355 00a5  ld   $a5
              c356 0098  ld   $98
              c357 0085  ld   $85
              c358 003b  ld   $3b
              c359 004c  ld   $4c
              c35a 004a  ld   $4a
              c35b 0019  ld   $19
              c35c 0085  ld   $85
              c35d 0095  ld   $95
              c35e 0085  ld   $85
              c35f 0096  ld   $96
              c360 0085  ld   $85
              c361 0097  ld   $97
              c362 0085  ld   $85
              c363 0098  ld   $98
              c364 00a8  ld   $a8
              c365 0060  ld   $60
              c366 00a0  ld   $a0
              c367 0000  ld   $00
              c368 00a2  ld   $a2
              c369 000a  ld   $0a
              c36a 0094  ld   $94
              c36b 0090  ld   $90
              c36c 00ca  ld   $ca
              c36d 0010  ld   $10
              c36e 00fb  ld   $fb
              c36f 0090  ld   $90
              c370 000f  ld   $0f
              c371 00c9  ld   $c9
              c372 002d  ld   $2d
              c373 00d0  ld   $d0
              c374 0004  ld   $04
              c375 0086  ld   $86
              c376 009a  ld   $9a
              c377 00f0  ld   $f0
              c378 0004  ld   $04
              c379 00c9  ld   $c9
              c37a 002b  ld   $2b
              c37b 00d0  ld   $d0
              c37c 0005  ld   $05
              c37d 0020  ld   $20
              c37e 006b  ld   $6b
              c37f 0022  ld   $22
              c380 0090  ld   $90
              c381 005b  ld   $5b
              c382 00c9  ld   $c9
              c383 002e  ld   $2e
              c384 00f0  ld   $f0
              c385 002e  ld   $2e
              c386 00c9  ld   $c9
              c387 0045  ld   $45
              c388 00d0  ld   $d0
              c389 0030  ld   $30
              c38a 0020  ld   $20
              c38b 006b  ld   $6b
              c38c 0022  ld   $22
              c38d 0090  ld   $90
              c38e 0017  ld   $17
              c38f 00c9  ld   $c9
              c390 00a5  ld   $a5
              c391 00f0  ld   $f0
              c392 000e  ld   $0e
              c393 00c9  ld   $c9
              c394 002d  ld   $2d
              c395 00f0  ld   $f0
              c396 000a  ld   $0a
              c397 00c9  ld   $c9
              c398 00a4  ld   $a4
              c399 00f0  ld   $f0
              c39a 0008  ld   $08
              c39b 00c9  ld   $c9
              c39c 002b  ld   $2b
              c39d 00f0  ld   $f0
              c39e 0004  ld   $04
              c39f 00d0  ld   $d0
              c3a0 0007  ld   $07
              c3a1 0066  ld   $66
              c3a2 0093  ld   $93
              c3a3 0020  ld   $20
              c3a4 006b  ld   $6b
              c3a5 0022  ld   $22
              c3a6 0090  ld   $90
              c3a7 005c  ld   $5c
              c3a8 0024  ld   $24
              c3a9 0093  ld   $93
              c3aa 0010  ld   $10
              c3ab 000e  ld   $0e
              c3ac 00a9  ld   $a9
              c3ad 0000  ld   $00
              c3ae 0038  ld   $38
              c3af 00e5  ld   $e5
              c3b0 0091  ld   $91
              c3b1 004c  ld   $4c
              c3b2 00c1  ld   $c1
              c3b3 001d  ld   $1d
              c3b4 0066  ld   $66
              c3b5 0092  ld   $92
              c3b6 0024  ld   $24
              c3b7 0092  ld   $92
              c3b8 0050  ld   $50
              c3b9 00c3  ld   $c3
              c3ba 00a5  ld   $a5
              c3bb 0091  ld   $91
              c3bc 0038  ld   $38
              c3bd 00e5  ld   $e5
              c3be 0090  ld   $90
              c3bf 0085  ld   $85
              c3c0 0091  ld   $91
              c3c1 00f0  ld   $f0
              c3c2 0012  ld   $12
              c3c3 0010  ld   $10
              c3c4 0009  ld   $09
              c3c5 0020  ld   $20
              c3c6 0076  ld   $76
              c3c7 001b  ld   $1b
              c3c8 00e6  ld   $e6
              c3c9 0091  ld   $91
              c3ca 00d0  ld   $d0
              c3cb 00f9  ld   $f9
              c3cc 00f0  ld   $f0
              c3cd 0007  ld   $07
              c3ce 0020  ld   $20
              c3cf 005a  ld   $5a
              c3d0 001b  ld   $1b
              c3d1 00c6  ld   $c6
              c3d2 0091  ld   $91
              c3d3 00d0  ld   $d0
              c3d4 00f9  ld   $f9
              c3d5 00a5  ld   $a5
              c3d6 009a  ld   $9a
              c3d7 0030  ld   $30
              c3d8 0001  ld   $01
              c3d9 0060  ld   $60
              c3da 004c  ld   $4c
              c3db 000d  ld   $0d
              c3dc 0020  ld   $20
              c3dd 0048  ld   $48
              c3de 0024  ld   $24
              c3df 0092  ld   $92
              c3e0 0010  ld   $10
              c3e1 0002  ld   $02
              c3e2 00e6  ld   $e6
              c3e3 0090  ld   $90
              c3e4 0020  ld   $20
              c3e5 005a  ld   $5a
              c3e6 001b  ld   $1b
              c3e7 0068  ld   $68
              c3e8 0038  ld   $38
              c3e9 00e9  ld   $e9
              c3ea 0030  ld   $30
              c3eb 0020  ld   $20
              c3ec 00f6  ld   $f6
              c3ed 001d  ld   $1d
              c3ee 004c  ld   $4c
              c3ef 0082  ld   $82
              c3f0 001d  ld   $1d
              c3f1 0048  ld   $48
              c3f2 0020  ld   $20
              c3f3 0084  ld   $84
              c3f4 001c  ld   $1c
              c3f5 0068  ld   $68
              c3f6 0020  ld   $20
              c3f7 00b4  ld   $b4
              c3f8 001c  ld   $1c
              c3f9 00a5  ld   $a5
              c3fa 00a1  ld   $a1
              c3fb fe00  bra  ac          ;+-----------------------------------+
              c3fc fcfd  bra  $c3fd       ;|                                   |
              c3fd 1418  ld   $18,y       ;| Trampoline for page $c300 lookups |
              c3fe e006  jmp  y,$06       ;|                                   |
              c3ff c218  st   [$18]       ;+-----------------------------------+
              c400 001e  ld   $1e
              c401 0000  ld   $00
              c402 0000  ld   $00
              c403 0045  ld   $45
              c404 0099  ld   $99
              c405 0085  ld   $85
              c406 00a2  ld   $a2
              c407 00a6  ld   $a6
              c408 0094  ld   $94
              c409 004c  ld   $4c
              c40a 00e2  ld   $e2
              c40b 0018  ld   $18
              c40c 00a5  ld   $a5
              c40d 0091  ld   $91
              c40e 00c9  ld   $c9
              c40f 000a  ld   $0a
              c410 0090  ld   $90
              c411 0009  ld   $09
              c412 00a9  ld   $a9
              c413 0064  ld   $64
              c414 0024  ld   $24
              c415 0093  ld   $93
              c416 0030  ld   $30
              c417 0011  ld   $11
              c418 004c  ld   $4c
              c419 00f6  ld   $f6
              c41a 0019  ld   $19
              c41b 000a  ld   $0a
              c41c 000a  ld   $0a
              c41d 0018  ld   $18
              c41e 0065  ld   $65
              c41f 0091  ld   $91
              c420 000a  ld   $0a
              c421 0018  ld   $18
              c422 00a0  ld   $a0
              c423 0000  ld   $00
              c424 0071  ld   $71
              c425 00a6  ld   $a6
              c426 0038  ld   $38
              c427 00e9  ld   $e9
              c428 0030  ld   $30
              c429 0085  ld   $85
              c42a 0091  ld   $91
              c42b 004c  ld   $4c
              c42c 00a8  ld   $a8
              c42d 001d  ld   $1d
              c42e 009b  ld   $9b
              c42f 003e  ld   $3e
              c430 00bc  ld   $bc
              c431 001f  ld   $1f
              c432 00fd  ld   $fd
              c433 009e  ld   $9e
              c434 006e  ld   $6e
              c435 006b  ld   $6b
              c436 0027  ld   $27
              c437 00fd  ld   $fd
              c438 009e  ld   $9e
              c439 006e  ld   $6e
              c43a 006b  ld   $6b
              c43b 0028  ld   $28
              c43c 0000  ld   $00
              c43d 00a9  ld   $a9
              c43e 008a  ld   $8a
              c43f 00a0  ld   $a0
              c440 0004  ld   $04
              c441 0020  ld   $20
              c442 0052  ld   $52
              c443 001e  ld   $1e
              c444 00a5  ld   $a5
              c445 006c  ld   $6c
              c446 00a6  ld   $a6
              c447 006b  ld   $6b
              c448 0085  ld   $85
              c449 0095  ld   $95
              c44a 0086  ld   $86
              c44b 0096  ld   $96
              c44c 00a2  ld   $a2
              c44d 0090  ld   $90
              c44e 0038  ld   $38
              c44f 0020  ld   $20
              c450 00c1  ld   $c1
              c451 001c  ld   $1c
              c452 0020  ld   $20
              c453 0055  ld   $55
              c454 001e  ld   $1e
              c455 004c  ld   $4c
              c456 00ef  ld   $ef
              c457 000b  ld   $0b
              c458 00a0  ld   $a0
              c459 0001  ld   $01
              c45a 00a9  ld   $a9
              c45b 0020  ld   $20
              c45c 0024  ld   $24
              c45d 0099  ld   $99
              c45e 0010  ld   $10
              c45f 0002  ld   $02
              c460 00a9  ld   $a9
              c461 002d  ld   $2d
              c462 0099  ld   $99
              c463 0004  ld   $04
              c464 0002  ld   $02
              c465 0085  ld   $85
              c466 0099  ld   $99
              c467 0084  ld   $84
              c468 00a4  ld   $a4
              c469 00c8  ld   $c8
              c46a 00a9  ld   $a9
              c46b 0030  ld   $30
              c46c 00a6  ld   $a6
              c46d 0094  ld   $94
              c46e 00d0  ld   $d0
              c46f 0003  ld   $03
              c470 004c  ld   $4c
              c471 007c  ld   $7c
              c472 001f  ld   $1f
              c473 00a9  ld   $a9
              c474 0000  ld   $00
              c475 00e0  ld   $e0
              c476 0080  ld   $80
              c477 00f0  ld   $f0
              c478 0002  ld   $02
              c479 00b0  ld   $b0
              c47a 0009  ld   $09
              c47b 00a9  ld   $a9
              c47c 0035  ld   $35
              c47d 00a0  ld   $a0
              c47e 001e  ld   $1e
              c47f 0020  ld   $20
              c480 00a0  ld   $a0
              c481 001a  ld   $1a
              c482 00a9  ld   $a9
              c483 00f7  ld   $f7
              c484 0085  ld   $85
              c485 0090  ld   $90
              c486 00a9  ld   $a9
              c487 0030  ld   $30
              c488 00a0  ld   $a0
              c489 001e  ld   $1e
              c48a 0020  ld   $20
              c48b 00d3  ld   $d3
              c48c 001c  ld   $1c
              c48d 00f0  ld   $f0
              c48e 001e  ld   $1e
              c48f 0010  ld   $10
              c490 0012  ld   $12
              c491 00a9  ld   $a9
              c492 002b  ld   $2b
              c493 00a0  ld   $a0
              c494 001e  ld   $1e
              c495 0020  ld   $20
              c496 00d3  ld   $d3
              c497 001c  ld   $1c
              c498 00f0  ld   $f0
              c499 0002  ld   $02
              c49a 0010  ld   $10
              c49b 000e  ld   $0e
              c49c 0020  ld   $20
              c49d 005a  ld   $5a
              c49e 001b  ld   $1b
              c49f 00c6  ld   $c6
              c4a0 0090  ld   $90
              c4a1 00d0  ld   $d0
              c4a2 00ee  ld   $ee
              c4a3 0020  ld   $20
              c4a4 0076  ld   $76
              c4a5 001b  ld   $1b
              c4a6 00e6  ld   $e6
              c4a7 0090  ld   $90
              c4a8 00d0  ld   $d0
              c4a9 00dc  ld   $dc
              c4aa 0020  ld   $20
              c4ab 008e  ld   $8e
              c4ac 0018  ld   $18
              c4ad 0020  ld   $20
              c4ae 0013  ld   $13
              c4af 001d  ld   $1d
              c4b0 00a2  ld   $a2
              c4b1 0001  ld   $01
              c4b2 00a5  ld   $a5
              c4b3 0090  ld   $90
              c4b4 0018  ld   $18
              c4b5 0069  ld   $69
              c4b6 000a  ld   $0a
              c4b7 0030  ld   $30
              c4b8 0009  ld   $09
              c4b9 00c9  ld   $c9
              c4ba 000b  ld   $0b
              c4bb 00b0  ld   $b0
              c4bc 0006  ld   $06
              c4bd 0069  ld   $69
              c4be 00ff  ld   $ff
              c4bf 00aa  ld   $aa
              c4c0 00a9  ld   $a9
              c4c1 0002  ld   $02
              c4c2 0038  ld   $38
              c4c3 00e9  ld   $e9
              c4c4 0002  ld   $02
              c4c5 0085  ld   $85
              c4c6 0091  ld   $91
              c4c7 0086  ld   $86
              c4c8 0090  ld   $90
              c4c9 008a  ld   $8a
              c4ca 00f0  ld   $f0
              c4cb 0002  ld   $02
              c4cc 0010  ld   $10
              c4cd 0013  ld   $13
              c4ce 00a4  ld   $a4
              c4cf 00a4  ld   $a4
              c4d0 00a9  ld   $a9
              c4d1 002e  ld   $2e
              c4d2 00c8  ld   $c8
              c4d3 0099  ld   $99
              c4d4 0004  ld   $04
              c4d5 0002  ld   $02
              c4d6 008a  ld   $8a
              c4d7 00f0  ld   $f0
              c4d8 0006  ld   $06
              c4d9 00a9  ld   $a9
              c4da 0030  ld   $30
              c4db 00c8  ld   $c8
              c4dc 0099  ld   $99
              c4dd 0004  ld   $04
              c4de 0002  ld   $02
              c4df 0084  ld   $84
              c4e0 00a4  ld   $a4
              c4e1 00a0  ld   $a0
              c4e2 0000  ld   $00
              c4e3 00a2  ld   $a2
              c4e4 0080  ld   $80
              c4e5 00a5  ld   $a5
              c4e6 0098  ld   $98
              c4e7 0018  ld   $18
              c4e8 0079  ld   $79
              c4e9 0091  ld   $91
              c4ea 001f  ld   $1f
              c4eb 0085  ld   $85
              c4ec 0098  ld   $98
              c4ed 00a5  ld   $a5
              c4ee 0097  ld   $97
              c4ef 0079  ld   $79
              c4f0 0090  ld   $90
              c4f1 001f  ld   $1f
              c4f2 0085  ld   $85
              c4f3 0097  ld   $97
              c4f4 00a5  ld   $a5
              c4f5 0096  ld   $96
              c4f6 0079  ld   $79
              c4f7 008f  ld   $8f
              c4f8 001f  ld   $1f
              c4f9 0085  ld   $85
              c4fa 0096  ld   $96
              c4fb fe00  bra  ac          ;+-----------------------------------+
              c4fc fcfd  bra  $c4fd       ;|                                   |
              c4fd 1418  ld   $18,y       ;| Trampoline for page $c400 lookups |
              c4fe e006  jmp  y,$06       ;|                                   |
              c4ff c218  st   [$18]       ;+-----------------------------------+
              c500 00a5  ld   $a5
              c501 0095  ld   $95
              c502 0079  ld   $79
              c503 008e  ld   $8e
              c504 001f  ld   $1f
              c505 0085  ld   $85
              c506 0095  ld   $95
              c507 00e8  ld   $e8
              c508 001f  ld   $1f
              c509 0000  ld   $00
              c50a 0000  ld   $00
              c50b 00b0  ld   $b0
              c50c 0004  ld   $04
              c50d 0010  ld   $10
              c50e 00de  ld   $de
              c50f 0030  ld   $30
              c510 0002  ld   $02
              c511 0030  ld   $30
              c512 00da  ld   $da
              c513 008a  ld   $8a
              c514 0090  ld   $90
              c515 0004  ld   $04
              c516 0049  ld   $49
              c517 00ff  ld   $ff
              c518 0069  ld   $69
              c519 000a  ld   $0a
              c51a 0069  ld   $69
              c51b 002f  ld   $2f
              c51c 00c8  ld   $c8
              c51d 00c8  ld   $c8
              c51e 00c8  ld   $c8
              c51f 00c8  ld   $c8
              c520 0084  ld   $84
              c521 0079  ld   $79
              c522 00a4  ld   $a4
              c523 00a4  ld   $a4
              c524 00c8  ld   $c8
              c525 00aa  ld   $aa
              c526 0029  ld   $29
              c527 007f  ld   $7f
              c528 0099  ld   $99
              c529 0004  ld   $04
              c52a 0002  ld   $02
              c52b 00c6  ld   $c6
              c52c 0090  ld   $90
              c52d 00d0  ld   $d0
              c52e 0006  ld   $06
              c52f 00a9  ld   $a9
              c530 002e  ld   $2e
              c531 00c8  ld   $c8
              c532 0099  ld   $99
              c533 0004  ld   $04
              c534 0002  ld   $02
              c535 0084  ld   $84
              c536 00a4  ld   $a4
              c537 00a4  ld   $a4
              c538 0079  ld   $79
              c539 008a  ld   $8a
              c53a 0049  ld   $49
              c53b 00ff  ld   $ff
              c53c 0029  ld   $29
              c53d 0080  ld   $80
              c53e 00aa  ld   $aa
              c53f 00c0  ld   $c0
              c540 0024  ld   $24
              c541 00f0  ld   $f0
              c542 0004  ld   $04
              c543 00c0  ld   $c0
              c544 003c  ld   $3c
              c545 00d0  ld   $d0
              c546 00a6  ld   $a6
              c547 00a4  ld   $a4
              c548 00a4  ld   $a4
              c549 00b9  ld   $b9
              c54a 0004  ld   $04
              c54b 0002  ld   $02
              c54c 0088  ld   $88
              c54d 00c9  ld   $c9
              c54e 0030  ld   $30
              c54f 00f0  ld   $f0
              c550 00f8  ld   $f8
              c551 00c9  ld   $c9
              c552 002e  ld   $2e
              c553 00f0  ld   $f0
              c554 0001  ld   $01
              c555 00c8  ld   $c8
              c556 00a9  ld   $a9
              c557 002b  ld   $2b
              c558 00a6  ld   $a6
              c559 0091  ld   $91
              c55a 00f0  ld   $f0
              c55b 002e  ld   $2e
              c55c 0010  ld   $10
              c55d 0008  ld   $08
              c55e 00a9  ld   $a9
              c55f 0000  ld   $00
              c560 0038  ld   $38
              c561 00e5  ld   $e5
              c562 0091  ld   $91
              c563 00aa  ld   $aa
              c564 00a9  ld   $a9
              c565 002d  ld   $2d
              c566 0099  ld   $99
              c567 0006  ld   $06
              c568 0002  ld   $02
              c569 00a9  ld   $a9
              c56a 0045  ld   $45
              c56b 0099  ld   $99
              c56c 0005  ld   $05
              c56d 0002  ld   $02
              c56e 008a  ld   $8a
              c56f 00a2  ld   $a2
              c570 002f  ld   $2f
              c571 0038  ld   $38
              c572 00e8  ld   $e8
              c573 00e9  ld   $e9
              c574 000a  ld   $0a
              c575 00b0  ld   $b0
              c576 00fb  ld   $fb
              c577 0069  ld   $69
              c578 003a  ld   $3a
              c579 0099  ld   $99
              c57a 0008  ld   $08
              c57b 0002  ld   $02
              c57c 008a  ld   $8a
              c57d 0099  ld   $99
              c57e 0007  ld   $07
              c57f 0002  ld   $02
              c580 00a9  ld   $a9
              c581 0000  ld   $00
              c582 0099  ld   $99
              c583 0009  ld   $09
              c584 0002  ld   $02
              c585 00f0  ld   $f0
              c586 0008  ld   $08
              c587 0099  ld   $99
              c588 0004  ld   $04
              c589 0002  ld   $02
              c58a 00a9  ld   $a9
              c58b 0000  ld   $00
              c58c 0099  ld   $99
              c58d 0005  ld   $05
              c58e 0002  ld   $02
              c58f 00a9  ld   $a9
              c590 0005  ld   $05
              c591 00a0  ld   $a0
              c592 0002  ld   $02
              c593 0060  ld   $60
              c594 0080  ld   $80
              c595 0000  ld   $00
              c596 0000  ld   $00
              c597 0000  ld   $00
              c598 0000  ld   $00
              c599 00fa  ld   $fa
              c59a 000a  ld   $0a
              c59b 001f  ld   $1f
              c59c 0000  ld   $00
              c59d 0000  ld   $00
              c59e 0098  ld   $98
              c59f 0096  ld   $96
              c5a0 0080  ld   $80
              c5a1 00ff  ld   $ff
              c5a2 00f0  ld   $f0
              c5a3 00bd  ld   $bd
              c5a4 00c0  ld   $c0
              c5a5 0000  ld   $00
              c5a6 0001  ld   $01
              c5a7 0086  ld   $86
              c5a8 00a0  ld   $a0
              c5a9 00ff  ld   $ff
              c5aa 00ff  ld   $ff
              c5ab 00d8  ld   $d8
              c5ac 00f0  ld   $f0
              c5ad 0000  ld   $00
              c5ae 0000  ld   $00
              c5af 0003  ld   $03
              c5b0 00e8  ld   $e8
              c5b1 00ff  ld   $ff
              c5b2 00ff  ld   $ff
              c5b3 00ff  ld   $ff
              c5b4 009c  ld   $9c
              c5b5 0000  ld   $00
              c5b6 0000  ld   $00
              c5b7 0000  ld   $00
              c5b8 000a  ld   $0a
              c5b9 00ff  ld   $ff
              c5ba 00ff  ld   $ff
              c5bb 00ff  ld   $ff
              * 5 times
              c5be 00df  ld   $df
              c5bf 000a  ld   $0a
              c5c0 0080  ld   $80
              c5c1 0000  ld   $00
              c5c2 0003  ld   $03
              c5c3 004b  ld   $4b
              c5c4 00c0  ld   $c0
              c5c5 00ff  ld   $ff
              c5c6 00ff  ld   $ff
              c5c7 0073  ld   $73
              c5c8 0060  ld   $60
              c5c9 0000  ld   $00
              c5ca 0000  ld   $00
              c5cb 000e  ld   $0e
              c5cc 0010  ld   $10
              c5cd 00ff  ld   $ff
              c5ce 00ff  ld   $ff
              c5cf 00fd  ld   $fd
              c5d0 00a8  ld   $a8
              c5d1 0000  ld   $00
              c5d2 0000  ld   $00
              c5d3 0000  ld   $00
              c5d4 003c  ld   $3c
              c5d5 0020  ld   $20
              c5d6 0084  ld   $84
              c5d7 001c  ld   $1c
              c5d8 00a9  ld   $a9
              c5d9 0089  ld   $89
              c5da 00a0  ld   $a0
              c5db 001f  ld   $1f
              c5dc 0020  ld   $20
              c5dd 001a  ld   $1a
              c5de 001c  ld   $1c
              c5df 00f0  ld   $f0
              c5e0 0070  ld   $70
              c5e1 00a5  ld   $a5
              c5e2 009c  ld   $9c
              c5e3 00d0  ld   $d0
              c5e4 0003  ld   $03
              c5e5 004c  ld   $4c
              c5e6 0071  ld   $71
              c5e7 0019  ld   $19
              c5e8 00a2  ld   $a2
              c5e9 0081  ld   $81
              c5ea 00a0  ld   $a0
              c5eb 0000  ld   $00
              c5ec 0020  ld   $20
              c5ed 004c  ld   $4c
              c5ee 001c  ld   $1c
              c5ef 00a5  ld   $a5
              c5f0 00a1  ld   $a1
              c5f1 0010  ld   $10
              c5f2 000f  ld   $0f
              c5f3 0020  ld   $20
              c5f4 0044  ld   $44
              c5f5 001d  ld   $1d
              c5f6 00a9  ld   $a9
              c5f7 0081  ld   $81
              c5f8 00a0  ld   $a0
              c5f9 0000  ld   $00
              c5fa 0020  ld   $20
              c5fb fe00  bra  ac          ;+-----------------------------------+
              c5fc fcfd  bra  $c5fd       ;|                                   |
              c5fd 1418  ld   $18,y       ;| Trampoline for page $c500 lookups |
              c5fe e006  jmp  y,$06       ;|                                   |
              c5ff c218  st   [$18]       ;+-----------------------------------+
              c600 00d3  ld   $d3
              c601 001c  ld   $1c
              c602 00d0  ld   $d0
              c603 0003  ld   $03
              c604 0098  ld   $98
              c605 00a4  ld   $a4
              c606 003b  ld   $3b
              c607 0020  ld   $20
              c608 0076  ld   $76
              c609 001c  ld   $1c
              c60a 0098  ld   $98
              c60b 0048  ld   $48
              c60c 0020  ld   $20
              c60d 0062  ld   $62
              c60e 001a  ld   $1a
              c60f 00a9  ld   $a9
              c610 0020  ld   $20
              c611 0000  ld   $00
              c612 0000  ld   $00
              c613 0081  ld   $81
              c614 00a0  ld   $a0
              c615 0000  ld   $00
              c616 0020  ld   $20
              c617 00a0  ld   $a0
              c618 001a  ld   $1a
              c619 0020  ld   $20
              c61a 0046  ld   $46
              c61b 0020  ld   $20
              c61c 0068  ld   $68
              c61d 004a  ld   $4a
              c61e 0090  ld   $90
              c61f 000a  ld   $0a
              c620 00a5  ld   $a5
              c621 0094  ld   $94
              c622 00f0  ld   $f0
              c623 0006  ld   $06
              c624 00a5  ld   $a5
              c625 0099  ld   $99
              c626 0049  ld   $49
              c627 00ff  ld   $ff
              c628 0085  ld   $85
              c629 0099  ld   $99
              c62a 0060  ld   $60
              c62b 0081  ld   $81
              c62c 0038  ld   $38
              c62d 00aa  ld   $aa
              c62e 003b  ld   $3b
              c62f 0029  ld   $29
              c630 0007  ld   $07
              c631 0071  ld   $71
              c632 0034  ld   $34
              c633 0058  ld   $58
              c634 003e  ld   $3e
              c635 0056  ld   $56
              c636 0074  ld   $74
              c637 0016  ld   $16
              c638 007e  ld   $7e
              c639 00b3  ld   $b3
              c63a 001b  ld   $1b
              c63b 0077  ld   $77
              c63c 002f  ld   $2f
              c63d 00ee  ld   $ee
              c63e 00e3  ld   $e3
              c63f 0085  ld   $85
              c640 007a  ld   $7a
              c641 001d  ld   $1d
              c642 0084  ld   $84
              c643 001c  ld   $1c
              c644 002a  ld   $2a
              c645 007c  ld   $7c
              c646 0063  ld   $63
              c647 0059  ld   $59
              c648 0058  ld   $58
              c649 000a  ld   $0a
              c64a 007e  ld   $7e
              c64b 0075  ld   $75
              c64c 00fd  ld   $fd
              c64d 00e7  ld   $e7
              c64e 00c6  ld   $c6
              c64f 0080  ld   $80
              c650 0031  ld   $31
              c651 0072  ld   $72
              c652 0018  ld   $18
              c653 0010  ld   $10
              c654 0081  ld   $81
              c655 0000  ld   $00
              c656 0000  ld   $00
              c657 0000  ld   $00
              c658 0000  ld   $00
              c659 00a9  ld   $a9
              c65a 0018  ld   $18
              c65b 00a0  ld   $a0
              c65c 0020  ld   $20
              c65d 0020  ld   $20
              c65e 00a0  ld   $a0
              c65f 001a  ld   $1a
              c660 00a5  ld   $a5
              c661 00a3  ld   $a3
              c662 0069  ld   $69
              c663 0050  ld   $50
              c664 0090  ld   $90
              c665 0003  ld   $03
              c666 0020  ld   $20
              c667 009b  ld   $9b
              c668 001c  ld   $1c
              c669 0085  ld   $85
              c66a 0089  ld   $89
              c66b 0020  ld   $20
              c66c 0087  ld   $87
              c66d 001c  ld   $1c
              c66e 00a5  ld   $a5
              c66f 0094  ld   $94
              c670 00c9  ld   $c9
              c671 0088  ld   $88
              c672 0090  ld   $90
              c673 0003  ld   $03
              c674 0020  ld   $20
              c675 004c  ld   $4c
              c676 001b  ld   $1b
              c677 0020  ld   $20
              c678 0044  ld   $44
              c679 001d  ld   $1d
              c67a 00a5  ld   $a5
              c67b 003b  ld   $3b
              c67c 0018  ld   $18
              c67d 0069  ld   $69
              c67e 0081  ld   $81
              c67f 00f0  ld   $f0
              c680 00f3  ld   $f3
              c681 0038  ld   $38
              c682 00e9  ld   $e9
              c683 0001  ld   $01
              c684 0048  ld   $48
              c685 00a2  ld   $a2
              c686 0005  ld   $05
              c687 00b5  ld   $b5
              c688 009c  ld   $9c
              c689 00b4  ld   $b4
              c68a 0094  ld   $94
              c68b 0095  ld   $95
              c68c 0094  ld   $94
              c68d 0094  ld   $94
              c68e 009c  ld   $9c
              c68f 00ca  ld   $ca
              c690 0010  ld   $10
              c691 00f5  ld   $f5
              c692 00a5  ld   $a5
              c693 0089  ld   $89
              c694 0085  ld   $85
              c695 00a3  ld   $a3
              c696 0020  ld   $20
              c697 0098  ld   $98
              c698 0018  ld   $18
              c699 0020  ld   $20
              c69a 000d  ld   $0d
              c69b 0020  ld   $20
              c69c 00a9  ld   $a9
              c69d 001d  ld   $1d
              c69e 00a0  ld   $a0
              c69f 0020  ld   $20
              c6a0 0020  ld   $20
              c6a1 00af  ld   $af
              c6a2 0020  ld   $20
              c6a3 00a9  ld   $a9
              c6a4 0000  ld   $00
              c6a5 0085  ld   $85
              c6a6 00a2  ld   $a2
              c6a7 0068  ld   $68
              c6a8 0020  ld   $20
              c6a9 0031  ld   $31
              c6aa 001b  ld   $1b
              c6ab 0060  ld   $60
              c6ac 0085  ld   $85
              c6ad 00a4  ld   $a4
              c6ae 0084  ld   $84
              c6af 00a5  ld   $a5
              c6b0 0020  ld   $20
              c6b1 0042  ld   $42
              c6b2 001c  ld   $1c
              c6b3 00a9  ld   $a9
              c6b4 008a  ld   $8a
              c6b5 0020  ld   $20
              c6b6 00a0  ld   $a0
              c6b7 001a  ld   $1a
              c6b8 0020  ld   $20
              c6b9 00b3  ld   $b3
              c6ba 0020  ld   $20
              c6bb 00a9  ld   $a9
              c6bc 008a  ld   $8a
              c6bd 00a0  ld   $a0
              c6be 0000  ld   $00
              c6bf 004c  ld   $4c
              c6c0 00a0  ld   $a0
              c6c1 001a  ld   $1a
              c6c2 0085  ld   $85
              c6c3 00a4  ld   $a4
              c6c4 0084  ld   $84
              c6c5 00a5  ld   $a5
              c6c6 0020  ld   $20
              c6c7 003f  ld   $3f
              c6c8 001c  ld   $1c
              c6c9 00b1  ld   $b1
              c6ca 00a4  ld   $a4
              c6cb 0085  ld   $85
              c6cc 009a  ld   $9a
              c6cd 00a4  ld   $a4
              c6ce 00a4  ld   $a4
              c6cf 00c8  ld   $c8
              c6d0 0098  ld   $98
              c6d1 00d0  ld   $d0
              c6d2 0002  ld   $02
              c6d3 00e6  ld   $e6
              c6d4 00a5  ld   $a5
              c6d5 0085  ld   $85
              c6d6 00a4  ld   $a4
              c6d7 00a4  ld   $a4
              c6d8 00a5  ld   $a5
              c6d9 0020  ld   $20
              c6da 00a0  ld   $a0
              c6db 001a  ld   $1a
              c6dc 00a5  ld   $a5
              c6dd 00a4  ld   $a4
              c6de 00a4  ld   $a4
              c6df 00a5  ld   $a5
              c6e0 0018  ld   $18
              c6e1 0069  ld   $69
              c6e2 0005  ld   $05
              c6e3 0090  ld   $90
              c6e4 0001  ld   $01
              c6e5 00c8  ld   $c8
              c6e6 0085  ld   $85
              c6e7 00a4  ld   $a4
              c6e8 0084  ld   $84
              c6e9 00a5  ld   $a5
              c6ea 0020  ld   $20
              c6eb 00df  ld   $df
              c6ec 0018  ld   $18
              c6ed 00a9  ld   $a9
              c6ee 008f  ld   $8f
              c6ef 00a0  ld   $a0
              c6f0 0000  ld   $00
              c6f1 00c6  ld   $c6
              c6f2 009a  ld   $9a
              c6f3 00d0  ld   $d0
              c6f4 00e4  ld   $e4
              c6f5 0060  ld   $60
              c6f6 0098  ld   $98
              c6f7 0035  ld   $35
              c6f8 0044  ld   $44
              c6f9 007a  ld   $7a
              c6fa 0068  ld   $68
              c6fb fe00  bra  ac          ;+-----------------------------------+
              c6fc fcfd  bra  $c6fd       ;|                                   |
              c6fd 1418  ld   $18,y       ;| Trampoline for page $c600 lookups |
              c6fe e006  jmp  y,$06       ;|                                   |
              c6ff c218  st   [$18]       ;+-----------------------------------+
              c700 0028  ld   $28
              c701 00b1  ld   $b1
              c702 0046  ld   $46
              c703 0020  ld   $20
              c704 00a3  ld   $a3
              c705 001c  ld   $1c
              c706 0030  ld   $30
              c707 002a  ld   $2a
              c708 00d0  ld   $d0
              c709 0013  ld   $13
              c70a 00a5  ld   $a5
              c70b 0006  ld   $06
              c70c 0085  ld   $85
              c70d 0095  ld   $95
              c70e 00a5  ld   $a5
              c70f 000a  ld   $0a
              c710 0085  ld   $85
              c711 0096  ld   $96
              c712 00a5  ld   $a5
              c713 0007  ld   $07
              c714 0085  ld   $85
              c715 0097  ld   $97
              c716 00a5  ld   $a5
              c717 000b  ld   $0b
              c718 0021  ld   $21
              c719 0000  ld   $00
              c71a 0000  ld   $00
              c71b 0085  ld   $85
              c71c 0098  ld   $98
              c71d 004c  ld   $4c
              c71e 002a  ld   $2a
              c71f 0021  ld   $21
              c720 00a9  ld   $a9
              c721 0088  ld   $88
              c722 00a0  ld   $a0
              c723 0022  ld   $22
              c724 0020  ld   $20
              c725 001a  ld   $1a
              c726 001c  ld   $1c
              c727 00a9  ld   $a9
              c728 00e3  ld   $e3
              c729 00a0  ld   $a0
              c72a 0020  ld   $20
              c72b 0020  ld   $20
              c72c 00a0  ld   $a0
              c72d 001a  ld   $1a
              c72e 00a9  ld   $a9
              c72f 00e7  ld   $e7
              c730 00a0  ld   $a0
              c731 0020  ld   $20
              c732 0020  ld   $20
              c733 00df  ld   $df
              c734 0018  ld   $18
              c735 00a6  ld   $a6
              c736 0098  ld   $98
              c737 00a5  ld   $a5
              c738 0095  ld   $95
              c739 0085  ld   $85
              c73a 0098  ld   $98
              c73b 0086  ld   $86
              c73c 0095  ld   $95
              c73d 00a6  ld   $a6
              c73e 0096  ld   $96
              c73f 00a5  ld   $a5
              c740 0097  ld   $97
              c741 0085  ld   $85
              c742 0096  ld   $96
              c743 0086  ld   $86
              c744 0097  ld   $97
              c745 00a9  ld   $a9
              c746 0000  ld   $00
              c747 0085  ld   $85
              c748 0099  ld   $99
              c749 00a5  ld   $a5
              c74a 0094  ld   $94
              c74b 0085  ld   $85
              c74c 00a3  ld   $a3
              c74d 00a9  ld   $a9
              c74e 0080  ld   $80
              c74f 0085  ld   $85
              c750 0094  ld   $94
              c751 0020  ld   $20
              c752 004f  ld   $4f
              c753 0019  ld   $19
              c754 00a2  ld   $a2
              c755 0088  ld   $88
              c756 00a0  ld   $a0
              c757 0022  ld   $22
              c758 004c  ld   $4c
              c759 004c  ld   $4c
              c75a 001c  ld   $1c
              c75b 00a9  ld   $a9
              c75c 00bc  ld   $bc
              c75d 00a0  ld   $a0
              c75e 0021  ld   $21
              c75f 0020  ld   $20
              c760 00df  ld   $df
              c761 0018  ld   $18
              c762 0020  ld   $20
              c763 0084  ld   $84
              c764 001c  ld   $1c
              c765 00a9  ld   $a9
              c766 00c1  ld   $c1
              c767 00a0  ld   $a0
              c768 0021  ld   $21
              c769 00a6  ld   $a6
              c76a 00a1  ld   $a1
              c76b 0020  ld   $20
              c76c 007f  ld   $7f
              c76d 001b  ld   $1b
              c76e 0020  ld   $20
              c76f 0084  ld   $84
              c770 001c  ld   $1c
              c771 0020  ld   $20
              c772 0044  ld   $44
              c773 001d  ld   $1d
              c774 00a9  ld   $a9
              c775 0000  ld   $00
              c776 0085  ld   $85
              c777 00a2  ld   $a2
              c778 0020  ld   $20
              c779 0098  ld   $98
              c77a 0018  ld   $18
              c77b 00a9  ld   $a9
              c77c 00c6  ld   $c6
              c77d 00a0  ld   $a0
              c77e 0021  ld   $21
              c77f 0020  ld   $20
              c780 0095  ld   $95
              c781 0018  ld   $18
              c782 00a5  ld   $a5
              c783 0099  ld   $99
              c784 0048  ld   $48
              c785 0010  ld   $10
              c786 000d  ld   $0d
              c787 0020  ld   $20
              c788 008e  ld   $8e
              c789 0018  ld   $18
              c78a 00a5  ld   $a5
              c78b 0099  ld   $99
              c78c 0030  ld   $30
              c78d 0009  ld   $09
              c78e 00a5  ld   $a5
              c78f 0044  ld   $44
              c790 0049  ld   $49
              c791 00ff  ld   $ff
              c792 0085  ld   $85
              c793 0044  ld   $44
              c794 0020  ld   $20
              c795 000d  ld   $0d
              c796 0020  ld   $20
              c797 00a9  ld   $a9
              c798 00c6  ld   $c6
              c799 00a0  ld   $a0
              c79a 0021  ld   $21
              c79b 0020  ld   $20
              c79c 00df  ld   $df
              c79d 0018  ld   $18
              c79e 0068  ld   $68
              c79f 0010  ld   $10
              c7a0 0003  ld   $03
              c7a1 0020  ld   $20
              c7a2 000d  ld   $0d
              c7a3 0020  ld   $20
              c7a4 00a9  ld   $a9
              c7a5 00cb  ld   $cb
              c7a6 00a0  ld   $a0
              c7a7 0021  ld   $21
              c7a8 004c  ld   $4c
              c7a9 0099  ld   $99
              c7aa 0020  ld   $20
              c7ab 0020  ld   $20
              c7ac 0042  ld   $42
              c7ad 001c  ld   $1c
              c7ae 00a9  ld   $a9
              c7af 0000  ld   $00
              c7b0 0085  ld   $85
              c7b1 0044  ld   $44
              c7b2 0020  ld   $20
              c7b3 0047  ld   $47
              c7b4 0021  ld   $21
              c7b5 00a2  ld   $a2
              c7b6 0081  ld   $81
              c7b7 00a0  ld   $a0
              c7b8 0000  ld   $00
              c7b9 0020  ld   $20
              c7ba 003d  ld   $3d
              c7bb 0021  ld   $21
              c7bc 00a9  ld   $a9
              c7bd 008a  ld   $8a
              c7be 00a0  ld   $a0
              c7bf 0000  ld   $00
              c7c0 0020  ld   $20
              c7c1 001a  ld   $1a
              c7c2 001c  ld   $1c
              c7c3 00a9  ld   $a9
              c7c4 0000  ld   $00
              c7c5 0085  ld   $85
              c7c6 0099  ld   $99
              c7c7 00a5  ld   $a5
              c7c8 0044  ld   $44
              c7c9 0020  ld   $20
              c7ca 00b8  ld   $b8
              c7cb 0021  ld   $21
              c7cc 00a9  ld   $a9
              c7cd 0081  ld   $81
              c7ce 00a0  ld   $a0
              c7cf 0000  ld   $00
              c7d0 004c  ld   $4c
              c7d1 0087  ld   $87
              c7d2 001b  ld   $1b
              c7d3 0048  ld   $48
              c7d4 004c  ld   $4c
              c7d5 0079  ld   $79
              c7d6 0021  ld   $21
              c7d7 0081  ld   $81
              c7d8 0049  ld   $49
              c7d9 000f  ld   $0f
              c7da 00da  ld   $da
              c7db 00a2  ld   $a2
              c7dc 0083  ld   $83
              c7dd 0049  ld   $49
              c7de 000f  ld   $0f
              c7df 00da  ld   $da
              c7e0 00a2  ld   $a2
              c7e1 007f  ld   $7f
              c7e2 0000  ld   $00
              c7e3 0000  ld   $00
              c7e4 0000  ld   $00
              c7e5 0000  ld   $00
              c7e6 0005  ld   $05
              c7e7 0084  ld   $84
              c7e8 00e6  ld   $e6
              c7e9 001a  ld   $1a
              c7ea 002d  ld   $2d
              c7eb 001b  ld   $1b
              c7ec 0086  ld   $86
              c7ed 0028  ld   $28
              c7ee 0007  ld   $07
              c7ef 00fb  ld   $fb
              c7f0 00f8  ld   $f8
              c7f1 0087  ld   $87
              c7f2 0099  ld   $99
              c7f3 0068  ld   $68
              c7f4 0089  ld   $89
              c7f5 0001  ld   $01
              c7f6 0087  ld   $87
              c7f7 0023  ld   $23
              c7f8 0035  ld   $35
              c7f9 00df  ld   $df
              c7fa 00e1  ld   $e1
              c7fb fe00  bra  ac          ;+-----------------------------------+
              c7fc fcfd  bra  $c7fd       ;|                                   |
              c7fd 1418  ld   $18,y       ;| Trampoline for page $c700 lookups |
              c7fe e006  jmp  y,$06       ;|                                   |
              c7ff c218  st   [$18]       ;+-----------------------------------+
              c800 0086  ld   $86
              c801 00a5  ld   $a5
              c802 005d  ld   $5d
              c803 00e7  ld   $e7
              c804 0028  ld   $28
              c805 0083  ld   $83
              c806 0049  ld   $49
              c807 000f  ld   $0f
              c808 00da  ld   $da
              c809 00a2  ld   $a2
              c80a 00a1  ld   $a1
              c80b 0054  ld   $54
              c80c 0046  ld   $46
              c80d 008f  ld   $8f
              c80e 0013  ld   $13
              c80f 008f  ld   $8f
              c810 0052  ld   $52
              c811 0043  ld   $43
              c812 0089  ld   $89
              c813 00cd  ld   $cd
              c814 00e1  ld   $e1
              c815 004e  ld   $4e
              c816 008f  ld   $8f
              c817 0092  ld   $92
              c818 0014  ld   $14
              c819 00ad  ld   $ad
              c81a 0081  ld   $81
              c81b 0047  ld   $47
              c81c 0089  ld   $89
              c81d 00c7  ld   $c7
              c81e 00a5  ld   $a5
              c81f 0099  ld   $99
              c820 0022  ld   $22
              c821 0000  ld   $00
              c822 0000  ld   $00
              c823 0048  ld   $48
              c824 0010  ld   $10
              c825 0003  ld   $03
              c826 0020  ld   $20
              c827 000d  ld   $0d
              c828 0020  ld   $20
              c829 00a5  ld   $a5
              c82a 0094  ld   $94
              c82b 0048  ld   $48
              c82c 00c9  ld   $c9
              c82d 0081  ld   $81
              c82e 0090  ld   $90
              c82f 0007  ld   $07
              c830 00a9  ld   $a9
              c831 0034  ld   $34
              c832 00a0  ld   $a0
              c833 001a  ld   $1a
              c834 0020  ld   $20
              c835 0087  ld   $87
              c836 001b  ld   $1b
              c837 00a9  ld   $a9
              c838 002e  ld   $2e
              c839 00a0  ld   $a0
              c83a 0022  ld   $22
              c83b 0020  ld   $20
              c83c 0099  ld   $99
              c83d 0020  ld   $20
              c83e 0068  ld   $68
              c83f 00c9  ld   $c9
              c840 0081  ld   $81
              c841 0090  ld   $90
              c842 0007  ld   $07
              c843 00a9  ld   $a9
              c844 00bc  ld   $bc
              c845 00a0  ld   $a0
              c846 0021  ld   $21
              c847 0020  ld   $20
              c848 0095  ld   $95
              c849 0018  ld   $18
              c84a 0068  ld   $68
              c84b 0010  ld   $10
              c84c 0003  ld   $03
              c84d 004c  ld   $4c
              c84e 000d  ld   $0d
              c84f 0020  ld   $20
              c850 0060  ld   $60
              c851 000b  ld   $0b
              c852 0076  ld   $76
              c853 00b3  ld   $b3
              c854 0083  ld   $83
              c855 00bd  ld   $bd
              c856 00d3  ld   $d3
              c857 0079  ld   $79
              c858 001e  ld   $1e
              c859 00f4  ld   $f4
              c85a 00a6  ld   $a6
              c85b 00f5  ld   $f5
              c85c 007b  ld   $7b
              c85d 0083  ld   $83
              c85e 00fc  ld   $fc
              c85f 00b0  ld   $b0
              c860 0010  ld   $10
              c861 007c  ld   $7c
              c862 000c  ld   $0c
              c863 001f  ld   $1f
              c864 0067  ld   $67
              c865 00ca  ld   $ca
              c866 007c  ld   $7c
              c867 00de  ld   $de
              c868 0053  ld   $53
              c869 00cb  ld   $cb
              c86a 00c1  ld   $c1
              c86b 007d  ld   $7d
              c86c 0014  ld   $14
              c86d 0064  ld   $64
              c86e 0070  ld   $70
              c86f 004c  ld   $4c
              c870 007d  ld   $7d
              c871 00b7  ld   $b7
              c872 00ea  ld   $ea
              c873 0051  ld   $51
              c874 007a  ld   $7a
              c875 007d  ld   $7d
              c876 0063  ld   $63
              c877 0030  ld   $30
              c878 0088  ld   $88
              c879 007e  ld   $7e
              c87a 007e  ld   $7e
              c87b 0092  ld   $92
              c87c 0044  ld   $44
              c87d 0099  ld   $99
              c87e 003a  ld   $3a
              c87f 007e  ld   $7e
              c880 004c  ld   $4c
              c881 00cc  ld   $cc
              c882 0091  ld   $91
              c883 00c7  ld   $c7
              c884 007f  ld   $7f
              c885 00aa  ld   $aa
              c886 00aa  ld   $aa
              c887 00aa  ld   $aa
              c888 0013  ld   $13
              c889 0081  ld   $81
              c88a 0000  ld   $00
              c88b 0000  ld   $00
              c88c 0000  ld   $00
              c88d 0000  ld   $00
              c88e 00e6  ld   $e6
              c88f 00a6  ld   $a6
              c890 00d0  ld   $d0
              c891 0002  ld   $02
              c892 00e6  ld   $e6
              c893 00a7  ld   $a7
              c894 0084  ld   $84
              c895 0019  ld   $19
              c896 00a0  ld   $a0
              c897 0000  ld   $00
              c898 00b1  ld   $b1
              c899 00a6  ld   $a6
              c89a 00a4  ld   $a4
              c89b 0019  ld   $19
              c89c 00c9  ld   $c9
              c89d 003a  ld   $3a
              c89e 00b0  ld   $b0
              c89f 000a  ld   $0a
              c8a0 00c9  ld   $c9
              c8a1 0020  ld   $20
              c8a2 00f0  ld   $f0
              c8a3 00ea  ld   $ea
              c8a4 0038  ld   $38
              c8a5 00e9  ld   $e9
              c8a6 0030  ld   $30
              c8a7 0038  ld   $38
              c8a8 00e9  ld   $e9
              c8a9 00d0  ld   $d0
              c8aa 0060  ld   $60
              c8ab 0080  ld   $80
              c8ac 004f  ld   $4f
              c8ad 00c7  ld   $c7
              c8ae 0052  ld   $52
              c8af 0058  ld   $58
              c8b0 00a2  ld   $a2
              c8b1 00fb  ld   $fb
              c8b2 009a  ld   $9a
              c8b3 00a9  ld   $a9
              c8b4 004c  ld   $4c
              c8b5 0085  ld   $85
              c8b6 0087  ld   $87
              c8b7 0085  ld   $85
              c8b8 0038  ld   $38
              c8b9 00a9  ld   $a9
              c8ba 0082  ld   $82
              c8bb 00a0  ld   $a0
              c8bc 0012  ld   $12
              c8bd 0085  ld   $85
              c8be 0039  ld   $39
              c8bf 0084  ld   $84
              c8c0 003a  ld   $3a
              c8c1 00a9  ld   $a9
              c8c2 0028  ld   $28
              c8c3 0085  ld   $85
              c8c4 0019  ld   $19
              c8c5 00a9  ld   $a9
              c8c6 001e  ld   $1e
              c8c7 0085  ld   $85
              c8c8 0019  ld   $19
              c8c9 00a2  ld   $a2
              c8ca 0000  ld   $00
              c8cb 00a9  ld   $a9
              c8cc 0003  ld   $03
              c8cd 0085  ld   $85
              c8ce 0086  ld   $86
              c8cf 008a  ld   $8a
              c8d0 0085  ld   $85
              c8d1 009b  ld   $9b
              c8d2 0085  ld   $85
              c8d3 0019  ld   $19
              c8d4 0085  ld   $85
              c8d5 004a  ld   $4a
              c8d6 0048  ld   $48
              c8d7 0085  ld   $85
              c8d8 0045  ld   $45
              c8d9 00e8  ld   $e8
              c8da 008e  ld   $8e
              c8db 0002  ld   $02
              c8dc 0024  ld   $24
              c8dd 008e  ld   $8e
              c8de 0001  ld   $01
              c8df 0024  ld   $24
              c8e0 00a2  ld   $a2
              c8e1 004b  ld   $4b
              c8e2 0086  ld   $86
              c8e3 0048  ld   $48
              c8e4 00a0  ld   $a0
              c8e5 0071  ld   $71
              c8e6 0085  ld   $85
              c8e7 005d  ld   $5d
              c8e8 0084  ld   $84
              c8e9 005e  ld   $5e
              c8ea 0085  ld   $85
              c8eb 0046  ld   $46
              c8ec 0084  ld   $84
              c8ed 0047  ld   $47
              c8ee 00a8  ld   $a8
              c8ef 00e6  ld   $e6
              c8f0 0046  ld   $46
              c8f1 00d0  ld   $d0
              c8f2 0004  ld   $04
              c8f3 00e6  ld   $e6
              c8f4 0047  ld   $47
              c8f5 0030  ld   $30
              c8f6 000f  ld   $0f
              c8f7 00a9  ld   $a9
              c8f8 0055  ld   $55
              c8f9 0091  ld   $91
              c8fa 0046  ld   $46
              c8fb fe00  bra  ac          ;+-----------------------------------+
              c8fc fcfd  bra  $c8fd       ;|                                   |
              c8fd 1418  ld   $18,y       ;| Trampoline for page $c800 lookups |
              c8fe e006  jmp  y,$06       ;|                                   |
              c8ff c218  st   [$18]       ;+-----------------------------------+
              c900 00d1  ld   $d1
              c901 0046  ld   $46
              c902 00d0  ld   $d0
              c903 0007  ld   $07
              c904 000a  ld   $0a
              c905 0091  ld   $91
              c906 0046  ld   $46
              c907 00d1  ld   $d1
              c908 0046  ld   $46
              c909 00f0  ld   $f0
              c90a 00e9  ld   $e9
              c90b 00a5  ld   $a5
              c90c 0001  ld   $01
              c90d 00c9  ld   $c9
              c90e 0001  ld   $01
              c90f 00e9  ld   $e9
              c910 0000  ld   $00
              c911 0085  ld   $85
              c912 0047  ld   $47
              c913 00a5  ld   $a5
              c914 0046  ld   $46
              c915 00a4  ld   $a4
              c916 0047  ld   $47
              c917 0085  ld   $85
              c918 0069  ld   $69
              c919 0084  ld   $84
              c91a 006a  ld   $6a
              c91b 0085  ld   $85
              c91c 0065  ld   $65
              c91d 0084  ld   $84
              c91e 0066  ld   $66
              c91f 00a2  ld   $a2
              c920 0000  ld   $00
              c921 00a0  ld   $a0
              c922 0071  ld   $71
              c923 0086  ld   $86
              c924 005d  ld   $5d
              c925 0084  ld   $84
              c926 005e  ld   $5e
              c927 00a0  ld   $a0
              c928 0023  ld   $23
              c929 0000  ld   $00
              c92a 004e  ld   $4e
              c92b 0000  ld   $00
              c92c 0098  ld   $98
              c92d 0091  ld   $91
              c92e 005d  ld   $5d
              c92f 00e6  ld   $e6
              c930 005d  ld   $5d
              c931 00a5  ld   $a5
              c932 005d  ld   $5d
              c933 00a4  ld   $a4
              c934 005e  ld   $5e
              c935 0020  ld   $20
              c936 001b  ld   $1b
              c937 0005  ld   $05
              c938 00a9  ld   $a9
              c939 003b  ld   $3b
              c93a 00a0  ld   $a0
              c93b 0023  ld   $23
              c93c 0020  ld   $20
              c93d 00ef  ld   $ef
              c93e 000b  ld   $0b
              c93f 00a5  ld   $a5
              c940 0069  ld   $69
              c941 0038  ld   $38
              c942 00e5  ld   $e5
              c943 005d  ld   $5d
              c944 00aa  ld   $aa
              c945 00a5  ld   $a5
              c946 006a  ld   $6a
              c947 00e5  ld   $e5
              c948 005e  ld   $5e
              c949 0020  ld   $20
              c94a 0045  ld   $45
              c94b 001e  ld   $1e
              c94c 00a9  ld   $a9
              c94d 002e  ld   $2e
              c94e 00a0  ld   $a0
              c94f 0023  ld   $23
              c950 0020  ld   $20
              c951 00ef  ld   $ef
              c952 000b  ld   $0b
              c953 0020  ld   $20
              c954 0044  ld   $44
              c955 0007  ld   $07
              c956 004c  ld   $4c
              c957 0071  ld   $71
              c958 0005  ld   $05
              c959 0020  ld   $20
              c95a 0042  ld   $42
              c95b 0059  ld   $59
              c95c 0054  ld   $54
              c95d 0045  ld   $45
              c95e 0053  ld   $53
              c95f 0020  ld   $20
              c960 0046  ld   $46
              c961 0052  ld   $52
              c962 0045  ld   $45
              c963 0045  ld   $45
              c964 000d  ld   $0d
              c965 0000  ld   $00
              c966 0023  ld   $23
              c967 0023  ld   $23
              c968 0023  ld   $23
              c969 0020  ld   $20
              c96a 004d  ld   $4d
              c96b 0053  ld   $53
              c96c 0020  ld   $20
              c96d 0042  ld   $42
              c96e 0041  ld   $41
              c96f 0053  ld   $53
              c970 0049  ld   $49
              c971 0043  ld   $43
              c972 0020  ld   $20
              c973 0023  ld   $23
              c974 0023  ld   $23
              c975 0023  ld   $23
              c976 000d  ld   $0d
              c977 000d  ld   $0d
              c978 0000  ld   $00
              c979 0024  ld   $24
              c97a 0000  ld   $00
              c97b 0038  ld   $38
              c97c 0011  ld   $11
              c97d 0000  ld   $00
              c97e 000b  ld   $0b
              c97f 002b  ld   $2b
              c980 0022  ld   $22
              c981 0059  ld   $59
              c982 0003  ld   $03
              c983 00b4  ld   $b4
              c984 00e6  ld   $e6
              c985 0011  ld   $11
              c986 0000  ld   $00
              c987 0002  ld   $02
              c988 002b  ld   $2b
              c989 0030  ld   $30
              c98a 0059  ld   $59
              c98b 0000  ld   $00
              c98c 00f3  ld   $f3
              c98d 0030  ld   $30
              c98e 0093  ld   $93
              c98f 0030  ld   $30
              c990 0093  ld   $93
              c991 0030  ld   $30
              c992 00f3  ld   $f3
              c993 0030  ld   $30
              c994 0011  ld   $11
              c995 0000  ld   $00
              c996 0001  ld   $01
              c997 002b  ld   $2b
              c998 0030  ld   $30
              c999 0011  ld   $11
              c99a 0000  ld   $00
              c99b 0027  ld   $27
              c99c 002b  ld   $2b
              c99d 0032  ld   $32
              c99e 0011  ld   $11
              c99f 0000  ld   $00
              c9a0 00a0  ld   $a0
              c9a1 002b  ld   $2b
              c9a2 0024  ld   $24
              c9a3 0011  ld   $11
              c9a4 0060  ld   $60
              c9a5 0070  ld   $70
              c9a6 002b  ld   $2b
              c9a7 0026  ld   $26
              c9a8 0011  ld   $11
              c9a9 0003  ld   $03
              c9aa 000b  ld   $0b
              c9ab 002b  ld   $2b
              c9ac 0022  ld   $22
              c9ad 00b4  ld   $b4
              c9ae 00f3  ld   $f3
              c9af 0011  ld   $11
              c9b0 0000  ld   $00
              c9b1 0025  ld   $25
              c9b2 00cf  ld   $cf
              c9b3 0018  ld   $18
              c9b4 0025  ld   $25
              c9b5 0000  ld   $00
              c9b6 0054  ld   $54
              c9b7 0011  ld   $11
              c9b8 0000  ld   $00
              c9b9 0001  ld   $01
              c9ba 002b  ld   $2b
              c9bb 0030  ld   $30
              c9bc 0011  ld   $11
              c9bd 00e0  ld   $e0
              c9be 0001  ld   $01
              c9bf 002b  ld   $2b
              c9c0 0034  ld   $34
              c9c1 0059  ld   $59
              c9c2 0023  ld   $23
              c9c3 002b  ld   $2b
              c9c4 0036  ld   $36
              c9c5 0021  ld   $21
              c9c6 0034  ld   $34
              c9c7 0035  ld   $35
              c9c8 0050  ld   $50
              c9c9 001b  ld   $1b
              c9ca 0021  ld   $21
              c9cb 0036  ld   $36
              c9cc 00f0  ld   $f0
              c9cd 0030  ld   $30
              c9ce 0093  ld   $93
              c9cf 0036  ld   $36
              c9d0 0021  ld   $21
              c9d1 0034  ld   $34
              c9d2 0090  ld   $90
              c9d3 0023  ld   $23
              c9d4 0059  ld   $59
              c9d5 0070  ld   $70
              c9d6 00f0  ld   $f0
              c9d7 0030  ld   $30
              c9d8 0021  ld   $21
              c9d9 0034  ld   $34
              c9da 00e3  ld   $e3
              c9db 0010  ld   $10
              c9dc 00e9  ld   $e9
              c9dd 002b  ld   $2b
              c9de 0034  ld   $34
              c9df 0093  ld   $93
              c9e0 0030  ld   $30
              c9e1 0093  ld   $93
              c9e2 0030  ld   $30
              c9e3 001a  ld   $1a
              c9e4 0030  ld   $30
              c9e5 008c  ld   $8c
              c9e6 00f0  ld   $f0
              c9e7 0035  ld   $35
              c9e8 0072  ld   $72
              c9e9 000c  ld   $0c
              c9ea 0011  ld   $11
              c9eb 0001  ld   $01
              c9ec 0001  ld   $01
              c9ed 002b  ld   $2b
              c9ee 0030  ld   $30
              c9ef 0059  ld   $59
              c9f0 0060  ld   $60
              c9f1 00f0  ld   $f0
              c9f2 0030  ld   $30
              c9f3 0059  ld   $59
              c9f4 0006  ld   $06
              c9f5 005e  ld   $5e
              c9f6 002a  ld   $2a
              c9f7 0059  ld   $59
              c9f8 000d  ld   $0d
              c9f9 00cf  ld   $cf
              c9fa 0032  ld   $32
              c9fb fe00  bra  ac          ;+-----------------------------------+
              c9fc fcfd  bra  $c9fd       ;|                                   |
              c9fd 1418  ld   $18,y       ;| Trampoline for page $c900 lookups |
              c9fe e006  jmp  y,$06       ;|                                   |
              c9ff c218  st   [$18]       ;+-----------------------------------+
              ca00 001a  ld   $1a
              ca01 002a  ld   $2a
              ca02 00e6  ld   $e6
              ca03 0001  ld   $01
              ca04 0035  ld   $35
              ca05 004d  ld   $4d
              ca06 003c  ld   $3c
              ca07 0011  ld   $11
              ca08 0000  ld   $00
              ca09 0026  ld   $26
              ca0a 002b  ld   $2b
              ca0b 001a  ld   $1a
              ca0c 0011  ld   $11
              ca0d 008d  ld   $8d
              ca0e 0022  ld   $22
              ca0f 00ff  ld   $ff
              ca10 0026  ld   $26
              ca11 0000  ld   $00
              ca12 0047  ld   $47
              ca13 002b  ld   $2b
              ca14 001a  ld   $1a
              ca15 0011  ld   $11
              ca16 000c  ld   $0c
              ca17 000b  ld   $0b
              ca18 002b  ld   $2b
              ca19 0022  ld   $22
              ca1a 00b4  ld   $b4
              ca1b 00e6  ld   $e6
              ca1c 0075  ld   $75
              ca1d 00cf  ld   $cf
              ca1e 0032  ld   $32
              ca1f 0063  ld   $63
              ca20 0090  ld   $90
              ca21 0000  ld   $00
              ca22 0011  ld   $11
              ca23 00e1  ld   $e1
              ca24 0004  ld   $04
              ca25 002b  ld   $2b
              ca26 0022  ld   $22
              ca27 0011  ld   $11
              ca28 0000  ld   $00
              ca29 000b  ld   $0b
              ca2a 002b  ld   $2b
              ca2b 0024  ld   $24
              ca2c 0021  ld   $21
              ca2d 0030  ld   $30
              ca2e 002b  ld   $2b
              ca2f 0028  ld   $28
              ca30 00e3  ld   $e3
              ca31 0006  ld   $06
              ca32 002b  ld   $2b
              ca33 0030  ld   $30
              ca34 0059  ld   $59
              ca35 0005  ld   $05
              ca36 002b  ld   $2b
              ca37 0034  ld   $34
              ca38 0021  ld   $21
              ca39 0036  ld   $36
              ca3a 007f  ld   $7f
              ca3b 0000  ld   $00
              ca3c 0082  ld   $82
              ca3d 00fe  ld   $fe
              ca3e 005e  ld   $5e
              ca3f 0026  ld   $26
              ca40 0011  ld   $11
              ca41 0000  ld   $00
              ca42 0007  ld   $07
              ca43 0099  ld   $99
              ca44 0028  ld   $28
              ca45 00ad  ld   $ad
              ca46 0035  ld   $35
              ca47 003f  ld   $3f
              ca48 0036  ld   $36
              ca49 0093  ld   $93
              ca4a 0026  ld   $26
              ca4b 00b4  ld   $b4
              ca4c 00cb  ld   $cb
              ca4d 0093  ld   $93
              ca4e 0036  ld   $36
              ca4f 0093  ld   $93
              ca50 0028  ld   $28
              ca51 0021  ld   $21
              ca52 0034  ld   $34
              ca53 00e6  ld   $e6
              ca54 0001  ld   $01
              ca55 0035  ld   $35
              ca56 004d  ld   $4d
              ca57 0021  ld   $21
              ca58 0063  ld   $63
              ca59 00ff  ld   $ff
              ca5a 0027  ld   $27
              ca5b 0000  ld   $00
              ca5c 0059  ld   $59
              ca5d 0075  ld   $75
              ca5e 00e6  ld   $e6
              ca5f 00ff  ld   $ff
              ca60 0035  ld   $35
              ca61 003f  ld   $3f
              ca62 0041  ld   $41
              ca63 00e3  ld   $e3
              ca64 00df  ld   $df
              ca65 0035  ld   $35
              ca66 0053  ld   $53
              ca67 001a  ld   $1a
              ca68 002b  ld   $2b
              ca69 0024  ld   $24
              ca6a 0011  ld   $11
              ca6b 0000  ld   $00
              ca6c 0029  ld   $29
              ca6d 00cf  ld   $cf
              ca6e 0018  ld   $18
              ca6f 0035  ld   $35
              ca70 0072  ld   $72
              ca71 0015  ld   $15
              ca72 0063  ld   $63
              ca73 00ff  ld   $ff
              ca74 0011  ld   $11
              ca75 009b  ld   $9b
              ca76 0007  ld   $07
              ca77 0090  ld   $90
              ca78 003f  ld   $3f
              ca79 00e6  ld   $e6
              ca7a 005f  ld   $5f
              ca7b 0035  ld   $35
              ca7c 0056  ld   $56
              ca7d 0022  ld   $22
              ca7e 0011  ld   $11
              ca7f 00c0  ld   $c0
              ca80 00ff  ld   $ff
              ca81 00e3  ld   $e3
              ca82 002d  ld   $2d
              ca83 0035  ld   $35
              ca84 0053  ld   $53
              ca85 0030  ld   $30
              ca86 00e3  ld   $e3
              ca87 0032  ld   $32
              ca88 002b  ld   $2b
              ca89 0034  ld   $34
              ca8a 0011  ld   $11
              ca8b 0000  ld   $00
              ca8c 0007  ld   $07
              ca8d 0090  ld   $90
              ca8e 0035  ld   $35
              ca8f 002b  ld   $2b
              ca90 0034  ld   $34
              ca91 0011  ld   $11
              ca92 0000  ld   $00
              ca93 0008  ld   $08
              ca94 002b  ld   $2b
              ca95 0036  ld   $36
              ca96 0021  ld   $21
              ca97 0034  ld   $34
              ca98 00e9  ld   $e9
              ca99 00e9  ld   $e9
              ca9a 0099  ld   $99
              ca9b 0034  ld   $34
              ca9c 0099  ld   $99
              ca9d 0036  ld   $36
              ca9e 0090  ld   $90
              ca9f 0044  ld   $44
              caa0 0011  ld   $11
              caa1 000c  ld   $0c
              caa2 0008  ld   $08
              caa3 002b  ld   $2b
              caa4 0036  ld   $36
              caa5 001a  ld   $1a
              caa6 0030  ld   $30
              caa7 00e6  ld   $e6
              caa8 00fb  ld   $fb
              caa9 0035  ld   $35
              caaa 0056  ld   $56
              caab 0052  ld   $52
              caac 0011  ld   $11
              caad 0000  ld   $00
              caae 0028  ld   $28
              caaf 00cf  ld   $cf
              cab0 0018  ld   $18
              cab1 0011  ld   $11
              cab2 000f  ld   $0f
              cab3 0026  ld   $26
              cab4 00cf  ld   $cf
              cab5 0018  ld   $18
              cab6 0028  ld   $28
              cab7 0000  ld   $00
              cab8 004c  ld   $4c
              cab9 0011  ld   $11
              caba 00e1  ld   $e1
              cabb 0004  ld   $04
              cabc 002b  ld   $2b
              cabd 0022  ld   $22
              cabe 0011  ld   $11
              cabf 0000  ld   $00
              cac0 000b  ld   $0b
              cac1 002b  ld   $2b
              cac2 0024  ld   $24
              cac3 0059  ld   $59
              cac4 0062  ld   $62
              cac5 005e  ld   $5e
              cac6 0030  ld   $30
              cac7 00e3  ld   $e3
              cac8 009e  ld   $9e
              cac9 002b  ld   $2b
              caca 0034  ld   $34
              cacb 00ad  ld   $ad
              cacc 005e  ld   $5e
              cacd 0031  ld   $31
              cace 0021  ld   $21
              cacf 0030  ld   $30
              cad0 00e6  ld   $e6
              cad1 0002  ld   $02
              cad2 002b  ld   $2b
              cad3 0028  ld   $28
              cad4 0011  ld   $11
              cad5 0000  ld   $00
              cad6 0007  ld   $07
              cad7 0099  ld   $99
              cad8 0028  ld   $28
              cad9 00ad  ld   $ad
              cada 0082  ld   $82
              cadb 0001  ld   $01
              cadc 005e  ld   $5e
              cadd 0026  ld   $26
              cade 00b4  ld   $b4
              cadf 00cb  ld   $cb
              cae0 0093  ld   $93
              cae1 0028  ld   $28
              cae2 001a  ld   $1a
              cae3 0028  ld   $28
              cae4 0035  ld   $35
              cae5 0072  ld   $72
              cae6 0019  ld   $19
              cae7 0021  ld   $21
              cae8 0034  ld   $34
              cae9 00e3  ld   $e3
              caea 0016  ld   $16
              caeb 002b  ld   $2b
              caec 0028  ld   $28
              caed 00ad  ld   $ad
              caee 005e  ld   $5e
              caef 0026  ld   $26
              caf0 0021  ld   $21
              caf1 0034  ld   $34
              caf2 00ad  ld   $ad
              caf3 00f0  ld   $f0
              caf4 0028  ld   $28
              caf5 001a  ld   $1a
              caf6 0026  ld   $26
              caf7 00f0  ld   $f0
              caf8 0034  ld   $34
              caf9 0093  ld   $93
              cafa 0034  ld   $34
              cafb fe00  bra  ac          ;+-----------------------------------+
              cafc fcfd  bra  $cafd       ;|                                   |
              cafd 1418  ld   $18,y       ;| Trampoline for page $ca00 lookups |
              cafe e006  jmp  y,$06       ;|                                   |
              caff c218  st   [$18]       ;+-----------------------------------+
              cb00 0093  ld   $93
              cb01 0034  ld   $34
              cb02 001a  ld   $1a
              cb03 0034  ld   $34
              cb04 008c  ld   $8c
              cb05 00da  ld   $da
              cb06 0035  ld   $35
              cb07 0072  ld   $72
              cb08 002c  ld   $2c
              cb09 00ff  ld   $ff
              cb0a 0029  ld   $29
              cb0b 0000  ld   $00
              cb0c 001f  ld   $1f
              cb0d 0021  ld   $21
              cb0e 0024  ld   $24
              cb0f 00e3  ld   $e3
              cb10 0013  ld   $13
              cb11 0035  ld   $35
              cb12 0072  ld   $72
              cb13 000d  ld   $0d
              cb14 0075  ld   $75
              cb15 0011  ld   $11
              cb16 0000  ld   $00
              cb17 0028  ld   $28
              cb18 00cf  ld   $cf
              cb19 0018  ld   $18
              cb1a 0063  ld   $63
              cb1b 00ff  ld   $ff
              cb1c 00e3  ld   $e3
              cb1d 0003  ld   $03
              cb1e 0035  ld   $35
              cb1f 003f  ld   $3f
              cb20 001c  ld   $1c
              cb21 00e3  ld   $e3
              cb22 0003  ld   $03
              cb23 0035  ld   $35
              cb24 0072  ld   $72
              cb25 001c  ld   $1c
              cb26 0059  ld   $59
              cb27 0006  ld   $06
              cb28 005e  ld   $5e
              cb29 002c  ld   $2c
              cb2a 0063  ld   $63
              cb2b 00ff  ld   $ff
              cb2c 002a  ld   $2a
              cb2d 0000  ld   $00
              cb2e 003e  ld   $3e
              cb2f 00a5  ld   $a5
              cb30 000f  ld   $0f
              cb31 0085  ld   $85
              cb32 003e  ld   $3e
              cb33 00a5  ld   $a5
              cb34 000f  ld   $0f
              cb35 00c5  ld   $c5
              cb36 003e  ld   $3e
              cb37 00d0  ld   $d0
              cb38 001b  ld   $1b
              cb39 00a5  ld   $a5
              cb3a 000e  ld   $0e
              cb3b 0029  ld   $29
              cb3c 000f  ld   $0f
              cb3d 00d0  ld   $d0
              cb3e 00f4  ld   $f4
              cb3f 00a5  ld   $a5
              cb40 000e  ld   $0e
              cb41 0029  ld   $29
              cb42 0010  ld   $10
              cb43 00d0  ld   $d0
              cb44 0003  ld   $03
              cb45 00a9  ld   $a9
              cb46 0020  ld   $20
              cb47 002c  ld   $2c
              cb48 00a9  ld   $a9
              cb49 007f  ld   $7f
              cb4a 0000  ld   $00
              cb4b 0020  ld   $20
              cb4c 0032  ld   $32
              cb4d 002a  ld   $2a
              cb4e 0020  ld   $20
              cb4f 0000  ld   $00
              cb50 002e  ld   $2e
              cb51 004c  ld   $4c
              cb52 0004  ld   $04
              cb53 002a  ld   $2a
              cb54 00c9  ld   $c9
              cb55 00ff  ld   $ff
              cb56 00f0  ld   $f0
              cb57 00d9  ld   $d9
              cb58 0048  ld   $48
              cb59 00a9  ld   $a9
              cb5a 0020  ld   $20
              cb5b 0000  ld   $00
              cb5c 0020  ld   $20
              cb5d 0032  ld   $32
              cb5e 002a  ld   $2a
              cb5f 0068  ld   $68
              cb60 0060  ld   $60
              cb61 00a5  ld   $a5
              cb62 0030  ld   $30
              cb63 0038  ld   $38
              cb64 00e9  ld   $e9
              cb65 0006  ld   $06
              cb66 00c9  ld   $c9
              cb67 0060  ld   $60
              cb68 0090  ld   $90
              cb69 0002  ld   $02
              cb6a 0085  ld   $85
              cb6b 0030  ld   $30
              cb6c 0060  ld   $60
              cb6d 002b  ld   $2b
              cb6e 0000  ld   $00
              cb6f 0013  ld   $13
              cb70 0085  ld   $85
              cb71 0043  ld   $43
              cb72 0048  ld   $48
              cb73 0008  ld   $08
              cb74 008a  ld   $8a
              cb75 0048  ld   $48
              cb76 0098  ld   $98
              cb77 0048  ld   $48
              cb78 00a5  ld   $a5
              cb79 0043  ld   $43
              cb7a 0000  ld   $00
              cb7b 0068  ld   $68
              cb7c 00a8  ld   $a8
              cb7d 0068  ld   $68
              cb7e 00aa  ld   $aa
              cb7f 0028  ld   $28
              cb80 0068  ld   $68
              cb81 0018  ld   $18
              cb82 0060  ld   $60
              cb83 002c  ld   $2c
              cb84 0000  ld   $00
              cb85 0041  ld   $41
              cb86 0024  ld   $24
              cb87 0043  ld   $43
              cb88 0050  ld   $50
              cb89 0018  ld   $18
              cb8a 00a5  ld   $a5
              cb8b 000f  ld   $0f
              cb8c 00c9  ld   $c9
              cb8d 00ff  ld   $ff
              cb8e 0069  ld   $69
              cb8f 0000  ld   $00
              cb90 00c9  ld   $c9
              cb91 0060  ld   $60
              cb92 00d0  ld   $d0
              cb93 0002  ld   $02
              cb94 00a9  ld   $a9
              cb95 001f  ld   $1f
              cb96 0090  ld   $90
              cb97 0002  ld   $02
              cb98 00e9  ld   $e9
              cb99 0020  ld   $20
              cb9a 00c9  ld   $c9
              cb9b 000a  ld   $0a
              cb9c 00d0  ld   $d0
              cb9d 0002  ld   $02
              cb9e 00a9  ld   $a9
              cb9f 000d  ld   $0d
              cba0 0018  ld   $18
              cba1 0060  ld   $60
              cba2 008a  ld   $8a
              cba3 0048  ld   $48
              cba4 0098  ld   $98
              cba5 0048  ld   $48
              cba6 0020  ld   $20
              cba7 0000  ld   $00
              cba8 002a  ld   $2a
              cba9 0020  ld   $20
              cbaa 000a  ld   $0a
              cbab 002c  ld   $2c
              cbac 00c9  ld   $c9
              cbad 0007  ld   $07
              cbae 00d0  ld   $d0
              cbaf 0004  ld   $04
              cbb0 0000  ld   $00
              cbb1 004c  ld   $4c
              cbb2 0020  ld   $20
              cbb3 002c  ld   $2c
              cbb4 00c9  ld   $c9
              cbb5 000d  ld   $0d
              cbb6 0090  ld   $90
              cbb7 00ee  ld   $ee
              cbb8 00f0  ld   $f0
              cbb9 0003  ld   $03
              cbba 0048  ld   $48
              cbbb 0000  ld   $00
              cbbc 0068  ld   $68
              cbbd 0085  ld   $85
              cbbe 003e  ld   $3e
              cbbf 0068  ld   $68
              cbc0 00a8  ld   $a8
              cbc1 0068  ld   $68
              cbc2 00aa  ld   $aa
              cbc3 00a5  ld   $a5
              cbc4 003e  ld   $3e
              cbc5 0018  ld   $18
              cbc6 0060  ld   $60
              cbc7 002d  ld   $2d
              cbc8 0000  ld   $00
              cbc9 0018  ld   $18
              cbca 00a5  ld   $a5
              cbcb 000f  ld   $0f
              cbcc 00c9  ld   $c9
              cbcd 0003  ld   $03
              cbce 00d0  ld   $d0
              cbcf 0003  ld   $03
              cbd0 004c  ld   $4c
              cbd1 0026  ld   $26
              cbd2 0009  ld   $09
              cbd3 00a5  ld   $a5
              cbd4 000e  ld   $0e
              cbd5 00cd  ld   $cd
              cbd6 0003  ld   $03
              cbd7 0002  ld   $02
              cbd8 0010  ld   $10
              cbd9 0007  ld   $07
              cbda 0084  ld   $84
              cbdb 003e  ld   $3e
              cbdc 0020  ld   $20
              cbdd 0000  ld   $00
              cbde 002e  ld   $2e
              cbdf 00a4  ld   $a4
              cbe0 003e  ld   $3e
              cbe1 0060  ld   $60
              cbe2 002e  ld   $2e
              cbe3 0000  ld   $00
              cbe4 0036  ld   $36
              cbe5 00a5  ld   $a5
              cbe6 000e  ld   $0e
              cbe7 00a8  ld   $a8
              cbe8 0038  ld   $38
              cbe9 00ed  ld   $ed
              cbea 0003  ld   $03
              cbeb 0002  ld   $02
              cbec 008c  ld   $8c
              cbed 0003  ld   $03
              cbee 0002  ld   $02
              cbef 0018  ld   $18
              cbf0 006d  ld   $6d
              cbf1 0002  ld   $02
              cbf2 0002  ld   $02
              cbf3 008d  ld   $8d
              cbf4 0002  ld   $02
              cbf5 0002  ld   $02
              cbf6 00a9  ld   $a9
              cbf7 0000  ld   $00
              cbf8 006d  ld   $6d
              cbf9 0001  ld   $01
              cbfa 0002  ld   $02
              cbfb fe00  bra  ac          ;+-----------------------------------+
              cbfc fcfd  bra  $cbfd       ;|                                   |
              cbfd 1418  ld   $18,y       ;| Trampoline for page $cb00 lookups |
              cbfe e006  jmp  y,$06       ;|                                   |
              cbff c218  st   [$18]       ;+-----------------------------------+
              cc00 008d  ld   $8d
              cc01 0001  ld   $01
              cc02 0002  ld   $02
              cc03 00a9  ld   $a9
              cc04 0000  ld   $00
              cc05 006d  ld   $6d
              cc06 0000  ld   $00
              cc07 0002  ld   $02
              cc08 008d  ld   $8d
              cc09 0000  ld   $00
              cc0a 0002  ld   $02
              cc0b 00ad  ld   $ad
              cc0c 0001  ld   $01
              cc0d 0002  ld   $02
              cc0e 00c9  ld   $c9
              cc0f 001a  ld   $1a
              cc10 00ad  ld   $ad
              cc11 0000  ld   $00
              cc12 0002  ld   $02
              cc13 00e9  ld   $e9
              cc14 004f  ld   $4f
              cc15 0090  ld   $90
              cc16 0008  ld   $08
              cc17 00a9  ld   $a9
              cc18 0000  ld   $00
              cc19 008d  ld   $8d
              cc1a 0000  ld   $00
              cc1b 0002  ld   $02
              cc1c 008d  ld   $8d
              cc1d 0001  ld   $01
              cc1e 0002  ld   $02
              cc1f 0060  ld   $60
              cc20 002f  ld   $2f
              cc21 0000  ld   $00
              cc22 002a  ld   $2a
              cc23 00c9  ld   $c9
              cc24 005f  ld   $5f
              cc25 00f0  ld   $f0
              cc26 0005  ld   $05
              cc27 00e0  ld   $e0
              cc28 005a  ld   $5a
              cc29 00b0  ld   $b0
              cc2a 0011  ld   $11
              cc2b 0060  ld   $60
              cc2c 008a  ld   $8a
              cc2d 0048  ld   $48
              cc2e 0020  ld   $20
              cc2f 0032  ld   $32
              cc30 002a  ld   $2a
              cc31 00a9  ld   $a9
              cc32 0020  ld   $20
              cc33 0000  ld   $00
              cc34 0020  ld   $20
              cc35 0032  ld   $32
              cc36 002a  ld   $2a
              cc37 0068  ld   $68
              cc38 00aa  ld   $aa
              cc39 00f0  ld   $f0
              cc3a 0008  ld   $08
              cc3b 00ca  ld   $ca
              cc3c 0020  ld   $20
              cc3d 0032  ld   $32
              cc3e 002a  ld   $2a
              cc3f 0090  ld   $90
              cc40 0003  ld   $03
              cc41 00a9  ld   $a9
              cc42 0000  ld   $00
              cc43 0060  ld   $60
              cc44 00a9  ld   $a9
              cc45 003f  ld   $3f
              cc46 0000  ld   $00
              cc47 00a9  ld   $a9
              cc48 000d  ld   $0d
              cc49 0000  ld   $00
              cc4a 00a2  ld   $a2
              cc4b 0000  ld   $00
              cc4c 0060  ld   $60
              cc4d 0030  ld   $30
              cc4e 0000  ld   $00
              cc4f 0050  ld   $50
              cc50 0008  ld   $08
              cc51 0048  ld   $48
              cc52 00a0  ld   $a0
              cc53 0000  ld   $00
              cc54 00b9  ld   $b9
              cc55 002a  ld   $2a
              cc56 0030  ld   $30
              cc57 00c8  ld   $c8
              cc58 0020  ld   $20
              cc59 0000  ld   $00
              cc5a 002b  ld   $2b
              cc5b 00d0  ld   $d0
              cc5c 00f7  ld   $f7
              cc5d 00a9  ld   $a9
              cc5e 0005  ld   $05
              cc5f 00a0  ld   $a0
              cc60 0024  ld   $24
              cc61 0085  ld   $85
              cc62 0034  ld   $34
              cc63 0084  ld   $84
              cc64 0035  ld   $35
              cc65 00a9  ld   $a9
              cc66 0000  ld   $00
              cc67 0085  ld   $85
              cc68 0036  ld   $36
              cc69 00a9  ld   $a9
              cc6a 000a  ld   $0a
              cc6b 0085  ld   $85
              cc6c 0037  ld   $37
              cc6d 00a9  ld   $a9
              cc6e 00fe  ld   $fe
              cc6f 00a0  ld   $a0
              cc70 0030  ld   $30
              cc71 0085  ld   $85
              cc72 0016  ld   $16
              cc73 0084  ld   $84
              cc74 0017  ld   $17
              cc75 0068  ld   $68
              cc76 0028  ld   $28
              cc77 004c  ld   $4c
              cc78 009c  ld   $9c
              cc79 0007  ld   $07
              cc7a 000d  ld   $0d
              cc7b 0053  ld   $53
              cc7c 0045  ld   $45
              cc7d 004e  ld   $4e
              cc7e 0044  ld   $44
              cc7f 0049  ld   $49
              cc80 004e  ld   $4e
              cc81 0047  ld   $47
              cc82 0020  ld   $20
              cc83 0054  ld   $54
              cc84 004f  ld   $4f
              cc85 0020  ld   $20
              cc86 0042  ld   $42
              cc87 0041  ld   $41
              cc88 0042  ld   $42
              cc89 0045  ld   $45
              cc8a 004c  ld   $4c
              cc8b 0046  ld   $46
              cc8c 0049  ld   $49
              cc8d 0053  ld   $53
              cc8e 0048  ld   $48
              cc8f 000d  ld   $0d
              cc90 0000  ld   $00
              cc91 0021  ld   $21
              cc92 0034  ld   $34
              cc93 00ad  ld   $ad
              cc94 00cf  ld   $cf
              cc95 0032  ld   $32
              cc96 0011  ld   $11
              cc97 0000  ld   $00
              cc98 0026  ld   $26
              cc99 002b  ld   $2b
              cc9a 001a  ld   $1a
              cc9b 00ee  ld   $ee
              cc9c 0000  ld   $00
              cc9d 00df  ld   $df
              cc9e 0002  ld   $02
              cc9f 00ff  ld   $ff
              cca0 0031  ld   $31
              cca1 0000  ld   $00
              cca2 005a  ld   $5a
              cca3 00ee  ld   $ee
              cca4 0003  ld   $03
              cca5 00f0  ld   $f0
              cca6 0034  ld   $34
              cca7 001a  ld   $1a
              cca8 0037  ld   $37
              cca9 008c  ld   $8c
              ccaa 000a  ld   $0a
              ccab 0035  ld   $35
              ccac 0072  ld   $72
              ccad 0017  ld   $17
              ccae 0021  ld   $21
              ccaf 0034  ld   $34
              ccb0 00ad  ld   $ad
              ccb1 00e6  ld   $e6
              ccb2 0020  ld   $20
              ccb3 0035  ld   $35
              ccb4 0056  ld   $56
              ccb5 0017  ld   $17
              ccb6 0075  ld   $75
              ccb7 0011  ld   $11
              ccb8 0041  ld   $41
              ccb9 0030  ld   $30
              ccba 00cf  ld   $cf
              ccbb 0018  ld   $18
              ccbc 001a  ld   $1a
              ccbd 0036  ld   $36
              ccbe 00e3  ld   $e3
              ccbf 0008  ld   $08
              ccc0 005e  ld   $5e
              ccc1 0036  ld   $36
              ccc2 0021  ld   $21
              ccc3 0034  ld   $34
              ccc4 00ad  ld   $ad
              ccc5 005e  ld   $5e
              ccc6 0037  ld   $37
              ccc7 0093  ld   $93
              ccc8 0034  ld   $34
              ccc9 008c  ld   $8c
              ccca 000a  ld   $0a
              cccb 0035  ld   $35
              cccc 003f  ld   $3f
              cccd 002b  ld   $2b
              ccce 001a  ld   $1a
              cccf 0036  ld   $36
              ccd0 0035  ld   $35
              ccd1 0072  ld   $72
              ccd2 004f  ld   $4f
              ccd3 0011  ld   $11
              ccd4 0005  ld   $05
              ccd5 0024  ld   $24
              ccd6 002b  ld   $2b
              ccd7 0034  ld   $34
              ccd8 002b  ld   $2b
              ccd9 0024  ld   $24
              ccda 0059  ld   $59
              ccdb 0001  ld   $01
              ccdc 005e  ld   $5e
              ccdd 0026  ld   $26
              ccde 001a  ld   $1a
              ccdf 0036  ld   $36
              cce0 005e  ld   $5e
              cce1 0027  ld   $27
              cce2 0011  ld   $11
              cce3 0006  ld   $06
              cce4 000b  ld   $0b
              cce5 002b  ld   $2b
              cce6 0022  ld   $22
              cce7 00b4  ld   $b4
              cce8 00e6  ld   $e6
              cce9 0035  ld   $35
              ccea 003f  ld   $3f
              cceb 004b  ld   $4b
              ccec 0059  ld   $59
              cced 0003  ld   $03
              ccee 005e  ld   $5e
              ccef 000f  ld   $0f
              ccf0 0059  ld   $59
              ccf1 0000  ld   $00
              ccf2 005e  ld   $5e
              ccf3 0036  ld   $36
              ccf4 0011  ld   $11
              ccf5 000c  ld   $0c
              ccf6 000b  ld   $0b
              ccf7 002b  ld   $2b
              ccf8 0022  ld   $22
              ccf9 00b4  ld   $b4
              ccfa 00e6  ld   $e6
              ccfb fe00  bra  ac          ;+-----------------------------------+
              ccfc fcfd  bra  $ccfd       ;|                                   |
              ccfd 1418  ld   $18,y       ;| Trampoline for page $cc00 lookups |
              ccfe e006  jmp  y,$06       ;|                                   |
              ccff c218  st   [$18]       ;+-----------------------------------+
              cd00 0090  ld   $90
              cd01 00fe  ld   $fe
              cd02 0032  ld   $32
              cd03 0000  ld   $00
              cd04 0025  ld   $25
              cd05 00a0  ld   $a0
              cd06 0000  ld   $00
              cd07 00b9  ld   $b9
              cd08 000e  ld   $0e
              cd09 0032  ld   $32
              cd0a 00c8  ld   $c8
              cd0b 0020  ld   $20
              cd0c 0000  ld   $00
              cd0d 002b  ld   $2b
              cd0e 00d0  ld   $d0
              cd0f 00f7  ld   $f7
              cd10 004c  ld   $4c
              cd11 0026  ld   $26
              cd12 0009  ld   $09
              cd13 000d  ld   $0d
              cd14 0055  ld   $55
              cd15 0053  ld   $53
              cd16 0045  ld   $45
              cd17 0020  ld   $20
              cd18 0042  ld   $42
              cd19 0041  ld   $41
              cd1a 0042  ld   $42
              cd1b 0045  ld   $45
              cd1c 004c  ld   $4c
              cd1d 0046  ld   $46
              cd1e 0049  ld   $49
              cd1f 0053  ld   $53
              cd20 0048  ld   $48
              cd21 0020  ld   $20
              cd22 0054  ld   $54
              cd23 004f  ld   $4f
              cd24 0020  ld   $20
              cd25 004c  ld   $4c
              cd26 004f  ld   $4f
              cd27 0041  ld   $41
              cd28 0044  ld   $44
              cd29 0000  ld   $00
              cd2a 0000  ld   $00
              cd2b 0000  ld   $00         ;End of Apps/MSBASIC/MSBASIC_v1.gt1, size 9742
                                          ;+-----------------------------------+
                                          ;| Apps/Horizon/Horizon_at67_v1.gt1  |
                                          ;+-----------------------------------+
              cd2c dc4d  st   $4d,[y,x++] ;'M'
              cd2d dc53  st   $53,[y,x++] ;'S'
              cd2e dc42  st   $42,[y,x++] ;'B'
              cd2f dc41  st   $41,[y,x++] ;'A'
              cd30 dc53  st   $53,[y,x++] ;'S'
              cd31 dc49  st   $49,[y,x++] ;'I'
              cd32 dc43  st   $43,[y,x++] ;'C'
              cd33 dc00  st   $00,[y,x++] ;'\x00'
              cd34 001e  ld   $1e
              cd35 c218  st   [$18]
              cd36 00a7  ld   $a7
              cd37 14fa  ld   $fa,y
              cd38 e020  jmp  y,$20
              cd39 c219  st   [$19]
Egg:          cd3a 0002  ld   $02
              cd3b 0000  ld   $00
              cd3c 00c0  ld   $c0
              cd3d 0011  ld   $11
              cd3e 00b4  ld   $b4
              cd3f 0026  ld   $26
              cd40 002b  ld   $2b
              cd41 00dc  ld   $dc
              cd42 0011  ld   $11
              cd43 00bd  ld   $bd
              cd44 0026  ld   $26
              cd45 002b  ld   $2b
              cd46 00d0  ld   $d0
              cd47 0011  ld   $11
              cd48 00c6  ld   $c6
              cd49 0026  ld   $26
              cd4a 002b  ld   $2b
              cd4b 00d2  ld   $d2
              cd4c 0011  ld   $11
              cd4d 00cf  ld   $cf
              cd4e 0026  ld   $26
              cd4f 002b  ld   $2b
              cd50 00d4  ld   $d4
              cd51 0011  ld   $11
              cd52 00d8  ld   $d8
              cd53 0026  ld   $26
              cd54 002b  ld   $2b
              cd55 00d6  ld   $d6
              cd56 0011  ld   $11
              cd57 00e1  ld   $e1
              cd58 0026  ld   $26
              cd59 002b  ld   $2b
              cd5a 00d8  ld   $d8
              cd5b 0011  ld   $11
              cd5c 00ea  ld   $ea
              cd5d 0026  ld   $26
              cd5e 002b  ld   $2b
              cd5f 00da  ld   $da
              cd60 0011  ld   $11
              cd61 0020  ld   $20
              cd62 000f  ld   $0f
              cd63 002b  ld   $2b
              cd64 00a2  ld   $a2
              cd65 0011  ld   $11
              cd66 0001  ld   $01
              cd67 0000  ld   $00
              cd68 002b  ld   $2b
              cd69 00ac  ld   $ac
              cd6a 0011  ld   $11
              cd6b 0000  ld   $00
              cd6c 00ff  ld   $ff
              cd6d 002b  ld   $2b
              cd6e 00ae  ld   $ae
              cd6f 0011  ld   $11
              cd70 0000  ld   $00
              cd71 0000  ld   $00
              cd72 002b  ld   $2b
              cd73 00a6  ld   $a6
              cd74 0059  ld   $59
              cd75 0000  ld   $00
              cd76 005e  ld   $5e
              cd77 002c  ld   $2c
              cd78 0011  ld   $11
              cd79 00a0  ld   $a0
              cd7a 0025  ld   $25
              cd7b 00cf  ld   $cf
              cd7c 0018  ld   $18
              cd7d 0011  ld   $11
              cd7e 00c3  ld   $c3
              cd7f 0025  ld   $25
              cd80 00cf  ld   $cf
              cd81 0018  ld   $18
              cd82 0059  ld   $59
              cd83 0000  ld   $00
              cd84 002b  ld   $2b
              cd85 0030  ld   $30
              cd86 002b  ld   $2b
              cd87 0032  ld   $32
              cd88 002b  ld   $2b
              cd89 0034  ld   $34
              cd8a 002b  ld   $2b
              cd8b 0036  ld   $36
              cd8c 002b  ld   $2b
              cd8d 0038  ld   $38
              cd8e 002b  ld   $2b
              cd8f 003a  ld   $3a
              cd90 002b  ld   $2b
              cd91 003c  ld   $3c
              cd92 0059  ld   $59
              cd93 003f  ld   $3f
              cd94 002b  ld   $2b
              cd95 003e  ld   $3e
              cd96 0059  ld   $59
              cd97 0003  ld   $03
              cd98 002b  ld   $2b
              cd99 0040  ld   $40
              cd9a 0059  ld   $59
              cd9b 0020  ld   $20
              cd9c 002b  ld   $2b
              cd9d 0042  ld   $42
              cd9e 0011  ld   $11
              cd9f 00a0  ld   $a0
              cda0 0026  ld   $26
              cda1 002b  ld   $2b
              cda2 0084  ld   $84
              cda3 0059  ld   $59
              cda4 003f  ld   $3f
              cda5 00f3  ld   $f3
              cda6 0084  ld   $84
              cda7 0011  ld   $11
              cda8 00a2  ld   $a2
              cda9 0026  ld   $26
              cdaa 002b  ld   $2b
              cdab 0084  ld   $84
              cdac 0059  ld   $59
              cdad 002a  ld   $2a
              cdae 00f3  ld   $f3
              cdaf 0084  ld   $84
              cdb0 0011  ld   $11
              cdb1 00a4  ld   $a4
              cdb2 0026  ld   $26
              cdb3 002b  ld   $2b
              cdb4 0084  ld   $84
              cdb5 0059  ld   $59
              cdb6 0015  ld   $15
              cdb7 00f3  ld   $f3
              cdb8 0084  ld   $84
              cdb9 0011  ld   $11
              cdba 00a6  ld   $a6
              cdbb 0026  ld   $26
              cdbc 002b  ld   $2b
              cdbd 0084  ld   $84
              cdbe 0059  ld   $59
              cdbf 0000  ld   $00
              cdc0 00f3  ld   $f3
              cdc1 0084  ld   $84
              cdc2 0011  ld   $11
              cdc3 00aa  ld   $aa
              cdc4 0026  ld   $26
              cdc5 002b  ld   $2b
              cdc6 0084  ld   $84
              cdc7 0059  ld   $59
              cdc8 0003  ld   $03
              cdc9 00f3  ld   $f3
              cdca 0084  ld   $84
              cdcb 0011  ld   $11
              cdcc 00ac  ld   $ac
              cdcd 0026  ld   $26
              cdce 002b  ld   $2b
              cdcf 0084  ld   $84
              cdd0 0059  ld   $59
              cdd1 0002  ld   $02
              cdd2 00f3  ld   $f3
              cdd3 0084  ld   $84
              cdd4 0011  ld   $11
              cdd5 00ae  ld   $ae
              cdd6 0026  ld   $26
              cdd7 002b  ld   $2b
              cdd8 0084  ld   $84
              cdd9 0059  ld   $59
              cdda 0001  ld   $01
              cddb 00f3  ld   $f3
              cddc 0084  ld   $84
              cddd 0011  ld   $11
              cdde 00b0  ld   $b0
              cddf 0026  ld   $26
              cde0 002b  ld   $2b
              cde1 0084  ld   $84
              cde2 0059  ld   $59
              cde3 0000  ld   $00
              cde4 00f3  ld   $f3
              cde5 0084  ld   $84
              cde6 0059  ld   $59
              cde7 0000  ld   $00
              cde8 002b  ld   $2b
              cde9 0044  ld   $44
              cdea 002b  ld   $2b
              cdeb 0046  ld   $46
              cdec 0059  ld   $59
              cded 0036  ld   $36
              cdee 002b  ld   $2b
              cdef 0048  ld   $48
              cdf0 0059  ld   $59
              cdf1 0077  ld   $77
              cdf2 002b  ld   $2b
              cdf3 0030  ld   $30
              cdf4 0021  ld   $21
              cdf5 0042  ld   $42
              cdf6 002b  ld   $2b
              cdf7 00b0  ld   $b0
              cdf8 0011  ld   $11
              cdf9 00ff  ld   $ff
              cdfa 00ff  ld   $ff
              cdfb fe00  bra  ac          ;+-----------------------------------+
              cdfc fcfd  bra  $cdfd       ;|                                   |
              cdfd 1418  ld   $18,y       ;| Trampoline for page $cd00 lookups |
              cdfe e006  jmp  y,$06       ;|                                   |
              cdff c218  st   [$18]       ;+-----------------------------------+
              ce00 002b  ld   $2b
              ce01 00b2  ld   $b2
              ce02 0002  ld   $02
              ce03 00c0  ld   $c0
              ce04 0037  ld   $37
              ce05 0011  ld   $11
              ce06 00a0  ld   $a0
              ce07 0026  ld   $26
              ce08 0099  ld   $99
              ce09 0046  ld   $46
              ce0a 0099  ld   $99
              ce0b 0046  ld   $46
              ce0c 00f6  ld   $f6
              ce0d 002b  ld   $2b
              ce0e 003e  ld   $3e
              ce0f 0011  ld   $11
              ce10 00aa  ld   $aa
              ce11 0026  ld   $26
              ce12 0099  ld   $99
              ce13 0046  ld   $46
              ce14 0099  ld   $99
              ce15 0046  ld   $46
              ce16 00f6  ld   $f6
              ce17 002b  ld   $2b
              ce18 0040  ld   $40
              ce19 0021  ld   $21
              ce1a 0044  ld   $44
              ce1b 00e3  ld   $e3
              ce1c 0001  ld   $01
              ce1d 002b  ld   $2b
              ce1e 0044  ld   $44
              ce1f 0021  ld   $21
              ce20 0044  ld   $44
              ce21 00b8  ld   $b8
              ce22 0048  ld   $48
              ce23 0035  ld   $35
              ce24 003f  ld   $3f
              ce25 00e4  ld   $e4
              ce26 0011  ld   $11
              ce27 000d  ld   $0d
              ce28 0003  ld   $03
              ce29 00cf  ld   $cf
              ce2a 0018  ld   $18
              ce2b 0021  ld   $21
              ce2c 0046  ld   $46
              ce2d 00e3  ld   $e3
              ce2e 0001  ld   $01
              ce2f 002b  ld   $2b
              ce30 0046  ld   $46
              ce31 0059  ld   $59
              ce32 0000  ld   $00
              ce33 002b  ld   $2b
              ce34 0044  ld   $44
              ce35 002b  ld   $2b
              ce36 00de  ld   $de
              ce37 0011  ld   $11
              ce38 0000  ld   $00
              ce39 0003  ld   $03
              ce3a 00cf  ld   $cf
              ce3b 0018  ld   $18
              ce3c 0003  ld   $03
              ce3d 0000  ld   $00
              ce3e 000d  ld   $0d
              ce3f 0021  ld   $21
              ce40 00de  ld   $de
              ce41 0021  ld   $21
              ce42 0048  ld   $48
              ce43 002b  ld   $2b
              ce44 0098  ld   $98
              ce45 0011  ld   $11
              ce46 00f3  ld   $f3
              ce47 0026  ld   $26
              ce48 00cf  ld   $cf
              ce49 0018  ld   $18
              ce4a 002b  ld   $2b
              ce4b 0048  ld   $48
              ce4c 0003  ld   $03
              ce4d 000d  ld   $0d
              ce4e 002c  ld   $2c
              ce4f 0021  ld   $21
              ce50 0030  ld   $30
              ce51 002b  ld   $2b
              ce52 003c  ld   $3c
              ce53 0011  ld   $11
              ce54 00a7  ld   $a7
              ce55 0004  ld   $04
              ce56 00cf  ld   $cf
              ce57 0018  ld   $18
              ce58 0021  ld   $21
              ce59 0030  ld   $30
              ce5a 00b8  ld   $b8
              ce5b 0042  ld   $42
              ce5c 00e3  ld   $e3
              ce5d 0028  ld   $28
              ce5e 002b  ld   $2b
              ce5f 00c0  ld   $c0
              ce60 0011  ld   $11
              ce61 0090  ld   $90
              ce62 0001  ld   $01
              ce63 002b  ld   $2b
              ce64 0082  ld   $82
              ce65 0021  ld   $21
              ce66 00c0  ld   $c0
              ce67 002b  ld   $2b
              ce68 0084  ld   $84
              ce69 0011  ld   $11
              ce6a 00a0  ld   $a0
              ce6b 0024  ld   $24
              ce6c 00cf  ld   $cf
              ce6d 0018  ld   $18
              ce6e 0082  ld   $82
              ce6f 0001  ld   $01
              ce70 0035  ld   $35
              ce71 0072  ld   $72
              ce72 0037  ld   $37
              ce73 0021  ld   $21
              ce74 003e  ld   $3e
              ce75 00fc  ld   $fc
              ce76 0040  ld   $40
              ce77 002b  ld   $2b
              ce78 0036  ld   $36
              ce79 0090  ld   $90
              ce7a 003b  ld   $3b
              ce7b 0003  ld   $03
              ce7c 0039  ld   $39
              ce7d 0004  ld   $04
              ce7e 0059  ld   $59
              ce7f 0000  ld   $00
              ce80 002b  ld   $2b
              ce81 0036  ld   $36
              ce82 0003  ld   $03
              ce83 003d  ld   $3d
              ce84 0029  ld   $29
              ce85 0059  ld   $59
              ce86 0050  ld   $50
              ce87 002b  ld   $2b
              ce88 0082  ld   $82
              ce89 0021  ld   $21
              ce8a 003a  ld   $3a
              ce8b 002b  ld   $2b
              ce8c 0084  ld   $84
              ce8d 0011  ld   $11
              ce8e 00a0  ld   $a0
              ce8f 0024  ld   $24
              ce90 00cf  ld   $cf
              ce91 0018  ld   $18
              ce92 0021  ld   $21
              ce93 0092  ld   $92
              ce94 002b  ld   $2b
              ce95 0034  ld   $34
              ce96 0021  ld   $21
              ce97 0030  ld   $30
              ce98 00e3  ld   $e3
              ce99 0008  ld   $08
              ce9a 002b  ld   $2b
              ce9b 00c0  ld   $c0
              ce9c 001a  ld   $1a
              ce9d 00c0  ld   $c0
              ce9e 005e  ld   $5e
              ce9f 0039  ld   $39
              cea0 0059  ld   $59
              cea1 0000  ld   $00
              cea2 002b  ld   $2b
              cea3 0032  ld   $32
              cea4 0021  ld   $21
              cea5 003a  ld   $3a
              cea6 00e3  ld   $e3
              cea7 009f  ld   $9f
              cea8 002b  ld   $2b
              cea9 00b4  ld   $b4
              ceaa 0059  ld   $59
              ceab 0001  ld   $01
              ceac 002b  ld   $2b
              cead 00b6  ld   $b6
              ceae 0003  ld   $03
              ceaf 0066  ld   $66
              ceb0 000d  ld   $0d
              ceb1 0021  ld   $21
              ceb2 0034  ld   $34
              ceb3 0035  ld   $35
              ceb4 0072  ld   $72
              ceb5 0071  ld   $71
              ceb6 0021  ld   $21
              ceb7 003a  ld   $3a
              ceb8 00e6  ld   $e6
              ceb9 0001  ld   $01
              ceba 002b  ld   $2b
              cebb 0034  ld   $34
              cebc 0090  ld   $90
              cebd 0077  ld   $77
              cebe 0003  ld   $03
              cebf 0073  ld   $73
              cec0 0006  ld   $06
              cec1 0021  ld   $21
              cec2 0034  ld   $34
              cec3 00e6  ld   $e6
              cec4 0001  ld   $01
              cec5 002b  ld   $2b
              cec6 0034  ld   $34
              cec7 0003  ld   $03
              cec8 0079  ld   $79
              cec9 0011  ld   $11
              ceca 0021  ld   $21
              cecb 0034  ld   $34
              cecc 0099  ld   $99
              cecd 0034  ld   $34
              cece 00b8  ld   $b8
              cecf 003a  ld   $3a
              ced0 0035  ld   $35
              ced1 0050  ld   $50
              ced2 0088  ld   $88
              ced3 0021  ld   $21
              ced4 003e  ld   $3e
              ced5 00fc  ld   $fc
              ced6 0036  ld   $36
              ced7 002b  ld   $2b
              ced8 004a  ld   $4a
              ced9 0090  ld   $90
              ceda 008e  ld   $8e
              cedb 0003  ld   $03
              cedc 008a  ld   $8a
              cedd 0006  ld   $06
              cede 0021  ld   $21
              cedf 0040  ld   $40
              cee0 00fc  ld   $fc
              cee1 0036  ld   $36
              cee2 002b  ld   $2b
              cee3 004a  ld   $4a
              cee4 0003  ld   $03
              cee5 0090  ld   $90
              cee6 004a  ld   $4a
              cee7 0021  ld   $21
              cee8 0038  ld   $38
              cee9 0099  ld   $99
              ceea 0032  ld   $32
              ceeb 002b  ld   $2b
              ceec 00c0  ld   $c0
              ceed 0021  ld   $21
              ceee 004a  ld   $4a
              ceef 00f0  ld   $f0
              cef0 00c0  ld   $c0
              cef1 0021  ld   $21
              cef2 0032  ld   $32
              cef3 0099  ld   $99
              cef4 00b6  ld   $b6
              cef5 002b  ld   $2b
              cef6 0032  ld   $32
              cef7 00b8  ld   $b8
              cef8 00b4  ld   $b4
              cef9 0035  ld   $35
              cefa 004d  ld   $4d
              cefb fe00  bra  ac          ;+-----------------------------------+
              cefc fcfd  bra  $cefd       ;|                                   |
              cefd 1418  ld   $18,y       ;| Trampoline for page $ce00 lookups |
              cefe e006  jmp  y,$06       ;|                                   |
              ceff c218  st   [$18]       ;+-----------------------------------+
              cf00 00a8  ld   $a8
              cf01 0011  ld   $11
              cf02 0066  ld   $66
              cf03 0003  ld   $03
              cf04 00cf  ld   $cf
              cf05 0018  ld   $18
              cf06 0021  ld   $21
              cf07 0030  ld   $30
              cf08 0099  ld   $99
              cf09 0030  ld   $30
              cf0a 002b  ld   $2b
              cf0b 00c0  ld   $c0
              cf0c 0011  ld   $11
              cf0d 00f9  ld   $f9
              cf0e 0001  ld   $01
              cf0f 002b  ld   $2b
              cf10 0082  ld   $82
              cf11 0021  ld   $21
              cf12 00c0  ld   $c0
              cf13 00f0  ld   $f0
              cf14 0082  ld   $82
              cf15 0021  ld   $21
              cf16 0030  ld   $30
              cf17 0099  ld   $99
              cf18 00b2  ld   $b2
              cf19 002b  ld   $2b
              cf1a 0030  ld   $30
              cf1b 00b8  ld   $b8
              cf1c 00b0  ld   $b0
              cf1d 0035  ld   $35
              cf1e 0050  ld   $50
              cf1f 00c7  ld   $c7
              cf20 0011  ld   $11
              cf21 00c0  ld   $c0
              cf22 0002  ld   $02
              cf23 00cf  ld   $cf
              cf24 0018  ld   $18
              cf25 0011  ld   $11
              cf26 00f9  ld   $f9
              cf27 0001  ld   $01
              cf28 002b  ld   $2b
              cf29 0082  ld   $82
              cf2a 0059  ld   $59
              cf2b 0000  ld   $00
              cf2c 00f0  ld   $f0
              cf2d 0082  ld   $82
              cf2e 0059  ld   $59
              cf2f 0000  ld   $00
              cf30 002b  ld   $2b
              cf31 0032  ld   $32
              cf32 0059  ld   $59
              cf33 0008  ld   $08
              cf34 002b  ld   $2b
              cf35 004c  ld   $4c
              cf36 0003  ld   $03
              cf37 00da  ld   $da
              cf38 001f  ld   $1f
              cf39 0021  ld   $21
              cf3a 0032  ld   $32
              cf3b 0082  ld   $82
              cf3c 00ff  ld   $ff
              cf3d 002b  ld   $2b
              cf3e 0034  ld   $34
              cf3f 0059  ld   $59
              cf40 0000  ld   $00
              cf41 002b  ld   $2b
              cf42 0036  ld   $36
              cf43 0011  ld   $11
              cf44 00f0  ld   $f0
              cf45 0001  ld   $01
              cf46 002b  ld   $2b
              cf47 004e  ld   $4e
              cf48 0021  ld   $21
              cf49 0042  ld   $42
              cf4a 002b  ld   $2b
              cf4b 003c  ld   $3c
              cf4c 0011  ld   $11
              cf4d 00a7  ld   $a7
              cf4e 0004  ld   $04
              cf4f 00cf  ld   $cf
              cf50 0018  ld   $18
              cf51 002b  ld   $2b
              cf52 00de  ld   $de
              cf53 0011  ld   $11
              cf54 0000  ld   $00
              cf55 0004  ld   $04
              cf56 00cf  ld   $cf
              cf57 0018  ld   $18
              cf58 0004  ld   $04
              cf59 0000  ld   $00
              cf5a 000e  ld   $0e
              cf5b 0021  ld   $21
              cf5c 00de  ld   $de
              cf5d 0059  ld   $59
              cf5e 0000  ld   $00
              cf5f 002b  ld   $2b
              cf60 0030  ld   $30
              cf61 0021  ld   $21
              cf62 003a  ld   $3a
              cf63 002b  ld   $2b
              cf64 00b0  ld   $b0
              cf65 0059  ld   $59
              cf66 0001  ld   $01
              cf67 002b  ld   $2b
              cf68 00b2  ld   $b2
              cf69 0004  ld   $04
              cf6a 000e  ld   $0e
              cf6b 002e  ld   $2e
              cf6c 0021  ld   $21
              cf6d 0036  ld   $36
              cf6e 0099  ld   $99
              cf6f 0034  ld   $34
              cf70 002b  ld   $2b
              cf71 0036  ld   $36
              cf72 0021  ld   $21
              cf73 0030  ld   $30
              cf74 0099  ld   $99
              cf75 00b2  ld   $b2
              cf76 002b  ld   $2b
              cf77 0030  ld   $30
              cf78 00b8  ld   $b8
              cf79 00b0  ld   $b0
              cf7a 0035  ld   $35
              cf7b 004d  ld   $4d
              cf7c 0022  ld   $22
              cf7d 0011  ld   $11
              cf7e 000e  ld   $0e
              cf7f 0004  ld   $04
              cf80 00cf  ld   $cf
              cf81 0018  ld   $18
              cf82 0021  ld   $21
              cf83 0034  ld   $34
              cf84 0099  ld   $99
              cf85 0034  ld   $34
              cf86 002b  ld   $2b
              cf87 0034  ld   $34
              cf88 0011  ld   $11
              cf89 0001  ld   $01
              cf8a 0001  ld   $01
              cf8b 0099  ld   $99
              cf8c 0042  ld   $42
              cf8d 0099  ld   $99
              cf8e 0042  ld   $42
              cf8f 002b  ld   $2b
              cf90 004a  ld   $4a
              cf91 0059  ld   $59
              cf92 0001  ld   $01
              cf93 002b  ld   $2b
              cf94 0082  ld   $82
              cf95 0011  ld   $11
              cf96 00a0  ld   $a0
              cf97 0023  ld   $23
              cf98 00cf  ld   $cf
              cf99 0018  ld   $18
              cf9a 0004  ld   $04
              cf9b 003c  ld   $3c
              cf9c 0035  ld   $35
              cf9d 001a  ld   $1a
              cf9e 0037  ld   $37
              cf9f 00f0  ld   $f0
              cfa0 004a  ld   $4a
              cfa1 0021  ld   $21
              cfa2 0036  ld   $36
              cfa3 0082  ld   $82
              cfa4 00ff  ld   $ff
              cfa5 0099  ld   $99
              cfa6 0034  ld   $34
              cfa7 002b  ld   $2b
              cfa8 0036  ld   $36
              cfa9 0021  ld   $21
              cfaa 004a  ld   $4a
              cfab 00e3  ld   $e3
              cfac 0004  ld   $04
              cfad 002b  ld   $2b
              cfae 004a  ld   $4a
              cfaf 00b8  ld   $b8
              cfb0 004e  ld   $4e
              cfb1 0035  ld   $35
              cfb2 0053  ld   $53
              cfb3 0056  ld   $56
              cfb4 0011  ld   $11
              cfb5 003c  ld   $3c
              cfb6 0004  ld   $04
              cfb7 00cf  ld   $cf
              cfb8 0018  ld   $18
              cfb9 0059  ld   $59
              cfba 0011  ld   $11
              cfbb 00ad  ld   $ad
              cfbc 002b  ld   $2b
              cfbd 0082  ld   $82
              cfbe 0059  ld   $59
              cfbf 0000  ld   $00
              cfc0 002b  ld   $2b
              cfc1 0084  ld   $84
              cfc2 0011  ld   $11
              cfc3 00bb  ld   $bb
              cfc4 0023  ld   $23
              cfc5 00cf  ld   $cf
              cfc6 0018  ld   $18
              cfc7 0021  ld   $21
              cfc8 0032  ld   $32
              cfc9 0099  ld   $99
              cfca 004c  ld   $4c
              cfcb 002b  ld   $2b
              cfcc 0032  ld   $32
              cfcd 0011  ld   $11
              cfce 00da  ld   $da
              cfcf 0003  ld   $03
              cfd0 00cf  ld   $cf
              cfd1 0018  ld   $18
              cfd2 0004  ld   $04
              cfd3 0071  ld   $71
              cfd4 0010  ld   $10
              cfd5 0075  ld   $75
              cfd6 0021  ld   $21
              cfd7 004c  ld   $4c
              cfd8 00e3  ld   $e3
              cfd9 0001  ld   $01
              cfda 002b  ld   $2b
              cfdb 004c  ld   $4c
              cfdc 00e6  ld   $e6
              cfdd 0020  ld   $20
              cfde 0035  ld   $35
              cfdf 0056  ld   $56
              cfe0 007f  ld   $7f
              cfe1 0059  ld   $59
              cfe2 0020  ld   $20
              cfe3 002b  ld   $2b
              cfe4 004c  ld   $4c
              cfe5 0004  ld   $04
              cfe6 0081  ld   $81
              cfe7 0002  ld   $02
              cfe8 0063  ld   $63
              cfe9 00ff  ld   $ff
              cfea 0004  ld   $04
              cfeb 0083  ld   $83
              cfec 0014  ld   $14
              cfed 0075  ld   $75
              cfee 0021  ld   $21
              cfef 004c  ld   $4c
              cff0 00e6  ld   $e6
              cff1 0001  ld   $01
              cff2 002b  ld   $2b
              cff3 004c  ld   $4c
              cff4 0011  ld   $11
              cff5 00e0  ld   $e0
              cff6 00ff  ld   $ff
              cff7 00b8  ld   $b8
              cff8 004c  ld   $4c
              cff9 0035  ld   $35
              cffa 0050  ld   $50
              cffb fe00  bra  ac          ;+-----------------------------------+
              cffc fcfd  bra  $cffd       ;|                                   |
              cffd 1418  ld   $18,y       ;| Trampoline for page $cf00 lookups |
              cffe e006  jmp  y,$06       ;|                                   |
              cfff c218  st   [$18]       ;+-----------------------------------+
              d000 0095  ld   $95
              d001 0011  ld   $11
              d002 00e0  ld   $e0
              d003 00ff  ld   $ff
              d004 002b  ld   $2b
              d005 004c  ld   $4c
              d006 0004  ld   $04
              d007 0097  ld   $97
              d008 0002  ld   $02
              d009 0063  ld   $63
              d00a 00ff  ld   $ff
              d00b 0004  ld   $04
              d00c 0099  ld   $99
              d00d 0007  ld   $07
              d00e 0075  ld   $75
              d00f 0059  ld   $59
              d010 0000  ld   $00
              d011 002b  ld   $2b
              d012 004c  ld   $4c
              d013 0063  ld   $63
              d014 00ff  ld   $ff
              d015 0004  ld   $04
              d016 00a0  ld   $a0
              d017 0007  ld   $07
              d018 0075  ld   $75
              d019 0059  ld   $59
              d01a 0000  ld   $00
              d01b 002b  ld   $2b
              d01c 004c  ld   $4c
              d01d 0063  ld   $63
              d01e 00ff  ld   $ff
              d01f 0004  ld   $04
              d020 00a7  ld   $a7
              d021 0017  ld   $17
              d022 0075  ld   $75
              d023 0011  ld   $11
              d024 00e9  ld   $e9
              d025 00ff  ld   $ff
              d026 0099  ld   $99
              d027 003c  ld   $3c
              d028 002b  ld   $2b
              d029 003a  ld   $3a
              d02a 0021  ld   $21
              d02b 003a  ld   $3a
              d02c 00e3  ld   $e3
              d02d 0001  ld   $01
              d02e 002b  ld   $2b
              d02f 00c0  ld   $c0
              d030 0011  ld   $11
              d031 00fe  ld   $fe
              d032 00ff  ld   $ff
              d033 00f8  ld   $f8
              d034 00c0  ld   $c0
              d035 002b  ld   $2b
              d036 003a  ld   $3a
              d037 0063  ld   $63
              d038 00ff  ld   $ff
              d039 0004  ld   $04
              d03a 00be  ld   $be
              d03b 0002  ld   $02
              d03c 0090  ld   $90
              d03d 00bc  ld   $bc
              d03e 0022  ld   $22
              d03f 00a0  ld   $a0
              d040 0008  ld   $08
              d041 0071  ld   $71
              d042 0004  ld   $04
              d043 0083  ld   $83
              d044 0004  ld   $04
              d045 0099  ld   $99
              d046 0004  ld   $04
              d047 00a0  ld   $a0
              d048 0004  ld   $04
              d049 0022  ld   $22
              d04a 00a8  ld   $a8
              d04b 001f  ld   $1f
              d04c 0075  ld   $75
              d04d 0059  ld   $59
              d04e 0008  ld   $08
              d04f 002b  ld   $2b
              d050 0098  ld   $98
              d051 0011  ld   $11
              d052 0000  ld   $00
              d053 0001  ld   $01
              d054 002b  ld   $2b
              d055 009a  ld   $9a
              d056 00cf  ld   $cf
              d057 00dc  ld   $dc
              d058 0021  ld   $21
              d059 0098  ld   $98
              d05a 00f3  ld   $f3
              d05b 009a  ld   $9a
              d05c 0093  ld   $93
              d05d 009a  ld   $9a
              d05e 0093  ld   $93
              d05f 009a  ld   $9a
              d060 0093  ld   $93
              d061 0098  ld   $98
              d062 001a  ld   $1a
              d063 0098  ld   $98
              d064 00e6  ld   $e6
              d065 0080  ld   $80
              d066 0035  ld   $35
              d067 0050  ld   $50
              d068 00b0  ld   $b0
              d069 0063  ld   $63
              d06a 00ff  ld   $ff
              d06b 0023  ld   $23
              d06c 00a0  ld   $a0
              d06d 001b  ld   $1b
              d06e 0021  ld   $21
              d06f 0082  ld   $82
              d070 00e6  ld   $e6
              d071 0001  ld   $01
              d072 002b  ld   $2b
              d073 0082  ld   $82
              d074 0035  ld   $35
              d075 0053  ld   $53
              d076 00a8  ld   $a8
              d077 00ff  ld   $ff
              d078 001a  ld   $1a
              d079 000e  ld   $0e
              d07a 00b8  ld   $b8
              d07b 00aa  ld   $aa
              d07c 0035  ld   $35
              d07d 003f  ld   $3f
              d07e 00a8  ld   $a8
              d07f 001a  ld   $1a
              d080 000e  ld   $0e
              d081 002b  ld   $2b
              d082 00aa  ld   $aa
              d083 0075  ld   $75
              d084 00cf  ld   $cf
              d085 00dc  ld   $dc
              d086 0063  ld   $63
              d087 0090  ld   $90
              d088 009e  ld   $9e
              d089 0023  ld   $23
              d08a 00bb  ld   $bb
              d08b 003a  ld   $3a
              d08c 0075  ld   $75
              d08d 0011  ld   $11
              d08e 00f5  ld   $f5
              d08f 0023  ld   $23
              d090 002b  ld   $2b
              d091 0086  ld   $86
              d092 002b  ld   $2b
              d093 0092  ld   $92
              d094 0011  ld   $11
              d095 00a0  ld   $a0
              d096 0022  ld   $22
              d097 002b  ld   $2b
              d098 0088  ld   $88
              d099 0021  ld   $21
              d09a 0092  ld   $92
              d09b 00f6  ld   $f6
              d09c 002b  ld   $2b
              d09d 0094  ld   $94
              d09e 001a  ld   $1a
              d09f 0095  ld   $95
              d0a0 0082  ld   $82
              d0a1 0080  ld   $80
              d0a2 0035  ld   $35
              d0a3 003f  ld   $3f
              d0a4 00db  ld   $db
              d0a5 0021  ld   $21
              d0a6 0084  ld   $84
              d0a7 0035  ld   $35
              d0a8 003f  ld   $3f
              d0a9 00d9  ld   $d9
              d0aa 00cf  ld   $cf
              d0ab 0084  ld   $84
              d0ac 0063  ld   $63
              d0ad 00ff  ld   $ff
              d0ae 0021  ld   $21
              d0af 0094  ld   $94
              d0b0 00b8  ld   $b8
              d0b1 0082  ld   $82
              d0b2 0035  ld   $35
              d0b3 003f  ld   $3f
              d0b4 00e8  ld   $e8
              d0b5 0093  ld   $93
              d0b6 0092  ld   $92
              d0b7 0093  ld   $93
              d0b8 0092  ld   $92
              d0b9 0090  ld   $90
              d0ba 00c6  ld   $c6
              d0bb 0021  ld   $21
              d0bc 0092  ld   $92
              d0bd 00b8  ld   $b8
              d0be 0086  ld   $86
              d0bf 0099  ld   $99
              d0c0 0088  ld   $88
              d0c1 00f6  ld   $f6
              d0c2 00cf  ld   $cf
              d0c3 0018  ld   $18
              d0c4 0063  ld   $63
              d0c5 00ff  ld   $ff
              d0c6 0023  ld   $23
              d0c7 00f5  ld   $f5
              d0c8 000a  ld   $0a
              d0c9 00fe  ld   $fe
              d0ca 0000  ld   $00
              d0cb 00fd  ld   $fd
              d0cc 0000  ld   $00
              d0cd 00bf  ld   $bf
              d0ce 0000  ld   $00
              d0cf 007f  ld   $7f
              d0d0 0000  ld   $00
              d0d1 00ff  ld   $ff
              d0d2 00ff  ld   $ff
              d0d3 0024  ld   $24
              d0d4 00a0  ld   $a0
              d0d5 005a  ld   $5a
              d0d6 0021  ld   $21
              d0d7 0082  ld   $82
              d0d8 00fc  ld   $fc
              d0d9 0084  ld   $84
              d0da 002b  ld   $2b
              d0db 0094  ld   $94
              d0dc 0021  ld   $21
              d0dd 0082  ld   $82
              d0de 0035  ld   $35
              d0df 0053  ld   $53
              d0e0 00af  ld   $af
              d0e1 0059  ld   $59
              d0e2 0000  ld   $00
              d0e3 00b8  ld   $b8
              d0e4 0082  ld   $82
              d0e5 002b  ld   $2b
              d0e6 0082  ld   $82
              d0e7 0021  ld   $21
              d0e8 0084  ld   $84
              d0e9 0035  ld   $35
              d0ea 0053  ld   $53
              d0eb 00ba  ld   $ba
              d0ec 0059  ld   $59
              d0ed 0000  ld   $00
              d0ee 00b8  ld   $b8
              d0ef 0084  ld   $84
              d0f0 002b  ld   $2b
              d0f1 0084  ld   $84
              d0f2 0059  ld   $59
              d0f3 0000  ld   $00
              d0f4 002b  ld   $2b
              d0f5 0092  ld   $92
              d0f6 002b  ld   $2b
              d0f7 0096  ld   $96
              d0f8 0021  ld   $21
              d0f9 0092  ld   $92
              d0fa 0099  ld   $99
              d0fb fe00  bra  ac          ;+-----------------------------------+
              d0fc fcfd  bra  $d0fd       ;|                                   |
              d0fd 1418  ld   $18,y       ;| Trampoline for page $d000 lookups |
              d0fe e006  jmp  y,$06       ;|                                   |
              d0ff c218  st   [$18]       ;+-----------------------------------+
              d100 0092  ld   $92
              d101 002b  ld   $2b
              d102 0092  ld   $92
              d103 0021  ld   $21
              d104 0082  ld   $82
              d105 0035  ld   $35
              d106 0053  ld   $53
              d107 00cd  ld   $cd
              d108 0093  ld   $93
              d109 0092  ld   $92
              d10a 0021  ld   $21
              d10b 0082  ld   $82
              d10c 0099  ld   $99
              d10d 0082  ld   $82
              d10e 002b  ld   $2b
              d10f 0082  ld   $82
              d110 0021  ld   $21
              d111 0092  ld   $92
              d112 00b8  ld   $b8
              d113 0084  ld   $84
              d114 0035  ld   $35
              d115 0050  ld   $50
              d116 00de  ld   $de
              d117 002b  ld   $2b
              d118 0092  ld   $92
              d119 0093  ld   $93
              d11a 0082  ld   $82
              d11b 0075  ld   $75
              d11c 00cf  ld   $cf
              d11d 00dc  ld   $dc
              d11e 0063  ld   $63
              d11f 0021  ld   $21
              d120 0096  ld   $96
              d121 00e3  ld   $e3
              d122 0001  ld   $01
              d123 0082  ld   $82
              d124 000f  ld   $0f
              d125 0035  ld   $35
              d126 0072  ld   $72
              d127 00be  ld   $be
              d128 0021  ld   $21
              d129 0094  ld   $94
              d12a 0035  ld   $35
              d12b 0053  ld   $53
              d12c 00f5  ld   $f5
              d12d 0059  ld   $59
              d12e 0000  ld   $00
              d12f 00b8  ld   $b8
              d130 0082  ld   $82
              d131 00ff  ld   $ff
              d132 0021  ld   $21
              d133 0082  ld   $82
              d134 00ff  ld   $ff
              d135 0025  ld   $25
              d136 00a0  ld   $a0
              d137 0023  ld   $23
              d138 0075  ld   $75
              d139 0011  ld   $11
              d13a 00a8  ld   $a8
              d13b 0022  ld   $22
              d13c 00cf  ld   $cf
              d13d 0018  ld   $18
              d13e 0011  ld   $11
              d13f 0002  ld   $02
              d140 0000  ld   $00
              d141 002b  ld   $2b
              d142 00a4  ld   $a4
              d143 0011  ld   $11
              d144 00ff  ld   $ff
              d145 007f  ld   $7f
              d146 00f8  ld   $f8
              d147 00ac  ld   $ac
              d148 002b  ld   $2b
              d149 00ac  ld   $ac
              d14a 001a  ld   $1a
              d14b 00a2  ld   $a2
              d14c 005e  ld   $5e
              d14d 0024  ld   $24
              d14e 005e  ld   $5e
              d14f 0025  ld   $25
              d150 005e  ld   $5e
              d151 0026  ld   $26
              d152 005e  ld   $5e
              d153 0027  ld   $27
              d154 0011  ld   $11
              d155 00d4  ld   $d4
              d156 0004  ld   $04
              d157 002b  ld   $2b
              d158 0022  ld   $22
              d159 0063  ld   $63
              d15a 00ff  ld   $ff
              d15b 0025  ld   $25
              d15c 00c3  ld   $c3
              d15d 003a  ld   $3a
              d15e 0075  ld   $75
              d15f 0011  ld   $11
              d160 00a0  ld   $a0
              d161 0025  ld   $25
              d162 00cf  ld   $cf
              d163 0018  ld   $18
              d164 0011  ld   $11
              d165 0000  ld   $00
              d166 0008  ld   $08
              d167 002b  ld   $2b
              d168 0028  ld   $28
              d169 001a  ld   $1a
              d16a 0029  ld   $29
              d16b 005e  ld   $5e
              d16c 0094  ld   $94
              d16d 00cf  ld   $cf
              d16e 00dc  ld   $dc
              d16f 001a  ld   $1a
              d170 0094  ld   $94
              d171 005e  ld   $5e
              d172 0029  ld   $29
              d173 00b4  ld   $b4
              d174 00ff  ld   $ff
              d175 0011  ld   $11
              d176 0087  ld   $87
              d177 0000  ld   $00
              d178 00b8  ld   $b8
              d179 0094  ld   $94
              d17a 005e  ld   $5e
              d17b 0029  ld   $29
              d17c 00b4  ld   $b4
              d17d 00ff  ld   $ff
              d17e 001a  ld   $1a
              d17f 0028  ld   $28
              d180 00e3  ld   $e3
              d181 0004  ld   $04
              d182 005e  ld   $5e
              d183 0028  ld   $28
              d184 00e6  ld   $e6
              d185 00a0  ld   $a0
              d186 0035  ld   $35
              d187 0050  ld   $50
              d188 00d0  ld   $d0
              d189 0059  ld   $59
              d18a 0000  ld   $00
              d18b 005e  ld   $5e
              d18c 0028  ld   $28
              d18d 0093  ld   $93
              d18e 0094  ld   $94
              d18f 001a  ld   $1a
              d190 0094  ld   $94
              d191 00e6  ld   $e6
              d192 0044  ld   $44
              d193 0035  ld   $35
              d194 0050  ld   $50
              d195 00d0  ld   $d0
              d196 0063  ld   $63
              d197 00ff  ld   $ff
              d198 0026  ld   $26
              d199 00a0  ld   $a0
              d19a 000a  ld   $0a
              d19b 0000  ld   $00
              d19c 0000  ld   $00
              d19d 0000  ld   $00
              * 10 times
              d1a5 0026  ld   $26
              d1a6 00aa  ld   $aa
              d1a7 000a  ld   $0a
              d1a8 0000  ld   $00
              d1a9 0000  ld   $00
              d1aa 0000  ld   $00
              * 10 times
              d1b2 0026  ld   $26
              d1b3 00b4  ld   $b4
              d1b4 0009  ld   $09
              d1b5 0075  ld   $75
              d1b6 0011  ld   $11
              d1b7 00bc  ld   $bc
              d1b8 0026  ld   $26
              d1b9 00cf  ld   $cf
              d1ba 0018  ld   $18
              d1bb 0063  ld   $63
              d1bc 00ff  ld   $ff
              d1bd 00ff  ld   $ff
              d1be 0026  ld   $26
              d1bf 00bd  ld   $bd
              d1c0 0009  ld   $09
              d1c1 0035  ld   $35
              d1c2 003f  ld   $3f
              d1c3 00c1  ld   $c1
              d1c4 0059  ld   $59
              d1c5 0000  ld   $00
              d1c6 00ff  ld   $ff
              d1c7 0059  ld   $59
              d1c8 0001  ld   $01
              d1c9 00ff  ld   $ff
              d1ca 0026  ld   $26
              d1cb 00c6  ld   $c6
              d1cc 0009  ld   $09
              d1cd 0035  ld   $35
              d1ce 0072  ld   $72
              d1cf 00ca  ld   $ca
              d1d0 0059  ld   $59
              d1d1 0000  ld   $00
              d1d2 00ff  ld   $ff
              d1d3 0059  ld   $59
              d1d4 0001  ld   $01
              d1d5 00ff  ld   $ff
              d1d6 0026  ld   $26
              d1d7 00cf  ld   $cf
              d1d8 0009  ld   $09
              d1d9 0035  ld   $35
              d1da 0056  ld   $56
              d1db 00d3  ld   $d3
              d1dc 0059  ld   $59
              d1dd 0000  ld   $00
              d1de 00ff  ld   $ff
              d1df 0059  ld   $59
              d1e0 0001  ld   $01
              d1e1 00ff  ld   $ff
              d1e2 0026  ld   $26
              d1e3 00d8  ld   $d8
              d1e4 0009  ld   $09
              d1e5 0035  ld   $35
              d1e6 0053  ld   $53
              d1e7 00dc  ld   $dc
              d1e8 0059  ld   $59
              d1e9 0000  ld   $00
              d1ea 00ff  ld   $ff
              d1eb 0059  ld   $59
              d1ec 0001  ld   $01
              d1ed 00ff  ld   $ff
              d1ee 0026  ld   $26
              d1ef 00e1  ld   $e1
              d1f0 0009  ld   $09
              d1f1 0035  ld   $35
              d1f2 0050  ld   $50
              d1f3 00e5  ld   $e5
              d1f4 0059  ld   $59
              d1f5 0000  ld   $00
              d1f6 00ff  ld   $ff
              d1f7 0059  ld   $59
              d1f8 0001  ld   $01
              d1f9 00ff  ld   $ff
              d1fa 0026  ld   $26
              d1fb fe00  bra  ac          ;+-----------------------------------+
              d1fc fcfd  bra  $d1fd       ;|                                   |
              d1fd 1418  ld   $18,y       ;| Trampoline for page $d100 lookups |
              d1fe e006  jmp  y,$06       ;|                                   |
              d1ff c218  st   [$18]       ;+-----------------------------------+
              d200 00ea  ld   $ea
              d201 0009  ld   $09
              d202 0035  ld   $35
              d203 004d  ld   $4d
              d204 00ee  ld   $ee
              d205 0059  ld   $59
              d206 0000  ld   $00
              d207 00ff  ld   $ff
              d208 0059  ld   $59
              d209 0001  ld   $01
              d20a 00ff  ld   $ff
              d20b 0026  ld   $26
              d20c 00f3  ld   $f3
              d20d 000a  ld   $0a
              d20e 0011  ld   $11
              d20f 0000  ld   $00
              d210 0006  ld   $06
              d211 002b  ld   $2b
              d212 0022  ld   $22
              d213 0021  ld   $21
              d214 0098  ld   $98
              d215 00b4  ld   $b4
              d216 00f6  ld   $f6
              d217 00ff  ld   $ff
              d218 0000  ld   $00
              d219 0000  ld   $00         ;End of Apps/Horizon/Horizon_at67_v1.gt1, size 1248
                                          ;+-----------------------------------+
                                          ;| gbas/browser/Browser_SDCard_ROMvX0.gt1 |
                                          ;+-----------------------------------+
              d21a dc45  st   $45,[y,x++] ;'E'
              d21b dc67  st   $67,[y,x++] ;'g'
              d21c dc67  st   $67,[y,x++] ;'g'
              d21d dc00  st   $00,[y,x++] ;'\x00'
              d21e dc00  st   $00,[y,x++] ;'\x00'
              d21f dc00  st   $00,[y,x++] ;'\x00'
              d220 dc00  st   $00,[y,x++] ;'\x00'
              d221 dc00  st   $00,[y,x++] ;'\x00'
              d222 003a  ld   $3a
              d223 c218  st   [$18]
              d224 00cd  ld   $cd
              d225 14fa  ld   $fa,y
              d226 e020  jmp  y,$20
              d227 c219  st   [$19]
SDCard:       d228 0000  ld   $00
              d229 007e  ld   $7e
              d22a 0002  ld   $02
              d22b 0001  ld   $01
              d22c 0001  ld   $01
              d22d 0002  ld   $02
              d22e 0000  ld   $00
              d22f 00fa  ld   $fa
              d230 0059  ld   $59
              d231 0080  ld   $80
              d232 002b  ld   $2b
              d233 0082  ld   $82
              d234 0011  ld   $11
              d235 00a5  ld   $a5
              d236 0065  ld   $65
              d237 00cf  ld   $cf
              d238 0018  ld   $18
              d239 0011  ld   $11
              d23a 0020  ld   $20
              d23b 000f  ld   $0f
              d23c 002b  ld   $2b
              d23d 00a2  ld   $a2
              d23e 00c7  ld   $c7
              d23f 0003  ld   $03
              d240 0069  ld   $69
              d241 0021  ld   $21
              d242 004d  ld   $4d
              d243 0002  ld   $02
              d244 00aa  ld   $aa
              d245 004d  ld   $4d
              d246 0000  ld   $00
              d247 00d6  ld   $d6
              d248 004d  ld   $4d
              d249 0000  ld   $00
              d24a 00a6  ld   $a6
              d24b 0016  ld   $16
              d24c 0000  ld   $00
              d24d 002d  ld   $2d
              d24e 004d  ld   $4d
              d24f 0000  ld   $00
              d250 002e  ld   $2e
              d251 0085  ld   $85
              d252 00e0  ld   $e0
              d253 0061  ld   $61
              d254 0011  ld   $11
              d255 00fe  ld   $fe
              d256 007c  ld   $7c
              d257 002b  ld   $2b
              d258 0084  ld   $84
              d259 0011  ld   $11
              d25a 00a0  ld   $a0
              d25b 007d  ld   $7d
              d25c 0085  ld   $85
              d25d 00a0  ld   $a0
              d25e 0062  ld   $62
              d25f 0011  ld   $11
              d260 00fe  ld   $fe
              d261 007c  ld   $7c
              d262 002b  ld   $2b
              d263 0084  ld   $84
              d264 0011  ld   $11
              d265 00a0  ld   $a0
              d266 007b  ld   $7b
              d267 0085  ld   $85
              d268 00a0  ld   $a0
              d269 0062  ld   $62
              d26a 0011  ld   $11
              d26b 00fe  ld   $fe
              d26c 007c  ld   $7c
              d26d 002b  ld   $2b
              d26e 0084  ld   $84
              d26f 0011  ld   $11
              d270 00a0  ld   $a0
              d271 007a  ld   $7a
              d272 0085  ld   $85
              d273 00a0  ld   $a0
              d274 0062  ld   $62
              d275 0085  ld   $85
              d276 00be  ld   $be
              d277 0009  ld   $09
              d278 0085  ld   $85
              d279 00db  ld   $db
              d27a 0008  ld   $08
              d27b 0085  ld   $85
              d27c 00ad  ld   $ad
              d27d 0009  ld   $09
              d27e 0085  ld   $85
              d27f 00a8  ld   $a8
              d280 0004  ld   $04
              d281 0085  ld   $85
              d282 00ec  ld   $ec
              d283 0008  ld   $08
              d284 0085  ld   $85
              d285 0096  ld   $96
              d286 0002  ld   $02
              d287 0085  ld   $85
              d288 00e1  ld   $e1
              d289 0002  ld   $02
              d28a 0021  ld   $21
              d28b 003e  ld   $3e
              d28c 00bb  ld   $bb
              d28d 004f  ld   $4f
              d28e 0002  ld   $02
              d28f 0085  ld   $85
              d290 00fa  ld   $fa
              d291 0008  ld   $08
              d292 0085  ld   $85
              d293 0032  ld   $32
              d294 0003  ld   $03
              d295 004d  ld   $4d
              d296 0000  ld   $00
              d297 0048  ld   $48
              d298 004d  ld   $4d
              d299 00ff  ld   $ff
              d29a 004a  ld   $4a
              d29b 002f  ld   $2f
              d29c 00d6  ld   $d6
              d29d 006e  ld   $6e
              d29e 0085  ld   $85
              d29f 0068  ld   $68
              d2a0 0005  ld   $05
              d2a1 0021  ld   $21
              d2a2 0044  ld   $44
              d2a3 00bb  ld   $bb
              d2a4 0076  ld   $76
              d2a5 0002  ld   $02
              d2a6 0090  ld   $90
              d2a7 0043  ld   $43
              d2a8 0093  ld   $93
              d2a9 0048  ld   $48
              d2aa 0090  ld   $90
              d2ab 0069  ld   $69
              d2ac 00b4  ld   $b4
              d2ad 0080  ld   $80
              d2ae 0075  ld   $75
              d2af 0011  ld   $11
              d2b0 0006  ld   $06
              d2b1 000b  ld   $0b
              d2b2 002b  ld   $2b
              d2b3 0022  ld   $22
              d2b4 0032  ld   $32
              d2b5 0024  ld   $24
              d2b6 0030  ld   $30
              d2b7 004d  ld   $4d
              d2b8 0001  ld   $01
              d2b9 0026  ld   $26
              d2ba 001a  ld   $1a
              d2bb 0032  ld   $32
              d2bc 00b1  ld   $b1
              d2bd 0041  ld   $41
              d2be 002b  ld   $2b
              d2bf 0027  ld   $27
              d2c0 00b4  ld   $b4
              d2c1 00e6  ld   $e6
              d2c2 002b  ld   $2b
              d2c3 0034  ld   $34
              d2c4 0063  ld   $63
              d2c5 00ff  ld   $ff
              d2c6 0075  ld   $75
              d2c7 0032  ld   $32
              d2c8 0022  ld   $22
              d2c9 006e  ld   $6e
              d2ca 0011  ld   $11
              d2cb 00ae  ld   $ae
              d2cc 007c  ld   $7c
              d2cd 002b  ld   $2b
              d2ce 0028  ld   $28
              d2cf 0032  ld   $32
              d2d0 0024  ld   $24
              d2d1 0028  ld   $28
              d2d2 0016  ld   $16
              d2d3 00cf  ld   $cf
              d2d4 0027  ld   $27
              d2d5 00b4  ld   $b4
              d2d6 00fe  ld   $fe
              d2d7 005b  ld   $5b
              d2d8 0028  ld   $28
              d2d9 008c  ld   $8c
              d2da 00ff  ld   $ff
              d2db 00bb  ld   $bb
              d2dc 009d  ld   $9d
              d2dd 0002  ld   $02
              d2de 0016  ld   $16
              d2df 00db  ld   $db
              d2e0 0027  ld   $27
              d2e1 00b4  ld   $b4
              d2e2 00fe  ld   $fe
              d2e3 0016  ld   $16
              d2e4 00eb  ld   $eb
              d2e5 0027  ld   $27
              d2e6 00b4  ld   $b4
              d2e7 00fe  ld   $fe
              d2e8 0016  ld   $16
              d2e9 00fb  ld   $fb
              d2ea 0027  ld   $27
              d2eb 00b4  ld   $b4
              d2ec 00fe  ld   $fe
              d2ed 0016  ld   $16
              d2ee 003c  ld   $3c
              d2ef 0028  ld   $28
              d2f0 0016  ld   $16
              d2f1 0002  ld   $02
              d2f2 0027  ld   $27
              d2f3 00b4  ld   $b4
              d2f4 00fe  ld   $fe
              d2f5 001c  ld   $1c
              d2f6 0027  ld   $27
              d2f7 0027  ld   $27
              d2f8 0004  ld   $04
              d2f9 009e  ld   $9e
              d2fa 00c1  ld   $c1
              d2fb fe00  bra  ac          ;+-----------------------------------+
              d2fc fcfd  bra  $d2fd       ;|                                   |
              d2fd 1418  ld   $18,y       ;| Trampoline for page $d200 lookups |
              d2fe e006  jmp  y,$06       ;|                                   |
              d2ff c218  st   [$18]       ;+-----------------------------------+
              d300 0028  ld   $28
              d301 0016  ld   $16
              d302 00b9  ld   $b9
              d303 0027  ld   $27
              d304 00b4  ld   $b4
              d305 00fe  ld   $fe
              d306 0011  ld   $11
              d307 00ae  ld   $ae
              d308 007c  ld   $7c
              d309 00ad  ld   $ad
              d30a 002b  ld   $2b
              d30b 003e  ld   $3e
              d30c 0011  ld   $11
              d30d 00af  ld   $af
              d30e 007c  ld   $7c
              d30f 00ad  ld   $ad
              d310 0082  ld   $82
              d311 003f  ld   $3f
              d312 002b  ld   $2b
              d313 0040  ld   $40
              d314 0063  ld   $63
              d315 00ff  ld   $ff
              d316 0075  ld   $75
              d317 004d  ld   $4d
              d318 0002  ld   $02
              d319 004c  ld   $4c
              d31a 0021  ld   $21
              d31b 0040  ld   $40
              d31c 00bd  ld   $bd
              d31d 00ea  ld   $ea
              d31e 0002  ld   $02
              d31f 0063  ld   $63
              d320 00ff  ld   $ff
              d321 00a7  ld   $a7
              d322 0064  ld   $64
              d323 0036  ld   $36
              d324 00bd  ld   $bd
              d325 00f2  ld   $f2
              d326 0002  ld   $02
              d327 0063  ld   $63
              d328 00ff  ld   $ff
              d329 004d  ld   $4d
              d32a 0000  ld   $00
              d32b 004e  ld   $4e
              d32c 0085  ld   $85
              d32d 0000  ld   $00
              d32e 0003  ld   $03
              d32f 0003  ld   $03
              d330 0000  ld   $00
              d331 00fa  ld   $fa
              d332 0053  ld   $53
              d333 004c  ld   $4c
              d334 00ae  ld   $ae
              d335 007c  ld   $7c
              d336 002b  ld   $2b
              d337 0050  ld   $50
              d338 0032  ld   $32
              d339 0096  ld   $96
              d33a 0036  ld   $36
              d33b 0032  ld   $32
              d33c 0098  ld   $98
              d33d 004e  ld   $4e
              d33e 0011  ld   $11
              d33f 0038  ld   $38
              d340 0006  ld   $06
              d341 0085  ld   $85
              d342 00a1  ld   $a1
              d343 0079  ld   $79
              d344 0069  ld   $69
              d345 0050  ld   $50
              d346 0093  ld   $93
              d347 004c  ld   $4c
              d348 0093  ld   $93
              d349 004e  ld   $4e
              d34a 0021  ld   $21
              d34b 0050  ld   $50
              d34c 00bd  ld   $bd
              d34d 00fe  ld   $fe
              d34e 0003  ld   $03
              d34f 0093  ld   $93
              d350 0036  ld   $36
              d351 00a7  ld   $a7
              d352 0064  ld   $64
              d353 0036  ld   $36
              d354 00bd  ld   $bd
              d355 0025  ld   $25
              d356 0003  ld   $03
              d357 0063  ld   $63
              d358 00ff  ld   $ff
              d359 0021  ld   $21
              d35a 004c  ld   $4c
              d35b 00e6  ld   $e6
              d35c 0002  ld   $02
              d35d 00fc  ld   $fc
              d35e 0040  ld   $40
              d35f 00bd  ld   $bd
              d360 00f2  ld   $f2
              d361 0002  ld   $02
              d362 0063  ld   $63
              d363 00ff  ld   $ff
              d364 0075  ld   $75
              d365 0044  ld   $44
              d366 0014  ld   $14
              d367 00e8  ld   $e8
              d368 0036  ld   $36
              d369 0032  ld   $32
              d36a 0082  ld   $82
              d36b 0038  ld   $38
              d36c 0021  ld   $21
              d36d 00e8  ld   $e8
              d36e 0085  ld   $85
              d36f 00b9  ld   $b9
              d370 0062  ld   $62
              d371 002b  ld   $2b
              d372 0082  ld   $82
              d373 0059  ld   $59
              d374 0000  ld   $00
              d375 0085  ld   $85
              d376 00aa  ld   $aa
              d377 0062  ld   $62
              d378 002b  ld   $2b
              d379 0052  ld   $52
              d37a 0042  ld   $42
              d37b 0013  ld   $13
              d37c 00e8  ld   $e8
              d37d 0038  ld   $38
              d37e 0044  ld   $44
              d37f 0001  ld   $01
              d380 00ea  ld   $ea
              d381 0036  ld   $36
              d382 0032  ld   $32
              d383 0082  ld   $82
              d384 00e8  ld   $e8
              d385 0021  ld   $21
              d386 00ea  ld   $ea
              d387 0085  ld   $85
              d388 00b9  ld   $b9
              d389 0062  ld   $62
              d38a 002b  ld   $2b
              d38b 0054  ld   $54
              d38c 0032  ld   $32
              d38d 0056  ld   $56
              d38e 0052  ld   $52
              d38f 0032  ld   $32
              d390 00d8  ld   $d8
              d391 0054  ld   $54
              d392 0032  ld   $32
              d393 0096  ld   $96
              d394 0056  ld   $56
              d395 004d  ld   $4d
              d396 0000  ld   $00
              d397 0098  ld   $98
              d398 0011  ld   $11
              d399 0038  ld   $38
              d39a 0006  ld   $06
              d39b 0085  ld   $85
              d39c 00a1  ld   $a1
              d39d 0079  ld   $79
              d39e 00e3  ld   $e3
              d39f 0001  ld   $01
              d3a0 002b  ld   $2b
              d3a1 0058  ld   $58
              d3a2 005b  ld   $5b
              d3a3 0058  ld   $58
              d3a4 002b  ld   $2b
              d3a5 005a  ld   $5a
              d3a6 0021  ld   $21
              d3a7 0058  ld   $58
              d3a8 00e6  ld   $e6
              d3a9 0001  ld   $01
              d3aa 00ad  ld   $ad
              d3ab 002b  ld   $2b
              d3ac 005c  ld   $5c
              d3ad 0021  ld   $21
              d3ae 0056  ld   $56
              d3af 00b8  ld   $b8
              d3b0 0038  ld   $38
              d3b1 00fc  ld   $fc
              d3b2 003a  ld   $3a
              d3b3 00bd  ld   $bd
              d3b4 009b  ld   $9b
              d3b5 0003  ld   $03
              d3b6 00a7  ld   $a7
              d3b7 0001  ld   $01
              d3b8 005c  ld   $5c
              d3b9 00bd  ld   $bd
              d3ba 0090  ld   $90
              d3bb 0003  ld   $03
              d3bc 0011  ld   $11
              d3bd 003f  ld   $3f
              d3be 0020  ld   $20
              d3bf 002b  ld   $2b
              d3c0 00a2  ld   $a2
              d3c1 0085  ld   $85
              d3c2 0097  ld   $97
              d3c3 0003  ld   $03
              d3c4 0011  ld   $11
              d3c5 002a  ld   $2a
              d3c6 0020  ld   $20
              d3c7 002b  ld   $2b
              d3c8 00a2  ld   $a2
              d3c9 0032  ld   $32
              d3ca 0042  ld   $42
              d3cb 0058  ld   $58
              d3cc 0085  ld   $85
              d3cd 00b0  ld   $b0
              d3ce 0003  ld   $03
              d3cf 00a7  ld   $a7
              d3d0 0001  ld   $01
              d3d1 005c  ld   $5c
              d3d2 00bd  ld   $bd
              d3d3 00a9  ld   $a9
              d3d4 0003  ld   $03
              d3d5 0011  ld   $11
              d3d6 0020  ld   $20
              d3d7 003f  ld   $3f
              d3d8 002b  ld   $2b
              d3d9 00a2  ld   $a2
              d3da 0085  ld   $85
              d3db 00b0  ld   $b0
              d3dc 0003  ld   $03
              d3dd 0011  ld   $11
              d3de 0020  ld   $20
              d3df 002a  ld   $2a
              d3e0 002b  ld   $2b
              d3e1 00a2  ld   $a2
              d3e2 00ab  ld   $ab
              d3e3 005e  ld   $5e
              d3e4 0038  ld   $38
              d3e5 0056  ld   $56
              d3e6 0021  ld   $21
              d3e7 005e  ld   $5e
              d3e8 00bf  ld   $bf
              d3e9 00cf  ld   $cf
              d3ea 0003  ld   $03
              d3eb 001a  ld   $1a
              d3ec 005e  ld   $5e
              d3ed 00b1  ld   $b1
              d3ee 003d  ld   $3d
              d3ef 005e  ld   $5e
              d3f0 00a5  ld   $a5
              d3f1 0016  ld   $16
              d3f2 0002  ld   $02
              d3f3 00a4  ld   $a4
              d3f4 0085  ld   $85
              d3f5 00dc  ld   $dc
              d3f6 0063  ld   $63
              d3f7 0021  ld   $21
              d3f8 0058  ld   $58
              d3f9 0085  ld   $85
              d3fa 00eb  ld   $eb
              d3fb fe00  bra  ac          ;+-----------------------------------+
              d3fc fcfd  bra  $d3fd       ;|                                   |
              d3fd 1418  ld   $18,y       ;| Trampoline for page $d300 lookups |
              d3fe e006  jmp  y,$06       ;|                                   |
              d3ff c218  st   [$18]       ;+-----------------------------------+
              d400 0062  ld   $62
              d401 0059  ld   $59
              d402 000c  ld   $0c
              d403 00b8  ld   $b8
              d404 005a  ld   $5a
              d405 0085  ld   $85
              d406 00d8  ld   $d8
              d407 0062  ld   $62
              d408 0095  ld   $95
              d409 0056  ld   $56
              d40a 00b8  ld   $b8
              d40b 00d8  ld   $d8
              d40c 00c3  ld   $c3
              d40d 005e  ld   $5e
              d40e 0003  ld   $03
              d40f 0063  ld   $63
              d410 00ff  ld   $ff
              d411 0075  ld   $75
              d412 0044  ld   $44
              d413 0014  ld   $14
              d414 00e8  ld   $e8
              d415 0036  ld   $36
              d416 0032  ld   $32
              d417 0082  ld   $82
              d418 0038  ld   $38
              d419 0021  ld   $21
              d41a 00e8  ld   $e8
              d41b 0085  ld   $85
              d41c 00b9  ld   $b9
              d41d 0062  ld   $62
              d41e 002b  ld   $2b
              d41f 0082  ld   $82
              d420 0059  ld   $59
              d421 0000  ld   $00
              d422 0085  ld   $85
              d423 00aa  ld   $aa
              d424 0062  ld   $62
              d425 002b  ld   $2b
              d426 0052  ld   $52
              d427 00a9  ld   $a9
              d428 0060  ld   $60
              d429 003c  ld   $3c
              d42a 0052  ld   $52
              d42b 0032  ld   $32
              d42c 0096  ld   $96
              d42d 0060  ld   $60
              d42e 0085  ld   $85
              d42f 0000  ld   $00
              d430 0004  ld   $04
              d431 0004  ld   $04
              d432 0000  ld   $00
              d433 00f9  ld   $f9
              d434 004d  ld   $4d
              d435 0000  ld   $00
              d436 0098  ld   $98
              d437 0011  ld   $11
              d438 0038  ld   $38
              d439 0006  ld   $06
              d43a 0085  ld   $85
              d43b 00a1  ld   $a1
              d43c 0079  ld   $79
              d43d 00e3  ld   $e3
              d43e 0001  ld   $01
              d43f 002b  ld   $2b
              d440 0062  ld   $62
              d441 005b  ld   $5b
              d442 0062  ld   $62
              d443 002b  ld   $2b
              d444 0064  ld   $64
              d445 0021  ld   $21
              d446 0062  ld   $62
              d447 00e6  ld   $e6
              d448 0001  ld   $01
              d449 00ad  ld   $ad
              d44a 002b  ld   $2b
              d44b 005c  ld   $5c
              d44c 00a7  ld   $a7
              d44d 0001  ld   $01
              d44e 005c  ld   $5c
              d44f 00bd  ld   $bd
              d450 0024  ld   $24
              d451 0004  ld   $04
              d452 0011  ld   $11
              d453 0020  ld   $20
              d454 003f  ld   $3f
              d455 002b  ld   $2b
              d456 00a2  ld   $a2
              d457 0085  ld   $85
              d458 002b  ld   $2b
              d459 0004  ld   $04
              d45a 0011  ld   $11
              d45b 0020  ld   $20
              d45c 002a  ld   $2a
              d45d 002b  ld   $2b
              d45e 00a2  ld   $a2
              d45f 00ab  ld   $ab
              d460 0066  ld   $66
              d461 0052  ld   $52
              d462 0060  ld   $60
              d463 001a  ld   $1a
              d464 0066  ld   $66
              d465 00b1  ld   $b1
              d466 003d  ld   $3d
              d467 005e  ld   $5e
              d468 00a5  ld   $a5
              d469 0016  ld   $16
              d46a 0002  ld   $02
              d46b 00a4  ld   $a4
              d46c 0085  ld   $85
              d46d 00dc  ld   $dc
              d46e 0063  ld   $63
              d46f 0021  ld   $21
              d470 0062  ld   $62
              d471 0085  ld   $85
              d472 00eb  ld   $eb
              d473 0062  ld   $62
              d474 0059  ld   $59
              d475 000c  ld   $0c
              d476 00b8  ld   $b8
              d477 0064  ld   $64
              d478 0085  ld   $85
              d479 00d8  ld   $d8
              d47a 0062  ld   $62
              d47b 0032  ld   $32
              d47c 003c  ld   $3c
              d47d 003a  ld   $3a
              d47e 00a9  ld   $a9
              d47f 0068  ld   $68
              d480 003a  ld   $3a
              d481 0052  ld   $52
              d482 0032  ld   $32
              d483 0096  ld   $96
              d484 0068  ld   $68
              d485 004d  ld   $4d
              d486 0000  ld   $00
              d487 0098  ld   $98
              d488 0011  ld   $11
              d489 0038  ld   $38
              d48a 0006  ld   $06
              d48b 0085  ld   $85
              d48c 00a1  ld   $a1
              d48d 0079  ld   $79
              d48e 00e3  ld   $e3
              d48f 0001  ld   $01
              d490 002b  ld   $2b
              d491 006a  ld   $6a
              d492 005b  ld   $5b
              d493 006a  ld   $6a
              d494 002b  ld   $2b
              d495 006c  ld   $6c
              d496 0021  ld   $21
              d497 006a  ld   $6a
              d498 00e6  ld   $e6
              d499 0001  ld   $01
              d49a 00ad  ld   $ad
              d49b 002b  ld   $2b
              d49c 005c  ld   $5c
              d49d 00a7  ld   $a7
              d49e 0001  ld   $01
              d49f 005c  ld   $5c
              d4a0 00bd  ld   $bd
              d4a1 0075  ld   $75
              d4a2 0004  ld   $04
              d4a3 0011  ld   $11
              d4a4 003f  ld   $3f
              d4a5 0020  ld   $20
              d4a6 002b  ld   $2b
              d4a7 00a2  ld   $a2
              d4a8 0085  ld   $85
              d4a9 007c  ld   $7c
              d4aa 0004  ld   $04
              d4ab 0011  ld   $11
              d4ac 002a  ld   $2a
              d4ad 0020  ld   $20
              d4ae 002b  ld   $2b
              d4af 00a2  ld   $a2
              d4b0 00ab  ld   $ab
              d4b1 0066  ld   $66
              d4b2 0052  ld   $52
              d4b3 0068  ld   $68
              d4b4 001a  ld   $1a
              d4b5 0066  ld   $66
              d4b6 00b1  ld   $b1
              d4b7 003d  ld   $3d
              d4b8 005e  ld   $5e
              d4b9 00a5  ld   $a5
              d4ba 0016  ld   $16
              d4bb 0002  ld   $02
              d4bc 00a4  ld   $a4
              d4bd 0085  ld   $85
              d4be 00dc  ld   $dc
              d4bf 0063  ld   $63
              d4c0 0021  ld   $21
              d4c1 006a  ld   $6a
              d4c2 0085  ld   $85
              d4c3 00eb  ld   $eb
              d4c4 0062  ld   $62
              d4c5 0059  ld   $59
              d4c6 000c  ld   $0c
              d4c7 00b8  ld   $b8
              d4c8 006c  ld   $6c
              d4c9 0085  ld   $85
              d4ca 00d8  ld   $d8
              d4cb 0062  ld   $62
              d4cc 0032  ld   $32
              d4cd 0042  ld   $42
              d4ce 006a  ld   $6a
              d4cf 0063  ld   $63
              d4d0 00ff  ld   $ff
              d4d1 0075  ld   $75
              d4d2 004d  ld   $4d
              d4d3 0000  ld   $00
              d4d4 006e  ld   $6e
              d4d5 0011  ld   $11
              d4d6 0000  ld   $00
              d4d7 001a  ld   $1a
              d4d8 002b  ld   $2b
              d4d9 006e  ld   $6e
              d4da 0063  ld   $63
              d4db 00ff  ld   $ff
              d4dc 0075  ld   $75
              d4dd 0011  ld   $11
              d4de 00ef  ld   $ef
              d4df 007c  ld   $7c
              d4e0 0025  ld   $25
              d4e1 0003  ld   $03
              d4e2 0011  ld   $11
              d4e3 00a0  ld   $a0
              d4e4 007a  ld   $7a
              d4e5 00ad  ld   $ad
              d4e6 002b  ld   $2b
              d4e7 0070  ld   $70
              d4e8 0059  ld   $59
              d4e9 0001  ld   $01
              d4ea 0099  ld   $99
              d4eb 0070  ld   $70
              d4ec 00e3  ld   $e3
              d4ed 0001  ld   $01
              d4ee 002b  ld   $2b
              d4ef 0032  ld   $32
              d4f0 0021  ld   $21
              d4f1 0070  ld   $70
              d4f2 00c3  ld   $c3
              d4f3 00e1  ld   $e1
              d4f4 0004  ld   $04
              d4f5 0042  ld   $42
              d4f6 0001  ld   $01
              d4f7 00e8  ld   $e8
              d4f8 0070  ld   $70
              d4f9 004d  ld   $4d
              d4fa 0001  ld   $01
              d4fb fe00  bra  ac          ;+-----------------------------------+
              d4fc fcfd  bra  $d4fd       ;|                                   |
              d4fd 1418  ld   $18,y       ;| Trampoline for page $d400 lookups |
              d4fe e006  jmp  y,$06       ;|                                   |
              d4ff c218  st   [$18]       ;+-----------------------------------+
              d500 0056  ld   $56
              d501 0042  ld   $42
              d502 0001  ld   $01
              d503 00d8  ld   $d8
              d504 0070  ld   $70
              d505 0011  ld   $11
              d506 00ef  ld   $ef
              d507 007c  ld   $7c
              d508 0099  ld   $99
              d509 0056  ld   $56
              d50a 002b  ld   $2b
              d50b 00e8  ld   $e8
              d50c 0053  ld   $53
              d50d 0056  ld   $56
              d50e 00a0  ld   $a0
              d50f 007a  ld   $7a
              d510 00f0  ld   $f0
              d511 00e8  ld   $e8
              d512 0095  ld   $95
              d513 0056  ld   $56
              d514 00b8  ld   $b8
              d515 00d8  ld   $d8
              d516 00c3  ld   $c3
              d517 00ca  ld   $ca
              d518 0004  ld   $04
              d519 0085  ld   $85
              d51a 00e8  ld   $e8
              d51b 0004  ld   $04
              d51c 0011  ld   $11
              d51d 00f0  ld   $f0
              d51e 007c  ld   $7c
              d51f 0025  ld   $25
              d520 0000  ld   $00
              d521 0085  ld   $85
              d522 007e  ld   $7e
              d523 0002  ld   $02
              d524 0085  ld   $85
              d525 00c2  ld   $c2
              d526 0008  ld   $08
              d527 0011  ld   $11
              d528 00fe  ld   $fe
              d529 007c  ld   $7c
              d52a 002b  ld   $2b
              d52b 0084  ld   $84
              d52c 0011  ld   $11
              d52d 00a0  ld   $a0
              d52e 007a  ld   $7a
              d52f 0085  ld   $85
              d530 0000  ld   $00
              d531 0005  ld   $05
              d532 0005  ld   $05
              d533 0000  ld   $00
              d534 00ff  ld   $ff
              d535 0085  ld   $85
              d536 00a0  ld   $a0
              d537 0062  ld   $62
              d538 0063  ld   $63
              d539 00ff  ld   $ff
              d53a 0075  ld   $75
              d53b 0085  ld   $85
              d53c 00db  ld   $db
              d53d 0008  ld   $08
              d53e 0011  ld   $11
              d53f 00ef  ld   $ef
              d540 007c  ld   $7c
              d541 0025  ld   $25
              d542 0002  ld   $02
              d543 0032  ld   $32
              d544 0084  ld   $84
              d545 0042  ld   $42
              d546 0011  ld   $11
              d547 00a0  ld   $a0
              d548 007d  ld   $7d
              d549 0085  ld   $85
              d54a 00a0  ld   $a0
              d54b 0062  ld   $62
              d54c 0011  ld   $11
              d54d 00a0  ld   $a0
              d54e 007d  ld   $7d
              d54f 00ad  ld   $ad
              d550 002b  ld   $2b
              d551 0070  ld   $70
              d552 0042  ld   $42
              d553 0001  ld   $01
              d554 00e8  ld   $e8
              d555 0070  ld   $70
              d556 004d  ld   $4d
              d557 0001  ld   $01
              d558 0056  ld   $56
              d559 0042  ld   $42
              d55a 0001  ld   $01
              d55b 00d8  ld   $d8
              d55c 0070  ld   $70
              d55d 0011  ld   $11
              d55e 00ef  ld   $ef
              d55f 007c  ld   $7c
              d560 0099  ld   $99
              d561 0056  ld   $56
              d562 002b  ld   $2b
              d563 00e8  ld   $e8
              d564 0053  ld   $53
              d565 0056  ld   $56
              d566 00a0  ld   $a0
              d567 007d  ld   $7d
              d568 00f0  ld   $f0
              d569 00e8  ld   $e8
              d56a 0095  ld   $95
              d56b 0056  ld   $56
              d56c 00b8  ld   $b8
              d56d 00d8  ld   $d8
              d56e 00c3  ld   $c3
              d56f 0026  ld   $26
              d570 0005  ld   $05
              d571 0011  ld   $11
              d572 0000  ld   $00
              d573 00ff  ld   $ff
              d574 002b  ld   $2b
              d575 00a2  ld   $a2
              d576 0085  ld   $85
              d577 00c2  ld   $c2
              d578 0063  ld   $63
              d579 0085  ld   $85
              d57a 00a2  ld   $a2
              d57b 0066  ld   $66
              d57c 00c7  ld   $c7
              d57d 00ef  ld   $ef
              d57e 0066  ld   $66
              d57f 00aa  ld   $aa
              d580 0059  ld   $59
              d581 0001  ld   $01
              d582 0099  ld   $99
              d583 0070  ld   $70
              d584 00e3  ld   $e3
              d585 0001  ld   $01
              d586 002b  ld   $2b
              d587 0032  ld   $32
              d588 0085  ld   $85
              d589 007e  ld   $7e
              d58a 0002  ld   $02
              d58b 0016  ld   $16
              d58c 0000  ld   $00
              d58d 0004  ld   $04
              d58e 0016  ld   $16
              d58f 0000  ld   $00
              d590 001c  ld   $1c
              d591 0011  ld   $11
              d592 0083  ld   $83
              d593 00db  ld   $db
              d594 002b  ld   $2b
              d595 0024  ld   $24
              d596 0059  ld   $59
              d597 00a8  ld   $a8
              d598 0085  ld   $85
              d599 00d9  ld   $d9
              d59a 0061  ld   $61
              d59b 0063  ld   $63
              d59c 00ff  ld   $ff
              d59d 0075  ld   $75
              d59e 001a  ld   $1a
              d59f 000f  ld   $0f
              d5a0 002b  ld   $2b
              d5a1 0072  ld   $72
              d5a2 0021  ld   $21
              d5a3 0072  ld   $72
              d5a4 00fc  ld   $fc
              d5a5 004a  ld   $4a
              d5a6 00bb  ld   $bb
              d5a7 0081  ld   $81
              d5a8 0005  ld   $05
              d5a9 004d  ld   $4d
              d5aa 0000  ld   $00
              d5ab 0048  ld   $48
              d5ac 0032  ld   $32
              d5ad 004a  ld   $4a
              d5ae 0072  ld   $72
              d5af 0032  ld   $32
              d5b0 0082  ld   $82
              d5b1 0072  ld   $72
              d5b2 004d  ld   $4d
              d5b3 0000  ld   $00
              d5b4 0084  ld   $84
              d5b5 0085  ld   $85
              d5b6 00ce  ld   $ce
              d5b7 0065  ld   $65
              d5b8 0021  ld   $21
              d5b9 0048  ld   $48
              d5ba 00e6  ld   $e6
              d5bb 0019  ld   $19
              d5bc 00c3  ld   $c3
              d5bd 009e  ld   $9e
              d5be 0005  ld   $05
              d5bf 0021  ld   $21
              d5c0 0048  ld   $48
              d5c1 002f  ld   $2f
              d5c2 0018  ld   $18
              d5c3 0073  ld   $73
              d5c4 002f  ld   $2f
              d5c5 0018  ld   $18
              d5c6 0073  ld   $73
              d5c7 0082  ld   $82
              d5c8 0001  ld   $01
              d5c9 00bb  ld   $bb
              d5ca 009e  ld   $9e
              d5cb 0005  ld   $05
              d5cc 0032  ld   $32
              d5cd 0082  ld   $82
              d5ce 0072  ld   $72
              d5cf 004d  ld   $4d
              d5d0 0000  ld   $00
              d5d1 0084  ld   $84
              d5d2 0085  ld   $85
              d5d3 00ce  ld   $ce
              d5d4 0065  ld   $65
              d5d5 0063  ld   $63
              d5d6 00ff  ld   $ff
              d5d7 0075  ld   $75
              d5d8 0085  ld   $85
              d5d9 001a  ld   $1a
              d5da 0006  ld   $06
              d5db 0063  ld   $63
              d5dc 00ff  ld   $ff
              d5dd 0075  ld   $75
              d5de 0085  ld   $85
              d5df 001a  ld   $1a
              d5e0 0006  ld   $06
              d5e1 0063  ld   $63
              d5e2 00ff  ld   $ff
              d5e3 0075  ld   $75
              d5e4 0042  ld   $42
              d5e5 0014  ld   $14
              d5e6 0038  ld   $38
              d5e7 0038  ld   $38
              d5e8 0044  ld   $44
              d5e9 0014  ld   $14
              d5ea 00e8  ld   $e8
              d5eb 0036  ld   $36
              d5ec 0032  ld   $32
              d5ed 0082  ld   $82
              d5ee 0038  ld   $38
              d5ef 0021  ld   $21
              d5f0 00e8  ld   $e8
              d5f1 0085  ld   $85
              d5f2 00b9  ld   $b9
              d5f3 0062  ld   $62
              d5f4 002b  ld   $2b
              d5f5 0082  ld   $82
              d5f6 0059  ld   $59
              d5f7 0000  ld   $00
              d5f8 0085  ld   $85
              d5f9 00aa  ld   $aa
              d5fa 0062  ld   $62
              d5fb fe00  bra  ac          ;+-----------------------------------+
              d5fc fcfd  bra  $d5fd       ;|                                   |
              d5fd 1418  ld   $18,y       ;| Trampoline for page $d500 lookups |
              d5fe e006  jmp  y,$06       ;|                                   |
              d5ff c218  st   [$18]       ;+-----------------------------------+
              d600 002b  ld   $2b
              d601 0038  ld   $38
              d602 0085  ld   $85
              d603 0032  ld   $32
              d604 0003  ld   $03
              d605 0063  ld   $63
              d606 00ff  ld   $ff
              d607 0075  ld   $75
              d608 0044  ld   $44
              d609 0014  ld   $14
              d60a 0038  ld   $38
              d60b 0038  ld   $38
              d60c 0032  ld   $32
              d60d 0082  ld   $82
              d60e 0038  ld   $38
              d60f 0059  ld   $59
              d610 0000  ld   $00
              d611 0085  ld   $85
              d612 00aa  ld   $aa
              d613 0062  ld   $62
              d614 002b  ld   $2b
              d615 0038  ld   $38
              d616 0085  ld   $85
              d617 0032  ld   $32
              d618 0003  ld   $03
              d619 0063  ld   $63
              d61a 00ff  ld   $ff
              d61b 0075  ld   $75
              d61c 0093  ld   $93
              d61d 003a  ld   $3a
              d61e 0044  ld   $44
              d61f 0001  ld   $01
              d620 0082  ld   $82
              d621 0036  ld   $36
              d622 0059  ld   $59
              d623 0013  ld   $13
              d624 0085  ld   $85
              d625 00b9  ld   $b9
              d626 0062  ld   $62
              d627 002b  ld   $2b
              d628 00ea  ld   $ea
              d629 0021  ld   $21
              d62a 003a  ld   $3a
              d62b 00b8  ld   $b8
              d62c 00ea  ld   $ea
              d62d 00c3  ld   $c3
              d62e 00f7  ld   $f7
              d62f 0005  ld   $05
              d630 004d  ld   $4d
              d631 0000  ld   $00
              d632 003a  ld   $3a
              d633 0085  ld   $85
              d634 00da  ld   $da
              d635 0003  ld   $03
              d636 0085  ld   $85
              d637 0000  ld   $00
              d638 0006  ld   $06
              d639 0006  ld   $06
              d63a 0000  ld   $00
              d63b 0037  ld   $37
              d63c 0063  ld   $63
              d63d 00ff  ld   $ff
              d63e 0075  ld   $75
              d63f 00dd  ld   $dd
              d640 003a  ld   $3a
              d641 0021  ld   $21
              d642 003a  ld   $3a
              d643 00c5  ld   $c5
              d644 0013  ld   $13
              d645 0006  ld   $06
              d646 0044  ld   $44
              d647 0001  ld   $01
              d648 0082  ld   $82
              d649 0036  ld   $36
              d64a 0059  ld   $59
              d64b 0013  ld   $13
              d64c 0085  ld   $85
              d64d 00b9  ld   $b9
              d64e 0062  ld   $62
              d64f 002b  ld   $2b
              d650 003a  ld   $3a
              d651 0085  ld   $85
              d652 00da  ld   $da
              d653 0003  ld   $03
              d654 0063  ld   $63
              d655 00ff  ld   $ff
              d656 0075  ld   $75
              d657 0021  ld   $21
              d658 0042  ld   $42
              d659 00e6  ld   $e6
              d65a 0001  ld   $01
              d65b 00ad  ld   $ad
              d65c 002b  ld   $2b
              d65d 0074  ld   $74
              d65e 00a7  ld   $a7
              d65f 0001  ld   $01
              d660 0074  ld   $74
              d661 00bd  ld   $bd
              d662 002c  ld   $2c
              d663 0006  ld   $06
              d664 004d  ld   $4d
              d665 0000  ld   $00
              d666 0044  ld   $44
              d667 0085  ld   $85
              d668 0005  ld   $05
              d669 0005  ld   $05
              d66a 00a7  ld   $a7
              d66b 0003  ld   $03
              d66c 0074  ld   $74
              d66d 00bd  ld   $bd
              d66e 00ac  ld   $ac
              d66f 0008  ld   $08
              d670 0085  ld   $85
              d671 00a0  ld   $a0
              d672 0008  ld   $08
              d673 0006  ld   $06
              d674 0038  ld   $38
              d675 00c8  ld   $c8
              d676 00f1  ld   $f1
              d677 0079  ld   $79
              d678 00e2  ld   $e2
              d679 0079  ld   $79
              d67a 00d3  ld   $d3
              d67b 0079  ld   $79
              d67c 00c4  ld   $c4
              d67d 0079  ld   $79
              d67e 00b5  ld   $b5
              d67f 0079  ld   $79
              d680 00a6  ld   $a6
              d681 0079  ld   $79
              d682 00f1  ld   $f1
              d683 0078  ld   $78
              d684 00e2  ld   $e2
              d685 0078  ld   $78
              d686 00d3  ld   $d3
              d687 0078  ld   $78
              d688 00c4  ld   $c4
              d689 0078  ld   $78
              d68a 00b5  ld   $b5
              d68b 0078  ld   $78
              d68c 00a6  ld   $a6
              d68d 0078  ld   $78
              d68e 00f1  ld   $f1
              d68f 0077  ld   $77
              d690 00e2  ld   $e2
              d691 0077  ld   $77
              d692 00d3  ld   $d3
              d693 0077  ld   $77
              d694 00c4  ld   $c4
              d695 0077  ld   $77
              d696 00b5  ld   $b5
              d697 0077  ld   $77
              d698 00a6  ld   $a6
              d699 0077  ld   $77
              d69a 00f1  ld   $f1
              d69b 0076  ld   $76
              d69c 00e2  ld   $e2
              d69d 0076  ld   $76
              d69e 00d3  ld   $d3
              d69f 0076  ld   $76
              d6a0 00c4  ld   $c4
              d6a1 0076  ld   $76
              d6a2 00b5  ld   $b5
              d6a3 0076  ld   $76
              d6a4 00a6  ld   $a6
              d6a5 0076  ld   $76
              d6a6 00f1  ld   $f1
              d6a7 0075  ld   $75
              d6a8 00e2  ld   $e2
              d6a9 0075  ld   $75
              d6aa 00d3  ld   $d3
              d6ab 0075  ld   $75
              d6ac 00c4  ld   $c4
              d6ad 0075  ld   $75
              d6ae 00b5  ld   $b5
              d6af 0075  ld   $75
              d6b0 00a6  ld   $a6
              d6b1 0075  ld   $75
              d6b2 00f1  ld   $f1
              d6b3 0074  ld   $74
              d6b4 00e2  ld   $e2
              d6b5 0074  ld   $74
              d6b6 00d3  ld   $d3
              d6b7 0074  ld   $74
              d6b8 00c4  ld   $c4
              d6b9 0074  ld   $74
              d6ba 00b5  ld   $b5
              d6bb 0074  ld   $74
              d6bc 00a6  ld   $a6
              d6bd 0074  ld   $74
              d6be 00f1  ld   $f1
              d6bf 0073  ld   $73
              d6c0 00e2  ld   $e2
              d6c1 0073  ld   $73
              d6c2 00d3  ld   $d3
              d6c3 0073  ld   $73
              d6c4 00c4  ld   $c4
              d6c5 0073  ld   $73
              d6c6 00b5  ld   $b5
              d6c7 0073  ld   $73
              d6c8 00a6  ld   $a6
              d6c9 0073  ld   $73
              d6ca 00f1  ld   $f1
              d6cb 0072  ld   $72
              d6cc 00e2  ld   $e2
              d6cd 0072  ld   $72
              d6ce 00d3  ld   $d3
              d6cf 0072  ld   $72
              d6d0 00c4  ld   $c4
              d6d1 0072  ld   $72
              d6d2 00b5  ld   $b5
              d6d3 0072  ld   $72
              d6d4 00a6  ld   $a6
              d6d5 0072  ld   $72
              d6d6 00f1  ld   $f1
              d6d7 0071  ld   $71
              d6d8 00e2  ld   $e2
              d6d9 0071  ld   $71
              d6da 00d3  ld   $d3
              d6db 0071  ld   $71
              d6dc 00c4  ld   $c4
              d6dd 0071  ld   $71
              d6de 00b5  ld   $b5
              d6df 0071  ld   $71
              d6e0 00a6  ld   $a6
              d6e1 0071  ld   $71
              d6e2 00f1  ld   $f1
              d6e3 0070  ld   $70
              d6e4 00e2  ld   $e2
              d6e5 0070  ld   $70
              d6e6 00d3  ld   $d3
              d6e7 0070  ld   $70
              d6e8 00c4  ld   $c4
              d6e9 0070  ld   $70
              d6ea 00b5  ld   $b5
              d6eb 0070  ld   $70
              d6ec 00a6  ld   $a6
              d6ed 0070  ld   $70
              d6ee 00f1  ld   $f1
              d6ef 006f  ld   $6f
              d6f0 00e2  ld   $e2
              d6f1 006f  ld   $6f
              d6f2 00d3  ld   $d3
              d6f3 006f  ld   $6f
              d6f4 00c4  ld   $c4
              d6f5 006f  ld   $6f
              d6f6 00b5  ld   $b5
              d6f7 006f  ld   $6f
              d6f8 00a6  ld   $a6
              d6f9 006f  ld   $6f
              d6fa 00f1  ld   $f1
              d6fb fe00  bra  ac          ;+-----------------------------------+
              d6fc fcfd  bra  $d6fd       ;|                                   |
              d6fd 1418  ld   $18,y       ;| Trampoline for page $d600 lookups |
              d6fe e006  jmp  y,$06       ;|                                   |
              d6ff c218  st   [$18]       ;+-----------------------------------+
              d700 006e  ld   $6e
              d701 00e2  ld   $e2
              d702 006e  ld   $6e
              d703 00d3  ld   $d3
              d704 006e  ld   $6e
              d705 00c4  ld   $c4
              d706 006e  ld   $6e
              d707 00b5  ld   $b5
              d708 006e  ld   $6e
              d709 00a6  ld   $a6
              d70a 006e  ld   $6e
              d70b 00f1  ld   $f1
              d70c 006d  ld   $6d
              d70d 00e2  ld   $e2
              d70e 006d  ld   $6d
              d70f 00d3  ld   $d3
              d710 006d  ld   $6d
              d711 00c4  ld   $c4
              d712 006d  ld   $6d
              d713 00b5  ld   $b5
              d714 006d  ld   $6d
              d715 00a6  ld   $a6
              d716 006d  ld   $6d
              d717 00f1  ld   $f1
              d718 006c  ld   $6c
              d719 00e2  ld   $e2
              d71a 006c  ld   $6c
              d71b 00d3  ld   $d3
              d71c 006c  ld   $6c
              d71d 00c4  ld   $c4
              d71e 006c  ld   $6c
              d71f 00b5  ld   $b5
              d720 006c  ld   $6c
              d721 00a6  ld   $a6
              d722 006c  ld   $6c
              d723 00f1  ld   $f1
              d724 006b  ld   $6b
              d725 00e2  ld   $e2
              d726 006b  ld   $6b
              d727 00d3  ld   $d3
              d728 006b  ld   $6b
              d729 00c4  ld   $c4
              d72a 006b  ld   $6b
              d72b 00b5  ld   $b5
              d72c 006b  ld   $6b
              d72d 00a6  ld   $a6
              d72e 006b  ld   $6b
              d72f 00f1  ld   $f1
              d730 006a  ld   $6a
              d731 00e2  ld   $e2
              d732 006a  ld   $6a
              d733 00d3  ld   $d3
              d734 006a  ld   $6a
              d735 00c4  ld   $c4
              d736 006a  ld   $6a
              d737 00b5  ld   $b5
              d738 006a  ld   $6a
              d739 00a6  ld   $a6
              d73a 006a  ld   $6a
              d73b 00f1  ld   $f1
              d73c 0069  ld   $69
              d73d 00e2  ld   $e2
              d73e 0069  ld   $69
              d73f 00d3  ld   $d3
              d740 0069  ld   $69
              d741 00c4  ld   $c4
              d742 0069  ld   $69
              d743 0008  ld   $08
              d744 00a0  ld   $a0
              d745 005e  ld   $5e
              d746 004d  ld   $4d
              d747 0002  ld   $02
              d748 0044  ld   $44
              d749 0011  ld   $11
              d74a 00fe  ld   $fe
              d74b 007c  ld   $7c
              d74c 002b  ld   $2b
              d74d 0084  ld   $84
              d74e 0011  ld   $11
              d74f 00a0  ld   $a0
              d750 007a  ld   $7a
              d751 0085  ld   $85
              d752 00a0  ld   $a0
              d753 0062  ld   $62
              d754 00a7  ld   $a7
              d755 0002  ld   $02
              d756 0074  ld   $74
              d757 00bd  ld   $bd
              d758 00be  ld   $be
              d759 0008  ld   $08
              d75a 004d  ld   $4d
              d75b 0001  ld   $01
              d75c 0044  ld   $44
              d75d 0032  ld   $32
              d75e 0084  ld   $84
              d75f 0042  ld   $42
              d760 0011  ld   $11
              d761 00a0  ld   $a0
              d762 007a  ld   $7a
              d763 0085  ld   $85
              d764 00a0  ld   $a0
              d765 0062  ld   $62
              d766 0063  ld   $63
              d767 00ff  ld   $ff
              d768 0075  ld   $75
              d769 0032  ld   $32
              d76a 0022  ld   $22
              d76b 006e  ld   $6e
              d76c 004d  ld   $4d
              d76d 0046  ld   $46
              d76e 0024  ld   $24
              d76f 0016  ld   $16
              d770 00cf  ld   $cf
              d771 0027  ld   $27
              d772 00b4  ld   $b4
              d773 00fe  ld   $fe
              d774 001a  ld   $1a
              d775 0046  ld   $46
              d776 00bd  ld   $bd
              d777 00c4  ld   $c4
              d778 0008  ld   $08
              d779 004d  ld   $4d
              d77a 0002  ld   $02
              d77b 0082  ld   $82
              d77c 0085  ld   $85
              d77d 00d2  ld   $d2
              d77e 0061  ld   $61
              d77f 0063  ld   $63
              d780 00ff  ld   $ff
              d781 0075  ld   $75
              d782 004d  ld   $4d
              d783 0001  ld   $01
              d784 0032  ld   $32
              d785 0011  ld   $11
              d786 00ef  ld   $ef
              d787 007c  ld   $7c
              d788 0025  ld   $25
              d789 0006  ld   $06
              d78a 0085  ld   $85
              d78b 007e  ld   $7e
              d78c 0002  ld   $02
              d78d 002f  ld   $2f
              d78e 00d6  ld   $d6
              d78f 006e  ld   $6e
              d790 0063  ld   $63
              d791 00ff  ld   $ff
              d792 0075  ld   $75
              d793 004d  ld   $4d
              d794 0001  ld   $01
              d795 0032  ld   $32
              d796 0011  ld   $11
              d797 00ef  ld   $ef
              d798 007c  ld   $7c
              d799 0025  ld   $25
              d79a 0001  ld   $01
              d79b 0085  ld   $85
              d79c 007e  ld   $7e
              d79d 0002  ld   $02
              d79e 0063  ld   $63
              d79f 00ff  ld   $ff
              d7a0 0075  ld   $75
              d7a1 0085  ld   $85
              d7a2 00a0  ld   $a0
              d7a3 0009  ld   $09
              d7a4 0009  ld   $09
              d7a5 00a0  ld   $a0
              d7a6 0049  ld   $49
              d7a7 004d  ld   $4d
              d7a8 0001  ld   $01
              d7a9 0032  ld   $32
              d7aa 0011  ld   $11
              d7ab 00ef  ld   $ef
              d7ac 007c  ld   $7c
              d7ad 0025  ld   $25
              d7ae 0004  ld   $04
              d7af 0085  ld   $85
              d7b0 007e  ld   $7e
              d7b1 0002  ld   $02
              d7b2 0063  ld   $63
              d7b3 00ff  ld   $ff
              d7b4 0075  ld   $75
              d7b5 004d  ld   $4d
              d7b6 0001  ld   $01
              d7b7 0032  ld   $32
              d7b8 0011  ld   $11
              d7b9 00ef  ld   $ef
              d7ba 007c  ld   $7c
              d7bb 0025  ld   $25
              d7bc 0005  ld   $05
              d7bd 0085  ld   $85
              d7be 007e  ld   $7e
              d7bf 0002  ld   $02
              d7c0 0085  ld   $85
              d7c1 00c2  ld   $c2
              d7c2 0008  ld   $08
              d7c3 0063  ld   $63
              d7c4 00ff  ld   $ff
              d7c5 0075  ld   $75
              d7c6 004d  ld   $4d
              d7c7 0032  ld   $32
              d7c8 009c  ld   $9c
              d7c9 0085  ld   $85
              d7ca 00c8  ld   $c8
              d7cb 0062  ld   $62
              d7cc 0085  ld   $85
              d7cd 009d  ld   $9d
              d7ce 0004  ld   $04
              d7cf 0011  ld   $11
              d7d0 00ef  ld   $ef
              d7d1 007c  ld   $7c
              d7d2 002b  ld   $2b
              d7d3 0030  ld   $30
              d7d4 004d  ld   $4d
              d7d5 0002  ld   $02
              d7d6 0082  ld   $82
              d7d7 0085  ld   $85
              d7d8 00a3  ld   $a3
              d7d9 0063  ld   $63
              d7da 0011  ld   $11
              d7db 0020  ld   $20
              d7dc 003f  ld   $3f
              d7dd 002b  ld   $2b
              d7de 00a2  ld   $a2
              d7df 0085  ld   $85
              d7e0 00c2  ld   $c2
              d7e1 0063  ld   $63
              d7e2 0085  ld   $85
              d7e3 00a2  ld   $a2
              d7e4 0066  ld   $66
              d7e5 004d  ld   $4d
              d7e6 0000  ld   $00
              d7e7 00a4  ld   $a4
              d7e8 00c7  ld   $c7
              d7e9 0010  ld   $10
              d7ea 0069  ld   $69
              d7eb 00aa  ld   $aa
              d7ec 0063  ld   $63
              d7ed 00ff  ld   $ff
              d7ee 00b4  ld   $b4
              d7ef 0080  ld   $80
              d7f0 0061  ld   $61
              d7f1 00d2  ld   $d2
              d7f2 002d  ld   $2d
              d7f3 002f  ld   $2f
              d7f4 00d6  ld   $d6
              d7f5 006e  ld   $6e
              d7f6 009e  ld   $9e
              d7f7 00d0  ld   $d0
              d7f8 0082  ld   $82
              d7f9 00ff  ld   $ff
              d7fa 002b  ld   $2b
              d7fb fe00  bra  ac          ;+-----------------------------------+
              d7fc fcfd  bra  $d7fd       ;|                                   |
              d7fd 1418  ld   $18,y       ;| Trampoline for page $d700 lookups |
              d7fe e006  jmp  y,$06       ;|                                   |
              d7ff c218  st   [$18]       ;+-----------------------------------+
              d800 001a  ld   $1a
              d801 004d  ld   $4d
              d802 00ad  ld   $ad
              d803 0022  ld   $22
              d804 00b4  ld   $b4
              d805 00e2  ld   $e2
              d806 004d  ld   $4d
              d807 0002  ld   $02
              d808 00a4  ld   $a4
              d809 00c7  ld   $c7
              d80a 00fb  ld   $fb
              d80b 0066  ld   $66
              d80c 00aa  ld   $aa
              d80d 00ff  ld   $ff
              d80e 0032  ld   $32
              d80f 0024  ld   $24
              d810 00a2  ld   $a2
              d811 0021  ld   $21
              d812 00a4  ld   $a4
              d813 002f  ld   $2f
              d814 0028  ld   $28
              d815 0059  ld   $59
              d816 00ff  ld   $ff
              d817 0075  ld   $75
              d818 0085  ld   $85
              d819 00e0  ld   $e0
              d81a 0061  ld   $61
              d81b 0011  ld   $11
              d81c 0003  ld   $03
              d81d 000b  ld   $0b
              d81e 002b  ld   $2b
              d81f 0022  ld   $22
              d820 0065  ld   $65
              d821 0025  ld   $25
              d822 00a2  ld   $a2
              d823 0063  ld   $63
              d824 00ff  ld   $ff
              d825 0062  ld   $62
              d826 00a0  ld   $a0
              d827 005f  ld   $5f
              d828 002b  ld   $2b
              d829 0086  ld   $86
              d82a 0023  ld   $23
              d82b 0084  ld   $84
              d82c 00d1  ld   $d1
              d82d 0086  ld   $86
              d82e 0035  ld   $35
              d82f 0072  ld   $72
              d830 00a0  ld   $a0
              d831 00ff  ld   $ff
              d832 002b  ld   $2b
              d833 0084  ld   $84
              d834 0021  ld   $21
              d835 0082  ld   $82
              d836 00b8  ld   $b8
              d837 0084  ld   $84
              d838 0035  ld   $35
              d839 0053  ld   $53
              d83a 00b4  ld   $b4
              d83b 0021  ld   $21
              d83c 0084  ld   $84
              d83d 00ff  ld   $ff
              d83e 0021  ld   $21
              d83f 0082  ld   $82
              d840 00ff  ld   $ff
              d841 002b  ld   $2b
              d842 0084  ld   $84
              d843 0021  ld   $21
              d844 0082  ld   $82
              d845 00b8  ld   $b8
              d846 0084  ld   $84
              d847 0035  ld   $35
              d848 0056  ld   $56
              d849 00c3  ld   $c3
              d84a 0021  ld   $21
              d84b 0084  ld   $84
              d84c 00ff  ld   $ff
              d84d 0021  ld   $21
              d84e 0082  ld   $82
              d84f 00ff  ld   $ff
              d850 0059  ld   $59
              d851 0080  ld   $80
              d852 00b8  ld   $b8
              d853 009c  ld   $9c
              d854 002b  ld   $2b
              d855 009e  ld   $9e
              d856 0018  ld   $18
              d857 009e  ld   $9e
              d858 0059  ld   $59
              d859 0000  ld   $00
              d85a 0060  ld   $60
              d85b 009c  ld   $9c
              d85c 009e  ld   $9e
              d85d 00d0  ld   $d0
              d85e 009e  ld   $9e
              d85f 00ff  ld   $ff
              d860 0075  ld   $75
              d861 0035  ld   $35
              d862 003f  ld   $3f
              d863 00e7  ld   $e7
              d864 005e  ld   $5e
              d865 0084  ld   $84
              d866 0085  ld   $85
              d867 00ad  ld   $ad
              d868 0063  ld   $63
              d869 0059  ld   $59
              d86a 0020  ld   $20
              d86b 0085  ld   $85
              d86c 00cc  ld   $cc
              d86d 0066  ld   $66
              d86e 009e  ld   $9e
              d86f 00df  ld   $df
              d870 0084  ld   $84
              d871 0063  ld   $63
              d872 00ff  ld   $ff
              d873 0075  ld   $75
              d874 002b  ld   $2b
              d875 0082  ld   $82
              d876 0085  ld   $85
              d877 00ad  ld   $ad
              d878 0063  ld   $63
              d879 0093  ld   $93
              d87a 0082  ld   $82
              d87b 0023  ld   $23
              d87c 0082  ld   $82
              d87d 0035  ld   $35
              d87e 003f  ld   $3f
              d87f 00fb  ld   $fb
              d880 0085  ld   $85
              d881 00cc  ld   $cc
              d882 0066  ld   $66
              d883 0090  ld   $90
              d884 00f1  ld   $f1
              d885 0063  ld   $63
              d886 00ff  ld   $ff
              d887 0063  ld   $63
              d888 00a3  ld   $a3
              d889 005c  ld   $5c
              d88a 0011  ld   $11
              d88b 0000  ld   $00
              d88c 000b  ld   $0b
              d88d 002b  ld   $2b
              d88e 0022  ld   $22
              d88f 0021  ld   $21
              d890 0082  ld   $82
              d891 00b4  ld   $b4
              d892 00e6  ld   $e6
              d893 00ff  ld   $ff
              d894 00c7  ld   $c7
              d895 0010  ld   $10
              d896 006f  ld   $6f
              d897 00aa  ld   $aa
              d898 00bd  ld   $bd
              d899 00e6  ld   $e6
              d89a 0061  ld   $61
              d89b 0011  ld   $11
              d89c 00e1  ld   $e1
              d89d 0004  ld   $04
              d89e 002b  ld   $2b
              d89f 0022  ld   $22
              d8a0 0032  ld   $32
              d8a1 0024  ld   $24
              d8a2 00a2  ld   $a2
              d8a3 0021  ld   $21
              d8a4 00a4  ld   $a4
              d8a5 002f  ld   $2f
              d8a6 0028  ld   $28
              d8a7 0059  ld   $59
              d8a8 00ff  ld   $ff
              d8a9 0075  ld   $75
              d8aa 004d  ld   $4d
              d8ab 0008  ld   $08
              d8ac 0098  ld   $98
              d8ad 0011  ld   $11
              d8ae 0000  ld   $00
              d8af 0001  ld   $01
              d8b0 002b  ld   $2b
              d8b1 009a  ld   $9a
              d8b2 0016  ld   $16
              d8b3 0078  ld   $78
              d8b4 0096  ld   $96
              d8b5 0021  ld   $21
              d8b6 0098  ld   $98
              d8b7 0060  ld   $60
              d8b8 009a  ld   $9a
              d8b9 0093  ld   $93
              d8ba 0098  ld   $98
              d8bb 009e  ld   $9e
              d8bc 00cc  ld   $cc
              d8bd 0096  ld   $96
              d8be 0085  ld   $85
              d8bf 00e0  ld   $e0
              d8c0 0061  ld   $61
              d8c1 0063  ld   $63
              d8c2 00ff  ld   $ff
              d8c3 00c7  ld   $c7
              d8c4 0010  ld   $10
              d8c5 006f  ld   $6f
              d8c6 00aa  ld   $aa
              d8c7 00bd  ld   $bd
              d8c8 00a0  ld   $a0
              d8c9 0067  ld   $67
              d8ca 00a7  ld   $a7
              d8cb 009a  ld   $9a
              d8cc 00a4  ld   $a4
              d8cd 0035  ld   $35
              d8ce 0056  ld   $56
              d8cf 00ea  ld   $ea
              d8d0 0016  ld   $16
              d8d1 0000  ld   $00
              d8d2 00a4  ld   $a4
              d8d3 00a7  ld   $a7
              d8d4 0070  ld   $70
              d8d5 00a5  ld   $a5
              d8d6 0035  ld   $35
              d8d7 0050  ld   $50
              d8d8 00f8  ld   $f8
              d8d9 0016  ld   $16
              d8da 0070  ld   $70
              d8db 00a5  ld   $a5
              d8dc 00c7  ld   $c7
              d8dd 0004  ld   $04
              d8de 0069  ld   $69
              d8df 00aa  ld   $aa
              d8e0 00ff  ld   $ff
              d8e1 00c7  ld   $c7
              d8e2 00fb  ld   $fb
              d8e3 0066  ld   $66
              d8e4 00aa  ld   $aa
              d8e5 00ff  ld   $ff
              d8e6 0064  ld   $64
              d8e7 00a3  ld   $a3
              d8e8 005c  ld   $5c
              d8e9 00c7  ld   $c7
              d8ea 0094  ld   $94
              d8eb 0028  ld   $28
              d8ec 0092  ld   $92
              d8ed 0016  ld   $16
              d8ee 0003  ld   $03
              d8ef 0026  ld   $26
              d8f0 0021  ld   $21
              d8f1 0028  ld   $28
              d8f2 002f  ld   $2f
              d8f3 0094  ld   $94
              d8f4 0057  ld   $57
              d8f5 001c  ld   $1c
              d8f6 0028  ld   $28
              d8f7 0028  ld   $28
              d8f8 0004  ld   $04
              d8f9 0075  ld   $75
              d8fa 0085  ld   $85
              d8fb fe00  bra  ac          ;+-----------------------------------+
              d8fc fcfd  bra  $d8fd       ;|                                   |
              d8fd 1418  ld   $18,y       ;| Trampoline for page $d800 lookups |
              d8fe e006  jmp  y,$06       ;|                                   |
              d8ff c218  st   [$18]       ;+-----------------------------------+
              d900 00a0  ld   $a0
              d901 0068  ld   $68
              d902 0063  ld   $63
              d903 00ff  ld   $ff
              d904 0075  ld   $75
              d905 0011  ld   $11
              d906 0003  ld   $03
              d907 000b  ld   $0b
              d908 002b  ld   $2b
              d909 0022  ld   $22
              d90a 0065  ld   $65
              d90b 0025  ld   $25
              d90c 00a2  ld   $a2
              d90d 0011  ld   $11
              d90e 0000  ld   $00
              d90f 0001  ld   $01
              d910 0067  ld   $67
              d911 0027  ld   $27
              d912 004d  ld   $4d
              d913 0006  ld   $06
              d914 009e  ld   $9e
              d915 0016  ld   $16
              d916 00a0  ld   $a0
              d917 0024  ld   $24
              d918 0016  ld   $16
              d919 0000  ld   $00
              d91a 0026  ld   $26
              d91b 00b4  ld   $b4
              d91c 00f3  ld   $f3
              d91d 0093  ld   $93
              d91e 0027  ld   $27
              d91f 009e  ld   $9e
              d920 00c8  ld   $c8
              d921 009e  ld   $9e
              d922 0085  ld   $85
              d923 00ad  ld   $ad
              d924 0063  ld   $63
              d925 0063  ld   $63
              d926 00ff  ld   $ff
              d927 0075  ld   $75
              d928 0011  ld   $11
              d929 0003  ld   $03
              d92a 000b  ld   $0b
              d92b 002b  ld   $2b
              d92c 0022  ld   $22
              d92d 0065  ld   $65
              d92e 0025  ld   $25
              d92f 00a2  ld   $a2
              d930 0011  ld   $11
              d931 0000  ld   $00
              d932 0001  ld   $01
              d933 0067  ld   $67
              d934 0027  ld   $27
              d935 004d  ld   $4d
              d936 0008  ld   $08
              d937 009e  ld   $9e
              d938 0016  ld   $16
              d939 00a0  ld   $a0
              d93a 0024  ld   $24
              d93b 0016  ld   $16
              d93c 0000  ld   $00
              d93d 0026  ld   $26
              d93e 00b4  ld   $b4
              d93f 00f3  ld   $f3
              d940 0093  ld   $93
              d941 0027  ld   $27
              d942 009e  ld   $9e
              d943 00eb  ld   $eb
              d944 009e  ld   $9e
              d945 0085  ld   $85
              d946 00ad  ld   $ad
              d947 0063  ld   $63
              d948 0063  ld   $63
              d949 00ff  ld   $ff
              d94a 0065  ld   $65
              d94b 00a5  ld   $a5
              d94c 005a  ld   $5a
              d94d 001a  ld   $1a
              d94e 0021  ld   $21
              d94f 0082  ld   $82
              d950 00fc  ld   $fc
              d951 002b  ld   $2b
              d952 0084  ld   $84
              d953 00b8  ld   $b8
              d954 0082  ld   $82
              d955 0035  ld   $35
              d956 003f  ld   $3f
              d957 00cb  ld   $cb
              d958 0021  ld   $21
              d959 0082  ld   $82
              d95a 00e6  ld   $e6
              d95b 0080  ld   $80
              d95c 0035  ld   $35
              d95d 0072  ld   $72
              d95e 00be  ld   $be
              d95f 0021  ld   $21
              d960 0084  ld   $84
              d961 00b8  ld   $b8
              d962 0082  ld   $82
              d963 0035  ld   $35
              d964 003f  ld   $3f
              d965 00cb  ld   $cb
              d966 0090  ld   $90
              d967 00c5  ld   $c5
              d968 0021  ld   $21
              d969 0084  ld   $84
              d96a 00b8  ld   $b8
              d96b 0082  ld   $82
              d96c 0035  ld   $35
              d96d 004d  ld   $4d
              d96e 00cb  ld   $cb
              d96f 001a  ld   $1a
              d970 0006  ld   $06
              d971 00f0  ld   $f0
              d972 007e  ld   $7e
              d973 0090  ld   $90
              d974 00c5  ld   $c5
              d975 00ff  ld   $ff
              d976 0075  ld   $75
              d977 0011  ld   $11
              d978 00a0  ld   $a0
              d979 007c  ld   $7c
              d97a 002b  ld   $2b
              d97b 0086  ld   $86
              d97c 002b  ld   $2b
              d97d 0092  ld   $92
              d97e 0011  ld   $11
              d97f 00b8  ld   $b8
              d980 0069  ld   $69
              d981 002b  ld   $2b
              d982 0088  ld   $88
              d983 003b  ld   $3b
              d984 0092  ld   $92
              d985 0035  ld   $35
              d986 0072  ld   $72
              d987 00e7  ld   $e7
              d988 0021  ld   $21
              d989 0084  ld   $84
              d98a 0035  ld   $35
              d98b 003f  ld   $3f
              d98c 00e5  ld   $e5
              d98d 00cf  ld   $cf
              d98e 0084  ld   $84
              d98f 0063  ld   $63
              d990 00ff  ld   $ff
              d991 00b8  ld   $b8
              d992 0082  ld   $82
              d993 0035  ld   $35
              d994 003f  ld   $3f
              d995 00f2  ld   $f2
              d996 001c  ld   $1c
              d997 0092  ld   $92
              d998 0092  ld   $92
              d999 0002  ld   $02
              d99a 0090  ld   $90
              d99b 00d9  ld   $d9
              d99c 0021  ld   $21
              d99d 0092  ld   $92
              d99e 00b8  ld   $b8
              d99f 0086  ld   $86
              d9a0 0099  ld   $99
              d9a1 0088  ld   $88
              d9a2 00f6  ld   $f6
              d9a3 00cf  ld   $cf
              d9a4 0018  ld   $18
              d9a5 0063  ld   $63
              d9a6 00ff  ld   $ff
              d9a7 0066  ld   $66
              d9a8 00a2  ld   $a2
              d9a9 005d  ld   $5d
              d9aa 0075  ld   $75
              d9ab 0085  ld   $85
              d9ac 00f1  ld   $f1
              d9ad 0061  ld   $61
              d9ae 004d  ld   $4d
              d9af 0008  ld   $08
              d9b0 0094  ld   $94
              d9b1 0016  ld   $16
              d9b2 003c  ld   $3c
              d9b3 009e  ld   $9e
              d9b4 0016  ld   $16
              d9b5 00a0  ld   $a0
              d9b6 0024  ld   $24
              d9b7 0016  ld   $16
              d9b8 0000  ld   $00
              d9b9 0026  ld   $26
              d9ba 0065  ld   $65
              d9bb 0027  ld   $27
              d9bc 0094  ld   $94
              d9bd 00b4  ld   $b4
              d9be 00f3  ld   $f3
              d9bf 0016  ld   $16
              d9c0 00a0  ld   $a0
              d9c1 0024  ld   $24
              d9c2 0016  ld   $16
              d9c3 0000  ld   $00
              d9c4 0026  ld   $26
              d9c5 0059  ld   $59
              d9c6 0087  ld   $87
              d9c7 00b8  ld   $b8
              d9c8 0094  ld   $94
              d9c9 005e  ld   $5e
              d9ca 0027  ld   $27
              d9cb 00b4  ld   $b4
              d9cc 00f3  ld   $f3
              d9cd 0093  ld   $93
              d9ce 0094  ld   $94
              d9cf 009e  ld   $9e
              d9d0 00aa  ld   $aa
              d9d1 009e  ld   $9e
              d9d2 0063  ld   $63
              d9d3 00ff  ld   $ff
              d9d4 002b  ld   $2b
              d9d5 0092  ld   $92
              d9d6 00c7  ld   $c7
              d9d7 0084  ld   $84
              d9d8 0089  ld   $89
              d9d9 0020  ld   $20
              d9da 0035  ld   $35
              d9db 0072  ld   $72
              d9dc 00fc  ld   $fc
              d9dd 00c7  ld   $c7
              d9de 0010  ld   $10
              d9df 006f  ld   $6f
              d9e0 00aa  ld   $aa
              d9e1 00bd  ld   $bd
              d9e2 00a1  ld   $a1
              d9e3 0064  ld   $64
              d9e4 00c7  ld   $c7
              d9e5 0094  ld   $94
              d9e6 0025  ld   $25
              d9e7 0092  ld   $92
              d9e8 0016  ld   $16
              d9e9 0005  ld   $05
              d9ea 0096  ld   $96
              d9eb 0021  ld   $21
              d9ec 0094  ld   $94
              d9ed 007f  ld   $7f
              d9ee 0000  ld   $00
              d9ef 005e  ld   $5e
              d9f0 0026  ld   $26
              d9f1 00b4  ld   $b4
              d9f2 00cb  ld   $cb
              d9f3 0093  ld   $93
              d9f4 0094  ld   $94
              d9f5 0093  ld   $93
              d9f6 0028  ld   $28
              d9f7 009e  ld   $9e
              d9f8 00e1  ld   $e1
              d9f9 0096  ld   $96
              d9fa 0016  ld   $16
              d9fb fe00  bra  ac          ;+-----------------------------------+
              d9fc fcfd  bra  $d9fd       ;|                                   |
              d9fd 1418  ld   $18,y       ;| Trampoline for page $d900 lookups |
              d9fe e006  jmp  y,$06       ;|                                   |
              d9ff c218  st   [$18]       ;+-----------------------------------+
              da00 0000  ld   $00
              da01 0026  ld   $26
              da02 00b4  ld   $b4
              da03 00cb  ld   $cb
              da04 0093  ld   $93
              da05 0028  ld   $28
              da06 0075  ld   $75
              da07 0085  ld   $85
              da08 00a1  ld   $a1
              da09 0069  ld   $69
              da0a 0063  ld   $63
              da0b 00ff  ld   $ff
              da0c 0067  ld   $67
              da0d 00a2  ld   $a2
              da0e 005d  ld   $5d
              da0f 00a7  ld   $a7
              da10 009c  ld   $9c
              da11 00a4  ld   $a4
              da12 0035  ld   $35
              da13 0056  ld   $56
              da14 00a9  ld   $a9
              da15 0016  ld   $16
              da16 0000  ld   $00
              da17 00a4  ld   $a4
              da18 00a7  ld   $a7
              da19 0072  ld   $72
              da1a 00a5  ld   $a5
              da1b 0035  ld   $35
              da1c 0050  ld   $50
              da1d 00b7  ld   $b7
              da1e 0016  ld   $16
              da1f 0072  ld   $72
              da20 00a5  ld   $a5
              da21 00c7  ld   $c7
              da22 0004  ld   $04
              da23 0069  ld   $69
              da24 00aa  ld   $aa
              da25 00ff  ld   $ff
              da26 00c7  ld   $c7
              da27 00fb  ld   $fb
              da28 0066  ld   $66
              da29 00aa  ld   $aa
              da2a 00ff  ld   $ff
              da2b 0059  ld   $59
              da2c 0000  ld   $00
              da2d 005e  ld   $5e
              da2e 00a4  ld   $a4
              da2f 005e  ld   $5e
              da30 0028  ld   $28
              da31 00c7  ld   $c7
              da32 0002  ld   $02
              da33 006f  ld   $6f
              da34 00aa  ld   $aa
              da35 0035  ld   $35
              da36 0072  ld   $72
              da37 00ca  ld   $ca
              da38 00ff  ld   $ff
              da39 0075  ld   $75
              da3a 00c7  ld   $c7
              da3b 0004  ld   $04
              da3c 006f  ld   $6f
              da3d 00aa  ld   $aa
              da3e 0035  ld   $35
              da3f 0072  ld   $72
              da40 00df  ld   $df
              da41 001c  ld   $1c
              da42 00a5  ld   $a5
              da43 00a5  ld   $a5
              da44 0006  ld   $06
              da45 00a7  ld   $a7
              da46 0078  ld   $78
              da47 00a5  ld   $a5
              da48 0035  ld   $35
              da49 0050  ld   $50
              da4a 00f8  ld   $f8
              da4b 0016  ld   $16
              da4c 0072  ld   $72
              da4d 00a5  ld   $a5
              da4e 0085  ld   $85
              da4f 00b9  ld   $b9
              da50 0064  ld   $64
              da51 0011  ld   $11
              da52 0000  ld   $00
              da53 0001  ld   $01
              da54 002b  ld   $2b
              da55 0026  ld   $26
              da56 0016  ld   $16
              da57 0006  ld   $06
              da58 0024  ld   $24
              da59 0016  ld   $16
              da5a 0078  ld   $78
              da5b 0025  ld   $25
              da5c 0011  ld   $11
              da5d 00c0  ld   $c0
              da5e 0020  ld   $20
              da5f 002b  ld   $2b
              da60 0022  ld   $22
              da61 00b4  ld   $b4
              da62 00fb  ld   $fb
              da63 00c7  ld   $c7
              da64 0004  ld   $04
              da65 0069  ld   $69
              da66 00aa  ld   $aa
              da67 0085  ld   $85
              da68 00e8  ld   $e8
              da69 0061  ld   $61
              da6a 0063  ld   $63
              da6b 00ff  ld   $ff
              da6c 0068  ld   $68
              da6d 00a0  ld   $a0
              da6e 005f  ld   $5f
              da6f 001c  ld   $1c
              da70 00a4  ld   $a4
              da71 00a4  ld   $a4
              da72 0004  ld   $04
              da73 00a7  ld   $a7
              da74 009c  ld   $9c
              da75 00a4  ld   $a4
              da76 0035  ld   $35
              da77 0056  ld   $56
              da78 00b4  ld   $b4
              da79 00c7  ld   $c7
              da7a 0008  ld   $08
              da7b 006f  ld   $6f
              da7c 00aa  ld   $aa
              da7d 0035  ld   $35
              da7e 0072  ld   $72
              da7f 00b4  ld   $b4
              da80 0075  ld   $75
              da81 0085  ld   $85
              da82 00be  ld   $be
              da83 0067  ld   $67
              da84 0063  ld   $63
              da85 00ff  ld   $ff
              da86 00c7  ld   $c7
              da87 0010  ld   $10
              da88 006f  ld   $6f
              da89 00aa  ld   $aa
              da8a 00bd  ld   $bd
              da8b 00bc  ld   $bc
              da8c 0067  ld   $67
              da8d 0059  ld   $59
              da8e 0002  ld   $02
              da8f 005e  ld   $5e
              da90 00a4  ld   $a4
              da91 005e  ld   $5e
              da92 0028  ld   $28
              da93 00c7  ld   $c7
              da94 0002  ld   $02
              da95 006f  ld   $6f
              da96 00aa  ld   $aa
              da97 0035  ld   $35
              da98 0072  ld   $72
              da99 00ca  ld   $ca
              da9a 00ff  ld   $ff
              da9b 0075  ld   $75
              da9c 00c7  ld   $c7
              da9d 0004  ld   $04
              da9e 006f  ld   $6f
              da9f 00aa  ld   $aa
              daa0 0035  ld   $35
              daa1 0072  ld   $72
              daa2 00df  ld   $df
              daa3 001c  ld   $1c
              daa4 00a5  ld   $a5
              daa5 00a5  ld   $a5
              daa6 0008  ld   $08
              daa7 00a7  ld   $a7
              daa8 0078  ld   $78
              daa9 00a5  ld   $a5
              daaa 0035  ld   $35
              daab 0050  ld   $50
              daac 00f8  ld   $f8
              daad 0016  ld   $16
              daae 0070  ld   $70
              daaf 00a5  ld   $a5
              dab0 0085  ld   $85
              dab1 00dc  ld   $dc
              dab2 0064  ld   $64
              dab3 0011  ld   $11
              dab4 0000  ld   $00
              dab5 0001  ld   $01
              dab6 002b  ld   $2b
              dab7 0026  ld   $26
              dab8 0016  ld   $16
              dab9 0008  ld   $08
              daba 0024  ld   $24
              dabb 0016  ld   $16
              dabc 0078  ld   $78
              dabd 0025  ld   $25
              dabe 0011  ld   $11
              dabf 00c0  ld   $c0
              dac0 0020  ld   $20
              dac1 002b  ld   $2b
              dac2 0022  ld   $22
              dac3 00b4  ld   $b4
              dac4 00fb  ld   $fb
              dac5 00c7  ld   $c7
              dac6 0004  ld   $04
              dac7 0069  ld   $69
              dac8 00aa  ld   $aa
              dac9 0085  ld   $85
              daca 00ad  ld   $ad
              dacb 0063  ld   $63
              dacc 0063  ld   $63
              dacd 00ff  ld   $ff
              dace 0069  ld   $69
              dacf 00a1  ld   $a1
              dad0 0023  ld   $23
              dad1 001c  ld   $1c
              dad2 00a4  ld   $a4
              dad3 00a4  ld   $a4
              dad4 0006  ld   $06
              dad5 00a7  ld   $a7
              dad6 009a  ld   $9a
              dad7 00a4  ld   $a4
              dad8 0035  ld   $35
              dad9 0056  ld   $56
              dada 00b5  ld   $b5
              dadb 00c7  ld   $c7
              dadc 0008  ld   $08
              dadd 006f  ld   $6f
              dade 00aa  ld   $aa
              dadf 0035  ld   $35
              dae0 0072  ld   $72
              dae1 00b5  ld   $b5
              dae2 0075  ld   $75
              dae3 0085  ld   $85
              dae4 00b7  ld   $b7
              dae5 0068  ld   $68
              dae6 0063  ld   $63
              dae7 00ff  ld   $ff
              dae8 00a2  ld   $a2
              dae9 0005  ld   $05
              daea 00a8  ld   $a8
              daeb 0005  ld   $05
              daec 00ae  ld   $ae
              daed 0005  ld   $05
              daee 00cd  ld   $cd
              daef 0005  ld   $05
              daf0 00e1  ld   $e1
              daf1 0005  ld   $05
              daf2 0002  ld   $02
              daf3 0006  ld   $06
              daf4 0079  ld   $79
              daf5 00a1  ld   $a1
              daf6 0005  ld   $05
              daf7 00a0  ld   $a0
              daf8 0096  ld   $96
              daf9 0099  ld   $99
              dafa 0098  ld   $98
              dafb fe00  bra  ac          ;+-----------------------------------+
              dafc fcfd  bra  $dafd       ;|                                   |
              dafd 1418  ld   $18,y       ;| Trampoline for page $da00 lookups |
              dafe e006  jmp  y,$06       ;|                                   |
              daff c218  st   [$18]       ;+-----------------------------------+
              db00 00ff  ld   $ff
              db01 007a  ld   $7a
              db02 00a0  ld   $a0
              db03 0002  ld   $02
              db04 0000  ld   $00
              db05 0000  ld   $00
              db06 007b  ld   $7b
              db07 00a0  ld   $a0
              db08 0002  ld   $02
              db09 0000  ld   $00
              db0a 0000  ld   $00
              db0b 007c  ld   $7c
              db0c 00a0  ld   $a0
              db0d 0060  ld   $60
              db0e 007f  ld   $7f
              db0f 0000  ld   $00
              db10 000a  ld   $0a
              db11 0000  ld   $00
              db12 00fe  ld   $fe
              db13 0000  ld   $00
              db14 00fd  ld   $fd
              db15 0000  ld   $00
              db16 00fb  ld   $fb
              db17 0000  ld   $00
              db18 00f7  ld   $f7
              db19 0000  ld   $00
              db1a 0000  ld   $00
              db1b 0000  ld   $00
              * 85 times
              db6e 007d  ld   $7d
              db6f 00a0  ld   $a0
              db70 0002  ld   $02
              db71 0000  ld   $00
              db72 0000  ld   $00
              db73 0000  ld   $00
              db74 0000  ld   $00         ;End of gbas/browser/Browser_SDCard_ROMvX0.gt1, size 2381
                                          ;+-----------------------------------+
                                          ;| gasm/loader/Loader_ROMvX0.gt1     |
                                          ;+-----------------------------------+
              db75 dc53  st   $53,[y,x++] ;'S'
              db76 dc44  st   $44,[y,x++] ;'D'
              db77 dc43  st   $43,[y,x++] ;'C'
              db78 dc61  st   $61,[y,x++] ;'a'
              db79 dc72  st   $72,[y,x++] ;'r'
              db7a dc64  st   $64,[y,x++] ;'d'
              db7b dc00  st   $00,[y,x++] ;'\x00'
              db7c dc00  st   $00,[y,x++] ;'\x00'
              db7d 0028  ld   $28
              db7e c218  st   [$18]
              db7f 00d2  ld   $d2
              db80 14fa  ld   $fa,y
              db81 e020  jmp  y,$20
              db82 c219  st   [$19]
Loader:       db83 0000  ld   $00
              db84 00a8  ld   $a8
              db85 0015  ld   $15
              db86 0011  ld   $11
              db87 0080  ld   $80
              db88 0030  ld   $30
              db89 002b  ld   $2b
              db8a 0022  ld   $22
              db8b 0016  ld   $16
              db8c 00b8  ld   $b8
              db8d 0024  ld   $24
              db8e 0016  ld   $16
              db8f 0026  ld   $26
              db90 0025  ld   $25
              db91 00b4  ld   $b4
              db92 00f2  ld   $f2
              db93 0000  ld   $00
              db94 0000  ld   $00
              db95 0000  ld   $00
              db96 00cf  ld   $cf
              db97 00db  ld   $db
              db98 00eb  ld   $eb
              db99 00fb  ld   $fb
              db9a 0002  ld   $02
              db9b 0000  ld   $00
              db9c 0000  ld   $00         ;End of gasm/loader/Loader_ROMvX0.gt1, size 26
                                          ;+-----------------------------------+
                                          ;| Apps/CardBoot/CardBoot.gt1        |
                                          ;+-----------------------------------+
              db9d dc4c  st   $4c,[y,x++] ;'L'
              db9e dc6f  st   $6f,[y,x++] ;'o'
              db9f dc61  st   $61,[y,x++] ;'a'
              dba0 dc64  st   $64,[y,x++] ;'d'
              dba1 dc65  st   $65,[y,x++] ;'e'
              dba2 dc72  st   $72,[y,x++] ;'r'
              dba3 dc00  st   $00,[y,x++] ;'\x00'
              dba4 dc00  st   $00,[y,x++] ;'\x00'
              dba5 0083  ld   $83
              dba6 c218  st   [$18]
              dba7 00db  ld   $db
              dba8 14fa  ld   $fa,y
              dba9 e020  jmp  y,$20
              dbaa c219  st   [$19]
Boot:         dbab 0002  ld   $02
              dbac 0000  ld   $00
              dbad 004c  ld   $4c
              dbae 001a  ld   $1a
              dbaf 0021  ld   $21
              dbb0 00e6  ld   $e6
              dbb1 0040  ld   $40
              dbb2 0035  ld   $35
              dbb3 0053  ld   $53
              dbb4 000b  ld   $0b
              dbb5 0021  ld   $21
              dbb6 000e  ld   $0e
              dbb7 00f3  ld   $f3
              dbb8 0017  ld   $17
              dbb9 0090  ld   $90
              dbba 0005  ld   $05
              dbbb 0011  ld   $11
              dbbc 0000  ld   $00
              dbbd 007d  ld   $7d
              dbbe 002b  ld   $2b
              dbbf 0030  ld   $30
              dbc0 0011  ld   $11
              dbc1 00f9  ld   $f9
              dbc2 0001  ld   $01
              dbc3 002b  ld   $2b
              dbc4 0032  ld   $32
              dbc5 0059  ld   $59
              dbc6 0000  ld   $00
              dbc7 0085  ld   $85
              dbc8 00b1  ld   $b1
              dbc9 0072  ld   $72
              dbca 0059  ld   $59
              dbcb 0020  ld   $20
              dbcc 00f0  ld   $f0
              dbcd 0032  ld   $32
              dbce 0011  ld   $11
              dbcf 00e8  ld   $e8
              dbd0 0001  ld   $01
              dbd1 002b  ld   $2b
              dbd2 0034  ld   $34
              dbd3 0059  ld   $59
              dbd4 007b  ld   $7b
              dbd5 00f0  ld   $f0
              dbd6 0034  ld   $34
              dbd7 0021  ld   $21
              dbd8 0034  ld   $34
              dbd9 00e3  ld   $e3
              dbda 0002  ld   $02
              dbdb 002b  ld   $2b
              dbdc 0034  ld   $34
              dbdd 0011  ld   $11
              dbde 00f0  ld   $f0
              dbdf 0001  ld   $01
              dbe0 00fc  ld   $fc
              dbe1 0034  ld   $34
              dbe2 0035  ld   $35
              dbe3 0072  ld   $72
              dbe4 0023  ld   $23
              dbe5 0011  ld   $11
              dbe6 007c  ld   $7c
              dbe7 0000  ld   $00
              dbe8 005e  ld   $5e
              dbe9 0027  ld   $27
              dbea 0059  ld   $59
              dbeb 00ff  ld   $ff
              dbec 002b  ld   $2b
              dbed 0025  ld   $25
              dbee 0059  ld   $59
              dbef 0000  ld   $00
              dbf0 005e  ld   $5e
              dbf1 0024  ld   $24
              dbf2 00b4  ld   $b4
              dbf3 00f3  ld   $f3
              dbf4 0011  ld   $11
              dbf5 00a0  ld   $a0
              dbf6 0058  ld   $58
              dbf7 002b  ld   $2b
              dbf8 001a  ld   $1a
              dbf9 00ff  ld   $ff
              dbfa 0058  ld   $58
              dbfb fe00  bra  ac          ;+-----------------------------------+
              dbfc fcfd  bra  $dbfd       ;|                                   |
              dbfd 1418  ld   $18,y       ;| Trampoline for page $db00 lookups |
              dbfe e006  jmp  y,$06       ;|                                   |
              dbff c218  st   [$18]       ;+-----------------------------------+
              dc00 00a0  ld   $a0
              dc01 0042  ld   $42
              dc02 00cd  ld   $cd
              dc03 00c8  ld   $c8
              dc04 0075  ld   $75
              dc05 0059  ld   $59
              dc06 0000  ld   $00
              dc07 002b  ld   $2b
              dc08 0036  ld   $36
              dc09 0059  ld   $59
              dc0a 000a  ld   $0a
              dc0b 002b  ld   $2b
              dc0c 0034  ld   $34
              dc0d 0085  ld   $85
              dc0e 00bc  ld   $bc
              dc0f 005d  ld   $5d
              dc10 0021  ld   $21
              dc11 0034  ld   $34
              dc12 00e6  ld   $e6
              dc13 0001  ld   $01
              dc14 0035  ld   $35
              dc15 004d  ld   $4d
              dc16 00a7  ld   $a7
              dc17 0085  ld   $85
              dc18 00a2  ld   $a2
              dc19 005d  ld   $5d
              dc1a 00cd  ld   $cd
              dc1b 00be  ld   $be
              dc1c 0040  ld   $40
              dc1d 0000  ld   $00
              dc1e 0000  ld   $00
              dc1f 0000  ld   $00
              dc20 0000  ld   $00
              dc21 0095  ld   $95
              dc22 0085  ld   $85
              dc23 00a2  ld   $a2
              dc24 005f  ld   $5f
              dc25 0085  ld   $85
              dc26 00da  ld   $da
              dc27 005f  ld   $5f
              dc28 008c  ld   $8c
              dc29 0001  ld   $01
              dc2a 0063  ld   $63
              dc2b 00ff  ld   $ff
              dc2c 00cd  ld   $cd
              dc2d 00dd  ld   $dd
              dc2e 0075  ld   $75
              dc2f 0085  ld   $85
              dc30 00a2  ld   $a2
              dc31 0058  ld   $58
              dc32 0035  ld   $35
              dc33 003f  ld   $3f
              dc34 00db  ld   $db
              dc35 0085  ld   $85
              dc36 00af  ld   $af
              dc37 005d  ld   $5d
              dc38 001a  ld   $1a
              dc39 000e  ld   $0e
              dc3a 00e6  ld   $e6
              dc3b 003c  ld   $3c
              dc3c 0035  ld   $35
              dc3d 0050  ld   $50
              dc3e 00cb  ld   $cb
              dc3f 0063  ld   $63
              dc40 00ff  ld   $ff
              dc41 0093  ld   $93
              dc42 001b  ld   $1b
              dc43 00ff  ld   $ff
              dc44 0059  ld   $59
              dc45 00a0  ld   $a0
              dc46 0044  ld   $44
              dc47 00cd  ld   $cd
              dc48 00df  ld   $df
              dc49 0075  ld   $75
              dc4a 0085  ld   $85
              dc4b 00a2  ld   $a2
              dc4c 005d  ld   $5d
              dc4d 00cd  ld   $cd
              dc4e 00ac  ld   $ac
              dc4f 0048  ld   $48
              dc50 0000  ld   $00
              dc51 0000  ld   $00
              dc52 0001  ld   $01
              dc53 00aa  ld   $aa
              dc54 0087  ld   $87
              dc55 0085  ld   $85
              dc56 00a2  ld   $a2
              dc57 005f  ld   $5f
              dc58 0085  ld   $85
              dc59 00da  ld   $da
              dc5a 005f  ld   $5f
              dc5b 008c  ld   $8c
              dc5c 00ff  ld   $ff
              dc5d 0035  ld   $35
              dc5e 003f  ld   $3f
              dc5f 00d9  ld   $d9
              dc60 0021  ld   $21
              dc61 0038  ld   $38
              dc62 0082  ld   $82
              dc63 0004  ld   $04
              dc64 0035  ld   $35
              dc65 003f  ld   $3f
              dc66 00c4  ld   $c4
              dc67 0059  ld   $59
              dc68 0001  ld   $01
              dc69 002b  ld   $2b
              dc6a 0036  ld   $36
              dc6b 0090  ld   $90
              dc6c 00d9  ld   $d9
              dc6d 0085  ld   $85
              dc6e 00bc  ld   $bc
              dc6f 005d  ld   $5d
              dc70 0085  ld   $85
              dc71 00bc  ld   $bc
              dc72 005d  ld   $5d
              dc73 0085  ld   $85
              dc74 00bc  ld   $bc
              dc75 005d  ld   $5d
              dc76 0085  ld   $85
              dc77 00bc  ld   $bc
              dc78 005d  ld   $5d
              dc79 008c  ld   $8c
              dc7a 00aa  ld   $aa
              dc7b 0035  ld   $35
              dc7c 0072  ld   $72
              dc7d 00d9  ld   $d9
              dc7e 0059  ld   $59
              dc7f 0002  ld   $02
              dc80 002b  ld   $2b
              dc81 0036  ld   $36
              dc82 0021  ld   $21
              dc83 0038  ld   $38
              dc84 0082  ld   $82
              dc85 00fa  ld   $fa
              dc86 0063  ld   $63
              dc87 00ff  ld   $ff
              dc88 0093  ld   $93
              dc89 001b  ld   $1b
              dc8a 00ff  ld   $ff
              dc8b 005a  ld   $5a
              dc8c 00a0  ld   $a0
              dc8d 0044  ld   $44
              dc8e 00cd  ld   $cd
              dc8f 00ca  ld   $ca
              dc90 0075  ld   $75
              dc91 0085  ld   $85
              dc92 00a2  ld   $a2
              dc93 005d  ld   $5d
              dc94 00cd  ld   $cd
              dc95 00ac  ld   $ac
              dc96 007a  ld   $7a
              dc97 0000  ld   $00
              dc98 0000  ld   $00
              dc99 0000  ld   $00
              * 5 times
              dc9c 0085  ld   $85
              dc9d 00a2  ld   $a2
              dc9e 005f  ld   $5f
              dc9f 0085  ld   $85
              dca0 00da  ld   $da
              dca1 005f  ld   $5f
              dca2 0085  ld   $85
              dca3 00bc  ld   $bc
              dca4 005d  ld   $5d
              dca5 0082  ld   $82
              dca6 0040  ld   $40
              dca7 0035  ld   $35
              dca8 003f  ld   $3f
              dca9 00be  ld   $be
              dcaa 0059  ld   $59
              dcab 0004  ld   $04
              dcac 002b  ld   $2b
              dcad 0036  ld   $36
              dcae 0085  ld   $85
              dcaf 00bc  ld   $bc
              dcb0 005d  ld   $5d
              dcb1 0085  ld   $85
              dcb2 00bc  ld   $bc
              dcb3 005d  ld   $5d
              dcb4 0021  ld   $21
              dcb5 0038  ld   $38
              dcb6 0082  ld   $82
              dcb7 00fe  ld   $fe
              dcb8 0063  ld   $63
              dcb9 00ff  ld   $ff
              dcba 00cd  ld   $cd
              dcbb 00df  ld   $df
              dcbc 0075  ld   $75
              dcbd 00cd  ld   $cd
              dcbe 00d5  ld   $d5
              dcbf 0077  ld   $77
              dcc0 0000  ld   $00
              dcc1 0000  ld   $00
              dcc2 0000  ld   $00
              * 5 times
              dcc5 0085  ld   $85
              dcc6 00a2  ld   $a2
              dcc7 005f  ld   $5f
              dcc8 0085  ld   $85
              dcc9 00da  ld   $da
              dcca 005f  ld   $5f
              dccb 0082  ld   $82
              dccc 00fe  ld   $fe
              dccd 0063  ld   $63
              dcce 00ff  ld   $ff
              dccf 0093  ld   $93
              dcd0 001b  ld   $1b
              dcd1 00ff  ld   $ff
              dcd2 005b  ld   $5b
              dcd3 00a0  ld   $a0
              dcd4 0055  ld   $55
              dcd5 00cd  ld   $cd
              dcd6 00c4  ld   $c4
              dcd7 0075  ld   $75
              dcd8 0021  ld   $21
              dcd9 0036  ld   $36
              dcda 008c  ld   $8c
              dcdb 0001  ld   $01
              dcdc 0035  ld   $35
              dcdd 0072  ld   $72
              dcde 00b2  ld   $b2
              dcdf 00cd  ld   $cd
              dce0 00b0  ld   $b0
              dce1 0069  ld   $69
              dce2 0000  ld   $00
              dce3 0000  ld   $00
              dce4 0000  ld   $00
              * 5 times
              dce7 0090  ld   $90
              dce8 00ba  ld   $ba
              dce9 00cd  ld   $cd
              dcea 00ba  ld   $ba
              dceb 0069  ld   $69
              dcec 0040  ld   $40
              dced 0000  ld   $00
              dcee 0000  ld   $00
              dcef 0000  ld   $00
              dcf0 0000  ld   $00
              dcf1 0085  ld   $85
              dcf2 00a2  ld   $a2
              dcf3 005f  ld   $5f
              dcf4 0085  ld   $85
              dcf5 00da  ld   $da
              dcf6 005f  ld   $5f
              dcf7 0082  ld   $82
              dcf8 00fe  ld   $fe
              dcf9 0063  ld   $63
              dcfa 00ff  ld   $ff
              dcfb fe00  bra  ac          ;+-----------------------------------+
              dcfc fcfd  bra  $dcfd       ;|                                   |
              dcfd 1418  ld   $18,y       ;| Trampoline for page $dc00 lookups |
              dcfe e006  jmp  y,$06       ;|                                   |
              dcff c218  st   [$18]       ;+-----------------------------------+
              dd00 00cd  ld   $cd
              dd01 00db  ld   $db
              dd02 0075  ld   $75
              dd03 0085  ld   $85
              dd04 00ce  ld   $ce
              dd05 005a  ld   $5a
              dd06 0085  ld   $85
              dd07 00a2  ld   $a2
              dd08 005b  ld   $5b
              dd09 0021  ld   $21
              dd0a 0038  ld   $38
              dd0b 0035  ld   $35
              dd0c 003f  ld   $3f
              dd0d 00d9  ld   $d9
              dd0e 001a  ld   $1a
              dd0f 000e  ld   $0e
              dd10 00e6  ld   $e6
              dd11 0078  ld   $78
              dd12 0035  ld   $35
              dd13 0050  ld   $50
              dd14 00c7  ld   $c7
              dd15 0063  ld   $63
              dd16 00ff  ld   $ff
              dd17 00cd  ld   $cd
              dd18 00f0  ld   $f0
              dd19 0075  ld   $75
              dd1a 00cd  ld   $cd
              dd1b 00e6  ld   $e6
              dd1c 0050  ld   $50
              dd1d 0000  ld   $00
              dd1e 0000  ld   $00
              dd1f 0002  ld   $02
              dd20 0000  ld   $00
              dd21 0000  ld   $00
              dd22 0085  ld   $85
              dd23 00a2  ld   $a2
              dd24 005f  ld   $5f
              dd25 0085  ld   $85
              dd26 00da  ld   $da
              dd27 005f  ld   $5f
              dd28 0082  ld   $82
              dd29 00fe  ld   $fe
              dd2a 0063  ld   $63
              dd2b 00ff  ld   $ff
              dd2c 0093  ld   $93
              dd2d 001b  ld   $1b
              dd2e 00ff  ld   $ff
              dd2f 005c  ld   $5c
              dd30 00a0  ld   $a0
              dd31 0041  ld   $41
              dd32 00cd  ld   $cd
              dd33 00dc  ld   $dc
              dd34 0075  ld   $75
              dd35 00cd  ld   $cd
              dd36 00a9  ld   $a9
              dd37 0051  ld   $51
              dd38 0000  ld   $00
              dd39 0000  ld   $00
              dd3a 0000  ld   $00
              * 5 times
              dd3d 002b  ld   $2b
              dd3e 003a  ld   $3a
              dd3f 002b  ld   $2b
              dd40 003c  ld   $3c
              dd41 001a  ld   $1a
              dd42 003f  ld   $3f
              dd43 0093  ld   $93
              dd44 003c  ld   $3c
              dd45 00f0  ld   $f0
              dd46 003c  ld   $3c
              dd47 001a  ld   $1a
              dd48 003e  ld   $3e
              dd49 0093  ld   $93
              dd4a 003c  ld   $3c
              dd4b 00f0  ld   $f0
              dd4c 003c  ld   $3c
              dd4d 001a  ld   $1a
              dd4e 0041  ld   $41
              dd4f 0093  ld   $93
              dd50 003c  ld   $3c
              dd51 00f0  ld   $f0
              dd52 003c  ld   $3c
              dd53 001a  ld   $1a
              dd54 0040  ld   $40
              dd55 0093  ld   $93
              dd56 003c  ld   $3c
              dd57 00f0  ld   $f0
              dd58 003c  ld   $3c
              dd59 0021  ld   $21
              dd5a 003a  ld   $3a
              dd5b 0085  ld   $85
              dd5c 00a2  ld   $a2
              dd5d 005f  ld   $5f
              dd5e 0085  ld   $85
              dd5f 00da  ld   $da
              dd60 005f  ld   $5f
              dd61 0082  ld   $82
              dd62 00fe  ld   $fe
              dd63 0035  ld   $35
              dd64 0072  ld   $72
              dd65 00da  ld   $da
              dd66 0085  ld   $85
              dd67 00bc  ld   $bc
              dd68 005d  ld   $5d
              dd69 008c  ld   $8c
              dd6a 00ff  ld   $ff
              dd6b 0035  ld   $35
              dd6c 003f  ld   $3f
              dd6d 00d2  ld   $d2
              dd6e 0063  ld   $63
              dd6f 00ff  ld   $ff
              dd70 0093  ld   $93
              dd71 001b  ld   $1b
              dd72 00ff  ld   $ff
              dd73 005d  ld   $5d
              dd74 00a0  ld   $a0
              dd75 0035  ld   $35
              dd76 00cd  ld   $cd
              dd77 00ab  ld   $ab
              dd78 0011  ld   $11
              dd79 0009  ld   $09
              dd7a 000b  ld   $0b
              dd7b 002b  ld   $2b
              dd7c 0022  ld   $22
              dd7d 0011  ld   $11
              dd7e 0078  ld   $78
              dd7f 0080  ld   $80
              dd80 00b4  ld   $b4
              dd81 00fa  ld   $fa
              dd82 00ff  ld   $ff
              dd83 00cd  ld   $cd
              dd84 00b8  ld   $b8
              dd85 0011  ld   $11
              dd86 0009  ld   $09
              dd87 000b  ld   $0b
              dd88 002b  ld   $2b
              dd89 0022  ld   $22
              dd8a 0011  ld   $11
              dd8b 007c  ld   $7c
              dd8c 0080  ld   $80
              dd8d 00b4  ld   $b4
              dd8e 00fa  ld   $fa
              dd8f 00ff  ld   $ff
              dd90 00cd  ld   $cd
              dd91 00d0  ld   $d0
              dd92 0059  ld   $59
              dd93 00ff  ld   $ff
              dd94 005e  ld   $5e
              dd95 002a  ld   $2a
              dd96 0059  ld   $59
              dd97 002a  ld   $2a
              dd98 002b  ld   $2b
              dd99 0024  ld   $24
              dd9a 00e3  ld   $e3
              dd9b 0001  ld   $01
              dd9c 002b  ld   $2b
              dd9d 0026  ld   $26
              dd9e 0011  ld   $11
              dd9f 0015  ld   $15
              dda0 000b  ld   $0b
              dda1 002b  ld   $2b
              dda2 0022  ld   $22
              dda3 00b4  ld   $b4
              dda4 00cb  ld   $cb
              dda5 001a  ld   $1a
              dda6 002a  ld   $2a
              dda7 00ff  ld   $ff
              dda8 0093  ld   $93
              dda9 001b  ld   $1b
              ddaa 00ff  ld   $ff
              ddab 005e  ld   $5e
              ddac 00a0  ld   $a0
              ddad 0029  ld   $29
              ddae 00cd  ld   $cd
              ddaf 00c4  ld   $c4
              ddb0 00fc  ld   $fc
              ddb1 0043  ld   $43
              ddb2 005e  ld   $5e
              ddb3 0043  ld   $43
              ddb4 0059  ld   $59
              ddb5 0008  ld   $08
              ddb6 002b  ld   $2b
              ddb7 0034  ld   $34
              ddb8 0021  ld   $21
              ddb9 0042  ld   $42
              ddba 0035  ld   $35
              ddbb 0053  ld   $53
              ddbc 00b8  ld   $b8
              ddbd 0099  ld   $99
              ddbe 0042  ld   $42
              ddbf 002b  ld   $2b
              ddc0 0042  ld   $42
              ddc1 0011  ld   $11
              ddc2 0021  ld   $21
              ddc3 0010  ld   $10
              ddc4 00fc  ld   $fc
              ddc5 0042  ld   $42
              ddc6 0090  ld   $90
              ddc7 00ba  ld   $ba
              ddc8 0099  ld   $99
              ddc9 0042  ld   $42
              ddca 002b  ld   $2b
              ddcb 0042  ld   $42
              ddcc 0021  ld   $21
              ddcd 0034  ld   $34
              ddce 00e6  ld   $e6
              ddcf 0001  ld   $01
              ddd0 0035  ld   $35
              ddd1 004d  ld   $4d
              ddd2 00a6  ld   $a6
              ddd3 00ff  ld   $ff
              ddd4 0093  ld   $93
              ddd5 001b  ld   $1b
              ddd6 00ff  ld   $ff
              ddd7 005f  ld   $5f
              ddd8 00a0  ld   $a0
              ddd9 0057  ld   $57
              ddda 00cd  ld   $cd
              dddb 00d6  ld   $d6
              dddc 0075  ld   $75
              dddd 002b  ld   $2b
              ddde 003a  ld   $3a
              dddf 0021  ld   $21
              dde0 0044  ld   $44
              dde1 002b  ld   $2b
              dde2 003c  ld   $3c
              dde3 0059  ld   $59
              dde4 00ff  ld   $ff
              dde5 00f0  ld   $f0
              dde6 003c  ld   $3c
              dde7 0093  ld   $93
              dde8 003c  ld   $3c
              dde9 00f0  ld   $f0
              ddea 003c  ld   $3c
              ddeb 0093  ld   $93
              ddec 003c  ld   $3c
              dded 0059  ld   $59
              ddee 0006  ld   $06
              ddef 002b  ld   $2b
              ddf0 0034  ld   $34
              ddf1 0021  ld   $21
              ddf2 003a  ld   $3a
              ddf3 00ad  ld   $ad
              ddf4 0093  ld   $93
              ddf5 003a  ld   $3a
              ddf6 00f0  ld   $f0
              ddf7 003c  ld   $3c
              ddf8 0093  ld   $93
              ddf9 003c  ld   $3c
              ddfa 0021  ld   $21
              ddfb fe00  bra  ac          ;+-----------------------------------+
              ddfc fcfd  bra  $ddfd       ;|                                   |
              ddfd 1418  ld   $18,y       ;| Trampoline for page $dd00 lookups |
              ddfe e006  jmp  y,$06       ;|                                   |
              ddff c218  st   [$18]       ;+-----------------------------------+
              de00 0034  ld   $34
              de01 00e6  ld   $e6
              de02 0001  ld   $01
              de03 0035  ld   $35
              de04 004d  ld   $4d
              de05 00b3  ld   $b3
              de06 0021  ld   $21
              de07 0044  ld   $44
              de08 002b  ld   $2b
              de09 0024  ld   $24
              de0a 00e3  ld   $e3
              de0b 0008  ld   $08
              de0c 002b  ld   $2b
              de0d 0026  ld   $26
              de0e 0011  ld   $11
              de0f 0015  ld   $15
              de10 000b  ld   $0b
              de11 002b  ld   $2b
              de12 0022  ld   $22
              de13 00b4  ld   $b4
              de14 00cb  ld   $cb
              de15 0063  ld   $63
              de16 00ff  ld   $ff
              de17 00cd  ld   $cd
              de18 00f2  ld   $f2
              de19 0075  ld   $75
              de1a 0059  ld   $59
              de1b 0008  ld   $08
              de1c 002b  ld   $2b
              de1d 0034  ld   $34
              de1e 0085  ld   $85
              de1f 00bc  ld   $bc
              de20 005d  ld   $5d
              de21 0082  ld   $82
              de22 0080  ld   $80
              de23 0035  ld   $35
              de24 003f  ld   $3f
              de25 00ec  ld   $ec
              de26 0021  ld   $21
              de27 0034  ld   $34
              de28 00e6  ld   $e6
              de29 0001  ld   $01
              de2a 0035  ld   $35
              de2b 004d  ld   $4d
              de2c 00db  ld   $db
              de2d 001a  ld   $1a
              de2e 002a  ld   $2a
              de2f 002b  ld   $2b
              de30 0038  ld   $38
              de31 0063  ld   $63
              de32 00ff  ld   $ff
              de33 0093  ld   $93
              de34 001b  ld   $1b
              de35 00ff  ld   $ff
              de36 0060  ld   $60
              de37 00a0  ld   $a0
              de38 004f  ld   $4f
              de39 00cd  ld   $cd
              de3a 00c3  ld   $c3
              de3b 0075  ld   $75
              de3c 0085  ld   $85
              de3d 00cc  ld   $cc
              de3e 0058  ld   $58
              de3f 0085  ld   $85
              de40 00a2  ld   $a2
              de41 0059  ld   $59
              de42 0085  ld   $85
              de43 00c8  ld   $c8
              de44 005b  ld   $5b
              de45 0021  ld   $21
              de46 0036  ld   $36
              de47 00e6  ld   $e6
              de48 0002  ld   $02
              de49 0035  ld   $35
              de4a 0072  ld   $72
              de4b 00b4  ld   $b4
              de4c 0085  ld   $85
              de4d 00a2  ld   $a2
              de4e 005a  ld   $5a
              de4f 0021  ld   $21
              de50 0036  ld   $36
              de51 00e6  ld   $e6
              de52 0002  ld   $02
              de53 0035  ld   $35
              de54 004d  ld   $4d
              de55 00be  ld   $be
              de56 0085  ld   $85
              de57 00df  ld   $df
              de58 005b  ld   $5b
              de59 0085  ld   $85
              de5a 00af  ld   $af
              de5b 005d  ld   $5d
              de5c 0063  ld   $63
              de5d 00ff  ld   $ff
              de5e 00cd  ld   $cd
              de5f 00ea  ld   $ea
              de60 0075  ld   $75
              de61 0085  ld   $85
              de62 00a2  ld   $a2
              de63 0063  ld   $63
              de64 00cd  ld   $cd
              de65 00d3  ld   $d3
              de66 0056  ld   $56
              de67 006f  ld   $6f
              de68 006c  ld   $6c
              de69 002e  ld   $2e
              de6a 0049  ld   $49
              de6b 0044  ld   $44
              de6c 0020  ld   $20
              de6d 0000  ld   $00
              de6e 0085  ld   $85
              de6f 00a2  ld   $a2
              de70 0069  ld   $69
              de71 0059  ld   $59
              de72 000b  ld   $0b
              de73 0099  ld   $99
              de74 0030  ld   $30
              de75 00f6  ld   $f6
              de76 002b  ld   $2b
              de77 0046  ld   $46
              de78 0085  ld   $85
              de79 00ce  ld   $ce
              de7a 0067  ld   $67
              de7b 0011  ld   $11
              de7c 0000  ld   $00
              de7d 0002  ld   $02
              de7e 00fc  ld   $fc
              de7f 0046  ld   $46
              de80 0085  ld   $85
              de81 00bb  ld   $bb
              de82 0068  ld   $68
              de83 0063  ld   $63
              de84 00ff  ld   $ff
              de85 0093  ld   $93
              de86 001b  ld   $1b
              de87 00ff  ld   $ff
              de88 0061  ld   $61
              de89 00a0  ld   $a0
              de8a 005e  ld   $5e
              de8b 00cd  ld   $cd
              de8c 00ea  ld   $ea
              de8d 0075  ld   $75
              de8e 0059  ld   $59
              de8f 0000  ld   $00
              de90 002b  ld   $2b
              de91 0040  ld   $40
              de92 002b  ld   $2b
              de93 003e  ld   $3e
              de94 0085  ld   $85
              de95 00a2  ld   $a2
              de96 0063  ld   $63
              de97 00cd  ld   $cd
              de98 00b1  ld   $b1
              de99 004d  ld   $4d
              de9a 0042  ld   $42
              de9b 0052  ld   $52
              de9c 0020  ld   $20
              de9d 0000  ld   $00
              de9e 0085  ld   $85
              de9f 00a2  ld   $a2
              dea0 0069  ld   $69
              dea1 0011  ld   $11
              dea2 00fe  ld   $fe
              dea3 0001  ld   $01
              dea4 0099  ld   $99
              dea5 0030  ld   $30
              dea6 00f6  ld   $f6
              dea7 002b  ld   $2b
              dea8 0046  ld   $46
              dea9 0011  ld   $11
              deaa 0055  ld   $55
              deab 00aa  ld   $aa
              deac 00fc  ld   $fc
              dead 0046  ld   $46
              deae 0035  ld   $35
              deaf 0072  ld   $72
              deb0 00e8  ld   $e8
              deb1 0011  ld   $11
              deb2 00c6  ld   $c6
              deb3 0001  ld   $01
              deb4 0099  ld   $99
              deb5 0030  ld   $30
              deb6 00f6  ld   $f6
              deb7 002b  ld   $2b
              deb8 0040  ld   $40
              deb9 0011  ld   $11
              deba 00c8  ld   $c8
              debb 0001  ld   $01
              debc 0099  ld   $99
              debd 0030  ld   $30
              debe 00f6  ld   $f6
              debf 002b  ld   $2b
              dec0 003e  ld   $3e
              dec1 0011  ld   $11
              dec2 00c2  ld   $c2
              dec3 0001  ld   $01
              dec4 0099  ld   $99
              dec5 0030  ld   $30
              dec6 00ad  ld   $ad
              dec7 002b  ld   $2b
              dec8 0046  ld   $46
              dec9 0085  ld   $85
              deca 00a2  ld   $a2
              decb 0068  ld   $68
              decc 0059  ld   $59
              decd 000b  ld   $0b
              dece 00fc  ld   $fc
              decf 0046  ld   $46
              ded0 0035  ld   $35
              ded1 003f  ld   $3f
              ded2 00e8  ld   $e8
              ded3 008c  ld   $8c
              ded4 0007  ld   $07
              ded5 0063  ld   $63
              ded6 00ff  ld   $ff
              ded7 00cd  ld   $cd
              ded8 00f9  ld   $f9
              ded9 002b  ld   $2b
              deda 0048  ld   $48
              dedb 0099  ld   $99
              dedc 0048  ld   $48
              dedd 00e6  ld   $e6
              dede 0001  ld   $01
              dedf 005e  ld   $5e
              dee0 0019  ld   $19
              dee1 0088  ld   $88
              dee2 00ff  ld   $ff
              dee3 002b  ld   $2b
              dee4 004a  ld   $4a
              dee5 00ff  ld   $ff
              dee6 0093  ld   $93
              dee7 001b  ld   $1b
              dee8 00ff  ld   $ff
              dee9 0062  ld   $62
              deea 00a0  ld   $a0
              deeb 0060  ld   $60
              deec 00cd  ld   $cd
              deed 00fb  ld   $fb
              deee 0075  ld   $75
              deef 0059  ld   $59
              def0 000d  ld   $0d
              def1 0099  ld   $99
              def2 0030  ld   $30
              def3 00ad  ld   $ad
              def4 0085  ld   $85
              def5 00ee  ld   $ee
              def6 0061  ld   $61
              def7 0021  ld   $21
              def8 0040  ld   $40
              def9 002b  ld   $2b
              defa 004c  ld   $4c
              defb fe00  bra  ac          ;+-----------------------------------+
              defc fcfd  bra  $defd       ;|                                   |
              defd 1418  ld   $18,y       ;| Trampoline for page $de00 lookups |
              defe e006  jmp  y,$06       ;|                                   |
              deff c218  st   [$18]       ;+-----------------------------------+
              df00 0021  ld   $21
              df01 003e  ld   $3e
              df02 002b  ld   $2b
              df03 004e  ld   $4e
              df04 0059  ld   $59
              df05 000e  ld   $0e
              df06 0099  ld   $99
              df07 0030  ld   $30
              df08 00f6  ld   $f6
              df09 002b  ld   $2b
              df0a 0050  ld   $50
              df0b 0085  ld   $85
              df0c 00d2  ld   $d2
              df0d 0066  ld   $66
              df0e 002b  ld   $2b
              df0f 0052  ld   $52
              df10 0021  ld   $21
              df11 004e  ld   $4e
              df12 002b  ld   $2b
              df13 0054  ld   $54
              df14 0059  ld   $59
              df15 0024  ld   $24
              df16 0099  ld   $99
              df17 0030  ld   $30
              df18 00f6  ld   $f6
              df19 002b  ld   $2b
              df1a 0050  ld   $50
              df1b 0059  ld   $59
              df1c 0026  ld   $26
              df1d 0099  ld   $99
              df1e 0030  ld   $30
              df1f 00f6  ld   $f6
              df20 002b  ld   $2b
              df21 0056  ld   $56
              df22 0085  ld   $85
              df23 00d6  ld   $d6
              df24 0066  ld   $66
              df25 0085  ld   $85
              df26 00d6  ld   $d6
              df27 0066  ld   $66
              df28 0059  ld   $59
              df29 0000  ld   $00
              df2a 00b8  ld   $b8
              df2b 0048  ld   $48
              df2c 00b8  ld   $b8
              df2d 0048  ld   $48
              df2e 002b  ld   $2b
              df2f 0050  ld   $50
              df30 0011  ld   $11
              df31 00ff  ld   $ff
              df32 00ff  ld   $ff
              df33 002b  ld   $2b
              df34 0056  ld   $56
              df35 0085  ld   $85
              df36 00d6  ld   $d6
              df37 0066  ld   $66
              df38 002b  ld   $2b
              df39 0058  ld   $58
              df3a 0021  ld   $21
              df3b 004e  ld   $4e
              df3c 002b  ld   $2b
              df3d 005a  ld   $5a
              df3e 0059  ld   $59
              df3f 002c  ld   $2c
              df40 0099  ld   $99
              df41 0030  ld   $30
              df42 00f6  ld   $f6
              df43 002b  ld   $2b
              df44 005c  ld   $5c
              df45 0059  ld   $59
              df46 002e  ld   $2e
              df47 0099  ld   $99
              df48 0030  ld   $30
              df49 00f6  ld   $f6
              df4a 002b  ld   $2b
              df4b 005e  ld   $5e
              df4c 0063  ld   $63
              df4d 00ff  ld   $ff
              df4e 0093  ld   $93
              df4f 001b  ld   $1b
              df50 00ff  ld   $ff
              df51 0063  ld   $63
              df52 00a0  ld   $a0
              df53 003e  ld   $3e
              df54 00cd  ld   $cd
              df55 00d9  ld   $d9
              df56 0075  ld   $75
              df57 0085  ld   $85
              df58 00a2  ld   $a2
              df59 005d  ld   $5d
              df5a 0021  ld   $21
              df5b 0036  ld   $36
              df5c 00e6  ld   $e6
              df5d 0002  ld   $02
              df5e 0035  ld   $35
              df5f 004d  ld   $4d
              df60 00ae  ld   $ae
              df61 0085  ld   $85
              df62 00a2  ld   $a2
              df63 0066  ld   $66
              df64 0085  ld   $85
              df65 00a2  ld   $a2
              df66 005c  ld   $5c
              df67 001a  ld   $1a
              df68 002a  ld   $2a
              df69 008c  ld   $8c
              df6a 00fe  ld   $fe
              df6b 0035  ld   $35
              df6c 0072  ld   $72
              df6d 00d7  ld   $d7
              df6e 0011  ld   $11
              df6f 0015  ld   $15
              df70 000b  ld   $0b
              df71 002b  ld   $2b
              df72 0022  ld   $22
              df73 0011  ld   $11
              df74 0000  ld   $00
              df75 007c  ld   $7c
              df76 002b  ld   $2b
              df77 0024  ld   $24
              df78 0021  ld   $21
              df79 0030  ld   $30
              df7a 002b  ld   $2b
              df7b 0026  ld   $26
              df7c 00b4  ld   $b4
              df7d 00cb  ld   $cb
              df7e 0093  ld   $93
              df7f 0027  ld   $27
              df80 00b4  ld   $b4
              df81 00cb  ld   $cb
              df82 0085  ld   $85
              df83 00bc  ld   $bc
              df84 005d  ld   $5d
              df85 0085  ld   $85
              df86 00bc  ld   $bc
              df87 005d  ld   $5d
              df88 0085  ld   $85
              df89 00af  ld   $af
              df8a 005d  ld   $5d
              df8b 0059  ld   $59
              df8c 0000  ld   $00
              df8d 0063  ld   $63
              df8e 00ff  ld   $ff
              df8f 0093  ld   $93
              df90 001b  ld   $1b
              df91 00ff  ld   $ff
              df92 0064  ld   $64
              df93 00a0  ld   $a0
              df94 0050  ld   $50
              df95 00cd  ld   $cd
              df96 00eb  ld   $eb
              df97 0075  ld   $75
              df98 0021  ld   $21
              df99 0060  ld   $60
              df9a 00fc  ld   $fc
              df9b 0062  ld   $62
              df9c 0035  ld   $35
              df9d 0072  ld   $72
              df9e 00ae  ld   $ae
              df9f 0021  ld   $21
              dfa0 0064  ld   $64
              dfa1 00fc  ld   $fc
              dfa2 0066  ld   $66
              dfa3 001a  ld   $1a
              dfa4 0019  ld   $19
              dfa5 0035  ld   $35
              dfa6 0072  ld   $72
              dfa7 00b5  ld   $b5
              dfa8 0021  ld   $21
              dfa9 0066  ld   $66
              dfaa 0090  ld   $90
              dfab 00bb  ld   $bb
              dfac 0021  ld   $21
              dfad 0064  ld   $64
              dfae 0088  ld   $88
              dfaf 00ff  ld   $ff
              dfb0 00e3  ld   $e3
              dfb1 0001  ld   $01
              dfb2 00b8  ld   $b8
              dfb3 0064  ld   $64
              dfb4 002b  ld   $2b
              dfb5 0068  ld   $68
              dfb6 0035  ld   $35
              dfb7 003f  ld   $3f
              dfb8 00e5  ld   $e5
              dfb9 0011  ld   $11
              dfba 00ff  ld   $ff
              dfbb 0001  ld   $01
              dfbc 00f8  ld   $f8
              dfbd 0064  ld   $64
              dfbe 0035  ld   $35
              dfbf 003f  ld   $3f
              dfc0 00ce  ld   $ce
              dfc1 0099  ld   $99
              dfc2 0030  ld   $30
              dfc3 0090  ld   $90
              dfc4 00e5  ld   $e5
              dfc5 0085  ld   $85
              dfc6 00a2  ld   $a2
              dfc7 0063  ld   $63
              dfc8 0035  ld   $35
              dfc9 0072  ld   $72
              dfca 00db  ld   $db
              dfcb 0085  ld   $85
              dfcc 00a2  ld   $a2
              dfcd 0075  ld   $75
              dfce 0021  ld   $21
              dfcf 0030  ld   $30
              dfd0 0090  ld   $90
              dfd1 00e5  ld   $e5
              dfd2 0021  ld   $21
              dfd3 0060  ld   $60
              dfd4 002b  ld   $2b
              dfd5 0062  ld   $62
              dfd6 0021  ld   $21
              dfd7 0064  ld   $64
              dfd8 002b  ld   $2b
              dfd9 0066  ld   $66
              dfda 0059  ld   $59
              dfdb 0000  ld   $00
              dfdc 002b  ld   $2b
              dfdd 006a  ld   $6a
              dfde 0021  ld   $21
              dfdf 0068  ld   $68
              dfe0 0063  ld   $63
              dfe1 00ff  ld   $ff
              dfe2 0093  ld   $93
              dfe3 001b  ld   $1b
              dfe4 00ff  ld   $ff
              dfe5 0065  ld   $65
              dfe6 00a0  ld   $a0
              dfe7 0060  ld   $60
              dfe8 00cd  ld   $cd
              dfe9 00cb  ld   $cb
              dfea 0075  ld   $75
              dfeb 0059  ld   $59
              dfec 0000  ld   $00
              dfed 002b  ld   $2b
              dfee 0064  ld   $64
              dfef 002b  ld   $2b
              dff0 0060  ld   $60
              dff1 0021  ld   $21
              dff2 003a  ld   $3a
              dff3 00e3  ld   $e3
              dff4 001c  ld   $1c
              dff5 00f6  ld   $f6
              dff6 002b  ld   $2b
              dff7 0066  ld   $66
              dff8 0021  ld   $21
              dff9 003a  ld   $3a
              dffa 00e3  ld   $e3
              dffb fe00  bra  ac          ;+-----------------------------------+
              dffc fcfd  bra  $dffd       ;|                                   |
              dffd 1418  ld   $18,y       ;| Trampoline for page $df00 lookups |
              dffe e006  jmp  y,$06       ;|                                   |
              dfff c218  st   [$18]       ;+-----------------------------------+
              e000 001e  ld   $1e
              e001 00f6  ld   $f6
              e002 002b  ld   $2b
              e003 0062  ld   $62
              e004 0021  ld   $21
              e005 003a  ld   $3a
              e006 00e3  ld   $e3
              e007 001a  ld   $1a
              e008 00f6  ld   $f6
              e009 002b  ld   $2b
              e00a 004c  ld   $4c
              e00b 0021  ld   $21
              e00c 003a  ld   $3a
              e00d 00e3  ld   $e3
              e00e 0014  ld   $14
              e00f 00f6  ld   $f6
              e010 002b  ld   $2b
              e011 004e  ld   $4e
              e012 0085  ld   $85
              e013 00a2  ld   $a2
              e014 0076  ld   $76
              e015 0085  ld   $85
              e016 00cf  ld   $cf
              e017 0065  ld   $65
              e018 0063  ld   $63
              e019 00ff  ld   $ff
              e01a 00cd  ld   $cd
              e01b 00fb  ld   $fb
              e01c 0075  ld   $75
              e01d 001a  ld   $1a
              e01e 004f  ld   $4f
              e01f 0082  ld   $82
              e020 000f  ld   $0f
              e021 005e  ld   $5e
              e022 004f  ld   $4f
              e023 0059  ld   $59
              e024 0001  ld   $01
              e025 002b  ld   $2b
              e026 0046  ld   $46
              e027 00b8  ld   $b8
              e028 0048  ld   $48
              e029 0035  ld   $35
              e02a 0053  ld   $53
              e02b 00e6  ld   $e6
              e02c 0085  ld   $85
              e02d 00c2  ld   $c2
              e02e 0066  ld   $66
              e02f 0021  ld   $21
              e030 0046  ld   $46
              e031 0099  ld   $99
              e032 0046  ld   $46
              e033 0090  ld   $90
              e034 00d6  ld   $d6
              e035 0021  ld   $21
              e036 0058  ld   $58
              e037 002b  ld   $2b
              e038 0050  ld   $50
              e039 0021  ld   $21
              e03a 005a  ld   $5a
              e03b 002b  ld   $2b
              e03c 0056  ld   $56
              e03d 0085  ld   $85
              e03e 00d6  ld   $d6
              e03f 0066  ld   $66
              e040 0021  ld   $21
              e041 004c  ld   $4c
              e042 002b  ld   $2b
              e043 0040  ld   $40
              e044 0021  ld   $21
              e045 004e  ld   $4e
              e046 002b  ld   $2b
              e047 003e  ld   $3e
              e048 0063  ld   $63
              e049 00ff  ld   $ff
              e04a 0093  ld   $93
              e04b 001b  ld   $1b
              e04c 00ff  ld   $ff
              e04d 0066  ld   $66
              e04e 00a0  ld   $a0
              e04f 005f  ld   $5f
              e050 00cd  ld   $cd
              e051 00be  ld   $be
              e052 0075  ld   $75
              e053 0059  ld   $59
              e054 0000  ld   $00
              e055 005e  ld   $5e
              e056 0050  ld   $50
              e057 001a  ld   $1a
              e058 004c  ld   $4c
              e059 005e  ld   $5e
              e05a 0051  ld   $51
              e05b 001a  ld   $1a
              e05c 004d  ld   $4d
              e05d 005e  ld   $5e
              e05e 0056  ld   $56
              e05f 001a  ld   $1a
              e060 004e  ld   $4e
              e061 005e  ld   $5e
              e062 0057  ld   $57
              e063 0021  ld   $21
              e064 0050  ld   $50
              e065 002b  ld   $2b
              e066 004c  ld   $4c
              e067 0021  ld   $21
              e068 0056  ld   $56
              e069 002b  ld   $2b
              e06a 004e  ld   $4e
              e06b 0085  ld   $85
              e06c 00d6  ld   $d6
              e06d 0066  ld   $66
              e06e 0063  ld   $63
              e06f 00ff  ld   $ff
              e070 00cd  ld   $cd
              e071 00fa  ld   $fa
              e072 0075  ld   $75
              e073 0021  ld   $21
              e074 004c  ld   $4c
              e075 002b  ld   $2b
              e076 0050  ld   $50
              e077 0021  ld   $21
              e078 004e  ld   $4e
              e079 002b  ld   $2b
              e07a 0056  ld   $56
              e07b 0085  ld   $85
              e07c 00d6  ld   $d6
              e07d 0066  ld   $66
              e07e 0021  ld   $21
              e07f 0056  ld   $56
              e080 0063  ld   $63
              e081 00ff  ld   $ff
              e082 0059  ld   $59
              e083 0000  ld   $00
              e084 002b  ld   $2b
              e085 0056  ld   $56
              e086 0021  ld   $21
              e087 004c  ld   $4c
              e088 00fc  ld   $fc
              e089 0050  ld   $50
              e08a 0035  ld   $35
              e08b 0053  ld   $53
              e08c 00df  ld   $df
              e08d 0021  ld   $21
              e08e 004c  ld   $4c
              e08f 0090  ld   $90
              e090 00e2  ld   $e2
              e091 0011  ld   $11
              e092 0000  ld   $00
              e093 0080  ld   $80
              e094 0099  ld   $99
              e095 0050  ld   $50
              e096 0035  ld   $35
              e097 0050  ld   $50
              e098 00ed  ld   $ed
              e099 0021  ld   $21
              e09a 004e  ld   $4e
              e09b 00e3  ld   $e3
              e09c 0001  ld   $01
              e09d 002b  ld   $2b
              e09e 004e  ld   $4e
              e09f 0021  ld   $21
              e0a0 004e  ld   $4e
              e0a1 0099  ld   $99
              e0a2 0056  ld   $56
              e0a3 002b  ld   $2b
              e0a4 004e  ld   $4e
              e0a5 0021  ld   $21
              e0a6 004c  ld   $4c
              e0a7 0099  ld   $99
              e0a8 0050  ld   $50
              e0a9 002b  ld   $2b
              e0aa 004c  ld   $4c
              e0ab 00ff  ld   $ff
              e0ac 0093  ld   $93
              e0ad 001b  ld   $1b
              e0ae 00ff  ld   $ff
              e0af 0067  ld   $67
              e0b0 00a0  ld   $a0
              e0b1 0040  ld   $40
              e0b2 00cd  ld   $cd
              e0b3 00b8  ld   $b8
              e0b4 0075  ld   $75
              e0b5 00e6  ld   $e6
              e0b6 0020  ld   $20
              e0b7 0035  ld   $35
              e0b8 0053  ld   $53
              e0b9 00aa  ld   $aa
              e0ba 0059  ld   $59
              e0bb 007f  ld   $7f
              e0bc 0090  ld   $90
              e0bd 00b1  ld   $b1
              e0be 00e6  ld   $e6
              e0bf 0060  ld   $60
              e0c0 0035  ld   $35
              e0c1 0050  ld   $50
              e0c2 00b1  ld   $b1
              e0c3 0059  ld   $59
              e0c4 007f  ld   $7f
              e0c5 0082  ld   $82
              e0c6 007f  ld   $7f
              e0c7 0085  ld   $85
              e0c8 00a2  ld   $a2
              e0c9 006e  ld   $6e
              e0ca 0063  ld   $63
              e0cb 00ff  ld   $ff
              e0cc 00cd  ld   $cd
              e0cd 00ca  ld   $ca
              e0ce 0075  ld   $75
              e0cf 0021  ld   $21
              e0d0 004e  ld   $4e
              e0d1 0085  ld   $85
              e0d2 00ce  ld   $ce
              e0d3 0067  ld   $67
              e0d4 0021  ld   $21
              e0d5 004c  ld   $4c
              e0d6 0085  ld   $85
              e0d7 00ce  ld   $ce
              e0d8 0067  ld   $67
              e0d9 0085  ld   $85
              e0da 00a2  ld   $a2
              e0db 006d  ld   $6d
              e0dc 0063  ld   $63
              e0dd 00ff  ld   $ff
              e0de 00cd  ld   $cd
              e0df 00db  ld   $db
              e0e0 0075  ld   $75
              e0e1 002b  ld   $2b
              e0e2 0046  ld   $46
              e0e3 001a  ld   $1a
              e0e4 0047  ld   $47
              e0e5 0085  ld   $85
              e0e6 00a2  ld   $a2
              e0e7 0068  ld   $68
              e0e8 001a  ld   $1a
              e0e9 0046  ld   $46
              e0ea 0085  ld   $85
              e0eb 00a2  ld   $a2
              e0ec 0068  ld   $68
              e0ed 0063  ld   $63
              e0ee 00ff  ld   $ff
              e0ef 0093  ld   $93
              e0f0 001b  ld   $1b
              e0f1 00ff  ld   $ff
              e0f2 0068  ld   $68
              e0f3 00a0  ld   $a0
              e0f4 0054  ld   $54
              e0f5 00cd  ld   $cd
              e0f6 00b7  ld   $b7
              e0f7 0075  ld   $75
              e0f8 00df  ld   $df
              e0f9 00fe  ld   $fe
              e0fa 00ec  ld   $ec
              e0fb fe00  bra  ac          ;+-----------------------------------+
              e0fc fcfd  bra  $e0fd       ;|                                   |
              e0fd 1418  ld   $18,y       ;| Trampoline for page $e000 lookups |
              e0fe e006  jmp  y,$06       ;|                                   |
              e0ff c218  st   [$18]       ;+-----------------------------------+
              e100 0000  ld   $00
              e101 00e9  ld   $e9
              e102 00e9  ld   $e9
              e103 00e9  ld   $e9
              e104 00e9  ld   $e9
              e105 001a  ld   $1a
              e106 0019  ld   $19
              e107 0085  ld   $85
              e108 00de  ld   $de
              e109 0068  ld   $68
              e10a 00ee  ld   $ee
              e10b 0000  ld   $00
              e10c 00df  ld   $df
              e10d 0002  ld   $02
              e10e 0085  ld   $85
              e10f 00de  ld   $de
              e110 0068  ld   $68
              e111 0063  ld   $63
              e112 00ff  ld   $ff
              e113 00cd  ld   $cd
              e114 00da  ld   $da
              e115 0075  ld   $75
              e116 002b  ld   $2b
              e117 0046  ld   $46
              e118 0035  ld   $35
              e119 0072  ld   $72
              e11a 00c8  ld   $c8
              e11b 00cd  ld   $cd
              e11c 00c6  ld   $c6
              e11d 0020  ld   $20
              e11e 004f  ld   $4f
              e11f 004b  ld   $4b
              e120 000a  ld   $0a
              e121 0000  ld   $00
              e122 0090  ld   $90
              e123 00d3  ld   $d3
              e124 00cd  ld   $cd
              e125 00d3  ld   $d3
              e126 0020  ld   $20
              e127 0046  ld   $46
              e128 0041  ld   $41
              e129 0049  ld   $49
              e12a 004c  ld   $4c
              e12b 0045  ld   $45
              e12c 0044  ld   $44
              e12d 000a  ld   $0a
              e12e 0000  ld   $00
              e12f 0085  ld   $85
              e130 00a2  ld   $a2
              e131 0069  ld   $69
              e132 0021  ld   $21
              e133 0046  ld   $46
              e134 0063  ld   $63
              e135 00ff  ld   $ff
              e136 00cd  ld   $cd
              e137 00ef  ld   $ef
              e138 0075  ld   $75
              e139 0082  ld   $82
              e13a 000f  ld   $0f
              e13b 00e6  ld   $e6
              e13c 000a  ld   $0a
              e13d 0035  ld   $35
              e13e 0053  ld   $53
              e13f 00e8  ld   $e8
              e140 00e3  ld   $e3
              e141 003a  ld   $3a
              e142 0090  ld   $90
              e143 00ea  ld   $ea
              e144 00e3  ld   $e3
              e145 0041  ld   $41
              e146 0085  ld   $85
              e147 00a2  ld   $a2
              e148 006e  ld   $6e
              e149 0063  ld   $63
              e14a 00ff  ld   $ff
              e14b 0093  ld   $93
              e14c 001b  ld   $1b
              e14d 00ff  ld   $ff
              e14e 0069  ld   $69
              e14f 00a0  ld   $a0
              e150 004f  ld   $4f
              e151 00cd  ld   $cd
              e152 00be  ld   $be
              e153 0075  ld   $75
              e154 002b  ld   $2b
              e155 003c  ld   $3c
              e156 0021  ld   $21
              e157 003c  ld   $3c
              e158 00ad  ld   $ad
              e159 0035  ld   $35
              e15a 003f  ld   $3f
              e15b 00bc  ld   $bc
              e15c 008c  ld   $8c
              e15d 000a  ld   $0a
              e15e 0035  ld   $35
              e15f 003f  ld   $3f
              e160 00b5  ld   $b5
              e161 008c  ld   $8c
              e162 000a  ld   $0a
              e163 0085  ld   $85
              e164 00a2  ld   $a2
              e165 006e  ld   $6e
              e166 0090  ld   $90
              e167 00b8  ld   $b8
              e168 0085  ld   $85
              e169 00a2  ld   $a2
              e16a 006d  ld   $6d
              e16b 0093  ld   $93
              e16c 003c  ld   $3c
              e16d 0090  ld   $90
              e16e 00a3  ld   $a3
              e16f 0063  ld   $63
              e170 00ff  ld   $ff
              e171 00cd  ld   $cd
              e172 00ea  ld   $ea
              e173 0075  ld   $75
              e174 00cd  ld   $cd
              e175 00cb  ld   $cb
              e176 0056  ld   $56
              e177 006f  ld   $6f
              e178 006c  ld   $6c
              e179 0075  ld   $75
              e17a 006d  ld   $6d
              e17b 0065  ld   $65
              e17c 0020  ld   $20
              e17d 0000  ld   $00
              e17e 0085  ld   $85
              e17f 00a2  ld   $a2
              e180 0069  ld   $69
              e181 0021  ld   $21
              e182 003a  ld   $3a
              e183 002b  ld   $2b
              e184 003c  ld   $3c
              e185 0059  ld   $59
              e186 000b  ld   $0b
              e187 002b  ld   $2b
              e188 0046  ld   $46
              e189 0021  ld   $21
              e18a 003c  ld   $3c
              e18b 00ad  ld   $ad
              e18c 0093  ld   $93
              e18d 003c  ld   $3c
              e18e 0085  ld   $85
              e18f 00a2  ld   $a2
              e190 0067  ld   $67
              e191 0021  ld   $21
              e192 0046  ld   $46
              e193 00e6  ld   $e6
              e194 0001  ld   $01
              e195 0035  ld   $35
              e196 004d  ld   $4d
              e197 00d4  ld   $d4
              e198 0085  ld   $85
              e199 00a2  ld   $a2
              e19a 006d  ld   $6d
              e19b 0063  ld   $63
              e19c 00ff  ld   $ff
              e19d 0093  ld   $93
              e19e 001b  ld   $1b
              e19f 00ff  ld   $ff
              e1a0 006a  ld   $6a
              e1a1 00a0  ld   $a0
              e1a2 0050  ld   $50
              e1a3 00cd  ld   $cd
              e1a4 00b5  ld   $b5
              e1a5 0075  ld   $75
              e1a6 002b  ld   $2b
              e1a7 006c  ld   $6c
              e1a8 0059  ld   $59
              e1a9 0030  ld   $30
              e1aa 002b  ld   $2b
              e1ab 0046  ld   $46
              e1ac 0059  ld   $59
              e1ad 000a  ld   $0a
              e1ae 0085  ld   $85
              e1af 00a2  ld   $a2
              e1b0 006c  ld   $6c
              e1b1 0021  ld   $21
              e1b2 006c  ld   $6c
              e1b3 00e3  ld   $e3
              e1b4 0030  ld   $30
              e1b5 0085  ld   $85
              e1b6 00a2  ld   $a2
              e1b7 006e  ld   $6e
              e1b8 0063  ld   $63
              e1b9 00ff  ld   $ff
              e1ba 00cd  ld   $cd
              e1bb 00eb  ld   $eb
              e1bc 0075  ld   $75
              e1bd 0011  ld   $11
              e1be 0000  ld   $00
              e1bf 0006  ld   $06
              e1c0 002b  ld   $2b
              e1c1 0022  ld   $22
              e1c2 0021  ld   $21
              e1c3 003a  ld   $3a
              e1c4 00e3  ld   $e3
              e1c5 0011  ld   $11
              e1c6 00ad  ld   $ad
              e1c7 00b4  ld   $b4
              e1c8 00f6  ld   $f6
              e1c9 00e6  ld   $e6
              e1ca 0014  ld   $14
              e1cb 0035  ld   $35
              e1cc 0053  ld   $53
              e1cd 00cb  ld   $cb
              e1ce 00e3  ld   $e3
              e1cf 0064  ld   $64
              e1d0 0085  ld   $85
              e1d1 00a2  ld   $a2
              e1d2 006a  ld   $6a
              e1d3 0011  ld   $11
              e1d4 006d  ld   $6d
              e1d5 0006  ld   $06
              e1d6 002b  ld   $2b
              e1d7 0022  ld   $22
              e1d8 0021  ld   $21
              e1d9 003a  ld   $3a
              e1da 00e3  ld   $e3
              e1db 0010  ld   $10
              e1dc 00f6  ld   $f6
              e1dd 00b4  ld   $b4
              e1de 00f5  ld   $f5
              e1df 0082  ld   $82
              e1e0 000f  ld   $0f
              e1e1 0085  ld   $85
              e1e2 00a2  ld   $a2
              e1e3 006a  ld   $6a
              e1e4 0021  ld   $21
              e1e5 003a  ld   $3a
              e1e6 00e3  ld   $e3
              e1e7 0010  ld   $10
              e1e8 00ad  ld   $ad
              e1e9 0082  ld   $82
              e1ea 001f  ld   $1f
              e1eb 0085  ld   $85
              e1ec 00a2  ld   $a2
              e1ed 006a  ld   $6a
              e1ee 0063  ld   $63
              e1ef 00ff  ld   $ff
              e1f0 0093  ld   $93
              e1f1 001b  ld   $1b
              e1f2 00ff  ld   $ff
              e1f3 006b  ld   $6b
              e1f4 00a0  ld   $a0
              e1f5 0055  ld   $55
              e1f6 00cd  ld   $cd
              e1f7 00bb  ld   $bb
              e1f8 0075  ld   $75
              e1f9 0085  ld   $85
              e1fa 00b9  ld   $b9
              e1fb fe00  bra  ac          ;+-----------------------------------+
              e1fc fcfd  bra  $e1fd       ;|                                   |
              e1fd 1418  ld   $18,y       ;| Trampoline for page $e100 lookups |
              e1fe e006  jmp  y,$06       ;|                                   |
              e1ff c218  st   [$18]       ;+-----------------------------------+
              e200 006a  ld   $6a
              e201 0059  ld   $59
              e202 0004  ld   $04
              e203 0099  ld   $99
              e204 006e  ld   $6e
              e205 002b  ld   $2b
              e206 006e  ld   $6e
              e207 0085  ld   $85
              e208 00a2  ld   $a2
              e209 0070  ld   $70
              e20a 0059  ld   $59
              e20b 0004  ld   $04
              e20c 0099  ld   $99
              e20d 006e  ld   $6e
              e20e 002b  ld   $2b
              e20f 006e  ld   $6e
              e210 0085  ld   $85
              e211 00bf  ld   $bf
              e212 006b  ld   $6b
              e213 0085  ld   $85
              e214 00a2  ld   $a2
              e215 006d  ld   $6d
              e216 0063  ld   $63
              e217 00ff  ld   $ff
              e218 00cd  ld   $cd
              e219 00f0  ld   $f0
              e21a 0075  ld   $75
              e21b 0021  ld   $21
              e21c 003a  ld   $3a
              e21d 002b  ld   $2b
              e21e 003c  ld   $3c
              e21f 0059  ld   $59
              e220 000b  ld   $0b
              e221 002b  ld   $2b
              e222 0046  ld   $46
              e223 008c  ld   $8c
              e224 0003  ld   $03
              e225 0035  ld   $35
              e226 0072  ld   $72
              e227 00d8  ld   $d8
              e228 0021  ld   $21
              e229 003c  ld   $3c
              e22a 00ad  ld   $ad
              e22b 008c  ld   $8c
              e22c 0020  ld   $20
              e22d 0035  ld   $35
              e22e 003f  ld   $3f
              e22f 00d8  ld   $d8
              e230 0059  ld   $59
              e231 002e  ld   $2e
              e232 0085  ld   $85
              e233 00a2  ld   $a2
              e234 006e  ld   $6e
              e235 0021  ld   $21
              e236 003c  ld   $3c
              e237 00ad  ld   $ad
              e238 0093  ld   $93
              e239 003c  ld   $3c
              e23a 008c  ld   $8c
              e23b 0020  ld   $20
              e23c 0035  ld   $35
              e23d 003f  ld   $3f
              e23e 00e7  ld   $e7
              e23f 008c  ld   $8c
              e240 0020  ld   $20
              e241 0085  ld   $85
              e242 00a2  ld   $a2
              e243 0067  ld   $67
              e244 0021  ld   $21
              e245 0046  ld   $46
              e246 00e6  ld   $e6
              e247 0001  ld   $01
              e248 0035  ld   $35
              e249 004d  ld   $4d
              e24a 00c4  ld   $c4
              e24b 0063  ld   $63
              e24c 00ff  ld   $ff
              e24d 0093  ld   $93
              e24e 001b  ld   $1b
              e24f 00ff  ld   $ff
              e250 006c  ld   $6c
              e251 00a0  ld   $a0
              e252 002c  ld   $2c
              e253 00cd  ld   $cd
              e254 00c7  ld   $c7
              e255 0075  ld   $75
              e256 002b  ld   $2b
              e257 0034  ld   $34
              e258 0021  ld   $21
              e259 006c  ld   $6c
              e25a 00b8  ld   $b8
              e25b 0034  ld   $34
              e25c 0035  ld   $35
              e25d 0050  ld   $50
              e25e 00b0  ld   $b0
              e25f 002b  ld   $2b
              e260 006c  ld   $6c
              e261 0093  ld   $93
              e262 0046  ld   $46
              e263 0090  ld   $90
              e264 00a5  ld   $a5
              e265 0021  ld   $21
              e266 0046  ld   $46
              e267 0035  ld   $35
              e268 0072  ld   $72
              e269 00bc  ld   $bc
              e26a 0059  ld   $59
              e26b 0020  ld   $20
              e26c 0085  ld   $85
              e26d 00a2  ld   $a2
              e26e 006e  ld   $6e
              e26f 0090  ld   $90
              e270 00c5  ld   $c5
              e271 0088  ld   $88
              e272 0030  ld   $30
              e273 0085  ld   $85
              e274 00a2  ld   $a2
              e275 006e  ld   $6e
              e276 0059  ld   $59
              e277 0030  ld   $30
              e278 002b  ld   $2b
              e279 0046  ld   $46
              e27a 0063  ld   $63
              e27b 00ff  ld   $ff
              e27c 0093  ld   $93
              e27d 001b  ld   $1b
              e27e 00ff  ld   $ff
              e27f 006d  ld   $6d
              e280 00a0  ld   $a0
              e281 004c  ld   $4c
              e282 00cd  ld   $cd
              e283 00e7  ld   $e7
              e284 0011  ld   $11
              e285 0000  ld   $00
              e286 003f  ld   $3f
              e287 002b  ld   $2b
              e288 0024  ld   $24
              e289 0059  ld   $59
              e28a 0000  ld   $00
              e28b 005e  ld   $5e
              e28c 006e  ld   $6e
              e28d 0011  ld   $11
              e28e 0020  ld   $20
              e28f 0001  ld   $01
              e290 00ad  ld   $ad
              e291 005e  ld   $5e
              e292 006f  ld   $6f
              e293 0021  ld   $21
              e294 006e  ld   $6e
              e295 002b  ld   $2b
              e296 0028  ld   $28
              e297 005e  ld   $5e
              e298 0026  ld   $26
              e299 0011  ld   $11
              e29a 00e1  ld   $e1
              e29b 0004  ld   $04
              e29c 002b  ld   $2b
              e29d 0022  ld   $22
              e29e 00b4  ld   $b4
              e29f 00cb  ld   $cb
              e2a0 0093  ld   $93
              e2a1 0028  ld   $28
              e2a2 001a  ld   $1a
              e2a3 0028  ld   $28
              e2a4 008c  ld   $8c
              e2a5 00a0  ld   $a0
              e2a6 0035  ld   $35
              e2a7 0072  ld   $72
              e2a8 00b5  ld   $b5
              e2a9 0059  ld   $59
              e2aa 0001  ld   $01
              e2ab 005e  ld   $5e
              e2ac 0035  ld   $35
              e2ad 0059  ld   $59
              e2ae 00c0  ld   $c0
              e2af 00e3  ld   $e3
              e2b0 001e  ld   $1e
              e2b1 005e  ld   $5e
              e2b2 0034  ld   $34
              e2b3 0021  ld   $21
              e2b4 0034  ld   $34
              e2b5 00ad  ld   $ad
              e2b6 00e6  ld   $e6
              e2b7 0070  ld   $70
              e2b8 0035  ld   $35
              e2b9 0053  ld   $53
              e2ba 00db  ld   $db
              e2bb 00e3  ld   $e3
              e2bc 0078  ld   $78
              e2bd 0090  ld   $90
              e2be 00dd  ld   $dd
              e2bf 00e3  ld   $e3
              e2c0 0018  ld   $18
              e2c1 00f0  ld   $f0
              e2c2 0034  ld   $34
              e2c3 001a  ld   $1a
              e2c4 0034  ld   $34
              e2c5 00e6  ld   $e6
              e2c6 0020  ld   $20
              e2c7 0035  ld   $35
              e2c8 004d  ld   $4d
              e2c9 00cb  ld   $cb
              e2ca 00ff  ld   $ff
              e2cb 0093  ld   $93
              e2cc 001b  ld   $1b
              e2cd 00ff  ld   $ff
              e2ce 006e  ld   $6e
              e2cf 00a0  ld   $a0
              e2d0 004e  ld   $4e
              e2d1 00cd  ld   $cd
              e2d2 00e9  ld   $e9
              e2d3 00e6  ld   $e6
              e2d4 0052  ld   $52
              e2d5 0035  ld   $35
              e2d6 0053  ld   $53
              e2d7 00ae  ld   $ae
              e2d8 00e3  ld   $e3
              e2d9 0032  ld   $32
              e2da 002b  ld   $2b
              e2db 0034  ld   $34
              e2dc 0011  ld   $11
              e2dd 0000  ld   $00
              e2de 0007  ld   $07
              e2df 0090  ld   $90
              e2e0 00b3  ld   $b3
              e2e1 002b  ld   $2b
              e2e2 0034  ld   $34
              e2e3 0011  ld   $11
              e2e4 0000  ld   $00
              e2e5 0008  ld   $08
              e2e6 002b  ld   $2b
              e2e7 0070  ld   $70
              e2e8 0021  ld   $21
              e2e9 0034  ld   $34
              e2ea 00e9  ld   $e9
              e2eb 00e9  ld   $e9
              e2ec 0099  ld   $99
              e2ed 0034  ld   $34
              e2ee 0099  ld   $99
              e2ef 0070  ld   $70
              e2f0 002b  ld   $2b
              e2f1 0070  ld   $70
              e2f2 0011  ld   $11
              e2f3 0000  ld   $00
              e2f4 003f  ld   $3f
              e2f5 002b  ld   $2b
              e2f6 0024  ld   $24
              e2f7 0021  ld   $21
              e2f8 006e  ld   $6e
              e2f9 002b  ld   $2b
              e2fa 0028  ld   $28
              e2fb fe00  bra  ac          ;+-----------------------------------+
              e2fc fcfd  bra  $e2fd       ;|                                   |
              e2fd 1418  ld   $18,y       ;| Trampoline for page $e200 lookups |
              e2fe e006  jmp  y,$06       ;|                                   |
              e2ff c218  st   [$18]       ;+-----------------------------------+
              e300 00e3  ld   $e3
              e301 0006  ld   $06
              e302 002b  ld   $2b
              e303 006e  ld   $6e
              e304 0011  ld   $11
              e305 00e1  ld   $e1
              e306 0004  ld   $04
              e307 002b  ld   $2b
              e308 0022  ld   $22
              e309 0059  ld   $59
              e30a 0005  ld   $05
              e30b 002b  ld   $2b
              e30c 0034  ld   $34
              e30d 0021  ld   $21
              e30e 0070  ld   $70
              e30f 007f  ld   $7f
              e310 0000  ld   $00
              e311 005e  ld   $5e
              e312 0026  ld   $26
              e313 00b4  ld   $b4
              e314 00cb  ld   $cb
              e315 0093  ld   $93
              e316 0070  ld   $70
              e317 0093  ld   $93
              e318 0028  ld   $28
              e319 0021  ld   $21
              e31a 0034  ld   $34
              e31b 00e6  ld   $e6
              e31c 0001  ld   $01
              e31d 0035  ld   $35
              e31e 004d  ld   $4d
              e31f 00d3  ld   $d3
              e320 00ff  ld   $ff
              e321 0093  ld   $93
              e322 001b  ld   $1b
              e323 00ff  ld   $ff
              e324 006f  ld   $6f
              e325 00a0  ld   $a0
              e326 004f  ld   $4f
              e327 00cd  ld   $cd
              e328 00ea  ld   $ea
              e329 0075  ld   $75
              e32a 0085  ld   $85
              e32b 00a2  ld   $a2
              e32c 0064  ld   $64
              e32d 0021  ld   $21
              e32e 006a  ld   $6a
              e32f 002b  ld   $2b
              e330 003a  ld   $3a
              e331 00ad  ld   $ad
              e332 0035  ld   $35
              e333 003f  ld   $3f
              e334 00e8  ld   $e8
              e335 008c  ld   $8c
              e336 00e5  ld   $e5
              e337 0035  ld   $35
              e338 003f  ld   $3f
              e339 00e1  ld   $e1
              e33a 0021  ld   $21
              e33b 003a  ld   $3a
              e33c 00e3  ld   $e3
              e33d 000b  ld   $0b
              e33e 00ad  ld   $ad
              e33f 002b  ld   $2b
              e340 0046  ld   $46
              e341 008c  ld   $8c
              e342 000f  ld   $0f
              e343 0035  ld   $35
              e344 003f  ld   $3f
              e345 00e1  ld   $e1
              e346 0082  ld   $82
              e347 0002  ld   $02
              e348 0035  ld   $35
              e349 003f  ld   $3f
              e34a 00e1  ld   $e1
              e34b 0021  ld   $21
              e34c 0046  ld   $46
              e34d 0082  ld   $82
              e34e 0008  ld   $08
              e34f 0035  ld   $35
              e350 003f  ld   $3f
              e351 00ce  ld   $ce
              e352 0085  ld   $85
              e353 00c2  ld   $c2
              e354 0069  ld   $69
              e355 0090  ld   $90
              e356 00e1  ld   $e1
              e357 0085  ld   $85
              e358 00a2  ld   $a2
              e359 006b  ld   $6b
              e35a 0085  ld   $85
              e35b 00a2  ld   $a2
              e35c 0074  ld   $74
              e35d 0035  ld   $35
              e35e 0072  ld   $72
              e35f 00e1  ld   $e1
              e360 0059  ld   $59
              e361 00d0  ld   $d0
              e362 00f0  ld   $f0
              e363 0032  ld   $32
              e364 0085  ld   $85
              e365 00a2  ld   $a2
              e366 0073  ld   $73
              e367 0085  ld   $85
              e368 00cd  ld   $cd
              e369 0074  ld   $74
              e36a 0059  ld   $59
              e36b 0020  ld   $20
              e36c 0085  ld   $85
              e36d 00c6  ld   $c6
              e36e 0075  ld   $75
              e36f 0090  ld   $90
              e370 00a1  ld   $a1
              e371 0063  ld   $63
              e372 00ff  ld   $ff
              e373 0093  ld   $93
              e374 001b  ld   $1b
              e375 00ff  ld   $ff
              e376 0070  ld   $70
              e377 00a0  ld   $a0
              e378 005e  ld   $5e
              e379 00cd  ld   $cd
              e37a 00f9  ld   $f9
              e37b 0075  ld   $75
              e37c 0021  ld   $21
              e37d 003a  ld   $3a
              e37e 00e3  ld   $e3
              e37f 000b  ld   $0b
              e380 00ad  ld   $ad
              e381 0082  ld   $82
              e382 0010  ld   $10
              e383 0035  ld   $35
              e384 003f  ld   $3f
              e385 00b7  ld   $b7
              e386 00cd  ld   $cd
              e387 00b5  ld   $b5
              e388 0020  ld   $20
              e389 0020  ld   $20
              e38a 003c  ld   $3c
              e38b 0044  ld   $44
              e38c 0049  ld   $49
              e38d 0052  ld   $52
              e38e 003e  ld   $3e
              e38f 0000  ld   $00
              e390 0090  ld   $90
              e391 00f4  ld   $f4
              e392 0021  ld   $21
              e393 003a  ld   $3a
              e394 00e3  ld   $e3
              e395 001c  ld   $1c
              e396 00f6  ld   $f6
              e397 002b  ld   $2b
              e398 004c  ld   $4c
              e399 0021  ld   $21
              e39a 003a  ld   $3a
              e39b 00e3  ld   $e3
              e39c 001e  ld   $1e
              e39d 00f6  ld   $f6
              e39e 002b  ld   $2b
              e39f 004e  ld   $4e
              e3a0 0085  ld   $85
              e3a1 00a2  ld   $a2
              e3a2 0071  ld   $71
              e3a3 0059  ld   $59
              e3a4 0000  ld   $00
              e3a5 002b  ld   $2b
              e3a6 0070  ld   $70
              e3a7 0059  ld   $59
              e3a8 0008  ld   $08
              e3a9 002b  ld   $2b
              e3aa 0034  ld   $34
              e3ab 0021  ld   $21
              e3ac 003c  ld   $3c
              e3ad 00ad  ld   $ad
              e3ae 008c  ld   $8c
              e3af 0030  ld   $30
              e3b0 0035  ld   $35
              e3b1 0072  ld   $72
              e3b2 00f0  ld   $f0
              e3b3 0021  ld   $21
              e3b4 0034  ld   $34
              e3b5 00e6  ld   $e6
              e3b6 0006  ld   $06
              e3b7 0035  ld   $35
              e3b8 0053  ld   $53
              e3b9 00e5  ld   $e5
              e3ba 0059  ld   $59
              e3bb 0020  ld   $20
              e3bc 00f0  ld   $f0
              e3bd 003c  ld   $3c
              e3be 0090  ld   $90
              e3bf 00e7  ld   $e7
              e3c0 0093  ld   $93
              e3c1 0070  ld   $70
              e3c2 0093  ld   $93
              e3c3 003c  ld   $3c
              e3c4 0021  ld   $21
              e3c5 0034  ld   $34
              e3c6 00e6  ld   $e6
              e3c7 0001  ld   $01
              e3c8 0035  ld   $35
              e3c9 0053  ld   $53
              e3ca 00ce  ld   $ce
              e3cb 0021  ld   $21
              e3cc 0044  ld   $44
              e3cd 0099  ld   $99
              e3ce 0070  ld   $70
              e3cf 0085  ld   $85
              e3d0 00a2  ld   $a2
              e3d1 0069  ld   $69
              e3d2 0063  ld   $63
              e3d3 00ff  ld   $ff
              e3d4 0093  ld   $93
              e3d5 001b  ld   $1b
              e3d6 00ff  ld   $ff
              e3d7 0071  ld   $71
              e3d8 00a0  ld   $a0
              e3d9 0060  ld   $60
              e3da 00cd  ld   $cd
              e3db 00fb  ld   $fb
              e3dc 0075  ld   $75
              e3dd 0059  ld   $59
              e3de 0009  ld   $09
              e3df 002b  ld   $2b
              e3e0 0034  ld   $34
              e3e1 0021  ld   $21
              e3e2 0044  ld   $44
              e3e3 0099  ld   $99
              e3e4 0034  ld   $34
              e3e5 002b  ld   $2b
              e3e6 003c  ld   $3c
              e3e7 0059  ld   $59
              e3e8 0030  ld   $30
              e3e9 00f0  ld   $f0
              e3ea 003c  ld   $3c
              e3eb 0021  ld   $21
              e3ec 0034  ld   $34
              e3ed 00e6  ld   $e6
              e3ee 0001  ld   $01
              e3ef 0035  ld   $35
              e3f0 0053  ld   $53
              e3f1 00a3  ld   $a3
              e3f2 0059  ld   $59
              e3f3 001f  ld   $1f
              e3f4 002b  ld   $2b
              e3f5 0070  ld   $70
              e3f6 0085  ld   $85
              e3f7 00c2  ld   $c2
              e3f8 0066  ld   $66
              e3f9 0035  ld   $35
              e3fa 0050  ld   $50
              e3fb fe00  bra  ac          ;+-----------------------------------+
              e3fc fcfd  bra  $e3fd       ;|                                   |
              e3fd 1418  ld   $18,y       ;| Trampoline for page $e300 lookups |
              e3fe e006  jmp  y,$06       ;|                                   |
              e3ff c218  st   [$18]       ;+-----------------------------------+
              e400 00c4  ld   $c4
              e401 0059  ld   $59
              e402 006a  ld   $6a
              e403 0090  ld   $90
              e404 00c6  ld   $c6
              e405 0059  ld   $59
              e406 0069  ld   $69
              e407 002b  ld   $2b
              e408 0046  ld   $46
              e409 0059  ld   $59
              e40a 0009  ld   $09
              e40b 002b  ld   $2b
              e40c 0034  ld   $34
              e40d 0021  ld   $21
              e40e 0044  ld   $44
              e40f 0099  ld   $99
              e410 0034  ld   $34
              e411 002b  ld   $2b
              e412 003c  ld   $3c
              e413 0021  ld   $21
              e414 003c  ld   $3c
              e415 00ad  ld   $ad
              e416 00e9  ld   $e9
              e417 00b8  ld   $b8
              e418 0046  ld   $46
              e419 0035  ld   $35
              e41a 0053  ld   $53
              e41b 00e3  ld   $e3
              e41c 00e3  ld   $e3
              e41d 003a  ld   $3a
              e41e 00f0  ld   $f0
              e41f 003c  ld   $3c
              e420 0059  ld   $59
              e421 006a  ld   $6a
              e422 0090  ld   $90
              e423 00e9  ld   $e9
              e424 00e3  ld   $e3
              e425 0030  ld   $30
              e426 00f0  ld   $f0
              e427 003c  ld   $3c
              e428 0059  ld   $59
              e429 0069  ld   $69
              e42a 002b  ld   $2b
              e42b 0046  ld   $46
              e42c 0021  ld   $21
              e42d 0034  ld   $34
              e42e 00e6  ld   $e6
              e42f 0001  ld   $01
              e430 0035  ld   $35
              e431 0053  ld   $53
              e432 00ca  ld   $ca
              e433 0021  ld   $21
              e434 0070  ld   $70
              e435 00e6  ld   $e6
              e436 0001  ld   $01
              e437 0035  ld   $35
              e438 0053  ld   $53
              e439 00b8  ld   $b8
              e43a 0063  ld   $63
              e43b 00ff  ld   $ff
              e43c 0093  ld   $93
              e43d 001b  ld   $1b
              e43e 00ff  ld   $ff
              e43f 0072  ld   $72
              e440 00a0  ld   $a0
              e441 004f  ld   $4f
              e442 00cd  ld   $cd
              e443 00ab  ld   $ab
              e444 002d  ld   $2d
              e445 002d  ld   $2d
              e446 002d  ld   $2d
              * 10 times
              e44e 0000  ld   $00
              e44f 002b  ld   $2b
              e450 0044  ld   $44
              e451 00cd  ld   $cd
              e452 00ea  ld   $ea
              e453 0075  ld   $75
              e454 005e  ld   $5e
              e455 0025  ld   $25
              e456 0011  ld   $11
              e457 0003  ld   $03
              e458 000b  ld   $0b
              e459 002b  ld   $2b
              e45a 0022  ld   $22
              e45b 0059  ld   $59
              e45c 0018  ld   $18
              e45d 002b  ld   $2b
              e45e 0034  ld   $34
              e45f 0011  ld   $11
              e460 0020  ld   $20
              e461 0001  ld   $01
              e462 002b  ld   $2b
              e463 0046  ld   $46
              e464 0021  ld   $21
              e465 0034  ld   $34
              e466 00f0  ld   $f0
              e467 0046  ld   $46
              e468 005e  ld   $5e
              e469 0027  ld   $27
              e46a 0059  ld   $59
              e46b 0000  ld   $00
              e46c 005e  ld   $5e
              e46d 0026  ld   $26
              e46e 0059  ld   $59
              e46f 00a0  ld   $a0
              e470 005e  ld   $5e
              e471 0024  ld   $24
              e472 00b4  ld   $b4
              e473 00f3  ld   $f3
              e474 0059  ld   $59
              e475 0001  ld   $01
              e476 0099  ld   $99
              e477 0034  ld   $34
              e478 002b  ld   $2b
              e479 0034  ld   $34
              e47a 0059  ld   $59
              e47b 0002  ld   $02
              e47c 0099  ld   $99
              e47d 0046  ld   $46
              e47e 002b  ld   $2b
              e47f 0046  ld   $46
              e480 0011  ld   $11
              e481 00f0  ld   $f0
              e482 0001  ld   $01
              e483 00fc  ld   $fc
              e484 0046  ld   $46
              e485 0035  ld   $35
              e486 0072  ld   $72
              e487 00c0  ld   $c0
              e488 0059  ld   $59
              e489 0000  ld   $00
              e48a 00f0  ld   $f0
              e48b 0032  ld   $32
              e48c 0063  ld   $63
              e48d 00ff  ld   $ff
              e48e 0093  ld   $93
              e48f 001b  ld   $1b
              e490 00ff  ld   $ff
              e491 0073  ld   $73
              e492 00a0  ld   $a0
              e493 0056  ld   $56
              e494 00cd  ld   $cd
              e495 00f1  ld   $f1
              e496 0075  ld   $75
              e497 00cd  ld   $cd
              e498 00ac  ld   $ac
              e499 004c  ld   $4c
              e49a 006f  ld   $6f
              e49b 0061  ld   $61
              e49c 0064  ld   $64
              e49d 0069  ld   $69
              e49e 006e  ld   $6e
              e49f 0067  ld   $67
              e4a0 0020  ld   $20
              e4a1 0000  ld   $00
              e4a2 0085  ld   $85
              e4a3 00a2  ld   $a2
              e4a4 0069  ld   $69
              e4a5 0085  ld   $85
              e4a6 00bf  ld   $bf
              e4a7 006b  ld   $6b
              e4a8 0085  ld   $85
              e4a9 00a2  ld   $a2
              e4aa 0065  ld   $65
              e4ab 0085  ld   $85
              e4ac 00de  ld   $de
              e4ad 0075  ld   $75
              e4ae 005e  ld   $5e
              e4af 0073  ld   $73
              e4b0 0085  ld   $85
              e4b1 00de  ld   $de
              e4b2 0075  ld   $75
              e4b3 005e  ld   $5e
              e4b4 0072  ld   $72
              e4b5 0085  ld   $85
              e4b6 00de  ld   $de
              e4b7 0075  ld   $75
              e4b8 00e6  ld   $e6
              e4b9 0001  ld   $01
              e4ba 0082  ld   $82
              e4bb 00ff  ld   $ff
              e4bc 00e3  ld   $e3
              e4bd 0001  ld   $01
              e4be 002b  ld   $2b
              e4bf 0074  ld   $74
              e4c0 0085  ld   $85
              e4c1 00a2  ld   $a2
              e4c2 0078  ld   $78
              e4c3 0021  ld   $21
              e4c4 0074  ld   $74
              e4c5 0035  ld   $35
              e4c6 0072  ld   $72
              e4c7 00d8  ld   $d8
              e4c8 0085  ld   $85
              e4c9 00de  ld   $de
              e4ca 0075  ld   $75
              e4cb 0035  ld   $35
              e4cc 0072  ld   $72
              e4cd 00b8  ld   $b8
              e4ce 0085  ld   $85
              e4cf 00de  ld   $de
              e4d0 0075  ld   $75
              e4d1 005e  ld   $5e
              e4d2 0073  ld   $73
              e4d3 0085  ld   $85
              e4d4 00de  ld   $de
              e4d5 0075  ld   $75
              e4d6 005e  ld   $5e
              e4d7 0072  ld   $72
              e4d8 0085  ld   $85
              e4d9 00de  ld   $de
              e4da 0075  ld   $75
              e4db 0035  ld   $35
              e4dc 0050  ld   $50
              e4dd 00ec  ld   $ec
              e4de 0059  ld   $59
              e4df 0000  ld   $00
              e4e0 002b  ld   $2b
              e4e1 0072  ld   $72
              e4e2 0085  ld   $85
              e4e3 00af  ld   $af
              e4e4 005d  ld   $5d
              e4e5 0063  ld   $63
              e4e6 00ff  ld   $ff
              e4e7 0093  ld   $93
              e4e8 001b  ld   $1b
              e4e9 00ff  ld   $ff
              e4ea 0074  ld   $74
              e4eb 00a0  ld   $a0
              e4ec 003c  ld   $3c
              e4ed 00cd  ld   $cd
              e4ee 00c9  ld   $c9
              e4ef 00cd  ld   $cd
              e4f0 00ae  ld   $ae
              e4f1 0053  ld   $53
              e4f2 0059  ld   $59
              e4f3 0053  ld   $53
              e4f4 0054  ld   $54
              e4f5 0045  ld   $45
              e4f6 004d  ld   $4d
              e4f7 0020  ld   $20
              e4f8 0020  ld   $20
              e4f9 0047  ld   $47
              e4fa 0054  ld   $54
              e4fb fe00  bra  ac          ;+-----------------------------------+
              e4fc fcfd  bra  $e4fd       ;|                                   |
              e4fd 1418  ld   $18,y       ;| Trampoline for page $e400 lookups |
              e4fe e006  jmp  y,$06       ;|                                   |
              e4ff c218  st   [$18]       ;+-----------------------------------+
              e500 0031  ld   $31
              e501 0000  ld   $00
              e502 002b  ld   $2b
              e503 003c  ld   $3c
              e504 0021  ld   $21
              e505 003a  ld   $3a
              e506 002b  ld   $2b
              e507 0034  ld   $34
              e508 0021  ld   $21
              e509 003c  ld   $3c
              e50a 00ad  ld   $ad
              e50b 0093  ld   $93
              e50c 003c  ld   $3c
              e50d 0035  ld   $35
              e50e 003f  ld   $3f
              e50f 00c8  ld   $c8
              e510 002b  ld   $2b
              e511 0070  ld   $70
              e512 0021  ld   $21
              e513 0034  ld   $34
              e514 00ad  ld   $ad
              e515 0093  ld   $93
              e516 0034  ld   $34
              e517 00fc  ld   $fc
              e518 0070  ld   $70
              e519 0035  ld   $35
              e51a 003f  ld   $3f
              e51b 00b4  ld   $b4
              e51c 00ff  ld   $ff
              e51d 00cd  ld   $cd
              e51e 00d7  ld   $d7
              e51f 0059  ld   $59
              e520 0020  ld   $20
              e521 0085  ld   $85
              e522 00b1  ld   $b1
              e523 0072  ld   $72
              e524 0021  ld   $21
              e525 0072  ld   $72
              e526 0035  ld   $35
              e527 003f  ld   $3f
              e528 00d2  ld   $d2
              e529 00cf  ld   $cf
              e52a 0018  ld   $18
              e52b 0093  ld   $93
              e52c 001b  ld   $1b
              e52d 00ff  ld   $ff
              e52e 0075  ld   $75
              e52f 00a0  ld   $a0
              e530 0059  ld   $59
              e531 00cd  ld   $cd
              e532 00c2  ld   $c2
              e533 0075  ld   $75
              e534 0093  ld   $93
              e535 0040  ld   $40
              e536 0011  ld   $11
              e537 0000  ld   $00
              e538 0002  ld   $02
              e539 0099  ld   $99
              e53a 0064  ld   $64
              e53b 00f8  ld   $f8
              e53c 004a  ld   $4a
              e53d 0035  ld   $35
              e53e 0072  ld   $72
              e53f 00c0  ld   $c0
              e540 0021  ld   $21
              e541 0076  ld   $76
              e542 00e3  ld   $e3
              e543 0004  ld   $04
              e544 002b  ld   $2b
              e545 0076  ld   $76
              e546 00f6  ld   $f6
              e547 002b  ld   $2b
              e548 004c  ld   $4c
              e549 0021  ld   $21
              e54a 0076  ld   $76
              e54b 00e3  ld   $e3
              e54c 0002  ld   $02
              e54d 00f6  ld   $f6
              e54e 002b  ld   $2b
              e54f 004e  ld   $4e
              e550 0085  ld   $85
              e551 00cf  ld   $cf
              e552 0065  ld   $65
              e553 0063  ld   $63
              e554 00ff  ld   $ff
              e555 00cd  ld   $cd
              e556 00da  ld   $da
              e557 002b  ld   $2b
              e558 0034  ld   $34
              e559 0099  ld   $99
              e55a 0064  ld   $64
              e55b 002b  ld   $2b
              e55c 0064  ld   $64
              e55d 0035  ld   $35
              e55e 0072  ld   $72
              e55f 00d3  ld   $d3
              e560 0059  ld   $59
              e561 0001  ld   $01
              e562 0099  ld   $99
              e563 0060  ld   $60
              e564 002b  ld   $2b
              e565 0060  ld   $60
              e566 0021  ld   $21
              e567 0068  ld   $68
              e568 00b8  ld   $b8
              e569 0034  ld   $34
              e56a 002b  ld   $2b
              e56b 0068  ld   $68
              e56c 00ff  ld   $ff
              e56d 00cd  ld   $cd
              e56e 00f4  ld   $f4
              e56f 0075  ld   $75
              e570 0085  ld   $85
              e571 00a2  ld   $a2
              e572 0064  ld   $64
              e573 0035  ld   $35
              e574 0056  ld   $56
              e575 00ef  ld   $ef
              e576 0059  ld   $59
              e577 0001  ld   $01
              e578 0085  ld   $85
              e579 00c6  ld   $c6
              e57a 0075  ld   $75
              e57b 0021  ld   $21
              e57c 006a  ld   $6a
              e57d 00ad  ld   $ad
              e57e 0093  ld   $93
              e57f 006a  ld   $6a
              e580 0090  ld   $90
              e581 00f2  ld   $f2
              e582 0011  ld   $11
              e583 00ff  ld   $ff
              e584 00ff  ld   $ff
              e585 0063  ld   $63
              e586 00ff  ld   $ff
              e587 0093  ld   $93
              e588 001b  ld   $1b
              e589 00ff  ld   $ff
              e58a 0076  ld   $76
              e58b 00a0  ld   $a0
              e58c 0044  ld   $44
              e58d 00cd  ld   $cd
              e58e 00df  ld   $df
              e58f 0075  ld   $75
              e590 0011  ld   $11
              e591 0000  ld   $00
              e592 007f  ld   $7f
              e593 002b  ld   $2b
              e594 0076  ld   $76
              e595 0021  ld   $21
              e596 004c  ld   $4c
              e597 00f3  ld   $f3
              e598 0076  ld   $76
              e599 0093  ld   $93
              e59a 0076  ld   $76
              e59b 0093  ld   $93
              e59c 0076  ld   $76
              e59d 0021  ld   $21
              e59e 004e  ld   $4e
              e59f 00f3  ld   $f3
              e5a0 0076  ld   $76
              e5a1 0093  ld   $93
              e5a2 0076  ld   $76
              e5a3 0093  ld   $93
              e5a4 0076  ld   $76
              e5a5 0011  ld   $11
              e5a6 0000  ld   $00
              e5a7 00f0  ld   $f0
              e5a8 00fa  ld   $fa
              e5a9 004e  ld   $4e
              e5aa 00e3  ld   $e3
              e5ab 0001  ld   $01
              e5ac 0035  ld   $35
              e5ad 0072  ld   $72
              e5ae 00c6  ld   $c6
              e5af 0059  ld   $59
              e5b0 0007  ld   $07
              e5b1 00fa  ld   $fa
              e5b2 004c  ld   $4c
              e5b3 00e3  ld   $e3
              e5b4 0001  ld   $01
              e5b5 0035  ld   $35
              e5b6 003f  ld   $3f
              e5b7 00ce  ld   $ce
              e5b8 0085  ld   $85
              e5b9 00a2  ld   $a2
              e5ba 0077  ld   $77
              e5bb 0090  ld   $90
              e5bc 00a6  ld   $a6
              e5bd 0011  ld   $11
              e5be 0000  ld   $00
              e5bf 007f  ld   $7f
              e5c0 002b  ld   $2b
              e5c1 0076  ld   $76
              e5c2 00f6  ld   $f6
              e5c3 002b  ld   $2b
              e5c4 004c  ld   $4c
              e5c5 0021  ld   $21
              e5c6 0076  ld   $76
              e5c7 00e3  ld   $e3
              e5c8 0002  ld   $02
              e5c9 00f6  ld   $f6
              e5ca 002b  ld   $2b
              e5cb 004e  ld   $4e
              e5cc 0063  ld   $63
              e5cd 00ff  ld   $ff
              e5ce 0093  ld   $93
              e5cf 001b  ld   $1b
              e5d0 00ff  ld   $ff
              e5d1 0077  ld   $77
              e5d2 00a0  ld   $a0
              e5d3 005d  ld   $5d
              e5d4 00cd  ld   $cd
              e5d5 00f8  ld   $f8
              e5d6 0075  ld   $75
              e5d7 001a  ld   $1a
              e5d8 004d  ld   $4d
              e5d9 005e  ld   $5e
              e5da 0050  ld   $50
              e5db 001a  ld   $1a
              e5dc 004e  ld   $4e
              e5dd 005e  ld   $5e
              e5de 0051  ld   $51
              e5df 001a  ld   $1a
              e5e0 004f  ld   $4f
              e5e1 002b  ld   $2b
              e5e2 0056  ld   $56
              e5e3 001a  ld   $1a
              e5e4 004c  ld   $4c
              e5e5 002b  ld   $2b
              e5e6 0078  ld   $78
              e5e7 0082  ld   $82
              e5e8 0080  ld   $80
              e5e9 00ad  ld   $ad
              e5ea 002b  ld   $2b
              e5eb 004c  ld   $4c
              e5ec 0059  ld   $59
              e5ed 0000  ld   $00
              e5ee 002b  ld   $2b
              e5ef 004e  ld   $4e
              e5f0 0085  ld   $85
              e5f1 00d6  ld   $d6
              e5f2 0066  ld   $66
              e5f3 0085  ld   $85
              e5f4 00d6  ld   $d6
              e5f5 0066  ld   $66
              e5f6 0021  ld   $21
              e5f7 0052  ld   $52
              e5f8 002b  ld   $2b
              e5f9 0050  ld   $50
              e5fa 0021  ld   $21
              e5fb fe00  bra  ac          ;+-----------------------------------+
              e5fc fcfd  bra  $e5fd       ;|                                   |
              e5fd 1418  ld   $18,y       ;| Trampoline for page $e500 lookups |
              e5fe e006  jmp  y,$06       ;|                                   |
              e5ff c218  st   [$18]       ;+-----------------------------------+
              e600 0054  ld   $54
              e601 002b  ld   $2b
              e602 0056  ld   $56
              e603 0085  ld   $85
              e604 00d6  ld   $d6
              e605 0066  ld   $66
              e606 00fc  ld   $fc
              e607 0040  ld   $40
              e608 0035  ld   $35
              e609 0072  ld   $72
              e60a 00d4  ld   $d4
              e60b 0021  ld   $21
              e60c 004e  ld   $4e
              e60d 00fc  ld   $fc
              e60e 003e  ld   $3e
              e60f 0035  ld   $35
              e610 003f  ld   $3f
              e611 00e2  ld   $e2
              e612 0021  ld   $21
              e613 004c  ld   $4c
              e614 002b  ld   $2b
              e615 0040  ld   $40
              e616 0021  ld   $21
              e617 004e  ld   $4e
              e618 002b  ld   $2b
              e619 003e  ld   $3e
              e61a 0085  ld   $85
              e61b 00a2  ld   $a2
              e61c 0063  ld   $63
              e61d 0021  ld   $21
              e61e 0078  ld   $78
              e61f 0082  ld   $82
              e620 007f  ld   $7f
              e621 00e9  ld   $e9
              e622 00e9  ld   $e9
              e623 0099  ld   $99
              e624 0030  ld   $30
              e625 002b  ld   $2b
              e626 0078  ld   $78
              e627 00f6  ld   $f6
              e628 002b  ld   $2b
              e629 004c  ld   $4c
              e62a 0021  ld   $21
              e62b 0078  ld   $78
              e62c 00e3  ld   $e3
              e62d 0002  ld   $02
              e62e 00f6  ld   $f6
              e62f 002b  ld   $2b
              e630 004e  ld   $4e
              e631 0063  ld   $63
              e632 00ff  ld   $ff
              e633 0093  ld   $93
              e634 001b  ld   $1b
              e635 00ff  ld   $ff
              e636 0078  ld   $78
              e637 00a0  ld   $a0
              e638 0038  ld   $38
              e639 00cd  ld   $cd
              e63a 00d3  ld   $d3
              e63b 0075  ld   $75
              e63c 0085  ld   $85
              e63d 00a2  ld   $a2
              e63e 0064  ld   $64
              e63f 0035  ld   $35
              e640 0056  ld   $56
              e641 00d1  ld   $d1
              e642 00b8  ld   $b8
              e643 0074  ld   $74
              e644 0035  ld   $35
              e645 0056  ld   $56
              e646 00ae  ld   $ae
              e647 0059  ld   $59
              e648 0000  ld   $00
              e649 0099  ld   $99
              e64a 0074  ld   $74
              e64b 0085  ld   $85
              e64c 00c6  ld   $c6
              e64d 0075  ld   $75
              e64e 0021  ld   $21
              e64f 006a  ld   $6a
              e650 002b  ld   $2b
              e651 0026  ld   $26
              e652 0021  ld   $21
              e653 0072  ld   $72
              e654 002b  ld   $2b
              e655 0024  ld   $24
              e656 0099  ld   $99
              e657 0034  ld   $34
              e658 002b  ld   $2b
              e659 0072  ld   $72
              e65a 0011  ld   $11
              e65b 00e9  ld   $e9
              e65c 0000  ld   $00
              e65d 002b  ld   $2b
              e65e 0022  ld   $22
              e65f 0021  ld   $21
              e660 0034  ld   $34
              e661 00b4  ld   $b4
              e662 00e6  ld   $e6
              e663 0021  ld   $21
              e664 0074  ld   $74
              e665 00b8  ld   $b8
              e666 0034  ld   $34
              e667 002b  ld   $2b
              e668 0074  ld   $74
              e669 0035  ld   $35
              e66a 004d  ld   $4d
              e66b 00a1  ld   $a1
              e66c 0063  ld   $63
              e66d 00ff  ld   $ff
              e66e 0093  ld   $93
              e66f 001b  ld   $1b
              e670 00ff  ld   $ff
              e671 0079  ld   $79
              e672 00a0  ld   $a0
              e673 0040  ld   $40
              e674 00cd  ld   $cd
              e675 00bf  ld   $bf
              e676 0075  ld   $75
              e677 0059  ld   $59
              e678 0000  ld   $00
              e679 002b  ld   $2b
              e67a 0064  ld   $64
              e67b 002b  ld   $2b
              e67c 0060  ld   $60
              e67d 0059  ld   $59
              e67e 0000  ld   $00
              e67f 002b  ld   $2b
              e680 0066  ld   $66
              e681 0059  ld   $59
              e682 0001  ld   $01
              e683 002b  ld   $2b
              e684 0062  ld   $62
              e685 0021  ld   $21
              e686 005c  ld   $5c
              e687 002b  ld   $2b
              e688 004c  ld   $4c
              e689 0021  ld   $21
              e68a 005e  ld   $5e
              e68b 002b  ld   $2b
              e68c 004e  ld   $4e
              e68d 0085  ld   $85
              e68e 00a2  ld   $a2
              e68f 0076  ld   $76
              e690 0085  ld   $85
              e691 00cf  ld   $cf
              e692 0065  ld   $65
              e693 0063  ld   $63
              e694 00ff  ld   $ff
              e695 00cd  ld   $cd
              e696 00db  ld   $db
              e697 0075  ld   $75
              e698 00cd  ld   $cd
              e699 00ce  ld   $ce
              e69a 0043  ld   $43
              e69b 0061  ld   $61
              e69c 0072  ld   $72
              e69d 0064  ld   $64
              e69e 0054  ld   $54
              e69f 0079  ld   $79
              e6a0 0070  ld   $70
              e6a1 0065  ld   $65
              e6a2 0020  ld   $20
              e6a3 0000  ld   $00
              e6a4 0085  ld   $85
              e6a5 00a2  ld   $a2
              e6a6 0069  ld   $69
              e6a7 0021  ld   $21
              e6a8 0036  ld   $36
              e6a9 0085  ld   $85
              e6aa 00a2  ld   $a2
              e6ab 0068  ld   $68
              e6ac 0085  ld   $85
              e6ad 00a2  ld   $a2
              e6ae 006d  ld   $6d
              e6af 0063  ld   $63
              e6b0 00ff  ld   $ff
              e6b1 0093  ld   $93
              e6b2 001b  ld   $1b
              e6b3 00ff  ld   $ff
              e6b4 007a  ld   $7a
              e6b5 00a0  ld   $a0
              e6b6 0057  ld   $57
              e6b7 00cd  ld   $cd
              e6b8 00af  ld   $af
              e6b9 000a  ld   $0a
              e6ba 002a  ld   $2a
              e6bb 002a  ld   $2a
              e6bc 002a  ld   $2a
              e6bd 0020  ld   $20
              e6be 0043  ld   $43
              e6bf 0061  ld   $61
              e6c0 0072  ld   $72
              e6c1 0064  ld   $64
              e6c2 0042  ld   $42
              e6c3 006f  ld   $6f
              e6c4 006f  ld   $6f
              e6c5 0074  ld   $74
              e6c6 000a  ld   $0a
              e6c7 0000  ld   $00
              e6c8 0085  ld   $85
              e6c9 00a2  ld   $a2
              e6ca 0069  ld   $69
              e6cb 0059  ld   $59
              e6cc 0000  ld   $00
              e6cd 005e  ld   $5e
              e6ce 000e  ld   $0e
              e6cf 0085  ld   $85
              e6d0 00a2  ld   $a2
              e6d1 0060  ld   $60
              e6d2 0085  ld   $85
              e6d3 00c3  ld   $c3
              e6d4 0079  ld   $79
              e6d5 0085  ld   $85
              e6d6 00a2  ld   $a2
              e6d7 0061  ld   $61
              e6d8 0085  ld   $85
              e6d9 00bb  ld   $bb
              e6da 0068  ld   $68
              e6db 0085  ld   $85
              e6dc 00c7  ld   $c7
              e6dd 0060  ld   $60
              e6de 0035  ld   $35
              e6df 0072  ld   $72
              e6e0 00d1  ld   $d1
              e6e1 0085  ld   $85
              e6e2 00a2  ld   $a2
              e6e3 0062  ld   $62
              e6e4 0085  ld   $85
              e6e5 00a2  ld   $a2
              e6e6 0079  ld   $79
              e6e7 0085  ld   $85
              e6e8 00a2  ld   $a2
              e6e9 006f  ld   $6f
              e6ea 0059  ld   $59
              e6eb 0020  ld   $20
              e6ec 00f0  ld   $f0
              e6ed 0032  ld   $32
              e6ee 0085  ld   $85
              e6ef 00a2  ld   $a2
              e6f0 006d  ld   $6d
              e6f1 00cd  ld   $cd
              e6f2 00f0  ld   $f0
              e6f3 0053  ld   $53
              e6f4 0059  ld   $59
              e6f5 0053  ld   $53
              e6f6 0054  ld   $54
              e6f7 0045  ld   $45
              e6f8 004d  ld   $4d
              e6f9 002e  ld   $2e
              e6fa 0047  ld   $47
              e6fb fe00  bra  ac          ;+-----------------------------------+
              e6fc fcfd  bra  $e6fd       ;|                                   |
              e6fd 1418  ld   $18,y       ;| Trampoline for page $e600 lookups |
              e6fe e006  jmp  y,$06       ;|                                   |
              e6ff c218  st   [$18]       ;+-----------------------------------+
              e700 0054  ld   $54
              e701 0031  ld   $31
              e702 0020  ld   $20
              e703 006e  ld   $6e
              e704 006f  ld   $6f
              e705 0074  ld   $74
              e706 0020  ld   $20
              e707 0066  ld   $66
              e708 006f  ld   $6f
              e709 0075  ld   $75
              e70a 006e  ld   $6e
              e70b 0064  ld   $64
              e70c 0021  ld   $21
              e70d 0000  ld   $00
              e70e 0085  ld   $85
              e70f 00a2  ld   $a2
              e710 0069  ld   $69
              e711 00b4  ld   $b4
              e712 0080  ld   $80
              e713 0000  ld   $00
              e714 0000  ld   $00         ;End of Apps/CardBoot/CardBoot.gt1, size 2922
                                          ;+-----------------------------------+
                                          ;| gbas/menu/MainMenu_vX0.gt1        |
                                          ;+-----------------------------------+
              e715 dc42  st   $42,[y,x++] ;'B'
              e716 dc6f  st   $6f,[y,x++] ;'o'
              e717 dc6f  st   $6f,[y,x++] ;'o'
              e718 dc74  st   $74,[y,x++] ;'t'
              e719 dc00  st   $00,[y,x++] ;'\x00'
              e71a dc00  st   $00,[y,x++] ;'\x00'
              e71b dc00  st   $00,[y,x++] ;'\x00'
              e71c dc00  st   $00,[y,x++] ;'\x00'
              e71d 00ab  ld   $ab
              e71e c218  st   [$18]
              e71f 00db  ld   $db
              e720 14fa  ld   $fa,y
              e721 e020  jmp  y,$20
              e722 c219  st   [$19]
Main:         e723 0000  ld   $00
              e724 007e  ld   $7e
              e725 0002  ld   $02
              e726 0001  ld   $01
              e727 0001  ld   $01
              e728 0002  ld   $02
              e729 0000  ld   $00
              e72a 00f5  ld   $f5
              e72b 0059  ld   $59
              e72c 0080  ld   $80
              e72d 002b  ld   $2b
              e72e 0082  ld   $82
              e72f 0011  ld   $11
              e730 00a0  ld   $a0
              e731 006a  ld   $6a
              e732 00cf  ld   $cf
              e733 0018  ld   $18
              e734 0011  ld   $11
              e735 0020  ld   $20
              e736 000f  ld   $0f
              e737 002b  ld   $2b
              e738 00a2  ld   $a2
              e739 00c7  ld   $c7
              e73a 0003  ld   $03
              e73b 0069  ld   $69
              e73c 0021  ld   $21
              e73d 004d  ld   $4d
              e73e 0002  ld   $02
              e73f 00aa  ld   $aa
              e740 004d  ld   $4d
              e741 0000  ld   $00
              e742 00d6  ld   $d6
              e743 004d  ld   $4d
              e744 0000  ld   $00
              e745 00a6  ld   $a6
              e746 0016  ld   $16
              e747 0000  ld   $00
              e748 002d  ld   $2d
              e749 004d  ld   $4d
              e74a 0000  ld   $00
              e74b 002e  ld   $2e
              e74c 0085  ld   $85
              e74d 00a2  ld   $a2
              e74e 0064  ld   $64
              e74f 0011  ld   $11
              e750 00f3  ld   $f3
              e751 0061  ld   $61
              e752 002b  ld   $2b
              e753 0084  ld   $84
              e754 0085  ld   $85
              e755 00e8  ld   $e8
              e756 0061  ld   $61
              e757 0016  ld   $16
              e758 00ff  ld   $ff
              e759 000e  ld   $0e
              e75a 0011  ld   $11
              e75b 00f6  ld   $f6
              e75c 0001  ld   $01
              e75d 0077  ld   $77
              e75e 0064  ld   $64
              e75f 00e0  ld   $e0
              e760 0011  ld   $11
              e761 00f6  ld   $f6
              e762 0067  ld   $67
              e763 0025  ld   $25
              e764 000d  ld   $0d
              e765 0011  ld   $11
              e766 00fb  ld   $fb
              e767 0067  ld   $67
              e768 0025  ld   $25
              e769 0001  ld   $01
              e76a 00c7  ld   $c7
              e76b 00fd  ld   $fd
              e76c 0066  ld   $66
              e76d 00aa  ld   $aa
              e76e 004d  ld   $4d
              e76f 0000  ld   $00
              e770 00a4  ld   $a4
              e771 00c7  ld   $c7
              e772 0010  ld   $10
              e773 0069  ld   $69
              e774 00aa  ld   $aa
              e775 0016  ld   $16
              e776 0020  ld   $20
              e777 00a3  ld   $a3
              e778 004d  ld   $4d
              e779 0000  ld   $00
              e77a 0082  ld   $82
              e77b 004d  ld   $4d
              e77c 0000  ld   $00
              e77d 0084  ld   $84
              e77e 004d  ld   $4d
              e77f 009f  ld   $9f
              e780 0086  ld   $86
              e781 004d  ld   $4d
              e782 001b  ld   $1b
              e783 0088  ld   $88
              e784 0085  ld   $85
              e785 00c2  ld   $c2
              e786 006c  ld   $6c
              e787 0016  ld   $16
              e788 0010  ld   $10
              e789 00a3  ld   $a3
              e78a 004d  ld   $4d
              e78b 0002  ld   $02
              e78c 0082  ld   $82
              e78d 004d  ld   $4d
              e78e 0002  ld   $02
              e78f 0084  ld   $84
              e790 004d  ld   $4d
              e791 009d  ld   $9d
              e792 0086  ld   $86
              e793 004d  ld   $4d
              e794 0019  ld   $19
              e795 0088  ld   $88
              e796 0085  ld   $85
              e797 00c2  ld   $c2
              e798 006c  ld   $6c
              e799 0016  ld   $16
              e79a 0020  ld   $20
              e79b 00a3  ld   $a3
              e79c 004d  ld   $4d
              e79d 0000  ld   $00
              e79e 0082  ld   $82
              e79f 004d  ld   $4d
              e7a0 005b  ld   $5b
              e7a1 0084  ld   $84
              e7a2 004d  ld   $4d
              e7a3 009f  ld   $9f
              e7a4 0086  ld   $86
              e7a5 004d  ld   $4d
              e7a6 0077  ld   $77
              e7a7 0088  ld   $88
              e7a8 0085  ld   $85
              e7a9 00c2  ld   $c2
              e7aa 006c  ld   $6c
              e7ab 0016  ld   $16
              e7ac 0010  ld   $10
              e7ad 00a3  ld   $a3
              e7ae 004d  ld   $4d
              e7af 0002  ld   $02
              e7b0 0082  ld   $82
              e7b1 004d  ld   $4d
              e7b2 005d  ld   $5d
              e7b3 0084  ld   $84
              e7b4 004d  ld   $4d
              e7b5 009d  ld   $9d
              e7b6 0086  ld   $86
              e7b7 004d  ld   $4d
              e7b8 0075  ld   $75
              e7b9 0088  ld   $88
              e7ba 0085  ld   $85
              e7bb 00c2  ld   $c2
              e7bc 006c  ld   $6c
              e7bd 0016  ld   $16
              e7be 0020  ld   $20
              e7bf 00a3  ld   $a3
              e7c0 004d  ld   $4d
              e7c1 0000  ld   $00
              e7c2 0082  ld   $82
              e7c3 004d  ld   $4d
              e7c4 001c  ld   $1c
              e7c5 0084  ld   $84
              e7c6 004d  ld   $4d
              e7c7 0001  ld   $01
              e7c8 0086  ld   $86
              e7c9 004d  ld   $4d
              e7ca 005a  ld   $5a
              e7cb 0088  ld   $88
              e7cc 0085  ld   $85
              e7cd 00c2  ld   $c2
              e7ce 006c  ld   $6c
              e7cf 0016  ld   $16
              e7d0 0020  ld   $20
              e7d1 00a3  ld   $a3
              e7d2 004d  ld   $4d
              e7d3 009e  ld   $9e
              e7d4 0082  ld   $82
              e7d5 004d  ld   $4d
              e7d6 001c  ld   $1c
              e7d7 0084  ld   $84
              e7d8 004d  ld   $4d
              e7d9 009f  ld   $9f
              e7da 0086  ld   $86
              e7db 004d  ld   $4d
              e7dc 005a  ld   $5a
              e7dd 0088  ld   $88
              e7de 0085  ld   $85
              e7df 00c2  ld   $c2
              e7e0 006c  ld   $6c
              e7e1 0085  ld   $85
              e7e2 0086  ld   $86
              e7e3 0005  ld   $05
              e7e4 0011  ld   $11
              e7e5 0000  ld   $00
              e7e6 000c  ld   $0c
              e7e7 002b  ld   $2b
              e7e8 00a2  ld   $a2
              e7e9 004d  ld   $4d
              e7ea 0026  ld   $26
              e7eb 0038  ld   $38
              e7ec 004d  ld   $4d
              e7ed 0000  ld   $00
              e7ee 003a  ld   $3a
              e7ef 0016  ld   $16
              e7f0 0018  ld   $18
              e7f1 00a4  ld   $a4
              e7f2 0065  ld   $65
              e7f3 00a5  ld   $a5
              e7f4 0038  ld   $38
              e7f5 0085  ld   $85
              e7f6 00dc  ld   $dc
              e7f7 0065  ld   $65
              e7f8 003f  ld   $3f
              e7f9 003a  ld   $3a
              e7fa 00ec  ld   $ec
              e7fb fe00  bra  ac          ;+-----------------------------------+
              e7fc fcfd  bra  $e7fd       ;|                                   |
              e7fd 1418  ld   $18,y       ;| Trampoline for page $e700 lookups |
              e7fe e006  jmp  y,$06       ;|                                   |
              e7ff c218  st   [$18]       ;+-----------------------------------+
              e800 007e  ld   $7e
              e801 0085  ld   $85
              e802 00ac  ld   $ac
              e803 0063  ld   $63
              e804 0085  ld   $85
              e805 00b7  ld   $b7
              e806 0070  ld   $70
              e807 0016  ld   $16
              e808 0062  ld   $62
              e809 00a4  ld   $a4
              e80a 0065  ld   $65
              e80b 00a5  ld   $a5
              e80c 0038  ld   $38
              e80d 0085  ld   $85
              e80e 00dc  ld   $dc
              e80f 0065  ld   $65
              e810 0021  ld   $21
              e811 003a  ld   $3a
              e812 00e3  ld   $e3
              e813 0005  ld   $05
              e814 0079  ld   $79
              e815 00ec  ld   $ec
              e816 007e  ld   $7e
              e817 00f6  ld   $f6
              e818 0085  ld   $85
              e819 00ac  ld   $ac
              e81a 0063  ld   $63
              e81b 0085  ld   $85
              e81c 00b7  ld   $b7
              e81d 0070  ld   $70
              e81e 0042  ld   $42
              e81f 0008  ld   $08
              e820 0038  ld   $38
              e821 0038  ld   $38
              e822 0085  ld   $85
              e823 0000  ld   $00
              e824 0003  ld   $03
              e825 0003  ld   $03
              e826 0000  ld   $00
              e827 00f9  ld   $f9
              e828 00a7  ld   $a7
              e829 0004  ld   $04
              e82a 003a  ld   $3a
              e82b 0093  ld   $93
              e82c 003a  ld   $3a
              e82d 00bd  ld   $bd
              e82e 00c2  ld   $c2
              e82f 0002  ld   $02
              e830 0011  ld   $11
              e831 0010  ld   $10
              e832 002a  ld   $2a
              e833 002b  ld   $2b
              e834 00a2  ld   $a2
              e835 0016  ld   $16
              e836 0024  ld   $24
              e837 00a4  ld   $a4
              e838 0016  ld   $16
              e839 005f  ld   $5f
              e83a 00a5  ld   $a5
              e83b 0085  ld   $85
              e83c 00dc  ld   $dc
              e83d 0065  ld   $65
              e83e 0011  ld   $11
              e83f 00bc  ld   $bc
              e840 007e  ld   $7e
              e841 0085  ld   $85
              e842 00ac  ld   $ac
              e843 0063  ld   $63
              e844 0011  ld   $11
              e845 00cc  ld   $cc
              e846 007e  ld   $7e
              e847 002b  ld   $2b
              e848 00c4  ld   $c4
              e849 004d  ld   $4d
              e84a 003f  ld   $3f
              e84b 00c6  ld   $c6
              e84c 0085  ld   $85
              e84d 00f0  ld   $f0
              e84e 0003  ld   $03
              e84f 0011  ld   $11
              e850 00b1  ld   $b1
              e851 007e  ld   $7e
              e852 0085  ld   $85
              e853 00ac  ld   $ac
              e854 0063  ld   $63
              e855 0016  ld   $16
              e856 001c  ld   $1c
              e857 00a4  ld   $a4
              e858 0016  ld   $16
              e859 0067  ld   $67
              e85a 00a5  ld   $a5
              e85b 0085  ld   $85
              e85c 00dc  ld   $dc
              e85d 0065  ld   $65
              e85e 0011  ld   $11
              e85f 00aa  ld   $aa
              e860 007e  ld   $7e
              e861 0085  ld   $85
              e862 00ac  ld   $ac
              e863 0063  ld   $63
              e864 0011  ld   $11
              e865 00a1  ld   $a1
              e866 007f  ld   $7f
              e867 002b  ld   $2b
              e868 00c4  ld   $c4
              e869 004d  ld   $4d
              e86a 003f  ld   $3f
              e86b 00c6  ld   $c6
              e86c 0085  ld   $85
              e86d 00f0  ld   $f0
              e86e 0003  ld   $03
              e86f 0011  ld   $11
              e870 00ee  ld   $ee
              e871 007d  ld   $7d
              e872 0085  ld   $85
              e873 00ac  ld   $ac
              e874 0063  ld   $63
              e875 0016  ld   $16
              e876 0024  ld   $24
              e877 00a4  ld   $a4
              e878 0016  ld   $16
              e879 006f  ld   $6f
              e87a 00a5  ld   $a5
              e87b 0085  ld   $85
              e87c 00dc  ld   $dc
              e87d 0065  ld   $65
              e87e 0011  ld   $11
              e87f 00a4  ld   $a4
              e880 007e  ld   $7e
              e881 0085  ld   $85
              e882 00ac  ld   $ac
              e883 0063  ld   $63
              e884 0011  ld   $11
              e885 00c1  ld   $c1
              e886 007e  ld   $7e
              e887 002b  ld   $2b
              e888 00c4  ld   $c4
              e889 004d  ld   $4d
              e88a 003f  ld   $3f
              e88b 00c6  ld   $c6
              e88c 0085  ld   $85
              e88d 00f0  ld   $f0
              e88e 0003  ld   $03
              e88f 0011  ld   $11
              e890 00e3  ld   $e3
              e891 007d  ld   $7d
              e892 0085  ld   $85
              e893 00ac  ld   $ac
              e894 0063  ld   $63
              e895 0085  ld   $85
              e896 00b7  ld   $b7
              e897 0070  ld   $70
              e898 0011  ld   $11
              e899 0000  ld   $00
              e89a 0015  ld   $15
              e89b 002b  ld   $2b
              e89c 00a2  ld   $a2
              e89d 0016  ld   $16
              e89e 0003  ld   $03
              e89f 00a4  ld   $a4
              e8a0 0016  ld   $16
              e8a1 0055  ld   $55
              e8a2 00a5  ld   $a5
              e8a3 0085  ld   $85
              e8a4 00dc  ld   $dc
              e8a5 0065  ld   $65
              e8a6 0011  ld   $11
              e8a7 00db  ld   $db
              e8a8 007d  ld   $7d
              e8a9 0085  ld   $85
              e8aa 00ac  ld   $ac
              e8ab 0063  ld   $63
              e8ac 0016  ld   $16
              e8ad 008e  ld   $8e
              e8ae 00a4  ld   $a4
              e8af 0016  ld   $16
              e8b0 0055  ld   $55
              e8b1 00a5  ld   $a5
              e8b2 0085  ld   $85
              e8b3 00dc  ld   $dc
              e8b4 0065  ld   $65
              e8b5 0059  ld   $59
              e8b6 0079  ld   $79
              e8b7 0085  ld   $85
              e8b8 00ac  ld   $ac
              e8b9 0063  ld   $63
              e8ba 0011  ld   $11
              e8bb 00a1  ld   $a1
              e8bc 007e  ld   $7e
              e8bd 0085  ld   $85
              e8be 00ac  ld   $ac
              e8bf 0063  ld   $63
              e8c0 004d  ld   $4d
              e8c1 0012  ld   $12
              e8c2 003c  ld   $3c
              e8c3 004d  ld   $4d
              e8c4 0026  ld   $26
              e8c5 0038  ld   $38
              e8c6 0059  ld   $59
              e8c7 0000  ld   $00
              e8c8 002b  ld   $2b
              e8c9 003e  ld   $3e
              e8ca 002b  ld   $2b
              e8cb 0040  ld   $40
              e8cc 002b  ld   $2b
              e8cd 0042  ld   $42
              e8ce 002b  ld   $2b
              e8cf 0044  ld   $44
              e8d0 0011  ld   $11
              e8d1 0097  ld   $97
              e8d2 0010  ld   $10
              e8d3 002b  ld   $2b
              e8d4 0046  ld   $46
              e8d5 0011  ld   $11
              e8d6 0097  ld   $97
              e8d7 0017  ld   $17
              e8d8 002b  ld   $2b
              e8d9 0048  ld   $48
              e8da 0016  ld   $16
              e8db 0003  ld   $03
              e8dc 0087  ld   $87
              e8dd 0011  ld   $11
              e8de 00a0  ld   $a0
              e8df 0075  ld   $75
              e8e0 002b  ld   $2b
              e8e1 0092  ld   $92
              e8e2 0085  ld   $85
              e8e3 00a0  ld   $a0
              e8e4 0062  ld   $62
              e8e5 0085  ld   $85
              e8e6 00c7  ld   $c7
              e8e7 006b  ld   $6b
              e8e8 0085  ld   $85
              e8e9 00ce  ld   $ce
              e8ea 0006  ld   $06
              e8eb 0085  ld   $85
              e8ec 0075  ld   $75
              e8ed 0005  ld   $05
              e8ee 002f  ld   $2f
              e8ef 00d6  ld   $d6
              e8f0 006e  ld   $6e
              e8f1 001a  ld   $1a
              e8f2 0011  ld   $11
              e8f3 002b  ld   $2b
              e8f4 0082  ld   $82
              e8f5 004d  ld   $4d
              e8f6 0000  ld   $00
              e8f7 0084  ld   $84
              e8f8 0085  ld   $85
              e8f9 00ce  ld   $ce
              e8fa 0066  ld   $66
              e8fb fe00  bra  ac          ;+-----------------------------------+
              e8fc fcfd  bra  $e8fd       ;|                                   |
              e8fd 1418  ld   $18,y       ;| Trampoline for page $e800 lookups |
              e8fe e006  jmp  y,$06       ;|                                   |
              e8ff c218  st   [$18]       ;+-----------------------------------+
              e900 0065  ld   $65
              e901 00a3  ld   $a3
              e902 002d  ld   $2d
              e903 00e1  ld   $e1
              e904 00a4  ld   $a4
              e905 0038  ld   $38
              e906 003c  ld   $3c
              e907 0085  ld   $85
              e908 00dc  ld   $dc
              e909 0065  ld   $65
              e90a 0059  ld   $59
              e90b 003e  ld   $3e
              e90c 0085  ld   $85
              e90d 00b2  ld   $b2
              e90e 0062  ld   $62
              e90f 0085  ld   $85
              e910 0008  ld   $08
              e911 0004  ld   $04
              e912 0085  ld   $85
              e913 004f  ld   $4f
              e914 0004  ld   $04
              e915 0085  ld   $85
              e916 0034  ld   $34
              e917 0004  ld   $04
              e918 0095  ld   $95
              e919 003e  ld   $3e
              e91a 0085  ld   $85
              e91b 00c6  ld   $c6
              e91c 0003  ld   $03
              e91d 0075  ld   $75
              e91e 0065  ld   $65
              e91f 00a3  ld   $a3
              e920 00c6  ld   $c6
              e921 0021  ld   $21
              e922 00c4  ld   $c4
              e923 0085  ld   $85
              e924 0000  ld   $00
              e925 0004  ld   $04
              e926 0004  ld   $04
              e927 0000  ld   $00
              e928 00f8  ld   $f8
              e929 0085  ld   $85
              e92a 00ac  ld   $ac
              e92b 0063  ld   $63
              e92c 0016  ld   $16
              e92d 002a  ld   $2a
              e92e 00a3  ld   $a3
              e92f 0063  ld   $63
              e930 00ff  ld   $ff
              e931 0075  ld   $75
              e932 0011  ld   $11
              e933 00da  ld   $da
              e934 0073  ld   $73
              e935 00ad  ld   $ad
              e936 00fc  ld   $fc
              e937 0042  ld   $42
              e938 00bb  ld   $bb
              e939 0030  ld   $30
              e93a 0004  ld   $04
              e93b 0011  ld   $11
              e93c 00da  ld   $da
              e93d 0073  ld   $73
              e93e 00ad  ld   $ad
              e93f 002b  ld   $2b
              e940 0042  ld   $42
              e941 0011  ld   $11
              e942 0000  ld   $00
              e943 0015  ld   $15
              e944 002b  ld   $2b
              e945 00a2  ld   $a2
              e946 0016  ld   $16
              e947 0040  ld   $40
              e948 00a4  ld   $a4
              e949 0016  ld   $16
              e94a 0055  ld   $55
              e94b 00a5  ld   $a5
              e94c 0085  ld   $85
              e94d 00dc  ld   $dc
              e94e 0065  ld   $65
              e94f 0085  ld   $85
              e950 00ba  ld   $ba
              e951 0065  ld   $65
              e952 0011  ld   $11
              e953 00d0  ld   $d0
              e954 0073  ld   $73
              e955 0085  ld   $85
              e956 00ac  ld   $ac
              e957 0063  ld   $63
              e958 0085  ld   $85
              e959 00b7  ld   $b7
              e95a 0070  ld   $70
              e95b 0063  ld   $63
              e95c 00ff  ld   $ff
              e95d 0075  ld   $75
              e95e 00c7  ld   $c7
              e95f 0003  ld   $03
              e960 006f  ld   $6f
              e961 003e  ld   $3e
              e962 00bd  ld   $bd
              e963 004b  ld   $4b
              e964 0004  ld   $04
              e965 0053  ld   $53
              e966 0044  ld   $44
              e967 00c3  ld   $c3
              e968 007d  ld   $7d
              e969 005e  ld   $5e
              e96a 0014  ld   $14
              e96b 0095  ld   $95
              e96c 0044  ld   $44
              e96d 00a7  ld   $a7
              e96e 0018  ld   $18
              e96f 0044  ld   $44
              e970 00bd  ld   $bd
              e971 004b  ld   $4b
              e972 0004  ld   $04
              e973 004d  ld   $4d
              e974 0000  ld   $00
              e975 0044  ld   $44
              e976 0063  ld   $63
              e977 00ff  ld   $ff
              e978 0075  ld   $75
              e979 004d  ld   $4d
              e97a 0000  ld   $00
              e97b 003a  ld   $3a
              e97c 003f  ld   $3f
              e97d 003a  ld   $3a
              e97e 00c0  ld   $c0
              e97f 0079  ld   $79
              e980 0051  ld   $51
              e981 003a  ld   $3a
              e982 00c0  ld   $c0
              e983 007b  ld   $7b
              e984 002b  ld   $2b
              e985 004a  ld   $4a
              e986 003f  ld   $3f
              e987 003a  ld   $3a
              e988 00c0  ld   $c0
              e989 0078  ld   $78
              e98a 0051  ld   $51
              e98b 003a  ld   $3a
              e98c 00c0  ld   $c0
              e98d 007a  ld   $7a
              e98e 002b  ld   $2b
              e98f 004c  ld   $4c
              e990 003f  ld   $3f
              e991 003a  ld   $3a
              e992 00c0  ld   $c0
              e993 0079  ld   $79
              e994 002b  ld   $2b
              e995 00e8  ld   $e8
              e996 003f  ld   $3f
              e997 003a  ld   $3a
              e998 00c0  ld   $c0
              e999 0075  ld   $75
              e99a 0099  ld   $99
              e99b 00e8  ld   $e8
              e99c 0051  ld   $51
              e99d 003a  ld   $3a
              e99e 00c0  ld   $c0
              e99f 0079  ld   $79
              e9a0 002b  ld   $2b
              e9a1 004e  ld   $4e
              e9a2 003f  ld   $3f
              e9a3 003a  ld   $3a
              e9a4 00c0  ld   $c0
              e9a5 0078  ld   $78
              e9a6 002b  ld   $2b
              e9a7 00e8  ld   $e8
              e9a8 003f  ld   $3f
              e9a9 003a  ld   $3a
              e9aa 00c0  ld   $c0
              e9ab 0074  ld   $74
              e9ac 0099  ld   $99
              e9ad 00e8  ld   $e8
              e9ae 0051  ld   $51
              e9af 003a  ld   $3a
              e9b0 00c0  ld   $c0
              e9b1 0078  ld   $78
              e9b2 002b  ld   $2b
              e9b3 0050  ld   $50
              e9b4 0021  ld   $21
              e9b5 004e  ld   $4e
              e9b6 00b1  ld   $b1
              e9b7 0033  ld   $33
              e9b8 00c7  ld   $c7
              e9b9 004f  ld   $4f
              e9ba 007b  ld   $7b
              e9bb 0000  ld   $00
              e9bc 00c5  ld   $c5
              e9bd 0097  ld   $97
              e9be 0004  ld   $04
              e9bf 0085  ld   $85
              e9c0 002b  ld   $2b
              e9c1 0005  ld   $05
              e9c2 0021  ld   $21
              e9c3 0050  ld   $50
              e9c4 00b1  ld   $b1
              e9c5 0033  ld   $33
              e9c6 00c7  ld   $c7
              e9c7 001f  ld   $1f
              e9c8 007b  ld   $7b
              e9c9 0000  ld   $00
              e9ca 00c5  ld   $c5
              e9cb 00a5  ld   $a5
              e9cc 0004  ld   $04
              e9cd 0085  ld   $85
              e9ce 002b  ld   $2b
              e9cf 0005  ld   $05
              e9d0 001c  ld   $1c
              e9d1 004b  ld   $4b
              e9d2 0052  ld   $52
              e9d3 0050  ld   $50
              e9d4 001c  ld   $1c
              e9d5 004d  ld   $4d
              e9d6 0054  ld   $54
              e9d7 003c  ld   $3c
              e9d8 00a2  ld   $a2
              e9d9 0054  ld   $54
              e9da 0052  ld   $52
              e9db 00b1  ld   $b1
              e9dc 0031  ld   $31
              e9dd 0082  ld   $82
              e9de 0080  ld   $80
              e9df 00bb  ld   $bb
              e9e0 00c0  ld   $c0
              e9e1 0004  ld   $04
              e9e2 00a2  ld   $a2
              e9e3 0054  ld   $54
              e9e4 0052  ld   $52
              e9e5 0016  ld   $16
              e9e6 0000  ld   $00
              e9e7 00a3  ld   $a3
              e9e8 002f  ld   $2f
              e9e9 00a3  ld   $a3
              e9ea 0054  ld   $54
              e9eb 003f  ld   $3f
              e9ec 003a  ld   $3a
              e9ed 00c0  ld   $c0
              e9ee 007c  ld   $7c
              e9ef 002b  ld   $2b
              e9f0 0056  ld   $56
              e9f1 001c  ld   $1c
              e9f2 004f  ld   $4f
              e9f3 0052  ld   $52
              e9f4 0050  ld   $50
              e9f5 001c  ld   $1c
              e9f6 0051  ld   $51
              e9f7 0054  ld   $54
              e9f8 003c  ld   $3c
              e9f9 00a2  ld   $a2
              e9fa 0054  ld   $54
              e9fb fe00  bra  ac          ;+-----------------------------------+
              e9fc fcfd  bra  $e9fd       ;|                                   |
              e9fd 1418  ld   $18,y       ;| Trampoline for page $e900 lookups |
              e9fe e006  jmp  y,$06       ;|                                   |
              e9ff c218  st   [$18]       ;+-----------------------------------+
              ea00 0052  ld   $52
              ea01 00b1  ld   $b1
              ea02 0031  ld   $31
              ea03 00bd  ld   $bd
              ea04 001f  ld   $1f
              ea05 0005  ld   $05
              ea06 0021  ld   $21
              ea07 0056  ld   $56
              ea08 00e6  ld   $e6
              ea09 0014  ld   $14
              ea0a 00c3  ld   $c3
              ea0b 00e9  ld   $e9
              ea0c 0004  ld   $04
              ea0d 00a2  ld   $a2
              ea0e 0054  ld   $54
              ea0f 0052  ld   $52
              ea10 0016  ld   $16
              ea11 00bf  ld   $bf
              ea12 00a3  ld   $a3
              ea13 002f  ld   $2f
              ea14 00a3  ld   $a3
              ea15 0054  ld   $54
              ea16 0085  ld   $85
              ea17 0019  ld   $19
              ea18 0005  ld   $05
              ea19 0021  ld   $21
              ea1a 0056  ld   $56
              ea1b 00e6  ld   $e6
              ea1c 000a  ld   $0a
              ea1d 00c3  ld   $c3
              ea1e 0007  ld   $07
              ea1f 0005  ld   $05
              ea20 00a2  ld   $a2
              ea21 0054  ld   $54
              ea22 0052  ld   $52
              ea23 0085  ld   $85
              ea24 0000  ld   $00
              ea25 0005  ld   $05
              ea26 0005  ld   $05
              ea27 0000  ld   $00
              ea28 00fd  ld   $fd
              ea29 0016  ld   $16
              ea2a 00aa  ld   $aa
              ea2b 00a3  ld   $a3
              ea2c 002f  ld   $2f
              ea2d 00a3  ld   $a3
              ea2e 0054  ld   $54
              ea2f 0085  ld   $85
              ea30 0019  ld   $19
              ea31 0005  ld   $05
              ea32 0021  ld   $21
              ea33 0056  ld   $56
              ea34 00e6  ld   $e6
              ea35 0004  ld   $04
              ea36 00c3  ld   $c3
              ea37 0017  ld   $17
              ea38 0005  ld   $05
              ea39 00a2  ld   $a2
              ea3a 0054  ld   $54
              ea3b 0052  ld   $52
              ea3c 0016  ld   $16
              ea3d 0095  ld   $95
              ea3e 00a3  ld   $a3
              ea3f 002f  ld   $2f
              ea40 00a3  ld   $a3
              ea41 0054  ld   $54
              ea42 0021  ld   $21
              ea43 0056  ld   $56
              ea44 00e3  ld   $e3
              ea45 0001  ld   $01
              ea46 0051  ld   $51
              ea47 003a  ld   $3a
              ea48 00c0  ld   $c0
              ea49 007c  ld   $7c
              ea4a 00a7  ld   $a7
              ea4b 001f  ld   $1f
              ea4c 003a  ld   $3a
              ea4d 0093  ld   $93
              ea4e 003a  ld   $3a
              ea4f 00bd  ld   $bd
              ea50 0051  ld   $51
              ea51 0004  ld   $04
              ea52 0063  ld   $63
              ea53 00ff  ld   $ff
              ea54 0075  ld   $75
              ea55 0059  ld   $59
              ea56 0000  ld   $00
              ea57 0051  ld   $51
              ea58 003a  ld   $3a
              ea59 00c0  ld   $c0
              ea5a 007c  ld   $7c
              ea5b 0059  ld   $59
              ea5c 0000  ld   $00
              ea5d 0051  ld   $51
              ea5e 003a  ld   $3a
              ea5f 00c0  ld   $c0
              ea60 0079  ld   $79
              ea61 0059  ld   $59
              ea62 0000  ld   $00
              ea63 0051  ld   $51
              ea64 003a  ld   $3a
              ea65 00c0  ld   $c0
              ea66 0078  ld   $78
              ea67 00b1  ld   $b1
              ea68 002f  ld   $2f
              ea69 00c7  ld   $c7
              ea6a 0007  ld   $07
              ea6b 001f  ld   $1f
              ea6c 00ff  ld   $ff
              ea6d 00c7  ld   $c7
              ea6e 0004  ld   $04
              ea6f 001d  ld   $1d
              ea70 0000  ld   $00
              ea71 0051  ld   $51
              ea72 003a  ld   $3a
              ea73 00c0  ld   $c0
              ea74 0075  ld   $75
              ea75 00b1  ld   $b1
              ea76 002f  ld   $2f
              ea77 00c7  ld   $c7
              ea78 0007  ld   $07
              ea79 001f  ld   $1f
              ea7a 00ff  ld   $ff
              ea7b 00c7  ld   $c7
              ea7c 0004  ld   $04
              ea7d 001d  ld   $1d
              ea7e 0000  ld   $00
              ea7f 0051  ld   $51
              ea80 003a  ld   $3a
              ea81 00c0  ld   $c0
              ea82 0074  ld   $74
              ea83 003f  ld   $3f
              ea84 003a  ld   $3a
              ea85 00c0  ld   $c0
              ea86 0075  ld   $75
              ea87 00b1  ld   $b1
              ea88 0033  ld   $33
              ea89 00e6  ld   $e6
              ea8a 00c8  ld   $c8
              ea8b 00d9  ld   $d9
              ea8c 00ea  ld   $ea
              ea8d 003f  ld   $3f
              ea8e 003a  ld   $3a
              ea8f 00c0  ld   $c0
              ea90 0074  ld   $74
              ea91 00b1  ld   $b1
              ea92 0033  ld   $33
              ea93 00e6  ld   $e6
              ea94 00c8  ld   $c8
              ea95 00d9  ld   $d9
              ea96 0018  ld   $18
              ea97 00fa  ld   $fa
              ea98 00ea  ld   $ea
              ea99 00bb  ld   $bb
              ea9a 003c  ld   $3c
              ea9b 0005  ld   $05
              ea9c 0063  ld   $63
              ea9d 00ff  ld   $ff
              ea9e 0075  ld   $75
              ea9f 004d  ld   $4d
              eaa0 0000  ld   $00
              eaa1 003a  ld   $3a
              eaa2 0085  ld   $85
              eaa3 002b  ld   $2b
              eaa4 0005  ld   $05
              eaa5 00a7  ld   $a7
              eaa6 001f  ld   $1f
              eaa7 003a  ld   $3a
              eaa8 0093  ld   $93
              eaa9 003a  ld   $3a
              eaaa 00bd  ld   $bd
              eaab 0077  ld   $77
              eaac 0005  ld   $05
              eaad 0063  ld   $63
              eaae 00ff  ld   $ff
              eaaf 0075  ld   $75
              eab0 004d  ld   $4d
              eab1 0000  ld   $00
              eab2 0058  ld   $58
              eab3 003f  ld   $3f
              eab4 0058  ld   $58
              eab5 00ae  ld   $ae
              eab6 0074  ld   $74
              eab7 002b  ld   $2b
              eab8 00c4  ld   $c4
              eab9 004d  ld   $4d
              eaba 0000  ld   $00
              eabb 00c6  ld   $c6
              eabc 004d  ld   $4d
              eabd 0002  ld   $02
              eabe 00c8  ld   $c8
              eabf 004d  ld   $4d
              eac0 0002  ld   $02
              eac1 00ca  ld   $ca
              eac2 003f  ld   $3f
              eac3 0058  ld   $58
              eac4 00ae  ld   $ae
              eac5 0079  ld   $79
              eac6 002b  ld   $2b
              eac7 00cc  ld   $cc
              eac8 003f  ld   $3f
              eac9 0058  ld   $58
              eaca 00ae  ld   $ae
              eacb 0078  ld   $78
              eacc 002b  ld   $2b
              eacd 00ce  ld   $ce
              eace 0085  ld   $85
              eacf 00e4  ld   $e4
              ead0 0005  ld   $05
              ead1 003f  ld   $3f
              ead2 0058  ld   $58
              ead3 00ae  ld   $ae
              ead4 0074  ld   $74
              ead5 002b  ld   $2b
              ead6 00c4  ld   $c4
              ead7 004d  ld   $4d
              ead8 003f  ld   $3f
              ead9 00c6  ld   $c6
              eada 004d  ld   $4d
              eadb 0000  ld   $00
              eadc 00c8  ld   $c8
              eadd 004d  ld   $4d
              eade 0000  ld   $00
              eadf 00ca  ld   $ca
              eae0 003f  ld   $3f
              eae1 0058  ld   $58
              eae2 00ae  ld   $ae
              eae3 0079  ld   $79
              eae4 002b  ld   $2b
              eae5 00cc  ld   $cc
              eae6 003f  ld   $3f
              eae7 0058  ld   $58
              eae8 00ae  ld   $ae
              eae9 0078  ld   $78
              eaea 002b  ld   $2b
              eaeb 00ce  ld   $ce
              eaec 0085  ld   $85
              eaed 00e4  ld   $e4
              eaee 0005  ld   $05
              eaef 00a7  ld   $a7
              eaf0 0008  ld   $08
              eaf1 0058  ld   $58
              eaf2 0093  ld   $93
              eaf3 0058  ld   $58
              eaf4 00bd  ld   $bd
              eaf5 0088  ld   $88
              eaf6 0005  ld   $05
              eaf7 0011  ld   $11
              eaf8 0010  ld   $10
              eaf9 003f  ld   $3f
              eafa 002b  ld   $2b
              eafb fe00  bra  ac          ;+-----------------------------------+
              eafc fcfd  bra  $eafd       ;|                                   |
              eafd 1418  ld   $18,y       ;| Trampoline for page $ea00 lookups |
              eafe e006  jmp  y,$06       ;|                                   |
              eaff c218  st   [$18]       ;+-----------------------------------+
              eb00 00a2  ld   $a2
              eb01 0016  ld   $16
              eb02 0051  ld   $51
              eb03 00a4  ld   $a4
              eb04 0016  ld   $16
              eb05 0013  ld   $13
              eb06 00a5  ld   $a5
              eb07 0085  ld   $85
              eb08 00dc  ld   $dc
              eb09 0065  ld   $65
              eb0a 0011  ld   $11
              eb0b 00ed  ld   $ed
              eb0c 0073  ld   $73
              eb0d 0085  ld   $85
              eb0e 00ac  ld   $ac
              eb0f 0063  ld   $63
              eb10 0063  ld   $63
              eb11 00ff  ld   $ff
              eb12 0075  ld   $75
              eb13 0065  ld   $65
              eb14 00a3  ld   $a3
              eb15 00c6  ld   $c6
              eb16 0042  ld   $42
              eb17 0001  ld   $01
              eb18 00e8  ld   $e8
              eb19 00ca  ld   $ca
              eb1a 0032  ld   $32
              eb1b 005a  ld   $5a
              eb1c 00ca  ld   $ca
              eb1d 0042  ld   $42
              eb1e 0001  ld   $01
              eb1f 00d8  ld   $d8
              eb20 00ca  ld   $ca
              eb21 0042  ld   $42
              eb22 0001  ld   $01
              eb23 00e8  ld   $e8
              eb24 00c8  ld   $c8
              eb25 0032  ld   $32
              eb26 003a  ld   $3a
              eb27 00c8  ld   $c8
              eb28 0085  ld   $85
              eb29 0000  ld   $00
              eb2a 0006  ld   $06
              eb2b 0006  ld   $06
              eb2c 0000  ld   $00
              eb2d 00ff  ld   $ff
              eb2e 0042  ld   $42
              eb2f 0001  ld   $01
              eb30 00dc  ld   $dc
              eb31 00c8  ld   $c8
              eb32 0059  ld   $59
              eb33 000d  ld   $0d
              eb34 0099  ld   $99
              eb35 00cc  ld   $cc
              eb36 0099  ld   $99
              eb37 003a  ld   $3a
              eb38 005e  ld   $5e
              eb39 00a4  ld   $a4
              eb3a 0059  ld   $59
              eb3b 0013  ld   $13
              eb3c 0099  ld   $99
              eb3d 00ce  ld   $ce
              eb3e 0099  ld   $99
              eb3f 005a  ld   $5a
              eb40 005e  ld   $5e
              eb41 00a5  ld   $a5
              eb42 0085  ld   $85
              eb43 00dc  ld   $dc
              eb44 0065  ld   $65
              eb45 0032  ld   $32
              eb46 0090  ld   $90
              eb47 00c4  ld   $c4
              eb48 0085  ld   $85
              eb49 00c9  ld   $c9
              eb4a 006a  ld   $6a
              eb4b 0095  ld   $95
              eb4c 003a  ld   $3a
              eb4d 00b8  ld   $b8
              eb4e 00dc  ld   $dc
              eb4f 00c3  ld   $c3
              eb50 0002  ld   $02
              eb51 0006  ld   $06
              eb52 0095  ld   $95
              eb53 005a  ld   $5a
              eb54 00b8  ld   $b8
              eb55 00d8  ld   $d8
              eb56 00c3  ld   $c3
              eb57 00f1  ld   $f1
              eb58 0005  ld   $05
              eb59 0063  ld   $63
              eb5a 00ff  ld   $ff
              eb5b 0075  ld   $75
              eb5c 004d  ld   $4d
              eb5d 0000  ld   $00
              eb5e 003e  ld   $3e
              eb5f 0016  ld   $16
              eb60 0015  ld   $15
              eb61 00a3  ld   $a3
              eb62 0016  ld   $16
              eb63 0040  ld   $40
              eb64 00a4  ld   $a4
              eb65 0016  ld   $16
              eb66 0055  ld   $55
              eb67 00a5  ld   $a5
              eb68 0085  ld   $85
              eb69 00dc  ld   $dc
              eb6a 0065  ld   $65
              eb6b 0011  ld   $11
              eb6c 00a8  ld   $a8
              eb6d 0079  ld   $79
              eb6e 0085  ld   $85
              eb6f 00a1  ld   $a1
              eb70 006f  ld   $6f
              eb71 0016  ld   $16
              eb72 0048  ld   $48
              eb73 00a4  ld   $a4
              eb74 0085  ld   $85
              eb75 00dc  ld   $dc
              eb76 0065  ld   $65
              eb77 0011  ld   $11
              eb78 00a8  ld   $a8
              eb79 0078  ld   $78
              eb7a 0085  ld   $85
              eb7b 00a1  ld   $a1
              eb7c 006f  ld   $6f
              eb7d 0016  ld   $16
              eb7e 0054  ld   $54
              eb7f 00a4  ld   $a4
              eb80 0085  ld   $85
              eb81 00dc  ld   $dc
              eb82 0065  ld   $65
              eb83 0011  ld   $11
              eb84 00a8  ld   $a8
              eb85 0074  ld   $74
              eb86 0085  ld   $85
              eb87 00a1  ld   $a1
              eb88 006f  ld   $6f
              eb89 0032  ld   $32
              eb8a 0024  ld   $24
              eb8b 005c  ld   $5c
              eb8c 004d  ld   $4d
              eb8d 000d  ld   $0d
              eb8e 0026  ld   $26
              eb8f 0085  ld   $85
              eb90 00a0  ld   $a0
              eb91 006c  ld   $6c
              eb92 0032  ld   $32
              eb93 005c  ld   $5c
              eb94 0028  ld   $28
              eb95 00bd  ld   $bd
              eb96 006b  ld   $6b
              eb97 0006  ld   $06
              eb98 004d  ld   $4d
              eb99 000c  ld   $0c
              eb9a 005c  ld   $5c
              eb9b 0032  ld   $32
              eb9c 0024  ld   $24
              eb9d 005e  ld   $5e
              eb9e 004d  ld   $4d
              eb9f 003c  ld   $3c
              eba0 0026  ld   $26
              eba1 0085  ld   $85
              eba2 00a0  ld   $a0
              eba3 006c  ld   $6c
              eba4 0032  ld   $32
              eba5 005e  ld   $5e
              eba6 0028  ld   $28
              eba7 0032  ld   $32
              eba8 0024  ld   $24
              eba9 0060  ld   $60
              ebaa 004d  ld   $4d
              ebab 003c  ld   $3c
              ebac 0026  ld   $26
              ebad 0085  ld   $85
              ebae 00a0  ld   $a0
              ebaf 006c  ld   $6c
              ebb0 0032  ld   $32
              ebb1 0060  ld   $60
              ebb2 0028  ld   $28
              ebb3 0011  ld   $11
              ebb4 00dc  ld   $dc
              ebb5 0073  ld   $73
              ebb6 002b  ld   $2b
              ebb7 0082  ld   $82
              ebb8 0021  ld   $21
              ebb9 005c  ld   $5c
              ebba 00f0  ld   $f0
              ebbb 0082  ld   $82
              ebbc 0011  ld   $11
              ebbd 00db  ld   $db
              ebbe 0073  ld   $73
              ebbf 002b  ld   $2b
              ebc0 0082  ld   $82
              ebc1 0021  ld   $21
              ebc2 005e  ld   $5e
              ebc3 00f0  ld   $f0
              ebc4 0082  ld   $82
              ebc5 0011  ld   $11
              ebc6 00da  ld   $da
              ebc7 0073  ld   $73
              ebc8 002b  ld   $2b
              ebc9 0082  ld   $82
              ebca 0021  ld   $21
              ebcb 0060  ld   $60
              ebcc 00f0  ld   $f0
              ebcd 0082  ld   $82
              ebce 00c7  ld   $c7
              ebcf 00fd  ld   $fd
              ebd0 0066  ld   $66
              ebd1 00aa  ld   $aa
              ebd2 0063  ld   $63
              ebd3 00ff  ld   $ff
              ebd4 0075  ld   $75
              ebd5 0085  ld   $85
              ebd6 00a1  ld   $a1
              ebd7 0069  ld   $69
              ebd8 0011  ld   $11
              ebd9 00f6  ld   $f6
              ebda 0001  ld   $01
              ebdb 0077  ld   $77
              ebdc 0000  ld   $00
              ebdd 0000  ld   $00
              ebde 0011  ld   $11
              ebdf 0000  ld   $00
              ebe0 0002  ld   $02
              ebe1 002b  ld   $2b
              ebe2 0062  ld   $62
              ebe3 003f  ld   $3f
              ebe4 0040  ld   $40
              ebe5 00d8  ld   $d8
              ebe6 007e  ld   $7e
              ebe7 002b  ld   $2b
              ebe8 0064  ld   $64
              ebe9 00a7  ld   $a7
              ebea 0005  ld   $05
              ebeb 0040  ld   $40
              ebec 00bd  ld   $bd
              ebed 00c2  ld   $c2
              ebee 0006  ld   $06
              ebef 004d  ld   $4d
              ebf0 00a8  ld   $a8
              ebf1 0062  ld   $62
              ebf2 0032  ld   $32
              ebf3 0024  ld   $24
              ebf4 0064  ld   $64
              ebf5 0021  ld   $21
              ebf6 0062  ld   $62
              ebf7 0085  ld   $85
              ebf8 00e1  ld   $e1
              ebf9 0061  ld   $61
              ebfa 0063  ld   $63
              ebfb fe00  bra  ac          ;+-----------------------------------+
              ebfc fcfd  bra  $ebfd       ;|                                   |
              ebfd 1418  ld   $18,y       ;| Trampoline for page $eb00 lookups |
              ebfe e006  jmp  y,$06       ;|                                   |
              ebff c218  st   [$18]       ;+-----------------------------------+
              ec00 00ff  ld   $ff
              ec01 0075  ld   $75
              ec02 0016  ld   $16
              ec03 0002  ld   $02
              ec04 0087  ld   $87
              ec05 0085  ld   $85
              ec06 00c0  ld   $c0
              ec07 0063  ld   $63
              ec08 0063  ld   $63
              ec09 00ff  ld   $ff
              ec0a 0075  ld   $75
              ec0b 0011  ld   $11
              ec0c 0008  ld   $08
              ec0d 0020  ld   $20
              ec0e 002f  ld   $2f
              ec0f 0000  ld   $00
              ec10 0027  ld   $27
              ec11 0016  ld   $16
              ec12 0002  ld   $02
              ec13 002c  ld   $2c
              ec14 0016  ld   $16
              ec15 00ef  ld   $ef
              ec16 0011  ld   $11
              ec17 0063  ld   $63
              ec18 00ff  ld   $ff
              ec19 0075  ld   $75
              ec1a 004d  ld   $4d
              ec1b 0002  ld   $02
              ec1c 00c4  ld   $c4
              ec1d 0085  ld   $85
              ec1e 00d7  ld   $d7
              ec1f 0006  ld   $06
              ec20 0085  ld   $85
              ec21 00a6  ld   $a6
              ec22 0006  ld   $06
              ec23 0063  ld   $63
              ec24 00ff  ld   $ff
              ec25 0075  ld   $75
              ec26 004d  ld   $4d
              ec27 0002  ld   $02
              ec28 00c4  ld   $c4
              ec29 0085  ld   $85
              ec2a 00d7  ld   $d7
              ec2b 0006  ld   $06
              ec2c 0085  ld   $85
              ec2d 002d  ld   $2d
              ec2e 0006  ld   $06
              ec2f 0085  ld   $85
              ec30 00a0  ld   $a0
              ec31 0008  ld   $08
              ec32 0008  ld   $08
              ec33 00a0  ld   $a0
              ec34 005d  ld   $5d
              ec35 0016  ld   $16
              ec36 00ef  ld   $ef
              ec37 0011  ld   $11
              ec38 0063  ld   $63
              ec39 00ff  ld   $ff
              ec3a 0075  ld   $75
              ec3b 00e1  ld   $e1
              ec3c 00a4  ld   $a4
              ec3d 0038  ld   $38
              ec3e 003c  ld   $3c
              ec3f 0085  ld   $85
              ec40 00dc  ld   $dc
              ec41 0065  ld   $65
              ec42 0059  ld   $59
              ec43 0020  ld   $20
              ec44 0085  ld   $85
              ec45 00b2  ld   $b2
              ec46 0062  ld   $62
              ec47 00a7  ld   $a7
              ec48 005c  ld   $5c
              ec49 003c  ld   $3c
              ec4a 00bd  ld   $bd
              ec4b 00b8  ld   $b8
              ec4c 0008  ld   $08
              ec4d 0063  ld   $63
              ec4e 00ff  ld   $ff
              ec4f 004d  ld   $4d
              ec50 005c  ld   $5c
              ec51 003c  ld   $3c
              ec52 004d  ld   $4d
              ec53 0002  ld   $02
              ec54 00c4  ld   $c4
              ec55 0085  ld   $85
              ec56 00d7  ld   $d7
              ec57 0006  ld   $06
              ec58 0042  ld   $42
              ec59 0005  ld   $05
              ec5a 0040  ld   $40
              ec5b 0040  ld   $40
              ec5c 0063  ld   $63
              ec5d 00ff  ld   $ff
              ec5e 0075  ld   $75
              ec5f 00e1  ld   $e1
              ec60 00a4  ld   $a4
              ec61 0038  ld   $38
              ec62 003c  ld   $3c
              ec63 0085  ld   $85
              ec64 00dc  ld   $dc
              ec65 0065  ld   $65
              ec66 0059  ld   $59
              ec67 0020  ld   $20
              ec68 0085  ld   $85
              ec69 00b2  ld   $b2
              ec6a 0062  ld   $62
              ec6b 00a7  ld   $a7
              ec6c 0012  ld   $12
              ec6d 003c  ld   $3c
              ec6e 00bd  ld   $bd
              ec6f 00dc  ld   $dc
              ec70 0008  ld   $08
              ec71 0063  ld   $63
              ec72 00ff  ld   $ff
              ec73 004d  ld   $4d
              ec74 0012  ld   $12
              ec75 003c  ld   $3c
              ec76 004d  ld   $4d
              ec77 0002  ld   $02
              ec78 00c4  ld   $c4
              ec79 0085  ld   $85
              ec7a 00d7  ld   $d7
              ec7b 0006  ld   $06
              ec7c 0044  ld   $44
              ec7d 0005  ld   $05
              ec7e 0040  ld   $40
              ec7f 0040  ld   $40
              ec80 0063  ld   $63
              ec81 00ff  ld   $ff
              ec82 0075  ld   $75
              ec83 00e1  ld   $e1
              ec84 00a4  ld   $a4
              ec85 0038  ld   $38
              ec86 003c  ld   $3c
              ec87 0085  ld   $85
              ec88 00dc  ld   $dc
              ec89 0065  ld   $65
              ec8a 0059  ld   $59
              ec8b 0020  ld   $20
              ec8c 0085  ld   $85
              ec8d 00b2  ld   $b2
              ec8e 0062  ld   $62
              ec8f 0085  ld   $85
              ec90 00a0  ld   $a0
              ec91 0009  ld   $09
              ec92 0009  ld   $09
              ec93 00a0  ld   $a0
              ec94 0060  ld   $60
              ec95 0042  ld   $42
              ec96 0008  ld   $08
              ec97 0038  ld   $38
              ec98 0038  ld   $38
              ec99 0021  ld   $21
              ec9a 0038  ld   $38
              ec9b 00e6  ld   $e6
              ec9c 0046  ld   $46
              ec9d 00c3  ld   $c3
              ec9e 00ae  ld   $ae
              ec9f 0009  ld   $09
              eca0 004d  ld   $4d
              eca1 0046  ld   $46
              eca2 0038  ld   $38
              eca3 0063  ld   $63
              eca4 00ff  ld   $ff
              eca5 004d  ld   $4d
              eca6 0002  ld   $02
              eca7 00c4  ld   $c4
              eca8 0085  ld   $85
              eca9 00d7  ld   $d7
              ecaa 0006  ld   $06
              ecab 0042  ld   $42
              ecac 0001  ld   $01
              ecad 0040  ld   $40
              ecae 0040  ld   $40
              ecaf 00a7  ld   $a7
              ecb0 0012  ld   $12
              ecb1 003c  ld   $3c
              ecb2 006b  ld   $6b
              ecb3 00e8  ld   $e8
              ecb4 0021  ld   $21
              ecb5 0040  ld   $40
              ecb6 00e6  ld   $e6
              ecb7 0004  ld   $04
              ecb8 00d9  ld   $d9
              ecb9 0018  ld   $18
              ecba 00f8  ld   $f8
              ecbb 00e8  ld   $e8
              ecbc 00bb  ld   $bb
              ecbd 00cb  ld   $cb
              ecbe 0009  ld   $09
              ecbf 004d  ld   $4d
              ecc0 0004  ld   $04
              ecc1 0040  ld   $40
              ecc2 00a7  ld   $a7
              ecc3 005c  ld   $5c
              ecc4 003c  ld   $3c
              ecc5 006b  ld   $6b
              ecc6 00e8  ld   $e8
              ecc7 0021  ld   $21
              ecc8 0040  ld   $40
              ecc9 00e6  ld   $e6
              ecca 0009  ld   $09
              eccb 00d9  ld   $d9
              eccc 0018  ld   $18
              eccd 00f8  ld   $f8
              ecce 00e8  ld   $e8
              eccf 00bb  ld   $bb
              ecd0 00de  ld   $de
              ecd1 0009  ld   $09
              ecd2 004d  ld   $4d
              ecd3 0009  ld   $09
              ecd4 0040  ld   $40
              ecd5 0063  ld   $63
              ecd6 00ff  ld   $ff
              ecd7 0075  ld   $75
              ecd8 00e1  ld   $e1
              ecd9 00a4  ld   $a4
              ecda 0038  ld   $38
              ecdb 003c  ld   $3c
              ecdc 0085  ld   $85
              ecdd 00dc  ld   $dc
              ecde 0065  ld   $65
              ecdf 0059  ld   $59
              ece0 0020  ld   $20
              ece1 0085  ld   $85
              ece2 00b2  ld   $b2
              ece3 0062  ld   $62
              ece4 0044  ld   $44
              ece5 0008  ld   $08
              ece6 0038  ld   $38
              ece7 0038  ld   $38
              ece8 0021  ld   $21
              ece9 0038  ld   $38
              ecea 00e6  ld   $e6
              eceb 0026  ld   $26
              ecec 00c5  ld   $c5
              eced 00a0  ld   $a0
              ecee 000a  ld   $0a
              ecef 004d  ld   $4d
              ecf0 0026  ld   $26
              ecf1 0038  ld   $38
              ecf2 0085  ld   $85
              ecf3 00a0  ld   $a0
              ecf4 000a  ld   $0a
              ecf5 000a  ld   $0a
              ecf6 00a0  ld   $a0
              ecf7 0034  ld   $34
              ecf8 0063  ld   $63
              ecf9 00ff  ld   $ff
              ecfa 004d  ld   $4d
              ecfb fe00  bra  ac          ;+-----------------------------------+
              ecfc fcfd  bra  $ecfd       ;|                                   |
              ecfd 1418  ld   $18,y       ;| Trampoline for page $ec00 lookups |
              ecfe e006  jmp  y,$06       ;|                                   |
              ecff c218  st   [$18]       ;+-----------------------------------+
              ed00 0002  ld   $02
              ed01 00c4  ld   $c4
              ed02 0085  ld   $85
              ed03 00d7  ld   $d7
              ed04 0006  ld   $06
              ed05 0044  ld   $44
              ed06 0001  ld   $01
              ed07 0040  ld   $40
              ed08 0040  ld   $40
              ed09 00a7  ld   $a7
              ed0a 0012  ld   $12
              ed0b 003c  ld   $3c
              ed0c 006b  ld   $6b
              ed0d 00e8  ld   $e8
              ed0e 0021  ld   $21
              ed0f 0040  ld   $40
              ed10 00d7  ld   $d7
              ed11 0018  ld   $18
              ed12 00f8  ld   $f8
              ed13 00e8  ld   $e8
              ed14 00bb  ld   $bb
              ed15 00bb  ld   $bb
              ed16 000a  ld   $0a
              ed17 004d  ld   $4d
              ed18 0000  ld   $00
              ed19 0040  ld   $40
              ed1a 00a7  ld   $a7
              ed1b 005c  ld   $5c
              ed1c 003c  ld   $3c
              ed1d 006b  ld   $6b
              ed1e 00e8  ld   $e8
              ed1f 0021  ld   $21
              ed20 0040  ld   $40
              ed21 00e6  ld   $e6
              ed22 0005  ld   $05
              ed23 00d7  ld   $d7
              ed24 0018  ld   $18
              ed25 00f8  ld   $f8
              ed26 00e8  ld   $e8
              ed27 00bb  ld   $bb
              ed28 00ce  ld   $ce
              ed29 000a  ld   $0a
              ed2a 004d  ld   $4d
              ed2b 0005  ld   $05
              ed2c 0040  ld   $40
              ed2d 0063  ld   $63
              ed2e 00ff  ld   $ff
              ed2f 00b4  ld   $b4
              ed30 0080  ld   $80
              ed31 0061  ld   $61
              ed32 00da  ld   $da
              ed33 0024  ld   $24
              ed34 002f  ld   $2f
              ed35 00d6  ld   $d6
              ed36 006e  ld   $6e
              ed37 009e  ld   $9e
              ed38 00d8  ld   $d8
              ed39 0082  ld   $82
              ed3a 00ff  ld   $ff
              ed3b 002b  ld   $2b
              ed3c 001a  ld   $1a
              ed3d 004d  ld   $4d
              ed3e 00ad  ld   $ad
              ed3f 0022  ld   $22
              ed40 00b4  ld   $b4
              ed41 00e2  ld   $e2
              ed42 0011  ld   $11
              ed43 00e0  ld   $e0
              ed44 0064  ld   $64
              ed45 0025  ld   $25
              ed46 0075  ld   $75
              ed47 0011  ld   $11
              ed48 00e8  ld   $e8
              ed49 0064  ld   $64
              ed4a 007d  ld   $7d
              ed4b 0084  ld   $84
              ed4c 00ff  ld   $ff
              ed4d 001a  ld   $1a
              ed4e 002d  ld   $2d
              ed4f 0035  ld   $35
              ed50 0072  ld   $72
              ed51 00fb  ld   $fb
              ed52 0075  ld   $75
              ed53 0085  ld   $85
              ed54 00cd  ld   $cd
              ed55 0067  ld   $67
              ed56 0063  ld   $63
              ed57 00ff  ld   $ff
              ed58 0062  ld   $62
              ed59 00a0  ld   $a0
              ed5a 005f  ld   $5f
              ed5b 0075  ld   $75
              ed5c 0085  ld   $85
              ed5d 00c0  ld   $c0
              ed5e 0063  ld   $63
              ed5f 0063  ld   $63
              ed60 00ff  ld   $ff
              ed61 0011  ld   $11
              ed62 00dd  ld   $dd
              ed63 0073  ld   $73
              ed64 002f  ld   $2f
              ed65 0092  ld   $92
              ed66 0047  ld   $47
              ed67 00e3  ld   $e3
              ed68 0008  ld   $08
              ed69 002f  ld   $2f
              ed6a 009a  ld   $9a
              ed6b 0047  ld   $47
              ed6c 00ff  ld   $ff
              ed6d 0075  ld   $75
              ed6e 005e  ld   $5e
              ed6f 0092  ld   $92
              ed70 0085  ld   $85
              ed71 00d4  ld   $d4
              ed72 0063  ld   $63
              ed73 001a  ld   $1a
              ed74 0092  ld   $92
              ed75 0085  ld   $85
              ed76 00cc  ld   $cc
              ed77 0068  ld   $68
              ed78 0063  ld   $63
              ed79 00ff  ld   $ff
              ed7a 0075  ld   $75
              ed7b 00c7  ld   $c7
              ed7c 0002  ld   $02
              ed7d 0069  ld   $69
              ed7e 00aa  ld   $aa
              ed7f 0085  ld   $85
              ed80 00b7  ld   $b7
              ed81 0070  ld   $70
              ed82 00c7  ld   $c7
              ed83 00fd  ld   $fd
              ed84 0066  ld   $66
              ed85 00aa  ld   $aa
              ed86 0063  ld   $63
              ed87 00ff  ld   $ff
              ed88 0075  ld   $75
              ed89 0085  ld   $85
              ed8a 00a2  ld   $a2
              ed8b 0064  ld   $64
              ed8c 0011  ld   $11
              ed8d 0003  ld   $03
              ed8e 000b  ld   $0b
              ed8f 002b  ld   $2b
              ed90 0022  ld   $22
              ed91 0065  ld   $65
              ed92 0025  ld   $25
              ed93 00a2  ld   $a2
              ed94 0063  ld   $63
              ed95 00ff  ld   $ff
              ed96 0011  ld   $11
              ed97 00a0  ld   $a0
              ed98 0077  ld   $77
              ed99 002b  ld   $2b
              ed9a 0098  ld   $98
              ed9b 0046  ld   $46
              ed9c 0084  ld   $84
              ed9d 002b  ld   $2b
              ed9e 009a  ld   $9a
              ed9f 0023  ld   $23
              eda0 0098  ld   $98
              eda1 00d1  ld   $d1
              eda2 009a  ld   $9a
              eda3 0035  ld   $35
              eda4 0072  ld   $72
              eda5 00e2  ld   $e2
              eda6 00ff  ld   $ff
              eda7 0075  ld   $75
              eda8 0011  ld   $11
              eda9 00a1  ld   $a1
              edaa 0077  ld   $77
              edab 002b  ld   $2b
              edac 0092  ld   $92
              edad 0046  ld   $46
              edae 0084  ld   $84
              edaf 002b  ld   $2b
              edb0 009a  ld   $9a
              edb1 0021  ld   $21
              edb2 0092  ld   $92
              edb3 0085  ld   $85
              edb4 00a0  ld   $a0
              edb5 0066  ld   $66
              edb6 00f3  ld   $f3
              edb7 009a  ld   $9a
              edb8 0063  ld   $63
              edb9 00ff  ld   $ff
              edba 0063  ld   $63
              edbb 00a0  ld   $a0
              edbc 005f  ld   $5f
              edbd 0011  ld   $11
              edbe 00dd  ld   $dd
              edbf 0073  ld   $73
              edc0 002f  ld   $2f
              edc1 0092  ld   $92
              edc2 0045  ld   $45
              edc3 00e3  ld   $e3
              edc4 0008  ld   $08
              edc5 002f  ld   $2f
              edc6 009a  ld   $9a
              edc7 0045  ld   $45
              edc8 00ff  ld   $ff
              edc9 0075  ld   $75
              edca 002b  ld   $2b
              edcb 0082  ld   $82
              edcc 0085  ld   $85
              edcd 00d4  ld   $d4
              edce 0063  ld   $63
              edcf 0093  ld   $93
              edd0 0082  ld   $82
              edd1 0023  ld   $23
              edd2 0082  ld   $82
              edd3 0035  ld   $35
              edd4 003f  ld   $3f
              edd5 00bc  ld   $bc
              edd6 0085  ld   $85
              edd7 00cc  ld   $cc
              edd8 0068  ld   $68
              edd9 0090  ld   $90
              edda 00b2  ld   $b2
              eddb 0063  ld   $63
              eddc 00ff  ld   $ff
              eddd 0075  ld   $75
              edde 0085  ld   $85
              eddf 00a3  ld   $a3
              ede0 006d  ld   $6d
              ede1 0063  ld   $63
              ede2 001a  ld   $1a
              ede3 0087  ld   $87
              ede4 002f  ld   $2f
              ede5 0000  ld   $00
              ede6 0032  ld   $32
              ede7 002f  ld   $2f
              ede8 0001  ld   $01
              ede9 0032  ld   $32
              edea 002f  ld   $2f
              edeb 0002  ld   $02
              edec 0032  ld   $32
              eded 002f  ld   $2f
              edee 0003  ld   $03
              edef 0032  ld   $32
              edf0 00ff  ld   $ff
              edf1 00c7  ld   $c7
              edf2 0010  ld   $10
              edf3 006f  ld   $6f
              edf4 00aa  ld   $aa
              edf5 00bd  ld   $bd
              edf6 009f  ld   $9f
              edf7 0067  ld   $67
              edf8 0011  ld   $11
              edf9 00e1  ld   $e1
              edfa 0004  ld   $04
              edfb fe00  bra  ac          ;+-----------------------------------+
              edfc fcfd  bra  $edfd       ;|                                   |
              edfd 1418  ld   $18,y       ;| Trampoline for page $ed00 lookups |
              edfe e006  jmp  y,$06       ;|                                   |
              edff c218  st   [$18]       ;+-----------------------------------+
              ee00 002b  ld   $2b
              ee01 0022  ld   $22
              ee02 0032  ld   $32
              ee03 0024  ld   $24
              ee04 00a2  ld   $a2
              ee05 0021  ld   $21
              ee06 00a4  ld   $a4
              ee07 002f  ld   $2f
              ee08 0028  ld   $28
              ee09 0059  ld   $59
              ee0a 00ff  ld   $ff
              ee0b 00c7  ld   $c7
              ee0c 0094  ld   $94
              ee0d 0028  ld   $28
              ee0e 0092  ld   $92
              ee0f 0016  ld   $16
              ee10 0003  ld   $03
              ee11 0026  ld   $26
              ee12 0021  ld   $21
              ee13 0028  ld   $28
              ee14 002f  ld   $2f
              ee15 0094  ld   $94
              ee16 0057  ld   $57
              ee17 001c  ld   $1c
              ee18 0028  ld   $28
              ee19 0028  ld   $28
              ee1a 0004  ld   $04
              ee1b 0075  ld   $75
              ee1c 0085  ld   $85
              ee1d 00aa  ld   $aa
              ee1e 0064  ld   $64
              ee1f 0063  ld   $63
              ee20 00ff  ld   $ff
              ee21 0064  ld   $64
              ee22 00a2  ld   $a2
              ee23 005d  ld   $5d
              ee24 004d  ld   $4d
              ee25 0002  ld   $02
              ee26 00a4  ld   $a4
              ee27 00c7  ld   $c7
              ee28 00fb  ld   $fb
              ee29 0066  ld   $66
              ee2a 00aa  ld   $aa
              ee2b 00ff  ld   $ff
              ee2c 001c  ld   $1c
              ee2d 00a4  ld   $a4
              ee2e 00a4  ld   $a4
              ee2f 0004  ld   $04
              ee30 00a7  ld   $a7
              ee31 009c  ld   $9c
              ee32 00a4  ld   $a4
              ee33 0035  ld   $35
              ee34 0056  ld   $56
              ee35 00be  ld   $be
              ee36 00c7  ld   $c7
              ee37 0008  ld   $08
              ee38 006f  ld   $6f
              ee39 00aa  ld   $aa
              ee3a 0035  ld   $35
              ee3b 0072  ld   $72
              ee3c 00be  ld   $be
              ee3d 0075  ld   $75
              ee3e 0085  ld   $85
              ee3f 00be  ld   $be
              ee40 006d  ld   $6d
              ee41 0063  ld   $63
              ee42 00ff  ld   $ff
              ee43 002b  ld   $2b
              ee44 0082  ld   $82
              ee45 00e6  ld   $e6
              ee46 000a  ld   $0a
              ee47 0035  ld   $35
              ee48 0050  ld   $50
              ee49 00cc  ld   $cc
              ee4a 002b  ld   $2b
              ee4b 0082  ld   $82
              ee4c 0093  ld   $93
              ee4d 0084  ld   $84
              ee4e 0090  ld   $90
              ee4f 00c1  ld   $c1
              ee50 00c7  ld   $c7
              ee51 0030  ld   $30
              ee52 0072  ld   $72
              ee53 0084  ld   $84
              ee54 00d1  ld   $d1
              ee55 0086  ld   $86
              ee56 00c7  ld   $c7
              ee57 0030  ld   $30
              ee58 0072  ld   $72
              ee59 0082  ld   $82
              ee5a 00d1  ld   $d1
              ee5b 0086  ld   $86
              ee5c 0093  ld   $93
              ee5d 0086  ld   $86
              ee5e 0016  ld   $16
              ee5f 0030  ld   $30
              ee60 0084  ld   $84
              ee61 00ff  ld   $ff
              ee62 00ff  ld   $ff
              ee63 00df  ld   $df
              ee64 00fe  ld   $fe
              ee65 0021  ld   $21
              ee66 002a  ld   $2a
              ee67 00ec  ld   $ec
              ee68 0000  ld   $00
              ee69 0085  ld   $85
              ee6a 0000  ld   $00
              ee6b 0000  ld   $00
              ee6c 0090  ld   $90
              ee6d 00ee  ld   $ee
              ee6e 00ff  ld   $ff
              ee6f 0090  ld   $90
              ee70 00ee  ld   $ee
              ee71 00ff  ld   $ff
              ee72 00ee  ld   $ee
              ee73 0000  ld   $00
              ee74 002b  ld   $2b
              ee75 002a  ld   $2a
              ee76 00df  ld   $df
              ee77 0002  ld   $02
              ee78 0063  ld   $63
              ee79 0016  ld   $16
              ee7a 00ff  ld   $ff
              ee7b 000e  ld   $0e
              ee7c 0011  ld   $11
              ee7d 0000  ld   $00
              ee7e 0004  ld   $04
              ee7f 007f  ld   $7f
              ee80 0000  ld   $00
              ee81 0065  ld   $65
              ee82 00a1  ld   $a1
              ee83 005e  ld   $5e
              ee84 0032  ld   $32
              ee85 00a4  ld   $a4
              ee86 0098  ld   $98
              ee87 0085  ld   $85
              ee88 00a6  ld   $a6
              ee89 0062  ld   $62
              ee8a 0011  ld   $11
              ee8b 00a0  ld   $a0
              ee8c 0077  ld   $77
              ee8d 0099  ld   $99
              ee8e 0094  ld   $94
              ee8f 0085  ld   $85
              ee90 00ac  ld   $ac
              ee91 0063  ld   $63
              ee92 0085  ld   $85
              ee93 00a0  ld   $a0
              ee94 0063  ld   $63
              ee95 00a9  ld   $a9
              ee96 009a  ld   $9a
              ee97 009c  ld   $9c
              ee98 009a  ld   $9a
              ee99 0059  ld   $59
              ee9a 0000  ld   $00
              ee9b 0063  ld   $63
              ee9c 00ff  ld   $ff
              ee9d 0075  ld   $75
              ee9e 004d  ld   $4d
              ee9f 0000  ld   $00
              eea0 0084  ld   $84
              eea1 0011  ld   $11
              eea2 00d1  ld   $d1
              eea3 0073  ld   $73
              eea4 002b  ld   $2b
              eea5 0086  ld   $86
              eea6 0011  ld   $11
              eea7 00dc  ld   $dc
              eea8 0073  ld   $73
              eea9 002b  ld   $2b
              eeaa 0088  ld   $88
              eeab 00ad  ld   $ad
              eeac 0085  ld   $85
              eead 00c1  ld   $c1
              eeae 0064  ld   $64
              eeaf 0014  ld   $14
              eeb0 0088  ld   $88
              eeb1 005b  ld   $5b
              eeb2 0088  ld   $88
              eeb3 0085  ld   $85
              eeb4 00c1  ld   $c1
              eeb5 0064  ld   $64
              eeb6 0014  ld   $14
              eeb7 0088  ld   $88
              eeb8 005b  ld   $5b
              eeb9 0088  ld   $88
              eeba 0085  ld   $85
              eebb 00c1  ld   $c1
              eebc 0064  ld   $64
              eebd 0063  ld   $63
              eebe 00ff  ld   $ff
              eebf 00c7  ld   $c7
              eec0 0010  ld   $10
              eec1 006f  ld   $6f
              eec2 00aa  ld   $aa
              eec3 00bd  ld   $bd
              eec4 009e  ld   $9e
              eec5 006e  ld   $6e
              eec6 00a7  ld   $a7
              eec7 009a  ld   $9a
              eec8 00a4  ld   $a4
              eec9 0035  ld   $35
              eeca 0056  ld   $56
              eecb 00ea  ld   $ea
              eecc 0016  ld   $16
              eecd 0000  ld   $00
              eece 00a4  ld   $a4
              eecf 00a7  ld   $a7
              eed0 0070  ld   $70
              eed1 00a5  ld   $a5
              eed2 0035  ld   $35
              eed3 0050  ld   $50
              eed4 00f8  ld   $f8
              eed5 0016  ld   $16
              eed6 0070  ld   $70
              eed7 00a5  ld   $a5
              eed8 00c7  ld   $c7
              eed9 0004  ld   $04
              eeda 0069  ld   $69
              eedb 00aa  ld   $aa
              eedc 00ff  ld   $ff
              eedd 00c7  ld   $c7
              eede 00fb  ld   $fb
              eedf 0066  ld   $66
              eee0 00aa  ld   $aa
              eee1 00ff  ld   $ff
              eee2 0066  ld   $66
              eee3 00a0  ld   $a0
              eee4 005f  ld   $5f
              eee5 002b  ld   $2b
              eee6 0092  ld   $92
              eee7 004d  ld   $4d
              eee8 0000  ld   $00
              eee9 0096  ld   $96
              eeea 005b  ld   $5b
              eeeb 0092  ld   $92
              eeec 00e6  ld   $e6
              eeed 002d  ld   $2d
              eeee 0035  ld   $35
              eeef 0072  ld   $72
              eef0 00ac  ld   $ac
              eef1 0093  ld   $93
              eef2 0092  ld   $92
              eef3 005b  ld   $5b
              eef4 0092  ld   $92
              eef5 00e6  ld   $e6
              eef6 0030  ld   $30
              eef7 0035  ld   $35
              eef8 0050  ld   $50
              eef9 00c6  ld   $c6
              eefa 002b  ld   $2b
              eefb fe00  bra  ac          ;+-----------------------------------+
              eefc fcfd  bra  $eefd       ;|                                   |
              eefd 1418  ld   $18,y       ;| Trampoline for page $ee00 lookups |
              eefe e006  jmp  y,$06       ;|                                   |
              eeff c218  st   [$18]       ;+-----------------------------------+
              ef00 0094  ld   $94
              ef01 00e6  ld   $e6
              ef02 0009  ld   $09
              ef03 0035  ld   $35
              ef04 004d  ld   $4d
              ef05 00c6  ld   $c6
              ef06 0021  ld   $21
              ef07 0096  ld   $96
              ef08 00b1  ld   $b1
              ef09 0055  ld   $55
              ef0a 0099  ld   $99
              ef0b 0094  ld   $94
              ef0c 002b  ld   $2b
              ef0d 0096  ld   $96
              ef0e 0093  ld   $93
              ef0f 0092  ld   $92
              ef10 0090  ld   $90
              ef11 00ac  ld   $ac
              ef12 002f  ld   $2f
              ef13 0096  ld   $96
              ef14 0067  ld   $67
              ef15 0021  ld   $21
              ef16 0096  ld   $96
              ef17 00ff  ld   $ff
              ef18 0075  ld   $75
              ef19 0011  ld   $11
              ef1a 00c2  ld   $c2
              ef1b 0073  ld   $73
              ef1c 002b  ld   $2b
              ef1d 0086  ld   $86
              ef1e 002b  ld   $2b
              ef1f 0092  ld   $92
              ef20 0011  ld   $11
              ef21 00b6  ld   $b6
              ef22 0073  ld   $73
              ef23 002b  ld   $2b
              ef24 0088  ld   $88
              ef25 003b  ld   $3b
              ef26 0092  ld   $92
              ef27 0035  ld   $35
              ef28 0072  ld   $72
              ef29 00e7  ld   $e7
              ef2a 0021  ld   $21
              ef2b 0084  ld   $84
              ef2c 0035  ld   $35
              ef2d 003f  ld   $3f
              ef2e 00e5  ld   $e5
              ef2f 00cf  ld   $cf
              ef30 0084  ld   $84
              ef31 0063  ld   $63
              ef32 00ff  ld   $ff
              ef33 00b8  ld   $b8
              ef34 0082  ld   $82
              ef35 0035  ld   $35
              ef36 003f  ld   $3f
              ef37 00f2  ld   $f2
              ef38 001c  ld   $1c
              ef39 0092  ld   $92
              ef3a 0092  ld   $92
              ef3b 0002  ld   $02
              ef3c 0090  ld   $90
              ef3d 00d9  ld   $d9
              ef3e 0021  ld   $21
              ef3f 0092  ld   $92
              ef40 00b8  ld   $b8
              ef41 0086  ld   $86
              ef42 0099  ld   $99
              ef43 0088  ld   $88
              ef44 00f6  ld   $f6
              ef45 00cf  ld   $cf
              ef46 0018  ld   $18
              ef47 0063  ld   $63
              ef48 00ff  ld   $ff
              ef49 0067  ld   $67
              ef4a 00a1  ld   $a1
              ef4b 005e  ld   $5e
              ef4c 0032  ld   $32
              ef4d 0024  ld   $24
              ef4e 00a2  ld   $a2
              ef4f 0021  ld   $21
              ef50 00a4  ld   $a4
              ef51 002f  ld   $2f
              ef52 0028  ld   $28
              ef53 0059  ld   $59
              ef54 00ff  ld   $ff
              ef55 0075  ld   $75
              ef56 0011  ld   $11
              ef57 0003  ld   $03
              ef58 000b  ld   $0b
              ef59 002b  ld   $2b
              ef5a 0022  ld   $22
              ef5b 0065  ld   $65
              ef5c 0025  ld   $25
              ef5d 00a2  ld   $a2
              ef5e 0011  ld   $11
              ef5f 0000  ld   $00
              ef60 0001  ld   $01
              ef61 0067  ld   $67
              ef62 0027  ld   $27
              ef63 004d  ld   $4d
              ef64 0006  ld   $06
              ef65 009e  ld   $9e
              ef66 0016  ld   $16
              ef67 00a0  ld   $a0
              ef68 0024  ld   $24
              ef69 0016  ld   $16
              ef6a 0000  ld   $00
              ef6b 0026  ld   $26
              ef6c 00b4  ld   $b4
              ef6d 00f3  ld   $f3
              ef6e 0093  ld   $93
              ef6f 0027  ld   $27
              ef70 009e  ld   $9e
              ef71 00b9  ld   $b9
              ef72 009e  ld   $9e
              ef73 0085  ld   $85
              ef74 00d4  ld   $d4
              ef75 0063  ld   $63
              ef76 0063  ld   $63
              ef77 00ff  ld   $ff
              ef78 0011  ld   $11
              ef79 00da  ld   $da
              ef7a 0073  ld   $73
              ef7b 002b  ld   $2b
              ef7c 008a  ld   $8a
              ef7d 00ad  ld   $ad
              ef7e 00e3  ld   $e3
              ef7f 0001  ld   $01
              ef80 00f0  ld   $f0
              ef81 008a  ld   $8a
              ef82 008c  ld   $8c
              ef83 003c  ld   $3c
              ef84 0035  ld   $35
              ef85 0072  ld   $72
              ef86 00fc  ld   $fc
              ef87 0059  ld   $59
              ef88 0000  ld   $00
              ef89 00d1  ld   $d1
              ef8a 008a  ld   $8a
              ef8b 005b  ld   $5b
              ef8c 008a  ld   $8a
              ef8d 00e3  ld   $e3
              ef8e 0001  ld   $01
              ef8f 00f0  ld   $f0
              ef90 008a  ld   $8a
              ef91 008c  ld   $8c
              ef92 003c  ld   $3c
              ef93 0035  ld   $35
              ef94 0072  ld   $72
              ef95 00fc  ld   $fc
              ef96 0059  ld   $59
              ef97 0000  ld   $00
              ef98 00d1  ld   $d1
              ef99 008a  ld   $8a
              ef9a 005b  ld   $5b
              ef9b 008a  ld   $8a
              ef9c 00e3  ld   $e3
              ef9d 0001  ld   $01
              ef9e 00f0  ld   $f0
              ef9f 008a  ld   $8a
              efa0 00e6  ld   $e6
              efa1 0018  ld   $18
              efa2 0035  ld   $35
              efa3 0050  ld   $50
              efa4 00fc  ld   $fc
              efa5 0059  ld   $59
              efa6 0000  ld   $00
              efa7 00f0  ld   $f0
              efa8 008a  ld   $8a
              efa9 00ff  ld   $ff
              efaa 0068  ld   $68
              efab 00a0  ld   $a0
              efac 005f  ld   $5f
              efad 0075  ld   $75
              efae 008c  ld   $8c
              efaf 007f  ld   $7f
              efb0 0035  ld   $35
              efb1 0072  ld   $72
              efb2 00ae  ld   $ae
              efb3 00c7  ld   $c7
              efb4 0020  ld   $20
              efb5 006f  ld   $6f
              efb6 002d  ld   $2d
              efb7 0035  ld   $35
              efb8 0072  ld   $72
              efb9 00ae  ld   $ae
              efba 004d  ld   $4d
              efbb 0020  ld   $20
              efbc 0092  ld   $92
              efbd 0032  ld   $32
              efbe 00a4  ld   $a4
              efbf 009a  ld   $9a
              efc0 0021  ld   $21
              efc1 0092  ld   $92
              efc2 0085  ld   $85
              efc3 00b2  ld   $b2
              efc4 0062  ld   $62
              efc5 0063  ld   $63
              efc6 00ff  ld   $ff
              efc7 00a7  ld   $a7
              efc8 00ff  ld   $ff
              efc9 0082  ld   $82
              efca 0035  ld   $35
              efcb 003f  ld   $3f
              efcc 00c9  ld   $c9
              efcd 0011  ld   $11
              efce 0008  ld   $08
              efcf 0020  ld   $20
              efd0 0018  ld   $18
              efd1 0018  ld   $18
              efd2 002f  ld   $2f
              efd3 0000  ld   $00
              efd4 0027  ld   $27
              efd5 0016  ld   $16
              efd6 0002  ld   $02
              efd7 002c  ld   $2c
              efd8 00ff  ld   $ff
              efd9 002b  ld   $2b
              efda 0092  ld   $92
              efdb 00c7  ld   $c7
              efdc 0084  ld   $84
              efdd 0089  ld   $89
              efde 0020  ld   $20
              efdf 0035  ld   $35
              efe0 0072  ld   $72
              efe1 00fc  ld   $fc
              efe2 00c7  ld   $c7
              efe3 0010  ld   $10
              efe4 006f  ld   $6f
              efe5 00aa  ld   $aa
              efe6 00bd  ld   $bd
              efe7 00e7  ld   $e7
              efe8 0063  ld   $63
              efe9 00c7  ld   $c7
              efea 0094  ld   $94
              efeb 0025  ld   $25
              efec 0092  ld   $92
              efed 0016  ld   $16
              efee 0005  ld   $05
              efef 0096  ld   $96
              eff0 0021  ld   $21
              eff1 0094  ld   $94
              eff2 007f  ld   $7f
              eff3 0000  ld   $00
              eff4 005e  ld   $5e
              eff5 0026  ld   $26
              eff6 00b4  ld   $b4
              eff7 00cb  ld   $cb
              eff8 0093  ld   $93
              eff9 0094  ld   $94
              effa 0093  ld   $93
              effb fe00  bra  ac          ;+-----------------------------------+
              effc fcfd  bra  $effd       ;|                                   |
              effd 1418  ld   $18,y       ;| Trampoline for page $ef00 lookups |
              effe e006  jmp  y,$06       ;|                                   |
              efff c218  st   [$18]       ;+-----------------------------------+
              f000 0028  ld   $28
              f001 009e  ld   $9e
              f002 00e1  ld   $e1
              f003 0096  ld   $96
              f004 0016  ld   $16
              f005 0000  ld   $00
              f006 0026  ld   $26
              f007 00b4  ld   $b4
              f008 00cb  ld   $cb
              f009 0093  ld   $93
              f00a 0028  ld   $28
              f00b 0075  ld   $75
              f00c 0085  ld   $85
              f00d 00a0  ld   $a0
              f00e 0070  ld   $70
              f00f 0063  ld   $63
              f010 00ff  ld   $ff
              f011 0069  ld   $69
              f012 00a1  ld   $a1
              f013 005e  ld   $5e
              f014 0075  ld   $75
              f015 0085  ld   $85
              f016 00cd  ld   $cd
              f017 0062  ld   $62
              f018 004d  ld   $4d
              f019 0008  ld   $08
              f01a 0094  ld   $94
              f01b 0016  ld   $16
              f01c 003c  ld   $3c
              f01d 009e  ld   $9e
              f01e 0016  ld   $16
              f01f 00a0  ld   $a0
              f020 0024  ld   $24
              f021 0016  ld   $16
              f022 0000  ld   $00
              f023 0026  ld   $26
              f024 0065  ld   $65
              f025 0027  ld   $27
              f026 0094  ld   $94
              f027 00b4  ld   $b4
              f028 00f3  ld   $f3
              f029 0016  ld   $16
              f02a 00a0  ld   $a0
              f02b 0024  ld   $24
              f02c 0016  ld   $16
              f02d 0000  ld   $00
              f02e 0026  ld   $26
              f02f 0059  ld   $59
              f030 0087  ld   $87
              f031 00b8  ld   $b8
              f032 0094  ld   $94
              f033 005e  ld   $5e
              f034 0027  ld   $27
              f035 00b4  ld   $b4
              f036 00f3  ld   $f3
              f037 0093  ld   $93
              f038 0094  ld   $94
              f039 009e  ld   $9e
              f03a 00a9  ld   $a9
              f03b 009e  ld   $9e
              f03c 0063  ld   $63
              f03d 00ff  ld   $ff
              f03e 0085  ld   $85
              f03f 00a6  ld   $a6
              f040 0062  ld   $62
              f041 004d  ld   $4d
              f042 0020  ld   $20
              f043 0092  ld   $92
              f044 0085  ld   $85
              f045 00a0  ld   $a0
              f046 0068  ld   $68
              f047 0085  ld   $85
              f048 00a0  ld   $a0
              f049 0063  ld   $63
              f04a 0011  ld   $11
              f04b 00a0  ld   $a0
              f04c 0077  ld   $77
              f04d 002b  ld   $2b
              f04e 0082  ld   $82
              f04f 0021  ld   $21
              f050 0092  ld   $92
              f051 00b8  ld   $b8
              f052 0082  ld   $82
              f053 00e6  ld   $e6
              f054 0001  ld   $01
              f055 00f0  ld   $f0
              f056 0082  ld   $82
              f057 0099  ld   $99
              f058 0082  ld   $82
              f059 00e3  ld   $e3
              f05a 0001  ld   $01
              f05b 0025  ld   $25
              f05c 0000  ld   $00
              f05d 00c7  ld   $c7
              f05e 003f  ld   $3f
              f05f 006f  ld   $6f
              f060 0096  ld   $96
              f061 00e6  ld   $e6
              f062 0005  ld   $05
              f063 0035  ld   $35
              f064 0072  ld   $72
              f065 00f6  ld   $f6
              f066 0085  ld   $85
              f067 00db  ld   $db
              f068 0062  ld   $62
              f069 0090  ld   $90
              f06a 00f9  ld   $f9
              f06b 0085  ld   $85
              f06c 00ec  ld   $ec
              f06d 0062  ld   $62
              f06e 0059  ld   $59
              f06f 0001  ld   $01
              f070 0063  ld   $63
              f071 00ff  ld   $ff
              f072 006a  ld   $6a
              f073 00a0  ld   $a0
              f074 005f  ld   $5f
              f075 001a  ld   $1a
              f076 0021  ld   $21
              f077 0082  ld   $82
              f078 00fc  ld   $fc
              f079 002b  ld   $2b
              f07a 0084  ld   $84
              f07b 00b8  ld   $b8
              f07c 0082  ld   $82
              f07d 0035  ld   $35
              f07e 003f  ld   $3f
              f07f 00c6  ld   $c6
              f080 0021  ld   $21
              f081 0082  ld   $82
              f082 00e6  ld   $e6
              f083 0080  ld   $80
              f084 0035  ld   $35
              f085 0072  ld   $72
              f086 00b9  ld   $b9
              f087 0021  ld   $21
              f088 0084  ld   $84
              f089 00b8  ld   $b8
              f08a 0082  ld   $82
              f08b 0035  ld   $35
              f08c 003f  ld   $3f
              f08d 00c6  ld   $c6
              f08e 0090  ld   $90
              f08f 00c0  ld   $c0
              f090 0021  ld   $21
              f091 0084  ld   $84
              f092 00b8  ld   $b8
              f093 0082  ld   $82
              f094 0035  ld   $35
              f095 004d  ld   $4d
              f096 00c6  ld   $c6
              f097 001a  ld   $1a
              f098 0006  ld   $06
              f099 00f0  ld   $f0
              f09a 007e  ld   $7e
              f09b 0090  ld   $90
              f09c 00c0  ld   $c0
              f09d 00ff  ld   $ff
              f09e 0075  ld   $75
              f09f 001a  ld   $1a
              f0a0 00a4  ld   $a4
              f0a1 002b  ld   $2b
              f0a2 0082  ld   $82
              f0a3 001a  ld   $1a
              f0a4 00a5  ld   $a5
              f0a5 002b  ld   $2b
              f0a6 0084  ld   $84
              f0a7 0046  ld   $46
              f0a8 0090  ld   $90
              f0a9 002b  ld   $2b
              f0aa 0086  ld   $86
              f0ab 00e6  ld   $e6
              f0ac 00ff  ld   $ff
              f0ad 0035  ld   $35
              f0ae 003f  ld   $3f
              f0af 00f2  ld   $f2
              f0b0 0021  ld   $21
              f0b1 0082  ld   $82
              f0b2 0099  ld   $99
              f0b3 0086  ld   $86
              f0b4 002b  ld   $2b
              f0b5 0086  ld   $86
              f0b6 005e  ld   $5e
              f0b7 00a4  ld   $a4
              f0b8 0046  ld   $46
              f0b9 0090  ld   $90
              f0ba 002b  ld   $2b
              f0bb 0088  ld   $88
              f0bc 0021  ld   $21
              f0bd 0084  ld   $84
              f0be 0099  ld   $99
              f0bf 0088  ld   $88
              f0c0 002b  ld   $2b
              f0c1 0088  ld   $88
              f0c2 005e  ld   $5e
              f0c3 00a5  ld   $a5
              f0c4 0085  ld   $85
              f0c5 00a6  ld   $a6
              f0c6 0072  ld   $72
              f0c7 0090  ld   $90
              f0c8 00c8  ld   $c8
              f0c9 0016  ld   $16
              f0ca 0099  ld   $99
              f0cb 009e  ld   $9e
              f0cc 0085  ld   $85
              f0cd 00a0  ld   $a0
              f0ce 0072  ld   $72
              f0cf 0085  ld   $85
              f0d0 00a0  ld   $a0
              f0d1 0071  ld   $71
              f0d2 0063  ld   $63
              f0d3 00ff  ld   $ff
              f0d4 006b  ld   $6b
              f0d5 00a4  ld   $a4
              f0d6 005b  ld   $5b
              f0d7 0075  ld   $75
              f0d8 0011  ld   $11
              f0d9 0003  ld   $03
              f0da 000b  ld   $0b
              f0db 002b  ld   $2b
              f0dc 0022  ld   $22
              f0dd 0065  ld   $65
              f0de 0025  ld   $25
              f0df 00a2  ld   $a2
              f0e0 0011  ld   $11
              f0e1 0000  ld   $00
              f0e2 0001  ld   $01
              f0e3 0067  ld   $67
              f0e4 0027  ld   $27
              f0e5 004d  ld   $4d
              f0e6 0008  ld   $08
              f0e7 009e  ld   $9e
              f0e8 0016  ld   $16
              f0e9 00a0  ld   $a0
              f0ea 0024  ld   $24
              f0eb 0016  ld   $16
              f0ec 0000  ld   $00
              f0ed 0026  ld   $26
              f0ee 00b4  ld   $b4
              f0ef 00f3  ld   $f3
              f0f0 0093  ld   $93
              f0f1 0027  ld   $27
              f0f2 009e  ld   $9e
              f0f3 00b3  ld   $b3
              f0f4 009e  ld   $9e
              f0f5 0085  ld   $85
              f0f6 00d4  ld   $d4
              f0f7 0063  ld   $63
              f0f8 0063  ld   $63
              f0f9 00ff  ld   $ff
              f0fa 0075  ld   $75
              f0fb fe00  bra  ac          ;+-----------------------------------+
              f0fc fcfd  bra  $f0fd       ;|                                   |
              f0fd 1418  ld   $18,y       ;| Trampoline for page $f000 lookups |
              f0fe e006  jmp  y,$06       ;|                                   |
              f0ff c218  st   [$18]       ;+-----------------------------------+
              f100 0023  ld   $23
              f101 0092  ld   $92
              f102 005e  ld   $5e
              f103 0096  ld   $96
              f104 0082  ld   $82
              f105 00f0  ld   $f0
              f106 008c  ld   $8c
              f107 0090  ld   $90
              f108 0035  ld   $35
              f109 0072  ld   $72
              f10a 00da  ld   $da
              f10b 0023  ld   $23
              f10c 0092  ld   $92
              f10d 00b1  ld   $b1
              f10e 0014  ld   $14
              f10f 002f  ld   $2f
              f110 0096  ld   $96
              f111 0022  ld   $22
              f112 0090  ld   $90
              f113 00c6  ld   $c6
              f114 008c  ld   $8c
              f115 0010  ld   $10
              f116 0035  ld   $35
              f117 0072  ld   $72
              f118 00e4  ld   $e4
              f119 002f  ld   $2f
              f11a 0096  ld   $96
              f11b 0022  ld   $22
              f11c 0090  ld   $90
              f11d 00c6  ld   $c6
              f11e 008c  ld   $8c
              f11f 0050  ld   $50
              f120 0035  ld   $35
              f121 0072  ld   $72
              f122 00f2  ld   $f2
              f123 003b  ld   $3b
              f124 0092  ld   $92
              f125 002b  ld   $2b
              f126 0092  ld   $92
              f127 0035  ld   $35
              f128 0072  ld   $72
              f129 00c6  ld   $c6
              f12a 0063  ld   $63
              f12b 00ff  ld   $ff
              f12c 001a  ld   $1a
              f12d 0096  ld   $96
              f12e 005e  ld   $5e
              f12f 002c  ld   $2c
              f130 002b  ld   $2b
              f131 0082  ld   $82
              f132 0085  ld   $85
              f133 00da  ld   $da
              f134 0061  ld   $61
              f135 0090  ld   $90
              f136 00c6  ld   $c6
              f137 006c  ld   $6c
              f138 00a0  ld   $a0
              f139 005f  ld   $5f
              f13a 0021  ld   $21
              f13b 0024  ld   $24
              f13c 00fc  ld   $fc
              f13d 0026  ld   $26
              f13e 002b  ld   $2b
              f13f 009e  ld   $9e
              f140 002f  ld   $2f
              f141 0024  ld   $24
              f142 0067  ld   $67
              f143 002f  ld   $2f
              f144 0026  ld   $26
              f145 0067  ld   $67
              f146 004d  ld   $4d
              f147 00a1  ld   $a1
              f148 0022  ld   $22
              f149 004d  ld   $4d
              f14a 0000  ld   $00
              f14b 0028  ld   $28
              f14c 004d  ld   $4d
              f14d 0001  ld   $01
              f14e 002a  ld   $2a
              f14f 00b4  ld   $b4
              f150 00e6  ld   $e6
              f151 0021  ld   $21
              f152 009e  ld   $9e
              f153 0035  ld   $35
              f154 0053  ld   $53
              f155 00bd  ld   $bd
              f156 002f  ld   $2f
              f157 0024  ld   $24
              f158 0017  ld   $17
              f159 0021  ld   $21
              f15a 0024  ld   $24
              f15b 00ff  ld   $ff
              f15c 0011  ld   $11
              f15d 0003  ld   $03
              f15e 000b  ld   $0b
              f15f 002b  ld   $2b
              f160 0022  ld   $22
              f161 00ab  ld   $ab
              f162 0094  ld   $94
              f163 0084  ld   $84
              f164 0088  ld   $88
              f165 0035  ld   $35
              f166 0053  ld   $53
              f167 00d2  ld   $d2
              f168 0065  ld   $65
              f169 0084  ld   $84
              f16a 0088  ld   $88
              f16b 002f  ld   $2f
              f16c 0094  ld   $94
              f16d 0017  ld   $17
              f16e 001c  ld   $1c
              f16f 0084  ld   $84
              f170 0084  ld   $84
              f171 0008  ld   $08
              f172 0093  ld   $93
              f173 0094  ld   $94
              f174 001a  ld   $1a
              f175 0086  ld   $86
              f176 00b8  ld   $b8
              f177 0082  ld   $82
              f178 0035  ld   $35
              f179 0053  ld   $53
              f17a 00e5  ld   $e5
              f17b 0065  ld   $65
              f17c 0082  ld   $82
              f17d 0086  ld   $86
              f17e 002f  ld   $2f
              f17f 0018  ld   $18
              f180 0017  ld   $17
              f181 00e3  ld   $e3
              f182 0001  ld   $01
              f183 005e  ld   $5e
              f184 0092  ld   $92
              f185 0065  ld   $65
              f186 0025  ld   $25
              f187 00a3  ld   $a3
              f188 0065  ld   $65
              f189 0027  ld   $27
              f18a 0084  ld   $84
              f18b 0065  ld   $65
              f18c 0024  ld   $24
              f18d 0092  ld   $92
              f18e 0065  ld   $65
              f18f 0026  ld   $26
              f190 0082  ld   $82
              f191 00b4  ld   $b4
              f192 00f3  ld   $f3
              f193 0093  ld   $93
              f194 0027  ld   $27
              f195 009e  ld   $9e
              f196 00ef  ld   $ef
              f197 0094  ld   $94
              f198 00ff  ld   $ff
              f199 006d  ld   $6d
              f19a 00a3  ld   $a3
              f19b 005c  ld   $5c
              f19c 0059  ld   $59
              f19d 0000  ld   $00
              f19e 002f  ld   $2f
              f19f 0000  ld   $00
              f1a0 0027  ld   $27
              f1a1 002f  ld   $2f
              f1a2 0001  ld   $01
              f1a3 0027  ld   $27
              f1a4 002f  ld   $2f
              f1a5 0002  ld   $02
              f1a6 0027  ld   $27
              f1a7 002f  ld   $2f
              f1a8 0003  ld   $03
              f1a9 0027  ld   $27
              f1aa 002f  ld   $2f
              f1ab 0000  ld   $00
              f1ac 005c  ld   $5c
              f1ad 002f  ld   $2f
              f1ae 0001  ld   $01
              f1af 005c  ld   $5c
              f1b0 002f  ld   $2f
              f1b1 0002  ld   $02
              f1b2 005c  ld   $5c
              f1b3 002f  ld   $2f
              f1b4 0003  ld   $03
              f1b5 005c  ld   $5c
              f1b6 00ff  ld   $ff
              f1b7 0059  ld   $59
              f1b8 0000  ld   $00
              f1b9 005e  ld   $5e
              f1ba 00a4  ld   $a4
              f1bb 005e  ld   $5e
              f1bc 0028  ld   $28
              f1bd 00c7  ld   $c7
              f1be 0002  ld   $02
              f1bf 006f  ld   $6f
              f1c0 00aa  ld   $aa
              f1c1 0035  ld   $35
              f1c2 0072  ld   $72
              f1c3 00ca  ld   $ca
              f1c4 00ff  ld   $ff
              f1c5 0075  ld   $75
              f1c6 00c7  ld   $c7
              f1c7 0004  ld   $04
              f1c8 006f  ld   $6f
              f1c9 00aa  ld   $aa
              f1ca 0035  ld   $35
              f1cb 0072  ld   $72
              f1cc 00df  ld   $df
              f1cd 001c  ld   $1c
              f1ce 00a5  ld   $a5
              f1cf 00a5  ld   $a5
              f1d0 0006  ld   $06
              f1d1 00a7  ld   $a7
              f1d2 0078  ld   $78
              f1d3 00a5  ld   $a5
              f1d4 0035  ld   $35
              f1d5 0050  ld   $50
              f1d6 00f8  ld   $f8
              f1d7 0016  ld   $16
              f1d8 0072  ld   $72
              f1d9 00a5  ld   $a5
              f1da 0085  ld   $85
              f1db 00aa  ld   $aa
              f1dc 0067  ld   $67
              f1dd 0011  ld   $11
              f1de 0000  ld   $00
              f1df 0001  ld   $01
              f1e0 002b  ld   $2b
              f1e1 0026  ld   $26
              f1e2 0016  ld   $16
              f1e3 0006  ld   $06
              f1e4 0024  ld   $24
              f1e5 0016  ld   $16
              f1e6 0078  ld   $78
              f1e7 0025  ld   $25
              f1e8 0011  ld   $11
              f1e9 00c0  ld   $c0
              f1ea 0020  ld   $20
              f1eb 002b  ld   $2b
              f1ec 0022  ld   $22
              f1ed 00b4  ld   $b4
              f1ee 00fb  ld   $fb
              f1ef 00c7  ld   $c7
              f1f0 0004  ld   $04
              f1f1 0069  ld   $69
              f1f2 00aa  ld   $aa
              f1f3 0085  ld   $85
              f1f4 00a1  ld   $a1
              f1f5 0067  ld   $67
              f1f6 0063  ld   $63
              f1f7 00ff  ld   $ff
              f1f8 006e  ld   $6e
              f1f9 00a0  ld   $a0
              f1fa 005f  ld   $5f
              f1fb fe00  bra  ac          ;+-----------------------------------+
              f1fc fcfd  bra  $f1fd       ;|                                   |
              f1fd 1418  ld   $18,y       ;| Trampoline for page $f100 lookups |
              f1fe e006  jmp  y,$06       ;|                                   |
              f1ff c218  st   [$18]       ;+-----------------------------------+
              f200 00a7  ld   $a7
              f201 009c  ld   $9c
              f202 00a4  ld   $a4
              f203 0035  ld   $35
              f204 0056  ld   $56
              f205 00a7  ld   $a7
              f206 0016  ld   $16
              f207 0000  ld   $00
              f208 00a4  ld   $a4
              f209 00a7  ld   $a7
              f20a 0072  ld   $72
              f20b 00a5  ld   $a5
              f20c 0035  ld   $35
              f20d 0050  ld   $50
              f20e 00b5  ld   $b5
              f20f 0016  ld   $16
              f210 0072  ld   $72
              f211 00a5  ld   $a5
              f212 00c7  ld   $c7
              f213 0004  ld   $04
              f214 0069  ld   $69
              f215 00aa  ld   $aa
              f216 00ff  ld   $ff
              f217 00c7  ld   $c7
              f218 00fb  ld   $fb
              f219 0066  ld   $66
              f21a 00aa  ld   $aa
              f21b 00ff  ld   $ff
              f21c 001a  ld   $1a
              f21d 0094  ld   $94
              f21e 0035  ld   $35
              f21f 003f  ld   $3f
              f220 00d0  ld   $d0
              f221 00e6  ld   $e6
              f222 0001  ld   $01
              f223 002b  ld   $2b
              f224 0094  ld   $94
              f225 004d  ld   $4d
              f226 0000  ld   $00
              f227 009c  ld   $9c
              f228 0021  ld   $21
              f229 0092  ld   $92
              f22a 0025  ld   $25
              f22b 0000  ld   $00
              f22c 00dd  ld   $dd
              f22d 0092  ld   $92
              f22e 0025  ld   $25
              f22f 0020  ld   $20
              f230 0090  ld   $90
              f231 00f6  ld   $f6
              f232 0021  ld   $21
              f233 0098  ld   $98
              f234 00b8  ld   $b8
              f235 009a  ld   $9a
              f236 0035  ld   $35
              f237 0053  ld   $53
              f238 00f9  ld   $f9
              f239 00c7  ld   $c7
              f23a 0010  ld   $10
              f23b 006f  ld   $6f
              f23c 00aa  ld   $aa
              f23d 0035  ld   $35
              f23e 0072  ld   $72
              f23f 00e2  ld   $e2
              f240 009c  ld   $9c
              f241 0006  ld   $06
              f242 0090  ld   $90
              f243 00e4  ld   $e4
              f244 009c  ld   $9c
              f245 0004  ld   $04
              f246 002b  ld   $2b
              f247 009c  ld   $9c
              f248 0059  ld   $59
              f249 0020  ld   $20
              f24a 00d1  ld   $d1
              f24b 0092  ld   $92
              f24c 0021  ld   $21
              f24d 0092  ld   $92
              f24e 0025  ld   $25
              f24f 0000  ld   $00
              f250 0038  ld   $38
              f251 0002  ld   $02
              f252 0092  ld   $92
              f253 0092  ld   $92
              f254 0021  ld   $21
              f255 0092  ld   $92
              f256 0025  ld   $25
              f257 0020  ld   $20
              f258 0085  ld   $85
              f259 00a1  ld   $a1
              f25a 0065  ld   $65
              f25b 0059  ld   $59
              f25c 0000  ld   $00
              f25d 0063  ld   $63
              f25e 00ff  ld   $ff
              f25f 006f  ld   $6f
              f260 00a1  ld   $a1
              f261 005e  ld   $5e
              f262 0075  ld   $75
              f263 002b  ld   $2b
              f264 0082  ld   $82
              f265 0046  ld   $46
              f266 0082  ld   $82
              f267 002b  ld   $2b
              f268 0084  ld   $84
              f269 0046  ld   $46
              f26a 0082  ld   $82
              f26b 002b  ld   $2b
              f26c 0086  ld   $86
              f26d 003b  ld   $3b
              f26e 0082  ld   $82
              f26f 002b  ld   $2b
              f270 0088  ld   $88
              f271 00c7  ld   $c7
              f272 00fd  ld   $fd
              f273 0066  ld   $66
              f274 00aa  ld   $aa
              f275 0065  ld   $65
              f276 0081  ld   $81
              f277 000f  ld   $0f
              f278 0085  ld   $85
              f279 00ba  ld   $ba
              f27a 006f  ld   $6f
              f27b 0046  ld   $46
              f27c 0088  ld   $88
              f27d 0035  ld   $35
              f27e 003f  ld   $3f
              f27f 00f7  ld   $f7
              f280 002b  ld   $2b
              f281 0096  ld   $96
              f282 0082  ld   $82
              f283 0040  ld   $40
              f284 0035  ld   $35
              f285 003f  ld   $3f
              f286 00c7  ld   $c7
              f287 0085  ld   $85
              f288 00bf  ld   $bf
              f289 0062  ld   $62
              f28a 0085  ld   $85
              f28b 00a6  ld   $a6
              f28c 0062  ld   $62
              f28d 0046  ld   $46
              f28e 0086  ld   $86
              f28f 0085  ld   $85
              f290 00ac  ld   $ac
              f291 0063  ld   $63
              f292 0085  ld   $85
              f293 00a0  ld   $a0
              f294 0063  ld   $63
              f295 00c7  ld   $c7
              f296 0080  ld   $80
              f297 006f  ld   $6f
              f298 0096  ld   $96
              f299 0035  ld   $35
              f29a 003f  ld   $3f
              f29b 00dc  ld   $dc
              f29c 0085  ld   $85
              f29d 00bf  ld   $bf
              f29e 0062  ld   $62
              f29f 0011  ld   $11
              f2a0 00a1  ld   $a1
              f2a1 0077  ld   $77
              f2a2 002b  ld   $2b
              f2a3 0092  ld   $92
              f2a4 004d  ld   $4d
              f2a5 0000  ld   $00
              f2a6 0094  ld   $94
              f2a7 0011  ld   $11
              f2a8 00a0  ld   $a0
              f2a9 0077  ld   $77
              f2aa 002b  ld   $2b
              f2ab 009e  ld   $9e
              f2ac 001a  ld   $1a
              f2ad 0097  ld   $97
              f2ae 0099  ld   $99
              f2af 009e  ld   $9e
              f2b0 002b  ld   $2b
              f2b1 009e  ld   $9e
              f2b2 0032  ld   $32
              f2b3 009a  ld   $9a
              f2b4 00a4  ld   $a4
              f2b5 002b  ld   $2b
              f2b6 0098  ld   $98
              f2b7 0085  ld   $85
              f2b8 00a0  ld   $a0
              f2b9 0073  ld   $73
              f2ba 00c7  ld   $c7
              f2bb 0002  ld   $02
              f2bc 0069  ld   $69
              f2bd 00aa  ld   $aa
              f2be 0063  ld   $63
              f2bf 00ff  ld   $ff
              f2c0 0070  ld   $70
              f2c1 00a0  ld   $a0
              f2c2 005f  ld   $5f
              f2c3 001c  ld   $1c
              f2c4 00a4  ld   $a4
              f2c5 00a4  ld   $a4
              f2c6 0006  ld   $06
              f2c7 00a7  ld   $a7
              f2c8 009a  ld   $9a
              f2c9 00a4  ld   $a4
              f2ca 0035  ld   $35
              f2cb 0056  ld   $56
              f2cc 00b4  ld   $b4
              f2cd 00c7  ld   $c7
              f2ce 0008  ld   $08
              f2cf 006f  ld   $6f
              f2d0 00aa  ld   $aa
              f2d1 0035  ld   $35
              f2d2 0072  ld   $72
              f2d3 00b4  ld   $b4
              f2d4 0075  ld   $75
              f2d5 0085  ld   $85
              f2d6 00b7  ld   $b7
              f2d7 0070  ld   $70
              f2d8 0063  ld   $63
              f2d9 00ff  ld   $ff
              f2da 00c7  ld   $c7
              f2db 0010  ld   $10
              f2dc 006f  ld   $6f
              f2dd 00aa  ld   $aa
              f2de 00bd  ld   $bd
              f2df 00bc  ld   $bc
              f2e0 006d  ld   $6d
              f2e1 0059  ld   $59
              f2e2 0002  ld   $02
              f2e3 005e  ld   $5e
              f2e4 00a4  ld   $a4
              f2e5 005e  ld   $5e
              f2e6 0028  ld   $28
              f2e7 00c7  ld   $c7
              f2e8 0002  ld   $02
              f2e9 006f  ld   $6f
              f2ea 00aa  ld   $aa
              f2eb 0035  ld   $35
              f2ec 0072  ld   $72
              f2ed 00ca  ld   $ca
              f2ee 00ff  ld   $ff
              f2ef 0075  ld   $75
              f2f0 00c7  ld   $c7
              f2f1 0004  ld   $04
              f2f2 006f  ld   $6f
              f2f3 00aa  ld   $aa
              f2f4 0035  ld   $35
              f2f5 0072  ld   $72
              f2f6 00df  ld   $df
              f2f7 001c  ld   $1c
              f2f8 00a5  ld   $a5
              f2f9 00a5  ld   $a5
              f2fa 0008  ld   $08
              f2fb fe00  bra  ac          ;+-----------------------------------+
              f2fc fcfd  bra  $f2fd       ;|                                   |
              f2fd 1418  ld   $18,y       ;| Trampoline for page $f200 lookups |
              f2fe e006  jmp  y,$06       ;|                                   |
              f2ff c218  st   [$18]       ;+-----------------------------------+
              f300 00a7  ld   $a7
              f301 0078  ld   $78
              f302 00a5  ld   $a5
              f303 0035  ld   $35
              f304 0050  ld   $50
              f305 00f8  ld   $f8
              f306 0016  ld   $16
              f307 0070  ld   $70
              f308 00a5  ld   $a5
              f309 0085  ld   $85
              f30a 00a4  ld   $a4
              f30b 006b  ld   $6b
              f30c 0011  ld   $11
              f30d 0000  ld   $00
              f30e 0001  ld   $01
              f30f 002b  ld   $2b
              f310 0026  ld   $26
              f311 0016  ld   $16
              f312 0008  ld   $08
              f313 0024  ld   $24
              f314 0016  ld   $16
              f315 0078  ld   $78
              f316 0025  ld   $25
              f317 0011  ld   $11
              f318 00c0  ld   $c0
              f319 0020  ld   $20
              f31a 002b  ld   $2b
              f31b 0022  ld   $22
              f31c 00b4  ld   $b4
              f31d 00fb  ld   $fb
              f31e 00c7  ld   $c7
              f31f 0004  ld   $04
              f320 0069  ld   $69
              f321 00aa  ld   $aa
              f322 0085  ld   $85
              f323 00d4  ld   $d4
              f324 0063  ld   $63
              f325 0063  ld   $63
              f326 00ff  ld   $ff
              f327 0071  ld   $71
              f328 00a0  ld   $a0
              f329 005f  ld   $5f
              f32a 0011  ld   $11
              f32b 00e9  ld   $e9
              f32c 006a  ld   $6a
              f32d 0069  ld   $69
              f32e 009e  ld   $9e
              f32f 00ff  ld   $ff
              f330 0075  ld   $75
              f331 0065  ld   $65
              f332 0082  ld   $82
              f333 000f  ld   $0f
              f334 001a  ld   $1a
              f335 0081  ld   $81
              f336 002f  ld   $2f
              f337 0082  ld   $82
              f338 0062  ld   $62
              f339 0035  ld   $35
              f33a 003f  ld   $3f
              f33b 00f9  ld   $f9
              f33c 0085  ld   $85
              f33d 00ba  ld   $ba
              f33e 0068  ld   $68
              f33f 0065  ld   $65
              f340 0081  ld   $81
              f341 0082  ld   $82
              f342 00a7  ld   $a7
              f343 007f  ld   $7f
              f344 0082  ld   $82
              f345 0035  ld   $35
              f346 004d  ld   $4d
              f347 00f9  ld   $f9
              f348 0035  ld   $35
              f349 0072  ld   $72
              f34a 00c2  ld   $c2
              f34b 0085  ld   $85
              f34c 00bc  ld   $bc
              f34d 006e  ld   $6e
              f34e 00a7  ld   $a7
              f34f 000a  ld   $0a
              f350 0082  ld   $82
              f351 0035  ld   $35
              f352 0072  ld   $72
              f353 00cb  ld   $cb
              f354 0085  ld   $85
              f355 00cb  ld   $cb
              f356 0069  ld   $69
              f357 0021  ld   $21
              f358 009e  ld   $9e
              f359 00b8  ld   $b8
              f35a 0092  ld   $92
              f35b 0035  ld   $35
              f35c 003f  ld   $3f
              f35d 00f9  ld   $f9
              f35e 00a7  ld   $a7
              f35f 0020  ld   $20
              f360 0082  ld   $82
              f361 0035  ld   $35
              f362 0050  ld   $50
              f363 00f9  ld   $f9
              f364 001a  ld   $1a
              f365 0082  ld   $82
              f366 00d1  ld   $d1
              f367 0092  ld   $92
              f368 0021  ld   $21
              f369 0092  ld   $92
              f36a 0025  ld   $25
              f36b 0000  ld   $00
              f36c 00a7  ld   $a7
              f36d 0095  ld   $95
              f36e 009a  ld   $9a
              f36f 0035  ld   $35
              f370 0050  ld   $50
              f371 00ec  ld   $ec
              f372 0093  ld   $93
              f373 0094  ld   $94
              f374 0059  ld   $59
              f375 0000  ld   $00
              f376 0090  ld   $90
              f377 00f4  ld   $f4
              f378 00c7  ld   $c7
              f379 0010  ld   $10
              f37a 006f  ld   $6f
              f37b 00aa  ld   $aa
              f37c 00c7  ld   $c7
              f37d 0006  ld   $06
              f37e 002a  ld   $2a
              f37f 0004  ld   $04
              f380 002b  ld   $2b
              f381 009c  ld   $9c
              f382 0085  ld   $85
              f383 00a1  ld   $a1
              f384 0065  ld   $65
              f385 0059  ld   $59
              f386 0000  ld   $00
              f387 0063  ld   $63
              f388 00ff  ld   $ff
              f389 0072  ld   $72
              f38a 00a0  ld   $a0
              f38b 005f  ld   $5f
              f38c 0011  ld   $11
              f38d 00dd  ld   $dd
              f38e 006a  ld   $6a
              f38f 0069  ld   $69
              f390 009e  ld   $9e
              f391 00ff  ld   $ff
              f392 0075  ld   $75
              f393 00ab  ld   $ab
              f394 009a  ld   $9a
              f395 0082  ld   $82
              f396 0086  ld   $86
              f397 00b1  ld   $b1
              f398 0036  ld   $36
              f399 002b  ld   $2b
              f39a 0092  ld   $92
              f39b 002b  ld   $2b
              f39c 0096  ld   $96
              f39d 002f  ld   $2f
              f39e 009a  ld   $9a
              f39f 0067  ld   $67
              f3a0 00ab  ld   $ab
              f3a1 009c  ld   $9c
              f3a2 0084  ld   $84
              f3a3 0088  ld   $88
              f3a4 002b  ld   $2b
              f3a5 009e  ld   $9e
              f3a6 00b1  ld   $b1
              f3a7 0036  ld   $36
              f3a8 002b  ld   $2b
              f3a9 0094  ld   $94
              f3aa 002f  ld   $2f
              f3ab 009c  ld   $9c
              f3ac 0067  ld   $67
              f3ad 004d  ld   $4d
              f3ae 0000  ld   $00
              f3af 0098  ld   $98
              f3b0 0021  ld   $21
              f3b1 009a  ld   $9a
              f3b2 00b8  ld   $b8
              f3b3 009c  ld   $9c
              f3b4 0035  ld   $35
              f3b5 0053  ld   $53
              f3b6 00d6  ld   $d6
              f3b7 004d  ld   $4d
              f3b8 0000  ld   $00
              f3b9 0096  ld   $96
              f3ba 00c7  ld   $c7
              f3bb 009c  ld   $9c
              f3bc 0017  ld   $17
              f3bd 009a  ld   $9a
              f3be 0021  ld   $21
              f3bf 009e  ld   $9e
              f3c0 00b1  ld   $b1
              f3c1 0036  ld   $36
              f3c2 002b  ld   $2b
              f3c3 0098  ld   $98
              f3c4 002d  ld   $2d
              f3c5 0082  ld   $82
              f3c6 0084  ld   $84
              f3c7 0082  ld   $82
              f3c8 002d  ld   $2d
              f3c9 0084  ld   $84
              f3ca 0088  ld   $88
              f3cb 0086  ld   $86
              f3cc 001a  ld   $1a
              f3cd 009a  ld   $9a
              f3ce 0018  ld   $18
              f3cf 0018  ld   $18
              f3d0 00e3  ld   $e3
              f3d1 0001  ld   $01
              f3d2 002b  ld   $2b
              f3d3 00a0  ld   $a0
              f3d4 002b  ld   $2b
              f3d5 009e  ld   $9e
              f3d6 002f  ld   $2f
              f3d7 0094  ld   $94
              f3d8 005e  ld   $5e
              f3d9 0099  ld   $99
              f3da 0092  ld   $92
              f3db 002b  ld   $2b
              f3dc 0086  ld   $86
              f3dd 002f  ld   $2f
              f3de 0098  ld   $98
              f3df 005e  ld   $5e
              f3e0 0099  ld   $99
              f3e1 0096  ld   $96
              f3e2 002b  ld   $2b
              f3e3 0088  ld   $88
              f3e4 004d  ld   $4d
              f3e5 00a4  ld   $a4
              f3e6 0022  ld   $22
              f3e7 00b4  ld   $b4
              f3e8 00e3  ld   $e3
              f3e9 0063  ld   $63
              f3ea 00ff  ld   $ff
              f3eb 0073  ld   $73
              f3ec 00a0  ld   $a0
              f3ed 003d  ld   $3d
              f3ee 0085  ld   $85
              f3ef 00a6  ld   $a6
              f3f0 0062  ld   $62
              f3f1 0059  ld   $59
              f3f2 007f  ld   $7f
              f3f3 002b  ld   $2b
              f3f4 0092  ld   $92
              f3f5 0085  ld   $85
              f3f6 00a0  ld   $a0
              f3f7 0068  ld   $68
              f3f8 0085  ld   $85
              f3f9 00a0  ld   $a0
              f3fa 0063  ld   $63
              f3fb fe00  bra  ac          ;+-----------------------------------+
              f3fc fcfd  bra  $f3fd       ;|                                   |
              f3fd 1418  ld   $18,y       ;| Trampoline for page $f300 lookups |
              f3fe e006  jmp  y,$06       ;|                                   |
              f3ff c218  st   [$18]       ;+-----------------------------------+
              f400 0085  ld   $85
              f401 00a6  ld   $a6
              f402 0071  ld   $71
              f403 0035  ld   $35
              f404 003f  ld   $3f
              f405 009e  ld   $9e
              f406 0085  ld   $85
              f407 00ba  ld   $ba
              f408 006f  ld   $6f
              f409 00e6  ld   $e6
              f40a 0006  ld   $06
              f40b 00f2  ld   $f2
              f40c 0006  ld   $06
              f40d 00a5  ld   $a5
              f40e 0008  ld   $08
              f40f 00c9  ld   $c9
              f410 0008  ld   $08
              f411 00ed  ld   $ed
              f412 0008  ld   $08
              f413 00e2  ld   $e2
              f414 0009  ld   $09
              f415 007f  ld   $7f
              f416 0000  ld   $00
              f417 000a  ld   $0a
              f418 0000  ld   $00
              f419 00fe  ld   $fe
              f41a 0000  ld   $00
              f41b 00fd  ld   $fd
              f41c 0000  ld   $00
              f41d 00fb  ld   $fb
              f41e 0000  ld   $00
              f41f 00f7  ld   $f7
              f420 0000  ld   $00
              f421 0000  ld   $00
              f422 0000  ld   $00
              f423 0008  ld   $08
              f424 0030  ld   $30
              f425 0030  ld   $30
              f426 003a  ld   $3a
              f427 0030  ld   $30
              f428 0030  ld   $30
              f429 003a  ld   $3a
              f42a 0030  ld   $30
              f42b 0030  ld   $30
              f42c 0000  ld   $00
              f42d 0000  ld   $00
              f42e 0000  ld   $00
              f42f 0000  ld   $00
              f430 0073  ld   $73
              f431 00ed  ld   $ed
              f432 0013  ld   $13
              f433 0011  ld   $11
              f434 0054  ld   $54
              f435 0054  ld   $54
              f436 004c  ld   $4c
              f437 0020  ld   $20
              f438 006d  ld   $6d
              f439 0069  ld   $69
              f43a 0063  ld   $63
              f43b 0072  ld   $72
              f43c 006f  ld   $6f
              f43d 0063  ld   $63
              f43e 006f  ld   $6f
              f43f 006d  ld   $6d
              f440 0070  ld   $70
              f441 0075  ld   $75
              f442 0074  ld   $74
              f443 0065  ld   $65
              f444 0072  ld   $72
              f445 0000  ld   $00
              f446 0074  ld   $74
              f447 00a2  ld   $a2
              f448 005e  ld   $5e
              f449 0003  ld   $03
              f44a 0003  ld   $03
              f44b 0000  ld   $00
              f44c 0000  ld   $00
              f44d 00a1  ld   $a1
              f44e 0079  ld   $79
              f44f 00be  ld   $be
              f450 0075  ld   $75
              f451 00a6  ld   $a6
              f452 0074  ld   $74
              f453 00a2  ld   $a2
              f454 0074  ld   $74
              f455 00ac  ld   $ac
              f456 007d  ld   $7d
              f457 00a6  ld   $a6
              f458 007d  ld   $7d
              f459 00a0  ld   $a0
              f45a 007d  ld   $7d
              f45b 00ac  ld   $ac
              f45c 007d  ld   $7d
              f45d 00aa  ld   $aa
              f45e 007c  ld   $7c
              f45f 00a6  ld   $a6
              f460 007b  ld   $7b
              f461 00a0  ld   $a0
              f462 007c  ld   $7c
              f463 00ae  ld   $ae
              f464 007a  ld   $7a
              f465 00a0  ld   $a0
              f466 007a  ld   $7a
              f467 0000  ld   $00
              f468 0000  ld   $00
              f469 0000  ld   $00
              * 64 times
              f4a7 0075  ld   $75
              f4a8 00a0  ld   $a0
              f4a9 0060  ld   $60
              f4aa 0090  ld   $90
              f4ab 003c  ld   $3c
              f4ac 0091  ld   $91
              f4ad 0040  ld   $40
              f4ae 0092  ld   $92
              f4af 0043  ld   $43
              f4b0 0093  ld   $93
              f4b1 0048  ld   $48
              f4b2 000c  ld   $0c
              f4b3 0080  ld   $80
              f4b4 0081  ld   $81
              f4b5 0082  ld   $82
              f4b6 0083  ld   $83
              f4b7 0001  ld   $01
              f4b8 0090  ld   $90
              f4b9 003c  ld   $3c
              f4ba 0091  ld   $91
              f4bb 0040  ld   $40
              f4bc 0092  ld   $92
              f4bd 0043  ld   $43
              f4be 0093  ld   $93
              f4bf 0048  ld   $48
              f4c0 0024  ld   $24
              f4c1 0080  ld   $80
              f4c2 0081  ld   $81
              f4c3 0082  ld   $82
              f4c4 0083  ld   $83
              f4c5 00d0  ld   $d0
              f4c6 0000  ld   $00
              f4c7 0000  ld   $00
              f4c8 0060  ld   $60
              f4c9 0000  ld   $00
              f4ca 0000  ld   $00
              f4cb 0000  ld   $00
              * 50 times
              f4fb fe00  bra  ac          ;+-----------------------------------+
              f4fc fcfd  bra  $f4fd       ;|                                   |
              f4fd 1418  ld   $18,y       ;| Trampoline for page $f400 lookups |
              f4fe e006  jmp  y,$06       ;|                                   |
              f4ff c218  st   [$18]       ;+-----------------------------------+
              f500 0000  ld   $00
              f501 0000  ld   $00
              f502 0000  ld   $00
              * 15 times
              f50f 0078  ld   $78
              f510 00a0  ld   $a0
              f511 0060  ld   $60
              f512 0003  ld   $03
              f513 0003  ld   $03
              f514 0000  ld   $00
              f515 0000  ld   $00
              f516 00a1  ld   $a1
              f517 0079  ld   $79
              f518 005e  ld   $5e
              f519 0000  ld   $00
              f51a 00a6  ld   $a6
              f51b 0078  ld   $78
              f51c 00a4  ld   $a4
              f51d 0078  ld   $78
              f51e 00a0  ld   $a0
              f51f 0078  ld   $78
              f520 0000  ld   $00
              f521 0000  ld   $00
              f522 00fc  ld   $fc
              f523 00ff  ld   $ff
              f524 00f0  ld   $f0
              f525 00ff  ld   $ff
              f526 0000  ld   $00
              f527 0000  ld   $00
              f528 00f4  ld   $f4
              f529 00ff  ld   $ff
              f52a 00f0  ld   $f0
              f52b 00ff  ld   $ff
              f52c 00fc  ld   $fc
              f52d 00ff  ld   $ff
              f52e 00fc  ld   $fc
              f52f 00ff  ld   $ff
              f530 00fc  ld   $fc
              f531 00ff  ld   $ff
              f532 0000  ld   $00
              f533 0000  ld   $00
              f534 0000  ld   $00
              * 64 times
              f572 0079  ld   $79
              f573 00a1  ld   $a1
              f574 005f  ld   $5f
              f575 0001  ld   $01
              f576 003a  ld   $3a
              f577 0000  ld   $00
              f578 0003  ld   $03
              f579 0003  ld   $03
              f57a 0000  ld   $00
              f57b 0000  ld   $00
              f57c 00a2  ld   $a2
              f57d 007b  ld   $7b
              f57e 00a0  ld   $a0
              f57f 007b  ld   $7b
              f580 00a4  ld   $a4
              f581 0079  ld   $79
              f582 0000  ld   $00
              f583 0000  ld   $00
              f584 0013  ld   $13
              f585 0000  ld   $00
              f586 0013  ld   $13
              f587 0000  ld   $00
              f588 0017  ld   $17
              f589 0000  ld   $00
              f58a 002a  ld   $2a
              f58b 0000  ld   $00
              f58c 003d  ld   $3d
              f58d 0000  ld   $00
              f58e 0050  ld   $50
              f58f 0000  ld   $00
              f590 0063  ld   $63
              f591 0000  ld   $00
              f592 0076  ld   $76
              f593 0000  ld   $00
              f594 0000  ld   $00
              f595 0000  ld   $00
              * 65 times
              f5d4 007a  ld   $7a
              f5d5 00a0  ld   $a0
              f5d6 0060  ld   $60
              f5d7 0000  ld   $00
              f5d8 0000  ld   $00
              f5d9 00f8  ld   $f8
              f5da 00ff  ld   $ff
              f5db 000f  ld   $0f
              f5dc 0000  ld   $00
              f5dd 0000  ld   $00
              f5de 0000  ld   $00
              * 5 times
              f5e1 0008  ld   $08
              f5e2 0000  ld   $00
              f5e3 00ff  ld   $ff
              f5e4 0000  ld   $00
              f5e5 0000  ld   $00
              f5e6 0000  ld   $00
              f5e7 00f8  ld   $f8
              f5e8 00ff  ld   $ff
              f5e9 000f  ld   $0f
              f5ea 0000  ld   $00
              f5eb 0000  ld   $00
              f5ec 0000  ld   $00
              * 5 times
              f5ef 0008  ld   $08
              f5f0 0000  ld   $00
              f5f1 00f1  ld   $f1
              f5f2 00ff  ld   $ff
              f5f3 0000  ld   $00
              f5f4 0000  ld   $00
              f5f5 00ff  ld   $ff
              f5f6 0000  ld   $00
              f5f7 0000  ld   $00
              f5f8 0000  ld   $00
              * 5 times
              f5fb fe00  bra  ac          ;+-----------------------------------+
              f5fc fcfd  bra  $f5fd       ;|                                   |
              f5fd 1418  ld   $18,y       ;| Trampoline for page $f500 lookups |
              f5fe e006  jmp  y,$06       ;|                                   |
              f5ff c218  st   [$18]       ;+-----------------------------------+
              f600 0000  ld   $00
              f601 0000  ld   $00
              f602 0000  ld   $00
              * 60 times
              f63c 007b  ld   $7b
              f63d 00a0  ld   $a0
              f63e 0060  ld   $60
              f63f 00a4  ld   $a4
              f640 007b  ld   $7b
              f641 005c  ld   $5c
              f642 0000  ld   $00
              f643 0000  ld   $00
              f644 0000  ld   $00
              * 9 times
              f64b 0004  ld   $04
              f64c 0000  ld   $00
              f64d 000f  ld   $0f
              f64e 0000  ld   $00
              f64f 0000  ld   $00
              f650 0000  ld   $00
              f651 00f1  ld   $f1
              f652 00ff  ld   $ff
              f653 0000  ld   $00
              f654 0000  ld   $00
              f655 0000  ld   $00
              f656 0000  ld   $00
              f657 0008  ld   $08
              f658 0000  ld   $00
              f659 000f  ld   $0f
              f65a 0000  ld   $00
              f65b 0000  ld   $00
              f65c 0000  ld   $00
              f65d 00ff  ld   $ff
              f65e 0000  ld   $00
              f65f 0000  ld   $00
              f660 0000  ld   $00
              * 65 times
              f69f 007c  ld   $7c
              f6a0 00a0  ld   $a0
              f6a1 0060  ld   $60
              f6a2 0000  ld   $00
              f6a3 0000  ld   $00
              f6a4 00f8  ld   $f8
              f6a5 00ff  ld   $ff
              f6a6 000f  ld   $0f
              f6a7 0000  ld   $00
              f6a8 0000  ld   $00
              f6a9 0000  ld   $00
              f6aa 00ff  ld   $ff
              f6ab 0000  ld   $00
              f6ac 000f  ld   $0f
              f6ad 0000  ld   $00
              f6ae 0000  ld   $00
              f6af 0000  ld   $00
              * 5 times
              f6b2 0008  ld   $08
              f6b3 0000  ld   $00
              f6b4 00f1  ld   $f1
              f6b5 00ff  ld   $ff
              f6b6 0000  ld   $00
              f6b7 0000  ld   $00
              f6b8 0000  ld   $00
              f6b9 0000  ld   $00
              f6ba 00fc  ld   $fc
              f6bb 00ff  ld   $ff
              f6bc 000e  ld   $0e
              f6bd 0000  ld   $00
              f6be 0000  ld   $00
              f6bf 0000  ld   $00
              f6c0 00ff  ld   $ff
              f6c1 0000  ld   $00
              f6c2 0000  ld   $00
              f6c3 0000  ld   $00
              * 58 times
              f6fb fe00  bra  ac          ;+-----------------------------------+
              f6fc fcfd  bra  $f6fd       ;|                                   |
              f6fd 1418  ld   $18,y       ;| Trampoline for page $f600 lookups |
              f6fe e006  jmp  y,$06       ;|                                   |
              f6ff c218  st   [$18]       ;+-----------------------------------+
              f700 0000  ld   $00
              f701 0000  ld   $00
              f702 0000  ld   $00
              * 7 times
              f707 007d  ld   $7d
              f708 00a0  ld   $a0
              f709 0022  ld   $22
              f70a 0000  ld   $00
              f70b 0000  ld   $00
              f70c 0000  ld   $00
              f70d 0000  ld   $00
              f70e 00ff  ld   $ff
              f70f 0000  ld   $00
              f710 0000  ld   $00
              f711 0000  ld   $00
              f712 00f8  ld   $f8
              f713 00ff  ld   $ff
              f714 00ff  ld   $ff
              f715 0000  ld   $00
              f716 000f  ld   $0f
              f717 0000  ld   $00
              f718 0000  ld   $00
              f719 0000  ld   $00
              * 5 times
              f71c 00f4  ld   $f4
              f71d 00ff  ld   $ff
              f71e 00f1  ld   $f1
              f71f 00ff  ld   $ff
              f720 0000  ld   $00
              f721 0000  ld   $00
              f722 0000  ld   $00
              f723 0000  ld   $00
              f724 0008  ld   $08
              f725 0000  ld   $00
              f726 000e  ld   $0e
              f727 0000  ld   $00
              f728 0000  ld   $00
              f729 0000  ld   $00
              f72a 00ff  ld   $ff
              f72b 0000  ld   $00
              f72c 007d  ld   $7d
              f72d 00c3  ld   $c3
              f72e 003d  ld   $3d
              f72f 000f  ld   $0f
              f730 0007  ld   $07
              f731 0003  ld   $03
              f732 0001  ld   $01
              f733 0002  ld   $02
              f734 0004  ld   $04
              f735 0008  ld   $08
              f736 0004  ld   $04
              f737 0002  ld   $02
              f738 0001  ld   $01
              f739 0003  ld   $03
              f73a 0007  ld   $07
              f73b 000f  ld   $0f
              f73c 000e  ld   $0e
              f73d 000c  ld   $0c
              f73e 0008  ld   $08
              f73f 0004  ld   $04
              f740 0002  ld   $02
              f741 0001  ld   $01
              f742 0002  ld   $02
              f743 0004  ld   $04
              f744 0008  ld   $08
              f745 000c  ld   $0c
              f746 000e  ld   $0e
              f747 0006  ld   $06
              f748 0052  ld   $52
              f749 004f  ld   $4f
              f74a 004d  ld   $4d
              f74b 0076  ld   $76
              f74c 0058  ld   $58
              f74d 0030  ld   $30
              f74e 0000  ld   $00
              f74f 0009  ld   $09
              f750 0046  ld   $46
              f751 004f  ld   $4f
              f752 0052  ld   $52
              f753 0020  ld   $20
              f754 0052  ld   $52
              f755 0045  ld   $45
              f756 0053  ld   $53
              f757 0045  ld   $45
              f758 0054  ld   $54
              f759 0000  ld   $00
              f75a 0010  ld   $10
              f75b 0054  ld   $54
              f75c 004f  ld   $4f
              f75d 0020  ld   $20
              f75e 0053  ld   $53
              f75f 0054  ld   $54
              f760 0041  ld   $41
              f761 0052  ld   $52
              f762 0054  ld   $54
              f763 0020  ld   $20
              f764 0050  ld   $50
              f765 0052  ld   $52
              f766 004f  ld   $4f
              f767 0047  ld   $47
              f768 0052  ld   $52
              f769 0041  ld   $41
              f76a 004d  ld   $4d
              f76b 0000  ld   $00
              f76c 007e  ld   $7e
              f76d 00a1  ld   $a1
              f76e 005f  ld   $5f
              f76f 0001  ld   $01
              f770 004b  ld   $4b
              f771 0000  ld   $00
              f772 0004  ld   $04
              f773 0048  ld   $48
              f774 004f  ld   $4f
              f775 004c  ld   $4c
              f776 0044  ld   $44
              f777 0000  ld   $00
              f778 0005  ld   $05
              f779 0050  ld   $50
              f77a 0052  ld   $52
              f77b 0045  ld   $45
              f77c 0053  ld   $53
              f77d 0053  ld   $53
              f77e 0000  ld   $00
              f77f 0009  ld   $09
              f780 0054  ld   $54
              f781 004f  ld   $4f
              f782 0020  ld   $20
              f783 0053  ld   $53
              f784 0045  ld   $45
              f785 004c  ld   $4c
              f786 0045  ld   $45
              f787 0043  ld   $43
              f788 0054  ld   $54
              f789 0000  ld   $00
              f78a 0003  ld   $03
              f78b 0055  ld   $55
              f78c 0053  ld   $53
              f78d 0045  ld   $45
              f78e 0000  ld   $00
              f78f 0009  ld   $09
              f790 0020  ld   $20
              f791 005b  ld   $5b
              f792 0053  ld   $53
              f793 0054  ld   $54
              f794 0041  ld   $41
              f795 0052  ld   $52
              f796 0054  ld   $54
              f797 005d  ld   $5d
              f798 0020  ld   $20
              f799 0000  ld   $00
              f79a 000a  ld   $0a
              f79b 0020  ld   $20
              f79c 005b  ld   $5b
              f79d 0041  ld   $41
              f79e 0052  ld   $52
              f79f 0052  ld   $52
              f7a0 004f  ld   $4f
              f7a1 0057  ld   $57
              f7a2 0053  ld   $53
              f7a3 005d  ld   $5d
              f7a4 0020  ld   $20
              f7a5 0000  ld   $00
              f7a6 0028  ld   $28
              f7a7 00d2  ld   $d2
              f7a8 003c  ld   $3c
              f7a9 006b  ld   $6b
              f7aa 00e3  ld   $e3
              f7ab 0063  ld   $63
              f7ac 00d8  ld   $d8
              f7ad 0068  ld   $68
              f7ae 0089  ld   $89
              f7af 005c  ld   $5c
              f7b0 0083  ld   $83
              f7b1 00db  ld   $db
              f7b2 000e  ld   $0e
              f7b3 007f  ld   $7f
              f7b4 0074  ld   $74
              f7b5 0072  ld   $72
              f7b6 001e  ld   $1e
              f7b7 00a7  ld   $a7
              f7b8 0084  ld   $84
              f7b9 0089  ld   $89
              f7ba 00f8  ld   $f8
              f7bb 007f  ld   $7f
              f7bc 00f1  ld   $f1
              f7bd 007f  ld   $7f
              f7be 00e5  ld   $e5
              f7bf 007f  ld   $7f
              f7c0 00dc  ld   $dc
              f7c1 007f  ld   $7f
              f7c2 00d5  ld   $d5
              f7c3 007f  ld   $7f
              f7c4 00cd  ld   $cd
              f7c5 007f  ld   $7f
              f7c6 00c2  ld   $c2
              f7c7 007f  ld   $7f
              f7c8 00bb  ld   $bb
              f7c9 007f  ld   $7f
              f7ca 00b1  ld   $b1
              f7cb 007f  ld   $7f
              f7cc 00a8  ld   $a8
              f7cd 007f  ld   $7f
              f7ce 007f  ld   $7f
              f7cf 00a1  ld   $a1
              f7d0 005f  ld   $5f
              f7d1 0005  ld   $05
              f7d2 0020  ld   $20
              f7d3 005b  ld   $5b
              f7d4 0041  ld   $41
              f7d5 005d  ld   $5d
              f7d6 0020  ld   $20
              f7d7 0000  ld   $00
              f7d8 0007  ld   $07
              f7d9 0041  ld   $41
              f7da 0050  ld   $50
              f7db 0050  ld   $50
              f7dc 004c  ld   $4c
              f7dd 0045  ld   $45
              f7de 002d  ld   $2d
              f7df 0031  ld   $31
              f7e0 0000  ld   $00
              f7e1 0008  ld   $08
              f7e2 004d  ld   $4d
              f7e3 0053  ld   $53
              f7e4 0020  ld   $20
              f7e5 0042  ld   $42
              f7e6 0041  ld   $41
              f7e7 0053  ld   $53
              f7e8 0049  ld   $49
              f7e9 0043  ld   $43
              f7ea 0000  ld   $00
              f7eb 0005  ld   $05
              f7ec 0042  ld   $42
              f7ed 0041  ld   $41
              f7ee 0053  ld   $53
              f7ef 0049  ld   $49
              f7f0 0043  ld   $43
              f7f1 0000  ld   $00
              f7f2 0009  ld   $09
              f7f3 0054  ld   $54
              f7f4 0049  ld   $49
              f7f5 0043  ld   $43
              f7f6 0054  ld   $54
              f7f7 0041  ld   $41
              f7f8 0043  ld   $43
              f7f9 0054  ld   $54
              f7fa 004f  ld   $4f
              f7fb fe00  bra  ac          ;+-----------------------------------+
              f7fc fcfd  bra  $f7fd       ;|                                   |
              f7fd 1418  ld   $18,y       ;| Trampoline for page $f700 lookups |
              f7fe e006  jmp  y,$06       ;|                                   |
              f7ff c218  st   [$18]       ;+-----------------------------------+
              f800 0045  ld   $45
              f801 0000  ld   $00
              f802 0006  ld   $06
              f803 004c  ld   $4c
              f804 004f  ld   $4f
              f805 0041  ld   $41
              f806 0044  ld   $44
              f807 0045  ld   $45
              f808 0052  ld   $52
              f809 0000  ld   $00
              f80a 0005  ld   $05
              f80b 0052  ld   $52
              f80c 0041  ld   $41
              f80d 0043  ld   $43
              f80e 0045  ld   $45
              f80f 0052  ld   $52
              f810 0000  ld   $00
              f811 0007  ld   $07
              f812 0043  ld   $43
              f813 0052  ld   $52
              f814 0045  ld   $45
              f815 0044  ld   $44
              f816 0049  ld   $49
              f817 0054  ld   $54
              f818 0053  ld   $53
              f819 0000  ld   $00
              f81a 000a  ld   $0a
              f81b 004d  ld   $4d
              f81c 0041  ld   $41
              f81d 004e  ld   $4e
              f81e 0044  ld   $44
              f81f 0045  ld   $45
              f820 004c  ld   $4c
              f821 0042  ld   $42
              f822 0052  ld   $52
              f823 004f  ld   $4f
              f824 0054  ld   $54
              f825 0000  ld   $00
              f826 0005  ld   $05
              f827 0053  ld   $53
              f828 004e  ld   $4e
              f829 0041  ld   $41
              f82a 004b  ld   $4b
              f82b 0045  ld   $45
              f82c 0000  ld   $00
              f82d 0006  ld   $06
              f82e 0053  ld   $53
              f82f 0044  ld   $44
              f830 0043  ld   $43
              f831 0041  ld   $41
              f832 0052  ld   $52
              f833 0044  ld   $44
              f834 0000  ld   $00
              f835 0000  ld   $00
              f836 0000  ld   $00         ;End of gbas/menu/MainMenu_vX0.gt1, size 4372
                                          ;+-----------------------------------+
                                          ;| Core/Reset_vX0.gcl                |
                                          ;+-----------------------------------+
              f837 dc4d  st   $4d,[y,x++] ;'M'
              f838 dc61  st   $61,[y,x++] ;'a'
              f839 dc69  st   $69,[y,x++] ;'i'
              f83a dc6e  st   $6e,[y,x++] ;'n'
              f83b dc00  st   $00,[y,x++] ;'\x00'
              f83c dc00  st   $00,[y,x++] ;'\x00'
              f83d dc00  st   $00,[y,x++] ;'\x00'
              f83e dc00  st   $00,[y,x++] ;'\x00'
              f83f 0023  ld   $23
              f840 c218  st   [$18]
              f841 00e7  ld   $e7
              f842 14fa  ld   $fa,y
              f843 e020  jmp  y,$20
              f844 c219  st   [$19]
Reset:        f845 0002  ld   $02         ;| RAM segment address (high byte first)
              f846 0000  ld   $00         ;|
              f847 0084  ld   $84         ;| Length (1..256)
              f848 0011  ld   $11         ;0200 LDWI
              f849 00f8  ld   $f8
              f84a 0001  ld   $01
              f84b 002b  ld   $2b         ;0203 STW
              f84c 0030  ld   $30         ;0203 'CtrlBits'
              f84d 00cd  ld   $cd         ;0205 DEF
              f84e 007d  ld   $7d
              f84f 0075  ld   $75         ;0207 PUSH
              f850 001a  ld   $1a         ;0208 LD
              f851 0001  ld   $01
              f852 00e6  ld   $e6         ;020a SUBI
              f853 0001  ld   $01
              f854 0082  ld   $82         ;020c ANDI
              f855 00ff  ld   $ff
              f856 00e3  ld   $e3         ;020e ADDI
              f857 0001  ld   $01
              f858 002b  ld   $2b         ;0210 STW
              f859 0032  ld   $32         ;0210 'i'
              f85a 0059  ld   $59         ;0212 LDI
              f85b 0020  ld   $20
              f85c 005e  ld   $5e         ;0214 ST
              f85d 007a  ld   $7a
              f85e 0011  ld   $11         ;0216 LDWI
              f85f 0009  ld   $09
              f860 000b  ld   $0b
              f861 002b  ld   $2b         ;0219 STW
              f862 0022  ld   $22         ;0219 '_sysFn'
              f863 0059  ld   $59         ;021b LDI
              f864 00aa  ld   $aa
              f865 005e  ld   $5e         ;021d ST
              f866 007c  ld   $7c
              f867 0059  ld   $59         ;021f LDI
              f868 007c  ld   $7c
              f869 00b4  ld   $b4         ;0221 SYS
              f86a 00fb  ld   $fb
              f86b 001a  ld   $1a         ;0223 LD
              f86c 007c  ld   $7c
              f86d 008c  ld   $8c         ;0225 XORI
              f86e 00aa  ld   $aa
              f86f 0035  ld   $35         ;0227 BCC
              f870 003f  ld   $3f         ;0228 EQ
              f871 002e  ld   $2e
              f872 0059  ld   $59         ;022a LDI
              f873 0000  ld   $00
              f874 00f0  ld   $f0         ;022c POKE
              f875 0030  ld   $30         ;022c 'CtrlBits'
              f876 0090  ld   $90         ;022e BRA
              f877 0058  ld   $58
              f878 0011  ld   $11         ;0230 LDWI
              f879 0024  ld   $24
              f87a 0080  ld   $80
              f87b 002b  ld   $2b         ;0233 STW
              f87c 0034  ld   $34         ;0233 'q'
              f87d 0059  ld   $59         ;0235 LDI
              f87e 00bc  ld   $bc
              f87f 00b4  ld   $b4         ;0237 SYS
              f880 00fb  ld   $fb
              f881 0021  ld   $21         ;0239 LDW
              f882 0034  ld   $34         ;0239 'q'
              f883 00ad  ld   $ad         ;023b PEEK
              f884 008c  ld   $8c         ;023c XORI
              f885 00ff  ld   $ff
              f886 00f0  ld   $f0         ;023e POKE
              f887 0034  ld   $34         ;023e 'q'
              f888 002b  ld   $2b         ;0240 STW
              f889 0024  ld   $24         ;0240 '_sysArgs0'
              f88a 008c  ld   $8c         ;0242 XORI
              f88b 00ff  ld   $ff
              f88c 00f0  ld   $f0         ;0244 POKE
              f88d 0034  ld   $34         ;0244 'q'
              f88e 00fc  ld   $fc         ;0246 XORW
              f88f 0024  ld   $24         ;0246 '_sysArgs0'
              f890 0035  ld   $35         ;0248 BCC
              f891 003f  ld   $3f         ;0249 EQ
              f892 0053  ld   $53
              f893 0059  ld   $59         ;024b LDI
              f894 0031  ld   $31
              f895 002b  ld   $2b         ;024d STW
              f896 0036  ld   $36         ;024d 'Char'
              f897 005e  ld   $5e         ;024f ST
              f898 007a  ld   $7a
              f899 0059  ld   $59         ;0251 LDI
              f89a 0070  ld   $70
              f89b 002b  ld   $2b         ;0253 STW
              f89c 0032  ld   $32         ;0253 'i'
              f89d 0011  ld   $11         ;0255 LDWI
              f89e 007c  ld   $7c
              f89f 0080  ld   $80
              f8a0 00b4  ld   $b4         ;0258 SYS
              f8a1 00fb  ld   $fb
              f8a2 0011  ld   $11         ;025a LDWI
              f8a3 002f  ld   $2f
              f8a4 002f  ld   $2f
              f8a5 002b  ld   $2b         ;025d STW
              f8a6 0036  ld   $36         ;025d 'Char'
              f8a7 0021  ld   $21         ;025f LDW
              f8a8 0032  ld   $32         ;025f 'i'
              f8a9 0093  ld   $93         ;0261 INC
              f8aa 0036  ld   $36         ;0261 'Char'
              f8ab 00e6  ld   $e6         ;0263 SUBI
              f8ac 0028  ld   $28
              f8ad 0035  ld   $35         ;0265 BCC
              f8ae 0053  ld   $53         ;0266 GE
              f8af 005f  ld   $5f
              f8b0 00e3  ld   $e3         ;0268 ADDI
              f8b1 0028  ld   $28
              f8b2 0093  ld   $93         ;026a INC
              f8b3 0037  ld   $37         ;026a 'Char'+1
              f8b4 00e6  ld   $e6         ;026c SUBI
              f8b5 0004  ld   $04
              f8b6 0035  ld   $35         ;026e BCC
              f8b7 0053  ld   $53         ;026f GE
              f8b8 0068  ld   $68
              f8b9 0021  ld   $21         ;0271 LDW
              f8ba 0036  ld   $36         ;0271 'Char'
              f8bb 002b  ld   $2b         ;0273 STW
              f8bc 007b  ld   $7b
              f8bd 0059  ld   $59         ;0275 LDI
              f8be 0003  ld   $03
              f8bf 005e  ld   $5e         ;0277 ST
              f8c0 0079  ld   $79
              f8c1 0059  ld   $59         ;0279 LDI
              f8c2 0000  ld   $00
              f8c3 005e  ld   $5e         ;027b ST
              f8c4 007d  ld   $7d
              f8c5 0063  ld   $63         ;027d POP
              f8c6 00ff  ld   $ff         ;027e RET
              f8c7 002b  ld   $2b         ;027f STW
              f8c8 0038  ld   $38         ;027f 'CheckMemory'
              f8c9 0093  ld   $93         ;0281 INC
              f8ca 001b  ld   $1b
              f8cb 00ff  ld   $ff         ;0283 RET
              f8cc 0003  ld   $03         ;| RAM segment address (high byte first)
              f8cd 0000  ld   $00         ;|
              f8ce 00af  ld   $af         ;| Length (1..256)
              f8cf 00cd  ld   $cd         ;0300 DEF
              f8d0 008e  ld   $8e
              f8d1 0075  ld   $75         ;0302 PUSH
              f8d2 0059  ld   $59         ;0303 LDI
              f8d3 0010  ld   $10
              f8d4 002b  ld   $2b         ;0305 STW
              f8d5 003a  ld   $3a         ;0305 'j'
              f8d6 0059  ld   $59         ;0307 LDI
              f8d7 000a  ld   $0a
              f8d8 002b  ld   $2b         ;0309 STW
              f8d9 0032  ld   $32         ;0309 'i'
              f8da 00cf  ld   $cf         ;030b CALL
              f8db 003c  ld   $3c         ;030b 'SendOnesToCard'
              f8dc 0021  ld   $21         ;030d LDW
              f8dd 0032  ld   $32         ;030d 'i'
              f8de 00e6  ld   $e6         ;030f SUBI
              f8df 0001  ld   $01
              f8e0 0035  ld   $35         ;0311 BCC
              f8e1 004d  ld   $4d         ;0312 GT
              f8e2 0007  ld   $07
              f8e3 0011  ld   $11         ;0314 LDWI
              f8e4 0009  ld   $09
              f8e5 000b  ld   $0b
              f8e6 002b  ld   $2b         ;0317 STW
              f8e7 0022  ld   $22         ;0317 '_sysFn'
              f8e8 0011  ld   $11         ;0319 LDWI
              f8e9 0078  ld   $78
              f8ea 0080  ld   $80
              f8eb 00b4  ld   $b4         ;031c SYS
              f8ec 00fb  ld   $fb
              f8ed 00cd  ld   $cd         ;031e DEF
              f8ee 0026  ld   $26
              f8ef 00ff  ld   $ff         ;0320 255
              f8f0 00ff  ld   $ff         ;0321 255
              f8f1 0040  ld   $40         ;0322 64
              f8f2 0000  ld   $00         ;0323 0
              f8f3 0000  ld   $00         ;0324 0
              f8f4 0000  ld   $00         ;0325 0
              f8f5 0000  ld   $00         ;0326 0
              f8f6 0095  ld   $95         ;0327 149
              f8f7 002b  ld   $2b         ;0328 STW
              f8f8 003e  ld   $3e         ;0328 'p'
              f8f9 0059  ld   $59         ;032a LDI
              f8fa 0081  ld   $81
              f8fb fe00  bra  ac          ;+-----------------------------------+
              f8fc fcfd  bra  $f8fd       ;|                                   |
              f8fd 1418  ld   $18,y       ;| Trampoline for page $f800 lookups |
              f8fe e006  jmp  y,$06       ;|                                   |
              f8ff c218  st   [$18]       ;+-----------------------------------+
              f900 002b  ld   $2b         ;032c STW
              f901 0034  ld   $34         ;032c 'q'
              f902 0059  ld   $59         ;032e LDI
              f903 0008  ld   $08
              f904 002b  ld   $2b         ;0330 STW
              f905 0032  ld   $32         ;0330 'i'
              f906 0021  ld   $21         ;0332 LDW
              f907 003e  ld   $3e         ;0332 'p'
              f908 00ad  ld   $ad         ;0334 PEEK
              f909 0093  ld   $93         ;0335 INC
              f90a 003e  ld   $3e         ;0335 'p'
              f90b 00f0  ld   $f0         ;0337 POKE
              f90c 0034  ld   $34         ;0337 'q'
              f90d 0093  ld   $93         ;0339 INC
              f90e 0034  ld   $34         ;0339 'q'
              f90f 0021  ld   $21         ;033b LDW
              f910 0032  ld   $32         ;033b 'i'
              f911 00e6  ld   $e6         ;033d SUBI
              f912 0001  ld   $01
              f913 0035  ld   $35         ;033f BCC
              f914 004d  ld   $4d         ;0340 GT
              f915 002e  ld   $2e
              f916 0059  ld   $59         ;0342 LDI
              f917 0081  ld   $81
              f918 002b  ld   $2b         ;0344 STW
              f919 0024  ld   $24         ;0344 '_sysArgs0'
              f91a 00e3  ld   $e3         ;0346 ADDI
              f91b 0008  ld   $08
              f91c 002b  ld   $2b         ;0348 STW
              f91d 0026  ld   $26         ;0348 '_sysArgs2'
              f91e 0011  ld   $11         ;034a LDWI
              f91f 0015  ld   $15
              f920 000b  ld   $0b
              f921 002b  ld   $2b         ;034d STW
              f922 0022  ld   $22         ;034d '_sysFn'
              f923 00b4  ld   $b4         ;034f SYS
              f924 00cc  ld   $cc
              f925 0059  ld   $59         ;0351 LDI
              f926 0010  ld   $10
              f927 002b  ld   $2b         ;0353 STW
              f928 0032  ld   $32         ;0353 'i'
              f929 00cf  ld   $cf         ;0355 CALL
              f92a 003c  ld   $3c         ;0355 'SendOnesToCard'
              f92b 0082  ld   $82         ;0357 ANDI
              f92c 0080  ld   $80
              f92d 0035  ld   $35         ;0359 BCC
              f92e 003f  ld   $3f         ;035a EQ
              f92f 0061  ld   $61
              f930 0021  ld   $21         ;035c LDW
              f931 0032  ld   $32         ;035c 'i'
              f932 00e6  ld   $e6         ;035e SUBI
              f933 0001  ld   $01
              f934 0035  ld   $35         ;0360 BCC
              f935 004d  ld   $4d         ;0361 GT
              f936 0051  ld   $51
              f937 0011  ld   $11         ;0363 LDWI
              f938 0009  ld   $09
              f939 000b  ld   $0b
              f93a 002b  ld   $2b         ;0366 STW
              f93b 0022  ld   $22         ;0366 '_sysFn'
              f93c 0011  ld   $11         ;0368 LDWI
              f93d 007c  ld   $7c
              f93e 0080  ld   $80
              f93f 00b4  ld   $b4         ;036b SYS
              f940 00fb  ld   $fb
              f941 001a  ld   $1a         ;036d LD
              f942 002a  ld   $2a
              f943 0035  ld   $35         ;036f BCC
              f944 003f  ld   $3f         ;0370 EQ
              f945 008c  ld   $8c
              f946 008c  ld   $8c         ;0372 XORI
              f947 0001  ld   $01
              f948 0035  ld   $35         ;0374 BCC
              f949 0072  ld   $72         ;0375 NE
              f94a 0085  ld   $85
              f94b 0011  ld   $11         ;0377 LDWI
              f94c 00ab  ld   $ab
              f94d 00db  ld   $db
              f94e 002b  ld   $2b         ;037a STW
              f94f 0024  ld   $24         ;037a '_sysArgs0'
              f950 0011  ld   $11         ;037c LDWI
              f951 0000  ld   $00
              f952 0002  ld   $02
              f953 002b  ld   $2b         ;037f STW
              f954 001a  ld   $1a         ;037f '_vLR'
              f955 0059  ld   $59         ;0381 LDI
              f956 00ad  ld   $ad
              f957 002b  ld   $2b         ;0383 STW
              f958 0022  ld   $22         ;0383 '_sysFn'
              f959 00b4  ld   $b4         ;0385 SYS
              f95a 00e3  ld   $e3
              f95b 0021  ld   $21         ;0387 LDW
              f95c 003a  ld   $3a         ;0387 'j'
              f95d 00e6  ld   $e6         ;0389 SUBI
              f95e 0001  ld   $01
              f95f 0035  ld   $35         ;038b BCC
              f960 004d  ld   $4d         ;038c GT
              f961 0003  ld   $03
              f962 0063  ld   $63         ;038e POP
              f963 00ff  ld   $ff         ;038f RET
              f964 002b  ld   $2b         ;0390 STW
              f965 0040  ld   $40         ;0390 'CheckCard'
              f966 00cd  ld   $cd         ;0392 DEF
              f967 00a8  ld   $a8
              f968 0059  ld   $59         ;0394 LDI
              f969 00ff  ld   $ff
              f96a 005e  ld   $5e         ;0396 ST
              f96b 002a  ld   $2a
              f96c 0059  ld   $59         ;0398 LDI
              f96d 002a  ld   $2a
              f96e 002b  ld   $2b         ;039a STW
              f96f 0024  ld   $24         ;039a '_sysArgs0'
              f970 00e3  ld   $e3         ;039c ADDI
              f971 0001  ld   $01
              f972 002b  ld   $2b         ;039e STW
              f973 0026  ld   $26         ;039e '_sysArgs2'
              f974 0011  ld   $11         ;03a0 LDWI
              f975 0015  ld   $15
              f976 000b  ld   $0b
              f977 002b  ld   $2b         ;03a3 STW
              f978 0022  ld   $22         ;03a3 '_sysFn'
              f979 00b4  ld   $b4         ;03a5 SYS
              f97a 00cc  ld   $cc
              f97b 001a  ld   $1a         ;03a7 LD
              f97c 002a  ld   $2a
              f97d 00ff  ld   $ff         ;03a9 RET
              f97e 002b  ld   $2b         ;03aa STW
              f97f 003c  ld   $3c         ;03aa 'SendOnesToCard'
              f980 0093  ld   $93         ;03ac INC
              f981 001b  ld   $1b
              f982 00ff  ld   $ff         ;03ae RET
              f983 0004  ld   $04         ;| RAM segment address (high byte first)
              f984 0000  ld   $00         ;|
              f985 007b  ld   $7b         ;| Length (1..256)
              f986 0011  ld   $11         ;0400 LDWI
              f987 000f  ld   $0f
              f988 000b  ld   $0b
              f989 002b  ld   $2b         ;0403 STW
              f98a 0022  ld   $22
              f98b 0059  ld   $59         ;0405 LDI
              f98c 0000  ld   $00
              f98d 00b4  ld   $b4         ;0407 SYS
              f98e 00f6  ld   $f6
              f98f 0011  ld   $11         ;0409 LDWI
              f990 0012  ld   $12
              f991 000b  ld   $0b
              f992 002b  ld   $2b         ;040c STW
              f993 0022  ld   $22
              f994 0059  ld   $59         ;040e LDI
              f995 0000  ld   $00
              f996 00b4  ld   $b4         ;0410 SYS
              f997 00f8  ld   $f8
              f998 00b4  ld   $b4         ;0412 SYS
              f999 00f8  ld   $f8
              f99a 00b4  ld   $b4         ;0414 SYS
              f99b 00f8  ld   $f8
              f99c 00b4  ld   $b4         ;0416 SYS
              f99d 00f8  ld   $f8
              f99e 0011  ld   $11         ;0418 LDWI
              f99f 0000  ld   $00
              f9a0 0001  ld   $01
              f9a1 002b  ld   $2b         ;041b STW
              f9a2 003e  ld   $3e         ;041b 'p'
              f9a3 0011  ld   $11         ;041d LDWI
              f9a4 0000  ld   $00
              f9a5 0008  ld   $08
              f9a6 002b  ld   $2b         ;0420 STW
              f9a7 0034  ld   $34         ;0420 'q'
              f9a8 001a  ld   $1a         ;0422 LD
              f9a9 0035  ld   $35         ;0422 'q'+1
              f9aa 00f0  ld   $f0         ;0424 POKE
              f9ab 003e  ld   $3e         ;0424 'p'
              f9ac 0093  ld   $93         ;0426 INC
              f9ad 003e  ld   $3e         ;0426 'p'
              f9ae 0059  ld   $59         ;0428 LDI
              f9af 0000  ld   $00
              f9b0 00f0  ld   $f0         ;042a POKE
              f9b1 003e  ld   $3e         ;042a 'p'
              f9b2 0093  ld   $93         ;042c INC
              f9b3 003e  ld   $3e         ;042c 'p'
              f9b4 0093  ld   $93         ;042e INC
              f9b5 0035  ld   $35         ;042e 'q'+1
              f9b6 0021  ld   $21         ;0430 LDW
              f9b7 0034  ld   $34         ;0430 'q'
              f9b8 0035  ld   $35         ;0432 BCC
              f9b9 004d  ld   $4d         ;0433 GT
              f9ba 0020  ld   $20
              f9bb 0011  ld   $11         ;0435 LDWI
              f9bc 0003  ld   $03
              f9bd 000b  ld   $0b
              f9be 002b  ld   $2b         ;0438 STW
              f9bf 0022  ld   $22         ;0438 '_sysFn'
              f9c0 0059  ld   $59         ;043a LDI
              f9c1 0000  ld   $00
              f9c2 005e  ld   $5e         ;043c ST
              f9c3 0025  ld   $25
              f9c4 0011  ld   $11         ;043e LDWI
              f9c5 0000  ld   $00
              f9c6 0008  ld   $08
              f9c7 002b  ld   $2b         ;0441 STW
              f9c8 003e  ld   $3e         ;0441 'p'
              f9c9 002b  ld   $2b         ;0443 STW
              f9ca 0026  ld   $26         ;0443 '_sysArgs2'
              f9cb 0059  ld   $59         ;0445 LDI
              f9cc 00a0  ld   $a0
              f9cd 005e  ld   $5e         ;0447 ST
              f9ce 0024  ld   $24
              f9cf 00b4  ld   $b4         ;0449 SYS
              f9d0 00f4  ld   $f4
              f9d1 0011  ld   $11         ;044b LDWI
              f9d2 0000  ld   $00
              f9d3 0001  ld   $01
              f9d4 0099  ld   $99         ;044e ADDW
              f9d5 003e  ld   $3e         ;044e 'p'
              f9d6 0035  ld   $35         ;0450 BCC
              f9d7 004d  ld   $4d         ;0451 GT
              f9d8 003f  ld   $3f
              f9d9 0011  ld   $11         ;0453 LDWI
              f9da 0014  ld   $14
              f9db 0008  ld   $08
              f9dc 002b  ld   $2b         ;0456 STW
              f9dd 0042  ld   $42         ;0456 'Pos'
              f9de 00cf  ld   $cf         ;0458 CALL
              f9df 0038  ld   $38         ;0458 'CheckMemory'
              f9e0 0011  ld   $11         ;045a LDWI
              f9e1 0000  ld   $00
              f9e2 000b  ld   $0b
              f9e3 002b  ld   $2b         ;045d STW
              f9e4 0022  ld   $22         ;045d '_sysFn'
              f9e5 0059  ld   $59         ;045f LDI
              f9e6 0002  ld   $02
              f9e7 00b4  ld   $b4         ;0461 SYS
              f9e8 00e7  ld   $e7
              f9e9 0021  ld   $21         ;0463 LDW
              f9ea 0030  ld   $30         ;0463 'CtrlBits'
              f9eb 00ad  ld   $ad         ;0465 PEEK
              f9ec 0035  ld   $35         ;0466 BCC
              f9ed 003f  ld   $3f         ;0467 EQ
              f9ee 0069  ld   $69
              f9ef 00cf  ld   $cf         ;0469 CALL
              f9f0 0040  ld   $40         ;0469 'CheckCard'
              f9f1 0011  ld   $11         ;046b LDWI
              f9f2 0023  ld   $23
              f9f3 00e7  ld   $e7
              f9f4 002b  ld   $2b         ;046e STW
              f9f5 0024  ld   $24         ;046e '_sysArgs0'
              f9f6 0011  ld   $11         ;0470 LDWI
              f9f7 0000  ld   $00
              f9f8 0002  ld   $02
              f9f9 002b  ld   $2b         ;0473 STW
              f9fa 001a  ld   $1a         ;0473 '_vLR'
              f9fb fe00  bra  ac          ;+-----------------------------------+
              f9fc fcfd  bra  $f9fd       ;|                                   |
              f9fd 1418  ld   $18,y       ;| Trampoline for page $f900 lookups |
              f9fe e006  jmp  y,$06       ;|                                   |
              f9ff c218  st   [$18]       ;+-----------------------------------+
              fa00 0059  ld   $59         ;0475 LDI
              fa01 00ad  ld   $ad
              fa02 002b  ld   $2b         ;0477 STW
              fa03 0022  ld   $22         ;0477 '_sysFn'
              fa04 00b4  ld   $b4         ;0479 SYS
              fa05 00e3  ld   $e3
              fa06 0000  ld   $00         ;End of Core/Reset_vX0.gcl, size 450
sys_ReadRomDir:
              fa07 f00d  beq  .sysDir#20
              fa08 1024  ld   $24,x
              fa09 1600  ld   ac,y
              fa0a 0118  ld   [$18]
              fa0b a00e  suba $0e
              fa0c e200  jmp  y,ac
.sysDir#20:   fa0d 1400  ld   $00,y
              fa0e 0012  ld   $12
              fa0f 14fa  ld   $fa,y
              fa10 e200  jmp  y,ac
              fa11 1400  ld   $00,y
.sysDir#25:   fa12 dc52  st   $52,[y,x++] ;'R'
              fa13 dc65  st   $65,[y,x++] ;'e'
              fa14 dc73  st   $73,[y,x++] ;'s'
              fa15 dc65  st   $65,[y,x++] ;'e'
              fa16 dc74  st   $74,[y,x++] ;'t'
              fa17 dc00  st   $00,[y,x++] ;'\x00'
              fa18 dc00  st   $00,[y,x++] ;'\x00'
              fa19 dc00  st   $00,[y,x++] ;'\x00'
              fa1a 0045  ld   $45
              fa1b c218  st   [$18]
              fa1c 00f8  ld   $f8
              fa1d 14fa  ld   $fa,y
              fa1e e020  jmp  y,$20
              fa1f c219  st   [$19]
.sysDir#39:   fa20 1403  ld   $03,y
              fa21 e0cb  jmp  y,$cb
              fa22 00ea  ld   $ea
              fa23 0200  nop              ;216 fillers
              fa24 0200  nop
              fa25 0200  nop
              * 216 times
              fafb fe00  bra  ac          ;+-----------------------------------+
              fafc fcfd  bra  $fafd       ;|                                   |
              fafd 1418  ld   $18,y       ;| Trampoline for page $fa00 lookups |
              fafe e006  jmp  y,$06       ;|                                   |
              faff c218  st   [$18]       ;+-----------------------------------+
              fb00
