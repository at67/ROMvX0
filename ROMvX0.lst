* source: Core/ROMvX0.asm.py
                                          163   enableListing()
                                          164   #-----------------------------------------------------------------------
                                          165   #
                                          166   #  Start of core
                                          167   #
                                          168   #-----------------------------------------------------------------------
                                          169
                                          170   # Pre-loading the formal interface as a way to get warnings when
                                          171   # accidentally redefined with a different value
                                          172   loadBindings('ROMvX0_interface.json')
                                          173   loadBindings('Core/interface-dev.json') # Provisional values for DEVROM
                                          174
                                          175   # Gigatron clock
                                          176   cpuClock = 6.250e+06
                                          177
                                          178   # Output pin assignment for VGA
                                          179   R, G, B, hSync, vSync = 1, 4, 16, 64, 128
                                          180   syncBits = hSync+vSync # Both pulses negative
                                          181
                                          182   # When the XOUT register is in the circuit, the rising edge triggers its update.
                                          183   # The loop can therefore not be agnostic to the horizontal pulse polarity.
                                          184   assert syncBits & hSync != 0
                                          185
                                          186   # VGA 640x480 defaults (to be adjusted below!)
                                          187   vFront = 10     # Vertical front porch
                                          188   vPulse = 2      # Vertical sync pulse
                                          189   vBack  = 33     # Vertical back porch
                                          190   vgaLines = vFront + vPulse + vBack + 480
                                          191   vgaClock = 25.175e+06
                                          192
                                          193   # Video adjustments for Gigatron
                                          194   # 1. Our clock is (slightly) slower than 1/4th VGA clock. Not all monitors will
                                          195   #    accept the decreased frame rate, so we restore the frame rate to above
                                          196   #    minimum 59.94 Hz by cutting some lines from the vertical front porch.
                                          197   vFrontAdjust = vgaLines - int(4 * cpuClock / vgaClock * vgaLines)
                                          198   vFront -= vFrontAdjust
                                          199   # 2. Extend vertical sync pulse so we can feed the game controller the same
                                          200   #    signal. This is needed for controllers based on the 4021 instead of 74165
                                          201   vPulseExtension = max(0, 8-vPulse)
                                          202   vPulse += vPulseExtension
                                          203   # 3. Borrow these lines from the back porch so the refresh rate remains
                                          204   #    unaffected
                                          205   vBack -= vPulseExtension
                                          206
                                          207   # Start value of vertical blank counter
                                          208   videoYline0 = 1-2*(vFront+vPulse+vBack-2)
                                          209
                                          210   # Mismatch between video lines and sound channels
                                          211   soundDiscontinuity = (vFront+vPulse+vBack) % 4
                                          212
                                          213   # QQVGA resolution
                                          214   qqVgaWidth      = 160
                                          215   qqVgaHeight     = 120
                                          216
                                          217   # Game controller bits (actual controllers in kit have negative output)
                                          218   # +----------------------------------------+
                                          219   # |       Up                        B*     |
                                          220   # |  Left    Right               B     A*  |
                                          221   # |      Down      Select Start     A      |
                                          222   # +----------------------------------------+ *=Auto fire
                                          223   buttonRight     = 1
                                          224   buttonLeft      = 2
                                          225   buttonDown      = 4
                                          226   buttonUp        = 8
                                          227   buttonStart     = 16
                                          228   buttonSelect    = 32
                                          229   buttonB         = 64
                                          230   buttonA         = 128
                                          231
                                          232   #-----------------------------------------------------------------------
                                          233   #
                                          234   #  RAM page 0: zero-page variables
                                          235   #
                                          236   #-----------------------------------------------------------------------
                                          237
                                          238   # Memory size in pages from auto-detect
                                          239   memSize         = zpByte()
                                          240
                                          241   # Active interpreter page, swapped with channel, so that we can do a one
                                          242   # instruction vCpuSelect reset, i.e. st(vCpuSelect,[vCpuSelect])
                                          243   vCpuSelect      = zpByte()
                                          244
                                          245   # Next sound sample being synthesized
                                          246   sample          = zpByte()
                                          247   # To save one instruction in the critical inner loop, `sample' is always
                                          248   # reset with its own address instead of, for example, the value 0. Compare:
                                          249   # 1 instruction reset
                                          250   #       st sample,[sample]
                                          251   # 2 instruction reset:
                                          252   #       ld 0
                                          253   #       st [sample]
                                          254   # The difference is not audible. This is fine when the reset/address
                                          255   # value is low and doesn't overflow with 4 channels added to it.
                                          256   # There is an alternative, but it requires pull-down diodes on the data bus:
                                          257   #       st [sample],[sample]
                                          258   assert 4*63 + sample < 256
                                          259   # We pin this reset/address value to 3, so `sample' swings from 3 to 255
                                          260   assert sample == 3
                                          261
                                          262   # Former bootCount and bootCheck (<= ROMv3)
                                          263   vSPH             = zpByte()
                                          264   #zpReserved      = zpByte() # Recycled and still unused. Candidate future uses:
                                          265                              # - Video driver high address (for alternative video modes)
                                          266                              # - v6502: ADH offset ("MMU")
                                          267                              # - v8080: ???
                                          268
                                          269   # The current channel number for sound generation. Advanced every scan line
                                          270   # and independent of the vertical refresh to maintain constant oscillation.
                                          271   channel         = zpByte()
                                          272
                                          273   # Entropy harvested from SRAM startup and controller input
                                          274   entropy         = zpByte(3)
                                          275
                                          276   # Visible video
                                          277   videoY          = zpByte() # Counts up from 0 to 238 in steps of 2
                                          278                              # Counts up (and is odd) during vertical blank
                                          279   videoModeB      = zpByte() # Handler for every 2nd line (pixel burst or vCPU)
                                          280   videoModeC      = zpByte() # Handler for every 3rd line (pixel burst or vCPU)
                                          281   videoModeD      = zpByte() # Handler for every 4th line (pixel burst or vCPU)
                                          282
                                          283   nextVideo       = zpByte() # Jump offset to scan line handler (videoA, B, C...)
                                          284   videoPulse      = nextVideo # Used for pulse width modulation
                                          285
                                          286   # Frame counter is good enough as system clock
                                          287   frameCount      = zpByte(1)
                                          288
                                          289   # Serial input (game controller)
                                          290   serialRaw       = zpByte() # New raw serial read
                                          291   serialLast      = zpByte() # Previous serial read
                                          292   buttonState     = zpByte() # Clearable button state
                                          293   resetTimer      = zpByte() # After 2 seconds of holding 'Start', do a soft reset
                                          294                              # XXX move to page 1 to free up space
                                          295
                                          296   # Extended output (blinkenlights in bit 0:3 and audio in bit 4:7). This
                                          297   # value must be present in AC during a rising hSync edge. It then gets
                                          298   # copied to the XOUT register by the hardware. The XOUT register is only
                                          299   # accessible in this indirect manner because it isn't part of the core
                                          300   # CPU architecture.
                                          301   xout            = zpByte()
                                          302   xoutMask        = zpByte() # The blinkenlights and sound on/off state
                                          303
                                          304   # vCPU interpreter
                                          305   vTicks          = zpByte()  # Interpreter ticks are units of 2 clocks
                                          306   vPC             = zpByte(2) # Interpreter program counter, points into RAM
                                          307   vAC             = zpByte(2) # Interpreter accumulator, 16-bits
                                          308   vLR             = zpByte(2) # Return address, for returning after CALL
                                          309   vSP             = zpByte(1) # Stack pointer
                                          310   vTmp            = zpByte()
                                          311   vReturn         = zpByte()  # Return into video loop (in page of vBlankStart)
                                          312
                                          313   # Scratch
                                          314   frameX          = zpByte() # Starting byte within page
                                          315   frameY          = zpByte() # Page of current pixel line (updated by videoA)
                                          316
                                          317   # Vertical blank (reuse some variables used in the visible part)
                                          318   videoSync0      = frameX   # Vertical sync type on current line (0xc0 or 0x40)
                                          319   videoSync1      = frameY   # Same during horizontal pulse (0x80 or 0x00)
                                          320
                                          321   # Versioning for GT1 compatibility
                                          322   # Please refer to Docs/GT1-files.txt for interpreting this variable
                                          323   romType         = zpByte(1)
                                          324
                                          325   # The low 3 bits are repurposed to select the actively updated sound channels.
                                          326   # Valid bit combinations are:
                                          327   #  xxxxx011     Default after reset: 4 channels (page 1,2,3,4)
                                          328   #  xxxxx001     2 channels at double update rate (page 1,2)
                                          329   #  xxxxx000     1 channel at quadruple update rate (page 1)
                                          330   # The main application for this is to free up the high bytes of page 2,3,4.
                                          331   channelMask = symbol('channelMask_v4')
                                          332   assert romType == channelMask
                                          333
                                          334   # SYS function arguments and results/scratch
                                          335   sysFn           = zpByte(2)
                                          336   sysArgs         = zpByte(8)
                                          337
                                          338   # Play sound if non-zero, count down and stop sound when zero
                                          339   soundTimer      = zpByte()
                                          340
                                          341   # Fow now the LED state machine itself is hard-coded in the program ROM
                                          342   ledTimer        = zpByte() # Number of ticks until next LED change
                                          343   ledState_v2     = zpByte() # Current LED state
                                          344   ledTempo        = zpByte() # Next value for ledTimer after LED state change
                                          345
                                          346   # All bytes above, except 0x80, are free for temporary/scratch/stacks etc
                                          347   userVars        = zpByte(0)
                                          348
                                          349   #-----------------------------------------------------------------------
                                          350   #
                                          351   #  RAM page 1: video line table
                                          352   #
                                          353   #-----------------------------------------------------------------------
                                          354
                                          355   # Byte 0-239 define the video lines
                                          356   videoTable      = 0x0100 # Indirection table: Y[0] dX[0]  ..., Y[119] dX[119]
                                          357
                                          358   vReset          = 0x01f0
                                          359   vIRQ_v5         = 0x01f6
                                          360   ctrlBits        = 0x01f8
                                          361   videoTop_v5     = 0x01f9 # Number of skip lines
                                          362
                                          363   # Highest bytes are for sound channel variables
                                          364   wavA = 250      # Waveform modulation with `adda'
                                          365   wavX = 251      # Waveform modulation with `xora'
                                          366   keyL = 252      # Frequency low 7 bits (bit7 == 0)
                                          367   keyH = 253      # Frequency high 8 bits
                                          368   oscL = 254      # Phase low 7 bits
                                          369   oscH = 255      # Phase high 8 bits
                                          370
                                          371   #-----------------------------------------------------------------------
                                          372   #  Memory layout
                                          373   #-----------------------------------------------------------------------
                                          374
                                          375   userCode = 0x0200       # Application vCPU code
                                          376   soundTable = 0x0700     # Wave form tables (doubles as right-shift-2 table)
                                          377   screenMemory = 0x0800   # Default start of screen memory: 0x0800 to 0x7fff
                                          378
                                          379   #-----------------------------------------------------------------------
                                          380   #  Application definitions
                                          381   #-----------------------------------------------------------------------
                                          382
                                          383   maxTicks = 30//2                 # Duration of vCPU's slowest virtual opcode (ticks)
                                          384   minTicks = 14//2                 # vcPU's fastest instruction
                                          385   v6502_maxTicks = 38//2           # Max duration of v6502 processing phase (ticks)
                                          386
                                          387   runVcpu_overhead = 5            # Caller overhead (cycles)
                                          388   vCPU_overhead = 9               # Callee overhead of jumping in and out (cycles)
                                          389   v6502_overhead = 11             # Callee overhead for v6502 (cycles)
                                          390
                                          391   v6502_adjust = (v6502_maxTicks - maxTicks) + (v6502_overhead - vCPU_overhead)//2
                                          392   assert v6502_adjust >= 0        # v6502's overhead is a bit more than vCPU
                                          393
                                          394   def runVcpu(n, ref=None, returnTo=None):
                                          395     """Macro to run interpreter for exactly n cycles. Returns 0 in AC.
                                          396
                                          397     - `n' is the number of available Gigatron cycles including overhead.
                                          398       This is converted into interpreter ticks and takes into account
                                          399       the vCPU calling overheads. A `nop' is inserted when necessary
                                          400       for alignment between cycles and ticks.
                                          401     - `returnTo' is where program flow continues after return. If not set
                                          402        explicitely, it will be the first instruction behind the expansion.
                                          403     - If another interpreter than vCPU is active (v6502...), that one
                                          404       must adjust for the timing differences, because runVcpu wouldn't know."""
                                          405
                                          406     overhead = runVcpu_overhead + vCPU_overhead
                                          407     if returnTo == 0x100:         # Special case for videoZ
                                          408       overhead -= 2
                                          409
                                          410     if n is None:
                                          411       # (Clumsily) create a maximum time slice, corresponding to a vTicks
                                          412       # value of 127 (giving 282 cycles). A higher value doesn't work because
                                          413       # then SYS functions that just need 28 cycles (0 excess) won't start.
                                          414       n = (127 + maxTicks) * 2 + overhead
                                          415
                                          416     n -= overhead
                                          417     assert n > 0
                                          418
                                          419     if n % 2 == 1:
                                          420       nop()                       # Tick alignment
                                          421       n -= 1
                                          422     assert n % 2 == 0
                                          423
                                          424     print('runVcpu at $%04x net cycles %3s info %s' % (pc(), n, ref))
                                          425
                                          426     if returnTo != 0x100:
                                          427       if returnTo is None:
                                          428         returnTo = pc() + 5       # Next instruction
                                          429       ld(lo(returnTo))            #0
                                          430       st([vReturn])               #1
                                          431
                                          432     n //= 2
                                          433     n -= maxTicks                 # First instruction always runs
                                          434     assert n < 128
                                          435     assert n >= v6502_adjust
                                          436
                                          437     ld([vCpuSelect],Y)            #2
                                          438     jmp(Y,'ENTER')                #3
                                          439     ld(n)                         #4
                                          440   assert runVcpu_overhead ==       5
                                          441
                                          442   #-----------------------------------------------------------------------
                                          443   #       v6502 definitions
                                          444   #-----------------------------------------------------------------------
                                          445
                                          446   # Registers are zero page variables
                                          447   v6502_PC        = vLR           # Program Counter
                                          448   v6502_PCL       = vLR+0         # Program Counter Low
                                          449   v6502_PCH       = vLR+1         # Program Counter High
                                          450   v6502_S         = vSP           # Stack Pointer (kept as "S+1")
                                          451   v6502_A         = vAC+0         # Accumulator
                                          452   v6502_BI        = vAC+1         # B Input Register (used by SBC)
                                          453   v6502_ADL       = sysArgs+0     # Low Address Register
                                          454   v6502_ADH       = sysArgs+1     # High Address Register
                                          455   v6502_IR        = sysArgs+2     # Instruction Register
                                          456   v6502_P         = sysArgs+3     # Processor Status Register (V flag in bit 7)
                                          457   v6502_Qz        = sysArgs+4     # Quick Status Register for Z flag
                                          458   v6502_Qn        = sysArgs+5     # Quick Status Register for N flag
                                          459   v6502_X         = sysArgs+6     # Index Register X
                                          460   v6502_Y         = sysArgs+7     # Index Register Y
                                          461   v6502_Tmp       = vTmp          # Scratch (may be clobbered outside v6502)
                                          462
                                          463   # MOS 6502 definitions for P register
                                          464   v6502_Cflag = 1                 # Carry Flag (unsigned overflow)
                                          465   v6502_Zflag = 2                 # Zero Flag (all bits zero)
                                          466   v6502_Iflag = 4                 # Interrupt Enable Flag (1=Disable)
                                          467   v6502_Dflag = 8                 # Decimal Enable Flag (aka BCD mode, 1=Enable)
                                          468   v6502_Bflag = 16                # Break (or PHP) Instruction Flag
                                          469   v6502_Uflag = 32                # Unused (always 1)
                                          470   v6502_Vflag = 64                # Overflow Flag (signed overflow)
                                          471   v6502_Nflag = 128               # Negative Flag (bit 7 of result)
                                          472
                                          473   # In emulation it is much faster to keep the V flag in bit 7
                                          474   # This can be corrected when importing/exporting with PHP, PLP, etc
                                          475   v6502_Vemu = 128
                                          476
                                          477   # On overflow:
                                          478   #       """Overflow is set if two inputs with the same sign produce
                                          479   #          a result with a different sign. Otherwise it is clear."""
                                          480   # Formula (without carry/borrow in!):
                                          481   #       (A ^ (A+B)) & (B ^ (A+B)) & 0x80
                                          482   # References:
                                          483   #       http://www.righto.com/2012/12/the-6502-overflow-flag-explained.html
                                          484   #       http://6502.org/tutorials/vflag.html
                                          485
                                          486   # Memory layout
                                          487   v6502_Stack     = 0x0000        # 0x0100 is already used in the Gigatron
                                          488   #v6502_NMI      = 0xfffa
                                          489   #v6502_RESET    = 0xfffc
                                          490   #v6502_IRQ      = 0xfffe
                                          491
                                          492   #-----------------------------------------------------------------------
                                          493   #
                                          494   #  $0000 ROM page 0: Boot
                                          495   #
                                          496   #-----------------------------------------------------------------------
                                          497
                                          498   align(0x100, size=0x80)
                                          499
                                          500   # Give a first sign of life that can be checked with a voltmeter
              address
              |    encoding
              |    |     instruction
              |    |     |    operands
              |    |     |    |
              V    V     V    V
              0000 0000  ld   $00         501   ld(0b0000)                      # LEDs |OOOO|
              0001 1880  ld   $80,out     502   ld(syncBits^hSync,OUT)          # Prepare XOUT update, hSync goes down, RGB to black
              0002 18c0  ld   $c0,out     503   ld(syncBits,OUT)                # hSync goes up, updating XOUT
                                          504
                                          505   # Setup I/O and RAM expander
              0003 c17f  ctrl $7f         506   ctrl(0b01111111)                # Expansion board: (1) reset signal.
              0004 c17c  ctrl $7c         507   ctrl(0b01111100)                # (2) disable SPI slaves, enable RAM bank 1
                                          508   #      ^^^^^^^^
                                          509   #      |||||||`-- SCLK
                                          510   #      ||||||`--- Not connected
                                          511   #      |||||`---- /SS0
                                          512   #      ||||`----- /SS1
                                          513   #      |||`------ /SS2
                                          514   #      ||`------- /SS3
                                          515   #      |`-------- B0
                                          516   #      `--------- B1
                                          517   # bit15 --------- MOSI = 0
                                          518
                                          519   # Simple RAM test and size check by writing to [1<<n] and see if [0] changes or not.
              0005 0001  ld   $01         520   ld(1)                           # Quick RAM test and count
                                          521   label('.countMem0')
.countMem0:   0006 d601  st   [$01],y     522   st([memSize],Y)                 # Store in RAM and load AC in Y
              0007 00ff  ld   $ff         523   ld(255)
              0008 6900  xora [y,$00]     524   xora([Y,0])                     # Invert value from memory
              0009 ca00  st   [y,$00]     525   st([Y,0])                       # Test RAM by writing the new value
              000a c200  st   [$00]       526   st([0])                         # Copy result in [0]
              000b 6900  xora [y,$00]     527   xora([Y,0])                     # Read back and compare if written ok
              000c ec0c  bne  $000c       528   bne(pc())                       # Loop forever on RAM failure here
              000d 00ff  ld   $ff         529   ld(255)
              000e 6900  xora [y,$00]     530   xora([Y,0])                     # Invert memory value again
              000f ca00  st   [y,$00]     531   st([Y,0])                       # To restore original value
              0010 6100  xora [$00]       532   xora([0])                       # Compare with inverted copy
              0011 f015  beq  .countMem1  533   beq('.countMem1')               # If equal, we wrapped around
              0012 0101  ld   [$01]       534   ld([memSize])
              0013 fc06  bra  .countMem0  535   bra('.countMem0')               # Loop to test next address line
              0014 8200  adda ac          536   adda(AC)                        # Executes in the branch delay slot!
                                          537   label('.countMem1')
                                          538
                                          539   # Momentarily wait to allow for debouncing of the reset switch by spinning
                                          540   # roughly 2^15 times at 2 clocks per loop: 6.5ms@10MHz to 10ms@6.3MHz
                                          541   # Real-world switches normally bounce shorter than that.
                                          542   # "[...] 16 switches exhibited an average 1557 usec of bouncing, with,
                                          543   #  as I said, a max of 6200 usec" (From: http://www.ganssle.com/debouncing.htm)
                                          544   # Relevant for the breadboard version, as the kit doesn't have a reset switch.
                                          545
.countMem1:   0015 00ff  ld   $ff         546   ld(255)                         # Debounce reset button
                                          547   label('.debounce')
.debounce:    0016 c200  st   [$00]       548   st([0])
              0017 ec17  bne  $0017       549   bne(pc())
              0018 a001  suba $01         550   suba(1)                         # Branch delay slot
              0019 0100  ld   [$00]       551   ld([0])
              001a ec16  bne  .debounce   552   bne('.debounce')
              001b a001  suba $01         553   suba(1)                         # Branch delay slot
                                          554
                                          555   # Update LEDs (memory is present and counted, reset is stable)
              001c 0001  ld   $01         556   ld(0b0001)                      # LEDs |*OOO|
              001d 1880  ld   $80,out     557   ld(syncBits^hSync,OUT)
              001e 18c0  ld   $c0,out     558   ld(syncBits,OUT)
                                          559
                                          560   # Scan the entire RAM space to collect entropy for a random number generator.
                                          561   # The 16-bit address space is scanned, even if less RAM was detected.
              001f 0000  ld   $00         562   ld(0)                           # Collect entropy from RAM
              0020 d218  st   [$18],x     563   st([vAC+0],X)
              0021 d619  st   [$19],y     564   st([vAC+1],Y)
                                          565   label('.initEnt0')
.initEnt0:    0022 0106  ld   [$06]       566   ld([entropy+0])
              0023 f426  bge  .initEnt1   567   bpl('.initEnt1')
              0024 8d00  adda [y,x]       568   adda([Y,X])
              0025 60bf  xora $bf         569   xora(191)
                                          570   label('.initEnt1')
.initEnt1:    0026 c206  st   [$06]       571   st([entropy+0])
              0027 0107  ld   [$07]       572   ld([entropy+1])
              0028 f42b  bge  .initEnt2   573   bpl('.initEnt2')
              0029 8106  adda [$06]       574   adda([entropy+0])
              002a 60c1  xora $c1         575   xora(193)
                                          576   label('.initEnt2')
.initEnt2:    002b c207  st   [$07]       577   st([entropy+1])
              002c 8108  adda [$08]       578   adda([entropy+2])
              002d c208  st   [$08]       579   st([entropy+2])
              002e 0118  ld   [$18]       580   ld([vAC+0])
              002f 8001  adda $01         581   adda(1)
              0030 ec22  bne  .initEnt0   582   bne('.initEnt0')
              0031 d218  st   [$18],x     583   st([vAC+0],X)
              0032 0119  ld   [$19]       584   ld([vAC+1])
              0033 8001  adda $01         585   adda(1)
              0034 ec22  bne  .initEnt0   586   bne('.initEnt0')
              0035 d619  st   [$19],y     587   st([vAC+1],Y)
                                          588
                                          589   # Update LEDs
              0036 0003  ld   $03         590   ld(0b0011)                      # LEDs |**OO|
              0037 1880  ld   $80,out     591   ld(syncBits^hSync,OUT)
              0038 18c0  ld   $c0,out     592   ld(syncBits,OUT)
                                          593
                                          594   # vCPU reset handler
              0039 00ee  ld   $ee         595   ld((vReset&255)-2)              # Setup vCPU reset handler
              003a c216  st   [$16]       596   st([vPC])
              003b 9002  adda $02,x       597   adda(2,X)
              003c 0001  ld   $01         598   ld(vReset>>8)
              003d d617  st   [$17],y     599   st([vPC+1],Y)
              003e dc59  st   $59,[y,x++] 600   st('LDI',             [Y,Xpp])
              003f dc5f  st   $5f,[y,x++] 601   st('SYS_Reset_88',    [Y,Xpp])
              0040 dc2b  st   $2b,[y,x++] 602   st('STW',             [Y,Xpp])
              0041 dc22  st   $22,[y,x++] 603   st(sysFn,             [Y,Xpp])
              0042 dcb4  st   $b4,[y,x++] 604   st('SYS',             [Y,Xpp])  # SYS -> SYS_Reset_88 -> SYS_Exec_88
              0043 dce3  st   $e3,[y,x++] 605   st(256-88//2+maxTicks,[Y,Xpp])
              0044 dc00  st   $00,[y,x++] 606   st(0,                 [Y,Xpp])  # vIRQ_v5: Disable interrupts
              0045 dc00  st   $00,[y,x++] 607   st(0,                 [Y,Xpp])  # vIRQ_v5
              0046 dcfc  st   $fc,[y,x++] 608   st(0b11111100,        [Y,Xpp])  # Control register
              0047 dc00  st   $00,[y,x++] 609   st(0,                 [Y,Xpp])  # videoTop
                                          610
              0048 0002  ld   $02         611   ld(hi('ENTER'))                 # Active interpreter (vCPU,v6502) = vCPU
              0049 c202  st   [$02]       612   st([vCpuSelect])
                                          613
              004a 00ff  ld   $ff         614   ld(255)                         # Setup serial input
              004b c20e  st   [$0e]       615   st([frameCount])
              004c c20f  st   [$0f]       616   st([serialRaw])
              004d c210  st   [$10]       617   st([serialLast])
              004e c211  st   [$11]       618   st([buttonState])
              004f c212  st   [$12]       619   st([resetTimer])                # resetTimer<0 when entering Main.gcl
                                          620
              0050 0007  ld   $07         621   ld(0b0111)                      # LEDs |***O|
              0051 1880  ld   $80,out     622   ld(syncBits^hSync,OUT)
              0052 18c0  ld   $c0,out     623   ld(syncBits,OUT)
                                          624
              0053 0000  ld   $00         625   ld(0)
              0054 c200  st   [$00]       626   st([0])                         # Carry lookup ([0x80] in 1st line of vBlank)
              0055 c205  st   [$05]       627   st([channel])
              0056 c22c  st   [$2c]       628   st([soundTimer])
                                          629
              0057 000f  ld   $0f         630   ld(0b1111)                      # LEDs |****|
              0058 1880  ld   $80,out     631   ld(syncBits^hSync,OUT)
              0059 18c0  ld   $c0,out     632   ld(syncBits,OUT)
              005a c213  st   [$13]       633   st([xout])                      # Setup for control by video loop
              005b c214  st   [$14]       634   st([xoutMask])
                                          635
              005c 1401  ld   $01,y       636   ld(hi('startVideo'),Y)          # Enter video loop at vertical blank
              005d e003  jmp  y,$03       637   jmp(Y,'startVideo')
              005e c22e  st   [$2e]       638   st([ledState_v2])               # Setting to 1..126 means "stopped"
                                          639
                                          640   #-----------------------------------------------------------------------
                                          641   # Extension SYS_Reset_88: Soft reset
                                          642   #-----------------------------------------------------------------------
                                          643
                                          644   # SYS_Reset_88 initiates an immediate Gigatron reset from within the vCPU.
                                          645   # The reset sequence itself is mostly implemented in GCL by Reset.gcl,
                                          646   # which must first be loaded into RAM. But as that takes more than 1 scanline,
                                          647   # some vCPU bootstrapping code gets loaded with SYS_Exec_88.
                                          648   # !!! This function was REMOVED from interface.json
                                          649   # !!! Better use vReset as generic entry point for soft reset
                                          650
                                          651   # ROM type (see also Docs/GT1-files.txt)
                                          652   romTypeValue = symbol('romTypeValue_ROMvX0')
                                          653
                                          654   label('SYS_Reset_88')
                                          655   assert pc()>>8 == 0
                                          656   assert (romTypeValue & 7) == 0
SYS_Reset_88: 005f 141f  ld   $1f,y       657   ld(hi('sys_Reset_88'),Y)        #15
              0060 e041  jmp  y,$41       658   jmp(Y,'sys_Reset_88')           #16
              0061 0080  ld   $80         659   ld(romTypeValue)                #17 Set ROM type/version and clear channel mask
                                          660
                                          661
                                          662   # STPX implementation
                                          663   label('stpx#13')
stpx#13:      0062 0500  ld   [x]         664   ld([X])                         #13,
              0063 c21d  st   [$1d]       665   st([vTmp])                      #14,
              0064 de00  st   [y,x++]     666   st([Y,Xpp])                     #15, relies on being in page 0!
              0065 0500  ld   [x]         667   ld([X])                         #16, y
              0066 8500  adda [x]         668   adda([X])                       #17, y*2
              0067 1200  ld   ac,x        669   ld(AC,X)                        #18,
              0068 1401  ld   $01,y       670   ld(1,Y)                         #19, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              0069 0d00  ld   [y,x]       671   ld([Y,X])                       #20,
              006a 1600  ld   ac,y        672   ld(AC,Y)                        #21, Y = [Y,X]
              006b 112b  ld   [$2b],x     673   ld([sysArgs+7],X)               #22,
              006c 0500  ld   [x]         674   ld([X])                         #23, colour
              006d 111d  ld   [$1d],x     675   ld([vTmp],X)                    #24,
              006e ce00  st   [y,x]       676   st([Y,X])                       #25, [Y,X] = colour
              006f 1403  ld   $03,y       677   ld(hi('NEXTY'),Y)               #26,
              0070 e000  jmp  y,$00       678   jmp(Y,'NEXTY')                  #27,
              0071 00f1  ld   $f1         679   ld(-30/2)                       #28,
                                          680
                                          681
              0072 0200  nop              682   align(0x80, size=0x80)
              0073 0200  nop
              0074 0200  nop
              * 14 times
                                          683   assert pc() == 0x80
                                          684
                                          685
                                          686   # ADDW moved to page0 to free up room for more instruction slots in page3
                                          687   # This implemetation of ADDW relies on Y=0 and hence cannot be dispatched from any other page
                                          688   label('addw#13')
addw#13:      0080 0118  ld   [$18]       689   ld([vAC])                       #13 Low byte
              0081 c21d  st   [$1d]       690   st([vTmp])                      #14 Store low result
              0082 8500  adda [x]         691   adda([X])                       #15
              0083 c218  st   [$18]       692   st([vAC])                       #16
              0084 e88f  blt  .addw#19    693   bmi('.addw#19')                 #17 Now figure out if there was a carry
              0085 0500  ld   [x]         694   ld([X])                         #18
              0086 de00  st   [y,x++]     695   st([Y,Xpp])                     #29
              0087 411d  ora  [$1d]       696   ora([vTmp])                     #20
              0088 e898  blt  .addw#23    697   bmi('.addw#23')                 #21 If Carry == 1
              0089 0500  ld   [x]         698   ld([X])                         #22
              008a 8119  adda [$19]       699   adda([vAC+1])                   #23
              008b c219  st   [$19]       700   st([vAC+1])                     #24 Store high result
              008c 1403  ld   $03,y       701   ld(hi('REENTER'),Y)             #25
              008d e0cb  jmp  y,$cb       702   jmp(Y,'REENTER')                #26
              008e 00f1  ld   $f1         703   ld(-30/2)                       #27
                                          704   label('.addw#19')
.addw#19:     008f de00  st   [y,x++]     705   st([Y,Xpp])                     #19
              0090 211d  anda [$1d]       706   anda([vTmp])                    #20
              0091 e898  blt  .addw#23    707   bmi('.addw#23')                 #21 If Carry == 1
              0092 0500  ld   [x]         708   ld([X])                         #22
              0093 8119  adda [$19]       709   adda([vAC+1])                   #23
              0094 c219  st   [$19]       710   st([vAC+1])                     #24 Store high result
              0095 1403  ld   $03,y       711   ld(hi('REENTER'),Y)             #25
              0096 e0cb  jmp  y,$cb       712   jmp(Y,'REENTER')                #26
              0097 00f1  ld   $f1         713   ld(-30/2)                       #27
                                          714   label('.addw#23')
.addw#23:     0098 8001  adda $01         715   adda(1)                         #23
              0099 8119  adda [$19]       716   adda([vAC+1])                   #24
              009a c219  st   [$19]       717   st([vAC+1])                     #25 Store high result
              009b 1403  ld   $03,y       718   ld(hi('NEXTY'),Y)               #26
              009c e000  jmp  y,$00       719   jmp(Y,'NEXTY')                  #27
              009d 00f1  ld   $f1         720   ld(-30/2)                       #28
                                          721
                                          722
                                          723   #-----------------------------------------------------------------------
                                          724   # Placeholders for future SYS functions. This works as a kind of jump
                                          725   # table. The indirection allows SYS implementations to be moved around
                                          726   # between ROM versions, at the expense of 2 clock cycles (or 1). When
                                          727   # the function is not present it just acts as a NOP. Of course, when a
                                          728   # SYS function must be patched or extended it needs to have budget for
                                          729   # that in its declared maximum cycle count.
                                          730   #
                                          731   # Technically the same goal can be achieved by starting each function
                                          732   # with 2 nop's, or by overdeclaring their duration in the first place
                                          733   # (a bit is still wise to do). But this can result in fragmentation
                                          734   # of future ROM images. The indirection avoids that.
                                          735   #
                                          736   # An added advantage of having these in ROM page 0 is that it saves one
                                          737   # byte when setting sysFn: LDI+STW (4 bytes) instead of LDWI+STW (5 bytes)
                                          738   #-----------------------------------------------------------------------
                                          739
                                          740   label('SYS_Multiply_s16_vX_66')
SYS_Multiply_s16_vX_66:
              009e 1419  ld   $19,y       741   ld(hi('sys_Multiply_s16'),Y)    #15 slot 0x9e
              009f e000  jmp  y,$00       742   jmp(Y,'sys_Multiply_s16')       #16
              00a0 012a  ld   [$2a]       743   ld([sysArgs+6])                 #17 load mask.lo
                                          744
                                          745   label('SYS_Divide_s16_vX_80')
SYS_Divide_s16_vX_80:
              00a1 1419  ld   $19,y       746   ld(hi('sys_Divide_s16'),Y)      #15 slot 0xa1
              00a2 e038  jmp  y,$38       747   jmp(Y,'sys_Divide_s16')         #16
              00a3 0128  ld   [$28]       748   ld([sysArgs+4])                 #17
                                          749
                                          750   label('SYS_DrawLine_vX_86')
SYS_DrawLine_vX_86:
              00a4 1419  ld   $19,y       751   ld(hi('sys_DrawLine'),Y)        #15 slot 0xa4
              00a5 e07f  jmp  y,$7f       752   jmp(Y,'sys_DrawLine')           #16
              00a6 01a3  ld   [$a3]       753   ld([0xA3])                      #17 fgcolour
                                          754
              00a7 1403  ld   $03,y       755   ld(hi('REENTER'),Y)             #15 slot 0xa7
              00a8 e0cb  jmp  y,$cb       756   jmp(Y,'REENTER')                #16
              00a9 00f6  ld   $f6         757   ld(-20/2)                       #17
                                          758
                                          759   label('SYS_WaitVBlank_vX_28')
SYS_WaitVBlank_vX_28:
              00aa 141a  ld   $1a,y       760   ld(hi('sys_WaitVBlank'),Y)      #15 slot 0xaa
              00ab e000  jmp  y,$00       761   jmp(Y,'sys_WaitVBlank')         #16
              00ac 0109  ld   [$09]       762   ld([videoY])                    #17 scanline Y
                                          763
                                          764   #-----------------------------------------------------------------------
                                          765   # Extension SYS_Exec_88: Load code from ROM into memory and execute it
                                          766   #-----------------------------------------------------------------------
                                          767   #
                                          768   # This loads the vCPU code with consideration of the current vSP
                                          769   # Used during reset, but also for switching between applications or for
                                          770   # loading data from ROM from within an application (overlays).
                                          771   #
                                          772   # ROM stream format is [<addrH> <addrL> <n&255> n*<byte>]* 0
                                          773   # on top of lookup tables.
                                          774   #
                                          775   # Variables:
                                          776   #       sysArgs[0:1]    ROM pointer (in)
                                          777   #       sysArgs[2:3]    RAM pointer (changed)
                                          778   #       sysArgs[4]      State counter (changed)
                                          779   #       vLR             vCPU continues here (in)
                                          780
                                          781   label('SYS_Exec_88')
SYS_Exec_88:  00ad 1412  ld   $12,y       782   ld(hi('sys_Exec'),Y)            #15 slot 0xad
              00ae e04f  jmp  y,$4f       783   jmp(Y,'sys_Exec')               #16
              00af 0000  ld   $00         784   ld(0)                           #17 Address of loader on zero page
                                          785
              00b0 1403  ld   $03,y       786   ld(hi('REENTER'),Y)             #15 slot 0xb0
              00b1 e0cb  jmp  y,$cb       787   jmp(Y,'REENTER')                #16
              00b2 00f6  ld   $f6         788   ld(-20/2)                       #17
                                          789
              00b3 1403  ld   $03,y       790   ld(hi('REENTER'),Y)             #15 slot 0xb3
              00b4 e0cb  jmp  y,$cb       791   jmp(Y,'REENTER')                #16
              00b5 00f6  ld   $f6         792   ld(-20/2)                       #17
                                          793
                                          794   label('SYS_SpritePattern_vX_134')
SYS_SpritePattern_vX_134:
              00b6 141e  ld   $1e,y       795   ld(hi('sys_SpritePattern'),Y)   #15 slot 0xb6
              00b7 e000  jmp  y,$00       796   jmp(Y,'sys_SpritePattern')      #16
              00b8 1124  ld   [$24],x     797   ld([sysArgs+0],X)               #17 src.lo
                                          798
                                          799   label('SYS_SortUint8Array_vX_52')
SYS_SortUint8Array_vX_52:
              00b9 141a  ld   $1a,y       800   ld(hi('sys_SortUint8Array'),Y)  #15 slot 0xb9
              00ba e00b  jmp  y,$0b       801   jmp(Y,'sys_SortUint8Array')     #16
              00bb 1525  ld   [$25],y     802   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          803
                                          804   label('SYS_SortSprites_vX_62')
SYS_SortSprites_vX_62:
              00bc 141c  ld   $1c,y       805   ld(hi('sys_SortSprites'),Y)     #15 slot 0xbc
              00bd e000  jmp  y,$00       806   jmp(Y,'sys_SortSprites')        #16
              00be 1525  ld   [$25],y     807   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          808
                                          809   label('SYS_SortViaIndices_vX_44')
SYS_SortViaIndices_vX_44:
              00bf 141a  ld   $1a,y       810   ld(hi('sys_SortViaIndices'),Y)  #15 slot 0xbf
              00c0 e052  jmp  y,$52       811   jmp(Y,'sys_SortViaIndices')     #16
              00c1 1525  ld   [$25],y     812   ld([sysArgs+1],Y)               #17 src pointer
                                          813
                                          814   label('SYS_MemCopyByte_vX_40')
SYS_MemCopyByte_vX_40:
              00c2 141b  ld   $1b,y       815   ld(hi('sys_MemCopyByte'),Y)     #15 slot 0xc2
              00c3 e000  jmp  y,$00       816   jmp(Y,'sys_MemCopyByte')        #16
              00c4 1525  ld   [$25],y     817   ld([sysArgs+1],Y)               #17 src pointer
                                          818
                                          819   label('SYS_MemCopyWord_vX_48')
SYS_MemCopyWord_vX_48:
              00c5 141b  ld   $1b,y       820   ld(hi('sys_MemCopyWord'),Y)     #15 slot 0xc5
              00c6 e018  jmp  y,$18       821   jmp(Y,'sys_MemCopyWord')        #16
              00c7 1525  ld   [$25],y     822   ld([sysArgs+1],Y)               #17 src pointer
                                          823
                                          824   label('SYS_MemCopyDWord_vX_58')
SYS_MemCopyDWord_vX_58:
              00c8 141b  ld   $1b,y       825   ld(hi('sys_MemCopyDWord'),Y)    #15 slot 0xc8
              00c9 e037  jmp  y,$37       826   jmp(Y,'sys_MemCopyDWord')       #16
              00ca 1525  ld   [$25],y     827   ld([sysArgs+1],Y)               #17 src pointer
                                          828
                                          829   label('SYS_DrawVLine_vX_66')
SYS_DrawVLine_vX_66:
              00cb 141d  ld   $1d,y       830   ld(hi('sys_DrawVLine'),Y)       #15 slot 0xcb
              00cc e085  jmp  y,$85       831   jmp(Y,'sys_DrawVLine')          #16
              00cd 1527  ld   [$27],y     832   ld([sysArgs+3],Y)               #17
                                          833
                                          834   label('SYS_DrawSprite_vX_132')
SYS_DrawSprite_vX_132:
              00ce 141d  ld   $1d,y       835   ld(hi('sys_DrawSprite'),Y)      #15 slot 0xce
              00cf e000  jmp  y,$00       836   jmp(Y,'sys_DrawSprite')         #16
              00d0 1182  ld   [$82],x     837   ld([0x82],X)                    #17 spriteX
                                          838
                                          839   label('SYS_DrawBullet_vX_140')
SYS_DrawBullet_vX_140:
              00d1 141e  ld   $1e,y       840   ld(hi('sys_DrawBullet'),Y)      #15 slot 0xd1
              00d2 e076  jmp  y,$76       841   jmp(Y,'sys_DrawBullet')         #16
              00d3 1182  ld   [$82],x     842   ld([0x82],X)                    #17, bulletX
                                          843
                                          844   label('SYS_CmpByteBounds_vX_54')
SYS_CmpByteBounds_vX_54:
              00d4 141f  ld   $1f,y       845   ld(hi('sys_CmpByteBounds'),Y)   #15 slot 0xd4
              00d5 e000  jmp  y,$00       846   jmp(Y,'sys_CmpByteBounds')      #16
              00d6 01bf  ld   [$bf]       847   ld([0xBF])                      #17 count
                                          848
                                          849   label('SYS_Divide_u168_vX_56')
SYS_Divide_u168_vX_56:
              00d7 141f  ld   $1f,y       850   ld(hi('sys_Divide_u168'),Y)     #15 slot 0xd7
              00d8 e05f  jmp  y,$5f       851   jmp(Y,'sys_Divide_u168')        #16
              00d9 0125  ld   [$25]       852   ld([sysArgs+1])                 #17
                                          853
                                          854   label('SYS_ReadPixel_vX_32')
SYS_ReadPixel_vX_32:
              00da 141b  ld   $1b,y       855   ld(hi('sys_ReadPixel'),Y)       #15 slot 0xda
              00db e060  jmp  y,$60       856   jmp(Y,'sys_ReadPixel')          #16
              00dc 0119  ld   [$19]       857   ld([vAC+1])                     #17 y
                                          858
                                          859   label('SYS_DrawPixel_vX_30')
SYS_DrawPixel_vX_30:
              00dd 141b  ld   $1b,y       860   ld(hi('sys_DrawPixel'),Y)       #15 slot 0xdd
              00de e06d  jmp  y,$6d       861   jmp(Y,'sys_DrawPixel')          #16
              00df 0125  ld   [$25]       862   ld([sysArgs+1])                 #17 y
                                          863
              00e0 1403  ld   $03,y       864   ld(hi('REENTER'),Y)             #15 slot 0xe0
              00e1 e0cb  jmp  y,$cb       865   jmp(Y,'REENTER')                #16
              00e2 00f6  ld   $f6         866   ld(-20/2)                       #17
                                          867
                                          868   #-----------------------------------------------------------------------
                                          869   # Extension SYS_ScanMemoryExt_vX_50
                                          870   #-----------------------------------------------------------------------
                                          871
                                          872   # SYS function for searching a byte in a 0 to 256 bytes string located
                                          873   # in a different bank. Doesn't cross page boundaries. Returns a
                                          874   # pointer to the target if found or zero. Temporarily deselects SPI
                                          875   # devices.
                                          876   #
                                          877   # sysArgs[0:1]            Start address
                                          878   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          879   # vACL                    Length of the string (0 means 256)
                                          880   # vACH                    Bit 6 and 7 contain the bank number
                                          881
                                          882   label('SYS_ScanMemoryExt_vX_50')
SYS_ScanMemoryExt_vX_50:
              00e3 1430  ld   $30,y       883   ld(hi('sys_ScanMemoryExt'),Y)   #15 slot 0xe3
              00e4 e027  jmp  y,$27       884   jmp(Y,'sys_ScanMemoryExt')      #16
              00e5 0119  ld   [$19]       885   ld([vAC+1])                     #17
                                          886
                                          887
                                          888   #-----------------------------------------------------------------------
                                          889   # Extension SYS_ScanMemory_vX_50
                                          890   #-----------------------------------------------------------------------
                                          891
                                          892   # SYS function for searching a byte in a 0 to 256 bytes string.
                                          893   # Returns a pointer to the target if found or zero.  Doesn't cross
                                          894   # page boundaries.
                                          895
                                          896   #
                                          897   # sysArgs[0:1]            Start address
                                          898   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          899   # vACL                    Length of the string (0 means 256)
                                          900
                                          901   label('SYS_ScanMemory_vX_50')
SYS_ScanMemory_vX_50:
              00e6 1430  ld   $30,y       902   ld(hi('sys_ScanMemory'),Y)      #15 slot 0xe6
              00e7 e000  jmp  y,$00       903   jmp(Y,'sys_ScanMemory')         #16
              00e8 1525  ld   [$25],y     904   ld([sysArgs+1],Y)               #17
                                          905
                                          906   #-----------------------------------------------------------------------
                                          907   # Extension SYS_CopyMemory_vX_80
                                          908   #-----------------------------------------------------------------------
                                          909
                                          910   # SYS function for copying 1..256 bytes
                                          911   #
                                          912   # sysArgs[0:1]    Destination address
                                          913   # sysArgs[2:3]    Source address
                                          914   # vAC[0]          Count (0 means 256)
                                          915   #
                                          916   # Doesn't cross page boundaries.
                                          917   # Overwrites sysArgs[4:7] and vLR.
                                          918
                                          919   label('SYS_CopyMemory_vX_80')
SYS_CopyMemory_vX_80:
              00e9 142f  ld   $2f,y       920   ld(hi('sys_CopyMemory'),Y)       # 15 slot 0xe9
              00ea e000  jmp  y,$00       921   jmp(Y, 'sys_CopyMemory')         # 16
              00eb 0118  ld   [$18]       922   ld([vAC])                        # 17
                                          923
                                          924   #-----------------------------------------------------------------------
                                          925   # Extension SYS_CopyMemoryExt_vX_100
                                          926   #-----------------------------------------------------------------------
                                          927
                                          928   # SYS function for copying 1..256 bytes across banks
                                          929   #
                                          930   # sysArgs[0:1]  Destination address
                                          931   # sysArgs[2:3]  Source address
                                          932   # vAC[0]        Count (0 means 256)
                                          933   # vAC[1]        Bits 7 and 6 contain the destination bank number,
                                          934   #               and bits 5 and 4 the source bank number.
                                          935   #
                                          936   # Doesn't cross page boundaries.
                                          937   # Overwrites sysArgs[4:7], vLR, and vTmp.
                                          938   # Temporarily deselect all SPI devices.
                                          939   # Should not call without expansion board
                                          940
                                          941   label('SYS_CopyMemoryExt_vX_100')
SYS_CopyMemoryExt_vX_100:
              00ec 142f  ld   $2f,y       942   ld(hi('sys_CopyMemoryExt'),Y)    # 15 slot 0xec
              00ed e078  jmp  y,$78       943   jmp(Y, 'sys_CopyMemoryExt')      # 16
              00ee 0119  ld   [$19]       944   ld([vAC+1])                      # 17
                                          945
                                          946   #-----------------------------------------------------------------------
                                          947   # Extension SYS_ReadRomDir_v5_80
                                          948   #-----------------------------------------------------------------------
                                          949
                                          950   # Get next entry from ROM file system. Use vAC=0 to get the first entry.
                                          951
                                          952   # Variables:
                                          953   #       vAC             Start address of current entry (inout)
                                          954   #       sysArgs[0:7]    File name, padded with zeroes (out)
                                          955
                                          956   label('SYS_ReadRomDir_v5_80')
SYS_ReadRomDir_v5_80:
              00ef 14e0  ld   $e0,y       957   ld(hi('sys_ReadRomDir'),Y)      #15
              00f0 e015  jmp  y,$15       958   jmp(Y,'sys_ReadRomDir')         #16
              00f1 0119  ld   [$19]       959   ld([vAC+1])                     #17
                                          960
              00f2 0200  nop              961   fillers(until=symbol('SYS_Out_22') & 255)
              00f3 0200  nop
                                          962
                                          963   #-----------------------------------------------------------------------
                                          964   # Extension SYS_Out_22
                                          965   #-----------------------------------------------------------------------
                                          966
                                          967   # Send byte to output port
                                          968   #
                                          969   # Variables:
                                          970   #       vAC
                                          971
                                          972   label('SYS_Out_22')
SYS_Out_22:   00f4 1924  ld   [$24],out   973   ld([sysArgs+0],OUT)             #15
              00f5 0200  nop              974   nop()                           #16
              00f6 1403  ld   $03,y       975   ld(hi('REENTER'),Y)             #17
              00f7 e0cb  jmp  y,$cb       976   jmp(Y,'REENTER')                #18
              00f8 00f5  ld   $f5         977   ld(-22/2)                       #19
                                          978
                                          979   #-----------------------------------------------------------------------
                                          980   # Extension SYS_In_24
                                          981   #-----------------------------------------------------------------------
                                          982
                                          983   # Read a byte from the input port
                                          984   #
                                          985   # Variables:
                                          986   #       vAC
                                          987
                                          988   label('SYS_In_24')
SYS_In_24:    00f9 c318  st   in,[$18]    989   st(IN, [vAC])                   #15
              00fa 0000  ld   $00         990   ld(0)                           #16
              00fb c219  st   [$19]       991   st([vAC+1])                     #17
              00fc 0200  nop              992   nop()                           #18
              00fd 1403  ld   $03,y       993   ld(hi('REENTER'),Y)             #19
              00fe e0cb  jmp  y,$cb       994   jmp(Y,'REENTER')                #20
              00ff 00f4  ld   $f4         995   ld(-24/2)                       #21
                                          996
                                          997   assert pc()&255 == 0
                                          998
                                          999   #-----------------------------------------------------------------------
                                          1000  #
                                          1001  #  $0100 ROM page 1: Video loop vertical blank
                                          1002  #
                                          1003  #-----------------------------------------------------------------------
                                          1004  align(0x100, size=0x100)
                                          1005
                                          1006  # Video off mode (also no sound, serial, timer, blinkenlights, ...).
                                          1007  # For benchmarking purposes. This still has the overhead for the vTicks
                                          1008  # administration, time slice granularity etc.
                                          1009  label('videoZ')
                                          1010  videoZ = pc()
videoZ:       0100 1502  ld   [$02],y     1011  runVcpu(None, '---- novideo', returnTo=videoZ)
              0101 e0ff  jmp  y,$ff
              0102 007f  ld   $7f
                                          1012
                                          1013  label('startVideo')             # (Re)start of video signal from idle state
startVideo:   0103 00c0  ld   $c0         1014  ld(syncBits)
                                          1015
                                          1016  # Start of vertical blank interval
                                          1017  label('vBlankStart')
vBlankStart:  0104 c21f  st   [$1f]       1018  st([videoSync0])                #32 Start of vertical blank interval
              0105 0080  ld   $80         1019  ld(syncBits^hSync)              #33
              0106 c220  st   [$20]       1020  st([videoSync1])                #34
                                          1021
                                          1022  # Reset line counter before vCPU can see it
              0107 00b3  ld   $b3         1023  ld(videoYline0)                 #35
              0108 c209  st   [$09]       1024  st([videoY])                    #36
                                          1025
                                          1026  # Update frame count and [0x80] (4 cycles)
              0109 0001  ld   $01         1027  ld(1)                           #37 Reinitialize carry lookup, for robustness
              010a c280  st   [$80]       1028  st([0x80])                      #38
              010b 810e  adda [$0e]       1029  adda([frameCount])              #39 Frame counter
              010c c20e  st   [$0e]       1030  st([frameCount])                #40
                                          1031
                                          1032  # Mix entropy (11 cycles)
              010d 6107  xora [$07]       1033  xora([entropy+1])               #41 Mix entropy
              010e 610f  xora [$0f]       1034  xora([serialRaw])               #42 Mix in serial input
              010f 8106  adda [$06]       1035  adda([entropy+0])               #43
              0110 c206  st   [$06]       1036  st([entropy+0])                 #44
              0111 8108  adda [$08]       1037  adda([entropy+2])               #45 Some hidden state
              0112 c208  st   [$08]       1038  st([entropy+2])                 #46
              0113 e816  blt  $0116       1039  bmi(pc()+3)                     #47
              0114 fc17  bra  $0117       1040  bra(pc()+3)                     #48
              0115 6053  xora $53         1041  xora(64+16+2+1)                 #49
              0116 606c  xora $6c         1042  xora(64+32+8+4)                 #49(!)
              0117 8107  adda [$07]       1043  adda([entropy+1])               #50
              0118 c207  st   [$07]       1044  st([entropy+1])                 #51
                                          1045
                                          1046  # LED sequencer (18 cycles)
              0119 012d  ld   [$2d]       1047  ld([ledTimer])                  #52 Blinkenlight sequencer
              011a f01d  beq  $011d       1048  beq(pc()+3)                     #53
              011b fc1e  bra  $011e       1049  bra(pc()+3)                     #54
              011c a001  suba $01         1050  suba(1)                         #55
              011d 012f  ld   [$2f]       1051  ld([ledTempo])                  #55(!)
              011e c22d  st   [$2d]       1052  st([ledTimer])                  #56
              011f f022  beq  $0122       1053  beq(pc()+3)                     #57
              0120 fc23  bra  $0123       1054  bra(pc()+3)                     #58
              0121 0000  ld   $00         1055  ld(0)                           #59 Don't advance state
              0122 0001  ld   $01         1056  ld(1)                           #59(!) Advance state when timer passes through 0
              0123 812e  adda [$2e]       1057  adda([ledState_v2])             #60
              0124 ec27  bne  $0127       1058  bne(pc()+3)                     #61
              0125 fc28  bra  $0128       1059  bra(pc()+3)                     #62
              0126 00e8  ld   $e8         1060  ld(-24)                         #63 State 0 becomes -24, start of sequence
              0127 e42c  bgt  .leds#65    1061  bgt('.leds#65')                 #63(!) Catch the stopped state (>0)
              0128 c22e  st   [$2e]       1062  st([ledState_v2])               #64
              0129 8048  adda $48         1063  adda('.leds#69')                #65
              012a fe00  bra  ac          1064  bra(AC)                         #66 Jump to lookup table
              012b fc48  bra  .leds#69    1065  bra('.leds#69')                 #67 Single-instruction subroutine
                                          1066
                                          1067  label('.leds#65')
.leds#65:     012c 000f  ld   $0f         1068  ld(0x0f)                        #65 Maintain stopped state
              012d c22e  st   [$2e]       1069  st([ledState_v2])               #66
              012e fc48  bra  .leds#69    1070  bra('.leds#69')                 #67
              012f 2114  anda [$14]       1071  anda([xoutMask])                #68 Always clear sound bits (this is why AC=0x0f)
                                          1072
              0130 000f  ld   $0f         1073  ld(0b1111)                      #68 LEDs |****| offset -24 Low 4 bits are the LED output
              0131 0007  ld   $07         1074  ld(0b0111)                      #68 LEDs |***O|
              0132 0003  ld   $03         1075  ld(0b0011)                      #68 LEDs |**OO|
              0133 0001  ld   $01         1076  ld(0b0001)                      #68 LEDs |*OOO|
              0134 0002  ld   $02         1077  ld(0b0010)                      #68 LEDs |O*OO|
              0135 0004  ld   $04         1078  ld(0b0100)                      #68 LEDs |OO*O|
              0136 0008  ld   $08         1079  ld(0b1000)                      #68 LEDs |OOO*|
              0137 0004  ld   $04         1080  ld(0b0100)                      #68 LEDs |OO*O|
              0138 0002  ld   $02         1081  ld(0b0010)                      #68 LEDs |O*OO|
              0139 0001  ld   $01         1082  ld(0b0001)                      #68 LEDs |*OOO|
              013a 0003  ld   $03         1083  ld(0b0011)                      #68 LEDs |**OO|
              013b 0007  ld   $07         1084  ld(0b0111)                      #68 LEDs |***O|
              013c 000f  ld   $0f         1085  ld(0b1111)                      #68 LEDs |****|
              013d 000e  ld   $0e         1086  ld(0b1110)                      #68 LEDs |O***|
              013e 000c  ld   $0c         1087  ld(0b1100)                      #68 LEDs |OO**|
              013f 0008  ld   $08         1088  ld(0b1000)                      #68 LEDs |OOO*|
              0140 0004  ld   $04         1089  ld(0b0100)                      #68 LEDs |OO*O|
              0141 0002  ld   $02         1090  ld(0b0010)                      #68 LEDs |O*OO|
              0142 0001  ld   $01         1091  ld(0b0001)                      #68 LEDs |*OOO|
              0143 0002  ld   $02         1092  ld(0b0010)                      #68 LEDs |O*OO|
              0144 0004  ld   $04         1093  ld(0b0100)                      #68 LEDs |OO*O|
              0145 0008  ld   $08         1094  ld(0b1000)                      #68 LEDs |OOO*|
              0146 000c  ld   $0c         1095  ld(0b1100)                      #68 LEDs |OO**|
              0147 000e  ld   $0e         1096  ld(0b1110)                      #68 LEDs |O***| offset -1
                                          1097  label('.leds#69')
.leds#69:     0148 c214  st   [$14]       1098  st([xoutMask])                  #69 Sound bits will be re-enabled below
              0149 0010  ld   $10         1099  ld(vPulse*2)                    #70 vPulse default length when not modulated
              014a c20d  st   [$0d]       1100  st([videoPulse])                #71
                                          1101
                                          1102  # When the total number of scan lines per frame is not an exact multiple of the
                                          1103  # (4) channels, there will be an audible discontinuity if no measure is taken.
                                          1104  # This static noise can be suppressed by swallowing the first `lines mod 4'
                                          1105  # partial samples after transitioning into vertical blank. This is easiest if
                                          1106  # the modulo is 0 (do nothing), 1 (reset sample when entering the last visible
                                          1107  # scan line), or 2 (reset sample while in the first blank scan line). For the
                                          1108  # last case there is no solution yet: give a warning.
                                          1109  extra = 0
                                          1110  if soundDiscontinuity == 2:
                                          1111    st(sample, [sample])          # Sound continuity
                                          1112    extra += 1
                                          1113  if soundDiscontinuity > 2:
                                          1114    highlight('Warning: sound discontinuity not suppressed')
                                          1115
                                          1116  # vCPU interrupt
              014b 010e  ld   [$0e]       1117  ld([frameCount])                #72
                                          1118  beq('vBlankFirst#75')           #73
              014c f052  beq  vBlankFirst#75
                                          1119
              014d 0055  ld   $55         1120  runVcpu(186-74-extra,           #74 Application cycles (scan line 0)
              014e c21e  st   [$1e]
              014f 1502  ld   [$02],y
              0150 e0ff  jmp  y,$ff
              0151 0022  ld   $22
                                          1121      '---D line 0 no timeout',
                                          1122      returnTo='vBlankFirst#186')
                                          1123
                                          1124  label('vBlankFirst#75')
vBlankFirst#75:
              0152 1412  ld   $12,y       1125  ld(hi('vBlankFirst#78'),Y)      #75
              0153 e000  jmp  y,$00       1126  jmp(Y,'vBlankFirst#78')         #76
              0154 1401  ld   $01,y       1127  ld(hi(vIRQ_v5),Y)               #77
                                          1128  label('vBlankFirst#186')
                                          1129
                                          1130  # Mitigation for rogue channelMask (3 cycles)
vBlankFirst#186:
              0155 0121  ld   [$21]       1131  ld([channelMask])               #186 Normalize channelMask, for robustness
              0156 20fb  anda $fb         1132  anda(0b11111011)                #187
              0157 c221  st   [$21]       1133  st([channelMask])               #188
                                          1134
                                          1135  # Sound on/off (6 cycles)
              0158 012c  ld   [$2c]       1136  ld([soundTimer])                #189 Sound on/off
              0159 ec5c  bne  $015c       1137  bne(pc()+3)                     #190
              015a fc5d  bra  $015d       1138  bra(pc()+3)                     #191
              015b 0000  ld   $00         1139  ld(0)                           #192 Keeps sound unchanged (should be off here)
              015c 00f0  ld   $f0         1140  ld(0xf0)                        #192(!) Turns sound back on
              015d 4114  ora  [$14]       1141  ora([xoutMask])                 #193
              015e c214  st   [$14]       1142  st([xoutMask])                  #194
                                          1143
                                          1144  # Sound timer count down (5 cycles)
              015f 012c  ld   [$2c]       1145  ld([soundTimer])                #195 Sound timer
              0160 f063  beq  $0163       1146  beq(pc()+3)                     #196
              0161 fc64  bra  $0164       1147  bra(pc()+3)                     #197
              0162 a001  suba $01         1148  suba(1)                         #198
              0163 0000  ld   $00         1149  ld(0)                           #198
              0164 c22c  st   [$2c]       1150  st([soundTimer])                #199
                                          1151
              0165 191f  ld   [$1f],out   1152  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1153  label('sound1')
sound1:       0166 0105  ld   [$05]       1154  ld([channel])                   #1 Advance to next sound channel
              0167 2121  anda [$21]       1155  anda([channelMask])             #2
              0168 8001  adda $01         1156  adda(1)                         #3
              0169 1920  ld   [$20],out   1157  ld([videoSync1],OUT)            #4 Start horizontal pulse
              016a d605  st   [$05],y     1158  st([channel],Y)                 #5
              016b 007f  ld   $7f         1159  ld(0x7f)                        #6 Update sound channel
              016c 29fe  anda [y,$fe]     1160  anda([Y,oscL])                  #7
              016d 89fc  adda [y,$fc]     1161  adda([Y,keyL])                  #8
              016e cafe  st   [y,$fe]     1162  st([Y,oscL])                    #9
              016f 3080  anda $80,x       1163  anda(0x80,X)                    #10
              0170 0500  ld   [x]         1164  ld([X])                         #11
              0171 89ff  adda [y,$ff]     1165  adda([Y,oscH])                  #12
              0172 89fd  adda [y,$fd]     1166  adda([Y,keyH])                  #13
              0173 caff  st   [y,$ff]     1167  st([Y,oscH])                    #14
              0174 20fc  anda $fc         1168  anda(0xfc)                      #15
              0175 69fb  xora [y,$fb]     1169  xora([Y,wavX])                  #16
              0176 1200  ld   ac,x        1170  ld(AC,X)                        #17
              0177 09fa  ld   [y,$fa]     1171  ld([Y,wavA])                    #18
              0178 1407  ld   $07,y       1172  ld(soundTable>>8,Y)             #19
              0179 8d00  adda [y,x]       1173  adda([Y,X])                     #20
              017a e87d  blt  $017d       1174  bmi(pc()+3)                     #21
              017b fc7e  bra  $017e       1175  bra(pc()+3)                     #22
              017c 203f  anda $3f         1176  anda(63)                        #23
              017d 003f  ld   $3f         1177  ld(63)                          #23(!)
              017e 8103  adda [$03]       1178  adda([sample])                  #24
              017f c203  st   [$03]       1179  st([sample])                    #25
                                          1180
              0180 0113  ld   [$13]       1181  ld([xout])                      #26 Gets copied to XOUT
              0181 1412  ld   $12,y       1182  ld(hi('vBlankLast#34'),Y)       #27 Prepare jumping out of page in last line
              0182 191f  ld   [$1f],out   1183  ld([videoSync0],OUT)            #28 End horizontal pulse
                                          1184
                                          1185  # Count through the vertical blank interval until its last scan line
              0183 0109  ld   [$09]       1186  ld([videoY])                    #29
                                          1187  bpl('.vBlankLast#32')           #30
              0184 f4b1  bge  .vBlankLast#32
              0185 8002  adda $02         1188  adda(2)                         #31
              0186 c209  st   [$09]       1189  st([videoY])                    #32
                                          1190
                                          1191  # Determine if we're in the vertical sync pulse
              0187 a0bd  suba $bd         1192  suba(1-2*(vBack+vPulse-1))      #33 Prepare sync values
              0188 ec8d  bne  .prepSync36 1193  bne('.prepSync36')              #34 Tests for start of vPulse
              0189 a10d  suba [$0d]       1194  suba([videoPulse])              #35
              018a 0040  ld   $40         1195  ld(syncBits^vSync)              #36 Entering vertical sync pulse
              018b fc92  bra  .prepSync39 1196  bra('.prepSync39')              #37
              018c c21f  st   [$1f]       1197  st([videoSync0])                #38
                                          1198  label('.prepSync36')
.prepSync36:  018d ec91  bne  .prepSync38 1199  bne('.prepSync38')              #36 Tests for end of vPulse
              018e 00c0  ld   $c0         1200  ld(syncBits)                    #37
              018f fc93  bra  .prepSync40 1201  bra('.prepSync40')              #38 Entering vertical back porch
              0190 c21f  st   [$1f]       1202  st([videoSync0])                #39
                                          1203  label('.prepSync38')
.prepSync38:  0191 011f  ld   [$1f]       1204  ld([videoSync0])                #38 Load current value
                                          1205  label('.prepSync39')
.prepSync39:  0192 0200  nop              1206  nop()                           #39
                                          1207  label('.prepSync40')
.prepSync40:  0193 6040  xora $40         1208  xora(hSync)                     #40 Precompute, as during the pulse there is no time
              0194 c220  st   [$20]       1209  st([videoSync1])                #41
                                          1210
                                          1211  # Capture the serial input before the '595 shifts it out
              0195 0109  ld   [$09]       1212  ld([videoY])                    #42 Capture serial input
              0196 60cf  xora $cf         1213  xora(1-2*(vBack-1-1))           #43 Exactly when the 74HC595 has captured all 8 controller bits
              0197 ec9a  bne  $019a       1214  bne(pc()+3)                     #44
              0198 fc9b  bra  $019b       1215  bra(pc()+3)                     #45
              0199 c30f  st   in,[$0f]    1216  st(IN, [serialRaw])             #46
              019a c000  st   $00,[$00]   1217  st(0,[0])                       #46(!) Reinitialize carry lookup, for robustness
                                          1218
                                          1219  # Update [xout] with the next sound sample every 4 scan lines.
                                          1220  # Keep doing this on 'videoC equivalent' scan lines in vertical blank.
              019b 0109  ld   [$09]       1221  ld([videoY])                    #47
              019c 2006  anda $06         1222  anda(6)                         #48
                                          1223  beq('vBlankSample')             #49
              019d f0a6  beq  vBlankSample
              019e 0103  ld   [$03]       1224  ld([sample])                    #50
                                          1225
                                          1226  label('vBlankNormal')
vBlankNormal: 019f 00a4  ld   $a4         1227  runVcpu(199-51, 'AB-D line 1-36')#51 Application cycles (vBlank scan lines without sound sample update)
              01a0 c21e  st   [$1e]
              01a1 1502  ld   [$02],y
              01a2 e0ff  jmp  y,$ff
              01a3 0034  ld   $34
              01a4 fc66  bra  sound1      1228  bra('sound1')                   #199
              01a5 191f  ld   [$1f],out   1229  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1230
                                          1231  label('vBlankSample')
vBlankSample: 01a6 400f  ora  $0f         1232  ora(0x0f)                       #51 New sound sample is ready
              01a7 2114  anda [$14]       1233  anda([xoutMask])                #52
              01a8 c213  st   [$13]       1234  st([xout])                      #53
              01a9 c003  st   $03,[$03]   1235  st(sample, [sample])            #54 Reset for next sample
                                          1236
              01aa 00af  ld   $af         1237  runVcpu(199-55, '--C- line 3-39')#55 Application cycles (vBlank scan lines with sound sample update)
              01ab c21e  st   [$1e]
              01ac 1502  ld   [$02],y
              01ad e0ff  jmp  y,$ff
              01ae 0032  ld   $32
              01af fc66  bra  sound1      1238  bra('sound1')                   #199
              01b0 191f  ld   [$1f],out   1239  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1240
                                          1241  #-----------------------------------------------------------------------
                                          1242
                                          1243  label('.vBlankLast#32')
.vBlankLast#32:
              01b1 e032  jmp  y,$32       1244  jmp(Y,'vBlankLast#34')          #32 Jump out of page for space reasons
                                          1245  #assert hi(controllerType) == hi(pc()) # Assume these share the high address
              01b2 1401  ld   $01,y       1246  ld(hi(pc()),Y)                  #33
                                          1247
                                          1248  label('vBlankLast#52')
                                          1249
                                          1250  # Respond to reset button (14 cycles)
                                          1251  # - ResetTimer decrements as long as just [Start] is pressed down
                                          1252  # - Reaching 0 (normal) or 128 (extended) triggers the soft reset sequence
                                          1253  # - Initial value is 128 (or 255 at boot), first decrement, then check
                                          1254  # - This starts vReset -> SYS_Reset_88 -> SYS_Exec_88 -> Reset.gcl -> Main.gcl
                                          1255  # - Main.gcl then recognizes extended presses if resetTimer is 0..127 ("paasei")
                                          1256  # - This requires a full cycle (4s) in the warm boot scenario
                                          1257  # - Or a half cycle (2s) when pressing [Select] down during hard reset
                                          1258  # - This furthermore requires >=1 frame (and <=128) to have passed between
                                          1259  #   reaching 128 and getting through Reset and the start of Main, while [Start]
                                          1260  #   was still pressed so the count reaches <128. Two reasonable expectations.
                                          1261  # - The unintended power-up scenarios of ROMv1 (pulling SER_DATA low, or
                                          1262  #   pressing [Select] together with another button) now don't trigger anymore.
                                          1263
vBlankLast#52:
              01b3 0111  ld   [$11]       1264  ld([buttonState])               #52 Check [Start] for soft reset
              01b4 60ef  xora $ef         1265  xora(~buttonStart)              #53
              01b5 ecbe  bne  .restart#56 1266  bne('.restart#56')              #54
              01b6 0112  ld   [$12]       1267  ld([resetTimer])                #55 As long as button pressed
              01b7 a001  suba $01         1268  suba(1)                         #56 ... count down the timer
              01b8 c212  st   [$12]       1269  st([resetTimer])                #57
              01b9 207f  anda $7f         1270  anda(127)                       #58
              01ba f0c6  beq  .restart#61 1271  beq('.restart#61')              #59 Reset at 0 (normal 2s) or 128 (extended 4s)
              01bb 00ee  ld   $ee         1272  ld((vReset&255)-2)              #60 Start force reset when hitting 0
              01bc fcc5  bra  .restart#63 1273  bra('.restart#63')              #61 ... otherwise do nothing yet
              01bd fcc4  bra  .restart#64 1274  bra('.restart#64')              #62
                                          1275  label('.restart#56')
.restart#56:  01be 0001  ld   $01         1276  wait(62-56)                     #56
              01bf ecbf  bne  $01bf
              01c0 a001  suba $01
              01c1 0200  nop
              01c2 0080  ld   $80         1277  ld(128)                         #62 Not pressed, reset the timer
              01c3 c212  st   [$12]       1278  st([resetTimer])                #63
                                          1279  label('.restart#64')
.restart#64:  01c4 fccb  bra  .restart#66 1280  bra('.restart#66')              #64
                                          1281  label('.restart#63')
.restart#63:  01c5 0200  nop              1282  nop()                           #63,65
                                          1283  label('.restart#61')
.restart#61:  01c6 c216  st   [$16]       1284  st([vPC])                       #61 Point vPC at vReset
              01c7 0001  ld   $01         1285  ld(vReset>>8)                   #62
              01c8 c217  st   [$17]       1286  st([vPC+1])                     #63
              01c9 0002  ld   $02         1287  ld(hi('ENTER'))                 #64 Set active interpreter to vCPU
              01ca c202  st   [$02]       1288  st([vCpuSelect])                #65
                                          1289  label('.restart#66')
                                          1290
                                          1291  # Switch video mode when (only) select is pressed (16 cycles)
                                          1292  # XXX We could make this a vCPU interrupt
.restart#66:  01cb 0111  ld   [$11]       1293  ld([buttonState])               #66 Check [Select] to switch modes
              01cc 60df  xora $df         1294  xora(~buttonSelect)             #67 Only trigger when just [Select] is pressed
              01cd ece2  bne  .select#70  1295  bne('.select#70')               #68
              01ce 010b  ld   [$0b]       1296  ld([videoModeC])                #69
              01cf e8d5  blt  .select#72  1297  bmi('.select#72')               #70 Branch when line C is off
              01d0 010a  ld   [$0a]       1298  ld([videoModeB])                #71 Rotate: Off->D->B->C
              01d1 c20b  st   [$0b]       1299  st([videoModeC])                #72
              01d2 010c  ld   [$0c]       1300  ld([videoModeD])                #73
              01d3 c20a  st   [$0a]       1301  st([videoModeB])                #74
              01d4 fcda  bra  .select#77  1302  bra('.select#77')               #75
                                          1303  label('.select#72')
.select#72:   01d5 00f6  ld   $f6         1304  ld('nopixels')                  #72,76
              01d6 000a  ld   $0a         1305  ld('pixels')                    #73 Reset: On->D->B->C
              01d7 c20b  st   [$0b]       1306  st([videoModeC])                #74
              01d8 c20a  st   [$0a]       1307  st([videoModeB])                #75
              01d9 0200  nop              1308  nop()                           #76
                                          1309  label('.select#77')
.select#77:   01da c20c  st   [$0c]       1310  st([videoModeD])                #77
              01db 0035  ld   $35         1311  wait(188-78)                    #78 Don't waste code space expanding runVcpu here
              01dc ecdc  bne  $01dc
              01dd a001  suba $01
              01de 0200  nop
                                          1312  # AC==255 now
              01df c211  st   [$11]       1313  st([buttonState])               #188
                                          1314  bra('vBlankEnd#191')            #189
              01e0 fcea  bra  vBlankEnd#191
              01e1 0000  ld   $00         1315  ld(0)                           #190
                                          1316  label('.select#70')
                                          1317
                                          1318  # Mitigation of runaway channel variable
.select#70:   01e2 0105  ld   [$05]       1319  ld([channel])                   #70 Normalize channel, for robustness
              01e3 2003  anda $03         1320  anda(0b00000011)                #71
              01e4 c205  st   [$05]       1321  st([channel])                   #72 Stop wild channel updates
                                          1322
              01e5 00ea  ld   $ea         1323  runVcpu(191-73, '---D line 40') #73 Application cycles (scan line 40)
              01e6 c21e  st   [$1e]
              01e7 1502  ld   [$02],y
              01e8 e0ff  jmp  y,$ff
              01e9 0025  ld   $25
                                          1324
                                          1325  # AC==0 now
                                          1326  label('vBlankEnd#191')
vBlankEnd#191:
              01ea 1401  ld   $01,y       1327  ld(videoTop_v5>>8,Y)            #191
              01eb 09f9  ld   [y,$f9]     1328  ld([Y,videoTop_v5])             #192
              01ec c209  st   [$09]       1329  st([videoY])                    #193
              01ed c21f  st   [$1f]       1330  st([frameX])                    #194
              01ee ecf1  bne  $01f1       1331  bne(pc()+3)                     #195
              01ef fcf2  bra  $01f2       1332  bra(pc()+3)                     #196
              01f0 0001  ld   $01         1333  ld('videoA')                    #197
              01f1 00ec  ld   $ec         1334  ld('videoF')                    #197(!)
              01f2 c20d  st   [$0d]       1335  st([nextVideo])                 #198
              01f3 0105  ld   [$05]       1336  ld([channel])                   #199 Advance to next sound channel
              01f4 2121  anda [$21]       1337  anda([channelMask])             #0 <New scan line start>
              01f5 8001  adda $01         1338  adda(1)                         #1
              01f6 1402  ld   $02,y       1339  ld(hi('sound2'),Y)              #2
              01f7 e0b1  jmp  y,$b1       1340  jmp(Y,'sound2')                 #3
              01f8 1880  ld   $80,out     1341  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1342
              01f9 0200  nop              1343  fillers(until=0xff)
              01fa 0200  nop
              01fb 0200  nop
              * 6 times
                                          1344
                                          1345  #-----------------------------------------------------------------------
                                          1346  # Return point for vCPU slices during visible screen area
                                          1347  #-----------------------------------------------------------------------
                                          1348
                                          1349  assert pc() == 0x1ff            # Enables runVcpu() to re-enter into the next page
              01ff fcae  bra  sound3      1350  bra('sound3')                   #200,0 <New scan line start>
                                          1351
                                          1352  #-----------------------------------------------------------------------
                                          1353  #
                                          1354  #  $0200 ROM page 2: Video loop visible scanlines
                                          1355  #
                                          1356  #-----------------------------------------------------------------------
                                          1357  align(0x100, size=0x100)
              0200 0105  ld   [$05]       1358  ld([channel])                   #1 Advance to next sound channel
                                          1359
                                          1360  # Back porch A: first of 4 repeated scan lines
                                          1361  # - Fetch next Yi and store it for retrieval in the next scan lines
                                          1362  # - Calculate Xi from dXi, but there is no cycle time left to store it as well
                                          1363  label('videoA')
videoA:       0201 00ca  ld   $ca         1364  ld('videoB')                    #29 1st scanline of 4 (always visible)
              0202 c20d  st   [$0d]       1365  st([nextVideo])                 #30
              0203 1401  ld   $01,y       1366  ld(videoTable>>8,Y)             #31
              0204 1109  ld   [$09],x     1367  ld([videoY],X)                  #32
              0205 0d00  ld   [y,x]       1368  ld([Y,X])                       #33
              0206 de00  st   [y,x++]     1369  st([Y,Xpp])                     #34 Just X++
              0207 c220  st   [$20]       1370  st([frameY])                    #35
              0208 0d00  ld   [y,x]       1371  ld([Y,X])                       #36
              0209 911f  adda [$1f],x     1372  adda([frameX],X)                #37
                                          1373  label('pixels')
pixels:       020a 1520  ld   [$20],y     1374  ld([frameY],Y)                  #38
              020b 00c0  ld   $c0         1375  ld(syncBits)                    #39
                                          1376
                                          1377  # Stream 160 pixels from memory location <Yi,Xi> onwards
                                          1378  # Superimpose the sync signal bits to be robust against misprogramming
                                          1379  for i in range(qqVgaWidth):
              020c 5d00  ora  [y,x++],out 1380    ora([Y,Xpp],OUT)              #40-199 Pixel burst
              020d 5d00  ora  [y,x++],out
              020e 5d00  ora  [y,x++],out
              * 160 times
              02ac 18c0  ld   $c0,out     1381  ld(syncBits,OUT)                #0 <New scan line start> Back to black
                                          1382
                                          1383  # Front porch
              02ad 0105  ld   [$05]       1384  ld([channel])                   #1 Advance to next sound channel
                                          1385  label('sound3')                 # Return from vCPU interpreter
sound3:       02ae 2121  anda [$21]       1386  anda([channelMask])             #2
              02af 8001  adda $01         1387  adda(1)                         #3
              02b0 1880  ld   $80,out     1388  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1389
                                          1390  # Horizontal sync and sound channel update for scanlines outside vBlank
                                          1391  label('sound2')
sound2:       02b1 d605  st   [$05],y     1392  st([channel],Y)                 #5
              02b2 007f  ld   $7f         1393  ld(0x7f)                        #6
              02b3 29fe  anda [y,$fe]     1394  anda([Y,oscL])                  #7
              02b4 89fc  adda [y,$fc]     1395  adda([Y,keyL])                  #8
              02b5 cafe  st   [y,$fe]     1396  st([Y,oscL])                    #9
              02b6 3080  anda $80,x       1397  anda(0x80,X)                    #10
              02b7 0500  ld   [x]         1398  ld([X])                         #11
              02b8 89ff  adda [y,$ff]     1399  adda([Y,oscH])                  #12
              02b9 89fd  adda [y,$fd]     1400  adda([Y,keyH])                  #13
              02ba caff  st   [y,$ff]     1401  st([Y,oscH] )                   #14
              02bb 20fc  anda $fc         1402  anda(0xfc)                      #15
              02bc 69fb  xora [y,$fb]     1403  xora([Y,wavX])                  #16
              02bd 1200  ld   ac,x        1404  ld(AC,X)                        #17
              02be 09fa  ld   [y,$fa]     1405  ld([Y,wavA])                    #18
              02bf 1407  ld   $07,y       1406  ld(soundTable>>8,Y)             #19
              02c0 8d00  adda [y,x]       1407  adda([Y,X])                     #20
              02c1 e8c4  blt  $02c4       1408  bmi(pc()+3)                     #21
              02c2 fcc5  bra  $02c5       1409  bra(pc()+3)                     #22
              02c3 203f  anda $3f         1410  anda(63)                        #23
              02c4 003f  ld   $3f         1411  ld(63)                          #23(!)
              02c5 8103  adda [$03]       1412  adda([sample])                  #24
              02c6 c203  st   [$03]       1413  st([sample])                    #25
                                          1414
              02c7 0113  ld   [$13]       1415  ld([xout])                      #26 Gets copied to XOUT
              02c8 fd0d  bra  [$0d]       1416  bra([nextVideo])                #27
              02c9 18c0  ld   $c0,out     1417  ld(syncBits,OUT)                #28 End horizontal pulse
                                          1418
                                          1419  # Back porch B: second of 4 repeated scan lines
                                          1420  # - Recompute Xi from dXi and store for retrieval in the next scan lines
                                          1421  label('videoB')
videoB:       02ca 00d3  ld   $d3         1422  ld('videoC')                    #29 2nd scanline of 4
              02cb c20d  st   [$0d]       1423  st([nextVideo])                 #30
              02cc 1401  ld   $01,y       1424  ld(videoTable>>8,Y)             #31
              02cd 0109  ld   [$09]       1425  ld([videoY])                    #32
              02ce 9001  adda $01,x       1426  adda(1,X)                       #33
              02cf 011f  ld   [$1f]       1427  ld([frameX])                    #34
              02d0 8d00  adda [y,x]       1428  adda([Y,X])                     #35
              02d1 fd0a  bra  [$0a]       1429  bra([videoModeB])               #36
              02d2 d21f  st   [$1f],x     1430  st([frameX],X)                  #37 Store in RAM and X
                                          1431
                                          1432  # Back porch C: third of 4 repeated scan lines
                                          1433  # - Nothing new to for video do as Yi and Xi are known,
                                          1434  # - This is the time to emit and reset the next sound sample
                                          1435  label('videoC')
videoC:       02d3 00dc  ld   $dc         1436  ld('videoD')                    #29 3rd scanline of 4
              02d4 c20d  st   [$0d]       1437  st([nextVideo])                 #30
              02d5 0103  ld   [$03]       1438  ld([sample])                    #31 New sound sample is ready (didn't fit in the audio loop)
              02d6 400f  ora  $0f         1439  ora(0x0f)                       #32
              02d7 2114  anda [$14]       1440  anda([xoutMask])                #33
              02d8 c213  st   [$13]       1441  st([xout])                      #34 Update [xout] with new sample (4 channels just updated)
              02d9 c003  st   $03,[$03]   1442  st(sample, [sample])            #35 Reset for next sample
              02da fd0b  bra  [$0b]       1443  bra([videoModeC])               #36
              02db 111f  ld   [$1f],x     1444  ld([frameX],X)                  #37
                                          1445
                                          1446  # Back porch D: last of 4 repeated scan lines
                                          1447  # - Calculate the next frame index
                                          1448  # - Decide if this is the last line or not
                                          1449  label('videoD')                 # Default video mode
videoD:       02dc 111f  ld   [$1f],x     1450  ld([frameX], X)                 #29 4th scanline of 4
              02dd 0109  ld   [$09]       1451  ld([videoY])                    #30
              02de a0ee  suba $ee         1452  suba((120-1)*2)                 #31
                                          1453  beq('.lastpixels#34')           #32
              02df f0e5  beq  .lastpixels#34
              02e0 80f0  adda $f0         1454  adda(120*2)                     #33 More pixel lines to go
              02e1 c209  st   [$09]       1455  st([videoY])                    #34
              02e2 0001  ld   $01         1456  ld('videoA')                    #35
              02e3 fd0c  bra  [$0c]       1457  bra([videoModeD])               #36
              02e4 c20d  st   [$0d]       1458  st([nextVideo])                 #37
                                          1459
                                          1460  label('.lastpixels#34')
                                          1461  if soundDiscontinuity == 1:
.lastpixels#34:
              02e5 c003  st   $03,[$03]   1462    st(sample, [sample])          #34 Sound continuity
                                          1463  else:
                                          1464    nop()                         #34
              02e6 00e9  ld   $e9         1465  ld('videoE')                    #35 No more pixel lines to go
              02e7 fd0c  bra  [$0c]       1466  bra([videoModeD])               #36
              02e8 c20d  st   [$0d]       1467  st([nextVideo])                 #37
                                          1468
                                          1469  # Back porch "E": after the last line
                                          1470  # - Go back and and enter vertical blank (program page 2)
                                          1471  label('videoE') # Exit visible area
videoE:       02e9 1401  ld   $01,y       1472  ld(hi('vBlankStart'),Y)         #29 Return to vertical blank interval
              02ea e004  jmp  y,$04       1473  jmp(Y,'vBlankStart')            #30
              02eb 00c0  ld   $c0         1474  ld(syncBits)                    #31
                                          1475
                                          1476  # Video mode that blacks out one or more pixel lines from the top of screen.
                                          1477  # This yields some speed, but also frees up screen memory for other purposes.
                                          1478  # Note: Sound output becomes choppier the more pixel lines are skipped
                                          1479  # Note: The vertical blank driver leaves 0x80 behind in [videoSync1]
                                          1480  label('videoF')
videoF:       02ec 0120  ld   [$20]       1481  ld([videoSync1])                #29 Completely black pixel line
              02ed 8080  adda $80         1482  adda(0x80)                      #30
              02ee d220  st   [$20],x     1483  st([videoSync1],X)              #31
              02ef 011f  ld   [$1f]       1484  ld([frameX])                    #32
              02f0 a500  suba [x]         1485  suba([X])                       #33 Decrements every two VGA scanlines
              02f1 f0f4  beq  .videoF#36  1486  beq('.videoF#36')               #34
              02f2 c21f  st   [$1f]       1487  st([frameX])                    #35
              02f3 fcf6  bra  nopixels    1488  bra('nopixels')                 #36
                                          1489  label('.videoF#36')
.videoF#36:   02f4 0001  ld   $01         1490  ld('videoA')                    #36,37 Transfer to visible screen area
              02f5 c20d  st   [$0d]       1491  st([nextVideo])                 #37
                                          1492  #
                                          1493  # Alternative for pixel burst: faster application mode
                                          1494  label('nopixels')
nopixels:     02f6 00ff  ld   $ff         1495  runVcpu(200-38, 'ABCD line 40-520',
              02f7 c21e  st   [$1e]
              02f8 1502  ld   [$02],y
              02f9 e0ff  jmp  y,$ff
              02fa 003b  ld   $3b
                                          1496    returnTo=0x1ff)               #38 Application interpreter (black scanlines)
                                          1497
                                          1498  #-----------------------------------------------------------------------
                                          1499  #
                                          1500  #  $0300 ROM page 3: Application interpreter primary page
                                          1501  #
                                          1502  #-----------------------------------------------------------------------
                                          1503
                                          1504  # Enter the timing-aware application interpreter (aka virtual CPU, vCPU)
                                          1505  #
                                          1506  # This routine will execute as many as possible instructions in the
                                          1507  # allotted time. When time runs out, it synchronizes such that the total
                                          1508  # duration matches the caller's request. Durations are counted in `ticks',
                                          1509  # which are multiples of 2 clock cycles.
                                          1510  #
                                          1511  # Synopsis: Use the runVcpu() macro as entry point
                                          1512
                                          1513  # We let 'ENTER' begin one word before the page boundary, for a bit extra
                                          1514  # precious space in the packed interpreter code page. Although ENTER's
                                          1515  # first instruction is bra() which normally doesn't cross page boundaries,
                                          1516  # in this case it will still jump into the right space, because branches
                                          1517  # from $xxFF land in the next page anyway.
                                          1518  while pc()&255 < 255:
              02fb 0200  nop              1519    nop()
              02fc 0200  nop
              02fd 0200  nop
              02fe 0200  nop
                                          1520  label('ENTER')
ENTER:        02ff fc03  bra  .next2      1521  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          1522  # --- Page boundary ---
                                          1523  align(0x100,size=0x100)
                                          1524  label('NEXTY')                  # Alternative for REENTER
NEXTY:        0300 1517  ld   [$17],y     1525  ld([vPC+1],Y)                   #1
                                          1526
                                          1527  # Fetch next instruction and execute it, but only if there are sufficient
                                          1528  # ticks left for the slowest instruction.
                                          1529  label('NEXT')
NEXT:         0301 8115  adda [$15]       1530  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              0302 e80b  blt  EXIT        1531  blt('EXIT')                     #1 Escape near time out
                                          1532  label('.next2')
.next2:       0303 c215  st   [$15]       1533  st([vTicks])                    #2
              0304 0116  ld   [$16]       1534  ld([vPC])                       #3 Advance vPC
              0305 8002  adda $02         1535  adda(2)                         #4
                                          1536  label('.next3')
.next3:       0306 d216  st   [$16],x     1537  st([vPC],X)                     #5
              0307 0d00  ld   [y,x]       1538  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              0308 de00  st   [y,x++]     1539  st([Y,Xpp])                     #7 Just X++
              0309 fe00  bra  ac          1540  bra(AC)                         #8 Dispatch
              030a 0d00  ld   [y,x]       1541  ld([Y,X])                       #9 Prefetch operand
                                          1542
                                          1543  # Resync with video driver and transfer control
                                          1544  label('EXIT')
EXIT:         030b 800f  adda $0f         1545  adda(maxTicks)                  #3
                                          1546  label('RESYNC')
RESYNC:       030c e40c  bgt  RESYNC      1547  bgt(pc()&255)                   #4 Resync
              030d a001  suba $01         1548  suba(1)                         #5
              030e 1401  ld   $01,y       1549  ld(hi('vBlankStart'),Y)         #6
              030f e11e  jmp  y,[$1e]     1550  jmp(Y,[vReturn])                #7 To video driver
              0310 0000  ld   $00         1551  ld(0)                           #8 AC should be 0 already. Still..
                                          1552  assert vCPU_overhead ==          9
                                          1553
                                          1554  # pc = 0x0311, Opcode = 0x11
                                          1555  # Instruction LDWI: Load immediate word constant (vAC=D), 24 cycles
                                          1556  label('LDWI')
LDWI:         0311 1417  ld   $17,y       1557  ld(hi('ldwi#13'),Y)             #10
              0312 e000  jmp  y,$00       1558  jmp(Y,'ldwi#13')                #11
              0313 1517  ld   [$17],y     1559  ld([vPC+1],Y)                   #12
                                          1560
                                          1561  # pc = 0x0314, Opcode = 0x14
                                          1562  # Instruction DEC: Decrement byte var ([D]--), 22 cycles
                                          1563  label('DEC')
DEC:          0314 1416  ld   $16,y       1564  ld(hi('dec#13'),Y)              #10
              0315 e007  jmp  y,$07       1565  jmp(Y,'dec#13')                 #11
                                          1566  # dummy                         #12 Overlap
                                          1567  #
                                          1568  # pc = 0x0316, Opcode = 0x16
                                          1569  # Instruction MOVQB: Load a byte var with a small constant 0..255, 28 cycles
                                          1570  label('MOVQB')
MOVQB:        0316 1416  ld   $16,y       1571  ld(hi('movqb#13'),Y)            #10 #12
              0317 e061  jmp  y,$61       1572  jmp(Y,'movqb#13')               #11
                                          1573  # dummy                         #12 Overlap
                                          1574  #
                                          1575  # pc = 0x0318, Opcode = 0x18
                                          1576  # Instruction LSRB: Logical shift right on a byte var, 28 cycles
                                          1577  label('LSRB')
LSRB:         0318 1416  ld   $16,y       1578  ld(hi('lsrb#13'),Y)             #10 #12
              0319 e07e  jmp  y,$7e       1579  jmp(Y,'lsrb#13')                #11
                                          1580  # dummy                         #12 Overlap
                                          1581  #
                                          1582  # pc = 0x031a, Opcode = 0x1a
                                          1583  # Instruction LD: Load byte from zero page (vAC=[D]), 22 cycles
                                          1584  label('LD')
LD:           031a 1416  ld   $16,y       1585  ld(hi('ld#13'),Y)               #10 #12
              031b e00e  jmp  y,$0e       1586  jmp(Y,'ld#13')                  #11
                                          1587  # dummy                         #12 Overlap
                                          1588  #
                                          1589  # pc = 0x031c, Opcode = 0x1c
                                          1590  # Instruction LOKEQI: Loke immediate unsigned word into address contained in [vAC], 34 cycles
                                          1591  label('LOKEQI')
LOKEQI:       031c 142d  ld   $2d,y       1592  ld(hi('lokeqi#13'),Y)           #10 #12
              031d e0b4  jmp  y,$b4       1593  jmp(Y,'lokeqi#13')              #11
              031e c21d  st   [$1d]       1594  st([vTmp])                      #12 imm.1
                                          1595
                                          1596  # pc = 0x031f, Opcode = 0x1f
                                          1597  # Instruction CMPHS: Adjust high byte for signed compare (vACH=XXX), 28 cycles
                                          1598  label('CMPHS')
CMPHS:        031f 140b  ld   $0b,y       1599  ld(hi('cmphs#13'),Y)            #10
              0320 e0e4  jmp  y,$e4       1600  jmp(Y,'cmphs#13')               #11
                                          1601  # dummy                         #12 Overlap, not dependent on ld(AC,X) anymore
                                          1602  #
                                          1603  # pc = 0x0321, Opcode = 0x21
                                          1604  # Instruction LDW: Load word from zero page (vAC=[D]+256*[D+1]), 24 cycles
                                          1605  label('LDW')
LDW:          0321 1416  ld   $16,y       1606  ld(hi('ldw#13'),Y)              #10 #12
              0322 e0b9  jmp  y,$b9       1607  jmp(Y,'ldw#13')                 #11
                                          1608  # dummy                         #12 Overlap
                                          1609  #
                                          1610  # pc = 0x0323, Opcode = 0x23
                                          1611  # Instruction PEEK+: Peek byte at address contained in var, inc var, 30 cycles
                                          1612  label('PEEK+')
PEEK+:        0323 1404  ld   $04,y       1613  ld(hi('peek+#13'),Y)            #10 #12
              0324 e08f  jmp  y,$8f       1614  jmp(Y,'peek+#13')               #11
                                          1615  # dummy                         #12 Overlap
                                          1616  #
                                          1617  # pc = 0x0325, Opcode = 0x25
                                          1618  # Instruction POKEI: Poke immediate byte into address contained in [vAC], 20 cycles
                                          1619  label('POKEI')
POKEI:        0325 1417  ld   $17,y       1620  ld(hi('pokei#13'),Y)            #10 #12
              0326 e0d4  jmp  y,$d4       1621  jmp(Y,'pokei#13')               #11
                                          1622  # dummy                         #12 Overlap
                                          1623  #
                                          1624  # pc = 0x0327, Opcode = 0x27
                                          1625  # Instruction LSLV: Logical shift left word var, 28 cycles
                                          1626  label('LSLV')
LSLV:         0327 1416  ld   $16,y       1627  ld(hi('lslv#13'),Y)             #10 #12
              0328 e0a5  jmp  y,$a5       1628  jmp(Y,'lslv#13')                #11
                                          1629  # dummy                         #12 Overlap
                                          1630  #
                                          1631  # pc = 0x0329, Opcode = 0x29
                                          1632  # Instruction ADDBA: vAC += var.lo, 28 cycles
                                          1633  label('ADDBA')
ADDBA:        0329 1417  ld   $17,y       1634  ld(hi('addba#13'),Y)            #10 #12
              032a e090  jmp  y,$90       1635  jmp(Y,'addba#13')               #11
                                          1636  # dummy                         #12 Overlap
                                          1637  #
                                          1638  # pc = 0x032b, Opcode = 0x2b
                                          1639  # Instruction STW: Store word in zero page ([D],[D+1]=vAC&255,vAC>>8), 24 cycles
                                          1640  label('STW')
STW:          032b 1416  ld   $16,y       1641  ld(hi('stw#13'),Y)              #10 #12
              032c e0c3  jmp  y,$c3       1642  jmp(Y,'stw#13')                 #11
                                          1643  # dummy                         #12 Overlap
                                          1644  #
                                          1645  # pc = 0x032d, Opcode = 0x2d
                                          1646  # Instruction ADDBI: Add a constant 0..255 to byte var, 28 cycles
                                          1647  label('ADDBI')
ADDBI:        032d 1416  ld   $16,y       1648  ld(hi('addbi#13'),Y)            #10 #12
              032e e0da  jmp  y,$da       1649  jmp(Y,'addbi#13')               #11
                                          1650  # dummy                         #12 Overlap
                                          1651  #
                                          1652  # pc = 0x032f, Opcode = 0x2f
                                          1653  # Instruction PREFX2
                                          1654  label('PREFX2')
PREFX2:       032f 1414  ld   $14,y       1655  ld(hi('prefx2#13'),Y)           #10 #12
              0330 e0ed  jmp  y,$ed       1656  jmp(Y,'prefx2#13')              #11
              0331 c22b  st   [$2b]       1657  st([sysArgs+7])                 #12 Operand
                                          1658
                                          1659  # pc = 0x0332, Opcode = 0x32
                                          1660  # Instruction DBNE:  Decrement byte var and branch if not zero, 28 cycles
                                          1661  label('DBNE')
DBNE:         0332 1415  ld   $15,y       1662  ld(hi('dbne#13'),Y)             #10
              0333 e053  jmp  y,$53       1663  jmp(Y,'dbne#13')                #11
              0334 1517  ld   [$17],y     1664  ld([vPC+1],Y)                   #12 vPC.hi
                                          1665
                                          1666  # pc = 0x0335, Opcode = 0x35
                                          1667  # Instruction BCC: Test AC sign and branch conditionally, variable, (24-26), cycles
                                          1668  label('BCC')
BCC:          0335 fe00  bra  ac          1669  bra(AC)                         #10 AC is the conditional operand
              0336 de00  st   [y,x++]     1670  st([Y,Xpp])                     #11 X++
                                          1671
                                          1672  # pc = 0x0337, Opcode = 0x37
                                          1673  # Instruction DOKEI: Doke immediate word into address contained in [vAC], 30 cycles
                                          1674  label('DOKEI')
DOKEI:        0337 1417  ld   $17,y       1675  ld(hi('dokei#13'),Y)            #10
              0338 e0da  jmp  y,$da       1676  jmp(Y,'dokei#13')               #11
                                          1677  # dummy                         #12 Overlap
                                          1678  #
                                          1679  # pc = 0x0339, Opcode = 0x39
                                          1680  # Instruction PEEKV: Read byte from address contained in var, 30 cycles
                                          1681  label('PEEKV')
PEEKV:        0339 1416  ld   $16,y       1682  ld(hi('peekv#13'),Y)            #10
              033a e086  jmp  y,$86       1683  jmp(Y,'peekv#13')               #11
                                          1684  # dummy                         #12 Overlap
                                          1685  #
                                          1686  # pc = 0x033b, Opcode = 0x3b
                                          1687  # Instruction DEEKV: Read word from address contained in var, 28 cycles
                                          1688  label('DEEKV')
DEEKV:        033b 1416  ld   $16,y       1689  ld(hi('deekv#13'),Y)            #10 #12
              033c e095  jmp  y,$95       1690  jmp(Y,'deekv#13')               #11
                                          1691  # dummy                         #12 Overlap
                                          1692  #
                                          1693  # pc = 0x033d, Opcode = 0x3d
                                          1694  # Instruction LOKEI: Loke immediate long into address contained in [vAC], 42 cycles
                                          1695  label('LOKEI')
LOKEI:        033d 142d  ld   $2d,y       1696  ld(hi('lokei#13'),Y)            #10
              033e e0ce  jmp  y,$ce       1697  jmp(Y,'lokei#13')               #11
                                          1698  # dummy                         #12 Overlap
                                          1699  #
                                          1700  # pc = 0x033f, Opcode = 0x3f
                                          1701  # Conditional EQ: Branch if zero (if(vACL==0)vPCL=D)
              033f 1417  ld   $17,y       1702  ld(hi('beq#15'),Y)              #12 #12
              0340 e031  jmp  y,$31       1703  jmp(Y,'beq#15')                 #13
              0341 1517  ld   [$17],y     1704  ld([vPC+1],Y)                   #14 vPC.hi
                                          1705
                                          1706  # pc = 0x0342, Opcode = 0x42
                                          1707  # Instruction ADDVI: Add 8bit immediate to 16bit zero page var, var += imm, vAC = var, 50 cycles
                                          1708  label('ADDVI')
ADDVI:        0342 1428  ld   $28,y       1709  ld(hi('addvi#13'),Y)            #10
              0343 e000  jmp  y,$00       1710  jmp(Y,'addvi#13')               #11
                                          1711  # dummy                         #12 Overlap
                                          1712
                                          1713  # pc = 0x0344, Opcode = 0x44
                                          1714  # Instruction SUBVI: Subtract 8bit immediate from 16bit zero page var, var -= imm, vAC = var, 50 cycles
                                          1715  label('SUBVI')
SUBVI:        0344 1428  ld   $28,y       1716  ld(hi('subvi#13'),Y)            #10 #12
              0345 e039  jmp  y,$39       1717  jmp(Y,'subvi#13')               #11
                                          1718  # dummy                         #12 Overlap
                                          1719
                                          1720  # pc = 0x0346, Opcode = 0x46
                                          1721  # Instruction DOKE+: doke word in vAC to address contained in var, var += 2, 30 cycles
                                          1722  label('DOKE+')
DOKE+:        0346 1418  ld   $18,y       1723  ld(hi('doke+#13'),Y)            #10 #12
              0347 e012  jmp  y,$12       1724  jmp(Y,'doke+#13')               #11
                                          1725  # dummy                         #12 Overlap
                                          1726  #
                                          1727  # pc = 0x0348, Opcode = 0x48
                                          1728  # Instruction NOTB: var.lo = ~var.lo, 22 cycles
                                          1729  label('NOTB')
NOTB:         0348 1418  ld   $18,y       1730  ld(hi('notb#13'),Y)             #10 #12
              0349 e00b  jmp  y,$0b       1731  jmp(Y,'notb#13')                #11
                                          1732  # dummy                         #12 Overlap
                                          1733  #
                                          1734  # pc = 0x034a, Opcode = 0x4a
                                          1735  # Instruction DJGE:
                                          1736  label('DJGE')
DJGE:         034a 142b  ld   $2b,y       1737  ld(hi('djge#13'),Y)             #10 #12
              034b e000  jmp  y,$00       1738  jmp(Y,'djge#13')                #11
              034c 1517  ld   [$17],y     1739  ld([vPC+1],Y)                   #12
                                          1740
                                          1741  # pc = 0x034d, Opcode = 0x4d
                                          1742  # Conditional GT: Branch if positive (if(vACL>0)vPCL=D)
              034d 1417  ld   $17,y       1743  ld(hi('bgt#15'),Y)              #12
              034e e04d  jmp  y,$4d       1744  jmp(Y,'bgt#15')                 #13
              034f 1517  ld   [$17],y     1745  ld([vPC+1],Y)                   #14 vPC.hi
                                          1746
                                          1747  # pc = 0x0350, Opcode = 0x50
                                          1748  # Conditional LT: Branch if negative (if(vACL<0)vPCL=D)
              0350 1417  ld   $17,y       1749  ld(hi('blt#15'),Y)              #12
              0351 e062  jmp  y,$62       1750  jmp(Y,'blt#15')                 #13
              0352 1517  ld   [$17],y     1751  ld([vPC+1],Y)                   #14 vPC.hi
                                          1752
                                          1753  # pc = 0x0353, Opcode = 0x53
                                          1754  # Conditional GE: Branch if positive or zero (if(vACL>=0)vPCL=D)
              0353 1417  ld   $17,y       1755  ld(hi('bge#15'),Y)              #12
              0354 e06f  jmp  y,$6f       1756  jmp(Y,'bge#15')                 #13
              0355 1517  ld   [$17],y     1757  ld([vPC+1],Y)                   #14 vPC.hi
                                          1758
                                          1759  # pc = 0x0356, Opcode = 0x56
                                          1760  # Conditional LE: Branch if negative or zero (if(vACL<=0)vPCL=D)
              0356 1417  ld   $17,y       1761  ld(hi('ble#15'),Y)              #12
              0357 e07c  jmp  y,$7c       1762  jmp(Y,'ble#15')                 #13
              0358 1517  ld   [$17],y     1763  ld([vPC+1],Y)                   #14 vPC.hi
                                          1764
                                          1765  # pc = 0x0359, Opcode = 0x59
                                          1766  # Instruction LDI: Load immediate small positive constant (vAC=D), 20 cycles
                                          1767  label('LDI')
LDI:          0359 1416  ld   $16,y       1768  ld(hi('ldi#13'),Y)              #10
              035a e016  jmp  y,$16       1769  jmp(Y,'ldi#13')                 #11
                                          1770  # dummy                         #12 Overlap
                                          1771  #
                                          1772  # pc = 0x035b, Opcode = 0x5b
                                          1773  # Instruction MOVQW: Load a word var with a small constant 0..255, 30 cycles
                                          1774  label('MOVQW')
MOVQW:        035b 1416  ld   $16,y       1775  ld(hi('movqw#13'),Y)            #10 #12
              035c e06e  jmp  y,$6e       1776  jmp(Y,'movqw#13')               #11
              035d 1517  ld   [$17],y     1777  ld([vPC+1],Y)                   #12 vPC.hi
                                          1778
                                          1779  # pc = 0x035e, Opcode = 0x5e
                                          1780  # Instruction ST: Store byte in zero page ([D]=vAC&255), 20 cycles
                                          1781  label('ST')
ST:           035e 1416  ld   $16,y       1782  ld(hi('st#13'),Y)               #10
              035f e01c  jmp  y,$1c       1783  jmp(Y,'st#13')                  #11
                                          1784  # dummy                         #12 Overlap
                                          1785  #
                                          1786  # pc = 0x0360, Opcode = 0x60
                                          1787  # Instruction DEEK+: Deek word at address contained in var, var += 2, 30 cycles
                                          1788  label('DEEK+')
DEEK+:        0360 1417  ld   $17,y       1789  ld(hi('deek+#13'),Y)            #10 #12
              0361 e0e9  jmp  y,$e9       1790  jmp(Y,'deek+#13')               #11
              0362 1400  ld   $00,y       1791  ld(0,Y)                         #12
                                          1792
                                          1793  # pc = 0x0363, Opcode = 0x63
                                          1794  # Instruction POP: Pop address from stack (vLR,vSP==[vSP]+256*[vSP+1],vSP+2), 30 cycles
                                          1795  label('POP')
POP:          0363 140b  ld   $0b,y       1796  ld(hi('pop#13'),Y)              #10
              0364 e0c6  jmp  y,$c6       1797  jmp(Y,'pop#13')                 #11
                                          1798  # dummy                         #12 Overlap
                                          1799  #
                                          1800  # pc = 0x0365, Opcode = 0x65
                                          1801  # Instruction MOV: Moves a byte from src var to dst var, 28 cycles
                                          1802  label('MOV')
MOV:          0365 1416  ld   $16,y       1803  ld(hi('mov#13'),Y)              #10 #12
              0366 e02c  jmp  y,$2c       1804  jmp(Y,'mov#13')                 #11
                                          1805  # dummy                         #12 Overlap
                                          1806  #
                                          1807  # pc = 0x0367, Opcode = 0x67
                                          1808  # Instruction PEEKA: Peek a byte from [vAC] to var, 24 cycles
                                          1809  label('PEEKA')
PEEKA:        0367 1416  ld   $16,y       1810  ld(hi('peeka#13'),Y)            #10 #12
              0368 e03a  jmp  y,$3a       1811  jmp(Y,'peeka#13')               #11
                                          1812  # dummy                         #12 Overlap
                                          1813  #
                                          1814  # pc = 0x0369, Opcode = 0x69
                                          1815  # Instruction POKEA: Poke a byte from var to [vAC], 22 cycles
                                          1816  label('POKEA')
POKEA:        0369 1417  ld   $17,y       1817  ld(hi('pokea#13'),Y)            #10 #12
              036a e0bc  jmp  y,$bc       1818  jmp(Y,'pokea#13')               #11
                                          1819  # dummy                         #12 Overlap
                                          1820
                                          1821  # pc = 0x036b, Opcode = 0x6b
                                          1822  # Instruction TEQ: Test for EQ, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          1823  label('TEQ')
TEQ:          036b 1415  ld   $15,y       1824  ld(hi('teq#13'),Y)              #10 #12
              036c e066  jmp  y,$66       1825  jmp(Y,'teq#13')                 #11
                                          1826  # dummy                         #12 Overlap
                                          1827  #
                                          1828  # pc = 0x036d, Opcode = 0x6d
                                          1829  # Instruction TNE: Test for NE, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          1830  label('TNE')
TNE:          036d 1415  ld   $15,y       1831  ld(hi('tne#13'),Y)              #10 #12
              036e e075  jmp  y,$75       1832  jmp(Y,'tne#13')                 #11
                                          1833  # dummy                         #12 Overlap
                                          1834  #
                                          1835  # pc = 0x036f, Opcode = 0x6f
                                          1836  # Instruction DEEKA: Deek a word from [vAC] to var, 30 cycles
                                          1837  label('DEEKA')
DEEKA:        036f 1416  ld   $16,y       1838  ld(hi('deeka#13'),Y)            #10 #12
              0370 e043  jmp  y,$43       1839  jmp(Y,'deeka#13')               #11
              0371 c21d  st   [$1d]       1840  st([vTmp])                      #12 mask
                                          1841
                                          1842  # pc = 0x0372, Opcode = 0x72
                                          1843  # Conditional NE: Branch if not zero (if(vACL!=0)vPCL=D)
              0372 1417  ld   $17,y       1844  ld(hi('bne#15'),Y)              #12
              0373 e03f  jmp  y,$3f       1845  jmp(Y,'bne#15')                 #13
              0374 1517  ld   [$17],y     1846  ld([vPC+1],Y)                   #14 vPC.hi
                                          1847
                                          1848  # pc = 0x0375, Opcode = 0x75
                                          1849  # Instruction PUSH: Push vLR on stack ([vSP-2],v[vSP-1],vSP=vLR&255,vLR>>8,vLR-2), 30 cycles
                                          1850  label('PUSH')
PUSH:         0375 140b  ld   $0b,y       1851  ld(hi('push#13'),Y)             #10
              0376 e0d6  jmp  y,$d6       1852  jmp(Y,'push#13')                #11
                                          1853  # dummy                         #12 Overlap
                                          1854  #
                                          1855  # pc = 0x0377, Opcode = 0x77
                                          1856  # Instruction SUBBA: vAC -= var.lo, 28 cycles
                                          1857  label('SUBBA')
SUBBA:        0377 1417  ld   $17,y       1858  ld(hi('subba#13'),Y)            #10 #12
              0378 e0a6  jmp  y,$a6       1859  jmp(Y,'subba#13')               #11
                                          1860  # dummy                         #12 Overlap
                                          1861  #
                                          1862  # pc = 0x0379, Opcode = 0x79
                                          1863  # Instruction INCW: Increment word var, 26 cycles
                                          1864  label('INCW')
INCW:         0379 1415  ld   $15,y       1865  ld(hi('incw#13'),Y)             #10 #12
              037a e034  jmp  y,$34       1866  jmp(Y,'incw#13')                #11
                                          1867  # dummy                         #12 Overlap
                                          1868  #
                                          1869  # pc = 0x037b, Opcode = 0x7b
                                          1870  # Instruction DECW: Decrement word var, 26 cycles
                                          1871  label('DECW')
DECW:         037b 1415  ld   $15,y       1872  ld(hi('decw#13'),Y)             #10 #12
              037c e043  jmp  y,$43       1873  jmp(Y,'decw#13')                #11
                                          1874  # dummy                         #12 Overlap
                                          1875  #
                                          1876  # pc = 0x037d, Opcode = 0x7d
                                          1877  # Instruction DOKEA: Doke a word from var to [vAC], 30 cycles
                                          1878  label('DOKEA')
DOKEA:        037d 1417  ld   $17,y       1879  ld(hi('dokea#13'),Y)            #10 #12
              037e e0c4  jmp  y,$c4       1880  jmp(Y,'dokea#13')               #11
                                          1881  # dummy                         #12 Overlap
                                          1882
                                          1883  # pc = 0x037f, Opcode = 0x7f
                                          1884  # Instruction LUP: ROM lookup (vAC=ROM[vAC+D]), 26 cycles
                                          1885  label('LUP')
LUP:          037f 1519  ld   [$19],y     1886  ld([vAC+1],Y)                   #10 #12
              0380 e0fb  jmp  y,$fb       1887  jmp(Y,251)                      #11 Trampoline offset
              0381 8118  adda [$18]       1888  adda([vAC])                     #12
                                          1889
                                          1890  # pc = 0x0382, Opcode = 0x82
                                          1891  # Instruction ANDI: Logical-AND with small constant (vAC&=D), 20 cycles
                                          1892  label('ANDI')
ANDI:         0382 1404  ld   $04,y       1893  ld(hi('andi#13'),Y)             #10
              0383 e022  jmp  y,$22       1894  jmp(Y,'andi#13')                #11
              0384 2118  anda [$18]       1895  anda([vAC])                     #12
                                          1896
                                          1897  # pc = 0x0385, Opcode = 0x85
                                          1898  # Instruction CALLI: Goto immediate address and remember vPC (vLR,vPC=vPC+3,$HHLL-2), 28 cycles
                                          1899  label('CALLI')
CALLI:        0385 1417  ld   $17,y       1900  ld(hi('calli#13'),Y)            #10
              0386 e00a  jmp  y,$0a       1901  jmp(Y,'calli#13')               #11
              0387 0116  ld   [$16]       1902  ld([vPC])                       #12
                                          1903
                                          1904  # pc = 0x0388, Opcode = 0x88
                                          1905  # Instruction ORI: Logical-OR with small constant (vAC|=D), 20 cycles
                                          1906  label('ORI')
ORI:          0388 1416  ld   $16,y       1907  ld(hi('ori#13'),Y)              #10
              0389 e022  jmp  y,$22       1908  jmp(Y,'ori#13')                 #11
                                          1909  # dummy                         #12 Overlap
                                          1910  #
                                          1911  # pc = 0x038a, Opcode = 0x8a
                                          1912  # Instruction PEEKA+: Peek a byte from [vAC] to var, incw vAC, 28 to 30 cycles
                                          1913  label('PEEKA+')
PEEKA+:       038a 1414  ld   $14,y       1914  ld(hi('peeka+#13'),Y)           #10 #12
              038b e046  jmp  y,$46       1915  jmp(Y,'peeka+#13')              #11
                                          1916  # dummy                         #12 Overlap
                                          1917  #
                                          1918  # pc = 0x038c, Opcode = 0x8c
                                          1919  # Instruction XORI: Logical-XOR with small constant (vAC^=D), 20 cycles
                                          1920  label('XORI')
XORI:         038c 1418  ld   $18,y       1921  ld(hi('xori#13'),Y)             #10 #12
              038d e022  jmp  y,$22       1922  jmp(Y,'xori#13')                #11
                                          1923  # dummy                         #12 Overlap
                                          1924  #
                                          1925  # pc = 0x038e, Opcode = 0x8e
                                          1926  # Instruction DBGE:  Decrement byte var and branch if >= 0, 30 cycles
                                          1927  label('DBGE')
DBGE:         038e 1418  ld   $18,y       1928  ld(hi('dbge#13'),Y)             #10 #12
              038f e030  jmp  y,$30       1929  jmp(Y,'dbge#13')                #11
                                          1930  # dummy                         #12 Overlap
                                          1931  #
                                          1932  # pc = 0x0390, Opcode = 0x90
                                          1933  # Instruction BRA: Branch unconditionally (vPC=(vPC&0xff00)+D), 18 cycles
                                          1934  label('BRA')
BRA:          0390 1418  ld   $18,y       1935  ld(hi('bra#13'),Y)              #10 #12
              0391 e02d  jmp  y,$2d       1936  jmp(Y,'bra#13')                 #11
              0392 c216  st   [$16]       1937  st([vPC])                       #12
                                          1938
                                          1939  # pc = 0x0393, Opcode = 0x93
                                          1940  # Instruction INC: Increment zero page byte ([D]++), 20 cycles
                                          1941  label('INC')
INC:          0393 1416  ld   $16,y       1942  ld(hi('inc#13'),Y)              #10
              0394 e000  jmp  y,$00       1943  jmp(Y,'inc#13')                 #11
                                          1944  # dummy                         #12 Overlap
                                          1945  #
                                          1946  # pc = 0x0395, Opcode = 0x95
                                          1947  # Instruction SPARE1:
                                          1948  label('SPARE1')
SPARE1:       0395 1403  ld   $03,y       1949  ld(hi('SPARE1'),Y)              #10 #12
              0396 e095  jmp  y,$95       1950  jmp(Y,'SPARE1')                 #11
                                          1951  # dummy                         #12 Overlap
                                          1952  #
                                          1953  # pc = 0x0397, Opcode = 0x97
                                          1954  # Instruction CMPHU: Adjust high byte for unsigned compare (vACH=XXX), 28 cycles
                                          1955  label('CMPHU')
CMPHU:        0397 140b  ld   $0b,y       1956  ld(hi('cmphu#13'),Y)            #10 #12
              0398 e0f2  jmp  y,$f2       1957  jmp(Y,'cmphu#13')               #11
                                          1958  # dummy                         #12 Overlap, not dependent on ld(AC,X) anymore
                                          1959  #
                                          1960  # pc = 0x0399, Opcode = 0x99
                                          1961  # Instruction ADDW: Word addition with zero page (vAC+=[D]+256*[D+1]), 30 cycles
                                          1962  label('ADDW')
ADDW:         0399 1400  ld   $00,y       1963  ld(hi('addw#13'),Y)             #10 #12
              039a e080  jmp  y,$80       1964  jmp(Y,'addw#13')                #11 Y=0
              039b 1200  ld   ac,x        1965  ld(AC,X)                        #12 Address of low byte to be added
                                          1966
                                          1967  # pc = 0x039c, Opcode = 0x9c
                                          1968  # Instruction LDNI: Load an 8bit immediate as a negative 16bit immediate into vAC, 22 cycles
                                          1969  label('LDNI')
LDNI:         039c 1418  ld   $18,y       1970  ld(hi('ldni#13'),Y)             #10
              039d e044  jmp  y,$44       1971  jmp(Y,'ldni#13')                #11
                                          1972  # dummy                         #12 Overlap
                                          1973
                                          1974  # pc = 0x039e, Opcode = 0x9e
                                          1975  # Instruction ANDBK: vAC = var & imm, 30 cycles
                                          1976  label('ANDBK')
ANDBK:        039e 1418  ld   $18,y       1977  ld(hi('andbk#13'),Y)            #10 #12
              039f e04c  jmp  y,$4c       1978  jmp(Y,'andbk#13')               #11
                                          1979  # dummy                         #12 Overlap
                                          1980
                                          1981  # pc = 0x03a0, Opcode = 0xa0
                                          1982  # Instruction ORBK: vAC = var | imm, 30 cycles
                                          1983  label('ORBK')
ORBK:         03a0 1418  ld   $18,y       1984  ld(hi('orbk#13'),Y)             #10 #12
              03a1 e05c  jmp  y,$5c       1985  jmp(Y,'orbk#13')                #11
                                          1986  # dummy                         #12 Overlap
                                          1987
                                          1988  # pc = 0x03a2, Opcode = 0xa2
                                          1989  # Instruction XORBK: vAC = var ^ imm, 30 cycles
                                          1990  label('XORBK')
XORBK:        03a2 1418  ld   $18,y       1991  ld(hi('xorbk#13'),Y)            #10 #12
              03a3 e06c  jmp  y,$6c       1992  jmp(Y,'xorbk#13')               #11
                                          1993  # dummy                         #12 Overlap
                                          1994
                                          1995  # pc = 0x03a4, Opcode = 0xa4, 26 to 46 cycles
                                          1996  # Instruction DJNE:
                                          1997  label('DJNE')
DJNE:         03a4 142a  ld   $2a,y       1998  ld(hi('djne#13'),Y)             #10 #12
              03a5 e0a6  jmp  y,$a6       1999  jmp(Y,'djne#13')                #11
              03a6 1517  ld   [$17],y     2000  ld([vPC+1],Y)                   #12
                                          2001
                                          2002  # pc = 0x03a7, Opcode = 0xa7
                                          2003  # Instruction CMPI: Compare byte variable to 8bit immediate, 36 cycles
                                          2004  label('CMPI')
CMPI:         03a7 1418  ld   $18,y       2005  ld(hi('cmpi#13'),Y)             #10
              03a8 e07c  jmp  y,$7c       2006  jmp(Y,'cmpi#13')                #11
                                          2007  # dummy                         #12 Overlap
                                          2008
                                          2009  # pc = 0x03a9, Opcode = 0xa9
                                          2010  # Instruction ADDVW: Add two 16bit zero page vars, dst += src, vAC = dst, 28 to 54 cycles
                                          2011  label('ADDVW')
ADDVW:        03a9 1414  ld   $14,y       2012  ld(hi('addvw#13'),Y)            #10 #12
              03aa e05b  jmp  y,$5b       2013  jmp(Y,'addvw#13')               #11
                                          2014  # dummy                         #12 Overlap
                                          2015
                                          2016  # pc = 0x03ab, Opcode = 0xab
                                          2017  # Instruction SUBVW: Subtract two 16bit zero page vars, dst -= src, vAC = dst, 30 to 54 cycles
                                          2018  label('SUBVW')
SUBVW:        03ab 1414  ld   $14,y       2019  ld(hi('subvw#13'),Y)            #10 #12
              03ac e0a4  jmp  y,$a4       2020  jmp(Y,'subvw#13')               #11
                                          2021  # dummy                         #12 Overlap
                                          2022
                                          2023  # pc = 0x03ad, Opcode = 0xad
                                          2024  # Instruction PEEK: Read byte from memory (vAC=[vAC]), 26 cycles
                                          2025  label('PEEK')
PEEK:         03ad 1404  ld   $04,y       2026  ld(hi('peek#13'),Y)             #10 #12
              03ae e052  jmp  y,$52       2027  jmp(Y,'peek#13')                #11
                                          2028  # dummy                         #12 Overlap
                                          2029  #
                                          2030  # The 'SYS' vCPU instruction first checks the number of desired ticks given by
                                          2031  # the operand. As long as there are insufficient ticks available in the current
                                          2032  # time slice, the instruction will be retried. This will effectively wait for
                                          2033  # the next scan line if the current slice is almost out of time. Then a jump to
                                          2034  # native code is made. This code can do whatever it wants, but it must return
                                          2035  # to the 'REENTER' label when done. When returning, AC must hold (the negative
                                          2036  # of) the actual consumed number of whole ticks for the entire virtual
                                          2037  # instruction cycle (from NEXT to NEXT). This duration may not exceed the prior
                                          2038  # declared duration in the operand + 28 (or maxTicks). The operand specifies the
                                          2039  # (negative) of the maximum number of *extra* ticks that the native call will
                                          2040  # need. The GCL compiler automatically makes this calculation from gross number
                                          2041  # of cycles to excess number of ticks.
                                          2042  # SYS functions can modify vPC to implement repetition. For example to split
                                          2043  # up work into multiple chucks.
                                          2044  label('.sys#13')
.sys#13:      03af 1418  ld   $18,y       2045  ld(hi('.sys#16'),Y)             #13 #12
              03b0 e000  jmp  y,$00       2046  jmp(Y,'.sys#16')                #14
                                          2047  # dummy                         #15 Overlap
                                          2048  #
                                          2049  # pc = 0x03b1, Opcode = 0xb1
                                          2050  # Instruction PREFX1
                                          2051  label('PREFX1')
PREFX1:       03b1 1414  ld   $14,y       2052  ld(hi('prefx1#13'),Y)           #10 #15
              03b2 e0f5  jmp  y,$f5       2053  jmp(Y,'prefx1#13')              #11
              03b3 0023  ld   $23         2054  ld(hi('PREFX1_PAGE'))           #12 ENTER is at $(n-1)ff, where n = instruction page
                                          2055
                                          2056  # pc = 0x03b4, Opcode = 0xb4
                                          2057  # Instruction SYS: Native call, <=256 cycles (<=128 ticks, in reality less)
                                          2058  label('SYS')
SYS:          03b4 8115  adda [$15]       2059  adda([vTicks])                  #10
              03b5 e8af  blt  .sys#13     2060  blt('.sys#13')                  #11
              03b6 1523  ld   [$23],y     2061  ld([sysFn+1],Y)                 #12
              03b7 e122  jmp  y,[$22]     2062  jmp(Y,[sysFn])                  #13
                                          2063  # dummy                         #14 Overlap
                                          2064  #
                                          2065  # pc = 0x03b8, Opcode = 0xb8
                                          2066  # Instruction SUBW: Word subtract with zero page (AC-=[D]+256*[D+1]), 30 cycles
                                          2067  label('SUBW')
SUBW:         03b8 1417  ld   $17,y       2068  ld(hi('subw#13'),Y)             #10 #14
              03b9 e016  jmp  y,$16       2069  jmp(Y,'subw#13')                #11 Y=0
              03ba 1200  ld   ac,x        2070  ld(AC,X)                        #12 Address of low byte to be added
                                          2071
                                          2072  # pc = 0x03bb, Opcode = 0xbb
                                          2073  # Instruction JEQ: jump to 16bit address if vAC=0
                                          2074  label('JEQ')
JEQ:          03bb 1418  ld   $18,y       2075  ld(hi('jeq#13'),Y)              #10
              03bc e0a2  jmp  y,$a2       2076  jmp(Y,'jeq#13')                 #11
                                          2077  # dummy                         #12 Overlap
                                          2078  #
                                          2079  # pc = 0x03bd, Opcode = 0xbd
                                          2080  # Instruction JNE: jump to 16bit address if vAC!=0
                                          2081  label('JNE')
JNE:          03bd 1418  ld   $18,y       2082  ld(hi('jne#13'),Y)              #10 #12
              03be e0b4  jmp  y,$b4       2083  jmp(Y,'jne#13')                 #11
                                          2084  # dummy                         #12 Overlap
                                          2085  #
                                          2086  # pc = 0x03bf, Opcode = 0xbf
                                          2087  # Instruction JLT: jump to 16bit address if vAC<0
                                          2088  label('JLT')
JLT:          03bf 1418  ld   $18,y       2089  ld(hi('jlt#13'),Y)              #10 #12
              03c0 e0c6  jmp  y,$c6       2090  jmp(Y,'jlt#13')                 #11
                                          2091  # dummy                         #12 Overlap
                                          2092  #
                                          2093  # pc = 0x03c1, Opcode = 0xc1
                                          2094  # Instruction JGT: jump to 16bit address if vAC>0
                                          2095  label('JGT')
JGT:          03c1 1414  ld   $14,y       2096  ld(hi('jgt#13'),Y)              #10 #12
              03c2 e000  jmp  y,$00       2097  jmp(Y,'jgt#13')                 #11
                                          2098  # dummy                         #12 Overlap
                                          2099  #
                                          2100  # pc = 0x03c3, Opcode = 0xc3
                                          2101  # Instruction JLE: jump to 16bit address if vAC<=0
                                          2102  label('JLE')
JLE:          03c3 1414  ld   $14,y       2103  ld(hi('jle#13'),Y)              #10 #12
              03c4 e019  jmp  y,$19       2104  jmp(Y,'jle#13')                 #11
                                          2105  # dummy                         #12 Overlap
                                          2106  #
                                          2107  # pc = 0x03c5, Opcode = 0xc5
                                          2108  # Instruction JGE: jump to 16bit address if vAC>=0
                                          2109  label('JGE')
JGE:          03c5 1414  ld   $14,y       2110  ld(hi('jge#13'),Y)              #10 #12
              03c6 e035  jmp  y,$35       2111  jmp(Y,'jge#13')                 #11
                                          2112  # dummy                         #12 Overlap
                                          2113  #
                                          2114  # pc = 0x03c7, Opcode = 0xc7
                                          2115  # Instruction PREFX3: switches instruction page to 0x2200
                                          2116  # original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          2117  label('PREFX3')
PREFX3:       03c7 1414  ld   $14,y       2118  ld(hi('prefx3#13'),Y)           #10 #12
              03c8 e0e5  jmp  y,$e5       2119  jmp(Y,'prefx3#13')              #11
              03c9 c22b  st   [$2b]       2120  st([sysArgs+7])                 #12 Second operand
                                          2121
                                          2122  # SYS calls and instruction implementations rely on these labels
                                          2123  label('REENTER_28')
REENTER_28:   03ca 00f2  ld   $f2         2124  ld(-28/2)                       #25
                                          2125  label('REENTER')
REENTER:      03cb fc01  bra  NEXT        2126  bra('NEXT')                     #26 Return from SYS calls
              03cc 1517  ld   [$17],y     2127  ld([vPC+1],Y)                   #27
                                          2128
                                          2129  fillers(until=0xcd)
                                          2130
                                          2131  #
                                          2132  # The instructions below are all implemented in the second code page. Jumping
                                          2133  # back and forth makes each 6 cycles slower, but it also saves space in the
                                          2134  # primary page for the instructions above. Most of them are in fact not very
                                          2135  # critical, as evidenced by the fact that they weren't needed for the first
                                          2136  # Gigatron applications (Snake, Racer, Mandelbrot, Loader). By providing them
                                          2137  # in this way, at least they don't need to be implemented as a SYS extension.
                                          2138  #
                                          2139  # pc = 0x03cd, Opcode = 0xcd
                                          2140  # Instruction DEF: Define data or code (vAC,vPC=vPC+2,(vPC&0xff00)+D), 26 cycles
                                          2141  label('DEF')
DEF:          03cd 1404  ld   $04,y       2142  ld(hi('def#13'),Y)              #10
              03ce e017  jmp  y,$17       2143  jmp(Y,'def#13')                 #11
                                          2144  # dummy                         #12 Overlap
                                          2145  #
                                          2146  # pc = 0x03cf, Opcode = 0xcf
                                          2147  # Instruction CALL: Goto address and remember vPC (vLR,vPC=vPC+2,[D]+256*[D+1]-2), 30 cycles
                                          2148  label('CALL')
CALL:         03cf 1404  ld   $04,y       2149  ld(hi('call#13'),Y)             #10 #12
              03d0 e007  jmp  y,$07       2150  jmp(Y,'call#13')                #11
                                          2151  # dummy                         #12 Overlap
                                          2152  #
                                          2153  # pc = 0x03d1, Opcode = 0xd1
                                          2154  # Instruction POKE+: Poke byte in vAC to address contained in var, inc var, 30 cycles
                                          2155  label('POKE+')
POKE+:        03d1 1416  ld   $16,y       2156  ld(hi('poke+#13'),Y)            #10 #12
              03d2 e0cc  jmp  y,$cc       2157  jmp(Y,'poke+#13')               #11
                                          2158  # dummy                         #12 Overlap
                                          2159  #
                                          2160  # pc = 0x03d3, Opcode = 0xd3
                                          2161  # Instruction LSRV: Logical shift right word var, 56 cycles
                                          2162  label('LSRV')
LSRV:         03d3 142c  ld   $2c,y       2163  ld(hi('lsrv#13'),Y)             #10 #12
              03d4 e048  jmp  y,$48       2164  jmp(Y,'lsrv#13')                #11
                                          2165  # dummy                         #12 Overlap
                                          2166  #
                                          2167  # pc = 0x03d5, Opcode = 0xd5
                                          2168  # Instruction TGE: Test for GE, returns 0x0000 or 0x0101 in vAC, 26 cycles
                                          2169  label('TGE')
TGE:          03d5 1415  ld   $15,y       2170  ld(hi('tge#13'),Y)              #10 #12
              03d6 e084  jmp  y,$84       2171  jmp(Y,'tge#13')                 #11
                                          2172  # dummy                         #12 Overlap
                                          2173  #
                                          2174  # pc = 0x03d7, Opcode = 0xd7
                                          2175  # Instruction TLT: Test for LT, returns 0x0000 or 0x0101 in vAC, 26 cycles
                                          2176  label('TLT')
TLT:          03d7 1415  ld   $15,y       2177  ld(hi('tlt#13'),Y)             #10 #12
              03d8 e092  jmp  y,$92       2178  jmp(Y,'tlt#13')                #11
                                          2179  # dummy                        #12 Overlap
                                          2180  #
                                          2181  # pc = 0x03d9, Opcode = 0xd9
                                          2182  # Instruction TGT: Test for GT, returns 0x0000 or 0x0101 in vAC, 28 cycles
                                          2183  label('TGT')
TGT:          03d9 1415  ld   $15,y       2184  ld(hi('tgt#13'),Y)             #10 #12
              03da e0a0  jmp  y,$a0       2185  jmp(Y,'tgt#13')                #11
                                          2186  # dummy                        #12 Overlap
                                          2187  #
                                          2188  # pc = 0x03db, Opcode = 0xdb
                                          2189  # Instruction TLE: Test for LE, returns 0x0000 or 0x0101 in vAC
                                          2190  label('TLE')
TLE:          03db 1415  ld   $15,y       2191  ld(hi('tle#13'),Y)             #10 #12
              03dc e0b6  jmp  y,$b6       2192  jmp(Y,'tle#13')                #11
                                          2193  # dummy                        #12 Overlap
                                          2194  #
                                          2195  # pc = 0x03dd, Opcode = 0xdd
                                          2196  # Instruction SPARE2:
                                          2197  label('SPARE2')
SPARE2:       03dd 1403  ld   $03,y       2198  ld(hi('SPARE2'),Y)             #10 #12
              03de e0dd  jmp  y,$dd       2199  jmp(Y,'SPARE2')                #11
                                          2200  # dummy                        #12 Overlap
                                          2201  #
                                          2202  # pc = 0x03df, Opcode = 0xdf
                                          2203  # Instruction ALLOC: Create or destroy stack frame (vSP+=D), 20 cycles
                                          2204  label('ALLOC')
ALLOC:        03df 1416  ld   $16,y       2205  ld(hi('alloc#13'),Y)           #10 #12
              03e0 e027  jmp  y,$27       2206  jmp(Y,'alloc#13')              #11
                                          2207  # dummy                        #12 Overlap
                                          2208  #
                                          2209  # pc = 0x03e1, Opcode = 0xe1
                                          2210  # Instruction SUBBI: Subtract a constant 0..255 from a byte var, 28 cycles
                                          2211  label('SUBBI')
SUBBI:        03e1 1416  ld   $16,y       2212  ld(hi('subbi#13'),Y)            #10 #12
              03e2 e053  jmp  y,$53       2213  jmp(Y,'subbi#13')               #11
                                          2214  # dummy                         #12 Overlap
                                          2215  #
                                          2216  # pc = 0x03e3, Opcode = 0xe3
                                          2217  # Instruction ADDI: Add small positive constant (vAC+=D), 26 cycles
                                          2218  label('ADDI')
ADDI:         03e3 1415  ld   $15,y       2219  ld(hi('addi#13'),Y)             #10 #12
              03e4 e000  jmp  y,$00       2220  jmp(Y,'addi#13')                #11
              03e5 c21d  st   [$1d]       2221  st([vTmp])                      #12
                                          2222
                                          2223  # pc = 0x03e6, Opcode = 0xe6
                                          2224  # Instruction SUBI: Subtract small positive constant (vAC+=D), 26 cycles
                                          2225  label('SUBI')
SUBI:         03e6 1415  ld   $15,y       2226  ld(hi('subi#13'),Y)             #10
              03e7 e014  jmp  y,$14       2227  jmp(Y,'subi#13')                #11
              03e8 c21d  st   [$1d]       2228  st([vTmp])                      #12
                                          2229
                                          2230  # pc = 0x03e9, Opcode = 0xe9
                                          2231  # Instruction LSLW: Logical shift left (vAC<<=1), 28 cycles
                                          2232  # Useful, because ADDW can't add vAC to itself. Also more compact.
                                          2233  label('LSLW')
LSLW:         03e9 1404  ld   $04,y       2234  ld(hi('lslw#13'),Y)             #10
              03ea e028  jmp  y,$28       2235  jmp(Y,'lslw#13')                #11
              03eb 0118  ld   [$18]       2236  ld([vAC])                       #12
                                          2237
                                          2238  # pc = 0x03ec, Opcode = 0xec
                                          2239  # Instruction STLW: Store word in stack frame ([vSP+D],[vSP+D+1]=vAC&255,vAC>>8), 24 cycles
                                          2240  label('STLW')
STLW:         03ec 1404  ld   $04,y       2241  ld(hi('stlw#13'),Y)             #10
              03ed e034  jmp  y,$34       2242  jmp(Y,'stlw#13')                #11
                                          2243  #dummy()                        #12 Overlap
                                          2244  #
                                          2245  # pc = 0x03ee, Opcode = 0xee
                                          2246  # Instruction LDLW: Load word from stack frame (vAC=[vSP+D]+256*[vSP+D+1]), 24 cycles
                                          2247  label('LDLW')
LDLW:         03ee 1404  ld   $04,y       2248  ld(hi('ldlw#13'),Y)             #10 #12
              03ef e03d  jmp  y,$3d       2249  jmp(Y,'ldlw#13')                #11
                                          2250  #dummy()                        #12 Overlap
                                          2251  #
                                          2252  # pc = 0x03f0, Opcode = 0xf0
                                          2253  # Instruction POKE: Write byte in memory ([[D+1],[D]]=vAC&255), 26 cycles
                                          2254  label('POKE')
POKE:         03f0 1404  ld   $04,y       2255  ld(hi('poke#13'),Y)             #10 #12
              03f1 e047  jmp  y,$47       2256  jmp(Y,'poke#13')                #11
              03f2 c21d  st   [$1d]       2257  st([vTmp])                      #12
                                          2258
                                          2259  # pc = 0x03f3, Opcode = 0xf3
                                          2260  # Instruction DOKE: Write word in memory ([[D+1],[D]],[[D+1],[D]+1]=vAC&255,vAC>>8), 28 cycles
                                          2261  label('DOKE')
DOKE:         03f3 1404  ld   $04,y       2262  ld(hi('doke#13'),Y)             #10
              03f4 e05e  jmp  y,$5e       2263  jmp(Y,'doke#13')                #11
              03f5 c21d  st   [$1d]       2264  st([vTmp])                      #12
                                          2265
                                          2266  # pc = 0x03f6, Opcode = 0xf6
                                          2267  # Instruction DEEK: Read word from memory (vAC=[vAC]+256*[vAC+1]), 28 cycles
                                          2268  label('DEEK')
DEEK:         03f6 1404  ld   $04,y       2269  ld(hi('deek#13'),Y)             #10
              03f7 e06b  jmp  y,$6b       2270  jmp(Y,'deek#13')                #11
                                          2271  #dummy()                        #12 Overlap
                                          2272  #
                                          2273  # pc = 0x03f8, Opcode = 0xf8
                                          2274  # Instruction ANDW: Word logical-AND with zero page (vAC&=[D]+256*[D+1]), 28 cycles
                                          2275  label('ANDW')
ANDW:         03f8 1404  ld   $04,y       2276  ld(hi('andw#13'),Y)             #10 #12
              03f9 e077  jmp  y,$77       2277  jmp(Y,'andw#13')                #11
                                          2278  #dummy()                        #12 Overlap
                                          2279  #
                                          2280  # pc = 0x03fa, Opcode = 0xfa
                                          2281  # Instruction ORW: Word logical-OR with zero page (vAC|=[D]+256*[D+1]), 28 cycles
                                          2282  label('ORW')
ORW:          03fa 1404  ld   $04,y       2283  ld(hi('orw#13'),Y)              #10 #12
              03fb e083  jmp  y,$83       2284  jmp(Y,'orw#13')                 #11
                                          2285  #dummy()                        #12 Overlap
                                          2286  #
                                          2287  # pc = 0x03fc, Opcode = 0xfc
                                          2288  # Instruction XORW: Word logical-XOR with zero page (vAC^=[D]+256*[D+1]), 28 cycles
                                          2289  label('XORW')
XORW:         03fc 1415  ld   $15,y       2290  ld(hi('xorw#13'),Y)             #10 #12
              03fd e029  jmp  y,$29       2291  jmp(Y,'xorw#13')                #11
              03fe 1200  ld   ac,x        2292  ld(AC,X)                        #12
                                          2293
                                          2294  # pc = 0x03ff, Opcode = 0xff
                                          2295  # Instruction RET: Function return (vPC=vLR-2), 16 cycles
                                          2296  label('RET')
RET:          03ff 011a  ld   [$1a]       2297  ld([vLR])                       #10
                                          2298  assert pc()&255 == 0
                                          2299
                                          2300
                                          2301  #-----------------------------------------------------------------------
                                          2302  #
                                          2303  #  $0400 ROM page 4: Application interpreter extension
                                          2304  #
                                          2305  #-----------------------------------------------------------------------
                                          2306  align(0x100, size=0x100)
                                          2307
                                          2308  # (Continue RET)
              0400 a002  suba $02         2309  suba(2)                         #11
              0401 c216  st   [$16]       2310  st([vPC])                       #12
              0402 011b  ld   [$1b]       2311  ld([vLR+1])                     #13
              0403 c217  st   [$17]       2312  st([vPC+1])                     #14
              0404 1403  ld   $03,y       2313  ld(hi('REENTER'),Y)             #15
              0405 e0cb  jmp  y,$cb       2314  jmp(Y,'REENTER')                #16
              0406 00f6  ld   $f6         2315  ld(-20/2)                       #17
                                          2316
                                          2317  # CALL implementation
                                          2318  label('call#13')
call#13:      0407 1200  ld   ac,x        2319  ld(AC,X)                        #13
              0408 0116  ld   [$16]       2320  ld([vPC])                       #14
              0409 8002  adda $02         2321  adda(2)                         #15 Point to instruction after CALL
              040a c21a  st   [$1a]       2322  st([vLR])                       #16
              040b 0117  ld   [$17]       2323  ld([vPC+1])                     #17
              040c c21b  st   [$1b]       2324  st([vLR+1])                     #18
              040d 1400  ld   $00,y       2325  ld(0,Y)                         #19
              040e 0500  ld   [x]         2326  ld([X])                         #20
              040f de00  st   [y,x++]     2327  st([Y,Xpp])                     #21
              0410 a002  suba $02         2328  suba(2)                         #22 Because NEXT will add 2
              0411 c216  st   [$16]       2329  st([vPC])                       #23
              0412 0500  ld   [x]         2330  ld([X])                         #24
              0413 c217  st   [$17]       2331  st([vPC+1])                     #25
              0414 1403  ld   $03,y       2332  ld(hi('NEXTY'),Y)               #26
              0415 e000  jmp  y,$00       2333  jmp(Y,'NEXTY')                  #27
              0416 00f1  ld   $f1         2334  ld(-30/2)                       #28
                                          2335
                                          2336  # DEF implementation
                                          2337  label('def#13')
def#13:       0417 c21d  st   [$1d]       2338  st([vTmp])                      #13
              0418 0116  ld   [$16]       2339  ld([vPC])                       #14
              0419 8002  adda $02         2340  adda(2)                         #15
              041a c218  st   [$18]       2341  st([vAC])                       #16
              041b 0117  ld   [$17]       2342  ld([vPC+1])                     #17
              041c c219  st   [$19]       2343  st([vAC+1])                     #18
              041d 011d  ld   [$1d]       2344  ld([vTmp])                      #19
              041e c216  st   [$16]       2345  st([vPC])                       #20
              041f 1403  ld   $03,y       2346  ld(hi('REENTER'),Y)             #21
              0420 e0cb  jmp  y,$cb       2347  jmp(Y,'REENTER')                #22
              0421 00f3  ld   $f3         2348  ld(-26/2)                       #23
                                          2349
                                          2350  # ANDI implementation
                                          2351  label('andi#13')
andi#13:      0422 c218  st   [$18]       2352  st([vAC])                       #13
              0423 0000  ld   $00         2353  ld(0)                           #14 Clear high byte
              0424 c219  st   [$19]       2354  st([vAC+1])                     #15
              0425 1403  ld   $03,y       2355  ld(hi('NEXTY'),Y)               #16
              0426 e000  jmp  y,$00       2356  jmp(Y,'NEXTY')                  #17
              0427 00f6  ld   $f6         2357  ld(-20/2)                       #18
                                          2358
                                          2359  # LSLW implementation
                                          2360  label('lslw#13')
lslw#13:      0428 3080  anda $80,x       2361  anda(128,X)                     #13
              0429 8118  adda [$18]       2362  adda([vAC])                     #14
              042a c218  st   [$18]       2363  st([vAC])                       #15
              042b 0500  ld   [x]         2364  ld([X])                         #16
              042c 8119  adda [$19]       2365  adda([vAC+1])                   #17
              042d 8119  adda [$19]       2366  adda([vAC+1])                   #18
              042e c219  st   [$19]       2367  st([vAC+1])                     #19
              042f 0116  ld   [$16]       2368  ld([vPC])                       #20
              0430 a001  suba $01         2369  suba(1)                         #21
              0431 1403  ld   $03,y       2370  ld(hi('REENTER_28'),Y)          #22
              0432 e0ca  jmp  y,$ca       2371  jmp(Y,'REENTER_28')             #23
              0433 c216  st   [$16]       2372  st([vPC])                       #24
                                          2373
                                          2374  # STLW implementation
                                          2375  label('stlw#13')
stlw#13:      0434 1504  ld   [$04],y     2376  ld([vSPH],Y)                    #13
              0435 911c  adda [$1c],x     2377  adda([vSP],X)                   #14
              0436 0118  ld   [$18]       2378  ld([vAC])                       #15
              0437 de00  st   [y,x++]     2379  st([Y,Xpp])                     #16
              0438 0119  ld   [$19]       2380  ld([vAC+1])                     #17
              0439 ce00  st   [y,x]       2381  st([Y,X])                       #18
              043a 1403  ld   $03,y       2382  ld(hi('REENTER'),Y)             #19
              043b e0cb  jmp  y,$cb       2383  jmp(Y,'REENTER')                #20
              043c 00f4  ld   $f4         2384  ld(-24/2)                       #21
                                          2385
                                          2386  # LDLW implementation
                                          2387  label('ldlw#13')
ldlw#13:      043d 1504  ld   [$04],y     2388  ld([vSPH],Y)                    #13
              043e 911c  adda [$1c],x     2389  adda([vSP],X)                   #14
              043f 0d00  ld   [y,x]       2390  ld([Y,X])                       #15
              0440 de00  st   [y,x++]     2391  st([Y,Xpp])                     #16
              0441 c218  st   [$18]       2392  st([vAC])                       #17
              0442 0d00  ld   [y,x]       2393  ld([Y,X])                       #18
              0443 c219  st   [$19]       2394  st([vAC+1])                     #19
              0444 1403  ld   $03,y       2395  ld(hi('NEXTY'),Y)               #20
              0445 e000  jmp  y,$00       2396  jmp(Y,'NEXTY')                  #21
              0446 00f4  ld   $f4         2397  ld(-24/2)                       #22
                                          2398
                                          2399  # POKE implementation
                                          2400  label('poke#13')
poke#13:      0447 9001  adda $01,x       2401  adda(1,X)                       #13
              0448 0500  ld   [x]         2402  ld([X])                         #14
              0449 1600  ld   ac,y        2403  ld(AC,Y)                        #15
              044a 111d  ld   [$1d],x     2404  ld([vTmp],X)                    #16
              044b 0500  ld   [x]         2405  ld([X])                         #17
              044c 1200  ld   ac,x        2406  ld(AC,X)                        #18
              044d 0118  ld   [$18]       2407  ld([vAC])                       #19
              044e ce00  st   [y,x]       2408  st([Y,X])                       #20
              044f 1403  ld   $03,y       2409  ld(hi('REENTER'),Y)             #21
              0450 e0cb  jmp  y,$cb       2410  jmp(Y,'REENTER')                #22
              0451 00f3  ld   $f3         2411  ld(-26/2)                       #23
                                          2412
                                          2413  # PEEK implementation
                                          2414  label('peek#13')
peek#13:      0452 1118  ld   [$18],x     2415  ld([vAC],X)                     #13
              0453 1519  ld   [$19],y     2416  ld([vAC+1],Y)                   #14
              0454 0d00  ld   [y,x]       2417  ld([Y,X])                       #15
              0455 c218  st   [$18]       2418  st([vAC])                       #16
              0456 0000  ld   $00         2419  ld(0)                           #17
              0457 c219  st   [$19]       2420  st([vAC+1])                     #18
              0458 0116  ld   [$16]       2421  ld([vPC])                       #19
              0459 a001  suba $01         2422  suba(1)                         #20
              045a c216  st   [$16]       2423  st([vPC])                       #21
              045b 1403  ld   $03,y       2424  ld(hi('NEXTY'),Y)               #22
              045c e000  jmp  y,$00       2425  jmp(Y,'NEXTY')                  #23
              045d 00f3  ld   $f3         2426  ld(-26/2)                       #24
                                          2427
                                          2428  # DOKE implementation
                                          2429  label('doke#13')
doke#13:      045e 9001  adda $01,x       2430  adda(1,X)                       #13
              045f 0500  ld   [x]         2431  ld([X])                         #14
              0460 1600  ld   ac,y        2432  ld(AC,Y)                        #15
              0461 111d  ld   [$1d],x     2433  ld([vTmp],X)                    #16
              0462 0500  ld   [x]         2434  ld([X])                         #17
              0463 1200  ld   ac,x        2435  ld(AC,X)                        #18
              0464 0118  ld   [$18]       2436  ld([vAC])                       #19
              0465 de00  st   [y,x++]     2437  st([Y,Xpp])                     #20
              0466 0119  ld   [$19]       2438  ld([vAC+1])                     #21
              0467 ce00  st   [y,x]       2439  st([Y,X])                       #22 Incompatible with REENTER_28
              0468 1403  ld   $03,y       2440  ld(hi('REENTER'),Y)             #23
              0469 e0cb  jmp  y,$cb       2441  jmp(Y,'REENTER')                #24
              046a 00f2  ld   $f2         2442  ld(-28/2)                       #25
                                          2443
                                          2444  # DEEK implementation
                                          2445  label('deek#13')
deek#13:      046b 0116  ld   [$16]       2446  ld([vPC])                       #13
              046c a001  suba $01         2447  suba(1)                         #14
              046d c216  st   [$16]       2448  st([vPC])                       #15
              046e 1118  ld   [$18],x     2449  ld([vAC],X)                     #16
              046f 1519  ld   [$19],y     2450  ld([vAC+1],Y)                   #17
              0470 0d00  ld   [y,x]       2451  ld([Y,X])                       #18
              0471 de00  st   [y,x++]     2452  st([Y,Xpp])                     #19 Just X++
              0472 c218  st   [$18]       2453  st([vAC])                       #20
              0473 0d00  ld   [y,x]       2454  ld([Y,X])                       #21
              0474 1403  ld   $03,y       2455  ld(hi('REENTER_28'),Y)          #22
              0475 e0ca  jmp  y,$ca       2456  jmp(Y,'REENTER_28')             #23
              0476 c219  st   [$19]       2457  st([vAC+1])                     #24
                                          2458
                                          2459  # ANDW implementation
                                          2460  label('andw#13')
andw#13:      0477 1200  ld   ac,x        2461  ld(AC,X)                        #13
              0478 1400  ld   $00,y       2462  ld(0,Y)                         #14
              0479 0500  ld   [x]         2463  ld([X])                         #15
              047a de00  st   [y,x++]     2464  st([Y,Xpp])                     #16
              047b 2118  anda [$18]       2465  anda([vAC])                     #17
              047c c218  st   [$18]       2466  st([vAC])                       #18
              047d 0500  ld   [x]         2467  ld([X])                         #19
              047e 2119  anda [$19]       2468  anda([vAC+1])                   #20
              047f c219  st   [$19]       2469  st([vAC+1])                     #21
              0480 1403  ld   $03,y       2470  ld(hi('NEXTY'),Y)               #22
              0481 e000  jmp  y,$00       2471  jmp(Y,'NEXTY')                  #23
              0482 00f3  ld   $f3         2472  ld(-26/2)                       #24
                                          2473
                                          2474  # ORW implementation
                                          2475  label('orw#13')
orw#13:       0483 1200  ld   ac,x        2476  ld(AC,X)                        #13
              0484 1400  ld   $00,y       2477  ld(0,Y)                         #14
              0485 0500  ld   [x]         2478  ld([X])                         #15
              0486 de00  st   [y,x++]     2479  st([Y,Xpp])                     #16
              0487 4118  ora  [$18]       2480  ora([vAC])                      #17
              0488 c218  st   [$18]       2481  st([vAC])                       #18
              0489 0500  ld   [x]         2482  ld([X])                         #19
              048a 4119  ora  [$19]       2483  ora([vAC+1])                    #20
              048b c219  st   [$19]       2484  st([vAC+1])                     #21
              048c 1403  ld   $03,y       2485  ld(hi('NEXTY'),Y)               #22
              048d e000  jmp  y,$00       2486  jmp(Y,'NEXTY')                  #23
              048e 00f3  ld   $f3         2487  ld(-26/2)                       #24
                                          2488
                                          2489  # PEEK+ implementation
                                          2490  label('peek+#13')
peek+#13:     048f 1400  ld   $00,y       2491  ld(0,Y)                         #13
              0490 1200  ld   ac,x        2492  ld(AC,X)                        #14
              0491 0500  ld   [x]         2493  ld([X])                         #15 low byte peek address
              0492 c21d  st   [$1d]       2494  st([vTmp])                      #16
              0493 8001  adda $01         2495  adda(1)                         #17
              0494 de00  st   [y,x++]     2496  st([Y,Xpp])                     #18
              0495 0500  ld   [x]         2497  ld([X])                         #19 high byte peek address
              0496 1600  ld   ac,y        2498  ld(AC,Y)                        #20
              0497 111d  ld   [$1d],x     2499  ld([vTmp],X)                    #21
              0498 0d00  ld   [y,x]       2500  ld([Y,X])                       #22
              0499 c218  st   [$18]       2501  st([vAC])                       #23
              049a 0000  ld   $00         2502  ld(0)                           #24
              049b c219  st   [$19]       2503  st([vAC+1])                     #25
              049c 1403  ld   $03,y       2504  ld(hi('NEXTY'),Y)               #26
              049d e000  jmp  y,$00       2505  jmp(Y,'NEXTY')                  #27
              049e 00f1  ld   $f1         2506  ld(-30/2)                       #28
                                          2507
              049f 0200  nop              2508  fillers(until=0xa7)
              04a0 0200  nop
              04a1 0200  nop
              * 8 times
                                          2509
                                          2510  # pc = 0x04a7
                                          2511  #-----------------------------------------------------------------------
                                          2512  #
                                          2513  #  vCPU extension functions (for acceleration and compaction) follow below.
                                          2514  #
                                          2515  #  The naming convention is: SYS_<CamelCase>[_v<V>]_<N>
                                          2516  #
                                          2517  #  With <N> the maximum number of cycles the function will run
                                          2518  #  (counted from NEXT to NEXT). This is the same number that must
                                          2519  #  be passed to the 'SYS' vCPU instruction as operand, and it will
                                          2520  #  appear in the GCL code upon use.
                                          2521  #
                                          2522  #  If a SYS extension got introduced after ROM v1, the version number of
                                          2523  #  introduction is included in the name. This helps the programmer to be
                                          2524  #  reminded to verify the acutal ROM version and fail gracefully on older
                                          2525  #  ROMs than required. See also Docs/GT1-files.txt on using [romType].
                                          2526  #
                                          2527  #-----------------------------------------------------------------------
                                          2528
                                          2529  #-----------------------------------------------------------------------
                                          2530  # Extension SYS_Random_34: Update entropy and copy to vAC
                                          2531  #-----------------------------------------------------------------------
                                          2532
                                          2533  # This same algorithm runs automatically once per vertical blank.
                                          2534  # Use this function to get numbers at a higher rate.
                                          2535  #
                                          2536  # Variables:
                                          2537  #       vAC
                                          2538
                                          2539  label('SYS_Random_34')
SYS_Random_34:
              04a7 010e  ld   [$0e]       2540  ld([frameCount])                #15
              04a8 6107  xora [$07]       2541  xora([entropy+1])               #16
              04a9 610f  xora [$0f]       2542  xora([serialRaw])               #17
              04aa 8106  adda [$06]       2543  adda([entropy+0])               #18
              04ab c206  st   [$06]       2544  st([entropy+0])                 #19
              04ac c218  st   [$18]       2545  st([vAC+0])                     #20
              04ad 8108  adda [$08]       2546  adda([entropy+2])               #21
              04ae c208  st   [$08]       2547  st([entropy+2])                 #22
              04af e8b2  blt  .sysRnd0    2548  bmi('.sysRnd0')                 #23
              04b0 fcb3  bra  .sysRnd1    2549  bra('.sysRnd1')                 #24
              04b1 6053  xora $53         2550  xora(64+16+2+1)                 #25
                                          2551  label('.sysRnd0')
.sysRnd0:     04b2 606c  xora $6c         2552  xora(64+32+8+4)                 #25
                                          2553  label('.sysRnd1')
.sysRnd1:     04b3 8107  adda [$07]       2554  adda([entropy+1])               #26
              04b4 c207  st   [$07]       2555  st([entropy+1])                 #27
              04b5 c219  st   [$19]       2556  st([vAC+1])                     #28
              04b6 1403  ld   $03,y       2557  ld(hi('REENTER'),Y)             #29
              04b7 e0cb  jmp  y,$cb       2558  jmp(Y,'REENTER')                #30
              04b8 00ef  ld   $ef         2559  ld(-34/2)                       #31
                                          2560
                                          2561  label('SYS_LSRW7_30')
SYS_LSRW7_30: 04b9 0118  ld   [$18]       2562  ld([vAC])                       #15
              04ba 3080  anda $80,x       2563  anda(128,X)                     #16
              04bb 0119  ld   [$19]       2564  ld([vAC+1])                     #17
              04bc 8200  adda ac          2565  adda(AC)                        #18
              04bd 4500  ora  [x]         2566  ora([X])                        #19
              04be c218  st   [$18]       2567  st([vAC])                       #20
              04bf 0119  ld   [$19]       2568  ld([vAC+1])                     #21
              04c0 3080  anda $80,x       2569  anda(128,X)                     #22
              04c1 0500  ld   [x]         2570  ld([X])                         #23
              04c2 c219  st   [$19]       2571  st([vAC+1])                     #24
              04c3 1403  ld   $03,y       2572  ld(hi('REENTER'),Y)             #25
              04c4 e0cb  jmp  y,$cb       2573  jmp(Y,'REENTER')                #26
              04c5 00f1  ld   $f1         2574  ld(-30/2)                       #27
                                          2575
                                          2576  label('SYS_LSRW8_24')
SYS_LSRW8_24: 04c6 0119  ld   [$19]       2577  ld([vAC+1])                     #15
              04c7 c218  st   [$18]       2578  st([vAC])                       #16
              04c8 0000  ld   $00         2579  ld(0)                           #17
              04c9 c219  st   [$19]       2580  st([vAC+1])                     #18
              04ca 1403  ld   $03,y       2581  ld(hi('REENTER'),Y)             #19
              04cb e0cb  jmp  y,$cb       2582  jmp(Y,'REENTER')                #20
              04cc 00f4  ld   $f4         2583  ld(-24/2)                       #21
                                          2584
                                          2585  label('SYS_LSLW8_24')
SYS_LSLW8_24: 04cd 0118  ld   [$18]       2586  ld([vAC])                       #15
              04ce c219  st   [$19]       2587  st([vAC+1])                     #16
              04cf 0000  ld   $00         2588  ld(0)                           #17
              04d0 c218  st   [$18]       2589  st([vAC])                       #18
              04d1 1403  ld   $03,y       2590  ld(hi('REENTER'),Y)             #19
              04d2 e0cb  jmp  y,$cb       2591  jmp(Y,'REENTER')                #20
              04d3 00f4  ld   $f4         2592  ld(-24/2)                       #21
                                          2593
                                          2594  #-----------------------------------------------------------------------
                                          2595  # Extension SYS_Draw4_30
                                          2596  #-----------------------------------------------------------------------
                                          2597
                                          2598  # Draw 4 pixels on screen, horizontally next to each other
                                          2599  #
                                          2600  # Variables:
                                          2601  #       sysArgs[0:3]    Pixels (in)
                                          2602  #       sysArgs[4:5]    Position on screen (in)
                                          2603
                                          2604  label('SYS_Draw4_30')
SYS_Draw4_30: 04d4 1128  ld   [$28],x     2605  ld([sysArgs+4],X)               #15
              04d5 1529  ld   [$29],y     2606  ld([sysArgs+5],Y)               #16
              04d6 0124  ld   [$24]       2607  ld([sysArgs+0])                 #17
              04d7 de00  st   [y,x++]     2608  st([Y,Xpp])                     #18
              04d8 0125  ld   [$25]       2609  ld([sysArgs+1])                 #19
              04d9 de00  st   [y,x++]     2610  st([Y,Xpp])                     #20
              04da 0126  ld   [$26]       2611  ld([sysArgs+2])                 #21
              04db de00  st   [y,x++]     2612  st([Y,Xpp])                     #22
              04dc 0127  ld   [$27]       2613  ld([sysArgs+3])                 #23
              04dd de00  st   [y,x++]     2614  st([Y,Xpp])                     #24
              04de 1403  ld   $03,y       2615  ld(hi('REENTER'),Y)             #25
              04df e0cb  jmp  y,$cb       2616  jmp(Y,'REENTER')                #26
              04e0 00f1  ld   $f1         2617  ld(-30/2)                       #27
                                          2618
                                          2619  #-----------------------------------------------------------------------
                                          2620  # Extension SYS_VDrawBits_134:
                                          2621  #-----------------------------------------------------------------------
                                          2622
                                          2623  # Draw slice of a character, 8 pixels vertical
                                          2624  #
                                          2625  # Variables:
                                          2626  #       sysArgs[0]      Color 0 "background" (in)
                                          2627  #       sysArgs[1]      Color 1 "pen" (in)
                                          2628  #       sysArgs[2]      8 bits, highest bit first (in, changed)
                                          2629  #       sysArgs[4:5]    Position on screen (in)
                                          2630
                                          2631  label('SYS_VDrawBits_134')
SYS_VDrawBits_134:
              04e1 1412  ld   $12,y       2632  ld(hi('sys_VDrawBits'),Y)       #15
              04e2 e093  jmp  y,$93       2633  jmp(Y,'sys_VDrawBits')          #16
              04e3 1128  ld   [$28],x     2634  ld([sysArgs+4],X)               #17
                                          2635
                                          2636  #-----------------------------------------------------------------------
                                          2637
                                          2638  # Interrupt handler:
                                          2639  #       STW  $xx        -> optionally store vCpuSelect
                                          2640  #       ... IRQ payload ...
                                          2641  # either:
                                          2642  #       LDWI $400
                                          2643  #       LUP  0          -> vRTI and don't switch interpreter (immediate resume)
                                          2644  # or:
                                          2645  #       LDWI $400
                                          2646  #       LUP  $xx        -> vRTI and switch interpreter type as stored in [$xx]
              04e4 0200  nop              2647  fillers(until=251-13)
              04e5 0200  nop
              04e6 0200  nop
              * 10 times
                                          2648  label('vRTI#15')
vRTI#15:      04ee 0130  ld   [$30]       2649  ld([0x30])                      #15 Continue with vCPU in the same timeslice (faster)
              04ef c216  st   [$16]       2650  st([vPC])                       #16
              04f0 0131  ld   [$31]       2651  ld([0x31])                      #17
              04f1 c217  st   [$17]       2652  st([vPC+1])                     #18
              04f2 0132  ld   [$32]       2653  ld([0x32])                      #19
              04f3 c218  st   [$18]       2654  st([vAC])                       #20
              04f4 0133  ld   [$33]       2655  ld([0x33])                      #21
              04f5 c219  st   [$19]       2656  st([vAC+1])                     #22
              04f6 0134  ld   [$34]       2657  ld([0x34])                      #23 Restore vCpuSelect for PREFIX
              04f7 c202  st   [$02]       2658  st([vCpuSelect])                #24
              04f8 9401  adda $01,y       2659  adda(1,Y)                       #25 Jump to correct PREFIX page, (or page by default)
              04f9 e0cb  jmp  y,$cb       2660  jmp(Y,'REENTER')                #26
              04fa 00f1  ld   $f1         2661  ld(-30/2)                       #27
                                          2662  # vRTI entry point
                                          2663  assert(pc()&255 == 251)         # The landing offset 251 for LUP trampoline is fixed
              04fb f0ee  beq  vRTI#15     2664  beq('vRTI#15')                  #13 vRTI sequence
              04fc 9001  adda $01,x       2665  adda(1,X)                       #14
              04fd 1412  ld   $12,y       2666  ld(hi('vRTI#18'),Y)             #15 Switch and wait for end of timeslice (slower)
              04fe e022  jmp  y,$22       2667  jmp(Y,'vRTI#18')                #16
              04ff c21d  st   [$1d]       2668  st([vTmp])                      #17
                                          2669
                                          2670  #-----------------------------------------------------------------------
                                          2671  #
                                          2672  #  $0500 ROM page 5-6: Shift table and code
                                          2673  #
                                          2674  #-----------------------------------------------------------------------
                                          2675
                                          2676  align(0x100, size=0x200)
                                          2677
                                          2678  # Lookup table for i>>n, with n in 1..6
                                          2679  # Indexing ix = i & ~b | (b-1), where b = 1<<(n-1)
                                          2680  #       ...
                                          2681  #       ld   <.ret
                                          2682  #       st   [vTmp]
                                          2683  #       ld   >shiftTable,y
                                          2684  #       <calculate ix>
                                          2685  #       jmp  y,ac
                                          2686  #       bra  $ff
                                          2687  # .ret: ...
                                          2688  #
                                          2689  # i >> 7 can be always be done with RAM: [i&128]
                                          2690  #       ...
                                          2691  #       anda $80,x
                                          2692  #       ld   [x]
                                          2693  #       ...
                                          2694
                                          2695  label('shiftTable')
                                          2696  shiftTable = pc()
                                          2697
                                          2698  for ix in range(255):
                                          2699    for n in range(1,7): # Find first zero
                                          2700      if ~ix & (1 << (n-1)):
                                          2701        break
                                          2702    pattern = ['x' if i<n else '1' if ix&(1<<i) else '0' for i in range(8)]
                                          2703    ld(ix>>n); C('0b%s >> %d' % (''.join(reversed(pattern)), n))
shiftTable:   0500 0000  ld   $00         ;0b0000000x >> 1
              0501 0000  ld   $00         ;0b000000xx >> 2
              0502 0001  ld   $01         ;0b0000001x >> 1
              0503 0000  ld   $00         ;0b00000xxx >> 3
              0504 0002  ld   $02         ;0b0000010x >> 1
              0505 0001  ld   $01         ;0b000001xx >> 2
              0506 0003  ld   $03         ;0b0000011x >> 1
              0507 0000  ld   $00         ;0b0000xxxx >> 4
              0508 0004  ld   $04         ;0b0000100x >> 1
              0509 0002  ld   $02         ;0b000010xx >> 2
              050a 0005  ld   $05         ;0b0000101x >> 1
              050b 0001  ld   $01         ;0b00001xxx >> 3
              050c 0006  ld   $06         ;0b0000110x >> 1
              050d 0003  ld   $03         ;0b000011xx >> 2
              050e 0007  ld   $07         ;0b0000111x >> 1
              050f 0000  ld   $00         ;0b000xxxxx >> 5
              0510 0008  ld   $08         ;0b0001000x >> 1
              0511 0004  ld   $04         ;0b000100xx >> 2
              0512 0009  ld   $09         ;0b0001001x >> 1
              0513 0002  ld   $02         ;0b00010xxx >> 3
              0514 000a  ld   $0a         ;0b0001010x >> 1
              0515 0005  ld   $05         ;0b000101xx >> 2
              0516 000b  ld   $0b         ;0b0001011x >> 1
              0517 0001  ld   $01         ;0b0001xxxx >> 4
              0518 000c  ld   $0c         ;0b0001100x >> 1
              0519 0006  ld   $06         ;0b000110xx >> 2
              051a 000d  ld   $0d         ;0b0001101x >> 1
              051b 0003  ld   $03         ;0b00011xxx >> 3
              051c 000e  ld   $0e         ;0b0001110x >> 1
              051d 0007  ld   $07         ;0b000111xx >> 2
              051e 000f  ld   $0f         ;0b0001111x >> 1
              051f 0000  ld   $00         ;0b00xxxxxx >> 6
              0520 0010  ld   $10         ;0b0010000x >> 1
              0521 0008  ld   $08         ;0b001000xx >> 2
              0522 0011  ld   $11         ;0b0010001x >> 1
              0523 0004  ld   $04         ;0b00100xxx >> 3
              0524 0012  ld   $12         ;0b0010010x >> 1
              0525 0009  ld   $09         ;0b001001xx >> 2
              0526 0013  ld   $13         ;0b0010011x >> 1
              0527 0002  ld   $02         ;0b0010xxxx >> 4
              0528 0014  ld   $14         ;0b0010100x >> 1
              0529 000a  ld   $0a         ;0b001010xx >> 2
              052a 0015  ld   $15         ;0b0010101x >> 1
              052b 0005  ld   $05         ;0b00101xxx >> 3
              052c 0016  ld   $16         ;0b0010110x >> 1
              052d 000b  ld   $0b         ;0b001011xx >> 2
              052e 0017  ld   $17         ;0b0010111x >> 1
              052f 0001  ld   $01         ;0b001xxxxx >> 5
              0530 0018  ld   $18         ;0b0011000x >> 1
              0531 000c  ld   $0c         ;0b001100xx >> 2
              0532 0019  ld   $19         ;0b0011001x >> 1
              0533 0006  ld   $06         ;0b00110xxx >> 3
              0534 001a  ld   $1a         ;0b0011010x >> 1
              0535 000d  ld   $0d         ;0b001101xx >> 2
              0536 001b  ld   $1b         ;0b0011011x >> 1
              0537 0003  ld   $03         ;0b0011xxxx >> 4
              0538 001c  ld   $1c         ;0b0011100x >> 1
              0539 000e  ld   $0e         ;0b001110xx >> 2
              053a 001d  ld   $1d         ;0b0011101x >> 1
              053b 0007  ld   $07         ;0b00111xxx >> 3
              053c 001e  ld   $1e         ;0b0011110x >> 1
              053d 000f  ld   $0f         ;0b001111xx >> 2
              053e 001f  ld   $1f         ;0b0011111x >> 1
              053f 0000  ld   $00         ;0b00xxxxxx >> 6
              0540 0020  ld   $20         ;0b0100000x >> 1
              0541 0010  ld   $10         ;0b010000xx >> 2
              0542 0021  ld   $21         ;0b0100001x >> 1
              0543 0008  ld   $08         ;0b01000xxx >> 3
              0544 0022  ld   $22         ;0b0100010x >> 1
              0545 0011  ld   $11         ;0b010001xx >> 2
              0546 0023  ld   $23         ;0b0100011x >> 1
              0547 0004  ld   $04         ;0b0100xxxx >> 4
              0548 0024  ld   $24         ;0b0100100x >> 1
              0549 0012  ld   $12         ;0b010010xx >> 2
              054a 0025  ld   $25         ;0b0100101x >> 1
              054b 0009  ld   $09         ;0b01001xxx >> 3
              054c 0026  ld   $26         ;0b0100110x >> 1
              054d 0013  ld   $13         ;0b010011xx >> 2
              054e 0027  ld   $27         ;0b0100111x >> 1
              054f 0002  ld   $02         ;0b010xxxxx >> 5
              0550 0028  ld   $28         ;0b0101000x >> 1
              0551 0014  ld   $14         ;0b010100xx >> 2
              0552 0029  ld   $29         ;0b0101001x >> 1
              0553 000a  ld   $0a         ;0b01010xxx >> 3
              0554 002a  ld   $2a         ;0b0101010x >> 1
              0555 0015  ld   $15         ;0b010101xx >> 2
              0556 002b  ld   $2b         ;0b0101011x >> 1
              0557 0005  ld   $05         ;0b0101xxxx >> 4
              0558 002c  ld   $2c         ;0b0101100x >> 1
              0559 0016  ld   $16         ;0b010110xx >> 2
              055a 002d  ld   $2d         ;0b0101101x >> 1
              055b 000b  ld   $0b         ;0b01011xxx >> 3
              055c 002e  ld   $2e         ;0b0101110x >> 1
              055d 0017  ld   $17         ;0b010111xx >> 2
              055e 002f  ld   $2f         ;0b0101111x >> 1
              055f 0001  ld   $01         ;0b01xxxxxx >> 6
              0560 0030  ld   $30         ;0b0110000x >> 1
              0561 0018  ld   $18         ;0b011000xx >> 2
              0562 0031  ld   $31         ;0b0110001x >> 1
              0563 000c  ld   $0c         ;0b01100xxx >> 3
              0564 0032  ld   $32         ;0b0110010x >> 1
              0565 0019  ld   $19         ;0b011001xx >> 2
              0566 0033  ld   $33         ;0b0110011x >> 1
              0567 0006  ld   $06         ;0b0110xxxx >> 4
              0568 0034  ld   $34         ;0b0110100x >> 1
              0569 001a  ld   $1a         ;0b011010xx >> 2
              056a 0035  ld   $35         ;0b0110101x >> 1
              056b 000d  ld   $0d         ;0b01101xxx >> 3
              056c 0036  ld   $36         ;0b0110110x >> 1
              056d 001b  ld   $1b         ;0b011011xx >> 2
              056e 0037  ld   $37         ;0b0110111x >> 1
              056f 0003  ld   $03         ;0b011xxxxx >> 5
              0570 0038  ld   $38         ;0b0111000x >> 1
              0571 001c  ld   $1c         ;0b011100xx >> 2
              0572 0039  ld   $39         ;0b0111001x >> 1
              0573 000e  ld   $0e         ;0b01110xxx >> 3
              0574 003a  ld   $3a         ;0b0111010x >> 1
              0575 001d  ld   $1d         ;0b011101xx >> 2
              0576 003b  ld   $3b         ;0b0111011x >> 1
              0577 0007  ld   $07         ;0b0111xxxx >> 4
              0578 003c  ld   $3c         ;0b0111100x >> 1
              0579 001e  ld   $1e         ;0b011110xx >> 2
              057a 003d  ld   $3d         ;0b0111101x >> 1
              057b 000f  ld   $0f         ;0b01111xxx >> 3
              057c 003e  ld   $3e         ;0b0111110x >> 1
              057d 001f  ld   $1f         ;0b011111xx >> 2
              057e 003f  ld   $3f         ;0b0111111x >> 1
              057f 0001  ld   $01         ;0b01xxxxxx >> 6
              0580 0040  ld   $40         ;0b1000000x >> 1
              0581 0020  ld   $20         ;0b100000xx >> 2
              0582 0041  ld   $41         ;0b1000001x >> 1
              0583 0010  ld   $10         ;0b10000xxx >> 3
              0584 0042  ld   $42         ;0b1000010x >> 1
              0585 0021  ld   $21         ;0b100001xx >> 2
              0586 0043  ld   $43         ;0b1000011x >> 1
              0587 0008  ld   $08         ;0b1000xxxx >> 4
              0588 0044  ld   $44         ;0b1000100x >> 1
              0589 0022  ld   $22         ;0b100010xx >> 2
              058a 0045  ld   $45         ;0b1000101x >> 1
              058b 0011  ld   $11         ;0b10001xxx >> 3
              058c 0046  ld   $46         ;0b1000110x >> 1
              058d 0023  ld   $23         ;0b100011xx >> 2
              058e 0047  ld   $47         ;0b1000111x >> 1
              058f 0004  ld   $04         ;0b100xxxxx >> 5
              0590 0048  ld   $48         ;0b1001000x >> 1
              0591 0024  ld   $24         ;0b100100xx >> 2
              0592 0049  ld   $49         ;0b1001001x >> 1
              0593 0012  ld   $12         ;0b10010xxx >> 3
              0594 004a  ld   $4a         ;0b1001010x >> 1
              0595 0025  ld   $25         ;0b100101xx >> 2
              0596 004b  ld   $4b         ;0b1001011x >> 1
              0597 0009  ld   $09         ;0b1001xxxx >> 4
              0598 004c  ld   $4c         ;0b1001100x >> 1
              0599 0026  ld   $26         ;0b100110xx >> 2
              059a 004d  ld   $4d         ;0b1001101x >> 1
              059b 0013  ld   $13         ;0b10011xxx >> 3
              059c 004e  ld   $4e         ;0b1001110x >> 1
              059d 0027  ld   $27         ;0b100111xx >> 2
              059e 004f  ld   $4f         ;0b1001111x >> 1
              059f 0002  ld   $02         ;0b10xxxxxx >> 6
              05a0 0050  ld   $50         ;0b1010000x >> 1
              05a1 0028  ld   $28         ;0b101000xx >> 2
              05a2 0051  ld   $51         ;0b1010001x >> 1
              05a3 0014  ld   $14         ;0b10100xxx >> 3
              05a4 0052  ld   $52         ;0b1010010x >> 1
              05a5 0029  ld   $29         ;0b101001xx >> 2
              05a6 0053  ld   $53         ;0b1010011x >> 1
              05a7 000a  ld   $0a         ;0b1010xxxx >> 4
              05a8 0054  ld   $54         ;0b1010100x >> 1
              05a9 002a  ld   $2a         ;0b101010xx >> 2
              05aa 0055  ld   $55         ;0b1010101x >> 1
              05ab 0015  ld   $15         ;0b10101xxx >> 3
              05ac 0056  ld   $56         ;0b1010110x >> 1
              05ad 002b  ld   $2b         ;0b101011xx >> 2
              05ae 0057  ld   $57         ;0b1010111x >> 1
              05af 0005  ld   $05         ;0b101xxxxx >> 5
              05b0 0058  ld   $58         ;0b1011000x >> 1
              05b1 002c  ld   $2c         ;0b101100xx >> 2
              05b2 0059  ld   $59         ;0b1011001x >> 1
              05b3 0016  ld   $16         ;0b10110xxx >> 3
              05b4 005a  ld   $5a         ;0b1011010x >> 1
              05b5 002d  ld   $2d         ;0b101101xx >> 2
              05b6 005b  ld   $5b         ;0b1011011x >> 1
              05b7 000b  ld   $0b         ;0b1011xxxx >> 4
              05b8 005c  ld   $5c         ;0b1011100x >> 1
              05b9 002e  ld   $2e         ;0b101110xx >> 2
              05ba 005d  ld   $5d         ;0b1011101x >> 1
              05bb 0017  ld   $17         ;0b10111xxx >> 3
              05bc 005e  ld   $5e         ;0b1011110x >> 1
              05bd 002f  ld   $2f         ;0b101111xx >> 2
              05be 005f  ld   $5f         ;0b1011111x >> 1
              05bf 0002  ld   $02         ;0b10xxxxxx >> 6
              05c0 0060  ld   $60         ;0b1100000x >> 1
              05c1 0030  ld   $30         ;0b110000xx >> 2
              05c2 0061  ld   $61         ;0b1100001x >> 1
              05c3 0018  ld   $18         ;0b11000xxx >> 3
              05c4 0062  ld   $62         ;0b1100010x >> 1
              05c5 0031  ld   $31         ;0b110001xx >> 2
              05c6 0063  ld   $63         ;0b1100011x >> 1
              05c7 000c  ld   $0c         ;0b1100xxxx >> 4
              05c8 0064  ld   $64         ;0b1100100x >> 1
              05c9 0032  ld   $32         ;0b110010xx >> 2
              05ca 0065  ld   $65         ;0b1100101x >> 1
              05cb 0019  ld   $19         ;0b11001xxx >> 3
              05cc 0066  ld   $66         ;0b1100110x >> 1
              05cd 0033  ld   $33         ;0b110011xx >> 2
              05ce 0067  ld   $67         ;0b1100111x >> 1
              05cf 0006  ld   $06         ;0b110xxxxx >> 5
              05d0 0068  ld   $68         ;0b1101000x >> 1
              05d1 0034  ld   $34         ;0b110100xx >> 2
              05d2 0069  ld   $69         ;0b1101001x >> 1
              05d3 001a  ld   $1a         ;0b11010xxx >> 3
              05d4 006a  ld   $6a         ;0b1101010x >> 1
              05d5 0035  ld   $35         ;0b110101xx >> 2
              05d6 006b  ld   $6b         ;0b1101011x >> 1
              05d7 000d  ld   $0d         ;0b1101xxxx >> 4
              05d8 006c  ld   $6c         ;0b1101100x >> 1
              05d9 0036  ld   $36         ;0b110110xx >> 2
              05da 006d  ld   $6d         ;0b1101101x >> 1
              05db 001b  ld   $1b         ;0b11011xxx >> 3
              05dc 006e  ld   $6e         ;0b1101110x >> 1
              05dd 0037  ld   $37         ;0b110111xx >> 2
              05de 006f  ld   $6f         ;0b1101111x >> 1
              05df 0003  ld   $03         ;0b11xxxxxx >> 6
              05e0 0070  ld   $70         ;0b1110000x >> 1
              05e1 0038  ld   $38         ;0b111000xx >> 2
              05e2 0071  ld   $71         ;0b1110001x >> 1
              05e3 001c  ld   $1c         ;0b11100xxx >> 3
              05e4 0072  ld   $72         ;0b1110010x >> 1
              05e5 0039  ld   $39         ;0b111001xx >> 2
              05e6 0073  ld   $73         ;0b1110011x >> 1
              05e7 000e  ld   $0e         ;0b1110xxxx >> 4
              05e8 0074  ld   $74         ;0b1110100x >> 1
              05e9 003a  ld   $3a         ;0b111010xx >> 2
              05ea 0075  ld   $75         ;0b1110101x >> 1
              05eb 001d  ld   $1d         ;0b11101xxx >> 3
              05ec 0076  ld   $76         ;0b1110110x >> 1
              05ed 003b  ld   $3b         ;0b111011xx >> 2
              05ee 0077  ld   $77         ;0b1110111x >> 1
              05ef 0007  ld   $07         ;0b111xxxxx >> 5
              05f0 0078  ld   $78         ;0b1111000x >> 1
              05f1 003c  ld   $3c         ;0b111100xx >> 2
              05f2 0079  ld   $79         ;0b1111001x >> 1
              05f3 001e  ld   $1e         ;0b11110xxx >> 3
              05f4 007a  ld   $7a         ;0b1111010x >> 1
              05f5 003d  ld   $3d         ;0b111101xx >> 2
              05f6 007b  ld   $7b         ;0b1111011x >> 1
              05f7 000f  ld   $0f         ;0b1111xxxx >> 4
              05f8 007c  ld   $7c         ;0b1111100x >> 1
              05f9 003e  ld   $3e         ;0b111110xx >> 2
              05fa 007d  ld   $7d         ;0b1111101x >> 1
              05fb 001f  ld   $1f         ;0b11111xxx >> 3
              05fc 007e  ld   $7e         ;0b1111110x >> 1
              05fd 003f  ld   $3f         ;0b111111xx >> 2
              05fe 007f  ld   $7f         ;0b1111111x >> 1
                                          2704
                                          2705  assert pc()&255 == 255
              05ff fd1d  bra  [$1d]       2706  bra([vTmp])                     # Jumps back into next page
                                          2707
                                          2708  label('SYS_LSRW1_48')
                                          2709  assert pc()&255 == 0            # First instruction on this page *must* be a nop
SYS_LSRW1_48: 0600 0200  nop              2710  nop()                           #15
              0601 1405  ld   $05,y       2711  ld(hi('shiftTable'),Y)          #16 Logical shift right 1 bit (X >> 1)
              0602 0008  ld   $08         2712  ld('.sysLsrw1a')                #17 Shift low byte
              0603 c21d  st   [$1d]       2713  st([vTmp])                      #18
              0604 0118  ld   [$18]       2714  ld([vAC])                       #19
              0605 20fe  anda $fe         2715  anda(0b11111110)                #20
              0606 e200  jmp  y,ac        2716  jmp(Y,AC)                       #21
              0607 fcff  bra  $ff         2717  bra(255)                        #22 bra shiftTable+255
                                          2718  label('.sysLsrw1a')
.sysLsrw1a:   0608 c218  st   [$18]       2719  st([vAC])                       #26
              0609 0119  ld   [$19]       2720  ld([vAC+1])                     #27 Transfer bit 8
              060a 2001  anda $01         2721  anda(1)                         #28
              060b 807f  adda $7f         2722  adda(127)                       #29
              060c 2080  anda $80         2723  anda(128)                       #30
              060d 4118  ora  [$18]       2724  ora([vAC])                      #31
              060e c218  st   [$18]       2725  st([vAC])                       #32
              060f 0015  ld   $15         2726  ld('.sysLsrw1b')                #33 Shift high byte
              0610 c21d  st   [$1d]       2727  st([vTmp])                      #34
              0611 0119  ld   [$19]       2728  ld([vAC+1])                     #35
              0612 20fe  anda $fe         2729  anda(0b11111110)                #36
              0613 e200  jmp  y,ac        2730  jmp(Y,AC)                       #37
              0614 fcff  bra  $ff         2731  bra(255)                        #38 bra shiftTable+255
                                          2732  label('.sysLsrw1b')
.sysLsrw1b:   0615 c219  st   [$19]       2733  st([vAC+1])                     #42
              0616 1403  ld   $03,y       2734  ld(hi('REENTER'),Y)             #43
              0617 e0cb  jmp  y,$cb       2735  jmp(Y,'REENTER')                #44
              0618 00e8  ld   $e8         2736  ld(-48/2)                       #45
                                          2737
                                          2738  label('SYS_LSRW2_52')
SYS_LSRW2_52: 0619 1405  ld   $05,y       2739  ld(hi('shiftTable'),Y)          #15 Logical shift right 2 bit (X >> 2)
              061a 0021  ld   $21         2740  ld('.sysLsrw2a')                #16 Shift low byte
              061b c21d  st   [$1d]       2741  st([vTmp])                      #17
              061c 0118  ld   [$18]       2742  ld([vAC])                       #18
              061d 20fc  anda $fc         2743  anda(0b11111100)                #19
              061e 4001  ora  $01         2744  ora( 0b00000001)                #20
              061f e200  jmp  y,ac        2745  jmp(Y,AC)                       #21
              0620 fcff  bra  $ff         2746  bra(255)                        #22 bra shiftTable+255
                                          2747  label('.sysLsrw2a')
.sysLsrw2a:   0621 c218  st   [$18]       2748  st([vAC])                       #26
              0622 0119  ld   [$19]       2749  ld([vAC+1])                     #27 Transfer bit 8:9
              0623 8200  adda ac          2750  adda(AC)                        #28
              0624 8200  adda ac          2751  adda(AC)                        #29
              0625 8200  adda ac          2752  adda(AC)                        #30
              0626 8200  adda ac          2753  adda(AC)                        #31
              0627 8200  adda ac          2754  adda(AC)                        #32
              0628 8200  adda ac          2755  adda(AC)                        #33
              0629 4118  ora  [$18]       2756  ora([vAC])                      #34
              062a c218  st   [$18]       2757  st([vAC])                       #35
              062b 0032  ld   $32         2758  ld('.sysLsrw2b')                #36 Shift high byte
              062c c21d  st   [$1d]       2759  st([vTmp])                      #37
              062d 0119  ld   [$19]       2760  ld([vAC+1])                     #38
              062e 20fc  anda $fc         2761  anda(0b11111100)                #39
              062f 4001  ora  $01         2762  ora( 0b00000001)                #40
              0630 e200  jmp  y,ac        2763  jmp(Y,AC)                       #41
              0631 fcff  bra  $ff         2764  bra(255)                        #42 bra shiftTable+255
                                          2765  label('.sysLsrw2b')
.sysLsrw2b:   0632 c219  st   [$19]       2766  st([vAC+1])                     #46
              0633 1403  ld   $03,y       2767  ld(hi('REENTER'),Y)             #47
              0634 e0cb  jmp  y,$cb       2768  jmp(Y,'REENTER')                #48
              0635 00e6  ld   $e6         2769  ld(-52/2)                       #49
                                          2770
                                          2771  label('SYS_LSRW3_52')
SYS_LSRW3_52: 0636 1405  ld   $05,y       2772  ld(hi('shiftTable'),Y)          #15 Logical shift right 3 bit (X >> 3)
              0637 003e  ld   $3e         2773  ld('.sysLsrw3a')                #16 Shift low byte
              0638 c21d  st   [$1d]       2774  st([vTmp])                      #17
              0639 0118  ld   [$18]       2775  ld([vAC])                       #18
              063a 20f8  anda $f8         2776  anda(0b11111000)                #19
              063b 4003  ora  $03         2777  ora( 0b00000011)                #20
              063c e200  jmp  y,ac        2778  jmp(Y,AC)                       #21
              063d fcff  bra  $ff         2779  bra(255)                        #22 bra shiftTable+255
                                          2780  label('.sysLsrw3a')
.sysLsrw3a:   063e c218  st   [$18]       2781  st([vAC])                       #26
              063f 0119  ld   [$19]       2782  ld([vAC+1])                     #27 Transfer bit 8:10
              0640 8200  adda ac          2783  adda(AC)                        #28
              0641 8200  adda ac          2784  adda(AC)                        #29
              0642 8200  adda ac          2785  adda(AC)                        #30
              0643 8200  adda ac          2786  adda(AC)                        #31
              0644 8200  adda ac          2787  adda(AC)                        #32
              0645 4118  ora  [$18]       2788  ora([vAC])                      #33
              0646 c218  st   [$18]       2789  st([vAC])                       #34
              0647 004e  ld   $4e         2790  ld('.sysLsrw3b')                #35 Shift high byte
              0648 c21d  st   [$1d]       2791  st([vTmp])                      #36
              0649 0119  ld   [$19]       2792  ld([vAC+1])                     #37
              064a 20f8  anda $f8         2793  anda(0b11111000)                #38
              064b 4003  ora  $03         2794  ora( 0b00000011)                #39
              064c e200  jmp  y,ac        2795  jmp(Y,AC)                       #40
              064d fcff  bra  $ff         2796  bra(255)                        #41 bra shiftTable+255
                                          2797  label('.sysLsrw3b')
.sysLsrw3b:   064e c219  st   [$19]       2798  st([vAC+1])                     #45
              064f 00e6  ld   $e6         2799  ld(-52/2)                       #46
              0650 1403  ld   $03,y       2800  ld(hi('REENTER'),Y)             #47
              0651 e0cb  jmp  y,$cb       2801  jmp(Y,'REENTER')                #48
                                          2802  #nop()                          #49
                                          2803
                                          2804  label('SYS_LSRW4_50')
SYS_LSRW4_50: 0652 1405  ld   $05,y       2805  ld(hi('shiftTable'),Y)          #15,49 Logical shift right 4 bit (X >> 4)
              0653 005a  ld   $5a         2806  ld('.sysLsrw4a')                #16 Shift low byte
              0654 c21d  st   [$1d]       2807  st([vTmp])                      #17
              0655 0118  ld   [$18]       2808  ld([vAC])                       #18
              0656 20f0  anda $f0         2809  anda(0b11110000)                #19
              0657 4007  ora  $07         2810  ora( 0b00000111)                #20
              0658 e200  jmp  y,ac        2811  jmp(Y,AC)                       #21
              0659 fcff  bra  $ff         2812  bra(255)                        #22 bra shiftTable+255
                                          2813  label('.sysLsrw4a')
.sysLsrw4a:   065a c218  st   [$18]       2814  st([vAC])                       #26
              065b 0119  ld   [$19]       2815  ld([vAC+1])                     #27 Transfer bit 8:11
              065c 8200  adda ac          2816  adda(AC)                        #28
              065d 8200  adda ac          2817  adda(AC)                        #29
              065e 8200  adda ac          2818  adda(AC)                        #30
              065f 8200  adda ac          2819  adda(AC)                        #31
              0660 4118  ora  [$18]       2820  ora([vAC])                      #32
              0661 c218  st   [$18]       2821  st([vAC])                       #33
              0662 0069  ld   $69         2822  ld('.sysLsrw4b')                #34 Shift high byte'
              0663 c21d  st   [$1d]       2823  st([vTmp])                      #35
              0664 0119  ld   [$19]       2824  ld([vAC+1])                     #36
              0665 20f0  anda $f0         2825  anda(0b11110000)                #37
              0666 4007  ora  $07         2826  ora( 0b00000111)                #38
              0667 e200  jmp  y,ac        2827  jmp(Y,AC)                       #39
              0668 fcff  bra  $ff         2828  bra(255)                        #40 bra shiftTable+255
                                          2829  label('.sysLsrw4b')
.sysLsrw4b:   0669 c219  st   [$19]       2830  st([vAC+1])                     #44
              066a 1403  ld   $03,y       2831  ld(hi('REENTER'),Y)             #45
              066b e0cb  jmp  y,$cb       2832  jmp(Y,'REENTER')                #46
              066c 00e7  ld   $e7         2833  ld(-50/2)                       #47
                                          2834
                                          2835  label('SYS_LSRW5_50')
SYS_LSRW5_50: 066d 1405  ld   $05,y       2836  ld(hi('shiftTable'),Y)          #15 Logical shift right 5 bit (X >> 5)
              066e 0075  ld   $75         2837  ld('.sysLsrw5a')                #16 Shift low byte
              066f c21d  st   [$1d]       2838  st([vTmp])                      #17
              0670 0118  ld   [$18]       2839  ld([vAC])                       #18
              0671 20e0  anda $e0         2840  anda(0b11100000)                #19
              0672 400f  ora  $0f         2841  ora( 0b00001111)                #20
              0673 e200  jmp  y,ac        2842  jmp(Y,AC)                       #21
              0674 fcff  bra  $ff         2843  bra(255)                        #22 bra shiftTable+255
                                          2844  label('.sysLsrw5a')
.sysLsrw5a:   0675 c218  st   [$18]       2845  st([vAC])                       #26
              0676 0119  ld   [$19]       2846  ld([vAC+1])                     #27 Transfer bit 8:13
              0677 8200  adda ac          2847  adda(AC)                        #28
              0678 8200  adda ac          2848  adda(AC)                        #29
              0679 8200  adda ac          2849  adda(AC)                        #30
              067a 4118  ora  [$18]       2850  ora([vAC])                      #31
              067b c218  st   [$18]       2851  st([vAC])                       #32
              067c 0083  ld   $83         2852  ld('.sysLsrw5b')                #33 Shift high byte
              067d c21d  st   [$1d]       2853  st([vTmp])                      #34
              067e 0119  ld   [$19]       2854  ld([vAC+1])                     #35
              067f 20e0  anda $e0         2855  anda(0b11100000)                #36
              0680 400f  ora  $0f         2856  ora( 0b00001111)                #37
              0681 e200  jmp  y,ac        2857  jmp(Y,AC)                       #38
              0682 fcff  bra  $ff         2858  bra(255)                        #39 bra shiftTable+255
                                          2859  label('.sysLsrw5b')
.sysLsrw5b:   0683 c219  st   [$19]       2860  st([vAC+1])                     #44
              0684 00e7  ld   $e7         2861  ld(-50/2)                       #45
              0685 1403  ld   $03,y       2862  ld(hi('REENTER'),Y)             #46
              0686 e0cb  jmp  y,$cb       2863  jmp(Y,'REENTER')                #47
                                          2864  #nop()                          #48
                                          2865
                                          2866  label('SYS_LSRW6_48')
SYS_LSRW6_48: 0687 1405  ld   $05,y       2867  ld(hi('shiftTable'),Y)          #15,44 Logical shift right 6 bit (X >> 6)
              0688 008f  ld   $8f         2868  ld('.sysLsrw6a')                #16 Shift low byte
              0689 c21d  st   [$1d]       2869  st([vTmp])                      #17
              068a 0118  ld   [$18]       2870  ld([vAC])                       #18
              068b 20c0  anda $c0         2871  anda(0b11000000)                #19
              068c 401f  ora  $1f         2872  ora( 0b00011111)                #20
              068d e200  jmp  y,ac        2873  jmp(Y,AC)                       #21
              068e fcff  bra  $ff         2874  bra(255)                        #22 bra shiftTable+255
                                          2875  label('.sysLsrw6a')
.sysLsrw6a:   068f c218  st   [$18]       2876  st([vAC])                       #26
              0690 0119  ld   [$19]       2877  ld([vAC+1])                     #27 Transfer bit 8:13
              0691 8200  adda ac          2878  adda(AC)                        #28
              0692 8200  adda ac          2879  adda(AC)                        #29
              0693 4118  ora  [$18]       2880  ora([vAC])                      #30
              0694 c218  st   [$18]       2881  st([vAC])                       #31
              0695 009c  ld   $9c         2882  ld('.sysLsrw6b')                #32 Shift high byte
              0696 c21d  st   [$1d]       2883  st([vTmp])                      #33
              0697 0119  ld   [$19]       2884  ld([vAC+1])                     #34
              0698 20c0  anda $c0         2885  anda(0b11000000)                #35
              0699 401f  ora  $1f         2886  ora( 0b00011111)                #36
              069a e200  jmp  y,ac        2887  jmp(Y,AC)                       #37
              069b fcff  bra  $ff         2888  bra(255)                        #38 bra shiftTable+255
                                          2889  label('.sysLsrw6b')
.sysLsrw6b:   069c c219  st   [$19]       2890  st([vAC+1])                     #42
              069d 1403  ld   $03,y       2891  ld(hi('REENTER'),Y)             #43
              069e e0cb  jmp  y,$cb       2892  jmp(Y,'REENTER')                #44
              069f 00e8  ld   $e8         2893  ld(-48/2)                       #45
                                          2894
                                          2895  label('SYS_LSLW4_46')
SYS_LSLW4_46: 06a0 1405  ld   $05,y       2896  ld(hi('shiftTable'),Y)          #15 Logical shift left 4 bit (X << 4)
              06a1 00ae  ld   $ae         2897  ld('.sysLsrl4')                 #16
              06a2 c21d  st   [$1d]       2898  st([vTmp])                      #17
              06a3 0119  ld   [$19]       2899  ld([vAC+1])                     #18
              06a4 8200  adda ac          2900  adda(AC)                        #19
              06a5 8200  adda ac          2901  adda(AC)                        #20
              06a6 8200  adda ac          2902  adda(AC)                        #21
              06a7 8200  adda ac          2903  adda(AC)                        #22
              06a8 c219  st   [$19]       2904  st([vAC+1])                     #23
              06a9 0118  ld   [$18]       2905  ld([vAC])                       #24
              06aa 20f0  anda $f0         2906  anda(0b11110000)                #25
              06ab 4007  ora  $07         2907  ora( 0b00000111)                #26
              06ac e200  jmp  y,ac        2908  jmp(Y,AC)                       #27
              06ad fcff  bra  $ff         2909  bra(255)                        #28 bra shiftTable+255
                                          2910  label('.sysLsrl4')
.sysLsrl4:    06ae 4119  ora  [$19]       2911  ora([vAC+1])                    #32
              06af c219  st   [$19]       2912  st([vAC+1])                     #33
              06b0 0118  ld   [$18]       2913  ld([vAC])                       #34
              06b1 8200  adda ac          2914  adda(AC)                        #35
              06b2 8200  adda ac          2915  adda(AC)                        #36
              06b3 8200  adda ac          2916  adda(AC)                        #37
              06b4 8200  adda ac          2917  adda(AC)                        #38
              06b5 c218  st   [$18]       2918  st([vAC])                       #39
              06b6 00e9  ld   $e9         2919  ld(-46/2)                       #40
              06b7 1403  ld   $03,y       2920  ld(hi('REENTER'),Y)             #41
              06b8 e0cb  jmp  y,$cb       2921  jmp(Y,'REENTER')                #42
                                          2922  #nop()                          #43
                                          2923
                                          2924  #-----------------------------------------------------------------------
                                          2925  #       v6502 right shift instruction
                                          2926  #-----------------------------------------------------------------------
                                          2927
                                          2928  label('v6502_lsr#30')
v6502_lsr#30: 06b9 1525  ld   [$25],y     2929  ld([v6502_ADH],Y)               #30 Result
              06ba ce00  st   [y,x]       2930  st([Y,X])                       #31
              06bb c228  st   [$28]       2931  st([v6502_Qz])                  #32 Z flag
              06bc c229  st   [$29]       2932  st([v6502_Qn])                  #33 N flag
              06bd 140e  ld   $0e,y       2933  ld(hi('v6502_next'),Y)          #34
              06be 00ed  ld   $ed         2934  ld(-38/2)                       #35
              06bf e020  jmp  y,$20       2935  jmp(Y,'v6502_next')             #36
                                          2936  #nop()                          #37 Overlap
                                          2937  #
                                          2938  label('v6502_ror#38')
v6502_ror#38: 06c0 1525  ld   [$25],y     2939  ld([v6502_ADH],Y)               #38,38 Result
              06c1 4119  ora  [$19]       2940  ora([v6502_BI])                 #39 Transfer bit 8
              06c2 ce00  st   [y,x]       2941  st([Y,X])                       #40
              06c3 c228  st   [$28]       2942  st([v6502_Qz])                  #41 Z flag
              06c4 c229  st   [$29]       2943  st([v6502_Qn])                  #42 N flag
              06c5 140e  ld   $0e,y       2944  ld(hi('v6502_next'),Y)          #43
              06c6 e020  jmp  y,$20       2945  jmp(Y,'v6502_next')             #44
              06c7 00e9  ld   $e9         2946  ld(-46/2)                       #45
                                          2947
                                          2948  #-----------------------------------------------------------------------
                                          2949  #       vCPU LSRB
                                          2950  #-----------------------------------------------------------------------
                                          2951
                                          2952  label('.lsrb#24')
.lsrb#24:     06c8 c600  st   [x]         2953  st([X])                         #24
              06c9 1403  ld   $03,y       2954  ld(hi('REENTER'),Y)             #25
              06ca e0cb  jmp  y,$cb       2955  jmp(Y,'REENTER')                #26
              06cb 00f1  ld   $f1         2956  ld(-30/2)                       #27
                                          2957
                                          2958  #-----------------------------------------------------------------------
                                          2959  #       vCPU LSRV
                                          2960  #-----------------------------------------------------------------------
                                          2961
                                          2962  label('.lsrv#27')
.lsrv#27:     06cc 142c  ld   $2c,y       2963  ld(hi('.lsrv#30'),Y)            #27
              06cd e053  jmp  y,$53       2964  jmp(Y,'.lsrv#30')               #28
              06ce c600  st   [x]         2965  st([X])                         #29 shifted byte low
                                          2966
                                          2967  label('.lsrv#51')
.lsrv#51:     06cf c600  st   [x]         2968  st([X])                         #51 shifted byte hi
              06d0 1403  ld   $03,y       2969  ld(hi('NEXTY'),Y)               #52
              06d1 e000  jmp  y,$00       2970  jmp(Y,'NEXTY')                  #53
              06d2 00e4  ld   $e4         2971  ld(-56/2)                       #54
                                          2972
                                          2973  #-----------------------------------------------------------------------
                                          2974  #       vCPU LSRVL
                                          2975  #-----------------------------------------------------------------------
                                          2976
                                          2977  label('.lsrvl#26')
.lsrvl#26:    06d3 142c  ld   $2c,y       2978  ld(hi('.lsrvl#29'),Y)           #26
              06d4 e075  jmp  y,$75       2979  jmp(Y,'.lsrvl#29')              #27
              06d5 c600  st   [x]         2980  st([X])                         #28 shifted byte 0
                                          2981
                                          2982  label('.lsrvl#54')
.lsrvl#54:    06d6 142c  ld   $2c,y       2983  ld(hi('.lsrvl#57'),Y)           #54
              06d7 e08b  jmp  y,$8b       2984  jmp(Y,'.lsrvl#57')              #55
              06d8 c600  st   [x]         2985  st([X])                         #56 shifted byte 1
                                          2986
                                          2987  label('.lsrvl#76')
.lsrvl#76:    06d9 142c  ld   $2c,y       2988  ld(hi('.lsrvl#79'),Y)           #76
              06da e09b  jmp  y,$9b       2989  jmp(Y,'.lsrvl#79')              #77
              06db c600  st   [x]         2990  st([X])                         #78 shifted byte 2
                                          2991
                                          2992  label('.lsrvl#98')
.lsrvl#98:    06dc c600  st   [x]         2993  st([X])                         #98 shifted byte 3
              06dd 1403  ld   $03,y       2994  ld(hi('REENTER'),Y)             #99
              06de e0cb  jmp  y,$cb       2995  jmp(Y,'REENTER')                #100
              06df 00cc  ld   $cc         2996  ld(-104/2)                      #101
                                          2997
                                          2998
                                          2999  #-----------------------------------------------------------------------
                                          3000  #
                                          3001  #  $0700 ROM page 7-8: Gigatron font data
                                          3002  #
                                          3003  #-----------------------------------------------------------------------
                                          3004
              06e0 0200  nop              3005  align(0x100, size=0x100)
              06e1 0200  nop
              06e2 0200  nop
              * 32 times
                                          3006
                                          3007  label('font32up')
                                          3008  for ch in range(32, 32+50):
                                          3009    comment = 'Char %s' % repr(chr(ch))
                                          3010    for byte in font.font[ch-32]:
                                          3011      ld(byte)
font32up:     0700 0000  ld   $00         ;Char ' '
              0701 0000  ld   $00
              0702 0000  ld   $00
              * 5 times
              0705 0000  ld   $00         ;Char '!'
              0706 0000  ld   $00
              0707 00fa  ld   $fa
              0708 0000  ld   $00
              0709 0000  ld   $00
              070a 00a0  ld   $a0         ;Char '"'
              070b 00c0  ld   $c0
              070c 0000  ld   $00
              070d 00a0  ld   $a0
              070e 00c0  ld   $c0
              070f 0028  ld   $28         ;Char '#'
              0710 00fe  ld   $fe
              0711 0028  ld   $28
              0712 00fe  ld   $fe
              0713 0028  ld   $28
              0714 0024  ld   $24         ;Char '$'
              0715 0054  ld   $54
              0716 00fe  ld   $fe
              0717 0054  ld   $54
              0718 0048  ld   $48
              0719 00c4  ld   $c4         ;Char '%'
              071a 00c8  ld   $c8
              071b 0010  ld   $10
              071c 0026  ld   $26
              071d 0046  ld   $46
              071e 006c  ld   $6c         ;Char '&'
              071f 0092  ld   $92
              0720 006a  ld   $6a
              0721 0004  ld   $04
              0722 000a  ld   $0a
              0723 0000  ld   $00         ;Char "'"
              0724 00a0  ld   $a0
              0725 00c0  ld   $c0
              0726 0000  ld   $00
              0727 0000  ld   $00
              0728 0000  ld   $00         ;Char '('
              0729 0038  ld   $38
              072a 0044  ld   $44
              072b 0082  ld   $82
              072c 0000  ld   $00
              072d 0000  ld   $00         ;Char ')'
              072e 0082  ld   $82
              072f 0044  ld   $44
              0730 0038  ld   $38
              0731 0000  ld   $00
              0732 0028  ld   $28         ;Char '*'
              0733 0010  ld   $10
              0734 007c  ld   $7c
              0735 0010  ld   $10
              0736 0028  ld   $28
              0737 0010  ld   $10         ;Char '+'
              0738 0010  ld   $10
              0739 007c  ld   $7c
              073a 0010  ld   $10
              073b 0010  ld   $10
              073c 0000  ld   $00         ;Char ','
              073d 0005  ld   $05
              073e 0006  ld   $06
              073f 0000  ld   $00
              0740 0000  ld   $00
              0741 0010  ld   $10         ;Char '-'
              0742 0010  ld   $10
              0743 0010  ld   $10
              * 5 times
              0746 0000  ld   $00         ;Char '.'
              0747 0002  ld   $02
              0748 0002  ld   $02
              0749 0000  ld   $00
              074a 0000  ld   $00
              074b 0000  ld   $00         ;Char '/'
              074c 0006  ld   $06
              074d 0018  ld   $18
              074e 0060  ld   $60
              074f 0000  ld   $00
              0750 007c  ld   $7c         ;Char '0'
              0751 008a  ld   $8a
              0752 0092  ld   $92
              0753 00a2  ld   $a2
              0754 007c  ld   $7c
              0755 0022  ld   $22         ;Char '1'
              0756 0042  ld   $42
              0757 00fe  ld   $fe
              0758 0002  ld   $02
              0759 0002  ld   $02
              075a 0046  ld   $46         ;Char '2'
              075b 008a  ld   $8a
              075c 0092  ld   $92
              075d 0092  ld   $92
              075e 0062  ld   $62
              075f 0044  ld   $44         ;Char '3'
              0760 0082  ld   $82
              0761 0092  ld   $92
              0762 0092  ld   $92
              0763 006c  ld   $6c
              0764 0018  ld   $18         ;Char '4'
              0765 0028  ld   $28
              0766 0048  ld   $48
              0767 00fe  ld   $fe
              0768 0008  ld   $08
              0769 00e4  ld   $e4         ;Char '5'
              076a 00a2  ld   $a2
              076b 00a2  ld   $a2
              076c 00a2  ld   $a2
              076d 009c  ld   $9c
              076e 003c  ld   $3c         ;Char '6'
              076f 0052  ld   $52
              0770 0092  ld   $92
              0771 0092  ld   $92
              0772 000c  ld   $0c
              0773 0080  ld   $80         ;Char '7'
              0774 008e  ld   $8e
              0775 0090  ld   $90
              0776 00a0  ld   $a0
              0777 00c0  ld   $c0
              0778 006c  ld   $6c         ;Char '8'
              0779 0092  ld   $92
              077a 0092  ld   $92
              077b 0092  ld   $92
              077c 006c  ld   $6c
              077d 0060  ld   $60         ;Char '9'
              077e 0092  ld   $92
              077f 0092  ld   $92
              0780 0094  ld   $94
              0781 0078  ld   $78
              0782 0000  ld   $00         ;Char ':'
              0783 0024  ld   $24
              0784 0024  ld   $24
              0785 0000  ld   $00
              0786 0000  ld   $00
              0787 0000  ld   $00         ;Char ';'
              0788 0025  ld   $25
              0789 0026  ld   $26
              078a 0000  ld   $00
              078b 0000  ld   $00
              078c 0010  ld   $10         ;Char '<'
              078d 0028  ld   $28
              078e 0044  ld   $44
              078f 0082  ld   $82
              0790 0000  ld   $00
              0791 0028  ld   $28         ;Char '='
              0792 0028  ld   $28
              0793 0028  ld   $28
              * 5 times
              0796 0000  ld   $00         ;Char '>'
              0797 0082  ld   $82
              0798 0044  ld   $44
              0799 0028  ld   $28
              079a 0010  ld   $10
              079b 0040  ld   $40         ;Char '?'
              079c 0080  ld   $80
              079d 008a  ld   $8a
              079e 0090  ld   $90
              079f 0060  ld   $60
              07a0 007c  ld   $7c         ;Char '@'
              07a1 0082  ld   $82
              07a2 00ba  ld   $ba
              07a3 00aa  ld   $aa
              07a4 0078  ld   $78
              07a5 003e  ld   $3e         ;Char 'A'
              07a6 0048  ld   $48
              07a7 0088  ld   $88
              07a8 0048  ld   $48
              07a9 003e  ld   $3e
              07aa 00fe  ld   $fe         ;Char 'B'
              07ab 0092  ld   $92
              07ac 0092  ld   $92
              07ad 0092  ld   $92
              07ae 006c  ld   $6c
              07af 007c  ld   $7c         ;Char 'C'
              07b0 0082  ld   $82
              07b1 0082  ld   $82
              07b2 0082  ld   $82
              07b3 0044  ld   $44
              07b4 00fe  ld   $fe         ;Char 'D'
              07b5 0082  ld   $82
              07b6 0082  ld   $82
              07b7 0044  ld   $44
              07b8 0038  ld   $38
              07b9 00fe  ld   $fe         ;Char 'E'
              07ba 0092  ld   $92
              07bb 0092  ld   $92
              07bc 0092  ld   $92
              07bd 0082  ld   $82
              07be 00fe  ld   $fe         ;Char 'F'
              07bf 0090  ld   $90
              07c0 0090  ld   $90
              07c1 0090  ld   $90
              07c2 0080  ld   $80
              07c3 007c  ld   $7c         ;Char 'G'
              07c4 0082  ld   $82
              07c5 0082  ld   $82
              07c6 0092  ld   $92
              07c7 005c  ld   $5c
              07c8 00fe  ld   $fe         ;Char 'H'
              07c9 0010  ld   $10
              07ca 0010  ld   $10
              07cb 0010  ld   $10
              07cc 00fe  ld   $fe
              07cd 0000  ld   $00         ;Char 'I'
              07ce 0082  ld   $82
              07cf 00fe  ld   $fe
              07d0 0082  ld   $82
              07d1 0000  ld   $00
              07d2 0004  ld   $04         ;Char 'J'
              07d3 0002  ld   $02
              07d4 0082  ld   $82
              07d5 00fc  ld   $fc
              07d6 0080  ld   $80
              07d7 00fe  ld   $fe         ;Char 'K'
              07d8 0010  ld   $10
              07d9 0028  ld   $28
              07da 0044  ld   $44
              07db 0082  ld   $82
              07dc 00fe  ld   $fe         ;Char 'L'
              07dd 0002  ld   $02
              07de 0002  ld   $02
              07df 0002  ld   $02
              07e0 0002  ld   $02
              07e1 00fe  ld   $fe         ;Char 'M'
              07e2 0040  ld   $40
              07e3 0030  ld   $30
              07e4 0040  ld   $40
              07e5 00fe  ld   $fe
              07e6 00fe  ld   $fe         ;Char 'N'
              07e7 0020  ld   $20
              07e8 0010  ld   $10
              07e9 0008  ld   $08
              07ea 00fe  ld   $fe
              07eb 007c  ld   $7c         ;Char 'O'
              07ec 0082  ld   $82
              07ed 0082  ld   $82
              07ee 0082  ld   $82
              07ef 007c  ld   $7c
              07f0 00fe  ld   $fe         ;Char 'P'
              07f1 0090  ld   $90
              07f2 0090  ld   $90
              07f3 0090  ld   $90
              07f4 0060  ld   $60
              07f5 007c  ld   $7c         ;Char 'Q'
              07f6 0082  ld   $82
              07f7 008a  ld   $8a
              07f8 0084  ld   $84
              07f9 007a  ld   $7a
                                          3012      comment = C(comment)
                                          3013
              07fa 0200  nop              3014  trampoline()
              07fb fe00  bra  ac          ;+-----------------------------------+
              07fc fcfd  bra  $07fd       ;|                                   |
              07fd 1418  ld   $18,y       ;| Trampoline for page $0700 lookups |
              07fe e006  jmp  y,$06       ;|                                   |
              07ff c218  st   [$18]       ;+-----------------------------------+
                                          3015
                                          3016  #-----------------------------------------------------------------------
                                          3017
                                          3018  align(0x100, size=0x100)
                                          3019
                                          3020  label('font82up')
                                          3021  for ch in range(32+50, 132):
                                          3022    comment = 'Char %s' % repr(chr(ch))
                                          3023    for byte in font.font[ch-32]:
                                          3024      ld(byte)
font82up:     0800 00fe  ld   $fe         ;Char 'R'
              0801 0090  ld   $90
              0802 0098  ld   $98
              0803 0094  ld   $94
              0804 0062  ld   $62
              0805 0062  ld   $62         ;Char 'S'
              0806 0092  ld   $92
              0807 0092  ld   $92
              0808 0092  ld   $92
              0809 000c  ld   $0c
              080a 0080  ld   $80         ;Char 'T'
              080b 0080  ld   $80
              080c 00fe  ld   $fe
              080d 0080  ld   $80
              080e 0080  ld   $80
              080f 00fc  ld   $fc         ;Char 'U'
              0810 0002  ld   $02
              0811 0002  ld   $02
              0812 0002  ld   $02
              0813 00fc  ld   $fc
              0814 00f0  ld   $f0         ;Char 'V'
              0815 000c  ld   $0c
              0816 0002  ld   $02
              0817 000c  ld   $0c
              0818 00f0  ld   $f0
              0819 00fe  ld   $fe         ;Char 'W'
              081a 0004  ld   $04
              081b 0018  ld   $18
              081c 0004  ld   $04
              081d 00fe  ld   $fe
              081e 00c6  ld   $c6         ;Char 'X'
              081f 0028  ld   $28
              0820 0010  ld   $10
              0821 0028  ld   $28
              0822 00c6  ld   $c6
              0823 00e0  ld   $e0         ;Char 'Y'
              0824 0010  ld   $10
              0825 000e  ld   $0e
              0826 0010  ld   $10
              0827 00e0  ld   $e0
              0828 0086  ld   $86         ;Char 'Z'
              0829 008a  ld   $8a
              082a 0092  ld   $92
              082b 00a2  ld   $a2
              082c 00c2  ld   $c2
              082d 0000  ld   $00         ;Char '['
              082e 00fe  ld   $fe
              082f 0082  ld   $82
              0830 0082  ld   $82
              0831 0000  ld   $00
              0832 0000  ld   $00         ;Char '\\'
              0833 0060  ld   $60
              0834 0018  ld   $18
              0835 0006  ld   $06
              0836 0000  ld   $00
              0837 0000  ld   $00         ;Char ']'
              0838 0082  ld   $82
              0839 0082  ld   $82
              083a 00fe  ld   $fe
              083b 0000  ld   $00
              083c 0020  ld   $20         ;Char '^'
              083d 0040  ld   $40
              083e 0080  ld   $80
              083f 0040  ld   $40
              0840 0020  ld   $20
              0841 0002  ld   $02         ;Char '_'
              0842 0002  ld   $02
              0843 0002  ld   $02
              * 5 times
              0846 0000  ld   $00         ;Char '`'
              0847 0000  ld   $00
              0848 00c0  ld   $c0
              0849 00a0  ld   $a0
              084a 0000  ld   $00
              084b 0004  ld   $04         ;Char 'a'
              084c 002a  ld   $2a
              084d 002a  ld   $2a
              084e 002a  ld   $2a
              084f 001e  ld   $1e
              0850 00fe  ld   $fe         ;Char 'b'
              0851 0022  ld   $22
              0852 0022  ld   $22
              0853 0022  ld   $22
              0854 001c  ld   $1c
              0855 001c  ld   $1c         ;Char 'c'
              0856 0022  ld   $22
              0857 0022  ld   $22
              0858 0022  ld   $22
              0859 0002  ld   $02
              085a 001c  ld   $1c         ;Char 'd'
              085b 0022  ld   $22
              085c 0022  ld   $22
              085d 0022  ld   $22
              085e 00fe  ld   $fe
              085f 001c  ld   $1c         ;Char 'e'
              0860 002a  ld   $2a
              0861 002a  ld   $2a
              0862 002a  ld   $2a
              0863 0018  ld   $18
              0864 0010  ld   $10         ;Char 'f'
              0865 007e  ld   $7e
              0866 0090  ld   $90
              0867 0080  ld   $80
              0868 0040  ld   $40
              0869 0018  ld   $18         ;Char 'g'
              086a 0025  ld   $25
              086b 0025  ld   $25
              086c 0025  ld   $25
              086d 001e  ld   $1e
              086e 00fe  ld   $fe         ;Char 'h'
              086f 0020  ld   $20
              0870 0020  ld   $20
              0871 0020  ld   $20
              0872 001e  ld   $1e
              0873 0000  ld   $00         ;Char 'i'
              0874 0022  ld   $22
              0875 00be  ld   $be
              0876 0002  ld   $02
              0877 0000  ld   $00
              0878 0002  ld   $02         ;Char 'j'
              0879 0001  ld   $01
              087a 0021  ld   $21
              087b 00be  ld   $be
              087c 0000  ld   $00
              087d 00fe  ld   $fe         ;Char 'k'
              087e 0008  ld   $08
              087f 0018  ld   $18
              0880 0024  ld   $24
              0881 0002  ld   $02
              0882 0000  ld   $00         ;Char 'l'
              0883 0082  ld   $82
              0884 00fe  ld   $fe
              0885 0002  ld   $02
              0886 0000  ld   $00
              0887 003e  ld   $3e         ;Char 'm'
              0888 0020  ld   $20
              0889 001c  ld   $1c
              088a 0020  ld   $20
              088b 001e  ld   $1e
              088c 003e  ld   $3e         ;Char 'n'
              088d 0010  ld   $10
              088e 0020  ld   $20
              088f 0020  ld   $20
              0890 001e  ld   $1e
              0891 001c  ld   $1c         ;Char 'o'
              0892 0022  ld   $22
              0893 0022  ld   $22
              0894 0022  ld   $22
              0895 001c  ld   $1c
              0896 003f  ld   $3f         ;Char 'p'
              0897 0024  ld   $24
              0898 0024  ld   $24
              0899 0024  ld   $24
              089a 0018  ld   $18
              089b 0018  ld   $18         ;Char 'q'
              089c 0024  ld   $24
              089d 0024  ld   $24
              089e 0024  ld   $24
              089f 003f  ld   $3f
              08a0 003e  ld   $3e         ;Char 'r'
              08a1 0010  ld   $10
              08a2 0020  ld   $20
              08a3 0020  ld   $20
              08a4 0010  ld   $10
              08a5 0012  ld   $12         ;Char 's'
              08a6 002a  ld   $2a
              08a7 002a  ld   $2a
              08a8 002a  ld   $2a
              08a9 0004  ld   $04
              08aa 0020  ld   $20         ;Char 't'
              08ab 00fc  ld   $fc
              08ac 0022  ld   $22
              08ad 0002  ld   $02
              08ae 0004  ld   $04
              08af 003c  ld   $3c         ;Char 'u'
              08b0 0002  ld   $02
              08b1 0002  ld   $02
              08b2 0004  ld   $04
              08b3 003e  ld   $3e
              08b4 0038  ld   $38         ;Char 'v'
              08b5 0004  ld   $04
              08b6 0002  ld   $02
              08b7 0004  ld   $04
              08b8 0038  ld   $38
              08b9 003c  ld   $3c         ;Char 'w'
              08ba 0002  ld   $02
              08bb 000c  ld   $0c
              08bc 0002  ld   $02
              08bd 003c  ld   $3c
              08be 0022  ld   $22         ;Char 'x'
              08bf 0014  ld   $14
              08c0 0008  ld   $08
              08c1 0014  ld   $14
              08c2 0022  ld   $22
              08c3 0038  ld   $38         ;Char 'y'
              08c4 0005  ld   $05
              08c5 0005  ld   $05
              08c6 0005  ld   $05
              08c7 003e  ld   $3e
              08c8 0022  ld   $22         ;Char 'z'
              08c9 0026  ld   $26
              08ca 002a  ld   $2a
              08cb 0032  ld   $32
              08cc 0022  ld   $22
              08cd 0010  ld   $10         ;Char '{'
              08ce 006c  ld   $6c
              08cf 0082  ld   $82
              08d0 0082  ld   $82
              08d1 0000  ld   $00
              08d2 0000  ld   $00         ;Char '|'
              08d3 0000  ld   $00
              08d4 00fe  ld   $fe
              08d5 0000  ld   $00
              08d6 0000  ld   $00
              08d7 0000  ld   $00         ;Char '}'
              08d8 0082  ld   $82
              08d9 0082  ld   $82
              08da 006c  ld   $6c
              08db 0010  ld   $10
              08dc 0040  ld   $40         ;Char '~'
              08dd 0080  ld   $80
              08de 0040  ld   $40
              08df 0020  ld   $20
              08e0 0040  ld   $40
              08e1 00fe  ld   $fe         ;Char '\x7f'
              08e2 00fe  ld   $fe
              08e3 00fe  ld   $fe
              * 5 times
              08e6 0010  ld   $10         ;Char '\x80'
              08e7 0038  ld   $38
              08e8 0054  ld   $54
              08e9 0010  ld   $10
              08ea 0010  ld   $10
              08eb 0010  ld   $10         ;Char '\x81'
              08ec 0020  ld   $20
              08ed 007c  ld   $7c
              08ee 0020  ld   $20
              08ef 0010  ld   $10
              08f0 0010  ld   $10         ;Char '\x82'
              08f1 0010  ld   $10
              08f2 0054  ld   $54
              08f3 0038  ld   $38
              08f4 0010  ld   $10
              08f5 0010  ld   $10         ;Char '\x83'
              08f6 0008  ld   $08
              08f7 007c  ld   $7c
              08f8 0008  ld   $08
              08f9 0010  ld   $10
                                          3025      comment = C(comment)
                                          3026
              08fa 0200  nop              3027  trampoline()
              08fb fe00  bra  ac          ;+-----------------------------------+
              08fc fcfd  bra  $08fd       ;|                                   |
              08fd 1418  ld   $18,y       ;| Trampoline for page $0800 lookups |
              08fe e006  jmp  y,$06       ;|                                   |
              08ff c218  st   [$18]       ;+-----------------------------------+
                                          3028
                                          3029  #-----------------------------------------------------------------------
                                          3030  #
                                          3031  #  $0900 ROM page 9: Key table for music
                                          3032  #
                                          3033  #-----------------------------------------------------------------------
                                          3034
                                          3035  align(0x100, size=0x100)
                                          3036  notes = 'CCDDEFFGGAAB'
                                          3037  sampleRate = cpuClock / 200.0 / 4
                                          3038  label('notesTable')
notesTable:   0900 0000  ld   $00         3039  ld(0)
              0901 0000  ld   $00         3040  ld(0)
                                          3041  for i in range(0, 250, 2):
                                          3042    j = i//2-1
                                          3043    freq = 440.0*2.0**((j-57)/12.0)
                                          3044    if j>=0 and freq <= sampleRate/2.0:
                                          3045      key = int(round(32768 * freq / sampleRate))
                                          3046      octave, note = j//12, notes[j%12]
                                          3047      sharp = '-' if notes[j%12-1] != note else '#'
                                          3048      comment = '%s%s%s (%0.1f Hz)' % (note, sharp, octave, freq)
                                          3049      ld(key&127); C(comment); ld(key>>7)
              0902 0045  ld   $45         ;C-0 (16.4 Hz)
              0903 0000  ld   $00
              0904 0049  ld   $49         ;C#0 (17.3 Hz)
              0905 0000  ld   $00
              0906 004d  ld   $4d         ;D-0 (18.4 Hz)
              0907 0000  ld   $00
              0908 0052  ld   $52         ;D#0 (19.4 Hz)
              0909 0000  ld   $00
              090a 0056  ld   $56         ;E-0 (20.6 Hz)
              090b 0000  ld   $00
              090c 005c  ld   $5c         ;F-0 (21.8 Hz)
              090d 0000  ld   $00
              090e 0061  ld   $61         ;F#0 (23.1 Hz)
              090f 0000  ld   $00
              0910 0067  ld   $67         ;G-0 (24.5 Hz)
              0911 0000  ld   $00
              0912 006d  ld   $6d         ;G#0 (26.0 Hz)
              0913 0000  ld   $00
              0914 0073  ld   $73         ;A-0 (27.5 Hz)
              0915 0000  ld   $00
              0916 007a  ld   $7a         ;A#0 (29.1 Hz)
              0917 0000  ld   $00
              0918 0001  ld   $01         ;B-0 (30.9 Hz)
              0919 0001  ld   $01
              091a 0009  ld   $09         ;C-1 (32.7 Hz)
              091b 0001  ld   $01
              091c 0011  ld   $11         ;C#1 (34.6 Hz)
              091d 0001  ld   $01
              091e 001a  ld   $1a         ;D-1 (36.7 Hz)
              091f 0001  ld   $01
              0920 0023  ld   $23         ;D#1 (38.9 Hz)
              0921 0001  ld   $01
              0922 002d  ld   $2d         ;E-1 (41.2 Hz)
              0923 0001  ld   $01
              0924 0037  ld   $37         ;F-1 (43.7 Hz)
              0925 0001  ld   $01
              0926 0042  ld   $42         ;F#1 (46.2 Hz)
              0927 0001  ld   $01
              0928 004e  ld   $4e         ;G-1 (49.0 Hz)
              0929 0001  ld   $01
              092a 005a  ld   $5a         ;G#1 (51.9 Hz)
              092b 0001  ld   $01
              092c 0067  ld   $67         ;A-1 (55.0 Hz)
              092d 0001  ld   $01
              092e 0074  ld   $74         ;A#1 (58.3 Hz)
              092f 0001  ld   $01
              0930 0003  ld   $03         ;B-1 (61.7 Hz)
              0931 0002  ld   $02
              0932 0012  ld   $12         ;C-2 (65.4 Hz)
              0933 0002  ld   $02
              0934 0023  ld   $23         ;C#2 (69.3 Hz)
              0935 0002  ld   $02
              0936 0034  ld   $34         ;D-2 (73.4 Hz)
              0937 0002  ld   $02
              0938 0046  ld   $46         ;D#2 (77.8 Hz)
              0939 0002  ld   $02
              093a 005a  ld   $5a         ;E-2 (82.4 Hz)
              093b 0002  ld   $02
              093c 006e  ld   $6e         ;F-2 (87.3 Hz)
              093d 0002  ld   $02
              093e 0004  ld   $04         ;F#2 (92.5 Hz)
              093f 0003  ld   $03
              0940 001b  ld   $1b         ;G-2 (98.0 Hz)
              0941 0003  ld   $03
              0942 0033  ld   $33         ;G#2 (103.8 Hz)
              0943 0003  ld   $03
              0944 004d  ld   $4d         ;A-2 (110.0 Hz)
              0945 0003  ld   $03
              0946 0069  ld   $69         ;A#2 (116.5 Hz)
              0947 0003  ld   $03
              0948 0006  ld   $06         ;B-2 (123.5 Hz)
              0949 0004  ld   $04
              094a 0025  ld   $25         ;C-3 (130.8 Hz)
              094b 0004  ld   $04
              094c 0045  ld   $45         ;C#3 (138.6 Hz)
              094d 0004  ld   $04
              094e 0068  ld   $68         ;D-3 (146.8 Hz)
              094f 0004  ld   $04
              0950 000c  ld   $0c         ;D#3 (155.6 Hz)
              0951 0005  ld   $05
              0952 0033  ld   $33         ;E-3 (164.8 Hz)
              0953 0005  ld   $05
              0954 005c  ld   $5c         ;F-3 (174.6 Hz)
              0955 0005  ld   $05
              0956 0008  ld   $08         ;F#3 (185.0 Hz)
              0957 0006  ld   $06
              0958 0036  ld   $36         ;G-3 (196.0 Hz)
              0959 0006  ld   $06
              095a 0067  ld   $67         ;G#3 (207.7 Hz)
              095b 0006  ld   $06
              095c 001b  ld   $1b         ;A-3 (220.0 Hz)
              095d 0007  ld   $07
              095e 0052  ld   $52         ;A#3 (233.1 Hz)
              095f 0007  ld   $07
              0960 000c  ld   $0c         ;B-3 (246.9 Hz)
              0961 0008  ld   $08
              0962 0049  ld   $49         ;C-4 (261.6 Hz)
              0963 0008  ld   $08
              0964 000b  ld   $0b         ;C#4 (277.2 Hz)
              0965 0009  ld   $09
              0966 0050  ld   $50         ;D-4 (293.7 Hz)
              0967 0009  ld   $09
              0968 0019  ld   $19         ;D#4 (311.1 Hz)
              0969 000a  ld   $0a
              096a 0067  ld   $67         ;E-4 (329.6 Hz)
              096b 000a  ld   $0a
              096c 0039  ld   $39         ;F-4 (349.2 Hz)
              096d 000b  ld   $0b
              096e 0010  ld   $10         ;F#4 (370.0 Hz)
              096f 000c  ld   $0c
              0970 006c  ld   $6c         ;G-4 (392.0 Hz)
              0971 000c  ld   $0c
              0972 004e  ld   $4e         ;G#4 (415.3 Hz)
              0973 000d  ld   $0d
              0974 0035  ld   $35         ;A-4 (440.0 Hz)
              0975 000e  ld   $0e
              0976 0023  ld   $23         ;A#4 (466.2 Hz)
              0977 000f  ld   $0f
              0978 0017  ld   $17         ;B-4 (493.9 Hz)
              0979 0010  ld   $10
              097a 0013  ld   $13         ;C-5 (523.3 Hz)
              097b 0011  ld   $11
              097c 0015  ld   $15         ;C#5 (554.4 Hz)
              097d 0012  ld   $12
              097e 001f  ld   $1f         ;D-5 (587.3 Hz)
              097f 0013  ld   $13
              0980 0032  ld   $32         ;D#5 (622.3 Hz)
              0981 0014  ld   $14
              0982 004d  ld   $4d         ;E-5 (659.3 Hz)
              0983 0015  ld   $15
              0984 0072  ld   $72         ;F-5 (698.5 Hz)
              0985 0016  ld   $16
              0986 0020  ld   $20         ;F#5 (740.0 Hz)
              0987 0018  ld   $18
              0988 0058  ld   $58         ;G-5 (784.0 Hz)
              0989 0019  ld   $19
              098a 001c  ld   $1c         ;G#5 (830.6 Hz)
              098b 001b  ld   $1b
              098c 006b  ld   $6b         ;A-5 (880.0 Hz)
              098d 001c  ld   $1c
              098e 0046  ld   $46         ;A#5 (932.3 Hz)
              098f 001e  ld   $1e
              0990 002f  ld   $2f         ;B-5 (987.8 Hz)
              0991 0020  ld   $20
              0992 0025  ld   $25         ;C-6 (1046.5 Hz)
              0993 0022  ld   $22
              0994 002a  ld   $2a         ;C#6 (1108.7 Hz)
              0995 0024  ld   $24
              0996 003f  ld   $3f         ;D-6 (1174.7 Hz)
              0997 0026  ld   $26
              0998 0064  ld   $64         ;D#6 (1244.5 Hz)
              0999 0028  ld   $28
              099a 001a  ld   $1a         ;E-6 (1318.5 Hz)
              099b 002b  ld   $2b
              099c 0063  ld   $63         ;F-6 (1396.9 Hz)
              099d 002d  ld   $2d
              099e 003f  ld   $3f         ;F#6 (1480.0 Hz)
              099f 0030  ld   $30
              09a0 0031  ld   $31         ;G-6 (1568.0 Hz)
              09a1 0033  ld   $33
              09a2 0038  ld   $38         ;G#6 (1661.2 Hz)
              09a3 0036  ld   $36
              09a4 0056  ld   $56         ;A-6 (1760.0 Hz)
              09a5 0039  ld   $39
              09a6 000d  ld   $0d         ;A#6 (1864.7 Hz)
              09a7 003d  ld   $3d
              09a8 005e  ld   $5e         ;B-6 (1975.5 Hz)
              09a9 0040  ld   $40
              09aa 004b  ld   $4b         ;C-7 (2093.0 Hz)
              09ab 0044  ld   $44
              09ac 0055  ld   $55         ;C#7 (2217.5 Hz)
              09ad 0048  ld   $48
              09ae 007e  ld   $7e         ;D-7 (2349.3 Hz)
              09af 004c  ld   $4c
              09b0 0048  ld   $48         ;D#7 (2489.0 Hz)
              09b1 0051  ld   $51
              09b2 0034  ld   $34         ;E-7 (2637.0 Hz)
              09b3 0056  ld   $56
              09b4 0046  ld   $46         ;F-7 (2793.8 Hz)
              09b5 005b  ld   $5b
              09b6 007f  ld   $7f         ;F#7 (2960.0 Hz)
              09b7 0060  ld   $60
              09b8 0061  ld   $61         ;G-7 (3136.0 Hz)
              09b9 0066  ld   $66
              09ba 006f  ld   $6f         ;G#7 (3322.4 Hz)
              09bb 006c  ld   $6c
              09bc 002c  ld   $2c         ;A-7 (3520.0 Hz)
              09bd 0073  ld   $73
              09be 001a  ld   $1a         ;A#7 (3729.3 Hz)
              09bf 007a  ld   $7a
                                          3050
                                          3051  # NOTE trampoline, (0x09c0), (cycles times are +1 for midi#13)
                                          3052  label('noteTrampoline')
noteTrampoline:
              09c0 fe00  bra  ac          3053  bra(AC)                         #22,#23 #35,#36 fetches ROM note byte, (low then high)
              09c1 fcc2  bra  $09c2       3054  bra(pc()+1)                     #24,#37
              09c2 1427  ld   $27,y       3055  ld(hi('note#13'),Y)             #25,#38 midi#13 lives in the same page
              09c3 e11d  jmp  y,[$1d]     3056  jmp(Y,[vTmp])                   #26,#39
              09c4 0200  nop              3057  nop()                           #27,#40
                                          3058
              09c5 0200  nop              3059  trampoline()
              09c6 0200  nop
              09c7 0200  nop
              * 54 times
              09fb fe00  bra  ac          ;+-----------------------------------+
              09fc fcfd  bra  $09fd       ;|                                   |
              09fd 1418  ld   $18,y       ;| Trampoline for page $0900 lookups |
              09fe e006  jmp  y,$06       ;|                                   |
              09ff c218  st   [$18]       ;+-----------------------------------+
                                          3060
                                          3061  #-----------------------------------------------------------------------
                                          3062  #
                                          3063  #  $0a00 ROM page 10: Inversion table
                                          3064  #
                                          3065  #-----------------------------------------------------------------------
                                          3066
                                          3067  align(0x100, size=0x100)
                                          3068  label('invTable')
                                          3069
                                          3070  # Unit 64, table offset 16 (=1/4), value offset 1: (x+16)*(y+1) == 64*64 - e
                                          3071  for i in range(251):
invTable:     0a00 00ff  ld   $ff         3072    ld(4096//(i+16)-1)
              0a01 00ef  ld   $ef
              0a02 00e2  ld   $e2
              0a03 00d6  ld   $d6
              0a04 00cb  ld   $cb
              0a05 00c2  ld   $c2
              0a06 00b9  ld   $b9
              0a07 00b1  ld   $b1
              0a08 00a9  ld   $a9
              0a09 00a2  ld   $a2
              0a0a 009c  ld   $9c
              0a0b 0096  ld   $96
              0a0c 0091  ld   $91
              0a0d 008c  ld   $8c
              0a0e 0087  ld   $87
              0a0f 0083  ld   $83
              0a10 007f  ld   $7f
              0a11 007b  ld   $7b
              0a12 0077  ld   $77
              0a13 0074  ld   $74
              0a14 0070  ld   $70
              0a15 006d  ld   $6d
              0a16 006a  ld   $6a
              0a17 0068  ld   $68
              0a18 0065  ld   $65
              0a19 0062  ld   $62
              0a1a 0060  ld   $60
              0a1b 005e  ld   $5e
              0a1c 005c  ld   $5c
              0a1d 005a  ld   $5a
              0a1e 0058  ld   $58
              0a1f 0056  ld   $56
              0a20 0054  ld   $54
              0a21 0052  ld   $52
              0a22 0050  ld   $50
              0a23 004f  ld   $4f
              0a24 004d  ld   $4d
              0a25 004c  ld   $4c
              0a26 004a  ld   $4a
              0a27 0049  ld   $49
              0a28 0048  ld   $48
              0a29 0046  ld   $46
              0a2a 0045  ld   $45
              0a2b 0044  ld   $44
              0a2c 0043  ld   $43
              0a2d 0042  ld   $42
              0a2e 0041  ld   $41
              0a2f 0040  ld   $40
              0a30 003f  ld   $3f
              0a31 003e  ld   $3e
              0a32 003d  ld   $3d
              0a33 003c  ld   $3c
              0a34 003b  ld   $3b
              0a35 003a  ld   $3a
              0a36 0039  ld   $39
              0a37 0038  ld   $38
              0a38 0037  ld   $37
              0a39 0037  ld   $37
              0a3a 0036  ld   $36
              0a3b 0035  ld   $35
              0a3c 0034  ld   $34
              0a3d 0034  ld   $34
              0a3e 0033  ld   $33
              0a3f 0032  ld   $32
              0a40 0032  ld   $32
              0a41 0031  ld   $31
              0a42 0030  ld   $30
              0a43 0030  ld   $30
              0a44 002f  ld   $2f
              0a45 002f  ld   $2f
              0a46 002e  ld   $2e
              0a47 002e  ld   $2e
              0a48 002d  ld   $2d
              0a49 002d  ld   $2d
              0a4a 002c  ld   $2c
              0a4b 002c  ld   $2c
              0a4c 002b  ld   $2b
              0a4d 002b  ld   $2b
              0a4e 002a  ld   $2a
              0a4f 002a  ld   $2a
              0a50 0029  ld   $29
              0a51 0029  ld   $29
              0a52 0028  ld   $28
              0a53 0028  ld   $28
              0a54 0027  ld   $27
              0a55 0027  ld   $27
              0a56 0027  ld   $27
              0a57 0026  ld   $26
              0a58 0026  ld   $26
              0a59 0026  ld   $26
              0a5a 0025  ld   $25
              0a5b 0025  ld   $25
              0a5c 0024  ld   $24
              0a5d 0024  ld   $24
              0a5e 0024  ld   $24
              0a5f 0023  ld   $23
              0a60 0023  ld   $23
              0a61 0023  ld   $23
              0a62 0022  ld   $22
              0a63 0022  ld   $22
              0a64 0022  ld   $22
              0a65 0022  ld   $22
              0a66 0021  ld   $21
              0a67 0021  ld   $21
              0a68 0021  ld   $21
              0a69 0020  ld   $20
              0a6a 0020  ld   $20
              0a6b 0020  ld   $20
              0a6c 0020  ld   $20
              0a6d 001f  ld   $1f
              0a6e 001f  ld   $1f
              0a6f 001f  ld   $1f
              0a70 001f  ld   $1f
              0a71 001e  ld   $1e
              0a72 001e  ld   $1e
              0a73 001e  ld   $1e
              0a74 001e  ld   $1e
              0a75 001d  ld   $1d
              0a76 001d  ld   $1d
              0a77 001d  ld   $1d
              0a78 001d  ld   $1d
              0a79 001c  ld   $1c
              0a7a 001c  ld   $1c
              0a7b 001c  ld   $1c
              * 5 times
              0a7e 001b  ld   $1b
              0a7f 001b  ld   $1b
              0a80 001b  ld   $1b
              * 5 times
              0a83 001a  ld   $1a
              0a84 001a  ld   $1a
              0a85 001a  ld   $1a
              * 5 times
              0a88 0019  ld   $19
              0a89 0019  ld   $19
              0a8a 0019  ld   $19
              * 6 times
              0a8e 0018  ld   $18
              0a8f 0018  ld   $18
              0a90 0018  ld   $18
              * 6 times
              0a94 0017  ld   $17
              0a95 0017  ld   $17
              0a96 0017  ld   $17
              * 7 times
              0a9b 0016  ld   $16
              0a9c 0016  ld   $16
              0a9d 0016  ld   $16
              * 8 times
              0aa3 0015  ld   $15
              0aa4 0015  ld   $15
              0aa5 0015  ld   $15
              * 8 times
              0aab 0014  ld   $14
              0aac 0014  ld   $14
              0aad 0014  ld   $14
              * 9 times
              0ab4 0013  ld   $13
              0ab5 0013  ld   $13
              0ab6 0013  ld   $13
              * 9 times
              0abd 0012  ld   $12
              0abe 0012  ld   $12
              0abf 0012  ld   $12
              * 11 times
              0ac8 0011  ld   $11
              0ac9 0011  ld   $11
              0aca 0011  ld   $11
              * 12 times
              0ad4 0010  ld   $10
              0ad5 0010  ld   $10
              0ad6 0010  ld   $10
              * 13 times
              0ae1 000f  ld   $0f
              0ae2 000f  ld   $0f
              0ae3 000f  ld   $0f
              * 16 times
              0af1 000e  ld   $0e
              0af2 000e  ld   $0e
              0af3 000e  ld   $0e
              * 10 times
                                          3073
                                          3074  trampoline()
              0afb fe00  bra  ac          ;+-----------------------------------+
              0afc fcfd  bra  $0afd       ;|                                   |
              0afd 1418  ld   $18,y       ;| Trampoline for page $0a00 lookups |
              0afe e006  jmp  y,$06       ;|                                   |
              0aff c218  st   [$18]       ;+-----------------------------------+
                                          3075
                                          3076  #-----------------------------------------------------------------------
                                          3077  #
                                          3078  #  $0b00 ROM page 11: More SYS functions
                                          3079  #
                                          3080  #-----------------------------------------------------------------------
                                          3081
                                          3082  align(0x100, size=0x100)
                                          3083
                                          3084  #-----------------------------------------------------------------------
                                          3085  # Extension SYS_SetMode_v2_80
                                          3086  #-----------------------------------------------------------------------
                                          3087
                                          3088  # Set video mode to 0 to 3 black scanlines per pixel line.
                                          3089  #
                                          3090  # Mainly for making the MODE command available in Tiny BASIC, so that
                                          3091  # the user can experiment. It's adviced to refrain from using
                                          3092  # SYS_SetMode_v2_80 in regular applications. Video mode is a deeply
                                          3093  # personal preference, and the programmer shouldn't overrule the user
                                          3094  # in that choice. The Gigatron philisophy is that the end user has
                                          3095  # the final say on what happens on the system, not the application,
                                          3096  # even if that implies a degraded performance. This doesn't mean that
                                          3097  # all applications must work well in all video modes: mode 1 is still
                                          3098  # the default. If an application really doesn't work at all in that
                                          3099  # mode, it's acceptable to change mode once after loading.
                                          3100  #
                                          3101  # There's no "SYS_GetMode" function.
                                          3102  #
                                          3103  # Variables:
                                          3104  #       vAC bit 0:1     Mode:
                                          3105  #                         0      "ABCD" -> Full mode (slowest)
                                          3106  #                         1      "ABC-" -> Default mode after reset
                                          3107  #                         2      "A-C-" -> at67's mode
                                          3108  #                         3      "A---" -> HGM's mode
                                          3109  #       vAC bit 2:15    Ignored bits and should be 0
                                          3110  #
                                          3111  # Special values (ROM v4):
                                          3112  #       vAC = 1975      Zombie mode (no video signals, no input,
                                          3113  #                        no blinkenlights).
                                          3114  #       vAC = -1        Leave zombie mode and restore previous mode.
                                          3115
                                          3116  # Actual duration is <80 cycles, but keep some room for future extensions
                                          3117  label('SYS_SetMode_v2_80')
SYS_SetMode_v2_80:
              0b00 140b  ld   $0b,y       3118  ld(hi('sys_SetMode'),Y)         #15
              0b01 e056  jmp  y,$56       3119  jmp(Y,'sys_SetMode')            #16
              0b02 011e  ld   [$1e]       3120  ld([vReturn])                   #17
                                          3121
                                          3122  #-----------------------------------------------------------------------
                                          3123  # Extension SYS_SetMemory_v2_54
                                          3124  #-----------------------------------------------------------------------
                                          3125
                                          3126  # SYS function for setting 1..256 bytes
                                          3127  #
                                          3128  # sysArgs[0]   Copy count (in, changed)
                                          3129  # sysArgs[1]   Copy value (in)
                                          3130  # sysArgs[2:3] Destination address (in, changed)
                                          3131  #
                                          3132  # Sets up to 8 bytes per invocation before restarting itself through vCPU.
                                          3133  # Doesn't wrap around page boundary. Can run 3 times per 148-cycle time slice.
                                          3134  # All combined that gives a 300% speedup over ROMv4 and before.
                                          3135
                                          3136  label('SYS_SetMemory_v2_54')
SYS_SetMemory_v2_54:
              0b03 0124  ld   [$24]       3137  ld([sysArgs+0])                 #15
                                          3138  bra('sys_SetMemory#18')         #16
              0b04 fc1a  bra  sys_SetMemory#18
              0b05 1126  ld   [$26],x     3139  ld([sysArgs+2],X)               #17
                                          3140
                                          3141  #-----------------------------------------------------------------------
                                          3142  # Extension SYS_SendSerial1_v3_80
                                          3143  #-----------------------------------------------------------------------
                                          3144
                                          3145  # SYS function for sending data over serial controller port using
                                          3146  # pulse width modulation of the vertical sync signal.
                                          3147  #
                                          3148  # Variables:
                                          3149  #       sysArgs[0:1]    Source address               (in, changed)
                                          3150  #       sysArgs[2]      Start bit mask (typically 1) (in, changed)
                                          3151  #       sysArgs[3]      Number of send frames X      (in, changed)
                                          3152  #
                                          3153  # The sending will abort if input data is detected on the serial port.
                                          3154  # Returns 0 in case of all bits sent, or <>0 in case of abort
                                          3155  #
                                          3156  # This modulates the next upcoming X vertical pulses with the supplied
                                          3157  # data. A zero becomes a 7 line vPulse, a one will be 9 lines.
                                          3158  # After that, the vPulse width falls back to 8 lines (idle).
                                          3159
                                          3160  label('SYS_SendSerial1_v3_80')
SYS_SendSerial1_v3_80:
              0b06 0109  ld   [$09]       3161  ld([videoY])                    #15
                                          3162  bra('sys_SendSerial1')          #16
              0b07 fc85  bra  sys_SendSerial1
              0b08 60b3  xora $b3         3163  xora(videoYline0)               #17 First line of vertical blank
                                          3164
                                          3165  #-----------------------------------------------------------------------
                                          3166  # Extension SYS_ExpanderControl_v4_40
                                          3167  #-----------------------------------------------------------------------
                                          3168
                                          3169  # Sets the I/O and RAM expander's control register
                                          3170  #
                                          3171  # Variables:
                                          3172  #       vAC bit 2       Device enable /SS0
                                          3173  #           bit 3       Device enable /SS1
                                          3174  #           bit 4       Device enable /SS2
                                          3175  #           bit 5       Device enable /SS3
                                          3176  #           bit 6       Banking B0
                                          3177  #           bit 7       Banking B1
                                          3178  #           bit 15      Data out MOSI
                                          3179  #       sysArgs[7]      Cache for control state (written to)
                                          3180  #
                                          3181  # Intended for prototyping, and probably too low-level for most applications
                                          3182  # Still there's a safeguard: it's not possible to disable RAM using this
                                          3183
                                          3184  label('SYS_ExpanderControl_v4_40')
SYS_ExpanderControl_v4_40:
              0b09 140d  ld   $0d,y       3185  ld(hi('sys_ExpanderControl'),Y) #15
              0b0a e000  jmp  y,$00       3186  jmp(Y,'sys_ExpanderControl')    #16
              0b0b 000c  ld   $0c         3187  ld(0b00001100)                  #17
                                          3188  #    ^^^^^^^^
                                          3189  #    |||||||`-- SCLK
                                          3190  #    ||||||`--- Not connected
                                          3191  #    |||||`---- /SS0
                                          3192  #    ||||`----- /SS1
                                          3193  #    |||`------ /SS2
                                          3194  #    ||`------- /SS3
                                          3195  #    |`-------- B0
                                          3196  #    `--------- B1
                                          3197
                                          3198  #-----------------------------------------------------------------------
                                          3199  # Extension SYS_Run6502_v4_80
                                          3200  #-----------------------------------------------------------------------
                                          3201
                                          3202  # Transfer control to v6502
                                          3203  #
                                          3204  # Calling 6502 code from vCPU goes (only) through this SYS function.
                                          3205  # Directly modifying the vCpuSelect variable is unreliable. The
                                          3206  # control transfer is immediate, without waiting for the current
                                          3207  # time slice to end or first returning to vCPU.
                                          3208  #
                                          3209  # vCPU code and v6502 code can interoperate without much hassle:
                                          3210  # - The v6502 program counter is vLR, and v6502 doesn't touch vPC
                                          3211  # - Returning to vCPU is with the BRK instruction
                                          3212  # - BRK doesn't dump process state on the stack
                                          3213  # - vCPU can save/restore the vLR with PUSH/POP
                                          3214  # - Stacks are shared, vAC is shared
                                          3215  # - vAC can indicate what the v6502 code wants. vAC+1 will be cleared
                                          3216  # - Alternative is to leave a word in sysArgs[6:7] (v6502 X and Y registers)
                                          3217  # - Another way is to set vPC before BRK, and vCPU will continue there(+2)
                                          3218  #
                                          3219  # Calling v6502 code from vCPU looks like this:
                                          3220  #       LDWI  SYS_Run6502_v4_80
                                          3221  #       STW   sysFn
                                          3222  #       LDWI  $6502_start_address
                                          3223  #       STW   vLR
                                          3224  #       SYS   80
                                          3225  #
                                          3226  # Variables:
                                          3227  #       vAC             Accumulator
                                          3228  #       vLR             Program Counter
                                          3229  #       vSP             Stack Pointer (+1)
                                          3230  #       sysArgs[6]      Index Register X
                                          3231  #       sysArgs[7]      Index Register Y
                                          3232  # For info:
                                          3233  #       sysArgs[0:1]    Address Register, free to clobber
                                          3234  #       sysArgs[2]      Instruction Register, free to clobber
                                          3235  #       sysArgs[3:5]    Flags, don't touch
                                          3236  #
                                          3237  # Implementation details::
                                          3238  #
                                          3239  #  The time to reserve for this transition is the maximum time
                                          3240  #  between NEXT and v6502_check. This is
                                          3241  #       SYS call duration + 2*v6502_maxTicks + (v6502_overhead - vCPU_overhead)
                                          3242  #     = 22 + 38 + (11 - 9) = 62 cycles.
                                          3243  #  So reserving 80 cycles is future proof. This isn't overhead, as it includes
                                          3244  #  the fetching of the first 6502 opcode and its operands..
                                          3245  #
                                          3246  #                      0            10                 28=0         9
                                          3247  #    ---+----+---------+------------+------------------+-----------+---
                                          3248  # video | nop| runVcpu |   ENTER    | At least one ins |   EXIT    | video
                                          3249  #    ---+----+---------+------------+------------------+-----------+---
                                          3250  #        sync  prelude  ENTER-to-ins    ins-to-NEXT     NEXT-to-video
                                          3251  #       |<-->|
                                          3252  #        0/1 |<------->|
                                          3253  #                 5    |<----------------------------->|
                                          3254  #          runVCpu_overhead           28               |<--------->|
                                          3255  #                                 2*maxTicks                 9
                                          3256  #                                                      vCPU_overhead
                                          3257  #
                                          3258  #                      0                21                    38=0       11
                                          3259  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3260  # video | nop| runVcpu |   v6502_ENTER  | At least one fetch |v6502_exitB| video
                                          3261  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3262  #        sync  prelude   enter-to-fetch     fetch-to-check    check-to-video
                                          3263  #       |<-->|
                                          3264  #        0/1 |<------->|
                                          3265  #                 5    |<----------------------------------->|
                                          3266  #          runVcpu_overhead           38                     |<--------->|
                                          3267  #                              2*v6520_maxTicks                    11
                                          3268  #                                                            v6502_overhead
                                          3269
                                          3270  label('SYS_Run6502_v4_80')
SYS_Run6502_v4_80:
              0b0c 140d  ld   $0d,y       3271  ld(hi('sys_v6502'),Y)           #15
              0b0d e08b  jmp  y,$8b       3272  jmp(Y,'sys_v6502')              #16
              0b0e 000d  ld   $0d         3273  ld(hi('v6502_ENTER'))           #17 Activate v6502
                                          3274
                                          3275  #-----------------------------------------------------------------------
                                          3276  # Extension SYS_ResetWaveforms_v4_50
                                          3277  #-----------------------------------------------------------------------
                                          3278
                                          3279  # soundTable[4x+0] = sawtooth, to be modified into metallic/noise
                                          3280  # soundTable[4x+1] = pulse
                                          3281  # soundTable[4x+2] = triangle
                                          3282  # soundTable[4x+3] = sawtooth, also useful to right shift 2 bits
                                          3283
                                          3284  label('SYS_ResetWaveforms_v4_50')
SYS_ResetWaveforms_v4_50:
              0b0f 1412  ld   $12,y       3285  ld(hi('sys_ResetWaveforms'),Y)  #15 Initial setup of waveforms. [vAC+0]=i
              0b10 e0b2  jmp  y,$b2       3286  jmp(Y,'sys_ResetWaveforms')     #16
              0b11 1407  ld   $07,y       3287  ld(soundTable>>8,Y)             #17
                                          3288
                                          3289  #-----------------------------------------------------------------------
                                          3290  # Extension SYS_ShuffleNoise_v4_46
                                          3291  #-----------------------------------------------------------------------
                                          3292
                                          3293  # Use simple 6-bits variation of RC4 to permutate waveform 0 in soundTable
                                          3294
                                          3295  label('SYS_ShuffleNoise_v4_46')
SYS_ShuffleNoise_v4_46:
              0b12 1412  ld   $12,y       3296  ld(hi('sys_ShuffleNoise'),Y)    #15 Shuffle soundTable[4i+0]. [vAC+0]=4j, [vAC+1]=4i
              0b13 e0d3  jmp  y,$d3       3297  jmp(Y,'sys_ShuffleNoise')       #16
              0b14 1407  ld   $07,y       3298  ld(soundTable>>8,Y)             #17
                                          3299
                                          3300  #-----------------------------------------------------------------------
                                          3301  # Extension SYS_SpiExchangeBytes_v4_134
                                          3302  #-----------------------------------------------------------------------
                                          3303
                                          3304  # Send AND receive 1..256 bytes over SPI interface
                                          3305
                                          3306  # Variables:
                                          3307  #       sysArgs[0]      Page index start, for both send/receive (in, changed)
                                          3308  #       sysArgs[1]      Memory page for send data (in)
                                          3309  #       sysArgs[2]      Page index stop (in)
                                          3310  #       sysArgs[3]      Memory page for receive data (in)
                                          3311  #       sysArgs[4]      Scratch (changed)
                                          3312
                                          3313  label('SYS_SpiExchangeBytes_v4_134')
SYS_SpiExchangeBytes_v4_134:
              0b15 140d  ld   $0d,y       3314  ld(hi('sys_SpiExchangeBytes'),Y)#15
              0b16 e015  jmp  y,$15       3315  jmp(Y,'sys_SpiExchangeBytes')   #16
              0b17 1401  ld   $01,y       3316  ld(hi(ctrlBits),Y)              #17 Control state as saved by SYS_ExpanderControl
                                          3317
                                          3318  #-----------------------------------------------------------------------
                                          3319  # Extension SYS_ReceiveSerial1_vX_32
                                          3320  #-----------------------------------------------------------------------
                                          3321
                                          3322  # SYS function for receiving one byte over the serial controller port.
                                          3323  # This is a public version of SYS_NextByteIn from the loader private
                                          3324  # extension.  A byte is read from IN when videoY reaches
                                          3325  # sysArgs[3]. The byte is added to the checksum sysArgs[2] then stored
                                          3326  # at address sysArgs[0:1] which gets incremented.
                                          3327  #
                                          3328  # The 65 bytes of a serial frame can be read for the following values
                                          3329  # of videoY: 207 (protocol byte) 219 (length, 6 bits only) 235, 251
                                          3330  # (address) then 2, 6, 10, .. 238 stepping by four, then 185.
                                          3331  #
                                          3332  # Variables:
                                          3333  #     sysArgs[0:1] Address
                                          3334  #     sysArgs[2]   Checksum
                                          3335  #     sysArgs[3]   Wait value (videoY)
                                          3336
                                          3337  label('SYS_ReceiveSerial1_vX_32')
SYS_ReceiveSerial1_vX_32:                 3338  bra('sys_ReceiveSerial1')       #15
              0b18 fcb2  bra  sys_ReceiveSerial1
              0b19 0127  ld   [$27]       3339  ld([sysArgs+3])                 #16
                                          3340
                                          3341  #-----------------------------------------------------------------------
                                          3342  #  Implementations
                                          3343  #-----------------------------------------------------------------------
                                          3344
                                          3345  # SYS_SetMemory_54 implementation
                                          3346  label('sys_SetMemory#18')
sys_SetMemory#18:
              0b1a 1527  ld   [$27],y     3347  ld([sysArgs+3],Y)               #18
              0b1b f83e  ble  .sysSb#21   3348  ble('.sysSb#21')                #19 Enter fast lane if >=128 or at 0 (-> 256)
              0b1c a008  suba $08         3349  suba(8)                         #20
              0b1d f440  bge  .sysSb#23   3350  bge('.sysSb#23')                #21 Or when >=8
              0b1e c224  st   [$24]       3351  st([sysArgs+0])                 #22
              0b1f 2004  anda $04         3352  anda(4)                         #23
              0b20 f027  beq  .sysSb#26   3353  beq('.sysSb#26')                #24
              0b21 0125  ld   [$25]       3354  ld([sysArgs+1])                 #25 Set 4 pixels
              0b22 de00  st   [y,x++]     3355  st([Y,Xpp])                     #26
              0b23 de00  st   [y,x++]     3356  st([Y,Xpp])                     #27
              0b24 de00  st   [y,x++]     3357  st([Y,Xpp])                     #28
              0b25 fc2a  bra  .sysSb#31   3358  bra('.sysSb#31')                #29
              0b26 de00  st   [y,x++]     3359  st([Y,Xpp])                     #30
                                          3360  label('.sysSb#26')
.sysSb#26:    0b27 0001  ld   $01         3361  wait(31-26)                     #26
              0b28 ec28  bne  $0b28
              0b29 a001  suba $01
                                          3362  label('.sysSb#31')
.sysSb#31:    0b2a 0124  ld   [$24]       3363  ld([sysArgs+0])                 #31
              0b2b 2002  anda $02         3364  anda(2)                         #32
              0b2c f031  beq  .sysSb#35   3365  beq('.sysSb#35')                #33
              0b2d 0125  ld   [$25]       3366  ld([sysArgs+1])                 #34 Set 2 pixels
              0b2e de00  st   [y,x++]     3367  st([Y,Xpp])                     #35
              0b2f fc34  bra  .sysSb#38   3368  bra('.sysSb#38')                #36
              0b30 de00  st   [y,x++]     3369  st([Y,Xpp])                     #37
                                          3370  label('.sysSb#35')
.sysSb#35:    0b31 0200  nop              3371  wait(38-35)                     #35
              0b32 0200  nop
              0b33 0200  nop
                                          3372  label('.sysSb#38')
.sysSb#38:    0b34 0124  ld   [$24]       3373  ld([sysArgs+0])                 #38
              0b35 2001  anda $01         3374  anda(1)                         #39
              0b36 f039  beq  $0b39       3375  beq(pc()+3)                     #40
              0b37 fc3a  bra  $0b3a       3376  bra(pc()+3)                     #41
              0b38 0125  ld   [$25]       3377  ld([sysArgs+1])                 #42 Set 1 pixel
              0b39 0d00  ld   [y,x]       3378  ld([Y,X])                       #42(!) No change
              0b3a ce00  st   [y,x]       3379  st([Y,X])                       #43
              0b3b 1403  ld   $03,y       3380  ld(hi('NEXTY'),Y)               #44 Return
              0b3c e000  jmp  y,$00       3381  jmp(Y,'NEXTY')                  #45 All done
              0b3d 00e8  ld   $e8         3382  ld(-48/2)                       #46
                                          3383  label('.sysSb#21')
.sysSb#21:    0b3e 0200  nop              3384  nop()                           #21
              0b3f c224  st   [$24]       3385  st([sysArgs+0])                 #22
                                          3386  label('.sysSb#23')
.sysSb#23:    0b40 0125  ld   [$25]       3387  ld([sysArgs+1])                 #23 Set 8 pixels
              0b41 de00  st   [y,x++]     3388  st([Y,Xpp])                     #24
              0b42 de00  st   [y,x++]     3389  st([Y,Xpp])                     #25
              0b43 de00  st   [y,x++]     3390  st([Y,Xpp])                     #26
              0b44 de00  st   [y,x++]     3391  st([Y,Xpp])                     #27
              0b45 de00  st   [y,x++]     3392  st([Y,Xpp])                     #28
              0b46 de00  st   [y,x++]     3393  st([Y,Xpp])                     #29
              0b47 de00  st   [y,x++]     3394  st([Y,Xpp])                     #30
              0b48 de00  st   [y,x++]     3395  st([Y,Xpp])                     #31
              0b49 0126  ld   [$26]       3396  ld([sysArgs+2])                 #32 Advance write pointer
              0b4a 8008  adda $08         3397  adda(8)                         #33
              0b4b c226  st   [$26]       3398  st([sysArgs+2])                 #34
              0b4c 0124  ld   [$24]       3399  ld([sysArgs+0])                 #35
              0b4d f050  beq  $0b50       3400  beq(pc()+3)                     #36
              0b4e fc51  bra  $0b51       3401  bra(pc()+3)                     #37
              0b4f 00fe  ld   $fe         3402  ld(-2)                          #38 Self-restart when more to do
              0b50 0000  ld   $00         3403  ld(0)                           #38(!)
              0b51 8116  adda [$16]       3404  adda([vPC])                     #39
              0b52 c216  st   [$16]       3405  st([vPC])                       #40
              0b53 1403  ld   $03,y       3406  ld(hi('REENTER'),Y)             #41
              0b54 e0cb  jmp  y,$cb       3407  jmp(Y,'REENTER')                #42
              0b55 00e9  ld   $e9         3408  ld(-46/2)                       #43
                                          3409
                                          3410  # SYS_SetMode_80 implementation
                                          3411  label('sys_SetMode')
sys_SetMode:  0b56 ec59  bne  $0b59       3412  bne(pc()+3)                     #18
              0b57 fc59  bra  $0b59       3413  bra(pc()+2)                     #19
              0b58 0003  ld   $03         3414  ld('startVideo')                #20 First enable video if disabled
              0b59 c21e  st   [$1e]       3415  st([vReturn])                   #20,21
              0b5a 0119  ld   [$19]       3416  ld([vAC+1])                     #22
              0b5b f065  beq  .sysSm#25   3417  beq('.sysSm#25')                #23
              0b5c 1403  ld   $03,y       3418  ld(hi('REENTER'),Y)             #24
              0b5d 6118  xora [$18]       3419  xora([vAC])                     #25
              0b5e 60b0  xora $b0         3420  xora((1975>>8)^(1975&255))      #26 Poor man\'s 1975 detection
              0b5f ec62  bne  $0b62       3421  bne(pc()+3)                     #27
              0b60 fc63  bra  $0b63       3422  bra(pc()+3)                     #28
                                          3423  assert videoZ == 0x0100
              0b61 c21e  st   [$1e]       3424  st([vReturn])                   #29 DISABLE video/audio/serial/etc
              0b62 0200  nop              3425  nop()                           #29(!) Ignore and return
              0b63 e0cb  jmp  y,$cb       3426  jmp(Y,'REENTER')                #30
              0b64 00ef  ld   $ef         3427  ld(-34/2)                       #31
                                          3428  label('.sysSm#25')
.sysSm#25:    0b65 0118  ld   [$18]       3429  ld([vAC])                       #25 Mode 0,1,2,3
              0b66 2003  anda $03         3430  anda(3)                         #26
              0b67 806a  adda $6a         3431  adda('.sysSm#30')               #27
              0b68 fe00  bra  ac          3432  bra(AC)                         #28
              0b69 fc6e  bra  .sysSm#31   3433  bra('.sysSm#31')                #29
                                          3434  label('.sysSm#30')
.sysSm#30:    0b6a 000a  ld   $0a         3435  ld('pixels')                    #30 videoB lines
              0b6b 000a  ld   $0a         3436  ld('pixels')                    #30
              0b6c 00f6  ld   $f6         3437  ld('nopixels')                  #30
              0b6d 00f6  ld   $f6         3438  ld('nopixels')                  #30
                                          3439  label('.sysSm#31')
.sysSm#31:    0b6e c20a  st   [$0a]       3440  st([videoModeB])                #31
              0b6f 0118  ld   [$18]       3441  ld([vAC])                       #32
              0b70 2003  anda $03         3442  anda(3)                         #33
              0b71 8074  adda $74         3443  adda('.sysSm#37')               #34
              0b72 fe00  bra  ac          3444  bra(AC)                         #35
              0b73 fc78  bra  .sysSm#38   3445  bra('.sysSm#38')                #36
                                          3446  label('.sysSm#37')
.sysSm#37:    0b74 000a  ld   $0a         3447  ld('pixels')                    #37 videoC lines
              0b75 000a  ld   $0a         3448  ld('pixels')                    #37
              0b76 000a  ld   $0a         3449  ld('pixels')                    #37
              0b77 00f6  ld   $f6         3450  ld('nopixels')                  #37
                                          3451  label('.sysSm#38')
.sysSm#38:    0b78 c20b  st   [$0b]       3452  st([videoModeC])                #38
              0b79 0118  ld   [$18]       3453  ld([vAC])                       #39
              0b7a 2003  anda $03         3454  anda(3)                         #40
              0b7b 807e  adda $7e         3455  adda('.sysSm#44')               #41
              0b7c fe00  bra  ac          3456  bra(AC)                         #42
              0b7d fc82  bra  .sysSm#45   3457  bra('.sysSm#45')                #43
                                          3458  label('.sysSm#44')
.sysSm#44:    0b7e 000a  ld   $0a         3459  ld('pixels')                    #44 videoD lines
              0b7f 00f6  ld   $f6         3460  ld('nopixels')                  #44
              0b80 00f6  ld   $f6         3461  ld('nopixels')                  #44
              0b81 00f6  ld   $f6         3462  ld('nopixels')                  #44
                                          3463  label('.sysSm#45')
.sysSm#45:    0b82 c20c  st   [$0c]       3464  st([videoModeD])                #45
              0b83 e0cb  jmp  y,$cb       3465  jmp(Y,'REENTER')                #46
              0b84 00e7  ld   $e7         3466  ld(-50/2)                       #47
                                          3467
                                          3468  # SYS_SendSerial1_v3_80 implementation
                                          3469  label('sys_SendSerial1')
sys_SendSerial1:
              0b85 f08c  beq  .sysSs#20   3470  beq('.sysSs#20')                #18
              0b86 1124  ld   [$24],x     3471  ld([sysArgs+0],X)               #19
              0b87 0116  ld   [$16]       3472  ld([vPC])                       #20 Wait for vBlank
              0b88 a002  suba $02         3473  suba(2)                         #21
              0b89 1403  ld   $03,y       3474  ld(hi('REENTER_28'),Y)          #22
              0b8a e0ca  jmp  y,$ca       3475  jmp(Y,'REENTER_28')             #23
              0b8b c216  st   [$16]       3476  st([vPC])                       #24
                                          3477  label('.sysSs#20')
.sysSs#20:    0b8c 1525  ld   [$25],y     3478  ld([sysArgs+1],Y)               #20 Synchronized with vBlank
              0b8d 0d00  ld   [y,x]       3479  ld([Y,X])                       #21 Copy next bit
              0b8e 2126  anda [$26]       3480  anda([sysArgs+2])               #22
              0b8f ec92  bne  $0b92       3481  bne(pc()+3)                     #23
              0b90 fc93  bra  $0b93       3482  bra(pc()+3)                     #24
              0b91 000e  ld   $0e         3483  ld(7*2)                         #25
              0b92 0012  ld   $12         3484  ld(9*2)                         #25
              0b93 c20d  st   [$0d]       3485  st([videoPulse])                #26
              0b94 0126  ld   [$26]       3486  ld([sysArgs+2])                 #27 Rotate input bit
              0b95 8200  adda ac          3487  adda(AC)                        #28
              0b96 ec99  bne  $0b99       3488  bne(pc()+3)                     #29
              0b97 fc99  bra  $0b99       3489  bra(pc()+2)                     #30
              0b98 0001  ld   $01         3490  ld(1)                           #31
              0b99 c226  st   [$26]       3491  st([sysArgs+2])                 #31,32 (must be idempotent)
              0b9a 2001  anda $01         3492  anda(1)                         #33 Optionally increment pointer
              0b9b 8124  adda [$24]       3493  adda([sysArgs+0])               #34
              0b9c d224  st   [$24],x     3494  st([sysArgs+0],X)               #35
              0b9d 0127  ld   [$27]       3495  ld([sysArgs+3])                 #36 Frame counter
              0b9e a001  suba $01         3496  suba(1)                         #37
              0b9f f0ae  beq  .sysSs#40   3497  beq('.sysSs#40')                #38
              0ba0 1403  ld   $03,y       3498  ld(hi('REENTER'),Y)             #39
              0ba1 c227  st   [$27]       3499  st([sysArgs+3])                 #40
              0ba2 010f  ld   [$0f]       3500  ld([serialRaw])                 #41 Test for anything being sent back
              0ba3 60ff  xora $ff         3501  xora(255)                       #42
              0ba4 f0a9  beq  .sysSs#45   3502  beq('.sysSs#45')                #43
              0ba5 c218  st   [$18]       3503  st([vAC])                       #44 Abort after key press with non-zero error
              0ba6 c219  st   [$19]       3504  st([vAC+1])                     #45
              0ba7 e0cb  jmp  y,$cb       3505  jmp(Y,'REENTER')                #46
              0ba8 00e7  ld   $e7         3506  ld(-50/2)                       #47
                                          3507  label('.sysSs#45')
.sysSs#45:    0ba9 0116  ld   [$16]       3508  ld([vPC])                       #45 Continue sending bits
              0baa a002  suba $02         3509  suba(2)                         #46
              0bab c216  st   [$16]       3510  st([vPC])                       #47
              0bac e0cb  jmp  y,$cb       3511  jmp(Y,'REENTER')                #48
              0bad 00e6  ld   $e6         3512  ld(-52/2)                       #49
                                          3513  label('.sysSs#40')
.sysSs#40:    0bae c218  st   [$18]       3514  st([vAC])                       #40 Stop sending bits, no error
              0baf c219  st   [$19]       3515  st([vAC+1])                     #41
              0bb0 e0cb  jmp  y,$cb       3516  jmp(Y,'REENTER')                #42
              0bb1 00e9  ld   $e9         3517  ld(-46/2)                       #43
                                          3518
                                          3519  # SYS_ReceiveSerialByte implementation
                                          3520  label('sys_ReceiveSerial1')
sys_ReceiveSerial1:
              0bb2 6109  xora [$09]       3521  xora([videoY])                  #17
              0bb3 ecc0  bne  .sysRsb#20  3522  bne('.sysRsb#20')               #18
              0bb4 1124  ld   [$24],x     3523  ld([sysArgs+0],X)               #19
              0bb5 1525  ld   [$25],y     3524  ld([sysArgs+1],Y)               #20
              0bb6 0300  ld   in          3525  ld(IN)                          #21
              0bb7 ce00  st   [y,x]       3526  st([Y,X])                       #22
              0bb8 8126  adda [$26]       3527  adda([sysArgs+2])               #23
              0bb9 c226  st   [$26]       3528  st([sysArgs+2])                 #24
              0bba 0124  ld   [$24]       3529  ld([sysArgs+0])                 #25
              0bbb 8001  adda $01         3530  adda(1)                         #26
              0bbc c224  st   [$24]       3531  st([sysArgs+0])                 #27
              0bbd 1403  ld   $03,y       3532  ld(hi('NEXTY'),Y)               #28
              0bbe e000  jmp  y,$00       3533  jmp(Y,'NEXTY')                  #29
              0bbf 00f0  ld   $f0         3534  ld(-32/2)                       #30
                                          3535  # Restart the instruction in the next timeslice
                                          3536  label('.sysRsb#20')
.sysRsb#20:   0bc0 0116  ld   [$16]       3537  ld([vPC])                       #20
              0bc1 a002  suba $02         3538  suba(2)                         #21
              0bc2 c216  st   [$16]       3539  st([vPC])                       #22
              0bc3 1403  ld   $03,y       3540  ld(hi('REENTER'),Y)             #23
              0bc4 e0cb  jmp  y,$cb       3541  jmp(Y,'REENTER')                #24
              0bc5 00f2  ld   $f2         3542  ld(-28/2)                       #25
                                          3543
                                          3544  # -------------------------------------------------------------
                                          3545  # vCPU instructions : POP PUSH
                                          3546  # -------------------------------------------------------------
                                          3547
                                          3548
                                          3549  # POP implementation (vCPU instruction)
                                          3550  label('pop#13')
pop#13:       0bc6 1504  ld   [$04],y     3551  ld([vSPH],Y)                    #13 vSP.hi
              0bc7 111c  ld   [$1c],x     3552  ld([vSP],X)                     #14
              0bc8 0d00  ld   [y,x]       3553  ld([Y,X])                       #15
              0bc9 de00  st   [y,x++]     3554  st([Y,Xpp])                     #16
              0bca c21a  st   [$1a]       3555  st([vLR])                       #17
              0bcb 0d00  ld   [y,x]       3556  ld([Y,X])                       #18
              0bcc c21b  st   [$1b]       3557  st([vLR+1])                     #19
              0bcd 011c  ld   [$1c]       3558  ld([vSP])                       #20
              0bce 8002  adda $02         3559  adda(2)                         #21
              0bcf c21c  st   [$1c]       3560  st([vSP])                       #22
              0bd0 0116  ld   [$16]       3561  ld([vPC])                       #23
              0bd1 a001  suba $01         3562  suba(1)                         #24
              0bd2 c216  st   [$16]       3563  st([vPC])                       #25
              0bd3 1403  ld   $03,y       3564  ld(hi('NEXTY'),Y)               #26
              0bd4 e000  jmp  y,$00       3565  jmp(Y,'NEXTY')                  #27
              0bd5 00f1  ld   $f1         3566  ld(-30/2)                       #28
                                          3567
                                          3568  # PUSH implementation (vCPU instruction)
                                          3569  label('push#13')
push#13:      0bd6 1504  ld   [$04],y     3570  ld([vSPH],Y)                    #13 vSP.hi
              0bd7 011c  ld   [$1c]       3571  ld([vSP])                       #14
              0bd8 a002  suba $02         3572  suba(2)                         #15
              0bd9 d21c  st   [$1c],x     3573  st([vSP],X)                     #16
              0bda 011a  ld   [$1a]       3574  ld([vLR])                       #17
              0bdb de00  st   [y,x++]     3575  st([Y,Xpp])                     #18
              0bdc 011b  ld   [$1b]       3576  ld([vLR+1])                     #19
              0bdd ce00  st   [y,x]       3577  st([Y,X])                       #20
              0bde 0116  ld   [$16]       3578  ld([vPC])                       #21
              0bdf a001  suba $01         3579  suba(1)                         #22
              0be0 c216  st   [$16]       3580  st([vPC])                       #23
              0be1 1403  ld   $03,y       3581  ld(hi('NEXTY'),Y)               #24
              0be2 e000  jmp  y,$00       3582  jmp(Y,'NEXTY')                  #25
              0be3 00f2  ld   $f2         3583  ld(-28/2)                       #26
                                          3584
                                          3585  # -------------------------------------------------------------
                                          3586  # vCPU instructions for comparisons between two 16-bit operands
                                          3587  # -------------------------------------------------------------
                                          3588  #
                                          3589  # vCPU's conditional branching (BCC) always compares vAC against 0,
                                          3590  # treating vAC as a two's complement 16-bit number. When we need to
                                          3591  # compare two arbitrary numnbers we normally first take their difference
                                          3592  # with SUBW.  However, when this difference is too large, the subtraction
                                          3593  # overflows and we get the wrong outcome. To get it right over the
                                          3594  # entire range, an elaborate sequence is needed. TinyBASIC uses this
                                          3595  # blurp for its relational operators. (It compares stack variable $02
                                          3596  # with zero page variable $3a.)
                                          3597  #
                                          3598  #       0461  ee 02            LDLW  $02
                                          3599  #       0463  fc 3a            XORW  $3a
                                          3600  #       0465  35 53 6a         BGE   $046c
                                          3601  #       0468  ee 02            LDLW  $02
                                          3602  #       046a  90 6e            BRA   $0470
                                          3603  #       046c  ee 02            LDLW  $02
                                          3604  #       046e  b8 3a            SUBW  $3a
                                          3605  #       0470  35 56 73         BLE   $0475
                                          3606  #
                                          3607  # The CMPHS and CMPHU instructions were introduced to simplify this.
                                          3608  # They inspect both operands to see if there is an overflow risk. If
                                          3609  # so, they modify vAC such that their difference gets smaller, while
                                          3610  # preserving the relation between the two operands. After that, the
                                          3611  # SUBW instruction can't overflow and we achieve a correct comparison.
                                          3612  # Use CMPHS for signed comparisons and CMPHU for unsigned. With these,
                                          3613  # the sequence above becomes:
                                          3614  #
                                          3615  #       0461  ee 02            LDLW  $02
                                          3616  #       0463  1f 3b            CMPHS $3b        Note: high byte of operand
                                          3617  #       0465  b8 3a            SUBW  $3a
                                          3618  #       0467  35 56 73         BLE   $0475
                                          3619  #
                                          3620  # CMPHS/CMPHU don't make much sense other than in combination with
                                          3621  # SUBW. These modify vACH, if needed, as given in the following table:
                                          3622  #
                                          3623  #       vACH  varH  |     vACH
                                          3624  #       bit7  bit7  | CMPHS  CMPHU
                                          3625  #       ---------------------------
                                          3626  #         0     0   |  vACH   vACH      no change needed
                                          3627  #         0     1   | varH+1 varH-1     narrowing the range
                                          3628  #         1     0   | varH-1 varH+1     narrowing the range
                                          3629  #         1     1   |  vACH   vACH      no change needed
                                          3630  #       ---------------------------
                                          3631
                                          3632  # CMPHS implementation (vCPU instruction)
                                          3633  label('cmphs#13')
cmphs#13:     0be4 1200  ld   ac,x        3634  ld(AC,X)                        #13
              0be5 0500  ld   [x]         3635  ld([X])                         #14
              0be6 6119  xora [$19]       3636  xora([vAC+1])                   #15
              0be7 f4fa  bge  .cmphu#18   3637  bpl('.cmphu#18')                #16 Skip if same sign
              0be8 0119  ld   [$19]       3638  ld([vAC+1])                     #17
              0be9 e8ec  blt  $0bec       3639  bmi(pc()+3)                     #18
              0bea fced  bra  .cmphs#21   3640  bra(pc()+3)                     #19
                                          3641  label('.cmphs#20')
.cmphs#20:    0beb 0001  ld   $01         3642  ld(+1)                          #20    vAC < variable
              0bec 00ff  ld   $ff         3643  ld(-1)                          #20(!) vAC > variable
                                          3644  label('.cmphs#21')
.cmphs#21:    0bed 8500  adda [x]         3645  adda([X])                       #21
              0bee c219  st   [$19]       3646  st([vAC+1])                     #22
              0bef 1403  ld   $03,y       3647  ld(hi('REENTER'),Y)             #23
              0bf0 e0cb  jmp  y,$cb       3648  jmp(Y,'REENTER')                #24
              0bf1 00f2  ld   $f2         3649  ld(-28/2)                       #25
                                          3650
                                          3651  # CMPHU implementation (vCPU instruction)
                                          3652  label('cmphu#13')
cmphu#13:     0bf2 1200  ld   ac,x        3653  ld(AC,X)                        #13
              0bf3 0500  ld   [x]         3654  ld([X])                         #14
              0bf4 6119  xora [$19]       3655  xora([vAC+1])                   #15
              0bf5 f4fa  bge  .cmphu#18   3656  bpl('.cmphu#18')                #16 Skip if same sign
              0bf6 0119  ld   [$19]       3657  ld([vAC+1])                     #17
              0bf7 e8eb  blt  .cmphs#20   3658  bmi('.cmphs#20')                #18
              0bf8 fced  bra  .cmphs#21   3659  bra('.cmphs#21')                #19
              0bf9 00ff  ld   $ff         3660  ld(-1)                          #20    vAC > variable
                                          3661
                                          3662  # No-operation for CMPHS/CMPHU when high bits are equal
                                          3663  label('.cmphu#18')
.cmphu#18:    0bfa 1403  ld   $03,y       3664  ld(hi('NEXTY'),Y)               #18
              0bfb e000  jmp  y,$00       3665  jmp(Y,'NEXTY')                  #19
              0bfc 00f5  ld   $f5         3666  ld(-22/2)                       #20
                                          3667
                                          3668  #-----------------------------------------------------------------------
                                          3669  #
                                          3670  #  $0c00 ROM page 12: More SYS functions (sprites)
                                          3671  #
                                          3672  #       Page 1: vertical blank interval
                                          3673  #       Page 2: visible scanlines
                                          3674  #
                                          3675  #-----------------------------------------------------------------------
                                          3676
              0bfd 0200  nop              3677  align(0x100, size=0x100)
              0bfe 0200  nop
              0bff 0200  nop
                                          3678
                                          3679  #-----------------------------------------------------------------------
                                          3680  # Extension SYS_Sprite6_v3_64
                                          3681  # Extension SYS_Sprite6x_v3_64
                                          3682  # Extension SYS_Sprite6y_v3_64
                                          3683  # Extension SYS_Sprite6xy_v3_64
                                          3684  #-----------------------------------------------------------------------
                                          3685
                                          3686  # Blit sprite in screen memory
                                          3687  #
                                          3688  # Variables
                                          3689  #       vAC             Destination address in screen
                                          3690  #       sysArgs[0:1]    Source address of 6xY pixels (colors 0..63) terminated
                                          3691  #                       by negative byte value N (typically N = -Y)
                                          3692  #       sysArgs[2:7]    Scratch (user as copy buffer)
                                          3693  #
                                          3694  # This SYS function draws a sprite of 6 pixels wide and Y pixels high.
                                          3695  # The pixel data is read sequentually from RAM, in horizontal chunks
                                          3696  # of 6 pixels at a time, and then written to the screen through the
                                          3697  # destination pointer (each chunk underneath the previous), thus
                                          3698  # drawing a 6xY stripe. Pixel values should be non-negative. The first
                                          3699  # negative byte N after a chunk signals the end of the sprite data.
                                          3700  # So the sprite's height Y is determined by the source data and is
                                          3701  # therefore flexible. This negative byte value, typically N == -Y,
                                          3702  # is then used to adjust the destination pointer's high byte, to make
                                          3703  # it easier to draw sprites wider than 6 pixels: just repeat the SYS
                                          3704  # call for as many 6-pixel wide stripes you need. All arguments are
                                          3705  # already left in place to facilitate this. After one call, the source
                                          3706  # pointer will point past that source data, effectively:
                                          3707  #       src += Y * 6 + 1
                                          3708  # The destination pointer will have been adjusted as:
                                          3709  #       dst += (Y + N) * 256 + 6
                                          3710  # (With arithmetic wrapping around on the same memory page)
                                          3711  #
                                          3712  # Y is only limited by source memory, not by CPU cycles. The
                                          3713  # implementation is such that the SYS function self-repeats, each
                                          3714  # time drawing the next 6-pixel chunk. It can typically draw 12
                                          3715  # pixels per scanline this way.
                                          3716
                                          3717  label('SYS_Sprite6_v3_64')
                                          3718
SYS_Sprite6_v3_64:
              0c00 1124  ld   [$24],x     3719  ld([sysArgs+0],X)               #15 Pixel data source address
              0c01 1525  ld   [$25],y     3720  ld([sysArgs+1],Y)               #16
              0c02 0d00  ld   [y,x]       3721  ld([Y,X])                       #17 Next pixel or stop
              0c03 f411  bge  .sysDpx0    3722  bpl('.sysDpx0')                 #18
              0c04 de00  st   [y,x++]     3723  st([Y,Xpp])                     #19 Just X++
                                          3724
              0c05 8119  adda [$19]       3725  adda([vAC+1])                   #20 Adjust dst for convenience
              0c06 c219  st   [$19]       3726  st([vAC+1])                     #21
              0c07 0118  ld   [$18]       3727  ld([vAC])                       #22
              0c08 8006  adda $06         3728  adda(6)                         #23
              0c09 c218  st   [$18]       3729  st([vAC])                       #24
              0c0a 0124  ld   [$24]       3730  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c0b 8001  adda $01         3731  adda(1)                         #26
              0c0c c224  st   [$24]       3732  st([sysArgs+0])                 #27
              0c0d 0200  nop              3733  nop()                           #28
              0c0e 1403  ld   $03,y       3734  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c0f e0cb  jmp  y,$cb       3735  jmp(Y,'REENTER')                #30
              0c10 00ef  ld   $ef         3736  ld(-34/2)                       #31
                                          3737
                                          3738  label('.sysDpx0')
.sysDpx0:     0c11 c226  st   [$26]       3739  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c12 0d00  ld   [y,x]       3740  ld([Y,X])                       #21
              0c13 de00  st   [y,x++]     3741  st([Y,Xpp])                     #22 Just X++
              0c14 c227  st   [$27]       3742  st([sysArgs+3])                 #23
              0c15 0d00  ld   [y,x]       3743  ld([Y,X])                       #24
              0c16 de00  st   [y,x++]     3744  st([Y,Xpp])                     #25 Just X++
              0c17 c228  st   [$28]       3745  st([sysArgs+4])                 #26
              0c18 0d00  ld   [y,x]       3746  ld([Y,X])                       #27
              0c19 de00  st   [y,x++]     3747  st([Y,Xpp])                     #28 Just X++
              0c1a c229  st   [$29]       3748  st([sysArgs+5])                 #29
              0c1b 0d00  ld   [y,x]       3749  ld([Y,X])                       #30
              0c1c de00  st   [y,x++]     3750  st([Y,Xpp])                     #31 Just X++
              0c1d c22a  st   [$2a]       3751  st([sysArgs+6])                 #32
              0c1e 0d00  ld   [y,x]       3752  ld([Y,X])                       #33
              0c1f de00  st   [y,x++]     3753  st([Y,Xpp])                     #34 Just X++
              0c20 c22b  st   [$2b]       3754  st([sysArgs+7])                 #35
                                          3755
              0c21 1118  ld   [$18],x     3756  ld([vAC],X)                     #36 Screen memory destination address
              0c22 1519  ld   [$19],y     3757  ld([vAC+1],Y)                   #37
              0c23 0126  ld   [$26]       3758  ld([sysArgs+2])                 #38 Write 6 pixels
              0c24 de00  st   [y,x++]     3759  st([Y,Xpp])                     #39
              0c25 0127  ld   [$27]       3760  ld([sysArgs+3])                 #40
              0c26 de00  st   [y,x++]     3761  st([Y,Xpp])                     #41
              0c27 0128  ld   [$28]       3762  ld([sysArgs+4])                 #42
              0c28 de00  st   [y,x++]     3763  st([Y,Xpp])                     #43
              0c29 0129  ld   [$29]       3764  ld([sysArgs+5])                 #44
              0c2a de00  st   [y,x++]     3765  st([Y,Xpp])                     #45
              0c2b 012a  ld   [$2a]       3766  ld([sysArgs+6])                 #46
              0c2c de00  st   [y,x++]     3767  st([Y,Xpp])                     #47
              0c2d 012b  ld   [$2b]       3768  ld([sysArgs+7])                 #48
              0c2e de00  st   [y,x++]     3769  st([Y,Xpp])                     #49
                                          3770
              0c2f 0124  ld   [$24]       3771  ld([sysArgs+0])                 #50 src += 6
              0c30 8006  adda $06         3772  adda(6)                         #51
              0c31 c224  st   [$24]       3773  st([sysArgs+0])                 #52
              0c32 0119  ld   [$19]       3774  ld([vAC+1])                     #53 dst += 256
              0c33 8001  adda $01         3775  adda(1)                         #54
              0c34 c219  st   [$19]       3776  st([vAC+1])                     #55
                                          3777
              0c35 0116  ld   [$16]       3778  ld([vPC])                       #56 Self-repeating SYS call
              0c36 a002  suba $02         3779  suba(2)                         #57
              0c37 c216  st   [$16]       3780  st([vPC])                       #58
              0c38 1403  ld   $03,y       3781  ld(hi('REENTER'),Y)             #59
              0c39 e0cb  jmp  y,$cb       3782  jmp(Y,'REENTER')                #60
              0c3a 00e0  ld   $e0         3783  ld(-64/2)                       #61
                                          3784
              0c3b 0200  nop              3785  align(64)
              0c3c 0200  nop
              0c3d 0200  nop
              * 5 times
                                          3786  label('SYS_Sprite6x_v3_64')
                                          3787
SYS_Sprite6x_v3_64:
              0c40 1124  ld   [$24],x     3788  ld([sysArgs+0],X)               #15 Pixel data source address
              0c41 1525  ld   [$25],y     3789  ld([sysArgs+1],Y)               #16
              0c42 0d00  ld   [y,x]       3790  ld([Y,X])                       #17 Next pixel or stop
              0c43 f451  bge  .sysDpx1    3791  bpl('.sysDpx1')                 #18
              0c44 de00  st   [y,x++]     3792  st([Y,Xpp])                     #19 Just X++
                                          3793
              0c45 8119  adda [$19]       3794  adda([vAC+1])                   #20 Adjust dst for convenience
              0c46 c219  st   [$19]       3795  st([vAC+1])                     #21
              0c47 0118  ld   [$18]       3796  ld([vAC])                       #22
              0c48 a006  suba $06         3797  suba(6)                         #23
              0c49 c218  st   [$18]       3798  st([vAC])                       #24
              0c4a 0124  ld   [$24]       3799  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c4b 8001  adda $01         3800  adda(1)                         #26
              0c4c c224  st   [$24]       3801  st([sysArgs+0])                 #27
              0c4d 0200  nop              3802  nop()                           #28
              0c4e 1403  ld   $03,y       3803  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c4f e0cb  jmp  y,$cb       3804  jmp(Y,'REENTER')                #30
              0c50 00ef  ld   $ef         3805  ld(-34/2)                       #31
                                          3806
                                          3807  label('.sysDpx1')
.sysDpx1:     0c51 c22b  st   [$2b]       3808  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0c52 0d00  ld   [y,x]       3809  ld([Y,X])                       #21
              0c53 de00  st   [y,x++]     3810  st([Y,Xpp])                     #22 Just X++
              0c54 c22a  st   [$2a]       3811  st([sysArgs+6])                 #23
              0c55 0d00  ld   [y,x]       3812  ld([Y,X])                       #24
              0c56 de00  st   [y,x++]     3813  st([Y,Xpp])                     #25 Just X++
              0c57 c229  st   [$29]       3814  st([sysArgs+5])                 #26
              0c58 0d00  ld   [y,x]       3815  ld([Y,X])                       #27
              0c59 de00  st   [y,x++]     3816  st([Y,Xpp])                     #28 Just X++
              0c5a c228  st   [$28]       3817  st([sysArgs+4])                 #29
              0c5b 0d00  ld   [y,x]       3818  ld([Y,X])                       #30
              0c5c de00  st   [y,x++]     3819  st([Y,Xpp])                     #31 Just X++
              0c5d c227  st   [$27]       3820  st([sysArgs+3])                 #32
              0c5e 0d00  ld   [y,x]       3821  ld([Y,X])                       #33
              0c5f de00  st   [y,x++]     3822  st([Y,Xpp])                     #34 Just X++
                                          3823
              0c60 1118  ld   [$18],x     3824  ld([vAC],X)                     #35 Screen memory destination address
              0c61 1519  ld   [$19],y     3825  ld([vAC+1],Y)                   #36
              0c62 de00  st   [y,x++]     3826  st([Y,Xpp])                     #37 Write 6 pixels
              0c63 0127  ld   [$27]       3827  ld([sysArgs+3])                 #38
              0c64 de00  st   [y,x++]     3828  st([Y,Xpp])                     #39
              0c65 0128  ld   [$28]       3829  ld([sysArgs+4])                 #40
              0c66 de00  st   [y,x++]     3830  st([Y,Xpp])                     #41
              0c67 0129  ld   [$29]       3831  ld([sysArgs+5])                 #42
              0c68 de00  st   [y,x++]     3832  st([Y,Xpp])                     #43
              0c69 012a  ld   [$2a]       3833  ld([sysArgs+6])                 #44
              0c6a de00  st   [y,x++]     3834  st([Y,Xpp])                     #45
              0c6b 012b  ld   [$2b]       3835  ld([sysArgs+7])                 #46
              0c6c de00  st   [y,x++]     3836  st([Y,Xpp])                     #47
                                          3837
              0c6d 0124  ld   [$24]       3838  ld([sysArgs+0])                 #48 src += 6
              0c6e 8006  adda $06         3839  adda(6)                         #49
              0c6f c224  st   [$24]       3840  st([sysArgs+0])                 #50
              0c70 0119  ld   [$19]       3841  ld([vAC+1])                     #51 dst += 256
              0c71 8001  adda $01         3842  adda(1)                         #52
              0c72 c219  st   [$19]       3843  st([vAC+1])                     #53
                                          3844
              0c73 0116  ld   [$16]       3845  ld([vPC])                       #54 Self-repeating SYS call
              0c74 a002  suba $02         3846  suba(2)                         #55
              0c75 c216  st   [$16]       3847  st([vPC])                       #56
              0c76 1403  ld   $03,y       3848  ld(hi('REENTER'),Y)             #57
              0c77 e0cb  jmp  y,$cb       3849  jmp(Y,'REENTER')                #58
              0c78 00e1  ld   $e1         3850  ld(-62/2)                       #59
                                          3851
              0c79 0200  nop              3852  align(64)
              0c7a 0200  nop
              0c7b 0200  nop
              * 7 times
                                          3853  label('SYS_Sprite6y_v3_64')
                                          3854
SYS_Sprite6y_v3_64:
              0c80 1124  ld   [$24],x     3855  ld([sysArgs+0],X)               #15 Pixel data source address
              0c81 1525  ld   [$25],y     3856  ld([sysArgs+1],Y)               #16
              0c82 0d00  ld   [y,x]       3857  ld([Y,X])                       #17 Next pixel or stop
              0c83 f493  bge  .sysDpx2    3858  bpl('.sysDpx2')                 #18
              0c84 de00  st   [y,x++]     3859  st([Y,Xpp])                     #19 Just X++
                                          3860
              0c85 60ff  xora $ff         3861  xora(255)                       #20 Adjust dst for convenience
              0c86 8001  adda $01         3862  adda(1)                         #21
              0c87 8119  adda [$19]       3863  adda([vAC+1])                   #22
              0c88 c219  st   [$19]       3864  st([vAC+1])                     #23
              0c89 0118  ld   [$18]       3865  ld([vAC])                       #24
              0c8a 8006  adda $06         3866  adda(6)                         #25
              0c8b c218  st   [$18]       3867  st([vAC])                       #26
              0c8c 0124  ld   [$24]       3868  ld([sysArgs+0])                 #27 Adjust src for convenience
              0c8d 8001  adda $01         3869  adda(1)                         #28
              0c8e c224  st   [$24]       3870  st([sysArgs+0])                 #29
              0c8f 0200  nop              3871  nop()                           #30
              0c90 1403  ld   $03,y       3872  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0c91 e0cb  jmp  y,$cb       3873  jmp(Y,'REENTER')                #32
              0c92 00ee  ld   $ee         3874  ld(-36/2)                       #33
                                          3875
                                          3876  label('.sysDpx2')
.sysDpx2:     0c93 c226  st   [$26]       3877  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c94 0d00  ld   [y,x]       3878  ld([Y,X])                       #21
              0c95 de00  st   [y,x++]     3879  st([Y,Xpp])                     #22 Just X++
              0c96 c227  st   [$27]       3880  st([sysArgs+3])                 #23
              0c97 0d00  ld   [y,x]       3881  ld([Y,X])                       #24
              0c98 de00  st   [y,x++]     3882  st([Y,Xpp])                     #25 Just X++
              0c99 c228  st   [$28]       3883  st([sysArgs+4])                 #26
              0c9a 0d00  ld   [y,x]       3884  ld([Y,X])                       #27
              0c9b de00  st   [y,x++]     3885  st([Y,Xpp])                     #28 Just X++
              0c9c c229  st   [$29]       3886  st([sysArgs+5])                 #29
              0c9d 0d00  ld   [y,x]       3887  ld([Y,X])                       #30
              0c9e de00  st   [y,x++]     3888  st([Y,Xpp])                     #31 Just X++
              0c9f c22a  st   [$2a]       3889  st([sysArgs+6])                 #32
              0ca0 0d00  ld   [y,x]       3890  ld([Y,X])                       #33
              0ca1 de00  st   [y,x++]     3891  st([Y,Xpp])                     #34 Just X++
              0ca2 c22b  st   [$2b]       3892  st([sysArgs+7])                 #35
                                          3893
              0ca3 1118  ld   [$18],x     3894  ld([vAC],X)                     #36 Screen memory destination address
              0ca4 1519  ld   [$19],y     3895  ld([vAC+1],Y)                   #37
              0ca5 0126  ld   [$26]       3896  ld([sysArgs+2])                 #38 Write 6 pixels
              0ca6 de00  st   [y,x++]     3897  st([Y,Xpp])                     #39
              0ca7 0127  ld   [$27]       3898  ld([sysArgs+3])                 #40
              0ca8 de00  st   [y,x++]     3899  st([Y,Xpp])                     #41
              0ca9 0128  ld   [$28]       3900  ld([sysArgs+4])                 #42
              0caa de00  st   [y,x++]     3901  st([Y,Xpp])                     #43
              0cab 0129  ld   [$29]       3902  ld([sysArgs+5])                 #44
              0cac de00  st   [y,x++]     3903  st([Y,Xpp])                     #45
              0cad 012a  ld   [$2a]       3904  ld([sysArgs+6])                 #46
              0cae de00  st   [y,x++]     3905  st([Y,Xpp])                     #47
              0caf 012b  ld   [$2b]       3906  ld([sysArgs+7])                 #48
              0cb0 de00  st   [y,x++]     3907  st([Y,Xpp])                     #49
                                          3908
              0cb1 0124  ld   [$24]       3909  ld([sysArgs+0])                 #50 src += 6
              0cb2 8006  adda $06         3910  adda(6)                         #51
              0cb3 c224  st   [$24]       3911  st([sysArgs+0])                 #52
              0cb4 0119  ld   [$19]       3912  ld([vAC+1])                     #53 dst -= 256
              0cb5 a001  suba $01         3913  suba(1)                         #54
              0cb6 c219  st   [$19]       3914  st([vAC+1])                     #55
                                          3915
              0cb7 0116  ld   [$16]       3916  ld([vPC])                       #56 Self-repeating SYS call
              0cb8 a002  suba $02         3917  suba(2)                         #57
              0cb9 c216  st   [$16]       3918  st([vPC])                       #58
              0cba 1403  ld   $03,y       3919  ld(hi('REENTER'),Y)             #59
              0cbb e0cb  jmp  y,$cb       3920  jmp(Y,'REENTER')                #60
              0cbc 00e0  ld   $e0         3921  ld(-64/2)                       #61
                                          3922
              0cbd 0200  nop              3923  align(64)
              0cbe 0200  nop
              0cbf 0200  nop
                                          3924  label('SYS_Sprite6xy_v3_64')
                                          3925
SYS_Sprite6xy_v3_64:
              0cc0 1124  ld   [$24],x     3926  ld([sysArgs+0],X)               #15 Pixel data source address
              0cc1 1525  ld   [$25],y     3927  ld([sysArgs+1],Y)               #16
              0cc2 0d00  ld   [y,x]       3928  ld([Y,X])                       #17 Next pixel or stop
              0cc3 f4d3  bge  .sysDpx3    3929  bpl('.sysDpx3')                 #18
              0cc4 de00  st   [y,x++]     3930  st([Y,Xpp])                     #19 Just X++
                                          3931
              0cc5 60ff  xora $ff         3932  xora(255)                       #20 Adjust dst for convenience
              0cc6 8001  adda $01         3933  adda(1)                         #21
              0cc7 8119  adda [$19]       3934  adda([vAC+1])                   #22
              0cc8 c219  st   [$19]       3935  st([vAC+1])                     #23
              0cc9 0118  ld   [$18]       3936  ld([vAC])                       #24
              0cca a006  suba $06         3937  suba(6)                         #25
              0ccb c218  st   [$18]       3938  st([vAC])                       #26
              0ccc 0124  ld   [$24]       3939  ld([sysArgs+0])                 #27 Adjust src for convenience
              0ccd 8001  adda $01         3940  adda(1)                         #28
              0cce c224  st   [$24]       3941  st([sysArgs+0])                 #29
              0ccf 0200  nop              3942  nop()                           #30
              0cd0 1403  ld   $03,y       3943  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0cd1 e0cb  jmp  y,$cb       3944  jmp(Y,'REENTER')                #32
              0cd2 00ee  ld   $ee         3945  ld(-36/2)                       #33
                                          3946
                                          3947  label('.sysDpx3')
.sysDpx3:     0cd3 c22b  st   [$2b]       3948  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0cd4 0d00  ld   [y,x]       3949  ld([Y,X])                       #21
              0cd5 de00  st   [y,x++]     3950  st([Y,Xpp])                     #22 Just X++
              0cd6 c22a  st   [$2a]       3951  st([sysArgs+6])                 #23
              0cd7 0d00  ld   [y,x]       3952  ld([Y,X])                       #24
              0cd8 de00  st   [y,x++]     3953  st([Y,Xpp])                     #25 Just X++
              0cd9 c229  st   [$29]       3954  st([sysArgs+5])                 #26
              0cda 0d00  ld   [y,x]       3955  ld([Y,X])                       #27
              0cdb de00  st   [y,x++]     3956  st([Y,Xpp])                     #28 Just X++
              0cdc c228  st   [$28]       3957  st([sysArgs+4])                 #29
              0cdd 0d00  ld   [y,x]       3958  ld([Y,X])                       #30
              0cde de00  st   [y,x++]     3959  st([Y,Xpp])                     #31 Just X++
              0cdf c227  st   [$27]       3960  st([sysArgs+3])                 #32
              0ce0 0d00  ld   [y,x]       3961  ld([Y,X])                       #33
              0ce1 de00  st   [y,x++]     3962  st([Y,Xpp])                     #34 Just X++
                                          3963
              0ce2 1118  ld   [$18],x     3964  ld([vAC],X)                     #35 Screen memory destination address
              0ce3 1519  ld   [$19],y     3965  ld([vAC+1],Y)                   #36
              0ce4 de00  st   [y,x++]     3966  st([Y,Xpp])                     #37 Write 6 pixels
              0ce5 0127  ld   [$27]       3967  ld([sysArgs+3])                 #38
              0ce6 de00  st   [y,x++]     3968  st([Y,Xpp])                     #39
              0ce7 0128  ld   [$28]       3969  ld([sysArgs+4])                 #40
              0ce8 de00  st   [y,x++]     3970  st([Y,Xpp])                     #41
              0ce9 0129  ld   [$29]       3971  ld([sysArgs+5])                 #42
              0cea de00  st   [y,x++]     3972  st([Y,Xpp])                     #43
              0ceb 012a  ld   [$2a]       3973  ld([sysArgs+6])                 #44
              0cec de00  st   [y,x++]     3974  st([Y,Xpp])                     #45
              0ced 012b  ld   [$2b]       3975  ld([sysArgs+7])                 #46
              0cee de00  st   [y,x++]     3976  st([Y,Xpp])                     #47
                                          3977
              0cef 0124  ld   [$24]       3978  ld([sysArgs+0])                 #48 src += 6
              0cf0 8006  adda $06         3979  adda(6)                         #49
              0cf1 c224  st   [$24]       3980  st([sysArgs+0])                 #50
              0cf2 0119  ld   [$19]       3981  ld([vAC+1])                     #51 dst -= 256
              0cf3 a001  suba $01         3982  suba(1)                         #52
              0cf4 c219  st   [$19]       3983  st([vAC+1])                     #53
                                          3984
              0cf5 0116  ld   [$16]       3985  ld([vPC])                       #54 Self-repeating SYS call
              0cf6 a002  suba $02         3986  suba(2)                         #55
              0cf7 c216  st   [$16]       3987  st([vPC])                       #56
              0cf8 1403  ld   $03,y       3988  ld(hi('REENTER'),Y)             #57
              0cf9 e0cb  jmp  y,$cb       3989  jmp(Y,'REENTER')                #58
              0cfa 00e1  ld   $e1         3990  ld(-62/2)                       #59
                                          3991
                                          3992  #-----------------------------------------------------------------------
                                          3993
              0cfb 0200  nop              3994  align(0x100)
              0cfc 0200  nop
              0cfd 0200  nop
              * 5 times
                                          3995
                                          3996  label('sys_ExpanderControl')
                                          3997
sys_ExpanderControl:
              0d00 1401  ld   $01,y       3998  ld(hi(ctrlBits),Y)                  #18
              0d01 2118  anda [$18]       3999  anda([vAC])                         #19 check for special ctrl code space
              0d02 f009  beq  sysEx#22    4000  beq('sysEx#22')                     #20
              0d03 0118  ld   [$18]       4001  ld([vAC])                           #21 load low byte of ctrl code in delay slot
              0d04 20fc  anda $fc         4002  anda(0xfc)                          #22 sanitize normal ctrl code
              0d05 caf8  st   [y,$f8]     4003  st([Y,ctrlBits])                    #23 store in ctrlBits
              0d06 c21d  st   [$1d]       4004  st([vTmp])                          #24 store in vTmp
              0d07 fc0e  bra  sysEx#27    4005  bra('sysEx#27')                     #25 jump to issuing normal ctrl code
              0d08 1519  ld   [$19],y     4006  ld([vAC+1],Y)                       #26 load high byte of ctrl code in delay slot
                                          4007  label('sysEx#22')
sysEx#22:     0d09 30fc  anda $fc,x       4008  anda(0xfc,X)                        #22 * special ctrl code
              0d0a 09f8  ld   [y,$f8]     4009  ld([Y,ctrlBits])                    #23 get previous normal code from ctrlBits
              0d0b c21d  st   [$1d]       4010  st([vTmp])                          #24 save it in vTmp
              0d0c 1519  ld   [$19],y     4011  ld([vAC+1],Y)                       #25 load high byte of ctrl code
              0d0d cd00  ctrl y,x         4012  ctrl(Y,X)                           #26 issue special ctrl code
                                          4013  label('sysEx#27')
sysEx#27:     0d0e 011d  ld   [$1d]       4014  ld([vTmp])                          #27 load saved normal ctrl code
              0d0f 30fc  anda $fc,x       4015  anda(0xfc,X)                        #28 sanitize ctrlBits
              0d10 cd00  ctrl y,x         4016  ctrl(Y,X)                           #29 issue normal ctrl code
              0d11 011d  ld   [$1d]       4017  ld([vTmp])                          #30 always load something after ctrl
              0d12 1403  ld   $03,y       4018  ld(hi('REENTER'),Y)                 #31
              0d13 e0cb  jmp  y,$cb       4019  jmp(Y,'REENTER')                    #32
              0d14 00ee  ld   $ee         4020  ld(-36/2)                           #33
                                          4021
                                          4022  #-----------------------------------------------------------------------
                                          4023
                                          4024  label('sys_SpiExchangeBytes')
                                          4025
sys_SpiExchangeBytes:
              0d15 09f8  ld   [y,$f8]     4026  ld([Y,ctrlBits])                #18
              0d16 c228  st   [$28]       4027  st([sysArgs+4])                 #19
                                          4028
              0d17 1124  ld   [$24],x     4029  ld([sysArgs+0],X)               #20 Fetch byte to send
              0d18 1525  ld   [$25],y     4030  ld([sysArgs+1],Y)               #21
              0d19 0d00  ld   [y,x]       4031  ld([Y,X])                       #22
                                          4032
                                          4033  for i in range(8):
                                          4034    st([vTmp],Y);C('Bit %d'%(7-i))#23+i*12
              0d1a d61d  st   [$1d],y     ;Bit 7
              0d1b 1128  ld   [$28],x     4035    ld([sysArgs+4],X)             #24+i*12
              0d1c dd00  ctrl y,x++       4036    ctrl(Y,Xpp)                   #25+i*12 Set MOSI
              0d1d dd00  ctrl y,x++       4037    ctrl(Y,Xpp)                   #26+i*12 Raise SCLK, disable RAM!
              0d1e 0100  ld   [$00]       4038    ld([0])                       #27+i*12 Get MISO
              0d1f 200f  anda $0f         4039    anda(0b00001111)              #28+i*12 This is why R1 as pull-DOWN is simpler
              0d20 f023  beq  $0d23       4040    beq(pc()+3)                   #29+i*12
              0d21 fc23  bra  $0d23       4041    bra(pc()+2)                   #30+i*12
              0d22 0001  ld   $01         4042    ld(1)                         #31+i*12
              0d23 cd00  ctrl y,x         4043    ctrl(Y,X)                     #32+i*12,29+i*12 (Must be idempotent) Lower SCLK
              0d24 811d  adda [$1d]       4044    adda([vTmp])                  #33+i*12 Shift
              0d25 811d  adda [$1d]       4045    adda([vTmp])                  #34+i*12
              0d26 d61d  st   [$1d],y     ;Bit 6
              0d27 1128  ld   [$28],x
              0d28 dd00  ctrl y,x++
              0d29 dd00  ctrl y,x++
              0d2a 0100  ld   [$00]
              0d2b 200f  anda $0f
              0d2c f02f  beq  $0d2f
              0d2d fc2f  bra  $0d2f
              0d2e 0001  ld   $01
              0d2f cd00  ctrl y,x
              0d30 811d  adda [$1d]
              0d31 811d  adda [$1d]
              0d32 d61d  st   [$1d],y     ;Bit 5
              0d33 1128  ld   [$28],x
              0d34 dd00  ctrl y,x++
              0d35 dd00  ctrl y,x++
              0d36 0100  ld   [$00]
              0d37 200f  anda $0f
              0d38 f03b  beq  $0d3b
              0d39 fc3b  bra  $0d3b
              0d3a 0001  ld   $01
              0d3b cd00  ctrl y,x
              0d3c 811d  adda [$1d]
              0d3d 811d  adda [$1d]
              0d3e d61d  st   [$1d],y     ;Bit 4
              0d3f 1128  ld   [$28],x
              0d40 dd00  ctrl y,x++
              0d41 dd00  ctrl y,x++
              0d42 0100  ld   [$00]
              0d43 200f  anda $0f
              0d44 f047  beq  $0d47
              0d45 fc47  bra  $0d47
              0d46 0001  ld   $01
              0d47 cd00  ctrl y,x
              0d48 811d  adda [$1d]
              0d49 811d  adda [$1d]
              0d4a d61d  st   [$1d],y     ;Bit 3
              0d4b 1128  ld   [$28],x
              0d4c dd00  ctrl y,x++
              0d4d dd00  ctrl y,x++
              0d4e 0100  ld   [$00]
              0d4f 200f  anda $0f
              0d50 f053  beq  $0d53
              0d51 fc53  bra  $0d53
              0d52 0001  ld   $01
              0d53 cd00  ctrl y,x
              0d54 811d  adda [$1d]
              0d55 811d  adda [$1d]
              0d56 d61d  st   [$1d],y     ;Bit 2
              0d57 1128  ld   [$28],x
              0d58 dd00  ctrl y,x++
              0d59 dd00  ctrl y,x++
              0d5a 0100  ld   [$00]
              0d5b 200f  anda $0f
              0d5c f05f  beq  $0d5f
              0d5d fc5f  bra  $0d5f
              0d5e 0001  ld   $01
              0d5f cd00  ctrl y,x
              0d60 811d  adda [$1d]
              0d61 811d  adda [$1d]
              0d62 d61d  st   [$1d],y     ;Bit 1
              0d63 1128  ld   [$28],x
              0d64 dd00  ctrl y,x++
              0d65 dd00  ctrl y,x++
              0d66 0100  ld   [$00]
              0d67 200f  anda $0f
              0d68 f06b  beq  $0d6b
              0d69 fc6b  bra  $0d6b
              0d6a 0001  ld   $01
              0d6b cd00  ctrl y,x
              0d6c 811d  adda [$1d]
              0d6d 811d  adda [$1d]
              0d6e d61d  st   [$1d],y     ;Bit 0
              0d6f 1128  ld   [$28],x
              0d70 dd00  ctrl y,x++
              0d71 dd00  ctrl y,x++
              0d72 0100  ld   [$00]
              0d73 200f  anda $0f
              0d74 f077  beq  $0d77
              0d75 fc77  bra  $0d77
              0d76 0001  ld   $01
              0d77 cd00  ctrl y,x
              0d78 811d  adda [$1d]
              0d79 811d  adda [$1d]
                                          4046
              0d7a 1124  ld   [$24],x     4047  ld([sysArgs+0],X)               #119 Store received byte
              0d7b 1527  ld   [$27],y     4048  ld([sysArgs+3],Y)               #120
              0d7c ce00  st   [y,x]       4049  st([Y,X])                       #121
                                          4050
              0d7d 0124  ld   [$24]       4051  ld([sysArgs+0])                 #122 Advance pointer
              0d7e 8001  adda $01         4052  adda(1)                         #123
              0d7f c224  st   [$24]       4053  st([sysArgs+0])                 #124
                                          4054
              0d80 6126  xora [$26]       4055  xora([sysArgs+2])               #125 Reached end?
              0d81 f088  beq  .sysSpi#128 4056  beq('.sysSpi#128')              #126
                                          4057
              0d82 0116  ld   [$16]       4058  ld([vPC])                       #127 Self-repeating SYS call
              0d83 a002  suba $02         4059  suba(2)                         #128
              0d84 c216  st   [$16]       4060  st([vPC])                       #129
              0d85 1403  ld   $03,y       4061  ld(hi('NEXTY'),Y)               #130
              0d86 e000  jmp  y,$00       4062  jmp(Y,'NEXTY')                  #131
              0d87 00bd  ld   $bd         4063  ld(-134/2)                      #132
                                          4064
                                          4065  label('.sysSpi#128')
.sysSpi#128:  0d88 1403  ld   $03,y       4066  ld(hi('NEXTY'),Y)               #128 Continue program
              0d89 e000  jmp  y,$00       4067  jmp(Y,'NEXTY')                  #129
              0d8a 00be  ld   $be         4068  ld(-132/2)                      #130
                                          4069
                                          4070  #-----------------------------------------------------------------------
                                          4071
                                          4072  label('sys_v6502')
                                          4073
sys_v6502:    0d8b d602  st   [$02],y     4074  st([vCpuSelect],Y)              #18 Activate v6502
              0d8c 00f5  ld   $f5         4075  ld(-22/2)                       #19
              0d8d e0ff  jmp  y,$ff       4076  jmp(Y,'v6502_ENTER')            #20 Transfer control in the same time slice
              0d8e 8115  adda [$15]       4077  adda([vTicks])                  #21
                                          4078  assert (38 - 22)//2 >= v6502_adjust
                                          4079
                                          4080  #-----------------------------------------------------------------------
                                          4081  #       MOS 6502 emulator
                                          4082  #-----------------------------------------------------------------------
                                          4083
                                          4084  # Some quirks:
                                          4085  # - Stack in zero page instead of page 1
                                          4086  # - No interrupts
                                          4087  # - No decimal mode (may never be added). D flag is emulated but ignored.
                                          4088  # - BRK switches back to running 16-bits vCPU
                                          4089  # - Illegal opcodes map to BRK, but can read ghost operands before trapping
                                          4090  # - Illegal opcode $ff won't be trapped and cause havoc instead
                                          4091
                                          4092  # Big things TODO:
                                          4093  # XXX Tuning, put most frequent instructions in the primary page
                                          4094
                                          4095  label('v6502_ror')
                                          4096  assert v6502_Cflag == 1
v6502_ror:    0d8f 1525  ld   [$25],y     4097  ld([v6502_ADH],Y)               #12
              0d90 00fc  ld   $fc         4098  ld(-46//2+v6502_maxTicks)       #13 Is there enough time for the excess ticks?
              0d91 8115  adda [$15]       4099  adda([vTicks])                  #14
              0d92 e8a6  blt  .recheck17  4100  blt('.recheck17')               #15
              0d93 0127  ld   [$27]       4101  ld([v6502_P])                   #16 Transfer C to "bit 8"
              0d94 2001  anda $01         4102  anda(1)                         #17
              0d95 807f  adda $7f         4103  adda(127)                       #18
              0d96 2080  anda $80         4104  anda(128)                       #19
              0d97 c219  st   [$19]       4105  st([v6502_BI])                  #20 The real 6502 wouldn't use BI for this
              0d98 0127  ld   [$27]       4106  ld([v6502_P])                   #21 Transfer bit 0 to C
              0d99 20fe  anda $fe         4107  anda(~1)                        #22
              0d9a c227  st   [$27]       4108  st([v6502_P])                   #23
              0d9b 0d00  ld   [y,x]       4109  ld([Y,X])                       #24
              0d9c 2001  anda $01         4110  anda(1)                         #25
              0d9d 4127  ora  [$27]       4111  ora([v6502_P])                  #26
              0d9e c227  st   [$27]       4112  st([v6502_P])                   #27
              0d9f 00c0  ld   $c0         4113  ld('v6502_ror#38')              #28 Shift table lookup
              0da0 c21d  st   [$1d]       4114  st([vTmp])                      #29
              0da1 0d00  ld   [y,x]       4115  ld([Y,X])                       #30
              0da2 20fe  anda $fe         4116  anda(~1)                        #31
              0da3 1405  ld   $05,y       4117  ld(hi('shiftTable'),Y)          #32
              0da4 e200  jmp  y,ac        4118  jmp(Y,AC)                       #33
              0da5 fcff  bra  $ff         4119  bra(255)                        #34 bra shiftTable+255
                                          4120  label('.recheck17')
.recheck17:   0da6 140e  ld   $0e,y       4121  ld(hi('v6502_check'),Y)         #17 Go back to time check before dispatch
              0da7 e0f2  jmp  y,$f2       4122  jmp(Y,'v6502_check')            #18
              0da8 00f6  ld   $f6         4123  ld(-20/2)                       #19
                                          4124
                                          4125  label('v6502_lsr')
                                          4126  assert v6502_Cflag == 1
v6502_lsr:    0da9 1525  ld   [$25],y     4127  ld([v6502_ADH],Y)               #12
              0daa 0127  ld   [$27]       4128  ld([v6502_P])                   #13 Transfer bit 0 to C
              0dab 20fe  anda $fe         4129  anda(~1)                        #14
              0dac c227  st   [$27]       4130  st([v6502_P])                   #15
              0dad 0d00  ld   [y,x]       4131  ld([Y,X])                       #16
              0dae 2001  anda $01         4132  anda(1)                         #17
              0daf 4127  ora  [$27]       4133  ora([v6502_P])                  #18
              0db0 c227  st   [$27]       4134  st([v6502_P])                   #19
              0db1 00b9  ld   $b9         4135  ld('v6502_lsr#30')              #20 Shift table lookup
              0db2 c21d  st   [$1d]       4136  st([vTmp])                      #21
              0db3 0d00  ld   [y,x]       4137  ld([Y,X])                       #22
              0db4 20fe  anda $fe         4138  anda(~1)                        #23
              0db5 1405  ld   $05,y       4139  ld(hi('shiftTable'),Y)          #24
              0db6 e200  jmp  y,ac        4140  jmp(Y,AC)                       #25
              0db7 fcff  bra  $ff         4141  bra(255)                        #26 bra shiftTable+255
                                          4142
                                          4143  label('v6502_rol')
                                          4144  assert v6502_Cflag == 1
v6502_rol:    0db8 1525  ld   [$25],y     4145  ld([v6502_ADH],Y)               #12
              0db9 0d00  ld   [y,x]       4146  ld([Y,X])                       #13
              0dba 2080  anda $80         4147  anda(0x80)                      #14
              0dbb c21d  st   [$1d]       4148  st([v6502_Tmp])                 #15
              0dbc 0127  ld   [$27]       4149  ld([v6502_P])                   #16
              0dbd 2001  anda $01         4150  anda(1)                         #17
                                          4151  label('.rol#18')
.rol#18:      0dbe 8d00  adda [y,x]       4152  adda([Y,X])                     #18
              0dbf 8d00  adda [y,x]       4153  adda([Y,X])                     #19
              0dc0 ce00  st   [y,x]       4154  st([Y,X])                       #20
              0dc1 c228  st   [$28]       4155  st([v6502_Qz])                  #21 Z flag
              0dc2 c229  st   [$29]       4156  st([v6502_Qn])                  #22 N flag
              0dc3 0127  ld   [$27]       4157  ld([v6502_P])                   #23 C Flag
              0dc4 20fe  anda $fe         4158  anda(~1)                        #24
              0dc5 111d  ld   [$1d],x     4159  ld([v6502_Tmp],X)               #25
              0dc6 4500  ora  [x]         4160  ora([X])                        #26
              0dc7 c227  st   [$27]       4161  st([v6502_P])                   #27
              0dc8 140e  ld   $0e,y       4162  ld(hi('v6502_next'),Y)          #28
              0dc9 00f0  ld   $f0         4163  ld(-32/2)                       #29
              0dca e020  jmp  y,$20       4164  jmp(Y,'v6502_next')             #30
                                          4165  #nop()                          #31 Overlap
                                          4166  #
                                          4167  label('v6502_asl')
v6502_asl:    0dcb 1525  ld   [$25],y     4168  ld([v6502_ADH],Y)               #12,32
              0dcc 0d00  ld   [y,x]       4169  ld([Y,X])                       #13
              0dcd 2080  anda $80         4170  anda(0x80)                      #14
              0dce c21d  st   [$1d]       4171  st([v6502_Tmp])                 #15
              0dcf fcbe  bra  .rol#18     4172  bra('.rol#18')                  #16
              0dd0 0000  ld   $00         4173  ld(0)                           #17
                                          4174
                                          4175  label('v6502_jmp1')
v6502_jmp1:   0dd1 0200  nop              4176  nop()                           #12
              0dd2 0124  ld   [$24]       4177  ld([v6502_ADL])                 #13
              0dd3 c21a  st   [$1a]       4178  st([v6502_PCL])                 #14
              0dd4 0125  ld   [$25]       4179  ld([v6502_ADH])                 #15
              0dd5 c21b  st   [$1b]       4180  st([v6502_PCH])                 #16
              0dd6 140e  ld   $0e,y       4181  ld(hi('v6502_next'),Y)          #17
              0dd7 e020  jmp  y,$20       4182  jmp(Y,'v6502_next')             #18
              0dd8 00f6  ld   $f6         4183  ld(-20/2)                       #19
                                          4184
                                          4185  label('v6502_jmp2')
v6502_jmp2:   0dd9 0200  nop              4186  nop()                           #12
              0dda 1525  ld   [$25],y     4187  ld([v6502_ADH],Y)               #13
              0ddb 0d00  ld   [y,x]       4188  ld([Y,X])                       #14
              0ddc de00  st   [y,x++]     4189  st([Y,Xpp])                     #15 (Just X++) Wrap around: bug compatible with NMOS
              0ddd c21a  st   [$1a]       4190  st([v6502_PCL])                 #16
              0dde 0d00  ld   [y,x]       4191  ld([Y,X])                       #17
              0ddf c21b  st   [$1b]       4192  st([v6502_PCH])                 #18
              0de0 140e  ld   $0e,y       4193  ld(hi('v6502_next'),Y)          #19
              0de1 e020  jmp  y,$20       4194  jmp(Y,'v6502_next')             #20
              0de2 00f5  ld   $f5         4195  ld(-22/2)                       #21
                                          4196
                                          4197  label('v6502_pla')
v6502_pla:    0de3 011c  ld   [$1c]       4198  ld([v6502_S])                   #12
              0de4 1200  ld   ac,x        4199  ld(AC,X)                        #13
              0de5 8001  adda $01         4200  adda(1)                         #14
              0de6 c21c  st   [$1c]       4201  st([v6502_S])                   #15
              0de7 0500  ld   [x]         4202  ld([X])                         #16
              0de8 c218  st   [$18]       4203  st([v6502_A])                   #17
              0de9 c228  st   [$28]       4204  st([v6502_Qz])                  #18 Z flag
              0dea c229  st   [$29]       4205  st([v6502_Qn])                  #19 N flag
              0deb 140e  ld   $0e,y       4206  ld(hi('v6502_next'),Y)          #20
              0dec 00f4  ld   $f4         4207  ld(-24/2)                       #21
              0ded e020  jmp  y,$20       4208  jmp(Y,'v6502_next')             #22
                                          4209  #nop()                          #23 Overlap
                                          4210  #
                                          4211  label('v6502_pha')
v6502_pha:    0dee 140e  ld   $0e,y       4212  ld(hi('v6502_next'),Y)          #12,24
              0def 011c  ld   [$1c]       4213  ld([v6502_S])                   #13
              0df0 a001  suba $01         4214  suba(1)                         #14
              0df1 d21c  st   [$1c],x     4215  st([v6502_S],X)                 #15
              0df2 0118  ld   [$18]       4216  ld([v6502_A])                   #16
              0df3 c600  st   [x]         4217  st([X])                         #17
              0df4 e020  jmp  y,$20       4218  jmp(Y,'v6502_next')             #18
              0df5 00f6  ld   $f6         4219  ld(-20/2)                       #19
                                          4220
                                          4221  label('v6502_brk')
v6502_brk:    0df6 0002  ld   $02         4222  ld(hi('ENTER'))                 #12 Switch to vCPU
              0df7 c202  st   [$02]       4223  st([vCpuSelect])                #13
                                          4224  assert v6502_A == vAC
              0df8 0000  ld   $00         4225  ld(0)                           #14
              0df9 c219  st   [$19]       4226  st([vAC+1])                     #15
              0dfa 1403  ld   $03,y       4227  ld(hi('REENTER'),Y)             #16 Switch in the current time slice
              0dfb 00fa  ld   $fa         4228  ld(-22//2+v6502_adjust)         #17
              0dfc e0cb  jmp  y,$cb       4229  jmp(Y,'REENTER')                #18
              0dfd 0200  nop              4230  nop()                           #19
                                          4231
                                          4232  # All interpreter entry points must share the same page offset, because
                                          4233  # this offset is hard-coded as immediate operand in the video driver.
                                          4234  # The Gigatron's original vCPU's 'ENTER' label is already at $2ff, so we
                                          4235  # just use $dff for 'v6502_ENTER'. v6502 actually has two entry points.
                                          4236  # The other is 'v6502_RESUME' at $10ff. It is used for instructions
                                          4237  # that were fetched but not yet executed. Allowing the split gives finer
                                          4238  # granulariy, and hopefully more throughput for the simpler instructions.
                                          4239  # (There is no "overhead" for allowing instruction splitting, because
                                          4240  #  both emulation phases must administer [vTicks] anyway.)
                                          4241  while pc()&255 < 255:
              0dfe 0200  nop              4242    nop()
                                          4243  label('v6502_ENTER')
v6502_ENTER:  0dff fc22  bra  v6502_next2 4244  bra('v6502_next2')              #0 v6502 primary entry point
                                          4245  # --- Page boundary ---
              0e00 a005  suba $05         4246  suba(v6502_adjust)              #1,19 Adjust for vCPU/v6520 timing differences
                                          4247
                                          4248  #19 Addressing modes
                                          4249  (   'v6502_mode0'  ); bra('v6502_modeIZX'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $00 xxx000xx
              0e01 fce0  bra  v6502_modeIZX
              0e02 fc42  bra  v6502_modeIMM
              0e03 fc58  bra  v6502_modeIMP
                                          4250  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeILL') # $04 xxx001xx
              0e04 fc5d  bra  v6502_modeZP
              0e05 fc5d  bra  v6502_modeZP
              0e06 fc5d  bra  v6502_modeZP
              0e07 fc58  bra  v6502_modeIMP
                                          4251  bra('v6502_modeIMP'); bra('v6502_modeIMM'); bra('v6502_modeACC'); bra('v6502_modeILL') # $08 xxx010xx
              0e08 fc58  bra  v6502_modeIMP
              0e09 fc42  bra  v6502_modeIMM
              0e0a fc52  bra  v6502_modeACC
              0e0b fc58  bra  v6502_modeIMP
                                          4252  bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeILL') # $0c xxx011xx
              0e0c fc78  bra  v6502_modeABS
              0e0d fc78  bra  v6502_modeABS
              0e0e fc78  bra  v6502_modeABS
              0e0f fc58  bra  v6502_modeIMP
                                          4253  bra('v6502_modeREL'); bra('v6502_modeIZY'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $10 xxx100xx
              0e10 fccf  bra  v6502_modeREL
              0e11 fcab  bra  v6502_modeIZY
              0e12 fc42  bra  v6502_modeIMM
              0e13 fc58  bra  v6502_modeIMP
                                          4254  bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeILL') # $14 xxx101xx
              0e14 fc5b  bra  v6502_modeZPX
              0e15 fc5b  bra  v6502_modeZPX
              0e16 fc5b  bra  v6502_modeZPX
              0e17 fc58  bra  v6502_modeIMP
                                          4255  bra('v6502_modeIMP'); bra('v6502_modeABY'); bra('v6502_modeIMP'); bra('v6502_modeILL') # $18 xxx110xx
              0e18 fc58  bra  v6502_modeIMP
              0e19 fc7b  bra  v6502_modeABY
              0e1a fc58  bra  v6502_modeIMP
              0e1b fc58  bra  v6502_modeIMP
                                          4256  bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeILL') # $1c xxx111xx
              0e1c fc7a  bra  v6502_modeABX
              0e1d fc7a  bra  v6502_modeABX
              0e1e fc7a  bra  v6502_modeABX
              0e1f fc58  bra  v6502_modeIMP
                                          4257
                                          4258  # Special encoding cases for emulator:
                                          4259  #     $00 BRK -         but gets mapped to #$DD      handled in v6502_mode0
                                          4260  #     $20 JSR $DDDD     but gets mapped to #$DD      handled in v6502_mode0 and v6502_JSR
                                          4261  #     $40 RTI -         but gets mapped to #$DD      handled in v6502_mode0
                                          4262  #     $60 RTS -         but gets mapped to #$DD      handled in v6502_mode0
                                          4263  #     $6C JMP ($DDDD)   but gets mapped to $DDDD     handled in v6502_JMP2
                                          4264  #     $96 STX $DD,Y     but gets mapped to $DD,X     handled in v6502_STX2
                                          4265  #     $B6 LDX $DD,Y     but gets mapped to $DD,X     handled in v6502_LDX2
                                          4266  #     $BE LDX $DDDD,Y   but gets mapped to $DDDD,X   handled in v6502_modeABX
                                          4267
                                          4268  label('v6502_next')
v6502_next:   0e20 8115  adda [$15]       4269  adda([vTicks])                  #0
                                          4270  blt('v6502_exitBefore')         #1 No more ticks
              0e21 e83a  blt  v6502_exitBefore
                                          4271  label('v6502_next2')
v6502_next2:  0e22 c215  st   [$15]       4272  st([vTicks])                    #2
                                          4273  #
                                          4274  # Fetch opcode
              0e23 111a  ld   [$1a],x     4275  ld([v6502_PCL],X)               #3
              0e24 151b  ld   [$1b],y     4276  ld([v6502_PCH],Y)               #4
              0e25 0d00  ld   [y,x]       4277  ld([Y,X])                       #5 Fetch IR
              0e26 c226  st   [$26]       4278  st([v6502_IR])                  #6
              0e27 011a  ld   [$1a]       4279  ld([v6502_PCL])                 #7 PC++
              0e28 8001  adda $01         4280  adda(1)                         #8
              0e29 d21a  st   [$1a],x     4281  st([v6502_PCL],X)               #9
              0e2a f02d  beq  $0e2d       4282  beq(pc()+3)                     #10
              0e2b fc2e  bra  $0e2e       4283  bra(pc()+3)                     #11
              0e2c 0000  ld   $00         4284  ld(0)                           #12
              0e2d 0001  ld   $01         4285  ld(1)                           #12(!)
              0e2e 811b  adda [$1b]       4286  adda([v6502_PCH])               #13
              0e2f d61b  st   [$1b],y     4287  st([v6502_PCH],Y)               #14
                                          4288  #
                                          4289  # Get addressing mode and fetch operands
              0e30 0126  ld   [$26]       4290  ld([v6502_IR])                  #15 Get addressing mode
              0e31 201f  anda $1f         4291  anda(31)                        #16
              0e32 fe00  bra  ac          4292  bra(AC)                         #17
              0e33 fc34  bra  .next20     4293  bra('.next20')                  #18
                                          4294  # (jump table)                  #19
                                          4295  label('.next20')
.next20:      0e34 0d00  ld   [y,x]       4296  ld([Y,X])                       #20 Fetch L
                                          4297  # Most opcodes branch away at this point, but IR & 31 == 0 falls through
                                          4298  #
                                          4299  # Implicit Mode for  BRK JSR RTI RTS (<  0x80) -- 26 cycles
                                          4300  # Immediate Mode for LDY CPY CPX     (>= 0x80) -- 36 cycles
                                          4301  label('v6502_mode0')
v6502_mode0:  0e35 0126  ld   [$26]       4302  ld([v6502_IR])                  #21 'xxx0000'
              0e36 e845  blt  .imm24      4303  bmi('.imm24')                   #22
              0e37 011b  ld   [$1b]       4304  ld([v6502_PCH])                 #23
              0e38 fcf2  bra  v6502_check 4305  bra('v6502_check')              #24
              0e39 00f3  ld   $f3         4306  ld(-26/2)                       #25
                                          4307
                                          4308  # Resync with video driver. At this point we're returning BEFORE
                                          4309  # fetching and executing the next instruction.
                                          4310  label('v6502_exitBefore')
v6502_exitBefore:
              0e3a 8013  adda $13         4311  adda(v6502_maxTicks)            #3 Exit BEFORE fetch
              0e3b e43b  bgt  $0e3b       4312  bgt(pc()&255)                   #4 Resync
              0e3c a001  suba $01         4313  suba(1)                         #5
              0e3d 000d  ld   $0d         4314  ld(hi('v6502_ENTER'))           #6 Set entry point to before 'fetch'
              0e3e c202  st   [$02]       4315  st([vCpuSelect])                #7
              0e3f 1401  ld   $01,y       4316  ld(hi('vBlankStart'),Y)         #8
              0e40 e11e  jmp  y,[$1e]     4317  jmp(Y,[vReturn])                #9 To video driver
              0e41 0000  ld   $00         4318  ld(0)                           #10
                                          4319  assert v6502_overhead ==         11
                                          4320
                                          4321  # Immediate Mode: #$FF -- 36 cycles
                                          4322  label('v6502_modeIMM')
v6502_modeIMM:
              0e42 0200  nop              4323  nop()                           #21 Wait for v6502_mode0 to join
              0e43 0200  nop              4324  nop()                           #22
              0e44 011b  ld   [$1b]       4325  ld([v6502_PCH])                 #23 Copy PC
                                          4326  label('.imm24')
.imm24:       0e45 c225  st   [$25]       4327  st([v6502_ADH])                 #24
              0e46 011a  ld   [$1a]       4328  ld([v6502_PCL])                 #25
              0e47 d224  st   [$24],x     4329  st([v6502_ADL],X)               #26
              0e48 8001  adda $01         4330  adda(1)                         #27 PC++
              0e49 c21a  st   [$1a]       4331  st([v6502_PCL])                 #28
              0e4a f04d  beq  $0e4d       4332  beq(pc()+3)                     #29
              0e4b fc4e  bra  $0e4e       4333  bra(pc()+3)                     #30
              0e4c 0000  ld   $00         4334  ld(0)                           #31
              0e4d 0001  ld   $01         4335  ld(1)                           #31(!)
              0e4e 811b  adda [$1b]       4336  adda([v6502_PCH])               #32
              0e4f c21b  st   [$1b]       4337  st([v6502_PCH])                 #33
              0e50 fcf2  bra  v6502_check 4338  bra('v6502_check')              #34
              0e51 00ee  ld   $ee         4339  ld(-36/2)                       #35
                                          4340
                                          4341  # Accumulator Mode: ROL ROR LSL ASR -- 28 cycles
                                          4342  label('v6502_modeACC')
v6502_modeACC:
              0e52 0018  ld   $18         4343  ld(v6502_A&255)                 #21 Address of AC
              0e53 d224  st   [$24],x     4344  st([v6502_ADL],X)               #22
              0e54 0000  ld   $00         4345  ld(v6502_A>>8)                  #23
              0e55 c225  st   [$25]       4346  st([v6502_ADH])                 #24
              0e56 00f2  ld   $f2         4347  ld(-28/2)                       #25
              0e57 fcf2  bra  v6502_check 4348  bra('v6502_check')              #26
                                          4349  #nop()                          #27 Overlap
                                          4350  #
                                          4351  # Implied Mode: no operand -- 24 cycles
                                          4352  label('v6502_modeILL')
                                          4353  label('v6502_modeIMP')
v6502_modeILL:
v6502_modeIMP:
              0e58 0200  nop              4354  nop()                           #21,27
              0e59 fcf2  bra  v6502_check 4355  bra('v6502_check')              #22
              0e5a 00f4  ld   $f4         4356  ld(-24/2)                       #23
                                          4357
                                          4358  # Zero Page Modes: $DD $DD,X $DD,Y -- 36 cycles
                                          4359  label('v6502_modeZPX')
v6502_modeZPX:
              0e5b fc5f  bra  .zp23       4360  bra('.zp23')                    #21
              0e5c 812a  adda [$2a]       4361  adda([v6502_X])                 #22
                                          4362  label('v6502_modeZP')
v6502_modeZP: 0e5d fc5f  bra  .zp23       4363  bra('.zp23')                    #21
              0e5e 0200  nop              4364  nop()                           #22
                                          4365  label('.zp23')
.zp23:        0e5f d224  st   [$24],x     4366  st([v6502_ADL],X)               #23
              0e60 0000  ld   $00         4367  ld(0)                           #24 H=0
              0e61 c225  st   [$25]       4368  st([v6502_ADH])                 #25
              0e62 0001  ld   $01         4369  ld(1)                           #26 PC++
              0e63 811a  adda [$1a]       4370  adda([v6502_PCL])               #27
              0e64 c21a  st   [$1a]       4371  st([v6502_PCL])                 #28
              0e65 f068  beq  $0e68       4372  beq(pc()+3)                     #29
              0e66 fc69  bra  $0e69       4373  bra(pc()+3)                     #30
              0e67 0000  ld   $00         4374  ld(0)                           #31
              0e68 0001  ld   $01         4375  ld(1)                           #31(!)
              0e69 811b  adda [$1b]       4376  adda([v6502_PCH])               #32
              0e6a c21b  st   [$1b]       4377  st([v6502_PCH])                 #33
              0e6b fcf2  bra  v6502_check 4378  bra('v6502_check')              #34
              0e6c 00ee  ld   $ee         4379  ld(-36/2)                       #35
                                          4380
                                          4381  # Possible retry loop for modeABS and modeIZY. Because these need
                                          4382  # more time than the v6502_maxTicks of 38 Gigatron cycles, we may
                                          4383  # have to restart them after the next horizontal pulse.
                                          4384  label('.retry28')
.retry28:     0e6d f070  beq  $0e70       4385  beq(pc()+3)                     #28,37 PC--
              0e6e fc71  bra  $0e71       4386  bra(pc()+3)                     #29
              0e6f 0000  ld   $00         4387  ld(0)                           #30
              0e70 00ff  ld   $ff         4388  ld(-1)                          #30(!)
              0e71 811b  adda [$1b]       4389  adda([v6502_PCH])               #31
              0e72 c21b  st   [$1b]       4390  st([v6502_PCH])                 #32
              0e73 011a  ld   [$1a]       4391  ld([v6502_PCL])                 #33
              0e74 a001  suba $01         4392  suba(1)                         #34
              0e75 c21a  st   [$1a]       4393  st([v6502_PCL])                 #35
              0e76 fc20  bra  v6502_next  4394  bra('v6502_next')               #36 Retry until sufficient time
              0e77 00ed  ld   $ed         4395  ld(-38/2)                       #37
                                          4396
                                          4397  # Absolute Modes: $DDDD $DDDD,X $DDDD,Y -- 64 cycles
                                          4398  label('v6502_modeABS')
v6502_modeABS:
              0e78 fc7d  bra  .abs23      4399  bra('.abs23')                   #21
              0e79 0000  ld   $00         4400  ld(0)                           #22
                                          4401  label('v6502_modeABX')
v6502_modeABX:
              0e7a fc7d  bra  .abs23      4402  bra('.abs23')                   #21
                                          4403  label('v6502_modeABY')
v6502_modeABY:
              0e7b 012a  ld   [$2a]       4404  ld([v6502_X])                   #21,22
              0e7c 012b  ld   [$2b]       4405  ld([v6502_Y])                   #22
                                          4406  label('.abs23')
.abs23:       0e7d c224  st   [$24]       4407  st([v6502_ADL])                 #23
              0e7e 00f3  ld   $f3         4408  ld(-64//2+v6502_maxTicks)       #24 Is there enough time for the excess ticks?
              0e7f 8115  adda [$15]       4409  adda([vTicks])                  #25
              0e80 e86d  blt  .retry28    4410  blt('.retry28')                 #26
              0e81 011a  ld   [$1a]       4411  ld([v6502_PCL])                 #27
              0e82 0126  ld   [$26]       4412  ld([v6502_IR])                  #28 Special case $BE: LDX $DDDD,Y (we got X in ADL)
              0e83 60be  xora $be         4413  xora(0xbe)                      #29
              0e84 f087  beq  $0e87       4414  beq(pc()+3)                     #30
              0e85 fc88  bra  $0e88       4415  bra(pc()+3)                     #31
              0e86 0124  ld   [$24]       4416  ld([v6502_ADL])                 #32
              0e87 012b  ld   [$2b]       4417  ld([v6502_Y])                   #32(!)
              0e88 8d00  adda [y,x]       4418  adda([Y,X])                     #33 Fetch and add L
              0e89 c224  st   [$24]       4419  st([v6502_ADL])                 #34
              0e8a e88e  blt  .abs37      4420  bmi('.abs37')                   #35 Carry?
              0e8b ad00  suba [y,x]       4421  suba([Y,X])                     #36 Gets back original operand
              0e8c fc90  bra  .abs39      4422  bra('.abs39')                   #37
              0e8d 4d00  ora  [y,x]       4423  ora([Y,X])                      #38 Carry in bit 7
                                          4424  label('.abs37')
.abs37:       0e8e 2d00  anda [y,x]       4425  anda([Y,X])                     #37 Carry in bit 7
              0e8f 0200  nop              4426  nop()                           #38
                                          4427  label('.abs39')
.abs39:       0e90 3080  anda $80,x       4428  anda(0x80,X)                    #39 Move carry to bit 0
              0e91 0500  ld   [x]         4429  ld([X])                         #40
              0e92 c225  st   [$25]       4430  st([v6502_ADH])                 #41
              0e93 011a  ld   [$1a]       4431  ld([v6502_PCL])                 #42 PC++
              0e94 8001  adda $01         4432  adda(1)                         #43
              0e95 d21a  st   [$1a],x     4433  st([v6502_PCL],X)               #44
              0e96 f099  beq  $0e99       4434  beq(pc()+3)                     #45
              0e97 fc9a  bra  $0e9a       4435  bra(pc()+3)                     #46
              0e98 0000  ld   $00         4436  ld(0)                           #47
              0e99 0001  ld   $01         4437  ld(1)                           #47(!)
              0e9a 811b  adda [$1b]       4438  adda([v6502_PCH])               #48
              0e9b d61b  st   [$1b],y     4439  st([v6502_PCH],Y)               #49
              0e9c 0d00  ld   [y,x]       4440  ld([Y,X])                       #50 Fetch H
              0e9d 8125  adda [$25]       4441  adda([v6502_ADH])               #51
              0e9e c225  st   [$25]       4442  st([v6502_ADH])                 #52
              0e9f 011a  ld   [$1a]       4443  ld([v6502_PCL])                 #53 PC++
              0ea0 8001  adda $01         4444  adda(1)                         #54
              0ea1 c21a  st   [$1a]       4445  st([v6502_PCL])                 #55
              0ea2 f0a5  beq  $0ea5       4446  beq(pc()+3)                     #56
              0ea3 fca6  bra  $0ea6       4447  bra(pc()+3)                     #57
              0ea4 0000  ld   $00         4448  ld(0)                           #58
              0ea5 0001  ld   $01         4449  ld(1)                           #58(!)
              0ea6 811b  adda [$1b]       4450  adda([v6502_PCH])               #59
              0ea7 c21b  st   [$1b]       4451  st([v6502_PCH])                 #60
              0ea8 1124  ld   [$24],x     4452  ld([v6502_ADL],X)               #61
              0ea9 fcf2  bra  v6502_check 4453  bra('v6502_check')              #62
              0eaa 00e0  ld   $e0         4454  ld(-64/2)                       #63
                                          4455
                                          4456  # Indirect Indexed Mode: ($DD),Y -- 54 cycles
                                          4457  label('v6502_modeIZY')
v6502_modeIZY:
              0eab 1200  ld   ac,x        4458  ld(AC,X)                        #21 $DD
              0eac 1400  ld   $00,y       4459  ld(0,Y)                         #22 $00DD
              0ead 00f8  ld   $f8         4460  ld(-54//2+v6502_maxTicks)       #23 Is there enough time for the excess ticks?
              0eae 8115  adda [$15]       4461  adda([vTicks])                  #24
              0eaf 0200  nop              4462  nop()                           #25
              0eb0 e86d  blt  .retry28    4463  blt('.retry28')                 #26
              0eb1 011a  ld   [$1a]       4464  ld([v6502_PCL])                 #27
              0eb2 8001  adda $01         4465  adda(1)                         #28 PC++
              0eb3 c21a  st   [$1a]       4466  st([v6502_PCL])                 #29
              0eb4 f0b7  beq  $0eb7       4467  beq(pc()+3)                     #30
              0eb5 fcb8  bra  $0eb8       4468  bra(pc()+3)                     #31
              0eb6 0000  ld   $00         4469  ld(0)                           #32
              0eb7 0001  ld   $01         4470  ld(1)                           #32(!)
              0eb8 811b  adda [$1b]       4471  adda([v6502_PCH])               #33
              0eb9 c21b  st   [$1b]       4472  st([v6502_PCH])                 #34
              0eba 0d00  ld   [y,x]       4473  ld([Y,X])                       #35 Read word from zero-page
              0ebb de00  st   [y,x++]     4474  st([Y,Xpp])                     #36 (Just X++) Wrap-around is correct
              0ebc c224  st   [$24]       4475  st([v6502_ADL])                 #37
              0ebd 0d00  ld   [y,x]       4476  ld([Y,X])                       #38
              0ebe c225  st   [$25]       4477  st([v6502_ADH])                 #39
              0ebf 012b  ld   [$2b]       4478  ld([v6502_Y])                   #40 Add Y
              0ec0 8124  adda [$24]       4479  adda([v6502_ADL])               #41
              0ec1 c224  st   [$24]       4480  st([v6502_ADL])                 #42
              0ec2 e8c6  blt  .izy45      4481  bmi('.izy45')                   #43 Carry?
              0ec3 a12b  suba [$2b]       4482  suba([v6502_Y])                 #44 Gets back original operand
              0ec4 fcc8  bra  .izy47      4483  bra('.izy47')                   #45
              0ec5 412b  ora  [$2b]       4484  ora([v6502_Y])                  #46 Carry in bit 7
                                          4485  label('.izy45')
.izy45:       0ec6 212b  anda [$2b]       4486  anda([v6502_Y])                 #45 Carry in bit 7
              0ec7 0200  nop              4487  nop()                           #46
                                          4488  label('.izy47')
.izy47:       0ec8 3080  anda $80,x       4489  anda(0x80,X)                    #47 Move carry to bit 0
              0ec9 0500  ld   [x]         4490  ld([X])                         #48
              0eca 8125  adda [$25]       4491  adda([v6502_ADH])               #49
              0ecb c225  st   [$25]       4492  st([v6502_ADH])                 #50
              0ecc 1124  ld   [$24],x     4493  ld([v6502_ADL],X)               #51
              0ecd fcf2  bra  v6502_check 4494  bra('v6502_check')              #52
              0ece 00e5  ld   $e5         4495  ld(-54/2)                       #53
                                          4496
                                          4497  # Relative Mode: BEQ BNE BPL BMI BCC BCS BVC BVS -- 36 cycles
                                          4498  label('v6502_modeREL')
v6502_modeREL:
              0ecf d224  st   [$24],x     4499  st([v6502_ADL],X)               #21 Offset (Only needed for branch)
              0ed0 e8d3  blt  $0ed3       4500  bmi(pc()+3)                     #22 Sign extend
              0ed1 fcd4  bra  $0ed4       4501  bra(pc()+3)                     #23
              0ed2 0000  ld   $00         4502  ld(0)                           #24
              0ed3 00ff  ld   $ff         4503  ld(255)                         #24(!)
              0ed4 c225  st   [$25]       4504  st([v6502_ADH])                 #25
              0ed5 011a  ld   [$1a]       4505  ld([v6502_PCL])                 #26 PC++ (Needed for both cases)
              0ed6 8001  adda $01         4506  adda(1)                         #27
              0ed7 c21a  st   [$1a]       4507  st([v6502_PCL])                 #28
              0ed8 f0db  beq  $0edb       4508  beq(pc()+3)                     #29
              0ed9 fcdc  bra  $0edc       4509  bra(pc()+3)                     #30
              0eda 0000  ld   $00         4510  ld(0)                           #31
              0edb 0001  ld   $01         4511  ld(1)                           #31(!)
              0edc 811b  adda [$1b]       4512  adda([v6502_PCH])               #32
              0edd c21b  st   [$1b]       4513  st([v6502_PCH])                 #33
              0ede fcf2  bra  v6502_check 4514  bra('v6502_check')              #34
              0edf 00ee  ld   $ee         4515  ld(-36/2)                       #53
                                          4516
                                          4517  # Indexed Indirect Mode: ($DD,X) -- 38 cycles
                                          4518  label('v6502_modeIZX')
v6502_modeIZX:
              0ee0 812a  adda [$2a]       4519  adda([v6502_X])                 #21 Add X
              0ee1 c21d  st   [$1d]       4520  st([v6502_Tmp])                 #22
              0ee2 9001  adda $01,x       4521  adda(1,X)                       #23 Read word from zero-page
              0ee3 0500  ld   [x]         4522  ld([X])                         #24
              0ee4 c225  st   [$25]       4523  st([v6502_ADH])                 #25
              0ee5 111d  ld   [$1d],x     4524  ld([v6502_Tmp],X)               #26
              0ee6 0500  ld   [x]         4525  ld([X])                         #27
              0ee7 d224  st   [$24],x     4526  st([v6502_ADL],X)               #28
              0ee8 011a  ld   [$1a]       4527  ld([v6502_PCL])                 #29 PC++
              0ee9 8001  adda $01         4528  adda(1)                         #30
              0eea c21a  st   [$1a]       4529  st([v6502_PCL])                 #31
              0eeb f0ee  beq  $0eee       4530  beq(pc()+3)                     #32
              0eec fcef  bra  $0eef       4531  bra(pc()+3)                     #33
              0eed 0000  ld   $00         4532  ld(0)                           #34
              0eee 0001  ld   $01         4533  ld(1)                           #34(!)
              0eef 811b  adda [$1b]       4534  adda([v6502_PCH])               #35
              0ef0 c21b  st   [$1b]       4535  st([v6502_PCH])                 #36
              0ef1 00ed  ld   $ed         4536  ld(-38/2)                       #37 !!! Fall through to v6502_check !!!
                                          4537  #
                                          4538  # Update elapsed time for the addressing mode processing.
                                          4539  # Then check if we can immediately execute this instruction.
                                          4540  # Otherwise transfer control to the video driver.
                                          4541  label('v6502_check')
v6502_check:  0ef2 8115  adda [$15]       4542  adda([vTicks])                  #0
                                          4543  blt('v6502_exitAfter')          #1 No more ticks
              0ef3 e8f8  blt  v6502_exitAfter
              0ef4 c215  st   [$15]       4544  st([vTicks])                    #2
              0ef5 140f  ld   $0f,y       4545  ld(hi('v6502_execute'),Y)       #3
              0ef6 e126  jmp  y,[$26]     4546  jmp(Y,[v6502_IR])               #4
              0ef7 fcff  bra  $ff         4547  bra(255)                        #5
                                          4548
                                          4549  # Otherwise resync with video driver. At this point we're returning AFTER
                                          4550  # addressing mode decoding, but before executing the instruction.
                                          4551  label('v6502_exitAfter')
v6502_exitAfter:
              0ef8 8013  adda $13         4552  adda(v6502_maxTicks)            #3 Exit AFTER fetch
              0ef9 e4f9  bgt  $0ef9       4553  bgt(pc()&255)                   #4 Resync
              0efa a001  suba $01         4554  suba(1)                         #5
              0efb 0010  ld   $10         4555  ld(hi('v6502_RESUME'))          #6 Set entry point to before 'execute'
              0efc c202  st   [$02]       4556  st([vCpuSelect])                #7
              0efd 1401  ld   $01,y       4557  ld(hi('vBlankStart'),Y)         #8
              0efe e11e  jmp  y,[$1e]     4558  jmp(Y,[vReturn])                #9 To video driver
              0eff 0000  ld   $00         4559  ld(0)                           #10
                                          4560  assert v6502_overhead ==         11
                                          4561
                                          4562  align(0x100,size=0x100)
                                          4563  label('v6502_execute')
                                          4564  # This page works as a 255-entry (0..254) jump table for 6502 opcodes.
                                          4565  # Jumping into this page must have 'bra 255' in the branch delay slot
                                          4566  # in order to get out again and dispatch to the right continuation.
                                          4567  # X must hold [v6502_ADL],
                                          4568  # Y will hold hi('v6502_execute'),
                                          4569  # A will be loaded with the code offset (this is skipped at offset $ff)
v6502_execute:
              0f00 00fd  ld   $fd         4570  ld('v6502_BRK'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $00
              0f01 0089  ld   $89
              0f02 00fd  ld   $fd
              0f03 00fd  ld   $fd
              0f04 00fd  ld   $fd         4571  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f05 0089  ld   $89
              0f06 00f1  ld   $f1
              0f07 00fd  ld   $fd
              0f08 00f3  ld   $f3         4572  ld('v6502_PHP'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f09 0089  ld   $89
              0f0a 00f1  ld   $f1
              0f0b 00fd  ld   $fd
              0f0c 00fd  ld   $fd         4573  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f0d 0089  ld   $89
              0f0e 00f1  ld   $f1
              0f0f 00fd  ld   $fd
              0f10 003f  ld   $3f         4574  ld('v6502_BPL'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $10
              0f11 0089  ld   $89
              0f12 00fd  ld   $fd
              0f13 00fd  ld   $fd
              0f14 00fd  ld   $fd         4575  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f15 0089  ld   $89
              0f16 00f1  ld   $f1
              0f17 00fd  ld   $fd
              0f18 0036  ld   $36         4576  ld('v6502_CLC'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f19 0089  ld   $89
              0f1a 00fd  ld   $fd
              0f1b 00fd  ld   $fd
              0f1c 00fd  ld   $fd         4577  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f1d 0089  ld   $89
              0f1e 00f1  ld   $f1
              0f1f 00fd  ld   $fd
              0f20 009a  ld   $9a         4578  ld('v6502_JSR'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $20
              0f21 0085  ld   $85
              0f22 00fd  ld   $fd
              0f23 00fd  ld   $fd
              0f24 00f5  ld   $f5         4579  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f25 0085  ld   $85
              0f26 00f7  ld   $f7
              0f27 00fd  ld   $fd
              0f28 00f9  ld   $f9         4580  ld('v6502_PLP'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f29 0085  ld   $85
              0f2a 00f7  ld   $f7
              0f2b 00fd  ld   $fd
              0f2c 00f5  ld   $f5         4581  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f2d 0085  ld   $85
              0f2e 00f7  ld   $f7
              0f2f 00fd  ld   $fd
              0f30 0042  ld   $42         4582  ld('v6502_BMI'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $30
              0f31 0085  ld   $85
              0f32 00fd  ld   $fd
              0f33 00fd  ld   $fd
              0f34 00fd  ld   $fd         4583  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f35 0085  ld   $85
              0f36 00f7  ld   $f7
              0f37 00fd  ld   $fd
              0f38 0038  ld   $38         4584  ld('v6502_SEC'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f39 0085  ld   $85
              0f3a 00fd  ld   $fd
              0f3b 00fd  ld   $fd
              0f3c 00fd  ld   $fd         4585  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f3d 0085  ld   $85
              0f3e 00f7  ld   $f7
              0f3f 00fd  ld   $fd
              0f40 00d3  ld   $d3         4586  ld('v6502_RTI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $40
              0f41 008c  ld   $8c
              0f42 00fd  ld   $fd
              0f43 00fd  ld   $fd
              0f44 00fd  ld   $fd         4587  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f45 008c  ld   $8c
              0f46 00d7  ld   $d7
              0f47 00fd  ld   $fd
              0f48 00d9  ld   $d9         4588  ld('v6502_PHA'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f49 008c  ld   $8c
              0f4a 00d7  ld   $d7
              0f4b 00fd  ld   $fd
              0f4c 0096  ld   $96         4589  ld('v6502_JMP1');ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f4d 008c  ld   $8c
              0f4e 00d7  ld   $d7
              0f4f 00fd  ld   $fd
              0f50 0045  ld   $45         4590  ld('v6502_BVC'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $50
              0f51 008c  ld   $8c
              0f52 00fd  ld   $fd
              0f53 00fd  ld   $fd
              0f54 00fd  ld   $fd         4591  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f55 008c  ld   $8c
              0f56 00d7  ld   $d7
              0f57 00fd  ld   $fd
              0f58 00db  ld   $db         4592  ld('v6502_CLI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f59 008c  ld   $8c
              0f5a 00fd  ld   $fd
              0f5b 00fd  ld   $fd
              0f5c 00fd  ld   $fd         4593  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f5d 008c  ld   $8c
              0f5e 00d7  ld   $d7
              0f5f 00fd  ld   $fd
              0f60 00dd  ld   $dd         4594  ld('v6502_RTS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $60
              0f61 0001  ld   $01
              0f62 00fd  ld   $fd
              0f63 00fd  ld   $fd
              0f64 00fd  ld   $fd         4595  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f65 0001  ld   $01
              0f66 00d5  ld   $d5
              0f67 00fd  ld   $fd
              0f68 00df  ld   $df         4596  ld('v6502_PLA'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f69 0001  ld   $01
              0f6a 00d5  ld   $d5
              0f6b 00fd  ld   $fd
              0f6c 0098  ld   $98         4597  ld('v6502_JMP2');ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f6d 0001  ld   $01
              0f6e 00d5  ld   $d5
              0f6f 00fd  ld   $fd
              0f70 0049  ld   $49         4598  ld('v6502_BVS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $70
              0f71 0001  ld   $01
              0f72 00fd  ld   $fd
              0f73 00fd  ld   $fd
              0f74 00fd  ld   $fd         4599  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f75 0001  ld   $01
              0f76 00d5  ld   $d5
              0f77 00fd  ld   $fd
              0f78 00e1  ld   $e1         4600  ld('v6502_SEI'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f79 0001  ld   $01
              0f7a 00fd  ld   $fd
              0f7b 00fd  ld   $fd
              0f7c 00fd  ld   $fd         4601  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f7d 0001  ld   $01
              0f7e 00d5  ld   $d5
              0f7f 00fd  ld   $fd
              0f80 00fd  ld   $fd         4602  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $80
              0f81 00c1  ld   $c1
              0f82 00fd  ld   $fd
              0f83 00fd  ld   $fd
              0f84 00c7  ld   $c7         4603  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f85 00c1  ld   $c1
              0f86 00c3  ld   $c3
              0f87 00fd  ld   $fd
              0f88 007f  ld   $7f         4604  ld('v6502_DEY'); ld('v6502_ILL'); ld('v6502_TXA'); ld('v6502_ILL') #6
              0f89 00fd  ld   $fd
              0f8a 00cd  ld   $cd
              0f8b 00fd  ld   $fd
              0f8c 00c7  ld   $c7         4605  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f8d 00c1  ld   $c1
              0f8e 00c3  ld   $c3
              0f8f 00fd  ld   $fd
              0f90 004d  ld   $4d         4606  ld('v6502_BCC'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $90
              0f91 00c1  ld   $c1
              0f92 00fd  ld   $fd
              0f93 00fd  ld   $fd
              0f94 00c7  ld   $c7         4607  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX2');ld('v6502_ILL') #6
              0f95 00c1  ld   $c1
              0f96 00c5  ld   $c5
              0f97 00fd  ld   $fd
              0f98 00cf  ld   $cf         4608  ld('v6502_TYA'); ld('v6502_STA'); ld('v6502_TXS'); ld('v6502_ILL') #6
              0f99 00c1  ld   $c1
              0f9a 00e3  ld   $e3
              0f9b 00fd  ld   $fd
              0f9c 00fd  ld   $fd         4609  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f9d 00c1  ld   $c1
              0f9e 00fd  ld   $fd
              0f9f 00fd  ld   $fd
              0fa0 00bf  ld   $bf         4610  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6 $A0
              0fa1 00b9  ld   $b9
              0fa2 00bb  ld   $bb
              0fa3 00fd  ld   $fd
              0fa4 00bf  ld   $bf         4611  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fa5 00b9  ld   $b9
              0fa6 00bb  ld   $bb
              0fa7 00fd  ld   $fd
              0fa8 00cb  ld   $cb         4612  ld('v6502_TAY'); ld('v6502_LDA'); ld('v6502_TAX'); ld('v6502_ILL') #6
              0fa9 00b9  ld   $b9
              0faa 00c9  ld   $c9
              0fab 00fd  ld   $fd
              0fac 00bf  ld   $bf         4613  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fad 00b9  ld   $b9
              0fae 00bb  ld   $bb
              0faf 00fd  ld   $fd
              0fb0 0051  ld   $51         4614  ld('v6502_BCS'); ld('v6502_LDA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $B0
              0fb1 00b9  ld   $b9
              0fb2 00fd  ld   $fd
              0fb3 00fd  ld   $fd
              0fb4 00bf  ld   $bf         4615  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX2');ld('v6502_ILL') #6
              0fb5 00b9  ld   $b9
              0fb6 00bd  ld   $bd
              0fb7 00fd  ld   $fd
              0fb8 00d1  ld   $d1         4616  ld('v6502_CLV'); ld('v6502_LDA'); ld('v6502_TSX'); ld('v6502_ILL') #6
              0fb9 00b9  ld   $b9
              0fba 00e5  ld   $e5
              0fbb 00fd  ld   $fd
              0fbc 00bf  ld   $bf         4617  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fbd 00b9  ld   $b9
              0fbe 00bb  ld   $bb
              0fbf 00fd  ld   $fd
              0fc0 00e7  ld   $e7         4618  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $C0
              0fc1 00e9  ld   $e9
              0fc2 00fd  ld   $fd
              0fc3 00fd  ld   $fd
              0fc4 00e7  ld   $e7         4619  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fc5 00e9  ld   $e9
              0fc6 00eb  ld   $eb
              0fc7 00fd  ld   $fd
              0fc8 007b  ld   $7b         4620  ld('v6502_INY'); ld('v6502_CMP'); ld('v6502_DEX'); ld('v6502_ILL') #6
              0fc9 00e9  ld   $e9
              0fca 0077  ld   $77
              0fcb 00fd  ld   $fd
              0fcc 00e7  ld   $e7         4621  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fcd 00e9  ld   $e9
              0fce 00eb  ld   $eb
              0fcf 00fd  ld   $fd
              0fd0 0055  ld   $55         4622  ld('v6502_BNE'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $D0
              0fd1 00e9  ld   $e9
              0fd2 00fd  ld   $fd
              0fd3 00fd  ld   $fd
              0fd4 00fd  ld   $fd         4623  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fd5 00e9  ld   $e9
              0fd6 00eb  ld   $eb
              0fd7 00fd  ld   $fd
              0fd8 00ed  ld   $ed         4624  ld('v6502_CLD'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0fd9 00e9  ld   $e9
              0fda 00fd  ld   $fd
              0fdb 00fd  ld   $fd
              0fdc 00fd  ld   $fd         4625  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fdd 00e9  ld   $e9
              0fde 00eb  ld   $eb
              0fdf 00fd  ld   $fd
              0fe0 00ef  ld   $ef         4626  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $E0
              0fe1 0029  ld   $29
              0fe2 00fd  ld   $fd
              0fe3 00fd  ld   $fd
              0fe4 00ef  ld   $ef         4627  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fe5 0029  ld   $29
              0fe6 00b7  ld   $b7
              0fe7 00fd  ld   $fd
              0fe8 006c  ld   $6c         4628  ld('v6502_INX'); ld('v6502_SBC'); ld('v6502_NOP'); ld('v6502_ILL') #6
              0fe9 0029  ld   $29
              0fea 0083  ld   $83
              0feb 00fd  ld   $fd
              0fec 00ef  ld   $ef         4629  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fed 0029  ld   $29
              0fee 00b7  ld   $b7
              0fef 00fd  ld   $fd
              0ff0 0058  ld   $58         4630  ld('v6502_BEQ'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $F0
              0ff1 0029  ld   $29
              0ff2 00fd  ld   $fd
              0ff3 00fd  ld   $fd
              0ff4 00fd  ld   $fd         4631  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0ff5 0029  ld   $29
              0ff6 00b7  ld   $b7
              0ff7 00fd  ld   $fd
              0ff8 00fb  ld   $fb         4632  ld('v6502_SED'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0ff9 0029  ld   $29
              0ffa 00fd  ld   $fd
              0ffb 00fd  ld   $fd
              0ffc 00fd  ld   $fd         4633  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC')                  #6
              0ffd 0029  ld   $29
              0ffe 00b7  ld   $b7
              0fff fe00  bra  ac          4634  bra(AC)                         #6,7 Dispatch into next page
                                          4635  # --- Page boundary ---
                                          4636  align(0x100,size=0x100)
              1000 140e  ld   $0e,y       4637  ld(hi('v6502_next'),Y)          #8 Handy for instructions that don't clobber Y
                                          4638
                                          4639  label('v6502_ADC')
                                          4640  assert pc()&255 == 1
                                          4641  assert v6502_Cflag == 1
                                          4642  assert v6502_Vemu == 128
v6502_ADC:    1001 1525  ld   [$25],y     4643  ld([v6502_ADH],Y)               #9 Must be at page offset 1, so A=1
              1002 2127  anda [$27]       4644  anda([v6502_P])                 #10 Carry in (AC=1 because lo('v6502_ADC')=1)
              1003 8118  adda [$18]       4645  adda([v6502_A])                 #11 Sum
              1004 f020  beq  .adc14      4646  beq('.adc14')                   #12 Danger zone for dropping a carry
              1005 8d00  adda [y,x]       4647  adda([Y,X])                     #13
              1006 c228  st   [$28]       4648  st([v6502_Qz])                  #14 Z flag, don't overwrite left-hand side (A) yet
              1007 c229  st   [$29]       4649  st([v6502_Qn])                  #15 N flag
              1008 6118  xora [$18]       4650  xora([v6502_A])                 #16 V flag, (Q^A) & (B^Q) & 0x80
              1009 c218  st   [$18]       4651  st([v6502_A])                   #17
              100a 0d00  ld   [y,x]       4652  ld([Y,X])                       #18
              100b 6128  xora [$28]       4653  xora([v6502_Qz])                #19
              100c 2118  anda [$18]       4654  anda([v6502_A])                 #20
              100d 2080  anda $80         4655  anda(0x80)                      #21
              100e c21d  st   [$1d]       4656  st([v6502_Tmp])                 #22
              100f 0128  ld   [$28]       4657  ld([v6502_Qz])                  #23 Update A
              1010 c218  st   [$18]       4658  st([v6502_A])                   #24
              1011 e815  blt  .adc27      4659  bmi('.adc27')                   #25 C flag
              1012 ad00  suba [y,x]       4660  suba([Y,X])                     #26
              1013 fc17  bra  .adc29      4661  bra('.adc29')                   #27
              1014 4d00  ora  [y,x]       4662  ora([Y,X])                      #28
                                          4663  label('.adc27')
.adc27:       1015 2d00  anda [y,x]       4664  anda([Y,X])                     #27
              1016 0200  nop              4665  nop()                           #28
                                          4666  label('.adc29')
.adc29:       1017 3080  anda $80,x       4667  anda(0x80,X)                    #29
              1018 0127  ld   [$27]       4668  ld([v6502_P])                   #30 Update P
              1019 207e  anda $7e         4669  anda(~v6502_Vemu&~v6502_Cflag)  #31
              101a 4500  ora  [x]         4670  ora([X])                        #32
              101b 411d  ora  [$1d]       4671  ora([v6502_Tmp])                #33
              101c c227  st   [$27]       4672  st([v6502_P])                   #34
              101d 140e  ld   $0e,y       4673  ld(hi('v6502_next'),Y)          #35
              101e e020  jmp  y,$20       4674  jmp(Y,'v6502_next')             #36
              101f 00ed  ld   $ed         4675  ld(-38/2)                       #37
                                          4676  # Cin=1, A=$FF, B=$DD --> Result=$DD, Cout=1, V=0
                                          4677  # Cin=0, A=$00, B=$DD --> Result=$DD, Cout=0, V=0
                                          4678  label('.adc14')
.adc14:       1020 c218  st   [$18]       4679  st([v6502_A])                   #14 Special case
              1021 c228  st   [$28]       4680  st([v6502_Qz])                  #15 Z flag
              1022 c229  st   [$29]       4681  st([v6502_Qn])                  #16 N flag
              1023 0127  ld   [$27]       4682  ld([v6502_P])                   #17
              1024 207f  anda $7f         4683  anda(0x7f)                      #18 V=0, keep C
              1025 c227  st   [$27]       4684  st([v6502_P])                   #19
              1026 140e  ld   $0e,y       4685  ld(hi('v6502_next'),Y)          #20
              1027 00f4  ld   $f4         4686  ld(-24/2)                       #21
              1028 e020  jmp  y,$20       4687  jmp(Y,'v6502_next')             #22
                                          4688  #nop()                          #23 Overlap
                                          4689  #
                                          4690  label('v6502_SBC')
                                          4691  # No matter how hard we try, v6502_SBC always comes out a lot clumsier
                                          4692  # than v6502_ADC. And that one already barely fits in 38 cycles and is
                                          4693  # hard to follow. So we use a hack: transmorph our SBC into an ADC with
                                          4694  # inverted operand, and then dispatch again. Simple and effective.
v6502_SBC:    1029 1525  ld   [$25],y     4695  ld([v6502_ADH],Y)               #9,24
              102a 0d00  ld   [y,x]       4696  ld([Y,X])                       #10
              102b 60ff  xora $ff         4697  xora(255)                       #11 Invert right-hand side operand
              102c c219  st   [$19]       4698  st([v6502_BI])                  #12 Park modified operand for v6502_ADC
              102d 0019  ld   $19         4699  ld(v6502_BI&255)                #13 Address of BI
              102e d224  st   [$24],x     4700  st([v6502_ADL],X)               #14
              102f 0000  ld   $00         4701  ld(v6502_BI>>8)                 #15
              1030 c225  st   [$25]       4702  st([v6502_ADH])                 #16
              1031 0069  ld   $69         4703  ld(0x69)                        #17 ADC #$xx (Any ADC opcode will do)
              1032 c226  st   [$26]       4704  st([v6502_IR])                  #18
              1033 140e  ld   $0e,y       4705  ld(hi('v6502_check'),Y)         #20 Go back to time check before dispatch
              1034 e0f2  jmp  y,$f2       4706  jmp(Y,'v6502_check')            #20
              1035 00f5  ld   $f5         4707  ld(-22/2)                       #21
                                          4708
                                          4709  # Carry calculation table
                                          4710  #   L7 R7 C7   RX UC SC
                                          4711  #   -- -- -- | -- -- --
                                          4712  #    0  0  0 |  0  0  0
                                          4713  #    0  0  1 |  0  0  0
                                          4714  #    1  0  0 |  0  1 +1
                                          4715  #    1  0  1 |  0  0  0
                                          4716  #    0  1  0 | -1  1  0
                                          4717  #    0  1  1 | -1  0 -1
                                          4718  #    1  1  0 | -1  1  0
                                          4719  #    1  1  1 | -1  1  0
                                          4720  #   -- -- -- | -- -- --
                                          4721  #    ^  ^  ^    ^  ^  ^
                                          4722  #    |  |  |    |  |  `--- Carry of unsigned L + signed R: SC = RX + UC
                                          4723  #    |  |  |    |  `----- Carry of unsigned L + unsigned R: UC = C7 ? L7&R7 : L7|R7
                                          4724  #    |  |  |    `------- Sign extension of signed R
                                          4725  #    |  |  `--------- MSB of unextended L + R
                                          4726  #    |  `----------- MSB of right operand R
                                          4727  #    `------------- MSB of left operand L
                                          4728
                                          4729  label('v6502_CLC')
v6502_CLC:    1036 0127  ld   [$27]       4730  ld([v6502_P])                   #9
              1037 fc3b  bra  .sec12      4731  bra('.sec12')                   #10
                                          4732  label('v6502_SEC')
v6502_SEC:    1038 20fe  anda $fe         4733  anda(~v6502_Cflag)              #9,11 Overlap
              1039 0127  ld   [$27]       4734  ld([v6502_P])                   #10
              103a 4001  ora  $01         4735  ora(v6502_Cflag)                #11
                                          4736  label('.sec12')
.sec12:       103b c227  st   [$27]       4737  st([v6502_P])                   #12
              103c 0200  nop              4738  nop()                           #13
                                          4739  label('.next14')
.next14:      103d e020  jmp  y,$20       4740  jmp(Y,'v6502_next')             #14
              103e 00f8  ld   $f8         4741  ld(-16/2)                       #15
                                          4742
                                          4743  label('v6502_BPL')
v6502_BPL:    103f 0129  ld   [$29]       4744  ld([v6502_Qn])                  #9
              1040 e875  blt  .next12     4745  bmi('.next12')                  #10
              1041 f45b  bge  .branch13   4746  bpl('.branch13')                #11
                                          4747  #nop()                          #12 Overlap
                                          4748  label('v6502_BMI')
v6502_BMI:    1042 0129  ld   [$29]       4749  ld([v6502_Qn])                  #9,12
              1043 f475  bge  .next12     4750  bpl('.next12')                  #10
              1044 e85b  blt  .branch13   4751  bmi('.branch13')                #11
                                          4752  #nop()                          #12 Overlap
                                          4753  label('v6502_BVC')
v6502_BVC:    1045 0127  ld   [$27]       4754  ld([v6502_P])                   #9,12
              1046 2080  anda $80         4755  anda(v6502_Vemu)                #10
              1047 f05b  beq  .branch13   4756  beq('.branch13')                #11
              1048 ec3d  bne  .next14     4757  bne('.next14')                  #12
                                          4758  #nop()                          #13 Overlap
                                          4759  label('v6502_BVS')
v6502_BVS:    1049 0127  ld   [$27]       4760  ld([v6502_P])                   #9,13
              104a 2080  anda $80         4761  anda(v6502_Vemu)                #10
              104b ec5b  bne  .branch13   4762  bne('.branch13')                #11
              104c f03d  beq  .next14     4763  beq('.next14')                  #12
                                          4764  #nop()                          #13 Overlap
                                          4765  label('v6502_BCC')
v6502_BCC:    104d 0127  ld   [$27]       4766  ld([v6502_P])                   #9,13
              104e 2001  anda $01         4767  anda(v6502_Cflag)               #10
              104f f05b  beq  .branch13   4768  beq('.branch13')                #11
              1050 ec3d  bne  .next14     4769  bne('.next14')                  #12
                                          4770  #nop()                          #13 Overlap
                                          4771  label('v6502_BCS')
v6502_BCS:    1051 0127  ld   [$27]       4772  ld([v6502_P])                   #9,13
              1052 2001  anda $01         4773  anda(v6502_Cflag)               #10
              1053 ec5b  bne  .branch13   4774  bne('.branch13')                #11
              1054 f03d  beq  .next14     4775  beq('.next14')                  #12
                                          4776  #nop()                          #13 Overlap
                                          4777  label('v6502_BNE')
v6502_BNE:    1055 0128  ld   [$28]       4778  ld([v6502_Qz])                  #9,13
              1056 f075  beq  .next12     4779  beq('.next12')                  #10
              1057 ec5b  bne  .branch13   4780  bne('.branch13')                #11
                                          4781  #nop()                          #12 Overlap
                                          4782  label('v6502_BEQ')
v6502_BEQ:    1058 0128  ld   [$28]       4783  ld([v6502_Qz])                  #9,12
              1059 ec75  bne  .next12     4784  bne('.next12')                  #10
              105a f05b  beq  .branch13   4785  beq('.branch13')                #11
                                          4786  #nop()                          #12 Overlap
                                          4787  label('.branch13')
.branch13:    105b 0124  ld   [$24]       4788  ld([v6502_ADL])                 #13,12 PC + offset
              105c 811a  adda [$1a]       4789  adda([v6502_PCL])               #14
              105d c21a  st   [$1a]       4790  st([v6502_PCL])                 #15
              105e e862  blt  .bra0       4791  bmi('.bra0')                    #16 Carry
              105f a124  suba [$24]       4792  suba([v6502_ADL])               #17
              1060 fc64  bra  .bra1       4793  bra('.bra1')                    #18
              1061 4124  ora  [$24]       4794  ora([v6502_ADL])                #19
                                          4795  label('.bra0')
.bra0:        1062 2124  anda [$24]       4796  anda([v6502_ADL])               #18
              1063 0200  nop              4797  nop()                           #19
                                          4798  label('.bra1')
.bra1:        1064 3080  anda $80,x       4799  anda(0x80,X)                    #20
              1065 0500  ld   [x]         4800  ld([X])                         #21
              1066 8125  adda [$25]       4801  adda([v6502_ADH])               #22
              1067 811b  adda [$1b]       4802  adda([v6502_PCH])               #23
              1068 c21b  st   [$1b]       4803  st([v6502_PCH])                 #24
              1069 0200  nop              4804  nop()                           #25
              106a e020  jmp  y,$20       4805  jmp(Y,'v6502_next')             #26
              106b 00f2  ld   $f2         4806  ld(-28/2)                       #27
                                          4807
                                          4808  label('v6502_INX')
v6502_INX:    106c 0200  nop              4809  nop()                           #9
              106d 012a  ld   [$2a]       4810  ld([v6502_X])                   #10
              106e 8001  adda $01         4811  adda(1)                         #11
              106f c22a  st   [$2a]       4812  st([v6502_X])                   #12
                                          4813  label('.inx13')
.inx13:       1070 c228  st   [$28]       4814  st([v6502_Qz])                  #13 Z flag
              1071 c229  st   [$29]       4815  st([v6502_Qn])                  #14 N flag
              1072 00f7  ld   $f7         4816  ld(-18/2)                       #15
              1073 e020  jmp  y,$20       4817  jmp(Y,'v6502_next')             #16
              1074 0200  nop              4818  nop()                           #17
                                          4819
                                          4820  label('.next12')
.next12:      1075 e020  jmp  y,$20       4821  jmp(Y,'v6502_next')             #12
              1076 00f9  ld   $f9         4822  ld(-14/2)                       #13
                                          4823
                                          4824  label('v6502_DEX')
v6502_DEX:    1077 012a  ld   [$2a]       4825  ld([v6502_X])                   #9
              1078 a001  suba $01         4826  suba(1)                         #10
              1079 fc70  bra  .inx13      4827  bra('.inx13')                   #11
              107a c22a  st   [$2a]       4828  st([v6502_X])                   #12
                                          4829
                                          4830  label('v6502_INY')
v6502_INY:    107b 012b  ld   [$2b]       4831  ld([v6502_Y])                   #9
              107c 8001  adda $01         4832  adda(1)                         #10
              107d fc70  bra  .inx13      4833  bra('.inx13')                   #11
              107e c22b  st   [$2b]       4834  st([v6502_Y])                   #12
                                          4835
                                          4836  label('v6502_DEY')
v6502_DEY:    107f 012b  ld   [$2b]       4837  ld([v6502_Y])                   #9
              1080 a001  suba $01         4838  suba(1)                         #10
              1081 fc70  bra  .inx13      4839  bra('.inx13')                   #11
              1082 c22b  st   [$2b]       4840  st([v6502_Y])                   #12
                                          4841
                                          4842  label('v6502_NOP')
v6502_NOP:    1083 00fa  ld   $fa         4843  ld(-12/2)                       #9
              1084 e020  jmp  y,$20       4844  jmp(Y,'v6502_next')             #10
                                          4845  #nop()                          #11 Overlap
                                          4846  #
                                          4847  label('v6502_AND')
v6502_AND:    1085 1525  ld   [$25],y     4848  ld([v6502_ADH],Y)               #9,11
              1086 0118  ld   [$18]       4849  ld([v6502_A])                   #10
              1087 fc90  bra  .eor13      4850  bra('.eor13')                   #11
              1088 2d00  anda [y,x]       4851  anda([Y,X])                     #12
                                          4852
                                          4853  label('v6502_ORA')
v6502_ORA:    1089 1525  ld   [$25],y     4854  ld([v6502_ADH],Y)               #9
              108a 0118  ld   [$18]       4855  ld([v6502_A])                   #10
              108b fc90  bra  .eor13      4856  bra('.eor13')                   #11
                                          4857  label('v6502_EOR')
v6502_EOR:    108c 4d00  ora  [y,x]       4858  ora([Y,X])                      #12,9
                                          4859  #
                                          4860  #label('v6502_EOR')
                                          4861  #nop()                          #9 Overlap
              108d 1525  ld   [$25],y     4862  ld([v6502_ADH],Y)               #10
              108e 0118  ld   [$18]       4863  ld([v6502_A])                   #11
              108f 6d00  xora [y,x]       4864  xora([Y,X])                     #12
                                          4865  label('.eor13')
.eor13:       1090 c218  st   [$18]       4866  st([v6502_A])                   #13
              1091 c228  st   [$28]       4867  st([v6502_Qz])                  #14 Z flag
              1092 c229  st   [$29]       4868  st([v6502_Qn])                  #15 N flag
              1093 140e  ld   $0e,y       4869  ld(hi('v6502_next'),Y)          #16
              1094 00f6  ld   $f6         4870  ld(-20/2)                       #17
              1095 e020  jmp  y,$20       4871  jmp(Y,'v6502_next')             #18
                                          4872  #nop()                          #19 Overlap
                                          4873  #
                                          4874  label('v6502_JMP1')
v6502_JMP1:   1096 140d  ld   $0d,y       4875  ld(hi('v6502_jmp1'),Y)          #9,19 JMP $DDDD
              1097 e0d1  jmp  y,$d1       4876  jmp(Y,'v6502_jmp1')             #10
                                          4877  #nop()                          #11 Overlap
                                          4878  label('v6502_JMP2')
v6502_JMP2:   1098 140d  ld   $0d,y       4879  ld(hi('v6502_jmp2'),Y)          #9 JMP ($DDDD)
              1099 e0d9  jmp  y,$d9       4880  jmp(Y,'v6502_jmp2')             #10
                                          4881  #nop()                          #11 Overlap
                                          4882  label('v6502_JSR')
v6502_JSR:    109a 011c  ld   [$1c]       4883  ld([v6502_S])                   #9,11
              109b a002  suba $02         4884  suba(2)                         #10
              109c d21c  st   [$1c],x     4885  st([v6502_S],X)                 #11
              109d 1400  ld   $00,y       4886  ld(v6502_Stack>>8,Y)            #12
              109e 011b  ld   [$1b]       4887  ld([v6502_PCH])                 #13 Let ADL,ADH point to L operand
              109f c225  st   [$25]       4888  st([v6502_ADH])                 #14
              10a0 011a  ld   [$1a]       4889  ld([v6502_PCL])                 #15
              10a1 c224  st   [$24]       4890  st([v6502_ADL])                 #16
              10a2 8001  adda $01         4891  adda(1)                         #17 Push ++PC
              10a3 c21a  st   [$1a]       4892  st([v6502_PCL])                 #18 Let PCL,PCH point to H operand
              10a4 de00  st   [y,x++]     4893  st([Y,Xpp])                     #19
              10a5 f0a8  beq  $10a8       4894  beq(pc()+3)                     #20
              10a6 fca9  bra  $10a9       4895  bra(pc()+3)                     #21
              10a7 0000  ld   $00         4896  ld(0)                           #22
              10a8 0001  ld   $01         4897  ld(1)                           #22(!)
              10a9 811b  adda [$1b]       4898  adda([v6502_PCH])               #23
              10aa c21b  st   [$1b]       4899  st([v6502_PCH])                 #24
              10ab ce00  st   [y,x]       4900  st([Y,X])                       #25
              10ac 1124  ld   [$24],x     4901  ld([v6502_ADL],X)               #26 Fetch L
              10ad 1525  ld   [$25],y     4902  ld([v6502_ADH],Y)               #27
              10ae 0d00  ld   [y,x]       4903  ld([Y,X])                       #28
              10af 111a  ld   [$1a],x     4904  ld([v6502_PCL],X)               #29 Fetch H
              10b0 c21a  st   [$1a]       4905  st([v6502_PCL])                 #30
              10b1 151b  ld   [$1b],y     4906  ld([v6502_PCH],Y)               #31
              10b2 0d00  ld   [y,x]       4907  ld([Y,X])                       #32
              10b3 c21b  st   [$1b]       4908  st([v6502_PCH])                 #33
              10b4 140e  ld   $0e,y       4909  ld(hi('v6502_next'),Y)          #34
              10b5 00ed  ld   $ed         4910  ld(-38/2)                       #35
              10b6 e020  jmp  y,$20       4911  jmp(Y,'v6502_next')             #36
                                          4912  #nop()                          #37 Overlap
                                          4913  #
                                          4914  label('v6502_INC')
v6502_INC:    10b7 1411  ld   $11,y       4915  ld(hi('v6502_inc'),Y)           #9,37
              10b8 e00e  jmp  y,$0e       4916  jmp(Y,'v6502_inc')              #10
                                          4917  #nop()                          #11 Overlap
                                          4918  label('v6502_LDA')
v6502_LDA:    10b9 1411  ld   $11,y       4919  ld(hi('v6502_lda'),Y)           #9,11
              10ba e018  jmp  y,$18       4920  jmp(Y,'v6502_lda')              #10
                                          4921  #nop()                          #11 Overlap
                                          4922  label('v6502_LDX')
v6502_LDX:    10bb 1411  ld   $11,y       4923  ld(hi('v6502_ldx'),Y)           #9,11
              10bc e022  jmp  y,$22       4924  jmp(Y,'v6502_ldx')              #10
                                          4925  #nop()                          #11 Overlap
                                          4926  label('v6502_LDX2')
v6502_LDX2:   10bd 1411  ld   $11,y       4927  ld(hi('v6502_ldx2'),Y)          #9,11
              10be e02a  jmp  y,$2a       4928  jmp(Y,'v6502_ldx2')             #10
                                          4929  #nop()                          #11 Overlap
                                          4930  label('v6502_LDY')
v6502_LDY:    10bf 1411  ld   $11,y       4931  ld(hi('v6502_ldy'),Y)           #9,11
              10c0 e026  jmp  y,$26       4932  jmp(Y,'v6502_ldy')              #10
                                          4933  #nop()                          #11 Overlap
                                          4934  label('v6502_STA')
v6502_STA:    10c1 1411  ld   $11,y       4935  ld(hi('v6502_sta'),Y)           #9,11
              10c2 e034  jmp  y,$34       4936  jmp(Y,'v6502_sta')              #10
                                          4937  #nop()                          #11 Overlap
                                          4938  label('v6502_STX')
v6502_STX:    10c3 1411  ld   $11,y       4939  ld(hi('v6502_stx'),Y)           #9,11
              10c4 e03a  jmp  y,$3a       4940  jmp(Y,'v6502_stx')              #10
                                          4941  #nop()                          #11 Overlap
                                          4942  label('v6502_STX2')
v6502_STX2:   10c5 1411  ld   $11,y       4943  ld(hi('v6502_stx2'),Y)          #9,11
              10c6 e040  jmp  y,$40       4944  jmp(Y,'v6502_stx2')             #10
                                          4945  #nop()                          #11 Overlap
                                          4946  label('v6502_STY')
v6502_STY:    10c7 1411  ld   $11,y       4947  ld(hi('v6502_sty'),Y)           #9,11
              10c8 e048  jmp  y,$48       4948  jmp(Y,'v6502_sty')              #10
                                          4949  #nop()                          #11 Overlap
                                          4950  label('v6502_TAX')
v6502_TAX:    10c9 1411  ld   $11,y       4951  ld(hi('v6502_tax'),Y)           #9,11
              10ca e04d  jmp  y,$4d       4952  jmp(Y,'v6502_tax')              #10
                                          4953  #nop()                          #11 Overlap
                                          4954  label('v6502_TAY')
v6502_TAY:    10cb 1411  ld   $11,y       4955  ld(hi('v6502_tay'),Y)           #9,11
              10cc e062  jmp  y,$62       4956  jmp(Y,'v6502_tay')              #10
                                          4957  #nop()                          #11 Overlap
                                          4958  label('v6502_TXA')
v6502_TXA:    10cd 1411  ld   $11,y       4959  ld(hi('v6502_txa'),Y)           #9,11
              10ce e065  jmp  y,$65       4960  jmp(Y,'v6502_txa')              #10
                                          4961  #nop()                          #11 Overlap
                                          4962  label('v6502_TYA')
v6502_TYA:    10cf 1411  ld   $11,y       4963  ld(hi('v6502_tya'),Y)           #9,11
              10d0 e068  jmp  y,$68       4964  jmp(Y,'v6502_tya')              #10
                                          4965  #nop()                          #11 Overlap
                                          4966  label('v6502_CLV')
v6502_CLV:    10d1 1411  ld   $11,y       4967  ld(hi('v6502_clv'),Y)           #9,11
              10d2 e076  jmp  y,$76       4968  jmp(Y,'v6502_clv')              #10
                                          4969  #nop()                          #11 Overlap
                                          4970  label('v6502_RTI')
v6502_RTI:    10d3 1411  ld   $11,y       4971  ld(hi('v6502_rti'),Y)           #9,11
              10d4 e0e4  jmp  y,$e4       4972  jmp(Y,'v6502_rti')              #10
                                          4973  #nop()                          #11 Overlap
                                          4974  label('v6502_ROR')
v6502_ROR:    10d5 140d  ld   $0d,y       4975  ld(hi('v6502_ror'),Y)           #9,11
              10d6 e08f  jmp  y,$8f       4976  jmp(Y,'v6502_ror')              #10
                                          4977  #nop()                          #11 Overlap
                                          4978  label('v6502_LSR')
v6502_LSR:    10d7 140d  ld   $0d,y       4979  ld(hi('v6502_lsr'),Y)           #9,11
              10d8 e0a9  jmp  y,$a9       4980  jmp(Y,'v6502_lsr')              #10
                                          4981  #nop()                          #11 Overlap
                                          4982  label('v6502_PHA')
v6502_PHA:    10d9 140d  ld   $0d,y       4983  ld(hi('v6502_pha'),Y)           #9,11
              10da e0ee  jmp  y,$ee       4984  jmp(Y,'v6502_pha')              #10
                                          4985  #nop()                          #11 Overlap
                                          4986  label('v6502_CLI')
v6502_CLI:    10db 1411  ld   $11,y       4987  ld(hi('v6502_cli'),Y)           #9,11
              10dc e06b  jmp  y,$6b       4988  jmp(Y,'v6502_cli')              #10
                                          4989  #nop()                          #11 Overlap
                                          4990  label('v6502_RTS')
v6502_RTS:    10dd 1411  ld   $11,y       4991  ld(hi('v6502_rts'),Y)           #9,11
              10de e08f  jmp  y,$8f       4992  jmp(Y,'v6502_rts')              #10
                                          4993  #nop()                          #11 Overlap
                                          4994  label('v6502_PLA')
v6502_PLA:    10df 140d  ld   $0d,y       4995  ld(hi('v6502_pla'),Y)           #9,11
              10e0 e0e3  jmp  y,$e3       4996  jmp(Y,'v6502_pla')              #10
                                          4997  #nop()                          #11 Overlap
                                          4998  label('v6502_SEI')
v6502_SEI:    10e1 1411  ld   $11,y       4999  ld(hi('v6502_sei'),Y)           #9,11
              10e2 e06e  jmp  y,$6e       5000  jmp(Y,'v6502_sei')              #10
                                          5001  #nop()                          #11 Overlap
                                          5002  label('v6502_TXS')
v6502_TXS:    10e3 1411  ld   $11,y       5003  ld(hi('v6502_txs'),Y)           #9,11
              10e4 e05e  jmp  y,$5e       5004  jmp(Y,'v6502_txs')              #10
                                          5005  #nop()                          #11 Overlap
                                          5006  label('v6502_TSX')
v6502_TSX:    10e5 1411  ld   $11,y       5007  ld(hi('v6502_tsx'),Y)           #9,11
              10e6 e054  jmp  y,$54       5008  jmp(Y,'v6502_tsx')              #10
                                          5009  #nop()                          #11 Overlap
                                          5010  label('v6502_CPY')
v6502_CPY:    10e7 1411  ld   $11,y       5011  ld(hi('v6502_cpy'),Y)           #9,11
              10e8 e0bd  jmp  y,$bd       5012  jmp(Y,'v6502_cpy')              #10
                                          5013  #nop()                          #11 Overlap
                                          5014  label('v6502_CMP')
v6502_CMP:    10e9 1411  ld   $11,y       5015  ld(hi('v6502_cmp'),Y)           #9,11
              10ea e0be  jmp  y,$be       5016  jmp(Y,'v6502_cmp')              #10
                                          5017  #nop()                          #11 Overlap
                                          5018  label('v6502_DEC')
v6502_DEC:    10eb 1411  ld   $11,y       5019  ld(hi('v6502_dec'),Y)           #9,11
              10ec e005  jmp  y,$05       5020  jmp(Y,'v6502_dec')              #10
                                          5021  #nop()                          #11 Overlap
                                          5022  label('v6502_CLD')
v6502_CLD:    10ed 1411  ld   $11,y       5023  ld(hi('v6502_cld'),Y)           #9,11
              10ee e071  jmp  y,$71       5024  jmp(Y,'v6502_cld')              #10
                                          5025  #nop()                          #11 Overlap
                                          5026  label('v6502_CPX')
v6502_CPX:    10ef 1411  ld   $11,y       5027  ld(hi('v6502_cpx'),Y)           #9,11
              10f0 e0bb  jmp  y,$bb       5028  jmp(Y,'v6502_cpx')              #10
                                          5029  #nop()                          #11 Overlap
                                          5030  label('v6502_ASL')
v6502_ASL:    10f1 140d  ld   $0d,y       5031  ld(hi('v6502_asl'),Y)           #9,11
              10f2 e0cb  jmp  y,$cb       5032  jmp(Y,'v6502_asl')              #10
                                          5033  #nop()                          #11 Overlap
                                          5034  label('v6502_PHP')
v6502_PHP:    10f3 1411  ld   $11,y       5035  ld(hi('v6502_php'),Y)           #9,11
              10f4 e0a2  jmp  y,$a2       5036  jmp(Y,'v6502_php')              #10
                                          5037  #nop()                          #11 Overlap
                                          5038  label('v6502_BIT')
v6502_BIT:    10f5 1411  ld   $11,y       5039  ld(hi('v6502_bit'),Y)           #9
              10f6 e07d  jmp  y,$7d       5040  jmp(Y,'v6502_bit')              #10
                                          5041  #nop()                          #11 Overlap
                                          5042  label('v6502_ROL')
v6502_ROL:    10f7 140d  ld   $0d,y       5043  ld(hi('v6502_rol'),Y)           #9
              10f8 e0b8  jmp  y,$b8       5044  jmp(Y,'v6502_rol')              #10
                                          5045  #nop()                          #11 Overlap
                                          5046  label('v6502_PLP')
v6502_PLP:    10f9 1411  ld   $11,y       5047  ld(hi('v6502_plp'),Y)           #9
              10fa e0d4  jmp  y,$d4       5048  jmp(Y,'v6502_plp')              #10
                                          5049  #nop()                          #11 Overlap
                                          5050  label('v6502_SED')              # Decimal mode not implemented
v6502_SED:    10fb 1411  ld   $11,y       5051  ld(hi('v6502_sed'),Y)           #9,11
              10fc e074  jmp  y,$74       5052  jmp(Y,'v6502_sed')              #10
                                          5053  #nop()                          #11 Overlap
                                          5054  label('v6502_ILL') # All illegal opcodes map to BRK, except $FF which will crash
                                          5055  label('v6502_BRK')
v6502_ILL:
v6502_BRK:    10fd 140d  ld   $0d,y       5056  ld(hi('v6502_brk'),Y)           #9
              10fe e0f6  jmp  y,$f6       5057  jmp(Y,'v6502_brk')              #10
                                          5058  #nop()                          #11 Overlap
                                          5059
                                          5060  while pc()&255 < 255:
                                          5061    nop()
                                          5062
                                          5063  # `v6502_RESUME' is the interpreter's secondary entry point for when
                                          5064  # the opcode and operands were already fetched, just before the last hPulse.
                                          5065  # It must be at $xxff, prefably somewhere in v6502's own code pages.
                                          5066  label('v6502_RESUME')
                                          5067  assert (pc()&255) == 255
v6502_RESUME: 10ff a005  suba $05         5068  suba(v6502_adjust)              #0,11 v6502 secondary entry point
                                          5069  # --- Page boundary ---
                                          5070  align(0x100,size=0x200)
              1100 c215  st   [$15]       5071  st([vTicks])                    #1
              1101 1124  ld   [$24],x     5072  ld([v6502_ADL],X)               #2
              1102 140f  ld   $0f,y       5073  ld(hi('v6502_execute'),Y)       #3
              1103 e126  jmp  y,[$26]     5074  jmp(Y,[v6502_IR])               #4
              1104 fcff  bra  $ff         5075  bra(255)                        #5
                                          5076
                                          5077  label('v6502_dec')
v6502_dec:    1105 1525  ld   [$25],y     5078  ld([v6502_ADH],Y)               #12
              1106 0d00  ld   [y,x]       5079  ld([Y,X])                       #13
              1107 a001  suba $01         5080  suba(1)                         #14
              1108 ce00  st   [y,x]       5081  st([Y,X])                       #15
              1109 c228  st   [$28]       5082  st([v6502_Qz])                  #16 Z flag
              110a c229  st   [$29]       5083  st([v6502_Qn])                  #17 N flag
              110b 140e  ld   $0e,y       5084  ld(hi('v6502_next'),Y)          #18
              110c 00f5  ld   $f5         5085  ld(-22/2)                       #19
              110d e020  jmp  y,$20       5086  jmp(Y,'v6502_next')             #20
                                          5087  #nop()                          #21 Overlap
                                          5088  #
                                          5089  label('v6502_inc')
v6502_inc:    110e 1525  ld   [$25],y     5090  ld([v6502_ADH],Y)               #12,22
              110f 0d00  ld   [y,x]       5091  ld([Y,X])                       #13
              1110 8001  adda $01         5092  adda(1)                         #14
              1111 ce00  st   [y,x]       5093  st([Y,X])                       #15
              1112 c228  st   [$28]       5094  st([v6502_Qz])                  #16 Z flag
              1113 c229  st   [$29]       5095  st([v6502_Qn])                  #17 N flag
              1114 140e  ld   $0e,y       5096  ld(hi('v6502_next'),Y)          #18
              1115 00f5  ld   $f5         5097  ld(-22/2)                       #19
              1116 e020  jmp  y,$20       5098  jmp(Y,'v6502_next')             #20
              1117 0200  nop              5099  nop()                           #21
                                          5100
                                          5101  label('v6502_lda')
v6502_lda:    1118 0200  nop              5102  nop()                           #12
              1119 1525  ld   [$25],y     5103  ld([v6502_ADH],Y)               #13
              111a 0d00  ld   [y,x]       5104  ld([Y,X])                       #14
              111b c218  st   [$18]       5105  st([v6502_A])                   #15
                                          5106  label('.lda16')
.lda16:       111c c228  st   [$28]       5107  st([v6502_Qz])                  #16 Z flag
              111d c229  st   [$29]       5108  st([v6502_Qn])                  #17 N flag
              111e 0200  nop              5109  nop()                           #18
              111f 140e  ld   $0e,y       5110  ld(hi('v6502_next'),Y)          #19
              1120 e020  jmp  y,$20       5111  jmp(Y,'v6502_next')             #20
              1121 00f5  ld   $f5         5112  ld(-22/2)                       #21
                                          5113
                                          5114  label('v6502_ldx')
v6502_ldx:    1122 1525  ld   [$25],y     5115  ld([v6502_ADH],Y)               #12
              1123 0d00  ld   [y,x]       5116  ld([Y,X])                       #13
              1124 fc1c  bra  .lda16      5117  bra('.lda16')                   #14
              1125 c22a  st   [$2a]       5118  st([v6502_X])                   #15
                                          5119
                                          5120  label('v6502_ldy')
v6502_ldy:    1126 1525  ld   [$25],y     5121  ld([v6502_ADH],Y)               #12
              1127 0d00  ld   [y,x]       5122  ld([Y,X])                       #13
              1128 fc1c  bra  .lda16      5123  bra('.lda16')                   #14
              1129 c22b  st   [$2b]       5124  st([v6502_Y])                   #15
                                          5125
                                          5126  label('v6502_ldx2')
v6502_ldx2:   112a 0124  ld   [$24]       5127  ld([v6502_ADL])                 #12 Special case $B6: LDX $DD,Y
              112b a12a  suba [$2a]       5128  suba([v6502_X])                 #13 Undo X offset
              112c 912b  adda [$2b],x     5129  adda([v6502_Y],X)               #14 Apply Y instead
              112d 0500  ld   [x]         5130  ld([X])                         #15
              112e c22a  st   [$2a]       5131  st([v6502_X])                   #16
              112f c228  st   [$28]       5132  st([v6502_Qz])                  #17 Z flag
              1130 c229  st   [$29]       5133  st([v6502_Qn])                  #18 N flag
              1131 140e  ld   $0e,y       5134  ld(hi('v6502_next'),Y)          #19
              1132 e020  jmp  y,$20       5135  jmp(Y,'v6502_next')             #20
              1133 00f5  ld   $f5         5136  ld(-22/2)                       #21
                                          5137
                                          5138  label('v6502_sta')
v6502_sta:    1134 1525  ld   [$25],y     5139  ld([v6502_ADH],Y)               #12
              1135 0118  ld   [$18]       5140  ld([v6502_A])                   #13
              1136 ce00  st   [y,x]       5141  st([Y,X])                       #14
              1137 140e  ld   $0e,y       5142  ld(hi('v6502_next'),Y)          #15
              1138 e020  jmp  y,$20       5143  jmp(Y,'v6502_next')             #16
              1139 00f7  ld   $f7         5144  ld(-18/2)                       #17
                                          5145
                                          5146  label('v6502_stx')
v6502_stx:    113a 1525  ld   [$25],y     5147  ld([v6502_ADH],Y)               #12
              113b 012a  ld   [$2a]       5148  ld([v6502_X])                   #13
              113c ce00  st   [y,x]       5149  st([Y,X])                       #14
              113d 140e  ld   $0e,y       5150  ld(hi('v6502_next'),Y)          #15
              113e e020  jmp  y,$20       5151  jmp(Y,'v6502_next')             #16
              113f 00f7  ld   $f7         5152  ld(-18/2)                       #17
                                          5153
                                          5154  label('v6502_stx2')
v6502_stx2:   1140 0124  ld   [$24]       5155  ld([v6502_ADL])                 #12 Special case $96: STX $DD,Y
              1141 a12a  suba [$2a]       5156  suba([v6502_X])                 #13 Undo X offset
              1142 912b  adda [$2b],x     5157  adda([v6502_Y],X)               #14 Apply Y instead
              1143 012a  ld   [$2a]       5158  ld([v6502_X])                   #15
              1144 c600  st   [x]         5159  st([X])                         #16
              1145 140e  ld   $0e,y       5160  ld(hi('v6502_next'),Y)          #17
              1146 e020  jmp  y,$20       5161  jmp(Y,'v6502_next')             #18
              1147 00f6  ld   $f6         5162  ld(-20/2)                       #19
                                          5163
                                          5164  label('v6502_sty')
v6502_sty:    1148 1525  ld   [$25],y     5165  ld([v6502_ADH],Y)               #12
              1149 012b  ld   [$2b]       5166  ld([v6502_Y])                   #13
              114a ce00  st   [y,x]       5167  st([Y,X])                       #14
              114b 140e  ld   $0e,y       5168  ld(hi('v6502_next'),Y)          #15
              114c e020  jmp  y,$20       5169  jmp(Y,'v6502_next')             #16
                                          5170  label('v6502_tax')
v6502_tax:    114d 00f7  ld   $f7         5171  ld(-18/2)                       #17,12
                                          5172  #
                                          5173  #label('v6502_tax')
                                          5174  #nop()                          #12 Overlap
              114e 0118  ld   [$18]       5175  ld([v6502_A])                   #13
              114f c22a  st   [$2a]       5176  st([v6502_X])                   #14
                                          5177  label('.tax15')
.tax15:       1150 c228  st   [$28]       5178  st([v6502_Qz])                  #15 Z flag
              1151 c229  st   [$29]       5179  st([v6502_Qn])                  #16 N flag
              1152 140e  ld   $0e,y       5180  ld(hi('v6502_next'),Y)          #17
              1153 e020  jmp  y,$20       5181  jmp(Y,'v6502_next')             #18
                                          5182  label('v6502_tsx')
v6502_tsx:    1154 00f6  ld   $f6         5183  ld(-20/2)                       #19
                                          5184  #
                                          5185  #label('v6502_tsx')
                                          5186  #nop()                          #12 Overlap
              1155 011c  ld   [$1c]       5187  ld([v6502_S])                   #13
              1156 a001  suba $01         5188  suba(1)                         #14 Shift down on export
              1157 c22a  st   [$2a]       5189  st([v6502_X])                   #15
                                          5190  label('.tsx16')
.tsx16:       1158 c228  st   [$28]       5191  st([v6502_Qz])                  #16 Z flag
              1159 c229  st   [$29]       5192  st([v6502_Qn])                  #17 N flag
              115a 0200  nop              5193  nop()                           #18
              115b 140e  ld   $0e,y       5194  ld(hi('v6502_next'),Y)          #19
              115c e020  jmp  y,$20       5195  jmp(Y,'v6502_next')             #20
              115d 00f5  ld   $f5         5196  ld(-22/2)                       #21
                                          5197
                                          5198  label('v6502_txs')
v6502_txs:    115e 012a  ld   [$2a]       5199  ld([v6502_X])                   #12
              115f 8001  adda $01         5200  adda(1)                         #13 Shift up on import
              1160 fc58  bra  .tsx16      5201  bra('.tsx16')                   #14
              1161 c21c  st   [$1c]       5202  st([v6502_S])                   #15
                                          5203
                                          5204  label('v6502_tay')
v6502_tay:    1162 0118  ld   [$18]       5205  ld([v6502_A])                   #12
              1163 fc50  bra  .tax15      5206  bra('.tax15')                   #13
              1164 c22b  st   [$2b]       5207  st([v6502_Y])                   #14
                                          5208
                                          5209  label('v6502_txa')
v6502_txa:    1165 012a  ld   [$2a]       5210  ld([v6502_X])                   #12
              1166 fc50  bra  .tax15      5211  bra('.tax15')                   #13
              1167 c218  st   [$18]       5212  st([v6502_A])                   #14
                                          5213
                                          5214  label('v6502_tya')
v6502_tya:    1168 012b  ld   [$2b]       5215  ld([v6502_Y])                   #12
              1169 fc50  bra  .tax15      5216  bra('.tax15')                   #13
              116a c218  st   [$18]       5217  st([v6502_A])                   #14
                                          5218
                                          5219  label('v6502_cli')
v6502_cli:    116b 0127  ld   [$27]       5220  ld([v6502_P])                   #12
              116c fc79  bra  .clv15      5221  bra('.clv15')                   #13
              116d 20fb  anda $fb         5222  anda(~v6502_Iflag)              #14
                                          5223
                                          5224  label('v6502_sei')
v6502_sei:    116e 0127  ld   [$27]       5225  ld([v6502_P])                   #12
              116f fc79  bra  .clv15      5226  bra('.clv15')                   #13
              1170 4004  ora  $04         5227  ora(v6502_Iflag)                #14
                                          5228
                                          5229  label('v6502_cld')
v6502_cld:    1171 0127  ld   [$27]       5230  ld([v6502_P])                   #12
              1172 fc79  bra  .clv15      5231  bra('.clv15')                   #13
              1173 20f7  anda $f7         5232  anda(~v6502_Dflag)              #14
                                          5233
                                          5234  label('v6502_sed')
v6502_sed:    1174 0127  ld   [$27]       5235  ld([v6502_P])                   #12
              1175 fc79  bra  .clv15      5236  bra('.clv15')                   #13
                                          5237  label('v6502_clv')
v6502_clv:    1176 4008  ora  $08         5238  ora(v6502_Dflag)                #14,12 Overlap
                                          5239  #
                                          5240  #label('v6502_clv')
                                          5241  #nop()                          #12
              1177 0127  ld   [$27]       5242  ld([v6502_P])                   #13
              1178 207f  anda $7f         5243  anda(~v6502_Vemu)               #14
                                          5244  label('.clv15')
.clv15:       1179 c227  st   [$27]       5245  st([v6502_P])                   #15
              117a 140e  ld   $0e,y       5246  ld(hi('v6502_next'),Y)          #16
              117b 00f6  ld   $f6         5247  ld(-20/2)                       #17
              117c e020  jmp  y,$20       5248  jmp(Y,'v6502_next')             #18
                                          5249  label('v6502_bit')
v6502_bit:    117d 0200  nop              5250  nop()                           #19,12
                                          5251  #
                                          5252  #label('v6502_bit')
                                          5253  #nop()                          #12 Overlap
              117e 1124  ld   [$24],x     5254  ld([v6502_ADL],X)               #13
              117f 1525  ld   [$25],y     5255  ld([v6502_ADH],Y)               #14
              1180 0d00  ld   [y,x]       5256  ld([Y,X])                       #15
              1181 c229  st   [$29]       5257  st([v6502_Qn])                  #16 N flag
              1182 2118  anda [$18]       5258  anda([v6502_A])                 #17 This is a reason we keep N and Z in separate bytes
              1183 c228  st   [$28]       5259  st([v6502_Qz])                  #18 Z flag
              1184 0127  ld   [$27]       5260  ld([v6502_P])                   #19
              1185 207f  anda $7f         5261  anda(~v6502_Vemu)               #20
              1186 c227  st   [$27]       5262  st([v6502_P])                   #21
              1187 0d00  ld   [y,x]       5263  ld([Y,X])                       #22
              1188 8200  adda ac          5264  adda(AC)                        #23
              1189 2080  anda $80         5265  anda(v6502_Vemu)                #24
              118a 4127  ora  [$27]       5266  ora([v6502_P])                  #25
              118b c227  st   [$27]       5267  st([v6502_P])                   #26 Update V
              118c 140e  ld   $0e,y       5268  ld(hi('v6502_next'),Y)          #27
              118d e020  jmp  y,$20       5269  jmp(Y,'v6502_next')             #28
              118e 00f1  ld   $f1         5270  ld(-30/2)                       #29
                                          5271
                                          5272  label('v6502_rts')
v6502_rts:    118f 011c  ld   [$1c]       5273  ld([v6502_S])                   #12
              1190 1200  ld   ac,x        5274  ld(AC,X)                        #13
              1191 8002  adda $02         5275  adda(2)                         #14
              1192 c21c  st   [$1c]       5276  st([v6502_S])                   #15
              1193 1400  ld   $00,y       5277  ld(0,Y)                         #16
              1194 0d00  ld   [y,x]       5278  ld([Y,X])                       #17
              1195 de00  st   [y,x++]     5279  st([Y,Xpp])                     #18 Just X++
              1196 8001  adda $01         5280  adda(1)                         #19
              1197 c21a  st   [$1a]       5281  st([v6502_PCL])                 #20
              1198 f09b  beq  $119b       5282  beq(pc()+3)                     #21
              1199 fc9c  bra  $119c       5283  bra(pc()+3)                     #22
              119a 0000  ld   $00         5284  ld(0)                           #23
              119b 0001  ld   $01         5285  ld(1)                           #23(!)
              119c 8d00  adda [y,x]       5286  adda([Y,X])                     #24
              119d c21b  st   [$1b]       5287  st([v6502_PCH])                 #25
              119e 0200  nop              5288  nop()                           #26
              119f 140e  ld   $0e,y       5289  ld(hi('v6502_next'),Y)          #27
              11a0 e020  jmp  y,$20       5290  jmp(Y,'v6502_next')             #28
              11a1 00f1  ld   $f1         5291  ld(-30/2)                       #29
                                          5292
                                          5293  label('v6502_php')
v6502_php:    11a2 011c  ld   [$1c]       5294  ld([v6502_S])                   #12
              11a3 a001  suba $01         5295  suba(1)                         #13
              11a4 d21c  st   [$1c],x     5296  st([v6502_S],X)                 #14
              11a5 0127  ld   [$27]       5297  ld([v6502_P])                   #15
              11a6 20bd  anda $bd         5298  anda(~v6502_Vflag&~v6502_Zflag) #16 Keep Vemu,B,D,I,C
              11a7 f4aa  bge  $11aa       5299  bpl(pc()+3)                     #17 V to bit 6 and clear N
              11a8 fcaa  bra  $11aa       5300  bra(pc()+2)                     #18
              11a9 60c0  xora $c0         5301  xora(v6502_Vflag^v6502_Vemu)    #19
              11aa c600  st   [x]         5302  st([X])                         #19,20
              11ab 0128  ld   [$28]       5303  ld([v6502_Qz])                  #21 Z flag
              11ac f0af  beq  $11af       5304  beq(pc()+3)                     #22
              11ad fcb0  bra  $11b0       5305  bra(pc()+3)                     #23
              11ae 0000  ld   $00         5306  ld(0)                           #24
              11af 0002  ld   $02         5307  ld(v6502_Zflag)                 #24(!)
              11b0 4500  ora  [x]         5308  ora([X])                        #25
              11b1 c600  st   [x]         5309  st([X])                         #26
              11b2 0129  ld   [$29]       5310  ld([v6502_Qn])                  #27 N flag
              11b3 2080  anda $80         5311  anda(0x80)                      #28
              11b4 4500  ora  [x]         5312  ora([X])                        #29
              11b5 4020  ora  $20         5313  ora(v6502_Uflag)                #30 Unused bit
              11b6 c600  st   [x]         5314  st([X])                         #31
              11b7 0200  nop              5315  nop()                           #32
              11b8 140e  ld   $0e,y       5316  ld(hi('v6502_next'),Y)          #33
              11b9 e020  jmp  y,$20       5317  jmp(Y,'v6502_next')             #34
              11ba 00ee  ld   $ee         5318  ld(-36/2)                       #35
                                          5319
                                          5320  label('v6502_cpx')
v6502_cpx:    11bb fcc0  bra  .cmp14      5321  bra('.cmp14')                   #12
              11bc 012a  ld   [$2a]       5322  ld([v6502_X])                   #13
                                          5323
                                          5324  label('v6502_cpy')
v6502_cpy:    11bd fcc0  bra  .cmp14      5325  bra('.cmp14')                   #12
                                          5326  label('v6502_cmp')
v6502_cmp:    11be 012b  ld   [$2b]       5327  ld([v6502_Y])                   #13,12
                                          5328  #
                                          5329  #label('v6502_cmp')             #12 Overlap
                                          5330  assert v6502_Cflag == 1
              11bf 0118  ld   [$18]       5331  ld([v6502_A])                   #13
                                          5332  label('.cmp14')
.cmp14:       11c0 1525  ld   [$25],y     5333  ld([v6502_ADH],Y)               #14
              11c1 e8c7  blt  .cmp17      5334  bmi('.cmp17')                   #15 Carry?
              11c2 ad00  suba [y,x]       5335  suba([Y,X])                     #16
              11c3 c228  st   [$28]       5336  st([v6502_Qz])                  #17 Z flag
              11c4 c229  st   [$29]       5337  st([v6502_Qn])                  #18 N flag
              11c5 fccb  bra  .cmp21      5338  bra('.cmp21')                   #19
              11c6 4d00  ora  [y,x]       5339  ora([Y,X])                      #20
                                          5340  label('.cmp17')
.cmp17:       11c7 c228  st   [$28]       5341  st([v6502_Qz])                  #17 Z flag
              11c8 c229  st   [$29]       5342  st([v6502_Qn])                  #18 N flag
              11c9 2d00  anda [y,x]       5343  anda([Y,X])                     #19
              11ca 0200  nop              5344  nop()                           #20
                                          5345  label('.cmp21')
.cmp21:       11cb 6080  xora $80         5346  xora(0x80)                      #21
              11cc 3080  anda $80,x       5347  anda(0x80,X)                    #22 Move carry to bit 0
              11cd 0127  ld   [$27]       5348  ld([v6502_P])                   #23 C flag
              11ce 20fe  anda $fe         5349  anda(~1)                        #24
              11cf 4500  ora  [x]         5350  ora([X])                        #25
              11d0 c227  st   [$27]       5351  st([v6502_P])                   #26
              11d1 140e  ld   $0e,y       5352  ld(hi('v6502_next'),Y)          #27
              11d2 e020  jmp  y,$20       5353  jmp(Y,'v6502_next')             #28
              11d3 00f1  ld   $f1         5354  ld(-30/2)                       #29
                                          5355
                                          5356  label('v6502_plp')
                                          5357  assert v6502_Nflag == 128
                                          5358  assert 2*v6502_Vflag == v6502_Vemu
v6502_plp:    11d4 011c  ld   [$1c]       5359  ld([v6502_S])                   #12
              11d5 1200  ld   ac,x        5360  ld(AC,X)                        #13
              11d6 8001  adda $01         5361  adda(1)                         #14
              11d7 c21c  st   [$1c]       5362  st([v6502_S])                   #15
              11d8 0500  ld   [x]         5363  ld([X])                         #16
              11d9 c229  st   [$29]       5364  st([v6502_Qn])                  #17 N flag
              11da 2002  anda $02         5365  anda(v6502_Zflag)               #18
              11db 6002  xora $02         5366  xora(v6502_Zflag)               #19
              11dc c228  st   [$28]       5367  st([v6502_Qz])                  #20 Z flag
              11dd 0500  ld   [x]         5368  ld([X])                         #21
              11de 207f  anda $7f         5369  anda(~v6502_Vemu)               #22 V to bit 7
              11df 8040  adda $40         5370  adda(v6502_Vflag)               #23
              11e0 c227  st   [$27]       5371  st([v6502_P])                   #24 All other flags
              11e1 140e  ld   $0e,y       5372  ld(hi('v6502_next'),Y)          #25
              11e2 e020  jmp  y,$20       5373  jmp(Y,'v6502_next')             #26
              11e3 00f2  ld   $f2         5374  ld(-28/2)                       #27
                                          5375
                                          5376  label('v6502_rti')
v6502_rti:    11e4 011c  ld   [$1c]       5377  ld([v6502_S])                   #12
              11e5 1200  ld   ac,x        5378  ld(AC,X)                        #13
              11e6 8003  adda $03         5379  adda(3)                         #14
              11e7 c21c  st   [$1c]       5380  st([v6502_S])                   #15
              11e8 0500  ld   [x]         5381  ld([X])                         #16
              11e9 c229  st   [$29]       5382  st([v6502_Qn])                  #17 N flag
              11ea 2002  anda $02         5383  anda(v6502_Zflag)               #18
              11eb 6002  xora $02         5384  xora(v6502_Zflag)               #19
              11ec c228  st   [$28]       5385  st([v6502_Qz])                  #20 Z flag
              11ed 1400  ld   $00,y       5386  ld(0,Y)                         #21
              11ee 0d00  ld   [y,x]       5387  ld([Y,X])                       #22
              11ef de00  st   [y,x++]     5388  st([Y,Xpp])                     #23 Just X++
              11f0 207f  anda $7f         5389  anda(~v6502_Vemu)               #24 V to bit 7
              11f1 8040  adda $40         5390  adda(v6502_Vflag)               #25
              11f2 c227  st   [$27]       5391  st([v6502_P])                   #26 All other flags
              11f3 0d00  ld   [y,x]       5392  ld([Y,X])                       #27
              11f4 de00  st   [y,x++]     5393  st([Y,Xpp])                     #28 Just X++
              11f5 c21a  st   [$1a]       5394  st([v6502_PCL])                 #29
              11f6 0d00  ld   [y,x]       5395  ld([Y,X])                       #30
              11f7 c21b  st   [$1b]       5396  st([v6502_PCH])                 #31
              11f8 0200  nop              5397  nop()                           #32
              11f9 140e  ld   $0e,y       5398  ld(hi('v6502_next'),Y)          #33
              11fa e020  jmp  y,$20       5399  jmp(Y,'v6502_next')             #34
              11fb 00ee  ld   $ee         5400  ld(-36/2)                       #35
                                          5401
                                          5402  #-----------------------------------------------------------------------
                                          5403  #       Extended vertical blank logic: interrupts
                                          5404  #-----------------------------------------------------------------------
              11fc 0200  nop              5405  align(0x100)
              11fd 0200  nop
              11fe 0200  nop
              11ff 0200  nop
                                          5406
                                          5407  # Check if an IRQ handler is defined
                                          5408  label('vBlankFirst#78')
vBlankFirst#78:
              1200 09f6  ld   [y,$f6]     5409  ld([Y,vIRQ_v5])                 #78
              1201 49f7  ora  [y,$f7]     5410  ora([Y,vIRQ_v5+1])              #79
                                          5411  bne('vBlankFirst#82')           #80
              1202 ec09  bne  vBlankFirst#82
              1203 0116  ld   [$16]       5412  ld([vPC])                       #81
              1204 0055  ld   $55         5413  runVcpu(186-82-extra,           #82 Application cycles (scan line 0)
              1205 c21e  st   [$1e]
              1206 1502  ld   [$02],y
              1207 e0ff  jmp  y,$ff
              1208 001e  ld   $1e
                                          5414      '---D line 0 timeout but no irq',
                                          5415      returnTo='vBlankFirst#186')
                                          5416
                                          5417  label('vBlankFirst#82')
vBlankFirst#82:
              1209 c230  st   [$30]       5418  st([0x30])                      #82 Save vPC
              120a 0117  ld   [$17]       5419  ld([vPC+1])                     #83
              120b c231  st   [$31]       5420  st([0x31])                      #84
              120c 0118  ld   [$18]       5421  ld([vAC])                       #85 Save vAC
              120d c232  st   [$32]       5422  st([0x32])                      #86
              120e 0119  ld   [$19]       5423  ld([vAC+1])                     #87
              120f c233  st   [$33]       5424  st([0x33])                      #88
              1210 0102  ld   [$02]       5425  ld([vCpuSelect])                #89 Save vCpuSelect for PREFIX
              1211 c234  st   [$34]       5426  st([0x34])                      #90
              1212 09f6  ld   [y,$f6]     5427  ld([Y,vIRQ_v5])                 #91 Set vPC to vIRQ
              1213 a002  suba $02         5428  suba(2)                         #92
              1214 c216  st   [$16]       5429  st([vPC])                       #93
              1215 09f7  ld   [y,$f7]     5430  ld([Y,vIRQ_v5+1])               #94
              1216 c217  st   [$17]       5431  st([vPC+1])                     #95
              1217 0102  ld   [$02]       5432  ld([vCpuSelect])                #96 Handler must save this if needed
              1218 c219  st   [$19]       5433  st([vAC+1])                     #97
              1219 0000  ld   $00         5434  ld(0)                           #98
              121a c218  st   [$18]       5435  st([vAC])                       #99
              121b 0002  ld   $02         5436  ld(hi('ENTER'))                 #100 Set vCpuSelect to ENTER (=regular vCPU)
              121c c202  st   [$02]       5437  st([vCpuSelect])                #101
              121d 0055  ld   $55         5438  runVcpu(186-102-extra,          #102 Application cycles (scan line 0)
              121e c21e  st   [$1e]
              121f 1502  ld   [$02],y
              1220 e0ff  jmp  y,$ff
              1221 0014  ld   $14
                                          5439      '---D line 0 timeout with irq',
                                          5440      returnTo='vBlankFirst#186')
                                          5441
                                          5442  # vIRQ sequence WITH interpreter switch
                                          5443  label('vRTI#18')
vRTI#18:      1222 0500  ld   [x]         5444  ld([X])                         #18
              1223 c202  st   [$02]       5445  st([vCpuSelect])                #19
              1224 0130  ld   [$30]       5446  ld([0x30])                      #20
              1225 c216  st   [$16]       5447  st([vPC])                       #21
              1226 0131  ld   [$31]       5448  ld([0x31])                      #22
              1227 c217  st   [$17]       5449  st([vPC+1])                     #23
              1228 0132  ld   [$32]       5450  ld([0x32])                      #24
              1229 c218  st   [$18]       5451  st([vAC])                       #25
              122a 0133  ld   [$33]       5452  ld([0x33])                      #26
              122b c219  st   [$19]       5453  st([vAC+1])                     #27
              122c 0200  nop              5454  nop()                           #28
              122d 0200  nop              5455  nop()                           #29
              122e 0200  nop              5456  nop()                           #30 #0 This MUST match maxTicks, (ie maxTicks=30)
              122f 1403  ld   $03,y       5457  ld(hi('RESYNC'),Y)              #1
              1230 e00c  jmp  y,$0c       5458  jmp(Y,'RESYNC')                 #2
              1231 0115  ld   [$15]       5459  ld([vTicks])                    #3
                                          5460
                                          5461  # Entered last line of vertical blank (line 40)
                                          5462  label('vBlankLast#34')
                                          5463
                                          5464  #-----------------------------------------------------------------------
                                          5465  #       Extended vertical blank logic: game controller decoding
                                          5466  #-----------------------------------------------------------------------
                                          5467
                                          5468  # Game controller types
                                          5469  # TypeA: Based on 74LS165 shift register (not supported)
                                          5470  # TypeB: Based on CD4021B shift register (standard)
                                          5471  # TypeC: Based on priority encoder
                                          5472  #
                                          5473  # Notes:
                                          5474  # - TypeA was only used during development and first beta test, before ROM v1
                                          5475  # - TypeB appears as type A with negative logic levels
                                          5476  # - TypeB is the game controller type that comes with the original kit and ROM v1
                                          5477  # - TypeB is mimicked by BabelFish / Pluggy McPlugface
                                          5478  # - TypeB requires a prolonged /SER_LATCH, therefore vPulse is 8 scanlines, not 2
                                          5479  # - TypeB and TypeC can be sampled in the same scanline
                                          5480  # - TypeA is 1 scanline shifted as it looks at a different edge (XXX up or down?)
                                          5481  # - TypeC gives incomplete information: lower buttons overshadow higher ones
                                          5482  #
                                          5483  #       TypeC    Alias    Button TypeB
                                          5484  #       00000000  ^@   -> Right  11111110
                                          5485  #       00000001  ^A   -> Left   11111101
                                          5486  #       00000011  ^C   -> Down   11111011
                                          5487  #       00000111  ^G   -> Up     11110111
                                          5488  #       00001111  ^O   -> Start  11101111
                                          5489  #       00011111  ^_   -> Select 11011111
                                          5490  #       00111111  ?    -> B      10111111
                                          5491  #       01111111  DEL  -> A      01111111
                                          5492  #       11111111       -> (None) 11111111
                                          5493  #
                                          5494  #       Conversion formula:
                                          5495  #               f(x) := 254 - x
                                          5496
                                          5497  # Detect controller TypeC codes
vBlankLast#34:
              1232 010f  ld   [$0f]       5498  ld([serialRaw])                 #34 if serialRaw in [0,1,3,7,15,31,63,127,255]
              1233 8001  adda $01         5499  adda(1)                         #35
              1234 210f  anda [$0f]       5500  anda([serialRaw])               #36
              1235 ec46  bne  .buttons#39 5501  bne('.buttons#39')              #37
                                          5502
                                          5503  # TypeC
              1236 010f  ld   [$0f]       5504  ld([serialRaw])                 #38 [TypeC] if serialRaw < serialLast
              1237 8001  adda $01         5505  adda(1)                         #39
              1238 2110  anda [$10]       5506  anda([serialLast])              #40
              1239 ec3d  bne  .buttons#43 5507  bne('.buttons#43')              #41
              123a 00fe  ld   $fe         5508  ld(254)                         #42 then clear the selected bit
              123b 0200  nop              5509  nop()                           #43
              123c fc40  bra  .buttons#46 5510  bra('.buttons#46')              #44
                                          5511  label('.buttons#43')
.buttons#43:  123d a10f  suba [$0f]       5512  suba([serialRaw])               #43,45
              123e 2111  anda [$11]       5513  anda([buttonState])             #44
              123f c211  st   [$11]       5514  st([buttonState])               #45
                                          5515  label('.buttons#46')
.buttons#46:  1240 010f  ld   [$0f]       5516  ld([serialRaw])                 #46 Set the lower bits
              1241 4111  ora  [$11]       5517  ora([buttonState])              #47
                                          5518  label('.buttons#48')
.buttons#48:  1242 c211  st   [$11]       5519  st([buttonState])               #48
              1243 010f  ld   [$0f]       5520  ld([serialRaw])                 #49 Update serialLast for next pass
              1244 e0b3  jmp  y,$b3       5521  jmp(Y,'vBlankLast#52')          #50
              1245 c210  st   [$10]       5522  st([serialLast])                #51
                                          5523
                                          5524  # TypeB
                                          5525  # pChange = pNew & ~pOld
                                          5526  # nChange = nNew | ~nOld {DeMorgan}
                                          5527  label('.buttons#39')
.buttons#39:  1246 00ff  ld   $ff         5528  ld(255)                         #39 [TypeB] Bitwise edge-filter to detect button presses
              1247 6110  xora [$10]       5529  xora([serialLast])              #40
              1248 410f  ora  [$0f]       5530  ora([serialRaw])                #41 Catch button-press events
              1249 2111  anda [$11]       5531  anda([buttonState])             #42 Keep active button presses
              124a 410f  ora  [$0f]       5532  ora([serialRaw])                #43
              124b 0200  nop              5533  nop()                           #44
              124c 0200  nop              5534  nop()                           #45
              124d fc42  bra  .buttons#48 5535  bra('.buttons#48')              #46
              124e 0200  nop              5536  nop()                           #47
                                          5537
                                          5538
                                          5539  #-----------------------------------------------------------------------
                                          5540  #       More SYS functions, (0x1200)
                                          5541  #-----------------------------------------------------------------------
                                          5542
                                          5543  # SYS_Exec_88 implementation
                                          5544  label('sys_Exec')
sys_Exec:     124f d617  st   [$17],y     5545  st([vPC+1],Y)                   #18 Clear vPCH and Y
              1250 011c  ld   [$1c]       5546  ld([vSP])                       #19 Place ROM loader below current stack pointer
              1251 a037  suba $37         5547  suba(53+2)                      #20 (AC -> *+0) One extra word for PUSH
              1252 d21d  st   [$1d],x     5548  st([vTmp],X)                    #21
              1253 80fe  adda $fe         5549  adda(-2)                        #22 (AC -> *-2)
              1254 c216  st   [$16]       5550  st([vPC])                       #23
                                          5551  # Start of manually compiled vCPU section
              1255 dc75  st   $75,[y,x++] 5552  st('PUSH',    [Y,Xpp])          #24 *+0
              1256 dccf  st   $cf,[y,x++] 5553  st('CALL',    [Y,Xpp])          #25 *+26 Fetch first byte
              1257 8023  adda $23         5554  adda(33-(-2))                   #26 (AC -> *+33)
              1258 de00  st   [y,x++]     5555  st(           [Y,Xpp])          #27 *+27
              1259 dc5e  st   $5e,[y,x++] 5556  st('ST',      [Y,Xpp])          #28 *+3 Chunk copy loop
              125a dc27  st   $27,[y,x++] 5557  st(sysArgs+3, [Y,Xpp])          #29 *+4 High-address comes first
              125b dccf  st   $cf,[y,x++] 5558  st('CALL',    [Y,Xpp])          #30 *+5
              125c de00  st   [y,x++]     5559  st(           [Y,Xpp])          #31 *+6
              125d dc5e  st   $5e,[y,x++] 5560  st('ST',      [Y,Xpp])          #32 *+7
              125e dc26  st   $26,[y,x++] 5561  st(sysArgs+2, [Y,Xpp])          #33 *+8 Then the low address
              125f dccf  st   $cf,[y,x++] 5562  st('CALL',    [Y,Xpp])          #34 *+9
              1260 de00  st   [y,x++]     5563  st(           [Y,Xpp])          #35 *+10
              1261 dc5e  st   $5e,[y,x++] 5564  st('ST',      [Y,Xpp])          #36 *+11 Byte copy loop
              1262 dc28  st   $28,[y,x++] 5565  st(sysArgs+4, [Y,Xpp])          #37 *+12 Byte count (0 means 256)
              1263 dccf  st   $cf,[y,x++] 5566  st('CALL',    [Y,Xpp])          #38 *+13
              1264 de00  st   [y,x++]     5567  st(           [Y,Xpp])          #39 *+14
              1265 dcf0  st   $f0,[y,x++] 5568  st('POKE',    [Y,Xpp])          #40 *+15
              1266 dc26  st   $26,[y,x++] 5569  st(sysArgs+2, [Y,Xpp])          #41 *+16
              1267 dc93  st   $93,[y,x++] 5570  st('INC',     [Y,Xpp])          #42 *+17
              1268 dc26  st   $26,[y,x++] 5571  st(sysArgs+2, [Y,Xpp])          #43 *+18
              1269 dc1a  st   $1a,[y,x++] 5572  st('LD',      [Y,Xpp])          #44 *+19
              126a dc28  st   $28,[y,x++] 5573  st(sysArgs+4, [Y,Xpp])          #45 *+20
              126b dce6  st   $e6,[y,x++] 5574  st('SUBI',    [Y,Xpp])          #46 *+21
              126c dc01  st   $01,[y,x++] 5575  st(1,         [Y,Xpp])          #47 *+22
              126d dc35  st   $35,[y,x++] 5576  st('BCC',     [Y,Xpp])          #48 *+23
              126e dc72  st   $72,[y,x++] 5577  st('NE',      [Y,Xpp])          #49 *+24
              126f 80e8  adda $e8         5578  adda(11-2-33)                   #50 (AC -> *+9)
              1270 de00  st   [y,x++]     5579  st(           [Y,Xpp])          #51 *+25
              1271 dccf  st   $cf,[y,x++] 5580  st('CALL',    [Y,Xpp])          #52 *+26 Go to next block
              1272 8018  adda $18         5581  adda(33-9)                      #53 (AC -> *+33)
              1273 de00  st   [y,x++]     5582  st(           [Y,Xpp])          #54 *+27
              1274 dc35  st   $35,[y,x++] 5583  st('BCC',     [Y,Xpp])          #55 *+28
              1275 dc72  st   $72,[y,x++] 5584  st('NE',      [Y,Xpp])          #56 *+29
              1276 80e0  adda $e0         5585  adda(3-2-33)                    #57 (AC -> *+1)
              1277 de00  st   [y,x++]     5586  st(           [Y,Xpp])          #58 *+30
              1278 dc63  st   $63,[y,x++] 5587  st('POP',     [Y,Xpp])          #59 *+31 End
              1279 dcff  st   $ff,[y,x++] 5588  st('RET',     [Y,Xpp])          #60 *+32
                                          5589  # Pointer constant pointing to the routine below (for use by CALL)
              127a 8022  adda $22         5590  adda(35-1)                      #61 (AC -> *+35)
              127b de00  st   [y,x++]     5591  st(           [Y,Xpp])          #62 *+33
              127c dc00  st   $00,[y,x++] 5592  st(0,         [Y,Xpp])          #63 *+34
                                          5593  # Routine to read next byte from ROM and advance read pointer
              127d dc1a  st   $1a,[y,x++] 5594  st('LD',      [Y,Xpp])          #64 *+35 Test for end of ROM table
              127e dc24  st   $24,[y,x++] 5595  st(sysArgs+0, [Y,Xpp])          #65 *+36
              127f dc8c  st   $8c,[y,x++] 5596  st('XORI',    [Y,Xpp])          #66 *+37
              1280 dcfb  st   $fb,[y,x++] 5597  st(251,       [Y,Xpp])          #67 *+38
              1281 dc35  st   $35,[y,x++] 5598  st('BCC',     [Y,Xpp])          #68 *+39
              1282 dc72  st   $72,[y,x++] 5599  st('NE',      [Y,Xpp])          #69 *+40
              1283 8009  adda $09         5600  adda(46-2-35)                   #70 (AC -> *+44)
              1284 de00  st   [y,x++]     5601  st(           [Y,Xpp])          #71 *+41
              1285 dc5e  st   $5e,[y,x++] 5602  st('ST',      [Y,Xpp])          #72 *+42 Wrap to next ROM page
              1286 dc24  st   $24,[y,x++] 5603  st(sysArgs+0, [Y,Xpp])          #73 *+43
              1287 dc93  st   $93,[y,x++] 5604  st('INC',     [Y,Xpp])          #74 *+44
              1288 dc25  st   $25,[y,x++] 5605  st(sysArgs+1, [Y,Xpp])          #75 *+45
              1289 dc21  st   $21,[y,x++] 5606  st('LDW',     [Y,Xpp])          #76 *+46 Read next byte from ROM table
              128a dc24  st   $24,[y,x++] 5607  st(sysArgs+0, [Y,Xpp])          #77 *+47
              128b dc7f  st   $7f,[y,x++] 5608  st('LUP',     [Y,Xpp])          #78 *+48
              128c dc00  st   $00,[y,x++] 5609  st(0,         [Y,Xpp])          #79 *+49
              128d dc93  st   $93,[y,x++] 5610  st('INC',     [Y,Xpp])          #80 *+50 Increment read pointer
              128e dc24  st   $24,[y,x++] 5611  st(sysArgs+0, [Y,Xpp])          #81 *+51
              128f dcff  st   $ff,[y,x++] 5612  st('RET',     [Y,Xpp])          #82 *+52 Return
                                          5613  # Return to interpreter
              1290 1403  ld   $03,y       5614  ld(hi('REENTER'),Y)             #83
              1291 e0cb  jmp  y,$cb       5615  jmp(Y,'REENTER')                #84
              1292 00d4  ld   $d4         5616  ld(-88/2)                       #85
                                          5617
                                          5618  # SYS_VDrawBits_134 implementation
                                          5619  label('sys_VDrawBits')
sys_VDrawBits:
              1293 0000  ld   $00         5620  ld(0)                           #18
                                          5621  label('.sysVdb0')
.sysVdb0:     1294 c21d  st   [$1d]       5622  st([vTmp])                      #19+i*25
              1295 9529  adda [$29],y     5623  adda([sysArgs+5],Y)             #20+i*25 Y=[sysPos+1]+[vTmp]
              1296 0126  ld   [$26]       5624  ld([sysArgs+2])                 #21+i*25 Select color
              1297 e89a  blt  $129a       5625  bmi(pc()+3)                     #22+i*25
              1298 fc9b  bra  $129b       5626  bra(pc()+3)                     #23+i*25
              1299 0124  ld   [$24]       5627  ld([sysArgs+0])                 #24+i*25
              129a 0125  ld   [$25]       5628  ld([sysArgs+1])                 #24+i*25(!)
              129b ce00  st   [y,x]       5629  st([Y,X])                       #25+i*25 Draw pixel
              129c 0126  ld   [$26]       5630  ld([sysArgs+2])                 #26+i*25 Shift byte left
              129d 8200  adda ac          5631  adda(AC)                        #27+i*25
              129e c226  st   [$26]       5632  st([sysArgs+2])                 #28+i*25
              129f 011d  ld   [$1d]       5633  ld([vTmp])                      #29+i*25 Unrolled loop (once)
              12a0 8129  adda [$29]       5634  adda([sysArgs+5])               #31+i*25
              12a1 9401  adda $01,y       5635  adda(1,Y)                       #30+i*25 Y=[sysPos+1]+[vTmp]+1
              12a2 0126  ld   [$26]       5636  ld([sysArgs+2])                 #32+i*25 Select color
              12a3 e8a6  blt  $12a6       5637  bmi(pc()+3)                     #33+i*25
              12a4 fca7  bra  $12a7       5638  bra(pc()+3)                     #34+i*25
              12a5 0124  ld   [$24]       5639  ld([sysArgs+0])                 #35+i*25
              12a6 0125  ld   [$25]       5640  ld([sysArgs+1])                 #35+i*25(!)
              12a7 ce00  st   [y,x]       5641  st([Y,X])                       #36+i*25 Draw pixel
              12a8 0126  ld   [$26]       5642  ld([sysArgs+2])                 #37+i*25 Shift byte left
              12a9 8200  adda ac          5643  adda(AC)                        #38+i*25
              12aa c226  st   [$26]       5644  st([sysArgs+2])                 #39+i*25
              12ab 011d  ld   [$1d]       5645  ld([vTmp])                      #40+i*25 Loop counter
              12ac a006  suba $06         5646  suba(6)                         #41+i*25
              12ad ec94  bne  .sysVdb0    5647  bne('.sysVdb0')                 #42+i*25
              12ae 8008  adda $08         5648  adda(8)                         #43+i*25 Steps of 2
              12af 1403  ld   $03,y       5649  ld(hi('REENTER'),Y)             #119
              12b0 e0cb  jmp  y,$cb       5650  jmp(Y,'REENTER')                #120
              12b1 00c2  ld   $c2         5651  ld(-124/2)                      #121
                                          5652
                                          5653  # SYS_ResetWaveforms_v4_50 implementation
                                          5654  label('sys_ResetWaveforms')
sys_ResetWaveforms:
              12b2 0118  ld   [$18]       5655  ld([vAC+0])                     #18 X=4i
              12b3 8200  adda ac          5656  adda(AC)                        #19
              12b4 9200  adda ac,x        5657  adda(AC,X)                      #20
              12b5 0118  ld   [$18]       5658  ld([vAC+0])                     #21
              12b6 de00  st   [y,x++]     5659  st([Y,Xpp])                     #22 Sawtooth: T[4i+0] = i
              12b7 2020  anda $20         5660  anda(0x20)                      #23 Triangle: T[4i+1] = 2i if i<32 else 127-2i
              12b8 ecbb  bne  $12bb       5661  bne(pc()+3)                     #24
              12b9 0118  ld   [$18]       5662  ld([vAC+0])                     #25
              12ba fcbd  bra  $12bd       5663  bra(pc()+3)                     #26
              12bb 8118  adda [$18]       5664  adda([vAC+0])                   #26,27
              12bc 607f  xora $7f         5665  xora(127)                       #27
              12bd de00  st   [y,x++]     5666  st([Y,Xpp])                     #28
              12be 0118  ld   [$18]       5667  ld([vAC+0])                     #29 Pulse: T[4i+2] = 0 if i<32 else 63
              12bf 2020  anda $20         5668  anda(0x20)                      #30
              12c0 ecc3  bne  $12c3       5669  bne(pc()+3)                     #31
              12c1 fcc4  bra  $12c4       5670  bra(pc()+3)                     #32
              12c2 0000  ld   $00         5671  ld(0)                           #33
              12c3 003f  ld   $3f         5672  ld(63)                          #33(!)
              12c4 de00  st   [y,x++]     5673  st([Y,Xpp])                     #34
              12c5 0118  ld   [$18]       5674  ld([vAC+0])                     #35 Sawtooth: T[4i+3] = i
              12c6 ce00  st   [y,x]       5675  st([Y,X])                       #36
              12c7 8001  adda $01         5676  adda(1)                         #37 i += 1
              12c8 c218  st   [$18]       5677  st([vAC+0])                     #38
              12c9 6040  xora $40         5678  xora(64)                        #39 For 64 iterations
              12ca f0cd  beq  $12cd       5679  beq(pc()+3)                     #40
              12cb fcce  bra  $12ce       5680  bra(pc()+3)                     #41
              12cc 00fe  ld   $fe         5681  ld(-2)                          #42
              12cd 0000  ld   $00         5682  ld(0)                           #42(!)
              12ce 8116  adda [$16]       5683  adda([vPC])                     #43
              12cf c216  st   [$16]       5684  st([vPC])                       #44
              12d0 1403  ld   $03,y       5685  ld(hi('REENTER'),Y)             #45
              12d1 e0cb  jmp  y,$cb       5686  jmp(Y,'REENTER')                #46
              12d2 00e7  ld   $e7         5687  ld(-50/2)                       #47
                                          5688
                                          5689  # SYS_ShuffleNoise_v4_46 implementation
                                          5690  label('sys_ShuffleNoise')
sys_ShuffleNoise:
              12d3 1118  ld   [$18],x     5691  ld([vAC+0],X)                   #18 tmp = T[4j]
              12d4 0d00  ld   [y,x]       5692  ld([Y,X])                       #19
              12d5 c21d  st   [$1d]       5693  st([vTmp])                      #20
              12d6 1119  ld   [$19],x     5694  ld([vAC+1],X)                   #21 T[4j] = T[4i]
              12d7 0d00  ld   [y,x]       5695  ld([Y,X])                       #22
              12d8 1118  ld   [$18],x     5696  ld([vAC+0],X)                   #23
              12d9 ce00  st   [y,x]       5697  st([Y,X])                       #24
              12da 8200  adda ac          5698  adda(AC)                        #25 j += T[4i]
              12db 8200  adda ac          5699  adda(AC,)                       #26
              12dc 8118  adda [$18]       5700  adda([vAC+0])                   #27
              12dd c218  st   [$18]       5701  st([vAC+0])                     #28
              12de 1119  ld   [$19],x     5702  ld([vAC+1],X)                   #29 T[4i] = tmp
              12df 011d  ld   [$1d]       5703  ld([vTmp])                      #30
              12e0 ce00  st   [y,x]       5704  st([Y,X])                       #31
              12e1 0119  ld   [$19]       5705  ld([vAC+1])                     #32 i += 1
              12e2 8004  adda $04         5706  adda(4)                         #33
              12e3 c219  st   [$19]       5707  st([vAC+1])                     #34
              12e4 f0e7  beq  $12e7       5708  beq(pc()+3)                     #35 For 64 iterations
              12e5 fce8  bra  $12e8       5709  bra(pc()+3)                     #36
              12e6 00fe  ld   $fe         5710  ld(-2)                          #37
              12e7 0000  ld   $00         5711  ld(0)                           #37(!)
              12e8 8116  adda [$16]       5712  adda([vPC])                     #38
              12e9 c216  st   [$16]       5713  st([vPC])                       #39
              12ea 1403  ld   $03,y       5714  ld(hi('NEXTY'),Y)               #40
              12eb e000  jmp  y,$00       5715  jmp(Y,'NEXTY')                  #41
              12ec 00ea  ld   $ea         5716  ld(-44/2)                       #42
                                          5717
                                          5718
              12ed 0200  nop              5719  fillers(until=0xff)
              12ee 0200  nop
              12ef 0200  nop
              * 18 times
              12ff 0200  nop              5720  align(0x100, size=0x100)
                                          5721
                                          5722
                                          5723  #-----------------------------------------------------------------------
                                          5724  #       More SYS functions, (0x1300)
                                          5725  #-----------------------------------------------------------------------
                                          5726
                                          5727  # sys_Multiply_u8, res:u16 = x:u8 * y:u8
                                          5728  # sysArgs0,1=res, sysArgs2=x, sysArgs3=y, sysArgs4=count
                                          5729  label('SYS_Multiply_u8_vX_48')
SYS_Multiply_u8_vX_48:
              1300 0128  ld   [$28]       5730  ld([sysArgs+4])                 #15,
              1301 a001  suba $01         5731  suba(1)                         #16, count--
                                          5732  bge('.sys_multiply_u8_19')      #17,
              1302 f407  bge  .sys_multiply_u8_19
              1303 c228  st   [$28]       5733  st([sysArgs+4])                 #18,
              1304 1403  ld   $03,y       5734  ld(hi('REENTER'),Y)             #19,
              1305 e0cb  jmp  y,$cb       5735  jmp(Y,'REENTER')                #20,
              1306 00f4  ld   $f4         5736  ld(-24/2)                       #21,
                                          5737
                                          5738  label('.sys_multiply_u8_19')
.sys_multiply_u8_19:
              1307 0124  ld   [$24]       5739  ld([sysArgs+0])                 #19,
              1308 3080  anda $80,x       5740  anda(128,X)                     #20,
              1309 8124  adda [$24]       5741  adda([sysArgs+0])               #21,
              130a c224  st   [$24]       5742  st([sysArgs+0])                 #22,
              130b 0500  ld   [x]         5743  ld([X])                         #23,
              130c 8125  adda [$25]       5744  adda([sysArgs+1])               #24,
              130d 8125  adda [$25]       5745  adda([sysArgs+1])               #25,
              130e c225  st   [$25]       5746  st([sysArgs+1])                 #26, result <<1
              130f 0126  ld   [$26]       5747  ld([sysArgs+2])                 #27,
                                          5748  bmi('.sys_multiply_u8_30')      #28, if(x & 0x80)
              1310 e819  blt  .sys_multiply_u8_30
              1311 8126  adda [$26]       5749  adda([sysArgs+2])               #29,
              1312 c226  st   [$26]       5750  st([sysArgs+2])                 #30, x <<= 1
              1313 0116  ld   [$16]       5751  ld([vPC])                       #31,
              1314 a002  suba $02         5752  suba(2)                         #32,
              1315 c216  st   [$16]       5753  st([vPC])                       #33, restart
              1316 1403  ld   $03,y       5754  ld(hi('NEXTY'),Y)               #34,
              1317 e000  jmp  y,$00       5755  jmp(Y,'NEXTY')                  #35,
              1318 00ed  ld   $ed         5756  ld(-38/2)                       #36,
                                          5757
                                          5758  label('.sys_multiply_u8_30')
.sys_multiply_u8_30:
              1319 c226  st   [$26]       5759  st([sysArgs+2])                 #30, x <<= 1
              131a 0124  ld   [$24]       5760  ld([sysArgs+0])                 #31,
              131b 8127  adda [$27]       5761  adda([sysArgs+3])               #32,
              131c c224  st   [$24]       5762  st([sysArgs+0])                 #33, res.lo += y
                                          5763  bmi('.sys_multiply_u8_36')      #34, check carry
              131d e82a  blt  .sys_multiply_u8_36
              131e a127  suba [$27]       5764  suba([sysArgs+3])               #35, initial value of res.lo
              131f 4127  ora  [$27]       5765  ora([sysArgs+3])                #36, carry in bit 7
              1320 3080  anda $80,x       5766  anda(0x80,X)                    #37, move carry to bit 0
              1321 0500  ld   [x]         5767  ld([X])                         #38,
              1322 8125  adda [$25]       5768  adda([sysArgs+1])               #39,
              1323 c225  st   [$25]       5769  st([sysArgs+1])                 #40, res.hi += carry
              1324 0116  ld   [$16]       5770  ld([vPC])                       #41,
              1325 a002  suba $02         5771  suba(2)                         #42,
              1326 c216  st   [$16]       5772  st([vPC])                       #43, restart
              1327 1403  ld   $03,y       5773  ld(hi('NEXTY'),Y)               #44,
              1328 e000  jmp  y,$00       5774  jmp(Y,'NEXTY')                  #45,
              1329 00e8  ld   $e8         5775  ld(-48/2)                       #46,
                                          5776
                                          5777  label('.sys_multiply_u8_36')
.sys_multiply_u8_36:
              132a 2127  anda [$27]       5778  anda([sysArgs+3])               #36, carry in bit 7
              132b 3080  anda $80,x       5779  anda(0x80,X)                    #37, move carry to bit 0
              132c 0500  ld   [x]         5780  ld([X])                         #38,
              132d 8125  adda [$25]       5781  adda([sysArgs+1])               #39,
              132e c225  st   [$25]       5782  st([sysArgs+1])                 #40, res.hi += carry
              132f 0116  ld   [$16]       5783  ld([vPC])                       #41,
              1330 a002  suba $02         5784  suba(2)                         #42,
              1331 c216  st   [$16]       5785  st([vPC])                       #43, restart
              1332 1403  ld   $03,y       5786  ld(hi('NEXTY'),Y)               #44,
              1333 e000  jmp  y,$00       5787  jmp(Y,'NEXTY')                  #45,
              1334 00e8  ld   $e8         5788  ld(-48/2)                       #46,
                                          5789
                                          5790  # leave some soom for updates
              1335 0200  nop              5791  fillers(until=0x40)
              1336 0200  nop
              1337 0200  nop
              * 11 times
                                          5792
                                          5793
                                          5794  # sys_OffsetVTableY, sysArgs0 = scanline:8, sysArgs1 = scanCount:8, sysArgs2,3 = videoTable:16
                                          5795  label('SYS_OffsetVTableY_vX_36')
SYS_OffsetVTableY_vX_36:
              1340 0124  ld   [$24]       5796  ld([sysArgs+0])                 #15, scanline
              1341 1126  ld   [$26],x     5797  ld([sysArgs+2],X)               #16,
              1342 1527  ld   [$27],y     5798  ld([sysArgs+3],Y)               #17,
              1343 ce00  st   [y,x]       5799  st([Y,X])                       #18, [videoTable] = scanline
              1344 8001  adda $01         5800  adda(1)                         #19,
              1345 c224  st   [$24]       5801  st([sysArgs+0])                 #20, scanline++
              1346 0126  ld   [$26]       5802  ld([sysArgs+2])                 #21,
              1347 8002  adda $02         5803  adda(2)                         #22,
              1348 c226  st   [$26]       5804  st([sysArgs+2])                 #23, videoTable += 2
              1349 0125  ld   [$25]       5805  ld([sysArgs+1])                 #24,
              134a a001  suba $01         5806  suba(1)                         #25,
                                          5807  beq('.sys_offsetvty_28')        #26,
              134b f053  beq  .sys_offsetvty_28
              134c c225  st   [$25]       5808  st([sysArgs+1])                 #27, scanCount--
              134d 0116  ld   [$16]       5809  ld([vPC])                       #28,
              134e a002  suba $02         5810  suba(2)                         #29,
              134f c216  st   [$16]       5811  st([vPC])                       #30, restart
              1350 1403  ld   $03,y       5812  ld(hi('REENTER'),Y)             #31,
              1351 e0cb  jmp  y,$cb       5813  jmp(Y,'REENTER')                #32,
              1352 00ee  ld   $ee         5814  ld(-36/2)                       #33,
                                          5815  label('.sys_offsetvty_28')
.sys_offsetvty_28:
              1353 1403  ld   $03,y       5816  ld(hi('NEXTY'),Y)               #28,
              1354 e000  jmp  y,$00       5817  jmp(Y,'NEXTY')                  #29,
              1355 00f0  ld   $f0         5818  ld(-32/2)                       #30,
                                          5819
                                          5820  # leave some soom for updates
              1356 0200  nop              5821  fillers(until=0x60)
              1357 0200  nop
              1358 0200  nop
              * 10 times
                                          5822
                                          5823
                                          5824  # sys_FillByteSeq, sysArgs0,1=dst, sysArg2=start, sysArg3=step, sysArg4=count
                                          5825  label('SYS_FillByteSeq_vX_36')
SYS_FillByteSeq_vX_36:
              1360 1525  ld   [$25],y     5826  ld([sysArgs+1],Y)               #15 dst pointer
              1361 1124  ld   [$24],x     5827  ld([sysArgs+0],X)               #16,
              1362 0124  ld   [$24]       5828  ld([sysArgs+0])                 #17,
              1363 8001  adda $01         5829  adda(1)                         #18,
              1364 c224  st   [$24]       5830  st([sysArgs+0])                 #19, dst++
              1365 0126  ld   [$26]       5831  ld([sysArgs+2])                 #20,
              1366 ce00  st   [y,x]       5832  st([Y,X])                       #21, start
              1367 8127  adda [$27]       5833  adda([sysArgs+3])               #22,
              1368 c226  st   [$26]       5834  st([sysArgs+2])                 #23, start += step
              1369 0128  ld   [$28]       5835  ld([sysArgs+4])                 #24,
              136a a001  suba $01         5836  suba(1)                         #25,
                                          5837  beq('.sys_fillbyteseq_28')      #26,
              136b f073  beq  .sys_fillbyteseq_28
              136c c228  st   [$28]       5838  st([sysArgs+4])                 #27,
              136d 0116  ld   [$16]       5839  ld([vPC])                       #28,
              136e a002  suba $02         5840  suba(2)                         #29,
              136f c216  st   [$16]       5841  st([vPC])                       #30, restart
              1370 1403  ld   $03,y       5842  ld(hi('REENTER'),Y)             #31,
              1371 e0cb  jmp  y,$cb       5843  jmp(Y,'REENTER')                #32,
              1372 00ee  ld   $ee         5844  ld(-36/2)                       #33,
                                          5845  label('.sys_fillbyteseq_28')
.sys_fillbyteseq_28:
              1373 1403  ld   $03,y       5846  ld(hi('NEXTY'),Y)               #28,
              1374 e000  jmp  y,$00       5847  jmp(Y,'NEXTY')                  #29,
              1375 00f0  ld   $f0         5848  ld(-32/2)                       #30,
                                          5849
                                          5850  # leave some soom for updates
              1376 0200  nop              5851  fillers(until=0x80)
              1377 0200  nop
              1378 0200  nop
              * 10 times
                                          5852
                                          5853
                                          5854  # sys_AddInt8Array, sysArgs0,1=src, sysArgs2,3=dst, sysArgs4=index, sysArgs5=count, dst(i) += src(i)
                                          5855  label('SYS_AddInt8Array_vX_40')
SYS_AddInt8Array_vX_40:
              1380 0124  ld   [$24]       5856  ld([sysArgs+0])                 #15,
              1381 9128  adda [$28],x     5857  adda([sysArgs+4],X)             #16,
              1382 1525  ld   [$25],y     5858  ld([sysArgs+1],Y)               #17,
              1383 0d00  ld   [y,x]       5859  ld([Y,X])                       #18,
              1384 c21d  st   [$1d]       5860  st([vTmp])                      #19
              1385 0126  ld   [$26]       5861  ld([sysArgs+2])                 #20,
              1386 9128  adda [$28],x     5862  adda([sysArgs+4],X)             #21,
              1387 1527  ld   [$27],y     5863  ld([sysArgs+3],Y)               #22,
              1388 011d  ld   [$1d]       5864  ld([vTmp])                      #23
              1389 8d00  adda [y,x]       5865  adda([Y,X])                     #24,
              138a ce00  st   [y,x]       5866  st([Y,X])                       #25,
              138b 0129  ld   [$29]       5867  ld([sysArgs+5])                 #26,
              138c a001  suba $01         5868  suba(1)                         #27,
                                          5869  beq('.sys_addint8Array_30')     #28,
              138d f098  beq  .sys_addint8Array_30
              138e c229  st   [$29]       5870  st([sysArgs+5])                 #29,
              138f 0128  ld   [$28]       5871  ld([sysArgs+4])                 #30,
              1390 8001  adda $01         5872  adda(1)                         #31,
              1391 c228  st   [$28]       5873  st([sysArgs+4])                 #32, index++
              1392 0116  ld   [$16]       5874  ld([vPC])                       #33,
              1393 a002  suba $02         5875  suba(2)                         #34,
              1394 c216  st   [$16]       5876  st([vPC])                       #35,
              1395 1403  ld   $03,y       5877  ld(hi('NEXTY'),Y)               #36,
              1396 e000  jmp  y,$00       5878  jmp(Y,'NEXTY')                  #37,
              1397 00ec  ld   $ec         5879  ld(-40/2)                       #38,
                                          5880  label('.sys_addint8Array_30')
.sys_addint8Array_30:
              1398 1403  ld   $03,y       5881  ld(hi('NEXTY'),Y)               #30,
              1399 e000  jmp  y,$00       5882  jmp(Y,'NEXTY')                  #31,
              139a 00ef  ld   $ef         5883  ld(-34/2)                       #32,
                                          5884
                                          5885  # leave some soom for updates
              139b 0200  nop              5886  fillers(until=0xa0)
              139c 0200  nop
              139d 0200  nop
              * 5 times
                                          5887
                                          5888
                                          5889  # sys_ParityFill, sysArgs0,1=borderColour:fillColour, sysArgs2,3=X:Y start address
                                          5890  #                 sysArgs4=countXY, sysArgs6=fill toggle, sysArgs7=replace colour
                                          5891  label('SYS_ParityFill_vX_44')
SYS_ParityFill_vX_44:
              13a0 1527  ld   [$27],y     5892  ld([sysArgs+3],Y)               #15,
              13a1 1126  ld   [$26],x     5893  ld([sysArgs+2],X)               #16,
              13a2 0126  ld   [$26]       5894  ld([sysArgs+2])                 #17,
              13a3 8001  adda $01         5895  adda(1)                         #18,
              13a4 c226  st   [$26]       5896  st([sysArgs+2])                 #19, x++
              13a5 0128  ld   [$28]       5897  ld([sysArgs+4])                 #20,
              13a6 a001  suba $01         5898  suba(1)                         #21, countX--
                                          5899  bge('.sys_parityfill_24')       #22,
              13a7 f4be  bge  .sys_parityfill_24
              13a8 c228  st   [$28]       5900  st([sysArgs+4])                 #23,
              13a9 0127  ld   [$27]       5901  ld([sysArgs+3])                 #24,
              13aa 8001  adda $01         5902  adda(1)                         #25,
              13ab c227  st   [$27]       5903  st([sysArgs+3])                 #26, y++
              13ac 0129  ld   [$29]       5904  ld([sysArgs+5])                 #27,
              13ad a001  suba $01         5905  suba(1)                         #28, countY--
              13ae c229  st   [$29]       5906  st([sysArgs+5])                 #29,
                                          5907  bne('.sys_parityfill_32')       #30,
              13af ecb3  bne  .sys_parityfill_32
              13b0 1403  ld   $03,y       5908  ld(hi('REENTER'),Y)             #31,
              13b1 e0cb  jmp  y,$cb       5909  jmp(Y,'REENTER')                #32,
              13b2 00ee  ld   $ee         5910  ld(-36/2)                       #33,
                                          5911  label('.sys_parityfill_32')
.sys_parityfill_32:
              13b3 0182  ld   [$82]       5912  ld([0x82])                      #32,
              13b4 c226  st   [$26]       5913  st([sysArgs+2])                 #33, restore x
              13b5 0183  ld   [$83]       5914  ld([0x83])                      #34,
              13b6 c228  st   [$28]       5915  st([sysArgs+4])                 #35, restore countX
              13b7 0184  ld   [$84]       5916  ld([0x84])                      #36,
              13b8 c22a  st   [$2a]       5917  st([sysArgs+6])                 #37, restore fill toggle
              13b9 0116  ld   [$16]       5918  ld([vPC])                       #38,
              13ba a002  suba $02         5919  suba(2)                         #39,
              13bb c216  st   [$16]       5920  st([vPC])                       #40, restart
              13bc e000  jmp  y,$00       5921  jmp(Y,'NEXTY')                  #41,
              13bd 00ea  ld   $ea         5922  ld(-44/2)                       #42,
                                          5923
                                          5924  label('.sys_parityfill_24')
.sys_parityfill_24:
              13be 012a  ld   [$2a]       5925  ld([sysArgs+6])                 #24, check fill toggle
                                          5926  bne('.sys_parityfill_27')       #25,
              13bf ecc9  bne  .sys_parityfill_27
              13c0 0d00  ld   [y,x]       5927  ld([Y,X])                       #26, get pixel
              13c1 6124  xora [$24]       5928  xora([sysArgs+0])               #27, check border colour
                                          5929  beq('.sys_parityfill_30')       #28,
              13c2 f0d8  beq  .sys_parityfill_30
              13c3 0116  ld   [$16]       5930  ld([vPC])                       #29,
              13c4 a002  suba $02         5931  suba(2)                         #30,
              13c5 c216  st   [$16]       5932  st([vPC])                       #31, restart
              13c6 1403  ld   $03,y       5933  ld(hi('NEXTY'),Y)               #32,
              13c7 e000  jmp  y,$00       5934  jmp(Y,'NEXTY')                  #33,
              13c8 00ee  ld   $ee         5935  ld(-36/2)                       #34,
                                          5936
                                          5937  label('.sys_parityfill_27')
.sys_parityfill_27:
              13c9 6124  xora [$24]       5938  xora([sysArgs+0])               #27, check border colour
                                          5939  beq('.sys_parityfill_30')       #28,
              13ca f0d8  beq  .sys_parityfill_30
              13cb 0d00  ld   [y,x]       5940  ld([Y,X])                       #29, get pixel
              13cc 612b  xora [$2b]       5941  xora([sysArgs+7])               #30, check replace colour
              13cd ecd0  bne  $13d0       5942  bne(pc()+3)                     #31, ignore replace colour
              13ce fcd1  bra  $13d1       5943  bra(pc()+3)                     #32,
              13cf 0125  ld   [$25]       5944  ld([sysArgs+1])                 #33, fill colour
              13d0 0d00  ld   [y,x]       5945  ld([Y,X])                       #33! get pixel
              13d1 ce00  st   [y,x]       5946  st([Y,X])                       #34, set pixel
              13d2 0116  ld   [$16]       5947  ld([vPC])                       #35,
              13d3 a002  suba $02         5948  suba(2)                         #36,
              13d4 c216  st   [$16]       5949  st([vPC])                       #37, restart
              13d5 1403  ld   $03,y       5950  ld(hi('NEXTY'),Y)               #38,
              13d6 e000  jmp  y,$00       5951  jmp(Y,'NEXTY')                  #39,
              13d7 00eb  ld   $eb         5952  ld(-42/2)                       #40,
                                          5953
                                          5954  label('.sys_parityfill_30')
.sys_parityfill_30:
              13d8 012a  ld   [$2a]       5955  ld([sysArgs+6])                 #30,
              13d9 6001  xora $01         5956  xora(0x01)                      #31,
              13da c22a  st   [$2a]       5957  st([sysArgs+6])                 #32, toggle fill
              13db 0116  ld   [$16]       5958  ld([vPC])                       #33,
              13dc a002  suba $02         5959  suba(2)                         #34,
              13dd c216  st   [$16]       5960  st([vPC])                       #35, restart
              13de 1403  ld   $03,y       5961  ld(hi('NEXTY'),Y)               #36,
              13df e000  jmp  y,$00       5962  jmp(Y,'NEXTY')                  #37,
              13e0 00ec  ld   $ec         5963  ld(-40/2)                       #38,
                                          5964
                                          5965
              13e1 0200  nop              5966  fillers(until=0xff)
              13e2 0200  nop
              13e3 0200  nop
              * 30 times
              13ff 0200  nop              5967  align(0x100, size=0x100)
                                          5968
                                          5969  #-----------------------------------------------------------------------
                                          5970  #       More vCPU instruction implementations, (0x1400)
                                          5971  #-----------------------------------------------------------------------
                                          5972
                                          5973  # JGT implementation
                                          5974  label('jgt#13')
jgt#13:       1400 0119  ld   [$19]       5975  ld([vAC+1])                     #13
              1401 e80a  blt  .jgt#16     5976  blt('.jgt#16')                  #14 if vAC.hi < 0
              1402 4118  ora  [$18]       5977  ora([vAC])                      #15
              1403 ec10  bne  .jgt#18     5978  bne('.jgt#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              1404 0116  ld   [$16]       5979  ld([vPC])                       #17
              1405 8001  adda $01         5980  adda(1)                         #18
              1406 c216  st   [$16]       5981  st([vPC])                       #19
              1407 1403  ld   $03,y       5982  ld(hi('NEXTY'),Y)               #20
              1408 e000  jmp  y,$00       5983  jmp(Y,'NEXTY')                  #21
              1409 00f4  ld   $f4         5984  ld(-24/2)                       #22
                                          5985  label('.jgt#16')
.jgt#16:      140a 0116  ld   [$16]       5986  ld([vPC])                       #16
              140b 8001  adda $01         5987  adda(1)                         #17
              140c c216  st   [$16]       5988  st([vPC])                       #18
              140d 1403  ld   $03,y       5989  ld(hi('REENTER'),Y)             #19
              140e e0cb  jmp  y,$cb       5990  jmp(Y,'REENTER')                #20
              140f 00f4  ld   $f4         5991  ld(-24/2)                       #21
                                          5992  label('.jgt#18')
.jgt#18:      1410 1517  ld   [$17],y     5993  ld([vPC+1],Y)                   #18 vPC.hi
              1411 0d00  ld   [y,x]       5994  ld([Y,X])                       #19 address of branch destination
              1412 c216  st   [$16]       5995  st([vPC])                       #20
              1413 de00  st   [y,x++]     5996  st([Y,Xpp])                     #21
              1414 0d00  ld   [y,x]       5997  ld([Y,X])                       #22 hi address of jump destination
              1415 c217  st   [$17]       5998  st([vPC+1])                     #23
              1416 1403  ld   $03,y       5999  ld(hi('NEXTY'),Y)               #24
              1417 e000  jmp  y,$00       6000  jmp(Y,'NEXTY')                  #25
              1418 00f2  ld   $f2         6001  ld(-28/2)                       #26
                                          6002
                                          6003  # JLE implementation
                                          6004  label('jle#13')
jle#13:       1419 0119  ld   [$19]       6005  ld([vAC+1])                     #13
              141a e827  blt  .jle#16     6006  blt('.jle#16')                  #14 if vAC.hi < 0
              141b 4118  ora  [$18]       6007  ora([vAC])                      #15
              141c ec30  bne  .jle#18     6008  bne('.jle#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              141d 0116  ld   [$16]       6009  ld([vPC])                       #17
              141e 1517  ld   [$17],y     6010  ld([vPC+1],Y)                   #18 vPC.hi
              141f 0d00  ld   [y,x]       6011  ld([Y,X])                       #19 address of branch destination
              1420 c216  st   [$16]       6012  st([vPC])                       #20
              1421 de00  st   [y,x++]     6013  st([Y,Xpp])                     #21
              1422 0d00  ld   [y,x]       6014  ld([Y,X])                       #22 hi address of jump destination
              1423 c217  st   [$17]       6015  st([vPC+1])                     #23
              1424 1403  ld   $03,y       6016  ld(hi('NEXTY'),Y)               #24
              1425 e000  jmp  y,$00       6017  jmp(Y,'NEXTY')                  #25
              1426 00f2  ld   $f2         6018  ld(-28/2)                       #26
                                          6019  label('.jle#16')
.jle#16:      1427 1517  ld   [$17],y     6020  ld([vPC+1],Y)                   #16 vPC.hi
              1428 0d00  ld   [y,x]       6021  ld([Y,X])                       #17 address of branch destination
              1429 c216  st   [$16]       6022  st([vPC])                       #18
              142a de00  st   [y,x++]     6023  st([Y,Xpp])                     #19
              142b 0d00  ld   [y,x]       6024  ld([Y,X])                       #20 hi address of jump destination
              142c c217  st   [$17]       6025  st([vPC+1])                     #21
              142d 1403  ld   $03,y       6026  ld(hi('NEXTY'),Y)               #22
              142e e000  jmp  y,$00       6027  jmp(Y,'NEXTY')                  #23
              142f 00f3  ld   $f3         6028  ld(-26/2)                       #24
                                          6029  label('.jle#18')
.jle#18:      1430 8001  adda $01         6030  adda(1)                         #18
              1431 c216  st   [$16]       6031  st([vPC])                       #19
              1432 1403  ld   $03,y       6032  ld(hi('NEXTY'),Y)               #20
              1433 e000  jmp  y,$00       6033  jmp(Y,'NEXTY')                  #21
              1434 00f4  ld   $f4         6034  ld(-24/2)                       #22
                                          6035
                                          6036  # JGE implementation
                                          6037  label('jge#13')
jge#13:       1435 0119  ld   [$19]       6038  ld([vAC+1])                     #13
              1436 e841  blt  .jge#16     6039  blt('.jge#16')                  #14 if vAC.hi < 0
              1437 0116  ld   [$16]       6040  ld([vPC])                       #15
              1438 1517  ld   [$17],y     6041  ld([vPC+1],Y)                   #16 vPC.hi
              1439 0d00  ld   [y,x]       6042  ld([Y,X])                       #17 address of branch destination
              143a c216  st   [$16]       6043  st([vPC])                       #18
              143b de00  st   [y,x++]     6044  st([Y,Xpp])                     #19
              143c 0d00  ld   [y,x]       6045  ld([Y,X])                       #20 hi address of jump destination
              143d c217  st   [$17]       6046  st([vPC+1])                     #21
              143e 1403  ld   $03,y       6047  ld(hi('NEXTY'),Y)               #22
              143f e000  jmp  y,$00       6048  jmp(Y,'NEXTY')                  #23
              1440 00f3  ld   $f3         6049  ld(-26/2)                       #24
                                          6050  label('.jge#16')
.jge#16:      1441 8001  adda $01         6051  adda(1)                         #16
              1442 c216  st   [$16]       6052  st([vPC])                       #17
              1443 1403  ld   $03,y       6053  ld(hi('NEXTY'),Y)               #18
              1444 e000  jmp  y,$00       6054  jmp(Y,'NEXTY')                  #19
              1445 00f5  ld   $f5         6055  ld(-22/2)                       #20
                                          6056
                                          6057  # PEEKA+ implementation
                                          6058  label('peeka+#13')
peeka+#13:    1446 c21d  st   [$1d]       6059  st([vTmp])                      #13
              1447 1519  ld   [$19],y     6060  ld([vAC+1],Y)                   #14
              1448 0118  ld   [$18]       6061  ld([vAC])                       #15
              1449 1200  ld   ac,x        6062  ld(AC,X)                        #16
              144a 8001  adda $01         6063  adda(1)                         #17
              144b c218  st   [$18]       6064  st([vAC])                       #18
              144c f053  beq  .peeka+#21  6065  beq('.peeka+#21')               #19 if low byte is 0x00
              144d 0d00  ld   [y,x]       6066  ld([Y,X])                       #20 peek [vAC]
              144e 111d  ld   [$1d],x     6067  ld([vTmp],X)                    #21 dst var
              144f c600  st   [x]         6068  st([X])                         #22 dst = peek [vAC]
              1450 1403  ld   $03,y       6069  ld(hi('REENTER'),Y)             #23
              1451 e0cb  jmp  y,$cb       6070  jmp(Y,'REENTER')                #24
              1452 00f2  ld   $f2         6071  ld(-28/2)                       #25
                                          6072  label('.peeka+#21')
.peeka+#21:   1453 111d  ld   [$1d],x     6073  ld([vTmp],X)                    #21 dst var
              1454 c600  st   [x]         6074  st([X])                         #22 dst = peek [vAC]
              1455 0119  ld   [$19]       6075  ld([vAC+1])                     #23
              1456 8001  adda $01         6076  adda(1)                         #24
              1457 c219  st   [$19]       6077  st([vAC+1])                     #25
              1458 1403  ld   $03,y       6078  ld(hi('NEXTY'),Y)               #26
              1459 e000  jmp  y,$00       6079  jmp(Y,'NEXTY')                  #27
              145a 00f1  ld   $f1         6080  ld(-30/2)                       #28
                                          6081
                                          6082  # ADDVW implementation
                                          6083  label('addvw#13')
addvw#13:     145b 1517  ld   [$17],y     6084  ld([vPC+1],Y)                   #13 vPC.hi
              145c c22a  st   [$2a]       6085  st([sysArgs+6])                 #14 src var addr
              145d de00  st   [y,x++]     6086  st([Y,Xpp])                     #15 X++
              145e 00f4  ld   $f4         6087  ld(min(0,maxTicks-54/2))        #16
              145f 8115  adda [$15]       6088  adda([vTicks])                  #17
              1460 e89e  blt  .addvw#20   6089  blt('.addvw#20')                #18 not enough time left, so retry
              1461 0d00  ld   [y,x]       6090  ld([Y,X])                       #19
              1462 c22b  st   [$2b]       6091  st([sysArgs+7])                 #20 dst var addr
              1463 1400  ld   $00,y       6092  ld(0,Y)                         #21
              1464 112a  ld   [$2a],x     6093  ld([sysArgs+6],X)               #22
              1465 0500  ld   [x]         6094  ld([X])                         #23 src low value
              1466 c218  st   [$18]       6095  st([vAC])                       #24
              1467 de00  st   [y,x++]     6096  st([Y,Xpp])                     #25 X++
              1468 0500  ld   [x]         6097  ld([X])                         #26 src hi value
              1469 c219  st   [$19]       6098  st([vAC+1])                     #27
              146a 112b  ld   [$2b],x     6099  ld([sysArgs+7],X)               #28
              146b 0118  ld   [$18]       6100  ld([vAC])                       #29 Low byte
              146c c21d  st   [$1d]       6101  st([vTmp])                      #30
              146d 8500  adda [x]         6102  adda([X])                       #31
              146e c218  st   [$18]       6103  st([vAC])                       #32 vAC.lo = low result
              146f e881  blt  .addvw#35   6104  bmi('.addvw#35')                #33 Now figure out if there was a carry
              1470 0500  ld   [x]         6105  ld([X])                         #34
              1471 de00  st   [y,x++]     6106  st([Y,Xpp])                     #35
              1472 411d  ora  [$1d]       6107  ora([vTmp])                     #36
              1473 e891  blt  .addvw#39   6108  bmi('.addvw#39')                #37 If Carry == 1
              1474 0500  ld   [x]         6109  ld([X])                         #38
              1475 8119  adda [$19]       6110  adda([vAC+1])                   #39
              1476 c219  st   [$19]       6111  st([vAC+1])                     #40 vAC.hi = high result
              1477 c600  st   [x]         6112  st([X])                         #41 dst.hi = high result
              1478 112b  ld   [$2b],x     6113  ld([sysArgs+7],X)               #42
              1479 0118  ld   [$18]       6114  ld([vAC])                       #43
              147a c600  st   [x]         6115  st([X])                         #44 dst.lo = low result
              147b 0116  ld   [$16]       6116  ld([vPC])                       #45
              147c 8001  adda $01         6117  adda(1)                         #46
              147d c216  st   [$16]       6118  st([vPC])                       #47
              147e 1403  ld   $03,y       6119  ld(hi('NEXTY'),Y)               #48
              147f e000  jmp  y,$00       6120  jmp(Y,'NEXTY')                  #49
              1480 00e6  ld   $e6         6121  ld(-52/2)                       #50
                                          6122
                                          6123  label('.addvw#35')
.addvw#35:    1481 de00  st   [y,x++]     6124  st([Y,Xpp])                     #35
              1482 211d  anda [$1d]       6125  anda([vTmp])                    #36
              1483 e891  blt  .addvw#39   6126  bmi('.addvw#39')                #37 If Carry == 1
              1484 0500  ld   [x]         6127  ld([X])                         #38
              1485 8119  adda [$19]       6128  adda([vAC+1])                   #39
              1486 c219  st   [$19]       6129  st([vAC+1])                     #40 vAC.hi = high result
              1487 c600  st   [x]         6130  st([X])                         #41 dst.hi = high result
              1488 112b  ld   [$2b],x     6131  ld([sysArgs+7],X)               #42
              1489 0118  ld   [$18]       6132  ld([vAC])                       #43
              148a c600  st   [x]         6133  st([X])                         #44 dst.lo = low result
              148b 0116  ld   [$16]       6134  ld([vPC])                       #45
              148c 8001  adda $01         6135  adda(1)                         #46
              148d c216  st   [$16]       6136  st([vPC])                       #47
              148e 1403  ld   $03,y       6137  ld(hi('NEXTY'),Y)               #48
              148f e000  jmp  y,$00       6138  jmp(Y,'NEXTY')                  #49
              1490 00e6  ld   $e6         6139  ld(-52/2)                       #50
                                          6140
                                          6141  label('.addvw#39')
.addvw#39:    1491 8001  adda $01         6142  adda(1)                         #39
              1492 8119  adda [$19]       6143  adda([vAC+1])                   #40
              1493 c219  st   [$19]       6144  st([vAC+1])                     #41 vAC.hi = high result
              1494 c600  st   [x]         6145  st([X])                         #42 dst.hi = high result
              1495 112b  ld   [$2b],x     6146  ld([sysArgs+7],X)               #43
              1496 0118  ld   [$18]       6147  ld([vAC])                       #44
              1497 c600  st   [x]         6148  st([X])                         #45 dst.lo = low result
              1498 0116  ld   [$16]       6149  ld([vPC])                       #46
              1499 8001  adda $01         6150  adda(1)                         #47
              149a c216  st   [$16]       6151  st([vPC])                       #48
              149b 1403  ld   $03,y       6152  ld(hi('REENTER'),Y)             #49
              149c e0cb  jmp  y,$cb       6153  jmp(Y,'REENTER')                #50
              149d 00e5  ld   $e5         6154  ld(-54/2)                       #51
                                          6155
                                          6156  label('.addvw#20')
.addvw#20:    149e 0116  ld   [$16]       6157  ld([vPC])                       #20 retry instruction
              149f a002  suba $02         6158  suba(2)                         #21
              14a0 c216  st   [$16]       6159  st([vPC])                       #22
              14a1 1403  ld   $03,y       6160  ld(hi('REENTER'),Y)             #23
              14a2 e0cb  jmp  y,$cb       6161  jmp(Y,'REENTER')                #24
              14a3 00f2  ld   $f2         6162  ld(-28/2)                       #25
                                          6163
                                          6164
                                          6165  # SUBVW implementation
                                          6166  label('subvw#13')
subvw#13:     14a4 1517  ld   [$17],y     6167  ld([vPC+1],Y)                   #13 vPC.hi
              14a5 c22a  st   [$2a]       6168  st([sysArgs+6])                 #14 src var addr
              14a6 de00  st   [y,x++]     6169  st([Y,Xpp])                     #15 X++
              14a7 8001  adda $01         6170  adda(1)                         #16
              14a8 c21d  st   [$1d]       6171  st([vTmp])                      #17 src var high addr
              14a9 00f4  ld   $f4         6172  ld(min(0,maxTicks-54/2))        #18
              14aa 8115  adda [$15]       6173  adda([vTicks])                  #19
              14ab e8df  blt  .subvw#22   6174  blt('.subvw#22')                #20 not enough time left, so retry
              14ac 0d00  ld   [y,x]       6175  ld([Y,X])                       #21
              14ad c22b  st   [$2b]       6176  st([sysArgs+7])                 #22 dst var addr
              14ae 1400  ld   $00,y       6177  ld(0,Y)                         #23
              14af 112b  ld   [$2b],x     6178  ld([sysArgs+7],X)               #24
              14b0 0500  ld   [x]         6179  ld([X])                         #25 dst low value
              14b1 c218  st   [$18]       6180  st([vAC])                       #26
              14b2 de00  st   [y,x++]     6181  st([Y,Xpp])                     #27 X++
              14b3 0500  ld   [x]         6182  ld([X])                         #28 dst hi value
              14b4 c219  st   [$19]       6183  st([vAC+1])                     #29
              14b5 112a  ld   [$2a],x     6184  ld([sysArgs+6],X)               #30
              14b6 0118  ld   [$18]       6185  ld([vAC])                       #31 Low byte
              14b7 e8cc  blt  .subvw#34   6186  bmi('.subvw#34')                #32
              14b8 a500  suba [x]         6187  suba([X])                       #33
              14b9 c218  st   [$18]       6188  st([vAC])                       #34 Store low result
              14ba 4500  ora  [x]         6189  ora([X])                        #35 Carry in bit 7
              14bb 3080  anda $80,x       6190  anda(0x80,X)                    #36 Move carry to bit 0
              14bc 0119  ld   [$19]       6191  ld([vAC+1])                     #37
              14bd a500  suba [x]         6192  suba([X])                       #38
              14be 111d  ld   [$1d],x     6193  ld([vTmp],X)                    #39
              14bf a500  suba [x]         6194  suba([X])                       #40
              14c0 c219  st   [$19]       6195  st([vAC+1])                     #41
              14c1 112b  ld   [$2b],x     6196  ld([sysArgs+7],X)               #42
              14c2 0118  ld   [$18]       6197  ld([vAC])                       #43
              14c3 de00  st   [y,x++]     6198  st([Y,Xpp])                     #44
              14c4 0119  ld   [$19]       6199  ld([vAC+1])                     #45
              14c5 c600  st   [x]         6200  st([X])                         #46
              14c6 0116  ld   [$16]       6201  ld([vPC])                       #47
              14c7 8001  adda $01         6202  adda(1)                         #48
              14c8 c216  st   [$16]       6203  st([vPC])                       #49
              14c9 1403  ld   $03,y       6204  ld(hi('NEXTY'),Y)               #50
              14ca e000  jmp  y,$00       6205  jmp(Y,'NEXTY')                  #51
              14cb 00e5  ld   $e5         6206  ld(-54/2)                       #52
                                          6207
                                          6208  label('.subvw#34')
.subvw#34:    14cc c218  st   [$18]       6209  st([vAC])                       #34 Store low result
              14cd 2500  anda [x]         6210  anda([X])                       #35 Carry in bit 7
              14ce 3080  anda $80,x       6211  anda(0x80,X)                    #36 Move carry to bit 0
              14cf 0119  ld   [$19]       6212  ld([vAC+1])                     #37
              14d0 a500  suba [x]         6213  suba([X])                       #38
              14d1 111d  ld   [$1d],x     6214  ld([vTmp],X)                    #39
              14d2 a500  suba [x]         6215  suba([X])                       #40
              14d3 c219  st   [$19]       6216  st([vAC+1])                     #41
              14d4 112b  ld   [$2b],x     6217  ld([sysArgs+7],X)               #42
              14d5 0118  ld   [$18]       6218  ld([vAC])                       #43
              14d6 de00  st   [y,x++]     6219  st([Y,Xpp])                     #44
              14d7 0119  ld   [$19]       6220  ld([vAC+1])                     #45
              14d8 c600  st   [x]         6221  st([X])                         #46
              14d9 0116  ld   [$16]       6222  ld([vPC])                       #47
              14da 8001  adda $01         6223  adda(1)                         #48
              14db c216  st   [$16]       6224  st([vPC])                       #49
              14dc 1403  ld   $03,y       6225  ld(hi('NEXTY'),Y)               #50
              14dd e000  jmp  y,$00       6226  jmp(Y,'NEXTY')                  #51
              14de 00e5  ld   $e5         6227  ld(-54/2)                       #52
                                          6228
                                          6229  label('.subvw#22')
.subvw#22:    14df 0116  ld   [$16]       6230  ld([vPC])                       #22 retry instruction
              14e0 a002  suba $02         6231  suba(2)                         #23
              14e1 c216  st   [$16]       6232  st([vPC])                       #24
              14e2 1403  ld   $03,y       6233  ld(hi('REENTER'),Y)             #25
              14e3 e0cb  jmp  y,$cb       6234  jmp(Y,'REENTER')                #26
              14e4 00f1  ld   $f1         6235  ld(-30/2)                       #27
                                          6236
                                          6237
                                          6238  # PREFX3 implementation
                                          6239  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          6240  label('prefx3#13')
prefx3#13:    14e5 0116  ld   [$16]       6241  ld([vPC])                       #13
              14e6 8002  adda $02         6242  adda(2)                         #14
              14e7 c216  st   [$16]       6243  st([vPC])                       #15 Advance vPC
              14e8 0021  ld   $21         6244  ld(hi('PREFX3_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14e9 c202  st   [$02]       6245  st([vCpuSelect])                #17
              14ea 9401  adda $01,y       6246  adda(1,Y)                       #18
              14eb e000  jmp  y,$00       6247  jmp(Y,'NEXTY')                  #19
              14ec 00f5  ld   $f5         6248  ld(-22/2)                       #20
                                          6249
                                          6250  # PREFX2 implementation
                                          6251  label('prefx2#13')
prefx2#13:    14ed 0116  ld   [$16]       6252  ld([vPC])                       #13
              14ee 8001  adda $01         6253  adda(1)                         #14
              14ef c216  st   [$16]       6254  st([vPC])                       #15 Advance vPC
              14f0 0022  ld   $22         6255  ld(hi('PREFX2_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14f1 c202  st   [$02]       6256  st([vCpuSelect])                #17
              14f2 9401  adda $01,y       6257  adda(1,Y)                       #18
              14f3 e000  jmp  y,$00       6258  jmp(Y,'NEXTY')                  #19
              14f4 00f5  ld   $f5         6259  ld(-22/2)                       #20
                                          6260
                                          6261  # PREFX1 implementation
                                          6262  label('prefx1#13')
prefx1#13:    14f5 c202  st   [$02]       6263  st([vCpuSelect])                #13
              14f6 9401  adda $01,y       6264  adda(1,Y)                       #14
              14f7 e000  jmp  y,$00       6265  jmp(Y,'NEXTY')                  #15
              14f8 00f7  ld   $f7         6266  ld(-18/2)                       #16
                                          6267
                                          6268
              14f9 0200  nop              6269  fillers(until=0xff)
              14fa 0200  nop
              14fb 0200  nop
              * 6 times
              14ff 0200  nop              6270  align(0x100, size=0x100)
                                          6271
                                          6272  #-----------------------------------------------------------------------
                                          6273  #       More vCPU instruction implementations, (0x1500)
                                          6274  #-----------------------------------------------------------------------
                                          6275
                                          6276  # ADDI implementation
                                          6277  label('addi#13')
addi#13:      1500 8118  adda [$18]       6278  adda([vAC])                     #13
              1501 c218  st   [$18]       6279  st([vAC])                       #14 Store low result
              1502 e80c  blt  .addi#17    6280  bmi('.addi#17')                 #15 Now figure out if there was a carry
              1503 a11d  suba [$1d]       6281  suba([vTmp])                    #16 Gets back the initial value of vAC
              1504 411d  ora  [$1d]       6282  ora([vTmp])                     #17 Carry in bit 7
              1505 3080  anda $80,x       6283  anda(0x80,X)                    #18 Move carry to bit 0
              1506 0500  ld   [x]         6284  ld([X])                         #19
              1507 8119  adda [$19]       6285  adda([vAC+1])                   #20 Add the high bytes with carry
              1508 c219  st   [$19]       6286  st([vAC+1])                     #21 Store high result
              1509 1403  ld   $03,y       6287  ld(hi('NEXTY'),Y)               #22
              150a e000  jmp  y,$00       6288  jmp(Y,'NEXTY')                  #23
              150b 00f3  ld   $f3         6289  ld(-26/2)                       #24
                                          6290  label('.addi#17')
.addi#17:     150c 211d  anda [$1d]       6291  anda([vTmp])                    #17 Carry in bit 7
              150d 3080  anda $80,x       6292  anda(0x80,X)                    #18 Move carry to bit 0
              150e 0500  ld   [x]         6293  ld([X])                         #19
              150f 8119  adda [$19]       6294  adda([vAC+1])                   #20 Add the high bytes with carry
              1510 c219  st   [$19]       6295  st([vAC+1])                     #21 Store high result
              1511 1403  ld   $03,y       6296  ld(hi('NEXTY'),Y)               #22
              1512 e000  jmp  y,$00       6297  jmp(Y,'NEXTY')                  #23
              1513 00f3  ld   $f3         6298  ld(-26/2)                       #24
                                          6299
                                          6300  # SUBI implementation
                                          6301  label('subi#13')
subi#13:      1514 0118  ld   [$18]       6302  ld([vAC])                       #13
              1515 e820  blt  .subi#16    6303  bmi('.subi#16')                 #14
              1516 a11d  suba [$1d]       6304  suba([vTmp])                    #15
              1517 c218  st   [$18]       6305  st([vAC])                       #16 Store low result
              1518 411d  ora  [$1d]       6306  ora([vTmp])                     #17 Carry in bit 7
              1519 3080  anda $80,x       6307  anda(0x80,X)                    #18 Move carry to bit 0
              151a 0119  ld   [$19]       6308  ld([vAC+1])                     #19
              151b a500  suba [x]         6309  suba([X])                       #20
              151c c219  st   [$19]       6310  st([vAC+1])                     #21
              151d 1403  ld   $03,y       6311  ld(hi('NEXTY'),Y)               #22
              151e e000  jmp  y,$00       6312  jmp(Y,'NEXTY')                  #23
              151f 00f3  ld   $f3         6313  ld(-26/2)                       #24
                                          6314  label('.subi#16')
.subi#16:     1520 c218  st   [$18]       6315  st([vAC])                       #16 Store low result
              1521 211d  anda [$1d]       6316  anda([vTmp])                    #17 Carry in bit 7
              1522 3080  anda $80,x       6317  anda(0x80,X)                    #18 Move carry to bit 0
              1523 0119  ld   [$19]       6318  ld([vAC+1])                     #19
              1524 a500  suba [x]         6319  suba([X])                       #20
              1525 c219  st   [$19]       6320  st([vAC+1])                     #21
              1526 1403  ld   $03,y       6321  ld(hi('NEXTY'),Y)               #22
              1527 e000  jmp  y,$00       6322  jmp(Y,'NEXTY')                  #23
              1528 00f3  ld   $f3         6323  ld(-26/2)                       #24
                                          6324
                                          6325  # XORW implementation
                                          6326  label('xorw#13')
xorw#13:      1529 1400  ld   $00,y       6327  ld(0,Y)                         #13
              152a 0500  ld   [x]         6328  ld([X])                         #14
              152b de00  st   [y,x++]     6329  st([Y,Xpp])                     #15
              152c 6118  xora [$18]       6330  xora([vAC])                     #16
              152d c218  st   [$18]       6331  st([vAC])                       #17
              152e 0500  ld   [x]         6332  ld([X])                         #18
              152f 6119  xora [$19]       6333  xora([vAC+1])                   #19
              1530 c219  st   [$19]       6334  st([vAC+1])                     #20
              1531 1403  ld   $03,y       6335  ld(hi('REENTER'),Y)             #21
              1532 e0cb  jmp  y,$cb       6336  jmp(Y,'REENTER')                #22
              1533 00f3  ld   $f3         6337  ld(-26/2)                       #23
                                          6338
                                          6339  # INCW implementation
                                          6340  label('incw#13')
incw#13:      1534 1400  ld   $00,y       6341  ld(0,Y)                         #13
              1535 1200  ld   ac,x        6342  ld(AC,X)                        #14 address of low byte to be added
              1536 0500  ld   [x]         6343  ld([X])                         #15
              1537 8001  adda $01         6344  adda(1)                         #16
              1538 f03d  beq  .incw#19    6345  beq('.incw#19')                 #17 if low byte is 0x00
              1539 de00  st   [y,x++]     6346  st([Y,Xpp])                     #18 inc low byte
              153a 1403  ld   $03,y       6347  ld(hi('REENTER'),Y)             #19
              153b e0cb  jmp  y,$cb       6348  jmp(Y,'REENTER')                #20
              153c 00f4  ld   $f4         6349  ld(-24/2)                       #21
                                          6350  label('.incw#19')
.incw#19:     153d 0500  ld   [x]         6351  ld([X])                         #19
              153e 8001  adda $01         6352  adda(1)                         #20
              153f c600  st   [x]         6353  st([X])                         #21 inc high byte
              1540 1403  ld   $03,y       6354  ld(hi('NEXTY'),Y)               #22
              1541 e000  jmp  y,$00       6355  jmp(Y,'NEXTY')                  #23
              1542 00f3  ld   $f3         6356  ld(-26/2)                       #24
                                          6357
                                          6358  # DECW implementation
                                          6359  label('decw#13')
decw#13:      1543 1400  ld   $00,y       6360  ld(0,Y)                         #13
              1544 1200  ld   ac,x        6361  ld(AC,X)                        #14 address of low byte to be added
              1545 0500  ld   [x]         6362  ld([X])                         #15
              1546 a001  suba $01         6363  suba(1)                         #16
              1547 de00  st   [y,x++]     6364  st([Y,Xpp])                     #17 dec low byte
              1548 60ff  xora $ff         6365  xora(0xff)                      #18 if low byte is 0xff
              1549 f04d  beq  .decw#21    6366  beq('.decw#21')                 #19
              154a 1403  ld   $03,y       6367  ld(hi('NEXTY'),Y)               #20
              154b e000  jmp  y,$00       6368  jmp(Y,'NEXTY')                  #21
              154c 00f4  ld   $f4         6369  ld(-24/2)                       #22
                                          6370  label('.decw#21')
.decw#21:     154d 0500  ld   [x]         6371  ld([X])                         #21
              154e a001  suba $01         6372  suba(1)                         #22
              154f c600  st   [x]         6373  st([X])                         #23 dec high byte
              1550 1403  ld   $03,y       6374  ld(hi('NEXTY'),Y)               #24
              1551 e000  jmp  y,$00       6375  jmp(Y,'NEXTY')                  #25
              1552 00f2  ld   $f2         6376  ld(-28/2)                       #26
                                          6377
                                          6378  # DBNE implementation
                                          6379  label('dbne#13')
dbne#13:      1553 c21d  st   [$1d]       6380  st([vTmp])                      #13 branch offset
              1554 de00  st   [y,x++]     6381  st([Y,Xpp])                     #14 X++, address of counter
              1555 0d00  ld   [y,x]       6382  ld([Y,X])                       #15
              1556 1200  ld   ac,x        6383  ld(AC,X)                        #16 fetch counter
              1557 0500  ld   [x]         6384  ld([X])                         #17
              1558 a001  suba $01         6385  suba(1)                         #18 decrement counter
              1559 f060  beq  .dbne#21    6386  beq('.dbne#21')                 #19 if zero BRA
              155a c600  st   [x]         6387  st([X])                         #20
              155b 011d  ld   [$1d]       6388  ld([vTmp])                      #21
              155c c216  st   [$16]       6389  st([vPC])                       #22 BRA to branch offset
              155d 1403  ld   $03,y       6390  ld(hi('REENTER'),Y)             #23
              155e e0cb  jmp  y,$cb       6391  jmp(Y,'REENTER')                #24
              155f 00f2  ld   $f2         6392  ld(-28/2)                       #25
                                          6393  label('.dbne#21')
.dbne#21:     1560 0116  ld   [$16]       6394  ld([vPC])                       #21
              1561 8001  adda $01         6395  adda(1)                         #22
              1562 c216  st   [$16]       6396  st([vPC])                       #23 advance vPC by 1
              1563 1403  ld   $03,y       6397  ld(hi('NEXTY'),Y)               #24
              1564 e000  jmp  y,$00       6398  jmp(Y,'NEXTY')                  #25
              1565 00f2  ld   $f2         6399  ld(-28/2)                       #26
                                          6400
                                          6401  # TEQ implementation
                                          6402  label('teq#13')
teq#13:       1566 1200  ld   ac,x        6403  ld(AC,X)                        #13 address of var
              1567 0119  ld   [$19]       6404  ld([vAC+1])                     #14
              1568 4118  ora  [$18]       6405  ora([vAC])                      #15
              1569 f070  beq  .teq#18     6406  beq('.teq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              156a 1400  ld   $00,y       6407  ld(0,Y)                         #17
              156b dc00  st   $00,[y,x++] 6408  st(0,[Y,Xpp])                   #18 var.lo = 0
              156c cc00  st   $00,[y,x]   6409  st(0,[Y,X])                     #19 var.hi = 0
              156d 1403  ld   $03,y       6410  ld(hi('NEXTY'),Y)               #20
              156e e000  jmp  y,$00       6411  jmp(Y,'NEXTY')                  #21
              156f 00f4  ld   $f4         6412  ld(-24/2)                       #22
                                          6413  label('.teq#18')
.teq#18:      1570 dc01  st   $01,[y,x++] 6414  st(1,[Y,Xpp])                   #18 var.lo = 1
              1571 cc00  st   $00,[y,x]   6415  st(0,[Y,X])                     #19 var.hi = 0
              1572 1403  ld   $03,y       6416  ld(hi('NEXTY'),Y)               #20
              1573 e000  jmp  y,$00       6417  jmp(Y,'NEXTY')                  #21
              1574 00f4  ld   $f4         6418  ld(-24/2)                       #22
                                          6419
                                          6420  # TNE implementation
                                          6421  label('tne#13')
tne#13:       1575 1200  ld   ac,x        6422  ld(AC,X)                        #13 address of var
              1576 0119  ld   [$19]       6423  ld([vAC+1])                     #14
              1577 4118  ora  [$18]       6424  ora([vAC])                      #15
              1578 f07f  beq  .tne#18     6425  beq('.tne#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              1579 1400  ld   $00,y       6426  ld(0,Y)                         #17
              157a dc01  st   $01,[y,x++] 6427  st(1,[Y,Xpp])                   #18 var.lo = 1
              157b cc00  st   $00,[y,x]   6428  st(0,[Y,X])                     #19 var.hi = 0
              157c 1403  ld   $03,y       6429  ld(hi('NEXTY'),Y)               #20
              157d e000  jmp  y,$00       6430  jmp(Y,'NEXTY')                  #21
              157e 00f4  ld   $f4         6431  ld(-24/2)                       #22
                                          6432  label('.tne#18')
.tne#18:      157f dc00  st   $00,[y,x++] 6433  st(0,[Y,Xpp])                   #18 var.lo = 0
              1580 cc00  st   $00,[y,x]   6434  st(0,[Y,X])                     #19 var.hi = 0
              1581 1403  ld   $03,y       6435  ld(hi('NEXTY'),Y)               #20
              1582 e000  jmp  y,$00       6436  jmp(Y,'NEXTY')                  #21
              1583 00f4  ld   $f4         6437  ld(-24/2)                       #22
                                          6438
                                          6439  # TGE implementation
                                          6440  label('tge#13')
tge#13:       1584 1200  ld   ac,x        6441  ld(AC,X)                        #13 address of var
              1585 0119  ld   [$19]       6442  ld([vAC+1])                     #14
              1586 e88d  blt  .tge#17     6443  bmi('.tge#17')                  #15 if vAC.hi < 0
              1587 1400  ld   $00,y       6444  ld(0,Y)                         #16
              1588 dc01  st   $01,[y,x++] 6445  st(1,[Y,Xpp])                   #17 var.lo = 1
              1589 cc00  st   $00,[y,x]   6446  st(0,[Y,X])                     #18 var.hi = 0
              158a 1403  ld   $03,y       6447  ld(hi('REENTER'),Y)             #19
              158b e0cb  jmp  y,$cb       6448  jmp(Y,'REENTER')                #20
              158c 00f4  ld   $f4         6449  ld(-24/2)                       #21
                                          6450  label('.tge#17')
.tge#17:      158d dc00  st   $00,[y,x++] 6451  st(0,[Y,Xpp])                   #17 var.lo = 0
              158e cc00  st   $00,[y,x]   6452  st(0,[Y,X])                     #18 var.hi = 0
              158f 1403  ld   $03,y       6453  ld(hi('REENTER'),Y)             #19
              1590 e0cb  jmp  y,$cb       6454  jmp(Y,'REENTER')                #20
              1591 00f4  ld   $f4         6455  ld(-24/2)                       #21
                                          6456
                                          6457  # TLT implementation
                                          6458  label('tlt#13')
tlt#13:       1592 1200  ld   ac,x        6459  ld(AC,X)                        #13 address of var
              1593 0119  ld   [$19]       6460  ld([vAC+1])                     #14
              1594 e89b  blt  .tlt#17     6461  bmi('.tlt#17')                  #15 if vAC.hi < 0
              1595 1400  ld   $00,y       6462  ld(0,Y)                         #16
              1596 dc00  st   $00,[y,x++] 6463  st(0,[Y,Xpp])                   #17 var.lo = 0
              1597 cc00  st   $00,[y,x]   6464  st(0,[Y,X])                     #18 var.hi = 0
              1598 1403  ld   $03,y       6465  ld(hi('REENTER'),Y)             #19
              1599 e0cb  jmp  y,$cb       6466  jmp(Y,'REENTER')                #20
              159a 00f4  ld   $f4         6467  ld(-24/2)                       #21
                                          6468  label('.tlt#17')
.tlt#17:      159b dc01  st   $01,[y,x++] 6469  st(1,[Y,Xpp])                   #17 var.lo = 1
              159c cc00  st   $00,[y,x]   6470  st(0,[Y,X])                     #18 var.hi = 0
              159d 1403  ld   $03,y       6471  ld(hi('REENTER'),Y)             #19
              159e e0cb  jmp  y,$cb       6472  jmp(Y,'REENTER')                #20
              159f 00f4  ld   $f4         6473  ld(-24/2)                       #21
                                          6474
                                          6475  # TGT implementation
                                          6476  label('tgt#13')
tgt#13:       15a0 1400  ld   $00,y       6477  ld(0,Y)                         #13
              15a1 1200  ld   ac,x        6478  ld(AC,X)                        #14 address of var
              15a2 0119  ld   [$19]       6479  ld([vAC+1])                     #15
              15a3 e8ac  blt  .tgt#18     6480  blt('.tgt#18')                  #16 if vAC.hi < 0
              15a4 4118  ora  [$18]       6481  ora([vAC])                      #17
              15a5 ecb1  bne  .tgt#20     6482  bne('.tgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15a6 0200  nop              6483  nop()                           #19
              15a7 dc00  st   $00,[y,x++] 6484  st(0,[Y,Xpp])                   #20 var.lo = 0
              15a8 cc00  st   $00,[y,x]   6485  st(0,[Y,X])                     #21 var.hi = 0
              15a9 1403  ld   $03,y       6486  ld(hi('NEXTY'),Y)               #22
              15aa e000  jmp  y,$00       6487  jmp(Y,'NEXTY')                  #23
              15ab 00f3  ld   $f3         6488  ld(-26/2)                       #24
                                          6489  label('.tgt#18')
.tgt#18:      15ac dc00  st   $00,[y,x++] 6490  st(0,[Y,Xpp])                   #18 var.lo = 0
              15ad cc00  st   $00,[y,x]   6491  st(0,[Y,X])                     #19 var.hi = 0
              15ae 1403  ld   $03,y       6492  ld(hi('NEXTY'),Y)               #20
              15af e000  jmp  y,$00       6493  jmp(Y,'NEXTY')                  #21
              15b0 00f4  ld   $f4         6494  ld(-24/2)                       #22
                                          6495  label('.tgt#20')
.tgt#20:      15b1 dc01  st   $01,[y,x++] 6496  st(1,[Y,Xpp])                   #20 var.lo = 1
              15b2 cc00  st   $00,[y,x]   6497  st(0,[Y,X])                     #21 var.hi = 0
              15b3 1403  ld   $03,y       6498  ld(hi('NEXTY'),Y)               #22
              15b4 e000  jmp  y,$00       6499  jmp(Y,'NEXTY')                  #23
              15b5 00f3  ld   $f3         6500  ld(-26/2)                       #24
                                          6501
                                          6502  # TLE implementation
                                          6503  label('tle#13')
tle#13:       15b6 1400  ld   $00,y       6504  ld(0,Y)                         #13
              15b7 1200  ld   ac,x        6505  ld(AC,X)                        #14 address of var
              15b8 0119  ld   [$19]       6506  ld([vAC+1])                     #15
              15b9 e8c2  blt  .tle#18     6507  blt('.tle#18')                  #16 if vAC.hi < 0
              15ba 4118  ora  [$18]       6508  ora([vAC])                      #17
              15bb ecc7  bne  .tle#20     6509  bne('.tle#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15bc 0200  nop              6510  nop()                           #19
              15bd dc01  st   $01,[y,x++] 6511  st(1,[Y,Xpp])                   #20 var.lo = 1
              15be cc00  st   $00,[y,x]   6512  st(0,[Y,X])                     #21 var.hi = 0
              15bf 1403  ld   $03,y       6513  ld(hi('NEXTY'),Y)               #22
              15c0 e000  jmp  y,$00       6514  jmp(Y,'NEXTY')                  #23
              15c1 00f3  ld   $f3         6515  ld(-26/2)                       #24
                                          6516  label('.tle#18')
.tle#18:      15c2 dc01  st   $01,[y,x++] 6517  st(1,[Y,Xpp])                   #18 var.lo = 1
              15c3 cc00  st   $00,[y,x]   6518  st(0,[Y,X])                     #19 var.hi = 0
              15c4 1403  ld   $03,y       6519  ld(hi('NEXTY'),Y)               #20
              15c5 e000  jmp  y,$00       6520  jmp(Y,'NEXTY')                  #21
              15c6 00f4  ld   $f4         6521  ld(-24/2)                       #22
                                          6522  label('.tle#20')
.tle#20:      15c7 dc00  st   $00,[y,x++] 6523  st(0,[Y,Xpp])                   #20 var.lo = 0
              15c8 cc00  st   $00,[y,x]   6524  st(0,[Y,X])                     #21 var.hi = 0
              15c9 1403  ld   $03,y       6525  ld(hi('NEXTY'),Y)               #22
              15ca e000  jmp  y,$00       6526  jmp(Y,'NEXTY')                  #23
              15cb 00f3  ld   $f3         6527  ld(-26/2)                       #24
                                          6528
                                          6529
              15cc 0200  nop              6530  fillers(until=0xff)
              15cd 0200  nop
              15ce 0200  nop
              * 51 times
              15ff 0200  nop              6531  align(0x100, size=0x100)
                                          6532
                                          6533  #-----------------------------------------------------------------------
                                          6534  #       More vCPU instruction implementations, (0x1600)
                                          6535  #-----------------------------------------------------------------------
                                          6536
                                          6537  # INC implementation
                                          6538  label('inc#13')
inc#13:       1600 1200  ld   ac,x        6539  ld(AC,X)                        #13
              1601 0500  ld   [x]         6540  ld([X])                         #14
              1602 8001  adda $01         6541  adda(1)                         #15
              1603 c600  st   [x]         6542  st([X])                         #16
              1604 1403  ld   $03,y       6543  ld(hi('REENTER'),Y)             #17
              1605 e0cb  jmp  y,$cb       6544  jmp(Y,'REENTER')                #18
              1606 00f5  ld   $f5         6545  ld(-22/2)                       #19
                                          6546
                                          6547  # DEC implementation
                                          6548  label('dec#13')
dec#13:       1607 1200  ld   ac,x        6549  ld(AC,X)                        #13
              1608 0500  ld   [x]         6550  ld([X])                         #14
              1609 a001  suba $01         6551  suba(1)                         #15
              160a c600  st   [x]         6552  st([X])                         #16
              160b 1403  ld   $03,y       6553  ld(hi('REENTER'),Y)             #17
              160c e0cb  jmp  y,$cb       6554  jmp(Y,'REENTER')                #18
              160d 00f5  ld   $f5         6555  ld(-22/2)                       #19
                                          6556
                                          6557  # LD implementation
                                          6558  label('ld#13')
ld#13:        160e 1200  ld   ac,x        6559  ld(AC,X)                        #13
              160f 0500  ld   [x]         6560  ld([X])                         #14
              1610 c218  st   [$18]       6561  st([vAC])                       #15
              1611 0000  ld   $00         6562  ld(0)                           #16
              1612 c219  st   [$19]       6563  st([vAC+1])                     #17
              1613 1403  ld   $03,y       6564  ld(hi('NEXTY'),Y)               #18
              1614 e000  jmp  y,$00       6565  jmp(Y,'NEXTY')                  #19
              1615 00f5  ld   $f5         6566  ld(-22/2)                       #20
                                          6567
                                          6568  # LDI implementation
                                          6569  label('ldi#13')
ldi#13:       1616 c218  st   [$18]       6570  st([vAC])                       #13
              1617 0000  ld   $00         6571  ld(0)                           #14
              1618 c219  st   [$19]       6572  st([vAC+1])                     #15
              1619 1403  ld   $03,y       6573  ld(hi('NEXTY'),Y)               #16
              161a e000  jmp  y,$00       6574  jmp(Y,'NEXTY')                  #17
              161b 00f6  ld   $f6         6575  ld(-20/2)                       #18
                                          6576
                                          6577  # ST implementation
                                          6578  label('st#13')
st#13:        161c 1200  ld   ac,x        6579  ld(AC,X)                        #13
              161d 0118  ld   [$18]       6580  ld([vAC])                       #14
              161e c600  st   [x]         6581  st([X])                         #15
              161f 1403  ld   $03,y       6582  ld(hi('NEXTY'),Y)               #16
              1620 e000  jmp  y,$00       6583  jmp(Y,'NEXTY')                  #17
              1621 00f6  ld   $f6         6584  ld(-20/2)                       #18
                                          6585
                                          6586  # ORI implementation
                                          6587  label('ori#13')
ori#13:       1622 4118  ora  [$18]       6588  ora([vAC])                      #13
              1623 c218  st   [$18]       6589  st([vAC])                       #14
              1624 1403  ld   $03,y       6590  ld(hi('REENTER'),Y)             #15
              1625 e0cb  jmp  y,$cb       6591  jmp(Y,'REENTER')                #16
              1626 00f6  ld   $f6         6592  ld(-20/2)                       #17
                                          6593
                                          6594  # ALLOC implementation
                                          6595  label('alloc#13')
alloc#13:     1627 811c  adda [$1c]       6596  adda([vSP])                     #13
              1628 c21c  st   [$1c]       6597  st([vSP])                       #14
              1629 1403  ld   $03,y       6598  ld(hi('REENTER'),Y)             #15
              162a e0cb  jmp  y,$cb       6599  jmp(Y,'REENTER')                #16
              162b 00f6  ld   $f6         6600  ld(-20/2)                       #17
                                          6601
                                          6602  # MOV implementation
                                          6603  label('mov#13')
mov#13:       162c 1517  ld   [$17],y     6604  ld([vPC+1],Y)                   #13
              162d c21d  st   [$1d]       6605  st([vTmp])                      #14 save address of dst var
              162e de00  st   [y,x++]     6606  st([Y,Xpp])                     #15 X++
              162f 0d00  ld   [y,x]       6607  ld([Y,X])                       #16 address of src var
              1630 1200  ld   ac,x        6608  ld(AC,X)                        #17
              1631 0500  ld   [x]         6609  ld([X])                         #18 get src
              1632 111d  ld   [$1d],x     6610  ld([vTmp],X)                    #19 address of dst var
              1633 c600  st   [x]         6611  st([X])                         #20 dst = src
              1634 0116  ld   [$16]       6612  ld([vPC])                       #21
              1635 8001  adda $01         6613  adda(1)                         #22
              1636 c216  st   [$16]       6614  st([vPC])                       #23
              1637 1403  ld   $03,y       6615  ld(hi('NEXTY'),Y)               #24
              1638 e000  jmp  y,$00       6616  jmp(Y,'NEXTY')                  #25
              1639 00f2  ld   $f2         6617  ld(-28/2)                       #26
                                          6618
                                          6619  # PEEKA implementation
                                          6620  label('peeka#13')
peeka#13:     163a c21d  st   [$1d]       6621  st([vTmp])                      #13
              163b 1519  ld   [$19],y     6622  ld([vAC+1],Y)                   #14
              163c 1118  ld   [$18],x     6623  ld([vAC],X)                     #15
              163d 0d00  ld   [y,x]       6624  ld([Y,X])                       #16 peek [vAC]
              163e 111d  ld   [$1d],x     6625  ld([vTmp],X)                    #17 dst var
              163f c600  st   [x]         6626  st([X])                         #18 dst = peek [vAC]
              1640 1403  ld   $03,y       6627  ld(hi('REENTER'),Y)             #19
              1641 e0cb  jmp  y,$cb       6628  jmp(Y,'REENTER')                #20
              1642 00f4  ld   $f4         6629  ld(-24/2)                       #21
                                          6630
                                          6631  # DEEKA implementation
                                          6632  label('deeka#13')
deeka#13:     1643 1519  ld   [$19],y     6633  ld([vAC+1],Y)                   #13
              1644 1118  ld   [$18],x     6634  ld([vAC],X)                     #14
              1645 0d00  ld   [y,x]       6635  ld([Y,X])                       #15 peek [vAC]
              1646 de00  st   [y,x++]     6636  st([Y,Xpp])                     #16
              1647 c22a  st   [$2a]       6637  st([sysArgs+6])                 #17
              1648 0d00  ld   [y,x]       6638  ld([Y,X])                       #18 peek [vAC+1]
              1649 c22b  st   [$2b]       6639  st([sysArgs+7])                 #19
              164a 1400  ld   $00,y       6640  ld(0,Y)                         #20
              164b 111d  ld   [$1d],x     6641  ld([vTmp],X)                    #21 dst var
              164c 012a  ld   [$2a]       6642  ld([sysArgs+6])                 #22
              164d de00  st   [y,x++]     6643  st([Y,Xpp])                     #23 [var.lo] = peek [vAC]
              164e 012b  ld   [$2b]       6644  ld([sysArgs+7])                 #24
              164f ce00  st   [y,x]       6645  st([Y,X])                       #25 [var.hi] = peek [vAC+1]
              1650 1403  ld   $03,y       6646  ld(hi('NEXTY'),Y)               #26
              1651 e000  jmp  y,$00       6647  jmp(Y,'NEXTY')                  #27
              1652 00f1  ld   $f1         6648  ld(-30/2)                       #28
                                          6649
                                          6650  # PEEKA implementation
                                          6651  #label('peeka#13')
                                          6652  #ld(0,Y)                         #13
                                          6653  #ld(AC,X)                        #14 address of var
                                          6654  #ld([Y,X])                       #15
                                          6655  #st([vTmp])                      #16 low byte of src pointer
                                          6656  #st([Y,Xpp])                     #17 X++
                                          6657  #ld([Y,X])                       #18
                                          6658  #ld(AC,Y)                        #19 high byte of src pointer
                                          6659  #ld([vTmp],X)                    #20
                                          6660  #ld([Y,X])                       #21 peek src
                                          6661  #ld([vAC],X)                     #22 low byte of dst pointer
                                          6662  #ld([vAC+1],Y)                   #23 high byte of dst pointer
                                          6663  #st([Y,X])                       #24 poke dst
                                          6664  #ld(hi('REENTER'),Y)             #25
                                          6665  #jmp(Y,'REENTER')                #26
                                          6666  #ld(-30/2)                       #27
                                          6667
                                          6668  # SUBBI implementation, var -= imm, does NOT modify var.hi
                                          6669  label('subbi#13')
subbi#13:     1653 1517  ld   [$17],y     6670  ld([vPC+1],Y)                   #13
              1654 c21d  st   [$1d]       6671  st([vTmp])                      #14 immediate value
              1655 de00  st   [y,x++]     6672  st([Y,Xpp])                     #15 X++
              1656 0d00  ld   [y,x]       6673  ld([Y,X])                       #16
              1657 1200  ld   ac,x        6674  ld(AC,X)                        #17 address of var
              1658 0500  ld   [x]         6675  ld([X])                         #18
              1659 a11d  suba [$1d]       6676  suba([vTmp])                    #19
              165a c600  st   [x]         6677  st([X])                         #20
              165b 0116  ld   [$16]       6678  ld([vPC])                       #21
              165c 8001  adda $01         6679  adda(1)                         #22
              165d c216  st   [$16]       6680  st([vPC])                       #23 advance vPC by 1
              165e 1403  ld   $03,y       6681  ld(hi('NEXTY'),Y)               #24
              165f e000  jmp  y,$00       6682  jmp(Y,'NEXTY')                  #25
              1660 00f2  ld   $f2         6683  ld(-28/2)                       #26
                                          6684
                                          6685  # MOVQB implementation
                                          6686  label('movqb#13')
movqb#13:     1661 1517  ld   [$17],y     6687  ld([vPC+1],Y)                   #13 vPC.hi
              1662 c21d  st   [$1d]       6688  st([vTmp])                      #14 immediate value
              1663 de00  st   [y,x++]     6689  st([Y,Xpp])                     #15 X++
              1664 0d00  ld   [y,x]       6690  ld([Y,X])                       #16
              1665 1200  ld   ac,x        6691  ld(AC,X)                        #17 address of var
              1666 011d  ld   [$1d]       6692  ld([vTmp])                      #18
              1667 c600  st   [x]         6693  st([X])                         #19 var.lo = immediate value
              1668 0116  ld   [$16]       6694  ld([vPC])                       #20
              1669 8001  adda $01         6695  adda(1)                         #21
              166a c216  st   [$16]       6696  st([vPC])                       #22 advance vPC by 1
              166b 1403  ld   $03,y       6697  ld(hi('REENTER'),Y)             #23
              166c e0cb  jmp  y,$cb       6698  jmp(Y,'REENTER')                #24
              166d 00f2  ld   $f2         6699  ld(-28/2)                       #25
                                          6700
                                          6701  # MOVQW implementation
                                          6702  label('movqw#13')
movqw#13:     166e c21d  st   [$1d]       6703  st([vTmp])                      #13 immediate value
              166f de00  st   [y,x++]     6704  st([Y,Xpp])                     #14 X++
              1670 0d00  ld   [y,x]       6705  ld([Y,X])                       #15
              1671 1200  ld   ac,x        6706  ld(AC,X)                        #16 address of var
              1672 011d  ld   [$1d]       6707  ld([vTmp])                      #17
              1673 c600  st   [x]         6708  st([X])                         #18 var.lo = immediate value
              1674 1400  ld   $00,y       6709  ld(0,Y)                         #19
              1675 de00  st   [y,x++]     6710  st([Y,Xpp])                     #20 X++
              1676 0000  ld   $00         6711  ld(0)                           #21
              1677 c600  st   [x]         6712  st([X])                         #22 var.hi = 0
              1678 0116  ld   [$16]       6713  ld([vPC])                       #23
              1679 8001  adda $01         6714  adda(1)                         #24
              167a c216  st   [$16]       6715  st([vPC])                       #25 advance vPC by 1
              167b 1403  ld   $03,y       6716  ld(hi('NEXTY'),Y)               #26
              167c e000  jmp  y,$00       6717  jmp(Y,'NEXTY')                  #27
              167d 00f1  ld   $f1         6718  ld(-30/2)                       #28
                                          6719
                                          6720  # LSRB implementation
                                          6721  label('lsrb#13')
lsrb#13:      167e 1200  ld   ac,x        6722  ld(AC,X)                        #13 var
              167f 1405  ld   $05,y       6723  ld(hi('shiftTable'),Y)          #14 logical shift right 1 bit (X >> 1)
              1680 00c8  ld   $c8         6724  ld('.lsrb#24')                  #15 continuation address
              1681 c21d  st   [$1d]       6725  st([vTmp])                      #16
              1682 0500  ld   [x]         6726  ld([X])                         #17 load byte from var
              1683 20fe  anda $fe         6727  anda(0xfe)                      #18
              1684 e200  jmp  y,ac        6728  jmp(Y,AC)                       #19
              1685 fcff  bra  $ff         6729  bra(255)                        #20 bra shiftTable+255
                                          6730  #dummy
                                          6731  # continues in page 0x0600 at label('.lsrb#24') after fetching shifted byte from 0x0500
                                          6732
                                          6733  # PEEKV implementation
                                          6734  label('peekv#13')
peekv#13:     1686 1200  ld   ac,x        6735  ld(AC,X)                        #13
              1687 1400  ld   $00,y       6736  ld(0,Y)                         #14
              1688 0d00  ld   [y,x]       6737  ld([Y,X])                       #15 low byte peek address
              1689 de00  st   [y,x++]     6738  st([Y,Xpp])                     #16 X++
              168a c21d  st   [$1d]       6739  st([vTmp])                      #17
              168b 0d00  ld   [y,x]       6740  ld([Y,X])                       #18 high byte peek address
              168c 1600  ld   ac,y        6741  ld(AC,Y)                        #19
              168d 111d  ld   [$1d],x     6742  ld([vTmp],X)                    #20
              168e 0d00  ld   [y,x]       6743  ld([Y,X])                       #21 peek byte
              168f c218  st   [$18]       6744  st([vAC])                       #22
              1690 0000  ld   $00         6745  ld(0)                           #23
              1691 c219  st   [$19]       6746  st([vAC+1])                     #24
              1692 1403  ld   $03,y       6747  ld(hi('REENTER'),Y)             #25
              1693 e0cb  jmp  y,$cb       6748  jmp(Y,'REENTER')                #26
              1694 00f1  ld   $f1         6749  ld(-30/2)                       #27
                                          6750
                                          6751  # DEEKV implementation
                                          6752  label('deekv#13')
deekv#13:     1695 1200  ld   ac,x        6753  ld(AC,X)                        #13
              1696 1400  ld   $00,y       6754  ld(0,Y)                         #14
              1697 0d00  ld   [y,x]       6755  ld([Y,X])                       #15 low byte deek address
              1698 de00  st   [y,x++]     6756  st([Y,Xpp])                     #16 X++
              1699 c21d  st   [$1d]       6757  st([vTmp])                      #17
              169a 0d00  ld   [y,x]       6758  ld([Y,X])                       #18 high byte deek address
              169b 1600  ld   ac,y        6759  ld(AC,Y)                        #19
              169c 111d  ld   [$1d],x     6760  ld([vTmp],X)                    #20
              169d 0d00  ld   [y,x]       6761  ld([Y,X])                       #21 peek low byte
              169e c218  st   [$18]       6762  st([vAC])                       #22
              169f de00  st   [y,x++]     6763  st([Y,Xpp])                     #23 X++
              16a0 0d00  ld   [y,x]       6764  ld([Y,X])                       #24 peek high byte
              16a1 c219  st   [$19]       6765  st([vAC+1])                     #25
              16a2 1403  ld   $03,y       6766  ld(hi('NEXTY'),Y)               #26
              16a3 e000  jmp  y,$00       6767  jmp(Y,'NEXTY')                  #27
              16a4 00f1  ld   $f1         6768  ld(-30/2)                       #28
                                          6769
                                          6770  # LSLV implementation
                                          6771  label('lslv#13')
lslv#13:      16a5 1400  ld   $00,y       6772  ld(0,Y)                         #13
              16a6 1200  ld   ac,x        6773  ld(AC,X)                        #14 var
              16a7 0500  ld   [x]         6774  ld([X])                         #15
              16a8 f4b2  bge  .lslv#18    6775  bge('.lslv#18')                 #16
              16a9 8500  adda [x]         6776  adda([X])                       #17
              16aa de00  st   [y,x++]     6777  st([Y,Xpp])                     #18 var.lo <<1
              16ab 0500  ld   [x]         6778  ld([X])                         #19
              16ac 8500  adda [x]         6779  adda([X])                       #20
              16ad 4001  ora  $01         6780  ora(1)                          #21
              16ae c600  st   [x]         6781  st([X])                         #22 var.hi <<1 | 1
              16af 1403  ld   $03,y       6782  ld(hi('REENTER'),Y)             #23
              16b0 e0cb  jmp  y,$cb       6783  jmp(Y,'REENTER')                #24
              16b1 00f2  ld   $f2         6784  ld(-28/2)                       #25
                                          6785  label('.lslv#18')
.lslv#18:     16b2 de00  st   [y,x++]     6786  st([Y,Xpp])                     #18
              16b3 0500  ld   [x]         6787  ld([X])                         #19
              16b4 8500  adda [x]         6788  adda([X])                       #20
              16b5 c600  st   [x]         6789  st([X])                         #21
              16b6 1403  ld   $03,y       6790  ld(hi('NEXTY'),Y)               #22
              16b7 e000  jmp  y,$00       6791  jmp(Y,'NEXTY')                  #23
              16b8 00f3  ld   $f3         6792  ld(-26/2)                       #24
                                          6793
                                          6794  # LDW implementation
                                          6795  label('ldw#13')
ldw#13:       16b9 1400  ld   $00,y       6796  ld(0,Y)                         #13
              16ba 1200  ld   ac,x        6797  ld(AC,X)                        #14 Operand
              16bb 0500  ld   [x]         6798  ld([X])                         #15
              16bc c218  st   [$18]       6799  st([vAC])                       #16
              16bd de00  st   [y,x++]     6800  st([Y,Xpp])                     #17 X++
              16be 0500  ld   [x]         6801  ld([X])                         #18
              16bf c219  st   [$19]       6802  st([vAC+1])                     #19
              16c0 1403  ld   $03,y       6803  ld(hi('NEXTY'),Y)               #20
              16c1 e000  jmp  y,$00       6804  jmp(Y,'NEXTY')                  #21
              16c2 00f4  ld   $f4         6805  ld(-24/2)                       #22
                                          6806
                                          6807  # STW implementation
                                          6808  label('stw#13')
stw#13:       16c3 1400  ld   $00,y       6809  ld(0,Y)                         #13
              16c4 1200  ld   ac,x        6810  ld(AC,X)                        #14 Operand
              16c5 0118  ld   [$18]       6811  ld([vAC])                       #15
              16c6 de00  st   [y,x++]     6812  st([Y,Xpp])                     #16
              16c7 0119  ld   [$19]       6813  ld([vAC+1])                     #17
              16c8 c600  st   [x]         6814  st([X])                         #18
              16c9 1403  ld   $03,y       6815  ld(hi('REENTER'),Y)             #19
              16ca e0cb  jmp  y,$cb       6816  jmp(Y,'REENTER')                #20
              16cb 00f4  ld   $f4         6817  ld(-24/2)                       #21
                                          6818
                                          6819  # POKE+ implementation
                                          6820  label('poke+#13')
poke+#13:     16cc 1200  ld   ac,x        6821  ld(AC,X)                        #13 Operand
              16cd 1400  ld   $00,y       6822  ld(0,Y)                         #14
              16ce 0500  ld   [x]         6823  ld([X])                         #15 low byte poke address
              16cf c21d  st   [$1d]       6824  st([vTmp])                      #16
              16d0 8001  adda $01         6825  adda(1)                         #17
              16d1 de00  st   [y,x++]     6826  st([Y,Xpp])                     #18
              16d2 0500  ld   [x]         6827  ld([X])                         #19 high byte poke address
              16d3 1600  ld   ac,y        6828  ld(AC,Y)                        #20
              16d4 111d  ld   [$1d],x     6829  ld([vTmp],X)                    #21
              16d5 0118  ld   [$18]       6830  ld([vAC])                       #22
              16d6 ce00  st   [y,x]       6831  st([Y,X])                       #23
              16d7 1403  ld   $03,y       6832  ld(hi('NEXTY'),Y)               #24
              16d8 e000  jmp  y,$00       6833  jmp(Y,'NEXTY')                  #25
              16d9 00f2  ld   $f2         6834  ld(-28/2)                       #26
                                          6835
                                          6836  # ADDBI implementation, var += imm, does NOT modify var.hi
                                          6837  label('addbi#13')
addbi#13:     16da 1517  ld   [$17],y     6838  ld([vPC+1],Y)                   #13
              16db c21d  st   [$1d]       6839  st([vTmp])                      #14 immediate value
              16dc de00  st   [y,x++]     6840  st([Y,Xpp])                     #15 X++
              16dd 0d00  ld   [y,x]       6841  ld([Y,X])                       #16
              16de 1200  ld   ac,x        6842  ld(AC,X)                        #17 var
              16df 0500  ld   [x]         6843  ld([X])                         #18
              16e0 811d  adda [$1d]       6844  adda([vTmp])                    #19
              16e1 c600  st   [x]         6845  st([X])                         #20
              16e2 0116  ld   [$16]       6846  ld([vPC])                       #21
              16e3 8001  adda $01         6847  adda(1)                         #22
              16e4 c216  st   [$16]       6848  st([vPC])                       #23 advance vPC by 1
              16e5 1403  ld   $03,y       6849  ld(hi('NEXTY'),Y)               #24
              16e6 e000  jmp  y,$00       6850  jmp(Y,'NEXTY')                  #25
              16e7 00f2  ld   $f2         6851  ld(-28/2)                       #26
                                          6852
                                          6853
              16e8 0200  nop              6854  fillers(until=0xff)
              16e9 0200  nop
              16ea 0200  nop
              * 23 times
              16ff 0200  nop              6855  align(0x100, size=0x100)
                                          6856
                                          6857  #-----------------------------------------------------------------------
                                          6858  #       More vCPU instruction implementations, (0x1700)
                                          6859  #-----------------------------------------------------------------------
                                          6860
                                          6861  # LDWI implementation (vCPU instruction)
                                          6862  label('ldwi#13')
ldwi#13:      1700 c218  st   [$18]       6863  st([vAC])                       #13 Operand
              1701 de00  st   [y,x++]     6864  st([Y,Xpp])                     #14 Just X++
              1702 0d00  ld   [y,x]       6865  ld([Y,X])                       #15 Fetch second operand
              1703 c219  st   [$19]       6866  st([vAC+1])                     #16
              1704 0116  ld   [$16]       6867  ld([vPC])                       #17 Advance vPC one more
              1705 8001  adda $01         6868  adda(1)                         #18
              1706 c216  st   [$16]       6869  st([vPC])                       #19
              1707 1403  ld   $03,y       6870  ld(hi('NEXTY'),Y)               #20
              1708 e000  jmp  y,$00       6871  jmp(Y,'NEXTY')                  #21
              1709 00f4  ld   $f4         6872  ld(-24/2)                       #22
                                          6873
                                          6874  # CALLI implementation (vCPU instruction)
                                          6875  label('calli#13')
calli#13:     170a 8003  adda $03         6876  adda(3)                         #13
              170b c21a  st   [$1a]       6877  st([vLR])                       #14
              170c 0117  ld   [$17]       6878  ld([vPC+1])                     #15
              170d d61b  st   [$1b],y     6879  st([vLR+1],Y)                   #16
              170e 0d00  ld   [y,x]       6880  ld([Y,X])                       #17
              170f de00  st   [y,x++]     6881  st([Y,Xpp])                     #18 Just X++
              1710 a002  suba $02         6882  suba(2)                         #19
              1711 c216  st   [$16]       6883  st([vPC])                       #20
              1712 0d00  ld   [y,x]       6884  ld([Y,X])                       #21
              1713 1403  ld   $03,y       6885  ld(hi('REENTER_28'),Y)          #22
              1714 e0ca  jmp  y,$ca       6886  jmp(Y,'REENTER_28')             #23
              1715 c217  st   [$17]       6887  st([vPC+1])                     #24
                                          6888
                                          6889  # SUBW implemetation
                                          6890  label('subw#13')
subw#13:      1716 8001  adda $01         6891  adda(1)                         #13
              1717 c21d  st   [$1d]       6892  st([vTmp])                      #14 Address of high byte to be subtracted
              1718 0118  ld   [$18]       6893  ld([vAC])                       #15 Low byte
              1719 e826  blt  .subw#18    6894  bmi('.subw#18')                 #16
              171a a500  suba [x]         6895  suba([X])                       #17
              171b c218  st   [$18]       6896  st([vAC])                       #18 Store low result
              171c 4500  ora  [x]         6897  ora([X])                        #19 Carry in bit 7
              171d 3080  anda $80,x       6898  anda(0x80,X)                    #20 Move carry to bit 0
              171e 0119  ld   [$19]       6899  ld([vAC+1])                     #21
              171f a500  suba [x]         6900  suba([X])                       #22
              1720 111d  ld   [$1d],x     6901  ld([vTmp],X)                    #23
              1721 a500  suba [x]         6902  suba([X])                       #24
              1722 c219  st   [$19]       6903  st([vAC+1])                     #25
              1723 1403  ld   $03,y       6904  ld(hi('NEXTY'),Y)               #26
              1724 e000  jmp  y,$00       6905  jmp(Y,'NEXTY')                  #27
              1725 00f1  ld   $f1         6906  ld(-30/2)                       #28
                                          6907  label('.subw#18')
.subw#18:     1726 c218  st   [$18]       6908  st([vAC])                       #18 Store low result
              1727 2500  anda [x]         6909  anda([X])                       #19 Carry in bit 7
              1728 3080  anda $80,x       6910  anda(0x80,X)                    #20 Move carry to bit 0
              1729 0119  ld   [$19]       6911  ld([vAC+1])                     #21
              172a a500  suba [x]         6912  suba([X])                       #22
              172b 111d  ld   [$1d],x     6913  ld([vTmp],X)                    #23
              172c a500  suba [x]         6914  suba([X])                       #24
              172d c219  st   [$19]       6915  st([vAC+1])                     #25
              172e 1403  ld   $03,y       6916  ld(hi('NEXTY'),Y)               #26
              172f e000  jmp  y,$00       6917  jmp(Y,'NEXTY')                  #27
              1730 00f1  ld   $f1         6918  ld(-30/2)                       #28
                                          6919
                                          6920  # BEQ implementation
                                          6921  label('beq#15')
beq#15:       1731 0119  ld   [$19]       6922  ld([vAC+1])                     #15
              1732 4118  ora  [$18]       6923  ora([vAC])                      #16
              1733 f03b  beq  .beq#19     6924  beq('.beq#19')                  #17 if (vAC.hi OR vAC.lo) == 0
              1734 0d00  ld   [y,x]       6925  ld([Y,X])                       #18 address of branch destination
              1735 0116  ld   [$16]       6926  ld([vPC])                       #19
              1736 8001  adda $01         6927  adda(1)                         #20
              1737 c216  st   [$16]       6928  st([vPC])                       #21
              1738 1403  ld   $03,y       6929  ld(hi('NEXTY'),Y)               #22
              1739 e000  jmp  y,$00       6930  jmp(Y,'NEXTY')                  #23
              173a 00f3  ld   $f3         6931  ld(-26/2)                       #24
                                          6932  label('.beq#19')
.beq#19:      173b c216  st   [$16]       6933  st([vPC])                       #19
              173c 1403  ld   $03,y       6934  ld(hi('NEXTY'),Y)               #20
              173d e000  jmp  y,$00       6935  jmp(Y,'NEXTY')                  #21
              173e 00f4  ld   $f4         6936  ld(-24/2)                       #22
                                          6937
                                          6938  # BNE implementation
                                          6939  label('bne#15')
bne#15:       173f 0119  ld   [$19]       6940  ld([vAC+1])                     #15
              1740 4118  ora  [$18]       6941  ora([vAC])                      #16
              1741 ec49  bne  .bne#19     6942  bne('.bne#19')                  #17 if (vAC.hi OR vAC.lo) != 0
              1742 0d00  ld   [y,x]       6943  ld([Y,X])                       #18 address of branch destination
              1743 0116  ld   [$16]       6944  ld([vPC])                       #19
              1744 8001  adda $01         6945  adda(1)                         #20
              1745 c216  st   [$16]       6946  st([vPC])                       #21
              1746 1403  ld   $03,y       6947  ld(hi('NEXTY'),Y)               #22
              1747 e000  jmp  y,$00       6948  jmp(Y,'NEXTY')                  #23
              1748 00f3  ld   $f3         6949  ld(-26/2)                       #24
                                          6950  label('.bne#19')
.bne#19:      1749 c216  st   [$16]       6951  st([vPC])                       #19
              174a 1403  ld   $03,y       6952  ld(hi('NEXTY'),Y)               #20
              174b e000  jmp  y,$00       6953  jmp(Y,'NEXTY')                  #21
              174c 00f4  ld   $f4         6954  ld(-24/2)                       #22
                                          6955
                                          6956  # BGT implementation
                                          6957  label('bgt#15')
bgt#15:       174d 0119  ld   [$19]       6958  ld([vAC+1])                     #15
              174e e857  blt  .bgt#18     6959  blt('.bgt#18')                  #16 if vAC.hi < 0
              174f 4118  ora  [$18]       6960  ora([vAC])                      #17
              1750 ec5d  bne  .bgt#20     6961  bne('.bgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              1751 0116  ld   [$16]       6962  ld([vPC])                       #19
              1752 8001  adda $01         6963  adda(1)                         #20
              1753 c216  st   [$16]       6964  st([vPC])                       #21
              1754 1403  ld   $03,y       6965  ld(hi('NEXTY'),Y)               #22
              1755 e000  jmp  y,$00       6966  jmp(Y,'NEXTY')                  #23
              1756 00f3  ld   $f3         6967  ld(-26/2)                       #24
                                          6968  label('.bgt#18')
.bgt#18:      1757 0116  ld   [$16]       6969  ld([vPC])                       #18
              1758 8001  adda $01         6970  adda(1)                         #19
              1759 c216  st   [$16]       6971  st([vPC])                       #20
              175a 1403  ld   $03,y       6972  ld(hi('REENTER'),Y)             #21
              175b e0cb  jmp  y,$cb       6973  jmp(Y,'REENTER')                #22
              175c 00f3  ld   $f3         6974  ld(-26/2)                       #23
                                          6975  label('.bgt#20')
.bgt#20:      175d 0d00  ld   [y,x]       6976  ld([Y,X])                       #20 address of branch destination
              175e c216  st   [$16]       6977  st([vPC])                       #21
              175f 1403  ld   $03,y       6978  ld(hi('NEXTY'),Y)               #22
              1760 e000  jmp  y,$00       6979  jmp(Y,'NEXTY')                  #23
              1761 00f3  ld   $f3         6980  ld(-26/2)                       #24
                                          6981
                                          6982  # BLT implementation
                                          6983  label('blt#15')
blt#15:       1762 0119  ld   [$19]       6984  ld([vAC+1])                     #15
              1763 e86a  blt  .blt#18     6985  blt('.blt#18')                  #16 if vAC.hi < 0
              1764 0116  ld   [$16]       6986  ld([vPC])                       #17
              1765 8001  adda $01         6987  adda(1)                         #18
              1766 c216  st   [$16]       6988  st([vPC])                       #19
              1767 1403  ld   $03,y       6989  ld(hi('NEXTY'),Y)               #20
              1768 e000  jmp  y,$00       6990  jmp(Y,'NEXTY')                  #21
              1769 00f4  ld   $f4         6991  ld(-24/2)                       #22
                                          6992  label('.blt#18')
.blt#18:      176a 0d00  ld   [y,x]       6993  ld([Y,X])                       #18 address of branch destination
              176b c216  st   [$16]       6994  st([vPC])                       #19
              176c 1403  ld   $03,y       6995  ld(hi('NEXTY'),Y)               #20
              176d e000  jmp  y,$00       6996  jmp(Y,'NEXTY')                  #21
              176e 00f4  ld   $f4         6997  ld(-24/2)                       #22
                                          6998
                                          6999  # BGE implementation
                                          7000  label('bge#15')
bge#15:       176f 0119  ld   [$19]       7001  ld([vAC+1])                     #15
              1770 e877  blt  .bge#18     7002  blt('.bge#18')                  #16 if vAC.hi < 0
              1771 0116  ld   [$16]       7003  ld([vPC])                       #17
              1772 0d00  ld   [y,x]       7004  ld([Y,X])                       #18 address of branch destination
              1773 c216  st   [$16]       7005  st([vPC])                       #19
              1774 1403  ld   $03,y       7006  ld(hi('NEXTY'),Y)               #20
              1775 e000  jmp  y,$00       7007  jmp(Y,'NEXTY')                  #21
              1776 00f4  ld   $f4         7008  ld(-24/2)                       #22
                                          7009  label('.bge#18')
.bge#18:      1777 8001  adda $01         7010  adda(1)                         #18
              1778 c216  st   [$16]       7011  st([vPC])                       #19
              1779 1403  ld   $03,y       7012  ld(hi('NEXTY'),Y)               #20
              177a e000  jmp  y,$00       7013  jmp(Y,'NEXTY')                  #21
              177b 00f4  ld   $f4         7014  ld(-24/2)                       #22
                                          7015
                                          7016  # BLE implementation
                                          7017  label('ble#15')
ble#15:       177c 0119  ld   [$19]       7018  ld([vAC+1])                     #15
              177d e886  blt  .ble#18     7019  blt('.ble#18')                  #16 if vAC.hi < 0
              177e 4118  ora  [$18]       7020  ora([vAC])                      #17
              177f ec8b  bne  .ble#20     7021  bne('.ble#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              1780 0116  ld   [$16]       7022  ld([vPC])                       #19
              1781 0d00  ld   [y,x]       7023  ld([Y,X])                       #20 address of branch destination
              1782 c216  st   [$16]       7024  st([vPC])                       #21
              1783 1403  ld   $03,y       7025  ld(hi('NEXTY'),Y)               #22
              1784 e000  jmp  y,$00       7026  jmp(Y,'NEXTY')                  #23
              1785 00f3  ld   $f3         7027  ld(-26/2)                       #24
                                          7028  label('.ble#18')
.ble#18:      1786 0d00  ld   [y,x]       7029  ld([Y,X])                       #18 address of branch destination
              1787 c216  st   [$16]       7030  st([vPC])                       #19
              1788 1403  ld   $03,y       7031  ld(hi('NEXTY'),Y)               #20
              1789 e000  jmp  y,$00       7032  jmp(Y,'NEXTY')                  #21
              178a 00f4  ld   $f4         7033  ld(-24/2)                       #22
                                          7034  label('.ble#20')
.ble#20:      178b 8001  adda $01         7035  adda(1)                         #20
              178c c216  st   [$16]       7036  st([vPC])                       #21
              178d 1403  ld   $03,y       7037  ld(hi('NEXTY'),Y)               #22
              178e e000  jmp  y,$00       7038  jmp(Y,'NEXTY')                  #23
              178f 00f3  ld   $f3         7039  ld(-26/2)                       #24
                                          7040
                                          7041  # ADDBA implementation
                                          7042  label('addba#13')
addba#13:     1790 1200  ld   ac,x        7043  ld(AC,X)                        #13 src var
              1791 0118  ld   [$18]       7044  ld([vAC])                       #14
              1792 8500  adda [x]         7045  adda([X])                       #15
              1793 c218  st   [$18]       7046  st([vAC])                       #16 vAC.lo += var.lo
              1794 e89e  blt  .addba#19   7047  bmi('.addba#19')                #17 Now figure out if there was a carry
              1795 a500  suba [x]         7048  suba([X])                       #18 Gets back the initial value of vAC
              1796 4500  ora  [x]         7049  ora([X])                        #19 Carry in bit 7
              1797 3080  anda $80,x       7050  anda(0x80,X)                    #20 Move carry to bit 0
              1798 0500  ld   [x]         7051  ld([X])                         #21
              1799 8119  adda [$19]       7052  adda([vAC+1])                   #22 Add the high byte and carry
              179a c219  st   [$19]       7053  st([vAC+1])                     #23 Store high result
              179b 1403  ld   $03,y       7054  ld(hi('NEXTY'),Y)               #24
              179c e000  jmp  y,$00       7055  jmp(Y,'NEXTY')                  #25
              179d 00f2  ld   $f2         7056  ld(-28/2)                       #26
                                          7057  label('.addba#19')
.addba#19:    179e 2500  anda [x]         7058  anda([X])                       #19 Carry in bit 7
              179f 3080  anda $80,x       7059  anda(0x80,X)                    #20 Move carry to bit 0
              17a0 0500  ld   [x]         7060  ld([X])                         #21
              17a1 8119  adda [$19]       7061  adda([vAC+1])                   #22 Add high byte and carry
              17a2 c219  st   [$19]       7062  st([vAC+1])                     #23 Store high result
              17a3 1403  ld   $03,y       7063  ld(hi('NEXTY'),Y)               #24
              17a4 e000  jmp  y,$00       7064  jmp(Y,'NEXTY')                  #25
              17a5 00f2  ld   $f2         7065  ld(-28/2)                       #26
                                          7066
                                          7067  # SUBBA implementation
                                          7068  label('subba#13')
subba#13:     17a6 1200  ld   ac,x        7069  ld(AC,X)                        #13 src var
              17a7 0118  ld   [$18]       7070  ld([vAC])                       #14
              17a8 e8b3  blt  .subba#17   7071  bmi('.subba#17')                 #15
              17a9 a500  suba [x]         7072  suba([X])                       #16
              17aa c218  st   [$18]       7073  st([vAC])                       #17 vAC.lo -= var.lo
              17ab 4500  ora  [x]         7074  ora([X])                        #18 Borrow in bit 7
              17ac 3080  anda $80,x       7075  anda(0x80,X)                    #19 Move borrow to bit 0
              17ad 0119  ld   [$19]       7076  ld([vAC+1])                     #20
              17ae a500  suba [x]         7077  suba([X])                       #21 Sub borrow from high byte
              17af c219  st   [$19]       7078  st([vAC+1])                     #22 Store high result
              17b0 1403  ld   $03,y       7079  ld(hi('REENTER'),Y)             #23
              17b1 e0cb  jmp  y,$cb       7080  jmp(Y,'REENTER')                #24
              17b2 00f2  ld   $f2         7081  ld(-28/2)                       #25
                                          7082  label('.subba#17')
.subba#17:    17b3 c218  st   [$18]       7083  st([vAC])                       #17
              17b4 2500  anda [x]         7084  anda([X])                       #18 Borrow in bit 7
              17b5 3080  anda $80,x       7085  anda(0x80,X)                    #19 Move borrow to bit 0
              17b6 0119  ld   [$19]       7086  ld([vAC+1])                     #20
              17b7 a500  suba [x]         7087  suba([X])                       #21 Sub borrow from high byte
              17b8 c219  st   [$19]       7088  st([vAC+1])                     #22 Store high result
              17b9 1403  ld   $03,y       7089  ld(hi('REENTER'),Y)             #23
              17ba e0cb  jmp  y,$cb       7090  jmp(Y,'REENTER')                #24
              17bb 00f2  ld   $f2         7091  ld(-28/2)                       #25
                                          7092
                                          7093  # ADDB implementation, dst += src, does NOT modify dst.hi
                                          7094  #label('addb#13')
                                          7095  #ld([vPC+1],Y)                   #13
                                          7096  #st([vTmp])                      #14 dst var
                                          7097  #st([Y,Xpp])                     #15 X++
                                          7098  #ld([Y,X])                       #16
                                          7099  #ld(AC,X)                        #17 src var
                                          7100  #ld([X])                         #18
                                          7101  #ld([vTmp],X)                    #19
                                          7102  #adda([X])                       #20
                                          7103  #st([X])                         #21 dst += src
                                          7104  #ld([vPC])                       #22
                                          7105  #adda(1)                         #23
                                          7106  #st([vPC])                       #24 advance vPC by 1
                                          7107  #ld(hi('REENTER'),Y)             #25
                                          7108  #jmp(Y,'REENTER')                #26
                                          7109  #ld(-30/2)                       #27
                                          7110
                                          7111  # ADDBA implementation, vAC.lo = dst + src, does NOT modify vAC.hi
                                          7112  #label('addba#13')
                                          7113  #ld([vPC+1],Y)                   #13
                                          7114  #st([vTmp])                      #14 dst var
                                          7115  #st([Y,Xpp])                     #15 X++
                                          7116  #ld([Y,X])                       #16
                                          7117  #ld(AC,X)                        #17 src var
                                          7118  #ld([X])                         #18
                                          7119  #ld([vTmp],X)                    #19
                                          7120  #adda([X])                       #20
                                          7121  #st([vAC])                       #21 vAC.lo = dst + src
                                          7122  #ld([vPC])                       #22
                                          7123  #adda(1)                         #23
                                          7124  #st([vPC])                       #24 advance vPC by 1
                                          7125  #ld(hi('REENTER'),Y)             #25
                                          7126  #jmp(Y,'REENTER')                #26
                                          7127  #ld(-30/2)                       #27
                                          7128
                                          7129  # POKEA implementation
                                          7130  label('pokea#13')
pokea#13:     17bc 1200  ld   ac,x        7131  ld(AC,X)                        #13
              17bd 0500  ld   [x]         7132  ld([X])                         #14 var.lo
              17be 1118  ld   [$18],x     7133  ld([vAC],X)                     #15
              17bf 1519  ld   [$19],y     7134  ld([vAC+1],Y)                   #16
              17c0 ce00  st   [y,x]       7135  st([Y,X])                       #17 poke [vAC], var.lo
              17c1 1403  ld   $03,y       7136  ld(hi('NEXTY'),Y)               #18
              17c2 e000  jmp  y,$00       7137  jmp(Y,'NEXTY')                  #19
              17c3 00f5  ld   $f5         7138  ld(-22/2)                       #20
                                          7139
                                          7140  # DOKEA implementation
                                          7141  label('dokea#13')
dokea#13:     17c4 d21d  st   [$1d],x     7142  st([vTmp],X)                    #13
              17c5 0500  ld   [x]         7143  ld([X])                         #14 var.lo
              17c6 1118  ld   [$18],x     7144  ld([vAC],X)                     #15
              17c7 1519  ld   [$19],y     7145  ld([vAC+1],Y)                   #16
              17c8 ce00  st   [y,x]       7146  st([Y,X])                       #17 poke [vAC], var.lo
              17c9 011d  ld   [$1d]       7147  ld([vTmp])                      #18
              17ca 9001  adda $01,x       7148  adda(1,X)                       #19
              17cb 0500  ld   [x]         7149  ld([X])                         #20 var.hi
              17cc c21d  st   [$1d]       7150  st([vTmp])                      #21
              17cd 0118  ld   [$18]       7151  ld([vAC])                       #22
              17ce 9001  adda $01,x       7152  adda(1,X)                       #23
              17cf 011d  ld   [$1d]       7153  ld([vTmp])                      #24
              17d0 ce00  st   [y,x]       7154  st([Y,X])                       #25 poke [vAC+1], var.hi
              17d1 1403  ld   $03,y       7155  ld(hi('NEXTY'),Y)               #26
              17d2 e000  jmp  y,$00       7156  jmp(Y,'NEXTY')                  #27
              17d3 00f1  ld   $f1         7157  ld(-30/2)                       #28
                                          7158
                                          7159  # POKEI implementation
                                          7160  label('pokei#13')
pokei#13:     17d4 1519  ld   [$19],y     7161  ld([vAC+1],Y)                   #13
              17d5 1118  ld   [$18],x     7162  ld([vAC],X)                     #14
              17d6 de00  st   [y,x++]     7163  st([Y,Xpp])                     #15
              17d7 1403  ld   $03,y       7164  ld(hi('NEXTY'),Y)               #16
              17d8 e000  jmp  y,$00       7165  jmp(Y,'NEXTY')                  #17
              17d9 00f6  ld   $f6         7166  ld(-20/2)                       #18
                                          7167
                                          7168  # DOKEI implementation
                                          7169  label('dokei#13')
dokei#13:     17da 1517  ld   [$17],y     7170  ld([vPC+1],Y)                   #13
              17db c21d  st   [$1d]       7171  st([vTmp])                      #14 imm.hi
              17dc de00  st   [y,x++]     7172  st([Y,Xpp])                     #15 X++
              17dd 0d00  ld   [y,x]       7173  ld([Y,X])                       #16 imm.lo
              17de 1519  ld   [$19],y     7174  ld([vAC+1],Y)                   #17
              17df 1118  ld   [$18],x     7175  ld([vAC],X)                     #18
              17e0 de00  st   [y,x++]     7176  st([Y,Xpp])                     #19
              17e1 011d  ld   [$1d]       7177  ld([vTmp])                      #20
              17e2 ce00  st   [y,x]       7178  st([Y,X])                       #21
              17e3 0116  ld   [$16]       7179  ld([vPC])                       #22
              17e4 8001  adda $01         7180  adda(1)                         #23
              17e5 c216  st   [$16]       7181  st([vPC])                       #24
              17e6 1403  ld   $03,y       7182  ld(hi('REENTER'),Y)             #25
              17e7 e0cb  jmp  y,$cb       7183  jmp(Y,'REENTER')                #26
              17e8 00f1  ld   $f1         7184  ld(-30/2)                       #27
                                          7185
                                          7186  # DEEK+ implementation
                                          7187  label('deek+#13')
deek+#13:     17e9 1200  ld   ac,x        7188  ld(AC,X)                        #13
              17ea 0500  ld   [x]         7189  ld([X])                         #14 low byte deek address
              17eb c21d  st   [$1d]       7190  st([vTmp])                      #15
              17ec 8002  adda $02         7191  adda(2)                         #16
              17ed de00  st   [y,x++]     7192  st([Y,Xpp])                     #17
              17ee 0500  ld   [x]         7193  ld([X])                         #18 high byte deek address
              17ef 1600  ld   ac,y        7194  ld(AC,Y)                        #19
              17f0 111d  ld   [$1d],x     7195  ld([vTmp],X)                    #20
              17f1 0d00  ld   [y,x]       7196  ld([Y,X])                       #21
              17f2 de00  st   [y,x++]     7197  st([Y,Xpp])                     #22 X++
              17f3 c218  st   [$18]       7198  st([vAC])                       #23
              17f4 0d00  ld   [y,x]       7199  ld([Y,X])                       #24
              17f5 c219  st   [$19]       7200  st([vAC+1])                     #25
              17f6 1403  ld   $03,y       7201  ld(hi('NEXTY'),Y)               #26
              17f7 e000  jmp  y,$00       7202  jmp(Y,'NEXTY')                  #27
              17f8 00f1  ld   $f1         7203  ld(-30/2)                       #28
                                          7204
                                          7205
              17f9 0200  nop              7206  fillers(until=0xff)
              17fa 0200  nop
              17fb 0200  nop
              * 6 times
              17ff 0200  nop              7207  align(0x100, size=0x100)
                                          7208
                                          7209  #-----------------------------------------------------------------------
                                          7210  #       More vCPU instruction implementations, (0x1800)
                                          7211  #-----------------------------------------------------------------------
                                          7212
                                          7213  # SYS retry implementation
                                          7214  label('.sys#16')
.sys#16:      1800 0116  ld   [$16]       7215  ld([vPC])                       #16
              1801 a002  suba $02         7216  suba(2)                         #17
              1802 c216  st   [$16]       7217  st([vPC])                       #18
              1803 1403  ld   $03,y       7218  ld(hi('REENTER'),Y)             #19
              1804 e0cb  jmp  y,$cb       7219  jmp(Y,'REENTER')                #20
              1805 00f4  ld   $f4         7220  ld(-24/2)                       #21
                                          7221
                                          7222  # LUP return, no longer part of PEEK
                                          7223  label('lupReturn#19')
lupReturn#19: 1806 0000  ld   $00         7224  ld(0)                           #19
              1807 c219  st   [$19]       7225  st([vAC+1])                     #20
              1808 1403  ld   $03,y       7226  ld(hi('REENTER'),Y)             #21
              1809 e0cb  jmp  y,$cb       7227  jmp(Y,'REENTER')                #22
              180a 00f3  ld   $f3         7228  ld(-26/2)                       #23
                                          7229
                                          7230  # NOTB implementation
                                          7231  label('notb#13')
notb#13:      180b 1200  ld   ac,x        7232  ld(AC,X)                        #13 address of var
              180c 0500  ld   [x]         7233  ld([X])                         #14
              180d 60ff  xora $ff         7234  xora(255)                       #15
              180e c600  st   [x]         7235  st([X])                         #16
              180f 1403  ld   $03,y       7236  ld(hi('REENTER'),Y)             #17
              1810 e0cb  jmp  y,$cb       7237  jmp(Y,'REENTER')                #18
              1811 00f5  ld   $f5         7238  ld(-22/2)                       #19
                                          7239
                                          7240  # DOKE+ implementation
                                          7241  label('doke+#13')
doke+#13:     1812 1200  ld   ac,x        7242  ld(AC,X)                        #13
              1813 1400  ld   $00,y       7243  ld(0,Y)                         #14
              1814 0500  ld   [x]         7244  ld([X])                         #15 low byte poke address
              1815 c21d  st   [$1d]       7245  st([vTmp])                      #16
              1816 8002  adda $02         7246  adda(2)                         #17
              1817 de00  st   [y,x++]     7247  st([Y,Xpp])                     #18
              1818 0500  ld   [x]         7248  ld([X])                         #19 high byte poke address
              1819 1600  ld   ac,y        7249  ld(AC,Y)                        #20
              181a 111d  ld   [$1d],x     7250  ld([vTmp],X)                    #21
              181b 0118  ld   [$18]       7251  ld([vAC])                       #22
              181c de00  st   [y,x++]     7252  st([Y,Xpp])                     #23
              181d 0119  ld   [$19]       7253  ld([vAC+1])                     #24
              181e ce00  st   [y,x]       7254  st([Y,X])                       #25
              181f 1403  ld   $03,y       7255  ld(hi('NEXTY'),Y)               #26
              1820 e000  jmp  y,$00       7256  jmp(Y,'NEXTY')                  #27
              1821 00f1  ld   $f1         7257  ld(-30/2)                       #28
                                          7258
                                          7259  # XORI implementation
                                          7260  label('xori#13')
xori#13:      1822 6118  xora [$18]       7261  xora([vAC])                     #13
              1823 c218  st   [$18]       7262  st([vAC])                       #14
              1824 1403  ld   $03,y       7263  ld(hi('REENTER'),Y)             #15
              1825 e0cb  jmp  y,$cb       7264  jmp(Y,'REENTER')                #16
              1826 00f6  ld   $f6         7265  ld(-20/2)                       #17
                                          7266
                                          7267  # NOP implementation
                                          7268  label('nop#13')
nop#13:       1827 0116  ld   [$16]       7269  ld([vPC])                       #13
              1828 a001  suba $01         7270  suba(1)                         #14
              1829 c216  st   [$16]       7271  st([vPC])                       #15 vPC--
              182a 1403  ld   $03,y       7272  ld(hi('NEXTY'),Y)               #16
              182b e000  jmp  y,$00       7273  jmp(Y,'NEXTY')                  #17
              182c 00f6  ld   $f6         7274  ld(-20/2)                       #18
                                          7275
                                          7276  # BRA implementation
                                          7277  label('bra#13')
bra#13:       182d 1403  ld   $03,y       7278  ld(hi('REENTER'),Y)             #13
              182e e0cb  jmp  y,$cb       7279  jmp(Y,'REENTER')                #14
              182f 00f7  ld   $f7         7280  ld(-18/2)                       #15
                                          7281
                                          7282  # DBGE implementation
                                          7283  label('dbge#13')
dbge#13:      1830 1517  ld   [$17],y     7284  ld([vPC+1],Y)                   #13 vPC.hi
              1831 c21d  st   [$1d]       7285  st([vTmp])                      #14 branch offset
              1832 de00  st   [y,x++]     7286  st([Y,Xpp])                     #15 X++, address of counter
              1833 0d00  ld   [y,x]       7287  ld([Y,X])                       #16
              1834 1200  ld   ac,x        7288  ld(AC,X)                        #17 fetch counter
              1835 0500  ld   [x]         7289  ld([X])                         #18
              1836 a001  suba $01         7290  suba(1)                         #19 decrement counter
              1837 e83e  blt  .dbge#22    7291  blt('.dbge#22')                 #20 if < 0 BRA
              1838 c600  st   [x]         7292  st([X])                         #21
              1839 011d  ld   [$1d]       7293  ld([vTmp])                      #22
              183a c216  st   [$16]       7294  st([vPC])                       #23 BRA to branch offset
              183b 1403  ld   $03,y       7295  ld(hi('NEXTY'),Y)               #24
              183c e000  jmp  y,$00       7296  jmp(Y,'NEXTY')                  #25
              183d 00f2  ld   $f2         7297  ld(-28/2)                       #26
                                          7298  label('.dbge#22')
.dbge#22:     183e 0116  ld   [$16]       7299  ld([vPC])                       #22
              183f 8001  adda $01         7300  adda(1)                         #23
              1840 c216  st   [$16]       7301  st([vPC])                       #24 advance vPC by 1
              1841 1403  ld   $03,y       7302  ld(hi('REENTER'),Y)             #25
              1842 e0cb  jmp  y,$cb       7303  jmp(Y,'REENTER')                #26
              1843 00f1  ld   $f1         7304  ld(-30/2)                       #27
                                          7305
                                          7306  # LDNI implementation
                                          7307  label('ldni#13')
ldni#13:      1844 60ff  xora $ff         7308  xora(255)                       #13
              1845 8001  adda $01         7309  adda(1)                         #14
              1846 c218  st   [$18]       7310  st([vAC])                       #15
              1847 00ff  ld   $ff         7311  ld(255)                         #16
              1848 c219  st   [$19]       7312  st([vAC+1])                     #17
              1849 1403  ld   $03,y       7313  ld(hi('NEXTY'),Y)               #18
              184a e000  jmp  y,$00       7314  jmp(Y,'NEXTY')                  #19
              184b 00f5  ld   $f5         7315  ld(-22/2)                       #20
                                          7316
                                          7317  # ANDBK implementation
                                          7318  label('andbk#13')
andbk#13:     184c 1517  ld   [$17],y     7319  ld([vPC+1],Y)                   #13
              184d c21d  st   [$1d]       7320  st([vTmp])                      #14 immediate value
              184e de00  st   [y,x++]     7321  st([Y,Xpp])                     #15 X++
              184f 0d00  ld   [y,x]       7322  ld([Y,X])                       #16
              1850 1200  ld   ac,x        7323  ld(AC,X)                        #17 address of var
              1851 0500  ld   [x]         7324  ld([X])                         #18
              1852 211d  anda [$1d]       7325  anda([vTmp])                    #19
              1853 c218  st   [$18]       7326  st([vAC])                       #20
              1854 0000  ld   $00         7327  ld(0)                           #21
              1855 c219  st   [$19]       7328  st([vAC+1])                     #22 Store high result
              1856 0116  ld   [$16]       7329  ld([vPC])                       #23
              1857 8001  adda $01         7330  adda(1)                         #24
              1858 c216  st   [$16]       7331  st([vPC])                       #25 advance vPC by 1
              1859 1403  ld   $03,y       7332  ld(hi('NEXTY'),Y)               #26
              185a e000  jmp  y,$00       7333  jmp(Y,'NEXTY')                  #27
              185b 00f1  ld   $f1         7334  ld(-30/2)                       #28
                                          7335
                                          7336  # ORBK implementation
                                          7337  label('orbk#13')
orbk#13:      185c 1517  ld   [$17],y     7338  ld([vPC+1],Y)                   #13
              185d c21d  st   [$1d]       7339  st([vTmp])                      #14 immediate value
              185e de00  st   [y,x++]     7340  st([Y,Xpp])                     #15 X++
              185f 0d00  ld   [y,x]       7341  ld([Y,X])                       #16
              1860 1200  ld   ac,x        7342  ld(AC,X)                        #17 address of var
              1861 0500  ld   [x]         7343  ld([X])                         #18
              1862 411d  ora  [$1d]       7344  ora([vTmp])                     #19
              1863 c218  st   [$18]       7345  st([vAC])                       #20
              1864 0000  ld   $00         7346  ld(0)                           #21
              1865 c219  st   [$19]       7347  st([vAC+1])                     #22 Store high result
              1866 0116  ld   [$16]       7348  ld([vPC])                       #23
              1867 8001  adda $01         7349  adda(1)                         #24
              1868 c216  st   [$16]       7350  st([vPC])                       #25 advance vPC by 1
              1869 1403  ld   $03,y       7351  ld(hi('NEXTY'),Y)               #26
              186a e000  jmp  y,$00       7352  jmp(Y,'NEXTY')                  #27
              186b 00f1  ld   $f1         7353  ld(-30/2)                       #28
                                          7354
                                          7355  # XORBK implementation
                                          7356  label('xorbk#13')
xorbk#13:     186c 1517  ld   [$17],y     7357  ld([vPC+1],Y)                   #13
              186d c21d  st   [$1d]       7358  st([vTmp])                      #14 immediate value
              186e de00  st   [y,x++]     7359  st([Y,Xpp])                     #15 X++
              186f 0d00  ld   [y,x]       7360  ld([Y,X])                       #16
              1870 1200  ld   ac,x        7361  ld(AC,X)                        #17 address of var
              1871 0500  ld   [x]         7362  ld([X])                         #18
              1872 611d  xora [$1d]       7363  xora([vTmp])                    #19
              1873 c218  st   [$18]       7364  st([vAC])                       #20
              1874 0000  ld   $00         7365  ld(0)                           #21
              1875 c219  st   [$19]       7366  st([vAC+1])                     #22 Store high result
              1876 0116  ld   [$16]       7367  ld([vPC])                       #23
              1877 8001  adda $01         7368  adda(1)                         #24
              1878 c216  st   [$16]       7369  st([vPC])                       #25 advance vPC by 1
              1879 1403  ld   $03,y       7370  ld(hi('NEXTY'),Y)               #26
              187a e000  jmp  y,$00       7371  jmp(Y,'NEXTY')                  #27
              187b 00f1  ld   $f1         7372  ld(-30/2)                       #28
                                          7373
                                          7374  # CMPI implementation
                                          7375  label('cmpi#13')
cmpi#13:      187c c21d  st   [$1d]       7376  st([vTmp])                      #13 immediate value
              187d 00fd  ld   $fd         7377  ld(min(0,maxTicks-36/2))        #14
              187e 8115  adda [$15]       7378  adda([vTicks])                  #15
              187f e89c  blt  .cmpi#18    7379  blt('.cmpi#18')                 #16 not enough time left, so retry
              1880 1517  ld   [$17],y     7380  ld([vPC+1],Y)                   #17
              1881 011d  ld   [$1d]       7381  ld([vTmp])                      #18 immediate value
              1882 de00  st   [y,x++]     7382  st([Y,Xpp])                     #19 X++
              1883 0d00  ld   [y,x]       7383  ld([Y,X])                       #20 address of var
              1884 1200  ld   ac,x        7384  ld(AC,X)                        #21
              1885 0500  ld   [x]         7385  ld([X])                         #22 low byte of var
              1886 e892  blt  .cmpi#25    7386  bmi('.cmpi#25')                 #23
              1887 a11d  suba [$1d]       7387  suba([vTmp])                    #24
              1888 c218  st   [$18]       7388  st([vAC])                       #25 store low result
              1889 411d  ora  [$1d]       7389  ora([vTmp])                     #26
              188a 2080  anda $80         7390  anda(0x80)                      #27
              188b c219  st   [$19]       7391  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              188c 0116  ld   [$16]       7392  ld([vPC])                       #29
              188d 8001  adda $01         7393  adda(1)                         #30
              188e c216  st   [$16]       7394  st([vPC])                       #31 advance vPC by 1
              188f 1403  ld   $03,y       7395  ld(hi('NEXTY'),Y)               #32
              1890 e000  jmp  y,$00       7396  jmp(Y,'NEXTY')                  #33
              1891 00ee  ld   $ee         7397  ld(-36/2)                       #34
                                          7398  label('.cmpi#25')
.cmpi#25:     1892 c218  st   [$18]       7399  st([vAC])                       #25 store low result
              1893 211d  anda [$1d]       7400  anda([vTmp])                    #26
              1894 2080  anda $80         7401  anda(0x80)                      #27
              1895 c219  st   [$19]       7402  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              1896 0116  ld   [$16]       7403  ld([vPC])                       #29
              1897 8001  adda $01         7404  adda(1)                         #30
              1898 c216  st   [$16]       7405  st([vPC])                       #31 advance vPC by 1
              1899 1403  ld   $03,y       7406  ld(hi('NEXTY'),Y)               #32
              189a e000  jmp  y,$00       7407  jmp(Y,'NEXTY')                  #33
              189b 00ee  ld   $ee         7408  ld(-36/2)                       #34
                                          7409  label('.cmpi#18')
.cmpi#18:     189c 0116  ld   [$16]       7410  ld([vPC])                       #18 retry instruction
              189d a002  suba $02         7411  suba(2)                         #19
              189e c216  st   [$16]       7412  st([vPC])                       #20
              189f 1403  ld   $03,y       7413  ld(hi('REENTER'),Y)             #21
              18a0 e0cb  jmp  y,$cb       7414  jmp(Y,'REENTER')                #22
              18a1 00f3  ld   $f3         7415  ld(-26/2)                       #23
                                          7416
                                          7417  # JEQ implementation
                                          7418  label('jeq#13')
jeq#13:       18a2 1517  ld   [$17],y     7419  ld([vPC+1],Y)                   #13 vPC.hi
              18a3 0119  ld   [$19]       7420  ld([vAC+1])                     #14
              18a4 4118  ora  [$18]       7421  ora([vAC])                      #15
              18a5 f0ad  beq  .jeq#18     7422  beq('.jeq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              18a6 0d00  ld   [y,x]       7423  ld([Y,X])                       #17 lo address of jump destination
              18a7 0116  ld   [$16]       7424  ld([vPC])                       #18
              18a8 8001  adda $01         7425  adda(1)                         #19
              18a9 c216  st   [$16]       7426  st([vPC])                       #20
              18aa 1403  ld   $03,y       7427  ld(hi('REENTER'),Y)             #21
              18ab e0cb  jmp  y,$cb       7428  jmp(Y,'REENTER')                #22
              18ac 00f3  ld   $f3         7429  ld(-26/2)                       #23
                                          7430  label('.jeq#18')
.jeq#18:      18ad c216  st   [$16]       7431  st([vPC])                       #18
              18ae de00  st   [y,x++]     7432  st([Y,Xpp])                     #19
              18af 0d00  ld   [y,x]       7433  ld([Y,X])                       #20 hi address of jump destination
              18b0 c217  st   [$17]       7434  st([vPC+1])                     #21
              18b1 1403  ld   $03,y       7435  ld(hi('NEXTY'),Y)               #22
              18b2 e000  jmp  y,$00       7436  jmp(Y,'NEXTY')                  #23
              18b3 00f3  ld   $f3         7437  ld(-26/2)                       #24
                                          7438
                                          7439  # JNE implementation
                                          7440  label('jne#13')
jne#13:       18b4 1517  ld   [$17],y     7441  ld([vPC+1],Y)                   #13 vPC.hi
              18b5 0119  ld   [$19]       7442  ld([vAC+1])                     #14
              18b6 4118  ora  [$18]       7443  ora([vAC])                      #15
              18b7 ecbf  bne  .jne#18     7444  bne('.jne#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              18b8 0d00  ld   [y,x]       7445  ld([Y,X])                       #17 address of branch destination
              18b9 0116  ld   [$16]       7446  ld([vPC])                       #18
              18ba 8001  adda $01         7447  adda(1)                         #19
              18bb c216  st   [$16]       7448  st([vPC])                       #20
              18bc 1403  ld   $03,y       7449  ld(hi('REENTER'),Y)             #21
              18bd e0cb  jmp  y,$cb       7450  jmp(Y,'REENTER')                #22
              18be 00f3  ld   $f3         7451  ld(-26/2)                       #23
                                          7452  label('.jne#18')
.jne#18:      18bf c216  st   [$16]       7453  st([vPC])                       #18
              18c0 de00  st   [y,x++]     7454  st([Y,Xpp])                     #19
              18c1 0d00  ld   [y,x]       7455  ld([Y,X])                       #20 hi address of jump destination
              18c2 c217  st   [$17]       7456  st([vPC+1])                     #21
              18c3 1403  ld   $03,y       7457  ld(hi('NEXTY'),Y)               #22
              18c4 e000  jmp  y,$00       7458  jmp(Y,'NEXTY')                  #23
              18c5 00f3  ld   $f3         7459  ld(-26/2)                       #24
                                          7460
                                          7461  # JLT implementation
                                          7462  label('jlt#13')
jlt#13:       18c6 1517  ld   [$17],y     7463  ld([vPC+1],Y)                   #13 vPC.hi
              18c7 0119  ld   [$19]       7464  ld([vAC+1])                     #14
              18c8 e8d0  blt  .jlt#17     7465  blt('.jlt#17')                  #15 if vAC.hi < 0
              18c9 0d00  ld   [y,x]       7466  ld([Y,X])                       #16 address of branch destination
              18ca 0116  ld   [$16]       7467  ld([vPC])                       #17
              18cb 8001  adda $01         7468  adda(1)                         #18
              18cc c216  st   [$16]       7469  st([vPC])                       #19
              18cd 1403  ld   $03,y       7470  ld(hi('NEXTY'),Y)               #20
              18ce e000  jmp  y,$00       7471  jmp(Y,'NEXTY')                  #21
              18cf 00f4  ld   $f4         7472  ld(-24/2)                       #22
                                          7473  label('.jlt#17')
.jlt#17:      18d0 c216  st   [$16]       7474  st([vPC])                       #17
              18d1 de00  st   [y,x++]     7475  st([Y,Xpp])                     #18
              18d2 0d00  ld   [y,x]       7476  ld([Y,X])                       #19 hi address of jump destination
              18d3 c217  st   [$17]       7477  st([vPC+1])                     #20
              18d4 1403  ld   $03,y       7478  ld(hi('REENTER'),Y)             #21
              18d5 e0cb  jmp  y,$cb       7479  jmp(Y,'REENTER')                #22
              18d6 00f3  ld   $f3         7480  ld(-26/2)                       #23
                                          7481
                                          7482  # BBEQ implementation
                                          7483  #label('bbeq#13')
                                          7484  #ld([vPC+1],Y)                   #13 vPC.hi
                                          7485  #st([vTmp])                      #14 branch offset
                                          7486  #st([Y,Xpp])                     #15 X++
                                          7487  #ld([Y,X])                       #16
                                          7488  #ld(AC,X)                        #17
                                          7489  #ld([X])                         #18 low byte of var
                                          7490  #beq('.bbeq#21')                 #19
                                          7491  #ld([vPC])                       #20
                                          7492  #adda(1)                         #21
                                          7493  #st([vPC])                       #22 advance vPC by 1
                                          7494  #ld(hi('REENTER'),Y)             #23
                                          7495  #jmp(Y,'REENTER')                #24
                                          7496  #ld(-28/2)                       #25
                                          7497  #label('.bbeq#21')
                                          7498  #ld([vTmp])                      #21
                                          7499  #st([vPC])                       #22 branch to offset
                                          7500  #ld(hi('REENTER'),Y)             #23
                                          7501  #jmp(Y,'REENTER')                #24
                                          7502  #ld(-28/2)                       #25
                                          7503
                                          7504  # BWEQ implementation
                                          7505  #label('bweq#13')
                                          7506  #ld([vPC+1],Y)                   #13 vPC.hi
                                          7507  #st([vTmp])                      #14 branch offset
                                          7508  #st([Y,Xpp])                     #15 X++
                                          7509  #ld([Y,X])                       #16
                                          7510  #ld(AC,X)                        #17
                                          7511  #ld([X])                         #18 low byte of var
                                          7512  #ld(0,Y)                         #19
                                          7513  #st([Y,Xpp])                     #20 X++
                                          7514  #ora([Y,X])                      #21 or with high byte of var
                                          7515  #beq('.bweq#24')                 #22
                                          7516  #ld([vPC])                       #23
                                          7517  #adda(1)                         #24
                                          7518  #st([vPC])                       #25 advance vPC by 1
                                          7519  #ld(hi('NEXTY'),Y)               #26
                                          7520  #jmp(Y,'NEXTY')                  #27
                                          7521  #ld(-30/2)                       #28
                                          7522  #label('.bweq#24')
                                          7523  #ld([vTmp])                      #24
                                          7524  #st([vPC])                       #25 branch to offset
                                          7525  #ld(hi('NEXTY'),Y)               #26
                                          7526  #jmp(Y,'NEXTY')                  #27
                                          7527  #ld(-30/2)                       #28
                                          7528
                                          7529
              18d7 0200  nop              7530  fillers(until=0xff)
              18d8 0200  nop
              18d9 0200  nop
              * 40 times
              18ff 0200  nop              7531  align(0x100, size=0x100)
                                          7532
                                          7533  #-----------------------------------------------------------------------
                                          7534  #       More sys implementations, (0x1900)
                                          7535  #-----------------------------------------------------------------------
                                          7536  # sys_Multiply_s16, sum:s16 = x:s16 * y:s16
                                          7537  # x:args0:1 y:args2:3 sum:args4:5 mask:args6:7
                                          7538  label('sys_Multiply_s16')
sys_Multiply_s16:
              1900 2126  anda [$26]       7539  anda([sysArgs+2])               #18,
              1901 c218  st   [$18]       7540  st([vAC])                       #19, AC.lo = mask.lo AND y.lo
              1902 012b  ld   [$2b]       7541  ld([sysArgs+7])                 #20, load mask.hio
              1903 2127  anda [$27]       7542  anda([sysArgs+3])               #21,
              1904 c219  st   [$19]       7543  st([vAC+1])                     #22, AC.hi = mask.hi AND y.hi
              1905 4118  ora  [$18]       7544  ora([vAC])                      #23,
                                          7545  beq('.sys_ms16_26')             #24, AC = 0 then skip
              1906 f00e  beq  .sys_ms16_26
              1907 0128  ld   [$28]       7546  ld([sysArgs+4])                 #25, load sum.lo
              1908 8124  adda [$24]       7547  adda([sysArgs+0])               #26, load x.lo
              1909 c228  st   [$28]       7548  st([sysArgs+4])                 #27, sum.lo = sum.lo + x.lo
                                          7549  blt('.sys_ms16_30')             #28, check for carry
              190a e810  blt  .sys_ms16_30
              190b a124  suba [$24]       7550  suba([sysArgs+0])               #29, get original sum.lo back
                                          7551  bra('.sys_ms16_32')             #30,
              190c fc12  bra  .sys_ms16_32
              190d 4124  ora  [$24]       7552  ora([sysArgs+0])                #31, carry in bit 7
                                          7553
                                          7554  label('.sys_ms16_26')
                                          7555  bra('.sys_ms16_28')             #26,
.sys_ms16_26: 190e fc18  bra  .sys_ms16_28
              190f 00e4  ld   $e4         7556  ld(-56/2)                       #27, no accumulate sys ticks
                                          7557
                                          7558  label('.sys_ms16_30')
.sys_ms16_30: 1910 2124  anda [$24]       7559  anda([sysArgs+0])               #30, carry in bit 7
              1911 0200  nop              7560  nop()                           #31,
                                          7561
                                          7562  label('.sys_ms16_32')
.sys_ms16_32: 1912 3080  anda $80,x       7563  anda(0x80,X)                    #32,
              1913 0500  ld   [x]         7564  ld([X])                         #33, move carry to bit 0
              1914 8129  adda [$29]       7565  adda([sysArgs+5])               #34,
              1915 8125  adda [$25]       7566  adda([sysArgs+1])               #35,
              1916 c229  st   [$29]       7567  st([sysArgs+5])                 #36, sum.hi = sum.hi + x.hi
              1917 00df  ld   $df         7568  ld(-66/2)                       #37, accumulate sys ticks
                                          7569
                                          7570  label('.sys_ms16_28')
.sys_ms16_28: 1918 c21d  st   [$1d]       7571  st([vTmp])                      #28,#38,
              1919 0124  ld   [$24]       7572  ld([sysArgs+0])                 #29,#39, AC = x.lo
              191a 3080  anda $80,x       7573  anda(0x80,X)                    #30,#40, X = AC & 0x80
              191b 8124  adda [$24]       7574  adda([sysArgs+0])               #31,#41, AC = x.lo <<1
              191c c224  st   [$24]       7575  st([sysArgs+0])                 #32,#42, x.lo = AC
              191d 0500  ld   [x]         7576  ld([X])                         #33,#43, AC = X >>7
              191e 8125  adda [$25]       7577  adda([sysArgs+1])               #34,#44,
              191f 8125  adda [$25]       7578  adda([sysArgs+1])               #35,#45,
              1920 c225  st   [$25]       7579  st([sysArgs+1])                 #36,#46, x.hi = x.hi <<1 + AC
              1921 012a  ld   [$2a]       7580  ld([sysArgs+6])                 #37,#47, AC = mask.lo
              1922 3080  anda $80,x       7581  anda(0x80,X)                    #38,#48, X = AC & 0x80
              1923 812a  adda [$2a]       7582  adda([sysArgs+6])               #39,#49, AC = mask.lo <<1
              1924 c22a  st   [$2a]       7583  st([sysArgs+6])                 #40,#50, mask.lo = AC
              1925 0500  ld   [x]         7584  ld([X])                         #41,#51, AC = X >>7
              1926 812b  adda [$2b]       7585  adda([sysArgs+7])               #42,#52,
              1927 812b  adda [$2b]       7586  adda([sysArgs+7])               #43,#53,
              1928 c22b  st   [$2b]       7587  st([sysArgs+7])                 #44,#54, mask.hi = mask.hi <<1 + AC
              1929 412a  ora  [$2a]       7588  ora([sysArgs+6])                #45,#55,
                                          7589  beq('.sys_ms16_48')             #46,#56, if mask = 0
              192a f032  beq  .sys_ms16_48
              192b 0128  ld   [$28]       7590  ld([sysArgs+4])                 #47,#57
              192c 0116  ld   [$16]       7591  ld([vPC])                       #48,#58,
              192d a002  suba $02         7592  suba(2)                         #49,#59,
              192e c216  st   [$16]       7593  st([vPC])                       #50,#60, restart SYS function
              192f 1403  ld   $03,y       7594  ld(hi('REENTER'),Y)             #51,#61,
              1930 e0cb  jmp  y,$cb       7595  jmp(Y,'REENTER')                #52,#62,
              1931 011d  ld   [$1d]       7596  ld([vTmp])                      #53,#63,
                                          7597
                                          7598  label('.sys_ms16_48')
.sys_ms16_48: 1932 c218  st   [$18]       7599  st([vAC])                       #48,#58,
              1933 0129  ld   [$29]       7600  ld([sysArgs+5])                 #49,#59,
              1934 c219  st   [$19]       7601  st([vAC+1])                     #50,#60,
              1935 1403  ld   $03,y       7602  ld(hi('REENTER'),Y)             #51,#61,
              1936 e0cb  jmp  y,$cb       7603  jmp(Y,'REENTER')                #52,#62,
              1937 011d  ld   [$1d]       7604  ld([vTmp])                      #53,#63,
                                          7605
                                          7606
                                          7607  #-----------------------------------------------------------------------
                                          7608  # sys_Divide_s16, x:s16 = x:s16 / y:s16, rem:s16 = x:s16 % y:s16
                                          7609  # x:args0:1 y:args2:3 rem:args4:5 mask:args6:7
                                          7610  label('sys_Divide_s16')
sys_Divide_s16:
              1938 3080  anda $80,x       7611  anda(0x80,X)                    #18, X = AC & 0x80
              1939 8128  adda [$28]       7612  adda([sysArgs+4])               #19, AC = rem.lo <<1
              193a c228  st   [$28]       7613  st([sysArgs+4])                 #20, rem.lo = AC
              193b 0500  ld   [x]         7614  ld([X])                         #21, AC = X >>7
              193c 8129  adda [$29]       7615  adda([sysArgs+5])               #22,
              193d 8129  adda [$29]       7616  adda([sysArgs+5])               #23,
              193e c229  st   [$29]       7617  st([sysArgs+5])                 #24, rem.hi = rem.hi <<1 + AC
              193f 0125  ld   [$25]       7618  ld([sysArgs+1])                 #25,
              1940 2080  anda $80         7619  anda(0x80)                      #26, sign of x
                                          7620  beq('.sys_ds16_29')             #27, if x >= 0
              1941 f046  beq  .sys_ds16_29
              1942 0128  ld   [$28]       7621  ld([sysArgs+4])                 #28,
              1943 8001  adda $01         7622  adda(1)                         #29,
                                          7623  bra('.sys_ds16_32')             #30,
              1944 fc49  bra  .sys_ds16_32
              1945 c228  st   [$28]       7624  st([sysArgs+4])                 #31, rem.lo++
                                          7625
                                          7626  label('.sys_ds16_29')
.sys_ds16_29: 1946 0200  nop              7627  nop()                           #29
              1947 0200  nop              7628  nop()                           #30
              1948 0200  nop              7629  nop()                           #31
                                          7630
                                          7631  label('.sys_ds16_32')
.sys_ds16_32: 1949 0124  ld   [$24]       7632  ld([sysArgs+0])                 #32, AC = x.lo
              194a 3080  anda $80,x       7633  anda(0x80,X)                    #33, X = AC & 0x80
              194b 8124  adda [$24]       7634  adda([sysArgs+0])               #34, AC = x.lo <<1
              194c c224  st   [$24]       7635  st([sysArgs+0])                 #35, x.lo = AC
              194d 0500  ld   [x]         7636  ld([X])                         #36, AC = X >>7
              194e 8125  adda [$25]       7637  adda([sysArgs+1])               #37,
              194f 8125  adda [$25]       7638  adda([sysArgs+1])               #38,
              1950 c225  st   [$25]       7639  st([sysArgs+1])                 #39, x.hi = x.hi <<1 + AC
                                          7640
              1951 0128  ld   [$28]       7641  ld([sysArgs+4])                 #40, load rem.lo
                                          7642  blt('.sys_ds16_43')             #41, check for borrow
              1952 e857  blt  .sys_ds16_43
              1953 a126  suba [$26]       7643  suba([sysArgs+2])               #42,
              1954 c218  st   [$18]       7644  st([vAC])                       #43, vAC.lo = rem.lo - y.lo
                                          7645  bra('.sys_ds16_46')             #44,
              1955 fc5a  bra  .sys_ds16_46
              1956 4126  ora  [$26]       7646  ora([sysArgs+2])                #45,
                                          7647
                                          7648  label('.sys_ds16_43')
.sys_ds16_43: 1957 c218  st   [$18]       7649  st([vAC])                       #43,
              1958 2126  anda [$26]       7650  anda([sysArgs+2])               #44,
              1959 0200  nop              7651  nop()                           #45,
                                          7652
                                          7653  label('.sys_ds16_46')
.sys_ds16_46: 195a 3080  anda $80,x       7654  anda(0x80,X)                    #46, move borrow to bit 0
              195b 0129  ld   [$29]       7655  ld([sysArgs+5])                 #47, load rem.hi
              195c a500  suba [x]         7656  suba([X])                       #48,
              195d a127  suba [$27]       7657  suba([sysArgs+3])               #49,
              195e c219  st   [$19]       7658  st([vAC+1])                     #50, vAC.hi = rem.hi - y.hi
                                          7659  blt('.sys_ds16_53')             #51,
              195f e869  blt  .sys_ds16_53
              1960 00dc  ld   $dc         7660  ld(-72/2)                       #52
              1961 0118  ld   [$18]       7661  ld([vAC])                       #53,
              1962 c228  st   [$28]       7662  st([sysArgs+4])                 #54,
              1963 0119  ld   [$19]       7663  ld([vAC+1])                     #55,
              1964 c229  st   [$29]       7664  st([sysArgs+5])                 #56, rem = vAC
              1965 0124  ld   [$24]       7665  ld([sysArgs+0])                 #57,
              1966 8001  adda $01         7666  adda(1)                         #58,
              1967 c224  st   [$24]       7667  st([sysArgs+0])                 #59, x.lo++
              1968 00d8  ld   $d8         7668  ld(-80/2)                       #60,
                                          7669
                                          7670  label('.sys_ds16_53')
.sys_ds16_53: 1969 c21d  st   [$1d]       7671  st([vTmp])                      #53, #61,
              196a 012a  ld   [$2a]       7672  ld([sysArgs+6])                 #54, #62, AC = mask.lo
              196b 3080  anda $80,x       7673  anda(0x80,X)                    #55, #63, X = AC & 0x80
              196c 812a  adda [$2a]       7674  adda([sysArgs+6])               #56, #64, AC = mask.lo <<1
              196d c22a  st   [$2a]       7675  st([sysArgs+6])                 #57, #65, mask.lo = AC
              196e 0500  ld   [x]         7676  ld([X])                         #58, #66, AC = X >>7
              196f 812b  adda [$2b]       7677  adda([sysArgs+7])               #59, #67,
              1970 812b  adda [$2b]       7678  adda([sysArgs+7])               #60, #68,
              1971 c22b  st   [$2b]       7679  st([sysArgs+7])                 #61, #69, mask.hi = mask.hi <<1 + AC
              1972 412a  ora  [$2a]       7680  ora([sysArgs+6])                #62, #70,
                                          7681  bne('.sys_ds16_65')             #63, #71,
              1973 ec7a  bne  .sys_ds16_65
              1974 0116  ld   [$16]       7682  ld([vPC])                       #64, #72,
              1975 0200  nop              7683  nop()                           #65, #73,
              1976 0200  nop              7684  nop()                           #66, #74,
              1977 1403  ld   $03,y       7685  ld(hi('REENTER'),Y)             #67, #75,
              1978 e0cb  jmp  y,$cb       7686  jmp(Y,'REENTER')                #68, #76,
              1979 011d  ld   [$1d]       7687  ld([vTmp])                      #69, #77,
                                          7688
                                          7689  label('.sys_ds16_65')
.sys_ds16_65: 197a a002  suba $02         7690  suba(2)                         #65, #73,
              197b c216  st   [$16]       7691  st([vPC])                       #66, #74, restart SYS function
              197c 1403  ld   $03,y       7692  ld(hi('REENTER'),Y)             #67, #75,
              197d e0cb  jmp  y,$cb       7693  jmp(Y,'REENTER')                #68, #76,
              197e 011d  ld   [$1d]       7694  ld([vTmp])                      #69, #77,
                                          7695
                                          7696
                                          7697  #-----------------------------------------------------------------------
                                          7698  # sys_DrawLine
                                          7699  label('sys_DrawLine')
sys_DrawLine: 197f 1182  ld   [$82],x     7700  ld([0x82],X)                    #18, X = [xy1].lo
              1980 1583  ld   [$83],y     7701  ld([0x83],Y)                    #19, Y = [xy1].hi
              1981 ce00  st   [y,x]       7702  st([Y,X])                       #20, [Y, X] = fgColour
              1982 1184  ld   [$84],x     7703  ld([0x84],X)                    #21, X = [xy2].lo
              1983 1585  ld   [$85],y     7704  ld([0x85],Y)                    #22, Y = [xy2].hi
              1984 ce00  st   [y,x]       7705  st([Y,X])                       #23, [Y, X] = fgColour
                                          7706
              1985 01a0  ld   [$a0]       7707  ld([0xA0])                      #24, num.lo
              1986 819c  adda [$9c]       7708  adda([0x9C])                    #25, sy.lo
              1987 c2a0  st   [$a0]       7709  st([0xA0])                      #26, num.lo = num.lo + sy.lo
                                          7710  blt('.sys_drawl_29')            #27, check for carry
              1988 e88c  blt  .sys_drawl_29
              1989 a19c  suba [$9c]       7711  suba([0x9C])                    #28, get original num.lo back
                                          7712  bra('.sys_drawl_31')            #29,
              198a fc8e  bra  .sys_drawl_31
              198b 419c  ora  [$9c]       7713  ora([0x9C])                     #30, carry in bit 7
                                          7714
                                          7715  label('.sys_drawl_29')
.sys_drawl_29:
              198c 219c  anda [$9c]       7716  anda([0x9C])                    #29, carry in bit 7
              198d 0200  nop              7717  nop()                           #30,
                                          7718
                                          7719  label('.sys_drawl_31')
.sys_drawl_31:
              198e 3080  anda $80,x       7720  anda(0x80,X)                    #31,
              198f 0500  ld   [x]         7721  ld([X])                         #32, move carry to bit 0
              1990 81a1  adda [$a1]       7722  adda([0xA1])                    #33,
              1991 819d  adda [$9d]       7723  adda([0x9D])                    #34,
              1992 c2a1  st   [$a1]       7724  st([0xA1])                      #35, num.hi = num.hi + sy.hi
                                          7725
              1993 01a0  ld   [$a0]       7726  ld([0xA0])                      #36, num.lo
                                          7727  blt('.sys_drawl_39')            #37, check for borrow
              1994 e899  blt  .sys_drawl_39
              1995 a19a  suba [$9a]       7728  suba([0x9A])                    #38, sx.lo
              1996 c218  st   [$18]       7729  st([vAC])                       #39, vAC.lo = num.lo - sx.lo
                                          7730  bra('.sys_drawl_42')            #40,
              1997 fc9c  bra  .sys_drawl_42
              1998 419a  ora  [$9a]       7731  ora([0x9A])                     #41,
                                          7732
                                          7733  label('.sys_drawl_39')
.sys_drawl_39:
              1999 c218  st   [$18]       7734  st([vAC])                       #39,
              199a 219a  anda [$9a]       7735  anda([0x9A])                    #40,
              199b 0200  nop              7736  nop()                           #41,
                                          7737
                                          7738  label('.sys_drawl_42')
.sys_drawl_42:
              199c 3080  anda $80,x       7739  anda(0x80,X)                    #42, move borrow to bit 0
              199d 01a1  ld   [$a1]       7740  ld([0xA1])                      #43, num.hi
              199e a500  suba [x]         7741  suba([X])                       #44,
              199f a19b  suba [$9b]       7742  suba([0x9B])                    #45,
                                          7743  blt('.sys_drawl_48')            #46,
              19a0 e8cf  blt  .sys_drawl_48
              19a1 c219  st   [$19]       7744  st([vAC+1])                     #47, vAC.hi = num.hi - sx.hi
              19a2 0118  ld   [$18]       7745  ld([vAC])                       #48,
              19a3 c2a0  st   [$a0]       7746  st([0xA0])                      #49,
              19a4 0119  ld   [$19]       7747  ld([vAC+1])                     #50,
              19a5 c2a1  st   [$a1]       7748  st([0xA1])                      #51, num = vAC
                                          7749
              19a6 0182  ld   [$82]       7750  ld([0x82])                      #52, xy1.lo
              19a7 8186  adda [$86]       7751  adda([0x86])                    #53, dxy1.lo
              19a8 c282  st   [$82]       7752  st([0x82])                      #54, xy1.lo = xy1.lo + dxy1.lo
                                          7753  blt('.sys_drawl_57')            #55, check for carry
              19a9 e8ad  blt  .sys_drawl_57
              19aa a186  suba [$86]       7754  suba([0x86])                    #56, get original xy1.lo back
                                          7755  bra('.sys_drawl_59')            #57,
              19ab fcaf  bra  .sys_drawl_59
              19ac 4186  ora  [$86]       7756  ora([0x86])                     #58, carry in bit 7
                                          7757
                                          7758  label('.sys_drawl_57')
.sys_drawl_57:
              19ad 2186  anda [$86]       7759  anda([0x86])                    #57, carry in bit 7
              19ae 0200  nop              7760  nop()                           #58,
                                          7761
                                          7762  label('.sys_drawl_59')
.sys_drawl_59:
              19af 3080  anda $80,x       7763  anda(0x80,X)                    #59,
              19b0 0500  ld   [x]         7764  ld([X])                         #60, move carry to bit 0
              19b1 8183  adda [$83]       7765  adda([0x83])                    #61,
              19b2 8187  adda [$87]       7766  adda([0x87])                    #62,
              19b3 c283  st   [$83]       7767  st([0x83])                      #63, xy1.hi = xy1.hi + dxy1.hi
                                          7768
              19b4 0184  ld   [$84]       7769  ld([0x84])                      #64, xy2.lo
                                          7770  blt('.sys_drawl_67')            #65, check for borrow
              19b5 e8ba  blt  .sys_drawl_67
              19b6 a186  suba [$86]       7771  suba([0x86])                    #66, dxy1.lo
              19b7 c284  st   [$84]       7772  st([0x84])                      #67, xy2.lo = xy2.lo - dxy1.lo
                                          7773  bra('.sys_drawl_70')            #68,
              19b8 fcbd  bra  .sys_drawl_70
              19b9 4186  ora  [$86]       7774  ora([0x86])                     #69,
                                          7775
                                          7776  label('.sys_drawl_67')
.sys_drawl_67:
              19ba c284  st   [$84]       7777  st([0x84])                      #67,
              19bb 2186  anda [$86]       7778  anda([0x86])                    #68,
              19bc 0200  nop              7779  nop()                           #69,
                                          7780
                                          7781  label('.sys_drawl_70')
.sys_drawl_70:
              19bd 3080  anda $80,x       7782  anda(0x80,X)                    #70, move borrow to bit 0
              19be 0185  ld   [$85]       7783  ld([0x85])                      #71, xy2.hi
              19bf a500  suba [x]         7784  suba([X])                       #72,
              19c0 a187  suba [$87]       7785  suba([0x87])                    #73,
              19c1 c285  st   [$85]       7786  st([0x85])                      #74, xy2.hi = xy2.hi - dxy1.hi
                                          7787
              19c2 019e  ld   [$9e]       7788  ld([0x9E])                      #75,
              19c3 a001  suba $01         7789  suba(1)                         #76,
                                          7790  bne('.sys_drawl_79')            #77,
              19c4 ecc9  bne  .sys_drawl_79
              19c5 c29e  st   [$9e]       7791  st([0x9E])                      #78, drawLine_count--
              19c6 1403  ld   $03,y       7792  ld(hi('REENTER'),Y)             #79,
              19c7 e0cb  jmp  y,$cb       7793  jmp(Y,'REENTER')                #80,
              19c8 00d6  ld   $d6         7794  ld(-84/2)                       #81,
                                          7795
                                          7796  label('.sys_drawl_79')
.sys_drawl_79:
              19c9 0116  ld   [$16]       7797  ld([vPC])                       #79,
              19ca a002  suba $02         7798  suba(2)                         #80,
              19cb c216  st   [$16]       7799  st([vPC])                       #81, restart
              19cc 1403  ld   $03,y       7800  ld(hi('NEXTY'),Y)               #82,
              19cd e000  jmp  y,$00       7801  jmp(Y,'NEXTY')                  #83,
              19ce 00d5  ld   $d5         7802  ld(-86/2)                       #84,
                                          7803
                                          7804  label('.sys_drawl_48')
.sys_drawl_48:
              19cf 0182  ld   [$82]       7805  ld([0x82])                      #48, xy1.lo
              19d0 8188  adda [$88]       7806  adda([0x88])                    #49, dxy2.lo
              19d1 c282  st   [$82]       7807  st([0x82])                      #50, xy1.lo = xy1.lo + dxy2.lo
                                          7808  blt('.sys_drawl_53')            #51, check for carry
              19d2 e8d6  blt  .sys_drawl_53
              19d3 a188  suba [$88]       7809  suba([0x88])                    #52, get original xy1.lo back
                                          7810  bra('.sys_drawl_55')            #53,
              19d4 fcd8  bra  .sys_drawl_55
              19d5 4188  ora  [$88]       7811  ora([0x88])                     #54, carry in bit 7
                                          7812
                                          7813  label('.sys_drawl_53')
.sys_drawl_53:
              19d6 2188  anda [$88]       7814  anda([0x88])                    #53, carry in bit 7
              19d7 0200  nop              7815  nop()                           #54,
                                          7816
                                          7817  label('.sys_drawl_55')
.sys_drawl_55:
              19d8 3080  anda $80,x       7818  anda(0x80,X)                    #55,
              19d9 0500  ld   [x]         7819  ld([X])                         #56, move carry to bit 0
              19da 8183  adda [$83]       7820  adda([0x83])                    #57,
              19db 8189  adda [$89]       7821  adda([0x89])                    #58,
              19dc c283  st   [$83]       7822  st([0x83])                      #59, xy1.hi = xy1.hi + dxy2.hi
                                          7823
              19dd 0184  ld   [$84]       7824  ld([0x84])                      #60, xy2.lo
                                          7825  blt('.sys_drawl_63')            #61, check for borrow
              19de e8e3  blt  .sys_drawl_63
              19df a188  suba [$88]       7826  suba([0x88])                    #62, dxy2.lo
              19e0 c284  st   [$84]       7827  st([0x84])                      #63, xy2.lo = xy2.lo - dxy2.lo
                                          7828  bra('.sys_drawl_66')            #64,
              19e1 fce6  bra  .sys_drawl_66
              19e2 4188  ora  [$88]       7829  ora([0x88])                     #65,
                                          7830
                                          7831  label('.sys_drawl_63')
.sys_drawl_63:
              19e3 c284  st   [$84]       7832  st([0x84])                      #63,
              19e4 2188  anda [$88]       7833  anda([0x88])                    #64,
              19e5 0200  nop              7834  nop()                           #65,
                                          7835
                                          7836  label('.sys_drawl_66')
.sys_drawl_66:
              19e6 3080  anda $80,x       7837  anda(0x80,X)                    #66, move borrow to bit 0
              19e7 0185  ld   [$85]       7838  ld([0x85])                      #67, xy2.hi
              19e8 a500  suba [x]         7839  suba([X])                       #68,
              19e9 a189  suba [$89]       7840  suba([0x89])                    #69,
              19ea c285  st   [$85]       7841  st([0x85])                      #70, xy2.hi = xy2.hi - dxy2.hi
                                          7842
              19eb 019e  ld   [$9e]       7843  ld([0x9E])                      #71,
              19ec a001  suba $01         7844  suba(1)                         #72,
                                          7845  bne('.sys_drawl_75')            #73,
              19ed ecf2  bne  .sys_drawl_75
              19ee c29e  st   [$9e]       7846  st([0x9E])                      #74, drawLine_count--
              19ef 1403  ld   $03,y       7847  ld(hi('REENTER'),Y)             #75,
              19f0 e0cb  jmp  y,$cb       7848  jmp(Y,'REENTER')                #76,
              19f1 00d8  ld   $d8         7849  ld(-80/2)                       #77,
                                          7850
                                          7851  label('.sys_drawl_75')
.sys_drawl_75:
              19f2 0116  ld   [$16]       7852  ld([vPC])                       #75,
              19f3 a002  suba $02         7853  suba(2)                         #76,
              19f4 c216  st   [$16]       7854  st([vPC])                       #77, restart
              19f5 1403  ld   $03,y       7855  ld(hi('NEXTY'),Y)               #78,
              19f6 e000  jmp  y,$00       7856  jmp(Y,'NEXTY')                  #79,
              19f7 00d7  ld   $d7         7857  ld(-82/2)                       #80,
                                          7858
                                          7859
              19f8 0200  nop              7860  fillers(until=0xff)
              19f9 0200  nop
              19fa 0200  nop
              * 7 times
              19ff 0200  nop              7861  align(0x100, size=0x100)
                                          7862
                                          7863  #-----------------------------------------------------------------------
                                          7864  #       More sys implementations, (0x1A00)
                                          7865  #-----------------------------------------------------------------------
                                          7866
                                          7867
                                          7868  # sys_WaitVBlank
                                          7869  label('sys_WaitVBlank')
sys_WaitVBlank:
              1a00 60b3  xora $b3         7870  xora(videoYline0)               #18,
                                          7871  beq('.sys_waitvblank_21')       #19,
              1a01 f008  beq  .sys_waitvblank_21
              1a02 0116  ld   [$16]       7872  ld([vPC])                       #20,
              1a03 a002  suba $02         7873  suba(2)                         #21,
              1a04 c216  st   [$16]       7874  st([vPC])                       #22, restart
              1a05 1403  ld   $03,y       7875  ld(hi('REENTER'),Y)             #23,
              1a06 e0cb  jmp  y,$cb       7876  jmp(Y,'REENTER')                #24,
              1a07 00f2  ld   $f2         7877  ld(-28/2)                       #25,
                                          7878  label('.sys_waitvblank_21')
.sys_waitvblank_21:
              1a08 1403  ld   $03,y       7879  ld(hi('REENTER'),Y)             #21,
              1a09 e0cb  jmp  y,$cb       7880  jmp(Y,'REENTER')                #22,
              1a0a 00f2  ld   $f2         7881  ld(-28/2)                       #23,
                                          7882
                                          7883
                                          7884  # sys_SortUint8Array, sysArgs0,1=array, sysArg2=i, sysArg3=j, sysArg4=key, sysArg5=length
                                          7885  label('sys_SortUint8Array')
sys_SortUint8Array:
              1a0b 0127  ld   [$27]       7886  ld([sysArgs+3])                 #18,
                                          7887  ble('.sys_sortuint8array_21')   #19, j == 0
              1a0c f824  ble  .sys_sortuint8array_21
              1a0d 0124  ld   [$24]       7888  ld([sysArgs+0])                 #20,
              1a0e 8127  adda [$27]       7889  adda([sysArgs+3])               #21,
              1a0f b001  suba $01,x       7890  suba(1,X)                       #22,
              1a10 0d00  ld   [y,x]       7891  ld([Y,X])                       #23,
                                          7892  bmi('.sys_sortuint8array_26')   #24, convert signed < to unsigned <
              1a11 e815  blt  .sys_sortuint8array_26
              1a12 a128  suba [$28]       7893  suba([sysArgs+4])               #25,
                                          7894  bra('.sys_sortuint8array_28')   #26,
              1a13 fc17  bra  .sys_sortuint8array_28
              1a14 4128  ora  [$28]       7895  ora([sysArgs+4])                #27, borrow
                                          7896  label('.sys_sortuint8array_26')
.sys_sortuint8array_26:
              1a15 2128  anda [$28]       7897  anda([sysArgs+4])               #26, borrow
              1a16 0200  nop              7898  nop()                           #27,
                                          7899  label('.sys_sortuint8array_28')
.sys_sortuint8array_28:                   7900  bmi('.sys_sortuint8array_30_0') #28, a[j-1] < key
              1a17 e830  blt  .sys_sortuint8array_30_0
              1a18 0d00  ld   [y,x]       7901  ld([Y,X])                       #29,
              1a19 de00  st   [y,x++]     7902  st([Y,Xpp])                     #30,
              1a1a ce00  st   [y,x]       7903  st([Y,X])                       #31, a[j] = a[j-1]
              1a1b 0127  ld   [$27]       7904  ld([sysArgs+3])                 #32,
              1a1c a001  suba $01         7905  suba(1)                         #33,
              1a1d c227  st   [$27]       7906  st([sysArgs+3])                 #34, j--
              1a1e 0116  ld   [$16]       7907  ld([vPC])                       #35,
              1a1f a002  suba $02         7908  suba(2)                         #36,
              1a20 c216  st   [$16]       7909  st([vPC])                       #37, restart
              1a21 1403  ld   $03,y       7910  ld(hi('NEXTY'),Y)               #38,
              1a22 e000  jmp  y,$00       7911  jmp(Y,'NEXTY')                  #39,
              1a23 00eb  ld   $eb         7912  ld(-42/2)                       #40,
                                          7913  label('.sys_sortuint8array_21')
.sys_sortuint8array_21:
              1a24 9127  adda [$27],x     7914  adda([sysArgs+3],X)             #21,
              1a25 0128  ld   [$28]       7915  ld([sysArgs+4])                 #22,
              1a26 ce00  st   [y,x]       7916  st([Y,X])                       #23, a[j] = key
              1a27 0126  ld   [$26]       7917  ld([sysArgs+2])                 #24,
              1a28 8001  adda $01         7918  adda(1)                         #25,
              1a29 c226  st   [$26]       7919  st([sysArgs+2])                 #26, i++
              1a2a a129  suba [$29]       7920  suba([sysArgs+5])               #27,
                                          7921  blt('.sys_sortuint8array_30_1') #28, i < length
              1a2b e83c  blt  .sys_sortuint8array_30_1
              1a2c 0124  ld   [$24]       7922  ld([sysArgs+0])                 #29,
              1a2d 1403  ld   $03,y       7923  ld(hi('NEXTY'),Y)               #30,
              1a2e e000  jmp  y,$00       7924  jmp(Y,'NEXTY')                  #31,
              1a2f 00ef  ld   $ef         7925  ld(-34/2)                       #32,
                                          7926  label('.sys_sortuint8array_30_0')
.sys_sortuint8array_30_0:
              1a30 de00  st   [y,x++]     7927  st([Y,Xpp])                     #30,
              1a31 0128  ld   [$28]       7928  ld([sysArgs+4])                 #31,
              1a32 ce00  st   [y,x]       7929  st([Y,X])                       #32, a[j] = key
              1a33 0126  ld   [$26]       7930  ld([sysArgs+2])                 #33,
              1a34 8001  adda $01         7931  adda(1)                         #34,
              1a35 c226  st   [$26]       7932  st([sysArgs+2])                 #35, i++
              1a36 a129  suba [$29]       7933  suba([sysArgs+5])               #36,
                                          7934  blt('.sys_sortuint8array_39')   #37, i < length
              1a37 e847  blt  .sys_sortuint8array_39
              1a38 0124  ld   [$24]       7935  ld([sysArgs+0])                 #38,
              1a39 1403  ld   $03,y       7936  ld(hi('REENTER'),Y)             #39,
              1a3a e0cb  jmp  y,$cb       7937  jmp(Y,'REENTER')                #40,
              1a3b 00ea  ld   $ea         7938  ld(-44/2)                       #41,
                                          7939  label('.sys_sortuint8array_30_1')
.sys_sortuint8array_30_1:
              1a3c 9126  adda [$26],x     7940  adda([sysArgs+2],X)             #30,
              1a3d 0d00  ld   [y,x]       7941  ld([Y,X])                       #31,
              1a3e c228  st   [$28]       7942  st([sysArgs+4])                 #32, key = a[i]
              1a3f 0126  ld   [$26]       7943  ld([sysArgs+2])                 #33,
              1a40 c227  st   [$27]       7944  st([sysArgs+3])                 #34, j = i
              1a41 0116  ld   [$16]       7945  ld([vPC])                       #35,
              1a42 a002  suba $02         7946  suba(2)                         #36,
              1a43 c216  st   [$16]       7947  st([vPC])                       #37, restart
              1a44 1403  ld   $03,y       7948  ld(hi('NEXTY'),Y)               #38,
              1a45 e000  jmp  y,$00       7949  jmp(Y,'NEXTY')                  #39,
              1a46 00eb  ld   $eb         7950  ld(-42/2)                       #40,
                                          7951  label('.sys_sortuint8array_39')
.sys_sortuint8array_39:
              1a47 9126  adda [$26],x     7952  adda([sysArgs+2],X)             #39,
              1a48 0d00  ld   [y,x]       7953  ld([Y,X])                       #40,
              1a49 c228  st   [$28]       7954  st([sysArgs+4])                 #41, key = a[i]
              1a4a 0126  ld   [$26]       7955  ld([sysArgs+2])                 #42,
              1a4b c227  st   [$27]       7956  st([sysArgs+3])                 #43, j = i
              1a4c 0116  ld   [$16]       7957  ld([vPC])                       #44,
              1a4d a002  suba $02         7958  suba(2)                         #45,
              1a4e c216  st   [$16]       7959  st([vPC])                       #46, restart
              1a4f 1403  ld   $03,y       7960  ld(hi('REENTER'),Y)             #47,
              1a50 e0cb  jmp  y,$cb       7961  jmp(Y,'REENTER')                #48,
              1a51 00e6  ld   $e6         7962  ld(-52/2)                       #49,
                                          7963
                                          7964
                                          7965  # sys_SortViaIndices, sysArgs0,1=indices, sysArgs2,3=src, sysArg4,5=dst, sysArg6=dst step, vAC=count
                                          7966  label('sys_SortViaIndices')
sys_SortViaIndices:
              1a52 1124  ld   [$24],x     7967  ld([sysArgs+0],X)               #18,
              1a53 0d00  ld   [y,x]       7968  ld([Y,X])                       #19, [index]
              1a54 1527  ld   [$27],y     7969  ld([sysArgs+3],Y)               #20,
              1a55 9126  adda [$26],x     7970  adda([sysArgs+2],X)             #21, src
              1a56 0d00  ld   [y,x]       7971  ld([Y,X])                       #22, peek(src + index)
              1a57 1529  ld   [$29],y     7972  ld([sysArgs+5],Y)               #23,
              1a58 1128  ld   [$28],x     7973  ld([sysArgs+4],X)               #24, dst
              1a59 ce00  st   [y,x]       7974  st([Y,X])                       #25,
              1a5a 0124  ld   [$24]       7975  ld([sysArgs+0])                 #26,
              1a5b 8001  adda $01         7976  adda(1)                         #27,
              1a5c c224  st   [$24]       7977  st([sysArgs+0])                 #28, indices++
              1a5d 0128  ld   [$28]       7978  ld([sysArgs+4])                 #29,
              1a5e 812a  adda [$2a]       7979  adda([sysArgs+6])               #30,
              1a5f c228  st   [$28]       7980  st([sysArgs+4])                 #31, dst += step
              1a60 0118  ld   [$18]       7981  ld([vAC])                       #32,
              1a61 a001  suba $01         7982  suba(1)                         #33,
                                          7983  beq('.sys_sortviaindices_36')   #34,
              1a62 f06a  beq  .sys_sortviaindices_36
              1a63 c218  st   [$18]       7984  st([vAC])                       #35, count--
              1a64 0116  ld   [$16]       7985  ld([vPC])                       #36,
              1a65 a002  suba $02         7986  suba(2)                         #37,
              1a66 c216  st   [$16]       7987  st([vPC])                       #38, restart
              1a67 1403  ld   $03,y       7988  ld(hi('REENTER'),Y)             #39,
              1a68 e0cb  jmp  y,$cb       7989  jmp(Y,'REENTER')                #40,
              1a69 00ea  ld   $ea         7990  ld(-44/2)                       #41,
                                          7991  label('.sys_sortviaindices_36')
.sys_sortviaindices_36:
              1a6a 1403  ld   $03,y       7992  ld(hi('NEXTY'),Y)               #36,
              1a6b e000  jmp  y,$00       7993  jmp(Y,'NEXTY')                  #37,
              1a6c 00ec  ld   $ec         7994  ld(-40/2)                       #38,
                                          7995
                                          7996
              1a6d 0200  nop              7997  fillers(until=0xd0)
              1a6e 0200  nop
              1a6f 0200  nop
              * 99 times
                                          7998
                                          7999  #-----------------------------------------------------------------------
                                          8000  # Extension SYS_Unpack_56
                                          8001  #-----------------------------------------------------------------------
                                          8002
                                          8003  # Unpack 3 bytes into 4 pixels
                                          8004  #
                                          8005  # Variables:
                                          8006  #       sysArgs[0:2]    Packed bytes (in)
                                          8007  #       sysArgs[0:3]    Pixels (out)
                                          8008
                                          8009  label('SYS_Unpack_56')
SYS_Unpack_56:
              1ad0 1407  ld   $07,y       8010  ld(soundTable>>8,Y)             #15
              1ad1 0126  ld   [$26]       8011  ld([sysArgs+2])                 #16 a[2]>>2
              1ad2 5003  ora  $03,x       8012  ora(0x03,X)                     #17
              1ad3 0d00  ld   [y,x]       8013  ld([Y,X])                       #18
              1ad4 c227  st   [$27]       8014  st([sysArgs+3])                 #19 -> Pixel 3
                                          8015
              1ad5 0126  ld   [$26]       8016  ld([sysArgs+2])                 #20 (a[2]&3)<<4
              1ad6 2003  anda $03         8017  anda(0x03)                      #21
              1ad7 8200  adda ac          8018  adda(AC)                        #22
              1ad8 8200  adda ac          8019  adda(AC)                        #23
              1ad9 8200  adda ac          8020  adda(AC)                        #24
              1ada 8200  adda ac          8021  adda(AC)                        #25
              1adb c226  st   [$26]       8022  st([sysArgs+2])                 #26
              1adc 0125  ld   [$25]       8023  ld([sysArgs+1])                 #27 | a[1]>>4
              1add 5003  ora  $03,x       8024  ora(0x03,X)                     #28
              1ade 0d00  ld   [y,x]       8025  ld([Y,X])                       #29
              1adf 5003  ora  $03,x       8026  ora(0x03,X)                     #30
              1ae0 0d00  ld   [y,x]       8027  ld([Y,X])                       #31
              1ae1 4126  ora  [$26]       8028  ora([sysArgs+2])                #32
              1ae2 c226  st   [$26]       8029  st([sysArgs+2])                 #33 -> Pixel 2
                                          8030
              1ae3 0125  ld   [$25]       8031  ld([sysArgs+1])                 #34 (a[1]&15)<<2
              1ae4 200f  anda $0f         8032  anda(0x0f)                      #35
              1ae5 8200  adda ac          8033  adda(AC)                        #36
              1ae6 8200  adda ac          8034  adda(AC)                        #37
              1ae7 c225  st   [$25]       8035  st([sysArgs+1])                 #38
                                          8036
              1ae8 0124  ld   [$24]       8037  ld([sysArgs+0])                 #39 | a[0]>>6
              1ae9 5003  ora  $03,x       8038  ora(0x03,X)                     #40
              1aea 0d00  ld   [y,x]       8039  ld([Y,X])                       #41
              1aeb 5003  ora  $03,x       8040  ora(0x03,X)                     #42
              1aec 0d00  ld   [y,x]       8041  ld([Y,X])                       #43
              1aed 5003  ora  $03,x       8042  ora(0x03,X)                     #44
              1aee 0d00  ld   [y,x]       8043  ld([Y,X])                       #45
              1aef 4125  ora  [$25]       8044  ora([sysArgs+1])                #46
              1af0 c225  st   [$25]       8045  st([sysArgs+1])                 #47 -> Pixel 1
                                          8046
              1af1 0124  ld   [$24]       8047  ld([sysArgs+0])                 #48 a[1]&63
              1af2 203f  anda $3f         8048  anda(0x3f)                      #49
              1af3 c224  st   [$24]       8049  st([sysArgs+0])                 #50 -> Pixel 0
                                          8050
              1af4 1403  ld   $03,y       8051  ld(hi('REENTER'),Y)             #51
              1af5 e0cb  jmp  y,$cb       8052  jmp(Y,'REENTER')                #52
              1af6 00e4  ld   $e4         8053  ld(-56/2)                       #53
                                          8054
                                          8055
              1af7 0200  nop              8056  fillers(until=0xff)
              1af8 0200  nop
              1af9 0200  nop
              * 8 times
              1aff 0200  nop              8057  align(0x100, size=0x100)
                                          8058
                                          8059  #-----------------------------------------------------------------------
                                          8060  #       More sys implementations, (0x1B00)
                                          8061  #-----------------------------------------------------------------------
                                          8062
                                          8063  # sys_MemCopyByte, sysArgs0,1=src, sysArg2,3=dst, sysArg4=src step, sysArg5=dst step, vAC=count
                                          8064  label('sys_MemCopyByte')
sys_MemCopyByte:
              1b00 1124  ld   [$24],x     8065  ld([sysArgs+0],X)               #18,
              1b01 0d00  ld   [y,x]       8066  ld([Y,X])                       #19, [src]
              1b02 1527  ld   [$27],y     8067  ld([sysArgs+3],Y)               #20,
              1b03 1126  ld   [$26],x     8068  ld([sysArgs+2],X)               #21,
              1b04 ce00  st   [y,x]       8069  st([Y,X])                       #22, [dst] = [src]
              1b05 0124  ld   [$24]       8070  ld([sysArgs+0])                 #23,
              1b06 8128  adda [$28]       8071  adda([sysArgs+4])               #24,
              1b07 c224  st   [$24]       8072  st([sysArgs+0])                 #25, src++
              1b08 0126  ld   [$26]       8073  ld([sysArgs+2])                 #26,
              1b09 8129  adda [$29]       8074  adda([sysArgs+5])               #27,
              1b0a c226  st   [$26]       8075  st([sysArgs+2])                 #28, dst++
              1b0b 0118  ld   [$18]       8076  ld([vAC])                       #29,
              1b0c a001  suba $01         8077  suba(1)                         #30,
                                          8078  beq('.sys_memcopybyte_33')      #31,
              1b0d f015  beq  .sys_memcopybyte_33
              1b0e c218  st   [$18]       8079  st([vAC])                       #32, count--
              1b0f 0116  ld   [$16]       8080  ld([vPC])                       #33,
              1b10 a002  suba $02         8081  suba(2)                         #34,
              1b11 c216  st   [$16]       8082  st([vPC])                       #35, restart
              1b12 1403  ld   $03,y       8083  ld(hi('NEXTY'),Y)               #36,
              1b13 e000  jmp  y,$00       8084  jmp(Y,'NEXTY')                  #37,
              1b14 00ec  ld   $ec         8085  ld(-40/2)                       #38,
                                          8086  label('.sys_memcopybyte_33')
.sys_memcopybyte_33:
              1b15 1403  ld   $03,y       8087  ld(hi('REENTER'),Y)             #33,
              1b16 e0cb  jmp  y,$cb       8088  jmp(Y,'REENTER')                #34,
              1b17 00ed  ld   $ed         8089  ld(-38/2)                       #35,
                                          8090
                                          8091
                                          8092  # sys_MemCopyWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp
                                          8093  label('sys_MemCopyWord')
sys_MemCopyWord:
              1b18 1124  ld   [$24],x     8094  ld([sysArgs+0],X)               #18,
              1b19 0d00  ld   [y,x]       8095  ld([Y,X])                       #19, [src + 0]
              1b1a de00  st   [y,x++]     8096  st([Y,Xpp])                     #20
              1b1b c228  st   [$28]       8097  st([sysArgs+4])                 #21,
              1b1c 0d00  ld   [y,x]       8098  ld([Y,X])                       #22, [src + 1]
              1b1d c229  st   [$29]       8099  st([sysArgs+5])                 #23,
              1b1e 1527  ld   [$27],y     8100  ld([sysArgs+3],Y)               #24,
              1b1f 1126  ld   [$26],x     8101  ld([sysArgs+2],X)               #25,
              1b20 0128  ld   [$28]       8102  ld([sysArgs+4])                 #26,
              1b21 de00  st   [y,x++]     8103  st([Y,Xpp])                     #27, [dst + 0] = [src + 0]
              1b22 0129  ld   [$29]       8104  ld([sysArgs+5])                 #28,
              1b23 ce00  st   [y,x]       8105  st([Y,X])                       #29, [dst + 1] = [src + 1]
              1b24 0124  ld   [$24]       8106  ld([sysArgs+0])                 #30,
              1b25 8002  adda $02         8107  adda(2)                         #31,
              1b26 c224  st   [$24]       8108  st([sysArgs+0])                 #32, src += 2
              1b27 0126  ld   [$26]       8109  ld([sysArgs+2])                 #33,
              1b28 8002  adda $02         8110  adda(2)                         #34,
              1b29 c226  st   [$26]       8111  st([sysArgs+2])                 #35, dst += 2
              1b2a 0118  ld   [$18]       8112  ld([vAC])                       #36,
              1b2b a001  suba $01         8113  suba(1)                         #37,
                                          8114  beq('.sys_memcopyword_40')      #38,
              1b2c f034  beq  .sys_memcopyword_40
              1b2d c218  st   [$18]       8115  st([vAC])                       #39, count--
              1b2e 0116  ld   [$16]       8116  ld([vPC])                       #40,
              1b2f a002  suba $02         8117  suba(2)                         #41,
              1b30 c216  st   [$16]       8118  st([vPC])                       #42, restart
              1b31 1403  ld   $03,y       8119  ld(hi('REENTER'),Y)             #43,
              1b32 e0cb  jmp  y,$cb       8120  jmp(Y,'REENTER')                #44,
              1b33 00e8  ld   $e8         8121  ld(-48/2)                       #45,
                                          8122  label('.sys_memcopyword_40')
.sys_memcopyword_40:
              1b34 1403  ld   $03,y       8123  ld(hi('NEXTY'),Y)               #40,
              1b35 e000  jmp  y,$00       8124  jmp(Y,'NEXTY')                  #41,
              1b36 00ea  ld   $ea         8125  ld(-44/2)                       #42,
                                          8126
                                          8127
                                          8128  # sys_MemCopyDWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp, sysArg6,7=tmp
                                          8129  label('sys_MemCopyDWord')
sys_MemCopyDWord:
              1b37 1124  ld   [$24],x     8130  ld([sysArgs+0],X)               #18,
              1b38 0d00  ld   [y,x]       8131  ld([Y,X])                       #19, [src + 0]
              1b39 de00  st   [y,x++]     8132  st([Y,Xpp])                     #20
              1b3a c228  st   [$28]       8133  st([sysArgs+4])                 #21,
              1b3b 0d00  ld   [y,x]       8134  ld([Y,X])                       #22, [src + 1]
              1b3c de00  st   [y,x++]     8135  st([Y,Xpp])                     #23
              1b3d c229  st   [$29]       8136  st([sysArgs+5])                 #24,
              1b3e 0d00  ld   [y,x]       8137  ld([Y,X])                       #25, [src + 2]
              1b3f de00  st   [y,x++]     8138  st([Y,Xpp])                     #26
              1b40 c22a  st   [$2a]       8139  st([sysArgs+6])                 #27,
              1b41 0d00  ld   [y,x]       8140  ld([Y,X])                       #28, [src + 3]
              1b42 c22b  st   [$2b]       8141  st([sysArgs+7])                 #29,
              1b43 1527  ld   [$27],y     8142  ld([sysArgs+3],Y)               #30,
              1b44 1126  ld   [$26],x     8143  ld([sysArgs+2],X)               #31,
              1b45 0128  ld   [$28]       8144  ld([sysArgs+4])                 #32,
              1b46 de00  st   [y,x++]     8145  st([Y,Xpp])                     #33, [dst + 0] = [src + 0]
              1b47 0129  ld   [$29]       8146  ld([sysArgs+5])                 #34,
              1b48 de00  st   [y,x++]     8147  st([Y,Xpp])                     #35, [dst + 1] = [src + 1]
              1b49 012a  ld   [$2a]       8148  ld([sysArgs+6])                 #36,
              1b4a de00  st   [y,x++]     8149  st([Y,Xpp])                     #37, [dst + 2] = [src + 2]
              1b4b 012b  ld   [$2b]       8150  ld([sysArgs+7])                 #38,
              1b4c ce00  st   [y,x]       8151  st([Y,X])                       #39, [dst + 3] = [src + 3]
              1b4d 0124  ld   [$24]       8152  ld([sysArgs+0])                 #40,
              1b4e 8004  adda $04         8153  adda(4)                         #41,
              1b4f c224  st   [$24]       8154  st([sysArgs+0])                 #42, src += 4
              1b50 0126  ld   [$26]       8155  ld([sysArgs+2])                 #43,
              1b51 8004  adda $04         8156  adda(4)                         #44,
              1b52 c226  st   [$26]       8157  st([sysArgs+2])                 #45, dst += 4
              1b53 0118  ld   [$18]       8158  ld([vAC])                       #46,
              1b54 a001  suba $01         8159  suba(1)                         #47,
                                          8160  beq('.sys_memcopydword_50')     #48,
              1b55 f05d  beq  .sys_memcopydword_50
              1b56 c218  st   [$18]       8161  st([vAC])                       #49, count--
              1b57 0116  ld   [$16]       8162  ld([vPC])                       #50,
              1b58 a002  suba $02         8163  suba(2)                         #51,
              1b59 c216  st   [$16]       8164  st([vPC])                       #52, restart
              1b5a 1403  ld   $03,y       8165  ld(hi('REENTER'),Y)             #53,
              1b5b e0cb  jmp  y,$cb       8166  jmp(Y,'REENTER')                #54,
              1b5c 00e3  ld   $e3         8167  ld(-58/2)                       #55,
                                          8168  label('.sys_memcopydword_50')
.sys_memcopydword_50:
              1b5d 1403  ld   $03,y       8169  ld(hi('NEXTY'),Y)               #50,
              1b5e e000  jmp  y,$00       8170  jmp(Y,'NEXTY')                  #51,
              1b5f 00e5  ld   $e5         8171  ld(-54/2)                       #52,
                                          8172
                                          8173
                                          8174  # sys_ReadPixel
                                          8175  label('sys_ReadPixel')
sys_ReadPixel:
              1b60 8119  adda [$19]       8176  adda([vAC+1])                   #18,
              1b61 1200  ld   ac,x        8177  ld(AC,X)                        #19,
              1b62 1401  ld   $01,y       8178  ld(1,Y)                         #20, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              1b63 0d00  ld   [y,x]       8179  ld([Y,X])                       #21,
              1b64 1600  ld   ac,y        8180  ld(AC,Y)                        #22, Y = [Y,X]
              1b65 1118  ld   [$18],x     8181  ld([vAC],X)                     #23, X = x
              1b66 0d00  ld   [y,x]       8182  ld([Y,X])                       #24,
              1b67 c218  st   [$18]       8183  st([vAC])                       #25, vAC = [Y,X]
              1b68 0000  ld   $00         8184  ld(0)                           #26,
              1b69 c219  st   [$19]       8185  st([vAC+1])                     #27,
              1b6a 1403  ld   $03,y       8186  ld(hi('NEXTY'),Y)               #28,
              1b6b e000  jmp  y,$00       8187  jmp(Y,'NEXTY')                  #29,
              1b6c 00f0  ld   $f0         8188  ld(-32/2)                       #30,
                                          8189
                                          8190
                                          8191  # sys_DrawPixel
                                          8192  label('sys_DrawPixel')
sys_DrawPixel:
              1b6d 8125  adda [$25]       8193  adda([sysArgs+1])               #18,
              1b6e 1200  ld   ac,x        8194  ld(AC,X)                        #19,
              1b6f 1401  ld   $01,y       8195  ld(1,Y)                         #20, Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              1b70 0d00  ld   [y,x]       8196  ld([Y,X])                       #21,
              1b71 1600  ld   ac,y        8197  ld(AC,Y)                        #22, Y = [Y,X]
              1b72 1124  ld   [$24],x     8198  ld([sysArgs+0],X)               #23, X = x
              1b73 0126  ld   [$26]       8199  ld([sysArgs+2])                 #24, colour
              1b74 ce00  st   [y,x]       8200  st([Y,X])                       #25, [Y,X] = colour
              1b75 1403  ld   $03,y       8201  ld(hi('NEXTY'),Y)               #26,
              1b76 e000  jmp  y,$00       8202  jmp(Y,'NEXTY')                  #27,
              1b77 00f1  ld   $f1         8203  ld(-30/2)                       #28,
                                          8204
                                          8205
              1b78 0200  nop              8206  fillers(until=0xff)
              1b79 0200  nop
              1b7a 0200  nop
              * 135 times
              1bff 0200  nop              8207  align(0x100, size=0x100)
                                          8208
                                          8209  #-----------------------------------------------------------------------
                                          8210  #       More sys implementations, (0x1C00)
                                          8211  #-----------------------------------------------------------------------
                                          8212
                                          8213  # sys_SortSprites, sysArgs0,1=_y_array, sysArg2=i, sysArg3=j, sysArg4=key0, sysArg5=length
                                          8214  #                  sysArgs6,7=_is_array, vAC.lo=key1
                                          8215  label('sys_SortSprites')
sys_SortSprites:
              1c00 0127  ld   [$27]       8216  ld([sysArgs+3])                 #18,
                                          8217  ble('.sys_sortsprites_21')      #19, j <= 0
              1c01 f820  ble  .sys_sortsprites_21
              1c02 0124  ld   [$24]       8218  ld([sysArgs+0])                 #20,
              1c03 8127  adda [$27]       8219  adda([sysArgs+3])               #21,
              1c04 b001  suba $01,x       8220  suba(1,X)                       #22,
              1c05 0d00  ld   [y,x]       8221  ld([Y,X])                       #23,
                                          8222  bmi('.sys_sortsprites_26')      #24, convert signed < to unsigned <
              1c06 e80a  blt  .sys_sortsprites_26
              1c07 a128  suba [$28]       8223  suba([sysArgs+4])               #25,
                                          8224  bra('.sys_sortsprites_28')      #26,
              1c08 fc0c  bra  .sys_sortsprites_28
              1c09 4128  ora  [$28]       8225  ora([sysArgs+4])                #27, borrow
                                          8226  label('.sys_sortsprites_26')
.sys_sortsprites_26:
              1c0a 2128  anda [$28]       8227  anda([sysArgs+4])               #26, borrow
              1c0b 0200  nop              8228  nop()                           #27,
                                          8229  label('.sys_sortsprites_28')
.sys_sortsprites_28:                      8230  bmi('.sys_sortsprites_30')      #28, y[j-1] < key
              1c0c e831  blt  .sys_sortsprites_30
              1c0d 0d00  ld   [y,x]       8231  ld([Y,X])                       #29,
              1c0e de00  st   [y,x++]     8232  st([Y,Xpp])                     #30,
              1c0f ce00  st   [y,x]       8233  st([Y,X])                       #31, y[j] = y[j-1]
              1c10 152b  ld   [$2b],y     8234  ld([sysArgs+7],Y)               #32,
              1c11 012a  ld   [$2a]       8235  ld([sysArgs+6])                 #33,
              1c12 8127  adda [$27]       8236  adda([sysArgs+3])               #34,
              1c13 b001  suba $01,x       8237  suba(1,X)                       #35,
              1c14 0d00  ld   [y,x]       8238  ld([Y,X])                       #36,
              1c15 de00  st   [y,x++]     8239  st([Y,Xpp])                     #37,
              1c16 ce00  st   [y,x]       8240  st([Y,X])                       #38, is[j] = is[j-1]
              1c17 0127  ld   [$27]       8241  ld([sysArgs+3])                 #39,
              1c18 a001  suba $01         8242  suba(1)                         #40,
              1c19 c227  st   [$27]       8243  st([sysArgs+3])                 #41, j--
              1c1a 0116  ld   [$16]       8244  ld([vPC])                       #42,
              1c1b a002  suba $02         8245  suba(2)                         #43,
              1c1c c216  st   [$16]       8246  st([vPC])                       #44, restart
              1c1d 1403  ld   $03,y       8247  ld(hi('REENTER'),Y)             #45,
              1c1e e0cb  jmp  y,$cb       8248  jmp(Y,'REENTER')                #46,
              1c1f 00e7  ld   $e7         8249  ld(-50/2)                       #47,
                                          8250  label('.sys_sortsprites_21')
.sys_sortsprites_21:
              1c20 9127  adda [$27],x     8251  adda([sysArgs+3],X)             #21,
              1c21 0128  ld   [$28]       8252  ld([sysArgs+4])                 #22,
              1c22 ce00  st   [y,x]       8253  st([Y,X])                       #23, y[j] = key0
              1c23 152b  ld   [$2b],y     8254  ld([sysArgs+7],Y)               #24,
              1c24 012a  ld   [$2a]       8255  ld([sysArgs+6])                 #25,
              1c25 9127  adda [$27],x     8256  adda([sysArgs+3],X)             #26,
              1c26 0182  ld   [$82]       8257  ld([0x82])                      #27,
              1c27 ce00  st   [y,x]       8258  st([Y,X])                       #28, is[j] = key1
              1c28 0126  ld   [$26]       8259  ld([sysArgs+2])                 #29,
              1c29 8001  adda $01         8260  adda(1)                         #30,
              1c2a c226  st   [$26]       8261  st([sysArgs+2])                 #31, i++
              1c2b a129  suba [$29]       8262  suba([sysArgs+5])               #32,
                                          8263  blt('.sys_sortsprites_35')      #33, i < length
              1c2c e842  blt  .sys_sortsprites_35
              1c2d 1525  ld   [$25],y     8264  ld([sysArgs+1],Y)               #34,
              1c2e 1403  ld   $03,y       8265  ld(hi('REENTER'),Y)             #35,
              1c2f e0cb  jmp  y,$cb       8266  jmp(Y,'REENTER')                #36,
              1c30 00ec  ld   $ec         8267  ld(-40/2)                       #37,
                                          8268  label('.sys_sortsprites_30')
.sys_sortsprites_30:
              1c31 de00  st   [y,x++]     8269  st([Y,Xpp])                     #30,
              1c32 0128  ld   [$28]       8270  ld([sysArgs+4])                 #31,
              1c33 ce00  st   [y,x]       8271  st([Y,X])                       #32, y[j] = key0
              1c34 152b  ld   [$2b],y     8272  ld([sysArgs+7],Y)               #33,
              1c35 012a  ld   [$2a]       8273  ld([sysArgs+6])                 #34,
              1c36 9127  adda [$27],x     8274  adda([sysArgs+3],X)             #35,
              1c37 0182  ld   [$82]       8275  ld([0x82])                      #36,
              1c38 ce00  st   [y,x]       8276  st([Y,X])                       #37, is[j] = key1
              1c39 0126  ld   [$26]       8277  ld([sysArgs+2])                 #38,
              1c3a 8001  adda $01         8278  adda(1)                         #39,
              1c3b c226  st   [$26]       8279  st([sysArgs+2])                 #40, i++
              1c3c a129  suba [$29]       8280  suba([sysArgs+5])               #41,
                                          8281  blt('.sys_sortsprites_44')      #42, i < length
              1c3d e853  blt  .sys_sortsprites_44
              1c3e 1525  ld   [$25],y     8282  ld([sysArgs+1],Y)               #43
              1c3f 1403  ld   $03,y       8283  ld(hi('NEXTY'),Y)               #44,
              1c40 e000  jmp  y,$00       8284  jmp(Y,'NEXTY')                  #45,
              1c41 00e8  ld   $e8         8285  ld(-48/2)                       #46,
                                          8286  label('.sys_sortsprites_35')
.sys_sortsprites_35:
              1c42 0124  ld   [$24]       8287  ld([sysArgs+0])                 #35,
              1c43 9126  adda [$26],x     8288  adda([sysArgs+2],X)             #36,
              1c44 0d00  ld   [y,x]       8289  ld([Y,X])                       #37,
              1c45 c228  st   [$28]       8290  st([sysArgs+4])                 #38, key0 = y[i]
              1c46 152b  ld   [$2b],y     8291  ld([sysArgs+7],Y)               #39,
              1c47 012a  ld   [$2a]       8292  ld([sysArgs+6])                 #40,
              1c48 9126  adda [$26],x     8293  adda([sysArgs+2],X)             #41,
              1c49 0d00  ld   [y,x]       8294  ld([Y,X])                       #42,
              1c4a c282  st   [$82]       8295  st([0x82])                      #43, key1 = is[i]
              1c4b 0126  ld   [$26]       8296  ld([sysArgs+2])                 #44,
              1c4c c227  st   [$27]       8297  st([sysArgs+3])                 #45, j = i
              1c4d 0116  ld   [$16]       8298  ld([vPC])                       #46,
              1c4e a002  suba $02         8299  suba(2)                         #47,
              1c4f c216  st   [$16]       8300  st([vPC])                       #48, restart
              1c50 1403  ld   $03,y       8301  ld(hi('REENTER'),Y)             #49,
              1c51 e0cb  jmp  y,$cb       8302  jmp(Y,'REENTER')                #50,
              1c52 00e5  ld   $e5         8303  ld(-54/2)                       #51,
                                          8304  label('.sys_sortsprites_44')
.sys_sortsprites_44:
              1c53 0124  ld   [$24]       8305  ld([sysArgs+0])                 #44,
              1c54 9126  adda [$26],x     8306  adda([sysArgs+2],X)             #45,
              1c55 0d00  ld   [y,x]       8307  ld([Y,X])                       #46,
              1c56 c228  st   [$28]       8308  st([sysArgs+4])                 #47, key0 = y[i]
              1c57 152b  ld   [$2b],y     8309  ld([sysArgs+7],Y)               #48,
              1c58 012a  ld   [$2a]       8310  ld([sysArgs+6])                 #49,
              1c59 9126  adda [$26],x     8311  adda([sysArgs+2],X)             #50,
              1c5a 0d00  ld   [y,x]       8312  ld([Y,X])                       #51,
              1c5b c282  st   [$82]       8313  st([0x82])                      #52, key1 = is[i]
              1c5c 0126  ld   [$26]       8314  ld([sysArgs+2])                 #53,
              1c5d c227  st   [$27]       8315  st([sysArgs+3])                 #54, j = i
              1c5e 0116  ld   [$16]       8316  ld([vPC])                       #55,
              1c5f a002  suba $02         8317  suba(2)                         #56,
              1c60 c216  st   [$16]       8318  st([vPC])                       #57, restart
              1c61 1403  ld   $03,y       8319  ld(hi('NEXTY'),Y)               #58,
              1c62 e000  jmp  y,$00       8320  jmp(Y,'NEXTY')                  #59,
              1c63 00e1  ld   $e1         8321  ld(-62/2)                       #60,
                                          8322
                                          8323
              1c64 0200  nop              8324  fillers(until=0xff)
              1c65 0200  nop
              1c66 0200  nop
              * 155 times
              1cff 0200  nop              8325  align(0x100, size=0x100)
                                          8326
                                          8327  #-----------------------------------------------------------------------
                                          8328  #       More sys implementations, (0x1D00)
                                          8329  #-----------------------------------------------------------------------
                                          8330
                                          8331  # sys_DrawSprite
                                          8332  label('sys_DrawSprite')
sys_DrawSprite:
              1d00 1583  ld   [$83],y     8333  ld([0x83],Y)                    #18, spriteY
                                          8334
              1d01 0d00  ld   [y,x]       8335  ld([Y,X])                       #19, get back0
              1d02 1587  ld   [$87],y     8336  ld([0x87],Y)                    #20, spriteData
              1d03 caa2  st   [y,$a2]     8337  st([Y,0xA2])                    #21, save back0
              1d04 09a3  ld   [y,$a3]     8338  ld([Y,0xA3])                    #22, load pixel0
              1d05 1583  ld   [$83],y     8339  ld([0x83],Y)                    #23, spriteY
              1d06 ec09  bne  $1d09       8340  bne(pc()+3)                     #24, colourkey
              1d07 fc0a  bra  $1d0a       8341  bra(pc()+3)                     #25,
              1d08 0d00  ld   [y,x]       8342  ld([Y,X])                       #26,
              1d09 0200  nop              8343  nop()                           #26, (!)
              1d0a de00  st   [y,x++]     8344  st([Y,Xpp])                     #27, draw pixel0
                                          8345
              1d0b 0d00  ld   [y,x]       8346  ld([Y,X])                       #28, get back1
              1d0c 1587  ld   [$87],y     8347  ld([0x87],Y)                    #29, spriteData
              1d0d caa4  st   [y,$a4]     8348  st([Y,0xA4])                    #30, save back1
              1d0e 09a5  ld   [y,$a5]     8349  ld([Y,0xA5])                    #31, load pixel1
              1d0f 1583  ld   [$83],y     8350  ld([0x83],Y)                    #32, spriteY
              1d10 ec13  bne  $1d13       8351  bne(pc()+3)                     #33, colourkey
              1d11 fc14  bra  $1d14       8352  bra(pc()+3)                     #34,
              1d12 0d00  ld   [y,x]       8353  ld([Y,X])                       #35,
              1d13 0200  nop              8354  nop()                           #35, (!)
              1d14 de00  st   [y,x++]     8355  st([Y,Xpp])                     #36, draw pixel1
                                          8356
              1d15 0d00  ld   [y,x]       8357  ld([Y,X])                       #37, get back2
              1d16 1587  ld   [$87],y     8358  ld([0x87],Y)                    #38, spriteData
              1d17 caa6  st   [y,$a6]     8359  st([Y,0xA6])                    #39, save back2
              1d18 09a7  ld   [y,$a7]     8360  ld([Y,0xA7])                    #40, load pixel2
              1d19 1583  ld   [$83],y     8361  ld([0x83],Y)                    #41, spriteY
              1d1a ec1d  bne  $1d1d       8362  bne(pc()+3)                     #42, colourkey
              1d1b fc1e  bra  $1d1e       8363  bra(pc()+3)                     #43,
              1d1c 0d00  ld   [y,x]       8364  ld([Y,X])                       #44,
              1d1d 0200  nop              8365  nop()                           #44, (!)
              1d1e de00  st   [y,x++]     8366  st([Y,Xpp])                     #45, draw pixel2
                                          8367
              1d1f 0d00  ld   [y,x]       8368  ld([Y,X])                       #46, get back3
              1d20 1587  ld   [$87],y     8369  ld([0x87],Y)                    #47, spriteData
              1d21 caa8  st   [y,$a8]     8370  st([Y,0xA8])                    #48, save back3
              1d22 09a9  ld   [y,$a9]     8371  ld([Y,0xA9])                    #49, load pixel3
              1d23 1583  ld   [$83],y     8372  ld([0x83],Y)                    #50, spriteY
              1d24 ec27  bne  $1d27       8373  bne(pc()+3)                     #51, colourkey
              1d25 fc28  bra  $1d28       8374  bra(pc()+3)                     #52,
              1d26 0d00  ld   [y,x]       8375  ld([Y,X])                       #53,
              1d27 0200  nop              8376  nop()                           #53, (!)
              1d28 de00  st   [y,x++]     8377  st([Y,Xpp])                     #54, draw pixel3
                                          8378
              1d29 0d00  ld   [y,x]       8379  ld([Y,X])                       #55, get back4
              1d2a 1587  ld   [$87],y     8380  ld([0x87],Y)                    #56, spriteData
              1d2b caaa  st   [y,$aa]     8381  st([Y,0xAA])                    #57, save back4
              1d2c 09ab  ld   [y,$ab]     8382  ld([Y,0xAB])                    #58, load pixel4
              1d2d 1583  ld   [$83],y     8383  ld([0x83],Y)                    #59, spriteY
              1d2e ec31  bne  $1d31       8384  bne(pc()+3)                     #60, colourkey
              1d2f fc32  bra  $1d32       8385  bra(pc()+3)                     #61,
              1d30 0d00  ld   [y,x]       8386  ld([Y,X])                       #62,
              1d31 0200  nop              8387  nop()                           #62, (!)
              1d32 de00  st   [y,x++]     8388  st([Y,Xpp])                     #63, draw pixel4
                                          8389
              1d33 0d00  ld   [y,x]       8390  ld([Y,X])                       #64, get back5
              1d34 1587  ld   [$87],y     8391  ld([0x87],Y)                    #65, spriteData
              1d35 caac  st   [y,$ac]     8392  st([Y,0xAC])                    #66, save back5
              1d36 09ad  ld   [y,$ad]     8393  ld([Y,0xAD])                    #67, load pixel5
              1d37 1583  ld   [$83],y     8394  ld([0x83],Y)                    #68, spriteY
              1d38 ec3b  bne  $1d3b       8395  bne(pc()+3)                     #69, colourkey
              1d39 fc3c  bra  $1d3c       8396  bra(pc()+3)                     #70,
              1d3a 0d00  ld   [y,x]       8397  ld([Y,X])                       #71,
              1d3b 0200  nop              8398  nop()                           #71, (!)
              1d3c de00  st   [y,x++]     8399  st([Y,Xpp])                     #72, draw pixel5
                                          8400
              1d3d 0d00  ld   [y,x]       8401  ld([Y,X])                       #73, get back6
              1d3e 1587  ld   [$87],y     8402  ld([0x87],Y)                    #74, spriteData
              1d3f caae  st   [y,$ae]     8403  st([Y,0xAE])                    #75, save back6
              1d40 09af  ld   [y,$af]     8404  ld([Y,0xAF])                    #76, load pixel6
              1d41 1583  ld   [$83],y     8405  ld([0x83],Y)                    #77, spriteY
              1d42 ec45  bne  $1d45       8406  bne(pc()+3)                     #78, colourkey
              1d43 fc46  bra  $1d46       8407  bra(pc()+3)                     #79,
              1d44 0d00  ld   [y,x]       8408  ld([Y,X])                       #80,
              1d45 0200  nop              8409  nop()                           #80, (!)
              1d46 de00  st   [y,x++]     8410  st([Y,Xpp])                     #81, draw pixel6
                                          8411
              1d47 0d00  ld   [y,x]       8412  ld([Y,X])                       #82, get back7
              1d48 1587  ld   [$87],y     8413  ld([0x87],Y)                    #83, spriteData
              1d49 cab0  st   [y,$b0]     8414  st([Y,0xB0])                    #84, save back7
              1d4a 09b1  ld   [y,$b1]     8415  ld([Y,0xB1])                    #85, load pixel7
              1d4b 1583  ld   [$83],y     8416  ld([0x83],Y)                    #86, spriteY
              1d4c ec4f  bne  $1d4f       8417  bne(pc()+3)                     #87, colourkey
              1d4d fc50  bra  $1d50       8418  bra(pc()+3)                     #88,
              1d4e 0d00  ld   [y,x]       8419  ld([Y,X])                       #89,
              1d4f 0200  nop              8420  nop()                           #89, (!)
              1d50 de00  st   [y,x++]     8421  st([Y,Xpp])                     #90, draw pixel7
                                          8422
              1d51 0d00  ld   [y,x]       8423  ld([Y,X])                       #91, get back8
              1d52 1587  ld   [$87],y     8424  ld([0x87],Y)                    #92, spriteData
              1d53 cab2  st   [y,$b2]     8425  st([Y,0xB2])                    #93, save back8
              1d54 09b3  ld   [y,$b3]     8426  ld([Y,0xB3])                    #94, load pixel8
              1d55 1583  ld   [$83],y     8427  ld([0x83],Y)                    #95, spriteY
              1d56 ec59  bne  $1d59       8428  bne(pc()+3)                     #96, colourkey
              1d57 fc5a  bra  $1d5a       8429  bra(pc()+3)                     #97,
              1d58 0d00  ld   [y,x]       8430  ld([Y,X])                       #98,
              1d59 0200  nop              8431  nop()                           #98, (!)
              1d5a de00  st   [y,x++]     8432  st([Y,Xpp])                     #99, draw pixel8
                                          8433
              1d5b 1587  ld   [$87],y     8434  ld([0x87],Y)                    #100, spriteData
              1d5c 0182  ld   [$82]       8435  ld([0x82])                      #101, spriteX
              1d5d caa0  st   [y,$a0]     8436  st([Y,0xA0])                    #102, spriteOldX
              1d5e 0183  ld   [$83]       8437  ld([0x83])                      #103, spriteY
              1d5f caa1  st   [y,$a1]     8438  st([Y,0xA1])                    #104, spriteOldY
              1d60 0186  ld   [$86]       8439  ld([0x86])                      #105,
              1d61 a001  suba $01         8440  suba(1)                         #106,
                                          8441  beq('.sys_drawsprite_109')      #107,
              1d62 f070  beq  .sys_drawsprite_109
              1d63 c286  st   [$86]       8442  st([0x86])                      #108, scanLines--
              1d64 0183  ld   [$83]       8443  ld([0x83])                      #109, spriteY
              1d65 8001  adda $01         8444  adda(1)                         #110,
              1d66 c283  st   [$83]       8445  st([0x83])                      #111, spriteY++
              1d67 0187  ld   [$87]       8446  ld([0x87])                      #112,
              1d68 8001  adda $01         8447  adda(1)                         #113,
              1d69 c287  st   [$87]       8448  st([0x87])                      #114, spriteData++
              1d6a 0116  ld   [$16]       8449  ld([vPC])                       #115,
              1d6b a002  suba $02         8450  suba(2)                         #116,
              1d6c c216  st   [$16]       8451  st([vPC])                       #117, restart
              1d6d 1403  ld   $03,y       8452  ld(hi('NEXTY'),Y)               #118,
              1d6e e000  jmp  y,$00       8453  jmp(Y,'NEXTY')                  #119,
              1d6f 00c3  ld   $c3         8454  ld(-122/2)                      #120,
                                          8455  label('.sys_drawsprite_109')
.sys_drawsprite_109:
              1d70 019c  ld   [$9c]       8456  ld([0x9C])                      #109,
              1d71 8001  adda $01         8457  adda(1)                         #110,
              1d72 d29c  st   [$9c],x     8458  st([0x9C],X)                    #111, register13++
              1d73 159d  ld   [$9d],y     8459  ld([0x9D],Y)                    #112,
              1d74 0d00  ld   [y,x]       8460  ld([Y,X])                       #113, peek(register13)
              1d75 c282  st   [$82]       8461  st([0x82])                      #114, spriteX
              1d76 019e  ld   [$9e]       8462  ld([0x9E])                      #115,
              1d77 8001  adda $01         8463  adda(1)                         #116,
              1d78 d29e  st   [$9e],x     8464  st([0x9E],X)                    #117, register14++
              1d79 159f  ld   [$9f],y     8465  ld([0x9F],Y)                    #118,
              1d7a 0d00  ld   [y,x]       8466  ld([Y,X])                       #119, peek(register14)
              1d7b c283  st   [$83]       8467  st([0x83])                      #120, spriteY
              1d7c 01a0  ld   [$a0]       8468  ld([0xA0])                      #121,
              1d7d 8001  adda $01         8469  adda(1)                         #122,
              1d7e d2a0  st   [$a0],x     8470  st([0xA0],X)                    #123, register15++
              1d7f 15a1  ld   [$a1],y     8471  ld([0xA1],Y)                    #124,
              1d80 0d00  ld   [y,x]       8472  ld([Y,X])                       #125, peek(register15)
              1d81 c287  st   [$87]       8473  st([0x87])                      #126, spriteData
              1d82 1403  ld   $03,y       8474  ld(hi('REENTER'),Y)             #127,
              1d83 e0cb  jmp  y,$cb       8475  jmp(Y,'REENTER')                #128,
              1d84 00be  ld   $be         8476  ld(-132/2)                      #129,
                                          8477
                                          8478
                                          8479  # sys_DrawVLine, sysArgs0,1=count:colour, sysArgs2,3=X:Y address
                                          8480  label('sys_DrawVLine')
sys_DrawVLine:
              1d85 1126  ld   [$26],x     8481  ld([sysArgs+2],X)               #18,
              1d86 0124  ld   [$24]       8482  ld([sysArgs+0])                 #19,
              1d87 a008  suba $08         8483  suba(8)                         #20,
                                          8484  blt('.sys_drawvline_23')        #21,
              1d88 e8b3  blt  .sys_drawvline_23
              1d89 0124  ld   [$24]       8485  ld([sysArgs+0])                 #22,
              1d8a 0125  ld   [$25]       8486  ld([sysArgs+1])                 #23, 8 pixels
              1d8b ce00  st   [y,x]       8487  st([Y,X])                       #24,
              1d8c 0127  ld   [$27]       8488  ld([sysArgs+3])                 #25,
              1d8d 9401  adda $01,y       8489  adda(1,Y)                       #26,
              1d8e 0125  ld   [$25]       8490  ld([sysArgs+1])                 #27,
              1d8f ce00  st   [y,x]       8491  st([Y,X])                       #28,
              1d90 0127  ld   [$27]       8492  ld([sysArgs+3])                 #29,
              1d91 9402  adda $02,y       8493  adda(2,Y)                       #30,
              1d92 0125  ld   [$25]       8494  ld([sysArgs+1])                 #31,
              1d93 ce00  st   [y,x]       8495  st([Y,X])                       #32,
              1d94 0127  ld   [$27]       8496  ld([sysArgs+3])                 #33,
              1d95 9403  adda $03,y       8497  adda(3,Y)                       #34,
              1d96 0125  ld   [$25]       8498  ld([sysArgs+1])                 #35,
              1d97 ce00  st   [y,x]       8499  st([Y,X])                       #36,
              1d98 0127  ld   [$27]       8500  ld([sysArgs+3])                 #37,
              1d99 9404  adda $04,y       8501  adda(4,Y)                       #38,
              1d9a 0125  ld   [$25]       8502  ld([sysArgs+1])                 #39,
              1d9b ce00  st   [y,x]       8503  st([Y,X])                       #40,
              1d9c 0127  ld   [$27]       8504  ld([sysArgs+3])                 #41,
              1d9d 9405  adda $05,y       8505  adda(5,Y)                       #42,
              1d9e 0125  ld   [$25]       8506  ld([sysArgs+1])                 #43,
              1d9f ce00  st   [y,x]       8507  st([Y,X])                       #44,
              1da0 0127  ld   [$27]       8508  ld([sysArgs+3])                 #45,
              1da1 9406  adda $06,y       8509  adda(6,Y)                       #46,
              1da2 0125  ld   [$25]       8510  ld([sysArgs+1])                 #47,
              1da3 ce00  st   [y,x]       8511  st([Y,X])                       #48,
              1da4 0127  ld   [$27]       8512  ld([sysArgs+3])                 #49,
              1da5 9407  adda $07,y       8513  adda(7,Y)                       #50,
              1da6 8008  adda $08         8514  adda(8)                         #51,
              1da7 c227  st   [$27]       8515  st([sysArgs+3])                 #52,
              1da8 0125  ld   [$25]       8516  ld([sysArgs+1])                 #53,
              1da9 ce00  st   [y,x]       8517  st([Y,X])                       #54,
              1daa 0124  ld   [$24]       8518  ld([sysArgs+0])                 #55,
              1dab a008  suba $08         8519  suba(8)                         #56,
              1dac c224  st   [$24]       8520  st([sysArgs+0])                 #57,
              1dad 0116  ld   [$16]       8521  ld([vPC])                       #58,
              1dae a002  suba $02         8522  suba(2)                         #59,
              1daf c216  st   [$16]       8523  st([vPC])                       #60, restart
              1db0 1403  ld   $03,y       8524  ld(hi('REENTER'),Y)             #61,
              1db1 e0cb  jmp  y,$cb       8525  jmp(Y,'REENTER')                #62,
              1db2 00df  ld   $df         8526  ld(-66/2)                       #63,
                                          8527  label('.sys_drawvline_23')
.sys_drawvline_23:
              1db3 a004  suba $04         8528  suba(4)                         #23,
                                          8529  blt('.sys_drawvline_26')        #24,
              1db4 e8cf  blt  .sys_drawvline_26
              1db5 0124  ld   [$24]       8530  ld([sysArgs+0])                 #25,
              1db6 0125  ld   [$25]       8531  ld([sysArgs+1])                 #26, 4 pixels
              1db7 ce00  st   [y,x]       8532  st([Y,X])                       #27,
              1db8 0127  ld   [$27]       8533  ld([sysArgs+3])                 #28,
              1db9 9401  adda $01,y       8534  adda(1,Y)                       #29,
              1dba 0125  ld   [$25]       8535  ld([sysArgs+1])                 #30,
              1dbb ce00  st   [y,x]       8536  st([Y,X])                       #31,
              1dbc 0127  ld   [$27]       8537  ld([sysArgs+3])                 #32,
              1dbd 9402  adda $02,y       8538  adda(2,Y)                       #33,
              1dbe 0125  ld   [$25]       8539  ld([sysArgs+1])                 #34,
              1dbf ce00  st   [y,x]       8540  st([Y,X])                       #35,
              1dc0 0127  ld   [$27]       8541  ld([sysArgs+3])                 #36,
              1dc1 9403  adda $03,y       8542  adda(3,Y)                       #37,
              1dc2 8004  adda $04         8543  adda(4)                         #38,
              1dc3 c227  st   [$27]       8544  st([sysArgs+3])                 #39,
              1dc4 0125  ld   [$25]       8545  ld([sysArgs+1])                 #40,
              1dc5 ce00  st   [y,x]       8546  st([Y,X])                       #41,
              1dc6 0124  ld   [$24]       8547  ld([sysArgs+0])                 #42,
              1dc7 a004  suba $04         8548  suba(4)                         #43,
              1dc8 c224  st   [$24]       8549  st([sysArgs+0])                 #44,
              1dc9 0116  ld   [$16]       8550  ld([vPC])                       #45,
              1dca a002  suba $02         8551  suba(2)                         #46,
              1dcb c216  st   [$16]       8552  st([vPC])                       #47, restart
              1dcc 1403  ld   $03,y       8553  ld(hi('NEXTY'),Y)               #48,
              1dcd e000  jmp  y,$00       8554  jmp(Y,'NEXTY')                  #49,
              1dce 00e6  ld   $e6         8555  ld(-52/2)                       #50,
                                          8556  label('.sys_drawvline_26')
.sys_drawvline_26:
              1dcf a002  suba $02         8557  suba(2)                         #26,
                                          8558  blt('.sys_drawvline_29')        #27,
              1dd0 e8e3  blt  .sys_drawvline_29
              1dd1 0124  ld   [$24]       8559  ld([sysArgs+0])                 #28,
              1dd2 0125  ld   [$25]       8560  ld([sysArgs+1])                 #29, 2 pixels
              1dd3 ce00  st   [y,x]       8561  st([Y,X])                       #30,
              1dd4 0127  ld   [$27]       8562  ld([sysArgs+3])                 #31,
              1dd5 9401  adda $01,y       8563  adda(1,Y)                       #32,
              1dd6 8002  adda $02         8564  adda(2)                         #33,
              1dd7 c227  st   [$27]       8565  st([sysArgs+3])                 #34,
              1dd8 0125  ld   [$25]       8566  ld([sysArgs+1])                 #35,
              1dd9 ce00  st   [y,x]       8567  st([Y,X])                       #36,
              1dda 0124  ld   [$24]       8568  ld([sysArgs+0])                 #37,
              1ddb a002  suba $02         8569  suba(2)                         #38,
              1ddc c224  st   [$24]       8570  st([sysArgs+0])                 #39,
              1ddd 0116  ld   [$16]       8571  ld([vPC])                       #40,
              1dde a002  suba $02         8572  suba(2)                         #41,
              1ddf c216  st   [$16]       8573  st([vPC])                       #42, restart
              1de0 1403  ld   $03,y       8574  ld(hi('REENTER'),Y)             #43,
              1de1 e0cb  jmp  y,$cb       8575  jmp(Y,'REENTER')                #44,
              1de2 00e8  ld   $e8         8576  ld(-48/2)                       #45,
                                          8577  label('.sys_drawvline_29')
.sys_drawvline_29:
              1de3 a001  suba $01         8578  suba(1)                         #29,
                                          8579  blt('.sys_drawvline_32')        #30,
              1de4 e8f1  blt  .sys_drawvline_32
              1de5 0124  ld   [$24]       8580  ld([sysArgs+0])                 #31,
              1de6 0125  ld   [$25]       8581  ld([sysArgs+1])                 #32, 1 pixel
              1de7 ce00  st   [y,x]       8582  st([Y,X])                       #33,
              1de8 0124  ld   [$24]       8583  ld([sysArgs+0])                 #34,
              1de9 a001  suba $01         8584  suba(1)                         #35,
              1dea c224  st   [$24]       8585  st([sysArgs+0])                 #36,
              1deb 0116  ld   [$16]       8586  ld([vPC])                       #37,
              1dec a002  suba $02         8587  suba(2)                         #38,
              1ded c216  st   [$16]       8588  st([vPC])                       #39, restart
              1dee 1403  ld   $03,y       8589  ld(hi('NEXTY'),Y)               #40,
              1def e000  jmp  y,$00       8590  jmp(Y,'NEXTY')                  #41,
              1df0 00ea  ld   $ea         8591  ld(-44/2)                       #42,
                                          8592  label('.sys_drawvline_32')
.sys_drawvline_32:
              1df1 1403  ld   $03,y       8593  ld(hi('NEXTY'),Y)               #32, done
              1df2 e000  jmp  y,$00       8594  jmp(Y,'NEXTY')                  #33,
              1df3 00ee  ld   $ee         8595  ld(-36/2)                       #34,
                                          8596
                                          8597
              1df4 0200  nop              8598  fillers(until=0xff)
              1df5 0200  nop
              1df6 0200  nop
              * 11 times
              1dff 0200  nop              8599  align(0x100, size=0x100)
                                          8600
                                          8601  #-----------------------------------------------------------------------
                                          8602  #       More sys implementations, (0x1E00)
                                          8603  #-----------------------------------------------------------------------
                                          8604
                                          8605  # sys_SpritePattern, sysArgs0,1=src, sysArgs2=dstY, sysArgs3=height/2, sysArgs4,5=patternLut
                                          8606  label('sys_SpritePattern')
sys_SpritePattern:
              1e00 1525  ld   [$25],y     8607  ld([sysArgs+1],Y)               #18, src.hi
              1e01 0d00  ld   [y,x]       8608  ld([Y,X])                       #19,
              1e02 de00  st   [y,x++]     8609  st([Y,Xpp])                     #20, src.lo++
              1e03 1526  ld   [$26],y     8610  ld([sysArgs+2],Y)               #21,
              1e04 caa3  st   [y,$a3]     8611  st([Y,0xA3])                    #22, pixel0
              1e05 1525  ld   [$25],y     8612  ld([sysArgs+1],Y)               #23, src.hi
              1e06 0d00  ld   [y,x]       8613  ld([Y,X])                       #24,
              1e07 de00  st   [y,x++]     8614  st([Y,Xpp])                     #25, src.lo++
              1e08 1526  ld   [$26],y     8615  ld([sysArgs+2],Y)               #26,
              1e09 caa5  st   [y,$a5]     8616  st([Y,0xA5])                    #27, pixel1
              1e0a 1525  ld   [$25],y     8617  ld([sysArgs+1],Y)               #28, src.hi
              1e0b 0d00  ld   [y,x]       8618  ld([Y,X])                       #29,
              1e0c de00  st   [y,x++]     8619  st([Y,Xpp])                     #30, src.lo++
              1e0d 1526  ld   [$26],y     8620  ld([sysArgs+2],Y)               #31,
              1e0e caa7  st   [y,$a7]     8621  st([Y,0xA7])                    #32, pixel2
              1e0f 1525  ld   [$25],y     8622  ld([sysArgs+1],Y)               #33, src.hi
              1e10 0d00  ld   [y,x]       8623  ld([Y,X])                       #34,
              1e11 de00  st   [y,x++]     8624  st([Y,Xpp])                     #35, src.lo++
              1e12 1526  ld   [$26],y     8625  ld([sysArgs+2],Y)               #36,
              1e13 caa9  st   [y,$a9]     8626  st([Y,0xA9])                    #37, pixel3
              1e14 1525  ld   [$25],y     8627  ld([sysArgs+1],Y)               #38, src.hi
              1e15 0d00  ld   [y,x]       8628  ld([Y,X])                       #39,
              1e16 de00  st   [y,x++]     8629  st([Y,Xpp])                     #40, src.lo++
              1e17 1526  ld   [$26],y     8630  ld([sysArgs+2],Y)               #41,
              1e18 caab  st   [y,$ab]     8631  st([Y,0xAB])                    #42, pixel4
              1e19 1525  ld   [$25],y     8632  ld([sysArgs+1],Y)               #43, src.hi
              1e1a 0d00  ld   [y,x]       8633  ld([Y,X])                       #44,
              1e1b de00  st   [y,x++]     8634  st([Y,Xpp])                     #45, src.lo++
              1e1c 1526  ld   [$26],y     8635  ld([sysArgs+2],Y)               #46,
              1e1d caad  st   [y,$ad]     8636  st([Y,0xAD])                    #47, pixel5
              1e1e 1525  ld   [$25],y     8637  ld([sysArgs+1],Y)               #48, src.hi
              1e1f 0d00  ld   [y,x]       8638  ld([Y,X])                       #49,
              1e20 de00  st   [y,x++]     8639  st([Y,Xpp])                     #50, src.lo++
              1e21 1526  ld   [$26],y     8640  ld([sysArgs+2],Y)               #51,
              1e22 caaf  st   [y,$af]     8641  st([Y,0xAF])                    #52, pixel6
              1e23 1525  ld   [$25],y     8642  ld([sysArgs+1],Y)               #53, src.hi
              1e24 0d00  ld   [y,x]       8643  ld([Y,X])                       #54,
              1e25 de00  st   [y,x++]     8644  st([Y,Xpp])                     #55, src.lo++
              1e26 1526  ld   [$26],y     8645  ld([sysArgs+2],Y)               #56,
              1e27 cab1  st   [y,$b1]     8646  st([Y,0xB1])                    #57, pixel7
              1e28 1525  ld   [$25],y     8647  ld([sysArgs+1],Y)               #58, src.hi
              1e29 0d00  ld   [y,x]       8648  ld([Y,X])                       #59,
              1e2a de00  st   [y,x++]     8649  st([Y,Xpp])                     #60, src.lo++
              1e2b 1526  ld   [$26],y     8650  ld([sysArgs+2],Y)               #61,
              1e2c cab3  st   [y,$b3]     8651  st([Y,0xB3])                    #62, pixel8
              1e2d 0126  ld   [$26]       8652  ld([sysArgs+2])                 #63,
              1e2e 8001  adda $01         8653  adda(1)                         #64,
              1e2f c226  st   [$26]       8654  st([sysArgs+2])                 #65, dstY++
              1e30 1525  ld   [$25],y     8655  ld([sysArgs+1],Y)               #66, src.hi
              1e31 0d00  ld   [y,x]       8656  ld([Y,X])                       #67,
              1e32 de00  st   [y,x++]     8657  st([Y,Xpp])                     #68, src.lo++
              1e33 1526  ld   [$26],y     8658  ld([sysArgs+2],Y)               #69,
              1e34 caa3  st   [y,$a3]     8659  st([Y,0xA3])                    #70, pixel9
              1e35 1525  ld   [$25],y     8660  ld([sysArgs+1],Y)               #71, src.hi
              1e36 0d00  ld   [y,x]       8661  ld([Y,X])                       #72,
              1e37 de00  st   [y,x++]     8662  st([Y,Xpp])                     #73, src.lo++
              1e38 1526  ld   [$26],y     8663  ld([sysArgs+2],Y)               #74,
              1e39 caa5  st   [y,$a5]     8664  st([Y,0xA5])                    #75, pixel10
              1e3a 1525  ld   [$25],y     8665  ld([sysArgs+1],Y)               #76, src.hi
              1e3b 0d00  ld   [y,x]       8666  ld([Y,X])                       #77,
              1e3c de00  st   [y,x++]     8667  st([Y,Xpp])                     #78, src.lo++
              1e3d 1526  ld   [$26],y     8668  ld([sysArgs+2],Y)               #79,
              1e3e caa7  st   [y,$a7]     8669  st([Y,0xA7])                    #80, pixel11
              1e3f 1525  ld   [$25],y     8670  ld([sysArgs+1],Y)               #81, src.hi
              1e40 0d00  ld   [y,x]       8671  ld([Y,X])                       #82,
              1e41 de00  st   [y,x++]     8672  st([Y,Xpp])                     #83, src.lo++
              1e42 1526  ld   [$26],y     8673  ld([sysArgs+2],Y)               #84,
              1e43 caa9  st   [y,$a9]     8674  st([Y,0xA9])                    #85, pixel12
              1e44 1525  ld   [$25],y     8675  ld([sysArgs+1],Y)               #86, src.hi
              1e45 0d00  ld   [y,x]       8676  ld([Y,X])                       #87,
              1e46 de00  st   [y,x++]     8677  st([Y,Xpp])                     #88, src.lo++
              1e47 1526  ld   [$26],y     8678  ld([sysArgs+2],Y)               #89,
              1e48 caab  st   [y,$ab]     8679  st([Y,0xAB])                    #90, pixel13
              1e49 1525  ld   [$25],y     8680  ld([sysArgs+1],Y)               #91, src.hi
              1e4a 0d00  ld   [y,x]       8681  ld([Y,X])                       #92,
              1e4b de00  st   [y,x++]     8682  st([Y,Xpp])                     #93, src.lo++
              1e4c 1526  ld   [$26],y     8683  ld([sysArgs+2],Y)               #94,
              1e4d caad  st   [y,$ad]     8684  st([Y,0xAD])                    #95, pixel14
              1e4e 1525  ld   [$25],y     8685  ld([sysArgs+1],Y)               #96, src.hi
              1e4f 0d00  ld   [y,x]       8686  ld([Y,X])                       #97,
              1e50 de00  st   [y,x++]     8687  st([Y,Xpp])                     #98, src.lo++
              1e51 1526  ld   [$26],y     8688  ld([sysArgs+2],Y)               #99,
              1e52 caaf  st   [y,$af]     8689  st([Y,0xAF])                    #100, pixel15
              1e53 1525  ld   [$25],y     8690  ld([sysArgs+1],Y)               #101, src.hi
              1e54 0d00  ld   [y,x]       8691  ld([Y,X])                       #102,
              1e55 de00  st   [y,x++]     8692  st([Y,Xpp])                     #103, src.lo++
              1e56 1526  ld   [$26],y     8693  ld([sysArgs+2],Y)               #104,
              1e57 cab1  st   [y,$b1]     8694  st([Y,0xB1])                    #105, pixel16
              1e58 1525  ld   [$25],y     8695  ld([sysArgs+1],Y)               #106, src.hi
              1e59 0d00  ld   [y,x]       8696  ld([Y,X])                       #107,
              1e5a de00  st   [y,x++]     8697  st([Y,Xpp])                     #108, src.lo++
              1e5b 1526  ld   [$26],y     8698  ld([sysArgs+2],Y)               #109,
              1e5c cab3  st   [y,$b3]     8699  st([Y,0xB3])                    #110, pixel17
              1e5d 0126  ld   [$26]       8700  ld([sysArgs+2])                 #111,
              1e5e 8001  adda $01         8701  adda(1)                         #112,
              1e5f c226  st   [$26]       8702  st([sysArgs+2])                 #113, dstY++
                                          8703
              1e60 0128  ld   [$28]       8704  ld([sysArgs+4])                 #114,
              1e61 8002  adda $02         8705  adda(2)                         #115,
              1e62 d228  st   [$28],x     8706  st([sysArgs+4],X)               #116, patternLut += 2
              1e63 1529  ld   [$29],y     8707  ld([sysArgs+5],Y)               #117,
              1e64 0d00  ld   [y,x]       8708  ld([Y,X])                       #118,
              1e65 de00  st   [y,x++]     8709  st([Y,Xpp])                     #119,
              1e66 c224  st   [$24]       8710  st([sysArgs+0])                 #120, src.lo
              1e67 0d00  ld   [y,x]       8711  ld([Y,X])                       #121,
              1e68 c225  st   [$25]       8712  st([sysArgs+1])                 #122, src.hi
                                          8713
              1e69 0127  ld   [$27]       8714  ld([sysArgs+3])                 #123,
              1e6a a001  suba $01         8715  suba(1)                         #124,
              1e6b c227  st   [$27]       8716  st([sysArgs+3])                 #125, height/2 --
                                          8717  beq('.sys_spritepattern_128')   #126,
              1e6c f073  beq  .sys_spritepattern_128
              1e6d 0116  ld   [$16]       8718  ld([vPC])                       #127,
              1e6e a002  suba $02         8719  suba(2)                         #128,
              1e6f c216  st   [$16]       8720  st([vPC])                       #129, restart
              1e70 1403  ld   $03,y       8721  ld(hi('NEXTY'),Y)               #130,
              1e71 e000  jmp  y,$00       8722  jmp(Y,'NEXTY')                  #131,
              1e72 00bd  ld   $bd         8723  ld(-134/2)                      #132,
                                          8724
                                          8725  label('.sys_spritepattern_128')
.sys_spritepattern_128:
              1e73 1403  ld   $03,y       8726  ld(hi('NEXTY'),Y)               #128,
              1e74 e000  jmp  y,$00       8727  jmp(Y,'NEXTY')                  #129,
              1e75 00be  ld   $be         8728  ld(-132/2)                      #130,
                                          8729
                                          8730
                                          8731  # sys_DrawBullet
                                          8732  label('sys_DrawBullet')
sys_DrawBullet:
              1e76 1583  ld   [$83],y     8733  ld([0x83],Y)                    #18, bulletY
              1e77 0d00  ld   [y,x]       8734  ld([Y,X])                       #19, AC = screen
              1e78 1587  ld   [$87],y     8735  ld([0x87],Y)                    #20, bulletData
              1e79 69b4  xora [y,$b4]     8736  xora([Y,0xB4])                  #21, AC ^= bullet
              1e7a 1583  ld   [$83],y     8737  ld([0x83],Y)                    #22, bulletY
              1e7b de00  st   [y,x++]     8738  st([Y,Xpp])                     #23, screen = AC
                                          8739
              1e7c 0d00  ld   [y,x]       8740  ld([Y,X])                       #24, AC = screen
              1e7d 1587  ld   [$87],y     8741  ld([0x87],Y)                    #25, bulletData
              1e7e 69b5  xora [y,$b5]     8742  xora([Y,0xB5])                  #26, AC ^= bullet
              1e7f 1583  ld   [$83],y     8743  ld([0x83],Y)                    #27, bulletY
              1e80 de00  st   [y,x++]     8744  st([Y,Xpp])                     #28, screen = AC
                                          8745
              1e81 0d00  ld   [y,x]       8746  ld([Y,X])                       #29, AC = screen
              1e82 1587  ld   [$87],y     8747  ld([0x87],Y)                    #30, bulletData
              1e83 69b6  xora [y,$b6]     8748  xora([Y,0xB6])                  #31, AC ^= bullet
              1e84 1583  ld   [$83],y     8749  ld([0x83],Y)                    #32, bulletY
              1e85 de00  st   [y,x++]     8750  st([Y,Xpp])                     #33, screen = AC
                                          8751
              1e86 0d00  ld   [y,x]       8752  ld([Y,X])                       #34, AC = screen
              1e87 1587  ld   [$87],y     8753  ld([0x87],Y)                    #35, bulletData
              1e88 69b7  xora [y,$b7]     8754  xora([Y,0xB7])                  #36, AC ^= bullet
              1e89 1583  ld   [$83],y     8755  ld([0x83],Y)                    #37, bulletY
              1e8a de00  st   [y,x++]     8756  st([Y,Xpp])                     #38, screen = AC
                                          8757
              1e8b 1182  ld   [$82],x     8758  ld([0x82],X)                    #39, bulletX
              1e8c 0183  ld   [$83]       8759  ld([0x83])                      #40,
              1e8d 8001  adda $01         8760  adda(1)                         #41,
              1e8e d683  st   [$83],y     8761  st([0x83],Y)                    #42, bulletY++
                                          8762
              1e8f 0d00  ld   [y,x]       8763  ld([Y,X])                       #43, AC = screen
              1e90 1587  ld   [$87],y     8764  ld([0x87],Y)                    #44, bulletData
              1e91 69b8  xora [y,$b8]     8765  xora([Y,0xB8])                  #45, AC ^= bullet
              1e92 1583  ld   [$83],y     8766  ld([0x83],Y)                    #46, bulletY
              1e93 de00  st   [y,x++]     8767  st([Y,Xpp])                     #47, screen = AC
                                          8768
              1e94 0d00  ld   [y,x]       8769  ld([Y,X])                       #48, AC = screen
              1e95 1587  ld   [$87],y     8770  ld([0x87],Y)                    #49, bulletData
              1e96 69b9  xora [y,$b9]     8771  xora([Y,0xB9])                  #50, AC ^= bullet
              1e97 1583  ld   [$83],y     8772  ld([0x83],Y)                    #51, bulletY
              1e98 de00  st   [y,x++]     8773  st([Y,Xpp])                     #52, screen = AC
                                          8774
              1e99 0d00  ld   [y,x]       8775  ld([Y,X])                       #53, AC = screen
              1e9a 1587  ld   [$87],y     8776  ld([0x87],Y)                    #54, bulletData
              1e9b 69ba  xora [y,$ba]     8777  xora([Y,0xBA])                  #55, AC ^= bullet
              1e9c 1583  ld   [$83],y     8778  ld([0x83],Y)                    #56, bulletY
              1e9d de00  st   [y,x++]     8779  st([Y,Xpp])                     #57, screen = AC
                                          8780
              1e9e 0d00  ld   [y,x]       8781  ld([Y,X])                       #58, AC = screen
              1e9f 1587  ld   [$87],y     8782  ld([0x87],Y)                    #59, bulletData
              1ea0 69bb  xora [y,$bb]     8783  xora([Y,0xBB])                  #60, AC ^= bullet
              1ea1 1583  ld   [$83],y     8784  ld([0x83],Y)                    #61, bulletY
              1ea2 de00  st   [y,x++]     8785  st([Y,Xpp])                     #62, screen = AC
                                          8786
              1ea3 1182  ld   [$82],x     8787  ld([0x82],X)                    #63, bulletX
              1ea4 0183  ld   [$83]       8788  ld([0x83])                      #64,
              1ea5 8001  adda $01         8789  adda(1)                         #65,
              1ea6 d683  st   [$83],y     8790  st([0x83],Y)                    #66, bulletY++
                                          8791
              1ea7 0d00  ld   [y,x]       8792  ld([Y,X])                       #67, AC = screen
              1ea8 1587  ld   [$87],y     8793  ld([0x87],Y)                    #68, bulletData
              1ea9 69bc  xora [y,$bc]     8794  xora([Y,0xBC])                  #69, AC ^= bullet
              1eaa 1583  ld   [$83],y     8795  ld([0x83],Y)                    #70, bulletY
              1eab de00  st   [y,x++]     8796  st([Y,Xpp])                     #71, screen = AC
                                          8797
              1eac 0d00  ld   [y,x]       8798  ld([Y,X])                       #72, AC = screen
              1ead 1587  ld   [$87],y     8799  ld([0x87],Y)                    #73, bulletData
              1eae 69bd  xora [y,$bd]     8800  xora([Y,0xBD])                  #74, AC ^= bullet
              1eaf 1583  ld   [$83],y     8801  ld([0x83],Y)                    #75, bulletY
              1eb0 de00  st   [y,x++]     8802  st([Y,Xpp])                     #76, screen = AC
                                          8803
              1eb1 0d00  ld   [y,x]       8804  ld([Y,X])                       #77, AC = screen
              1eb2 1587  ld   [$87],y     8805  ld([0x87],Y)                    #78, bulletData
              1eb3 69be  xora [y,$be]     8806  xora([Y,0xBE])                  #79, AC ^= bullet
              1eb4 1583  ld   [$83],y     8807  ld([0x83],Y)                    #80, bulletY
              1eb5 de00  st   [y,x++]     8808  st([Y,Xpp])                     #81, screen = AC
                                          8809
              1eb6 0d00  ld   [y,x]       8810  ld([Y,X])                       #82, AC = screen
              1eb7 1587  ld   [$87],y     8811  ld([0x87],Y)                    #83, bulletData
              1eb8 69bf  xora [y,$bf]     8812  xora([Y,0xBF])                  #84, AC ^= bullet
              1eb9 1583  ld   [$83],y     8813  ld([0x83],Y)                    #85, bulletY
              1eba de00  st   [y,x++]     8814  st([Y,Xpp])                     #86, screen = AC
                                          8815
              1ebb 1182  ld   [$82],x     8816  ld([0x82],X)                    #87, bulletX
              1ebc 0183  ld   [$83]       8817  ld([0x83])                      #88,
              1ebd 8001  adda $01         8818  adda(1)                         #89,
              1ebe d683  st   [$83],y     8819  st([0x83],Y)                    #90, bulletY++
                                          8820
              1ebf 0d00  ld   [y,x]       8821  ld([Y,X])                       #91, AC = screen
              1ec0 1587  ld   [$87],y     8822  ld([0x87],Y)                    #92, bulletData
              1ec1 69c0  xora [y,$c0]     8823  xora([Y,0xC0])                  #93, AC ^= bullet
              1ec2 1583  ld   [$83],y     8824  ld([0x83],Y)                    #94, bulletY
              1ec3 de00  st   [y,x++]     8825  st([Y,Xpp])                     #95, screen = AC
                                          8826
              1ec4 0d00  ld   [y,x]       8827  ld([Y,X])                       #96, AC = screen
              1ec5 1587  ld   [$87],y     8828  ld([0x87],Y)                    #97, bulletData
              1ec6 69c1  xora [y,$c1]     8829  xora([Y,0xC1])                  #98, AC ^= bullet
              1ec7 1583  ld   [$83],y     8830  ld([0x83],Y)                    #99, bulletY
              1ec8 de00  st   [y,x++]     8831  st([Y,Xpp])                     #100, screen = AC
                                          8832
              1ec9 0d00  ld   [y,x]       8833  ld([Y,X])                       #101, AC = screen
              1eca 1587  ld   [$87],y     8834  ld([0x87],Y)                    #102, bulletData
              1ecb 69c2  xora [y,$c2]     8835  xora([Y,0xC2])                  #103, AC ^= bullet
              1ecc 1583  ld   [$83],y     8836  ld([0x83],Y)                    #104, bulletY
              1ecd de00  st   [y,x++]     8837  st([Y,Xpp])                     #105, screen = AC
                                          8838
              1ece 0d00  ld   [y,x]       8839  ld([Y,X])                       #106, AC = screen
              1ecf 1587  ld   [$87],y     8840  ld([0x87],Y)                    #107, bulletData
              1ed0 69c3  xora [y,$c3]     8841  xora([Y,0xC3])                  #108, AC ^= bullet
              1ed1 1583  ld   [$83],y     8842  ld([0x83],Y)                    #109, bulletY
              1ed2 de00  st   [y,x++]     8843  st([Y,Xpp])                     #110, screen = AC
                                          8844
              1ed3 019c  ld   [$9c]       8845  ld([0x9C])                      #111, register13
              1ed4 8001  adda $01         8846  adda(1)                         #112,
              1ed5 d29c  st   [$9c],x     8847  st([0x9C],X)                    #113, register13++
              1ed6 159d  ld   [$9d],y     8848  ld([0x9D],Y)                    #114,
              1ed7 0d00  ld   [y,x]       8849  ld([Y,X])                       #115, peek(register13)
              1ed8 c282  st   [$82]       8850  st([0x82])                      #116, bulletX
                                          8851
              1ed9 019e  ld   [$9e]       8852  ld([0x9E])                      #117,
              1eda 8001  adda $01         8853  adda(1)                         #118,
              1edb d29e  st   [$9e],x     8854  st([0x9E],X)                    #119, register14++
              1edc 159f  ld   [$9f],y     8855  ld([0x9F],Y)                    #120,
              1edd 0d00  ld   [y,x]       8856  ld([Y,X])                       #121, peek(register14)
              1ede c283  st   [$83]       8857  st([0x83])                      #122, bulletY
                                          8858
              1edf 01a0  ld   [$a0]       8859  ld([0xA0])                      #123,
              1ee0 8001  adda $01         8860  adda(1)                         #124,
              1ee1 d2a0  st   [$a0],x     8861  st([0xA0],X)                    #125, register15++
              1ee2 15a1  ld   [$a1],y     8862  ld([0xA1],Y)                    #126,
              1ee3 0d00  ld   [y,x]       8863  ld([Y,X])                       #127, peek(register15)
              1ee4 c287  st   [$87]       8864  st([0x87])                      #128, bulletData
                                          8865
              1ee5 019a  ld   [$9a]       8866  ld([0x9A])                      #129,
              1ee6 a001  suba $01         8867  suba(1)                         #130,
                                          8868  beq('.sys_drawbullet_133')      #131,
              1ee7 f0ef  beq  .sys_drawbullet_133
              1ee8 c29a  st   [$9a]       8869  st([0x9A])                      #132, register12--
              1ee9 1403  ld   $03,y       8870  ld(hi('NEXTY'),Y)               #133,
              1eea 0116  ld   [$16]       8871  ld([vPC])                       #134,
              1eeb a002  suba $02         8872  suba(2)                         #135,
              1eec c216  st   [$16]       8873  st([vPC])                       #136, restart
              1eed e000  jmp  y,$00       8874  jmp(Y,'NEXTY')                  #137,
              1eee 00ba  ld   $ba         8875  ld(-140/2)                      #138,
                                          8876  label('.sys_drawbullet_133')
.sys_drawbullet_133:
              1eef 1403  ld   $03,y       8877  ld(hi('REENTER'),Y)             #133,
              1ef0 e0cb  jmp  y,$cb       8878  jmp(Y,'REENTER')                #134,
              1ef1 00bb  ld   $bb         8879  ld(-138/2)                      #135,
                                          8880
                                          8881
              1ef2 0200  nop              8882  fillers(until=0xff)
              1ef3 0200  nop
              1ef4 0200  nop
              * 13 times
              1eff 0200  nop              8883  align(0x100, size=0x100)
                                          8884
                                          8885  #-----------------------------------------------------------------------
                                          8886  #       More sys implementations, (0x1F00)
                                          8887  #-----------------------------------------------------------------------
                                          8888
                                          8889  # sys_CmpByteBounds, 0xB8,B9=src, 0xBA,BB=vPC_bounds, 0xBC,BD=bounds, 0xBE=index,
                                          8890  #                    0xBF=count, output:vAC.lo=index
                                          8891  label('sys_CmpByteBounds')
sys_CmpByteBounds:
              1f00 a001  suba $01         8892  suba(1)                         #18,
                                          8893  bge('.sys_cmpbytebounds_21')    #19,
              1f01 f406  bge  .sys_cmpbytebounds_21
              1f02 c2bf  st   [$bf]       8894  st([0xBF])                      #20, count--
              1f03 1403  ld   $03,y       8895  ld(hi('REENTER'),Y)             #21,
              1f04 e0cb  jmp  y,$cb       8896  jmp(Y,'REENTER')                #22,
              1f05 00f3  ld   $f3         8897  ld(-26/2)                       #23,
                                          8898  label('.sys_cmpbytebounds_21')
.sys_cmpbytebounds_21:
              1f06 01b8  ld   [$b8]       8899  ld([0xB8])                      #21,
              1f07 91be  adda [$be],x     8900  adda([0xBE],X)                  #22,
              1f08 15b9  ld   [$b9],y     8901  ld([0xB9],Y)                    #23,
              1f09 0d00  ld   [y,x]       8902  ld([Y,X])                       #24,
                                          8903  bmi('.sys_cmpbytebounds_27')    #25,
              1f0a e80e  blt  .sys_cmpbytebounds_27
              1f0b a1bc  suba [$bc]       8904  suba([0xBC])                    #26,
                                          8905  bra('.sys_cmpbytebounds_29')    #27,
              1f0c fc10  bra  .sys_cmpbytebounds_29
              1f0d 41bc  ora  [$bc]       8906  ora([0xBC])                     #28,
                                          8907  label('.sys_cmpbytebounds_27')
.sys_cmpbytebounds_27:
              1f0e 21bc  anda [$bc]       8908  anda([0xBC])                    #27,
              1f0f 0200  nop              8909  nop()                           #28,
                                          8910
                                          8911  label('.sys_cmpbytebounds_29')
.sys_cmpbytebounds_29:                    8912  bpl('.sys_cmpbytebounds_31')    #29,
              1f10 f422  bge  .sys_cmpbytebounds_31
              1f11 0d00  ld   [y,x]       8913  ld([Y,X])                       #30,
              1f12 0116  ld   [$16]       8914  ld([vPC])                       #31, < lbounds
              1f13 c21a  st   [$1a]       8915  st([vLR])                       #32, return to SYS call
              1f14 0117  ld   [$17]       8916  ld([vPC+1])                     #33,
              1f15 c21b  st   [$1b]       8917  st([vLR+1])                     #34,
              1f16 01ba  ld   [$ba]       8918  ld([0xBA])                      #35,
              1f17 a002  suba $02         8919  suba(2)                         #36,
              1f18 c216  st   [$16]       8920  st([vPC])                       #37, NEXT adds 2
              1f19 01bb  ld   [$bb]       8921  ld([0xBB])                      #38,
              1f1a c217  st   [$17]       8922  st([vPC+1])                     #39, bounds call address
              1f1b 01be  ld   [$be]       8923  ld([0xBE])                      #40,
              1f1c c218  st   [$18]       8924  st([vAC])                       #41, vAC.lo = index
              1f1d 8001  adda $01         8925  adda(1)                         #42,
              1f1e c2be  st   [$be]       8926  st([0xBE])                      #43, index++
              1f1f 1403  ld   $03,y       8927  ld(hi('NEXTY'),Y)               #44,
              1f20 e000  jmp  y,$00       8928  jmp(Y,'NEXTY')                  #45,
              1f21 00e8  ld   $e8         8929  ld(-48/2)                       #46,
                                          8930
                                          8931  label('.sys_cmpbytebounds_31')
.sys_cmpbytebounds_31:                    8932  bmi('.sys_cmpbytebounds_33')    #31,
              1f22 e826  blt  .sys_cmpbytebounds_33
              1f23 a1bd  suba [$bd]       8933  suba([0xBD])                    #32,
                                          8934  bra('.sys_cmpbytebounds_35')    #33,
              1f24 fc28  bra  .sys_cmpbytebounds_35
              1f25 41bd  ora  [$bd]       8935  ora([0xBD])                     #34,
                                          8936  label('.sys_cmpbytebounds_33')
.sys_cmpbytebounds_33:
              1f26 21bd  anda [$bd]       8937  anda([0xBD])                    #33,
              1f27 0200  nop              8938  nop()                           #34,
                                          8939  label('.sys_cmpbytebounds_35')
.sys_cmpbytebounds_35:                    8940  bmi('.sys_cmpbytebounds_37')    #35,
              1f28 e839  blt  .sys_cmpbytebounds_37
              1f29 0116  ld   [$16]       8941  ld([vPC])                       #36, >= ubounds
              1f2a c21a  st   [$1a]       8942  st([vLR])                       #37, return to SYS call
              1f2b 0117  ld   [$17]       8943  ld([vPC+1])                     #38,
              1f2c c21b  st   [$1b]       8944  st([vLR+1])                     #39,
              1f2d 01ba  ld   [$ba]       8945  ld([0xBA])                      #40,
              1f2e a002  suba $02         8946  suba(2)                         #41,
              1f2f c216  st   [$16]       8947  st([vPC])                       #42, NEXT adds 2
              1f30 01bb  ld   [$bb]       8948  ld([0xBB])                      #43,
              1f31 c217  st   [$17]       8949  st([vPC+1])                     #44, bounds call address
              1f32 01be  ld   [$be]       8950  ld([0xBE])                      #45,
              1f33 c218  st   [$18]       8951  st([vAC])                       #46, vAC.lo = index
              1f34 8001  adda $01         8952  adda(1)                         #47,
              1f35 c2be  st   [$be]       8953  st([0xBE])                      #48, index++
              1f36 1403  ld   $03,y       8954  ld(hi('REENTER'),Y)             #49,
              1f37 e0cb  jmp  y,$cb       8955  jmp(Y,'REENTER')                #50,
              1f38 00e5  ld   $e5         8956  ld(-54/2)                       #51,
                                          8957
                                          8958  label('.sys_cmpbytebounds_37')
.sys_cmpbytebounds_37:
              1f39 a002  suba $02         8959  suba(2)                         #37,
              1f3a c216  st   [$16]       8960  st([vPC])                       #38, restart
              1f3b 01be  ld   [$be]       8961  ld([0xBE])                      #39,
              1f3c 8001  adda $01         8962  adda(1)                         #40,
              1f3d c2be  st   [$be]       8963  st([0xBE])                      #41, index++
              1f3e 1403  ld   $03,y       8964  ld(hi('NEXTY'),Y)               #42,
              1f3f e000  jmp  y,$00       8965  jmp(Y,'NEXTY')                  #43,
              1f40 00e9  ld   $e9         8966  ld(-46/2)                       #44,
                                          8967
                                          8968
                                          8969  # SYS_Reset_88 imolementation
                                          8970  label('sys_Reset_88')
sys_Reset_88: 1f41 c221  st   [$21]       8971  st([romType])                   #18
              1f42 0000  ld   $00         8972  ld(0)                           #19
              1f43 c21c  st   [$1c]       8973  st([vSP])                       #20 vSP
              1f44 c204  st   [$04]       8974  st([vSPH])                      #21 vSPH
              1f45 1401  ld   $01,y       8975  ld(hi('videoTop_v5'),Y)         #22
              1f46 caf9  st   [y,$f9]     8976  st([Y,lo('videoTop_v5')])       #23 Show all 120 pixel lines
              1f47 caf6  st   [y,$f6]     8977  st([Y,vIRQ_v5])                 #24 Disable vIRQ dispatch
              1f48 caf7  st   [y,$f7]     8978  st([Y,vIRQ_v5+1])               #25
              1f49 c22c  st   [$2c]       8979  st([soundTimer])                #26 soundTimer
                                          8980  assert userCode&255 == 0
              1f4a c21a  st   [$1a]       8981  st([vLR])                       #27 vLR
              1f4b 0002  ld   $02         8982  ld(userCode>>8)                 #28
              1f4c c21b  st   [$1b]       8983  st([vLR+1])                     #29
              1f4d 00f6  ld   $f6         8984  ld('nopixels')                  #30 Video mode 3 (fast)
              1f4e c20a  st   [$0a]       8985  st([videoModeB])                #31
              1f4f c20b  st   [$0b]       8986  st([videoModeC])                #32
              1f50 c20c  st   [$0c]       8987  st([videoModeD])                #33
              1f51 00ad  ld   $ad         8988  ld('SYS_Exec_88')               #34 SYS_Exec_88
              1f52 c222  st   [$22]       8989  st([sysFn])                     #35 High byte (remains) 0
              1f53 004a  ld   $4a         8990  ld('Reset')                     #36 Reset.gt1 from EPROM
              1f54 c224  st   [$24]       8991  st([sysArgs+0])                 #37
              1f55 00dd  ld   $dd         8992  ld(hi('Reset'))                 #38
              1f56 c225  st   [$25]       8993  st([sysArgs+1])                 #39
              1f57 0116  ld   [$16]       8994  ld([vPC])                       #40 Force second SYS call
              1f58 a002  suba $02         8995  suba(2)                         #41
              1f59 c216  st   [$16]       8996  st([vPC])                       #42
              1f5a c17f  ctrl $7f         8997  ctrl(0b01111111)                #43 Expansion board: (1) reset signal.
              1f5b c17c  ctrl $7c         8998  ctrl(0b01111100)                #44 (2) disable SPI slaves, enable RAM bank 1
              1f5c 1403  ld   $03,y       8999  ld(hi('REENTER'),Y)             #45
              1f5d e0cb  jmp  y,$cb       9000  jmp(Y,'REENTER')                #46
              1f5e 00e7  ld   $e7         9001  ld(-50/2)                       #47
                                          9002
                                          9003
                                          9004  #-----------------------------------------------------------------------
                                          9005  # sys_Divide_u168, x:u8 = x:u16 / y:u8, rem:u8 = x:u16 % y:u8
                                          9006  # sysArgs0,1=x, sysArgs2=y, sysArgs4=count, output : sysArgs0=res, sysArgs1=rem
                                          9007  label('sys_Divide_u168')
sys_Divide_u168:
              1f5f c229  st   [$29]       9008  st([sysArgs+5])                 #18, save x.hi
              1f60 0128  ld   [$28]       9009  ld([sysArgs+4])                 #19,
              1f61 a001  suba $01         9010  suba(1)                         #20, count--
                                          9011  bge('.sys_divide_u168_23')      #21,
              1f62 f467  bge  .sys_divide_u168_23
              1f63 c228  st   [$28]       9012  st([sysArgs+4])                 #22,
              1f64 1403  ld   $03,y       9013  ld(hi('REENTER'),Y)             #23,
              1f65 e0cb  jmp  y,$cb       9014  jmp(Y,'REENTER')                #24,
              1f66 00f2  ld   $f2         9015  ld(-28/2)                       #25,
                                          9016
                                          9017  label('.sys_divide_u168_23')
.sys_divide_u168_23:
              1f67 0124  ld   [$24]       9018  ld([sysArgs+0])                 #23,
              1f68 3080  anda $80,x       9019  anda(128,X)                     #24,
              1f69 8124  adda [$24]       9020  adda([sysArgs+0])               #25,
              1f6a c224  st   [$24]       9021  st([sysArgs+0])                 #26,
              1f6b 0500  ld   [x]         9022  ld([X])                         #27,
              1f6c 8125  adda [$25]       9023  adda([sysArgs+1])               #28,
              1f6d 8125  adda [$25]       9024  adda([sysArgs+1])               #29,
              1f6e c225  st   [$25]       9025  st([sysArgs+1])                 #30, x <<1
                                          9026  bmi('.sys_divide_u168_33')      #31, unsigned compare
              1f6f e874  blt  .sys_divide_u168_33
              1f70 a126  suba [$26]       9027  suba([sysArgs+2])               #32, x.hi - y
              1f71 c21d  st   [$1d]       9028  st([vTmp])                      #33,
                                          9029  bra('.sys_divide_u168_36')      #34,
              1f72 fc77  bra  .sys_divide_u168_36
              1f73 4126  ora  [$26]       9030  ora([sysArgs+2])                #35,
                                          9031  label('.sys_divide_u168_33')
.sys_divide_u168_33:
              1f74 c21d  st   [$1d]       9032  st([vTmp])                      #33,
              1f75 2126  anda [$26]       9033  anda([sysArgs+2])               #34,
              1f76 0200  nop              9034  nop()                           #35,
                                          9035
                                          9036  label('.sys_divide_u168_36')
.sys_divide_u168_36:                      9037  bmi('.sys_divide_u168_38')      #36,
              1f77 e88d  blt  .sys_divide_u168_38
              1f78 011d  ld   [$1d]       9038  ld([vTmp])                      #37, x.hi >= y
              1f79 c225  st   [$25]       9039  st([sysArgs+1])                 #38, x.hi = (x.hi - y) <<8
              1f7a 0124  ld   [$24]       9040  ld([sysArgs+0])                 #39,
              1f7b 8001  adda $01         9041  adda(1)                         #40, x.lo++
                                          9042  bne('.sys_divide_u168_43')      #41,
              1f7c ec87  bne  .sys_divide_u168_43
              1f7d c224  st   [$24]       9043  st([sysArgs+0])                 #42,
              1f7e 0125  ld   [$25]       9044  ld([sysArgs+1])                 #43,
              1f7f 8001  adda $01         9045  adda(1)                         #44, x.hi++
              1f80 c225  st   [$25]       9046  st([sysArgs+1])                 #45,
              1f81 0116  ld   [$16]       9047  ld([vPC])                       #46,
              1f82 a002  suba $02         9048  suba(2)                         #47,
              1f83 c216  st   [$16]       9049  st([vPC])                       #48, restart
              1f84 1403  ld   $03,y       9050  ld(hi('REENTER'),Y)             #49,
              1f85 e0cb  jmp  y,$cb       9051  jmp(Y,'REENTER')                #50,
              1f86 00e5  ld   $e5         9052  ld(-54/2)                       #51,
                                          9053  label('.sys_divide_u168_43')
.sys_divide_u168_43:
              1f87 0116  ld   [$16]       9054  ld([vPC])                       #43,
              1f88 a002  suba $02         9055  suba(2)                         #44,
              1f89 c216  st   [$16]       9056  st([vPC])                       #45, restart
              1f8a 1403  ld   $03,y       9057  ld(hi('NEXTY'),Y)               #46,
              1f8b e000  jmp  y,$00       9058  jmp(Y,'NEXTY')                  #47,
              1f8c 00e7  ld   $e7         9059  ld(-50/2)                       #48,
                                          9060
                                          9061  label('.sys_divide_u168_38')
.sys_divide_u168_38:
              1f8d 0129  ld   [$29]       9062  ld([sysArgs+5])                 #38,
                                          9063  bpl('.sys_divide_u168_41')      #39, msb(x.hi) = 0
              1f8e f4a4  bge  .sys_divide_u168_41
              1f8f 011d  ld   [$1d]       9064  ld([vTmp])                      #40, x.hi >= y
              1f90 c225  st   [$25]       9065  st([sysArgs+1])                 #41, x.hi = (x.hi - y) <<8
              1f91 0124  ld   [$24]       9066  ld([sysArgs+0])                 #42,
              1f92 8001  adda $01         9067  adda(1)                         #43, x.lo++
                                          9068  bne('.sys_divide_u168_46')      #44,
              1f93 ec9e  bne  .sys_divide_u168_46
              1f94 c224  st   [$24]       9069  st([sysArgs+0])                 #45,
              1f95 0125  ld   [$25]       9070  ld([sysArgs+1])                 #46,
              1f96 8001  adda $01         9071  adda(1)                         #47, x.hi++
              1f97 c225  st   [$25]       9072  st([sysArgs+1])                 #48,
              1f98 0116  ld   [$16]       9073  ld([vPC])                       #49,
              1f99 a002  suba $02         9074  suba(2)                         #50,
              1f9a c216  st   [$16]       9075  st([vPC])                       #51, restart
              1f9b 1403  ld   $03,y       9076  ld(hi('NEXTY'),Y)               #52,
              1f9c e000  jmp  y,$00       9077  jmp(Y,'NEXTY')                  #53,
              1f9d 00e4  ld   $e4         9078  ld(-56/2)                       #54,
                                          9079  label('.sys_divide_u168_46')
.sys_divide_u168_46:
              1f9e 0116  ld   [$16]       9080  ld([vPC])                       #46,
              1f9f a002  suba $02         9081  suba(2)                         #47,
              1fa0 c216  st   [$16]       9082  st([vPC])                       #48, restart
              1fa1 1403  ld   $03,y       9083  ld(hi('REENTER'),Y)             #49,
              1fa2 e0cb  jmp  y,$cb       9084  jmp(Y,'REENTER')                #50,
              1fa3 00e5  ld   $e5         9085  ld(-54/2)                       #51,
                                          9086
                                          9087  label('.sys_divide_u168_41')
.sys_divide_u168_41:
              1fa4 0116  ld   [$16]       9088  ld([vPC])                       #41,
              1fa5 a002  suba $02         9089  suba(2)                         #42,
              1fa6 c216  st   [$16]       9090  st([vPC])                       #43, restart
              1fa7 1403  ld   $03,y       9091  ld(hi('NEXTY'),Y)               #44,
              1fa8 e000  jmp  y,$00       9092  jmp(Y,'NEXTY')                  #45,
              1fa9 00e8  ld   $e8         9093  ld(-48/2)                       #46,
                                          9094
                                          9095
              1faa 0200  nop              9096  fillers(until=0xc0)
              1fab 0200  nop
              1fac 0200  nop
              * 22 times
                                          9097
                                          9098  # sys_ConvertVTableX, sysArgs0=dst, sysArgs2=offsetX, sysArgs3=accum, sysArgs4=count
                                          9099  label('SYS_ConvertVTableX_66')
SYS_ConvertVTableX_66:
              1fc0 1401  ld   $01,y       9100  ld(1,Y)                         #15, VTable.hi
              1fc1 1126  ld   [$26],x     9101  ld([sysArgs+2],X)               #16, VTable.lo
              1fc2 0d00  ld   [y,x]       9102  ld([Y,X])                       #17, get VTableX
              1fc3 8127  adda [$27]       9103  adda([sysArgs+3])               #18,
              1fc4 1525  ld   [$25],y     9104  ld([sysArgs+1],Y)               #19, dst.hi
              1fc5 1124  ld   [$24],x     9105  ld([sysArgs+0],X)               #20, dst.lo
              1fc6 ce00  st   [y,x]       9106  st([Y,X])                       #21,
              1fc7 c227  st   [$27]       9107  st([sysArgs+3])                 #22, accum
                                          9108
              1fc8 1401  ld   $01,y       9109  ld(1,Y)                         #23
              1fc9 0124  ld   [$24]       9110  ld([sysArgs+0])                 #24,
              1fca 8001  adda $01         9111  adda(1)                         #25,
              1fcb c224  st   [$24]       9112  st([sysArgs+0])                 #26, dst++
              1fcc 0126  ld   [$26]       9113  ld([sysArgs+2])                 #27,
              1fcd 8002  adda $02         9114  adda(2)                         #28,
              1fce d226  st   [$26],x     9115  st([sysArgs+2],X)               #29, offsetX += 2
              1fcf 0d00  ld   [y,x]       9116  ld([Y,X])                       #30, get video table X
              1fd0 8127  adda [$27]       9117  adda([sysArgs+3])               #31,
              1fd1 1525  ld   [$25],y     9118  ld([sysArgs+1],Y)               #32, dst.hi
              1fd2 1124  ld   [$24],x     9119  ld([sysArgs+0],X)               #33, dst.lo
              1fd3 ce00  st   [y,x]       9120  st([Y,X])                       #34,
              1fd4 c227  st   [$27]       9121  st([sysArgs+3])                 #35, accum
                                          9122
              1fd5 1401  ld   $01,y       9123  ld(1,Y)                         #36
              1fd6 0124  ld   [$24]       9124  ld([sysArgs+0])                 #37,
              1fd7 8001  adda $01         9125  adda(1)                         #38,
              1fd8 c224  st   [$24]       9126  st([sysArgs+0])                 #39, dst++
              1fd9 0126  ld   [$26]       9127  ld([sysArgs+2])                 #40,
              1fda 8002  adda $02         9128  adda(2)                         #41,
              1fdb d226  st   [$26],x     9129  st([sysArgs+2],X)               #42, offsetX += 2
              1fdc 0d00  ld   [y,x]       9130  ld([Y,X])                       #43, get video table X
              1fdd 8127  adda [$27]       9131  adda([sysArgs+3])               #44,
              1fde 1525  ld   [$25],y     9132  ld([sysArgs+1],Y)               #45, dst.hi
              1fdf 1124  ld   [$24],x     9133  ld([sysArgs+0],X)               #46, dst.lo
              1fe0 ce00  st   [y,x]       9134  st([Y,X])                       #47,
              1fe1 c227  st   [$27]       9135  st([sysArgs+3])                 #48, accum
                                          9136
              1fe2 0128  ld   [$28]       9137  ld([sysArgs+4])                 #49,
              1fe3 a001  suba $01         9138  suba(1)                         #50,
              1fe4 c228  st   [$28]       9139  st([sysArgs+4])                 #51, count--
                                          9140  beq('.sys_convertvtablex_54')   #52,
              1fe5 f0f2  beq  .sys_convertvtablex_54
              1fe6 0124  ld   [$24]       9141  ld([sysArgs+0])                 #53,
              1fe7 8001  adda $01         9142  adda(1)                         #54,
              1fe8 c224  st   [$24]       9143  st([sysArgs+0])                 #55, dst++
              1fe9 0126  ld   [$26]       9144  ld([sysArgs+2])                 #56,
              1fea 8002  adda $02         9145  adda(2)                         #57,
              1feb c226  st   [$26]       9146  st([sysArgs+2])                 #58, offsetX += 2
              1fec 0116  ld   [$16]       9147  ld([vPC])                       #59,
              1fed a002  suba $02         9148  suba(2)                         #60,
              1fee c216  st   [$16]       9149  st([vPC])                       #61, restart
              1fef 1403  ld   $03,y       9150  ld(hi('NEXTY'),Y)               #62,
              1ff0 e000  jmp  y,$00       9151  jmp(Y,'NEXTY')                  #63,
              1ff1 00df  ld   $df         9152  ld(-66/2)                       #64,
                                          9153  label('.sys_convertvtablex_54')
.sys_convertvtablex_54:
              1ff2 1403  ld   $03,y       9154  ld(hi('NEXTY'),Y)               #54,
              1ff3 e000  jmp  y,$00       9155  jmp(Y,'NEXTY')                  #55,
              1ff4 00e3  ld   $e3         9156  ld(-58/2)                       #56,
                                          9157
                                          9158
              1ff5 0200  nop              9159  fillers(until=0xff)
              1ff6 0200  nop
              1ff7 0200  nop
              * 10 times
              1fff 0200  nop              9160  align(0x100, size=0x100)
                                          9161
                                          9162  #-----------------------------------------------------------------------
                                          9163  #       More sys implementations, (0x2000)
                                          9164  #-----------------------------------------------------------------------
                                          9165
                                          9166  # SYS_DrawSpriteH_vX_140
                                          9167  label('SYS_DrawSpriteH_vX_140')
SYS_DrawSpriteH_vX_140:
              2000 0186  ld   [$86]       9168  ld([0x86])                      #15, spriteEnable
                                          9169  bmi('.sys_drawspriteh_18')      #16,
              2001 e89b  blt  .sys_drawspriteh_18
              2002 0183  ld   [$83]       9170  ld([0x83])                      #17, spriteY
              2003 8183  adda [$83]       9171  adda([0x83])                    #18, spriteY
              2004 1200  ld   ac,x        9172  ld(AC,X)                        #19,
              2005 1401  ld   $01,y       9173  ld(1,Y)                         #20, 0x0100
              2006 0d00  ld   [y,x]       9174  ld([Y,X])                       #21, VTableY
              2007 c285  st   [$85]       9175  st([0x85])                      #22,
              2008 1525  ld   [$25],y     9176  ld([sysArgs+1],Y)               #23, VTableAbsX.hi
              2009 0124  ld   [$24]       9177  ld([sysArgs+0])                 #24, VTableAbsX.lo
              200a 8183  adda [$83]       9178  adda([0x83])                    #25, spriteY
              200b 1200  ld   ac,x        9179  ld(AC,X)                        #26,
              200c 0182  ld   [$82]       9180  ld([0x82])                      #27, spriteX
              200d 8d00  adda [y,x]       9181  adda([Y,X])                     #28, VTableX offset, (absolute)
              200e d284  st   [$84],x     9182  st([0x84],X)                    #29,
              200f 1585  ld   [$85],y     9183  ld([0x85],Y)                    #30,
                                          9184
              2010 0d00  ld   [y,x]       9185  ld([Y,X])                       #31, get back0
              2011 1587  ld   [$87],y     9186  ld([0x87],Y)                    #32, spriteData
              2012 caa2  st   [y,$a2]     9187  st([Y,0xA2])                    #33, save back0
              2013 09a3  ld   [y,$a3]     9188  ld([Y,0xA3])                    #34, load pixel0
              2014 1585  ld   [$85],y     9189  ld([0x85],Y)                    #35, spriteY
              2015 ec18  bne  $2018       9190  bne(pc()+3)                     #36, colourkey
              2016 fc19  bra  $2019       9191  bra(pc()+3)                     #37,
              2017 0d00  ld   [y,x]       9192  ld([Y,X])                       #38,
              2018 0200  nop              9193  nop()                           #38, (!)
              2019 de00  st   [y,x++]     9194  st([Y,Xpp])                     #39, draw pixel0
                                          9195
              201a 0d00  ld   [y,x]       9196  ld([Y,X])                       #40, get back1
              201b 1587  ld   [$87],y     9197  ld([0x87],Y)                    #41, spriteData
              201c caa4  st   [y,$a4]     9198  st([Y,0xA4])                    #42, save back1
              201d 09a5  ld   [y,$a5]     9199  ld([Y,0xA5])                    #43, load pixel1
              201e 1585  ld   [$85],y     9200  ld([0x85],Y)                    #44, spriteY
              201f ec22  bne  $2022       9201  bne(pc()+3)                     #45, colourkey
              2020 fc23  bra  $2023       9202  bra(pc()+3)                     #46,
              2021 0d00  ld   [y,x]       9203  ld([Y,X])                       #47,
              2022 0200  nop              9204  nop()                           #47, (!)
              2023 de00  st   [y,x++]     9205  st([Y,Xpp])                     #48, draw pixel1
                                          9206
              2024 0d00  ld   [y,x]       9207  ld([Y,X])                       #49, get back2
              2025 1587  ld   [$87],y     9208  ld([0x87],Y)                    #50, spriteData
              2026 caa6  st   [y,$a6]     9209  st([Y,0xA6])                    #51, save back2
              2027 09a7  ld   [y,$a7]     9210  ld([Y,0xA7])                    #52, load pixel2
              2028 1585  ld   [$85],y     9211  ld([0x85],Y)                    #53, spriteY
              2029 ec2c  bne  $202c       9212  bne(pc()+3)                     #54, colourkey
              202a fc2d  bra  $202d       9213  bra(pc()+3)                     #55,
              202b 0d00  ld   [y,x]       9214  ld([Y,X])                       #56,
              202c 0200  nop              9215  nop()                           #56, (!)
              202d de00  st   [y,x++]     9216  st([Y,Xpp])                     #57, draw pixel2
                                          9217
              202e 0d00  ld   [y,x]       9218  ld([Y,X])                       #58, get back3
              202f 1587  ld   [$87],y     9219  ld([0x87],Y)                    #59, spriteData
              2030 caa8  st   [y,$a8]     9220  st([Y,0xA8])                    #60, save back3
              2031 09a9  ld   [y,$a9]     9221  ld([Y,0xA9])                    #61, load pixel3
              2032 1585  ld   [$85],y     9222  ld([0x85],Y)                    #62, spriteY
              2033 ec36  bne  $2036       9223  bne(pc()+3)                     #63, colourkey
              2034 fc37  bra  $2037       9224  bra(pc()+3)                     #64,
              2035 0d00  ld   [y,x]       9225  ld([Y,X])                       #65,
              2036 0200  nop              9226  nop()                           #65, (!)
              2037 de00  st   [y,x++]     9227  st([Y,Xpp])                     #66, draw pixel3
                                          9228
              2038 0d00  ld   [y,x]       9229  ld([Y,X])                       #67, get back4
              2039 1587  ld   [$87],y     9230  ld([0x87],Y)                    #68, spriteData
              203a caaa  st   [y,$aa]     9231  st([Y,0xAA])                    #69, save back4
              203b 09ab  ld   [y,$ab]     9232  ld([Y,0xAB])                    #70, load pixel4
              203c 1585  ld   [$85],y     9233  ld([0x85],Y)                    #71, spriteY
              203d ec40  bne  $2040       9234  bne(pc()+3)                     #72, colourkey
              203e fc41  bra  $2041       9235  bra(pc()+3)                     #73,
              203f 0d00  ld   [y,x]       9236  ld([Y,X])                       #74,
              2040 0200  nop              9237  nop()                           #74, (!)
              2041 de00  st   [y,x++]     9238  st([Y,Xpp])                     #75, draw pixel4
                                          9239
              2042 0d00  ld   [y,x]       9240  ld([Y,X])                       #76, get back5
              2043 1587  ld   [$87],y     9241  ld([0x87],Y)                    #77, spriteData
              2044 caac  st   [y,$ac]     9242  st([Y,0xAC])                    #78, save back5
              2045 09ad  ld   [y,$ad]     9243  ld([Y,0xAD])                    #79, load pixel5
              2046 1585  ld   [$85],y     9244  ld([0x85],Y)                    #80, spriteY
              2047 ec4a  bne  $204a       9245  bne(pc()+3)                     #81, colourkey
              2048 fc4b  bra  $204b       9246  bra(pc()+3)                     #82,
              2049 0d00  ld   [y,x]       9247  ld([Y,X])                       #83,
              204a 0200  nop              9248  nop()                           #83, (!)
              204b de00  st   [y,x++]     9249  st([Y,Xpp])                     #84, draw pixel5
                                          9250
              204c 0d00  ld   [y,x]       9251  ld([Y,X])                       #85, get back6
              204d 1587  ld   [$87],y     9252  ld([0x87],Y)                    #86, spriteData
              204e caae  st   [y,$ae]     9253  st([Y,0xAE])                    #87, save back6
              204f 09af  ld   [y,$af]     9254  ld([Y,0xAF])                    #88, load pixel6
              2050 1585  ld   [$85],y     9255  ld([0x85],Y)                    #89, spriteY
              2051 ec54  bne  $2054       9256  bne(pc()+3)                     #90, colourkey
              2052 fc55  bra  $2055       9257  bra(pc()+3)                     #91,
              2053 0d00  ld   [y,x]       9258  ld([Y,X])                       #92,
              2054 0200  nop              9259  nop()                           #92, (!)
              2055 de00  st   [y,x++]     9260  st([Y,Xpp])                     #93, draw pixel6
                                          9261
              2056 0d00  ld   [y,x]       9262  ld([Y,X])                       #94, get back7
              2057 1587  ld   [$87],y     9263  ld([0x87],Y)                    #95, spriteData
              2058 cab0  st   [y,$b0]     9264  st([Y,0xB0])                    #96, save back7
              2059 09b1  ld   [y,$b1]     9265  ld([Y,0xB1])                    #97, load pixel7
              205a 1585  ld   [$85],y     9266  ld([0x85],Y)                    #98, spriteY
              205b ec5e  bne  $205e       9267  bne(pc()+3)                     #99, colourkey
              205c fc5f  bra  $205f       9268  bra(pc()+3)                     #100,
              205d 0d00  ld   [y,x]       9269  ld([Y,X])                       #101,
              205e 0200  nop              9270  nop()                           #101, (!)
              205f de00  st   [y,x++]     9271  st([Y,Xpp])                     #102, draw pixel7
                                          9272
              2060 0d00  ld   [y,x]       9273  ld([Y,X])                       #103, get back8
              2061 1587  ld   [$87],y     9274  ld([0x87],Y)                    #104, spriteData
              2062 cab2  st   [y,$b2]     9275  st([Y,0xB2])                    #105, save back8
              2063 09b3  ld   [y,$b3]     9276  ld([Y,0xB3])                    #106, load pixel8
              2064 1585  ld   [$85],y     9277  ld([0x85],Y)                    #107, spriteY
              2065 ec68  bne  $2068       9278  bne(pc()+3)                     #108, colourkey
              2066 fc69  bra  $2069       9279  bra(pc()+3)                     #109,
              2067 0d00  ld   [y,x]       9280  ld([Y,X])                       #110,
              2068 0200  nop              9281  nop()                           #110, (!)
              2069 de00  st   [y,x++]     9282  st([Y,Xpp])                     #111, draw pixel8
                                          9283
              206a 1587  ld   [$87],y     9284  ld([0x87],Y)                    #112, spriteData
              206b 0184  ld   [$84]       9285  ld([0x84])                      #113, spriteX
              206c caa0  st   [y,$a0]     9286  st([Y,0xA0])                    #114, spriteOldX
              206d 0185  ld   [$85]       9287  ld([0x85])                      #115, spriteY
              206e caa1  st   [y,$a1]     9288  st([Y,0xA1])                    #116, spriteOldY
              206f 0186  ld   [$86]       9289  ld([0x86])                      #117,
              2070 a001  suba $01         9290  suba(1)                         #118,
              2071 c286  st   [$86]       9291  st([0x86])                      #119, scanLines--
                                          9292  beq('.sys_drawspriteh_122')     #120,
              2072 f07f  beq  .sys_drawspriteh_122
              2073 0183  ld   [$83]       9293  ld([0x83])                      #121, spriteY
              2074 8001  adda $01         9294  adda(1)                         #122,
              2075 c283  st   [$83]       9295  st([0x83])                      #123, spriteY++
              2076 0187  ld   [$87]       9296  ld([0x87])                      #124,
              2077 8001  adda $01         9297  adda(1)                         #125,
              2078 c287  st   [$87]       9298  st([0x87])                      #126, spriteData++
              2079 0116  ld   [$16]       9299  ld([vPC])                       #127,
              207a a002  suba $02         9300  suba(2)                         #128,
              207b c216  st   [$16]       9301  st([vPC])                       #129, restart
              207c 1403  ld   $03,y       9302  ld(hi('NEXTY'),Y)               #130,
              207d e000  jmp  y,$00       9303  jmp(Y,'NEXTY')                  #131,
              207e 00bd  ld   $bd         9304  ld(-134/2)                      #132,
                                          9305
                                          9306  label('.sys_drawspriteh_122')
.sys_drawspriteh_122:
              207f 01a0  ld   [$a0]       9307  ld([0xA0])                      #122,
              2080 8004  adda $04         9308  adda(4)                         #123,
              2081 d2a0  st   [$a0],x     9309  st([0xA0],X)                    #124, register15 += 4
              2082 15a1  ld   [$a1],y     9310  ld([0xA1],Y)                    #125,
              2083 0d00  ld   [y,x]       9311  ld([Y,X])                       #126, peek(register15 + 0)
              2084 c282  st   [$82]       9312  st([0x82])                      #127, spriteX
              2085 de00  st   [y,x++]     9313  st([Y,Xpp])                     #128, X++
              2086 0d00  ld   [y,x]       9314  ld([Y,X])                       #129, peek(register15 + 1)
              2087 c283  st   [$83]       9315  st([0x83])                      #130, spriteY
              2088 de00  st   [y,x++]     9316  st([Y,Xpp])                     #131, X++
              2089 0d00  ld   [y,x]       9317  ld([Y,X])                       #132, peek(register15 + 2)
              208a c286  st   [$86]       9318  st([0x86])                      #133, spriteHeight
              208b de00  st   [y,x++]     9319  st([Y,Xpp])                     #134, X++
              208c 0d00  ld   [y,x]       9320  ld([Y,X])                       #135, peek(register15 + 3)
              208d c287  st   [$87]       9321  st([0x87])                      #136, spriteData
              208e 0188  ld   [$88]       9322  ld([0x88])                      #137,
              208f a001  suba $01         9323  suba(1)                         #138,
              2090 c288  st   [$88]       9324  st([0x88])                      #139, register3--, spriteCount
                                          9325  beq('.sys_drawspriteh_142')     #140,
              2091 f098  beq  .sys_drawspriteh_142
              2092 0116  ld   [$16]       9326  ld([vPC])                       #141,
              2093 a002  suba $02         9327  suba(2)                         #142,
              2094 c216  st   [$16]       9328  st([vPC])                       #143, restart
              2095 1403  ld   $03,y       9329  ld(hi('NEXTY'),Y)               #144,
              2096 e000  jmp  y,$00       9330  jmp(Y,'NEXTY')                  #145,
              2097 00b6  ld   $b6         9331  ld(-148/2)                      #146,
                                          9332  label('.sys_drawspriteh_142')
.sys_drawspriteh_142:
              2098 1403  ld   $03,y       9333  ld(hi('NEXTY'),Y)               #142,
              2099 e000  jmp  y,$00       9334  jmp(Y,'NEXTY')                  #143,
              209a 00b7  ld   $b7         9335  ld(-146/2)                      #144,
                                          9336
                                          9337  label('.sys_drawspriteh_18')
.sys_drawspriteh_18:
              209b 01a0  ld   [$a0]       9338  ld([0xA0])                      #18,
              209c 8004  adda $04         9339  adda(4)                         #19,
              209d d2a0  st   [$a0],x     9340  st([0xA0],X)                    #20, register15 += 4
              209e 15a1  ld   [$a1],y     9341  ld([0xA1],Y)                    #21,
              209f 0d00  ld   [y,x]       9342  ld([Y,X])                       #22, peek(register15 + 0)
              20a0 c282  st   [$82]       9343  st([0x82])                      #23, spriteX
              20a1 de00  st   [y,x++]     9344  st([Y,Xpp])                     #24, X++
              20a2 0d00  ld   [y,x]       9345  ld([Y,X])                       #25, peek(register15 + 1)
              20a3 c283  st   [$83]       9346  st([0x83])                      #26, spriteY
              20a4 de00  st   [y,x++]     9347  st([Y,Xpp])                     #27, X++
              20a5 0d00  ld   [y,x]       9348  ld([Y,X])                       #28, peek(register15 + 2)
              20a6 c286  st   [$86]       9349  st([0x86])                      #29, spriteHeight
              20a7 de00  st   [y,x++]     9350  st([Y,Xpp])                     #30, X++
              20a8 0d00  ld   [y,x]       9351  ld([Y,X])                       #31, peek(register15 + 3)
              20a9 c287  st   [$87]       9352  st([0x87])                      #32, spriteData
              20aa 0188  ld   [$88]       9353  ld([0x88])                      #33,
              20ab a001  suba $01         9354  suba(1)                         #34,
              20ac c288  st   [$88]       9355  st([0x88])                      #35, register3--, spriteCount
                                          9356  beq('.sys_drawspriteh_38')      #36,
              20ad f0b4  beq  .sys_drawspriteh_38
              20ae 0116  ld   [$16]       9357  ld([vPC])                       #37,
              20af a002  suba $02         9358  suba(2)                         #38,
              20b0 c216  st   [$16]       9359  st([vPC])                       #39, restart
              20b1 1403  ld   $03,y       9360  ld(hi('NEXTY'),Y)               #40,
              20b2 e000  jmp  y,$00       9361  jmp(Y,'NEXTY')                  #41,
              20b3 00ea  ld   $ea         9362  ld(-44/2)                       #42,
                                          9363  label('.sys_drawspriteh_38')
.sys_drawspriteh_38:
              20b4 1403  ld   $03,y       9364  ld(hi('NEXTY'),Y)               #38,
              20b5 e000  jmp  y,$00       9365  jmp(Y,'NEXTY')                  #39,
              20b6 00eb  ld   $eb         9366  ld(-42/2)                       #40,
                                          9367
                                          9368
              20b7 0200  nop              9369  fillers(until=0xc0)
              20b8 0200  nop
              20b9 0200  nop
              * 9 times
                                          9370
                                          9371  # SYS_ScrollVTableY_vX_38, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable
                                          9372  label('SYS_ScrollVTableY_vX_38')
SYS_ScrollVTableY_vX_38:
              20c0 0125  ld   [$25]       9373  ld([sysArgs+1])                 #15,
              20c1 a001  suba $01         9374  suba(1)                         #16,
              20c2 c225  st   [$25]       9375  st([sysArgs+1])                 #17, scanCount--
                                          9376  bge('.sys_scrollvty_20')        #18,
              20c3 f4c8  bge  .sys_scrollvty_20
              20c4 1527  ld   [$27],y     9377  ld([sysArgs+3],Y)               #19, VTable.hi
              20c5 1403  ld   $03,y       9378  ld(hi('NEXTY'),Y)               #20,
              20c6 e000  jmp  y,$00       9379  jmp(Y,'NEXTY')                  #21,
              20c7 00f4  ld   $f4         9380  ld(-24/2)                       #22,
                                          9381  label('.sys_scrollvty_20')
.sys_scrollvty_20:
              20c8 1126  ld   [$26],x     9382  ld([sysArgs+2],X)               #20, VTable.low
              20c9 0d00  ld   [y,x]       9383  ld([Y,X])                       #21, scanline = peek [VTable]
              20ca 8124  adda [$24]       9384  adda([sysArgs+0])               #22, scanline += scrollOffset
              20cb a07f  suba $7f         9385  suba(0x7f)                      #23, scanline -= 0x7f
                                          9386  ble('.sys_scrollvty_26')        #24,
              20cc f8d9  ble  .sys_scrollvty_26
              20cd 807f  adda $7f         9387  adda(0x7F)                      #25, original scanline
              20ce 8088  adda $88         9388  adda(0x88)                      #26, overflow into the range 0x08 to 0x7f
              20cf ce00  st   [y,x]       9389  st([Y,X])                       #27,
              20d0 0126  ld   [$26]       9390  ld([sysArgs+2])                 #28,
              20d1 8002  adda $02         9391  adda(2)                         #29,
              20d2 c226  st   [$26]       9392  st([sysArgs+2])                 #30,
              20d3 0116  ld   [$16]       9393  ld([vPC])                       #31,
              20d4 a002  suba $02         9394  suba(2)                         #32,
              20d5 c216  st   [$16]       9395  st([vPC])                       #33, restart
              20d6 1403  ld   $03,y       9396  ld(hi('NEXTY'),Y)               #34,
              20d7 e000  jmp  y,$00       9397  jmp(Y,'NEXTY')                  #35,
              20d8 00ed  ld   $ed         9398  ld(-38/2)                       #36,
                                          9399
                                          9400  label('.sys_scrollvty_26')
.sys_scrollvty_26:
              20d9 ce00  st   [y,x]       9401  st([Y,X])                       #26,
              20da 0126  ld   [$26]       9402  ld([sysArgs+2])                 #27,
              20db 8002  adda $02         9403  adda(2)                         #28,
              20dc c226  st   [$26]       9404  st([sysArgs+2])                 #29,
              20dd 0116  ld   [$16]       9405  ld([vPC])                       #30,
              20de a002  suba $02         9406  suba(2)                         #31,
              20df c216  st   [$16]       9407  st([vPC])                       #32, restart
              20e0 1403  ld   $03,y       9408  ld(hi('REENTER'),Y)             #33,
              20e1 e0cb  jmp  y,$cb       9409  jmp(Y,'REENTER')                #34,
              20e2 00ed  ld   $ed         9410  ld(-38/2)                       #35,
                                          9411
                                          9412
              20e3 0200  nop              9413  fillers(until=0xff)
              20e4 0200  nop
              20e5 0200  nop
              * 28 times
              20ff 0200  nop              9414  align(0x100, size=0x100)
                                          9415
                                          9416  #-----------------------------------------------------------------------
                                          9417  #       More sys implementations, (0x2100)
                                          9418  #-----------------------------------------------------------------------
                                          9419  # SYS_RestoreSprite_vX_126
                                          9420  label('SYS_RestoreSprite_vX_126')
SYS_RestoreSprite_vX_126:
              2100 0186  ld   [$86]       9421  ld([0x86])                      #15, spriteEnable
                                          9422  bmi('.sys_restoresprite_18')    #16,
              2101 e877  blt  .sys_restoresprite_18
              2102 1587  ld   [$87],y     9423  ld([0x87],Y)                    #17, spriteData
              2103 09a0  ld   [y,$a0]     9424  ld([Y,0xA0])                    #18, spriteOldX
              2104 1200  ld   ac,x        9425  ld(AC,X)                        #19,
              2105 09a1  ld   [y,$a1]     9426  ld([Y,0xA1])                    #20, spriteOldY
              2106 c21d  st   [$1d]       9427  st([vTmp])                      #21,
                                          9428
              2107 09a2  ld   [y,$a2]     9429  ld([Y,0xA2])                    #22, load back0
              2108 151d  ld   [$1d],y     9430  ld([vTmp],Y)                    #23, spriteOldY
              2109 de00  st   [y,x++]     9431  st([Y,Xpp])                     #24, restore back0
                                          9432
              210a 1587  ld   [$87],y     9433  ld([0x87],Y)                    #25, spriteData
              210b 09a4  ld   [y,$a4]     9434  ld([Y,0xA4])                    #26, load back1
              210c 151d  ld   [$1d],y     9435  ld([vTmp],Y)                    #27, spriteOldY
              210d de00  st   [y,x++]     9436  st([Y,Xpp])                     #28, restore back1
                                          9437
              210e 1587  ld   [$87],y     9438  ld([0x87],Y)                    #29, spriteData
              210f 09a6  ld   [y,$a6]     9439  ld([Y,0xA6])                    #30, load back2
              2110 151d  ld   [$1d],y     9440  ld([vTmp],Y)                    #31, spriteOldY
              2111 de00  st   [y,x++]     9441  st([Y,Xpp])                     #32, restore back2
                                          9442
              2112 1587  ld   [$87],y     9443  ld([0x87],Y)                    #33, spriteData
              2113 09a8  ld   [y,$a8]     9444  ld([Y,0xA8])                    #34, load back3
              2114 151d  ld   [$1d],y     9445  ld([vTmp],Y)                    #35, spriteOldY
              2115 de00  st   [y,x++]     9446  st([Y,Xpp])                     #36, restore back3
                                          9447
              2116 1587  ld   [$87],y     9448  ld([0x87],Y)                    #37, spriteData
              2117 09aa  ld   [y,$aa]     9449  ld([Y,0xAA])                    #38, load back4
              2118 151d  ld   [$1d],y     9450  ld([vTmp],Y)                    #39, spriteOldY
              2119 de00  st   [y,x++]     9451  st([Y,Xpp])                     #40, restore back4
                                          9452
              211a 1587  ld   [$87],y     9453  ld([0x87],Y)                    #41, spriteData
              211b 09ac  ld   [y,$ac]     9454  ld([Y,0xAC])                    #42, load back5
              211c 151d  ld   [$1d],y     9455  ld([vTmp],Y)                    #43, spriteOldY
              211d de00  st   [y,x++]     9456  st([Y,Xpp])                     #44, restore back5
                                          9457
              211e 1587  ld   [$87],y     9458  ld([0x87],Y)                    #45, spriteData
              211f 09ae  ld   [y,$ae]     9459  ld([Y,0xAE])                    #46, load back6
              2120 151d  ld   [$1d],y     9460  ld([vTmp],Y)                    #47, spriteOldY
              2121 de00  st   [y,x++]     9461  st([Y,Xpp])                     #48, restore back6
                                          9462
              2122 1587  ld   [$87],y     9463  ld([0x87],Y)                    #49, spriteData
              2123 09b0  ld   [y,$b0]     9464  ld([Y,0xB0])                    #50, load back7
              2124 151d  ld   [$1d],y     9465  ld([vTmp],Y)                    #51, spriteOldY
              2125 de00  st   [y,x++]     9466  st([Y,Xpp])                     #52, restore back7
                                          9467
              2126 1587  ld   [$87],y     9468  ld([0x87],Y)                    #53, spriteData
              2127 09b2  ld   [y,$b2]     9469  ld([Y,0xB2])                    #54, load back8
              2128 151d  ld   [$1d],y     9470  ld([vTmp],Y)                    #55, spriteOldY
              2129 de00  st   [y,x++]     9471  st([Y,Xpp])                     #56, restore back8
                                          9472
              212a 0187  ld   [$87]       9473  ld([0x87])                      #57,
              212b 8001  adda $01         9474  adda(1)                         #58,
              212c d687  st   [$87],y     9475  st([0x87],Y)                    #59, spriteData++
                                          9476
              212d 09a0  ld   [y,$a0]     9477  ld([Y,0xA0])                    #60, spriteOldX
              212e 1200  ld   ac,x        9478  ld(AC,X)                        #61,
              212f 09a1  ld   [y,$a1]     9479  ld([Y,0xA1])                    #62, spriteOldY
              2130 c21d  st   [$1d]       9480  st([vTmp])                      #63,
                                          9481
              2131 09a2  ld   [y,$a2]     9482  ld([Y,0xA2])                    #64, load back0
              2132 151d  ld   [$1d],y     9483  ld([vTmp],Y)                    #65, spriteOldY
              2133 de00  st   [y,x++]     9484  st([Y,Xpp])                     #66, restore back0
                                          9485
              2134 1587  ld   [$87],y     9486  ld([0x87],Y)                    #67, spriteData
              2135 09a4  ld   [y,$a4]     9487  ld([Y,0xA4])                    #68, load back1
              2136 151d  ld   [$1d],y     9488  ld([vTmp],Y)                    #69, spriteOldY
              2137 de00  st   [y,x++]     9489  st([Y,Xpp])                     #70, restore back1
                                          9490
              2138 1587  ld   [$87],y     9491  ld([0x87],Y)                    #71, spriteData
              2139 09a6  ld   [y,$a6]     9492  ld([Y,0xA6])                    #72, load back2
              213a 151d  ld   [$1d],y     9493  ld([vTmp],Y)                    #73, spriteOldY
              213b de00  st   [y,x++]     9494  st([Y,Xpp])                     #74, restore back2
                                          9495
              213c 1587  ld   [$87],y     9496  ld([0x87],Y)                    #75, spriteData
              213d 09a8  ld   [y,$a8]     9497  ld([Y,0xA8])                    #76, load back3
              213e 151d  ld   [$1d],y     9498  ld([vTmp],Y)                    #77, spriteOldY
              213f de00  st   [y,x++]     9499  st([Y,Xpp])                     #78, restore back3
                                          9500
              2140 1587  ld   [$87],y     9501  ld([0x87],Y)                    #79, spriteData
              2141 09aa  ld   [y,$aa]     9502  ld([Y,0xAA])                    #80, load back4
              2142 151d  ld   [$1d],y     9503  ld([vTmp],Y)                    #81, spriteOldY
              2143 de00  st   [y,x++]     9504  st([Y,Xpp])                     #82, restore back4
                                          9505
              2144 1587  ld   [$87],y     9506  ld([0x87],Y)                    #83, spriteData
              2145 09ac  ld   [y,$ac]     9507  ld([Y,0xAC])                    #84, load back5
              2146 151d  ld   [$1d],y     9508  ld([vTmp],Y)                    #85, spriteOldY
              2147 de00  st   [y,x++]     9509  st([Y,Xpp])                     #86, restore back5
                                          9510
              2148 1587  ld   [$87],y     9511  ld([0x87],Y)                    #87, spriteData
              2149 09ae  ld   [y,$ae]     9512  ld([Y,0xAE])                    #88, load back6
              214a 151d  ld   [$1d],y     9513  ld([vTmp],Y)                    #89, spriteOldY
              214b de00  st   [y,x++]     9514  st([Y,Xpp])                     #90, restore back6
                                          9515
              214c 1587  ld   [$87],y     9516  ld([0x87],Y)                    #91, spriteData
              214d 09b0  ld   [y,$b0]     9517  ld([Y,0xB0])                    #92, load back7
              214e 151d  ld   [$1d],y     9518  ld([vTmp],Y)                    #93, spriteOldY
              214f de00  st   [y,x++]     9519  st([Y,Xpp])                     #94, restore back7
                                          9520
              2150 1587  ld   [$87],y     9521  ld([0x87],Y)                    #95, spriteData
              2151 09b2  ld   [y,$b2]     9522  ld([Y,0xB2])                    #96, load back8
              2152 151d  ld   [$1d],y     9523  ld([vTmp],Y)                    #97, spriteOldY
              2153 de00  st   [y,x++]     9524  st([Y,Xpp])                     #98, restore back8
                                          9525
              2154 0186  ld   [$86]       9526  ld([0x86])                      #99,
              2155 a002  suba $02         9527  suba(2)                         #100,
              2156 c286  st   [$86]       9528  st([0x86])                      #101, scanLines -= 2
                                          9529  beq('.sys_restoresprite_104')   #102,
              2157 f061  beq  .sys_restoresprite_104
              2158 0187  ld   [$87]       9530  ld([0x87])                      #103,
              2159 8001  adda $01         9531  adda(1)                         #104,
              215a c287  st   [$87]       9532  st([0x87])                      #105, spriteData++
              215b 0116  ld   [$16]       9533  ld([vPC])                       #106,
              215c a002  suba $02         9534  suba(2)                         #107,
              215d c216  st   [$16]       9535  st([vPC])                       #108, restart
              215e 1403  ld   $03,y       9536  ld(hi('REENTER'),Y)             #109,
              215f e0cb  jmp  y,$cb       9537  jmp(Y,'REENTER')                #110,
              2160 00c7  ld   $c7         9538  ld(-114/2)                      #111,
                                          9539  label('.sys_restoresprite_104')
.sys_restoresprite_104:
              2161 01a0  ld   [$a0]       9540  ld([0xA0])                      #104,
              2162 a004  suba $04         9541  suba(4)                         #105,
              2163 d2a0  st   [$a0],x     9542  st([0xA0],X)                    #106, register15 -= 4
              2164 15a1  ld   [$a1],y     9543  ld([0xA1],Y)                    #107,
              2165 0d00  ld   [y,x]       9544  ld([Y,X])                       #108, peek(register15 + 2)
              2166 c286  st   [$86]       9545  st([0x86])                      #109, spriteHeight
              2167 de00  st   [y,x++]     9546  st([Y,Xpp])                     #110, X++
              2168 0d00  ld   [y,x]       9547  ld([Y,X])                       #111, peek(register15 + 3)
              2169 c287  st   [$87]       9548  st([0x87])                      #112, spriteData
              216a 0188  ld   [$88]       9549  ld([0x88])                      #113,
              216b a001  suba $01         9550  suba(1)                         #114,
              216c c288  st   [$88]       9551  st([0x88])                      #115, numSprites--
                                          9552  beq('.sys_restoresprite_118')   #116,
              216d f074  beq  .sys_restoresprite_118
              216e 0116  ld   [$16]       9553  ld([vPC])                       #117,
              216f a002  suba $02         9554  suba(2)                         #118,
              2170 c216  st   [$16]       9555  st([vPC])                       #119, restart
              2171 1403  ld   $03,y       9556  ld(hi('NEXTY'),Y)               #120,
              2172 e000  jmp  y,$00       9557  jmp(Y,'NEXTY')                  #121,
              2173 00c2  ld   $c2         9558  ld(-124/2)                      #122,
                                          9559  label('.sys_restoresprite_118')
.sys_restoresprite_118:
              2174 1403  ld   $03,y       9560  ld(hi('NEXTY'),Y)               #118,
              2175 e000  jmp  y,$00       9561  jmp(Y,'NEXTY')                  #119,
              2176 00c3  ld   $c3         9562  ld(-122/2)                      #120,
                                          9563
                                          9564  label('.sys_restoresprite_18')
.sys_restoresprite_18:
              2177 01a0  ld   [$a0]       9565  ld([0xA0])                      #18,
              2178 a004  suba $04         9566  suba(4)                         #19,
              2179 d2a0  st   [$a0],x     9567  st([0xA0],X)                    #20, register15 -= 4
              217a 15a1  ld   [$a1],y     9568  ld([0xA1],Y)                    #21,
              217b 0d00  ld   [y,x]       9569  ld([Y,X])                       #22, peek(register15 + 2)
              217c c286  st   [$86]       9570  st([0x86])                      #23, spriteHeight
              217d de00  st   [y,x++]     9571  st([Y,Xpp])                     #24, X++
              217e 0d00  ld   [y,x]       9572  ld([Y,X])                       #25, peek(register15 + 3)
              217f c287  st   [$87]       9573  st([0x87])                      #26, spriteData
              2180 0188  ld   [$88]       9574  ld([0x88])                      #27,
              2181 a001  suba $01         9575  suba(1)                         #28,
              2182 c288  st   [$88]       9576  st([0x88])                      #29, numSprites--
                                          9577  beq('.sys_restoresprite_32')    #30,
              2183 f08a  beq  .sys_restoresprite_32
              2184 0116  ld   [$16]       9578  ld([vPC])                       #31,
              2185 a002  suba $02         9579  suba(2)                         #32,
              2186 c216  st   [$16]       9580  st([vPC])                       #33, restart
              2187 1403  ld   $03,y       9581  ld(hi('NEXTY'),Y)               #34,
              2188 e000  jmp  y,$00       9582  jmp(Y,'NEXTY')                  #35,
              2189 00ed  ld   $ed         9583  ld(-38/2)                       #36,
                                          9584  label('.sys_restoresprite_32')
.sys_restoresprite_32:
              218a 1403  ld   $03,y       9585  ld(hi('NEXTY'),Y)               #32,
              218b e000  jmp  y,$00       9586  jmp(Y,'NEXTY')                  #33,
              218c 00ee  ld   $ee         9587  ld(-36/2)                       #34,
                                          9588
                                          9589
              218d 0200  nop              9590  fillers(until=0xa0)
              218e 0200  nop
              218f 0200  nop
              * 19 times
                                          9591
                                          9592  # SYS_ScrollRectVTableY_vX_44, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable,
                                          9593  #                              sysArgs4,5=scrollStart,scrollEnd
                                          9594  label('SYS_ScrollRectVTableY_vX_44')
SYS_ScrollRectVTableY_vX_44:
              21a0 0125  ld   [$25]       9595  ld([sysArgs+1])                 #15,
              21a1 a001  suba $01         9596  suba(1)                         #16,
              21a2 c225  st   [$25]       9597  st([sysArgs+1])                 #17, scanCount--
                                          9598  bge('.sys_scrollrectvty_20')    #18,
              21a3 f4a8  bge  .sys_scrollrectvty_20
              21a4 1527  ld   [$27],y     9599  ld([sysArgs+3],Y)               #19, VTable.hi
              21a5 1403  ld   $03,y       9600  ld(hi('NEXTY'),Y)               #20,
              21a6 e000  jmp  y,$00       9601  jmp(Y,'NEXTY')                  #21,
              21a7 00f4  ld   $f4         9602  ld(-24/2)                       #22,
                                          9603  label('.sys_scrollrectvty_20')
.sys_scrollrectvty_20:
              21a8 1126  ld   [$26],x     9604  ld([sysArgs+2],X)               #20, VTable.low
              21a9 0d00  ld   [y,x]       9605  ld([Y,X])                       #21, scanline = peek [VTable]
              21aa 8124  adda [$24]       9606  adda([sysArgs+0])               #22, scanline += scrollOffset
              21ab c21d  st   [$1d]       9607  st([vTmp])                      #23,
              21ac a128  suba [$28]       9608  suba([sysArgs+4])               #24,
                                          9609  bge('.sys_scrollrectvty_27')    #25,
              21ad f4b9  bge  .sys_scrollrectvty_27
              21ae 8129  adda [$29]       9610  adda([sysArgs+5])               #26,
              21af ce00  st   [y,x]       9611  st([Y,X])                       #27,
              21b0 0126  ld   [$26]       9612  ld([sysArgs+2])                 #28,
              21b1 8002  adda $02         9613  adda(2)                         #29,
              21b2 c226  st   [$26]       9614  st([sysArgs+2])                 #30,
              21b3 0116  ld   [$16]       9615  ld([vPC])                       #31,
              21b4 a002  suba $02         9616  suba(2)                         #32,
              21b5 c216  st   [$16]       9617  st([vPC])                       #33, restart
              21b6 1403  ld   $03,y       9618  ld(hi('NEXTY'),Y)               #34,
              21b7 e000  jmp  y,$00       9619  jmp(Y,'NEXTY')                  #35,
              21b8 00ed  ld   $ed         9620  ld(-38/2)                       #36,
                                          9621
                                          9622  label('.sys_scrollrectvty_27')
.sys_scrollrectvty_27:
              21b9 011d  ld   [$1d]       9623  ld([vTmp])                      #27,
              21ba a129  suba [$29]       9624  suba([sysArgs+5])               #28,
                                          9625  blt('.sys_scrollrectvty_31')    #29,
              21bb e8c7  blt  .sys_scrollrectvty_31
              21bc 8128  adda [$28]       9626  adda([sysArgs+4])               #30,
              21bd ce00  st   [y,x]       9627  st([Y,X])                       #31,
              21be 0126  ld   [$26]       9628  ld([sysArgs+2])                 #32,
              21bf 8002  adda $02         9629  adda(2)                         #33,
              21c0 c226  st   [$26]       9630  st([sysArgs+2])                 #34,
              21c1 0116  ld   [$16]       9631  ld([vPC])                       #35,
              21c2 a002  suba $02         9632  suba(2)                         #36,
              21c3 c216  st   [$16]       9633  st([vPC])                       #37, restart
              21c4 1403  ld   $03,y       9634  ld(hi('NEXTY'),Y)               #38,
              21c5 e000  jmp  y,$00       9635  jmp(Y,'NEXTY')                  #39,
              21c6 00eb  ld   $eb         9636  ld(-42/2)                       #40,
                                          9637
                                          9638  label('.sys_scrollrectvty_31')
.sys_scrollrectvty_31:
              21c7 011d  ld   [$1d]       9639  ld([vTmp])                      #31,
              21c8 ce00  st   [y,x]       9640  st([Y,X])                       #32,
              21c9 0126  ld   [$26]       9641  ld([sysArgs+2])                 #33,
              21ca 8002  adda $02         9642  adda(2)                         #34,
              21cb c226  st   [$26]       9643  st([sysArgs+2])                 #35,
              21cc 0116  ld   [$16]       9644  ld([vPC])                       #36,
              21cd a002  suba $02         9645  suba(2)                         #37,
              21ce c216  st   [$16]       9646  st([vPC])                       #38, restart
              21cf 1403  ld   $03,y       9647  ld(hi('REENTER'),Y)             #39,
              21d0 e0cb  jmp  y,$cb       9648  jmp(Y,'REENTER')                #40,
              21d1 00ea  ld   $ea         9649  ld(-44/2)                       #41,
                                          9650
                                          9651
              21d2 0200  nop              9652  fillers(until=0xff)
              21d3 0200  nop
              21d4 0200  nop
              * 45 times
                                          9653
                                          9654  #-----------------------------------------------------------------------
                                          9655  #       PREFX3 instruction page, (0x2200), PREFIX ARG1 OPCODE ARG0
                                          9656  #-----------------------------------------------------------------------
                                          9657  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          9658  #
                                          9659  label('PREFX3_PAGE')
PREFX3_PAGE:  21ff fc03  bra  $2203       9660  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9661  # --- Page boundary ---
                                          9662  align(0x100,size=0x100)
              2200 1517  ld   [$17],y     9663  ld([vPC+1],Y)                   #1
                                          9664
                                          9665  # Fetch next instruction and execute it, but only if there are sufficient
                                          9666  # ticks left for the slowest instruction.
              2201 8115  adda [$15]       9667  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2202 e80b  blt  $220b       9668  blt('EXIT')                     #1 Escape near time out
              2203 c215  st   [$15]       9669  st([vTicks])                    #2
              2204 1116  ld   [$16],x     9670  ld([vPC],X)                     #3 PREFIX+ARG1 is 2 bytes, vPC has been incremented by 2
              2205 0200  nop              9671  nop()                           #4
              2206 c002  st   $02,[$02]   9672  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2207 0d00  ld   [y,x]       9673  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2208 de00  st   [y,x++]     9674  st([Y,Xpp])                     #7 Just X++
              2209 fe00  bra  ac          9675  bra(AC)                         #8 Dispatch
              220a 0d00  ld   [y,x]       9676  ld([Y,X])                       #9 Prefetch operand
                                          9677
                                          9678  # Resync with video driver and transfer control
              220b 800f  adda $0f         9679  adda(maxTicks)                  #3
              220c e40c  bgt  $220c       9680  bgt(pc()&255)                   #4 Resync
              220d a001  suba $01         9681  suba(1)                         #5
              220e 1401  ld   $01,y       9682  ld(hi('vBlankStart'),Y)         #6
              220f e11e  jmp  y,[$1e]     9683  jmp(Y,[vReturn])                #7 To video driver
              2210 0000  ld   $00         9684  ld(0)                           #8 AC should be 0 already. Still..
                                          9685  assert vCPU_overhead ==          9
                                          9686
                                          9687  # pc = 0x2211, Opcode = 0x11
                                          9688  # Instruction STB2: Store vAC.lo into 16bit immediate address, 22 + 20 cycles
                                          9689  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9690  label('STB2')
STB2:         2211 1425  ld   $25,y       9691  ld(hi('stb2#13'),Y)             #10
              2212 e000  jmp  y,$00       9692  jmp(Y,'stb2#13')                #11
              2213 1200  ld   ac,x        9693  ld(AC,X)                        #12
                                          9694
                                          9695  # pc = 0x2214, Opcode = 0x14
                                          9696  # Instruction STW2: Store vAC into 16bit immediate address, 22 + 22 cycles
                                          9697  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9698  label('STW2')
STW2:         2214 1425  ld   $25,y       9699  ld(hi('stw2#13'),Y)             #10
              2215 e006  jmp  y,$06       9700  jmp(Y,'stw2#13')                #11
              2216 1200  ld   ac,x        9701  ld(AC,X)                        #12
                                          9702
                                          9703  # pc = 0x2217, Opcode = 0x17
                                          9704  # Instruction XCHGB: Exchange two zero byte variables, 22 + 28 cycles
                                          9705  label('XCHGB')
XCHGB:        2217 1425  ld   $25,y       9706  ld(hi('xchgb#13'),Y)            #10
              2218 e00e  jmp  y,$0e       9707  jmp(Y,'xchgb#13')               #11
                                          9708  # dummy                         #12
                                          9709  #
                                          9710  # pc = 0x2219, Opcode = 0x19
                                          9711  # Instruction MOVW: Move 16bits from src zero page var to dst zero page var, 22 + 30 cycles
                                          9712  label('MOVW')
MOVW:         2219 1425  ld   $25,y       9713  ld(hi('movw#13'),Y)             #10
              221a e040  jmp  y,$40       9714  jmp(Y,'movw#13')                #11
                                          9715  # dummy                         #12
                                          9716  #
                                          9717  # pc = 0x221b, Opcode = 0x1b
                                          9718  # Instruction ADDWI: vAC += immediate 16bit value, 22 + 28 cycles
                                          9719  label('ADDWI')
ADDWI:        221b 1425  ld   $25,y       9720  ld(hi('addwi#13'),Y)            #10 #12
              221c e050  jmp  y,$50       9721  jmp(Y,'addwi#13')               #11
                                          9722  # dummy                         #12
                                          9723  #
                                          9724  # pc = 0x221d, Opcode = 0x1d
                                          9725  # Instruction SUBWI: vAC -= immediate 16bit value, 22 + 28 cycles
                                          9726  label('SUBWI')
SUBWI:        221d 1425  ld   $25,y       9727  ld(hi('subwi#13'),Y)            #10 #12
              221e e06b  jmp  y,$6b       9728  jmp(Y,'subwi#13')               #11
                                          9729  # dummy                         #12
                                          9730  #
                                          9731  # pc = 0x221f, Opcode = 0x1f
                                          9732  # Instruction ANDWI: vAC &= immediate 16bit value, 22 + 22 cycles
                                          9733  label('ANDWI')
ANDWI:        221f 1425  ld   $25,y       9734  ld(hi('andwi#13'),Y)            #10 #12
              2220 e083  jmp  y,$83       9735  jmp(Y,'andwi#13')               #11
                                          9736  # dummy                         #12
                                          9737  #
                                          9738  # pc = 0x2221, Opcode = 0x21
                                          9739  # Instruction ORWI: vAC |= immediate 16bit value, 22 + 22 cycles
                                          9740  label('ORWI')
ORWI:         2221 1425  ld   $25,y       9741  ld(hi('orwi#13'),Y)             #10 #12
              2222 e08b  jmp  y,$8b       9742  jmp(Y,'orwi#13')                #11
                                          9743  # dummy                         #12
                                          9744  #
                                          9745  # pc = 0x2223, Opcode = 0x23
                                          9746  # Instruction XORWI: vAC ^= immediate 16bit value, 22 + 22 cycles
                                          9747  label('XORWI')
XORWI:        2223 1425  ld   $25,y       9748  ld(hi('xorwi#13'),Y)            #10 #12
              2224 e093  jmp  y,$93       9749  jmp(Y,'xorwi#13')               #11
                                          9750  # dummy                         #12
                                          9751  #
                                          9752  # pc = 0x2225, Opcode = 0x25
                                          9753  # Instruction LDPX: Load Pixel, <address var>, <colour var>, 22 + 30 cycles
                                          9754  label('LDPX')
LDPX:         2225 1425  ld   $25,y       9755  ld(hi('ldpx#13'),Y)             #10 #12
              2226 e09b  jmp  y,$9b       9756  jmp(Y,'ldpx#13')                #11
              2227 c21d  st   [$1d]       9757  st([vTmp])                      #12
                                          9758
                                          9759  # pc = 0x2228, Opcode = 0x28
                                          9760  # Instruction STPX: Store Pixel, <address var>, <colour var>, 22 + 30 cycles
                                          9761  label('STPX')
STPX:         2228 1400  ld   $00,y       9762  ld(hi('stpx#13'),Y)             #10
              2229 e062  jmp  y,$62       9763  jmp(Y,'stpx#13')                #11
              222a 1200  ld   ac,x        9764  ld(AC,X)                        #12
                                          9765
                                          9766  # pc = 0x222b, Opcode = 0x2b
                                          9767  # Instruction CONDI: chooses immediate operand based on condition, (vAC == 0), 22 + 26 cycles
                                          9768  label('CONDI')
CONDI:        222b 1425  ld   $25,y       9769  ld(hi('condi#13'),Y)            #10
              222c e0ab  jmp  y,$ab       9770  jmp(Y,'condi#13')               #11
                                          9771  # dummy                         #12
                                          9772  #
                                          9773  # pc = 0x222d, Opcode = 0x2d
                                          9774  # Instruction CONDB: chooses zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9775  label('CONDB')
CONDB:        222d 1425  ld   $25,y       9776  ld(hi('condb#13'),Y)            #10 #12
              222e e0b8  jmp  y,$b8       9777  jmp(Y,'condb#13')               #11
              222f 1200  ld   ac,x        9778  ld(AC,X)                        #12
                                          9779
                                          9780  # pc = 0x2230, Opcode = 0x30
                                          9781  # Instruction CONDIB: chooses between imm and zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9782  label('CONDIB')
CONDIB:       2230 1425  ld   $25,y       9783  ld(hi('condib#13'),Y)           #10
              2231 e0c7  jmp  y,$c7       9784  jmp(Y,'condib#13')              #11
              2232 c21d  st   [$1d]       9785  st([vTmp])                      #12
                                          9786
                                          9787  # pc = 0x2233, Opcode = 0x33
                                          9788  # Instruction CONDBI: chooses between zero page byte var and imm based on condition, (vAC == 0), 22 + 26 cycles
                                          9789  label('CONDBI')
CONDBI:       2233 1425  ld   $25,y       9790  ld(hi('condbi#13'),Y)           #10
              2234 e0d4  jmp  y,$d4       9791  jmp(Y,'condbi#13')              #11
                                          9792  # dummy                         #12
                                          9793  #
                                          9794  # pc = 0x2235, Opcode = 0x35
                                          9795  # Instruction XCHGW: Exchange two zero word variables, 22 + 46 cycles
                                          9796  label('XCHGW')
XCHGW:        2235 1425  ld   $25,y       9797  ld(hi('xchgw#13'),Y)            #10 #12
              2236 e01c  jmp  y,$1c       9798  jmp(Y,'xchgw#13')               #11
              2237 c22a  st   [$2a]       9799  st([sysArgs+6])                 #12 var1
                                          9800
                                          9801  # pc = 0x2238, Opcode = 0x38
                                          9802  # Instruction OSCPX:
                                          9803  label('OSCPX')
OSCPX:        2238 1428  ld   $28,y       9804  ld(hi('oscpx#13'),Y)            #10
              2239 e073  jmp  y,$73       9805  jmp(Y,'oscpx#13')               #11
                                          9806  # dummy                         #12
                                          9807  #
                                          9808  # pc = 0x223a, Opcode = 0x3a
                                          9809  # Instruction SWAPB: Swap two bytes in memory, 22 + 46 cycles
                                          9810  label('SWAPB')
SWAPB:        223a 1429  ld   $29,y       9811  ld(hi('swapb#13'),Y)            #10 #12
              223b e093  jmp  y,$93       9812  jmp(Y,'swapb#13')               #11
              223c 1200  ld   ac,x        9813  ld(AC,X)                        #12 var1
                                          9814  #
                                          9815  # pc = 0x223d, Opcode = 0x3d
                                          9816  # Instruction SWAPW: Swap two words in memory, 22 + 58 cycles
                                          9817  label('SWAPW')
SWAPW:        223d 1429  ld   $29,y       9818  ld(hi('swapw#13'),Y)            #10
              223e e0b8  jmp  y,$b8       9819  jmp(Y,'swapw#13')               #11
              223f 1200  ld   ac,x        9820  ld(AC,X)                        #12 var1
                                          9821
                                          9822  # pc = 0x2240, Opcode = 0x40
                                          9823  # Instruction NEEKA: Peek <n> bytes from [vAC] into [var], 22 + 34*n + 24 cycles
                                          9824  label('NEEKA')
NEEKA:        2240 142a  ld   $2a,y       9825  ld(hi('neeka#13'),Y)            #10
              2241 e06e  jmp  y,$6e       9826  jmp(Y,'neeka#13')               #11
              2242 c22a  st   [$2a]       9827  st([sysArgs+6])                 #12 var
                                          9828
                                          9829  # pc = 0x2243, Opcode = 0x43
                                          9830  # Instruction NOKEA: Poke <n> bytes from [var] into [vAC], 22 + 34*n + 24 cycles
                                          9831  label('NOKEA')
NOKEA:        2243 142a  ld   $2a,y       9832  ld(hi('nokea#13'),Y)            #10
              2244 e08a  jmp  y,$8a       9833  jmp(Y,'nokea#13')               #11
              2245 c22a  st   [$2a]       9834  st([sysArgs+6])                 #12 var
                                          9835
                                          9836  # pc = 0x2246, Opcode = 0x46
                                          9837  # Instruction ADDVL: Add two 32bit zero page vars, dst += src, 22 + 78 cycles
                                          9838  label('ADDVL')
ADDVL:        2246 142b  ld   $2b,y       9839  ld(hi('addvl#13'),Y)            #10
              2247 e02f  jmp  y,$2f       9840  jmp(Y,'addvl#13')               #11
              2248 d22a  st   [$2a],x     9841  st([sysArgs+6],X)               #12 src var
                                          9842
                                          9843  # pc = 0x2249, Opcode = 0x49
                                          9844  # Instruction SUBVL: Subtract two 32bit zero page vars, dst -= src, 22 + 74 cycles
                                          9845  label('SUBVL')
SUBVL:        2249 142b  ld   $2b,y       9846  ld(hi('subvl#13'),Y)            #10
              224a e079  jmp  y,$79       9847  jmp(Y,'subvl#13')               #11
              224b d22a  st   [$2a],x     9848  st([sysArgs+6],X)               #12 src var
                                          9849
                                          9850  # pc = 0x224c, Opcode = 0x4c
                                          9851  # Instruction ANDVL: And two 32bit zero page vars, dst &= src, 22 + 46 cycles
                                          9852  label('ANDVL')
ANDVL:        224c 142b  ld   $2b,y       9853  ld(hi('andvl#13'),Y)            #10
              224d e0c5  jmp  y,$c5       9854  jmp(Y,'andvl#13')               #11
              224e 1200  ld   ac,x        9855  ld(AC,X)                        #12 src var
                                          9856
                                          9857  # pc = 0x224f, Opcode = 0x4f
                                          9858  # Instruction ORVL: Or two 32bit zero page vars, dst |= src, 22 + 46 cycles
                                          9859  label('ORVL')
ORVL:         224f 142c  ld   $2c,y       9860  ld(hi('orvl#13'),Y)             #10
              2250 e000  jmp  y,$00       9861  jmp(Y,'orvl#13')                #11
              2251 1200  ld   ac,x        9862  ld(AC,X)                        #12 src var
                                          9863
                                          9864  # pc = 0x2252, Opcode = 0x52
                                          9865  # Instruction XORVL: Xor two 32bit zero page vars, dst ^= src, 22 + 76 cycles
                                          9866  label('XORVL')
XORVL:        2252 142c  ld   $2c,y       9867  ld(hi('xorvl#13'),Y)            #10
              2253 e024  jmp  y,$24       9868  jmp(Y,'xorvl#13')               #11
              2254 1200  ld   ac,x        9869  ld(AC,X)                        #12 src var
                                          9870
                                          9871  # pc = 0x2255, Opcode = 0x55
                                          9872  # Instruction JEQL: 22 + 40 cycles
                                          9873  label('JEQL')
JEQL:         2255 142d  ld   $2d,y       9874  ld(hi('jeql#13'),Y)             #10
              2256 e000  jmp  y,$00       9875  jmp(Y,'jeql#13')                #11
              2257 c22a  st   [$2a]       9876  st([sysArgs+6])                 #12 jump.hi
                                          9877
                                          9878  # pc = 0x2258, Opcode = 0x58
                                          9879  # Instruction JNEL: 22 + 40 cycles
                                          9880  label('JNEL')
JNEL:         2258 142d  ld   $2d,y       9881  ld(hi('jnel#13'),Y)             #10
              2259 e022  jmp  y,$22       9882  jmp(Y,'jnel#13')                #11
              225a c22a  st   [$2a]       9883  st([sysArgs+6])                 #12 jump.hi
                                          9884
                                          9885  # pc = 0x225B, Opcode = 0x5B
                                          9886  # Instruction JLTL: 22 + 26 cycles
                                          9887  label('JLTL')
JLTL:         225b 142d  ld   $2d,y       9888  ld(hi('jltl#13'),Y)             #10
              225c e044  jmp  y,$44       9889  jmp(Y,'jltl#13')                #11
              225d c22a  st   [$2a]       9890  st([sysArgs+6])                 #12 jump.hi
                                          9891
                                          9892  # pc = 0x225E, Opcode = 0x5E
                                          9893  # Instruction JGTL: 22 + 42 cycles
                                          9894  label('JGTL')
JGTL:         225e 142d  ld   $2d,y       9895  ld(hi('jgtl#13'),Y)             #10
              225f e053  jmp  y,$53       9896  jmp(Y,'jgtl#13')                #11
              2260 c22a  st   [$2a]       9897  st([sysArgs+6])                 #12 jump.hi
                                          9898
                                          9899  # pc = 0x2261, Opcode = 0x61
                                          9900  # Instruction JLEL: 22 + 42 cycles
                                          9901  label('JLEL')
JLEL:         2261 142d  ld   $2d,y       9902  ld(hi('jlel#13'),Y)             #10
              2262 e07a  jmp  y,$7a       9903  jmp(Y,'jlel#13')                #11
              2263 c22a  st   [$2a]       9904  st([sysArgs+6])                 #12 jump.hi
                                          9905
                                          9906  # pc = 0x2264, Opcode = 0x64
                                          9907  # Instruction JGEL: 22 + 26 cycles
                                          9908  label('JGEL')
JGEL:         2264 142d  ld   $2d,y       9909  ld(hi('jgel#13'),Y)             #10
              2265 e0a5  jmp  y,$a5       9910  jmp(Y,'jgel#13')                #11
              2266 c22a  st   [$2a]       9911  st([sysArgs+6])                 #12 jump.hi
                                          9912
                                          9913  # pc = 0x2267, Opcode = 0x67
                                          9914  # Instruction ANDBI: And immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9915  label('ANDBI')
ANDBI:        2267 142e  ld   $2e,y       9916  ld(hi('andbi#13'),Y)            #10
              2268 e000  jmp  y,$00       9917  jmp(Y,'andbi#13')               #11
              2269 1200  ld   ac,x        9918  ld(AC,X)                        #12 address of var
                                          9919
                                          9920  # pc = 0x226A, Opcode = 0x6A
                                          9921  # Instruction ORBI: OR immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9922  label('ORBI')
ORBI:         226a 142e  ld   $2e,y       9923  ld(hi('orbi#13'),Y)             #10
              226b e006  jmp  y,$06       9924  jmp(Y,'orbi#13')                #11
              226c 1200  ld   ac,x        9925  ld(AC,X)                        #12 address of var
                                          9926
                                          9927  # pc = 0x226D, Opcode = 0x6D
                                          9928  # Instruction XORBI: var.lo ^= imm, 22 + 20 cycles
                                          9929  label('XORBI')
XORBI:        226d 142e  ld   $2e,y       9930  ld(hi('xorbi#13'),Y)            #10
              226e e00c  jmp  y,$0c       9931  jmp(Y,'xorbi#13')               #11
              226f 1200  ld   ac,x        9932  ld(AC,X)                        #12 address of var
                                          9933
                                          9934  # pc = 0x2270, Opcode = 0x70
                                          9935  # Instruction JMPI, (lb3361): Jump to immediate 16bit address, does not destroy vLR, 22 + 22 cycles
                                          9936  label('JMPI')
JMPI:         2270 1427  ld   $27,y       9937  ld(hi('jmpi#13'),Y)             #10
              2271 e041  jmp  y,$41       9938  jmp(Y,'jmpi#13')                #11
              2272 1517  ld   [$17],y     9939  ld([vPC+1],Y)                   #12
                                          9940
                                          9941
                                          9942  # SYS calls and instruction implementations rely on these
              2273 0200  nop              9943  fillers(until=0xca)
              2274 0200  nop
              2275 0200  nop
              * 87 times
              22ca 00f2  ld   $f2         9944  ld(-28/2)                       #25
              22cb fc01  bra  $2201       9945  bra('NEXT')                     #26 Return from SYS calls
              22cc 1517  ld   [$17],y     9946  ld([vPC+1],Y)                   #27
                                          9947
                                          9948
              22cd 0200  nop              9949  fillers(until=0xff)
              22ce 0200  nop
              22cf 0200  nop
              * 50 times
                                          9950
                                          9951  #-----------------------------------------------------------------------
                                          9952  #       PREFX2 instruction page, (0x2300), PREFIX ARG0 OPCODE
                                          9953  #-----------------------------------------------------------------------
                                          9954  #
                                          9955  label('PREFX2_PAGE')
PREFX2_PAGE:  22ff fc03  bra  $2303       9956  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9957  # --- Page boundary ---
                                          9958  align(0x100,size=0x100)
              2300 1517  ld   [$17],y     9959  ld([vPC+1],Y)                   #1
                                          9960
                                          9961  # Fetch next instruction and execute it, but only if there are sufficient
                                          9962  # ticks left for the slowest instruction.
              2301 8115  adda [$15]       9963  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2302 e80b  blt  $230b       9964  blt('EXIT')                     #1 Escape near time out
              2303 c215  st   [$15]       9965  st([vTicks])                    #2
              2304 0116  ld   [$16]       9966  ld([vPC])                       #3 PREFIX+ARG0 is 2 bytes, vPC has been incremented by 1
              2305 9001  adda $01,x       9967  adda(1,X)                       #4 point to opcode
              2306 c002  st   $02,[$02]   9968  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2307 0d00  ld   [y,x]       9969  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2308 de00  st   [y,x++]     9970  st([Y,Xpp])                     #7 Just X++
              2309 fe00  bra  ac          9971  bra(AC)                         #8 Dispatch
              230a 012b  ld   [$2b]       9972  ld([sysArgs+7])                 #9 Operand
                                          9973
                                          9974  # Resync with video driver and transfer control
              230b 800f  adda $0f         9975  adda(maxTicks)                  #3
              230c e40c  bgt  $230c       9976  bgt(pc()&255)                   #4 Resync
              230d a001  suba $01         9977  suba(1)                         #5
              230e 1401  ld   $01,y       9978  ld(hi('vBlankStart'),Y)         #6
              230f e11e  jmp  y,[$1e]     9979  jmp(Y,[vReturn])                #7 To video driver
              2310 0000  ld   $00         9980  ld(0)                           #8 AC should be 0 already. Still..
                                          9981  assert vCPU_overhead ==          9
                                          9982
                                          9983  # pc = 0x2311, Opcode = 0x11
                                          9984  # Instruction LSLN: Logical shift left vAC, (16bit), n times, 22 + 30*n + 20 cycles
                                          9985  label('LSLN')
LSLN:         2311 1426  ld   $26,y       9986  ld(hi('lsln#13'),Y)             #10
              2312 e000  jmp  y,$00       9987  jmp(Y,'lsln#13')                #11
                                          9988  # dummy                         #12 Overlap
                                          9989  #
                                          9990  # pc = 0x2313, Opcode = 0x13
                                          9991  # Instruction SEXT: Sign extend vAC based on a variable mask, 22 + 24 cycles
                                          9992  label('SEXT')
SEXT:         2313 1426  ld   $26,y       9993  ld(hi('sext#13'),Y)             #10 #12
              2314 e032  jmp  y,$32       9994  jmp(Y,'sext#13')                #11
                                          9995  # dummy                         #12 Overlap
                                          9996  #
                                          9997  # pc = 0x2315, Opcode = 0x15
                                          9998  # Instruction NOTW: Boolean invert var, 22 + 26 cycles
                                          9999  label('NOTW')
NOTW:         2315 1426  ld   $26,y       10000  ld(hi('notw#13'),Y)             #10 #12
              2316 e013  jmp  y,$13       10001  jmp(Y,'notw#13')                #11
                                          10002  # dummy                         #12 Overlap
                                          10003  #
                                          10004  # pc = 0x2317, Opcode = 0x17
                                          10005  # Instruction NEGW: Arithmetic negate var, 22 + 28 cycles
                                          10006  label('NEGW')
NEGW:         2317 1426  ld   $26,y       10007  ld(hi('negw#13'),Y)             #10 #12
              2318 e01e  jmp  y,$1e       10008  jmp(Y,'negw#13')                #11
                                          10009  # dummy                         #12 Overlap
                                          10010  #
                                          10011  # pc = 0x2319, Opcode = 0x19
                                          10012  # Instruction ANDBA: vAC &= var.lo, 22 + 22 cycles
                                          10013  label('ANDBA')
ANDBA:        2319 1426  ld   $26,y       10014  ld(hi('andba#13'),Y)            #10 #12
              231a e03f  jmp  y,$3f       10015  jmp(Y,'andba#13')               #11
              231b 1200  ld   ac,x        10016  ld(AC,X)                        #12 var
                                          10017
                                          10018  # pc = 0x231c, Opcode = 0x1c
                                          10019  # Instruction ORBA: vAC |= var.lo, 22 + 20 cycles
                                          10020  label('ORBA')
ORBA:         231c 1426  ld   $26,y       10021  ld(hi('orba#13'),Y)             #10
              231d e047  jmp  y,$47       10022  jmp(Y,'orba#13')                #11
              231e 1200  ld   ac,x        10023  ld(AC,X)                        #12 var
                                          10024
                                          10025  # pc = 0x231f, Opcode = 0x1f
                                          10026  # Instruction XORBA: vAC ^= var.lo, 22 + 20 cycles
                                          10027  label('XORBA')
XORBA:        231f 1426  ld   $26,y       10028  ld(hi('xorba#13'),Y)            #10
              2320 e04d  jmp  y,$4d       10029  jmp(Y,'xorba#13')               #11
              2321 1200  ld   ac,x        10030  ld(AC,X)                        #12 var
                                          10031
                                          10032  # pc = 0x2322, Opcode = 0x22
                                          10033  # Instruction FREQM: [(((chan & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [0..3], 22 + 26 cycles
                                          10034  label('FREQM')
FREQM:        2322 1426  ld   $26,y       10035  ld(hi('freqm#13'),Y)            #10
              2323 e053  jmp  y,$53       10036  jmp(Y,'freqm#13')               #11
                                          10037  # dummy                         #12 Overlap
                                          10038  #
                                          10039  # pc = 0x2324, Opcode = 0x24
                                          10040  # Instruction FREQA: [((((chan - 1) & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [1..4], 22 + 26 cycles
                                          10041  label('FREQA')
FREQA:        2324 1426  ld   $26,y       10042  ld(hi('freqa#13'),Y)            #10 #12
              2325 e05f  jmp  y,$5f       10043  jmp(Y,'freqa#13')               #11
              2326 1200  ld   ac,x        10044  ld(AC,X)                        #12 var
                                          10045
                                          10046  # pc = 0x2327, Opcode = 0x27
                                          10047  # Instruction FREQZ: [(((imm & 3) + 1) <<8) | 0x00FC] = 0, imm = [0..3], 22 + 22 cycles
                                          10048  label('FREQZ')
FREQZ:        2327 1426  ld   $26,y       10049  ld(hi('freqz#13'),Y)            #10
              2328 e06b  jmp  y,$6b       10050  jmp(Y,'freqz#13')               #11
              2329 2003  anda $03         10051  anda(3)                         #12 channel
                                          10052
                                          10053  # pc = 0x232a, Opcode = 0x2a
                                          10054  # Instruction VOLM: [(((chan & 3) + 1) <<8) | 0x00FA] = vAC.low, chan var = [0..3], 22 + 24 cycles
                                          10055  label('VOLM')
VOLM:         232a 1426  ld   $26,y       10056  ld(hi('volm#13'),Y)             #10
              232b e073  jmp  y,$73       10057  jmp(Y,'volm#13')                #11
                                          10058  # dummy                         #12 Overlap
                                          10059  #
                                          10060  # pc = 0x232c, Opcode = 0x2c
                                          10061  # Instruction VOLA: [((((chan - 1) & 3) + 1) <<8) | 0x00FA] = 63 - vAC.low + 64, chan var = [1..4],  22 + 26 cycles
                                          10062  label('VOLA')
VOLA:         232c 1426  ld   $26,y       10063  ld(hi('vola#13'),Y)             #10 #12
              232d e07d  jmp  y,$7d       10064  jmp(Y,'vola#13')                #11
              232e 1200  ld   ac,x        10065  ld(AC,X)                        #12 chan + 1
                                          10066
                                          10067  # pc = 0x232f, Opcode = 0x2f
                                          10068  # Instruction MODA: [((((chan - 1) & 3) + 1) <<8) | 0x00FB] = vAC.low, chan var = [1..4], 22 + 24 cycles
                                          10069  label('MODA')
MODA:         232f 1426  ld   $26,y       10070  ld(hi('moda#13'),Y)             #10
              2330 e089  jmp  y,$89       10071  jmp(Y,'moda#13')                #11
              2331 1200  ld   ac,x        10072  ld(AC,X)                        #12 chan + 1
                                          10073
                                          10074  # pc = 0x2332, Opcode = 0x32
                                          10075  # Instruction MODZ: [(((imm & 3) + 1) <<8) | 0x00FA] = 0x0200, imm = [0..3], 22 + 24 cycles
                                          10076  label('MODZ')
MODZ:         2332 1426  ld   $26,y       10077  ld(hi('modz#13'),Y)             #10
              2333 e093  jmp  y,$93       10078  jmp(Y,'modz#13')                #11
                                          10079  # dummy                         #12 Overlap
                                          10080  #
                                          10081  # pc = 0x2234, Opcode = 0x34
                                          10082  # Instruction SMPCPY:
                                          10083  label('SMPCPY')
SMPCPY:       2334 1426  ld   $26,y       10084  ld(hi('smpcpy#13'),Y)           #10 #12
              2335 e09d  jmp  y,$9d       10085  jmp(Y,'smpcpy#13')              #11
              2336 1200  ld   ac,x        10086  ld(AC,X)                        #12 dst var
                                          10087
                                          10088  # pc = 0x2237, Opcode = 0x37
                                          10089  # Instruction CMPWS:
                                          10090  label('CMPWS')
CMPWS:        2337 1428  ld   $28,y       10091  ld(hi('cmpws#13'),Y)            #10
              2338 e094  jmp  y,$94       10092  jmp(Y,'cmpws#13')               #11
                                          10093  # dummy                         #12 Overlap
                                          10094  #
                                          10095  # pc = 0x2239, Opcode = 0x39
                                          10096  # Instruction CMPWU:
                                          10097  label('CMPWU')
CMPWU:        2339 1428  ld   $28,y       10098  ld(hi('cmpwu#13'),Y)            #10 #12
              233a e0c7  jmp  y,$c7       10099  jmp(Y,'cmpwu#13')               #11
                                          10100  # dummy                         #12 Overlap
                                          10101  #
                                          10102  # pc = 0x223b, Opcode = 0x3b
                                          10103  # Instruction LEEKA:
                                          10104  label('LEEKA')
LEEKA:        233b 1429  ld   $29,y       10105  ld(hi('leeka#13'),Y)            #10 #12
              233c e000  jmp  y,$00       10106  jmp(Y,'leeka#13')               #11
                                          10107  # dummy                         #12 Overlap
                                          10108  #
                                          10109  # pc = 0x223d, Opcode = 0x3d
                                          10110  # Instruction LOKEA:
                                          10111  label('LOKEA')
LOKEA:        233d 1429  ld   $29,y       10112  ld(hi('lokea#13'),Y)            #10 #12
              233e e023  jmp  y,$23       10113  jmp(Y,'lokea#13')               #11
                                          10114  # dummy                         #12
                                          10115  #
                                          10116  # pc = 0x223f, Opcode = 0x3f
                                          10117  # Instruction FEEKA:
                                          10118  label('FEEKA')
FEEKA:        233f 1429  ld   $29,y       10119  ld(hi('feeka#13'),Y)            #10 #12
              2340 e045  jmp  y,$45       10120  jmp(Y,'feeka#13')               #11
              2341 c21d  st   [$1d]       10121  st([vTmp])                      #12 dst var
                                          10122
                                          10123  # pc = 0x2242, Opcode = 0x42
                                          10124  # Instruction FOKEA:
                                          10125  label('FOKEA')
FOKEA:        2342 1429  ld   $29,y       10126  ld(hi('fokea#13'),Y)            #10
              2343 e06c  jmp  y,$6c       10127  jmp(Y,'fokea#13')               #11
                                          10128  # dummy                         #12
                                          10129  #
                                          10130  # pc = 0x2344, Opcode = 0x44
                                          10131  # Instruction MEEKA: Peek 8 bytes from [vAC] to [var], 22 + 64 cycles
                                          10132  label('MEEKA')
MEEKA:        2344 142a  ld   $2a,y       10133  ld(hi('meeka#13'),Y)            #10 #12
              2345 e000  jmp  y,$00       10134  jmp(Y,'meeka#13')               #11
                                          10135  # dummy                         #12
                                          10136  #
                                          10137  # pc = 0x2346, Opcode = 0x46
                                          10138  # Instruction MOKEA: Poke 8 bytes from [var] to [vAC], 22 + 64 cycles
                                          10139  label('MOKEA')
MOKEA:        2346 142a  ld   $2a,y       10140  ld(hi('mokea#13'),Y)            #10 #12
              2347 e037  jmp  y,$37       10141  jmp(Y,'mokea#13')               #11
                                          10142  # dummy                         #12
                                          10143  #
                                          10144  # pc = 0x2348, Opcode = 0x48
                                          10145  # Instruction LSRVL: Logical shift right var long, 22 + 104 cycles
                                          10146  label('LSRVL')
LSRVL:        2348 142c  ld   $2c,y       10147  ld(hi('lsrvl#13'),Y)            #10 #12
              2349 e06b  jmp  y,$6b       10148  jmp(Y,'lsrvl#13')               #11
              234a 1200  ld   ac,x        10149  ld(AC,X)                        #12 var
                                          10150
                                          10151  # pc = 0x234b, Opcode = 0x4b
                                          10152  # Instruction LSLVL: Logical shift left var long, 22 + 56 cycles
                                          10153  label('LSLVL')
LSLVL:        234b 142c  ld   $2c,y       10154  ld(hi('lslvl#13'),Y)            #10 #12
              234c e0b0  jmp  y,$b0       10155  jmp(Y,'lslvl#13')               #11
              234d 1200  ld   ac,x        10156  ld(AC,X)                        #12 var
                                          10157
                                          10158  # pc = 0x234e, Opcode = 0x4e
                                          10159  # Instruction INCL: Increment var long, 22 + 36 cycles
                                          10160  label('INCL')
INCL:         234e 142e  ld   $2e,y       10161  ld(hi('incl#13'),Y)             #10 #12
              234f e012  jmp  y,$12       10162  jmp(Y,'incl#13')                #11
              2350 1200  ld   ac,x        10163  ld(AC,X)                        #12 var
                                          10164
                                          10165  # pc = 0x2351, Opcode = 0x51
                                          10166  # Instruction DECL: Decrement var long, 22 + 40 cycles
                                          10167  label('DECL')
DECL:         2351 142e  ld   $2e,y       10168  ld(hi('decl#13'),Y)             #10 #12
              2352 e036  jmp  y,$36       10169  jmp(Y,'decl#13')                #11
                                          10170  # dummy                         #12
                                          10171  #
                                          10172
                                          10173  # SYS calls and instruction implementations rely on these
              2353 0200  nop              10174  fillers(until=0xca)
              2354 0200  nop
              2355 0200  nop
              * 119 times
              23ca 00f2  ld   $f2         10175  ld(-28/2)                       #25
              23cb fc01  bra  $2301       10176  bra('NEXT')                     #26 Return from SYS calls
              23cc 1517  ld   [$17],y     10177  ld([vPC+1],Y)                   #27
                                          10178
                                          10179
              23cd 0200  nop              10180  fillers(until=0xff)
              23ce 0200  nop
              23cf 0200  nop
              * 50 times
                                          10181
                                          10182  #-----------------------------------------------------------------------
                                          10183  #       PREFX1 instruction page, (0x2400), PREFIX OPCODE
                                          10184  #-----------------------------------------------------------------------
                                          10185  #
                                          10186  label('PREFX1_PAGE')
PREFX1_PAGE:  23ff fc03  bra  $2403       10187  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          10188  # --- Page boundary ---
                                          10189  align(0x100,size=0x100)
              2400 1517  ld   [$17],y     10190  ld([vPC+1],Y)                   #1
                                          10191
                                          10192  # Fetch next instruction and execute it, but only if there are sufficient
                                          10193  # ticks left for the slowest instruction.
              2401 8115  adda [$15]       10194  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2402 e80b  blt  $240b       10195  blt('EXIT')                     #1 Escape near time out
              2403 c215  st   [$15]       10196  st([vTicks])                    #2
              2404 0116  ld   [$16]       10197  ld([vPC])                       #3 PREFIX is 1 byte, vPC hasn't been incremented
              2405 9001  adda $01,x       10198  adda(1,X)                       #4
              2406 c002  st   $02,[$02]   10199  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2407 0d00  ld   [y,x]       10200  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2408 de00  st   [y,x++]     10201  st([Y,Xpp])                     #7 Just X++
              2409 fe00  bra  ac          10202  bra(AC)                         #8 Dispatch
              240a 0d00  ld   [y,x]       10203  ld([Y,X])                       #9 Prefetch operand
                                          10204
                                          10205  # Resync with video driver and transfer control
              240b 800f  adda $0f         10206  adda(maxTicks)                  #3
              240c e40c  bgt  $240c       10207  bgt(pc()&255)                   #4 Resync
              240d a001  suba $01         10208  suba(1)                         #5
              240e 1401  ld   $01,y       10209  ld(hi('vBlankStart'),Y)         #6
              240f e11e  jmp  y,[$1e]     10210  jmp(Y,[vReturn])                #7 To video driver
              2410 0000  ld   $00         10211  ld(0)                           #8 AC should be 0 already. Still..
                                          10212  assert vCPU_overhead ==          9
                                          10213
                                          10214  # pc = 0x2411, Opcode = 0x11
                                          10215  # Instruction NOTE: vAC = ROM:[NotesTable + vAC.lo*2], 18 + 28 cycles
                                          10216  label('NOTE')
NOTE:         2411 1427  ld   $27,y       10217  ld(hi('note#13'),Y)             #10
              2412 e000  jmp  y,$00       10218  jmp(Y,'note#13')                #11
              2413 0009  ld   $09         10219  ld('.note#28')                  #12 low byte of low note return address
                                          10220
                                          10221  # pc = 0x2414, Opcode = 0x14
                                          10222  # Instruction MIDI: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 18 + 30 cycles
                                          10223  label('MIDI')
MIDI:         2414 1427  ld   $27,y       10224  ld(hi('midi#13'),Y)             #10
              2415 e019  jmp  y,$19       10225  jmp(Y,'midi#13')                #11
              2416 0023  ld   $23         10226  ld('.midi#29')                  #12 low byte of low midi return address
                                          10227
                                          10228  # pc = 0x2417, Opcode = 0x17
                                          10229  # Instruction XLA, (lb3361): Exchange vLR with vAC, 18 + 28 cycles
                                          10230  label('XLA')
XLA:          2417 1427  ld   $27,y       10231  ld(hi('xla#13'),Y)              #10
              2418 e033  jmp  y,$33       10232  jmp(Y,'xla#13')                 #11
              2419 0118  ld   [$18]       10233  ld([vAC])                       #12
                                          10234
                                          10235
                                          10236  # SYS calls and instruction implementations rely on these
              241a 0200  nop              10237  fillers(until=0xca)
              241b 0200  nop
              241c 0200  nop
              * 176 times
              24ca 00f2  ld   $f2         10238  ld(-28/2)                       #25
              24cb fc01  bra  $2401       10239  bra('NEXT')                     #26 Return from SYS calls
              24cc 1517  ld   [$17],y     10240  ld([vPC+1],Y)                   #27
                                          10241
                                          10242
              24cd 0200  nop              10243  fillers(until=0xff)
              24ce 0200  nop
              24cf 0200  nop
              * 50 times
              24ff 0200  nop              10244  align(0x100, size=0x100)
                                          10245
                                          10246  #-----------------------------------------------------------------------
                                          10247  #       PREFX3 implementation page, (0x2500)
                                          10248  #-----------------------------------------------------------------------
                                          10249  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          10250  #
                                          10251  # STB2 implementation
                                          10252  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10253  label('stb2#13')
stb2#13:      2500 152b  ld   [$2b],y     10254  ld([sysArgs+7],Y)               #13 Second operand
              2501 0118  ld   [$18]       10255  ld([vAC])                       #14
              2502 ce00  st   [y,x]       10256  st([Y,X])                       #15
              2503 1403  ld   $03,y       10257  ld(hi('NEXTY'),Y)               #16
              2504 e000  jmp  y,$00       10258  jmp(Y,'NEXTY')                  #17
              2505 00f6  ld   $f6         10259  ld(-20/2)                       #18
                                          10260
                                          10261  # STW2 implementation
                                          10262  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10263  label('stw2#13')
stw2#13:      2506 152b  ld   [$2b],y     10264  ld([sysArgs+7],Y)               #13 Second operand
              2507 0118  ld   [$18]       10265  ld([vAC])                       #14
              2508 de00  st   [y,x++]     10266  st([Y,Xpp])                     #15
              2509 0119  ld   [$19]       10267  ld([vAC+1])                     #16
              250a ce00  st   [y,x]       10268  st([Y,X])                       #17
              250b 1403  ld   $03,y       10269  ld(hi('NEXTY'),Y)               #18
              250c e000  jmp  y,$00       10270  jmp(Y,'NEXTY')                  #19
              250d 00f5  ld   $f5         10271  ld(-22/2)                       #20
                                          10272
                                          10273  # XCHGB implementation
                                          10274  label('xchgb#13')
xchgb#13:     250e c22a  st   [$2a]       10275  st([sysArgs+6])                 #13 1st var
              250f 112b  ld   [$2b],x     10276  ld([sysArgs+7],X)               #14 2nd var
              2510 0500  ld   [x]         10277  ld([X])                         #15
              2511 c21d  st   [$1d]       10278  st([vTmp])                      #16
              2512 112a  ld   [$2a],x     10279  ld([sysArgs+6],X)               #17
              2513 0500  ld   [x]         10280  ld([X])                         #18
              2514 112b  ld   [$2b],x     10281  ld([sysArgs+7],X)               #19
              2515 c600  st   [x]         10282  st([X])                         #20
              2516 112a  ld   [$2a],x     10283  ld([sysArgs+6],X)               #21
              2517 011d  ld   [$1d]       10284  ld([vTmp])                      #22
              2518 c600  st   [x]         10285  st([X])                         #23
              2519 1403  ld   $03,y       10286  ld(hi('NEXTY'),Y)               #24
              251a e000  jmp  y,$00       10287  jmp(Y,'NEXTY')                  #25
              251b 00f2  ld   $f2         10288  ld(-28/2)                       #26
                                          10289
                                          10290  # XCHGW implementation
                                          10291  label('xchgw#13')
xchgw#13:     251c 00f8  ld   $f8         10292  ld(min(0,maxTicks-46/2))        #13
              251d 8115  adda [$15]       10293  adda([vTicks])                  #14
              251e e83b  blt  .xchgw#17   10294  blt('.xchgw#17')                #15 not enough time left, so retry
              251f 1400  ld   $00,y       10295  ld(0,Y)                         #16
              2520 112b  ld   [$2b],x     10296  ld([sysArgs+7],X)               #17
              2521 0500  ld   [x]         10297  ld([X])                         #18
              2522 c21d  st   [$1d]       10298  st([vTmp])                      #19 vTmp = var2.lo
              2523 112a  ld   [$2a],x     10299  ld([sysArgs+6],X)               #20
              2524 0500  ld   [x]         10300  ld([X])                         #21 AC = var1.lo
              2525 112b  ld   [$2b],x     10301  ld([sysArgs+7],X)               #22
              2526 c600  st   [x]         10302  st([X])                         #23 var2.lo = AC
              2527 112a  ld   [$2a],x     10303  ld([sysArgs+6],X)               #24
              2528 011d  ld   [$1d]       10304  ld([vTmp])                      #25
              2529 c600  st   [x]         10305  st([X])                         #26 var1.lo = vTmp
              252a 012b  ld   [$2b]       10306  ld([sysArgs+7])                 #27
              252b 8001  adda $01         10307  adda(1)                         #28
              252c d22b  st   [$2b],x     10308  st([sysArgs+7],X)               #29 inc sysArgs+7
              252d 0500  ld   [x]         10309  ld([X])                         #30
              252e c21d  st   [$1d]       10310  st([vTmp])                      #31 vTmp = var2.hi
              252f 012a  ld   [$2a]       10311  ld([sysArgs+6])                 #32
              2530 9001  adda $01,x       10312  adda(1,X)                       #33
              2531 0500  ld   [x]         10313  ld([X])                         #34 AC = var1.hi
              2532 112b  ld   [$2b],x     10314  ld([sysArgs+7],X)               #35
              2533 c600  st   [x]         10315  st([X])                         #36 var2.hi = AC
              2534 012a  ld   [$2a]       10316  ld([sysArgs+6])                 #37
              2535 9001  adda $01,x       10317  adda(1,X)                       #38
              2536 011d  ld   [$1d]       10318  ld([vTmp])                      #39
              2537 c600  st   [x]         10319  st([X])                         #40 var1.hi = vTmp
              2538 1403  ld   $03,y       10320  ld(hi('REENTER'),Y)             #41
              2539 e0cb  jmp  y,$cb       10321  jmp(Y,'REENTER')                #42
              253a 00e9  ld   $e9         10322  ld(-46/2)                       #43
                                          10323  label('.xchgw#17')
.xchgw#17:    253b 0021  ld   $21         10324  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              253c c202  st   [$02]       10325  st([vCpuSelect])                #18 restore PREFX3 instruction page
              253d 9401  adda $01,y       10326  adda(1,Y)                       #19 retry instruction
              253e e0cb  jmp  y,$cb       10327  jmp(Y,'REENTER')                #20
              253f 00f4  ld   $f4         10328  ld(-24/2)                       #21
                                          10329
                                          10330  # MOVW implementation
                                          10331  label('movw#13')
movw#13:      2540 1200  ld   ac,x        10332  ld(AC,X)                        #13
              2541 8001  adda $01         10333  adda(1)                         #14
              2542 c21d  st   [$1d]       10334  st([vTmp])                      #15 address of src.hi
              2543 0500  ld   [x]         10335  ld([X])                         #16 src.lo
              2544 112b  ld   [$2b],x     10336  ld([sysArgs+7],X)               #17 address of dst.lo
              2545 c600  st   [x]         10337  st([X])                         #18 dst.lo = src.lo
              2546 111d  ld   [$1d],x     10338  ld([vTmp],X)                    #19
              2547 0500  ld   [x]         10339  ld([X])                         #20 src.hi
              2548 c21d  st   [$1d]       10340  st([vTmp])                      #21
              2549 012b  ld   [$2b]       10341  ld([sysArgs+7])                 #22
              254a 9001  adda $01,x       10342  adda(1,X)                       #23 address of dst.hi
              254b 011d  ld   [$1d]       10343  ld([vTmp])                      #24
              254c c600  st   [x]         10344  st([X])                         #25 dst.hi = src.hi
              254d 1403  ld   $03,y       10345  ld(hi('NEXTY'),Y)               #26
              254e e000  jmp  y,$00       10346  jmp(Y,'NEXTY')                  #27
              254f 00f1  ld   $f1         10347  ld(-30/2)                       #28
                                          10348
                                          10349  # ADDWI implementation
                                          10350  label('addwi#13')
addwi#13:     2550 c21d  st   [$1d]       10351  st([vTmp])                      #13 save imm.lo
              2551 8118  adda [$18]       10352  adda([vAC])                     #14
              2552 c218  st   [$18]       10353  st([vAC])                       #15 vAC.lo += imm.lo
              2553 e85d  blt  .addwi#18   10354  bmi('.addwi#18')                #16 overflow
              2554 a11d  suba [$1d]       10355  suba([vTmp])                    #17 restore vAC.lo
              2555 411d  ora  [$1d]       10356  ora([vTmp])                     #18 imm.lo | vAC.lo
              2556 e865  blt  .addwi#21   10357  bmi('.addwi#21')                #19 if carry == 1
              2557 012b  ld   [$2b]       10358  ld([sysArgs+7])                 #20 imm.hi
              2558 8119  adda [$19]       10359  adda([vAC+1])                   #21 carry = 0
              2559 c219  st   [$19]       10360  st([vAC+1])                     #22 vAC.hi += imm.hi
              255a 1403  ld   $03,y       10361  ld(hi('REENTER'),Y)             #23
              255b e0cb  jmp  y,$cb       10362  jmp(Y,'REENTER')                #24
              255c 00f2  ld   $f2         10363  ld(-28/2)                       #25
                                          10364  label('.addwi#18')
.addwi#18:    255d 211d  anda [$1d]       10365  anda([vTmp])                    #18 imm.lo & vAC.lo
              255e e865  blt  .addwi#21   10366  bmi('.addwi#21')                #19 If carry == 1
              255f 012b  ld   [$2b]       10367  ld([sysArgs+7])                 #20 imm.hi
              2560 8119  adda [$19]       10368  adda([vAC+1])                   #21 carry = 0
              2561 c219  st   [$19]       10369  st([vAC+1])                     #22 vAC.hi += imm.hi
              2562 1403  ld   $03,y       10370  ld(hi('REENTER'),Y)             #23
              2563 e0cb  jmp  y,$cb       10371  jmp(Y,'REENTER')                #24
              2564 00f2  ld   $f2         10372  ld(-28/2)                       #25
                                          10373  label('.addwi#21')
.addwi#21:    2565 8001  adda $01         10374  adda(1)                         #21 carry = 1
              2566 8119  adda [$19]       10375  adda([vAC+1])                   #22
              2567 c219  st   [$19]       10376  st([vAC+1])                     #23 vAC.hi = vAC.hi + carry + imm.hi
              2568 1403  ld   $03,y       10377  ld(hi('NEXTY'),Y)               #24
              2569 e000  jmp  y,$00       10378  jmp(Y,'NEXTY')                  #25
              256a 00f2  ld   $f2         10379  ld(-28/2)                       #26
                                          10380
                                          10381  # SUBWI implementation
                                          10382  label('subwi#13')
subwi#13:     256b c21d  st   [$1d]       10383  st([vTmp])                      #13 save imm.lo
              256c 0118  ld   [$18]       10384  ld([vAC])                       #14
              256d e879  blt  .subwi#17   10385  bmi('.subwi#17')                #15 is -ve?
              256e a11d  suba [$1d]       10386  suba([vTmp])                    #16
              256f c218  st   [$18]       10387  st([vAC])                       #17 vAC.lo -= imm.lo
              2570 411d  ora  [$1d]       10388  ora([vTmp])                     #18 borrow in bit 7
              2571 3080  anda $80,x       10389  anda(0x80,X)                    #19 move borrow to bit 0
              2572 0119  ld   [$19]       10390  ld([vAC+1])                     #20
              2573 a500  suba [x]         10391  suba([X])                       #21
              2574 a12b  suba [$2b]       10392  suba([sysArgs+7])               #22
              2575 c219  st   [$19]       10393  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              2576 1403  ld   $03,y       10394  ld(hi('NEXTY'),Y)               #24
              2577 e000  jmp  y,$00       10395  jmp(Y,'NEXTY')                  #25
              2578 00f2  ld   $f2         10396  ld(-28/2)                       #26
                                          10397  label('.subwi#17')
.subwi#17:    2579 c218  st   [$18]       10398  st([vAC])                       #17 vAC.lo -= imm.lo
              257a 211d  anda [$1d]       10399  anda([vTmp])                    #18 borrow in bit 7
              257b 3080  anda $80,x       10400  anda(0x80,X)                    #19 move borrow to bit 0
              257c 0119  ld   [$19]       10401  ld([vAC+1])                     #20
              257d a500  suba [x]         10402  suba([X])                       #21
              257e a12b  suba [$2b]       10403  suba([sysArgs+7])               #22
              257f c219  st   [$19]       10404  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              2580 1403  ld   $03,y       10405  ld(hi('NEXTY'),Y)               #24
              2581 e000  jmp  y,$00       10406  jmp(Y,'NEXTY')                  #25
              2582 00f2  ld   $f2         10407  ld(-28/2)                       #26
                                          10408
                                          10409  # ANDWI implementation
                                          10410  label('andwi#13')
andwi#13:     2583 2118  anda [$18]       10411  anda([vAC])                     #13
              2584 c218  st   [$18]       10412  st([vAC])                       #14 vAC.lo &= imm.lo
              2585 012b  ld   [$2b]       10413  ld([sysArgs+7])                 #15
              2586 2119  anda [$19]       10414  anda([vAC+1])                   #16
              2587 c219  st   [$19]       10415  st([vAC+1])                     #17 vAC.hi &= imm.hi
              2588 1403  ld   $03,y       10416  ld(hi('NEXTY'),Y)               #18
              2589 e000  jmp  y,$00       10417  jmp(Y,'NEXTY')                  #19
              258a 00f5  ld   $f5         10418  ld(-22/2)                       #20
                                          10419
                                          10420  # ORWI implementation
                                          10421  label('orwi#13')
orwi#13:      258b 4118  ora  [$18]       10422  ora([vAC])                      #13
              258c c218  st   [$18]       10423  st([vAC])                       #14 vAC.lo |= imm.lo
              258d 012b  ld   [$2b]       10424  ld([sysArgs+7])                 #15
              258e 4119  ora  [$19]       10425  ora([vAC+1])                    #16
              258f c219  st   [$19]       10426  st([vAC+1])                     #17 vAC.hi |= imm.hi
              2590 1403  ld   $03,y       10427  ld(hi('NEXTY'),Y)               #18
              2591 e000  jmp  y,$00       10428  jmp(Y,'NEXTY')                  #19
              2592 00f5  ld   $f5         10429  ld(-22/2)                       #20
                                          10430
                                          10431  # XORWI implementation
                                          10432  label('xorwi#13')
xorwi#13:     2593 6118  xora [$18]       10433  xora([vAC])                     #13
              2594 c218  st   [$18]       10434  st([vAC])                       #14 vAC.lo ^= imm.lo
              2595 012b  ld   [$2b]       10435  ld([sysArgs+7])                 #15
              2596 6119  xora [$19]       10436  xora([vAC+1])                   #16
              2597 c219  st   [$19]       10437  st([vAC+1])                     #17 vAC.hi ^= imm.hi
              2598 1403  ld   $03,y       10438  ld(hi('NEXTY'),Y)               #18
              2599 e000  jmp  y,$00       10439  jmp(Y,'NEXTY')                  #19
              259a 00f5  ld   $f5         10440  ld(-22/2)                       #20
                                          10441
                                          10442  # LDPX implementation
                                          10443  label('ldpx#13')
ldpx#13:      259b 9001  adda $01,x       10444  adda(1,X)                       #13
              259c 0500  ld   [x]         10445  ld([X])                         #14 y
              259d 8500  adda [x]         10446  adda([X])                       #15 y*2
              259e 1200  ld   ac,x        10447  ld(AC,X)                        #16
              259f 1401  ld   $01,y       10448  ld(1,Y)                         #17 Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              25a0 0d00  ld   [y,x]       10449  ld([Y,X])                       #18
              25a1 1600  ld   ac,y        10450  ld(AC,Y)                        #19 Y = [Y,X]
              25a2 111d  ld   [$1d],x     10451  ld([vTmp],X)                    #20
              25a3 0500  ld   [x]         10452  ld([X])                         #21
              25a4 1200  ld   ac,x        10453  ld(AC,X)                        #22 X = x
              25a5 0d00  ld   [y,x]       10454  ld([Y,X])                       #23 colour = [Y,X]
              25a6 112b  ld   [$2b],x     10455  ld([sysArgs+7],X)               #24
              25a7 c600  st   [x]         10456  st([X])                         #25 colour
              25a8 1403  ld   $03,y       10457  ld(hi('NEXTY'),Y)               #26
              25a9 e000  jmp  y,$00       10458  jmp(Y,'NEXTY')                  #27
              25aa 00f1  ld   $f1         10459  ld(-30/2)                       #28
                                          10460
                                          10461  # CONDI implementation
                                          10462  label('condi#13')
condi#13:     25ab c21d  st   [$1d]       10463  st([vTmp])                      #13
              25ac 0118  ld   [$18]       10464  ld([vAC])                       #14
              25ad 4119  ora  [$19]       10465  ora([vAC+1])                    #15
              25ae ecb1  bne  $25b1       10466  bne(pc()+3)                     #16
              25af fcb2  bra  $25b2       10467  bra(pc()+3)                     #17
              25b0 012b  ld   [$2b]       10468  ld([sysArgs+7])                 #18 get result cond == 0
              25b1 011d  ld   [$1d]       10469  ld([vTmp])                      #18 get result cond != 0
              25b2 c218  st   [$18]       10470  st([vAC])                       #19 result.lo
              25b3 0000  ld   $00         10471  ld(0)                           #20
              25b4 c219  st   [$19]       10472  st([vAC+1])                     #21 result.hi = 0
              25b5 1403  ld   $03,y       10473  ld(hi('NEXTY'),Y)               #22
              25b6 e000  jmp  y,$00       10474  jmp(Y,'NEXTY')                  #23
              25b7 00f3  ld   $f3         10475  ld(-26/2)                       #24
                                          10476
                                          10477  # CONDB implementation
                                          10478  label('condb#13')
condb#13:     25b8 0500  ld   [x]         10479  ld([X])                         #13
              25b9 c21d  st   [$1d]       10480  st([vTmp])                      #14
              25ba 112b  ld   [$2b],x     10481  ld([sysArgs+7],X)               #15 get result cond=0
              25bb 0118  ld   [$18]       10482  ld([vAC])                       #16
              25bc 4119  ora  [$19]       10483  ora([vAC+1])                    #17
              25bd ecc0  bne  $25c0       10484  bne(pc()+3)                     #18
              25be fcc1  bra  $25c1       10485  bra(pc()+3)                     #19
              25bf 0500  ld   [x]         10486  ld([X])                         #20 get result cond == 0
              25c0 011d  ld   [$1d]       10487  ld([vTmp])                      #20 get result cond != 0
              25c1 c218  st   [$18]       10488  st([vAC])                       #21 result.lo
              25c2 0000  ld   $00         10489  ld(0)                           #22
              25c3 c219  st   [$19]       10490  st([vAC+1])                     #23 result.hi = 0
              25c4 1403  ld   $03,y       10491  ld(hi('NEXTY'),Y)               #24
              25c5 e000  jmp  y,$00       10492  jmp(Y,'NEXTY')                  #25
              25c6 00f2  ld   $f2         10493  ld(-28/2)                       #26
                                          10494
                                          10495  # CONDIB implementation
                                          10496  label('condib#13')
condib#13:    25c7 112b  ld   [$2b],x     10497  ld([sysArgs+7],X)               #13 get result cond=0
              25c8 0118  ld   [$18]       10498  ld([vAC])                       #14
              25c9 4119  ora  [$19]       10499  ora([vAC+1])                    #15
              25ca eccd  bne  $25cd       10500  bne(pc()+3)                     #16
              25cb fcce  bra  $25ce       10501  bra(pc()+3)                     #17
              25cc 0500  ld   [x]         10502  ld([X])                         #18 get result cond == 0
              25cd 011d  ld   [$1d]       10503  ld([vTmp])                      #18 get result cond != 0
              25ce c218  st   [$18]       10504  st([vAC])                       #19 result.lo
              25cf 0000  ld   $00         10505  ld(0)                           #20
              25d0 c219  st   [$19]       10506  st([vAC+1])                     #21 result.hi = 0
              25d1 1403  ld   $03,y       10507  ld(hi('NEXTY'),Y)               #22
              25d2 e000  jmp  y,$00       10508  jmp(Y,'NEXTY')                  #23
              25d3 00f3  ld   $f3         10509  ld(-26/2)                       #24
                                          10510
                                          10511  # CONDBI implementation
                                          10512  label('condbi#13')
condbi#13:    25d4 1200  ld   ac,x        10513  ld(AC,X)                        #13
              25d5 0118  ld   [$18]       10514  ld([vAC])                       #14
              25d6 4119  ora  [$19]       10515  ora([vAC+1])                    #15
              25d7 ecda  bne  $25da       10516  bne(pc()+3)                     #16
              25d8 fcdb  bra  $25db       10517  bra(pc()+3)                     #17
              25d9 012b  ld   [$2b]       10518  ld([sysArgs+7])                 #18 get result cond == 0
              25da 0500  ld   [x]         10519  ld([X])                         #18 get result cond != 0
              25db c218  st   [$18]       10520  st([vAC])                       #19 result.lo
              25dc 0000  ld   $00         10521  ld(0)                           #20
              25dd c219  st   [$19]       10522  st([vAC+1])                     #21 result.hi = 0
              25de 1403  ld   $03,y       10523  ld(hi('NEXTY'),Y)               #22
              25df e000  jmp  y,$00       10524  jmp(Y,'NEXTY')                  #23
              25e0 00f3  ld   $f3         10525  ld(-26/2)                       #24
                                          10526
                                          10527
              25e1 0200  nop              10528  fillers(until=0xff)
              25e2 0200  nop
              25e3 0200  nop
              * 30 times
              25ff 0200  nop              10529  align(0x100, size=0x100)
                                          10530
                                          10531  #-----------------------------------------------------------------------
                                          10532  #       PREFX2 implementation page, (0x2600)
                                          10533  #-----------------------------------------------------------------------
                                          10534  #
                                          10535  # LSLN implementation
                                          10536  label('lsln#13')
lsln#13:      2600 a001  suba $01         10537  suba(1)                         #13
              2601 f406  bge  .lsln#16    10538  bge('.lsln#16')                 #14
              2602 c22b  st   [$2b]       10539  st([sysArgs+7])                 #15
              2603 1403  ld   $03,y       10540  ld(hi('NEXTY'),Y)               #16 exit PREFX2 instruction page
              2604 e000  jmp  y,$00       10541  jmp(Y,'NEXTY')                  #17
              2605 00f6  ld   $f6         10542  ld(-20/2)                       #18
                                          10543  label('.lsln#16')
.lsln#16:     2606 0118  ld   [$18]       10544  ld([vAC])                       #16
              2607 3080  anda $80,x       10545  anda(128,X)                     #17
              2608 8118  adda [$18]       10546  adda([vAC])                     #18
              2609 c218  st   [$18]       10547  st([vAC])                       #19
              260a 0500  ld   [x]         10548  ld([X])                         #20
              260b 8119  adda [$19]       10549  adda([vAC+1])                   #21
              260c 8119  adda [$19]       10550  adda([vAC+1])                   #22
              260d c219  st   [$19]       10551  st([vAC+1])                     #23
              260e 0022  ld   $22         10552  ld(hi('PREFX2_PAGE'))           #24 ENTER is at $(n-1)ff, where n = instruction page
              260f c202  st   [$02]       10553  st([vCpuSelect])                #25 restore PREFX2 instruction page
              2610 9401  adda $01,y       10554  adda(1,Y)                       #26 restart instruction
              2611 e000  jmp  y,$00       10555  jmp(Y,'NEXTY')                  #27
              2612 00f1  ld   $f1         10556  ld(-30/2)                       #28
                                          10557
                                          10558  # NOTW implementation
                                          10559  label('notw#13')
notw#13:      2613 112b  ld   [$2b],x     10560  ld([sysArgs+7],X)               #13
              2614 1400  ld   $00,y       10561  ld(0,Y)                         #14
              2615 0500  ld   [x]         10562  ld([X])                         #15
              2616 60ff  xora $ff         10563  xora(255)                       #16
              2617 de00  st   [y,x++]     10564  st([Y,Xpp])                     #17
              2618 0500  ld   [x]         10565  ld([X])                         #18
              2619 60ff  xora $ff         10566  xora(255)                       #19
              261a c600  st   [x]         10567  st([X])                         #20
              261b 1403  ld   $03,y       10568  ld(hi('REENTER'),Y)             #21
              261c e0cb  jmp  y,$cb       10569  jmp(Y,'REENTER')                #22
              261d 00f3  ld   $f3         10570  ld(-26/2)                       #23
                                          10571
                                          10572  # NEGW implementation
                                          10573  label('negw#13')
negw#13:      261e 112b  ld   [$2b],x     10574  ld([sysArgs+7],X)               #13
              261f 1400  ld   $00,y       10575  ld(0,Y)                         #14
              2620 0500  ld   [x]         10576  ld([X])                         #15
              2621 60ff  xora $ff         10577  xora(255)                       #16
              2622 8001  adda $01         10578  adda(1)                         #17
              2623 f02b  beq  .negw#20    10579  beq('.negw#20')                 #18
              2624 de00  st   [y,x++]     10580  st([Y,Xpp])                     #19
              2625 0500  ld   [x]         10581  ld([X])                         #20
              2626 60ff  xora $ff         10582  xora(255)                       #21
              2627 c600  st   [x]         10583  st([X])                         #22
              2628 1403  ld   $03,y       10584  ld(hi('REENTER'),Y)             #23
              2629 e0cb  jmp  y,$cb       10585  jmp(Y,'REENTER')                #24
              262a 00f2  ld   $f2         10586  ld(-28/2)                       #25
                                          10587  label('.negw#20')
.negw#20:     262b 0500  ld   [x]         10588  ld([X])                         #20
              262c 60ff  xora $ff         10589  xora(255)                       #21
              262d 8001  adda $01         10590  adda(1)                         #22
              262e c600  st   [x]         10591  st([X])                         #23
              262f 1403  ld   $03,y       10592  ld(hi('NEXTY'),Y)               #24
              2630 e000  jmp  y,$00       10593  jmp(Y,'NEXTY')                  #25
              2631 00f2  ld   $f2         10594  ld(-28/2)                       #26
                                          10595
                                          10596  # SEXT implementation
                                          10597  label('sext#13')
sext#13:      2632 2119  anda [$19]       10598  anda([vAC+1])                   #13
              2633 ec38  bne  .sext#16    10599  bne('.sext#16')                 #14 check mask
              2634 012b  ld   [$2b]       10600  ld([sysArgs+7])                 #15
              2635 1403  ld   $03,y       10601  ld(hi('NEXTY'),Y)               #16
              2636 e000  jmp  y,$00       10602  jmp(Y,'NEXTY')                  #17
              2637 00f6  ld   $f6         10603  ld(-20/2)                       #18
                                          10604  label('.sext#16')
.sext#16:     2638 60ff  xora $ff         10605  xora(255)                       #16
              2639 8001  adda $01         10606  adda(1)                         #17 mask = (~mask) + 1
              263a 4119  ora  [$19]       10607  ora([vAC+1])                    #18
              263b c219  st   [$19]       10608  st([vAC+1])                     #19 set sign bits
              263c 1403  ld   $03,y       10609  ld(hi('NEXTY'),Y)               #20
              263d e000  jmp  y,$00       10610  jmp(Y,'NEXTY')                  #21
              263e 00f4  ld   $f4         10611  ld(-24/2)                       #22
                                          10612
                                          10613  # ANDBA implementation
                                          10614  label('andba#13')
andba#13:     263f 0118  ld   [$18]       10615  ld([vAC])                       #13
              2640 2500  anda [x]         10616  anda([X])                       #14
              2641 c218  st   [$18]       10617  st([vAC])                       #15 vAC.lo &= var.lo
              2642 0000  ld   $00         10618  ld(0)                           #16
              2643 c219  st   [$19]       10619  st([vAC+1])                     #17 Store high result
              2644 1403  ld   $03,y       10620  ld(hi('NEXTY'),Y)               #18
              2645 e000  jmp  y,$00       10621  jmp(Y,'NEXTY')                  #19
              2646 00f5  ld   $f5         10622  ld(-22/2)                       #20
                                          10623
                                          10624  # ORBA implementation
                                          10625  label('orba#13')
orba#13:      2647 0118  ld   [$18]       10626  ld([vAC])                       #13
              2648 4500  ora  [x]         10627  ora([X])                        #14
              2649 c218  st   [$18]       10628  st([vAC])                       #15 vAC.lo |= var.lo
              264a 1403  ld   $03,y       10629  ld(hi('NEXTY'),Y)               #16
              264b e000  jmp  y,$00       10630  jmp(Y,'NEXTY')                  #17
              264c 00f6  ld   $f6         10631  ld(-20/2)                       #18
                                          10632
                                          10633  # XORBA implementation
                                          10634  label('xorba#13')
xorba#13:     264d 0118  ld   [$18]       10635  ld([vAC])                       #13
              264e 6500  xora [x]         10636  xora([X])                       #14
              264f c218  st   [$18]       10637  st([vAC])                       #15 vAC.lo ^= var.lo
              2650 1403  ld   $03,y       10638  ld(hi('NEXTY'),Y)               #16
              2651 e000  jmp  y,$00       10639  jmp(Y,'NEXTY')                  #17
              2652 00f6  ld   $f6         10640  ld(-20/2)                       #18
                                          10641
                                          10642  # FREQM implementation
                                          10643  label('freqm#13')
freqm#13:     2653 1200  ld   ac,x        10644  ld(AC,X)                        #13 chan var, (operand from PREFX2)
              2654 0500  ld   [x]         10645  ld([X])                         #14
              2655 2003  anda $03         10646  anda(3)                         #15
              2656 9401  adda $01,y       10647  adda(1,Y)                       #16
              2657 10fc  ld   $fc,x       10648  ld(0xFC,X)                      #17
              2658 0118  ld   [$18]       10649  ld([vAC])                       #18
              2659 de00  st   [y,x++]     10650  st([Y,Xpp])                     #19
              265a 0119  ld   [$19]       10651  ld([vAC+1])                     #20
              265b ce00  st   [y,x]       10652  st([Y,X])                       #21
              265c 1403  ld   $03,y       10653  ld(hi('NEXTY'),Y)               #22
              265d e000  jmp  y,$00       10654  jmp(Y,'NEXTY')                  #23
              265e 00f3  ld   $f3         10655  ld(-26/2)                       #24
                                          10656
                                          10657  # FREQA implementation
                                          10658  label('freqa#13')
freqa#13:     265f 0500  ld   [x]         10659  ld([X])                         #13
              2660 a001  suba $01         10660  suba(1)                         #14
              2661 2003  anda $03         10661  anda(3)                         #15
              2662 9401  adda $01,y       10662  adda(1,Y)                       #16
              2663 10fc  ld   $fc,x       10663  ld(0xFC,X)                      #17
              2664 0118  ld   [$18]       10664  ld([vAC])                       #18
              2665 de00  st   [y,x++]     10665  st([Y,Xpp])                     #19
              2666 0119  ld   [$19]       10666  ld([vAC+1])                     #20
              2667 ce00  st   [y,x]       10667  st([Y,X])                       #21
              2668 1403  ld   $03,y       10668  ld(hi('NEXTY'),Y)               #22
              2669 e000  jmp  y,$00       10669  jmp(Y,'NEXTY')                  #23
              266a 00f3  ld   $f3         10670  ld(-26/2)                       #24
                                          10671
                                          10672  # FREQZ implementation
                                          10673  label('freqz#13')
freqz#13:     266b 9401  adda $01,y       10674  adda(1,Y)                       #13
              266c 10fc  ld   $fc,x       10675  ld(0xFC,X)                      #14
              266d 0000  ld   $00         10676  ld(0)                           #15
              266e de00  st   [y,x++]     10677  st([Y,Xpp])                     #16
              266f ce00  st   [y,x]       10678  st([Y,X])                       #17
              2670 1403  ld   $03,y       10679  ld(hi('NEXTY'),Y)               #18
              2671 e000  jmp  y,$00       10680  jmp(Y,'NEXTY')                  #19
              2672 00f5  ld   $f5         10681  ld(-22/2)                       #20
                                          10682
                                          10683  # VOLM implementation
                                          10684  label('volm#13')
volm#13:      2673 1200  ld   ac,x        10685  ld(AC,X)                        #13 chan var, (operand from PREFX2)
              2674 0500  ld   [x]         10686  ld([X])                         #14
              2675 2003  anda $03         10687  anda(3)                         #15
              2676 9401  adda $01,y       10688  adda(1,Y)                       #16
              2677 10fa  ld   $fa,x       10689  ld(0xFA,X)                      #17
              2678 0118  ld   [$18]       10690  ld([vAC])                       #18
              2679 ce00  st   [y,x]       10691  st([Y,X])                       #19
              267a 1403  ld   $03,y       10692  ld(hi('NEXTY'),Y)               #20
              267b e000  jmp  y,$00       10693  jmp(Y,'NEXTY')                  #21
              267c 00f4  ld   $f4         10694  ld(-24/2)                       #22
                                          10695
                                          10696  # VOLA implementation
                                          10697  label('vola#13')
vola#13:      267d 0500  ld   [x]         10698  ld([X])                         #13
              267e a001  suba $01         10699  suba(1)                         #14
              267f 2003  anda $03         10700  anda(3)                         #15
              2680 9401  adda $01,y       10701  adda(1,Y)                       #16
              2681 10fa  ld   $fa,x       10702  ld(0xFA,X)                      #17
              2682 003f  ld   $3f         10703  ld(63)                          #18
              2683 a118  suba [$18]       10704  suba([vAC])                     #19
              2684 8040  adda $40         10705  adda(64)                        #20
              2685 ce00  st   [y,x]       10706  st([Y,X])                       #21
              2686 1403  ld   $03,y       10707  ld(hi('NEXTY'),Y)               #22
              2687 e000  jmp  y,$00       10708  jmp(Y,'NEXTY')                  #23
              2688 00f3  ld   $f3         10709  ld(-26/2)                       #24
                                          10710
                                          10711  # MODA implementation
                                          10712  label('moda#13')
moda#13:      2689 0500  ld   [x]         10713  ld([X])                         #13
              268a a001  suba $01         10714  suba(1)                         #14
              268b 2003  anda $03         10715  anda(3)                         #15
              268c 9401  adda $01,y       10716  adda(1,Y)                       #16
              268d 10fb  ld   $fb,x       10717  ld(0xFB,X)                      #17
              268e 0118  ld   [$18]       10718  ld([vAC])                       #18
              268f ce00  st   [y,x]       10719  st([Y,X])                       #19
              2690 1403  ld   $03,y       10720  ld(hi('NEXTY'),Y)               #20
              2691 e000  jmp  y,$00       10721  jmp(Y,'NEXTY')                  #21
              2692 00f4  ld   $f4         10722  ld(-24/2)                       #22
                                          10723
                                          10724  # MODZ implementation
                                          10725  label('modz#13')
modz#13:      2693 2003  anda $03         10726  anda(3)                         #13
              2694 9401  adda $01,y       10727  adda(1,Y)                       #14
              2695 10fa  ld   $fa,x       10728  ld(0xFA,X)                      #15
              2696 0000  ld   $00         10729  ld(0)                           #16
              2697 de00  st   [y,x++]     10730  st([Y,Xpp])                     #17
              2698 0002  ld   $02         10731  ld(2)                           #18
              2699 ce00  st   [y,x]       10732  st([Y,X])                       #19
              269a 1403  ld   $03,y       10733  ld(hi('NEXTY'),Y)               #20
              269b e000  jmp  y,$00       10734  jmp(Y,'NEXTY')                  #21
              269c 00f4  ld   $f4         10735  ld(-24/2)                       #22
                                          10736
                                          10737
                                          10738  # SMPCPY implementation
                                          10739  label('smpcpy#13')
smpcpy#13:    269d 1400  ld   $00,y       10740  ld(0,Y)                         #13
              269e 00f1  ld   $f1         10741  ld(min(0,maxTicks-60/2))        #14
              269f 8115  adda [$15]       10742  adda([vTicks])                  #15
              26a0 e8d3  blt  .smpcpy#18  10743  blt('.smpcpy#18')               #16 not enough time left, so retry
              26a1 0500  ld   [x]         10744  ld([X])                         #17 dst address = [dst var]
              26a2 de00  st   [y,x++]     10745  st([Y,Xpp])                     #18
              26a3 c2b0  st   [$b0]       10746  st([0xB0])                      #19
              26a4 0500  ld   [x]         10747  ld([X])                         #20
              26a5 c2b1  st   [$b1]       10748  st([0xB1])                      #21
              26a6 1118  ld   [$18],x     10749  ld([vAC],X)                     #22 low byte of src address
              26a7 1519  ld   [$19],y     10750  ld([vAC+1],Y)                   #23 high byte of arc address
              26a8 0d00  ld   [y,x]       10751  ld([Y,X])                       #24
              26a9 c21d  st   [$1d]       10752  st([vTmp])                      #25 packed sample, 4:4
              26aa 1407  ld   $07,y       10753  ld(soundTable>>8,Y)             #26
              26ab 20f0  anda $f0         10754  anda(0xF0)                      #27 high nibble
              26ac 5003  ora  $03,x       10755  ora(0x03,X)                     #28
              26ad 0d00  ld   [y,x]       10756  ld([Y,X])                       #29 high nibble >>2
              26ae 11b0  ld   [$b0],x     10757  ld([0xB0],X)                    #30 low byte dst address
              26af 15b1  ld   [$b1],y     10758  ld([0xB1],Y)                    #31 high byte dst address
              26b0 ce00  st   [y,x]       10759  st([Y,X])                       #32 [0x0702 + i] = 6bit sample
              26b1 01b0  ld   [$b0]       10760  ld([0xB0])                      #33
              26b2 9004  adda $04,x       10761  adda(4,X)                       #34
              26b3 8008  adda $08         10762  adda(8)                         #35
              26b4 c2b0  st   [$b0]       10763  st([0xB0])                      #36
              26b5 011d  ld   [$1d]       10764  ld([vTmp])                      #37 packed sample, 4:4
              26b6 200f  anda $0f         10765  anda(0x0F)                      #38 low nibble
              26b7 8200  adda ac          10766  adda(AC)                        #39
              26b8 8200  adda ac          10767  adda(AC)                        #40 low nibble <<2
              26b9 ce00  st   [y,x]       10768  st([Y,X])                       #41 [0x0706 + i] = 6bit sample
              26ba 112b  ld   [$2b],x     10769  ld([sysArgs+7],X)               #42
              26bb 01b0  ld   [$b0]       10770  ld([0xB0])                      #43
              26bc c600  st   [x]         10771  st([X])                         #44
              26bd a002  suba $02         10772  suba(0x02)                      #45
              26be f0d0  beq  .smpcpy#48  10773  beq('.smpcpy#48')               #46 check for end sample
              26bf 0118  ld   [$18]       10774  ld([vAC])                       #47
              26c0 8001  adda $01         10775  adda(1)                         #48
              26c1 eccb  bne  .smpcpy#51  10776  bne('.smpcpy#51')               #49
              26c2 c218  st   [$18]       10777  st([vAC])                       #50
              26c3 0119  ld   [$19]       10778  ld([vAC+1])                     #51
              26c4 8001  adda $01         10779  adda(1)                         #52
              26c5 c219  st   [$19]       10780  st([vAC+1])                     #53
              26c6 0022  ld   $22         10781  ld(hi('PREFX2_PAGE'))           #54 ENTER is at $(n-1)ff, where n = instruction page
              26c7 c202  st   [$02]       10782  st([vCpuSelect])                #55 restore PREFX2 instruction page
              26c8 9401  adda $01,y       10783  adda(1,Y)                       #56 restart instruction
              26c9 e000  jmp  y,$00       10784  jmp(Y,'NEXTY')                  #57
              26ca 00e2  ld   $e2         10785  ld(-60/2)                       #58
                                          10786
                                          10787  label('.smpcpy#51')
.smpcpy#51:   26cb 0022  ld   $22         10788  ld(hi('PREFX2_PAGE'))           #51 ENTER is at $(n-1)ff, where n = instruction page
              26cc c202  st   [$02]       10789  st([vCpuSelect])                #52 restore PREFX2 instruction page
              26cd 9401  adda $01,y       10790  adda(1,Y)                       #53 restart instruction
              26ce e0cb  jmp  y,$cb       10791  jmp(Y,'REENTER')                #54
              26cf 00e3  ld   $e3         10792  ld(-58/2)                       #55
                                          10793
                                          10794  label('.smpcpy#48')
.smpcpy#48:   26d0 1403  ld   $03,y       10795  ld(hi('NEXTY'),Y)               #48
              26d1 e000  jmp  y,$00       10796  jmp(Y,'NEXTY')                  #49
              26d2 00e6  ld   $e6         10797  ld(-52/2)                       #50
                                          10798
                                          10799  label('.smpcpy#18')
.smpcpy#18:   26d3 0022  ld   $22         10800  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              26d4 c202  st   [$02]       10801  st([vCpuSelect])                #19 restore PREFX2 instruction page
              26d5 9401  adda $01,y       10802  adda(1,Y)                       #20 retry instruction
              26d6 e000  jmp  y,$00       10803  jmp(Y,'NEXTY')                  #21
              26d7 00f4  ld   $f4         10804  ld(-24/2)                       #22
                                          10805
                                          10806
                                          10807  # CMPWS implementation, vAC = vAC CMPWS var
                                          10808  #           LDW   var0
                                          10809  #           XORW  var1
                                          10810  #           BGE   CMPWS_GE
                                          10811  #           LDW   var0
                                          10812  #           BRA   CMPWS_RT
                                          10813  #CMPWS_GE   LDW   var0
                                          10814  #           SUBW  var1
                                          10815  #CMPWS_RT   RET
                                          10816  #label('cmpws#13')
                                          10817  #ld(min(0,maxTicks-38/2))        #13
                                          10818  #adda([vTicks])                  #14
                                          10819  #blt('.cmpws#17')                #15 not enough time left, so retry
                                          10820  #ld(0,Y)                         #16
                                          10821  #ld([X])                         #17
                                          10822  #st([Y,Xpp])                     #18
                                          10823  #st([0xB0])                      #19 cmp var.lo
                                          10824  #ld([X])                         #20
                                          10825  #st([0xB1])                      #21 cmp var.hi
                                          10826  #xora([vAC+1])                   #22
                                          10827  #blt('.cmpws#25')                #23 if < 0
                                          10828  #ld([vAC])                       #24 Low byte
                                          10829  #bmi('.cmpws#27')                #25
                                          10830  #suba([0xB0])                    #26
                                          10831  #st([vAC])                       #27 Store low result
                                          10832  #ora([0xB0])                     #28 Carry in bit 7
                                          10833  #anda(0x80,X)                    #29 Move carry to bit 0
                                          10834  #ld([vAC+1])                     #30
                                          10835  #suba([X])                       #31
                                          10836  #suba([0xB1])                    #32 sub var.hi with carry
                                          10837  #st([vAC+1])                     #33
                                          10838  #ld(hi('NEXTY'),Y)               #34
                                          10839  #jmp(Y,'NEXTY')                  #35
                                          10840  #ld(-38/2)                       #36
                                          10841  #
                                          10842  #label('.cmpws#25')
                                          10843  #ld(hi('REENTER'),Y)             #25
                                          10844  #jmp(Y,'REENTER')                #26
                                          10845  #ld(-30/2)                       #27
                                          10846  #
                                          10847  #label('.cmpws#27')
                                          10848  #st([vAC])                       #27 Store low result
                                          10849  #anda([0xB0])                    #28 Carry in bit 7
                                          10850  #anda(0x80,X)                    #29 Move carry to bit 0
                                          10851  #ld([vAC+1])                     #30
                                          10852  #suba([X])                       #31
                                          10853  #suba([0xB1])                    #32 sub var.hi with carry
                                          10854  #st([vAC+1])                     #33
                                          10855  #ld(hi('NEXTY'),Y)               #34
                                          10856  #jmp(Y,'NEXTY')                  #35
                                          10857  #ld(-38/2)                       #36
                                          10858  #
                                          10859  #label('.cmpws#17')
                                          10860  #ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
                                          10861  #st([vCpuSelect])                #18 restore PREFX2 instruction page
                                          10862  #adda(1,Y)                       #19 retry instruction
                                          10863  #jmp(Y,'REENTER')                #20
                                          10864  #ld(-24/2)                       #21
                                          10865
                                          10866
              26d8 0200  nop              10867  fillers(until=0xff)
              26d9 0200  nop
              26da 0200  nop
              * 39 times
              26ff 0200  nop              10868  align(0x100, size=0x100)
                                          10869
                                          10870  #-----------------------------------------------------------------------
                                          10871  #       PREFX1 implementation page, (0x2700)
                                          10872  #-----------------------------------------------------------------------
                                          10873  #
                                          10874  # NOTE implementation: vAC = ROM:[NotesTable + vAC.lo*2], 22 + 30 cycles
                                          10875  label('note#13')
note#13:      2700 c21d  st   [$1d]       10876  st([vTmp])                      #13 low byte of low note return address
              2701 00f8  ld   $f8         10877  ld(min(0,maxTicks-46/2))        #14
              2702 8115  adda [$15]       10878  adda([vTicks])                  #15
              2703 e814  blt  .note#18    10879  blt('.note#18')                 #16 not enough time left, so retry
              2704 1409  ld   $09,y       10880  ld(hi('noteTrampoline'),Y)      #17
              2705 0118  ld   [$18]       10881  ld([vAC])                       #18 vAC.lo = note index
              2706 8200  adda ac          10882  adda(AC)                        #19 vAC.lo*2, (low note byte)
              2707 e0c0  jmp  y,$c0       10883  jmp(Y,'noteTrampoline')         #20
              2708 c219  st   [$19]       10884  st([vAC+1])                     #21 vAC.hi = vAC.lo*2
                                          10885  label('.note#28')
.note#28:     2709 c218  st   [$18]       10886  st([vAC])                       #28 vAC.lo = note.lo
              270a 0010  ld   $10         10887  ld('.note#41')                  #29
              270b c21d  st   [$1d]       10888  st([vTmp])                      #30 low byte of high note return address
              270c 1409  ld   $09,y       10889  ld(hi('noteTrampoline'),Y)      #31
              270d 0119  ld   [$19]       10890  ld([vAC+1])                     #32
              270e e0c0  jmp  y,$c0       10891  jmp(Y,'noteTrampoline')         #33
              270f 8001  adda $01         10892  adda(1)                         #34 vAC.lo*2 + 1, (high note byte)
                                          10893  label('.note#41')
.note#41:     2710 c219  st   [$19]       10894  st([vAC+1])                     #41
              2711 1403  ld   $03,y       10895  ld(hi('NEXTY'),Y)               #42
              2712 e000  jmp  y,$00       10896  jmp(Y,'NEXTY')                  #43
              2713 00e9  ld   $e9         10897  ld(-46/2)                       #44
                                          10898  label('.note#18')
.note#18:     2714 0023  ld   $23         10899  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2715 c202  st   [$02]       10900  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2716 9401  adda $01,y       10901  adda(1,Y)                       #20 retry instruction
              2717 e000  jmp  y,$00       10902  jmp(Y,'NEXTY')                  #21
              2718 00f4  ld   $f4         10903  ld(-24/2)                       #22
                                          10904
                                          10905  # MIDI implementation: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 22 + 30 cycles
                                          10906  label('midi#13')
midi#13:      2719 c21d  st   [$1d]       10907  st([vTmp])                      #13 low byte of low midi return address
              271a 00f7  ld   $f7         10908  ld(min(0,maxTicks-48/2))        #14
              271b 8115  adda [$15]       10909  adda([vTicks])                  #15
              271c e82e  blt  .midi#18    10910  blt('.midi#18')                 #16 not enough time left, so retry
              271d 1409  ld   $09,y       10911  ld(hi('noteTrampoline'),Y)      #17
              271e 0118  ld   [$18]       10912  ld([vAC])                       #18 vAC.lo = midi index
              271f a00b  suba $0b         10913  suba(11)                        #19 vAC.lo -= 11
              2720 8200  adda ac          10914  adda(AC)                        #20 vAC.lo*2, (low midi byte)
              2721 e0c0  jmp  y,$c0       10915  jmp(Y,'noteTrampoline')         #21
              2722 c219  st   [$19]       10916  st([vAC+1])                     #22 vAC.hi = vAC.lo*2
                                          10917  label('.midi#29')
.midi#29:     2723 c218  st   [$18]       10918  st([vAC])                       #29 vAC.lo = midi.lo
              2724 002a  ld   $2a         10919  ld('.midi#42')                  #30
              2725 c21d  st   [$1d]       10920  st([vTmp])                      #31 low byte of high midi return address
              2726 1409  ld   $09,y       10921  ld(hi('noteTrampoline'),Y)      #32
              2727 0119  ld   [$19]       10922  ld([vAC+1])                     #33
              2728 e0c0  jmp  y,$c0       10923  jmp(Y,'noteTrampoline')         #34
              2729 8001  adda $01         10924  adda(1)                         #35 vAC.lo*2 + 1, (high midi byte)
                                          10925  label('.midi#42')
.midi#42:     272a c219  st   [$19]       10926  st([vAC+1])                     #42
              272b 1403  ld   $03,y       10927  ld(hi('REENTER'),Y)             #43
              272c e0cb  jmp  y,$cb       10928  jmp(Y,'REENTER')                #44
              272d 00e8  ld   $e8         10929  ld(-48/2)                       #45
                                          10930  label('.midi#18')
.midi#18:     272e 0023  ld   $23         10931  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              272f c202  st   [$02]       10932  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2730 9401  adda $01,y       10933  adda(1,Y)                       #20 retry instruction
              2731 e000  jmp  y,$00       10934  jmp(Y,'NEXTY')                  #21
              2732 00f4  ld   $f4         10935  ld(-24/2)                       #22
                                          10936
                                          10937  # XLA, implementation, (lb3361)
                                          10938  label('xla#13')
xla#13:       2733 c21d  st   [$1d]       10939  st([vTmp])                      #13
              2734 011a  ld   [$1a]       10940  ld([vLR])                       #14
              2735 c218  st   [$18]       10941  st([vAC])                       #15
              2736 011d  ld   [$1d]       10942  ld([vTmp])                      #16
              2737 c21a  st   [$1a]       10943  st([vLR])                       #17
              2738 0119  ld   [$19]       10944  ld([vAC+1])                     #18
              2739 c21d  st   [$1d]       10945  st([vTmp])                      #19
              273a 011b  ld   [$1b]       10946  ld([vLR+1])                     #20
              273b c219  st   [$19]       10947  st([vAC+1])                     #21
              273c 011d  ld   [$1d]       10948  ld([vTmp])                      #22
              273d c21b  st   [$1b]       10949  st([vLR+1])                     #23
              273e 1403  ld   $03,y       10950  ld(hi('NEXTY'),Y)               #24
              273f e000  jmp  y,$00       10951  jmp(Y,'NEXTY')                  #25
              2740 00f2  ld   $f2         10952  ld(-28/2)                       #26
                                          10953
                                          10954  # JMPI implementation, (lb3361)
                                          10955  label('jmpi#13')
jmpi#13:      2741 de00  st   [y,x++]     10956  st([Y,Xpp])                     #13 Just X++
              2742 a002  suba $02         10957  suba(2)                         #14
              2743 c216  st   [$16]       10958  st([vPC])                       #15
              2744 0d00  ld   [y,x]       10959  ld([Y,X])                       #16
              2745 c217  st   [$17]       10960  st([vPC+1])                     #17
              2746 1403  ld   $03,y       10961  ld(hi('NEXTY'),Y)               #18
              2747 e000  jmp  y,$00       10962  jmp(Y,'NEXTY')                  #19
              2748 00f5  ld   $f5         10963  ld(-22//2)                      #20
                                          10964
                                          10965
              2749 0200  nop              10966  fillers(until=0xff)
              274a 0200  nop
              274b 0200  nop
              * 182 times
              27ff 0200  nop              10967  align(0x100, size=0x100)
                                          10968
                                          10969  #-----------------------------------------------------------------------
                                          10970  #       More vCPU instruction implementations, (0x2800)
                                          10971  #-----------------------------------------------------------------------
                                          10972  #
                                          10973  # ADDVI implementation
                                          10974  label('addvi#13')
addvi#13:     2800 1517  ld   [$17],y     10975  ld([vPC+1],Y)                   #13 vPC.hi
              2801 c22a  st   [$2a]       10976  st([sysArgs+6])                 #14 immediate 8bit
              2802 de00  st   [y,x++]     10977  st([Y,Xpp])                     #15 X++
              2803 00f6  ld   $f6         10978  ld(min(0,maxTicks-50/2))        #16
              2804 8115  adda [$15]       10979  adda([vTicks])                  #17
              2805 e833  blt  .addvi#20   10980  blt('.addvi#20')                #18 not enough time left, so retry
              2806 0d00  ld   [y,x]       10981  ld([Y,X])                       #19
              2807 d22b  st   [$2b],x     10982  st([sysArgs+7],X)               #20 dst var addr
              2808 1400  ld   $00,y       10983  ld(0,Y)                         #21
              2809 0500  ld   [x]         10984  ld([X])                         #22 dst low value
              280a c218  st   [$18]       10985  st([vAC])                       #23
              280b de00  st   [y,x++]     10986  st([Y,Xpp])                     #24 X++
              280c 0500  ld   [x]         10987  ld([X])                         #25 dst hi value
              280d c219  st   [$19]       10988  st([vAC+1])                     #26
              280e 012a  ld   [$2a]       10989  ld([sysArgs+6])                 #27
              280f 8118  adda [$18]       10990  adda([vAC])                     #28
              2810 c218  st   [$18]       10991  st([vAC])                       #29 Store low result
              2811 e823  blt  .addvi#32   10992  bmi('.addvi#32')                #30 Now figure out if there was a carry
              2812 a12a  suba [$2a]       10993  suba([sysArgs+6])               #31 Gets back the initial value of vAC
              2813 412a  ora  [$2a]       10994  ora([sysArgs+6])                #32 Carry in bit 7
              2814 3080  anda $80,x       10995  anda(0x80,X)                    #33 Move carry to bit 0
              2815 0500  ld   [x]         10996  ld([X])                         #34
              2816 8119  adda [$19]       10997  adda([vAC+1])                   #35 Add the high bytes with carry
              2817 c219  st   [$19]       10998  st([vAC+1])                     #36 Store high result
              2818 112b  ld   [$2b],x     10999  ld([sysArgs+7],X)               #37
              2819 0118  ld   [$18]       11000  ld([vAC])                       #38
              281a de00  st   [y,x++]     11001  st([Y,Xpp])                     #39
              281b 0119  ld   [$19]       11002  ld([vAC+1])                     #40
              281c c600  st   [x]         11003  st([X])                         #41
              281d 0116  ld   [$16]       11004  ld([vPC])                       #42
              281e 8001  adda $01         11005  adda(1)                         #43
              281f c216  st   [$16]       11006  st([vPC])                       #44
              2820 1403  ld   $03,y       11007  ld(hi('REENTER'),Y)             #45
              2821 e0cb  jmp  y,$cb       11008  jmp(Y,'REENTER')                #46
              2822 00e7  ld   $e7         11009  ld(-50/2)                       #47
                                          11010
                                          11011  label('.addvi#32')
.addvi#32:    2823 212a  anda [$2a]       11012  anda([sysArgs+6])               #32 Carry in bit 7
              2824 3080  anda $80,x       11013  anda(0x80,X)                    #33 Move carry to bit 0
              2825 0500  ld   [x]         11014  ld([X])                         #34
              2826 8119  adda [$19]       11015  adda([vAC+1])                   #35 Add the high bytes with carry
              2827 c219  st   [$19]       11016  st([vAC+1])                     #36 Store high result
              2828 112b  ld   [$2b],x     11017  ld([sysArgs+7],X)               #37
              2829 0118  ld   [$18]       11018  ld([vAC])                       #38
              282a de00  st   [y,x++]     11019  st([Y,Xpp])                     #39
              282b 0119  ld   [$19]       11020  ld([vAC+1])                     #40
              282c c600  st   [x]         11021  st([X])                         #41
              282d 0116  ld   [$16]       11022  ld([vPC])                       #42
              282e 8001  adda $01         11023  adda(1)                         #43
              282f c216  st   [$16]       11024  st([vPC])                       #44
              2830 1403  ld   $03,y       11025  ld(hi('REENTER'),Y)             #45
              2831 e0cb  jmp  y,$cb       11026  jmp(Y,'REENTER')                #46
              2832 00e7  ld   $e7         11027  ld(-50/2)                       #47
                                          11028
                                          11029  label('.addvi#20')
.addvi#20:    2833 0116  ld   [$16]       11030  ld([vPC])                       #20 retry instruction
              2834 a002  suba $02         11031  suba(2)                         #21
              2835 c216  st   [$16]       11032  st([vPC])                       #22
              2836 1403  ld   $03,y       11033  ld(hi('REENTER'),Y)             #23
              2837 e0cb  jmp  y,$cb       11034  jmp(Y,'REENTER')                #24
              2838 00f2  ld   $f2         11035  ld(-28/2)                       #25
                                          11036
                                          11037
                                          11038  # SUBVI implementation
                                          11039  label('subvi#13')
subvi#13:     2839 1517  ld   [$17],y     11040  ld([vPC+1],Y)                   #13 vPC.hi
              283a c22a  st   [$2a]       11041  st([sysArgs+6])                 #14 immediate 8bit
              283b de00  st   [y,x++]     11042  st([Y,Xpp])                     #15 X++
              283c 00f6  ld   $f6         11043  ld(min(0,maxTicks-50/2))        #16
              283d 8115  adda [$15]       11044  adda([vTicks])                  #17
              283e e86d  blt  .subvi#20   11045  blt('.subvi#20')                #18 not enough time left, so retry
              283f 0d00  ld   [y,x]       11046  ld([Y,X])                       #19
              2840 d22b  st   [$2b],x     11047  st([sysArgs+7],X)               #20 dst var addr
              2841 1400  ld   $00,y       11048  ld(0,Y)                         #21
              2842 0500  ld   [x]         11049  ld([X])                         #22 dst low value
              2843 c218  st   [$18]       11050  st([vAC])                       #23
              2844 de00  st   [y,x++]     11051  st([Y,Xpp])                     #24 X++
              2845 0500  ld   [x]         11052  ld([X])                         #25 dst hi value
              2846 c219  st   [$19]       11053  st([vAC+1])                     #26
              2847 112b  ld   [$2b],x     11054  ld([sysArgs+7],X)               #27 dst var addr
              2848 0500  ld   [x]         11055  ld([X])                         #28
              2849 e85c  blt  .subvi#31   11056  bmi('.subvi#31')                #29
              284a a12a  suba [$2a]       11057  suba([sysArgs+6])               #30
              284b c218  st   [$18]       11058  st([vAC])                       #31 store low result
              284c 412a  ora  [$2a]       11059  ora([sysArgs+6])                #32 carry in bit 7
              284d 3080  anda $80,x       11060  anda(0x80,X)                    #33 move carry to bit 0
              284e 0119  ld   [$19]       11061  ld([vAC+1])                     #34
              284f a500  suba [x]         11062  suba([X])                       #35
              2850 c219  st   [$19]       11063  st([vAC+1])                     #36 store high result
              2851 112b  ld   [$2b],x     11064  ld([sysArgs+7],X)               #37
              2852 0118  ld   [$18]       11065  ld([vAC])                       #38
              2853 de00  st   [y,x++]     11066  st([Y,Xpp])                     #39
              2854 0119  ld   [$19]       11067  ld([vAC+1])                     #40
              2855 c600  st   [x]         11068  st([X])                         #41
              2856 0116  ld   [$16]       11069  ld([vPC])                       #42
              2857 8001  adda $01         11070  adda(1)                         #43
              2858 c216  st   [$16]       11071  st([vPC])                       #44
              2859 1403  ld   $03,y       11072  ld(hi('REENTER'),Y)             #45
              285a e0cb  jmp  y,$cb       11073  jmp(Y,'REENTER')                #46
              285b 00e7  ld   $e7         11074  ld(-50/2)                       #47
                                          11075
                                          11076  label('.subvi#31')
.subvi#31:    285c c218  st   [$18]       11077  st([vAC])                       #31 store low result
              285d 212a  anda [$2a]       11078  anda([sysArgs+6])               #32 carry in bit 7
              285e 3080  anda $80,x       11079  anda(0x80,X)                    #33 move carry to bit 0
              285f 0119  ld   [$19]       11080  ld([vAC+1])                     #34
              2860 a500  suba [x]         11081  suba([X])                       #35
              2861 c219  st   [$19]       11082  st([vAC+1])                     #36 store high result
              2862 112b  ld   [$2b],x     11083  ld([sysArgs+7],X)               #37
              2863 0118  ld   [$18]       11084  ld([vAC])                       #38
              2864 de00  st   [y,x++]     11085  st([Y,Xpp])                     #39
              2865 0119  ld   [$19]       11086  ld([vAC+1])                     #40
              2866 c600  st   [x]         11087  st([X])                         #41
              2867 0116  ld   [$16]       11088  ld([vPC])                       #42
              2868 8001  adda $01         11089  adda(1)                         #43
              2869 c216  st   [$16]       11090  st([vPC])                       #44
              286a 1403  ld   $03,y       11091  ld(hi('REENTER'),Y)             #45
              286b e0cb  jmp  y,$cb       11092  jmp(Y,'REENTER')                #46
              286c 00e7  ld   $e7         11093  ld(-50/2)                       #47
                                          11094
                                          11095  label('.subvi#20')
.subvi#20:    286d 0116  ld   [$16]       11096  ld([vPC])                       #20 retry instruction
              286e a002  suba $02         11097  suba(2)                         #21
              286f c216  st   [$16]       11098  st([vPC])                       #22
              2870 1403  ld   $03,y       11099  ld(hi('REENTER'),Y)             #23
              2871 e0cb  jmp  y,$cb       11100  jmp(Y,'REENTER')                #24
              2872 00f2  ld   $f2         11101  ld(-28/2)                       #25
                                          11102
                                          11103
                                          11104  # OSCPX implementation
                                          11105  label('oscpx#13')
oscpx#13:     2873 d22a  st   [$2a],x     11106  st([sysArgs+6],X)               #13 sample address var
              2874 00fa  ld   $fa         11107  ld(min(0,maxTicks-42/2))        #14
              2875 8115  adda [$15]       11108  adda([vTicks])                  #15
              2876 e88f  blt  .oscpx#18   11109  blt('.oscpx#18')                #16 not enough time left, so retry
              2877 0500  ld   [x]         11110  ld([X])                         #17 sample address low byte
              2878 112b  ld   [$2b],x     11111  ld([sysArgs+7],X)               #18 index var
              2879 8500  adda [x]         11112  adda([X])                       #19 sample address low byte + index
              287a c21d  st   [$1d]       11113  st([vTmp])                      #20
              287b 012a  ld   [$2a]       11114  ld([sysArgs+6])                 #21
              287c 9001  adda $01,x       11115  adda(1,X)                       #22
              287d 0500  ld   [x]         11116  ld([X])                         #23
              287e 1600  ld   ac,y        11117  ld(AC,Y)                        #24 sample address high byte
              287f 111d  ld   [$1d],x     11118  ld([vTmp],X)                    #25
              2880 0d00  ld   [y,x]       11119  ld([Y,X])                       #26
              2881 20fc  anda $fc         11120  anda(0xFC)                      #27 6bit sample in upper 8bits
              2882 1407  ld   $07,y       11121  ld(soundTable>>8,Y)             #28
              2883 5003  ora  $03,x       11122  ora(0x03,X)                     #29
              2884 0d00  ld   [y,x]       11123  ld([Y,X])                       #30 6bit sample, (>>2)
              2885 9519  adda [$19],y     11124  adda([vAC+1],Y)                 #31 dest pixel address high byte
              2886 0118  ld   [$18]       11125  ld([vAC])                       #32 dest pixel address low byte
              2887 112b  ld   [$2b],x     11126  ld([sysArgs+7],X)               #33 index
              2888 8500  adda [x]         11127  adda([X])                       #34 sample address low byte + index
              2889 1200  ld   ac,x        11128  ld(AC,X)                        #35
              288a 01a3  ld   [$a3]       11129  ld([0xA3])                      #36 pixel colour
              288b ce00  st   [y,x]       11130  st([Y,X])                       #37
              288c 1403  ld   $03,y       11131  ld(hi('NEXTY'),Y)               #38
              288d e000  jmp  y,$00       11132  jmp(Y,'NEXTY')                  #39
              288e 00eb  ld   $eb         11133  ld(-42/2)                       #40
                                          11134
                                          11135  label('.oscpx#18')
.oscpx#18:    288f 0021  ld   $21         11136  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2890 c202  st   [$02]       11137  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2891 9401  adda $01,y       11138  adda(1,Y)                       #20 retry instruction
              2892 e000  jmp  y,$00       11139  jmp(Y,'NEXTY')                  #21
              2893 00f4  ld   $f4         11140  ld(-24/2)                       #22
                                          11141
                                          11142
                                          11143  # CMPWS implementation, vAC = vAC CMPWS var
                                          11144  #           LDW   var0
                                          11145  #           CMPHS var1.hi
                                          11146  #           SUBW  var1
                                          11147  label('cmpws#13')
cmpws#13:     2894 00e9  ld   $e9         11148  ld(-46/2)                       #13
              2895 c21d  st   [$1d]       11149  st([vTmp])                      #14
              2896 00f8  ld   $f8         11150  ld(min(0,maxTicks-46/2))        #15
              2897 8115  adda [$15]       11151  adda([vTicks])                  #16
              2898 e8c2  blt  .cmpws#19   11152  blt('.cmpws#19')                #17 not enough time left, so retry
              2899 1400  ld   $00,y       11153  ld(0,Y)                         #18
              289a 0500  ld   [x]         11154  ld([X])                         #19
              289b de00  st   [y,x++]     11155  st([Y,Xpp])                     #20
              289c c2b0  st   [$b0]       11156  st([0xB0])                      #21 cmp var.lo
              289d 0500  ld   [x]         11157  ld([X])                         #22
              289e c2b1  st   [$b1]       11158  st([0xB1])                      #23 cmp var.hi
              289f 6119  xora [$19]       11159  xora([vAC+1])                   #24
              28a0 f4b5  bge  .cmpws#27   11160  bpl('.cmpws#27')                #25 skip if same sign
              28a1 0119  ld   [$19]       11161  ld([vAC+1])                     #26
              28a2 e8a5  blt  $28a5       11162  bmi(pc()+3)                     #27
              28a3 fca6  bra  .cmpws#30   11163  bra(pc()+3)                     #28
                                          11164
                                          11165  label('.cmpws#29')
.cmpws#29:    28a4 0001  ld   $01         11166  ld(+1)                          #29    vAC < variable
              28a5 00ff  ld   $ff         11167  ld(-1)                          #29(!) vAC > variable
                                          11168
                                          11169  label('.cmpws#30')
.cmpws#30:    28a6 8500  adda [x]         11170  adda([X])                       #30
              28a7 c219  st   [$19]       11171  st([vAC+1])                     #31
                                          11172
                                          11173  label('.cmpws#32')
.cmpws#32:    28a8 0118  ld   [$18]       11174  ld([vAC])                       #32, #30 Low byte
              28a9 e8b8  blt  .cmpws#35   11175  bmi('.cmpws#35')                #33, #31
              28aa a1b0  suba [$b0]       11176  suba([0xB0])                    #34, #32
              28ab c218  st   [$18]       11177  st([vAC])                       #35, #33 Store low result
              28ac 41b0  ora  [$b0]       11178  ora([0xB0])                     #36, #34 Carry in bit 7
              28ad 3080  anda $80,x       11179  anda(0x80,X)                    #37, #35 Move carry to bit 0
              28ae 0119  ld   [$19]       11180  ld([vAC+1])                     #38, #36
              28af a500  suba [x]         11181  suba([X])                       #39, #37
              28b0 a1b1  suba [$b1]       11182  suba([0xB1])                    #40, #38 sub var.hi with carry
              28b1 c219  st   [$19]       11183  st([vAC+1])                     #41, #39
              28b2 1403  ld   $03,y       11184  ld(hi('NEXTY'),Y)               #42, #40
              28b3 e000  jmp  y,$00       11185  jmp(Y,'NEXTY')                  #43, #41
              28b4 011d  ld   [$1d]       11186  ld([vTmp])                      #44, #42
                                          11187
                                          11188  label('.cmpws#27')
.cmpws#27:    28b5 00ea  ld   $ea         11189  ld(-44/2)                       #27
              28b6 fca8  bra  .cmpws#32   11190  bra('.cmpws#32')                #28
              28b7 c21d  st   [$1d]       11191  st([vTmp])                      #29
                                          11192
                                          11193  label('.cmpws#35')
.cmpws#35:    28b8 c218  st   [$18]       11194  st([vAC])                       #35, #33 Store low result
              28b9 21b0  anda [$b0]       11195  anda([0xB0])                    #36, #34 Carry in bit 7
              28ba 3080  anda $80,x       11196  anda(0x80,X)                    #37, #35 Move carry to bit 0
              28bb 0119  ld   [$19]       11197  ld([vAC+1])                     #38, #36
              28bc a500  suba [x]         11198  suba([X])                       #39, #37
              28bd a1b1  suba [$b1]       11199  suba([0xB1])                    #40, #38 sub var.hi with carry
              28be c219  st   [$19]       11200  st([vAC+1])                     #41, #39
              28bf 1403  ld   $03,y       11201  ld(hi('NEXTY'),Y)               #42, #40
              28c0 e000  jmp  y,$00       11202  jmp(Y,'NEXTY')                  #43, #41
              28c1 011d  ld   [$1d]       11203  ld([vTmp])                      #44, #42
                                          11204
                                          11205  label('.cmpws#19')
.cmpws#19:    28c2 0022  ld   $22         11206  ld(hi('PREFX2_PAGE'))           #19 ENTER is at $(n-1)ff, where n = instruction page
              28c3 c202  st   [$02]       11207  st([vCpuSelect])                #20 restore PREFX2 instruction page
              28c4 9401  adda $01,y       11208  adda(1,Y)                       #21 retry instruction
              28c5 e0cb  jmp  y,$cb       11209  jmp(Y,'REENTER')                #22
              28c6 00f3  ld   $f3         11210  ld(-26/2)                       #23
                                          11211
                                          11212
                                          11213  # CMPWU implementation, vAC = vAC CMPWU var
                                          11214  #           LDW   var0
                                          11215  #           CMPHU var1.hi
                                          11216  #           SUBW  var1
                                          11217  label('cmpwu#13')
cmpwu#13:     28c7 00e9  ld   $e9         11218  ld(-46/2)                       #13
              28c8 c21d  st   [$1d]       11219  st([vTmp])                      #14
              28c9 00f8  ld   $f8         11220  ld(min(0,maxTicks-46/2))        #15
              28ca 8115  adda [$15]       11221  adda([vTicks])                  #16
              28cb e8c2  blt  .cmpws#19   11222  blt('.cmpws#19')                #17 not enough time left, so retry, (use .cmpws#19)
              28cc 1400  ld   $00,y       11223  ld(0,Y)                         #18
              28cd 0500  ld   [x]         11224  ld([X])                         #19
              28ce de00  st   [y,x++]     11225  st([Y,Xpp])                     #20
              28cf c2b0  st   [$b0]       11226  st([0xB0])                      #21 cmp var.lo
              28d0 0500  ld   [x]         11227  ld([X])                         #22
              28d1 c2b1  st   [$b1]       11228  st([0xB1])                      #23 cmp var.hi
              28d2 6119  xora [$19]       11229  xora([vAC+1])                   #24
              28d3 f4b5  bge  .cmpws#27   11230  bpl('.cmpws#27')                #25 skip if same sign, (use .cmpws#27)
              28d4 0119  ld   [$19]       11231  ld([vAC+1])                     #26
              28d5 e8a4  blt  .cmpws#29   11232  bmi('.cmpws#29')                #27 use .cmpws#29
              28d6 fca6  bra  .cmpws#30   11233  bra('.cmpws#30')                #28 use .cmpws#30
              28d7 00ff  ld   $ff         11234  ld(-1)                          #29 vAC > variable
                                          11235
                                          11236
              28d8 0200  nop              11237  fillers(until=0xff)
              28d9 0200  nop
              28da 0200  nop
              * 39 times
              28ff 0200  nop              11238  align(0x100, size=0x100)
                                          11239
                                          11240  #-----------------------------------------------------------------------
                                          11241  #       More vCPU instruction implementations, (0x2900)
                                          11242  #-----------------------------------------------------------------------
                                          11243  #
                                          11244  # LEEKA implementation
                                          11245  label('leeka#13')
leeka#13:     2900 c21d  st   [$1d]       11246  st([vTmp])                      #13
              2901 00f9  ld   $f9         11247  ld(min(0,maxTicks-44/2))        #14
              2902 8115  adda [$15]       11248  adda([vTicks])                  #15
              2903 e81e  blt  .leeka#18   11249  blt('.leeka#18')                #16 not enough time left, so retry
              2904 1519  ld   [$19],y     11250  ld([vAC+1],Y)                   #17
              2905 1118  ld   [$18],x     11251  ld([vAC],X)                     #18
              2906 0d00  ld   [y,x]       11252  ld([Y,X])                       #19 peek [vAC]
              2907 de00  st   [y,x++]     11253  st([Y,Xpp])                     #20
              2908 c2b0  st   [$b0]       11254  st([0xB0])                      #21
              2909 0d00  ld   [y,x]       11255  ld([Y,X])                       #22 peek [vAC+1]
              290a de00  st   [y,x++]     11256  st([Y,Xpp])                     #23
              290b c2b1  st   [$b1]       11257  st([0xB1])                      #24
              290c 0d00  ld   [y,x]       11258  ld([Y,X])                       #25 peek [vAC+2]
              290d de00  st   [y,x++]     11259  st([Y,Xpp])                     #26
              290e c2b2  st   [$b2]       11260  st([0xB2])                      #27
              290f 0d00  ld   [y,x]       11261  ld([Y,X])                       #28 peek [vAC+3]
              2910 c2b3  st   [$b3]       11262  st([0xB3])                      #29
              2911 1400  ld   $00,y       11263  ld(0,Y)                         #30
              2912 111d  ld   [$1d],x     11264  ld([vTmp],X)                    #31 dst var
              2913 01b0  ld   [$b0]       11265  ld([0xB0])                      #32
              2914 de00  st   [y,x++]     11266  st([Y,Xpp])                     #33 [var.0] = peek [vAC]
              2915 01b1  ld   [$b1]       11267  ld([0xB1])                      #34
              2916 de00  st   [y,x++]     11268  st([Y,Xpp])                     #35 [var.1] = peek [vAC+1]
              2917 01b2  ld   [$b2]       11269  ld([0xB2])                      #36
              2918 de00  st   [y,x++]     11270  st([Y,Xpp])                     #37 [var.2] = peek [vAC+2]
              2919 01b3  ld   [$b3]       11271  ld([0xB3])                      #38
              291a ce00  st   [y,x]       11272  st([Y,X])                       #39 [var.3] = peek [vAC+3]
              291b 1403  ld   $03,y       11273  ld(hi('NEXTY'),Y)               #40
              291c e000  jmp  y,$00       11274  jmp(Y,'NEXTY')                  #41
              291d 00ea  ld   $ea         11275  ld(-44/2)                       #42
                                          11276
                                          11277  label('.leeka#18')
.leeka#18:    291e 0022  ld   $22         11278  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              291f c202  st   [$02]       11279  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2920 9401  adda $01,y       11280  adda(1,Y)                       #20 retry instruction
              2921 e000  jmp  y,$00       11281  jmp(Y,'NEXTY')                  #21
              2922 00f4  ld   $f4         11282  ld(-24/2)                       #22
                                          11283
                                          11284
                                          11285  # LOKEA implementation
                                          11286  label('lokea#13')
lokea#13:     2923 1200  ld   ac,x        11287  ld(AC,X)                        #13
              2924 00f9  ld   $f9         11288  ld(min(0,maxTicks-44/2))        #14
              2925 8115  adda [$15]       11289  adda([vTicks])                  #15
              2926 e840  blt  .lokea#18   11290  blt('.lokea#18')                #16 not enough time left, so retry
              2927 1400  ld   $00,y       11291  ld(0,Y)                         #17
              2928 0500  ld   [x]         11292  ld([X])                         #18 var.0
              2929 de00  st   [y,x++]     11293  st([Y,Xpp])                     #19
              292a c2b0  st   [$b0]       11294  st([0xB0])                      #20
              292b 0500  ld   [x]         11295  ld([X])                         #21 var.1
              292c de00  st   [y,x++]     11296  st([Y,Xpp])                     #22
              292d c2b1  st   [$b1]       11297  st([0xB1])                      #23
              292e 0500  ld   [x]         11298  ld([X])                         #24 var.2
              292f de00  st   [y,x++]     11299  st([Y,Xpp])                     #25
              2930 c2b2  st   [$b2]       11300  st([0xB2])                      #26
              2931 0500  ld   [x]         11301  ld([X])                         #27 var.3
              2932 c2b3  st   [$b3]       11302  st([0xB3])                      #28
              2933 1118  ld   [$18],x     11303  ld([vAC],X)                     #29
              2934 1519  ld   [$19],y     11304  ld([vAC+1],Y)                   #30
              2935 01b0  ld   [$b0]       11305  ld([0xB0])                      #31
              2936 de00  st   [y,x++]     11306  st([Y,Xpp])                     #32 poke [vAC], var.0
              2937 01b1  ld   [$b1]       11307  ld([0xB1])                      #33
              2938 de00  st   [y,x++]     11308  st([Y,Xpp])                     #34 poke [vAC], var.1
              2939 01b2  ld   [$b2]       11309  ld([0xB2])                      #35
              293a de00  st   [y,x++]     11310  st([Y,Xpp])                     #36 poke [vAC], var.2
              293b 01b3  ld   [$b3]       11311  ld([0xB3])                      #37
              293c ce00  st   [y,x]       11312  st([Y,X])                       #38 poke [vAC], var.3
              293d 1403  ld   $03,y       11313  ld(hi('REENTER'),Y)             #39
              293e e0cb  jmp  y,$cb       11314  jmp(Y,'REENTER')                #40
              293f 00ea  ld   $ea         11315  ld(-44/2)                       #41
                                          11316
                                          11317  label('.lokea#18')
.lokea#18:    2940 0022  ld   $22         11318  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2941 c202  st   [$02]       11319  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2942 9401  adda $01,y       11320  adda(1,Y)                       #20 retry instruction
              2943 e000  jmp  y,$00       11321  jmp(Y,'NEXTY')                  #21
              2944 00f4  ld   $f4         11322  ld(-24/2)                       #22
                                          11323
                                          11324
                                          11325  # FEEKA implementation
                                          11326  label('feeka#13')
feeka#13:     2945 1519  ld   [$19],y     11327  ld([vAC+1],Y)                   #13
              2946 00f7  ld   $f7         11328  ld(min(0,maxTicks-48/2))        #14
              2947 8115  adda [$15]       11329  adda([vTicks])                  #15
              2948 e867  blt  .feeka#18   11330  blt('.feeka#18')                #16 not enough time left, so retry
              2949 1118  ld   [$18],x     11331  ld([vAC],X)                     #17
              294a 0d00  ld   [y,x]       11332  ld([Y,X])                       #18 peek [vAC]
              294b de00  st   [y,x++]     11333  st([Y,Xpp])                     #19
              294c c2b0  st   [$b0]       11334  st([0xB0])                      #20
              294d 0d00  ld   [y,x]       11335  ld([Y,X])                       #21 peek [vAC+1]
              294e de00  st   [y,x++]     11336  st([Y,Xpp])                     #22
              294f c2b1  st   [$b1]       11337  st([0xB1])                      #23
              2950 0d00  ld   [y,x]       11338  ld([Y,X])                       #24 peek [vAC+2]
              2951 de00  st   [y,x++]     11339  st([Y,Xpp])                     #25
              2952 c2b2  st   [$b2]       11340  st([0xB2])                      #26
              2953 0d00  ld   [y,x]       11341  ld([Y,X])                       #27 peek [vAC+3]
              2954 de00  st   [y,x++]     11342  st([Y,Xpp])                     #28
              2955 c2b3  st   [$b3]       11343  st([0xB3])                      #29
              2956 0d00  ld   [y,x]       11344  ld([Y,X])                       #30 peek [vAC+4]
              2957 c2b4  st   [$b4]       11345  st([0xB4])                      #31
              2958 1400  ld   $00,y       11346  ld(0,Y)                         #32
              2959 111d  ld   [$1d],x     11347  ld([vTmp],X)                    #33 dst var
              295a 01b0  ld   [$b0]       11348  ld([0xB0])                      #34
              295b de00  st   [y,x++]     11349  st([Y,Xpp])                     #35 [var.0] = peek [vAC]
              295c 01b1  ld   [$b1]       11350  ld([0xB1])                      #36
              295d de00  st   [y,x++]     11351  st([Y,Xpp])                     #37 [var.1] = peek [vAC+1]
              295e 01b2  ld   [$b2]       11352  ld([0xB2])                      #38
              295f de00  st   [y,x++]     11353  st([Y,Xpp])                     #39 [var.2] = peek [vAC+2]
              2960 01b3  ld   [$b3]       11354  ld([0xB3])                      #40
              2961 ce00  st   [y,x]       11355  st([Y,X])                       #41 [var.3] = peek [vAC+3]
              2962 01b4  ld   [$b4]       11356  ld([0xB4])                      #42
              2963 ce00  st   [y,x]       11357  st([Y,X])                       #43 [var.4] = peek [vAC+4]
              2964 1403  ld   $03,y       11358  ld(hi('NEXTY'),Y)               #44
              2965 e000  jmp  y,$00       11359  jmp(Y,'NEXTY')                  #45
              2966 00e8  ld   $e8         11360  ld(-48/2)                       #46
                                          11361
                                          11362  label('.feeka#18')
.feeka#18:    2967 0022  ld   $22         11363  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2968 c202  st   [$02]       11364  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2969 9401  adda $01,y       11365  adda(1,Y)                       #20 retry instruction
              296a e000  jmp  y,$00       11366  jmp(Y,'NEXTY')                  #21
              296b 00f4  ld   $f4         11367  ld(-24/2)                       #22
                                          11368
                                          11369
                                          11370  # FOKEA implementation
                                          11371  label('fokea#13')
fokea#13:     296c 1200  ld   ac,x        11372  ld(AC,X)                        #13 var.0
              296d 00f7  ld   $f7         11373  ld(min(0,maxTicks-48/2))        #14
              296e 8115  adda [$15]       11374  adda([vTicks])                  #15
              296f e88e  blt  .fokea#18   11375  blt('.fokea#18')                #16 not enough time left, so retry
              2970 1400  ld   $00,y       11376  ld(0,Y)                         #17
              2971 0500  ld   [x]         11377  ld([X])                         #18 [var.0]
              2972 de00  st   [y,x++]     11378  st([Y,Xpp])                     #19
              2973 c2b0  st   [$b0]       11379  st([0xB0])                      #20
              2974 0500  ld   [x]         11380  ld([X])                         #21 [var.1]
              2975 de00  st   [y,x++]     11381  st([Y,Xpp])                     #22
              2976 c2b1  st   [$b1]       11382  st([0xB1])                      #23
              2977 0500  ld   [x]         11383  ld([X])                         #24 [var.2]
              2978 de00  st   [y,x++]     11384  st([Y,Xpp])                     #25
              2979 c2b2  st   [$b2]       11385  st([0xB2])                      #26
              297a 0500  ld   [x]         11386  ld([X])                         #27 [var.3]
              297b de00  st   [y,x++]     11387  st([Y,Xpp])                     #28
              297c c2b3  st   [$b3]       11388  st([0xB3])                      #29
              297d 0500  ld   [x]         11389  ld([X])                         #30 [var.4]
              297e c2b4  st   [$b4]       11390  st([0xB4])                      #31
              297f 1118  ld   [$18],x     11391  ld([vAC],X)                     #32
              2980 1519  ld   [$19],y     11392  ld([vAC+1],Y)                   #33
              2981 01b0  ld   [$b0]       11393  ld([0xB0])                      #34
              2982 de00  st   [y,x++]     11394  st([Y,Xpp])                     #35 poke [vAC], [var.0]
              2983 01b1  ld   [$b1]       11395  ld([0xB1])                      #36
              2984 de00  st   [y,x++]     11396  st([Y,Xpp])                     #37 poke [vAC], [var.1]
              2985 01b2  ld   [$b2]       11397  ld([0xB2])                      #38
              2986 de00  st   [y,x++]     11398  st([Y,Xpp])                     #39 poke [vAC], [var.2]
              2987 01b3  ld   [$b3]       11399  ld([0xB3])                      #40
              2988 ce00  st   [y,x]       11400  st([Y,X])                       #41 poke [vAC], [var.3]
              2989 01b4  ld   [$b4]       11401  ld([0xB4])                      #42
              298a ce00  st   [y,x]       11402  st([Y,X])                       #43 poke [vAC], [var.4]
              298b 1403  ld   $03,y       11403  ld(hi('NEXTY'),Y)               #44
              298c e000  jmp  y,$00       11404  jmp(Y,'NEXTY')                  #45
              298d 00e8  ld   $e8         11405  ld(-48/2)                       #46
                                          11406
                                          11407  label('.fokea#18')
.fokea#18:    298e 0022  ld   $22         11408  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              298f c202  st   [$02]       11409  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2990 9401  adda $01,y       11410  adda(1,Y)                       #20 retry instruction
              2991 e000  jmp  y,$00       11411  jmp(Y,'NEXTY')                  #21
              2992 00f4  ld   $f4         11412  ld(-24/2)                       #22
                                          11413
                                          11414
                                          11415  # SWAPB implementation
                                          11416  label('swapb#13')
swapb#13:     2993 00f8  ld   $f8         11417  ld(min(0,maxTicks-46/2))        #13
              2994 8115  adda [$15]       11418  adda([vTicks])                  #14
              2995 e8b3  blt  .swapb#17   11419  blt('.swapb#17')                #15 not enough time left, so retry
              2996 1400  ld   $00,y       11420  ld(0,Y)                         #16
              2997 0500  ld   [x]         11421  ld([X])                         #17
              2998 de00  st   [y,x++]     11422  st([Y,Xpp])                     #18
              2999 c2b2  st   [$b2]       11423  st([0xB2])                      #19 var1.lo
              299a 0500  ld   [x]         11424  ld([X])                         #20
              299b c2b3  st   [$b3]       11425  st([0xB3])                      #21 var1.hi
              299c 112b  ld   [$2b],x     11426  ld([sysArgs+7],X)               #22 var0
              299d 0500  ld   [x]         11427  ld([X])                         #23
              299e de00  st   [y,x++]     11428  st([Y,Xpp])                     #24
              299f c2b4  st   [$b4]       11429  st([0xB4])                      #25 var0.lo
              29a0 0500  ld   [x]         11430  ld([X])                         #26
              29a1 c2b5  st   [$b5]       11431  st([0xB5])                      #27 var0.hi
              29a2 11b2  ld   [$b2],x     11432  ld([0xB2],X)                    #28
              29a3 15b3  ld   [$b3],y     11433  ld([0xB3],Y)                    #29
              29a4 0d00  ld   [y,x]       11434  ld([Y,X])                       #30
              29a5 c2b1  st   [$b1]       11435  st([0xB1])                      #31 tmp1 = [var1]
              29a6 11b4  ld   [$b4],x     11436  ld([0xB4],X)                    #32
              29a7 15b5  ld   [$b5],y     11437  ld([0xB5],Y)                    #33
              29a8 0d00  ld   [y,x]       11438  ld([Y,X])                       #34
              29a9 c2b0  st   [$b0]       11439  st([0xB0])                      #35 tmp0 = [var0]
              29aa 01b1  ld   [$b1]       11440  ld([0xB1])                      #36
              29ab ce00  st   [y,x]       11441  st([Y,X])                       #37 [var0] = tmp1
              29ac 11b2  ld   [$b2],x     11442  ld([0xB2],X)                    #38
              29ad 15b3  ld   [$b3],y     11443  ld([0xB3],Y)                    #39
              29ae 01b0  ld   [$b0]       11444  ld([0xB0])                      #40
              29af ce00  st   [y,x]       11445  st([Y,X])                       #41 [var1] = tmp0
              29b0 1403  ld   $03,y       11446  ld(hi('NEXTY'),Y)               #42
              29b1 e000  jmp  y,$00       11447  jmp(Y,'NEXTY')                  #43
              29b2 00e9  ld   $e9         11448  ld(-46/2)                       #44
                                          11449
                                          11450  label('.swapb#17')
.swapb#17:    29b3 0021  ld   $21         11451  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29b4 c202  st   [$02]       11452  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29b5 9401  adda $01,y       11453  adda(1,Y)                       #19 retry instruction
              29b6 e0cb  jmp  y,$cb       11454  jmp(Y,'REENTER')                #20
              29b7 00f4  ld   $f4         11455  ld(-24/2)                       #21
                                          11456
                                          11457
                                          11458  # SWAPW implementation
                                          11459  label('swapw#13')
swapw#13:     29b8 00f2  ld   $f2         11460  ld(min(0,maxTicks-58/2))        #13
              29b9 8115  adda [$15]       11461  adda([vTicks])                  #14
              29ba e8e4  blt  .swapw#17   11462  blt('.swapw#17')                #15 not enough time left, so retry
              29bb 1400  ld   $00,y       11463  ld(0,Y)                         #16
              29bc 0500  ld   [x]         11464  ld([X])                         #17
              29bd de00  st   [y,x++]     11465  st([Y,Xpp])                     #18
              29be c2b2  st   [$b2]       11466  st([0xB2])                      #19 var1.lo
              29bf 0500  ld   [x]         11467  ld([X])                         #20
              29c0 c2b3  st   [$b3]       11468  st([0xB3])                      #21 var1.hi
              29c1 112b  ld   [$2b],x     11469  ld([sysArgs+7],X)               #22 var0
              29c2 0500  ld   [x]         11470  ld([X])                         #23
              29c3 de00  st   [y,x++]     11471  st([Y,Xpp])                     #24
              29c4 c2b4  st   [$b4]       11472  st([0xB4])                      #25 var0.lo
              29c5 0500  ld   [x]         11473  ld([X])                         #26
              29c6 c2b5  st   [$b5]       11474  st([0xB5])                      #27 var0.hi
              29c7 11b2  ld   [$b2],x     11475  ld([0xB2],X)                    #28
              29c8 15b3  ld   [$b3],y     11476  ld([0xB3],Y)                    #29
              29c9 0d00  ld   [y,x]       11477  ld([Y,X])                       #30
              29ca de00  st   [y,x++]     11478  st([Y,Xpp])                     #31
              29cb c2b0  st   [$b0]       11479  st([0xB0])                      #32 temp.lo = var1.lo
              29cc 0d00  ld   [y,x]       11480  ld([Y,X])                       #33
              29cd c2b1  st   [$b1]       11481  st([0xB1])                      #34 temp.hi = var1.hi
              29ce 11b4  ld   [$b4],x     11482  ld([0xB4],X)                    #35
              29cf 15b5  ld   [$b5],y     11483  ld([0xB5],Y)                    #36
              29d0 0d00  ld   [y,x]       11484  ld([Y,X])                       #37
              29d1 de00  st   [y,x++]     11485  st([Y,Xpp])                     #38
              29d2 c218  st   [$18]       11486  st([vAC])                       #39
              29d3 0d00  ld   [y,x]       11487  ld([Y,X])                       #40
              29d4 c219  st   [$19]       11488  st([vAC+1])                     #41
              29d5 11b2  ld   [$b2],x     11489  ld([0xB2],X)                    #42
              29d6 15b3  ld   [$b3],y     11490  ld([0xB3],Y)                    #43
              29d7 0118  ld   [$18]       11491  ld([vAC])                       #44
              29d8 de00  st   [y,x++]     11492  st([Y,Xpp])                     #45 var1.lo = var0.lo
              29d9 0119  ld   [$19]       11493  ld([vAC+1])                     #46
              29da ce00  st   [y,x]       11494  st([Y,X])                       #47 var1.lo = var0.lo
              29db 11b4  ld   [$b4],x     11495  ld([0xB4],X)                    #48
              29dc 15b5  ld   [$b5],y     11496  ld([0xB5],Y)                    #49
              29dd 01b0  ld   [$b0]       11497  ld([0xB0])                      #50
              29de de00  st   [y,x++]     11498  st([Y,Xpp])                     #51 var0.lo = temp.lo
              29df 01b1  ld   [$b1]       11499  ld([0xB1])                      #52
              29e0 ce00  st   [y,x]       11500  st([Y,X])                       #53 var0.hi = temp.hi
              29e1 1403  ld   $03,y       11501  ld(hi('NEXTY'),Y)               #54
              29e2 e000  jmp  y,$00       11502  jmp(Y,'NEXTY')                  #55
              29e3 00e3  ld   $e3         11503  ld(-58/2)                       #56
                                          11504
                                          11505  label('.swapw#17')
.swapw#17:    29e4 0021  ld   $21         11506  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29e5 c202  st   [$02]       11507  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29e6 9401  adda $01,y       11508  adda(1,Y)                       #19 retry instruction
              29e7 e0cb  jmp  y,$cb       11509  jmp(Y,'REENTER')                #20
              29e8 00f4  ld   $f4         11510  ld(-24/2)                       #21
                                          11511
                                          11512
              29e9 0200  nop              11513  fillers(until=0xff)
              29ea 0200  nop
              29eb 0200  nop
              * 22 times
              29ff 0200  nop              11514  align(0x100, size=0x100)
                                          11515
                                          11516  #-----------------------------------------------------------------------
                                          11517  #       More vCPU instruction implementations, (0x2A00)
                                          11518  #-----------------------------------------------------------------------
                                          11519  #
                                          11520  # MEEKA implementation
                                          11521  label('meeka#13')
meeka#13:     2a00 c21d  st   [$1d]       11522  st([vTmp])                      #13
              2a01 00ef  ld   $ef         11523  ld(min(0,maxTicks-64/2))        #14
              2a02 8115  adda [$15]       11524  adda([vTicks])                  #15
              2a03 e832  blt  .meeka#18   11525  blt('.meeka#18')                #16 not enough time left, so retry
              2a04 1519  ld   [$19],y     11526  ld([vAC+1],Y)                   #17
              2a05 1118  ld   [$18],x     11527  ld([vAC],X)                     #18
              2a06 0d00  ld   [y,x]       11528  ld([Y,X])                       #19 peek [vAC]
              2a07 de00  st   [y,x++]     11529  st([Y,Xpp])                     #20
              2a08 c2b0  st   [$b0]       11530  st([0xB0])                      #21
              2a09 0d00  ld   [y,x]       11531  ld([Y,X])                       #22 peek [vAC+1]
              2a0a de00  st   [y,x++]     11532  st([Y,Xpp])                     #23
              2a0b c2b1  st   [$b1]       11533  st([0xB1])                      #24
              2a0c 0d00  ld   [y,x]       11534  ld([Y,X])                       #25 peek [vAC+2]
              2a0d de00  st   [y,x++]     11535  st([Y,Xpp])                     #26
              2a0e c2b2  st   [$b2]       11536  st([0xB2])                      #27
              2a0f 0d00  ld   [y,x]       11537  ld([Y,X])                       #28 peek [vAC+3]
              2a10 de00  st   [y,x++]     11538  st([Y,Xpp])                     #29
              2a11 c2b3  st   [$b3]       11539  st([0xB3])                      #30
              2a12 0d00  ld   [y,x]       11540  ld([Y,X])                       #31 peek [vAC+4]
              2a13 de00  st   [y,x++]     11541  st([Y,Xpp])                     #32
              2a14 c2b4  st   [$b4]       11542  st([0xB4])                      #33
              2a15 0d00  ld   [y,x]       11543  ld([Y,X])                       #34 peek [vAC+5]
              2a16 de00  st   [y,x++]     11544  st([Y,Xpp])                     #35
              2a17 c2b5  st   [$b5]       11545  st([0xB5])                      #36
              2a18 0d00  ld   [y,x]       11546  ld([Y,X])                       #37 peek [vAC+6]
              2a19 de00  st   [y,x++]     11547  st([Y,Xpp])                     #38
              2a1a c2b6  st   [$b6]       11548  st([0xB6])                      #39
              2a1b 0d00  ld   [y,x]       11549  ld([Y,X])                       #40 peek [vAC+7]
              2a1c c2b7  st   [$b7]       11550  st([0xB7])                      #41
              2a1d 1400  ld   $00,y       11551  ld(0,Y)                         #42
              2a1e 111d  ld   [$1d],x     11552  ld([vTmp],X)                    #43 dst var
              2a1f 01b0  ld   [$b0]       11553  ld([0xB0])                      #44
              2a20 de00  st   [y,x++]     11554  st([Y,Xpp])                     #45 [var.0] = peek [vAC]
              2a21 01b1  ld   [$b1]       11555  ld([0xB1])                      #46
              2a22 de00  st   [y,x++]     11556  st([Y,Xpp])                     #47 [var.1] = peek [vAC+1]
              2a23 01b2  ld   [$b2]       11557  ld([0xB2])                      #48
              2a24 de00  st   [y,x++]     11558  st([Y,Xpp])                     #49 [var.2] = peek [vAC+2]
              2a25 01b3  ld   [$b3]       11559  ld([0xB3])                      #50
              2a26 de00  st   [y,x++]     11560  st([Y,Xpp])                     #51 [var.3] = peek [vAC+3]
              2a27 01b4  ld   [$b4]       11561  ld([0xB4])                      #52
              2a28 de00  st   [y,x++]     11562  st([Y,Xpp])                     #53 [var.0] = peek [vAC+4]
              2a29 01b5  ld   [$b5]       11563  ld([0xB5])                      #54
              2a2a de00  st   [y,x++]     11564  st([Y,Xpp])                     #55 [var.1] = peek [vAC+5]
              2a2b 01b6  ld   [$b6]       11565  ld([0xB6])                      #56
              2a2c de00  st   [y,x++]     11566  st([Y,Xpp])                     #57 [var.2] = peek [vAC+6]
              2a2d 01b7  ld   [$b7]       11567  ld([0xB7])                      #58
              2a2e ce00  st   [y,x]       11568  st([Y,X])                       #59 [var.3] = peek [vAC+7]
              2a2f 1403  ld   $03,y       11569  ld(hi('NEXTY'),Y)               #60
              2a30 e000  jmp  y,$00       11570  jmp(Y,'NEXTY')                  #61
              2a31 00e0  ld   $e0         11571  ld(-64/2)                       #62
                                          11572
                                          11573  label('.meeka#18')
.meeka#18:    2a32 0022  ld   $22         11574  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a33 c202  st   [$02]       11575  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a34 9401  adda $01,y       11576  adda(1,Y)                       #20 retry instruction
              2a35 e000  jmp  y,$00       11577  jmp(Y,'NEXTY')                  #21
              2a36 00f4  ld   $f4         11578  ld(-24/2)                       #22
                                          11579
                                          11580
                                          11581  # MOKEA
                                          11582  label('mokea#13')
mokea#13:     2a37 1200  ld   ac,x        11583  ld(AC,X)                        #13 var
              2a38 00ef  ld   $ef         11584  ld(min(0,maxTicks-64/2))        #14
              2a39 8115  adda [$15]       11585  adda([vTicks])                  #15
              2a3a e869  blt  .mokea#18   11586  blt('.mokea#18')                #16 not enough time left, so retry
              2a3b 1400  ld   $00,y       11587  ld(0,Y)                         #17
              2a3c 0500  ld   [x]         11588  ld([X])                         #18 var.0
              2a3d de00  st   [y,x++]     11589  st([Y,Xpp])                     #19
              2a3e c2b0  st   [$b0]       11590  st([0xB0])                      #20
              2a3f 0500  ld   [x]         11591  ld([X])                         #21 var.1
              2a40 de00  st   [y,x++]     11592  st([Y,Xpp])                     #22
              2a41 c2b1  st   [$b1]       11593  st([0xB1])                      #23
              2a42 0500  ld   [x]         11594  ld([X])                         #24 var.2
              2a43 de00  st   [y,x++]     11595  st([Y,Xpp])                     #25
              2a44 c2b2  st   [$b2]       11596  st([0xB2])                      #26
              2a45 0500  ld   [x]         11597  ld([X])                         #27 var.3
              2a46 de00  st   [y,x++]     11598  st([Y,Xpp])                     #28
              2a47 c2b3  st   [$b3]       11599  st([0xB3])                      #29
              2a48 0500  ld   [x]         11600  ld([X])                         #30 var.4
              2a49 de00  st   [y,x++]     11601  st([Y,Xpp])                     #31
              2a4a c2b4  st   [$b4]       11602  st([0xB4])                      #32
              2a4b 0500  ld   [x]         11603  ld([X])                         #33 var.5
              2a4c de00  st   [y,x++]     11604  st([Y,Xpp])                     #34
              2a4d c2b5  st   [$b5]       11605  st([0xB5])                      #35
              2a4e 0500  ld   [x]         11606  ld([X])                         #36 var.6
              2a4f de00  st   [y,x++]     11607  st([Y,Xpp])                     #37
              2a50 c2b6  st   [$b6]       11608  st([0xB6])                      #38
              2a51 0500  ld   [x]         11609  ld([X])                         #39 var.7
              2a52 de00  st   [y,x++]     11610  st([Y,Xpp])                     #40
              2a53 c2b7  st   [$b7]       11611  st([0xB7])                      #41
              2a54 1118  ld   [$18],x     11612  ld([vAC],X)                     #42
              2a55 1519  ld   [$19],y     11613  ld([vAC+1],Y)                   #43
              2a56 01b0  ld   [$b0]       11614  ld([0xB0])                      #44
              2a57 de00  st   [y,x++]     11615  st([Y,Xpp])                     #45 poke [vAC], var.0
              2a58 01b1  ld   [$b1]       11616  ld([0xB1])                      #46
              2a59 de00  st   [y,x++]     11617  st([Y,Xpp])                     #47 poke [vAC], var.1
              2a5a 01b2  ld   [$b2]       11618  ld([0xB2])                      #48
              2a5b de00  st   [y,x++]     11619  st([Y,Xpp])                     #49 poke [vAC], var.2
              2a5c 01b3  ld   [$b3]       11620  ld([0xB3])                      #50
              2a5d de00  st   [y,x++]     11621  st([Y,Xpp])                     #51 poke [vAC], var.3
              2a5e 01b4  ld   [$b4]       11622  ld([0xB4])                      #52
              2a5f de00  st   [y,x++]     11623  st([Y,Xpp])                     #53 poke [vAC], var.4
              2a60 01b5  ld   [$b5]       11624  ld([0xB5])                      #54
              2a61 de00  st   [y,x++]     11625  st([Y,Xpp])                     #55 poke [vAC], var.5
              2a62 01b6  ld   [$b6]       11626  ld([0xB6])                      #56
              2a63 de00  st   [y,x++]     11627  st([Y,Xpp])                     #57 poke [vAC], var.6
              2a64 01b7  ld   [$b7]       11628  ld([0xB7])                      #58
              2a65 de00  st   [y,x++]     11629  st([Y,Xpp])                     #59 poke [vAC], var.7
              2a66 1403  ld   $03,y       11630  ld(hi('NEXTY'),Y)               #60
              2a67 e000  jmp  y,$00       11631  jmp(Y,'NEXTY')                  #61
              2a68 00e0  ld   $e0         11632  ld(-64/2)                       #62
                                          11633
                                          11634  label('.mokea#18')
.mokea#18:    2a69 0022  ld   $22         11635  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a6a c202  st   [$02]       11636  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a6b 9401  adda $01,y       11637  adda(1,Y)                       #20 retry instruction
              2a6c e000  jmp  y,$00       11638  jmp(Y,'NEXTY')                  #21
              2a6d 00f4  ld   $f4         11639  ld(-24/2)                       #22
                                          11640
                                          11641
                                          11642  # NEEKA implementation
                                          11643  label('neeka#13')
neeka#13:     2a6e 00fe  ld   $fe         11644  ld(min(0,maxTicks-34/2))        #13
              2a6f 8115  adda [$15]       11645  adda([vTicks])                  #14
              2a70 e885  blt  .neeka#17   11646  blt('.neeka#17')                #15 not enough time left, so retry
              2a71 012b  ld   [$2b]       11647  ld([sysArgs+7])                 #16 number of bytes to peek
              2a72 a001  suba $01         11648  suba(1)                         #17
              2a73 f478  bge  .neeka#20   11649  bge('.neeka#20')                #18
              2a74 c22b  st   [$2b]       11650  st([sysArgs+7])                 #19
              2a75 1403  ld   $03,y       11651  ld(hi('NEXTY'),Y)               #20 done
              2a76 e000  jmp  y,$00       11652  jmp(Y,'NEXTY')                  #21
              2a77 00f4  ld   $f4         11653  ld(-24/2)                       #22
                                          11654
                                          11655  label('.neeka#20')
.neeka#20:    2a78 1519  ld   [$19],y     11656  ld([vAC+1],Y)                   #20
              2a79 9118  adda [$18],x     11657  adda([vAC],X)                   #21
              2a7a 0d00  ld   [y,x]       11658  ld([Y,X])                       #22 peek [vAC + index]
              2a7b c21d  st   [$1d]       11659  st([vTmp])                      #23
              2a7c 012a  ld   [$2a]       11660  ld([sysArgs+6])                 #24
              2a7d 912b  adda [$2b],x     11661  adda([sysArgs+7],X)             #25 var + index
              2a7e 011d  ld   [$1d]       11662  ld([vTmp])                      #26
              2a7f c600  st   [x]         11663  st([X])                         #27 [var + index] = peek [vAC + index]
              2a80 0021  ld   $21         11664  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a81 c202  st   [$02]       11665  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a82 9401  adda $01,y       11666  adda(1,Y)                       #30 restart instruction
              2a83 e000  jmp  y,$00       11667  jmp(Y,'NEXTY')                  #31
              2a84 00ef  ld   $ef         11668  ld(-34/2)                       #32
                                          11669
                                          11670  label('.neeka#17')
.neeka#17:    2a85 0021  ld   $21         11671  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2a86 c202  st   [$02]       11672  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2a87 9401  adda $01,y       11673  adda(1,Y)                       #19 retry instruction
              2a88 e0cb  jmp  y,$cb       11674  jmp(Y,'REENTER')                #20
              2a89 00f4  ld   $f4         11675  ld(-24/2)                       #21
                                          11676
                                          11677
                                          11678  # NOKEA implementation
                                          11679  label('nokea#13')
nokea#13:     2a8a 00fe  ld   $fe         11680  ld(min(0,maxTicks-34/2))        #13
              2a8b 8115  adda [$15]       11681  adda([vTicks])                  #14
              2a8c e8a1  blt  .nokea#17   11682  blt('.nokea#17')                #15 not enough time left, so retry
              2a8d 012b  ld   [$2b]       11683  ld([sysArgs+7])                 #16 number of bytes to peek
              2a8e a001  suba $01         11684  suba(1)                         #17
              2a8f f494  bge  .nokea#20   11685  bge('.nokea#20')                #18
              2a90 c22b  st   [$2b]       11686  st([sysArgs+7])                 #19
              2a91 1403  ld   $03,y       11687  ld(hi('NEXTY'),Y)               #20 done
              2a92 e000  jmp  y,$00       11688  jmp(Y,'NEXTY')                  #21
              2a93 00f4  ld   $f4         11689  ld(-24/2)                       #22
                                          11690
                                          11691  label('.nokea#20')
.nokea#20:    2a94 912a  adda [$2a],x     11692  adda([sysArgs+6],X)             #20 var + index
              2a95 0500  ld   [x]         11693  ld([X])                         #21
              2a96 c21d  st   [$1d]       11694  st([vTmp])                      #22
              2a97 1519  ld   [$19],y     11695  ld([vAC+1],Y)                   #23
              2a98 012b  ld   [$2b]       11696  ld([sysArgs+7])                 #24
              2a99 9118  adda [$18],x     11697  adda([vAC],X)                   #25 vAC + index
              2a9a 011d  ld   [$1d]       11698  ld([vTmp])                      #26
              2a9b ce00  st   [y,x]       11699  st([Y,X])                       #27 [vAC + index] = peek [var + index]
              2a9c 0021  ld   $21         11700  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a9d c202  st   [$02]       11701  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a9e 9401  adda $01,y       11702  adda(1,Y)                       #30 restart instruction
              2a9f e000  jmp  y,$00       11703  jmp(Y,'NEXTY')                  #31
              2aa0 00ef  ld   $ef         11704  ld(-34/2)                       #32
                                          11705
                                          11706  label('.nokea#17')
.nokea#17:    2aa1 0021  ld   $21         11707  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2aa2 c202  st   [$02]       11708  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2aa3 9401  adda $01,y       11709  adda(1,Y)                       #19 retry instruction
              2aa4 e0cb  jmp  y,$cb       11710  jmp(Y,'REENTER')                #20
              2aa5 00f4  ld   $f4         11711  ld(-24/2)                       #21
                                          11712
                                          11713
                                          11714  # DJNE implementation
                                          11715  label('djne#13')
djne#13:      2aa6 de00  st   [y,x++]     11716  st([Y,Xpp])                     #13 X++
              2aa7 c21d  st   [$1d]       11717  st([vTmp])                      #14 var
              2aa8 00f8  ld   $f8         11718  ld(min(0,maxTicks-46/2))        #15
              2aa9 8115  adda [$15]       11719  adda([vTicks])                  #16
              2aaa e8d3  blt  .djne#19    11720  blt('.djne#19')                 #17 not enough time left, so retry
              2aab 0d00  ld   [y,x]       11721  ld([Y,X])                       #18
              2aac de00  st   [y,x++]     11722  st([Y,Xpp])                     #19 X++
              2aad c22a  st   [$2a]       11723  st([sysArgs+6])                 #20 jump addr.lo
              2aae 0d00  ld   [y,x]       11724  ld([Y,X])                       #21
              2aaf c22b  st   [$2b]       11725  st([sysArgs+7])                 #22 jump addr.hi
              2ab0 1400  ld   $00,y       11726  ld(0,Y)                         #23
              2ab1 111d  ld   [$1d],x     11727  ld([vTmp],X)                    #24
              2ab2 0500  ld   [x]         11728  ld([X])                         #25 count.lo
              2ab3 a001  suba $01         11729  suba(1)                         #26
              2ab4 de00  st   [y,x++]     11730  st([Y,Xpp])                     #27 count.lo-- X++
              2ab5 4500  ora  [x]         11731  ora([X])                        #28 count.lo | count.hi
              2ab6 f0c6  beq  .djne#31    11732  beq('.djne#31')                 #19 count = 0
              2ab7 111d  ld   [$1d],x     11733  ld([vTmp],X)                    #30
              2ab8 0500  ld   [x]         11734  ld([X])                         #31 count.lo
              2ab9 de00  st   [y,x++]     11735  st([Y,Xpp])                     #32 X++
              2aba 60ff  xora $ff         11736  xora(0xFF)                      #33 if low byte is 0xFF
              2abb eccc  bne  .djne#36    11737  bne('.djne#36')                 #34
              2abc 0500  ld   [x]         11738  ld([X])                         #35 count.hi
              2abd a001  suba $01         11739  suba(1)                         #36
              2abe c600  st   [x]         11740  st([X])                         #37
              2abf 012a  ld   [$2a]       11741  ld([sysArgs+6])                 #38 jump
              2ac0 c216  st   [$16]       11742  st([vPC])                       #39
              2ac1 012b  ld   [$2b]       11743  ld([sysArgs+7])                 #40
              2ac2 c217  st   [$17]       11744  st([vPC+1])                     #41
              2ac3 1403  ld   $03,y       11745  ld(hi('NEXTY'),Y)               #42
              2ac4 e000  jmp  y,$00       11746  jmp(Y,'NEXTY')                  #43
              2ac5 00e9  ld   $e9         11747  ld(-46/2)                       #44
                                          11748
                                          11749  label('.djne#31')
.djne#31:     2ac6 0116  ld   [$16]       11750  ld([vPC])                       #31 done
              2ac7 8002  adda $02         11751  adda(2)                         #32
              2ac8 c216  st   [$16]       11752  st([vPC])                       #33
              2ac9 1403  ld   $03,y       11753  ld(hi('NEXTY'),Y)               #34
              2aca e000  jmp  y,$00       11754  jmp(Y,'NEXTY')                  #35
              2acb 00ed  ld   $ed         11755  ld(-38/2)                       #36
                                          11756
                                          11757  label('.djne#36')
.djne#36:     2acc 012a  ld   [$2a]       11758  ld([sysArgs+6])                 #36 jump
              2acd c216  st   [$16]       11759  st([vPC])                       #37
              2ace 012b  ld   [$2b]       11760  ld([sysArgs+7])                 #38
              2acf c217  st   [$17]       11761  st([vPC+1])                     #39
              2ad0 1403  ld   $03,y       11762  ld(hi('NEXTY'),Y)               #40
              2ad1 e000  jmp  y,$00       11763  jmp(Y,'NEXTY')                  #41
              2ad2 00ea  ld   $ea         11764  ld(-44/2)                       #42
                                          11765
                                          11766  label('.djne#19')
.djne#19:     2ad3 0116  ld   [$16]       11767  ld([vPC])                       #19 retry
              2ad4 a002  suba $02         11768  suba(2)                         #20
              2ad5 c216  st   [$16]       11769  st([vPC])                       #21
              2ad6 1403  ld   $03,y       11770  ld(hi('NEXTY'),Y)               #22
              2ad7 e000  jmp  y,$00       11771  jmp(Y,'NEXTY')                  #23
              2ad8 00f3  ld   $f3         11772  ld(-26/2)                       #24
                                          11773
                                          11774
              2ad9 0200  nop              11775  fillers(until=0xff)
              2ada 0200  nop
              2adb 0200  nop
              * 38 times
              2aff 0200  nop              11776  align(0x100, size=0x100)
                                          11777
                                          11778  #-----------------------------------------------------------------------
                                          11779  #       More vCPU instruction implementations, (0x2B00)
                                          11780  #-----------------------------------------------------------------------
                                          11781  #
                                          11782  # DJGE implementation
                                          11783  label('djge#13')
djge#13:      2b00 de00  st   [y,x++]     11784  st([Y,Xpp])                     #13
              2b01 c21d  st   [$1d]       11785  st([vTmp])                      #14 var
              2b02 00fa  ld   $fa         11786  ld(min(0,maxTicks-42/2))        #15
              2b03 8115  adda [$15]       11787  adda([vTicks])                  #16
              2b04 e829  blt  .djge#19    11788  blt('.djge#19')                 #17 not enough time left, so retry
              2b05 0d00  ld   [y,x]       11789  ld([Y,X])                       #18
              2b06 de00  st   [y,x++]     11790  st([Y,Xpp])                     #19
              2b07 c22a  st   [$2a]       11791  st([sysArgs+6])                 #20 jump addr.lo
              2b08 0d00  ld   [y,x]       11792  ld([Y,X])                       #21
              2b09 c22b  st   [$2b]       11793  st([sysArgs+7])                 #22 jump addr.hi
              2b0a 1400  ld   $00,y       11794  ld(0,Y)                         #23
              2b0b 111d  ld   [$1d],x     11795  ld([vTmp],X)                    #24
              2b0c 0500  ld   [x]         11796  ld([X])                         #25 count.lo
              2b0d a001  suba $01         11797  suba(1)                         #26
              2b0e de00  st   [y,x++]     11798  st([Y,Xpp])                     #27 count.lo-- X++
              2b0f 60ff  xora $ff         11799  xora(0xFF)                      #28 if low byte is 0xFF
              2b10 ec1c  bne  .djge#31    11800  bne('.djge#31')                 #29
              2b11 0500  ld   [x]         11801  ld([X])                         #30 count.hi
              2b12 f023  beq  .djge#33    11802  beq('.djge#33')                 #31
              2b13 a001  suba $01         11803  suba(1)                         #32
              2b14 c600  st   [x]         11804  st([X])                         #33
              2b15 012a  ld   [$2a]       11805  ld([sysArgs+6])                 #34 jump
              2b16 c216  st   [$16]       11806  st([vPC])                       #35
              2b17 012b  ld   [$2b]       11807  ld([sysArgs+7])                 #36
              2b18 c217  st   [$17]       11808  st([vPC+1])                     #37
              2b19 1403  ld   $03,y       11809  ld(hi('NEXTY'),Y)               #38
              2b1a e000  jmp  y,$00       11810  jmp(Y,'NEXTY')                  #39
              2b1b 00eb  ld   $eb         11811  ld(-42/2)                       #40
                                          11812
                                          11813  label('.djge#31')
.djge#31:     2b1c 012a  ld   [$2a]       11814  ld([sysArgs+6])                 #31 jump
              2b1d c216  st   [$16]       11815  st([vPC])                       #32
              2b1e 012b  ld   [$2b]       11816  ld([sysArgs+7])                 #33
              2b1f c217  st   [$17]       11817  st([vPC+1])                     #34
              2b20 1403  ld   $03,y       11818  ld(hi('REENTER'),Y)             #35
              2b21 e0cb  jmp  y,$cb       11819  jmp(Y,'REENTER')                #36
              2b22 00ec  ld   $ec         11820  ld(-40/2)                       #37
                                          11821
                                          11822  label('.djge#33')
.djge#33:     2b23 0116  ld   [$16]       11823  ld([vPC])                       #33 done
              2b24 8002  adda $02         11824  adda(2)                         #34
              2b25 c216  st   [$16]       11825  st([vPC])                       #35
              2b26 1403  ld   $03,y       11826  ld(hi('NEXTY'),Y)               #36
              2b27 e000  jmp  y,$00       11827  jmp(Y,'NEXTY')                  #37
              2b28 00ec  ld   $ec         11828  ld(-40/2)                       #38
                                          11829
                                          11830  label('.djge#19')
.djge#19:     2b29 0116  ld   [$16]       11831  ld([vPC])                       #19 retry
              2b2a a002  suba $02         11832  suba(2)                         #20
              2b2b c216  st   [$16]       11833  st([vPC])                       #21
              2b2c 1403  ld   $03,y       11834  ld(hi('NEXTY'),Y)               #22
              2b2d e000  jmp  y,$00       11835  jmp(Y,'NEXTY')                  #23
              2b2e 00f3  ld   $f3         11836  ld(-26/2)                       #24
                                          11837
                                          11838
                                          11839  # ADDVL
                                          11840  label('addvl#13')
addvl#13:     2b2f 0500  ld   [x]         11841  ld([X])                         #13
              2b30 c21d  st   [$1d]       11842  st([vTmp])                      #14 save src.0
              2b31 112b  ld   [$2b],x     11843  ld([sysArgs+7],X)               #15 dst.0
              2b32 00e8  ld   $e8         11844  ld(min(0,maxTicks-78/2))        #16
              2b33 8115  adda [$15]       11845  adda([vTicks])                  #17
              2b34 e874  blt  .addvl#20   11846  blt('.addvl#20')                #18 not enough time left, so retry
              2b35 011d  ld   [$1d]       11847  ld([vTmp])                      #19 src.0
              2b36 8500  adda [x]         11848  adda([X])                       #20
              2b37 c600  st   [x]         11849  st([X])                         #21 dst.0 += src.0
              2b38 e83c  blt  .addvl#24   11850  bmi('.addvl#24')                #22 carry
              2b39 a11d  suba [$1d]       11851  suba([vTmp])                    #23 original dst.0
              2b3a fc3e  bra  .addvl#26   11852  bra('.addvl#26')                #24
              2b3b 411d  ora  [$1d]       11853  ora([vTmp])                     #25 carry in bit 7
                                          11854
                                          11855  label('.addvl#24')
.addvl#24:    2b3c 211d  anda [$1d]       11856  anda([vTmp])                    #24 carry in bit 7
              2b3d 0200  nop              11857  nop()                           #25
                                          11858
                                          11859  label('.addvl#26')
.addvl#26:    2b3e 3080  anda $80,x       11860  anda(0x80,X)                    #26 carry to bit 0
              2b3f 0500  ld   [x]         11861  ld([X])                         #27
              2b40 c21d  st   [$1d]       11862  st([vTmp])                      #28 store carry
              2b41 012a  ld   [$2a]       11863  ld([sysArgs+6])                 #29
              2b42 9001  adda $01,x       11864  adda(1,X)                       #30 src.1
              2b43 011d  ld   [$1d]       11865  ld([vTmp])                      #31
              2b44 8500  adda [x]         11866  adda([X])                       #32
              2b45 c21d  st   [$1d]       11867  st([vTmp])                      #33 src.1 += carry
              2b46 012b  ld   [$2b]       11868  ld([sysArgs+7])                 #34
              2b47 9001  adda $01,x       11869  adda(1,X)                       #35
              2b48 011d  ld   [$1d]       11870  ld([vTmp])                      #36
              2b49 8500  adda [x]         11871  adda([X])                       #37
              2b4a c600  st   [x]         11872  st([X])                         #38 dst.1 += src.1
              2b4b e84f  blt  .addvl#41   11873  bmi('.addvl#41')                #39 carry
              2b4c a11d  suba [$1d]       11874  suba([vTmp])                    #40 original dst.1
              2b4d fc51  bra  .addvl#43   11875  bra('.addvl#43')                #41
              2b4e 411d  ora  [$1d]       11876  ora([vTmp])                     #42 carry in bit 7
                                          11877
                                          11878  label('.addvl#41')
.addvl#41:    2b4f 211d  anda [$1d]       11879  anda([vTmp])                    #41 carry in bit 7
              2b50 0200  nop              11880  nop()                           #42
                                          11881
                                          11882  label('.addvl#43')
.addvl#43:    2b51 3080  anda $80,x       11883  anda(0x80,X)                    #43 carry to bit 0
              2b52 0500  ld   [x]         11884  ld([X])                         #44
              2b53 c21d  st   [$1d]       11885  st([vTmp])                      #45 store carry
              2b54 012a  ld   [$2a]       11886  ld([sysArgs+6])                 #46
              2b55 9002  adda $02,x       11887  adda(2,X)                       #47 src.2
              2b56 011d  ld   [$1d]       11888  ld([vTmp])                      #48
              2b57 8500  adda [x]         11889  adda([X])                       #49
              2b58 c21d  st   [$1d]       11890  st([vTmp])                      #50 src.2 += carry
              2b59 012b  ld   [$2b]       11891  ld([sysArgs+7])                 #51
              2b5a 9002  adda $02,x       11892  adda(2,X)                       #52
              2b5b 011d  ld   [$1d]       11893  ld([vTmp])                      #53
              2b5c 8500  adda [x]         11894  adda([X])                       #54
              2b5d c600  st   [x]         11895  st([X])                         #55 dst.2 += src.2
              2b5e e862  blt  .addvl#58   11896  bmi('.addvl#58')                #56 carry
              2b5f a11d  suba [$1d]       11897  suba([vTmp])                    #57 original dst.2
              2b60 fc64  bra  .addvl#60   11898  bra('.addvl#60')                #58
              2b61 411d  ora  [$1d]       11899  ora([vTmp])                     #59 carry in bit 7
                                          11900
                                          11901  label('.addvl#58')
.addvl#58:    2b62 211d  anda [$1d]       11902  anda([vTmp])                    #58 carry in bit 7
              2b63 0200  nop              11903  nop()                           #59
                                          11904
                                          11905  label('.addvl#60')
.addvl#60:    2b64 3080  anda $80,x       11906  anda(0x80,X)                    #60 carry to bit 0
              2b65 0500  ld   [x]         11907  ld([X])                         #61
              2b66 c21d  st   [$1d]       11908  st([vTmp])                      #62 store carry
              2b67 012a  ld   [$2a]       11909  ld([sysArgs+6])                 #63
              2b68 9003  adda $03,x       11910  adda(3,X)                       #64 src.3
              2b69 011d  ld   [$1d]       11911  ld([vTmp])                      #65
              2b6a 8500  adda [x]         11912  adda([X])                       #66
              2b6b c21d  st   [$1d]       11913  st([vTmp])                      #67 src.3 += carry
              2b6c 012b  ld   [$2b]       11914  ld([sysArgs+7])                 #68
              2b6d 9003  adda $03,x       11915  adda(3,X)                       #69
              2b6e 011d  ld   [$1d]       11916  ld([vTmp])                      #70
              2b6f 8500  adda [x]         11917  adda([X])                       #71
              2b70 c600  st   [x]         11918  st([X])                         #72 dst.3 += src.3
              2b71 1403  ld   $03,y       11919  ld(hi('REENTER'),Y)             #73
              2b72 e0cb  jmp  y,$cb       11920  jmp(Y,'REENTER')                #74
              2b73 00d9  ld   $d9         11921  ld(-78/2)                       #75
                                          11922
                                          11923  label('.addvl#20')
.addvl#20:    2b74 0021  ld   $21         11924  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2b75 c202  st   [$02]       11925  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2b76 9401  adda $01,y       11926  adda(1,Y)                       #22 retry instruction
              2b77 e000  jmp  y,$00       11927  jmp(Y,'NEXTY')                  #23
              2b78 00f3  ld   $f3         11928  ld(-26/2)                       #24
                                          11929
                                          11930
                                          11931  # SUBVL
                                          11932  label('subvl#13')
subvl#13:     2b79 0500  ld   [x]         11933  ld([X])                         #13
              2b7a c21d  st   [$1d]       11934  st([vTmp])                      #14 save src.0
              2b7b 112b  ld   [$2b],x     11935  ld([sysArgs+7],X)               #15 dst.0
              2b7c 00ea  ld   $ea         11936  ld(min(0,maxTicks-74/2))        #16
              2b7d 8115  adda [$15]       11937  adda([vTicks])                  #17
              2b7e e8c0  blt  .subvl#20   11938  blt('.subvl#20')                #18 not enough time left, so retry
              2b7f 0500  ld   [x]         11939  ld([X])                         #19 dst.0
              2b80 e885  blt  .subvl#22   11940  bmi('.subvl#22')                #20
              2b81 a11d  suba [$1d]       11941  suba([vTmp])                    #21
              2b82 c600  st   [x]         11942  st([X])                         #22 dst.0 -= src.0
              2b83 fc88  bra  .subvl#25   11943  bra('.subvl#25')                #23
              2b84 411d  ora  [$1d]       11944  ora([vTmp])                     #24 borrow in bit 7
                                          11945
                                          11946  label('.subvl#22')
.subvl#22:    2b85 c600  st   [x]         11947  st([X])                         #22 dst.0 -= src.0
              2b86 211d  anda [$1d]       11948  anda([vTmp])                    #23 borrow in bit 7
              2b87 0200  nop              11949  nop()                           #24
                                          11950
                                          11951  label('.subvl#25')
.subvl#25:    2b88 3080  anda $80,x       11952  anda(0x80,X)                    #25 borrow to bit 0
              2b89 0500  ld   [x]         11953  ld([X])                         #26
              2b8a c2b0  st   [$b0]       11954  st([0xB0])                      #27 store borrow
              2b8b 012a  ld   [$2a]       11955  ld([sysArgs+6])                 #28
              2b8c 9001  adda $01,x       11956  adda(1,X)                       #29
              2b8d 0500  ld   [x]         11957  ld([X])                         #30
              2b8e c21d  st   [$1d]       11958  st([vTmp])                      #31 src.1
              2b8f 012b  ld   [$2b]       11959  ld([sysArgs+7])                 #32
              2b90 9001  adda $01,x       11960  adda(1,X)                       #33
              2b91 0500  ld   [x]         11961  ld([X])                         #34 dst.1
              2b92 e898  blt  .subvl#37   11962  bmi('.subvl#37')                #35
              2b93 a11d  suba [$1d]       11963  suba([vTmp])                    #36
              2b94 a1b0  suba [$b0]       11964  suba([0xB0])                    #37
              2b95 c600  st   [x]         11965  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b96 fc9c  bra  .subvl#41   11966  bra('.subvl#41')                #39
              2b97 411d  ora  [$1d]       11967  ora([vTmp])                     #40 borrow in bit 7
                                          11968
                                          11969  label('.subvl#37')
.subvl#37:    2b98 a1b0  suba [$b0]       11970  suba([0xB0])                    #37
              2b99 c600  st   [x]         11971  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b9a 211d  anda [$1d]       11972  anda([vTmp])                    #39 borrow in bit 7
              2b9b 0200  nop              11973  nop()                           #40
                                          11974
                                          11975  label('.subvl#41')
.subvl#41:    2b9c 3080  anda $80,x       11976  anda(0x80,X)                    #41 borrow to bit 0
              2b9d 0500  ld   [x]         11977  ld([X])                         #42
              2b9e c2b0  st   [$b0]       11978  st([0xB0])                      #43 store borrow
              2b9f 012a  ld   [$2a]       11979  ld([sysArgs+6])                 #44
              2ba0 9002  adda $02,x       11980  adda(2,X)                       #45
              2ba1 0500  ld   [x]         11981  ld([X])                         #46
              2ba2 c21d  st   [$1d]       11982  st([vTmp])                      #47 src.2
              2ba3 012b  ld   [$2b]       11983  ld([sysArgs+7])                 #48
              2ba4 9002  adda $02,x       11984  adda(2,X)                       #49
              2ba5 0500  ld   [x]         11985  ld([X])                         #50 dst.2
              2ba6 e8ac  blt  .subvl#53   11986  bmi('.subvl#53')                #51
              2ba7 a11d  suba [$1d]       11987  suba([vTmp])                    #52
              2ba8 a1b0  suba [$b0]       11988  suba([0xB0])                    #53
              2ba9 c600  st   [x]         11989  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2baa fcb0  bra  .subvl#57   11990  bra('.subvl#57')                #55
              2bab 411d  ora  [$1d]       11991  ora([vTmp])                     #56 borrow in bit 7
                                          11992
                                          11993  label('.subvl#53')
.subvl#53:    2bac a1b0  suba [$b0]       11994  suba([0xB0])                    #53
              2bad c600  st   [x]         11995  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2bae 211d  anda [$1d]       11996  anda([vTmp])                    #55 borrow in bit 7
              2baf 0200  nop              11997  nop()                           #56
                                          11998
                                          11999  label('.subvl#57')
.subvl#57:    2bb0 3080  anda $80,x       12000  anda(0x80,X)                    #57 borrow to bit 0
              2bb1 0500  ld   [x]         12001  ld([X])                         #58
              2bb2 c2b0  st   [$b0]       12002  st([0xB0])                      #59 store borrow
              2bb3 012a  ld   [$2a]       12003  ld([sysArgs+6])                 #60
              2bb4 9003  adda $03,x       12004  adda(3,X)                       #61
              2bb5 0500  ld   [x]         12005  ld([X])                         #62
              2bb6 c21d  st   [$1d]       12006  st([vTmp])                      #63 src.3
              2bb7 012b  ld   [$2b]       12007  ld([sysArgs+7])                 #64
              2bb8 9003  adda $03,x       12008  adda(3,X)                       #65 dst.3
              2bb9 0500  ld   [x]         12009  ld([X])                         #66
              2bba a11d  suba [$1d]       12010  suba([vTmp])                    #67
              2bbb a1b0  suba [$b0]       12011  suba([0xB0])                    #68
              2bbc c600  st   [x]         12012  st([X])                         #69 dst.3 = dst.3 - src.3 - borrow
              2bbd 1403  ld   $03,y       12013  ld(hi('NEXTY'),Y)               #70
              2bbe e000  jmp  y,$00       12014  jmp(Y,'NEXTY')                  #71
              2bbf 00db  ld   $db         12015  ld(-74/2)                       #72
                                          12016
                                          12017  label('.subvl#20')
.subvl#20:    2bc0 0021  ld   $21         12018  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2bc1 c202  st   [$02]       12019  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2bc2 9401  adda $01,y       12020  adda(1,Y)                       #22 retry instruction
              2bc3 e000  jmp  y,$00       12021  jmp(Y,'NEXTY')                  #23
              2bc4 00f3  ld   $f3         12022  ld(-26/2)                       #24
                                          12023
                                          12024
                                          12025  # ANDVL
                                          12026  label('andvl#13')
andvl#13:     2bc5 1400  ld   $00,y       12027  ld(0,Y)                         #13
              2bc6 00f8  ld   $f8         12028  ld(min(0,maxTicks-46/2))        #14
              2bc7 8115  adda [$15]       12029  adda([vTicks])                  #15
              2bc8 e8e4  blt  .andvl#18   12030  blt('.andvl#18')                #16 not enough time left, so retry
              2bc9 0d00  ld   [y,x]       12031  ld([Y,X])                       #17 src.0
              2bca de00  st   [y,x++]     12032  st([Y,Xpp])                     #18
              2bcb c2b0  st   [$b0]       12033  st([0xB0])                      #19
              2bcc 0d00  ld   [y,x]       12034  ld([Y,X])                       #20 src.1
              2bcd de00  st   [y,x++]     12035  st([Y,Xpp])                     #21
              2bce c2b1  st   [$b1]       12036  st([0xB1])                      #22
              2bcf 0d00  ld   [y,x]       12037  ld([Y,X])                       #23 src.2
              2bd0 de00  st   [y,x++]     12038  st([Y,Xpp])                     #24
              2bd1 c2b2  st   [$b2]       12039  st([0xB2])                      #25
              2bd2 0500  ld   [x]         12040  ld([X])                         #26 src.3
              2bd3 c2b3  st   [$b3]       12041  st([0xB3])                      #27
              2bd4 112b  ld   [$2b],x     12042  ld([sysArgs+7],X)               #28
              2bd5 0500  ld   [x]         12043  ld([X])                         #29 dst.0
              2bd6 21b0  anda [$b0]       12044  anda([0xB0])                    #30
              2bd7 de00  st   [y,x++]     12045  st([Y,Xpp])                     #31 dst.0 &= src.0
              2bd8 0500  ld   [x]         12046  ld([X])                         #32 dst.1
              2bd9 21b1  anda [$b1]       12047  anda([0xB1])                    #33
              2bda de00  st   [y,x++]     12048  st([Y,Xpp])                     #34 dst.1 &= src.1
              2bdb 0500  ld   [x]         12049  ld([X])                         #35 dst.2
              2bdc 21b2  anda [$b2]       12050  anda([0xB2])                    #36
              2bdd de00  st   [y,x++]     12051  st([Y,Xpp])                     #37 dst.2 &= src.2
              2bde 0500  ld   [x]         12052  ld([X])                         #38 dst.3
              2bdf 21b3  anda [$b3]       12053  anda([0xB3])                    #39
              2be0 de00  st   [y,x++]     12054  st([Y,Xpp])                     #40 dst.3 &= src.3
              2be1 1403  ld   $03,y       12055  ld(hi('REENTER'),Y)             #41
              2be2 e0cb  jmp  y,$cb       12056  jmp(Y,'REENTER')                #42
              2be3 00e9  ld   $e9         12057  ld(-46/2)                       #43
                                          12058
                                          12059  label('.andvl#18')
.andvl#18:    2be4 0021  ld   $21         12060  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2be5 c202  st   [$02]       12061  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2be6 9401  adda $01,y       12062  adda(1,Y)                       #20 retry instruction
              2be7 e000  jmp  y,$00       12063  jmp(Y,'NEXTY')                  #21
              2be8 00f4  ld   $f4         12064  ld(-24/2)                       #22
                                          12065
                                          12066
              2be9 0200  nop              12067  fillers(until=0xff)
              2bea 0200  nop
              2beb 0200  nop
              * 22 times
              2bff 0200  nop              12068  align(0x100, size=0x100)
                                          12069
                                          12070  #-----------------------------------------------------------------------
                                          12071  #       More vCPU instruction implementations, (0x2C00)
                                          12072  #-----------------------------------------------------------------------
                                          12073  #
                                          12074  # ORVL
                                          12075  label('orvl#13')
orvl#13:      2c00 1400  ld   $00,y       12076  ld(0,Y)                         #13
              2c01 00f8  ld   $f8         12077  ld(min(0,maxTicks-46/2))        #14
              2c02 8115  adda [$15]       12078  adda([vTicks])                  #15
              2c03 e81f  blt  .orvl#18    12079  blt('.orvl#18')                 #16 not enough time left, so retry
              2c04 0d00  ld   [y,x]       12080  ld([Y,X])                       #17 src.0
              2c05 de00  st   [y,x++]     12081  st([Y,Xpp])                     #18
              2c06 c2b0  st   [$b0]       12082  st([0xB0])                      #19
              2c07 0d00  ld   [y,x]       12083  ld([Y,X])                       #20 src.1
              2c08 de00  st   [y,x++]     12084  st([Y,Xpp])                     #21
              2c09 c2b1  st   [$b1]       12085  st([0xB1])                      #22
              2c0a 0d00  ld   [y,x]       12086  ld([Y,X])                       #23 src.2
              2c0b de00  st   [y,x++]     12087  st([Y,Xpp])                     #24
              2c0c c2b2  st   [$b2]       12088  st([0xB2])                      #25
              2c0d 0500  ld   [x]         12089  ld([X])                         #26 src.3
              2c0e c2b3  st   [$b3]       12090  st([0xB3])                      #27
              2c0f 112b  ld   [$2b],x     12091  ld([sysArgs+7],X)               #28
              2c10 0500  ld   [x]         12092  ld([X])                         #29 dst.0
              2c11 41b0  ora  [$b0]       12093  ora([0xB0])                     #30
              2c12 de00  st   [y,x++]     12094  st([Y,Xpp])                     #31 dst.0 |= src.0
              2c13 0500  ld   [x]         12095  ld([X])                         #32 dst.1
              2c14 41b1  ora  [$b1]       12096  ora([0xB1])                     #33
              2c15 de00  st   [y,x++]     12097  st([Y,Xpp])                     #34 dst.1 |= src.1
              2c16 0500  ld   [x]         12098  ld([X])                         #35 dst.2
              2c17 41b2  ora  [$b2]       12099  ora([0xB2])                     #36
              2c18 de00  st   [y,x++]     12100  st([Y,Xpp])                     #37 dst.2 |= src.2
              2c19 0500  ld   [x]         12101  ld([X])                         #38 dst.3
              2c1a 41b3  ora  [$b3]       12102  ora([0xB3])                     #39
              2c1b de00  st   [y,x++]     12103  st([Y,Xpp])                     #40 dst.3 |= src.3
              2c1c 1403  ld   $03,y       12104  ld(hi('REENTER'),Y)             #41
              2c1d e0cb  jmp  y,$cb       12105  jmp(Y,'REENTER')                #42
              2c1e 00e9  ld   $e9         12106  ld(-46/2)                       #43
                                          12107
                                          12108  label('.orvl#18')
.orvl#18:     2c1f 0021  ld   $21         12109  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c20 c202  st   [$02]       12110  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c21 9401  adda $01,y       12111  adda(1,Y)                       #20 retry instruction
              2c22 e000  jmp  y,$00       12112  jmp(Y,'NEXTY')                  #21
              2c23 00f4  ld   $f4         12113  ld(-24/2)                       #22
                                          12114
                                          12115
                                          12116  # XORVL
                                          12117  label('xorvl#13')
xorvl#13:     2c24 1400  ld   $00,y       12118  ld(0,Y)                         #13
              2c25 00f8  ld   $f8         12119  ld(min(0,maxTicks-46/2))        #14
              2c26 8115  adda [$15]       12120  adda([vTicks])                  #15
              2c27 e843  blt  .xorvl#18   12121  blt('.xorvl#18')                #16 not enough time left, so retry
              2c28 0d00  ld   [y,x]       12122  ld([Y,X])                       #17 src.0
              2c29 de00  st   [y,x++]     12123  st([Y,Xpp])                     #18
              2c2a c2b0  st   [$b0]       12124  st([0xB0])                      #19
              2c2b 0d00  ld   [y,x]       12125  ld([Y,X])                       #20 src.1
              2c2c de00  st   [y,x++]     12126  st([Y,Xpp])                     #21
              2c2d c2b1  st   [$b1]       12127  st([0xB1])                      #22
              2c2e 0d00  ld   [y,x]       12128  ld([Y,X])                       #23 src.2
              2c2f de00  st   [y,x++]     12129  st([Y,Xpp])                     #24
              2c30 c2b2  st   [$b2]       12130  st([0xB2])                      #25
              2c31 0500  ld   [x]         12131  ld([X])                         #26 src.3
              2c32 c2b3  st   [$b3]       12132  st([0xB3])                      #27
              2c33 112b  ld   [$2b],x     12133  ld([sysArgs+7],X)               #28
              2c34 0500  ld   [x]         12134  ld([X])                         #29 dst.0
              2c35 61b0  xora [$b0]       12135  xora([0xB0])                    #30
              2c36 de00  st   [y,x++]     12136  st([Y,Xpp])                     #31 dst.0 ^= src.0
              2c37 0500  ld   [x]         12137  ld([X])                         #32 dst.1
              2c38 61b1  xora [$b1]       12138  xora([0xB1])                    #33
              2c39 de00  st   [y,x++]     12139  st([Y,Xpp])                     #34 dst.1 ^= src.1
              2c3a 0500  ld   [x]         12140  ld([X])                         #35 dst.2
              2c3b 61b2  xora [$b2]       12141  xora([0xB2])                    #36
              2c3c de00  st   [y,x++]     12142  st([Y,Xpp])                     #37 dst.2 ^= src.2
              2c3d 0500  ld   [x]         12143  ld([X])                         #38 dst.3
              2c3e 61b3  xora [$b3]       12144  xora([0xB3])                    #39
              2c3f de00  st   [y,x++]     12145  st([Y,Xpp])                     #40 dst.3 ^= src.3
              2c40 1403  ld   $03,y       12146  ld(hi('REENTER'),Y)             #41
              2c41 e0cb  jmp  y,$cb       12147  jmp(Y,'REENTER')                #42
              2c42 00e9  ld   $e9         12148  ld(-46/2)                       #43
                                          12149
                                          12150  label('.xorvl#18')
.xorvl#18:    2c43 0021  ld   $21         12151  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c44 c202  st   [$02]       12152  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c45 9401  adda $01,y       12153  adda(1,Y)                       #20 retry instruction
              2c46 e000  jmp  y,$00       12154  jmp(Y,'NEXTY')                  #21
              2c47 00f4  ld   $f4         12155  ld(-24/2)                       #22
                                          12156
                                          12157
                                          12158  # LSRV implementation
                                          12159  label('lsrv#13')
lsrv#13:      2c48 d22b  st   [$2b],x     12160  st([sysArgs+7],X)               #13 var
              2c49 00f3  ld   $f3         12161  ld(min(0,maxTicks-56/2))        #14
              2c4a 8115  adda [$15]       12162  adda([vTicks])                  #15
              2c4b e865  blt  .lsrv#18    12163  blt('.lsrv#18')                 #16 not enough time left, so retry
              2c4c 1405  ld   $05,y       12164  ld(hi('shiftTable'),Y)          #17 (ac >> 1) table
              2c4d 00cc  ld   $cc         12165  ld('.lsrv#27')                  #18 continuation address
              2c4e c21d  st   [$1d]       12166  st([vTmp])                      #19
              2c4f 0500  ld   [x]         12167  ld([X])                         #20 load byte from var
              2c50 20fe  anda $fe         12168  anda(0xfe)                      #21
              2c51 e200  jmp  y,ac        12169  jmp(Y,AC)                       #22
              2c52 fcff  bra  $ff         12170  bra(255)                        #23 bra shiftTable+255
                                          12171  # continues in page 0x0600 at label('.lsrv#27') fetching shifted byte from 0x0500
                                          12172
                                          12173  label('.lsrv#30')
.lsrv#30:     2c53 012b  ld   [$2b]       12174  ld([sysArgs+7])                 #30 low byte address
              2c54 8001  adda $01         12175  adda(1)                         #31
              2c55 d22a  st   [$2a],x     12176  st([sysArgs+6],X)               #32 high byte address
              2c56 0500  ld   [x]         12177  ld([X])                         #33 bit 0 of high byte
              2c57 2001  anda $01         12178  anda(1)                         #34
              2c58 807f  adda $7f         12179  adda(127)                       #35
              2c59 2080  anda $80         12180  anda(128)                       #36
              2c5a 112b  ld   [$2b],x     12181  ld([sysArgs+7],X)               #37
              2c5b 4500  ora  [x]         12182  ora([X])                        #38
              2c5c c600  st   [x]         12183  st([X])                         #39 transfer to bit 7 of low byte
              2c5d 1405  ld   $05,y       12184  ld(hi('shiftTable'),Y)          #40 (ac >> 1) table
              2c5e 00cf  ld   $cf         12185  ld('.lsrv#51')                  #41 continuation address
              2c5f c21d  st   [$1d]       12186  st([vTmp])                      #42
              2c60 112a  ld   [$2a],x     12187  ld([sysArgs+6],X)               #43
              2c61 0500  ld   [x]         12188  ld([X])                         #44
              2c62 20fe  anda $fe         12189  anda(0b11111110)                #45
              2c63 e200  jmp  y,ac        12190  jmp(Y,AC)                       #46
              2c64 fcff  bra  $ff         12191  bra(255)                        #47 bra shiftTable+255
                                          12192  # continues in page 0x0600 at label('.lsrv#51') fetching shifted byte from 0x0500
                                          12193
                                          12194  label('.lsrv#18')
.lsrv#18:     2c65 0116  ld   [$16]       12195  ld([vPC])                       #18 retry instruction
              2c66 a002  suba $02         12196  suba(2)                         #19
              2c67 c216  st   [$16]       12197  st([vPC])                       #20
              2c68 1403  ld   $03,y       12198  ld(hi('REENTER'),Y)             #21
              2c69 e0cb  jmp  y,$cb       12199  jmp(Y,'REENTER')                #22
              2c6a 00f3  ld   $f3         12200  ld(-26/2)                       #23
                                          12201
                                          12202
                                          12203  # LSRVL implementation
                                          12204  label('lsrvl#13')
lsrvl#13:     2c6b 1405  ld   $05,y       12205  ld(hi('shiftTable'),Y)          #13 (ac >> 1) table
              2c6c 00db  ld   $db         12206  ld(min(0,maxTicks-104/2))       #14
              2c6d 8115  adda [$15]       12207  adda([vTicks])                  #15
              2c6e e8ab  blt  .lsrvl#18   12208  blt('.lsrvl#18')                #16 not enough time left, so retry
              2c6f 00d3  ld   $d3         12209  ld('.lsrvl#26')                 #17 continuation address
              2c70 c21d  st   [$1d]       12210  st([vTmp])                      #18
              2c71 0500  ld   [x]         12211  ld([X])                         #19 load byte 0 from var
              2c72 20fe  anda $fe         12212  anda(0xfe)                      #20
              2c73 e200  jmp  y,ac        12213  jmp(Y,AC)                       #21
              2c74 fcff  bra  $ff         12214  bra(255)                        #22 bra shiftTable+255
                                          12215  # continues in page 0x0600 at label('.lsrvl#26') fetching shifted byte from 0x0500
                                          12216
                                          12217  label('.lsrvl#29')
.lsrvl#29:    2c75 012b  ld   [$2b]       12218  ld([sysArgs+7])                 #29 byte 0 address
              2c76 8001  adda $01         12219  adda(1)                         #30
              2c77 d2b0  st   [$b0],x     12220  st([0xB0],X)                    #31 byte 1 address
              2c78 8001  adda $01         12221  adda(1)                         #32
              2c79 c2b1  st   [$b1]       12222  st([0xB1])                      #33 byte 2 address
              2c7a 8001  adda $01         12223  adda(1)                         #34
              2c7b c2b2  st   [$b2]       12224  st([0xB2])                      #35 byte 3 address
              2c7c 0500  ld   [x]         12225  ld([X])                         #36 bit 0 of byte 1
              2c7d 2001  anda $01         12226  anda(1)                         #37
              2c7e 807f  adda $7f         12227  adda(127)                       #38
              2c7f 2080  anda $80         12228  anda(128)                       #39
              2c80 112b  ld   [$2b],x     12229  ld([sysArgs+7],X)               #40 byte 0 address
              2c81 4500  ora  [x]         12230  ora([X])                        #41
              2c82 c600  st   [x]         12231  st([X])                         #42 transfer to bit 7 of byte 0
              2c83 1405  ld   $05,y       12232  ld(hi('shiftTable'),Y)          #43 (ac >> 1) table
              2c84 00d6  ld   $d6         12233  ld('.lsrvl#54')                 #44 continuation address
              2c85 c21d  st   [$1d]       12234  st([vTmp])                      #45
              2c86 11b0  ld   [$b0],x     12235  ld([0xB0],X)                    #46 byte 1 address
              2c87 0500  ld   [x]         12236  ld([X])                         #47
              2c88 20fe  anda $fe         12237  anda(0b11111110)                #48
              2c89 e200  jmp  y,ac        12238  jmp(Y,AC)                       #49
              2c8a fcff  bra  $ff         12239  bra(255)                        #50 bra shiftTable+255
                                          12240  # continues in page 0x0600 at label('.lsrvl#54') fetching shifted byte from 0x0500
                                          12241
                                          12242  label('.lsrvl#57')
.lsrvl#57:    2c8b 11b1  ld   [$b1],x     12243  ld([0xB1],X)                    #57 byte 2 address
              2c8c 0500  ld   [x]         12244  ld([X])                         #58 bit 0 of byte 2
              2c8d 2001  anda $01         12245  anda(1)                         #59
              2c8e 807f  adda $7f         12246  adda(127)                       #60
              2c8f 2080  anda $80         12247  anda(128)                       #61
              2c90 11b0  ld   [$b0],x     12248  ld([0xB0],X)                    #62 byte 1 address
              2c91 4500  ora  [x]         12249  ora([X])                        #63
              2c92 c600  st   [x]         12250  st([X])                         #64 transfer to bit 7 of byte 1
              2c93 1405  ld   $05,y       12251  ld(hi('shiftTable'),Y)          #65 (ac >> 1) table
              2c94 00d9  ld   $d9         12252  ld('.lsrvl#76')                 #66 continuation address
              2c95 c21d  st   [$1d]       12253  st([vTmp])                      #67
              2c96 11b1  ld   [$b1],x     12254  ld([0xB1],X)                    #68 byte 2 address
              2c97 0500  ld   [x]         12255  ld([X])                         #69
              2c98 20fe  anda $fe         12256  anda(0b11111110)                #70
              2c99 e200  jmp  y,ac        12257  jmp(Y,AC)                       #71
              2c9a fcff  bra  $ff         12258  bra(255)                        #72 bra shiftTable+255
                                          12259  # continues in page 0x0600 at label('.lsrvl#76') fetching shifted byte from 0x0500
                                          12260
                                          12261  label('.lsrvl#79')
.lsrvl#79:    2c9b 11b2  ld   [$b2],x     12262  ld([0xB2],X)                    #79 byte 3 address
              2c9c 0500  ld   [x]         12263  ld([X])                         #80 bit 0 of byte 3
              2c9d 2001  anda $01         12264  anda(1)                         #81
              2c9e 807f  adda $7f         12265  adda(127)                       #82
              2c9f 2080  anda $80         12266  anda(128)                       #83
              2ca0 11b1  ld   [$b1],x     12267  ld([0xB1],X)                    #84 byte 2 address
              2ca1 4500  ora  [x]         12268  ora([X])                        #85
              2ca2 c600  st   [x]         12269  st([X])                         #86 transfer to bit 7 of byte 2
              2ca3 1405  ld   $05,y       12270  ld(hi('shiftTable'),Y)          #87 (ac >> 1) table
              2ca4 00dc  ld   $dc         12271  ld('.lsrvl#98')                 #88 continuation address
              2ca5 c21d  st   [$1d]       12272  st([vTmp])                      #89
              2ca6 11b2  ld   [$b2],x     12273  ld([0xB2],X)                    #90 byte 3 address
              2ca7 0500  ld   [x]         12274  ld([X])                         #91
              2ca8 20fe  anda $fe         12275  anda(0b11111110)                #92
              2ca9 e200  jmp  y,ac        12276  jmp(Y,AC)                       #93
              2caa fcff  bra  $ff         12277  bra(255)                        #94 bra shiftTable+255
                                          12278  # continues in page 0x0600 at label('.lsrvl#98') fetching shifted byte from 0x0500
                                          12279
                                          12280  label('.lsrvl#18')
.lsrvl#18:    2cab 0022  ld   $22         12281  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cac c202  st   [$02]       12282  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2cad 9401  adda $01,y       12283  adda(1,Y)                       #20 retry instruction
              2cae e000  jmp  y,$00       12284  jmp(Y,'NEXTY')                  #21
              2caf 00f4  ld   $f4         12285  ld(-24/2)                       #22
                                          12286
                                          12287
                                          12288  # LSLVL implementation
                                          12289  label('lslvl#13')
lslvl#13:     2cb0 1400  ld   $00,y       12290  ld(0,Y)                         #13
              2cb1 00f3  ld   $f3         12291  ld(min(0,maxTicks-56/2))        #14
              2cb2 8115  adda [$15]       12292  adda([vTicks])                  #15
              2cb3 e8de  blt  .lslvl#18   12293  blt('.lslvl#18')                #16 not enough time left, so retry
              2cb4 0500  ld   [x]         12294  ld([X])                         #17
              2cb5 f4b8  bge  $2cb8       12295  bge(pc()+3)                     #18
              2cb6 fcb9  bra  $2cb9       12296  bra(pc()+3)                     #19
              2cb7 0001  ld   $01         12297  ld(1)                           #20
              2cb8 0000  ld   $00         12298  ld(0)                           #20
              2cb9 c2b0  st   [$b0]       12299  st([0xB0])                      #21 (var.0 & 0x80) >>7
              2cba 0500  ld   [x]         12300  ld([X])                         #22
              2cbb 8500  adda [x]         12301  adda([X])                       #23
              2cbc de00  st   [y,x++]     12302  st([Y,Xpp])                     #24 var.0 <<1
              2cbd 0500  ld   [x]         12303  ld([X])                         #25
              2cbe f4c1  bge  $2cc1       12304  bge(pc()+3)                     #26
              2cbf fcc2  bra  $2cc2       12305  bra(pc()+3)                     #27
              2cc0 0001  ld   $01         12306  ld(1)                           #28
              2cc1 0000  ld   $00         12307  ld(0)                           #28
              2cc2 c2b1  st   [$b1]       12308  st([0xB1])                      #29 (var.1 & 0x80) >>7
              2cc3 0500  ld   [x]         12309  ld([X])                         #30
              2cc4 8500  adda [x]         12310  adda([X])                       #31
              2cc5 41b0  ora  [$b0]       12311  ora([0xB0])                     #32
              2cc6 de00  st   [y,x++]     12312  st([Y,Xpp])                     #33 (var.1 <<1) | [0xB0]
              2cc7 0500  ld   [x]         12313  ld([X])                         #34
              2cc8 f4cb  bge  $2ccb       12314  bge(pc()+3)                     #35
              2cc9 fccc  bra  $2ccc       12315  bra(pc()+3)                     #36
              2cca 0001  ld   $01         12316  ld(1)                           #37
              2ccb 0000  ld   $00         12317  ld(0)                           #37
              2ccc c2b0  st   [$b0]       12318  st([0xB0])                      #38 (var.2 & 0x80) >>7
              2ccd 0500  ld   [x]         12319  ld([X])                         #39
              2cce 8500  adda [x]         12320  adda([X])                       #40
              2ccf 41b1  ora  [$b1]       12321  ora([0xB1])                     #41
              2cd0 de00  st   [y,x++]     12322  st([Y,Xpp])                     #42 (var.2 <<1) | [0xB1]
              2cd1 0500  ld   [x]         12323  ld([X])                         #43
              2cd2 f4d5  bge  $2cd5       12324  bge(pc()+3)                     #44
              2cd3 fcd6  bra  $2cd6       12325  bra(pc()+3)                     #45
              2cd4 0001  ld   $01         12326  ld(1)                           #46
              2cd5 0000  ld   $00         12327  ld(0)                           #46
              2cd6 c2b1  st   [$b1]       12328  st([0xB1])                      #47 (var.3 & 0x80) >>7
              2cd7 0500  ld   [x]         12329  ld([X])                         #48
              2cd8 8500  adda [x]         12330  adda([X])                       #49
              2cd9 41b0  ora  [$b0]       12331  ora([0xB0])                     #50
              2cda de00  st   [y,x++]     12332  st([Y,Xpp])                     #51 (var.3 <<1) | [0xB0]
              2cdb 1403  ld   $03,y       12333  ld(hi('NEXTY'),Y)               #52
              2cdc e000  jmp  y,$00       12334  jmp(Y,'NEXTY')                  #53
              2cdd 00e4  ld   $e4         12335  ld(-56/2)                       #54
                                          12336
                                          12337  label('.lslvl#18')
.lslvl#18:    2cde 0022  ld   $22         12338  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cdf c202  st   [$02]       12339  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2ce0 9401  adda $01,y       12340  adda(1,Y)                       #20 retry instruction
              2ce1 e000  jmp  y,$00       12341  jmp(Y,'NEXTY')                  #21
              2ce2 00f4  ld   $f4         12342  ld(-24/2)                       #22
                                          12343
                                          12344
              2ce3 0200  nop              12345  fillers(until=0xff)
              2ce4 0200  nop
              2ce5 0200  nop
              * 28 times
              2cff 0200  nop              12346  align(0x100, size=0x100)
                                          12347
                                          12348  #-----------------------------------------------------------------------
                                          12349  #       More vCPU instruction implementations, (0x2D00)
                                          12350  #-----------------------------------------------------------------------
                                          12351  #
                                          12352  # JEQL implementation
                                          12353  label('jeql#13')
jeql#13:      2d00 1519  ld   [$19],y     12354  ld([vAC+1],Y)                   #13
              2d01 00fb  ld   $fb         12355  ld(min(0,maxTicks-40/2))        #14
              2d02 8115  adda [$15]       12356  adda([vTicks])                  #15
              2d03 e81d  blt  .jeql#18    12357  blt('.jeql#18')                 #16 not enough time left, so retry
              2d04 1118  ld   [$18],x     12358  ld([vAC],X)                     #17
              2d05 0d00  ld   [y,x]       12359  ld([Y,X])                       #18
              2d06 de00  st   [y,x++]     12360  st([Y,Xpp])                     #19
              2d07 c2b0  st   [$b0]       12361  st([0xB0])                      #20 [vAC].0
              2d08 0d00  ld   [y,x]       12362  ld([Y,X])                       #21
              2d09 de00  st   [y,x++]     12363  st([Y,Xpp])                     #22
              2d0a c2b1  st   [$b1]       12364  st([0xB1])                      #23 [vAC].1
              2d0b 0d00  ld   [y,x]       12365  ld([Y,X])                       #24
              2d0c de00  st   [y,x++]     12366  st([Y,Xpp])                     #25
              2d0d c2b2  st   [$b2]       12367  st([0xB2])                      #26 [vAC].2
              2d0e 0d00  ld   [y,x]       12368  ld([Y,X])                       #27 [vAC].3
              2d0f 41b2  ora  [$b2]       12369  ora([0xB2])                     #28
              2d10 41b1  ora  [$b1]       12370  ora([0xB1])                     #29
              2d11 41b0  ora  [$b0]       12371  ora([0xB0])                     #30
              2d12 ec1a  bne  .jeql#33    12372  bne('.jeql#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d13 012b  ld   [$2b]       12373  ld([sysArgs+7])                 #32 address of branch destination
              2d14 c216  st   [$16]       12374  st([vPC])                       #33
              2d15 012a  ld   [$2a]       12375  ld([sysArgs+6])                 #34
              2d16 c217  st   [$17]       12376  st([vPC+1])                     #35
              2d17 1403  ld   $03,y       12377  ld(hi('NEXTY'),Y)               #36
              2d18 e000  jmp  y,$00       12378  jmp(Y,'NEXTY')                  #37
              2d19 00ec  ld   $ec         12379  ld(-40/2)                       #38
                                          12380
                                          12381  label('.jeql#33')
.jeql#33:     2d1a 1403  ld   $03,y       12382  ld(hi('REENTER'),Y)             #33
              2d1b e0cb  jmp  y,$cb       12383  jmp(Y,'REENTER')                #34
              2d1c 00ed  ld   $ed         12384  ld(-38/2)                       #35
                                          12385
                                          12386  label('.jeql#18')
.jeql#18:     2d1d 0021  ld   $21         12387  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d1e c202  st   [$02]       12388  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d1f 9401  adda $01,y       12389  adda(1,Y)                       #20 retry instruction
              2d20 e000  jmp  y,$00       12390  jmp(Y,'NEXTY')                  #21
              2d21 00f4  ld   $f4         12391  ld(-24/2)                       #22
                                          12392
                                          12393
                                          12394  # JNEL implementation
                                          12395  label('jnel#13')
jnel#13:      2d22 1519  ld   [$19],y     12396  ld([vAC+1],Y)                   #13
              2d23 00fb  ld   $fb         12397  ld(min(0,maxTicks-40/2))        #14
              2d24 8115  adda [$15]       12398  adda([vTicks])                  #15
              2d25 e83f  blt  .jnel#18    12399  blt('.jnel#18')                 #16 not enough time left, so retry
              2d26 1118  ld   [$18],x     12400  ld([vAC],X)                     #17
              2d27 0d00  ld   [y,x]       12401  ld([Y,X])                       #18
              2d28 de00  st   [y,x++]     12402  st([Y,Xpp])                     #19
              2d29 c2b0  st   [$b0]       12403  st([0xB0])                      #20 [vAC].0
              2d2a 0d00  ld   [y,x]       12404  ld([Y,X])                       #21
              2d2b de00  st   [y,x++]     12405  st([Y,Xpp])                     #22
              2d2c c2b1  st   [$b1]       12406  st([0xB1])                      #23 [vAC].1
              2d2d 0d00  ld   [y,x]       12407  ld([Y,X])                       #24
              2d2e de00  st   [y,x++]     12408  st([Y,Xpp])                     #25
              2d2f c2b2  st   [$b2]       12409  st([0xB2])                      #26 [vAC].2
              2d30 0d00  ld   [y,x]       12410  ld([Y,X])                       #27 [vAC].3
              2d31 41b2  ora  [$b2]       12411  ora([0xB2])                     #28
              2d32 41b1  ora  [$b1]       12412  ora([0xB1])                     #29
              2d33 41b0  ora  [$b0]       12413  ora([0xB0])                     #30
              2d34 f03c  beq  .jnel#33    12414  beq('.jnel#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d35 012b  ld   [$2b]       12415  ld([sysArgs+7])                 #32 address of branch destination
              2d36 c216  st   [$16]       12416  st([vPC])                       #33
              2d37 012a  ld   [$2a]       12417  ld([sysArgs+6])                 #34
              2d38 c217  st   [$17]       12418  st([vPC+1])                     #35
              2d39 1403  ld   $03,y       12419  ld(hi('NEXTY'),Y)               #36
              2d3a e000  jmp  y,$00       12420  jmp(Y,'NEXTY')                  #37
              2d3b 00ec  ld   $ec         12421  ld(-40/2)                       #38
                                          12422
                                          12423  label('.jnel#33')
.jnel#33:     2d3c 1403  ld   $03,y       12424  ld(hi('REENTER'),Y)             #33
              2d3d e0cb  jmp  y,$cb       12425  jmp(Y,'REENTER')                #34
              2d3e 00ed  ld   $ed         12426  ld(-38/2)                       #35
                                          12427
                                          12428  label('.jnel#18')
.jnel#18:     2d3f 0021  ld   $21         12429  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d40 c202  st   [$02]       12430  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d41 9401  adda $01,y       12431  adda(1,Y)                       #20 retry instruction
              2d42 e000  jmp  y,$00       12432  jmp(Y,'NEXTY')                  #21
              2d43 00f4  ld   $f4         12433  ld(-24/2)                       #22
                                          12434
                                          12435
                                          12436  # JLTL implementation
                                          12437  label('jltl#13')
jltl#13:      2d44 1519  ld   [$19],y     12438  ld([vAC+1],Y)                   #13
              2d45 0118  ld   [$18]       12439  ld([vAC])                       #14
              2d46 9003  adda $03,x       12440  adda(3,X)                       #15
              2d47 0d00  ld   [y,x]       12441  ld([Y,X])                       #16
              2d48 e84d  blt  .jltl#19    12442  blt('.jltl#19')                 #17 if [vAC.3] < 0
              2d49 012b  ld   [$2b]       12443  ld([sysArgs+7])                 #18 address of branch destination
              2d4a 1403  ld   $03,y       12444  ld(hi('REENTER'),Y)             #19
              2d4b e0cb  jmp  y,$cb       12445  jmp(Y,'REENTER')                #20
              2d4c 00f4  ld   $f4         12446  ld(-24/2)                       #21
                                          12447
                                          12448  label('.jltl#19')
.jltl#19:     2d4d c216  st   [$16]       12449  st([vPC])                       #19
              2d4e 012a  ld   [$2a]       12450  ld([sysArgs+6])                 #20
              2d4f c217  st   [$17]       12451  st([vPC+1])                     #21
              2d50 1403  ld   $03,y       12452  ld(hi('NEXTY'),Y)               #22
              2d51 e000  jmp  y,$00       12453  jmp(Y,'NEXTY')                  #23
              2d52 00f3  ld   $f3         12454  ld(-26/2)                       #24
                                          12455
                                          12456
                                          12457  # JGTL implementation
                                          12458  label('jgtl#13')
jgtl#13:      2d53 1519  ld   [$19],y     12459  ld([vAC+1],Y)                   #13
              2d54 00fa  ld   $fa         12460  ld(min(0,maxTicks-42/2))        #14
              2d55 8115  adda [$15]       12461  adda([vTicks])                  #15
              2d56 e875  blt  .jgtl#18    12462  blt('.jgtl#18')                 #16 not enough time left, so retry
              2d57 1118  ld   [$18],x     12463  ld([vAC],X)                     #17
              2d58 0d00  ld   [y,x]       12464  ld([Y,X])                       #18
              2d59 de00  st   [y,x++]     12465  st([Y,Xpp])                     #19
              2d5a c2b0  st   [$b0]       12466  st([0xB0])                      #20 [vAC].0
              2d5b 0d00  ld   [y,x]       12467  ld([Y,X])                       #21
              2d5c de00  st   [y,x++]     12468  st([Y,Xpp])                     #22
              2d5d c2b1  st   [$b1]       12469  st([0xB1])                      #23 [vAC].1
              2d5e 0d00  ld   [y,x]       12470  ld([Y,X])                       #24
              2d5f de00  st   [y,x++]     12471  st([Y,Xpp])                     #25
              2d60 c2b2  st   [$b2]       12472  st([0xB2])                      #26 [vAC].2
              2d61 0d00  ld   [y,x]       12473  ld([Y,X])                       #27
              2d62 c2b3  st   [$b3]       12474  st([0xB3])                      #28 [vAC].3
              2d63 e86c  blt  .jgtl#31    12475  blt('.jgtl#31')                 #29 if [vAC.3] < 0
              2d64 41b2  ora  [$b2]       12476  ora([0xB2])                     #30
              2d65 41b1  ora  [$b1]       12477  ora([0xB1])                     #31
              2d66 41b0  ora  [$b0]       12478  ora([0xB0])                     #32
              2d67 ec6f  bne  .jgtl#35    12479  bne('.jgtl#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d68 012b  ld   [$2b]       12480  ld([sysArgs+7])                 #34 address of branch destination
              2d69 1403  ld   $03,y       12481  ld(hi('REENTER'),Y)             #35
              2d6a e0cb  jmp  y,$cb       12482  jmp(Y,'REENTER')                #36
              2d6b 00ec  ld   $ec         12483  ld(-40/2)                       #37
                                          12484
                                          12485  label('.jgtl#31')
.jgtl#31:     2d6c 1403  ld   $03,y       12486  ld(hi('REENTER'),Y)             #31
              2d6d e0cb  jmp  y,$cb       12487  jmp(Y,'REENTER')                #32
              2d6e 00ee  ld   $ee         12488  ld(-36/2)                       #33
                                          12489
                                          12490  label('.jgtl#35')
.jgtl#35:     2d6f c216  st   [$16]       12491  st([vPC])                       #35
              2d70 012a  ld   [$2a]       12492  ld([sysArgs+6])                 #36
              2d71 c217  st   [$17]       12493  st([vPC+1])                     #37
              2d72 1403  ld   $03,y       12494  ld(hi('NEXTY'),Y)               #38
              2d73 e000  jmp  y,$00       12495  jmp(Y,'NEXTY')                  #39
              2d74 00eb  ld   $eb         12496  ld(-42/2)                       #40
                                          12497
                                          12498  label('.jgtl#18')
.jgtl#18:     2d75 0021  ld   $21         12499  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d76 c202  st   [$02]       12500  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d77 9401  adda $01,y       12501  adda(1,Y)                       #20 retry instruction
              2d78 e000  jmp  y,$00       12502  jmp(Y,'NEXTY')                  #21
              2d79 00f4  ld   $f4         12503  ld(-24/2)                       #22
                                          12504
                                          12505
                                          12506  # JLEL implementation
                                          12507  label('jlel#13')
jlel#13:      2d7a 1519  ld   [$19],y     12508  ld([vAC+1],Y)                   #13
              2d7b 00fa  ld   $fa         12509  ld(min(0,maxTicks-42/2))        #14
              2d7c 8115  adda [$15]       12510  adda([vTicks])                  #15
              2d7d e8a0  blt  .jlel#18    12511  blt('.jlel#18')                 #16 not enough time left, so retry
              2d7e 1118  ld   [$18],x     12512  ld([vAC],X)                     #17
              2d7f 0d00  ld   [y,x]       12513  ld([Y,X])                       #18
              2d80 de00  st   [y,x++]     12514  st([Y,Xpp])                     #19
              2d81 c2b0  st   [$b0]       12515  st([0xB0])                      #20 [vAC].0
              2d82 0d00  ld   [y,x]       12516  ld([Y,X])                       #21
              2d83 de00  st   [y,x++]     12517  st([Y,Xpp])                     #22
              2d84 c2b1  st   [$b1]       12518  st([0xB1])                      #23 [vAC].1
              2d85 0d00  ld   [y,x]       12519  ld([Y,X])                       #24
              2d86 de00  st   [y,x++]     12520  st([Y,Xpp])                     #25
              2d87 c2b2  st   [$b2]       12521  st([0xB2])                      #26 [vAC].2
              2d88 0d00  ld   [y,x]       12522  ld([Y,X])                       #27
              2d89 c2b3  st   [$b3]       12523  st([0xB3])                      #28 [vAC].3
              2d8a e893  blt  .jlel#31    12524  blt('.jlel#31')                 #29 if [vAC.3] < 0
              2d8b 41b2  ora  [$b2]       12525  ora([0xB2])                     #30
              2d8c 41b1  ora  [$b1]       12526  ora([0xB1])                     #31
              2d8d 41b0  ora  [$b0]       12527  ora([0xB0])                     #32
              2d8e f09a  beq  .jlel#35    12528  beq('.jlel#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d8f 012b  ld   [$2b]       12529  ld([sysArgs+7])                 #34 address of branch destination
              2d90 1403  ld   $03,y       12530  ld(hi('REENTER'),Y)             #35
              2d91 e0cb  jmp  y,$cb       12531  jmp(Y,'REENTER')                #36
              2d92 00ec  ld   $ec         12532  ld(-40/2)                       #37
                                          12533
                                          12534  label('.jlel#31')
.jlel#31:     2d93 012b  ld   [$2b]       12535  ld([sysArgs+7])                 #31 address of branch destination
              2d94 c216  st   [$16]       12536  st([vPC])                       #32
              2d95 012a  ld   [$2a]       12537  ld([sysArgs+6])                 #33
              2d96 c217  st   [$17]       12538  st([vPC+1])                     #34
              2d97 1403  ld   $03,y       12539  ld(hi('REENTER'),Y)             #35
              2d98 e0cb  jmp  y,$cb       12540  jmp(Y,'REENTER')                #36
              2d99 00ec  ld   $ec         12541  ld(-40/2)                       #37
                                          12542
                                          12543  label('.jlel#35')
.jlel#35:     2d9a c216  st   [$16]       12544  st([vPC])                       #35
              2d9b 012a  ld   [$2a]       12545  ld([sysArgs+6])                 #36
              2d9c c217  st   [$17]       12546  st([vPC+1])                     #37
              2d9d 1403  ld   $03,y       12547  ld(hi('NEXTY'),Y)               #38
              2d9e e000  jmp  y,$00       12548  jmp(Y,'NEXTY')                  #39
              2d9f 00eb  ld   $eb         12549  ld(-42/2)                       #40
                                          12550
                                          12551  label('.jlel#18')
.jlel#18:     2da0 0021  ld   $21         12552  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2da1 c202  st   [$02]       12553  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2da2 9401  adda $01,y       12554  adda(1,Y)                       #20 retry instruction
              2da3 e000  jmp  y,$00       12555  jmp(Y,'NEXTY')                  #21
              2da4 00f4  ld   $f4         12556  ld(-24/2)                       #22
                                          12557
                                          12558
                                          12559  # JGEL implementation
                                          12560  label('jgel#13')
jgel#13:      2da5 1519  ld   [$19],y     12561  ld([vAC+1],Y)                   #13
              2da6 0118  ld   [$18]       12562  ld([vAC])                       #14
              2da7 9003  adda $03,x       12563  adda(3,X)                       #15
              2da8 0d00  ld   [y,x]       12564  ld([Y,X])                       #16
              2da9 e8b1  blt  .jgel#19    12565  blt('.jgel#19')                 #17 if [vAC.3] < 0
              2daa 012b  ld   [$2b]       12566  ld([sysArgs+7])                 #18 address of branch destination
              2dab c216  st   [$16]       12567  st([vPC])                       #19
              2dac 012a  ld   [$2a]       12568  ld([sysArgs+6])                 #20
              2dad c217  st   [$17]       12569  st([vPC+1])                     #21
              2dae 1403  ld   $03,y       12570  ld(hi('NEXTY'),Y)               #22
              2daf e000  jmp  y,$00       12571  jmp(Y,'NEXTY')                  #23
              2db0 00f3  ld   $f3         12572  ld(-26/2)                       #24
                                          12573
                                          12574  label('.jgel#19')
.jgel#19:     2db1 1403  ld   $03,y       12575  ld(hi('REENTER'),Y)             #19
              2db2 e0cb  jmp  y,$cb       12576  jmp(Y,'REENTER')                #20
              2db3 00f4  ld   $f4         12577  ld(-24/2)                       #21
                                          12578
                                          12579
                                          12580  # LOKEQI implementation
                                          12581  label('lokeqi#13')
lokeqi#13:    2db4 1517  ld   [$17],y     12582  ld([vPC+1],Y)                   #13
              2db5 de00  st   [y,x++]     12583  st([Y,Xpp])                     #14 X++
              2db6 00fe  ld   $fe         12584  ld(min(0,maxTicks-34/2))        #15
              2db7 8115  adda [$15]       12585  adda([vTicks])                  #16
              2db8 e8c8  blt  .lokeqi#19  12586  blt('.lokeqi#19')               #17 not enough time left, so retry
              2db9 0d00  ld   [y,x]       12587  ld([Y,X])                       #18 imm.0
              2dba 1519  ld   [$19],y     12588  ld([vAC+1],Y)                   #19
              2dbb 1118  ld   [$18],x     12589  ld([vAC],X)                     #20
              2dbc de00  st   [y,x++]     12590  st([Y,Xpp])                     #21 [vAC.0] = imm.0, X++
              2dbd 011d  ld   [$1d]       12591  ld([vTmp])                      #22
              2dbe de00  st   [y,x++]     12592  st([Y,Xpp])                     #23 [vAC.1] = imm.1, X++
              2dbf 0000  ld   $00         12593  ld(0)                           #24
              2dc0 de00  st   [y,x++]     12594  st([Y,Xpp])                     #25 [vAC.2] = 0, X++
              2dc1 ce00  st   [y,x]       12595  st([Y,X])                       #26 [vAC.3] = 0
              2dc2 0116  ld   [$16]       12596  ld([vPC])                       #27 fix vPC for 3 byte instruction
              2dc3 8001  adda $01         12597  adda(1)                         #28
              2dc4 c216  st   [$16]       12598  st([vPC])                       #29
              2dc5 1403  ld   $03,y       12599  ld(hi('NEXTY'),Y)               #30
              2dc6 e000  jmp  y,$00       12600  jmp(Y,'NEXTY')                  #31
              2dc7 00ef  ld   $ef         12601  ld(-34/2)                       #32
                                          12602
                                          12603  label('.lokeqi#19')
.lokeqi#19:   2dc8 0116  ld   [$16]       12604  ld([vPC])                       #19 retry
              2dc9 a002  suba $02         12605  suba(2)                         #20
              2dca c216  st   [$16]       12606  st([vPC])                       #21
              2dcb 1403  ld   $03,y       12607  ld(hi('NEXTY'),Y)               #22
              2dcc e000  jmp  y,$00       12608  jmp(Y,'NEXTY')                  #23
              2dcd 00f3  ld   $f3         12609  ld(-26/2)                       #24
                                          12610
                                          12611
                                          12612  # LOKEI implementation
                                          12613  label('lokei#13')
lokei#13:     2dce 1517  ld   [$17],y     12614  ld([vPC+1],Y)                   #13
              2dcf c2b0  st   [$b0]       12615  st([0xB0])                      #14 imm.3
              2dd0 de00  st   [y,x++]     12616  st([Y,Xpp])                     #15 X++
              2dd1 00fa  ld   $fa         12617  ld(min(0,maxTicks-42/2))        #16
              2dd2 8115  adda [$15]       12618  adda([vTicks])                  #17
              2dd3 e8ea  blt  .lokei#20   12619  blt('.lokei#20')                #18 not enough time left, so retry
              2dd4 0d00  ld   [y,x]       12620  ld([Y,X])                       #19
              2dd5 de00  st   [y,x++]     12621  st([Y,Xpp])                     #20 X++
              2dd6 c2b1  st   [$b1]       12622  st([0xB1])                      #21 imm.2
              2dd7 0d00  ld   [y,x]       12623  ld([Y,X])                       #22
              2dd8 de00  st   [y,x++]     12624  st([Y,Xpp])                     #23 X++
              2dd9 c2b2  st   [$b2]       12625  st([0xB2])                      #24 imm.1
              2dda 0d00  ld   [y,x]       12626  ld([Y,X])                       #25 imm.0
              2ddb 1519  ld   [$19],y     12627  ld([vAC+1],Y)                   #26
              2ddc 1118  ld   [$18],x     12628  ld([vAC],X)                     #27
              2ddd de00  st   [y,x++]     12629  st([Y,Xpp])                     #28 [vAC.0] = imm.0, X++
              2dde 01b2  ld   [$b2]       12630  ld([0xB2])                      #29
              2ddf de00  st   [y,x++]     12631  st([Y,Xpp])                     #30 [vAC.1] = imm.1, X++
              2de0 01b1  ld   [$b1]       12632  ld([0xB1])                      #31
              2de1 de00  st   [y,x++]     12633  st([Y,Xpp])                     #32 [vAC.2] = imm.2, X++
              2de2 01b0  ld   [$b0]       12634  ld([0xB0])                      #33
              2de3 ce00  st   [y,x]       12635  st([Y,X])                       #34 [vAC.3] = imm.3
              2de4 0116  ld   [$16]       12636  ld([vPC])                       #35 fix vPC for 5 byte instruction
              2de5 8003  adda $03         12637  adda(3)                         #36
              2de6 c216  st   [$16]       12638  st([vPC])                       #37
              2de7 1403  ld   $03,y       12639  ld(hi('NEXTY'),Y)               #38
              2de8 e000  jmp  y,$00       12640  jmp(Y,'NEXTY')                  #39
              2de9 00eb  ld   $eb         12641  ld(-42/2)                       #40
                                          12642
                                          12643  label('.lokei#20')
.lokei#20:    2dea 0116  ld   [$16]       12644  ld([vPC])                       #20 retry
              2deb a002  suba $02         12645  suba(2)                         #21
              2dec c216  st   [$16]       12646  st([vPC])                       #22
              2ded 1403  ld   $03,y       12647  ld(hi('REENTER'),Y)             #23
              2dee e0cb  jmp  y,$cb       12648  jmp(Y,'REENTER')                #24
              2def 00f2  ld   $f2         12649  ld(-28/2)                       #25
                                          12650
                                          12651
              2df0 0200  nop              12652  fillers(until=0xff)
              2df1 0200  nop
              2df2 0200  nop
              * 15 times
              2dff 0200  nop              12653  align(0x100, size=0x100)
                                          12654
                                          12655  #-----------------------------------------------------------------------
                                          12656  #       More vCPU instruction implementations, (0x2E00)
                                          12657  #-----------------------------------------------------------------------
                                          12658  #
                                          12659  # ANDBI implementation
                                          12660  label('andbi#13')
andbi#13:     2e00 0500  ld   [x]         12661  ld([X])                         #13
              2e01 212b  anda [$2b]       12662  anda([sysArgs+7])               #14 immediate value
              2e02 c600  st   [x]         12663  st([X])                         #15
              2e03 1403  ld   $03,y       12664  ld(hi('NEXTY'),Y)               #16
              2e04 e000  jmp  y,$00       12665  jmp(Y,'NEXTY')                  #17
              2e05 00f6  ld   $f6         12666  ld(-20/2)                       #18
                                          12667
                                          12668  # ORBI implementation
                                          12669  label('orbi#13')
orbi#13:      2e06 0500  ld   [x]         12670  ld([X])                         #13
              2e07 412b  ora  [$2b]       12671  ora([sysArgs+7])                #14 immediate value
              2e08 c600  st   [x]         12672  st([X])                         #15
              2e09 1403  ld   $03,y       12673  ld(hi('NEXTY'),Y)               #16
              2e0a e000  jmp  y,$00       12674  jmp(Y,'NEXTY')                  #17
              2e0b 00f6  ld   $f6         12675  ld(-20/2)                       #18
                                          12676
                                          12677  # XORBI implementation
                                          12678  label('xorbi#13')
xorbi#13:     2e0c 0500  ld   [x]         12679  ld([X])                         #13
              2e0d 612b  xora [$2b]       12680  xora([sysArgs+7])               #14 immediate value
              2e0e c600  st   [x]         12681  st([X])                         #15
              2e0f 1403  ld   $03,y       12682  ld(hi('NEXTY'),Y)               #16
              2e10 e000  jmp  y,$00       12683  jmp(Y,'NEXTY')                  #17
              2e11 00f6  ld   $f6         12684  ld(-20/2)                       #18
                                          12685
                                          12686
                                          12687  # INCL implementation
                                          12688  label('incl#13')
incl#13:      2e12 00fd  ld   $fd         12689  ld(min(0,maxTicks-36/2))        #13
              2e13 8115  adda [$15]       12690  adda([vTicks])                  #14
              2e14 e831  blt  .incl#17    12691  blt('.incl#17')                 #15 not enough time left, so retry
              2e15 1400  ld   $00,y       12692  ld(0,Y)                         #16
              2e16 0500  ld   [x]         12693  ld([X])                         #17
              2e17 8001  adda $01         12694  adda(1)                         #18
              2e18 f01d  beq  .incl#21    12695  beq('.incl#21')                 #19 if 0 byte is 0x00
              2e19 de00  st   [y,x++]     12696  st([Y,Xpp])                     #20 inc 0 byte
              2e1a 1403  ld   $03,y       12697  ld(hi('REENTER'),Y)             #21
              2e1b e0cb  jmp  y,$cb       12698  jmp(Y,'REENTER')                #22
              2e1c 00f3  ld   $f3         12699  ld(-26/2)                       #23
                                          12700
                                          12701  label('.incl#21')
.incl#21:     2e1d 0500  ld   [x]         12702  ld([X])                         #21
              2e1e 8001  adda $01         12703  adda(1)                         #22
              2e1f f024  beq  .incl#25    12704  beq('.incl#25')                 #23 if 1 byte is 0x00
              2e20 de00  st   [y,x++]     12705  st([Y,Xpp])                     #24 inc 1 byte
              2e21 1403  ld   $03,y       12706  ld(hi('REENTER'),Y)             #25
              2e22 e0cb  jmp  y,$cb       12707  jmp(Y,'REENTER')                #26
              2e23 00f1  ld   $f1         12708  ld(-30/2)                       #27
                                          12709
                                          12710  label('.incl#25')
.incl#25:     2e24 0500  ld   [x]         12711  ld([X])                         #25
              2e25 8001  adda $01         12712  adda(1)                         #26
              2e26 f02b  beq  .incl#29    12713  beq('.incl#29')                 #27 if 2 byte is 0x00
              2e27 de00  st   [y,x++]     12714  st([Y,Xpp])                     #28 inc 2 byte
              2e28 1403  ld   $03,y       12715  ld(hi('REENTER'),Y)             #29
              2e29 e0cb  jmp  y,$cb       12716  jmp(Y,'REENTER')                #30
              2e2a 00ef  ld   $ef         12717  ld(-34/2)                       #31
                                          12718
                                          12719  label('.incl#29')
.incl#29:     2e2b 0500  ld   [x]         12720  ld([X])                         #29
              2e2c 8001  adda $01         12721  adda(1)                         #30
              2e2d c600  st   [x]         12722  st([X])                         #31 inc high byte
              2e2e 1403  ld   $03,y       12723  ld(hi('NEXTY'),Y)               #32
              2e2f e000  jmp  y,$00       12724  jmp(Y,'NEXTY')                  #33
              2e30 00ee  ld   $ee         12725  ld(-36/2)                       #34
                                          12726
                                          12727  label('.incl#17')
.incl#17:     2e31 0022  ld   $22         12728  ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2e32 c202  st   [$02]       12729  st([vCpuSelect])                #18 restore PREFX2 instruction page
              2e33 9401  adda $01,y       12730  adda(1,Y)                       #19 retry instruction
              2e34 e0cb  jmp  y,$cb       12731  jmp(Y,'REENTER')                #20
              2e35 00f4  ld   $f4         12732  ld(-24/2)                       #21
                                          12733
                                          12734
                                          12735  # DECL implementation
                                          12736  label('decl#13')
decl#13:      2e36 1200  ld   ac,x        12737  ld(AC,X)                        #13 var
              2e37 00fb  ld   $fb         12738  ld(min(0,maxTicks-40/2))        #14
              2e38 8115  adda [$15]       12739  adda([vTicks])                  #15
              2e39 e859  blt  .decl#18    12740  blt('.decl#18')                 #16 not enough time left, so retry
              2e3a 1400  ld   $00,y       12741  ld(0,Y)                         #17
              2e3b 0500  ld   [x]         12742  ld([X])                         #18
              2e3c a001  suba $01         12743  suba(1)                         #19
              2e3d de00  st   [y,x++]     12744  st([Y,Xpp])                     #20 dec 0 byte
              2e3e 60ff  xora $ff         12745  xora(0xff)                      #21 if 0 byte is 0xff
              2e3f f044  beq  .decl#24    12746  beq('.decl#24')                 #22
              2e40 0500  ld   [x]         12747  ld([X])                         #23
              2e41 1403  ld   $03,y       12748  ld(hi('NEXTY'),Y)               #24
              2e42 e000  jmp  y,$00       12749  jmp(Y,'NEXTY')                  #25
              2e43 00f2  ld   $f2         12750  ld(-28/2)                       #26
                                          12751
                                          12752  label('.decl#24')
.decl#24:     2e44 a001  suba $01         12753  suba(1)                         #24
              2e45 de00  st   [y,x++]     12754  st([Y,Xpp])                     #25 dec 1 byte
              2e46 60ff  xora $ff         12755  xora(0xff)                      #26 if 1 byte is 0xff
              2e47 f04c  beq  .decl#29    12756  beq('.decl#29')                 #27
              2e48 0500  ld   [x]         12757  ld([X])                         #28
              2e49 1403  ld   $03,y       12758  ld(hi('REENTER'),Y)             #29
              2e4a e0cb  jmp  y,$cb       12759  jmp(Y,'REENTER')                #30
              2e4b 00ef  ld   $ef         12760  ld(-34/2)                       #31
                                          12761
                                          12762  label('.decl#29')
.decl#29:     2e4c a001  suba $01         12763  suba(1)                         #29
              2e4d de00  st   [y,x++]     12764  st([Y,Xpp])                     #30 dec 2 byte
              2e4e 60ff  xora $ff         12765  xora(0xff)                      #31 if 2 byte is 0xff
              2e4f f054  beq  .decl#34    12766  beq('.decl#34')                 #32
              2e50 0500  ld   [x]         12767  ld([X])                         #33
              2e51 1403  ld   $03,y       12768  ld(hi('NEXTY'),Y)               #34
              2e52 e000  jmp  y,$00       12769  jmp(Y,'NEXTY')                  #35
              2e53 00ed  ld   $ed         12770  ld(-38/2)                       #36
                                          12771
                                          12772  label('.decl#34')
.decl#34:     2e54 a001  suba $01         12773  suba(1)                         #34
              2e55 c600  st   [x]         12774  st([X])                         #35 dec 3 byte
              2e56 1403  ld   $03,y       12775  ld(hi('NEXTY'),Y)               #36
              2e57 e000  jmp  y,$00       12776  jmp(Y,'NEXTY')                  #37
              2e58 00ec  ld   $ec         12777  ld(-40/2)                       #38
                                          12778
                                          12779  label('.decl#18')
.decl#18:     2e59 0022  ld   $22         12780  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2e5a c202  st   [$02]       12781  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2e5b 9401  adda $01,y       12782  adda(1,Y)                       #20 retry instruction
              2e5c e000  jmp  y,$00       12783  jmp(Y,'NEXTY')                  #21
              2e5d 00f4  ld   $f4         12784  ld(-24/2)                       #22
                                          12785
                                          12786
                                          12787
              2e5e 0200  nop              12788  fillers(until=0xff)
              2e5f 0200  nop
              2e60 0200  nop
              * 161 times
              2eff 0200  nop              12789  align(0x100, size=0x100)
                                          12790
                                          12791  #-----------------------------------------------------------------------
                                          12792  #  Implementation of SYS_CopyMemory[Ext], (0x2F00)
                                          12793  #-----------------------------------------------------------------------
                                          12794
                                          12795  # SYS_CopyMemory_vX_80 implementation
                                          12796
                                          12797  label('sys_CopyMemory')
sys_CopyMemory:
              2f00 f83e  ble  .sysCm#20   12798  ble('.sysCm#20')                     #18   goto burst6
              2f01 a006  suba $06         12799  suba(6)                              #19
              2f02 f440  bge  .sysCm#22   12800  bge('.sysCm#22')                     #20   goto burst6
              2f03 1527  ld   [$27],y     12801  ld([sysArgs+3],Y)                    #21
              2f04 8003  adda $03         12802  adda(3)                              #22
              2f05 f41d  bge  .sysCm#25   12803  bge('.sysCm#25')                     #23   goto burst3
              2f06 1126  ld   [$26],x     12804  ld([sysArgs+2],X)                    #24
                                          12805
              2f07 8002  adda $02         12806  adda(2)                              #25   single
              2f08 c218  st   [$18]       12807  st([vAC])                            #26
              2f09 0d00  ld   [y,x]       12808  ld([Y,X])                            #27
              2f0a 1525  ld   [$25],y     12809  ld([sysArgs+1],Y)                    #28
              2f0b 1124  ld   [$24],x     12810  ld([sysArgs+0],X)                    #29
              2f0c ce00  st   [y,x]       12811  st([Y,X])                            #30
              2f0d 0124  ld   [$24]       12812  ld([sysArgs+0])                      #31
              2f0e 8001  adda $01         12813  adda(1)                              #32
              2f0f c224  st   [$24]       12814  st([sysArgs+0])                      #33
              2f10 0126  ld   [$26]       12815  ld([sysArgs+2])                      #34
              2f11 8001  adda $01         12816  adda(1)                              #35
              2f12 c226  st   [$26]       12817  st([sysArgs+2])                      #36
              2f13 0118  ld   [$18]       12818  ld([vAC])                            #37
              2f14 f017  beq  $2f17       12819  beq(pc()+3)                          #38
              2f15 fc18  bra  $2f18       12820  bra(pc()+3)                          #39
              2f16 00fe  ld   $fe         12821  ld(-2)                               #40
              2f17 0000  ld   $00         12822  ld(0)                                #40!
              2f18 8116  adda [$16]       12823  adda([vPC])                          #41
              2f19 c216  st   [$16]       12824  st([vPC])                            #42
              2f1a 1403  ld   $03,y       12825  ld(hi('REENTER'),Y)                  #43
              2f1b e0cb  jmp  y,$cb       12826  jmp(Y,'REENTER')                     #44
              2f1c 00e8  ld   $e8         12827  ld(-48/2)                            #45
                                          12828
                                          12829  label('.sysCm#25')
.sysCm#25:    2f1d c218  st   [$18]       12830  st([vAC])                            #25   burst3
                                          12831  for i in range(3):
              2f1e 0d00  ld   [y,x]       12832    ld([Y,X])                            #26+3*i
              2f1f c228  st   [$28]       12833    st([sysArgs+4+i])                    #27+3*i
              2f20 de00  st   [y,x++]     12834    st([Y,Xpp]) if i<2 else None         #28+3*i
              2f21 0d00  ld   [y,x]
              2f22 c229  st   [$29]
              2f23 de00  st   [y,x++]
              2f24 0d00  ld   [y,x]
              2f25 c22a  st   [$2a]
              2f26 1525  ld   [$25],y     12835  ld([sysArgs+1],Y)                    #34
              2f27 1124  ld   [$24],x     12836  ld([sysArgs+0],X)                    #35
                                          12837  for i in range(3):
              2f28 0128  ld   [$28]       12838    ld([sysArgs+4+i])                    #36+2*i
              2f29 de00  st   [y,x++]     12839    st([Y,Xpp])                          #37+2*i
              2f2a 0129  ld   [$29]
              2f2b de00  st   [y,x++]
              2f2c 012a  ld   [$2a]
              2f2d de00  st   [y,x++]
              2f2e 0124  ld   [$24]       12840  ld([sysArgs+0])                      #42
              2f2f 8003  adda $03         12841  adda(3)                              #43
              2f30 c224  st   [$24]       12842  st([sysArgs+0])                      #44
              2f31 0126  ld   [$26]       12843  ld([sysArgs+2])                      #45
              2f32 8003  adda $03         12844  adda(3)                              #46
              2f33 c226  st   [$26]       12845  st([sysArgs+2])                      #47
              2f34 0118  ld   [$18]       12846  ld([vAC])                            #48
              2f35 f038  beq  $2f38       12847  beq(pc()+3)                          #49
              2f36 fc39  bra  $2f39       12848  bra(pc()+3)                          #50
              2f37 00fe  ld   $fe         12849  ld(-2)                               #51
              2f38 0000  ld   $00         12850  ld(0)                                #51!
              2f39 8116  adda [$16]       12851  adda([vPC])                          #52
              2f3a c216  st   [$16]       12852  st([vPC])                            #53
              2f3b 1403  ld   $03,y       12853  ld(hi('NEXTY'),Y)                    #54
              2f3c e000  jmp  y,$00       12854  jmp(Y,'NEXTY')                       #55
              2f3d 00e3  ld   $e3         12855  ld(-58/2)                            #56
                                          12856
                                          12857  label('.sysCm#20')
.sysCm#20:    2f3e 0200  nop              12858  nop()                                #20   burst6
              2f3f 1527  ld   [$27],y     12859  ld([sysArgs+3],Y)                    #21
                                          12860  label('.sysCm#22')
.sysCm#22:    2f40 c218  st   [$18]       12861  st([vAC])                            #22   burst6
              2f41 1126  ld   [$26],x     12862  ld([sysArgs+2],X)                    #23
                                          12863  for i in range(6):
              2f42 0d00  ld   [y,x]       12864    ld([Y,X])                            #24+i*3
              2f43 c21a  st   [$1a]       12865    st([vLR+i if i<2 else sysArgs+2+i])  #25+i*3
              2f44 de00  st   [y,x++]     12866    st([Y,Xpp]) if i<5 else None         #26+i*3 if i<5
              2f45 0d00  ld   [y,x]
              2f46 c21b  st   [$1b]
              2f47 de00  st   [y,x++]
              2f48 0d00  ld   [y,x]
              2f49 c228  st   [$28]
              2f4a de00  st   [y,x++]
              2f4b 0d00  ld   [y,x]
              2f4c c229  st   [$29]
              2f4d de00  st   [y,x++]
              2f4e 0d00  ld   [y,x]
              2f4f c22a  st   [$2a]
              2f50 de00  st   [y,x++]
              2f51 0d00  ld   [y,x]
              2f52 c22b  st   [$2b]
              2f53 1525  ld   [$25],y     12867  ld([sysArgs+1],Y)                    #41
              2f54 1124  ld   [$24],x     12868  ld([sysArgs+0],X)                    #42
                                          12869  for i in range(6):
              2f55 011a  ld   [$1a]       12870    ld([vLR+i if i<2 else sysArgs+2+i])  #43+i*2
              2f56 de00  st   [y,x++]     12871    st([Y,Xpp])                          #44+i*2
              2f57 011b  ld   [$1b]
              2f58 de00  st   [y,x++]
              2f59 0128  ld   [$28]
              2f5a de00  st   [y,x++]
              2f5b 0129  ld   [$29]
              2f5c de00  st   [y,x++]
              2f5d 012a  ld   [$2a]
              2f5e de00  st   [y,x++]
              2f5f 012b  ld   [$2b]
              2f60 de00  st   [y,x++]
              2f61 0124  ld   [$24]       12872  ld([sysArgs+0])                      #55
              2f62 8006  adda $06         12873  adda(6)                              #56
              2f63 c224  st   [$24]       12874  st([sysArgs+0])                      #57
              2f64 0126  ld   [$26]       12875  ld([sysArgs+2])                      #58
              2f65 8006  adda $06         12876  adda(6)                              #59
              2f66 c226  st   [$26]       12877  st([sysArgs+2])                      #60
                                          12878
              2f67 0118  ld   [$18]       12879  ld([vAC])                            #61
              2f68 ec6c  bne  .sysCm#64   12880  bne('.sysCm#64')                     #62
              2f69 1403  ld   $03,y       12881  ld(hi('REENTER'),Y)                  #63
              2f6a e0cb  jmp  y,$cb       12882  jmp(Y,'REENTER')                     #64
              2f6b 00de  ld   $de         12883  ld(-68/2)                            #65
                                          12884
                                          12885  label('.sysCm#64')
.sysCm#64:    2f6c 00e6  ld   $e6         12886  ld(-52/2)                            #64
              2f6d 8115  adda [$15]       12887  adda([vTicks])                       #13 = 65 - 52
              2f6e c215  st   [$15]       12888  st([vTicks])                         #14
              2f6f 80e8  adda $e8         12889  adda(min(0,maxTicks-(26+52)/2))      #15   could probably be min(0,maxTicks-(26+52)/2)
                                          12890  bge('sys_CopyMemory')                #16
              2f70 f400  bge  sys_CopyMemory
              2f71 0118  ld   [$18]       12891  ld([vAC])                            #17
              2f72 00fe  ld   $fe         12892  ld(-2)                               #18   notime
              2f73 8116  adda [$16]       12893  adda([vPC])                          #19
              2f74 c216  st   [$16]       12894  st([vPC])                            #20
              2f75 1403  ld   $03,y       12895  ld(hi('REENTER'),Y)                  #21
              2f76 e0cb  jmp  y,$cb       12896  jmp(Y,'REENTER')                     #22
              2f77 00f3  ld   $f3         12897  ld(-26/2)                            #23
                                          12898
                                          12899  # SYS_CopyMemoryExt_vX_100 implementation
                                          12900
                                          12901  label('sys_CopyMemoryExt')
                                          12902
sys_CopyMemoryExt:
              2f78 8200  adda ac          12903  adda(AC)                             #18
              2f79 8200  adda ac          12904  adda(AC)                             #19
              2f7a 403c  ora  $3c         12905  ora(0x3c)                            #20
              2f7b c21d  st   [$1d]       12906  st([vTmp])                           #21 [vTmp] = src ctrl value
              2f7c 0119  ld   [$19]       12907  ld([vAC+1])                          #22
              2f7d 20fc  anda $fc         12908  anda(0xfc)                           #23
              2f7e 403c  ora  $3c         12909  ora(0x3c)                            #24
              2f7f c21a  st   [$1a]       12910  st([vLR])                            #25 [vLR] = dest ctrl value
                                          12911
                                          12912  label('.sysCme#26')
.sysCme#26:   2f80 0118  ld   [$18]       12913  ld([vAC])                            #26
              2f81 f8a4  ble  .sysCme#29  12914  ble('.sysCme#29')                    #27   goto burst5
              2f82 a005  suba $05         12915  suba(5)                              #28
              2f83 f4a6  bge  .sysCme#31  12916  bge('.sysCme#31')                    #29   goto burst5
              2f84 1527  ld   [$27],y     12917  ld([sysArgs+3],Y)                    #30
              2f85 8004  adda $04         12918  adda(4)                              #31
                                          12919
              2f86 c218  st   [$18]       12920  st([vAC])                            #32   single
              2f87 111d  ld   [$1d],x     12921  ld([vTmp],X)                         #33
              2f88 c500  ctrl x           12922  ctrl(X)                              #34
              2f89 1126  ld   [$26],x     12923  ld([sysArgs+2],X)                    #35
              2f8a 0d00  ld   [y,x]       12924  ld([Y,X])                            #36
              2f8b 111a  ld   [$1a],x     12925  ld([vLR],X)                          #37
              2f8c c500  ctrl x           12926  ctrl(X)                              #38
              2f8d 1525  ld   [$25],y     12927  ld([sysArgs+1],Y)                    #39
              2f8e 1124  ld   [$24],x     12928  ld([sysArgs+0],X)                    #40
              2f8f ce00  st   [y,x]       12929  st([Y,X])                            #41
              2f90 1401  ld   $01,y       12930  ld(hi(ctrlBits), Y)                  #42
              2f91 09f8  ld   [y,$f8]     12931  ld([Y,ctrlBits])                     #43
              2f92 1200  ld   ac,x        12932  ld(AC,X)                             #44
              2f93 c500  ctrl x           12933  ctrl(X)                              #45
              2f94 0124  ld   [$24]       12934  ld([sysArgs+0])                      #46
              2f95 8001  adda $01         12935  adda(1)                              #47
              2f96 c224  st   [$24]       12936  st([sysArgs+0])                      #48
              2f97 0126  ld   [$26]       12937  ld([sysArgs+2])                      #49
              2f98 8001  adda $01         12938  adda(1)                              #50
              2f99 c226  st   [$26]       12939  st([sysArgs+2])                      #51
              2f9a 0118  ld   [$18]       12940  ld([vAC])                            #52  done?
              2f9b f09e  beq  $2f9e       12941  beq(pc()+3)                          #53
              2f9c fc9f  bra  $2f9f       12942  bra(pc()+3)                          #54
              2f9d 00fe  ld   $fe         12943  ld(-2)                               #55  restart
              2f9e 0000  ld   $00         12944  ld(0)                                #55! finished
              2f9f 8116  adda [$16]       12945  adda([vPC])                          #56
              2fa0 c216  st   [$16]       12946  st([vPC])                            #57
              2fa1 1403  ld   $03,y       12947  ld(hi('NEXTY'),Y)                    #58
              2fa2 e000  jmp  y,$00       12948  jmp(Y,'NEXTY')                       #59
              2fa3 00e1  ld   $e1         12949  ld(-62/2)                            #60
                                          12950
                                          12951  label('.sysCme#29')
.sysCme#29:   2fa4 0200  nop              12952  nop()                                #29   burst5
              2fa5 1527  ld   [$27],y     12953  ld([sysArgs+3],Y)                    #30
                                          12954  label('.sysCme#31')
.sysCme#31:   2fa6 c218  st   [$18]       12955  st([vAC])                            #31   burst5
              2fa7 111d  ld   [$1d],x     12956  ld([vTmp],X)                         #32
              2fa8 c500  ctrl x           12957  ctrl(X)                              #33
              2fa9 1126  ld   [$26],x     12958  ld([sysArgs+2],X)                    #34
                                          12959  for i in range(5):
              2faa 0d00  ld   [y,x]       12960    ld([Y,X])                            #35+i*3
              2fab c21b  st   [$1b]       12961    st([vLR+1 if i<1 else sysArgs+3+i])  #36+i*3
              2fac de00  st   [y,x++]     12962    st([Y,Xpp]) if i<4 else None         #37+i*3 if i<4
              2fad 0d00  ld   [y,x]
              2fae c228  st   [$28]
              2faf de00  st   [y,x++]
              2fb0 0d00  ld   [y,x]
              2fb1 c229  st   [$29]
              2fb2 de00  st   [y,x++]
              2fb3 0d00  ld   [y,x]
              2fb4 c22a  st   [$2a]
              2fb5 de00  st   [y,x++]
              2fb6 0d00  ld   [y,x]
              2fb7 c22b  st   [$2b]
              2fb8 111a  ld   [$1a],x     12963  ld([vLR],X)                          #49
              2fb9 c500  ctrl x           12964  ctrl(X)                              #50
              2fba 1525  ld   [$25],y     12965  ld([sysArgs+1],Y)                    #51
              2fbb 1124  ld   [$24],x     12966  ld([sysArgs+0],X)                    #52
                                          12967  for i in range(5):
              2fbc 011b  ld   [$1b]       12968    ld([vLR+1 if i<1 else sysArgs+3+i])  #53+i*2
              2fbd de00  st   [y,x++]     12969    st([Y,Xpp])                          #54+i*2
              2fbe 0128  ld   [$28]
              2fbf de00  st   [y,x++]
              2fc0 0129  ld   [$29]
              2fc1 de00  st   [y,x++]
              2fc2 012a  ld   [$2a]
              2fc3 de00  st   [y,x++]
              2fc4 012b  ld   [$2b]
              2fc5 de00  st   [y,x++]
              2fc6 0124  ld   [$24]       12970  ld([sysArgs+0])                      #63
              2fc7 8005  adda $05         12971  adda(5)                              #64
              2fc8 c224  st   [$24]       12972  st([sysArgs+0])                      #65
              2fc9 0126  ld   [$26]       12973  ld([sysArgs+2])                      #66
              2fca 8005  adda $05         12974  adda(5)                              #67
              2fcb c226  st   [$26]       12975  st([sysArgs+2])                      #68
                                          12976
              2fcc 0118  ld   [$18]       12977  ld([vAC])                            #69
              2fcd ecd6  bne  .sysCme#72  12978  bne('.sysCme#72')                    #70
              2fce 1401  ld   $01,y       12979  ld(hi(ctrlBits), Y)                  #71  we're done!
              2fcf 09f8  ld   [y,$f8]     12980  ld([Y,ctrlBits])                     #72
              2fd0 30fc  anda $fc,x       12981  anda(0xfc,X)                         #73
              2fd1 c500  ctrl x           12982  ctrl(X)                              #74
              2fd2 011d  ld   [$1d]       12983  ld([vTmp])                           #75  always read after ctrl
              2fd3 1403  ld   $03,y       12984  ld(hi('NEXTY'),Y)                    #76
              2fd4 e000  jmp  y,$00       12985  jmp(Y,'NEXTY')                       #77
              2fd5 00d8  ld   $d8         12986  ld(-80/2)                            #78
                                          12987
                                          12988  label('.sysCme#72')
.sysCme#72:   2fd6 00e6  ld   $e6         12989  ld(-52/2)                            #72
              2fd7 8115  adda [$15]       12990  adda([vTicks])                       #21 = 72 - 52
              2fd8 c215  st   [$15]       12991  st([vTicks])                         #22
              2fd9 80e1  adda $e1         12992  adda(min(0,maxTicks-(40+52)/2))      #23
              2fda f480  bge  .sysCme#26  12993  bge('.sysCme#26')                    #24  enough time for another loop
              2fdb 00fe  ld   $fe         12994  ld(-2)                               #25
              2fdc 8116  adda [$16]       12995  adda([vPC])                          #26  restart
              2fdd c216  st   [$16]       12996  st([vPC])                            #27
              2fde 1401  ld   $01,y       12997  ld(hi(ctrlBits), Y)                  #28
              2fdf 09f8  ld   [y,$f8]     12998  ld([Y,ctrlBits])                     #29
              2fe0 30fc  anda $fc,x       12999  anda(0xfc,X)                         #30
              2fe1 c500  ctrl x           13000  ctrl(X)                              #31
              2fe2 011d  ld   [$1d]       13001  ld([vTmp])                           #32 always read after ctrl
              2fe3 1403  ld   $03,y       13002  ld(hi('REENTER'),Y)                  #33
              2fe4 e0cb  jmp  y,$cb       13003  jmp(Y,'REENTER')                     #34
              2fe5 00ed  ld   $ed         13004  ld(-38/2)                            #35 max: 38 + 52 = 90 cycles
                                          13005
                                          13006
              2fe6 0200  nop              13007  fillers(until=0xff)
              2fe7 0200  nop
              2fe8 0200  nop
              * 25 times
              2fff 0200  nop              13008  align(0x100, size=0x100)
                                          13009
                                          13010  #-----------------------------------------------------------------------
                                          13011  #  Implementation of SYS_ScanMemory[Ext], (0x3000)
                                          13012  #-----------------------------------------------------------------------
                                          13013
                                          13014  # SYS_ScanMemory_vX_50 implementation
                                          13015
                                          13016  label('sys_ScanMemory')
sys_ScanMemory:
              3000 1124  ld   [$24],x     13017  ld([sysArgs+0],X)                    #18
              3001 0d00  ld   [y,x]       13018  ld([Y,X])                            #19
                                          13019  label('.sysSme#20')
.sysSme#20:   3002 6126  xora [$26]       13020  xora([sysArgs+2])                    #20
              3003 f01e  beq  .sysSme#23  13021  beq('.sysSme#23')                    #21
              3004 0d00  ld   [y,x]       13022  ld([Y,X])                            #22
              3005 6127  xora [$27]       13023  xora([sysArgs+3])                    #23
              3006 f021  beq  .sysSme#26  13024  beq('.sysSme#26')                    #24
              3007 0124  ld   [$24]       13025  ld([sysArgs+0])                      #25
              3008 8001  adda $01         13026  adda(1);                             #26
              3009 d224  st   [$24],x     13027  st([sysArgs+0],X)                    #27
              300a 0118  ld   [$18]       13028  ld([vAC])                            #28
              300b a001  suba $01         13029  suba(1)                              #29
              300c f01a  beq  .sysSme#32  13030  beq('.sysSme#32')                    #30 return zero
              300d c218  st   [$18]       13031  st([vAC])                            #31
              300e 00f7  ld   $f7         13032  ld(-18/2)                            #14 = 32 - 18
              300f 8115  adda [$15]       13033  adda([vTicks])                       #15
              3010 c215  st   [$15]       13034  st([vTicks])                         #16
              3011 80f8  adda $f8         13035  adda(min(0,maxTicks -(28+18)/2))     #17
              3012 f402  bge  .sysSme#20  13036  bge('.sysSme#20')                    #18
              3013 0d00  ld   [y,x]       13037  ld([Y,X])                            #19
              3014 00fe  ld   $fe         13038  ld(-2)                               #20 restart
              3015 8116  adda [$16]       13039  adda([vPC])                          #21
              3016 c216  st   [$16]       13040  st([vPC])                            #22
              3017 1403  ld   $03,y       13041  ld(hi('REENTER'),Y)                  #23
              3018 e0cb  jmp  y,$cb       13042  jmp(Y,'REENTER')                     #24
              3019 00f2  ld   $f2         13043  ld(-28/2)                            #25
                                          13044
                                          13045  label('.sysSme#32')
.sysSme#32:   301a c219  st   [$19]       13046  st([vAC+1])                          #32 return zero
              301b 1403  ld   $03,y       13047  ld(hi('REENTER'),Y)                  #33
              301c e0cb  jmp  y,$cb       13048  jmp(Y,'REENTER')                     #34
              301d 00ed  ld   $ed         13049  ld(-38/2)                            #35
                                          13050
                                          13051  label('.sysSme#23')
.sysSme#23:   301e 0200  nop              13052  nop()                                #23 success
              301f 0200  nop              13053  nop()                                #24
              3020 0124  ld   [$24]       13054  ld([sysArgs+0])                      #25
                                          13055  label('.sysSme#26')
.sysSme#26:   3021 c218  st   [$18]       13056  st([vAC])                            #26 success
              3022 0125  ld   [$25]       13057  ld([sysArgs+1])                      #27
              3023 c219  st   [$19]       13058  st([vAC+1])                          #28
              3024 1403  ld   $03,y       13059  ld(hi('REENTER'),Y)                  #29
              3025 e0cb  jmp  y,$cb       13060  jmp(Y,'REENTER')                     #30
              3026 00ef  ld   $ef         13061  ld(-34/2)                            #31
                                          13062
                                          13063
                                          13064  # SYS_ScanMemoryExt_vX_50 implementation
                                          13065
                                          13066  label('sys_ScanMemoryExt')
sys_ScanMemoryExt:
              3027 503c  ora  $3c,x       13067  ora(0x3c,X)                          #18
              3028 c500  ctrl x           13068  ctrl(X)                              #19
              3029 1525  ld   [$25],y     13069  ld([sysArgs+1],Y)                    #20
              302a 1124  ld   [$24],x     13070  ld([sysArgs+0],X)                    #21
              302b 0d00  ld   [y,x]       13071  ld([Y,X])                            #22
              302c 0200  nop              13072  nop()                                #23
                                          13073  label('.sysSmx#24')
.sysSmx#24:   302d 6126  xora [$26]       13074  xora([sysArgs+2])                    #24
              302e f04a  beq  .sysSmx#27  13075  beq('.sysSmx#27')                    #25
              302f 0d00  ld   [y,x]       13076  ld([Y,X])                            #26
              3030 6127  xora [$27]       13077  xora([sysArgs+3])                    #27
              3031 f04d  beq  .sysSmx#30  13078  beq('.sysSmx#30')                    #28
              3032 0124  ld   [$24]       13079  ld([sysArgs+0])                      #29
              3033 8001  adda $01         13080  adda(1);                             #30
              3034 d224  st   [$24],x     13081  st([sysArgs+0],X)                    #31
              3035 0118  ld   [$18]       13082  ld([vAC])                            #32
              3036 a001  suba $01         13083  suba(1)                              #33
              3037 f053  beq  .sysSmx#36  13084  beq('.sysSmx#36')                    #34 return zero
              3038 c218  st   [$18]       13085  st([vAC])                            #35
              3039 00f7  ld   $f7         13086  ld(-18/2)                            #18 = 36 - 18
              303a 8115  adda [$15]       13087  adda([vTicks])                       #19
              303b c215  st   [$15]       13088  st([vTicks])                         #20
              303c 80f7  adda $f7         13089  adda(min(0,maxTicks -(30+18)/2))     #21
              303d f42d  bge  .sysSmx#24  13090  bge('.sysSmx#24')                    #22
              303e 0d00  ld   [y,x]       13091  ld([Y,X])                            #23
              303f 0116  ld   [$16]       13092  ld([vPC])                            #24
              3040 a002  suba $02         13093  suba(2)                              #25 restart
              3041 c216  st   [$16]       13094  st([vPC])                            #26
              3042 1401  ld   $01,y       13095  ld(hi(ctrlBits),Y)                   #27 restore and return
              3043 09f8  ld   [y,$f8]     13096  ld([Y,ctrlBits])                     #28
              3044 30fc  anda $fc,x       13097  anda(0xfc,X)                         #29
              3045 c500  ctrl x           13098  ctrl(X)                              #30
              3046 011d  ld   [$1d]       13099  ld([vTmp])                           #31
              3047 1403  ld   $03,y       13100  ld(hi('NEXTY'),Y)                    #32
              3048 e000  jmp  y,$00       13101  jmp(Y,'NEXTY')                       #33
              3049 00ee  ld   $ee         13102  ld(-36/2)                            #34
                                          13103
                                          13104  label('.sysSmx#27')
.sysSmx#27:   304a 0200  nop              13105  nop()                                #27 success
              304b 0200  nop              13106  nop()                                #28
              304c 0124  ld   [$24]       13107  ld([sysArgs+0])                      #29
                                          13108  label('.sysSmx#30')
.sysSmx#30:   304d c218  st   [$18]       13109  st([vAC])                            #30 success
              304e 0125  ld   [$25]       13110  ld([sysArgs+1])                      #31
              304f 0200  nop              13111  nop()                                #32
              3050 0200  nop              13112  nop()                                #33
              3051 0200  nop              13113  nop()                                #34
              3052 0200  nop              13114  nop()                                #35
                                          13115  label('.sysSmx#36')
.sysSmx#36:   3053 c219  st   [$19]       13116  st([vAC+1])                          #36
              3054 1401  ld   $01,y       13117  ld(hi(ctrlBits),Y)                   #37 restore and return
              3055 09f8  ld   [y,$f8]     13118  ld([Y,ctrlBits])                     #38
              3056 30fc  anda $fc,x       13119  anda(0xfc,X)                         #39
              3057 c500  ctrl x           13120  ctrl(X)                              #40
              3058 011d  ld   [$1d]       13121  ld([vTmp])                           #41
              3059 1403  ld   $03,y       13122  ld(hi('NEXTY'),Y)                    #42
              305a e000  jmp  y,$00       13123  jmp(Y,'NEXTY')                       #43
              305b 00e9  ld   $e9         13124  ld(-46/2)                            #44
                                          13125
                                          13126
              305c 0200  nop              13127  fillers(until=0xff)
              305d 0200  nop
              305e 0200  nop
              * 163 times
              30ff 0200  nop              13128  align(0x100, size=0x100)
                                          13129
                                          13130  #-----------------------------------------------------------------------
                                          13131  #  lb3361 experiments - temporary location for experimental ops, (0x3100)
                                          13132  #-----------------------------------------------------------------------
                                          13133
                                          13134  #--------------------------------
                                          13135
                                          13136
                                          13137  #--------------------------------
                                          13138
                                          13139
                                          13140  #--------------------------------
                                          13141
                                          13142
                                          13143  #--------------------------------
                                          13144
                                          13145
                                          13146  #--------------------------------
                                          13147
                                          13148
                                          13149  #--------------------------------
                                          13150
                                          13151
                                          13152  #--------------------------------
                                          13153
                                          13154
                                          13155  #--------------------------------
                                          13156
                                          13157
                                          13158  #--------------------------------
                                          13159
                                          13160
                                          13161  #--------------------------------
                                          13162
                                          13163
                                          13164  #--------------------------------
                                          13165
                                          13166
                                          13167  #--------------------------------
                                          13168
                                          13169
                                          13170  #--------------------------------
                                          13171
                                          13172
                                          13173  #--------------------------------
                                          13174
                                          13175
                                          13176  #--------------------------------
                                          13177
                                          13178
                                          13179  #--------------------------------
                                          13180
                                          13181
                                          13182  #--------------------------------
                                          13183
                                          13184
              3100 0200  nop              13185  fillers(until=0xff)
              3101 0200  nop
              3102 0200  nop
              * 255 times
              31ff 0200  nop              13186  align(0x100, size=0x100)
                                          13187
                                          13188  #-----------------------------------------------------------------------
                                          13189  #
                                          13190  #  Spare pages
                                          13191  #
                                          13192  #-----------------------------------------------------------------------
                                          13193
              3200 0200  nop              13194  fillers(until=0xff)
              3201 0200  nop
              3202 0200  nop
              * 255 times
              32ff 0200  nop              13195  align(0x100, size=0x100)
                                          13196
              3300 0200  nop              13197  fillers(until=0xff)
              3301 0200  nop
              3302 0200  nop
              * 255 times
              33ff 0200  nop              13198  align(0x100, size=0x100)
                                          13199
              3400 0200  nop              13200  fillers(until=0xff)
              3401 0200  nop
              3402 0200  nop
              * 255 times
              34ff 0200  nop              13201  align(0x100, size=0x100)
                                          13202
              3500 0200  nop              13203  fillers(until=0xff)
              3501 0200  nop
              3502 0200  nop
              * 255 times
              35ff 0200  nop              13204  align(0x100, size=0x100)
                                          13205
              3600 0200  nop              13206  fillers(until=0xff)
              3601 0200  nop
              3602 0200  nop
              * 255 times
              36ff 0200  nop              13207  align(0x100, size=0x100)
                                          13208
              3700 0200  nop              13209  fillers(until=0xff)
              3701 0200  nop
              3702 0200  nop
              * 255 times
              37ff 0200  nop              13210  align(0x100, size=0x100)
                                          13211
              3800 0200  nop              13212  fillers(until=0xff)
              3801 0200  nop
              3802 0200  nop
              * 255 times
              38ff 0200  nop              13213  align(0x100, size=0x100)
                                          13214
              3900 0200  nop              13215  fillers(until=0xff)
              3901 0200  nop
              3902 0200  nop
              * 255 times
              39ff 0200  nop              13216  align(0x100, size=0x100)
                                          13217
              3a00 0200  nop              13218  fillers(until=0xff)
              3a01 0200  nop
              3a02 0200  nop
              * 255 times
              3aff 0200  nop              13219  align(0x100, size=0x100)
                                          13220
              3b00 0200  nop              13221  fillers(until=0xff)
              3b01 0200  nop
              3b02 0200  nop
              * 255 times
              3bff 0200  nop              13222  align(0x100, size=0x100)
                                          13223
              3c00 0200  nop              13224  fillers(until=0xff)
              3c01 0200  nop
              3c02 0200  nop
              * 255 times
              3cff 0200  nop              13225  align(0x100, size=0x100)
                                          13226
              3d00 0200  nop              13227  fillers(until=0xff)
              3d01 0200  nop
              3d02 0200  nop
              * 255 times
              3dff 0200  nop              13228  align(0x100, size=0x100)
                                          13229
              3e00 0200  nop              13230  fillers(until=0xff)
              3e01 0200  nop
              3e02 0200  nop
              * 255 times
              3eff 0200  nop              13231  align(0x100, size=0x100)
                                          13232
              3f00 0200  nop              13233  fillers(until=0xff)
              3f01 0200  nop
              3f02 0200  nop
              * 255 times
              3fff 0200  nop              13234  align(0x100, size=0x100)
                                          13235
                                          13236  #-----------------------------------------------------------------------
                                          13237  #
                                          13238  #  End of core
                                          13239  #
                                          13240  #-----------------------------------------------------------------------
                                          13241  disableListing()
                                          ;+-----------------------------------+
                                          ;| SYS_Loader_vX.py                  |
                                          ;+-----------------------------------+
SYS_Loader_vX:
SYS_LoaderNextByteIn_32:
              4000 0109  ld   [$09]
              4001 6127  xora [$27]
              4002 ec0f  bne  .sysNbi#19
              4003 1124  ld   [$24],x
              4004 1525  ld   [$25],y
              4005 0300  ld   in
              4006 ce00  st   [y,x]
              4007 8126  adda [$26]
              4008 c226  st   [$26]
              4009 0124  ld   [$24]
              400a 8001  adda $01
              400b c224  st   [$24]
              400c 1403  ld   $03,y
              400d e0cb  jmp  y,$cb
              400e 00f0  ld   $f0
.sysNbi#19:   400f 0116  ld   [$16]
              4010 a002  suba $02
              4011 c216  st   [$16]
              4012 1403  ld   $03,y
              4013 e000  jmp  y,$00
              4014 00f3  ld   $f3
SYS_LoaderProcessInput_64:
              4015 1525  ld   [$25],y
              4016 0126  ld   [$26]
              4017 ec3c  bne  .sysPi#19
              4018 0124  ld   [$24]
              4019 b041  suba $41,x
              401a 0d00  ld   [y,x]
              401b de00  st   [y,x++]     ;Just X++
              401c 604c  xora $4c
              401d ec40  bne  .sysPi#25
              401e 0d00  ld   [y,x]       ;Valid command
              401f de00  st   [y,x++]     ;Just X++
              4020 203f  anda $3f
              4021 c228  st   [$28]
              4022 8d00  adda [y,x]
              4023 8001  adda $01
              4024 20fe  anda $fe
              4025 c21d  st   [$1d]
              4026 0d00  ld   [y,x]
              4027 de00  st   [y,x++]     ;Just X++
              4028 c229  st   [$29]
              4029 0d00  ld   [y,x]
              402a de00  st   [y,x++]     ;Just X++
              402b c22a  st   [$2a]
              402c a001  suba $01
              402d 20fc  anda $fc
              402e 411d  ora  [$1d]
              402f c21d  st   [$1d]
              4030 0128  ld   [$28]
              4031 ec45  bne  .sysPi#45
              4032 0129  ld   [$29]       ;Execute
              4033 c21a  st   [$1a]
              4034 a002  suba $02
              4035 c216  st   [$16]
              4036 012a  ld   [$2a]
              4037 c217  st   [$17]
              4038 c21b  st   [$1b]
              4039 1403  ld   $03,y
              403a e0cb  jmp  y,$cb
              403b 00e4  ld   $e4
.sysPi#19:    403c 0001  ld   $01         ;Wait 6 cycles
              403d ec3d  bne  $403d
              403e a001  suba $01
              403f 0200  nop              ;Invalid checksum
.sysPi#25:    4040 0067  ld   $67         ;Unknown command
              4041 c226  st   [$26]
              4042 1403  ld   $03,y
              4043 e0cb  jmp  y,$cb
              4044 00f0  ld   $f0
.sysPi#45:    4045 011d  ld   [$1d]       ;Loading data
              4046 ec49  bne  $4049
              4047 fc4a  bra  $404a
              4048 00fc  ld   $fc         ;Unsafe
              4049 00ff  ld   $ff         ;Safe
              404a 2121  anda [$21]
              404b c221  st   [$21]
              404c 0124  ld   [$24]
              404d b001  suba $01,x
              404e 0d00  ld   [y,x]
              404f c226  st   [$26]
              4050 1403  ld   $03,y
              4051 e0cb  jmp  y,$cb
              4052 00e2  ld   $e2
SYS_LoaderPayloadCopy_34:
              4053 0128  ld   [$28]
              4054 f061  beq  .sysCc#18
              4055 a001  suba $01
              4056 c228  st   [$28]
              4057 1124  ld   [$24],x
              4058 1525  ld   [$25],y
              4059 0d00  ld   [y,x]
              405a 1129  ld   [$29],x
              405b 152a  ld   [$2a],y
              405c ce00  st   [y,x]
              405d 0129  ld   [$29]
              405e 8001  adda $01
              405f c229  st   [$29]
              4060 fc65  bra  .sysCc#30
.sysCc#18:    4061 1403  ld   $03,y
              4062 0004  ld   $04         ;Wait 11 cycles
              4063 ec63  bne  $4063
              4064 a001  suba $01
.sysCc#30:    4065 e0cb  jmp  y,$cb
              4066 00ef  ld   $ef         ;End of SYS_Loader_vX.py, size 103
                                          ;+-----------------------------------+
                                          ;| SYS_Racer_v1.py                   |
                                          ;+-----------------------------------+
SYS_Racer_v1:
SYS_RacerUpdateVideoX_40:
              4067 1126  ld   [$26],x
              4068 1527  ld   [$27],y
              4069 0d00  ld   [y,x]
              406a c21d  st   [$1d]
              406b a128  suba [$28]
              406c 1124  ld   [$24],x
              406d 1525  ld   [$25],y
              406e ce00  st   [y,x]
              406f 0124  ld   [$24]
              4070 a004  suba $04
              4071 c224  st   [$24]
              4072 011d  ld   [$1d]
              4073 c228  st   [$28]
              4074 0126  ld   [$26]
              4075 8001  adda $01
              4076 c226  st   [$26]
              4077 ec7b  bne  .sysRacer0
              4078 0116  ld   [$16]
              4079 fc7d  bra  .sysRacer1
              407a 0200  nop
.sysRacer0:   407b a002  suba $02
              407c c216  st   [$16]
.sysRacer1:   407d 1403  ld   $03,y
              407e e0cb  jmp  y,$cb
              407f 00ec  ld   $ec
SYS_RacerUpdateVideoY_40:
              4080 0127  ld   [$27]
              4081 2008  anda $08
              4082 ec85  bne  $4085
              4083 fc86  bra  $4086
              4084 0000  ld   $00
              4085 0001  ld   $01
              4086 c21d  st   [$1d]
              4087 1525  ld   [$25],y
              4088 0124  ld   [$24]
              4089 8002  adda $02
              408a d224  st   [$24],x
              408b 60ee  xora $ee
              408c c218  st   [$18]
              408d c219  st   [$19]
              408e 0126  ld   [$26]
              408f 20fe  anda $fe
              4090 811d  adda [$1d]
              4091 ce00  st   [y,x]
              4092 0126  ld   [$26]
              4093 8001  adda $01
              4094 c226  st   [$26]
              4095 1403  ld   $03,y
              4096 e0cb  jmp  y,$cb
              4097 00ec  ld   $ec         ;End of SYS_Racer_v1.py, size 49
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Horizon-256x16.rgb     |
                                          ;+-----------------------------------+
              4098 dc00  st   $00,[y,x++] ;'\x00'
              4099 dc00  st   $00,[y,x++] ;'\x00'
              409a dc00  st   $00,[y,x++] ;'\x00'
              409b dc00  st   $00,[y,x++] ;'\x00'
              409c dc00  st   $00,[y,x++] ;'\x00'
              409d dc00  st   $00,[y,x++] ;'\x00'
              409e dc00  st   $00,[y,x++] ;'\x00'
              409f dc00  st   $00,[y,x++] ;'\x00'
              40a0 0000  ld   $00
              40a1 c218  st   [$18]
              40a2 0000  ld   $00
              40a3 14e0  ld   $e0,y
              40a4 e02e  jmp  y,$2e
              40a5 c219  st   [$19]
zippedRacerHorizon:
              40a6 0041  ld   $41
              40a7 0000  ld   $00
              40a8 00c3  ld   $c3
              40a9 0030  ld   $30
              40aa 000c  ld   $0c
              40ab 00c3  ld   $c3
              40ac 0030  ld   $30
              40ad 000c  ld   $0c
              40ae 00c3  ld   $c3
              40af 0030  ld   $30
              40b0 000c  ld   $0c
              40b1 00c3  ld   $c3
              40b2 0030  ld   $30
              40b3 000c  ld   $0c
              40b4 00c3  ld   $c3
              40b5 0030  ld   $30
              40b6 000c  ld   $0c
              40b7 00c3  ld   $c3
              40b8 0030  ld   $30
              40b9 000c  ld   $0c
              40ba 00c3  ld   $c3
              40bb 0030  ld   $30
              40bc 000c  ld   $0c
              40bd 00c3  ld   $c3
              40be 0000  ld   $00
              40bf 000c  ld   $0c
              40c0 00c3  ld   $c3
              40c1 0030  ld   $30
              40c2 000c  ld   $0c
              40c3 00c3  ld   $c3
              40c4 0030  ld   $30
              40c5 00fc  ld   $fc
              40c6 0002  ld   $02
              40c7 0030  ld   $30
              40c8 000c  ld   $0c
              40c9 00c3  ld   $c3
              40ca 0030  ld   $30
              40cb 000c  ld   $0c
              40cc 00c3  ld   $c3
              40cd 0030  ld   $30
              40ce 000c  ld   $0c
              40cf 00c3  ld   $c3
              40d0 0030  ld   $30
              40d1 000c  ld   $0c
              40d2 00c3  ld   $c3
              40d3 0030  ld   $30
              40d4 000c  ld   $0c
              40d5 00c3  ld   $c3
              40d6 0030  ld   $30
              40d7 000c  ld   $0c
              40d8 00c3  ld   $c3
              40d9 0030  ld   $30
              40da 000c  ld   $0c
              40db 00c3  ld   $c3
              40dc 0030  ld   $30
              40dd 000c  ld   $0c
              40de 00c3  ld   $c3
              40df 0030  ld   $30
              40e0 000c  ld   $0c
              40e1 00c3  ld   $c3
              40e2 0030  ld   $30
              40e3 000c  ld   $0c
              40e4 00c3  ld   $c3
              40e5 0030  ld   $30
              40e6 000c  ld   $0c
              40e7 00c3  ld   $c3
              40e8 0030  ld   $30
              40e9 000c  ld   $0c
              40ea 00c3  ld   $c3
              40eb 0030  ld   $30
              40ec 000c  ld   $0c
              40ed 00c3  ld   $c3
              40ee 0030  ld   $30
              40ef 000c  ld   $0c
              40f0 00c3  ld   $c3
              40f1 0030  ld   $30
              40f2 000c  ld   $0c
              40f3 00c3  ld   $c3
              40f4 0030  ld   $30
              40f5 000c  ld   $0c
              40f6 00c3  ld   $c3
              40f7 0030  ld   $30
              40f8 000c  ld   $0c
              40f9 00c3  ld   $c3
              40fa 0013  ld   $13
              40fb fe00  bra  ac          ;+-----------------------------------+
              40fc fcfd  bra  $40fd       ;|                                   |
              40fd 1418  ld   $18,y       ;| Trampoline for page $4000 lookups |
              40fe e006  jmp  y,$06       ;|                                   |
              40ff c218  st   [$18]       ;+-----------------------------------+
              4100 000c  ld   $0c
              4101 00c3  ld   $c3
              4102 0030  ld   $30
              4103 000c  ld   $0c
              4104 00c3  ld   $c3
              4105 002a  ld   $2a
              4106 000c  ld   $0c
              4107 00c3  ld   $c3
              4108 0030  ld   $30
              4109 000c  ld   $0c
              410a 00c3  ld   $c3
              410b 0030  ld   $30
              410c 000c  ld   $0c
              410d 00c3  ld   $c3
              410e 0030  ld   $30
              410f 000c  ld   $0c
              4110 00c3  ld   $c3
              4111 0030  ld   $30
              4112 000c  ld   $0c
              4113 00c3  ld   $c3
              4114 0030  ld   $30
              4115 000c  ld   $0c
              4116 00c3  ld   $c3
              4117 0030  ld   $30
              4118 000c  ld   $0c
              4119 00c3  ld   $c3
              411a 0030  ld   $30
              411b 000c  ld   $0c
              411c 00c3  ld   $c3
              411d 0030  ld   $30
              411e 000c  ld   $0c
              411f 00c3  ld   $c3
              4120 0030  ld   $30
              4121 000c  ld   $0c
              4122 00c3  ld   $c3
              4123 0030  ld   $30
              4124 000c  ld   $0c
              4125 00c3  ld   $c3
              4126 0030  ld   $30
              4127 000c  ld   $0c
              4128 00c3  ld   $c3
              4129 0030  ld   $30
              412a 000c  ld   $0c
              412b 00ab  ld   $ab
              412c 002a  ld   $2a
              412d 000c  ld   $0c
              412e 00c3  ld   $c3
              412f 0030  ld   $30
              4130 000c  ld   $0c
              4131 00c3  ld   $c3
              4132 0030  ld   $30
              4133 000c  ld   $0c
              4134 00c3  ld   $c3
              4135 0030  ld   $30
              4136 000c  ld   $0c
              4137 00c3  ld   $c3
              4138 0030  ld   $30
              4139 000c  ld   $0c
              413a 00c3  ld   $c3
              413b 00f0  ld   $f0
              413c 000f  ld   $0f
              413d 00c3  ld   $c3
              413e 0030  ld   $30
              413f 000c  ld   $0c
              4140 00c3  ld   $c3
              4141 00f0  ld   $f0
              4142 000f  ld   $0f
              4143 00c3  ld   $c3
              4144 0030  ld   $30
              4145 000c  ld   $0c
              4146 00c3  ld   $c3
              4147 003f  ld   $3f
              4148 000c  ld   $0c
              4149 00c3  ld   $c3
              414a 0030  ld   $30
              414b 000c  ld   $0c
              414c 00c3  ld   $c3
              414d 0030  ld   $30
              414e 000c  ld   $0c
              414f 00c3  ld   $c3
              4150 0030  ld   $30
              4151 000c  ld   $0c
              4152 00c3  ld   $c3
              4153 0030  ld   $30
              4154 000c  ld   $0c
              4155 00c3  ld   $c3
              4156 0030  ld   $30
              4157 000c  ld   $0c
              4158 00c3  ld   $c3
              4159 0030  ld   $30
              415a 000c  ld   $0c
              415b 00c3  ld   $c3
              415c 0030  ld   $30
              415d 000c  ld   $0c
              415e 00c3  ld   $c3
              415f 0015  ld   $15
              4160 000c  ld   $0c
              4161 00c3  ld   $c3
              4162 0030  ld   $30
              4163 000c  ld   $0c
              4164 00c3  ld   $c3
              4165 0030  ld   $30
              4166 000c  ld   $0c
              4167 00c3  ld   $c3
              4168 0030  ld   $30
              4169 001c  ld   $1c
              416a 0004  ld   $04
              416b 006b  ld   $6b
              416c 0000  ld   $00
              416d 00c3  ld   $c3
              416e 0030  ld   $30
              416f 000c  ld   $0c
              4170 00c3  ld   $c3
              4171 0030  ld   $30
              4172 000c  ld   $0c
              4173 00c3  ld   $c3
              4174 0030  ld   $30
              4175 000c  ld   $0c
              4176 00c3  ld   $c3
              4177 0030  ld   $30
              4178 000c  ld   $0c
              4179 00c3  ld   $c3
              417a 0030  ld   $30
              417b 000c  ld   $0c
              417c 00c3  ld   $c3
              417d 0030  ld   $30
              417e 000c  ld   $0c
              417f 00c3  ld   $c3
              4180 0030  ld   $30
              4181 000c  ld   $0c
              4182 00c3  ld   $c3
              4183 003f  ld   $3f
              4184 0000  ld   $00
              4185 00c3  ld   $c3
              4186 0030  ld   $30
              4187 000c  ld   $0c
              4188 00c3  ld   $c3
              4189 00f0  ld   $f0
              418a 000f  ld   $0f
              418b 00c0  ld   $c0
              418c 0030  ld   $30
              418d 000c  ld   $0c
              418e 00c3  ld   $c3
              418f 0030  ld   $30
              4190 000c  ld   $0c
              4191 00c3  ld   $c3
              4192 0030  ld   $30
              4193 000c  ld   $0c
              4194 00c3  ld   $c3
              4195 0030  ld   $30
              4196 000c  ld   $0c
              4197 00c3  ld   $c3
              4198 0030  ld   $30
              4199 000c  ld   $0c
              419a 00c3  ld   $c3
              419b 0030  ld   $30
              419c 000c  ld   $0c
              419d 00c3  ld   $c3
              419e 0030  ld   $30
              419f 000c  ld   $0c
              41a0 00c3  ld   $c3
              41a1 0030  ld   $30
              41a2 000c  ld   $0c
              41a3 00c3  ld   $c3
              41a4 0030  ld   $30
              41a5 000c  ld   $0c
              41a6 00c3  ld   $c3
              41a7 0030  ld   $30
              41a8 000c  ld   $0c
              41a9 00c3  ld   $c3
              41aa 0030  ld   $30
              41ab 000c  ld   $0c
              41ac 00c3  ld   $c3
              41ad 0030  ld   $30
              41ae 000c  ld   $0c
              41af 00c3  ld   $c3
              41b0 0030  ld   $30
              41b1 000c  ld   $0c
              41b2 00c3  ld   $c3
              41b3 0030  ld   $30
              41b4 000c  ld   $0c
              41b5 00c3  ld   $c3
              41b6 0030  ld   $30
              41b7 000c  ld   $0c
              41b8 00c3  ld   $c3
              41b9 0030  ld   $30
              41ba 000c  ld   $0c
              41bb 00c3  ld   $c3
              41bc 0030  ld   $30
              41bd 000c  ld   $0c
              41be 00c3  ld   $c3
              41bf 002a  ld   $2a
              41c0 000c  ld   $0c
              41c1 00c3  ld   $c3
              41c2 0030  ld   $30
              41c3 000c  ld   $0c
              41c4 00ab  ld   $ab
              41c5 002a  ld   $2a
              41c6 000c  ld   $0c
              41c7 00c3  ld   $c3
              41c8 0030  ld   $30
              41c9 000c  ld   $0c
              41ca 00c3  ld   $c3
              41cb 0030  ld   $30
              41cc 000c  ld   $0c
              41cd 00c3  ld   $c3
              41ce 0030  ld   $30
              41cf 000c  ld   $0c
              41d0 00c3  ld   $c3
              41d1 0030  ld   $30
              41d2 000c  ld   $0c
              41d3 00c3  ld   $c3
              41d4 00ff  ld   $ff
              41d5 00fb  ld   $fb
              41d6 00bf  ld   $bf
              41d7 003f  ld   $3f
              41d8 000c  ld   $0c
              41d9 00c3  ld   $c3
              41da 0030  ld   $30
              41db 000c  ld   $0c
              41dc 00c3  ld   $c3
              41dd 0030  ld   $30
              41de 000c  ld   $0c
              41df 00c3  ld   $c3
              41e0 0030  ld   $30
              41e1 000c  ld   $0c
              41e2 00c3  ld   $c3
              41e3 0030  ld   $30
              41e4 000c  ld   $0c
              41e5 00c3  ld   $c3
              41e6 0030  ld   $30
              41e7 000c  ld   $0c
              41e8 00c3  ld   $c3
              41e9 0030  ld   $30
              41ea 00ac  ld   $ac
              41eb 0056  ld   $56
              41ec 0095  ld   $95
              41ed 000a  ld   $0a
              41ee 00c3  ld   $c3
              41ef 0030  ld   $30
              41f0 000c  ld   $0c
              41f1 00c3  ld   $c3
              41f2 0030  ld   $30
              41f3 000c  ld   $0c
              41f4 00c3  ld   $c3
              41f5 0030  ld   $30
              41f6 000c  ld   $0c
              41f7 00c3  ld   $c3
              41f8 0030  ld   $30
              41f9 000c  ld   $0c
              41fa 00c3  ld   $c3
              41fb fe00  bra  ac          ;+-----------------------------------+
              41fc fcfd  bra  $41fd       ;|                                   |
              41fd 1418  ld   $18,y       ;| Trampoline for page $4100 lookups |
              41fe e006  jmp  y,$06       ;|                                   |
              41ff c218  st   [$18]       ;+-----------------------------------+
              4200 00f0  ld   $f0
              4201 00ff  ld   $ff
              4202 00c3  ld   $c3
              4203 0030  ld   $30
              4204 000c  ld   $0c
              4205 00c3  ld   $c3
              4206 00f0  ld   $f0
              4207 00ff  ld   $ff
              4208 00c3  ld   $c3
              4209 0030  ld   $30
              420a 000c  ld   $0c
              420b 00c3  ld   $c3
              420c 00ff  ld   $ff
              420d 000f  ld   $0f
              420e 00c3  ld   $c3
              420f 0030  ld   $30
              4210 000c  ld   $0c
              4211 00c3  ld   $c3
              4212 0030  ld   $30
              4213 000c  ld   $0c
              4214 00c3  ld   $c3
              4215 0030  ld   $30
              4216 000c  ld   $0c
              4217 00c3  ld   $c3
              4218 0030  ld   $30
              4219 000c  ld   $0c
              421a 00c3  ld   $c3
              421b 0030  ld   $30
              421c 000c  ld   $0c
              421d 00c3  ld   $c3
              421e 0030  ld   $30
              421f 000c  ld   $0c
              4220 00c3  ld   $c3
              4221 0030  ld   $30
              4222 000c  ld   $0c
              4223 00c3  ld   $c3
              4224 0015  ld   $15
              4225 000c  ld   $0c
              4226 00c3  ld   $c3
              4227 0030  ld   $30
              4228 000c  ld   $0c
              4229 00c3  ld   $c3
              422a 0030  ld   $30
              422b 000c  ld   $0c
              422c 00c3  ld   $c3
              422d 0030  ld   $30
              422e 001c  ld   $1c
              422f 00ac  ld   $ac
              4230 0056  ld   $56
              4231 0060  ld   $60
              4232 0059  ld   $59
              4233 0030  ld   $30
              4234 000c  ld   $0c
              4235 00c3  ld   $c3
              4236 0070  ld   $70
              4237 0055  ld   $55
              4238 00fd  ld   $fd
              4239 0055  ld   $55
              423a 00f5  ld   $f5
              423b 0057  ld   $57
              423c 00d5  ld   $d5
              423d 005f  ld   $5f
              423e 0055  ld   $55
              423f 007f  ld   $7f
              4240 0055  ld   $55
              4241 00fd  ld   $fd
              4242 0055  ld   $55
              4243 0005  ld   $05
              4244 00c3  ld   $c3
              4245 0030  ld   $30
              4246 000c  ld   $0c
              4247 00c3  ld   $c3
              4248 00f0  ld   $f0
              4249 000b  ld   $0b
              424a 00c0  ld   $c0
              424b 0030  ld   $30
              424c 000c  ld   $0c
              424d 00c3  ld   $c3
              424e 002f  ld   $2f
              424f 0000  ld   $00
              4250 00c3  ld   $c3
              4251 0030  ld   $30
              4252 000c  ld   $0c
              4253 00c3  ld   $c3
              4254 0030  ld   $30
              4255 000c  ld   $0c
              4256 00c3  ld   $c3
              4257 0030  ld   $30
              4258 000c  ld   $0c
              4259 00c3  ld   $c3
              425a 0030  ld   $30
              425b 000c  ld   $0c
              425c 00c3  ld   $c3
              425d 0030  ld   $30
              425e 000c  ld   $0c
              425f 00c3  ld   $c3
              4260 0030  ld   $30
              4261 000c  ld   $0c
              4262 00c3  ld   $c3
              4263 0030  ld   $30
              4264 000c  ld   $0c
              4265 00c3  ld   $c3
              4266 0030  ld   $30
              4267 000c  ld   $0c
              4268 00c3  ld   $c3
              4269 0030  ld   $30
              426a 000c  ld   $0c
              426b 00c3  ld   $c3
              426c 0030  ld   $30
              426d 000c  ld   $0c
              426e 00c3  ld   $c3
              426f 0030  ld   $30
              4270 000c  ld   $0c
              4271 00c3  ld   $c3
              4272 0030  ld   $30
              4273 000c  ld   $0c
              4274 00c3  ld   $c3
              4275 0030  ld   $30
              4276 000c  ld   $0c
              4277 00c3  ld   $c3
              4278 0030  ld   $30
              4279 000c  ld   $0c
              427a 00c3  ld   $c3
              427b 0030  ld   $30
              427c 000c  ld   $0c
              427d 00c3  ld   $c3
              427e 0030  ld   $30
              427f 000c  ld   $0c
              4280 00c3  ld   $c3
              4281 0030  ld   $30
              4282 000c  ld   $0c
              4283 00c3  ld   $c3
              4284 002a  ld   $2a
              4285 000c  ld   $0c
              4286 00c3  ld   $c3
              4287 00b0  ld   $b0
              4288 00aa  ld   $aa
              4289 00aa  ld   $aa
              428a 002a  ld   $2a
              428b 000c  ld   $0c
              428c 00c3  ld   $c3
              428d 0030  ld   $30
              428e 000c  ld   $0c
              428f 00c3  ld   $c3
              4290 0030  ld   $30
              4291 000c  ld   $0c
              4292 00c3  ld   $c3
              4293 0030  ld   $30
              4294 000c  ld   $0c
              4295 00c3  ld   $c3
              4296 0030  ld   $30
              4297 000c  ld   $0c
              4298 00bf  ld   $bf
              4299 0091  ld   $91
              429a 00f4  ld   $f4
              429b 0046  ld   $46
              429c 00d2  ld   $d2
              429d 000b  ld   $0b
              429e 00c3  ld   $c3
              429f 0030  ld   $30
              42a0 000c  ld   $0c
              42a1 00c3  ld   $c3
              42a2 0030  ld   $30
              42a3 000c  ld   $0c
              42a4 00c3  ld   $c3
              42a5 0030  ld   $30
              42a6 000c  ld   $0c
              42a7 00c3  ld   $c3
              42a8 0030  ld   $30
              42a9 000c  ld   $0c
              42aa 00c3  ld   $c3
              42ab 0030  ld   $30
              42ac 00ac  ld   $ac
              42ad 00c2  ld   $c2
              42ae 00b0  ld   $b0
              42af 00aa  ld   $aa
              42b0 00aa  ld   $aa
              42b1 00aa  ld   $aa
              42b2 00aa  ld   $aa
              42b3 00c2  ld   $c2
              42b4 00b0  ld   $b0
              42b5 000a  ld   $0a
              42b6 00c3  ld   $c3
              42b7 0030  ld   $30
              42b8 000c  ld   $0c
              42b9 00c3  ld   $c3
              42ba 0030  ld   $30
              42bb 000c  ld   $0c
              42bc 00c3  ld   $c3
              42bd 0030  ld   $30
              42be 000c  ld   $0c
              42bf 00c3  ld   $c3
              42c0 0030  ld   $30
              42c1 00ac  ld   $ac
              42c2 00fe  ld   $fe
              42c3 00ff  ld   $ff
              42c4 003f  ld   $3f
              42c5 00c0  ld   $c0
              42c6 0030  ld   $30
              42c7 00ac  ld   $ac
              42c8 00fe  ld   $fe
              42c9 00ff  ld   $ff
              42ca 003f  ld   $3f
              42cb 00c0  ld   $c0
              42cc 00b0  ld   $b0
              42cd 00fa  ld   $fa
              42ce 00ff  ld   $ff
              42cf 00ff  ld   $ff
              42d0 0000  ld   $00
              42d1 00c3  ld   $c3
              42d2 0030  ld   $30
              42d3 000c  ld   $0c
              42d4 00c3  ld   $c3
              42d5 0030  ld   $30
              42d6 000c  ld   $0c
              42d7 00c3  ld   $c3
              42d8 0030  ld   $30
              42d9 000c  ld   $0c
              42da 00c3  ld   $c3
              42db 0030  ld   $30
              42dc 000c  ld   $0c
              42dd 00c3  ld   $c3
              42de 0030  ld   $30
              42df 000c  ld   $0c
              42e0 00c3  ld   $c3
              42e1 0030  ld   $30
              42e2 000c  ld   $0c
              42e3 0057  ld   $57
              42e4 0055  ld   $55
              42e5 0005  ld   $05
              42e6 00c3  ld   $c3
              42e7 0030  ld   $30
              42e8 000c  ld   $0c
              42e9 00c3  ld   $c3
              42ea 0030  ld   $30
              42eb 000c  ld   $0c
              42ec 00c3  ld   $c3
              42ed 0096  ld   $96
              42ee 0015  ld   $15
              42ef 0058  ld   $58
              42f0 006b  ld   $6b
              42f1 00b0  ld   $b0
              42f2 00ae  ld   $ae
              42f3 0030  ld   $30
              42f4 000c  ld   $0c
              42f5 00c3  ld   $c3
              42f6 00f0  ld   $f0
              42f7 00ff  ld   $ff
              42f8 00ff  ld   $ff
              42f9 00ff  ld   $ff
              42fa 00ff  ld   $ff
              42fb fe00  bra  ac          ;+-----------------------------------+
              42fc fcfd  bra  $42fd       ;|                                   |
              42fd 1418  ld   $18,y       ;| Trampoline for page $4200 lookups |
              42fe e006  jmp  y,$06       ;|                                   |
              42ff c218  st   [$18]       ;+-----------------------------------+
              4300 00ff  ld   $ff
              4301 00ff  ld   $ff
              4302 00ff  ld   $ff
              * 8 times
              4308 000f  ld   $0f
              4309 00c3  ld   $c3
              430a 0030  ld   $30
              430b 000c  ld   $0c
              430c 00c3  ld   $c3
              430d 0030  ld   $30
              430e 00fc  ld   $fc
              430f 0003  ld   $03
              4310 0030  ld   $30
              4311 000c  ld   $0c
              4312 00ff  ld   $ff
              4313 0000  ld   $00
              4314 000c  ld   $0c
              4315 00c3  ld   $c3
              4316 0030  ld   $30
              4317 000c  ld   $0c
              4318 00c3  ld   $c3
              4319 0030  ld   $30
              431a 00fc  ld   $fc
              431b 00bf  ld   $bf
              431c 0030  ld   $30
              431d 000c  ld   $0c
              431e 00c3  ld   $c3
              431f 0030  ld   $30
              4320 000c  ld   $0c
              4321 00c3  ld   $c3
              4322 0030  ld   $30
              4323 000c  ld   $0c
              4324 00c3  ld   $c3
              4325 0030  ld   $30
              4326 000c  ld   $0c
              4327 00c3  ld   $c3
              4328 0030  ld   $30
              4329 000c  ld   $0c
              432a 00c3  ld   $c3
              432b 0030  ld   $30
              432c 000c  ld   $0c
              432d 00c3  ld   $c3
              432e 0030  ld   $30
              432f 000c  ld   $0c
              4330 00c3  ld   $c3
              4331 0030  ld   $30
              4332 000c  ld   $0c
              4333 00c3  ld   $c3
              4334 0030  ld   $30
              4335 000c  ld   $0c
              4336 00c3  ld   $c3
              4337 0030  ld   $30
              4338 000c  ld   $0c
              4339 00c3  ld   $c3
              433a 0030  ld   $30
              433b 000c  ld   $0c
              433c 00c3  ld   $c3
              433d 0030  ld   $30
              433e 000c  ld   $0c
              433f 00c3  ld   $c3
              4340 0030  ld   $30
              4341 000c  ld   $0c
              4342 00c3  ld   $c3
              4343 0030  ld   $30
              4344 000c  ld   $0c
              4345 00c3  ld   $c3
              4346 00f0  ld   $f0
              4347 00ff  ld   $ff
              4348 00ab  ld   $ab
              4349 00ff  ld   $ff
              434a 000f  ld   $0f
              434b 00c3  ld   $c3
              434c 006a  ld   $6a
              434d 00a5  ld   $a5
              434e 0056  ld   $56
              434f 002a  ld   $2a
              4350 000c  ld   $0c
              4351 00c3  ld   $c3
              4352 0030  ld   $30
              4353 000c  ld   $0c
              4354 00c3  ld   $c3
              4355 0030  ld   $30
              4356 000c  ld   $0c
              4357 00c3  ld   $c3
              4358 0030  ld   $30
              4359 000c  ld   $0c
              435a 00c3  ld   $c3
              435b 0030  ld   $30
              435c 00fc  ld   $fc
              435d 004a  ld   $4a
              435e 0030  ld   $30
              435f 00fc  ld   $fc
              4360 00c2  ld   $c2
              4361 0070  ld   $70
              4362 00f4  ld   $f4
              4363 00c2  ld   $c2
              4364 0030  ld   $30
              4365 000c  ld   $0c
              4366 00c3  ld   $c3
              4367 0030  ld   $30
              4368 000c  ld   $0c
              4369 00c3  ld   $c3
              436a 0030  ld   $30
              436b 000c  ld   $0c
              436c 00c3  ld   $c3
              436d 0030  ld   $30
              436e 000c  ld   $0c
              436f 00c3  ld   $c3
              4370 00f0  ld   $f0
              4371 00af  ld   $af
              4372 00fe  ld   $fe
              4373 00aa  ld   $aa
              4374 00aa  ld   $aa
              4375 00aa  ld   $aa
              * 6 times
              4379 00bf  ld   $bf
              437a 00fa  ld   $fa
              437b 00c3  ld   $c3
              437c 0030  ld   $30
              437d 000c  ld   $0c
              437e 00c3  ld   $c3
              437f 0030  ld   $30
              4380 000c  ld   $0c
              4381 00c3  ld   $c3
              4382 0030  ld   $30
              4383 000c  ld   $0c
              4384 00c3  ld   $c3
              4385 00f0  ld   $f0
              4386 00ff  ld   $ff
              4387 00ff  ld   $ff
              4388 0030  ld   $30
              4389 000c  ld   $0c
              438a 00c3  ld   $c3
              438b 00f0  ld   $f0
              438c 00ff  ld   $ff
              438d 00ff  ld   $ff
              438e 0030  ld   $30
              438f 000c  ld   $0c
              4390 00c3  ld   $c3
              4391 00ff  ld   $ff
              4392 00ff  ld   $ff
              4393 00c3  ld   $c3
              4394 0030  ld   $30
              4395 000c  ld   $0c
              4396 00c3  ld   $c3
              4397 0030  ld   $30
              4398 000c  ld   $0c
              4399 00c3  ld   $c3
              439a 0030  ld   $30
              439b 000c  ld   $0c
              439c 00c3  ld   $c3
              439d 0030  ld   $30
              439e 000c  ld   $0c
              439f 00c3  ld   $c3
              43a0 0030  ld   $30
              43a1 000c  ld   $0c
              43a2 00c3  ld   $c3
              43a3 0030  ld   $30
              43a4 000c  ld   $0c
              43a5 00c3  ld   $c3
              43a6 0030  ld   $30
              43a7 000c  ld   $0c
              43a8 00c3  ld   $c3
              43a9 0015  ld   $15
              43aa 000c  ld   $0c
              43ab 00c3  ld   $c3
              43ac 0030  ld   $30
              43ad 000c  ld   $0c
              43ae 00c3  ld   $c3
              43af 0030  ld   $30
              43b0 000c  ld   $0c
              43b1 00c3  ld   $c3
              43b2 00eb  ld   $eb
              43b3 001a  ld   $1a
              43b4 00ac  ld   $ac
              43b5 0056  ld   $56
              43b6 00b0  ld   $b0
              43b7 00a6  ld   $a6
              43b8 0030  ld   $30
              43b9 000c  ld   $0c
              43ba 00c3  ld   $c3
              43bb 0070  ld   $70
              43bc 0055  ld   $55
              43bd 00fd  ld   $fd
              43be 0055  ld   $55
              43bf 00f5  ld   $f5
              43c0 0057  ld   $57
              43c1 00d5  ld   $d5
              43c2 005f  ld   $5f
              43c3 0055  ld   $55
              43c4 007f  ld   $7f
              43c5 0055  ld   $55
              43c6 00fd  ld   $fd
              43c7 0055  ld   $55
              43c8 0005  ld   $05
              43c9 00c3  ld   $c3
              43ca 0030  ld   $30
              43cb 000c  ld   $0c
              43cc 00c3  ld   $c3
              43cd 0030  ld   $30
              43ce 000c  ld   $0c
              43cf 00bf  ld   $bf
              43d0 0000  ld   $00
              43d1 00fc  ld   $fc
              43d2 0002  ld   $02
              43d3 0030  ld   $30
              43d4 000c  ld   $0c
              43d5 00c3  ld   $c3
              43d6 0030  ld   $30
              43d7 000c  ld   $0c
              43d8 00c3  ld   $c3
              43d9 0030  ld   $30
              43da 006c  ld   $6c
              43db 00fc  ld   $fc
              43dc 0030  ld   $30
              43dd 000c  ld   $0c
              43de 00c3  ld   $c3
              43df 0030  ld   $30
              43e0 000c  ld   $0c
              43e1 00c3  ld   $c3
              43e2 0030  ld   $30
              43e3 000c  ld   $0c
              43e4 00c3  ld   $c3
              43e5 0030  ld   $30
              43e6 000c  ld   $0c
              43e7 00c3  ld   $c3
              43e8 0030  ld   $30
              43e9 000c  ld   $0c
              43ea 00c3  ld   $c3
              43eb 0030  ld   $30
              43ec 000c  ld   $0c
              43ed 00c3  ld   $c3
              43ee 0030  ld   $30
              43ef 000c  ld   $0c
              43f0 00c3  ld   $c3
              43f1 0030  ld   $30
              43f2 000c  ld   $0c
              43f3 00c3  ld   $c3
              43f4 0030  ld   $30
              43f5 000c  ld   $0c
              43f6 00c3  ld   $c3
              43f7 0030  ld   $30
              43f8 000c  ld   $0c
              43f9 00c3  ld   $c3
              43fa 0030  ld   $30
              43fb fe00  bra  ac          ;+-----------------------------------+
              43fc fcfd  bra  $43fd       ;|                                   |
              43fd 1418  ld   $18,y       ;| Trampoline for page $4300 lookups |
              43fe e006  jmp  y,$06       ;|                                   |
              43ff c218  st   [$18]       ;+-----------------------------------+
              4400 000c  ld   $0c
              4401 00c3  ld   $c3
              4402 0030  ld   $30
              4403 000c  ld   $0c
              4404 00c3  ld   $c3
              4405 0030  ld   $30
              4406 000c  ld   $0c
              4407 00c3  ld   $c3
              4408 0030  ld   $30
              4409 000c  ld   $0c
              440a 00c3  ld   $c3
              440b 00f0  ld   $f0
              440c 00af  ld   $af
              440d 00fe  ld   $fe
              440e 00ea  ld   $ea
              440f 000f  ld   $0f
              4410 00ab  ld   $ab
              4411 00aa  ld   $aa
              4412 00aa  ld   $aa
              4413 00aa  ld   $aa
              4414 002a  ld   $2a
              4415 000c  ld   $0c
              4416 00c3  ld   $c3
              4417 0030  ld   $30
              4418 000c  ld   $0c
              4419 00c3  ld   $c3
              441a 0030  ld   $30
              441b 000c  ld   $0c
              441c 00c3  ld   $c3
              441d 0030  ld   $30
              441e 000c  ld   $0c
              441f 00c3  ld   $c3
              4420 00f0  ld   $f0
              4421 001b  ld   $1b
              4422 00bd  ld   $bd
              4423 0030  ld   $30
              4424 00fc  ld   $fc
              4425 00c2  ld   $c2
              4426 00f0  ld   $f0
              4427 002b  ld   $2b
              4428 00bd  ld   $bd
              4429 0030  ld   $30
              442a 000c  ld   $0c
              442b 00c3  ld   $c3
              442c 0030  ld   $30
              442d 000c  ld   $0c
              442e 00c3  ld   $c3
              442f 0030  ld   $30
              4430 000c  ld   $0c
              4431 00c3  ld   $c3
              4432 0030  ld   $30
              4433 000c  ld   $0c
              4434 00c3  ld   $c3
              4435 00f0  ld   $f0
              4436 00af  ld   $af
              4437 00ab  ld   $ab
              4438 0095  ld   $95
              4439 005a  ld   $5a
              443a 0055  ld   $55
              443b 006a  ld   $6a
              443c 00a5  ld   $a5
              443d 0056  ld   $56
              443e 00aa  ld   $aa
              443f 00fe  ld   $fe
              4440 00c3  ld   $c3
              4441 0030  ld   $30
              4442 000c  ld   $0c
              4443 00c3  ld   $c3
              4444 0030  ld   $30
              4445 000c  ld   $0c
              4446 00c3  ld   $c3
              4447 0030  ld   $30
              4448 000c  ld   $0c
              4449 00c3  ld   $c3
              444a 00ff  ld   $ff
              444b 00af  ld   $af
              444c 00fe  ld   $fe
              444d 0030  ld   $30
              444e 000c  ld   $0c
              444f 00c3  ld   $c3
              4450 00ff  ld   $ff
              4451 00af  ld   $af
              4452 00fe  ld   $fe
              4453 0030  ld   $30
              4454 000c  ld   $0c
              4455 00ff  ld   $ff
              4456 00bf  ld   $bf
              4457 00fa  ld   $fa
              4458 00c3  ld   $c3
              4459 0030  ld   $30
              445a 000c  ld   $0c
              445b 00c3  ld   $c3
              445c 0030  ld   $30
              445d 000c  ld   $0c
              445e 00c3  ld   $c3
              445f 0030  ld   $30
              4460 000c  ld   $0c
              4461 00c3  ld   $c3
              4462 0030  ld   $30
              4463 000c  ld   $0c
              4464 00c3  ld   $c3
              4465 0030  ld   $30
              4466 000c  ld   $0c
              4467 00c3  ld   $c3
              4468 0030  ld   $30
              4469 000c  ld   $0c
              446a 00c3  ld   $c3
              446b 0030  ld   $30
              446c 000c  ld   $0c
              446d 00ab  ld   $ab
              446e 0095  ld   $95
              446f 000a  ld   $0a
              4470 00c3  ld   $c3
              4471 0030  ld   $30
              4472 000c  ld   $0c
              4473 00c3  ld   $c3
              4474 0030  ld   $30
              4475 000c  ld   $0c
              4476 00c3  ld   $c3
              4477 00e9  ld   $e9
              4478 001a  ld   $1a
              4479 0058  ld   $58
              447a 0041  ld   $41
              447b 00b0  ld   $b0
              447c 00ae  ld   $ae
              447d 0030  ld   $30
              447e 000c  ld   $0c
              447f 00c3  ld   $c3
              4480 00b0  ld   $b0
              4481 00ae  ld   $ae
              4482 00fe  ld   $fe
              4483 00aa  ld   $aa
              4484 00fe  ld   $fe
              4485 00ab  ld   $ab
              4486 00ea  ld   $ea
              4487 00af  ld   $af
              4488 00ab  ld   $ab
              4489 00bf  ld   $bf
              448a 00aa  ld   $aa
              448b 00ff  ld   $ff
              448c 00aa  ld   $aa
              448d 000e  ld   $0e
              448e 00c3  ld   $c3
              448f 0030  ld   $30
              4490 000c  ld   $0c
              4491 00c3  ld   $c3
              4492 0030  ld   $30
              4493 000c  ld   $0c
              4494 00c3  ld   $c3
              4495 007f  ld   $7f
              4496 0005  ld   $05
              4497 00c0  ld   $c0
              4498 0030  ld   $30
              4499 000c  ld   $0c
              449a 00c3  ld   $c3
              449b 0030  ld   $30
              449c 000c  ld   $0c
              449d 00c3  ld   $c3
              449e 0030  ld   $30
              449f 00bc  ld   $bc
              44a0 00bc  ld   $bc
              44a1 0030  ld   $30
              44a2 000c  ld   $0c
              44a3 00c3  ld   $c3
              44a4 0030  ld   $30
              44a5 000c  ld   $0c
              44a6 00c3  ld   $c3
              44a7 0030  ld   $30
              44a8 000c  ld   $0c
              44a9 00c3  ld   $c3
              44aa 0030  ld   $30
              44ab 000c  ld   $0c
              44ac 00c3  ld   $c3
              44ad 0030  ld   $30
              44ae 000c  ld   $0c
              44af 00c3  ld   $c3
              44b0 0030  ld   $30
              44b1 000c  ld   $0c
              44b2 00c3  ld   $c3
              44b3 0030  ld   $30
              44b4 000c  ld   $0c
              44b5 00c3  ld   $c3
              44b6 0030  ld   $30
              44b7 000c  ld   $0c
              44b8 00c3  ld   $c3
              44b9 0030  ld   $30
              44ba 000c  ld   $0c
              44bb 00c3  ld   $c3
              44bc 0030  ld   $30
              44bd 000c  ld   $0c
              44be 00c3  ld   $c3
              44bf 0030  ld   $30
              44c0 000c  ld   $0c
              44c1 00c3  ld   $c3
              44c2 0030  ld   $30
              44c3 000c  ld   $0c
              44c4 00c3  ld   $c3
              44c5 0030  ld   $30
              44c6 000c  ld   $0c
              44c7 00c3  ld   $c3
              44c8 0030  ld   $30
              44c9 000c  ld   $0c
              44ca 00c3  ld   $c3
              44cb 00b0  ld   $b0
              44cc 00fa  ld   $fa
              44cd 00ab  ld   $ab
              44ce 00bf  ld   $bf
              44cf 000a  ld   $0a
              44d0 00ab  ld   $ab
              44d1 0095  ld   $95
              44d2 005a  ld   $5a
              44d3 00a9  ld   $a9
              44d4 002a  ld   $2a
              44d5 000c  ld   $0c
              44d6 00c3  ld   $c3
              44d7 0012  ld   $12
              44d8 005c  ld   $5c
              44d9 00c2  ld   $c2
              44da 0030  ld   $30
              44db 000c  ld   $0c
              44dc 00c3  ld   $c3
              44dd 0030  ld   $30
              44de 000c  ld   $0c
              44df 00c3  ld   $c3
              44e0 00bf  ld   $bf
              44e1 0004  ld   $04
              44e2 00c3  ld   $c3
              44e3 002f  ld   $2f
              44e4 00fc  ld   $fc
              44e5 00c2  ld   $c2
              44e6 002f  ld   $2f
              44e7 000c  ld   $0c
              44e8 0047  ld   $47
              44e9 003f  ld   $3f
              44ea 000c  ld   $0c
              44eb 00c3  ld   $c3
              44ec 0030  ld   $30
              44ed 000c  ld   $0c
              44ee 00c3  ld   $c3
              44ef 0030  ld   $30
              44f0 000c  ld   $0c
              44f1 00c3  ld   $c3
              44f2 0030  ld   $30
              44f3 000c  ld   $0c
              44f4 00c3  ld   $c3
              44f5 00b0  ld   $b0
              44f6 00aa  ld   $aa
              44f7 00aa  ld   $aa
              44f8 0095  ld   $95
              44f9 005a  ld   $5a
              44fa 00a9  ld   $a9
              44fb fe00  bra  ac          ;+-----------------------------------+
              44fc fcfd  bra  $44fd       ;|                                   |
              44fd 1418  ld   $18,y       ;| Trampoline for page $4400 lookups |
              44fe e006  jmp  y,$06       ;|                                   |
              44ff c218  st   [$18]       ;+-----------------------------------+
              4500 006a  ld   $6a
              4501 00a5  ld   $a5
              4502 0056  ld   $56
              4503 00aa  ld   $aa
              4504 00aa  ld   $aa
              4505 00c2  ld   $c2
              4506 0030  ld   $30
              4507 000c  ld   $0c
              4508 00c3  ld   $c3
              4509 0030  ld   $30
              450a 000c  ld   $0c
              450b 00c3  ld   $c3
              450c 0030  ld   $30
              450d 000c  ld   $0c
              450e 000f  ld   $0f
              450f 003f  ld   $3f
              4510 00ac  ld   $ac
              4511 00fe  ld   $fe
              4512 0030  ld   $30
              4513 000c  ld   $0c
              4514 000f  ld   $0f
              4515 003f  ld   $3f
              4516 00ac  ld   $ac
              4517 00fe  ld   $fe
              4518 0030  ld   $30
              4519 003c  ld   $3c
              451a 00fc  ld   $fc
              451b 00b0  ld   $b0
              451c 00fa  ld   $fa
              451d 00c3  ld   $c3
              451e 0030  ld   $30
              451f 000c  ld   $0c
              4520 00c3  ld   $c3
              4521 0030  ld   $30
              4522 000c  ld   $0c
              4523 00c3  ld   $c3
              4524 0030  ld   $30
              4525 000c  ld   $0c
              4526 00c3  ld   $c3
              4527 0030  ld   $30
              4528 000c  ld   $0c
              4529 00c3  ld   $c3
              452a 0030  ld   $30
              452b 000c  ld   $0c
              452c 00c3  ld   $c3
              452d 0030  ld   $30
              452e 000c  ld   $0c
              452f 00c3  ld   $c3
              4530 0030  ld   $30
              4531 000c  ld   $0c
              4532 00c3  ld   $c3
              4533 0015  ld   $15
              4534 000c  ld   $0c
              4535 00c3  ld   $c3
              4536 0030  ld   $30
              4537 000c  ld   $0c
              4538 00c3  ld   $c3
              4539 0030  ld   $30
              453a 000c  ld   $0c
              453b 00c3  ld   $c3
              453c 00eb  ld   $eb
              453d 001a  ld   $1a
              453e 0004  ld   $04
              453f 0069  ld   $69
              4540 00b0  ld   $b0
              4541 00a6  ld   $a6
              4542 0030  ld   $30
              4543 000c  ld   $0c
              4544 00c3  ld   $c3
              4545 0070  ld   $70
              4546 0055  ld   $55
              4547 00fd  ld   $fd
              4548 0055  ld   $55
              4549 00f5  ld   $f5
              454a 0057  ld   $57
              454b 00d5  ld   $d5
              454c 005f  ld   $5f
              454d 0055  ld   $55
              454e 007f  ld   $7f
              454f 0055  ld   $55
              4550 00fd  ld   $fd
              4551 0055  ld   $55
              4552 0005  ld   $05
              4553 00c3  ld   $c3
              4554 0030  ld   $30
              4555 000c  ld   $0c
              4556 00c3  ld   $c3
              4557 0030  ld   $30
              4558 000c  ld   $0c
              4559 00c3  ld   $c3
              455a 0030  ld   $30
              455b 0050  ld   $50
              455c 00fd  ld   $fd
              455d 0030  ld   $30
              455e 000c  ld   $0c
              455f 00c3  ld   $c3
              4560 0030  ld   $30
              4561 000c  ld   $0c
              4562 00c3  ld   $c3
              4563 0030  ld   $30
              4564 006c  ld   $6c
              4565 00fc  ld   $fc
              4566 0030  ld   $30
              4567 000c  ld   $0c
              4568 00c3  ld   $c3
              4569 0030  ld   $30
              456a 000c  ld   $0c
              456b 00c3  ld   $c3
              456c 0030  ld   $30
              456d 000c  ld   $0c
              456e 00c3  ld   $c3
              456f 0030  ld   $30
              4570 000c  ld   $0c
              4571 00c3  ld   $c3
              4572 0030  ld   $30
              4573 000c  ld   $0c
              4574 00c3  ld   $c3
              4575 0030  ld   $30
              4576 000c  ld   $0c
              4577 00c3  ld   $c3
              4578 0030  ld   $30
              4579 000c  ld   $0c
              457a 00c3  ld   $c3
              457b 0030  ld   $30
              457c 000c  ld   $0c
              457d 00c3  ld   $c3
              457e 0030  ld   $30
              457f 000c  ld   $0c
              4580 00c3  ld   $c3
              4581 0030  ld   $30
              4582 000c  ld   $0c
              4583 00c3  ld   $c3
              4584 0030  ld   $30
              4585 000c  ld   $0c
              4586 00c3  ld   $c3
              4587 0030  ld   $30
              4588 000c  ld   $0c
              4589 00c3  ld   $c3
              458a 0030  ld   $30
              458b 000c  ld   $0c
              458c 00c3  ld   $c3
              458d 0030  ld   $30
              458e 000c  ld   $0c
              458f 00c3  ld   $c3
              4590 0070  ld   $70
              4591 00a5  ld   $a5
              4592 00fe  ld   $fe
              4593 00ea  ld   $ea
              4594 000f  ld   $0f
              4595 00ab  ld   $ab
              4596 006a  ld   $6a
              4597 00a5  ld   $a5
              4598 0056  ld   $56
              4599 002a  ld   $2a
              459a 000c  ld   $0c
              459b 004b  ld   $4b
              459c 0092  ld   $92
              459d 0054  ld   $54
              459e 0096  ld   $96
              459f 0030  ld   $30
              45a0 000c  ld   $0c
              45a1 00c3  ld   $c3
              45a2 0030  ld   $30
              45a3 000c  ld   $0c
              45a4 00c3  ld   $c3
              45a5 006f  ld   $6f
              45a6 0004  ld   $04
              45a7 00c3  ld   $c3
              45a8 00f0  ld   $f0
              45a9 000b  ld   $0b
              45aa 00bf  ld   $bf
              45ab 0030  ld   $30
              45ac 000c  ld   $0c
              45ad 004b  ld   $4b
              45ae 002f  ld   $2f
              45af 000c  ld   $0c
              45b0 00c3  ld   $c3
              45b1 0030  ld   $30
              45b2 000c  ld   $0c
              45b3 00c3  ld   $c3
              45b4 0030  ld   $30
              45b5 00fc  ld   $fc
              45b6 00ff  ld   $ff
              45b7 00ff  ld   $ff
              45b8 00ff  ld   $ff
              45b9 00ff  ld   $ff
              45ba 00aa  ld   $aa
              45bb 0065  ld   $65
              45bc 00a9  ld   $a9
              45bd 00aa  ld   $aa
              45be 00aa  ld   $aa
              45bf 00aa  ld   $aa
              * 7 times
              45c4 0065  ld   $65
              45c5 00a9  ld   $a9
              45c6 00ff  ld   $ff
              45c7 00ff  ld   $ff
              45c8 00ff  ld   $ff
              45c9 00ff  ld   $ff
              45ca 000f  ld   $0f
              45cb 00c3  ld   $c3
              45cc 0030  ld   $30
              45cd 000c  ld   $0c
              45ce 00c3  ld   $c3
              45cf 0030  ld   $30
              45d0 00ac  ld   $ac
              45d1 00fe  ld   $fe
              45d2 0030  ld   $30
              45d3 000c  ld   $0c
              45d4 00c3  ld   $c3
              45d5 0030  ld   $30
              45d6 00ac  ld   $ac
              45d7 00fe  ld   $fe
              45d8 0030  ld   $30
              45d9 000c  ld   $0c
              45da 00c3  ld   $c3
              45db 00b0  ld   $b0
              45dc 00fa  ld   $fa
              45dd 00c3  ld   $c3
              45de 0030  ld   $30
              45df 000c  ld   $0c
              45e0 00c3  ld   $c3
              45e1 0030  ld   $30
              45e2 000c  ld   $0c
              45e3 00c3  ld   $c3
              45e4 0030  ld   $30
              45e5 000c  ld   $0c
              45e6 00c3  ld   $c3
              45e7 0030  ld   $30
              45e8 000c  ld   $0c
              45e9 00c3  ld   $c3
              45ea 0030  ld   $30
              45eb 000c  ld   $0c
              45ec 00c3  ld   $c3
              45ed 0030  ld   $30
              45ee 000c  ld   $0c
              45ef 00c3  ld   $c3
              45f0 0030  ld   $30
              45f1 000c  ld   $0c
              45f2 00c3  ld   $c3
              45f3 0015  ld   $15
              45f4 000c  ld   $0c
              45f5 00c3  ld   $c3
              45f6 0030  ld   $30
              45f7 000c  ld   $0c
              45f8 00c3  ld   $c3
              45f9 0030  ld   $30
              45fa 000c  ld   $0c
              45fb fe00  bra  ac          ;+-----------------------------------+
              45fc fcfd  bra  $45fd       ;|                                   |
              45fd 1418  ld   $18,y       ;| Trampoline for page $4500 lookups |
              45fe e006  jmp  y,$06       ;|                                   |
              45ff c218  st   [$18]       ;+-----------------------------------+
              4600 00c3  ld   $c3
              4601 00e9  ld   $e9
              4602 001a  ld   $1a
              4603 00a4  ld   $a4
              4604 0041  ld   $41
              4605 00b0  ld   $b0
              4606 00ae  ld   $ae
              4607 0030  ld   $30
              4608 000c  ld   $0c
              4609 00c3  ld   $c3
              460a 00b0  ld   $b0
              460b 00aa  ld   $aa
              460c 00ff  ld   $ff
              460d 00ba  ld   $ba
              460e 00fa  ld   $fa
              460f 00ab  ld   $ab
              4610 00fa  ld   $fa
              4611 00af  ld   $af
              4612 00aa  ld   $aa
              4613 00bf  ld   $bf
              4614 00ae  ld   $ae
              4615 00fe  ld   $fe
              4616 00ba  ld   $ba
              4617 000a  ld   $0a
              4618 00c3  ld   $c3
              4619 0030  ld   $30
              461a 000c  ld   $0c
              461b 00c3  ld   $c3
              461c 0030  ld   $30
              461d 000c  ld   $0c
              461e 00c3  ld   $c3
              461f 00c0  ld   $c0
              4620 006b  ld   $6b
              4621 0001  ld   $01
              4622 002f  ld   $2f
              4623 000c  ld   $0c
              4624 00c3  ld   $c3
              4625 0030  ld   $30
              4626 000c  ld   $0c
              4627 00c3  ld   $c3
              4628 0030  ld   $30
              4629 00bc  ld   $bc
              462a 00bc  ld   $bc
              462b 0030  ld   $30
              462c 000c  ld   $0c
              462d 00c3  ld   $c3
              462e 0030  ld   $30
              462f 000c  ld   $0c
              4630 00c3  ld   $c3
              4631 0030  ld   $30
              4632 000c  ld   $0c
              4633 00c3  ld   $c3
              4634 0030  ld   $30
              4635 000c  ld   $0c
              4636 00c3  ld   $c3
              4637 0030  ld   $30
              4638 000c  ld   $0c
              4639 00c3  ld   $c3
              463a 0030  ld   $30
              463b 000c  ld   $0c
              463c 00c3  ld   $c3
              463d 0030  ld   $30
              463e 000c  ld   $0c
              463f 00c3  ld   $c3
              4640 0030  ld   $30
              4641 000c  ld   $0c
              4642 00c3  ld   $c3
              4643 0030  ld   $30
              4644 000c  ld   $0c
              4645 00c3  ld   $c3
              4646 0030  ld   $30
              4647 000c  ld   $0c
              4648 00c3  ld   $c3
              4649 0030  ld   $30
              464a 000c  ld   $0c
              464b 00c3  ld   $c3
              464c 0030  ld   $30
              464d 000c  ld   $0c
              464e 00c3  ld   $c3
              464f 0030  ld   $30
              4650 000c  ld   $0c
              4651 00c3  ld   $c3
              4652 0030  ld   $30
              4653 000c  ld   $0c
              4654 00c3  ld   $c3
              4655 00b0  ld   $b0
              4656 005a  ld   $5a
              4657 00a9  ld   $a9
              4658 00bf  ld   $bf
              4659 000a  ld   $0a
              465a 00ab  ld   $ab
              465b 0095  ld   $95
              465c 005a  ld   $5a
              465d 00a9  ld   $a9
              465e 002a  ld   $2a
              465f 000c  ld   $0c
              4660 004b  ld   $4b
              4661 00a3  ld   $a3
              4662 0094  ld   $94
              4663 0097  ld   $97
              4664 0030  ld   $30
              4665 000c  ld   $0c
              4666 00c3  ld   $c3
              4667 0030  ld   $30
              4668 000c  ld   $0c
              4669 00c3  ld   $c3
              466a 00ff  ld   $ff
              466b 00fb  ld   $fb
              466c 00be  ld   $be
              466d 002f  ld   $2f
              466e 00fc  ld   $fc
              466f 00c3  ld   $c3
              4670 00ef  ld   $ef
              4671 00fb  ld   $fb
              4672 00be  ld   $be
              4673 003f  ld   $3f
              4674 000c  ld   $0c
              4675 00c3  ld   $c3
              4676 0030  ld   $30
              4677 000c  ld   $0c
              4678 00c3  ld   $c3
              4679 0030  ld   $30
              467a 00ac  ld   $ac
              467b 0069  ld   $69
              467c 009a  ld   $9a
              467d 00a6  ld   $a6
              467e 0069  ld   $69
              467f 0096  ld   $96
              4680 00aa  ld   $aa
              4681 001a  ld   $1a
              4682 0096  ld   $96
              4683 0065  ld   $65
              4684 0059  ld   $59
              4685 0096  ld   $96
              4686 0065  ld   $65
              4687 0059  ld   $59
              4688 0086  ld   $86
              4689 00aa  ld   $aa
              468a 005a  ld   $5a
              468b 009a  ld   $9a
              468c 00a6  ld   $a6
              468d 0069  ld   $69
              468e 009a  ld   $9a
              468f 0006  ld   $06
              4690 00c3  ld   $c3
              4691 0030  ld   $30
              4692 000c  ld   $0c
              4693 00c3  ld   $c3
              4694 0030  ld   $30
              4695 00ac  ld   $ac
              4696 00fe  ld   $fe
              4697 0030  ld   $30
              4698 000c  ld   $0c
              4699 00c3  ld   $c3
              469a 0030  ld   $30
              469b 00ac  ld   $ac
              469c 00fe  ld   $fe
              469d 0030  ld   $30
              469e 000c  ld   $0c
              469f 00c3  ld   $c3
              46a0 00b0  ld   $b0
              46a1 00fa  ld   $fa
              46a2 00c3  ld   $c3
              46a3 0030  ld   $30
              46a4 000c  ld   $0c
              46a5 00c3  ld   $c3
              46a6 0030  ld   $30
              46a7 000c  ld   $0c
              46a8 00c3  ld   $c3
              46a9 0030  ld   $30
              46aa 000c  ld   $0c
              46ab 00c3  ld   $c3
              46ac 0030  ld   $30
              46ad 000c  ld   $0c
              46ae 00c3  ld   $c3
              46af 0030  ld   $30
              46b0 00ac  ld   $ac
              46b1 00aa  ld   $aa
              46b2 00ff  ld   $ff
              46b3 00ff  ld   $ff
              46b4 00ff  ld   $ff
              * 5 times
              46b7 00c3  ld   $c3
              46b8 0015  ld   $15
              46b9 000c  ld   $0c
              46ba 00c3  ld   $c3
              46bb 0030  ld   $30
              46bc 000c  ld   $0c
              46bd 00c3  ld   $c3
              46be 0030  ld   $30
              46bf 000c  ld   $0c
              46c0 00c3  ld   $c3
              46c1 00eb  ld   $eb
              46c2 001a  ld   $1a
              46c3 0004  ld   $04
              46c4 0069  ld   $69
              46c5 00b0  ld   $b0
              46c6 00a6  ld   $a6
              46c7 0030  ld   $30
              46c8 000c  ld   $0c
              46c9 00c3  ld   $c3
              46ca 0070  ld   $70
              46cb 0055  ld   $55
              46cc 00fd  ld   $fd
              46cd 0055  ld   $55
              46ce 00f5  ld   $f5
              46cf 0057  ld   $57
              46d0 00d5  ld   $d5
              46d1 005f  ld   $5f
              46d2 0055  ld   $55
              46d3 007f  ld   $7f
              46d4 0055  ld   $55
              46d5 00fd  ld   $fd
              46d6 0055  ld   $55
              46d7 0005  ld   $05
              46d8 00c3  ld   $c3
              46d9 0030  ld   $30
              46da 000c  ld   $0c
              46db 00c3  ld   $c3
              46dc 0030  ld   $30
              46dd 000c  ld   $0c
              46de 0003  ld   $03
              46df 007f  ld   $7f
              46e0 0010  ld   $10
              46e1 0004  ld   $04
              46e2 00c0  ld   $c0
              46e3 000f  ld   $0f
              46e4 00c3  ld   $c3
              46e5 0030  ld   $30
              46e6 000c  ld   $0c
              46e7 00c3  ld   $c3
              46e8 0030  ld   $30
              46e9 006c  ld   $6c
              46ea 00fc  ld   $fc
              46eb 0041  ld   $41
              46ec 0010  ld   $10
              46ed 0004  ld   $04
              46ee 0041  ld   $41
              46ef 0010  ld   $10
              46f0 0004  ld   $04
              46f1 0041  ld   $41
              46f2 0010  ld   $10
              46f3 0004  ld   $04
              46f4 0041  ld   $41
              46f5 0010  ld   $10
              46f6 0004  ld   $04
              46f7 0041  ld   $41
              46f8 0010  ld   $10
              46f9 0004  ld   $04
              46fa 0030  ld   $30
              46fb fe00  bra  ac          ;+-----------------------------------+
              46fc fcfd  bra  $46fd       ;|                                   |
              46fd 1418  ld   $18,y       ;| Trampoline for page $4600 lookups |
              46fe e006  jmp  y,$06       ;|                                   |
              46ff c218  st   [$18]       ;+-----------------------------------+
              4700 000c  ld   $0c
              4701 00c3  ld   $c3
              4702 0030  ld   $30
              4703 000c  ld   $0c
              4704 00c3  ld   $c3
              4705 0030  ld   $30
              4706 000c  ld   $0c
              4707 00c3  ld   $c3
              4708 0030  ld   $30
              4709 000c  ld   $0c
              470a 00c3  ld   $c3
              470b 0030  ld   $30
              470c 000c  ld   $0c
              470d 00c3  ld   $c3
              470e 0030  ld   $30
              470f 000c  ld   $0c
              4710 00c3  ld   $c3
              4711 0030  ld   $30
              4712 000c  ld   $0c
              4713 00c3  ld   $c3
              4714 0030  ld   $30
              4715 000c  ld   $0c
              4716 00c3  ld   $c3
              4717 0030  ld   $30
              4718 000c  ld   $0c
              4719 00c3  ld   $c3
              471a 0070  ld   $70
              471b 00a5  ld   $a5
              471c 00fe  ld   $fe
              471d 00ea  ld   $ea
              471e 000f  ld   $0f
              471f 00ab  ld   $ab
              4720 006a  ld   $6a
              4721 00a5  ld   $a5
              4722 0056  ld   $56
              4723 002a  ld   $2a
              4724 001c  ld   $1c
              4725 0058  ld   $58
              4726 0081  ld   $81
              4727 0015  ld   $15
              4728 0058  ld   $58
              4729 0011  ld   $11
              472a 000c  ld   $0c
              472b 00c3  ld   $c3
              472c 0030  ld   $30
              472d 000c  ld   $0c
              472e 00c3  ld   $c3
              472f 00af  ld   $af
              4730 0004  ld   $04
              4731 00c3  ld   $c3
              4732 00f0  ld   $f0
              4733 000f  ld   $0f
              4734 00ff  ld   $ff
              4735 0030  ld   $30
              4736 000c  ld   $0c
              4737 0047  ld   $47
              4738 002f  ld   $2f
              4739 000c  ld   $0c
              473a 00c3  ld   $c3
              473b 0030  ld   $30
              473c 000c  ld   $0c
              473d 00c3  ld   $c3
              473e 0030  ld   $30
              473f 005c  ld   $5c
              4740 0055  ld   $55
              4741 0055  ld   $55
              4742 0055  ld   $55
              4743 0055  ld   $55
              4744 00d6  ld   $d6
              4745 00fa  ld   $fa
              4746 005a  ld   $5a
              4747 0069  ld   $69
              4748 009a  ld   $9a
              4749 00a6  ld   $a6
              474a 0069  ld   $69
              474b 009a  ld   $9a
              474c 00a6  ld   $a6
              474d 00d6  ld   $d6
              474e 00bb  ld   $bb
              474f 005a  ld   $5a
              4750 0055  ld   $55
              4751 0055  ld   $55
              4752 0055  ld   $55
              4753 0055  ld   $55
              4754 0005  ld   $05
              4755 00c3  ld   $c3
              4756 0030  ld   $30
              4757 000c  ld   $0c
              4758 00c3  ld   $c3
              4759 0030  ld   $30
              475a 00ac  ld   $ac
              475b 00fe  ld   $fe
              475c 0030  ld   $30
              475d 000c  ld   $0c
              475e 00c3  ld   $c3
              475f 0030  ld   $30
              4760 00ac  ld   $ac
              4761 00fe  ld   $fe
              4762 0030  ld   $30
              4763 000c  ld   $0c
              4764 00c3  ld   $c3
              4765 00b0  ld   $b0
              4766 00fa  ld   $fa
              4767 00c3  ld   $c3
              4768 0030  ld   $30
              4769 000c  ld   $0c
              476a 00c3  ld   $c3
              476b 0030  ld   $30
              476c 000c  ld   $0c
              476d 00c3  ld   $c3
              476e 0030  ld   $30
              476f 000c  ld   $0c
              4770 00c3  ld   $c3
              4771 0030  ld   $30
              4772 000c  ld   $0c
              4773 00ab  ld   $ab
              4774 00aa  ld   $aa
              4775 00aa  ld   $aa
              4776 00aa  ld   $aa
              4777 00aa  ld   $aa
              4778 00fa  ld   $fa
              4779 00ff  ld   $ff
              477a 00ff  ld   $ff
              477b 00ff  ld   $ff
              * 5 times
              477e 000f  ld   $0f
              477f 00c3  ld   $c3
              4780 0030  ld   $30
              4781 000c  ld   $0c
              4782 00c3  ld   $c3
              4783 0030  ld   $30
              4784 000c  ld   $0c
              4785 00c3  ld   $c3
              4786 00e9  ld   $e9
              4787 001a  ld   $1a
              4788 00a4  ld   $a4
              4789 0041  ld   $41
              478a 00b0  ld   $b0
              478b 00ae  ld   $ae
              478c 0030  ld   $30
              478d 000c  ld   $0c
              478e 00c3  ld   $c3
              478f 00b0  ld   $b0
              4790 00aa  ld   $aa
              4791 00ff  ld   $ff
              4792 00aa  ld   $aa
              4793 00fe  ld   $fe
              4794 00ab  ld   $ab
              4795 00ea  ld   $ea
              4796 00af  ld   $af
              4797 00ea  ld   $ea
              4798 00bf  ld   $bf
              4799 00aa  ld   $aa
              479a 00ff  ld   $ff
              479b 00aa  ld   $aa
              479c 000e  ld   $0e
              479d 00c3  ld   $c3
              479e 0030  ld   $30
              479f 000c  ld   $0c
              47a0 00c3  ld   $c3
              47a1 0030  ld   $30
              47a2 000c  ld   $0c
              47a3 00bc  ld   $bc
              47a4 0081  ld   $81
              47a5 0065  ld   $65
              47a6 0005  ld   $05
              47a7 0020  ld   $20
              47a8 00f0  ld   $f0
              47a9 00c2  ld   $c2
              47aa 0030  ld   $30
              47ab 000c  ld   $0c
              47ac 00c3  ld   $c3
              47ad 0030  ld   $30
              47ae 00bc  ld   $bc
              47af 00bc  ld   $bc
              47b0 00ff  ld   $ff
              47b1 00fb  ld   $fb
              47b2 00bf  ld   $bf
              47b3 00ff  ld   $ff
              47b4 00fb  ld   $fb
              47b5 00bf  ld   $bf
              47b6 00ff  ld   $ff
              47b7 00fb  ld   $fb
              47b8 00bf  ld   $bf
              47b9 00ff  ld   $ff
              47ba 00fb  ld   $fb
              47bb 00bf  ld   $bf
              47bc 00ff  ld   $ff
              47bd 00fb  ld   $fb
              47be 0007  ld   $07
              47bf 0030  ld   $30
              47c0 000c  ld   $0c
              47c1 00c3  ld   $c3
              47c2 0030  ld   $30
              47c3 000c  ld   $0c
              47c4 00c3  ld   $c3
              47c5 0030  ld   $30
              47c6 000c  ld   $0c
              47c7 00c3  ld   $c3
              47c8 0030  ld   $30
              47c9 000c  ld   $0c
              47ca 00c3  ld   $c3
              47cb 0030  ld   $30
              47cc 000c  ld   $0c
              47cd 00c3  ld   $c3
              47ce 0030  ld   $30
              47cf 000c  ld   $0c
              47d0 00c3  ld   $c3
              47d1 0030  ld   $30
              47d2 000c  ld   $0c
              47d3 00c3  ld   $c3
              47d4 0030  ld   $30
              47d5 000c  ld   $0c
              47d6 00c3  ld   $c3
              47d7 0030  ld   $30
              47d8 000c  ld   $0c
              47d9 00c3  ld   $c3
              47da 00b0  ld   $b0
              47db 005a  ld   $5a
              47dc 00a9  ld   $a9
              47dd 00bf  ld   $bf
              47de 000a  ld   $0a
              47df 00ab  ld   $ab
              47e0 0095  ld   $95
              47e1 005a  ld   $5a
              47e2 00a9  ld   $a9
              47e3 002a  ld   $2a
              47e4 001c  ld   $1c
              47e5 0004  ld   $04
              47e6 0041  ld   $41
              47e7 0010  ld   $10
              47e8 0044  ld   $44
              47e9 0011  ld   $11
              47ea 000c  ld   $0c
              47eb 00c3  ld   $c3
              47ec 0030  ld   $30
              47ed 000c  ld   $0c
              47ee 00c3  ld   $c3
              47ef 007f  ld   $7f
              47f0 0004  ld   $04
              47f1 00c3  ld   $c3
              47f2 00ef  ld   $ef
              47f3 00ff  ld   $ff
              47f4 00fe  ld   $fe
              47f5 003f  ld   $3f
              47f6 000c  ld   $0c
              47f7 004b  ld   $4b
              47f8 003f  ld   $3f
              47f9 000c  ld   $0c
              47fa 00c3  ld   $c3
              47fb fe00  bra  ac          ;+-----------------------------------+
              47fc fcfd  bra  $47fd       ;|                                   |
              47fd 1418  ld   $18,y       ;| Trampoline for page $4700 lookups |
              47fe e006  jmp  y,$06       ;|                                   |
              47ff c218  st   [$18]       ;+-----------------------------------+
              4800 0030  ld   $30
              4801 000c  ld   $0c
              4802 00c3  ld   $c3
              4803 0030  ld   $30
              4804 00ac  ld   $ac
              4805 00aa  ld   $aa
              4806 0095  ld   $95
              4807 00aa  ld   $aa
              4808 0056  ld   $56
              4809 00d6  ld   $d6
              480a 00fa  ld   $fa
              480b 005a  ld   $5a
              480c 006a  ld   $6a
              480d 00a5  ld   $a5
              480e 00aa  ld   $aa
              480f 006a  ld   $6a
              4810 00a5  ld   $a5
              4811 00aa  ld   $aa
              4812 00d6  ld   $d6
              4813 00bb  ld   $bb
              4814 005a  ld   $5a
              4815 0095  ld   $95
              4816 00aa  ld   $aa
              4817 0056  ld   $56
              4818 00aa  ld   $aa
              4819 000a  ld   $0a
              481a 00c3  ld   $c3
              481b 0030  ld   $30
              481c 000c  ld   $0c
              481d 00c3  ld   $c3
              481e 0030  ld   $30
              481f 00ac  ld   $ac
              4820 00fe  ld   $fe
              4821 0030  ld   $30
              4822 000c  ld   $0c
              4823 00c3  ld   $c3
              4824 0030  ld   $30
              4825 00ac  ld   $ac
              4826 00fe  ld   $fe
              4827 0030  ld   $30
              4828 000c  ld   $0c
              4829 00c3  ld   $c3
              482a 00b0  ld   $b0
              482b 00fa  ld   $fa
              482c 00c3  ld   $c3
              482d 0030  ld   $30
              482e 000c  ld   $0c
              482f 00c3  ld   $c3
              4830 0030  ld   $30
              4831 000c  ld   $0c
              4832 00c3  ld   $c3
              4833 0030  ld   $30
              4834 000c  ld   $0c
              4835 00c3  ld   $c3
              4836 0055  ld   $55
              4837 0055  ld   $55
              4838 0055  ld   $55
              * 6 times
              483c 00aa  ld   $aa
              483d 00aa  ld   $aa
              483e 00aa  ld   $aa
              483f 00ea  ld   $ea
              4840 00ff  ld   $ff
              4841 00ff  ld   $ff
              4842 00ff  ld   $ff
              * 5 times
              4845 003f  ld   $3f
              4846 000c  ld   $0c
              4847 00c3  ld   $c3
              4848 0030  ld   $30
              4849 000c  ld   $0c
              484a 00c3  ld   $c3
              484b 00eb  ld   $eb
              484c 001a  ld   $1a
              484d 0004  ld   $04
              484e 0069  ld   $69
              484f 00b0  ld   $b0
              4850 00a6  ld   $a6
              4851 0030  ld   $30
              4852 000c  ld   $0c
              4853 00c3  ld   $c3
              4854 0070  ld   $70
              4855 0055  ld   $55
              4856 00fd  ld   $fd
              4857 0055  ld   $55
              4858 00f5  ld   $f5
              4859 0057  ld   $57
              485a 00d5  ld   $d5
              485b 005f  ld   $5f
              485c 0055  ld   $55
              485d 007f  ld   $7f
              485e 0055  ld   $55
              485f 00fd  ld   $fd
              4860 0055  ld   $55
              4861 0005  ld   $05
              4862 00c3  ld   $c3
              4863 0030  ld   $30
              4864 000c  ld   $0c
              4865 00c3  ld   $c3
              4866 0030  ld   $30
              4867 00f0  ld   $f0
              4868 0083  ld   $83
              4869 0081  ld   $81
              486a 0065  ld   $65
              486b 0005  ld   $05
              486c 0020  ld   $20
              486d 0008  ld   $08
              486e 00fc  ld   $fc
              486f 0030  ld   $30
              4870 000c  ld   $0c
              4871 00c3  ld   $c3
              4872 0030  ld   $30
              4873 006c  ld   $6c
              4874 00fc  ld   $fc
              4875 006f  ld   $6f
              4876 0060  ld   $60
              4877 0004  ld   $04
              4878 0046  ld   $46
              4879 0060  ld   $60
              487a 0004  ld   $04
              487b 0046  ld   $46
              487c 0060  ld   $60
              487d 0004  ld   $04
              487e 00c6  ld   $c6
              487f 006f  ld   $6f
              4880 002c  ld   $2c
              4881 0056  ld   $56
              4882 00f0  ld   $f0
              4883 0006  ld   $06
              4884 0030  ld   $30
              4885 000c  ld   $0c
              4886 00c3  ld   $c3
              4887 0030  ld   $30
              4888 000c  ld   $0c
              4889 00c3  ld   $c3
              488a 0030  ld   $30
              488b 000c  ld   $0c
              488c 00c3  ld   $c3
              488d 0030  ld   $30
              488e 000c  ld   $0c
              488f 00c3  ld   $c3
              4890 0030  ld   $30
              4891 000c  ld   $0c
              4892 00c3  ld   $c3
              4893 0030  ld   $30
              4894 000c  ld   $0c
              4895 00c3  ld   $c3
              4896 0030  ld   $30
              4897 000c  ld   $0c
              4898 00c3  ld   $c3
              4899 0030  ld   $30
              489a 000c  ld   $0c
              489b 00c3  ld   $c3
              489c 0030  ld   $30
              489d 000c  ld   $0c
              489e 00c3  ld   $c3
              489f 0070  ld   $70
              48a0 00a5  ld   $a5
              48a1 00fe  ld   $fe
              48a2 00ea  ld   $ea
              48a3 000f  ld   $0f
              48a4 00ab  ld   $ab
              48a5 006a  ld   $6a
              48a6 00a5  ld   $a5
              48a7 0056  ld   $56
              48a8 002a  ld   $2a
              48a9 001c  ld   $1c
              48aa 0058  ld   $58
              48ab 0081  ld   $81
              48ac 0015  ld   $15
              48ad 0058  ld   $58
              48ae 0011  ld   $11
              48af 000c  ld   $0c
              48b0 00c3  ld   $c3
              48b1 0030  ld   $30
              48b2 000c  ld   $0c
              48b3 00c3  ld   $c3
              48b4 00f0  ld   $f0
              48b5 000b  ld   $0b
              48b6 00bf  ld   $bf
              48b7 003f  ld   $3f
              48b8 00fc  ld   $fc
              48b9 00c2  ld   $c2
              48ba 00ff  ld   $ff
              48bb 000f  ld   $0f
              48bc 00bf  ld   $bf
              48bd 0030  ld   $30
              48be 000c  ld   $0c
              48bf 00c3  ld   $c3
              48c0 0030  ld   $30
              48c1 000c  ld   $0c
              48c2 00c3  ld   $c3
              48c3 0030  ld   $30
              48c4 00ac  ld   $ac
              48c5 0069  ld   $69
              48c6 0055  ld   $55
              48c7 0055  ld   $55
              48c8 0055  ld   $55
              48c9 0096  ld   $96
              48ca 00aa  ld   $aa
              48cb 005a  ld   $5a
              48cc 00aa  ld   $aa
              48cd 006a  ld   $6a
              48ce 00a9  ld   $a9
              48cf 0096  ld   $96
              48d0 00aa  ld   $aa
              48d1 00aa  ld   $aa
              48d2 0096  ld   $96
              48d3 00aa  ld   $aa
              48d4 005a  ld   $5a
              48d5 0055  ld   $55
              48d6 0055  ld   $55
              48d7 0055  ld   $55
              48d8 009a  ld   $9a
              48d9 0006  ld   $06
              48da 00c3  ld   $c3
              48db 0030  ld   $30
              48dc 000c  ld   $0c
              48dd 00c3  ld   $c3
              48de 0030  ld   $30
              48df 00ac  ld   $ac
              48e0 00fe  ld   $fe
              48e1 0030  ld   $30
              48e2 000c  ld   $0c
              48e3 00c3  ld   $c3
              48e4 0030  ld   $30
              48e5 00ac  ld   $ac
              48e6 00fe  ld   $fe
              48e7 0030  ld   $30
              48e8 000c  ld   $0c
              48e9 00c3  ld   $c3
              48ea 00b0  ld   $b0
              48eb 00fa  ld   $fa
              48ec 00c3  ld   $c3
              48ed 0030  ld   $30
              48ee 000c  ld   $0c
              48ef 00c3  ld   $c3
              48f0 0030  ld   $30
              48f1 000c  ld   $0c
              48f2 00c3  ld   $c3
              48f3 0030  ld   $30
              48f4 0000  ld   $00
              48f5 0000  ld   $00
              48f6 0000  ld   $00
              * 5 times
              48f9 0055  ld   $55
              48fa 0055  ld   $55
              48fb fe00  bra  ac          ;+-----------------------------------+
              48fc fcfd  bra  $48fd       ;|                                   |
              48fd 1418  ld   $18,y       ;| Trampoline for page $4800 lookups |
              48fe e006  jmp  y,$06       ;|                                   |
              48ff c218  st   [$18]       ;+-----------------------------------+
              4900 0055  ld   $55
              4901 0055  ld   $55
              4902 00a5  ld   $a5
              4903 00aa  ld   $aa
              4904 00aa  ld   $aa
              4905 00aa  ld   $aa
              4906 00fe  ld   $fe
              4907 00ff  ld   $ff
              4908 00ff  ld   $ff
              4909 00ff  ld   $ff
              * 6 times
              490d 0030  ld   $30
              490e 000c  ld   $0c
              490f 00c3  ld   $c3
              4910 00e9  ld   $e9
              4911 001a  ld   $1a
              4912 00a4  ld   $a4
              4913 0041  ld   $41
              4914 00b0  ld   $b0
              4915 00ae  ld   $ae
              4916 0030  ld   $30
              4917 000c  ld   $0c
              4918 00c3  ld   $c3
              4919 00b0  ld   $b0
              491a 00ae  ld   $ae
              491b 00fe  ld   $fe
              491c 00ba  ld   $ba
              491d 00fa  ld   $fa
              491e 00ab  ld   $ab
              491f 00fa  ld   $fa
              4920 00af  ld   $af
              4921 00aa  ld   $aa
              4922 00bf  ld   $bf
              4923 00ae  ld   $ae
              4924 00fe  ld   $fe
              4925 00aa  ld   $aa
              4926 000e  ld   $0e
              4927 00c3  ld   $c3
              4928 0030  ld   $30
              4929 000c  ld   $0c
              492a 00c3  ld   $c3
              492b 00c0  ld   $c0
              492c 001b  ld   $1b
              492d 0004  ld   $04
              492e 0041  ld   $41
              492f 0010  ld   $10
              4930 0004  ld   $04
              4931 0041  ld   $41
              4932 0000  ld   $00
              4933 0003  ld   $03
              4934 0030  ld   $30
              4935 000c  ld   $0c
              4936 00c3  ld   $c3
              4937 0030  ld   $30
              4938 00bc  ld   $bc
              4939 00bc  ld   $bc
              493a 00bf  ld   $bf
              493b 00f1  ld   $f1
              493c 001a  ld   $1a
              493d 008b  ld   $8b
              493e 00b1  ld   $b1
              493f 0018  ld   $18
              4940 008b  ld   $8b
              4941 00b1  ld   $b1
              4942 0018  ld   $18
              4943 00c1  ld   $c1
              4944 00bb  ld   $bb
              4945 0058  ld   $58
              4946 0046  ld   $46
              4947 00f0  ld   $f0
              4948 0007  ld   $07
              4949 0030  ld   $30
              494a 000c  ld   $0c
              494b 00c3  ld   $c3
              494c 0030  ld   $30
              494d 000c  ld   $0c
              494e 00c3  ld   $c3
              494f 0030  ld   $30
              4950 000c  ld   $0c
              4951 00c3  ld   $c3
              4952 0030  ld   $30
              4953 000c  ld   $0c
              4954 00c3  ld   $c3
              4955 0030  ld   $30
              4956 000c  ld   $0c
              4957 00c3  ld   $c3
              4958 0030  ld   $30
              4959 000c  ld   $0c
              495a 00c3  ld   $c3
              495b 0030  ld   $30
              495c 000c  ld   $0c
              495d 00c3  ld   $c3
              495e 0030  ld   $30
              495f 000c  ld   $0c
              4960 00c3  ld   $c3
              4961 0030  ld   $30
              4962 000c  ld   $0c
              4963 00c3  ld   $c3
              4964 00b0  ld   $b0
              4965 005a  ld   $5a
              4966 00a9  ld   $a9
              4967 00bf  ld   $bf
              4968 000a  ld   $0a
              4969 00ab  ld   $ab
              496a 0095  ld   $95
              496b 005a  ld   $5a
              496c 00a9  ld   $a9
              496d 002a  ld   $2a
              496e 001c  ld   $1c
              496f 0004  ld   $04
              4970 0041  ld   $41
              4971 0010  ld   $10
              4972 0044  ld   $44
              4973 0011  ld   $11
              4974 000c  ld   $0c
              4975 00c3  ld   $c3
              4976 0030  ld   $30
              4977 000c  ld   $0c
              4978 00c3  ld   $c3
              4979 0070  ld   $70
              497a 00f4  ld   $f4
              497b 00fe  ld   $fe
              497c 0030  ld   $30
              497d 00fc  ld   $fc
              497e 00c2  ld   $c2
              497f 00f0  ld   $f0
              4980 00ff  ld   $ff
              4981 004b  ld   $4b
              4982 0030  ld   $30
              4983 000c  ld   $0c
              4984 00c3  ld   $c3
              4985 0030  ld   $30
              4986 000c  ld   $0c
              4987 00c3  ld   $c3
              4988 0030  ld   $30
              4989 00ac  ld   $ac
              498a 0069  ld   $69
              498b 009a  ld   $9a
              498c 00aa  ld   $aa
              498d 006a  ld   $6a
              498e 0016  ld   $16
              498f 00a5  ld   $a5
              4990 005a  ld   $5a
              4991 00aa  ld   $aa
              4992 0061  ld   $61
              4993 00a9  ld   $a9
              4994 0056  ld   $56
              4995 0065  ld   $65
              4996 00a8  ld   $a8
              4997 0056  ld   $56
              4998 0095  ld   $95
              4999 005a  ld   $5a
              499a 009a  ld   $9a
              499b 00aa  ld   $aa
              499c 006a  ld   $6a
              499d 009a  ld   $9a
              499e 0006  ld   $06
              499f 00c3  ld   $c3
              49a0 0030  ld   $30
              49a1 000c  ld   $0c
              49a2 00c3  ld   $c3
              49a3 0030  ld   $30
              49a4 00ac  ld   $ac
              49a5 00fe  ld   $fe
              49a6 0030  ld   $30
              49a7 000c  ld   $0c
              49a8 00c3  ld   $c3
              49a9 0030  ld   $30
              49aa 00ac  ld   $ac
              49ab 00fe  ld   $fe
              49ac 0030  ld   $30
              49ad 000c  ld   $0c
              49ae 00c3  ld   $c3
              49af 00b0  ld   $b0
              49b0 00fa  ld   $fa
              49b1 00c3  ld   $c3
              49b2 0030  ld   $30
              49b3 000c  ld   $0c
              49b4 00c3  ld   $c3
              49b5 0030  ld   $30
              49b6 000c  ld   $0c
              49b7 00c3  ld   $c3
              49b8 0030  ld   $30
              49b9 000c  ld   $0c
              49ba 0003  ld   $03
              49bb 0000  ld   $00
              49bc 0000  ld   $00
              49bd 0000  ld   $00
              * 5 times
              49c0 0054  ld   $54
              49c1 0055  ld   $55
              49c2 0055  ld   $55
              49c3 0055  ld   $55
              49c4 0055  ld   $55
              49c5 00a5  ld   $a5
              49c6 00aa  ld   $aa
              49c7 00aa  ld   $aa
              49c8 00fa  ld   $fa
              49c9 00ff  ld   $ff
              49ca 00ff  ld   $ff
              49cb 000f  ld   $0f
              49cc 00c3  ld   $c3
              49cd 0030  ld   $30
              49ce 000c  ld   $0c
              49cf 00c3  ld   $c3
              49d0 00eb  ld   $eb
              49d1 001a  ld   $1a
              49d2 0004  ld   $04
              49d3 0069  ld   $69
              49d4 00b0  ld   $b0
              49d5 00a6  ld   $a6
              49d6 0030  ld   $30
              49d7 000c  ld   $0c
              49d8 00c3  ld   $c3
              49d9 0070  ld   $70
              49da 0055  ld   $55
              49db 00fd  ld   $fd
              49dc 0055  ld   $55
              49dd 00f5  ld   $f5
              49de 0057  ld   $57
              49df 00d5  ld   $d5
              49e0 005f  ld   $5f
              49e1 0055  ld   $55
              49e2 007f  ld   $7f
              49e3 0055  ld   $55
              49e4 00fd  ld   $fd
              49e5 0055  ld   $55
              49e6 0005  ld   $05
              49e7 00c3  ld   $c3
              49e8 0030  ld   $30
              49e9 000c  ld   $0c
              49ea 00c3  ld   $c3
              49eb 0030  ld   $30
              49ec 000c  ld   $0c
              49ed 0007  ld   $07
              49ee 0096  ld   $96
              49ef 0065  ld   $65
              49f0 0059  ld   $59
              49f1 0001  ld   $01
              49f2 000c  ld   $0c
              49f3 00c3  ld   $c3
              49f4 0030  ld   $30
              49f5 000c  ld   $0c
              49f6 00c3  ld   $c3
              49f7 0030  ld   $30
              49f8 006c  ld   $6c
              49f9 00fc  ld   $fc
              49fa 006f  ld   $6f
              49fb fe00  bra  ac          ;+-----------------------------------+
              49fc fcfd  bra  $49fd       ;|                                   |
              49fd 1418  ld   $18,y       ;| Trampoline for page $4900 lookups |
              49fe e006  jmp  y,$06       ;|                                   |
              49ff c218  st   [$18]       ;+-----------------------------------+
              4a00 0060  ld   $60
              4a01 002c  ld   $2c
              4a02 00c6  ld   $c6
              4a03 0062  ld   $62
              4a04 002c  ld   $2c
              4a05 00c6  ld   $c6
              4a06 0062  ld   $62
              4a07 002c  ld   $2c
              4a08 00c6  ld   $c6
              4a09 006f  ld   $6f
              4a0a 0019  ld   $19
              4a0b 0056  ld   $56
              4a0c 00f0  ld   $f0
              4a0d 0006  ld   $06
              4a0e 0030  ld   $30
              4a0f 000c  ld   $0c
              4a10 00c3  ld   $c3
              4a11 0030  ld   $30
              4a12 000c  ld   $0c
              4a13 00c3  ld   $c3
              4a14 0030  ld   $30
              4a15 000c  ld   $0c
              4a16 00c3  ld   $c3
              4a17 0030  ld   $30
              4a18 000c  ld   $0c
              4a19 00c3  ld   $c3
              4a1a 0030  ld   $30
              4a1b 000c  ld   $0c
              4a1c 00c3  ld   $c3
              4a1d 0030  ld   $30
              4a1e 000c  ld   $0c
              4a1f 00c3  ld   $c3
              4a20 0030  ld   $30
              4a21 000c  ld   $0c
              4a22 00c3  ld   $c3
              4a23 0030  ld   $30
              4a24 000c  ld   $0c
              4a25 00c3  ld   $c3
              4a26 0030  ld   $30
              4a27 000c  ld   $0c
              4a28 00c3  ld   $c3
              4a29 0070  ld   $70
              4a2a 00a5  ld   $a5
              4a2b 00fe  ld   $fe
              4a2c 00ea  ld   $ea
              4a2d 000f  ld   $0f
              4a2e 00ab  ld   $ab
              4a2f 006a  ld   $6a
              4a30 00a5  ld   $a5
              4a31 0056  ld   $56
              4a32 002a  ld   $2a
              4a33 001c  ld   $1c
              4a34 0058  ld   $58
              4a35 0081  ld   $81
              4a36 0015  ld   $15
              4a37 0058  ld   $58
              4a38 0011  ld   $11
              4a39 000c  ld   $0c
              4a3a 00c3  ld   $c3
              4a3b 0030  ld   $30
              4a3c 000c  ld   $0c
              4a3d 00c3  ld   $c3
              4a3e 0030  ld   $30
              4a3f 00fc  ld   $fc
              4a40 00bf  ld   $bf
              4a41 0030  ld   $30
              4a42 00fc  ld   $fc
              4a43 00c2  ld   $c2
              4a44 00f0  ld   $f0
              4a45 00fb  ld   $fb
              4a46 00c3  ld   $c3
              4a47 0030  ld   $30
              4a48 000c  ld   $0c
              4a49 00c3  ld   $c3
              4a4a 0030  ld   $30
              4a4b 000c  ld   $0c
              4a4c 00c3  ld   $c3
              4a4d 0030  ld   $30
              4a4e 005c  ld   $5c
              4a4f 00a9  ld   $a9
              4a50 0069  ld   $69
              4a51 0055  ld   $55
              4a52 0055  ld   $55
              4a53 0029  ld   $29
              4a54 0055  ld   $55
              4a55 0055  ld   $55
              4a56 0055  ld   $55
              4a57 0055  ld   $55
              4a58 0051  ld   $51
              4a59 0054  ld   $54
              4a5a 0055  ld   $55
              4a5b 0055  ld   $55
              4a5c 0014  ld   $14
              4a5d 0090  ld   $90
              4a5e 0052  ld   $52
              4a5f 0055  ld   $55
              4a60 0055  ld   $55
              4a61 0055  ld   $55
              4a62 006a  ld   $6a
              4a63 0005  ld   $05
              4a64 00c3  ld   $c3
              4a65 0030  ld   $30
              4a66 000c  ld   $0c
              4a67 00c3  ld   $c3
              4a68 0030  ld   $30
              4a69 00ac  ld   $ac
              4a6a 00fe  ld   $fe
              4a6b 0030  ld   $30
              4a6c 000c  ld   $0c
              4a6d 00c3  ld   $c3
              4a6e 0030  ld   $30
              4a6f 00ac  ld   $ac
              4a70 00fe  ld   $fe
              4a71 0030  ld   $30
              4a72 000c  ld   $0c
              4a73 00c3  ld   $c3
              4a74 00b0  ld   $b0
              4a75 00fa  ld   $fa
              4a76 00c3  ld   $c3
              4a77 0030  ld   $30
              4a78 000c  ld   $0c
              4a79 00c3  ld   $c3
              4a7a 0030  ld   $30
              4a7b 000c  ld   $0c
              4a7c 00c3  ld   $c3
              4a7d 0030  ld   $30
              4a7e 000c  ld   $0c
              4a7f 00c3  ld   $c3
              4a80 0030  ld   $30
              4a81 0000  ld   $00
              4a82 0000  ld   $00
              4a83 0000  ld   $00
              * 8 times
              4a89 0040  ld   $40
              4a8a 0055  ld   $55
              4a8b 0055  ld   $55
              4a8c 0055  ld   $55
              * 5 times
              4a8f 0030  ld   $30
              4a90 000c  ld   $0c
              4a91 00c3  ld   $c3
              4a92 0030  ld   $30
              4a93 000c  ld   $0c
              4a94 00c3  ld   $c3
              4a95 00e9  ld   $e9
              4a96 001a  ld   $1a
              4a97 00a4  ld   $a4
              4a98 0041  ld   $41
              4a99 00b0  ld   $b0
              4a9a 00ae  ld   $ae
              4a9b 0030  ld   $30
              4a9c 000c  ld   $0c
              4a9d 00c3  ld   $c3
              4a9e 00b0  ld   $b0
              4a9f 004a  ld   $4a
              4aa0 00d3  ld   $d3
              4aa1 0034  ld   $34
              4aa2 004d  ld   $4d
              4aa3 00d3  ld   $d3
              4aa4 0034  ld   $34
              4aa5 004d  ld   $4d
              4aa6 00d3  ld   $d3
              4aa7 0034  ld   $34
              4aa8 004d  ld   $4d
              4aa9 00d3  ld   $d3
              4aaa 00b4  ld   $b4
              4aab 000a  ld   $0a
              4aac 00c3  ld   $c3
              4aad 0030  ld   $30
              4aae 000c  ld   $0c
              4aaf 00c3  ld   $c3
              4ab0 0030  ld   $30
              4ab1 000c  ld   $0c
              4ab2 0007  ld   $07
              4ab3 0096  ld   $96
              4ab4 0045  ld   $45
              4ab5 0058  ld   $58
              4ab6 0001  ld   $01
              4ab7 000c  ld   $0c
              4ab8 00c3  ld   $c3
              4ab9 0030  ld   $30
              4aba 000c  ld   $0c
              4abb 00c3  ld   $c3
              4abc 0030  ld   $30
              4abd 00bc  ld   $bc
              4abe 00bc  ld   $bc
              4abf 00bf  ld   $bf
              4ac0 0011  ld   $11
              4ac1 0018  ld   $18
              4ac2 0081  ld   $81
              4ac3 0011  ld   $11
              4ac4 0018  ld   $18
              4ac5 0081  ld   $81
              4ac6 0011  ld   $11
              4ac7 0018  ld   $18
              4ac8 00c1  ld   $c1
              4ac9 001b  ld   $1b
              4aca 0004  ld   $04
              4acb 0041  ld   $41
              4acc 00f0  ld   $f0
              4acd 0007  ld   $07
              4ace 0030  ld   $30
              4acf 000c  ld   $0c
              4ad0 00c3  ld   $c3
              4ad1 0030  ld   $30
              4ad2 000c  ld   $0c
              4ad3 00fc  ld   $fc
              4ad4 0030  ld   $30
              4ad5 000c  ld   $0c
              4ad6 00ff  ld   $ff
              4ad7 003f  ld   $3f
              4ad8 000c  ld   $0c
              4ad9 00c3  ld   $c3
              4ada 003f  ld   $3f
              4adb 00f0  ld   $f0
              4adc 00c3  ld   $c3
              4add 0030  ld   $30
              4ade 000c  ld   $0c
              4adf 00ff  ld   $ff
              4ae0 00c0  ld   $c0
              4ae1 000f  ld   $0f
              4ae2 00c3  ld   $c3
              4ae3 00ff  ld   $ff
              4ae4 000f  ld   $0f
              4ae5 00c3  ld   $c3
              4ae6 0030  ld   $30
              4ae7 000c  ld   $0c
              4ae8 00c3  ld   $c3
              4ae9 00b0  ld   $b0
              4aea 005a  ld   $5a
              4aeb 00a9  ld   $a9
              4aec 00bf  ld   $bf
              4aed 000a  ld   $0a
              4aee 00ab  ld   $ab
              4aef 0095  ld   $95
              4af0 005a  ld   $5a
              4af1 00a9  ld   $a9
              4af2 002a  ld   $2a
              4af3 001c  ld   $1c
              4af4 0004  ld   $04
              4af5 0041  ld   $41
              4af6 0010  ld   $10
              4af7 0044  ld   $44
              4af8 0011  ld   $11
              4af9 000c  ld   $0c
              4afa 00c3  ld   $c3
              4afb fe00  bra  ac          ;+-----------------------------------+
              4afc fcfd  bra  $4afd       ;|                                   |
              4afd 1418  ld   $18,y       ;| Trampoline for page $4a00 lookups |
              4afe e006  jmp  y,$06       ;|                                   |
              4aff c218  st   [$18]       ;+-----------------------------------+
              4b00 0030  ld   $30
              4b01 000c  ld   $0c
              4b02 00c3  ld   $c3
              4b03 00f0  ld   $f0
              4b04 00ff  ld   $ff
              4b05 004b  ld   $4b
              4b06 00ff  ld   $ff
              4b07 00fb  ld   $fb
              4b08 00bf  ld   $bf
              4b09 00bf  ld   $bf
              4b0a 00f4  ld   $f4
              4b0b 00ff  ld   $ff
              4b0c 0030  ld   $30
              4b0d 000c  ld   $0c
              4b0e 00c3  ld   $c3
              4b0f 0030  ld   $30
              4b10 000c  ld   $0c
              4b11 00c3  ld   $c3
              4b12 0030  ld   $30
              4b13 00ac  ld   $ac
              4b14 00aa  ld   $aa
              4b15 00aa  ld   $aa
              4b16 005a  ld   $5a
              4b17 00a9  ld   $a9
              4b18 00aa  ld   $aa
              4b19 00aa  ld   $aa
              4b1a 00aa  ld   $aa
              * 5 times
              4b1d 006a  ld   $6a
              4b1e 009a  ld   $9a
              4b1f 00aa  ld   $aa
              4b20 00aa  ld   $aa
              4b21 00aa  ld   $aa
              * 5 times
              4b24 006a  ld   $6a
              4b25 00a5  ld   $a5
              4b26 0069  ld   $69
              4b27 009a  ld   $9a
              4b28 0006  ld   $06
              4b29 00c3  ld   $c3
              4b2a 0030  ld   $30
              4b2b 000c  ld   $0c
              4b2c 00c3  ld   $c3
              4b2d 0030  ld   $30
              4b2e 00ac  ld   $ac
              4b2f 00fe  ld   $fe
              4b30 0030  ld   $30
              4b31 000c  ld   $0c
              4b32 00c3  ld   $c3
              4b33 0030  ld   $30
              4b34 00ac  ld   $ac
              4b35 00fe  ld   $fe
              4b36 0030  ld   $30
              4b37 000c  ld   $0c
              4b38 00c3  ld   $c3
              4b39 00b0  ld   $b0
              4b3a 00fa  ld   $fa
              4b3b 00c3  ld   $c3
              4b3c 0030  ld   $30
              4b3d 000c  ld   $0c
              4b3e 00c3  ld   $c3
              4b3f 0030  ld   $30
              4b40 000c  ld   $0c
              4b41 00c3  ld   $c3
              4b42 0030  ld   $30
              4b43 000c  ld   $0c
              4b44 00c3  ld   $c3
              4b45 0030  ld   $30
              4b46 000c  ld   $0c
              4b47 0003  ld   $03
              4b48 0000  ld   $00
              4b49 0000  ld   $00
              4b4a 0000  ld   $00
              * 11 times
              4b53 00c3  ld   $c3
              4b54 0030  ld   $30
              4b55 000c  ld   $0c
              4b56 00c3  ld   $c3
              4b57 0030  ld   $30
              4b58 000c  ld   $0c
              4b59 00c3  ld   $c3
              4b5a 00eb  ld   $eb
              4b5b 001a  ld   $1a
              4b5c 0004  ld   $04
              4b5d 0069  ld   $69
              4b5e 00b0  ld   $b0
              4b5f 00a6  ld   $a6
              4b60 0030  ld   $30
              4b61 000c  ld   $0c
              4b62 00c3  ld   $c3
              4b63 0070  ld   $70
              4b64 0005  ld   $05
              4b65 00c3  ld   $c3
              4b66 00fe  ld   $fe
              4b67 00ef  ld   $ef
              4b68 00ff  ld   $ff
              4b69 00fe  ld   $fe
              4b6a 00ef  ld   $ef
              4b6b 00ff  ld   $ff
              4b6c 00fe  ld   $fe
              4b6d 00ef  ld   $ef
              4b6e 00c3  ld   $c3
              4b6f 0070  ld   $70
              4b70 0005  ld   $05
              4b71 00c3  ld   $c3
              4b72 0030  ld   $30
              4b73 000c  ld   $0c
              4b74 00c3  ld   $c3
              4b75 0030  ld   $30
              4b76 000c  ld   $0c
              4b77 0007  ld   $07
              4b78 0084  ld   $84
              4b79 0065  ld   $65
              4b7a 0059  ld   $59
              4b7b 0001  ld   $01
              4b7c 000c  ld   $0c
              4b7d 00c3  ld   $c3
              4b7e 0030  ld   $30
              4b7f 000c  ld   $0c
              4b80 00c3  ld   $c3
              4b81 0030  ld   $30
              4b82 006c  ld   $6c
              4b83 00fc  ld   $fc
              4b84 00ef  ld   $ef
              4b85 00ff  ld   $ff
              4b86 00fe  ld   $fe
              4b87 00ef  ld   $ef
              4b88 00ff  ld   $ff
              4b89 00fe  ld   $fe
              4b8a 00ef  ld   $ef
              4b8b 00ff  ld   $ff
              4b8c 00fe  ld   $fe
              4b8d 00ef  ld   $ef
              4b8e 00ff  ld   $ff
              4b8f 00fe  ld   $fe
              4b90 00ef  ld   $ef
              4b91 00ff  ld   $ff
              4b92 0006  ld   $06
              4b93 0030  ld   $30
              4b94 000c  ld   $0c
              4b95 00c3  ld   $c3
              4b96 000c  ld   $0c
              4b97 00f3  ld   $f3
              4b98 0003  ld   $03
              4b99 000c  ld   $0c
              4b9a 00c3  ld   $c3
              4b9b 0030  ld   $30
              4b9c 000c  ld   $0c
              4b9d 00c3  ld   $c3
              4b9e 0030  ld   $30
              4b9f 00cc  ld   $cc
              4ba0 00ff  ld   $ff
              4ba1 0033  ld   $33
              4ba2 000c  ld   $0c
              4ba3 00c3  ld   $c3
              4ba4 0000  ld   $00
              4ba5 003f  ld   $3f
              4ba6 00c3  ld   $c3
              4ba7 0030  ld   $30
              4ba8 000c  ld   $0c
              4ba9 00c3  ld   $c3
              4baa 0030  ld   $30
              4bab 000c  ld   $0c
              4bac 000c  ld   $0c
              4bad 00c3  ld   $c3
              4bae 0070  ld   $70
              4baf 00a5  ld   $a5
              4bb0 00fe  ld   $fe
              4bb1 00ea  ld   $ea
              4bb2 000f  ld   $0f
              4bb3 00ab  ld   $ab
              4bb4 006a  ld   $6a
              4bb5 00a5  ld   $a5
              4bb6 0056  ld   $56
              4bb7 002a  ld   $2a
              4bb8 001c  ld   $1c
              4bb9 0058  ld   $58
              4bba 0081  ld   $81
              4bbb 0015  ld   $15
              4bbc 0058  ld   $58
              4bbd 0011  ld   $11
              4bbe 000c  ld   $0c
              4bbf 00c3  ld   $c3
              4bc0 0030  ld   $30
              4bc1 000c  ld   $0c
              4bc2 00c3  ld   $c3
              4bc3 00f0  ld   $f0
              4bc4 000f  ld   $0f
              4bc5 00c3  ld   $c3
              4bc6 0052  ld   $52
              4bc7 0024  ld   $24
              4bc8 0005  ld   $05
              4bc9 0012  ld   $12
              4bca 000c  ld   $0c
              4bcb 00ff  ld   $ff
              4bcc 0030  ld   $30
              4bcd 000c  ld   $0c
              4bce 00c3  ld   $c3
              4bcf 0030  ld   $30
              4bd0 000c  ld   $0c
              4bd1 00c3  ld   $c3
              4bd2 0030  ld   $30
              4bd3 005c  ld   $5c
              4bd4 0055  ld   $55
              4bd5 0055  ld   $55
              4bd6 0055  ld   $55
              4bd7 0055  ld   $55
              4bd8 0015  ld   $15
              4bd9 0055  ld   $55
              4bda 00a9  ld   $a9
              4bdb 0095  ld   $95
              4bdc 00aa  ld   $aa
              4bdd 00aa  ld   $aa
              4bde 00aa  ld   $aa
              4bdf 001a  ld   $1a
              4be0 0054  ld   $54
              4be1 0041  ld   $41
              4be2 0055  ld   $55
              4be3 0055  ld   $55
              4be4 0055  ld   $55
              4be5 0055  ld   $55
              4be6 0005  ld   $05
              4be7 0095  ld   $95
              4be8 000a  ld   $0a
              4be9 00c3  ld   $c3
              4bea 0030  ld   $30
              4beb 00cc  ld   $cc
              4bec 0030  ld   $30
              4bed 008c  ld   $8c
              4bee 00fa  ld   $fa
              4bef 00ff  ld   $ff
              4bf0 003f  ld   $3f
              4bf1 00c3  ld   $c3
              4bf2 0030  ld   $30
              4bf3 008c  ld   $8c
              4bf4 00fa  ld   $fa
              4bf5 00ff  ld   $ff
              4bf6 003f  ld   $3f
              4bf7 00c3  ld   $c3
              4bf8 0030  ld   $30
              4bf9 00ea  ld   $ea
              4bfa 00ff  ld   $ff
              4bfb fe00  bra  ac          ;+-----------------------------------+
              4bfc fcfd  bra  $4bfd       ;|                                   |
              4bfd 1418  ld   $18,y       ;| Trampoline for page $4b00 lookups |
              4bfe e006  jmp  y,$06       ;|                                   |
              4bff c218  st   [$18]       ;+-----------------------------------+
              4c00 00ff  ld   $ff
              4c01 000c  ld   $0c
              4c02 00c3  ld   $c3
              4c03 00c0  ld   $c0
              4c04 0030  ld   $30
              4c05 000c  ld   $0c
              4c06 00c3  ld   $c3
              4c07 0030  ld   $30
              4c08 000c  ld   $0c
              4c09 00c3  ld   $c3
              4c0a 0030  ld   $30
              4c0b 000c  ld   $0c
              4c0c 00c3  ld   $c3
              4c0d 0030  ld   $30
              4c0e 0000  ld   $00
              4c0f 0000  ld   $00
              4c10 0000  ld   $00
              * 8 times
              4c16 0015  ld   $15
              4c17 000c  ld   $0c
              4c18 00c3  ld   $c3
              4c19 0030  ld   $30
              4c1a 000c  ld   $0c
              4c1b 00c3  ld   $c3
              4c1c 0030  ld   $30
              4c1d 000c  ld   $0c
              4c1e 00c3  ld   $c3
              4c1f 00e9  ld   $e9
              4c20 001a  ld   $1a
              4c21 00a4  ld   $a4
              4c22 0041  ld   $41
              4c23 00b0  ld   $b0
              4c24 00ae  ld   $ae
              4c25 0030  ld   $30
              4c26 000c  ld   $0c
              4c27 00c3  ld   $c3
              4c28 0070  ld   $70
              4c29 00f5  ld   $f5
              4c2a 00fb  ld   $fb
              4c2b 00bf  ld   $bf
              4c2c 00af  ld   $af
              4c2d 00aa  ld   $aa
              4c2e 00aa  ld   $aa
              4c2f 00aa  ld   $aa
              * 5 times
              4c32 00fa  ld   $fa
              4c33 00fb  ld   $fb
              4c34 007f  ld   $7f
              4c35 0005  ld   $05
              4c36 00c3  ld   $c3
              4c37 0030  ld   $30
              4c38 000c  ld   $0c
              4c39 00c3  ld   $c3
              4c3a 0030  ld   $30
              4c3b 000c  ld   $0c
              4c3c 0007  ld   $07
              4c3d 0084  ld   $84
              4c3e 0065  ld   $65
              4c3f 0059  ld   $59
              4c40 0001  ld   $01
              4c41 000c  ld   $0c
              4c42 00c3  ld   $c3
              4c43 0030  ld   $30
              4c44 000c  ld   $0c
              4c45 00c3  ld   $c3
              4c46 0030  ld   $30
              4c47 00bc  ld   $bc
              4c48 00bc  ld   $bc
              4c49 0000  ld   $00
              4c4a 0000  ld   $00
              4c4b 0000  ld   $00
              * 13 times
              4c56 00f0  ld   $f0
              4c57 0007  ld   $07
              4c58 0030  ld   $30
              4c59 000c  ld   $0c
              4c5a 0033  ld   $33
              4c5b 0008  ld   $08
              4c5c 0082  ld   $82
              4c5d 0020  ld   $20
              4c5e 0008  ld   $08
              4c5f 0082  ld   $82
              4c60 0020  ld   $20
              4c61 0008  ld   $08
              4c62 0082  ld   $82
              4c63 0020  ld   $20
              4c64 0008  ld   $08
              4c65 0082  ld   $82
              4c66 0020  ld   $20
              4c67 0008  ld   $08
              4c68 0082  ld   $82
              4c69 0020  ld   $20
              4c6a 0008  ld   $08
              4c6b 0082  ld   $82
              4c6c 0020  ld   $20
              4c6d 0008  ld   $08
              4c6e 0082  ld   $82
              4c6f 0020  ld   $20
              4c70 0008  ld   $08
              4c71 0003  ld   $03
              4c72 00c3  ld   $c3
              4c73 00b0  ld   $b0
              4c74 005a  ld   $5a
              4c75 00a9  ld   $a9
              4c76 00bf  ld   $bf
              4c77 000a  ld   $0a
              4c78 00ab  ld   $ab
              4c79 00aa  ld   $aa
              4c7a 00aa  ld   $aa
              4c7b 00aa  ld   $aa
              4c7c 002a  ld   $2a
              4c7d 001c  ld   $1c
              4c7e 0004  ld   $04
              4c7f 0041  ld   $41
              4c80 0010  ld   $10
              4c81 0044  ld   $44
              4c82 0011  ld   $11
              4c83 000c  ld   $0c
              4c84 00c3  ld   $c3
              4c85 0030  ld   $30
              4c86 000c  ld   $0c
              4c87 00ff  ld   $ff
              4c88 00ff  ld   $ff
              4c89 00ff  ld   $ff
              * 11 times
              4c92 000f  ld   $0f
              4c93 00c3  ld   $c3
              4c94 0030  ld   $30
              4c95 000c  ld   $0c
              4c96 00c3  ld   $c3
              4c97 0030  ld   $30
              4c98 005c  ld   $5c
              4c99 0014  ld   $14
              4c9a 0045  ld   $45
              4c9b 0051  ld   $51
              4c9c 0014  ld   $14
              4c9d 0045  ld   $45
              4c9e 0051  ld   $51
              4c9f 0014  ld   $14
              4ca0 0045  ld   $45
              4ca1 0051  ld   $51
              4ca2 0014  ld   $14
              4ca3 0045  ld   $45
              4ca4 0051  ld   $51
              4ca5 0014  ld   $14
              4ca6 0045  ld   $45
              4ca7 0051  ld   $51
              4ca8 0014  ld   $14
              4ca9 0045  ld   $45
              4caa 0051  ld   $51
              4cab 0014  ld   $14
              4cac 0045  ld   $45
              4cad 0001  ld   $01
              4cae 00c3  ld   $c3
              4caf 0030  ld   $30
              4cb0 0083  ld   $83
              4cb1 0020  ld   $20
              4cb2 0008  ld   $08
              4cb3 0082  ld   $82
              4cb4 0020  ld   $20
              4cb5 0008  ld   $08
              4cb6 0082  ld   $82
              4cb7 0020  ld   $20
              4cb8 0008  ld   $08
              4cb9 0082  ld   $82
              4cba 0020  ld   $20
              4cbb 0008  ld   $08
              4cbc 0082  ld   $82
              4cbd 0020  ld   $20
              4cbe 0008  ld   $08
              4cbf 0082  ld   $82
              4cc0 0020  ld   $20
              4cc1 0008  ld   $08
              4cc2 0082  ld   $82
              4cc3 0030  ld   $30
              4cc4 0030  ld   $30
              4cc5 000c  ld   $0c
              4cc6 00c3  ld   $c3
              4cc7 0030  ld   $30
              4cc8 000c  ld   $0c
              4cc9 00c3  ld   $c3
              4cca 0030  ld   $30
              4ccb 000c  ld   $0c
              4ccc 00c3  ld   $c3
              4ccd 0030  ld   $30
              4cce 000c  ld   $0c
              4ccf 0003  ld   $03
              4cd0 0000  ld   $00
              4cd1 0000  ld   $00
              4cd2 0000  ld   $00
              * 5 times
              4cd5 00c3  ld   $c3
              4cd6 0015  ld   $15
              4cd7 000c  ld   $0c
              4cd8 00c3  ld   $c3
              4cd9 0030  ld   $30
              4cda 000c  ld   $0c
              4cdb 00c3  ld   $c3
              4cdc 0030  ld   $30
              4cdd 000c  ld   $0c
              4cde 00c3  ld   $c3
              4cdf 00eb  ld   $eb
              4ce0 001a  ld   $1a
              4ce1 0004  ld   $04         ;End of Apps/Racer/Horizon-256x16.rgb, size 3132
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Racer_v2.gcl           |
                                          ;+-----------------------------------+
              4ce2 dc7a  st   $7a,[y,x++] ;'z'
              4ce3 dc69  st   $69,[y,x++] ;'i'
              4ce4 dc70  st   $70,[y,x++] ;'p'
              4ce5 dc70  st   $70,[y,x++] ;'p'
              4ce6 dc65  st   $65,[y,x++] ;'e'
              4ce7 dc64  st   $64,[y,x++] ;'d'
              4ce8 dc52  st   $52,[y,x++] ;'R'
              4ce9 dc61  st   $61,[y,x++] ;'a'
              4cea 00a6  ld   $a6
              4ceb c218  st   [$18]
              4cec 0040  ld   $40
              4ced 14e0  ld   $e0,y
              4cee e02e  jmp  y,$2e
              4cef c219  st   [$19]
Racer:        4cf0 0002  ld   $02         ;| RAM segment address (high byte first)
              4cf1 0000  ld   $00         ;|
              4cf2 00f7  ld   $f7         ;| Length (1..256)
              4cf3 001a  ld   $1a         ;0200 LD
              4cf4 0021  ld   $21
              4cf5 00e6  ld   $e6         ;0202 SUBI
              4cf6 0020  ld   $20
              4cf7 0035  ld   $35         ;0204 BCC
              4cf8 0053  ld   $53         ;0205 GE
              4cf9 000b  ld   $0b
              4cfa 0021  ld   $21         ;0207 LDW
              4cfb fe00  bra  ac          ;+-----------------------------------+
              4cfc fcfd  bra  $4cfd       ;|                                   |
              4cfd 1418  ld   $18,y       ;| Trampoline for page $4c00 lookups |
              4cfe e006  jmp  y,$06       ;|                                   |
              4cff c218  st   [$18]       ;+-----------------------------------+
              4d00 000e  ld   $0e         ;0207 '_frameCount'
              4d01 00f3  ld   $f3         ;0209 DOKE
              4d02 0017  ld   $17         ;0209 '_vPCH'
              4d03 0090  ld   $90         ;020b BRA
              4d04 0005  ld   $05
              4d05 00cd  ld   $cd         ;020d DEF
              4d06 0057  ld   $57
              4d07 00e6  ld   $e6         ;020f SUBI
              4d08 0052  ld   $52
              4d09 0035  ld   $35         ;0211 BCC
              4d0a 0053  ld   $53         ;0212 GE
              4d0b 001b  ld   $1b
              4d0c 00e3  ld   $e3         ;0214 ADDI
              4d0d 0032  ld   $32
              4d0e 002b  ld   $2b         ;0216 STW
              4d0f 0030  ld   $30         ;0216 'i'
              4d10 0011  ld   $11         ;0218 LDWI
              4d11 0000  ld   $00
              4d12 0007  ld   $07
              4d13 0090  ld   $90         ;021b BRA
              4d14 0020  ld   $20
              4d15 002b  ld   $2b         ;021d STW
              4d16 0030  ld   $30         ;021d 'i'
              4d17 0011  ld   $11         ;021f LDWI
              4d18 0000  ld   $00
              4d19 0008  ld   $08
              4d1a 002b  ld   $2b         ;0222 STW
              4d1b 0032  ld   $32         ;0222 'fontData'
              4d1c 0021  ld   $21         ;0224 LDW
              4d1d 0030  ld   $30         ;0224 'i'
              4d1e 00e9  ld   $e9         ;0226 LSLW
              4d1f 00e9  ld   $e9         ;0227 LSLW
              4d20 0099  ld   $99         ;0228 ADDW
              4d21 0030  ld   $30         ;0228 'i'
              4d22 0099  ld   $99         ;022a ADDW
              4d23 0032  ld   $32         ;022a 'fontData'
              4d24 002b  ld   $2b         ;022c STW
              4d25 0032  ld   $32         ;022c 'fontData'
              4d26 0021  ld   $21         ;022e LDW
              4d27 0034  ld   $34         ;022e 'BgColor'
              4d28 005e  ld   $5e         ;0230 ST
              4d29 0024  ld   $24
              4d2a 0021  ld   $21         ;0232 LDW
              4d2b 0036  ld   $36         ;0232 'Color'
              4d2c 005e  ld   $5e         ;0234 ST
              4d2d 0025  ld   $25
              4d2e 0021  ld   $21         ;0236 LDW
              4d2f 0038  ld   $38         ;0236 'Pos'
              4d30 002b  ld   $2b         ;0238 STW
              4d31 0028  ld   $28
              4d32 0011  ld   $11         ;023a LDWI
              4d33 00e1  ld   $e1
              4d34 0004  ld   $04
              4d35 002b  ld   $2b         ;023d STW
              4d36 0022  ld   $22
              4d37 0059  ld   $59         ;023f LDI
              4d38 00fb  ld   $fb
              4d39 002b  ld   $2b         ;0241 STW
              4d3a 0030  ld   $30         ;0241 'i'
              4d3b 0021  ld   $21         ;0243 LDW
              4d3c 0032  ld   $32         ;0243 'fontData'
              4d3d 007f  ld   $7f         ;0245 LUP
              4d3e 0000  ld   $00
              4d3f 0093  ld   $93         ;0247 INC
              4d40 0032  ld   $32         ;0247 'fontData'
              4d41 005e  ld   $5e         ;0249 ST
              4d42 0026  ld   $26
              4d43 00b4  ld   $b4         ;024b SYS
              4d44 00cc  ld   $cc
              4d45 0093  ld   $93         ;024d INC
              4d46 0028  ld   $28
              4d47 0093  ld   $93         ;024f INC
              4d48 0030  ld   $30         ;024f 'i'
              4d49 0021  ld   $21         ;0251 LDW
              4d4a 0030  ld   $30         ;0251 'i'
              4d4b 0035  ld   $35         ;0253 BCC
              4d4c 0072  ld   $72         ;0254 NE
              4d4d 0041  ld   $41
              4d4e 0021  ld   $21         ;0256 LDW
              4d4f 0038  ld   $38         ;0256 'Pos'
              4d50 00ff  ld   $ff         ;0258 RET
              4d51 002b  ld   $2b         ;0259 STW
              4d52 003a  ld   $3a         ;0259 'QPrintChar'
              4d53 00cd  ld   $cd         ;025b DEF
              4d54 00f0  ld   $f0
              4d55 001a  ld   $1a         ;025d LD
              4d56 000e  ld   $0e
              4d57 00b8  ld   $b8         ;025f SUBW
              4d58 003c  ld   $3c         ;025f 'LastFrame'
              4d59 0082  ld   $82         ;0261 ANDI
              4d5a 00ff  ld   $ff
              4d5b 005e  ld   $5e         ;0263 ST
              4d5c 002b  ld   $2b
              4d5d 0099  ld   $99         ;0265 ADDW
              4d5e 003e  ld   $3e         ;0265 'Time'
              4d5f 0035  ld   $35         ;0267 BCC
              4d60 0053  ld   $53         ;0268 GE
              4d61 006b  ld   $6b
              4d62 0011  ld   $11         ;026a LDWI
              4d63 00ff  ld   $ff
              4d64 007f  ld   $7f
              4d65 002b  ld   $2b         ;026d STW
              4d66 003e  ld   $3e         ;026d 'Time'
              4d67 001a  ld   $1a         ;026f LD
              4d68 000e  ld   $0e
              4d69 002b  ld   $2b         ;0271 STW
              4d6a 003c  ld   $3c         ;0271 'LastFrame'
              4d6b 001a  ld   $1a         ;0273 LD
              4d6c 0041  ld   $41         ;0273 'Speed'+1
              4d6d 0035  ld   $35         ;0275 BCC
              4d6e 0056  ld   $56         ;0276 LE
              4d6f 008a  ld   $8a
              4d70 002b  ld   $2b         ;0278 STW
              4d71 0030  ld   $30         ;0278 'i'
              4d72 0021  ld   $21         ;027a LDW
              4d73 0042  ld   $42         ;027a 'CarX'
              4d74 00b8  ld   $b8         ;027c SUBW
              4d75 0044  ld   $44         ;027c 'DriftX'
              4d76 002b  ld   $2b         ;027e STW
              4d77 0042  ld   $42         ;027e 'CarX'
              4d78 0021  ld   $21         ;0280 LDW
              4d79 0046  ld   $46         ;0280 'HorizonX'
              4d7a 0099  ld   $99         ;0282 ADDW
              4d7b 0048  ld   $48         ;0282 'HorizonDX'
              4d7c 002b  ld   $2b         ;0284 STW
              4d7d 0046  ld   $46         ;0284 'HorizonX'
              4d7e 0021  ld   $21         ;0286 LDW
              4d7f 0030  ld   $30         ;0286 'i'
              4d80 00e6  ld   $e6         ;0288 SUBI
              4d81 0001  ld   $01
              4d82 0090  ld   $90         ;028a BRA
              4d83 0073  ld   $73
              4d84 0059  ld   $59         ;028c LDI
              4d85 0000  ld   $00
              4d86 002b  ld   $2b         ;028e STW
              4d87 004a  ld   $4a         ;028e 'Steer'
              4d88 001a  ld   $1a         ;0290 LD
              4d89 0011  ld   $11
              4d8a 0082  ld   $82         ;0292 ANDI
              4d8b 0001  ld   $01
              4d8c 0035  ld   $35         ;0294 BCC
              4d8d 0072  ld   $72         ;0295 NE
              4d8e 00a0  ld   $a0
              4d8f 0011  ld   $11         ;0297 LDWI
              4d90 0000  ld   $00
              4d91 0002  ld   $02
              4d92 0099  ld   $99         ;029a ADDW
              4d93 0042  ld   $42         ;029a 'CarX'
              4d94 002b  ld   $2b         ;029c STW
              4d95 0042  ld   $42         ;029c 'CarX'
              4d96 0059  ld   $59         ;029e LDI
              4d97 0001  ld   $01
              4d98 002b  ld   $2b         ;02a0 STW
              4d99 004a  ld   $4a         ;02a0 'Steer'
              4d9a 001a  ld   $1a         ;02a2 LD
              4d9b 0011  ld   $11
              4d9c 0082  ld   $82         ;02a4 ANDI
              4d9d 0002  ld   $02
              4d9e 0035  ld   $35         ;02a6 BCC
              4d9f 0072  ld   $72         ;02a7 NE
              4da0 00b3  ld   $b3
              4da1 0011  ld   $11         ;02a9 LDWI
              4da2 0000  ld   $00
              4da3 00fe  ld   $fe
              4da4 0099  ld   $99         ;02ac ADDW
              4da5 0042  ld   $42         ;02ac 'CarX'
              4da6 002b  ld   $2b         ;02ae STW
              4da7 0042  ld   $42         ;02ae 'CarX'
              4da8 0011  ld   $11         ;02b0 LDWI
              4da9 00ff  ld   $ff
              4daa 00ff  ld   $ff
              4dab 002b  ld   $2b         ;02b3 STW
              4dac 004a  ld   $4a         ;02b3 'Steer'
              4dad 001a  ld   $1a         ;02b5 LD
              4dae 0011  ld   $11
              4daf 0082  ld   $82         ;02b7 ANDI
              4db0 0080  ld   $80
              4db1 0035  ld   $35         ;02b9 BCC
              4db2 0072  ld   $72         ;02ba NE
              4db3 00cf  ld   $cf
              4db4 0021  ld   $21         ;02bc LDW
              4db5 0040  ld   $40         ;02bc 'Speed'
              4db6 00e3  ld   $e3         ;02be ADDI
              4db7 0010  ld   $10
              4db8 002b  ld   $2b         ;02c0 STW
              4db9 0040  ld   $40         ;02c0 'Speed'
              4dba 0011  ld   $11         ;02c2 LDWI
              4dbb 00ff  ld   $ff
              4dbc 0005  ld   $05
              4dbd 00b8  ld   $b8         ;02c5 SUBW
              4dbe 0040  ld   $40         ;02c5 'Speed'
              4dbf 0035  ld   $35         ;02c7 BCC
              4dc0 0053  ld   $53         ;02c8 GE
              4dc1 00cd  ld   $cd
              4dc2 0011  ld   $11         ;02ca LDWI
              4dc3 00ff  ld   $ff
              4dc4 0005  ld   $05
              4dc5 002b  ld   $2b         ;02cd STW
              4dc6 0040  ld   $40         ;02cd 'Speed'
              4dc7 0090  ld   $90         ;02cf BRA
              4dc8 00dd  ld   $dd
              4dc9 0011  ld   $11         ;02d1 LDWI
              4dca 00f8  ld   $f8
              4dcb 00fe  ld   $fe
              4dcc 0099  ld   $99         ;02d4 ADDW
              4dcd 0040  ld   $40         ;02d4 'Speed'
              4dce 0035  ld   $35         ;02d6 BCC
              4dcf 0050  ld   $50         ;02d7 LT
              4dd0 00dd  ld   $dd
              4dd1 0021  ld   $21         ;02d9 LDW
              4dd2 0040  ld   $40         ;02d9 'Speed'
              4dd3 00e6  ld   $e6         ;02db SUBI
              4dd4 0008  ld   $08
              4dd5 002b  ld   $2b         ;02dd STW
              4dd6 0040  ld   $40         ;02dd 'Speed'
              4dd7 001a  ld   $1a         ;02df LD
              4dd8 0011  ld   $11
              4dd9 0082  ld   $82         ;02e1 ANDI
              4dda 0040  ld   $40
              4ddb 0035  ld   $35         ;02e3 BCC
              4ddc 0072  ld   $72         ;02e4 NE
              4ddd 00ef  ld   $ef
              4dde 0021  ld   $21         ;02e6 LDW
              4ddf 0040  ld   $40         ;02e6 'Speed'
              4de0 00e6  ld   $e6         ;02e8 SUBI
              4de1 0040  ld   $40
              4de2 0035  ld   $35         ;02ea BCC
              4de3 0053  ld   $53         ;02eb GE
              4de4 00ed  ld   $ed
              4de5 0059  ld   $59         ;02ed LDI
              4de6 0000  ld   $00
              4de7 002b  ld   $2b         ;02ef STW
              4de8 0040  ld   $40         ;02ef 'Speed'
              4de9 00ff  ld   $ff         ;02f1 RET
              4dea 002b  ld   $2b         ;02f2 STW
              4deb 004c  ld   $4c         ;02f2 'ControlRaceCar'
              4dec 0093  ld   $93         ;02f4 INC
              4ded 001b  ld   $1b         ;02f4 '_vLR'+1
              4dee 00ff  ld   $ff         ;02f6 RET
              4def 0003  ld   $03         ;| RAM segment address (high byte first)
              4df0 0000  ld   $00         ;|
              4df1 00e1  ld   $e1         ;| Length (1..256)
              4df2 00cd  ld   $cd         ;0300 DEF
              4df3 0009  ld   $09
              4df4 0047  ld   $47         ;0302 'G'
              4df5 0069  ld   $69         ;0303 'i'
              4df6 0067  ld   $67         ;0304 'g'
              4df7 0061  ld   $61         ;0305 'a'
              4df8 0074  ld   $74         ;0306 't'
              4df9 0072  ld   $72         ;0307 'r'
              4dfa 006f  ld   $6f         ;0308 'o'
              4dfb fe00  bra  ac          ;+-----------------------------------+
              4dfc fcfd  bra  $4dfd       ;|                                   |
              4dfd 1418  ld   $18,y       ;| Trampoline for page $4d00 lookups |
              4dfe e006  jmp  y,$06       ;|                                   |
              4dff c218  st   [$18]       ;+-----------------------------------+
              4e00 006e  ld   $6e         ;0309 'n'
              4e01 0000  ld   $00         ;030a 0
              4e02 002b  ld   $2b         ;030b STW
              4e03 004e  ld   $4e         ;030b 'GigatronText'
              4e04 00cd  ld   $cd         ;030d DEF
              4e05 001d  ld   $1d
              4e06 001a  ld   $1a         ;030f LD
              4e07 000e  ld   $0e
              4e08 0099  ld   $99         ;0311 ADDW
              4e09 0050  ld   $50         ;0311 'Delay'
              4e0a 0082  ld   $82         ;0313 ANDI
              4e0b 00ff  ld   $ff
              4e0c 002b  ld   $2b         ;0315 STW
              4e0d 0052  ld   $52         ;0315 'tmp'
              4e0e 001a  ld   $1a         ;0317 LD
              4e0f 000e  ld   $0e
              4e10 00b8  ld   $b8         ;0319 SUBW
              4e11 0052  ld   $52         ;0319 'tmp'
              4e12 0035  ld   $35         ;031b BCC
              4e13 0072  ld   $72         ;031c NE
              4e14 0015  ld   $15
              4e15 00ff  ld   $ff         ;031e RET
              4e16 002b  ld   $2b         ;031f STW
              4e17 0054  ld   $54         ;031f 'Wait'
              4e18 00cd  ld   $cd         ;0321 DEF
              4e19 00a1  ld   $a1
              4e1a 0021  ld   $21         ;0323 LDW
              4e1b 0056  ld   $56         ;0323 'Video'
              4e1c 00ad  ld   $ad         ;0325 PEEK
              4e1d 0082  ld   $82         ;0326 ANDI
              4e1e 00fe  ld   $fe
              4e1f 005e  ld   $5e         ;0328 ST
              4e20 0059  ld   $59         ;0328 'p'+1
              4e21 0088  ld   $88         ;032a ORI
              4e22 0001  ld   $01
              4e23 005e  ld   $5e         ;032c ST
              4e24 005b  ld   $5b         ;032c 'q'+1
              4e25 0093  ld   $93         ;032e INC
              4e26 0056  ld   $56         ;032e 'Video'
              4e27 0059  ld   $59         ;0330 LDI
              4e28 0000  ld   $00
              4e29 005e  ld   $5e         ;0332 ST
              4e2a 0058  ld   $58         ;0332 'p'
              4e2b 005e  ld   $5e         ;0334 ST
              4e2c 005a  ld   $5a         ;0334 'q'
              4e2d 0021  ld   $21         ;0336 LDW
              4e2e 0058  ld   $58         ;0336 'p'
              4e2f 00ad  ld   $ad         ;0338 PEEK
              4e30 002b  ld   $2b         ;0339 STW
              4e31 0030  ld   $30         ;0339 'i'
              4e32 0021  ld   $21         ;033b LDW
              4e33 005a  ld   $5a         ;033b 'q'
              4e34 00ad  ld   $ad         ;033d PEEK
              4e35 00b8  ld   $b8         ;033e SUBW
              4e36 0030  ld   $30         ;033e 'i'
              4e37 002b  ld   $2b         ;0340 STW
              4e38 0030  ld   $30         ;0340 'i'
              4e39 0021  ld   $21         ;0342 LDW
              4e3a 0058  ld   $58         ;0342 'p'
              4e3b 00ad  ld   $ad         ;0344 PEEK
              4e3c 005e  ld   $5e         ;0345 ST
              4e3d 0058  ld   $58         ;0345 'p'
              4e3e 005e  ld   $5e         ;0347 ST
              4e3f 005a  ld   $5a         ;0347 'q'
              4e40 0059  ld   $59         ;0349 LDI
              4e41 0015  ld   $15
              4e42 00f0  ld   $f0         ;034b POKE
              4e43 0058  ld   $58         ;034b 'p'
              4e44 00f0  ld   $f0         ;034d POKE
              4e45 005a  ld   $5a         ;034d 'q'
              4e46 0093  ld   $93         ;034f INC
              4e47 0058  ld   $58         ;034f 'p'
              4e48 0093  ld   $93         ;0351 INC
              4e49 005a  ld   $5a         ;0351 'q'
              4e4a 0021  ld   $21         ;0353 LDW
              4e4b 0030  ld   $30         ;0353 'i'
              4e4c 00e6  ld   $e6         ;0355 SUBI
              4e4d 0001  ld   $01
              4e4e 002b  ld   $2b         ;0357 STW
              4e4f 0030  ld   $30         ;0357 'i'
              4e50 0035  ld   $35         ;0359 BCC
              4e51 004d  ld   $4d         ;035a GT
              4e52 0047  ld   $47
              4e53 0021  ld   $21         ;035c LDW
              4e54 005c  ld   $5c         ;035c 'Sprite'
              4e55 002b  ld   $2b         ;035e STW
              4e56 005e  ld   $5e         ;035e 's'
              4e57 0059  ld   $59         ;0360 LDI
              4e58 0000  ld   $00
              4e59 005e  ld   $5e         ;0362 ST
              4e5a 0058  ld   $58         ;0362 'p'
              4e5b 0021  ld   $21         ;0364 LDW
              4e5c 0056  ld   $56         ;0364 'Video'
              4e5d 00ad  ld   $ad         ;0366 PEEK
              4e5e 0099  ld   $99         ;0367 ADDW
              4e5f 0060  ld   $60         ;0367 'X'
              4e60 002b  ld   $2b         ;0369 STW
              4e61 0060  ld   $60         ;0369 'X'
              4e62 0021  ld   $21         ;036b LDW
              4e63 005e  ld   $5e         ;036b 's'
              4e64 00ad  ld   $ad         ;036d PEEK
              4e65 0099  ld   $99         ;036e ADDW
              4e66 0060  ld   $60         ;036e 'X'
              4e67 00f0  ld   $f0         ;0370 POKE
              4e68 0058  ld   $58         ;0370 'p'
              4e69 005e  ld   $5e         ;0372 ST
              4e6a 0058  ld   $58         ;0372 'p'
              4e6b 005e  ld   $5e         ;0374 ST
              4e6c 005a  ld   $5a         ;0374 'q'
              4e6d 0093  ld   $93         ;0376 INC
              4e6e 005e  ld   $5e         ;0376 's'
              4e6f 0021  ld   $21         ;0378 LDW
              4e70 0058  ld   $58         ;0378 'p'
              4e71 00ad  ld   $ad         ;037a PEEK
              4e72 008c  ld   $8c         ;037b XORI
              4e73 0015  ld   $15
              4e74 0099  ld   $99         ;037d ADDW
              4e75 0062  ld   $62         ;037d 'Collision'
              4e76 002b  ld   $2b         ;037f STW
              4e77 0062  ld   $62         ;037f 'Collision'
              4e78 0021  ld   $21         ;0381 LDW
              4e79 005e  ld   $5e         ;0381 's'
              4e7a 00ad  ld   $ad         ;0383 PEEK
              4e7b 00f0  ld   $f0         ;0384 POKE
              4e7c 0058  ld   $58         ;0384 'p'
              4e7d 0093  ld   $93         ;0386 INC
              4e7e 0058  ld   $58         ;0386 'p'
              4e7f 00f0  ld   $f0         ;0388 POKE
              4e80 005a  ld   $5a         ;0388 'q'
              4e81 0093  ld   $93         ;038a INC
              4e82 005a  ld   $5a         ;038a 'q'
              4e83 0093  ld   $93         ;038c INC
              4e84 005e  ld   $5e         ;038c 's'
              4e85 0021  ld   $21         ;038e LDW
              4e86 005e  ld   $5e         ;038e 's'
              4e87 00ad  ld   $ad         ;0390 PEEK
              4e88 0035  ld   $35         ;0391 BCC
              4e89 0072  ld   $72         ;0392 NE
              4e8a 0076  ld   $76
              4e8b 0059  ld   $59         ;0394 LDI
              4e8c 0000  ld   $00
              4e8d 005e  ld   $5e         ;0396 ST
              4e8e 005a  ld   $5a         ;0396 'q'
              4e8f 001a  ld   $1a         ;0398 LD
              4e90 0058  ld   $58         ;0398 'p'
              4e91 00f0  ld   $f0         ;039a POKE
              4e92 005a  ld   $5a         ;039a 'q'
              4e93 0021  ld   $21         ;039c LDW
              4e94 0056  ld   $56         ;039c 'Video'
              4e95 00e3  ld   $e3         ;039e ADDI
              4e96 0003  ld   $03
              4e97 002b  ld   $2b         ;03a0 STW
              4e98 0056  ld   $56         ;03a0 'Video'
              4e99 00ff  ld   $ff         ;03a2 RET
              4e9a 002b  ld   $2b         ;03a3 STW
              4e9b 0064  ld   $64         ;03a3 'DrawPixels'
              4e9c 00cd  ld   $cd         ;03a5 DEF
              4e9d 00da  ld   $da
              4e9e 0011  ld   $11         ;03a7 LDWI
              4e9f 00fd  ld   $fd
              4ea0 0001  ld   $01
              4ea1 002b  ld   $2b         ;03aa STW
              4ea2 0058  ld   $58         ;03aa 'p'
              4ea3 0021  ld   $21         ;03ac LDW
              4ea4 0040  ld   $40         ;03ac 'Speed'
              4ea5 0099  ld   $99         ;03ae ADDW
              4ea6 0040  ld   $40         ;03ae 'Speed'
              4ea7 001a  ld   $1a         ;03b0 LD
              4ea8 0019  ld   $19
              4ea9 00f0  ld   $f0         ;03b2 POKE
              4eaa 0058  ld   $58         ;03b2 'p'
              4eab 0093  ld   $93         ;03b4 INC
              4eac 0059  ld   $59         ;03b4 'p'+1
              4ead 00f0  ld   $f0         ;03b6 POKE
              4eae 0058  ld   $58         ;03b6 'p'
              4eaf 0093  ld   $93         ;03b8 INC
              4eb0 0059  ld   $59         ;03b8 'p'+1
              4eb1 00f0  ld   $f0         ;03ba POKE
              4eb2 0058  ld   $58         ;03ba 'p'
              4eb3 0093  ld   $93         ;03bc INC
              4eb4 0059  ld   $59         ;03bc 'p'+1
              4eb5 00f0  ld   $f0         ;03be POKE
              4eb6 0058  ld   $58         ;03be 'p'
              4eb7 0011  ld   $11         ;03c0 LDWI
              4eb8 00fc  ld   $fc
              4eb9 0001  ld   $01
              4eba 002b  ld   $2b         ;03c3 STW
              4ebb 0058  ld   $58         ;03c3 'p'
              4ebc 0021  ld   $21         ;03c5 LDW
              4ebd 0040  ld   $40         ;03c5 'Speed'
              4ebe 0082  ld   $82         ;03c7 ANDI
              4ebf 007f  ld   $7f
              4ec0 00f0  ld   $f0         ;03c9 POKE
              4ec1 0058  ld   $58         ;03c9 'p'
              4ec2 0093  ld   $93         ;03cb INC
              4ec3 0059  ld   $59         ;03cb 'p'+1
              4ec4 00f0  ld   $f0         ;03cd POKE
              4ec5 0058  ld   $58         ;03cd 'p'
              4ec6 0093  ld   $93         ;03cf INC
              4ec7 0059  ld   $59         ;03cf 'p'+1
              4ec8 00f0  ld   $f0         ;03d1 POKE
              4ec9 0058  ld   $58         ;03d1 'p'
              4eca 0093  ld   $93         ;03d3 INC
              4ecb 0059  ld   $59         ;03d3 'p'+1
              4ecc 00f0  ld   $f0         ;03d5 POKE
              4ecd 0058  ld   $58         ;03d5 'p'
              4ece 0059  ld   $59         ;03d7 LDI
              4ecf 000a  ld   $0a
              4ed0 005e  ld   $5e         ;03d9 ST
              4ed1 002c  ld   $2c
              4ed2 00ff  ld   $ff         ;03db RET
              4ed3 002b  ld   $2b         ;03dc STW
              4ed4 0066  ld   $66         ;03dc 'PlayEngineSound'
              4ed5 0093  ld   $93         ;03de INC
              4ed6 001b  ld   $1b         ;03de '_vLR'+1
              4ed7 00ff  ld   $ff         ;03e0 RET
              4ed8 0004  ld   $04         ;| RAM segment address (high byte first)
              4ed9 0000  ld   $00         ;|
              4eda 00ef  ld   $ef         ;| Length (1..256)
              4edb 00cd  ld   $cd         ;0400 DEF
              4edc 003e  ld   $3e
              4edd 0075  ld   $75         ;0402 PUSH
              4ede 0011  ld   $11         ;0403 LDWI
              4edf 0080  ld   $80
              4ee0 0020  ld   $20
              4ee1 002b  ld   $2b         ;0406 STW
              4ee2 0038  ld   $38         ;0406 'Pos'
              4ee3 0011  ld   $11         ;0408 LDWI
              4ee4 0003  ld   $03
              4ee5 000b  ld   $0b
              4ee6 002b  ld   $2b         ;040b STW
              4ee7 0022  ld   $22
              4ee8 0059  ld   $59         ;040d LDI
              4ee9 0000  ld   $00
              4eea 002b  ld   $2b         ;040f STW
              4eeb 0068  ld   $68         ;040f 'Width'
              4eec 0021  ld   $21         ;0411 LDW
              4eed 0068  ld   $68         ;0411 'Width'
              4eee 00e3  ld   $e3         ;0413 ADDI
              4eef 0001  ld   $01
              4ef0 002b  ld   $2b         ;0415 STW
              4ef1 0068  ld   $68         ;0415 'Width'
              4ef2 0059  ld   $59         ;0417 LDI
              4ef3 003f  ld   $3f
              4ef4 002b  ld   $2b         ;0419 STW
              4ef5 006a  ld   $6a         ;0419 'CurbColor'
              4ef6 0059  ld   $59         ;041b LDI
              4ef7 000c  ld   $0c
              4ef8 002b  ld   $2b         ;041d STW
              4ef9 006c  ld   $6c         ;041d 'GrassColor'
              4efa 00cf  ld   $cf         ;041f CALL
              4efb fe00  bra  ac          ;+-----------------------------------+
              4efc fcfd  bra  $4efd       ;|                                   |
              4efd 1418  ld   $18,y       ;| Trampoline for page $4e00 lookups |
              4efe e006  jmp  y,$06       ;|                                   |
              4eff c218  st   [$18]       ;+-----------------------------------+
              4f00 006e  ld   $6e         ;041f 'SetupSegment'
              4f01 0093  ld   $93         ;0421 INC
              4f02 0039  ld   $39         ;0421 'Pos'+1
              4f03 0059  ld   $59         ;0423 LDI
              4f04 0003  ld   $03
              4f05 002b  ld   $2b         ;0425 STW
              4f06 006a  ld   $6a         ;0425 'CurbColor'
              4f07 0059  ld   $59         ;0427 LDI
              4f08 0008  ld   $08
              4f09 002b  ld   $2b         ;0429 STW
              4f0a 006c  ld   $6c         ;0429 'GrassColor'
              4f0b 00cf  ld   $cf         ;042b CALL
              4f0c 006e  ld   $6e         ;042b 'SetupSegment'
              4f0d 0093  ld   $93         ;042d INC
              4f0e 0039  ld   $39         ;042d 'Pos'+1
              4f0f 0021  ld   $21         ;042f LDW
              4f10 0038  ld   $38         ;042f 'Pos'
              4f11 0035  ld   $35         ;0431 BCC
              4f12 0053  ld   $53         ;0432 GE
              4f13 000f  ld   $0f
              4f14 0011  ld   $11         ;0434 LDWI
              4f15 0000  ld   $00
              4f16 0074  ld   $74
              4f17 00f0  ld   $f0         ;0437 1008
              4f18 0018  ld   $18         ;0438 24
              4f19 0093  ld   $93         ;0439 INC
              4f1a 0019  ld   $19
              4f1b 0035  ld   $35         ;043b BCC
              4f1c 004d  ld   $4d         ;043c GT
              4f1d 0035  ld   $35
              4f1e 0063  ld   $63         ;043e POP
              4f1f 00ff  ld   $ff         ;043f RET
              4f20 002b  ld   $2b         ;0440 STW
              4f21 0070  ld   $70         ;0440 'SetupRoad'
              4f22 00cd  ld   $cd         ;0442 DEF
              4f23 0086  ld   $86
              4f24 0021  ld   $21         ;0444 LDW
              4f25 0068  ld   $68         ;0444 'Width'
              4f26 00e9  ld   $e9         ;0446 LSLW
              4f27 005e  ld   $5e         ;0447 ST
              4f28 0024  ld   $24
              4f29 0021  ld   $21         ;0449 LDW
              4f2a 0038  ld   $38         ;0449 'Pos'
              4f2b 00b8  ld   $b8         ;044b SUBW
              4f2c 0068  ld   $68         ;044b 'Width'
              4f2d 002b  ld   $2b         ;044d STW
              4f2e 0058  ld   $58         ;044d 'p'
              4f2f 002b  ld   $2b         ;044f STW
              4f30 0026  ld   $26
              4f31 0059  ld   $59         ;0451 LDI
              4f32 0015  ld   $15
              4f33 005e  ld   $5e         ;0453 ST
              4f34 0025  ld   $25
              4f35 00b4  ld   $b4         ;0455 SYS
              4f36 00f4  ld   $f4
              4f37 0059  ld   $59         ;0457 LDI
              4f38 0080  ld   $80
              4f39 00b8  ld   $b8         ;0459 SUBW
              4f3a 0068  ld   $68         ;0459 'Width'
              4f3b 00e9  ld   $e9         ;045b LSLW
              4f3c 005e  ld   $5e         ;045c ST
              4f3d 0024  ld   $24
              4f3e 0021  ld   $21         ;045e LDW
              4f3f 0038  ld   $38         ;045e 'Pos'
              4f40 0099  ld   $99         ;0460 ADDW
              4f41 0068  ld   $68         ;0460 'Width'
              4f42 002b  ld   $2b         ;0462 STW
              4f43 005a  ld   $5a         ;0462 'q'
              4f44 002b  ld   $2b         ;0464 STW
              4f45 0026  ld   $26
              4f46 0021  ld   $21         ;0466 LDW
              4f47 006c  ld   $6c         ;0466 'GrassColor'
              4f48 005e  ld   $5e         ;0468 ST
              4f49 0025  ld   $25
              4f4a 00b4  ld   $b4         ;046a SYS
              4f4b 00f4  ld   $f4
              4f4c 0021  ld   $21         ;046c LDW
              4f4d 0068  ld   $68         ;046c 'Width'
              4f4e 00e6  ld   $e6         ;046e SUBI
              4f4f 0008  ld   $08
              4f50 0035  ld   $35         ;0470 BCC
              4f51 0056  ld   $56         ;0471 LE
              4f52 0085  ld   $85
              4f53 002b  ld   $2b         ;0473 STW
              4f54 0052  ld   $52         ;0473 'tmp'
              4f55 0021  ld   $21         ;0475 LDW
              4f56 005a  ld   $5a         ;0475 'q'
              4f57 00e6  ld   $e6         ;0477 SUBI
              4f58 0001  ld   $01
              4f59 002b  ld   $2b         ;0479 STW
              4f5a 005a  ld   $5a         ;0479 'q'
              4f5b 0021  ld   $21         ;047b LDW
              4f5c 006a  ld   $6a         ;047b 'CurbColor'
              4f5d 00f0  ld   $f0         ;047d POKE
              4f5e 0058  ld   $58         ;047d 'p'
              4f5f 00f0  ld   $f0         ;047f POKE
              4f60 005a  ld   $5a         ;047f 'q'
              4f61 0093  ld   $93         ;0481 INC
              4f62 0058  ld   $58         ;0481 'p'
              4f63 0021  ld   $21         ;0483 LDW
              4f64 0052  ld   $52         ;0483 'tmp'
              4f65 0090  ld   $90         ;0485 BRA
              4f66 006c  ld   $6c
              4f67 00ff  ld   $ff         ;0487 RET
              4f68 002b  ld   $2b         ;0488 STW
              4f69 006e  ld   $6e         ;0488 'SetupSegment'
              4f6a 00cd  ld   $cd         ;048a DEF
              4f6b 00e8  ld   $e8
              4f6c 0075  ld   $75         ;048c PUSH
              4f6d 0011  ld   $11         ;048d LDWI
              4f6e 000f  ld   $0f
              4f6f 000e  ld   $0e
              4f70 002b  ld   $2b         ;0490 STW
              4f71 0072  ld   $72         ;0490 'Radix'
              4f72 00cf  ld   $cf         ;0492 CALL
              4f73 0074  ld   $74         ;0492 'ExtractDigit'
              4f74 0021  ld   $21         ;0494 LDW
              4f75 0076  ld   $76         ;0494 'Prev3'
              4f76 00fc  ld   $fc         ;0496 XORW
              4f77 0078  ld   $78         ;0496 'Char'
              4f78 0035  ld   $35         ;0498 BCC
              4f79 003f  ld   $3f         ;0499 EQ
              4f7a 00a1  ld   $a1
              4f7b 0021  ld   $21         ;049b LDW
              4f7c 0078  ld   $78         ;049b 'Char'
              4f7d 002b  ld   $2b         ;049d STW
              4f7e 0076  ld   $76         ;049d 'Prev3'
              4f7f 00cf  ld   $cf         ;049f CALL
              4f80 003a  ld   $3a         ;049f 'QPrintChar'
              4f81 0090  ld   $90         ;04a1 BRA
              4f82 00a3  ld   $a3
              4f83 0021  ld   $21         ;04a3 LDW
              4f84 0038  ld   $38         ;04a3 'Pos'
              4f85 00e3  ld   $e3         ;04a5 ADDI
              4f86 000c  ld   $0c
              4f87 002b  ld   $2b         ;04a7 STW
              4f88 0038  ld   $38         ;04a7 'Pos'
              4f89 0011  ld   $11         ;04a9 LDWI
              4f8a 0058  ld   $58
              4f8b 0002  ld   $02
              4f8c 002b  ld   $2b         ;04ac STW
              4f8d 0072  ld   $72         ;04ac 'Radix'
              4f8e 00cf  ld   $cf         ;04ae CALL
              4f8f 0074  ld   $74         ;04ae 'ExtractDigit'
              4f90 0021  ld   $21         ;04b0 LDW
              4f91 007a  ld   $7a         ;04b0 'Prev2'
              4f92 00fc  ld   $fc         ;04b2 XORW
              4f93 0078  ld   $78         ;04b2 'Char'
              4f94 0035  ld   $35         ;04b4 BCC
              4f95 003f  ld   $3f         ;04b5 EQ
              4f96 00bd  ld   $bd
              4f97 0021  ld   $21         ;04b7 LDW
              4f98 0078  ld   $78         ;04b7 'Char'
              4f99 002b  ld   $2b         ;04b9 STW
              4f9a 007a  ld   $7a         ;04b9 'Prev2'
              4f9b 00cf  ld   $cf         ;04bb CALL
              4f9c 003a  ld   $3a         ;04bb 'QPrintChar'
              4f9d 0090  ld   $90         ;04bd BRA
              4f9e 00bf  ld   $bf
              4f9f 0021  ld   $21         ;04bf LDW
              4fa0 0038  ld   $38         ;04bf 'Pos'
              4fa1 00e3  ld   $e3         ;04c1 ADDI
              4fa2 0006  ld   $06
              4fa3 002b  ld   $2b         ;04c3 STW
              4fa4 0038  ld   $38         ;04c3 'Pos'
              4fa5 0059  ld   $59         ;04c5 LDI
              4fa6 003c  ld   $3c
              4fa7 002b  ld   $2b         ;04c7 STW
              4fa8 0072  ld   $72         ;04c7 'Radix'
              4fa9 00cf  ld   $cf         ;04c9 CALL
              4faa 0074  ld   $74         ;04c9 'ExtractDigit'
              4fab 0021  ld   $21         ;04cb LDW
              4fac 007c  ld   $7c         ;04cb 'Prev1'
              4fad 00fc  ld   $fc         ;04cd XORW
              4fae 0078  ld   $78         ;04cd 'Char'
              4faf 0035  ld   $35         ;04cf BCC
              4fb0 003f  ld   $3f         ;04d0 EQ
              4fb1 00d8  ld   $d8
              4fb2 0021  ld   $21         ;04d2 LDW
              4fb3 0078  ld   $78         ;04d2 'Char'
              4fb4 002b  ld   $2b         ;04d4 STW
              4fb5 007c  ld   $7c         ;04d4 'Prev1'
              4fb6 00cf  ld   $cf         ;04d6 CALL
              4fb7 003a  ld   $3a         ;04d6 'QPrintChar'
              4fb8 0090  ld   $90         ;04d8 BRA
              4fb9 00da  ld   $da
              4fba 0021  ld   $21         ;04da LDW
              4fbb 0038  ld   $38         ;04da 'Pos'
              4fbc 00e3  ld   $e3         ;04dc ADDI
              4fbd 000c  ld   $0c
              4fbe 002b  ld   $2b         ;04de STW
              4fbf 0038  ld   $38         ;04de 'Pos'
              4fc0 0059  ld   $59         ;04e0 LDI
              4fc1 0006  ld   $06
              4fc2 002b  ld   $2b         ;04e2 STW
              4fc3 0072  ld   $72         ;04e2 'Radix'
              4fc4 00cf  ld   $cf         ;04e4 CALL
              4fc5 0074  ld   $74         ;04e4 'ExtractDigit'
              4fc6 00cf  ld   $cf         ;04e6 CALL
              4fc7 003a  ld   $3a         ;04e6 'QPrintChar'
              4fc8 0063  ld   $63         ;04e8 POP
              4fc9 00ff  ld   $ff         ;04e9 RET
              4fca 002b  ld   $2b         ;04ea STW
              4fcb 007e  ld   $7e         ;04ea 'PrintTime'
              4fcc 0093  ld   $93         ;04ec INC
              4fcd 001b  ld   $1b         ;04ec '_vLR'+1
              4fce 00ff  ld   $ff         ;04ee RET
              4fcf 0005  ld   $05         ;| RAM segment address (high byte first)
              4fd0 0000  ld   $00         ;|
              4fd1 00e6  ld   $e6         ;| Length (1..256)
              4fd2 00cd  ld   $cd         ;0500 DEF
              4fd3 0017  ld   $17
              4fd4 0059  ld   $59         ;0502 LDI
              4fd5 0030  ld   $30
              4fd6 002b  ld   $2b         ;0504 STW
              4fd7 0078  ld   $78         ;0504 'Char'
              4fd8 0021  ld   $21         ;0506 LDW
              4fd9 0081  ld   $81         ;0506 'Value'
              4fda 00b8  ld   $b8         ;0508 SUBW
              4fdb 0072  ld   $72         ;0508 'Radix'
              4fdc 0035  ld   $35         ;050a BCC
              4fdd 0050  ld   $50         ;050b LT
              4fde 0014  ld   $14
              4fdf 002b  ld   $2b         ;050d STW
              4fe0 0081  ld   $81         ;050d 'Value'
              4fe1 0093  ld   $93         ;050f INC
              4fe2 0078  ld   $78         ;050f 'Char'
              4fe3 00b8  ld   $b8         ;0511 SUBW
              4fe4 0072  ld   $72         ;0511 'Radix'
              4fe5 0035  ld   $35         ;0513 BCC
              4fe6 0053  ld   $53         ;0514 GE
              4fe7 000b  ld   $0b
              4fe8 0021  ld   $21         ;0516 LDW
              4fe9 0078  ld   $78         ;0516 'Char'
              4fea 00ff  ld   $ff         ;0518 RET
              4feb 002b  ld   $2b         ;0519 STW
              4fec 0074  ld   $74         ;0519 'ExtractDigit'
              4fed 00cd  ld   $cd         ;051b DEF
              4fee 0032  ld   $32
              4fef 0075  ld   $75         ;051d PUSH
              4ff0 002b  ld   $2b         ;051e STW
              4ff1 0083  ld   $83         ;051e 'Text'
              4ff2 0021  ld   $21         ;0520 LDW
              4ff3 0083  ld   $83         ;0520 'Text'
              4ff4 00ad  ld   $ad         ;0522 PEEK
              4ff5 002b  ld   $2b         ;0523 STW
              4ff6 0078  ld   $78         ;0523 'Char'
              4ff7 0035  ld   $35         ;0525 BCC
              4ff8 003f  ld   $3f         ;0526 EQ
              4ff9 0030  ld   $30
              4ffa 0093  ld   $93         ;0528 INC
              4ffb fe00  bra  ac          ;+-----------------------------------+
              4ffc fcfd  bra  $4ffd       ;|                                   |
              4ffd 1418  ld   $18,y       ;| Trampoline for page $4f00 lookups |
              4ffe e006  jmp  y,$06       ;|                                   |
              4fff c218  st   [$18]       ;+-----------------------------------+
              5000 0083  ld   $83         ;0528 'Text'
              5001 00cf  ld   $cf         ;052a CALL
              5002 003a  ld   $3a         ;052a 'QPrintChar'
              5003 00e3  ld   $e3         ;052c ADDI
              5004 0006  ld   $06
              5005 002b  ld   $2b         ;052e STW
              5006 0038  ld   $38         ;052e 'Pos'
              5007 0090  ld   $90         ;0530 BRA
              5008 001e  ld   $1e
              5009 0063  ld   $63         ;0532 POP
              500a 00ff  ld   $ff         ;0533 RET
              500b 002b  ld   $2b         ;0534 STW
              500c 0085  ld   $85         ;0534 'PrintText'
              500d 00cd  ld   $cd         ;0536 DEF
              500e 00df  ld   $df
              500f 0011  ld   $11         ;0538 LDWI
              5010 00d0  ld   $d0
              5011 0074  ld   $74
              5012 002b  ld   $2b         ;053b STW
              5013 0058  ld   $58         ;053b 'p'
              5014 0059  ld   $59         ;053d LDI
              5015 0000  ld   $00
              5016 002b  ld   $2b         ;053f STW
              5017 0060  ld   $60         ;053f 'X'
              5018 0021  ld   $21         ;0541 LDW
              5019 0087  ld   $87         ;0541 'DX0'
              501a 002b  ld   $2b         ;0543 STW
              501b 0089  ld   $89         ;0543 'DX'
              501c 0021  ld   $21         ;0545 LDW
              501d 008b  ld   $8b         ;0545 'NextTurn'
              501e 00b8  ld   $b8         ;0547 SUBW
              501f 008d  ld   $8d         ;0547 'Distance'
              5020 002b  ld   $2b         ;0549 STW
              5021 0052  ld   $52         ;0549 'tmp'
              5022 0099  ld   $99         ;054b ADDW
              5023 0052  ld   $52         ;054b 'tmp'
              5024 002b  ld   $2b         ;054d STW
              5025 0052  ld   $52         ;054d 'tmp'
              5026 0011  ld   $11         ;054f LDWI
              5027 0000  ld   $00
              5028 000a  ld   $0a
              5029 0099  ld   $99         ;0552 ADDW
              502a 0052  ld   $52         ;0552 'tmp'
              502b 007f  ld   $7f         ;0554 LUP
              502c 0035  ld   $35
              502d 002b  ld   $2b         ;0556 STW
              502e 0052  ld   $52         ;0556 'tmp'
              502f 0059  ld   $59         ;0558 LDI
              5030 00c5  ld   $c5
              5031 0099  ld   $99         ;055a ADDW
              5032 0052  ld   $52         ;055a 'tmp'
              5033 002b  ld   $2b         ;055c STW
              5034 0030  ld   $30         ;055c 'i'
              5035 001a  ld   $1a         ;055e LD
              5036 0061  ld   $61         ;055e 'X'+1
              5037 00f0  ld   $f0         ;0560 POKE
              5038 0058  ld   $58         ;0560 'p'
              5039 0093  ld   $93         ;0562 INC
              503a 0058  ld   $58         ;0562 'p'
              503b 0021  ld   $21         ;0564 LDW
              503c 0089  ld   $89         ;0564 'DX'
              503d 0099  ld   $99         ;0566 ADDW
              503e 008f  ld   $8f         ;0566 'DDX'
              503f 002b  ld   $2b         ;0568 STW
              5040 0089  ld   $89         ;0568 'DX'
              5041 0099  ld   $99         ;056a ADDW
              5042 0060  ld   $60         ;056a 'X'
              5043 002b  ld   $2b         ;056c STW
              5044 0060  ld   $60         ;056c 'X'
              5045 0093  ld   $93         ;056e INC
              5046 0030  ld   $30         ;056e 'i'
              5047 0021  ld   $21         ;0570 LDW
              5048 0030  ld   $30         ;0570 'i'
              5049 0035  ld   $35         ;0572 BCC
              504a 0072  ld   $72         ;0573 NE
              504b 005c  ld   $5c
              504c 001a  ld   $1a         ;0575 LD
              504d 0061  ld   $61         ;0575 'X'+1
              504e 00f0  ld   $f0         ;0577 POKE
              504f 0058  ld   $58         ;0577 'p'
              5050 0093  ld   $93         ;0579 INC
              5051 0058  ld   $58         ;0579 'p'
              5052 0021  ld   $21         ;057b LDW
              5053 0089  ld   $89         ;057b 'DX'
              5054 0099  ld   $99         ;057d ADDW
              5055 0091  ld   $91         ;057d 'NextDDX'
              5056 002b  ld   $2b         ;057f STW
              5057 0089  ld   $89         ;057f 'DX'
              5058 0099  ld   $99         ;0581 ADDW
              5059 0060  ld   $60         ;0581 'X'
              505a 002b  ld   $2b         ;0583 STW
              505b 0060  ld   $60         ;0583 'X'
              505c 001a  ld   $1a         ;0585 LD
              505d 0058  ld   $58         ;0585 'p'
              505e 0035  ld   $35         ;0587 BCC
              505f 0072  ld   $72         ;0588 NE
              5060 0073  ld   $73
              5061 0011  ld   $11         ;058a LDWI
              5062 00ed  ld   $ed
              5063 0001  ld   $01
              5064 002b  ld   $2b         ;058d STW
              5065 0024  ld   $24
              5066 0011  ld   $11         ;058f LDWI
              5067 00d1  ld   $d1
              5068 0074  ld   $74
              5069 002b  ld   $2b         ;0592 STW
              506a 0026  ld   $26
              506b 00e6  ld   $e6         ;0594 SUBI
              506c 0001  ld   $01
              506d 00ad  ld   $ad         ;0596 PEEK
              506e 002b  ld   $2b         ;0597 STW
              506f 0028  ld   $28
              5070 001a  ld   $1a         ;0599 LD
              5071 0047  ld   $47         ;0599 'HorizonX'+1
              5072 002b  ld   $2b         ;059b STW
              5073 0052  ld   $52         ;059b 'tmp'
              5074 0011  ld   $11         ;059d LDWI
              5075 00d5  ld   $d5
              5076 0074  ld   $74
              5077 00ad  ld   $ad         ;05a0 PEEK
              5078 00e3  ld   $e3         ;05a1 ADDI
              5079 0030  ld   $30
              507a 00b8  ld   $b8         ;05a3 SUBW
              507b 0052  ld   $52         ;05a3 'tmp'
              507c 002b  ld   $2b         ;05a5 STW
              507d 0052  ld   $52         ;05a5 'tmp'
              507e 0011  ld   $11         ;05a7 LDWI
              507f 00d4  ld   $d4
              5080 0074  ld   $74
              5081 00ad  ld   $ad         ;05aa PEEK
              5082 002b  ld   $2b         ;05ab STW
              5083 0087  ld   $87         ;05ab 'DX0'
              5084 0011  ld   $11         ;05ad LDWI
              5085 00ec  ld   $ec
              5086 0074  ld   $74
              5087 00ad  ld   $ad         ;05b0 PEEK
              5088 00b8  ld   $b8         ;05b1 SUBW
              5089 0087  ld   $87         ;05b1 'DX0'
              508a 0082  ld   $82         ;05b3 ANDI
              508b 00ff  ld   $ff
              508c 008c  ld   $8c         ;05b5 XORI
              508d 0080  ld   $80
              508e 00e6  ld   $e6         ;05b7 SUBI
              508f 0080  ld   $80
              5090 002b  ld   $2b         ;05b9 STW
              5091 0087  ld   $87         ;05b9 'DX0'
              5092 0011  ld   $11         ;05bb LDWI
              5093 0011  ld   $11
              5094 0001  ld   $01
              5095 002b  ld   $2b         ;05be STW
              5096 005e  ld   $5e         ;05be 's'
              5097 001a  ld   $1a         ;05c0 LD
              5098 0009  ld   $09
              5099 0082  ld   $82         ;05c2 ANDI
              509a 0001  ld   $01
              509b 0035  ld   $35         ;05c4 BCC
              509c 003f  ld   $3f         ;05c5 EQ
              509d 00be  ld   $be
              509e 001a  ld   $1a         ;05c7 LD
              509f 0047  ld   $47         ;05c7 'HorizonX'+1
              50a0 00f0  ld   $f0         ;05c9 POKE
              50a1 005e  ld   $5e         ;05c9 's'
              50a2 0011  ld   $11         ;05cb LDWI
              50a3 0067  ld   $67
              50a4 0040  ld   $40
              50a5 002b  ld   $2b         ;05ce STW
              50a6 0022  ld   $22
              50a7 00b4  ld   $b4         ;05d0 SYS
              50a8 00fb  ld   $fb
              50a9 0021  ld   $21         ;05d2 LDW
              50aa 0024  ld   $24
              50ab 002b  ld   $2b         ;05d4 STW
              50ac 005e  ld   $5e         ;05d4 's'
              50ad 0021  ld   $21         ;05d6 LDW
              50ae 0028  ld   $28
              50af 002b  ld   $2b         ;05d8 STW
              50b0 0060  ld   $60         ;05d8 'X'
              50b1 0021  ld   $21         ;05da LDW
              50b2 0052  ld   $52         ;05da 'tmp'
              50b3 00b8  ld   $b8         ;05dc SUBW
              50b4 0060  ld   $60         ;05dc 'X'
              50b5 00f0  ld   $f0         ;05de POKE
              50b6 005e  ld   $5e         ;05de 's'
              50b7 00ff  ld   $ff         ;05e0 RET
              50b8 002b  ld   $2b         ;05e1 STW
              50b9 0093  ld   $93         ;05e1 'DrawRoad'
              50ba 0093  ld   $93         ;05e3 INC
              50bb 001b  ld   $1b         ;05e3 '_vLR'+1
              50bc 00ff  ld   $ff         ;05e5 RET
              50bd 0006  ld   $06         ;| RAM segment address (high byte first)
              50be 0000  ld   $00         ;|
              50bf 00df  ld   $df         ;| Length (1..256)
              50c0 00cd  ld   $cd         ;0600 DEF
              50c1 00a7  ld   $a7
              50c2 0075  ld   $75         ;0602 PUSH
              50c3 0059  ld   $59         ;0603 LDI
              50c4 0000  ld   $00
              50c5 002b  ld   $2b         ;0605 STW
              50c6 0062  ld   $62         ;0605 'Collision'
              50c7 002b  ld   $2b         ;0607 STW
              50c8 0076  ld   $76         ;0607 'Prev3'
              50c9 002b  ld   $2b         ;0609 STW
              50ca 007a  ld   $7a         ;0609 'Prev2'
              50cb 002b  ld   $2b         ;060b STW
              50cc 007c  ld   $7c         ;060b 'Prev1'
              50cd 00cf  ld   $cf         ;060d CALL
              50ce 0095  ld   $95         ;060d 'AdvanceCar'
              50cf 0021  ld   $21         ;060f LDW
              50d0 008d  ld   $8d         ;060f 'Distance'
              50d1 0035  ld   $35         ;0611 BCC
              50d2 0053  ld   $53         ;0612 GE
              50d3 002e  ld   $2e
              50d4 0021  ld   $21         ;0614 LDW
              50d5 003e  ld   $3e         ;0614 'Time'
              50d6 00b8  ld   $b8         ;0616 SUBW
              50d7 0097  ld   $97         ;0616 'BestTime'
              50d8 0035  ld   $35         ;0618 BCC
              50d9 0053  ld   $53         ;0619 GE
              50da 001d  ld   $1d
              50db 0021  ld   $21         ;061b LDW
              50dc 003e  ld   $3e         ;061b 'Time'
              50dd 002b  ld   $2b         ;061d STW
              50de 0097  ld   $97         ;061d 'BestTime'
              50df 0059  ld   $59         ;061f LDI
              50e0 000f  ld   $0f
              50e1 00cf  ld   $cf         ;0621 CALL
              50e2 0099  ld   $99         ;0621 'PrintBestTime'
              50e3 0059  ld   $59         ;0623 LDI
              50e4 0000  ld   $00
              50e5 002b  ld   $2b         ;0625 STW
              50e6 003e  ld   $3e         ;0625 'Time'
              50e7 002b  ld   $2b         ;0627 STW
              50e8 009b  ld   $9b         ;0627 'Random'
              50e9 0011  ld   $11         ;0629 LDWI
              50ea 0000  ld   $00
              50eb 0074  ld   $74
              50ec 002b  ld   $2b         ;062c STW
              50ed 008d  ld   $8d         ;062c 'Distance'
              50ee 002b  ld   $2b         ;062e STW
              50ef 008b  ld   $8b         ;062e 'NextTurn'
              50f0 00b8  ld   $b8         ;0630 SUBW
              50f1 008b  ld   $8b         ;0630 'NextTurn'
              50f2 0035  ld   $35         ;0632 BCC
              50f3 0056  ld   $56         ;0633 LE
              50f4 0073  ld   $73
              50f5 0021  ld   $21         ;0635 LDW
              50f6 009b  ld   $9b         ;0635 'Random'
              50f7 0099  ld   $99         ;0637 ADDW
              50f8 008b  ld   $8b         ;0637 'NextTurn'
              50f9 008c  ld   $8c         ;0639 XORI
              50fa 006d  ld   $6d
              50fb fe00  bra  ac          ;+-----------------------------------+
              50fc fcfd  bra  $50fd       ;|                                   |
              50fd 1418  ld   $18,y       ;| Trampoline for page $5000 lookups |
              50fe e006  jmp  y,$06       ;|                                   |
              50ff c218  st   [$18]       ;+-----------------------------------+
              5100 002b  ld   $2b         ;063b STW
              5101 009b  ld   $9b         ;063b 'Random'
              5102 0082  ld   $82         ;063d ANDI
              5103 001f  ld   $1f
              5104 00e3  ld   $e3         ;063f ADDI
              5105 0028  ld   $28
              5106 0099  ld   $99         ;0641 ADDW
              5107 008b  ld   $8b         ;0641 'NextTurn'
              5108 002b  ld   $2b         ;0643 STW
              5109 008b  ld   $8b         ;0643 'NextTurn'
              510a 001a  ld   $1a         ;0645 LD
              510b 009c  ld   $9c         ;0645 'Random'+1
              510c 0082  ld   $82         ;0647 ANDI
              510d 0003  ld   $03
              510e 00e3  ld   $e3         ;0649 ADDI
              510f 0001  ld   $01
              5110 002b  ld   $2b         ;064b STW
              5111 0030  ld   $30         ;064b 'i'
              5112 0099  ld   $99         ;064d ADDW
              5113 0030  ld   $30         ;064d 'i'
              5114 0099  ld   $99         ;064f ADDW
              5115 0030  ld   $30         ;064f 'i'
              5116 00e9  ld   $e9         ;0651 LSLW
              5117 002b  ld   $2b         ;0652 STW
              5118 0030  ld   $30         ;0652 'i'
              5119 0021  ld   $21         ;0654 LDW
              511a 0091  ld   $91         ;0654 'NextDDX'
              511b 002b  ld   $2b         ;0656 STW
              511c 008f  ld   $8f         ;0656 'DDX'
              511d 0035  ld   $35         ;0658 BCC
              511e 0053  ld   $53         ;0659 GE
              511f 005d  ld   $5d
              5120 0099  ld   $99         ;065b ADDW
              5121 0030  ld   $30         ;065b 'i'
              5122 0090  ld   $90         ;065d BRA
              5123 0071  ld   $71
              5124 0035  ld   $35         ;065f BCC
              5125 0056  ld   $56         ;0660 LE
              5126 0064  ld   $64
              5127 00b8  ld   $b8         ;0662 SUBW
              5128 0030  ld   $30         ;0662 'i'
              5129 0090  ld   $90         ;0664 BRA
              512a 0071  ld   $71
              512b 0021  ld   $21         ;0666 LDW
              512c 009b  ld   $9b         ;0666 'Random'
              512d 0035  ld   $35         ;0668 BCC
              512e 0050  ld   $50         ;0669 LT
              512f 006d  ld   $6d
              5130 0021  ld   $21         ;066b LDW
              5131 0030  ld   $30         ;066b 'i'
              5132 0090  ld   $90         ;066d BRA
              5133 0071  ld   $71
              5134 0059  ld   $59         ;066f LDI
              5135 0000  ld   $00
              5136 00b8  ld   $b8         ;0671 SUBW
              5137 0030  ld   $30         ;0671 'i'
              5138 002b  ld   $2b         ;0673 STW
              5139 0091  ld   $91         ;0673 'NextDDX'
              513a 00cf  ld   $cf         ;0675 CALL
              513b 0093  ld   $93         ;0675 'DrawRoad'
              513c 0021  ld   $21         ;0677 LDW
              513d 008f  ld   $8f         ;0677 'DDX'
              513e 00e9  ld   $e9         ;0679 LSLW
              513f 00e9  ld   $e9         ;067a LSLW
              5140 00e9  ld   $e9         ;067b LSLW
              5141 002b  ld   $2b         ;067c STW
              5142 0048  ld   $48         ;067c 'HorizonDX'
              5143 00e9  ld   $e9         ;067e LSLW
              5144 002b  ld   $2b         ;067f STW
              5145 0044  ld   $44         ;067f 'DriftX'
              5146 00cf  ld   $cf         ;0681 CALL
              5147 004c  ld   $4c         ;0681 'ControlRaceCar'
              5148 00cf  ld   $cf         ;0683 CALL
              5149 0066  ld   $66         ;0683 'PlayEngineSound'
              514a 00cf  ld   $cf         ;0685 CALL
              514b 009d  ld   $9d         ;0685 'DrawRaceCar'
              514c 00cf  ld   $cf         ;0687 CALL
              514d 009f  ld   $9f         ;0687 'DrawGrass'
              514e 0011  ld   $11         ;0689 LDWI
              514f 00b5  ld   $b5
              5150 00b9  ld   $b9
              5151 0099  ld   $99         ;068c ADDW
              5152 003e  ld   $3e         ;068c 'Time'
              5153 0035  ld   $35         ;068e BCC
              5154 0056  ld   $56         ;068f LE
              5155 0091  ld   $91
              5156 002b  ld   $2b         ;0691 STW
              5157 0062  ld   $62         ;0691 'Collision'
              5158 0021  ld   $21         ;0693 LDW
              5159 003e  ld   $3e         ;0693 'Time'
              515a 002b  ld   $2b         ;0695 STW
              515b 0081  ld   $81         ;0695 'Value'
              515c 0011  ld   $11         ;0697 LDWI
              515d 0001  ld   $01
              515e 0008  ld   $08
              515f 002b  ld   $2b         ;069a STW
              5160 0038  ld   $38         ;069a 'Pos'
              5161 0059  ld   $59         ;069c LDI
              5162 003f  ld   $3f
              5163 002b  ld   $2b         ;069e STW
              5164 0036  ld   $36         ;069e 'Color'
              5165 00cf  ld   $cf         ;06a0 CALL
              5166 007e  ld   $7e         ;06a0 'PrintTime'
              5167 0021  ld   $21         ;06a2 LDW
              5168 0062  ld   $62         ;06a2 'Collision'
              5169 0035  ld   $35         ;06a4 BCC
              516a 003f  ld   $3f         ;06a5 EQ
              516b 000b  ld   $0b
              516c 0063  ld   $63         ;06a7 POP
              516d 00ff  ld   $ff         ;06a8 RET
              516e 002b  ld   $2b         ;06a9 STW
              516f 00a1  ld   $a1         ;06a9 'PlayGame'
              5170 00cd  ld   $cd         ;06ab DEF
              5171 00b7  ld   $b7
              5172 0002  ld   $02         ;06ad 2
              5173 0040  ld   $40         ;06ae 64
              5174 0040  ld   $40         ;06af 64
              5175 0040  ld   $40         ;06b0 64
              5176 0028  ld   $28         ;06b1 40
              5177 003c  ld   $3c         ;06b2 60
              5178 003c  ld   $3c         ;06b3 60
              5179 0028  ld   $28         ;06b4 40
              517a 0040  ld   $40         ;06b5 64
              517b 0040  ld   $40         ;06b6 64
              517c 0040  ld   $40         ;06b7 64
              517d 0000  ld   $00         ;06b8 0
              517e 002b  ld   $2b         ;06b9 STW
              517f 00a3  ld   $a3         ;06b9 'Car0'
              5180 00cd  ld   $cd         ;06bb DEF
              5181 00c5  ld   $c5
              5182 0003  ld   $03         ;06bd 3
              5183 0028  ld   $28         ;06be 40
              5184 0014  ld   $14         ;06bf 20
              5185 0014  ld   $14         ;06c0 20
              5186 003f  ld   $3f         ;06c1 63
              5187 003f  ld   $3f         ;06c2 63
              5188 0014  ld   $14         ;06c3 20
              5189 0014  ld   $14         ;06c4 20
              518a 0028  ld   $28         ;06c5 40
              518b 0000  ld   $00         ;06c6 0
              518c 002b  ld   $2b         ;06c7 STW
              518d 00a5  ld   $a5         ;06c7 'Car1'
              518e 00cd  ld   $cd         ;06c9 DEF
              518f 00d5  ld   $d5
              5190 0002  ld   $02         ;06cb 2
              5191 0028  ld   $28         ;06cc 40
              5192 0014  ld   $14         ;06cd 20
              5193 0014  ld   $14         ;06ce 20
              5194 0014  ld   $14         ;06cf 20
              5195 0028  ld   $28         ;06d0 40
              5196 0028  ld   $28         ;06d1 40
              5197 0014  ld   $14         ;06d2 20
              5198 0014  ld   $14         ;06d3 20
              5199 0014  ld   $14         ;06d4 20
              519a 0028  ld   $28         ;06d5 40
              519b 0000  ld   $00         ;06d6 0
              519c 002b  ld   $2b         ;06d7 STW
              519d 00a7  ld   $a7         ;06d7 'Car2'
              519e 0011  ld   $11         ;06d9 LDWI
              519f 00a0  ld   $a0
              51a0 0008  ld   $08
              51a1 002b  ld   $2b         ;06dc STW
              51a2 001a  ld   $1a
              51a3 00ff  ld   $ff         ;06de RET
              51a4 0008  ld   $08         ;| RAM segment address (high byte first)
              51a5 00a0  ld   $a0         ;|
              51a6 0052  ld   $52         ;| Length (1..256)
              51a7 00cd  ld   $cd         ;08a0 DEF
              51a8 00b0  ld   $b0
              51a9 0000  ld   $00         ;08a2 0
              51aa 0040  ld   $40         ;08a3 64
              51ab 0040  ld   $40         ;08a4 64
              51ac 0040  ld   $40         ;08a5 64
              51ad 0040  ld   $40         ;08a6 64
              51ae 0028  ld   $28         ;08a7 40
              51af 0014  ld   $14         ;08a8 20
              51b0 0014  ld   $14         ;08a9 20
              51b1 0014  ld   $14         ;08aa 20
              51b2 0014  ld   $14         ;08ab 20
              51b3 0028  ld   $28         ;08ac 40
              51b4 0040  ld   $40         ;08ad 64
              51b5 0040  ld   $40         ;08ae 64
              51b6 0040  ld   $40         ;08af 64
              51b7 0040  ld   $40         ;08b0 64
              51b8 0000  ld   $00         ;08b1 0
              51b9 002b  ld   $2b         ;08b2 STW
              51ba 00a9  ld   $a9         ;08b2 'Car3'
              51bb 00cd  ld   $cd         ;08b4 DEF
              51bc 00c4  ld   $c4
              51bd 0000  ld   $00         ;08b6 0
              51be 0040  ld   $40         ;08b7 64
              51bf 0040  ld   $40         ;08b8 64
              51c0 0040  ld   $40         ;08b9 64
              51c1 0040  ld   $40         ;08ba 64
              51c2 0015  ld   $15         ;08bb 21
              51c3 0015  ld   $15         ;08bc 21
              51c4 0015  ld   $15         ;08bd 21
              51c5 0015  ld   $15         ;08be 21
              51c6 0015  ld   $15         ;08bf 21
              51c7 0015  ld   $15         ;08c0 21
              51c8 0040  ld   $40         ;08c1 64
              51c9 0040  ld   $40         ;08c2 64
              51ca 0040  ld   $40         ;08c3 64
              51cb 0040  ld   $40         ;08c4 64
              51cc 0000  ld   $00         ;08c5 0
              51cd 002b  ld   $2b         ;08c6 STW
              51ce 00ab  ld   $ab         ;08c6 'Car4'
              51cf 00cd  ld   $cd         ;08c8 DEF
              51d0 00eb  ld   $eb
              51d1 0011  ld   $11         ;08ca LDWI
              51d2 002e  ld   $2e
              51d3 0001  ld   $01
              51d4 002b  ld   $2b         ;08cd STW
              51d5 0024  ld   $24
              51d6 0059  ld   $59         ;08cf LDI
              51d7 0020  ld   $20
              51d8 005e  ld   $5e         ;08d1 ST
              51d9 0026  ld   $26
              51da 0011  ld   $11         ;08d3 LDWI
              51db 0000  ld   $00
              51dc 000a  ld   $0a
              51dd 002b  ld   $2b         ;08d6 STW
              51de 005a  ld   $5a         ;08d6 'q'
              51df 0011  ld   $11         ;08d8 LDWI
              51e0 0080  ld   $80
              51e1 0040  ld   $40
              51e2 002b  ld   $2b         ;08db STW
              51e3 0022  ld   $22
              51e4 0021  ld   $21         ;08dd LDW
              51e5 005a  ld   $5a         ;08dd 'q'
              51e6 007f  ld   $7f         ;08df LUP
              51e7 0008  ld   $08
              51e8 0099  ld   $99         ;08e1 ADDW
              51e9 008d  ld   $8d         ;08e1 'Distance'
              51ea 005e  ld   $5e         ;08e3 ST
              51eb 0027  ld   $27
              51ec 00b4  ld   $b4         ;08e5 SYS
              51ed 00fb  ld   $fb
              51ee 0093  ld   $93         ;08e7 INC
              51ef 005a  ld   $5a         ;08e7 'q'
              51f0 0035  ld   $35         ;08e9 BCC
              51f1 0072  ld   $72         ;08ea NE
              51f2 00db  ld   $db
              51f3 00ff  ld   $ff         ;08ec RET
              51f4 002b  ld   $2b         ;08ed STW
              51f5 009f  ld   $9f         ;08ed 'DrawGrass'
              51f6 0093  ld   $93         ;08ef INC
              51f7 001b  ld   $1b         ;08ef '_vLR'+1
              51f8 00ff  ld   $ff         ;08f1 RET
              51f9 0009  ld   $09         ;| RAM segment address (high byte first)
              51fa 00a0  ld   $a0         ;|
              51fb fe00  bra  ac          ;+-----------------------------------+
              51fc fcfd  bra  $51fd       ;|                                   |
              51fd 1418  ld   $18,y       ;| Trampoline for page $5100 lookups |
              51fe e006  jmp  y,$06       ;|                                   |
              51ff c218  st   [$18]       ;+-----------------------------------+
              5200 0038  ld   $38         ;| Length (1..256)
              5201 00cd  ld   $cd         ;09a0 DEF
              5202 00b8  ld   $b8
              5203 0011  ld   $11         ;09a2 LDWI
              5204 00f7  ld   $f7
              5205 000b  ld   $0b
              5206 002b  ld   $2b         ;09a5 STW
              5207 00ad  ld   $ad         ;09a5 'Indicator'
              5208 0011  ld   $11         ;09a7 LDWI
              5209 006b  ld   $6b
              520a 000c  ld   $0c
              520b 002b  ld   $2b         ;09aa STW
              520c 00af  ld   $af         ;09aa 'Tracking'
              520d 0059  ld   $59         ;09ac LDI
              520e 0000  ld   $00
              520f 00f0  ld   $f0         ;09ae POKE
              5210 00af  ld   $af         ;09ae 'Tracking'
              5211 0093  ld   $93         ;09b0 INC
              5212 00af  ld   $af         ;09b0 'Tracking'
              5213 001a  ld   $1a         ;09b2 LD
              5214 00af  ld   $af         ;09b2 'Tracking'
              5215 008c  ld   $8c         ;09b4 XORI
              5216 0076  ld   $76
              5217 0035  ld   $35         ;09b6 BCC
              5218 0072  ld   $72         ;09b7 NE
              5219 00aa  ld   $aa
              521a 00ff  ld   $ff         ;09b9 RET
              521b 002b  ld   $2b         ;09ba STW
              521c 00b1  ld   $b1         ;09ba 'SetupIndicator'
              521d 00cd  ld   $cd         ;09bc DEF
              521e 00d1  ld   $d1
              521f 0059  ld   $59         ;09be LDI
              5220 0000  ld   $00
              5221 00f0  ld   $f0         ;09c0 POKE
              5222 00af  ld   $af         ;09c0 'Tracking'
              5223 001a  ld   $1a         ;09c2 LD
              5224 008e  ld   $8e         ;09c2 'Distance'+1
              5225 0099  ld   $99         ;09c4 ADDW
              5226 00ad  ld   $ad         ;09c4 'Indicator'
              5227 002b  ld   $2b         ;09c6 STW
              5228 00af  ld   $af         ;09c6 'Tracking'
              5229 0059  ld   $59         ;09c8 LDI
              522a 003c  ld   $3c
              522b 00f0  ld   $f0         ;09ca POKE
              522c 00af  ld   $af         ;09ca 'Tracking'
              522d 001a  ld   $1a         ;09cc LD
              522e 0041  ld   $41         ;09cc 'Speed'+1
              522f 0099  ld   $99         ;09ce ADDW
              5230 008d  ld   $8d         ;09ce 'Distance'
              5231 002b  ld   $2b         ;09d0 STW
              5232 008d  ld   $8d         ;09d0 'Distance'
              5233 00ff  ld   $ff         ;09d2 RET
              5234 002b  ld   $2b         ;09d3 STW
              5235 0095  ld   $95         ;09d3 'AdvanceCar'
              5236 0093  ld   $93         ;09d5 INC
              5237 001b  ld   $1b         ;09d5 '_vLR'+1
              5238 00ff  ld   $ff         ;09d7 RET
              5239 000a  ld   $0a         ;| RAM segment address (high byte first)
              523a 00a0  ld   $a0         ;|
              523b 0041  ld   $41         ;| Length (1..256)
              523c 00cd  ld   $cd         ;0aa0 DEF
              523d 00da  ld   $da
              523e 0075  ld   $75         ;0aa2 PUSH
              523f 0011  ld   $11         ;0aa3 LDWI
              5240 00d9  ld   $d9
              5241 0001  ld   $01
              5242 00ad  ld   $ad         ;0aa6 PEEK
              5243 008c  ld   $8c         ;0aa7 XORI
              5244 00ff  ld   $ff
              5245 002b  ld   $2b         ;0aa9 STW
              5246 0060  ld   $60         ;0aa9 'X'
              5247 001a  ld   $1a         ;0aab LD
              5248 0043  ld   $43         ;0aab 'CarX'+1
              5249 0099  ld   $99         ;0aad ADDW
              524a 0060  ld   $60         ;0aad 'X'
              524b 002b  ld   $2b         ;0aaf STW
              524c 0060  ld   $60         ;0aaf 'X'
              524d 0011  ld   $11         ;0ab1 LDWI
              524e 00d8  ld   $d8
              524f 0001  ld   $01
              5250 002b  ld   $2b         ;0ab4 STW
              5251 0056  ld   $56         ;0ab4 'Video'
              5252 0021  ld   $21         ;0ab6 LDW
              5253 00a3  ld   $a3         ;0ab6 'Car0'
              5254 002b  ld   $2b         ;0ab8 STW
              5255 005c  ld   $5c         ;0ab8 'Sprite'
              5256 00cf  ld   $cf         ;0aba CALL
              5257 0064  ld   $64         ;0aba 'DrawPixels'
              5258 0021  ld   $21         ;0abc LDW
              5259 00a5  ld   $a5         ;0abc 'Car1'
              525a 002b  ld   $2b         ;0abe STW
              525b 005c  ld   $5c         ;0abe 'Sprite'
              525c 00cf  ld   $cf         ;0ac0 CALL
              525d 0064  ld   $64         ;0ac0 'DrawPixels'
              525e 0021  ld   $21         ;0ac2 LDW
              525f 0060  ld   $60         ;0ac2 'X'
              5260 00b8  ld   $b8         ;0ac4 SUBW
              5261 004a  ld   $4a         ;0ac4 'Steer'
              5262 002b  ld   $2b         ;0ac6 STW
              5263 0060  ld   $60         ;0ac6 'X'
              5264 0021  ld   $21         ;0ac8 LDW
              5265 00a7  ld   $a7         ;0ac8 'Car2'
              5266 002b  ld   $2b         ;0aca STW
              5267 005c  ld   $5c         ;0aca 'Sprite'
              5268 00cf  ld   $cf         ;0acc CALL
              5269 0064  ld   $64         ;0acc 'DrawPixels'
              526a 0021  ld   $21         ;0ace LDW
              526b 00a9  ld   $a9         ;0ace 'Car3'
              526c 002b  ld   $2b         ;0ad0 STW
              526d 005c  ld   $5c         ;0ad0 'Sprite'
              526e 00cf  ld   $cf         ;0ad2 CALL
              526f 0064  ld   $64         ;0ad2 'DrawPixels'
              5270 0021  ld   $21         ;0ad4 LDW
              5271 00ab  ld   $ab         ;0ad4 'Car4'
              5272 002b  ld   $2b         ;0ad6 STW
              5273 005c  ld   $5c         ;0ad6 'Sprite'
              5274 00cf  ld   $cf         ;0ad8 CALL
              5275 0064  ld   $64         ;0ad8 'DrawPixels'
              5276 0063  ld   $63         ;0ada POP
              5277 00ff  ld   $ff         ;0adb RET
              5278 002b  ld   $2b         ;0adc STW
              5279 009d  ld   $9d         ;0adc 'DrawRaceCar'
              527a 0093  ld   $93         ;0ade INC
              527b 001b  ld   $1b         ;0ade '_vLR'+1
              527c 00ff  ld   $ff         ;0ae0 RET
              527d 000b  ld   $0b         ;| RAM segment address (high byte first)
              527e 00a0  ld   $a0         ;|
              527f 004c  ld   $4c         ;| Length (1..256)
              5280 00cd  ld   $cd         ;0ba0 DEF
              5281 00e5  ld   $e5
              5282 0075  ld   $75         ;0ba2 PUSH
              5283 0059  ld   $59         ;0ba3 LDI
              5284 0030  ld   $30
              5285 002b  ld   $2b         ;0ba5 STW
              5286 0034  ld   $34         ;0ba5 'BgColor'
              5287 0021  ld   $21         ;0ba7 LDW
              5288 0034  ld   $34         ;0ba7 'BgColor'
              5289 005e  ld   $5e         ;0ba9 ST
              528a 0024  ld   $24
              528b 005e  ld   $5e         ;0bab ST
              528c 0025  ld   $25
              528d 0011  ld   $11         ;0bad LDWI
              528e 0000  ld   $00
              528f 0008  ld   $08
              5290 002b  ld   $2b         ;0bb0 STW
              5291 0028  ld   $28
              5292 0011  ld   $11         ;0bb2 LDWI
              5293 00e1  ld   $e1
              5294 0004  ld   $04
              5295 002b  ld   $2b         ;0bb5 STW
              5296 0022  ld   $22
              5297 00b4  ld   $b4         ;0bb7 SYS
              5298 00cc  ld   $cc
              5299 0093  ld   $93         ;0bb9 INC
              529a 0028  ld   $28
              529b 001a  ld   $1a         ;0bbb LD
              529c 0028  ld   $28
              529d 008c  ld   $8c         ;0bbd XORI
              529e 00a0  ld   $a0
              529f 0035  ld   $35         ;0bbf BCC
              52a0 0072  ld   $72         ;0bc0 NE
              52a1 00b5  ld   $b5
              52a2 0059  ld   $59         ;0bc2 LDI
              52a3 003f  ld   $3f
              52a4 002b  ld   $2b         ;0bc4 STW
              52a5 0036  ld   $36         ;0bc4 'Color'
              52a6 0011  ld   $11         ;0bc6 LDWI
              52a7 0007  ld   $07
              52a8 0008  ld   $08
              52a9 002b  ld   $2b         ;0bc9 STW
              52aa 0038  ld   $38         ;0bc9 'Pos'
              52ab 0059  ld   $59         ;0bcb LDI
              52ac 003a  ld   $3a
              52ad 00cf  ld   $cf         ;0bcd CALL
              52ae 003a  ld   $3a         ;0bcd 'QPrintChar'
              52af 00e3  ld   $e3         ;0bcf ADDI
              52b0 0012  ld   $12
              52b1 002b  ld   $2b         ;0bd1 STW
              52b2 0038  ld   $38         ;0bd1 'Pos'
              52b3 0059  ld   $59         ;0bd3 LDI
              52b4 002e  ld   $2e
              52b5 00cf  ld   $cf         ;0bd5 CALL
              52b6 003a  ld   $3a         ;0bd5 'QPrintChar'
              52b7 00e3  ld   $e3         ;0bd7 ADDI
              52b8 001f  ld   $1f
              52b9 002b  ld   $2b         ;0bd9 STW
              52ba 0038  ld   $38         ;0bd9 'Pos'
              52bb 0021  ld   $21         ;0bdb LDW
              52bc 004e  ld   $4e         ;0bdb 'GigatronText'
              52bd 00cf  ld   $cf         ;0bdd CALL
              52be 0085  ld   $85         ;0bdd 'PrintText'
              52bf 0059  ld   $59         ;0bdf LDI
              52c0 003c  ld   $3c
              52c1 002b  ld   $2b         ;0be1 STW
              52c2 0050  ld   $50         ;0be1 'Delay'
              52c3 00cf  ld   $cf         ;0be3 CALL
              52c4 0054  ld   $54         ;0be3 'Wait'
              52c5 0063  ld   $63         ;0be5 POP
              52c6 00ff  ld   $ff         ;0be6 RET
              52c7 002b  ld   $2b         ;0be7 STW
              52c8 00b3  ld   $b3         ;0be7 'Intro'
              52c9 0093  ld   $93         ;0be9 INC
              52ca 001b  ld   $1b         ;0be9 '_vLR'+1
              52cb 00ff  ld   $ff         ;0beb RET
              52cc 000c  ld   $0c         ;| RAM segment address (high byte first)
              52cd 00a0  ld   $a0         ;|
              52ce 0059  ld   $59         ;| Length (1..256)
              52cf 00cd  ld   $cd         ;0ca0 DEF
              52d0 00f2  ld   $f2
              52d1 002b  ld   $2b         ;0ca2 STW
              52d2 0036  ld   $36         ;0ca2 'Color'
              52d3 0021  ld   $21         ;0ca4 LDW
              52d4 0097  ld   $97         ;0ca4 'BestTime'
              52d5 002b  ld   $2b         ;0ca6 STW
              52d6 0081  ld   $81         ;0ca6 'Value'
              52d7 00e3  ld   $e3         ;0ca8 ADDI
              52d8 0001  ld   $01
              52d9 0035  ld   $35         ;0caa BCC
              52da 0053  ld   $53         ;0cab GE
              52db 00ac  ld   $ac
              52dc 00ff  ld   $ff         ;0cad RET
              52dd 0075  ld   $75         ;0cae PUSH
              52de 0011  ld   $11         ;0caf LDWI
              52df 007c  ld   $7c
              52e0 0008  ld   $08
              52e1 002b  ld   $2b         ;0cb2 STW
              52e2 0038  ld   $38         ;0cb2 'Pos'
              52e3 0011  ld   $11         ;0cb4 LDWI
              52e4 000f  ld   $0f
              52e5 000e  ld   $0e
              52e6 002b  ld   $2b         ;0cb7 STW
              52e7 0072  ld   $72         ;0cb7 'Radix'
              52e8 00cf  ld   $cf         ;0cb9 CALL
              52e9 0074  ld   $74         ;0cb9 'ExtractDigit'
              52ea 00cf  ld   $cf         ;0cbb CALL
              52eb 003a  ld   $3a         ;0cbb 'QPrintChar'
              52ec 00e3  ld   $e3         ;0cbd ADDI
              52ed 0006  ld   $06
              52ee 002b  ld   $2b         ;0cbf STW
              52ef 0038  ld   $38         ;0cbf 'Pos'
              52f0 0059  ld   $59         ;0cc1 LDI
              52f1 003a  ld   $3a
              52f2 00cf  ld   $cf         ;0cc3 CALL
              52f3 003a  ld   $3a         ;0cc3 'QPrintChar'
              52f4 00e3  ld   $e3         ;0cc5 ADDI
              52f5 0006  ld   $06
              52f6 002b  ld   $2b         ;0cc7 STW
              52f7 0038  ld   $38         ;0cc7 'Pos'
              52f8 0011  ld   $11         ;0cc9 LDWI
              52f9 0058  ld   $58
              52fa 0002  ld   $02
              52fb fe00  bra  ac          ;+-----------------------------------+
              52fc fcfd  bra  $52fd       ;|                                   |
              52fd 1418  ld   $18,y       ;| Trampoline for page $5200 lookups |
              52fe e006  jmp  y,$06       ;|                                   |
              52ff c218  st   [$18]       ;+-----------------------------------+
              5300 002b  ld   $2b         ;0ccc STW
              5301 0072  ld   $72         ;0ccc 'Radix'
              5302 00cf  ld   $cf         ;0cce CALL
              5303 0074  ld   $74         ;0cce 'ExtractDigit'
              5304 00cf  ld   $cf         ;0cd0 CALL
              5305 003a  ld   $3a         ;0cd0 'QPrintChar'
              5306 00e3  ld   $e3         ;0cd2 ADDI
              5307 0006  ld   $06
              5308 002b  ld   $2b         ;0cd4 STW
              5309 0038  ld   $38         ;0cd4 'Pos'
              530a 0059  ld   $59         ;0cd6 LDI
              530b 003c  ld   $3c
              530c 002b  ld   $2b         ;0cd8 STW
              530d 0072  ld   $72         ;0cd8 'Radix'
              530e 00cf  ld   $cf         ;0cda CALL
              530f 0074  ld   $74         ;0cda 'ExtractDigit'
              5310 00cf  ld   $cf         ;0cdc CALL
              5311 003a  ld   $3a         ;0cdc 'QPrintChar'
              5312 00e3  ld   $e3         ;0cde ADDI
              5313 0006  ld   $06
              5314 002b  ld   $2b         ;0ce0 STW
              5315 0038  ld   $38         ;0ce0 'Pos'
              5316 0059  ld   $59         ;0ce2 LDI
              5317 002e  ld   $2e
              5318 00cf  ld   $cf         ;0ce4 CALL
              5319 003a  ld   $3a         ;0ce4 'QPrintChar'
              531a 00e3  ld   $e3         ;0ce6 ADDI
              531b 0006  ld   $06
              531c 002b  ld   $2b         ;0ce8 STW
              531d 0038  ld   $38         ;0ce8 'Pos'
              531e 0059  ld   $59         ;0cea LDI
              531f 0006  ld   $06
              5320 002b  ld   $2b         ;0cec STW
              5321 0072  ld   $72         ;0cec 'Radix'
              5322 00cf  ld   $cf         ;0cee CALL
              5323 0074  ld   $74         ;0cee 'ExtractDigit'
              5324 00cf  ld   $cf         ;0cf0 CALL
              5325 003a  ld   $3a         ;0cf0 'QPrintChar'
              5326 0063  ld   $63         ;0cf2 POP
              5327 00ff  ld   $ff         ;0cf3 RET
              5328 002b  ld   $2b         ;0cf4 STW
              5329 0099  ld   $99         ;0cf4 'PrintBestTime'
              532a 0093  ld   $93         ;0cf6 INC
              532b 001b  ld   $1b         ;0cf6 '_vLR'+1
              532c 00ff  ld   $ff         ;0cf8 RET
              532d 000d  ld   $0d         ;| RAM segment address (high byte first)
              532e 00a0  ld   $a0         ;|
              532f 0056  ld   $56         ;| Length (1..256)
              5330 00cd  ld   $cd         ;0da0 DEF
              5331 00ef  ld   $ef
              5332 0075  ld   $75         ;0da2 PUSH
              5333 0011  ld   $11         ;0da3 LDWI
              5334 0035  ld   $35
              5335 0014  ld   $14
              5336 002b  ld   $2b         ;0da6 STW
              5337 0038  ld   $38         ;0da6 'Pos'
              5338 00cd  ld   $cd         ;0da8 DEF
              5339 00b2  ld   $b2
              533a 0047  ld   $47         ;0daa 'G'
              533b 0041  ld   $41         ;0dab 'A'
              533c 004d  ld   $4d         ;0dac 'M'
              533d 0045  ld   $45         ;0dad 'E'
              533e 0020  ld   $20         ;0dae ' '
              533f 004f  ld   $4f         ;0daf 'O'
              5340 0056  ld   $56         ;0db0 'V'
              5341 0045  ld   $45         ;0db1 'E'
              5342 0052  ld   $52         ;0db2 'R'
              5343 0000  ld   $00         ;0db3 0
              5344 00cf  ld   $cf         ;0db4 CALL
              5345 0085  ld   $85         ;0db4 'PrintText'
              5346 0011  ld   $11         ;0db6 LDWI
              5347 0011  ld   $11
              5348 0001  ld   $01
              5349 002b  ld   $2b         ;0db9 STW
              534a 005e  ld   $5e         ;0db9 's'
              534b 00e3  ld   $e3         ;0dbb ADDI
              534c 0020  ld   $20
              534d 002b  ld   $2b         ;0dbd STW
              534e 00b5  ld   $b5         ;0dbd 't'
              534f 0059  ld   $59         ;0dbf LDI
              5350 0001  ld   $01
              5351 002b  ld   $2b         ;0dc1 STW
              5352 0050  ld   $50         ;0dc1 'Delay'
              5353 0021  ld   $21         ;0dc3 LDW
              5354 005e  ld   $5e         ;0dc3 's'
              5355 00ad  ld   $ad         ;0dc5 PEEK
              5356 0082  ld   $82         ;0dc6 ANDI
              5357 0080  ld   $80
              5358 0035  ld   $35         ;0dc8 BCC
              5359 0072  ld   $72         ;0dc9 NE
              535a 00cd  ld   $cd
              535b 0059  ld   $59         ;0dcb LDI
              535c 0001  ld   $01
              535d 0090  ld   $90         ;0dcd BRA
              535e 00d0  ld   $d0
              535f 0011  ld   $11         ;0dcf LDWI
              5360 00ff  ld   $ff
              5361 00ff  ld   $ff
              5362 002b  ld   $2b         ;0dd2 STW
              5363 0030  ld   $30         ;0dd2 'i'
              5364 00cf  ld   $cf         ;0dd4 CALL
              5365 0054  ld   $54         ;0dd4 'Wait'
              5366 0021  ld   $21         ;0dd6 LDW
              5367 00b5  ld   $b5         ;0dd6 't'
              5368 00ad  ld   $ad         ;0dd8 PEEK
              5369 00b8  ld   $b8         ;0dd9 SUBW
              536a 0030  ld   $30         ;0dd9 'i'
              536b 00f0  ld   $f0         ;0ddb POKE
              536c 00b5  ld   $b5         ;0ddb 't'
              536d 0021  ld   $21         ;0ddd LDW
              536e 005e  ld   $5e         ;0ddd 's'
              536f 00ad  ld   $ad         ;0ddf PEEK
              5370 0099  ld   $99         ;0de0 ADDW
              5371 0030  ld   $30         ;0de0 'i'
              5372 00f0  ld   $f0         ;0de2 POKE
              5373 005e  ld   $5e         ;0de2 's'
              5374 0082  ld   $82         ;0de4 ANDI
              5375 00ff  ld   $ff
              5376 0035  ld   $35         ;0de6 BCC
              5377 0072  ld   $72         ;0de7 NE
              5378 00d2  ld   $d2
              5379 0059  ld   $59         ;0de9 LDI
              537a 001e  ld   $1e
              537b 002b  ld   $2b         ;0deb STW
              537c 0050  ld   $50         ;0deb 'Delay'
              537d 00cf  ld   $cf         ;0ded CALL
              537e 0054  ld   $54         ;0ded 'Wait'
              537f 0063  ld   $63         ;0def POP
              5380 00ff  ld   $ff         ;0df0 RET
              5381 002b  ld   $2b         ;0df1 STW
              5382 00b7  ld   $b7         ;0df1 'GameOver'
              5383 0093  ld   $93         ;0df3 INC
              5384 001b  ld   $1b         ;0df3 '_vLR'+1
              5385 00ff  ld   $ff         ;0df5 RET
              5386 000e  ld   $0e         ;| RAM segment address (high byte first)
              5387 00a0  ld   $a0         ;|
              5388 005b  ld   $5b         ;| Length (1..256)
              5389 00cd  ld   $cd         ;0ea0 DEF
              538a 00f4  ld   $f4
              538b 0075  ld   $75         ;0ea2 PUSH
              538c 0011  ld   $11         ;0ea3 LDWI
              538d 00a6  ld   $a6
              538e 0040  ld   $40
              538f 002b  ld   $2b         ;0ea6 STW
              5390 0058  ld   $58         ;0ea6 'p'
              5391 0011  ld   $11         ;0ea8 LDWI
              5392 0000  ld   $00
              5393 0010  ld   $10
              5394 002b  ld   $2b         ;0eab STW
              5395 005a  ld   $5a         ;0eab 'q'
              5396 00cd  ld   $cd         ;0ead DEF
              5397 00bf  ld   $bf
              5398 001a  ld   $1a         ;0eaf LD
              5399 0058  ld   $58         ;0eaf 'p'
              539a 008c  ld   $8c         ;0eb1 XORI
              539b 00fa  ld   $fa
              539c 0035  ld   $35         ;0eb3 BCC
              539d 003f  ld   $3f         ;0eb4 EQ
              539e 00b8  ld   $b8
              539f 0059  ld   $59         ;0eb6 LDI
              53a0 0001  ld   $01
              53a1 0090  ld   $90         ;0eb8 BRA
              53a2 00ba  ld   $ba
              53a3 0059  ld   $59         ;0eba LDI
              53a4 0006  ld   $06
              53a5 0099  ld   $99         ;0ebc ADDW
              53a6 0058  ld   $58         ;0ebc 'p'
              53a7 002b  ld   $2b         ;0ebe STW
              53a8 0058  ld   $58         ;0ebe 'p'
              53a9 00ff  ld   $ff         ;0ec0 RET
              53aa 002b  ld   $2b         ;0ec1 STW
              53ab 0052  ld   $52         ;0ec1 'tmp'
              53ac 0021  ld   $21         ;0ec3 LDW
              53ad 0058  ld   $58         ;0ec3 'p'
              53ae 007f  ld   $7f         ;0ec5 LUP
              53af 0000  ld   $00
              53b0 005e  ld   $5e         ;0ec7 ST
              53b1 0024  ld   $24
              53b2 00cf  ld   $cf         ;0ec9 CALL
              53b3 0052  ld   $52         ;0ec9 'tmp'
              53b4 007f  ld   $7f         ;0ecb LUP
              53b5 0000  ld   $00
              53b6 005e  ld   $5e         ;0ecd ST
              53b7 0025  ld   $25
              53b8 00cf  ld   $cf         ;0ecf CALL
              53b9 0052  ld   $52         ;0ecf 'tmp'
              53ba 007f  ld   $7f         ;0ed1 LUP
              53bb 0000  ld   $00
              53bc 005e  ld   $5e         ;0ed3 ST
              53bd 0026  ld   $26
              53be 00cf  ld   $cf         ;0ed5 CALL
              53bf 0052  ld   $52         ;0ed5 'tmp'
              53c0 0011  ld   $11         ;0ed7 LDWI
              53c1 00d0  ld   $d0
              53c2 001a  ld   $1a
              53c3 002b  ld   $2b         ;0eda STW
              53c4 0022  ld   $22
              53c5 00b4  ld   $b4         ;0edc SYS
              53c6 00f3  ld   $f3
              53c7 0021  ld   $21         ;0ede LDW
              53c8 005a  ld   $5a         ;0ede 'q'
              53c9 002b  ld   $2b         ;0ee0 STW
              53ca 0028  ld   $28
              53cb 00e3  ld   $e3         ;0ee2 ADDI
              53cc 0004  ld   $04
              53cd 002b  ld   $2b         ;0ee4 STW
              53ce 005a  ld   $5a         ;0ee4 'q'
              53cf 0011  ld   $11         ;0ee6 LDWI
              53d0 00d4  ld   $d4
              53d1 0004  ld   $04
              53d2 002b  ld   $2b         ;0ee9 STW
              53d3 0022  ld   $22
              53d4 00b4  ld   $b4         ;0eeb SYS
              53d5 0000  ld   $00
              53d6 001a  ld   $1a         ;0eed LD
              53d7 005b  ld   $5b         ;0eed 'q'+1
              53d8 008c  ld   $8c         ;0eef XORI
              53d9 0020  ld   $20
              53da 0035  ld   $35         ;0ef1 BCC
              53db 0072  ld   $72         ;0ef2 NE
              53dc 00c1  ld   $c1
              53dd 0063  ld   $63         ;0ef4 POP
              53de 00ff  ld   $ff         ;0ef5 RET
              53df 002b  ld   $2b         ;0ef6 STW
              53e0 00b9  ld   $b9         ;0ef6 'SetupHorizon'
              53e1 0093  ld   $93         ;0ef8 INC
              53e2 001b  ld   $1b         ;0ef8 '_vLR'+1
              53e3 00ff  ld   $ff         ;0efa RET
              53e4 000f  ld   $0f         ;| RAM segment address (high byte first)
              53e5 00a0  ld   $a0         ;|
              53e6 0054  ld   $54         ;| Length (1..256)
              53e7 00cf  ld   $cf         ;0fa0 CALL
              53e8 00b3  ld   $b3         ;0fa0 'Intro'
              53e9 0011  ld   $11         ;0fa2 LDWI
              53ea 0000  ld   $00
              53eb 0074  ld   $74
              53ec 002b  ld   $2b         ;0fa5 STW
              53ed 008d  ld   $8d         ;0fa5 'Distance'
              53ee 002b  ld   $2b         ;0fa7 STW
              53ef 008b  ld   $8b         ;0fa7 'NextTurn'
              53f0 0011  ld   $11         ;0fa9 LDWI
              53f1 00ff  ld   $ff
              53f2 007f  ld   $7f
              53f3 002b  ld   $2b         ;0fac STW
              53f4 0097  ld   $97         ;0fac 'BestTime'
              53f5 0059  ld   $59         ;0fae LDI
              53f6 0000  ld   $00
              53f7 002b  ld   $2b         ;0fb0 STW
              53f8 003e  ld   $3e         ;0fb0 'Time'
              53f9 002b  ld   $2b         ;0fb2 STW
              53fa 0081  ld   $81         ;0fb2 'Value'
              53fb fe00  bra  ac          ;+-----------------------------------+
              53fc fcfd  bra  $53fd       ;|                                   |
              53fd 1418  ld   $18,y       ;| Trampoline for page $5300 lookups |
              53fe e006  jmp  y,$06       ;|                                   |
              53ff c218  st   [$18]       ;+-----------------------------------+
              5400 002b  ld   $2b         ;0fb4 STW
              5401 0046  ld   $46         ;0fb4 'HorizonX'
              5402 002b  ld   $2b         ;0fb6 STW
              5403 0044  ld   $44         ;0fb6 'DriftX'
              5404 002b  ld   $2b         ;0fb8 STW
              5405 0040  ld   $40         ;0fb8 'Speed'
              5406 002b  ld   $2b         ;0fba STW
              5407 009b  ld   $9b         ;0fba 'Random'
              5408 002b  ld   $2b         ;0fbc STW
              5409 0087  ld   $87         ;0fbc 'DX0'
              540a 002b  ld   $2b         ;0fbe STW
              540b 008f  ld   $8f         ;0fbe 'DDX'
              540c 002b  ld   $2b         ;0fc0 STW
              540d 0091  ld   $91         ;0fc0 'NextDDX'
              540e 00cf  ld   $cf         ;0fc2 CALL
              540f 0093  ld   $93         ;0fc2 'DrawRoad'
              5410 00cf  ld   $cf         ;0fc4 CALL
              5411 009f  ld   $9f         ;0fc4 'DrawGrass'
              5412 00cf  ld   $cf         ;0fc6 CALL
              5413 00b9  ld   $b9         ;0fc6 'SetupHorizon'
              5414 0011  ld   $11         ;0fc8 LDWI
              5415 0035  ld   $35
              5416 0014  ld   $14
              5417 002b  ld   $2b         ;0fcb STW
              5418 0038  ld   $38         ;0fcb 'Pos'
              5419 00cd  ld   $cd         ;0fcd DEF
              541a 00d7  ld   $d7
              541b 0047  ld   $47         ;0fcf 'G'
              541c 0045  ld   $45         ;0fd0 'E'
              541d 0054  ld   $54         ;0fd1 'T'
              541e 0020  ld   $20         ;0fd2 ' '
              541f 0052  ld   $52         ;0fd3 'R'
              5420 0045  ld   $45         ;0fd4 'E'
              5421 0041  ld   $41         ;0fd5 'A'
              5422 0044  ld   $44         ;0fd6 'D'
              5423 0059  ld   $59         ;0fd7 'Y'
              5424 0000  ld   $00         ;0fd8 0
              5425 00cf  ld   $cf         ;0fd9 CALL
              5426 0085  ld   $85         ;0fd9 'PrintText'
              5427 00cf  ld   $cf         ;0fdb CALL
              5428 0070  ld   $70         ;0fdb 'SetupRoad'
              5429 00cf  ld   $cf         ;0fdd CALL
              542a 00b9  ld   $b9         ;0fdd 'SetupHorizon'
              542b 00cf  ld   $cf         ;0fdf CALL
              542c 00b1  ld   $b1         ;0fdf 'SetupIndicator'
              542d 0011  ld   $11         ;0fe1 LDWI
              542e 0000  ld   $00
              542f 0079  ld   $79
              5430 002b  ld   $2b         ;0fe4 STW
              5431 0042  ld   $42         ;0fe4 'CarX'
              5432 001a  ld   $1a         ;0fe6 LD
              5433 000e  ld   $0e
              5434 002b  ld   $2b         ;0fe8 STW
              5435 003c  ld   $3c         ;0fe8 'LastFrame'
              5436 00cf  ld   $cf         ;0fea CALL
              5437 00a1  ld   $a1         ;0fea 'PlayGame'
              5438 00cf  ld   $cf         ;0fec CALL
              5439 00b7  ld   $b7         ;0fec 'GameOver'
              543a 0059  ld   $59         ;0fee LDI
              543b 003f  ld   $3f
              543c 00cf  ld   $cf         ;0ff0 CALL
              543d 0099  ld   $99         ;0ff0 'PrintBestTime'
              543e 0090  ld   $90         ;0ff2 BRA
              543f 00a0  ld   $a0
              5440 0000  ld   $00         ;End of Apps/Racer/Racer_v2.gcl, size 1873
                                          ;+-----------------------------------+
                                          ;| gbas/browser/Browser_SDCard_ROMv5a_v1.gt1 |
                                          ;+-----------------------------------+
              5441 dc52  st   $52,[y,x++] ;'R'
              5442 dc61  st   $61,[y,x++] ;'a'
              5443 dc63  st   $63,[y,x++] ;'c'
              5444 dc65  st   $65,[y,x++] ;'e'
              5445 dc72  st   $72,[y,x++] ;'r'
              5446 dc00  st   $00,[y,x++] ;'\x00'
              5447 dc00  st   $00,[y,x++] ;'\x00'
              5448 dc00  st   $00,[y,x++] ;'\x00'
              5449 00f0  ld   $f0
              544a c218  st   [$18]
              544b 004c  ld   $4c
              544c 14e0  ld   $e0,y
              544d e02e  jmp  y,$2e
              544e c219  st   [$19]
SDCard:       544f 0002  ld   $02
              5450 0000  ld   $00
              5451 00fa  ld   $fa
              5452 0059  ld   $59
              5453 0040  ld   $40
              5454 002b  ld   $2b
              5455 0082  ld   $82
              5456 0011  ld   $11
              5457 00e8  ld   $e8
              5458 0062  ld   $62
              5459 00cf  ld   $cf
              545a 0018  ld   $18
              545b 0011  ld   $11
              545c 0020  ld   $20
              545d 000f  ld   $0f
              545e 002b  ld   $2b
              545f 00a2  ld   $a2
              5460 0059  ld   $59
              5461 0001  ld   $01
              5462 002b  ld   $2b
              5463 00aa  ld   $aa
              5464 0059  ld   $59
              5465 0000  ld   $00
              5466 002b  ld   $2b
              5467 00a6  ld   $a6
              5468 0085  ld   $85
              5469 00a0  ld   $a0
              546a 0062  ld   $62
              546b 0011  ld   $11
              546c 00fe  ld   $fe
              546d 007c  ld   $7c
              546e 002b  ld   $2b
              546f 0084  ld   $84
              5470 0011  ld   $11
              5471 00a0  ld   $a0
              5472 007d  ld   $7d
              5473 0085  ld   $85
              5474 00d2  ld   $d2
              5475 0061  ld   $61
              5476 0011  ld   $11
              5477 00fe  ld   $fe
              5478 007c  ld   $7c
              5479 002b  ld   $2b
              547a 0084  ld   $84
              547b 0011  ld   $11
              547c 00a0  ld   $a0
              547d 007b  ld   $7b
              547e 0085  ld   $85
              547f 00d2  ld   $d2
              5480 0061  ld   $61
              5481 0011  ld   $11
              5482 00fe  ld   $fe
              5483 007c  ld   $7c
              5484 002b  ld   $2b
              5485 0084  ld   $84
              5486 0011  ld   $11
              5487 00a0  ld   $a0
              5488 007a  ld   $7a
              5489 0085  ld   $85
              548a 00d2  ld   $d2
              548b 0061  ld   $61
              548c 0085  ld   $85
              548d 0079  ld   $79
              548e 0002  ld   $02
              548f 0085  ld   $85
              5490 00d7  ld   $d7
              5491 000d  ld   $0d
              5492 0085  ld   $85
              5493 00df  ld   $df
              5494 000c  ld   $0c
              5495 0085  ld   $85
              5496 00c1  ld   $c1
              5497 000d  ld   $0d
              5498 0085  ld   $85
              5499 00e1  ld   $e1
              549a 0005  ld   $05
              549b 0085  ld   $85
              549c 00f5  ld   $f5
              549d 000c  ld   $0c
              549e 0085  ld   $85
              549f 003a  ld   $3a
              54a0 0003  ld   $03
              54a1 0085  ld   $85
              54a2 008c  ld   $8c
              54a3 0003  ld   $03
              54a4 0021  ld   $21
              54a5 0040  ld   $40
              54a6 0035  ld   $35
              54a7 003f  ld   $3f
              54a8 0047  ld   $47
              54a9 0085  ld   $85
              54aa 00ae  ld   $ae
              54ab 000d  ld   $0d
              54ac 0085  ld   $85
              54ad 00e0  ld   $e0
              54ae 0003  ld   $03
              54af 0059  ld   $59
              54b0 0000  ld   $00
              54b1 002b  ld   $2b
              54b2 004a  ld   $4a
              54b3 0059  ld   $59
              54b4 00ff  ld   $ff
              54b5 002b  ld   $2b
              54b6 004c  ld   $4c
              54b7 0085  ld   $85
              54b8 00b7  ld   $b7
              54b9 0061  ld   $61
              54ba 0085  ld   $85
              54bb 00c2  ld   $c2
              54bc 0009  ld   $09
              54bd 0021  ld   $21
              54be 0046  ld   $46
              54bf 0035  ld   $35
              54c0 003f  ld   $3f
              54c1 0070  ld   $70
              54c2 0090  ld   $90
              54c3 003b  ld   $3b
              54c4 0093  ld   $93
              54c5 004a  ld   $4a
              54c6 0085  ld   $85
              54c7 0065  ld   $65
              54c8 0002  ld   $02
              54c9 00b4  ld   $b4
              54ca 0080  ld   $80
              54cb 0075  ld   $75
              54cc 001a  ld   $1a
              54cd 0021  ld   $21
              54ce 0082  ld   $82
              54cf 00fc  ld   $fc
              54d0 002b  ld   $2b
              54d1 004e  ld   $4e
              54d2 0021  ld   $21
              54d3 004e  ld   $4e
              54d4 008c  ld   $8c
              54d5 0020  ld   $20
              54d6 0035  ld   $35
              54d7 0072  ld   $72
              54d8 008d  ld   $8d
              54d9 0011  ld   $11
              54da 003e  ld   $3e
              54db 00e2  ld   $e2
              54dc 002b  ld   $2b
              54dd 0030  ld   $30
              54de 0085  ld   $85
              54df 001d  ld   $1d
              54e0 0003  ld   $03
              54e1 0021  ld   $21
              54e2 004e  ld   $4e
              54e3 008c  ld   $8c
              54e4 0028  ld   $28
              54e5 0035  ld   $35
              54e6 0072  ld   $72
              54e7 009c  ld   $9c
              54e8 0011  ld   $11
              54e9 00a8  ld   $a8
              54ea 00b4  ld   $b4
              54eb 002b  ld   $2b
              54ec 0030  ld   $30
              54ed 0085  ld   $85
              54ee 001d  ld   $1d
              54ef 0003  ld   $03
              54f0 0021  ld   $21
              54f1 004e  ld   $4e
              54f2 008c  ld   $8c
              54f3 0038  ld   $38
              54f4 0035  ld   $35
              54f5 0072  ld   $72
              54f6 00ab  ld   $ab
              54f7 0011  ld   $11
              54f8 005a  ld   $5a
              54f9 00ad  ld   $ad
              54fa 002b  ld   $2b
              54fb fe00  bra  ac          ;+-----------------------------------+
              54fc fcfd  bra  $54fd       ;|                                   |
              54fd 1418  ld   $18,y       ;| Trampoline for page $5400 lookups |
              54fe e006  jmp  y,$06       ;|                                   |
              54ff c218  st   [$18]       ;+-----------------------------------+
              5500 0030  ld   $30
              5501 0085  ld   $85
              5502 001d  ld   $1d
              5503 0003  ld   $03
              5504 0021  ld   $21
              5505 004e  ld   $4e
              5506 00e6  ld   $e6
              5507 0040  ld   $40
              5508 0035  ld   $35
              5509 0053  ld   $53
              550a 00b5  ld   $b5
              550b 0085  ld   $85
              550c 001d  ld   $1d
              550d 0003  ld   $03
              550e 0021  ld   $21
              550f 0030  ld   $30
              5510 002b  ld   $2b
              5511 0082  ld   $82
              5512 0085  ld   $85
              5513 00bf  ld   $bf
              5514 0061  ld   $61
              5515 002b  ld   $2b
              5516 0030  ld   $30
              5517 0021  ld   $21
              5518 0030  ld   $30
              5519 0035  ld   $35
              551a 0072  ld   $72
              551b 00c6  ld   $c6
              551c 0085  ld   $85
              551d 000a  ld   $0a
              551e 0003  ld   $03
              551f 0011  ld   $11
              5520 00a0  ld   $a0
              5521 007b  ld   $7b
              5522 002b  ld   $2b
              5523 0082  ld   $82
              5524 0059  ld   $59
              5525 0006  ld   $06
              5526 00f0  ld   $f0
              5527 0082  ld   $82
              5528 0059  ld   $59
              5529 0024  ld   $24
              552a 002b  ld   $2b
              552b 0050  ld   $50
              552c 0011  ld   $11
              552d 00a0  ld   $a0
              552e 007b  ld   $7b
              552f 0099  ld   $99
              5530 0050  ld   $50
              5531 00e6  ld   $e6
              5532 0023  ld   $23
              5533 002b  ld   $2b
              5534 00e8  ld   $e8
              5535 0021  ld   $21
              5536 0050  ld   $50
              5537 00ad  ld   $ad
              5538 00f0  ld   $f0
              5539 00e8  ld   $e8
              553a 0093  ld   $93
              553b 0050  ld   $50
              553c 001a  ld   $1a
              553d 0050  ld   $50
              553e 00e6  ld   $e6
              553f 002b  ld   $2b
              5540 0035  ld   $35
              5541 0056  ld   $56
              5542 00d3  ld   $d3
              5543 0011  ld   $11
              5544 00a0  ld   $a0
              5545 007b  ld   $7b
              5546 002b  ld   $2b
              5547 0084  ld   $84
              5548 0011  ld   $11
              5549 00a6  ld   $a6
              554a 007c  ld   $7c
              554b 0085  ld   $85
              554c 00c3  ld   $c3
              554d 0066  ld   $66
              554e 0085  ld   $85
              554f 0000  ld   $00
              5550 0003  ld   $03
              5551 0003  ld   $03
              5552 0000  ld   $00
              5553 00fa  ld   $fa
              5554 0082  ld   $82
              5555 0001  ld   $01
              5556 0035  ld   $35
              5557 0072  ld   $72
              5558 0006  ld   $06
              5559 0085  ld   $85
              555a 000a  ld   $0a
              555b 0003  ld   $03
              555c 0063  ld   $63
              555d 00ff  ld   $ff
              555e 0021  ld   $21
              555f 0030  ld   $30
              5560 0035  ld   $35
              5561 003f  ld   $3f
              5562 0010  ld   $10
              5563 0085  ld   $85
              5564 00b7  ld   $b7
              5565 0002  ld   $02
              5566 0011  ld   $11
              5567 00b1  ld   $b1
              5568 0069  ld   $69
              5569 0085  ld   $85
              556a 00d1  ld   $d1
              556b 0062  ld   $62
              556c 0085  ld   $85
              556d 00aa  ld   $aa
              556e 0067  ld   $67
              556f 00b4  ld   $b4
              5570 0080  ld   $80
              5571 0063  ld   $63
              5572 00ff  ld   $ff
              5573 0075  ld   $75
              5574 0011  ld   $11
              5575 0006  ld   $06
              5576 000b  ld   $0b
              5577 002b  ld   $2b
              5578 0022  ld   $22
              5579 0021  ld   $21
              557a 0032  ld   $32
              557b 002b  ld   $2b
              557c 0024  ld   $24
              557d 0059  ld   $59
              557e 0001  ld   $01
              557f 002b  ld   $2b
              5580 0026  ld   $26
              5581 001a  ld   $1a
              5582 0034  ld   $34
              5583 00e9  ld   $e9
              5584 00e9  ld   $e9
              5585 00e9  ld   $e9
              5586 002b  ld   $2b
              5587 0027  ld   $27
              5588 00b4  ld   $b4
              5589 00e6  ld   $e6
              558a 002b  ld   $2b
              558b 0036  ld   $36
              558c 0063  ld   $63
              558d 00ff  ld   $ff
              558e 0075  ld   $75
              558f 0021  ld   $21
              5590 0070  ld   $70
              5591 002b  ld   $2b
              5592 0022  ld   $22
              5593 0011  ld   $11
              5594 00ae  ld   $ae
              5595 007c  ld   $7c
              5596 002b  ld   $2b
              5597 0024  ld   $24
              5598 0059  ld   $59
              5599 00cf  ld   $cf
              559a 005e  ld   $5e
              559b 0027  ld   $27
              559c 00b4  ld   $b4
              559d 00fe  ld   $fe
              559e 0011  ld   $11
              559f 00ae  ld   $ae
              55a0 007c  ld   $7c
              55a1 00ad  ld   $ad
              55a2 008c  ld   $8c
              55a3 00ff  ld   $ff
              55a4 0035  ld   $35
              55a5 003f  ld   $3f
              55a6 003d  ld   $3d
              55a7 0059  ld   $59
              55a8 00db  ld   $db
              55a9 005e  ld   $5e
              55aa 0027  ld   $27
              55ab 00b4  ld   $b4
              55ac 00fe  ld   $fe
              55ad 0059  ld   $59
              55ae 00eb  ld   $eb
              55af 005e  ld   $5e
              55b0 0027  ld   $27
              55b1 00b4  ld   $b4
              55b2 00fe  ld   $fe
              55b3 0059  ld   $59
              55b4 00fb  ld   $fb
              55b5 005e  ld   $5e
              55b6 0027  ld   $27
              55b7 00b4  ld   $b4
              55b8 00fe  ld   $fe
              55b9 0059  ld   $59
              55ba 0002  ld   $02
              55bb 005e  ld   $5e
              55bc 0027  ld   $27
              55bd 00b4  ld   $b4
              55be 00fe  ld   $fe
              55bf 001a  ld   $1a
              55c0 0027  ld   $27
              55c1 00e3  ld   $e3
              55c2 0004  ld   $04
              55c3 005e  ld   $5e
              55c4 0027  ld   $27
              55c5 008c  ld   $8c
              55c6 00f2  ld   $f2
              55c7 0035  ld   $35
              55c8 0072  ld   $72
              55c9 0067  ld   $67
              55ca 0059  ld   $59
              55cb 00b9  ld   $b9
              55cc 005e  ld   $5e
              55cd 0027  ld   $27
              55ce 00b4  ld   $b4
              55cf 00fe  ld   $fe
              55d0 0011  ld   $11
              55d1 00ae  ld   $ae
              55d2 007c  ld   $7c
              55d3 00ad  ld   $ad
              55d4 002b  ld   $2b
              55d5 0040  ld   $40
              55d6 0011  ld   $11
              55d7 00af  ld   $af
              55d8 007c  ld   $7c
              55d9 00ad  ld   $ad
              55da 0082  ld   $82
              55db 003f  ld   $3f
              55dc 002b  ld   $2b
              55dd 0042  ld   $42
              55de 0063  ld   $63
              55df 00ff  ld   $ff
              55e0 0075  ld   $75
              55e1 0059  ld   $59
              55e2 0002  ld   $02
              55e3 002b  ld   $2b
              55e4 0052  ld   $52
              55e5 0021  ld   $21
              55e6 0042  ld   $42
              55e7 0035  ld   $35
              55e8 0072  ld   $72
              55e9 0096  ld   $96
              55ea 0063  ld   $63
              55eb 00ff  ld   $ff
              55ec 0021  ld   $21
              55ed 0038  ld   $38
              55ee 008c  ld   $8c
              55ef 0064  ld   $64
              55f0 0035  ld   $35
              55f1 0072  ld   $72
              55f2 009f  ld   $9f
              55f3 0063  ld   $63
              55f4 00ff  ld   $ff
              55f5 0059  ld   $59
              55f6 0000  ld   $00
              55f7 002b  ld   $2b
              55f8 0054  ld   $54
              55f9 0011  ld   $11
              55fa 00ae  ld   $ae
              55fb fe00  bra  ac          ;+-----------------------------------+
              55fc fcfd  bra  $55fd       ;|                                   |
              55fd 1418  ld   $18,y       ;| Trampoline for page $5500 lookups |
              55fe e006  jmp  y,$06       ;|                                   |
              55ff c218  st   [$18]       ;+-----------------------------------+
              5600 007c  ld   $7c
              5601 0099  ld   $99
              5602 0052  ld   $52
              5603 00ad  ld   $ad
              5604 002b  ld   $2b
              5605 0056  ld   $56
              5606 0021  ld   $21
              5607 0038  ld   $38
              5608 002b  ld   $2b
              5609 0096  ld   $96
              560a 0021  ld   $21
              560b 0054  ld   $54
              560c 002b  ld   $2b
              560d 0098  ld   $98
              560e 0011  ld   $11
              560f 0038  ld   $38
              5610 0006  ld   $06
              5611 0085  ld   $85
              5612 00a1  ld   $a1
              5613 0068  ld   $68
              5614 002b  ld   $2b
              5615 00ea  ld   $ea
              5616 0021  ld   $21
              5617 0056  ld   $56
              5618 00f0  ld   $f0
              5619 00ea  ld   $ea
              561a 0093  ld   $93
              561b 0052  ld   $52
              561c 0093  ld   $93
              561d 0054  ld   $54
              561e 0021  ld   $21
              561f 0056  ld   $56
              5620 0035  ld   $35
              5621 0072  ld   $72
              5622 00a3  ld   $a3
              5623 0093  ld   $93
              5624 0038  ld   $38
              5625 0021  ld   $21
              5626 0038  ld   $38
              5627 008c  ld   $8c
              5628 0064  ld   $64
              5629 0035  ld   $35
              562a 0072  ld   $72
              562b 00d3  ld   $d3
              562c 0063  ld   $63
              562d 00ff  ld   $ff
              562e 0021  ld   $21
              562f 0052  ld   $52
              5630 00e6  ld   $e6
              5631 0002  ld   $02
              5632 00fc  ld   $fc
              5633 0042  ld   $42
              5634 0035  ld   $35
              5635 0072  ld   $72
              5636 009f  ld   $9f
              5637 0063  ld   $63
              5638 00ff  ld   $ff
              5639 0075  ld   $75
              563a 0021  ld   $21
              563b 0038  ld   $38
              563c 00e6  ld   $e6
              563d 000f  ld   $0f
              563e 002b  ld   $2b
              563f 00e8  ld   $e8
              5640 0021  ld   $21
              5641 003a  ld   $3a
              5642 002b  ld   $2b
              5643 0082  ld   $82
              5644 0021  ld   $21
              5645 00e8  ld   $e8
              5646 0085  ld   $85
              5647 00ac  ld   $ac
              5648 0062  ld   $62
              5649 002b  ld   $2b
              564a 0082  ld   $82
              564b 0059  ld   $59
              564c 0000  ld   $00
              564d 0085  ld   $85
              564e 00f0  ld   $f0
              564f 0061  ld   $61
              5650 0085  ld   $85
              5651 0000  ld   $00
              5652 0004  ld   $04
              5653 0004  ld   $04
              5654 0000  ld   $00
              5655 00fa  ld   $fa
              5656 002b  ld   $2b
              5657 0058  ld   $58
              5658 0021  ld   $21
              5659 003a  ld   $3a
              565a 00e3  ld   $e3
              565b 000e  ld   $0e
              565c 002b  ld   $2b
              565d 00e8  ld   $e8
              565e 0021  ld   $21
              565f 0038  ld   $38
              5660 00e6  ld   $e6
              5661 0001  ld   $01
              5662 002b  ld   $2b
              5663 00ea  ld   $ea
              5664 0021  ld   $21
              5665 00e8  ld   $e8
              5666 002b  ld   $2b
              5667 0082  ld   $82
              5668 0021  ld   $21
              5669 00ea  ld   $ea
              566a 0085  ld   $85
              566b 00ac  ld   $ac
              566c 0062  ld   $62
              566d 002b  ld   $2b
              566e 005a  ld   $5a
              566f 0021  ld   $21
              5670 0058  ld   $58
              5671 002b  ld   $2b
              5672 005c  ld   $5c
              5673 0021  ld   $21
              5674 005a  ld   $5a
              5675 002b  ld   $2b
              5676 00b0  ld   $b0
              5677 0059  ld   $59
              5678 0001  ld   $01
              5679 002b  ld   $2b
              567a 00b2  ld   $b2
              567b 0021  ld   $21
              567c 005c  ld   $5c
              567d 002b  ld   $2b
              567e 0096  ld   $96
              567f 0059  ld   $59
              5680 0000  ld   $00
              5681 002b  ld   $2b
              5682 0098  ld   $98
              5683 0011  ld   $11
              5684 0038  ld   $38
              5685 0006  ld   $06
              5686 0085  ld   $85
              5687 00a1  ld   $a1
              5688 0068  ld   $68
              5689 00e3  ld   $e3
              568a 0001  ld   $01
              568b 002b  ld   $2b
              568c 005e  ld   $5e
              568d 0021  ld   $21
              568e 005e  ld   $5e
              568f 00ad  ld   $ad
              5690 002b  ld   $2b
              5691 0060  ld   $60
              5692 0021  ld   $21
              5693 005e  ld   $5e
              5694 00e6  ld   $e6
              5695 0001  ld   $01
              5696 00ad  ld   $ad
              5697 002b  ld   $2b
              5698 0062  ld   $62
              5699 0021  ld   $21
              569a 005c  ld   $5c
              569b 00b8  ld   $b8
              569c 003a  ld   $3a
              569d 00fc  ld   $fc
              569e 003c  ld   $3c
              569f 0035  ld   $35
              56a0 0072  ld   $72
              56a1 0065  ld   $65
              56a2 0021  ld   $21
              56a3 0062  ld   $62
              56a4 008c  ld   $8c
              56a5 0001  ld   $01
              56a6 0035  ld   $35
              56a7 0072  ld   $72
              56a8 0059  ld   $59
              56a9 0011  ld   $11
              56aa 003f  ld   $3f
              56ab 0020  ld   $20
              56ac 002b  ld   $2b
              56ad 00a2  ld   $a2
              56ae 0085  ld   $85
              56af 0060  ld   $60
              56b0 0004  ld   $04
              56b1 0011  ld   $11
              56b2 002a  ld   $2a
              56b3 0020  ld   $20
              56b4 002b  ld   $2b
              56b5 00a2  ld   $a2
              56b6 0021  ld   $21
              56b7 005e  ld   $5e
              56b8 002b  ld   $2b
              56b9 0044  ld   $44
              56ba 0085  ld   $85
              56bb 007b  ld   $7b
              56bc 0004  ld   $04
              56bd 0021  ld   $21
              56be 0062  ld   $62
              56bf 008c  ld   $8c
              56c0 0001  ld   $01
              56c1 0035  ld   $35
              56c2 0072  ld   $72
              56c3 0074  ld   $74
              56c4 0011  ld   $11
              56c5 0020  ld   $20
              56c6 003f  ld   $3f
              56c7 002b  ld   $2b
              56c8 00a2  ld   $a2
              56c9 0085  ld   $85
              56ca 007b  ld   $7b
              56cb 0004  ld   $04
              56cc 0011  ld   $11
              56cd 0020  ld   $20
              56ce 002a  ld   $2a
              56cf 002b  ld   $2b
              56d0 00a2  ld   $a2
              56d1 0059  ld   $59
              56d2 0002  ld   $02
              56d3 005e  ld   $5e
              56d4 00a4  ld   $a4
              56d5 0021  ld   $21
              56d6 005c  ld   $5c
              56d7 00b8  ld   $b8
              56d8 003a  ld   $3a
              56d9 00e9  ld   $e9
              56da 00e9  ld   $e9
              56db 00e9  ld   $e9
              56dc 005e  ld   $5e
              56dd 00a5  ld   $a5
              56de 0085  ld   $85
              56df 00a8  ld   $a8
              56e0 0064  ld   $64
              56e1 0021  ld   $21
              56e2 005e  ld   $5e
              56e3 0085  ld   $85
              56e4 00d1  ld   $d1
              56e5 0062  ld   $62
              56e6 0059  ld   $59
              56e7 000c  ld   $0c
              56e8 00b8  ld   $b8
              56e9 0060  ld   $60
              56ea 0085  ld   $85
              56eb 00e4  ld   $e4
              56ec 0063  ld   $63
              56ed 0021  ld   $21
              56ee 005c  ld   $5c
              56ef 0099  ld   $99
              56f0 00b2  ld   $b2
              56f1 002b  ld   $2b
              56f2 005c  ld   $5c
              56f3 00b8  ld   $b8
              56f4 00b0  ld   $b0
              56f5 0035  ld   $35
              56f6 0056  ld   $56
              56f7 0023  ld   $23
              56f8 0063  ld   $63
              56f9 00ff  ld   $ff
              56fa 0075  ld   $75
              56fb fe00  bra  ac          ;+-----------------------------------+
              56fc fcfd  bra  $56fd       ;|                                   |
              56fd 1418  ld   $18,y       ;| Trampoline for page $5600 lookups |
              56fe e006  jmp  y,$06       ;|                                   |
              56ff c218  st   [$18]       ;+-----------------------------------+
              5700 0021  ld   $21
              5701 0038  ld   $38
              5702 00e6  ld   $e6
              5703 000f  ld   $0f
              5704 002b  ld   $2b
              5705 00e8  ld   $e8
              5706 0021  ld   $21
              5707 003a  ld   $3a
              5708 002b  ld   $2b
              5709 0082  ld   $82
              570a 0021  ld   $21
              570b 00e8  ld   $e8
              570c 0085  ld   $85
              570d 00ac  ld   $ac
              570e 0062  ld   $62
              570f 002b  ld   $2b
              5710 0082  ld   $82
              5711 0059  ld   $59
              5712 0000  ld   $00
              5713 0085  ld   $85
              5714 00f0  ld   $f0
              5715 0061  ld   $61
              5716 002b  ld   $2b
              5717 0058  ld   $58
              5718 0021  ld   $21
              5719 0058  ld   $58
              571a 0099  ld   $99
              571b 003e  ld   $3e
              571c 002b  ld   $2b
              571d 0064  ld   $64
              571e 0021  ld   $21
              571f 0064  ld   $64
              5720 002b  ld   $2b
              5721 0096  ld   $96
              5722 0059  ld   $59
              5723 0000  ld   $00
              5724 002b  ld   $2b
              5725 0098  ld   $98
              5726 0011  ld   $11
              5727 0038  ld   $38
              5728 0006  ld   $06
              5729 0085  ld   $85
              572a 00a1  ld   $a1
              572b 0068  ld   $68
              572c 00e3  ld   $e3
              572d 0001  ld   $01
              572e 002b  ld   $2b
              572f 0066  ld   $66
              5730 0021  ld   $21
              5731 0066  ld   $66
              5732 00ad  ld   $ad
              5733 002b  ld   $2b
              5734 0068  ld   $68
              5735 0021  ld   $21
              5736 0066  ld   $66
              5737 00e6  ld   $e6
              5738 0001  ld   $01
              5739 00ad  ld   $ad
              573a 002b  ld   $2b
              573b 0062  ld   $62
              573c 0021  ld   $21
              573d 0062  ld   $62
              573e 008c  ld   $8c
              573f 0001  ld   $01
              5740 0035  ld   $35
              5741 0072  ld   $72
              5742 00ee  ld   $ee
              5743 0011  ld   $11
              5744 0020  ld   $20
              5745 003f  ld   $3f
              5746 002b  ld   $2b
              5747 00a2  ld   $a2
              5748 0085  ld   $85
              5749 00f5  ld   $f5
              574a 0004  ld   $04
              574b 0011  ld   $11
              574c 0020  ld   $20
              574d 002a  ld   $2a
              574e 002b  ld   $2b
              574f 00a2  ld   $a2
              5750 0059  ld   $59
              5751 0002  ld   $02
              5752 0085  ld   $85
              5753 0000  ld   $00
              5754 0005  ld   $05
              5755 0005  ld   $05
              5756 0000  ld   $00
              5757 00fe  ld   $fe
              5758 005e  ld   $5e
              5759 00a4  ld   $a4
              575a 0021  ld   $21
              575b 0064  ld   $64
              575c 00b8  ld   $b8
              575d 0058  ld   $58
              575e 00e9  ld   $e9
              575f 00e9  ld   $e9
              5760 00e9  ld   $e9
              5761 005e  ld   $5e
              5762 00a5  ld   $a5
              5763 0085  ld   $85
              5764 00a8  ld   $a8
              5765 0064  ld   $64
              5766 0021  ld   $21
              5767 0066  ld   $66
              5768 0085  ld   $85
              5769 00d1  ld   $d1
              576a 0062  ld   $62
              576b 0059  ld   $59
              576c 000c  ld   $0c
              576d 00b8  ld   $b8
              576e 0068  ld   $68
              576f 0085  ld   $85
              5770 00e4  ld   $e4
              5771 0063  ld   $63
              5772 0021  ld   $21
              5773 003c  ld   $3c
              5774 002b  ld   $2b
              5775 003e  ld   $3e
              5776 0021  ld   $21
              5777 0058  ld   $58
              5778 0099  ld   $99
              5779 003c  ld   $3c
              577a 002b  ld   $2b
              577b 006a  ld   $6a
              577c 0021  ld   $21
              577d 006a  ld   $6a
              577e 002b  ld   $2b
              577f 0096  ld   $96
              5780 0059  ld   $59
              5781 0000  ld   $00
              5782 002b  ld   $2b
              5783 0098  ld   $98
              5784 0011  ld   $11
              5785 0038  ld   $38
              5786 0006  ld   $06
              5787 0085  ld   $85
              5788 00a1  ld   $a1
              5789 0068  ld   $68
              578a 00e3  ld   $e3
              578b 0001  ld   $01
              578c 002b  ld   $2b
              578d 006c  ld   $6c
              578e 0021  ld   $21
              578f 006c  ld   $6c
              5790 00ad  ld   $ad
              5791 002b  ld   $2b
              5792 006e  ld   $6e
              5793 0021  ld   $21
              5794 006c  ld   $6c
              5795 00e6  ld   $e6
              5796 0001  ld   $01
              5797 00ad  ld   $ad
              5798 002b  ld   $2b
              5799 0062  ld   $62
              579a 0021  ld   $21
              579b 0062  ld   $62
              579c 008c  ld   $8c
              579d 0001  ld   $01
              579e 0035  ld   $35
              579f 0072  ld   $72
              57a0 004f  ld   $4f
              57a1 0011  ld   $11
              57a2 003f  ld   $3f
              57a3 0020  ld   $20
              57a4 002b  ld   $2b
              57a5 00a2  ld   $a2
              57a6 0085  ld   $85
              57a7 0056  ld   $56
              57a8 0005  ld   $05
              57a9 0011  ld   $11
              57aa 002a  ld   $2a
              57ab 0020  ld   $20
              57ac 002b  ld   $2b
              57ad 00a2  ld   $a2
              57ae 0059  ld   $59
              57af 0002  ld   $02
              57b0 005e  ld   $5e
              57b1 00a4  ld   $a4
              57b2 0021  ld   $21
              57b3 006a  ld   $6a
              57b4 00b8  ld   $b8
              57b5 0058  ld   $58
              57b6 00e9  ld   $e9
              57b7 00e9  ld   $e9
              57b8 00e9  ld   $e9
              57b9 005e  ld   $5e
              57ba 00a5  ld   $a5
              57bb 0085  ld   $85
              57bc 00a8  ld   $a8
              57bd 0064  ld   $64
              57be 0021  ld   $21
              57bf 006c  ld   $6c
              57c0 0085  ld   $85
              57c1 00d1  ld   $d1
              57c2 0062  ld   $62
              57c3 0059  ld   $59
              57c4 000c  ld   $0c
              57c5 00b8  ld   $b8
              57c6 006e  ld   $6e
              57c7 0085  ld   $85
              57c8 00e4  ld   $e4
              57c9 0063  ld   $63
              57ca 0021  ld   $21
              57cb 006c  ld   $6c
              57cc 002b  ld   $2b
              57cd 0044  ld   $44
              57ce 0063  ld   $63
              57cf 00ff  ld   $ff
              57d0 0075  ld   $75
              57d1 001a  ld   $1a
              57d2 0021  ld   $21
              57d3 0082  ld   $82
              57d4 00fc  ld   $fc
              57d5 002b  ld   $2b
              57d6 004e  ld   $4e
              57d7 0011  ld   $11
              57d8 0018  ld   $18
              57d9 000b  ld   $0b
              57da 002b  ld   $2b
              57db 0070  ld   $70
              57dc 0021  ld   $21
              57dd 004e  ld   $4e
              57de 008c  ld   $8c
              57df 0020  ld   $20
              57e0 0035  ld   $35
              57e1 0072  ld   $72
              57e2 008e  ld   $8e
              57e3 0011  ld   $11
              57e4 00b1  ld   $b1
              57e5 000b  ld   $0b
              57e6 002b  ld   $2b
              57e7 0070  ld   $70
              57e8 0021  ld   $21
              57e9 004e  ld   $4e
              57ea 008c  ld   $8c
              57eb 0028  ld   $28
              57ec 0035  ld   $35
              57ed 0072  ld   $72
              57ee 009a  ld   $9a
              57ef 0011  ld   $11
              57f0 00df  ld   $df
              57f1 000b  ld   $0b
              57f2 002b  ld   $2b
              57f3 0070  ld   $70
              57f4 0021  ld   $21
              57f5 004e  ld   $4e
              57f6 008c  ld   $8c
              57f7 0038  ld   $38
              57f8 0035  ld   $35
              57f9 0072  ld   $72
              57fa 00a6  ld   $a6
              57fb fe00  bra  ac          ;+-----------------------------------+
              57fc fcfd  bra  $57fd       ;|                                   |
              57fd 1418  ld   $18,y       ;| Trampoline for page $5700 lookups |
              57fe e006  jmp  y,$06       ;|                                   |
              57ff c218  st   [$18]       ;+-----------------------------------+
              5800 0011  ld   $11
              5801 0031  ld   $31
              5802 008a  ld   $8a
              5803 002b  ld   $2b
              5804 0070  ld   $70
              5805 0021  ld   $21
              5806 004e  ld   $4e
              5807 008c  ld   $8c
              5808 0040  ld   $40
              5809 0035  ld   $35
              580a 0072  ld   $72
              580b 00b2  ld   $b2
              580c 0011  ld   $11
              580d 0007  ld   $07
              580e 0059  ld   $59
              580f 002b  ld   $2b
              5810 0070  ld   $70
              5811 0021  ld   $21
              5812 004e  ld   $4e
              5813 008c  ld   $8c
              5814 00f0  ld   $f0
              5815 0035  ld   $35
              5816 0072  ld   $72
              5817 00be  ld   $be
              5818 0011  ld   $11
              5819 0000  ld   $00
              581a 0013  ld   $13
              581b 002b  ld   $2b
              581c 0070  ld   $70
              581d 0021  ld   $21
              581e 004e  ld   $4e
              581f 008c  ld   $8c
              5820 00f8  ld   $f8
              5821 0035  ld   $35
              5822 0072  ld   $72
              5823 00dd  ld   $dd
              5824 001a  ld   $1a
              5825 0031  ld   $31
              5826 008c  ld   $8c
              5827 005a  ld   $5a
              5828 0035  ld   $35
              5829 0072  ld   $72
              582a 00d1  ld   $d1
              582b 0011  ld   $11
              582c 0007  ld   $07
              582d 0059  ld   $59
              582e 002b  ld   $2b
              582f 0070  ld   $70
              5830 001a  ld   $1a
              5831 0031  ld   $31
              5832 008c  ld   $8c
              5833 005c  ld   $5c
              5834 0035  ld   $35
              5835 0072  ld   $72
              5836 00dd  ld   $dd
              5837 0011  ld   $11
              5838 0007  ld   $07
              5839 005b  ld   $5b
              583a 002b  ld   $2b
              583b 0070  ld   $70
              583c 0063  ld   $63
              583d 00ff  ld   $ff
              583e 0075  ld   $75
              583f 0011  ld   $11
              5840 00ef  ld   $ef
              5841 007c  ld   $7c
              5842 002b  ld   $2b
              5843 0082  ld   $82
              5844 0059  ld   $59
              5845 0003  ld   $03
              5846 00f0  ld   $f0
              5847 0082  ld   $82
              5848 0011  ld   $11
              5849 00a0  ld   $a0
              584a 007a  ld   $7a
              584b 00ad  ld   $ad
              584c 002b  ld   $2b
              584d 0072  ld   $72
              584e 0059  ld   $59
              584f 0001  ld   $01
              5850 0099  ld   $99
              5851 0072  ld   $72
              5852 00e3  ld   $e3
              5853 0001  ld   $01
              5854 002b  ld   $2b
              5855 0034  ld   $34
              5856 0021  ld   $21
              5857 0072  ld   $72
              5858 0085  ld   $85
              5859 0000  ld   $00
              585a 0006  ld   $06
              585b 0006  ld   $06
              585c 0000  ld   $00
              585d 0000  ld   $00
              585e 0035  ld   $35
              585f 0056  ld   $56
              5860 002c  ld   $2c
              5861 0059  ld   $59
              5862 0001  ld   $01
              5863 002b  ld   $2b
              5864 005c  ld   $5c
              5865 0021  ld   $21
              5866 0072  ld   $72
              5867 00e3  ld   $e3
              5868 0001  ld   $01
              5869 002b  ld   $2b
              586a 00b0  ld   $b0
              586b 0059  ld   $59
              586c 0001  ld   $01
              586d 002b  ld   $2b
              586e 00b2  ld   $b2
              586f 0011  ld   $11
              5870 00ef  ld   $ef
              5871 007c  ld   $7c
              5872 0099  ld   $99
              5873 005c  ld   $5c
              5874 002b  ld   $2b
              5875 00e8  ld   $e8
              5876 0011  ld   $11
              5877 00a0  ld   $a0
              5878 007a  ld   $7a
              5879 0099  ld   $99
              587a 005c  ld   $5c
              587b 00ad  ld   $ad
              587c 00f0  ld   $f0
              587d 00e8  ld   $e8
              587e 0021  ld   $21
              587f 005c  ld   $5c
              5880 0099  ld   $99
              5881 00b2  ld   $b2
              5882 002b  ld   $2b
              5883 005c  ld   $5c
              5884 00b8  ld   $b8
              5885 00b0  ld   $b0
              5886 0035  ld   $35
              5887 0056  ld   $56
              5888 000f  ld   $0f
              5889 0085  ld   $85
              588a 00a2  ld   $a2
              588b 0008  ld   $08
              588c 0011  ld   $11
              588d 00f0  ld   $f0
              588e 007c  ld   $7c
              588f 002b  ld   $2b
              5890 0082  ld   $82
              5891 0059  ld   $59
              5892 0000  ld   $00
              5893 0085  ld   $85
              5894 00a0  ld   $a0
              5895 0008  ld   $08
              5896 00f1  ld   $f1
              5897 0079  ld   $79
              5898 00e2  ld   $e2
              5899 0079  ld   $79
              589a 00d3  ld   $d3
              589b 0079  ld   $79
              589c 00c4  ld   $c4
              589d 0079  ld   $79
              589e 00b5  ld   $b5
              589f 0079  ld   $79
              58a0 00a6  ld   $a6
              58a1 0079  ld   $79
              58a2 00f1  ld   $f1
              58a3 0078  ld   $78
              58a4 00e2  ld   $e2
              58a5 0078  ld   $78
              58a6 00d3  ld   $d3
              58a7 0078  ld   $78
              58a8 00c4  ld   $c4
              58a9 0078  ld   $78
              58aa 00b5  ld   $b5
              58ab 0078  ld   $78
              58ac 00a6  ld   $a6
              58ad 0078  ld   $78
              58ae 00f1  ld   $f1
              58af 0077  ld   $77
              58b0 00e2  ld   $e2
              58b1 0077  ld   $77
              58b2 00d3  ld   $d3
              58b3 0077  ld   $77
              58b4 00c4  ld   $c4
              58b5 0077  ld   $77
              58b6 00b5  ld   $b5
              58b7 0077  ld   $77
              58b8 00a6  ld   $a6
              58b9 0077  ld   $77
              58ba 00f1  ld   $f1
              58bb 0076  ld   $76
              58bc 00e2  ld   $e2
              58bd 0076  ld   $76
              58be 00d3  ld   $d3
              58bf 0076  ld   $76
              58c0 00c4  ld   $c4
              58c1 0076  ld   $76
              58c2 00b5  ld   $b5
              58c3 0076  ld   $76
              58c4 00a6  ld   $a6
              58c5 0076  ld   $76
              58c6 00f1  ld   $f1
              58c7 0075  ld   $75
              58c8 00e2  ld   $e2
              58c9 0075  ld   $75
              58ca 00d3  ld   $d3
              58cb 0075  ld   $75
              58cc 00c4  ld   $c4
              58cd 0075  ld   $75
              58ce 00b5  ld   $b5
              58cf 0075  ld   $75
              58d0 00a6  ld   $a6
              58d1 0075  ld   $75
              58d2 00f1  ld   $f1
              58d3 0074  ld   $74
              58d4 00e2  ld   $e2
              58d5 0074  ld   $74
              58d6 00d3  ld   $d3
              58d7 0074  ld   $74
              58d8 00c4  ld   $c4
              58d9 0074  ld   $74
              58da 00b5  ld   $b5
              58db 0074  ld   $74
              58dc 00a6  ld   $a6
              58dd 0074  ld   $74
              58de 00f1  ld   $f1
              58df 0073  ld   $73
              58e0 00e2  ld   $e2
              58e1 0073  ld   $73
              58e2 00d3  ld   $d3
              58e3 0073  ld   $73
              58e4 00c4  ld   $c4
              58e5 0073  ld   $73
              58e6 00b5  ld   $b5
              58e7 0073  ld   $73
              58e8 00a6  ld   $a6
              58e9 0073  ld   $73
              58ea 00f1  ld   $f1
              58eb 0072  ld   $72
              58ec 00e2  ld   $e2
              58ed 0072  ld   $72
              58ee 00d3  ld   $d3
              58ef 0072  ld   $72
              58f0 00c4  ld   $c4
              58f1 0072  ld   $72
              58f2 00b5  ld   $b5
              58f3 0072  ld   $72
              58f4 00a6  ld   $a6
              58f5 0072  ld   $72
              58f6 00f1  ld   $f1
              58f7 0071  ld   $71
              58f8 00e2  ld   $e2
              58f9 0071  ld   $71
              58fa 00d3  ld   $d3
              58fb fe00  bra  ac          ;+-----------------------------------+
              58fc fcfd  bra  $58fd       ;|                                   |
              58fd 1418  ld   $18,y       ;| Trampoline for page $5800 lookups |
              58fe e006  jmp  y,$06       ;|                                   |
              58ff c218  st   [$18]       ;+-----------------------------------+
              5900 0071  ld   $71
              5901 00c4  ld   $c4
              5902 0071  ld   $71
              5903 00b5  ld   $b5
              5904 0071  ld   $71
              5905 00a6  ld   $a6
              5906 0071  ld   $71
              5907 00f1  ld   $f1
              5908 0070  ld   $70
              5909 00e2  ld   $e2
              590a 0070  ld   $70
              590b 00d3  ld   $d3
              590c 0070  ld   $70
              590d 00c4  ld   $c4
              590e 0070  ld   $70
              590f 00b5  ld   $b5
              5910 0070  ld   $70
              5911 00a6  ld   $a6
              5912 0070  ld   $70
              5913 00f1  ld   $f1
              5914 006f  ld   $6f
              5915 00e2  ld   $e2
              5916 006f  ld   $6f
              5917 00d3  ld   $d3
              5918 006f  ld   $6f
              5919 00c4  ld   $c4
              591a 006f  ld   $6f
              591b 00b5  ld   $b5
              591c 006f  ld   $6f
              591d 00a6  ld   $a6
              591e 006f  ld   $6f
              591f 00f1  ld   $f1
              5920 006e  ld   $6e
              5921 00e2  ld   $e2
              5922 006e  ld   $6e
              5923 00d3  ld   $d3
              5924 006e  ld   $6e
              5925 00c4  ld   $c4
              5926 006e  ld   $6e
              5927 00b5  ld   $b5
              5928 006e  ld   $6e
              5929 00a6  ld   $a6
              592a 006e  ld   $6e
              592b 00f1  ld   $f1
              592c 006d  ld   $6d
              592d 00e2  ld   $e2
              592e 006d  ld   $6d
              592f 00d3  ld   $d3
              5930 006d  ld   $6d
              5931 00c4  ld   $c4
              5932 006d  ld   $6d
              5933 00b5  ld   $b5
              5934 006d  ld   $6d
              5935 00a6  ld   $a6
              5936 006d  ld   $6d
              5937 00f1  ld   $f1
              5938 006c  ld   $6c
              5939 00e2  ld   $e2
              593a 006c  ld   $6c
              593b 00d3  ld   $d3
              593c 006c  ld   $6c
              593d 00c4  ld   $c4
              593e 006c  ld   $6c
              593f 00b5  ld   $b5
              5940 006c  ld   $6c
              5941 00a6  ld   $a6
              5942 006c  ld   $6c
              5943 00f1  ld   $f1
              5944 006b  ld   $6b
              5945 00e2  ld   $e2
              5946 006b  ld   $6b
              5947 00d3  ld   $d3
              5948 006b  ld   $6b
              5949 00c4  ld   $c4
              594a 006b  ld   $6b
              594b 00b5  ld   $b5
              594c 006b  ld   $6b
              594d 00a6  ld   $a6
              594e 006b  ld   $6b
              594f 00f1  ld   $f1
              5950 006a  ld   $6a
              5951 00e2  ld   $e2
              5952 006a  ld   $6a
              5953 00d3  ld   $d3
              5954 006a  ld   $6a
              5955 00c4  ld   $c4
              5956 006a  ld   $6a
              5957 00b5  ld   $b5
              5958 006a  ld   $6a
              5959 00a6  ld   $a6
              595a 006a  ld   $6a
              595b 00f1  ld   $f1
              595c 0069  ld   $69
              595d 00e2  ld   $e2
              595e 0069  ld   $69
              595f 00d3  ld   $d3
              5960 0069  ld   $69
              5961 00c4  ld   $c4
              5962 0069  ld   $69
              5963 0008  ld   $08
              5964 00a0  ld   $a0
              5965 005d  ld   $5d
              5966 00f0  ld   $f0
              5967 0082  ld   $82
              5968 0085  ld   $85
              5969 001f  ld   $1f
              596a 0003  ld   $03
              596b 0085  ld   $85
              596c 00c2  ld   $c2
              596d 000c  ld   $0c
              596e 0011  ld   $11
              596f 00fe  ld   $fe
              5970 007c  ld   $7c
              5971 002b  ld   $2b
              5972 0084  ld   $84
              5973 0011  ld   $11
              5974 00a0  ld   $a0
              5975 007a  ld   $7a
              5976 0085  ld   $85
              5977 00d2  ld   $d2
              5978 0061  ld   $61
              5979 0063  ld   $63
              597a 00ff  ld   $ff
              597b 0075  ld   $75
              597c 0085  ld   $85
              597d 00df  ld   $df
              597e 000c  ld   $0c
              597f 0011  ld   $11
              5980 00ef  ld   $ef
              5981 007c  ld   $7c
              5982 002b  ld   $2b
              5983 0082  ld   $82
              5984 0059  ld   $59
              5985 0002  ld   $02
              5986 00f0  ld   $f0
              5987 0082  ld   $82
              5988 0021  ld   $21
              5989 0044  ld   $44
              598a 002b  ld   $2b
              598b 0084  ld   $84
              598c 0011  ld   $11
              598d 00a0  ld   $a0
              598e 007d  ld   $7d
              598f 0085  ld   $85
              5990 00d2  ld   $d2
              5991 0061  ld   $61
              5992 0011  ld   $11
              5993 00a0  ld   $a0
              5994 007d  ld   $7d
              5995 00ad  ld   $ad
              5996 002b  ld   $2b
              5997 0072  ld   $72
              5998 0059  ld   $59
              5999 0001  ld   $01
              599a 002b  ld   $2b
              599b 005c  ld   $5c
              599c 0021  ld   $21
              599d 0072  ld   $72
              599e 00e3  ld   $e3
              599f 0001  ld   $01
              59a0 002b  ld   $2b
              59a1 00b0  ld   $b0
              59a2 0059  ld   $59
              59a3 0001  ld   $01
              59a4 002b  ld   $2b
              59a5 00b2  ld   $b2
              59a6 0011  ld   $11
              59a7 00ef  ld   $ef
              59a8 007c  ld   $7c
              59a9 0099  ld   $99
              59aa 005c  ld   $5c
              59ab 002b  ld   $2b
              59ac 00e8  ld   $e8
              59ad 0011  ld   $11
              59ae 00a0  ld   $a0
              59af 007d  ld   $7d
              59b0 0099  ld   $99
              59b1 005c  ld   $5c
              59b2 00ad  ld   $ad
              59b3 00f0  ld   $f0
              59b4 00e8  ld   $e8
              59b5 0021  ld   $21
              59b6 005c  ld   $5c
              59b7 0099  ld   $99
              59b8 00b2  ld   $b2
              59b9 002b  ld   $2b
              59ba 005c  ld   $5c
              59bb 00b8  ld   $b8
              59bc 00b0  ld   $b0
              59bd 0035  ld   $35
              59be 0056  ld   $56
              59bf 00de  ld   $de
              59c0 0085  ld   $85
              59c1 00a0  ld   $a0
              59c2 0009  ld   $09
              59c3 0009  ld   $09
              59c4 00a0  ld   $a0
              59c5 005f  ld   $5f
              59c6 0011  ld   $11
              59c7 0020  ld   $20
              59c8 000f  ld   $0f
              59c9 002b  ld   $2b
              59ca 00a2  ld   $a2
              59cb 0085  ld   $85
              59cc 00a3  ld   $a3
              59cd 0066  ld   $66
              59ce 0085  ld   $85
              59cf 00cd  ld   $cd
              59d0 0064  ld   $64
              59d1 0059  ld   $59
              59d2 0001  ld   $01
              59d3 0099  ld   $99
              59d4 0072  ld   $72
              59d5 00e3  ld   $e3
              59d6 0001  ld   $01
              59d7 002b  ld   $2b
              59d8 0034  ld   $34
              59d9 0085  ld   $85
              59da 001f  ld   $1f
              59db 0003  ld   $03
              59dc 0021  ld   $21
              59dd 0030  ld   $30
              59de 002b  ld   $2b
              59df 0024  ld   $24
              59e0 0011  ld   $11
              59e1 0000  ld   $00
              59e2 0002  ld   $02
              59e3 0085  ld   $85
              59e4 00a0  ld   $a0
              59e5 0064  ld   $64
              59e6 0063  ld   $63
              59e7 00ff  ld   $ff
              59e8 0075  ld   $75
              59e9 001a  ld   $1a
              59ea 000f  ld   $0f
              59eb 002b  ld   $2b
              59ec 0074  ld   $74
              59ed 0021  ld   $21
              59ee 0074  ld   $74
              59ef 00fc  ld   $fc
              59f0 004c  ld   $4c
              59f1 0035  ld   $35
              59f2 003f  ld   $3f
              59f3 00df  ld   $df
              59f4 0059  ld   $59
              59f5 0000  ld   $00
              59f6 002b  ld   $2b
              59f7 004a  ld   $4a
              59f8 0021  ld   $21
              59f9 0074  ld   $74
              59fa 002b  ld   $2b
              59fb fe00  bra  ac          ;+-----------------------------------+
              59fc fcfd  bra  $59fd       ;|                                   |
              59fd 1418  ld   $18,y       ;| Trampoline for page $5900 lookups |
              59fe e006  jmp  y,$06       ;|                                   |
              59ff c218  st   [$18]       ;+-----------------------------------+
              5a00 004c  ld   $4c
              5a01 0021  ld   $21
              5a02 0074  ld   $74
              5a03 002b  ld   $2b
              5a04 0082  ld   $82
              5a05 0059  ld   $59
              5a06 0000  ld   $00
              5a07 002b  ld   $2b
              5a08 0084  ld   $84
              5a09 0085  ld   $85
              5a0a 00cd  ld   $cd
              5a0b 0065  ld   $65
              5a0c 0021  ld   $21
              5a0d 004a  ld   $4a
              5a0e 00e6  ld   $e6
              5a0f 0014  ld   $14
              5a10 0035  ld   $35
              5a11 004d  ld   $4d
              5a12 00e9  ld   $e9
              5a13 0085  ld   $85
              5a14 00a9  ld   $a9
              5a15 000a  ld   $0a
              5a16 0021  ld   $21
              5a17 004a  ld   $4a
              5a18 002b  ld   $2b
              5a19 00a0  ld   $a0
              5a1a 0085  ld   $85
              5a1b 00a0  ld   $a0
              5a1c 0067  ld   $67
              5a1d 0082  ld   $82
              5a1e 0001  ld   $01
              5a1f 0035  ld   $35
              5a20 0072  ld   $72
              5a21 00f8  ld   $f8
              5a22 0085  ld   $85
              5a23 00a9  ld   $a9
              5a24 000a  ld   $0a
              5a25 0021  ld   $21
              5a26 0074  ld   $74
              5a27 0085  ld   $85
              5a28 00a0  ld   $a0
              5a29 000a  ld   $0a
              5a2a 000a  ld   $0a
              5a2b 00a0  ld   $a0
              5a2c 005e  ld   $5e
              5a2d 002b  ld   $2b
              5a2e 0082  ld   $82
              5a2f 0059  ld   $59
              5a30 0000  ld   $00
              5a31 002b  ld   $2b
              5a32 0084  ld   $84
              5a33 0085  ld   $85
              5a34 00cd  ld   $cd
              5a35 0065  ld   $65
              5a36 0063  ld   $63
              5a37 00ff  ld   $ff
              5a38 0075  ld   $75
              5a39 0085  ld   $85
              5a3a 00d8  ld   $d8
              5a3b 000b  ld   $0b
              5a3c 0063  ld   $63
              5a3d 00ff  ld   $ff
              5a3e 0075  ld   $75
              5a3f 0085  ld   $85
              5a40 00d8  ld   $d8
              5a41 000b  ld   $0b
              5a42 0063  ld   $63
              5a43 00ff  ld   $ff
              5a44 0075  ld   $75
              5a45 0021  ld   $21
              5a46 003a  ld   $3a
              5a47 00e3  ld   $e3
              5a48 000f  ld   $0f
              5a49 002b  ld   $2b
              5a4a 003a  ld   $3a
              5a4b 0021  ld   $21
              5a4c 0038  ld   $38
              5a4d 00e6  ld   $e6
              5a4e 000f  ld   $0f
              5a4f 002b  ld   $2b
              5a50 00e8  ld   $e8
              5a51 0021  ld   $21
              5a52 003a  ld   $3a
              5a53 002b  ld   $2b
              5a54 0082  ld   $82
              5a55 0021  ld   $21
              5a56 00e8  ld   $e8
              5a57 0085  ld   $85
              5a58 00ac  ld   $ac
              5a59 0062  ld   $62
              5a5a 002b  ld   $2b
              5a5b 0082  ld   $82
              5a5c 0059  ld   $59
              5a5d 0000  ld   $00
              5a5e 0085  ld   $85
              5a5f 00f0  ld   $f0
              5a60 0061  ld   $61
              5a61 002b  ld   $2b
              5a62 003a  ld   $3a
              5a63 0085  ld   $85
              5a64 00e0  ld   $e0
              5a65 0003  ld   $03
              5a66 0063  ld   $63
              5a67 00ff  ld   $ff
              5a68 0075  ld   $75
              5a69 0021  ld   $21
              5a6a 003a  ld   $3a
              5a6b 00e6  ld   $e6
              5a6c 000f  ld   $0f
              5a6d 002b  ld   $2b
              5a6e 003a  ld   $3a
              5a6f 0021  ld   $21
              5a70 003a  ld   $3a
              5a71 002b  ld   $2b
              5a72 0082  ld   $82
              5a73 0059  ld   $59
              5a74 0000  ld   $00
              5a75 0085  ld   $85
              5a76 00f0  ld   $f0
              5a77 0061  ld   $61
              5a78 002b  ld   $2b
              5a79 003a  ld   $3a
              5a7a 0085  ld   $85
              5a7b 00e0  ld   $e0
              5a7c 0003  ld   $03
              5a7d 0063  ld   $63
              5a7e 00ff  ld   $ff
              5a7f 0075  ld   $75
              5a80 0093  ld   $93
              5a81 003c  ld   $3c
              5a82 0021  ld   $21
              5a83 0038  ld   $38
              5a84 00e6  ld   $e6
              5a85 0001  ld   $01
              5a86 002b  ld   $2b
              5a87 0082  ld   $82
              5a88 0085  ld   $85
              5a89 00a0  ld   $a0
              5a8a 000b  ld   $0b
              5a8b 000b  ld   $0b
              5a8c 00a0  ld   $a0
              5a8d 005f  ld   $5f
              5a8e 0059  ld   $59
              5a8f 000e  ld   $0e
              5a90 0085  ld   $85
              5a91 00ac  ld   $ac
              5a92 0062  ld   $62
              5a93 002b  ld   $2b
              5a94 00ea  ld   $ea
              5a95 0021  ld   $21
              5a96 003c  ld   $3c
              5a97 00b8  ld   $b8
              5a98 00ea  ld   $ea
              5a99 0035  ld   $35
              5a9a 0056  ld   $56
              5a9b 00b0  ld   $b0
              5a9c 0059  ld   $59
              5a9d 0000  ld   $00
              5a9e 002b  ld   $2b
              5a9f 003c  ld   $3c
              5aa0 0085  ld   $85
              5aa1 00a4  ld   $a4
              5aa2 0004  ld   $04
              5aa3 0063  ld   $63
              5aa4 00ff  ld   $ff
              5aa5 0075  ld   $75
              5aa6 0021  ld   $21
              5aa7 003c  ld   $3c
              5aa8 00e6  ld   $e6
              5aa9 0001  ld   $01
              5aaa 002b  ld   $2b
              5aab 003c  ld   $3c
              5aac 0021  ld   $21
              5aad 003c  ld   $3c
              5aae 0035  ld   $35
              5aaf 0050  ld   $50
              5ab0 00c4  ld   $c4
              5ab1 0085  ld   $85
              5ab2 00d3  ld   $d3
              5ab3 000b  ld   $0b
              5ab4 0021  ld   $21
              5ab5 0038  ld   $38
              5ab6 00e6  ld   $e6
              5ab7 0001  ld   $01
              5ab8 002b  ld   $2b
              5ab9 0082  ld   $82
              5aba 0059  ld   $59
              5abb 000e  ld   $0e
              5abc 0085  ld   $85
              5abd 00ac  ld   $ac
              5abe 0062  ld   $62
              5abf 002b  ld   $2b
              5ac0 003c  ld   $3c
              5ac1 0085  ld   $85
              5ac2 00a4  ld   $a4
              5ac3 0004  ld   $04
              5ac4 0063  ld   $63
              5ac5 00ff  ld   $ff
              5ac6 0075  ld   $75
              5ac7 0021  ld   $21
              5ac8 0044  ld   $44
              5ac9 00e6  ld   $e6
              5aca 0001  ld   $01
              5acb 00ad  ld   $ad
              5acc 002b  ld   $2b
              5acd 0076  ld   $76
              5ace 0021  ld   $21
              5acf 0076  ld   $76
              5ad0 008c  ld   $8c
              5ad1 0001  ld   $01
              5ad2 0035  ld   $35
              5ad3 0072  ld   $72
              5ad4 00ec  ld   $ec
              5ad5 0059  ld   $59
              5ad6 0000  ld   $00
              5ad7 002b  ld   $2b
              5ad8 0046  ld   $46
              5ad9 0085  ld   $85
              5ada 00b5  ld   $b5
              5adb 0008  ld   $08
              5adc 0021  ld   $21
              5add 0076  ld   $76
              5ade 008c  ld   $8c
              5adf 0003  ld   $03
              5ae0 0035  ld   $35
              5ae1 003f  ld   $3f
              5ae2 00f6  ld   $f6
              5ae3 0085  ld   $85
              5ae4 00ab  ld   $ab
              5ae5 000c  ld   $0c
              5ae6 0059  ld   $59
              5ae7 0002  ld   $02
              5ae8 002b  ld   $2b
              5ae9 0046  ld   $46
              5aea 0085  ld   $85
              5aeb 00a0  ld   $a0
              5aec 000c  ld   $0c
              5aed 000c  ld   $0c
              5aee 00a0  ld   $a0
              5aef 005d  ld   $5d
              5af0 0011  ld   $11
              5af1 00fe  ld   $fe
              5af2 007c  ld   $7c
              5af3 002b  ld   $2b
              5af4 0084  ld   $84
              5af5 0011  ld   $11
              5af6 00a0  ld   $a0
              5af7 007a  ld   $7a
              5af8 0085  ld   $85
              5af9 00d2  ld   $d2
              5afa 0061  ld   $61
              5afb fe00  bra  ac          ;+-----------------------------------+
              5afc fcfd  bra  $5afd       ;|                                   |
              5afd 1418  ld   $18,y       ;| Trampoline for page $5a00 lookups |
              5afe e006  jmp  y,$06       ;|                                   |
              5aff c218  st   [$18]       ;+-----------------------------------+
              5b00 0021  ld   $21
              5b01 0076  ld   $76
              5b02 008c  ld   $8c
              5b03 0002  ld   $02
              5b04 0035  ld   $35
              5b05 0072  ld   $72
              5b06 00be  ld   $be
              5b07 0059  ld   $59
              5b08 0001  ld   $01
              5b09 002b  ld   $2b
              5b0a 0046  ld   $46
              5b0b 0021  ld   $21
              5b0c 0044  ld   $44
              5b0d 002b  ld   $2b
              5b0e 0084  ld   $84
              5b0f 0011  ld   $11
              5b10 00a0  ld   $a0
              5b11 007a  ld   $7a
              5b12 0085  ld   $85
              5b13 00d2  ld   $d2
              5b14 0061  ld   $61
              5b15 0063  ld   $63
              5b16 00ff  ld   $ff
              5b17 0075  ld   $75
              5b18 0021  ld   $21
              5b19 0070  ld   $70
              5b1a 002b  ld   $2b
              5b1b 0022  ld   $22
              5b1c 0059  ld   $59
              5b1d 0048  ld   $48
              5b1e 002b  ld   $2b
              5b1f 0024  ld   $24
              5b20 0059  ld   $59
              5b21 00cf  ld   $cf
              5b22 005e  ld   $5e
              5b23 0027  ld   $27
              5b24 00b4  ld   $b4
              5b25 00fe  ld   $fe
              5b26 001a  ld   $1a
              5b27 0048  ld   $48
              5b28 0035  ld   $35
              5b29 0072  ld   $72
              5b2a 00c5  ld   $c5
              5b2b 0059  ld   $59
              5b2c 0002  ld   $02
              5b2d 002b  ld   $2b
              5b2e 0082  ld   $82
              5b2f 0085  ld   $85
              5b30 00cc  ld   $cc
              5b31 0063  ld   $63
              5b32 0063  ld   $63
              5b33 00ff  ld   $ff
              5b34 0075  ld   $75
              5b35 0059  ld   $59
              5b36 0001  ld   $01
              5b37 002b  ld   $2b
              5b38 0034  ld   $34
              5b39 0011  ld   $11
              5b3a 00ef  ld   $ef
              5b3b 007c  ld   $7c
              5b3c 002b  ld   $2b
              5b3d 0082  ld   $82
              5b3e 0059  ld   $59
              5b3f 0006  ld   $06
              5b40 00f0  ld   $f0
              5b41 0082  ld   $82
              5b42 0085  ld   $85
              5b43 001f  ld   $1f
              5b44 0003  ld   $03
              5b45 0085  ld   $85
              5b46 00b7  ld   $b7
              5b47 0061  ld   $61
              5b48 0063  ld   $63
              5b49 00ff  ld   $ff
              5b4a 0075  ld   $75
              5b4b 0059  ld   $59
              5b4c 0001  ld   $01
              5b4d 002b  ld   $2b
              5b4e 0034  ld   $34
              5b4f 0085  ld   $85
              5b50 00a0  ld   $a0
              5b51 000d  ld   $0d
              5b52 000d  ld   $0d
              5b53 00a0  ld   $a0
              5b54 005e  ld   $5e
              5b55 0011  ld   $11
              5b56 00ef  ld   $ef
              5b57 007c  ld   $7c
              5b58 002b  ld   $2b
              5b59 0082  ld   $82
              5b5a 0059  ld   $59
              5b5b 0001  ld   $01
              5b5c 00f0  ld   $f0
              5b5d 0082  ld   $82
              5b5e 0085  ld   $85
              5b5f 001f  ld   $1f
              5b60 0003  ld   $03
              5b61 0063  ld   $63
              5b62 00ff  ld   $ff
              5b63 0075  ld   $75
              5b64 0059  ld   $59
              5b65 0001  ld   $01
              5b66 002b  ld   $2b
              5b67 0034  ld   $34
              5b68 0011  ld   $11
              5b69 00ef  ld   $ef
              5b6a 007c  ld   $7c
              5b6b 002b  ld   $2b
              5b6c 0082  ld   $82
              5b6d 0059  ld   $59
              5b6e 0004  ld   $04
              5b6f 00f0  ld   $f0
              5b70 0082  ld   $82
              5b71 0085  ld   $85
              5b72 001f  ld   $1f
              5b73 0003  ld   $03
              5b74 0063  ld   $63
              5b75 00ff  ld   $ff
              5b76 0075  ld   $75
              5b77 0059  ld   $59
              5b78 0001  ld   $01
              5b79 002b  ld   $2b
              5b7a 0034  ld   $34
              5b7b 0011  ld   $11
              5b7c 00ef  ld   $ef
              5b7d 007c  ld   $7c
              5b7e 002b  ld   $2b
              5b7f 0082  ld   $82
              5b80 0059  ld   $59
              5b81 0005  ld   $05
              5b82 00f0  ld   $f0
              5b83 0082  ld   $82
              5b84 0085  ld   $85
              5b85 001f  ld   $1f
              5b86 0003  ld   $03
              5b87 0085  ld   $85
              5b88 00c2  ld   $c2
              5b89 000c  ld   $0c
              5b8a 0063  ld   $63
              5b8b 00ff  ld   $ff
              5b8c 0075  ld   $75
              5b8d 0059  ld   $59
              5b8e 0034  ld   $34
              5b8f 002b  ld   $2b
              5b90 009c  ld   $9c
              5b91 0085  ld   $85
              5b92 00a4  ld   $a4
              5b93 0063  ld   $63
              5b94 0085  ld   $85
              5b95 0078  ld   $78
              5b96 0005  ld   $05
              5b97 0011  ld   $11
              5b98 00ef  ld   $ef
              5b99 007c  ld   $7c
              5b9a 002b  ld   $2b
              5b9b 0032  ld   $32
              5b9c 0059  ld   $59
              5b9d 0002  ld   $02
              5b9e 002b  ld   $2b
              5b9f 0082  ld   $82
              5ba0 0085  ld   $85
              5ba1 00c8  ld   $c8
              5ba2 0061  ld   $61
              5ba3 0011  ld   $11
              5ba4 0020  ld   $20
              5ba5 003f  ld   $3f
              5ba6 002b  ld   $2b
              5ba7 00a2  ld   $a2
              5ba8 0085  ld   $85
              5ba9 00a3  ld   $a3
              5baa 0066  ld   $66
              5bab 0085  ld   $85
              5bac 00cd  ld   $cd
              5bad 0064  ld   $64
              5bae 0063  ld   $63
              5baf 00ff  ld   $ff
              5bb0 0085  ld   $85
              5bb1 00a0  ld   $a0
              5bb2 000e  ld   $0e
              5bb3 000e  ld   $0e
              5bb4 00a0  ld   $a0
              5bb5 0002  ld   $02
              5bb6 00b4  ld   $b4
              5bb7 0080  ld   $80
              5bb8 0061  ld   $61
              5bb9 00b7  ld   $b7
              5bba 0048  ld   $48
              5bbb 001a  ld   $1a
              5bbc 0009  ld   $09
              5bbd 008c  ld   $8c
              5bbe 00ee  ld   $ee
              5bbf 0035  ld   $35
              5bc0 0072  ld   $72
              5bc1 00b5  ld   $b5
              5bc2 00ff  ld   $ff
              5bc3 0059  ld   $59
              5bc4 00ef  ld   $ef
              5bc5 002b  ld   $2b
              5bc6 0022  ld   $22
              5bc7 0021  ld   $21
              5bc8 0082  ld   $82
              5bc9 00b4  ld   $b4
              5bca 00e6  ld   $e6
              5bcb 00ff  ld   $ff
              5bcc 0011  ld   $11
              5bcd 0000  ld   $00
              5bce 000b  ld   $0b
              5bcf 002b  ld   $2b
              5bd0 0022  ld   $22
              5bd1 0021  ld   $21
              5bd2 0082  ld   $82
              5bd3 00b4  ld   $b4
              5bd4 00e6  ld   $e6
              5bd5 00ff  ld   $ff
              5bd6 002b  ld   $2b
              5bd7 0086  ld   $86
              5bd8 0021  ld   $21
              5bd9 0084  ld   $84
              5bda 00ad  ld   $ad
              5bdb 00f0  ld   $f0
              5bdc 0086  ld   $86
              5bdd 0093  ld   $93
              5bde 0084  ld   $84
              5bdf 0093  ld   $93
              5be0 0086  ld   $86
              5be1 0035  ld   $35
              5be2 0072  ld   $72
              5be3 00d2  ld   $d2
              5be4 00ff  ld   $ff
              5be5 0075  ld   $75
              5be6 0085  ld   $85
              5be7 00a0  ld   $a0
              5be8 0062  ld   $62
              5be9 0011  ld   $11
              5bea 0003  ld   $03
              5beb 000b  ld   $0b
              5bec 002b  ld   $2b
              5bed 0022  ld   $22
              5bee 001a  ld   $1a
              5bef 00a2  ld   $a2
              5bf0 005e  ld   $5e
              5bf1 0025  ld   $25
              5bf2 0063  ld   $63
              5bf3 00ff  ld   $ff
              5bf4 002b  ld   $2b
              5bf5 0084  ld   $84
              5bf6 0021  ld   $21
              5bf7 0082  ld   $82
              5bf8 00b8  ld   $b8
              5bf9 0084  ld   $84
              5bfa 0035  ld   $35
              5bfb fe00  bra  ac          ;+-----------------------------------+
              5bfc fcfd  bra  $5bfd       ;|                                   |
              5bfd 1418  ld   $18,y       ;| Trampoline for page $5b00 lookups |
              5bfe e006  jmp  y,$06       ;|                                   |
              5bff c218  st   [$18]       ;+-----------------------------------+
              5c00 0053  ld   $53
              5c01 00fa  ld   $fa
              5c02 0021  ld   $21
              5c03 0084  ld   $84
              5c04 00ff  ld   $ff
              5c05 0021  ld   $21
              5c06 0082  ld   $82
              5c07 00ff  ld   $ff
              5c08 0062  ld   $62
              5c09 00a0  ld   $a0
              5c0a 005f  ld   $5f
              5c0b 0059  ld   $59
              5c0c 0002  ld   $02
              5c0d 002b  ld   $2b
              5c0e 00a4  ld   $a4
              5c0f 0011  ld   $11
              5c10 00fd  ld   $fd
              5c11 00ff  ld   $ff
              5c12 00f8  ld   $f8
              5c13 00aa  ld   $aa
              5c14 002b  ld   $2b
              5c15 00aa  ld   $aa
              5c16 00ff  ld   $ff
              5c17 002b  ld   $2b
              5c18 0084  ld   $84
              5c19 0021  ld   $21
              5c1a 0082  ld   $82
              5c1b 00b8  ld   $b8
              5c1c 0084  ld   $84
              5c1d 0035  ld   $35
              5c1e 0056  ld   $56
              5c1f 00b6  ld   $b6
              5c20 0021  ld   $21
              5c21 0084  ld   $84
              5c22 00ff  ld   $ff
              5c23 0021  ld   $21
              5c24 0082  ld   $82
              5c25 00ff  ld   $ff
              5c26 0011  ld   $11
              5c27 00e1  ld   $e1
              5c28 0004  ld   $04
              5c29 002b  ld   $2b
              5c2a 0022  ld   $22
              5c2b 0021  ld   $21
              5c2c 00a2  ld   $a2
              5c2d 002b  ld   $2b
              5c2e 0024  ld   $24
              5c2f 001a  ld   $1a
              5c30 00a5  ld   $a5
              5c31 00e9  ld   $e9
              5c32 0093  ld   $93
              5c33 0019  ld   $19
              5c34 00ad  ld   $ad
              5c35 005e  ld   $5e
              5c36 0029  ld   $29
              5c37 001a  ld   $1a
              5c38 00a4  ld   $a4
              5c39 005e  ld   $5e
              5c3a 0028  ld   $28
              5c3b 00ff  ld   $ff
              5c3c 0075  ld   $75
              5c3d 002b  ld   $2b
              5c3e 0082  ld   $82
              5c3f 0085  ld   $85
              5c40 00bb  ld   $bb
              5c41 0062  ld   $62
              5c42 0093  ld   $93
              5c43 0082  ld   $82
              5c44 0021  ld   $21
              5c45 0082  ld   $82
              5c46 00ad  ld   $ad
              5c47 0035  ld   $35
              5c48 003f  ld   $3f
              5c49 00e4  ld   $e4
              5c4a 005e  ld   $5e
              5c4b 0092  ld   $92
              5c4c 0085  ld   $85
              5c4d 00ab  ld   $ab
              5c4e 0068  ld   $68
              5c4f 0090  ld   $90
              5c50 00d5  ld   $d5
              5c51 0063  ld   $63
              5c52 00ff  ld   $ff
              5c53 001a  ld   $1a
              5c54 0021  ld   $21
              5c55 0082  ld   $82
              5c56 00fc  ld   $fc
              5c57 00b8  ld   $b8
              5c58 0082  ld   $82
              5c59 0035  ld   $35
              5c5a 0053  ld   $53
              5c5b 00fc  ld   $fc
              5c5c 0011  ld   $11
              5c5d 0050  ld   $50
              5c5e 0044  ld   $44
              5c5f 002b  ld   $2b
              5c60 0084  ld   $84
              5c61 001a  ld   $1a
              5c62 0086  ld   $86
              5c63 00f0  ld   $f0
              5c64 0084  ld   $84
              5c65 0093  ld   $93
              5c66 0086  ld   $86
              5c67 0090  ld   $90
              5c68 00f4  ld   $f4
              5c69 00ff  ld   $ff
              5c6a 0063  ld   $63
              5c6b 00a4  ld   $a4
              5c6c 005b  ld   $5b
              5c6d 0059  ld   $59
              5c6e 0000  ld   $00
              5c6f 00f3  ld   $f3
              5c70 009c  ld   $9c
              5c71 0093  ld   $93
              5c72 009c  ld   $9c
              5c73 0093  ld   $93
              5c74 009c  ld   $9c
              5c75 001a  ld   $1a
              5c76 009c  ld   $9c
              5c77 008c  ld   $8c
              5c78 0080  ld   $80
              5c79 0035  ld   $35
              5c7a 0072  ld   $72
              5c7b 00a2  ld   $a2
              5c7c 00ff  ld   $ff
              5c7d 001a  ld   $1a
              5c7e 00a4  ld   $a4
              5c7f 00e3  ld   $e3
              5c80 0006  ld   $06
              5c81 005e  ld   $5e
              5c82 00a4  ld   $a4
              5c83 00e6  ld   $e6
              5c84 009a  ld   $9a
              5c85 0035  ld   $35
              5c86 0056  ld   $56
              5c87 00c9  ld   $c9
              5c88 0059  ld   $59
              5c89 0004  ld   $04
              5c8a 00f8  ld   $f8
              5c8b 00aa  ld   $aa
              5c8c 0035  ld   $35
              5c8d 0072  ld   $72
              5c8e 00c9  ld   $c9
              5c8f 0075  ld   $75
              5c90 0085  ld   $85
              5c91 00aa  ld   $aa
              5c92 0067  ld   $67
              5c93 0063  ld   $63
              5c94 00ff  ld   $ff
              5c95 0075  ld   $75
              5c96 0021  ld   $21
              5c97 0082  ld   $82
              5c98 00e6  ld   $e6
              5c99 0001  ld   $01
              5c9a 002b  ld   $2b
              5c9b 0082  ld   $82
              5c9c 0035  ld   $35
              5c9d 0053  ld   $53
              5c9e 00d6  ld   $d6
              5c9f 0063  ld   $63
              5ca0 00ff  ld   $ff
              5ca1 0085  ld   $85
              5ca2 00b7  ld   $b7
              5ca3 0061  ld   $61
              5ca4 001a  ld   $1a
              5ca5 0009  ld   $09
              5ca6 008c  ld   $8c
              5ca7 00ee  ld   $ee
              5ca8 0035  ld   $35
              5ca9 003f  ld   $3f
              5caa 00d9  ld   $d9
              5cab 0090  ld   $90
              5cac 00cb  ld   $cb
              5cad 0075  ld   $75
              5cae 0035  ld   $35
              5caf 003f  ld   $3f
              5cb0 00fb  ld   $fb
              5cb1 005e  ld   $5e
              5cb2 0084  ld   $84
              5cb3 0085  ld   $85
              5cb4 00bb  ld   $bb
              5cb5 0062  ld   $62
              5cb6 0059  ld   $59
              5cb7 0020  ld   $20
              5cb8 002b  ld   $2b
              5cb9 0092  ld   $92
              5cba 0085  ld   $85
              5cbb 00ab  ld   $ab
              5cbc 0068  ld   $68
              5cbd 001a  ld   $1a
              5cbe 0084  ld   $84
              5cbf 00e6  ld   $e6
              5cc0 0001  ld   $01
              5cc1 005e  ld   $5e
              5cc2 0084  ld   $84
              5cc3 0035  ld   $35
              5cc4 0072  ld   $72
              5cc5 00eb  ld   $eb
              5cc6 0063  ld   $63
              5cc7 00ff  ld   $ff
              5cc8 0064  ld   $64
              5cc9 00a0  ld   $a0
              5cca 005f  ld   $5f
              5ccb 002b  ld   $2b
              5ccc 001a  ld   $1a
              5ccd 0059  ld   $59
              5cce 00ad  ld   $ad
              5ccf 002b  ld   $2b
              5cd0 0022  ld   $22
              5cd1 00b4  ld   $b4
              5cd2 00e2  ld   $e2
              5cd3 001a  ld   $1a
              5cd4 00a4  ld   $a4
              5cd5 00e6  ld   $e6
              5cd6 009a  ld   $9a
              5cd7 0035  ld   $35
              5cd8 0056  ld   $56
              5cd9 00b1  ld   $b1
              5cda 0059  ld   $59
              5cdb 0000  ld   $00
              5cdc 005e  ld   $5e
              5cdd 00a4  ld   $a4
              5cde 001a  ld   $1a
              5cdf 00a5  ld   $a5
              5ce0 00e6  ld   $e6
              5ce1 0070  ld   $70
              5ce2 0035  ld   $35
              5ce3 0050  ld   $50
              5ce4 00c3  ld   $c3
              5ce5 0059  ld   $59
              5ce6 0070  ld   $70
              5ce7 005e  ld   $5e
              5ce8 00a5  ld   $a5
              5ce9 0059  ld   $59
              5cea 0002  ld   $02
              5ceb 00fa  ld   $fa
              5cec 00aa  ld   $aa
              5ced 002b  ld   $2b
              5cee 00aa  ld   $aa
              5cef 00ff  ld   $ff
              5cf0 0011  ld   $11
              5cf1 00fd  ld   $fd
              5cf2 00ff  ld   $ff
              5cf3 00f8  ld   $f8
              5cf4 00aa  ld   $aa
              5cf5 002b  ld   $2b
              5cf6 00aa  ld   $aa
              5cf7 00ff  ld   $ff
              5cf8 0075  ld   $75
              5cf9 0085  ld   $85
              5cfa 00e1  ld   $e1
              5cfb fe00  bra  ac          ;+-----------------------------------+
              5cfc fcfd  bra  $5cfd       ;|                                   |
              5cfd 1418  ld   $18,y       ;| Trampoline for page $5c00 lookups |
              5cfe e006  jmp  y,$06       ;|                                   |
              5cff c218  st   [$18]       ;+-----------------------------------+
              5d00 0061  ld   $61
              5d01 0059  ld   $59
              5d02 0008  ld   $08
              5d03 002b  ld   $2b
              5d04 0094  ld   $94
              5d05 0059  ld   $59
              5d06 00a0  ld   $a0
              5d07 005e  ld   $5e
              5d08 0024  ld   $24
              5d09 0059  ld   $59
              5d0a 0000  ld   $00
              5d0b 005e  ld   $5e
              5d0c 0026  ld   $26
              5d0d 001a  ld   $1a
              5d0e 0094  ld   $94
              5d0f 005e  ld   $5e
              5d10 0027  ld   $27
              5d11 00b4  ld   $b4
              5d12 00f3  ld   $f3
              5d13 0059  ld   $59
              5d14 00a0  ld   $a0
              5d15 005e  ld   $5e
              5d16 0024  ld   $24
              5d17 0059  ld   $59
              5d18 0000  ld   $00
              5d19 005e  ld   $5e
              5d1a 0026  ld   $26
              5d1b 0011  ld   $11
              5d1c 0087  ld   $87
              5d1d 0000  ld   $00
              5d1e 00b8  ld   $b8
              5d1f 0094  ld   $94
              5d20 005e  ld   $5e
              5d21 0027  ld   $27
              5d22 00b4  ld   $b4
              5d23 00f3  ld   $f3
              5d24 0093  ld   $93
              5d25 0094  ld   $94
              5d26 001a  ld   $1a
              5d27 0094  ld   $94
              5d28 00e6  ld   $e6
              5d29 0044  ld   $44
              5d2a 0035  ld   $35
              5d2b 0050  ld   $50
              5d2c 00d3  ld   $d3
              5d2d 0063  ld   $63
              5d2e 00ff  ld   $ff
              5d2f 0065  ld   $65
              5d30 00a1  ld   $a1
              5d31 005e  ld   $5e
              5d32 0075  ld   $75
              5d33 0011  ld   $11
              5d34 0003  ld   $03
              5d35 000b  ld   $0b
              5d36 002b  ld   $2b
              5d37 0022  ld   $22
              5d38 001a  ld   $1a
              5d39 00a2  ld   $a2
              5d3a 005e  ld   $5e
              5d3b 0025  ld   $25
              5d3c 0011  ld   $11
              5d3d 0000  ld   $00
              5d3e 0001  ld   $01
              5d3f 00ad  ld   $ad
              5d40 005e  ld   $5e
              5d41 0027  ld   $27
              5d42 0059  ld   $59
              5d43 0008  ld   $08
              5d44 005e  ld   $5e
              5d45 009e  ld   $9e
              5d46 0059  ld   $59
              5d47 00a0  ld   $a0
              5d48 005e  ld   $5e
              5d49 0024  ld   $24
              5d4a 0059  ld   $59
              5d4b 0000  ld   $00
              5d4c 005e  ld   $5e
              5d4d 0026  ld   $26
              5d4e 00b4  ld   $b4
              5d4f 00f3  ld   $f3
              5d50 0093  ld   $93
              5d51 0027  ld   $27
              5d52 001a  ld   $1a
              5d53 009e  ld   $9e
              5d54 00e6  ld   $e6
              5d55 0001  ld   $01
              5d56 0035  ld   $35
              5d57 0072  ld   $72
              5d58 00b1  ld   $b1
              5d59 0085  ld   $85
              5d5a 00bb  ld   $bb
              5d5b 0062  ld   $62
              5d5c 0063  ld   $63
              5d5d 00ff  ld   $ff
              5d5e 0075  ld   $75
              5d5f 0011  ld   $11
              5d60 00a3  ld   $a3
              5d61 0069  ld   $69
              5d62 002b  ld   $2b
              5d63 0086  ld   $86
              5d64 002b  ld   $2b
              5d65 0092  ld   $92
              5d66 0011  ld   $11
              5d67 00f4  ld   $f4
              5d68 0068  ld   $68
              5d69 002b  ld   $2b
              5d6a 0088  ld   $88
              5d6b 0021  ld   $21
              5d6c 0092  ld   $92
              5d6d 00f6  ld   $f6
              5d6e 0035  ld   $35
              5d6f 0072  ld   $72
              5d70 00e7  ld   $e7
              5d71 0021  ld   $21
              5d72 0084  ld   $84
              5d73 0035  ld   $35
              5d74 003f  ld   $3f
              5d75 00e5  ld   $e5
              5d76 00cf  ld   $cf
              5d77 0084  ld   $84
              5d78 0063  ld   $63
              5d79 00ff  ld   $ff
              5d7a 00b8  ld   $b8
              5d7b 0082  ld   $82
              5d7c 0035  ld   $35
              5d7d 003f  ld   $3f
              5d7e 00f2  ld   $f2
              5d7f 0093  ld   $93
              5d80 0092  ld   $92
              5d81 0093  ld   $93
              5d82 0092  ld   $92
              5d83 0090  ld   $90
              5d84 00d8  ld   $d8
              5d85 0021  ld   $21
              5d86 0092  ld   $92
              5d87 00b8  ld   $b8
              5d88 0086  ld   $86
              5d89 0099  ld   $99
              5d8a 0088  ld   $88
              5d8b 00f6  ld   $f6
              5d8c 00cf  ld   $cf
              5d8d 0018  ld   $18
              5d8e 0063  ld   $63
              5d8f 00ff  ld   $ff
              5d90 0066  ld   $66
              5d91 00a3  ld   $a3
              5d92 005c  ld   $5c
              5d93 0075  ld   $75
              5d94 0059  ld   $59
              5d95 0008  ld   $08
              5d96 002b  ld   $2b
              5d97 0098  ld   $98
              5d98 0011  ld   $11
              5d99 0000  ld   $00
              5d9a 0001  ld   $01
              5d9b 002b  ld   $2b
              5d9c 009a  ld   $9a
              5d9d 0021  ld   $21
              5d9e 0098  ld   $98
              5d9f 00f3  ld   $f3
              5da0 009a  ld   $9a
              5da1 0093  ld   $93
              5da2 009a  ld   $9a
              5da3 0093  ld   $93
              5da4 009a  ld   $9a
              5da5 0093  ld   $93
              5da6 0098  ld   $98
              5da7 001a  ld   $1a
              5da8 0098  ld   $98
              5da9 00e6  ld   $e6
              5daa 0080  ld   $80
              5dab 0035  ld   $35
              5dac 0050  ld   $50
              5dad 00ab  ld   $ab
              5dae 0085  ld   $85
              5daf 00a0  ld   $a0
              5db0 0062  ld   $62
              5db1 0063  ld   $63
              5db2 00ff  ld   $ff
              5db3 002b  ld   $2b
              5db4 0094  ld   $94
              5db5 0021  ld   $21
              5db6 0084  ld   $84
              5db7 00ad  ld   $ad
              5db8 002b  ld   $2b
              5db9 0088  ld   $88
              5dba 0021  ld   $21
              5dbb 0094  ld   $94
              5dbc 00ad  ld   $ad
              5dbd 002b  ld   $2b
              5dbe 009c  ld   $9c
              5dbf 0093  ld   $93
              5dc0 0084  ld   $84
              5dc1 0093  ld   $93
              5dc2 0094  ld   $94
              5dc3 0021  ld   $21
              5dc4 0084  ld   $84
              5dc5 00ad  ld   $ad
              5dc6 0035  ld   $35
              5dc7 003f  ld   $3f
              5dc8 00ed  ld   $ed
              5dc9 002b  ld   $2b
              5dca 0082  ld   $82
              5dcb 0021  ld   $21
              5dcc 0094  ld   $94
              5dcd 00ad  ld   $ad
              5dce 00b8  ld   $b8
              5dcf 0082  ld   $82
              5dd0 0035  ld   $35
              5dd1 0050  ld   $50
              5dd2 00fa  ld   $fa
              5dd3 0035  ld   $35
              5dd4 004d  ld   $4d
              5dd5 00ea  ld   $ea
              5dd6 0093  ld   $93
              5dd7 0084  ld   $84
              5dd8 0093  ld   $93
              5dd9 0094  ld   $94
              5dda 0090  ld   $90
              5ddb 00d1  ld   $d1
              5ddc 0059  ld   $59
              5ddd 0000  ld   $00
              5dde 00ff  ld   $ff
              5ddf 0021  ld   $21
              5de0 0088  ld   $88
              5de1 00b8  ld   $b8
              5de2 009c  ld   $9c
              5de3 0035  ld   $35
              5de4 0050  ld   $50
              5de5 00ea  ld   $ea
              5de6 0035  ld   $35
              5de7 004d  ld   $4d
              5de8 00fa  ld   $fa
              5de9 0059  ld   $59
              5dea 0001  ld   $01
              5deb 00ff  ld   $ff
              5dec 0059  ld   $59
              5ded 0002  ld   $02
              5dee 00ff  ld   $ff
              5def 0067  ld   $67
              5df0 00a0  ld   $a0
              5df1 005f  ld   $5f
              5df2 0011  ld   $11
              5df3 0000  ld   $00
              5df4 0006  ld   $06
              5df5 002b  ld   $2b
              5df6 0022  ld   $22
              5df7 0021  ld   $21
              5df8 00a0  ld   $a0
              5df9 00b4  ld   $b4
              5dfa 00f6  ld   $f6
              5dfb fe00  bra  ac          ;+-----------------------------------+
              5dfc fcfd  bra  $5dfd       ;|                                   |
              5dfd 1418  ld   $18,y       ;| Trampoline for page $5d00 lookups |
              5dfe e006  jmp  y,$06       ;|                                   |
              5dff c218  st   [$18]       ;+-----------------------------------+
              5e00 00ff  ld   $ff
              5e01 0059  ld   $59
              5e02 0002  ld   $02
              5e03 005e  ld   $5e
              5e04 00a4  ld   $a4
              5e05 005e  ld   $5e
              5e06 0028  ld   $28
              5e07 0059  ld   $59
              5e08 0001  ld   $01
              5e09 00f8  ld   $f8
              5e0a 00aa  ld   $aa
              5e0b 0035  ld   $35
              5e0c 0072  ld   $72
              5e0d 00b6  ld   $b6
              5e0e 00ff  ld   $ff
              5e0f 0075  ld   $75
              5e10 0059  ld   $59
              5e11 0002  ld   $02
              5e12 00f8  ld   $f8
              5e13 00aa  ld   $aa
              5e14 0035  ld   $35
              5e15 0072  ld   $72
              5e16 00cd  ld   $cd
              5e17 001a  ld   $1a
              5e18 00a5  ld   $a5
              5e19 00e3  ld   $e3
              5e1a 0008  ld   $08
              5e1b 005e  ld   $5e
              5e1c 00a5  ld   $a5
              5e1d 00e6  ld   $e6
              5e1e 0078  ld   $78
              5e1f 0035  ld   $35
              5e20 0050  ld   $50
              5e21 00f8  ld   $f8
              5e22 0059  ld   $59
              5e23 0070  ld   $70
              5e24 005e  ld   $5e
              5e25 00a5  ld   $a5
              5e26 0085  ld   $85
              5e27 00a1  ld   $a1
              5e28 0065  ld   $65
              5e29 0011  ld   $11
              5e2a 0000  ld   $00
              5e2b 0001  ld   $01
              5e2c 002b  ld   $2b
              5e2d 0098  ld   $98
              5e2e 0021  ld   $21
              5e2f 0098  ld   $98
              5e30 00ad  ld   $ad
              5e31 00e3  ld   $e3
              5e32 0008  ld   $08
              5e33 0082  ld   $82
              5e34 007f  ld   $7f
              5e35 00e6  ld   $e6
              5e36 0008  ld   $08
              5e37 0035  ld   $35
              5e38 0053  ld   $53
              5e39 00e3  ld   $e3
              5e3a 00e3  ld   $e3
              5e3b 0008  ld   $08
              5e3c 00e3  ld   $e3
              5e3d 0008  ld   $08
              5e3e 00f0  ld   $f0
              5e3f 0098  ld   $98
              5e40 0093  ld   $93
              5e41 0098  ld   $98
              5e42 0093  ld   $93
              5e43 0098  ld   $98
              5e44 001a  ld   $1a
              5e45 0098  ld   $98
              5e46 00e6  ld   $e6
              5e47 00f0  ld   $f0
              5e48 0035  ld   $35
              5e49 0050  ld   $50
              5e4a 00d5  ld   $d5
              5e4b 0059  ld   $59
              5e4c 0002  ld   $02
              5e4d 00fa  ld   $fa
              5e4e 00aa  ld   $aa
              5e4f 002b  ld   $2b
              5e50 00aa  ld   $aa
              5e51 0085  ld   $85
              5e52 00bb  ld   $bb
              5e53 0062  ld   $62
              5e54 0063  ld   $63
              5e55 00ff  ld   $ff
              5e56 0068  ld   $68
              5e57 00a1  ld   $a1
              5e58 005f  ld   $5f
              5e59 0099  ld   $99
              5e5a 0096  ld   $96
              5e5b 0099  ld   $99
              5e5c 0096  ld   $96
              5e5d 00f6  ld   $f6
              5e5e 0099  ld   $99
              5e5f 0098  ld   $98
              5e60 002b  ld   $2b
              5e61 009e  ld   $9e
              5e62 00ff  ld   $ff
              5e63 001a  ld   $1a
              5e64 0092  ld   $92
              5e65 0082  ld   $82
              5e66 007f  ld   $7f
              5e67 00e6  ld   $e6
              5e68 0052  ld   $52
              5e69 0035  ld   $35
              5e6a 0053  ld   $53
              5e6b 00be  ld   $be
              5e6c 00e3  ld   $e3
              5e6d 0032  ld   $32
              5e6e 0035  ld   $35
              5e6f 0050  ld   $50
              5e70 00f1  ld   $f1
              5e71 002b  ld   $2b
              5e72 0092  ld   $92
              5e73 0011  ld   $11
              5e74 0000  ld   $00
              5e75 0007  ld   $07
              5e76 0090  ld   $90
              5e77 00c3  ld   $c3
              5e78 002b  ld   $2b
              5e79 0092  ld   $92
              5e7a 0011  ld   $11
              5e7b 0000  ld   $00
              5e7c 0008  ld   $08
              5e7d 002b  ld   $2b
              5e7e 0094  ld   $94
              5e7f 001a  ld   $1a
              5e80 0092  ld   $92
              5e81 00e9  ld   $e9
              5e82 00e9  ld   $e9
              5e83 0099  ld   $99
              5e84 0092  ld   $92
              5e85 0099  ld   $99
              5e86 0094  ld   $94
              5e87 002b  ld   $2b
              5e88 0094  ld   $94
              5e89 0059  ld   $59
              5e8a 0005  ld   $05
              5e8b 005e  ld   $5e
              5e8c 0096  ld   $96
              5e8d 0021  ld   $21
              5e8e 0094  ld   $94
              5e8f 007f  ld   $7f
              5e90 0000  ld   $00
              5e91 005e  ld   $5e
              5e92 0026  ld   $26
              5e93 00b4  ld   $b4
              5e94 00cb  ld   $cb
              5e95 0093  ld   $93
              5e96 0094  ld   $94
              5e97 0093  ld   $93
              5e98 0028  ld   $28
              5e99 001a  ld   $1a
              5e9a 0096  ld   $96
              5e9b 00e6  ld   $e6
              5e9c 0001  ld   $01
              5e9d 0035  ld   $35
              5e9e 0072  ld   $72
              5e9f 00d1  ld   $d1
              5ea0 005e  ld   $5e
              5ea1 0026  ld   $26
              5ea2 00b4  ld   $b4
              5ea3 00cb  ld   $cb
              5ea4 0093  ld   $93
              5ea5 0028  ld   $28
              5ea6 0075  ld   $75
              5ea7 0085  ld   $85
              5ea8 00b4  ld   $b4
              5ea9 0063  ld   $63
              5eaa 0063  ld   $63
              5eab 00ff  ld   $ff
              5eac 00ab  ld   $ab
              5ead 000a  ld   $0a
              5eae 00b1  ld   $b1
              5eaf 000a  ld   $0a
              5eb0 00b7  ld   $b7
              5eb1 000a  ld   $0a
              5eb2 00db  ld   $db
              5eb3 000a  ld   $0a
              5eb4 00f2  ld   $f2
              5eb5 000a  ld   $0a
              5eb6 00b7  ld   $b7
              5eb7 000b  ld   $0b
              5eb8 0069  ld   $69
              5eb9 00a3  ld   $a3
              5eba 0021  ld   $21
              5ebb 007f  ld   $7f
              5ebc 0000  ld   $00
              5ebd 000a  ld   $0a
              5ebe 0000  ld   $00
              5ebf 00fe  ld   $fe
              5ec0 0000  ld   $00
              5ec1 00fd  ld   $fd
              5ec2 0000  ld   $00
              5ec3 00fb  ld   $fb
              5ec4 0000  ld   $00
              5ec5 00f7  ld   $f7
              5ec6 0000  ld   $00
              5ec7 0000  ld   $00
              5ec8 0000  ld   $00
              5ec9 0011  ld   $11
              5eca 004c  ld   $4c
              5ecb 006f  ld   $6f
              5ecc 0061  ld   $61
              5ecd 0064  ld   $64
              5ece 0065  ld   $65
              5ecf 0072  ld   $72
              5ed0 0020  ld   $20
              5ed1 006e  ld   $6e
              5ed2 006f  ld   $6f
              5ed3 0074  ld   $74
              5ed4 0020  ld   $20
              5ed5 0066  ld   $66
              5ed6 006f  ld   $6f
              5ed7 0075  ld   $75
              5ed8 006e  ld   $6e
              5ed9 0064  ld   $64
              5eda 0021  ld   $21
              5edb 0000  ld   $00
              5edc 007a  ld   $7a
              5edd 00a0  ld   $a0
              5ede 0002  ld   $02
              5edf 0000  ld   $00
              5ee0 0000  ld   $00
              5ee1 007b  ld   $7b
              5ee2 00a0  ld   $a0
              5ee3 0002  ld   $02
              5ee4 0000  ld   $00
              5ee5 0000  ld   $00
              5ee6 007c  ld   $7c
              5ee7 00a6  ld   $a6
              5ee8 005a  ld   $5a
              5ee9 0006  ld   $06
              5eea 004c  ld   $4c
              5eeb 006f  ld   $6f
              5eec 0061  ld   $61
              5eed 0064  ld   $64
              5eee 0065  ld   $65
              5eef 0072  ld   $72
              5ef0 0000  ld   $00
              5ef1 0000  ld   $00
              5ef2 0000  ld   $00
              * 11 times
              5efb fe00  bra  ac          ;+-----------------------------------+
              5efc fcfd  bra  $5efd       ;|                                   |
              5efd 1418  ld   $18,y       ;| Trampoline for page $5e00 lookups |
              5efe e006  jmp  y,$06       ;|                                   |
              5eff c218  st   [$18]       ;+-----------------------------------+
              5f00 0000  ld   $00
              5f01 0000  ld   $00
              5f02 0000  ld   $00
              * 72 times
              5f48 007d  ld   $7d
              5f49 00a0  ld   $a0
              5f4a 0002  ld   $02
              5f4b 0000  ld   $00
              5f4c 0000  ld   $00
              5f4d 0000  ld   $00
              5f4e 0000  ld   $00         ;End of gbas/browser/Browser_SDCard_ROMv5a_v1.gt1, size 2816
                                          ;+-----------------------------------+
                                          ;| Apps/Mandelbrot/Mandelbrot_v1.gcl |
                                          ;+-----------------------------------+
              5f4f dc53  st   $53,[y,x++] ;'S'
              5f50 dc44  st   $44,[y,x++] ;'D'
              5f51 dc43  st   $43,[y,x++] ;'C'
              5f52 dc61  st   $61,[y,x++] ;'a'
              5f53 dc72  st   $72,[y,x++] ;'r'
              5f54 dc64  st   $64,[y,x++] ;'d'
              5f55 dc00  st   $00,[y,x++] ;'\x00'
              5f56 dc00  st   $00,[y,x++] ;'\x00'
              5f57 004f  ld   $4f
              5f58 c218  st   [$18]
              5f59 0054  ld   $54
              5f5a 14e0  ld   $e0,y
              5f5b e02e  jmp  y,$2e
              5f5c c219  st   [$19]
Mandelbrot:   5f5d 0002  ld   $02         ;| RAM segment address (high byte first)
              5f5e 0000  ld   $00         ;|
              5f5f 00ef  ld   $ef         ;| Length (1..256)
              5f60 00cd  ld   $cd         ;0200 DEF
              5f61 00e8  ld   $e8
              5f62 0075  ld   $75         ;0202 PUSH
              5f63 0059  ld   $59         ;0203 LDI
              5f64 0000  ld   $00
              5f65 002b  ld   $2b         ;0205 STW
              5f66 0030  ld   $30         ;0205 'sign'
              5f67 002b  ld   $2b         ;0207 STW
              5f68 0032  ld   $32         ;0207 'C'
              5f69 00b8  ld   $b8         ;0209 SUBW
              5f6a 0034  ld   $34         ;0209 'A'
              5f6b 0035  ld   $35         ;020b BCC
              5f6c 0056  ld   $56         ;020c LE
              5f6d 0012  ld   $12
              5f6e 002b  ld   $2b         ;020e STW
              5f6f 0034  ld   $34         ;020e 'A'
              5f70 0059  ld   $59         ;0210 LDI
              5f71 0001  ld   $01
              5f72 002b  ld   $2b         ;0212 STW
              5f73 0030  ld   $30         ;0212 'sign'
              5f74 0059  ld   $59         ;0214 LDI
              5f75 0000  ld   $00
              5f76 00b8  ld   $b8         ;0216 SUBW
              5f77 0036  ld   $36         ;0216 'B'
              5f78 0035  ld   $35         ;0218 BCC
              5f79 0056  ld   $56         ;0219 LE
              5f7a 0021  ld   $21
              5f7b 002b  ld   $2b         ;021b STW
              5f7c 0036  ld   $36         ;021b 'B'
              5f7d 0021  ld   $21         ;021d LDW
              5f7e 0030  ld   $30         ;021d 'sign'
              5f7f 008c  ld   $8c         ;021f XORI
              5f80 0001  ld   $01
              5f81 002b  ld   $2b         ;0221 STW
              5f82 0030  ld   $30         ;0221 'sign'
              5f83 0059  ld   $59         ;0223 LDI
              5f84 0007  ld   $07
              5f85 002b  ld   $2b         ;0225 STW
              5f86 0038  ld   $38         ;0225 'shift'
              5f87 0011  ld   $11         ;0227 LDWI
              5f88 0000  ld   $00
              5f89 0006  ld   $06
              5f8a 002b  ld   $2b         ;022a STW
              5f8b 0022  ld   $22
              5f8c 0011  ld   $11         ;022c LDWI
              5f8d 0000  ld   $00
              5f8e 0002  ld   $02
              5f8f 002b  ld   $2b         ;022f STW
              5f90 003a  ld   $3a         ;022f 'bit'
              5f91 0011  ld   $11         ;0231 LDWI
              5f92 0000  ld   $00
              5f93 00c0  ld   $c0
              5f94 0099  ld   $99         ;0234 ADDW
              5f95 0032  ld   $32         ;0234 'C'
              5f96 0035  ld   $35         ;0236 BCC
              5f97 0053  ld   $53         ;0237 GE
              5f98 003e  ld   $3e
              5f99 0021  ld   $21         ;0239 LDW
              5f9a 0032  ld   $32         ;0239 'C'
              5f9b 00e9  ld   $e9         ;023b LSLW
              5f9c 002b  ld   $2b         ;023c STW
              5f9d 0032  ld   $32         ;023c 'C'
              5f9e 0090  ld   $90         ;023e BRA
              5f9f 004a  ld   $4a
              5fa0 0021  ld   $21         ;0240 LDW
              5fa1 0036  ld   $36         ;0240 'B'
              5fa2 00b4  ld   $b4         ;0242 SYS
              5fa3 00f7  ld   $f7
              5fa4 002b  ld   $2b         ;0244 STW
              5fa5 0036  ld   $36         ;0244 'B'
              5fa6 0021  ld   $21         ;0246 LDW
              5fa7 0038  ld   $38         ;0246 'shift'
              5fa8 00e6  ld   $e6         ;0248 SUBI
              5fa9 0001  ld   $01
              5faa 002b  ld   $2b         ;024a STW
              5fab 0038  ld   $38         ;024a 'shift'
              5fac 0021  ld   $21         ;024c LDW
              5fad 0034  ld   $34         ;024c 'A'
              5fae 00b8  ld   $b8         ;024e SUBW
              5faf 003a  ld   $3a         ;024e 'bit'
              5fb0 0035  ld   $35         ;0250 BCC
              5fb1 0050  ld   $50         ;0251 LT
              5fb2 0059  ld   $59
              5fb3 002b  ld   $2b         ;0253 STW
              5fb4 0034  ld   $34         ;0253 'A'
              5fb5 0021  ld   $21         ;0255 LDW
              5fb6 0032  ld   $32         ;0255 'C'
              5fb7 0099  ld   $99         ;0257 ADDW
              5fb8 0036  ld   $36         ;0257 'B'
              5fb9 002b  ld   $2b         ;0259 STW
              5fba 0032  ld   $32         ;0259 'C'
              5fbb 0021  ld   $21         ;025b LDW
              5fbc 003a  ld   $3a         ;025b 'bit'
              5fbd 00b4  ld   $b4         ;025d SYS
              5fbe 00f7  ld   $f7
              5fbf 0035  ld   $35         ;025f BCC
              5fc0 0072  ld   $72         ;0260 NE
              5fc1 002d  ld   $2d
              5fc2 0021  ld   $21         ;0262 LDW
              5fc3 0038  ld   $38         ;0262 'shift'
              5fc4 008c  ld   $8c         ;0264 XORI
              5fc5 0007  ld   $07
              5fc6 0035  ld   $35         ;0266 BCC
              5fc7 0072  ld   $72         ;0267 NE
              5fc8 0072  ld   $72
              5fc9 0011  ld   $11         ;0269 LDWI
              5fca 00b9  ld   $b9
              5fcb 0004  ld   $04
              5fcc 002b  ld   $2b         ;026c STW
              5fcd 0022  ld   $22
              5fce 0021  ld   $21         ;026e LDW
              5fcf 0032  ld   $32         ;026e 'C'
              5fd0 00b4  ld   $b4         ;0270 SYS
              5fd1 0000  ld   $00
              5fd2 0090  ld   $90         ;0272 BRA
              5fd3 00d7  ld   $d7
              5fd4 0021  ld   $21         ;0274 LDW
              5fd5 0038  ld   $38         ;0274 'shift'
              5fd6 008c  ld   $8c         ;0276 XORI
              5fd7 0006  ld   $06
              5fd8 0035  ld   $35         ;0278 BCC
              5fd9 0072  ld   $72         ;0279 NE
              5fda 0084  ld   $84
              5fdb 0011  ld   $11         ;027b LDWI
              5fdc 0087  ld   $87
              5fdd 0006  ld   $06
              5fde 002b  ld   $2b         ;027e STW
              5fdf 0022  ld   $22
              5fe0 0021  ld   $21         ;0280 LDW
              5fe1 0032  ld   $32         ;0280 'C'
              5fe2 00b4  ld   $b4         ;0282 SYS
              5fe3 00f7  ld   $f7
              5fe4 0090  ld   $90         ;0284 BRA
              5fe5 00d7  ld   $d7
              5fe6 0021  ld   $21         ;0286 LDW
              5fe7 0038  ld   $38         ;0286 'shift'
              5fe8 008c  ld   $8c         ;0288 XORI
              5fe9 0005  ld   $05
              5fea 0035  ld   $35         ;028a BCC
              5feb 0072  ld   $72         ;028b NE
              5fec 0096  ld   $96
              5fed 0011  ld   $11         ;028d LDWI
              5fee 006d  ld   $6d
              5fef 0006  ld   $06
              5ff0 002b  ld   $2b         ;0290 STW
              5ff1 0022  ld   $22
              5ff2 0021  ld   $21         ;0292 LDW
              5ff3 0032  ld   $32         ;0292 'C'
              5ff4 00b4  ld   $b4         ;0294 SYS
              5ff5 00f6  ld   $f6
              5ff6 0090  ld   $90         ;0296 BRA
              5ff7 00d7  ld   $d7
              5ff8 0021  ld   $21         ;0298 LDW
              5ff9 0038  ld   $38         ;0298 'shift'
              5ffa 008c  ld   $8c         ;029a XORI
              5ffb fe00  bra  ac          ;+-----------------------------------+
              5ffc fcfd  bra  $5ffd       ;|                                   |
              5ffd 1418  ld   $18,y       ;| Trampoline for page $5f00 lookups |
              5ffe e006  jmp  y,$06       ;|                                   |
              5fff c218  st   [$18]       ;+-----------------------------------+
              6000 0004  ld   $04
              6001 0035  ld   $35         ;029c BCC
              6002 0072  ld   $72         ;029d NE
              6003 00a8  ld   $a8
              6004 0011  ld   $11         ;029f LDWI
              6005 0052  ld   $52
              6006 0006  ld   $06
              6007 002b  ld   $2b         ;02a2 STW
              6008 0022  ld   $22
              6009 0021  ld   $21         ;02a4 LDW
              600a 0032  ld   $32         ;02a4 'C'
              600b 00b4  ld   $b4         ;02a6 SYS
              600c 00f6  ld   $f6
              600d 0090  ld   $90         ;02a8 BRA
              600e 00d7  ld   $d7
              600f 0021  ld   $21         ;02aa LDW
              6010 0038  ld   $38         ;02aa 'shift'
              6011 008c  ld   $8c         ;02ac XORI
              6012 0003  ld   $03
              6013 0035  ld   $35         ;02ae BCC
              6014 0072  ld   $72         ;02af NE
              6015 00ba  ld   $ba
              6016 0011  ld   $11         ;02b1 LDWI
              6017 0036  ld   $36
              6018 0006  ld   $06
              6019 002b  ld   $2b         ;02b4 STW
              601a 0022  ld   $22
              601b 0021  ld   $21         ;02b6 LDW
              601c 0032  ld   $32         ;02b6 'C'
              601d 00b4  ld   $b4         ;02b8 SYS
              601e 00f5  ld   $f5
              601f 0090  ld   $90         ;02ba BRA
              6020 00d7  ld   $d7
              6021 0021  ld   $21         ;02bc LDW
              6022 0038  ld   $38         ;02bc 'shift'
              6023 008c  ld   $8c         ;02be XORI
              6024 0002  ld   $02
              6025 0035  ld   $35         ;02c0 BCC
              6026 0072  ld   $72         ;02c1 NE
              6027 00cc  ld   $cc
              6028 0011  ld   $11         ;02c3 LDWI
              6029 0019  ld   $19
              602a 0006  ld   $06
              602b 002b  ld   $2b         ;02c6 STW
              602c 0022  ld   $22
              602d 0021  ld   $21         ;02c8 LDW
              602e 0032  ld   $32         ;02c8 'C'
              602f 00b4  ld   $b4         ;02ca SYS
              6030 00f5  ld   $f5
              6031 0090  ld   $90         ;02cc BRA
              6032 00d7  ld   $d7
              6033 0021  ld   $21         ;02ce LDW
              6034 0038  ld   $38         ;02ce 'shift'
              6035 008c  ld   $8c         ;02d0 XORI
              6036 0001  ld   $01
              6037 0035  ld   $35         ;02d2 BCC
              6038 0072  ld   $72         ;02d3 NE
              6039 00d7  ld   $d7
              603a 0021  ld   $21         ;02d5 LDW
              603b 0032  ld   $32         ;02d5 'C'
              603c 00b4  ld   $b4         ;02d7 SYS
              603d 00f7  ld   $f7
              603e 002b  ld   $2b         ;02d9 STW
              603f 0032  ld   $32         ;02d9 'C'
              6040 0021  ld   $21         ;02db LDW
              6041 0030  ld   $30         ;02db 'sign'
              6042 0035  ld   $35         ;02dd BCC
              6043 003f  ld   $3f         ;02de EQ
              6044 00e4  ld   $e4
              6045 0059  ld   $59         ;02e0 LDI
              6046 0000  ld   $00
              6047 00b8  ld   $b8         ;02e2 SUBW
              6048 0032  ld   $32         ;02e2 'C'
              6049 0090  ld   $90         ;02e4 BRA
              604a 00e6  ld   $e6
              604b 0021  ld   $21         ;02e6 LDW
              604c 0032  ld   $32         ;02e6 'C'
              604d 0063  ld   $63         ;02e8 POP
              604e 00ff  ld   $ff         ;02e9 RET
              604f 002b  ld   $2b         ;02ea STW
              6050 003c  ld   $3c         ;02ea 'MulShift7'
              6051 0093  ld   $93         ;02ec INC
              6052 001b  ld   $1b
              6053 00ff  ld   $ff         ;02ee RET
              6054 0003  ld   $03         ;| RAM segment address (high byte first)
              6055 0000  ld   $00         ;|
              6056 00eb  ld   $eb         ;| Length (1..256)
              6057 00cd  ld   $cd         ;0300 DEF
              6058 00e4  ld   $e4
              6059 0075  ld   $75         ;0302 PUSH
              605a 0011  ld   $11         ;0303 LDWI
              605b 0000  ld   $00
              605c 0008  ld   $08
              605d 002b  ld   $2b         ;0306 STW
              605e 003e  ld   $3e         ;0306 'Pen'
              605f 0059  ld   $59         ;0308 LDI
              6060 0078  ld   $78
              6061 002b  ld   $2b         ;030a STW
              6062 0040  ld   $40         ;030a 'Height'
              6063 0059  ld   $59         ;030c LDI
              6064 00a0  ld   $a0
              6065 002b  ld   $2b         ;030e STW
              6066 0042  ld   $42         ;030e 'Width'
              6067 002b  ld   $2b         ;0310 STW
              6068 0044  ld   $44         ;0310 'len'
              6069 002b  ld   $2b         ;0312 STW
              606a 0046  ld   $46         ;0312 'LastPixel'
              606b 0059  ld   $59         ;0314 LDI
              606c 0000  ld   $00
              606d 002b  ld   $2b         ;0316 STW
              606e 0048  ld   $48         ;0316 'DY'
              606f 0021  ld   $21         ;0318 LDW
              6070 004a  ld   $4a         ;0318 'Step'
              6071 002b  ld   $2b         ;031a STW
              6072 004c  ld   $4c         ;031a 'DX'
              6073 0059  ld   $59         ;031c LDI
              6074 003f  ld   $3f
              6075 00f0  ld   $f0         ;031e POKE
              6076 003e  ld   $3e         ;031e 'Pen'
              6077 00cf  ld   $cf         ;0320 CALL
              6078 004e  ld   $4e         ;0320 'UpdateClock'
              6079 0021  ld   $21         ;0322 LDW
              607a 0046  ld   $46         ;0322 'LastPixel'
              607b 0035  ld   $35         ;0324 BCC
              607c 0072  ld   $72         ;0325 NE
              607d 0071  ld   $71
              607e 0021  ld   $21         ;0327 LDW
              607f 0050  ld   $50         ;0327 'Y0'
              6080 002b  ld   $2b         ;0329 STW
              6081 0034  ld   $34         ;0329 'A'
              6082 002b  ld   $2b         ;032b STW
              6083 0036  ld   $36         ;032b 'B'
              6084 00cf  ld   $cf         ;032d CALL
              6085 003c  ld   $3c         ;032d 'MulShift7'
              6086 002b  ld   $2b         ;032f STW
              6087 0052  ld   $52         ;032f 'YY'
              6088 0021  ld   $21         ;0331 LDW
              6089 0054  ld   $54         ;0331 'X0'
              608a 00e3  ld   $e3         ;0333 ADDI
              608b 0080  ld   $80
              608c 002b  ld   $2b         ;0335 STW
              608d 0034  ld   $34         ;0335 'A'
              608e 002b  ld   $2b         ;0337 STW
              608f 0036  ld   $36         ;0337 'B'
              6090 00cf  ld   $cf         ;0339 CALL
              6091 003c  ld   $3c         ;0339 'MulShift7'
              6092 0099  ld   $99         ;033b ADDW
              6093 0052  ld   $52         ;033b 'YY'
              6094 00e6  ld   $e6         ;033d SUBI
              6095 0008  ld   $08
              6096 0035  ld   $35         ;033f BCC
              6097 0053  ld   $53         ;0340 GE
              6098 0044  ld   $44
              6099 0059  ld   $59         ;0342 LDI
              609a 0000  ld   $00
              609b 0090  ld   $90         ;0344 BRA
              609c 006f  ld   $6f
              609d 0021  ld   $21         ;0346 LDW
              609e 0054  ld   $54         ;0346 'X0'
              609f 00e6  ld   $e6         ;0348 SUBI
              60a0 0020  ld   $20
              60a1 002b  ld   $2b         ;034a STW
              60a2 0034  ld   $34         ;034a 'A'
              60a3 002b  ld   $2b         ;034c STW
              60a4 0036  ld   $36         ;034c 'B'
              60a5 00cf  ld   $cf         ;034e CALL
              60a6 003c  ld   $3c         ;034e 'MulShift7'
              60a7 0099  ld   $99         ;0350 ADDW
              60a8 0052  ld   $52         ;0350 'YY'
              60a9 002b  ld   $2b         ;0352 STW
              60aa 0034  ld   $34         ;0352 'A'
              60ab 0099  ld   $99         ;0354 ADDW
              60ac 0054  ld   $54         ;0354 'X0'
              60ad 00e6  ld   $e6         ;0356 SUBI
              60ae 0020  ld   $20
              60af 002b  ld   $2b         ;0358 STW
              60b0 0036  ld   $36         ;0358 'B'
              60b1 00cf  ld   $cf         ;035a CALL
              60b2 003c  ld   $3c         ;035a 'MulShift7'
              60b3 002b  ld   $2b         ;035c STW
              60b4 0056  ld   $56         ;035c 'tmp'
              60b5 0099  ld   $99         ;035e ADDW
              60b6 0056  ld   $56         ;035e 'tmp'
              60b7 002b  ld   $2b         ;0360 STW
              60b8 0056  ld   $56         ;0360 'tmp'
              60b9 0099  ld   $99         ;0362 ADDW
              60ba 0056  ld   $56         ;0362 'tmp'
              60bb 002b  ld   $2b         ;0364 STW
              60bc 0056  ld   $56         ;0364 'tmp'
              60bd 00b8  ld   $b8         ;0366 SUBW
              60be 0052  ld   $52         ;0366 'YY'
              60bf 0035  ld   $35         ;0368 BCC
              60c0 0053  ld   $53         ;0369 GE
              60c1 006d  ld   $6d
              60c2 0059  ld   $59         ;036b LDI
              60c3 0000  ld   $00
              60c4 0090  ld   $90         ;036d BRA
              60c5 006f  ld   $6f
              60c6 00cf  ld   $cf         ;036f CALL
              60c7 0058  ld   $58         ;036f 'CalcPixel'
              60c8 0090  ld   $90         ;0371 BRA
              60c9 0073  ld   $73
              60ca 00cf  ld   $cf         ;0373 CALL
              60cb 0058  ld   $58         ;0373 'CalcPixel'
              60cc 002b  ld   $2b         ;0375 STW
              60cd 0046  ld   $46         ;0375 'LastPixel'
              60ce 00f0  ld   $f0         ;0377 POKE
              60cf 003e  ld   $3e         ;0377 'Pen'
              60d0 0021  ld   $21         ;0379 LDW
              60d1 0044  ld   $44         ;0379 'len'
              60d2 00e6  ld   $e6         ;037b SUBI
              60d3 0001  ld   $01
              60d4 0035  ld   $35         ;037d BCC
              60d5 004d  ld   $4d         ;037e GT
              60d6 009f  ld   $9f
              60d7 0021  ld   $21         ;0380 LDW
              60d8 0048  ld   $48         ;0380 'DY'
              60d9 002b  ld   $2b         ;0382 STW
              60da 0056  ld   $56         ;0382 'tmp'
              60db 0021  ld   $21         ;0384 LDW
              60dc 004c  ld   $4c         ;0384 'DX'
              60dd 002b  ld   $2b         ;0386 STW
              60de 0048  ld   $48         ;0386 'DY'
              60df 0059  ld   $59         ;0388 LDI
              60e0 0000  ld   $00
              60e1 00b8  ld   $b8         ;038a SUBW
              60e2 0056  ld   $56         ;038a 'tmp'
              60e3 002b  ld   $2b         ;038c STW
              60e4 004c  ld   $4c         ;038c 'DX'
              60e5 0021  ld   $21         ;038e LDW
              60e6 004c  ld   $4c         ;038e 'DX'
              60e7 0035  ld   $35         ;0390 BCC
              60e8 003f  ld   $3f         ;0391 EQ
              60e9 0099  ld   $99
              60ea 0021  ld   $21         ;0393 LDW
              60eb 0042  ld   $42         ;0393 'Width'
              60ec 00e6  ld   $e6         ;0395 SUBI
              60ed 0001  ld   $01
              60ee 002b  ld   $2b         ;0397 STW
              60ef 0042  ld   $42         ;0397 'Width'
              60f0 0090  ld   $90         ;0399 BRA
              60f1 009f  ld   $9f
              60f2 0021  ld   $21         ;039b LDW
              60f3 0040  ld   $40         ;039b 'Height'
              60f4 00e6  ld   $e6         ;039d SUBI
              60f5 0001  ld   $01
              60f6 002b  ld   $2b         ;039f STW
              60f7 0040  ld   $40         ;039f 'Height'
              60f8 002b  ld   $2b         ;03a1 STW
              60f9 0044  ld   $44         ;03a1 'len'
              60fa 0035  ld   $35         ;03a3 BCC
              60fb fe00  bra  ac          ;+-----------------------------------+
              60fc fcfd  bra  $60fd       ;|                                   |
              60fd 1418  ld   $18,y       ;| Trampoline for page $6000 lookups |
              60fe e006  jmp  y,$06       ;|                                   |
              60ff c218  st   [$18]       ;+-----------------------------------+
              6100 0056  ld   $56         ;03a4 LE
              6101 00e0  ld   $e0
              6102 0021  ld   $21         ;03a6 LDW
              6103 0054  ld   $54         ;03a6 'X0'
              6104 0099  ld   $99         ;03a8 ADDW
              6105 004c  ld   $4c         ;03a8 'DX'
              6106 002b  ld   $2b         ;03aa STW
              6107 0054  ld   $54         ;03aa 'X0'
              6108 0021  ld   $21         ;03ac LDW
              6109 0050  ld   $50         ;03ac 'Y0'
              610a 0099  ld   $99         ;03ae ADDW
              610b 0048  ld   $48         ;03ae 'DY'
              610c 002b  ld   $2b         ;03b0 STW
              610d 0050  ld   $50         ;03b0 'Y0'
              610e 0021  ld   $21         ;03b2 LDW
              610f 004c  ld   $4c         ;03b2 'DX'
              6110 0035  ld   $35         ;03b4 BCC
              6111 0053  ld   $53         ;03b5 GE
              6112 00bb  ld   $bb
              6113 0021  ld   $21         ;03b7 LDW
              6114 003e  ld   $3e         ;03b7 'Pen'
              6115 00e6  ld   $e6         ;03b9 SUBI
              6116 0001  ld   $01
              6117 002b  ld   $2b         ;03bb STW
              6118 003e  ld   $3e         ;03bb 'Pen'
              6119 0021  ld   $21         ;03bd LDW
              611a 004c  ld   $4c         ;03bd 'DX'
              611b 0035  ld   $35         ;03bf BCC
              611c 0056  ld   $56         ;03c0 LE
              611d 00c6  ld   $c6
              611e 0021  ld   $21         ;03c2 LDW
              611f 003e  ld   $3e         ;03c2 'Pen'
              6120 00e3  ld   $e3         ;03c4 ADDI
              6121 0001  ld   $01
              6122 002b  ld   $2b         ;03c6 STW
              6123 003e  ld   $3e         ;03c6 'Pen'
              6124 0021  ld   $21         ;03c8 LDW
              6125 0048  ld   $48         ;03c8 'DY'
              6126 0035  ld   $35         ;03ca BCC
              6127 0053  ld   $53         ;03cb GE
              6128 00d2  ld   $d2
              6129 0011  ld   $11         ;03cd LDWI
              612a 0000  ld   $00
              612b 00ff  ld   $ff
              612c 0099  ld   $99         ;03d0 ADDW
              612d 003e  ld   $3e         ;03d0 'Pen'
              612e 002b  ld   $2b         ;03d2 STW
              612f 003e  ld   $3e         ;03d2 'Pen'
              6130 0021  ld   $21         ;03d4 LDW
              6131 0048  ld   $48         ;03d4 'DY'
              6132 0035  ld   $35         ;03d6 BCC
              6133 0056  ld   $56         ;03d7 LE
              6134 00de  ld   $de
              6135 0011  ld   $11         ;03d9 LDWI
              6136 0000  ld   $00
              6137 0001  ld   $01
              6138 0099  ld   $99         ;03dc ADDW
              6139 003e  ld   $3e         ;03dc 'Pen'
              613a 002b  ld   $2b         ;03de STW
              613b 003e  ld   $3e         ;03de 'Pen'
              613c 0090  ld   $90         ;03e0 BRA
              613d 001a  ld   $1a
              613e 00cf  ld   $cf         ;03e2 CALL
              613f 005a  ld   $5a         ;03e2 'GrayOut'
              6140 0063  ld   $63         ;03e4 POP
              6141 00ff  ld   $ff         ;03e5 RET
              6142 002b  ld   $2b         ;03e6 STW
              6143 005c  ld   $5c         ;03e6 'CalcSet'
              6144 0093  ld   $93         ;03e8 INC
              6145 001b  ld   $1b
              6146 00ff  ld   $ff         ;03ea RET
              6147 0004  ld   $04         ;| RAM segment address (high byte first)
              6148 0000  ld   $00         ;|
              6149 00f0  ld   $f0         ;| Length (1..256)
              614a 00cd  ld   $cd         ;0400 DEF
              614b 00e4  ld   $e4
              614c 0075  ld   $75         ;0402 PUSH
              614d 0011  ld   $11         ;0403 LDWI
              614e 0000  ld   $00
              614f 0008  ld   $08
              6150 002b  ld   $2b         ;0406 STW
              6151 003e  ld   $3e         ;0406 'Pen'
              6152 0059  ld   $59         ;0408 LDI
              6153 0078  ld   $78
              6154 002b  ld   $2b         ;040a STW
              6155 0040  ld   $40         ;040a 'Height'
              6156 0059  ld   $59         ;040c LDI
              6157 00a0  ld   $a0
              6158 002b  ld   $2b         ;040e STW
              6159 0042  ld   $42         ;040e 'Width'
              615a 002b  ld   $2b         ;0410 STW
              615b 0044  ld   $44         ;0410 'len'
              615c 0059  ld   $59         ;0412 LDI
              615d 0001  ld   $01
              615e 002b  ld   $2b         ;0414 STW
              615f 004c  ld   $4c         ;0414 'DX'
              6160 0059  ld   $59         ;0416 LDI
              6161 0000  ld   $00
              6162 002b  ld   $2b         ;0418 STW
              6163 0048  ld   $48         ;0418 'DY'
              6164 0011  ld   $11         ;041a LDWI
              6165 0000  ld   $00
              6166 0006  ld   $06
              6167 002b  ld   $2b         ;041d STW
              6168 0022  ld   $22
              6169 0059  ld   $59         ;041f LDI
              616a 0000  ld   $00
              616b 002b  ld   $2b         ;0421 STW
              616c 005e  ld   $5e         ;0421 'Level'
              616d 0059  ld   $59         ;0423 LDI
              616e 0020  ld   $20
              616f 002b  ld   $2b         ;0425 STW
              6170 0060  ld   $60         ;0425 'i'
              6171 0021  ld   $21         ;0427 LDW
              6172 003e  ld   $3e         ;0427 'Pen'
              6173 00ad  ld   $ad         ;0429 PEEK
              6174 0082  ld   $82         ;042a ANDI
              6175 003f  ld   $3f
              6176 00b8  ld   $b8         ;042c SUBW
              6177 0060  ld   $60         ;042c 'i'
              6178 0035  ld   $35         ;042e BCC
              6179 0050  ld   $50         ;042f LT
              617a 0042  ld   $42
              617b 00f0  ld   $f0         ;0431 POKE
              617c 003e  ld   $3e         ;0431 'Pen'
              617d 0021  ld   $21         ;0433 LDW
              617e 0060  ld   $60         ;0433 'i'
              617f 0082  ld   $82         ;0435 ANDI
              6180 0015  ld   $15
              6181 0035  ld   $35         ;0437 BCC
              6182 003f  ld   $3f         ;0438 EQ
              6183 003c  ld   $3c
              6184 0059  ld   $59         ;043a LDI
              6185 0001  ld   $01
              6186 0090  ld   $90         ;043c BRA
              6187 003e  ld   $3e
              6188 0059  ld   $59         ;043e LDI
              6189 0002  ld   $02
              618a 0099  ld   $99         ;0440 ADDW
              618b 005e  ld   $5e         ;0440 'Level'
              618c 002b  ld   $2b         ;0442 STW
              618d 005e  ld   $5e         ;0442 'Level'
              618e 0021  ld   $21         ;0444 LDW
              618f 0060  ld   $60         ;0444 'i'
              6190 00b4  ld   $b4         ;0446 SYS
              6191 00f7  ld   $f7
              6192 0035  ld   $35         ;0448 BCC
              6193 004d  ld   $4d         ;0449 GT
              6194 0023  ld   $23
              6195 00f0  ld   $f0         ;044b POKE
              6196 003e  ld   $3e         ;044b 'Pen'
              6197 0021  ld   $21         ;044d LDW
              6198 005e  ld   $5e         ;044d 'Level'
              6199 0035  ld   $35         ;044f BCC
              619a 003f  ld   $3f         ;0450 EQ
              619b 0083  ld   $83
              619c 001a  ld   $1a         ;0452 LD
              619d 003f  ld   $3f         ;0452 'Pen'+1
              619e 0082  ld   $82         ;0454 ANDI
              619f 0001  ld   $01
              61a0 002b  ld   $2b         ;0456 STW
              61a1 0060  ld   $60         ;0456 'i'
              61a2 0099  ld   $99         ;0458 ADDW
              61a3 0060  ld   $60         ;0458 'i'
              61a4 002b  ld   $2b         ;045a STW
              61a5 0060  ld   $60         ;045a 'i'
              61a6 0021  ld   $21         ;045c LDW
              61a7 003e  ld   $3e         ;045c 'Pen'
              61a8 0082  ld   $82         ;045e ANDI
              61a9 0001  ld   $01
              61aa 0099  ld   $99         ;0460 ADDW
              61ab 0060  ld   $60         ;0460 'i'
              61ac 002b  ld   $2b         ;0462 STW
              61ad 0060  ld   $60         ;0462 'i'
              61ae 00cd  ld   $cd         ;0464 DEF
              61af 0068  ld   $68
              61b0 0000  ld   $00
              61b1 0002  ld   $02
              61b2 0003  ld   $03
              61b3 0001  ld   $01
              61b4 0099  ld   $99         ;046a ADDW
              61b5 0060  ld   $60         ;046a 'i'
              61b6 00ad  ld   $ad         ;046c PEEK
              61b7 0099  ld   $99         ;046d ADDW
              61b8 005e  ld   $5e         ;046d 'Level'
              61b9 00e6  ld   $e6         ;046f SUBI
              61ba 0001  ld   $01
              61bb 002b  ld   $2b         ;0471 STW
              61bc 005e  ld   $5e         ;0471 'Level'
              61bd 0021  ld   $21         ;0473 LDW
              61be 005e  ld   $5e         ;0473 'Level'
              61bf 00e6  ld   $e6         ;0475 SUBI
              61c0 0003  ld   $03
              61c1 0035  ld   $35         ;0477 BCC
              61c2 0050  ld   $50         ;0478 LT
              61c3 0083  ld   $83
              61c4 002b  ld   $2b         ;047a STW
              61c5 005e  ld   $5e         ;047a 'Level'
              61c6 0021  ld   $21         ;047c LDW
              61c7 003e  ld   $3e         ;047c 'Pen'
              61c8 00ad  ld   $ad         ;047e PEEK
              61c9 00e3  ld   $e3         ;047f ADDI
              61ca 0015  ld   $15
              61cb 00f0  ld   $f0         ;0481 POKE
              61cc 003e  ld   $3e         ;0481 'Pen'
              61cd 0090  ld   $90         ;0483 BRA
              61ce 0071  ld   $71
              61cf 0021  ld   $21         ;0485 LDW
              61d0 0044  ld   $44         ;0485 'len'
              61d1 00e6  ld   $e6         ;0487 SUBI
              61d2 0001  ld   $01
              61d3 0035  ld   $35         ;0489 BCC
              61d4 004d  ld   $4d         ;048a GT
              61d5 00ab  ld   $ab
              61d6 0021  ld   $21         ;048c LDW
              61d7 0048  ld   $48         ;048c 'DY'
              61d8 002b  ld   $2b         ;048e STW
              61d9 0056  ld   $56         ;048e 'tmp'
              61da 0021  ld   $21         ;0490 LDW
              61db 004c  ld   $4c         ;0490 'DX'
              61dc 002b  ld   $2b         ;0492 STW
              61dd 0048  ld   $48         ;0492 'DY'
              61de 0059  ld   $59         ;0494 LDI
              61df 0000  ld   $00
              61e0 00b8  ld   $b8         ;0496 SUBW
              61e1 0056  ld   $56         ;0496 'tmp'
              61e2 002b  ld   $2b         ;0498 STW
              61e3 004c  ld   $4c         ;0498 'DX'
              61e4 0021  ld   $21         ;049a LDW
              61e5 004c  ld   $4c         ;049a 'DX'
              61e6 0035  ld   $35         ;049c BCC
              61e7 003f  ld   $3f         ;049d EQ
              61e8 00a5  ld   $a5
              61e9 0021  ld   $21         ;049f LDW
              61ea 0042  ld   $42         ;049f 'Width'
              61eb 00e6  ld   $e6         ;04a1 SUBI
              61ec 0001  ld   $01
              61ed 002b  ld   $2b         ;04a3 STW
              61ee 0042  ld   $42         ;04a3 'Width'
              61ef 0090  ld   $90         ;04a5 BRA
              61f0 00ab  ld   $ab
              61f1 0021  ld   $21         ;04a7 LDW
              61f2 0040  ld   $40         ;04a7 'Height'
              61f3 00e6  ld   $e6         ;04a9 SUBI
              61f4 0001  ld   $01
              61f5 002b  ld   $2b         ;04ab STW
              61f6 0040  ld   $40         ;04ab 'Height'
              61f7 002b  ld   $2b         ;04ad STW
              61f8 0044  ld   $44         ;04ad 'len'
              61f9 0035  ld   $35         ;04af BCC
              61fa 0056  ld   $56         ;04b0 LE
              61fb fe00  bra  ac          ;+-----------------------------------+
              61fc fcfd  bra  $61fd       ;|                                   |
              61fd 1418  ld   $18,y       ;| Trampoline for page $6100 lookups |
              61fe e006  jmp  y,$06       ;|                                   |
              61ff c218  st   [$18]       ;+-----------------------------------+
              6200 00e2  ld   $e2
              6201 0021  ld   $21         ;04b2 LDW
              6202 004c  ld   $4c         ;04b2 'DX'
              6203 0035  ld   $35         ;04b4 BCC
              6204 0053  ld   $53         ;04b5 GE
              6205 00bb  ld   $bb
              6206 0021  ld   $21         ;04b7 LDW
              6207 003e  ld   $3e         ;04b7 'Pen'
              6208 00e6  ld   $e6         ;04b9 SUBI
              6209 0001  ld   $01
              620a 002b  ld   $2b         ;04bb STW
              620b 003e  ld   $3e         ;04bb 'Pen'
              620c 0021  ld   $21         ;04bd LDW
              620d 004c  ld   $4c         ;04bd 'DX'
              620e 0035  ld   $35         ;04bf BCC
              620f 0056  ld   $56         ;04c0 LE
              6210 00c6  ld   $c6
              6211 0021  ld   $21         ;04c2 LDW
              6212 003e  ld   $3e         ;04c2 'Pen'
              6213 00e3  ld   $e3         ;04c4 ADDI
              6214 0001  ld   $01
              6215 002b  ld   $2b         ;04c6 STW
              6216 003e  ld   $3e         ;04c6 'Pen'
              6217 0021  ld   $21         ;04c8 LDW
              6218 0048  ld   $48         ;04c8 'DY'
              6219 0035  ld   $35         ;04ca BCC
              621a 0053  ld   $53         ;04cb GE
              621b 00d2  ld   $d2
              621c 0011  ld   $11         ;04cd LDWI
              621d 0000  ld   $00
              621e 00ff  ld   $ff
              621f 0099  ld   $99         ;04d0 ADDW
              6220 003e  ld   $3e         ;04d0 'Pen'
              6221 002b  ld   $2b         ;04d2 STW
              6222 003e  ld   $3e         ;04d2 'Pen'
              6223 0021  ld   $21         ;04d4 LDW
              6224 0048  ld   $48         ;04d4 'DY'
              6225 0035  ld   $35         ;04d6 BCC
              6226 0056  ld   $56         ;04d7 LE
              6227 00de  ld   $de
              6228 0011  ld   $11         ;04d9 LDWI
              6229 0000  ld   $00
              622a 0001  ld   $01
              622b 0099  ld   $99         ;04dc ADDW
              622c 003e  ld   $3e         ;04dc 'Pen'
              622d 002b  ld   $2b         ;04de STW
              622e 003e  ld   $3e         ;04de 'Pen'
              622f 00cf  ld   $cf         ;04e0 CALL
              6230 004e  ld   $4e         ;04e0 'UpdateClock'
              6231 0090  ld   $90         ;04e2 BRA
              6232 0018  ld   $18
              6233 0063  ld   $63         ;04e4 POP
              6234 00ff  ld   $ff         ;04e5 RET
              6235 002b  ld   $2b         ;04e6 STW
              6236 005a  ld   $5a         ;04e6 'GrayOut'
              6237 0011  ld   $11         ;04e8 LDWI
              6238 001a  ld   $1a
              6239 0020  ld   $20
              623a 002b  ld   $2b         ;04eb STW
              623b 0062  ld   $62         ;04eb 'Separator'
              623c 0093  ld   $93         ;04ed INC
              623d 001b  ld   $1b
              623e 00ff  ld   $ff         ;04ef RET
              623f 0005  ld   $05         ;| RAM segment address (high byte first)
              6240 0000  ld   $00         ;|
              6241 00f6  ld   $f6         ;| Length (1..256)
              6242 00cd  ld   $cd         ;0500 DEF
              6243 00a4  ld   $a4
              6244 001a  ld   $1a         ;0502 LD
              6245 000e  ld   $0e
              6246 00b8  ld   $b8         ;0504 SUBW
              6247 0064  ld   $64         ;0504 'LastFrame'
              6248 0082  ld   $82         ;0506 ANDI
              6249 00ff  ld   $ff
              624a 002b  ld   $2b         ;0508 STW
              624b 0066  ld   $66         ;0508 'Elapsed'
              624c 00e6  ld   $e6         ;050a SUBI
              624d 003c  ld   $3c
              624e 0035  ld   $35         ;050c BCC
              624f 0053  ld   $53         ;050d GE
              6250 0019  ld   $19
              6251 001a  ld   $1a         ;050f LD
              6252 0011  ld   $11
              6253 0082  ld   $82         ;0511 ANDI
              6254 0080  ld   $80
              6255 0035  ld   $35         ;0513 BCC
              6256 003f  ld   $3f         ;0514 EQ
              6257 0015  ld   $15
              6258 00ff  ld   $ff         ;0516 RET
              6259 0059  ld   $59         ;0517 LDI
              625a 000f  ld   $0f
              625b 0090  ld   $90         ;0519 BRA
              625c 001b  ld   $1b
              625d 0059  ld   $59         ;051b LDI
              625e 003f  ld   $3f
              625f 002b  ld   $2b         ;051d STW
              6260 0068  ld   $68         ;051d 'Color'
              6261 0075  ld   $75         ;051f PUSH
              6262 0021  ld   $21         ;0520 LDW
              6263 006a  ld   $6a         ;0520 'Clock0'
              6264 0099  ld   $99         ;0522 ADDW
              6265 0066  ld   $66         ;0522 'Elapsed'
              6266 002b  ld   $2b         ;0524 STW
              6267 006a  ld   $6a         ;0524 'Clock0'
              6268 0021  ld   $21         ;0526 LDW
              6269 0064  ld   $64         ;0526 'LastFrame'
              626a 0099  ld   $99         ;0528 ADDW
              626b 0066  ld   $66         ;0528 'Elapsed'
              626c 002b  ld   $2b         ;052a STW
              626d 0064  ld   $64         ;052a 'LastFrame'
              626e 0011  ld   $11         ;052c LDWI
              626f 00f1  ld   $f1
              6270 00f1  ld   $f1
              6271 0099  ld   $99         ;052f ADDW
              6272 006a  ld   $6a         ;052f 'Clock0'
              6273 0035  ld   $35         ;0531 BCC
              6274 0050  ld   $50         ;0532 LT
              6275 0038  ld   $38
              6276 002b  ld   $2b         ;0534 STW
              6277 006a  ld   $6a         ;0534 'Clock0'
              6278 0059  ld   $59         ;0536 LDI
              6279 0001  ld   $01
              627a 00cf  ld   $cf         ;0538 CALL
              627b 006c  ld   $6c         ;0538 'AddMinutes'
              627c 001a  ld   $1a         ;053a LD
              627d 0063  ld   $63         ;053a 'Separator'+1
              627e 00fc  ld   $fc         ;053c XORW
              627f 0062  ld   $62         ;053c 'Separator'
              6280 005e  ld   $5e         ;053e ST
              6281 0063  ld   $63         ;053e 'Separator'+1
              6282 001a  ld   $1a         ;0540 LD
              6283 0011  ld   $11
              6284 008c  ld   $8c         ;0542 XORI
              6285 0077  ld   $77
              6286 0035  ld   $35         ;0544 BCC
              6287 0072  ld   $72         ;0545 NE
              6288 004b  ld   $4b
              6289 002b  ld   $2b         ;0547 STW
              628a 006a  ld   $6a         ;0547 'Clock0'
              628b 0059  ld   $59         ;0549 LDI
              628c 0001  ld   $01
              628d 0090  ld   $90         ;054b BRA
              628e 0070  ld   $70
              628f 008c  ld   $8c         ;054d XORI
              6290 000c  ld   $0c
              6291 0035  ld   $35         ;054f BCC
              6292 0072  ld   $72         ;0550 NE
              6293 0057  ld   $57
              6294 002b  ld   $2b         ;0552 STW
              6295 006a  ld   $6a         ;0552 'Clock0'
              6296 0011  ld   $11         ;0554 LDWI
              6297 00ff  ld   $ff
              6298 00ff  ld   $ff
              6299 0090  ld   $90         ;0557 BRA
              629a 0070  ld   $70
              629b 008c  ld   $8c         ;0559 XORI
              629c 0006  ld   $06
              629d 0035  ld   $35         ;055b BCC
              629e 0072  ld   $72         ;055c NE
              629f 0063  ld   $63
              62a0 002b  ld   $2b         ;055e STW
              62a1 006a  ld   $6a         ;055e 'Clock0'
              62a2 0011  ld   $11         ;0560 LDWI
              62a3 00c4  ld   $c4
              62a4 00ff  ld   $ff
              62a5 0090  ld   $90         ;0563 BRA
              62a6 0070  ld   $70
              62a7 008c  ld   $8c         ;0565 XORI
              62a8 0003  ld   $03
              62a9 0035  ld   $35         ;0567 BCC
              62aa 0072  ld   $72         ;0568 NE
              62ab 006e  ld   $6e
              62ac 002b  ld   $2b         ;056a STW
              62ad 006a  ld   $6a         ;056a 'Clock0'
              62ae 0059  ld   $59         ;056c LDI
              62af 003c  ld   $3c
              62b0 0090  ld   $90         ;056e BRA
              62b1 0070  ld   $70
              62b2 0059  ld   $59         ;0570 LDI
              62b3 0000  ld   $00
              62b4 0035  ld   $35         ;0572 BCC
              62b5 003f  ld   $3f         ;0573 EQ
              62b6 007e  ld   $7e
              62b7 00cf  ld   $cf         ;0575 CALL
              62b8 006c  ld   $6c         ;0575 'AddMinutes'
              62b9 0059  ld   $59         ;0577 LDI
              62ba 0000  ld   $00
              62bb 002b  ld   $2b         ;0579 STW
              62bc 006a  ld   $6a         ;0579 'Clock0'
              62bd 0011  ld   $11         ;057b LDWI
              62be 0000  ld   $00
              62bf 003a  ld   $3a
              62c0 002b  ld   $2b         ;057e STW
              62c1 0062  ld   $62         ;057e 'Separator'
              62c2 001a  ld   $1a         ;0580 LD
              62c3 0011  ld   $11
              62c4 0088  ld   $88         ;0582 ORI
              62c5 000f  ld   $0f
              62c6 005e  ld   $5e         ;0584 ST
              62c7 0011  ld   $11
              62c8 0011  ld   $11         ;0586 LDWI
              62c9 005c  ld   $5c
              62ca 0044  ld   $44
              62cb 002b  ld   $2b         ;0589 STW
              62cc 006e  ld   $6e         ;0589 'Pos'
              62cd 0021  ld   $21         ;058b LDW
              62ce 0070  ld   $70         ;058b 'Clock1'
              62cf 002b  ld   $2b         ;058d STW
              62d0 0072  ld   $72         ;058d 'Value'
              62d1 0011  ld   $11         ;058f LDWI
              62d2 0058  ld   $58
              62d3 0002  ld   $02
              62d4 00cf  ld   $cf         ;0592 CALL
              62d5 0074  ld   $74         ;0592 'NextDigit'
              62d6 0059  ld   $59         ;0594 LDI
              62d7 003c  ld   $3c
              62d8 00cf  ld   $cf         ;0596 CALL
              62d9 0074  ld   $74         ;0596 'NextDigit'
              62da 001a  ld   $1a         ;0598 LD
              62db 0063  ld   $63         ;0598 'Separator'+1
              62dc 00cf  ld   $cf         ;059a CALL
              62dd 0076  ld   $76         ;059a 'PrintChar'
              62de 0059  ld   $59         ;059c LDI
              62df 000a  ld   $0a
              62e0 00cf  ld   $cf         ;059e CALL
              62e1 0074  ld   $74         ;059e 'NextDigit'
              62e2 0059  ld   $59         ;05a0 LDI
              62e3 0001  ld   $01
              62e4 00cf  ld   $cf         ;05a2 CALL
              62e5 0074  ld   $74         ;05a2 'NextDigit'
              62e6 0063  ld   $63         ;05a4 POP
              62e7 00ff  ld   $ff         ;05a5 RET
              62e8 002b  ld   $2b         ;05a6 STW
              62e9 004e  ld   $4e         ;05a6 'UpdateClock'
              62ea 00cd  ld   $cd         ;05a8 DEF
              62eb 00ef  ld   $ef
              62ec 00e6  ld   $e6         ;05aa SUBI
              62ed 0020  ld   $20
              62ee 002b  ld   $2b         ;05ac STW
              62ef 0060  ld   $60         ;05ac 'i'
              62f0 0011  ld   $11         ;05ae LDWI
              62f1 0000  ld   $00
              62f2 0007  ld   $07
              62f3 002b  ld   $2b         ;05b1 STW
              62f4 0078  ld   $78         ;05b1 'fontData'
              62f5 0021  ld   $21         ;05b3 LDW
              62f6 0060  ld   $60         ;05b3 'i'
              62f7 00e9  ld   $e9         ;05b5 LSLW
              62f8 00e9  ld   $e9         ;05b6 LSLW
              62f9 0099  ld   $99         ;05b7 ADDW
              62fa 0060  ld   $60         ;05b7 'i'
              62fb fe00  bra  ac          ;+-----------------------------------+
              62fc fcfd  bra  $62fd       ;|                                   |
              62fd 1418  ld   $18,y       ;| Trampoline for page $6200 lookups |
              62fe e006  jmp  y,$06       ;|                                   |
              62ff c218  st   [$18]       ;+-----------------------------------+
              6300 0099  ld   $99         ;05b9 ADDW
              6301 0078  ld   $78         ;05b9 'fontData'
              6302 002b  ld   $2b         ;05bb STW
              6303 0078  ld   $78         ;05bb 'fontData'
              6304 0011  ld   $11         ;05bd LDWI
              6305 0000  ld   $00
              6306 0008  ld   $08
              6307 0099  ld   $99         ;05c0 ADDW
              6308 006e  ld   $6e         ;05c0 'Pos'
              6309 002b  ld   $2b         ;05c2 STW
              630a 007a  ld   $7a         ;05c2 'q'
              630b 0059  ld   $59         ;05c4 LDI
              630c 0000  ld   $00
              630d 005e  ld   $5e         ;05c6 ST
              630e 0024  ld   $24
              630f 0021  ld   $21         ;05c8 LDW
              6310 0068  ld   $68         ;05c8 'Color'
              6311 005e  ld   $5e         ;05ca ST
              6312 0025  ld   $25
              6313 0021  ld   $21         ;05cc LDW
              6314 006e  ld   $6e         ;05cc 'Pos'
              6315 002b  ld   $2b         ;05ce STW
              6316 0028  ld   $28
              6317 00e3  ld   $e3         ;05d0 ADDI
              6318 0006  ld   $06
              6319 002b  ld   $2b         ;05d2 STW
              631a 006e  ld   $6e         ;05d2 'Pos'
              631b 0011  ld   $11         ;05d4 LDWI
              631c 00e1  ld   $e1
              631d 0004  ld   $04
              631e 002b  ld   $2b         ;05d7 STW
              631f 0022  ld   $22
              6320 0059  ld   $59         ;05d9 LDI
              6321 00fb  ld   $fb
              6322 002b  ld   $2b         ;05db STW
              6323 0060  ld   $60         ;05db 'i'
              6324 0021  ld   $21         ;05dd LDW
              6325 0078  ld   $78         ;05dd 'fontData'
              6326 007f  ld   $7f         ;05df LUP
              6327 0000  ld   $00
              6328 0093  ld   $93         ;05e1 INC
              6329 0078  ld   $78         ;05e1 'fontData'
              632a 005e  ld   $5e         ;05e3 ST
              632b 0026  ld   $26
              632c 00b4  ld   $b4         ;05e5 SYS
              632d 00cc  ld   $cc
              632e 0093  ld   $93         ;05e7 INC
              632f 0028  ld   $28
              6330 0093  ld   $93         ;05e9 INC
              6331 0060  ld   $60         ;05e9 'i'
              6332 0021  ld   $21         ;05eb LDW
              6333 0060  ld   $60         ;05eb 'i'
              6334 0035  ld   $35         ;05ed BCC
              6335 0072  ld   $72         ;05ee NE
              6336 00db  ld   $db
              6337 00ff  ld   $ff         ;05f0 RET
              6338 002b  ld   $2b         ;05f1 STW
              6339 0076  ld   $76         ;05f1 'PrintChar'
              633a 0093  ld   $93         ;05f3 INC
              633b 001b  ld   $1b
              633c 00ff  ld   $ff         ;05f5 RET
              633d 0006  ld   $06         ;| RAM segment address (high byte first)
              633e 0000  ld   $00         ;|
              633f 00fe  ld   $fe         ;| Length (1..256)
              6340 00cd  ld   $cd         ;0600 DEF
              6341 001d  ld   $1d
              6342 0075  ld   $75         ;0602 PUSH
              6343 002b  ld   $2b         ;0603 STW
              6344 007c  ld   $7c         ;0603 'Radix'
              6345 0059  ld   $59         ;0605 LDI
              6346 0030  ld   $30
              6347 002b  ld   $2b         ;0607 STW
              6348 007e  ld   $7e         ;0607 'Digit'
              6349 0021  ld   $21         ;0609 LDW
              634a 0072  ld   $72         ;0609 'Value'
              634b 00b8  ld   $b8         ;060b SUBW
              634c 007c  ld   $7c         ;060b 'Radix'
              634d 0035  ld   $35         ;060d BCC
              634e 0050  ld   $50         ;060e LT
              634f 0017  ld   $17
              6350 002b  ld   $2b         ;0610 STW
              6351 0072  ld   $72         ;0610 'Value'
              6352 0093  ld   $93         ;0612 INC
              6353 007e  ld   $7e         ;0612 'Digit'
              6354 00b8  ld   $b8         ;0614 SUBW
              6355 007c  ld   $7c         ;0614 'Radix'
              6356 0035  ld   $35         ;0616 BCC
              6357 0053  ld   $53         ;0617 GE
              6358 000e  ld   $0e
              6359 0021  ld   $21         ;0619 LDW
              635a 007e  ld   $7e         ;0619 'Digit'
              635b 00cf  ld   $cf         ;061b CALL
              635c 0076  ld   $76         ;061b 'PrintChar'
              635d 0063  ld   $63         ;061d POP
              635e 00ff  ld   $ff         ;061e RET
              635f 002b  ld   $2b         ;061f STW
              6360 0074  ld   $74         ;061f 'NextDigit'
              6361 00cd  ld   $cd         ;0621 DEF
              6362 003a  ld   $3a
              6363 0099  ld   $99         ;0623 ADDW
              6364 0070  ld   $70         ;0623 'Clock1'
              6365 002b  ld   $2b         ;0625 STW
              6366 0070  ld   $70         ;0625 'Clock1'
              6367 0035  ld   $35         ;0627 BCC
              6368 0053  ld   $53         ;0628 GE
              6369 002f  ld   $2f
              636a 0011  ld   $11         ;062a LDWI
              636b 00a0  ld   $a0
              636c 0005  ld   $05
              636d 0099  ld   $99         ;062d ADDW
              636e 0070  ld   $70         ;062d 'Clock1'
              636f 002b  ld   $2b         ;062f STW
              6370 0070  ld   $70         ;062f 'Clock1'
              6371 0011  ld   $11         ;0631 LDWI
              6372 0060  ld   $60
              6373 00fa  ld   $fa
              6374 0099  ld   $99         ;0634 ADDW
              6375 0070  ld   $70         ;0634 'Clock1'
              6376 0035  ld   $35         ;0636 BCC
              6377 0050  ld   $50         ;0637 LT
              6378 0039  ld   $39
              6379 002b  ld   $2b         ;0639 STW
              637a 0070  ld   $70         ;0639 'Clock1'
              637b 00ff  ld   $ff         ;063b RET
              637c 002b  ld   $2b         ;063c STW
              637d 006c  ld   $6c         ;063c 'AddMinutes'
              637e 00cd  ld   $cd         ;063e DEF
              637f 008e  ld   $8e
              6380 0075  ld   $75         ;0640 PUSH
              6381 0059  ld   $59         ;0641 LDI
              6382 0000  ld   $00
              6383 002b  ld   $2b         ;0643 STW
              6384 0081  ld   $81         ;0643 'X'
              6385 002b  ld   $2b         ;0645 STW
              6386 0083  ld   $83         ;0645 'XX'
              6387 002b  ld   $2b         ;0647 STW
              6388 0085  ld   $85         ;0647 'Y'
              6389 002b  ld   $2b         ;0649 STW
              638a 0052  ld   $52         ;0649 'YY'
              638b 002b  ld   $2b         ;064b STW
              638c 0060  ld   $60         ;064b 'i'
              638d 0021  ld   $21         ;064d LDW
              638e 0060  ld   $60         ;064d 'i'
              638f 00e3  ld   $e3         ;064f ADDI
              6390 0001  ld   $01
              6391 002b  ld   $2b         ;0651 STW
              6392 0060  ld   $60         ;0651 'i'
              6393 008c  ld   $8c         ;0653 XORI
              6394 0040  ld   $40
              6395 0035  ld   $35         ;0655 BCC
              6396 003f  ld   $3f         ;0656 EQ
              6397 008c  ld   $8c
              6398 0021  ld   $21         ;0658 LDW
              6399 0081  ld   $81         ;0658 'X'
              639a 002b  ld   $2b         ;065a STW
              639b 0034  ld   $34         ;065a 'A'
              639c 0021  ld   $21         ;065c LDW
              639d 0085  ld   $85         ;065c 'Y'
              639e 0099  ld   $99         ;065e ADDW
              639f 0085  ld   $85         ;065e 'Y'
              63a0 002b  ld   $2b         ;0660 STW
              63a1 0036  ld   $36         ;0660 'B'
              63a2 00cf  ld   $cf         ;0662 CALL
              63a3 003c  ld   $3c         ;0662 'MulShift7'
              63a4 0099  ld   $99         ;0664 ADDW
              63a5 0050  ld   $50         ;0664 'Y0'
              63a6 002b  ld   $2b         ;0666 STW
              63a7 0085  ld   $85         ;0666 'Y'
              63a8 0021  ld   $21         ;0668 LDW
              63a9 0083  ld   $83         ;0668 'XX'
              63aa 00b8  ld   $b8         ;066a SUBW
              63ab 0052  ld   $52         ;066a 'YY'
              63ac 0099  ld   $99         ;066c ADDW
              63ad 0054  ld   $54         ;066c 'X0'
              63ae 002b  ld   $2b         ;066e STW
              63af 0081  ld   $81         ;066e 'X'
              63b0 002b  ld   $2b         ;0670 STW
              63b1 0034  ld   $34         ;0670 'A'
              63b2 002b  ld   $2b         ;0672 STW
              63b3 0036  ld   $36         ;0672 'B'
              63b4 00cf  ld   $cf         ;0674 CALL
              63b5 003c  ld   $3c         ;0674 'MulShift7'
              63b6 002b  ld   $2b         ;0676 STW
              63b7 0083  ld   $83         ;0676 'XX'
              63b8 0021  ld   $21         ;0678 LDW
              63b9 0085  ld   $85         ;0678 'Y'
              63ba 002b  ld   $2b         ;067a STW
              63bb 0034  ld   $34         ;067a 'A'
              63bc 002b  ld   $2b         ;067c STW
              63bd 0036  ld   $36         ;067c 'B'
              63be 00cf  ld   $cf         ;067e CALL
              63bf 003c  ld   $3c         ;067e 'MulShift7'
              63c0 002b  ld   $2b         ;0680 STW
              63c1 0052  ld   $52         ;0680 'YY'
              63c2 0011  ld   $11         ;0682 LDWI
              63c3 0000  ld   $00
              63c4 00fe  ld   $fe
              63c5 0099  ld   $99         ;0685 ADDW
              63c6 0083  ld   $83         ;0685 'XX'
              63c7 0099  ld   $99         ;0687 ADDW
              63c8 0052  ld   $52         ;0687 'YY'
              63c9 0035  ld   $35         ;0689 BCC
              63ca 0056  ld   $56         ;068a LE
              63cb 004b  ld   $4b
              63cc 0021  ld   $21         ;068c LDW
              63cd 0060  ld   $60         ;068c 'i'
              63ce 0063  ld   $63         ;068e POP
              63cf 00ff  ld   $ff         ;068f RET
              63d0 002b  ld   $2b         ;0690 STW
              63d1 0058  ld   $58         ;0690 'CalcPixel'
              63d2 0059  ld   $59         ;0692 LDI
              63d3 0000  ld   $00
              63d4 002b  ld   $2b         ;0694 STW
              63d5 006a  ld   $6a         ;0694 'Clock0'
              63d6 002b  ld   $2b         ;0696 STW
              63d7 0070  ld   $70         ;0696 'Clock1'
              63d8 002b  ld   $2b         ;0698 STW
              63d9 007e  ld   $7e         ;0698 'Digit'
              63da 001a  ld   $1a         ;069a LD
              63db 000e  ld   $0e
              63dc 002b  ld   $2b         ;069c STW
              63dd 0064  ld   $64         ;069c 'LastFrame'
              63de 0011  ld   $11         ;069e LDWI
              63df 004c  ld   $4c
              63e0 00ff  ld   $ff
              63e1 002b  ld   $2b         ;06a1 STW
              63e2 0050  ld   $50         ;06a1 'Y0'
              63e3 0011  ld   $11         ;06a3 LDWI
              63e4 00c0  ld   $c0
              63e5 00fe  ld   $fe
              63e6 002b  ld   $2b         ;06a6 STW
              63e7 0054  ld   $54         ;06a6 'X0'
              63e8 0059  ld   $59         ;06a8 LDI
              63e9 0003  ld   $03
              63ea 002b  ld   $2b         ;06aa STW
              63eb 004a  ld   $4a         ;06aa 'Step'
              63ec 00cf  ld   $cf         ;06ac CALL
              63ed 005c  ld   $5c         ;06ac 'CalcSet'
              63ee 0011  ld   $11         ;06ae LDWI
              63ef 006c  ld   $6c
              63f0 00ff  ld   $ff
              63f1 002b  ld   $2b         ;06b1 STW
              63f2 0050  ld   $50         ;06b1 'Y0'
              63f3 0011  ld   $11         ;06b3 LDWI
              63f4 009e  ld   $9e
              63f5 00ff  ld   $ff
              63f6 002b  ld   $2b         ;06b6 STW
              63f7 0054  ld   $54         ;06b6 'X0'
              63f8 0059  ld   $59         ;06b8 LDI
              63f9 0001  ld   $01
              63fa 002b  ld   $2b         ;06ba STW
              63fb fe00  bra  ac          ;+-----------------------------------+
              63fc fcfd  bra  $63fd       ;|                                   |
              63fd 1418  ld   $18,y       ;| Trampoline for page $6300 lookups |
              63fe e006  jmp  y,$06       ;|                                   |
              63ff c218  st   [$18]       ;+-----------------------------------+
              6400 004a  ld   $4a         ;06ba 'Step'
              6401 00cf  ld   $cf         ;06bc CALL
              6402 005c  ld   $5c         ;06bc 'CalcSet'
              6403 0011  ld   $11         ;06be LDWI
              6404 00c4  ld   $c4
              6405 00ff  ld   $ff
              6406 002b  ld   $2b         ;06c1 STW
              6407 0050  ld   $50         ;06c1 'Y0'
              6408 0011  ld   $11         ;06c3 LDWI
              6409 0000  ld   $00
              640a 00ff  ld   $ff
              640b 002b  ld   $2b         ;06c6 STW
              640c 0054  ld   $54         ;06c6 'X0'
              640d 0059  ld   $59         ;06c8 LDI
              640e 0001  ld   $01
              640f 002b  ld   $2b         ;06ca STW
              6410 004a  ld   $4a         ;06ca 'Step'
              6411 00cf  ld   $cf         ;06cc CALL
              6412 005c  ld   $5c         ;06cc 'CalcSet'
              6413 0011  ld   $11         ;06ce LDWI
              6414 00c0  ld   $c0
              6415 00fe  ld   $fe
              6416 002b  ld   $2b         ;06d1 STW
              6417 0050  ld   $50         ;06d1 'Y0'
              6418 0011  ld   $11         ;06d3 LDWI
              6419 0098  ld   $98
              641a 00fe  ld   $fe
              641b 002b  ld   $2b         ;06d6 STW
              641c 0054  ld   $54         ;06d6 'X0'
              641d 0059  ld   $59         ;06d8 LDI
              641e 0009  ld   $09
              641f 002b  ld   $2b         ;06da STW
              6420 004a  ld   $4a         ;06da 'Step'
              6421 00cf  ld   $cf         ;06dc CALL
              6422 005c  ld   $5c         ;06dc 'CalcSet'
              6423 0059  ld   $59         ;06de LDI
              6424 0000  ld   $00
              6425 002b  ld   $2b         ;06e0 STW
              6426 0050  ld   $50         ;06e0 'Y0'
              6427 0011  ld   $11         ;06e2 LDWI
              6428 009c  ld   $9c
              6429 00ff  ld   $ff
              642a 002b  ld   $2b         ;06e5 STW
              642b 0054  ld   $54         ;06e5 'X0'
              642c 0059  ld   $59         ;06e7 LDI
              642d 0001  ld   $01
              642e 002b  ld   $2b         ;06e9 STW
              642f 004a  ld   $4a         ;06e9 'Step'
              6430 00cf  ld   $cf         ;06eb CALL
              6431 005c  ld   $5c         ;06eb 'CalcSet'
              6432 0011  ld   $11         ;06ed LDWI
              6433 00c4  ld   $c4
              6434 00ff  ld   $ff
              6435 002b  ld   $2b         ;06f0 STW
              6436 0050  ld   $50         ;06f0 'Y0'
              6437 0059  ld   $59         ;06f2 LDI
              6438 0000  ld   $00
              6439 002b  ld   $2b         ;06f4 STW
              643a 0054  ld   $54         ;06f4 'X0'
              643b 0059  ld   $59         ;06f6 LDI
              643c 0001  ld   $01
              643d 002b  ld   $2b         ;06f8 STW
              643e 004a  ld   $4a         ;06f8 'Step'
              643f 00cf  ld   $cf         ;06fa CALL
              6440 005c  ld   $5c         ;06fa 'CalcSet'
              6441 0090  ld   $90         ;06fc BRA
              6442 009c  ld   $9c
              6443 0000  ld   $00         ;End of Apps/Mandelbrot/Mandelbrot_v1.gcl, size 1255
                                          ;+-----------------------------------+
                                          ;| Apps/Loader/Loader_v4.gcl         |
                                          ;+-----------------------------------+
              6444 dc4d  st   $4d,[y,x++] ;'M'
              6445 dc61  st   $61,[y,x++] ;'a'
              6446 dc6e  st   $6e,[y,x++] ;'n'
              6447 dc64  st   $64,[y,x++] ;'d'
              6448 dc65  st   $65,[y,x++] ;'e'
              6449 dc6c  st   $6c,[y,x++] ;'l'
              644a dc62  st   $62,[y,x++] ;'b'
              644b dc72  st   $72,[y,x++] ;'r'
              644c 005d  ld   $5d
              644d c218  st   [$18]
              644e 005f  ld   $5f
              644f 14e0  ld   $e0,y
              6450 e02e  jmp  y,$2e
              6451 c219  st   [$19]
Loader:       6452 0002  ld   $02         ;| RAM segment address (high byte first)
              6453 0000  ld   $00         ;|
              6454 0095  ld   $95         ;| Length (1..256)
              6455 00cd  ld   $cd         ;0200 DEF
              6456 0043  ld   $43
              6457 00e6  ld   $e6         ;0202 SUBI
              6458 0052  ld   $52
              6459 0035  ld   $35         ;0204 BCC
              645a 0053  ld   $53         ;0205 GE
              645b 000e  ld   $0e
              645c 00e3  ld   $e3         ;0207 ADDI
              645d 0032  ld   $32
              645e 002b  ld   $2b         ;0209 STW
              645f 0030  ld   $30         ;0209 'i'
              6460 0011  ld   $11         ;020b LDWI
              6461 0000  ld   $00
              6462 0007  ld   $07
              6463 0090  ld   $90         ;020e BRA
              6464 0013  ld   $13
              6465 002b  ld   $2b         ;0210 STW
              6466 0030  ld   $30         ;0210 'i'
              6467 0011  ld   $11         ;0212 LDWI
              6468 0000  ld   $00
              6469 0008  ld   $08
              646a 002b  ld   $2b         ;0215 STW
              646b 0032  ld   $32         ;0215 'j'
              646c 0021  ld   $21         ;0217 LDW
              646d 0030  ld   $30         ;0217 'i'
              646e 00e9  ld   $e9         ;0219 LSLW
              646f 00e9  ld   $e9         ;021a LSLW
              6470 0099  ld   $99         ;021b ADDW
              6471 0030  ld   $30         ;021b 'i'
              6472 0099  ld   $99         ;021d ADDW
              6473 0032  ld   $32         ;021d 'j'
              6474 002b  ld   $2b         ;021f STW
              6475 0032  ld   $32         ;021f 'j'
              6476 0021  ld   $21         ;0221 LDW
              6477 0034  ld   $34         ;0221 'Pos'
              6478 002b  ld   $2b         ;0223 STW
              6479 0028  ld   $28
              647a 00e3  ld   $e3         ;0225 ADDI
              647b 0006  ld   $06
              647c 002b  ld   $2b         ;0227 STW
              647d 0034  ld   $34         ;0227 'Pos'
              647e 0059  ld   $59         ;0229 LDI
              647f 0005  ld   $05
              6480 002b  ld   $2b         ;022b STW
              6481 0030  ld   $30         ;022b 'i'
              6482 0021  ld   $21         ;022d LDW
              6483 0032  ld   $32         ;022d 'j'
              6484 007f  ld   $7f         ;022f LUP
              6485 0000  ld   $00
              6486 005e  ld   $5e         ;0231 ST
              6487 0026  ld   $26
              6488 00b4  ld   $b4         ;0233 SYS
              6489 00cc  ld   $cc
              648a 0093  ld   $93         ;0235 INC
              648b 0032  ld   $32         ;0235 'j'
              648c 0093  ld   $93         ;0237 INC
              648d 0028  ld   $28
              648e 0021  ld   $21         ;0239 LDW
              648f 0030  ld   $30         ;0239 'i'
              6490 00e6  ld   $e6         ;023b SUBI
              6491 0001  ld   $01
              6492 0035  ld   $35         ;023d BCC
              6493 004d  ld   $4d         ;023e GT
              6494 0029  ld   $29
              6495 005e  ld   $5e         ;0240 ST
              6496 0026  ld   $26
              6497 00b4  ld   $b4         ;0242 SYS
              6498 00cc  ld   $cc
              6499 00ff  ld   $ff         ;0244 RET
              649a 002b  ld   $2b         ;0245 STW
              649b 0036  ld   $36         ;0245 'PrintChar'
              649c 0011  ld   $11         ;0247 LDWI
              649d 00e1  ld   $e1
              649e 0004  ld   $04
              649f 002b  ld   $2b         ;024a STW
              64a0 0022  ld   $22         ;024a '_sysFn'
              64a1 0011  ld   $11         ;024c LDWI
              64a2 0020  ld   $20
              64a3 000f  ld   $0f
              64a4 002b  ld   $2b         ;024f STW
              64a5 0024  ld   $24         ;024f '_sysArgs0'
              64a6 0011  ld   $11         ;0251 LDWI
              64a7 0006  ld   $06
              64a8 0050  ld   $50
              64a9 002b  ld   $2b         ;0254 STW
              64aa 0034  ld   $34         ;0254 'Pos'
              64ab 00cd  ld   $cd         ;0256 DEF
              64ac 0065  ld   $65
              64ad 0020  ld   $20         ;0258 ' '
              64ae 0052  ld   $52         ;0259 'R'
              64af 0065  ld   $65         ;025a 'e'
              64b0 0061  ld   $61         ;025b 'a'
              64b1 0064  ld   $64         ;025c 'd'
              64b2 0079  ld   $79         ;025d 'y'
              64b3 0020  ld   $20         ;025e ' '
              64b4 0074  ld   $74         ;025f 't'
              64b5 006f  ld   $6f         ;0260 'o'
              64b6 0020  ld   $20         ;0261 ' '
              64b7 006c  ld   $6c         ;0262 'l'
              64b8 006f  ld   $6f         ;0263 'o'
              64b9 0061  ld   $61         ;0264 'a'
              64ba 0064  ld   $64         ;0265 'd'
              64bb 0000  ld   $00         ;0266 0
              64bc 002b  ld   $2b         ;0267 STW
              64bd 0038  ld   $38         ;0267 'Text'
              64be 0021  ld   $21         ;0269 LDW
              64bf 0038  ld   $38         ;0269 'Text'
              64c0 00ad  ld   $ad         ;026b PEEK
              64c1 0035  ld   $35         ;026c BCC
              64c2 003f  ld   $3f         ;026d EQ
              64c3 0073  ld   $73
              64c4 0093  ld   $93         ;026f INC
              64c5 0038  ld   $38         ;026f 'Text'
              64c6 00cf  ld   $cf         ;0271 CALL
              64c7 0036  ld   $36         ;0271 'PrintChar'
              64c8 0090  ld   $90         ;0273 BRA
              64c9 0067  ld   $67
              64ca 005e  ld   $5e         ;0275 ST
              64cb 0028  ld   $28
              64cc 0011  ld   $11         ;0277 LDWI
              64cd 000c  ld   $0c
              64ce 0059  ld   $59
              64cf 002b  ld   $2b         ;027a STW
              64d0 003a  ld   $3a         ;027a 'A'
              64d1 0011  ld   $11         ;027c LDWI
              64d2 000c  ld   $0c
              64d3 005b  ld   $5b
              64d4 002b  ld   $2b         ;027f STW
              64d5 003c  ld   $3c         ;027f 'B'
              64d6 0059  ld   $59         ;0281 LDI
              64d7 0067  ld   $67
              64d8 005e  ld   $5e         ;0283 ST
              64d9 0026  ld   $26
              64da 0011  ld   $11         ;0285 LDWI
              64db 0000  ld   $00
              64dc 0040  ld   $40
              64dd 002b  ld   $2b         ;0288 STW
              64de 003e  ld   $3e         ;0288 'NextByteIn_32'
              64df 0011  ld   $11         ;028a LDWI
              64e0 0053  ld   $53
              64e1 0040  ld   $40
              64e2 002b  ld   $2b         ;028d STW
              64e3 0040  ld   $40         ;028d 'PayloadCopy_34'
              64e4 0011  ld   $11         ;028f LDWI
              64e5 000c  ld   $0c
              64e6 005a  ld   $5a
              64e7 002b  ld   $2b         ;0292 STW
              64e8 001a  ld   $1a         ;0292 '_vLR'
              64e9 00ff  ld   $ff         ;0294 RET
              64ea 005a  ld   $5a         ;| RAM segment address (high byte first)
              64eb 000c  ld   $0c         ;|
              64ec 0075  ld   $75         ;| Length (1..256)
              64ed 0021  ld   $21         ;5a0c LDW
              64ee 003c  ld   $3c         ;5a0c 'B'
              64ef 002b  ld   $2b         ;5a0e STW
              64f0 0024  ld   $24         ;5a0e '_sysArgs0'
              64f1 0059  ld   $59         ;5a10 LDI
              64f2 00cf  ld   $cf
              64f3 005e  ld   $5e         ;5a12 ST
              64f4 0027  ld   $27
              64f5 0021  ld   $21         ;5a14 LDW
              64f6 003e  ld   $3e         ;5a14 'NextByteIn_32'
              64f7 002b  ld   $2b         ;5a16 STW
              64f8 0022  ld   $22         ;5a16 '_sysFn'
              64f9 00b4  ld   $b4         ;5a18 SYS
              64fa 00ff  ld   $ff
              64fb fe00  bra  ac          ;+-----------------------------------+
              64fc fcfd  bra  $64fd       ;|                                   |
              64fd 1418  ld   $18,y       ;| Trampoline for page $6400 lookups |
              64fe e006  jmp  y,$06       ;|                                   |
              64ff c218  st   [$18]       ;+-----------------------------------+
              6500 0059  ld   $59         ;5a1a LDI
              6501 00db  ld   $db
              6502 005e  ld   $5e         ;5a1c ST
              6503 0027  ld   $27
              6504 00b4  ld   $b4         ;5a1e SYS
              6505 00ff  ld   $ff
              6506 0059  ld   $59         ;5a20 LDI
              6507 00eb  ld   $eb
              6508 005e  ld   $5e         ;5a22 ST
              6509 0027  ld   $27
              650a 00b4  ld   $b4         ;5a24 SYS
              650b 00ff  ld   $ff
              650c 0059  ld   $59         ;5a26 LDI
              650d 00fb  ld   $fb
              650e 005e  ld   $5e         ;5a28 ST
              650f 0027  ld   $27
              6510 00b4  ld   $b4         ;5a2a SYS
              6511 00ff  ld   $ff
              6512 0021  ld   $21         ;5a2c LDW
              6513 0040  ld   $40         ;5a2c 'PayloadCopy_34'
              6514 002b  ld   $2b         ;5a2e STW
              6515 0022  ld   $22         ;5a2e '_sysFn'
              6516 00b4  ld   $b4         ;5a30 SYS
              6517 00fe  ld   $fe
              6518 0059  ld   $59         ;5a32 LDI
              6519 0002  ld   $02
              651a 005e  ld   $5e         ;5a34 ST
              651b 0027  ld   $27
              651c 0021  ld   $21         ;5a36 LDW
              651d 003e  ld   $3e         ;5a36 'NextByteIn_32'
              651e 002b  ld   $2b         ;5a38 STW
              651f 0022  ld   $22         ;5a38 '_sysFn'
              6520 00b4  ld   $b4         ;5a3a SYS
              6521 00ff  ld   $ff
              6522 0059  ld   $59         ;5a3c LDI
              6523 0006  ld   $06
              6524 005e  ld   $5e         ;5a3e ST
              6525 0027  ld   $27
              6526 0021  ld   $21         ;5a40 LDW
              6527 0040  ld   $40         ;5a40 'PayloadCopy_34'
              6528 002b  ld   $2b         ;5a42 STW
              6529 0022  ld   $22         ;5a42 '_sysFn'
              652a 00b4  ld   $b4         ;5a44 SYS
              652b 00fe  ld   $fe
              652c 0021  ld   $21         ;5a46 LDW
              652d 003e  ld   $3e         ;5a46 'NextByteIn_32'
              652e 002b  ld   $2b         ;5a48 STW
              652f 0022  ld   $22         ;5a48 '_sysFn'
              6530 00b4  ld   $b4         ;5a4a SYS
              6531 00ff  ld   $ff
              6532 001a  ld   $1a         ;5a4c LD
              6533 0027  ld   $27
              6534 00e3  ld   $e3         ;5a4e ADDI
              6535 0004  ld   $04
              6536 005e  ld   $5e         ;5a50 ST
              6537 0027  ld   $27
              6538 008c  ld   $8c         ;5a52 XORI
              6539 00f2  ld   $f2
              653a 0035  ld   $35         ;5a54 BCC
              653b 0072  ld   $72         ;5a55 NE
              653c 003e  ld   $3e
              653d 0059  ld   $59         ;5a57 LDI
              653e 00b9  ld   $b9
              653f 005e  ld   $5e         ;5a59 ST
              6540 0027  ld   $27
              6541 00b4  ld   $b4         ;5a5b SYS
              6542 00ff  ld   $ff
              6543 001a  ld   $1a         ;5a5d LD
              6544 0026  ld   $26
              6545 0035  ld   $35         ;5a5f BCC
              6546 0072  ld   $72         ;5a60 NE
              6547 0064  ld   $64
              6548 0059  ld   $59         ;5a62 LDI
              6549 000c  ld   $0c
              654a 0090  ld   $90         ;5a64 BRA
              654b 0066  ld   $66
              654c 0059  ld   $59         ;5a66 LDI
              654d 0003  ld   $03
              654e 00f0  ld   $f0         ;5a68 POKE
              654f 003a  ld   $3a         ;5a68 'A'
              6550 001a  ld   $1a         ;5a6a LD
              6551 003a  ld   $3a         ;5a6a 'A'
              6552 00e6  ld   $e6         ;5a6c SUBI
              6553 000b  ld   $0b
              6554 0082  ld   $82         ;5a6e ANDI
              6555 007f  ld   $7f
              6556 00e3  ld   $e3         ;5a70 ADDI
              6557 000c  ld   $0c
              6558 005e  ld   $5e         ;5a72 ST
              6559 003a  ld   $3a         ;5a72 'A'
              655a 0059  ld   $59         ;5a74 LDI
              655b 003f  ld   $3f
              655c 00f0  ld   $f0         ;5a76 POKE
              655d 003a  ld   $3a         ;5a76 'A'
              655e 0011  ld   $11         ;5a78 LDWI
              655f 0015  ld   $15
              6560 0040  ld   $40
              6561 002b  ld   $2b         ;5a7b STW
              6562 0022  ld   $22         ;5a7b '_sysFn'
              6563 00b4  ld   $b4         ;5a7d SYS
              6564 00ef  ld   $ef
              6565 0090  ld   $90         ;5a7f BRA
              6566 000a  ld   $0a
              6567 0000  ld   $00         ;End of Apps/Loader/Loader_v4.gcl, size 278
                                          ;+-----------------------------------+
                                          ;| Apps/Credits/Credits_v3.gcl       |
                                          ;+-----------------------------------+
              6568 dc4c  st   $4c,[y,x++] ;'L'
              6569 dc6f  st   $6f,[y,x++] ;'o'
              656a dc61  st   $61,[y,x++] ;'a'
              656b dc64  st   $64,[y,x++] ;'d'
              656c dc65  st   $65,[y,x++] ;'e'
              656d dc72  st   $72,[y,x++] ;'r'
              656e dc00  st   $00,[y,x++] ;'\x00'
              656f dc00  st   $00,[y,x++] ;'\x00'
              6570 0052  ld   $52
              6571 c218  st   [$18]
              6572 0064  ld   $64
              6573 14e0  ld   $e0,y
              6574 e02e  jmp  y,$2e
              6575 c219  st   [$19]
Credits:      6576 0002  ld   $02         ;| RAM segment address (high byte first)
              6577 0000  ld   $00         ;|
              6578 00d4  ld   $d4         ;| Length (1..256)
              6579 00cd  ld   $cd         ;0200 DEF
              657a 0025  ld   $25
              657b 0075  ld   $75         ;0202 PUSH
              657c 0021  ld   $21         ;0203 LDW
              657d 0030  ld   $30         ;0203 'Text'
              657e 00ad  ld   $ad         ;0205 PEEK
              657f 002b  ld   $2b         ;0206 STW
              6580 0032  ld   $32         ;0206 'Char'
              6581 0035  ld   $35         ;0208 BCC
              6582 003f  ld   $3f         ;0209 EQ
              6583 0023  ld   $23
              6584 0093  ld   $93         ;020b INC
              6585 0030  ld   $30         ;020b 'Text'
              6586 0021  ld   $21         ;020d LDW
              6587 0032  ld   $32         ;020d 'Char'
              6588 008c  ld   $8c         ;020f XORI
              6589 000a  ld   $0a
              658a 0035  ld   $35         ;0211 BCC
              658b 0072  ld   $72         ;0212 NE
              658c 001f  ld   $1f
              658d 0059  ld   $59         ;0214 LDI
              658e 0002  ld   $02
              658f 005e  ld   $5e         ;0216 ST
              6590 0034  ld   $34         ;0216 'Pos'
              6591 0011  ld   $11         ;0218 LDWI
              6592 0000  ld   $00
              6593 0008  ld   $08
              6594 0099  ld   $99         ;021b ADDW
              6595 0034  ld   $34         ;021b 'Pos'
              6596 002b  ld   $2b         ;021d STW
              6597 0034  ld   $34         ;021d 'Pos'
              6598 0090  ld   $90         ;021f BRA
              6599 0021  ld   $21
              659a 00cf  ld   $cf         ;0221 CALL
              659b 0036  ld   $36         ;0221 'PrintChar'
              659c 0090  ld   $90         ;0223 BRA
              659d 0001  ld   $01
              659e 0063  ld   $63         ;0225 POP
              659f 00ff  ld   $ff         ;0226 RET
              65a0 002b  ld   $2b         ;0227 STW
              65a1 0038  ld   $38         ;0227 'PrintText'
              65a2 00cd  ld   $cd         ;0229 DEF
              65a3 00cd  ld   $cd
              65a4 0054  ld   $54         ;022b 'T'
              65a5 0068  ld   $68         ;022c 'h'
              65a6 0069  ld   $69         ;022d 'i'
              65a7 0073  ld   $73         ;022e 's'
              65a8 0020  ld   $20         ;022f ' '
              65a9 0047  ld   $47         ;0230 'G'
              65aa 0069  ld   $69         ;0231 'i'
              65ab 0067  ld   $67         ;0232 'g'
              65ac 0061  ld   $61         ;0233 'a'
              65ad 0074  ld   $74         ;0234 't'
              65ae 0072  ld   $72         ;0235 'r'
              65af 006f  ld   $6f         ;0236 'o'
              65b0 006e  ld   $6e         ;0237 'n'
              65b1 0020  ld   $20         ;0238 ' '
              65b2 0054  ld   $54         ;0239 'T'
              65b3 0054  ld   $54         ;023a 'T'
              65b4 004c  ld   $4c         ;023b 'L'
              65b5 0020  ld   $20         ;023c ' '
              65b6 0063  ld   $63         ;023d 'c'
              65b7 006f  ld   $6f         ;023e 'o'
              65b8 006d  ld   $6d         ;023f 'm'
              65b9 0070  ld   $70         ;0240 'p'
              65ba 0075  ld   $75         ;0241 'u'
              65bb 0074  ld   $74         ;0242 't'
              65bc 0065  ld   $65         ;0243 'e'
              65bd 0072  ld   $72         ;0244 'r'
              65be 000a  ld   $0a         ;0245 10
              65bf 006b  ld   $6b         ;0246 'k'
              65c0 0069  ld   $69         ;0247 'i'
              65c1 0074  ld   $74         ;0248 't'
              65c2 0020  ld   $20         ;0249 ' '
              65c3 0077  ld   $77         ;024a 'w'
              65c4 0061  ld   $61         ;024b 'a'
              65c5 0073  ld   $73         ;024c 's'
              65c6 0020  ld   $20         ;024d ' '
              65c7 0062  ld   $62         ;024e 'b'
              65c8 0072  ld   $72         ;024f 'r'
              65c9 006f  ld   $6f         ;0250 'o'
              65ca 0075  ld   $75         ;0251 'u'
              65cb 0067  ld   $67         ;0252 'g'
              65cc 0068  ld   $68         ;0253 'h'
              65cd 0074  ld   $74         ;0254 't'
              65ce 0020  ld   $20         ;0255 ' '
              65cf 0074  ld   $74         ;0256 't'
              65d0 006f  ld   $6f         ;0257 'o'
              65d1 0020  ld   $20         ;0258 ' '
              65d2 0079  ld   $79         ;0259 'y'
              65d3 006f  ld   $6f         ;025a 'o'
              65d4 0075  ld   $75         ;025b 'u'
              65d5 0020  ld   $20         ;025c ' '
              65d6 0062  ld   $62         ;025d 'b'
              65d7 0079  ld   $79         ;025e 'y'
              65d8 000a  ld   $0a         ;025f 10
              65d9 004d  ld   $4d         ;0260 'M'
              65da 0061  ld   $61         ;0261 'a'
              65db 0072  ld   $72         ;0262 'r'
              65dc 0063  ld   $63         ;0263 'c'
              65dd 0065  ld   $65         ;0264 'e'
              65de 006c  ld   $6c         ;0265 'l'
              65df 0020  ld   $20         ;0266 ' '
              65e0 0076  ld   $76         ;0267 'v'
              65e1 0061  ld   $61         ;0268 'a'
              65e2 006e  ld   $6e         ;0269 'n'
              65e3 0020  ld   $20         ;026a ' '
              65e4 004b  ld   $4b         ;026b 'K'
              65e5 0065  ld   $65         ;026c 'e'
              65e6 0072  ld   $72         ;026d 'r'
              65e7 0076  ld   $76         ;026e 'v'
              65e8 0069  ld   $69         ;026f 'i'
              65e9 006e  ld   $6e         ;0270 'n'
              65ea 0063  ld   $63         ;0271 'c'
              65eb 006b  ld   $6b         ;0272 'k'
              65ec 0020  ld   $20         ;0273 ' '
              65ed 0061  ld   $61         ;0274 'a'
              65ee 006e  ld   $6e         ;0275 'n'
              65ef 0064  ld   $64         ;0276 'd'
              65f0 000a  ld   $0a         ;0277 10
              65f1 0057  ld   $57         ;0278 'W'
              65f2 0061  ld   $61         ;0279 'a'
              65f3 006c  ld   $6c         ;027a 'l'
              65f4 0074  ld   $74         ;027b 't'
              65f5 0065  ld   $65         ;027c 'e'
              65f6 0072  ld   $72         ;027d 'r'
              65f7 0020  ld   $20         ;027e ' '
              65f8 0042  ld   $42         ;027f 'B'
              65f9 0065  ld   $65         ;0280 'e'
              65fa 006c  ld   $6c         ;0281 'l'
              65fb fe00  bra  ac          ;+-----------------------------------+
              65fc fcfd  bra  $65fd       ;|                                   |
              65fd 1418  ld   $18,y       ;| Trampoline for page $6500 lookups |
              65fe e006  jmp  y,$06       ;|                                   |
              65ff c218  st   [$18]       ;+-----------------------------------+
              6600 0067  ld   $67         ;0282 'g'
              6601 0065  ld   $65         ;0283 'e'
              6602 0072  ld   $72         ;0284 'r'
              6603 0073  ld   $73         ;0285 's'
              6604 002e  ld   $2e         ;0286 '.'
              6605 000a  ld   $0a         ;0287 10
              6606 000a  ld   $0a         ;0288 10
              6607 0060  ld   $60         ;0289 '`'
              6608 0054  ld   $54         ;028a 'T'
              6609 0065  ld   $65         ;028b 'e'
              660a 0074  ld   $74         ;028c 't'
              660b 0072  ld   $72         ;028d 'r'
              660c 006f  ld   $6f         ;028e 'o'
              660d 006e  ld   $6e         ;028f 'n'
              660e 0069  ld   $69         ;0290 'i'
              660f 0073  ld   $73         ;0291 's'
              6610 0027  ld   $27         ;0292 "'"
              6611 0020  ld   $20         ;0293 ' '
              6612 0069  ld   $69         ;0294 'i'
              6613 0073  ld   $73         ;0295 's'
              6614 0020  ld   $20         ;0296 ' '
              6615 0062  ld   $62         ;0297 'b'
              6616 0079  ld   $79         ;0298 'y'
              6617 0020  ld   $20         ;0299 ' '
              6618 0061  ld   $61         ;029a 'a'
              6619 0074  ld   $74         ;029b 't'
              661a 0036  ld   $36         ;029c '6'
              661b 0037  ld   $37         ;029d '7'
              661c 0020  ld   $20         ;029e ' '
              661d 0061  ld   $61         ;029f 'a'
              661e 006e  ld   $6e         ;02a0 'n'
              661f 0064  ld   $64         ;02a1 'd'
              6620 000a  ld   $0a         ;02a2 10
              6621 0060  ld   $60         ;02a3 '`'
              6622 0042  ld   $42         ;02a4 'B'
              6623 0072  ld   $72         ;02a5 'r'
              6624 0069  ld   $69         ;02a6 'i'
              6625 0063  ld   $63         ;02a7 'c'
              6626 006b  ld   $6b         ;02a8 'k'
              6627 0073  ld   $73         ;02a9 's'
              6628 0027  ld   $27         ;02aa "'"
              6629 0020  ld   $20         ;02ab ' '
              662a 0062  ld   $62         ;02ac 'b'
              662b 0079  ld   $79         ;02ad 'y'
              662c 0020  ld   $20         ;02ae ' '
              662d 0078  ld   $78         ;02af 'x'
              662e 0062  ld   $62         ;02b0 'b'
              662f 0078  ld   $78         ;02b1 'x'
              6630 002e  ld   $2e         ;02b2 '.'
              6631 000a  ld   $0a         ;02b3 10
              6632 000a  ld   $0a         ;02b4 10
              6633 0053  ld   $53         ;02b5 'S'
              6634 0070  ld   $70         ;02b6 'p'
              6635 0065  ld   $65         ;02b7 'e'
              6636 0063  ld   $63         ;02b8 'c'
              6637 0069  ld   $69         ;02b9 'i'
              6638 0061  ld   $61         ;02ba 'a'
              6639 006c  ld   $6c         ;02bb 'l'
              663a 0020  ld   $20         ;02bc ' '
              663b 0074  ld   $74         ;02bd 't'
              663c 0068  ld   $68         ;02be 'h'
              663d 0061  ld   $61         ;02bf 'a'
              663e 006e  ld   $6e         ;02c0 'n'
              663f 006b  ld   $6b         ;02c1 'k'
              6640 0073  ld   $73         ;02c2 's'
              6641 0020  ld   $20         ;02c3 ' '
              6642 006d  ld   $6d         ;02c4 'm'
              6643 0075  ld   $75         ;02c5 'u'
              6644 0073  ld   $73         ;02c6 's'
              6645 0074  ld   $74         ;02c7 't'
              6646 0020  ld   $20         ;02c8 ' '
              6647 0067  ld   $67         ;02c9 'g'
              6648 006f  ld   $6f         ;02ca 'o'
              6649 0020  ld   $20         ;02cb ' '
              664a 0074  ld   $74         ;02cc 't'
              664b 006f  ld   $6f         ;02cd 'o'
              664c 0000  ld   $00         ;02ce 0
              664d 002b  ld   $2b         ;02cf STW
              664e 003a  ld   $3a         ;02cf 'Part1'
              664f 0093  ld   $93         ;02d1 INC
              6650 001b  ld   $1b
              6651 00ff  ld   $ff         ;02d3 RET
              6652 0003  ld   $03         ;| RAM segment address (high byte first)
              6653 0000  ld   $00         ;|
              6654 00e8  ld   $e8         ;| Length (1..256)
              6655 00cd  ld   $cd         ;0300 DEF
              6656 0098  ld   $98
              6657 000a  ld   $0a         ;0302 10
              6658 004d  ld   $4d         ;0303 'M'
              6659 0061  ld   $61         ;0304 'a'
              665a 0072  ld   $72         ;0305 'r'
              665b 0063  ld   $63         ;0306 'c'
              665c 002c  ld   $2c         ;0307 ','
              665d 0020  ld   $20         ;0308 ' '
              665e 0050  ld   $50         ;0309 'P'
              665f 0061  ld   $61         ;030a 'a'
              6660 0075  ld   $75         ;030b 'u'
              6661 006c  ld   $6c         ;030c 'l'
              6662 002c  ld   $2c         ;030d ','
              6663 0020  ld   $20         ;030e ' '
              6664 0049  ld   $49         ;030f 'I'
              6665 0076  ld   $76         ;0310 'v'
              6666 0061  ld   $61         ;0311 'a'
              6667 006e  ld   $6e         ;0312 'n'
              6668 0061  ld   $61         ;0313 'a'
              6669 002c  ld   $2c         ;0314 ','
              666a 0020  ld   $20         ;0315 ' '
              666b 004f  ld   $4f         ;0316 'O'
              666c 0073  ld   $73         ;0317 's'
              666d 0063  ld   $63         ;0318 'c'
              666e 0061  ld   $61         ;0319 'a'
              666f 0072  ld   $72         ;031a 'r'
              6670 002c  ld   $2c         ;031b ','
              6671 000a  ld   $0a         ;031c 10
              6672 004d  ld   $4d         ;031d 'M'
              6673 0061  ld   $61         ;031e 'a'
              6674 0072  ld   $72         ;031f 'r'
              6675 0074  ld   $74         ;0320 't'
              6676 0069  ld   $69         ;0321 'i'
              6677 006a  ld   $6a         ;0322 'j'
              6678 006e  ld   $6e         ;0323 'n'
              6679 002c  ld   $2c         ;0324 ','
              667a 0020  ld   $20         ;0325 ' '
              667b 0045  ld   $45         ;0326 'E'
              667c 0072  ld   $72         ;0327 'r'
              667d 0069  ld   $69         ;0328 'i'
              667e 006b  ld   $6b         ;0329 'k'
              667f 002c  ld   $2c         ;032a ','
              6680 0020  ld   $20         ;032b ' '
              6681 0043  ld   $43         ;032c 'C'
              6682 0068  ld   $68         ;032d 'h'
              6683 0075  ld   $75         ;032e 'u'
              6684 0063  ld   $63         ;032f 'c'
              6685 006b  ld   $6b         ;0330 'k'
              6686 002c  ld   $2c         ;0331 ','
              6687 0020  ld   $20         ;0332 ' '
              6688 0042  ld   $42         ;0333 'B'
              6689 0065  ld   $65         ;0334 'e'
              668a 006e  ld   $6e         ;0335 'n'
              668b 002c  ld   $2c         ;0336 ','
              668c 000a  ld   $0a         ;0337 10
              668d 0044  ld   $44         ;0338 'D'
              668e 0069  ld   $69         ;0339 'i'
              668f 0065  ld   $65         ;033a 'e'
              6690 0074  ld   $74         ;033b 't'
              6691 0065  ld   $65         ;033c 'e'
              6692 0072  ld   $72         ;033d 'r'
              6693 002c  ld   $2c         ;033e ','
              6694 0020  ld   $20         ;033f ' '
              6695 004d  ld   $4d         ;0340 'M'
              6696 0061  ld   $61         ;0341 'a'
              6697 0072  ld   $72         ;0342 'r'
              6698 0074  ld   $74         ;0343 't'
              6699 0069  ld   $69         ;0344 'i'
              669a 006e  ld   $6e         ;0345 'n'
              669b 002c  ld   $2c         ;0346 ','
              669c 0020  ld   $20         ;0347 ' '
              669d 0042  ld   $42         ;0348 'B'
              669e 0072  ld   $72         ;0349 'r'
              669f 0061  ld   $61         ;034a 'a'
              66a0 0064  ld   $64         ;034b 'd'
              66a1 002c  ld   $2c         ;034c ','
              66a2 0020  ld   $20         ;034d ' '
              66a3 004c  ld   $4c         ;034e 'L'
              66a4 006f  ld   $6f         ;034f 'o'
              66a5 0075  ld   $75         ;0350 'u'
              66a6 002c  ld   $2c         ;0351 ','
              66a7 000a  ld   $0a         ;0352 10
              66a8 0050  ld   $50         ;0353 'P'
              66a9 0068  ld   $68         ;0354 'h'
              66aa 0069  ld   $69         ;0355 'i'
              66ab 006c  ld   $6c         ;0356 'l'
              66ac 002c  ld   $2c         ;0357 ','
              66ad 0020  ld   $20         ;0358 ' '
              66ae 0042  ld   $42         ;0359 'B'
              66af 0072  ld   $72         ;035a 'r'
              66b0 0069  ld   $69         ;035b 'i'
              66b1 0061  ld   $61         ;035c 'a'
              66b2 006e  ld   $6e         ;035d 'n'
              66b3 002c  ld   $2c         ;035e ','
              66b4 0020  ld   $20         ;035f ' '
              66b5 0044  ld   $44         ;0360 'D'
              66b6 0061  ld   $61         ;0361 'a'
              66b7 0076  ld   $76         ;0362 'v'
              66b8 0069  ld   $69         ;0363 'i'
              66b9 0064  ld   $64         ;0364 'd'
              66ba 002c  ld   $2c         ;0365 ','
              66bb 0020  ld   $20         ;0366 ' '
              66bc 0044  ld   $44         ;0367 'D'
              66bd 0061  ld   $61         ;0368 'a'
              66be 0076  ld   $76         ;0369 'v'
              66bf 0065  ld   $65         ;036a 'e'
              66c0 002c  ld   $2c         ;036b ','
              66c1 000a  ld   $0a         ;036c 10
              66c2 0048  ld   $48         ;036d 'H'
              66c3 0047  ld   $47         ;036e 'G'
              66c4 0020  ld   $20         ;036f ' '
              66c5 0061  ld   $61         ;0370 'a'
              66c6 006e  ld   $6e         ;0371 'n'
              66c7 0064  ld   $64         ;0372 'd'
              66c8 0020  ld   $20         ;0373 ' '
              66c9 0061  ld   $61         ;0374 'a'
              66ca 006c  ld   $6c         ;0375 'l'
              66cb 006c  ld   $6c         ;0376 'l'
              66cc 0020  ld   $20         ;0377 ' '
              66cd 0066  ld   $66         ;0378 'f'
              66ce 0061  ld   $61         ;0379 'a'
              66cf 006e  ld   $6e         ;037a 'n'
              66d0 0073  ld   $73         ;037b 's'
              66d1 0021  ld   $21         ;037c '!'
              66d2 000a  ld   $0a         ;037d 10
              66d3 0020  ld   $20         ;037e ' '
              66d4 0020  ld   $20         ;037f ' '
              66d5 0020  ld   $20         ;0380 ' '
              66d6 0020  ld   $20         ;0381 ' '
              66d7 0020  ld   $20         ;0382 ' '
              66d8 0020  ld   $20         ;0383 ' '
              66d9 0020  ld   $20         ;0384 ' '
              66da 0020  ld   $20         ;0385 ' '
              66db 0020  ld   $20         ;0386 ' '
              66dc 0020  ld   $20         ;0387 ' '
              66dd 0020  ld   $20         ;0388 ' '
              66de 004d  ld   $4d         ;0389 'M'
              66df 0061  ld   $61         ;038a 'a'
              66e0 0072  ld   $72         ;038b 'r'
              66e1 0063  ld   $63         ;038c 'c'
              66e2 0065  ld   $65         ;038d 'e'
              66e3 006c  ld   $6c         ;038e 'l'
              66e4 0020  ld   $20         ;038f ' '
              66e5 0026  ld   $26         ;0390 '&'
              66e6 0020  ld   $20         ;0391 ' '
              66e7 0057  ld   $57         ;0392 'W'
              66e8 0061  ld   $61         ;0393 'a'
              66e9 006c  ld   $6c         ;0394 'l'
              66ea 0074  ld   $74         ;0395 't'
              66eb 0065  ld   $65         ;0396 'e'
              66ec 0072  ld   $72         ;0397 'r'
              66ed 000a  ld   $0a         ;0398 10
              66ee 0000  ld   $00         ;0399 0
              66ef 002b  ld   $2b         ;039a STW
              66f0 003c  ld   $3c         ;039a 'Part2'
              66f1 00cd  ld   $cd         ;039c DEF
              66f2 00cd  ld   $cd
              66f3 0011  ld   $11         ;039e LDWI
              66f4 0000  ld   $00
              66f5 0008  ld   $08
              66f6 002b  ld   $2b         ;03a1 STW
              66f7 003e  ld   $3e         ;03a1 'p'
              66f8 0011  ld   $11         ;03a3 LDWI
              66f9 0001  ld   $01
              66fa 0088  ld   $88
              66fb fe00  bra  ac          ;+-----------------------------------+
              66fc fcfd  bra  $66fd       ;|                                   |
              66fd 1418  ld   $18,y       ;| Trampoline for page $6600 lookups |
              66fe e006  jmp  y,$06       ;|                                   |
              66ff c218  st   [$18]       ;+-----------------------------------+
              6700 002b  ld   $2b         ;03a6 STW
              6701 0040  ld   $40         ;03a6 'i'
              6702 0059  ld   $59         ;03a8 LDI
              6703 0000  ld   $00
              6704 005e  ld   $5e         ;03aa ST
              6705 0024  ld   $24
              6706 005e  ld   $5e         ;03ac ST
              6707 0025  ld   $25
              6708 0011  ld   $11         ;03ae LDWI
              6709 00e1  ld   $e1
              670a 0004  ld   $04
              670b 002b  ld   $2b         ;03b1 STW
              670c 0022  ld   $22
              670d 0021  ld   $21         ;03b3 LDW
              670e 003e  ld   $3e         ;03b3 'p'
              670f 002b  ld   $2b         ;03b5 STW
              6710 0028  ld   $28
              6711 00b4  ld   $b4         ;03b7 SYS
              6712 00cc  ld   $cc
              6713 0011  ld   $11         ;03b9 LDWI
              6714 0000  ld   $00
              6715 0008  ld   $08
              6716 0099  ld   $99         ;03bc ADDW
              6717 003e  ld   $3e         ;03bc 'p'
              6718 002b  ld   $2b         ;03be STW
              6719 003e  ld   $3e         ;03be 'p'
              671a 0035  ld   $35         ;03c0 BCC
              671b 004d  ld   $4d         ;03c1 GT
              671c 00b3  ld   $b3
              671d 0099  ld   $99         ;03c3 ADDW
              671e 0040  ld   $40         ;03c3 'i'
              671f 002b  ld   $2b         ;03c5 STW
              6720 003e  ld   $3e         ;03c5 'p'
              6721 0082  ld   $82         ;03c7 ANDI
              6722 00ff  ld   $ff
              6723 008c  ld   $8c         ;03c9 XORI
              6724 00a0  ld   $a0
              6725 0035  ld   $35         ;03cb BCC
              6726 0072  ld   $72         ;03cc NE
              6727 00b1  ld   $b1
              6728 00ff  ld   $ff         ;03ce RET
              6729 002b  ld   $2b         ;03cf STW
              672a 0042  ld   $42         ;03cf 'ClearScreen'
              672b 00cd  ld   $cd         ;03d1 DEF
              672c 00e1  ld   $e1
              672d 001a  ld   $1a         ;03d3 LD
              672e 000e  ld   $0e
              672f 0099  ld   $99         ;03d5 ADDW
              6730 0044  ld   $44         ;03d5 'Delay'
              6731 0082  ld   $82         ;03d7 ANDI
              6732 00ff  ld   $ff
              6733 002b  ld   $2b         ;03d9 STW
              6734 0046  ld   $46         ;03d9 'tmp'
              6735 001a  ld   $1a         ;03db LD
              6736 000e  ld   $0e
              6737 00b8  ld   $b8         ;03dd SUBW
              6738 0046  ld   $46         ;03dd 'tmp'
              6739 0035  ld   $35         ;03df BCC
              673a 0072  ld   $72         ;03e0 NE
              673b 00d9  ld   $d9
              673c 00ff  ld   $ff         ;03e2 RET
              673d 002b  ld   $2b         ;03e3 STW
              673e 0048  ld   $48         ;03e3 'Wait'
              673f 0093  ld   $93         ;03e5 INC
              6740 001b  ld   $1b
              6741 00ff  ld   $ff         ;03e7 RET
              6742 0004  ld   $04         ;| RAM segment address (high byte first)
              6743 0000  ld   $00         ;|
              6744 0081  ld   $81         ;| Length (1..256)
              6745 00cd  ld   $cd         ;0400 DEF
              6746 004a  ld   $4a
              6747 0021  ld   $21         ;0402 LDW
              6748 0032  ld   $32         ;0402 'Char'
              6749 00e6  ld   $e6         ;0404 SUBI
              674a 0052  ld   $52
              674b 0035  ld   $35         ;0406 BCC
              674c 0053  ld   $53         ;0407 GE
              674d 0010  ld   $10
              674e 00e3  ld   $e3         ;0409 ADDI
              674f 0032  ld   $32
              6750 002b  ld   $2b         ;040b STW
              6751 0040  ld   $40         ;040b 'i'
              6752 0011  ld   $11         ;040d LDWI
              6753 0000  ld   $00
              6754 0007  ld   $07
              6755 0090  ld   $90         ;0410 BRA
              6756 0015  ld   $15
              6757 002b  ld   $2b         ;0412 STW
              6758 0040  ld   $40         ;0412 'i'
              6759 0011  ld   $11         ;0414 LDWI
              675a 0000  ld   $00
              675b 0008  ld   $08
              675c 002b  ld   $2b         ;0417 STW
              675d 004a  ld   $4a         ;0417 'fontData'
              675e 0021  ld   $21         ;0419 LDW
              675f 0040  ld   $40         ;0419 'i'
              6760 00e9  ld   $e9         ;041b LSLW
              6761 00e9  ld   $e9         ;041c LSLW
              6762 0099  ld   $99         ;041d ADDW
              6763 0040  ld   $40         ;041d 'i'
              6764 0099  ld   $99         ;041f ADDW
              6765 004a  ld   $4a         ;041f 'fontData'
              6766 002b  ld   $2b         ;0421 STW
              6767 004a  ld   $4a         ;0421 'fontData'
              6768 0021  ld   $21         ;0423 LDW
              6769 004c  ld   $4c         ;0423 'Color'
              676a 005e  ld   $5e         ;0425 ST
              676b 0025  ld   $25
              676c 0021  ld   $21         ;0427 LDW
              676d 0034  ld   $34         ;0427 'Pos'
              676e 002b  ld   $2b         ;0429 STW
              676f 0028  ld   $28
              6770 00e3  ld   $e3         ;042b ADDI
              6771 0006  ld   $06
              6772 002b  ld   $2b         ;042d STW
              6773 0034  ld   $34         ;042d 'Pos'
              6774 0011  ld   $11         ;042f LDWI
              6775 00e1  ld   $e1
              6776 0004  ld   $04
              6777 002b  ld   $2b         ;0432 STW
              6778 0022  ld   $22
              6779 0059  ld   $59         ;0434 LDI
              677a 00fb  ld   $fb
              677b 002b  ld   $2b         ;0436 STW
              677c 0040  ld   $40         ;0436 'i'
              677d 0021  ld   $21         ;0438 LDW
              677e 004a  ld   $4a         ;0438 'fontData'
              677f 007f  ld   $7f         ;043a LUP
              6780 0000  ld   $00
              6781 0093  ld   $93         ;043c INC
              6782 004a  ld   $4a         ;043c 'fontData'
              6783 005e  ld   $5e         ;043e ST
              6784 0026  ld   $26
              6785 00b4  ld   $b4         ;0440 SYS
              6786 00cc  ld   $cc
              6787 0093  ld   $93         ;0442 INC
              6788 0028  ld   $28
              6789 0093  ld   $93         ;0444 INC
              678a 0040  ld   $40         ;0444 'i'
              678b 0021  ld   $21         ;0446 LDW
              678c 0040  ld   $40         ;0446 'i'
              678d 0035  ld   $35         ;0448 BCC
              678e 0072  ld   $72         ;0449 NE
              678f 0036  ld   $36
              6790 00ff  ld   $ff         ;044b RET
              6791 002b  ld   $2b         ;044c STW
              6792 0036  ld   $36         ;044c 'PrintChar'
              6793 0011  ld   $11         ;044e LDWI
              6794 0002  ld   $02
              6795 0008  ld   $08
              6796 002b  ld   $2b         ;0451 STW
              6797 0034  ld   $34         ;0451 'Pos'
              6798 00cf  ld   $cf         ;0453 CALL
              6799 0042  ld   $42         ;0453 'ClearScreen'
              679a 0059  ld   $59         ;0455 LDI
              679b 003e  ld   $3e
              679c 002b  ld   $2b         ;0457 STW
              679d 004c  ld   $4c         ;0457 'Color'
              679e 0011  ld   $11         ;0459 LDWI
              679f 0000  ld   $00
              67a0 0008  ld   $08
              67a1 002b  ld   $2b         ;045c STW
              67a2 0034  ld   $34         ;045c 'Pos'
              67a3 0021  ld   $21         ;045e LDW
              67a4 003a  ld   $3a         ;045e 'Part1'
              67a5 002b  ld   $2b         ;0460 STW
              67a6 0030  ld   $30         ;0460 'Text'
              67a7 00cf  ld   $cf         ;0462 CALL
              67a8 0038  ld   $38         ;0462 'PrintText'
              67a9 0021  ld   $21         ;0464 LDW
              67aa 003c  ld   $3c         ;0464 'Part2'
              67ab 002b  ld   $2b         ;0466 STW
              67ac 0030  ld   $30         ;0466 'Text'
              67ad 00cf  ld   $cf         ;0468 CALL
              67ae 0038  ld   $38         ;0468 'PrintText'
              67af 0059  ld   $59         ;046a LDI
              67b0 00f0  ld   $f0
              67b1 002b  ld   $2b         ;046c STW
              67b2 0044  ld   $44         ;046c 'Delay'
              67b3 00cf  ld   $cf         ;046e CALL
              67b4 0048  ld   $48         ;046e 'Wait'
              67b5 0021  ld   $21         ;0470 LDW
              67b6 004c  ld   $4c         ;0470 'Color'
              67b7 008c  ld   $8c         ;0472 XORI
              67b8 0008  ld   $08
              67b9 0035  ld   $35         ;0474 BCC
              67ba 003f  ld   $3f         ;0475 EQ
              67bb 007d  ld   $7d
              67bc 0021  ld   $21         ;0477 LDW
              67bd 004c  ld   $4c         ;0477 'Color'
              67be 00e6  ld   $e6         ;0479 SUBI
              67bf 0009  ld   $09
              67c0 002b  ld   $2b         ;047b STW
              67c1 004c  ld   $4c         ;047b 'Color'
              67c2 0090  ld   $90         ;047d BRA
              67c3 0057  ld   $57
              67c4 0090  ld   $90         ;047f BRA
              67c5 0053  ld   $53
              67c6 0000  ld   $00         ;End of Apps/Credits/Credits_v3.gcl, size 593
                                          ;+-----------------------------------+
                                          ;| Apps/Snake/Snake_v3.gcl           |
                                          ;+-----------------------------------+
              67c7 dc43  st   $43,[y,x++] ;'C'
              67c8 dc72  st   $72,[y,x++] ;'r'
              67c9 dc65  st   $65,[y,x++] ;'e'
              67ca dc64  st   $64,[y,x++] ;'d'
              67cb dc69  st   $69,[y,x++] ;'i'
              67cc dc74  st   $74,[y,x++] ;'t'
              67cd dc73  st   $73,[y,x++] ;'s'
              67ce dc00  st   $00,[y,x++] ;'\x00'
              67cf 0076  ld   $76
              67d0 c218  st   [$18]
              67d1 0065  ld   $65
              67d2 14e0  ld   $e0,y
              67d3 e02e  jmp  y,$2e
              67d4 c219  st   [$19]
Snake:        67d5 0002  ld   $02         ;| RAM segment address (high byte first)
              67d6 0000  ld   $00         ;|
              67d7 00e5  ld   $e5         ;| Length (1..256)
              67d8 001a  ld   $1a         ;0200 LD
              67d9 0021  ld   $21
              67da 00e6  ld   $e6         ;0202 SUBI
              67db 0020  ld   $20
              67dc 0035  ld   $35         ;0204 BCC
              67dd 0053  ld   $53         ;0205 GE
              67de 000b  ld   $0b
              67df 0021  ld   $21         ;0207 LDW
              67e0 000e  ld   $0e         ;0207 '_frameCount'
              67e1 00f3  ld   $f3         ;0209 DOKE
              67e2 0017  ld   $17         ;0209 '_vPCH'
              67e3 0090  ld   $90         ;020b BRA
              67e4 0005  ld   $05
              67e5 0059  ld   $59         ;020d LDI
              67e6 0000  ld   $00
              67e7 002b  ld   $2b         ;020f STW
              67e8 0030  ld   $30         ;020f 'HighScore'
              67e9 00cd  ld   $cd         ;0211 DEF
              67ea 005f  ld   $5f
              67eb 0021  ld   $21         ;0213 LDW
              67ec 0032  ld   $32         ;0213 'Char'
              67ed 00e6  ld   $e6         ;0215 SUBI
              67ee 0052  ld   $52
              67ef 0035  ld   $35         ;0217 BCC
              67f0 0053  ld   $53         ;0218 GE
              67f1 0021  ld   $21
              67f2 00e3  ld   $e3         ;021a ADDI
              67f3 0032  ld   $32
              67f4 002b  ld   $2b         ;021c STW
              67f5 0034  ld   $34         ;021c 'i'
              67f6 0011  ld   $11         ;021e LDWI
              67f7 0000  ld   $00
              67f8 0007  ld   $07
              67f9 0090  ld   $90         ;0221 BRA
              67fa 0026  ld   $26
              67fb fe00  bra  ac          ;+-----------------------------------+
              67fc fcfd  bra  $67fd       ;|                                   |
              67fd 1418  ld   $18,y       ;| Trampoline for page $6700 lookups |
              67fe e006  jmp  y,$06       ;|                                   |
              67ff c218  st   [$18]       ;+-----------------------------------+
              6800 002b  ld   $2b         ;0223 STW
              6801 0034  ld   $34         ;0223 'i'
              6802 0011  ld   $11         ;0225 LDWI
              6803 0000  ld   $00
              6804 0008  ld   $08
              6805 002b  ld   $2b         ;0228 STW
              6806 0036  ld   $36         ;0228 'fontData'
              6807 0021  ld   $21         ;022a LDW
              6808 0034  ld   $34         ;022a 'i'
              6809 00e9  ld   $e9         ;022c LSLW
              680a 00e9  ld   $e9         ;022d LSLW
              680b 0099  ld   $99         ;022e ADDW
              680c 0034  ld   $34         ;022e 'i'
              680d 0099  ld   $99         ;0230 ADDW
              680e 0036  ld   $36         ;0230 'fontData'
              680f 002b  ld   $2b         ;0232 STW
              6810 0036  ld   $36         ;0232 'fontData'
              6811 0021  ld   $21         ;0234 LDW
              6812 0038  ld   $38         ;0234 'BgColor'
              6813 005e  ld   $5e         ;0236 ST
              6814 0024  ld   $24
              6815 0021  ld   $21         ;0238 LDW
              6816 003a  ld   $3a         ;0238 'Color'
              6817 005e  ld   $5e         ;023a ST
              6818 0025  ld   $25
              6819 0021  ld   $21         ;023c LDW
              681a 003c  ld   $3c         ;023c 'Pos'
              681b 002b  ld   $2b         ;023e STW
              681c 0028  ld   $28
              681d 00e3  ld   $e3         ;0240 ADDI
              681e 0006  ld   $06
              681f 002b  ld   $2b         ;0242 STW
              6820 003c  ld   $3c         ;0242 'Pos'
              6821 0011  ld   $11         ;0244 LDWI
              6822 00e1  ld   $e1
              6823 0004  ld   $04
              6824 002b  ld   $2b         ;0247 STW
              6825 0022  ld   $22
              6826 0059  ld   $59         ;0249 LDI
              6827 00fb  ld   $fb
              6828 002b  ld   $2b         ;024b STW
              6829 0034  ld   $34         ;024b 'i'
              682a 0021  ld   $21         ;024d LDW
              682b 0036  ld   $36         ;024d 'fontData'
              682c 007f  ld   $7f         ;024f LUP
              682d 0000  ld   $00
              682e 0093  ld   $93         ;0251 INC
              682f 0036  ld   $36         ;0251 'fontData'
              6830 005e  ld   $5e         ;0253 ST
              6831 0026  ld   $26
              6832 00b4  ld   $b4         ;0255 SYS
              6833 00cc  ld   $cc
              6834 0093  ld   $93         ;0257 INC
              6835 0028  ld   $28
              6836 0093  ld   $93         ;0259 INC
              6837 0034  ld   $34         ;0259 'i'
              6838 0021  ld   $21         ;025b LDW
              6839 0034  ld   $34         ;025b 'i'
              683a 0035  ld   $35         ;025d BCC
              683b 0072  ld   $72         ;025e NE
              683c 004b  ld   $4b
              683d 00ff  ld   $ff         ;0260 RET
              683e 002b  ld   $2b         ;0261 STW
              683f 003e  ld   $3e         ;0261 'PrintChar'
              6840 00cd  ld   $cd         ;0263 DEF
              6841 0076  ld   $76
              6842 0075  ld   $75         ;0265 PUSH
              6843 002b  ld   $2b         ;0266 STW
              6844 0040  ld   $40         ;0266 'Text'
              6845 0021  ld   $21         ;0268 LDW
              6846 0040  ld   $40         ;0268 'Text'
              6847 00ad  ld   $ad         ;026a PEEK
              6848 002b  ld   $2b         ;026b STW
              6849 0032  ld   $32         ;026b 'Char'
              684a 0093  ld   $93         ;026d INC
              684b 0040  ld   $40         ;026d 'Text'
              684c 0035  ld   $35         ;026f BCC
              684d 003f  ld   $3f         ;0270 EQ
              684e 0074  ld   $74
              684f 00cf  ld   $cf         ;0272 CALL
              6850 003e  ld   $3e         ;0272 'PrintChar'
              6851 0090  ld   $90         ;0274 BRA
              6852 0066  ld   $66
              6853 0063  ld   $63         ;0276 POP
              6854 00ff  ld   $ff         ;0277 RET
              6855 002b  ld   $2b         ;0278 STW
              6856 0042  ld   $42         ;0278 'PrintText'
              6857 00cd  ld   $cd         ;027a DEF
              6858 0090  ld   $90
              6859 0035  ld   $35         ;027c BCC
              685a 0056  ld   $56         ;027d LE
              685b 008f  ld   $8f
              685c 002b  ld   $2b         ;027f STW
              685d 0034  ld   $34         ;027f 'i'
              685e 0021  ld   $21         ;0281 LDW
              685f 003a  ld   $3a         ;0281 'Color'
              6860 00f0  ld   $f0         ;0283 POKE
              6861 003c  ld   $3c         ;0283 'Pos'
              6862 0021  ld   $21         ;0285 LDW
              6863 003c  ld   $3c         ;0285 'Pos'
              6864 0099  ld   $99         ;0287 ADDW
              6865 0044  ld   $44         ;0287 'Step'
              6866 002b  ld   $2b         ;0289 STW
              6867 003c  ld   $3c         ;0289 'Pos'
              6868 0021  ld   $21         ;028b LDW
              6869 0034  ld   $34         ;028b 'i'
              686a 00e6  ld   $e6         ;028d SUBI
              686b 0001  ld   $01
              686c 0090  ld   $90         ;028f BRA
              686d 007a  ld   $7a
              686e 00ff  ld   $ff         ;0291 RET
              686f 002b  ld   $2b         ;0292 STW
              6870 0046  ld   $46         ;0292 'DrawLine'
              6871 00cd  ld   $cd         ;0294 DEF
              6872 00bc  ld   $bc
              6873 0075  ld   $75         ;0296 PUSH
              6874 001a  ld   $1a         ;0297 LD
              6875 000e  ld   $0e
              6876 00b8  ld   $b8         ;0299 SUBW
              6877 0048  ld   $48         ;0299 'TimeOut'
              6878 0082  ld   $82         ;029b ANDI
              6879 0080  ld   $80
              687a 0035  ld   $35         ;029d BCC
              687b 0072  ld   $72         ;029e NE
              687c 00a9  ld   $a9
              687d 0021  ld   $21         ;02a0 LDW
              687e 004a  ld   $4a         ;02a0 'Timer'
              687f 0035  ld   $35         ;02a2 BCC
              6880 0056  ld   $56         ;02a3 LE
              6881 00a7  ld   $a7
              6882 00e6  ld   $e6         ;02a5 SUBI
              6883 0001  ld   $01
              6884 002b  ld   $2b         ;02a7 STW
              6885 004a  ld   $4a         ;02a7 'Timer'
              6886 00cf  ld   $cf         ;02a9 CALL
              6887 004c  ld   $4c         ;02a9 'DrawTimer'
              6888 001a  ld   $1a         ;02ab LD
              6889 0011  ld   $11
              688a 0082  ld   $82         ;02ad ANDI
              688b 0080  ld   $80
              688c 0035  ld   $35         ;02af BCC
              688d 0072  ld   $72         ;02b0 NE
              688e 00b4  ld   $b4
              688f 00e6  ld   $e6         ;02b2 SUBI
              6890 0001  ld   $01
              6891 0090  ld   $90         ;02b4 BRA
              6892 00b6  ld   $b6
              6893 0059  ld   $59         ;02b6 LDI
              6894 0000  ld   $00
              6895 0099  ld   $99         ;02b8 ADDW
              6896 004e  ld   $4e         ;02b8 'Delay'
              6897 00cf  ld   $cf         ;02ba CALL
              6898 0050  ld   $50         ;02ba 'Wait'
              6899 0063  ld   $63         ;02bc POP
              689a 00ff  ld   $ff         ;02bd RET
              689b 002b  ld   $2b         ;02be STW
              689c 0052  ld   $52         ;02be 'TimeStep'
              689d 00cd  ld   $cd         ;02c0 DEF
              689e 00de  ld   $de
              689f 0075  ld   $75         ;02c2 PUSH
              68a0 0011  ld   $11         ;02c3 LDWI
              68a1 0020  ld   $20
              68a2 0008  ld   $08
              68a3 002b  ld   $2b         ;02c6 STW
              68a4 003c  ld   $3c         ;02c6 'Pos'
              68a5 0059  ld   $59         ;02c8 LDI
              68a6 0008  ld   $08
              68a7 002b  ld   $2b         ;02ca STW
              68a8 003a  ld   $3a         ;02ca 'Color'
              68a9 0059  ld   $59         ;02cc LDI
              68aa 0000  ld   $00
              68ab 002b  ld   $2b         ;02ce STW
              68ac 0038  ld   $38         ;02ce 'BgColor'
              68ad 0021  ld   $21         ;02d0 LDW
              68ae 004a  ld   $4a         ;02d0 'Timer'
              68af 002b  ld   $2b         ;02d2 STW
              68b0 0054  ld   $54         ;02d2 'Value'
              68b1 00cf  ld   $cf         ;02d4 CALL
              68b2 0056  ld   $56         ;02d4 'DrawNumber2'
              68b3 0021  ld   $21         ;02d6 LDW
              68b4 0048  ld   $48         ;02d6 'TimeOut'
              68b5 00e3  ld   $e3         ;02d8 ADDI
              68b6 003c  ld   $3c
              68b7 0082  ld   $82         ;02da ANDI
              68b8 00ff  ld   $ff
              68b9 002b  ld   $2b         ;02dc STW
              68ba 0048  ld   $48         ;02dc 'TimeOut'
              68bb 0063  ld   $63         ;02de POP
              68bc 00ff  ld   $ff         ;02df RET
              68bd 002b  ld   $2b         ;02e0 STW
              68be 004c  ld   $4c         ;02e0 'DrawTimer'
              68bf 0093  ld   $93         ;02e2 INC
              68c0 001b  ld   $1b         ;02e2 '_vLR'+1
              68c1 00ff  ld   $ff         ;02e4 RET
              68c2 0003  ld   $03         ;| RAM segment address (high byte first)
              68c3 0000  ld   $00         ;|
              68c4 00f7  ld   $f7         ;| Length (1..256)
              68c5 00cd  ld   $cd         ;0300 DEF
              68c6 000b  ld   $0b
              68c7 0075  ld   $75         ;0302 PUSH
              68c8 0059  ld   $59         ;0303 LDI
              68c9 000f  ld   $0f
              68ca 002b  ld   $2b         ;0305 STW
              68cb 003a  ld   $3a         ;0305 'Color'
              68cc 0021  ld   $21         ;0307 LDW
              68cd 0058  ld   $58         ;0307 'Head'
              68ce 00cf  ld   $cf         ;0309 CALL
              68cf 005a  ld   $5a         ;0309 'DrawBlock'
              68d0 0063  ld   $63         ;030b POP
              68d1 00ff  ld   $ff         ;030c RET
              68d2 002b  ld   $2b         ;030d STW
              68d3 005c  ld   $5c         ;030d 'DrawHead'
              68d4 00cd  ld   $cd         ;030f DEF
              68d5 0043  ld   $43
              68d6 0075  ld   $75         ;0311 PUSH
              68d7 0011  ld   $11         ;0312 LDWI
              68d8 0035  ld   $35
              68d9 0044  ld   $44
              68da 002b  ld   $2b         ;0315 STW
              68db 003c  ld   $3c         ;0315 'Pos'
              68dc 0059  ld   $59         ;0317 LDI
              68dd 0004  ld   $04
              68de 002b  ld   $2b         ;0319 STW
              68df 0038  ld   $38         ;0319 'BgColor'
              68e0 00cd  ld   $cd         ;031b DEF
              68e1 0025  ld   $25
              68e2 0047  ld   $47         ;031d 'G'
              68e3 0041  ld   $41         ;031e 'A'
              68e4 004d  ld   $4d         ;031f 'M'
              68e5 0045  ld   $45         ;0320 'E'
              68e6 0020  ld   $20         ;0321 ' '
              68e7 004f  ld   $4f         ;0322 'O'
              68e8 0056  ld   $56         ;0323 'V'
              68e9 0045  ld   $45         ;0324 'E'
              68ea 0052  ld   $52         ;0325 'R'
              68eb 0000  ld   $00         ;0326 0
              68ec 00cf  ld   $cf         ;0327 CALL
              68ed 0042  ld   $42         ;0327 'PrintText'
              68ee 0021  ld   $21         ;0329 LDW
              68ef 005e  ld   $5e         ;0329 'Score'
              68f0 00b8  ld   $b8         ;032b SUBW
              68f1 0030  ld   $30         ;032b 'HighScore'
              68f2 0035  ld   $35         ;032d BCC
              68f3 0056  ld   $56         ;032e LE
              68f4 003f  ld   $3f
              68f5 0021  ld   $21         ;0330 LDW
              68f6 0060  ld   $60         ;0330 'Control'
              68f7 00fc  ld   $fc         ;0332 XORW
              68f8 0062  ld   $62         ;0332 'PlayerControl'
              68f9 0035  ld   $35         ;0334 BCC
              68fa 0072  ld   $72         ;0335 NE
              68fb fe00  bra  ac          ;+-----------------------------------+
              68fc fcfd  bra  $68fd       ;|                                   |
              68fd 1418  ld   $18,y       ;| Trampoline for page $6800 lookups |
              68fe e006  jmp  y,$06       ;|                                   |
              68ff c218  st   [$18]       ;+-----------------------------------+
              6900 003f  ld   $3f
              6901 0021  ld   $21         ;0337 LDW
              6902 005e  ld   $5e         ;0337 'Score'
              6903 002b  ld   $2b         ;0339 STW
              6904 0030  ld   $30         ;0339 'HighScore'
              6905 0059  ld   $59         ;033b LDI
              6906 001e  ld   $1e
              6907 002b  ld   $2b         ;033d STW
              6908 003a  ld   $3a         ;033d 'Color'
              6909 00cf  ld   $cf         ;033f CALL
              690a 0064  ld   $64         ;033f 'DrawHighScore'
              690b 00cf  ld   $cf         ;0341 CALL
              690c 0066  ld   $66         ;0341 'PlayGameOverSound'
              690d 0063  ld   $63         ;0343 POP
              690e 00ff  ld   $ff         ;0344 RET
              690f 002b  ld   $2b         ;0345 STW
              6910 0068  ld   $68         ;0345 'GameOver'
              6911 00cd  ld   $cd         ;0347 DEF
              6912 0059  ld   $59
              6913 002b  ld   $2b         ;0349 STW
              6914 006a  ld   $6a         ;0349 'tmp'
              6915 001a  ld   $1a         ;034b LD
              6916 000e  ld   $0e
              6917 0099  ld   $99         ;034d ADDW
              6918 006a  ld   $6a         ;034d 'tmp'
              6919 0082  ld   $82         ;034f ANDI
              691a 00ff  ld   $ff
              691b 002b  ld   $2b         ;0351 STW
              691c 006a  ld   $6a         ;0351 'tmp'
              691d 001a  ld   $1a         ;0353 LD
              691e 000e  ld   $0e
              691f 00b8  ld   $b8         ;0355 SUBW
              6920 006a  ld   $6a         ;0355 'tmp'
              6921 0035  ld   $35         ;0357 BCC
              6922 0072  ld   $72         ;0358 NE
              6923 0051  ld   $51
              6924 00ff  ld   $ff         ;035a RET
              6925 002b  ld   $2b         ;035b STW
              6926 0050  ld   $50         ;035b 'Wait'
              6927 00cd  ld   $cd         ;035d DEF
              6928 007f  ld   $7f
              6929 0075  ld   $75         ;035f PUSH
              692a 0059  ld   $59         ;0360 LDI
              692b 0008  ld   $08
              692c 002b  ld   $2b         ;0362 STW
              692d 003a  ld   $3a         ;0362 'Color'
              692e 0059  ld   $59         ;0364 LDI
              692f 0000  ld   $00
              6930 002b  ld   $2b         ;0366 STW
              6931 0038  ld   $38         ;0366 'BgColor'
              6932 0011  ld   $11         ;0368 LDWI
              6933 0000  ld   $00
              6934 0008  ld   $08
              6935 00cf  ld   $cf         ;036b CALL
              6936 006c  ld   $6c         ;036b 'ClearScreen'
              6937 0011  ld   $11         ;036d LDWI
              6938 0038  ld   $38
              6939 0008  ld   $08
              693a 002b  ld   $2b         ;0370 STW
              693b 003c  ld   $3c         ;0370 'Pos'
              693c 00cd  ld   $cd         ;0372 DEF
              693d 007b  ld   $7b
              693e 0047  ld   $47         ;0374 'G'
              693f 0069  ld   $69         ;0375 'i'
              6940 0067  ld   $67         ;0376 'g'
              6941 0061  ld   $61         ;0377 'a'
              6942 0074  ld   $74         ;0378 't'
              6943 0072  ld   $72         ;0379 'r'
              6944 006f  ld   $6f         ;037a 'o'
              6945 006e  ld   $6e         ;037b 'n'
              6946 0000  ld   $00         ;037c 0
              6947 00cf  ld   $cf         ;037d CALL
              6948 0042  ld   $42         ;037d 'PrintText'
              6949 0063  ld   $63         ;037f POP
              694a 00ff  ld   $ff         ;0380 RET
              694b 002b  ld   $2b         ;0381 STW
              694c 006e  ld   $6e         ;0381 'Intro'
              694d 00cd  ld   $cd         ;0383 DEF
              694e 00a3  ld   $a3
              694f 002b  ld   $2b         ;0385 STW
              6950 0070  ld   $70         ;0385 'p'
              6951 0011  ld   $11         ;0387 LDWI
              6952 0003  ld   $03
              6953 000b  ld   $0b
              6954 002b  ld   $2b         ;038a STW
              6955 0022  ld   $22
              6956 0021  ld   $21         ;038c LDW
              6957 0038  ld   $38         ;038c 'BgColor'
              6958 005e  ld   $5e         ;038e ST
              6959 0025  ld   $25
              695a 0021  ld   $21         ;0390 LDW
              695b 0070  ld   $70         ;0390 'p'
              695c 002b  ld   $2b         ;0392 STW
              695d 0026  ld   $26
              695e 0059  ld   $59         ;0394 LDI
              695f 00a0  ld   $a0
              6960 005e  ld   $5e         ;0396 ST
              6961 0024  ld   $24
              6962 00b4  ld   $b4         ;0398 SYS
              6963 00f4  ld   $f4
              6964 0011  ld   $11         ;039a LDWI
              6965 0000  ld   $00
              6966 0001  ld   $01
              6967 0099  ld   $99         ;039d ADDW
              6968 0070  ld   $70         ;039d 'p'
              6969 002b  ld   $2b         ;039f STW
              696a 0070  ld   $70         ;039f 'p'
              696b 0035  ld   $35         ;03a1 BCC
              696c 004d  ld   $4d         ;03a2 GT
              696d 0090  ld   $90
              696e 00ff  ld   $ff         ;03a4 RET
              696f 002b  ld   $2b         ;03a5 STW
              6970 006c  ld   $6c         ;03a5 'ClearScreen'
              6971 00cd  ld   $cd         ;03a7 DEF
              6972 00c1  ld   $c1
              6973 0059  ld   $59         ;03a9 LDI
              6974 0000  ld   $00
              6975 00b8  ld   $b8         ;03ab SUBW
              6976 0072  ld   $72         ;03ab 'stepV'
              6977 002b  ld   $2b         ;03ad STW
              6978 006a  ld   $6a         ;03ad 'tmp'
              6979 0021  ld   $21         ;03af LDW
              697a 0074  ld   $74         ;03af 'stepU'
              697b 002b  ld   $2b         ;03b1 STW
              697c 0072  ld   $72         ;03b1 'stepV'
              697d 0021  ld   $21         ;03b3 LDW
              697e 006a  ld   $6a         ;03b3 'tmp'
              697f 002b  ld   $2b         ;03b5 STW
              6980 0074  ld   $74         ;03b5 'stepU'
              6981 0021  ld   $21         ;03b7 LDW
              6982 0076  ld   $76         ;03b7 'Bias'
              6983 0035  ld   $35         ;03b9 BCC
              6984 0053  ld   $53         ;03ba GE
              6985 00bc  ld   $bc
              6986 0059  ld   $59         ;03bc LDI
              6987 0000  ld   $00
              6988 00e3  ld   $e3         ;03be ADDI
              6989 003c  ld   $3c
              698a 002b  ld   $2b         ;03c0 STW
              698b 0076  ld   $76         ;03c0 'Bias'
              698c 00ff  ld   $ff         ;03c2 RET
              698d 002b  ld   $2b         ;03c3 STW
              698e 0078  ld   $78         ;03c3 'TurnL'
              698f 00cd  ld   $cd         ;03c5 DEF
              6990 00df  ld   $df
              6991 0059  ld   $59         ;03c7 LDI
              6992 0000  ld   $00
              6993 00b8  ld   $b8         ;03c9 SUBW
              6994 0074  ld   $74         ;03c9 'stepU'
              6995 002b  ld   $2b         ;03cb STW
              6996 006a  ld   $6a         ;03cb 'tmp'
              6997 0021  ld   $21         ;03cd LDW
              6998 0072  ld   $72         ;03cd 'stepV'
              6999 002b  ld   $2b         ;03cf STW
              699a 0074  ld   $74         ;03cf 'stepU'
              699b 0021  ld   $21         ;03d1 LDW
              699c 006a  ld   $6a         ;03d1 'tmp'
              699d 002b  ld   $2b         ;03d3 STW
              699e 0072  ld   $72         ;03d3 'stepV'
              699f 0021  ld   $21         ;03d5 LDW
              69a0 0076  ld   $76         ;03d5 'Bias'
              69a1 0035  ld   $35         ;03d7 BCC
              69a2 0056  ld   $56         ;03d8 LE
              69a3 00da  ld   $da
              69a4 0059  ld   $59         ;03da LDI
              69a5 0000  ld   $00
              69a6 00e6  ld   $e6         ;03dc SUBI
              69a7 003c  ld   $3c
              69a8 002b  ld   $2b         ;03de STW
              69a9 0076  ld   $76         ;03de 'Bias'
              69aa 00ff  ld   $ff         ;03e0 RET
              69ab 002b  ld   $2b         ;03e1 STW
              69ac 007a  ld   $7a         ;03e1 'TurnR'
              69ad 00cd  ld   $cd         ;03e3 DEF
              69ae 00f0  ld   $f0
              69af 002b  ld   $2b         ;03e5 STW
              69b0 003c  ld   $3c         ;03e5 'Pos'
              69b1 0021  ld   $21         ;03e7 LDW
              69b2 003a  ld   $3a         ;03e7 'Color'
              69b3 005e  ld   $5e         ;03e9 ST
              69b4 0019  ld   $19
              69b5 00f3  ld   $f3         ;03eb DOKE
              69b6 003c  ld   $3c         ;03eb 'Pos'
              69b7 0093  ld   $93         ;03ed INC
              69b8 003d  ld   $3d         ;03ed 'Pos'+1
              69b9 00f3  ld   $f3         ;03ef DOKE
              69ba 003c  ld   $3c         ;03ef 'Pos'
              69bb 00ff  ld   $ff         ;03f1 RET
              69bc 002b  ld   $2b         ;03f2 STW
              69bd 005a  ld   $5a         ;03f2 'DrawBlock'
              69be 0093  ld   $93         ;03f4 INC
              69bf 001b  ld   $1b         ;03f4 '_vLR'+1
              69c0 00ff  ld   $ff         ;03f6 RET
              69c1 0004  ld   $04         ;| RAM segment address (high byte first)
              69c2 0000  ld   $00         ;|
              69c3 00f9  ld   $f9         ;| Length (1..256)
              69c4 00cd  ld   $cd         ;0400 DEF
              69c5 00ae  ld   $ae
              69c6 0075  ld   $75         ;0402 PUSH
              69c7 00cf  ld   $cf         ;0403 CALL
              69c8 0060  ld   $60         ;0403 'Control'
              69c9 001a  ld   $1a         ;0405 LD
              69ca 0075  ld   $75         ;0405 'stepU'+1
              69cb 0082  ld   $82         ;0407 ANDI
              69cc 0080  ld   $80
              69cd 002b  ld   $2b         ;0409 STW
              69ce 006a  ld   $6a         ;0409 'tmp'
              69cf 0021  ld   $21         ;040b LDW
              69d0 0074  ld   $74         ;040b 'stepU'
              69d1 0082  ld   $82         ;040d ANDI
              69d2 0002  ld   $02
              69d3 0035  ld   $35         ;040f BCC
              69d4 003f  ld   $3f         ;0410 EQ
              69d5 0012  ld   $12
              69d6 0059  ld   $59         ;0412 LDI
              69d7 0040  ld   $40
              69d8 0099  ld   $99         ;0414 ADDW
              69d9 006a  ld   $6a         ;0414 'tmp'
              69da 00e3  ld   $e3         ;0416 ADDI
              69db 001b  ld   $1b
              69dc 002b  ld   $2b         ;0418 STW
              69dd 003a  ld   $3a         ;0418 'Color'
              69de 001a  ld   $1a         ;041a LD
              69df 0059  ld   $59         ;041a 'Head'+1
              69e0 00fc  ld   $fc         ;041c XORW
              69e1 0058  ld   $58         ;041c 'Head'
              69e2 0082  ld   $82         ;041e ANDI
              69e3 0002  ld   $02
              69e4 0035  ld   $35         ;0420 BCC
              69e5 003f  ld   $3f         ;0421 EQ
              69e6 0023  ld   $23
              69e7 0059  ld   $59         ;0423 LDI
              69e8 0001  ld   $01
              69e9 00fc  ld   $fc         ;0425 XORW
              69ea 003a  ld   $3a         ;0425 'Color'
              69eb 002b  ld   $2b         ;0427 STW
              69ec 003a  ld   $3a         ;0427 'Color'
              69ed 0021  ld   $21         ;0429 LDW
              69ee 0058  ld   $58         ;0429 'Head'
              69ef 00cf  ld   $cf         ;042b CALL
              69f0 005a  ld   $5a         ;042b 'DrawBlock'
              69f1 0021  ld   $21         ;042d LDW
              69f2 0058  ld   $58         ;042d 'Head'
              69f3 0099  ld   $99         ;042f ADDW
              69f4 0074  ld   $74         ;042f 'stepU'
              69f5 002b  ld   $2b         ;0431 STW
              69f6 0058  ld   $58         ;0431 'Head'
              69f7 0021  ld   $21         ;0433 LDW
              69f8 0058  ld   $58         ;0433 'Head'
              69f9 00ad  ld   $ad         ;0435 PEEK
              69fa 0082  ld   $82         ;0436 ANDI
              69fb fe00  bra  ac          ;+-----------------------------------+
              69fc fcfd  bra  $69fd       ;|                                   |
              69fd 1418  ld   $18,y       ;| Trampoline for page $6900 lookups |
              69fe e006  jmp  y,$06       ;|                                   |
              69ff c218  st   [$18]       ;+-----------------------------------+
              6a00 0003  ld   $03
              6a01 0035  ld   $35         ;0438 BCC
              6a02 003f  ld   $3f         ;0439 EQ
              6a03 003b  ld   $3b
              6a04 0063  ld   $63         ;043b POP
              6a05 00ff  ld   $ff         ;043c RET
              6a06 0021  ld   $21         ;043d LDW
              6a07 0058  ld   $58         ;043d 'Head'
              6a08 00ad  ld   $ad         ;043f PEEK
              6a09 008c  ld   $8c         ;0440 XORI
              6a0a 0018  ld   $18
              6a0b 0035  ld   $35         ;0442 BCC
              6a0c 0072  ld   $72         ;0443 NE
              6a0d 005d  ld   $5d
              6a0e 0059  ld   $59         ;0445 LDI
              6a0f 0040  ld   $40
              6a10 0099  ld   $99         ;0447 ADDW
              6a11 004a  ld   $4a         ;0447 'Timer'
              6a12 00cf  ld   $cf         ;0449 CALL
              6a13 007c  ld   $7c         ;0449 'SetNote'
              6a14 0059  ld   $59         ;044b LDI
              6a15 0002  ld   $02
              6a16 005e  ld   $5e         ;044d ST
              6a17 002c  ld   $2c
              6a18 0021  ld   $21         ;044f LDW
              6a19 005e  ld   $5e         ;044f 'Score'
              6a1a 0099  ld   $99         ;0451 ADDW
              6a1b 004a  ld   $4a         ;0451 'Timer'
              6a1c 002b  ld   $2b         ;0453 STW
              6a1d 005e  ld   $5e         ;0453 'Score'
              6a1e 00cf  ld   $cf         ;0455 CALL
              6a1f 007e  ld   $7e         ;0455 'DrawScore'
              6a20 0059  ld   $59         ;0457 LDI
              6a21 0005  ld   $05
              6a22 00cf  ld   $cf         ;0459 CALL
              6a23 0081  ld   $81         ;0459 'AddTimer'
              6a24 0093  ld   $93         ;045b INC
              6a25 0083  ld   $83         ;045b 'Grow'
              6a26 0093  ld   $93         ;045d INC
              6a27 0085  ld   $85         ;045d 'Drops'
              6a28 00cf  ld   $cf         ;045f CALL
              6a29 005c  ld   $5c         ;045f 'DrawHead'
              6a2a 0021  ld   $21         ;0461 LDW
              6a2b 0083  ld   $83         ;0461 'Grow'
              6a2c 0035  ld   $35         ;0463 BCC
              6a2d 0056  ld   $56         ;0464 LE
              6a2e 006c  ld   $6c
              6a2f 00e6  ld   $e6         ;0466 SUBI
              6a30 0001  ld   $01
              6a31 002b  ld   $2b         ;0468 STW
              6a32 0083  ld   $83         ;0468 'Grow'
              6a33 00cf  ld   $cf         ;046a CALL
              6a34 0087  ld   $87         ;046a 'AddFood'
              6a35 0090  ld   $90         ;046c BRA
              6a36 00aa  ld   $aa
              6a37 0021  ld   $21         ;046e LDW
              6a38 0089  ld   $89         ;046e 'Tail'
              6a39 00ad  ld   $ad         ;0470 PEEK
              6a3a 002b  ld   $2b         ;0471 STW
              6a3b 006a  ld   $6a         ;0471 'tmp'
              6a3c 0021  ld   $21         ;0473 LDW
              6a3d 0085  ld   $85         ;0473 'Drops'
              6a3e 0035  ld   $35         ;0475 BCC
              6a3f 0056  ld   $56         ;0476 LE
              6a40 007e  ld   $7e
              6a41 00e6  ld   $e6         ;0478 SUBI
              6a42 0001  ld   $01
              6a43 002b  ld   $2b         ;047a STW
              6a44 0085  ld   $85         ;047a 'Drops'
              6a45 0059  ld   $59         ;047c LDI
              6a46 003e  ld   $3e
              6a47 0090  ld   $90         ;047e BRA
              6a48 0080  ld   $80
              6a49 0059  ld   $59         ;0480 LDI
              6a4a 0004  ld   $04
              6a4b 002b  ld   $2b         ;0482 STW
              6a4c 003a  ld   $3a         ;0482 'Color'
              6a4d 0021  ld   $21         ;0484 LDW
              6a4e 0089  ld   $89         ;0484 'Tail'
              6a4f 00cf  ld   $cf         ;0486 CALL
              6a50 005a  ld   $5a         ;0486 'DrawBlock'
              6a51 0021  ld   $21         ;0488 LDW
              6a52 006a  ld   $6a         ;0488 'tmp'
              6a53 0082  ld   $82         ;048a ANDI
              6a54 0040  ld   $40
              6a55 0035  ld   $35         ;048c BCC
              6a56 0072  ld   $72         ;048d NE
              6a57 0092  ld   $92
              6a58 0011  ld   $11         ;048f LDWI
              6a59 0000  ld   $00
              6a5a 0001  ld   $01
              6a5b 0090  ld   $90         ;0492 BRA
              6a5c 0094  ld   $94
              6a5d 0059  ld   $59         ;0494 LDI
              6a5e 0001  ld   $01
              6a5f 002b  ld   $2b         ;0496 STW
              6a60 008b  ld   $8b         ;0496 'x'
              6a61 0021  ld   $21         ;0498 LDW
              6a62 006a  ld   $6a         ;0498 'tmp'
              6a63 0082  ld   $82         ;049a ANDI
              6a64 0080  ld   $80
              6a65 0035  ld   $35         ;049c BCC
              6a66 0072  ld   $72         ;049d NE
              6a67 00a1  ld   $a1
              6a68 0021  ld   $21         ;049f LDW
              6a69 008b  ld   $8b         ;049f 'x'
              6a6a 0090  ld   $90         ;04a1 BRA
              6a6b 00a5  ld   $a5
              6a6c 0059  ld   $59         ;04a3 LDI
              6a6d 0000  ld   $00
              6a6e 00b8  ld   $b8         ;04a5 SUBW
              6a6f 008b  ld   $8b         ;04a5 'x'
              6a70 00e9  ld   $e9         ;04a7 LSLW
              6a71 0099  ld   $99         ;04a8 ADDW
              6a72 0089  ld   $89         ;04a8 'Tail'
              6a73 002b  ld   $2b         ;04aa STW
              6a74 0089  ld   $89         ;04aa 'Tail'
              6a75 00cf  ld   $cf         ;04ac CALL
              6a76 0052  ld   $52         ;04ac 'TimeStep'
              6a77 0090  ld   $90         ;04ae BRA
              6a78 0001  ld   $01
              6a79 002b  ld   $2b         ;04b0 STW
              6a7a 008d  ld   $8d         ;04b0 'RunGame'
              6a7b 00cd  ld   $cd         ;04b2 DEF
              6a7c 00ee  ld   $ee
              6a7d 0075  ld   $75         ;04b4 PUSH
              6a7e 0059  ld   $59         ;04b5 LDI
              6a7f 0018  ld   $18
              6a80 002b  ld   $2b         ;04b7 STW
              6a81 003a  ld   $3a         ;04b7 'Color'
              6a82 0011  ld   $11         ;04b9 LDWI
              6a83 00a7  ld   $a7
              6a84 0004  ld   $04
              6a85 002b  ld   $2b         ;04bc STW
              6a86 0022  ld   $22
              6a87 00b4  ld   $b4         ;04be SYS
              6a88 00fe  ld   $fe
              6a89 002b  ld   $2b         ;04c0 STW
              6a8a 003c  ld   $3c         ;04c0 'Pos'
              6a8b 001a  ld   $1a         ;04c2 LD
              6a8c 003c  ld   $3c         ;04c2 'Pos'
              6a8d 00e6  ld   $e6         ;04c4 SUBI
              6a8e 0080  ld   $80
              6a8f 0035  ld   $35         ;04c6 BCC
              6a90 0053  ld   $53         ;04c7 GE
              6a91 00c9  ld   $c9
              6a92 00e3  ld   $e3         ;04c9 ADDI
              6a93 0096  ld   $96
              6a94 00e3  ld   $e3         ;04cb ADDI
              6a95 0005  ld   $05
              6a96 0082  ld   $82         ;04cd ANDI
              6a97 00fe  ld   $fe
              6a98 005e  ld   $5e         ;04cf ST
              6a99 003c  ld   $3c         ;04cf 'Pos'
              6a9a 001a  ld   $1a         ;04d1 LD
              6a9b 003d  ld   $3d         ;04d1 'Pos'+1
              6a9c 0082  ld   $82         ;04d3 ANDI
              6a9d 007f  ld   $7f
              6a9e 00e6  ld   $e6         ;04d5 SUBI
              6a9f 0040  ld   $40
              6aa0 0035  ld   $35         ;04d7 BCC
              6aa1 0053  ld   $53         ;04d8 GE
              6aa2 00da  ld   $da
              6aa3 00e3  ld   $e3         ;04da ADDI
              6aa4 0066  ld   $66
              6aa5 00e3  ld   $e3         ;04dc ADDI
              6aa6 0015  ld   $15
              6aa7 0082  ld   $82         ;04de ANDI
              6aa8 00fe  ld   $fe
              6aa9 005e  ld   $5e         ;04e0 ST
              6aaa 003d  ld   $3d         ;04e0 'Pos'+1
              6aab 0021  ld   $21         ;04e2 LDW
              6aac 003c  ld   $3c         ;04e2 'Pos'
              6aad 00ad  ld   $ad         ;04e4 PEEK
              6aae 008c  ld   $8c         ;04e5 XORI
              6aaf 0004  ld   $04
              6ab0 0035  ld   $35         ;04e7 BCC
              6ab1 0072  ld   $72         ;04e8 NE
              6ab2 00b7  ld   $b7
              6ab3 0021  ld   $21         ;04ea LDW
              6ab4 003c  ld   $3c         ;04ea 'Pos'
              6ab5 00cf  ld   $cf         ;04ec CALL
              6ab6 005a  ld   $5a         ;04ec 'DrawBlock'
              6ab7 0063  ld   $63         ;04ee POP
              6ab8 00ff  ld   $ff         ;04ef RET
              6ab9 002b  ld   $2b         ;04f0 STW
              6aba 0087  ld   $87         ;04f0 'AddFood'
              6abb 0059  ld   $59         ;04f2 LDI
              6abc 0000  ld   $00
              6abd 002b  ld   $2b         ;04f4 STW
              6abe 0076  ld   $76         ;04f4 'Bias'
              6abf 0093  ld   $93         ;04f6 INC
              6ac0 001b  ld   $1b         ;04f6 '_vLR'+1
              6ac1 00ff  ld   $ff         ;04f8 RET
              6ac2 0005  ld   $05         ;| RAM segment address (high byte first)
              6ac3 0000  ld   $00         ;|
              6ac4 00ed  ld   $ed         ;| Length (1..256)
              6ac5 00cd  ld   $cd         ;0500 DEF
              6ac6 00e6  ld   $e6
              6ac7 0075  ld   $75         ;0502 PUSH
              6ac8 001a  ld   $1a         ;0503 LD
              6ac9 0011  ld   $11
              6aca 0082  ld   $82         ;0505 ANDI
              6acb 00cf  ld   $cf
              6acc 008c  ld   $8c         ;0507 XORI
              6acd 00cf  ld   $cf
              6ace 0035  ld   $35         ;0509 BCC
              6acf 003f  ld   $3f         ;050a EQ
              6ad0 000e  ld   $0e
              6ad1 00cf  ld   $cf         ;050c CALL
              6ad2 008f  ld   $8f         ;050c 'SetupGame'
              6ad3 0063  ld   $63         ;050e POP
              6ad4 00ff  ld   $ff         ;050f RET
              6ad5 0021  ld   $21         ;0510 LDW
              6ad6 0078  ld   $78         ;0510 'TurnL'
              6ad7 002b  ld   $2b         ;0512 STW
              6ad8 0070  ld   $70         ;0512 'p'
              6ad9 0021  ld   $21         ;0514 LDW
              6ada 007a  ld   $7a         ;0514 'TurnR'
              6adb 002b  ld   $2b         ;0516 STW
              6adc 0091  ld   $91         ;0516 'q'
              6add 0021  ld   $21         ;0518 LDW
              6ade 0058  ld   $58         ;0518 'Head'
              6adf 0099  ld   $99         ;051a ADDW
              6ae0 0074  ld   $74         ;051a 'stepU'
              6ae1 00ad  ld   $ad         ;051c PEEK
              6ae2 008c  ld   $8c         ;051d XORI
              6ae3 0004  ld   $04
              6ae4 002b  ld   $2b         ;051f STW
              6ae5 006a  ld   $6a         ;051f 'tmp'
              6ae6 0035  ld   $35         ;0521 BCC
              6ae7 003f  ld   $3f         ;0522 EQ
              6ae8 002b  ld   $2b
              6ae9 008c  ld   $8c         ;0524 XORI
              6aea 001c  ld   $1c
              6aeb 0035  ld   $35         ;0526 BCC
              6aec 0072  ld   $72         ;0527 NE
              6aed 0029  ld   $29
              6aee 002b  ld   $2b         ;0529 STW
              6aef 006a  ld   $6a         ;0529 'tmp'
              6af0 0090  ld   $90         ;052b BRA
              6af1 0039  ld   $39
              6af2 0021  ld   $21         ;052d LDW
              6af3 0058  ld   $58         ;052d 'Head'
              6af4 0099  ld   $99         ;052f ADDW
              6af5 0074  ld   $74         ;052f 'stepU'
              6af6 0099  ld   $99         ;0531 ADDW
              6af7 0074  ld   $74         ;0531 'stepU'
              6af8 00ad  ld   $ad         ;0533 PEEK
              6af9 008c  ld   $8c         ;0534 XORI
              6afa 003e  ld   $3e
              6afb fe00  bra  ac          ;+-----------------------------------+
              6afc fcfd  bra  $6afd       ;|                                   |
              6afd 1418  ld   $18,y       ;| Trampoline for page $6a00 lookups |
              6afe e006  jmp  y,$06       ;|                                   |
              6aff c218  st   [$18]       ;+-----------------------------------+
              6b00 0035  ld   $35         ;0536 BCC
              6b01 0072  ld   $72         ;0537 NE
              6b02 0039  ld   $39
              6b03 0093  ld   $93         ;0539 INC
              6b04 006b  ld   $6b         ;0539 'tmp'+1
              6b05 0021  ld   $21         ;053b LDW
              6b06 0058  ld   $58         ;053b 'Head'
              6b07 00b8  ld   $b8         ;053d SUBW
              6b08 0072  ld   $72         ;053d 'stepV'
              6b09 00ad  ld   $ad         ;053f PEEK
              6b0a 008c  ld   $8c         ;0540 XORI
              6b0b 0004  ld   $04
              6b0c 0035  ld   $35         ;0542 BCC
              6b0d 003f  ld   $3f         ;0543 EQ
              6b0e 0054  ld   $54
              6b0f 008c  ld   $8c         ;0545 XORI
              6b10 001c  ld   $1c
              6b11 0035  ld   $35         ;0547 BCC
              6b12 0072  ld   $72         ;0548 NE
              6b13 004e  ld   $4e
              6b14 002b  ld   $2b         ;054a STW
              6b15 0091  ld   $91         ;054a 'q'
              6b16 0093  ld   $93         ;054c INC
              6b17 006b  ld   $6b         ;054c 'tmp'+1
              6b18 0090  ld   $90         ;054e BRA
              6b19 0052  ld   $52
              6b1a 0059  ld   $59         ;0550 LDI
              6b1b 0000  ld   $00
              6b1c 002b  ld   $2b         ;0552 STW
              6b1d 0070  ld   $70         ;0552 'p'
              6b1e 0090  ld   $90         ;0554 BRA
              6b1f 0071  ld   $71
              6b20 0021  ld   $21         ;0556 LDW
              6b21 0058  ld   $58         ;0556 'Head'
              6b22 00b8  ld   $b8         ;0558 SUBW
              6b23 0072  ld   $72         ;0558 'stepV'
              6b24 00b8  ld   $b8         ;055a SUBW
              6b25 0072  ld   $72         ;055a 'stepV'
              6b26 00ad  ld   $ad         ;055c PEEK
              6b27 008c  ld   $8c         ;055d XORI
              6b28 0004  ld   $04
              6b29 0035  ld   $35         ;055f BCC
              6b2a 003f  ld   $3f         ;0560 EQ
              6b2b 0071  ld   $71
              6b2c 008c  ld   $8c         ;0562 XORI
              6b2d 001c  ld   $1c
              6b2e 0035  ld   $35         ;0564 BCC
              6b2f 0072  ld   $72         ;0565 NE
              6b30 006b  ld   $6b
              6b31 002b  ld   $2b         ;0567 STW
              6b32 0091  ld   $91         ;0567 'q'
              6b33 0093  ld   $93         ;0569 INC
              6b34 006b  ld   $6b         ;0569 'tmp'+1
              6b35 0090  ld   $90         ;056b BRA
              6b36 0071  ld   $71
              6b37 0021  ld   $21         ;056d LDW
              6b38 0076  ld   $76         ;056d 'Bias'
              6b39 00e3  ld   $e3         ;056f ADDI
              6b3a 000f  ld   $0f
              6b3b 0021  ld   $21         ;0571 LDW
              6b3c 0076  ld   $76         ;0571 'Bias'
              6b3d 0021  ld   $21         ;0573 LDW
              6b3e 0058  ld   $58         ;0573 'Head'
              6b3f 0099  ld   $99         ;0575 ADDW
              6b40 0072  ld   $72         ;0575 'stepV'
              6b41 00ad  ld   $ad         ;0577 PEEK
              6b42 008c  ld   $8c         ;0578 XORI
              6b43 0004  ld   $04
              6b44 0035  ld   $35         ;057a BCC
              6b45 003f  ld   $3f         ;057b EQ
              6b46 008c  ld   $8c
              6b47 008c  ld   $8c         ;057d XORI
              6b48 001c  ld   $1c
              6b49 0035  ld   $35         ;057f BCC
              6b4a 0072  ld   $72         ;0580 NE
              6b4b 0086  ld   $86
              6b4c 002b  ld   $2b         ;0582 STW
              6b4d 0070  ld   $70         ;0582 'p'
              6b4e 0093  ld   $93         ;0584 INC
              6b4f 006b  ld   $6b         ;0584 'tmp'+1
              6b50 0090  ld   $90         ;0586 BRA
              6b51 008a  ld   $8a
              6b52 0059  ld   $59         ;0588 LDI
              6b53 0000  ld   $00
              6b54 002b  ld   $2b         ;058a STW
              6b55 0091  ld   $91         ;058a 'q'
              6b56 0090  ld   $90         ;058c BRA
              6b57 00a9  ld   $a9
              6b58 0021  ld   $21         ;058e LDW
              6b59 0058  ld   $58         ;058e 'Head'
              6b5a 0099  ld   $99         ;0590 ADDW
              6b5b 0072  ld   $72         ;0590 'stepV'
              6b5c 0099  ld   $99         ;0592 ADDW
              6b5d 0072  ld   $72         ;0592 'stepV'
              6b5e 00ad  ld   $ad         ;0594 PEEK
              6b5f 008c  ld   $8c         ;0595 XORI
              6b60 0004  ld   $04
              6b61 0035  ld   $35         ;0597 BCC
              6b62 003f  ld   $3f         ;0598 EQ
              6b63 00a9  ld   $a9
              6b64 008c  ld   $8c         ;059a XORI
              6b65 001c  ld   $1c
              6b66 0035  ld   $35         ;059c BCC
              6b67 0072  ld   $72         ;059d NE
              6b68 00a3  ld   $a3
              6b69 002b  ld   $2b         ;059f STW
              6b6a 0070  ld   $70         ;059f 'p'
              6b6b 0093  ld   $93         ;05a1 INC
              6b6c 006b  ld   $6b         ;05a1 'tmp'+1
              6b6d 0090  ld   $90         ;05a3 BRA
              6b6e 00a9  ld   $a9
              6b6f 0021  ld   $21         ;05a5 LDW
              6b70 0076  ld   $76         ;05a5 'Bias'
              6b71 00e6  ld   $e6         ;05a7 SUBI
              6b72 000f  ld   $0f
              6b73 0021  ld   $21         ;05a9 LDW
              6b74 0076  ld   $76         ;05a9 'Bias'
              6b75 0021  ld   $21         ;05ab LDW
              6b76 006a  ld   $6a         ;05ab 'tmp'
              6b77 0035  ld   $35         ;05ad BCC
              6b78 0072  ld   $72         ;05ae NE
              6b79 00bb  ld   $bb
              6b7a 001a  ld   $1a         ;05b0 LD
              6b7b 0006  ld   $06
              6b7c 00e6  ld   $e6         ;05b2 SUBI
              6b7d 000d  ld   $0d
              6b7e 0035  ld   $35         ;05b4 BCC
              6b7f 0053  ld   $53         ;05b5 GE
              6b80 00b9  ld   $b9
              6b81 0059  ld   $59         ;05b7 LDI
              6b82 0001  ld   $01
              6b83 0090  ld   $90         ;05b9 BRA
              6b84 00bb  ld   $bb
              6b85 0059  ld   $59         ;05bb LDI
              6b86 0000  ld   $00
              6b87 0035  ld   $35         ;05bd BCC
              6b88 003f  ld   $3f         ;05be EQ
              6b89 00e4  ld   $e4
              6b8a 0021  ld   $21         ;05c0 LDW
              6b8b 0070  ld   $70         ;05c0 'p'
              6b8c 0035  ld   $35         ;05c2 BCC
              6b8d 0072  ld   $72         ;05c3 NE
              6b8e 00c7  ld   $c7
              6b8f 0021  ld   $21         ;05c5 LDW
              6b90 0091  ld   $91         ;05c5 'q'
              6b91 0090  ld   $90         ;05c7 BRA
              6b92 00df  ld   $df
              6b93 0021  ld   $21         ;05c9 LDW
              6b94 0091  ld   $91         ;05c9 'q'
              6b95 0035  ld   $35         ;05cb BCC
              6b96 0072  ld   $72         ;05cc NE
              6b97 00d0  ld   $d0
              6b98 0021  ld   $21         ;05ce LDW
              6b99 0070  ld   $70         ;05ce 'p'
              6b9a 0090  ld   $90         ;05d0 BRA
              6b9b 00df  ld   $df
              6b9c 001a  ld   $1a         ;05d2 LD
              6b9d 0006  ld   $06
              6b9e 00e6  ld   $e6         ;05d4 SUBI
              6b9f 0080  ld   $80
              6ba0 0099  ld   $99         ;05d6 ADDW
              6ba1 0076  ld   $76         ;05d6 'Bias'
              6ba2 0035  ld   $35         ;05d8 BCC
              6ba3 0053  ld   $53         ;05d9 GE
              6ba4 00dd  ld   $dd
              6ba5 0021  ld   $21         ;05db LDW
              6ba6 0070  ld   $70         ;05db 'p'
              6ba7 0090  ld   $90         ;05dd BRA
              6ba8 00df  ld   $df
              6ba9 0021  ld   $21         ;05df LDW
              6baa 0091  ld   $91         ;05df 'q'
              6bab 0035  ld   $35         ;05e1 BCC
              6bac 003f  ld   $3f         ;05e2 EQ
              6bad 00e4  ld   $e4
              6bae 00cf  ld   $cf         ;05e4 CALL
              6baf 0018  ld   $18         ;05e4 vAC
              6bb0 0063  ld   $63         ;05e6 POP
              6bb1 00ff  ld   $ff         ;05e7 RET
              6bb2 002b  ld   $2b         ;05e8 STW
              6bb3 0093  ld   $93         ;05e8 'AutoControl'
              6bb4 0093  ld   $93         ;05ea INC
              6bb5 001b  ld   $1b         ;05ea '_vLR'+1
              6bb6 00ff  ld   $ff         ;05ec RET
              6bb7 0006  ld   $06         ;| RAM segment address (high byte first)
              6bb8 0000  ld   $00         ;|
              6bb9 00fa  ld   $fa         ;| Length (1..256)
              6bba 00cd  ld   $cd         ;0600 DEF
              6bbb 0016  ld   $16
              6bbc 0075  ld   $75         ;0602 PUSH
              6bbd 0099  ld   $99         ;0603 ADDW
              6bbe 004a  ld   $4a         ;0603 'Timer'
              6bbf 002b  ld   $2b         ;0605 STW
              6bc0 004a  ld   $4a         ;0605 'Timer'
              6bc1 00e6  ld   $e6         ;0607 SUBI
              6bc2 000f  ld   $0f
              6bc3 0035  ld   $35         ;0609 BCC
              6bc4 0056  ld   $56         ;060a LE
              6bc5 000e  ld   $0e
              6bc6 0059  ld   $59         ;060c LDI
              6bc7 000f  ld   $0f
              6bc8 002b  ld   $2b         ;060e STW
              6bc9 004a  ld   $4a         ;060e 'Timer'
              6bca 001a  ld   $1a         ;0610 LD
              6bcb 000e  ld   $0e
              6bcc 002b  ld   $2b         ;0612 STW
              6bcd 0048  ld   $48         ;0612 'TimeOut'
              6bce 00cf  ld   $cf         ;0614 CALL
              6bcf 004c  ld   $4c         ;0614 'DrawTimer'
              6bd0 0063  ld   $63         ;0616 POP
              6bd1 00ff  ld   $ff         ;0617 RET
              6bd2 002b  ld   $2b         ;0618 STW
              6bd3 0081  ld   $81         ;0618 'AddTimer'
              6bd4 00cd  ld   $cd         ;061a DEF
              6bd5 00b3  ld   $b3
              6bd6 0075  ld   $75         ;061c PUSH
              6bd7 0059  ld   $59         ;061d LDI
              6bd8 0000  ld   $00
              6bd9 002b  ld   $2b         ;061f STW
              6bda 005e  ld   $5e         ;061f 'Score'
              6bdb 002b  ld   $2b         ;0621 STW
              6bdc 004a  ld   $4a         ;0621 'Timer'
              6bdd 00cf  ld   $cf         ;0623 CALL
              6bde 007e  ld   $7e         ;0623 'DrawScore'
              6bdf 0059  ld   $59         ;0625 LDI
              6be0 000f  ld   $0f
              6be1 002b  ld   $2b         ;0627 STW
              6be2 004a  ld   $4a         ;0627 'Timer'
              6be3 00cf  ld   $cf         ;0629 CALL
              6be4 004c  ld   $4c         ;0629 'DrawTimer'
              6be5 00cf  ld   $cf         ;062b CALL
              6be6 0064  ld   $64         ;062b 'DrawHighScore'
              6be7 0059  ld   $59         ;062d LDI
              6be8 0004  ld   $04
              6be9 002b  ld   $2b         ;062f STW
              6bea 0038  ld   $38         ;062f 'BgColor'
              6beb 0011  ld   $11         ;0631 LDWI
              6bec 0000  ld   $00
              6bed 0010  ld   $10
              6bee 002b  ld   $2b         ;0634 STW
              6bef 003c  ld   $3c         ;0634 'Pos'
              6bf0 00cf  ld   $cf         ;0636 CALL
              6bf1 006c  ld   $6c         ;0636 'ClearScreen'
              6bf2 0059  ld   $59         ;0638 LDI
              6bf3 001a  ld   $1a
              6bf4 002b  ld   $2b         ;063a STW
              6bf5 003a  ld   $3a         ;063a 'Color'
              6bf6 0059  ld   $59         ;063c LDI
              6bf7 0001  ld   $01
              6bf8 002b  ld   $2b         ;063e STW
              6bf9 0044  ld   $44         ;063e 'Step'
              6bfa 0059  ld   $59         ;0640 LDI
              6bfb fe00  bra  ac          ;+-----------------------------------+
              6bfc fcfd  bra  $6bfd       ;|                                   |
              6bfd 1418  ld   $18,y       ;| Trampoline for page $6b00 lookups |
              6bfe e006  jmp  y,$06       ;|                                   |
              6bff c218  st   [$18]       ;+-----------------------------------+
              6c00 009f  ld   $9f
              6c01 00cf  ld   $cf         ;0642 CALL
              6c02 0046  ld   $46         ;0642 'DrawLine'
              6c03 0011  ld   $11         ;0644 LDWI
              6c04 0000  ld   $00
              6c05 0001  ld   $01
              6c06 002b  ld   $2b         ;0647 STW
              6c07 0044  ld   $44         ;0647 'Step'
              6c08 0059  ld   $59         ;0649 LDI
              6c09 006f  ld   $6f
              6c0a 00cf  ld   $cf         ;064b CALL
              6c0b 0046  ld   $46         ;064b 'DrawLine'
              6c0c 0011  ld   $11         ;064d LDWI
              6c0d 00ff  ld   $ff
              6c0e 00ff  ld   $ff
              6c0f 002b  ld   $2b         ;0650 STW
              6c10 0044  ld   $44         ;0650 'Step'
              6c11 0059  ld   $59         ;0652 LDI
              6c12 009f  ld   $9f
              6c13 00cf  ld   $cf         ;0654 CALL
              6c14 0046  ld   $46         ;0654 'DrawLine'
              6c15 0011  ld   $11         ;0656 LDWI
              6c16 0000  ld   $00
              6c17 00ff  ld   $ff
              6c18 002b  ld   $2b         ;0659 STW
              6c19 0044  ld   $44         ;0659 'Step'
              6c1a 0059  ld   $59         ;065b LDI
              6c1b 006e  ld   $6e
              6c1c 00cf  ld   $cf         ;065d CALL
              6c1d 0046  ld   $46         ;065d 'DrawLine'
              6c1e 0059  ld   $59         ;065f LDI
              6c1f 0001  ld   $01
              6c20 002b  ld   $2b         ;0661 STW
              6c21 0044  ld   $44         ;0661 'Step'
              6c22 0059  ld   $59         ;0663 LDI
              6c23 009e  ld   $9e
              6c24 00cf  ld   $cf         ;0665 CALL
              6c25 0046  ld   $46         ;0665 'DrawLine'
              6c26 0011  ld   $11         ;0667 LDWI
              6c27 0000  ld   $00
              6c28 0001  ld   $01
              6c29 002b  ld   $2b         ;066a STW
              6c2a 0044  ld   $44         ;066a 'Step'
              6c2b 0059  ld   $59         ;066c LDI
              6c2c 006d  ld   $6d
              6c2d 00cf  ld   $cf         ;066e CALL
              6c2e 0046  ld   $46         ;066e 'DrawLine'
              6c2f 0011  ld   $11         ;0670 LDWI
              6c30 00ff  ld   $ff
              6c31 00ff  ld   $ff
              6c32 002b  ld   $2b         ;0673 STW
              6c33 0044  ld   $44         ;0673 'Step'
              6c34 0059  ld   $59         ;0675 LDI
              6c35 009d  ld   $9d
              6c36 00cf  ld   $cf         ;0677 CALL
              6c37 0046  ld   $46         ;0677 'DrawLine'
              6c38 0011  ld   $11         ;0679 LDWI
              6c39 0000  ld   $00
              6c3a 00ff  ld   $ff
              6c3b 002b  ld   $2b         ;067c STW
              6c3c 0044  ld   $44         ;067c 'Step'
              6c3d 0059  ld   $59         ;067e LDI
              6c3e 006d  ld   $6d
              6c3f 00cf  ld   $cf         ;0680 CALL
              6c40 0046  ld   $46         ;0680 'DrawLine'
              6c41 00cf  ld   $cf         ;0682 CALL
              6c42 0095  ld   $95         ;0682 'GetReady'
              6c43 0011  ld   $11         ;0684 LDWI
              6c44 0030  ld   $30
              6c45 0044  ld   $44
              6c46 002b  ld   $2b         ;0687 STW
              6c47 0058  ld   $58         ;0687 'Head'
              6c48 002b  ld   $2b         ;0689 STW
              6c49 0089  ld   $89         ;0689 'Tail'
              6c4a 00cf  ld   $cf         ;068b CALL
              6c4b 005c  ld   $5c         ;068b 'DrawHead'
              6c4c 0059  ld   $59         ;068d LDI
              6c4d 0000  ld   $00
              6c4e 002b  ld   $2b         ;068f STW
              6c4f 0083  ld   $83         ;068f 'Grow'
              6c50 002b  ld   $2b         ;0691 STW
              6c51 0085  ld   $85         ;0691 'Drops'
              6c52 002b  ld   $2b         ;0693 STW
              6c53 004a  ld   $4a         ;0693 'Timer'
              6c54 0059  ld   $59         ;0695 LDI
              6c55 000f  ld   $0f
              6c56 00cf  ld   $cf         ;0697 CALL
              6c57 0081  ld   $81         ;0697 'AddTimer'
              6c58 0059  ld   $59         ;0699 LDI
              6c59 0002  ld   $02
              6c5a 002b  ld   $2b         ;069b STW
              6c5b 0074  ld   $74         ;069b 'stepU'
              6c5c 0011  ld   $11         ;069d LDWI
              6c5d 0000  ld   $00
              6c5e 0002  ld   $02
              6c5f 002b  ld   $2b         ;06a0 STW
              6c60 0072  ld   $72         ;06a0 'stepV'
              6c61 0059  ld   $59         ;06a2 LDI
              6c62 0019  ld   $19
              6c63 002b  ld   $2b         ;06a4 STW
              6c64 0034  ld   $34         ;06a4 'i'
              6c65 00cf  ld   $cf         ;06a6 CALL
              6c66 0087  ld   $87         ;06a6 'AddFood'
              6c67 0021  ld   $21         ;06a8 LDW
              6c68 0034  ld   $34         ;06a8 'i'
              6c69 00e6  ld   $e6         ;06aa SUBI
              6c6a 0001  ld   $01
              6c6b 0035  ld   $35         ;06ac BCC
              6c6c 004d  ld   $4d         ;06ad GT
              6c6d 00a2  ld   $a2
              6c6e 0021  ld   $21         ;06af LDW
              6c6f 0097  ld   $97         ;06af 'LaunchControl'
              6c70 002b  ld   $2b         ;06b1 STW
              6c71 0060  ld   $60         ;06b1 'Control'
              6c72 0063  ld   $63         ;06b3 POP
              6c73 00ff  ld   $ff         ;06b4 RET
              6c74 002b  ld   $2b         ;06b5 STW
              6c75 008f  ld   $8f         ;06b5 'SetupGame'
              6c76 00cd  ld   $cd         ;06b7 DEF
              6c77 00f0  ld   $f0
              6c78 0075  ld   $75         ;06b9 PUSH
              6c79 0011  ld   $11         ;06ba LDWI
              6c7a 0002  ld   $02
              6c7b 0008  ld   $08
              6c7c 002b  ld   $2b         ;06bd STW
              6c7d 003c  ld   $3c         ;06bd 'Pos'
              6c7e 0021  ld   $21         ;06bf LDW
              6c7f 005e  ld   $5e         ;06bf 'Score'
              6c80 00b8  ld   $b8         ;06c1 SUBW
              6c81 0030  ld   $30         ;06c1 'HighScore'
              6c82 0035  ld   $35         ;06c3 BCC
              6c83 0056  ld   $56         ;06c4 LE
              6c84 00c8  ld   $c8
              6c85 0059  ld   $59         ;06c6 LDI
              6c86 001e  ld   $1e
              6c87 0090  ld   $90         ;06c8 BRA
              6c88 00ca  ld   $ca
              6c89 0059  ld   $59         ;06ca LDI
              6c8a 0008  ld   $08
              6c8b 002b  ld   $2b         ;06cc STW
              6c8c 003a  ld   $3a         ;06cc 'Color'
              6c8d 0059  ld   $59         ;06ce LDI
              6c8e 0000  ld   $00
              6c8f 002b  ld   $2b         ;06d0 STW
              6c90 0038  ld   $38         ;06d0 'BgColor'
              6c91 0021  ld   $21         ;06d2 LDW
              6c92 005e  ld   $5e         ;06d2 'Score'
              6c93 002b  ld   $2b         ;06d4 STW
              6c94 0054  ld   $54         ;06d4 'Value'
              6c95 00cf  ld   $cf         ;06d6 CALL
              6c96 0099  ld   $99         ;06d6 'DrawNumber4'
              6c97 0021  ld   $21         ;06d8 LDW
              6c98 005e  ld   $5e         ;06d8 'Score'
              6c99 00e6  ld   $e6         ;06da SUBI
              6c9a 0064  ld   $64
              6c9b 0035  ld   $35         ;06dc BCC
              6c9c 0053  ld   $53         ;06dd GE
              6c9d 00e1  ld   $e1
              6c9e 0059  ld   $59         ;06df LDI
              6c9f 0004  ld   $04
              6ca0 0090  ld   $90         ;06e1 BRA
              6ca1 00ec  ld   $ec
              6ca2 00e6  ld   $e6         ;06e3 SUBI
              6ca3 00c8  ld   $c8
              6ca4 0035  ld   $35         ;06e5 BCC
              6ca5 0053  ld   $53         ;06e6 GE
              6ca6 00ea  ld   $ea
              6ca7 0059  ld   $59         ;06e8 LDI
              6ca8 0003  ld   $03
              6ca9 0090  ld   $90         ;06ea BRA
              6caa 00ec  ld   $ec
              6cab 0059  ld   $59         ;06ec LDI
              6cac 0002  ld   $02
              6cad 002b  ld   $2b         ;06ee STW
              6cae 004e  ld   $4e         ;06ee 'Delay'
              6caf 0063  ld   $63         ;06f0 POP
              6cb0 00ff  ld   $ff         ;06f1 RET
              6cb1 002b  ld   $2b         ;06f2 STW
              6cb2 007e  ld   $7e         ;06f2 'DrawScore'
              6cb3 0011  ld   $11         ;06f4 LDWI
              6cb4 00a0  ld   $a0
              6cb5 0008  ld   $08
              6cb6 002b  ld   $2b         ;06f7 STW
              6cb7 001a  ld   $1a
              6cb8 00ff  ld   $ff         ;06f9 RET
              6cb9 0008  ld   $08         ;| RAM segment address (high byte first)
              6cba 00a0  ld   $a0         ;|
              6cbb 0056  ld   $56         ;| Length (1..256)
              6cbc 00cd  ld   $cd         ;08a0 DEF
              6cbd 00d4  ld   $d4
              6cbe 0075  ld   $75         ;08a2 PUSH
              6cbf 0011  ld   $11         ;08a3 LDWI
              6cc0 009c  ld   $9c
              6cc1 0044  ld   $44
              6cc2 00b8  ld   $b8         ;08a6 SUBW
              6cc3 0058  ld   $58         ;08a6 'Head'
              6cc4 0035  ld   $35         ;08a8 BCC
              6cc5 0072  ld   $72         ;08a9 NE
              6cc6 00c3  ld   $c3
              6cc7 0059  ld   $59         ;08ab LDI
              6cc8 001e  ld   $1e
              6cc9 002b  ld   $2b         ;08ad STW
              6cca 003a  ld   $3a         ;08ad 'Color'
              6ccb 0011  ld   $11         ;08af LDWI
              6ccc 0002  ld   $02
              6ccd 0008  ld   $08
              6cce 002b  ld   $2b         ;08b2 STW
              6ccf 003c  ld   $3c         ;08b2 'Pos'
              6cd0 00cd  ld   $cd         ;08b4 DEF
              6cd1 00b9  ld   $b9
              6cd2 0041  ld   $41         ;08b6 'A'
              6cd3 0055  ld   $55         ;08b7 'U'
              6cd4 0054  ld   $54         ;08b8 'T'
              6cd5 004f  ld   $4f         ;08b9 'O'
              6cd6 0000  ld   $00         ;08ba 0
              6cd7 00cf  ld   $cf         ;08bb CALL
              6cd8 0042  ld   $42         ;08bb 'PrintText'
              6cd9 0021  ld   $21         ;08bd LDW
              6cda 0093  ld   $93         ;08bd 'AutoControl'
              6cdb 002b  ld   $2b         ;08bf STW
              6cdc 0060  ld   $60         ;08bf 'Control'
              6cdd 00cf  ld   $cf         ;08c1 CALL
              6cde 0018  ld   $18         ;08c1 vAC
              6cdf 0090  ld   $90         ;08c3 BRA
              6ce0 00d2  ld   $d2
              6ce1 001a  ld   $1a         ;08c5 LD
              6ce2 0011  ld   $11
              6ce3 0082  ld   $82         ;08c7 ANDI
              6ce4 00cf  ld   $cf
              6ce5 008c  ld   $8c         ;08c9 XORI
              6ce6 00cf  ld   $cf
              6ce7 0035  ld   $35         ;08cb BCC
              6ce8 003f  ld   $3f         ;08cc EQ
              6ce9 00d2  ld   $d2
              6cea 0021  ld   $21         ;08ce LDW
              6ceb 0062  ld   $62         ;08ce 'PlayerControl'
              6cec 002b  ld   $2b         ;08d0 STW
              6ced 0060  ld   $60         ;08d0 'Control'
              6cee 00cf  ld   $cf         ;08d2 CALL
              6cef 0018  ld   $18         ;08d2 vAC
              6cf0 0063  ld   $63         ;08d4 POP
              6cf1 00ff  ld   $ff         ;08d5 RET
              6cf2 002b  ld   $2b         ;08d6 STW
              6cf3 0097  ld   $97         ;08d6 'LaunchControl'
              6cf4 00cd  ld   $cd         ;08d8 DEF
              6cf5 00ef  ld   $ef
              6cf6 0075  ld   $75         ;08da PUSH
              6cf7 0059  ld   $59         ;08db LDI
              6cf8 0020  ld   $20
              6cf9 002b  ld   $2b         ;08dd STW
              6cfa 0032  ld   $32         ;08dd 'Char'
              6cfb fe00  bra  ac          ;+-----------------------------------+
              6cfc fcfd  bra  $6cfd       ;|                                   |
              6cfd 1418  ld   $18,y       ;| Trampoline for page $6c00 lookups |
              6cfe e006  jmp  y,$06       ;|                                   |
              6cff c218  st   [$18]       ;+-----------------------------------+
              6d00 0059  ld   $59         ;08df LDI
              6d01 000a  ld   $0a
              6d02 002b  ld   $2b         ;08e1 STW
              6d03 009b  ld   $9b         ;08e1 'Radix'
              6d04 00cf  ld   $cf         ;08e3 CALL
              6d05 009d  ld   $9d         ;08e3 'DrawNextDigit'
              6d06 0059  ld   $59         ;08e5 LDI
              6d07 0030  ld   $30
              6d08 002b  ld   $2b         ;08e7 STW
              6d09 0032  ld   $32         ;08e7 'Char'
              6d0a 0059  ld   $59         ;08e9 LDI
              6d0b 0001  ld   $01
              6d0c 002b  ld   $2b         ;08eb STW
              6d0d 009b  ld   $9b         ;08eb 'Radix'
              6d0e 00cf  ld   $cf         ;08ed CALL
              6d0f 009d  ld   $9d         ;08ed 'DrawNextDigit'
              6d10 0063  ld   $63         ;08ef POP
              6d11 00ff  ld   $ff         ;08f0 RET
              6d12 002b  ld   $2b         ;08f1 STW
              6d13 0056  ld   $56         ;08f1 'DrawNumber2'
              6d14 0093  ld   $93         ;08f3 INC
              6d15 001b  ld   $1b         ;08f3 '_vLR'+1
              6d16 00ff  ld   $ff         ;08f5 RET
              6d17 0009  ld   $09         ;| RAM segment address (high byte first)
              6d18 00a0  ld   $a0         ;|
              6d19 0056  ld   $56         ;| Length (1..256)
              6d1a 00cd  ld   $cd         ;09a0 DEF
              6d1b 00c7  ld   $c7
              6d1c 0075  ld   $75         ;09a2 PUSH
              6d1d 0021  ld   $21         ;09a3 LDW
              6d1e 0054  ld   $54         ;09a3 'Value'
              6d1f 00b8  ld   $b8         ;09a5 SUBW
              6d20 009b  ld   $9b         ;09a5 'Radix'
              6d21 0035  ld   $35         ;09a7 BCC
              6d22 0050  ld   $50         ;09a8 LT
              6d23 00c3  ld   $c3
              6d24 002b  ld   $2b         ;09aa STW
              6d25 0054  ld   $54         ;09aa 'Value'
              6d26 0059  ld   $59         ;09ac LDI
              6d27 0031  ld   $31
              6d28 002b  ld   $2b         ;09ae STW
              6d29 0032  ld   $32         ;09ae 'Char'
              6d2a 0021  ld   $21         ;09b0 LDW
              6d2b 0054  ld   $54         ;09b0 'Value'
              6d2c 00b8  ld   $b8         ;09b2 SUBW
              6d2d 009b  ld   $9b         ;09b2 'Radix'
              6d2e 0035  ld   $35         ;09b4 BCC
              6d2f 0050  ld   $50         ;09b5 LT
              6d30 00bb  ld   $bb
              6d31 002b  ld   $2b         ;09b7 STW
              6d32 0054  ld   $54         ;09b7 'Value'
              6d33 0093  ld   $93         ;09b9 INC
              6d34 0032  ld   $32         ;09b9 'Char'
              6d35 0090  ld   $90         ;09bb BRA
              6d36 00b0  ld   $b0
              6d37 00cf  ld   $cf         ;09bd CALL
              6d38 003e  ld   $3e         ;09bd 'PrintChar'
              6d39 0059  ld   $59         ;09bf LDI
              6d3a 0030  ld   $30
              6d3b 002b  ld   $2b         ;09c1 STW
              6d3c 0032  ld   $32         ;09c1 'Char'
              6d3d 0090  ld   $90         ;09c3 BRA
              6d3e 00c5  ld   $c5
              6d3f 00cf  ld   $cf         ;09c5 CALL
              6d40 003e  ld   $3e         ;09c5 'PrintChar'
              6d41 0063  ld   $63         ;09c7 POP
              6d42 00ff  ld   $ff         ;09c8 RET
              6d43 002b  ld   $2b         ;09c9 STW
              6d44 009d  ld   $9d         ;09c9 'DrawNextDigit'
              6d45 00cd  ld   $cd         ;09cb DEF
              6d46 00ef  ld   $ef
              6d47 0075  ld   $75         ;09cd PUSH
              6d48 0059  ld   $59         ;09ce LDI
              6d49 0020  ld   $20
              6d4a 002b  ld   $2b         ;09d0 STW
              6d4b 0032  ld   $32         ;09d0 'Char'
              6d4c 0011  ld   $11         ;09d2 LDWI
              6d4d 00e8  ld   $e8
              6d4e 0003  ld   $03
              6d4f 002b  ld   $2b         ;09d5 STW
              6d50 009b  ld   $9b         ;09d5 'Radix'
              6d51 00cf  ld   $cf         ;09d7 CALL
              6d52 009d  ld   $9d         ;09d7 'DrawNextDigit'
              6d53 0059  ld   $59         ;09d9 LDI
              6d54 0064  ld   $64
              6d55 002b  ld   $2b         ;09db STW
              6d56 009b  ld   $9b         ;09db 'Radix'
              6d57 00cf  ld   $cf         ;09dd CALL
              6d58 009d  ld   $9d         ;09dd 'DrawNextDigit'
              6d59 0059  ld   $59         ;09df LDI
              6d5a 000a  ld   $0a
              6d5b 002b  ld   $2b         ;09e1 STW
              6d5c 009b  ld   $9b         ;09e1 'Radix'
              6d5d 00cf  ld   $cf         ;09e3 CALL
              6d5e 009d  ld   $9d         ;09e3 'DrawNextDigit'
              6d5f 0059  ld   $59         ;09e5 LDI
              6d60 0030  ld   $30
              6d61 002b  ld   $2b         ;09e7 STW
              6d62 0032  ld   $32         ;09e7 'Char'
              6d63 0059  ld   $59         ;09e9 LDI
              6d64 0001  ld   $01
              6d65 002b  ld   $2b         ;09eb STW
              6d66 009b  ld   $9b         ;09eb 'Radix'
              6d67 00cf  ld   $cf         ;09ed CALL
              6d68 009d  ld   $9d         ;09ed 'DrawNextDigit'
              6d69 0063  ld   $63         ;09ef POP
              6d6a 00ff  ld   $ff         ;09f0 RET
              6d6b 002b  ld   $2b         ;09f1 STW
              6d6c 0099  ld   $99         ;09f1 'DrawNumber4'
              6d6d 0093  ld   $93         ;09f3 INC
              6d6e 001b  ld   $1b         ;09f3 '_vLR'+1
              6d6f 00ff  ld   $ff         ;09f5 RET
              6d70 000a  ld   $0a         ;| RAM segment address (high byte first)
              6d71 00a0  ld   $a0         ;|
              6d72 0056  ld   $56         ;| Length (1..256)
              6d73 00cd  ld   $cd         ;0aa0 DEF
              6d74 00ba  ld   $ba
              6d75 0075  ld   $75         ;0aa2 PUSH
              6d76 0011  ld   $11         ;0aa3 LDWI
              6d77 0074  ld   $74
              6d78 0008  ld   $08
              6d79 002b  ld   $2b         ;0aa6 STW
              6d7a 003c  ld   $3c         ;0aa6 'Pos'
              6d7b 0059  ld   $59         ;0aa8 LDI
              6d7c 0000  ld   $00
              6d7d 002b  ld   $2b         ;0aaa STW
              6d7e 0038  ld   $38         ;0aaa 'BgColor'
              6d7f 00cd  ld   $cd         ;0aac DEF
              6d80 00b0  ld   $b0
              6d81 0048  ld   $48         ;0aae 'H'
              6d82 0049  ld   $49         ;0aaf 'I'
              6d83 0020  ld   $20         ;0ab0 ' '
              6d84 0000  ld   $00         ;0ab1 0
              6d85 00cf  ld   $cf         ;0ab2 CALL
              6d86 0042  ld   $42         ;0ab2 'PrintText'
              6d87 0021  ld   $21         ;0ab4 LDW
              6d88 0030  ld   $30         ;0ab4 'HighScore'
              6d89 002b  ld   $2b         ;0ab6 STW
              6d8a 0054  ld   $54         ;0ab6 'Value'
              6d8b 00cf  ld   $cf         ;0ab8 CALL
              6d8c 0099  ld   $99         ;0ab8 'DrawNumber4'
              6d8d 0063  ld   $63         ;0aba POP
              6d8e 00ff  ld   $ff         ;0abb RET
              6d8f 002b  ld   $2b         ;0abc STW
              6d90 0064  ld   $64         ;0abc 'DrawHighScore'
              6d91 00cd  ld   $cd         ;0abe DEF
              6d92 00ef  ld   $ef
              6d93 002b  ld   $2b         ;0ac0 STW
              6d94 0034  ld   $34         ;0ac0 'i'
              6d95 0088  ld   $88         ;0ac2 ORI
              6d96 00ff  ld   $ff
              6d97 008c  ld   $8c         ;0ac4 XORI
              6d98 00ff  ld   $ff
              6d99 0088  ld   $88         ;0ac6 ORI
              6d9a 00fa  ld   $fa
              6d9b 002b  ld   $2b         ;0ac8 STW
              6d9c 0070  ld   $70         ;0ac8 'p'
              6d9d 001a  ld   $1a         ;0aca LD
              6d9e 0034  ld   $34         ;0aca 'i'
              6d9f 002b  ld   $2b         ;0acc STW
              6da0 0034  ld   $34         ;0acc 'i'
              6da1 0059  ld   $59         ;0ace LDI
              6da2 0000  ld   $00
              6da3 00f0  ld   $f0         ;0ad0 POKE
              6da4 0070  ld   $70         ;0ad0 'p'
              6da5 0093  ld   $93         ;0ad2 INC
              6da6 0070  ld   $70         ;0ad2 'p'
              6da7 0059  ld   $59         ;0ad4 LDI
              6da8 0001  ld   $01
              6da9 00f0  ld   $f0         ;0ad6 POKE
              6daa 0070  ld   $70         ;0ad6 'p'
              6dab 0093  ld   $93         ;0ad8 INC
              6dac 0070  ld   $70         ;0ad8 'p'
              6dad 0011  ld   $11         ;0ada LDWI
              6dae 0000  ld   $00
              6daf 0009  ld   $09
              6db0 0099  ld   $99         ;0add ADDW
              6db1 0034  ld   $34         ;0add 'i'
              6db2 007f  ld   $7f         ;0adf LUP
              6db3 0000  ld   $00
              6db4 00f0  ld   $f0         ;0ae1 POKE
              6db5 0070  ld   $70         ;0ae1 'p'
              6db6 0093  ld   $93         ;0ae3 INC
              6db7 0070  ld   $70         ;0ae3 'p'
              6db8 0011  ld   $11         ;0ae5 LDWI
              6db9 0000  ld   $00
              6dba 0009  ld   $09
              6dbb 0099  ld   $99         ;0ae8 ADDW
              6dbc 0034  ld   $34         ;0ae8 'i'
              6dbd 007f  ld   $7f         ;0aea LUP
              6dbe 0001  ld   $01
              6dbf 00f0  ld   $f0         ;0aec POKE
              6dc0 0070  ld   $70         ;0aec 'p'
              6dc1 0093  ld   $93         ;0aee INC
              6dc2 0070  ld   $70         ;0aee 'p'
              6dc3 00ff  ld   $ff         ;0af0 RET
              6dc4 002b  ld   $2b         ;0af1 STW
              6dc5 009f  ld   $9f         ;0af1 'SetupChannel'
              6dc6 0093  ld   $93         ;0af3 INC
              6dc7 001b  ld   $1b         ;0af3 '_vLR'+1
              6dc8 00ff  ld   $ff         ;0af5 RET
              6dc9 000b  ld   $0b         ;| RAM segment address (high byte first)
              6dca 00a0  ld   $a0         ;|
              6dcb 004c  ld   $4c         ;| Length (1..256)
              6dcc 00cd  ld   $cd         ;0ba0 DEF
              6dcd 00c2  ld   $c2
              6dce 0075  ld   $75         ;0ba2 PUSH
              6dcf 00e9  ld   $e9         ;0ba3 LSLW
              6dd0 002b  ld   $2b         ;0ba4 STW
              6dd1 006a  ld   $6a         ;0ba4 'tmp'
              6dd2 0011  ld   $11         ;0ba6 LDWI
              6dd3 0000  ld   $00
              6dd4 0001  ld   $01
              6dd5 00fa  ld   $fa         ;0ba9 ORW
              6dd6 006a  ld   $6a         ;0ba9 'tmp'
              6dd7 00cf  ld   $cf         ;0bab CALL
              6dd8 009f  ld   $9f         ;0bab 'SetupChannel'
              6dd9 0011  ld   $11         ;0bad LDWI
              6dda 0000  ld   $00
              6ddb 0002  ld   $02
              6ddc 00fa  ld   $fa         ;0bb0 ORW
              6ddd 006a  ld   $6a         ;0bb0 'tmp'
              6dde 00cf  ld   $cf         ;0bb2 CALL
              6ddf 009f  ld   $9f         ;0bb2 'SetupChannel'
              6de0 0011  ld   $11         ;0bb4 LDWI
              6de1 0000  ld   $00
              6de2 0003  ld   $03
              6de3 00fa  ld   $fa         ;0bb7 ORW
              6de4 006a  ld   $6a         ;0bb7 'tmp'
              6de5 00cf  ld   $cf         ;0bb9 CALL
              6de6 009f  ld   $9f         ;0bb9 'SetupChannel'
              6de7 0011  ld   $11         ;0bbb LDWI
              6de8 0000  ld   $00
              6de9 0004  ld   $04
              6dea 00fa  ld   $fa         ;0bbe ORW
              6deb 006a  ld   $6a         ;0bbe 'tmp'
              6dec 00cf  ld   $cf         ;0bc0 CALL
              6ded 009f  ld   $9f         ;0bc0 'SetupChannel'
              6dee 0063  ld   $63         ;0bc2 POP
              6def 00ff  ld   $ff         ;0bc3 RET
              6df0 002b  ld   $2b         ;0bc4 STW
              6df1 007c  ld   $7c         ;0bc4 'SetNote'
              6df2 00cd  ld   $cd         ;0bc6 DEF
              6df3 00e5  ld   $e5
              6df4 0075  ld   $75         ;0bc8 PUSH
              6df5 0059  ld   $59         ;0bc9 LDI
              6df6 0049  ld   $49
              6df7 002b  ld   $2b         ;0bcb STW
              6df8 00a1  ld   $a1         ;0bcb 'j'
              6df9 0021  ld   $21         ;0bcd LDW
              6dfa 00a1  ld   $a1         ;0bcd 'j'
              6dfb fe00  bra  ac          ;+-----------------------------------+
              6dfc fcfd  bra  $6dfd       ;|                                   |
              6dfd 1418  ld   $18,y       ;| Trampoline for page $6d00 lookups |
              6dfe e006  jmp  y,$06       ;|                                   |
              6dff c218  st   [$18]       ;+-----------------------------------+
              6e00 00cf  ld   $cf         ;0bcf CALL
              6e01 007c  ld   $7c         ;0bcf 'SetNote'
              6e02 0059  ld   $59         ;0bd1 LDI
              6e03 0005  ld   $05
              6e04 005e  ld   $5e         ;0bd3 ST
              6e05 002c  ld   $2c
              6e06 001a  ld   $1a         ;0bd5 LD
              6e07 002c  ld   $2c
              6e08 0035  ld   $35         ;0bd7 BCC
              6e09 0072  ld   $72         ;0bd8 NE
              6e0a 00d3  ld   $d3
              6e0b 0021  ld   $21         ;0bda LDW
              6e0c 00a1  ld   $a1         ;0bda 'j'
              6e0d 00e6  ld   $e6         ;0bdc SUBI
              6e0e 0001  ld   $01
              6e0f 002b  ld   $2b         ;0bde STW
              6e10 00a1  ld   $a1         ;0bde 'j'
              6e11 008c  ld   $8c         ;0be0 XORI
              6e12 0030  ld   $30
              6e13 0035  ld   $35         ;0be2 BCC
              6e14 0072  ld   $72         ;0be3 NE
              6e15 00cb  ld   $cb
              6e16 0063  ld   $63         ;0be5 POP
              6e17 00ff  ld   $ff         ;0be6 RET
              6e18 002b  ld   $2b         ;0be7 STW
              6e19 0066  ld   $66         ;0be7 'PlayGameOverSound'
              6e1a 0093  ld   $93         ;0be9 INC
              6e1b 001b  ld   $1b         ;0be9 '_vLR'+1
              6e1c 00ff  ld   $ff         ;0beb RET
              6e1d 000c  ld   $0c         ;| RAM segment address (high byte first)
              6e1e 00a0  ld   $a0         ;|
              6e1f 0045  ld   $45         ;| Length (1..256)
              6e20 00cd  ld   $cd         ;0ca0 DEF
              6e21 00de  ld   $de
              6e22 0075  ld   $75         ;0ca2 PUSH
              6e23 0011  ld   $11         ;0ca3 LDWI
              6e24 0033  ld   $33
              6e25 0045  ld   $45
              6e26 002b  ld   $2b         ;0ca6 STW
              6e27 0070  ld   $70         ;0ca6 'p'
              6e28 002b  ld   $2b         ;0ca8 STW
              6e29 003c  ld   $3c         ;0ca8 'Pos'
              6e2a 0059  ld   $59         ;0caa LDI
              6e2b 0018  ld   $18
              6e2c 002b  ld   $2b         ;0cac STW
              6e2d 003a  ld   $3a         ;0cac 'Color'
              6e2e 0021  ld   $21         ;0cae LDW
              6e2f 00a3  ld   $a3         ;0cae 'Messages'
              6e30 00cf  ld   $cf         ;0cb0 CALL
              6e31 0042  ld   $42         ;0cb0 'PrintText'
              6e32 0059  ld   $59         ;0cb2 LDI
              6e33 002d  ld   $2d
              6e34 00cf  ld   $cf         ;0cb4 CALL
              6e35 0050  ld   $50         ;0cb4 'Wait'
              6e36 0021  ld   $21         ;0cb6 LDW
              6e37 0070  ld   $70         ;0cb6 'p'
              6e38 002b  ld   $2b         ;0cb8 STW
              6e39 003c  ld   $3c         ;0cb8 'Pos'
              6e3a 0059  ld   $59         ;0cba LDI
              6e3b 003e  ld   $3e
              6e3c 002b  ld   $2b         ;0cbc STW
              6e3d 003a  ld   $3a         ;0cbc 'Color'
              6e3e 0021  ld   $21         ;0cbe LDW
              6e3f 0040  ld   $40         ;0cbe 'Text'
              6e40 00cf  ld   $cf         ;0cc0 CALL
              6e41 0042  ld   $42         ;0cc0 'PrintText'
              6e42 0059  ld   $59         ;0cc2 LDI
              6e43 002d  ld   $2d
              6e44 00cf  ld   $cf         ;0cc4 CALL
              6e45 0050  ld   $50         ;0cc4 'Wait'
              6e46 0021  ld   $21         ;0cc6 LDW
              6e47 0070  ld   $70         ;0cc6 'p'
              6e48 002b  ld   $2b         ;0cc8 STW
              6e49 003c  ld   $3c         ;0cc8 'Pos'
              6e4a 0059  ld   $59         ;0cca LDI
              6e4b 000f  ld   $0f
              6e4c 002b  ld   $2b         ;0ccc STW
              6e4d 003a  ld   $3a         ;0ccc 'Color'
              6e4e 0021  ld   $21         ;0cce LDW
              6e4f 0040  ld   $40         ;0cce 'Text'
              6e50 00cf  ld   $cf         ;0cd0 CALL
              6e51 0042  ld   $42         ;0cd0 'PrintText'
              6e52 0059  ld   $59         ;0cd2 LDI
              6e53 002d  ld   $2d
              6e54 00cf  ld   $cf         ;0cd4 CALL
              6e55 0050  ld   $50         ;0cd4 'Wait'
              6e56 0021  ld   $21         ;0cd6 LDW
              6e57 0070  ld   $70         ;0cd6 'p'
              6e58 002b  ld   $2b         ;0cd8 STW
              6e59 003c  ld   $3c         ;0cd8 'Pos'
              6e5a 0021  ld   $21         ;0cda LDW
              6e5b 0040  ld   $40         ;0cda 'Text'
              6e5c 00cf  ld   $cf         ;0cdc CALL
              6e5d 0042  ld   $42         ;0cdc 'PrintText'
              6e5e 0063  ld   $63         ;0cde POP
              6e5f 00ff  ld   $ff         ;0cdf RET
              6e60 002b  ld   $2b         ;0ce0 STW
              6e61 0095  ld   $95         ;0ce0 'GetReady'
              6e62 0093  ld   $93         ;0ce2 INC
              6e63 001b  ld   $1b         ;0ce2 '_vLR'+1
              6e64 00ff  ld   $ff         ;0ce4 RET
              6e65 000d  ld   $0d         ;| RAM segment address (high byte first)
              6e66 00a0  ld   $a0         ;|
              6e67 0046  ld   $46         ;| Length (1..256)
              6e68 00cd  ld   $cd         ;0da0 DEF
              6e69 00df  ld   $df
              6e6a 0021  ld   $21         ;0da2 LDW
              6e6b 0074  ld   $74         ;0da2 'stepU'
              6e6c 002b  ld   $2b         ;0da4 STW
              6e6d 006a  ld   $6a         ;0da4 'tmp'
              6e6e 001a  ld   $1a         ;0da6 LD
              6e6f 0011  ld   $11
              6e70 008c  ld   $8c         ;0da8 XORI
              6e71 00fe  ld   $fe
              6e72 0035  ld   $35         ;0daa BCC
              6e73 0072  ld   $72         ;0dab NE
              6e74 00af  ld   $af
              6e75 0059  ld   $59         ;0dad LDI
              6e76 0002  ld   $02
              6e77 002b  ld   $2b         ;0daf STW
              6e78 006a  ld   $6a         ;0daf 'tmp'
              6e79 001a  ld   $1a         ;0db1 LD
              6e7a 0011  ld   $11
              6e7b 008c  ld   $8c         ;0db3 XORI
              6e7c 00fd  ld   $fd
              6e7d 0035  ld   $35         ;0db5 BCC
              6e7e 0072  ld   $72         ;0db6 NE
              6e7f 00bb  ld   $bb
              6e80 0011  ld   $11         ;0db8 LDWI
              6e81 00fe  ld   $fe
              6e82 00ff  ld   $ff
              6e83 002b  ld   $2b         ;0dbb STW
              6e84 006a  ld   $6a         ;0dbb 'tmp'
              6e85 001a  ld   $1a         ;0dbd LD
              6e86 0011  ld   $11
              6e87 008c  ld   $8c         ;0dbf XORI
              6e88 00fb  ld   $fb
              6e89 0035  ld   $35         ;0dc1 BCC
              6e8a 0072  ld   $72         ;0dc2 NE
              6e8b 00c7  ld   $c7
              6e8c 0011  ld   $11         ;0dc4 LDWI
              6e8d 0000  ld   $00
              6e8e 0002  ld   $02
              6e8f 002b  ld   $2b         ;0dc7 STW
              6e90 006a  ld   $6a         ;0dc7 'tmp'
              6e91 001a  ld   $1a         ;0dc9 LD
              6e92 0011  ld   $11
              6e93 008c  ld   $8c         ;0dcb XORI
              6e94 00f7  ld   $f7
              6e95 0035  ld   $35         ;0dcd BCC
              6e96 0072  ld   $72         ;0dce NE
              6e97 00d3  ld   $d3
              6e98 0011  ld   $11         ;0dd0 LDWI
              6e99 0000  ld   $00
              6e9a 00fe  ld   $fe
              6e9b 002b  ld   $2b         ;0dd3 STW
              6e9c 006a  ld   $6a         ;0dd3 'tmp'
              6e9d 0021  ld   $21         ;0dd5 LDW
              6e9e 006a  ld   $6a         ;0dd5 'tmp'
              6e9f 0099  ld   $99         ;0dd7 ADDW
              6ea0 0074  ld   $74         ;0dd7 'stepU'
              6ea1 0035  ld   $35         ;0dd9 BCC
              6ea2 003f  ld   $3f         ;0dda EQ
              6ea3 00de  ld   $de
              6ea4 0021  ld   $21         ;0ddc LDW
              6ea5 006a  ld   $6a         ;0ddc 'tmp'
              6ea6 002b  ld   $2b         ;0dde STW
              6ea7 0074  ld   $74         ;0dde 'stepU'
              6ea8 00ff  ld   $ff         ;0de0 RET
              6ea9 002b  ld   $2b         ;0de1 STW
              6eaa 0062  ld   $62         ;0de1 'PlayerControl'
              6eab 0093  ld   $93         ;0de3 INC
              6eac 001b  ld   $1b         ;0de3 '_vLR'+1
              6ead 00ff  ld   $ff         ;0de5 RET
              6eae 000e  ld   $0e         ;| RAM segment address (high byte first)
              6eaf 00a0  ld   $a0         ;|
              6eb0 004d  ld   $4d         ;| Length (1..256)
              6eb1 00cd  ld   $cd         ;0ea0 DEF
              6eb2 00cb  ld   $cb
              6eb3 0020  ld   $20         ;0ea2 ' '
              6eb4 0045  ld   $45         ;0ea3 'E'
              6eb5 0041  ld   $41         ;0ea4 'A'
              6eb6 0054  ld   $54         ;0ea5 'T'
              6eb7 0020  ld   $20         ;0ea6 ' '
              6eb8 0046  ld   $46         ;0ea7 'F'
              6eb9 004f  ld   $4f         ;0ea8 'O'
              6eba 004f  ld   $4f         ;0ea9 'O'
              6ebb 0044  ld   $44         ;0eaa 'D'
              6ebc 0000  ld   $00         ;0eab 0
              6ebd 004e  ld   $4e         ;0eac 'N'
              6ebe 004f  ld   $4f         ;0ead 'O'
              6ebf 0054  ld   $54         ;0eae 'T'
              6ec0 0020  ld   $20         ;0eaf ' '
              6ec1 0050  ld   $50         ;0eb0 'P'
              6ec2 004f  ld   $4f         ;0eb1 'O'
              6ec3 0049  ld   $49         ;0eb2 'I'
              6ec4 0053  ld   $53         ;0eb3 'S'
              6ec5 004f  ld   $4f         ;0eb4 'O'
              6ec6 004e  ld   $4e         ;0eb5 'N'
              6ec7 0000  ld   $00         ;0eb6 0
              6ec8 0047  ld   $47         ;0eb7 'G'
              6ec9 0045  ld   $45         ;0eb8 'E'
              6eca 0054  ld   $54         ;0eb9 'T'
              6ecb 0020  ld   $20         ;0eba ' '
              6ecc 0052  ld   $52         ;0ebb 'R'
              6ecd 0045  ld   $45         ;0ebc 'E'
              6ece 0041  ld   $41         ;0ebd 'A'
              6ecf 0044  ld   $44         ;0ebe 'D'
              6ed0 0059  ld   $59         ;0ebf 'Y'
              6ed1 0021  ld   $21         ;0ec0 '!'
              6ed2 0000  ld   $00         ;0ec1 0
              6ed3 0020  ld   $20         ;0ec2 ' '
              6ed4 0020  ld   $20         ;0ec3 ' '
              6ed5 0020  ld   $20         ;0ec4 ' '
              6ed6 0020  ld   $20         ;0ec5 ' '
              6ed7 0020  ld   $20         ;0ec6 ' '
              6ed8 0020  ld   $20         ;0ec7 ' '
              6ed9 0020  ld   $20         ;0ec8 ' '
              6eda 0020  ld   $20         ;0ec9 ' '
              6edb 0020  ld   $20         ;0eca ' '
              6edc 0020  ld   $20         ;0ecb ' '
              6edd 0000  ld   $00         ;0ecc 0
              6ede 002b  ld   $2b         ;0ecd STW
              6edf 00a3  ld   $a3         ;0ecd 'Messages'
              6ee0 00cf  ld   $cf         ;0ecf CALL
              6ee1 006e  ld   $6e         ;0ecf 'Intro'
              6ee2 0059  ld   $59         ;0ed1 LDI
              6ee3 0049  ld   $49
              6ee4 00cf  ld   $cf         ;0ed3 CALL
              6ee5 007c  ld   $7c         ;0ed3 'SetNote'
              6ee6 00cf  ld   $cf         ;0ed5 CALL
              6ee7 008f  ld   $8f         ;0ed5 'SetupGame'
              6ee8 00cf  ld   $cf         ;0ed7 CALL
              6ee9 008d  ld   $8d         ;0ed7 'RunGame'
              6eea 0059  ld   $59         ;0ed9 LDI
              6eeb 0078  ld   $78
              6eec 005e  ld   $5e         ;0edb ST
              6eed 002c  ld   $2c
              6eee 0059  ld   $59         ;0edd LDI
              6eef 0007  ld   $07
              6ef0 002b  ld   $2b         ;0edf STW
              6ef1 003a  ld   $3a         ;0edf 'Color'
              6ef2 0021  ld   $21         ;0ee1 LDW
              6ef3 0058  ld   $58         ;0ee1 'Head'
              6ef4 00cf  ld   $cf         ;0ee3 CALL
              6ef5 005a  ld   $5a         ;0ee3 'DrawBlock'
              6ef6 00cf  ld   $cf         ;0ee5 CALL
              6ef7 0068  ld   $68         ;0ee5 'GameOver'
              6ef8 0059  ld   $59         ;0ee7 LDI
              6ef9 003c  ld   $3c
              6efa 00cf  ld   $cf         ;0ee9 CALL
              6efb fe00  bra  ac          ;+-----------------------------------+
              6efc fcfd  bra  $6efd       ;|                                   |
              6efd 1418  ld   $18,y       ;| Trampoline for page $6e00 lookups |
              6efe e006  jmp  y,$06       ;|                                   |
              6eff c218  st   [$18]       ;+-----------------------------------+
              6f00 0050  ld   $50         ;0ee9 'Wait'
              6f01 0090  ld   $90         ;0eeb BRA
              6f02 00d3  ld   $d3
              6f03 0000  ld   $00         ;End of Apps/Snake/Snake_v3.gcl, size 1839
                                          ;+-----------------------------------+
                                          ;| Apps/TinyBASIC/TinyBASIC_v4.gcl   |
                                          ;+-----------------------------------+
              6f04 dc53  st   $53,[y,x++] ;'S'
              6f05 dc6e  st   $6e,[y,x++] ;'n'
              6f06 dc61  st   $61,[y,x++] ;'a'
              6f07 dc6b  st   $6b,[y,x++] ;'k'
              6f08 dc65  st   $65,[y,x++] ;'e'
              6f09 dc00  st   $00,[y,x++] ;'\x00'
              6f0a dc00  st   $00,[y,x++] ;'\x00'
              6f0b dc00  st   $00,[y,x++] ;'\x00'
              6f0c 00d5  ld   $d5
              6f0d c218  st   [$18]
              6f0e 0067  ld   $67
              6f0f 14e0  ld   $e0,y
              6f10 e02e  jmp  y,$2e
              6f11 c219  st   [$19]
TinyBASIC:    6f12 0002  ld   $02         ;| RAM segment address (high byte first)
              6f13 0000  ld   $00         ;|
              6f14 00f8  ld   $f8         ;| Length (1..256)
              6f15 0011  ld   $11         ;0200 LDWI
              6f16 00df  ld   $df
              6f17 0001  ld   $01
              6f18 00f6  ld   $f6         ;0203 DEEK
              6f19 002b  ld   $2b         ;0204 STW
              6f1a 0030  ld   $30         ;0204 'Pos'
              6f1b 00cd  ld   $cd         ;0206 DEF
              6f1c 00c3  ld   $c3
              6f1d 0075  ld   $75         ;0208 PUSH
              6f1e 00cf  ld   $cf         ;0209 CALL
              6f1f 0032  ld   $32         ;0209 'Number'
              6f20 0035  ld   $35         ;020b BCC
              6f21 0050  ld   $50         ;020c LT
              6f22 0010  ld   $10
              6f23 00cf  ld   $cf         ;020e CALL
              6f24 0034  ld   $34         ;020e 'Spaces'
              6f25 0063  ld   $63         ;0210 POP
              6f26 00ff  ld   $ff         ;0211 RET
              6f27 0021  ld   $21         ;0212 LDW
              6f28 0036  ld   $36         ;0212 'Active'
              6f29 00ad  ld   $ad         ;0214 PEEK
              6f2a 008c  ld   $8c         ;0215 XORI
              6f2b 0024  ld   $24
              6f2c 0035  ld   $35         ;0217 BCC
              6f2d 0072  ld   $72         ;0218 NE
              6f2e 0021  ld   $21
              6f2f 0011  ld   $11         ;021a LDWI
              6f30 00ce  ld   $ce
              6f31 0005  ld   $05
              6f32 00cf  ld   $cf         ;021d CALL
              6f33 0018  ld   $18         ;021d vAC
              6f34 00cf  ld   $cf         ;021f CALL
              6f35 0034  ld   $34         ;021f 'Spaces'
              6f36 0063  ld   $63         ;0221 POP
              6f37 00ff  ld   $ff         ;0222 RET
              6f38 00cf  ld   $cf         ;0223 CALL
              6f39 0038  ld   $38         ;0223 'Keyword'
              6f3a 0028  ld   $28         ;0225 '('
              6f3b 0000  ld   $00         ;0226 0
              6f3c 0035  ld   $35         ;0227 BCC
              6f3d 003f  ld   $3f         ;0228 EQ
              6f3e 002c  ld   $2c
              6f3f 00cf  ld   $cf         ;022a CALL
              6f40 003a  ld   $3a         ;022a 'Expression'
              6f41 0090  ld   $90         ;022c BRA
              6f42 00b8  ld   $b8
              6f43 00cf  ld   $cf         ;022e CALL
              6f44 0038  ld   $38         ;022e 'Keyword'
              6f45 0070  ld   $70         ;0230 'p'
              6f46 0065  ld   $65         ;0231 'e'
              6f47 0065  ld   $65         ;0232 'e'
              6f48 006b  ld   $6b         ;0233 'k'
              6f49 0028  ld   $28         ;0234 '('
              6f4a 0000  ld   $00         ;0235 0
              6f4b 0035  ld   $35         ;0236 BCC
              6f4c 003f  ld   $3f         ;0237 EQ
              6f4d 003e  ld   $3e
              6f4e 00cf  ld   $cf         ;0239 CALL
              6f4f 003a  ld   $3a         ;0239 'Expression'
              6f50 00ad  ld   $ad         ;023b PEEK
              6f51 002b  ld   $2b         ;023c STW
              6f52 003c  ld   $3c         ;023c 'Value'
              6f53 0090  ld   $90         ;023e BRA
              6f54 00b8  ld   $b8
              6f55 00cf  ld   $cf         ;0240 CALL
              6f56 0038  ld   $38         ;0240 'Keyword'
              6f57 0072  ld   $72         ;0242 'r'
              6f58 006e  ld   $6e         ;0243 'n'
              6f59 0064  ld   $64         ;0244 'd'
              6f5a 0028  ld   $28         ;0245 '('
              6f5b 0000  ld   $00         ;0246 0
              6f5c 0035  ld   $35         ;0247 BCC
              6f5d 003f  ld   $3f         ;0248 EQ
              6f5e 005c  ld   $5c
              6f5f 00cf  ld   $cf         ;024a CALL
              6f60 003a  ld   $3a         ;024a 'Expression'
              6f61 0011  ld   $11         ;024c LDWI
              6f62 00a7  ld   $a7
              6f63 0004  ld   $04
              6f64 002b  ld   $2b         ;024f STW
              6f65 0022  ld   $22         ;024f '_sysFn'
              6f66 00b4  ld   $b4         ;0251 SYS
              6f67 00fe  ld   $fe
              6f68 0035  ld   $35         ;0253 BCC
              6f69 0050  ld   $50         ;0254 LT
              6f6a 004f  ld   $4f
              6f6b 00cf  ld   $cf         ;0256 CALL
              6f6c 003e  ld   $3e         ;0256 'Divide'
              6f6d 0021  ld   $21         ;0258 LDW
              6f6e 0040  ld   $40         ;0258 'i'
              6f6f 002b  ld   $2b         ;025a STW
              6f70 003c  ld   $3c         ;025a 'Value'
              6f71 0090  ld   $90         ;025c BRA
              6f72 00b8  ld   $b8
              6f73 00cf  ld   $cf         ;025e CALL
              6f74 0038  ld   $38         ;025e 'Keyword'
              6f75 0075  ld   $75         ;0260 'u'
              6f76 0073  ld   $73         ;0261 's'
              6f77 0072  ld   $72         ;0262 'r'
              6f78 0028  ld   $28         ;0263 '('
              6f79 0000  ld   $00         ;0264 0
              6f7a 0035  ld   $35         ;0265 BCC
              6f7b 003f  ld   $3f         ;0266 EQ
              6f7c 006e  ld   $6e
              6f7d 00cf  ld   $cf         ;0268 CALL
              6f7e 003a  ld   $3a         ;0268 'Expression'
              6f7f 00cf  ld   $cf         ;026a CALL
              6f80 003c  ld   $3c         ;026a 'Value'
              6f81 002b  ld   $2b         ;026c STW
              6f82 003c  ld   $3c         ;026c 'Value'
              6f83 0090  ld   $90         ;026e BRA
              6f84 00b8  ld   $b8
              6f85 00cf  ld   $cf         ;0270 CALL
              6f86 0042  ld   $42         ;0270 'Variable'
              6f87 002b  ld   $2b         ;0272 STW
              6f88 0044  ld   $44         ;0272 'k'
              6f89 00cf  ld   $cf         ;0274 CALL
              6f8a 0034  ld   $34         ;0274 'Spaces'
              6f8b 00cf  ld   $cf         ;0276 CALL
              6f8c 0038  ld   $38         ;0276 'Keyword'
              6f8d 0028  ld   $28         ;0278 '('
              6f8e 0000  ld   $00         ;0279 0
              6f8f 0035  ld   $35         ;027a BCC
              6f90 003f  ld   $3f         ;027b EQ
              6f91 00b1  ld   $b1
              6f92 0075  ld   $75         ;027d PUSH
              6f93 0021  ld   $21         ;027e LDW
              6f94 0044  ld   $44         ;027e 'k'
              6f95 00ec  ld   $ec         ;0280 STLW
              6f96 0000  ld   $00
              6f97 00cf  ld   $cf         ;0282 CALL
              6f98 003a  ld   $3a         ;0282 'Expression'
              6f99 0035  ld   $35         ;0284 BCC
              6f9a 0053  ld   $53         ;0285 GE
              6f9b 0087  ld   $87
              6f9c 00cf  ld   $cf         ;0287 CALL
              6f9d 0046  ld   $46         ;0287 'ValueError'
              6f9e 00ee  ld   $ee         ;0289 LDLW
              6f9f 0000  ld   $00
              6fa0 002b  ld   $2b         ;028b STW
              6fa1 0044  ld   $44         ;028b 'k'
              6fa2 0063  ld   $63         ;028d POP
              6fa3 001a  ld   $1a         ;028e LD
              6fa4 0045  ld   $45         ;028e 'k'+1
              6fa5 00b8  ld   $b8         ;0290 SUBW
              6fa6 003c  ld   $3c         ;0290 'Value'
              6fa7 00e6  ld   $e6         ;0292 SUBI
              6fa8 0002  ld   $02
              6fa9 005e  ld   $5e         ;0294 ST
              6faa 0045  ld   $45         ;0294 'k'+1
              6fab 0021  ld   $21         ;0296 LDW
              6fac 0048  ld   $48         ;0296 'End'
              6fad 00fc  ld   $fc         ;0298 XORW
              6fae 0044  ld   $44         ;0298 'k'
              6faf 0035  ld   $35         ;029a BCC
              6fb0 0053  ld   $53         ;029b GE
              6fb1 009f  ld   $9f
              6fb2 0021  ld   $21         ;029d LDW
              6fb3 0048  ld   $48         ;029d 'End'
              6fb4 0090  ld   $90         ;029f BRA
              6fb5 00a3  ld   $a3
              6fb6 0021  ld   $21         ;02a1 LDW
              6fb7 0044  ld   $44         ;02a1 'k'
              6fb8 00b8  ld   $b8         ;02a3 SUBW
              6fb9 0048  ld   $48         ;02a3 'End'
              6fba 0035  ld   $35         ;02a5 BCC
              6fbb 0053  ld   $53         ;02a6 GE
              6fbc 00a8  ld   $a8
              6fbd 00cf  ld   $cf         ;02a8 CALL
              6fbe 0046  ld   $46         ;02a8 'ValueError'
              6fbf 00cf  ld   $cf         ;02aa CALL
              6fc0 0038  ld   $38         ;02aa 'Keyword'
              6fc1 0029  ld   $29         ;02ac ')'
              6fc2 0000  ld   $00         ;02ad 0
              6fc3 0035  ld   $35         ;02ae BCC
              6fc4 0072  ld   $72         ;02af NE
              6fc5 00b1  ld   $b1
              6fc6 00cf  ld   $cf         ;02b1 CALL
              6fc7 004a  ld   $4a         ;02b1 'SyntaxError'
              6fc8 0021  ld   $21         ;02b3 LDW
              6fc9 0044  ld   $44         ;02b3 'k'
              6fca 00f6  ld   $f6         ;02b5 DEEK
              6fcb 002b  ld   $2b         ;02b6 STW
              6fcc 003c  ld   $3c         ;02b6 'Value'
              6fcd 0063  ld   $63         ;02b8 POP
              6fce 00ff  ld   $ff         ;02b9 RET
              6fcf 00cf  ld   $cf         ;02ba CALL
              6fd0 0038  ld   $38         ;02ba 'Keyword'
              6fd1 0029  ld   $29         ;02bc ')'
              6fd2 0000  ld   $00         ;02bd 0
              6fd3 0035  ld   $35         ;02be BCC
              6fd4 0072  ld   $72         ;02bf NE
              6fd5 00c1  ld   $c1
              6fd6 00cf  ld   $cf         ;02c1 CALL
              6fd7 004a  ld   $4a         ;02c1 'SyntaxError'
              6fd8 0063  ld   $63         ;02c3 POP
              6fd9 00ff  ld   $ff         ;02c4 RET
              6fda 002b  ld   $2b         ;02c5 STW
              6fdb 004c  ld   $4c         ;02c5 'Factor'
              6fdc 00cd  ld   $cd         ;02c7 DEF
              6fdd 00d9  ld   $d9
              6fde 0021  ld   $21         ;02c9 LDW
              6fdf 001a  ld   $1a
              6fe0 002b  ld   $2b         ;02cb STW
              6fe1 004e  ld   $4e         ;02cb 'tmp'
              6fe2 0021  ld   $21         ;02cd LDW
              6fe3 004e  ld   $4e         ;02cd 'tmp'
              6fe4 00ad  ld   $ad         ;02cf PEEK
              6fe5 0093  ld   $93         ;02d0 INC
              6fe6 004e  ld   $4e         ;02d0 'tmp'
              6fe7 0035  ld   $35         ;02d2 BCC
              6fe8 003f  ld   $3f         ;02d3 EQ
              6fe9 00d7  ld   $d7
              6fea 00cf  ld   $cf         ;02d5 CALL
              6feb 0050  ld   $50         ;02d5 'PrintChar'
              6fec 0090  ld   $90         ;02d7 BRA
              6fed 00cb  ld   $cb
              6fee 00cf  ld   $cf         ;02d9 CALL
              6fef 004e  ld   $4e         ;02d9 'tmp'
              6ff0 002b  ld   $2b         ;02db STW
              6ff1 0052  ld   $52         ;02db 'PrintS'
              6ff2 00cd  ld   $cd         ;02dd DEF
              6ff3 00f1  ld   $f1
              6ff4 001a  ld   $1a         ;02df LD
              6ff5 000f  ld   $0f
              6ff6 008c  ld   $8c         ;02e1 XORI
              6ff7 0003  ld   $03
              6ff8 0035  ld   $35         ;02e3 BCC
              6ff9 0072  ld   $72         ;02e4 NE
              6ffa 00f0  ld   $f0
              6ffb fe00  bra  ac          ;+-----------------------------------+
              6ffc fcfd  bra  $6ffd       ;|                                   |
              6ffd 1418  ld   $18,y       ;| Trampoline for page $6f00 lookups |
              6ffe e006  jmp  y,$06       ;|                                   |
              6fff c218  st   [$18]       ;+-----------------------------------+
              7000 0021  ld   $21         ;02e6 LDW
              7001 0054  ld   $54         ;02e6 'PrintCharScreen'
              7002 002b  ld   $2b         ;02e8 STW
              7003 0050  ld   $50         ;02e8 'PrintChar'
              7004 00cf  ld   $cf         ;02ea CALL
              7005 0056  ld   $56         ;02ea 'Prompt'
              7006 0042  ld   $42         ;02ec 'B'
              7007 0072  ld   $72         ;02ed 'r'
              7008 0065  ld   $65         ;02ee 'e'
              7009 0061  ld   $61         ;02ef 'a'
              700a 006b  ld   $6b         ;02f0 'k'
              700b 0000  ld   $00         ;02f1 0
              700c 00ff  ld   $ff         ;02f2 RET
              700d 002b  ld   $2b         ;02f3 STW
              700e 0058  ld   $58         ;02f3 'TestBreak'
              700f 0093  ld   $93         ;02f5 INC
              7010 001b  ld   $1b
              7011 00ff  ld   $ff         ;02f7 RET
              7012 0003  ld   $03         ;| RAM segment address (high byte first)
              7013 0000  ld   $00         ;|
              7014 00f9  ld   $f9         ;| Length (1..256)
              7015 00cd  ld   $cd         ;0300 DEF
              7016 006e  ld   $6e
              7017 002b  ld   $2b         ;0302 STW
              7018 0044  ld   $44         ;0302 'k'
              7019 00e6  ld   $e6         ;0304 SUBI
              701a 0083  ld   $83
              701b 0035  ld   $35         ;0306 BCC
              701c 004d  ld   $4d         ;0307 GT
              701d 006d  ld   $6d
              701e 001a  ld   $1a         ;0309 LD
              701f 0031  ld   $31         ;0309 'Pos'+1
              7020 00e6  ld   $e6         ;030b SUBI
              7021 0078  ld   $78
              7022 0035  ld   $35         ;030d BCC
              7023 004d  ld   $4d         ;030e GT
              7024 006d  ld   $6d
              7025 001a  ld   $1a         ;0310 LD
              7026 0030  ld   $30         ;0310 'Pos'
              7027 00e6  ld   $e6         ;0312 SUBI
              7028 009a  ld   $9a
              7029 0035  ld   $35         ;0314 BCC
              702a 0056  ld   $56         ;0315 LE
              702b 0019  ld   $19
              702c 0075  ld   $75         ;0317 PUSH
              702d 00cf  ld   $cf         ;0318 CALL
              702e 005a  ld   $5a         ;0318 'Newline'
              702f 0063  ld   $63         ;031a POP
              7030 0021  ld   $21         ;031b LDW
              7031 0044  ld   $44         ;031b 'k'
              7032 00e6  ld   $e6         ;031d SUBI
              7033 0052  ld   $52
              7034 0035  ld   $35         ;031f BCC
              7035 0053  ld   $53         ;0320 GE
              7036 0029  ld   $29
              7037 00e3  ld   $e3         ;0322 ADDI
              7038 0032  ld   $32
              7039 002b  ld   $2b         ;0324 STW
              703a 0040  ld   $40         ;0324 'i'
              703b 0011  ld   $11         ;0326 LDWI
              703c 0000  ld   $00
              703d 0007  ld   $07
              703e 0090  ld   $90         ;0329 BRA
              703f 002e  ld   $2e
              7040 002b  ld   $2b         ;032b STW
              7041 0040  ld   $40         ;032b 'i'
              7042 0011  ld   $11         ;032d LDWI
              7043 0000  ld   $00
              7044 0008  ld   $08
              7045 002b  ld   $2b         ;0330 STW
              7046 0044  ld   $44         ;0330 'k'
              7047 0021  ld   $21         ;0332 LDW
              7048 0040  ld   $40         ;0332 'i'
              7049 0035  ld   $35         ;0334 BCC
              704a 0050  ld   $50         ;0335 LT
              704b 006d  ld   $6d
              704c 00e9  ld   $e9         ;0337 LSLW
              704d 00e9  ld   $e9         ;0338 LSLW
              704e 0099  ld   $99         ;0339 ADDW
              704f 0040  ld   $40         ;0339 'i'
              7050 0099  ld   $99         ;033b ADDW
              7051 0044  ld   $44         ;033b 'k'
              7052 002b  ld   $2b         ;033d STW
              7053 0044  ld   $44         ;033d 'k'
              7054 0011  ld   $11         ;033f LDWI
              7055 00e1  ld   $e1
              7056 0004  ld   $04
              7057 002b  ld   $2b         ;0342 STW
              7058 0022  ld   $22         ;0342 '_sysFn'
              7059 0021  ld   $21         ;0344 LDW
              705a 002a  ld   $2a         ;0344 '_sysArgs6'
              705b 002b  ld   $2b         ;0346 STW
              705c 0024  ld   $24         ;0346 '_sysArgs0'
              705d 0021  ld   $21         ;0348 LDW
              705e 0030  ld   $30         ;0348 'Pos'
              705f 002b  ld   $2b         ;034a STW
              7060 0028  ld   $28
              7061 00ec  ld   $ec         ;034c STLW
              7062 00fe  ld   $fe
              7063 00e3  ld   $e3         ;034e ADDI
              7064 0006  ld   $06
              7065 002b  ld   $2b         ;0350 STW
              7066 0030  ld   $30         ;0350 'Pos'
              7067 0059  ld   $59         ;0352 LDI
              7068 0005  ld   $05
              7069 002b  ld   $2b         ;0354 STW
              706a 0040  ld   $40         ;0354 'i'
              706b 0021  ld   $21         ;0356 LDW
              706c 0044  ld   $44         ;0356 'k'
              706d 007f  ld   $7f         ;0358 LUP
              706e 0000  ld   $00
              706f 005e  ld   $5e         ;035a ST
              7070 0026  ld   $26
              7071 00b4  ld   $b4         ;035c SYS
              7072 00cc  ld   $cc
              7073 0093  ld   $93         ;035e INC
              7074 0044  ld   $44         ;035e 'k'
              7075 0093  ld   $93         ;0360 INC
              7076 0028  ld   $28
              7077 0021  ld   $21         ;0362 LDW
              7078 0040  ld   $40         ;0362 'i'
              7079 00e6  ld   $e6         ;0364 SUBI
              707a 0001  ld   $01
              707b 0035  ld   $35         ;0366 BCC
              707c 004d  ld   $4d         ;0367 GT
              707d 0052  ld   $52
              707e 005e  ld   $5e         ;0369 ST
              707f 0026  ld   $26
              7080 00b4  ld   $b4         ;036b SYS
              7081 00cc  ld   $cc
              7082 00ee  ld   $ee         ;036d LDLW
              7083 00fe  ld   $fe
              7084 00ff  ld   $ff         ;036f RET
              7085 002b  ld   $2b         ;0370 STW
              7086 0050  ld   $50         ;0370 'PrintChar'
              7087 002b  ld   $2b         ;0372 STW
              7088 0054  ld   $54         ;0372 'PrintCharScreen'
              7089 00cd  ld   $cd         ;0374 DEF
              708a 00f4  ld   $f4
              708b 0075  ld   $75         ;0376 PUSH
              708c 002b  ld   $2b         ;0377 STW
              708d 004e  ld   $4e         ;0377 'tmp'
              708e 0011  ld   $11         ;0379 LDWI
              708f 0000  ld   $00
              7090 000b  ld   $0b
              7091 002b  ld   $2b         ;037c STW
              7092 0022  ld   $22         ;037c '_sysFn'
              7093 001a  ld   $1a         ;037e LD
              7094 0021  ld   $21
              7095 00e6  ld   $e6         ;0380 SUBI
              7096 0038  ld   $38
              7097 0035  ld   $35         ;0382 BCC
              7098 0050  ld   $50         ;0383 LT
              7099 0087  ld   $87
              709a 00e6  ld   $e6         ;0385 SUBI
              709b 00ff  ld   $ff
              709c 00b4  ld   $b4         ;0387 SYS
              709d 00e7  ld   $e7
              709e 0011  ld   $11         ;0389 LDWI
              709f 00a0  ld   $a0
              70a0 001b  ld   $1b
              70a1 002b  ld   $2b         ;038c STW
              70a2 0036  ld   $36         ;038c 'Active'
              70a3 0021  ld   $21         ;038e LDW
              70a4 004e  ld   $4e         ;038e 'tmp'
              70a5 00f3  ld   $f3         ;0390 DOKE
              70a6 0036  ld   $36         ;0390 'Active'
              70a7 0059  ld   $59         ;0392 LDI
              70a8 00a2  ld   $a2
              70a9 005e  ld   $5e         ;0394 ST
              70aa 0036  ld   $36         ;0394 'Active'
              70ab 0059  ld   $59         ;0396 LDI
              70ac 007f  ld   $7f
              70ad 00cf  ld   $cf         ;0398 CALL
              70ae 0050  ld   $50         ;0398 'PrintChar'
              70af 002b  ld   $2b         ;039a STW
              70b0 0030  ld   $30         ;039a 'Pos'
              70b1 001a  ld   $1a         ;039c LD
              70b2 000f  ld   $0f
              70b3 002b  ld   $2b         ;039e STW
              70b4 004e  ld   $4e         ;039e 'tmp'
              70b5 001a  ld   $1a         ;03a0 LD
              70b6 000f  ld   $0f
              70b7 00f0  ld   $f0         ;03a2 POKE
              70b8 0036  ld   $36         ;03a2 'Active'
              70b9 00fc  ld   $fc         ;03a4 XORW
              70ba 004e  ld   $4e         ;03a4 'tmp'
              70bb 0035  ld   $35         ;03a6 BCC
              70bc 0072  ld   $72         ;03a7 NE
              70bd 00ac  ld   $ac
              70be 0021  ld   $21         ;03a9 LDW
              70bf 0036  ld   $36         ;03a9 'Active'
              70c0 00ad  ld   $ad         ;03ab PEEK
              70c1 0090  ld   $90         ;03ac BRA
              70c2 009c  ld   $9c
              70c3 0021  ld   $21         ;03ae LDW
              70c4 0036  ld   $36         ;03ae 'Active'
              70c5 00ad  ld   $ad         ;03b0 PEEK
              70c6 008c  ld   $8c         ;03b1 XORI
              70c7 000a  ld   $0a
              70c8 0035  ld   $35         ;03b3 BCC
              70c9 003f  ld   $3f         ;03b4 EQ
              70ca 00ef  ld   $ef
              70cb 008c  ld   $8c         ;03b6 XORI
              70cc 0075  ld   $75
              70cd 0035  ld   $35         ;03b8 BCC
              70ce 0072  ld   $72         ;03b9 NE
              70cf 00d0  ld   $d0
              70d0 0059  ld   $59         ;03bb LDI
              70d1 0020  ld   $20
              70d2 00cf  ld   $cf         ;03bd CALL
              70d3 0050  ld   $50         ;03bd 'PrintChar'
              70d4 002b  ld   $2b         ;03bf STW
              70d5 0030  ld   $30         ;03bf 'Pos'
              70d6 001a  ld   $1a         ;03c1 LD
              70d7 0030  ld   $30         ;03c1 'Pos'
              70d8 00e6  ld   $e6         ;03c3 SUBI
              70d9 0006  ld   $06
              70da 0035  ld   $35         ;03c5 BCC
              70db 0050  ld   $50         ;03c6 LT
              70dc 00ce  ld   $ce
              70dd 005e  ld   $5e         ;03c8 ST
              70de 0030  ld   $30         ;03c8 'Pos'
              70df 0021  ld   $21         ;03ca LDW
              70e0 0036  ld   $36         ;03ca 'Active'
              70e1 00e6  ld   $e6         ;03cc SUBI
              70e2 0001  ld   $01
              70e3 002b  ld   $2b         ;03ce STW
              70e4 0036  ld   $36         ;03ce 'Active'
              70e5 0090  ld   $90         ;03d0 BRA
              70e6 0094  ld   $94
              70e7 00e6  ld   $e6         ;03d2 SUBI
              70e8 0060  ld   $60
              70e9 0035  ld   $35         ;03d4 BCC
              70ea 0053  ld   $53         ;03d5 GE
              70eb 0094  ld   $94
              70ec 001a  ld   $1a         ;03d7 LD
              70ed 0030  ld   $30         ;03d7 'Pos'
              70ee 00e6  ld   $e6         ;03d9 SUBI
              70ef 0096  ld   $96
              70f0 0035  ld   $35         ;03db BCC
              70f1 0050  ld   $50         ;03dc LT
              70f2 00e6  ld   $e6
              70f3 0059  ld   $59         ;03de LDI
              70f4 00a2  ld   $a2
              70f5 005e  ld   $5e         ;03e0 ST
              70f6 0036  ld   $36         ;03e0 'Active'
              70f7 0059  ld   $59         ;03e2 LDI
              70f8 005c  ld   $5c
              70f9 00cf  ld   $cf         ;03e4 CALL
              70fa 0050  ld   $50         ;03e4 'PrintChar'
              70fb fe00  bra  ac          ;+-----------------------------------+
              70fc fcfd  bra  $70fd       ;|                                   |
              70fd 1418  ld   $18,y       ;| Trampoline for page $7000 lookups |
              70fe e006  jmp  y,$06       ;|                                   |
              70ff c218  st   [$18]       ;+-----------------------------------+
              7100 0090  ld   $90         ;03e6 BRA
              7101 0094  ld   $94
              7102 0021  ld   $21         ;03e8 LDW
              7103 0036  ld   $36         ;03e8 'Active'
              7104 00ad  ld   $ad         ;03ea PEEK
              7105 00cf  ld   $cf         ;03eb CALL
              7106 0050  ld   $50         ;03eb 'PrintChar'
              7107 0093  ld   $93         ;03ed INC
              7108 0036  ld   $36         ;03ed 'Active'
              7109 0090  ld   $90         ;03ef BRA
              710a 0094  ld   $94
              710b 0011  ld   $11         ;03f1 LDWI
              710c 00e8  ld   $e8
              710d 0006  ld   $06
              710e 00cf  ld   $cf         ;03f4 CALL
              710f 0018  ld   $18         ;03f4 vAC
              7110 0093  ld   $93         ;03f6 INC
              7111 001b  ld   $1b
              7112 00ff  ld   $ff         ;03f8 RET
              7113 0004  ld   $04         ;| RAM segment address (high byte first)
              7114 0000  ld   $00         ;|
              7115 00f8  ld   $f8         ;| Length (1..256)
              7116 002b  ld   $2b         ;0400 STW
              7117 005c  ld   $5c         ;0400 'GetLine'
              7118 00cd  ld   $cd         ;0402 DEF
              7119 00ef  ld   $ef
              711a 00cf  ld   $cf         ;0404 CALL
              711b 0034  ld   $34         ;0404 'Spaces'
              711c 00cf  ld   $cf         ;0406 CALL
              711d 0038  ld   $38         ;0406 'Keyword'
              711e 0067  ld   $67         ;0408 'g'
              711f 006f  ld   $6f         ;0409 'o'
              7120 0074  ld   $74         ;040a 't'
              7121 006f  ld   $6f         ;040b 'o'
              7122 0000  ld   $00         ;040c 0
              7123 0035  ld   $35         ;040d BCC
              7124 003f  ld   $3f         ;040e EQ
              7125 0012  ld   $12
              7126 00cf  ld   $cf         ;0410 CALL
              7127 003a  ld   $3a         ;0410 'Expression'
              7128 00cf  ld   $cf         ;0412 CALL
              7129 005e  ld   $5e         ;0412 'GotoValue'
              712a 00cf  ld   $cf         ;0414 CALL
              712b 0038  ld   $38         ;0414 'Keyword'
              712c 0067  ld   $67         ;0416 'g'
              712d 006f  ld   $6f         ;0417 'o'
              712e 0073  ld   $73         ;0418 's'
              712f 0075  ld   $75         ;0419 'u'
              7130 0062  ld   $62         ;041a 'b'
              7131 0000  ld   $00         ;041b 0
              7132 0035  ld   $35         ;041c BCC
              7133 003f  ld   $3f         ;041d EQ
              7134 0026  ld   $26
              7135 00cf  ld   $cf         ;041f CALL
              7136 003a  ld   $3a         ;041f 'Expression'
              7137 0075  ld   $75         ;0421 PUSH
              7138 0021  ld   $21         ;0422 LDW
              7139 0036  ld   $36         ;0422 'Active'
              713a 00ec  ld   $ec         ;0424 STLW
              713b 0000  ld   $00
              713c 00cf  ld   $cf         ;0426 CALL
              713d 005e  ld   $5e         ;0426 'GotoValue'
              713e 00cf  ld   $cf         ;0428 CALL
              713f 0038  ld   $38         ;0428 'Keyword'
              7140 0072  ld   $72         ;042a 'r'
              7141 0065  ld   $65         ;042b 'e'
              7142 0074  ld   $74         ;042c 't'
              7143 0075  ld   $75         ;042d 'u'
              7144 0072  ld   $72         ;042e 'r'
              7145 006e  ld   $6e         ;042f 'n'
              7146 0000  ld   $00         ;0430 0
              7147 0035  ld   $35         ;0431 BCC
              7148 003f  ld   $3f         ;0432 EQ
              7149 003f  ld   $3f
              714a 001a  ld   $1a         ;0434 LD
              714b 001c  ld   $1c
              714c 0035  ld   $35         ;0436 BCC
              714d 0072  ld   $72         ;0437 NE
              714e 0039  ld   $39
              714f 00cf  ld   $cf         ;0439 CALL
              7150 0060  ld   $60         ;0439 'StackError'
              7151 00f6  ld   $f6         ;043b DEEK
              7152 002b  ld   $2b         ;043c STW
              7153 0036  ld   $36         ;043c 'Active'
              7154 0063  ld   $63         ;043e POP
              7155 00cf  ld   $cf         ;043f CALL
              7156 0062  ld   $62         ;043f 'EndOfLine'
              7157 00cf  ld   $cf         ;0441 CALL
              7158 0038  ld   $38         ;0441 'Keyword'
              7159 0069  ld   $69         ;0443 'i'
              715a 0066  ld   $66         ;0444 'f'
              715b 0000  ld   $00         ;0445 0
              715c 0035  ld   $35         ;0446 BCC
              715d 003f  ld   $3f         ;0447 EQ
              715e 0096  ld   $96
              715f 00cf  ld   $cf         ;0449 CALL
              7160 003a  ld   $3a         ;0449 'Expression'
              7161 00df  ld   $df         ;044b ALLOC
              7162 00fc  ld   $fc
              7163 00ec  ld   $ec         ;044d STLW
              7164 0002  ld   $02
              7165 00cf  ld   $cf         ;044f CALL
              7166 0064  ld   $64         ;044f 'RelOp'
              7167 0035  ld   $35         ;0451 BCC
              7168 0072  ld   $72         ;0452 NE
              7169 0054  ld   $54
              716a 00cf  ld   $cf         ;0454 CALL
              716b 004a  ld   $4a         ;0454 'SyntaxError'
              716c 00ec  ld   $ec         ;0456 STLW
              716d 0000  ld   $00
              716e 00cf  ld   $cf         ;0458 CALL
              716f 003a  ld   $3a         ;0458 'Expression'
              7170 00cf  ld   $cf         ;045a CALL
              7171 0038  ld   $38         ;045a 'Keyword'
              7172 0074  ld   $74         ;045c 't'
              7173 0068  ld   $68         ;045d 'h'
              7174 0065  ld   $65         ;045e 'e'
              7175 006e  ld   $6e         ;045f 'n'
              7176 0000  ld   $00         ;0460 0
              7177 00ee  ld   $ee         ;0461 LDLW
              7178 0002  ld   $02
              7179 00fc  ld   $fc         ;0463 XORW
              717a 003c  ld   $3c         ;0463 'Value'
              717b 0035  ld   $35         ;0465 BCC
              717c 0053  ld   $53         ;0466 GE
              717d 006a  ld   $6a
              717e 00ee  ld   $ee         ;0468 LDLW
              717f 0002  ld   $02
              7180 0090  ld   $90         ;046a BRA
              7181 006e  ld   $6e
              7182 00ee  ld   $ee         ;046c LDLW
              7183 0002  ld   $02
              7184 00b8  ld   $b8         ;046e SUBW
              7185 003c  ld   $3c         ;046e 'Value'
              7186 0035  ld   $35         ;0470 BCC
              7187 0056  ld   $56         ;0471 LE
              7188 0073  ld   $73
              7189 0059  ld   $59         ;0473 LDI
              718a 0004  ld   $04
              718b 0035  ld   $35         ;0475 BCC
              718c 0053  ld   $53         ;0476 GE
              718d 0078  ld   $78
              718e 0059  ld   $59         ;0478 LDI
              718f 0001  ld   $01
              7190 0035  ld   $35         ;047a BCC
              7191 0072  ld   $72         ;047b NE
              7192 007d  ld   $7d
              7193 0059  ld   $59         ;047d LDI
              7194 0002  ld   $02
              7195 002b  ld   $2b         ;047f STW
              7196 0040  ld   $40         ;047f 'i'
              7197 00ee  ld   $ee         ;0481 LDLW
              7198 0000  ld   $00
              7199 00f8  ld   $f8         ;0483 ANDW
              719a 0040  ld   $40         ;0483 'i'
              719b 00df  ld   $df         ;0485 ALLOC
              719c 0004  ld   $04
              719d 0035  ld   $35         ;0487 BCC
              719e 003f  ld   $3f         ;0488 EQ
              719f 008a  ld   $8a
              71a0 00cf  ld   $cf         ;048a CALL
              71a1 0066  ld   $66         ;048a 'Statements'
              71a2 0021  ld   $21         ;048c LDW
              71a3 0036  ld   $36         ;048c 'Active'
              71a4 00ad  ld   $ad         ;048e PEEK
              71a5 0035  ld   $35         ;048f BCC
              71a6 003f  ld   $3f         ;0490 EQ
              71a7 0094  ld   $94
              71a8 0093  ld   $93         ;0492 INC
              71a9 0036  ld   $36         ;0492 'Active'
              71aa 0090  ld   $90         ;0494 BRA
              71ab 008a  ld   $8a
              71ac 00cf  ld   $cf         ;0496 CALL
              71ad 0062  ld   $62         ;0496 'EndOfLine'
              71ae 00cf  ld   $cf         ;0498 CALL
              71af 0038  ld   $38         ;0498 'Keyword'
              71b0 0070  ld   $70         ;049a 'p'
              71b1 006f  ld   $6f         ;049b 'o'
              71b2 006b  ld   $6b         ;049c 'k'
              71b3 0065  ld   $65         ;049d 'e'
              71b4 0000  ld   $00         ;049e 0
              71b5 0035  ld   $35         ;049f BCC
              71b6 003f  ld   $3f         ;04a0 EQ
              71b7 00b3  ld   $b3
              71b8 00cf  ld   $cf         ;04a2 CALL
              71b9 003a  ld   $3a         ;04a2 'Expression'
              71ba 002b  ld   $2b         ;04a4 STW
              71bb 0068  ld   $68         ;04a4 'Address'
              71bc 00cf  ld   $cf         ;04a6 CALL
              71bd 0038  ld   $38         ;04a6 'Keyword'
              71be 002c  ld   $2c         ;04a8 ','
              71bf 0000  ld   $00         ;04a9 0
              71c0 0035  ld   $35         ;04aa BCC
              71c1 0072  ld   $72         ;04ab NE
              71c2 00ad  ld   $ad
              71c3 00cf  ld   $cf         ;04ad CALL
              71c4 004a  ld   $4a         ;04ad 'SyntaxError'
              71c5 00cf  ld   $cf         ;04af CALL
              71c6 003a  ld   $3a         ;04af 'Expression'
              71c7 00f0  ld   $f0         ;04b1 POKE
              71c8 0068  ld   $68         ;04b1 'Address'
              71c9 00cf  ld   $cf         ;04b3 CALL
              71ca 0062  ld   $62         ;04b3 'EndOfLine'
              71cb 00cf  ld   $cf         ;04b5 CALL
              71cc 0038  ld   $38         ;04b5 'Keyword'
              71cd 0027  ld   $27         ;04b7 "'"
              71ce 0000  ld   $00         ;04b8 0
              71cf 0035  ld   $35         ;04b9 BCC
              71d0 0072  ld   $72         ;04ba NE
              71d1 00c0  ld   $c0
              71d2 00cf  ld   $cf         ;04bc CALL
              71d3 0038  ld   $38         ;04bc 'Keyword'
              71d4 0072  ld   $72         ;04be 'r'
              71d5 0065  ld   $65         ;04bf 'e'
              71d6 006d  ld   $6d         ;04c0 'm'
              71d7 0000  ld   $00         ;04c1 0
              71d8 0035  ld   $35         ;04c2 BCC
              71d9 003f  ld   $3f         ;04c3 EQ
              71da 00cf  ld   $cf
              71db 0021  ld   $21         ;04c5 LDW
              71dc 0036  ld   $36         ;04c5 'Active'
              71dd 00ad  ld   $ad         ;04c7 PEEK
              71de 0035  ld   $35         ;04c8 BCC
              71df 003f  ld   $3f         ;04c9 EQ
              71e0 00cd  ld   $cd
              71e1 0093  ld   $93         ;04cb INC
              71e2 0036  ld   $36         ;04cb 'Active'
              71e3 0090  ld   $90         ;04cd BRA
              71e4 00c3  ld   $c3
              71e5 00cf  ld   $cf         ;04cf CALL
              71e6 0062  ld   $62         ;04cf 'EndOfLine'
              71e7 00cf  ld   $cf         ;04d1 CALL
              71e8 0038  ld   $38         ;04d1 'Keyword'
              71e9 006c  ld   $6c         ;04d3 'l'
              71ea 0069  ld   $69         ;04d4 'i'
              71eb 006e  ld   $6e         ;04d5 'n'
              71ec 0065  ld   $65         ;04d6 'e'
              71ed 0000  ld   $00         ;04d7 0
              71ee 0035  ld   $35         ;04d8 BCC
              71ef 003f  ld   $3f         ;04d9 EQ
              71f0 00de  ld   $de
              71f1 0011  ld   $11         ;04db LDWI
              71f2 00a0  ld   $a0
              71f3 0019  ld   $19
              71f4 00cf  ld   $cf         ;04de CALL
              71f5 0018  ld   $18         ;04de vAC
              71f6 00cf  ld   $cf         ;04e0 CALL
              71f7 0038  ld   $38         ;04e0 'Keyword'
              71f8 0065  ld   $65         ;04e2 'e'
              71f9 006e  ld   $6e         ;04e3 'n'
              71fa 0064  ld   $64         ;04e4 'd'
              71fb fe00  bra  ac          ;+-----------------------------------+
              71fc fcfd  bra  $71fd       ;|                                   |
              71fd 1418  ld   $18,y       ;| Trampoline for page $7100 lookups |
              71fe e006  jmp  y,$06       ;|                                   |
              71ff c218  st   [$18]       ;+-----------------------------------+
              7200 0000  ld   $00         ;04e5 0
              7201 0035  ld   $35         ;04e6 BCC
              7202 003f  ld   $3f         ;04e7 EQ
              7203 00ea  ld   $ea
              7204 00cf  ld   $cf         ;04e9 CALL
              7205 0056  ld   $56         ;04e9 'Prompt'
              7206 0000  ld   $00         ;04eb 0
              7207 0011  ld   $11         ;04ec LDWI
              7208 0000  ld   $00
              7209 0005  ld   $05
              720a 00cf  ld   $cf         ;04ef CALL
              720b 0018  ld   $18         ;04ef vAC
              720c 002b  ld   $2b         ;04f1 STW
              720d 0066  ld   $66         ;04f1 'Statements'
              720e 0093  ld   $93         ;04f3 INC
              720f 001b  ld   $1b
              7210 0093  ld   $93         ;04f5 INC
              7211 001b  ld   $1b
              7212 00ff  ld   $ff         ;04f7 RET
              7213 0005  ld   $05         ;| RAM segment address (high byte first)
              7214 0000  ld   $00         ;|
              7215 0000  ld   $00         ;| Length (1..256)
              7216 00cf  ld   $cf         ;0500 CALL
              7217 0038  ld   $38         ;0500 'Keyword'
              7218 006e  ld   $6e         ;0502 'n'
              7219 0065  ld   $65         ;0503 'e'
              721a 0078  ld   $78         ;0504 'x'
              721b 0074  ld   $74         ;0505 't'
              721c 0000  ld   $00         ;0506 0
              721d 0035  ld   $35         ;0507 BCC
              721e 003f  ld   $3f         ;0508 EQ
              721f 0037  ld   $37
              7220 00cf  ld   $cf         ;050a CALL
              7221 0042  ld   $42         ;050a 'Variable'
              7222 002b  ld   $2b         ;050c STW
              7223 0068  ld   $68         ;050c 'Address'
              7224 0075  ld   $75         ;050e PUSH
              7225 0021  ld   $21         ;050f LDW
              7226 0036  ld   $36         ;050f 'Active'
              7227 00ec  ld   $ec         ;0511 STLW
              7228 0000  ld   $00
              7229 0011  ld   $11         ;0513 LDWI
              722a 0000  ld   $00
              722b 00ff  ld   $ff
              722c 0099  ld   $99         ;0516 ADDW
              722d 0068  ld   $68         ;0516 'Address'
              722e 00f6  ld   $f6         ;0518 DEEK
              722f 0035  ld   $35         ;0519 BCC
              7230 0072  ld   $72         ;051a NE
              7231 001c  ld   $1c
              7232 00cf  ld   $cf         ;051c CALL
              7233 0046  ld   $46         ;051c 'ValueError'
              7234 002b  ld   $2b         ;051e STW
              7235 0036  ld   $36         ;051e 'Active'
              7236 00cf  ld   $cf         ;0520 CALL
              7237 003a  ld   $3a         ;0520 'Expression'
              7238 0021  ld   $21         ;0522 LDW
              7239 0068  ld   $68         ;0522 'Address'
              723a 00f6  ld   $f6         ;0524 DEEK
              723b 00e3  ld   $e3         ;0525 ADDI
              723c 0001  ld   $01
              723d 00f3  ld   $f3         ;0527 DOKE
              723e 0068  ld   $68         ;0527 'Address'
              723f 00b8  ld   $b8         ;0529 SUBW
              7240 003c  ld   $3c         ;0529 'Value'
              7241 0035  ld   $35         ;052b BCC
              7242 0056  ld   $56         ;052c LE
              7243 0032  ld   $32
              7244 00ee  ld   $ee         ;052e LDLW
              7245 0000  ld   $00
              7246 002b  ld   $2b         ;0530 STW
              7247 0036  ld   $36         ;0530 'Active'
              7248 00cf  ld   $cf         ;0532 CALL
              7249 0034  ld   $34         ;0532 'Spaces'
              724a 0063  ld   $63         ;0534 POP
              724b 00cf  ld   $cf         ;0535 CALL
              724c 0058  ld   $58         ;0535 'TestBreak'
              724d 00cf  ld   $cf         ;0537 CALL
              724e 0062  ld   $62         ;0537 'EndOfLine'
              724f 00cf  ld   $cf         ;0539 CALL
              7250 0038  ld   $38         ;0539 'Keyword'
              7251 0066  ld   $66         ;053b 'f'
              7252 006f  ld   $6f         ;053c 'o'
              7253 0072  ld   $72         ;053d 'r'
              7254 0000  ld   $00         ;053e 0
              7255 0035  ld   $35         ;053f BCC
              7256 003f  ld   $3f         ;0540 EQ
              7257 006c  ld   $6c
              7258 00cf  ld   $cf         ;0542 CALL
              7259 0042  ld   $42         ;0542 'Variable'
              725a 002b  ld   $2b         ;0544 STW
              725b 0068  ld   $68         ;0544 'Address'
              725c 00cf  ld   $cf         ;0546 CALL
              725d 0034  ld   $34         ;0546 'Spaces'
              725e 00cf  ld   $cf         ;0548 CALL
              725f 0038  ld   $38         ;0548 'Keyword'
              7260 003d  ld   $3d         ;054a '='
              7261 0000  ld   $00         ;054b 0
              7262 0035  ld   $35         ;054c BCC
              7263 0072  ld   $72         ;054d NE
              7264 004f  ld   $4f
              7265 00cf  ld   $cf         ;054f CALL
              7266 004a  ld   $4a         ;054f 'SyntaxError'
              7267 00cf  ld   $cf         ;0551 CALL
              7268 003a  ld   $3a         ;0551 'Expression'
              7269 00f3  ld   $f3         ;0553 DOKE
              726a 0068  ld   $68         ;0553 'Address'
              726b 00cf  ld   $cf         ;0555 CALL
              726c 0038  ld   $38         ;0555 'Keyword'
              726d 0074  ld   $74         ;0557 't'
              726e 006f  ld   $6f         ;0558 'o'
              726f 0000  ld   $00         ;0559 0
              7270 0035  ld   $35         ;055a BCC
              7271 0072  ld   $72         ;055b NE
              7272 005d  ld   $5d
              7273 00cf  ld   $cf         ;055d CALL
              7274 004a  ld   $4a         ;055d 'SyntaxError'
              7275 0011  ld   $11         ;055f LDWI
              7276 0000  ld   $00
              7277 00ff  ld   $ff
              7278 0099  ld   $99         ;0562 ADDW
              7279 0068  ld   $68         ;0562 'Address'
              727a 002b  ld   $2b         ;0564 STW
              727b 006a  ld   $6a         ;0564 'j'
              727c 0021  ld   $21         ;0566 LDW
              727d 0036  ld   $36         ;0566 'Active'
              727e 00f3  ld   $f3         ;0568 DOKE
              727f 006a  ld   $6a         ;0568 'j'
              7280 00cf  ld   $cf         ;056a CALL
              7281 003a  ld   $3a         ;056a 'Expression'
              7282 00cf  ld   $cf         ;056c CALL
              7283 0062  ld   $62         ;056c 'EndOfLine'
              7284 00cf  ld   $cf         ;056e CALL
              7285 0038  ld   $38         ;056e 'Keyword'
              7286 0061  ld   $61         ;0570 'a'
              7287 0074  ld   $74         ;0571 't'
              7288 0000  ld   $00         ;0572 0
              7289 0035  ld   $35         ;0573 BCC
              728a 003f  ld   $3f         ;0574 EQ
              728b 009a  ld   $9a
              728c 00cf  ld   $cf         ;0576 CALL
              728d 003a  ld   $3a         ;0576 'Expression'
              728e 0035  ld   $35         ;0578 BCC
              728f 0053  ld   $53         ;0579 GE
              7290 007b  ld   $7b
              7291 00cf  ld   $cf         ;057b CALL
              7292 0046  ld   $46         ;057b 'ValueError'
              7293 005e  ld   $5e         ;057d ST
              7294 0030  ld   $30         ;057d 'Pos'
              7295 00cf  ld   $cf         ;057f CALL
              7296 0038  ld   $38         ;057f 'Keyword'
              7297 002c  ld   $2c         ;0581 ','
              7298 0000  ld   $00         ;0582 0
              7299 0035  ld   $35         ;0583 BCC
              729a 003f  ld   $3f         ;0584 EQ
              729b 0098  ld   $98
              729c 00cf  ld   $cf         ;0586 CALL
              729d 003a  ld   $3a         ;0586 'Expression'
              729e 0035  ld   $35         ;0588 BCC
              729f 0053  ld   $53         ;0589 GE
              72a0 008b  ld   $8b
              72a1 00cf  ld   $cf         ;058b CALL
              72a2 0046  ld   $46         ;058b 'ValueError'
              72a3 00e6  ld   $e6         ;058d SUBI
              72a4 0078  ld   $78
              72a5 0035  ld   $35         ;058f BCC
              72a6 0050  ld   $50         ;0590 LT
              72a7 0092  ld   $92
              72a8 00cf  ld   $cf         ;0592 CALL
              72a9 0046  ld   $46         ;0592 'ValueError'
              72aa 00e3  ld   $e3         ;0594 ADDI
              72ab 00f8  ld   $f8
              72ac 00e9  ld   $e9         ;0596 LSLW
              72ad 00ad  ld   $ad         ;0597 PEEK
              72ae 005e  ld   $5e         ;0598 ST
              72af 0031  ld   $31         ;0598 'Pos'+1
              72b0 00cf  ld   $cf         ;059a CALL
              72b1 0062  ld   $62         ;059a 'EndOfLine'
              72b2 00cf  ld   $cf         ;059c CALL
              72b3 0038  ld   $38         ;059c 'Keyword'
              72b4 0070  ld   $70         ;059e 'p'
              72b5 0075  ld   $75         ;059f 'u'
              72b6 0074  ld   $74         ;05a0 't'
              72b7 0000  ld   $00         ;05a1 0
              72b8 0035  ld   $35         ;05a2 BCC
              72b9 003f  ld   $3f         ;05a3 EQ
              72ba 00a9  ld   $a9
              72bb 00cf  ld   $cf         ;05a5 CALL
              72bc 003a  ld   $3a         ;05a5 'Expression'
              72bd 00cf  ld   $cf         ;05a7 CALL
              72be 0050  ld   $50         ;05a7 'PrintChar'
              72bf 00cf  ld   $cf         ;05a9 CALL
              72c0 0062  ld   $62         ;05a9 'EndOfLine'
              72c1 00cf  ld   $cf         ;05ab CALL
              72c2 0038  ld   $38         ;05ab 'Keyword'
              72c3 006d  ld   $6d         ;05ad 'm'
              72c4 006f  ld   $6f         ;05ae 'o'
              72c5 0064  ld   $64         ;05af 'd'
              72c6 0065  ld   $65         ;05b0 'e'
              72c7 0000  ld   $00         ;05b1 0
              72c8 0035  ld   $35         ;05b2 BCC
              72c9 003f  ld   $3f         ;05b3 EQ
              72ca 00c7  ld   $c7
              72cb 00cf  ld   $cf         ;05b5 CALL
              72cc 003a  ld   $3a         ;05b5 'Expression'
              72cd 001a  ld   $1a         ;05b7 LD
              72ce 0021  ld   $21
              72cf 00e6  ld   $e6         ;05b9 SUBI
              72d0 0020  ld   $20
              72d1 0035  ld   $35         ;05bb BCC
              72d2 0050  ld   $50         ;05bc LT
              72d3 00c5  ld   $c5
              72d4 0011  ld   $11         ;05be LDWI
              72d5 0000  ld   $00
              72d6 000b  ld   $0b
              72d7 002b  ld   $2b         ;05c1 STW
              72d8 0022  ld   $22         ;05c1 '_sysFn'
              72d9 0021  ld   $21         ;05c3 LDW
              72da 003c  ld   $3c         ;05c3 'Value'
              72db 00b4  ld   $b4         ;05c5 SYS
              72dc 00e7  ld   $e7
              72dd 00cf  ld   $cf         ;05c7 CALL
              72de 0062  ld   $62         ;05c7 'EndOfLine'
              72df 0011  ld   $11         ;05c9 LDWI
              72e0 00a0  ld   $a0
              72e1 0014  ld   $14
              72e2 00cf  ld   $cf         ;05cc CALL
              72e3 0018  ld   $18         ;05cc vAC
              72e4 0059  ld   $59         ;05ce LDI
              72e5 0000  ld   $00
              72e6 002b  ld   $2b         ;05d0 STW
              72e7 003c  ld   $3c         ;05d0 'Value'
              72e8 00e9  ld   $e9         ;05d2 LSLW
              72e9 00e9  ld   $e9         ;05d3 LSLW
              72ea 00e9  ld   $e9         ;05d4 LSLW
              72eb 00e9  ld   $e9         ;05d5 LSLW
              72ec 002b  ld   $2b         ;05d6 STW
              72ed 0040  ld   $40         ;05d6 'i'
              72ee 0093  ld   $93         ;05d8 INC
              72ef 0036  ld   $36         ;05d8 'Active'
              72f0 0021  ld   $21         ;05da LDW
              72f1 0036  ld   $36         ;05da 'Active'
              72f2 00ad  ld   $ad         ;05dc PEEK
              72f3 00e6  ld   $e6         ;05dd SUBI
              72f4 0030  ld   $30
              72f5 0035  ld   $35         ;05df BCC
              72f6 0050  ld   $50         ;05e0 LT
              72f7 00fd  ld   $fd
              72f8 00e6  ld   $e6         ;05e2 SUBI
              72f9 000a  ld   $0a
              72fa 0035  ld   $35         ;05e4 BCC
              72fb fe00  bra  ac          ;+-----------------------------------+
              72fc fcfd  bra  $72fd       ;|                                   |
              72fd 1418  ld   $18,y       ;| Trampoline for page $7200 lookups |
              72fe e006  jmp  y,$06       ;|                                   |
              72ff c218  st   [$18]       ;+-----------------------------------+
              7300 0053  ld   $53         ;05e5 GE
              7301 00eb  ld   $eb
              7302 00e3  ld   $e3         ;05e7 ADDI
              7303 000a  ld   $0a
              7304 0099  ld   $99         ;05e9 ADDW
              7305 0040  ld   $40         ;05e9 'i'
              7306 0090  ld   $90         ;05eb BRA
              7307 00ce  ld   $ce
              7308 0082  ld   $82         ;05ed ANDI
              7309 00df  ld   $df
              730a 00e6  ld   $e6         ;05ef SUBI
              730b 0007  ld   $07
              730c 0035  ld   $35         ;05f1 BCC
              730d 0050  ld   $50         ;05f2 LT
              730e 00fd  ld   $fd
              730f 00e6  ld   $e6         ;05f4 SUBI
              7310 0006  ld   $06
              7311 0035  ld   $35         ;05f6 BCC
              7312 0053  ld   $53         ;05f7 GE
              7313 00fd  ld   $fd
              7314 00e3  ld   $e3         ;05f9 ADDI
              7315 0010  ld   $10
              7316 0099  ld   $99         ;05fb ADDW
              7317 0040  ld   $40         ;05fb 'i'
              7318 0090  ld   $90         ;05fd BRA
              7319 00ce  ld   $ce
              731a 00ff  ld   $ff         ;05ff RET
              731b 0006  ld   $06         ;| RAM segment address (high byte first)
              731c 0000  ld   $00         ;|
              731d 00fd  ld   $fd         ;| Length (1..256)
              731e 00cd  ld   $cd         ;0600 DEF
              731f 00bb  ld   $bb
              7320 0075  ld   $75         ;0602 PUSH
              7321 00cf  ld   $cf         ;0603 CALL
              7322 0032  ld   $32         ;0603 'Number'
              7323 0035  ld   $35         ;0605 BCC
              7324 0056  ld   $56         ;0606 LE
              7325 00b9  ld   $b9
              7326 0021  ld   $21         ;0608 LDW
              7327 0048  ld   $48         ;0608 'End'
              7328 002b  ld   $2b         ;060a STW
              7329 0040  ld   $40         ;060a 'i'
              732a 002b  ld   $2b         ;060c STW
              732b 006a  ld   $6a         ;060c 'j'
              732c 00fc  ld   $fc         ;060e XORW
              732d 006c  ld   $6c         ;060e 'Begin'
              732e 0035  ld   $35         ;0610 BCC
              732f 003f  ld   $3f         ;0611 EQ
              7330 0016  ld   $16
              7331 0021  ld   $21         ;0613 LDW
              7332 0048  ld   $48         ;0613 'End'
              7333 00cf  ld   $cf         ;0615 CALL
              7334 006e  ld   $6e         ;0615 'PrevBlock'
              7335 00f6  ld   $f6         ;0617 DEEK
              7336 00b8  ld   $b8         ;0618 SUBW
              7337 003c  ld   $3c         ;0618 'Value'
              7338 0035  ld   $35         ;061a BCC
              7339 0050  ld   $50         ;061b LT
              733a 005a  ld   $5a
              733b 0021  ld   $21         ;061d LDW
              733c 006c  ld   $6c         ;061d 'Begin'
              733d 002b  ld   $2b         ;061f STW
              733e 0040  ld   $40         ;061f 'i'
              733f 0021  ld   $21         ;0621 LDW
              7340 0040  ld   $40         ;0621 'i'
              7341 00f6  ld   $f6         ;0623 DEEK
              7342 00b8  ld   $b8         ;0624 SUBW
              7343 003c  ld   $3c         ;0624 'Value'
              7344 0035  ld   $35         ;0626 BCC
              7345 0053  ld   $53         ;0627 GE
              7346 002d  ld   $2d
              7347 0021  ld   $21         ;0629 LDW
              7348 0040  ld   $40         ;0629 'i'
              7349 00cf  ld   $cf         ;062b CALL
              734a 0070  ld   $70         ;062b 'NextBlock'
              734b 0090  ld   $90         ;062d BRA
              734c 001d  ld   $1d
              734d 0035  ld   $35         ;062f BCC
              734e 0056  ld   $56         ;0630 LE
              734f 005a  ld   $5a
              7350 0021  ld   $21         ;0632 LDW
              7351 0000  ld   $00
              7352 00fc  ld   $fc         ;0634 XORW
              7353 0048  ld   $48         ;0634 'End'
              7354 0035  ld   $35         ;0636 BCC
              7355 003f  ld   $3f         ;0637 EQ
              7356 0058  ld   $58
              7357 0021  ld   $21         ;0639 LDW
              7358 006a  ld   $6a         ;0639 'j'
              7359 002b  ld   $2b         ;063b STW
              735a 0044  ld   $44         ;063b 'k'
              735b 00cf  ld   $cf         ;063d CALL
              735c 006e  ld   $6e         ;063d 'PrevBlock'
              735d 002b  ld   $2b         ;063f STW
              735e 006a  ld   $6a         ;063f 'j'
              735f 002b  ld   $2b         ;0641 STW
              7360 004e  ld   $4e         ;0641 'tmp'
              7361 0021  ld   $21         ;0643 LDW
              7362 004e  ld   $4e         ;0643 'tmp'
              7363 00ad  ld   $ad         ;0645 PEEK
              7364 00f0  ld   $f0         ;0646 POKE
              7365 0044  ld   $44         ;0646 'k'
              7366 0093  ld   $93         ;0648 INC
              7367 004e  ld   $4e         ;0648 'tmp'
              7368 0093  ld   $93         ;064a INC
              7369 0044  ld   $44         ;064a 'k'
              736a 0021  ld   $21         ;064c LDW
              736b 004e  ld   $4e         ;064c 'tmp'
              736c 0082  ld   $82         ;064e ANDI
              736d 001f  ld   $1f
              736e 0035  ld   $35         ;0650 BCC
              736f 0072  ld   $72         ;0651 NE
              7370 0041  ld   $41
              7371 0021  ld   $21         ;0653 LDW
              7372 006a  ld   $6a         ;0653 'j'
              7373 00fc  ld   $fc         ;0655 XORW
              7374 0040  ld   $40         ;0655 'i'
              7375 0035  ld   $35         ;0657 BCC
              7376 0072  ld   $72         ;0658 NE
              7377 0037  ld   $37
              7378 0059  ld   $59         ;065a LDI
              7379 0001  ld   $01
              737a 0035  ld   $35         ;065c BCC
              737b 003f  ld   $3f         ;065d EQ
              737c 0070  ld   $70
              737d 0021  ld   $21         ;065f LDW
              737e 0000  ld   $00
              737f 00e6  ld   $e6         ;0661 SUBI
              7380 0080  ld   $80
              7381 00e6  ld   $e6         ;0663 SUBI
              7382 00c0  ld   $c0
              7383 00fc  ld   $fc         ;0665 XORW
              7384 0048  ld   $48         ;0665 'End'
              7385 0035  ld   $35         ;0667 BCC
              7386 0072  ld   $72         ;0668 NE
              7387 006a  ld   $6a
              7388 00cf  ld   $cf         ;066a CALL
              7389 004a  ld   $4a         ;066a 'SyntaxError'
              738a 0021  ld   $21         ;066c LDW
              738b 0048  ld   $48         ;066c 'End'
              738c 00cf  ld   $cf         ;066e CALL
              738d 0070  ld   $70         ;066e 'NextBlock'
              738e 002b  ld   $2b         ;0670 STW
              738f 0048  ld   $48         ;0670 'End'
              7390 0021  ld   $21         ;0672 LDW
              7391 0036  ld   $36         ;0672 'Active'
              7392 00ad  ld   $ad         ;0674 PEEK
              7393 0035  ld   $35         ;0675 BCC
              7394 003f  ld   $3f         ;0676 EQ
              7395 008a  ld   $8a
              7396 0021  ld   $21         ;0678 LDW
              7397 003c  ld   $3c         ;0678 'Value'
              7398 00f3  ld   $f3         ;067a DOKE
              7399 0040  ld   $40         ;067a 'i'
              739a 0093  ld   $93         ;067c INC
              739b 0040  ld   $40         ;067c 'i'
              739c 0093  ld   $93         ;067e INC
              739d 0040  ld   $40         ;067e 'i'
              739e 0021  ld   $21         ;0680 LDW
              739f 0036  ld   $36         ;0680 'Active'
              73a0 00ad  ld   $ad         ;0682 PEEK
              73a1 0093  ld   $93         ;0683 INC
              73a2 0036  ld   $36         ;0683 'Active'
              73a3 00f0  ld   $f0         ;0685 POKE
              73a4 0040  ld   $40         ;0685 'i'
              73a5 0035  ld   $35         ;0687 BCC
              73a6 0072  ld   $72         ;0688 NE
              73a7 007c  ld   $7c
              73a8 0090  ld   $90         ;068a BRA
              73a9 00b7  ld   $b7
              73aa 0021  ld   $21         ;068c LDW
              73ab 0040  ld   $40         ;068c 'i'
              73ac 002b  ld   $2b         ;068e STW
              73ad 006a  ld   $6a         ;068e 'j'
              73ae 00fc  ld   $fc         ;0690 XORW
              73af 0048  ld   $48         ;0690 'End'
              73b0 0035  ld   $35         ;0692 BCC
              73b1 003f  ld   $3f         ;0693 EQ
              73b2 00b1  ld   $b1
              73b3 0021  ld   $21         ;0695 LDW
              73b4 006a  ld   $6a         ;0695 'j'
              73b5 00cf  ld   $cf         ;0697 CALL
              73b6 0070  ld   $70         ;0697 'NextBlock'
              73b7 002b  ld   $2b         ;0699 STW
              73b8 006a  ld   $6a         ;0699 'j'
              73b9 002b  ld   $2b         ;069b STW
              73ba 004e  ld   $4e         ;069b 'tmp'
              73bb 0021  ld   $21         ;069d LDW
              73bc 004e  ld   $4e         ;069d 'tmp'
              73bd 00ad  ld   $ad         ;069f PEEK
              73be 00f0  ld   $f0         ;06a0 POKE
              73bf 0040  ld   $40         ;06a0 'i'
              73c0 0093  ld   $93         ;06a2 INC
              73c1 004e  ld   $4e         ;06a2 'tmp'
              73c2 0093  ld   $93         ;06a4 INC
              73c3 0040  ld   $40         ;06a4 'i'
              73c4 0021  ld   $21         ;06a6 LDW
              73c5 004e  ld   $4e         ;06a6 'tmp'
              73c6 0082  ld   $82         ;06a8 ANDI
              73c7 001f  ld   $1f
              73c8 0035  ld   $35         ;06aa BCC
              73c9 0072  ld   $72         ;06ab NE
              73ca 009b  ld   $9b
              73cb 0021  ld   $21         ;06ad LDW
              73cc 006a  ld   $6a         ;06ad 'j'
              73cd 002b  ld   $2b         ;06af STW
              73ce 0040  ld   $40         ;06af 'i'
              73cf 0090  ld   $90         ;06b1 BRA
              73d0 008e  ld   $8e
              73d1 0021  ld   $21         ;06b3 LDW
              73d2 0048  ld   $48         ;06b3 'End'
              73d3 00cf  ld   $cf         ;06b5 CALL
              73d4 006e  ld   $6e         ;06b5 'PrevBlock'
              73d5 002b  ld   $2b         ;06b7 STW
              73d6 0048  ld   $48         ;06b7 'End'
              73d7 0021  ld   $21         ;06b9 LDW
              73d8 003c  ld   $3c         ;06b9 'Value'
              73d9 0063  ld   $63         ;06bb POP
              73da 00ff  ld   $ff         ;06bc RET
              73db 002b  ld   $2b         ;06bd STW
              73dc 0072  ld   $72         ;06bd 'Insert'
              73dd 0011  ld   $11         ;06bf LDWI
              73de 003f  ld   $3f
              73df 0035  ld   $35
              73e0 002b  ld   $2b         ;06c2 STW
              73e1 002a  ld   $2a
              73e2 0011  ld   $11         ;06c4 LDWI
              73e3 00a0  ld   $a0
              73e4 0018  ld   $18
              73e5 002b  ld   $2b         ;06c7 STW
              73e6 005a  ld   $5a         ;06c7 'Newline'
              73e7 00cf  ld   $cf         ;06c9 CALL
              73e8 0018  ld   $18         ;06c9 vAC
              73e9 00cf  ld   $cf         ;06cb CALL
              73ea 0052  ld   $52         ;06cb 'PrintS'
              73eb 002a  ld   $2a         ;06cd '*'
              73ec 002a  ld   $2a         ;06ce '*'
              73ed 002a  ld   $2a         ;06cf '*'
              73ee 0020  ld   $20         ;06d0 ' '
              73ef 0054  ld   $54         ;06d1 'T'
              73f0 0069  ld   $69         ;06d2 'i'
              73f1 006e  ld   $6e         ;06d3 'n'
              73f2 0079  ld   $79         ;06d4 'y'
              73f3 0020  ld   $20         ;06d5 ' '
              73f4 0042  ld   $42         ;06d6 'B'
              73f5 0041  ld   $41         ;06d7 'A'
              73f6 0053  ld   $53         ;06d8 'S'
              73f7 0049  ld   $49         ;06d9 'I'
              73f8 0043  ld   $43         ;06da 'C'
              73f9 0020  ld   $20         ;06db ' '
              73fa 0044  ld   $44         ;06dc 'D'
              73fb fe00  bra  ac          ;+-----------------------------------+
              73fc fcfd  bra  $73fd       ;|                                   |
              73fd 1418  ld   $18,y       ;| Trampoline for page $7300 lookups |
              73fe e006  jmp  y,$06       ;|                                   |
              73ff c218  st   [$18]       ;+-----------------------------------+
              7400 0045  ld   $45         ;06dd 'E'
              7401 0056  ld   $56         ;06de 'V'
              7402 0000  ld   $00         ;06df 0
              7403 00cf  ld   $cf         ;06e0 CALL
              7404 005a  ld   $5a         ;06e0 'Newline'
              7405 0011  ld   $11         ;06e2 LDWI
              7406 00a0  ld   $a0
              7407 0008  ld   $08
              7408 002b  ld   $2b         ;06e5 STW
              7409 001a  ld   $1a         ;06e5 '_vLR'
              740a 00ff  ld   $ff         ;06e7 RET
              740b 0059  ld   $59         ;06e8 LDI
              740c 0000  ld   $00
              740d 00f0  ld   $f0         ;06ea POKE
              740e 0036  ld   $36         ;06ea 'Active'
              740f 0059  ld   $59         ;06ec LDI
              7410 0020  ld   $20
              7411 00cf  ld   $cf         ;06ee CALL
              7412 0050  ld   $50         ;06ee 'PrintChar'
              7413 00cf  ld   $cf         ;06f0 CALL
              7414 005a  ld   $5a         ;06f0 'Newline'
              7415 0059  ld   $59         ;06f2 LDI
              7416 00a2  ld   $a2
              7417 005e  ld   $5e         ;06f4 ST
              7418 0036  ld   $36         ;06f4 'Active'
              7419 00cf  ld   $cf         ;06f6 CALL
              741a 0034  ld   $34         ;06f6 'Spaces'
              741b 0021  ld   $21         ;06f8 LDW
              741c 0036  ld   $36         ;06f8 'Active'
              741d 00ad  ld   $ad         ;06fa PEEK
              741e 0063  ld   $63         ;06fb POP
              741f 00ff  ld   $ff         ;06fc RET
              7420 0008  ld   $08         ;| RAM segment address (high byte first)
              7421 00a0  ld   $a0         ;|
              7422 005f  ld   $5f         ;| Length (1..256)
              7423 00cd  ld   $cd         ;08a0 DEF
              7424 00b6  ld   $b6
              7425 0088  ld   $88         ;08a2 ORI
              7426 001f  ld   $1f
              7427 00e3  ld   $e3         ;08a4 ADDI
              7428 0001  ld   $01
              7429 002b  ld   $2b         ;08a6 STW
              742a 004e  ld   $4e         ;08a6 'tmp'
              742b 0035  ld   $35         ;08a8 BCC
              742c 0056  ld   $56         ;08a9 LE
              742d 00b3  ld   $b3
              742e 0082  ld   $82         ;08ab ANDI
              742f 00e0  ld   $e0
              7430 0035  ld   $35         ;08ad BCC
              7431 0072  ld   $72         ;08ae NE
              7432 00b3  ld   $b3
              7433 0021  ld   $21         ;08b0 LDW
              7434 004e  ld   $4e         ;08b0 'tmp'
              7435 00e3  ld   $e3         ;08b2 ADDI
              7436 00a0  ld   $a0
              7437 00ff  ld   $ff         ;08b4 RET
              7438 0021  ld   $21         ;08b5 LDW
              7439 004e  ld   $4e         ;08b5 'tmp'
              743a 00ff  ld   $ff         ;08b7 RET
              743b 002b  ld   $2b         ;08b8 STW
              743c 0070  ld   $70         ;08b8 'NextBlock'
              743d 00cd  ld   $cd         ;08ba DEF
              743e 00ce  ld   $ce
              743f 00e6  ld   $e6         ;08bc SUBI
              7440 0020  ld   $20
              7441 002b  ld   $2b         ;08be STW
              7442 004e  ld   $4e         ;08be 'tmp'
              7443 0035  ld   $35         ;08c0 BCC
              7444 0050  ld   $50         ;08c1 LT
              7445 00cb  ld   $cb
              7446 0082  ld   $82         ;08c3 ANDI
              7447 0060  ld   $60
              7448 0035  ld   $35         ;08c5 BCC
              7449 0072  ld   $72         ;08c6 NE
              744a 00cb  ld   $cb
              744b 0021  ld   $21         ;08c8 LDW
              744c 004e  ld   $4e         ;08c8 'tmp'
              744d 00e6  ld   $e6         ;08ca SUBI
              744e 00a0  ld   $a0
              744f 00ff  ld   $ff         ;08cc RET
              7450 0021  ld   $21         ;08cd LDW
              7451 004e  ld   $4e         ;08cd 'tmp'
              7452 00ff  ld   $ff         ;08cf RET
              7453 002b  ld   $2b         ;08d0 STW
              7454 006e  ld   $6e         ;08d0 'PrevBlock'
              7455 00cd  ld   $cd         ;08d2 DEF
              7456 00fa  ld   $fa
              7457 0021  ld   $21         ;08d4 LDW
              7458 006c  ld   $6c         ;08d4 'Begin'
              7459 002b  ld   $2b         ;08d6 STW
              745a 0040  ld   $40         ;08d6 'i'
              745b 00fc  ld   $fc         ;08d8 XORW
              745c 0048  ld   $48         ;08d8 'End'
              745d 0035  ld   $35         ;08da BCC
              745e 003f  ld   $3f         ;08db EQ
              745f 00f3  ld   $f3
              7460 0021  ld   $21         ;08dd LDW
              7461 0040  ld   $40         ;08dd 'i'
              7462 00f6  ld   $f6         ;08df DEEK
              7463 00fc  ld   $fc         ;08e0 XORW
              7464 003c  ld   $3c         ;08e0 'Value'
              7465 0035  ld   $35         ;08e2 BCC
              7466 0072  ld   $72         ;08e3 NE
              7467 00ed  ld   $ed
              7468 0021  ld   $21         ;08e5 LDW
              7469 0040  ld   $40         ;08e5 'i'
              746a 00e3  ld   $e3         ;08e7 ADDI
              746b 0002  ld   $02
              746c 002b  ld   $2b         ;08e9 STW
              746d 0036  ld   $36         ;08e9 'Active'
              746e 00cf  ld   $cf         ;08eb CALL
              746f 0058  ld   $58         ;08eb 'TestBreak'
              7470 00cf  ld   $cf         ;08ed CALL
              7471 0066  ld   $66         ;08ed 'Statements'
              7472 0021  ld   $21         ;08ef LDW
              7473 0040  ld   $40         ;08ef 'i'
              7474 00cf  ld   $cf         ;08f1 CALL
              7475 0070  ld   $70         ;08f1 'NextBlock'
              7476 0090  ld   $90         ;08f3 BRA
              7477 00d4  ld   $d4
              7478 00cf  ld   $cf         ;08f5 CALL
              7479 0056  ld   $56         ;08f5 'Prompt'
              747a 004c  ld   $4c         ;08f7 'L'
              747b 0069  ld   $69         ;08f8 'i'
              747c 006e  ld   $6e         ;08f9 'n'
              747d 0065  ld   $65         ;08fa 'e'
              747e 0000  ld   $00         ;08fb 0
              747f 0093  ld   $93         ;08fc INC
              7480 001b  ld   $1b
              7481 00ff  ld   $ff         ;08fe RET
              7482 0009  ld   $09         ;| RAM segment address (high byte first)
              7483 00a0  ld   $a0         ;|
              7484 005e  ld   $5e         ;| Length (1..256)
              7485 002b  ld   $2b         ;09a0 STW
              7486 005e  ld   $5e         ;09a0 'GotoValue'
              7487 00cd  ld   $cd         ;09a2 DEF
              7488 00de  ld   $de
              7489 0075  ld   $75         ;09a4 PUSH
              748a 0035  ld   $35         ;09a5 BCC
              748b 0053  ld   $53         ;09a6 GE
              748c 00b0  ld   $b0
              748d 0059  ld   $59         ;09a8 LDI
              748e 0000  ld   $00
              748f 00b8  ld   $b8         ;09aa SUBW
              7490 003c  ld   $3c         ;09aa 'Value'
              7491 002b  ld   $2b         ;09ac STW
              7492 003c  ld   $3c         ;09ac 'Value'
              7493 0059  ld   $59         ;09ae LDI
              7494 002d  ld   $2d
              7495 00cf  ld   $cf         ;09b0 CALL
              7496 0050  ld   $50         ;09b0 'PrintChar'
              7497 0059  ld   $59         ;09b2 LDI
              7498 0000  ld   $00
              7499 002b  ld   $2b         ;09b4 STW
              749a 0044  ld   $44         ;09b4 'k'
              749b 0021  ld   $21         ;09b6 LDW
              749c 003c  ld   $3c         ;09b6 'Value'
              749d 0035  ld   $35         ;09b8 BCC
              749e 0053  ld   $53         ;09b9 GE
              749f 00c4  ld   $c4
              74a0 0011  ld   $11         ;09bb LDWI
              74a1 00d0  ld   $d0
              74a2 008a  ld   $8a
              74a3 0099  ld   $99         ;09be ADDW
              74a4 003c  ld   $3c         ;09be 'Value'
              74a5 002b  ld   $2b         ;09c0 STW
              74a6 003c  ld   $3c         ;09c0 'Value'
              74a7 0059  ld   $59         ;09c2 LDI
              74a8 0003  ld   $03
              74a9 002b  ld   $2b         ;09c4 STW
              74aa 0044  ld   $44         ;09c4 'k'
              74ab 0011  ld   $11         ;09c6 LDWI
              74ac 0010  ld   $10
              74ad 0027  ld   $27
              74ae 00cf  ld   $cf         ;09c9 CALL
              74af 0074  ld   $74         ;09c9 'PrintDigit'
              74b0 0011  ld   $11         ;09cb LDWI
              74b1 00e8  ld   $e8
              74b2 0003  ld   $03
              74b3 00cf  ld   $cf         ;09ce CALL
              74b4 0074  ld   $74         ;09ce 'PrintDigit'
              74b5 0059  ld   $59         ;09d0 LDI
              74b6 0064  ld   $64
              74b7 00cf  ld   $cf         ;09d2 CALL
              74b8 0074  ld   $74         ;09d2 'PrintDigit'
              74b9 0059  ld   $59         ;09d4 LDI
              74ba 000a  ld   $0a
              74bb 00cf  ld   $cf         ;09d6 CALL
              74bc 0074  ld   $74         ;09d6 'PrintDigit'
              74bd 0059  ld   $59         ;09d8 LDI
              74be 0030  ld   $30
              74bf 0099  ld   $99         ;09da ADDW
              74c0 003c  ld   $3c         ;09da 'Value'
              74c1 00cf  ld   $cf         ;09dc CALL
              74c2 0050  ld   $50         ;09dc 'PrintChar'
              74c3 0063  ld   $63         ;09de POP
              74c4 00ff  ld   $ff         ;09df RET
              74c5 002b  ld   $2b         ;09e0 STW
              74c6 0076  ld   $76         ;09e0 'PrintValue'
              74c7 00cd  ld   $cd         ;09e2 DEF
              74c8 00ea  ld   $ea
              74c9 00cf  ld   $cf         ;09e4 CALL
              74ca 0056  ld   $56         ;09e4 'Prompt'
              74cb 0053  ld   $53         ;09e6 'S'
              74cc 0074  ld   $74         ;09e7 't'
              74cd 0061  ld   $61         ;09e8 'a'
              74ce 0063  ld   $63         ;09e9 'c'
              74cf 006b  ld   $6b         ;09ea 'k'
              74d0 0000  ld   $00         ;09eb 0
              74d1 002b  ld   $2b         ;09ec STW
              74d2 0060  ld   $60         ;09ec 'StackError'
              74d3 00cd  ld   $cd         ;09ee DEF
              74d4 00f7  ld   $f7
              74d5 00cf  ld   $cf         ;09f0 CALL
              74d6 0056  ld   $56         ;09f0 'Prompt'
              74d7 0053  ld   $53         ;09f2 'S'
              74d8 0079  ld   $79         ;09f3 'y'
              74d9 006e  ld   $6e         ;09f4 'n'
              74da 0074  ld   $74         ;09f5 't'
              74db 0061  ld   $61         ;09f6 'a'
              74dc 0078  ld   $78         ;09f7 'x'
              74dd 0000  ld   $00         ;09f8 0
              74de 002b  ld   $2b         ;09f9 STW
              74df 004a  ld   $4a         ;09f9 'SyntaxError'
              74e0 0093  ld   $93         ;09fb INC
              74e1 001b  ld   $1b
              74e2 00ff  ld   $ff         ;09fd RET
              74e3 000a  ld   $0a         ;| RAM segment address (high byte first)
              74e4 00a0  ld   $a0         ;|
              74e5 005f  ld   $5f         ;| Length (1..256)
              74e6 00cd  ld   $cd         ;0aa0 DEF
              74e7 00d2  ld   $d2
              74e8 0021  ld   $21         ;0aa2 LDW
              74e9 001a  ld   $1a
              74ea 002b  ld   $2b         ;0aa4 STW
              74eb 004e  ld   $4e         ;0aa4 'tmp'
              74ec 0021  ld   $21         ;0aa6 LDW
              74ed 0036  ld   $36         ;0aa6 'Active'
              74ee 002b  ld   $2b         ;0aa8 STW
              74ef 006a  ld   $6a         ;0aa8 'j'
              74f0 0021  ld   $21         ;0aaa LDW
              74f1 004e  ld   $4e         ;0aaa 'tmp'
              74f2 00ad  ld   $ad         ;0aac PEEK
              74f3 0093  ld   $93         ;0aad INC
              74f4 004e  ld   $4e         ;0aad 'tmp'
              74f5 0035  ld   $35         ;0aaf BCC
              74f6 003f  ld   $3f         ;0ab0 EQ
              74f7 00ce  ld   $ce
              74f8 002b  ld   $2b         ;0ab2 STW
              74f9 0040  ld   $40         ;0ab2 'i'
              74fa 0021  ld   $21         ;0ab4 LDW
              74fb fe00  bra  ac          ;+-----------------------------------+
              74fc fcfd  bra  $74fd       ;|                                   |
              74fd 1418  ld   $18,y       ;| Trampoline for page $7400 lookups |
              74fe e006  jmp  y,$06       ;|                                   |
              74ff c218  st   [$18]       ;+-----------------------------------+
              7500 0036  ld   $36         ;0ab4 'Active'
              7501 00ad  ld   $ad         ;0ab6 PEEK
              7502 0088  ld   $88         ;0ab7 ORI
              7503 0020  ld   $20
              7504 00fc  ld   $fc         ;0ab9 XORW
              7505 0040  ld   $40         ;0ab9 'i'
              7506 0035  ld   $35         ;0abb BCC
              7507 0072  ld   $72         ;0abc NE
              7508 00c0  ld   $c0
              7509 0093  ld   $93         ;0abe INC
              750a 0036  ld   $36         ;0abe 'Active'
              750b 0090  ld   $90         ;0ac0 BRA
              750c 00a8  ld   $a8
              750d 0021  ld   $21         ;0ac2 LDW
              750e 006a  ld   $6a         ;0ac2 'j'
              750f 002b  ld   $2b         ;0ac4 STW
              7510 0036  ld   $36         ;0ac4 'Active'
              7511 0021  ld   $21         ;0ac6 LDW
              7512 004e  ld   $4e         ;0ac6 'tmp'
              7513 00ad  ld   $ad         ;0ac8 PEEK
              7514 0093  ld   $93         ;0ac9 INC
              7515 004e  ld   $4e         ;0ac9 'tmp'
              7516 0035  ld   $35         ;0acb BCC
              7517 0072  ld   $72         ;0acc NE
              7518 00c4  ld   $c4
              7519 00cf  ld   $cf         ;0ace CALL
              751a 004e  ld   $4e         ;0ace 'tmp'
              751b 00cf  ld   $cf         ;0ad0 CALL
              751c 0034  ld   $34         ;0ad0 'Spaces'
              751d 00cf  ld   $cf         ;0ad2 CALL
              751e 004e  ld   $4e         ;0ad2 'tmp'
              751f 002b  ld   $2b         ;0ad4 STW
              7520 0038  ld   $38         ;0ad4 'Keyword'
              7521 00cd  ld   $cd         ;0ad6 DEF
              7522 00fa  ld   $fa
              7523 0011  ld   $11         ;0ad8 LDWI
              7524 0000  ld   $00
              7525 0080  ld   $80
              7526 002b  ld   $2b         ;0adb STW
              7527 003c  ld   $3c         ;0adb 'Value'
              7528 00e9  ld   $e9         ;0add LSLW
              7529 00e9  ld   $e9         ;0ade LSLW
              752a 0099  ld   $99         ;0adf ADDW
              752b 003c  ld   $3c         ;0adf 'Value'
              752c 00e9  ld   $e9         ;0ae1 LSLW
              752d 002b  ld   $2b         ;0ae2 STW
              752e 0040  ld   $40         ;0ae2 'i'
              752f 0021  ld   $21         ;0ae4 LDW
              7530 0036  ld   $36         ;0ae4 'Active'
              7531 00ad  ld   $ad         ;0ae6 PEEK
              7532 00e6  ld   $e6         ;0ae7 SUBI
              7533 0030  ld   $30
              7534 0035  ld   $35         ;0ae9 BCC
              7535 0050  ld   $50         ;0aea LT
              7536 00f7  ld   $f7
              7537 00e6  ld   $e6         ;0aec SUBI
              7538 000a  ld   $0a
              7539 0035  ld   $35         ;0aee BCC
              753a 0053  ld   $53         ;0aef GE
              753b 00f7  ld   $f7
              753c 00e3  ld   $e3         ;0af1 ADDI
              753d 000a  ld   $0a
              753e 0099  ld   $99         ;0af3 ADDW
              753f 0040  ld   $40         ;0af3 'i'
              7540 0093  ld   $93         ;0af5 INC
              7541 0036  ld   $36         ;0af5 'Active'
              7542 0090  ld   $90         ;0af7 BRA
              7543 00d9  ld   $d9
              7544 0021  ld   $21         ;0af9 LDW
              7545 003c  ld   $3c         ;0af9 'Value'
              7546 00ff  ld   $ff         ;0afb RET
              7547 0093  ld   $93         ;0afc INC
              7548 001b  ld   $1b
              7549 00ff  ld   $ff         ;0afe RET
              754a 000b  ld   $0b         ;| RAM segment address (high byte first)
              754b 00a0  ld   $a0         ;|
              754c 0060  ld   $60         ;| Length (1..256)
              754d 002b  ld   $2b         ;0ba0 STW
              754e 0032  ld   $32         ;0ba0 'Number'
              754f 00cd  ld   $cd         ;0ba2 DEF
              7550 00d1  ld   $d1
              7551 0021  ld   $21         ;0ba4 LDW
              7552 0036  ld   $36         ;0ba4 'Active'
              7553 00ad  ld   $ad         ;0ba6 PEEK
              7554 0035  ld   $35         ;0ba7 BCC
              7555 003f  ld   $3f         ;0ba8 EQ
              7556 00b3  ld   $b3
              7557 008c  ld   $8c         ;0baa XORI
              7558 003a  ld   $3a
              7559 0035  ld   $35         ;0bac BCC
              755a 0072  ld   $72         ;0bad NE
              755b 00b1  ld   $b1
              755c 0093  ld   $93         ;0baf INC
              755d 0036  ld   $36         ;0baf 'Active'
              755e 00cf  ld   $cf         ;0bb1 CALL
              755f 0066  ld   $66         ;0bb1 'Statements'
              7560 00cf  ld   $cf         ;0bb3 CALL
              7561 004a  ld   $4a         ;0bb3 'SyntaxError'
              7562 0021  ld   $21         ;0bb5 LDW
              7563 0036  ld   $36         ;0bb5 'Active'
              7564 00cf  ld   $cf         ;0bb7 CALL
              7565 0070  ld   $70         ;0bb7 'NextBlock'
              7566 002b  ld   $2b         ;0bb9 STW
              7567 0036  ld   $36         ;0bb9 'Active'
              7568 00fc  ld   $fc         ;0bbb XORW
              7569 0048  ld   $48         ;0bbb 'End'
              756a 0035  ld   $35         ;0bbd BCC
              756b 003f  ld   $3f         ;0bbe EQ
              756c 00ce  ld   $ce
              756d 0011  ld   $11         ;0bc0 LDWI
              756e 00c0  ld   $c0
              756f 001b  ld   $1b
              7570 00fc  ld   $fc         ;0bc3 XORW
              7571 0036  ld   $36         ;0bc3 'Active'
              7572 0035  ld   $35         ;0bc5 BCC
              7573 003f  ld   $3f         ;0bc6 EQ
              7574 00ce  ld   $ce
              7575 0021  ld   $21         ;0bc8 LDW
              7576 0036  ld   $36         ;0bc8 'Active'
              7577 00e3  ld   $e3         ;0bca ADDI
              7578 0002  ld   $02
              7579 002b  ld   $2b         ;0bcc STW
              757a 0036  ld   $36         ;0bcc 'Active'
              757b 00cf  ld   $cf         ;0bce CALL
              757c 0066  ld   $66         ;0bce 'Statements'
              757d 00cf  ld   $cf         ;0bd0 CALL
              757e 0056  ld   $56         ;0bd0 'Prompt'
              757f 0000  ld   $00         ;0bd2 0
              7580 002b  ld   $2b         ;0bd3 STW
              7581 0062  ld   $62         ;0bd3 'EndOfLine'
              7582 00cd  ld   $cd         ;0bd5 DEF
              7583 00fb  ld   $fb
              7584 0021  ld   $21         ;0bd7 LDW
              7585 0000  ld   $00
              7586 002b  ld   $2b         ;0bd9 STW
              7587 0040  ld   $40         ;0bd9 'i'
              7588 0059  ld   $59         ;0bdb LDI
              7589 0002  ld   $02
              758a 002b  ld   $2b         ;0bdd STW
              758b 006a  ld   $6a         ;0bdd 'j'
              758c 0021  ld   $21         ;0bdf LDW
              758d 0040  ld   $40         ;0bdf 'i'
              758e 00e6  ld   $e6         ;0be1 SUBI
              758f 0036  ld   $36
              7590 002b  ld   $2b         ;0be3 STW
              7591 0040  ld   $40         ;0be3 'i'
              7592 0059  ld   $59         ;0be5 LDI
              7593 0000  ld   $00
              7594 00f0  ld   $f0         ;0be7 POKE
              7595 0040  ld   $40         ;0be7 'i'
              7596 0093  ld   $93         ;0be9 INC
              7597 0040  ld   $40         ;0be9 'i'
              7598 001a  ld   $1a         ;0beb LD
              7599 0040  ld   $40         ;0beb 'i'
              759a 0035  ld   $35         ;0bed BCC
              759b 0072  ld   $72         ;0bee NE
              759c 00e3  ld   $e3
              759d 0021  ld   $21         ;0bf0 LDW
              759e 006a  ld   $6a         ;0bf0 'j'
              759f 00e6  ld   $e6         ;0bf2 SUBI
              75a0 0001  ld   $01
              75a1 0035  ld   $35         ;0bf4 BCC
              75a2 0072  ld   $72         ;0bf5 NE
              75a3 00db  ld   $db
              75a4 0011  ld   $11         ;0bf7 LDWI
              75a5 00c0  ld   $c0
              75a6 001b  ld   $1b
              75a7 002b  ld   $2b         ;0bfa STW
              75a8 006c  ld   $6c         ;0bfa 'Begin'
              75a9 00ff  ld   $ff         ;0bfc RET
              75aa 0093  ld   $93         ;0bfd INC
              75ab 001b  ld   $1b
              75ac 00ff  ld   $ff         ;0bff RET
              75ad 000c  ld   $0c         ;| RAM segment address (high byte first)
              75ae 00a0  ld   $a0         ;|
              75af 0060  ld   $60         ;| Length (1..256)
              75b0 002b  ld   $2b         ;0ca0 STW
              75b1 0078  ld   $78         ;0ca0 'Clear'
              75b2 00cd  ld   $cd         ;0ca2 DEF
              75b3 00ed  ld   $ed
              75b4 0075  ld   $75         ;0ca4 PUSH
              75b5 001a  ld   $1a         ;0ca5 LD
              75b6 001c  ld   $1c
              75b7 00e6  ld   $e6         ;0ca7 SUBI
              75b8 008d  ld   $8d
              75b9 0035  ld   $35         ;0ca9 BCC
              75ba 0053  ld   $53         ;0caa GE
              75bb 00ac  ld   $ac
              75bc 00cf  ld   $cf         ;0cac CALL
              75bd 0060  ld   $60         ;0cac 'StackError'
              75be 00cf  ld   $cf         ;0cae CALL
              75bf 0038  ld   $38         ;0cae 'Keyword'
              75c0 002d  ld   $2d         ;0cb0 '-'
              75c1 0000  ld   $00         ;0cb1 0
              75c2 0035  ld   $35         ;0cb2 BCC
              75c3 003f  ld   $3f         ;0cb3 EQ
              75c4 00bb  ld   $bb
              75c5 00cf  ld   $cf         ;0cb5 CALL
              75c6 007a  ld   $7a         ;0cb5 'Term'
              75c7 0059  ld   $59         ;0cb7 LDI
              75c8 0000  ld   $00
              75c9 00b8  ld   $b8         ;0cb9 SUBW
              75ca 003c  ld   $3c         ;0cb9 'Value'
              75cb 0090  ld   $90         ;0cbb BRA
              75cc 00c1  ld   $c1
              75cd 00cf  ld   $cf         ;0cbd CALL
              75ce 0038  ld   $38         ;0cbd 'Keyword'
              75cf 002b  ld   $2b         ;0cbf '+'
              75d0 0000  ld   $00         ;0cc0 0
              75d1 00cf  ld   $cf         ;0cc1 CALL
              75d2 007a  ld   $7a         ;0cc1 'Term'
              75d3 0075  ld   $75         ;0cc3 PUSH
              75d4 00ec  ld   $ec         ;0cc4 STLW
              75d5 0000  ld   $00
              75d6 00cf  ld   $cf         ;0cc6 CALL
              75d7 0038  ld   $38         ;0cc6 'Keyword'
              75d8 002b  ld   $2b         ;0cc8 '+'
              75d9 0000  ld   $00         ;0cc9 0
              75da 0035  ld   $35         ;0cca BCC
              75db 003f  ld   $3f         ;0ccb EQ
              75dc 00d5  ld   $d5
              75dd 00cf  ld   $cf         ;0ccd CALL
              75de 007a  ld   $7a         ;0ccd 'Term'
              75df 00ee  ld   $ee         ;0ccf LDLW
              75e0 0000  ld   $00
              75e1 0099  ld   $99         ;0cd1 ADDW
              75e2 003c  ld   $3c         ;0cd1 'Value'
              75e3 00ec  ld   $ec         ;0cd3 STLW
              75e4 0000  ld   $00
              75e5 0090  ld   $90         ;0cd5 BRA
              75e6 00c4  ld   $c4
              75e7 00cf  ld   $cf         ;0cd7 CALL
              75e8 0038  ld   $38         ;0cd7 'Keyword'
              75e9 002d  ld   $2d         ;0cd9 '-'
              75ea 0000  ld   $00         ;0cda 0
              75eb 0035  ld   $35         ;0cdb BCC
              75ec 003f  ld   $3f         ;0cdc EQ
              75ed 00e6  ld   $e6
              75ee 00cf  ld   $cf         ;0cde CALL
              75ef 007a  ld   $7a         ;0cde 'Term'
              75f0 00ee  ld   $ee         ;0ce0 LDLW
              75f1 0000  ld   $00
              75f2 00b8  ld   $b8         ;0ce2 SUBW
              75f3 003c  ld   $3c         ;0ce2 'Value'
              75f4 00ec  ld   $ec         ;0ce4 STLW
              75f5 0000  ld   $00
              75f6 0090  ld   $90         ;0ce6 BRA
              75f7 00c4  ld   $c4
              75f8 00ee  ld   $ee         ;0ce8 LDLW
              75f9 0000  ld   $00
              75fa 002b  ld   $2b         ;0cea STW
              75fb fe00  bra  ac          ;+-----------------------------------+
              75fc fcfd  bra  $75fd       ;|                                   |
              75fd 1418  ld   $18,y       ;| Trampoline for page $7500 lookups |
              75fe e006  jmp  y,$06       ;|                                   |
              75ff c218  st   [$18]       ;+-----------------------------------+
              7600 003c  ld   $3c         ;0cea 'Value'
              7601 0063  ld   $63         ;0cec POP
              7602 0063  ld   $63         ;0ced POP
              7603 00ff  ld   $ff         ;0cee RET
              7604 002b  ld   $2b         ;0cef STW
              7605 003a  ld   $3a         ;0cef 'Expression'
              7606 00cd  ld   $cd         ;0cf1 DEF
              7607 00f9  ld   $f9
              7608 00cf  ld   $cf         ;0cf3 CALL
              7609 0056  ld   $56         ;0cf3 'Prompt'
              760a 0056  ld   $56         ;0cf5 'V'
              760b 0061  ld   $61         ;0cf6 'a'
              760c 006c  ld   $6c         ;0cf7 'l'
              760d 0075  ld   $75         ;0cf8 'u'
              760e 0065  ld   $65         ;0cf9 'e'
              760f 0000  ld   $00         ;0cfa 0
              7610 002b  ld   $2b         ;0cfb STW
              7611 0046  ld   $46         ;0cfb 'ValueError'
              7612 0093  ld   $93         ;0cfd INC
              7613 001b  ld   $1b
              7614 00ff  ld   $ff         ;0cff RET
              7615 000d  ld   $0d         ;| RAM segment address (high byte first)
              7616 00a0  ld   $a0         ;|
              7617 0060  ld   $60         ;| Length (1..256)
              7618 00cd  ld   $cd         ;0da0 DEF
              7619 00e4  ld   $e4
              761a 0075  ld   $75         ;0da2 PUSH
              761b 00cf  ld   $cf         ;0da3 CALL
              761c 004c  ld   $4c         ;0da3 'Factor'
              761d 0075  ld   $75         ;0da5 PUSH
              761e 0021  ld   $21         ;0da6 LDW
              761f 003c  ld   $3c         ;0da6 'Value'
              7620 00ec  ld   $ec         ;0da8 STLW
              7621 0000  ld   $00
              7622 00cf  ld   $cf         ;0daa CALL
              7623 0038  ld   $38         ;0daa 'Keyword'
              7624 002a  ld   $2a         ;0dac '*'
              7625 0000  ld   $00         ;0dad 0
              7626 0035  ld   $35         ;0dae BCC
              7627 003f  ld   $3f         ;0daf EQ
              7628 00b9  ld   $b9
              7629 00cf  ld   $cf         ;0db1 CALL
              762a 004c  ld   $4c         ;0db1 'Factor'
              762b 00ee  ld   $ee         ;0db3 LDLW
              762c 0000  ld   $00
              762d 00cf  ld   $cf         ;0db5 CALL
              762e 007c  ld   $7c         ;0db5 'Multiply'
              762f 00ec  ld   $ec         ;0db7 STLW
              7630 0000  ld   $00
              7631 0090  ld   $90         ;0db9 BRA
              7632 00a8  ld   $a8
              7633 00cf  ld   $cf         ;0dbb CALL
              7634 0038  ld   $38         ;0dbb 'Keyword'
              7635 002f  ld   $2f         ;0dbd '/'
              7636 0000  ld   $00         ;0dbe 0
              7637 0035  ld   $35         ;0dbf BCC
              7638 003f  ld   $3f         ;0dc0 EQ
              7639 00ca  ld   $ca
              763a 00cf  ld   $cf         ;0dc2 CALL
              763b 004c  ld   $4c         ;0dc2 'Factor'
              763c 00ee  ld   $ee         ;0dc4 LDLW
              763d 0000  ld   $00
              763e 00cf  ld   $cf         ;0dc6 CALL
              763f 003e  ld   $3e         ;0dc6 'Divide'
              7640 00ec  ld   $ec         ;0dc8 STLW
              7641 0000  ld   $00
              7642 0090  ld   $90         ;0dca BRA
              7643 00a8  ld   $a8
              7644 00cf  ld   $cf         ;0dcc CALL
              7645 0038  ld   $38         ;0dcc 'Keyword'
              7646 0025  ld   $25         ;0dce '%'
              7647 0000  ld   $00         ;0dcf 0
              7648 0035  ld   $35         ;0dd0 BCC
              7649 003f  ld   $3f         ;0dd1 EQ
              764a 00dd  ld   $dd
              764b 00cf  ld   $cf         ;0dd3 CALL
              764c 004c  ld   $4c         ;0dd3 'Factor'
              764d 00ee  ld   $ee         ;0dd5 LDLW
              764e 0000  ld   $00
              764f 00cf  ld   $cf         ;0dd7 CALL
              7650 003e  ld   $3e         ;0dd7 'Divide'
              7651 0021  ld   $21         ;0dd9 LDW
              7652 0040  ld   $40         ;0dd9 'i'
              7653 00ec  ld   $ec         ;0ddb STLW
              7654 0000  ld   $00
              7655 0090  ld   $90         ;0ddd BRA
              7656 00a8  ld   $a8
              7657 00ee  ld   $ee         ;0ddf LDLW
              7658 0000  ld   $00
              7659 002b  ld   $2b         ;0de1 STW
              765a 003c  ld   $3c         ;0de1 'Value'
              765b 0063  ld   $63         ;0de3 POP
              765c 0063  ld   $63         ;0de4 POP
              765d 00ff  ld   $ff         ;0de5 RET
              765e 002b  ld   $2b         ;0de6 STW
              765f 007a  ld   $7a         ;0de6 'Term'
              7660 0093  ld   $93         ;0de8 INC
              7661 001b  ld   $1b
              7662 00ff  ld   $ff         ;0dea RET
              7663 00cf  ld   $cf         ;0deb CALL
              7664 0038  ld   $38         ;0deb 'Keyword'
              7665 0072  ld   $72         ;0ded 'r'
              7666 0075  ld   $75         ;0dee 'u'
              7667 006e  ld   $6e         ;0def 'n'
              7668 0000  ld   $00         ;0df0 0
              7669 0035  ld   $35         ;0df1 BCC
              766a 003f  ld   $3f         ;0df2 EQ
              766b 00f9  ld   $f9
              766c 00cf  ld   $cf         ;0df4 CALL
              766d 0078  ld   $78         ;0df4 'Clear'
              766e 00f6  ld   $f6         ;0df6 DEEK
              766f 002b  ld   $2b         ;0df7 STW
              7670 003c  ld   $3c         ;0df7 'Value'
              7671 00cf  ld   $cf         ;0df9 CALL
              7672 005e  ld   $5e         ;0df9 'GotoValue'
              7673 0011  ld   $11         ;0dfb LDWI
              7674 00a0  ld   $a0
              7675 0016  ld   $16
              7676 00cf  ld   $cf         ;0dfe CALL
              7677 0018  ld   $18         ;0dfe vAC
              7678 000e  ld   $0e         ;| RAM segment address (high byte first)
              7679 00a0  ld   $a0         ;|
              767a 0060  ld   $60         ;| Length (1..256)
              767b 00cd  ld   $cd         ;0ea0 DEF
              767c 00fb  ld   $fb
              767d 002b  ld   $2b         ;0ea2 STW
              767e 006a  ld   $6a         ;0ea2 'j'
              767f 00fc  ld   $fc         ;0ea4 XORW
              7680 003c  ld   $3c         ;0ea4 'Value'
              7681 002b  ld   $2b         ;0ea6 STW
              7682 0044  ld   $44         ;0ea6 'k'
              7683 0021  ld   $21         ;0ea8 LDW
              7684 006a  ld   $6a         ;0ea8 'j'
              7685 0035  ld   $35         ;0eaa BCC
              7686 0053  ld   $53         ;0eab GE
              7687 00b1  ld   $b1
              7688 0059  ld   $59         ;0ead LDI
              7689 0000  ld   $00
              768a 00b8  ld   $b8         ;0eaf SUBW
              768b 006a  ld   $6a         ;0eaf 'j'
              768c 002b  ld   $2b         ;0eb1 STW
              768d 006a  ld   $6a         ;0eb1 'j'
              768e 0021  ld   $21         ;0eb3 LDW
              768f 003c  ld   $3c         ;0eb3 'Value'
              7690 0035  ld   $35         ;0eb5 BCC
              7691 0053  ld   $53         ;0eb6 GE
              7692 00bc  ld   $bc
              7693 0059  ld   $59         ;0eb8 LDI
              7694 0000  ld   $00
              7695 00b8  ld   $b8         ;0eba SUBW
              7696 003c  ld   $3c         ;0eba 'Value'
              7697 002b  ld   $2b         ;0ebc STW
              7698 003c  ld   $3c         ;0ebc 'Value'
              7699 0035  ld   $35         ;0ebe BCC
              769a 0072  ld   $72         ;0ebf NE
              769b 00c1  ld   $c1
              769c 00cf  ld   $cf         ;0ec1 CALL
              769d 0046  ld   $46         ;0ec1 'ValueError'
              769e 0059  ld   $59         ;0ec3 LDI
              769f 0000  ld   $00
              76a0 002b  ld   $2b         ;0ec5 STW
              76a1 0040  ld   $40         ;0ec5 'i'
              76a2 002b  ld   $2b         ;0ec7 STW
              76a3 004e  ld   $4e         ;0ec7 'tmp'
              76a4 0021  ld   $21         ;0ec9 LDW
              76a5 0040  ld   $40         ;0ec9 'i'
              76a6 0099  ld   $99         ;0ecb ADDW
              76a7 0040  ld   $40         ;0ecb 'i'
              76a8 002b  ld   $2b         ;0ecd STW
              76a9 0040  ld   $40         ;0ecd 'i'
              76aa 0021  ld   $21         ;0ecf LDW
              76ab 006a  ld   $6a         ;0ecf 'j'
              76ac 0035  ld   $35         ;0ed1 BCC
              76ad 0053  ld   $53         ;0ed2 GE
              76ae 00d4  ld   $d4
              76af 0093  ld   $93         ;0ed4 INC
              76b0 0040  ld   $40         ;0ed4 'i'
              76b1 0021  ld   $21         ;0ed6 LDW
              76b2 006a  ld   $6a         ;0ed6 'j'
              76b3 0099  ld   $99         ;0ed8 ADDW
              76b4 006a  ld   $6a         ;0ed8 'j'
              76b5 002b  ld   $2b         ;0eda STW
              76b6 006a  ld   $6a         ;0eda 'j'
              76b7 0021  ld   $21         ;0edc LDW
              76b8 0040  ld   $40         ;0edc 'i'
              76b9 00b8  ld   $b8         ;0ede SUBW
              76ba 003c  ld   $3c         ;0ede 'Value'
              76bb 0035  ld   $35         ;0ee0 BCC
              76bc 0050  ld   $50         ;0ee1 LT
              76bd 00e5  ld   $e5
              76be 002b  ld   $2b         ;0ee3 STW
              76bf 0040  ld   $40         ;0ee3 'i'
              76c0 0093  ld   $93         ;0ee5 INC
              76c1 006a  ld   $6a         ;0ee5 'j'
              76c2 0021  ld   $21         ;0ee7 LDW
              76c3 004e  ld   $4e         ;0ee7 'tmp'
              76c4 00e3  ld   $e3         ;0ee9 ADDI
              76c5 0001  ld   $01
              76c6 0082  ld   $82         ;0eeb ANDI
              76c7 000f  ld   $0f
              76c8 0035  ld   $35         ;0eed BCC
              76c9 0072  ld   $72         ;0eee NE
              76ca 00c5  ld   $c5
              76cb 0021  ld   $21         ;0ef0 LDW
              76cc 0044  ld   $44         ;0ef0 'k'
              76cd 0035  ld   $35         ;0ef2 BCC
              76ce 0053  ld   $53         ;0ef3 GE
              76cf 00f8  ld   $f8
              76d0 0059  ld   $59         ;0ef5 LDI
              76d1 0000  ld   $00
              76d2 00b8  ld   $b8         ;0ef7 SUBW
              76d3 006a  ld   $6a         ;0ef7 'j'
              76d4 00ff  ld   $ff         ;0ef9 RET
              76d5 0021  ld   $21         ;0efa LDW
              76d6 006a  ld   $6a         ;0efa 'j'
              76d7 00ff  ld   $ff         ;0efc RET
              76d8 0093  ld   $93         ;0efd INC
              76d9 001b  ld   $1b
              76da 00ff  ld   $ff         ;0eff RET
              76db 000f  ld   $0f         ;| RAM segment address (high byte first)
              76dc 00a0  ld   $a0         ;|
              76dd 005e  ld   $5e         ;| Length (1..256)
              76de 002b  ld   $2b         ;0fa0 STW
              76df 003e  ld   $3e         ;0fa0 'Divide'
              76e0 00cd  ld   $cd         ;0fa2 DEF
              76e1 00c7  ld   $c7
              76e2 002b  ld   $2b         ;0fa4 STW
              76e3 004e  ld   $4e         ;0fa4 'tmp'
              76e4 0059  ld   $59         ;0fa6 LDI
              76e5 0000  ld   $00
              76e6 002b  ld   $2b         ;0fa8 STW
              76e7 006a  ld   $6a         ;0fa8 'j'
              76e8 0059  ld   $59         ;0faa LDI
              76e9 0001  ld   $01
              76ea 002b  ld   $2b         ;0fac STW
              76eb 0040  ld   $40         ;0fac 'i'
              76ec 00f8  ld   $f8         ;0fae ANDW
              76ed 004e  ld   $4e         ;0fae 'tmp'
              76ee 0035  ld   $35         ;0fb0 BCC
              76ef 003f  ld   $3f         ;0fb1 EQ
              76f0 00b7  ld   $b7
              76f1 0021  ld   $21         ;0fb3 LDW
              76f2 006a  ld   $6a         ;0fb3 'j'
              76f3 0099  ld   $99         ;0fb5 ADDW
              76f4 003c  ld   $3c         ;0fb5 'Value'
              76f5 002b  ld   $2b         ;0fb7 STW
              76f6 006a  ld   $6a         ;0fb7 'j'
              76f7 0021  ld   $21         ;0fb9 LDW
              76f8 003c  ld   $3c         ;0fb9 'Value'
              76f9 0099  ld   $99         ;0fbb ADDW
              76fa 003c  ld   $3c         ;0fbb 'Value'
              76fb fe00  bra  ac          ;+-----------------------------------+
              76fc fcfd  bra  $76fd       ;|                                   |
              76fd 1418  ld   $18,y       ;| Trampoline for page $7600 lookups |
              76fe e006  jmp  y,$06       ;|                                   |
              76ff c218  st   [$18]       ;+-----------------------------------+
              7700 002b  ld   $2b         ;0fbd STW
              7701 003c  ld   $3c         ;0fbd 'Value'
              7702 0021  ld   $21         ;0fbf LDW
              7703 0040  ld   $40         ;0fbf 'i'
              7704 0099  ld   $99         ;0fc1 ADDW
              7705 0040  ld   $40         ;0fc1 'i'
              7706 0035  ld   $35         ;0fc3 BCC
              7707 0072  ld   $72         ;0fc4 NE
              7708 00aa  ld   $aa
              7709 0021  ld   $21         ;0fc6 LDW
              770a 006a  ld   $6a         ;0fc6 'j'
              770b 00ff  ld   $ff         ;0fc8 RET
              770c 002b  ld   $2b         ;0fc9 STW
              770d 007c  ld   $7c         ;0fc9 'Multiply'
              770e 00cd  ld   $cd         ;0fcb DEF
              770f 00e6  ld   $e6
              7710 0021  ld   $21         ;0fcd LDW
              7711 0000  ld   $00
              7712 002b  ld   $2b         ;0fcf STW
              7713 0040  ld   $40         ;0fcf 'i'
              7714 0021  ld   $21         ;0fd1 LDW
              7715 0036  ld   $36         ;0fd1 'Active'
              7716 00ad  ld   $ad         ;0fd3 PEEK
              7717 0082  ld   $82         ;0fd4 ANDI
              7718 005f  ld   $5f
              7719 00e6  ld   $e6         ;0fd6 SUBI
              771a 0040  ld   $40
              771b 0035  ld   $35         ;0fd8 BCC
              771c 0050  ld   $50         ;0fd9 LT
              771d 00e4  ld   $e4
              771e 00e6  ld   $e6         ;0fdb SUBI
              771f 001b  ld   $1b
              7720 0035  ld   $35         ;0fdd BCC
              7721 0053  ld   $53         ;0fde GE
              7722 00e4  ld   $e4
              7723 0093  ld   $93         ;0fe0 INC
              7724 0036  ld   $36         ;0fe0 'Active'
              7725 00e9  ld   $e9         ;0fe2 LSLW
              7726 0099  ld   $99         ;0fe3 ADDW
              7727 0040  ld   $40         ;0fe3 'i'
              7728 00ff  ld   $ff         ;0fe5 RET
              7729 00cf  ld   $cf         ;0fe6 CALL
              772a 004a  ld   $4a         ;0fe6 'SyntaxError'
              772b 002b  ld   $2b         ;0fe8 STW
              772c 0042  ld   $42         ;0fe8 'Variable'
              772d 00cd  ld   $cd         ;0fea DEF
              772e 00f7  ld   $f7
              772f 0021  ld   $21         ;0fec LDW
              7730 0036  ld   $36         ;0fec 'Active'
              7731 00ad  ld   $ad         ;0fee PEEK
              7732 008c  ld   $8c         ;0fef XORI
              7733 0020  ld   $20
              7734 0035  ld   $35         ;0ff1 BCC
              7735 0072  ld   $72         ;0ff2 NE
              7736 00f6  ld   $f6
              7737 0093  ld   $93         ;0ff4 INC
              7738 0036  ld   $36         ;0ff4 'Active'
              7739 0090  ld   $90         ;0ff6 BRA
              773a 00ea  ld   $ea
              773b 00ff  ld   $ff         ;0ff8 RET
              773c 002b  ld   $2b         ;0ff9 STW
              773d 0034  ld   $34         ;0ff9 'Spaces'
              773e 0093  ld   $93         ;0ffb INC
              773f 001b  ld   $1b
              7740 00ff  ld   $ff         ;0ffd RET
              7741 0010  ld   $10         ;| RAM segment address (high byte first)
              7742 00a0  ld   $a0         ;|
              7743 0060  ld   $60         ;| Length (1..256)
              7744 00cd  ld   $cd         ;10a0 DEF
              7745 00fb  ld   $fb
              7746 0075  ld   $75         ;10a2 PUSH
              7747 0021  ld   $21         ;10a3 LDW
              7748 006c  ld   $6c         ;10a3 'Begin'
              7749 002b  ld   $2b         ;10a5 STW
              774a 006a  ld   $6a         ;10a5 'j'
              774b 00fc  ld   $fc         ;10a7 XORW
              774c 0048  ld   $48         ;10a7 'End'
              774d 0035  ld   $35         ;10a9 BCC
              774e 003f  ld   $3f         ;10aa EQ
              774f 00c9  ld   $c9
              7750 00cf  ld   $cf         ;10ac CALL
              7751 0058  ld   $58         ;10ac 'TestBreak'
              7752 0021  ld   $21         ;10ae LDW
              7753 006a  ld   $6a         ;10ae 'j'
              7754 00f6  ld   $f6         ;10b0 DEEK
              7755 002b  ld   $2b         ;10b1 STW
              7756 003c  ld   $3c         ;10b1 'Value'
              7757 00cf  ld   $cf         ;10b3 CALL
              7758 0076  ld   $76         ;10b3 'PrintValue'
              7759 0093  ld   $93         ;10b5 INC
              775a 006a  ld   $6a         ;10b5 'j'
              775b 0093  ld   $93         ;10b7 INC
              775c 006a  ld   $6a         ;10b7 'j'
              775d 0021  ld   $21         ;10b9 LDW
              775e 006a  ld   $6a         ;10b9 'j'
              775f 00ad  ld   $ad         ;10bb PEEK
              7760 0035  ld   $35         ;10bc BCC
              7761 003f  ld   $3f         ;10bd EQ
              7762 00c1  ld   $c1
              7763 00cf  ld   $cf         ;10bf CALL
              7764 0050  ld   $50         ;10bf 'PrintChar'
              7765 0090  ld   $90         ;10c1 BRA
              7766 00b5  ld   $b5
              7767 00cf  ld   $cf         ;10c3 CALL
              7768 005a  ld   $5a         ;10c3 'Newline'
              7769 0021  ld   $21         ;10c5 LDW
              776a 006a  ld   $6a         ;10c5 'j'
              776b 00cf  ld   $cf         ;10c7 CALL
              776c 0070  ld   $70         ;10c7 'NextBlock'
              776d 0090  ld   $90         ;10c9 BRA
              776e 00a3  ld   $a3
              776f 002b  ld   $2b         ;10cb STW
              7770 003c  ld   $3c         ;10cb 'Value'
              7771 0021  ld   $21         ;10cd LDW
              7772 0000  ld   $00
              7773 00e6  ld   $e6         ;10cf SUBI
              7774 0080  ld   $80
              7775 00e6  ld   $e6         ;10d1 SUBI
              7776 00c0  ld   $c0
              7777 00fc  ld   $fc         ;10d3 XORW
              7778 006a  ld   $6a         ;10d3 'j'
              7779 0035  ld   $35         ;10d5 BCC
              777a 003f  ld   $3f         ;10d6 EQ
              777b 00e2  ld   $e2
              777c 0021  ld   $21         ;10d8 LDW
              777d 006a  ld   $6a         ;10d8 'j'
              777e 00cf  ld   $cf         ;10da CALL
              777f 0070  ld   $70         ;10da 'NextBlock'
              7780 002b  ld   $2b         ;10dc STW
              7781 006a  ld   $6a         ;10dc 'j'
              7782 0021  ld   $21         ;10de LDW
              7783 003c  ld   $3c         ;10de 'Value'
              7784 00e3  ld   $e3         ;10e0 ADDI
              7785 0020  ld   $20
              7786 0090  ld   $90         ;10e2 BRA
              7787 00c9  ld   $c9
              7788 0021  ld   $21         ;10e4 LDW
              7789 0050  ld   $50         ;10e4 'PrintChar'
              778a 00fc  ld   $fc         ;10e6 XORW
              778b 0054  ld   $54         ;10e6 'PrintCharScreen'
              778c 0035  ld   $35         ;10e8 BCC
              778d 0072  ld   $72         ;10e9 NE
              778e 00f9  ld   $f9
              778f 00cf  ld   $cf         ;10eb CALL
              7790 0076  ld   $76         ;10eb 'PrintValue'
              7791 00cf  ld   $cf         ;10ed CALL
              7792 0052  ld   $52         ;10ed 'PrintS'
              7793 0020  ld   $20         ;10ef ' '
              7794 0062  ld   $62         ;10f0 'b'
              7795 0079  ld   $79         ;10f1 'y'
              7796 0074  ld   $74         ;10f2 't'
              7797 0065  ld   $65         ;10f3 'e'
              7798 0073  ld   $73         ;10f4 's'
              7799 0020  ld   $20         ;10f5 ' '
              779a 0066  ld   $66         ;10f6 'f'
              779b 0072  ld   $72         ;10f7 'r'
              779c 0065  ld   $65         ;10f8 'e'
              779d 0065  ld   $65         ;10f9 'e'
              779e 0000  ld   $00         ;10fa 0
              779f 0063  ld   $63         ;10fb POP
              77a0 00ff  ld   $ff         ;10fc RET
              77a1 0093  ld   $93         ;10fd INC
              77a2 001b  ld   $1b
              77a3 00ff  ld   $ff         ;10ff RET
              77a4 0011  ld   $11         ;| RAM segment address (high byte first)
              77a5 00a0  ld   $a0         ;|
              77a6 0060  ld   $60         ;| Length (1..256)
              77a7 002b  ld   $2b         ;11a0 STW
              77a8 007e  ld   $7e         ;11a0 'List'
              77a9 00cd  ld   $cd         ;11a2 DEF
              77aa 00c1  ld   $c1
              77ab 0075  ld   $75         ;11a4 PUSH
              77ac 002b  ld   $2b         ;11a5 STW
              77ad 0040  ld   $40         ;11a5 'i'
              77ae 0021  ld   $21         ;11a7 LDW
              77af 003c  ld   $3c         ;11a7 'Value'
              77b0 00b8  ld   $b8         ;11a9 SUBW
              77b1 0040  ld   $40         ;11a9 'i'
              77b2 0035  ld   $35         ;11ab BCC
              77b3 0050  ld   $50         ;11ac LT
              77b4 00b2  ld   $b2
              77b5 002b  ld   $2b         ;11ae STW
              77b6 003c  ld   $3c         ;11ae 'Value'
              77b7 0093  ld   $93         ;11b0 INC
              77b8 0044  ld   $44         ;11b0 'k'
              77b9 0090  ld   $90         ;11b2 BRA
              77ba 00a7  ld   $a7
              77bb 0021  ld   $21         ;11b4 LDW
              77bc 0044  ld   $44         ;11b4 'k'
              77bd 0035  ld   $35         ;11b6 BCC
              77be 003f  ld   $3f         ;11b7 EQ
              77bf 00bf  ld   $bf
              77c0 0088  ld   $88         ;11b9 ORI
              77c1 0030  ld   $30
              77c2 00cf  ld   $cf         ;11bb CALL
              77c3 0050  ld   $50         ;11bb 'PrintChar'
              77c4 0059  ld   $59         ;11bd LDI
              77c5 0030  ld   $30
              77c6 002b  ld   $2b         ;11bf STW
              77c7 0044  ld   $44         ;11bf 'k'
              77c8 0063  ld   $63         ;11c1 POP
              77c9 00ff  ld   $ff         ;11c2 RET
              77ca 002b  ld   $2b         ;11c3 STW
              77cb 0074  ld   $74         ;11c3 'PrintDigit'
              77cc 00cd  ld   $cd         ;11c5 DEF
              77cd 00f1  ld   $f1
              77ce 0075  ld   $75         ;11c7 PUSH
              77cf 0059  ld   $59         ;11c8 LDI
              77d0 0000  ld   $00
              77d1 002b  ld   $2b         ;11ca STW
              77d2 0044  ld   $44         ;11ca 'k'
              77d3 00cf  ld   $cf         ;11cc CALL
              77d4 0038  ld   $38         ;11cc 'Keyword'
              77d5 003c  ld   $3c         ;11ce '<'
              77d6 0000  ld   $00         ;11cf 0
              77d7 0035  ld   $35         ;11d0 BCC
              77d8 003f  ld   $3f         ;11d1 EQ
              77d9 00d3  ld   $d3
              77da 0093  ld   $93         ;11d3 INC
              77db 0044  ld   $44         ;11d3 'k'
              77dc 00cf  ld   $cf         ;11d5 CALL
              77dd 0038  ld   $38         ;11d5 'Keyword'
              77de 003e  ld   $3e         ;11d7 '>'
              77df 0000  ld   $00         ;11d8 0
              77e0 0035  ld   $35         ;11d9 BCC
              77e1 003f  ld   $3f         ;11da EQ
              77e2 00e0  ld   $e0
              77e3 0021  ld   $21         ;11dc LDW
              77e4 0044  ld   $44         ;11dc 'k'
              77e5 00e3  ld   $e3         ;11de ADDI
              77e6 0004  ld   $04
              77e7 002b  ld   $2b         ;11e0 STW
              77e8 0044  ld   $44         ;11e0 'k'
              77e9 00cf  ld   $cf         ;11e2 CALL
              77ea 0038  ld   $38         ;11e2 'Keyword'
              77eb 003d  ld   $3d         ;11e4 '='
              77ec 0000  ld   $00         ;11e5 0
              77ed 0035  ld   $35         ;11e6 BCC
              77ee 003f  ld   $3f         ;11e7 EQ
              77ef 00ed  ld   $ed
              77f0 0021  ld   $21         ;11e9 LDW
              77f1 0044  ld   $44         ;11e9 'k'
              77f2 00e3  ld   $e3         ;11eb ADDI
              77f3 0002  ld   $02
              77f4 002b  ld   $2b         ;11ed STW
              77f5 0044  ld   $44         ;11ed 'k'
              77f6 0021  ld   $21         ;11ef LDW
              77f7 0044  ld   $44         ;11ef 'k'
              77f8 0063  ld   $63         ;11f1 POP
              77f9 00ff  ld   $ff         ;11f2 RET
              77fa 002b  ld   $2b         ;11f3 STW
              77fb fe00  bra  ac          ;+-----------------------------------+
              77fc fcfd  bra  $77fd       ;|                                   |
              77fd 1418  ld   $18,y       ;| Trampoline for page $7700 lookups |
              77fe e006  jmp  y,$06       ;|                                   |
              77ff c218  st   [$18]       ;+-----------------------------------+
              7800 0064  ld   $64         ;11f3 'RelOp'
              7801 0011  ld   $11         ;11f5 LDWI
              7802 00a0  ld   $a0
              7803 001b  ld   $1b
              7804 00f6  ld   $f6         ;11f8 DEEK
              7805 002b  ld   $2b         ;11f9 STW
              7806 0048  ld   $48         ;11f9 'End'
              7807 00e3  ld   $e3         ;11fb ADDI
              7808 0002  ld   $02
              7809 0093  ld   $93         ;11fd INC
              780a 001b  ld   $1b
              780b 00ff  ld   $ff         ;11ff RET
              780c 0012  ld   $12         ;| RAM segment address (high byte first)
              780d 00a0  ld   $a0         ;|
              780e 005d  ld   $5d         ;| Length (1..256)
              780f 002b  ld   $2b         ;12a0 STW
              7810 0036  ld   $36         ;12a0 'Active'
              7811 00cd  ld   $cd         ;12a2 DEF
              7812 00f7  ld   $f7
              7813 0021  ld   $21         ;12a4 LDW
              7814 001a  ld   $1a
              7815 002b  ld   $2b         ;12a6 STW
              7816 004e  ld   $4e         ;12a6 'tmp'
              7817 001a  ld   $1a         ;12a8 LD
              7818 0030  ld   $30         ;12a8 'Pos'
              7819 00e6  ld   $e6         ;12aa SUBI
              781a 0002  ld   $02
              781b 0035  ld   $35         ;12ac BCC
              781c 0056  ld   $56         ;12ad LE
              781d 00af  ld   $af
              781e 00cf  ld   $cf         ;12af CALL
              781f 005a  ld   $5a         ;12af 'Newline'
              7820 0059  ld   $59         ;12b1 LDI
              7821 0000  ld   $00
              7822 005e  ld   $5e         ;12b3 ST
              7823 001c  ld   $1c
              7824 0021  ld   $21         ;12b5 LDW
              7825 004e  ld   $4e         ;12b5 'tmp'
              7826 00ad  ld   $ad         ;12b7 PEEK
              7827 0035  ld   $35         ;12b8 BCC
              7828 003f  ld   $3f         ;12b9 EQ
              7829 00e3  ld   $e3
              782a 0059  ld   $59         ;12bb LDI
              782b 003f  ld   $3f
              782c 00cf  ld   $cf         ;12bd CALL
              782d 0050  ld   $50         ;12bd 'PrintChar'
              782e 0021  ld   $21         ;12bf LDW
              782f 004e  ld   $4e         ;12bf 'tmp'
              7830 00ad  ld   $ad         ;12c1 PEEK
              7831 0093  ld   $93         ;12c2 INC
              7832 004e  ld   $4e         ;12c2 'tmp'
              7833 0035  ld   $35         ;12c4 BCC
              7834 0072  ld   $72         ;12c5 NE
              7835 00bb  ld   $bb
              7836 00cf  ld   $cf         ;12c7 CALL
              7837 0052  ld   $52         ;12c7 'PrintS'
              7838 0020  ld   $20         ;12c9 ' '
              7839 0065  ld   $65         ;12ca 'e'
              783a 0072  ld   $72         ;12cb 'r'
              783b 0072  ld   $72         ;12cc 'r'
              783c 006f  ld   $6f         ;12cd 'o'
              783d 0072  ld   $72         ;12ce 'r'
              783e 0000  ld   $00         ;12cf 0
              783f 00e6  ld   $e6         ;12d0 SUBI
              7840 0020  ld   $20
              7841 00f8  ld   $f8         ;12d2 ANDW
              7842 0036  ld   $36         ;12d2 'Active'
              7843 00f6  ld   $f6         ;12d4 DEEK
              7844 0035  ld   $35         ;12d5 BCC
              7845 003f  ld   $3f         ;12d6 EQ
              7846 00e1  ld   $e1
              7847 002b  ld   $2b         ;12d8 STW
              7848 003c  ld   $3c         ;12d8 'Value'
              7849 00cf  ld   $cf         ;12da CALL
              784a 0052  ld   $52         ;12da 'PrintS'
              784b 0020  ld   $20         ;12dc ' '
              784c 0069  ld   $69         ;12dd 'i'
              784d 006e  ld   $6e         ;12de 'n'
              784e 0020  ld   $20         ;12df ' '
              784f 0000  ld   $00         ;12e0 0
              7850 00cf  ld   $cf         ;12e1 CALL
              7851 0076  ld   $76         ;12e1 'PrintValue'
              7852 00cf  ld   $cf         ;12e3 CALL
              7853 005a  ld   $5a         ;12e3 'Newline'
              7854 00cf  ld   $cf         ;12e5 CALL
              7855 0052  ld   $52         ;12e5 'PrintS'
              7856 004f  ld   $4f         ;12e7 'O'
              7857 006b  ld   $6b         ;12e8 'k'
              7858 0000  ld   $00         ;12e9 0
              7859 00cf  ld   $cf         ;12ea CALL
              785a 005a  ld   $5a         ;12ea 'Newline'
              785b 0059  ld   $59         ;12ec LDI
              785c 0000  ld   $00
              785d 00cf  ld   $cf         ;12ee CALL
              785e 005c  ld   $5c         ;12ee 'GetLine'
              785f 0035  ld   $35         ;12f0 BCC
              7860 003f  ld   $3f         ;12f1 EQ
              7861 00ea  ld   $ea
              7862 00cf  ld   $cf         ;12f3 CALL
              7863 0072  ld   $72         ;12f3 'Insert'
              7864 0035  ld   $35         ;12f5 BCC
              7865 004d  ld   $4d         ;12f6 GT
              7866 00ea  ld   $ea
              7867 0011  ld   $11         ;12f8 785
              7868 002b  ld   $2b         ;12f9 STW
              7869 0056  ld   $56         ;12f9 'Prompt'
              786a 00cf  ld   $cf         ;12fb CALL
              786b 0066  ld   $66         ;12fb 'Statements'
              786c 0013  ld   $13         ;| RAM segment address (high byte first)
              786d 00a0  ld   $a0         ;|
              786e 0059  ld   $59         ;| Length (1..256)
              786f 0021  ld   $21         ;13a0 LDW
              7870 0036  ld   $36         ;13a0 'Active'
              7871 00ad  ld   $ad         ;13a2 PEEK
              7872 0035  ld   $35         ;13a3 BCC
              7873 003f  ld   $3f         ;13a4 EQ
              7874 00f3  ld   $f3
              7875 008c  ld   $8c         ;13a6 XORI
              7876 003a  ld   $3a
              7877 0035  ld   $35         ;13a8 BCC
              7878 003f  ld   $3f         ;13a9 EQ
              7879 00f3  ld   $f3
              787a 0021  ld   $21         ;13ab LDW
              787b 0036  ld   $36         ;13ab 'Active'
              787c 00ad  ld   $ad         ;13ad PEEK
              787d 0035  ld   $35         ;13ae BCC
              787e 003f  ld   $3f         ;13af EQ
              787f 00f1  ld   $f1
              7880 008c  ld   $8c         ;13b1 XORI
              7881 003a  ld   $3a
              7882 0035  ld   $35         ;13b3 BCC
              7883 003f  ld   $3f         ;13b4 EQ
              7884 00f1  ld   $f1
              7885 008c  ld   $8c         ;13b6 XORI
              7886 0018  ld   $18
              7887 0035  ld   $35         ;13b8 BCC
              7888 0072  ld   $72         ;13b9 NE
              7889 00ce  ld   $ce
              788a 0093  ld   $93         ;13bb INC
              788b 0036  ld   $36         ;13bb 'Active'
              788c 00cf  ld   $cf         ;13bd CALL
              788d 0038  ld   $38         ;13bd 'Keyword'
              788e 0022  ld   $22         ;13bf 34
              788f 0000  ld   $00         ;13c0 0
              7890 0035  ld   $35         ;13c1 BCC
              7891 0072  ld   $72         ;13c2 NE
              7892 00cc  ld   $cc
              7893 0021  ld   $21         ;13c4 LDW
              7894 0036  ld   $36         ;13c4 'Active'
              7895 00ad  ld   $ad         ;13c6 PEEK
              7896 0035  ld   $35         ;13c7 BCC
              7897 003f  ld   $3f         ;13c8 EQ
              7898 00cc  ld   $cc
              7899 00cf  ld   $cf         ;13ca CALL
              789a 0050  ld   $50         ;13ca 'PrintChar'
              789b 0090  ld   $90         ;13cc BRA
              789c 00b9  ld   $b9
              789d 0090  ld   $90         ;13ce BRA
              789e 00d2  ld   $d2
              789f 00cf  ld   $cf         ;13d0 CALL
              78a0 003a  ld   $3a         ;13d0 'Expression'
              78a1 00cf  ld   $cf         ;13d2 CALL
              78a2 0076  ld   $76         ;13d2 'PrintValue'
              78a3 00cf  ld   $cf         ;13d4 CALL
              78a4 0038  ld   $38         ;13d4 'Keyword'
              78a5 002c  ld   $2c         ;13d6 44
              78a6 0000  ld   $00         ;13d7 0
              78a7 0035  ld   $35         ;13d8 BCC
              78a8 003f  ld   $3f         ;13d9 EQ
              78a9 00e8  ld   $e8
              78aa 0059  ld   $59         ;13db LDI
              78ab 0020  ld   $20
              78ac 00cf  ld   $cf         ;13dd CALL
              78ad 0050  ld   $50         ;13dd 'PrintChar'
              78ae 001a  ld   $1a         ;13df LD
              78af 0030  ld   $30         ;13df 'Pos'
              78b0 00e6  ld   $e6         ;13e1 SUBI
              78b1 0002  ld   $02
              78b2 0082  ld   $82         ;13e3 ANDI
              78b3 0007  ld   $07
              78b4 0035  ld   $35         ;13e5 BCC
              78b5 0072  ld   $72         ;13e6 NE
              78b6 00d9  ld   $d9
              78b7 0090  ld   $90         ;13e8 BRA
              78b8 00a9  ld   $a9
              78b9 00cf  ld   $cf         ;13ea CALL
              78ba 0038  ld   $38         ;13ea 'Keyword'
              78bb 003b  ld   $3b         ;13ec 59
              78bc 0000  ld   $00         ;13ed 0
              78bd 0035  ld   $35         ;13ee BCC
              78be 0072  ld   $72         ;13ef NE
              78bf 00a9  ld   $a9
              78c0 00cf  ld   $cf         ;13f1 CALL
              78c1 005a  ld   $5a         ;13f1 'Newline'
              78c2 0090  ld   $90         ;13f3 BRA
              78c3 00f5  ld   $f5
              78c4 00cf  ld   $cf         ;13f5 CALL
              78c5 005a  ld   $5a         ;13f5 'Newline'
              78c6 00cf  ld   $cf         ;13f7 CALL
              78c7 0062  ld   $62         ;13f7 'EndOfLine'
              78c8 0014  ld   $14         ;| RAM segment address (high byte first)
              78c9 00a0  ld   $a0         ;|
              78ca 005f  ld   $5f         ;| Length (1..256)
              78cb 00cf  ld   $cf         ;14a0 CALL
              78cc 0038  ld   $38         ;14a0 'Keyword'
              78cd 003f  ld   $3f         ;14a2 '?'
              78ce 0000  ld   $00         ;14a3 0
              78cf 0035  ld   $35         ;14a4 BCC
              78d0 0072  ld   $72         ;14a5 NE
              78d1 00ad  ld   $ad
              78d2 00cf  ld   $cf         ;14a7 CALL
              78d3 0038  ld   $38         ;14a7 'Keyword'
              78d4 0070  ld   $70         ;14a9 'p'
              78d5 0072  ld   $72         ;14aa 'r'
              78d6 0069  ld   $69         ;14ab 'i'
              78d7 006e  ld   $6e         ;14ac 'n'
              78d8 0074  ld   $74         ;14ad 't'
              78d9 0000  ld   $00         ;14ae 0
              78da 0035  ld   $35         ;14af BCC
              78db 003f  ld   $3f         ;14b0 EQ
              78dc 00b5  ld   $b5
              78dd 0011  ld   $11         ;14b2 LDWI
              78de 00a0  ld   $a0
              78df 0013  ld   $13
              78e0 00cf  ld   $cf         ;14b5 CALL
              78e1 0018  ld   $18         ;14b5 vAC
              78e2 00cf  ld   $cf         ;14b7 CALL
              78e3 0038  ld   $38         ;14b7 'Keyword'
              78e4 0069  ld   $69         ;14b9 'i'
              78e5 006e  ld   $6e         ;14ba 'n'
              78e6 0070  ld   $70         ;14bb 'p'
              78e7 0075  ld   $75         ;14bc 'u'
              78e8 0074  ld   $74         ;14bd 't'
              78e9 0000  ld   $00         ;14be 0
              78ea 0035  ld   $35         ;14bf BCC
              78eb 003f  ld   $3f         ;14c0 EQ
              78ec 00f8  ld   $f8
              78ed 0021  ld   $21         ;14c2 LDW
              78ee 0036  ld   $36         ;14c2 'Active'
              78ef 00ad  ld   $ad         ;14c4 PEEK
              78f0 00cf  ld   $cf         ;14c5 CALL
              78f1 0050  ld   $50         ;14c5 'PrintChar'
              78f2 00cf  ld   $cf         ;14c7 CALL
              78f3 0042  ld   $42         ;14c7 'Variable'
              78f4 002b  ld   $2b         ;14c9 STW
              78f5 0068  ld   $68         ;14c9 'Address'
              78f6 00cf  ld   $cf         ;14cb CALL
              78f7 0034  ld   $34         ;14cb 'Spaces'
              78f8 00df  ld   $df         ;14cd ALLOC
              78f9 00fc  ld   $fc
              78fa 0021  ld   $21         ;14cf LDW
              78fb fe00  bra  ac          ;+-----------------------------------+
              78fc fcfd  bra  $78fd       ;|                                   |
              78fd 1418  ld   $18,y       ;| Trampoline for page $7800 lookups |
              78fe e006  jmp  y,$06       ;|                                   |
              78ff c218  st   [$18]       ;+-----------------------------------+
              7900 0036  ld   $36         ;14cf 'Active'
              7901 00ec  ld   $ec         ;14d1 STLW
              7902 0002  ld   $02
              7903 0088  ld   $88         ;14d3 ORI
              7904 001f  ld   $1f
              7905 00e6  ld   $e6         ;14d5 SUBI
              7906 001f  ld   $1f
              7907 00f6  ld   $f6         ;14d7 DEEK
              7908 00ec  ld   $ec         ;14d8 STLW
              7909 0000  ld   $00
              790a 0059  ld   $59         ;14da LDI
              790b 003f  ld   $3f
              790c 00cf  ld   $cf         ;14dc CALL
              790d 0050  ld   $50         ;14dc 'PrintChar'
              790e 00cf  ld   $cf         ;14de CALL
              790f 005a  ld   $5a         ;14de 'Newline'
              7910 00ee  ld   $ee         ;14e0 LDLW
              7911 0000  ld   $00
              7912 00cf  ld   $cf         ;14e2 CALL
              7913 005c  ld   $5c         ;14e2 'GetLine'
              7914 0035  ld   $35         ;14e4 BCC
              7915 003f  ld   $3f         ;14e5 EQ
              7916 00d8  ld   $d8
              7917 00cf  ld   $cf         ;14e7 CALL
              7918 003a  ld   $3a         ;14e7 'Expression'
              7919 00f3  ld   $f3         ;14e9 DOKE
              791a 0068  ld   $68         ;14e9 'Address'
              791b 00ee  ld   $ee         ;14eb LDLW
              791c 0002  ld   $02
              791d 002b  ld   $2b         ;14ed STW
              791e 0036  ld   $36         ;14ed 'Active'
              791f 00df  ld   $df         ;14ef ALLOC
              7920 0004  ld   $04
              7921 00cf  ld   $cf         ;14f1 CALL
              7922 0038  ld   $38         ;14f1 'Keyword'
              7923 002c  ld   $2c         ;14f3 ','
              7924 0000  ld   $00         ;14f4 0
              7925 0035  ld   $35         ;14f5 BCC
              7926 0072  ld   $72         ;14f6 NE
              7927 00c0  ld   $c0
              7928 00cf  ld   $cf         ;14f8 CALL
              7929 0062  ld   $62         ;14f8 'EndOfLine'
              792a 0011  ld   $11         ;14fa LDWI
              792b 00a0  ld   $a0
              792c 0015  ld   $15
              792d 00cf  ld   $cf         ;14fd CALL
              792e 0018  ld   $18         ;14fd vAC
              792f 0015  ld   $15         ;| RAM segment address (high byte first)
              7930 00a0  ld   $a0         ;|
              7931 0058  ld   $58         ;| Length (1..256)
              7932 00cf  ld   $cf         ;15a0 CALL
              7933 0038  ld   $38         ;15a0 'Keyword'
              7934 0063  ld   $63         ;15a2 'c'
              7935 006c  ld   $6c         ;15a3 'l'
              7936 0073  ld   $73         ;15a4 's'
              7937 0000  ld   $00         ;15a5 0
              7938 0035  ld   $35         ;15a6 BCC
              7939 003f  ld   $3f         ;15a7 EQ
              793a 00cb  ld   $cb
              793b 0011  ld   $11         ;15a9 LDWI
              793c 0000  ld   $00
              793d 0001  ld   $01
              793e 00ad  ld   $ad         ;15ac PEEK
              793f 005e  ld   $5e         ;15ad ST
              7940 0031  ld   $31         ;15ad 'Pos'+1
              7941 0059  ld   $59         ;15af LDI
              7942 000e  ld   $0e
              7943 002b  ld   $2b         ;15b1 STW
              7944 006a  ld   $6a         ;15b1 'j'
              7945 00cf  ld   $cf         ;15b3 CALL
              7946 005a  ld   $5a         ;15b3 'Newline'
              7947 0021  ld   $21         ;15b5 LDW
              7948 006a  ld   $6a         ;15b5 'j'
              7949 00e6  ld   $e6         ;15b7 SUBI
              794a 0001  ld   $01
              794b 0035  ld   $35         ;15b9 BCC
              794c 004d  ld   $4d         ;15ba GT
              794d 00af  ld   $af
              794e 00cf  ld   $cf         ;15bc CALL
              794f 005a  ld   $5a         ;15bc 'Newline'
              7950 0011  ld   $11         ;15be LDWI
              7951 0000  ld   $00
              7952 0001  ld   $01
              7953 00ad  ld   $ad         ;15c1 PEEK
              7954 008c  ld   $8c         ;15c2 XORI
              7955 0008  ld   $08
              7956 0035  ld   $35         ;15c4 BCC
              7957 0072  ld   $72         ;15c5 NE
              7958 00ba  ld   $ba
              7959 0059  ld   $59         ;15c7 LDI
              795a 0008  ld   $08
              795b 005e  ld   $5e         ;15c9 ST
              795c 0031  ld   $31         ;15c9 'Pos'+1
              795d 00cf  ld   $cf         ;15cb CALL
              795e 0062  ld   $62         ;15cb 'EndOfLine'
              795f 00cf  ld   $cf         ;15cd CALL
              7960 0038  ld   $38         ;15cd 'Keyword'
              7961 006c  ld   $6c         ;15cf 'l'
              7962 0069  ld   $69         ;15d0 'i'
              7963 0073  ld   $73         ;15d1 's'
              7964 0074  ld   $74         ;15d2 't'
              7965 0000  ld   $00         ;15d3 0
              7966 0035  ld   $35         ;15d4 BCC
              7967 003f  ld   $3f         ;15d5 EQ
              7968 00d9  ld   $d9
              7969 00cf  ld   $cf         ;15d7 CALL
              796a 007e  ld   $7e         ;15d7 'List'
              796b 00cf  ld   $cf         ;15d9 CALL
              796c 0062  ld   $62         ;15d9 'EndOfLine'
              796d 00cf  ld   $cf         ;15db CALL
              796e 0038  ld   $38         ;15db 'Keyword'
              796f 0073  ld   $73         ;15dd 's'
              7970 0061  ld   $61         ;15de 'a'
              7971 0076  ld   $76         ;15df 'v'
              7972 0065  ld   $65         ;15e0 'e'
              7973 0000  ld   $00         ;15e1 0
              7974 0035  ld   $35         ;15e2 BCC
              7975 003f  ld   $3f         ;15e3 EQ
              7976 00f1  ld   $f1
              7977 001a  ld   $1a         ;15e5 LD
              7978 0021  ld   $21
              7979 00e6  ld   $e6         ;15e7 SUBI
              797a 0028  ld   $28
              797b 0035  ld   $35         ;15e9 BCC
              797c 0053  ld   $53         ;15ea GE
              797d 00ec  ld   $ec
              797e 00cf  ld   $cf         ;15ec CALL
              797f 0046  ld   $46         ;15ec 'ValueError'
              7980 0011  ld   $11         ;15ee LDWI
              7981 00a0  ld   $a0
              7982 0017  ld   $17
              7983 00cf  ld   $cf         ;15f1 CALL
              7984 0018  ld   $18         ;15f1 vAC
              7985 0011  ld   $11         ;15f3 LDWI
              7986 00eb  ld   $eb
              7987 000d  ld   $0d
              7988 00cf  ld   $cf         ;15f6 CALL
              7989 0018  ld   $18         ;15f6 vAC
              798a 0016  ld   $16         ;| RAM segment address (high byte first)
              798b 00a0  ld   $a0         ;|
              798c 0060  ld   $60         ;| Length (1..256)
              798d 00cf  ld   $cf         ;16a0 CALL
              798e 0038  ld   $38         ;16a0 'Keyword'
              798f 006e  ld   $6e         ;16a2 'n'
              7990 0065  ld   $65         ;16a3 'e'
              7991 0077  ld   $77         ;16a4 'w'
              7992 0000  ld   $00         ;16a5 0
              7993 0035  ld   $35         ;16a6 BCC
              7994 003f  ld   $3f         ;16a7 EQ
              7995 00b0  ld   $b0
              7996 00cf  ld   $cf         ;16a9 CALL
              7997 0078  ld   $78         ;16a9 'Clear'
              7998 002b  ld   $2b         ;16ab STW
              7999 0048  ld   $48         ;16ab 'End'
              799a 00cf  ld   $cf         ;16ad CALL
              799b 007e  ld   $7e         ;16ad 'List'
              799c 00cf  ld   $cf         ;16af CALL
              799d 0056  ld   $56         ;16af 'Prompt'
              799e 0000  ld   $00         ;16b1 0
              799f 00cf  ld   $cf         ;16b2 CALL
              79a0 0038  ld   $38         ;16b2 'Keyword'
              79a1 006c  ld   $6c         ;16b4 'l'
              79a2 0065  ld   $65         ;16b5 'e'
              79a3 0074  ld   $74         ;16b6 't'
              79a4 0000  ld   $00         ;16b7 0
              79a5 00cf  ld   $cf         ;16b8 CALL
              79a6 0042  ld   $42         ;16b8 'Variable'
              79a7 002b  ld   $2b         ;16ba STW
              79a8 0068  ld   $68         ;16ba 'Address'
              79a9 00cf  ld   $cf         ;16bc CALL
              79aa 0034  ld   $34         ;16bc 'Spaces'
              79ab 00cf  ld   $cf         ;16be CALL
              79ac 0038  ld   $38         ;16be 'Keyword'
              79ad 0028  ld   $28         ;16c0 40
              79ae 0000  ld   $00         ;16c1 0
              79af 0035  ld   $35         ;16c2 BCC
              79b0 003f  ld   $3f         ;16c3 EQ
              79b1 00ef  ld   $ef
              79b2 00cf  ld   $cf         ;16c5 CALL
              79b3 003a  ld   $3a         ;16c5 'Expression'
              79b4 0035  ld   $35         ;16c7 BCC
              79b5 0053  ld   $53         ;16c8 GE
              79b6 00ca  ld   $ca
              79b7 00cf  ld   $cf         ;16ca CALL
              79b8 0046  ld   $46         ;16ca 'ValueError'
              79b9 001a  ld   $1a         ;16cc LD
              79ba 0069  ld   $69         ;16cc 'Address'+1
              79bb 00b8  ld   $b8         ;16ce SUBW
              79bc 003c  ld   $3c         ;16ce 'Value'
              79bd 00e6  ld   $e6         ;16d0 SUBI
              79be 0002  ld   $02
              79bf 005e  ld   $5e         ;16d2 ST
              79c0 0069  ld   $69         ;16d2 'Address'+1
              79c1 0021  ld   $21         ;16d4 LDW
              79c2 0048  ld   $48         ;16d4 'End'
              79c3 00fc  ld   $fc         ;16d6 XORW
              79c4 0068  ld   $68         ;16d6 'Address'
              79c5 0035  ld   $35         ;16d8 BCC
              79c6 0053  ld   $53         ;16d9 GE
              79c7 00dd  ld   $dd
              79c8 0021  ld   $21         ;16db LDW
              79c9 0048  ld   $48         ;16db 'End'
              79ca 0090  ld   $90         ;16dd BRA
              79cb 00e1  ld   $e1
              79cc 0021  ld   $21         ;16df LDW
              79cd 0068  ld   $68         ;16df 'Address'
              79ce 00b8  ld   $b8         ;16e1 SUBW
              79cf 0048  ld   $48         ;16e1 'End'
              79d0 0035  ld   $35         ;16e3 BCC
              79d1 0053  ld   $53         ;16e4 GE
              79d2 00e6  ld   $e6
              79d3 00cf  ld   $cf         ;16e6 CALL
              79d4 0046  ld   $46         ;16e6 'ValueError'
              79d5 00cf  ld   $cf         ;16e8 CALL
              79d6 0038  ld   $38         ;16e8 'Keyword'
              79d7 0029  ld   $29         ;16ea 41
              79d8 0000  ld   $00         ;16eb 0
              79d9 0035  ld   $35         ;16ec BCC
              79da 0072  ld   $72         ;16ed NE
              79db 00ef  ld   $ef
              79dc 00cf  ld   $cf         ;16ef CALL
              79dd 004a  ld   $4a         ;16ef 'SyntaxError'
              79de 00cf  ld   $cf         ;16f1 CALL
              79df 0038  ld   $38         ;16f1 'Keyword'
              79e0 003d  ld   $3d         ;16f3 '='
              79e1 0000  ld   $00         ;16f4 0
              79e2 0035  ld   $35         ;16f5 BCC
              79e3 0072  ld   $72         ;16f6 NE
              79e4 00f8  ld   $f8
              79e5 00cf  ld   $cf         ;16f8 CALL
              79e6 004a  ld   $4a         ;16f8 'SyntaxError'
              79e7 00cf  ld   $cf         ;16fa CALL
              79e8 003a  ld   $3a         ;16fa 'Expression'
              79e9 00f3  ld   $f3         ;16fc DOKE
              79ea 0068  ld   $68         ;16fc 'Address'
              79eb 00cf  ld   $cf         ;16fe CALL
              79ec 0062  ld   $62         ;16fe 'EndOfLine'
              79ed 0017  ld   $17         ;| RAM segment address (high byte first)
              79ee 00a0  ld   $a0         ;|
              79ef 005f  ld   $5f         ;| Length (1..256)
              79f0 0021  ld   $21         ;17a0 LDW
              79f1 0000  ld   $00
              79f2 005e  ld   $5e         ;17a2 ST
              79f3 0027  ld   $27
              79f4 00e6  ld   $e6         ;17a4 SUBI
              79f5 0060  ld   $60
              79f6 002b  ld   $2b         ;17a6 STW
              79f7 0068  ld   $68         ;17a6 'Address'
              79f8 00cd  ld   $cd         ;17a8 DEF
              79f9 00e8  ld   $e8
              79fa 0075  ld   $75         ;17aa PUSH
              79fb fe00  bra  ac          ;+-----------------------------------+
              79fc fcfd  bra  $79fd       ;|                                   |
              79fd 1418  ld   $18,y       ;| Trampoline for page $7900 lookups |
              79fe e006  jmp  y,$06       ;|                                   |
              79ff c218  st   [$18]       ;+-----------------------------------+
              7a00 002b  ld   $2b         ;17ab STW
              7a01 0044  ld   $44         ;17ab 'k'
              7a02 001a  ld   $1a         ;17ad LD
              7a03 0027  ld   $27
              7a04 00e3  ld   $e3         ;17af ADDI
              7a05 0008  ld   $08
              7a06 005e  ld   $5e         ;17b1 ST
              7a07 0027  ld   $27
              7a08 001a  ld   $1a         ;17b3 LD
              7a09 0030  ld   $30         ;17b3 'Pos'
              7a0a 00e6  ld   $e6         ;17b5 SUBI
              7a0b 0006  ld   $06
              7a0c 0035  ld   $35         ;17b7 BCC
              7a0d 0053  ld   $53         ;17b8 GE
              7a0e 00de  ld   $de
              7a0f 0059  ld   $59         ;17ba LDI
              7a10 000a  ld   $0a
              7a11 00f0  ld   $f0         ;17bc POKE
              7a12 0068  ld   $68         ;17bc 'Address'
              7a13 0021  ld   $21         ;17be LDW
              7a14 0068  ld   $68         ;17be 'Address'
              7a15 0088  ld   $88         ;17c0 ORI
              7a16 001f  ld   $1f
              7a17 008c  ld   $8c         ;17c2 XORI
              7a18 001f  ld   $1f
              7a19 002b  ld   $2b         ;17c4 STW
              7a1a 0068  ld   $68         ;17c4 'Address'
              7a1b 002b  ld   $2b         ;17c6 STW
              7a1c 0024  ld   $24
              7a1d 0059  ld   $59         ;17c8 LDI
              7a1e 0001  ld   $01
              7a1f 005e  ld   $5e         ;17ca ST
              7a20 0026  ld   $26
              7a21 0011  ld   $11         ;17cc LDWI
              7a22 0006  ld   $06
              7a23 000b  ld   $0b
              7a24 002b  ld   $2b         ;17cf STW
              7a25 0022  ld   $22         ;17cf '_sysFn'
              7a26 00b4  ld   $b4         ;17d1 SYS
              7a27 00e7  ld   $e7
              7a28 0035  ld   $35         ;17d3 BCC
              7a29 003f  ld   $3f         ;17d4 EQ
              7a2a 00da  ld   $da
              7a2b 0059  ld   $59         ;17d6 LDI
              7a2c 0003  ld   $03
              7a2d 005e  ld   $5e         ;17d8 ST
              7a2e 000f  ld   $0f
              7a2f 00cf  ld   $cf         ;17da CALL
              7a30 0058  ld   $58         ;17da 'TestBreak'
              7a31 0059  ld   $59         ;17dc LDI
              7a32 0008  ld   $08
              7a33 005e  ld   $5e         ;17de ST
              7a34 0027  ld   $27
              7a35 0021  ld   $21         ;17e0 LDW
              7a36 0044  ld   $44         ;17e0 'k'
              7a37 00f0  ld   $f0         ;17e2 POKE
              7a38 0068  ld   $68         ;17e2 'Address'
              7a39 0093  ld   $93         ;17e4 INC
              7a3a 0068  ld   $68         ;17e4 'Address'
              7a3b 00cf  ld   $cf         ;17e6 CALL
              7a3c 0054  ld   $54         ;17e6 'PrintCharScreen'
              7a3d 0063  ld   $63         ;17e8 POP
              7a3e 00ff  ld   $ff         ;17e9 RET
              7a3f 002b  ld   $2b         ;17ea STW
              7a40 0050  ld   $50         ;17ea 'PrintChar'
              7a41 001a  ld   $1a         ;17ec LD
              7a42 000f  ld   $0f
              7a43 008c  ld   $8c         ;17ee XORI
              7a44 00ff  ld   $ff
              7a45 0035  ld   $35         ;17f0 BCC
              7a46 0072  ld   $72         ;17f1 NE
              7a47 00ea  ld   $ea
              7a48 00cf  ld   $cf         ;17f3 CALL
              7a49 007e  ld   $7e         ;17f3 'List'
              7a4a 0059  ld   $59         ;17f5 LDI
              7a4b 0020  ld   $20
              7a4c 00cf  ld   $cf         ;17f7 CALL
              7a4d 0050  ld   $50         ;17f7 'PrintChar'
              7a4e 0021  ld   $21         ;17f9 LDW
              7a4f 0054  ld   $54         ;17f9 'PrintCharScreen'
              7a50 002b  ld   $2b         ;17fb STW
              7a51 0050  ld   $50         ;17fb 'PrintChar'
              7a52 00cf  ld   $cf         ;17fd CALL
              7a53 0062  ld   $62         ;17fd 'EndOfLine'
              7a54 0018  ld   $18         ;| RAM segment address (high byte first)
              7a55 00a0  ld   $a0         ;|
              7a56 0060  ld   $60         ;| Length (1..256)
              7a57 0011  ld   $11         ;18a0 LDWI
              7a58 00e1  ld   $e1
              7a59 0004  ld   $04
              7a5a 002b  ld   $2b         ;18a3 STW
              7a5b 0022  ld   $22         ;18a3 '_sysFn'
              7a5c 0059  ld   $59         ;18a5 LDI
              7a5d 0000  ld   $00
              7a5e 005e  ld   $5e         ;18a7 ST
              7a5f 0030  ld   $30         ;18a7 'Pos'
              7a60 005e  ld   $5e         ;18a9 ST
              7a61 0026  ld   $26
              7a62 001a  ld   $1a         ;18ab LD
              7a63 0031  ld   $31         ;18ab 'Pos'+1
              7a64 00e3  ld   $e3         ;18ad ADDI
              7a65 000f  ld   $0f
              7a66 0082  ld   $82         ;18af ANDI
              7a67 0078  ld   $78
              7a68 0035  ld   $35         ;18b1 BCC
              7a69 0072  ld   $72         ;18b2 NE
              7a6a 00b4  ld   $b4
              7a6b 0059  ld   $59         ;18b4 LDI
              7a6c 0008  ld   $08
              7a6d 005e  ld   $5e         ;18b6 ST
              7a6e 0031  ld   $31         ;18b6 'Pos'+1
              7a6f 0021  ld   $21         ;18b8 LDW
              7a70 002a  ld   $2a
              7a71 002b  ld   $2b         ;18ba STW
              7a72 0024  ld   $24
              7a73 0021  ld   $21         ;18bc LDW
              7a74 0030  ld   $30         ;18bc 'Pos'
              7a75 002b  ld   $2b         ;18be STW
              7a76 0028  ld   $28
              7a77 00b4  ld   $b4         ;18c0 SYS
              7a78 00cc  ld   $cc
              7a79 0093  ld   $93         ;18c2 INC
              7a7a 0028  ld   $28
              7a7b 00b4  ld   $b4         ;18c4 SYS
              7a7c 00cc  ld   $cc
              7a7d 0093  ld   $93         ;18c6 INC
              7a7e 0028  ld   $28
              7a7f 001a  ld   $1a         ;18c8 LD
              7a80 0028  ld   $28
              7a81 008c  ld   $8c         ;18ca XORI
              7a82 00a0  ld   $a0
              7a83 0035  ld   $35         ;18cc BCC
              7a84 0072  ld   $72         ;18cd NE
              7a85 00be  ld   $be
              7a86 0011  ld   $11         ;18cf LDWI
              7a87 0000  ld   $00
              7a88 0001  ld   $01
              7a89 002b  ld   $2b         ;18d2 STW
              7a8a 0040  ld   $40         ;18d2 'i'
              7a8b 0088  ld   $88         ;18d4 ORI
              7a8c 00ff  ld   $ff
              7a8d 00f6  ld   $f6         ;18d6 DEEK
              7a8e 00b8  ld   $b8         ;18d7 SUBW
              7a8f 0030  ld   $30         ;18d7 'Pos'
              7a90 001a  ld   $1a         ;18d9 LD
              7a91 0019  ld   $19
              7a92 0035  ld   $35         ;18db BCC
              7a93 0072  ld   $72         ;18dc NE
              7a94 00f9  ld   $f9
              7a95 0021  ld   $21         ;18de LDW
              7a96 0040  ld   $40         ;18de 'i'
              7a97 00e3  ld   $e3         ;18e0 ADDI
              7a98 0010  ld   $10
              7a99 002b  ld   $2b         ;18e2 STW
              7a9a 0024  ld   $24         ;18e2 '_sysArgs0'
              7a9b 00ad  ld   $ad         ;18e4 PEEK
              7a9c 005e  ld   $5e         ;18e5 ST
              7a9d 0026  ld   $26
              7a9e 0021  ld   $21         ;18e7 LDW
              7a9f 0040  ld   $40         ;18e7 'i'
              7aa0 00ad  ld   $ad         ;18e9 PEEK
              7aa1 00f0  ld   $f0         ;18ea POKE
              7aa2 0024  ld   $24         ;18ea '_sysArgs0'
              7aa3 001a  ld   $1a         ;18ec LD
              7aa4 0026  ld   $26
              7aa5 00f0  ld   $f0         ;18ee POKE
              7aa6 0040  ld   $40         ;18ee 'i'
              7aa7 0093  ld   $93         ;18f0 INC
              7aa8 0040  ld   $40         ;18f0 'i'
              7aa9 0093  ld   $93         ;18f2 INC
              7aaa 0040  ld   $40         ;18f2 'i'
              7aab 001a  ld   $1a         ;18f4 LD
              7aac 0040  ld   $40         ;18f4 'i'
              7aad 008c  ld   $8c         ;18f6 XORI
              7aae 00e0  ld   $e0
              7aaf 0035  ld   $35         ;18f8 BCC
              7ab0 0072  ld   $72         ;18f9 NE
              7ab1 00dc  ld   $dc
              7ab2 0093  ld   $93         ;18fb INC
              7ab3 0030  ld   $30         ;18fb 'Pos'
              7ab4 0093  ld   $93         ;18fd INC
              7ab5 0030  ld   $30         ;18fd 'Pos'
              7ab6 00ff  ld   $ff         ;18ff RET
              7ab7 0019  ld   $19         ;| RAM segment address (high byte first)
              7ab8 00a0  ld   $a0         ;|
              7ab9 0060  ld   $60         ;| Length (1..256)
              7aba 0059  ld   $59         ;19a0 LDI
              7abb 0001  ld   $01
              7abc 002b  ld   $2b         ;19a2 STW
              7abd 0024  ld   $24
              7abe 0011  ld   $11         ;19a4 LDWI
              7abf 0000  ld   $00
              7ac0 0001  ld   $01
              7ac1 002b  ld   $2b         ;19a7 STW
              7ac2 0026  ld   $26
              7ac3 00cf  ld   $cf         ;19a9 CALL
              7ac4 003a  ld   $3a         ;19a9 'Expression'
              7ac5 0075  ld   $75         ;19ab PUSH
              7ac6 00ec  ld   $ec         ;19ac STLW
              7ac7 0000  ld   $00
              7ac8 00cf  ld   $cf         ;19ae CALL
              7ac9 0038  ld   $38         ;19ae 'Keyword'
              7aca 002c  ld   $2c         ;19b0 ','
              7acb 0000  ld   $00         ;19b1 0
              7acc 0035  ld   $35         ;19b2 BCC
              7acd 0072  ld   $72         ;19b3 NE
              7ace 00b5  ld   $b5
              7acf 00cf  ld   $cf         ;19b5 CALL
              7ad0 004a  ld   $4a         ;19b5 'SyntaxError'
              7ad1 00cf  ld   $cf         ;19b7 CALL
              7ad2 003a  ld   $3a         ;19b7 'Expression'
              7ad3 002b  ld   $2b         ;19b9 STW
              7ad4 006a  ld   $6a         ;19b9 'j'
              7ad5 0035  ld   $35         ;19bb BCC
              7ad6 0053  ld   $53         ;19bc GE
              7ad7 00c8  ld   $c8
              7ad8 0059  ld   $59         ;19be LDI
              7ad9 0000  ld   $00
              7ada 00b8  ld   $b8         ;19c0 952
              7adb 0026  ld   $26         ;19c1 38
              7adc 002b  ld   $2b         ;19c2 STW
              7add 0026  ld   $26
              7ade 0059  ld   $59         ;19c4 LDI
              7adf 0000  ld   $00
              7ae0 00b8  ld   $b8         ;19c6 SUBW
              7ae1 006a  ld   $6a         ;19c6 'j'
              7ae2 002b  ld   $2b         ;19c8 STW
              7ae3 006a  ld   $6a         ;19c8 'j'
              7ae4 00ee  ld   $ee         ;19ca LDLW
              7ae5 0000  ld   $00
              7ae6 002b  ld   $2b         ;19cc STW
              7ae7 0040  ld   $40         ;19cc 'i'
              7ae8 0035  ld   $35         ;19ce BCC
              7ae9 0053  ld   $53         ;19cf GE
              7aea 00db  ld   $db
              7aeb 0059  ld   $59         ;19d1 LDI
              7aec 0000  ld   $00
              7aed 00b8  ld   $b8         ;19d3 952
              7aee 0024  ld   $24         ;19d4 36
              7aef 002b  ld   $2b         ;19d5 STW
              7af0 0024  ld   $24
              7af1 0059  ld   $59         ;19d7 LDI
              7af2 0000  ld   $00
              7af3 00b8  ld   $b8         ;19d9 SUBW
              7af4 0040  ld   $40         ;19d9 'i'
              7af5 002b  ld   $2b         ;19db STW
              7af6 0040  ld   $40         ;19db 'i'
              7af7 00b8  ld   $b8         ;19dd SUBW
              7af8 006a  ld   $6a         ;19dd 'j'
              7af9 0035  ld   $35         ;19df BCC
              7afa 0053  ld   $53         ;19e0 GE
              7afb fe00  bra  ac          ;+-----------------------------------+
              7afc fcfd  bra  $7afd       ;|                                   |
              7afd 1418  ld   $18,y       ;| Trampoline for page $7a00 lookups |
              7afe e006  jmp  y,$06       ;|                                   |
              7aff c218  st   [$18]       ;+-----------------------------------+
              7b00 00f8  ld   $f8
              7b01 0021  ld   $21         ;19e2 LDW
              7b02 0040  ld   $40         ;19e2 'i'
              7b03 002b  ld   $2b         ;19e4 STW
              7b04 004e  ld   $4e         ;19e4 'tmp'
              7b05 0021  ld   $21         ;19e6 LDW
              7b06 006a  ld   $6a         ;19e6 'j'
              7b07 002b  ld   $2b         ;19e8 STW
              7b08 0040  ld   $40         ;19e8 'i'
              7b09 0021  ld   $21         ;19ea LDW
              7b0a 004e  ld   $4e         ;19ea 'tmp'
              7b0b 002b  ld   $2b         ;19ec STW
              7b0c 006a  ld   $6a         ;19ec 'j'
              7b0d 0021  ld   $21         ;19ee LDW
              7b0e 0024  ld   $24
              7b0f 002b  ld   $2b         ;19f0 STW
              7b10 004e  ld   $4e         ;19f0 'tmp'
              7b11 0021  ld   $21         ;19f2 LDW
              7b12 0026  ld   $26
              7b13 002b  ld   $2b         ;19f4 STW
              7b14 0024  ld   $24
              7b15 0021  ld   $21         ;19f6 LDW
              7b16 004e  ld   $4e         ;19f6 'tmp'
              7b17 002b  ld   $2b         ;19f8 STW
              7b18 0026  ld   $26
              7b19 0063  ld   $63         ;19fa POP
              7b1a 0011  ld   $11         ;19fb LDWI
              7b1b 00a0  ld   $a0
              7b1c 001a  ld   $1a
              7b1d 00cf  ld   $cf         ;19fe CALL
              7b1e 0018  ld   $18         ;19fe vAC
              7b1f 001a  ld   $1a         ;| RAM segment address (high byte first)
              7b20 00a0  ld   $a0         ;|
              7b21 0060  ld   $60         ;| Length (1..256)
              7b22 0021  ld   $21         ;1aa0 LDW
              7b23 003c  ld   $3c         ;1aa0 'Value'
              7b24 0035  ld   $35         ;1aa2 BCC
              7b25 0053  ld   $53         ;1aa3 GE
              7b26 00a8  ld   $a8
              7b27 0011  ld   $11         ;1aa5 LDWI
              7b28 0000  ld   $00
              7b29 0078  ld   $78
              7b2a 0090  ld   $90         ;1aa8 BRA
              7b2b 00ab  ld   $ab
              7b2c 0011  ld   $11         ;1aaa LDWI
              7b2d 0000  ld   $00
              7b2e 0088  ld   $88
              7b2f 002b  ld   $2b         ;1aad STW
              7b30 0028  ld   $28
              7b31 0021  ld   $21         ;1aaf LDW
              7b32 0040  ld   $40         ;1aaf 'i'
              7b33 002b  ld   $2b         ;1ab1 STW
              7b34 004e  ld   $4e         ;1ab1 'tmp'
              7b35 002b  ld   $2b         ;1ab3 STW
              7b36 0044  ld   $44         ;1ab3 'k'
              7b37 001a  ld   $1a         ;1ab5 LD
              7b38 002b  ld   $2b
              7b39 00f0  ld   $f0         ;1ab7 POKE
              7b3a 0030  ld   $30         ;1ab7 'Pos'
              7b3b 0021  ld   $21         ;1ab9 LDW
              7b3c 004e  ld   $4e         ;1ab9 'tmp'
              7b3d 00e6  ld   $e6         ;1abb SUBI
              7b3e 0001  ld   $01
              7b3f 002b  ld   $2b         ;1abd STW
              7b40 004e  ld   $4e         ;1abd 'tmp'
              7b41 0035  ld   $35         ;1abf BCC
              7b42 0050  ld   $50         ;1ac0 LT
              7b43 00fc  ld   $fc
              7b44 0021  ld   $21         ;1ac2 LDW
              7b45 0044  ld   $44         ;1ac2 'k'
              7b46 00b8  ld   $b8         ;1ac4 SUBW
              7b47 006a  ld   $6a         ;1ac4 'j'
              7b48 00b8  ld   $b8         ;1ac6 SUBW
              7b49 006a  ld   $6a         ;1ac6 'j'
              7b4a 002b  ld   $2b         ;1ac8 STW
              7b4b 0044  ld   $44         ;1ac8 'k'
              7b4c 0035  ld   $35         ;1aca BCC
              7b4d 0053  ld   $53         ;1acb GE
              7b4e 00d7  ld   $d7
              7b4f 0099  ld   $99         ;1acd ADDW
              7b50 0040  ld   $40         ;1acd 'i'
              7b51 0099  ld   $99         ;1acf ADDW
              7b52 0040  ld   $40         ;1acf 'i'
              7b53 002b  ld   $2b         ;1ad1 STW
              7b54 0044  ld   $44         ;1ad1 'k'
              7b55 0021  ld   $21         ;1ad3 LDW
              7b56 0026  ld   $26
              7b57 0099  ld   $99         ;1ad5 ADDW
              7b58 0030  ld   $30         ;1ad5 'Pos'
              7b59 002b  ld   $2b         ;1ad7 STW
              7b5a 0030  ld   $30         ;1ad7 'Pos'
              7b5b 0021  ld   $21         ;1ad9 LDW
              7b5c 0024  ld   $24
              7b5d 0099  ld   $99         ;1adb ADDW
              7b5e 0030  ld   $30         ;1adb 'Pos'
              7b5f 002b  ld   $2b         ;1add STW
              7b60 0030  ld   $30         ;1add 'Pos'
              7b61 001a  ld   $1a         ;1adf LD
              7b62 0030  ld   $30         ;1adf 'Pos'
              7b63 00e6  ld   $e6         ;1ae1 SUBI
              7b64 00a0  ld   $a0
              7b65 0035  ld   $35         ;1ae3 BCC
              7b66 0050  ld   $50         ;1ae4 LT
              7b67 00ed  ld   $ed
              7b68 0035  ld   $35         ;1ae6 BCC
              7b69 0056  ld   $56         ;1ae7 LE
              7b6a 00eb  ld   $eb
              7b6b 0093  ld   $93         ;1ae9 INC
              7b6c 0031  ld   $31         ;1ae9 'Pos'+1
              7b6d 00e3  ld   $e3         ;1aeb ADDI
              7b6e 0040  ld   $40
              7b6f 005e  ld   $5e         ;1aed ST
              7b70 0030  ld   $30         ;1aed 'Pos'
              7b71 001a  ld   $1a         ;1aef LD
              7b72 0031  ld   $31         ;1aef 'Pos'+1
              7b73 0082  ld   $82         ;1af1 ANDI
              7b74 0078  ld   $78
              7b75 0035  ld   $35         ;1af3 BCC
              7b76 0072  ld   $72         ;1af4 NE
              7b77 00fa  ld   $fa
              7b78 0021  ld   $21         ;1af6 LDW
              7b79 0028  ld   $28
              7b7a 0099  ld   $99         ;1af8 ADDW
              7b7b 0030  ld   $30         ;1af8 'Pos'
              7b7c 002b  ld   $2b         ;1afa STW
              7b7d 0030  ld   $30         ;1afa 'Pos'
              7b7e 0090  ld   $90         ;1afc BRA
              7b7f 00b3  ld   $b3
              7b80 00cf  ld   $cf         ;1afe CALL
              7b81 0062  ld   $62         ;1afe 'EndOfLine'
              7b82 001b  ld   $1b         ;| RAM segment address (high byte first)
              7b83 00a0  ld   $a0         ;|
              7b84 0006  ld   $06         ;| Length (1..256)
              7b85 00a0  ld   $a0         ;1ba0 _Buffer
              7b86 001b  ld   $1b
              7b87 004e  ld   $4e         ;1ba2 'N'
              7b88 0045  ld   $45         ;1ba3 'E'
              7b89 0057  ld   $57         ;1ba4 'W'
              7b8a 0000  ld   $00         ;1ba5 0
              7b8b 0000  ld   $00         ;End of Apps/TinyBASIC/TinyBASIC_v4.gcl, size 3194
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/LoadTicTac_v1.gcl     |
                                          ;+-----------------------------------+
              7b8c dc54  st   $54,[y,x++] ;'T'
              7b8d dc69  st   $69,[y,x++] ;'i'
              7b8e dc6e  st   $6e,[y,x++] ;'n'
              7b8f dc79  st   $79,[y,x++] ;'y'
              7b90 dc42  st   $42,[y,x++] ;'B'
              7b91 dc41  st   $41,[y,x++] ;'A'
              7b92 dc53  st   $53,[y,x++] ;'S'
              7b93 dc49  st   $49,[y,x++] ;'I'
              7b94 0012  ld   $12
              7b95 c218  st   [$18]
              7b96 006f  ld   $6f
              7b97 14e0  ld   $e0,y
              7b98 e02e  jmp  y,$2e
              7b99 c219  st   [$19]
TicTac:       7b9a 0002  ld   $02         ;| RAM segment address (high byte first)
              7b9b 0000  ld   $00         ;|
              7b9c 0010  ld   $10         ;| Length (1..256)
              7b9d 0059  ld   $59         ;0200 LDI
              7b9e 00ad  ld   $ad
              7b9f 002b  ld   $2b         ;0202 STW
              7ba0 0022  ld   $22         ;0202 '_sysFn'
              7ba1 0011  ld   $11         ;0204 LDWI
              7ba2 00a0  ld   $a0
              7ba3 00ff  ld   $ff
              7ba4 002b  ld   $2b         ;0207 STW
              7ba5 001a  ld   $1a         ;0207 '_vLR'
              7ba6 0011  ld   $11         ;0209 LDWI
              7ba7 0012  ld   $12
              7ba8 006f  ld   $6f
              7ba9 002b  ld   $2b         ;020c STW
              7baa 0024  ld   $24         ;020c '_sysArgs0'
              7bab 00b4  ld   $b4         ;020e SYS
              7bac 00e3  ld   $e3
              7bad 00ff  ld   $ff         ;| RAM segment address (high byte first)
              7bae 00a0  ld   $a0         ;|
              7baf 000c  ld   $0c         ;| Length (1..256)
              7bb0 0011  ld   $11         ;ffa0 LDWI
              7bb1 0000  ld   $00
              7bb2 0002  ld   $02
              7bb3 002b  ld   $2b         ;ffa3 STW
              7bb4 001a  ld   $1a         ;ffa3 '_vLR'
              7bb5 0011  ld   $11         ;ffa5 LDWI
              7bb6 00bd  ld   $bd
              7bb7 007b  ld   $7b
              7bb8 002b  ld   $2b         ;ffa8 STW
              7bb9 0024  ld   $24         ;ffa8 '_sysArgs0'
              7bba 00b4  ld   $b4         ;ffaa SYS
              7bbb 00e3  ld   $e3
              7bbc 0000  ld   $00         ;End of Apps/TicTac/LoadTicTac_v1.gcl, size 35
                                          ;+-----------------------------------+
                                          ;| Apps/TicTac/TicTac_v2.gtb         |
                                          ;+-----------------------------------+
TicTacGtb:    7bbd 001b  ld   $1b
              7bbe 00c0  ld   $c0
              7bbf 0019  ld   $19
              7bc0 0064  ld   $64
              7bc1 0000  ld   $00
              7bc2 0027  ld   $27         ;"'"
              7bc3 0054  ld   $54         ;'T'
              7bc4 0049  ld   $49         ;'I'
              7bc5 0043  ld   $43         ;'C'
              7bc6 002d  ld   $2d         ;'-'
              7bc7 0054  ld   $54         ;'T'
              7bc8 0041  ld   $41         ;'A'
              7bc9 0043  ld   $43         ;'C'
              7bca 002d  ld   $2d         ;'-'
              7bcb 0054  ld   $54         ;'T'
              7bcc 004f  ld   $4f         ;'O'
              7bcd 0045  ld   $45         ;'E'
              7bce 002e  ld   $2e         ;'.'
              7bcf 0020  ld   $20         ;' '
              7bd0 0059  ld   $59         ;'Y'
              7bd1 004f  ld   $4f         ;'O'
              7bd2 0055  ld   $55         ;'U'
              7bd3 0020  ld   $20         ;' '
              7bd4 0028  ld   $28         ;'('
              7bd5 0058  ld   $58         ;'X'
              7bd6 0029  ld   $29         ;')'
              7bd7 0020  ld   $20         ;' '
              7bd8 0000  ld   $00         ;'\x00'
              7bd9 001b  ld   $1b
              7bda 00e0  ld   $e0
              7bdb 0015  ld   $15
              7bdc 00d2  ld   $d2
              7bdd 0000  ld   $00
              7bde 003f  ld   $3f         ;'?'
              7bdf 0022  ld   $22         ;'"'
              7be0 0054  ld   $54         ;'T'
              7be1 004f  ld   $4f         ;'O'
              7be2 004d  ld   $4d         ;'M'
              7be3 0020  ld   $20         ;' '
              7be4 0050  ld   $50         ;'P'
              7be5 0049  ld   $49         ;'I'
              7be6 0054  ld   $54         ;'T'
              7be7 0054  ld   $54         ;'T'
              7be8 004d  ld   $4d         ;'M'
              7be9 0041  ld   $41         ;'A'
              7bea 004e  ld   $4e         ;'N'
              7beb 0027  ld   $27         ;"'"
              7bec 0053  ld   $53         ;'S'
              7bed 0020  ld   $20         ;' '
              7bee 0022  ld   $22         ;'"'
              7bef 003b  ld   $3b         ;';'
              7bf0 0000  ld   $00         ;'\x00'
              7bf1 001c  ld   $1c
              7bf2 00a0  ld   $a0
              7bf3 0012  ld   $12
              7bf4 00d3  ld   $d3
              7bf5 0000  ld   $00
              7bf6 003f  ld   $3f         ;'?'
              7bf7 0022  ld   $22         ;'"'
              7bf8 0054  ld   $54         ;'T'
              7bf9 0049  ld   $49         ;'I'
              7bfa 0043  ld   $43         ;'C'
              7bfb fe00  bra  ac          ;+-----------------------------------+
              7bfc fcfd  bra  $7bfd       ;|                                   |
              7bfd 1418  ld   $18,y       ;| Trampoline for page $7b00 lookups |
              7bfe e006  jmp  y,$06       ;|                                   |
              7bff c218  st   [$18]       ;+-----------------------------------+
              7c00 002d  ld   $2d         ;'-'
              7c01 0054  ld   $54         ;'T'
              7c02 0041  ld   $41         ;'A'
              7c03 0043  ld   $43         ;'C'
              7c04 002d  ld   $2d         ;'-'
              7c05 0054  ld   $54         ;'T'
              7c06 004f  ld   $4f         ;'O'
              7c07 0045  ld   $45         ;'E'
              7c08 002e  ld   $2e         ;'.'
              7c09 0022  ld   $22         ;'"'
              7c0a 0000  ld   $00         ;'\x00'
              7c0b 001c  ld   $1c
              7c0c 00c0  ld   $c0
              7c0d 0012  ld   $12
              7c0e 00d4  ld   $d4
              7c0f 0000  ld   $00
              7c10 003f  ld   $3f         ;'?'
              7c11 0022  ld   $22         ;'"'
              7c12 0059  ld   $59         ;'Y'
              7c13 004f  ld   $4f         ;'O'
              7c14 0055  ld   $55         ;'U'
              7c15 0020  ld   $20         ;' '
              7c16 0041  ld   $41         ;'A'
              7c17 0047  ld   $47         ;'G'
              7c18 0041  ld   $41         ;'A'
              7c19 0049  ld   $49         ;'I'
              7c1a 004e  ld   $4e         ;'N'
              7c1b 0053  ld   $53         ;'S'
              7c1c 0054  ld   $54         ;'T'
              7c1d 0022  ld   $22         ;'"'
              7c1e 003b  ld   $3b         ;';'
              7c1f 0000  ld   $00         ;'\x00'
              7c20 001c  ld   $1c
              7c21 00e0  ld   $e0
              7c22 0011  ld   $11
              7c23 00d5  ld   $d5
              7c24 0000  ld   $00
              7c25 003f  ld   $3f         ;'?'
              7c26 0022  ld   $22         ;'"'
              7c27 0020  ld   $20         ;' '
              7c28 0054  ld   $54         ;'T'
              7c29 0049  ld   $49         ;'I'
              7c2a 004e  ld   $4e         ;'N'
              7c2b 0059  ld   $59         ;'Y'
              7c2c 0020  ld   $20         ;' '
              7c2d 0042  ld   $42         ;'B'
              7c2e 0041  ld   $41         ;'A'
              7c2f 0053  ld   $53         ;'S'
              7c30 0049  ld   $49         ;'I'
              7c31 0043  ld   $43         ;'C'
              7c32 0022  ld   $22         ;'"'
              7c33 0000  ld   $00         ;'\x00'
              7c34 001d  ld   $1d
              7c35 00a0  ld   $a0
              7c36 0016  ld   $16
              7c37 00dd  ld   $dd
              7c38 0000  ld   $00
              7c39 003f  ld   $3f         ;'?'
              7c3a 0022  ld   $22         ;'"'
              7c3b 0059  ld   $59         ;'Y'
              7c3c 004f  ld   $4f         ;'O'
              7c3d 0055  ld   $55         ;'U'
              7c3e 0020  ld   $20         ;' '
              7c3f 0041  ld   $41         ;'A'
              7c40 0052  ld   $52         ;'R'
              7c41 0045  ld   $45         ;'E'
              7c42 0020  ld   $20         ;' '
              7c43 0058  ld   $58         ;'X'
              7c44 002e  ld   $2e         ;'.'
              7c45 0020  ld   $20         ;' '
              7c46 0049  ld   $49         ;'I'
              7c47 0020  ld   $20         ;' '
              7c48 0041  ld   $41         ;'A'
              7c49 004d  ld   $4d         ;'M'
              7c4a 0022  ld   $22         ;'"'
              7c4b 003b  ld   $3b         ;';'
              7c4c 0000  ld   $00         ;'\x00'
              7c4d 001d  ld   $1d
              7c4e 00c0  ld   $c0
              7c4f 000d  ld   $0d
              7c50 00de  ld   $de
              7c51 0000  ld   $00
              7c52 003f  ld   $3f         ;'?'
              7c53 0022  ld   $22         ;'"'
              7c54 0020  ld   $20         ;' '
              7c55 004f  ld   $4f         ;'O'
              7c56 002e  ld   $2e         ;'.'
              7c57 0020  ld   $20         ;' '
              7c58 0059  ld   $59         ;'Y'
              7c59 004f  ld   $4f         ;'O'
              7c5a 0055  ld   $55         ;'U'
              7c5b 0022  ld   $22         ;'"'
              7c5c 0000  ld   $00         ;'\x00'
              7c5d 001d  ld   $1d
              7c5e 00e0  ld   $e0
              7c5f 0010  ld   $10
              7c60 00e7  ld   $e7
              7c61 0000  ld   $00
              7c62 003f  ld   $3f         ;'?'
              7c63 0022  ld   $22         ;'"'
              7c64 0050  ld   $50         ;'P'
              7c65 004c  ld   $4c         ;'L'
              7c66 0041  ld   $41         ;'A'
              7c67 0059  ld   $59         ;'Y'
              7c68 0020  ld   $20         ;' '
              7c69 0059  ld   $59         ;'Y'
              7c6a 004f  ld   $4f         ;'O'
              7c6b 0055  ld   $55         ;'U'
              7c6c 0052  ld   $52         ;'R'
              7c6d 0022  ld   $22         ;'"'
              7c6e 003b  ld   $3b         ;';'
              7c6f 0000  ld   $00         ;'\x00'
              7c70 001e  ld   $1e
              7c71 00a0  ld   $a0
              7c72 0015  ld   $15
              7c73 00e8  ld   $e8
              7c74 0000  ld   $00
              7c75 003f  ld   $3f         ;'?'
              7c76 0022  ld   $22         ;'"'
              7c77 0020  ld   $20         ;' '
              7c78 0054  ld   $54         ;'T'
              7c79 0055  ld   $55         ;'U'
              7c7a 0052  ld   $52         ;'R'
              7c7b 004e  ld   $4e         ;'N'
              7c7c 0020  ld   $20         ;' '
              7c7d 0042  ld   $42         ;'B'
              7c7e 0059  ld   $59         ;'Y'
              7c7f 0020  ld   $20         ;' '
              7c80 0054  ld   $54         ;'T'
              7c81 0059  ld   $59         ;'Y'
              7c82 0050  ld   $50         ;'P'
              7c83 0049  ld   $49         ;'I'
              7c84 004e  ld   $4e         ;'N'
              7c85 0047  ld   $47         ;'G'
              7c86 0022  ld   $22         ;'"'
              7c87 0000  ld   $00         ;'\x00'
              7c88 001e  ld   $1e
              7c89 00c0  ld   $c0
              7c8a 0016  ld   $16
              7c8b 00e9  ld   $e9
              7c8c 0000  ld   $00
              7c8d 003f  ld   $3f         ;'?'
              7c8e 0022  ld   $22         ;'"'
              7c8f 0054  ld   $54         ;'T'
              7c90 0048  ld   $48         ;'H'
              7c91 0045  ld   $45         ;'E'
              7c92 0020  ld   $20         ;' '
              7c93 004e  ld   $4e         ;'N'
              7c94 0055  ld   $55         ;'U'
              7c95 004d  ld   $4d         ;'M'
              7c96 0042  ld   $42         ;'B'
              7c97 0045  ld   $45         ;'E'
              7c98 0052  ld   $52         ;'R'
              7c99 0020  ld   $20         ;' '
              7c9a 004f  ld   $4f         ;'O'
              7c9b 0046  ld   $46         ;'F'
              7c9c 0020  ld   $20         ;' '
              7c9d 0041  ld   $41         ;'A'
              7c9e 0022  ld   $22         ;'"'
              7c9f 003b  ld   $3b         ;';'
              7ca0 0000  ld   $00         ;'\x00'
              7ca1 001e  ld   $1e
              7ca2 00e0  ld   $e0
              7ca3 000e  ld   $0e
              7ca4 00ea  ld   $ea
              7ca5 0000  ld   $00
              7ca6 003f  ld   $3f         ;'?'
              7ca7 0022  ld   $22         ;'"'
              7ca8 0020  ld   $20         ;' '
              7ca9 0053  ld   $53         ;'S'
              7caa 0051  ld   $51         ;'Q'
              7cab 0055  ld   $55         ;'U'
              7cac 0041  ld   $41         ;'A'
              7cad 0052  ld   $52         ;'R'
              7cae 0045  ld   $45         ;'E'
              7caf 002e  ld   $2e         ;'.'
              7cb0 0022  ld   $22         ;'"'
              7cb1 0000  ld   $00         ;'\x00'
              7cb2 001f  ld   $1f
              7cb3 00a0  ld   $a0
              7cb4 0006  ld   $06
              7cb5 00f0  ld   $f0
              7cb6 0000  ld   $00
              7cb7 0041  ld   $41         ;'A'
              7cb8 003d  ld   $3d         ;'='
              7cb9 0030  ld   $30         ;'0'
              7cba 0000  ld   $00         ;'\x00'
              7cbb 001f  ld   $1f
              7cbc 00c0  ld   $c0
              7cbd 0006  ld   $06
              7cbe 00fa  ld   $fa
              7cbf 0000  ld   $00
              7cc0 0042  ld   $42         ;'B'
              7cc1 003d  ld   $3d         ;'='
              7cc2 0030  ld   $30         ;'0'
              7cc3 0000  ld   $00         ;'\x00'
              7cc4 001f  ld   $1f
              7cc5 00e0  ld   $e0
              7cc6 0006  ld   $06
              7cc7 0004  ld   $04
              7cc8 0001  ld   $01
              7cc9 0043  ld   $43         ;'C'
              7cca 003d  ld   $3d         ;'='
              7ccb 0030  ld   $30         ;'0'
              7ccc 0000  ld   $00         ;'\x00'
              7ccd 0020  ld   $20
              7cce 00a0  ld   $a0
              7ccf 0006  ld   $06
              7cd0 000e  ld   $0e
              7cd1 0001  ld   $01
              7cd2 0044  ld   $44         ;'D'
              7cd3 003d  ld   $3d         ;'='
              7cd4 0030  ld   $30         ;'0'
              7cd5 0000  ld   $00         ;'\x00'
              7cd6 0020  ld   $20
              7cd7 00c0  ld   $c0
              7cd8 0006  ld   $06
              7cd9 0018  ld   $18
              7cda 0001  ld   $01
              7cdb 0045  ld   $45         ;'E'
              7cdc 003d  ld   $3d         ;'='
              7cdd 0030  ld   $30         ;'0'
              7cde 0000  ld   $00         ;'\x00'
              7cdf 0020  ld   $20
              7ce0 00e0  ld   $e0
              7ce1 0006  ld   $06
              7ce2 0022  ld   $22
              7ce3 0001  ld   $01
              7ce4 0046  ld   $46         ;'F'
              7ce5 003d  ld   $3d         ;'='
              7ce6 0030  ld   $30         ;'0'
              7ce7 0000  ld   $00         ;'\x00'
              7ce8 0021  ld   $21
              7ce9 00a0  ld   $a0
              7cea 0006  ld   $06
              7ceb 00e8  ld   $e8
              7cec 0003  ld   $03
              7ced 0046  ld   $46         ;'F'
              7cee 003d  ld   $3d         ;'='
              7cef 0031  ld   $31         ;'1'
              7cf0 0000  ld   $00         ;'\x00'
              7cf1 0021  ld   $21
              7cf2 00c0  ld   $c0
              7cf3 0004  ld   $04
              7cf4 00f2  ld   $f2
              7cf5 0003  ld   $03
              7cf6 003f  ld   $3f         ;'?'
              7cf7 0000  ld   $00         ;'\x00'
              7cf8 0021  ld   $21
              7cf9 00e0  ld   $e0
              7cfa 000f  ld   $0f
              7cfb fe00  bra  ac          ;+-----------------------------------+
              7cfc fcfd  bra  $7cfd       ;|                                   |
              7cfd 1418  ld   $18,y       ;| Trampoline for page $7c00 lookups |
              7cfe e006  jmp  y,$06       ;|                                   |
              7cff c218  st   [$18]       ;+-----------------------------------+
              7d00 00fc  ld   $fc
              7d01 0003  ld   $03
              7d02 003f  ld   $3f         ;'?'
              7d03 0022  ld   $22         ;'"'
              7d04 004e  ld   $4e         ;'N'
              7d05 0045  ld   $45         ;'E'
              7d06 0057  ld   $57         ;'W'
              7d07 0020  ld   $20         ;' '
              7d08 0047  ld   $47         ;'G'
              7d09 0041  ld   $41         ;'A'
              7d0a 004d  ld   $4d         ;'M'
              7d0b 0045  ld   $45         ;'E'
              7d0c 002e  ld   $2e         ;'.'
              7d0d 0022  ld   $22         ;'"'
              7d0e 0000  ld   $00         ;'\x00'
              7d0f 0022  ld   $22
              7d10 00a0  ld   $a0
              7d11 0006  ld   $06
              7d12 004c  ld   $4c
              7d13 0004  ld   $04
              7d14 0049  ld   $49         ;'I'
              7d15 003d  ld   $3d         ;'='
              7d16 0037  ld   $37         ;'7'
              7d17 0000  ld   $00         ;'\x00'
              7d18 0022  ld   $22
              7d19 00c0  ld   $c0
              7d1a 000f  ld   $0f
              7d1b 0056  ld   $56
              7d1c 0004  ld   $04
              7d1d 0041  ld   $41         ;'A'
              7d1e 0028  ld   $28         ;'('
              7d1f 0049  ld   $49         ;'I'
              7d20 0029  ld   $29         ;')'
              7d21 003d  ld   $3d         ;'='
              7d22 0030  ld   $30         ;'0'
              7d23 003a  ld   $3a         ;':'
              7d24 0049  ld   $49         ;'I'
              7d25 003d  ld   $3d         ;'='
              7d26 0049  ld   $49         ;'I'
              7d27 002b  ld   $2b         ;'+'
              7d28 0031  ld   $31         ;'1'
              7d29 0000  ld   $00         ;'\x00'
              7d2a 0022  ld   $22
              7d2b 00e0  ld   $e0
              7d2c 0011  ld   $11
              7d2d 0060  ld   $60
              7d2e 0004  ld   $04
              7d2f 0049  ld   $49         ;'I'
              7d30 0046  ld   $46         ;'F'
              7d31 0049  ld   $49         ;'I'
              7d32 003c  ld   $3c         ;'<'
              7d33 0031  ld   $31         ;'1'
              7d34 0036  ld   $36         ;'6'
              7d35 0047  ld   $47         ;'G'
              7d36 004f  ld   $4f         ;'O'
              7d37 0054  ld   $54         ;'T'
              7d38 004f  ld   $4f         ;'O'
              7d39 0031  ld   $31         ;'1'
              7d3a 0031  ld   $31         ;'1'
              7d3b 0031  ld   $31         ;'1'
              7d3c 0030  ld   $30         ;'0'
              7d3d 0000  ld   $00         ;'\x00'
              7d3e 0023  ld   $23
              7d3f 00a0  ld   $a0
              7d40 0006  ld   $06
              7d41 006a  ld   $6a
              7d42 0004  ld   $04
              7d43 0055  ld   $55         ;'U'
              7d44 003d  ld   $3d         ;'='
              7d45 0039  ld   $39         ;'9'
              7d46 0000  ld   $00         ;'\x00'
              7d47 0023  ld   $23
              7d48 00c0  ld   $c0
              7d49 0006  ld   $06
              7d4a 0074  ld   $74
              7d4b 0004  ld   $04
              7d4c 005a  ld   $5a         ;'Z'
              7d4d 003d  ld   $3d         ;'='
              7d4e 0030  ld   $30         ;'0'
              7d4f 0000  ld   $00         ;'\x00'
              7d50 0023  ld   $23
              7d51 00e0  ld   $e0
              7d52 0010  ld   $10
              7d53 007f  ld   $7f
              7d54 0004  ld   $04
              7d55 0049  ld   $49         ;'I'
              7d56 0046  ld   $46         ;'F'
              7d57 0046  ld   $46         ;'F'
              7d58 003d  ld   $3d         ;'='
              7d59 0030  ld   $30         ;'0'
              7d5a 0047  ld   $47         ;'G'
              7d5b 004f  ld   $4f         ;'O'
              7d5c 0054  ld   $54         ;'T'
              7d5d 004f  ld   $4f         ;'O'
              7d5e 0034  ld   $34         ;'4'
              7d5f 0030  ld   $30         ;'0'
              7d60 0031  ld   $31         ;'1'
              7d61 0030  ld   $30         ;'0'
              7d62 0000  ld   $00         ;'\x00'
              7d63 0024  ld   $24
              7d64 00a0  ld   $a0
              7d65 000b  ld   $0b
              7d66 0089  ld   $89
              7d67 0004  ld   $04
              7d68 0047  ld   $47         ;'G'
              7d69 004f  ld   $4f         ;'O'
              7d6a 0054  ld   $54         ;'T'
              7d6b 004f  ld   $4f         ;'O'
              7d6c 0032  ld   $32         ;'2'
              7d6d 0030  ld   $30         ;'0'
              7d6e 0031  ld   $31         ;'1'
              7d6f 0030  ld   $30         ;'0'
              7d70 0000  ld   $00         ;'\x00'
              7d71 0024  ld   $24
              7d72 00c0  ld   $c0
              7d73 0006  ld   $06
              7d74 00e6  ld   $e6
              7d75 0005  ld   $05
              7d76 005a  ld   $5a         ;'Z'
              7d77 003d  ld   $3d         ;'='
              7d78 0031  ld   $31         ;'1'
              7d79 0000  ld   $00         ;'\x00'
              7d7a 0024  ld   $24
              7d7b 00e0  ld   $e0
              7d7c 0006  ld   $06
              7d7d 00f0  ld   $f0
              7d7e 0005  ld   $05
              7d7f 0046  ld   $46         ;'F'
              7d80 003d  ld   $3d         ;'='
              7d81 0030  ld   $30         ;'0'
              7d82 0000  ld   $00         ;'\x00'
              7d83 0025  ld   $25
              7d84 00a0  ld   $a0
              7d85 0006  ld   $06
              7d86 00da  ld   $da
              7d87 0007  ld   $07
              7d88 0049  ld   $49         ;'I'
              7d89 003d  ld   $3d         ;'='
              7d8a 0036  ld   $36         ;'6'
              7d8b 0000  ld   $00         ;'\x00'
              7d8c 0025  ld   $25
              7d8d 00c0  ld   $c0
              7d8e 0008  ld   $08
              7d8f 003e  ld   $3e
              7d90 0008  ld   $08
              7d91 0049  ld   $49         ;'I'
              7d92 003d  ld   $3d         ;'='
              7d93 0049  ld   $49         ;'I'
              7d94 002b  ld   $2b         ;'+'
              7d95 0031  ld   $31         ;'1'
              7d96 0000  ld   $00         ;'\x00'
              7d97 0025  ld   $25
              7d98 00e0  ld   $e0
              7d99 0008  ld   $08
              7d9a 0048  ld   $48
              7d9b 0008  ld   $08
              7d9c 003f  ld   $3f         ;'?'
              7d9d 0022  ld   $22         ;'"'
              7d9e 0020  ld   $20         ;' '
              7d9f 0022  ld   $22         ;'"'
              7da0 003b  ld   $3b         ;';'
              7da1 0000  ld   $00         ;'\x00'
              7da2 0026  ld   $26
              7da3 00a0  ld   $a0
              7da4 0013  ld   $13
              7da5 0053  ld   $53
              7da6 0008  ld   $08
              7da7 0047  ld   $47         ;'G'
              7da8 004f  ld   $4f         ;'O'
              7da9 0054  ld   $54         ;'T'
              7daa 004f  ld   $4f         ;'O'
              7dab 0041  ld   $41         ;'A'
              7dac 0028  ld   $28         ;'('
              7dad 0049  ld   $49         ;'I'
              7dae 0029  ld   $29         ;')'
              7daf 002a  ld   $2a         ;'*'
              7db0 0032  ld   $32         ;'2'
              7db1 0030  ld   $30         ;'0'
              7db2 002b  ld   $2b         ;'+'
              7db3 0032  ld   $32         ;'2'
              7db4 0032  ld   $32         ;'2'
              7db5 0030  ld   $30         ;'0'
              7db6 0030  ld   $30         ;'0'
              7db7 0000  ld   $00         ;'\x00'
              7db8 0026  ld   $26
              7db9 00c0  ld   $c0
              7dba 0008  ld   $08
              7dbb 0098  ld   $98
              7dbc 0008  ld   $08
              7dbd 003f  ld   $3f         ;'?'
              7dbe 0049  ld   $49         ;'I'
              7dbf 002d  ld   $2d         ;'-'
              7dc0 0036  ld   $36         ;'6'
              7dc1 003b  ld   $3b         ;';'
              7dc2 0000  ld   $00         ;'\x00'
              7dc3 0026  ld   $26
              7dc4 00e0  ld   $e0
              7dc5 000b  ld   $0b
              7dc6 00a2  ld   $a2
              7dc7 0008  ld   $08
              7dc8 0047  ld   $47         ;'G'
              7dc9 004f  ld   $4f         ;'O'
              7dca 0054  ld   $54         ;'T'
              7dcb 004f  ld   $4f         ;'O'
              7dcc 0032  ld   $32         ;'2'
              7dcd 0033  ld   $33         ;'3'
              7dce 0030  ld   $30         ;'0'
              7dcf 0030  ld   $30         ;'0'
              7dd0 0000  ld   $00         ;'\x00'
              7dd1 0027  ld   $27
              7dd2 00a0  ld   $a0
              7dd3 0008  ld   $08
              7dd4 00ac  ld   $ac
              7dd5 0008  ld   $08
              7dd6 003f  ld   $3f         ;'?'
              7dd7 0022  ld   $22         ;'"'
              7dd8 0058  ld   $58         ;'X'
              7dd9 0022  ld   $22         ;'"'
              7dda 003b  ld   $3b         ;';'
              7ddb 0000  ld   $00         ;'\x00'
              7ddc 0027  ld   $27
              7ddd 00c0  ld   $c0
              7dde 000b  ld   $0b
              7ddf 00b6  ld   $b6
              7de0 0008  ld   $08
              7de1 0047  ld   $47         ;'G'
              7de2 004f  ld   $4f         ;'O'
              7de3 0054  ld   $54         ;'T'
              7de4 004f  ld   $4f         ;'O'
              7de5 0032  ld   $32         ;'2'
              7de6 0033  ld   $33         ;'3'
              7de7 0030  ld   $30         ;'0'
              7de8 0030  ld   $30         ;'0'
              7de9 0000  ld   $00         ;'\x00'
              7dea 0027  ld   $27
              7deb 00e0  ld   $e0
              7dec 0008  ld   $08
              7ded 00d4  ld   $d4
              7dee 0008  ld   $08
              7def 003f  ld   $3f         ;'?'
              7df0 0022  ld   $22         ;'"'
              7df1 004f  ld   $4f         ;'O'
              7df2 0022  ld   $22         ;'"'
              7df3 003b  ld   $3b         ;';'
              7df4 0000  ld   $00         ;'\x00'
              7df5 0028  ld   $28
              7df6 00a0  ld   $a0
              7df7 0014  ld   $14
              7df8 00fc  ld   $fc
              7df9 0008  ld   $08
              7dfa 0049  ld   $49         ;'I'
              7dfb fe00  bra  ac          ;+-----------------------------------+
              7dfc fcfd  bra  $7dfd       ;|                                   |
              7dfd 1418  ld   $18,y       ;| Trampoline for page $7d00 lookups |
              7dfe e006  jmp  y,$06       ;|                                   |
              7dff c218  st   [$18]       ;+-----------------------------------+
              7e00 0046  ld   $46         ;'F'
              7e01 0049  ld   $49         ;'I'
              7e02 002f  ld   $2f         ;'/'
              7e03 0033  ld   $33         ;'3'
              7e04 002a  ld   $2a         ;'*'
              7e05 0033  ld   $33         ;'3'
              7e06 003d  ld   $3d         ;'='
              7e07 0049  ld   $49         ;'I'
              7e08 0047  ld   $47         ;'G'
              7e09 004f  ld   $4f         ;'O'
              7e0a 0054  ld   $54         ;'T'
              7e0b 004f  ld   $4f         ;'O'
              7e0c 0032  ld   $32         ;'2'
              7e0d 0034  ld   $34         ;'4'
              7e0e 0030  ld   $30         ;'0'
              7e0f 0030  ld   $30         ;'0'
              7e10 0000  ld   $00         ;'\x00'
              7e11 0028  ld   $28
              7e12 00c0  ld   $c0
              7e13 0009  ld   $09
              7e14 0006  ld   $06
              7e15 0009  ld   $09
              7e16 003f  ld   $3f         ;'?'
              7e17 0022  ld   $22         ;'"'
              7e18 0020  ld   $20         ;' '
              7e19 007c  ld   $7c         ;'|'
              7e1a 0022  ld   $22         ;'"'
              7e1b 003b  ld   $3b         ;';'
              7e1c 0000  ld   $00         ;'\x00'
              7e1d 0028  ld   $28
              7e1e 00e0  ld   $e0
              7e1f 000b  ld   $0b
              7e20 0010  ld   $10
              7e21 0009  ld   $09
              7e22 0047  ld   $47         ;'G'
              7e23 004f  ld   $4f         ;'O'
              7e24 0054  ld   $54         ;'T'
              7e25 004f  ld   $4f         ;'O'
              7e26 0032  ld   $32         ;'2'
              7e27 0031  ld   $31         ;'1'
              7e28 0031  ld   $31         ;'1'
              7e29 0030  ld   $30         ;'0'
              7e2a 0000  ld   $00         ;'\x00'
              7e2b 0029  ld   $29
              7e2c 00a0  ld   $a0
              7e2d 0004  ld   $04
              7e2e 0060  ld   $60
              7e2f 0009  ld   $09
              7e30 003f  ld   $3f         ;'?'
              7e31 0000  ld   $00         ;'\x00'
              7e32 0029  ld   $29
              7e33 00c0  ld   $c0
              7e34 0011  ld   $11
              7e35 0074  ld   $74
              7e36 0009  ld   $09
              7e37 0049  ld   $49         ;'I'
              7e38 0046  ld   $46         ;'F'
              7e39 0049  ld   $49         ;'I'
              7e3a 003d  ld   $3d         ;'='
              7e3b 0031  ld   $31         ;'1'
              7e3c 0035  ld   $35         ;'5'
              7e3d 0047  ld   $47         ;'G'
              7e3e 004f  ld   $4f         ;'O'
              7e3f 0054  ld   $54         ;'T'
              7e40 004f  ld   $4f         ;'O'
              7e41 0033  ld   $33         ;'3'
              7e42 0030  ld   $30         ;'0'
              7e43 0030  ld   $30         ;'0'
              7e44 0030  ld   $30         ;'0'
              7e45 0000  ld   $00         ;'\x00'
              7e46 0029  ld   $29
              7e47 00e0  ld   $e0
              7e48 0011  ld   $11
              7e49 007e  ld   $7e
              7e4a 0009  ld   $09
              7e4b 003f  ld   $3f         ;'?'
              7e4c 0022  ld   $22         ;'"'
              7e4d 002d  ld   $2d         ;'-'
              7e4e 002d  ld   $2d         ;'-'
              7e4f 002d  ld   $2d         ;'-'
              7e50 002b  ld   $2b         ;'+'
              7e51 002d  ld   $2d         ;'-'
              7e52 002d  ld   $2d         ;'-'
              7e53 002d  ld   $2d         ;'-'
              7e54 002b  ld   $2b         ;'+'
              7e55 002d  ld   $2d         ;'-'
              7e56 002d  ld   $2d         ;'-'
              7e57 002d  ld   $2d         ;'-'
              7e58 0022  ld   $22         ;'"'
              7e59 0000  ld   $00         ;'\x00'
              7e5a 002a  ld   $2a
              7e5b 00a0  ld   $a0
              7e5c 000b  ld   $0b
              7e5d 0088  ld   $88
              7e5e 0009  ld   $09
              7e5f 0047  ld   $47         ;'G'
              7e60 004f  ld   $4f         ;'O'
              7e61 0054  ld   $54         ;'T'
              7e62 004f  ld   $4f         ;'O'
              7e63 0032  ld   $32         ;'2'
              7e64 0031  ld   $31         ;'1'
              7e65 0031  ld   $31         ;'1'
              7e66 0030  ld   $30         ;'0'
              7e67 0000  ld   $00         ;'\x00'
              7e68 002a  ld   $2a
              7e69 00c0  ld   $c0
              7e6a 0010  ld   $10
              7e6b 00b8  ld   $b8
              7e6c 000b  ld   $0b
              7e6d 0049  ld   $49         ;'I'
              7e6e 0046  ld   $46         ;'F'
              7e6f 005a  ld   $5a         ;'Z'
              7e70 003d  ld   $3d         ;'='
              7e71 0030  ld   $30         ;'0'
              7e72 0047  ld   $47         ;'G'
              7e73 004f  ld   $4f         ;'O'
              7e74 0054  ld   $54         ;'T'
              7e75 004f  ld   $4f         ;'O'
              7e76 0033  ld   $33         ;'3'
              7e77 0031  ld   $31         ;'1'
              7e78 0030  ld   $30         ;'0'
              7e79 0030  ld   $30         ;'0'
              7e7a 0000  ld   $00         ;'\x00'
              7e7b 002a  ld   $2a
              7e7c 00e0  ld   $e0
              7e7d 0010  ld   $10
              7e7e 00cc  ld   $cc
              7e7f 000b  ld   $0b
              7e80 0049  ld   $49         ;'I'
              7e81 0046  ld   $46         ;'F'
              7e82 0046  ld   $46         ;'F'
              7e83 003d  ld   $3d         ;'='
              7e84 0031  ld   $31         ;'1'
              7e85 0047  ld   $47         ;'G'
              7e86 004f  ld   $4f         ;'O'
              7e87 0054  ld   $54         ;'T'
              7e88 004f  ld   $4f         ;'O'
              7e89 0033  ld   $33         ;'3'
              7e8a 0030  ld   $30         ;'0'
              7e8b 0035  ld   $35         ;'5'
              7e8c 0030  ld   $30         ;'0'
              7e8d 0000  ld   $00         ;'\x00'
              7e8e 002b  ld   $2b
              7e8f 00a0  ld   $a0
              7e90 000e  ld   $0e
              7e91 00d6  ld   $d6
              7e92 000b  ld   $0b
              7e93 003f  ld   $3f         ;'?'
              7e94 0022  ld   $22         ;'"'
              7e95 0059  ld   $59         ;'Y'
              7e96 004f  ld   $4f         ;'O'
              7e97 0055  ld   $55         ;'U'
              7e98 0020  ld   $20         ;' '
              7e99 0057  ld   $57         ;'W'
              7e9a 0049  ld   $49         ;'I'
              7e9b 004e  ld   $4e         ;'N'
              7e9c 002e  ld   $2e         ;'.'
              7e9d 0022  ld   $22         ;'"'
              7e9e 0000  ld   $00         ;'\x00'
              7e9f 002b  ld   $2b
              7ea0 00c0  ld   $c0
              7ea1 000b  ld   $0b
              7ea2 00e0  ld   $e0
              7ea3 000b  ld   $0b
              7ea4 0047  ld   $47         ;'G'
              7ea5 004f  ld   $4f         ;'O'
              7ea6 0054  ld   $54         ;'T'
              7ea7 004f  ld   $4f         ;'O'
              7ea8 0031  ld   $31         ;'1'
              7ea9 0030  ld   $30         ;'0'
              7eaa 0031  ld   $31         ;'1'
              7eab 0030  ld   $30         ;'0'
              7eac 0000  ld   $00         ;'\x00'
              7ead 002b  ld   $2b
              7eae 00e0  ld   $e0
              7eaf 000c  ld   $0c
              7eb0 00ea  ld   $ea
              7eb1 000b  ld   $0b
              7eb2 003f  ld   $3f         ;'?'
              7eb3 0022  ld   $22         ;'"'
              7eb4 0049  ld   $49         ;'I'
              7eb5 0020  ld   $20         ;' '
              7eb6 0057  ld   $57         ;'W'
              7eb7 0049  ld   $49         ;'I'
              7eb8 004e  ld   $4e         ;'N'
              7eb9 002e  ld   $2e         ;'.'
              7eba 0022  ld   $22         ;'"'
              7ebb 0000  ld   $00         ;'\x00'
              7ebc 002c  ld   $2c
              7ebd 00a0  ld   $a0
              7ebe 000b  ld   $0b
              7ebf 00f4  ld   $f4
              7ec0 000b  ld   $0b
              7ec1 0047  ld   $47         ;'G'
              7ec2 004f  ld   $4f         ;'O'
              7ec3 0054  ld   $54         ;'T'
              7ec4 004f  ld   $4f         ;'O'
              7ec5 0031  ld   $31         ;'1'
              7ec6 0030  ld   $30         ;'0'
              7ec7 0031  ld   $31         ;'1'
              7ec8 0030  ld   $30         ;'0'
              7ec9 0000  ld   $00         ;'\x00'
              7eca 002c  ld   $2c
              7ecb 00c0  ld   $c0
              7ecc 0010  ld   $10
              7ecd 001c  ld   $1c
              7ece 000c  ld   $0c
              7ecf 0049  ld   $49         ;'I'
              7ed0 0046  ld   $46         ;'F'
              7ed1 0055  ld   $55         ;'U'
              7ed2 003e  ld   $3e         ;'>'
              7ed3 0030  ld   $30         ;'0'
              7ed4 0047  ld   $47         ;'G'
              7ed5 004f  ld   $4f         ;'O'
              7ed6 0054  ld   $54         ;'T'
              7ed7 004f  ld   $4f         ;'O'
              7ed8 0033  ld   $33         ;'3'
              7ed9 0032  ld   $32         ;'2'
              7eda 0031  ld   $31         ;'1'
              7edb 0030  ld   $30         ;'0'
              7edc 0000  ld   $00         ;'\x00'
              7edd 002c  ld   $2c
              7ede 00e0  ld   $e0
              7edf 0011  ld   $11
              7ee0 0026  ld   $26
              7ee1 000c  ld   $0c
              7ee2 003f  ld   $3f         ;'?'
              7ee3 0022  ld   $22         ;'"'
              7ee4 0043  ld   $43         ;'C'
              7ee5 0041  ld   $41         ;'A'
              7ee6 0054  ld   $54         ;'T'
              7ee7 0027  ld   $27         ;"'"
              7ee8 0053  ld   $53         ;'S'
              7ee9 0020  ld   $20         ;' '
              7eea 0047  ld   $47         ;'G'
              7eeb 0041  ld   $41         ;'A'
              7eec 004d  ld   $4d         ;'M'
              7eed 0045  ld   $45         ;'E'
              7eee 002e  ld   $2e         ;'.'
              7eef 0022  ld   $22         ;'"'
              7ef0 0000  ld   $00         ;'\x00'
              7ef1 002d  ld   $2d
              7ef2 00a0  ld   $a0
              7ef3 0008  ld   $08
              7ef4 0030  ld   $30
              7ef5 000c  ld   $0c
              7ef6 0046  ld   $46         ;'F'
              7ef7 003d  ld   $3d         ;'='
              7ef8 0031  ld   $31         ;'1'
              7ef9 002d  ld   $2d         ;'-'
              7efa 0046  ld   $46         ;'F'
              7efb fe00  bra  ac          ;+-----------------------------------+
              7efc fcfd  bra  $7efd       ;|                                   |
              7efd 1418  ld   $18,y       ;| Trampoline for page $7e00 lookups |
              7efe e006  jmp  y,$06       ;|                                   |
              7eff c218  st   [$18]       ;+-----------------------------------+
              7f00 0000  ld   $00         ;'\x00'
              7f01 002d  ld   $2d
              7f02 00c0  ld   $c0
              7f03 000b  ld   $0b
              7f04 003a  ld   $3a
              7f05 000c  ld   $0c
              7f06 0047  ld   $47         ;'G'
              7f07 004f  ld   $4f         ;'O'
              7f08 0054  ld   $54         ;'T'
              7f09 004f  ld   $4f         ;'O'
              7f0a 0031  ld   $31         ;'1'
              7f0b 0030  ld   $30         ;'0'
              7f0c 0031  ld   $31         ;'1'
              7f0d 0030  ld   $30         ;'0'
              7f0e 0000  ld   $00         ;'\x00'
              7f0f 002d  ld   $2d
              7f10 00e0  ld   $e0
              7f11 000f  ld   $0f
              7f12 008a  ld   $8a
              7f13 000c  ld   $0c
              7f14 003f  ld   $3f         ;'?'
              7f15 0022  ld   $22         ;'"'
              7f16 0059  ld   $59         ;'Y'
              7f17 004f  ld   $4f         ;'O'
              7f18 0055  ld   $55         ;'U'
              7f19 0052  ld   $52         ;'R'
              7f1a 0020  ld   $20         ;' '
              7f1b 0050  ld   $50         ;'P'
              7f1c 004c  ld   $4c         ;'L'
              7f1d 0041  ld   $41         ;'A'
              7f1e 0022  ld   $22         ;'"'
              7f1f 003b  ld   $3b         ;';'
              7f20 0000  ld   $00         ;'\x00'
              7f21 002e  ld   $2e
              7f22 00a0  ld   $a0
              7f23 000d  ld   $0d
              7f24 0097  ld   $97
              7f25 000c  ld   $0c
              7f26 0049  ld   $49         ;'I'
              7f27 004e  ld   $4e         ;'N'
              7f28 0050  ld   $50         ;'P'
              7f29 0055  ld   $55         ;'U'
              7f2a 0054  ld   $54         ;'T'
              7f2b 0059  ld   $59         ;'Y'
              7f2c 003a  ld   $3a         ;':'
              7f2d 0049  ld   $49         ;'I'
              7f2e 003d  ld   $3d         ;'='
              7f2f 0059  ld   $59         ;'Y'
              7f30 0000  ld   $00         ;'\x00'
              7f31 002e  ld   $2e
              7f32 00c0  ld   $c0
              7f33 0011  ld   $11
              7f34 009f  ld   $9f
              7f35 000c  ld   $0c
              7f36 0049  ld   $49         ;'I'
              7f37 0046  ld   $46         ;'F'
              7f38 0049  ld   $49         ;'I'
              7f39 003c  ld   $3c         ;'<'
              7f3a 003d  ld   $3d         ;'='
              7f3b 0030  ld   $30         ;'0'
              7f3c 0047  ld   $47         ;'G'
              7f3d 004f  ld   $4f         ;'O'
              7f3e 0054  ld   $54         ;'T'
              7f3f 004f  ld   $4f         ;'O'
              7f40 0033  ld   $33         ;'3'
              7f41 0032  ld   $32         ;'2'
              7f42 0034  ld   $34         ;'4'
              7f43 0030  ld   $30         ;'0'
              7f44 0000  ld   $00         ;'\x00'
              7f45 002e  ld   $2e
              7f46 00e0  ld   $e0
              7f47 0011  ld   $11
              7f48 00a0  ld   $a0
              7f49 000c  ld   $0c
              7f4a 0049  ld   $49         ;'I'
              7f4b 0046  ld   $46         ;'F'
              7f4c 0049  ld   $49         ;'I'
              7f4d 003c  ld   $3c         ;'<'
              7f4e 0031  ld   $31         ;'1'
              7f4f 0030  ld   $30         ;'0'
              7f50 0047  ld   $47         ;'G'
              7f51 004f  ld   $4f         ;'O'
              7f52 0054  ld   $54         ;'T'
              7f53 004f  ld   $4f         ;'O'
              7f54 0033  ld   $33         ;'3'
              7f55 0032  ld   $32         ;'2'
              7f56 0037  ld   $37         ;'7'
              7f57 0030  ld   $30         ;'0'
              7f58 0000  ld   $00         ;'\x00'
              7f59 002f  ld   $2f
              7f5a 00a0  ld   $a0
              7f5b 0014  ld   $14
              7f5c 00a8  ld   $a8
              7f5d 000c  ld   $0c
              7f5e 003f  ld   $3f         ;'?'
              7f5f 0022  ld   $22         ;'"'
              7f60 0050  ld   $50         ;'P'
              7f61 004c  ld   $4c         ;'L'
              7f62 0045  ld   $45         ;'E'
              7f63 0041  ld   $41         ;'A'
              7f64 0053  ld   $53         ;'S'
              7f65 0045  ld   $45         ;'E'
              7f66 0020  ld   $20         ;' '
              7f67 0054  ld   $54         ;'T'
              7f68 0059  ld   $59         ;'Y'
              7f69 0050  ld   $50         ;'P'
              7f6a 0045  ld   $45         ;'E'
              7f6b 0020  ld   $20         ;' '
              7f6c 0041  ld   $41         ;'A'
              7f6d 0022  ld   $22         ;'"'
              7f6e 003b  ld   $3b         ;';'
              7f6f 0000  ld   $00         ;'\x00'
              7f70 002f  ld   $2f
              7f71 00c0  ld   $c0
              7f72 000d  ld   $0d
              7f73 00aa  ld   $aa
              7f74 000c  ld   $0c
              7f75 003f  ld   $3f         ;'?'
              7f76 0022  ld   $22         ;'"'
              7f77 0020  ld   $20         ;' '
              7f78 004e  ld   $4e         ;'N'
              7f79 0055  ld   $55         ;'U'
              7f7a 004d  ld   $4d         ;'M'
              7f7b 0042  ld   $42         ;'B'
              7f7c 0045  ld   $45         ;'E'
              7f7d 0052  ld   $52         ;'R'
              7f7e 0022  ld   $22         ;'"'
              7f7f 0000  ld   $00         ;'\x00'
              7f80 002f  ld   $2f
              7f81 00e0  ld   $e0
              7f82 0016  ld   $16
              7f83 00ab  ld   $ab
              7f84 000c  ld   $0c
              7f85 003f  ld   $3f         ;'?'
              7f86 0022  ld   $22         ;'"'
              7f87 0042  ld   $42         ;'B'
              7f88 0045  ld   $45         ;'E'
              7f89 0054  ld   $54         ;'T'
              7f8a 0057  ld   $57         ;'W'
              7f8b 0045  ld   $45         ;'E'
              7f8c 0045  ld   $45         ;'E'
              7f8d 004e  ld   $4e         ;'N'
              7f8e 0020  ld   $20         ;' '
              7f8f 0031  ld   $31         ;'1'
              7f90 0020  ld   $20         ;' '
              7f91 0041  ld   $41         ;'A'
              7f92 004e  ld   $4e         ;'N'
              7f93 0044  ld   $44         ;'D'
              7f94 0020  ld   $20         ;' '
              7f95 0039  ld   $39         ;'9'
              7f96 0022  ld   $22         ;'"'
              7f97 003b  ld   $3b         ;';'
              7f98 0000  ld   $00         ;'\x00'
              7f99 0030  ld   $30
              7f9a 00a0  ld   $a0
              7f9b 0010  ld   $10
              7f9c 00b3  ld   $b3
              7f9d 000c  ld   $0c
              7f9e 003f  ld   $3f         ;'?'
              7f9f 0022  ld   $22         ;'"'
              7fa0 0020  ld   $20         ;' '
              7fa1 0057  ld   $57         ;'W'
              7fa2 0048  ld   $48         ;'H'
              7fa3 0045  ld   $45         ;'E'
              7fa4 0052  ld   $52         ;'R'
              7fa5 0045  ld   $45         ;'E'
              7fa6 0020  ld   $20         ;' '
              7fa7 0059  ld   $59         ;'Y'
              7fa8 004f  ld   $4f         ;'O'
              7fa9 0055  ld   $55         ;'U'
              7faa 0022  ld   $22         ;'"'
              7fab 0000  ld   $00         ;'\x00'
              7fac 0030  ld   $30
              7fad 00c0  ld   $c0
              7fae 0013  ld   $13
              7faf 00b4  ld   $b4
              7fb0 000c  ld   $0c
              7fb1 003f  ld   $3f         ;'?'
              7fb2 0022  ld   $22         ;'"'
              7fb3 0057  ld   $57         ;'W'
              7fb4 0049  ld   $49         ;'I'
              7fb5 0053  ld   $53         ;'S'
              7fb6 0048  ld   $48         ;'H'
              7fb7 0020  ld   $20         ;' '
              7fb8 0054  ld   $54         ;'T'
              7fb9 004f  ld   $4f         ;'O'
              7fba 0020  ld   $20         ;' '
              7fbb 0050  ld   $50         ;'P'
              7fbc 004c  ld   $4c         ;'L'
              7fbd 0041  ld   $41         ;'A'
              7fbe 0059  ld   $59         ;'Y'
              7fbf 0022  ld   $22         ;'"'
              7fc0 003b  ld   $3b         ;';'
              7fc1 0000  ld   $00         ;'\x00'
              7fc2 0030  ld   $30
              7fc3 00e0  ld   $e0
              7fc4 000d  ld   $0d
              7fc5 00b5  ld   $b5
              7fc6 000c  ld   $0c
              7fc7 003f  ld   $3f         ;'?'
              7fc8 0022  ld   $22         ;'"'
              7fc9 0020  ld   $20         ;' '
              7fca 0059  ld   $59         ;'Y'
              7fcb 004f  ld   $4f         ;'O'
              7fcc 0055  ld   $55         ;'U'
              7fcd 0052  ld   $52         ;'R'
              7fce 0020  ld   $20         ;' '
              7fcf 0058  ld   $58         ;'X'
              7fd0 0022  ld   $22         ;'"'
              7fd1 0000  ld   $00         ;'\x00'
              7fd2 0031  ld   $31
              7fd3 00a0  ld   $a0
              7fd4 000b  ld   $0b
              7fd5 00bc  ld   $bc
              7fd6 000c  ld   $0c
              7fd7 0047  ld   $47         ;'G'
              7fd8 004f  ld   $4f         ;'O'
              7fd9 0054  ld   $54         ;'T'
              7fda 004f  ld   $4f         ;'O'
              7fdb 0033  ld   $33         ;'3'
              7fdc 0032  ld   $32         ;'2'
              7fdd 0031  ld   $31         ;'1'
              7fde 0030  ld   $30         ;'0'
              7fdf 0000  ld   $00         ;'\x00'
              7fe0 0031  ld   $31
              7fe1 00c0  ld   $c0
              7fe2 0015  ld   $15
              7fe3 00c6  ld   $c6
              7fe4 000c  ld   $0c
              7fe5 0049  ld   $49         ;'I'
              7fe6 0046  ld   $46         ;'F'
              7fe7 0041  ld   $41         ;'A'
              7fe8 0028  ld   $28         ;'('
              7fe9 0049  ld   $49         ;'I'
              7fea 002b  ld   $2b         ;'+'
              7feb 0036  ld   $36         ;'6'
              7fec 0029  ld   $29         ;')'
              7fed 003d  ld   $3d         ;'='
              7fee 0030  ld   $30         ;'0'
              7fef 0047  ld   $47         ;'G'
              7ff0 004f  ld   $4f         ;'O'
              7ff1 0054  ld   $54         ;'T'
              7ff2 004f  ld   $4f         ;'O'
              7ff3 0033  ld   $33         ;'3'
              7ff4 0033  ld   $33         ;'3'
              7ff5 0031  ld   $31         ;'1'
              7ff6 0030  ld   $30         ;'0'
              7ff7 0000  ld   $00         ;'\x00'
              7ff8 0031  ld   $31
              7ff9 00e0  ld   $e0
              7ffa 0015  ld   $15
              7ffb fe00  bra  ac          ;+-----------------------------------+
              7ffc fcfd  bra  $7ffd       ;|                                   |
              7ffd 1418  ld   $18,y       ;| Trampoline for page $7f00 lookups |
              7ffe e006  jmp  y,$06       ;|                                   |
              7fff c218  st   [$18]       ;+-----------------------------------+
              8000 00d1  ld   $d1
              8001 000c  ld   $0c
              8002 003f  ld   $3f         ;'?'
              8003 0022  ld   $22         ;'"'
              8004 0054  ld   $54         ;'T'
              8005 0048  ld   $48         ;'H'
              8006 0041  ld   $41         ;'A'
              8007 0054  ld   $54         ;'T'
              8008 0020  ld   $20         ;' '
              8009 0053  ld   $53         ;'S'
              800a 0051  ld   $51         ;'Q'
              800b 0055  ld   $55         ;'U'
              800c 0041  ld   $41         ;'A'
              800d 0052  ld   $52         ;'R'
              800e 0045  ld   $45         ;'E'
              800f 0020  ld   $20         ;' '
              8010 0049  ld   $49         ;'I'
              8011 0053  ld   $53         ;'S'
              8012 0022  ld   $22         ;'"'
              8013 003b  ld   $3b         ;';'
              8014 0000  ld   $00         ;'\x00'
              8015 0032  ld   $32
              8016 00a0  ld   $a0
              8017 0017  ld   $17
              8018 00d2  ld   $d2
              8019 000c  ld   $0c
              801a 003f  ld   $3f         ;'?'
              801b 0022  ld   $22         ;'"'
              801c 0020  ld   $20         ;' '
              801d 0041  ld   $41         ;'A'
              801e 004c  ld   $4c         ;'L'
              801f 0052  ld   $52         ;'R'
              8020 0045  ld   $45         ;'E'
              8021 0041  ld   $41         ;'A'
              8022 0044  ld   $44         ;'D'
              8023 0059  ld   $59         ;'Y'
              8024 0022  ld   $22         ;'"'
              8025 003a  ld   $3a         ;':'
              8026 003f  ld   $3f         ;'?'
              8027 0022  ld   $22         ;'"'
              8028 0054  ld   $54         ;'T'
              8029 0041  ld   $41         ;'A'
              802a 004b  ld   $4b         ;'K'
              802b 0045  ld   $45         ;'E'
              802c 004e  ld   $4e         ;'N'
              802d 0022  ld   $22         ;'"'
              802e 0000  ld   $00         ;'\x00'
              802f 0032  ld   $32
              8030 00c0  ld   $c0
              8031 000b  ld   $0b
              8032 00da  ld   $da
              8033 000c  ld   $0c
              8034 0047  ld   $47         ;'G'
              8035 004f  ld   $4f         ;'O'
              8036 0054  ld   $54         ;'T'
              8037 004f  ld   $4f         ;'O'
              8038 0033  ld   $33         ;'3'
              8039 0032  ld   $32         ;'2'
              803a 0031  ld   $31         ;'1'
              803b 0030  ld   $30         ;'0'
              803c 0000  ld   $00         ;'\x00'
              803d 0032  ld   $32
              803e 00e0  ld   $e0
              803f 0011  ld   $11
              8040 00ee  ld   $ee
              8041 000c  ld   $0c
              8042 0041  ld   $41         ;'A'
              8043 0028  ld   $28         ;'('
              8044 0049  ld   $49         ;'I'
              8045 002b  ld   $2b         ;'+'
              8046 0036  ld   $36         ;'6'
              8047 0029  ld   $29         ;')'
              8048 003d  ld   $3d         ;'='
              8049 0031  ld   $31         ;'1'
              804a 003a  ld   $3a         ;':'
              804b 0055  ld   $55         ;'U'
              804c 003d  ld   $3d         ;'='
              804d 0055  ld   $55         ;'U'
              804e 002d  ld   $2d         ;'-'
              804f 0031  ld   $31         ;'1'
              8050 0000  ld   $00         ;'\x00'
              8051 0033  ld   $33
              8052 00a0  ld   $a0
              8053 0009  ld   $09
              8054 00f8  ld   $f8
              8055 000c  ld   $0c
              8056 0057  ld   $57         ;'W'
              8057 003d  ld   $3d         ;'='
              8058 0036  ld   $36         ;'6'
              8059 0031  ld   $31         ;'1'
              805a 0030  ld   $30         ;'0'
              805b 0030  ld   $30         ;'0'
              805c 0000  ld   $00         ;'\x00'
              805d 0033  ld   $33
              805e 00c0  ld   $c0
              805f 0009  ld   $09
              8060 0002  ld   $02
              8061 000d  ld   $0d
              8062 0047  ld   $47         ;'G'
              8063 004f  ld   $4f         ;'O'
              8064 0053  ld   $53         ;'S'
              8065 0055  ld   $55         ;'U'
              8066 0042  ld   $42         ;'B'
              8067 0057  ld   $57         ;'W'
              8068 0000  ld   $00         ;'\x00'
              8069 0033  ld   $33
              806a 00e0  ld   $e0
              806b 0011  ld   $11
              806c 000d  ld   $0d
              806d 000d  ld   $0d
              806e 0049  ld   $49         ;'I'
              806f 0046  ld   $46         ;'F'
              8070 004a  ld   $4a         ;'J'
              8071 003c  ld   $3c         ;'<'
              8072 003d  ld   $3d         ;'='
              8073 0030  ld   $30         ;'0'
              8074 0047  ld   $47         ;'G'
              8075 004f  ld   $4f         ;'O'
              8076 0054  ld   $54         ;'T'
              8077 004f  ld   $4f         ;'O'
              8078 0033  ld   $33         ;'3'
              8079 0033  ld   $33         ;'3'
              807a 0035  ld   $35         ;'5'
              807b 0030  ld   $30         ;'0'
              807c 0000  ld   $00         ;'\x00'
              807d 0034  ld   $34
              807e 00a0  ld   $a0
              807f 0014  ld   $14
              8080 000e  ld   $0e
              8081 000d  ld   $0d
              8082 0049  ld   $49         ;'I'
              8083 0046  ld   $46         ;'F'
              8084 004c  ld   $4c         ;'L'
              8085 002a  ld   $2a         ;'*'
              8086 004d  ld   $4d         ;'M'
              8087 002a  ld   $2a         ;'*'
              8088 004e  ld   $4e         ;'N'
              8089 003d  ld   $3d         ;'='
              808a 0031  ld   $31         ;'1'
              808b 0047  ld   $47         ;'G'
              808c 004f  ld   $4f         ;'O'
              808d 0054  ld   $54         ;'T'
              808e 004f  ld   $4f         ;'O'
              808f 0031  ld   $31         ;'1'
              8090 0035  ld   $35         ;'5'
              8091 0031  ld   $31         ;'1'
              8092 0030  ld   $30         ;'0'
              8093 0000  ld   $00         ;'\x00'
              8094 0034  ld   $34
              8095 00c0  ld   $c0
              8096 000a  ld   $0a
              8097 0016  ld   $16
              8098 000d  ld   $0d
              8099 0057  ld   $57         ;'W'
              809a 003d  ld   $3d         ;'='
              809b 0057  ld   $57         ;'W'
              809c 002b  ld   $2b         ;'+'
              809d 0031  ld   $31         ;'1'
              809e 0030  ld   $30         ;'0'
              809f 0030  ld   $30         ;'0'
              80a0 0000  ld   $00         ;'\x00'
              80a1 0034  ld   $34
              80a2 00e0  ld   $e0
              80a3 0013  ld   $13
              80a4 0020  ld   $20
              80a5 000d  ld   $0d
              80a6 0049  ld   $49         ;'I'
              80a7 0046  ld   $46         ;'F'
              80a8 0057  ld   $57         ;'W'
              80a9 003c  ld   $3c         ;'<'
              80aa 0036  ld   $36         ;'6'
              80ab 0035  ld   $35         ;'5'
              80ac 0030  ld   $30         ;'0'
              80ad 0030  ld   $30         ;'0'
              80ae 0047  ld   $47         ;'G'
              80af 004f  ld   $4f         ;'O'
              80b0 0054  ld   $54         ;'T'
              80b1 004f  ld   $4f         ;'O'
              80b2 0033  ld   $33         ;'3'
              80b3 0033  ld   $33         ;'3'
              80b4 0033  ld   $33         ;'3'
              80b5 0030  ld   $30         ;'0'
              80b6 0000  ld   $00         ;'\x00'
              80b7 0035  ld   $35
              80b8 00a0  ld   $a0
              80b9 0010  ld   $10
              80ba 0052  ld   $52
              80bb 000d  ld   $0d
              80bc 0049  ld   $49         ;'I'
              80bd 0046  ld   $46         ;'F'
              80be 0055  ld   $55         ;'U'
              80bf 003d  ld   $3d         ;'='
              80c0 0030  ld   $30         ;'0'
              80c1 0047  ld   $47         ;'G'
              80c2 004f  ld   $4f         ;'O'
              80c3 0054  ld   $54         ;'T'
              80c4 004f  ld   $4f         ;'O'
              80c5 0032  ld   $32         ;'2'
              80c6 0030  ld   $30         ;'0'
              80c7 0031  ld   $31         ;'1'
              80c8 0030  ld   $30         ;'0'
              80c9 0000  ld   $00         ;'\x00'
              80ca 0035  ld   $35
              80cb 00c0  ld   $c0
              80cc 0006  ld   $06
              80cd 00aa  ld   $aa
              80ce 000f  ld   $0f
              80cf 0049  ld   $49         ;'I'
              80d0 003d  ld   $3d         ;'='
              80d1 0031  ld   $31         ;'1'
              80d2 0000  ld   $00         ;'\x00'
              80d3 0035  ld   $35
              80d4 00e0  ld   $e0
              80d5 0007  ld   $07
              80d6 00b4  ld   $b4
              80d7 000f  ld   $0f
              80d8 0054  ld   $54         ;'T'
              80d9 003d  ld   $3d         ;'='
              80da 002d  ld   $2d         ;'-'
              80db 0031  ld   $31         ;'1'
              80dc 0000  ld   $00         ;'\x00'
              80dd 0036  ld   $36
              80de 00a0  ld   $a0
              80df 0006  ld   $06
              80e0 00cc  ld   $cc
              80e1 0010  ld   $10
              80e2 0053  ld   $53         ;'S'
              80e3 003d  ld   $3d         ;'='
              80e4 0030  ld   $30         ;'0'
              80e5 0000  ld   $00         ;'\x00'
              80e6 0036  ld   $36
              80e7 00c0  ld   $c0
              80e8 0015  ld   $15
              80e9 00d7  ld   $d7
              80ea 0010  ld   $10
              80eb 0049  ld   $49         ;'I'
              80ec 0046  ld   $46         ;'F'
              80ed 0041  ld   $41         ;'A'
              80ee 0028  ld   $28         ;'('
              80ef 0049  ld   $49         ;'I'
              80f0 002b  ld   $2b         ;'+'
              80f1 0036  ld   $36         ;'6'
              80f2 0029  ld   $29         ;')'
              80f3 003e  ld   $3e         ;'>'
              80f4 0030  ld   $30         ;'0'
              80f5 0047  ld   $47         ;'G'
              80f6 004f  ld   $4f         ;'O'
              80f7 0054  ld   $54         ;'T'
              80f8 004f  ld   $4f         ;'O'
              80f9 0034  ld   $34         ;'4'
              80fa 0034  ld   $34         ;'4'
              80fb fe00  bra  ac          ;+-----------------------------------+
              80fc fcfd  bra  $80fd       ;|                                   |
              80fd 1418  ld   $18,y       ;| Trampoline for page $8000 lookups |
              80fe e006  jmp  y,$06       ;|                                   |
              80ff c218  st   [$18]       ;+-----------------------------------+
              8100 0038  ld   $38         ;'8'
              8101 0030  ld   $30         ;'0'
              8102 0000  ld   $00         ;'\x00'
              8103 0036  ld   $36
              8104 00e0  ld   $e0
              8105 0009  ld   $09
              8106 00e0  ld   $e0
              8107 0010  ld   $10
              8108 0057  ld   $57         ;'W'
              8109 003d  ld   $3d         ;'='
              810a 0036  ld   $36         ;'6'
              810b 0031  ld   $31         ;'1'
              810c 0030  ld   $30         ;'0'
              810d 0030  ld   $30         ;'0'
              810e 0000  ld   $00         ;'\x00'
              810f 0037  ld   $37
              8110 00a0  ld   $a0
              8111 0009  ld   $09
              8112 00ea  ld   $ea
              8113 0010  ld   $10
              8114 0047  ld   $47         ;'G'
              8115 004f  ld   $4f         ;'O'
              8116 0053  ld   $53         ;'S'
              8117 0055  ld   $55         ;'U'
              8118 0042  ld   $42         ;'B'
              8119 0057  ld   $57         ;'W'
              811a 0000  ld   $00         ;'\x00'
              811b 0037  ld   $37
              811c 00c0  ld   $c0
              811d 0010  ld   $10
              811e 00f4  ld   $f4
              811f 0010  ld   $10
              8120 0049  ld   $49         ;'I'
              8121 0046  ld   $46         ;'F'
              8122 004a  ld   $4a         ;'J'
              8123 003d  ld   $3d         ;'='
              8124 0030  ld   $30         ;'0'
              8125 0047  ld   $47         ;'G'
              8126 004f  ld   $4f         ;'O'
              8127 0054  ld   $54         ;'T'
              8128 004f  ld   $4f         ;'O'
              8129 0034  ld   $34         ;'4'
              812a 0034  ld   $34         ;'4'
              812b 0031  ld   $31         ;'1'
              812c 0030  ld   $30         ;'0'
              812d 0000  ld   $00         ;'\x00'
              812e 0037  ld   $37
              812f 00e0  ld   $e0
              8130 000a  ld   $0a
              8131 00fe  ld   $fe
              8132 0010  ld   $10
              8133 004a  ld   $4a         ;'J'
              8134 003d  ld   $3d         ;'='
              8135 004c  ld   $4c         ;'L'
              8136 002b  ld   $2b         ;'+'
              8137 004d  ld   $4d         ;'M'
              8138 002b  ld   $2b         ;'+'
              8139 004e  ld   $4e         ;'N'
              813a 0000  ld   $00         ;'\x00'
              813b 0038  ld   $38
              813c 00a0  ld   $a0
              813d 0010  ld   $10
              813e 0009  ld   $09
              813f 0011  ld   $11
              8140 0049  ld   $49         ;'I'
              8141 0046  ld   $46         ;'F'
              8142 004a  ld   $4a         ;'J'
              8143 003d  ld   $3d         ;'='
              8144 0034  ld   $34         ;'4'
              8145 0047  ld   $47         ;'G'
              8146 004f  ld   $4f         ;'O'
              8147 0054  ld   $54         ;'T'
              8148 004f  ld   $4f         ;'O'
              8149 0034  ld   $34         ;'4'
              814a 0034  ld   $34         ;'4'
              814b 0031  ld   $31         ;'1'
              814c 0030  ld   $30         ;'0'
              814d 0000  ld   $00         ;'\x00'
              814e 0038  ld   $38
              814f 00c0  ld   $c0
              8150 000e  ld   $0e
              8151 0013  ld   $13
              8152 0011  ld   $11
              8153 0049  ld   $49         ;'I'
              8154 0046  ld   $46         ;'F'
              8155 004a  ld   $4a         ;'J'
              8156 003d  ld   $3d         ;'='
              8157 0032  ld   $32         ;'2'
              8158 0053  ld   $53         ;'S'
              8159 003d  ld   $3d         ;'='
              815a 0053  ld   $53         ;'S'
              815b 002b  ld   $2b         ;'+'
              815c 0032  ld   $32         ;'2'
              815d 0030  ld   $30         ;'0'
              815e 0000  ld   $00         ;'\x00'
              815f 0038  ld   $38
              8160 00e0  ld   $e0
              8161 000f  ld   $0f
              8162 001d  ld   $1d
              8163 0011  ld   $11
              8164 0049  ld   $49         ;'I'
              8165 0046  ld   $46         ;'F'
              8166 004a  ld   $4a         ;'J'
              8167 003d  ld   $3d         ;'='
              8168 0036  ld   $36         ;'6'
              8169 0053  ld   $53         ;'S'
              816a 003d  ld   $3d         ;'='
              816b 0053  ld   $53         ;'S'
              816c 002b  ld   $2b         ;'+'
              816d 0031  ld   $31         ;'1'
              816e 0030  ld   $30         ;'0'
              816f 0030  ld   $30         ;'0'
              8170 0000  ld   $00         ;'\x00'
              8171 0039  ld   $39
              8172 00a0  ld   $a0
              8173 000d  ld   $0d
              8174 0027  ld   $27
              8175 0011  ld   $11
              8176 0049  ld   $49         ;'I'
              8177 0046  ld   $46         ;'F'
              8178 004a  ld   $4a         ;'J'
              8179 003d  ld   $3d         ;'='
              817a 0030  ld   $30         ;'0'
              817b 0053  ld   $53         ;'S'
              817c 003d  ld   $3d         ;'='
              817d 0053  ld   $53         ;'S'
              817e 002b  ld   $2b         ;'+'
              817f 0032  ld   $32         ;'2'
              8180 0000  ld   $00         ;'\x00'
              8181 0039  ld   $39
              8182 00c0  ld   $c0
              8183 0008  ld   $08
              8184 0030  ld   $30
              8185 0011  ld   $11
              8186 0053  ld   $53         ;'S'
              8187 003d  ld   $3d         ;'='
              8188 0053  ld   $53         ;'S'
              8189 002b  ld   $2b         ;'+'
              818a 004a  ld   $4a         ;'J'
              818b 0000  ld   $00         ;'\x00'
              818c 0039  ld   $39
              818d 00e0  ld   $e0
              818e 000a  ld   $0a
              818f 003a  ld   $3a
              8190 0011  ld   $11
              8191 0057  ld   $57         ;'W'
              8192 003d  ld   $3d         ;'='
              8193 0057  ld   $57         ;'W'
              8194 002b  ld   $2b         ;'+'
              8195 0031  ld   $31         ;'1'
              8196 0030  ld   $30         ;'0'
              8197 0030  ld   $30         ;'0'
              8198 0000  ld   $00         ;'\x00'
              8199 003a  ld   $3a
              819a 00a0  ld   $a0
              819b 0013  ld   $13
              819c 0044  ld   $44
              819d 0011  ld   $11
              819e 0049  ld   $49         ;'I'
              819f 0046  ld   $46         ;'F'
              81a0 0057  ld   $57         ;'W'
              81a1 003c  ld   $3c         ;'<'
              81a2 0036  ld   $36         ;'6'
              81a3 0035  ld   $35         ;'5'
              81a4 0030  ld   $30         ;'0'
              81a5 0030  ld   $30         ;'0'
              81a6 0047  ld   $47         ;'G'
              81a7 004f  ld   $4f         ;'O'
              81a8 0054  ld   $54         ;'T'
              81a9 004f  ld   $4f         ;'O'
              81aa 0034  ld   $34         ;'4'
              81ab 0033  ld   $33         ;'3'
              81ac 0033  ld   $33         ;'3'
              81ad 0030  ld   $30         ;'0'
              81ae 0000  ld   $00         ;'\x00'
              81af 003a  ld   $3a
              81b0 00c0  ld   $c0
              81b1 0010  ld   $10
              81b2 004f  ld   $4f
              81b3 0011  ld   $11
              81b4 0049  ld   $49         ;'I'
              81b5 0046  ld   $46         ;'F'
              81b6 0053  ld   $53         ;'S'
              81b7 003c  ld   $3c         ;'<'
              81b8 0054  ld   $54         ;'T'
              81b9 0047  ld   $47         ;'G'
              81ba 004f  ld   $4f         ;'O'
              81bb 0054  ld   $54         ;'T'
              81bc 004f  ld   $4f         ;'O'
              81bd 0034  ld   $34         ;'4'
              81be 0034  ld   $34         ;'4'
              81bf 0037  ld   $37         ;'7'
              81c0 0030  ld   $30         ;'0'
              81c1 0000  ld   $00         ;'\x00'
              81c2 003a  ld   $3a
              81c3 00e0  ld   $e0
              81c4 0006  ld   $06
              81c5 0058  ld   $58
              81c6 0011  ld   $11
              81c7 0054  ld   $54         ;'T'
              81c8 003d  ld   $3d         ;'='
              81c9 0053  ld   $53         ;'S'
              81ca 0000  ld   $00         ;'\x00'
              81cb 003b  ld   $3b
              81cc 00a0  ld   $a0
              81cd 0006  ld   $06
              81ce 0062  ld   $62
              81cf 0011  ld   $11
              81d0 0042  ld   $42         ;'B'
              81d1 003d  ld   $3d         ;'='
              81d2 0049  ld   $49         ;'I'
              81d3 0000  ld   $00         ;'\x00'
              81d4 003b  ld   $3b
              81d5 00c0  ld   $c0
              81d6 0008  ld   $08
              81d7 0076  ld   $76
              81d8 0011  ld   $11
              81d9 003f  ld   $3f         ;'?'
              81da 0022  ld   $22         ;'"'
              81db 002e  ld   $2e         ;'.'
              81dc 0022  ld   $22         ;'"'
              81dd 003b  ld   $3b         ;';'
              81de 0000  ld   $00         ;'\x00'
              81df 003b  ld   $3b
              81e0 00e0  ld   $e0
              81e1 0008  ld   $08
              81e2 0080  ld   $80
              81e3 0011  ld   $11
              81e4 0049  ld   $49         ;'I'
              81e5 003d  ld   $3d         ;'='
              81e6 0049  ld   $49         ;'I'
              81e7 002b  ld   $2b         ;'+'
              81e8 0031  ld   $31         ;'1'
              81e9 0000  ld   $00         ;'\x00'
              81ea 003c  ld   $3c
              81eb 00a0  ld   $a0
              81ec 0011  ld   $11
              81ed 008a  ld   $8a
              81ee 0011  ld   $11
              81ef 0049  ld   $49         ;'I'
              81f0 0046  ld   $46         ;'F'
              81f1 0049  ld   $49         ;'I'
              81f2 003c  ld   $3c         ;'<'
              81f3 0031  ld   $31         ;'1'
              81f4 0030  ld   $30         ;'0'
              81f5 0047  ld   $47         ;'G'
              81f6 004f  ld   $4f         ;'O'
              81f7 0054  ld   $54         ;'T'
              81f8 004f  ld   $4f         ;'O'
              81f9 0034  ld   $34         ;'4'
              81fa 0033  ld   $33         ;'3'
              81fb fe00  bra  ac          ;+-----------------------------------+
              81fc fcfd  bra  $81fd       ;|                                   |
              81fd 1418  ld   $18,y       ;| Trampoline for page $8100 lookups |
              81fe e006  jmp  y,$06       ;|                                   |
              81ff c218  st   [$18]       ;+-----------------------------------+
              8200 0030  ld   $30         ;'0'
              8201 0030  ld   $30         ;'0'
              8202 0000  ld   $00         ;'\x00'
              8203 003c  ld   $3c
              8204 00c0  ld   $c0
              8205 000f  ld   $0f
              8206 0094  ld   $94
              8207 0011  ld   $11
              8208 003f  ld   $3f         ;'?'
              8209 0022  ld   $22         ;'"'
              820a 0049  ld   $49         ;'I'
              820b 0020  ld   $20         ;' '
              820c 0050  ld   $50         ;'P'
              820d 004c  ld   $4c         ;'L'
              820e 0041  ld   $41         ;'A'
              820f 0059  ld   $59         ;'Y'
              8210 0020  ld   $20         ;' '
              8211 0022  ld   $22         ;'"'
              8212 003b  ld   $3b         ;';'
              8213 0042  ld   $42         ;'B'
              8214 0000  ld   $00         ;'\x00'
              8215 003c  ld   $3c
              8216 00e0  ld   $e0
              8217 0004  ld   $04
              8218 009e  ld   $9e
              8219 0011  ld   $11
              821a 003f  ld   $3f         ;'?'
              821b 0000  ld   $00         ;'\x00'
              821c 003d  ld   $3d
              821d 00a0  ld   $a0
              821e 000b  ld   $0b
              821f 00a9  ld   $a9
              8220 0011  ld   $11
              8221 0041  ld   $41         ;'A'
              8222 0028  ld   $28         ;'('
              8223 0042  ld   $42         ;'B'
              8224 002b  ld   $2b         ;'+'
              8225 0036  ld   $36         ;'6'
              8226 0029  ld   $29         ;')'
              8227 003d  ld   $3d         ;'='
              8228 0033  ld   $33         ;'3'
              8229 0000  ld   $00         ;'\x00'
              822a 003d  ld   $3d
              822b 00c0  ld   $c0
              822c 0008  ld   $08
              822d 00b2  ld   $b2
              822e 0011  ld   $11
              822f 0055  ld   $55         ;'U'
              8230 003d  ld   $3d         ;'='
              8231 0055  ld   $55         ;'U'
              8232 002d  ld   $2d         ;'-'
              8233 0031  ld   $31         ;'1'
              8234 0000  ld   $00         ;'\x00'
              8235 003d  ld   $3d
              8236 00e0  ld   $e0
              8237 0012  ld   $12
              8238 00bd  ld   $bd
              8239 0011  ld   $11
              823a 0049  ld   $49         ;'I'
              823b 0046  ld   $46         ;'F'
              823c 0054  ld   $54         ;'T'
              823d 003c  ld   $3c         ;'<'
              823e 0031  ld   $31         ;'1'
              823f 0030  ld   $30         ;'0'
              8240 0030  ld   $30         ;'0'
              8241 0047  ld   $47         ;'G'
              8242 004f  ld   $4f         ;'O'
              8243 0054  ld   $54         ;'T'
              8244 004f  ld   $4f         ;'O'
              8245 0032  ld   $32         ;'2'
              8246 0030  ld   $30         ;'0'
              8247 0031  ld   $31         ;'1'
              8248 0030  ld   $30         ;'0'
              8249 0000  ld   $00         ;'\x00'
              824a 003e  ld   $3e
              824b 00a0  ld   $a0
              824c 0006  ld   $06
              824d 00d0  ld   $d0
              824e 0011  ld   $11
              824f 0046  ld   $46         ;'F'
              8250 003d  ld   $3d         ;'='
              8251 0031  ld   $31         ;'1'
              8252 0000  ld   $00         ;'\x00'
              8253 003e  ld   $3e
              8254 00c0  ld   $c0
              8255 0006  ld   $06
              8256 00da  ld   $da
              8257 0011  ld   $11
              8258 005a  ld   $5a         ;'Z'
              8259 003d  ld   $3d         ;'='
              825a 0031  ld   $31         ;'1'
              825b 0000  ld   $00         ;'\x00'
              825c 003e  ld   $3e
              825d 00e0  ld   $e0
              825e 000b  ld   $0b
              825f 00e4  ld   $e4
              8260 0011  ld   $11
              8261 0047  ld   $47         ;'G'
              8262 004f  ld   $4f         ;'O'
              8263 0054  ld   $54         ;'T'
              8264 004f  ld   $4f         ;'O'
              8265 0032  ld   $32         ;'2'
              8266 0030  ld   $30         ;'0'
              8267 0031  ld   $31         ;'1'
              8268 0030  ld   $30         ;'0'
              8269 0000  ld   $00         ;'\x00'
              826a 003f  ld   $3f
              826b 00a0  ld   $a0
              826c 0010  ld   $10
              826d 00d4  ld   $d4
              826e 0017  ld   $17
              826f 004a  ld   $4a         ;'J'
              8270 003d  ld   $3d         ;'='
              8271 0028  ld   $28         ;'('
              8272 0049  ld   $49         ;'I'
              8273 002d  ld   $2d         ;'-'
              8274 0031  ld   $31         ;'1'
              8275 0029  ld   $29         ;')'
              8276 002f  ld   $2f         ;'/'
              8277 0033  ld   $33         ;'3'
              8278 002a  ld   $2a         ;'*'
              8279 0033  ld   $33         ;'3'
              827a 002b  ld   $2b         ;'+'
              827b 0038  ld   $38         ;'8'
              827c 0000  ld   $00         ;'\x00'
              827d 003f  ld   $3f
              827e 00c0  ld   $c0
              827f 0006  ld   $06
              8280 00de  ld   $de
              8281 0017  ld   $17
              8282 0044  ld   $44         ;'D'
              8283 003d  ld   $3d         ;'='
              8284 0031  ld   $31         ;'1'
              8285 0000  ld   $00         ;'\x00'
              8286 003f  ld   $3f
              8287 00e0  ld   $e0
              8288 000b  ld   $0b
              8289 00e8  ld   $e8
              828a 0017  ld   $17
              828b 0047  ld   $47         ;'G'
              828c 004f  ld   $4f         ;'O'
              828d 0054  ld   $54         ;'T'
              828e 004f  ld   $4f         ;'O'
              828f 0036  ld   $36         ;'6'
              8290 0035  ld   $35         ;'5'
              8291 0030  ld   $30         ;'0'
              8292 0030  ld   $30         ;'0'
              8293 0000  ld   $00         ;'\x00'
              8294 0040  ld   $40
              8295 00a0  ld   $a0
              8296 0012  ld   $12
              8297 0038  ld   $38
              8298 0018  ld   $18
              8299 004a  ld   $4a         ;'J'
              829a 003d  ld   $3d         ;'='
              829b 0049  ld   $49         ;'I'
              829c 002d  ld   $2d         ;'-'
              829d 0028  ld   $28         ;'('
              829e 0049  ld   $49         ;'I'
              829f 002d  ld   $2d         ;'-'
              82a0 0031  ld   $31         ;'1'
              82a1 0029  ld   $29         ;')'
              82a2 002f  ld   $2f         ;'/'
              82a3 0033  ld   $33         ;'3'
              82a4 002a  ld   $2a         ;'*'
              82a5 0033  ld   $33         ;'3'
              82a6 002b  ld   $2b         ;'+'
              82a7 0039  ld   $39         ;'9'
              82a8 0000  ld   $00         ;'\x00'
              82a9 0040  ld   $40
              82aa 00c0  ld   $c0
              82ab 0006  ld   $06
              82ac 0042  ld   $42
              82ad 0018  ld   $18
              82ae 0044  ld   $44         ;'D'
              82af 003d  ld   $3d         ;'='
              82b0 0033  ld   $33         ;'3'
              82b1 0000  ld   $00         ;'\x00'
              82b2 0040  ld   $40
              82b3 00e0  ld   $e0
              82b4 000b  ld   $0b
              82b5 004c  ld   $4c
              82b6 0018  ld   $18
              82b7 0047  ld   $47         ;'G'
              82b8 004f  ld   $4f         ;'O'
              82b9 0054  ld   $54         ;'T'
              82ba 004f  ld   $4f         ;'O'
              82bb 0036  ld   $36         ;'6'
              82bc 0035  ld   $35         ;'5'
              82bd 0030  ld   $30         ;'0'
              82be 0030  ld   $30         ;'0'
              82bf 0000  ld   $00         ;'\x00'
              82c0 0041  ld   $41
              82c1 00a0  ld   $a0
              82c2 0013  ld   $13
              82c3 009c  ld   $9c
              82c4 0018  ld   $18
              82c5 0049  ld   $49         ;'I'
              82c6 0046  ld   $46         ;'F'
              82c7 0049  ld   $49         ;'I'
              82c8 0025  ld   $25         ;'%'
              82c9 0034  ld   $34         ;'4'
              82ca 003c  ld   $3c         ;'<'
              82cb 003e  ld   $3e         ;'>'
              82cc 0031  ld   $31         ;'1'
              82cd 0047  ld   $47         ;'G'
              82ce 004f  ld   $4f         ;'O'
              82cf 0054  ld   $54         ;'T'
              82d0 004f  ld   $4f         ;'O'
              82d1 0036  ld   $36         ;'6'
              82d2 0034  ld   $34         ;'4'
              82d3 0034  ld   $34         ;'4'
              82d4 0030  ld   $30         ;'0'
              82d5 0000  ld   $00         ;'\x00'
              82d6 0041  ld   $41
              82d7 00c0  ld   $c0
              82d8 0006  ld   $06
              82d9 00a6  ld   $a6
              82da 0018  ld   $18
              82db 0044  ld   $44         ;'D'
              82dc 003d  ld   $3d         ;'='
              82dd 0034  ld   $34         ;'4'
              82de 0000  ld   $00         ;'\x00'
              82df 0041  ld   $41
              82e0 00e0  ld   $e0
              82e1 0007  ld   $07
              82e2 00ba  ld   $ba
              82e3 0018  ld   $18
              82e4 004a  ld   $4a         ;'J'
              82e5 003d  ld   $3d         ;'='
              82e6 0031  ld   $31         ;'1'
              82e7 0031  ld   $31         ;'1'
              82e8 0000  ld   $00         ;'\x00'
              82e9 0042  ld   $42
              82ea 00a0  ld   $a0
              82eb 000b  ld   $0b
              82ec 00c4  ld   $c4
              82ed 0018  ld   $18
              82ee 0047  ld   $47         ;'G'
              82ef 004f  ld   $4f         ;'O'
              82f0 0054  ld   $54         ;'T'
              82f1 004f  ld   $4f         ;'O'
              82f2 0036  ld   $36         ;'6'
              82f3 0035  ld   $35         ;'5'
              82f4 0030  ld   $30         ;'0'
              82f5 0030  ld   $30         ;'0'
              82f6 0000  ld   $00         ;'\x00'
              82f7 0042  ld   $42
              82f8 00c0  ld   $c0
              82f9 0006  ld   $06
              82fa 0000  ld   $00
              82fb fe00  bra  ac          ;+-----------------------------------+
              82fc fcfd  bra  $82fd       ;|                                   |
              82fd 1418  ld   $18,y       ;| Trampoline for page $8200 lookups |
              82fe e006  jmp  y,$06       ;|                                   |
              82ff c218  st   [$18]       ;+-----------------------------------+
              8300 0019  ld   $19
              8301 0044  ld   $44         ;'D'
              8302 003d  ld   $3d         ;'='
              8303 0032  ld   $32         ;'2'
              8304 0000  ld   $00         ;'\x00'
              8305 0042  ld   $42
              8306 00e0  ld   $e0
              8307 0011  ld   $11
              8308 000b  ld   $0b
              8309 0019  ld   $19
              830a 0049  ld   $49         ;'I'
              830b 0046  ld   $46         ;'F'
              830c 0049  ld   $49         ;'I'
              830d 003c  ld   $3c         ;'<'
              830e 003d  ld   $3d         ;'='
              830f 0031  ld   $31         ;'1'
              8310 0047  ld   $47         ;'G'
              8311 004f  ld   $4f         ;'O'
              8312 0054  ld   $54         ;'T'
              8313 004f  ld   $4f         ;'O'
              8314 0036  ld   $36         ;'6'
              8315 0034  ld   $34         ;'4'
              8316 0034  ld   $34         ;'4'
              8317 0030  ld   $30         ;'0'
              8318 0000  ld   $00         ;'\x00'
              8319 0043  ld   $43
              831a 00a0  ld   $a0
              831b 0011  ld   $11
              831c 000c  ld   $0c
              831d 0019  ld   $19
              831e 0049  ld   $49         ;'I'
              831f 0046  ld   $46         ;'F'
              8320 0049  ld   $49         ;'I'
              8321 003e  ld   $3e         ;'>'
              8322 003d  ld   $3d         ;'='
              8323 0039  ld   $39         ;'9'
              8324 0047  ld   $47         ;'G'
              8325 004f  ld   $4f         ;'O'
              8326 0054  ld   $54         ;'T'
              8327 004f  ld   $4f         ;'O'
              8328 0036  ld   $36         ;'6'
              8329 0034  ld   $34         ;'4'
              832a 0034  ld   $34         ;'4'
              832b 0030  ld   $30         ;'0'
              832c 0000  ld   $00         ;'\x00'
              832d 0043  ld   $43
              832e 00c0  ld   $c0
              832f 0012  ld   $12
              8330 000d  ld   $0d
              8331 0019  ld   $19
              8332 0049  ld   $49         ;'I'
              8333 0046  ld   $46         ;'F'
              8334 0049  ld   $49         ;'I'
              8335 0025  ld   $25         ;'%'
              8336 0032  ld   $32         ;'2'
              8337 003d  ld   $3d         ;'='
              8338 0031  ld   $31         ;'1'
              8339 0047  ld   $47         ;'G'
              833a 004f  ld   $4f         ;'O'
              833b 0054  ld   $54         ;'T'
              833c 004f  ld   $4f         ;'O'
              833d 0036  ld   $36         ;'6'
              833e 0033  ld   $33         ;'3'
              833f 0033  ld   $33         ;'3'
              8340 0030  ld   $30         ;'0'
              8341 0000  ld   $00         ;'\x00'
              8342 0043  ld   $43
              8343 00e0  ld   $e0
              8344 0006  ld   $06
              8345 0028  ld   $28
              8346 0019  ld   $19
              8347 004a  ld   $4a         ;'J'
              8348 003d  ld   $3d         ;'='
              8349 0030  ld   $30         ;'0'
              834a 0000  ld   $00         ;'\x00'
              834b 0044  ld   $44
              834c 00a0  ld   $a0
              834d 0009  ld   $09
              834e 0032  ld   $32
              834f 0019  ld   $19
              8350 0052  ld   $52         ;'R'
              8351 0045  ld   $45         ;'E'
              8352 0054  ld   $54         ;'T'
              8353 0055  ld   $55         ;'U'
              8354 0052  ld   $52         ;'R'
              8355 004e  ld   $4e         ;'N'
              8356 0000  ld   $00         ;'\x00'
              8357 0044  ld   $44
              8358 00c0  ld   $c0
              8359 000b  ld   $0b
              835a 0064  ld   $64
              835b 0019  ld   $19
              835c 004c  ld   $4c         ;'L'
              835d 003d  ld   $3d         ;'='
              835e 0041  ld   $41         ;'A'
              835f 0028  ld   $28         ;'('
              8360 004a  ld   $4a         ;'J'
              8361 002d  ld   $2d         ;'-'
              8362 0044  ld   $44         ;'D'
              8363 0029  ld   $29         ;')'
              8364 0000  ld   $00         ;'\x00'
              8365 0044  ld   $44
              8366 00e0  ld   $e0
              8367 0009  ld   $09
              8368 0066  ld   $66
              8369 0019  ld   $19
              836a 004d  ld   $4d         ;'M'
              836b 003d  ld   $3d         ;'='
              836c 0041  ld   $41         ;'A'
              836d 0028  ld   $28         ;'('
              836e 004a  ld   $4a         ;'J'
              836f 0029  ld   $29         ;')'
              8370 0000  ld   $00         ;'\x00'
              8371 0045  ld   $45
              8372 00a0  ld   $a0
              8373 000b  ld   $0b
              8374 006e  ld   $6e
              8375 0019  ld   $19
              8376 004e  ld   $4e         ;'N'
              8377 003d  ld   $3d         ;'='
              8378 0041  ld   $41         ;'A'
              8379 0028  ld   $28         ;'('
              837a 004a  ld   $4a         ;'J'
              837b 002b  ld   $2b         ;'+'
              837c 0044  ld   $44         ;'D'
              837d 0029  ld   $29         ;')'
              837e 0000  ld   $00         ;'\x00'
              837f 0045  ld   $45
              8380 00c0  ld   $c0
              8381 0009  ld   $09
              8382 0082  ld   $82
              8383 0019  ld   $19
              8384 0052  ld   $52         ;'R'
              8385 0045  ld   $45         ;'E'
              8386 0054  ld   $54         ;'T'
              8387 0055  ld   $55         ;'U'
              8388 0052  ld   $52         ;'R'
              8389 004e  ld   $4e         ;'N'
              838a 0000  ld   $00         ;'\x00'
              838b 0045  ld   $45
              838c 00e2  ld   $e2
              838d 0004  ld   $04
              838e 0052  ld   $52         ;'R'
              838f 0055  ld   $55         ;'U'
              8390 004e  ld   $4e         ;'N'
              8391 0000  ld   $00         ;'\x00'
              8392 001b  ld   $1b
              8393 00a0  ld   $a0
              8394 0002  ld   $02
              8395 00e0  ld   $e0
              8396 0045  ld   $45
              8397 0000  ld   $00
              8398 0000  ld   $00         ;End of Apps/TicTac/TicTac_v2.gtb, size 2012
                                          ;+-----------------------------------+
                                          ;| Apps/WozMon/WozMon_v2.gcl         |
                                          ;+-----------------------------------+
              8399 dc54  st   $54,[y,x++] ;'T'
              839a dc69  st   $69,[y,x++] ;'i'
              839b dc63  st   $63,[y,x++] ;'c'
              839c dc54  st   $54,[y,x++] ;'T'
              839d dc61  st   $61,[y,x++] ;'a'
              839e dc63  st   $63,[y,x++] ;'c'
              839f dc00  st   $00,[y,x++] ;'\x00'
              83a0 dc00  st   $00,[y,x++] ;'\x00'
              83a1 009a  ld   $9a
              83a2 c218  st   [$18]
              83a3 007b  ld   $7b
              83a4 14e0  ld   $e0,y
              83a5 e02e  jmp  y,$2e
              83a6 c219  st   [$19]
WozMon:       83a7 0002  ld   $02         ;| RAM segment address (high byte first)
              83a8 0000  ld   $00         ;|
              83a9 00e2  ld   $e2         ;| Length (1..256)
              83aa 00cd  ld   $cd         ;0200 DEF
              83ab 000a  ld   $0a
              83ac 002a  ld   $2a
              83ad 002a  ld   $2a
              83ae 0020  ld   $20
              83af 0057  ld   $57
              83b0 006f  ld   $6f
              83b1 007a  ld   $7a
              83b2 004d  ld   $4d
              83b3 006f  ld   $6f
              83b4 006e  ld   $6e
              83b5 0000  ld   $00
              83b6 002b  ld   $2b         ;020c STW
              83b7 0030  ld   $30         ;020c 'tmp'
              83b8 0011  ld   $11         ;020e LDWI
              83b9 00df  ld   $df
              83ba 0001  ld   $01
              83bb 00f6  ld   $f6         ;0211 DEEK
              83bc 002b  ld   $2b         ;0212 STW
              83bd 0032  ld   $32         ;0212 'Pos'
              83be 00cd  ld   $cd         ;0214 DEF
              83bf 0060  ld   $60
              83c0 00e6  ld   $e6         ;0216 SUBI
              83c1 0052  ld   $52
              83c2 0035  ld   $35         ;0218 BCC
              83c3 0053  ld   $53         ;0219 GE
              83c4 0022  ld   $22
              83c5 00e3  ld   $e3         ;021b ADDI
              83c6 0032  ld   $32
              83c7 002b  ld   $2b         ;021d STW
              83c8 0034  ld   $34         ;021d 'i'
              83c9 0011  ld   $11         ;021f LDWI
              83ca 0000  ld   $00
              83cb 0007  ld   $07
              83cc 0090  ld   $90         ;0222 BRA
              83cd 0027  ld   $27
              83ce 002b  ld   $2b         ;0224 STW
              83cf 0034  ld   $34         ;0224 'i'
              83d0 0011  ld   $11         ;0226 LDWI
              83d1 0000  ld   $00
              83d2 0008  ld   $08
              83d3 002b  ld   $2b         ;0229 STW
              83d4 0036  ld   $36         ;0229 'k'
              83d5 0021  ld   $21         ;022b LDW
              83d6 0034  ld   $34         ;022b 'i'
              83d7 00e9  ld   $e9         ;022d LSLW
              83d8 00e9  ld   $e9         ;022e LSLW
              83d9 0099  ld   $99         ;022f ADDW
              83da 0034  ld   $34         ;022f 'i'
              83db 0099  ld   $99         ;0231 ADDW
              83dc 0036  ld   $36         ;0231 'k'
              83dd 002b  ld   $2b         ;0233 STW
              83de 0036  ld   $36         ;0233 'k'
              83df 0011  ld   $11         ;0235 LDWI
              83e0 00e1  ld   $e1
              83e1 0004  ld   $04
              83e2 002b  ld   $2b         ;0238 STW
              83e3 0022  ld   $22
              83e4 0021  ld   $21         ;023a LDW
              83e5 002a  ld   $2a
              83e6 002b  ld   $2b         ;023c STW
              83e7 0024  ld   $24
              83e8 0021  ld   $21         ;023e LDW
              83e9 0032  ld   $32         ;023e 'Pos'
              83ea 002b  ld   $2b         ;0240 STW
              83eb 0028  ld   $28
              83ec 00ec  ld   $ec         ;0242 STLW
              83ed 00fe  ld   $fe
              83ee 00e3  ld   $e3         ;0244 ADDI
              83ef 0006  ld   $06
              83f0 002b  ld   $2b         ;0246 STW
              83f1 0032  ld   $32         ;0246 'Pos'
              83f2 0059  ld   $59         ;0248 LDI
              83f3 0005  ld   $05
              83f4 002b  ld   $2b         ;024a STW
              83f5 0034  ld   $34         ;024a 'i'
              83f6 0021  ld   $21         ;024c LDW
              83f7 0036  ld   $36         ;024c 'k'
              83f8 007f  ld   $7f         ;024e LUP
              83f9 0000  ld   $00
              83fa 005e  ld   $5e         ;0250 ST
              83fb fe00  bra  ac          ;+-----------------------------------+
              83fc fcfd  bra  $83fd       ;|                                   |
              83fd 1418  ld   $18,y       ;| Trampoline for page $8300 lookups |
              83fe e006  jmp  y,$06       ;|                                   |
              83ff c218  st   [$18]       ;+-----------------------------------+
              8400 0026  ld   $26
              8401 00b4  ld   $b4         ;0252 SYS
              8402 00cc  ld   $cc
              8403 0093  ld   $93         ;0254 INC
              8404 0036  ld   $36         ;0254 'k'
              8405 0093  ld   $93         ;0256 INC
              8406 0028  ld   $28
              8407 0021  ld   $21         ;0258 LDW
              8408 0034  ld   $34         ;0258 'i'
              8409 00e6  ld   $e6         ;025a SUBI
              840a 0001  ld   $01
              840b 0035  ld   $35         ;025c BCC
              840c 004d  ld   $4d         ;025d GT
              840d 0048  ld   $48
              840e 00ee  ld   $ee         ;025f LDLW
              840f 00fe  ld   $fe
              8410 00ff  ld   $ff         ;0261 RET
              8411 002b  ld   $2b         ;0262 STW
              8412 0038  ld   $38         ;0262 'PrintChar'
              8413 00cd  ld   $cd         ;0264 DEF
              8414 00ad  ld   $ad
              8415 001a  ld   $1a         ;0266 LD
              8416 0032  ld   $32         ;0266 'Pos'
              8417 0035  ld   $35         ;0268 BCC
              8418 003f  ld   $3f         ;0269 EQ
              8419 00ac  ld   $ac
              841a 0011  ld   $11         ;026b LDWI
              841b 00e1  ld   $e1
              841c 0004  ld   $04
              841d 002b  ld   $2b         ;026e STW
              841e 0022  ld   $22
              841f 0011  ld   $11         ;0270 LDWI
              8420 0000  ld   $00
              8421 0008  ld   $08
              8422 005e  ld   $5e         ;0273 ST
              8423 0032  ld   $32         ;0273 'Pos'
              8424 0099  ld   $99         ;0275 ADDW
              8425 0032  ld   $32         ;0275 'Pos'
              8426 0035  ld   $35         ;0277 BCC
              8427 0053  ld   $53         ;0278 GE
              8428 007b  ld   $7b
              8429 0011  ld   $11         ;027a LDWI
              842a 0000  ld   $00
              842b 0008  ld   $08
              842c 002b  ld   $2b         ;027d STW
              842d 0032  ld   $32         ;027d 'Pos'
              842e 002b  ld   $2b         ;027f STW
              842f 0028  ld   $28
              8430 005e  ld   $5e         ;0281 ST
              8431 0026  ld   $26
              8432 00b4  ld   $b4         ;0283 SYS
              8433 00cc  ld   $cc
              8434 0093  ld   $93         ;0285 INC
              8435 0028  ld   $28
              8436 001a  ld   $1a         ;0287 LD
              8437 0028  ld   $28
              8438 008c  ld   $8c         ;0289 XORI
              8439 00a0  ld   $a0
              843a 0035  ld   $35         ;028b BCC
              843b 0072  ld   $72         ;028c NE
              843c 0081  ld   $81
              843d 0011  ld   $11         ;028e LDWI
              843e 00ee  ld   $ee
              843f 0001  ld   $01
              8440 002b  ld   $2b         ;0291 STW
              8441 0034  ld   $34         ;0291 'i'
              8442 0021  ld   $21         ;0293 LDW
              8443 0034  ld   $34         ;0293 'i'
              8444 00ad  ld   $ad         ;0295 PEEK
              8445 00e6  ld   $e6         ;0296 SUBI
              8446 0078  ld   $78
              8447 0035  ld   $35         ;0298 BCC
              8448 0053  ld   $53         ;0299 GE
              8449 009d  ld   $9d
              844a 008c  ld   $8c         ;029b XORI
              844b 0080  ld   $80
              844c 0090  ld   $90         ;029d BRA
              844d 009f  ld   $9f
              844e 008c  ld   $8c         ;029f XORI
              844f 0008  ld   $08
              8450 00f0  ld   $f0         ;02a1 POKE
              8451 0034  ld   $34         ;02a1 'i'
              8452 0021  ld   $21         ;02a3 LDW
              8453 0034  ld   $34         ;02a3 'i'
              8454 00e6  ld   $e6         ;02a5 SUBI
              8455 0002  ld   $02
              8456 002b  ld   $2b         ;02a7 STW
              8457 0034  ld   $34         ;02a7 'i'
              8458 008c  ld   $8c         ;02a9 XORI
              8459 00fe  ld   $fe
              845a 0035  ld   $35         ;02ab BCC
              845b 0072  ld   $72         ;02ac NE
              845c 0091  ld   $91
              845d 00ff  ld   $ff         ;02ae RET
              845e 002b  ld   $2b         ;02af STW
              845f 003a  ld   $3a         ;02af 'CNewline'
              8460 00cd  ld   $cd         ;02b1 DEF
              8461 00d9  ld   $d9
              8462 0075  ld   $75         ;02b3 PUSH
              8463 002b  ld   $2b         ;02b4 STW
              8464 0030  ld   $30         ;02b4 'tmp'
              8465 0011  ld   $11         ;02b6 LDWI
              8466 0052  ld   $52
              8467 0006  ld   $06
              8468 002b  ld   $2b         ;02b9 STW
              8469 0022  ld   $22
              846a 0021  ld   $21         ;02bb LDW
              846b 0030  ld   $30         ;02bb 'tmp'
              846c 00b4  ld   $b4         ;02bd SYS
              846d 00f6  ld   $f6
              846e 00e6  ld   $e6         ;02bf SUBI
              846f 000a  ld   $0a
              8470 0035  ld   $35         ;02c1 BCC
              8471 0050  ld   $50         ;02c2 LT
              8472 00c4  ld   $c4
              8473 00e3  ld   $e3         ;02c4 ADDI
              8474 0007  ld   $07
              8475 00e3  ld   $e3         ;02c6 ADDI
              8476 003a  ld   $3a
              8477 00cf  ld   $cf         ;02c8 CALL
              8478 0038  ld   $38         ;02c8 'PrintChar'
              8479 0021  ld   $21         ;02ca LDW
              847a 0030  ld   $30         ;02ca 'tmp'
              847b 0082  ld   $82         ;02cc ANDI
              847c 000f  ld   $0f
              847d 00e6  ld   $e6         ;02ce SUBI
              847e 000a  ld   $0a
              847f 0035  ld   $35         ;02d0 BCC
              8480 0050  ld   $50         ;02d1 LT
              8481 00d3  ld   $d3
              8482 00e3  ld   $e3         ;02d3 ADDI
              8483 0007  ld   $07
              8484 00e3  ld   $e3         ;02d5 ADDI
              8485 003a  ld   $3a
              8486 00cf  ld   $cf         ;02d7 CALL
              8487 0038  ld   $38         ;02d7 'PrintChar'
              8488 0063  ld   $63         ;02d9 POP
              8489 00ff  ld   $ff         ;02da RET
              848a 002b  ld   $2b         ;02db STW
              848b 003c  ld   $3c         ;02db 'PrintByte'
              848c 0011  ld   $11         ;02dd LDWI
              848d 0000  ld   $00
              848e 0003  ld   $03
              848f 00cf  ld   $cf         ;02e0 CALL
              8490 0018  ld   $18         ;02e0 vAC
              8491 0003  ld   $03         ;| RAM segment address (high byte first)
              8492 0000  ld   $00         ;|
              8493 00f3  ld   $f3         ;| Length (1..256)
              8494 00cd  ld   $cd         ;0300 DEF
              8495 00d3  ld   $d3
              8496 0075  ld   $75         ;0302 PUSH
              8497 0059  ld   $59         ;0303 LDI
              8498 0080  ld   $80
              8499 002b  ld   $2b         ;0305 STW
              849a 003e  ld   $3e         ;0305 'Buffer'
              849b 00cf  ld   $cf         ;0307 CALL
              849c 003a  ld   $3a         ;0307 'CNewline'
              849d 0093  ld   $93         ;0309 INC
              849e 003e  ld   $3e         ;0309 'Buffer'
              849f 0021  ld   $21         ;030b LDW
              84a0 003e  ld   $3e         ;030b 'Buffer'
              84a1 00ad  ld   $ad         ;030d PEEK
              84a2 0035  ld   $35         ;030e BCC
              84a3 003f  ld   $3f         ;030f EQ
              84a4 00d1  ld   $d1
              84a5 00e6  ld   $e6         ;0311 SUBI
              84a6 002e  ld   $2e
              84a7 0035  ld   $35         ;0313 BCC
              84a8 0050  ld   $50         ;0314 LT
              84a9 0007  ld   $07
              84aa 0035  ld   $35         ;0316 BCC
              84ab 0072  ld   $72         ;0317 NE
              84ac 001d  ld   $1d
              84ad 0059  ld   $59         ;0319 LDI
              84ae 0001  ld   $01
              84af 002b  ld   $2b         ;031b STW
              84b0 0040  ld   $40         ;031b 'Mode'
              84b1 0090  ld   $90         ;031d BRA
              84b2 0007  ld   $07
              84b3 00e6  ld   $e6         ;031f SUBI
              84b4 000c  ld   $0c
              84b5 0035  ld   $35         ;0321 BCC
              84b6 0072  ld   $72         ;0322 NE
              84b7 0028  ld   $28
              84b8 00e6  ld   $e6         ;0324 SUBI
              84b9 0001  ld   $01
              84ba 002b  ld   $2b         ;0326 STW
              84bb 0040  ld   $40         ;0326 'Mode'
              84bc 0090  ld   $90         ;0328 BRA
              84bd 0007  ld   $07
              84be 00e6  ld   $e6         ;032a SUBI
              84bf 0018  ld   $18
              84c0 0035  ld   $35         ;032c BCC
              84c1 0072  ld   $72         ;032d NE
              84c2 0031  ld   $31
              84c3 00cf  ld   $cf         ;032f CALL
              84c4 0042  ld   $42         ;032f 'Examine'
              84c5 0090  ld   $90         ;0331 BRA
              84c6 0007  ld   $07
              84c7 0059  ld   $59         ;0333 LDI
              84c8 0000  ld   $00
              84c9 002b  ld   $2b         ;0335 STW
              84ca 0030  ld   $30         ;0335 'tmp'
              84cb 002b  ld   $2b         ;0337 STW
              84cc 0044  ld   $44         ;0337 'Value'
              84cd 00e9  ld   $e9         ;0339 LSLW
              84ce 00e9  ld   $e9         ;033a LSLW
              84cf 00e9  ld   $e9         ;033b LSLW
              84d0 00e9  ld   $e9         ;033c LSLW
              84d1 002b  ld   $2b         ;033d STW
              84d2 0034  ld   $34         ;033d 'i'
              84d3 0021  ld   $21         ;033f LDW
              84d4 003e  ld   $3e         ;033f 'Buffer'
              84d5 00ad  ld   $ad         ;0341 PEEK
              84d6 0093  ld   $93         ;0342 INC
              84d7 003e  ld   $3e         ;0342 'Buffer'
              84d8 00e6  ld   $e6         ;0344 SUBI
              84d9 0030  ld   $30
              84da 0035  ld   $35         ;0346 BCC
              84db 0050  ld   $50         ;0347 LT
              84dc 0068  ld   $68
              84dd 00e6  ld   $e6         ;0349 SUBI
              84de 000a  ld   $0a
              84df 0035  ld   $35         ;034b BCC
              84e0 0053  ld   $53         ;034c GE
              84e1 0054  ld   $54
              84e2 002b  ld   $2b         ;034e STW
              84e3 0030  ld   $30         ;034e 'tmp'
              84e4 00e3  ld   $e3         ;0350 ADDI
              84e5 000a  ld   $0a
              84e6 0099  ld   $99         ;0352 ADDW
              84e7 0034  ld   $34         ;0352 'i'
              84e8 0090  ld   $90         ;0354 BRA
              84e9 0035  ld   $35
              84ea 00e6  ld   $e6         ;0356 SUBI
              84eb 0006  ld   $06
              84ec 0082  ld   $82         ;0358 ANDI
              84ed 001f  ld   $1f
              84ee 0035  ld   $35         ;035a BCC
              84ef 0056  ld   $56         ;035b LE
              84f0 0068  ld   $68
              84f1 00e6  ld   $e6         ;035d SUBI
              84f2 0007  ld   $07
              84f3 0035  ld   $35         ;035f BCC
              84f4 0053  ld   $53         ;0360 GE
              84f5 0068  ld   $68
              84f6 002b  ld   $2b         ;0362 STW
              84f7 0030  ld   $30         ;0362 'tmp'
              84f8 00e3  ld   $e3         ;0364 ADDI
              84f9 0010  ld   $10
              84fa 0099  ld   $99         ;0366 ADDW
              84fb fe00  bra  ac          ;+-----------------------------------+
              84fc fcfd  bra  $84fd       ;|                                   |
              84fd 1418  ld   $18,y       ;| Trampoline for page $8400 lookups |
              84fe e006  jmp  y,$06       ;|                                   |
              84ff c218  st   [$18]       ;+-----------------------------------+
              8500 0034  ld   $34         ;0366 'i'
              8501 0090  ld   $90         ;0368 BRA
              8502 0035  ld   $35
              8503 0021  ld   $21         ;036a LDW
              8504 0030  ld   $30         ;036a 'tmp'
              8505 0035  ld   $35         ;036c BCC
              8506 003f  ld   $3f         ;036d EQ
              8507 00cd  ld   $cd
              8508 0021  ld   $21         ;036f LDW
              8509 003e  ld   $3e         ;036f 'Buffer'
              850a 00e6  ld   $e6         ;0371 SUBI
              850b 0002  ld   $02
              850c 002b  ld   $2b         ;0373 STW
              850d 003e  ld   $3e         ;0373 'Buffer'
              850e 0021  ld   $21         ;0375 LDW
              850f 0040  ld   $40         ;0375 'Mode'
              8510 0035  ld   $35         ;0377 BCC
              8511 0053  ld   $53         ;0378 GE
              8512 0084  ld   $84
              8513 0021  ld   $21         ;037a LDW
              8514 0044  ld   $44         ;037a 'Value'
              8515 00f0  ld   $f0         ;037c POKE
              8516 0046  ld   $46         ;037c 'Store'
              8517 0021  ld   $21         ;037e LDW
              8518 0046  ld   $46         ;037e 'Store'
              8519 00e3  ld   $e3         ;0380 ADDI
              851a 0001  ld   $01
              851b 002b  ld   $2b         ;0382 STW
              851c 0046  ld   $46         ;0382 'Store'
              851d 0090  ld   $90         ;0384 BRA
              851e 0007  ld   $07
              851f 0035  ld   $35         ;0386 BCC
              8520 0072  ld   $72         ;0387 NE
              8521 0091  ld   $91
              8522 00cf  ld   $cf         ;0389 CALL
              8523 003a  ld   $3a         ;0389 'CNewline'
              8524 0021  ld   $21         ;038b LDW
              8525 0044  ld   $44         ;038b 'Value'
              8526 002b  ld   $2b         ;038d STW
              8527 0046  ld   $46         ;038d 'Store'
              8528 00e6  ld   $e6         ;038f SUBI
              8529 0001  ld   $01
              852a 002b  ld   $2b         ;0391 STW
              852b 0042  ld   $42         ;0391 'Examine'
              852c 0021  ld   $21         ;0393 LDW
              852d 0042  ld   $42         ;0393 'Examine'
              852e 00b8  ld   $b8         ;0395 SUBW
              852f 0044  ld   $44         ;0395 'Value'
              8530 0035  ld   $35         ;0397 BCC
              8531 0053  ld   $53         ;0398 GE
              8532 00c7  ld   $c7
              8533 0021  ld   $21         ;039a LDW
              8534 0042  ld   $42         ;039a 'Examine'
              8535 00e3  ld   $e3         ;039c ADDI
              8536 0001  ld   $01
              8537 002b  ld   $2b         ;039e STW
              8538 0042  ld   $42         ;039e 'Examine'
              8539 0082  ld   $82         ;03a0 ANDI
              853a 0007  ld   $07
              853b 0035  ld   $35         ;03a2 BCC
              853c 0072  ld   $72         ;03a3 NE
              853d 00a5  ld   $a5
              853e 00cf  ld   $cf         ;03a5 CALL
              853f 003a  ld   $3a         ;03a5 'CNewline'
              8540 001a  ld   $1a         ;03a7 LD
              8541 0032  ld   $32         ;03a7 'Pos'
              8542 0035  ld   $35         ;03a9 BCC
              8543 0072  ld   $72         ;03aa NE
              8544 00ba  ld   $ba
              8545 0059  ld   $59         ;03ac LDI
              8546 0002  ld   $02
              8547 005e  ld   $5e         ;03ae ST
              8548 0032  ld   $32         ;03ae 'Pos'
              8549 001a  ld   $1a         ;03b0 LD
              854a 0043  ld   $43         ;03b0 'Examine'+1
              854b 00cf  ld   $cf         ;03b2 CALL
              854c 003c  ld   $3c         ;03b2 'PrintByte'
              854d 001a  ld   $1a         ;03b4 LD
              854e 0042  ld   $42         ;03b4 'Examine'
              854f 00cf  ld   $cf         ;03b6 CALL
              8550 003c  ld   $3c         ;03b6 'PrintByte'
              8551 0059  ld   $59         ;03b8 LDI
              8552 003a  ld   $3a
              8553 00cf  ld   $cf         ;03ba CALL
              8554 0038  ld   $38         ;03ba 'PrintChar'
              8555 0021  ld   $21         ;03bc LDW
              8556 0032  ld   $32         ;03bc 'Pos'
              8557 00e3  ld   $e3         ;03be ADDI
              8558 0004  ld   $04
              8559 002b  ld   $2b         ;03c0 STW
              855a 0032  ld   $32         ;03c0 'Pos'
              855b 0021  ld   $21         ;03c2 LDW
              855c 0042  ld   $42         ;03c2 'Examine'
              855d 00ad  ld   $ad         ;03c4 PEEK
              855e 00cf  ld   $cf         ;03c5 CALL
              855f 003c  ld   $3c         ;03c5 'PrintByte'
              8560 0090  ld   $90         ;03c7 BRA
              8561 0091  ld   $91
              8562 0059  ld   $59         ;03c9 LDI
              8563 0000  ld   $00
              8564 002b  ld   $2b         ;03cb STW
              8565 0040  ld   $40         ;03cb 'Mode'
              8566 0090  ld   $90         ;03cd BRA
              8567 0007  ld   $07
              8568 0059  ld   $59         ;03cf LDI
              8569 005c  ld   $5c
              856a 00cf  ld   $cf         ;03d1 CALL
              856b 0038  ld   $38         ;03d1 'PrintChar'
              856c 0063  ld   $63         ;03d3 POP
              856d 00ff  ld   $ff         ;03d4 RET
              856e 002b  ld   $2b         ;03d5 STW
              856f 0048  ld   $48         ;03d5 'ProcessBuffer'
              8570 0093  ld   $93         ;03d7 INC
              8571 0032  ld   $32         ;03d7 'Pos'
              8572 0011  ld   $11         ;03d9 LDWI
              8573 0020  ld   $20
              8574 000f  ld   $0f
              8575 002b  ld   $2b         ;03dc STW
              8576 002a  ld   $2a
              8577 005e  ld   $5e         ;03de ST
              8578 0024  ld   $24
              8579 00cf  ld   $cf         ;03e0 CALL
              857a 003a  ld   $3a         ;03e0 'CNewline'
              857b 0059  ld   $59         ;03e2 LDI
              857c 002a  ld   $2a
              857d 00cf  ld   $cf         ;03e4 CALL
              857e 0038  ld   $38         ;03e4 'PrintChar'
              857f 0021  ld   $21         ;03e6 LDW
              8580 0030  ld   $30         ;03e6 'tmp'
              8581 00ad  ld   $ad         ;03e8 PEEK
              8582 0093  ld   $93         ;03e9 INC
              8583 0030  ld   $30         ;03e9 'tmp'
              8584 0035  ld   $35         ;03eb BCC
              8585 0072  ld   $72         ;03ec NE
              8586 00e2  ld   $e2
              8587 0011  ld   $11         ;03ee LDWI
              8588 0000  ld   $00
              8589 0004  ld   $04
              858a 00cf  ld   $cf         ;03f1 CALL
              858b 0018  ld   $18         ;03f1 vAC
              858c 0004  ld   $04         ;| RAM segment address (high byte first)
              858d 0000  ld   $00         ;|
              858e 0072  ld   $72         ;| Length (1..256)
              858f 0059  ld   $59         ;0400 LDI
              8590 0081  ld   $81
              8591 002b  ld   $2b         ;0402 STW
              8592 003e  ld   $3e         ;0402 'Buffer'
              8593 00cf  ld   $cf         ;0404 CALL
              8594 003a  ld   $3a         ;0404 'CNewline'
              8595 0059  ld   $59         ;0406 LDI
              8596 007f  ld   $7f
              8597 005e  ld   $5e         ;0408 ST
              8598 002b  ld   $2b
              8599 00cf  ld   $cf         ;040a CALL
              859a 0038  ld   $38         ;040a 'PrintChar'
              859b 002b  ld   $2b         ;040c STW
              859c 0032  ld   $32         ;040c 'Pos'
              859d 001a  ld   $1a         ;040e LD
              859e 000f  ld   $0f
              859f 002b  ld   $2b         ;0410 STW
              85a0 0030  ld   $30         ;0410 'tmp'
              85a1 001a  ld   $1a         ;0412 LD
              85a2 000f  ld   $0f
              85a3 00f0  ld   $f0         ;0414 POKE
              85a4 003e  ld   $3e         ;0414 'Buffer'
              85a5 00fc  ld   $fc         ;0416 XORW
              85a6 0030  ld   $30         ;0416 'tmp'
              85a7 0035  ld   $35         ;0418 BCC
              85a8 0072  ld   $72         ;0419 NE
              85a9 001e  ld   $1e
              85aa 0021  ld   $21         ;041b LDW
              85ab 003e  ld   $3e         ;041b 'Buffer'
              85ac 00ad  ld   $ad         ;041d PEEK
              85ad 0090  ld   $90         ;041e BRA
              85ae 000e  ld   $0e
              85af 0021  ld   $21         ;0420 LDW
              85b0 003e  ld   $3e         ;0420 'Buffer'
              85b1 00ad  ld   $ad         ;0422 PEEK
              85b2 008c  ld   $8c         ;0423 XORI
              85b3 000a  ld   $0a
              85b4 0035  ld   $35         ;0425 BCC
              85b5 003f  ld   $3f         ;0426 EQ
              85b6 0060  ld   $60
              85b7 008c  ld   $8c         ;0428 XORI
              85b8 0075  ld   $75
              85b9 0035  ld   $35         ;042a BCC
              85ba 0072  ld   $72         ;042b NE
              85bb 0042  ld   $42
              85bc 0059  ld   $59         ;042d LDI
              85bd 0020  ld   $20
              85be 00cf  ld   $cf         ;042f CALL
              85bf 0038  ld   $38         ;042f 'PrintChar'
              85c0 002b  ld   $2b         ;0431 STW
              85c1 0032  ld   $32         ;0431 'Pos'
              85c2 001a  ld   $1a         ;0433 LD
              85c3 0032  ld   $32         ;0433 'Pos'
              85c4 00e6  ld   $e6         ;0435 SUBI
              85c5 0006  ld   $06
              85c6 0035  ld   $35         ;0437 BCC
              85c7 0050  ld   $50         ;0438 LT
              85c8 0040  ld   $40
              85c9 005e  ld   $5e         ;043a ST
              85ca 0032  ld   $32         ;043a 'Pos'
              85cb 0021  ld   $21         ;043c LDW
              85cc 003e  ld   $3e         ;043c 'Buffer'
              85cd 00e6  ld   $e6         ;043e SUBI
              85ce 0001  ld   $01
              85cf 002b  ld   $2b         ;0440 STW
              85d0 003e  ld   $3e         ;0440 'Buffer'
              85d1 0090  ld   $90         ;0442 BRA
              85d2 0004  ld   $04
              85d3 00e6  ld   $e6         ;0444 SUBI
              85d4 0060  ld   $60
              85d5 0035  ld   $35         ;0446 BCC
              85d6 0053  ld   $53         ;0447 GE
              85d7 0004  ld   $04
              85d8 001a  ld   $1a         ;0449 LD
              85d9 0032  ld   $32         ;0449 'Pos'
              85da 008c  ld   $8c         ;044b XORI
              85db 0096  ld   $96
              85dc 0035  ld   $35         ;044d BCC
              85dd 0072  ld   $72         ;044e NE
              85de 0057  ld   $57
              85df 0059  ld   $59         ;0450 LDI
              85e0 005c  ld   $5c
              85e1 00cf  ld   $cf         ;0452 CALL
              85e2 0038  ld   $38         ;0452 'PrintChar'
              85e3 0011  ld   $11         ;0454 LDWI
              85e4 0000  ld   $00
              85e5 0004  ld   $04
              85e6 00cf  ld   $cf         ;0457 CALL
              85e7 0018  ld   $18         ;0457 vAC
              85e8 0021  ld   $21         ;0459 LDW
              85e9 003e  ld   $3e         ;0459 'Buffer'
              85ea 00ad  ld   $ad         ;045b PEEK
              85eb 00cf  ld   $cf         ;045c CALL
              85ec 0038  ld   $38         ;045c 'PrintChar'
              85ed 0093  ld   $93         ;045e INC
              85ee 003e  ld   $3e         ;045e 'Buffer'
              85ef 0090  ld   $90         ;0460 BRA
              85f0 0004  ld   $04
              85f1 00f0  ld   $f0         ;0462 POKE
              85f2 003e  ld   $3e         ;0462 'Buffer'
              85f3 002b  ld   $2b         ;0464 STW
              85f4 0040  ld   $40         ;0464 'Mode'
              85f5 0059  ld   $59         ;0466 LDI
              85f6 0020  ld   $20
              85f7 00cf  ld   $cf         ;0468 CALL
              85f8 0038  ld   $38         ;0468 'PrintChar'
              85f9 0059  ld   $59         ;046a LDI
              85fa 000f  ld   $0f
              85fb fe00  bra  ac          ;+-----------------------------------+
              85fc fcfd  bra  $85fd       ;|                                   |
              85fd 1418  ld   $18,y       ;| Trampoline for page $8500 lookups |
              85fe e006  jmp  y,$06       ;|                                   |
              85ff c218  st   [$18]       ;+-----------------------------------+
              8600 005e  ld   $5e         ;046c ST
              8601 002b  ld   $2b
              8602 00cf  ld   $cf         ;046e CALL
              8603 0048  ld   $48         ;046e 'ProcessBuffer'
              8604 0090  ld   $90         ;0470 BRA
              8605 00fe  ld   $fe
              8606 0000  ld   $00         ;End of Apps/WozMon/WozMon_v2.gcl, size 608
                                          ;+-----------------------------------+
                                          ;| Apps/Apple-1/Apple-1_v2.gt1       |
                                          ;+-----------------------------------+
              8607 dc57  st   $57,[y,x++] ;'W'
              8608 dc6f  st   $6f,[y,x++] ;'o'
              8609 dc7a  st   $7a,[y,x++] ;'z'
              860a dc4d  st   $4d,[y,x++] ;'M'
              860b dc6f  st   $6f,[y,x++] ;'o'
              860c dc6e  st   $6e,[y,x++] ;'n'
              860d dc00  st   $00,[y,x++] ;'\x00'
              860e dc00  st   $00,[y,x++] ;'\x00'
              860f 00a7  ld   $a7
              8610 c218  st   [$18]
              8611 0083  ld   $83
              8612 14e0  ld   $e0,y
              8613 e02e  jmp  y,$2e
              8614 c219  st   [$19]
Apple1:       8615 0002  ld   $02
              8616 0000  ld   $00
              8617 0054  ld   $54
              8618 001a  ld   $1a
              8619 0021  ld   $21
              861a 00e6  ld   $e6
              861b 0040  ld   $40
              861c 0035  ld   $35
              861d 0053  ld   $53
              861e 000b  ld   $0b
              861f 0021  ld   $21
              8620 000e  ld   $0e
              8621 00f3  ld   $f3
              8622 0017  ld   $17
              8623 0090  ld   $90
              8624 0005  ld   $05
              8625 0059  ld   $59
              8626 00a0  ld   $a0
              8627 002b  ld   $2b
              8628 0024  ld   $24
              8629 0011  ld   $11
              862a 0060  ld   $60
              862b 007e  ld   $7e
              862c 002b  ld   $2b
              862d 0026  ld   $26
              862e 0011  ld   $11
              862f 0003  ld   $03
              8630 000b  ld   $0b
              8631 002b  ld   $2b
              8632 0022  ld   $22
              8633 00b4  ld   $b4
              8634 00f3  ld   $f3
              8635 0011  ld   $11
              8636 00ee  ld   $ee
              8637 0001  ld   $01
              8638 002b  ld   $2b
              8639 007a  ld   $7a
              863a 0059  ld   $59
              863b 007e  ld   $7e
              863c 00f0  ld   $f0
              863d 007a  ld   $7a
              863e 001a  ld   $1a
              863f 007a  ld   $7a
              8640 00e6  ld   $e6
              8641 0002  ld   $02
              8642 005e  ld   $5e
              8643 007a  ld   $7a
              8644 0035  ld   $35
              8645 0053  ld   $53
              8646 0020  ld   $20
              8647 0011  ld   $11
              8648 0001  ld   $01
              8649 0001  ld   $01
              864a 002b  ld   $2b
              864b 007a  ld   $7a
              864c 0059  ld   $59
              864d 0060  ld   $60
              864e 00f0  ld   $f0
              864f 007a  ld   $7a
              8650 0011  ld   $11
              8651 00ff  ld   $ff
              8652 0010  ld   $10
              8653 002b  ld   $2b
              8654 007a  ld   $7a
              8655 0011  ld   $11
              8656 00f6  ld   $f6
              8657 0001  ld   $01
              8658 002b  ld   $2b
              8659 007c  ld   $7c
              865a 0011  ld   $11
              865b 0000  ld   $00
              865c 005e  ld   $5e
              865d 00f3  ld   $f3
              865e 007c  ld   $7c
              865f 0059  ld   $59
              8660 00fe  ld   $fe
              8661 005e  ld   $5e
              8662 000e  ld   $0e
              8663 0011  ld   $11
              8664 0000  ld   $00
              8665 005f  ld   $5f
              8666 002b  ld   $2b
              8667 001a  ld   $1a
              8668 0011  ld   $11
              8669 00ac  ld   $ac
              866a 005e  ld   $5e
              866b 00ff  ld   $ff
              866c 0003  ld   $03
              866d 0000  ld   $00
              866e 00cf  ld   $cf
              866f 00a2  ld   $a2
              8670 0024  ld   $24
              8671 00bd  ld   $bd
              8672 0093  ld   $93
              8673 0003  ld   $03
              8674 0020  ld   $20
              8675 00ef  ld   $ef
              8676 00ff  ld   $ff
              8677 00ca  ld   $ca
              8678 00d0  ld   $d0
              8679 00f7  ld   $f7
              867a 0086  ld   $86
              867b 00e2  ld   $e2
              867c 00e6  ld   $e6
              867d 00e3  ld   $e3
              867e 00d0  ld   $d0
              867f 0002  ld   $02
              8680 00e6  ld   $e6
              8681 00e4  ld   $e4
              8682 00ad  ld   $ad
              8683 0011  ld   $11
              8684 00d0  ld   $d0
              8685 0010  ld   $10
              8686 00f5  ld   $f5
              8687 0020  ld   $20
              8688 00c6  ld   $c6
              8689 0003  ld   $03
              868a 00e6  ld   $e6
              868b 00e2  ld   $e2
              868c 00a5  ld   $a5
              868d 00e2  ld   $e2
              868e 0029  ld   $29
              868f 000f  ld   $0f
              8690 00c9  ld   $c9
              8691 000a  ld   $0a
              8692 00b0  ld   $b0
              8693 00f6  ld   $f6
              8694 0020  ld   $20
              8695 00c1  ld   $c1
              8696 0003  ld   $03
              8697 00a5  ld   $a5
              8698 00e2  ld   $e2
              8699 0020  ld   $20
              869a 00dc  ld   $dc
              869b 00ff  ld   $ff
              869c 00a9  ld   $a9
              869d 00a0  ld   $a0
              869e 00a8  ld   $a8
              869f 0020  ld   $20
              86a0 00ef  ld   $ef
              86a1 00ff  ld   $ff
              86a2 00a5  ld   $a5
              86a3 00e3  ld   $e3
              86a4 0085  ld   $85
              86a5 00e5  ld   $e5
              86a6 00a5  ld   $a5
              86a7 00e4  ld   $e4
              86a8 00a2  ld   $a2
              86a9 0005  ld   $05
              86aa 0094  ld   $94
              86ab 00e5  ld   $e5
              86ac 00a0  ld   $a0
              86ad 0003  ld   $03
              86ae 004a  ld   $4a
              86af 0026  ld   $26
              86b0 00e5  ld   $e5
              86b1 0036  ld   $36
              86b2 00e5  ld   $e5
              86b3 0088  ld   $88
              86b4 00d0  ld   $d0
              86b5 00f8  ld   $f8
              86b6 00ca  ld   $ca
              86b7 00d0  ld   $d0
              86b8 00f1  ld   $f1
              86b9 0020  ld   $20
              86ba 00c6  ld   $c6
              86bb 0003  ld   $03
              86bc 0020  ld   $20
              86bd 00ef  ld   $ef
              86be 00ff  ld   $ff
              86bf 0049  ld   $49
              86c0 00b0  ld   $b0
              86c1 00c9  ld   $c9
              86c2 0008  ld   $08
              86c3 00b0  ld   $b0
              86c4 00cf  ld   $cf
              86c5 0095  ld   $95
              86c6 00ef  ld   $ef
              86c7 00ca  ld   $ca
              86c8 00e0  ld   $e0
              86c9 00fb  ld   $fb
              86ca 00d0  ld   $d0
              86cb 00ed  ld   $ed
              86cc 00a0  ld   $a0
              86cd 00fb  ld   $fb
              86ce 00a9  ld   $a9
              86cf 00a0  ld   $a0
              86d0 0020  ld   $20
              86d1 00ef  ld   $ef
              86d2 00ff  ld   $ff
              86d3 00b5  ld   $b5
              86d4 00f0  ld   $f0
              86d5 00d5  ld   $d5
              86d6 00eb  ld   $eb
              86d7 00d0  ld   $d0
              86d8 000d  ld   $0d
              86d9 0094  ld   $94
              86da 00eb  ld   $eb
              86db 00a9  ld   $a9
              86dc 00ab  ld   $ab
              86dd 0095  ld   $95
              86de 00f0  ld   $f0
              86df 00c8  ld   $c8
              86e0 00d0  ld   $d0
              86e1 00ee  ld   $ee
              86e2 00a2  ld   $a2
              86e3 002d  ld   $2d
              86e4 00d0  ld   $d0
              86e5 008b  ld   $8b
              86e6 00e8  ld   $e8
              86e7 00d0  ld   $d0
              86e8 00ea  ld   $ea
              86e9 00a0  ld   $a0
              86ea 00fb  ld   $fb
              86eb 00b6  ld   $b6
              86ec 00f0  ld   $f0
              86ed 008a  ld   $8a
              86ee 00a2  ld   $a2
              86ef 00fb  ld   $fb
              86f0 00d5  ld   $d5
              86f1 00eb  ld   $eb
              86f2 00d0  ld   $d0
              86f3 0007  ld   $07
              86f4 0094  ld   $94
              86f5 00eb  ld   $eb
              86f6 00a9  ld   $a9
              86f7 00ad  ld   $ad
              86f8 0020  ld   $20
              86f9 00ef  ld   $ef
              86fa 00ff  ld   $ff
              86fb fe00  bra  ac          ;+-----------------------------------+
              86fc fcfd  bra  $86fd       ;|                                   |
              86fd 1418  ld   $18,y       ;| Trampoline for page $8600 lookups |
              86fe e006  jmp  y,$06       ;|                                   |
              86ff c218  st   [$18]       ;+-----------------------------------+
              8700 00e8  ld   $e8
              8701 00d0  ld   $d0
              8702 00f2  ld   $f2
              8703 00c8  ld   $c8
              8704 00d0  ld   $d0
              8705 00ea  ld   $ea
              8706 00f0  ld   $f0
              8707 0087  ld   $87
              8708 00bf  ld   $bf
              8709 00d9  ld   $d9
              870a 00c4  ld   $c4
              870b 00c1  ld   $c1
              870c 00c5  ld   $c5
              870d 00d2  ld   $d2
              870e 008d  ld   $8d
              870f 008d  ld   $8d
              8710 00b7  ld   $b7
              8711 00ad  ld   $ad
              8712 00b0  ld   $b0
              8713 00a0  ld   $a0
              8714 00cd  ld   $cd
              8715 00cf  ld   $cf
              8716 00d2  ld   $d2
              8717 00c6  ld   $c6
              8718 00a0  ld   $a0
              8719 00d3  ld   $d3
              871a 00d4  ld   $d4
              871b 00c9  ld   $c9
              871c 00c7  ld   $c7
              871d 00c9  ld   $c9
              871e 00c4  ld   $c4
              871f 00a0  ld   $a0
              8720 00c5  ld   $c5
              8721 00d6  ld   $d6
              8722 00c9  ld   $c9
              8723 00c6  ld   $c6
              8724 00a0  ld   $a0
              8725 00d3  ld   $d3
              8726 00d3  ld   $d3
              8727 00c5  ld   $c5
              8728 00d5  ld   $d5
              8729 00c7  ld   $c7
              872a 008d  ld   $8d
              872b 008d  ld   $8d
              872c 00ce  ld   $ce
              872d 00c9  ld   $c9
              872e 00d7  ld   $d7
              872f 00a0  ld   $a0
              8730 00d5  ld   $d5
              8731 00cf  ld   $cf
              8732 00d9  ld   $d9
              8733 00a0  ld   $a0
              8734 00ab  ld   $ab
              8735 00a9  ld   $a9
              8736 008d  ld   $8d
              8737 004c  ld   $4c
              8738 00ef  ld   $ef
              8739 00ff  ld   $ff
              873a 00ad  ld   $ad
              873b 0011  ld   $11
              873c 00d0  ld   $d0
              873d 0010  ld   $10
              873e 00fb  ld   $fb
              873f 00ad  ld   $ad
              8740 0010  ld   $10
              8741 00d0  ld   $d0
              8742 0060  ld   $60
              8743 0004  ld   $04
              8744 0000  ld   $00
              8745 0000  ld   $00
              8746 00d8  ld   $d8
              8747 00a2  ld   $a2
              8748 00ff  ld   $ff
              8749 009a  ld   $9a
              874a 00a9  ld   $a9
              874b 002a  ld   $2a
              874c 0085  ld   $85
              874d 005a  ld   $5a
              874e 0020  ld   $20
              874f 0055  ld   $55
              8750 0005  ld   $05
              8751 00a9  ld   $a9
              8752 008b  ld   $8b
              8753 0085  ld   $85
              8754 0058  ld   $58
              8755 00a9  ld   $a9
              8756 0006  ld   $06
              8757 0085  ld   $85
              8758 0059  ld   $59
              8759 0020  ld   $20
              875a 00ad  ld   $ad
              875b 0004  ld   $04
              875c 0020  ld   $20
              875d 00cb  ld   $cb
              875e 0004  ld   $04
              875f 00d0  ld   $d0
              8760 000e  ld   $0e
              8761 00a9  ld   $a9
              8762 00be  ld   $be
              8763 0085  ld   $85
              8764 0058  ld   $58
              8765 00a9  ld   $a9
              8766 0006  ld   $06
              8767 0085  ld   $85
              8768 0059  ld   $59
              8769 0020  ld   $20
              876a 00ad  ld   $ad
              876b 0004  ld   $04
              876c 0020  ld   $20
              876d 00e8  ld   $e8
              876e 0004  ld   $04
              876f 0020  ld   $20
              8770 001f  ld   $1f
              8771 0006  ld   $06
              8772 0020  ld   $20
              8773 006a  ld   $6a
              8774 0005  ld   $05
              8775 0020  ld   $20
              8776 00e8  ld   $e8
              8777 0004  ld   $04
              8778 0020  ld   $20
              8779 00a8  ld   $a8
              877a 0004  ld   $04
              877b 0020  ld   $20
              877c 0009  ld   $09
              877d 0005  ld   $05
              877e 0020  ld   $20
              877f 0027  ld   $27
              8780 0005  ld   $05
              8781 0020  ld   $20
              8782 00bb  ld   $bb
              8783 0004  ld   $04
              8784 00c9  ld   $c9
              8785 0051  ld   $51
              8786 00d0  ld   $d0
              8787 0003  ld   $03
              8788 004c  ld   $4c
              8789 009a  ld   $9a
              878a 0004  ld   $04
              878b 0020  ld   $20
              878c 009e  ld   $9e
              878d 0005  ld   $05
              878e 00a5  ld   $a5
              878f 0051  ld   $51
              8790 00c9  ld   $c9
              8791 0010  ld   $10
              8792 00d0  ld   $d0
              8793 000a  ld   $0a
              8794 00c6  ld   $c6
              8795 005d  ld   $5d
              8796 00f0  ld   $f0
              8797 00b6  ld   $b6
              8798 0020  ld   $20
              8799 0038  ld   $38
              879a 0005  ld   $05
              879b 004c  ld   $4c
              879c 003b  ld   $3b
              879d 0004  ld   $04
              879e 0020  ld   $20
              879f 00e8  ld   $e8
              87a0 0004  ld   $04
              87a1 0020  ld   $20
              87a2 00a8  ld   $a8
              87a3 0004  ld   $04
              87a4 0020  ld   $20
              87a5 000c  ld   $0c
              87a6 0006  ld   $06
              87a7 00f0  ld   $f0
              87a8 0003  ld   $03
              87a9 004c  ld   $4c
              87aa 0035  ld   $35
              87ab 0004  ld   $04
              87ac 0020  ld   $20
              87ad 0043  ld   $43
              87ae 0005  ld   $05
              87af 00a9  ld   $a9
              87b0 008e  ld   $8e
              87b1 0085  ld   $85
              87b2 0058  ld   $58
              87b3 00a9  ld   $a9
              87b4 0007  ld   $07
              87b5 0085  ld   $85
              87b6 0059  ld   $59
              87b7 0020  ld   $20
              87b8 00ad  ld   $ad
              87b9 0004  ld   $04
              87ba 00a5  ld   $a5
              87bb 0055  ld   $55
              87bc 0020  ld   $20
              87bd 00ef  ld   $ef
              87be 00ff  ld   $ff
              87bf 00a9  ld   $a9
              87c0 00a3  ld   $a3
              87c1 0085  ld   $85
              87c2 0058  ld   $58
              87c3 00a9  ld   $a9
              87c4 0007  ld   $07
              87c5 0085  ld   $85
              87c6 0059  ld   $59
              87c7 0020  ld   $20
              87c8 00ad  ld   $ad
              87c9 0004  ld   $04
              87ca 0020  ld   $20
              87cb 0027  ld   $27
              87cc 0005  ld   $05
              87cd 00a9  ld   $a9
              87ce 00bb  ld   $bb
              87cf 0085  ld   $85
              87d0 0058  ld   $58
              87d1 00a9  ld   $a9
              87d2 0007  ld   $07
              87d3 0085  ld   $85
              87d4 0059  ld   $59
              87d5 0020  ld   $20
              87d6 00ad  ld   $ad
              87d7 0004  ld   $04
              87d8 0020  ld   $20
              87d9 00cb  ld   $cb
              87da 0004  ld   $04
              87db 00d0  ld   $d0
              87dc 0003  ld   $03
              87dd 004c  ld   $4c
              87de 0029  ld   $29
              87df 0004  ld   $04
              87e0 00a9  ld   $a9
              87e1 00d0  ld   $d0
              87e2 0085  ld   $85
              87e3 0058  ld   $58
              87e4 00a9  ld   $a9
              87e5 0007  ld   $07
              87e6 0085  ld   $85
              87e7 0059  ld   $59
              87e8 0020  ld   $20
              87e9 00ad  ld   $ad
              87ea 0004  ld   $04
              87eb 004c  ld   $4c
              87ec 0000  ld   $00
              87ed 00c1  ld   $c1
              87ee 00a9  ld   $a9
              87ef 000d  ld   $0d
              87f0 004c  ld   $4c
              87f1 00ef  ld   $ef
              87f2 00ff  ld   $ff
              87f3 00a0  ld   $a0
              87f4 0000  ld   $00
              87f5 00b1  ld   $b1
              87f6 0058  ld   $58
              87f7 00f0  ld   $f0
              87f8 0007  ld   $07
              87f9 0020  ld   $20
              87fa 00ef  ld   $ef
              87fb fe00  bra  ac          ;+-----------------------------------+
              87fc fcfd  bra  $87fd       ;|                                   |
              87fd 1418  ld   $18,y       ;| Trampoline for page $8700 lookups |
              87fe e006  jmp  y,$06       ;|                                   |
              87ff c218  st   [$18]       ;+-----------------------------------+
              8800 00ff  ld   $ff
              8801 00c8  ld   $c8
              8802 004c  ld   $4c
              8803 00af  ld   $af
              8804 0004  ld   $04
              8805 0060  ld   $60
              8806 0020  ld   $20
              8807 00de  ld   $de
              8808 0004  ld   $04
              8809 00ad  ld   $ad
              880a 0011  ld   $11
              880b 00d0  ld   $d0
              880c 0010  ld   $10
              880d 00f8  ld   $f8
              880e 00ad  ld   $ad
              880f 0010  ld   $10
              8810 00d0  ld   $d0
              8811 0029  ld   $29
              8812 007f  ld   $7f
              8813 004c  ld   $4c
              8814 00ef  ld   $ef
              8815 00ff  ld   $ff
              8816 0020  ld   $20
              8817 00bb  ld   $bb
              8818 0004  ld   $04
              8819 00c9  ld   $c9
              881a 004e  ld   $4e
              881b 00f0  ld   $f0
              881c 000a  ld   $0a
              881d 00c9  ld   $c9
              881e 0059  ld   $59
              881f 00f0  ld   $f0
              8820 0007  ld   $07
              8821 0020  ld   $20
              8822 0038  ld   $38
              8823 0005  ld   $05
              8824 004c  ld   $4c
              8825 00cb  ld   $cb
              8826 0004  ld   $04
              8827 00ba  ld   $ba
              8828 0060  ld   $60
              8829 00a5  ld   $a5
              882a 005a  ld   $5a
              882b 000a  ld   $0a
              882c 0090  ld   $90
              882d 0002  ld   $02
              882e 0049  ld   $49
              882f 00a9  ld   $a9
              8830 0085  ld   $85
              8831 005a  ld   $5a
              8832 0060  ld   $60
              8833 0020  ld   $20
              8834 00a8  ld   $a8
              8835 0004  ld   $04
              8836 0020  ld   $20
              8837 00a8  ld   $a8
              8838 0004  ld   $04
              8839 00a2  ld   $a2
              883a 0000  ld   $00
              883b 00a0  ld   $a0
              883c 0004  ld   $04
              883d 00b5  ld   $b5
              883e 0040  ld   $40
              883f 0020  ld   $20
              8840 00ef  ld   $ef
              8841 00ff  ld   $ff
              8842 0088  ld   $88
              8843 00d0  ld   $d0
              8844 0005  ld   $05
              8845 00a0  ld   $a0
              8846 0004  ld   $04
              8847 0020  ld   $20
              8848 00a8  ld   $a8
              8849 0004  ld   $04
              884a 00e8  ld   $e8
              884b 0005  ld   $05
              884c 0000  ld   $00
              884d 0000  ld   $00
              884e 00e0  ld   $e0
              884f 0010  ld   $10
              8850 00d0  ld   $d0
              8851 00ee  ld   $ee
              8852 00a9  ld   $a9
              8853 0008  ld   $08
              8854 0085  ld   $85
              8855 005d  ld   $5d
              8856 0060  ld   $60
              8857 00e6  ld   $e6
              8858 0056  ld   $56
              8859 00a5  ld   $a5
              885a 0056  ld   $56
              885b 0029  ld   $29
              885c 000f  ld   $0f
              885d 00c9  ld   $c9
              885e 000a  ld   $0a
              885f 00b0  ld   $b0
              8860 00f6  ld   $f6
              8861 00a5  ld   $a5
              8862 0056  ld   $56
              8863 0038  ld   $38
              8864 00e9  ld   $e9
              8865 00a0  ld   $a0
              8866 0090  ld   $90
              8867 000c  ld   $0c
              8868 0085  ld   $85
              8869 0056  ld   $56
              886a 00e6  ld   $e6
              886b 0057  ld   $57
              886c 00a5  ld   $a5
              886d 0057  ld   $57
              886e 0029  ld   $29
              886f 000f  ld   $0f
              8870 00c9  ld   $c9
              8871 000a  ld   $0a
              8872 00b0  ld   $b0
              8873 00f6  ld   $f6
              8874 0060  ld   $60
              8875 00a5  ld   $a5
              8876 0057  ld   $57
              8877 00f0  ld   $f0
              8878 0003  ld   $03
              8879 0020  ld   $20
              887a 00dc  ld   $dc
              887b 00ff  ld   $ff
              887c 00a5  ld   $a5
              887d 0056  ld   $56
              887e 0020  ld   $20
              887f 00dc  ld   $dc
              8880 00ff  ld   $ff
              8881 00a9  ld   $a9
              8882 0020  ld   $20
              8883 004c  ld   $4c
              8884 00ef  ld   $ef
              8885 00ff  ld   $ff
              8886 00a9  ld   $a9
              8887 007a  ld   $7a
              8888 0085  ld   $85
              8889 0058  ld   $58
              888a 00a9  ld   $a9
              888b 0007  ld   $07
              888c 0085  ld   $85
              888d 0059  ld   $59
              888e 004c  ld   $4c
              888f 00ad  ld   $ad
              8890 0004  ld   $04
              8891 00a5  ld   $a5
              8892 005a  ld   $5a
              8893 0029  ld   $29
              8894 0038  ld   $38
              8895 00aa  ld   $aa
              8896 00bd  ld   $bd
              8897 0049  ld   $49
              8898 0006  ld   $06
              8899 00f0  ld   $f0
              889a 0007  ld   $07
              889b 0020  ld   $20
              889c 00ef  ld   $ef
              889d 00ff  ld   $ff
              889e 00e8  ld   $e8
              889f 004c  ld   $4c
              88a0 0048  ld   $48
              88a1 0005  ld   $05
              88a2 0060  ld   $60
              88a3 00a9  ld   $a9
              88a4 0020  ld   $20
              88a5 0085  ld   $85
              88a6 004f  ld   $4f
              88a7 00a9  ld   $a9
              88a8 000f  ld   $0f
              88a9 0085  ld   $85
              88aa 0052  ld   $52
              88ab 00a2  ld   $a2
              88ac 000f  ld   $0f
              88ad 00a0  ld   $a0
              88ae 004f  ld   $4f
              88af 0098  ld   $98
              88b0 009d  ld   $9d
              88b1 003f  ld   $3f
              88b2 0000  ld   $00
              88b3 0088  ld   $88
              88b4 00ca  ld   $ca
              88b5 00d0  ld   $d0
              88b6 00f8  ld   $f8
              88b7 0060  ld   $60
              88b8 00a9  ld   $a9
              88b9 0000  ld   $00
              88ba 0085  ld   $85
              88bb 0056  ld   $56
              88bc 0085  ld   $85
              88bd 0057  ld   $57
              88be 0085  ld   $85
              88bf 005c  ld   $5c
              88c0 00a6  ld   $a6
              88c1 0055  ld   $55
              88c2 00bd  ld   $bd
              88c3 0013  ld   $13
              88c4 0006  ld   $06
              88c5 0085  ld   $85
              88c6 005b  ld   $5b
              88c7 0020  ld   $20
              88c8 00de  ld   $de
              88c9 0004  ld   $04
              88ca 00a5  ld   $a5
              88cb 005a  ld   $5a
              88cc 0029  ld   $29
              88cd 000f  ld   $0f
              88ce 0018  ld   $18
              88cf 0069  ld   $69
              88d0 0041  ld   $41
              88d1 00c5  ld   $c5
              88d2 005c  ld   $5c
              88d3 00f0  ld   $f0
              88d4 00f2  ld   $f2
              88d5 0020  ld   $20
              88d6 009e  ld   $9e
              88d7 0005  ld   $05
              88d8 00a5  ld   $a5
              88d9 0051  ld   $51
              88da 00c9  ld   $c9
              88db 0010  ld   $10
              88dc 00f0  ld   $f0
              88dd 00e9  ld   $e9
              88de 00a5  ld   $a5
              88df 0050  ld   $50
              88e0 0085  ld   $85
              88e1 005c  ld   $5c
              88e2 00c6  ld   $c6
              88e3 005b  ld   $5b
              88e4 00d0  ld   $d0
              88e5 00e1  ld   $e1
              88e6 0020  ld   $20
              88e7 000c  ld   $0c
              88e8 0006  ld   $06
              88e9 00f0  ld   $f0
              88ea 00cd  ld   $cd
              88eb 0060  ld   $60
              88ec 0085  ld   $85
              88ed 0050  ld   $50
              88ee 00c9  ld   $c9
              88ef 0020  ld   $20
              88f0 00f0  ld   $f0
              88f1 003c  ld   $3c
              88f2 00a2  ld   $a2
              88f3 0000  ld   $00
              88f4 00b5  ld   $b5
              88f5 0040  ld   $40
              88f6 00c5  ld   $c5
              88f7 0050  ld   $50
              88f8 00f0  ld   $f0
              88f9 0008  ld   $08
              88fa 00e8  ld   $e8
              88fb fe00  bra  ac          ;+-----------------------------------+
              88fc fcfd  bra  $88fd       ;|                                   |
              88fd 1418  ld   $18,y       ;| Trampoline for page $8800 lookups |
              88fe e006  jmp  y,$06       ;|                                   |
              88ff c218  st   [$18]       ;+-----------------------------------+
              8900 00e0  ld   $e0
              8901 0010  ld   $10
              8902 00d0  ld   $d0
              8903 00f5  ld   $f5
              8904 004c  ld   $4c
              8905 00e0  ld   $e0
              8906 0005  ld   $05
              8907 0086  ld   $86
              8908 0051  ld   $51
              8909 008a  ld   $8a
              890a 0029  ld   $29
              890b 000c  ld   $0c
              890c 0085  ld   $85
              890d 0053  ld   $53
              890e 00a5  ld   $a5
              890f 0052  ld   $52
              8910 0029  ld   $29
              8911 000c  ld   $0c
              8912 00c5  ld   $c5
              8913 0053  ld   $53
              8914 00d0  ld   $d0
              8915 0010  ld   $10
              8916 008a  ld   $8a
              8917 0038  ld   $38
              8918 00e5  ld   $e5
              8919 0052  ld   $52
              891a 0010  ld   $10
              891b 0005  ld   $05
              891c 00a9  ld   $a9
              891d 00ff  ld   $ff
              891e 004c  ld   $4c
              891f 00f2  ld   $f2
              8920 0005  ld   $05
              8921 00a9  ld   $a9
              8922 0001  ld   $01
              8923 004c  ld   $4c
              8924 00f2  ld   $f2
              8925 0005  ld   $05
              8926 008a  ld   $8a
              8927 0029  ld   $29
              8928 0003  ld   $03
              8929 0085  ld   $85
              892a 0053  ld   $53
              892b 00a5  ld   $a5
              892c 0052  ld   $52
              892d 0029  ld   $29
              892e 0003  ld   $03
              892f 00c5  ld   $c5
              8930 0053  ld   $53
              8931 00f0  ld   $f0
              8932 0005  ld   $05
              8933 00a2  ld   $a2
              8934 0010  ld   $10
              8935 0086  ld   $86
              8936 0051  ld   $51
              8937 0060  ld   $60
              8938 008a  ld   $8a
              8939 0038  ld   $38
              893a 00e5  ld   $e5
              893b 0052  ld   $52
              893c 0010  ld   $10
              893d 0005  ld   $05
              893e 00a9  ld   $a9
              893f 00fc  ld   $fc
              8940 004c  ld   $4c
              8941 00f2  ld   $f2
              8942 0005  ld   $05
              8943 00a9  ld   $a9
              8944 0004  ld   $04
              8945 0085  ld   $85
              8946 0054  ld   $54
              8947 00a5  ld   $a5
              8948 0052  ld   $52
              8949 00aa  ld   $aa
              894a 0018  ld   $18
              894b 0065  ld   $65
              894c 0054  ld   $54
              894d 00a8  ld   $a8
              894e 00b9  ld   $b9
              894f 0040  ld   $40
              8950 0000  ld   $00
              8951 0095  ld   $95
              8952 0040  ld   $40
              8953 0006  ld   $06
              8954 0000  ld   $00
              8955 0000  ld   $00
              8956 00a9  ld   $a9
              8957 0020  ld   $20
              8958 0099  ld   $99
              8959 0040  ld   $40
              895a 0000  ld   $00
              895b 0084  ld   $84
              895c 0052  ld   $52
              895d 00c4  ld   $c4
              895e 0051  ld   $51
              895f 00d0  ld   $d0
              8960 00e9  ld   $e9
              8961 0060  ld   $60
              8962 00a2  ld   $a2
              8963 000f  ld   $0f
              8964 00a9  ld   $a9
              8965 004f  ld   $4f
              8966 0085  ld   $85
              8967 0053  ld   $53
              8968 00bd  ld   $bd
              8969 003f  ld   $3f
              896a 0000  ld   $00
              896b 00c5  ld   $c5
              896c 0053  ld   $53
              896d 00d0  ld   $d0
              896e 0005  ld   $05
              896f 00c6  ld   $c6
              8970 0053  ld   $53
              8971 00ca  ld   $ca
              8972 00d0  ld   $d0
              8973 00f4  ld   $f4
              8974 0060  ld   $60
              8975 00a9  ld   $a9
              8976 0060  ld   $60
              8977 0085  ld   $85
              8978 0058  ld   $58
              8979 00a9  ld   $a9
              897a 0007  ld   $07
              897b 0085  ld   $85
              897c 0059  ld   $59
              897d 0020  ld   $20
              897e 00ad  ld   $ad
              897f 0004  ld   $04
              8980 0020  ld   $20
              8981 00bb  ld   $bb
              8982 0004  ld   $04
              8983 0085  ld   $85
              8984 0055  ld   $55
              8985 00c9  ld   $c9
              8986 0031  ld   $31
              8987 0010  ld   $10
              8988 0003  ld   $03
              8989 004c  ld   $4c
              898a 003e  ld   $3e
              898b 0006  ld   $06
              898c 00a9  ld   $a9
              898d 0035  ld   $35
              898e 0038  ld   $38
              898f 00e5  ld   $e5
              8990 0055  ld   $55
              8991 0030  ld   $30
              8992 0001  ld   $01
              8993 0060  ld   $60
              8994 0020  ld   $20
              8995 0038  ld   $38
              8996 0005  ld   $05
              8997 004c  ld   $4c
              8998 002a  ld   $2a
              8999 0006  ld   $06
              899a 0003  ld   $03
              899b 0009  ld   $09
              899c 0013  ld   $13
              899d 0023  ld   $23
              899e 00ff  ld   $ff
              899f 0048  ld   $48
              89a0 004f  ld   $4f
              89a1 004f  ld   $4f
              89a2 0052  ld   $52
              89a3 0041  ld   $41
              89a4 0059  ld   $59
              89a5 0021  ld   $21
              89a6 0000  ld   $00
              89a7 0048  ld   $48
              89a8 0055  ld   $55
              89a9 005a  ld   $5a
              89aa 005a  ld   $5a
              89ab 0041  ld   $41
              89ac 0048  ld   $48
              89ad 0021  ld   $21
              89ae 0000  ld   $00
              89af 0057  ld   $57
              89b0 004f  ld   $4f
              89b1 004f  ld   $4f
              89b2 0048  ld   $48
              89b3 004f  ld   $4f
              89b4 004f  ld   $4f
              89b5 0021  ld   $21
              89b6 0000  ld   $00
              89b7 0059  ld   $59
              89b8 0049  ld   $49
              89b9 0050  ld   $50
              89ba 0050  ld   $50
              89bb 0049  ld   $49
              89bc 0045  ld   $45
              89bd 0021  ld   $21
              89be 0000  ld   $00
              89bf 0053  ld   $53
              89c0 0057  ld   $57
              89c1 0045  ld   $45
              89c2 0045  ld   $45
              89c3 0054  ld   $54
              89c4 0021  ld   $21
              89c5 0000  ld   $00
              89c6 0000  ld   $00
              89c7 0043  ld   $43
              89c8 004f  ld   $4f
              89c9 004f  ld   $4f
              89ca 004c  ld   $4c
              89cb 0021  ld   $21
              89cc 0000  ld   $00
              89cd 0000  ld   $00
              89ce 0000  ld   $00
              89cf 004e  ld   $4e
              89d0 0049  ld   $49
              89d1 0043  ld   $43
              89d2 0045  ld   $45
              89d3 0021  ld   $21
              89d4 0000  ld   $00
              89d5 0000  ld   $00
              89d6 0000  ld   $00
              89d7 0047  ld   $47
              89d8 0041  ld   $41
              89d9 0044  ld   $44
              89da 005a  ld   $5a
              89db 004f  ld   $4f
              89dc 004f  ld   $4f
              89dd 004b  ld   $4b
              89de 0053  ld   $53
              89df 0021  ld   $21
              89e0 0000  ld   $00
              89e1 000d  ld   $0d
              89e2 000d  ld   $0d
              89e3 0031  ld   $31
              89e4 0035  ld   $35
              89e5 0020  ld   $20
              89e6 0050  ld   $50
              89e7 0055  ld   $55
              89e8 005a  ld   $5a
              89e9 005a  ld   $5a
              89ea 004c  ld   $4c
              89eb 0045  ld   $45
              89ec 0020  ld   $20
              89ed 002d  ld   $2d
              89ee 0020  ld   $20
              89ef 0042  ld   $42
              89f0 0059  ld   $59
              89f1 0020  ld   $20
              89f2 004a  ld   $4a
              89f3 0045  ld   $45
              89f4 0046  ld   $46
              89f5 0046  ld   $46
              89f6 0020  ld   $20
              89f7 004a  ld   $4a
              89f8 0045  ld   $45
              89f9 0054  ld   $54
              89fa 0054  ld   $54
              89fb fe00  bra  ac          ;+-----------------------------------+
              89fc fcfd  bra  $89fd       ;|                                   |
              89fd 1418  ld   $18,y       ;| Trampoline for page $8900 lookups |
              89fe e006  jmp  y,$06       ;|                                   |
              89ff c218  st   [$18]       ;+-----------------------------------+
              8a00 004f  ld   $4f
              8a01 004e  ld   $4e
              8a02 000d  ld   $0d
              8a03 000d  ld   $0d
              8a04 0049  ld   $49
              8a05 004e  ld   $4e
              8a06 0053  ld   $53
              8a07 0054  ld   $54
              8a08 0052  ld   $52
              8a09 0055  ld   $55
              8a0a 0043  ld   $43
              8a0b 0054  ld   $54
              8a0c 0049  ld   $49
              8a0d 004f  ld   $4f
              8a0e 004e  ld   $4e
              8a0f 0053  ld   $53
              8a10 0020  ld   $20
              8a11 0028  ld   $28
              8a12 0059  ld   $59
              8a13 002f  ld   $2f
              8a14 004e  ld   $4e
              8a15 0029  ld   $29
              8a16 003f  ld   $3f
              8a17 0020  ld   $20
              8a18 0000  ld   $00
              8a19 000d  ld   $0d
              8a1a 000d  ld   $0d
              8a1b 0054  ld   $54
              8a1c 0059  ld   $59
              8a1d 0050  ld   $50
              8a1e 0045  ld   $45
              8a1f 0020  ld   $20
              8a20 0041  ld   $41
              8a21 0020  ld   $20
              8a22 004c  ld   $4c
              8a23 0045  ld   $45
              8a24 0054  ld   $54
              8a25 0054  ld   $54
              8a26 0045  ld   $45
              8a27 0052  ld   $52
              8a28 0020  ld   $20
              8a29 004f  ld   $4f
              8a2a 004e  ld   $4e
              8a2b 0020  ld   $20
              8a2c 0054  ld   $54
              8a2d 0048  ld   $48
              8a2e 0045  ld   $45
              8a2f 0020  ld   $20
              8a30 0053  ld   $53
              8a31 0041  ld   $41
              8a32 004d  ld   $4d
              8a33 0045  ld   $45
              8a34 000d  ld   $0d
              8a35 0052  ld   $52
              8a36 004f  ld   $4f
              8a37 0057  ld   $57
              8a38 0020  ld   $20
              8a39 004f  ld   $4f
              8a3a 0052  ld   $52
              8a3b 0020  ld   $20
              8a3c 0043  ld   $43
              8a3d 004f  ld   $4f
              8a3e 004c  ld   $4c
              8a3f 0055  ld   $55
              8a40 004d  ld   $4d
              8a41 004e  ld   $4e
              8a42 0020  ld   $20
              8a43 0041  ld   $41
              8a44 0053  ld   $53
              8a45 0020  ld   $20
              8a46 0054  ld   $54
              8a47 0048  ld   $48
              8a48 0045  ld   $45
              8a49 0020  ld   $20
              8a4a 0045  ld   $45
              8a4b 004d  ld   $4d
              8a4c 0050  ld   $50
              8a4d 0054  ld   $54
              8a4e 0059  ld   $59
              8a4f 000d  ld   $0d
              8a50 0053  ld   $53
              8a51 0050  ld   $50
              8a52 0041  ld   $41
              8a53 0043  ld   $43
              8a54 0045  ld   $45
              8a55 0020  ld   $20
              8a56 0054  ld   $54
              8a57 004f  ld   $4f
              8a58 0020  ld   $20
              8a59 0053  ld   $53
              8a5a 004c  ld   $4c
              8a5b 0007  ld   $07
              8a5c 0000  ld   $00
              8a5d 00d8  ld   $d8
              8a5e 0049  ld   $49
              8a5f 0044  ld   $44
              8a60 0045  ld   $45
              8a61 0020  ld   $20
              8a62 0054  ld   $54
              8a63 0048  ld   $48
              8a64 0041  ld   $41
              8a65 0054  ld   $54
              8a66 0020  ld   $20
              8a67 004c  ld   $4c
              8a68 0045  ld   $45
              8a69 0054  ld   $54
              8a6a 0054  ld   $54
              8a6b 0045  ld   $45
              8a6c 0052  ld   $52
              8a6d 000d  ld   $0d
              8a6e 0028  ld   $28
              8a6f 0041  ld   $41
              8a70 004e  ld   $4e
              8a71 0044  ld   $44
              8a72 0020  ld   $20
              8a73 0041  ld   $41
              8a74 004e  ld   $4e
              8a75 0059  ld   $59
              8a76 0020  ld   $20
              8a77 0042  ld   $42
              8a78 0045  ld   $45
              8a79 0054  ld   $54
              8a7a 0057  ld   $57
              8a7b 0045  ld   $45
              8a7c 0045  ld   $45
              8a7d 004e  ld   $4e
              8a7e 0029  ld   $29
              8a7f 0020  ld   $20
              8a80 0054  ld   $54
              8a81 004f  ld   $4f
              8a82 0057  ld   $57
              8a83 0041  ld   $41
              8a84 0052  ld   $52
              8a85 0044  ld   $44
              8a86 0053  ld   $53
              8a87 000d  ld   $0d
              8a88 0054  ld   $54
              8a89 0048  ld   $48
              8a8a 0045  ld   $45
              8a8b 0020  ld   $20
              8a8c 0053  ld   $53
              8a8d 0050  ld   $50
              8a8e 0041  ld   $41
              8a8f 0043  ld   $43
              8a90 0045  ld   $45
              8a91 002e  ld   $2e
              8a92 0020  ld   $20
              8a93 0054  ld   $54
              8a94 0059  ld   $59
              8a95 0050  ld   $50
              8a96 0045  ld   $45
              8a97 0020  ld   $20
              8a98 0051  ld   $51
              8a99 0020  ld   $20
              8a9a 0054  ld   $54
              8a9b 004f  ld   $4f
              8a9c 0020  ld   $20
              8a9d 0051  ld   $51
              8a9e 0055  ld   $55
              8a9f 0049  ld   $49
              8aa0 0054  ld   $54
              8aa1 002e  ld   $2e
              8aa2 000d  ld   $0d
              8aa3 0054  ld   $54
              8aa4 0048  ld   $48
              8aa5 0049  ld   $49
              8aa6 0053  ld   $53
              8aa7 0020  ld   $20
              8aa8 0049  ld   $49
              8aa9 0053  ld   $53
              8aaa 0020  ld   $20
              8aab 0054  ld   $54
              8aac 0048  ld   $48
              8aad 0045  ld   $45
              8aae 0020  ld   $20
              8aaf 0053  ld   $53
              8ab0 004f  ld   $4f
              8ab1 004c  ld   $4c
              8ab2 0056  ld   $56
              8ab3 0045  ld   $45
              8ab4 0044  ld   $44
              8ab5 0020  ld   $20
              8ab6 0050  ld   $50
              8ab7 0055  ld   $55
              8ab8 005a  ld   $5a
              8ab9 005a  ld   $5a
              8aba 004c  ld   $4c
              8abb 0045  ld   $45
              8abc 003a  ld   $3a
              8abd 0000  ld   $00
              8abe 000d  ld   $0d
              8abf 0044  ld   $44
              8ac0 0049  ld   $49
              8ac1 0046  ld   $46
              8ac2 0046  ld   $46
              8ac3 0049  ld   $49
              8ac4 0043  ld   $43
              8ac5 0055  ld   $55
              8ac6 004c  ld   $4c
              8ac7 0054  ld   $54
              8ac8 0059  ld   $59
              8ac9 0020  ld   $20
              8aca 004c  ld   $4c
              8acb 0045  ld   $45
              8acc 0056  ld   $56
              8acd 0045  ld   $45
              8ace 004c  ld   $4c
              8acf 0020  ld   $20
              8ad0 0028  ld   $28
              8ad1 0031  ld   $31
              8ad2 002d  ld   $2d
              8ad3 0035  ld   $35
              8ad4 0029  ld   $29
              8ad5 003f  ld   $3f
              8ad6 0020  ld   $20
              8ad7 0000  ld   $00
              8ad8 000d  ld   $0d
              8ad9 0053  ld   $53
              8ada 004f  ld   $4f
              8adb 0052  ld   $52
              8adc 0052  ld   $52
              8add 0059  ld   $59
              8ade 002e  ld   $2e
              8adf 0020  ld   $20
              8ae0 0054  ld   $54
              8ae1 0052  ld   $52
              8ae2 0059  ld   $59
              8ae3 0020  ld   $20
              8ae4 0041  ld   $41
              8ae5 0047  ld   $47
              8ae6 0041  ld   $41
              8ae7 0049  ld   $49
              8ae8 004e  ld   $4e
              8ae9 003a  ld   $3a
              8aea 0020  ld   $20
              8aeb 0000  ld   $00
              8aec 0020  ld   $20
              8aed 0059  ld   $59
              8aee 004f  ld   $4f
              8aef 0055  ld   $55
              8af0 0020  ld   $20
              8af1 0053  ld   $53
              8af2 004f  ld   $4f
              8af3 004c  ld   $4c
              8af4 0056  ld   $56
              8af5 0045  ld   $45
              8af6 0044  ld   $44
              8af7 000d  ld   $0d
              8af8 0041  ld   $41
              8af9 0020  ld   $20
              8afa 004c  ld   $4c
              8afb fe00  bra  ac          ;+-----------------------------------+
              8afc fcfd  bra  $8afd       ;|                                   |
              8afd 1418  ld   $18,y       ;| Trampoline for page $8a00 lookups |
              8afe e006  jmp  y,$06       ;|                                   |
              8aff c218  st   [$18]       ;+-----------------------------------+
              8b00 0045  ld   $45
              8b01 0056  ld   $56
              8b02 0045  ld   $45
              8b03 004c  ld   $4c
              8b04 0020  ld   $20
              8b05 0000  ld   $00
              8b06 0020  ld   $20
              8b07 0050  ld   $50
              8b08 0055  ld   $55
              8b09 005a  ld   $5a
              8b0a 005a  ld   $5a
              8b0b 004c  ld   $4c
              8b0c 0045  ld   $45
              8b0d 0021  ld   $21
              8b0e 000d  ld   $0d
              8b0f 000d  ld   $0d
              8b10 0054  ld   $54
              8b11 004f  ld   $4f
              8b12 0054  ld   $54
              8b13 0041  ld   $41
              8b14 004c  ld   $4c
              8b15 0020  ld   $20
              8b16 004d  ld   $4d
              8b17 004f  ld   $4f
              8b18 0056  ld   $56
              8b19 0045  ld   $45
              8b1a 0053  ld   $53
              8b1b 003a  ld   $3a
              8b1c 0020  ld   $20
              8b1d 0000  ld   $00
              8b1e 000d  ld   $0d
              8b1f 000d  ld   $0d
              8b20 0050  ld   $50
              8b21 004c  ld   $4c
              8b22 0041  ld   $41
              8b23 0059  ld   $59
              8b24 0020  ld   $20
              8b25 0041  ld   $41
              8b26 0047  ld   $47
              8b27 0041  ld   $41
              8b28 0049  ld   $49
              8b29 004e  ld   $4e
              8b2a 0020  ld   $20
              8b2b 0028  ld   $28
              8b2c 0059  ld   $59
              8b2d 002f  ld   $2f
              8b2e 004e  ld   $4e
              8b2f 0029  ld   $29
              8b30 003f  ld   $3f
              8b31 0020  ld   $20
              8b32 0000  ld   $00
              8b33 000d  ld   $0d
              8b34 000d  ld   $0d
              8b35 0042  ld   $42
              8b36 0059  ld   $59
              8b37 0045  ld   $45
              8b38 0021  ld   $21
              8b39 000d  ld   $0d
              8b3a 0000  ld   $00
              8b3b 000b  ld   $0b
              8b3c 00e5  ld   $e5
              8b3d 001b  ld   $1b
              8b3e 0020  ld   $20
              8b3f 00ef  ld   $ef
              8b40 00ff  ld   $ff
              8b41 00e8  ld   $e8
              8b42 00bd  ld   $bd
              8b43 00f1  ld   $f1
              8b44 000b  ld   $0b
              8b45 00d0  ld   $d0
              8b46 00f7  ld   $f7
              8b47 004c  ld   $4c
              8b48 009d  ld   $9d
              8b49 000c  ld   $0c
              8b4a 000d  ld   $0d
              8b4b 0055  ld   $55
              8b4c 0053  ld   $53
              8b4d 0041  ld   $41
              8b4e 0047  ld   $47
              8b4f 0045  ld   $45
              8b50 003a  ld   $3a
              8b51 000d  ld   $0d
              8b52 0020  ld   $20
              8b53 0021  ld   $21
              8b54 0038  ld   $38
              8b55 0030  ld   $30
              8b56 0030  ld   $30
              8b57 003a  ld   $3a
              8b58 0050  ld   $50
              8b59 000c  ld   $0c
              8b5a 0000  ld   $00
              8b5b 008a  ld   $8a
              8b5c 0048  ld   $48
              8b5d 0041  ld   $41
              8b5e 0020  ld   $20
              8b5f 0020  ld   $20
              8b60 0020  ld   $20
              8b61 0020  ld   $20
              8b62 0041  ld   $41
              8b63 0053  ld   $53
              8b64 0053  ld   $53
              8b65 0045  ld   $45
              8b66 004d  ld   $4d
              8b67 0042  ld   $42
              8b68 004c  ld   $4c
              8b69 0045  ld   $45
              8b6a 0020  ld   $20
              8b6b 0031  ld   $31
              8b6c 0053  ld   $53
              8b6d 0054  ld   $54
              8b6e 000d  ld   $0d
              8b6f 0020  ld   $20
              8b70 0021  ld   $21
              8b71 0020  ld   $20
              8b72 004c  ld   $4c
              8b73 0044  ld   $44
              8b74 0041  ld   $41
              8b75 0020  ld   $20
              8b76 0023  ld   $23
              8b77 0031  ld   $31
              8b78 0020  ld   $20
              8b79 0020  ld   $20
              8b7a 0020  ld   $20
              8b7b 0020  ld   $20
              8b7c 0041  ld   $41
              8b7d 0053  ld   $53
              8b7e 0053  ld   $53
              8b7f 0045  ld   $45
              8b80 004d  ld   $4d
              8b81 0042  ld   $42
              8b82 004c  ld   $4c
              8b83 0045  ld   $45
              8b84 0020  ld   $20
              8b85 004e  ld   $4e
              8b86 0045  ld   $45
              8b87 0058  ld   $58
              8b88 0054  ld   $54
              8b89 000d  ld   $0d
              8b8a 0020  ld   $20
              8b8b 0021  ld   $21
              8b8c 0038  ld   $38
              8b8d 0030  ld   $30
              8b8e 0030  ld   $30
              8b8f 004c  ld   $4c
              8b90 0020  ld   $20
              8b91 0020  ld   $20
              8b92 0020  ld   $20
              * 7 times
              8b97 0044  ld   $44
              8b98 0049  ld   $49
              8b99 0053  ld   $53
              8b9a 0041  ld   $41
              8b9b 0053  ld   $53
              8b9c 0053  ld   $53
              8b9d 0045  ld   $45
              8b9e 004d  ld   $4d
              8b9f 0042  ld   $42
              8ba0 004c  ld   $4c
              8ba1 0045  ld   $45
              8ba2 000d  ld   $0d
              8ba3 0020  ld   $20
              8ba4 0021  ld   $21
              8ba5 004c  ld   $4c
              8ba6 0020  ld   $20
              8ba7 0020  ld   $20
              8ba8 0020  ld   $20
              * 10 times
              8bb0 004e  ld   $4e
              8bb1 0045  ld   $45
              8bb2 0058  ld   $58
              8bb3 0054  ld   $54
              8bb4 0020  ld   $20
              8bb5 0053  ld   $53
              8bb6 0043  ld   $43
              8bb7 0052  ld   $52
              8bb8 0045  ld   $45
              8bb9 0045  ld   $45
              8bba 004e  ld   $4e
              8bbb 000d  ld   $0d
              8bbc 0020  ld   $20
              8bbd 0021  ld   $21
              8bbe 0028  ld   $28
              8bbf 0052  ld   $52
              8bc0 0045  ld   $45
              8bc1 0054  ld   $54
              8bc2 0055  ld   $55
              8bc3 0052  ld   $52
              8bc4 004e  ld   $4e
              8bc5 0029  ld   $29
              8bc6 0020  ld   $20
              8bc7 0020  ld   $20
              8bc8 0020  ld   $20
              8bc9 0045  ld   $45
              8bca 0058  ld   $58
              8bcb 0049  ld   $49
              8bcc 0054  ld   $54
              8bcd 000d  ld   $0d
              8bce 0020  ld   $20
              8bcf 0042  ld   $42
              8bd0 0045  ld   $45
              8bd1 0045  ld   $45
              8bd2 0052  ld   $52
              8bd3 0020  ld   $20
              8bd4 0020  ld   $20
              8bd5 0020  ld   $20
              * 8 times
              8bdb 0053  ld   $53
              8bdc 004b  ld   $4b
              8bdd 0049  ld   $49
              8bde 0050  ld   $50
              8bdf 0020  ld   $20
              8be0 0055  ld   $55
              8be1 0053  ld   $53
              8be2 0041  ld   $41
              8be3 0047  ld   $47
              8be4 0045  ld   $45
              8be5 0000  ld   $00
              8be6 000c  ld   $0c
              8be7 008a  ld   $8a
              8be8 0076  ld   $76
              8be9 00a9  ld   $a9
              8bea 000c  ld   $0c
              8beb 0048  ld   $48
              8bec 0020  ld   $20
              8bed 00fd  ld   $fd
              8bee 000d  ld   $0d
              8bef 0020  ld   $20
              8bf0 00f1  ld   $f1
              8bf1 000e  ld   $0e
              8bf2 0085  ld   $85
              8bf3 0044  ld   $44
              8bf4 0084  ld   $84
              8bf5 0045  ld   $45
              8bf6 0068  ld   $68
              8bf7 0038  ld   $38
              8bf8 00e9  ld   $e9
              8bf9 0001  ld   $01
              8bfa 00d0  ld   $d0
              8bfb fe00  bra  ac          ;+-----------------------------------+
              8bfc fcfd  bra  $8bfd       ;|                                   |
              8bfd 1418  ld   $18,y       ;| Trampoline for page $8b00 lookups |
              8bfe e006  jmp  y,$06       ;|                                   |
              8bff c218  st   [$18]       ;+-----------------------------------+
              8c00 00ef  ld   $ef
              8c01 0020  ld   $20
              8c02 0095  ld   $95
              8c03 000e  ld   $0e
              8c04 008a  ld   $8a
              8c05 00d0  ld   $d0
              8c06 0003  ld   $03
              8c07 004c  ld   $4c
              8c08 001f  ld   $1f
              8c09 00ff  ld   $ff
              8c0a 00a0  ld   $a0
              8c0b 0000  ld   $00
              8c0c 0020  ld   $20
              8c0d 00c0  ld   $c0
              8c0e 000e  ld   $0e
              8c0f 0048  ld   $48
              8c10 008a  ld   $8a
              8c11 00f0  ld   $f0
              8c12 0007  ld   $07
              8c13 00b5  ld   $b5
              8c14 0046  ld   $46
              8c15 0095  ld   $95
              8c16 0044  ld   $44
              8c17 00ca  ld   $ca
              8c18 0010  ld   $10
              8c19 00f9  ld   $f9
              8c1a 0068  ld   $68
              8c1b 00c9  ld   $c9
              8c1c 0005  ld   $05
              8c1d 00f0  ld   $f0
              8c1e 00cf  ld   $cf
              8c1f 00c9  ld   $c9
              8c20 0099  ld   $99
              8c21 00f0  ld   $f0
              8c22 0004  ld   $04
              8c23 00c9  ld   $c9
              8c24 0093  ld   $93
              8c25 00d0  ld   $d0
              8c26 0076  ld   $76
              8c27 00a9  ld   $a9
              8c28 0003  ld   $03
              8c29 0085  ld   $85
              8c2a 0047  ld   $47
              8c2b 0020  ld   $20
              8c2c 00b2  ld   $b2
              8c2d 000e  ld   $0e
              8c2e 000a  ld   $0a
              8c2f 00e9  ld   $e9
              8c30 00be  ld   $be
              8c31 00c5  ld   $c5
              8c32 00c2  ld   $c2
              8c33 0090  ld   $90
              8c34 0068  ld   $68
              8c35 000a  ld   $0a
              8c36 000a  ld   $0a
              8c37 00a2  ld   $a2
              8c38 0004  ld   $04
              8c39 000a  ld   $0a
              8c3a 0026  ld   $26
              8c3b 004a  ld   $4a
              8c3c 0026  ld   $26
              8c3d 004b  ld   $4b
              8c3e 00ca  ld   $ca
              8c3f 0010  ld   $10
              8c40 00f8  ld   $f8
              8c41 00c6  ld   $c6
              8c42 0047  ld   $47
              8c43 00f0  ld   $f0
              8c44 00f4  ld   $f4
              8c45 0010  ld   $10
              8c46 00e4  ld   $e4
              8c47 00a2  ld   $a2
              8c48 0005  ld   $05
              8c49 0020  ld   $20
              8c4a 00b2  ld   $b2
              8c4b 000e  ld   $0e
              8c4c 0084  ld   $84
              8c4d 003a  ld   $3a
              8c4e 00dd  ld   $dd
              8c4f 0052  ld   $52
              8c50 000f  ld   $0f
              8c51 00d0  ld   $d0
              8c52 0013  ld   $13
              8c53 0020  ld   $20
              8c54 00b2  ld   $b2
              8c55 000e  ld   $0e
              8c56 00dd  ld   $dd
              8c57 0058  ld   $58
              8c58 000f  ld   $0f
              8c59 00f0  ld   $f0
              8c5a 000d  ld   $0d
              8c5b 00bd  ld   $bd
              8c5c 0058  ld   $58
              8c5d 000f  ld   $0f
              8c5e 00f0  ld   $f0
              8c5f 0007  ld   $07
              8c60 00c9  ld   $c9
              8c61 00a4  ld   $a4
              8c62 00f0  ld   $f0
              8c63 0003  ld   $03
              8c64 000d  ld   $0d
              8c65 0000  ld   $00
              8c66 0000  ld   $00
              8c67 00a4  ld   $a4
              8c68 003a  ld   $3a
              8c69 0018  ld   $18
              8c6a 0088  ld   $88
              8c6b 0026  ld   $26
              8c6c 004c  ld   $4c
              8c6d 00e0  ld   $e0
              8c6e 0003  ld   $03
              8c6f 00d0  ld   $d0
              8c70 000d  ld   $0d
              8c71 0020  ld   $20
              8c72 00c0  ld   $c0
              8c73 000e  ld   $0e
              8c74 00a5  ld   $a5
              8c75 0049  ld   $49
              8c76 00f0  ld   $f0
              8c77 0001  ld   $01
              8c78 00e8  ld   $e8
              8c79 0086  ld   $86
              8c7a 0038  ld   $38
              8c7b 00a2  ld   $a2
              8c7c 0003  ld   $03
              8c7d 0088  ld   $88
              8c7e 0086  ld   $86
              8c7f 0047  ld   $47
              8c80 00ca  ld   $ca
              8c81 0010  ld   $10
              8c82 00c9  ld   $c9
              8c83 00a5  ld   $a5
              8c84 004c  ld   $4c
              8c85 000a  ld   $0a
              8c86 000a  ld   $0a
              8c87 0005  ld   $05
              8c88 0038  ld   $38
              8c89 00c9  ld   $c9
              8c8a 0020  ld   $20
              8c8b 00b0  ld   $b0
              8c8c 0006  ld   $06
              8c8d 00a6  ld   $a6
              8c8e 0038  ld   $38
              8c8f 00f0  ld   $f0
              8c90 0002  ld   $02
              8c91 0009  ld   $09
              8c92 0080  ld   $80
              8c93 0085  ld   $85
              8c94 004c  ld   $4c
              8c95 0084  ld   $84
              8c96 003a  ld   $3a
              8c97 00b9  ld   $b9
              8c98 0000  ld   $00
              8c99 0002  ld   $02
              8c9a 00c9  ld   $c9
              8c9b 00bb  ld   $bb
              8c9c 00f0  ld   $f0
              8c9d 0004  ld   $04
              8c9e 00c9  ld   $c9
              8c9f 008d  ld   $8d
              8ca0 00d0  ld   $d0
              8ca1 002c  ld   $2c
              8ca2 00a5  ld   $a5
              8ca3 0047  ld   $47
              8ca4 0020  ld   $20
              8ca5 00b7  ld   $b7
              8ca6 000d  ld   $0d
              8ca7 00aa  ld   $aa
              8ca8 00bd  ld   $bd
              8ca9 009e  ld   $9e
              8caa 000f  ld   $0f
              8cab 00c5  ld   $c5
              8cac 004a  ld   $4a
              8cad 00d0  ld   $d0
              8cae 0013  ld   $13
              8caf 00bd  ld   $bd
              8cb0 005e  ld   $5e
              8cb1 000f  ld   $0f
              8cb2 00c5  ld   $c5
              8cb3 004b  ld   $4b
              8cb4 00d0  ld   $d0
              8cb5 000c  ld   $0c
              8cb6 00a5  ld   $a5
              8cb7 004c  ld   $4c
              8cb8 00a4  ld   $a4
              8cb9 0040  ld   $40
              8cba 00c0  ld   $c0
              8cbb 009d  ld   $9d
              8cbc 00f0  ld   $f0
              8cbd 0020  ld   $20
              8cbe 00c5  ld   $c5
              8cbf 0040  ld   $40
              8cc0 00f0  ld   $f0
              8cc1 0037  ld   $37
              8cc2 00c6  ld   $c6
              8cc3 0047  ld   $47
              8cc4 00d0  ld   $d0
              8cc5 00dc  ld   $dc
              8cc6 00e6  ld   $e6
              8cc7 004c  ld   $4c
              8cc8 00c6  ld   $c6
              8cc9 0038  ld   $38
              8cca 00f0  ld   $f0
              8ccb 00d6  ld   $d6
              8ccc 00a4  ld   $a4
              8ccd 003a  ld   $3a
              8cce 0098  ld   $98
              8ccf 00aa  ld   $aa
              8cd0 0020  ld   $20
              8cd1 00bb  ld   $bb
              8cd2 000e  ld   $0e
              8cd3 0020  ld   $20
              8cd4 0079  ld   $79
              8cd5 000e  ld   $0e
              8cd6 00a9  ld   $a9
              8cd7 00de  ld   $de
              8cd8 0020  ld   $20
              8cd9 00ef  ld   $ef
              8cda 00ff  ld   $ff
              8cdb 004c  ld   $4c
              8cdc 009d  ld   $9d
              8cdd 000c  ld   $0c
              8cde 00e9  ld   $e9
              8cdf 0081  ld   $81
              8ce0 004a  ld   $4a
              8ce1 00d0  ld   $d0
              8ce2 00e9  ld   $e9
              8ce3 00a4  ld   $a4
              8ce4 0049  ld   $49
              8ce5 00a6  ld   $a6
              8ce6 0048  ld   $48
              8ce7 00d0  ld   $d0
              8ce8 0001  ld   $01
              8ce9 0088  ld   $88
              8cea 00ca  ld   $ca
              8ceb 008a  ld   $8a
              8cec 0018  ld   $18
              8ced 00e5  ld   $e5
              8cee 0044  ld   $44
              8cef 0085  ld   $85
              8cf0 0048  ld   $48
              8cf1 0010  ld   $10
              8cf2 0001  ld   $01
              8cf3 00c8  ld   $c8
              8cf4 0098  ld   $98
              8cf5 00e5  ld   $e5
              8cf6 0045  ld   $45
              8cf7 00d0  ld   $d0
              8cf8 0043  ld   $43
              8cf9 00a4  ld   $a4
              8cfa 0041  ld   $41
              8cfb fe00  bra  ac          ;+-----------------------------------+
              8cfc fcfd  bra  $8cfd       ;|                                   |
              8cfd 1418  ld   $18,y       ;| Trampoline for page $8c00 lookups |
              8cfe e006  jmp  y,$06       ;|                                   |
              8cff c218  st   [$18]       ;+-----------------------------------+
              8d00 00b9  ld   $b9
              8d01 0047  ld   $47
              8d02 0000  ld   $00
              8d03 0091  ld   $91
              8d04 0044  ld   $44
              8d05 0088  ld   $88
              8d06 0010  ld   $10
              8d07 00f8  ld   $f8
              8d08 00a9  ld   $a9
              8d09 0001  ld   $01
              8d0a 004c  ld   $4c
              8d0b 008c  ld   $8c
              8d0c 000c  ld   $0c
              8d0d 00a6  ld   $a6
              8d0e 0044  ld   $44
              8d0f 00a4  ld   $a4
              8d10 0045  ld   $45
              8d11 0020  ld   $20
              8d12 00bb  ld   $bb
              8d13 000e  ld   $0e
              8d14 0020  ld   $20
              8d15 006f  ld   $6f
              8d16 000e  ld   $0e
              8d17 00a0  ld   $a0
              8d18 0000  ld   $00
              8d19 00a9  ld   $a9
              8d1a 00ad  ld   $ad
              8d1b 0020  ld   $20
              8d1c 00ef  ld   $ef
              8d1d 00ff  ld   $ff
              8d1e 0020  ld   $20
              8d1f 0077  ld   $77
              8d20 000e  ld   $0e
              8d21 00a1  ld   $a1
              8d22 0044  ld   $44
              8d23 00a8  ld   $a8
              8d24 004a  ld   $4a
              8d25 0090  ld   $90
              8d26 000b  ld   $0b
              8d27 004a  ld   $4a
              8d28 00b0  ld   $b0
              8d29 0017  ld   $17
              8d2a 00c9  ld   $c9
              8d2b 0022  ld   $22
              8d2c 00f0  ld   $f0
              8d2d 0013  ld   $13
              8d2e 0029  ld   $29
              8d2f 0007  ld   $07
              8d30 0009  ld   $09
              8d31 0080  ld   $80
              8d32 004a  ld   $4a
              8d33 00aa  ld   $aa
              8d34 00bd  ld   $bd
              8d35 0000  ld   $00
              8d36 000f  ld   $0f
              8d37 00b0  ld   $b0
              8d38 0004  ld   $04
              8d39 004a  ld   $4a
              8d3a 004a  ld   $4a
              8d3b 004a  ld   $4a
              8d3c 004a  ld   $4a
              8d3d 0029  ld   $29
              8d3e 000f  ld   $0f
              8d3f 00d0  ld   $d0
              8d40 0004  ld   $04
              8d41 00a0  ld   $a0
              8d42 0080  ld   $80
              8d43 00a9  ld   $a9
              8d44 0000  ld   $00
              8d45 00aa  ld   $aa
              8d46 00bd  ld   $bd
              8d47 0044  ld   $44
              8d48 000f  ld   $0f
              8d49 0085  ld   $85
              8d4a 0040  ld   $40
              8d4b 0029  ld   $29
              8d4c 0003  ld   $03
              8d4d 0085  ld   $85
              8d4e 0041  ld   $41
              8d4f 0098  ld   $98
              8d50 0029  ld   $29
              8d51 008f  ld   $8f
              8d52 00aa  ld   $aa
              8d53 0098  ld   $98
              8d54 00a0  ld   $a0
              8d55 0003  ld   $03
              8d56 00e0  ld   $e0
              8d57 008a  ld   $8a
              8d58 00f0  ld   $f0
              8d59 000b  ld   $0b
              8d5a 004a  ld   $4a
              8d5b 0090  ld   $90
              8d5c 0008  ld   $08
              8d5d 004a  ld   $4a
              8d5e 004a  ld   $4a
              8d5f 0009  ld   $09
              8d60 0020  ld   $20
              8d61 0088  ld   $88
              8d62 00d0  ld   $d0
              8d63 00fa  ld   $fa
              8d64 00c8  ld   $c8
              8d65 0088  ld   $88
              8d66 00d0  ld   $d0
              8d67 00f2  ld   $f2
              8d68 0060  ld   $60
              8d69 0020  ld   $20
              8d6a 00a1  ld   $a1
              8d6b 000d  ld   $0d
              8d6c 000e  ld   $0e
              8d6d 0000  ld   $00
              8d6e 0000  ld   $00
              8d6f 0048  ld   $48
              8d70 00b1  ld   $b1
              8d71 0044  ld   $44
              8d72 0020  ld   $20
              8d73 00dc  ld   $dc
              8d74 00ff  ld   $ff
              8d75 00a2  ld   $a2
              8d76 0001  ld   $01
              8d77 0020  ld   $20
              8d78 0079  ld   $79
              8d79 000e  ld   $0e
              8d7a 00c4  ld   $c4
              8d7b 0041  ld   $41
              8d7c 00c8  ld   $c8
              8d7d 0090  ld   $90
              8d7e 00f1  ld   $f1
              8d7f 00a2  ld   $a2
              8d80 0003  ld   $03
              8d81 00c0  ld   $c0
              8d82 0003  ld   $03
              8d83 0090  ld   $90
              8d84 00f2  ld   $f2
              8d85 0068  ld   $68
              8d86 00a8  ld   $a8
              8d87 00b9  ld   $b9
              8d88 005e  ld   $5e
              8d89 000f  ld   $0f
              8d8a 0085  ld   $85
              8d8b 0042  ld   $42
              8d8c 00b9  ld   $b9
              8d8d 009e  ld   $9e
              8d8e 000f  ld   $0f
              8d8f 0085  ld   $85
              8d90 0043  ld   $43
              8d91 00a9  ld   $a9
              8d92 0000  ld   $00
              8d93 00a0  ld   $a0
              8d94 0005  ld   $05
              8d95 0006  ld   $06
              8d96 0043  ld   $43
              8d97 0026  ld   $26
              8d98 0042  ld   $42
              8d99 002a  ld   $2a
              8d9a 0088  ld   $88
              8d9b 00d0  ld   $d0
              8d9c 00f8  ld   $f8
              8d9d 0069  ld   $69
              8d9e 00bf  ld   $bf
              8d9f 0020  ld   $20
              8da0 00ef  ld   $ef
              8da1 00ff  ld   $ff
              8da2 00ca  ld   $ca
              8da3 00d0  ld   $d0
              8da4 00ec  ld   $ec
              8da5 0020  ld   $20
              8da6 0077  ld   $77
              8da7 000e  ld   $0e
              8da8 00a2  ld   $a2
              8da9 0006  ld   $06
              8daa 00e0  ld   $e0
              8dab 0003  ld   $03
              8dac 00d0  ld   $d0
              8dad 0012  ld   $12
              8dae 00a4  ld   $a4
              8daf 0041  ld   $41
              8db0 00f0  ld   $f0
              8db1 000e  ld   $0e
              8db2 00a5  ld   $a5
              8db3 0040  ld   $40
              8db4 00c9  ld   $c9
              8db5 00e8  ld   $e8
              8db6 00b1  ld   $b1
              8db7 0044  ld   $44
              8db8 00b0  ld   $b0
              8db9 001c  ld   $1c
              8dba 0020  ld   $20
              8dbb 00dc  ld   $dc
              8dbc 00ff  ld   $ff
              8dbd 0088  ld   $88
              8dbe 00d0  ld   $d0
              8dbf 00f2  ld   $f2
              8dc0 0006  ld   $06
              8dc1 0040  ld   $40
              8dc2 0090  ld   $90
              8dc3 000e  ld   $0e
              8dc4 00bd  ld   $bd
              8dc5 0051  ld   $51
              8dc6 000f  ld   $0f
              8dc7 0020  ld   $20
              8dc8 00ef  ld   $ef
              8dc9 00ff  ld   $ff
              8dca 00bd  ld   $bd
              8dcb 0057  ld   $57
              8dcc 000f  ld   $0f
              8dcd 00f0  ld   $f0
              8dce 0003  ld   $03
              8dcf 0020  ld   $20
              8dd0 00ef  ld   $ef
              8dd1 00ff  ld   $ff
              8dd2 00ca  ld   $ca
              8dd3 00d0  ld   $d0
              8dd4 00d5  ld   $d5
              8dd5 0060  ld   $60
              8dd6 0020  ld   $20
              8dd7 00f4  ld   $f4
              8dd8 000e  ld   $0e
              8dd9 00aa  ld   $aa
              8dda 00e8  ld   $e8
              8ddb 00d0  ld   $d0
              8ddc 0001  ld   $01
              8ddd 00c8  ld   $c8
              8dde 0098  ld   $98
              8ddf 0020  ld   $20
              8de0 00dc  ld   $dc
              8de1 00ff  ld   $ff
              8de2 008a  ld   $8a
              8de3 004c  ld   $4c
              8de4 00dc  ld   $dc
              8de5 00ff  ld   $ff
              8de6 00a2  ld   $a2
              8de7 0001  ld   $01
              8de8 00a9  ld   $a9
              8de9 00a0  ld   $a0
              8dea 0020  ld   $20
              8deb 00ef  ld   $ef
              8dec 00ff  ld   $ff
              8ded 00ca  ld   $ca
              8dee 00d0  ld   $d0
              8def 00f8  ld   $f8
              8df0 0060  ld   $60
              8df1 00c9  ld   $c9
              8df2 009b  ld   $9b
              8df3 00f0  ld   $f0
              8df4 000a  ld   $0a
              8df5 0020  ld   $20
              8df6 00ef  ld   $ef
              8df7 00ff  ld   $ff
              8df8 00c9  ld   $c9
              8df9 00df  ld   $df
              8dfa 00f0  ld   $f0
              8dfb fe00  bra  ac          ;+-----------------------------------+
              8dfc fcfd  bra  $8dfd       ;|                                   |
              8dfd 1418  ld   $18,y       ;| Trampoline for page $8d00 lookups |
              8dfe e006  jmp  y,$06       ;|                                   |
              8dff c218  st   [$18]       ;+-----------------------------------+
              8e00 0012  ld   $12
              8e01 00e8  ld   $e8
              8e02 0010  ld   $10
              8e03 0012  ld   $12
              8e04 00a9  ld   $a9
              8e05 00dc  ld   $dc
              8e06 0020  ld   $20
              8e07 00ef  ld   $ef
              8e08 00ff  ld   $ff
              8e09 0020  ld   $20
              8e0a 00bb  ld   $bb
              8e0b 000e  ld   $0e
              8e0c 00a9  ld   $a9
              8e0d 00a1  ld   $a1
              8e0e 0020  ld   $20
              8e0f 00ef  ld   $ef
              8e10 00ff  ld   $ff
              8e11 00a2  ld   $a2
              8e12 0001  ld   $01
              8e13 00ca  ld   $ca
              8e14 0030  ld   $30
              8e15 00f3  ld   $f3
              8e16 002c  ld   $2c
              8e17 0011  ld   $11
              8e18 00d0  ld   $d0
              8e19 0010  ld   $10
              8e1a 00fb  ld   $fb
              8e1b 00ad  ld   $ad
              8e1c 0010  ld   $10
              8e1d 00d0  ld   $d0
              8e1e 009d  ld   $9d
              8e1f 0000  ld   $00
              8e20 0002  ld   $02
              8e21 00c9  ld   $c9
              8e22 008d  ld   $8d
              8e23 00d0  ld   $d0
              8e24 00d1  ld   $d1
              8e25 0060  ld   $60
              8e26 00b9  ld   $b9
              8e27 0000  ld   $00
              8e28 0002  ld   $02
              8e29 00c8  ld   $c8
              8e2a 00c9  ld   $c9
              8e2b 00a0  ld   $a0
              8e2c 00f0  ld   $f0
              8e2d 00f8  ld   $f8
              8e2e 0060  ld   $60
              8e2f 00a9  ld   $a9
              8e30 008d  ld   $8d
              8e31 004c  ld   $4c
              8e32 00ef  ld   $ef
              8e33 00ff  ld   $ff
              8e34 00a2  ld   $a2
              8e35 0000  ld   $00
              8e36 0086  ld   $86
              8e37 0048  ld   $48
              8e38 0086  ld   $86
              8e39 0049  ld   $49
              8e3a 00f0  ld   $f0
              8e3b 0015  ld   $15
              8e3c 00a2  ld   $a2
              8e3d 0003  ld   $03
              8e3e 000a  ld   $0a
              8e3f 000a  ld   $0a
              8e40 000a  ld   $0a
              * 5 times
              8e43 0026  ld   $26
              8e44 0048  ld   $48
              8e45 0026  ld   $26
              8e46 0049  ld   $49
              8e47 00ca  ld   $ca
              8e48 0010  ld   $10
              8e49 00f8  ld   $f8
              8e4a 00b5  ld   $b5
              8e4b 0049  ld   $49
              8e4c 0095  ld   $95
              8e4d 0047  ld   $47
              8e4e 00e8  ld   $e8
              8e4f 00f0  ld   $f0
              8e50 00f9  ld   $f9
              8e51 00b9  ld   $b9
              8e52 0000  ld   $00
              8e53 0002  ld   $02
              8e54 00c8  ld   $c8
              8e55 0049  ld   $49
              8e56 00b0  ld   $b0
              8e57 00c9  ld   $c9
              8e58 000a  ld   $0a
              8e59 0090  ld   $90
              8e5a 00e1  ld   $e1
              8e5b 0069  ld   $69
              8e5c 0088  ld   $88
              8e5d 00c9  ld   $c9
              8e5e 00fa  ld   $fa
              8e5f 00b0  ld   $b0
              8e60 00db  ld   $db
              8e61 0060  ld   $60
              8e62 004c  ld   $4c
              8e63 00e9  ld   $e9
              8e64 000b  ld   $0b
              8e65 00a5  ld   $a5
              8e66 0041  ld   $41
              8e67 0038  ld   $38
              8e68 00a4  ld   $a4
              8e69 0045  ld   $45
              8e6a 00aa  ld   $aa
              8e6b 0010  ld   $10
              8e6c 0001  ld   $01
              8e6d 0088  ld   $88
              8e6e 0065  ld   $65
              8e6f 0044  ld   $44
              8e70 0090  ld   $90
              8e71 0001  ld   $01
              8e72 00c8  ld   $c8
              8e73 0060  ld   $60
              8e74 000f  ld   $0f
              8e75 0000  ld   $00
              8e76 00de  ld   $de
              8e77 0040  ld   $40
              8e78 0002  ld   $02
              8e79 0045  ld   $45
              8e7a 0003  ld   $03
              8e7b 00d0  ld   $d0
              8e7c 0008  ld   $08
              8e7d 0040  ld   $40
              8e7e 0009  ld   $09
              8e7f 0030  ld   $30
              8e80 0022  ld   $22
              8e81 0045  ld   $45
              8e82 0033  ld   $33
              8e83 00d0  ld   $d0
              8e84 0008  ld   $08
              8e85 0040  ld   $40
              8e86 0009  ld   $09
              8e87 0040  ld   $40
              8e88 0002  ld   $02
              8e89 0045  ld   $45
              8e8a 0033  ld   $33
              8e8b 00d0  ld   $d0
              8e8c 0008  ld   $08
              8e8d 0040  ld   $40
              8e8e 0009  ld   $09
              8e8f 0040  ld   $40
              8e90 0002  ld   $02
              8e91 0045  ld   $45
              8e92 00b3  ld   $b3
              8e93 00d0  ld   $d0
              8e94 0008  ld   $08
              8e95 0040  ld   $40
              8e96 0009  ld   $09
              8e97 0000  ld   $00
              8e98 0022  ld   $22
              8e99 0044  ld   $44
              8e9a 0033  ld   $33
              8e9b 00d0  ld   $d0
              8e9c 008c  ld   $8c
              8e9d 0044  ld   $44
              8e9e 0000  ld   $00
              8e9f 0011  ld   $11
              8ea0 0022  ld   $22
              8ea1 0044  ld   $44
              8ea2 0033  ld   $33
              8ea3 00d0  ld   $d0
              8ea4 008c  ld   $8c
              8ea5 0044  ld   $44
              8ea6 009a  ld   $9a
              8ea7 0010  ld   $10
              8ea8 0022  ld   $22
              8ea9 0044  ld   $44
              8eaa 0033  ld   $33
              8eab 00d0  ld   $d0
              8eac 0008  ld   $08
              8ead 0040  ld   $40
              8eae 0009  ld   $09
              8eaf 0010  ld   $10
              8eb0 0022  ld   $22
              8eb1 0044  ld   $44
              8eb2 0033  ld   $33
              8eb3 00d0  ld   $d0
              8eb4 0008  ld   $08
              8eb5 0040  ld   $40
              8eb6 0009  ld   $09
              8eb7 0062  ld   $62
              8eb8 0013  ld   $13
              8eb9 0078  ld   $78
              8eba 00a9  ld   $a9
              8ebb 0000  ld   $00
              8ebc 0021  ld   $21
              8ebd 0081  ld   $81
              8ebe 0082  ld   $82
              8ebf 0000  ld   $00
              8ec0 0000  ld   $00
              8ec1 0059  ld   $59
              8ec2 004d  ld   $4d
              8ec3 0091  ld   $91
              8ec4 0092  ld   $92
              8ec5 0086  ld   $86
              8ec6 004a  ld   $4a
              8ec7 0085  ld   $85
              8ec8 009d  ld   $9d
              8ec9 00ac  ld   $ac
              8eca 00a9  ld   $a9
              8ecb 00ac  ld   $ac
              8ecc 00a3  ld   $a3
              8ecd 00a8  ld   $a8
              8ece 00a4  ld   $a4
              8ecf 00d9  ld   $d9
              8ed0 0000  ld   $00
              8ed1 00d8  ld   $d8
              8ed2 00a4  ld   $a4
              8ed3 00a4  ld   $a4
              8ed4 0000  ld   $00
              8ed5 001c  ld   $1c
              8ed6 008a  ld   $8a
              8ed7 001c  ld   $1c
              8ed8 0023  ld   $23
              8ed9 005d  ld   $5d
              8eda 008b  ld   $8b
              8edb 001b  ld   $1b
              8edc 00a1  ld   $a1
              8edd 009d  ld   $9d
              8ede 008a  ld   $8a
              8edf 001d  ld   $1d
              8ee0 0023  ld   $23
              8ee1 009d  ld   $9d
              8ee2 008b  ld   $8b
              8ee3 001d  ld   $1d
              8ee4 00a1  ld   $a1
              8ee5 0000  ld   $00
              8ee6 0029  ld   $29
              8ee7 0019  ld   $19
              8ee8 00ae  ld   $ae
              8ee9 0069  ld   $69
              8eea 00a8  ld   $a8
              8eeb 0019  ld   $19
              8eec 0023  ld   $23
              8eed 0024  ld   $24
              8eee 0053  ld   $53
              8eef 001b  ld   $1b
              8ef0 0023  ld   $23
              8ef1 0024  ld   $24
              8ef2 0053  ld   $53
              8ef3 0019  ld   $19
              8ef4 00a1  ld   $a1
              8ef5 0000  ld   $00
              8ef6 001a  ld   $1a
              8ef7 005b  ld   $5b
              8ef8 005b  ld   $5b
              8ef9 00a5  ld   $a5
              8efa 0069  ld   $69
              8efb fe00  bra  ac          ;+-----------------------------------+
              8efc fcfd  bra  $8efd       ;|                                   |
              8efd 1418  ld   $18,y       ;| Trampoline for page $8e00 lookups |
              8efe e006  jmp  y,$06       ;|                                   |
              8eff c218  st   [$18]       ;+-----------------------------------+
              8f00 0024  ld   $24
              8f01 0024  ld   $24
              8f02 00ae  ld   $ae
              8f03 00ae  ld   $ae
              8f04 00a8  ld   $a8
              8f05 00ad  ld   $ad
              8f06 0029  ld   $29
              8f07 0000  ld   $00
              8f08 007c  ld   $7c
              8f09 0000  ld   $00
              8f0a 0015  ld   $15
              8f0b 009c  ld   $9c
              8f0c 006d  ld   $6d
              8f0d 009c  ld   $9c
              8f0e 00a5  ld   $a5
              8f0f 0069  ld   $69
              8f10 0029  ld   $29
              8f11 0053  ld   $53
              8f12 0084  ld   $84
              8f13 0013  ld   $13
              8f14 0034  ld   $34
              8f15 0011  ld   $11
              8f16 00a5  ld   $a5
              8f17 0069  ld   $69
              8f18 0023  ld   $23
              8f19 00a0  ld   $a0
              8f1a 00d8  ld   $d8
              8f1b 0062  ld   $62
              8f1c 005a  ld   $5a
              8f1d 0048  ld   $48
              8f1e 0026  ld   $26
              8f1f 0062  ld   $62
              8f20 0094  ld   $94
              8f21 0088  ld   $88
              8f22 0054  ld   $54
              8f23 0044  ld   $44
              8f24 00c8  ld   $c8
              8f25 0054  ld   $54
              8f26 0068  ld   $68
              8f27 0044  ld   $44
              8f28 00e8  ld   $e8
              8f29 0094  ld   $94
              8f2a 0000  ld   $00
              8f2b 00b4  ld   $b4
              8f2c 0008  ld   $08
              8f2d 0084  ld   $84
              8f2e 0074  ld   $74
              8f2f 00b4  ld   $b4
              8f30 0028  ld   $28
              8f31 006e  ld   $6e
              8f32 0074  ld   $74
              8f33 00f4  ld   $f4
              8f34 00cc  ld   $cc
              8f35 004a  ld   $4a
              8f36 0072  ld   $72
              8f37 00f2  ld   $f2
              8f38 00a4  ld   $a4
              8f39 008a  ld   $8a
              8f3a 0000  ld   $00
              8f3b 00aa  ld   $aa
              8f3c 00a2  ld   $a2
              8f3d 00a2  ld   $a2
              8f3e 0074  ld   $74
              8f3f 0074  ld   $74
              8f40 0074  ld   $74
              8f41 0072  ld   $72
              8f42 0044  ld   $44
              8f43 0068  ld   $68
              8f44 00b2  ld   $b2
              8f45 0032  ld   $32
              8f46 00b2  ld   $b2
              8f47 0000  ld   $00
              8f48 0022  ld   $22
              8f49 0026  ld   $26
              8f4a 001a  ld   $1a
              8f4b 001a  ld   $1a
              8f4c 0026  ld   $26
              8f4d 0026  ld   $26
              8f4e 0072  ld   $72
              8f4f 0072  ld   $72
              8f50 0088  ld   $88
              8f51 00c8  ld   $c8
              8f52 00c4  ld   $c4
              8f53 00ca  ld   $ca
              8f54 0026  ld   $26
              8f55 0048  ld   $48
              8f56 0044  ld   $44
              8f57 0044  ld   $44
              8f58 00a2  ld   $a2
              8f59 00c8  ld   $c8
              8f5a 005e  ld   $5e
              8f5b 0000  ld   $00
              8f5c 00e3  ld   $e3
              8f5d 0075  ld   $75
              8f5e 002b  ld   $2b
              8f5f 003e  ld   $3e
              8f60 001a  ld   $1a
              8f61 003d  ld   $3d
              8f62 00fc  ld   $fc
              8f63 000f  ld   $0f
              8f64 0082  ld   $82
              8f65 00ff  ld   $ff
              8f66 0035  ld   $35
              8f67 003f  ld   $3f
              8f68 003b  ld   $3b
              8f69 0011  ld   $11
              8f6a 0010  ld   $10
              8f6b 00d0  ld   $d0
              8f6c 002b  ld   $2b
              8f6d 0030  ld   $30
              8f6e 001a  ld   $1a
              8f6f 000f  ld   $0f
              8f70 005e  ld   $5e
              8f71 003d  ld   $3d
              8f72 008c  ld   $8c
              8f73 00ff  ld   $ff
              8f74 0035  ld   $35
              8f75 003f  ld   $3f
              8f76 003b  ld   $3b
              8f77 008c  ld   $8c
              8f78 00ff  ld   $ff
              8f79 00e6  ld   $e6
              8f7a 0060  ld   $60
              8f7b 0035  ld   $35
              8f7c 0050  ld   $50
              8f7d 0021  ld   $21
              8f7e 00e6  ld   $e6
              8f7f 0020  ld   $20
              8f80 00e3  ld   $e3
              8f81 0060  ld   $60
              8f82 008c  ld   $8c
              8f83 000a  ld   $0a
              8f84 0035  ld   $35
              8f85 0072  ld   $72
              8f86 002a  ld   $2a
              8f87 0059  ld   $59
              8f88 0007  ld   $07
              8f89 008c  ld   $8c
              8f8a 000a  ld   $0a
              8f8b 008c  ld   $8c
              8f8c 001a  ld   $1a
              8f8d 0035  ld   $35
              8f8e 0072  ld   $72
              8f8f 0033  ld   $33
              8f90 00ec  ld   $ec
              8f91 0000  ld   $00
              8f92 008c  ld   $8c
              8f93 001a  ld   $1a
              8f94 0082  ld   $82
              8f95 007f  ld   $7f
              8f96 00e6  ld   $e6
              8f97 0080  ld   $80
              8f98 00f3  ld   $f3
              8f99 0030  ld   $30
              8f9a 0011  ld   $11
              8f9b 0012  ld   $12
              8f9c 00d0  ld   $d0
              8f9d 002b  ld   $2b
              8f9e 0030  ld   $30
              8f9f 00ad  ld   $ad
              8fa0 0035  ld   $35
              8fa1 003f  ld   $3f
              8fa2 0075  ld   $75
              8fa3 005e  ld   $5e
              8fa4 003c  ld   $3c
              8fa5 0088  ld   $88
              8fa6 0080  ld   $80
              8fa7 0085  ld   $85
              8fa8 000f  ld   $0f
              8fa9 005f  ld   $5f
              8faa 001a  ld   $1a
              8fab 001c  ld   $1c
              8fac 00e3  ld   $e3
              8fad 0002  ld   $02
              8fae 00f6  ld   $f6
              8faf 00e3  ld   $e3
              8fb0 0042  ld   $42
              8fb1 0035  ld   $35
              8fb2 0072  ld   $72
              8fb3 005b  ld   $5b
              8fb4 0021  ld   $21
              8fb5 007a  ld   $7a
              8fb6 00e6  ld   $e6
              8fb7 0002  ld   $02
              8fb8 002b  ld   $2b
              8fb9 007a  ld   $7a
              8fba 0059  ld   $59
              8fbb 0000  ld   $00
              8fbc 00f0  ld   $f0
              8fbd 0030  ld   $30
              8fbe 0011  ld   $11
              8fbf 0010  ld   $10
              8fc0 00d0  ld   $d0
              8fc1 002b  ld   $2b
              8fc2 0030  ld   $30
              8fc3 00ad  ld   $ad
              8fc4 0035  ld   $35
              8fc5 003f  ld   $3f
              8fc6 006c  ld   $6c
              8fc7 00fc  ld   $fc
              8fc8 003c  ld   $3c
              8fc9 0082  ld   $82
              8fca 007f  ld   $7f
              8fcb 0035  ld   $35
              8fcc 0072  ld   $72
              8fcd 0071  ld   $71
              8fce 00f3  ld   $f3
              8fcf 0030  ld   $30
              8fd0 0059  ld   $59
              8fd1 001f  ld   $1f
              8fd2 005e  ld   $5e
              8fd3 003c  ld   $3c
              8fd4 001a  ld   $1a
              8fd5 003c  ld   $3c
              8fd6 00e6  ld   $e6
              8fd7 0001  ld   $01
              8fd8 0035  ld   $35
              8fd9 0053  ld   $53
              8fda 0089  ld   $89
              8fdb 0059  ld   $59
              8fdc 00a0  ld   $a0
              8fdd 0085  ld   $85
              8fde 000f  ld   $0f
              8fdf 005f  ld   $5f
              8fe0 0021  ld   $21
              8fe1 007a  ld   $7a
              8fe2 00e6  ld   $e6
              8fe3 0006  ld   $06
              8fe4 002b  ld   $2b
              8fe5 007a  ld   $7a
              8fe6 0059  ld   $59
              8fe7 001e  ld   $1e
              8fe8 005e  ld   $5e
              8fe9 003c  ld   $3c
              8fea 008c  ld   $8c
              8feb 0014  ld   $14
              8fec 0035  ld   $35
              8fed 0072  ld   $72
              8fee 009b  ld   $9b
              8fef 0059  ld   $59
              8ff0 00c0  ld   $c0
              8ff1 0085  ld   $85
              8ff2 000f  ld   $0f
              8ff3 005f  ld   $5f
              8ff4 0021  ld   $21
              8ff5 007a  ld   $7a
              8ff6 00e6  ld   $e6
              8ff7 0006  ld   $06
              8ff8 002b  ld   $2b
              8ff9 007a  ld   $7a
              8ffa 0011  ld   $11
              8ffb fe00  bra  ac          ;+-----------------------------------+
              8ffc fcfd  bra  $8ffd       ;|                                   |
              8ffd 1418  ld   $18,y       ;| Trampoline for page $8f00 lookups |
              8ffe e006  jmp  y,$06       ;|                                   |
              8fff c218  st   [$18]       ;+-----------------------------------+
              9000 0007  ld   $07
              9001 005f  ld   $5f
              9002 002b  ld   $2b
              9003 0030  ld   $30
              9004 0063  ld   $63
              9005 0059  ld   $59
              9006 00ff  ld   $ff
              9007 005e  ld   $5e
              9008 000e  ld   $0e
              9009 0011  ld   $11
              900a 0000  ld   $00
              900b 0004  ld   $04
              900c 007f  ld   $7f
              900d 003e  ld   $3e
              900e 0018  ld   $18
              900f 00a2  ld   $a2
              9010 0000  ld   $00
              9011 00a0  ld   $a0
              9012 000c  ld   $0c
              9013 00b9  ld   $b9
              9014 00ce  ld   $ce
              9015 005e  ld   $5e
              9016 0084  ld   $84
              9017 003a  ld   $3a
              9018 00a0  ld   $a0
              9019 0007  ld   $07
              901a 009d  ld   $9d
              901b 0000  ld   $00
              901c 0001  ld   $01
              901d 0069  ld   $69
              901e 0001  ld   $01
              901f 00e8  ld   $e8
              9020 00e8  ld   $e8
              9021 0088  ld   $88
              9022 00d0  ld   $d0
              9023 00f6  ld   $f6
              9024 00e8  ld   $e8
              9025 00e8  ld   $e8
              9026 00e8  ld   $e8
              9027 00e8  ld   $e8
              9028 00a4  ld   $a4
              9029 003a  ld   $3a
              902a 0088  ld   $88
              902b 0010  ld   $10
              902c 00e6  ld   $e6
              902d 004c  ld   $4c
              902e 0005  ld   $05
              902f 00c1  ld   $c1
              9030 0077  ld   $77
              9031 0070  ld   $70
              9032 0056  ld   $56
              9033 004f  ld   $4f
              9034 0048  ld   $48
              9035 0041  ld   $41
              9036 003a  ld   $3a
              9037 0033  ld   $33
              9038 002c  ld   $2c
              9039 0025  ld   $25
              903a 001e  ld   $1e
              903b 0017  ld   $17
              903c 0010  ld   $10
              903d 00d8  ld   $d8
              903e 0058  ld   $58
              903f 00a2  ld   $a2
              9040 00f7  ld   $f7
              9041 009a  ld   $9a
              9042 004c  ld   $4c
              9043 001a  ld   $1a
              9044 00ff  ld   $ff
              9045 005f  ld   $5f
              9046 0000  ld   $00
              9047 0000  ld   $00
              9048 002b  ld   $2b
              9049 001a  ld   $1a
              904a 0011  ld   $11
              904b 000c  ld   $0c
              904c 000b  ld   $0b
              904d 002b  ld   $2b
              904e 0022  ld   $22
              904f 00b4  ld   $b4
              9050 00e6  ld   $e6
              9051 0011  ld   $11
              9052 00fe  ld   $fe
              9053 00ff  ld   $ff
              9054 00f6  ld   $f6
              9055 0090  ld   $90
              9056 00fe  ld   $fe
              9057 002b  ld   $2b
              9058 007c  ld   $7c
              9059 00df  ld   $df
              905a 00fa  ld   $fa
              905b 0021  ld   $21
              905c 0024  ld   $24
              905d 00ec  ld   $ec
              905e 0000  ld   $00
              905f 0021  ld   $21
              9060 0026  ld   $26
              9061 00ec  ld   $ec
              9062 0002  ld   $02
              9063 0021  ld   $21
              9064 0028  ld   $28
              9065 00ec  ld   $ec
              9066 0004  ld   $04
              9067 0011  ld   $11
              9068 00e1  ld   $e1
              9069 0004  ld   $04
              906a 002b  ld   $2b
              906b 0022  ld   $22
              906c 0011  ld   $11
              906d 0000  ld   $00
              906e 003f  ld   $3f
              906f 002b  ld   $2b
              9070 0024  ld   $24
              9071 005e  ld   $5e
              9072 0026  ld   $26
              9073 0021  ld   $21
              9074 007c  ld   $7c
              9075 005e  ld   $5e
              9076 0027  ld   $27
              9077 008c  ld   $8c
              9078 008d  ld   $8d
              9079 0035  ld   $35
              907a 003f  ld   $3f
              907b 003b  ld   $3b
              907c 001a  ld   $1a
              907d 007a  ld   $7a
              907e 00e6  ld   $e6
              907f 00fb  ld   $fb
              9080 0035  ld   $35
              9081 0056  ld   $56
              9082 003b  ld   $3b
              9083 0059  ld   $59
              9084 0000  ld   $00
              9085 0035  ld   $35
              9086 0072  ld   $72
              9087 0096  ld   $96
              9088 0021  ld   $21
              9089 007a  ld   $7a
              908a 002b  ld   $2b
              908b 0028  ld   $28
              908c 0082  ld   $82
              908d 00ff  ld   $ff
              908e 00e6  ld   $e6
              908f 00fb  ld   $fb
              9090 0035  ld   $35
              9091 004d  ld   $4d
              9092 004c  ld   $4c
              9093 0011  ld   $11
              9094 00fb  ld   $fb
              9095 00ff  ld   $ff
              9096 00b4  ld   $b4
              9097 00cb  ld   $cb
              9098 0093  ld   $93
              9099 0028  ld   $28
              909a 00e3  ld   $e3
              909b 0001  ld   $01
              909c 0035  ld   $35
              909d 0050  ld   $50
              909e 004c  ld   $4c
              909f 0059  ld   $59
              90a0 0061  ld   $61
              90a1 005e  ld   $5e
              90a2 007a  ld   $7a
              90a3 00e3  ld   $e3
              90a4 009f  ld   $9f
              90a5 002b  ld   $2b
              90a6 007c  ld   $7c
              90a7 00ad  ld   $ad
              90a8 005e  ld   $5e
              90a9 007b  ld   $7b
              90aa 0021  ld   $21
              90ab 007a  ld   $7a
              90ac 00e6  ld   $e6
              90ad 0002  ld   $02
              90ae 002b  ld   $2b
              90af 0028  ld   $28
              90b0 0011  ld   $11
              90b1 0000  ld   $00
              90b2 0007  ld   $07
              90b3 0099  ld   $99
              90b4 0028  ld   $28
              90b5 00ad  ld   $ad
              90b6 0082  ld   $82
              90b7 0001  ld   $01
              90b8 005e  ld   $5e
              90b9 0026  ld   $26
              90ba 00b4  ld   $b4
              90bb 00cb  ld   $cb
              90bc 0093  ld   $93
              90bd 0028  ld   $28
              90be 001a  ld   $1a
              90bf 0028  ld   $28
              90c0 0035  ld   $35
              90c1 0072  ld   $72
              90c2 0066  ld   $66
              90c3 0021  ld   $21
              90c4 007c  ld   $7c
              90c5 00e3  ld   $e3
              90c6 0012  ld   $12
              90c7 002b  ld   $2b
              90c8 007e  ld   $7e
              90c9 00ad  ld   $ad
              90ca 005e  ld   $5e
              90cb 0026  ld   $26
              90cc 0021  ld   $21
              90cd 007c  ld   $7c
              90ce 00ad  ld   $ad
              90cf 00f0  ld   $f0
              90d0 007e  ld   $7e
              90d1 001a  ld   $1a
              90d2 0026  ld   $26
              90d3 00f0  ld   $f0
              90d4 007c  ld   $7c
              90d5 0093  ld   $93
              90d6 007c  ld   $7c
              90d7 0093  ld   $93
              90d8 007c  ld   $7c
              90d9 001a  ld   $1a
              90da 007c  ld   $7c
              90db 008c  ld   $8c
              90dc 00d8  ld   $d8
              90dd 0035  ld   $35
              90de 0072  ld   $72
              90df 0079  ld   $79
              90e0 001a  ld   $1a
              90e1 0027  ld   $27
              90e2 00e6  ld   $e6
              90e3 00a0  ld   $a0
              90e4 0035  ld   $35
              90e5 0050  ld   $50
              90e6 00ef  ld   $ef
              90e7 00e6  ld   $e6
              90e8 0040  ld   $40
              90e9 0035  ld   $35
              90ea 0050  ld   $50
              90eb 00a4  ld   $a4
              90ec 00e6  ld   $e6
              90ed 0020  ld   $20
              90ee 00e3  ld   $e3
              90ef 000e  ld   $0e
              90f0 0035  ld   $35
              90f1 0053  ld   $53
              90f2 00b2  ld   $b2
              90f3 00e3  ld   $e3
              90f4 0032  ld   $32
              90f5 002b  ld   $2b
              90f6 007c  ld   $7c
              90f7 0011  ld   $11
              90f8 0000  ld   $00
              90f9 0007  ld   $07
              90fa 0090  ld   $90
              90fb fe00  bra  ac          ;+-----------------------------------+
              90fc fcfd  bra  $90fd       ;|                                   |
              90fd 1418  ld   $18,y       ;| Trampoline for page $9000 lookups |
              90fe e006  jmp  y,$06       ;|                                   |
              90ff c218  st   [$18]       ;+-----------------------------------+
              9100 00b7  ld   $b7
              9101 002b  ld   $2b
              9102 007c  ld   $7c
              9103 0011  ld   $11
              9104 0000  ld   $00
              9105 0008  ld   $08
              9106 002b  ld   $2b
              9107 007e  ld   $7e
              9108 0021  ld   $21
              9109 007c  ld   $7c
              910a 00e9  ld   $e9
              910b 00e9  ld   $e9
              910c 0099  ld   $99
              910d 007c  ld   $7c
              910e 0099  ld   $99
              910f 007e  ld   $7e
              9110 002b  ld   $2b
              9111 007e  ld   $7e
              9112 0021  ld   $21
              9113 007a  ld   $7a
              9114 002b  ld   $2b
              9115 0028  ld   $28
              9116 00e3  ld   $e3
              9117 0006  ld   $06
              9118 002b  ld   $2b
              9119 007a  ld   $7a
              911a 0059  ld   $59
              911b 0005  ld   $05
              911c 002b  ld   $2b
              911d 007c  ld   $7c
              911e 0021  ld   $21
              911f 007e  ld   $7e
              9120 007f  ld   $7f
              9121 0000  ld   $00
              9122 0082  ld   $82
              9123 00fe  ld   $fe
              9124 005e  ld   $5e
              9125 0026  ld   $26
              9126 0011  ld   $11
              9127 0000  ld   $00
              9128 0007  ld   $07
              9129 0099  ld   $99
              912a 0028  ld   $28
              912b 00ad  ld   $ad
              912c 0035  ld   $35
              912d 003f  ld   $3f
              912e 00e2  ld   $e2
              912f 0093  ld   $93
              9130 0026  ld   $26
              9131 00b4  ld   $b4
              9132 00cb  ld   $cb
              9133 0093  ld   $93
              9134 007e  ld   $7e
              9135 0093  ld   $93
              9136 0028  ld   $28
              9137 0021  ld   $21
              9138 007c  ld   $7c
              9139 00e6  ld   $e6
              913a 0001  ld   $01
              913b 0035  ld   $35
              913c 004d  ld   $4d
              913d 00cd  ld   $cd
              913e 00ee  ld   $ee
              913f 0000  ld   $00
              9140 002b  ld   $2b
              9141 0024  ld   $24
              9142 00ee  ld   $ee
              9143 0002  ld   $02
              9144 002b  ld   $2b
              9145 0026  ld   $26
              9146 00ee  ld   $ee
              9147 0004  ld   $04
              9148 002b  ld   $2b
              9149 0028  ld   $28
              914a 00df  ld   $df
              914b 0006  ld   $06
              914c 00ff  ld   $ff
              914d 00c1  ld   $c1
              914e 0000  ld   $00
              914f 0058  ld   $58
              9150 00a9  ld   $a9
              9151 00aa  ld   $aa
              9152 0020  ld   $20
              9153 00ef  ld   $ef
              9154 00ff  ld   $ff
              9155 00ae  ld   $ae
              9156 0000  ld   $00
              9157 00c2  ld   $c2
              9158 00bd  ld   $bd
              9159 0000  ld   $00
              915a 00c2  ld   $c2
              915b 0020  ld   $20
              915c 00ef  ld   $ef
              915d 00ff  ld   $ff
              915e 00ca  ld   $ca
              915f 00d0  ld   $d0
              9160 00f7  ld   $f7
              9161 00ae  ld   $ae
              9162 0025  ld   $25
              9163 00c1  ld   $c1
              9164 00bd  ld   $bd
              9165 0025  ld   $25
              9166 00c1  ld   $c1
              9167 0020  ld   $20
              9168 00ef  ld   $ef
              9169 00ff  ld   $ff
              916a 00ca  ld   $ca
              916b 00d0  ld   $d0
              916c 00f7  ld   $f7
              916d 002c  ld   $2c
              916e 0012  ld   $12
              916f 00d0  ld   $d0
              9170 0030  ld   $30
              9171 00fb  ld   $fb
              9172 004c  ld   $4c
              9173 0000  ld   $00
              9174 00ff  ld   $ff
              9175 0032  ld   $32
              9176 008d  ld   $8d
              9177 00ce  ld   $ce
              9178 00cf  ld   $cf
              9179 00cd  ld   $cd
              917a 00da  ld   $da
              917b 00cf  ld   $cf
              917c 00d7  ld   $d7
              917d 00a0  ld   $a0
              917e 00da  ld   $da
              917f 00ad  ld   $ad
              9180 00cc  ld   $cc
              9181 00d4  ld   $d4
              9182 00c3  ld   $c3
              9183 008d  ld   $8d
              9184 00d4  ld   $d4
              9185 00d2  ld   $d2
              9186 00c1  ld   $c1
              9187 00d4  ld   $d4
              9188 00d3  ld   $d3
              9189 00a0  ld   $a0
              918a 00cd  ld   $cd
              918b 00d2  ld   $d2
              918c 00c1  ld   $c1
              918d 00d7  ld   $d7
              918e 00a0  ld   $a0
              918f 00c3  ld   $c3
              9190 00c9  ld   $c9
              9191 00d3  ld   $d3
              9192 00c1  ld   $c1
              9193 00c2  ld   $c2
              9194 00a0  ld   $a0
              9195 00d2  ld   $d2
              9196 00b3  ld   $b3
              9197 00c2  ld   $c2
              9198 00b2  ld   $b2
              9199 00c5  ld   $c5
              919a 008d  ld   $8d
              919b 00c3  ld   $c3
              919c 00c9  ld   $c9
              919d 00d3  ld   $d3
              919e 00c1  ld   $c1
              919f 00c2  ld   $c2
              91a0 00a0  ld   $a0
              91a1 00d2  ld   $d2
              91a2 00c5  ld   $c5
              91a3 00c7  ld   $c7
              91a4 00c5  ld   $c5
              91a5 00d4  ld   $d4
              91a6 00ce  ld   $ce
              91a7 00c9  ld   $c9
              91a8 00c2  ld   $c2
              91a9 0000  ld   $00
              91aa 005b  ld   $5b
              91ab 005a  ld   $5a
              91ac 00a0  ld   $a0
              91ad 00d2  ld   $d2
              91ae 00b0  ld   $b0
              91af 00b0  ld   $b0
              91b0 00b0  ld   $b0
              91b1 00c5  ld   $c5
              91b2 008d  ld   $8d
              91b3 00d5  ld   $d5
              91b4 00ce  ld   $ce
              91b5 00c5  ld   $c5
              91b6 00cd  ld   $cd
              91b7 00a0  ld   $a0
              91b8 00d2  ld   $d2
              91b9 00b0  ld   $b0
              91ba 00b0  ld   $b0
              91bb 00b1  ld   $b1
              91bc 00c3  ld   $c3
              91bd 008d  ld   $8d
              91be 00d2  ld   $d2
              91bf 00c5  ld   $c5
              91c0 00cc  ld   $cc
              91c1 00c2  ld   $c2
              91c2 00cd  ld   $cd
              91c3 00c5  ld   $c5
              91c4 00d3  ld   $d3
              91c5 00d3  ld   $d3
              91c6 00c1  ld   $c1
              91c7 00ad  ld   $ad
              91c8 00c9  ld   $c9
              91c9 00ce  ld   $ce
              91ca 00c9  ld   $c9
              91cb 00cd  ld   $cd
              91cc 00a0  ld   $a0
              91cd 00a0  ld   $a0
              91ce 00d2  ld   $d2
              91cf 00c5  ld   $c5
              91d0 00c5  ld   $c5
              91d1 00c5  ld   $c5
              91d2 008d  ld   $8d
              91d3 00c5  ld   $c5
              91d4 00cc  ld   $cc
              91d5 00da  ld   $da
              91d6 00da  ld   $da
              91d7 00d5  ld   $d5
              91d8 00d0  ld   $d0
              91d9 00ad  ld   $ad
              91da 00b5  ld   $b5
              91db 00b1  ld   $b1
              91dc 00a0  ld   $a0
              91dd 00a0  ld   $a0
              91de 00d2  ld   $d2
              91df 00b0  ld   $b0
              91e0 00b0  ld   $b0
              91e1 00b4  ld   $b4
              91e2 008d  ld   $8d
              91e3 00c4  ld   $c4
              91e4 00ce  ld   $ce
              91e5 00c9  ld   $c9
              91e6 00cd  ld   $cd
              91e7 00d2  ld   $d2
              91e8 00c5  ld   $c5
              91e9 00d4  ld   $d4
              91ea 00d3  ld   $d3
              91eb 00c1  ld   $c1
              91ec 00cd  ld   $cd
              91ed 00a0  ld   $a0
              91ee 00a0  ld   $a0
              91ef 00d2  ld   $d2
              91f0 00b0  ld   $b0
              91f1 00b0  ld   $b0
              91f2 00b3  ld   $b3
              91f3 008d  ld   $8d
              91f4 008d  ld   $8d
              91f5 00cc  ld   $cc
              91f6 00d4  ld   $d4
              91f7 00d4  ld   $d4
              91f8 00a0  ld   $a0
              91f9 00ce  ld   $ce
              91fa 00cf  ld   $cf
              91fb fe00  bra  ac          ;+-----------------------------------+
              91fc fcfd  bra  $91fd       ;|                                   |
              91fd 1418  ld   $18,y       ;| Trampoline for page $9100 lookups |
              91fe e006  jmp  y,$06       ;|                                   |
              91ff c218  st   [$18]       ;+-----------------------------------+
              9200 00a0  ld   $a0
              9201 00b1  ld   $b1
              9202 00ad  ld   $ad
              9203 00c5  ld   $c5
              9204 00cc  ld   $cc
              9205 00d0  ld   $d0
              9206 00d0  ld   $d0
              9207 00c1  ld   $c1
              9208 008d  ld   $8d
              9209 008d  ld   $8d
              920a 008d  ld   $8d
              920b 00d0  ld   $d0
              920c 0010  ld   $10
              920d 0004  ld   $04
              920e 0000  ld   $00
              920f 0000  ld   $00
              9210 0000  ld   $00
              9211 0000  ld   $00
              9212 00e0  ld   $e0
              9213 0000  ld   $00
              9214 0000  ld   $00
              9215 004c  ld   $4c
              9216 00b0  ld   $b0
              9217 00e2  ld   $e2
              9218 00ad  ld   $ad
              9219 0011  ld   $11
              921a 00d0  ld   $d0
              921b 0010  ld   $10
              921c 00fb  ld   $fb
              921d 00ad  ld   $ad
              921e 0010  ld   $10
              921f 00d0  ld   $d0
              9220 0060  ld   $60
              9221 008a  ld   $8a
              9222 0029  ld   $29
              9223 0020  ld   $20
              9224 00f0  ld   $f0
              9225 0023  ld   $23
              9226 00a9  ld   $a9
              9227 00a0  ld   $a0
              9228 0085  ld   $85
              9229 0044  ld   $44
              922a 004c  ld   $4c
              922b 00c9  ld   $c9
              922c 00e3  ld   $e3
              922d 00a9  ld   $a9
              922e 0020  ld   $20
              922f 00c5  ld   $c5
              9230 0081  ld   $81
              9231 00b0  ld   $b0
              9232 000c  ld   $0c
              9233 00a9  ld   $a9
              9234 008d  ld   $8d
              9235 00a0  ld   $a0
              9236 0007  ld   $07
              9237 0020  ld   $20
              9238 00c9  ld   $c9
              9239 00e3  ld   $e3
              923a 00a9  ld   $a9
              923b 00a0  ld   $a0
              923c 0088  ld   $88
              923d 00d0  ld   $d0
              923e 00f8  ld   $f8
              923f 00a0  ld   $a0
              9240 0000  ld   $00
              9241 00b1  ld   $b1
              9242 0042  ld   $42
              9243 00e6  ld   $e6
              9244 0042  ld   $42
              9245 00d0  ld   $d0
              9246 0002  ld   $02
              9247 00e6  ld   $e6
              9248 0043  ld   $43
              9249 0060  ld   $60
              924a 0020  ld   $20
              924b 0015  ld   $15
              924c 00e7  ld   $e7
              924d 0020  ld   $20
              924e 0076  ld   $76
              924f 00e5  ld   $e5
              9250 00a5  ld   $a5
              9251 0042  ld   $42
              9252 00c5  ld   $c5
              9253 0046  ld   $46
              9254 00a5  ld   $a5
              9255 0043  ld   $43
              9256 00e5  ld   $e5
              9257 0047  ld   $47
              9258 00b0  ld   $b0
              9259 00ef  ld   $ef
              925a 0020  ld   $20
              925b 006d  ld   $6d
              925c 00e0  ld   $e0
              925d 004c  ld   $4c
              925e 003b  ld   $3b
              925f 00e0  ld   $e0
              9260 00a5  ld   $a5
              9261 00ca  ld   $ca
              9262 0085  ld   $85
              9263 0042  ld   $42
              9264 00a5  ld   $a5
              9265 00cb  ld   $cb
              9266 0085  ld   $85
              9267 0043  ld   $43
              9268 00a5  ld   $a5
              9269 004c  ld   $4c
              926a 0085  ld   $85
              926b 0046  ld   $46
              926c 00a5  ld   $a5
              926d 004d  ld   $4d
              926e 0085  ld   $85
              926f 0047  ld   $47
              9270 00d0  ld   $d0
              9271 00de  ld   $de
              9272 0020  ld   $20
              9273 0015  ld   $15
              9274 00e7  ld   $e7
              9275 0020  ld   $20
              9276 006d  ld   $6d
              9277 00e5  ld   $e5
              9278 00a5  ld   $a5
              9279 0044  ld   $44
              927a 0085  ld   $85
              927b 0042  ld   $42
              927c 00a5  ld   $a5
              927d 0045  ld   $45
              927e 0085  ld   $85
              927f 0043  ld   $43
              9280 00b0  ld   $b0
              9281 00c7  ld   $c7
              9282 0086  ld   $86
              9283 00d8  ld   $d8
              9284 00a9  ld   $a9
              9285 00a0  ld   $a0
              9286 0085  ld   $85
              9287 0082  ld   $82
              9288 0020  ld   $20
              9289 002a  ld   $2a
              928a 00e0  ld   $e0
              928b 0098  ld   $98
              928c 0085  ld   $85
              928d 0044  ld   $44
              928e 0020  ld   $20
              928f 002a  ld   $2a
              9290 00e0  ld   $e0
              9291 00aa  ld   $aa
              9292 0020  ld   $20
              9293 002a  ld   $2a
              9294 00e0  ld   $e0
              9295 0020  ld   $20
              9296 001b  ld   $1b
              9297 00e5  ld   $e5
              9298 0020  ld   $20
              9299 0018  ld   $18
              929a 00e0  ld   $e0
              929b 0084  ld   $84
              929c 0082  ld   $82
              929d 00aa  ld   $aa
              929e 0010  ld   $10
              929f 0018  ld   $18
              92a0 000a  ld   $0a
              92a1 0010  ld   $10
              92a2 00e9  ld   $e9
              92a3 00a5  ld   $a5
              92a4 0044  ld   $44
              92a5 00d0  ld   $d0
              92a6 0003  ld   $03
              92a7 0020  ld   $20
              92a8 0011  ld   $11
              92a9 00e0  ld   $e0
              92aa 008a  ld   $8a
              92ab 0020  ld   $20
              92ac 00c9  ld   $c9
              92ad 00e3  ld   $e3
              92ae 00a9  ld   $a9
              92af 0025  ld   $25
              92b0 0020  ld   $20
              92b1 001a  ld   $1a
              92b2 00e0  ld   $e0
              92b3 00aa  ld   $aa
              92b4 0030  ld   $30
              92b5 00f5  ld   $f5
              92b6 0085  ld   $85
              92b7 0044  ld   $44
              92b8 00c9  ld   $c9
              92b9 0001  ld   $01
              92ba 00d0  ld   $d0
              92bb 0005  ld   $05
              92bc 00a6  ld   $a6
              92bd 00d8  ld   $d8
              92be 004c  ld   $4c
              92bf 00cd  ld   $cd
              92c0 00e3  ld   $e3
              92c1 0048  ld   $48
              92c2 0084  ld   $84
              92c3 00ce  ld   $ce
              92c4 00a2  ld   $a2
              92c5 00ed  ld   $ed
              92c6 0086  ld   $86
              92c7 00cf  ld   $cf
              92c8 00c9  ld   $c9
              92c9 0051  ld   $51
              92ca 0090  ld   $90
              92cb 0004  ld   $04
              92cc 00c6  ld   $c6
              92cd 00cf  ld   $cf
              92ce 00e9  ld   $e9
              92cf 0050  ld   $50
              92d0 0048  ld   $48
              92d1 00b1  ld   $b1
              92d2 00ce  ld   $ce
              92d3 00aa  ld   $aa
              92d4 0088  ld   $88
              92d5 00b1  ld   $b1
              92d6 00ce  ld   $ce
              92d7 0010  ld   $10
              92d8 00fa  ld   $fa
              92d9 00e0  ld   $e0
              92da 00c0  ld   $c0
              92db 00b0  ld   $b0
              92dc 0004  ld   $04
              92dd 00e0  ld   $e0
              92de 0000  ld   $00
              92df 0030  ld   $30
              92e0 00f2  ld   $f2
              92e1 00aa  ld   $aa
              92e2 0068  ld   $68
              92e3 00e9  ld   $e9
              92e4 0001  ld   $01
              92e5 00d0  ld   $d0
              92e6 00e9  ld   $e9
              92e7 0024  ld   $24
              92e8 0044  ld   $44
              92e9 0030  ld   $30
              92ea 0003  ld   $03
              92eb 0020  ld   $20
              92ec 00f8  ld   $f8
              92ed 00ef  ld   $ef
              92ee 00b1  ld   $b1
              92ef 00ce  ld   $ce
              92f0 0010  ld   $10
              92f1 0010  ld   $10
              92f2 00aa  ld   $aa
              92f3 0029  ld   $29
              92f4 003f  ld   $3f
              92f5 0085  ld   $85
              92f6 0044  ld   $44
              92f7 0018  ld   $18
              92f8 0069  ld   $69
              92f9 00a0  ld   $a0
              92fa 0020  ld   $20
              92fb fe00  bra  ac          ;+-----------------------------------+
              92fc fcfd  bra  $92fd       ;|                                   |
              92fd 1418  ld   $18,y       ;| Trampoline for page $9200 lookups |
              92fe e006  jmp  y,$06       ;|                                   |
              92ff c218  st   [$18]       ;+-----------------------------------+
              9300 00c9  ld   $c9
              9301 00e3  ld   $e3
              9302 0088  ld   $88
              9303 00e0  ld   $e0
              9304 00c0  ld   $c0
              9305 0090  ld   $90
              9306 00ec  ld   $ec
              9307 0020  ld   $20
              9308 000c  ld   $0c
              9309 00e0  ld   $e0
              930a 0068  ld   $68
              930b 00c9  ld   $c9
              930c 005d  ld   $5d
              930d 00f0  ld   $f0
              930e 00a4  ld   $a4
              930f 00c9  ld   $c9
              9310 0028  ld   $28
              9311 00d0  ld   $d0
              9312 008a  ld   $8a
              9313 00f0  ld   $f0
              9314 009e  ld   $9e
              9315 0020  ld   $20
              9316 0018  ld   $18
              9317 00e1  ld   $e1
              9318 0095  ld   $95
              9319 0050  ld   $50
              931a 00e1  ld   $e1
              931b 0000  ld   $00
              931c 0000  ld   $00
              931d 00d5  ld   $d5
              931e 0088  ld   $88
              931f 0090  ld   $90
              9320 0011  ld   $11
              9321 00a0  ld   $a0
              9322 002b  ld   $2b
              9323 004c  ld   $4c
              9324 00e0  ld   $e0
              9325 00e3  ld   $e3
              9326 0020  ld   $20
              9327 0034  ld   $34
              9328 00ee  ld   $ee
              9329 00d5  ld   $d5
              932a 0050  ld   $50
              932b 0090  ld   $90
              932c 00f4  ld   $f4
              932d 0020  ld   $20
              932e 00e4  ld   $e4
              932f 00ef  ld   $ef
              9330 0095  ld   $95
              9331 0088  ld   $88
              9332 004c  ld   $4c
              9333 0023  ld   $23
              9334 00e8  ld   $e8
              9335 0020  ld   $20
              9336 0034  ld   $34
              9337 00ee  ld   $ee
              9338 00f0  ld   $f0
              9339 00e7  ld   $e7
              933a 0038  ld   $38
              933b 00e9  ld   $e9
              933c 0001  ld   $01
              933d 0060  ld   $60
              933e 0020  ld   $20
              933f 0018  ld   $18
              9340 00e1  ld   $e1
              9341 0095  ld   $95
              9342 0050  ld   $50
              9343 0018  ld   $18
              9344 00f5  ld   $f5
              9345 0088  ld   $88
              9346 004c  ld   $4c
              9347 0002  ld   $02
              9348 00e1  ld   $e1
              9349 00a0  ld   $a0
              934a 0014  ld   $14
              934b 00d0  ld   $d0
              934c 00d6  ld   $d6
              934d 0020  ld   $20
              934e 0018  ld   $18
              934f 00e1  ld   $e1
              9350 00e8  ld   $e8
              9351 00b5  ld   $b5
              9352 0050  ld   $50
              9353 0085  ld   $85
              9354 00da  ld   $da
              9355 0065  ld   $65
              9356 00ce  ld   $ce
              9357 0048  ld   $48
              9358 00a8  ld   $a8
              9359 00b5  ld   $b5
              935a 0088  ld   $88
              935b 0085  ld   $85
              935c 00db  ld   $db
              935d 0065  ld   $65
              935e 00cf  ld   $cf
              935f 0048  ld   $48
              9360 00c4  ld   $c4
              9361 00ca  ld   $ca
              9362 00e5  ld   $e5
              9363 00cb  ld   $cb
              9364 00b0  ld   $b0
              9365 00e3  ld   $e3
              9366 00a5  ld   $a5
              9367 00da  ld   $da
              9368 0069  ld   $69
              9369 00fe  ld   $fe
              936a 0085  ld   $85
              936b 00da  ld   $da
              936c 00a9  ld   $a9
              936d 00ff  ld   $ff
              936e 00a8  ld   $a8
              936f 0065  ld   $65
              9370 00db  ld   $db
              9371 0085  ld   $85
              9372 00db  ld   $db
              9373 00c8  ld   $c8
              9374 00b1  ld   $b1
              9375 00da  ld   $da
              9376 00d9  ld   $d9
              9377 00cc  ld   $cc
              9378 0000  ld   $00
              9379 00d0  ld   $d0
              937a 000f  ld   $0f
              937b 0098  ld   $98
              937c 00f0  ld   $f0
              937d 00f5  ld   $f5
              937e 0068  ld   $68
              937f 0091  ld   $91
              9380 00da  ld   $da
              9381 0099  ld   $99
              9382 00cc  ld   $cc
              9383 0000  ld   $00
              9384 0088  ld   $88
              9385 0010  ld   $10
              9386 00f7  ld   $f7
              9387 00e8  ld   $e8
              9388 0060  ld   $60
              9389 00ea  ld   $ea
              938a 00a0  ld   $a0
              938b 0080  ld   $80
              938c 00d0  ld   $d0
              938d 0095  ld   $95
              938e 00a9  ld   $a9
              938f 0000  ld   $00
              9390 0020  ld   $20
              9391 000a  ld   $0a
              9392 00e7  ld   $e7
              9393 00a0  ld   $a0
              9394 0002  ld   $02
              9395 0094  ld   $94
              9396 0088  ld   $88
              9397 0020  ld   $20
              9398 000a  ld   $0a
              9399 00e7  ld   $e7
              939a 00a9  ld   $a9
              939b 00bf  ld   $bf
              939c 0020  ld   $20
              939d 00c9  ld   $c9
              939e 00e3  ld   $e3
              939f 00a0  ld   $a0
              93a0 0000  ld   $00
              93a1 0020  ld   $20
              93a2 009e  ld   $9e
              93a3 00e2  ld   $e2
              93a4 0094  ld   $94
              93a5 0088  ld   $88
              93a6 00ea  ld   $ea
              93a7 00ea  ld   $ea
              93a8 00ea  ld   $ea
              93a9 00b5  ld   $b5
              93aa 0051  ld   $51
              93ab 0085  ld   $85
              93ac 00ce  ld   $ce
              93ad 00b5  ld   $b5
              93ae 0089  ld   $89
              93af 0085  ld   $85
              93b0 00cf  ld   $cf
              93b1 00e8  ld   $e8
              93b2 00e8  ld   $e8
              93b3 0020  ld   $20
              93b4 00bc  ld   $bc
              93b5 00e1  ld   $e1
              93b6 00b5  ld   $b5
              93b7 004e  ld   $4e
              93b8 00d5  ld   $d5
              93b9 0086  ld   $86
              93ba 00b0  ld   $b0
              93bb 0015  ld   $15
              93bc 00f6  ld   $f6
              93bd 004e  ld   $4e
              93be 00a8  ld   $a8
              93bf 00b1  ld   $b1
              93c0 00ce  ld   $ce
              93c1 00b4  ld   $b4
              93c2 0050  ld   $50
              93c3 00c4  ld   $c4
              93c4 0044  ld   $44
              93c5 0090  ld   $90
              93c6 0004  ld   $04
              93c7 00a0  ld   $a0
              93c8 0083  ld   $83
              93c9 00d0  ld   $d0
              93ca 00c1  ld   $c1
              93cb 0091  ld   $91
              93cc 00da  ld   $da
              93cd 00f6  ld   $f6
              93ce 0050  ld   $50
              93cf 0090  ld   $90
              93d0 00e5  ld   $e5
              93d1 00b4  ld   $b4
              93d2 0050  ld   $50
              93d3 008a  ld   $8a
              93d4 0091  ld   $91
              93d5 00da  ld   $da
              93d6 00e8  ld   $e8
              93d7 00e8  ld   $e8
              93d8 0060  ld   $60
              93d9 00b5  ld   $b5
              93da 0051  ld   $51
              93db 0085  ld   $85
              93dc 00da  ld   $da
              93dd 0038  ld   $38
              93de 00e9  ld   $e9
              93df 0002  ld   $02
              93e0 0085  ld   $85
              93e1 0044  ld   $44
              93e2 00b5  ld   $b5
              93e3 0089  ld   $89
              93e4 0085  ld   $85
              93e5 00db  ld   $db
              93e6 00e9  ld   $e9
              93e7 0000  ld   $00
              93e8 0085  ld   $85
              93e9 0045  ld   $45
              93ea 00a0  ld   $a0
              93eb 0000  ld   $00
              93ec 00b1  ld   $b1
              93ed 0044  ld   $44
              93ee 0018  ld   $18
              93ef 00e5  ld   $e5
              93f0 00da  ld   $da
              93f1 0085  ld   $85
              93f2 0044  ld   $44
              93f3 0060  ld   $60
              93f4 00b5  ld   $b5
              93f5 0053  ld   $53
              93f6 0085  ld   $85
              93f7 00ce  ld   $ce
              93f8 00b5  ld   $b5
              93f9 008b  ld   $8b
              93fa 0085  ld   $85
              93fb fe00  bra  ac          ;+-----------------------------------+
              93fc fcfd  bra  $93fd       ;|                                   |
              93fd 1418  ld   $18,y       ;| Trampoline for page $9300 lookups |
              93fe e006  jmp  y,$06       ;|                                   |
              93ff c218  st   [$18]       ;+-----------------------------------+
              9400 00cf  ld   $cf
              9401 00b5  ld   $b5
              9402 0051  ld   $51
              9403 0085  ld   $85
              9404 00da  ld   $da
              9405 00b5  ld   $b5
              9406 0089  ld   $89
              9407 0085  ld   $85
              9408 00db  ld   $db
              9409 00e8  ld   $e8
              940a 00e8  ld   $e8
              940b 00e8  ld   $e8
              940c 00a0  ld   $a0
              940d 0000  ld   $00
              940e 0094  ld   $94
              940f 0088  ld   $88
              9410 0094  ld   $94
              9411 00a8  ld   $a8
              9412 00c8  ld   $c8
              9413 0094  ld   $94
              9414 0050  ld   $50
              9415 00b5  ld   $b5
              9416 004d  ld   $4d
              9417 00d5  ld   $d5
              9418 0085  ld   $85
              9419 0008  ld   $08
              941a 0048  ld   $48
              941b 00b5  ld   $b5
              941c 004f  ld   $4f
              941d 00d5  ld   $d5
              941e 0087  ld   $87
              941f 0090  ld   $90
              9420 0007  ld   $07
              9421 0068  ld   $68
              9422 00e2  ld   $e2
              9423 0000  ld   $00
              9424 0000  ld   $00
              9425 0028  ld   $28
              9426 00b0  ld   $b0
              9427 0002  ld   $02
              9428 0056  ld   $56
              9429 0050  ld   $50
              942a 0060  ld   $60
              942b 00a8  ld   $a8
              942c 00b1  ld   $b1
              942d 00ce  ld   $ce
              942e 0085  ld   $85
              942f 0044  ld   $44
              9430 0068  ld   $68
              9431 00a8  ld   $a8
              9432 0028  ld   $28
              9433 00b0  ld   $b0
              9434 00f3  ld   $f3
              9435 00b1  ld   $b1
              9436 00da  ld   $da
              9437 00c5  ld   $c5
              9438 0044  ld   $44
              9439 00d0  ld   $d0
              943a 00ed  ld   $ed
              943b 00f6  ld   $f6
              943c 004f  ld   $4f
              943d 00f6  ld   $f6
              943e 004d  ld   $4d
              943f 00b0  ld   $b0
              9440 00d7  ld   $d7
              9441 0020  ld   $20
              9442 00d7  ld   $d7
              9443 00e1  ld   $e1
              9444 004c  ld   $4c
              9445 0036  ld   $36
              9446 00e7  ld   $e7
              9447 0020  ld   $20
              9448 0054  ld   $54
              9449 00e2  ld   $e2
              944a 0006  ld   $06
              944b 00ce  ld   $ce
              944c 0026  ld   $26
              944d 00cf  ld   $cf
              944e 0090  ld   $90
              944f 000d  ld   $0d
              9450 0018  ld   $18
              9451 00a5  ld   $a5
              9452 0046  ld   $46
              9453 0065  ld   $65
              9454 00da  ld   $da
              9455 0085  ld   $85
              9456 0046  ld   $46
              9457 00a5  ld   $a5
              9458 0047  ld   $47
              9459 0065  ld   $65
              945a 00db  ld   $db
              945b 0085  ld   $85
              945c 0047  ld   $47
              945d 0088  ld   $88
              945e 00f0  ld   $f0
              945f 0009  ld   $09
              9460 0006  ld   $06
              9461 0046  ld   $46
              9462 0026  ld   $26
              9463 0047  ld   $47
              9464 0010  ld   $10
              9465 00e4  ld   $e4
              9466 004c  ld   $4c
              9467 007e  ld   $7e
              9468 00e7  ld   $e7
              9469 00a5  ld   $a5
              946a 0046  ld   $46
              946b 0020  ld   $20
              946c 0008  ld   $08
              946d 00e7  ld   $e7
              946e 00a5  ld   $a5
              946f 0047  ld   $47
              9470 0095  ld   $95
              9471 00a8  ld   $a8
              9472 0006  ld   $06
              9473 0045  ld   $45
              9474 0090  ld   $90
              9475 0028  ld   $28
              9476 004c  ld   $4c
              9477 006f  ld   $6f
              9478 00e7  ld   $e7
              9479 00a9  ld   $a9
              947a 0055  ld   $55
              947b 0085  ld   $85
              947c 0045  ld   $45
              947d 0020  ld   $20
              947e 005b  ld   $5b
              947f 00e2  ld   $e2
              9480 00a5  ld   $a5
              9481 00ce  ld   $ce
              9482 0085  ld   $85
              9483 00da  ld   $da
              9484 00a5  ld   $a5
              9485 00cf  ld   $cf
              9486 0085  ld   $85
              9487 00db  ld   $db
              9488 0020  ld   $20
              9489 0015  ld   $15
              948a 00e7  ld   $e7
              948b 0084  ld   $84
              948c 0046  ld   $46
              948d 0084  ld   $84
              948e 0047  ld   $47
              948f 00a5  ld   $a5
              9490 00cf  ld   $cf
              9491 0010  ld   $10
              9492 0009  ld   $09
              9493 00ca  ld   $ca
              9494 0006  ld   $06
              9495 0045  ld   $45
              9496 0020  ld   $20
              9497 006f  ld   $6f
              9498 00e7  ld   $e7
              9499 0020  ld   $20
              949a 0015  ld   $15
              949b 00e7  ld   $e7
              949c 00a0  ld   $a0
              949d 0010  ld   $10
              949e 0060  ld   $60
              949f 0020  ld   $20
              94a0 006c  ld   $6c
              94a1 00ee  ld   $ee
              94a2 00f0  ld   $f0
              94a3 00c5  ld   $c5
              94a4 00ff  ld   $ff
              94a5 00c9  ld   $c9
              94a6 0084  ld   $84
              94a7 00d0  ld   $d0
              94a8 0002  ld   $02
              94a9 0046  ld   $46
              94aa 0078  ld   $78
              94ab 00c9  ld   $c9
              94ac 00df  ld   $df
              94ad 00f0  ld   $f0
              94ae 0011  ld   $11
              94af 00c9  ld   $c9
              94b0 009b  ld   $9b
              94b1 00f0  ld   $f0
              94b2 0006  ld   $06
              94b3 0099  ld   $99
              94b4 0000  ld   $00
              94b5 0002  ld   $02
              94b6 00c8  ld   $c8
              94b7 0010  ld   $10
              94b8 000a  ld   $0a
              94b9 00a0  ld   $a0
              94ba 008b  ld   $8b
              94bb 0020  ld   $20
              94bc 00c4  ld   $c4
              94bd 00e3  ld   $e3
              94be 00a0  ld   $a0
              94bf 0001  ld   $01
              94c0 0088  ld   $88
              94c1 0030  ld   $30
              94c2 00f6  ld   $f6
              94c3 0020  ld   $20
              94c4 0003  ld   $03
              94c5 00e0  ld   $e0
              94c6 00ea  ld   $ea
              94c7 00ea  ld   $ea
              94c8 0020  ld   $20
              94c9 00c9  ld   $c9
              94ca 00e3  ld   $e3
              94cb 00c9  ld   $c9
              94cc 008d  ld   $8d
              94cd 00d0  ld   $d0
              94ce 00d6  ld   $d6
              94cf 00a9  ld   $a9
              94d0 00df  ld   $df
              94d1 0099  ld   $99
              94d2 0000  ld   $00
              94d3 0002  ld   $02
              94d4 0060  ld   $60
              94d5 0020  ld   $20
              94d6 00d3  ld   $d3
              94d7 00ef  ld   $ef
              94d8 0020  ld   $20
              94d9 00cd  ld   $cd
              94da 00e3  ld   $e3
              94db 0046  ld   $46
              94dc 00d9  ld   $d9
              94dd 00a9  ld   $a9
              94de 00be  ld   $be
              94df 0020  ld   $20
              94e0 00c9  ld   $c9
              94e1 00e3  ld   $e3
              94e2 00a0  ld   $a0
              94e3 0000  ld   $00
              94e4 0084  ld   $84
              94e5 0082  ld   $82
              94e6 0024  ld   $24
              94e7 0078  ld   $78
              94e8 0010  ld   $10
              94e9 000c  ld   $0c
              94ea 00a6  ld   $a6
              94eb 0076  ld   $76
              94ec 00a5  ld   $a5
              94ed 0077  ld   $77
              94ee 0020  ld   $20
              94ef 001b  ld   $1b
              94f0 00e5  ld   $e5
              94f1 00a9  ld   $a9
              94f2 00a0  ld   $a0
              94f3 0020  ld   $20
              94f4 00c9  ld   $c9
              94f5 00e3  ld   $e3
              94f6 00a2  ld   $a2
              94f7 00ff  ld   $ff
              94f8 009a  ld   $9a
              94f9 0020  ld   $20
              94fa 009e  ld   $9e
              94fb fe00  bra  ac          ;+-----------------------------------+
              94fc fcfd  bra  $94fd       ;|                                   |
              94fd 1418  ld   $18,y       ;| Trampoline for page $9400 lookups |
              94fe e006  jmp  y,$06       ;|                                   |
              94ff c218  st   [$18]       ;+-----------------------------------+
              9500 00e2  ld   $e2
              9501 0084  ld   $84
              9502 00e9  ld   $e9
              9503 008a  ld   $8a
              9504 0085  ld   $85
              9505 00c8  ld   $c8
              9506 00a2  ld   $a2
              9507 0018  ld   $18
              9508 0020  ld   $20
              9509 0091  ld   $91
              950a 00e4  ld   $e4
              950b 00a5  ld   $a5
              950c 00c8  ld   $c8
              950d 0069  ld   $69
              950e 0000  ld   $00
              950f 0085  ld   $85
              9510 00de  ld   $de
              9511 00a9  ld   $a9
              9512 0000  ld   $00
              9513 00aa  ld   $aa
              9514 0069  ld   $69
              9515 0002  ld   $02
              9516 0085  ld   $85
              9517 00df  ld   $df
              9518 00a1  ld   $a1
              9519 00de  ld   $de
              951a 0029  ld   $29
              951b 00f0  ld   $f0
              951c 00c9  ld   $c9
              951d 00b0  ld   $b0
              951e 00f0  ld   $f0
              951f 0003  ld   $03
              9520 004c  ld   $4c
              9521 0083  ld   $83
              9522 00e8  ld   $e8
              9523 00a0  ld   $a0
              9524 0002  ld   $02
              9525 00b1  ld   $b1
              9526 00de  ld   $de
              9527 0099  ld   $99
              9528 00cd  ld   $cd
              9529 0000  ld   $00
              952a 00e3  ld   $e3
              952b 0000  ld   $00
              952c 0000  ld   $00
              952d 0088  ld   $88
              952e 00d0  ld   $d0
              952f 00f8  ld   $f8
              9530 0020  ld   $20
              9531 008a  ld   $8a
              9532 00e3  ld   $e3
              9533 00a5  ld   $a5
              9534 00e9  ld   $e9
              9535 00e5  ld   $e5
              9536 00c8  ld   $c8
              9537 00c9  ld   $c9
              9538 0004  ld   $04
              9539 00f0  ld   $f0
              953a 00a8  ld   $a8
              953b 0091  ld   $91
              953c 00de  ld   $de
              953d 00a5  ld   $a5
              953e 00ca  ld   $ca
              953f 00f1  ld   $f1
              9540 00de  ld   $de
              9541 0085  ld   $85
              9542 0044  ld   $44
              9543 00a5  ld   $a5
              9544 00cb  ld   $cb
              9545 00e9  ld   $e9
              9546 0000  ld   $00
              9547 0085  ld   $85
              9548 0045  ld   $45
              9549 00a5  ld   $a5
              954a 0044  ld   $44
              954b 00c5  ld   $c5
              954c 00cc  ld   $cc
              954d 00a5  ld   $a5
              954e 0045  ld   $45
              954f 00e5  ld   $e5
              9550 00cd  ld   $cd
              9551 0090  ld   $90
              9552 0045  ld   $45
              9553 00a5  ld   $a5
              9554 00ca  ld   $ca
              9555 00f1  ld   $f1
              9556 00de  ld   $de
              9557 0085  ld   $85
              9558 0046  ld   $46
              9559 00a5  ld   $a5
              955a 00cb  ld   $cb
              955b 00e9  ld   $e9
              955c 0000  ld   $00
              955d 0085  ld   $85
              955e 0047  ld   $47
              955f 00b1  ld   $b1
              9560 00ca  ld   $ca
              9561 0091  ld   $91
              9562 0046  ld   $46
              9563 00e6  ld   $e6
              9564 00ca  ld   $ca
              9565 00d0  ld   $d0
              9566 0002  ld   $02
              9567 00e6  ld   $e6
              9568 00cb  ld   $cb
              9569 00a5  ld   $a5
              956a 0042  ld   $42
              956b 00c5  ld   $c5
              956c 00ca  ld   $ca
              956d 00a5  ld   $a5
              956e 0043  ld   $43
              956f 00e5  ld   $e5
              9570 00cb  ld   $cb
              9571 00b0  ld   $b0
              9572 00e0  ld   $e0
              9573 00b5  ld   $b5
              9574 0044  ld   $44
              9575 0095  ld   $95
              9576 00ca  ld   $ca
              9577 00ca  ld   $ca
              9578 0010  ld   $10
              9579 00f9  ld   $f9
              957a 00b1  ld   $b1
              957b 00de  ld   $de
              957c 00a8  ld   $a8
              957d 0088  ld   $88
              957e 00b1  ld   $b1
              957f 00de  ld   $de
              9580 0091  ld   $91
              9581 0046  ld   $46
              9582 0098  ld   $98
              9583 00d0  ld   $d0
              9584 00f8  ld   $f8
              9585 0024  ld   $24
              9586 0078  ld   $78
              9587 0010  ld   $10
              9588 0009  ld   $09
              9589 00b5  ld   $b5
              958a 0077  ld   $77
              958b 0075  ld   $75
              958c 0075  ld   $75
              958d 0095  ld   $95
              958e 0077  ld   $77
              958f 00e8  ld   $e8
              9590 00f0  ld   $f0
              9591 00f7  ld   $f7
              9592 0010  ld   $10
              9593 007e  ld   $7e
              9594 0000  ld   $00
              9595 0000  ld   $00
              9596 0000  ld   $00
              9597 0000  ld   $00
              9598 00a0  ld   $a0
              9599 0014  ld   $14
              959a 00d0  ld   $d0
              959b 0071  ld   $71
              959c 0020  ld   $20
              959d 0015  ld   $15
              959e 00e7  ld   $e7
              959f 00a5  ld   $a5
              95a0 0042  ld   $42
              95a1 0085  ld   $85
              95a2 0046  ld   $46
              95a3 00a5  ld   $a5
              95a4 0043  ld   $43
              95a5 0085  ld   $85
              95a6 0047  ld   $47
              95a7 0020  ld   $20
              95a8 0075  ld   $75
              95a9 00e5  ld   $e5
              95aa 00a5  ld   $a5
              95ab 0042  ld   $42
              95ac 0085  ld   $85
              95ad 0044  ld   $44
              95ae 00a5  ld   $a5
              95af 0043  ld   $43
              95b0 0085  ld   $85
              95b1 0045  ld   $45
              95b2 00d0  ld   $d0
              95b3 000e  ld   $0e
              95b4 0020  ld   $20
              95b5 0015  ld   $15
              95b6 00e7  ld   $e7
              95b7 0020  ld   $20
              95b8 006d  ld   $6d
              95b9 00e5  ld   $e5
              95ba 00a5  ld   $a5
              95bb 0046  ld   $46
              95bc 0085  ld   $85
              95bd 0042  ld   $42
              95be 00a5  ld   $a5
              95bf 0047  ld   $47
              95c0 0085  ld   $85
              95c1 0043  ld   $43
              95c2 00a0  ld   $a0
              95c3 0000  ld   $00
              95c4 00a5  ld   $a5
              95c5 00ca  ld   $ca
              95c6 00c5  ld   $c5
              95c7 0044  ld   $44
              95c8 00a5  ld   $a5
              95c9 00cb  ld   $cb
              95ca 00e5  ld   $e5
              95cb 0045  ld   $45
              95cc 00b0  ld   $b0
              95cd 0016  ld   $16
              95ce 00a5  ld   $a5
              95cf 0044  ld   $44
              95d0 00d0  ld   $d0
              95d1 0002  ld   $02
              95d2 00c6  ld   $c6
              95d3 0045  ld   $45
              95d4 00c6  ld   $c6
              95d5 0044  ld   $44
              95d6 00a5  ld   $a5
              95d7 0046  ld   $46
              95d8 00d0  ld   $d0
              95d9 0002  ld   $02
              95da 00c6  ld   $c6
              95db 0047  ld   $47
              95dc 00c6  ld   $c6
              95dd 0046  ld   $46
              95de 00b1  ld   $b1
              95df 0044  ld   $44
              95e0 0091  ld   $91
              95e1 0046  ld   $46
              95e2 0090  ld   $90
              95e3 00e0  ld   $e0
              95e4 00a5  ld   $a5
              95e5 0046  ld   $46
              95e6 0085  ld   $85
              95e7 00ca  ld   $ca
              95e8 00a5  ld   $a5
              95e9 0047  ld   $47
              95ea 0085  ld   $85
              95eb 00cb  ld   $cb
              95ec 0060  ld   $60
              95ed 0020  ld   $20
              95ee 00c9  ld   $c9
              95ef 00e3  ld   $e3
              95f0 00c8  ld   $c8
              95f1 00b9  ld   $b9
              95f2 0000  ld   $00
              95f3 00eb  ld   $eb
              95f4 0030  ld   $30
              95f5 00f7  ld   $f7
              95f6 00c9  ld   $c9
              95f7 008d  ld   $8d
              95f8 00d0  ld   $d0
              95f9 0006  ld   $06
              95fa 00a9  ld   $a9
              95fb fe00  bra  ac          ;+-----------------------------------+
              95fc fcfd  bra  $95fd       ;|                                   |
              95fd 1418  ld   $18,y       ;| Trampoline for page $9500 lookups |
              95fe e006  jmp  y,$06       ;|                                   |
              95ff c218  st   [$18]       ;+-----------------------------------+
              9600 0000  ld   $00
              9601 0085  ld   $85
              9602 0081  ld   $81
              9603 00a9  ld   $a9
              9604 008d  ld   $8d
              9605 00e6  ld   $e6
              9606 0081  ld   $81
              9607 004c  ld   $4c
              9608 00ef  ld   $ef
              9609 00ff  ld   $ff
              960a 00ea  ld   $ea
              960b 00ea  ld   $ea
              960c 00ea  ld   $ea
              * 6 times
              9610 00a0  ld   $a0
              9611 0006  ld   $06
              9612 0020  ld   $20
              9613 00d3  ld   $d3
              9614 00ee  ld   $ee
              9615 0024  ld   $24
              9616 00d9  ld   $d9
              9617 0030  ld   $30
              9618 0003  ld   $03
              9619 004c  ld   $4c
              961a 00b6  ld   $b6
              961b 00e2  ld   $e2
              961c 004c  ld   $4c
              961d 009a  ld   $9a
              961e 00eb  ld   $eb
              961f 002a  ld   $2a
              9620 0069  ld   $69
              9621 00a0  ld   $a0
              9622 00dd  ld   $dd
              9623 0000  ld   $00
              9624 0002  ld   $02
              9625 00d0  ld   $d0
              9626 0053  ld   $53
              9627 00b1  ld   $b1
              9628 0086  ld   $86
              9629 000a  ld   $0a
              962a 0030  ld   $30
              962b 0006  ld   $06
              962c 0088  ld   $88
              962d 00b1  ld   $b1
              962e 0086  ld   $86
              962f 0030  ld   $30
              9630 0029  ld   $29
              9631 00c8  ld   $c8
              9632 00e4  ld   $e4
              9633 0000  ld   $00
              9634 0000  ld   $00
              9635 0086  ld   $86
              9636 00c8  ld   $c8
              9637 0098  ld   $98
              9638 0048  ld   $48
              9639 00a2  ld   $a2
              963a 0000  ld   $00
              963b 00a1  ld   $a1
              963c 0086  ld   $86
              963d 00aa  ld   $aa
              963e 004a  ld   $4a
              963f 0049  ld   $49
              9640 0048  ld   $48
              9641 0011  ld   $11
              9642 0086  ld   $86
              9643 00c9  ld   $c9
              9644 00c0  ld   $c0
              9645 0090  ld   $90
              9646 0001  ld   $01
              9647 00e8  ld   $e8
              9648 00c8  ld   $c8
              9649 00d0  ld   $d0
              964a 00f3  ld   $f3
              964b 0068  ld   $68
              964c 00a8  ld   $a8
              964d 008a  ld   $8a
              964e 004c  ld   $4c
              964f 00c0  ld   $c0
              9650 00e4  ld   $e4
              9651 00e6  ld   $e6
              9652 00e9  ld   $e9
              9653 00a6  ld   $a6
              9654 00e9  ld   $e9
              9655 00f0  ld   $f0
              9656 00bc  ld   $bc
              9657 009d  ld   $9d
              9658 0000  ld   $00
              9659 0002  ld   $02
              965a 0060  ld   $60
              965b 00a6  ld   $a6
              965c 00c8  ld   $c8
              965d 00a9  ld   $a9
              965e 00a0  ld   $a0
              965f 00e8  ld   $e8
              9660 00dd  ld   $dd
              9661 0000  ld   $00
              9662 0002  ld   $02
              9663 00b0  ld   $b0
              9664 00fa  ld   $fa
              9665 00b1  ld   $b1
              9666 0086  ld   $86
              9667 0029  ld   $29
              9668 003f  ld   $3f
              9669 004a  ld   $4a
              966a 00d0  ld   $d0
              966b 00b6  ld   $b6
              966c 00bd  ld   $bd
              966d 0000  ld   $00
              966e 0002  ld   $02
              966f 00b0  ld   $b0
              9670 0006  ld   $06
              9671 0069  ld   $69
              9672 003f  ld   $3f
              9673 00c9  ld   $c9
              9674 001a  ld   $1a
              9675 0090  ld   $90
              9676 006f  ld   $6f
              9677 0069  ld   $69
              9678 004f  ld   $4f
              9679 00c9  ld   $c9
              967a 000a  ld   $0a
              967b 0090  ld   $90
              967c 0069  ld   $69
              967d 00a6  ld   $a6
              967e 0085  ld   $85
              967f 00c8  ld   $c8
              9680 00b1  ld   $b1
              9681 0086  ld   $86
              9682 0029  ld   $29
              9683 00e0  ld   $e0
              9684 00c9  ld   $c9
              9685 0020  ld   $20
              9686 00f0  ld   $f0
              9687 007a  ld   $7a
              9688 00b5  ld   $b5
              9689 00b0  ld   $b0
              968a 0085  ld   $85
              968b 00c8  ld   $c8
              968c 00b5  ld   $b5
              968d 00d1  ld   $d1
              968e 0085  ld   $85
              968f 00e9  ld   $e9
              9690 0088  ld   $88
              9691 00b1  ld   $b1
              9692 0086  ld   $86
              9693 000a  ld   $0a
              9694 0010  ld   $10
              9695 00fa  ld   $fa
              9696 0088  ld   $88
              9697 00b0  ld   $b0
              9698 0038  ld   $38
              9699 000a  ld   $0a
              969a 0030  ld   $30
              969b 0035  ld   $35
              969c 00b4  ld   $b4
              969d 0058  ld   $58
              969e 0084  ld   $84
              969f 0087  ld   $87
              96a0 00b4  ld   $b4
              96a1 0090  ld   $90
              96a2 00e8  ld   $e8
              96a3 0010  ld   $10
              96a4 00da  ld   $da
              96a5 00f0  ld   $f0
              96a6 00b3  ld   $b3
              96a7 00c9  ld   $c9
              96a8 007e  ld   $7e
              96a9 00b0  ld   $b0
              96aa 0022  ld   $22
              96ab 00ca  ld   $ca
              96ac 0010  ld   $10
              96ad 0004  ld   $04
              96ae 00a0  ld   $a0
              96af 0006  ld   $06
              96b0 0010  ld   $10
              96b1 0029  ld   $29
              96b2 0094  ld   $94
              96b3 0090  ld   $90
              96b4 00a4  ld   $a4
              96b5 0087  ld   $87
              96b6 0094  ld   $94
              96b7 0058  ld   $58
              96b8 00a4  ld   $a4
              96b9 00c8  ld   $c8
              96ba 0094  ld   $94
              96bb 00b0  ld   $b0
              96bc 00a4  ld   $a4
              96bd 00e9  ld   $e9
              96be 0094  ld   $94
              96bf 00d1  ld   $d1
              96c0 0029  ld   $29
              96c1 001f  ld   $1f
              96c2 00a8  ld   $a8
              96c3 00b9  ld   $b9
              96c4 0020  ld   $20
              96c5 00ec  ld   $ec
              96c6 000a  ld   $0a
              96c7 00a8  ld   $a8
              96c8 00a9  ld   $a9
              96c9 0076  ld   $76
              96ca 002a  ld   $2a
              96cb 0085  ld   $85
              96cc 0087  ld   $87
              96cd 00d0  ld   $d0
              96ce 0001  ld   $01
              96cf 00c8  ld   $c8
              96d0 00c8  ld   $c8
              96d1 0086  ld   $86
              96d2 0085  ld   $85
              96d3 00b1  ld   $b1
              96d4 0086  ld   $86
              96d5 0030  ld   $30
              96d6 0084  ld   $84
              96d7 00d0  ld   $d0
              96d8 0005  ld   $05
              96d9 00a0  ld   $a0
              96da 000e  ld   $0e
              96db 004c  ld   $4c
              96dc 00e0  ld   $e0
              96dd 00e3  ld   $e3
              96de 00c9  ld   $c9
              96df 0003  ld   $03
              96e0 00b0  ld   $b0
              96e1 00c3  ld   $c3
              96e2 004a  ld   $4a
              96e3 00a6  ld   $a6
              96e4 00c8  ld   $c8
              96e5 00e8  ld   $e8
              96e6 00bd  ld   $bd
              96e7 0000  ld   $00
              96e8 0002  ld   $02
              96e9 0090  ld   $90
              96ea 0004  ld   $04
              96eb 00c9  ld   $c9
              96ec 00a2  ld   $a2
              96ed 00f0  ld   $f0
              96ee 000a  ld   $0a
              96ef 00c9  ld   $c9
              96f0 00df  ld   $df
              96f1 00f0  ld   $f0
              96f2 0006  ld   $06
              96f3 0086  ld   $86
              96f4 00c8  ld   $c8
              96f5 0020  ld   $20
              96f6 001c  ld   $1c
              96f7 00e4  ld   $e4
              96f8 00c8  ld   $c8
              96f9 0088  ld   $88
              96fa 00a6  ld   $a6
              96fb fe00  bra  ac          ;+-----------------------------------+
              96fc fcfd  bra  $96fd       ;|                                   |
              96fd 1418  ld   $18,y       ;| Trampoline for page $9600 lookups |
              96fe e006  jmp  y,$06       ;|                                   |
              96ff c218  st   [$18]       ;+-----------------------------------+
              9700 0085  ld   $85
              9701 00b1  ld   $b1
              9702 0086  ld   $86
              9703 0088  ld   $88
              9704 000a  ld   $0a
              9705 0010  ld   $10
              9706 00cf  ld   $cf
              9707 00b4  ld   $b4
              9708 0058  ld   $58
              9709 0084  ld   $84
              970a 0087  ld   $87
              970b 00b4  ld   $b4
              970c 0090  ld   $90
              970d 00e8  ld   $e8
              970e 00b1  ld   $b1
              970f 0086  ld   $86
              9710 0029  ld   $29
              9711 009f  ld   $9f
              9712 00d0  ld   $d0
              9713 00ed  ld   $ed
              9714 0085  ld   $85
              9715 0072  ld   $72
              9716 0085  ld   $85
              9717 0073  ld   $73
              9718 0098  ld   $98
              9719 0048  ld   $48
              971a 0086  ld   $86
              971b 0085  ld   $85
              971c 00b4  ld   $b4
              971d 00d0  ld   $d0
              971e 0084  ld   $84
              971f 00c9  ld   $c9
              9720 0018  ld   $18
              9721 00a9  ld   $a9
              9722 000a  ld   $0a
              9723 0085  ld   $85
              9724 0079  ld   $79
              9725 00a2  ld   $a2
              9726 0000  ld   $00
              9727 00c8  ld   $c8
              9728 00b9  ld   $b9
              9729 0000  ld   $00
              972a 0002  ld   $02
              972b 0029  ld   $29
              972c 000f  ld   $0f
              972d 0065  ld   $65
              972e 0072  ld   $72
              972f 0048  ld   $48
              9730 008a  ld   $8a
              9731 0065  ld   $65
              9732 0073  ld   $73
              9733 0030  ld   $30
              9734 001c  ld   $1c
              9735 00aa  ld   $aa
              9736 0068  ld   $68
              9737 00c6  ld   $c6
              9738 0079  ld   $79
              9739 00d0  ld   $d0
              973a 00e5  ld   $e5
              973b 0000  ld   $00
              973c 0000  ld   $00
              973d 00f2  ld   $f2
              973e 0085  ld   $85
              973f 0072  ld   $72
              9740 0086  ld   $86
              9741 0073  ld   $73
              9742 00c4  ld   $c4
              9743 00e9  ld   $e9
              9744 00d0  ld   $d0
              9745 00de  ld   $de
              9746 00a4  ld   $a4
              9747 00c9  ld   $c9
              9748 00c8  ld   $c8
              9749 0084  ld   $84
              974a 00e9  ld   $e9
              974b 0020  ld   $20
              974c 001c  ld   $1c
              974d 00e4  ld   $e4
              974e 0068  ld   $68
              974f 00a8  ld   $a8
              9750 00a5  ld   $a5
              9751 0073  ld   $73
              9752 00b0  ld   $b0
              9753 00a9  ld   $a9
              9754 00a0  ld   $a0
              9755 0000  ld   $00
              9756 0010  ld   $10
              9757 008b  ld   $8b
              9758 0085  ld   $85
              9759 0073  ld   $73
              975a 0086  ld   $86
              975b 0072  ld   $72
              975c 00a2  ld   $a2
              975d 0004  ld   $04
              975e 0086  ld   $86
              975f 00c9  ld   $c9
              9760 00a9  ld   $a9
              9761 00b0  ld   $b0
              9762 0085  ld   $85
              9763 0079  ld   $79
              9764 00a5  ld   $a5
              9765 0072  ld   $72
              9766 00dd  ld   $dd
              9767 0063  ld   $63
              9768 00e5  ld   $e5
              9769 00a5  ld   $a5
              976a 0073  ld   $73
              976b 00fd  ld   $fd
              976c 0068  ld   $68
              976d 00e5  ld   $e5
              976e 0090  ld   $90
              976f 000d  ld   $0d
              9770 0085  ld   $85
              9771 0073  ld   $73
              9772 00a5  ld   $a5
              9773 0072  ld   $72
              9774 00fd  ld   $fd
              9775 0063  ld   $63
              9776 00e5  ld   $e5
              9777 0085  ld   $85
              9778 0072  ld   $72
              9779 00e6  ld   $e6
              977a 0079  ld   $79
              977b 00d0  ld   $d0
              977c 00e7  ld   $e7
              977d 00a5  ld   $a5
              977e 0079  ld   $79
              977f 00e8  ld   $e8
              9780 00ca  ld   $ca
              9781 00f0  ld   $f0
              9782 000e  ld   $0e
              9783 00c9  ld   $c9
              9784 00b0  ld   $b0
              9785 00f0  ld   $f0
              9786 0002  ld   $02
              9787 0085  ld   $85
              9788 00c9  ld   $c9
              9789 0024  ld   $24
              978a 00c9  ld   $c9
              978b 0030  ld   $30
              978c 0004  ld   $04
              978d 00a5  ld   $a5
              978e 0082  ld   $82
              978f 00f0  ld   $f0
              9790 000b  ld   $0b
              9791 0020  ld   $20
              9792 00c9  ld   $c9
              9793 00e3  ld   $e3
              9794 0024  ld   $24
              9795 0078  ld   $78
              9796 0010  ld   $10
              9797 0004  ld   $04
              9798 0099  ld   $99
              9799 0000  ld   $00
              979a 0002  ld   $02
              979b 00c8  ld   $c8
              979c 00ca  ld   $ca
              979d 0010  ld   $10
              979e 00c1  ld   $c1
              979f 0060  ld   $60
              97a0 0001  ld   $01
              97a1 000a  ld   $0a
              97a2 0064  ld   $64
              97a3 00e8  ld   $e8
              97a4 0010  ld   $10
              97a5 0000  ld   $00
              97a6 0000  ld   $00
              97a7 0000  ld   $00
              97a8 0003  ld   $03
              97a9 0027  ld   $27
              97aa 00a5  ld   $a5
              97ab 00ca  ld   $ca
              97ac 0085  ld   $85
              97ad 0046  ld   $46
              97ae 00a5  ld   $a5
              97af 00cb  ld   $cb
              97b0 0085  ld   $85
              97b1 0047  ld   $47
              97b2 00e8  ld   $e8
              97b3 00a5  ld   $a5
              97b4 0047  ld   $47
              97b5 0085  ld   $85
              97b6 0045  ld   $45
              97b7 00a5  ld   $a5
              97b8 0046  ld   $46
              97b9 0085  ld   $85
              97ba 0044  ld   $44
              97bb 00c5  ld   $c5
              97bc 004c  ld   $4c
              97bd 00a5  ld   $a5
              97be 0045  ld   $45
              97bf 00e5  ld   $e5
              97c0 004d  ld   $4d
              97c1 00b0  ld   $b0
              97c2 0026  ld   $26
              97c3 00a0  ld   $a0
              97c4 0001  ld   $01
              97c5 00b1  ld   $b1
              97c6 0044  ld   $44
              97c7 00e5  ld   $e5
              97c8 00ce  ld   $ce
              97c9 00c8  ld   $c8
              97ca 00b1  ld   $b1
              97cb 0044  ld   $44
              97cc 00e5  ld   $e5
              97cd 00cf  ld   $cf
              97ce 00b0  ld   $b0
              97cf 0019  ld   $19
              97d0 00a0  ld   $a0
              97d1 0000  ld   $00
              97d2 00a5  ld   $a5
              97d3 0046  ld   $46
              97d4 0071  ld   $71
              97d5 0044  ld   $44
              97d6 0085  ld   $85
              97d7 0046  ld   $46
              97d8 0090  ld   $90
              97d9 0003  ld   $03
              97da 00e6  ld   $e6
              97db 0047  ld   $47
              97dc 0018  ld   $18
              97dd 00c8  ld   $c8
              97de 00a5  ld   $a5
              97df 00ce  ld   $ce
              97e0 00f1  ld   $f1
              97e1 0044  ld   $44
              97e2 00c8  ld   $c8
              97e3 00a5  ld   $a5
              97e4 00cf  ld   $cf
              97e5 00f1  ld   $f1
              97e6 0044  ld   $44
              97e7 00b0  ld   $b0
              97e8 00ca  ld   $ca
              97e9 0060  ld   $60
              97ea 0046  ld   $46
              97eb 0078  ld   $78
              97ec 00a5  ld   $a5
              97ed 004c  ld   $4c
              97ee 0085  ld   $85
              97ef 00ca  ld   $ca
              97f0 00a5  ld   $a5
              97f1 004d  ld   $4d
              97f2 0085  ld   $85
              97f3 00cb  ld   $cb
              97f4 00a5  ld   $a5
              97f5 004a  ld   $4a
              97f6 0085  ld   $85
              97f7 00cc  ld   $cc
              97f8 00a5  ld   $a5
              97f9 004b  ld   $4b
              97fa 0085  ld   $85
              97fb fe00  bra  ac          ;+-----------------------------------+
              97fc fcfd  bra  $97fd       ;|                                   |
              97fd 1418  ld   $18,y       ;| Trampoline for page $9700 lookups |
              97fe e006  jmp  y,$06       ;|                                   |
              97ff c218  st   [$18]       ;+-----------------------------------+
              9800 00cd  ld   $cd
              9801 00a9  ld   $a9
              9802 0000  ld   $00
              9803 0085  ld   $85
              9804 0083  ld   $83
              9805 0085  ld   $85
              9806 0084  ld   $84
              9807 0085  ld   $85
              9808 0086  ld   $86
              9809 00a9  ld   $a9
              980a 0000  ld   $00
              980b 0085  ld   $85
              980c 001d  ld   $1d
              980d 0060  ld   $60
              980e 00a5  ld   $a5
              980f 00d0  ld   $d0
              9810 0069  ld   $69
              9811 0005  ld   $05
              9812 0085  ld   $85
              9813 00d2  ld   $d2
              9814 00a5  ld   $a5
              9815 00d1  ld   $d1
              9816 0069  ld   $69
              9817 0000  ld   $00
              9818 0085  ld   $85
              9819 00d3  ld   $d3
              981a 00a5  ld   $a5
              981b 00d2  ld   $d2
              981c 00c5  ld   $c5
              981d 00ca  ld   $ca
              981e 00a5  ld   $a5
              981f 00d3  ld   $d3
              9820 00e5  ld   $e5
              9821 00cb  ld   $cb
              9822 0090  ld   $90
              9823 0003  ld   $03
              9824 004c  ld   $4c
              9825 006b  ld   $6b
              9826 00e3  ld   $e3
              9827 00a5  ld   $a5
              9828 00ce  ld   $ce
              9829 0091  ld   $91
              982a 00d0  ld   $d0
              982b 00a5  ld   $a5
              982c 00cf  ld   $cf
              982d 00c8  ld   $c8
              982e 0091  ld   $91
              982f 00d0  ld   $d0
              9830 00a5  ld   $a5
              9831 00d2  ld   $d2
              9832 00c8  ld   $c8
              9833 0091  ld   $91
              9834 00d0  ld   $d0
              9835 00a5  ld   $a5
              9836 00d3  ld   $d3
              9837 00c8  ld   $c8
              9838 0091  ld   $91
              9839 00d0  ld   $d0
              983a 00a9  ld   $a9
              983b 0000  ld   $00
              983c 00c8  ld   $c8
              983d 0091  ld   $91
              983e 00d0  ld   $d0
              983f 00c8  ld   $c8
              9840 0091  ld   $91
              9841 00d0  ld   $d0
              9842 00e6  ld   $e6
              9843 0000  ld   $00
              9844 0000  ld   $00
              9845 00a5  ld   $a5
              9846 00d2  ld   $d2
              9847 0085  ld   $85
              9848 00cc  ld   $cc
              9849 00a5  ld   $a5
              984a 00d3  ld   $d3
              984b 0085  ld   $85
              984c 00cd  ld   $cd
              984d 00a5  ld   $a5
              984e 00d0  ld   $d0
              984f 0090  ld   $90
              9850 0043  ld   $43
              9851 0085  ld   $85
              9852 00ce  ld   $ce
              9853 0084  ld   $84
              9854 00cf  ld   $cf
              9855 0020  ld   $20
              9856 00ff  ld   $ff
              9857 00e6  ld   $e6
              9858 0030  ld   $30
              9859 000e  ld   $0e
              985a 00c9  ld   $c9
              985b 0040  ld   $40
              985c 00f0  ld   $f0
              985d 000a  ld   $0a
              985e 004c  ld   $4c
              985f 0028  ld   $28
              9860 00e6  ld   $e6
              9861 0006  ld   $06
              9862 00c9  ld   $c9
              9863 0049  ld   $49
              9864 00d0  ld   $d0
              9865 0007  ld   $07
              9866 00a9  ld   $a9
              9867 0049  ld   $49
              9868 0085  ld   $85
              9869 00cf  ld   $cf
              986a 0020  ld   $20
              986b 00ff  ld   $ff
              986c 00e6  ld   $e6
              986d 00a5  ld   $a5
              986e 004b  ld   $4b
              986f 0085  ld   $85
              9870 00d1  ld   $d1
              9871 00a5  ld   $a5
              9872 004a  ld   $4a
              9873 0085  ld   $85
              9874 00d0  ld   $d0
              9875 00c5  ld   $c5
              9876 00cc  ld   $cc
              9877 00a5  ld   $a5
              9878 00d1  ld   $d1
              9879 00e5  ld   $e5
              987a 00cd  ld   $cd
              987b 00b0  ld   $b0
              987c 0094  ld   $94
              987d 00b1  ld   $b1
              987e 00d0  ld   $d0
              987f 00c8  ld   $c8
              9880 00c5  ld   $c5
              9881 00ce  ld   $ce
              9882 00d0  ld   $d0
              9883 0006  ld   $06
              9884 00b1  ld   $b1
              9885 00d0  ld   $d0
              9886 00c5  ld   $c5
              9887 00cf  ld   $cf
              9888 00f0  ld   $f0
              9889 000e  ld   $0e
              988a 00c8  ld   $c8
              988b 00b1  ld   $b1
              988c 00d0  ld   $d0
              988d 0048  ld   $48
              988e 00c8  ld   $c8
              988f 00b1  ld   $b1
              9890 00d0  ld   $d0
              9891 0085  ld   $85
              9892 00d1  ld   $d1
              9893 0068  ld   $68
              9894 00a0  ld   $a0
              9895 0000  ld   $00
              9896 00f0  ld   $f0
              9897 00db  ld   $db
              9898 00a5  ld   $a5
              9899 00d0  ld   $d0
              989a 0069  ld   $69
              989b 0003  ld   $03
              989c 0020  ld   $20
              989d 000a  ld   $0a
              989e 00e7  ld   $e7
              989f 00a5  ld   $a5
              98a0 00d1  ld   $d1
              98a1 0069  ld   $69
              98a2 0000  ld   $00
              98a3 0095  ld   $95
              98a4 0088  ld   $88
              98a5 00a5  ld   $a5
              98a6 00cf  ld   $cf
              98a7 00c9  ld   $c9
              98a8 0040  ld   $40
              98a9 00d0  ld   $d0
              98aa 001c  ld   $1c
              98ab 0088  ld   $88
              98ac 0098  ld   $98
              98ad 0020  ld   $20
              98ae 000a  ld   $0a
              98af 00e7  ld   $e7
              98b0 0088  ld   $88
              98b1 0094  ld   $94
              98b2 0088  ld   $88
              98b3 00a0  ld   $a0
              98b4 0003  ld   $03
              98b5 00f6  ld   $f6
              98b6 0088  ld   $88
              98b7 00c8  ld   $c8
              98b8 00b1  ld   $b1
              98b9 00d0  ld   $d0
              98ba 0030  ld   $30
              98bb 00f9  ld   $f9
              98bc 0010  ld   $10
              98bd 0009  ld   $09
              98be 00a9  ld   $a9
              98bf 0000  ld   $00
              98c0 0085  ld   $85
              98c1 00d4  ld   $d4
              98c2 0085  ld   $85
              98c3 00d5  ld   $d5
              98c4 00a2  ld   $a2
              98c5 0018  ld   $18
              98c6 0048  ld   $48
              98c7 00a0  ld   $a0
              98c8 0000  ld   $00
              98c9 00b1  ld   $b1
              98ca 00de  ld   $de
              98cb 0010  ld   $10
              98cc 0018  ld   $18
              98cd 000a  ld   $0a
              98ce 0030  ld   $30
              98cf 0081  ld   $81
              98d0 0020  ld   $20
              98d1 00ff  ld   $ff
              98d2 00e6  ld   $e6
              98d3 0020  ld   $20
              98d4 0008  ld   $08
              98d5 00e7  ld   $e7
              98d6 0020  ld   $20
              98d7 00ff  ld   $ff
              98d8 00e6  ld   $e6
              98d9 0095  ld   $95
              98da 00a8  ld   $a8
              98db 0024  ld   $24
              98dc 00d4  ld   $d4
              98dd 0010  ld   $10
              98de 0001  ld   $01
              98df 00ca  ld   $ca
              98e0 0020  ld   $20
              98e1 00ff  ld   $ff
              98e2 00e6  ld   $e6
              98e3 00b0  ld   $b0
              98e4 00e6  ld   $e6
              98e5 00c9  ld   $c9
              98e6 0028  ld   $28
              98e7 00d0  ld   $d0
              98e8 001f  ld   $1f
              98e9 00a5  ld   $a5
              98ea 00de  ld   $de
              98eb 0020  ld   $20
              98ec 000a  ld   $0a
              98ed 00e7  ld   $e7
              98ee 00a5  ld   $a5
              98ef 00df  ld   $df
              98f0 0095  ld   $95
              98f1 0088  ld   $88
              98f2 0024  ld   $24
              98f3 00d4  ld   $d4
              98f4 0030  ld   $30
              98f5 000b  ld   $0b
              98f6 00a9  ld   $a9
              98f7 0001  ld   $01
              98f8 0020  ld   $20
              98f9 000a  ld   $0a
              98fa 00e7  ld   $e7
              98fb fe00  bra  ac          ;+-----------------------------------+
              98fc fcfd  bra  $98fd       ;|                                   |
              98fd 1418  ld   $18,y       ;| Trampoline for page $9800 lookups |
              98fe e006  jmp  y,$06       ;|                                   |
              98ff c218  st   [$18]       ;+-----------------------------------+
              9900 00a9  ld   $a9
              9901 0000  ld   $00
              9902 0095  ld   $95
              9903 0088  ld   $88
              9904 00f6  ld   $f6
              9905 0088  ld   $88
              9906 0020  ld   $20
              9907 00ff  ld   $ff
              9908 00e6  ld   $e6
              9909 0030  ld   $30
              990a 00f9  ld   $f9
              990b 00b0  ld   $b0
              990c 00d3  ld   $d3
              990d 0024  ld   $24
              990e 00d4  ld   $d4
              990f 0010  ld   $10
              9910 0006  ld   $06
              9911 00c9  ld   $c9
              9912 0004  ld   $04
              9913 00b0  ld   $b0
              9914 00d0  ld   $d0
              9915 0046  ld   $46
              9916 00d4  ld   $d4
              9917 00a8  ld   $a8
              9918 0085  ld   $85
              9919 00d6  ld   $d6
              991a 00b9  ld   $b9
              991b 0098  ld   $98
              991c 00e9  ld   $e9
              991d 0029  ld   $29
              991e 0055  ld   $55
              991f 000a  ld   $0a
              9920 0085  ld   $85
              9921 00d7  ld   $d7
              9922 0068  ld   $68
              9923 00a8  ld   $a8
              9924 00b9  ld   $b9
              9925 0098  ld   $98
              9926 00e9  ld   $e9
              9927 0029  ld   $29
              9928 00aa  ld   $aa
              9929 00c5  ld   $c5
              992a 00d7  ld   $d7
              992b 00b0  ld   $b0
              992c 0009  ld   $09
              992d 0098  ld   $98
              992e 0048  ld   $48
              992f 0020  ld   $20
              9930 00ff  ld   $ff
              9931 00e6  ld   $e6
              9932 00a5  ld   $a5
              9933 00d6  ld   $d6
              9934 0090  ld   $90
              9935 0095  ld   $95
              9936 00b9  ld   $b9
              9937 0010  ld   $10
              9938 00ea  ld   $ea
              9939 0085  ld   $85
              993a 00ce  ld   $ce
              993b 00b9  ld   $b9
              993c 0088  ld   $88
              993d 00ea  ld   $ea
              993e 0085  ld   $85
              993f 00cf  ld   $cf
              9940 0020  ld   $20
              9941 00fc  ld   $fc
              9942 00e6  ld   $e6
              9943 004c  ld   $4c
              9944 00d8  ld   $d8
              9945 00e6  ld   $e6
              9946 006c  ld   $6c
              9947 00ce  ld   $ce
              9948 0000  ld   $00
              9949 00e6  ld   $e6
              994a 00e7  ld   $e7
              994b 0000  ld   $00
              994c 0000  ld   $00
              994d 00de  ld   $de
              994e 00d0  ld   $d0
              994f 0002  ld   $02
              9950 00e6  ld   $e6
              9951 00df  ld   $df
              9952 00b1  ld   $b1
              9953 00de  ld   $de
              9954 0060  ld   $60
              9955 0094  ld   $94
              9956 0087  ld   $87
              9957 00ca  ld   $ca
              9958 0030  ld   $30
              9959 0003  ld   $03
              995a 0095  ld   $95
              995b 0050  ld   $50
              995c 0060  ld   $60
              995d 00a0  ld   $a0
              995e 0066  ld   $66
              995f 004c  ld   $4c
              9960 00e0  ld   $e0
              9961 00e3  ld   $e3
              9962 00a0  ld   $a0
              9963 0000  ld   $00
              9964 00b5  ld   $b5
              9965 0050  ld   $50
              9966 0085  ld   $85
              9967 00ce  ld   $ce
              9968 00b5  ld   $b5
              9969 00a8  ld   $a8
              996a 0085  ld   $85
              996b 00cf  ld   $cf
              996c 00b5  ld   $b5
              996d 0088  ld   $88
              996e 00f0  ld   $f0
              996f 000e  ld   $0e
              9970 0085  ld   $85
              9971 00cf  ld   $cf
              9972 00b1  ld   $b1
              9973 00ce  ld   $ce
              9974 0048  ld   $48
              9975 00c8  ld   $c8
              9976 00b1  ld   $b1
              9977 00ce  ld   $ce
              9978 0085  ld   $85
              9979 00cf  ld   $cf
              997a 0068  ld   $68
              997b 0085  ld   $85
              997c 00ce  ld   $ce
              997d 0088  ld   $88
              997e 00e8  ld   $e8
              997f 0060  ld   $60
              9980 0020  ld   $20
              9981 004a  ld   $4a
              9982 00e7  ld   $e7
              9983 0020  ld   $20
              9984 0015  ld   $15
              9985 00e7  ld   $e7
              9986 0098  ld   $98
              9987 0020  ld   $20
              9988 0008  ld   $08
              9989 00e7  ld   $e7
              998a 0095  ld   $95
              998b 00a8  ld   $a8
              998c 00c5  ld   $c5
              998d 00ce  ld   $ce
              998e 00d0  ld   $d0
              998f 0006  ld   $06
              9990 00c5  ld   $c5
              9991 00cf  ld   $cf
              9992 00d0  ld   $d0
              9993 0002  ld   $02
              9994 00f6  ld   $f6
              9995 0050  ld   $50
              9996 0060  ld   $60
              9997 0020  ld   $20
              9998 0082  ld   $82
              9999 00e7  ld   $e7
              999a 0020  ld   $20
              999b 0059  ld   $59
              999c 00e7  ld   $e7
              999d 0020  ld   $20
              999e 0015  ld   $15
              999f 00e7  ld   $e7
              99a0 0024  ld   $24
              99a1 00cf  ld   $cf
              99a2 0030  ld   $30
              99a3 001b  ld   $1b
              99a4 00ca  ld   $ca
              99a5 0060  ld   $60
              99a6 0020  ld   $20
              99a7 0015  ld   $15
              99a8 00e7  ld   $e7
              99a9 00a5  ld   $a5
              99aa 00cf  ld   $cf
              99ab 00d0  ld   $d0
              99ac 0004  ld   $04
              99ad 00a5  ld   $a5
              99ae 00ce  ld   $ce
              99af 00f0  ld   $f0
              99b0 00f3  ld   $f3
              99b1 00a9  ld   $a9
              99b2 00ff  ld   $ff
              99b3 0020  ld   $20
              99b4 0008  ld   $08
              99b5 00e7  ld   $e7
              99b6 0095  ld   $95
              99b7 00a8  ld   $a8
              99b8 0024  ld   $24
              99b9 00cf  ld   $cf
              99ba 0030  ld   $30
              99bb 00e9  ld   $e9
              99bc 0020  ld   $20
              99bd 0015  ld   $15
              99be 00e7  ld   $e7
              99bf 0098  ld   $98
              99c0 0038  ld   $38
              99c1 00e5  ld   $e5
              99c2 00ce  ld   $ce
              99c3 0020  ld   $20
              99c4 0008  ld   $08
              99c5 00e7  ld   $e7
              99c6 0098  ld   $98
              99c7 00e5  ld   $e5
              99c8 00cf  ld   $cf
              99c9 0050  ld   $50
              99ca 0023  ld   $23
              99cb 00a0  ld   $a0
              99cc 0000  ld   $00
              99cd 0010  ld   $10
              99ce 0090  ld   $90
              99cf 0020  ld   $20
              99d0 006f  ld   $6f
              99d1 00e7  ld   $e7
              99d2 0020  ld   $20
              99d3 0015  ld   $15
              99d4 00e7  ld   $e7
              99d5 00a5  ld   $a5
              99d6 00ce  ld   $ce
              99d7 0085  ld   $85
              99d8 00da  ld   $da
              99d9 00a5  ld   $a5
              99da 00cf  ld   $cf
              99db 0085  ld   $85
              99dc 00db  ld   $db
              99dd 0020  ld   $20
              99de 0015  ld   $15
              99df 00e7  ld   $e7
              99e0 0018  ld   $18
              99e1 00a5  ld   $a5
              99e2 00ce  ld   $ce
              99e3 0065  ld   $65
              99e4 00da  ld   $da
              99e5 0020  ld   $20
              99e6 0008  ld   $08
              99e7 00e7  ld   $e7
              99e8 00a5  ld   $a5
              99e9 00cf  ld   $cf
              99ea 0065  ld   $65
              99eb 00db  ld   $db
              99ec 0070  ld   $70
              99ed 00dd  ld   $dd
              99ee 0095  ld   $95
              99ef 00a8  ld   $a8
              99f0 0060  ld   $60
              99f1 0020  ld   $20
              99f2 0015  ld   $15
              99f3 00e7  ld   $e7
              99f4 00a4  ld   $a4
              99f5 00ce  ld   $ce
              99f6 00f0  ld   $f0
              99f7 0005  ld   $05
              99f8 0088  ld   $88
              99f9 00a5  ld   $a5
              99fa 00cf  ld   $cf
              99fb fe00  bra  ac          ;+-----------------------------------+
              99fc fcfd  bra  $99fd       ;|                                   |
              99fd 1418  ld   $18,y       ;| Trampoline for page $9900 lookups |
              99fe e006  jmp  y,$06       ;|                                   |
              99ff c218  st   [$18]       ;+-----------------------------------+
              9a00 00f0  ld   $f0
              9a01 000c  ld   $0c
              9a02 0060  ld   $60
              9a03 00a5  ld   $a5
              9a04 0081  ld   $81
              9a05 0009  ld   $09
              9a06 0007  ld   $07
              9a07 00a8  ld   $a8
              9a08 00c8  ld   $c8
              9a09 00a9  ld   $a9
              9a0a 00a0  ld   $a0
              9a0b 0020  ld   $20
              9a0c 00c9  ld   $c9
              9a0d 00e3  ld   $e3
              9a0e 00c4  ld   $c4
              9a0f 0081  ld   $81
              9a10 00b0  ld   $b0
              9a11 00f7  ld   $f7
              9a12 0060  ld   $60
              9a13 0020  ld   $20
              9a14 00b1  ld   $b1
              9a15 00e7  ld   $e7
              9a16 0020  ld   $20
              9a17 0015  ld   $15
              9a18 00e7  ld   $e7
              9a19 00a5  ld   $a5
              9a1a 00cf  ld   $cf
              9a1b 0010  ld   $10
              9a1c 000a  ld   $0a
              9a1d 00a9  ld   $a9
              9a1e 00ad  ld   $ad
              9a1f 0020  ld   $20
              9a20 00c9  ld   $c9
              9a21 00e3  ld   $e3
              9a22 0020  ld   $20
              9a23 0072  ld   $72
              9a24 00e7  ld   $e7
              9a25 0050  ld   $50
              9a26 00ef  ld   $ef
              9a27 0088  ld   $88
              9a28 0084  ld   $84
              9a29 00d5  ld   $d5
              9a2a 0086  ld   $86
              9a2b 00cf  ld   $cf
              9a2c 00a6  ld   $a6
              9a2d 00ce  ld   $ce
              9a2e 0020  ld   $20
              9a2f 001b  ld   $1b
              9a30 00e5  ld   $e5
              9a31 00a6  ld   $a6
              9a32 00cf  ld   $cf
              9a33 0060  ld   $60
              9a34 0020  ld   $20
              9a35 0015  ld   $15
              9a36 00e7  ld   $e7
              9a37 00a5  ld   $a5
              9a38 00ce  ld   $ce
              9a39 0085  ld   $85
              9a3a 0076  ld   $76
              9a3b 00a5  ld   $a5
              9a3c 00cf  ld   $cf
              9a3d 0085  ld   $85
              9a3e 0077  ld   $77
              9a3f 0088  ld   $88
              9a40 0084  ld   $84
              9a41 0078  ld   $78
              9a42 00c8  ld   $c8
              9a43 00a9  ld   $a9
              9a44 000a  ld   $0a
              9a45 0085  ld   $85
              9a46 0074  ld   $74
              9a47 0084  ld   $84
              9a48 0075  ld   $75
              9a49 0060  ld   $60
              9a4a 0020  ld   $20
              9a4b 0015  ld   $15
              9a4c 00e7  ld   $e7
              9a4d 00a5  ld   $a5
              9a4e 00ce  ld   $ce
              9a4f 00a4  ld   $a4
              9a50 00cf  ld   $cf
              9a51 0010  ld   $10
              9a52 00e8  ld   $e8
              9a53 0000  ld   $00
              9a54 0000  ld   $00
              9a55 00f2  ld   $f2
              9a56 0020  ld   $20
              9a57 0015  ld   $15
              9a58 00e7  ld   $e7
              9a59 00b5  ld   $b5
              9a5a 0050  ld   $50
              9a5b 0085  ld   $85
              9a5c 00da  ld   $da
              9a5d 00b5  ld   $b5
              9a5e 0088  ld   $88
              9a5f 0085  ld   $85
              9a60 00db  ld   $db
              9a61 00a5  ld   $a5
              9a62 00ce  ld   $ce
              9a63 0091  ld   $91
              9a64 00da  ld   $da
              9a65 00c8  ld   $c8
              9a66 00a5  ld   $a5
              9a67 00cf  ld   $cf
              9a68 0091  ld   $91
              9a69 00da  ld   $da
              9a6a 00e8  ld   $e8
              9a6b 0060  ld   $60
              9a6c 0068  ld   $68
              9a6d 0068  ld   $68
              9a6e 0024  ld   $24
              9a6f 00d5  ld   $d5
              9a70 0010  ld   $10
              9a71 0005  ld   $05
              9a72 0020  ld   $20
              9a73 00cd  ld   $cd
              9a74 00e3  ld   $e3
              9a75 0046  ld   $46
              9a76 00d5  ld   $d5
              9a77 0060  ld   $60
              9a78 00a0  ld   $a0
              9a79 00ff  ld   $ff
              9a7a 0084  ld   $84
              9a7b 00d7  ld   $d7
              9a7c 0060  ld   $60
              9a7d 0020  ld   $20
              9a7e 00cd  ld   $cd
              9a7f 00ef  ld   $ef
              9a80 00f0  ld   $f0
              9a81 0007  ld   $07
              9a82 00a9  ld   $a9
              9a83 0025  ld   $25
              9a84 0085  ld   $85
              9a85 00d6  ld   $d6
              9a86 0088  ld   $88
              9a87 0084  ld   $84
              9a88 00d4  ld   $d4
              9a89 00e8  ld   $e8
              9a8a 0060  ld   $60
              9a8b 00a5  ld   $a5
              9a8c 00ca  ld   $ca
              9a8d 00a4  ld   $a4
              9a8e 00cb  ld   $cb
              9a8f 00d0  ld   $d0
              9a90 005a  ld   $5a
              9a91 00a0  ld   $a0
              9a92 0041  ld   $41
              9a93 00a5  ld   $a5
              9a94 0084  ld   $84
              9a95 00c9  ld   $c9
              9a96 0008  ld   $08
              9a97 00b0  ld   $b0
              9a98 005e  ld   $5e
              9a99 00a8  ld   $a8
              9a9a 00e6  ld   $e6
              9a9b 0084  ld   $84
              9a9c 00a5  ld   $a5
              9a9d 00de  ld   $de
              9a9e 0099  ld   $99
              9a9f 0000  ld   $00
              9aa0 0011  ld   $11
              9aa1 00a5  ld   $a5
              9aa2 00df  ld   $df
              9aa3 0099  ld   $99
              9aa4 0008  ld   $08
              9aa5 0011  ld   $11
              9aa6 00a5  ld   $a5
              9aa7 00dc  ld   $dc
              9aa8 0099  ld   $99
              9aa9 0010  ld   $10
              9aaa 0011  ld   $11
              9aab 00a5  ld   $a5
              9aac 00dd  ld   $dd
              9aad 0099  ld   $99
              9aae 0018  ld   $18
              9aaf 0011  ld   $11
              9ab0 0020  ld   $20
              9ab1 0015  ld   $15
              9ab2 00e7  ld   $e7
              9ab3 0020  ld   $20
              9ab4 006d  ld   $6d
              9ab5 00e5  ld   $e5
              9ab6 0090  ld   $90
              9ab7 0004  ld   $04
              9ab8 00a0  ld   $a0
              9ab9 0037  ld   $37
              9aba 00d0  ld   $d0
              9abb 003b  ld   $3b
              9abc 00a5  ld   $a5
              9abd 0044  ld   $44
              9abe 00a4  ld   $a4
              9abf 0045  ld   $45
              9ac0 0085  ld   $85
              9ac1 00dc  ld   $dc
              9ac2 0084  ld   $84
              9ac3 00dd  ld   $dd
              9ac4 002c  ld   $2c
              9ac5 0011  ld   $11
              9ac6 00d0  ld   $d0
              9ac7 0030  ld   $30
              9ac8 004f  ld   $4f
              9ac9 0018  ld   $18
              9aca 0069  ld   $69
              9acb 0003  ld   $03
              9acc 0090  ld   $90
              9acd 0001  ld   $01
              9ace 00c8  ld   $c8
              9acf 00a2  ld   $a2
              9ad0 00ff  ld   $ff
              9ad1 0086  ld   $86
              9ad2 00d9  ld   $d9
              9ad3 009a  ld   $9a
              9ad4 0085  ld   $85
              9ad5 00de  ld   $de
              9ad6 0084  ld   $84
              9ad7 00df  ld   $df
              9ad8 0020  ld   $20
              9ad9 0079  ld   $79
              9ada 00e6  ld   $e6
              9adb 0024  ld   $24
              9adc 00d9  ld   $d9
              9add 0010  ld   $10
              9ade 0049  ld   $49
              9adf 0018  ld   $18
              9ae0 00a0  ld   $a0
              9ae1 0000  ld   $00
              9ae2 00a5  ld   $a5
              9ae3 00dc  ld   $dc
              9ae4 0071  ld   $71
              9ae5 00dc  ld   $dc
              9ae6 00a4  ld   $a4
              9ae7 00dd  ld   $dd
              9ae8 0090  ld   $90
              9ae9 0001  ld   $01
              9aea 00c8  ld   $c8
              9aeb 00c5  ld   $c5
              9aec 004c  ld   $4c
              9aed 00d0  ld   $d0
              9aee 00d1  ld   $d1
              9aef 00c4  ld   $c4
              9af0 004d  ld   $4d
              9af1 00d0  ld   $d0
              9af2 00cd  ld   $cd
              9af3 00a0  ld   $a0
              9af4 0034  ld   $34
              9af5 0046  ld   $46
              9af6 00d9  ld   $d9
              9af7 004c  ld   $4c
              9af8 00e0  ld   $e0
              9af9 00e3  ld   $e3
              9afa 00a0  ld   $a0
              9afb fe00  bra  ac          ;+-----------------------------------+
              9afc fcfd  bra  $9afd       ;|                                   |
              9afd 1418  ld   $18,y       ;| Trampoline for page $9a00 lookups |
              9afe e006  jmp  y,$06       ;|                                   |
              9aff c218  st   [$18]       ;+-----------------------------------+
              9b00 004a  ld   $4a
              9b01 00a5  ld   $a5
              9b02 0084  ld   $84
              9b03 00f0  ld   $f0
              9b04 00f7  ld   $f7
              9b05 00c6  ld   $c6
              9b06 0084  ld   $84
              9b07 00a8  ld   $a8
              9b08 00b9  ld   $b9
              9b09 000f  ld   $0f
              9b0a 0011  ld   $11
              9b0b 0085  ld   $85
              9b0c 00dc  ld   $dc
              9b0d 00b9  ld   $b9
              9b0e 0017  ld   $17
              9b0f 0011  ld   $11
              9b10 0085  ld   $85
              9b11 00dd  ld   $dd
              9b12 00be  ld   $be
              9b13 0087  ld   $87
              9b14 0000  ld   $00
              9b15 00b9  ld   $b9
              9b16 0007  ld   $07
              9b17 0011  ld   $11
              9b18 00a8  ld   $a8
              9b19 008a  ld   $8a
              9b1a 004c  ld   $4c
              9b1b 007a  ld   $7a
              9b1c 00e8  ld   $e8
              9b1d 00a0  ld   $a0
              9b1e 0063  ld   $63
              9b1f 0020  ld   $20
              9b20 00c4  ld   $c4
              9b21 00e3  ld   $e3
              9b22 00a0  ld   $a0
              9b23 0001  ld   $01
              9b24 00b1  ld   $b1
              9b25 00dc  ld   $dc
              9b26 00aa  ld   $aa
              9b27 00c8  ld   $c8
              9b28 00b1  ld   $b1
              9b29 00dc  ld   $dc
              9b2a 0020  ld   $20
              9b2b 001b  ld   $1b
              9b2c 00e5  ld   $e5
              9b2d 004c  ld   $4c
              9b2e 00b3  ld   $b3
              9b2f 00e2  ld   $e2
              9b30 00c6  ld   $c6
              9b31 0083  ld   $83
              9b32 00a0  ld   $a0
              9b33 005b  ld   $5b
              9b34 00a5  ld   $a5
              9b35 0083  ld   $83
              9b36 00f0  ld   $f0
              9b37 00c4  ld   $c4
              9b38 00a8  ld   $a8
              9b39 00b5  ld   $b5
              9b3a 0050  ld   $50
              9b3b 00d9  ld   $d9
              9b3c 00ff  ld   $ff
              9b3d 0011  ld   $11
              9b3e 00d0  ld   $d0
              9b3f 00f0  ld   $f0
              9b40 00b5  ld   $b5
              9b41 0088  ld   $88
              9b42 00d9  ld   $d9
              9b43 0007  ld   $07
              9b44 0012  ld   $12
              9b45 00d0  ld   $d0
              9b46 00e9  ld   $e9
              9b47 00b9  ld   $b9
              9b48 000f  ld   $0f
              9b49 0012  ld   $12
              9b4a 0085  ld   $85
              9b4b 00da  ld   $da
              9b4c 00b9  ld   $b9
              9b4d 0017  ld   $17
              9b4e 0012  ld   $12
              9b4f 0085  ld   $85
              9b50 00db  ld   $db
              9b51 0020  ld   $20
              9b52 0015  ld   $15
              9b53 00e7  ld   $e7
              9b54 00ca  ld   $ca
              9b55 0020  ld   $20
              9b56 0093  ld   $93
              9b57 00e7  ld   $e7
              9b58 0020  ld   $20
              9b59 0001  ld   $01
              9b5a 00e9  ld   $e9
              9b5b 0000  ld   $00
              9b5c 0000  ld   $00
              9b5d 00e8  ld   $e8
              9b5e 00ca  ld   $ca
              9b5f 00a4  ld   $a4
              9b60 0083  ld   $83
              9b61 00b9  ld   $b9
              9b62 0047  ld   $47
              9b63 0012  ld   $12
              9b64 0095  ld   $95
              9b65 00a7  ld   $a7
              9b66 00b9  ld   $b9
              9b67 003f  ld   $3f
              9b68 0012  ld   $12
              9b69 00a0  ld   $a0
              9b6a 0000  ld   $00
              9b6b 0020  ld   $20
              9b6c 0008  ld   $08
              9b6d 00e7  ld   $e7
              9b6e 0020  ld   $20
              9b6f 0082  ld   $82
              9b70 00e7  ld   $e7
              9b71 0020  ld   $20
              9b72 0059  ld   $59
              9b73 00e7  ld   $e7
              9b74 0020  ld   $20
              9b75 0015  ld   $15
              9b76 00e7  ld   $e7
              9b77 00a4  ld   $a4
              9b78 0083  ld   $83
              9b79 00a5  ld   $a5
              9b7a 00ce  ld   $ce
              9b7b 00f0  ld   $f0
              9b7c 0005  ld   $05
              9b7d 0059  ld   $59
              9b7e 0017  ld   $17
              9b7f 0012  ld   $12
              9b80 0010  ld   $10
              9b81 0012  ld   $12
              9b82 00b9  ld   $b9
              9b83 001f  ld   $1f
              9b84 0012  ld   $12
              9b85 0085  ld   $85
              9b86 00dc  ld   $dc
              9b87 00b9  ld   $b9
              9b88 0027  ld   $27
              9b89 0012  ld   $12
              9b8a 0085  ld   $85
              9b8b 00dd  ld   $dd
              9b8c 00be  ld   $be
              9b8d 002f  ld   $2f
              9b8e 0012  ld   $12
              9b8f 00b9  ld   $b9
              9b90 0037  ld   $37
              9b91 0012  ld   $12
              9b92 00d0  ld   $d0
              9b93 0087  ld   $87
              9b94 00c6  ld   $c6
              9b95 0083  ld   $83
              9b96 0060  ld   $60
              9b97 00a0  ld   $a0
              9b98 0054  ld   $54
              9b99 00a5  ld   $a5
              9b9a 0083  ld   $83
              9b9b 00c9  ld   $c9
              9b9c 0008  ld   $08
              9b9d 00f0  ld   $f0
              9b9e 009a  ld   $9a
              9b9f 00e6  ld   $e6
              9ba0 0083  ld   $83
              9ba1 00a8  ld   $a8
              9ba2 00b5  ld   $b5
              9ba3 0050  ld   $50
              9ba4 0099  ld   $99
              9ba5 0000  ld   $00
              9ba6 0012  ld   $12
              9ba7 00b5  ld   $b5
              9ba8 0088  ld   $88
              9ba9 0099  ld   $99
              9baa 0008  ld   $08
              9bab 0012  ld   $12
              9bac 0060  ld   $60
              9bad 0020  ld   $20
              9bae 0015  ld   $15
              9baf 00e7  ld   $e7
              9bb0 00a4  ld   $a4
              9bb1 0083  ld   $83
              9bb2 00a5  ld   $a5
              9bb3 00ce  ld   $ce
              9bb4 0099  ld   $99
              9bb5 003f  ld   $3f
              9bb6 0012  ld   $12
              9bb7 00a5  ld   $a5
              9bb8 00cf  ld   $cf
              9bb9 0099  ld   $99
              9bba 0047  ld   $47
              9bbb 0012  ld   $12
              9bbc 00a9  ld   $a9
              9bbd 0001  ld   $01
              9bbe 0099  ld   $99
              9bbf 000f  ld   $0f
              9bc0 0012  ld   $12
              9bc1 00a9  ld   $a9
              9bc2 0000  ld   $00
              9bc3 0099  ld   $99
              9bc4 0017  ld   $17
              9bc5 0012  ld   $12
              9bc6 00a5  ld   $a5
              9bc7 00dc  ld   $dc
              9bc8 0099  ld   $99
              9bc9 001f  ld   $1f
              9bca 0012  ld   $12
              9bcb 00a5  ld   $a5
              9bcc 00dd  ld   $dd
              9bcd 0099  ld   $99
              9bce 0027  ld   $27
              9bcf 0012  ld   $12
              9bd0 00a5  ld   $a5
              9bd1 00de  ld   $de
              9bd2 0099  ld   $99
              9bd3 002f  ld   $2f
              9bd4 0012  ld   $12
              9bd5 00a5  ld   $a5
              9bd6 00df  ld   $df
              9bd7 0099  ld   $99
              9bd8 0037  ld   $37
              9bd9 0012  ld   $12
              9bda 0060  ld   $60
              9bdb 0020  ld   $20
              9bdc 0015  ld   $15
              9bdd 00e7  ld   $e7
              9bde 00a4  ld   $a4
              9bdf 0083  ld   $83
              9be0 00a5  ld   $a5
              9be1 00ce  ld   $ce
              9be2 0099  ld   $99
              9be3 000f  ld   $0f
              9be4 0012  ld   $12
              9be5 00a5  ld   $a5
              9be6 00cf  ld   $cf
              9be7 004c  ld   $4c
              9be8 0066  ld   $66
              9be9 00e9  ld   $e9
              9bea 0000  ld   $00
              9beb 0000  ld   $00
              9bec 0000  ld   $00
              * 14 times
              9bf8 00ab  ld   $ab
              9bf9 0003  ld   $03
              9bfa 0003  ld   $03
              9bfb fe00  bra  ac          ;+-----------------------------------+
              9bfc fcfd  bra  $9bfd       ;|                                   |
              9bfd 1418  ld   $18,y       ;| Trampoline for page $9b00 lookups |
              9bfe e006  jmp  y,$06       ;|                                   |
              9bff c218  st   [$18]       ;+-----------------------------------+
              9c00 0003  ld   $03
              9c01 0003  ld   $03
              9c02 0003  ld   $03
              * 12 times
              9c0c 003f  ld   $3f
              9c0d 003f  ld   $3f
              9c0e 00c0  ld   $c0
              9c0f 00c0  ld   $c0
              9c10 003c  ld   $3c
              9c11 003c  ld   $3c
              9c12 003c  ld   $3c
              * 7 times
              9c17 0030  ld   $30
              9c18 000f  ld   $0f
              9c19 00c0  ld   $c0
              9c1a 00cc  ld   $cc
              9c1b 00ff  ld   $ff
              9c1c 0055  ld   $55
              9c1d 0000  ld   $00
              9c1e 00ab  ld   $ab
              9c1f 00ab  ld   $ab
              9c20 0003  ld   $03
              9c21 0003  ld   $03
              9c22 00ff  ld   $ff
              9c23 00ff  ld   $ff
              9c24 0055  ld   $55
              9c25 00ff  ld   $ff
              9c26 00ff  ld   $ff
              9c27 0055  ld   $55
              9c28 00cf  ld   $cf
              9c29 00cf  ld   $cf
              9c2a 00cf  ld   $cf
              * 5 times
              9c2d 00ff  ld   $ff
              9c2e 0055  ld   $55
              9c2f 00c3  ld   $c3
              9c30 00c3  ld   $c3
              9c31 00c3  ld   $c3
              9c32 0055  ld   $55
              9c33 00f0  ld   $f0
              9c34 00f0  ld   $f0
              9c35 00cf  ld   $cf
              9c36 0056  ld   $56
              9c37 0056  ld   $56
              9c38 0056  ld   $56
              9c39 0055  ld   $55
              9c3a 00ff  ld   $ff
              9c3b 00ff  ld   $ff
              9c3c 0055  ld   $55
              9c3d 0003  ld   $03
              9c3e 0003  ld   $03
              9c3f 0003  ld   $03
              * 7 times
              9c44 00ff  ld   $ff
              9c45 00ff  ld   $ff
              9c46 00ff  ld   $ff
              9c47 0003  ld   $03
              9c48 0003  ld   $03
              9c49 0003  ld   $03
              * 16 times
              9c57 0000  ld   $00
              9c58 00ab  ld   $ab
              9c59 0003  ld   $03
              9c5a 0057  ld   $57
              9c5b 0003  ld   $03
              9c5c 0003  ld   $03
              9c5d 0003  ld   $03
              9c5e 0003  ld   $03
              9c5f 0007  ld   $07
              9c60 0003  ld   $03
              9c61 0003  ld   $03
              9c62 00ea  ld   $ea
              9c63 0000  ld   $00
              9c64 0000  ld   $00
              9c65 0003  ld   $03
              9c66 0003  ld   $03
              9c67 0003  ld   $03
              * 10 times
              9c6f 00aa  ld   $aa
              9c70 00ff  ld   $ff
              9c71 00ff  ld   $ff
              9c72 00ff  ld   $ff
              * 5 times
              9c75 0017  ld   $17
              9c76 00ff  ld   $ff
              9c77 00ff  ld   $ff
              9c78 0019  ld   $19
              9c79 005d  ld   $5d
              9c7a 0035  ld   $35
              9c7b 004b  ld   $4b
              9c7c 00f2  ld   $f2
              9c7d 00ec  ld   $ec
              9c7e 0087  ld   $87
              9c7f 006f  ld   $6f
              9c80 00ad  ld   $ad
              9c81 00b7  ld   $b7
              9c82 00e2  ld   $e2
              9c83 00f8  ld   $f8
              9c84 0054  ld   $54
              9c85 0080  ld   $80
              9c86 0096  ld   $96
              9c87 0085  ld   $85
              9c88 0082  ld   $82
              9c89 0022  ld   $22
              9c8a 0010  ld   $10
              9c8b 0033  ld   $33
              9c8c 004a  ld   $4a
              9c8d 0013  ld   $13
              9c8e 0006  ld   $06
              9c8f 000b  ld   $0b
              9c90 004a  ld   $4a
              9c91 0001  ld   $01
              9c92 0040  ld   $40
              9c93 0047  ld   $47
              9c94 007a  ld   $7a
              9c95 0000  ld   $00
              9c96 00ff  ld   $ff
              9c97 0023  ld   $23
              9c98 0009  ld   $09
              9c99 005b  ld   $5b
              9c9a 0016  ld   $16
              9c9b 00b6  ld   $b6
              9c9c 00cb  ld   $cb
              9c9d 00ff  ld   $ff
              9c9e 00ff  ld   $ff
              9c9f 00fb  ld   $fb
              9ca0 00ff  ld   $ff
              9ca1 00ff  ld   $ff
              9ca2 0024  ld   $24
              9ca3 00f6  ld   $f6
              9ca4 004e  ld   $4e
              9ca5 0059  ld   $59
              9ca6 0050  ld   $50
              9ca7 0000  ld   $00
              9ca8 00ff  ld   $ff
              9ca9 0023  ld   $23
              9caa 00a3  ld   $a3
              9cab 006f  ld   $6f
              9cac 0036  ld   $36
              9cad 0023  ld   $23
              9cae 00d7  ld   $d7
              9caf 001c  ld   $1c
              9cb0 0022  ld   $22
              9cb1 00c2  ld   $c2
              9cb2 00ae  ld   $ae
              9cb3 00ba  ld   $ba
              9cb4 0023  ld   $23
              9cb5 00ff  ld   $ff
              9cb6 00ff  ld   $ff
              9cb7 0021  ld   $21
              9cb8 0030  ld   $30
              9cb9 001e  ld   $1e
              9cba 0003  ld   $03
              9cbb 00c4  ld   $c4
              9cbc 0020  ld   $20
              9cbd 0000  ld   $00
              9cbe 00c1  ld   $c1
              9cbf 00ff  ld   $ff
              9cc0 00ff  ld   $ff
              9cc1 00ff  ld   $ff
              9cc2 00a0  ld   $a0
              9cc3 0030  ld   $30
              9cc4 001e  ld   $1e
              9cc5 00a4  ld   $a4
              9cc6 00d3  ld   $d3
              9cc7 00b6  ld   $b6
              9cc8 00bc  ld   $bc
              9cc9 00aa  ld   $aa
              9cca 003a  ld   $3a
              9ccb 0001  ld   $01
              9ccc 0050  ld   $50
              9ccd 007e  ld   $7e
              9cce 00d8  ld   $d8
              9ccf 00d8  ld   $d8
              9cd0 00a5  ld   $a5
              9cd1 003c  ld   $3c
              9cd2 00ff  ld   $ff
              9cd3 0016  ld   $16
              9cd4 005b  ld   $5b
              9cd5 0028  ld   $28
              9cd6 0003  ld   $03
              9cd7 00c4  ld   $c4
              9cd8 001d  ld   $1d
              9cd9 0000  ld   $00
              9cda 000c  ld   $0c
              9cdb 004e  ld   $4e
              9cdc 0000  ld   $00
              9cdd 003e  ld   $3e
              9cde 0000  ld   $00
              9cdf 00a6  ld   $a6
              9ce0 00b0  ld   $b0
              9ce1 0000  ld   $00
              9ce2 00bc  ld   $bc
              9ce3 00c6  ld   $c6
              9ce4 0057  ld   $57
              9ce5 008c  ld   $8c
              9ce6 0001  ld   $01
              9ce7 0027  ld   $27
              9ce8 00ff  ld   $ff
              9ce9 00ff  ld   $ff
              9cea 00ff  ld   $ff
              * 5 times
              9ced 00e8  ld   $e8
              9cee 00ff  ld   $ff
              9cef 00ff  ld   $ff
              9cf0 00e8  ld   $e8
              9cf1 00e0  ld   $e0
              9cf2 00e0  ld   $e0
              9cf3 00e0  ld   $e0
              9cf4 00ef  ld   $ef
              9cf5 00ef  ld   $ef
              9cf6 00e3  ld   $e3
              9cf7 00e3  ld   $e3
              9cf8 00e5  ld   $e5
              9cf9 00e5  ld   $e5
              9cfa 00e7  ld   $e7
              9cfb fe00  bra  ac          ;+-----------------------------------+
              9cfc fcfd  bra  $9cfd       ;|                                   |
              9cfd 1418  ld   $18,y       ;| Trampoline for page $9c00 lookups |
              9cfe e006  jmp  y,$06       ;|                                   |
              9cff c218  st   [$18]       ;+-----------------------------------+
              9d00 00e7  ld   $e7
              9d01 00ee  ld   $ee
              9d02 00ef  ld   $ef
              9d03 00ef  ld   $ef
              9d04 00e7  ld   $e7
              9d05 00e7  ld   $e7
              9d06 00e2  ld   $e2
              9d07 00ef  ld   $ef
              9d08 00e7  ld   $e7
              9d09 00e7  ld   $e7
              9d0a 00ec  ld   $ec
              9d0b 00ec  ld   $ec
              9d0c 00ec  ld   $ec
              9d0d 00e7  ld   $e7
              9d0e 00ec  ld   $ec
              9d0f 00ec  ld   $ec
              9d10 00ec  ld   $ec
              9d11 00e2  ld   $e2
              9d12 0000  ld   $00
              9d13 00ff  ld   $ff
              9d14 00e8  ld   $e8
              9d15 00e1  ld   $e1
              9d16 00e8  ld   $e8
              9d17 00e8  ld   $e8
              9d18 00ef  ld   $ef
              9d19 00eb  ld   $eb
              9d1a 00ff  ld   $ff
              9d1b 00ff  ld   $ff
              9d1c 00e0  ld   $e0
              9d1d 00ff  ld   $ff
              9d1e 00ff  ld   $ff
              9d1f 00ef  ld   $ef
              9d20 00ee  ld   $ee
              9d21 00ef  ld   $ef
              9d22 00e7  ld   $e7
              9d23 00e7  ld   $e7
              9d24 0000  ld   $00
              9d25 00ff  ld   $ff
              9d26 00e8  ld   $e8
              9d27 00e7  ld   $e7
              9d28 00e7  ld   $e7
              9d29 00e7  ld   $e7
              9d2a 00e8  ld   $e8
              9d2b 00e1  ld   $e1
              9d2c 00e2  ld   $e2
              9d2d 00ee  ld   $ee
              9d2e 00ee  ld   $ee
              9d2f 00ee  ld   $ee
              9d30 00ee  ld   $ee
              9d31 00e8  ld   $e8
              9d32 00ff  ld   $ff
              9d33 00ff  ld   $ff
              9d34 00e1  ld   $e1
              9d35 00e1  ld   $e1
              9d36 00ef  ld   $ef
              9d37 00ee  ld   $ee
              9d38 00e7  ld   $e7
              9d39 00e8  ld   $e8
              9d3a 00ee  ld   $ee
              9d3b 00e7  ld   $e7
              9d3c 00ff  ld   $ff
              9d3d 00ff  ld   $ff
              9d3e 00ff  ld   $ff
              9d3f 00ee  ld   $ee
              9d40 00e1  ld   $e1
              9d41 00ef  ld   $ef
              9d42 00e7  ld   $e7
              9d43 00e8  ld   $e8
              9d44 00ef  ld   $ef
              9d45 00ef  ld   $ef
              9d46 00eb  ld   $eb
              9d47 00e9  ld   $e9
              9d48 00e8  ld   $e8
              9d49 00e9  ld   $e9
              9d4a 00e9  ld   $e9
              9d4b 00e8  ld   $e8
              9d4c 00e8  ld   $e8
              9d4d 00e8  ld   $e8
              9d4e 00e8  ld   $e8
              9d4f 00ff  ld   $ff
              9d50 00e8  ld   $e8
              9d51 00e8  ld   $e8
              9d52 00e8  ld   $e8
              9d53 00ee  ld   $ee
              9d54 00e7  ld   $e7
              9d55 00e8  ld   $e8
              9d56 00ef  ld   $ef
              9d57 00ef  ld   $ef
              9d58 00ee  ld   $ee
              9d59 00ef  ld   $ef
              9d5a 00ee  ld   $ee
              9d5b 00ef  ld   $ef
              9d5c 00ee  ld   $ee
              9d5d 00ee  ld   $ee
              9d5e 00ef  ld   $ef
              9d5f 00ee  ld   $ee
              9d60 00ee  ld   $ee
              9d61 00ee  ld   $ee
              9d62 00e1  ld   $e1
              9d63 00e8  ld   $e8
              9d64 00e8  ld   $e8
              9d65 00ff  ld   $ff
              9d66 00ff  ld   $ff
              9d67 00ff  ld   $ff
              * 5 times
              9d6a 00eb  ld   $eb
              9d6b 0000  ld   $00
              9d6c 0000  ld   $00
              9d6d 00be  ld   $be
              9d6e 00b3  ld   $b3
              9d6f 00b2  ld   $b2
              9d70 00b7  ld   $b7
              9d71 00b6  ld   $b6
              9d72 0037  ld   $37
              9d73 00d4  ld   $d4
              9d74 00cf  ld   $cf
              9d75 00cf  ld   $cf
              9d76 00a0  ld   $a0
              9d77 00cc  ld   $cc
              9d78 00cf  ld   $cf
              9d79 00ce  ld   $ce
              9d7a 0047  ld   $47
              9d7b 00d3  ld   $d3
              9d7c 00d9  ld   $d9
              9d7d 00ce  ld   $ce
              9d7e 00d4  ld   $d4
              9d7f 00c1  ld   $c1
              9d80 0058  ld   $58
              9d81 00cd  ld   $cd
              9d82 00c5  ld   $c5
              9d83 00cd  ld   $cd
              9d84 00a0  ld   $a0
              9d85 00c6  ld   $c6
              9d86 00d5  ld   $d5
              9d87 00cc  ld   $cc
              9d88 004c  ld   $4c
              9d89 00d4  ld   $d4
              9d8a 00cf  ld   $cf
              9d8b 00cf  ld   $cf
              9d8c 00a0  ld   $a0
              9d8d 00cd  ld   $cd
              9d8e 00c1  ld   $c1
              9d8f 00ce  ld   $ce
              9d90 00d9  ld   $d9
              9d91 00a0  ld   $a0
              9d92 00d0  ld   $d0
              9d93 00c1  ld   $c1
              9d94 00d2  ld   $d2
              9d95 00c5  ld   $c5
              9d96 00ce  ld   $ce
              9d97 0053  ld   $53
              9d98 00d3  ld   $d3
              9d99 00d4  ld   $d4
              9d9a 00d2  ld   $d2
              9d9b 00c9  ld   $c9
              9d9c 00ce  ld   $ce
              9d9d 0047  ld   $47
              9d9e 00ce  ld   $ce
              9d9f 00cf  ld   $cf
              9da0 00a0  ld   $a0
              9da1 00c5  ld   $c5
              9da2 00ce  ld   $ce
              9da3 0044  ld   $44
              9da4 00c2  ld   $c2
              9da5 00c1  ld   $c1
              9da6 00c4  ld   $c4
              9da7 00a0  ld   $a0
              9da8 00c2  ld   $c2
              9da9 00d2  ld   $d2
              9daa 00c1  ld   $c1
              9dab 00ce  ld   $ce
              9dac 00c3  ld   $c3
              9dad 0048  ld   $48
              9dae 00be  ld   $be
              9daf 00b8  ld   $b8
              9db0 00a0  ld   $a0
              9db1 00c7  ld   $c7
              9db2 00cf  ld   $cf
              9db3 00d3  ld   $d3
              9db4 00d5  ld   $d5
              9db5 00c2  ld   $c2
              9db6 0053  ld   $53
              9db7 00c2  ld   $c2
              9db8 00c1  ld   $c1
              9db9 00c4  ld   $c4
              9dba 00a0  ld   $a0
              9dbb 00d2  ld   $d2
              9dbc 00c5  ld   $c5
              9dbd 00d4  ld   $d4
              9dbe 00d5  ld   $d5
              9dbf 00d2  ld   $d2
              9dc0 004e  ld   $4e
              9dc1 00be  ld   $be
              9dc2 00b8  ld   $b8
              9dc3 00a0  ld   $a0
              9dc4 00c6  ld   $c6
              9dc5 00cf  ld   $cf
              9dc6 00d2  ld   $d2
              9dc7 0053  ld   $53
              9dc8 00c2  ld   $c2
              9dc9 00c1  ld   $c1
              9dca 00c4  ld   $c4
              9dcb 00a0  ld   $a0
              9dcc 00ce  ld   $ce
              9dcd 00c5  ld   $c5
              9dce 00d8  ld   $d8
              9dcf 0054  ld   $54
              9dd0 00d3  ld   $d3
              9dd1 00d4  ld   $d4
              9dd2 00cf  ld   $cf
              9dd3 00d0  ld   $d0
              9dd4 00d0  ld   $d0
              9dd5 00c5  ld   $c5
              9dd6 00c4  ld   $c4
              9dd7 00a0  ld   $a0
              9dd8 00c1  ld   $c1
              9dd9 00d4  ld   $d4
              9dda 0020  ld   $20
              9ddb 00aa  ld   $aa
              9ddc 00aa  ld   $aa
              9ddd 00aa  ld   $aa
              9dde 0020  ld   $20
              9ddf 00a0  ld   $a0
              9de0 00c5  ld   $c5
              9de1 00d2  ld   $d2
              9de2 00d2  ld   $d2
              9de3 000d  ld   $0d
              9de4 00be  ld   $be
              9de5 00b2  ld   $b2
              9de6 00b5  ld   $b5
              9de7 0035  ld   $35
              9de8 00d2  ld   $d2
              9de9 00c1  ld   $c1
              9dea 00ce  ld   $ce
              9deb 00c7  ld   $c7
              9dec 0045  ld   $45
              9ded 00c4  ld   $c4
              9dee 00c9  ld   $c9
              9def 004d  ld   $4d
              9df0 00d3  ld   $d3
              9df1 00d4  ld   $d4
              9df2 00d2  ld   $d2
              9df3 00a0  ld   $a0
              9df4 00cf  ld   $cf
              9df5 00d6  ld   $d6
              9df6 00c6  ld   $c6
              9df7 004c  ld   $4c
              9df8 00dc  ld   $dc
              9df9 000d  ld   $0d
              9dfa 00d2  ld   $d2
              9dfb fe00  bra  ac          ;+-----------------------------------+
              9dfc fcfd  bra  $9dfd       ;|                                   |
              9dfd 1418  ld   $18,y       ;| Trampoline for page $9d00 lookups |
              9dfe e006  jmp  y,$06       ;|                                   |
              9dff c218  st   [$18]       ;+-----------------------------------+
              9e00 00c5  ld   $c5
              9e01 00d4  ld   $d4
              9e02 00d9  ld   $d9
              9e03 00d0  ld   $d0
              9e04 00c5  ld   $c5
              9e05 00a0  ld   $a0
              9e06 00cc  ld   $cc
              9e07 00c9  ld   $c9
              9e08 00ce  ld   $ce
              9e09 00c5  ld   $c5
              9e0a 008d  ld   $8d
              9e0b 003f  ld   $3f
              9e0c 0046  ld   $46
              9e0d 00d9  ld   $d9
              9e0e 0090  ld   $90
              9e0f 0003  ld   $03
              9e10 004c  ld   $4c
              9e11 00c3  ld   $c3
              9e12 00e8  ld   $e8
              9e13 00a6  ld   $a6
              9e14 00cf  ld   $cf
              9e15 009a  ld   $9a
              9e16 00a6  ld   $a6
              9e17 00ce  ld   $ce
              9e18 00a0  ld   $a0
              9e19 008d  ld   $8d
              9e1a 00d0  ld   $d0
              9e1b 0002  ld   $02
              9e1c 00a0  ld   $a0
              9e1d 0099  ld   $99
              9e1e 0020  ld   $20
              9e1f 00c4  ld   $c4
              9e20 00e3  ld   $e3
              9e21 0086  ld   $86
              9e22 00ce  ld   $ce
              9e23 00ba  ld   $ba
              9e24 0086  ld   $86
              9e25 00cf  ld   $cf
              9e26 00a0  ld   $a0
              9e27 00fe  ld   $fe
              9e28 0084  ld   $84
              9e29 00d9  ld   $d9
              9e2a 00c8  ld   $c8
              9e2b 0084  ld   $84
              9e2c 00c8  ld   $c8
              9e2d 0020  ld   $20
              9e2e 0099  ld   $99
              9e2f 00e2  ld   $e2
              9e30 0084  ld   $84
              9e31 00e9  ld   $e9
              9e32 00a2  ld   $a2
              9e33 0018  ld   $18
              9e34 00a9  ld   $a9
              9e35 0030  ld   $30
              9e36 0020  ld   $20
              9e37 0091  ld   $91
              9e38 00e4  ld   $e4
              9e39 00e6  ld   $e6
              9e3a 00d9  ld   $d9
              9e3b 00a6  ld   $a6
              9e3c 00ce  ld   $ce
              9e3d 00a4  ld   $a4
              9e3e 00c8  ld   $c8
              9e3f 000a  ld   $0a
              9e40 0085  ld   $85
              9e41 00ce  ld   $ce
              9e42 00c8  ld   $c8
              9e43 00b9  ld   $b9
              9e44 0000  ld   $00
              9e45 0002  ld   $02
              9e46 00c9  ld   $c9
              9e47 0074  ld   $74
              9e48 00f0  ld   $f0
              9e49 00d2  ld   $d2
              9e4a 0049  ld   $49
              9e4b 00b0  ld   $b0
              9e4c 00c9  ld   $c9
              9e4d 000a  ld   $0a
              9e4e 00b0  ld   $b0
              9e4f 00f0  ld   $f0
              9e50 00c8  ld   $c8
              9e51 00c8  ld   $c8
              9e52 0084  ld   $84
              9e53 00c8  ld   $c8
              9e54 00b9  ld   $b9
              9e55 0000  ld   $00
              9e56 0002  ld   $02
              9e57 0048  ld   $48
              9e58 00b9  ld   $b9
              9e59 00ff  ld   $ff
              9e5a 0001  ld   $01
              9e5b 00a0  ld   $a0
              9e5c 0000  ld   $00
              9e5d 0020  ld   $20
              9e5e 0008  ld   $08
              9e5f 00e7  ld   $e7
              9e60 0068  ld   $68
              9e61 0095  ld   $95
              9e62 00a8  ld   $a8
              9e63 00a5  ld   $a5
              9e64 00ce  ld   $ce
              9e65 00c9  ld   $c9
              9e66 00c7  ld   $c7
              9e67 00d0  ld   $d0
              9e68 0003  ld   $03
              9e69 0020  ld   $20
              9e6a 006f  ld   $6f
              9e6b 00e7  ld   $e7
              9e6c 004c  ld   $4c
              9e6d 0001  ld   $01
              9e6e 00e8  ld   $e8
              9e6f 00ff  ld   $ff
              9e70 00ff  ld   $ff
              9e71 00ff  ld   $ff
              9e72 00ec  ld   $ec
              9e73 0000  ld   $00
              9e74 0000  ld   $00
              9e75 0050  ld   $50
              9e76 0020  ld   $20
              9e77 0013  ld   $13
              9e78 00ec  ld   $ec
              9e79 00d0  ld   $d0
              9e7a 0015  ld   $15
              9e7b 0020  ld   $20
              9e7c 000b  ld   $0b
              9e7d 00ec  ld   $ec
              9e7e 00d0  ld   $d0
              9e7f 0010  ld   $10
              9e80 0020  ld   $20
              9e81 0082  ld   $82
              9e82 00e7  ld   $e7
              9e83 0020  ld   $20
              9e84 006f  ld   $6f
              9e85 00e7  ld   $e7
              9e86 0050  ld   $50
              9e87 0003  ld   $03
              9e88 0020  ld   $20
              9e89 0082  ld   $82
              9e8a 00e7  ld   $e7
              9e8b 0020  ld   $20
              9e8c 0059  ld   $59
              9e8d 00e7  ld   $e7
              9e8e 0056  ld   $56
              9e8f 0050  ld   $50
              9e90 004c  ld   $4c
              9e91 0036  ld   $36
              9e92 00e7  ld   $e7
              9e93 00ff  ld   $ff
              9e94 00ff  ld   $ff
              9e95 00c1  ld   $c1
              9e96 00ff  ld   $ff
              9e97 007f  ld   $7f
              9e98 00d1  ld   $d1
              9e99 00cc  ld   $cc
              9e9a 00c7  ld   $c7
              9e9b 00cf  ld   $cf
              9e9c 00ce  ld   $ce
              9e9d 00c5  ld   $c5
              9e9e 009a  ld   $9a
              9e9f 0098  ld   $98
              9ea0 008b  ld   $8b
              9ea1 0096  ld   $96
              9ea2 0095  ld   $95
              9ea3 0093  ld   $93
              9ea4 00bf  ld   $bf
              9ea5 00b2  ld   $b2
              9ea6 0032  ld   $32
              9ea7 002d  ld   $2d
              9ea8 002b  ld   $2b
              9ea9 00bc  ld   $bc
              9eaa 00b0  ld   $b0
              9eab 00ac  ld   $ac
              9eac 00be  ld   $be
              9ead 0035  ld   $35
              9eae 008e  ld   $8e
              9eaf 0061  ld   $61
              9eb0 00ff  ld   $ff
              9eb1 00ff  ld   $ff
              9eb2 00ff  ld   $ff
              9eb3 00dd  ld   $dd
              9eb4 00fb  ld   $fb
              9eb5 0020  ld   $20
              9eb6 00c9  ld   $c9
              9eb7 00ef  ld   $ef
              9eb8 0015  ld   $15
              9eb9 004f  ld   $4f
              9eba 0010  ld   $10
              9ebb 0005  ld   $05
              9ebc 0020  ld   $20
              9ebd 00c9  ld   $c9
              9ebe 00ef  ld   $ef
              9ebf 0035  ld   $35
              9ec0 004f  ld   $4f
              9ec1 0095  ld   $95
              9ec2 0050  ld   $50
              9ec3 0010  ld   $10
              9ec4 00cb  ld   $cb
              9ec5 004c  ld   $4c
              9ec6 00c9  ld   $c9
              9ec7 00ef  ld   $ef
              9ec8 0040  ld   $40
              9ec9 0060  ld   $60
              9eca 008d  ld   $8d
              9ecb 0060  ld   $60
              9ecc 008b  ld   $8b
              9ecd 0000  ld   $00
              9ece 007e  ld   $7e
              9ecf 008c  ld   $8c
              9ed0 0033  ld   $33
              9ed1 0000  ld   $00
              9ed2 0000  ld   $00
              9ed3 0060  ld   $60
              9ed4 0003  ld   $03
              9ed5 00bf  ld   $bf
              9ed6 0012  ld   $12
              9ed7 0000  ld   $00
              9ed8 0040  ld   $40
              9ed9 0089  ld   $89
              9eda 00c9  ld   $c9
              9edb 0047  ld   $47
              9edc 009d  ld   $9d
              9edd 0017  ld   $17
              9ede 0068  ld   $68
              9edf 009d  ld   $9d
              9ee0 000a  ld   $0a
              9ee1 0000  ld   $00
              9ee2 0040  ld   $40
              9ee3 0060  ld   $60
              9ee4 008d  ld   $8d
              9ee5 0060  ld   $60
              9ee6 008b  ld   $8b
              9ee7 0000  ld   $00
              9ee8 007e  ld   $7e
              9ee9 008c  ld   $8c
              9eea 003c  ld   $3c
              9eeb 0000  ld   $00
              9eec 0000  ld   $00
              9eed 0060  ld   $60
              9eee 0003  ld   $03
              9eef 00bf  ld   $bf
              9ef0 001b  ld   $1b
              9ef1 004b  ld   $4b
              9ef2 0067  ld   $67
              9ef3 00b4  ld   $b4
              9ef4 00a1  ld   $a1
              9ef5 0007  ld   $07
              9ef6 008c  ld   $8c
              9ef7 0007  ld   $07
              9ef8 00ae  ld   $ae
              9ef9 00a9  ld   $a9
              9efa 00ac  ld   $ac
              9efb fe00  bra  ac          ;+-----------------------------------+
              9efc fcfd  bra  $9efd       ;|                                   |
              9efd 1418  ld   $18,y       ;| Trampoline for page $9e00 lookups |
              9efe e006  jmp  y,$06       ;|                                   |
              9eff c218  st   [$18]       ;+-----------------------------------+
              9f00 00a8  ld   $a8
              9f01 0067  ld   $67
              9f02 008c  ld   $8c
              9f03 0007  ld   $07
              9f04 00b4  ld   $b4
              9f05 00af  ld   $af
              9f06 00ac  ld   $ac
              9f07 00b0  ld   $b0
              9f08 0067  ld   $67
              9f09 009d  ld   $9d
              9f0a 00b2  ld   $b2
              9f0b 00af  ld   $af
              9f0c 00ac  ld   $ac
              9f0d 00af  ld   $af
              9f0e 00a3  ld   $a3
              9f0f 0067  ld   $67
              9f10 008c  ld   $8c
              9f11 0007  ld   $07
              9f12 00a5  ld   $a5
              9f13 00ab  ld   $ab
              9f14 00af  ld   $af
              9f15 00b0  ld   $b0
              9f16 00f4  ld   $f4
              9f17 00ae  ld   $ae
              9f18 00a9  ld   $a9
              9f19 00b2  ld   $b2
              9f1a 00b0  ld   $b0
              9f1b 007f  ld   $7f
              9f1c 000e  ld   $0e
              9f1d 0027  ld   $27
              9f1e 00b4  ld   $b4
              9f1f 00ae  ld   $ae
              9f20 00a9  ld   $a9
              9f21 00b2  ld   $b2
              9f22 00b0  ld   $b0
              9f23 007f  ld   $7f
              9f24 000e  ld   $0e
              9f25 0028  ld   $28
              9f26 00b4  ld   $b4
              9f27 00ae  ld   $ae
              9f28 00a9  ld   $a9
              9f29 00b2  ld   $b2
              9f2a 00b0  ld   $b0
              9f2b 0064  ld   $64
              9f2c 0007  ld   $07
              9f2d 00a6  ld   $a6
              9f2e 00a9  ld   $a9
              9f2f 0067  ld   $67
              9f30 00af  ld   $af
              9f31 00b4  ld   $b4
              9f32 00af  ld   $af
              9f33 00a7  ld   $a7
              9f34 0078  ld   $78
              9f35 00b4  ld   $b4
              9f36 00a5  ld   $a5
              9f37 00ac  ld   $ac
              9f38 0078  ld   $78
              9f39 007f  ld   $7f
              9f3a 0002  ld   $02
              9f3b 00ad  ld   $ad
              9f3c 00a5  ld   $a5
              9f3d 00b2  ld   $b2
              9f3e 0067  ld   $67
              9f3f 00a2  ld   $a2
              9f40 00b5  ld   $b5
              9f41 00b3  ld   $b3
              9f42 00af  ld   $af
              9f43 00a7  ld   $a7
              9f44 00ee  ld   $ee
              9f45 00b2  ld   $b2
              9f46 00b5  ld   $b5
              9f47 00b4  ld   $b4
              9f48 00a5  ld   $a5
              9f49 00b2  ld   $b2
              9f4a 007e  ld   $7e
              9f4b 008c  ld   $8c
              9f4c 0039  ld   $39
              9f4d 00b4  ld   $b4
              9f4e 00b8  ld   $b8
              9f4f 00a5  ld   $a5
              9f50 00ae  ld   $ae
              9f51 0067  ld   $67
              9f52 00b0  ld   $b0
              9f53 00a5  ld   $a5
              9f54 00b4  ld   $b4
              9f55 00b3  ld   $b3
              9f56 0027  ld   $27
              9f57 00af  ld   $af
              9f58 00b4  ld   $b4
              9f59 0007  ld   $07
              9f5a 009d  ld   $9d
              9f5b 0019  ld   $19
              9f5c 00b2  ld   $b2
              9f5d 00af  ld   $af
              9f5e 00a6  ld   $a6
              9f5f 007f  ld   $7f
              9f60 0005  ld   $05
              9f61 0037  ld   $37
              9f62 00b4  ld   $b4
              9f63 00b5  ld   $b5
              9f64 00b0  ld   $b0
              9f65 00ae  ld   $ae
              9f66 00a9  ld   $a9
              9f67 007f  ld   $7f
              9f68 0005  ld   $05
              9f69 0028  ld   $28
              9f6a 00b4  ld   $b4
              9f6b 00b5  ld   $b5
              9f6c 00b0  ld   $b0
              9f6d 00ae  ld   $ae
              9f6e 00a9  ld   $a9
              9f6f 007f  ld   $7f
              9f70 0005  ld   $05
              9f71 002a  ld   $2a
              9f72 00b4  ld   $b4
              9f73 00b5  ld   $b5
              9f74 00b0  ld   $b0
              9f75 00ae  ld   $ae
              9f76 00a9  ld   $a9
              9f77 00e4  ld   $e4
              9f78 00ae  ld   $ae
              9f79 00a5  ld   $a5
              9f7a 00ed  ld   $ed
              9f7b 0000  ld   $00
              9f7c 0000  ld   $00
              9f7d 0000  ld   $00
              9f7e 00ff  ld   $ff
              9f7f 00ff  ld   $ff
              9f80 0047  ld   $47
              9f81 00a2  ld   $a2
              9f82 00a1  ld   $a1
              9f83 00b4  ld   $b4
              9f84 007f  ld   $7f
              9f85 000d  ld   $0d
              9f86 0030  ld   $30
              9f87 00ad  ld   $ad
              9f88 00a9  ld   $a9
              9f89 00a4  ld   $a4
              9f8a 007f  ld   $7f
              9f8b 000d  ld   $0d
              9f8c 0023  ld   $23
              9f8d 00ad  ld   $ad
              9f8e 00a9  ld   $a9
              9f8f 00a4  ld   $a4
              9f90 0067  ld   $67
              9f91 00ac  ld   $ac
              9f92 00ac  ld   $ac
              9f93 00a1  ld   $a1
              9f94 00a3  ld   $a3
              9f95 0000  ld   $00
              9f96 0040  ld   $40
              9f97 0080  ld   $80
              9f98 00c0  ld   $c0
              9f99 00c1  ld   $c1
              9f9a 0080  ld   $80
              9f9b 0000  ld   $00
              9f9c 0047  ld   $47
              9f9d 008c  ld   $8c
              9f9e 0068  ld   $68
              9f9f 008c  ld   $8c
              9fa0 00db  ld   $db
              9fa1 0067  ld   $67
              9fa2 009b  ld   $9b
              9fa3 0068  ld   $68
              9fa4 009b  ld   $9b
              9fa5 0050  ld   $50
              9fa6 008c  ld   $8c
              9fa7 0063  ld   $63
              9fa8 008c  ld   $8c
              9fa9 007f  ld   $7f
              9faa 0001  ld   $01
              9fab 0051  ld   $51
              9fac 0007  ld   $07
              9fad 0088  ld   $88
              9fae 0029  ld   $29
              9faf 0084  ld   $84
              9fb0 0080  ld   $80
              9fb1 00c4  ld   $c4
              9fb2 0080  ld   $80
              9fb3 0057  ld   $57
              9fb4 0071  ld   $71
              9fb5 0007  ld   $07
              9fb6 0088  ld   $88
              9fb7 0014  ld   $14
              9fb8 00ed  ld   $ed
              9fb9 00a5  ld   $a5
              9fba 00ad  ld   $ad
              9fbb 00af  ld   $af
              9fbc 00ac  ld   $ac
              9fbd 00ed  ld   $ed
              9fbe 00a5  ld   $a5
              9fbf 00ad  ld   $ad
              9fc0 00a9  ld   $a9
              9fc1 00a8  ld   $a8
              9fc2 00f2  ld   $f2
              9fc3 00af  ld   $af
              9fc4 00ac  ld   $ac
              9fc5 00af  ld   $af
              9fc6 00a3  ld   $a3
              9fc7 0071  ld   $71
              9fc8 0008  ld   $08
              9fc9 0088  ld   $88
              9fca 00ae  ld   $ae
              9fcb 00a5  ld   $a5
              9fcc 00ac  ld   $ac
              9fcd 0068  ld   $68
              9fce 0083  ld   $83
              9fcf 0008  ld   $08
              9fd0 0068  ld   $68
              9fd1 009d  ld   $9d
              9fd2 0008  ld   $08
              9fd3 0071  ld   $71
              9fd4 0007  ld   $07
              9fd5 0088  ld   $88
              9fd6 0060  ld   $60
              9fd7 0076  ld   $76
              9fd8 00b4  ld   $b4
              9fd9 00af  ld   $af
              9fda 00ae  ld   $ae
              9fdb 0076  ld   $76
              9fdc 008d  ld   $8d
              9fdd 0076  ld   $76
              9fde 008b  ld   $8b
              9fdf 0051  ld   $51
              9fe0 0007  ld   $07
              9fe1 0088  ld   $88
              9fe2 0019  ld   $19
              9fe3 00b8  ld   $b8
              9fe4 00a4  ld   $a4
              9fe5 00ae  ld   $ae
              9fe6 00b2  ld   $b2
              9fe7 00f2  ld   $f2
              9fe8 00b3  ld   $b3
              9fe9 00b5  ld   $b5
              9fea 00f3  ld   $f3
              9feb 00a2  ld   $a2
              9fec 00a1  ld   $a1
              9fed 00ee  ld   $ee
              9fee 00a7  ld   $a7
              9fef 00b3  ld   $b3
              9ff0 00e4  ld   $e4
              9ff1 00ae  ld   $ae
              9ff2 00b2  ld   $b2
              9ff3 00eb  ld   $eb
              9ff4 00a5  ld   $a5
              9ff5 00a5  ld   $a5
              9ff6 00b0  ld   $b0
              9ff7 0051  ld   $51
              9ff8 0007  ld   $07
              9ff9 0088  ld   $88
              9ffa 0039  ld   $39
              9ffb fe00  bra  ac          ;+-----------------------------------+
              9ffc fcfd  bra  $9ffd       ;|                                   |
              9ffd 1418  ld   $18,y       ;| Trampoline for page $9f00 lookups |
              9ffe e006  jmp  y,$06       ;|                                   |
              9fff c218  st   [$18]       ;+-----------------------------------+
              a000 0081  ld   $81
              a001 00c1  ld   $c1
              a002 004f  ld   $4f
              a003 007f  ld   $7f
              a004 000f  ld   $0f
              a005 002f  ld   $2f
              a006 0000  ld   $00
              a007 0051  ld   $51
              a008 0006  ld   $06
              a009 0088  ld   $88
              a00a 0029  ld   $29
              a00b 00c2  ld   $c2
              a00c 000c  ld   $0c
              a00d 0082  ld   $82
              a00e 0057  ld   $57
              a00f 008c  ld   $8c
              a010 006a  ld   $6a
              a011 008c  ld   $8c
              a012 0042  ld   $42
              a013 00ae  ld   $ae
              a014 00a5  ld   $a5
              a015 00a8  ld   $a8
              a016 00b4  ld   $b4
              a017 0060  ld   $60
              a018 00ae  ld   $ae
              a019 00a5  ld   $a5
              a01a 00a8  ld   $a8
              a01b 00b4  ld   $b4
              a01c 004f  ld   $4f
              a01d 007e  ld   $7e
              a01e 001e  ld   $1e
              a01f 0035  ld   $35
              a020 008c  ld   $8c
              a021 0027  ld   $27
              a022 0051  ld   $51
              a023 0007  ld   $07
              a024 0088  ld   $88
              a025 0009  ld   $09
              a026 008b  ld   $8b
              a027 00fe  ld   $fe
              a028 00e4  ld   $e4
              a029 00af  ld   $af
              a02a 00ad  ld   $ad
              a02b 00f2  ld   $f2
              a02c 00af  ld   $af
              a02d 00e4  ld   $e4
              a02e 00ae  ld   $ae
              a02f 00a1  ld   $a1
              a030 00dc  ld   $dc
              a031 00de  ld   $de
              a032 009c  ld   $9c
              a033 00dd  ld   $dd
              a034 009c  ld   $9c
              a035 00de  ld   $de
              a036 00dd  ld   $dd
              a037 009e  ld   $9e
              a038 00c3  ld   $c3
              a039 00dd  ld   $dd
              a03a 00cf  ld   $cf
              a03b 00ca  ld   $ca
              a03c 00cd  ld   $cd
              a03d 00cb  ld   $cb
              a03e 0000  ld   $00
              a03f 0047  ld   $47
              a040 009d  ld   $9d
              a041 00ad  ld   $ad
              a042 00a5  ld   $a5
              a043 00ad  ld   $ad
              a044 00af  ld   $af
              a045 00ac  ld   $ac
              a046 0076  ld   $76
              a047 009d  ld   $9d
              a048 00ad  ld   $ad
              a049 00a5  ld   $a5
              a04a 00ad  ld   $ad
              a04b 00a9  ld   $a9
              a04c 00a8  ld   $a8
              a04d 00e6  ld   $e6
              a04e 00a6  ld   $a6
              a04f 00af  ld   $af
              a050 0060  ld   $60
              a051 008c  ld   $8c
              a052 0020  ld   $20
              a053 00af  ld   $af
              a054 00b4  ld   $b4
              a055 00b5  ld   $b5
              a056 00a1  ld   $a1
              a057 00f2  ld   $f2
              a058 00ac  ld   $ac
              a059 00a3  ld   $a3
              a05a 00f2  ld   $f2
              a05b 00a3  ld   $a3
              a05c 00b3  ld   $b3
              a05d 0060  ld   $60
              a05e 008c  ld   $8c
              a05f 0020  ld   $20
              a060 00ac  ld   $ac
              a061 00a5  ld   $a5
              a062 00a4  ld   $a4
              a063 00ee  ld   $ee
              a064 00b5  ld   $b5
              a065 00b2  ld   $b2
              a066 0060  ld   $60
              a067 00ae  ld   $ae
              a068 00b5  ld   $b5
              a069 00b2  ld   $b2
              a06a 00f4  ld   $f4
              a06b 00b3  ld   $b3
              a06c 00a9  ld   $a9
              a06d 00ac  ld   $ac
              a06e 0060  ld   $60
              a06f 008c  ld   $8c
              a070 0020  ld   $20
              a071 00b4  ld   $b4
              a072 00b3  ld   $b3
              a073 00a9  ld   $a9
              a074 00ac  ld   $ac
              a075 007a  ld   $7a
              a076 007e  ld   $7e
              a077 009a  ld   $9a
              a078 0022  ld   $22
              a079 0020  ld   $20
              a07a 0000  ld   $00
              a07b 0060  ld   $60
              a07c 0003  ld   $03
              a07d 00bf  ld   $bf
              a07e 0060  ld   $60
              a07f 0003  ld   $03
              a080 00bf  ld   $bf
              a081 001f  ld   $1f
              a082 00ee  ld   $ee
              a083 0000  ld   $00
              a084 0000  ld   $00
              a085 0020  ld   $20
              a086 00b1  ld   $b1
              a087 00e7  ld   $e7
              a088 00e8  ld   $e8
              a089 00e8  ld   $e8
              a08a 00b5  ld   $b5
              a08b 004f  ld   $4f
              a08c 0085  ld   $85
              a08d 00da  ld   $da
              a08e 00b5  ld   $b5
              a08f 0087  ld   $87
              a090 0085  ld   $85
              a091 00db  ld   $db
              a092 00b4  ld   $b4
              a093 004e  ld   $4e
              a094 0098  ld   $98
              a095 00d5  ld   $d5
              a096 0086  ld   $86
              a097 00b0  ld   $b0
              a098 0009  ld   $09
              a099 00b1  ld   $b1
              a09a 00da  ld   $da
              a09b 0020  ld   $20
              a09c 00c9  ld   $c9
              a09d 00e3  ld   $e3
              a09e 00c8  ld   $c8
              a09f 004c  ld   $4c
              a0a0 000f  ld   $0f
              a0a1 00ee  ld   $ee
              a0a2 00a9  ld   $a9
              a0a3 00ff  ld   $ff
              a0a4 0085  ld   $85
              a0a5 00d5  ld   $d5
              a0a6 0060  ld   $60
              a0a7 00e8  ld   $e8
              a0a8 00a9  ld   $a9
              a0a9 0000  ld   $00
              a0aa 0095  ld   $95
              a0ab 0088  ld   $88
              a0ac 0095  ld   $95
              a0ad 00a8  ld   $a8
              a0ae 00b5  ld   $b5
              a0af 0087  ld   $87
              a0b0 0038  ld   $38
              a0b1 00f5  ld   $f5
              a0b2 004f  ld   $4f
              a0b3 0095  ld   $95
              a0b4 0050  ld   $50
              a0b5 004c  ld   $4c
              a0b6 0023  ld   $23
              a0b7 00e8  ld   $e8
              a0b8 00ff  ld   $ff
              a0b9 0020  ld   $20
              a0ba 0015  ld   $15
              a0bb 00e7  ld   $e7
              a0bc 00a5  ld   $a5
              a0bd 00cf  ld   $cf
              a0be 00d0  ld   $d0
              a0bf 0028  ld   $28
              a0c0 00a5  ld   $a5
              a0c1 00ce  ld   $ce
              a0c2 0060  ld   $60
              a0c3 0020  ld   $20
              a0c4 0034  ld   $34
              a0c5 00ee  ld   $ee
              a0c6 00a4  ld   $a4
              a0c7 00c8  ld   $c8
              a0c8 00c9  ld   $c9
              a0c9 0030  ld   $30
              a0ca 00b0  ld   $b0
              a0cb 0021  ld   $21
              a0cc 00c0  ld   $c0
              a0cd 0028  ld   $28
              a0ce 00b0  ld   $b0
              a0cf 001d  ld   $1d
              a0d0 0060  ld   $60
              a0d1 00ea  ld   $ea
              a0d2 00ea  ld   $ea
              a0d3 0020  ld   $20
              a0d4 0034  ld   $34
              a0d5 00ee  ld   $ee
              a0d6 0060  ld   $60
              a0d7 00ea  ld   $ea
              a0d8 008a  ld   $8a
              a0d9 00a2  ld   $a2
              a0da 0001  ld   $01
              a0db 00b4  ld   $b4
              a0dc 00ce  ld   $ce
              a0dd 0094  ld   $94
              a0de 004c  ld   $4c
              a0df 00b4  ld   $b4
              a0e0 0048  ld   $48
              a0e1 0094  ld   $94
              a0e2 00ca  ld   $ca
              a0e3 00ca  ld   $ca
              a0e4 00f0  ld   $f0
              a0e5 00f5  ld   $f5
              a0e6 00aa  ld   $aa
              a0e7 0060  ld   $60
              a0e8 00a0  ld   $a0
              a0e9 0077  ld   $77
              a0ea 004c  ld   $4c
              a0eb 00e0  ld   $e0
              a0ec 00e3  ld   $e3
              a0ed 00a0  ld   $a0
              a0ee 007b  ld   $7b
              a0ef 00d0  ld   $d0
              a0f0 00f9  ld   $f9
              a0f1 0020  ld   $20
              a0f2 0054  ld   $54
              a0f3 00e2  ld   $e2
              a0f4 00a5  ld   $a5
              a0f5 00da  ld   $da
              a0f6 00d0  ld   $d0
              a0f7 0007  ld   $07
              a0f8 00a5  ld   $a5
              a0f9 00db  ld   $db
              a0fa 00d0  ld   $d0
              a0fb fe00  bra  ac          ;+-----------------------------------+
              a0fc fcfd  bra  $a0fd       ;|                                   |
              a0fd 1418  ld   $18,y       ;| Trampoline for page $a000 lookups |
              a0fe e006  jmp  y,$06       ;|                                   |
              a0ff c218  st   [$18]       ;+-----------------------------------+
              a100 0003  ld   $03
              a101 004c  ld   $4c
              a102 007e  ld   $7e
              a103 00e7  ld   $e7
              a104 0006  ld   $06
              a105 00ce  ld   $ce
              a106 0026  ld   $26
              a107 00cf  ld   $cf
              a108 0026  ld   $26
              a109 0046  ld   $46
              a10a 0026  ld   $26
              a10b 0047  ld   $47
              a10c 00a5  ld   $a5
              a10d 0046  ld   $46
              a10e 00c5  ld   $c5
              a10f 00da  ld   $da
              a110 00a5  ld   $a5
              a111 0047  ld   $47
              a112 00e5  ld   $e5
              a113 00db  ld   $db
              a114 0090  ld   $90
              a115 000a  ld   $0a
              a116 0085  ld   $85
              a117 0047  ld   $47
              a118 00a5  ld   $a5
              a119 0046  ld   $46
              a11a 00e5  ld   $e5
              a11b 00da  ld   $da
              a11c 0085  ld   $85
              a11d 0046  ld   $46
              a11e 00e6  ld   $e6
              a11f 00ce  ld   $ce
              a120 0088  ld   $88
              a121 00d0  ld   $d0
              a122 00e1  ld   $e1
              a123 0060  ld   $60
              a124 00ff  ld   $ff
              a125 00ff  ld   $ff
              a126 00ff  ld   $ff
              * 6 times
              a12a 0020  ld   $20
              a12b 0015  ld   $15
              a12c 00e7  ld   $e7
              a12d 006c  ld   $6c
              a12e 00ce  ld   $ce
              a12f 0000  ld   $00
              a130 00a5  ld   $a5
              a131 004c  ld   $4c
              a132 00d0  ld   $d0
              a133 0002  ld   $02
              a134 00c6  ld   $c6
              a135 004d  ld   $4d
              a136 00c6  ld   $c6
              a137 004c  ld   $4c
              a138 00a5  ld   $a5
              a139 0048  ld   $48
              a13a 00d0  ld   $d0
              a13b 0002  ld   $02
              a13c 00c6  ld   $c6
              a13d 0049  ld   $49
              a13e 00c6  ld   $c6
              a13f 0048  ld   $48
              a140 00a0  ld   $a0
              a141 0000  ld   $00
              a142 00b1  ld   $b1
              a143 004c  ld   $4c
              a144 0091  ld   $91
              a145 0048  ld   $48
              a146 00a5  ld   $a5
              a147 00ca  ld   $ca
              a148 00c5  ld   $c5
              a149 004c  ld   $4c
              a14a 00a5  ld   $a5
              a14b 00cb  ld   $cb
              a14c 00e5  ld   $e5
              a14d 004d  ld   $4d
              a14e 0090  ld   $90
              a14f 00e0  ld   $e0
              a150 004c  ld   $4c
              a151 0053  ld   $53
              a152 00ee  ld   $ee
              a153 00c9  ld   $c9
              a154 0028  ld   $28
              a155 00b0  ld   $b0
              a156 009b  ld   $9b
              a157 00a8  ld   $a8
              a158 00a5  ld   $a5
              a159 00c8  ld   $c8
              a15a 0060  ld   $60
              a15b 00ea  ld   $ea
              a15c 00ea  ld   $ea
              a15d 0098  ld   $98
              a15e 00aa  ld   $aa
              a15f 00a0  ld   $a0
              a160 006e  ld   $6e
              a161 0020  ld   $20
              a162 00c4  ld   $c4
              a163 00e3  ld   $e3
              a164 008a  ld   $8a
              a165 00a8  ld   $a8
              a166 0020  ld   $20
              a167 00c4  ld   $c4
              a168 00e3  ld   $e3
              a169 00a0  ld   $a0
              a16a 0072  ld   $72
              a16b 004c  ld   $4c
              a16c 00c4  ld   $c4
              a16d 00e3  ld   $e3
              a16e 0020  ld   $20
              a16f 0015  ld   $15
              a170 00e7  ld   $e7
              a171 0006  ld   $06
              a172 00ce  ld   $ce
              a173 0026  ld   $26
              a174 00cf  ld   $cf
              a175 0030  ld   $30
              a176 00fa  ld   $fa
              a177 00b0  ld   $b0
              a178 00dc  ld   $dc
              a179 00d0  ld   $d0
              a17a 0004  ld   $04
              a17b 00c5  ld   $c5
              a17c 00ce  ld   $ce
              a17d 00b0  ld   $b0
              a17e 00d6  ld   $d6
              a17f 0060  ld   $60
              a180 0020  ld   $20
              a181 0015  ld   $15
              a182 00e7  ld   $e7
              a183 00b1  ld   $b1
              a184 00ce  ld   $ce
              a185 0094  ld   $94
              a186 00a7  ld   $a7
              a187 004c  ld   $4c
              a188 0008  ld   $08
              a189 00e7  ld   $e7
              a18a 00ef  ld   $ef
              a18b 0000  ld   $00
              a18c 0000  ld   $00
              a18d 0020  ld   $20
              a18e 0034  ld   $34
              a18f 00ee  ld   $ee
              a190 00a5  ld   $a5
              a191 00ce  ld   $ce
              a192 0048  ld   $48
              a193 0020  ld   $20
              a194 0015  ld   $15
              a195 00e7  ld   $e7
              a196 0068  ld   $68
              a197 0091  ld   $91
              a198 00ce  ld   $ce
              a199 0060  ld   $60
              a19a 00ff  ld   $ff
              a19b 00ff  ld   $ff
              a19c 00ff  ld   $ff
              a19d 0020  ld   $20
              a19e 006c  ld   $6c
              a19f 00ee  ld   $ee
              a1a0 00a5  ld   $a5
              a1a1 00ce  ld   $ce
              a1a2 0085  ld   $85
              a1a3 0046  ld   $46
              a1a4 00a5  ld   $a5
              a1a5 00cf  ld   $cf
              a1a6 0085  ld   $85
              a1a7 0047  ld   $47
              a1a8 004c  ld   $4c
              a1a9 0044  ld   $44
              a1aa 00e2  ld   $e2
              a1ab 0020  ld   $20
              a1ac 00e4  ld   $e4
              a1ad 00ee  ld   $ee
              a1ae 004c  ld   $4c
              a1af 0034  ld   $34
              a1b0 00e1  ld   $e1
              a1b1 0020  ld   $20
              a1b2 00e4  ld   $e4
              a1b3 00ee  ld   $ee
              a1b4 00b4  ld   $b4
              a1b5 0088  ld   $88
              a1b6 00b5  ld   $b5
              a1b7 0050  ld   $50
              a1b8 0069  ld   $69
              a1b9 00fe  ld   $fe
              a1ba 00b0  ld   $b0
              a1bb 0001  ld   $01
              a1bc 0088  ld   $88
              a1bd 0085  ld   $85
              a1be 00da  ld   $da
              a1bf 0084  ld   $84
              a1c0 00db  ld   $db
              a1c1 0018  ld   $18
              a1c2 0065  ld   $65
              a1c3 00ce  ld   $ce
              a1c4 0095  ld   $95
              a1c5 0050  ld   $50
              a1c6 0098  ld   $98
              a1c7 0065  ld   $65
              a1c8 00cf  ld   $cf
              a1c9 0095  ld   $95
              a1ca 0088  ld   $88
              a1cb 00a0  ld   $a0
              a1cc 0000  ld   $00
              a1cd 00b5  ld   $b5
              a1ce 0050  ld   $50
              a1cf 00d1  ld   $d1
              a1d0 00da  ld   $da
              a1d1 00c8  ld   $c8
              a1d2 00b5  ld   $b5
              a1d3 0088  ld   $88
              a1d4 00f1  ld   $f1
              a1d5 00da  ld   $da
              a1d6 00b0  ld   $b0
              a1d7 0080  ld   $80
              a1d8 004c  ld   $4c
              a1d9 0023  ld   $23
              a1da 00e8  ld   $e8
              a1db 0020  ld   $20
              a1dc 0015  ld   $15
              a1dd 00e7  ld   $e7
              a1de 00a5  ld   $a5
              a1df 004e  ld   $4e
              a1e0 0020  ld   $20
              a1e1 0008  ld   $08
              a1e2 00e7  ld   $e7
              a1e3 00a5  ld   $a5
              a1e4 004f  ld   $4f
              a1e5 00d0  ld   $d0
              a1e6 0004  ld   $04
              a1e7 00c5  ld   $c5
              a1e8 004e  ld   $4e
              a1e9 0069  ld   $69
              a1ea 0000  ld   $00
              a1eb 0029  ld   $29
              a1ec 007f  ld   $7f
              a1ed 0085  ld   $85
              a1ee 004f  ld   $4f
              a1ef 0095  ld   $95
              a1f0 00a8  ld   $a8
              a1f1 00a0  ld   $a0
              a1f2 0011  ld   $11
              a1f3 00a5  ld   $a5
              a1f4 004f  ld   $4f
              a1f5 000a  ld   $0a
              a1f6 0018  ld   $18
              a1f7 0069  ld   $69
              a1f8 0040  ld   $40
              a1f9 000a  ld   $0a
              a1fa 0026  ld   $26
              a1fb fe00  bra  ac          ;+-----------------------------------+
              a1fc fcfd  bra  $a1fd       ;|                                   |
              a1fd 1418  ld   $18,y       ;| Trampoline for page $a100 lookups |
              a1fe e006  jmp  y,$06       ;|                                   |
              a1ff c218  st   [$18]       ;+-----------------------------------+
              a200 004e  ld   $4e
              a201 0026  ld   $26
              a202 004f  ld   $4f
              a203 0088  ld   $88
              a204 00d0  ld   $d0
              a205 00f2  ld   $f2
              a206 00a5  ld   $a5
              a207 00ce  ld   $ce
              a208 0020  ld   $20
              a209 0008  ld   $08
              a20a 00e7  ld   $e7
              a20b 00a5  ld   $a5
              a20c 00cf  ld   $cf
              a20d 0095  ld   $95
              a20e 00a8  ld   $a8
              a20f 004c  ld   $4c
              a210 007a  ld   $7a
              a211 00e2  ld   $e2
              a212 0020  ld   $20
              a213 0015  ld   $15
              a214 00e7  ld   $e7
              a215 00a4  ld   $a4
              a216 00ce  ld   $ce
              a217 00c4  ld   $c4
              a218 004c  ld   $4c
              a219 00a5  ld   $a5
              a21a 00cf  ld   $cf
              a21b 00e5  ld   $e5
              a21c 004d  ld   $4d
              a21d 0090  ld   $90
              a21e 001f  ld   $1f
              a21f 0084  ld   $84
              a220 0048  ld   $48
              a221 00a5  ld   $a5
              a222 00cf  ld   $cf
              a223 0085  ld   $85
              a224 0049  ld   $49
              a225 004c  ld   $4c
              a226 00b6  ld   $b6
              a227 00ee  ld   $ee
              a228 0020  ld   $20
              a229 0015  ld   $15
              a22a 00e7  ld   $e7
              a22b 00a4  ld   $a4
              a22c 00ce  ld   $ce
              a22d 00c4  ld   $c4
              a22e 00ca  ld   $ca
              a22f 00a5  ld   $a5
              a230 00cf  ld   $cf
              a231 00e5  ld   $e5
              a232 00cb  ld   $cb
              a233 00b0  ld   $b0
              a234 0009  ld   $09
              a235 0084  ld   $84
              a236 004a  ld   $4a
              a237 00a5  ld   $a5
              a238 00cf  ld   $cf
              a239 0085  ld   $85
              a23a 004b  ld   $4b
              a23b 004c  ld   $4c
              a23c 00b7  ld   $b7
              a23d 00e5  ld   $e5
              a23e 004c  ld   $4c
              a23f 00cb  ld   $cb
              a240 00ee  ld   $ee
              a241 00ea  ld   $ea
              a242 00ea  ld   $ea
              a243 00ea  ld   $ea
              a244 00ea  ld   $ea
              a245 0020  ld   $20
              a246 00c9  ld   $c9
              a247 00ef  ld   $ef
              a248 0020  ld   $20
              a249 0071  ld   $71
              a24a 00e1  ld   $e1
              a24b 004c  ld   $4c
              a24c 00bf  ld   $bf
              a24d 00ef  ld   $ef
              a24e 0020  ld   $20
              a24f 0003  ld   $03
              a250 00ee  ld   $ee
              a251 00a9  ld   $a9
              a252 00ff  ld   $ff
              a253 0085  ld   $85
              a254 00c8  ld   $c8
              a255 00a9  ld   $a9
              a256 0074  ld   $74
              a257 008d  ld   $8d
              a258 0000  ld   $00
              a259 0002  ld   $02
              a25a 0060  ld   $60
              a25b 0020  ld   $20
              a25c 0036  ld   $36
              a25d 00e7  ld   $e7
              a25e 00e8  ld   $e8
              a25f 0020  ld   $20
              a260 0036  ld   $36
              a261 00e7  ld   $e7
              a262 00b5  ld   $b5
              a263 0050  ld   $50
              a264 0060  ld   $60
              a265 00a9  ld   $a9
              a266 0000  ld   $00
              a267 0085  ld   $85
              a268 004a  ld   $4a
              a269 0085  ld   $85
              a26a 004c  ld   $4c
              a26b 00a9  ld   $a9
              a26c 0008  ld   $08
              a26d 0085  ld   $85
              a26e 004b  ld   $4b
              a26f 00a9  ld   $a9
              a270 0010  ld   $10
              a271 0085  ld   $85
              a272 004d  ld   $4d
              a273 004c  ld   $4c
              a274 00ad  ld   $ad
              a275 00e5  ld   $e5
              a276 00d5  ld   $d5
              a277 0088  ld   $88
              a278 00d0  ld   $d0
              a279 0001  ld   $01
              a27a 0018  ld   $18
              a27b 004c  ld   $4c
              a27c 0002  ld   $02
              a27d 00e1  ld   $e1
              a27e 0020  ld   $20
              a27f 00b7  ld   $b7
              a280 00e5  ld   $e5
              a281 004c  ld   $4c
              a282 0036  ld   $36
              a283 00e8  ld   $e8
              a284 0020  ld   $20
              a285 00b7  ld   $b7
              a286 00e5  ld   $e5
              a287 004c  ld   $4c
              a288 005b  ld   $5b
              a289 00e8  ld   $e8
              a28a 00e0  ld   $e0
              a28b 0080  ld   $80
              a28c 00d0  ld   $d0
              a28d 0001  ld   $01
              a28e 0088  ld   $88
              a28f 004c  ld   $4c
              a290 000c  ld   $0c
              a291 00e0  ld   $e0
              a292 00ff  ld   $ff
              a293 0000  ld   $00
              a294 0000  ld   $00
              a295 00d8  ld   $d8
              a296 0058  ld   $58
              a297 00a0  ld   $a0
              a298 007f  ld   $7f
              a299 008c  ld   $8c
              a29a 0012  ld   $12
              a29b 00d0  ld   $d0
              a29c 00a9  ld   $a9
              a29d 00a7  ld   $a7
              a29e 008d  ld   $8d
              a29f 0011  ld   $11
              a2a0 00d0  ld   $d0
              a2a1 008d  ld   $8d
              a2a2 0013  ld   $13
              a2a3 00d0  ld   $d0
              a2a4 00c9  ld   $c9
              a2a5 00df  ld   $df
              a2a6 00f0  ld   $f0
              a2a7 0013  ld   $13
              a2a8 00c9  ld   $c9
              a2a9 009b  ld   $9b
              a2aa 00f0  ld   $f0
              a2ab 0003  ld   $03
              a2ac 00c8  ld   $c8
              a2ad 0010  ld   $10
              a2ae 000f  ld   $0f
              a2af 00a9  ld   $a9
              a2b0 00dc  ld   $dc
              a2b1 0020  ld   $20
              a2b2 00ef  ld   $ef
              a2b3 00ff  ld   $ff
              a2b4 00a9  ld   $a9
              a2b5 008d  ld   $8d
              a2b6 0020  ld   $20
              a2b7 00ef  ld   $ef
              a2b8 00ff  ld   $ff
              a2b9 00a0  ld   $a0
              a2ba 0001  ld   $01
              a2bb 0088  ld   $88
              a2bc 0030  ld   $30
              a2bd 00f6  ld   $f6
              a2be 00ad  ld   $ad
              a2bf 0011  ld   $11
              a2c0 00d0  ld   $d0
              a2c1 0010  ld   $10
              a2c2 00fb  ld   $fb
              a2c3 00ad  ld   $ad
              a2c4 0010  ld   $10
              a2c5 00d0  ld   $d0
              a2c6 0099  ld   $99
              a2c7 0000  ld   $00
              a2c8 0002  ld   $02
              a2c9 0020  ld   $20
              a2ca 00ef  ld   $ef
              a2cb 00ff  ld   $ff
              a2cc 00c9  ld   $c9
              a2cd 008d  ld   $8d
              a2ce 00d0  ld   $d0
              a2cf 00d4  ld   $d4
              a2d0 00a0  ld   $a0
              a2d1 00ff  ld   $ff
              a2d2 00a9  ld   $a9
              a2d3 0000  ld   $00
              a2d4 00aa  ld   $aa
              a2d5 000a  ld   $0a
              a2d6 0085  ld   $85
              a2d7 003b  ld   $3b
              a2d8 00c8  ld   $c8
              a2d9 00b9  ld   $b9
              a2da 0000  ld   $00
              a2db 0002  ld   $02
              a2dc 00c9  ld   $c9
              a2dd 008d  ld   $8d
              a2de 00f0  ld   $f0
              a2df 00d4  ld   $d4
              a2e0 00c9  ld   $c9
              a2e1 00ae  ld   $ae
              a2e2 0090  ld   $90
              a2e3 00f4  ld   $f4
              a2e4 00f0  ld   $f0
              a2e5 00f0  ld   $f0
              a2e6 00c9  ld   $c9
              a2e7 00ba  ld   $ba
              a2e8 00f0  ld   $f0
              a2e9 00eb  ld   $eb
              a2ea 00c9  ld   $c9
              a2eb 00d2  ld   $d2
              a2ec 00f0  ld   $f0
              a2ed 003b  ld   $3b
              a2ee 0086  ld   $86
              a2ef 0038  ld   $38
              a2f0 0086  ld   $86
              a2f1 0039  ld   $39
              a2f2 0084  ld   $84
              a2f3 003a  ld   $3a
              a2f4 00b9  ld   $b9
              a2f5 0000  ld   $00
              a2f6 0002  ld   $02
              a2f7 0049  ld   $49
              a2f8 00b0  ld   $b0
              a2f9 00c9  ld   $c9
              a2fa 000a  ld   $0a
              a2fb fe00  bra  ac          ;+-----------------------------------+
              a2fc fcfd  bra  $a2fd       ;|                                   |
              a2fd 1418  ld   $18,y       ;| Trampoline for page $a200 lookups |
              a2fe e006  jmp  y,$06       ;|                                   |
              a2ff c218  st   [$18]       ;+-----------------------------------+
              a300 0090  ld   $90
              a301 0006  ld   $06
              a302 0069  ld   $69
              a303 0088  ld   $88
              a304 00c9  ld   $c9
              a305 00fa  ld   $fa
              a306 0090  ld   $90
              a307 0011  ld   $11
              a308 000a  ld   $0a
              a309 000a  ld   $0a
              a30a 000a  ld   $0a
              a30b 000a  ld   $0a
              a30c 00a2  ld   $a2
              a30d 0004  ld   $04
              a30e 000a  ld   $0a
              a30f 0026  ld   $26
              a310 0038  ld   $38
              a311 0026  ld   $26
              a312 0039  ld   $39
              a313 00ca  ld   $ca
              a314 00d0  ld   $d0
              a315 00f8  ld   $f8
              a316 00c8  ld   $c8
              a317 00d0  ld   $d0
              a318 00e0  ld   $e0
              a319 00c4  ld   $c4
              a31a 003a  ld   $3a
              a31b 00f0  ld   $f0
              a31c 0097  ld   $97
              a31d 0024  ld   $24
              a31e 003b  ld   $3b
              a31f 0050  ld   $50
              a320 0010  ld   $10
              a321 00a5  ld   $a5
              a322 0038  ld   $38
              a323 0081  ld   $81
              a324 0036  ld   $36
              a325 00e6  ld   $e6
              a326 0036  ld   $36
              a327 00d0  ld   $d0
              a328 00b5  ld   $b5
              a329 00e6  ld   $e6
              a32a 0037  ld   $37
              a32b 004c  ld   $4c
              a32c 0044  ld   $44
              a32d 00ff  ld   $ff
              a32e 006c  ld   $6c
              a32f 0034  ld   $34
              a330 0000  ld   $00
              a331 0030  ld   $30
              a332 002b  ld   $2b
              a333 00a2  ld   $a2
              a334 0002  ld   $02
              a335 00b5  ld   $b5
              a336 0037  ld   $37
              a337 0095  ld   $95
              a338 0035  ld   $35
              a339 0095  ld   $95
              a33a 0033  ld   $33
              a33b 00ca  ld   $ca
              a33c 00d0  ld   $d0
              a33d 00f7  ld   $f7
              a33e 00d0  ld   $d0
              a33f 0014  ld   $14
              a340 00a9  ld   $a9
              a341 008d  ld   $8d
              a342 0020  ld   $20
              a343 00ef  ld   $ef
              a344 00ff  ld   $ff
              a345 00a5  ld   $a5
              a346 0035  ld   $35
              a347 0020  ld   $20
              a348 00dc  ld   $dc
              a349 00ff  ld   $ff
              a34a 00a5  ld   $a5
              a34b 0034  ld   $34
              a34c 0020  ld   $20
              a34d 00dc  ld   $dc
              a34e 00ff  ld   $ff
              a34f 00a9  ld   $a9
              a350 00ba  ld   $ba
              a351 0020  ld   $20
              a352 00ef  ld   $ef
              a353 00ff  ld   $ff
              a354 00a9  ld   $a9
              a355 00a0  ld   $a0
              a356 0020  ld   $20
              a357 00ef  ld   $ef
              a358 00ff  ld   $ff
              a359 00a1  ld   $a1
              a35a 0034  ld   $34
              a35b 0020  ld   $20
              a35c 00dc  ld   $dc
              a35d 00ff  ld   $ff
              a35e 0086  ld   $86
              a35f 003b  ld   $3b
              a360 00a5  ld   $a5
              a361 0034  ld   $34
              a362 00c5  ld   $c5
              a363 0038  ld   $38
              a364 00a5  ld   $a5
              a365 0035  ld   $35
              a366 00e5  ld   $e5
              a367 0039  ld   $39
              a368 00b0  ld   $b0
              a369 00c1  ld   $c1
              a36a 00e6  ld   $e6
              a36b 0034  ld   $34
              a36c 00d0  ld   $d0
              a36d 0002  ld   $02
              a36e 00e6  ld   $e6
              a36f 0035  ld   $35
              a370 00a5  ld   $a5
              a371 0034  ld   $34
              a372 0029  ld   $29
              a373 0007  ld   $07
              a374 0010  ld   $10
              a375 00c8  ld   $c8
              a376 0048  ld   $48
              a377 004a  ld   $4a
              a378 004a  ld   $4a
              a379 004a  ld   $4a
              a37a 004a  ld   $4a
              a37b 0020  ld   $20
              a37c 00e5  ld   $e5
              a37d 00ff  ld   $ff
              a37e 0068  ld   $68
              a37f 0029  ld   $29
              a380 000f  ld   $0f
              a381 0009  ld   $09
              a382 00b0  ld   $b0
              a383 00c9  ld   $c9
              a384 00ba  ld   $ba
              a385 0090  ld   $90
              a386 0002  ld   $02
              a387 0069  ld   $69
              a388 0006  ld   $06
              a389 008d  ld   $8d
              a38a 0012  ld   $12
              a38b 00d0  ld   $d0
              a38c 002c  ld   $2c
              a38d 0012  ld   $12
              a38e 00d0  ld   $d0
              a38f 00d0  ld   $d0
              a390 00fb  ld   $fb
              a391 0060  ld   $60
              a392 0000  ld   $00
              a393 0000  ld   $00
              a394 0000  ld   $00
              * 5 times
              a397 00ff  ld   $ff
              a398 00db  ld   $db
              a399 005e  ld   $5e
              a39a 0000  ld   $00
              a39b 0000  ld   $00         ;End of Apps/Apple-1/Apple-1_v2.gt1, size 7559
                                          ;+-----------------------------------+
                                          ;| Apps/MSBASIC/MSBASIC_v1.gt1       |
                                          ;+-----------------------------------+
              a39c dc41  st   $41,[y,x++] ;'A'
              a39d dc70  st   $70,[y,x++] ;'p'
              a39e dc70  st   $70,[y,x++] ;'p'
              a39f dc6c  st   $6c,[y,x++] ;'l'
              a3a0 dc65  st   $65,[y,x++] ;'e'
              a3a1 dc31  st   $31,[y,x++] ;'1'
              a3a2 dc00  st   $00,[y,x++] ;'\x00'
              a3a3 dc00  st   $00,[y,x++] ;'\x00'
              a3a4 0015  ld   $15
              a3a5 c218  st   [$18]
              a3a6 0086  ld   $86
              a3a7 14e0  ld   $e0,y
              a3a8 e02e  jmp  y,$2e
              a3a9 c219  st   [$19]
MSBASIC:      a3aa 0002  ld   $02
              a3ab 0000  ld   $00
              a3ac 0012  ld   $12
              a3ad 001a  ld   $1a
              a3ae 0021  ld   $21
              a3af 00e6  ld   $e6
              a3b0 0038  ld   $38
              a3b1 0035  ld   $35
              a3b2 0053  ld   $53
              a3b3 000b  ld   $0b
              a3b4 0021  ld   $21
              a3b5 000e  ld   $0e
              a3b6 00f3  ld   $f3
              a3b7 0017  ld   $17
              a3b8 0090  ld   $90
              a3b9 0005  ld   $05
              a3ba 0011  ld   $11
              a3bb 0000  ld   $00
              a3bc 0024  ld   $24
              a3bd 00cf  ld   $cf
              a3be 0018  ld   $18
              a3bf 0002  ld   $02
              a3c0 0018  ld   $18
              a3c1 00e8  ld   $e8
              a3c2 0027  ld   $27
              a3c3 0009  ld   $09
              a3c4 003e  ld   $3e
              a3c5 0008  ld   $08
              a3c6 0090  ld   $90
              a3c7 000d  ld   $0d
              a3c8 00e6  ld   $e6
              a3c9 0009  ld   $09
              a3ca 0051  ld   $51
              a3cb 000c  ld   $0c
              a3cc 00c5  ld   $c5
              a3cd 0010  ld   $10
              a3ce 007f  ld   $7f
              a3cf 000c  ld   $0c
              a3d0 0093  ld   $93
              a3d1 000a  ld   $0a
              a3d2 0093  ld   $93
              a3d3 0009  ld   $09
              a3d4 006b  ld   $6b
              a3d5 0009  ld   $09
              a3d6 0016  ld   $16
              a3d7 000a  ld   $0a
              a3d8 0016  ld   $16
              a3d9 0009  ld   $09
              a3da 0076  ld   $76
              a3db 0009  ld   $09
              a3dc 00c0  ld   $c0
              a3dd 0009  ld   $09
              a3de 0029  ld   $29
              a3df 000a  ld   $0a
              a3e0 0025  ld   $25
              a3e1 0009  ld   $09
              a3e2 0039  ld   $39
              a3e3 000a  ld   $0a
              a3e4 0071  ld   $71
              a3e5 0018  ld   $18
              a3e6 00ff  ld   $ff
              a3e7 0031  ld   $31
              a3e8 00ff  ld   $ff
              a3e9 002f  ld   $2f
              a3ea 006d  ld   $6d
              a3eb 000f  ld   $0f
              a3ec 00ee  ld   $ee
              a3ed 0013  ld   $13
              a3ee 0068  ld   $68
              a3ef 0018  ld   $18
              a3f0 0078  ld   $78
              a3f1 000b  ld   $0b
              a3f2 0051  ld   $51
              a3f3 0009  ld   $09
              a3f4 009b  ld   $9b
              a3f5 0007  ld   $07
              a3f6 005d  ld   $5d
              a3f7 0007  ld   $07
              a3f8 003f  ld   $3f
              a3f9 000c  ld   $0c
              a3fa 0041  ld   $41
              a3fb fe00  bra  ac          ;+-----------------------------------+
              a3fc fcfd  bra  $a3fd       ;|                                   |
              a3fd 1418  ld   $18,y       ;| Trampoline for page $a300 lookups |
              a3fe e006  jmp  y,$06       ;|                                   |
              a3ff c218  st   [$18]       ;+-----------------------------------+
              a400 0007  ld   $07
              a401 00b1  ld   $b1
              a402 001c  ld   $1c
              a403 0044  ld   $44
              a404 001d  ld   $1d
              a405 00d0  ld   $d0
              a406 001c  ld   $1c
              a407 0038  ld   $38
              a408 0000  ld   $00
              a409 00b8  ld   $b8
              a40a 0013  ld   $13
              a40b 00d9  ld   $d9
              a40c 0013  ld   $13
              a40d 00ca  ld   $ca
              a40e 001f  ld   $1f
              a40f 00eb  ld   $eb
              a410 0020  ld   $20
              a411 0062  ld   $62
              a412 001a  ld   $1a
              a413 0046  ld   $46
              a414 0020  ld   $20
              a415 0040  ld   $40
              a416 0021  ld   $21
              a417 0047  ld   $47
              a418 0021  ld   $21
              a419 0090  ld   $90
              a41a 0021  ld   $21
              a41b 00fe  ld   $fe
              a41c 0021  ld   $21
              a41d 004a  ld   $4a
              a41e 0018  ld   $18
              a41f 00b8  ld   $b8
              a420 0017  ld   $17
              a421 00a1  ld   $a1
              a422 0014  ld   $14
              a423 00e9  ld   $e9
              a424 0017  ld   $17
              a425 00c7  ld   $c7
              a426 0017  ld   $17
              a427 0028  ld   $28
              a428 0017  ld   $17
              a429 003c  ld   $3c
              a42a 0017  ld   $17
              a42b 0068  ld   $68
              a42c 0017  ld   $17
              a42d 0073  ld   $73
              a42e 0017  ld   $17
              a42f 0079  ld   $79
              a430 00e1  ld   $e1
              a431 0018  ld   $18
              a432 0079  ld   $79
              a433 0097  ld   $97
              a434 0018  ld   $18
              a435 007b  ld   $7b
              a436 00a2  ld   $a2
              a437 001a  ld   $1a
              a438 007b  ld   $7b
              a439 0089  ld   $89
              a43a 001b  ld   $1b
              a43b 007f  ld   $7f
              a43c 00d3  ld   $d3
              a43d 001f  ld   $1f
              a43e 0050  ld   $50
              a43f 002d  ld   $2d
              a440 0010  ld   $10
              a441 0046  ld   $46
              a442 002a  ld   $2a
              a443 0010  ld   $10
              a444 007d  ld   $7d
              a445 000c  ld   $0c
              a446 0020  ld   $20
              a447 005a  ld   $5a
              a448 0039  ld   $39
              a449 000f  ld   $0f
              a44a 0064  ld   $64
              a44b 005a  ld   $5a
              a44c 0010  ld   $10
              a44d 0045  ld   $45
              a44e 004e  ld   $4e
              a44f 00c4  ld   $c4
              a450 0046  ld   $46
              a451 004f  ld   $4f
              a452 00d2  ld   $d2
              a453 004e  ld   $4e
              a454 0045  ld   $45
              a455 0058  ld   $58
              a456 00d4  ld   $d4
              a457 0044  ld   $44
              a458 0041  ld   $41
              a459 0054  ld   $54
              a45a 00c1  ld   $c1
              a45b 0049  ld   $49
              a45c 004e  ld   $4e
              a45d 0050  ld   $50
              a45e 0055  ld   $55
              a45f 00d4  ld   $d4
              a460 0044  ld   $44
              a461 0049  ld   $49
              a462 00cd  ld   $cd
              a463 0052  ld   $52
              a464 0045  ld   $45
              a465 0041  ld   $41
              a466 00c4  ld   $c4
              a467 004c  ld   $4c
              a468 0045  ld   $45
              a469 00d4  ld   $d4
              a46a 0047  ld   $47
              a46b 004f  ld   $4f
              a46c 0054  ld   $54
              a46d 00cf  ld   $cf
              a46e 0052  ld   $52
              a46f 0055  ld   $55
              a470 00ce  ld   $ce
              a471 0049  ld   $49
              a472 00c6  ld   $c6
              a473 0052  ld   $52
              a474 0045  ld   $45
              a475 0053  ld   $53
              a476 0054  ld   $54
              a477 004f  ld   $4f
              a478 0052  ld   $52
              a479 00c5  ld   $c5
              a47a 0047  ld   $47
              a47b 004f  ld   $4f
              a47c 0053  ld   $53
              a47d 0055  ld   $55
              a47e 00c2  ld   $c2
              a47f 0052  ld   $52
              a480 0045  ld   $45
              a481 0054  ld   $54
              a482 0055  ld   $55
              a483 0052  ld   $52
              a484 00ce  ld   $ce
              a485 0052  ld   $52
              a486 0045  ld   $45
              a487 00cd  ld   $cd
              a488 0053  ld   $53
              a489 0054  ld   $54
              a48a 004f  ld   $4f
              a48b 00d0  ld   $d0
              a48c 004f  ld   $4f
              a48d 00ce  ld   $ce
              a48e 0057  ld   $57
              a48f 0041  ld   $41
              a490 0049  ld   $49
              a491 00d4  ld   $d4
              a492 004c  ld   $4c
              a493 004f  ld   $4f
              a494 0041  ld   $41
              a495 00c4  ld   $c4
              a496 0053  ld   $53
              a497 0041  ld   $41
              a498 0056  ld   $56
              a499 00c5  ld   $c5
              a49a 0056  ld   $56
              a49b 0045  ld   $45
              a49c 0052  ld   $52
              a49d 0049  ld   $49
              a49e 0046  ld   $46
              a49f 00d9  ld   $d9
              a4a0 0044  ld   $44
              a4a1 0045  ld   $45
              a4a2 00c6  ld   $c6
              a4a3 0050  ld   $50
              a4a4 004f  ld   $4f
              a4a5 004b  ld   $4b
              a4a6 00c5  ld   $c5
              a4a7 0050  ld   $50
              a4a8 0052  ld   $52
              a4a9 0049  ld   $49
              a4aa 004e  ld   $4e
              a4ab 00d4  ld   $d4
              a4ac 0043  ld   $43
              a4ad 004f  ld   $4f
              a4ae 004e  ld   $4e
              a4af 0003  ld   $03
              a4b0 0000  ld   $00
              a4b1 0000  ld   $00
              a4b2 00d4  ld   $d4
              a4b3 004c  ld   $4c
              a4b4 0049  ld   $49
              a4b5 0053  ld   $53
              a4b6 00d4  ld   $d4
              a4b7 0043  ld   $43
              a4b8 004c  ld   $4c
              a4b9 00d2  ld   $d2
              a4ba 0047  ld   $47
              a4bb 0045  ld   $45
              a4bc 00d4  ld   $d4
              a4bd 004e  ld   $4e
              a4be 0045  ld   $45
              a4bf 00d7  ld   $d7
              a4c0 0054  ld   $54
              a4c1 0041  ld   $41
              a4c2 0042  ld   $42
              a4c3 00a8  ld   $a8
              a4c4 0054  ld   $54
              a4c5 00cf  ld   $cf
              a4c6 0046  ld   $46
              a4c7 00ce  ld   $ce
              a4c8 0053  ld   $53
              a4c9 0050  ld   $50
              a4ca 0043  ld   $43
              a4cb 00a8  ld   $a8
              a4cc 0054  ld   $54
              a4cd 0048  ld   $48
              a4ce 0045  ld   $45
              a4cf 00ce  ld   $ce
              a4d0 004e  ld   $4e
              a4d1 004f  ld   $4f
              a4d2 00d4  ld   $d4
              a4d3 0053  ld   $53
              a4d4 0054  ld   $54
              a4d5 0045  ld   $45
              a4d6 00d0  ld   $d0
              a4d7 00ab  ld   $ab
              a4d8 00ad  ld   $ad
              a4d9 00aa  ld   $aa
              a4da 00af  ld   $af
              a4db 00de  ld   $de
              a4dc 0041  ld   $41
              a4dd 004e  ld   $4e
              a4de 00c4  ld   $c4
              a4df 004f  ld   $4f
              a4e0 00d2  ld   $d2
              a4e1 00be  ld   $be
              a4e2 00bd  ld   $bd
              a4e3 00bc  ld   $bc
              a4e4 0053  ld   $53
              a4e5 0047  ld   $47
              a4e6 00ce  ld   $ce
              a4e7 0049  ld   $49
              a4e8 004e  ld   $4e
              a4e9 00d4  ld   $d4
              a4ea 0041  ld   $41
              a4eb 0042  ld   $42
              a4ec 00d3  ld   $d3
              a4ed 0055  ld   $55
              a4ee 0053  ld   $53
              a4ef 00d2  ld   $d2
              a4f0 0046  ld   $46
              a4f1 0052  ld   $52
              a4f2 00c5  ld   $c5
              a4f3 0050  ld   $50
              a4f4 004f  ld   $4f
              a4f5 00d3  ld   $d3
              a4f6 0053  ld   $53
              a4f7 0051  ld   $51
              a4f8 00d2  ld   $d2
              a4f9 0052  ld   $52
              a4fa 004e  ld   $4e
              a4fb fe00  bra  ac          ;+-----------------------------------+
              a4fc fcfd  bra  $a4fd       ;|                                   |
              a4fd 1418  ld   $18,y       ;| Trampoline for page $a400 lookups |
              a4fe e006  jmp  y,$06       ;|                                   |
              a4ff c218  st   [$18]       ;+-----------------------------------+
              a500 00c4  ld   $c4
              a501 004c  ld   $4c
              a502 004f  ld   $4f
              a503 00c7  ld   $c7
              a504 0045  ld   $45
              a505 0058  ld   $58
              a506 00d0  ld   $d0
              a507 0043  ld   $43
              a508 004f  ld   $4f
              a509 00d3  ld   $d3
              a50a 0053  ld   $53
              a50b 0049  ld   $49
              a50c 00ce  ld   $ce
              a50d 0054  ld   $54
              a50e 0041  ld   $41
              a50f 00ce  ld   $ce
              a510 0041  ld   $41
              a511 0054  ld   $54
              a512 00ce  ld   $ce
              a513 0050  ld   $50
              a514 0045  ld   $45
              a515 0045  ld   $45
              a516 00cb  ld   $cb
              a517 004c  ld   $4c
              a518 0045  ld   $45
              a519 00ce  ld   $ce
              a51a 0053  ld   $53
              a51b 0054  ld   $54
              a51c 0052  ld   $52
              a51d 00a4  ld   $a4
              a51e 0056  ld   $56
              a51f 0041  ld   $41
              a520 00cc  ld   $cc
              a521 0041  ld   $41
              a522 0053  ld   $53
              a523 00c3  ld   $c3
              a524 0043  ld   $43
              a525 0048  ld   $48
              a526 0052  ld   $52
              a527 00a4  ld   $a4
              a528 004c  ld   $4c
              a529 0045  ld   $45
              a52a 0046  ld   $46
              a52b 0054  ld   $54
              a52c 00a4  ld   $a4
              a52d 0052  ld   $52
              a52e 0049  ld   $49
              a52f 0047  ld   $47
              a530 0048  ld   $48
              a531 0054  ld   $54
              a532 00a4  ld   $a4
              a533 004d  ld   $4d
              a534 0049  ld   $49
              a535 0044  ld   $44
              a536 00a4  ld   $a4
              a537 0047  ld   $47
              a538 00cf  ld   $cf
              a539 0000  ld   $00
              a53a 004e  ld   $4e
              a53b 0045  ld   $45
              a53c 0058  ld   $58
              a53d 0054  ld   $54
              a53e 0020  ld   $20
              a53f 0057  ld   $57
              a540 0049  ld   $49
              a541 0054  ld   $54
              a542 0048  ld   $48
              a543 004f  ld   $4f
              a544 0055  ld   $55
              a545 0054  ld   $54
              a546 0020  ld   $20
              a547 0046  ld   $46
              a548 004f  ld   $4f
              a549 00d2  ld   $d2
              a54a 0053  ld   $53
              a54b 0059  ld   $59
              a54c 004e  ld   $4e
              a54d 0054  ld   $54
              a54e 0041  ld   $41
              a54f 00d8  ld   $d8
              a550 0052  ld   $52
              a551 0045  ld   $45
              a552 0054  ld   $54
              a553 0055  ld   $55
              a554 0052  ld   $52
              a555 004e  ld   $4e
              a556 0020  ld   $20
              a557 0057  ld   $57
              a558 0049  ld   $49
              a559 0054  ld   $54
              a55a 0048  ld   $48
              a55b 004f  ld   $4f
              a55c 0055  ld   $55
              a55d 0054  ld   $54
              a55e 0020  ld   $20
              a55f 0047  ld   $47
              a560 004f  ld   $4f
              a561 0053  ld   $53
              a562 0055  ld   $55
              a563 00c2  ld   $c2
              a564 004f  ld   $4f
              a565 0055  ld   $55
              a566 0054  ld   $54
              a567 0020  ld   $20
              a568 004f  ld   $4f
              a569 0046  ld   $46
              a56a 0020  ld   $20
              a56b 0044  ld   $44
              a56c 0041  ld   $41
              a56d 0054  ld   $54
              a56e 00c1  ld   $c1
              a56f 0049  ld   $49
              a570 004c  ld   $4c
              a571 004c  ld   $4c
              a572 0045  ld   $45
              a573 0047  ld   $47
              a574 0041  ld   $41
              a575 004c  ld   $4c
              a576 0020  ld   $20
              a577 0051  ld   $51
              a578 0055  ld   $55
              a579 0041  ld   $41
              a57a 004e  ld   $4e
              a57b 0054  ld   $54
              a57c 0049  ld   $49
              a57d 0054  ld   $54
              a57e 00d9  ld   $d9
              a57f 004f  ld   $4f
              a580 0056  ld   $56
              a581 0045  ld   $45
              a582 0052  ld   $52
              a583 0046  ld   $46
              a584 004c  ld   $4c
              a585 004f  ld   $4f
              a586 00d7  ld   $d7
              a587 004f  ld   $4f
              a588 0055  ld   $55
              a589 0054  ld   $54
              a58a 0020  ld   $20
              a58b 004f  ld   $4f
              a58c 0046  ld   $46
              a58d 0020  ld   $20
              a58e 004d  ld   $4d
              a58f 0045  ld   $45
              a590 004d  ld   $4d
              a591 004f  ld   $4f
              a592 0052  ld   $52
              a593 00d9  ld   $d9
              a594 0055  ld   $55
              a595 004e  ld   $4e
              a596 0044  ld   $44
              a597 0045  ld   $45
              a598 0046  ld   $46
              a599 0027  ld   $27
              a59a 0044  ld   $44
              a59b 0020  ld   $20
              a59c 0053  ld   $53
              a59d 0054  ld   $54
              a59e 0041  ld   $41
              a59f 0054  ld   $54
              a5a0 0045  ld   $45
              a5a1 004d  ld   $4d
              a5a2 0045  ld   $45
              a5a3 004e  ld   $4e
              a5a4 00d4  ld   $d4
              a5a5 0042  ld   $42
              a5a6 0041  ld   $41
              a5a7 0044  ld   $44
              a5a8 0020  ld   $20
              a5a9 0053  ld   $53
              a5aa 0055  ld   $55
              a5ab 0042  ld   $42
              a5ac 0053  ld   $53
              a5ad 0043  ld   $43
              a5ae 0052  ld   $52
              a5af 0049  ld   $49
              a5b0 0050  ld   $50
              a5b1 00d4  ld   $d4
              a5b2 0052  ld   $52
              a5b3 0045  ld   $45
              a5b4 0044  ld   $44
              a5b5 0049  ld   $49
              a5b6 004d  ld   $4d
              a5b7 0004  ld   $04
              a5b8 0000  ld   $00
              a5b9 0000  ld   $00
              a5ba 0027  ld   $27
              a5bb 0044  ld   $44
              a5bc 0020  ld   $20
              a5bd 0041  ld   $41
              a5be 0052  ld   $52
              a5bf 0052  ld   $52
              a5c0 0041  ld   $41
              a5c1 00d9  ld   $d9
              a5c2 0044  ld   $44
              a5c3 0049  ld   $49
              a5c4 0056  ld   $56
              a5c5 0049  ld   $49
              a5c6 0053  ld   $53
              a5c7 0049  ld   $49
              a5c8 004f  ld   $4f
              a5c9 004e  ld   $4e
              a5ca 0020  ld   $20
              a5cb 0042  ld   $42
              a5cc 0059  ld   $59
              a5cd 0020  ld   $20
              a5ce 005a  ld   $5a
              a5cf 0045  ld   $45
              a5d0 0052  ld   $52
              a5d1 00cf  ld   $cf
              a5d2 0049  ld   $49
              a5d3 004c  ld   $4c
              a5d4 004c  ld   $4c
              a5d5 0045  ld   $45
              a5d6 0047  ld   $47
              a5d7 0041  ld   $41
              a5d8 004c  ld   $4c
              a5d9 0020  ld   $20
              a5da 0044  ld   $44
              a5db 0049  ld   $49
              a5dc 0052  ld   $52
              a5dd 0045  ld   $45
              a5de 0043  ld   $43
              a5df 00d4  ld   $d4
              a5e0 0054  ld   $54
              a5e1 0059  ld   $59
              a5e2 0050  ld   $50
              a5e3 0045  ld   $45
              a5e4 0020  ld   $20
              a5e5 004d  ld   $4d
              a5e6 0049  ld   $49
              a5e7 0053  ld   $53
              a5e8 004d  ld   $4d
              a5e9 0041  ld   $41
              a5ea 0054  ld   $54
              a5eb 0043  ld   $43
              a5ec 00c8  ld   $c8
              a5ed 0053  ld   $53
              a5ee 0054  ld   $54
              a5ef 0052  ld   $52
              a5f0 0049  ld   $49
              a5f1 004e  ld   $4e
              a5f2 0047  ld   $47
              a5f3 0020  ld   $20
              a5f4 0054  ld   $54
              a5f5 004f  ld   $4f
              a5f6 004f  ld   $4f
              a5f7 0020  ld   $20
              a5f8 004c  ld   $4c
              a5f9 004f  ld   $4f
              a5fa 004e  ld   $4e
              a5fb fe00  bra  ac          ;+-----------------------------------+
              a5fc fcfd  bra  $a5fd       ;|                                   |
              a5fd 1418  ld   $18,y       ;| Trampoline for page $a500 lookups |
              a5fe e006  jmp  y,$06       ;|                                   |
              a5ff c218  st   [$18]       ;+-----------------------------------+
              a600 00c7  ld   $c7
              a601 0046  ld   $46
              a602 004f  ld   $4f
              a603 0052  ld   $52
              a604 004d  ld   $4d
              a605 0055  ld   $55
              a606 004c  ld   $4c
              a607 0041  ld   $41
              a608 0020  ld   $20
              a609 0054  ld   $54
              a60a 004f  ld   $4f
              a60b 004f  ld   $4f
              a60c 0020  ld   $20
              a60d 0043  ld   $43
              a60e 004f  ld   $4f
              a60f 004d  ld   $4d
              a610 0050  ld   $50
              a611 004c  ld   $4c
              a612 0045  ld   $45
              a613 00d8  ld   $d8
              a614 0043  ld   $43
              a615 0041  ld   $41
              a616 004e  ld   $4e
              a617 0027  ld   $27
              a618 0054  ld   $54
              a619 0020  ld   $20
              a61a 0043  ld   $43
              a61b 004f  ld   $4f
              a61c 004e  ld   $4e
              a61d 0054  ld   $54
              a61e 0049  ld   $49
              a61f 004e  ld   $4e
              a620 0055  ld   $55
              a621 00c5  ld   $c5
              a622 0055  ld   $55
              a623 004e  ld   $4e
              a624 0044  ld   $44
              a625 0045  ld   $45
              a626 0046  ld   $46
              a627 0027  ld   $27
              a628 0044  ld   $44
              a629 0020  ld   $20
              a62a 0046  ld   $46
              a62b 0055  ld   $55
              a62c 004e  ld   $4e
              a62d 0043  ld   $43
              a62e 0054  ld   $54
              a62f 0049  ld   $49
              a630 004f  ld   $4f
              a631 00ce  ld   $ce
              a632 0020  ld   $20
              a633 0000  ld   $00
              a634 002e  ld   $2e
              a635 0038  ld   $38
              a636 004c  ld   $4c
              a637 00cc  ld   $cc
              a638 000f  ld   $0f
              a639 00a0  ld   $a0
              a63a 001b  ld   $1b
              a63b 0018  ld   $18
              a63c 0088  ld   $88
              a63d 0069  ld   $69
              a63e 0006  ld   $06
              a63f 0090  ld   $90
              a640 00fb  ld   $fb
              a641 0060  ld   $60
              a642 0020  ld   $20
              a643 0045  ld   $45
              a644 0052  ld   $52
              a645 0052  ld   $52
              a646 004f  ld   $4f
              a647 0052  ld   $52
              a648 0000  ld   $00
              a649 0020  ld   $20
              a64a 0049  ld   $49
              a64b 004e  ld   $4e
              a64c 0020  ld   $20
              a64d 0000  ld   $00
              a64e 000d  ld   $0d
              a64f 000a  ld   $0a
              a650 0052  ld   $52
              a651 0045  ld   $45
              a652 0041  ld   $41
              a653 0044  ld   $44
              a654 0059  ld   $59
              a655 002e  ld   $2e
              a656 000d  ld   $0d
              a657 000a  ld   $0a
              a658 0000  ld   $00
              a659 000d  ld   $0d
              a65a 000a  ld   $0a
              a65b 0042  ld   $42
              a65c 0052  ld   $52
              a65d 0045  ld   $45
              a65e 0041  ld   $41
              a65f 004b  ld   $4b
              a660 0000  ld   $00
              a661 00ba  ld   $ba
              a662 00e8  ld   $e8
              a663 00e8  ld   $e8
              a664 00e8  ld   $e8
              a665 00e8  ld   $e8
              a666 00b5  ld   $b5
              a667 0001  ld   $01
              a668 00c9  ld   $c9
              a669 0081  ld   $81
              a66a 00d0  ld   $d0
              a66b 001d  ld   $1d
              a66c 00a5  ld   $a5
              a66d 007c  ld   $7c
              a66e 00d0  ld   $d0
              a66f 0008  ld   $08
              a670 00b5  ld   $b5
              a671 0002  ld   $02
              a672 0085  ld   $85
              a673 007b  ld   $7b
              a674 00b5  ld   $b5
              a675 0003  ld   $03
              a676 0085  ld   $85
              a677 007c  ld   $7c
              a678 00d5  ld   $d5
              a679 0003  ld   $03
              a67a 00d0  ld   $d0
              a67b 0006  ld   $06
              a67c 00a5  ld   $a5
              a67d 007b  ld   $7b
              a67e 00d5  ld   $d5
              a67f 0002  ld   $02
              a680 00f0  ld   $f0
              a681 0007  ld   $07
              a682 008a  ld   $8a
              a683 0018  ld   $18
              a684 0069  ld   $69
              a685 0012  ld   $12
              a686 00aa  ld   $aa
              a687 00d0  ld   $d0
              a688 00dd  ld   $dd
              a689 0060  ld   $60
              a68a 0020  ld   $20
              a68b 001b  ld   $1b
              a68c 0005  ld   $05
              a68d 0085  ld   $85
              a68e 0063  ld   $63
              a68f 0084  ld   $84
              a690 0064  ld   $64
              a691 0038  ld   $38
              a692 00a5  ld   $a5
              a693 008d  ld   $8d
              a694 00e5  ld   $e5
              a695 0092  ld   $92
              a696 0085  ld   $85
              a697 0054  ld   $54
              a698 00a8  ld   $a8
              a699 00a5  ld   $a5
              a69a 008e  ld   $8e
              a69b 00e5  ld   $e5
              a69c 0093  ld   $93
              a69d 00aa  ld   $aa
              a69e 00e8  ld   $e8
              a69f 0098  ld   $98
              a6a0 00f0  ld   $f0
              a6a1 0023  ld   $23
              a6a2 00a5  ld   $a5
              a6a3 008d  ld   $8d
              a6a4 0038  ld   $38
              a6a5 00e5  ld   $e5
              a6a6 0054  ld   $54
              a6a7 0085  ld   $85
              a6a8 008d  ld   $8d
              a6a9 00b0  ld   $b0
              a6aa 0003  ld   $03
              a6ab 00c6  ld   $c6
              a6ac 008e  ld   $8e
              a6ad 0038  ld   $38
              a6ae 00a5  ld   $a5
              a6af 008b  ld   $8b
              a6b0 00e5  ld   $e5
              a6b1 0054  ld   $54
              a6b2 0085  ld   $85
              a6b3 008b  ld   $8b
              a6b4 00b0  ld   $b0
              a6b5 0008  ld   $08
              a6b6 00c6  ld   $c6
              a6b7 008c  ld   $8c
              a6b8 0090  ld   $90
              a6b9 0004  ld   $04
              a6ba 00b1  ld   $b1
              a6bb 008d  ld   $8d
              a6bc 0091  ld   $91
              a6bd 008b  ld   $8b
              a6be 0088  ld   $88
              a6bf 0005  ld   $05
              a6c0 0000  ld   $00
              a6c1 0000  ld   $00
              a6c2 00d0  ld   $d0
              a6c3 00f9  ld   $f9
              a6c4 00b1  ld   $b1
              a6c5 008d  ld   $8d
              a6c6 0091  ld   $91
              a6c7 008b  ld   $8b
              a6c8 00c6  ld   $c6
              a6c9 008e  ld   $8e
              a6ca 00c6  ld   $c6
              a6cb 008c  ld   $8c
              a6cc 00ca  ld   $ca
              a6cd 00d0  ld   $d0
              a6ce 00f2  ld   $f2
              a6cf 0060  ld   $60
              a6d0 000a  ld   $0a
              a6d1 0069  ld   $69
              a6d2 00b2  ld   $b2
              a6d3 00b0  ld   $b0
              a6d4 0035  ld   $35
              a6d5 0085  ld   $85
              a6d6 0054  ld   $54
              a6d7 00ba  ld   $ba
              a6d8 00e4  ld   $e4
              a6d9 0054  ld   $54
              a6da 0090  ld   $90
              a6db 002e  ld   $2e
              a6dc 0060  ld   $60
              a6dd 00c4  ld   $c4
              a6de 0066  ld   $66
              a6df 0090  ld   $90
              a6e0 0028  ld   $28
              a6e1 00d0  ld   $d0
              a6e2 0004  ld   $04
              a6e3 00c5  ld   $c5
              a6e4 0065  ld   $65
              a6e5 0090  ld   $90
              a6e6 0022  ld   $22
              a6e7 0048  ld   $48
              a6e8 00a2  ld   $a2
              a6e9 0009  ld   $09
              a6ea 0098  ld   $98
              a6eb 0048  ld   $48
              a6ec 00b5  ld   $b5
              a6ed 008a  ld   $8a
              a6ee 00ca  ld   $ca
              a6ef 0010  ld   $10
              a6f0 00fa  ld   $fa
              a6f1 0020  ld   $20
              a6f2 0062  ld   $62
              a6f3 0015  ld   $15
              a6f4 00a2  ld   $a2
              a6f5 00f7  ld   $f7
              a6f6 0068  ld   $68
              a6f7 0095  ld   $95
              a6f8 0094  ld   $94
              a6f9 00e8  ld   $e8
              a6fa 0030  ld   $30
              a6fb fe00  bra  ac          ;+-----------------------------------+
              a6fc fcfd  bra  $a6fd       ;|                                   |
              a6fd 1418  ld   $18,y       ;| Trampoline for page $a600 lookups |
              a6fe e006  jmp  y,$06       ;|                                   |
              a6ff c218  st   [$18]       ;+-----------------------------------+
              a700 00fa  ld   $fa
              a701 0068  ld   $68
              a702 00a8  ld   $a8
              a703 0068  ld   $68
              a704 00c4  ld   $c4
              a705 0066  ld   $66
              a706 0090  ld   $90
              a707 0006  ld   $06
              a708 00d0  ld   $d0
              a709 0005  ld   $05
              a70a 00c5  ld   $c5
              a70b 0065  ld   $65
              a70c 00b0  ld   $b0
              a70d 0001  ld   $01
              a70e 0060  ld   $60
              a70f 00a2  ld   $a2
              a710 004d  ld   $4d
              a711 0046  ld   $46
              a712 0045  ld   $45
              a713 0020  ld   $20
              a714 00ac  ld   $ac
              a715 000b  ld   $0b
              a716 0020  ld   $20
              a717 000f  ld   $0f
              a718 000c  ld   $0c
              a719 00bd  ld   $bd
              a71a 0083  ld   $83
              a71b 0003  ld   $03
              a71c 0048  ld   $48
              a71d 0029  ld   $29
              a71e 007f  ld   $7f
              a71f 0020  ld   $20
              a720 0011  ld   $11
              a721 000c  ld   $0c
              a722 00e8  ld   $e8
              a723 0068  ld   $68
              a724 0010  ld   $10
              a725 00f3  ld   $f3
              a726 0020  ld   $20
              a727 007a  ld   $7a
              a728 0007  ld   $07
              a729 00a9  ld   $a9
              a72a 0083  ld   $83
              a72b 00a0  ld   $a0
              a72c 0004  ld   $04
              a72d 0020  ld   $20
              a72e 00ef  ld   $ef
              a72f 000b  ld   $0b
              a730 00a4  ld   $a4
              a731 006c  ld   $6c
              a732 00c8  ld   $c8
              a733 00f0  ld   $f0
              a734 0003  ld   $03
              a735 0020  ld   $20
              a736 003a  ld   $3a
              a737 001e  ld   $1e
              a738 0046  ld   $46
              a739 0045  ld   $45
              a73a 00a9  ld   $a9
              a73b 008f  ld   $8f
              a73c 00a0  ld   $a0
              a73d 0004  ld   $04
              a73e 0020  ld   $20
              a73f 00ef  ld   $ef
              a740 000b  ld   $0b
              a741 0020  ld   $20
              a742 0057  ld   $57
              a743 0006  ld   $06
              a744 0086  ld   $86
              a745 00a6  ld   $a6
              a746 0084  ld   $84
              a747 00a7  ld   $a7
              a748 0020  ld   $20
              a749 006b  ld   $6b
              a74a 0022  ld   $22
              a74b 00aa  ld   $aa
              a74c 00f0  ld   $f0
              a74d 00f3  ld   $f3
              a74e 00a2  ld   $a2
              a74f 00ff  ld   $ff
              a750 0086  ld   $86
              a751 006c  ld   $6c
              a752 0090  ld   $90
              a753 0006  ld   $06
              a754 0020  ld   $20
              a755 007e  ld   $7e
              a756 0006  ld   $06
              a757 004c  ld   $4c
              a758 00de  ld   $de
              a759 0008  ld   $08
              a75a 0020  ld   $20
              a75b 005a  ld   $5a
              a75c 000a  ld   $0a
              a75d 0020  ld   $20
              a75e 007e  ld   $7e
              a75f 0006  ld   $06
              a760 0084  ld   $84
              a761 003d  ld   $3d
              a762 0020  ld   $20
              a763 0013  ld   $13
              a764 0007  ld   $07
              a765 0090  ld   $90
              a766 0044  ld   $44
              a767 00a0  ld   $a0
              a768 0001  ld   $01
              a769 00b1  ld   $b1
              a76a 0092  ld   $92
              a76b 0085  ld   $85
              a76c 0055  ld   $55
              a76d 00a5  ld   $a5
              a76e 005f  ld   $5f
              a76f 0085  ld   $85
              a770 0054  ld   $54
              a771 00a5  ld   $a5
              a772 0093  ld   $93
              a773 0085  ld   $85
              a774 0057  ld   $57
              a775 00a5  ld   $a5
              a776 0092  ld   $92
              a777 0088  ld   $88
              a778 00f1  ld   $f1
              a779 0092  ld   $92
              a77a 0018  ld   $18
              a77b 0065  ld   $65
              a77c 005f  ld   $5f
              a77d 0085  ld   $85
              a77e 005f  ld   $5f
              a77f 0085  ld   $85
              a780 0056  ld   $56
              a781 00a5  ld   $a5
              a782 0060  ld   $60
              a783 0069  ld   $69
              a784 00ff  ld   $ff
              a785 0085  ld   $85
              a786 0060  ld   $60
              a787 00e5  ld   $e5
              a788 0093  ld   $93
              a789 00aa  ld   $aa
              a78a 0038  ld   $38
              a78b 00a5  ld   $a5
              a78c 0092  ld   $92
              a78d 00e5  ld   $e5
              a78e 005f  ld   $5f
              a78f 00a8  ld   $a8
              a790 00b0  ld   $b0
              a791 0003  ld   $03
              a792 00e8  ld   $e8
              a793 00c6  ld   $c6
              a794 0057  ld   $57
              a795 0018  ld   $18
              a796 0065  ld   $65
              a797 0054  ld   $54
              a798 0090  ld   $90
              a799 0003  ld   $03
              a79a 00c6  ld   $c6
              a79b 0055  ld   $55
              a79c 0018  ld   $18
              a79d 00b1  ld   $b1
              a79e 0054  ld   $54
              a79f 0091  ld   $91
              a7a0 0056  ld   $56
              a7a1 00c8  ld   $c8
              a7a2 00d0  ld   $d0
              a7a3 00f9  ld   $f9
              a7a4 00e6  ld   $e6
              a7a5 0055  ld   $55
              a7a6 00e6  ld   $e6
              a7a7 0057  ld   $57
              a7a8 00ca  ld   $ca
              a7a9 00d0  ld   $d0
              a7aa 00f2  ld   $f2
              a7ab 0020  ld   $20
              a7ac 0059  ld   $59
              a7ad 0007  ld   $07
              a7ae 0020  ld   $20
              a7af 002a  ld   $2a
              a7b0 0006  ld   $06
              a7b1 00ad  ld   $ad
              a7b2 0005  ld   $05
              a7b3 0024  ld   $24
              a7b4 00f0  ld   $f0
              a7b5 008b  ld   $8b
              a7b6 0018  ld   $18
              a7b7 00a5  ld   $a5
              a7b8 005f  ld   $5f
              a7b9 0085  ld   $85
              a7ba 008d  ld   $8d
              a7bb 0065  ld   $65
              a7bc 003d  ld   $3d
              a7bd 0085  ld   $85
              a7be 008b  ld   $8b
              a7bf 00a4  ld   $a4
              a7c0 0060  ld   $60
              a7c1 0084  ld   $84
              a7c2 008e  ld   $8e
              a7c3 0090  ld   $90
              a7c4 0001  ld   $01
              a7c5 00c8  ld   $c8
              a7c6 0084  ld   $84
              a7c7 0006  ld   $06
              a7c8 0000  ld   $00
              a7c9 0000  ld   $00
              a7ca 008c  ld   $8c
              a7cb 0020  ld   $20
              a7cc 00cb  ld   $cb
              a7cd 0004  ld   $04
              a7ce 00a5  ld   $a5
              a7cf 0046  ld   $46
              a7d0 00a4  ld   $a4
              a7d1 0047  ld   $47
              a7d2 008d  ld   $8d
              a7d3 0003  ld   $03
              a7d4 0024  ld   $24
              a7d5 008c  ld   $8c
              a7d6 0004  ld   $04
              a7d7 0024  ld   $24
              a7d8 00a5  ld   $a5
              a7d9 0063  ld   $63
              a7da 00a4  ld   $a4
              a7db 0064  ld   $64
              a7dc 0085  ld   $85
              a7dd 005f  ld   $5f
              a7de 0084  ld   $84
              a7df 0060  ld   $60
              a7e0 00a4  ld   $a4
              a7e1 003d  ld   $3d
              a7e2 0088  ld   $88
              a7e3 00b9  ld   $b9
              a7e4 0001  ld   $01
              a7e5 0024  ld   $24
              a7e6 0091  ld   $91
              a7e7 0092  ld   $92
              a7e8 0088  ld   $88
              a7e9 0010  ld   $10
              a7ea 00f8  ld   $f8
              a7eb 0020  ld   $20
              a7ec 0059  ld   $59
              a7ed 0007  ld   $07
              a7ee 0020  ld   $20
              a7ef 002a  ld   $2a
              a7f0 0006  ld   $06
              a7f1 004c  ld   $4c
              a7f2 007a  ld   $7a
              a7f3 0005  ld   $05
              a7f4 00a5  ld   $a5
              a7f5 005d  ld   $5d
              a7f6 00a4  ld   $a4
              a7f7 005e  ld   $5e
              a7f8 0085  ld   $85
              a7f9 0054  ld   $54
              a7fa 0084  ld   $84
              a7fb fe00  bra  ac          ;+-----------------------------------+
              a7fc fcfd  bra  $a7fd       ;|                                   |
              a7fd 1418  ld   $18,y       ;| Trampoline for page $a700 lookups |
              a7fe e006  jmp  y,$06       ;|                                   |
              a7ff c218  st   [$18]       ;+-----------------------------------+
              a800 0055  ld   $55
              a801 0018  ld   $18
              a802 00a0  ld   $a0
              a803 0001  ld   $01
              a804 00b1  ld   $b1
              a805 0054  ld   $54
              a806 00f0  ld   $f0
              a807 001d  ld   $1d
              a808 00a0  ld   $a0
              a809 0004  ld   $04
              a80a 00c8  ld   $c8
              a80b 00b1  ld   $b1
              a80c 0054  ld   $54
              a80d 00d0  ld   $d0
              a80e 00fb  ld   $fb
              a80f 00c8  ld   $c8
              a810 0098  ld   $98
              a811 0065  ld   $65
              a812 0054  ld   $54
              a813 00aa  ld   $aa
              a814 00a0  ld   $a0
              a815 0000  ld   $00
              a816 0091  ld   $91
              a817 0054  ld   $54
              a818 00a5  ld   $a5
              a819 0055  ld   $55
              a81a 0069  ld   $69
              a81b 0000  ld   $00
              a81c 00c8  ld   $c8
              a81d 0091  ld   $91
              a81e 0054  ld   $54
              a81f 0086  ld   $86
              a820 0054  ld   $54
              a821 0085  ld   $85
              a822 0055  ld   $55
              a823 0090  ld   $90
              a824 00dd  ld   $dd
              a825 0060  ld   $60
              a826 00a2  ld   $a2
              a827 0000  ld   $00
              a828 0020  ld   $20
              a829 006e  ld   $6e
              a82a 0006  ld   $06
              a82b 00c9  ld   $c9
              a82c 000d  ld   $0d
              a82d 00f0  ld   $f0
              a82e 000b  ld   $0b
              a82f 0020  ld   $20
              a830 0000  ld   $00
              a831 002f  ld   $2f
              a832 00f0  ld   $f0
              a833 00f4  ld   $f4
              a834 009d  ld   $9d
              a835 0005  ld   $05
              a836 0024  ld   $24
              a837 00e8  ld   $e8
              a838 00d0  ld   $d0
              a839 00ee  ld   $ee
              a83a 004c  ld   $4c
              a83b 00a3  ld   $a3
              a83c 000b  ld   $0b
              a83d 0020  ld   $20
              a83e 0000  ld   $00
              a83f 002c  ld   $2c
              a840 00c9  ld   $c9
              a841 000f  ld   $0f
              a842 00d0  ld   $d0
              a843 0008  ld   $08
              a844 0048  ld   $48
              a845 00a5  ld   $a5
              a846 0045  ld   $45
              a847 0049  ld   $49
              a848 00ff  ld   $ff
              a849 0085  ld   $85
              a84a 0045  ld   $45
              a84b 0068  ld   $68
              a84c 0060  ld   $60
              a84d 00a6  ld   $a6
              a84e 00a6  ld   $a6
              a84f 00a0  ld   $a0
              a850 0004  ld   $04
              a851 0084  ld   $84
              a852 0041  ld   $41
              a853 00bd  ld   $bd
              a854 0000  ld   $00
              a855 0024  ld   $24
              a856 0010  ld   $10
              a857 0007  ld   $07
              a858 00c9  ld   $c9
              a859 00ff  ld   $ff
              a85a 00f0  ld   $f0
              a85b 003e  ld   $3e
              a85c 00e8  ld   $e8
              a85d 00d0  ld   $d0
              a85e 00f4  ld   $f4
              a85f 00c9  ld   $c9
              a860 0020  ld   $20
              a861 00f0  ld   $f0
              a862 0037  ld   $37
              a863 0085  ld   $85
              a864 003c  ld   $3c
              a865 00c9  ld   $c9
              a866 0022  ld   $22
              a867 00f0  ld   $f0
              a868 0056  ld   $56
              a869 0024  ld   $24
              a86a 0041  ld   $41
              a86b 0070  ld   $70
              a86c 002d  ld   $2d
              a86d 00c9  ld   $c9
              a86e 003f  ld   $3f
              a86f 00d0  ld   $d0
              a870 0004  ld   $04
              a871 00a9  ld   $a9
              a872 0097  ld   $97
              a873 00d0  ld   $d0
              a874 0025  ld   $25
              a875 00c9  ld   $c9
              a876 0030  ld   $30
              a877 0090  ld   $90
              a878 0004  ld   $04
              a879 00c9  ld   $c9
              a87a 003c  ld   $3c
              a87b 0090  ld   $90
              a87c 001d  ld   $1d
              a87d 0084  ld   $84
              a87e 00a4  ld   $a4
              a87f 00a0  ld   $a0
              a880 0000  ld   $00
              a881 0084  ld   $84
              a882 003d  ld   $3d
              a883 0088  ld   $88
              a884 0086  ld   $86
              a885 00a6  ld   $a6
              a886 00ca  ld   $ca
              a887 00c8  ld   $c8
              a888 00e8  ld   $e8
              a889 00bd  ld   $bd
              a88a 0000  ld   $00
              a88b 0024  ld   $24
              a88c 0038  ld   $38
              a88d 00f9  ld   $f9
              a88e 009e  ld   $9e
              a88f 0002  ld   $02
              a890 00f0  ld   $f0
              a891 00f5  ld   $f5
              a892 00c9  ld   $c9
              a893 0080  ld   $80
              a894 00d0  ld   $d0
              a895 0030  ld   $30
              a896 0005  ld   $05
              a897 003d  ld   $3d
              a898 00a4  ld   $a4
              a899 00a4  ld   $a4
              a89a 00e8  ld   $e8
              a89b 00c8  ld   $c8
              a89c 0099  ld   $99
              a89d 0000  ld   $00
              a89e 0024  ld   $24
              a89f 00b9  ld   $b9
              a8a0 0000  ld   $00
              a8a1 0024  ld   $24
              a8a2 00f0  ld   $f0
              a8a3 0036  ld   $36
              a8a4 0038  ld   $38
              a8a5 00e9  ld   $e9
              a8a6 003a  ld   $3a
              a8a7 00f0  ld   $f0
              a8a8 0004  ld   $04
              a8a9 00c9  ld   $c9
              a8aa 0049  ld   $49
              a8ab 00d0  ld   $d0
              a8ac 0002  ld   $02
              a8ad 0085  ld   $85
              a8ae 0041  ld   $41
              a8af 0038  ld   $38
              a8b0 00e9  ld   $e9
              a8b1 0054  ld   $54
              a8b2 00d0  ld   $d0
              a8b3 009f  ld   $9f
              a8b4 0085  ld   $85
              a8b5 003c  ld   $3c
              a8b6 00bd  ld   $bd
              a8b7 0000  ld   $00
              a8b8 0024  ld   $24
              a8b9 00f0  ld   $f0
              a8ba 00df  ld   $df
              a8bb 00c5  ld   $c5
              a8bc 003c  ld   $3c
              a8bd 00f0  ld   $f0
              a8be 00db  ld   $db
              a8bf 00c8  ld   $c8
              a8c0 0099  ld   $99
              a8c1 0000  ld   $00
              a8c2 0024  ld   $24
              a8c3 00e8  ld   $e8
              a8c4 00d0  ld   $d0
              a8c5 00f0  ld   $f0
              a8c6 00a6  ld   $a6
              a8c7 00a6  ld   $a6
              a8c8 00e6  ld   $e6
              a8c9 003d  ld   $3d
              a8ca 00c8  ld   $c8
              a8cb 00b9  ld   $b9
              a8cc 009d  ld   $9d
              a8cd 0002  ld   $02
              a8ce 0010  ld   $10
              a8cf 0007  ld   $07
              a8d0 0000  ld   $00
              a8d1 0000  ld   $00
              a8d2 00fa  ld   $fa
              a8d3 00b9  ld   $b9
              a8d4 009e  ld   $9e
              a8d5 0002  ld   $02
              a8d6 00d0  ld   $d0
              a8d7 00b4  ld   $b4
              a8d8 00bd  ld   $bd
              a8d9 0000  ld   $00
              a8da 0024  ld   $24
              a8db 0010  ld   $10
              a8dc 00be  ld   $be
              a8dd 0099  ld   $99
              a8de 0002  ld   $02
              a8df 0024  ld   $24
              a8e0 00a9  ld   $a9
              a8e1 0004  ld   $04
              a8e2 0085  ld   $85
              a8e3 00a6  ld   $a6
              a8e4 0060  ld   $60
              a8e5 00a5  ld   $a5
              a8e6 005d  ld   $5d
              a8e7 00a6  ld   $a6
              a8e8 005e  ld   $5e
              a8e9 00a0  ld   $a0
              a8ea 0001  ld   $01
              a8eb 0085  ld   $85
              a8ec 0092  ld   $92
              a8ed 0086  ld   $86
              a8ee 0093  ld   $93
              a8ef 00b1  ld   $b1
              a8f0 0092  ld   $92
              a8f1 00f0  ld   $f0
              a8f2 001f  ld   $1f
              a8f3 00c8  ld   $c8
              a8f4 00c8  ld   $c8
              a8f5 00a5  ld   $a5
              a8f6 0047  ld   $47
              a8f7 00d1  ld   $d1
              a8f8 0092  ld   $92
              a8f9 0090  ld   $90
              a8fa 0018  ld   $18
              a8fb fe00  bra  ac          ;+-----------------------------------+
              a8fc fcfd  bra  $a8fd       ;|                                   |
              a8fd 1418  ld   $18,y       ;| Trampoline for page $a800 lookups |
              a8fe e006  jmp  y,$06       ;|                                   |
              a8ff c218  st   [$18]       ;+-----------------------------------+
              a900 00f0  ld   $f0
              a901 0003  ld   $03
              a902 0088  ld   $88
              a903 00d0  ld   $d0
              a904 0009  ld   $09
              a905 00a5  ld   $a5
              a906 0046  ld   $46
              a907 0088  ld   $88
              a908 00d1  ld   $d1
              a909 0092  ld   $92
              a90a 0090  ld   $90
              a90b 000c  ld   $0c
              a90c 00f0  ld   $f0
              a90d 000a  ld   $0a
              a90e 0088  ld   $88
              a90f 00b1  ld   $b1
              a910 0092  ld   $92
              a911 00aa  ld   $aa
              a912 0088  ld   $88
              a913 00b1  ld   $b1
              a914 0092  ld   $92
              a915 00b0  ld   $b0
              a916 00d7  ld   $d7
              a917 0018  ld   $18
              a918 0060  ld   $60
              a919 00d0  ld   $d0
              a91a 00fd  ld   $fd
              a91b 00a9  ld   $a9
              a91c 0000  ld   $00
              a91d 00a8  ld   $a8
              a91e 0091  ld   $91
              a91f 005d  ld   $5d
              a920 00c8  ld   $c8
              a921 0091  ld   $91
              a922 005d  ld   $5d
              a923 00a5  ld   $a5
              a924 005d  ld   $5d
              a925 0018  ld   $18
              a926 0069  ld   $69
              a927 0002  ld   $02
              a928 0085  ld   $85
              a929 005f  ld   $5f
              a92a 00a5  ld   $a5
              a92b 005e  ld   $5e
              a92c 0069  ld   $69
              a92d 0000  ld   $00
              a92e 0085  ld   $85
              a92f 0060  ld   $60
              a930 0020  ld   $20
              a931 008e  ld   $8e
              a932 0007  ld   $07
              a933 00a9  ld   $a9
              a934 0000  ld   $00
              a935 00d0  ld   $d0
              a936 002d  ld   $2d
              a937 00a5  ld   $a5
              a938 0069  ld   $69
              a939 00a4  ld   $a4
              a93a 006a  ld   $6a
              a93b 0085  ld   $85
              a93c 0065  ld   $65
              a93d 0084  ld   $84
              a93e 0066  ld   $66
              a93f 0020  ld   $20
              a940 0000  ld   $00
              a941 002e  ld   $2e
              a942 00a5  ld   $a5
              a943 005f  ld   $5f
              a944 00a4  ld   $a4
              a945 0060  ld   $60
              a946 0085  ld   $85
              a947 0061  ld   $61
              a948 0084  ld   $84
              a949 0062  ld   $62
              a94a 0085  ld   $85
              a94b 0063  ld   $63
              a94c 0084  ld   $84
              a94d 0064  ld   $64
              a94e 0020  ld   $20
              a94f 0017  ld   $17
              a950 0009  ld   $09
              a951 00a2  ld   $a2
              a952 004b  ld   $4b
              a953 0086  ld   $86
              a954 0048  ld   $48
              a955 0068  ld   $68
              a956 00a8  ld   $a8
              a957 0068  ld   $68
              a958 00a2  ld   $a2
              a959 00ff  ld   $ff
              a95a 009a  ld   $9a
              a95b 0048  ld   $48
              a95c 0098  ld   $98
              a95d 0048  ld   $48
              a95e 00a9  ld   $a9
              a95f 0000  ld   $00
              a960 0085  ld   $85
              a961 0070  ld   $70
              a962 0085  ld   $85
              a963 0042  ld   $42
              a964 0060  ld   $60
              a965 0018  ld   $18
              a966 00a5  ld   $a5
              a967 005d  ld   $5d
              a968 0069  ld   $69
              a969 00ff  ld   $ff
              a96a 0085  ld   $85
              a96b 00a6  ld   $a6
              a96c 00a5  ld   $a5
              a96d 005e  ld   $5e
              a96e 0069  ld   $69
              a96f 00ff  ld   $ff
              a970 0085  ld   $85
              a971 00a7  ld   $a7
              a972 0060  ld   $60
              a973 0090  ld   $90
              a974 0006  ld   $06
              a975 00f0  ld   $f0
              a976 0004  ld   $04
              a977 00c9  ld   $c9
              a978 00a5  ld   $a5
              a979 00d0  ld   $d0
              a97a 00e9  ld   $e9
              a97b 0020  ld   $20
              a97c 005a  ld   $5a
              a97d 000a  ld   $0a
              a97e 0020  ld   $20
              a97f 0013  ld   $13
              a980 0007  ld   $07
              a981 0020  ld   $20
              a982 0071  ld   $71
              a983 0022  ld   $22
              a984 00f0  ld   $f0
              a985 000c  ld   $0c
              a986 00c9  ld   $c9
              a987 00a5  ld   $a5
              a988 00d0  ld   $d0
              a989 008e  ld   $8e
              a98a 0020  ld   $20
              a98b 006b  ld   $6b
              a98c 0022  ld   $22
              a98d 0020  ld   $20
              a98e 005a  ld   $5a
              a98f 000a  ld   $0a
              a990 00d0  ld   $d0
              a991 0086  ld   $86
              a992 0068  ld   $68
              a993 0068  ld   $68
              a994 00a5  ld   $a5
              a995 0046  ld   $46
              a996 0005  ld   $05
              a997 0047  ld   $47
              a998 00d0  ld   $d0
              a999 0006  ld   $06
              a99a 00a9  ld   $a9
              a99b 00ff  ld   $ff
              a99c 0085  ld   $85
              a99d 0046  ld   $46
              a99e 0085  ld   $85
              a99f 0047  ld   $47
              a9a0 00a0  ld   $a0
              a9a1 0001  ld   $01
              a9a2 0084  ld   $84
              a9a3 0041  ld   $41
              a9a4 00b1  ld   $b1
              a9a5 0092  ld   $92
              a9a6 00f0  ld   $f0
              a9a7 0043  ld   $43
              a9a8 0020  ld   $20
              a9a9 0000  ld   $00
              a9aa 002d  ld   $2d
              a9ab 0020  ld   $20
              a9ac 00ac  ld   $ac
              a9ad 000b  ld   $0b
              a9ae 00c8  ld   $c8
              a9af 00b1  ld   $b1
              a9b0 0092  ld   $92
              a9b1 00aa  ld   $aa
              a9b2 00c8  ld   $c8
              a9b3 00b1  ld   $b1
              a9b4 0092  ld   $92
              a9b5 00c5  ld   $c5
              a9b6 0047  ld   $47
              a9b7 00d0  ld   $d0
              a9b8 0004  ld   $04
              a9b9 00e4  ld   $e4
              a9ba 0046  ld   $46
              a9bb 00f0  ld   $f0
              a9bc 0002  ld   $02
              a9bd 00b0  ld   $b0
              a9be 002c  ld   $2c
              a9bf 0084  ld   $84
              a9c0 007b  ld   $7b
              a9c1 0020  ld   $20
              a9c2 0045  ld   $45
              a9c3 001e  ld   $1e
              a9c4 00a9  ld   $a9
              a9c5 0020  ld   $20
              a9c6 00a4  ld   $a4
              a9c7 007b  ld   $7b
              a9c8 0029  ld   $29
              a9c9 007f  ld   $7f
              a9ca 0020  ld   $20
              a9cb 0011  ld   $11
              a9cc 000c  ld   $0c
              a9cd 00c9  ld   $c9
              a9ce 0022  ld   $22
              a9cf 00d0  ld   $d0
              a9d0 0006  ld   $06
              a9d1 00a5  ld   $a5
              a9d2 0041  ld   $41
              a9d3 0049  ld   $49
              a9d4 00ff  ld   $ff
              a9d5 0085  ld   $85
              a9d6 0041  ld   $41
              a9d7 0008  ld   $08
              a9d8 0000  ld   $00
              a9d9 0000  ld   $00
              a9da 00c8  ld   $c8
              a9db 00f0  ld   $f0
              a9dc 0011  ld   $11
              a9dd 00b1  ld   $b1
              a9de 0092  ld   $92
              a9df 00d0  ld   $d0
              a9e0 0010  ld   $10
              a9e1 00a8  ld   $a8
              a9e2 00b1  ld   $b1
              a9e3 0092  ld   $92
              a9e4 00aa  ld   $aa
              a9e5 00c8  ld   $c8
              a9e6 00b1  ld   $b1
              a9e7 0092  ld   $92
              a9e8 0086  ld   $86
              a9e9 0092  ld   $92
              a9ea 0085  ld   $85
              a9eb 0093  ld   $93
              a9ec 00d0  ld   $d0
              a9ed 00b5  ld   $b5
              a9ee 004c  ld   $4c
              a9ef 0071  ld   $71
              a9f0 0005  ld   $05
              a9f1 0010  ld   $10
              a9f2 00da  ld   $da
              a9f3 00c9  ld   $c9
              a9f4 00ff  ld   $ff
              a9f5 00f0  ld   $f0
              a9f6 00d6  ld   $d6
              a9f7 0024  ld   $24
              a9f8 0041  ld   $41
              a9f9 0030  ld   $30
              a9fa 00d2  ld   $d2
              a9fb fe00  bra  ac          ;+-----------------------------------+
              a9fc fcfd  bra  $a9fd       ;|                                   |
              a9fd 1418  ld   $18,y       ;| Trampoline for page $a900 lookups |
              a9fe e006  jmp  y,$06       ;|                                   |
              a9ff c218  st   [$18]       ;+-----------------------------------+
              aa00 0038  ld   $38
              aa01 00e9  ld   $e9
              aa02 007f  ld   $7f
              aa03 00aa  ld   $aa
              aa04 0084  ld   $84
              aa05 007b  ld   $7b
              aa06 00a0  ld   $a0
              aa07 00ff  ld   $ff
              aa08 00ca  ld   $ca
              aa09 00f0  ld   $f0
              aa0a 0008  ld   $08
              aa0b 00c8  ld   $c8
              aa0c 00b9  ld   $b9
              aa0d 009e  ld   $9e
              aa0e 0002  ld   $02
              aa0f 0010  ld   $10
              aa10 00fa  ld   $fa
              aa11 0030  ld   $30
              aa12 00f5  ld   $f5
              aa13 00c8  ld   $c8
              aa14 00b9  ld   $b9
              aa15 009e  ld   $9e
              aa16 0002  ld   $02
              aa17 0030  ld   $30
              aa18 00b5  ld   $b5
              aa19 0020  ld   $20
              aa1a 0011  ld   $11
              aa1b 000c  ld   $0c
              aa1c 00d0  ld   $d0
              aa1d 00f5  ld   $f5
              aa1e 00a9  ld   $a9
              aa1f 0080  ld   $80
              aa20 0085  ld   $85
              aa21 0042  ld   $42
              aa22 0020  ld   $20
              aa23 0094  ld   $94
              aa24 000a  ld   $0a
              aa25 0020  ld   $20
              aa26 00a2  ld   $a2
              aa27 0004  ld   $04
              aa28 00d0  ld   $d0
              aa29 0005  ld   $05
              aa2a 008a  ld   $8a
              aa2b 0069  ld   $69
              aa2c 000f  ld   $0f
              aa2d 00aa  ld   $aa
              aa2e 009a  ld   $9a
              aa2f 0068  ld   $68
              aa30 0068  ld   $68
              aa31 00a9  ld   $a9
              aa32 0009  ld   $09
              aa33 0020  ld   $20
              aa34 000e  ld   $0e
              aa35 0005  ld   $05
              aa36 0020  ld   $20
              aa37 00f5  ld   $f5
              aa38 0009  ld   $09
              aa39 0018  ld   $18
              aa3a 0098  ld   $98
              aa3b 0065  ld   $65
              aa3c 00a6  ld   $a6
              aa3d 0048  ld   $48
              aa3e 00a5  ld   $a5
              aa3f 00a7  ld   $a7
              aa40 0069  ld   $69
              aa41 0000  ld   $00
              aa42 0048  ld   $48
              aa43 00a5  ld   $a5
              aa44 006c  ld   $6c
              aa45 0048  ld   $48
              aa46 00a5  ld   $a5
              aa47 006b  ld   $6b
              aa48 0048  ld   $48
              aa49 00a9  ld   $a9
              aa4a 009e  ld   $9e
              aa4b 0020  ld   $20
              aa4c 0065  ld   $65
              aa4d 000f  ld   $0f
              aa4e 0020  ld   $20
              aa4f 00f9  ld   $f9
              aa50 000d  ld   $0d
              aa51 0020  ld   $20
              aa52 00f6  ld   $f6
              aa53 000d  ld   $0d
              aa54 00a5  ld   $a5
              aa55 0099  ld   $99
              aa56 0009  ld   $09
              aa57 007f  ld   $7f
              aa58 0025  ld   $25
              aa59 0095  ld   $95
              aa5a 0085  ld   $85
              aa5b 0095  ld   $95
              aa5c 00a9  ld   $a9
              aa5d 0088  ld   $88
              aa5e 00a0  ld   $a0
              aa5f 0008  ld   $08
              aa60 0085  ld   $85
              aa61 0054  ld   $54
              aa62 0084  ld   $84
              aa63 0055  ld   $55
              aa64 004c  ld   $4c
              aa65 00af  ld   $af
              aa66 000e  ld   $0e
              aa67 00a9  ld   $a9
              aa68 0034  ld   $34
              aa69 00a0  ld   $a0
              aa6a 001a  ld   $1a
              aa6b 0020  ld   $20
              aa6c 001a  ld   $1a
              aa6d 001c  ld   $1c
              aa6e 0020  ld   $20
              aa6f 0071  ld   $71
              aa70 0022  ld   $22
              aa71 00c9  ld   $c9
              aa72 00a3  ld   $a3
              aa73 00d0  ld   $d0
              aa74 0006  ld   $06
              aa75 0020  ld   $20
              aa76 006b  ld   $6b
              aa77 0022  ld   $22
              aa78 0020  ld   $20
              aa79 00f6  ld   $f6
              aa7a 000d  ld   $0d
              aa7b 0020  ld   $20
              aa7c 00a3  ld   $a3
              aa7d 001c  ld   $1c
              aa7e 0020  ld   $20
              aa7f 00a4  ld   $a4
              aa80 000e  ld   $0e
              aa81 00a5  ld   $a5
              aa82 007c  ld   $7c
              aa83 0048  ld   $48
              aa84 00a5  ld   $a5
              aa85 007b  ld   $7b
              aa86 0048  ld   $48
              aa87 00a9  ld   $a9
              aa88 0081  ld   $81
              aa89 0048  ld   $48
              aa8a 0020  ld   $20
              aa8b 0000  ld   $00
              aa8c 002d  ld   $2d
              aa8d 00a5  ld   $a5
              aa8e 00a6  ld   $a6
              aa8f 00a4  ld   $a4
              aa90 00a7  ld   $a7
              aa91 00c0  ld   $c0
              aa92 0024  ld   $24
              aa93 00ea  ld   $ea
              aa94 00f0  ld   $f0
              aa95 0004  ld   $04
              aa96 0085  ld   $85
              aa97 006f  ld   $6f
              aa98 0084  ld   $84
              aa99 0070  ld   $70
              aa9a 00a0  ld   $a0
              aa9b 0000  ld   $00
              aa9c 00b1  ld   $b1
              aa9d 00a6  ld   $a6
              aa9e 00d0  ld   $d0
              aa9f 0040  ld   $40
              aaa0 00a0  ld   $a0
              aaa1 0002  ld   $02
              aaa2 00b1  ld   $b1
              aaa3 00a6  ld   $a6
              aaa4 0018  ld   $18
              aaa5 00d0  ld   $d0
              aaa6 0003  ld   $03
              aaa7 004c  ld   $4c
              aaa8 0042  ld   $42
              aaa9 0009  ld   $09
              aaaa 00c8  ld   $c8
              aaab 00b1  ld   $b1
              aaac 00a6  ld   $a6
              aaad 0085  ld   $85
              aaae 006b  ld   $6b
              aaaf 00c8  ld   $c8
              aab0 00b1  ld   $b1
              aab1 00a6  ld   $a6
              aab2 0085  ld   $85
              aab3 006c  ld   $6c
              aab4 0098  ld   $98
              aab5 0065  ld   $65
              aab6 00a6  ld   $a6
              aab7 0085  ld   $85
              aab8 00a6  ld   $a6
              aab9 0090  ld   $90
              aaba 0002  ld   $02
              aabb 00e6  ld   $e6
              aabc 00a7  ld   $a7
              aabd 0020  ld   $20
              aabe 006b  ld   $6b
              aabf 0022  ld   $22
              aac0 0020  ld   $20
              aac1 00e7  ld   $e7
              aac2 0008  ld   $08
              aac3 004c  ld   $4c
              aac4 00ab  ld   $ab
              aac5 0008  ld   $08
              aac6 00f0  ld   $f0
              aac7 003c  ld   $3c
              aac8 00e9  ld   $e9
              aac9 0080  ld   $80
              aaca 0090  ld   $90
              aacb 0011  ld   $11
              aacc 00c9  ld   $c9
              aacd 001d  ld   $1d
              aace 00b0  ld   $b0
              aacf 0017  ld   $17
              aad0 000a  ld   $0a
              aad1 00a8  ld   $a8
              aad2 00b9  ld   $b9
              aad3 0019  ld   $19
              aad4 0002  ld   $02
              aad5 0048  ld   $48
              aad6 00b9  ld   $b9
              aad7 0018  ld   $18
              aad8 0002  ld   $02
              aad9 0048  ld   $48
              aada 004c  ld   $4c
              aadb 006b  ld   $6b
              aadc 0022  ld   $22
              aadd 004c  ld   $4c
              aade 0094  ld   $94
              aadf 0009  ld   $09
              aae0 0000  ld   $00
              aae1 0000  ld   $00
              aae2 000a  ld   $0a
              aae3 00c9  ld   $c9
              aae4 003a  ld   $3a
              aae5 00f0  ld   $f0
              aae6 00d9  ld   $d9
              aae7 004c  ld   $4c
              aae8 006e  ld   $6e
              aae9 000f  ld   $0f
              aaea 00c9  ld   $c9
              aaeb 0045  ld   $45
              aaec 00d0  ld   $d0
              aaed 00f9  ld   $f9
              aaee 0020  ld   $20
              aaef 006b  ld   $6b
              aaf0 0022  ld   $22
              aaf1 00a9  ld   $a9
              aaf2 009e  ld   $9e
              aaf3 0020  ld   $20
              aaf4 0065  ld   $65
              aaf5 000f  ld   $0f
              aaf6 004c  ld   $4c
              aaf7 0094  ld   $94
              aaf8 0009  ld   $09
              aaf9 0038  ld   $38
              aafa 00a5  ld   $a5
              aafb fe00  bra  ac          ;+-----------------------------------+
              aafc fcfd  bra  $aafd       ;|                                   |
              aafd 1418  ld   $18,y       ;| Trampoline for page $aa00 lookups |
              aafe e006  jmp  y,$06       ;|                                   |
              aaff c218  st   [$18]       ;+-----------------------------------+
              ab00 005d  ld   $5d
              ab01 00e9  ld   $e9
              ab02 0001  ld   $01
              ab03 00a4  ld   $a4
              ab04 005e  ld   $5e
              ab05 00b0  ld   $b0
              ab06 0001  ld   $01
              ab07 0088  ld   $88
              ab08 0085  ld   $85
              ab09 0073  ld   $73
              ab0a 0084  ld   $84
              ab0b 0074  ld   $74
              ab0c 0060  ld   $60
              ab0d 00b0  ld   $b0
              ab0e 0001  ld   $01
              ab0f 0018  ld   $18
              ab10 00d0  ld   $d0
              ab11 0040  ld   $40
              ab12 00a5  ld   $a5
              ab13 00a6  ld   $a6
              ab14 00a4  ld   $a4
              ab15 00a7  ld   $a7
              ab16 00a6  ld   $a6
              ab17 006c  ld   $6c
              ab18 00e8  ld   $e8
              ab19 00f0  ld   $f0
              ab1a 000c  ld   $0c
              ab1b 0085  ld   $85
              ab1c 006f  ld   $6f
              ab1d 0084  ld   $84
              ab1e 0070  ld   $70
              ab1f 00a5  ld   $a5
              ab20 006b  ld   $6b
              ab21 00a4  ld   $a4
              ab22 006c  ld   $6c
              ab23 0085  ld   $85
              ab24 006d  ld   $6d
              ab25 0084  ld   $84
              ab26 006e  ld   $6e
              ab27 0068  ld   $68
              ab28 0068  ld   $68
              ab29 00a9  ld   $a9
              ab2a 009a  ld   $9a
              ab2b 00a0  ld   $a0
              ab2c 0004  ld   $04
              ab2d 00a2  ld   $a2
              ab2e 0000  ld   $00
              ab2f 0086  ld   $86
              ab30 0045  ld   $45
              ab31 0090  ld   $90
              ab32 0003  ld   $03
              ab33 004c  ld   $4c
              ab34 0066  ld   $66
              ab35 0005  ld   $05
              ab36 004c  ld   $4c
              ab37 0071  ld   $71
              ab38 0005  ld   $05
              ab39 00d0  ld   $d0
              ab3a 0017  ld   $17
              ab3b 00a2  ld   $a2
              ab3c 00d2  ld   $d2
              ab3d 00a4  ld   $a4
              ab3e 0070  ld   $70
              ab3f 00d0  ld   $d0
              ab40 0003  ld   $03
              ab41 004c  ld   $4c
              ab42 004a  ld   $4a
              ab43 0005  ld   $05
              ab44 00a5  ld   $a5
              ab45 006f  ld   $6f
              ab46 0085  ld   $85
              ab47 00a6  ld   $a6
              ab48 0084  ld   $84
              ab49 00a7  ld   $a7
              ab4a 00a5  ld   $a5
              ab4b 006d  ld   $6d
              ab4c 00a4  ld   $a4
              ab4d 006e  ld   $6e
              ab4e 0085  ld   $85
              ab4f 006b  ld   $6b
              ab50 0084  ld   $84
              ab51 006c  ld   $6c
              ab52 0060  ld   $60
              ab53 00d0  ld   $d0
              ab54 0003  ld   $03
              ab55 004c  ld   $4c
              ab56 0059  ld   $59
              ab57 0007  ld   $07
              ab58 0020  ld   $20
              ab59 0060  ld   $60
              ab5a 0007  ld   $07
              ab5b 004c  ld   $4c
              ab5c 008b  ld   $8b
              ab5d 0009  ld   $09
              ab5e 00a9  ld   $a9
              ab5f 0003  ld   $03
              ab60 0020  ld   $20
              ab61 000e  ld   $0e
              ab62 0005  ld   $05
              ab63 00a5  ld   $a5
              ab64 00a7  ld   $a7
              ab65 0048  ld   $48
              ab66 00a5  ld   $a5
              ab67 00a6  ld   $a6
              ab68 0048  ld   $48
              ab69 00a5  ld   $a5
              ab6a 006c  ld   $6c
              ab6b 0048  ld   $48
              ab6c 00a5  ld   $a5
              ab6d 006b  ld   $6b
              ab6e 0048  ld   $48
              ab6f 00a9  ld   $a9
              ab70 008c  ld   $8c
              ab71 0048  ld   $48
              ab72 0020  ld   $20
              ab73 0071  ld   $71
              ab74 0022  ld   $22
              ab75 0020  ld   $20
              ab76 0094  ld   $94
              ab77 0009  ld   $09
              ab78 004c  ld   $4c
              ab79 00ab  ld   $ab
              ab7a 0008  ld   $08
              ab7b 0020  ld   $20
              ab7c 005a  ld   $5a
              ab7d 000a  ld   $0a
              ab7e 0020  ld   $20
              ab7f 00f8  ld   $f8
              ab80 0009  ld   $09
              ab81 00a5  ld   $a5
              ab82 006c  ld   $6c
              ab83 00c5  ld   $c5
              ab84 0047  ld   $47
              ab85 00b0  ld   $b0
              ab86 000b  ld   $0b
              ab87 0098  ld   $98
              ab88 0038  ld   $38
              ab89 0065  ld   $65
              ab8a 00a6  ld   $a6
              ab8b 00a6  ld   $a6
              ab8c 00a7  ld   $a7
              ab8d 0090  ld   $90
              ab8e 0007  ld   $07
              ab8f 00e8  ld   $e8
              ab90 00b0  ld   $b0
              ab91 0004  ld   $04
              ab92 00a5  ld   $a5
              ab93 005d  ld   $5d
              ab94 00a6  ld   $a6
              ab95 005e  ld   $5e
              ab96 0020  ld   $20
              ab97 0017  ld   $17
              ab98 0007  ld   $07
              ab99 0090  ld   $90
              ab9a 001e  ld   $1e
              ab9b 00a5  ld   $a5
              ab9c 0092  ld   $92
              ab9d 00e9  ld   $e9
              ab9e 0001  ld   $01
              ab9f 0085  ld   $85
              aba0 00a6  ld   $a6
              aba1 00a5  ld   $a5
              aba2 0093  ld   $93
              aba3 00e9  ld   $e9
              aba4 0000  ld   $00
              aba5 0085  ld   $85
              aba6 00a7  ld   $a7
              aba7 0060  ld   $60
              aba8 00d0  ld   $d0
              aba9 00fd  ld   $fd
              abaa 00a9  ld   $a9
              abab 00ff  ld   $ff
              abac 0085  ld   $85
              abad 007c  ld   $7c
              abae 0020  ld   $20
              abaf 00a2  ld   $a2
              abb0 0004  ld   $04
              abb1 009a  ld   $9a
              abb2 00c9  ld   $c9
              abb3 008c  ld   $8c
              abb4 00f0  ld   $f0
              abb5 000b  ld   $0b
              abb6 00a2  ld   $a2
              abb7 0016  ld   $16
              abb8 002c  ld   $2c
              abb9 00a2  ld   $a2
              abba 005a  ld   $5a
              abbb 004c  ld   $4c
              abbc 004a  ld   $4a
              abbd 0005  ld   $05
              abbe 004c  ld   $4c
              abbf 006e  ld   $6e
              abc0 000f  ld   $0f
              abc1 0068  ld   $68
              abc2 0068  ld   $68
              abc3 0085  ld   $85
              abc4 006b  ld   $6b
              abc5 0068  ld   $68
              abc6 0085  ld   $85
              abc7 006c  ld   $6c
              abc8 0068  ld   $68
              abc9 0085  ld   $85
              abca 00a6  ld   $a6
              abcb 0068  ld   $68
              abcc 0085  ld   $85
              abcd 00a7  ld   $a7
              abce 0020  ld   $20
              abcf 00f5  ld   $f5
              abd0 0009  ld   $09
              abd1 0098  ld   $98
              abd2 0018  ld   $18
              abd3 0065  ld   $65
              abd4 00a6  ld   $a6
              abd5 0085  ld   $85
              abd6 00a6  ld   $a6
              abd7 0090  ld   $90
              abd8 0002  ld   $02
              abd9 00e6  ld   $e6
              abda 00a7  ld   $a7
              abdb 0060  ld   $60
              abdc 00a2  ld   $a2
              abdd 003a  ld   $3a
              abde 002c  ld   $2c
              abdf 00a2  ld   $a2
              abe0 0000  ld   $00
              abe1 0086  ld   $86
              abe2 003b  ld   $3b
              abe3 00a0  ld   $a0
              abe4 0000  ld   $00
              abe5 0084  ld   $84
              abe6 003c  ld   $3c
              abe7 000a  ld   $0a
              abe8 0000  ld   $00
              abe9 0000  ld   $00
              abea 00a5  ld   $a5
              abeb 003c  ld   $3c
              abec 00a6  ld   $a6
              abed 003b  ld   $3b
              abee 0085  ld   $85
              abef 003b  ld   $3b
              abf0 0086  ld   $86
              abf1 003c  ld   $3c
              abf2 00b1  ld   $b1
              abf3 00a6  ld   $a6
              abf4 00f0  ld   $f0
              abf5 00e8  ld   $e8
              abf6 00c5  ld   $c5
              abf7 003c  ld   $3c
              abf8 00f0  ld   $f0
              abf9 00e4  ld   $e4
              abfa 00c8  ld   $c8
              abfb fe00  bra  ac          ;+-----------------------------------+
              abfc fcfd  bra  $abfd       ;|                                   |
              abfd 1418  ld   $18,y       ;| Trampoline for page $ab00 lookups |
              abfe e006  jmp  y,$06       ;|                                   |
              abff c218  st   [$18]       ;+-----------------------------------+
              ac00 00c9  ld   $c9
              ac01 0022  ld   $22
              ac02 00d0  ld   $d0
              ac03 00f3  ld   $f3
              ac04 00f0  ld   $f0
              ac05 00e9  ld   $e9
              ac06 0020  ld   $20
              ac07 000a  ld   $0a
              ac08 000e  ld   $0e
              ac09 0020  ld   $20
              ac0a 0071  ld   $71
              ac0b 0022  ld   $22
              ac0c 00c9  ld   $c9
              ac0d 0088  ld   $88
              ac0e 00f0  ld   $f0
              ac0f 0005  ld   $05
              ac10 00a9  ld   $a9
              ac11 00a1  ld   $a1
              ac12 0020  ld   $20
              ac13 0065  ld   $65
              ac14 000f  ld   $0f
              ac15 00a5  ld   $a5
              ac16 0094  ld   $94
              ac17 00d0  ld   $d0
              ac18 0005  ld   $05
              ac19 0020  ld   $20
              ac1a 00f8  ld   $f8
              ac1b 0009  ld   $09
              ac1c 00f0  ld   $f0
              ac1d 00bb  ld   $bb
              ac1e 0020  ld   $20
              ac1f 0071  ld   $71
              ac20 0022  ld   $22
              ac21 00b0  ld   $b0
              ac22 0003  ld   $03
              ac23 004c  ld   $4c
              ac24 0094  ld   $94
              ac25 0009  ld   $09
              ac26 004c  ld   $4c
              ac27 00e7  ld   $e7
              ac28 0008  ld   $08
              ac29 0020  ld   $20
              ac2a 00da  ld   $da
              ac2b 0017  ld   $17
              ac2c 0048  ld   $48
              ac2d 00c9  ld   $c9
              ac2e 008c  ld   $8c
              ac2f 00f0  ld   $f0
              ac30 0004  ld   $04
              ac31 00c9  ld   $c9
              ac32 0088  ld   $88
              ac33 00d0  ld   $d0
              ac34 0091  ld   $91
              ac35 00c6  ld   $c6
              ac36 0098  ld   $98
              ac37 00d0  ld   $d0
              ac38 0004  ld   $04
              ac39 0068  ld   $68
              ac3a 004c  ld   $4c
              ac3b 00e9  ld   $e9
              ac3c 0008  ld   $08
              ac3d 0020  ld   $20
              ac3e 006b  ld   $6b
              ac3f 0022  ld   $22
              ac40 0020  ld   $20
              ac41 005a  ld   $5a
              ac42 000a  ld   $0a
              ac43 00c9  ld   $c9
              ac44 002c  ld   $2c
              ac45 00f0  ld   $f0
              ac46 00ee  ld   $ee
              ac47 0068  ld   $68
              ac48 0060  ld   $60
              ac49 00a2  ld   $a2
              ac4a 0000  ld   $00
              ac4b 0086  ld   $86
              ac4c 0046  ld   $46
              ac4d 0086  ld   $86
              ac4e 0047  ld   $47
              ac4f 00b0  ld   $b0
              ac50 00f7  ld   $f7
              ac51 00e9  ld   $e9
              ac52 002f  ld   $2f
              ac53 0085  ld   $85
              ac54 003b  ld   $3b
              ac55 00a5  ld   $a5
              ac56 0047  ld   $47
              ac57 0085  ld   $85
              ac58 0054  ld   $54
              ac59 00c9  ld   $c9
              ac5a 0019  ld   $19
              ac5b 00b0  ld   $b0
              ac5c 00d4  ld   $d4
              ac5d 00a5  ld   $a5
              ac5e 0046  ld   $46
              ac5f 000a  ld   $0a
              ac60 0026  ld   $26
              ac61 0054  ld   $54
              ac62 000a  ld   $0a
              ac63 0026  ld   $26
              ac64 0054  ld   $54
              ac65 0065  ld   $65
              ac66 0046  ld   $46
              ac67 0085  ld   $85
              ac68 0046  ld   $46
              ac69 00a5  ld   $a5
              ac6a 0054  ld   $54
              ac6b 0065  ld   $65
              ac6c 0047  ld   $47
              ac6d 0085  ld   $85
              ac6e 0047  ld   $47
              ac6f 0006  ld   $06
              ac70 0046  ld   $46
              ac71 0026  ld   $26
              ac72 0047  ld   $47
              ac73 00a5  ld   $a5
              ac74 0046  ld   $46
              ac75 0065  ld   $65
              ac76 003b  ld   $3b
              ac77 0085  ld   $85
              ac78 0046  ld   $46
              ac79 0090  ld   $90
              ac7a 0002  ld   $02
              ac7b 00e6  ld   $e6
              ac7c 0047  ld   $47
              ac7d 0020  ld   $20
              ac7e 006b  ld   $6b
              ac7f 0022  ld   $22
              ac80 004c  ld   $4c
              ac81 0060  ld   $60
              ac82 000a  ld   $0a
              ac83 0020  ld   $20
              ac84 00d0  ld   $d0
              ac85 0010  ld   $10
              ac86 0085  ld   $85
              ac87 007b  ld   $7b
              ac88 0084  ld   $84
              ac89 007c  ld   $7c
              ac8a 00a9  ld   $a9
              ac8b 00ac  ld   $ac
              ac8c 0020  ld   $20
              ac8d 0065  ld   $65
              ac8e 000f  ld   $0f
              ac8f 00a5  ld   $a5
              ac90 0040  ld   $40
              ac91 0048  ld   $48
              ac92 00a5  ld   $a5
              ac93 003f  ld   $3f
              ac94 0048  ld   $48
              ac95 0020  ld   $20
              ac96 000a  ld   $0a
              ac97 000e  ld   $0e
              ac98 0068  ld   $68
              ac99 002a  ld   $2a
              ac9a 0020  ld   $20
              ac9b 00fc  ld   $fc
              ac9c 000d  ld   $0d
              ac9d 00d0  ld   $d0
              ac9e 0018  ld   $18
              ac9f 0068  ld   $68
              aca0 0010  ld   $10
              aca1 0012  ld   $12
              aca2 0020  ld   $20
              aca3 0093  ld   $93
              aca4 001c  ld   $1c
              aca5 0020  ld   $20
              aca6 00fd  ld   $fd
              aca7 0011  ld   $11
              aca8 00a0  ld   $a0
              aca9 0000  ld   $00
              acaa 00a5  ld   $a5
              acab 0097  ld   $97
              acac 0091  ld   $91
              acad 007b  ld   $7b
              acae 00c8  ld   $c8
              acaf 00a5  ld   $a5
              acb0 0098  ld   $98
              acb1 0091  ld   $91
              acb2 007b  ld   $7b
              acb3 0060  ld   $60
              acb4 004c  ld   $4c
              acb5 0048  ld   $48
              acb6 001c  ld   $1c
              acb7 0068  ld   $68
              acb8 00a4  ld   $a4
              acb9 007c  ld   $7c
              acba 00c0  ld   $c0
              acbb 001f  ld   $1f
              acbc 00d0  ld   $d0
              acbd 0050  ld   $50
              acbe 0020  ld   $20
              acbf 00e2  ld   $e2
              acc0 0016  ld   $16
              acc1 00c9  ld   $c9
              acc2 0006  ld   $06
              acc3 00d0  ld   $d0
              acc4 0041  ld   $41
              acc5 00a0  ld   $a0
              acc6 0000  ld   $00
              acc7 0084  ld   $84
              acc8 0094  ld   $94
              acc9 0084  ld   $84
              acca 0099  ld   $99
              accb 0084  ld   $84
              accc 00a4  ld   $a4
              accd 0020  ld   $20
              acce 0010  ld   $10
              accf 000b  ld   $0b
              acd0 0020  ld   $20
              acd1 005a  ld   $5a
              acd2 001b  ld   $1b
              acd3 00e6  ld   $e6
              acd4 00a4  ld   $a4
              acd5 00a4  ld   $a4
              acd6 00a4  ld   $a4
              acd7 0020  ld   $20
              acd8 0010  ld   $10
              acd9 000b  ld   $0b
              acda 0020  ld   $20
              acdb 0084  ld   $84
              acdc 001c  ld   $1c
              acdd 00aa  ld   $aa
              acde 00f0  ld   $f0
              acdf 0005  ld   $05
              ace0 00e8  ld   $e8
              ace1 008a  ld   $8a
              ace2 0020  ld   $20
              ace3 0065  ld   $65
              ace4 001b  ld   $1b
              ace5 00a4  ld   $a4
              ace6 00a4  ld   $a4
              ace7 00c8  ld   $c8
              ace8 00c0  ld   $c0
              ace9 0006  ld   $06
              acea 00d0  ld   $d0
              aceb 00df  ld   $df
              acec 0020  ld   $20
              aced 005a  ld   $5a
              acee 001b  ld   $1b
              acef 000b  ld   $0b
              acf0 0000  ld   $00
              acf1 0000  ld   $00
              acf2 0020  ld   $20
              acf3 0013  ld   $13
              acf4 001d  ld   $1d
              acf5 00a2  ld   $a2
              acf6 0002  ld   $02
              acf7 0078  ld   $78
              acf8 00b5  ld   $b5
              acf9 0096  ld   $96
              acfa 009d  ld   $9d
              acfb fe00  bra  ac          ;+-----------------------------------+
              acfc fcfd  bra  $acfd       ;|                                   |
              acfd 1418  ld   $18,y       ;| Trampoline for page $ac00 lookups |
              acfe e006  jmp  y,$06       ;|                                   |
              acff c218  st   [$18]       ;+-----------------------------------+
              ad00 0000  ld   $00
              ad01 0002  ld   $02
              ad02 00ca  ld   $ca
              ad03 0010  ld   $10
              ad04 00f8  ld   $f8
              ad05 0058  ld   $58
              ad06 0060  ld   $60
              ad07 00b1  ld   $b1
              ad08 0054  ld   $54
              ad09 0020  ld   $20
              ad0a 007d  ld   $7d
              ad0b 0022  ld   $22
              ad0c 0090  ld   $90
              ad0d 0003  ld   $03
              ad0e 004c  ld   $4c
              ad0f 0082  ld   $82
              ad10 0012  ld   $12
              ad11 00e9  ld   $e9
              ad12 002f  ld   $2f
              ad13 004c  ld   $4c
              ad14 00f6  ld   $f6
              ad15 001d  ld   $1d
              ad16 00a0  ld   $a0
              ad17 0002  ld   $02
              ad18 00b1  ld   $b1
              ad19 0097  ld   $97
              ad1a 00c5  ld   $c5
              ad1b 0066  ld   $66
              ad1c 0090  ld   $90
              ad1d 0017  ld   $17
              ad1e 00d0  ld   $d0
              ad1f 0007  ld   $07
              ad20 0088  ld   $88
              ad21 00b1  ld   $b1
              ad22 0097  ld   $97
              ad23 00c5  ld   $c5
              ad24 0065  ld   $65
              ad25 0090  ld   $90
              ad26 000e  ld   $0e
              ad27 00a4  ld   $a4
              ad28 0098  ld   $98
              ad29 00c4  ld   $c4
              ad2a 0060  ld   $60
              ad2b 0090  ld   $90
              ad2c 0008  ld   $08
              ad2d 00d0  ld   $d0
              ad2e 000d  ld   $0d
              ad2f 00a5  ld   $a5
              ad30 0097  ld   $97
              ad31 00c5  ld   $c5
              ad32 005f  ld   $5f
              ad33 00b0  ld   $b0
              ad34 0007  ld   $07
              ad35 00a5  ld   $a5
              ad36 0097  ld   $97
              ad37 00a4  ld   $a4
              ad38 0098  ld   $98
              ad39 004c  ld   $4c
              ad3a 005b  ld   $5b
              ad3b 000b  ld   $0b
              ad3c 00a0  ld   $a0
              ad3d 0000  ld   $00
              ad3e 00b1  ld   $b1
              ad3f 0097  ld   $97
              ad40 0020  ld   $20
              ad41 00b1  ld   $b1
              ad42 0014  ld   $14
              ad43 00a5  ld   $a5
              ad44 0083  ld   $83
              ad45 00a4  ld   $a4
              ad46 0084  ld   $84
              ad47 0085  ld   $85
              ad48 00a2  ld   $a2
              ad49 0084  ld   $84
              ad4a 00a3  ld   $a3
              ad4b 0020  ld   $20
              ad4c 00b6  ld   $b6
              ad4d 0016  ld   $16
              ad4e 00a9  ld   $a9
              ad4f 0094  ld   $94
              ad50 00a0  ld   $a0
              ad51 0000  ld   $00
              ad52 0085  ld   $85
              ad53 0083  ld   $83
              ad54 0084  ld   $84
              ad55 0084  ld   $84
              ad56 0020  ld   $20
              ad57 0017  ld   $17
              ad58 0017  ld   $17
              ad59 00a0  ld   $a0
              ad5a 0000  ld   $00
              ad5b 00b1  ld   $b1
              ad5c 0083  ld   $83
              ad5d 0091  ld   $91
              ad5e 007b  ld   $7b
              ad5f 00c8  ld   $c8
              ad60 00b1  ld   $b1
              ad61 0083  ld   $83
              ad62 0091  ld   $91
              ad63 007b  ld   $7b
              ad64 00c8  ld   $c8
              ad65 00b1  ld   $b1
              ad66 0083  ld   $83
              ad67 0091  ld   $91
              ad68 007b  ld   $7b
              ad69 0060  ld   $60
              ad6a 0020  ld   $20
              ad6b 00f2  ld   $f2
              ad6c 000b  ld   $0b
              ad6d 0020  ld   $20
              ad6e 0071  ld   $71
              ad6f 0022  ld   $22
              ad70 00f0  ld   $f0
              ad71 0031  ld   $31
              ad72 00f0  ld   $f0
              ad73 003b  ld   $3b
              ad74 00c9  ld   $c9
              ad75 009d  ld   $9d
              ad76 00f0  ld   $f0
              ad77 0049  ld   $49
              ad78 00c9  ld   $c9
              ad79 00a0  ld   $a0
              ad7a 0018  ld   $18
              ad7b 00f0  ld   $f0
              ad7c 0044  ld   $44
              ad7d 00c9  ld   $c9
              ad7e 002c  ld   $2c
              ad7f 00f0  ld   $f0
              ad80 002f  ld   $2f
              ad81 00c9  ld   $c9
              ad82 003b  ld   $3b
              ad83 00f0  ld   $f0
              ad84 0056  ld   $56
              ad85 0020  ld   $20
              ad86 000a  ld   $0a
              ad87 000e  ld   $0e
              ad88 0024  ld   $24
              ad89 003f  ld   $3f
              ad8a 0030  ld   $30
              ad8b 00de  ld   $de
              ad8c 0020  ld   $20
              ad8d 0055  ld   $55
              ad8e 001e  ld   $1e
              ad8f 0020  ld   $20
              ad90 00c3  ld   $c3
              ad91 0014  ld   $14
              ad92 0020  ld   $20
              ad93 00f2  ld   $f2
              ad94 000b  ld   $0b
              ad95 0020  ld   $20
              ad96 000c  ld   $0c
              ad97 000c  ld   $0c
              ad98 00d0  ld   $d0
              ad99 00d3  ld   $d3
              ad9a 00a9  ld   $a9
              ad9b 0000  ld   $00
              ad9c 009d  ld   $9d
              ad9d 0005  ld   $05
              ad9e 0024  ld   $24
              ad9f 00a2  ld   $a2
              ada0 0004  ld   $04
              ada1 00a0  ld   $a0
              ada2 0024  ld   $24
              ada3 00a9  ld   $a9
              ada4 000d  ld   $0d
              ada5 0020  ld   $20
              ada6 0011  ld   $11
              ada7 000c  ld   $0c
              ada8 00a9  ld   $a9
              ada9 000a  ld   $0a
              adaa 0020  ld   $20
              adab 0011  ld   $11
              adac 000c  ld   $0c
              adad 0049  ld   $49
              adae 00ff  ld   $ff
              adaf 0060  ld   $60
              adb0 00a5  ld   $a5
              adb1 0030  ld   $30
              adb2 0020  ld   $20
              adb3 007a  ld   $7a
              adb4 0004  ld   $04
              adb5 0098  ld   $98
              adb6 0038  ld   $38
              adb7 00e9  ld   $e9
              adb8 000a  ld   $0a
              adb9 00b0  ld   $b0
              adba 00fc  ld   $fc
              adbb 0049  ld   $49
              adbc 00ff  ld   $ff
              adbd 0069  ld   $69
              adbe 0001  ld   $01
              adbf 00d0  ld   $d0
              adc0 0015  ld   $15
              adc1 0008  ld   $08
              adc2 0020  ld   $20
              adc3 00d7  ld   $d7
              adc4 0017  ld   $17
              adc5 00c9  ld   $c9
              adc6 0029  ld   $29
              adc7 00d0  ld   $d0
              adc8 005b  ld   $5b
              adc9 0028  ld   $28
              adca 0090  ld   $90
              adcb 000b  ld   $0b
              adcc 00a5  ld   $a5
              adcd 0030  ld   $30
              adce 0020  ld   $20
              adcf 007a  ld   $7a
              add0 0004  ld   $04
              add1 008a  ld   $8a
              add2 00e5  ld   $e5
              add3 002b  ld   $2b
              add4 0090  ld   $90
              add5 0005  ld   $05
              add6 00aa  ld   $aa
              add7 00e8  ld   $e8
              add8 00ca  ld   $ca
              add9 00d0  ld   $d0
              adda 0006  ld   $06
              addb 0020  ld   $20
              addc 006b  ld   $6b
              addd 0022  ld   $22
              adde 004c  ld   $4c
              addf 007b  ld   $7b
              ade0 000b  ld   $0b
              ade1 0020  ld   $20
              ade2 000c  ld   $0c
              ade3 000c  ld   $0c
              ade4 00d0  ld   $d0
              ade5 00f2  ld   $f2
              ade6 0020  ld   $20
              ade7 00c3  ld   $c3
              ade8 0014  ld   $14
              ade9 0020  ld   $20
              adea 00e2  ld   $e2
              adeb 0016  ld   $16
              adec 00aa  ld   $aa
              aded 00a0  ld   $a0
              adee 0000  ld   $00
              adef 00e8  ld   $e8
              adf0 00ca  ld   $ca
              adf1 00f0  ld   $f0
              adf2 00bc  ld   $bc
              adf3 00b1  ld   $b1
              adf4 0054  ld   $54
              adf5 0020  ld   $20
              adf6 0011  ld   $11
              adf7 000c  ld   $0c
              adf8 0000  ld   $00
              adf9 0000  ld   $00
              adfa 000c  ld   $0c
              adfb fe00  bra  ac          ;+-----------------------------------+
              adfc fcfd  bra  $adfd       ;|                                   |
              adfd 1418  ld   $18,y       ;| Trampoline for page $ad00 lookups |
              adfe e006  jmp  y,$06       ;|                                   |
              adff c218  st   [$18]       ;+-----------------------------------+
              ae00 00c8  ld   $c8
              ae01 00c9  ld   $c9
              ae02 000d  ld   $0d
              ae03 00d0  ld   $d0
              ae04 00f3  ld   $f3
              ae05 0020  ld   $20
              ae06 00b6  ld   $b6
              ae07 000b  ld   $0b
              ae08 004c  ld   $4c
              ae09 00f9  ld   $f9
              ae0a 000b  ld   $0b
              ae0b 00a9  ld   $a9
              ae0c 0020  ld   $20
              ae0d 002c  ld   $2c
              ae0e 00a9  ld   $a9
              ae0f 003f  ld   $3f
              ae10 0024  ld   $24
              ae11 0045  ld   $45
              ae12 0030  ld   $30
              ae13 0003  ld   $03
              ae14 0020  ld   $20
              ae15 0000  ld   $00
              ae16 002b  ld   $2b
              ae17 0029  ld   $29
              ae18 00ff  ld   $ff
              ae19 0060  ld   $60
              ae1a 00a5  ld   $a5
              ae1b 0043  ld   $43
              ae1c 00f0  ld   $f0
              ae1d 0011  ld   $11
              ae1e 0030  ld   $30
              ae1f 0004  ld   $04
              ae20 00a0  ld   $a0
              ae21 00ff  ld   $ff
              ae22 00d0  ld   $d0
              ae23 0004  ld   $04
              ae24 00a5  ld   $a5
              ae25 0071  ld   $71
              ae26 00a4  ld   $a4
              ae27 0072  ld   $72
              ae28 0085  ld   $85
              ae29 006b  ld   $6b
              ae2a 0084  ld   $84
              ae2b 006c  ld   $6c
              ae2c 004c  ld   $4c
              ae2d 006e  ld   $6e
              ae2e 000f  ld   $0f
              ae2f 00a9  ld   $a9
              ae30 007e  ld   $7e
              ae31 00a0  ld   $a0
              ae32 000d  ld   $0d
              ae33 0020  ld   $20
              ae34 00ef  ld   $ef
              ae35 000b  ld   $0b
              ae36 00a5  ld   $a5
              ae37 006f  ld   $6f
              ae38 00a4  ld   $a4
              ae39 0070  ld   $70
              ae3a 0085  ld   $85
              ae3b 00a6  ld   $a6
              ae3c 0084  ld   $84
              ae3d 00a7  ld   $a7
              ae3e 0060  ld   $60
              ae3f 0020  ld   $20
              ae40 00e2  ld   $e2
              ae41 0013  ld   $13
              ae42 00a2  ld   $a2
              ae43 0006  ld   $06
              ae44 00a0  ld   $a0
              ae45 0024  ld   $24
              ae46 00a9  ld   $a9
              ae47 0000  ld   $00
              ae48 008d  ld   $8d
              ae49 0006  ld   $06
              ae4a 0024  ld   $24
              ae4b 00a9  ld   $a9
              ae4c 0040  ld   $40
              ae4d 0020  ld   $20
              ae4e 0089  ld   $89
              ae4f 000c  ld   $0c
              ae50 0060  ld   $60
              ae51 0046  ld   $46
              ae52 0045  ld   $45
              ae53 00c9  ld   $c9
              ae54 0022  ld   $22
              ae55 00d0  ld   $d0
              ae56 000b  ld   $0b
              ae57 0020  ld   $20
              ae58 0023  ld   $23
              ae59 000f  ld   $0f
              ae5a 00a9  ld   $a9
              ae5b 003b  ld   $3b
              ae5c 0020  ld   $20
              ae5d 0065  ld   $65
              ae5e 000f  ld   $0f
              ae5f 0020  ld   $20
              ae60 00f2  ld   $f2
              ae61 000b  ld   $0b
              ae62 0020  ld   $20
              ae63 00e2  ld   $e2
              ae64 0013  ld   $13
              ae65 00a9  ld   $a9
              ae66 002c  ld   $2c
              ae67 008d  ld   $8d
              ae68 0004  ld   $04
              ae69 0024  ld   $24
              ae6a 0020  ld   $20
              ae6b 0077  ld   $77
              ae6c 000c  ld   $0c
              ae6d 00ad  ld   $ad
              ae6e 0005  ld   $05
              ae6f 0024  ld   $24
              ae70 00d0  ld   $d0
              ae71 0014  ld   $14
              ae72 0018  ld   $18
              ae73 004c  ld   $4c
              ae74 0038  ld   $38
              ae75 0009  ld   $09
              ae76 0020  ld   $20
              ae77 000f  ld   $0f
              ae78 000c  ld   $0c
              ae79 0020  ld   $20
              ae7a 000c  ld   $0c
              ae7b 000c  ld   $0c
              ae7c 004c  ld   $4c
              ae7d 0057  ld   $57
              ae7e 0006  ld   $06
              ae7f 00a6  ld   $a6
              ae80 0073  ld   $73
              ae81 00a4  ld   $a4
              ae82 0074  ld   $74
              ae83 00a9  ld   $a9
              ae84 0098  ld   $98
              ae85 002c  ld   $2c
              ae86 00a9  ld   $a9
              ae87 0000  ld   $00
              ae88 0085  ld   $85
              ae89 0043  ld   $43
              ae8a 0086  ld   $86
              ae8b 0075  ld   $75
              ae8c 0084  ld   $84
              ae8d 0076  ld   $76
              ae8e 0020  ld   $20
              ae8f 00d0  ld   $d0
              ae90 0010  ld   $10
              ae91 0085  ld   $85
              ae92 007b  ld   $7b
              ae93 0084  ld   $84
              ae94 007c  ld   $7c
              ae95 00a5  ld   $a5
              ae96 00a6  ld   $a6
              ae97 00a4  ld   $a4
              ae98 00a7  ld   $a7
              ae99 0085  ld   $85
              ae9a 007d  ld   $7d
              ae9b 0084  ld   $84
              ae9c 007e  ld   $7e
              ae9d 00a6  ld   $a6
              ae9e 0075  ld   $75
              ae9f 00a4  ld   $a4
              aea0 0076  ld   $76
              aea1 0086  ld   $86
              aea2 00a6  ld   $a6
              aea3 0084  ld   $84
              aea4 00a7  ld   $a7
              aea5 0020  ld   $20
              aea6 0071  ld   $71
              aea7 0022  ld   $22
              aea8 00d0  ld   $d0
              aea9 001c  ld   $1c
              aeaa 0024  ld   $24
              aeab 0043  ld   $43
              aeac 0050  ld   $50
              aead 000c  ld   $0c
              aeae 0020  ld   $20
              aeaf 0000  ld   $00
              aeb0 002c  ld   $2c
              aeb1 008d  ld   $8d
              aeb2 0005  ld   $05
              aeb3 0024  ld   $24
              aeb4 00a2  ld   $a2
              aeb5 0004  ld   $04
              aeb6 00a0  ld   $a0
              aeb7 0024  ld   $24
              aeb8 00d0  ld   $d0
              aeb9 0008  ld   $08
              aeba 0030  ld   $30
              aebb 0071  ld   $71
              aebc 0020  ld   $20
              aebd 000f  ld   $0f
              aebe 000c  ld   $0c
              aebf 0020  ld   $20
              aec0 0077  ld   $77
              aec1 000c  ld   $0c
              aec2 0086  ld   $86
              aec3 00a6  ld   $a6
              aec4 0084  ld   $84
              aec5 00a7  ld   $a7
              aec6 0020  ld   $20
              aec7 006b  ld   $6b
              aec8 0022  ld   $22
              aec9 0024  ld   $24
              aeca 003f  ld   $3f
              aecb 0010  ld   $10
              aecc 0031  ld   $31
              aecd 0024  ld   $24
              aece 0043  ld   $43
              aecf 0050  ld   $50
              aed0 0009  ld   $09
              aed1 00e8  ld   $e8
              aed2 0086  ld   $86
              aed3 00a6  ld   $a6
              aed4 00a9  ld   $a9
              aed5 0000  ld   $00
              aed6 0085  ld   $85
              aed7 003b  ld   $3b
              aed8 00f0  ld   $f0
              aed9 000c  ld   $0c
              aeda 0085  ld   $85
              aedb 003b  ld   $3b
              aedc 00c9  ld   $c9
              aedd 0022  ld   $22
              aede 00f0  ld   $f0
              aedf 0007  ld   $07
              aee0 00a9  ld   $a9
              aee1 003a  ld   $3a
              aee2 0085  ld   $85
              aee3 003b  ld   $3b
              aee4 00a9  ld   $a9
              aee5 002c  ld   $2c
              aee6 0018  ld   $18
              aee7 0085  ld   $85
              aee8 003c  ld   $3c
              aee9 00a5  ld   $a5
              aeea 00a6  ld   $a6
              aeeb 00a4  ld   $a4
              aeec 00a7  ld   $a7
              aeed 0069  ld   $69
              aeee 0000  ld   $00
              aeef 0090  ld   $90
              aef0 0001  ld   $01
              aef1 00c8  ld   $c8
              aef2 0020  ld   $20
              aef3 00c9  ld   $c9
              aef4 0014  ld   $14
              aef5 0020  ld   $20
              aef6 001f  ld   $1f
              aef7 0018  ld   $18
              aef8 0020  ld   $20
              aef9 00c9  ld   $c9
              aefa 000a  ld   $0a
              aefb fe00  bra  ac          ;+-----------------------------------+
              aefc fcfd  bra  $aefd       ;|                                   |
              aefd 1418  ld   $18,y       ;| Trampoline for page $ae00 lookups |
              aefe e006  jmp  y,$06       ;|                                   |
              aeff c218  st   [$18]       ;+-----------------------------------+
              af00 004c  ld   $4c
              af01 0007  ld   $07
              af02 000d  ld   $0d
              af03 0020  ld   $20
              af04 000d  ld   $0d
              af05 0000  ld   $00
              af06 0000  ld   $00
              af07 006b  ld   $6b
              af08 001d  ld   $1d
              af09 00a5  ld   $a5
              af0a 0040  ld   $40
              af0b 0020  ld   $20
              af0c 00b1  ld   $b1
              af0d 000a  ld   $0a
              af0e 0020  ld   $20
              af0f 0071  ld   $71
              af10 0022  ld   $22
              af11 00f0  ld   $f0
              af12 0007  ld   $07
              af13 00c9  ld   $c9
              af14 002c  ld   $2c
              af15 00f0  ld   $f0
              af16 0003  ld   $03
              af17 004c  ld   $4c
              af18 001b  ld   $1b
              af19 000c  ld   $0c
              af1a 00a5  ld   $a5
              af1b 00a6  ld   $a6
              af1c 00a4  ld   $a4
              af1d 00a7  ld   $a7
              af1e 0085  ld   $85
              af1f 0075  ld   $75
              af20 0084  ld   $84
              af21 0076  ld   $76
              af22 00a5  ld   $a5
              af23 007d  ld   $7d
              af24 00a4  ld   $a4
              af25 007e  ld   $7e
              af26 0085  ld   $85
              af27 00a6  ld   $a6
              af28 0084  ld   $84
              af29 00a7  ld   $a7
              af2a 0020  ld   $20
              af2b 0071  ld   $71
              af2c 0022  ld   $22
              af2d 00f0  ld   $f0
              af2e 002c  ld   $2c
              af2f 0020  ld   $20
              af30 0063  ld   $63
              af31 000f  ld   $0f
              af32 004c  ld   $4c
              af33 008f  ld   $8f
              af34 000c  ld   $0c
              af35 0020  ld   $20
              af36 00f5  ld   $f5
              af37 0009  ld   $09
              af38 00c8  ld   $c8
              af39 00aa  ld   $aa
              af3a 00d0  ld   $d0
              af3b 0012  ld   $12
              af3c 00a2  ld   $a2
              af3d 002a  ld   $2a
              af3e 00c8  ld   $c8
              af3f 00b1  ld   $b1
              af40 00a6  ld   $a6
              af41 00f0  ld   $f0
              af42 0069  ld   $69
              af43 00c8  ld   $c8
              af44 00b1  ld   $b1
              af45 00a6  ld   $a6
              af46 0085  ld   $85
              af47 0071  ld   $71
              af48 00c8  ld   $c8
              af49 00b1  ld   $b1
              af4a 00a6  ld   $a6
              af4b 00c8  ld   $c8
              af4c 0085  ld   $85
              af4d 0072  ld   $72
              af4e 00b1  ld   $b1
              af4f 00a6  ld   $a6
              af50 00aa  ld   $aa
              af51 0020  ld   $20
              af52 00ea  ld   $ea
              af53 0009  ld   $09
              af54 00e0  ld   $e0
              af55 0083  ld   $83
              af56 00d0  ld   $d0
              af57 00dd  ld   $dd
              af58 004c  ld   $4c
              af59 00c7  ld   $c7
              af5a 000c  ld   $0c
              af5b 00a5  ld   $a5
              af5c 0075  ld   $75
              af5d 00a4  ld   $a4
              af5e 0076  ld   $76
              af5f 00a6  ld   $a6
              af60 0043  ld   $43
              af61 0010  ld   $10
              af62 0003  ld   $03
              af63 004c  ld   $4c
              af64 0021  ld   $21
              af65 0009  ld   $09
              af66 00a0  ld   $a0
              af67 0000  ld   $00
              af68 00b1  ld   $b1
              af69 0075  ld   $75
              af6a 00f0  ld   $f0
              af6b 0007  ld   $07
              af6c 00a9  ld   $a9
              af6d 006d  ld   $6d
              af6e 00a0  ld   $a0
              af6f 000d  ld   $0d
              af70 004c  ld   $4c
              af71 00ef  ld   $ef
              af72 000b  ld   $0b
              af73 0060  ld   $60
              af74 003f  ld   $3f
              af75 0045  ld   $45
              af76 0058  ld   $58
              af77 0054  ld   $54
              af78 0052  ld   $52
              af79 0041  ld   $41
              af7a 0020  ld   $20
              af7b 0049  ld   $49
              af7c 0047  ld   $47
              af7d 004e  ld   $4e
              af7e 004f  ld   $4f
              af7f 0052  ld   $52
              af80 0045  ld   $45
              af81 0044  ld   $44
              af82 000d  ld   $0d
              af83 000a  ld   $0a
              af84 0000  ld   $00
              af85 003f  ld   $3f
              af86 0052  ld   $52
              af87 0045  ld   $45
              af88 0044  ld   $44
              af89 004f  ld   $4f
              af8a 0020  ld   $20
              af8b 0046  ld   $46
              af8c 0052  ld   $52
              af8d 004f  ld   $4f
              af8e 004d  ld   $4d
              af8f 0020  ld   $20
              af90 0053  ld   $53
              af91 0054  ld   $54
              af92 0041  ld   $41
              af93 0052  ld   $52
              af94 0054  ld   $54
              af95 000d  ld   $0d
              af96 000a  ld   $0a
              af97 0000  ld   $00
              af98 00d0  ld   $d0
              af99 0004  ld   $04
              af9a 00a0  ld   $a0
              af9b 0000  ld   $00
              af9c 00f0  ld   $f0
              af9d 0003  ld   $03
              af9e 0020  ld   $20
              af9f 00d0  ld   $d0
              afa0 0010  ld   $10
              afa1 0085  ld   $85
              afa2 007b  ld   $7b
              afa3 0084  ld   $84
              afa4 007c  ld   $7c
              afa5 0020  ld   $20
              afa6 00a2  ld   $a2
              afa7 0004  ld   $04
              afa8 00f0  ld   $f0
              afa9 0004  ld   $04
              afaa 00a2  ld   $a2
              afab 0000  ld   $00
              afac 00f0  ld   $f0
              afad 0060  ld   $60
              afae 009a  ld   $9a
              afaf 008a  ld   $8a
              afb0 0018  ld   $18
              afb1 0069  ld   $69
              afb2 0004  ld   $04
              afb3 0048  ld   $48
              afb4 0069  ld   $69
              afb5 0006  ld   $06
              afb6 0085  ld   $85
              afb7 0056  ld   $56
              afb8 0068  ld   $68
              afb9 00a0  ld   $a0
              afba 0000  ld   $00
              afbb 0020  ld   $20
              afbc 001a  ld   $1a
              afbd 001c  ld   $1c
              afbe 00ba  ld   $ba
              afbf 00b5  ld   $b5
              afc0 0009  ld   $09
              afc1 0085  ld   $85
              afc2 0099  ld   $99
              afc3 00a5  ld   $a5
              afc4 007b  ld   $7b
              afc5 00a4  ld   $a4
              afc6 007c  ld   $7c
              afc7 0020  ld   $20
              afc8 00df  ld   $df
              afc9 0018  ld   $18
              afca 0020  ld   $20
              afcb 0048  ld   $48
              afcc 001c  ld   $1c
              afcd 00a0  ld   $a0
              afce 0000  ld   $00
              afcf 0020  ld   $20
              afd0 00d5  ld   $d5
              afd1 001c  ld   $1c
              afd2 00ba  ld   $ba
              afd3 0038  ld   $38
              afd4 00f5  ld   $f5
              afd5 0009  ld   $09
              afd6 00f0  ld   $f0
              afd7 0013  ld   $13
              afd8 00b5  ld   $b5
              afd9 000f  ld   $0f
              afda 0085  ld   $85
              afdb 006b  ld   $6b
              afdc 00b5  ld   $b5
              afdd 0010  ld   $10
              afde 0085  ld   $85
              afdf 006c  ld   $6c
              afe0 00b5  ld   $b5
              afe1 0012  ld   $12
              afe2 0085  ld   $85
              afe3 00a6  ld   $a6
              afe4 00b5  ld   $b5
              afe5 0011  ld   $11
              afe6 0085  ld   $85
              afe7 00a7  ld   $a7
              afe8 004c  ld   $4c
              afe9 00ab  ld   $ab
              afea 0008  ld   $08
              afeb 008a  ld   $8a
              afec 0069  ld   $69
              afed 0011  ld   $11
              afee 00aa  ld   $aa
              afef 009a  ld   $9a
              aff0 0020  ld   $20
              aff1 0071  ld   $71
              aff2 0022  ld   $22
              aff3 00c9  ld   $c9
              aff4 002c  ld   $2c
              aff5 00d0  ld   $d0
              aff6 00f1  ld   $f1
              aff7 0020  ld   $20
              aff8 006b  ld   $6b
              aff9 0022  ld   $22
              affa 0020  ld   $20
              affb fe00  bra  ac          ;+-----------------------------------+
              affc fcfd  bra  $affd       ;|                                   |
              affd 1418  ld   $18,y       ;| Trampoline for page $af00 lookups |
              affe e006  jmp  y,$06       ;|                                   |
              afff c218  st   [$18]       ;+-----------------------------------+
              b000 0097  ld   $97
              b001 000d  ld   $0d
              b002 0020  ld   $20
              b003 000a  ld   $0a
              b004 000e  ld   $0e
              b005 0018  ld   $18
              b006 0024  ld   $24
              b007 0038  ld   $38
              b008 0024  ld   $24
              b009 003f  ld   $3f
              b00a 0030  ld   $30
              b00b 0003  ld   $03
              b00c 000e  ld   $0e
              b00d 0000  ld   $00
              b00e 0000  ld   $00
              b00f 00b0  ld   $b0
              b010 0003  ld   $03
              b011 0060  ld   $60
              b012 00b0  ld   $b0
              b013 00fd  ld   $fd
              b014 00a2  ld   $a2
              b015 00a3  ld   $a3
              b016 004c  ld   $4c
              b017 004a  ld   $4a
              b018 0005  ld   $05
              b019 00a6  ld   $a6
              b01a 00a6  ld   $a6
              b01b 00d0  ld   $d0
              b01c 0002  ld   $02
              b01d 00c6  ld   $c6
              b01e 00a7  ld   $a7
              b01f 00c6  ld   $c6
              b020 00a6  ld   $a6
              b021 00a2  ld   $a2
              b022 0000  ld   $00
              b023 0024  ld   $24
              b024 0048  ld   $48
              b025 008a  ld   $8a
              b026 0048  ld   $48
              b027 00a9  ld   $a9
              b028 0001  ld   $01
              b029 0020  ld   $20
              b02a 000e  ld   $0e
              b02b 0005  ld   $05
              b02c 0020  ld   $20
              b02d 00ef  ld   $ef
              b02e 000e  ld   $0e
              b02f 00a9  ld   $a9
              b030 0000  ld   $00
              b031 0085  ld   $85
              b032 007f  ld   $7f
              b033 0020  ld   $20
              b034 0071  ld   $71
              b035 0022  ld   $22
              b036 0038  ld   $38
              b037 00e9  ld   $e9
              b038 00ab  ld   $ab
              b039 0090  ld   $90
              b03a 0017  ld   $17
              b03b 00c9  ld   $c9
              b03c 0003  ld   $03
              b03d 00b0  ld   $b0
              b03e 0013  ld   $13
              b03f 00c9  ld   $c9
              b040 0001  ld   $01
              b041 002a  ld   $2a
              b042 0049  ld   $49
              b043 0001  ld   $01
              b044 0045  ld   $45
              b045 007f  ld   $7f
              b046 00c5  ld   $c5
              b047 007f  ld   $7f
              b048 0090  ld   $90
              b049 0061  ld   $61
              b04a 0085  ld   $85
              b04b 007f  ld   $7f
              b04c 0020  ld   $20
              b04d 006b  ld   $6b
              b04e 0022  ld   $22
              b04f 004c  ld   $4c
              b050 0027  ld   $27
              b051 000e  ld   $0e
              b052 00a6  ld   $a6
              b053 007f  ld   $7f
              b054 00d0  ld   $d0
              b055 002c  ld   $2c
              b056 00b0  ld   $b0
              b057 007b  ld   $7b
              b058 0069  ld   $69
              b059 0007  ld   $07
              b05a 0090  ld   $90
              b05b 0077  ld   $77
              b05c 0065  ld   $65
              b05d 003f  ld   $3f
              b05e 00d0  ld   $d0
              b05f 0003  ld   $03
              b060 004c  ld   $4c
              b061 0079  ld   $79
              b062 0016  ld   $16
              b063 0069  ld   $69
              b064 00ff  ld   $ff
              b065 0085  ld   $85
              b066 0054  ld   $54
              b067 000a  ld   $0a
              b068 0065  ld   $65
              b069 0054  ld   $54
              b06a 00a8  ld   $a8
              b06b 0068  ld   $68
              b06c 00d9  ld   $d9
              b06d 0080  ld   $80
              b06e 0002  ld   $02
              b06f 00b0  ld   $b0
              b070 0067  ld   $67
              b071 0020  ld   $20
              b072 00f9  ld   $f9
              b073 000d  ld   $0d
              b074 0048  ld   $48
              b075 0020  ld   $20
              b076 008c  ld   $8c
              b077 000e  ld   $0e
              b078 0068  ld   $68
              b079 00a4  ld   $a4
              b07a 007d  ld   $7d
              b07b 0010  ld   $10
              b07c 0017  ld   $17
              b07d 00aa  ld   $aa
              b07e 00f0  ld   $f0
              b07f 0056  ld   $56
              b080 00d0  ld   $d0
              b081 005f  ld   $5f
              b082 0046  ld   $46
              b083 003f  ld   $3f
              b084 008a  ld   $8a
              b085 002a  ld   $2a
              b086 00a6  ld   $a6
              b087 00a6  ld   $a6
              b088 00d0  ld   $d0
              b089 0002  ld   $02
              b08a 00c6  ld   $c6
              b08b 00a7  ld   $a7
              b08c 00c6  ld   $c6
              b08d 00a6  ld   $a6
              b08e 00a0  ld   $a0
              b08f 001b  ld   $1b
              b090 0085  ld   $85
              b091 007f  ld   $7f
              b092 00d0  ld   $d0
              b093 00d7  ld   $d7
              b094 00d9  ld   $d9
              b095 0080  ld   $80
              b096 0002  ld   $02
              b097 00b0  ld   $b0
              b098 0048  ld   $48
              b099 0090  ld   $90
              b09a 00d9  ld   $d9
              b09b 00b9  ld   $b9
              b09c 0082  ld   $82
              b09d 0002  ld   $02
              b09e 0048  ld   $48
              b09f 00b9  ld   $b9
              b0a0 0081  ld   $81
              b0a1 0002  ld   $02
              b0a2 0048  ld   $48
              b0a3 0020  ld   $20
              b0a4 009f  ld   $9f
              b0a5 000e  ld   $0e
              b0a6 00a5  ld   $a5
              b0a7 007f  ld   $7f
              b0a8 004c  ld   $4c
              b0a9 0015  ld   $15
              b0aa 000e  ld   $0e
              b0ab 004c  ld   $4c
              b0ac 006e  ld   $6e
              b0ad 000f  ld   $0f
              b0ae 00a5  ld   $a5
              b0af 0099  ld   $99
              b0b0 00be  ld   $be
              b0b1 0080  ld   $80
              b0b2 0002  ld   $02
              b0b3 00a8  ld   $a8
              b0b4 0068  ld   $68
              b0b5 0085  ld   $85
              b0b6 0054  ld   $54
              b0b7 00e6  ld   $e6
              b0b8 0054  ld   $54
              b0b9 0068  ld   $68
              b0ba 0085  ld   $85
              b0bb 0055  ld   $55
              b0bc 0098  ld   $98
              b0bd 0048  ld   $48
              b0be 0020  ld   $20
              b0bf 0093  ld   $93
              b0c0 001c  ld   $1c
              b0c1 00a5  ld   $a5
              b0c2 0098  ld   $98
              b0c3 0048  ld   $48
              b0c4 00a5  ld   $a5
              b0c5 0097  ld   $97
              b0c6 0048  ld   $48
              b0c7 00a5  ld   $a5
              b0c8 0096  ld   $96
              b0c9 0048  ld   $48
              b0ca 00a5  ld   $a5
              b0cb 0095  ld   $95
              b0cc 0048  ld   $48
              b0cd 00a5  ld   $a5
              b0ce 0094  ld   $94
              b0cf 0048  ld   $48
              b0d0 006c  ld   $6c
              b0d1 0054  ld   $54
              b0d2 0000  ld   $00
              b0d3 00a0  ld   $a0
              b0d4 00ff  ld   $ff
              b0d5 0068  ld   $68
              b0d6 00f0  ld   $f0
              b0d7 0023  ld   $23
              b0d8 00c9  ld   $c9
              b0d9 0064  ld   $64
              b0da 00f0  ld   $f0
              b0db 0003  ld   $03
              b0dc 0020  ld   $20
              b0dd 00f9  ld   $f9
              b0de 000d  ld   $0d
              b0df 0084  ld   $84
              b0e0 007d  ld   $7d
              b0e1 0068  ld   $68
              b0e2 004a  ld   $4a
              b0e3 0085  ld   $85
              b0e4 0044  ld   $44
              b0e5 0068  ld   $68
              b0e6 0085  ld   $85
              b0e7 009c  ld   $9c
              b0e8 0068  ld   $68
              b0e9 0085  ld   $85
              b0ea 009d  ld   $9d
              b0eb 0068  ld   $68
              b0ec 0085  ld   $85
              b0ed 009e  ld   $9e
              b0ee 0068  ld   $68
              b0ef 0085  ld   $85
              b0f0 009f  ld   $9f
              b0f1 0068  ld   $68
              b0f2 0085  ld   $85
              b0f3 00a0  ld   $a0
              b0f4 0068  ld   $68
              b0f5 0085  ld   $85
              b0f6 00a1  ld   $a1
              b0f7 0045  ld   $45
              b0f8 0099  ld   $99
              b0f9 0085  ld   $85
              b0fa 00a2  ld   $a2
              b0fb fe00  bra  ac          ;+-----------------------------------+
              b0fc fcfd  bra  $b0fd       ;|                                   |
              b0fd 1418  ld   $18,y       ;| Trampoline for page $b000 lookups |
              b0fe e006  jmp  y,$06       ;|                                   |
              b0ff c218  st   [$18]       ;+-----------------------------------+
              b100 00a5  ld   $a5
              b101 0094  ld   $94
              b102 0060  ld   $60
              b103 00a9  ld   $a9
              b104 0000  ld   $00
              b105 0085  ld   $85
              b106 003f  ld   $3f
              b107 0020  ld   $20
              b108 006b  ld   $6b
              b109 0022  ld   $22
              b10a 00b0  ld   $b0
              b10b 0003  ld   $03
              b10c 004c  ld   $4c
              b10d 006b  ld   $6b
              b10e 001d  ld   $1d
              b10f 0020  ld   $20
              b110 005a  ld   $5a
              b111 0011  ld   $11
              b112 00b0  ld   $b0
              b113 007a  ld   $7a
              b114 000f  ld   $0f
              b115 0000  ld   $00
              b116 0000  ld   $00
              b117 00c9  ld   $c9
              b118 00ff  ld   $ff
              b119 00d0  ld   $d0
              b11a 000f  ld   $0f
              b11b 00a9  ld   $a9
              b11c 000e  ld   $0e
              b11d 00a0  ld   $a0
              b11e 000f  ld   $0f
              b11f 0020  ld   $20
              b120 001a  ld   $1a
              b121 001c  ld   $1c
              b122 004c  ld   $4c
              b123 006b  ld   $6b
              b124 0022  ld   $22
              b125 0082  ld   $82
              b126 0049  ld   $49
              b127 000f  ld   $0f
              b128 00da  ld   $da
              b129 00a1  ld   $a1
              b12a 00c9  ld   $c9
              b12b 002e  ld   $2e
              b12c 00f0  ld   $f0
              b12d 00e1  ld   $e1
              b12e 00c9  ld   $c9
              b12f 00a5  ld   $a5
              b130 00f0  ld   $f0
              b131 0058  ld   $58
              b132 00c9  ld   $c9
              b133 00a4  ld   $a4
              b134 00f0  ld   $f0
              b135 00d4  ld   $d4
              b136 00c9  ld   $c9
              b137 0022  ld   $22
              b138 00d0  ld   $d0
              b139 000f  ld   $0f
              b13a 00a5  ld   $a5
              b13b 00a6  ld   $a6
              b13c 00a4  ld   $a4
              b13d 00a7  ld   $a7
              b13e 0069  ld   $69
              b13f 0000  ld   $00
              b140 0090  ld   $90
              b141 0001  ld   $01
              b142 00c8  ld   $c8
              b143 0020  ld   $20
              b144 00c3  ld   $c3
              b145 0014  ld   $14
              b146 004c  ld   $4c
              b147 001f  ld   $1f
              b148 0018  ld   $18
              b149 00c9  ld   $c9
              b14a 00a2  ld   $a2
              b14b 00d0  ld   $d0
              b14c 0013  ld   $13
              b14d 00a0  ld   $a0
              b14e 0018  ld   $18
              b14f 00d0  ld   $d0
              b150 003b  ld   $3b
              b151 0020  ld   $20
              b152 00fd  ld   $fd
              b153 0011  ld   $11
              b154 00a5  ld   $a5
              b155 0098  ld   $98
              b156 0049  ld   $49
              b157 00ff  ld   $ff
              b158 00a8  ld   $a8
              b159 00a5  ld   $a5
              b15a 0097  ld   $97
              b15b 0049  ld   $49
              b15c 00ff  ld   $ff
              b15d 004c  ld   $4c
              b15e 00cc  ld   $cc
              b15f 0013  ld   $13
              b160 00c9  ld   $c9
              b161 009f  ld   $9f
              b162 00d0  ld   $d0
              b163 0003  ld   $03
              b164 004c  ld   $4c
              b165 0030  ld   $30
              b166 0014  ld   $14
              b167 00c9  ld   $c9
              b168 00ae  ld   $ae
              b169 0090  ld   $90
              b16a 0003  ld   $03
              b16b 004c  ld   $4c
              b16c 00ec  ld   $ec
              b16d 000f  ld   $0f
              b16e 0020  ld   $20
              b16f 0060  ld   $60
              b170 000f  ld   $0f
              b171 0020  ld   $20
              b172 000a  ld   $0a
              b173 000e  ld   $0e
              b174 00a9  ld   $a9
              b175 0029  ld   $29
              b176 002c  ld   $2c
              b177 00a9  ld   $a9
              b178 0028  ld   $28
              b179 002c  ld   $2c
              b17a 00a9  ld   $a9
              b17b 002c  ld   $2c
              b17c 00a0  ld   $a0
              b17d 0000  ld   $00
              b17e 00d1  ld   $d1
              b17f 00a6  ld   $a6
              b180 00d0  ld   $d0
              b181 0003  ld   $03
              b182 004c  ld   $4c
              b183 006b  ld   $6b
              b184 0022  ld   $22
              b185 00a2  ld   $a2
              b186 0010  ld   $10
              b187 004c  ld   $4c
              b188 004a  ld   $4a
              b189 0005  ld   $05
              b18a 00a0  ld   $a0
              b18b 0015  ld   $15
              b18c 0068  ld   $68
              b18d 0068  ld   $68
              b18e 004c  ld   $4c
              b18f 0066  ld   $66
              b190 000e  ld   $0e
              b191 0020  ld   $20
              b192 00d0  ld   $d0
              b193 0010  ld   $10
              b194 0085  ld   $85
              b195 0097  ld   $97
              b196 0084  ld   $84
              b197 0098  ld   $98
              b198 00a5  ld   $a5
              b199 0077  ld   $77
              b19a 00a4  ld   $a4
              b19b 0078  ld   $78
              b19c 00a6  ld   $a6
              b19d 003f  ld   $3f
              b19e 00f0  ld   $f0
              b19f 0021  ld   $21
              b1a0 00a2  ld   $a2
              b1a1 0000  ld   $00
              b1a2 0086  ld   $86
              b1a3 00a3  ld   $a3
              b1a4 00c9  ld   $c9
              b1a5 0054  ld   $54
              b1a6 00d0  ld   $d0
              b1a7 0018  ld   $18
              b1a8 00c0  ld   $c0
              b1a9 00c9  ld   $c9
              b1aa 00d0  ld   $d0
              b1ab 0014  ld   $14
              b1ac 0020  ld   $20
              b1ad 0073  ld   $73
              b1ae 0004  ld   $04
              b1af 0084  ld   $84
              b1b0 0091  ld   $91
              b1b1 0088  ld   $88
              b1b2 0084  ld   $84
              b1b3 00a4  ld   $a4
              b1b4 00a0  ld   $a0
              b1b5 0006  ld   $06
              b1b6 0084  ld   $84
              b1b7 0090  ld   $90
              b1b8 00a0  ld   $a0
              b1b9 0024  ld   $24
              b1ba 0020  ld   $20
              b1bb 00e0  ld   $e0
              b1bc 001e  ld   $1e
              b1bd 004c  ld   $4c
              b1be 00ab  ld   $ab
              b1bf 0014  ld   $14
              b1c0 0060  ld   $60
              b1c1 00a6  ld   $a6
              b1c2 0040  ld   $40
              b1c3 0010  ld   $10
              b1c4 000d  ld   $0d
              b1c5 00a0  ld   $a0
              b1c6 0000  ld   $00
              b1c7 00b1  ld   $b1
              b1c8 0097  ld   $97
              b1c9 00aa  ld   $aa
              b1ca 00c8  ld   $c8
              b1cb 00b1  ld   $b1
              b1cc 0097  ld   $97
              b1cd 00a8  ld   $a8
              b1ce 008a  ld   $8a
              b1cf 004c  ld   $4c
              b1d0 00cc  ld   $cc
              b1d1 0013  ld   $13
              b1d2 00c9  ld   $c9
              b1d3 0054  ld   $54
              b1d4 00d0  ld   $d0
              b1d5 0019  ld   $19
              b1d6 00c0  ld   $c0
              b1d7 0049  ld   $49
              b1d8 00d0  ld   $d0
              b1d9 0022  ld   $22
              b1da 0020  ld   $20
              b1db 0073  ld   $73
              b1dc 0004  ld   $04
              b1dd 0098  ld   $98
              b1de 00a2  ld   $a2
              b1df 00a0  ld   $a0
              b1e0 004c  ld   $4c
              b1e1 00c7  ld   $c7
              b1e2 001c  ld   $1c
              b1e3 00a9  ld   $a9
              b1e4 00fe  ld   $fe
              b1e5 00a0  ld   $a0
              b1e6 0001  ld   $01
              b1e7 0078  ld   $78
              b1e8 0020  ld   $20
              b1e9 001a  ld   $1a
              b1ea 001c  ld   $1c
              b1eb 0058  ld   $58
              b1ec 0084  ld   $84
              b1ed 0095  ld   $95
              b1ee 0060  ld   $60
              b1ef 00c9  ld   $c9
              b1f0 0053  ld   $53
              b1f1 00d0  ld   $d0
              b1f2 0009  ld   $09
              b1f3 00c0  ld   $c0
              b1f4 0054  ld   $54
              b1f5 00d0  ld   $d0
              b1f6 0005  ld   $05
              b1f7 00a5  ld   $a5
              b1f8 0019  ld   $19
              b1f9 004c  ld   $4c
              b1fa 00b4  ld   $b4
              b1fb fe00  bra  ac          ;+-----------------------------------+
              b1fc fcfd  bra  $b1fd       ;|                                   |
              b1fd 1418  ld   $18,y       ;| Trampoline for page $b100 lookups |
              b1fe e006  jmp  y,$06       ;|                                   |
              b1ff c218  st   [$18]       ;+-----------------------------------+
              b200 001c  ld   $1c
              b201 00a5  ld   $a5
              b202 0097  ld   $97
              b203 00a4  ld   $a4
              b204 0098  ld   $98
              b205 004c  ld   $4c
              b206 001a  ld   $1a
              b207 001c  ld   $1c
              b208 000a  ld   $0a
              b209 0048  ld   $48
              b20a 00aa  ld   $aa
              b20b 0020  ld   $20
              b20c 006b  ld   $6b
              b20d 0022  ld   $22
              b20e 00e0  ld   $e0
              b20f 0083  ld   $83
              b210 0090  ld   $90
              b211 0020  ld   $20
              b212 0020  ld   $20
              b213 0060  ld   $60
              b214 000f  ld   $0f
              b215 0020  ld   $20
              b216 000a  ld   $0a
              b217 000e  ld   $0e
              b218 0020  ld   $20
              b219 0063  ld   $63
              b21a 000f  ld   $0f
              b21b 0020  ld   $20
              b21c 0010  ld   $10
              b21d 0000  ld   $00
              b21e 0000  ld   $00
              b21f 00fb  ld   $fb
              b220 000d  ld   $0d
              b221 0068  ld   $68
              b222 00aa  ld   $aa
              b223 00a5  ld   $a5
              b224 0098  ld   $98
              b225 0048  ld   $48
              b226 00a5  ld   $a5
              b227 0097  ld   $97
              b228 0048  ld   $48
              b229 008a  ld   $8a
              b22a 0048  ld   $48
              b22b 0020  ld   $20
              b22c 00da  ld   $da
              b22d 0017  ld   $17
              b22e 0068  ld   $68
              b22f 00a8  ld   $a8
              b230 008a  ld   $8a
              b231 0048  ld   $48
              b232 004c  ld   $4c
              b233 001b  ld   $1b
              b234 0010  ld   $10
              b235 0020  ld   $20
              b236 0057  ld   $57
              b237 000f  ld   $0f
              b238 0068  ld   $68
              b239 00a8  ld   $a8
              b23a 00b9  ld   $b9
              b23b 00f6  ld   $f6
              b23c 0001  ld   $01
              b23d 0085  ld   $85
              b23e 0088  ld   $88
              b23f 00b9  ld   $b9
              b240 00f7  ld   $f7
              b241 0001  ld   $01
              b242 0085  ld   $85
              b243 0089  ld   $89
              b244 0020  ld   $20
              b245 0087  ld   $87
              b246 0000  ld   $00
              b247 004c  ld   $4c
              b248 00f9  ld   $f9
              b249 000d  ld   $0d
              b24a 00a0  ld   $a0
              b24b 00ff  ld   $ff
              b24c 002c  ld   $2c
              b24d 00a0  ld   $a0
              b24e 0000  ld   $00
              b24f 0084  ld   $84
              b250 003d  ld   $3d
              b251 0020  ld   $20
              b252 00fd  ld   $fd
              b253 0011  ld   $11
              b254 00a5  ld   $a5
              b255 0097  ld   $97
              b256 0045  ld   $45
              b257 003d  ld   $3d
              b258 0085  ld   $85
              b259 003b  ld   $3b
              b25a 00a5  ld   $a5
              b25b 0098  ld   $98
              b25c 0045  ld   $45
              b25d 003d  ld   $3d
              b25e 0085  ld   $85
              b25f 003c  ld   $3c
              b260 0020  ld   $20
              b261 0074  ld   $74
              b262 001c  ld   $1c
              b263 0020  ld   $20
              b264 00fd  ld   $fd
              b265 0011  ld   $11
              b266 00a5  ld   $a5
              b267 0098  ld   $98
              b268 0045  ld   $45
              b269 003d  ld   $3d
              b26a 0025  ld   $25
              b26b 003c  ld   $3c
              b26c 0045  ld   $45
              b26d 003d  ld   $3d
              b26e 00a8  ld   $a8
              b26f 00a5  ld   $a5
              b270 0097  ld   $97
              b271 0045  ld   $45
              b272 003d  ld   $3d
              b273 0025  ld   $25
              b274 003b  ld   $3b
              b275 0045  ld   $45
              b276 003d  ld   $3d
              b277 004c  ld   $4c
              b278 00cc  ld   $cc
              b279 0013  ld   $13
              b27a 0020  ld   $20
              b27b 00fc  ld   $fc
              b27c 000d  ld   $0d
              b27d 00b0  ld   $b0
              b27e 0013  ld   $13
              b27f 00a5  ld   $a5
              b280 00a1  ld   $a1
              b281 0009  ld   $09
              b282 007f  ld   $7f
              b283 0025  ld   $25
              b284 009d  ld   $9d
              b285 0085  ld   $85
              b286 009d  ld   $9d
              b287 00a9  ld   $a9
              b288 009c  ld   $9c
              b289 00a0  ld   $a0
              b28a 0000  ld   $00
              b28b 0020  ld   $20
              b28c 00d3  ld   $d3
              b28d 001c  ld   $1c
              b28e 00aa  ld   $aa
              b28f 004c  ld   $4c
              b290 00a6  ld   $a6
              b291 0010  ld   $10
              b292 00a9  ld   $a9
              b293 0000  ld   $00
              b294 0085  ld   $85
              b295 003f  ld   $3f
              b296 00c6  ld   $c6
              b297 007f  ld   $7f
              b298 0020  ld   $20
              b299 00e2  ld   $e2
              b29a 0016  ld   $16
              b29b 0085  ld   $85
              b29c 0094  ld   $94
              b29d 0086  ld   $86
              b29e 0095  ld   $95
              b29f 0084  ld   $84
              b2a0 0096  ld   $96
              b2a1 00a5  ld   $a5
              b2a2 009f  ld   $9f
              b2a3 00a4  ld   $a4
              b2a4 00a0  ld   $a0
              b2a5 0020  ld   $20
              b2a6 00e6  ld   $e6
              b2a7 0016  ld   $16
              b2a8 0086  ld   $86
              b2a9 009f  ld   $9f
              b2aa 0084  ld   $84
              b2ab 00a0  ld   $a0
              b2ac 00aa  ld   $aa
              b2ad 0038  ld   $38
              b2ae 00e5  ld   $e5
              b2af 0094  ld   $94
              b2b0 00f0  ld   $f0
              b2b1 0008  ld   $08
              b2b2 00a9  ld   $a9
              b2b3 0001  ld   $01
              b2b4 0090  ld   $90
              b2b5 0004  ld   $04
              b2b6 00a6  ld   $a6
              b2b7 0094  ld   $94
              b2b8 00a9  ld   $a9
              b2b9 00ff  ld   $ff
              b2ba 0085  ld   $85
              b2bb 0099  ld   $99
              b2bc 00a0  ld   $a0
              b2bd 00ff  ld   $ff
              b2be 00e8  ld   $e8
              b2bf 00c8  ld   $c8
              b2c0 00ca  ld   $ca
              b2c1 00d0  ld   $d0
              b2c2 0007  ld   $07
              b2c3 00a6  ld   $a6
              b2c4 0099  ld   $99
              b2c5 0030  ld   $30
              b2c6 000f  ld   $0f
              b2c7 0018  ld   $18
              b2c8 0090  ld   $90
              b2c9 000c  ld   $0c
              b2ca 00b1  ld   $b1
              b2cb 009f  ld   $9f
              b2cc 00d1  ld   $d1
              b2cd 0095  ld   $95
              b2ce 00f0  ld   $f0
              b2cf 00ef  ld   $ef
              b2d0 00a2  ld   $a2
              b2d1 00ff  ld   $ff
              b2d2 00b0  ld   $b0
              b2d3 0002  ld   $02
              b2d4 00a2  ld   $a2
              b2d5 0001  ld   $01
              b2d6 00e8  ld   $e8
              b2d7 008a  ld   $8a
              b2d8 002a  ld   $2a
              b2d9 0025  ld   $25
              b2da 0044  ld   $44
              b2db 00f0  ld   $f0
              b2dc 0002  ld   $02
              b2dd 00a9  ld   $a9
              b2de 00ff  ld   $ff
              b2df 004c  ld   $4c
              b2e0 00b4  ld   $b4
              b2e1 001c  ld   $1c
              b2e2 0020  ld   $20
              b2e3 0063  ld   $63
              b2e4 000f  ld   $0f
              b2e5 00aa  ld   $aa
              b2e6 0020  ld   $20
              b2e7 00d5  ld   $d5
              b2e8 0010  ld   $10
              b2e9 0020  ld   $20
              b2ea 0071  ld   $71
              b2eb 0022  ld   $22
              b2ec 00d0  ld   $d0
              b2ed 00f4  ld   $f4
              b2ee 0060  ld   $60
              b2ef 00a2  ld   $a2
              b2f0 0000  ld   $00
              b2f1 0020  ld   $20
              b2f2 0071  ld   $71
              b2f3 0022  ld   $22
              b2f4 0086  ld   $86
              b2f5 003e  ld   $3e
              b2f6 0085  ld   $85
              b2f7 0077  ld   $77
              b2f8 0020  ld   $20
              b2f9 0071  ld   $71
              b2fa 0022  ld   $22
              b2fb fe00  bra  ac          ;+-----------------------------------+
              b2fc fcfd  bra  $b2fd       ;|                                   |
              b2fd 1418  ld   $18,y       ;| Trampoline for page $b200 lookups |
              b2fe e006  jmp  y,$06       ;|                                   |
              b2ff c218  st   [$18]       ;+-----------------------------------+
              b300 0020  ld   $20
              b301 005a  ld   $5a
              b302 0011  ld   $11
              b303 00b0  ld   $b0
              b304 0003  ld   $03
              b305 004c  ld   $4c
              b306 006e  ld   $6e
              b307 000f  ld   $0f
              b308 00a2  ld   $a2
              b309 0000  ld   $00
              b30a 0086  ld   $86
              b30b 003f  ld   $3f
              b30c 0086  ld   $86
              b30d 0040  ld   $40
              b30e 0020  ld   $20
              b30f 006b  ld   $6b
              b310 0022  ld   $22
              b311 0090  ld   $90
              b312 0005  ld   $05
              b313 0020  ld   $20
              b314 005a  ld   $5a
              b315 0011  ld   $11
              b316 0090  ld   $90
              b317 000b  ld   $0b
              b318 00aa  ld   $aa
              b319 0020  ld   $20
              b31a 006b  ld   $6b
              b31b 0022  ld   $22
              b31c 0090  ld   $90
              b31d 00fb  ld   $fb
              b31e 0020  ld   $20
              b31f 005a  ld   $5a
              b320 0011  ld   $11
              b321 00b0  ld   $b0
              b322 00f6  ld   $f6
              b323 00c9  ld   $c9
              b324 0011  ld   $11
              b325 0000  ld   $00
              b326 0000  ld   $00
              b327 0024  ld   $24
              b328 00d0  ld   $d0
              b329 0006  ld   $06
              b32a 00a9  ld   $a9
              b32b 00ff  ld   $ff
              b32c 0085  ld   $85
              b32d 003f  ld   $3f
              b32e 00d0  ld   $d0
              b32f 0010  ld   $10
              b330 00c9  ld   $c9
              b331 0025  ld   $25
              b332 00d0  ld   $d0
              b333 0013  ld   $13
              b334 00a5  ld   $a5
              b335 0042  ld   $42
              b336 00d0  ld   $d0
              b337 00d0  ld   $d0
              b338 00a9  ld   $a9
              b339 0080  ld   $80
              b33a 0085  ld   $85
              b33b 0040  ld   $40
              b33c 0005  ld   $05
              b33d 0077  ld   $77
              b33e 0085  ld   $85
              b33f 0077  ld   $77
              b340 008a  ld   $8a
              b341 0009  ld   $09
              b342 0080  ld   $80
              b343 00aa  ld   $aa
              b344 0020  ld   $20
              b345 006b  ld   $6b
              b346 0022  ld   $22
              b347 0086  ld   $86
              b348 0078  ld   $78
              b349 0038  ld   $38
              b34a 0005  ld   $05
              b34b 0042  ld   $42
              b34c 00e9  ld   $e9
              b34d 0028  ld   $28
              b34e 00d0  ld   $d0
              b34f 0003  ld   $03
              b350 004c  ld   $4c
              b351 000f  ld   $0f
              b352 0012  ld   $12
              b353 00a9  ld   $a9
              b354 0000  ld   $00
              b355 0085  ld   $85
              b356 0042  ld   $42
              b357 00a5  ld   $a5
              b358 005f  ld   $5f
              b359 00a6  ld   $a6
              b35a 0060  ld   $60
              b35b 00a0  ld   $a0
              b35c 0000  ld   $00
              b35d 0086  ld   $86
              b35e 0093  ld   $93
              b35f 0085  ld   $85
              b360 0092  ld   $92
              b361 00e4  ld   $e4
              b362 0062  ld   $62
              b363 00d0  ld   $d0
              b364 0004  ld   $04
              b365 00c5  ld   $c5
              b366 0061  ld   $61
              b367 00f0  ld   $f0
              b368 0022  ld   $22
              b369 00a5  ld   $a5
              b36a 0077  ld   $77
              b36b 00d1  ld   $d1
              b36c 0092  ld   $92
              b36d 00d0  ld   $d0
              b36e 0008  ld   $08
              b36f 00a5  ld   $a5
              b370 0078  ld   $78
              b371 00c8  ld   $c8
              b372 00d1  ld   $d1
              b373 0092  ld   $92
              b374 00f0  ld   $f0
              b375 007d  ld   $7d
              b376 0088  ld   $88
              b377 0018  ld   $18
              b378 00a5  ld   $a5
              b379 0092  ld   $92
              b37a 0069  ld   $69
              b37b 0007  ld   $07
              b37c 0090  ld   $90
              b37d 00e1  ld   $e1
              b37e 00e8  ld   $e8
              b37f 00d0  ld   $d0
              b380 00dc  ld   $dc
              b381 00c9  ld   $c9
              b382 0041  ld   $41
              b383 0090  ld   $90
              b384 0005  ld   $05
              b385 00e9  ld   $e9
              b386 005b  ld   $5b
              b387 0038  ld   $38
              b388 00e9  ld   $e9
              b389 00a5  ld   $a5
              b38a 0060  ld   $60
              b38b 0068  ld   $68
              b38c 0048  ld   $48
              b38d 00c9  ld   $c9
              b38e 007c  ld   $7c
              b38f 00d0  ld   $d0
              b390 0005  ld   $05
              b391 00a9  ld   $a9
              b392 008b  ld   $8b
              b393 00a0  ld   $a0
              b394 001f  ld   $1f
              b395 0060  ld   $60
              b396 00a5  ld   $a5
              b397 0077  ld   $77
              b398 00a4  ld   $a4
              b399 0078  ld   $78
              b39a 00c9  ld   $c9
              b39b 0054  ld   $54
              b39c 00d0  ld   $d0
              b39d 000b  ld   $0b
              b39e 00c0  ld   $c0
              b39f 00c9  ld   $c9
              b3a0 00f0  ld   $f0
              b3a1 00ef  ld   $ef
              b3a2 00c0  ld   $c0
              b3a3 0049  ld   $49
              b3a4 00d0  ld   $d0
              b3a5 0003  ld   $03
              b3a6 004c  ld   $4c
              b3a7 006e  ld   $6e
              b3a8 000f  ld   $0f
              b3a9 00c9  ld   $c9
              b3aa 0053  ld   $53
              b3ab 00d0  ld   $d0
              b3ac 0004  ld   $04
              b3ad 00c0  ld   $c0
              b3ae 0054  ld   $54
              b3af 00f0  ld   $f0
              b3b0 00f5  ld   $f5
              b3b1 00a5  ld   $a5
              b3b2 0061  ld   $61
              b3b3 00a4  ld   $a4
              b3b4 0062  ld   $62
              b3b5 0085  ld   $85
              b3b6 0092  ld   $92
              b3b7 0084  ld   $84
              b3b8 0093  ld   $93
              b3b9 00a5  ld   $a5
              b3ba 0063  ld   $63
              b3bb 00a4  ld   $a4
              b3bc 0064  ld   $64
              b3bd 0085  ld   $85
              b3be 008d  ld   $8d
              b3bf 0084  ld   $84
              b3c0 008e  ld   $8e
              b3c1 0018  ld   $18
              b3c2 0069  ld   $69
              b3c3 0007  ld   $07
              b3c4 0090  ld   $90
              b3c5 0001  ld   $01
              b3c6 00c8  ld   $c8
              b3c7 0085  ld   $85
              b3c8 008b  ld   $8b
              b3c9 0084  ld   $84
              b3ca 008c  ld   $8c
              b3cb 0020  ld   $20
              b3cc 00cb  ld   $cb
              b3cd 0004  ld   $04
              b3ce 00a5  ld   $a5
              b3cf 008b  ld   $8b
              b3d0 00a4  ld   $a4
              b3d1 008c  ld   $8c
              b3d2 00c8  ld   $c8
              b3d3 0085  ld   $85
              b3d4 0061  ld   $61
              b3d5 0084  ld   $84
              b3d6 0062  ld   $62
              b3d7 00a0  ld   $a0
              b3d8 0000  ld   $00
              b3d9 00a5  ld   $a5
              b3da 0077  ld   $77
              b3db 0091  ld   $91
              b3dc 0092  ld   $92
              b3dd 00c8  ld   $c8
              b3de 00a5  ld   $a5
              b3df 0078  ld   $78
              b3e0 0091  ld   $91
              b3e1 0092  ld   $92
              b3e2 00a9  ld   $a9
              b3e3 0000  ld   $00
              b3e4 00c8  ld   $c8
              b3e5 0091  ld   $91
              b3e6 0092  ld   $92
              b3e7 00c8  ld   $c8
              b3e8 0091  ld   $91
              b3e9 0092  ld   $92
              b3ea 00c8  ld   $c8
              b3eb 0091  ld   $91
              b3ec 0092  ld   $92
              b3ed 00c8  ld   $c8
              b3ee 0091  ld   $91
              b3ef 0092  ld   $92
              b3f0 00c8  ld   $c8
              b3f1 0091  ld   $91
              b3f2 0092  ld   $92
              b3f3 00a5  ld   $a5
              b3f4 0092  ld   $92
              b3f5 0018  ld   $18
              b3f6 0069  ld   $69
              b3f7 0002  ld   $02
              b3f8 00a4  ld   $a4
              b3f9 0093  ld   $93
              b3fa 0090  ld   $90
              b3fb fe00  bra  ac          ;+-----------------------------------+
              b3fc fcfd  bra  $b3fd       ;|                                   |
              b3fd 1418  ld   $18,y       ;| Trampoline for page $b300 lookups |
              b3fe e006  jmp  y,$06       ;|                                   |
              b3ff c218  st   [$18]       ;+-----------------------------------+
              b400 0001  ld   $01
              b401 00c8  ld   $c8
              b402 0085  ld   $85
              b403 0079  ld   $79
              b404 0084  ld   $84
              b405 007a  ld   $7a
              b406 0060  ld   $60
              b407 00a5  ld   $a5
              b408 003d  ld   $3d
              b409 000a  ld   $0a
              b40a 0069  ld   $69
              b40b 0005  ld   $05
              b40c 0065  ld   $65
              b40d 0092  ld   $92
              b40e 00a4  ld   $a4
              b40f 0093  ld   $93
              b410 0090  ld   $90
              b411 0001  ld   $01
              b412 00c8  ld   $c8
              b413 0085  ld   $85
              b414 008b  ld   $8b
              b415 0084  ld   $84
              b416 008c  ld   $8c
              b417 0060  ld   $60
              b418 0090  ld   $90
              b419 0080  ld   $80
              b41a 0000  ld   $00
              b41b 0000  ld   $00
              b41c 0020  ld   $20
              b41d 006b  ld   $6b
              b41e 0022  ld   $22
              b41f 0020  ld   $20
              b420 000a  ld   $0a
              b421 000e  ld   $0e
              b422 0020  ld   $20
              b423 00f9  ld   $f9
              b424 000d  ld   $0d
              b425 00a5  ld   $a5
              b426 0099  ld   $99
              b427 0030  ld   $30
              b428 000d  ld   $0d
              b429 00a5  ld   $a5
              b42a 0094  ld   $94
              b42b 00c9  ld   $c9
              b42c 0012  ld   $12
              b42d 0000  ld   $00
              b42e 0000  ld   $00
              b42f 0090  ld   $90
              b430 0090  ld   $90
              b431 0009  ld   $09
              b432 00a9  ld   $a9
              b433 00ec  ld   $ec
              b434 00a0  ld   $a0
              b435 0011  ld   $11
              b436 0020  ld   $20
              b437 00d3  ld   $d3
              b438 001c  ld   $1c
              b439 00d0  ld   $d0
              b43a 0076  ld   $76
              b43b 004c  ld   $4c
              b43c 0013  ld   $13
              b43d 001d  ld   $1d
              b43e 00a5  ld   $a5
              b43f 003e  ld   $3e
              b440 0005  ld   $05
              b441 0040  ld   $40
              b442 0048  ld   $48
              b443 00a5  ld   $a5
              b444 003f  ld   $3f
              b445 0048  ld   $48
              b446 00a0  ld   $a0
              b447 0000  ld   $00
              b448 0098  ld   $98
              b449 0048  ld   $48
              b44a 00a5  ld   $a5
              b44b 0078  ld   $78
              b44c 0048  ld   $48
              b44d 00a5  ld   $a5
              b44e 0077  ld   $77
              b44f 0048  ld   $48
              b450 0020  ld   $20
              b451 00f0  ld   $f0
              b452 0011  ld   $11
              b453 0068  ld   $68
              b454 0085  ld   $85
              b455 0077  ld   $77
              b456 0068  ld   $68
              b457 0085  ld   $85
              b458 0078  ld   $78
              b459 0068  ld   $68
              b45a 00a8  ld   $a8
              b45b 00ba  ld   $ba
              b45c 00b5  ld   $b5
              b45d 0002  ld   $02
              b45e 0048  ld   $48
              b45f 00b5  ld   $b5
              b460 0001  ld   $01
              b461 0048  ld   $48
              b462 00a5  ld   $a5
              b463 0097  ld   $97
              b464 0095  ld   $95
              b465 0002  ld   $02
              b466 00a5  ld   $a5
              b467 0098  ld   $98
              b468 0095  ld   $95
              b469 0001  ld   $01
              b46a 00c8  ld   $c8
              b46b 0020  ld   $20
              b46c 0071  ld   $71
              b46d 0022  ld   $22
              b46e 00c9  ld   $c9
              b46f 002c  ld   $2c
              b470 00f0  ld   $f0
              b471 00d6  ld   $d6
              b472 0084  ld   $84
              b473 003d  ld   $3d
              b474 0020  ld   $20
              b475 005d  ld   $5d
              b476 000f  ld   $0f
              b477 0068  ld   $68
              b478 0085  ld   $85
              b479 003f  ld   $3f
              b47a 0068  ld   $68
              b47b 0085  ld   $85
              b47c 0040  ld   $40
              b47d 0029  ld   $29
              b47e 007f  ld   $7f
              b47f 0085  ld   $85
              b480 003e  ld   $3e
              b481 00a6  ld   $a6
              b482 0061  ld   $61
              b483 00a5  ld   $a5
              b484 0062  ld   $62
              b485 0086  ld   $86
              b486 0092  ld   $92
              b487 0085  ld   $85
              b488 0093  ld   $93
              b489 00c5  ld   $c5
              b48a 0064  ld   $64
              b48b 00d0  ld   $d0
              b48c 0004  ld   $04
              b48d 00e4  ld   $e4
              b48e 0063  ld   $63
              b48f 00f0  ld   $f0
              b490 0039  ld   $39
              b491 00a0  ld   $a0
              b492 0000  ld   $00
              b493 00b1  ld   $b1
              b494 0092  ld   $92
              b495 00c8  ld   $c8
              b496 00c5  ld   $c5
              b497 0077  ld   $77
              b498 00d0  ld   $d0
              b499 0006  ld   $06
              b49a 00a5  ld   $a5
              b49b 0078  ld   $78
              b49c 00d1  ld   $d1
              b49d 0092  ld   $92
              b49e 00f0  ld   $f0
              b49f 0016  ld   $16
              b4a0 00c8  ld   $c8
              b4a1 00b1  ld   $b1
              b4a2 0092  ld   $92
              b4a3 0018  ld   $18
              b4a4 0065  ld   $65
              b4a5 0092  ld   $92
              b4a6 00aa  ld   $aa
              b4a7 00c8  ld   $c8
              b4a8 00b1  ld   $b1
              b4a9 0092  ld   $92
              b4aa 0065  ld   $65
              b4ab 0093  ld   $93
              b4ac 0090  ld   $90
              b4ad 00d7  ld   $d7
              b4ae 00a2  ld   $a2
              b4af 006b  ld   $6b
              b4b0 002c  ld   $2c
              b4b1 00a2  ld   $a2
              b4b2 0035  ld   $35
              b4b3 004c  ld   $4c
              b4b4 004a  ld   $4a
              b4b5 0005  ld   $05
              b4b6 00a2  ld   $a2
              b4b7 0078  ld   $78
              b4b8 00a5  ld   $a5
              b4b9 003e  ld   $3e
              b4ba 00d0  ld   $d0
              b4bb 00f7  ld   $f7
              b4bc 0020  ld   $20
              b4bd 00db  ld   $db
              b4be 0011  ld   $11
              b4bf 00a5  ld   $a5
              b4c0 003d  ld   $3d
              b4c1 00a0  ld   $a0
              b4c2 0004  ld   $04
              b4c3 00d1  ld   $d1
              b4c4 0092  ld   $92
              b4c5 00d0  ld   $d0
              b4c6 00e7  ld   $e7
              b4c7 004c  ld   $4c
              b4c8 0025  ld   $25
              b4c9 0013  ld   $13
              b4ca 0020  ld   $20
              b4cb 00db  ld   $db
              b4cc 0011  ld   $11
              b4cd 0020  ld   $20
              b4ce 001b  ld   $1b
              b4cf 0005  ld   $05
              b4d0 00a9  ld   $a9
              b4d1 0000  ld   $00
              b4d2 00a8  ld   $a8
              b4d3 0085  ld   $85
              b4d4 00a5  ld   $a5
              b4d5 00a2  ld   $a2
              b4d6 0005  ld   $05
              b4d7 00a5  ld   $a5
              b4d8 0077  ld   $77
              b4d9 0091  ld   $91
              b4da 0092  ld   $92
              b4db 0010  ld   $10
              b4dc 0001  ld   $01
              b4dd 00ca  ld   $ca
              b4de 00c8  ld   $c8
              b4df 00a5  ld   $a5
              b4e0 0078  ld   $78
              b4e1 0091  ld   $91
              b4e2 0092  ld   $92
              b4e3 0010  ld   $10
              b4e4 0002  ld   $02
              b4e5 00ca  ld   $ca
              b4e6 00ca  ld   $ca
              b4e7 0086  ld   $86
              b4e8 00a4  ld   $a4
              b4e9 00a5  ld   $a5
              b4ea 003d  ld   $3d
              b4eb 00c8  ld   $c8
              b4ec 00c8  ld   $c8
              b4ed 00c8  ld   $c8
              b4ee 0091  ld   $91
              b4ef 0092  ld   $92
              b4f0 00a2  ld   $a2
              b4f1 000b  ld   $0b
              b4f2 00a9  ld   $a9
              b4f3 0000  ld   $00
              b4f4 0024  ld   $24
              b4f5 003e  ld   $3e
              b4f6 0050  ld   $50
              b4f7 0008  ld   $08
              b4f8 0068  ld   $68
              b4f9 0018  ld   $18
              b4fa 0069  ld   $69
              b4fb fe00  bra  ac          ;+-----------------------------------+
              b4fc fcfd  bra  $b4fd       ;|                                   |
              b4fd 1418  ld   $18,y       ;| Trampoline for page $b400 lookups |
              b4fe e006  jmp  y,$06       ;|                                   |
              b4ff c218  st   [$18]       ;+-----------------------------------+
              b500 0001  ld   $01
              b501 00aa  ld   $aa
              b502 0068  ld   $68
              b503 0069  ld   $69
              b504 0000  ld   $00
              b505 00c8  ld   $c8
              b506 0091  ld   $91
              b507 0092  ld   $92
              b508 00c8  ld   $c8
              b509 008a  ld   $8a
              b50a 0091  ld   $91
              b50b 0092  ld   $92
              b50c 0020  ld   $20
              b50d 0087  ld   $87
              b50e 0013  ld   $13
              b50f 0086  ld   $86
              b510 00a4  ld   $a4
              b511 0085  ld   $85
              b512 00a5  ld   $a5
              b513 00a4  ld   $a4
              b514 0054  ld   $54
              b515 00c6  ld   $c6
              b516 003d  ld   $3d
              b517 00d0  ld   $d0
              b518 00dc  ld   $dc
              b519 0065  ld   $65
              b51a 008c  ld   $8c
              b51b 00b0  ld   $b0
              b51c 005d  ld   $5d
              b51d 0085  ld   $85
              b51e 008c  ld   $8c
              b51f 00a8  ld   $a8
              b520 008a  ld   $8a
              b521 0065  ld   $65
              b522 008b  ld   $8b
              b523 0090  ld   $90
              b524 0003  ld   $03
              b525 00c8  ld   $c8
              b526 00f0  ld   $f0
              b527 0052  ld   $52
              b528 0020  ld   $20
              b529 001b  ld   $1b
              b52a 0005  ld   $05
              b52b 0085  ld   $85
              b52c 0063  ld   $63
              b52d 0084  ld   $84
              b52e 0064  ld   $64
              b52f 00a9  ld   $a9
              b530 0000  ld   $00
              b531 00e6  ld   $e6
              b532 00a5  ld   $a5
              b533 00a4  ld   $a4
              b534 0013  ld   $13
              b535 0000  ld   $00
              b536 0000  ld   $00
              b537 00a4  ld   $a4
              b538 00f0  ld   $f0
              b539 0005  ld   $05
              b53a 0088  ld   $88
              b53b 0091  ld   $91
              b53c 008b  ld   $8b
              b53d 00d0  ld   $d0
              b53e 00fb  ld   $fb
              b53f 00c6  ld   $c6
              b540 008c  ld   $8c
              b541 00c6  ld   $c6
              b542 00a5  ld   $a5
              b543 00d0  ld   $d0
              b544 00f5  ld   $f5
              b545 00e6  ld   $e6
              b546 008c  ld   $8c
              b547 0038  ld   $38
              b548 00a5  ld   $a5
              b549 0063  ld   $63
              b54a 00e5  ld   $e5
              b54b 0092  ld   $92
              b54c 00a0  ld   $a0
              b54d 0002  ld   $02
              b54e 0091  ld   $91
              b54f 0092  ld   $92
              b550 00a5  ld   $a5
              b551 0064  ld   $64
              b552 00c8  ld   $c8
              b553 00e5  ld   $e5
              b554 0093  ld   $93
              b555 0091  ld   $91
              b556 0092  ld   $92
              b557 00a5  ld   $a5
              b558 003e  ld   $3e
              b559 00d0  ld   $d0
              b55a 0062  ld   $62
              b55b 00c8  ld   $c8
              b55c 00b1  ld   $b1
              b55d 0092  ld   $92
              b55e 0085  ld   $85
              b55f 003d  ld   $3d
              b560 00a9  ld   $a9
              b561 0000  ld   $00
              b562 0085  ld   $85
              b563 00a4  ld   $a4
              b564 0085  ld   $85
              b565 00a5  ld   $a5
              b566 00c8  ld   $c8
              b567 0068  ld   $68
              b568 00aa  ld   $aa
              b569 0085  ld   $85
              b56a 0097  ld   $97
              b56b 0068  ld   $68
              b56c 0085  ld   $85
              b56d 0098  ld   $98
              b56e 00d1  ld   $d1
              b56f 0092  ld   $92
              b570 0090  ld   $90
              b571 000e  ld   $0e
              b572 00d0  ld   $d0
              b573 0006  ld   $06
              b574 00c8  ld   $c8
              b575 008a  ld   $8a
              b576 00d1  ld   $d1
              b577 0092  ld   $92
              b578 0090  ld   $90
              b579 0007  ld   $07
              b57a 004c  ld   $4c
              b57b 007f  ld   $7f
              b57c 0012  ld   $12
              b57d 004c  ld   $4c
              b57e 0048  ld   $48
              b57f 0005  ld   $05
              b580 00c8  ld   $c8
              b581 00a5  ld   $a5
              b582 00a5  ld   $a5
              b583 0005  ld   $05
              b584 00a4  ld   $a4
              b585 0018  ld   $18
              b586 00f0  ld   $f0
              b587 000a  ld   $0a
              b588 0020  ld   $20
              b589 0087  ld   $87
              b58a 0013  ld   $13
              b58b 008a  ld   $8a
              b58c 0065  ld   $65
              b58d 0097  ld   $97
              b58e 00aa  ld   $aa
              b58f 0098  ld   $98
              b590 00a4  ld   $a4
              b591 0054  ld   $54
              b592 0065  ld   $65
              b593 0098  ld   $98
              b594 0086  ld   $86
              b595 00a4  ld   $a4
              b596 00c6  ld   $c6
              b597 003d  ld   $3d
              b598 00d0  ld   $d0
              b599 00ca  ld   $ca
              b59a 0085  ld   $85
              b59b 00a5  ld   $a5
              b59c 00a2  ld   $a2
              b59d 0005  ld   $05
              b59e 00a5  ld   $a5
              b59f 0077  ld   $77
              b5a0 0010  ld   $10
              b5a1 0001  ld   $01
              b5a2 00ca  ld   $ca
              b5a3 00a5  ld   $a5
              b5a4 0078  ld   $78
              b5a5 0010  ld   $10
              b5a6 0002  ld   $02
              b5a7 00ca  ld   $ca
              b5a8 00ca  ld   $ca
              b5a9 0086  ld   $86
              b5aa 005a  ld   $5a
              b5ab 00a9  ld   $a9
              b5ac 0000  ld   $00
              b5ad 0020  ld   $20
              b5ae 0090  ld   $90
              b5af 0013  ld   $13
              b5b0 008a  ld   $8a
              b5b1 0065  ld   $65
              b5b2 008b  ld   $8b
              b5b3 0085  ld   $85
              b5b4 0079  ld   $79
              b5b5 0098  ld   $98
              b5b6 0065  ld   $65
              b5b7 008c  ld   $8c
              b5b8 0085  ld   $85
              b5b9 007a  ld   $7a
              b5ba 00a8  ld   $a8
              b5bb 00a5  ld   $a5
              b5bc 0079  ld   $79
              b5bd 0060  ld   $60
              b5be 0084  ld   $84
              b5bf 0054  ld   $54
              b5c0 00b1  ld   $b1
              b5c1 0092  ld   $92
              b5c2 0085  ld   $85
              b5c3 005a  ld   $5a
              b5c4 0088  ld   $88
              b5c5 00b1  ld   $b1
              b5c6 0092  ld   $92
              b5c7 0085  ld   $85
              b5c8 005b  ld   $5b
              b5c9 00a9  ld   $a9
              b5ca 0010  ld   $10
              b5cb 0085  ld   $85
              b5cc 0090  ld   $90
              b5cd 00a2  ld   $a2
              b5ce 0000  ld   $00
              b5cf 00a0  ld   $a0
              b5d0 0000  ld   $00
              b5d1 008a  ld   $8a
              b5d2 000a  ld   $0a
              b5d3 00aa  ld   $aa
              b5d4 0098  ld   $98
              b5d5 002a  ld   $2a
              b5d6 00a8  ld   $a8
              b5d7 00b0  ld   $b0
              b5d8 00a4  ld   $a4
              b5d9 0006  ld   $06
              b5da 00a4  ld   $a4
              b5db 0026  ld   $26
              b5dc 00a5  ld   $a5
              b5dd 0090  ld   $90
              b5de 000b  ld   $0b
              b5df 0018  ld   $18
              b5e0 008a  ld   $8a
              b5e1 0065  ld   $65
              b5e2 005a  ld   $5a
              b5e3 00aa  ld   $aa
              b5e4 0098  ld   $98
              b5e5 0065  ld   $65
              b5e6 005b  ld   $5b
              b5e7 00a8  ld   $a8
              b5e8 00b0  ld   $b0
              b5e9 0093  ld   $93
              b5ea 00c6  ld   $c6
              b5eb 0090  ld   $90
              b5ec 00d0  ld   $d0
              b5ed 00e3  ld   $e3
              b5ee 0060  ld   $60
              b5ef 00a5  ld   $a5
              b5f0 003f  ld   $3f
              b5f1 00f0  ld   $f0
              b5f2 0003  ld   $03
              b5f3 0020  ld   $20
              b5f4 00e2  ld   $e2
              b5f5 0016  ld   $16
              b5f6 0020  ld   $20
              b5f7 0062  ld   $62
              b5f8 0015  ld   $15
              b5f9 0038  ld   $38
              b5fa 00a5  ld   $a5
              b5fb fe00  bra  ac          ;+-----------------------------------+
              b5fc fcfd  bra  $b5fd       ;|                                   |
              b5fd 1418  ld   $18,y       ;| Trampoline for page $b500 lookups |
              b5fe e006  jmp  y,$06       ;|                                   |
              b5ff c218  st   [$18]       ;+-----------------------------------+
              b600 0065  ld   $65
              b601 00e5  ld   $e5
              b602 0063  ld   $63
              b603 00a8  ld   $a8
              b604 00a5  ld   $a5
              b605 0066  ld   $66
              b606 00e5  ld   $e5
              b607 0064  ld   $64
              b608 00a2  ld   $a2
              b609 0000  ld   $00
              b60a 0086  ld   $86
              b60b 003f  ld   $3f
              b60c 0085  ld   $85
              b60d 0095  ld   $95
              b60e 0084  ld   $84
              b60f 0096  ld   $96
              b610 00a2  ld   $a2
              b611 0090  ld   $90
              b612 004c  ld   $4c
              b613 00bc  ld   $bc
              b614 001c  ld   $1c
              b615 00a5  ld   $a5
              b616 0030  ld   $30
              b617 0020  ld   $20
              b618 007a  ld   $7a
              b619 0004  ld   $04
              b61a 00a9  ld   $a9
              b61b 0000  ld   $00
              b61c 00f0  ld   $f0
              b61d 00ea  ld   $ea
              b61e 00a6  ld   $a6
              b61f 006c  ld   $6c
              b620 00e8  ld   $e8
              b621 00d0  ld   $d0
              b622 009f  ld   $9f
              b623 00a2  ld   $a2
              b624 0095  ld   $95
              b625 002c  ld   $2c
              b626 00a2  ld   $a2
              b627 00e0  ld   $e0
              b628 004c  ld   $4c
              b629 004a  ld   $4a
              b62a 0005  ld   $05
              b62b 0020  ld   $20
              b62c 001d  ld   $1d
              b62d 0014  ld   $14
              b62e 0020  ld   $20
              b62f 00e2  ld   $e2
              b630 0013  ld   $13
              b631 0020  ld   $20
              b632 0060  ld   $60
              b633 000f  ld   $0f
              b634 00a9  ld   $a9
              b635 0080  ld   $80
              b636 0085  ld   $85
              b637 0042  ld   $42
              b638 0020  ld   $20
              b639 00d0  ld   $d0
              b63a 0010  ld   $10
              b63b 0020  ld   $20
              b63c 0014  ld   $14
              b63d 0000  ld   $00
              b63e 0000  ld   $00
              b63f 00f9  ld   $f9
              b640 000d  ld   $0d
              b641 0020  ld   $20
              b642 005d  ld   $5d
              b643 000f  ld   $0f
              b644 00a9  ld   $a9
              b645 00ac  ld   $ac
              b646 0020  ld   $20
              b647 0065  ld   $65
              b648 000f  ld   $0f
              b649 0048  ld   $48
              b64a 00a5  ld   $a5
              b64b 007a  ld   $7a
              b64c 0048  ld   $48
              b64d 00a5  ld   $a5
              b64e 0079  ld   $79
              b64f 0048  ld   $48
              b650 00a5  ld   $a5
              b651 00a7  ld   $a7
              b652 0048  ld   $48
              b653 00a5  ld   $a5
              b654 00a6  ld   $a6
              b655 0048  ld   $48
              b656 0020  ld   $20
              b657 00e7  ld   $e7
              b658 0009  ld   $09
              b659 004c  ld   $4c
              b65a 008b  ld   $8b
              b65b 0014  ld   $14
              b65c 00a9  ld   $a9
              b65d 009f  ld   $9f
              b65e 0020  ld   $20
              b65f 0065  ld   $65
              b660 000f  ld   $0f
              b661 0009  ld   $09
              b662 0080  ld   $80
              b663 0085  ld   $85
              b664 0042  ld   $42
              b665 0020  ld   $20
              b666 00d7  ld   $d7
              b667 0010  ld   $10
              b668 0085  ld   $85
              b669 0081  ld   $81
              b66a 0084  ld   $84
              b66b 0082  ld   $82
              b66c 004c  ld   $4c
              b66d 00f9  ld   $f9
              b66e 000d  ld   $0d
              b66f 0020  ld   $20
              b670 001d  ld   $1d
              b671 0014  ld   $14
              b672 00a5  ld   $a5
              b673 0082  ld   $82
              b674 0048  ld   $48
              b675 00a5  ld   $a5
              b676 0081  ld   $81
              b677 0048  ld   $48
              b678 0020  ld   $20
              b679 0057  ld   $57
              b67a 000f  ld   $0f
              b67b 0020  ld   $20
              b67c 00f9  ld   $f9
              b67d 000d  ld   $0d
              b67e 0068  ld   $68
              b67f 0085  ld   $85
              b680 0081  ld   $81
              b681 0068  ld   $68
              b682 0085  ld   $85
              b683 0082  ld   $82
              b684 00a0  ld   $a0
              b685 0002  ld   $02
              b686 00b1  ld   $b1
              b687 0081  ld   $81
              b688 0085  ld   $85
              b689 0079  ld   $79
              b68a 00aa  ld   $aa
              b68b 00c8  ld   $c8
              b68c 00b1  ld   $b1
              b68d 0081  ld   $81
              b68e 00f0  ld   $f0
              b68f 0099  ld   $99
              b690 0085  ld   $85
              b691 007a  ld   $7a
              b692 00c8  ld   $c8
              b693 00b1  ld   $b1
              b694 0079  ld   $79
              b695 0048  ld   $48
              b696 0088  ld   $88
              b697 0010  ld   $10
              b698 00fa  ld   $fa
              b699 00a4  ld   $a4
              b69a 007a  ld   $7a
              b69b 0020  ld   $20
              b69c 004c  ld   $4c
              b69d 001c  ld   $1c
              b69e 00a5  ld   $a5
              b69f 00a7  ld   $a7
              b6a0 0048  ld   $48
              b6a1 00a5  ld   $a5
              b6a2 00a6  ld   $a6
              b6a3 0048  ld   $48
              b6a4 00b1  ld   $b1
              b6a5 0081  ld   $81
              b6a6 0085  ld   $85
              b6a7 00a6  ld   $a6
              b6a8 00c8  ld   $c8
              b6a9 00b1  ld   $b1
              b6aa 0081  ld   $81
              b6ab 0085  ld   $85
              b6ac 00a7  ld   $a7
              b6ad 00a5  ld   $a5
              b6ae 007a  ld   $7a
              b6af 0048  ld   $48
              b6b0 00a5  ld   $a5
              b6b1 0079  ld   $79
              b6b2 0048  ld   $48
              b6b3 0020  ld   $20
              b6b4 00f6  ld   $f6
              b6b5 000d  ld   $0d
              b6b6 0068  ld   $68
              b6b7 0085  ld   $85
              b6b8 0081  ld   $81
              b6b9 0068  ld   $68
              b6ba 0085  ld   $85
              b6bb 0082  ld   $82
              b6bc 0020  ld   $20
              b6bd 0071  ld   $71
              b6be 0022  ld   $22
              b6bf 00f0  ld   $f0
              b6c0 0003  ld   $03
              b6c1 004c  ld   $4c
              b6c2 006e  ld   $6e
              b6c3 000f  ld   $0f
              b6c4 0068  ld   $68
              b6c5 0085  ld   $85
              b6c6 00a6  ld   $a6
              b6c7 0068  ld   $68
              b6c8 0085  ld   $85
              b6c9 00a7  ld   $a7
              b6ca 00a0  ld   $a0
              b6cb 0000  ld   $00
              b6cc 0068  ld   $68
              b6cd 0091  ld   $91
              b6ce 0081  ld   $81
              b6cf 0068  ld   $68
              b6d0 00c8  ld   $c8
              b6d1 0091  ld   $91
              b6d2 0081  ld   $81
              b6d3 0068  ld   $68
              b6d4 00c8  ld   $c8
              b6d5 0091  ld   $91
              b6d6 0081  ld   $81
              b6d7 0068  ld   $68
              b6d8 00c8  ld   $c8
              b6d9 0091  ld   $91
              b6da 0081  ld   $81
              b6db 0068  ld   $68
              b6dc 00c8  ld   $c8
              b6dd 0091  ld   $91
              b6de 0081  ld   $81
              b6df 0060  ld   $60
              b6e0 0020  ld   $20
              b6e1 00f9  ld   $f9
              b6e2 000d  ld   $0d
              b6e3 00a0  ld   $a0
              b6e4 0000  ld   $00
              b6e5 0020  ld   $20
              b6e6 0057  ld   $57
              b6e7 001e  ld   $1e
              b6e8 0068  ld   $68
              b6e9 0068  ld   $68
              b6ea 00a9  ld   $a9
              b6eb 0004  ld   $04
              b6ec 00a0  ld   $a0
              b6ed 0002  ld   $02
              b6ee 00d0  ld   $d0
              b6ef 0012  ld   $12
              b6f0 00a6  ld   $a6
              b6f1 0097  ld   $97
              b6f2 00a4  ld   $a4
              b6f3 0098  ld   $98
              b6f4 0086  ld   $86
              b6f5 0083  ld   $83
              b6f6 0084  ld   $84
              b6f7 0084  ld   $84
              b6f8 0020  ld   $20
              b6f9 0030  ld   $30
              b6fa 0015  ld   $15
              b6fb fe00  bra  ac          ;+-----------------------------------+
              b6fc fcfd  bra  $b6fd       ;|                                   |
              b6fd 1418  ld   $18,y       ;| Trampoline for page $b600 lookups |
              b6fe e006  jmp  y,$06       ;|                                   |
              b6ff c218  st   [$18]       ;+-----------------------------------+
              b700 0086  ld   $86
              b701 0095  ld   $95
              b702 0084  ld   $84
              b703 0096  ld   $96
              b704 0085  ld   $85
              b705 0094  ld   $94
              b706 0060  ld   $60
              b707 00a2  ld   $a2
              b708 0022  ld   $22
              b709 0086  ld   $86
              b70a 003b  ld   $3b
              b70b 0086  ld   $86
              b70c 003c  ld   $3c
              b70d 0085  ld   $85
              b70e 00a2  ld   $a2
              b70f 0084  ld   $84
              b710 00a3  ld   $a3
              b711 0085  ld   $85
              b712 0095  ld   $95
              b713 0084  ld   $84
              b714 0096  ld   $96
              b715 00a0  ld   $a0
              b716 00ff  ld   $ff
              b717 00c8  ld   $c8
              b718 00b1  ld   $b1
              b719 00a2  ld   $a2
              b71a 00f0  ld   $f0
              b71b 000c  ld   $0c
              b71c 00c5  ld   $c5
              b71d 003b  ld   $3b
              b71e 00f0  ld   $f0
              b71f 0004  ld   $04
              b720 00c5  ld   $c5
              b721 003c  ld   $3c
              b722 00d0  ld   $d0
              b723 00f3  ld   $f3
              b724 00c9  ld   $c9
              b725 0022  ld   $22
              b726 00f0  ld   $f0
              b727 0001  ld   $01
              b728 0018  ld   $18
              b729 0084  ld   $84
              b72a 0094  ld   $94
              b72b 0098  ld   $98
              b72c 0065  ld   $65
              b72d 00a2  ld   $a2
              b72e 0085  ld   $85
              b72f 00a4  ld   $a4
              b730 00a6  ld   $a6
              b731 00a3  ld   $a3
              b732 0090  ld   $90
              b733 0001  ld   $01
              b734 00e8  ld   $e8
              b735 0086  ld   $86
              b736 00a5  ld   $a5
              b737 00a5  ld   $a5
              b738 00a3  ld   $a3
              b739 00f0  ld   $f0
              b73a 0004  ld   $04
              b73b 00c9  ld   $c9
              b73c 0024  ld   $24
              b73d 00d0  ld   $d0
              b73e 000b  ld   $0b
              b73f 0098  ld   $98
              b740 0020  ld   $20
              b741 00b1  ld   $b1
              b742 0014  ld   $14
              b743 00a6  ld   $a6
              b744 0015  ld   $15
              b745 0000  ld   $00
              b746 0000  ld   $00
              b747 00a2  ld   $a2
              b748 00a4  ld   $a4
              b749 00a3  ld   $a3
              b74a 0020  ld   $20
              b74b 00c4  ld   $c4
              b74c 0016  ld   $16
              b74d 00a6  ld   $a6
              b74e 0048  ld   $48
              b74f 00e0  ld   $e0
              b750 0054  ld   $54
              b751 00d0  ld   $d0
              b752 0005  ld   $05
              b753 00a2  ld   $a2
              b754 00bf  ld   $bf
              b755 004c  ld   $4c
              b756 004a  ld   $4a
              b757 0005  ld   $05
              b758 00a5  ld   $a5
              b759 0094  ld   $94
              b75a 0095  ld   $95
              b75b 0000  ld   $00
              b75c 00a5  ld   $a5
              b75d 0095  ld   $95
              b75e 0095  ld   $95
              b75f 0001  ld   $01
              b760 00a5  ld   $a5
              b761 0096  ld   $96
              b762 0095  ld   $95
              b763 0002  ld   $02
              b764 00a0  ld   $a0
              b765 0000  ld   $00
              b766 0086  ld   $86
              b767 0097  ld   $97
              b768 0084  ld   $84
              b769 0098  ld   $98
              b76a 0084  ld   $84
              b76b 00a3  ld   $a3
              b76c 0088  ld   $88
              b76d 0084  ld   $84
              b76e 003f  ld   $3f
              b76f 0086  ld   $86
              b770 0049  ld   $49
              b771 00e8  ld   $e8
              b772 00e8  ld   $e8
              b773 00e8  ld   $e8
              b774 0086  ld   $86
              b775 0048  ld   $48
              b776 0060  ld   $60
              b777 0046  ld   $46
              b778 0041  ld   $41
              b779 0048  ld   $48
              b77a 0049  ld   $49
              b77b 00ff  ld   $ff
              b77c 0038  ld   $38
              b77d 0065  ld   $65
              b77e 0065  ld   $65
              b77f 00a4  ld   $a4
              b780 0066  ld   $66
              b781 00b0  ld   $b0
              b782 0001  ld   $01
              b783 0088  ld   $88
              b784 00c4  ld   $c4
              b785 0064  ld   $64
              b786 0090  ld   $90
              b787 0011  ld   $11
              b788 00d0  ld   $d0
              b789 0004  ld   $04
              b78a 00c5  ld   $c5
              b78b 0063  ld   $63
              b78c 0090  ld   $90
              b78d 000b  ld   $0b
              b78e 0085  ld   $85
              b78f 0065  ld   $65
              b790 0084  ld   $84
              b791 0066  ld   $66
              b792 0085  ld   $85
              b793 0067  ld   $67
              b794 0084  ld   $84
              b795 0068  ld   $68
              b796 00aa  ld   $aa
              b797 0068  ld   $68
              b798 0060  ld   $60
              b799 00a2  ld   $a2
              b79a 004d  ld   $4d
              b79b 00a5  ld   $a5
              b79c 0041  ld   $41
              b79d 0030  ld   $30
              b79e 00b6  ld   $b6
              b79f 0020  ld   $20
              b7a0 0062  ld   $62
              b7a1 0015  ld   $15
              b7a2 00a9  ld   $a9
              b7a3 0080  ld   $80
              b7a4 0085  ld   $85
              b7a5 0041  ld   $41
              b7a6 0068  ld   $68
              b7a7 00d0  ld   $d0
              b7a8 00d0  ld   $d0
              b7a9 00a6  ld   $a6
              b7aa 0069  ld   $69
              b7ab 00a5  ld   $a5
              b7ac 006a  ld   $6a
              b7ad 0086  ld   $86
              b7ae 0065  ld   $65
              b7af 0085  ld   $85
              b7b0 0066  ld   $66
              b7b1 00a0  ld   $a0
              b7b2 0000  ld   $00
              b7b3 0084  ld   $84
              b7b4 0082  ld   $82
              b7b5 0084  ld   $84
              b7b6 0081  ld   $81
              b7b7 00a5  ld   $a5
              b7b8 0063  ld   $63
              b7b9 00a6  ld   $a6
              b7ba 0064  ld   $64
              b7bb 0085  ld   $85
              b7bc 0092  ld   $92
              b7bd 0086  ld   $86
              b7be 0093  ld   $93
              b7bf 00a9  ld   $a9
              b7c0 004b  ld   $4b
              b7c1 00a2  ld   $a2
              b7c2 0000  ld   $00
              b7c3 0085  ld   $85
              b7c4 0054  ld   $54
              b7c5 0086  ld   $86
              b7c6 0055  ld   $55
              b7c7 00c5  ld   $c5
              b7c8 0048  ld   $48
              b7c9 00f0  ld   $f0
              b7ca 0005  ld   $05
              b7cb 0020  ld   $20
              b7cc 0003  ld   $03
              b7cd 0016  ld   $16
              b7ce 00f0  ld   $f0
              b7cf 00f7  ld   $f7
              b7d0 00a9  ld   $a9
              b7d1 0007  ld   $07
              b7d2 0085  ld   $85
              b7d3 0086  ld   $86
              b7d4 00a5  ld   $a5
              b7d5 005f  ld   $5f
              b7d6 00a6  ld   $a6
              b7d7 0060  ld   $60
              b7d8 0085  ld   $85
              b7d9 0054  ld   $54
              b7da 0086  ld   $86
              b7db 0055  ld   $55
              b7dc 00e4  ld   $e4
              b7dd 0062  ld   $62
              b7de 00d0  ld   $d0
              b7df 0004  ld   $04
              b7e0 00c5  ld   $c5
              b7e1 0061  ld   $61
              b7e2 00f0  ld   $f0
              b7e3 0005  ld   $05
              b7e4 0020  ld   $20
              b7e5 00f9  ld   $f9
              b7e6 0015  ld   $15
              b7e7 00f0  ld   $f0
              b7e8 00f3  ld   $f3
              b7e9 0085  ld   $85
              b7ea 008b  ld   $8b
              b7eb 0086  ld   $86
              b7ec 008c  ld   $8c
              b7ed 00a9  ld   $a9
              b7ee 0003  ld   $03
              b7ef 0085  ld   $85
              b7f0 0086  ld   $86
              b7f1 00a5  ld   $a5
              b7f2 008b  ld   $8b
              b7f3 00a6  ld   $a6
              b7f4 008c  ld   $8c
              b7f5 00e4  ld   $e4
              b7f6 0064  ld   $64
              b7f7 00d0  ld   $d0
              b7f8 0007  ld   $07
              b7f9 00c5  ld   $c5
              b7fa 0063  ld   $63
              b7fb fe00  bra  ac          ;+-----------------------------------+
              b7fc fcfd  bra  $b7fd       ;|                                   |
              b7fd 1418  ld   $18,y       ;| Trampoline for page $b700 lookups |
              b7fe e006  jmp  y,$06       ;|                                   |
              b7ff c218  st   [$18]       ;+-----------------------------------+
              b800 00d0  ld   $d0
              b801 0003  ld   $03
              b802 004c  ld   $4c
              b803 0042  ld   $42
              b804 0016  ld   $16
              b805 0085  ld   $85
              b806 0054  ld   $54
              b807 0086  ld   $86
              b808 0055  ld   $55
              b809 00a0  ld   $a0
              b80a 0000  ld   $00
              b80b 00b1  ld   $b1
              b80c 0054  ld   $54
              b80d 00aa  ld   $aa
              b80e 00c8  ld   $c8
              b80f 00b1  ld   $b1
              b810 0054  ld   $54
              b811 0008  ld   $08
              b812 00c8  ld   $c8
              b813 00b1  ld   $b1
              b814 0054  ld   $54
              b815 0065  ld   $65
              b816 008b  ld   $8b
              b817 0085  ld   $85
              b818 008b  ld   $8b
              b819 00c8  ld   $c8
              b81a 00b1  ld   $b1
              b81b 0054  ld   $54
              b81c 0065  ld   $65
              b81d 008c  ld   $8c
              b81e 0085  ld   $85
              b81f 008c  ld   $8c
              b820 0028  ld   $28
              b821 0010  ld   $10
              b822 00d3  ld   $d3
              b823 008a  ld   $8a
              b824 0030  ld   $30
              b825 00d0  ld   $d0
              b826 00c8  ld   $c8
              b827 00b1  ld   $b1
              b828 0054  ld   $54
              b829 00a0  ld   $a0
              b82a 0000  ld   $00
              b82b 000a  ld   $0a
              b82c 0069  ld   $69
              b82d 0005  ld   $05
              b82e 0065  ld   $65
              b82f 0054  ld   $54
              b830 0085  ld   $85
              b831 0054  ld   $54
              b832 0090  ld   $90
              b833 0002  ld   $02
              b834 00e6  ld   $e6
              b835 0055  ld   $55
              b836 00a6  ld   $a6
              b837 0055  ld   $55
              b838 00e4  ld   $e4
              b839 008c  ld   $8c
              b83a 00d0  ld   $d0
              b83b 0004  ld   $04
              b83c 00c5  ld   $c5
              b83d 008b  ld   $8b
              b83e 00f0  ld   $f0
              b83f 00ba  ld   $ba
              b840 0020  ld   $20
              b841 0003  ld   $03
              b842 0016  ld   $16
              b843 00f0  ld   $f0
              b844 00f3  ld   $f3
              b845 00b1  ld   $b1
              b846 0054  ld   $54
              b847 0030  ld   $30
              b848 0035  ld   $35
              b849 00c8  ld   $c8
              b84a 00b1  ld   $b1
              b84b 0054  ld   $54
              b84c 0016  ld   $16
              b84d 0000  ld   $00
              b84e 0000  ld   $00
              b84f 0010  ld   $10
              b850 0030  ld   $30
              b851 00c8  ld   $c8
              b852 00b1  ld   $b1
              b853 0054  ld   $54
              b854 00f0  ld   $f0
              b855 002b  ld   $2b
              b856 00c8  ld   $c8
              b857 00b1  ld   $b1
              b858 0054  ld   $54
              b859 00aa  ld   $aa
              b85a 00c8  ld   $c8
              b85b 00b1  ld   $b1
              b85c 0054  ld   $54
              b85d 00c5  ld   $c5
              b85e 0066  ld   $66
              b85f 0090  ld   $90
              b860 0006  ld   $06
              b861 00d0  ld   $d0
              b862 001e  ld   $1e
              b863 00e4  ld   $e4
              b864 0065  ld   $65
              b865 00b0  ld   $b0
              b866 001a  ld   $1a
              b867 00c5  ld   $c5
              b868 0093  ld   $93
              b869 0090  ld   $90
              b86a 0016  ld   $16
              b86b 00d0  ld   $d0
              b86c 0004  ld   $04
              b86d 00e4  ld   $e4
              b86e 0092  ld   $92
              b86f 0090  ld   $90
              b870 0010  ld   $10
              b871 0086  ld   $86
              b872 0092  ld   $92
              b873 0085  ld   $85
              b874 0093  ld   $93
              b875 00a5  ld   $a5
              b876 0054  ld   $54
              b877 00a6  ld   $a6
              b878 0055  ld   $55
              b879 0085  ld   $85
              b87a 0081  ld   $81
              b87b 0086  ld   $86
              b87c 0082  ld   $82
              b87d 00a5  ld   $a5
              b87e 0086  ld   $86
              b87f 0085  ld   $85
              b880 0088  ld   $88
              b881 00a5  ld   $a5
              b882 0086  ld   $86
              b883 0018  ld   $18
              b884 0065  ld   $65
              b885 0054  ld   $54
              b886 0085  ld   $85
              b887 0054  ld   $54
              b888 0090  ld   $90
              b889 0002  ld   $02
              b88a 00e6  ld   $e6
              b88b 0055  ld   $55
              b88c 00a6  ld   $a6
              b88d 0055  ld   $55
              b88e 00a0  ld   $a0
              b88f 0000  ld   $00
              b890 0060  ld   $60
              b891 00a5  ld   $a5
              b892 0082  ld   $82
              b893 0005  ld   $05
              b894 0081  ld   $81
              b895 00f0  ld   $f0
              b896 00f5  ld   $f5
              b897 00a5  ld   $a5
              b898 0088  ld   $88
              b899 0029  ld   $29
              b89a 0004  ld   $04
              b89b 004a  ld   $4a
              b89c 00a8  ld   $a8
              b89d 0085  ld   $85
              b89e 0088  ld   $88
              b89f 00b1  ld   $b1
              b8a0 0081  ld   $81
              b8a1 0065  ld   $65
              b8a2 0092  ld   $92
              b8a3 0085  ld   $85
              b8a4 008d  ld   $8d
              b8a5 00a5  ld   $a5
              b8a6 0093  ld   $93
              b8a7 0069  ld   $69
              b8a8 0000  ld   $00
              b8a9 0085  ld   $85
              b8aa 008e  ld   $8e
              b8ab 00a5  ld   $a5
              b8ac 0065  ld   $65
              b8ad 00a6  ld   $a6
              b8ae 0066  ld   $66
              b8af 0085  ld   $85
              b8b0 008b  ld   $8b
              b8b1 0086  ld   $86
              b8b2 008c  ld   $8c
              b8b3 0020  ld   $20
              b8b4 00d2  ld   $d2
              b8b5 0004  ld   $04
              b8b6 00a4  ld   $a4
              b8b7 0088  ld   $88
              b8b8 00c8  ld   $c8
              b8b9 00a5  ld   $a5
              b8ba 008b  ld   $8b
              b8bb 0091  ld   $91
              b8bc 0081  ld   $81
              b8bd 00aa  ld   $aa
              b8be 00e6  ld   $e6
              b8bf 008c  ld   $8c
              b8c0 00a5  ld   $a5
              b8c1 008c  ld   $8c
              b8c2 00c8  ld   $c8
              b8c3 0091  ld   $91
              b8c4 0081  ld   $81
              b8c5 004c  ld   $4c
              b8c6 0066  ld   $66
              b8c7 0015  ld   $15
              b8c8 00a5  ld   $a5
              b8c9 0098  ld   $98
              b8ca 0048  ld   $48
              b8cb 00a5  ld   $a5
              b8cc 0097  ld   $97
              b8cd 0048  ld   $48
              b8ce 0020  ld   $20
              b8cf 00ef  ld   $ef
              b8d0 000e  ld   $0e
              b8d1 0020  ld   $20
              b8d2 00fb  ld   $fb
              b8d3 000d  ld   $0d
              b8d4 0068  ld   $68
              b8d5 0085  ld   $85
              b8d6 00a2  ld   $a2
              b8d7 0068  ld   $68
              b8d8 0085  ld   $85
              b8d9 00a3  ld   $a3
              b8da 00a0  ld   $a0
              b8db 0000  ld   $00
              b8dc 00b1  ld   $b1
              b8dd 00a2  ld   $a2
              b8de 0018  ld   $18
              b8df 0071  ld   $71
              b8e0 0097  ld   $97
              b8e1 0090  ld   $90
              b8e2 0005  ld   $05
              b8e3 00a2  ld   $a2
              b8e4 00b0  ld   $b0
              b8e5 004c  ld   $4c
              b8e6 004a  ld   $4a
              b8e7 0005  ld   $05
              b8e8 0020  ld   $20
              b8e9 00b1  ld   $b1
              b8ea 0014  ld   $14
              b8eb 0020  ld   $20
              b8ec 00b6  ld   $b6
              b8ed 0016  ld   $16
              b8ee 00a5  ld   $a5
              b8ef 0083  ld   $83
              b8f0 00a4  ld   $a4
              b8f1 0084  ld   $84
              b8f2 0020  ld   $20
              b8f3 00e6  ld   $e6
              b8f4 0016  ld   $16
              b8f5 0020  ld   $20
              b8f6 00c8  ld   $c8
              b8f7 0016  ld   $16
              b8f8 00a5  ld   $a5
              b8f9 00a2  ld   $a2
              b8fa 00a4  ld   $a4
              b8fb fe00  bra  ac          ;+-----------------------------------+
              b8fc fcfd  bra  $b8fd       ;|                                   |
              b8fd 1418  ld   $18,y       ;| Trampoline for page $b800 lookups |
              b8fe e006  jmp  y,$06       ;|                                   |
              b8ff c218  st   [$18]       ;+-----------------------------------+
              b900 00a3  ld   $a3
              b901 0020  ld   $20
              b902 00e6  ld   $e6
              b903 0016  ld   $16
              b904 0020  ld   $20
              b905 0006  ld   $06
              b906 0015  ld   $15
              b907 004c  ld   $4c
              b908 0024  ld   $24
              b909 000e  ld   $0e
              b90a 00a0  ld   $a0
              b90b 0000  ld   $00
              b90c 00b1  ld   $b1
              b90d 00a2  ld   $a2
              b90e 0048  ld   $48
              b90f 00c8  ld   $c8
              b910 00b1  ld   $b1
              b911 00a2  ld   $a2
              b912 00aa  ld   $aa
              b913 00c8  ld   $c8
              b914 00b1  ld   $b1
              b915 00a2  ld   $a2
              b916 00a8  ld   $a8
              b917 0068  ld   $68
              b918 0086  ld   $86
              b919 0054  ld   $54
              b91a 0084  ld   $84
              b91b 0055  ld   $55
              b91c 00a8  ld   $a8
              b91d 00f0  ld   $f0
              b91e 000a  ld   $0a
              b91f 0048  ld   $48
              b920 0088  ld   $88
              b921 00b1  ld   $b1
              b922 0054  ld   $54
              b923 0091  ld   $91
              b924 0067  ld   $67
              b925 0098  ld   $98
              b926 00d0  ld   $d0
              b927 00f8  ld   $f8
              b928 0068  ld   $68
              b929 0018  ld   $18
              b92a 0065  ld   $65
              b92b 0067  ld   $67
              b92c 0085  ld   $85
              b92d 0067  ld   $67
              b92e 0090  ld   $90
              b92f 0002  ld   $02
              b930 00e6  ld   $e6
              b931 0068  ld   $68
              b932 0060  ld   $60
              b933 0020  ld   $20
              b934 00fb  ld   $fb
              b935 000d  ld   $0d
              b936 00a5  ld   $a5
              b937 0097  ld   $97
              b938 00a4  ld   $a4
              b939 0098  ld   $98
              b93a 0085  ld   $85
              b93b 0054  ld   $54
              b93c 0084  ld   $84
              b93d 0055  ld   $55
              b93e 0020  ld   $20
              b93f 0017  ld   $17
              b940 0017  ld   $17
              b941 0008  ld   $08
              b942 00a0  ld   $a0
              b943 0000  ld   $00
              b944 00b1  ld   $b1
              b945 0054  ld   $54
              b946 0048  ld   $48
              b947 00c8  ld   $c8
              b948 00b1  ld   $b1
              b949 0054  ld   $54
              b94a 00aa  ld   $aa
              b94b 00c8  ld   $c8
              b94c 00b1  ld   $b1
              b94d 0054  ld   $54
              b94e 00a8  ld   $a8
              b94f 0068  ld   $68
              b950 0028  ld   $28
              b951 00d0  ld   $d0
              b952 0013  ld   $13
              b953 00c4  ld   $c4
              b954 0017  ld   $17
              b955 0000  ld   $00
              b956 0000  ld   $00
              b957 0066  ld   $66
              b958 00d0  ld   $d0
              b959 000f  ld   $0f
              b95a 00e4  ld   $e4
              b95b 0065  ld   $65
              b95c 00d0  ld   $d0
              b95d 000b  ld   $0b
              b95e 0048  ld   $48
              b95f 0018  ld   $18
              b960 0065  ld   $65
              b961 0065  ld   $65
              b962 0085  ld   $85
              b963 0065  ld   $65
              b964 0090  ld   $90
              b965 0002  ld   $02
              b966 00e6  ld   $e6
              b967 0066  ld   $66
              b968 0068  ld   $68
              b969 0086  ld   $86
              b96a 0054  ld   $54
              b96b 0084  ld   $84
              b96c 0055  ld   $55
              b96d 0060  ld   $60
              b96e 00c4  ld   $c4
              b96f 004a  ld   $4a
              b970 00d0  ld   $d0
              b971 000c  ld   $0c
              b972 00c5  ld   $c5
              b973 0049  ld   $49
              b974 00d0  ld   $d0
              b975 0008  ld   $08
              b976 0085  ld   $85
              b977 0048  ld   $48
              b978 00e9  ld   $e9
              b979 0003  ld   $03
              b97a 0085  ld   $85
              b97b 0049  ld   $49
              b97c 00a0  ld   $a0
              b97d 0000  ld   $00
              b97e 0060  ld   $60
              b97f 0020  ld   $20
              b980 00dd  ld   $dd
              b981 0017  ld   $17
              b982 008a  ld   $8a
              b983 0048  ld   $48
              b984 00a9  ld   $a9
              b985 0001  ld   $01
              b986 0020  ld   $20
              b987 00b9  ld   $b9
              b988 0014  ld   $14
              b989 0068  ld   $68
              b98a 00a0  ld   $a0
              b98b 0000  ld   $00
              b98c 0091  ld   $91
              b98d 0095  ld   $95
              b98e 0068  ld   $68
              b98f 0068  ld   $68
              b990 004c  ld   $4c
              b991 0006  ld   $06
              b992 0015  ld   $15
              b993 0020  ld   $20
              b994 009d  ld   $9d
              b995 0017  ld   $17
              b996 00d1  ld   $d1
              b997 0083  ld   $83
              b998 0098  ld   $98
              b999 0090  ld   $90
              b99a 0004  ld   $04
              b99b 00b1  ld   $b1
              b99c 0083  ld   $83
              b99d 00aa  ld   $aa
              b99e 0098  ld   $98
              b99f 0048  ld   $48
              b9a0 008a  ld   $8a
              b9a1 0048  ld   $48
              b9a2 0020  ld   $20
              b9a3 00b9  ld   $b9
              b9a4 0014  ld   $14
              b9a5 00a5  ld   $a5
              b9a6 0083  ld   $83
              b9a7 00a4  ld   $a4
              b9a8 0084  ld   $84
              b9a9 0020  ld   $20
              b9aa 00e6  ld   $e6
              b9ab 0016  ld   $16
              b9ac 0068  ld   $68
              b9ad 00a8  ld   $a8
              b9ae 0068  ld   $68
              b9af 0018  ld   $18
              b9b0 0065  ld   $65
              b9b1 0054  ld   $54
              b9b2 0085  ld   $85
              b9b3 0054  ld   $54
              b9b4 0090  ld   $90
              b9b5 0002  ld   $02
              b9b6 00e6  ld   $e6
              b9b7 0055  ld   $55
              b9b8 0098  ld   $98
              b9b9 0020  ld   $20
              b9ba 00c8  ld   $c8
              b9bb 0016  ld   $16
              b9bc 004c  ld   $4c
              b9bd 0006  ld   $06
              b9be 0015  ld   $15
              b9bf 0020  ld   $20
              b9c0 009d  ld   $9d
              b9c1 0017  ld   $17
              b9c2 0018  ld   $18
              b9c3 00f1  ld   $f1
              b9c4 0083  ld   $83
              b9c5 0049  ld   $49
              b9c6 00ff  ld   $ff
              b9c7 004c  ld   $4c
              b9c8 0042  ld   $42
              b9c9 0017  ld   $17
              b9ca 00a9  ld   $a9
              b9cb 00ff  ld   $ff
              b9cc 0085  ld   $85
              b9cd 0098  ld   $98
              b9ce 0020  ld   $20
              b9cf 0071  ld   $71
              b9d0 0022  ld   $22
              b9d1 00c9  ld   $c9
              b9d2 0029  ld   $29
              b9d3 00f0  ld   $f0
              b9d4 0006  ld   $06
              b9d5 0020  ld   $20
              b9d6 0063  ld   $63
              b9d7 000f  ld   $0f
              b9d8 0020  ld   $20
              b9d9 00da  ld   $da
              b9da 0017  ld   $17
              b9db 0020  ld   $20
              b9dc 009d  ld   $9d
              b9dd 0017  ld   $17
              b9de 00f0  ld   $f0
              b9df 004b  ld   $4b
              b9e0 00ca  ld   $ca
              b9e1 008a  ld   $8a
              b9e2 0048  ld   $48
              b9e3 0018  ld   $18
              b9e4 00a2  ld   $a2
              b9e5 0000  ld   $00
              b9e6 00f1  ld   $f1
              b9e7 0083  ld   $83
              b9e8 00b0  ld   $b0
              b9e9 00b6  ld   $b6
              b9ea 0049  ld   $49
              b9eb 00ff  ld   $ff
              b9ec 00c5  ld   $c5
              b9ed 0098  ld   $98
              b9ee 0090  ld   $90
              b9ef 00b1  ld   $b1
              b9f0 00a5  ld   $a5
              b9f1 0098  ld   $98
              b9f2 00b0  ld   $b0
              b9f3 00ad  ld   $ad
              b9f4 0020  ld   $20
              b9f5 005d  ld   $5d
              b9f6 000f  ld   $0f
              b9f7 0068  ld   $68
              b9f8 00a8  ld   $a8
              b9f9 0068  ld   $68
              b9fa 0085  ld   $85
              b9fb fe00  bra  ac          ;+-----------------------------------+
              b9fc fcfd  bra  $b9fd       ;|                                   |
              b9fd 1418  ld   $18,y       ;| Trampoline for page $b900 lookups |
              b9fe e006  jmp  y,$06       ;|                                   |
              b9ff c218  st   [$18]       ;+-----------------------------------+
              ba00 0088  ld   $88
              ba01 0068  ld   $68
              ba02 0068  ld   $68
              ba03 0068  ld   $68
              ba04 00aa  ld   $aa
              ba05 0068  ld   $68
              ba06 0085  ld   $85
              ba07 0083  ld   $83
              ba08 0068  ld   $68
              ba09 0085  ld   $85
              ba0a 0084  ld   $84
              ba0b 00a5  ld   $a5
              ba0c 0088  ld   $88
              ba0d 0048  ld   $48
              ba0e 0098  ld   $98
              ba0f 0048  ld   $48
              ba10 00a0  ld   $a0
              ba11 0000  ld   $00
              ba12 008a  ld   $8a
              ba13 0060  ld   $60
              ba14 0020  ld   $20
              ba15 00be  ld   $be
              ba16 0017  ld   $17
              ba17 004c  ld   $4c
              ba18 00de  ld   $de
              ba19 0013  ld   $13
              ba1a 0020  ld   $20
              ba1b 00df  ld   $df
              ba1c 0016  ld   $16
              ba1d 00a2  ld   $a2
              ba1e 0000  ld   $00
              ba1f 0086  ld   $86
              ba20 003f  ld   $3f
              ba21 00a8  ld   $a8
              ba22 0060  ld   $60
              ba23 0020  ld   $20
              ba24 00be  ld   $be
              ba25 0017  ld   $17
              ba26 00f0  ld   $f0
              ba27 0008  ld   $08
              ba28 00a0  ld   $a0
              ba29 0000  ld   $00
              ba2a 00b1  ld   $b1
              ba2b 0054  ld   $54
              ba2c 00a8  ld   $a8
              ba2d 004c  ld   $4c
              ba2e 00de  ld   $de
              ba2f 0013  ld   $13
              ba30 004c  ld   $4c
              ba31 0082  ld   $82
              ba32 0012  ld   $12
              ba33 0020  ld   $20
              ba34 006b  ld   $6b
              ba35 0022  ld   $22
              ba36 0020  ld   $20
              ba37 00f6  ld   $f6
              ba38 000d  ld   $0d
              ba39 0020  ld   $20
              ba3a 00f6  ld   $f6
              ba3b 0011  ld   $11
              ba3c 00a6  ld   $a6
              ba3d 0097  ld   $97
              ba3e 00d0  ld   $d0
              ba3f 00f0  ld   $f0
              ba40 00a6  ld   $a6
              ba41 0098  ld   $98
              ba42 004c  ld   $4c
              ba43 0071  ld   $71
              ba44 0022  ld   $22
              ba45 0020  ld   $20
              ba46 00be  ld   $be
              ba47 0017  ld   $17
              ba48 00d0  ld   $d0
              ba49 0003  ld   $03
              ba4a 004c  ld   $4c
              ba4b 006f  ld   $6f
              ba4c 0019  ld   $19
              ba4d 00a6  ld   $a6
              ba4e 00a6  ld   $a6
              ba4f 00a4  ld   $a4
              ba50 00a7  ld   $a7
              ba51 0086  ld   $86
              ba52 00a4  ld   $a4
              ba53 0084  ld   $84
              ba54 00a5  ld   $a5
              ba55 00a6  ld   $a6
              ba56 0054  ld   $54
              ba57 0086  ld   $86
              ba58 00a6  ld   $a6
              ba59 0018  ld   $18
              ba5a 0065  ld   $65
              ba5b 0054  ld   $54
              ba5c 0018  ld   $18
              ba5d 0000  ld   $00
              ba5e 0000  ld   $00
              ba5f 0085  ld   $85
              ba60 0056  ld   $56
              ba61 00a6  ld   $a6
              ba62 0055  ld   $55
              ba63 0086  ld   $86
              ba64 00a7  ld   $a7
              ba65 0090  ld   $90
              ba66 0001  ld   $01
              ba67 00e8  ld   $e8
              ba68 0086  ld   $86
              ba69 0057  ld   $57
              ba6a 00a0  ld   $a0
              ba6b 0000  ld   $00
              ba6c 00b1  ld   $b1
              ba6d 0056  ld   $56
              ba6e 0048  ld   $48
              ba6f 00a9  ld   $a9
              ba70 0000  ld   $00
              ba71 0091  ld   $91
              ba72 0056  ld   $56
              ba73 0020  ld   $20
              ba74 0071  ld   $71
              ba75 0022  ld   $22
              ba76 0020  ld   $20
              ba77 006b  ld   $6b
              ba78 001d  ld   $1d
              ba79 0068  ld   $68
              ba7a 00a0  ld   $a0
              ba7b 0000  ld   $00
              ba7c 0091  ld   $91
              ba7d 0056  ld   $56
              ba7e 00a6  ld   $a6
              ba7f 00a4  ld   $a4
              ba80 00a4  ld   $a4
              ba81 00a5  ld   $a5
              ba82 0086  ld   $86
              ba83 00a6  ld   $a6
              ba84 0084  ld   $84
              ba85 00a7  ld   $a7
              ba86 0060  ld   $60
              ba87 0020  ld   $20
              ba88 00f6  ld   $f6
              ba89 000d  ld   $0d
              ba8a 0020  ld   $20
              ba8b 0034  ld   $34
              ba8c 0018  ld   $18
              ba8d 0020  ld   $20
              ba8e 0063  ld   $63
              ba8f 000f  ld   $0f
              ba90 004c  ld   $4c
              ba91 00da  ld   $da
              ba92 0017  ld   $17
              ba93 00a5  ld   $a5
              ba94 0099  ld   $99
              ba95 0030  ld   $30
              ba96 009c  ld   $9c
              ba97 00a5  ld   $a5
              ba98 0094  ld   $94
              ba99 00c9  ld   $c9
              ba9a 0091  ld   $91
              ba9b 00b0  ld   $b0
              ba9c 0096  ld   $96
              ba9d 0020  ld   $20
              ba9e 0013  ld   $13
              ba9f 001d  ld   $1d
              baa0 00a5  ld   $a5
              baa1 0097  ld   $97
              baa2 00a4  ld   $a4
              baa3 0098  ld   $98
              baa4 0084  ld   $84
              baa5 0046  ld   $46
              baa6 0085  ld   $85
              baa7 0047  ld   $47
              baa8 0060  ld   $60
              baa9 00a5  ld   $a5
              baaa 0047  ld   $47
              baab 0048  ld   $48
              baac 00a5  ld   $a5
              baad 0046  ld   $46
              baae 0048  ld   $48
              baaf 0020  ld   $20
              bab0 0034  ld   $34
              bab1 0018  ld   $18
              bab2 00a0  ld   $a0
              bab3 0000  ld   $00
              bab4 00ea  ld   $ea
              bab5 00ea  ld   $ea
              bab6 00ea  ld   $ea
              * 8 times
              babc 00b1  ld   $b1
              babd 0046  ld   $46
              babe 00a8  ld   $a8
              babf 0068  ld   $68
              bac0 0085  ld   $85
              bac1 0046  ld   $46
              bac2 0068  ld   $68
              bac3 0085  ld   $85
              bac4 0047  ld   $47
              bac5 004c  ld   $4c
              bac6 00de  ld   $de
              bac7 0013  ld   $13
              bac8 0020  ld   $20
              bac9 0028  ld   $28
              baca 0018  ld   $18
              bacb 008a  ld   $8a
              bacc 00a0  ld   $a0
              bacd 0000  ld   $00
              bace 0091  ld   $91
              bacf 0046  ld   $46
              bad0 0060  ld   $60
              bad1 0020  ld   $20
              bad2 0028  ld   $28
              bad3 0018  ld   $18
              bad4 0086  ld   $86
              bad5 007b  ld   $7b
              bad6 00a2  ld   $a2
              bad7 0000  ld   $00
              bad8 0020  ld   $20
              bad9 0071  ld   $71
              bada 0022  ld   $22
              badb 00f0  ld   $f0
              badc 0029  ld   $29
              badd 0020  ld   $20
              bade 002e  ld   $2e
              badf 0018  ld   $18
              bae0 0086  ld   $86
              bae1 007c  ld   $7c
              bae2 00a0  ld   $a0
              bae3 0000  ld   $00
              bae4 00b1  ld   $b1
              bae5 0046  ld   $46
              bae6 0045  ld   $45
              bae7 007c  ld   $7c
              bae8 0025  ld   $25
              bae9 007b  ld   $7b
              baea 00f0  ld   $f0
              baeb 00f8  ld   $f8
              baec 0060  ld   $60
              baed 00a9  ld   $a9
              baee 0089  ld   $89
              baef 00a0  ld   $a0
              baf0 001f  ld   $1f
              baf1 004c  ld   $4c
              baf2 00df  ld   $df
              baf3 0018  ld   $18
              baf4 0020  ld   $20
              baf5 0004  ld   $04
              baf6 001b  ld   $1b
              baf7 00a5  ld   $a5
              baf8 0099  ld   $99
              baf9 0049  ld   $49
              bafa 00ff  ld   $ff
              bafb fe00  bra  ac          ;+-----------------------------------+
              bafc fcfd  bra  $bafd       ;|                                   |
              bafd 1418  ld   $18,y       ;| Trampoline for page $ba00 lookups |
              bafe e006  jmp  y,$06       ;|                                   |
              baff c218  st   [$18]       ;+-----------------------------------+
              bb00 0085  ld   $85
              bb01 0099  ld   $99
              bb02 0045  ld   $45
              bb03 00a1  ld   $a1
              bb04 0085  ld   $85
              bb05 00a2  ld   $a2
              bb06 00a5  ld   $a5
              bb07 0094  ld   $94
              bb08 004c  ld   $4c
              bb09 00e2  ld   $e2
              bb0a 0018  ld   $18
              bb0b 00a5  ld   $a5
              bb0c 0046  ld   $46
              bb0d 0049  ld   $49
              bb0e 00e8  ld   $e8
              bb0f 00d0  ld   $d0
              bb10 0008  ld   $08
              bb11 00a2  ld   $a2
              bb12 0014  ld   $14
              bb13 0045  ld   $45
              bb14 0047  ld   $47
              bb15 0049  ld   $49
              bb16 001c  ld   $1c
              bb17 00f0  ld   $f0
              bb18 000e  ld   $0e
              bb19 00a5  ld   $a5
              bb1a 0046  ld   $46
              bb1b 00c9  ld   $c9
              bb1c 0066  ld   $66
              bb1d 00d0  ld   $d0
              bb1e 00c6  ld   $c6
              bb1f 00a5  ld   $a5
              bb20 0047  ld   $47
              bb21 00e9  ld   $e9
              bb22 0019  ld   $19
              bb23 00d0  ld   $d0
              bb24 00c0  ld   $c0
              bb25 00a2  ld   $a2
              bb26 000a  ld   $0a
              bb27 00bd  ld   $bd
              bb28 00e9  ld   $e9
              bb29 0021  ld   $21
              bb2a 0029  ld   $29
              bb2b 003f  ld   $3f
              bb2c 0049  ld   $49
              bb2d 0020  ld   $20
              bb2e 0018  ld   $18
              bb2f 0069  ld   $69
              bb30 0020  ld   $20
              bb31 0020  ld   $20
              bb32 0000  ld   $00
              bb33 002b  ld   $2b
              bb34 00ca  ld   $ca
              bb35 0049  ld   $49
              bb36 0021  ld   $21
              bb37 00d0  ld   $d0
              bb38 00ee  ld   $ee
              bb39 00c6  ld   $c6
              bb3a 007b  ld   $7b
              bb3b 00d0  ld   $d0
              bb3c 00e8  ld   $e8
              bb3d 0060  ld   $60
              bb3e 0020  ld   $20
              bb3f 0011  ld   $11
              bb40 001a  ld   $1a
              bb41 0090  ld   $90
              bb42 003c  ld   $3c
              bb43 0020  ld   $20
              bb44 0004  ld   $04
              bb45 001b  ld   $1b
              bb46 00d0  ld   $d0
              bb47 0003  ld   $03
              bb48 004c  ld   $4c
              bb49 0074  ld   $74
              bb4a 001c  ld   $1c
              bb4b 00a6  ld   $a6
              bb4c 00a3  ld   $a3
              bb4d 0086  ld   $86
              bb4e 0089  ld   $89
              bb4f 00a2  ld   $a2
              bb50 009c  ld   $9c
              bb51 00a5  ld   $a5
              bb52 009c  ld   $9c
              bb53 00a8  ld   $a8
              bb54 00f0  ld   $f0
              bb55 009b  ld   $9b
              bb56 0038  ld   $38
              bb57 00e5  ld   $e5
              bb58 0094  ld   $94
              bb59 00f0  ld   $f0
              bb5a 0024  ld   $24
              bb5b 0090  ld   $90
              bb5c 0012  ld   $12
              bb5d 0084  ld   $84
              bb5e 0094  ld   $94
              bb5f 00a4  ld   $a4
              bb60 00a1  ld   $a1
              bb61 0084  ld   $84
              bb62 0099  ld   $99
              bb63 0049  ld   $49
              bb64 0019  ld   $19
              bb65 0000  ld   $00
              bb66 0000  ld   $00
              bb67 00ff  ld   $ff
              bb68 0069  ld   $69
              bb69 0000  ld   $00
              bb6a 00a0  ld   $a0
              bb6b 0000  ld   $00
              bb6c 0084  ld   $84
              bb6d 0089  ld   $89
              bb6e 00a2  ld   $a2
              bb6f 0094  ld   $94
              bb70 00d0  ld   $d0
              bb71 0004  ld   $04
              bb72 00a0  ld   $a0
              bb73 0000  ld   $00
              bb74 0084  ld   $84
              bb75 00a3  ld   $a3
              bb76 00c9  ld   $c9
              bb77 00f9  ld   $f9
              bb78 0030  ld   $30
              bb79 00c7  ld   $c7
              bb7a 00a8  ld   $a8
              bb7b 00a5  ld   $a5
              bb7c 00a3  ld   $a3
              bb7d 0056  ld   $56
              bb7e 0001  ld   $01
              bb7f 0020  ld   $20
              bb80 0028  ld   $28
              bb81 001a  ld   $1a
              bb82 0024  ld   $24
              bb83 00a2  ld   $a2
              bb84 0010  ld   $10
              bb85 0057  ld   $57
              bb86 00a0  ld   $a0
              bb87 0094  ld   $94
              bb88 00e0  ld   $e0
              bb89 009c  ld   $9c
              bb8a 00f0  ld   $f0
              bb8b 0002  ld   $02
              bb8c 00a0  ld   $a0
              bb8d 009c  ld   $9c
              bb8e 0038  ld   $38
              bb8f 0049  ld   $49
              bb90 00ff  ld   $ff
              bb91 0065  ld   $65
              bb92 0089  ld   $89
              bb93 0085  ld   $85
              bb94 00a3  ld   $a3
              bb95 00b9  ld   $b9
              bb96 0004  ld   $04
              bb97 0000  ld   $00
              bb98 00f5  ld   $f5
              bb99 0004  ld   $04
              bb9a 0085  ld   $85
              bb9b 0098  ld   $98
              bb9c 00b9  ld   $b9
              bb9d 0003  ld   $03
              bb9e 0000  ld   $00
              bb9f 00f5  ld   $f5
              bba0 0003  ld   $03
              bba1 0085  ld   $85
              bba2 0097  ld   $97
              bba3 00b9  ld   $b9
              bba4 0002  ld   $02
              bba5 0000  ld   $00
              bba6 00f5  ld   $f5
              bba7 0002  ld   $02
              bba8 0085  ld   $85
              bba9 0096  ld   $96
              bbaa 00b9  ld   $b9
              bbab 0001  ld   $01
              bbac 0000  ld   $00
              bbad 00f5  ld   $f5
              bbae 0001  ld   $01
              bbaf 0085  ld   $85
              bbb0 0095  ld   $95
              bbb1 00b0  ld   $b0
              bbb2 0003  ld   $03
              bbb3 0020  ld   $20
              bbb4 00bf  ld   $bf
              bbb5 0019  ld   $19
              bbb6 00a0  ld   $a0
              bbb7 0000  ld   $00
              bbb8 0098  ld   $98
              bbb9 0018  ld   $18
              bbba 00a6  ld   $a6
              bbbb 0095  ld   $95
              bbbc 00d0  ld   $d0
              bbbd 004a  ld   $4a
              bbbe 00a6  ld   $a6
              bbbf 0096  ld   $96
              bbc0 0086  ld   $86
              bbc1 0095  ld   $95
              bbc2 00a6  ld   $a6
              bbc3 0097  ld   $97
              bbc4 0086  ld   $86
              bbc5 0096  ld   $96
              bbc6 00a6  ld   $a6
              bbc7 0098  ld   $98
              bbc8 0086  ld   $86
              bbc9 0097  ld   $97
              bbca 00a6  ld   $a6
              bbcb 00a3  ld   $a3
              bbcc 0086  ld   $86
              bbcd 0098  ld   $98
              bbce 0084  ld   $84
              bbcf 00a3  ld   $a3
              bbd0 0069  ld   $69
              bbd1 0008  ld   $08
              bbd2 00c9  ld   $c9
              bbd3 0020  ld   $20
              bbd4 00d0  ld   $d0
              bbd5 00e4  ld   $e4
              bbd6 00a9  ld   $a9
              bbd7 0000  ld   $00
              bbd8 0085  ld   $85
              bbd9 0094  ld   $94
              bbda 0085  ld   $85
              bbdb 0099  ld   $99
              bbdc 0060  ld   $60
              bbdd 0065  ld   $65
              bbde 0089  ld   $89
              bbdf 0085  ld   $85
              bbe0 00a3  ld   $a3
              bbe1 00a5  ld   $a5
              bbe2 0098  ld   $98
              bbe3 0065  ld   $65
              bbe4 00a0  ld   $a0
              bbe5 0085  ld   $85
              bbe6 0098  ld   $98
              bbe7 00a5  ld   $a5
              bbe8 0097  ld   $97
              bbe9 0065  ld   $65
              bbea 009f  ld   $9f
              bbeb 0085  ld   $85
              bbec 0097  ld   $97
              bbed 00a5  ld   $a5
              bbee 0096  ld   $96
              bbef 0065  ld   $65
              bbf0 009e  ld   $9e
              bbf1 0085  ld   $85
              bbf2 0096  ld   $96
              bbf3 00a5  ld   $a5
              bbf4 0095  ld   $95
              bbf5 0065  ld   $65
              bbf6 009d  ld   $9d
              bbf7 0085  ld   $85
              bbf8 0095  ld   $95
              bbf9 004c  ld   $4c
              bbfa 00ae  ld   $ae
              bbfb fe00  bra  ac          ;+-----------------------------------+
              bbfc fcfd  bra  $bbfd       ;|                                   |
              bbfd 1418  ld   $18,y       ;| Trampoline for page $bb00 lookups |
              bbfe e006  jmp  y,$06       ;|                                   |
              bbff c218  st   [$18]       ;+-----------------------------------+
              bc00 0019  ld   $19
              bc01 0069  ld   $69
              bc02 0001  ld   $01
              bc03 0006  ld   $06
              bc04 00a3  ld   $a3
              bc05 0026  ld   $26
              bc06 0098  ld   $98
              bc07 0026  ld   $26
              bc08 0097  ld   $97
              bc09 0026  ld   $26
              bc0a 0096  ld   $96
              bc0b 0026  ld   $26
              bc0c 0095  ld   $95
              bc0d 0010  ld   $10
              bc0e 00f2  ld   $f2
              bc0f 0038  ld   $38
              bc10 00e5  ld   $e5
              bc11 0094  ld   $94
              bc12 00b0  ld   $b0
              bc13 00c7  ld   $c7
              bc14 0049  ld   $49
              bc15 00ff  ld   $ff
              bc16 0069  ld   $69
              bc17 0001  ld   $01
              bc18 0085  ld   $85
              bc19 0094  ld   $94
              bc1a 0090  ld   $90
              bc1b 000e  ld   $0e
              bc1c 00e6  ld   $e6
              bc1d 0094  ld   $94
              bc1e 00f0  ld   $f0
              bc1f 0042  ld   $42
              bc20 0066  ld   $66
              bc21 0095  ld   $95
              bc22 0066  ld   $66
              bc23 0096  ld   $96
              bc24 0066  ld   $66
              bc25 0097  ld   $97
              bc26 0066  ld   $66
              bc27 0098  ld   $98
              bc28 0066  ld   $66
              bc29 00a3  ld   $a3
              bc2a 0060  ld   $60
              bc2b 00a5  ld   $a5
              bc2c 0099  ld   $99
              bc2d 0049  ld   $49
              bc2e 00ff  ld   $ff
              bc2f 0085  ld   $85
              bc30 0099  ld   $99
              bc31 00a5  ld   $a5
              bc32 0095  ld   $95
              bc33 0049  ld   $49
              bc34 00ff  ld   $ff
              bc35 0085  ld   $85
              bc36 0095  ld   $95
              bc37 00a5  ld   $a5
              bc38 0096  ld   $96
              bc39 0049  ld   $49
              bc3a 00ff  ld   $ff
              bc3b 0085  ld   $85
              bc3c 0096  ld   $96
              bc3d 00a5  ld   $a5
              bc3e 0097  ld   $97
              bc3f 0049  ld   $49
              bc40 00ff  ld   $ff
              bc41 0085  ld   $85
              bc42 0097  ld   $97
              bc43 00a5  ld   $a5
              bc44 0098  ld   $98
              bc45 0049  ld   $49
              bc46 00ff  ld   $ff
              bc47 0085  ld   $85
              bc48 0098  ld   $98
              bc49 00a5  ld   $a5
              bc4a 00a3  ld   $a3
              bc4b 0049  ld   $49
              bc4c 00ff  ld   $ff
              bc4d 0085  ld   $85
              bc4e 00a3  ld   $a3
              bc4f 00e6  ld   $e6
              bc50 00a3  ld   $a3
              bc51 00d0  ld   $d0
              bc52 000e  ld   $0e
              bc53 00e6  ld   $e6
              bc54 0098  ld   $98
              bc55 00d0  ld   $d0
              bc56 000a  ld   $0a
              bc57 00e6  ld   $e6
              bc58 0097  ld   $97
              bc59 00d0  ld   $d0
              bc5a 0006  ld   $06
              bc5b 00e6  ld   $e6
              bc5c 0096  ld   $96
              bc5d 00d0  ld   $d0
              bc5e 0002  ld   $02
              bc5f 00e6  ld   $e6
              bc60 0095  ld   $95
              bc61 0060  ld   $60
              bc62 00a2  ld   $a2
              bc63 0045  ld   $45
              bc64 004c  ld   $4c
              bc65 004a  ld   $4a
              bc66 0005  ld   $05
              bc67 00a2  ld   $a2
              bc68 0057  ld   $57
              bc69 00b4  ld   $b4
              bc6a 0004  ld   $04
              bc6b 0084  ld   $84
              bc6c 001a  ld   $1a
              bc6d 0000  ld   $00
              bc6e 0000  ld   $00
              bc6f 00a3  ld   $a3
              bc70 00b4  ld   $b4
              bc71 0003  ld   $03
              bc72 0094  ld   $94
              bc73 0004  ld   $04
              bc74 00b4  ld   $b4
              bc75 0002  ld   $02
              bc76 0094  ld   $94
              bc77 0003  ld   $03
              bc78 00b4  ld   $b4
              bc79 0001  ld   $01
              bc7a 0094  ld   $94
              bc7b 0002  ld   $02
              bc7c 00a4  ld   $a4
              bc7d 009b  ld   $9b
              bc7e 0094  ld   $94
              bc7f 0001  ld   $01
              bc80 0069  ld   $69
              bc81 0008  ld   $08
              bc82 0030  ld   $30
              bc83 00e8  ld   $e8
              bc84 00f0  ld   $f0
              bc85 00e6  ld   $e6
              bc86 00e9  ld   $e9
              bc87 0008  ld   $08
              bc88 00a8  ld   $a8
              bc89 00a5  ld   $a5
              bc8a 00a3  ld   $a3
              bc8b 00b0  ld   $b0
              bc8c 0014  ld   $14
              bc8d 0016  ld   $16
              bc8e 0001  ld   $01
              bc8f 0090  ld   $90
              bc90 0002  ld   $02
              bc91 00f6  ld   $f6
              bc92 0001  ld   $01
              bc93 0076  ld   $76
              bc94 0001  ld   $01
              bc95 0076  ld   $76
              bc96 0001  ld   $01
              bc97 0076  ld   $76
              bc98 0002  ld   $02
              bc99 0076  ld   $76
              bc9a 0003  ld   $03
              bc9b 0076  ld   $76
              bc9c 0004  ld   $04
              bc9d 006a  ld   $6a
              bc9e 00c8  ld   $c8
              bc9f 00d0  ld   $d0
              bca0 00ec  ld   $ec
              bca1 0018  ld   $18
              bca2 0060  ld   $60
              bca3 0081  ld   $81
              bca4 0000  ld   $00
              bca5 0000  ld   $00
              bca6 0000  ld   $00
              bca7 0000  ld   $00
              bca8 0003  ld   $03
              bca9 007f  ld   $7f
              bcaa 005e  ld   $5e
              bcab 0056  ld   $56
              bcac 00cb  ld   $cb
              bcad 0079  ld   $79
              bcae 0080  ld   $80
              bcaf 0013  ld   $13
              bcb0 009b  ld   $9b
              bcb1 000b  ld   $0b
              bcb2 0064  ld   $64
              bcb3 0080  ld   $80
              bcb4 0076  ld   $76
              bcb5 0038  ld   $38
              bcb6 0093  ld   $93
              bcb7 0016  ld   $16
              bcb8 0082  ld   $82
              bcb9 0038  ld   $38
              bcba 00aa  ld   $aa
              bcbb 003b  ld   $3b
              bcbc 0020  ld   $20
              bcbd 0080  ld   $80
              bcbe 0035  ld   $35
              bcbf 0004  ld   $04
              bcc0 00f3  ld   $f3
              bcc1 0034  ld   $34
              bcc2 0081  ld   $81
              bcc3 0035  ld   $35
              bcc4 0004  ld   $04
              bcc5 00f3  ld   $f3
              bcc6 0034  ld   $34
              bcc7 0080  ld   $80
              bcc8 0080  ld   $80
              bcc9 0000  ld   $00
              bcca 0000  ld   $00
              bccb 0000  ld   $00
              bccc 0080  ld   $80
              bccd 0031  ld   $31
              bcce 0072  ld   $72
              bccf 0017  ld   $17
              bcd0 00f8  ld   $f8
              bcd1 0020  ld   $20
              bcd2 00a3  ld   $a3
              bcd3 001c  ld   $1c
              bcd4 00f0  ld   $f0
              bcd5 0002  ld   $02
              bcd6 0010  ld   $10
              bcd7 0003  ld   $03
              bcd8 004c  ld   $4c
              bcd9 0082  ld   $82
              bcda 0012  ld   $12
              bcdb 00a5  ld   $a5
              bcdc 0094  ld   $94
              bcdd 00e9  ld   $e9
              bcde 007f  ld   $7f
              bcdf 0048  ld   $48
              bce0 00a9  ld   $a9
              bce1 0080  ld   $80
              bce2 0085  ld   $85
              bce3 0094  ld   $94
              bce4 00a9  ld   $a9
              bce5 004e  ld   $4e
              bce6 00a0  ld   $a0
              bce7 001a  ld   $1a
              bce8 0020  ld   $20
              bce9 00df  ld   $df
              bcea 0018  ld   $18
              bceb 00a9  ld   $a9
              bcec 0053  ld   $53
              bced 00a0  ld   $a0
              bcee 001a  ld   $1a
              bcef 0020  ld   $20
              bcf0 0087  ld   $87
              bcf1 001b  ld   $1b
              bcf2 00a9  ld   $a9
              bcf3 0034  ld   $34
              bcf4 00a0  ld   $a0
              bcf5 001a  ld   $1a
              bcf6 0020  ld   $20
              bcf7 0095  ld   $95
              bcf8 0018  ld   $18
              bcf9 00a9  ld   $a9
              bcfa 0039  ld   $39
              bcfb fe00  bra  ac          ;+-----------------------------------+
              bcfc fcfd  bra  $bcfd       ;|                                   |
              bcfd 1418  ld   $18,y       ;| Trampoline for page $bc00 lookups |
              bcfe e006  jmp  y,$06       ;|                                   |
              bcff c218  st   [$18]       ;+-----------------------------------+
              bd00 00a0  ld   $a0
              bd01 001a  ld   $1a
              bd02 0020  ld   $20
              bd03 0099  ld   $99
              bd04 0020  ld   $20
              bd05 00a9  ld   $a9
              bd06 0058  ld   $58
              bd07 00a0  ld   $a0
              bd08 001a  ld   $1a
              bd09 0020  ld   $20
              bd0a 00df  ld   $df
              bd0b 0018  ld   $18
              bd0c 0068  ld   $68
              bd0d 0020  ld   $20
              bd0e 00f6  ld   $f6
              bd0f 001d  ld   $1d
              bd10 00a9  ld   $a9
              bd11 005d  ld   $5d
              bd12 00a0  ld   $a0
              bd13 001a  ld   $1a
              bd14 0020  ld   $20
              bd15 0004  ld   $04
              bd16 001b  ld   $1b
              bd17 00d0  ld   $d0
              bd18 0003  ld   $03
              bd19 004c  ld   $4c
              bd1a 0003  ld   $03
              bd1b 001b  ld   $1b
              bd1c 0020  ld   $20
              bd1d 002f  ld   $2f
              bd1e 001b  ld   $1b
              bd1f 00a9  ld   $a9
              bd20 0000  ld   $00
              bd21 0085  ld   $85
              bd22 0058  ld   $58
              bd23 0085  ld   $85
              bd24 0059  ld   $59
              bd25 0085  ld   $85
              bd26 005a  ld   $5a
              bd27 0085  ld   $85
              bd28 005b  ld   $5b
              bd29 00a5  ld   $a5
              bd2a 00a3  ld   $a3
              bd2b 0020  ld   $20
              bd2c 00d1  ld   $d1
              bd2d 001a  ld   $1a
              bd2e 00a5  ld   $a5
              bd2f 0098  ld   $98
              bd30 0020  ld   $20
              bd31 00d1  ld   $d1
              bd32 001a  ld   $1a
              bd33 00a5  ld   $a5
              bd34 0097  ld   $97
              bd35 0020  ld   $20
              bd36 00d1  ld   $d1
              bd37 001a  ld   $1a
              bd38 00a5  ld   $a5
              bd39 0096  ld   $96
              bd3a 0020  ld   $20
              bd3b 00d1  ld   $d1
              bd3c 001a  ld   $1a
              bd3d 00a5  ld   $a5
              bd3e 0095  ld   $95
              bd3f 0020  ld   $20
              bd40 00d6  ld   $d6
              bd41 001a  ld   $1a
              bd42 004c  ld   $4c
              bd43 0007  ld   $07
              bd44 001c  ld   $1c
              bd45 00d0  ld   $d0
              bd46 0003  ld   $03
              bd47 004c  ld   $4c
              bd48 00fb  ld   $fb
              bd49 0019  ld   $19
              bd4a 004a  ld   $4a
              bd4b 0009  ld   $09
              bd4c 0080  ld   $80
              bd4d 00a8  ld   $a8
              bd4e 0090  ld   $90
              bd4f 0019  ld   $19
              bd50 0018  ld   $18
              bd51 00a5  ld   $a5
              bd52 005b  ld   $5b
              bd53 0065  ld   $65
              bd54 00a0  ld   $a0
              bd55 0085  ld   $85
              bd56 005b  ld   $5b
              bd57 00a5  ld   $a5
              bd58 005a  ld   $5a
              bd59 0065  ld   $65
              bd5a 009f  ld   $9f
              bd5b 0085  ld   $85
              bd5c 005a  ld   $5a
              bd5d 00a5  ld   $a5
              bd5e 0059  ld   $59
              bd5f 0065  ld   $65
              bd60 009e  ld   $9e
              bd61 0085  ld   $85
              bd62 0059  ld   $59
              bd63 00a5  ld   $a5
              bd64 0058  ld   $58
              bd65 0065  ld   $65
              bd66 009d  ld   $9d
              bd67 0085  ld   $85
              bd68 0058  ld   $58
              bd69 0066  ld   $66
              bd6a 0058  ld   $58
              bd6b 0066  ld   $66
              bd6c 0059  ld   $59
              bd6d 0066  ld   $66
              bd6e 005a  ld   $5a
              bd6f 0066  ld   $66
              bd70 005b  ld   $5b
              bd71 0066  ld   $66
              bd72 00a3  ld   $a3
              bd73 0098  ld   $98
              bd74 001b  ld   $1b
              bd75 0000  ld   $00
              bd76 0000  ld   $00
              bd77 004a  ld   $4a
              bd78 00d0  ld   $d0
              bd79 00d6  ld   $d6
              bd7a 0060  ld   $60
              bd7b 0085  ld   $85
              bd7c 0054  ld   $54
              bd7d 0084  ld   $84
              bd7e 0055  ld   $55
              bd7f 00a0  ld   $a0
              bd80 0004  ld   $04
              bd81 00b1  ld   $b1
              bd82 0054  ld   $54
              bd83 0085  ld   $85
              bd84 00a0  ld   $a0
              bd85 0088  ld   $88
              bd86 00b1  ld   $b1
              bd87 0054  ld   $54
              bd88 0085  ld   $85
              bd89 009f  ld   $9f
              bd8a 0088  ld   $88
              bd8b 00b1  ld   $b1
              bd8c 0054  ld   $54
              bd8d 0085  ld   $85
              bd8e 009e  ld   $9e
              bd8f 0088  ld   $88
              bd90 00b1  ld   $b1
              bd91 0054  ld   $54
              bd92 0085  ld   $85
              bd93 00a1  ld   $a1
              bd94 0045  ld   $45
              bd95 0099  ld   $99
              bd96 0085  ld   $85
              bd97 00a2  ld   $a2
              bd98 00a5  ld   $a5
              bd99 00a1  ld   $a1
              bd9a 0009  ld   $09
              bd9b 0080  ld   $80
              bd9c 0085  ld   $85
              bd9d 009d  ld   $9d
              bd9e 0088  ld   $88
              bd9f 00b1  ld   $b1
              bda0 0054  ld   $54
              bda1 0085  ld   $85
              bda2 009c  ld   $9c
              bda3 00a5  ld   $a5
              bda4 0094  ld   $94
              bda5 0060  ld   $60
              bda6 00a5  ld   $a5
              bda7 009c  ld   $9c
              bda8 00f0  ld   $f0
              bda9 001f  ld   $1f
              bdaa 0018  ld   $18
              bdab 0065  ld   $65
              bdac 0094  ld   $94
              bdad 0090  ld   $90
              bdae 0004  ld   $04
              bdaf 0030  ld   $30
              bdb0 001d  ld   $1d
              bdb1 0018  ld   $18
              bdb2 002c  ld   $2c
              bdb3 0010  ld   $10
              bdb4 0014  ld   $14
              bdb5 0069  ld   $69
              bdb6 0080  ld   $80
              bdb7 0085  ld   $85
              bdb8 0094  ld   $94
              bdb9 00d0  ld   $d0
              bdba 0003  ld   $03
              bdbb 004c  ld   $4c
              bdbc 0073  ld   $73
              bdbd 0019  ld   $19
              bdbe 00a5  ld   $a5
              bdbf 00a2  ld   $a2
              bdc0 0085  ld   $85
              bdc1 0099  ld   $99
              bdc2 0060  ld   $60
              bdc3 00a5  ld   $a5
              bdc4 0099  ld   $99
              bdc5 0049  ld   $49
              bdc6 00ff  ld   $ff
              bdc7 0030  ld   $30
              bdc8 0005  ld   $05
              bdc9 0068  ld   $68
              bdca 0068  ld   $68
              bdcb 004c  ld   $4c
              bdcc 006f  ld   $6f
              bdcd 0019  ld   $19
              bdce 004c  ld   $4c
              bdcf 00f6  ld   $f6
              bdd0 0019  ld   $19
              bdd1 0020  ld   $20
              bdd2 0084  ld   $84
              bdd3 001c  ld   $1c
              bdd4 00aa  ld   $aa
              bdd5 00f0  ld   $f0
              bdd6 0010  ld   $10
              bdd7 0018  ld   $18
              bdd8 0069  ld   $69
              bdd9 0002  ld   $02
              bdda 00b0  ld   $b0
              bddb 00f2  ld   $f2
              bddc 00a2  ld   $a2
              bddd 0000  ld   $00
              bdde 0086  ld   $86
              bddf 00a2  ld   $a2
              bde0 0020  ld   $20
              bde1 00ef  ld   $ef
              bde2 0018  ld   $18
              bde3 00e6  ld   $e6
              bde4 0094  ld   $94
              bde5 00f0  ld   $f0
              bde6 00e7  ld   $e7
              bde7 0060  ld   $60
              bde8 0084  ld   $84
              bde9 0020  ld   $20
              bdea 0000  ld   $00
              bdeb 0000  ld   $00
              bdec 0000  ld   $00
              bded 0020  ld   $20
              bdee 0084  ld   $84
              bdef 001c  ld   $1c
              bdf0 00a9  ld   $a9
              bdf1 0071  ld   $71
              bdf2 00a0  ld   $a0
              bdf3 001b  ld   $1b
              bdf4 00a2  ld   $a2
              bdf5 0000  ld   $00
              bdf6 0086  ld   $86
              bdf7 00a2  ld   $a2
              bdf8 0020  ld   $20
              bdf9 001a  ld   $1a
              bdfa 001c  ld   $1c
              bdfb fe00  bra  ac          ;+-----------------------------------+
              bdfc fcfd  bra  $bdfd       ;|                                   |
              bdfd 1418  ld   $18,y       ;| Trampoline for page $bd00 lookups |
              bdfe e006  jmp  y,$06       ;|                                   |
              bdff c218  st   [$18]       ;+-----------------------------------+
              be00 004c  ld   $4c
              be01 008a  ld   $8a
              be02 001b  ld   $1b
              be03 0020  ld   $20
              be04 0004  ld   $04
              be05 001b  ld   $1b
              be06 00f0  ld   $f0
              be07 0076  ld   $76
              be08 0020  ld   $20
              be09 0093  ld   $93
              be0a 001c  ld   $1c
              be0b 00a9  ld   $a9
              be0c 0000  ld   $00
              be0d 0038  ld   $38
              be0e 00e5  ld   $e5
              be0f 0094  ld   $94
              be10 0085  ld   $85
              be11 0094  ld   $94
              be12 0020  ld   $20
              be13 002f  ld   $2f
              be14 001b  ld   $1b
              be15 00e6  ld   $e6
              be16 0094  ld   $94
              be17 00f0  ld   $f0
              be18 00ba  ld   $ba
              be19 00a2  ld   $a2
              be1a 00fc  ld   $fc
              be1b 00a9  ld   $a9
              be1c 0001  ld   $01
              be1d 00a4  ld   $a4
              be1e 009d  ld   $9d
              be1f 00c4  ld   $c4
              be20 0095  ld   $95
              be21 00d0  ld   $d0
              be22 0010  ld   $10
              be23 00a4  ld   $a4
              be24 009e  ld   $9e
              be25 00c4  ld   $c4
              be26 0096  ld   $96
              be27 00d0  ld   $d0
              be28 000a  ld   $0a
              be29 00a4  ld   $a4
              be2a 009f  ld   $9f
              be2b 00c4  ld   $c4
              be2c 0097  ld   $97
              be2d 00d0  ld   $d0
              be2e 0004  ld   $04
              be2f 00a4  ld   $a4
              be30 00a0  ld   $a0
              be31 00c4  ld   $c4
              be32 0098  ld   $98
              be33 0008  ld   $08
              be34 002a  ld   $2a
              be35 0090  ld   $90
              be36 0009  ld   $09
              be37 00e8  ld   $e8
              be38 0095  ld   $95
              be39 005b  ld   $5b
              be3a 00f0  ld   $f0
              be3b 0032  ld   $32
              be3c 0010  ld   $10
              be3d 0034  ld   $34
              be3e 00a9  ld   $a9
              be3f 0001  ld   $01
              be40 0028  ld   $28
              be41 00b0  ld   $b0
              be42 000e  ld   $0e
              be43 0006  ld   $06
              be44 00a0  ld   $a0
              be45 0026  ld   $26
              be46 009f  ld   $9f
              be47 0026  ld   $26
              be48 009e  ld   $9e
              be49 0026  ld   $26
              be4a 009d  ld   $9d
              be4b 00b0  ld   $b0
              be4c 00e6  ld   $e6
              be4d 0030  ld   $30
              be4e 00ce  ld   $ce
              be4f 0010  ld   $10
              be50 00e2  ld   $e2
              be51 00a8  ld   $a8
              be52 00a5  ld   $a5
              be53 00a0  ld   $a0
              be54 00e5  ld   $e5
              be55 0098  ld   $98
              be56 0085  ld   $85
              be57 00a0  ld   $a0
              be58 00a5  ld   $a5
              be59 009f  ld   $9f
              be5a 00e5  ld   $e5
              be5b 0097  ld   $97
              be5c 0085  ld   $85
              be5d 009f  ld   $9f
              be5e 00a5  ld   $a5
              be5f 009e  ld   $9e
              be60 00e5  ld   $e5
              be61 0096  ld   $96
              be62 0085  ld   $85
              be63 009e  ld   $9e
              be64 00a5  ld   $a5
              be65 009d  ld   $9d
              be66 00e5  ld   $e5
              be67 0095  ld   $95
              be68 0085  ld   $85
              be69 009d  ld   $9d
              be6a 0098  ld   $98
              be6b 004c  ld   $4c
              be6c 00c7  ld   $c7
              be6d 001b  ld   $1b
              be6e 00a9  ld   $a9
              be6f 0040  ld   $40
              be70 00d0  ld   $d0
              be71 00ce  ld   $ce
              be72 000a  ld   $0a
              be73 000a  ld   $0a
              be74 000a  ld   $0a
              * 6 times
              be78 0085  ld   $85
              be79 00a3  ld   $a3
              be7a 0028  ld   $28
              be7b 004c  ld   $4c
              be7c 001c  ld   $1c
              be7d 0000  ld   $00
              be7e 0000  ld   $00
              be7f 0007  ld   $07
              be80 001c  ld   $1c
              be81 00a2  ld   $a2
              be82 0085  ld   $85
              be83 004c  ld   $4c
              be84 004a  ld   $4a
              be85 0005  ld   $05
              be86 00a5  ld   $a5
              be87 0058  ld   $58
              be88 0085  ld   $85
              be89 0095  ld   $95
              be8a 00a5  ld   $a5
              be8b 0059  ld   $59
              be8c 0085  ld   $85
              be8d 0096  ld   $96
              be8e 00a5  ld   $a5
              be8f 005a  ld   $5a
              be90 0085  ld   $85
              be91 0097  ld   $97
              be92 00a5  ld   $a5
              be93 005b  ld   $5b
              be94 0085  ld   $85
              be95 0098  ld   $98
              be96 004c  ld   $4c
              be97 004f  ld   $4f
              be98 0019  ld   $19
              be99 0085  ld   $85
              be9a 0054  ld   $54
              be9b 0084  ld   $84
              be9c 0055  ld   $55
              be9d 00a0  ld   $a0
              be9e 0004  ld   $04
              be9f 00b1  ld   $b1
              bea0 0054  ld   $54
              bea1 0085  ld   $85
              bea2 0098  ld   $98
              bea3 0088  ld   $88
              bea4 00b1  ld   $b1
              bea5 0054  ld   $54
              bea6 0085  ld   $85
              bea7 0097  ld   $97
              bea8 0088  ld   $88
              bea9 00b1  ld   $b1
              beaa 0054  ld   $54
              beab 0085  ld   $85
              beac 0096  ld   $96
              bead 0088  ld   $88
              beae 00b1  ld   $b1
              beaf 0054  ld   $54
              beb0 0085  ld   $85
              beb1 0099  ld   $99
              beb2 0009  ld   $09
              beb3 0080  ld   $80
              beb4 0085  ld   $85
              beb5 0095  ld   $95
              beb6 0088  ld   $88
              beb7 00b1  ld   $b1
              beb8 0054  ld   $54
              beb9 0085  ld   $85
              beba 0094  ld   $94
              bebb 0084  ld   $84
              bebc 00a3  ld   $a3
              bebd 0060  ld   $60
              bebe 00a2  ld   $a2
              bebf 008f  ld   $8f
              bec0 002c  ld   $2c
              bec1 00a2  ld   $a2
              bec2 008a  ld   $8a
              bec3 00a0  ld   $a0
              bec4 0000  ld   $00
              bec5 00f0  ld   $f0
              bec6 0004  ld   $04
              bec7 00a6  ld   $a6
              bec8 007b  ld   $7b
              bec9 00a4  ld   $a4
              beca 007c  ld   $7c
              becb 0020  ld   $20
              becc 0093  ld   $93
              becd 001c  ld   $1c
              bece 0086  ld   $86
              becf 0054  ld   $54
              bed0 0084  ld   $84
              bed1 0055  ld   $55
              bed2 00a0  ld   $a0
              bed3 0004  ld   $04
              bed4 00a5  ld   $a5
              bed5 0098  ld   $98
              bed6 0091  ld   $91
              bed7 0054  ld   $54
              bed8 0088  ld   $88
              bed9 00a5  ld   $a5
              beda 0097  ld   $97
              bedb 0091  ld   $91
              bedc 0054  ld   $54
              bedd 0088  ld   $88
              bede 00a5  ld   $a5
              bedf 0096  ld   $96
              bee0 0091  ld   $91
              bee1 0054  ld   $54
              bee2 0088  ld   $88
              bee3 00a5  ld   $a5
              bee4 0099  ld   $99
              bee5 0009  ld   $09
              bee6 007f  ld   $7f
              bee7 0025  ld   $25
              bee8 0095  ld   $95
              bee9 0091  ld   $91
              beea 0054  ld   $54
              beeb 0088  ld   $88
              beec 00a5  ld   $a5
              beed 0094  ld   $94
              beee 0091  ld   $91
              beef 0054  ld   $54
              bef0 0084  ld   $84
              bef1 00a3  ld   $a3
              bef2 0060  ld   $60
              bef3 00a5  ld   $a5
              bef4 00a1  ld   $a1
              bef5 0085  ld   $85
              bef6 0099  ld   $99
              bef7 00a2  ld   $a2
              bef8 0005  ld   $05
              bef9 00b5  ld   $b5
              befa 009b  ld   $9b
              befb fe00  bra  ac          ;+-----------------------------------+
              befc fcfd  bra  $befd       ;|                                   |
              befd 1418  ld   $18,y       ;| Trampoline for page $be00 lookups |
              befe e006  jmp  y,$06       ;|                                   |
              beff c218  st   [$18]       ;+-----------------------------------+
              bf00 0095  ld   $95
              bf01 0093  ld   $93
              bf02 00ca  ld   $ca
              bf03 00d0  ld   $d0
              bf04 00f9  ld   $f9
              bf05 0086  ld   $86
              bf06 00a3  ld   $a3
              bf07 0060  ld   $60
              bf08 0020  ld   $20
              bf09 0093  ld   $93
              bf0a 001c  ld   $1c
              bf0b 00a2  ld   $a2
              bf0c 0006  ld   $06
              bf0d 00b5  ld   $b5
              bf0e 0093  ld   $93
              bf0f 0095  ld   $95
              bf10 009b  ld   $9b
              bf11 00ca  ld   $ca
              bf12 00d0  ld   $d0
              bf13 00f9  ld   $f9
              bf14 0086  ld   $86
              bf15 00a3  ld   $a3
              bf16 0060  ld   $60
              bf17 00a5  ld   $a5
              bf18 0094  ld   $94
              bf19 00f0  ld   $f0
              bf1a 00fb  ld   $fb
              bf1b 0006  ld   $06
              bf1c 00a3  ld   $a3
              bf1d 0090  ld   $90
              bf1e 00f7  ld   $f7
              bf1f 0020  ld   $20
              bf20 00e7  ld   $e7
              bf21 0019  ld   $19
              bf22 00d0  ld   $d0
              bf23 00f2  ld   $f2
              bf24 004c  ld   $4c
              bf25 00b0  ld   $b0
              bf26 0019  ld   $19
              bf27 00a5  ld   $a5
              bf28 0094  ld   $94
              bf29 00f0  ld   $f0
              bf2a 0009  ld   $09
              bf2b 00a5  ld   $a5
              bf2c 0099  ld   $99
              bf2d 002a  ld   $2a
              bf2e 00a9  ld   $a9
              bf2f 00ff  ld   $ff
              bf30 00b0  ld   $b0
              bf31 0002  ld   $02
              bf32 00a9  ld   $a9
              bf33 0001  ld   $01
              bf34 0060  ld   $60
              bf35 0020  ld   $20
              bf36 00a3  ld   $a3
              bf37 001c  ld   $1c
              bf38 0085  ld   $85
              bf39 0095  ld   $95
              bf3a 00a9  ld   $a9
              bf3b 0000  ld   $00
              bf3c 0085  ld   $85
              bf3d 0096  ld   $96
              bf3e 00a2  ld   $a2
              bf3f 0088  ld   $88
              bf40 00a5  ld   $a5
              bf41 0095  ld   $95
              bf42 0049  ld   $49
              bf43 00ff  ld   $ff
              bf44 002a  ld   $2a
              bf45 00a9  ld   $a9
              bf46 0000  ld   $00
              bf47 0085  ld   $85
              bf48 0098  ld   $98
              bf49 0085  ld   $85
              bf4a 0097  ld   $97
              bf4b 0086  ld   $86
              bf4c 0094  ld   $94
              bf4d 0085  ld   $85
              bf4e 00a3  ld   $a3
              bf4f 0085  ld   $85
              bf50 0099  ld   $99
              bf51 004c  ld   $4c
              bf52 004a  ld   $4a
              bf53 0019  ld   $19
              bf54 0046  ld   $46
              bf55 0099  ld   $99
              bf56 0060  ld   $60
              bf57 0085  ld   $85
              bf58 0056  ld   $56
              bf59 0084  ld   $84
              bf5a 0057  ld   $57
              bf5b 00a0  ld   $a0
              bf5c 0000  ld   $00
              bf5d 00b1  ld   $b1
              bf5e 0056  ld   $56
              bf5f 00c8  ld   $c8
              bf60 00aa  ld   $aa
              bf61 00f0  ld   $f0
              bf62 00c4  ld   $c4
              bf63 00b1  ld   $b1
              bf64 0056  ld   $56
              bf65 0045  ld   $45
              bf66 0099  ld   $99
              bf67 0030  ld   $30
              bf68 00c2  ld   $c2
              bf69 00e4  ld   $e4
              bf6a 0094  ld   $94
              bf6b 00d0  ld   $d0
              bf6c 0021  ld   $21
              bf6d 00b1  ld   $b1
              bf6e 0056  ld   $56
              bf6f 0009  ld   $09
              bf70 0080  ld   $80
              bf71 00c5  ld   $c5
              bf72 0095  ld   $95
              bf73 00d0  ld   $d0
              bf74 0019  ld   $19
              bf75 00c8  ld   $c8
              bf76 00b1  ld   $b1
              bf77 0056  ld   $56
              bf78 00c5  ld   $c5
              bf79 0096  ld   $96
              bf7a 00d0  ld   $d0
              bf7b 0012  ld   $12
              bf7c 00c8  ld   $c8
              bf7d 00b1  ld   $b1
              bf7e 0056  ld   $56
              bf7f 00c5  ld   $c5
              bf80 0097  ld   $97
              bf81 00d0  ld   $d0
              bf82 000b  ld   $0b
              bf83 00c8  ld   $c8
              bf84 001d  ld   $1d
              bf85 0000  ld   $00
              bf86 0000  ld   $00
              bf87 00a9  ld   $a9
              bf88 007f  ld   $7f
              bf89 00c5  ld   $c5
              bf8a 00a3  ld   $a3
              bf8b 00b1  ld   $b1
              bf8c 0056  ld   $56
              bf8d 00e5  ld   $e5
              bf8e 0098  ld   $98
              bf8f 00f0  ld   $f0
              bf90 0028  ld   $28
              bf91 00a5  ld   $a5
              bf92 0099  ld   $99
              bf93 0090  ld   $90
              bf94 0002  ld   $02
              bf95 0049  ld   $49
              bf96 00ff  ld   $ff
              bf97 004c  ld   $4c
              bf98 00a9  ld   $a9
              bf99 001c  ld   $1c
              bf9a 00a5  ld   $a5
              bf9b 0094  ld   $94
              bf9c 00f0  ld   $f0
              bf9d 004a  ld   $4a
              bf9e 0038  ld   $38
              bf9f 00e9  ld   $e9
              bfa0 00a0  ld   $a0
              bfa1 0024  ld   $24
              bfa2 0099  ld   $99
              bfa3 0010  ld   $10
              bfa4 0009  ld   $09
              bfa5 00aa  ld   $aa
              bfa6 00a9  ld   $a9
              bfa7 00ff  ld   $ff
              bfa8 0085  ld   $85
              bfa9 009b  ld   $9b
              bfaa 0020  ld   $20
              bfab 00c5  ld   $c5
              bfac 0019  ld   $19
              bfad 008a  ld   $8a
              bfae 00a2  ld   $a2
              bfaf 0094  ld   $94
              bfb0 00c9  ld   $c9
              bfb1 00f9  ld   $f9
              bfb2 0010  ld   $10
              bfb3 0006  ld   $06
              bfb4 0020  ld   $20
              bfb5 0011  ld   $11
              bfb6 001a  ld   $1a
              bfb7 0084  ld   $84
              bfb8 009b  ld   $9b
              bfb9 0060  ld   $60
              bfba 00a8  ld   $a8
              bfbb 00a5  ld   $a5
              bfbc 0099  ld   $99
              bfbd 0029  ld   $29
              bfbe 0080  ld   $80
              bfbf 0046  ld   $46
              bfc0 0095  ld   $95
              bfc1 0005  ld   $05
              bfc2 0095  ld   $95
              bfc3 0085  ld   $85
              bfc4 0095  ld   $95
              bfc5 0020  ld   $20
              bfc6 0028  ld   $28
              bfc7 001a  ld   $1a
              bfc8 0084  ld   $84
              bfc9 009b  ld   $9b
              bfca 0060  ld   $60
              bfcb 00a5  ld   $a5
              bfcc 0094  ld   $94
              bfcd 00c9  ld   $c9
              bfce 00a0  ld   $a0
              bfcf 00b0  ld   $b0
              bfd0 0020  ld   $20
              bfd1 0020  ld   $20
              bfd2 0013  ld   $13
              bfd3 001d  ld   $1d
              bfd4 0084  ld   $84
              bfd5 00a3  ld   $a3
              bfd6 00a5  ld   $a5
              bfd7 0099  ld   $99
              bfd8 0084  ld   $84
              bfd9 0099  ld   $99
              bfda 0049  ld   $49
              bfdb 0080  ld   $80
              bfdc 002a  ld   $2a
              bfdd 00a9  ld   $a9
              bfde 00a0  ld   $a0
              bfdf 0085  ld   $85
              bfe0 0094  ld   $94
              bfe1 00a5  ld   $a5
              bfe2 0098  ld   $98
              bfe3 0085  ld   $85
              bfe4 003b  ld   $3b
              bfe5 004c  ld   $4c
              bfe6 004a  ld   $4a
              bfe7 0019  ld   $19
              bfe8 0085  ld   $85
              bfe9 0095  ld   $95
              bfea 0085  ld   $85
              bfeb 0096  ld   $96
              bfec 0085  ld   $85
              bfed 0097  ld   $97
              bfee 0085  ld   $85
              bfef 0098  ld   $98
              bff0 00a8  ld   $a8
              bff1 0060  ld   $60
              bff2 00a0  ld   $a0
              bff3 0000  ld   $00
              bff4 00a2  ld   $a2
              bff5 000a  ld   $0a
              bff6 0094  ld   $94
              bff7 0090  ld   $90
              bff8 00ca  ld   $ca
              bff9 0010  ld   $10
              bffa 00fb  ld   $fb
              bffb fe00  bra  ac          ;+-----------------------------------+
              bffc fcfd  bra  $bffd       ;|                                   |
              bffd 1418  ld   $18,y       ;| Trampoline for page $bf00 lookups |
              bffe e006  jmp  y,$06       ;|                                   |
              bfff c218  st   [$18]       ;+-----------------------------------+
              c000 0090  ld   $90
              c001 000f  ld   $0f
              c002 00c9  ld   $c9
              c003 002d  ld   $2d
              c004 00d0  ld   $d0
              c005 0004  ld   $04
              c006 0086  ld   $86
              c007 009a  ld   $9a
              c008 00f0  ld   $f0
              c009 0004  ld   $04
              c00a 00c9  ld   $c9
              c00b 002b  ld   $2b
              c00c 00d0  ld   $d0
              c00d 0005  ld   $05
              c00e 0020  ld   $20
              c00f 006b  ld   $6b
              c010 0022  ld   $22
              c011 0090  ld   $90
              c012 005b  ld   $5b
              c013 00c9  ld   $c9
              c014 002e  ld   $2e
              c015 00f0  ld   $f0
              c016 002e  ld   $2e
              c017 00c9  ld   $c9
              c018 0045  ld   $45
              c019 00d0  ld   $d0
              c01a 0030  ld   $30
              c01b 0020  ld   $20
              c01c 006b  ld   $6b
              c01d 0022  ld   $22
              c01e 0090  ld   $90
              c01f 0017  ld   $17
              c020 00c9  ld   $c9
              c021 00a5  ld   $a5
              c022 00f0  ld   $f0
              c023 000e  ld   $0e
              c024 00c9  ld   $c9
              c025 002d  ld   $2d
              c026 00f0  ld   $f0
              c027 000a  ld   $0a
              c028 00c9  ld   $c9
              c029 00a4  ld   $a4
              c02a 00f0  ld   $f0
              c02b 0008  ld   $08
              c02c 00c9  ld   $c9
              c02d 002b  ld   $2b
              c02e 00f0  ld   $f0
              c02f 0004  ld   $04
              c030 00d0  ld   $d0
              c031 0007  ld   $07
              c032 0066  ld   $66
              c033 0093  ld   $93
              c034 0020  ld   $20
              c035 006b  ld   $6b
              c036 0022  ld   $22
              c037 0090  ld   $90
              c038 005c  ld   $5c
              c039 0024  ld   $24
              c03a 0093  ld   $93
              c03b 0010  ld   $10
              c03c 000e  ld   $0e
              c03d 00a9  ld   $a9
              c03e 0000  ld   $00
              c03f 0038  ld   $38
              c040 00e5  ld   $e5
              c041 0091  ld   $91
              c042 004c  ld   $4c
              c043 00c1  ld   $c1
              c044 001d  ld   $1d
              c045 0066  ld   $66
              c046 0092  ld   $92
              c047 0024  ld   $24
              c048 0092  ld   $92
              c049 0050  ld   $50
              c04a 00c3  ld   $c3
              c04b 00a5  ld   $a5
              c04c 0091  ld   $91
              c04d 0038  ld   $38
              c04e 00e5  ld   $e5
              c04f 0090  ld   $90
              c050 0085  ld   $85
              c051 0091  ld   $91
              c052 00f0  ld   $f0
              c053 0012  ld   $12
              c054 0010  ld   $10
              c055 0009  ld   $09
              c056 0020  ld   $20
              c057 0076  ld   $76
              c058 001b  ld   $1b
              c059 00e6  ld   $e6
              c05a 0091  ld   $91
              c05b 00d0  ld   $d0
              c05c 00f9  ld   $f9
              c05d 00f0  ld   $f0
              c05e 0007  ld   $07
              c05f 0020  ld   $20
              c060 005a  ld   $5a
              c061 001b  ld   $1b
              c062 00c6  ld   $c6
              c063 0091  ld   $91
              c064 00d0  ld   $d0
              c065 00f9  ld   $f9
              c066 00a5  ld   $a5
              c067 009a  ld   $9a
              c068 0030  ld   $30
              c069 0001  ld   $01
              c06a 0060  ld   $60
              c06b 004c  ld   $4c
              c06c 000d  ld   $0d
              c06d 0020  ld   $20
              c06e 0048  ld   $48
              c06f 0024  ld   $24
              c070 0092  ld   $92
              c071 0010  ld   $10
              c072 0002  ld   $02
              c073 00e6  ld   $e6
              c074 0090  ld   $90
              c075 0020  ld   $20
              c076 005a  ld   $5a
              c077 001b  ld   $1b
              c078 0068  ld   $68
              c079 0038  ld   $38
              c07a 00e9  ld   $e9
              c07b 0030  ld   $30
              c07c 0020  ld   $20
              c07d 00f6  ld   $f6
              c07e 001d  ld   $1d
              c07f 004c  ld   $4c
              c080 0082  ld   $82
              c081 001d  ld   $1d
              c082 0048  ld   $48
              c083 0020  ld   $20
              c084 0084  ld   $84
              c085 001c  ld   $1c
              c086 0068  ld   $68
              c087 0020  ld   $20
              c088 00b4  ld   $b4
              c089 001c  ld   $1c
              c08a 00a5  ld   $a5
              c08b 00a1  ld   $a1
              c08c 001e  ld   $1e
              c08d 0000  ld   $00
              c08e 0000  ld   $00
              c08f 0045  ld   $45
              c090 0099  ld   $99
              c091 0085  ld   $85
              c092 00a2  ld   $a2
              c093 00a6  ld   $a6
              c094 0094  ld   $94
              c095 004c  ld   $4c
              c096 00e2  ld   $e2
              c097 0018  ld   $18
              c098 00a5  ld   $a5
              c099 0091  ld   $91
              c09a 00c9  ld   $c9
              c09b 000a  ld   $0a
              c09c 0090  ld   $90
              c09d 0009  ld   $09
              c09e 00a9  ld   $a9
              c09f 0064  ld   $64
              c0a0 0024  ld   $24
              c0a1 0093  ld   $93
              c0a2 0030  ld   $30
              c0a3 0011  ld   $11
              c0a4 004c  ld   $4c
              c0a5 00f6  ld   $f6
              c0a6 0019  ld   $19
              c0a7 000a  ld   $0a
              c0a8 000a  ld   $0a
              c0a9 0018  ld   $18
              c0aa 0065  ld   $65
              c0ab 0091  ld   $91
              c0ac 000a  ld   $0a
              c0ad 0018  ld   $18
              c0ae 00a0  ld   $a0
              c0af 0000  ld   $00
              c0b0 0071  ld   $71
              c0b1 00a6  ld   $a6
              c0b2 0038  ld   $38
              c0b3 00e9  ld   $e9
              c0b4 0030  ld   $30
              c0b5 0085  ld   $85
              c0b6 0091  ld   $91
              c0b7 004c  ld   $4c
              c0b8 00a8  ld   $a8
              c0b9 001d  ld   $1d
              c0ba 009b  ld   $9b
              c0bb 003e  ld   $3e
              c0bc 00bc  ld   $bc
              c0bd 001f  ld   $1f
              c0be 00fd  ld   $fd
              c0bf 009e  ld   $9e
              c0c0 006e  ld   $6e
              c0c1 006b  ld   $6b
              c0c2 0027  ld   $27
              c0c3 00fd  ld   $fd
              c0c4 009e  ld   $9e
              c0c5 006e  ld   $6e
              c0c6 006b  ld   $6b
              c0c7 0028  ld   $28
              c0c8 0000  ld   $00
              c0c9 00a9  ld   $a9
              c0ca 008a  ld   $8a
              c0cb 00a0  ld   $a0
              c0cc 0004  ld   $04
              c0cd 0020  ld   $20
              c0ce 0052  ld   $52
              c0cf 001e  ld   $1e
              c0d0 00a5  ld   $a5
              c0d1 006c  ld   $6c
              c0d2 00a6  ld   $a6
              c0d3 006b  ld   $6b
              c0d4 0085  ld   $85
              c0d5 0095  ld   $95
              c0d6 0086  ld   $86
              c0d7 0096  ld   $96
              c0d8 00a2  ld   $a2
              c0d9 0090  ld   $90
              c0da 0038  ld   $38
              c0db 0020  ld   $20
              c0dc 00c1  ld   $c1
              c0dd 001c  ld   $1c
              c0de 0020  ld   $20
              c0df 0055  ld   $55
              c0e0 001e  ld   $1e
              c0e1 004c  ld   $4c
              c0e2 00ef  ld   $ef
              c0e3 000b  ld   $0b
              c0e4 00a0  ld   $a0
              c0e5 0001  ld   $01
              c0e6 00a9  ld   $a9
              c0e7 0020  ld   $20
              c0e8 0024  ld   $24
              c0e9 0099  ld   $99
              c0ea 0010  ld   $10
              c0eb 0002  ld   $02
              c0ec 00a9  ld   $a9
              c0ed 002d  ld   $2d
              c0ee 0099  ld   $99
              c0ef 0004  ld   $04
              c0f0 0002  ld   $02
              c0f1 0085  ld   $85
              c0f2 0099  ld   $99
              c0f3 0084  ld   $84
              c0f4 00a4  ld   $a4
              c0f5 00c8  ld   $c8
              c0f6 00a9  ld   $a9
              c0f7 0030  ld   $30
              c0f8 00a6  ld   $a6
              c0f9 0094  ld   $94
              c0fa 00d0  ld   $d0
              c0fb fe00  bra  ac          ;+-----------------------------------+
              c0fc fcfd  bra  $c0fd       ;|                                   |
              c0fd 1418  ld   $18,y       ;| Trampoline for page $c000 lookups |
              c0fe e006  jmp  y,$06       ;|                                   |
              c0ff c218  st   [$18]       ;+-----------------------------------+
              c100 0003  ld   $03
              c101 004c  ld   $4c
              c102 007c  ld   $7c
              c103 001f  ld   $1f
              c104 00a9  ld   $a9
              c105 0000  ld   $00
              c106 00e0  ld   $e0
              c107 0080  ld   $80
              c108 00f0  ld   $f0
              c109 0002  ld   $02
              c10a 00b0  ld   $b0
              c10b 0009  ld   $09
              c10c 00a9  ld   $a9
              c10d 0035  ld   $35
              c10e 00a0  ld   $a0
              c10f 001e  ld   $1e
              c110 0020  ld   $20
              c111 00a0  ld   $a0
              c112 001a  ld   $1a
              c113 00a9  ld   $a9
              c114 00f7  ld   $f7
              c115 0085  ld   $85
              c116 0090  ld   $90
              c117 00a9  ld   $a9
              c118 0030  ld   $30
              c119 00a0  ld   $a0
              c11a 001e  ld   $1e
              c11b 0020  ld   $20
              c11c 00d3  ld   $d3
              c11d 001c  ld   $1c
              c11e 00f0  ld   $f0
              c11f 001e  ld   $1e
              c120 0010  ld   $10
              c121 0012  ld   $12
              c122 00a9  ld   $a9
              c123 002b  ld   $2b
              c124 00a0  ld   $a0
              c125 001e  ld   $1e
              c126 0020  ld   $20
              c127 00d3  ld   $d3
              c128 001c  ld   $1c
              c129 00f0  ld   $f0
              c12a 0002  ld   $02
              c12b 0010  ld   $10
              c12c 000e  ld   $0e
              c12d 0020  ld   $20
              c12e 005a  ld   $5a
              c12f 001b  ld   $1b
              c130 00c6  ld   $c6
              c131 0090  ld   $90
              c132 00d0  ld   $d0
              c133 00ee  ld   $ee
              c134 0020  ld   $20
              c135 0076  ld   $76
              c136 001b  ld   $1b
              c137 00e6  ld   $e6
              c138 0090  ld   $90
              c139 00d0  ld   $d0
              c13a 00dc  ld   $dc
              c13b 0020  ld   $20
              c13c 008e  ld   $8e
              c13d 0018  ld   $18
              c13e 0020  ld   $20
              c13f 0013  ld   $13
              c140 001d  ld   $1d
              c141 00a2  ld   $a2
              c142 0001  ld   $01
              c143 00a5  ld   $a5
              c144 0090  ld   $90
              c145 0018  ld   $18
              c146 0069  ld   $69
              c147 000a  ld   $0a
              c148 0030  ld   $30
              c149 0009  ld   $09
              c14a 00c9  ld   $c9
              c14b 000b  ld   $0b
              c14c 00b0  ld   $b0
              c14d 0006  ld   $06
              c14e 0069  ld   $69
              c14f 00ff  ld   $ff
              c150 00aa  ld   $aa
              c151 00a9  ld   $a9
              c152 0002  ld   $02
              c153 0038  ld   $38
              c154 00e9  ld   $e9
              c155 0002  ld   $02
              c156 0085  ld   $85
              c157 0091  ld   $91
              c158 0086  ld   $86
              c159 0090  ld   $90
              c15a 008a  ld   $8a
              c15b 00f0  ld   $f0
              c15c 0002  ld   $02
              c15d 0010  ld   $10
              c15e 0013  ld   $13
              c15f 00a4  ld   $a4
              c160 00a4  ld   $a4
              c161 00a9  ld   $a9
              c162 002e  ld   $2e
              c163 00c8  ld   $c8
              c164 0099  ld   $99
              c165 0004  ld   $04
              c166 0002  ld   $02
              c167 008a  ld   $8a
              c168 00f0  ld   $f0
              c169 0006  ld   $06
              c16a 00a9  ld   $a9
              c16b 0030  ld   $30
              c16c 00c8  ld   $c8
              c16d 0099  ld   $99
              c16e 0004  ld   $04
              c16f 0002  ld   $02
              c170 0084  ld   $84
              c171 00a4  ld   $a4
              c172 00a0  ld   $a0
              c173 0000  ld   $00
              c174 00a2  ld   $a2
              c175 0080  ld   $80
              c176 00a5  ld   $a5
              c177 0098  ld   $98
              c178 0018  ld   $18
              c179 0079  ld   $79
              c17a 0091  ld   $91
              c17b 001f  ld   $1f
              c17c 0085  ld   $85
              c17d 0098  ld   $98
              c17e 00a5  ld   $a5
              c17f 0097  ld   $97
              c180 0079  ld   $79
              c181 0090  ld   $90
              c182 001f  ld   $1f
              c183 0085  ld   $85
              c184 0097  ld   $97
              c185 00a5  ld   $a5
              c186 0096  ld   $96
              c187 0079  ld   $79
              c188 008f  ld   $8f
              c189 001f  ld   $1f
              c18a 0085  ld   $85
              c18b 0096  ld   $96
              c18c 00a5  ld   $a5
              c18d 0095  ld   $95
              c18e 0079  ld   $79
              c18f 008e  ld   $8e
              c190 001f  ld   $1f
              c191 0085  ld   $85
              c192 0095  ld   $95
              c193 00e8  ld   $e8
              c194 001f  ld   $1f
              c195 0000  ld   $00
              c196 0000  ld   $00
              c197 00b0  ld   $b0
              c198 0004  ld   $04
              c199 0010  ld   $10
              c19a 00de  ld   $de
              c19b 0030  ld   $30
              c19c 0002  ld   $02
              c19d 0030  ld   $30
              c19e 00da  ld   $da
              c19f 008a  ld   $8a
              c1a0 0090  ld   $90
              c1a1 0004  ld   $04
              c1a2 0049  ld   $49
              c1a3 00ff  ld   $ff
              c1a4 0069  ld   $69
              c1a5 000a  ld   $0a
              c1a6 0069  ld   $69
              c1a7 002f  ld   $2f
              c1a8 00c8  ld   $c8
              c1a9 00c8  ld   $c8
              c1aa 00c8  ld   $c8
              c1ab 00c8  ld   $c8
              c1ac 0084  ld   $84
              c1ad 0079  ld   $79
              c1ae 00a4  ld   $a4
              c1af 00a4  ld   $a4
              c1b0 00c8  ld   $c8
              c1b1 00aa  ld   $aa
              c1b2 0029  ld   $29
              c1b3 007f  ld   $7f
              c1b4 0099  ld   $99
              c1b5 0004  ld   $04
              c1b6 0002  ld   $02
              c1b7 00c6  ld   $c6
              c1b8 0090  ld   $90
              c1b9 00d0  ld   $d0
              c1ba 0006  ld   $06
              c1bb 00a9  ld   $a9
              c1bc 002e  ld   $2e
              c1bd 00c8  ld   $c8
              c1be 0099  ld   $99
              c1bf 0004  ld   $04
              c1c0 0002  ld   $02
              c1c1 0084  ld   $84
              c1c2 00a4  ld   $a4
              c1c3 00a4  ld   $a4
              c1c4 0079  ld   $79
              c1c5 008a  ld   $8a
              c1c6 0049  ld   $49
              c1c7 00ff  ld   $ff
              c1c8 0029  ld   $29
              c1c9 0080  ld   $80
              c1ca 00aa  ld   $aa
              c1cb 00c0  ld   $c0
              c1cc 0024  ld   $24
              c1cd 00f0  ld   $f0
              c1ce 0004  ld   $04
              c1cf 00c0  ld   $c0
              c1d0 003c  ld   $3c
              c1d1 00d0  ld   $d0
              c1d2 00a6  ld   $a6
              c1d3 00a4  ld   $a4
              c1d4 00a4  ld   $a4
              c1d5 00b9  ld   $b9
              c1d6 0004  ld   $04
              c1d7 0002  ld   $02
              c1d8 0088  ld   $88
              c1d9 00c9  ld   $c9
              c1da 0030  ld   $30
              c1db 00f0  ld   $f0
              c1dc 00f8  ld   $f8
              c1dd 00c9  ld   $c9
              c1de 002e  ld   $2e
              c1df 00f0  ld   $f0
              c1e0 0001  ld   $01
              c1e1 00c8  ld   $c8
              c1e2 00a9  ld   $a9
              c1e3 002b  ld   $2b
              c1e4 00a6  ld   $a6
              c1e5 0091  ld   $91
              c1e6 00f0  ld   $f0
              c1e7 002e  ld   $2e
              c1e8 0010  ld   $10
              c1e9 0008  ld   $08
              c1ea 00a9  ld   $a9
              c1eb 0000  ld   $00
              c1ec 0038  ld   $38
              c1ed 00e5  ld   $e5
              c1ee 0091  ld   $91
              c1ef 00aa  ld   $aa
              c1f0 00a9  ld   $a9
              c1f1 002d  ld   $2d
              c1f2 0099  ld   $99
              c1f3 0006  ld   $06
              c1f4 0002  ld   $02
              c1f5 00a9  ld   $a9
              c1f6 0045  ld   $45
              c1f7 0099  ld   $99
              c1f8 0005  ld   $05
              c1f9 0002  ld   $02
              c1fa 008a  ld   $8a
              c1fb fe00  bra  ac          ;+-----------------------------------+
              c1fc fcfd  bra  $c1fd       ;|                                   |
              c1fd 1418  ld   $18,y       ;| Trampoline for page $c100 lookups |
              c1fe e006  jmp  y,$06       ;|                                   |
              c1ff c218  st   [$18]       ;+-----------------------------------+
              c200 00a2  ld   $a2
              c201 002f  ld   $2f
              c202 0038  ld   $38
              c203 00e8  ld   $e8
              c204 00e9  ld   $e9
              c205 000a  ld   $0a
              c206 00b0  ld   $b0
              c207 00fb  ld   $fb
              c208 0069  ld   $69
              c209 003a  ld   $3a
              c20a 0099  ld   $99
              c20b 0008  ld   $08
              c20c 0002  ld   $02
              c20d 008a  ld   $8a
              c20e 0099  ld   $99
              c20f 0007  ld   $07
              c210 0002  ld   $02
              c211 00a9  ld   $a9
              c212 0000  ld   $00
              c213 0099  ld   $99
              c214 0009  ld   $09
              c215 0002  ld   $02
              c216 00f0  ld   $f0
              c217 0008  ld   $08
              c218 0099  ld   $99
              c219 0004  ld   $04
              c21a 0002  ld   $02
              c21b 00a9  ld   $a9
              c21c 0000  ld   $00
              c21d 0099  ld   $99
              c21e 0005  ld   $05
              c21f 0002  ld   $02
              c220 00a9  ld   $a9
              c221 0005  ld   $05
              c222 00a0  ld   $a0
              c223 0002  ld   $02
              c224 0060  ld   $60
              c225 0080  ld   $80
              c226 0000  ld   $00
              c227 0000  ld   $00
              c228 0000  ld   $00
              c229 0000  ld   $00
              c22a 00fa  ld   $fa
              c22b 000a  ld   $0a
              c22c 001f  ld   $1f
              c22d 0000  ld   $00
              c22e 0000  ld   $00
              c22f 0098  ld   $98
              c230 0096  ld   $96
              c231 0080  ld   $80
              c232 00ff  ld   $ff
              c233 00f0  ld   $f0
              c234 00bd  ld   $bd
              c235 00c0  ld   $c0
              c236 0000  ld   $00
              c237 0001  ld   $01
              c238 0086  ld   $86
              c239 00a0  ld   $a0
              c23a 00ff  ld   $ff
              c23b 00ff  ld   $ff
              c23c 00d8  ld   $d8
              c23d 00f0  ld   $f0
              c23e 0000  ld   $00
              c23f 0000  ld   $00
              c240 0003  ld   $03
              c241 00e8  ld   $e8
              c242 00ff  ld   $ff
              c243 00ff  ld   $ff
              c244 00ff  ld   $ff
              c245 009c  ld   $9c
              c246 0000  ld   $00
              c247 0000  ld   $00
              c248 0000  ld   $00
              c249 000a  ld   $0a
              c24a 00ff  ld   $ff
              c24b 00ff  ld   $ff
              c24c 00ff  ld   $ff
              * 5 times
              c24f 00df  ld   $df
              c250 000a  ld   $0a
              c251 0080  ld   $80
              c252 0000  ld   $00
              c253 0003  ld   $03
              c254 004b  ld   $4b
              c255 00c0  ld   $c0
              c256 00ff  ld   $ff
              c257 00ff  ld   $ff
              c258 0073  ld   $73
              c259 0060  ld   $60
              c25a 0000  ld   $00
              c25b 0000  ld   $00
              c25c 000e  ld   $0e
              c25d 0010  ld   $10
              c25e 00ff  ld   $ff
              c25f 00ff  ld   $ff
              c260 00fd  ld   $fd
              c261 00a8  ld   $a8
              c262 0000  ld   $00
              c263 0000  ld   $00
              c264 0000  ld   $00
              c265 003c  ld   $3c
              c266 0020  ld   $20
              c267 0084  ld   $84
              c268 001c  ld   $1c
              c269 00a9  ld   $a9
              c26a 0089  ld   $89
              c26b 00a0  ld   $a0
              c26c 001f  ld   $1f
              c26d 0020  ld   $20
              c26e 001a  ld   $1a
              c26f 001c  ld   $1c
              c270 00f0  ld   $f0
              c271 0070  ld   $70
              c272 00a5  ld   $a5
              c273 009c  ld   $9c
              c274 00d0  ld   $d0
              c275 0003  ld   $03
              c276 004c  ld   $4c
              c277 0071  ld   $71
              c278 0019  ld   $19
              c279 00a2  ld   $a2
              c27a 0081  ld   $81
              c27b 00a0  ld   $a0
              c27c 0000  ld   $00
              c27d 0020  ld   $20
              c27e 004c  ld   $4c
              c27f 001c  ld   $1c
              c280 00a5  ld   $a5
              c281 00a1  ld   $a1
              c282 0010  ld   $10
              c283 000f  ld   $0f
              c284 0020  ld   $20
              c285 0044  ld   $44
              c286 001d  ld   $1d
              c287 00a9  ld   $a9
              c288 0081  ld   $81
              c289 00a0  ld   $a0
              c28a 0000  ld   $00
              c28b 0020  ld   $20
              c28c 00d3  ld   $d3
              c28d 001c  ld   $1c
              c28e 00d0  ld   $d0
              c28f 0003  ld   $03
              c290 0098  ld   $98
              c291 00a4  ld   $a4
              c292 003b  ld   $3b
              c293 0020  ld   $20
              c294 0076  ld   $76
              c295 001c  ld   $1c
              c296 0098  ld   $98
              c297 0048  ld   $48
              c298 0020  ld   $20
              c299 0062  ld   $62
              c29a 001a  ld   $1a
              c29b 00a9  ld   $a9
              c29c 0020  ld   $20
              c29d 0000  ld   $00
              c29e 0000  ld   $00
              c29f 0081  ld   $81
              c2a0 00a0  ld   $a0
              c2a1 0000  ld   $00
              c2a2 0020  ld   $20
              c2a3 00a0  ld   $a0
              c2a4 001a  ld   $1a
              c2a5 0020  ld   $20
              c2a6 0046  ld   $46
              c2a7 0020  ld   $20
              c2a8 0068  ld   $68
              c2a9 004a  ld   $4a
              c2aa 0090  ld   $90
              c2ab 000a  ld   $0a
              c2ac 00a5  ld   $a5
              c2ad 0094  ld   $94
              c2ae 00f0  ld   $f0
              c2af 0006  ld   $06
              c2b0 00a5  ld   $a5
              c2b1 0099  ld   $99
              c2b2 0049  ld   $49
              c2b3 00ff  ld   $ff
              c2b4 0085  ld   $85
              c2b5 0099  ld   $99
              c2b6 0060  ld   $60
              c2b7 0081  ld   $81
              c2b8 0038  ld   $38
              c2b9 00aa  ld   $aa
              c2ba 003b  ld   $3b
              c2bb 0029  ld   $29
              c2bc 0007  ld   $07
              c2bd 0071  ld   $71
              c2be 0034  ld   $34
              c2bf 0058  ld   $58
              c2c0 003e  ld   $3e
              c2c1 0056  ld   $56
              c2c2 0074  ld   $74
              c2c3 0016  ld   $16
              c2c4 007e  ld   $7e
              c2c5 00b3  ld   $b3
              c2c6 001b  ld   $1b
              c2c7 0077  ld   $77
              c2c8 002f  ld   $2f
              c2c9 00ee  ld   $ee
              c2ca 00e3  ld   $e3
              c2cb 0085  ld   $85
              c2cc 007a  ld   $7a
              c2cd 001d  ld   $1d
              c2ce 0084  ld   $84
              c2cf 001c  ld   $1c
              c2d0 002a  ld   $2a
              c2d1 007c  ld   $7c
              c2d2 0063  ld   $63
              c2d3 0059  ld   $59
              c2d4 0058  ld   $58
              c2d5 000a  ld   $0a
              c2d6 007e  ld   $7e
              c2d7 0075  ld   $75
              c2d8 00fd  ld   $fd
              c2d9 00e7  ld   $e7
              c2da 00c6  ld   $c6
              c2db 0080  ld   $80
              c2dc 0031  ld   $31
              c2dd 0072  ld   $72
              c2de 0018  ld   $18
              c2df 0010  ld   $10
              c2e0 0081  ld   $81
              c2e1 0000  ld   $00
              c2e2 0000  ld   $00
              c2e3 0000  ld   $00
              c2e4 0000  ld   $00
              c2e5 00a9  ld   $a9
              c2e6 0018  ld   $18
              c2e7 00a0  ld   $a0
              c2e8 0020  ld   $20
              c2e9 0020  ld   $20
              c2ea 00a0  ld   $a0
              c2eb 001a  ld   $1a
              c2ec 00a5  ld   $a5
              c2ed 00a3  ld   $a3
              c2ee 0069  ld   $69
              c2ef 0050  ld   $50
              c2f0 0090  ld   $90
              c2f1 0003  ld   $03
              c2f2 0020  ld   $20
              c2f3 009b  ld   $9b
              c2f4 001c  ld   $1c
              c2f5 0085  ld   $85
              c2f6 0089  ld   $89
              c2f7 0020  ld   $20
              c2f8 0087  ld   $87
              c2f9 001c  ld   $1c
              c2fa 00a5  ld   $a5
              c2fb fe00  bra  ac          ;+-----------------------------------+
              c2fc fcfd  bra  $c2fd       ;|                                   |
              c2fd 1418  ld   $18,y       ;| Trampoline for page $c200 lookups |
              c2fe e006  jmp  y,$06       ;|                                   |
              c2ff c218  st   [$18]       ;+-----------------------------------+
              c300 0094  ld   $94
              c301 00c9  ld   $c9
              c302 0088  ld   $88
              c303 0090  ld   $90
              c304 0003  ld   $03
              c305 0020  ld   $20
              c306 004c  ld   $4c
              c307 001b  ld   $1b
              c308 0020  ld   $20
              c309 0044  ld   $44
              c30a 001d  ld   $1d
              c30b 00a5  ld   $a5
              c30c 003b  ld   $3b
              c30d 0018  ld   $18
              c30e 0069  ld   $69
              c30f 0081  ld   $81
              c310 00f0  ld   $f0
              c311 00f3  ld   $f3
              c312 0038  ld   $38
              c313 00e9  ld   $e9
              c314 0001  ld   $01
              c315 0048  ld   $48
              c316 00a2  ld   $a2
              c317 0005  ld   $05
              c318 00b5  ld   $b5
              c319 009c  ld   $9c
              c31a 00b4  ld   $b4
              c31b 0094  ld   $94
              c31c 0095  ld   $95
              c31d 0094  ld   $94
              c31e 0094  ld   $94
              c31f 009c  ld   $9c
              c320 00ca  ld   $ca
              c321 0010  ld   $10
              c322 00f5  ld   $f5
              c323 00a5  ld   $a5
              c324 0089  ld   $89
              c325 0085  ld   $85
              c326 00a3  ld   $a3
              c327 0020  ld   $20
              c328 0098  ld   $98
              c329 0018  ld   $18
              c32a 0020  ld   $20
              c32b 000d  ld   $0d
              c32c 0020  ld   $20
              c32d 00a9  ld   $a9
              c32e 001d  ld   $1d
              c32f 00a0  ld   $a0
              c330 0020  ld   $20
              c331 0020  ld   $20
              c332 00af  ld   $af
              c333 0020  ld   $20
              c334 00a9  ld   $a9
              c335 0000  ld   $00
              c336 0085  ld   $85
              c337 00a2  ld   $a2
              c338 0068  ld   $68
              c339 0020  ld   $20
              c33a 0031  ld   $31
              c33b 001b  ld   $1b
              c33c 0060  ld   $60
              c33d 0085  ld   $85
              c33e 00a4  ld   $a4
              c33f 0084  ld   $84
              c340 00a5  ld   $a5
              c341 0020  ld   $20
              c342 0042  ld   $42
              c343 001c  ld   $1c
              c344 00a9  ld   $a9
              c345 008a  ld   $8a
              c346 0020  ld   $20
              c347 00a0  ld   $a0
              c348 001a  ld   $1a
              c349 0020  ld   $20
              c34a 00b3  ld   $b3
              c34b 0020  ld   $20
              c34c 00a9  ld   $a9
              c34d 008a  ld   $8a
              c34e 00a0  ld   $a0
              c34f 0000  ld   $00
              c350 004c  ld   $4c
              c351 00a0  ld   $a0
              c352 001a  ld   $1a
              c353 0085  ld   $85
              c354 00a4  ld   $a4
              c355 0084  ld   $84
              c356 00a5  ld   $a5
              c357 0020  ld   $20
              c358 003f  ld   $3f
              c359 001c  ld   $1c
              c35a 00b1  ld   $b1
              c35b 00a4  ld   $a4
              c35c 0085  ld   $85
              c35d 009a  ld   $9a
              c35e 00a4  ld   $a4
              c35f 00a4  ld   $a4
              c360 00c8  ld   $c8
              c361 0098  ld   $98
              c362 00d0  ld   $d0
              c363 0002  ld   $02
              c364 00e6  ld   $e6
              c365 00a5  ld   $a5
              c366 0085  ld   $85
              c367 00a4  ld   $a4
              c368 00a4  ld   $a4
              c369 00a5  ld   $a5
              c36a 0020  ld   $20
              c36b 00a0  ld   $a0
              c36c 001a  ld   $1a
              c36d 00a5  ld   $a5
              c36e 00a4  ld   $a4
              c36f 00a4  ld   $a4
              c370 00a5  ld   $a5
              c371 0018  ld   $18
              c372 0069  ld   $69
              c373 0005  ld   $05
              c374 0090  ld   $90
              c375 0001  ld   $01
              c376 00c8  ld   $c8
              c377 0085  ld   $85
              c378 00a4  ld   $a4
              c379 0084  ld   $84
              c37a 00a5  ld   $a5
              c37b 0020  ld   $20
              c37c 00df  ld   $df
              c37d 0018  ld   $18
              c37e 00a9  ld   $a9
              c37f 008f  ld   $8f
              c380 00a0  ld   $a0
              c381 0000  ld   $00
              c382 00c6  ld   $c6
              c383 009a  ld   $9a
              c384 00d0  ld   $d0
              c385 00e4  ld   $e4
              c386 0060  ld   $60
              c387 0098  ld   $98
              c388 0035  ld   $35
              c389 0044  ld   $44
              c38a 007a  ld   $7a
              c38b 0068  ld   $68
              c38c 0028  ld   $28
              c38d 00b1  ld   $b1
              c38e 0046  ld   $46
              c38f 0020  ld   $20
              c390 00a3  ld   $a3
              c391 001c  ld   $1c
              c392 0030  ld   $30
              c393 002a  ld   $2a
              c394 00d0  ld   $d0
              c395 0013  ld   $13
              c396 00a5  ld   $a5
              c397 0006  ld   $06
              c398 0085  ld   $85
              c399 0095  ld   $95
              c39a 00a5  ld   $a5
              c39b 000a  ld   $0a
              c39c 0085  ld   $85
              c39d 0096  ld   $96
              c39e 00a5  ld   $a5
              c39f 0007  ld   $07
              c3a0 0085  ld   $85
              c3a1 0097  ld   $97
              c3a2 00a5  ld   $a5
              c3a3 000b  ld   $0b
              c3a4 0021  ld   $21
              c3a5 0000  ld   $00
              c3a6 0000  ld   $00
              c3a7 0085  ld   $85
              c3a8 0098  ld   $98
              c3a9 004c  ld   $4c
              c3aa 002a  ld   $2a
              c3ab 0021  ld   $21
              c3ac 00a9  ld   $a9
              c3ad 0088  ld   $88
              c3ae 00a0  ld   $a0
              c3af 0022  ld   $22
              c3b0 0020  ld   $20
              c3b1 001a  ld   $1a
              c3b2 001c  ld   $1c
              c3b3 00a9  ld   $a9
              c3b4 00e3  ld   $e3
              c3b5 00a0  ld   $a0
              c3b6 0020  ld   $20
              c3b7 0020  ld   $20
              c3b8 00a0  ld   $a0
              c3b9 001a  ld   $1a
              c3ba 00a9  ld   $a9
              c3bb 00e7  ld   $e7
              c3bc 00a0  ld   $a0
              c3bd 0020  ld   $20
              c3be 0020  ld   $20
              c3bf 00df  ld   $df
              c3c0 0018  ld   $18
              c3c1 00a6  ld   $a6
              c3c2 0098  ld   $98
              c3c3 00a5  ld   $a5
              c3c4 0095  ld   $95
              c3c5 0085  ld   $85
              c3c6 0098  ld   $98
              c3c7 0086  ld   $86
              c3c8 0095  ld   $95
              c3c9 00a6  ld   $a6
              c3ca 0096  ld   $96
              c3cb 00a5  ld   $a5
              c3cc 0097  ld   $97
              c3cd 0085  ld   $85
              c3ce 0096  ld   $96
              c3cf 0086  ld   $86
              c3d0 0097  ld   $97
              c3d1 00a9  ld   $a9
              c3d2 0000  ld   $00
              c3d3 0085  ld   $85
              c3d4 0099  ld   $99
              c3d5 00a5  ld   $a5
              c3d6 0094  ld   $94
              c3d7 0085  ld   $85
              c3d8 00a3  ld   $a3
              c3d9 00a9  ld   $a9
              c3da 0080  ld   $80
              c3db 0085  ld   $85
              c3dc 0094  ld   $94
              c3dd 0020  ld   $20
              c3de 004f  ld   $4f
              c3df 0019  ld   $19
              c3e0 00a2  ld   $a2
              c3e1 0088  ld   $88
              c3e2 00a0  ld   $a0
              c3e3 0022  ld   $22
              c3e4 004c  ld   $4c
              c3e5 004c  ld   $4c
              c3e6 001c  ld   $1c
              c3e7 00a9  ld   $a9
              c3e8 00bc  ld   $bc
              c3e9 00a0  ld   $a0
              c3ea 0021  ld   $21
              c3eb 0020  ld   $20
              c3ec 00df  ld   $df
              c3ed 0018  ld   $18
              c3ee 0020  ld   $20
              c3ef 0084  ld   $84
              c3f0 001c  ld   $1c
              c3f1 00a9  ld   $a9
              c3f2 00c1  ld   $c1
              c3f3 00a0  ld   $a0
              c3f4 0021  ld   $21
              c3f5 00a6  ld   $a6
              c3f6 00a1  ld   $a1
              c3f7 0020  ld   $20
              c3f8 007f  ld   $7f
              c3f9 001b  ld   $1b
              c3fa 0020  ld   $20
              c3fb fe00  bra  ac          ;+-----------------------------------+
              c3fc fcfd  bra  $c3fd       ;|                                   |
              c3fd 1418  ld   $18,y       ;| Trampoline for page $c300 lookups |
              c3fe e006  jmp  y,$06       ;|                                   |
              c3ff c218  st   [$18]       ;+-----------------------------------+
              c400 0084  ld   $84
              c401 001c  ld   $1c
              c402 0020  ld   $20
              c403 0044  ld   $44
              c404 001d  ld   $1d
              c405 00a9  ld   $a9
              c406 0000  ld   $00
              c407 0085  ld   $85
              c408 00a2  ld   $a2
              c409 0020  ld   $20
              c40a 0098  ld   $98
              c40b 0018  ld   $18
              c40c 00a9  ld   $a9
              c40d 00c6  ld   $c6
              c40e 00a0  ld   $a0
              c40f 0021  ld   $21
              c410 0020  ld   $20
              c411 0095  ld   $95
              c412 0018  ld   $18
              c413 00a5  ld   $a5
              c414 0099  ld   $99
              c415 0048  ld   $48
              c416 0010  ld   $10
              c417 000d  ld   $0d
              c418 0020  ld   $20
              c419 008e  ld   $8e
              c41a 0018  ld   $18
              c41b 00a5  ld   $a5
              c41c 0099  ld   $99
              c41d 0030  ld   $30
              c41e 0009  ld   $09
              c41f 00a5  ld   $a5
              c420 0044  ld   $44
              c421 0049  ld   $49
              c422 00ff  ld   $ff
              c423 0085  ld   $85
              c424 0044  ld   $44
              c425 0020  ld   $20
              c426 000d  ld   $0d
              c427 0020  ld   $20
              c428 00a9  ld   $a9
              c429 00c6  ld   $c6
              c42a 00a0  ld   $a0
              c42b 0021  ld   $21
              c42c 0020  ld   $20
              c42d 00df  ld   $df
              c42e 0018  ld   $18
              c42f 0068  ld   $68
              c430 0010  ld   $10
              c431 0003  ld   $03
              c432 0020  ld   $20
              c433 000d  ld   $0d
              c434 0020  ld   $20
              c435 00a9  ld   $a9
              c436 00cb  ld   $cb
              c437 00a0  ld   $a0
              c438 0021  ld   $21
              c439 004c  ld   $4c
              c43a 0099  ld   $99
              c43b 0020  ld   $20
              c43c 0020  ld   $20
              c43d 0042  ld   $42
              c43e 001c  ld   $1c
              c43f 00a9  ld   $a9
              c440 0000  ld   $00
              c441 0085  ld   $85
              c442 0044  ld   $44
              c443 0020  ld   $20
              c444 0047  ld   $47
              c445 0021  ld   $21
              c446 00a2  ld   $a2
              c447 0081  ld   $81
              c448 00a0  ld   $a0
              c449 0000  ld   $00
              c44a 0020  ld   $20
              c44b 003d  ld   $3d
              c44c 0021  ld   $21
              c44d 00a9  ld   $a9
              c44e 008a  ld   $8a
              c44f 00a0  ld   $a0
              c450 0000  ld   $00
              c451 0020  ld   $20
              c452 001a  ld   $1a
              c453 001c  ld   $1c
              c454 00a9  ld   $a9
              c455 0000  ld   $00
              c456 0085  ld   $85
              c457 0099  ld   $99
              c458 00a5  ld   $a5
              c459 0044  ld   $44
              c45a 0020  ld   $20
              c45b 00b8  ld   $b8
              c45c 0021  ld   $21
              c45d 00a9  ld   $a9
              c45e 0081  ld   $81
              c45f 00a0  ld   $a0
              c460 0000  ld   $00
              c461 004c  ld   $4c
              c462 0087  ld   $87
              c463 001b  ld   $1b
              c464 0048  ld   $48
              c465 004c  ld   $4c
              c466 0079  ld   $79
              c467 0021  ld   $21
              c468 0081  ld   $81
              c469 0049  ld   $49
              c46a 000f  ld   $0f
              c46b 00da  ld   $da
              c46c 00a2  ld   $a2
              c46d 0083  ld   $83
              c46e 0049  ld   $49
              c46f 000f  ld   $0f
              c470 00da  ld   $da
              c471 00a2  ld   $a2
              c472 007f  ld   $7f
              c473 0000  ld   $00
              c474 0000  ld   $00
              c475 0000  ld   $00
              c476 0000  ld   $00
              c477 0005  ld   $05
              c478 0084  ld   $84
              c479 00e6  ld   $e6
              c47a 001a  ld   $1a
              c47b 002d  ld   $2d
              c47c 001b  ld   $1b
              c47d 0086  ld   $86
              c47e 0028  ld   $28
              c47f 0007  ld   $07
              c480 00fb  ld   $fb
              c481 00f8  ld   $f8
              c482 0087  ld   $87
              c483 0099  ld   $99
              c484 0068  ld   $68
              c485 0089  ld   $89
              c486 0001  ld   $01
              c487 0087  ld   $87
              c488 0023  ld   $23
              c489 0035  ld   $35
              c48a 00df  ld   $df
              c48b 00e1  ld   $e1
              c48c 0086  ld   $86
              c48d 00a5  ld   $a5
              c48e 005d  ld   $5d
              c48f 00e7  ld   $e7
              c490 0028  ld   $28
              c491 0083  ld   $83
              c492 0049  ld   $49
              c493 000f  ld   $0f
              c494 00da  ld   $da
              c495 00a2  ld   $a2
              c496 00a1  ld   $a1
              c497 0054  ld   $54
              c498 0046  ld   $46
              c499 008f  ld   $8f
              c49a 0013  ld   $13
              c49b 008f  ld   $8f
              c49c 0052  ld   $52
              c49d 0043  ld   $43
              c49e 0089  ld   $89
              c49f 00cd  ld   $cd
              c4a0 00e1  ld   $e1
              c4a1 004e  ld   $4e
              c4a2 008f  ld   $8f
              c4a3 0092  ld   $92
              c4a4 0014  ld   $14
              c4a5 00ad  ld   $ad
              c4a6 0081  ld   $81
              c4a7 0047  ld   $47
              c4a8 0089  ld   $89
              c4a9 00c7  ld   $c7
              c4aa 00a5  ld   $a5
              c4ab 0099  ld   $99
              c4ac 0022  ld   $22
              c4ad 0000  ld   $00
              c4ae 0000  ld   $00
              c4af 0048  ld   $48
              c4b0 0010  ld   $10
              c4b1 0003  ld   $03
              c4b2 0020  ld   $20
              c4b3 000d  ld   $0d
              c4b4 0020  ld   $20
              c4b5 00a5  ld   $a5
              c4b6 0094  ld   $94
              c4b7 0048  ld   $48
              c4b8 00c9  ld   $c9
              c4b9 0081  ld   $81
              c4ba 0090  ld   $90
              c4bb 0007  ld   $07
              c4bc 00a9  ld   $a9
              c4bd 0034  ld   $34
              c4be 00a0  ld   $a0
              c4bf 001a  ld   $1a
              c4c0 0020  ld   $20
              c4c1 0087  ld   $87
              c4c2 001b  ld   $1b
              c4c3 00a9  ld   $a9
              c4c4 002e  ld   $2e
              c4c5 00a0  ld   $a0
              c4c6 0022  ld   $22
              c4c7 0020  ld   $20
              c4c8 0099  ld   $99
              c4c9 0020  ld   $20
              c4ca 0068  ld   $68
              c4cb 00c9  ld   $c9
              c4cc 0081  ld   $81
              c4cd 0090  ld   $90
              c4ce 0007  ld   $07
              c4cf 00a9  ld   $a9
              c4d0 00bc  ld   $bc
              c4d1 00a0  ld   $a0
              c4d2 0021  ld   $21
              c4d3 0020  ld   $20
              c4d4 0095  ld   $95
              c4d5 0018  ld   $18
              c4d6 0068  ld   $68
              c4d7 0010  ld   $10
              c4d8 0003  ld   $03
              c4d9 004c  ld   $4c
              c4da 000d  ld   $0d
              c4db 0020  ld   $20
              c4dc 0060  ld   $60
              c4dd 000b  ld   $0b
              c4de 0076  ld   $76
              c4df 00b3  ld   $b3
              c4e0 0083  ld   $83
              c4e1 00bd  ld   $bd
              c4e2 00d3  ld   $d3
              c4e3 0079  ld   $79
              c4e4 001e  ld   $1e
              c4e5 00f4  ld   $f4
              c4e6 00a6  ld   $a6
              c4e7 00f5  ld   $f5
              c4e8 007b  ld   $7b
              c4e9 0083  ld   $83
              c4ea 00fc  ld   $fc
              c4eb 00b0  ld   $b0
              c4ec 0010  ld   $10
              c4ed 007c  ld   $7c
              c4ee 000c  ld   $0c
              c4ef 001f  ld   $1f
              c4f0 0067  ld   $67
              c4f1 00ca  ld   $ca
              c4f2 007c  ld   $7c
              c4f3 00de  ld   $de
              c4f4 0053  ld   $53
              c4f5 00cb  ld   $cb
              c4f6 00c1  ld   $c1
              c4f7 007d  ld   $7d
              c4f8 0014  ld   $14
              c4f9 0064  ld   $64
              c4fa 0070  ld   $70
              c4fb fe00  bra  ac          ;+-----------------------------------+
              c4fc fcfd  bra  $c4fd       ;|                                   |
              c4fd 1418  ld   $18,y       ;| Trampoline for page $c400 lookups |
              c4fe e006  jmp  y,$06       ;|                                   |
              c4ff c218  st   [$18]       ;+-----------------------------------+
              c500 004c  ld   $4c
              c501 007d  ld   $7d
              c502 00b7  ld   $b7
              c503 00ea  ld   $ea
              c504 0051  ld   $51
              c505 007a  ld   $7a
              c506 007d  ld   $7d
              c507 0063  ld   $63
              c508 0030  ld   $30
              c509 0088  ld   $88
              c50a 007e  ld   $7e
              c50b 007e  ld   $7e
              c50c 0092  ld   $92
              c50d 0044  ld   $44
              c50e 0099  ld   $99
              c50f 003a  ld   $3a
              c510 007e  ld   $7e
              c511 004c  ld   $4c
              c512 00cc  ld   $cc
              c513 0091  ld   $91
              c514 00c7  ld   $c7
              c515 007f  ld   $7f
              c516 00aa  ld   $aa
              c517 00aa  ld   $aa
              c518 00aa  ld   $aa
              c519 0013  ld   $13
              c51a 0081  ld   $81
              c51b 0000  ld   $00
              c51c 0000  ld   $00
              c51d 0000  ld   $00
              c51e 0000  ld   $00
              c51f 00e6  ld   $e6
              c520 00a6  ld   $a6
              c521 00d0  ld   $d0
              c522 0002  ld   $02
              c523 00e6  ld   $e6
              c524 00a7  ld   $a7
              c525 0084  ld   $84
              c526 0019  ld   $19
              c527 00a0  ld   $a0
              c528 0000  ld   $00
              c529 00b1  ld   $b1
              c52a 00a6  ld   $a6
              c52b 00a4  ld   $a4
              c52c 0019  ld   $19
              c52d 00c9  ld   $c9
              c52e 003a  ld   $3a
              c52f 00b0  ld   $b0
              c530 000a  ld   $0a
              c531 00c9  ld   $c9
              c532 0020  ld   $20
              c533 00f0  ld   $f0
              c534 00ea  ld   $ea
              c535 0038  ld   $38
              c536 00e9  ld   $e9
              c537 0030  ld   $30
              c538 0038  ld   $38
              c539 00e9  ld   $e9
              c53a 00d0  ld   $d0
              c53b 0060  ld   $60
              c53c 0080  ld   $80
              c53d 004f  ld   $4f
              c53e 00c7  ld   $c7
              c53f 0052  ld   $52
              c540 0058  ld   $58
              c541 00a2  ld   $a2
              c542 00fb  ld   $fb
              c543 009a  ld   $9a
              c544 00a9  ld   $a9
              c545 004c  ld   $4c
              c546 0085  ld   $85
              c547 0087  ld   $87
              c548 0085  ld   $85
              c549 0038  ld   $38
              c54a 00a9  ld   $a9
              c54b 0082  ld   $82
              c54c 00a0  ld   $a0
              c54d 0012  ld   $12
              c54e 0085  ld   $85
              c54f 0039  ld   $39
              c550 0084  ld   $84
              c551 003a  ld   $3a
              c552 00a9  ld   $a9
              c553 0028  ld   $28
              c554 0085  ld   $85
              c555 0019  ld   $19
              c556 00a9  ld   $a9
              c557 001e  ld   $1e
              c558 0085  ld   $85
              c559 0019  ld   $19
              c55a 00a2  ld   $a2
              c55b 0000  ld   $00
              c55c 00a9  ld   $a9
              c55d 0003  ld   $03
              c55e 0085  ld   $85
              c55f 0086  ld   $86
              c560 008a  ld   $8a
              c561 0085  ld   $85
              c562 009b  ld   $9b
              c563 0085  ld   $85
              c564 0019  ld   $19
              c565 0085  ld   $85
              c566 004a  ld   $4a
              c567 0048  ld   $48
              c568 0085  ld   $85
              c569 0045  ld   $45
              c56a 00e8  ld   $e8
              c56b 008e  ld   $8e
              c56c 0002  ld   $02
              c56d 0024  ld   $24
              c56e 008e  ld   $8e
              c56f 0001  ld   $01
              c570 0024  ld   $24
              c571 00a2  ld   $a2
              c572 004b  ld   $4b
              c573 0086  ld   $86
              c574 0048  ld   $48
              c575 00a0  ld   $a0
              c576 0071  ld   $71
              c577 0085  ld   $85
              c578 005d  ld   $5d
              c579 0084  ld   $84
              c57a 005e  ld   $5e
              c57b 0085  ld   $85
              c57c 0046  ld   $46
              c57d 0084  ld   $84
              c57e 0047  ld   $47
              c57f 00a8  ld   $a8
              c580 00e6  ld   $e6
              c581 0046  ld   $46
              c582 00d0  ld   $d0
              c583 0004  ld   $04
              c584 00e6  ld   $e6
              c585 0047  ld   $47
              c586 0030  ld   $30
              c587 000f  ld   $0f
              c588 00a9  ld   $a9
              c589 0055  ld   $55
              c58a 0091  ld   $91
              c58b 0046  ld   $46
              c58c 00d1  ld   $d1
              c58d 0046  ld   $46
              c58e 00d0  ld   $d0
              c58f 0007  ld   $07
              c590 000a  ld   $0a
              c591 0091  ld   $91
              c592 0046  ld   $46
              c593 00d1  ld   $d1
              c594 0046  ld   $46
              c595 00f0  ld   $f0
              c596 00e9  ld   $e9
              c597 00a5  ld   $a5
              c598 0001  ld   $01
              c599 00c9  ld   $c9
              c59a 0001  ld   $01
              c59b 00e9  ld   $e9
              c59c 0000  ld   $00
              c59d 0085  ld   $85
              c59e 0047  ld   $47
              c59f 00a5  ld   $a5
              c5a0 0046  ld   $46
              c5a1 00a4  ld   $a4
              c5a2 0047  ld   $47
              c5a3 0085  ld   $85
              c5a4 0069  ld   $69
              c5a5 0084  ld   $84
              c5a6 006a  ld   $6a
              c5a7 0085  ld   $85
              c5a8 0065  ld   $65
              c5a9 0084  ld   $84
              c5aa 0066  ld   $66
              c5ab 00a2  ld   $a2
              c5ac 0000  ld   $00
              c5ad 00a0  ld   $a0
              c5ae 0071  ld   $71
              c5af 0086  ld   $86
              c5b0 005d  ld   $5d
              c5b1 0084  ld   $84
              c5b2 005e  ld   $5e
              c5b3 00a0  ld   $a0
              c5b4 0023  ld   $23
              c5b5 0000  ld   $00
              c5b6 004e  ld   $4e
              c5b7 0000  ld   $00
              c5b8 0098  ld   $98
              c5b9 0091  ld   $91
              c5ba 005d  ld   $5d
              c5bb 00e6  ld   $e6
              c5bc 005d  ld   $5d
              c5bd 00a5  ld   $a5
              c5be 005d  ld   $5d
              c5bf 00a4  ld   $a4
              c5c0 005e  ld   $5e
              c5c1 0020  ld   $20
              c5c2 001b  ld   $1b
              c5c3 0005  ld   $05
              c5c4 00a9  ld   $a9
              c5c5 003b  ld   $3b
              c5c6 00a0  ld   $a0
              c5c7 0023  ld   $23
              c5c8 0020  ld   $20
              c5c9 00ef  ld   $ef
              c5ca 000b  ld   $0b
              c5cb 00a5  ld   $a5
              c5cc 0069  ld   $69
              c5cd 0038  ld   $38
              c5ce 00e5  ld   $e5
              c5cf 005d  ld   $5d
              c5d0 00aa  ld   $aa
              c5d1 00a5  ld   $a5
              c5d2 006a  ld   $6a
              c5d3 00e5  ld   $e5
              c5d4 005e  ld   $5e
              c5d5 0020  ld   $20
              c5d6 0045  ld   $45
              c5d7 001e  ld   $1e
              c5d8 00a9  ld   $a9
              c5d9 002e  ld   $2e
              c5da 00a0  ld   $a0
              c5db 0023  ld   $23
              c5dc 0020  ld   $20
              c5dd 00ef  ld   $ef
              c5de 000b  ld   $0b
              c5df 0020  ld   $20
              c5e0 0044  ld   $44
              c5e1 0007  ld   $07
              c5e2 004c  ld   $4c
              c5e3 0071  ld   $71
              c5e4 0005  ld   $05
              c5e5 0020  ld   $20
              c5e6 0042  ld   $42
              c5e7 0059  ld   $59
              c5e8 0054  ld   $54
              c5e9 0045  ld   $45
              c5ea 0053  ld   $53
              c5eb 0020  ld   $20
              c5ec 0046  ld   $46
              c5ed 0052  ld   $52
              c5ee 0045  ld   $45
              c5ef 0045  ld   $45
              c5f0 000d  ld   $0d
              c5f1 0000  ld   $00
              c5f2 0023  ld   $23
              c5f3 0023  ld   $23
              c5f4 0023  ld   $23
              c5f5 0020  ld   $20
              c5f6 004d  ld   $4d
              c5f7 0053  ld   $53
              c5f8 0020  ld   $20
              c5f9 0042  ld   $42
              c5fa 0041  ld   $41
              c5fb fe00  bra  ac          ;+-----------------------------------+
              c5fc fcfd  bra  $c5fd       ;|                                   |
              c5fd 1418  ld   $18,y       ;| Trampoline for page $c500 lookups |
              c5fe e006  jmp  y,$06       ;|                                   |
              c5ff c218  st   [$18]       ;+-----------------------------------+
              c600 0053  ld   $53
              c601 0049  ld   $49
              c602 0043  ld   $43
              c603 0020  ld   $20
              c604 0023  ld   $23
              c605 0023  ld   $23
              c606 0023  ld   $23
              c607 000d  ld   $0d
              c608 000d  ld   $0d
              c609 0000  ld   $00
              c60a 0024  ld   $24
              c60b 0000  ld   $00
              c60c 0038  ld   $38
              c60d 0011  ld   $11
              c60e 0000  ld   $00
              c60f 000b  ld   $0b
              c610 002b  ld   $2b
              c611 0022  ld   $22
              c612 0059  ld   $59
              c613 0003  ld   $03
              c614 00b4  ld   $b4
              c615 00e6  ld   $e6
              c616 0011  ld   $11
              c617 0000  ld   $00
              c618 0002  ld   $02
              c619 002b  ld   $2b
              c61a 0030  ld   $30
              c61b 0059  ld   $59
              c61c 0000  ld   $00
              c61d 00f3  ld   $f3
              c61e 0030  ld   $30
              c61f 0093  ld   $93
              c620 0030  ld   $30
              c621 0093  ld   $93
              c622 0030  ld   $30
              c623 00f3  ld   $f3
              c624 0030  ld   $30
              c625 0011  ld   $11
              c626 0000  ld   $00
              c627 0001  ld   $01
              c628 002b  ld   $2b
              c629 0030  ld   $30
              c62a 0011  ld   $11
              c62b 0000  ld   $00
              c62c 0027  ld   $27
              c62d 002b  ld   $2b
              c62e 0032  ld   $32
              c62f 0011  ld   $11
              c630 0000  ld   $00
              c631 00a0  ld   $a0
              c632 002b  ld   $2b
              c633 0024  ld   $24
              c634 0011  ld   $11
              c635 0060  ld   $60
              c636 0070  ld   $70
              c637 002b  ld   $2b
              c638 0026  ld   $26
              c639 0011  ld   $11
              c63a 0003  ld   $03
              c63b 000b  ld   $0b
              c63c 002b  ld   $2b
              c63d 0022  ld   $22
              c63e 00b4  ld   $b4
              c63f 00f3  ld   $f3
              c640 0011  ld   $11
              c641 0000  ld   $00
              c642 0025  ld   $25
              c643 00cf  ld   $cf
              c644 0018  ld   $18
              c645 0025  ld   $25
              c646 0000  ld   $00
              c647 0054  ld   $54
              c648 0011  ld   $11
              c649 0000  ld   $00
              c64a 0001  ld   $01
              c64b 002b  ld   $2b
              c64c 0030  ld   $30
              c64d 0011  ld   $11
              c64e 00e0  ld   $e0
              c64f 0001  ld   $01
              c650 002b  ld   $2b
              c651 0034  ld   $34
              c652 0059  ld   $59
              c653 0023  ld   $23
              c654 002b  ld   $2b
              c655 0036  ld   $36
              c656 0021  ld   $21
              c657 0034  ld   $34
              c658 0035  ld   $35
              c659 0050  ld   $50
              c65a 001b  ld   $1b
              c65b 0021  ld   $21
              c65c 0036  ld   $36
              c65d 00f0  ld   $f0
              c65e 0030  ld   $30
              c65f 0093  ld   $93
              c660 0036  ld   $36
              c661 0021  ld   $21
              c662 0034  ld   $34
              c663 0090  ld   $90
              c664 0023  ld   $23
              c665 0059  ld   $59
              c666 0070  ld   $70
              c667 00f0  ld   $f0
              c668 0030  ld   $30
              c669 0021  ld   $21
              c66a 0034  ld   $34
              c66b 00e3  ld   $e3
              c66c 0010  ld   $10
              c66d 00e9  ld   $e9
              c66e 002b  ld   $2b
              c66f 0034  ld   $34
              c670 0093  ld   $93
              c671 0030  ld   $30
              c672 0093  ld   $93
              c673 0030  ld   $30
              c674 001a  ld   $1a
              c675 0030  ld   $30
              c676 008c  ld   $8c
              c677 00f0  ld   $f0
              c678 0035  ld   $35
              c679 0072  ld   $72
              c67a 000c  ld   $0c
              c67b 0011  ld   $11
              c67c 0001  ld   $01
              c67d 0001  ld   $01
              c67e 002b  ld   $2b
              c67f 0030  ld   $30
              c680 0059  ld   $59
              c681 0060  ld   $60
              c682 00f0  ld   $f0
              c683 0030  ld   $30
              c684 0059  ld   $59
              c685 0006  ld   $06
              c686 005e  ld   $5e
              c687 002a  ld   $2a
              c688 0059  ld   $59
              c689 000d  ld   $0d
              c68a 00cf  ld   $cf
              c68b 0032  ld   $32
              c68c 001a  ld   $1a
              c68d 002a  ld   $2a
              c68e 00e6  ld   $e6
              c68f 0001  ld   $01
              c690 0035  ld   $35
              c691 004d  ld   $4d
              c692 003c  ld   $3c
              c693 0011  ld   $11
              c694 0000  ld   $00
              c695 0026  ld   $26
              c696 002b  ld   $2b
              c697 001a  ld   $1a
              c698 0011  ld   $11
              c699 008d  ld   $8d
              c69a 0022  ld   $22
              c69b 00ff  ld   $ff
              c69c 0026  ld   $26
              c69d 0000  ld   $00
              c69e 0047  ld   $47
              c69f 002b  ld   $2b
              c6a0 001a  ld   $1a
              c6a1 0011  ld   $11
              c6a2 000c  ld   $0c
              c6a3 000b  ld   $0b
              c6a4 002b  ld   $2b
              c6a5 0022  ld   $22
              c6a6 00b4  ld   $b4
              c6a7 00e6  ld   $e6
              c6a8 0075  ld   $75
              c6a9 00cf  ld   $cf
              c6aa 0032  ld   $32
              c6ab 0063  ld   $63
              c6ac 0090  ld   $90
              c6ad 0000  ld   $00
              c6ae 0011  ld   $11
              c6af 00e1  ld   $e1
              c6b0 0004  ld   $04
              c6b1 002b  ld   $2b
              c6b2 0022  ld   $22
              c6b3 0011  ld   $11
              c6b4 0000  ld   $00
              c6b5 000b  ld   $0b
              c6b6 002b  ld   $2b
              c6b7 0024  ld   $24
              c6b8 0021  ld   $21
              c6b9 0030  ld   $30
              c6ba 002b  ld   $2b
              c6bb 0028  ld   $28
              c6bc 00e3  ld   $e3
              c6bd 0006  ld   $06
              c6be 002b  ld   $2b
              c6bf 0030  ld   $30
              c6c0 0059  ld   $59
              c6c1 0005  ld   $05
              c6c2 002b  ld   $2b
              c6c3 0034  ld   $34
              c6c4 0021  ld   $21
              c6c5 0036  ld   $36
              c6c6 007f  ld   $7f
              c6c7 0000  ld   $00
              c6c8 0082  ld   $82
              c6c9 00fe  ld   $fe
              c6ca 005e  ld   $5e
              c6cb 0026  ld   $26
              c6cc 0011  ld   $11
              c6cd 0000  ld   $00
              c6ce 0007  ld   $07
              c6cf 0099  ld   $99
              c6d0 0028  ld   $28
              c6d1 00ad  ld   $ad
              c6d2 0035  ld   $35
              c6d3 003f  ld   $3f
              c6d4 0036  ld   $36
              c6d5 0093  ld   $93
              c6d6 0026  ld   $26
              c6d7 00b4  ld   $b4
              c6d8 00cb  ld   $cb
              c6d9 0093  ld   $93
              c6da 0036  ld   $36
              c6db 0093  ld   $93
              c6dc 0028  ld   $28
              c6dd 0021  ld   $21
              c6de 0034  ld   $34
              c6df 00e6  ld   $e6
              c6e0 0001  ld   $01
              c6e1 0035  ld   $35
              c6e2 004d  ld   $4d
              c6e3 0021  ld   $21
              c6e4 0063  ld   $63
              c6e5 00ff  ld   $ff
              c6e6 0027  ld   $27
              c6e7 0000  ld   $00
              c6e8 0059  ld   $59
              c6e9 0075  ld   $75
              c6ea 00e6  ld   $e6
              c6eb 00ff  ld   $ff
              c6ec 0035  ld   $35
              c6ed 003f  ld   $3f
              c6ee 0041  ld   $41
              c6ef 00e3  ld   $e3
              c6f0 00df  ld   $df
              c6f1 0035  ld   $35
              c6f2 0053  ld   $53
              c6f3 001a  ld   $1a
              c6f4 002b  ld   $2b
              c6f5 0024  ld   $24
              c6f6 0011  ld   $11
              c6f7 0000  ld   $00
              c6f8 0029  ld   $29
              c6f9 00cf  ld   $cf
              c6fa 0018  ld   $18
              c6fb fe00  bra  ac          ;+-----------------------------------+
              c6fc fcfd  bra  $c6fd       ;|                                   |
              c6fd 1418  ld   $18,y       ;| Trampoline for page $c600 lookups |
              c6fe e006  jmp  y,$06       ;|                                   |
              c6ff c218  st   [$18]       ;+-----------------------------------+
              c700 0035  ld   $35
              c701 0072  ld   $72
              c702 0015  ld   $15
              c703 0063  ld   $63
              c704 00ff  ld   $ff
              c705 0011  ld   $11
              c706 009b  ld   $9b
              c707 0007  ld   $07
              c708 0090  ld   $90
              c709 003f  ld   $3f
              c70a 00e6  ld   $e6
              c70b 005f  ld   $5f
              c70c 0035  ld   $35
              c70d 0056  ld   $56
              c70e 0022  ld   $22
              c70f 0011  ld   $11
              c710 00c0  ld   $c0
              c711 00ff  ld   $ff
              c712 00e3  ld   $e3
              c713 002d  ld   $2d
              c714 0035  ld   $35
              c715 0053  ld   $53
              c716 0030  ld   $30
              c717 00e3  ld   $e3
              c718 0032  ld   $32
              c719 002b  ld   $2b
              c71a 0034  ld   $34
              c71b 0011  ld   $11
              c71c 0000  ld   $00
              c71d 0007  ld   $07
              c71e 0090  ld   $90
              c71f 0035  ld   $35
              c720 002b  ld   $2b
              c721 0034  ld   $34
              c722 0011  ld   $11
              c723 0000  ld   $00
              c724 0008  ld   $08
              c725 002b  ld   $2b
              c726 0036  ld   $36
              c727 0021  ld   $21
              c728 0034  ld   $34
              c729 00e9  ld   $e9
              c72a 00e9  ld   $e9
              c72b 0099  ld   $99
              c72c 0034  ld   $34
              c72d 0099  ld   $99
              c72e 0036  ld   $36
              c72f 0090  ld   $90
              c730 0044  ld   $44
              c731 0011  ld   $11
              c732 000c  ld   $0c
              c733 0008  ld   $08
              c734 002b  ld   $2b
              c735 0036  ld   $36
              c736 001a  ld   $1a
              c737 0030  ld   $30
              c738 00e6  ld   $e6
              c739 00fb  ld   $fb
              c73a 0035  ld   $35
              c73b 0056  ld   $56
              c73c 0052  ld   $52
              c73d 0011  ld   $11
              c73e 0000  ld   $00
              c73f 0028  ld   $28
              c740 00cf  ld   $cf
              c741 0018  ld   $18
              c742 0011  ld   $11
              c743 000f  ld   $0f
              c744 0026  ld   $26
              c745 00cf  ld   $cf
              c746 0018  ld   $18
              c747 0028  ld   $28
              c748 0000  ld   $00
              c749 004c  ld   $4c
              c74a 0011  ld   $11
              c74b 00e1  ld   $e1
              c74c 0004  ld   $04
              c74d 002b  ld   $2b
              c74e 0022  ld   $22
              c74f 0011  ld   $11
              c750 0000  ld   $00
              c751 000b  ld   $0b
              c752 002b  ld   $2b
              c753 0024  ld   $24
              c754 0059  ld   $59
              c755 0062  ld   $62
              c756 005e  ld   $5e
              c757 0030  ld   $30
              c758 00e3  ld   $e3
              c759 009e  ld   $9e
              c75a 002b  ld   $2b
              c75b 0034  ld   $34
              c75c 00ad  ld   $ad
              c75d 005e  ld   $5e
              c75e 0031  ld   $31
              c75f 0021  ld   $21
              c760 0030  ld   $30
              c761 00e6  ld   $e6
              c762 0002  ld   $02
              c763 002b  ld   $2b
              c764 0028  ld   $28
              c765 0011  ld   $11
              c766 0000  ld   $00
              c767 0007  ld   $07
              c768 0099  ld   $99
              c769 0028  ld   $28
              c76a 00ad  ld   $ad
              c76b 0082  ld   $82
              c76c 0001  ld   $01
              c76d 005e  ld   $5e
              c76e 0026  ld   $26
              c76f 00b4  ld   $b4
              c770 00cb  ld   $cb
              c771 0093  ld   $93
              c772 0028  ld   $28
              c773 001a  ld   $1a
              c774 0028  ld   $28
              c775 0035  ld   $35
              c776 0072  ld   $72
              c777 0019  ld   $19
              c778 0021  ld   $21
              c779 0034  ld   $34
              c77a 00e3  ld   $e3
              c77b 0016  ld   $16
              c77c 002b  ld   $2b
              c77d 0028  ld   $28
              c77e 00ad  ld   $ad
              c77f 005e  ld   $5e
              c780 0026  ld   $26
              c781 0021  ld   $21
              c782 0034  ld   $34
              c783 00ad  ld   $ad
              c784 00f0  ld   $f0
              c785 0028  ld   $28
              c786 001a  ld   $1a
              c787 0026  ld   $26
              c788 00f0  ld   $f0
              c789 0034  ld   $34
              c78a 0093  ld   $93
              c78b 0034  ld   $34
              c78c 0093  ld   $93
              c78d 0034  ld   $34
              c78e 001a  ld   $1a
              c78f 0034  ld   $34
              c790 008c  ld   $8c
              c791 00da  ld   $da
              c792 0035  ld   $35
              c793 0072  ld   $72
              c794 002c  ld   $2c
              c795 00ff  ld   $ff
              c796 0029  ld   $29
              c797 0000  ld   $00
              c798 001f  ld   $1f
              c799 0021  ld   $21
              c79a 0024  ld   $24
              c79b 00e3  ld   $e3
              c79c 0013  ld   $13
              c79d 0035  ld   $35
              c79e 0072  ld   $72
              c79f 000d  ld   $0d
              c7a0 0075  ld   $75
              c7a1 0011  ld   $11
              c7a2 0000  ld   $00
              c7a3 0028  ld   $28
              c7a4 00cf  ld   $cf
              c7a5 0018  ld   $18
              c7a6 0063  ld   $63
              c7a7 00ff  ld   $ff
              c7a8 00e3  ld   $e3
              c7a9 0003  ld   $03
              c7aa 0035  ld   $35
              c7ab 003f  ld   $3f
              c7ac 001c  ld   $1c
              c7ad 00e3  ld   $e3
              c7ae 0003  ld   $03
              c7af 0035  ld   $35
              c7b0 0072  ld   $72
              c7b1 001c  ld   $1c
              c7b2 0059  ld   $59
              c7b3 0006  ld   $06
              c7b4 005e  ld   $5e
              c7b5 002c  ld   $2c
              c7b6 0063  ld   $63
              c7b7 00ff  ld   $ff
              c7b8 002a  ld   $2a
              c7b9 0000  ld   $00
              c7ba 003e  ld   $3e
              c7bb 00a5  ld   $a5
              c7bc 000f  ld   $0f
              c7bd 0085  ld   $85
              c7be 003e  ld   $3e
              c7bf 00a5  ld   $a5
              c7c0 000f  ld   $0f
              c7c1 00c5  ld   $c5
              c7c2 003e  ld   $3e
              c7c3 00d0  ld   $d0
              c7c4 001b  ld   $1b
              c7c5 00a5  ld   $a5
              c7c6 000e  ld   $0e
              c7c7 0029  ld   $29
              c7c8 000f  ld   $0f
              c7c9 00d0  ld   $d0
              c7ca 00f4  ld   $f4
              c7cb 00a5  ld   $a5
              c7cc 000e  ld   $0e
              c7cd 0029  ld   $29
              c7ce 0010  ld   $10
              c7cf 00d0  ld   $d0
              c7d0 0003  ld   $03
              c7d1 00a9  ld   $a9
              c7d2 0020  ld   $20
              c7d3 002c  ld   $2c
              c7d4 00a9  ld   $a9
              c7d5 007f  ld   $7f
              c7d6 0000  ld   $00
              c7d7 0020  ld   $20
              c7d8 0032  ld   $32
              c7d9 002a  ld   $2a
              c7da 0020  ld   $20
              c7db 0000  ld   $00
              c7dc 002e  ld   $2e
              c7dd 004c  ld   $4c
              c7de 0004  ld   $04
              c7df 002a  ld   $2a
              c7e0 00c9  ld   $c9
              c7e1 00ff  ld   $ff
              c7e2 00f0  ld   $f0
              c7e3 00d9  ld   $d9
              c7e4 0048  ld   $48
              c7e5 00a9  ld   $a9
              c7e6 0020  ld   $20
              c7e7 0000  ld   $00
              c7e8 0020  ld   $20
              c7e9 0032  ld   $32
              c7ea 002a  ld   $2a
              c7eb 0068  ld   $68
              c7ec 0060  ld   $60
              c7ed 00a5  ld   $a5
              c7ee 0030  ld   $30
              c7ef 0038  ld   $38
              c7f0 00e9  ld   $e9
              c7f1 0006  ld   $06
              c7f2 00c9  ld   $c9
              c7f3 0060  ld   $60
              c7f4 0090  ld   $90
              c7f5 0002  ld   $02
              c7f6 0085  ld   $85
              c7f7 0030  ld   $30
              c7f8 0060  ld   $60
              c7f9 002b  ld   $2b
              c7fa 0000  ld   $00
              c7fb fe00  bra  ac          ;+-----------------------------------+
              c7fc fcfd  bra  $c7fd       ;|                                   |
              c7fd 1418  ld   $18,y       ;| Trampoline for page $c700 lookups |
              c7fe e006  jmp  y,$06       ;|                                   |
              c7ff c218  st   [$18]       ;+-----------------------------------+
              c800 0013  ld   $13
              c801 0085  ld   $85
              c802 0043  ld   $43
              c803 0048  ld   $48
              c804 0008  ld   $08
              c805 008a  ld   $8a
              c806 0048  ld   $48
              c807 0098  ld   $98
              c808 0048  ld   $48
              c809 00a5  ld   $a5
              c80a 0043  ld   $43
              c80b 0000  ld   $00
              c80c 0068  ld   $68
              c80d 00a8  ld   $a8
              c80e 0068  ld   $68
              c80f 00aa  ld   $aa
              c810 0028  ld   $28
              c811 0068  ld   $68
              c812 0018  ld   $18
              c813 0060  ld   $60
              c814 002c  ld   $2c
              c815 0000  ld   $00
              c816 0041  ld   $41
              c817 0024  ld   $24
              c818 0043  ld   $43
              c819 0050  ld   $50
              c81a 0018  ld   $18
              c81b 00a5  ld   $a5
              c81c 000f  ld   $0f
              c81d 00c9  ld   $c9
              c81e 00ff  ld   $ff
              c81f 0069  ld   $69
              c820 0000  ld   $00
              c821 00c9  ld   $c9
              c822 0060  ld   $60
              c823 00d0  ld   $d0
              c824 0002  ld   $02
              c825 00a9  ld   $a9
              c826 001f  ld   $1f
              c827 0090  ld   $90
              c828 0002  ld   $02
              c829 00e9  ld   $e9
              c82a 0020  ld   $20
              c82b 00c9  ld   $c9
              c82c 000a  ld   $0a
              c82d 00d0  ld   $d0
              c82e 0002  ld   $02
              c82f 00a9  ld   $a9
              c830 000d  ld   $0d
              c831 0018  ld   $18
              c832 0060  ld   $60
              c833 008a  ld   $8a
              c834 0048  ld   $48
              c835 0098  ld   $98
              c836 0048  ld   $48
              c837 0020  ld   $20
              c838 0000  ld   $00
              c839 002a  ld   $2a
              c83a 0020  ld   $20
              c83b 000a  ld   $0a
              c83c 002c  ld   $2c
              c83d 00c9  ld   $c9
              c83e 0007  ld   $07
              c83f 00d0  ld   $d0
              c840 0004  ld   $04
              c841 0000  ld   $00
              c842 004c  ld   $4c
              c843 0020  ld   $20
              c844 002c  ld   $2c
              c845 00c9  ld   $c9
              c846 000d  ld   $0d
              c847 0090  ld   $90
              c848 00ee  ld   $ee
              c849 00f0  ld   $f0
              c84a 0003  ld   $03
              c84b 0048  ld   $48
              c84c 0000  ld   $00
              c84d 0068  ld   $68
              c84e 0085  ld   $85
              c84f 003e  ld   $3e
              c850 0068  ld   $68
              c851 00a8  ld   $a8
              c852 0068  ld   $68
              c853 00aa  ld   $aa
              c854 00a5  ld   $a5
              c855 003e  ld   $3e
              c856 0018  ld   $18
              c857 0060  ld   $60
              c858 002d  ld   $2d
              c859 0000  ld   $00
              c85a 0018  ld   $18
              c85b 00a5  ld   $a5
              c85c 000f  ld   $0f
              c85d 00c9  ld   $c9
              c85e 0003  ld   $03
              c85f 00d0  ld   $d0
              c860 0003  ld   $03
              c861 004c  ld   $4c
              c862 0026  ld   $26
              c863 0009  ld   $09
              c864 00a5  ld   $a5
              c865 000e  ld   $0e
              c866 00cd  ld   $cd
              c867 0003  ld   $03
              c868 0002  ld   $02
              c869 0010  ld   $10
              c86a 0007  ld   $07
              c86b 0084  ld   $84
              c86c 003e  ld   $3e
              c86d 0020  ld   $20
              c86e 0000  ld   $00
              c86f 002e  ld   $2e
              c870 00a4  ld   $a4
              c871 003e  ld   $3e
              c872 0060  ld   $60
              c873 002e  ld   $2e
              c874 0000  ld   $00
              c875 0036  ld   $36
              c876 00a5  ld   $a5
              c877 000e  ld   $0e
              c878 00a8  ld   $a8
              c879 0038  ld   $38
              c87a 00ed  ld   $ed
              c87b 0003  ld   $03
              c87c 0002  ld   $02
              c87d 008c  ld   $8c
              c87e 0003  ld   $03
              c87f 0002  ld   $02
              c880 0018  ld   $18
              c881 006d  ld   $6d
              c882 0002  ld   $02
              c883 0002  ld   $02
              c884 008d  ld   $8d
              c885 0002  ld   $02
              c886 0002  ld   $02
              c887 00a9  ld   $a9
              c888 0000  ld   $00
              c889 006d  ld   $6d
              c88a 0001  ld   $01
              c88b 0002  ld   $02
              c88c 008d  ld   $8d
              c88d 0001  ld   $01
              c88e 0002  ld   $02
              c88f 00a9  ld   $a9
              c890 0000  ld   $00
              c891 006d  ld   $6d
              c892 0000  ld   $00
              c893 0002  ld   $02
              c894 008d  ld   $8d
              c895 0000  ld   $00
              c896 0002  ld   $02
              c897 00ad  ld   $ad
              c898 0001  ld   $01
              c899 0002  ld   $02
              c89a 00c9  ld   $c9
              c89b 001a  ld   $1a
              c89c 00ad  ld   $ad
              c89d 0000  ld   $00
              c89e 0002  ld   $02
              c89f 00e9  ld   $e9
              c8a0 004f  ld   $4f
              c8a1 0090  ld   $90
              c8a2 0008  ld   $08
              c8a3 00a9  ld   $a9
              c8a4 0000  ld   $00
              c8a5 008d  ld   $8d
              c8a6 0000  ld   $00
              c8a7 0002  ld   $02
              c8a8 008d  ld   $8d
              c8a9 0001  ld   $01
              c8aa 0002  ld   $02
              c8ab 0060  ld   $60
              c8ac 002f  ld   $2f
              c8ad 0000  ld   $00
              c8ae 002a  ld   $2a
              c8af 00c9  ld   $c9
              c8b0 005f  ld   $5f
              c8b1 00f0  ld   $f0
              c8b2 0005  ld   $05
              c8b3 00e0  ld   $e0
              c8b4 005a  ld   $5a
              c8b5 00b0  ld   $b0
              c8b6 0011  ld   $11
              c8b7 0060  ld   $60
              c8b8 008a  ld   $8a
              c8b9 0048  ld   $48
              c8ba 0020  ld   $20
              c8bb 0032  ld   $32
              c8bc 002a  ld   $2a
              c8bd 00a9  ld   $a9
              c8be 0020  ld   $20
              c8bf 0000  ld   $00
              c8c0 0020  ld   $20
              c8c1 0032  ld   $32
              c8c2 002a  ld   $2a
              c8c3 0068  ld   $68
              c8c4 00aa  ld   $aa
              c8c5 00f0  ld   $f0
              c8c6 0008  ld   $08
              c8c7 00ca  ld   $ca
              c8c8 0020  ld   $20
              c8c9 0032  ld   $32
              c8ca 002a  ld   $2a
              c8cb 0090  ld   $90
              c8cc 0003  ld   $03
              c8cd 00a9  ld   $a9
              c8ce 0000  ld   $00
              c8cf 0060  ld   $60
              c8d0 00a9  ld   $a9
              c8d1 003f  ld   $3f
              c8d2 0000  ld   $00
              c8d3 00a9  ld   $a9
              c8d4 000d  ld   $0d
              c8d5 0000  ld   $00
              c8d6 00a2  ld   $a2
              c8d7 0000  ld   $00
              c8d8 0060  ld   $60
              c8d9 0030  ld   $30
              c8da 0000  ld   $00
              c8db 0050  ld   $50
              c8dc 0008  ld   $08
              c8dd 0048  ld   $48
              c8de 00a0  ld   $a0
              c8df 0000  ld   $00
              c8e0 00b9  ld   $b9
              c8e1 002a  ld   $2a
              c8e2 0030  ld   $30
              c8e3 00c8  ld   $c8
              c8e4 0020  ld   $20
              c8e5 0000  ld   $00
              c8e6 002b  ld   $2b
              c8e7 00d0  ld   $d0
              c8e8 00f7  ld   $f7
              c8e9 00a9  ld   $a9
              c8ea 0005  ld   $05
              c8eb 00a0  ld   $a0
              c8ec 0024  ld   $24
              c8ed 0085  ld   $85
              c8ee 0034  ld   $34
              c8ef 0084  ld   $84
              c8f0 0035  ld   $35
              c8f1 00a9  ld   $a9
              c8f2 0000  ld   $00
              c8f3 0085  ld   $85
              c8f4 0036  ld   $36
              c8f5 00a9  ld   $a9
              c8f6 000a  ld   $0a
              c8f7 0085  ld   $85
              c8f8 0037  ld   $37
              c8f9 00a9  ld   $a9
              c8fa 00fe  ld   $fe
              c8fb fe00  bra  ac          ;+-----------------------------------+
              c8fc fcfd  bra  $c8fd       ;|                                   |
              c8fd 1418  ld   $18,y       ;| Trampoline for page $c800 lookups |
              c8fe e006  jmp  y,$06       ;|                                   |
              c8ff c218  st   [$18]       ;+-----------------------------------+
              c900 00a0  ld   $a0
              c901 0030  ld   $30
              c902 0085  ld   $85
              c903 0016  ld   $16
              c904 0084  ld   $84
              c905 0017  ld   $17
              c906 0068  ld   $68
              c907 0028  ld   $28
              c908 004c  ld   $4c
              c909 009c  ld   $9c
              c90a 0007  ld   $07
              c90b 000d  ld   $0d
              c90c 0053  ld   $53
              c90d 0045  ld   $45
              c90e 004e  ld   $4e
              c90f 0044  ld   $44
              c910 0049  ld   $49
              c911 004e  ld   $4e
              c912 0047  ld   $47
              c913 0020  ld   $20
              c914 0054  ld   $54
              c915 004f  ld   $4f
              c916 0020  ld   $20
              c917 0042  ld   $42
              c918 0041  ld   $41
              c919 0042  ld   $42
              c91a 0045  ld   $45
              c91b 004c  ld   $4c
              c91c 0046  ld   $46
              c91d 0049  ld   $49
              c91e 0053  ld   $53
              c91f 0048  ld   $48
              c920 000d  ld   $0d
              c921 0000  ld   $00
              c922 0021  ld   $21
              c923 0034  ld   $34
              c924 00ad  ld   $ad
              c925 00cf  ld   $cf
              c926 0032  ld   $32
              c927 0011  ld   $11
              c928 0000  ld   $00
              c929 0026  ld   $26
              c92a 002b  ld   $2b
              c92b 001a  ld   $1a
              c92c 00ee  ld   $ee
              c92d 0000  ld   $00
              c92e 00df  ld   $df
              c92f 0002  ld   $02
              c930 00ff  ld   $ff
              c931 0031  ld   $31
              c932 0000  ld   $00
              c933 005a  ld   $5a
              c934 00ee  ld   $ee
              c935 0003  ld   $03
              c936 00f0  ld   $f0
              c937 0034  ld   $34
              c938 001a  ld   $1a
              c939 0037  ld   $37
              c93a 008c  ld   $8c
              c93b 000a  ld   $0a
              c93c 0035  ld   $35
              c93d 0072  ld   $72
              c93e 0017  ld   $17
              c93f 0021  ld   $21
              c940 0034  ld   $34
              c941 00ad  ld   $ad
              c942 00e6  ld   $e6
              c943 0020  ld   $20
              c944 0035  ld   $35
              c945 0056  ld   $56
              c946 0017  ld   $17
              c947 0075  ld   $75
              c948 0011  ld   $11
              c949 0041  ld   $41
              c94a 0030  ld   $30
              c94b 00cf  ld   $cf
              c94c 0018  ld   $18
              c94d 001a  ld   $1a
              c94e 0036  ld   $36
              c94f 00e3  ld   $e3
              c950 0008  ld   $08
              c951 005e  ld   $5e
              c952 0036  ld   $36
              c953 0021  ld   $21
              c954 0034  ld   $34
              c955 00ad  ld   $ad
              c956 005e  ld   $5e
              c957 0037  ld   $37
              c958 0093  ld   $93
              c959 0034  ld   $34
              c95a 008c  ld   $8c
              c95b 000a  ld   $0a
              c95c 0035  ld   $35
              c95d 003f  ld   $3f
              c95e 002b  ld   $2b
              c95f 001a  ld   $1a
              c960 0036  ld   $36
              c961 0035  ld   $35
              c962 0072  ld   $72
              c963 004f  ld   $4f
              c964 0011  ld   $11
              c965 0005  ld   $05
              c966 0024  ld   $24
              c967 002b  ld   $2b
              c968 0034  ld   $34
              c969 002b  ld   $2b
              c96a 0024  ld   $24
              c96b 0059  ld   $59
              c96c 0001  ld   $01
              c96d 005e  ld   $5e
              c96e 0026  ld   $26
              c96f 001a  ld   $1a
              c970 0036  ld   $36
              c971 005e  ld   $5e
              c972 0027  ld   $27
              c973 0011  ld   $11
              c974 0006  ld   $06
              c975 000b  ld   $0b
              c976 002b  ld   $2b
              c977 0022  ld   $22
              c978 00b4  ld   $b4
              c979 00e6  ld   $e6
              c97a 0035  ld   $35
              c97b 003f  ld   $3f
              c97c 004b  ld   $4b
              c97d 0059  ld   $59
              c97e 0003  ld   $03
              c97f 005e  ld   $5e
              c980 000f  ld   $0f
              c981 0059  ld   $59
              c982 0000  ld   $00
              c983 005e  ld   $5e
              c984 0036  ld   $36
              c985 0011  ld   $11
              c986 000c  ld   $0c
              c987 000b  ld   $0b
              c988 002b  ld   $2b
              c989 0022  ld   $22
              c98a 00b4  ld   $b4
              c98b 00e6  ld   $e6
              c98c 0090  ld   $90
              c98d 00fe  ld   $fe
              c98e 0032  ld   $32
              c98f 0000  ld   $00
              c990 0025  ld   $25
              c991 00a0  ld   $a0
              c992 0000  ld   $00
              c993 00b9  ld   $b9
              c994 000e  ld   $0e
              c995 0032  ld   $32
              c996 00c8  ld   $c8
              c997 0020  ld   $20
              c998 0000  ld   $00
              c999 002b  ld   $2b
              c99a 00d0  ld   $d0
              c99b 00f7  ld   $f7
              c99c 004c  ld   $4c
              c99d 0026  ld   $26
              c99e 0009  ld   $09
              c99f 000d  ld   $0d
              c9a0 0055  ld   $55
              c9a1 0053  ld   $53
              c9a2 0045  ld   $45
              c9a3 0020  ld   $20
              c9a4 0042  ld   $42
              c9a5 0041  ld   $41
              c9a6 0042  ld   $42
              c9a7 0045  ld   $45
              c9a8 004c  ld   $4c
              c9a9 0046  ld   $46
              c9aa 0049  ld   $49
              c9ab 0053  ld   $53
              c9ac 0048  ld   $48
              c9ad 0020  ld   $20
              c9ae 0054  ld   $54
              c9af 004f  ld   $4f
              c9b0 0020  ld   $20
              c9b1 004c  ld   $4c
              c9b2 004f  ld   $4f
              c9b3 0041  ld   $41
              c9b4 0044  ld   $44
              c9b5 0000  ld   $00
              c9b6 0000  ld   $00
              c9b7 0000  ld   $00         ;End of Apps/MSBASIC/MSBASIC_v1.gt1, size 9742
                                          ;+-----------------------------------+
                                          ;| Apps/Horizon/Horizon_at67_v1.gt1  |
                                          ;+-----------------------------------+
              c9b8 dc4d  st   $4d,[y,x++] ;'M'
              c9b9 dc53  st   $53,[y,x++] ;'S'
              c9ba dc42  st   $42,[y,x++] ;'B'
              c9bb dc41  st   $41,[y,x++] ;'A'
              c9bc dc53  st   $53,[y,x++] ;'S'
              c9bd dc49  st   $49,[y,x++] ;'I'
              c9be dc43  st   $43,[y,x++] ;'C'
              c9bf dc00  st   $00,[y,x++] ;'\x00'
              c9c0 00aa  ld   $aa
              c9c1 c218  st   [$18]
              c9c2 00a3  ld   $a3
              c9c3 14e0  ld   $e0,y
              c9c4 e02e  jmp  y,$2e
              c9c5 c219  st   [$19]
Egg:          c9c6 0002  ld   $02
              c9c7 0000  ld   $00
              c9c8 00c0  ld   $c0
              c9c9 0011  ld   $11
              c9ca 00b4  ld   $b4
              c9cb 0026  ld   $26
              c9cc 002b  ld   $2b
              c9cd 00dc  ld   $dc
              c9ce 0011  ld   $11
              c9cf 00bd  ld   $bd
              c9d0 0026  ld   $26
              c9d1 002b  ld   $2b
              c9d2 00d0  ld   $d0
              c9d3 0011  ld   $11
              c9d4 00c6  ld   $c6
              c9d5 0026  ld   $26
              c9d6 002b  ld   $2b
              c9d7 00d2  ld   $d2
              c9d8 0011  ld   $11
              c9d9 00cf  ld   $cf
              c9da 0026  ld   $26
              c9db 002b  ld   $2b
              c9dc 00d4  ld   $d4
              c9dd 0011  ld   $11
              c9de 00d8  ld   $d8
              c9df 0026  ld   $26
              c9e0 002b  ld   $2b
              c9e1 00d6  ld   $d6
              c9e2 0011  ld   $11
              c9e3 00e1  ld   $e1
              c9e4 0026  ld   $26
              c9e5 002b  ld   $2b
              c9e6 00d8  ld   $d8
              c9e7 0011  ld   $11
              c9e8 00ea  ld   $ea
              c9e9 0026  ld   $26
              c9ea 002b  ld   $2b
              c9eb 00da  ld   $da
              c9ec 0011  ld   $11
              c9ed 0020  ld   $20
              c9ee 000f  ld   $0f
              c9ef 002b  ld   $2b
              c9f0 00a2  ld   $a2
              c9f1 0011  ld   $11
              c9f2 0001  ld   $01
              c9f3 0000  ld   $00
              c9f4 002b  ld   $2b
              c9f5 00ac  ld   $ac
              c9f6 0011  ld   $11
              c9f7 0000  ld   $00
              c9f8 00ff  ld   $ff
              c9f9 002b  ld   $2b
              c9fa 00ae  ld   $ae
              c9fb fe00  bra  ac          ;+-----------------------------------+
              c9fc fcfd  bra  $c9fd       ;|                                   |
              c9fd 1418  ld   $18,y       ;| Trampoline for page $c900 lookups |
              c9fe e006  jmp  y,$06       ;|                                   |
              c9ff c218  st   [$18]       ;+-----------------------------------+
              ca00 0011  ld   $11
              ca01 0000  ld   $00
              ca02 0000  ld   $00
              ca03 002b  ld   $2b
              ca04 00a6  ld   $a6
              ca05 0059  ld   $59
              ca06 0000  ld   $00
              ca07 005e  ld   $5e
              ca08 002c  ld   $2c
              ca09 0011  ld   $11
              ca0a 00a0  ld   $a0
              ca0b 0025  ld   $25
              ca0c 00cf  ld   $cf
              ca0d 0018  ld   $18
              ca0e 0011  ld   $11
              ca0f 00c3  ld   $c3
              ca10 0025  ld   $25
              ca11 00cf  ld   $cf
              ca12 0018  ld   $18
              ca13 0059  ld   $59
              ca14 0000  ld   $00
              ca15 002b  ld   $2b
              ca16 0030  ld   $30
              ca17 002b  ld   $2b
              ca18 0032  ld   $32
              ca19 002b  ld   $2b
              ca1a 0034  ld   $34
              ca1b 002b  ld   $2b
              ca1c 0036  ld   $36
              ca1d 002b  ld   $2b
              ca1e 0038  ld   $38
              ca1f 002b  ld   $2b
              ca20 003a  ld   $3a
              ca21 002b  ld   $2b
              ca22 003c  ld   $3c
              ca23 0059  ld   $59
              ca24 003f  ld   $3f
              ca25 002b  ld   $2b
              ca26 003e  ld   $3e
              ca27 0059  ld   $59
              ca28 0003  ld   $03
              ca29 002b  ld   $2b
              ca2a 0040  ld   $40
              ca2b 0059  ld   $59
              ca2c 0020  ld   $20
              ca2d 002b  ld   $2b
              ca2e 0042  ld   $42
              ca2f 0011  ld   $11
              ca30 00a0  ld   $a0
              ca31 0026  ld   $26
              ca32 002b  ld   $2b
              ca33 0084  ld   $84
              ca34 0059  ld   $59
              ca35 003f  ld   $3f
              ca36 00f3  ld   $f3
              ca37 0084  ld   $84
              ca38 0011  ld   $11
              ca39 00a2  ld   $a2
              ca3a 0026  ld   $26
              ca3b 002b  ld   $2b
              ca3c 0084  ld   $84
              ca3d 0059  ld   $59
              ca3e 002a  ld   $2a
              ca3f 00f3  ld   $f3
              ca40 0084  ld   $84
              ca41 0011  ld   $11
              ca42 00a4  ld   $a4
              ca43 0026  ld   $26
              ca44 002b  ld   $2b
              ca45 0084  ld   $84
              ca46 0059  ld   $59
              ca47 0015  ld   $15
              ca48 00f3  ld   $f3
              ca49 0084  ld   $84
              ca4a 0011  ld   $11
              ca4b 00a6  ld   $a6
              ca4c 0026  ld   $26
              ca4d 002b  ld   $2b
              ca4e 0084  ld   $84
              ca4f 0059  ld   $59
              ca50 0000  ld   $00
              ca51 00f3  ld   $f3
              ca52 0084  ld   $84
              ca53 0011  ld   $11
              ca54 00aa  ld   $aa
              ca55 0026  ld   $26
              ca56 002b  ld   $2b
              ca57 0084  ld   $84
              ca58 0059  ld   $59
              ca59 0003  ld   $03
              ca5a 00f3  ld   $f3
              ca5b 0084  ld   $84
              ca5c 0011  ld   $11
              ca5d 00ac  ld   $ac
              ca5e 0026  ld   $26
              ca5f 002b  ld   $2b
              ca60 0084  ld   $84
              ca61 0059  ld   $59
              ca62 0002  ld   $02
              ca63 00f3  ld   $f3
              ca64 0084  ld   $84
              ca65 0011  ld   $11
              ca66 00ae  ld   $ae
              ca67 0026  ld   $26
              ca68 002b  ld   $2b
              ca69 0084  ld   $84
              ca6a 0059  ld   $59
              ca6b 0001  ld   $01
              ca6c 00f3  ld   $f3
              ca6d 0084  ld   $84
              ca6e 0011  ld   $11
              ca6f 00b0  ld   $b0
              ca70 0026  ld   $26
              ca71 002b  ld   $2b
              ca72 0084  ld   $84
              ca73 0059  ld   $59
              ca74 0000  ld   $00
              ca75 00f3  ld   $f3
              ca76 0084  ld   $84
              ca77 0059  ld   $59
              ca78 0000  ld   $00
              ca79 002b  ld   $2b
              ca7a 0044  ld   $44
              ca7b 002b  ld   $2b
              ca7c 0046  ld   $46
              ca7d 0059  ld   $59
              ca7e 0036  ld   $36
              ca7f 002b  ld   $2b
              ca80 0048  ld   $48
              ca81 0059  ld   $59
              ca82 0077  ld   $77
              ca83 002b  ld   $2b
              ca84 0030  ld   $30
              ca85 0021  ld   $21
              ca86 0042  ld   $42
              ca87 002b  ld   $2b
              ca88 00b0  ld   $b0
              ca89 0011  ld   $11
              ca8a 00ff  ld   $ff
              ca8b 00ff  ld   $ff
              ca8c 002b  ld   $2b
              ca8d 00b2  ld   $b2
              ca8e 0002  ld   $02
              ca8f 00c0  ld   $c0
              ca90 0037  ld   $37
              ca91 0011  ld   $11
              ca92 00a0  ld   $a0
              ca93 0026  ld   $26
              ca94 0099  ld   $99
              ca95 0046  ld   $46
              ca96 0099  ld   $99
              ca97 0046  ld   $46
              ca98 00f6  ld   $f6
              ca99 002b  ld   $2b
              ca9a 003e  ld   $3e
              ca9b 0011  ld   $11
              ca9c 00aa  ld   $aa
              ca9d 0026  ld   $26
              ca9e 0099  ld   $99
              ca9f 0046  ld   $46
              caa0 0099  ld   $99
              caa1 0046  ld   $46
              caa2 00f6  ld   $f6
              caa3 002b  ld   $2b
              caa4 0040  ld   $40
              caa5 0021  ld   $21
              caa6 0044  ld   $44
              caa7 00e3  ld   $e3
              caa8 0001  ld   $01
              caa9 002b  ld   $2b
              caaa 0044  ld   $44
              caab 0021  ld   $21
              caac 0044  ld   $44
              caad 00b8  ld   $b8
              caae 0048  ld   $48
              caaf 0035  ld   $35
              cab0 003f  ld   $3f
              cab1 00e4  ld   $e4
              cab2 0011  ld   $11
              cab3 000d  ld   $0d
              cab4 0003  ld   $03
              cab5 00cf  ld   $cf
              cab6 0018  ld   $18
              cab7 0021  ld   $21
              cab8 0046  ld   $46
              cab9 00e3  ld   $e3
              caba 0001  ld   $01
              cabb 002b  ld   $2b
              cabc 0046  ld   $46
              cabd 0059  ld   $59
              cabe 0000  ld   $00
              cabf 002b  ld   $2b
              cac0 0044  ld   $44
              cac1 002b  ld   $2b
              cac2 00de  ld   $de
              cac3 0011  ld   $11
              cac4 0000  ld   $00
              cac5 0003  ld   $03
              cac6 00cf  ld   $cf
              cac7 0018  ld   $18
              cac8 0003  ld   $03
              cac9 0000  ld   $00
              caca 000d  ld   $0d
              cacb 0021  ld   $21
              cacc 00de  ld   $de
              cacd 0021  ld   $21
              cace 0048  ld   $48
              cacf 002b  ld   $2b
              cad0 0098  ld   $98
              cad1 0011  ld   $11
              cad2 00f3  ld   $f3
              cad3 0026  ld   $26
              cad4 00cf  ld   $cf
              cad5 0018  ld   $18
              cad6 002b  ld   $2b
              cad7 0048  ld   $48
              cad8 0003  ld   $03
              cad9 000d  ld   $0d
              cada 002c  ld   $2c
              cadb 0021  ld   $21
              cadc 0030  ld   $30
              cadd 002b  ld   $2b
              cade 003c  ld   $3c
              cadf 0011  ld   $11
              cae0 00a7  ld   $a7
              cae1 0004  ld   $04
              cae2 00cf  ld   $cf
              cae3 0018  ld   $18
              cae4 0021  ld   $21
              cae5 0030  ld   $30
              cae6 00b8  ld   $b8
              cae7 0042  ld   $42
              cae8 00e3  ld   $e3
              cae9 0028  ld   $28
              caea 002b  ld   $2b
              caeb 00c0  ld   $c0
              caec 0011  ld   $11
              caed 0090  ld   $90
              caee 0001  ld   $01
              caef 002b  ld   $2b
              caf0 0082  ld   $82
              caf1 0021  ld   $21
              caf2 00c0  ld   $c0
              caf3 002b  ld   $2b
              caf4 0084  ld   $84
              caf5 0011  ld   $11
              caf6 00a0  ld   $a0
              caf7 0024  ld   $24
              caf8 00cf  ld   $cf
              caf9 0018  ld   $18
              cafa 0082  ld   $82
              cafb fe00  bra  ac          ;+-----------------------------------+
              cafc fcfd  bra  $cafd       ;|                                   |
              cafd 1418  ld   $18,y       ;| Trampoline for page $ca00 lookups |
              cafe e006  jmp  y,$06       ;|                                   |
              caff c218  st   [$18]       ;+-----------------------------------+
              cb00 0001  ld   $01
              cb01 0035  ld   $35
              cb02 0072  ld   $72
              cb03 0037  ld   $37
              cb04 0021  ld   $21
              cb05 003e  ld   $3e
              cb06 00fc  ld   $fc
              cb07 0040  ld   $40
              cb08 002b  ld   $2b
              cb09 0036  ld   $36
              cb0a 0090  ld   $90
              cb0b 003b  ld   $3b
              cb0c 0003  ld   $03
              cb0d 0039  ld   $39
              cb0e 0004  ld   $04
              cb0f 0059  ld   $59
              cb10 0000  ld   $00
              cb11 002b  ld   $2b
              cb12 0036  ld   $36
              cb13 0003  ld   $03
              cb14 003d  ld   $3d
              cb15 0029  ld   $29
              cb16 0059  ld   $59
              cb17 0050  ld   $50
              cb18 002b  ld   $2b
              cb19 0082  ld   $82
              cb1a 0021  ld   $21
              cb1b 003a  ld   $3a
              cb1c 002b  ld   $2b
              cb1d 0084  ld   $84
              cb1e 0011  ld   $11
              cb1f 00a0  ld   $a0
              cb20 0024  ld   $24
              cb21 00cf  ld   $cf
              cb22 0018  ld   $18
              cb23 0021  ld   $21
              cb24 0092  ld   $92
              cb25 002b  ld   $2b
              cb26 0034  ld   $34
              cb27 0021  ld   $21
              cb28 0030  ld   $30
              cb29 00e3  ld   $e3
              cb2a 0008  ld   $08
              cb2b 002b  ld   $2b
              cb2c 00c0  ld   $c0
              cb2d 001a  ld   $1a
              cb2e 00c0  ld   $c0
              cb2f 005e  ld   $5e
              cb30 0039  ld   $39
              cb31 0059  ld   $59
              cb32 0000  ld   $00
              cb33 002b  ld   $2b
              cb34 0032  ld   $32
              cb35 0021  ld   $21
              cb36 003a  ld   $3a
              cb37 00e3  ld   $e3
              cb38 009f  ld   $9f
              cb39 002b  ld   $2b
              cb3a 00b4  ld   $b4
              cb3b 0059  ld   $59
              cb3c 0001  ld   $01
              cb3d 002b  ld   $2b
              cb3e 00b6  ld   $b6
              cb3f 0003  ld   $03
              cb40 0066  ld   $66
              cb41 000d  ld   $0d
              cb42 0021  ld   $21
              cb43 0034  ld   $34
              cb44 0035  ld   $35
              cb45 0072  ld   $72
              cb46 0071  ld   $71
              cb47 0021  ld   $21
              cb48 003a  ld   $3a
              cb49 00e6  ld   $e6
              cb4a 0001  ld   $01
              cb4b 002b  ld   $2b
              cb4c 0034  ld   $34
              cb4d 0090  ld   $90
              cb4e 0077  ld   $77
              cb4f 0003  ld   $03
              cb50 0073  ld   $73
              cb51 0006  ld   $06
              cb52 0021  ld   $21
              cb53 0034  ld   $34
              cb54 00e6  ld   $e6
              cb55 0001  ld   $01
              cb56 002b  ld   $2b
              cb57 0034  ld   $34
              cb58 0003  ld   $03
              cb59 0079  ld   $79
              cb5a 0011  ld   $11
              cb5b 0021  ld   $21
              cb5c 0034  ld   $34
              cb5d 0099  ld   $99
              cb5e 0034  ld   $34
              cb5f 00b8  ld   $b8
              cb60 003a  ld   $3a
              cb61 0035  ld   $35
              cb62 0050  ld   $50
              cb63 0088  ld   $88
              cb64 0021  ld   $21
              cb65 003e  ld   $3e
              cb66 00fc  ld   $fc
              cb67 0036  ld   $36
              cb68 002b  ld   $2b
              cb69 004a  ld   $4a
              cb6a 0090  ld   $90
              cb6b 008e  ld   $8e
              cb6c 0003  ld   $03
              cb6d 008a  ld   $8a
              cb6e 0006  ld   $06
              cb6f 0021  ld   $21
              cb70 0040  ld   $40
              cb71 00fc  ld   $fc
              cb72 0036  ld   $36
              cb73 002b  ld   $2b
              cb74 004a  ld   $4a
              cb75 0003  ld   $03
              cb76 0090  ld   $90
              cb77 004a  ld   $4a
              cb78 0021  ld   $21
              cb79 0038  ld   $38
              cb7a 0099  ld   $99
              cb7b 0032  ld   $32
              cb7c 002b  ld   $2b
              cb7d 00c0  ld   $c0
              cb7e 0021  ld   $21
              cb7f 004a  ld   $4a
              cb80 00f0  ld   $f0
              cb81 00c0  ld   $c0
              cb82 0021  ld   $21
              cb83 0032  ld   $32
              cb84 0099  ld   $99
              cb85 00b6  ld   $b6
              cb86 002b  ld   $2b
              cb87 0032  ld   $32
              cb88 00b8  ld   $b8
              cb89 00b4  ld   $b4
              cb8a 0035  ld   $35
              cb8b 004d  ld   $4d
              cb8c 00a8  ld   $a8
              cb8d 0011  ld   $11
              cb8e 0066  ld   $66
              cb8f 0003  ld   $03
              cb90 00cf  ld   $cf
              cb91 0018  ld   $18
              cb92 0021  ld   $21
              cb93 0030  ld   $30
              cb94 0099  ld   $99
              cb95 0030  ld   $30
              cb96 002b  ld   $2b
              cb97 00c0  ld   $c0
              cb98 0011  ld   $11
              cb99 00f9  ld   $f9
              cb9a 0001  ld   $01
              cb9b 002b  ld   $2b
              cb9c 0082  ld   $82
              cb9d 0021  ld   $21
              cb9e 00c0  ld   $c0
              cb9f 00f0  ld   $f0
              cba0 0082  ld   $82
              cba1 0021  ld   $21
              cba2 0030  ld   $30
              cba3 0099  ld   $99
              cba4 00b2  ld   $b2
              cba5 002b  ld   $2b
              cba6 0030  ld   $30
              cba7 00b8  ld   $b8
              cba8 00b0  ld   $b0
              cba9 0035  ld   $35
              cbaa 0050  ld   $50
              cbab 00c7  ld   $c7
              cbac 0011  ld   $11
              cbad 00c0  ld   $c0
              cbae 0002  ld   $02
              cbaf 00cf  ld   $cf
              cbb0 0018  ld   $18
              cbb1 0011  ld   $11
              cbb2 00f9  ld   $f9
              cbb3 0001  ld   $01
              cbb4 002b  ld   $2b
              cbb5 0082  ld   $82
              cbb6 0059  ld   $59
              cbb7 0000  ld   $00
              cbb8 00f0  ld   $f0
              cbb9 0082  ld   $82
              cbba 0059  ld   $59
              cbbb 0000  ld   $00
              cbbc 002b  ld   $2b
              cbbd 0032  ld   $32
              cbbe 0059  ld   $59
              cbbf 0008  ld   $08
              cbc0 002b  ld   $2b
              cbc1 004c  ld   $4c
              cbc2 0003  ld   $03
              cbc3 00da  ld   $da
              cbc4 001f  ld   $1f
              cbc5 0021  ld   $21
              cbc6 0032  ld   $32
              cbc7 0082  ld   $82
              cbc8 00ff  ld   $ff
              cbc9 002b  ld   $2b
              cbca 0034  ld   $34
              cbcb 0059  ld   $59
              cbcc 0000  ld   $00
              cbcd 002b  ld   $2b
              cbce 0036  ld   $36
              cbcf 0011  ld   $11
              cbd0 00f0  ld   $f0
              cbd1 0001  ld   $01
              cbd2 002b  ld   $2b
              cbd3 004e  ld   $4e
              cbd4 0021  ld   $21
              cbd5 0042  ld   $42
              cbd6 002b  ld   $2b
              cbd7 003c  ld   $3c
              cbd8 0011  ld   $11
              cbd9 00a7  ld   $a7
              cbda 0004  ld   $04
              cbdb 00cf  ld   $cf
              cbdc 0018  ld   $18
              cbdd 002b  ld   $2b
              cbde 00de  ld   $de
              cbdf 0011  ld   $11
              cbe0 0000  ld   $00
              cbe1 0004  ld   $04
              cbe2 00cf  ld   $cf
              cbe3 0018  ld   $18
              cbe4 0004  ld   $04
              cbe5 0000  ld   $00
              cbe6 000e  ld   $0e
              cbe7 0021  ld   $21
              cbe8 00de  ld   $de
              cbe9 0059  ld   $59
              cbea 0000  ld   $00
              cbeb 002b  ld   $2b
              cbec 0030  ld   $30
              cbed 0021  ld   $21
              cbee 003a  ld   $3a
              cbef 002b  ld   $2b
              cbf0 00b0  ld   $b0
              cbf1 0059  ld   $59
              cbf2 0001  ld   $01
              cbf3 002b  ld   $2b
              cbf4 00b2  ld   $b2
              cbf5 0004  ld   $04
              cbf6 000e  ld   $0e
              cbf7 002e  ld   $2e
              cbf8 0021  ld   $21
              cbf9 0036  ld   $36
              cbfa 0099  ld   $99
              cbfb fe00  bra  ac          ;+-----------------------------------+
              cbfc fcfd  bra  $cbfd       ;|                                   |
              cbfd 1418  ld   $18,y       ;| Trampoline for page $cb00 lookups |
              cbfe e006  jmp  y,$06       ;|                                   |
              cbff c218  st   [$18]       ;+-----------------------------------+
              cc00 0034  ld   $34
              cc01 002b  ld   $2b
              cc02 0036  ld   $36
              cc03 0021  ld   $21
              cc04 0030  ld   $30
              cc05 0099  ld   $99
              cc06 00b2  ld   $b2
              cc07 002b  ld   $2b
              cc08 0030  ld   $30
              cc09 00b8  ld   $b8
              cc0a 00b0  ld   $b0
              cc0b 0035  ld   $35
              cc0c 004d  ld   $4d
              cc0d 0022  ld   $22
              cc0e 0011  ld   $11
              cc0f 000e  ld   $0e
              cc10 0004  ld   $04
              cc11 00cf  ld   $cf
              cc12 0018  ld   $18
              cc13 0021  ld   $21
              cc14 0034  ld   $34
              cc15 0099  ld   $99
              cc16 0034  ld   $34
              cc17 002b  ld   $2b
              cc18 0034  ld   $34
              cc19 0011  ld   $11
              cc1a 0001  ld   $01
              cc1b 0001  ld   $01
              cc1c 0099  ld   $99
              cc1d 0042  ld   $42
              cc1e 0099  ld   $99
              cc1f 0042  ld   $42
              cc20 002b  ld   $2b
              cc21 004a  ld   $4a
              cc22 0059  ld   $59
              cc23 0001  ld   $01
              cc24 002b  ld   $2b
              cc25 0082  ld   $82
              cc26 0011  ld   $11
              cc27 00a0  ld   $a0
              cc28 0023  ld   $23
              cc29 00cf  ld   $cf
              cc2a 0018  ld   $18
              cc2b 0004  ld   $04
              cc2c 003c  ld   $3c
              cc2d 0035  ld   $35
              cc2e 001a  ld   $1a
              cc2f 0037  ld   $37
              cc30 00f0  ld   $f0
              cc31 004a  ld   $4a
              cc32 0021  ld   $21
              cc33 0036  ld   $36
              cc34 0082  ld   $82
              cc35 00ff  ld   $ff
              cc36 0099  ld   $99
              cc37 0034  ld   $34
              cc38 002b  ld   $2b
              cc39 0036  ld   $36
              cc3a 0021  ld   $21
              cc3b 004a  ld   $4a
              cc3c 00e3  ld   $e3
              cc3d 0004  ld   $04
              cc3e 002b  ld   $2b
              cc3f 004a  ld   $4a
              cc40 00b8  ld   $b8
              cc41 004e  ld   $4e
              cc42 0035  ld   $35
              cc43 0053  ld   $53
              cc44 0056  ld   $56
              cc45 0011  ld   $11
              cc46 003c  ld   $3c
              cc47 0004  ld   $04
              cc48 00cf  ld   $cf
              cc49 0018  ld   $18
              cc4a 0059  ld   $59
              cc4b 0011  ld   $11
              cc4c 00ad  ld   $ad
              cc4d 002b  ld   $2b
              cc4e 0082  ld   $82
              cc4f 0059  ld   $59
              cc50 0000  ld   $00
              cc51 002b  ld   $2b
              cc52 0084  ld   $84
              cc53 0011  ld   $11
              cc54 00bb  ld   $bb
              cc55 0023  ld   $23
              cc56 00cf  ld   $cf
              cc57 0018  ld   $18
              cc58 0021  ld   $21
              cc59 0032  ld   $32
              cc5a 0099  ld   $99
              cc5b 004c  ld   $4c
              cc5c 002b  ld   $2b
              cc5d 0032  ld   $32
              cc5e 0011  ld   $11
              cc5f 00da  ld   $da
              cc60 0003  ld   $03
              cc61 00cf  ld   $cf
              cc62 0018  ld   $18
              cc63 0004  ld   $04
              cc64 0071  ld   $71
              cc65 0010  ld   $10
              cc66 0075  ld   $75
              cc67 0021  ld   $21
              cc68 004c  ld   $4c
              cc69 00e3  ld   $e3
              cc6a 0001  ld   $01
              cc6b 002b  ld   $2b
              cc6c 004c  ld   $4c
              cc6d 00e6  ld   $e6
              cc6e 0020  ld   $20
              cc6f 0035  ld   $35
              cc70 0056  ld   $56
              cc71 007f  ld   $7f
              cc72 0059  ld   $59
              cc73 0020  ld   $20
              cc74 002b  ld   $2b
              cc75 004c  ld   $4c
              cc76 0004  ld   $04
              cc77 0081  ld   $81
              cc78 0002  ld   $02
              cc79 0063  ld   $63
              cc7a 00ff  ld   $ff
              cc7b 0004  ld   $04
              cc7c 0083  ld   $83
              cc7d 0014  ld   $14
              cc7e 0075  ld   $75
              cc7f 0021  ld   $21
              cc80 004c  ld   $4c
              cc81 00e6  ld   $e6
              cc82 0001  ld   $01
              cc83 002b  ld   $2b
              cc84 004c  ld   $4c
              cc85 0011  ld   $11
              cc86 00e0  ld   $e0
              cc87 00ff  ld   $ff
              cc88 00b8  ld   $b8
              cc89 004c  ld   $4c
              cc8a 0035  ld   $35
              cc8b 0050  ld   $50
              cc8c 0095  ld   $95
              cc8d 0011  ld   $11
              cc8e 00e0  ld   $e0
              cc8f 00ff  ld   $ff
              cc90 002b  ld   $2b
              cc91 004c  ld   $4c
              cc92 0004  ld   $04
              cc93 0097  ld   $97
              cc94 0002  ld   $02
              cc95 0063  ld   $63
              cc96 00ff  ld   $ff
              cc97 0004  ld   $04
              cc98 0099  ld   $99
              cc99 0007  ld   $07
              cc9a 0075  ld   $75
              cc9b 0059  ld   $59
              cc9c 0000  ld   $00
              cc9d 002b  ld   $2b
              cc9e 004c  ld   $4c
              cc9f 0063  ld   $63
              cca0 00ff  ld   $ff
              cca1 0004  ld   $04
              cca2 00a0  ld   $a0
              cca3 0007  ld   $07
              cca4 0075  ld   $75
              cca5 0059  ld   $59
              cca6 0000  ld   $00
              cca7 002b  ld   $2b
              cca8 004c  ld   $4c
              cca9 0063  ld   $63
              ccaa 00ff  ld   $ff
              ccab 0004  ld   $04
              ccac 00a7  ld   $a7
              ccad 0017  ld   $17
              ccae 0075  ld   $75
              ccaf 0011  ld   $11
              ccb0 00e9  ld   $e9
              ccb1 00ff  ld   $ff
              ccb2 0099  ld   $99
              ccb3 003c  ld   $3c
              ccb4 002b  ld   $2b
              ccb5 003a  ld   $3a
              ccb6 0021  ld   $21
              ccb7 003a  ld   $3a
              ccb8 00e3  ld   $e3
              ccb9 0001  ld   $01
              ccba 002b  ld   $2b
              ccbb 00c0  ld   $c0
              ccbc 0011  ld   $11
              ccbd 00fe  ld   $fe
              ccbe 00ff  ld   $ff
              ccbf 00f8  ld   $f8
              ccc0 00c0  ld   $c0
              ccc1 002b  ld   $2b
              ccc2 003a  ld   $3a
              ccc3 0063  ld   $63
              ccc4 00ff  ld   $ff
              ccc5 0004  ld   $04
              ccc6 00be  ld   $be
              ccc7 0002  ld   $02
              ccc8 0090  ld   $90
              ccc9 00bc  ld   $bc
              ccca 0022  ld   $22
              cccb 00a0  ld   $a0
              cccc 0008  ld   $08
              cccd 0071  ld   $71
              ccce 0004  ld   $04
              cccf 0083  ld   $83
              ccd0 0004  ld   $04
              ccd1 0099  ld   $99
              ccd2 0004  ld   $04
              ccd3 00a0  ld   $a0
              ccd4 0004  ld   $04
              ccd5 0022  ld   $22
              ccd6 00a8  ld   $a8
              ccd7 001f  ld   $1f
              ccd8 0075  ld   $75
              ccd9 0059  ld   $59
              ccda 0008  ld   $08
              ccdb 002b  ld   $2b
              ccdc 0098  ld   $98
              ccdd 0011  ld   $11
              ccde 0000  ld   $00
              ccdf 0001  ld   $01
              cce0 002b  ld   $2b
              cce1 009a  ld   $9a
              cce2 00cf  ld   $cf
              cce3 00dc  ld   $dc
              cce4 0021  ld   $21
              cce5 0098  ld   $98
              cce6 00f3  ld   $f3
              cce7 009a  ld   $9a
              cce8 0093  ld   $93
              cce9 009a  ld   $9a
              ccea 0093  ld   $93
              cceb 009a  ld   $9a
              ccec 0093  ld   $93
              cced 0098  ld   $98
              ccee 001a  ld   $1a
              ccef 0098  ld   $98
              ccf0 00e6  ld   $e6
              ccf1 0080  ld   $80
              ccf2 0035  ld   $35
              ccf3 0050  ld   $50
              ccf4 00b0  ld   $b0
              ccf5 0063  ld   $63
              ccf6 00ff  ld   $ff
              ccf7 0023  ld   $23
              ccf8 00a0  ld   $a0
              ccf9 001b  ld   $1b
              ccfa 0021  ld   $21
              ccfb fe00  bra  ac          ;+-----------------------------------+
              ccfc fcfd  bra  $ccfd       ;|                                   |
              ccfd 1418  ld   $18,y       ;| Trampoline for page $cc00 lookups |
              ccfe e006  jmp  y,$06       ;|                                   |
              ccff c218  st   [$18]       ;+-----------------------------------+
              cd00 0082  ld   $82
              cd01 00e6  ld   $e6
              cd02 0001  ld   $01
              cd03 002b  ld   $2b
              cd04 0082  ld   $82
              cd05 0035  ld   $35
              cd06 0053  ld   $53
              cd07 00a8  ld   $a8
              cd08 00ff  ld   $ff
              cd09 001a  ld   $1a
              cd0a 000e  ld   $0e
              cd0b 00b8  ld   $b8
              cd0c 00aa  ld   $aa
              cd0d 0035  ld   $35
              cd0e 003f  ld   $3f
              cd0f 00a8  ld   $a8
              cd10 001a  ld   $1a
              cd11 000e  ld   $0e
              cd12 002b  ld   $2b
              cd13 00aa  ld   $aa
              cd14 0075  ld   $75
              cd15 00cf  ld   $cf
              cd16 00dc  ld   $dc
              cd17 0063  ld   $63
              cd18 0090  ld   $90
              cd19 009e  ld   $9e
              cd1a 0023  ld   $23
              cd1b 00bb  ld   $bb
              cd1c 003a  ld   $3a
              cd1d 0075  ld   $75
              cd1e 0011  ld   $11
              cd1f 00f5  ld   $f5
              cd20 0023  ld   $23
              cd21 002b  ld   $2b
              cd22 0086  ld   $86
              cd23 002b  ld   $2b
              cd24 0092  ld   $92
              cd25 0011  ld   $11
              cd26 00a0  ld   $a0
              cd27 0022  ld   $22
              cd28 002b  ld   $2b
              cd29 0088  ld   $88
              cd2a 0021  ld   $21
              cd2b 0092  ld   $92
              cd2c 00f6  ld   $f6
              cd2d 002b  ld   $2b
              cd2e 0094  ld   $94
              cd2f 001a  ld   $1a
              cd30 0095  ld   $95
              cd31 0082  ld   $82
              cd32 0080  ld   $80
              cd33 0035  ld   $35
              cd34 003f  ld   $3f
              cd35 00db  ld   $db
              cd36 0021  ld   $21
              cd37 0084  ld   $84
              cd38 0035  ld   $35
              cd39 003f  ld   $3f
              cd3a 00d9  ld   $d9
              cd3b 00cf  ld   $cf
              cd3c 0084  ld   $84
              cd3d 0063  ld   $63
              cd3e 00ff  ld   $ff
              cd3f 0021  ld   $21
              cd40 0094  ld   $94
              cd41 00b8  ld   $b8
              cd42 0082  ld   $82
              cd43 0035  ld   $35
              cd44 003f  ld   $3f
              cd45 00e8  ld   $e8
              cd46 0093  ld   $93
              cd47 0092  ld   $92
              cd48 0093  ld   $93
              cd49 0092  ld   $92
              cd4a 0090  ld   $90
              cd4b 00c6  ld   $c6
              cd4c 0021  ld   $21
              cd4d 0092  ld   $92
              cd4e 00b8  ld   $b8
              cd4f 0086  ld   $86
              cd50 0099  ld   $99
              cd51 0088  ld   $88
              cd52 00f6  ld   $f6
              cd53 00cf  ld   $cf
              cd54 0018  ld   $18
              cd55 0063  ld   $63
              cd56 00ff  ld   $ff
              cd57 0023  ld   $23
              cd58 00f5  ld   $f5
              cd59 000a  ld   $0a
              cd5a 00fe  ld   $fe
              cd5b 0000  ld   $00
              cd5c 00fd  ld   $fd
              cd5d 0000  ld   $00
              cd5e 00bf  ld   $bf
              cd5f 0000  ld   $00
              cd60 007f  ld   $7f
              cd61 0000  ld   $00
              cd62 00ff  ld   $ff
              cd63 00ff  ld   $ff
              cd64 0024  ld   $24
              cd65 00a0  ld   $a0
              cd66 005a  ld   $5a
              cd67 0021  ld   $21
              cd68 0082  ld   $82
              cd69 00fc  ld   $fc
              cd6a 0084  ld   $84
              cd6b 002b  ld   $2b
              cd6c 0094  ld   $94
              cd6d 0021  ld   $21
              cd6e 0082  ld   $82
              cd6f 0035  ld   $35
              cd70 0053  ld   $53
              cd71 00af  ld   $af
              cd72 0059  ld   $59
              cd73 0000  ld   $00
              cd74 00b8  ld   $b8
              cd75 0082  ld   $82
              cd76 002b  ld   $2b
              cd77 0082  ld   $82
              cd78 0021  ld   $21
              cd79 0084  ld   $84
              cd7a 0035  ld   $35
              cd7b 0053  ld   $53
              cd7c 00ba  ld   $ba
              cd7d 0059  ld   $59
              cd7e 0000  ld   $00
              cd7f 00b8  ld   $b8
              cd80 0084  ld   $84
              cd81 002b  ld   $2b
              cd82 0084  ld   $84
              cd83 0059  ld   $59
              cd84 0000  ld   $00
              cd85 002b  ld   $2b
              cd86 0092  ld   $92
              cd87 002b  ld   $2b
              cd88 0096  ld   $96
              cd89 0021  ld   $21
              cd8a 0092  ld   $92
              cd8b 0099  ld   $99
              cd8c 0092  ld   $92
              cd8d 002b  ld   $2b
              cd8e 0092  ld   $92
              cd8f 0021  ld   $21
              cd90 0082  ld   $82
              cd91 0035  ld   $35
              cd92 0053  ld   $53
              cd93 00cd  ld   $cd
              cd94 0093  ld   $93
              cd95 0092  ld   $92
              cd96 0021  ld   $21
              cd97 0082  ld   $82
              cd98 0099  ld   $99
              cd99 0082  ld   $82
              cd9a 002b  ld   $2b
              cd9b 0082  ld   $82
              cd9c 0021  ld   $21
              cd9d 0092  ld   $92
              cd9e 00b8  ld   $b8
              cd9f 0084  ld   $84
              cda0 0035  ld   $35
              cda1 0050  ld   $50
              cda2 00de  ld   $de
              cda3 002b  ld   $2b
              cda4 0092  ld   $92
              cda5 0093  ld   $93
              cda6 0082  ld   $82
              cda7 0075  ld   $75
              cda8 00cf  ld   $cf
              cda9 00dc  ld   $dc
              cdaa 0063  ld   $63
              cdab 0021  ld   $21
              cdac 0096  ld   $96
              cdad 00e3  ld   $e3
              cdae 0001  ld   $01
              cdaf 0082  ld   $82
              cdb0 000f  ld   $0f
              cdb1 0035  ld   $35
              cdb2 0072  ld   $72
              cdb3 00be  ld   $be
              cdb4 0021  ld   $21
              cdb5 0094  ld   $94
              cdb6 0035  ld   $35
              cdb7 0053  ld   $53
              cdb8 00f5  ld   $f5
              cdb9 0059  ld   $59
              cdba 0000  ld   $00
              cdbb 00b8  ld   $b8
              cdbc 0082  ld   $82
              cdbd 00ff  ld   $ff
              cdbe 0021  ld   $21
              cdbf 0082  ld   $82
              cdc0 00ff  ld   $ff
              cdc1 0025  ld   $25
              cdc2 00a0  ld   $a0
              cdc3 0023  ld   $23
              cdc4 0075  ld   $75
              cdc5 0011  ld   $11
              cdc6 00a8  ld   $a8
              cdc7 0022  ld   $22
              cdc8 00cf  ld   $cf
              cdc9 0018  ld   $18
              cdca 0011  ld   $11
              cdcb 0002  ld   $02
              cdcc 0000  ld   $00
              cdcd 002b  ld   $2b
              cdce 00a4  ld   $a4
              cdcf 0011  ld   $11
              cdd0 00ff  ld   $ff
              cdd1 007f  ld   $7f
              cdd2 00f8  ld   $f8
              cdd3 00ac  ld   $ac
              cdd4 002b  ld   $2b
              cdd5 00ac  ld   $ac
              cdd6 001a  ld   $1a
              cdd7 00a2  ld   $a2
              cdd8 005e  ld   $5e
              cdd9 0024  ld   $24
              cdda 005e  ld   $5e
              cddb 0025  ld   $25
              cddc 005e  ld   $5e
              cddd 0026  ld   $26
              cdde 005e  ld   $5e
              cddf 0027  ld   $27
              cde0 0011  ld   $11
              cde1 00d4  ld   $d4
              cde2 0004  ld   $04
              cde3 002b  ld   $2b
              cde4 0022  ld   $22
              cde5 0063  ld   $63
              cde6 00ff  ld   $ff
              cde7 0025  ld   $25
              cde8 00c3  ld   $c3
              cde9 003a  ld   $3a
              cdea 0075  ld   $75
              cdeb 0011  ld   $11
              cdec 00a0  ld   $a0
              cded 0025  ld   $25
              cdee 00cf  ld   $cf
              cdef 0018  ld   $18
              cdf0 0011  ld   $11
              cdf1 0000  ld   $00
              cdf2 0008  ld   $08
              cdf3 002b  ld   $2b
              cdf4 0028  ld   $28
              cdf5 001a  ld   $1a
              cdf6 0029  ld   $29
              cdf7 005e  ld   $5e
              cdf8 0094  ld   $94
              cdf9 00cf  ld   $cf
              cdfa 00dc  ld   $dc
              cdfb fe00  bra  ac          ;+-----------------------------------+
              cdfc fcfd  bra  $cdfd       ;|                                   |
              cdfd 1418  ld   $18,y       ;| Trampoline for page $cd00 lookups |
              cdfe e006  jmp  y,$06       ;|                                   |
              cdff c218  st   [$18]       ;+-----------------------------------+
              ce00 001a  ld   $1a
              ce01 0094  ld   $94
              ce02 005e  ld   $5e
              ce03 0029  ld   $29
              ce04 00b4  ld   $b4
              ce05 00ff  ld   $ff
              ce06 0011  ld   $11
              ce07 0087  ld   $87
              ce08 0000  ld   $00
              ce09 00b8  ld   $b8
              ce0a 0094  ld   $94
              ce0b 005e  ld   $5e
              ce0c 0029  ld   $29
              ce0d 00b4  ld   $b4
              ce0e 00ff  ld   $ff
              ce0f 001a  ld   $1a
              ce10 0028  ld   $28
              ce11 00e3  ld   $e3
              ce12 0004  ld   $04
              ce13 005e  ld   $5e
              ce14 0028  ld   $28
              ce15 00e6  ld   $e6
              ce16 00a0  ld   $a0
              ce17 0035  ld   $35
              ce18 0050  ld   $50
              ce19 00d0  ld   $d0
              ce1a 0059  ld   $59
              ce1b 0000  ld   $00
              ce1c 005e  ld   $5e
              ce1d 0028  ld   $28
              ce1e 0093  ld   $93
              ce1f 0094  ld   $94
              ce20 001a  ld   $1a
              ce21 0094  ld   $94
              ce22 00e6  ld   $e6
              ce23 0044  ld   $44
              ce24 0035  ld   $35
              ce25 0050  ld   $50
              ce26 00d0  ld   $d0
              ce27 0063  ld   $63
              ce28 00ff  ld   $ff
              ce29 0026  ld   $26
              ce2a 00a0  ld   $a0
              ce2b 000a  ld   $0a
              ce2c 0000  ld   $00
              ce2d 0000  ld   $00
              ce2e 0000  ld   $00
              * 10 times
              ce36 0026  ld   $26
              ce37 00aa  ld   $aa
              ce38 000a  ld   $0a
              ce39 0000  ld   $00
              ce3a 0000  ld   $00
              ce3b 0000  ld   $00
              * 10 times
              ce43 0026  ld   $26
              ce44 00b4  ld   $b4
              ce45 0009  ld   $09
              ce46 0075  ld   $75
              ce47 0011  ld   $11
              ce48 00bc  ld   $bc
              ce49 0026  ld   $26
              ce4a 00cf  ld   $cf
              ce4b 0018  ld   $18
              ce4c 0063  ld   $63
              ce4d 00ff  ld   $ff
              ce4e 00ff  ld   $ff
              ce4f 0026  ld   $26
              ce50 00bd  ld   $bd
              ce51 0009  ld   $09
              ce52 0035  ld   $35
              ce53 003f  ld   $3f
              ce54 00c1  ld   $c1
              ce55 0059  ld   $59
              ce56 0000  ld   $00
              ce57 00ff  ld   $ff
              ce58 0059  ld   $59
              ce59 0001  ld   $01
              ce5a 00ff  ld   $ff
              ce5b 0026  ld   $26
              ce5c 00c6  ld   $c6
              ce5d 0009  ld   $09
              ce5e 0035  ld   $35
              ce5f 0072  ld   $72
              ce60 00ca  ld   $ca
              ce61 0059  ld   $59
              ce62 0000  ld   $00
              ce63 00ff  ld   $ff
              ce64 0059  ld   $59
              ce65 0001  ld   $01
              ce66 00ff  ld   $ff
              ce67 0026  ld   $26
              ce68 00cf  ld   $cf
              ce69 0009  ld   $09
              ce6a 0035  ld   $35
              ce6b 0056  ld   $56
              ce6c 00d3  ld   $d3
              ce6d 0059  ld   $59
              ce6e 0000  ld   $00
              ce6f 00ff  ld   $ff
              ce70 0059  ld   $59
              ce71 0001  ld   $01
              ce72 00ff  ld   $ff
              ce73 0026  ld   $26
              ce74 00d8  ld   $d8
              ce75 0009  ld   $09
              ce76 0035  ld   $35
              ce77 0053  ld   $53
              ce78 00dc  ld   $dc
              ce79 0059  ld   $59
              ce7a 0000  ld   $00
              ce7b 00ff  ld   $ff
              ce7c 0059  ld   $59
              ce7d 0001  ld   $01
              ce7e 00ff  ld   $ff
              ce7f 0026  ld   $26
              ce80 00e1  ld   $e1
              ce81 0009  ld   $09
              ce82 0035  ld   $35
              ce83 0050  ld   $50
              ce84 00e5  ld   $e5
              ce85 0059  ld   $59
              ce86 0000  ld   $00
              ce87 00ff  ld   $ff
              ce88 0059  ld   $59
              ce89 0001  ld   $01
              ce8a 00ff  ld   $ff
              ce8b 0026  ld   $26
              ce8c 00ea  ld   $ea
              ce8d 0009  ld   $09
              ce8e 0035  ld   $35
              ce8f 004d  ld   $4d
              ce90 00ee  ld   $ee
              ce91 0059  ld   $59
              ce92 0000  ld   $00
              ce93 00ff  ld   $ff
              ce94 0059  ld   $59
              ce95 0001  ld   $01
              ce96 00ff  ld   $ff
              ce97 0026  ld   $26
              ce98 00f3  ld   $f3
              ce99 000a  ld   $0a
              ce9a 0011  ld   $11
              ce9b 0000  ld   $00
              ce9c 0006  ld   $06
              ce9d 002b  ld   $2b
              ce9e 0022  ld   $22
              ce9f 0021  ld   $21
              cea0 0098  ld   $98
              cea1 00b4  ld   $b4
              cea2 00f6  ld   $f6
              cea3 00ff  ld   $ff
              cea4 0000  ld   $00
              cea5 0000  ld   $00         ;End of Apps/Horizon/Horizon_at67_v1.gt1, size 1248
                                          ;+-----------------------------------+
                                          ;| Apps/CardBoot/CardBoot.gt1        |
                                          ;+-----------------------------------+
              cea6 dc45  st   $45,[y,x++] ;'E'
              cea7 dc67  st   $67,[y,x++] ;'g'
              cea8 dc67  st   $67,[y,x++] ;'g'
              cea9 dc00  st   $00,[y,x++] ;'\x00'
              ceaa dc00  st   $00,[y,x++] ;'\x00'
              ceab dc00  st   $00,[y,x++] ;'\x00'
              ceac dc00  st   $00,[y,x++] ;'\x00'
              cead dc00  st   $00,[y,x++] ;'\x00'
              ceae 00c6  ld   $c6
              ceaf c218  st   [$18]
              ceb0 00c9  ld   $c9
              ceb1 14e0  ld   $e0,y
              ceb2 e02e  jmp  y,$2e
              ceb3 c219  st   [$19]
Boot:         ceb4 0002  ld   $02
              ceb5 0000  ld   $00
              ceb6 004c  ld   $4c
              ceb7 001a  ld   $1a
              ceb8 0021  ld   $21
              ceb9 00e6  ld   $e6
              ceba 0040  ld   $40
              cebb 0035  ld   $35
              cebc 0053  ld   $53
              cebd 000b  ld   $0b
              cebe 0021  ld   $21
              cebf 000e  ld   $0e
              cec0 00f3  ld   $f3
              cec1 0017  ld   $17
              cec2 0090  ld   $90
              cec3 0005  ld   $05
              cec4 0011  ld   $11
              cec5 0000  ld   $00
              cec6 007d  ld   $7d
              cec7 002b  ld   $2b
              cec8 0030  ld   $30
              cec9 0011  ld   $11
              ceca 00f9  ld   $f9
              cecb 0001  ld   $01
              cecc 002b  ld   $2b
              cecd 0032  ld   $32
              cece 0059  ld   $59
              cecf 0000  ld   $00
              ced0 0085  ld   $85
              ced1 00b1  ld   $b1
              ced2 0072  ld   $72
              ced3 0059  ld   $59
              ced4 0020  ld   $20
              ced5 00f0  ld   $f0
              ced6 0032  ld   $32
              ced7 0011  ld   $11
              ced8 00e8  ld   $e8
              ced9 0001  ld   $01
              ceda 002b  ld   $2b
              cedb 0034  ld   $34
              cedc 0059  ld   $59
              cedd 007b  ld   $7b
              cede 00f0  ld   $f0
              cedf 0034  ld   $34
              cee0 0021  ld   $21
              cee1 0034  ld   $34
              cee2 00e3  ld   $e3
              cee3 0002  ld   $02
              cee4 002b  ld   $2b
              cee5 0034  ld   $34
              cee6 0011  ld   $11
              cee7 00f0  ld   $f0
              cee8 0001  ld   $01
              cee9 00fc  ld   $fc
              ceea 0034  ld   $34
              ceeb 0035  ld   $35
              ceec 0072  ld   $72
              ceed 0023  ld   $23
              ceee 0011  ld   $11
              ceef 007c  ld   $7c
              cef0 0000  ld   $00
              cef1 005e  ld   $5e
              cef2 0027  ld   $27
              cef3 0059  ld   $59
              cef4 00ff  ld   $ff
              cef5 002b  ld   $2b
              cef6 0025  ld   $25
              cef7 0059  ld   $59
              cef8 0000  ld   $00
              cef9 005e  ld   $5e
              cefa 0024  ld   $24
              cefb fe00  bra  ac          ;+-----------------------------------+
              cefc fcfd  bra  $cefd       ;|                                   |
              cefd 1418  ld   $18,y       ;| Trampoline for page $ce00 lookups |
              cefe e006  jmp  y,$06       ;|                                   |
              ceff c218  st   [$18]       ;+-----------------------------------+
              cf00 00b4  ld   $b4
              cf01 00f3  ld   $f3
              cf02 0011  ld   $11
              cf03 00a0  ld   $a0
              cf04 0058  ld   $58
              cf05 002b  ld   $2b
              cf06 001a  ld   $1a
              cf07 00ff  ld   $ff
              cf08 0058  ld   $58
              cf09 00a0  ld   $a0
              cf0a 0042  ld   $42
              cf0b 00cd  ld   $cd
              cf0c 00c8  ld   $c8
              cf0d 0075  ld   $75
              cf0e 0059  ld   $59
              cf0f 0000  ld   $00
              cf10 002b  ld   $2b
              cf11 0036  ld   $36
              cf12 0059  ld   $59
              cf13 000a  ld   $0a
              cf14 002b  ld   $2b
              cf15 0034  ld   $34
              cf16 0085  ld   $85
              cf17 00bc  ld   $bc
              cf18 005d  ld   $5d
              cf19 0021  ld   $21
              cf1a 0034  ld   $34
              cf1b 00e6  ld   $e6
              cf1c 0001  ld   $01
              cf1d 0035  ld   $35
              cf1e 004d  ld   $4d
              cf1f 00a7  ld   $a7
              cf20 0085  ld   $85
              cf21 00a2  ld   $a2
              cf22 005d  ld   $5d
              cf23 00cd  ld   $cd
              cf24 00be  ld   $be
              cf25 0040  ld   $40
              cf26 0000  ld   $00
              cf27 0000  ld   $00
              cf28 0000  ld   $00
              cf29 0000  ld   $00
              cf2a 0095  ld   $95
              cf2b 0085  ld   $85
              cf2c 00a2  ld   $a2
              cf2d 005f  ld   $5f
              cf2e 0085  ld   $85
              cf2f 00da  ld   $da
              cf30 005f  ld   $5f
              cf31 008c  ld   $8c
              cf32 0001  ld   $01
              cf33 0063  ld   $63
              cf34 00ff  ld   $ff
              cf35 00cd  ld   $cd
              cf36 00dd  ld   $dd
              cf37 0075  ld   $75
              cf38 0085  ld   $85
              cf39 00a2  ld   $a2
              cf3a 0058  ld   $58
              cf3b 0035  ld   $35
              cf3c 003f  ld   $3f
              cf3d 00db  ld   $db
              cf3e 0085  ld   $85
              cf3f 00af  ld   $af
              cf40 005d  ld   $5d
              cf41 001a  ld   $1a
              cf42 000e  ld   $0e
              cf43 00e6  ld   $e6
              cf44 003c  ld   $3c
              cf45 0035  ld   $35
              cf46 0050  ld   $50
              cf47 00cb  ld   $cb
              cf48 0063  ld   $63
              cf49 00ff  ld   $ff
              cf4a 0093  ld   $93
              cf4b 001b  ld   $1b
              cf4c 00ff  ld   $ff
              cf4d 0059  ld   $59
              cf4e 00a0  ld   $a0
              cf4f 0044  ld   $44
              cf50 00cd  ld   $cd
              cf51 00df  ld   $df
              cf52 0075  ld   $75
              cf53 0085  ld   $85
              cf54 00a2  ld   $a2
              cf55 005d  ld   $5d
              cf56 00cd  ld   $cd
              cf57 00ac  ld   $ac
              cf58 0048  ld   $48
              cf59 0000  ld   $00
              cf5a 0000  ld   $00
              cf5b 0001  ld   $01
              cf5c 00aa  ld   $aa
              cf5d 0087  ld   $87
              cf5e 0085  ld   $85
              cf5f 00a2  ld   $a2
              cf60 005f  ld   $5f
              cf61 0085  ld   $85
              cf62 00da  ld   $da
              cf63 005f  ld   $5f
              cf64 008c  ld   $8c
              cf65 00ff  ld   $ff
              cf66 0035  ld   $35
              cf67 003f  ld   $3f
              cf68 00d9  ld   $d9
              cf69 0021  ld   $21
              cf6a 0038  ld   $38
              cf6b 0082  ld   $82
              cf6c 0004  ld   $04
              cf6d 0035  ld   $35
              cf6e 003f  ld   $3f
              cf6f 00c4  ld   $c4
              cf70 0059  ld   $59
              cf71 0001  ld   $01
              cf72 002b  ld   $2b
              cf73 0036  ld   $36
              cf74 0090  ld   $90
              cf75 00d9  ld   $d9
              cf76 0085  ld   $85
              cf77 00bc  ld   $bc
              cf78 005d  ld   $5d
              cf79 0085  ld   $85
              cf7a 00bc  ld   $bc
              cf7b 005d  ld   $5d
              cf7c 0085  ld   $85
              cf7d 00bc  ld   $bc
              cf7e 005d  ld   $5d
              cf7f 0085  ld   $85
              cf80 00bc  ld   $bc
              cf81 005d  ld   $5d
              cf82 008c  ld   $8c
              cf83 00aa  ld   $aa
              cf84 0035  ld   $35
              cf85 0072  ld   $72
              cf86 00d9  ld   $d9
              cf87 0059  ld   $59
              cf88 0002  ld   $02
              cf89 002b  ld   $2b
              cf8a 0036  ld   $36
              cf8b 0021  ld   $21
              cf8c 0038  ld   $38
              cf8d 0082  ld   $82
              cf8e 00fa  ld   $fa
              cf8f 0063  ld   $63
              cf90 00ff  ld   $ff
              cf91 0093  ld   $93
              cf92 001b  ld   $1b
              cf93 00ff  ld   $ff
              cf94 005a  ld   $5a
              cf95 00a0  ld   $a0
              cf96 0044  ld   $44
              cf97 00cd  ld   $cd
              cf98 00ca  ld   $ca
              cf99 0075  ld   $75
              cf9a 0085  ld   $85
              cf9b 00a2  ld   $a2
              cf9c 005d  ld   $5d
              cf9d 00cd  ld   $cd
              cf9e 00ac  ld   $ac
              cf9f 007a  ld   $7a
              cfa0 0000  ld   $00
              cfa1 0000  ld   $00
              cfa2 0000  ld   $00
              * 5 times
              cfa5 0085  ld   $85
              cfa6 00a2  ld   $a2
              cfa7 005f  ld   $5f
              cfa8 0085  ld   $85
              cfa9 00da  ld   $da
              cfaa 005f  ld   $5f
              cfab 0085  ld   $85
              cfac 00bc  ld   $bc
              cfad 005d  ld   $5d
              cfae 0082  ld   $82
              cfaf 0040  ld   $40
              cfb0 0035  ld   $35
              cfb1 003f  ld   $3f
              cfb2 00be  ld   $be
              cfb3 0059  ld   $59
              cfb4 0004  ld   $04
              cfb5 002b  ld   $2b
              cfb6 0036  ld   $36
              cfb7 0085  ld   $85
              cfb8 00bc  ld   $bc
              cfb9 005d  ld   $5d
              cfba 0085  ld   $85
              cfbb 00bc  ld   $bc
              cfbc 005d  ld   $5d
              cfbd 0021  ld   $21
              cfbe 0038  ld   $38
              cfbf 0082  ld   $82
              cfc0 00fe  ld   $fe
              cfc1 0063  ld   $63
              cfc2 00ff  ld   $ff
              cfc3 00cd  ld   $cd
              cfc4 00df  ld   $df
              cfc5 0075  ld   $75
              cfc6 00cd  ld   $cd
              cfc7 00d5  ld   $d5
              cfc8 0077  ld   $77
              cfc9 0000  ld   $00
              cfca 0000  ld   $00
              cfcb 0000  ld   $00
              * 5 times
              cfce 0085  ld   $85
              cfcf 00a2  ld   $a2
              cfd0 005f  ld   $5f
              cfd1 0085  ld   $85
              cfd2 00da  ld   $da
              cfd3 005f  ld   $5f
              cfd4 0082  ld   $82
              cfd5 00fe  ld   $fe
              cfd6 0063  ld   $63
              cfd7 00ff  ld   $ff
              cfd8 0093  ld   $93
              cfd9 001b  ld   $1b
              cfda 00ff  ld   $ff
              cfdb 005b  ld   $5b
              cfdc 00a0  ld   $a0
              cfdd 0055  ld   $55
              cfde 00cd  ld   $cd
              cfdf 00c4  ld   $c4
              cfe0 0075  ld   $75
              cfe1 0021  ld   $21
              cfe2 0036  ld   $36
              cfe3 008c  ld   $8c
              cfe4 0001  ld   $01
              cfe5 0035  ld   $35
              cfe6 0072  ld   $72
              cfe7 00b2  ld   $b2
              cfe8 00cd  ld   $cd
              cfe9 00b0  ld   $b0
              cfea 0069  ld   $69
              cfeb 0000  ld   $00
              cfec 0000  ld   $00
              cfed 0000  ld   $00
              * 5 times
              cff0 0090  ld   $90
              cff1 00ba  ld   $ba
              cff2 00cd  ld   $cd
              cff3 00ba  ld   $ba
              cff4 0069  ld   $69
              cff5 0040  ld   $40
              cff6 0000  ld   $00
              cff7 0000  ld   $00
              cff8 0000  ld   $00
              cff9 0000  ld   $00
              cffa 0085  ld   $85
              cffb fe00  bra  ac          ;+-----------------------------------+
              cffc fcfd  bra  $cffd       ;|                                   |
              cffd 1418  ld   $18,y       ;| Trampoline for page $cf00 lookups |
              cffe e006  jmp  y,$06       ;|                                   |
              cfff c218  st   [$18]       ;+-----------------------------------+
              d000 00a2  ld   $a2
              d001 005f  ld   $5f
              d002 0085  ld   $85
              d003 00da  ld   $da
              d004 005f  ld   $5f
              d005 0082  ld   $82
              d006 00fe  ld   $fe
              d007 0063  ld   $63
              d008 00ff  ld   $ff
              d009 00cd  ld   $cd
              d00a 00db  ld   $db
              d00b 0075  ld   $75
              d00c 0085  ld   $85
              d00d 00ce  ld   $ce
              d00e 005a  ld   $5a
              d00f 0085  ld   $85
              d010 00a2  ld   $a2
              d011 005b  ld   $5b
              d012 0021  ld   $21
              d013 0038  ld   $38
              d014 0035  ld   $35
              d015 003f  ld   $3f
              d016 00d9  ld   $d9
              d017 001a  ld   $1a
              d018 000e  ld   $0e
              d019 00e6  ld   $e6
              d01a 0078  ld   $78
              d01b 0035  ld   $35
              d01c 0050  ld   $50
              d01d 00c7  ld   $c7
              d01e 0063  ld   $63
              d01f 00ff  ld   $ff
              d020 00cd  ld   $cd
              d021 00f0  ld   $f0
              d022 0075  ld   $75
              d023 00cd  ld   $cd
              d024 00e6  ld   $e6
              d025 0050  ld   $50
              d026 0000  ld   $00
              d027 0000  ld   $00
              d028 0002  ld   $02
              d029 0000  ld   $00
              d02a 0000  ld   $00
              d02b 0085  ld   $85
              d02c 00a2  ld   $a2
              d02d 005f  ld   $5f
              d02e 0085  ld   $85
              d02f 00da  ld   $da
              d030 005f  ld   $5f
              d031 0082  ld   $82
              d032 00fe  ld   $fe
              d033 0063  ld   $63
              d034 00ff  ld   $ff
              d035 0093  ld   $93
              d036 001b  ld   $1b
              d037 00ff  ld   $ff
              d038 005c  ld   $5c
              d039 00a0  ld   $a0
              d03a 0041  ld   $41
              d03b 00cd  ld   $cd
              d03c 00dc  ld   $dc
              d03d 0075  ld   $75
              d03e 00cd  ld   $cd
              d03f 00a9  ld   $a9
              d040 0051  ld   $51
              d041 0000  ld   $00
              d042 0000  ld   $00
              d043 0000  ld   $00
              * 5 times
              d046 002b  ld   $2b
              d047 003a  ld   $3a
              d048 002b  ld   $2b
              d049 003c  ld   $3c
              d04a 001a  ld   $1a
              d04b 003f  ld   $3f
              d04c 0093  ld   $93
              d04d 003c  ld   $3c
              d04e 00f0  ld   $f0
              d04f 003c  ld   $3c
              d050 001a  ld   $1a
              d051 003e  ld   $3e
              d052 0093  ld   $93
              d053 003c  ld   $3c
              d054 00f0  ld   $f0
              d055 003c  ld   $3c
              d056 001a  ld   $1a
              d057 0041  ld   $41
              d058 0093  ld   $93
              d059 003c  ld   $3c
              d05a 00f0  ld   $f0
              d05b 003c  ld   $3c
              d05c 001a  ld   $1a
              d05d 0040  ld   $40
              d05e 0093  ld   $93
              d05f 003c  ld   $3c
              d060 00f0  ld   $f0
              d061 003c  ld   $3c
              d062 0021  ld   $21
              d063 003a  ld   $3a
              d064 0085  ld   $85
              d065 00a2  ld   $a2
              d066 005f  ld   $5f
              d067 0085  ld   $85
              d068 00da  ld   $da
              d069 005f  ld   $5f
              d06a 0082  ld   $82
              d06b 00fe  ld   $fe
              d06c 0035  ld   $35
              d06d 0072  ld   $72
              d06e 00da  ld   $da
              d06f 0085  ld   $85
              d070 00bc  ld   $bc
              d071 005d  ld   $5d
              d072 008c  ld   $8c
              d073 00ff  ld   $ff
              d074 0035  ld   $35
              d075 003f  ld   $3f
              d076 00d2  ld   $d2
              d077 0063  ld   $63
              d078 00ff  ld   $ff
              d079 0093  ld   $93
              d07a 001b  ld   $1b
              d07b 00ff  ld   $ff
              d07c 005d  ld   $5d
              d07d 00a0  ld   $a0
              d07e 0035  ld   $35
              d07f 00cd  ld   $cd
              d080 00ab  ld   $ab
              d081 0011  ld   $11
              d082 0009  ld   $09
              d083 000b  ld   $0b
              d084 002b  ld   $2b
              d085 0022  ld   $22
              d086 0011  ld   $11
              d087 0078  ld   $78
              d088 0080  ld   $80
              d089 00b4  ld   $b4
              d08a 00fa  ld   $fa
              d08b 00ff  ld   $ff
              d08c 00cd  ld   $cd
              d08d 00b8  ld   $b8
              d08e 0011  ld   $11
              d08f 0009  ld   $09
              d090 000b  ld   $0b
              d091 002b  ld   $2b
              d092 0022  ld   $22
              d093 0011  ld   $11
              d094 007c  ld   $7c
              d095 0080  ld   $80
              d096 00b4  ld   $b4
              d097 00fa  ld   $fa
              d098 00ff  ld   $ff
              d099 00cd  ld   $cd
              d09a 00d0  ld   $d0
              d09b 0059  ld   $59
              d09c 00ff  ld   $ff
              d09d 005e  ld   $5e
              d09e 002a  ld   $2a
              d09f 0059  ld   $59
              d0a0 002a  ld   $2a
              d0a1 002b  ld   $2b
              d0a2 0024  ld   $24
              d0a3 00e3  ld   $e3
              d0a4 0001  ld   $01
              d0a5 002b  ld   $2b
              d0a6 0026  ld   $26
              d0a7 0011  ld   $11
              d0a8 0015  ld   $15
              d0a9 000b  ld   $0b
              d0aa 002b  ld   $2b
              d0ab 0022  ld   $22
              d0ac 00b4  ld   $b4
              d0ad 00cb  ld   $cb
              d0ae 001a  ld   $1a
              d0af 002a  ld   $2a
              d0b0 00ff  ld   $ff
              d0b1 0093  ld   $93
              d0b2 001b  ld   $1b
              d0b3 00ff  ld   $ff
              d0b4 005e  ld   $5e
              d0b5 00a0  ld   $a0
              d0b6 0029  ld   $29
              d0b7 00cd  ld   $cd
              d0b8 00c4  ld   $c4
              d0b9 00fc  ld   $fc
              d0ba 0043  ld   $43
              d0bb 005e  ld   $5e
              d0bc 0043  ld   $43
              d0bd 0059  ld   $59
              d0be 0008  ld   $08
              d0bf 002b  ld   $2b
              d0c0 0034  ld   $34
              d0c1 0021  ld   $21
              d0c2 0042  ld   $42
              d0c3 0035  ld   $35
              d0c4 0053  ld   $53
              d0c5 00b8  ld   $b8
              d0c6 0099  ld   $99
              d0c7 0042  ld   $42
              d0c8 002b  ld   $2b
              d0c9 0042  ld   $42
              d0ca 0011  ld   $11
              d0cb 0021  ld   $21
              d0cc 0010  ld   $10
              d0cd 00fc  ld   $fc
              d0ce 0042  ld   $42
              d0cf 0090  ld   $90
              d0d0 00ba  ld   $ba
              d0d1 0099  ld   $99
              d0d2 0042  ld   $42
              d0d3 002b  ld   $2b
              d0d4 0042  ld   $42
              d0d5 0021  ld   $21
              d0d6 0034  ld   $34
              d0d7 00e6  ld   $e6
              d0d8 0001  ld   $01
              d0d9 0035  ld   $35
              d0da 004d  ld   $4d
              d0db 00a6  ld   $a6
              d0dc 00ff  ld   $ff
              d0dd 0093  ld   $93
              d0de 001b  ld   $1b
              d0df 00ff  ld   $ff
              d0e0 005f  ld   $5f
              d0e1 00a0  ld   $a0
              d0e2 0057  ld   $57
              d0e3 00cd  ld   $cd
              d0e4 00d6  ld   $d6
              d0e5 0075  ld   $75
              d0e6 002b  ld   $2b
              d0e7 003a  ld   $3a
              d0e8 0021  ld   $21
              d0e9 0044  ld   $44
              d0ea 002b  ld   $2b
              d0eb 003c  ld   $3c
              d0ec 0059  ld   $59
              d0ed 00ff  ld   $ff
              d0ee 00f0  ld   $f0
              d0ef 003c  ld   $3c
              d0f0 0093  ld   $93
              d0f1 003c  ld   $3c
              d0f2 00f0  ld   $f0
              d0f3 003c  ld   $3c
              d0f4 0093  ld   $93
              d0f5 003c  ld   $3c
              d0f6 0059  ld   $59
              d0f7 0006  ld   $06
              d0f8 002b  ld   $2b
              d0f9 0034  ld   $34
              d0fa 0021  ld   $21
              d0fb fe00  bra  ac          ;+-----------------------------------+
              d0fc fcfd  bra  $d0fd       ;|                                   |
              d0fd 1418  ld   $18,y       ;| Trampoline for page $d000 lookups |
              d0fe e006  jmp  y,$06       ;|                                   |
              d0ff c218  st   [$18]       ;+-----------------------------------+
              d100 003a  ld   $3a
              d101 00ad  ld   $ad
              d102 0093  ld   $93
              d103 003a  ld   $3a
              d104 00f0  ld   $f0
              d105 003c  ld   $3c
              d106 0093  ld   $93
              d107 003c  ld   $3c
              d108 0021  ld   $21
              d109 0034  ld   $34
              d10a 00e6  ld   $e6
              d10b 0001  ld   $01
              d10c 0035  ld   $35
              d10d 004d  ld   $4d
              d10e 00b3  ld   $b3
              d10f 0021  ld   $21
              d110 0044  ld   $44
              d111 002b  ld   $2b
              d112 0024  ld   $24
              d113 00e3  ld   $e3
              d114 0008  ld   $08
              d115 002b  ld   $2b
              d116 0026  ld   $26
              d117 0011  ld   $11
              d118 0015  ld   $15
              d119 000b  ld   $0b
              d11a 002b  ld   $2b
              d11b 0022  ld   $22
              d11c 00b4  ld   $b4
              d11d 00cb  ld   $cb
              d11e 0063  ld   $63
              d11f 00ff  ld   $ff
              d120 00cd  ld   $cd
              d121 00f2  ld   $f2
              d122 0075  ld   $75
              d123 0059  ld   $59
              d124 0008  ld   $08
              d125 002b  ld   $2b
              d126 0034  ld   $34
              d127 0085  ld   $85
              d128 00bc  ld   $bc
              d129 005d  ld   $5d
              d12a 0082  ld   $82
              d12b 0080  ld   $80
              d12c 0035  ld   $35
              d12d 003f  ld   $3f
              d12e 00ec  ld   $ec
              d12f 0021  ld   $21
              d130 0034  ld   $34
              d131 00e6  ld   $e6
              d132 0001  ld   $01
              d133 0035  ld   $35
              d134 004d  ld   $4d
              d135 00db  ld   $db
              d136 001a  ld   $1a
              d137 002a  ld   $2a
              d138 002b  ld   $2b
              d139 0038  ld   $38
              d13a 0063  ld   $63
              d13b 00ff  ld   $ff
              d13c 0093  ld   $93
              d13d 001b  ld   $1b
              d13e 00ff  ld   $ff
              d13f 0060  ld   $60
              d140 00a0  ld   $a0
              d141 004f  ld   $4f
              d142 00cd  ld   $cd
              d143 00c3  ld   $c3
              d144 0075  ld   $75
              d145 0085  ld   $85
              d146 00cc  ld   $cc
              d147 0058  ld   $58
              d148 0085  ld   $85
              d149 00a2  ld   $a2
              d14a 0059  ld   $59
              d14b 0085  ld   $85
              d14c 00c8  ld   $c8
              d14d 005b  ld   $5b
              d14e 0021  ld   $21
              d14f 0036  ld   $36
              d150 00e6  ld   $e6
              d151 0002  ld   $02
              d152 0035  ld   $35
              d153 0072  ld   $72
              d154 00b4  ld   $b4
              d155 0085  ld   $85
              d156 00a2  ld   $a2
              d157 005a  ld   $5a
              d158 0021  ld   $21
              d159 0036  ld   $36
              d15a 00e6  ld   $e6
              d15b 0002  ld   $02
              d15c 0035  ld   $35
              d15d 004d  ld   $4d
              d15e 00be  ld   $be
              d15f 0085  ld   $85
              d160 00df  ld   $df
              d161 005b  ld   $5b
              d162 0085  ld   $85
              d163 00af  ld   $af
              d164 005d  ld   $5d
              d165 0063  ld   $63
              d166 00ff  ld   $ff
              d167 00cd  ld   $cd
              d168 00ea  ld   $ea
              d169 0075  ld   $75
              d16a 0085  ld   $85
              d16b 00a2  ld   $a2
              d16c 0063  ld   $63
              d16d 00cd  ld   $cd
              d16e 00d3  ld   $d3
              d16f 0056  ld   $56
              d170 006f  ld   $6f
              d171 006c  ld   $6c
              d172 002e  ld   $2e
              d173 0049  ld   $49
              d174 0044  ld   $44
              d175 0020  ld   $20
              d176 0000  ld   $00
              d177 0085  ld   $85
              d178 00a2  ld   $a2
              d179 0069  ld   $69
              d17a 0059  ld   $59
              d17b 000b  ld   $0b
              d17c 0099  ld   $99
              d17d 0030  ld   $30
              d17e 00f6  ld   $f6
              d17f 002b  ld   $2b
              d180 0046  ld   $46
              d181 0085  ld   $85
              d182 00ce  ld   $ce
              d183 0067  ld   $67
              d184 0011  ld   $11
              d185 0000  ld   $00
              d186 0002  ld   $02
              d187 00fc  ld   $fc
              d188 0046  ld   $46
              d189 0085  ld   $85
              d18a 00bb  ld   $bb
              d18b 0068  ld   $68
              d18c 0063  ld   $63
              d18d 00ff  ld   $ff
              d18e 0093  ld   $93
              d18f 001b  ld   $1b
              d190 00ff  ld   $ff
              d191 0061  ld   $61
              d192 00a0  ld   $a0
              d193 005e  ld   $5e
              d194 00cd  ld   $cd
              d195 00ea  ld   $ea
              d196 0075  ld   $75
              d197 0059  ld   $59
              d198 0000  ld   $00
              d199 002b  ld   $2b
              d19a 0040  ld   $40
              d19b 002b  ld   $2b
              d19c 003e  ld   $3e
              d19d 0085  ld   $85
              d19e 00a2  ld   $a2
              d19f 0063  ld   $63
              d1a0 00cd  ld   $cd
              d1a1 00b1  ld   $b1
              d1a2 004d  ld   $4d
              d1a3 0042  ld   $42
              d1a4 0052  ld   $52
              d1a5 0020  ld   $20
              d1a6 0000  ld   $00
              d1a7 0085  ld   $85
              d1a8 00a2  ld   $a2
              d1a9 0069  ld   $69
              d1aa 0011  ld   $11
              d1ab 00fe  ld   $fe
              d1ac 0001  ld   $01
              d1ad 0099  ld   $99
              d1ae 0030  ld   $30
              d1af 00f6  ld   $f6
              d1b0 002b  ld   $2b
              d1b1 0046  ld   $46
              d1b2 0011  ld   $11
              d1b3 0055  ld   $55
              d1b4 00aa  ld   $aa
              d1b5 00fc  ld   $fc
              d1b6 0046  ld   $46
              d1b7 0035  ld   $35
              d1b8 0072  ld   $72
              d1b9 00e8  ld   $e8
              d1ba 0011  ld   $11
              d1bb 00c6  ld   $c6
              d1bc 0001  ld   $01
              d1bd 0099  ld   $99
              d1be 0030  ld   $30
              d1bf 00f6  ld   $f6
              d1c0 002b  ld   $2b
              d1c1 0040  ld   $40
              d1c2 0011  ld   $11
              d1c3 00c8  ld   $c8
              d1c4 0001  ld   $01
              d1c5 0099  ld   $99
              d1c6 0030  ld   $30
              d1c7 00f6  ld   $f6
              d1c8 002b  ld   $2b
              d1c9 003e  ld   $3e
              d1ca 0011  ld   $11
              d1cb 00c2  ld   $c2
              d1cc 0001  ld   $01
              d1cd 0099  ld   $99
              d1ce 0030  ld   $30
              d1cf 00ad  ld   $ad
              d1d0 002b  ld   $2b
              d1d1 0046  ld   $46
              d1d2 0085  ld   $85
              d1d3 00a2  ld   $a2
              d1d4 0068  ld   $68
              d1d5 0059  ld   $59
              d1d6 000b  ld   $0b
              d1d7 00fc  ld   $fc
              d1d8 0046  ld   $46
              d1d9 0035  ld   $35
              d1da 003f  ld   $3f
              d1db 00e8  ld   $e8
              d1dc 008c  ld   $8c
              d1dd 0007  ld   $07
              d1de 0063  ld   $63
              d1df 00ff  ld   $ff
              d1e0 00cd  ld   $cd
              d1e1 00f9  ld   $f9
              d1e2 002b  ld   $2b
              d1e3 0048  ld   $48
              d1e4 0099  ld   $99
              d1e5 0048  ld   $48
              d1e6 00e6  ld   $e6
              d1e7 0001  ld   $01
              d1e8 005e  ld   $5e
              d1e9 0019  ld   $19
              d1ea 0088  ld   $88
              d1eb 00ff  ld   $ff
              d1ec 002b  ld   $2b
              d1ed 004a  ld   $4a
              d1ee 00ff  ld   $ff
              d1ef 0093  ld   $93
              d1f0 001b  ld   $1b
              d1f1 00ff  ld   $ff
              d1f2 0062  ld   $62
              d1f3 00a0  ld   $a0
              d1f4 0060  ld   $60
              d1f5 00cd  ld   $cd
              d1f6 00fb  ld   $fb
              d1f7 0075  ld   $75
              d1f8 0059  ld   $59
              d1f9 000d  ld   $0d
              d1fa 0099  ld   $99
              d1fb fe00  bra  ac          ;+-----------------------------------+
              d1fc fcfd  bra  $d1fd       ;|                                   |
              d1fd 1418  ld   $18,y       ;| Trampoline for page $d100 lookups |
              d1fe e006  jmp  y,$06       ;|                                   |
              d1ff c218  st   [$18]       ;+-----------------------------------+
              d200 0030  ld   $30
              d201 00ad  ld   $ad
              d202 0085  ld   $85
              d203 00ee  ld   $ee
              d204 0061  ld   $61
              d205 0021  ld   $21
              d206 0040  ld   $40
              d207 002b  ld   $2b
              d208 004c  ld   $4c
              d209 0021  ld   $21
              d20a 003e  ld   $3e
              d20b 002b  ld   $2b
              d20c 004e  ld   $4e
              d20d 0059  ld   $59
              d20e 000e  ld   $0e
              d20f 0099  ld   $99
              d210 0030  ld   $30
              d211 00f6  ld   $f6
              d212 002b  ld   $2b
              d213 0050  ld   $50
              d214 0085  ld   $85
              d215 00d2  ld   $d2
              d216 0066  ld   $66
              d217 002b  ld   $2b
              d218 0052  ld   $52
              d219 0021  ld   $21
              d21a 004e  ld   $4e
              d21b 002b  ld   $2b
              d21c 0054  ld   $54
              d21d 0059  ld   $59
              d21e 0024  ld   $24
              d21f 0099  ld   $99
              d220 0030  ld   $30
              d221 00f6  ld   $f6
              d222 002b  ld   $2b
              d223 0050  ld   $50
              d224 0059  ld   $59
              d225 0026  ld   $26
              d226 0099  ld   $99
              d227 0030  ld   $30
              d228 00f6  ld   $f6
              d229 002b  ld   $2b
              d22a 0056  ld   $56
              d22b 0085  ld   $85
              d22c 00d6  ld   $d6
              d22d 0066  ld   $66
              d22e 0085  ld   $85
              d22f 00d6  ld   $d6
              d230 0066  ld   $66
              d231 0059  ld   $59
              d232 0000  ld   $00
              d233 00b8  ld   $b8
              d234 0048  ld   $48
              d235 00b8  ld   $b8
              d236 0048  ld   $48
              d237 002b  ld   $2b
              d238 0050  ld   $50
              d239 0011  ld   $11
              d23a 00ff  ld   $ff
              d23b 00ff  ld   $ff
              d23c 002b  ld   $2b
              d23d 0056  ld   $56
              d23e 0085  ld   $85
              d23f 00d6  ld   $d6
              d240 0066  ld   $66
              d241 002b  ld   $2b
              d242 0058  ld   $58
              d243 0021  ld   $21
              d244 004e  ld   $4e
              d245 002b  ld   $2b
              d246 005a  ld   $5a
              d247 0059  ld   $59
              d248 002c  ld   $2c
              d249 0099  ld   $99
              d24a 0030  ld   $30
              d24b 00f6  ld   $f6
              d24c 002b  ld   $2b
              d24d 005c  ld   $5c
              d24e 0059  ld   $59
              d24f 002e  ld   $2e
              d250 0099  ld   $99
              d251 0030  ld   $30
              d252 00f6  ld   $f6
              d253 002b  ld   $2b
              d254 005e  ld   $5e
              d255 0063  ld   $63
              d256 00ff  ld   $ff
              d257 0093  ld   $93
              d258 001b  ld   $1b
              d259 00ff  ld   $ff
              d25a 0063  ld   $63
              d25b 00a0  ld   $a0
              d25c 003e  ld   $3e
              d25d 00cd  ld   $cd
              d25e 00d9  ld   $d9
              d25f 0075  ld   $75
              d260 0085  ld   $85
              d261 00a2  ld   $a2
              d262 005d  ld   $5d
              d263 0021  ld   $21
              d264 0036  ld   $36
              d265 00e6  ld   $e6
              d266 0002  ld   $02
              d267 0035  ld   $35
              d268 004d  ld   $4d
              d269 00ae  ld   $ae
              d26a 0085  ld   $85
              d26b 00a2  ld   $a2
              d26c 0066  ld   $66
              d26d 0085  ld   $85
              d26e 00a2  ld   $a2
              d26f 005c  ld   $5c
              d270 001a  ld   $1a
              d271 002a  ld   $2a
              d272 008c  ld   $8c
              d273 00fe  ld   $fe
              d274 0035  ld   $35
              d275 0072  ld   $72
              d276 00d7  ld   $d7
              d277 0011  ld   $11
              d278 0015  ld   $15
              d279 000b  ld   $0b
              d27a 002b  ld   $2b
              d27b 0022  ld   $22
              d27c 0011  ld   $11
              d27d 0000  ld   $00
              d27e 007c  ld   $7c
              d27f 002b  ld   $2b
              d280 0024  ld   $24
              d281 0021  ld   $21
              d282 0030  ld   $30
              d283 002b  ld   $2b
              d284 0026  ld   $26
              d285 00b4  ld   $b4
              d286 00cb  ld   $cb
              d287 0093  ld   $93
              d288 0027  ld   $27
              d289 00b4  ld   $b4
              d28a 00cb  ld   $cb
              d28b 0085  ld   $85
              d28c 00bc  ld   $bc
              d28d 005d  ld   $5d
              d28e 0085  ld   $85
              d28f 00bc  ld   $bc
              d290 005d  ld   $5d
              d291 0085  ld   $85
              d292 00af  ld   $af
              d293 005d  ld   $5d
              d294 0059  ld   $59
              d295 0000  ld   $00
              d296 0063  ld   $63
              d297 00ff  ld   $ff
              d298 0093  ld   $93
              d299 001b  ld   $1b
              d29a 00ff  ld   $ff
              d29b 0064  ld   $64
              d29c 00a0  ld   $a0
              d29d 0050  ld   $50
              d29e 00cd  ld   $cd
              d29f 00eb  ld   $eb
              d2a0 0075  ld   $75
              d2a1 0021  ld   $21
              d2a2 0060  ld   $60
              d2a3 00fc  ld   $fc
              d2a4 0062  ld   $62
              d2a5 0035  ld   $35
              d2a6 0072  ld   $72
              d2a7 00ae  ld   $ae
              d2a8 0021  ld   $21
              d2a9 0064  ld   $64
              d2aa 00fc  ld   $fc
              d2ab 0066  ld   $66
              d2ac 001a  ld   $1a
              d2ad 0019  ld   $19
              d2ae 0035  ld   $35
              d2af 0072  ld   $72
              d2b0 00b5  ld   $b5
              d2b1 0021  ld   $21
              d2b2 0066  ld   $66
              d2b3 0090  ld   $90
              d2b4 00bb  ld   $bb
              d2b5 0021  ld   $21
              d2b6 0064  ld   $64
              d2b7 0088  ld   $88
              d2b8 00ff  ld   $ff
              d2b9 00e3  ld   $e3
              d2ba 0001  ld   $01
              d2bb 00b8  ld   $b8
              d2bc 0064  ld   $64
              d2bd 002b  ld   $2b
              d2be 0068  ld   $68
              d2bf 0035  ld   $35
              d2c0 003f  ld   $3f
              d2c1 00e5  ld   $e5
              d2c2 0011  ld   $11
              d2c3 00ff  ld   $ff
              d2c4 0001  ld   $01
              d2c5 00f8  ld   $f8
              d2c6 0064  ld   $64
              d2c7 0035  ld   $35
              d2c8 003f  ld   $3f
              d2c9 00ce  ld   $ce
              d2ca 0099  ld   $99
              d2cb 0030  ld   $30
              d2cc 0090  ld   $90
              d2cd 00e5  ld   $e5
              d2ce 0085  ld   $85
              d2cf 00a2  ld   $a2
              d2d0 0063  ld   $63
              d2d1 0035  ld   $35
              d2d2 0072  ld   $72
              d2d3 00db  ld   $db
              d2d4 0085  ld   $85
              d2d5 00a2  ld   $a2
              d2d6 0075  ld   $75
              d2d7 0021  ld   $21
              d2d8 0030  ld   $30
              d2d9 0090  ld   $90
              d2da 00e5  ld   $e5
              d2db 0021  ld   $21
              d2dc 0060  ld   $60
              d2dd 002b  ld   $2b
              d2de 0062  ld   $62
              d2df 0021  ld   $21
              d2e0 0064  ld   $64
              d2e1 002b  ld   $2b
              d2e2 0066  ld   $66
              d2e3 0059  ld   $59
              d2e4 0000  ld   $00
              d2e5 002b  ld   $2b
              d2e6 006a  ld   $6a
              d2e7 0021  ld   $21
              d2e8 0068  ld   $68
              d2e9 0063  ld   $63
              d2ea 00ff  ld   $ff
              d2eb 0093  ld   $93
              d2ec 001b  ld   $1b
              d2ed 00ff  ld   $ff
              d2ee 0065  ld   $65
              d2ef 00a0  ld   $a0
              d2f0 0060  ld   $60
              d2f1 00cd  ld   $cd
              d2f2 00cb  ld   $cb
              d2f3 0075  ld   $75
              d2f4 0059  ld   $59
              d2f5 0000  ld   $00
              d2f6 002b  ld   $2b
              d2f7 0064  ld   $64
              d2f8 002b  ld   $2b
              d2f9 0060  ld   $60
              d2fa 0021  ld   $21
              d2fb fe00  bra  ac          ;+-----------------------------------+
              d2fc fcfd  bra  $d2fd       ;|                                   |
              d2fd 1418  ld   $18,y       ;| Trampoline for page $d200 lookups |
              d2fe e006  jmp  y,$06       ;|                                   |
              d2ff c218  st   [$18]       ;+-----------------------------------+
              d300 003a  ld   $3a
              d301 00e3  ld   $e3
              d302 001c  ld   $1c
              d303 00f6  ld   $f6
              d304 002b  ld   $2b
              d305 0066  ld   $66
              d306 0021  ld   $21
              d307 003a  ld   $3a
              d308 00e3  ld   $e3
              d309 001e  ld   $1e
              d30a 00f6  ld   $f6
              d30b 002b  ld   $2b
              d30c 0062  ld   $62
              d30d 0021  ld   $21
              d30e 003a  ld   $3a
              d30f 00e3  ld   $e3
              d310 001a  ld   $1a
              d311 00f6  ld   $f6
              d312 002b  ld   $2b
              d313 004c  ld   $4c
              d314 0021  ld   $21
              d315 003a  ld   $3a
              d316 00e3  ld   $e3
              d317 0014  ld   $14
              d318 00f6  ld   $f6
              d319 002b  ld   $2b
              d31a 004e  ld   $4e
              d31b 0085  ld   $85
              d31c 00a2  ld   $a2
              d31d 0076  ld   $76
              d31e 0085  ld   $85
              d31f 00cf  ld   $cf
              d320 0065  ld   $65
              d321 0063  ld   $63
              d322 00ff  ld   $ff
              d323 00cd  ld   $cd
              d324 00fb  ld   $fb
              d325 0075  ld   $75
              d326 001a  ld   $1a
              d327 004f  ld   $4f
              d328 0082  ld   $82
              d329 000f  ld   $0f
              d32a 005e  ld   $5e
              d32b 004f  ld   $4f
              d32c 0059  ld   $59
              d32d 0001  ld   $01
              d32e 002b  ld   $2b
              d32f 0046  ld   $46
              d330 00b8  ld   $b8
              d331 0048  ld   $48
              d332 0035  ld   $35
              d333 0053  ld   $53
              d334 00e6  ld   $e6
              d335 0085  ld   $85
              d336 00c2  ld   $c2
              d337 0066  ld   $66
              d338 0021  ld   $21
              d339 0046  ld   $46
              d33a 0099  ld   $99
              d33b 0046  ld   $46
              d33c 0090  ld   $90
              d33d 00d6  ld   $d6
              d33e 0021  ld   $21
              d33f 0058  ld   $58
              d340 002b  ld   $2b
              d341 0050  ld   $50
              d342 0021  ld   $21
              d343 005a  ld   $5a
              d344 002b  ld   $2b
              d345 0056  ld   $56
              d346 0085  ld   $85
              d347 00d6  ld   $d6
              d348 0066  ld   $66
              d349 0021  ld   $21
              d34a 004c  ld   $4c
              d34b 002b  ld   $2b
              d34c 0040  ld   $40
              d34d 0021  ld   $21
              d34e 004e  ld   $4e
              d34f 002b  ld   $2b
              d350 003e  ld   $3e
              d351 0063  ld   $63
              d352 00ff  ld   $ff
              d353 0093  ld   $93
              d354 001b  ld   $1b
              d355 00ff  ld   $ff
              d356 0066  ld   $66
              d357 00a0  ld   $a0
              d358 005f  ld   $5f
              d359 00cd  ld   $cd
              d35a 00be  ld   $be
              d35b 0075  ld   $75
              d35c 0059  ld   $59
              d35d 0000  ld   $00
              d35e 005e  ld   $5e
              d35f 0050  ld   $50
              d360 001a  ld   $1a
              d361 004c  ld   $4c
              d362 005e  ld   $5e
              d363 0051  ld   $51
              d364 001a  ld   $1a
              d365 004d  ld   $4d
              d366 005e  ld   $5e
              d367 0056  ld   $56
              d368 001a  ld   $1a
              d369 004e  ld   $4e
              d36a 005e  ld   $5e
              d36b 0057  ld   $57
              d36c 0021  ld   $21
              d36d 0050  ld   $50
              d36e 002b  ld   $2b
              d36f 004c  ld   $4c
              d370 0021  ld   $21
              d371 0056  ld   $56
              d372 002b  ld   $2b
              d373 004e  ld   $4e
              d374 0085  ld   $85
              d375 00d6  ld   $d6
              d376 0066  ld   $66
              d377 0063  ld   $63
              d378 00ff  ld   $ff
              d379 00cd  ld   $cd
              d37a 00fa  ld   $fa
              d37b 0075  ld   $75
              d37c 0021  ld   $21
              d37d 004c  ld   $4c
              d37e 002b  ld   $2b
              d37f 0050  ld   $50
              d380 0021  ld   $21
              d381 004e  ld   $4e
              d382 002b  ld   $2b
              d383 0056  ld   $56
              d384 0085  ld   $85
              d385 00d6  ld   $d6
              d386 0066  ld   $66
              d387 0021  ld   $21
              d388 0056  ld   $56
              d389 0063  ld   $63
              d38a 00ff  ld   $ff
              d38b 0059  ld   $59
              d38c 0000  ld   $00
              d38d 002b  ld   $2b
              d38e 0056  ld   $56
              d38f 0021  ld   $21
              d390 004c  ld   $4c
              d391 00fc  ld   $fc
              d392 0050  ld   $50
              d393 0035  ld   $35
              d394 0053  ld   $53
              d395 00df  ld   $df
              d396 0021  ld   $21
              d397 004c  ld   $4c
              d398 0090  ld   $90
              d399 00e2  ld   $e2
              d39a 0011  ld   $11
              d39b 0000  ld   $00
              d39c 0080  ld   $80
              d39d 0099  ld   $99
              d39e 0050  ld   $50
              d39f 0035  ld   $35
              d3a0 0050  ld   $50
              d3a1 00ed  ld   $ed
              d3a2 0021  ld   $21
              d3a3 004e  ld   $4e
              d3a4 00e3  ld   $e3
              d3a5 0001  ld   $01
              d3a6 002b  ld   $2b
              d3a7 004e  ld   $4e
              d3a8 0021  ld   $21
              d3a9 004e  ld   $4e
              d3aa 0099  ld   $99
              d3ab 0056  ld   $56
              d3ac 002b  ld   $2b
              d3ad 004e  ld   $4e
              d3ae 0021  ld   $21
              d3af 004c  ld   $4c
              d3b0 0099  ld   $99
              d3b1 0050  ld   $50
              d3b2 002b  ld   $2b
              d3b3 004c  ld   $4c
              d3b4 00ff  ld   $ff
              d3b5 0093  ld   $93
              d3b6 001b  ld   $1b
              d3b7 00ff  ld   $ff
              d3b8 0067  ld   $67
              d3b9 00a0  ld   $a0
              d3ba 0040  ld   $40
              d3bb 00cd  ld   $cd
              d3bc 00b8  ld   $b8
              d3bd 0075  ld   $75
              d3be 00e6  ld   $e6
              d3bf 0020  ld   $20
              d3c0 0035  ld   $35
              d3c1 0053  ld   $53
              d3c2 00aa  ld   $aa
              d3c3 0059  ld   $59
              d3c4 007f  ld   $7f
              d3c5 0090  ld   $90
              d3c6 00b1  ld   $b1
              d3c7 00e6  ld   $e6
              d3c8 0060  ld   $60
              d3c9 0035  ld   $35
              d3ca 0050  ld   $50
              d3cb 00b1  ld   $b1
              d3cc 0059  ld   $59
              d3cd 007f  ld   $7f
              d3ce 0082  ld   $82
              d3cf 007f  ld   $7f
              d3d0 0085  ld   $85
              d3d1 00a2  ld   $a2
              d3d2 006e  ld   $6e
              d3d3 0063  ld   $63
              d3d4 00ff  ld   $ff
              d3d5 00cd  ld   $cd
              d3d6 00ca  ld   $ca
              d3d7 0075  ld   $75
              d3d8 0021  ld   $21
              d3d9 004e  ld   $4e
              d3da 0085  ld   $85
              d3db 00ce  ld   $ce
              d3dc 0067  ld   $67
              d3dd 0021  ld   $21
              d3de 004c  ld   $4c
              d3df 0085  ld   $85
              d3e0 00ce  ld   $ce
              d3e1 0067  ld   $67
              d3e2 0085  ld   $85
              d3e3 00a2  ld   $a2
              d3e4 006d  ld   $6d
              d3e5 0063  ld   $63
              d3e6 00ff  ld   $ff
              d3e7 00cd  ld   $cd
              d3e8 00db  ld   $db
              d3e9 0075  ld   $75
              d3ea 002b  ld   $2b
              d3eb 0046  ld   $46
              d3ec 001a  ld   $1a
              d3ed 0047  ld   $47
              d3ee 0085  ld   $85
              d3ef 00a2  ld   $a2
              d3f0 0068  ld   $68
              d3f1 001a  ld   $1a
              d3f2 0046  ld   $46
              d3f3 0085  ld   $85
              d3f4 00a2  ld   $a2
              d3f5 0068  ld   $68
              d3f6 0063  ld   $63
              d3f7 00ff  ld   $ff
              d3f8 0093  ld   $93
              d3f9 001b  ld   $1b
              d3fa 00ff  ld   $ff
              d3fb fe00  bra  ac          ;+-----------------------------------+
              d3fc fcfd  bra  $d3fd       ;|                                   |
              d3fd 1418  ld   $18,y       ;| Trampoline for page $d300 lookups |
              d3fe e006  jmp  y,$06       ;|                                   |
              d3ff c218  st   [$18]       ;+-----------------------------------+
              d400 0068  ld   $68
              d401 00a0  ld   $a0
              d402 0054  ld   $54
              d403 00cd  ld   $cd
              d404 00b7  ld   $b7
              d405 0075  ld   $75
              d406 00df  ld   $df
              d407 00fe  ld   $fe
              d408 00ec  ld   $ec
              d409 0000  ld   $00
              d40a 00e9  ld   $e9
              d40b 00e9  ld   $e9
              d40c 00e9  ld   $e9
              d40d 00e9  ld   $e9
              d40e 001a  ld   $1a
              d40f 0019  ld   $19
              d410 0085  ld   $85
              d411 00de  ld   $de
              d412 0068  ld   $68
              d413 00ee  ld   $ee
              d414 0000  ld   $00
              d415 00df  ld   $df
              d416 0002  ld   $02
              d417 0085  ld   $85
              d418 00de  ld   $de
              d419 0068  ld   $68
              d41a 0063  ld   $63
              d41b 00ff  ld   $ff
              d41c 00cd  ld   $cd
              d41d 00da  ld   $da
              d41e 0075  ld   $75
              d41f 002b  ld   $2b
              d420 0046  ld   $46
              d421 0035  ld   $35
              d422 0072  ld   $72
              d423 00c8  ld   $c8
              d424 00cd  ld   $cd
              d425 00c6  ld   $c6
              d426 0020  ld   $20
              d427 004f  ld   $4f
              d428 004b  ld   $4b
              d429 000a  ld   $0a
              d42a 0000  ld   $00
              d42b 0090  ld   $90
              d42c 00d3  ld   $d3
              d42d 00cd  ld   $cd
              d42e 00d3  ld   $d3
              d42f 0020  ld   $20
              d430 0046  ld   $46
              d431 0041  ld   $41
              d432 0049  ld   $49
              d433 004c  ld   $4c
              d434 0045  ld   $45
              d435 0044  ld   $44
              d436 000a  ld   $0a
              d437 0000  ld   $00
              d438 0085  ld   $85
              d439 00a2  ld   $a2
              d43a 0069  ld   $69
              d43b 0021  ld   $21
              d43c 0046  ld   $46
              d43d 0063  ld   $63
              d43e 00ff  ld   $ff
              d43f 00cd  ld   $cd
              d440 00ef  ld   $ef
              d441 0075  ld   $75
              d442 0082  ld   $82
              d443 000f  ld   $0f
              d444 00e6  ld   $e6
              d445 000a  ld   $0a
              d446 0035  ld   $35
              d447 0053  ld   $53
              d448 00e8  ld   $e8
              d449 00e3  ld   $e3
              d44a 003a  ld   $3a
              d44b 0090  ld   $90
              d44c 00ea  ld   $ea
              d44d 00e3  ld   $e3
              d44e 0041  ld   $41
              d44f 0085  ld   $85
              d450 00a2  ld   $a2
              d451 006e  ld   $6e
              d452 0063  ld   $63
              d453 00ff  ld   $ff
              d454 0093  ld   $93
              d455 001b  ld   $1b
              d456 00ff  ld   $ff
              d457 0069  ld   $69
              d458 00a0  ld   $a0
              d459 004f  ld   $4f
              d45a 00cd  ld   $cd
              d45b 00be  ld   $be
              d45c 0075  ld   $75
              d45d 002b  ld   $2b
              d45e 003c  ld   $3c
              d45f 0021  ld   $21
              d460 003c  ld   $3c
              d461 00ad  ld   $ad
              d462 0035  ld   $35
              d463 003f  ld   $3f
              d464 00bc  ld   $bc
              d465 008c  ld   $8c
              d466 000a  ld   $0a
              d467 0035  ld   $35
              d468 003f  ld   $3f
              d469 00b5  ld   $b5
              d46a 008c  ld   $8c
              d46b 000a  ld   $0a
              d46c 0085  ld   $85
              d46d 00a2  ld   $a2
              d46e 006e  ld   $6e
              d46f 0090  ld   $90
              d470 00b8  ld   $b8
              d471 0085  ld   $85
              d472 00a2  ld   $a2
              d473 006d  ld   $6d
              d474 0093  ld   $93
              d475 003c  ld   $3c
              d476 0090  ld   $90
              d477 00a3  ld   $a3
              d478 0063  ld   $63
              d479 00ff  ld   $ff
              d47a 00cd  ld   $cd
              d47b 00ea  ld   $ea
              d47c 0075  ld   $75
              d47d 00cd  ld   $cd
              d47e 00cb  ld   $cb
              d47f 0056  ld   $56
              d480 006f  ld   $6f
              d481 006c  ld   $6c
              d482 0075  ld   $75
              d483 006d  ld   $6d
              d484 0065  ld   $65
              d485 0020  ld   $20
              d486 0000  ld   $00
              d487 0085  ld   $85
              d488 00a2  ld   $a2
              d489 0069  ld   $69
              d48a 0021  ld   $21
              d48b 003a  ld   $3a
              d48c 002b  ld   $2b
              d48d 003c  ld   $3c
              d48e 0059  ld   $59
              d48f 000b  ld   $0b
              d490 002b  ld   $2b
              d491 0046  ld   $46
              d492 0021  ld   $21
              d493 003c  ld   $3c
              d494 00ad  ld   $ad
              d495 0093  ld   $93
              d496 003c  ld   $3c
              d497 0085  ld   $85
              d498 00a2  ld   $a2
              d499 0067  ld   $67
              d49a 0021  ld   $21
              d49b 0046  ld   $46
              d49c 00e6  ld   $e6
              d49d 0001  ld   $01
              d49e 0035  ld   $35
              d49f 004d  ld   $4d
              d4a0 00d4  ld   $d4
              d4a1 0085  ld   $85
              d4a2 00a2  ld   $a2
              d4a3 006d  ld   $6d
              d4a4 0063  ld   $63
              d4a5 00ff  ld   $ff
              d4a6 0093  ld   $93
              d4a7 001b  ld   $1b
              d4a8 00ff  ld   $ff
              d4a9 006a  ld   $6a
              d4aa 00a0  ld   $a0
              d4ab 0050  ld   $50
              d4ac 00cd  ld   $cd
              d4ad 00b5  ld   $b5
              d4ae 0075  ld   $75
              d4af 002b  ld   $2b
              d4b0 006c  ld   $6c
              d4b1 0059  ld   $59
              d4b2 0030  ld   $30
              d4b3 002b  ld   $2b
              d4b4 0046  ld   $46
              d4b5 0059  ld   $59
              d4b6 000a  ld   $0a
              d4b7 0085  ld   $85
              d4b8 00a2  ld   $a2
              d4b9 006c  ld   $6c
              d4ba 0021  ld   $21
              d4bb 006c  ld   $6c
              d4bc 00e3  ld   $e3
              d4bd 0030  ld   $30
              d4be 0085  ld   $85
              d4bf 00a2  ld   $a2
              d4c0 006e  ld   $6e
              d4c1 0063  ld   $63
              d4c2 00ff  ld   $ff
              d4c3 00cd  ld   $cd
              d4c4 00eb  ld   $eb
              d4c5 0075  ld   $75
              d4c6 0011  ld   $11
              d4c7 0000  ld   $00
              d4c8 0006  ld   $06
              d4c9 002b  ld   $2b
              d4ca 0022  ld   $22
              d4cb 0021  ld   $21
              d4cc 003a  ld   $3a
              d4cd 00e3  ld   $e3
              d4ce 0011  ld   $11
              d4cf 00ad  ld   $ad
              d4d0 00b4  ld   $b4
              d4d1 00f6  ld   $f6
              d4d2 00e6  ld   $e6
              d4d3 0014  ld   $14
              d4d4 0035  ld   $35
              d4d5 0053  ld   $53
              d4d6 00cb  ld   $cb
              d4d7 00e3  ld   $e3
              d4d8 0064  ld   $64
              d4d9 0085  ld   $85
              d4da 00a2  ld   $a2
              d4db 006a  ld   $6a
              d4dc 0011  ld   $11
              d4dd 006d  ld   $6d
              d4de 0006  ld   $06
              d4df 002b  ld   $2b
              d4e0 0022  ld   $22
              d4e1 0021  ld   $21
              d4e2 003a  ld   $3a
              d4e3 00e3  ld   $e3
              d4e4 0010  ld   $10
              d4e5 00f6  ld   $f6
              d4e6 00b4  ld   $b4
              d4e7 00f5  ld   $f5
              d4e8 0082  ld   $82
              d4e9 000f  ld   $0f
              d4ea 0085  ld   $85
              d4eb 00a2  ld   $a2
              d4ec 006a  ld   $6a
              d4ed 0021  ld   $21
              d4ee 003a  ld   $3a
              d4ef 00e3  ld   $e3
              d4f0 0010  ld   $10
              d4f1 00ad  ld   $ad
              d4f2 0082  ld   $82
              d4f3 001f  ld   $1f
              d4f4 0085  ld   $85
              d4f5 00a2  ld   $a2
              d4f6 006a  ld   $6a
              d4f7 0063  ld   $63
              d4f8 00ff  ld   $ff
              d4f9 0093  ld   $93
              d4fa 001b  ld   $1b
              d4fb fe00  bra  ac          ;+-----------------------------------+
              d4fc fcfd  bra  $d4fd       ;|                                   |
              d4fd 1418  ld   $18,y       ;| Trampoline for page $d400 lookups |
              d4fe e006  jmp  y,$06       ;|                                   |
              d4ff c218  st   [$18]       ;+-----------------------------------+
              d500 00ff  ld   $ff
              d501 006b  ld   $6b
              d502 00a0  ld   $a0
              d503 0055  ld   $55
              d504 00cd  ld   $cd
              d505 00bb  ld   $bb
              d506 0075  ld   $75
              d507 0085  ld   $85
              d508 00b9  ld   $b9
              d509 006a  ld   $6a
              d50a 0059  ld   $59
              d50b 0004  ld   $04
              d50c 0099  ld   $99
              d50d 006e  ld   $6e
              d50e 002b  ld   $2b
              d50f 006e  ld   $6e
              d510 0085  ld   $85
              d511 00a2  ld   $a2
              d512 0070  ld   $70
              d513 0059  ld   $59
              d514 0004  ld   $04
              d515 0099  ld   $99
              d516 006e  ld   $6e
              d517 002b  ld   $2b
              d518 006e  ld   $6e
              d519 0085  ld   $85
              d51a 00bf  ld   $bf
              d51b 006b  ld   $6b
              d51c 0085  ld   $85
              d51d 00a2  ld   $a2
              d51e 006d  ld   $6d
              d51f 0063  ld   $63
              d520 00ff  ld   $ff
              d521 00cd  ld   $cd
              d522 00f0  ld   $f0
              d523 0075  ld   $75
              d524 0021  ld   $21
              d525 003a  ld   $3a
              d526 002b  ld   $2b
              d527 003c  ld   $3c
              d528 0059  ld   $59
              d529 000b  ld   $0b
              d52a 002b  ld   $2b
              d52b 0046  ld   $46
              d52c 008c  ld   $8c
              d52d 0003  ld   $03
              d52e 0035  ld   $35
              d52f 0072  ld   $72
              d530 00d8  ld   $d8
              d531 0021  ld   $21
              d532 003c  ld   $3c
              d533 00ad  ld   $ad
              d534 008c  ld   $8c
              d535 0020  ld   $20
              d536 0035  ld   $35
              d537 003f  ld   $3f
              d538 00d8  ld   $d8
              d539 0059  ld   $59
              d53a 002e  ld   $2e
              d53b 0085  ld   $85
              d53c 00a2  ld   $a2
              d53d 006e  ld   $6e
              d53e 0021  ld   $21
              d53f 003c  ld   $3c
              d540 00ad  ld   $ad
              d541 0093  ld   $93
              d542 003c  ld   $3c
              d543 008c  ld   $8c
              d544 0020  ld   $20
              d545 0035  ld   $35
              d546 003f  ld   $3f
              d547 00e7  ld   $e7
              d548 008c  ld   $8c
              d549 0020  ld   $20
              d54a 0085  ld   $85
              d54b 00a2  ld   $a2
              d54c 0067  ld   $67
              d54d 0021  ld   $21
              d54e 0046  ld   $46
              d54f 00e6  ld   $e6
              d550 0001  ld   $01
              d551 0035  ld   $35
              d552 004d  ld   $4d
              d553 00c4  ld   $c4
              d554 0063  ld   $63
              d555 00ff  ld   $ff
              d556 0093  ld   $93
              d557 001b  ld   $1b
              d558 00ff  ld   $ff
              d559 006c  ld   $6c
              d55a 00a0  ld   $a0
              d55b 002c  ld   $2c
              d55c 00cd  ld   $cd
              d55d 00c7  ld   $c7
              d55e 0075  ld   $75
              d55f 002b  ld   $2b
              d560 0034  ld   $34
              d561 0021  ld   $21
              d562 006c  ld   $6c
              d563 00b8  ld   $b8
              d564 0034  ld   $34
              d565 0035  ld   $35
              d566 0050  ld   $50
              d567 00b0  ld   $b0
              d568 002b  ld   $2b
              d569 006c  ld   $6c
              d56a 0093  ld   $93
              d56b 0046  ld   $46
              d56c 0090  ld   $90
              d56d 00a5  ld   $a5
              d56e 0021  ld   $21
              d56f 0046  ld   $46
              d570 0035  ld   $35
              d571 0072  ld   $72
              d572 00bc  ld   $bc
              d573 0059  ld   $59
              d574 0020  ld   $20
              d575 0085  ld   $85
              d576 00a2  ld   $a2
              d577 006e  ld   $6e
              d578 0090  ld   $90
              d579 00c5  ld   $c5
              d57a 0088  ld   $88
              d57b 0030  ld   $30
              d57c 0085  ld   $85
              d57d 00a2  ld   $a2
              d57e 006e  ld   $6e
              d57f 0059  ld   $59
              d580 0030  ld   $30
              d581 002b  ld   $2b
              d582 0046  ld   $46
              d583 0063  ld   $63
              d584 00ff  ld   $ff
              d585 0093  ld   $93
              d586 001b  ld   $1b
              d587 00ff  ld   $ff
              d588 006d  ld   $6d
              d589 00a0  ld   $a0
              d58a 004c  ld   $4c
              d58b 00cd  ld   $cd
              d58c 00e7  ld   $e7
              d58d 0011  ld   $11
              d58e 0000  ld   $00
              d58f 003f  ld   $3f
              d590 002b  ld   $2b
              d591 0024  ld   $24
              d592 0059  ld   $59
              d593 0000  ld   $00
              d594 005e  ld   $5e
              d595 006e  ld   $6e
              d596 0011  ld   $11
              d597 0020  ld   $20
              d598 0001  ld   $01
              d599 00ad  ld   $ad
              d59a 005e  ld   $5e
              d59b 006f  ld   $6f
              d59c 0021  ld   $21
              d59d 006e  ld   $6e
              d59e 002b  ld   $2b
              d59f 0028  ld   $28
              d5a0 005e  ld   $5e
              d5a1 0026  ld   $26
              d5a2 0011  ld   $11
              d5a3 00e1  ld   $e1
              d5a4 0004  ld   $04
              d5a5 002b  ld   $2b
              d5a6 0022  ld   $22
              d5a7 00b4  ld   $b4
              d5a8 00cb  ld   $cb
              d5a9 0093  ld   $93
              d5aa 0028  ld   $28
              d5ab 001a  ld   $1a
              d5ac 0028  ld   $28
              d5ad 008c  ld   $8c
              d5ae 00a0  ld   $a0
              d5af 0035  ld   $35
              d5b0 0072  ld   $72
              d5b1 00b5  ld   $b5
              d5b2 0059  ld   $59
              d5b3 0001  ld   $01
              d5b4 005e  ld   $5e
              d5b5 0035  ld   $35
              d5b6 0059  ld   $59
              d5b7 00c0  ld   $c0
              d5b8 00e3  ld   $e3
              d5b9 001e  ld   $1e
              d5ba 005e  ld   $5e
              d5bb 0034  ld   $34
              d5bc 0021  ld   $21
              d5bd 0034  ld   $34
              d5be 00ad  ld   $ad
              d5bf 00e6  ld   $e6
              d5c0 0070  ld   $70
              d5c1 0035  ld   $35
              d5c2 0053  ld   $53
              d5c3 00db  ld   $db
              d5c4 00e3  ld   $e3
              d5c5 0078  ld   $78
              d5c6 0090  ld   $90
              d5c7 00dd  ld   $dd
              d5c8 00e3  ld   $e3
              d5c9 0018  ld   $18
              d5ca 00f0  ld   $f0
              d5cb 0034  ld   $34
              d5cc 001a  ld   $1a
              d5cd 0034  ld   $34
              d5ce 00e6  ld   $e6
              d5cf 0020  ld   $20
              d5d0 0035  ld   $35
              d5d1 004d  ld   $4d
              d5d2 00cb  ld   $cb
              d5d3 00ff  ld   $ff
              d5d4 0093  ld   $93
              d5d5 001b  ld   $1b
              d5d6 00ff  ld   $ff
              d5d7 006e  ld   $6e
              d5d8 00a0  ld   $a0
              d5d9 004e  ld   $4e
              d5da 00cd  ld   $cd
              d5db 00e9  ld   $e9
              d5dc 00e6  ld   $e6
              d5dd 0052  ld   $52
              d5de 0035  ld   $35
              d5df 0053  ld   $53
              d5e0 00ae  ld   $ae
              d5e1 00e3  ld   $e3
              d5e2 0032  ld   $32
              d5e3 002b  ld   $2b
              d5e4 0034  ld   $34
              d5e5 0011  ld   $11
              d5e6 0000  ld   $00
              d5e7 0007  ld   $07
              d5e8 0090  ld   $90
              d5e9 00b3  ld   $b3
              d5ea 002b  ld   $2b
              d5eb 0034  ld   $34
              d5ec 0011  ld   $11
              d5ed 0000  ld   $00
              d5ee 0008  ld   $08
              d5ef 002b  ld   $2b
              d5f0 0070  ld   $70
              d5f1 0021  ld   $21
              d5f2 0034  ld   $34
              d5f3 00e9  ld   $e9
              d5f4 00e9  ld   $e9
              d5f5 0099  ld   $99
              d5f6 0034  ld   $34
              d5f7 0099  ld   $99
              d5f8 0070  ld   $70
              d5f9 002b  ld   $2b
              d5fa 0070  ld   $70
              d5fb fe00  bra  ac          ;+-----------------------------------+
              d5fc fcfd  bra  $d5fd       ;|                                   |
              d5fd 1418  ld   $18,y       ;| Trampoline for page $d500 lookups |
              d5fe e006  jmp  y,$06       ;|                                   |
              d5ff c218  st   [$18]       ;+-----------------------------------+
              d600 0011  ld   $11
              d601 0000  ld   $00
              d602 003f  ld   $3f
              d603 002b  ld   $2b
              d604 0024  ld   $24
              d605 0021  ld   $21
              d606 006e  ld   $6e
              d607 002b  ld   $2b
              d608 0028  ld   $28
              d609 00e3  ld   $e3
              d60a 0006  ld   $06
              d60b 002b  ld   $2b
              d60c 006e  ld   $6e
              d60d 0011  ld   $11
              d60e 00e1  ld   $e1
              d60f 0004  ld   $04
              d610 002b  ld   $2b
              d611 0022  ld   $22
              d612 0059  ld   $59
              d613 0005  ld   $05
              d614 002b  ld   $2b
              d615 0034  ld   $34
              d616 0021  ld   $21
              d617 0070  ld   $70
              d618 007f  ld   $7f
              d619 0000  ld   $00
              d61a 005e  ld   $5e
              d61b 0026  ld   $26
              d61c 00b4  ld   $b4
              d61d 00cb  ld   $cb
              d61e 0093  ld   $93
              d61f 0070  ld   $70
              d620 0093  ld   $93
              d621 0028  ld   $28
              d622 0021  ld   $21
              d623 0034  ld   $34
              d624 00e6  ld   $e6
              d625 0001  ld   $01
              d626 0035  ld   $35
              d627 004d  ld   $4d
              d628 00d3  ld   $d3
              d629 00ff  ld   $ff
              d62a 0093  ld   $93
              d62b 001b  ld   $1b
              d62c 00ff  ld   $ff
              d62d 006f  ld   $6f
              d62e 00a0  ld   $a0
              d62f 004f  ld   $4f
              d630 00cd  ld   $cd
              d631 00ea  ld   $ea
              d632 0075  ld   $75
              d633 0085  ld   $85
              d634 00a2  ld   $a2
              d635 0064  ld   $64
              d636 0021  ld   $21
              d637 006a  ld   $6a
              d638 002b  ld   $2b
              d639 003a  ld   $3a
              d63a 00ad  ld   $ad
              d63b 0035  ld   $35
              d63c 003f  ld   $3f
              d63d 00e8  ld   $e8
              d63e 008c  ld   $8c
              d63f 00e5  ld   $e5
              d640 0035  ld   $35
              d641 003f  ld   $3f
              d642 00e1  ld   $e1
              d643 0021  ld   $21
              d644 003a  ld   $3a
              d645 00e3  ld   $e3
              d646 000b  ld   $0b
              d647 00ad  ld   $ad
              d648 002b  ld   $2b
              d649 0046  ld   $46
              d64a 008c  ld   $8c
              d64b 000f  ld   $0f
              d64c 0035  ld   $35
              d64d 003f  ld   $3f
              d64e 00e1  ld   $e1
              d64f 0082  ld   $82
              d650 0002  ld   $02
              d651 0035  ld   $35
              d652 003f  ld   $3f
              d653 00e1  ld   $e1
              d654 0021  ld   $21
              d655 0046  ld   $46
              d656 0082  ld   $82
              d657 0008  ld   $08
              d658 0035  ld   $35
              d659 003f  ld   $3f
              d65a 00ce  ld   $ce
              d65b 0085  ld   $85
              d65c 00c2  ld   $c2
              d65d 0069  ld   $69
              d65e 0090  ld   $90
              d65f 00e1  ld   $e1
              d660 0085  ld   $85
              d661 00a2  ld   $a2
              d662 006b  ld   $6b
              d663 0085  ld   $85
              d664 00a2  ld   $a2
              d665 0074  ld   $74
              d666 0035  ld   $35
              d667 0072  ld   $72
              d668 00e1  ld   $e1
              d669 0059  ld   $59
              d66a 00d0  ld   $d0
              d66b 00f0  ld   $f0
              d66c 0032  ld   $32
              d66d 0085  ld   $85
              d66e 00a2  ld   $a2
              d66f 0073  ld   $73
              d670 0085  ld   $85
              d671 00cd  ld   $cd
              d672 0074  ld   $74
              d673 0059  ld   $59
              d674 0020  ld   $20
              d675 0085  ld   $85
              d676 00c6  ld   $c6
              d677 0075  ld   $75
              d678 0090  ld   $90
              d679 00a1  ld   $a1
              d67a 0063  ld   $63
              d67b 00ff  ld   $ff
              d67c 0093  ld   $93
              d67d 001b  ld   $1b
              d67e 00ff  ld   $ff
              d67f 0070  ld   $70
              d680 00a0  ld   $a0
              d681 005e  ld   $5e
              d682 00cd  ld   $cd
              d683 00f9  ld   $f9
              d684 0075  ld   $75
              d685 0021  ld   $21
              d686 003a  ld   $3a
              d687 00e3  ld   $e3
              d688 000b  ld   $0b
              d689 00ad  ld   $ad
              d68a 0082  ld   $82
              d68b 0010  ld   $10
              d68c 0035  ld   $35
              d68d 003f  ld   $3f
              d68e 00b7  ld   $b7
              d68f 00cd  ld   $cd
              d690 00b5  ld   $b5
              d691 0020  ld   $20
              d692 0020  ld   $20
              d693 003c  ld   $3c
              d694 0044  ld   $44
              d695 0049  ld   $49
              d696 0052  ld   $52
              d697 003e  ld   $3e
              d698 0000  ld   $00
              d699 0090  ld   $90
              d69a 00f4  ld   $f4
              d69b 0021  ld   $21
              d69c 003a  ld   $3a
              d69d 00e3  ld   $e3
              d69e 001c  ld   $1c
              d69f 00f6  ld   $f6
              d6a0 002b  ld   $2b
              d6a1 004c  ld   $4c
              d6a2 0021  ld   $21
              d6a3 003a  ld   $3a
              d6a4 00e3  ld   $e3
              d6a5 001e  ld   $1e
              d6a6 00f6  ld   $f6
              d6a7 002b  ld   $2b
              d6a8 004e  ld   $4e
              d6a9 0085  ld   $85
              d6aa 00a2  ld   $a2
              d6ab 0071  ld   $71
              d6ac 0059  ld   $59
              d6ad 0000  ld   $00
              d6ae 002b  ld   $2b
              d6af 0070  ld   $70
              d6b0 0059  ld   $59
              d6b1 0008  ld   $08
              d6b2 002b  ld   $2b
              d6b3 0034  ld   $34
              d6b4 0021  ld   $21
              d6b5 003c  ld   $3c
              d6b6 00ad  ld   $ad
              d6b7 008c  ld   $8c
              d6b8 0030  ld   $30
              d6b9 0035  ld   $35
              d6ba 0072  ld   $72
              d6bb 00f0  ld   $f0
              d6bc 0021  ld   $21
              d6bd 0034  ld   $34
              d6be 00e6  ld   $e6
              d6bf 0006  ld   $06
              d6c0 0035  ld   $35
              d6c1 0053  ld   $53
              d6c2 00e5  ld   $e5
              d6c3 0059  ld   $59
              d6c4 0020  ld   $20
              d6c5 00f0  ld   $f0
              d6c6 003c  ld   $3c
              d6c7 0090  ld   $90
              d6c8 00e7  ld   $e7
              d6c9 0093  ld   $93
              d6ca 0070  ld   $70
              d6cb 0093  ld   $93
              d6cc 003c  ld   $3c
              d6cd 0021  ld   $21
              d6ce 0034  ld   $34
              d6cf 00e6  ld   $e6
              d6d0 0001  ld   $01
              d6d1 0035  ld   $35
              d6d2 0053  ld   $53
              d6d3 00ce  ld   $ce
              d6d4 0021  ld   $21
              d6d5 0044  ld   $44
              d6d6 0099  ld   $99
              d6d7 0070  ld   $70
              d6d8 0085  ld   $85
              d6d9 00a2  ld   $a2
              d6da 0069  ld   $69
              d6db 0063  ld   $63
              d6dc 00ff  ld   $ff
              d6dd 0093  ld   $93
              d6de 001b  ld   $1b
              d6df 00ff  ld   $ff
              d6e0 0071  ld   $71
              d6e1 00a0  ld   $a0
              d6e2 0060  ld   $60
              d6e3 00cd  ld   $cd
              d6e4 00fb  ld   $fb
              d6e5 0075  ld   $75
              d6e6 0059  ld   $59
              d6e7 0009  ld   $09
              d6e8 002b  ld   $2b
              d6e9 0034  ld   $34
              d6ea 0021  ld   $21
              d6eb 0044  ld   $44
              d6ec 0099  ld   $99
              d6ed 0034  ld   $34
              d6ee 002b  ld   $2b
              d6ef 003c  ld   $3c
              d6f0 0059  ld   $59
              d6f1 0030  ld   $30
              d6f2 00f0  ld   $f0
              d6f3 003c  ld   $3c
              d6f4 0021  ld   $21
              d6f5 0034  ld   $34
              d6f6 00e6  ld   $e6
              d6f7 0001  ld   $01
              d6f8 0035  ld   $35
              d6f9 0053  ld   $53
              d6fa 00a3  ld   $a3
              d6fb fe00  bra  ac          ;+-----------------------------------+
              d6fc fcfd  bra  $d6fd       ;|                                   |
              d6fd 1418  ld   $18,y       ;| Trampoline for page $d600 lookups |
              d6fe e006  jmp  y,$06       ;|                                   |
              d6ff c218  st   [$18]       ;+-----------------------------------+
              d700 0059  ld   $59
              d701 001f  ld   $1f
              d702 002b  ld   $2b
              d703 0070  ld   $70
              d704 0085  ld   $85
              d705 00c2  ld   $c2
              d706 0066  ld   $66
              d707 0035  ld   $35
              d708 0050  ld   $50
              d709 00c4  ld   $c4
              d70a 0059  ld   $59
              d70b 006a  ld   $6a
              d70c 0090  ld   $90
              d70d 00c6  ld   $c6
              d70e 0059  ld   $59
              d70f 0069  ld   $69
              d710 002b  ld   $2b
              d711 0046  ld   $46
              d712 0059  ld   $59
              d713 0009  ld   $09
              d714 002b  ld   $2b
              d715 0034  ld   $34
              d716 0021  ld   $21
              d717 0044  ld   $44
              d718 0099  ld   $99
              d719 0034  ld   $34
              d71a 002b  ld   $2b
              d71b 003c  ld   $3c
              d71c 0021  ld   $21
              d71d 003c  ld   $3c
              d71e 00ad  ld   $ad
              d71f 00e9  ld   $e9
              d720 00b8  ld   $b8
              d721 0046  ld   $46
              d722 0035  ld   $35
              d723 0053  ld   $53
              d724 00e3  ld   $e3
              d725 00e3  ld   $e3
              d726 003a  ld   $3a
              d727 00f0  ld   $f0
              d728 003c  ld   $3c
              d729 0059  ld   $59
              d72a 006a  ld   $6a
              d72b 0090  ld   $90
              d72c 00e9  ld   $e9
              d72d 00e3  ld   $e3
              d72e 0030  ld   $30
              d72f 00f0  ld   $f0
              d730 003c  ld   $3c
              d731 0059  ld   $59
              d732 0069  ld   $69
              d733 002b  ld   $2b
              d734 0046  ld   $46
              d735 0021  ld   $21
              d736 0034  ld   $34
              d737 00e6  ld   $e6
              d738 0001  ld   $01
              d739 0035  ld   $35
              d73a 0053  ld   $53
              d73b 00ca  ld   $ca
              d73c 0021  ld   $21
              d73d 0070  ld   $70
              d73e 00e6  ld   $e6
              d73f 0001  ld   $01
              d740 0035  ld   $35
              d741 0053  ld   $53
              d742 00b8  ld   $b8
              d743 0063  ld   $63
              d744 00ff  ld   $ff
              d745 0093  ld   $93
              d746 001b  ld   $1b
              d747 00ff  ld   $ff
              d748 0072  ld   $72
              d749 00a0  ld   $a0
              d74a 004f  ld   $4f
              d74b 00cd  ld   $cd
              d74c 00ab  ld   $ab
              d74d 002d  ld   $2d
              d74e 002d  ld   $2d
              d74f 002d  ld   $2d
              * 10 times
              d757 0000  ld   $00
              d758 002b  ld   $2b
              d759 0044  ld   $44
              d75a 00cd  ld   $cd
              d75b 00ea  ld   $ea
              d75c 0075  ld   $75
              d75d 005e  ld   $5e
              d75e 0025  ld   $25
              d75f 0011  ld   $11
              d760 0003  ld   $03
              d761 000b  ld   $0b
              d762 002b  ld   $2b
              d763 0022  ld   $22
              d764 0059  ld   $59
              d765 0018  ld   $18
              d766 002b  ld   $2b
              d767 0034  ld   $34
              d768 0011  ld   $11
              d769 0020  ld   $20
              d76a 0001  ld   $01
              d76b 002b  ld   $2b
              d76c 0046  ld   $46
              d76d 0021  ld   $21
              d76e 0034  ld   $34
              d76f 00f0  ld   $f0
              d770 0046  ld   $46
              d771 005e  ld   $5e
              d772 0027  ld   $27
              d773 0059  ld   $59
              d774 0000  ld   $00
              d775 005e  ld   $5e
              d776 0026  ld   $26
              d777 0059  ld   $59
              d778 00a0  ld   $a0
              d779 005e  ld   $5e
              d77a 0024  ld   $24
              d77b 00b4  ld   $b4
              d77c 00f3  ld   $f3
              d77d 0059  ld   $59
              d77e 0001  ld   $01
              d77f 0099  ld   $99
              d780 0034  ld   $34
              d781 002b  ld   $2b
              d782 0034  ld   $34
              d783 0059  ld   $59
              d784 0002  ld   $02
              d785 0099  ld   $99
              d786 0046  ld   $46
              d787 002b  ld   $2b
              d788 0046  ld   $46
              d789 0011  ld   $11
              d78a 00f0  ld   $f0
              d78b 0001  ld   $01
              d78c 00fc  ld   $fc
              d78d 0046  ld   $46
              d78e 0035  ld   $35
              d78f 0072  ld   $72
              d790 00c0  ld   $c0
              d791 0059  ld   $59
              d792 0000  ld   $00
              d793 00f0  ld   $f0
              d794 0032  ld   $32
              d795 0063  ld   $63
              d796 00ff  ld   $ff
              d797 0093  ld   $93
              d798 001b  ld   $1b
              d799 00ff  ld   $ff
              d79a 0073  ld   $73
              d79b 00a0  ld   $a0
              d79c 0056  ld   $56
              d79d 00cd  ld   $cd
              d79e 00f1  ld   $f1
              d79f 0075  ld   $75
              d7a0 00cd  ld   $cd
              d7a1 00ac  ld   $ac
              d7a2 004c  ld   $4c
              d7a3 006f  ld   $6f
              d7a4 0061  ld   $61
              d7a5 0064  ld   $64
              d7a6 0069  ld   $69
              d7a7 006e  ld   $6e
              d7a8 0067  ld   $67
              d7a9 0020  ld   $20
              d7aa 0000  ld   $00
              d7ab 0085  ld   $85
              d7ac 00a2  ld   $a2
              d7ad 0069  ld   $69
              d7ae 0085  ld   $85
              d7af 00bf  ld   $bf
              d7b0 006b  ld   $6b
              d7b1 0085  ld   $85
              d7b2 00a2  ld   $a2
              d7b3 0065  ld   $65
              d7b4 0085  ld   $85
              d7b5 00de  ld   $de
              d7b6 0075  ld   $75
              d7b7 005e  ld   $5e
              d7b8 0073  ld   $73
              d7b9 0085  ld   $85
              d7ba 00de  ld   $de
              d7bb 0075  ld   $75
              d7bc 005e  ld   $5e
              d7bd 0072  ld   $72
              d7be 0085  ld   $85
              d7bf 00de  ld   $de
              d7c0 0075  ld   $75
              d7c1 00e6  ld   $e6
              d7c2 0001  ld   $01
              d7c3 0082  ld   $82
              d7c4 00ff  ld   $ff
              d7c5 00e3  ld   $e3
              d7c6 0001  ld   $01
              d7c7 002b  ld   $2b
              d7c8 0074  ld   $74
              d7c9 0085  ld   $85
              d7ca 00a2  ld   $a2
              d7cb 0078  ld   $78
              d7cc 0021  ld   $21
              d7cd 0074  ld   $74
              d7ce 0035  ld   $35
              d7cf 0072  ld   $72
              d7d0 00d8  ld   $d8
              d7d1 0085  ld   $85
              d7d2 00de  ld   $de
              d7d3 0075  ld   $75
              d7d4 0035  ld   $35
              d7d5 0072  ld   $72
              d7d6 00b8  ld   $b8
              d7d7 0085  ld   $85
              d7d8 00de  ld   $de
              d7d9 0075  ld   $75
              d7da 005e  ld   $5e
              d7db 0073  ld   $73
              d7dc 0085  ld   $85
              d7dd 00de  ld   $de
              d7de 0075  ld   $75
              d7df 005e  ld   $5e
              d7e0 0072  ld   $72
              d7e1 0085  ld   $85
              d7e2 00de  ld   $de
              d7e3 0075  ld   $75
              d7e4 0035  ld   $35
              d7e5 0050  ld   $50
              d7e6 00ec  ld   $ec
              d7e7 0059  ld   $59
              d7e8 0000  ld   $00
              d7e9 002b  ld   $2b
              d7ea 0072  ld   $72
              d7eb 0085  ld   $85
              d7ec 00af  ld   $af
              d7ed 005d  ld   $5d
              d7ee 0063  ld   $63
              d7ef 00ff  ld   $ff
              d7f0 0093  ld   $93
              d7f1 001b  ld   $1b
              d7f2 00ff  ld   $ff
              d7f3 0074  ld   $74
              d7f4 00a0  ld   $a0
              d7f5 003c  ld   $3c
              d7f6 00cd  ld   $cd
              d7f7 00c9  ld   $c9
              d7f8 00cd  ld   $cd
              d7f9 00ae  ld   $ae
              d7fa 0053  ld   $53
              d7fb fe00  bra  ac          ;+-----------------------------------+
              d7fc fcfd  bra  $d7fd       ;|                                   |
              d7fd 1418  ld   $18,y       ;| Trampoline for page $d700 lookups |
              d7fe e006  jmp  y,$06       ;|                                   |
              d7ff c218  st   [$18]       ;+-----------------------------------+
              d800 0059  ld   $59
              d801 0053  ld   $53
              d802 0054  ld   $54
              d803 0045  ld   $45
              d804 004d  ld   $4d
              d805 0020  ld   $20
              d806 0020  ld   $20
              d807 0047  ld   $47
              d808 0054  ld   $54
              d809 0031  ld   $31
              d80a 0000  ld   $00
              d80b 002b  ld   $2b
              d80c 003c  ld   $3c
              d80d 0021  ld   $21
              d80e 003a  ld   $3a
              d80f 002b  ld   $2b
              d810 0034  ld   $34
              d811 0021  ld   $21
              d812 003c  ld   $3c
              d813 00ad  ld   $ad
              d814 0093  ld   $93
              d815 003c  ld   $3c
              d816 0035  ld   $35
              d817 003f  ld   $3f
              d818 00c8  ld   $c8
              d819 002b  ld   $2b
              d81a 0070  ld   $70
              d81b 0021  ld   $21
              d81c 0034  ld   $34
              d81d 00ad  ld   $ad
              d81e 0093  ld   $93
              d81f 0034  ld   $34
              d820 00fc  ld   $fc
              d821 0070  ld   $70
              d822 0035  ld   $35
              d823 003f  ld   $3f
              d824 00b4  ld   $b4
              d825 00ff  ld   $ff
              d826 00cd  ld   $cd
              d827 00d7  ld   $d7
              d828 0059  ld   $59
              d829 0020  ld   $20
              d82a 0085  ld   $85
              d82b 00b1  ld   $b1
              d82c 0072  ld   $72
              d82d 0021  ld   $21
              d82e 0072  ld   $72
              d82f 0035  ld   $35
              d830 003f  ld   $3f
              d831 00d2  ld   $d2
              d832 00cf  ld   $cf
              d833 0018  ld   $18
              d834 0093  ld   $93
              d835 001b  ld   $1b
              d836 00ff  ld   $ff
              d837 0075  ld   $75
              d838 00a0  ld   $a0
              d839 0059  ld   $59
              d83a 00cd  ld   $cd
              d83b 00c2  ld   $c2
              d83c 0075  ld   $75
              d83d 0093  ld   $93
              d83e 0040  ld   $40
              d83f 0011  ld   $11
              d840 0000  ld   $00
              d841 0002  ld   $02
              d842 0099  ld   $99
              d843 0064  ld   $64
              d844 00f8  ld   $f8
              d845 004a  ld   $4a
              d846 0035  ld   $35
              d847 0072  ld   $72
              d848 00c0  ld   $c0
              d849 0021  ld   $21
              d84a 0076  ld   $76
              d84b 00e3  ld   $e3
              d84c 0004  ld   $04
              d84d 002b  ld   $2b
              d84e 0076  ld   $76
              d84f 00f6  ld   $f6
              d850 002b  ld   $2b
              d851 004c  ld   $4c
              d852 0021  ld   $21
              d853 0076  ld   $76
              d854 00e3  ld   $e3
              d855 0002  ld   $02
              d856 00f6  ld   $f6
              d857 002b  ld   $2b
              d858 004e  ld   $4e
              d859 0085  ld   $85
              d85a 00cf  ld   $cf
              d85b 0065  ld   $65
              d85c 0063  ld   $63
              d85d 00ff  ld   $ff
              d85e 00cd  ld   $cd
              d85f 00da  ld   $da
              d860 002b  ld   $2b
              d861 0034  ld   $34
              d862 0099  ld   $99
              d863 0064  ld   $64
              d864 002b  ld   $2b
              d865 0064  ld   $64
              d866 0035  ld   $35
              d867 0072  ld   $72
              d868 00d3  ld   $d3
              d869 0059  ld   $59
              d86a 0001  ld   $01
              d86b 0099  ld   $99
              d86c 0060  ld   $60
              d86d 002b  ld   $2b
              d86e 0060  ld   $60
              d86f 0021  ld   $21
              d870 0068  ld   $68
              d871 00b8  ld   $b8
              d872 0034  ld   $34
              d873 002b  ld   $2b
              d874 0068  ld   $68
              d875 00ff  ld   $ff
              d876 00cd  ld   $cd
              d877 00f4  ld   $f4
              d878 0075  ld   $75
              d879 0085  ld   $85
              d87a 00a2  ld   $a2
              d87b 0064  ld   $64
              d87c 0035  ld   $35
              d87d 0056  ld   $56
              d87e 00ef  ld   $ef
              d87f 0059  ld   $59
              d880 0001  ld   $01
              d881 0085  ld   $85
              d882 00c6  ld   $c6
              d883 0075  ld   $75
              d884 0021  ld   $21
              d885 006a  ld   $6a
              d886 00ad  ld   $ad
              d887 0093  ld   $93
              d888 006a  ld   $6a
              d889 0090  ld   $90
              d88a 00f2  ld   $f2
              d88b 0011  ld   $11
              d88c 00ff  ld   $ff
              d88d 00ff  ld   $ff
              d88e 0063  ld   $63
              d88f 00ff  ld   $ff
              d890 0093  ld   $93
              d891 001b  ld   $1b
              d892 00ff  ld   $ff
              d893 0076  ld   $76
              d894 00a0  ld   $a0
              d895 0044  ld   $44
              d896 00cd  ld   $cd
              d897 00df  ld   $df
              d898 0075  ld   $75
              d899 0011  ld   $11
              d89a 0000  ld   $00
              d89b 007f  ld   $7f
              d89c 002b  ld   $2b
              d89d 0076  ld   $76
              d89e 0021  ld   $21
              d89f 004c  ld   $4c
              d8a0 00f3  ld   $f3
              d8a1 0076  ld   $76
              d8a2 0093  ld   $93
              d8a3 0076  ld   $76
              d8a4 0093  ld   $93
              d8a5 0076  ld   $76
              d8a6 0021  ld   $21
              d8a7 004e  ld   $4e
              d8a8 00f3  ld   $f3
              d8a9 0076  ld   $76
              d8aa 0093  ld   $93
              d8ab 0076  ld   $76
              d8ac 0093  ld   $93
              d8ad 0076  ld   $76
              d8ae 0011  ld   $11
              d8af 0000  ld   $00
              d8b0 00f0  ld   $f0
              d8b1 00fa  ld   $fa
              d8b2 004e  ld   $4e
              d8b3 00e3  ld   $e3
              d8b4 0001  ld   $01
              d8b5 0035  ld   $35
              d8b6 0072  ld   $72
              d8b7 00c6  ld   $c6
              d8b8 0059  ld   $59
              d8b9 0007  ld   $07
              d8ba 00fa  ld   $fa
              d8bb 004c  ld   $4c
              d8bc 00e3  ld   $e3
              d8bd 0001  ld   $01
              d8be 0035  ld   $35
              d8bf 003f  ld   $3f
              d8c0 00ce  ld   $ce
              d8c1 0085  ld   $85
              d8c2 00a2  ld   $a2
              d8c3 0077  ld   $77
              d8c4 0090  ld   $90
              d8c5 00a6  ld   $a6
              d8c6 0011  ld   $11
              d8c7 0000  ld   $00
              d8c8 007f  ld   $7f
              d8c9 002b  ld   $2b
              d8ca 0076  ld   $76
              d8cb 00f6  ld   $f6
              d8cc 002b  ld   $2b
              d8cd 004c  ld   $4c
              d8ce 0021  ld   $21
              d8cf 0076  ld   $76
              d8d0 00e3  ld   $e3
              d8d1 0002  ld   $02
              d8d2 00f6  ld   $f6
              d8d3 002b  ld   $2b
              d8d4 004e  ld   $4e
              d8d5 0063  ld   $63
              d8d6 00ff  ld   $ff
              d8d7 0093  ld   $93
              d8d8 001b  ld   $1b
              d8d9 00ff  ld   $ff
              d8da 0077  ld   $77
              d8db 00a0  ld   $a0
              d8dc 005d  ld   $5d
              d8dd 00cd  ld   $cd
              d8de 00f8  ld   $f8
              d8df 0075  ld   $75
              d8e0 001a  ld   $1a
              d8e1 004d  ld   $4d
              d8e2 005e  ld   $5e
              d8e3 0050  ld   $50
              d8e4 001a  ld   $1a
              d8e5 004e  ld   $4e
              d8e6 005e  ld   $5e
              d8e7 0051  ld   $51
              d8e8 001a  ld   $1a
              d8e9 004f  ld   $4f
              d8ea 002b  ld   $2b
              d8eb 0056  ld   $56
              d8ec 001a  ld   $1a
              d8ed 004c  ld   $4c
              d8ee 002b  ld   $2b
              d8ef 0078  ld   $78
              d8f0 0082  ld   $82
              d8f1 0080  ld   $80
              d8f2 00ad  ld   $ad
              d8f3 002b  ld   $2b
              d8f4 004c  ld   $4c
              d8f5 0059  ld   $59
              d8f6 0000  ld   $00
              d8f7 002b  ld   $2b
              d8f8 004e  ld   $4e
              d8f9 0085  ld   $85
              d8fa 00d6  ld   $d6
              d8fb fe00  bra  ac          ;+-----------------------------------+
              d8fc fcfd  bra  $d8fd       ;|                                   |
              d8fd 1418  ld   $18,y       ;| Trampoline for page $d800 lookups |
              d8fe e006  jmp  y,$06       ;|                                   |
              d8ff c218  st   [$18]       ;+-----------------------------------+
              d900 0066  ld   $66
              d901 0085  ld   $85
              d902 00d6  ld   $d6
              d903 0066  ld   $66
              d904 0021  ld   $21
              d905 0052  ld   $52
              d906 002b  ld   $2b
              d907 0050  ld   $50
              d908 0021  ld   $21
              d909 0054  ld   $54
              d90a 002b  ld   $2b
              d90b 0056  ld   $56
              d90c 0085  ld   $85
              d90d 00d6  ld   $d6
              d90e 0066  ld   $66
              d90f 00fc  ld   $fc
              d910 0040  ld   $40
              d911 0035  ld   $35
              d912 0072  ld   $72
              d913 00d4  ld   $d4
              d914 0021  ld   $21
              d915 004e  ld   $4e
              d916 00fc  ld   $fc
              d917 003e  ld   $3e
              d918 0035  ld   $35
              d919 003f  ld   $3f
              d91a 00e2  ld   $e2
              d91b 0021  ld   $21
              d91c 004c  ld   $4c
              d91d 002b  ld   $2b
              d91e 0040  ld   $40
              d91f 0021  ld   $21
              d920 004e  ld   $4e
              d921 002b  ld   $2b
              d922 003e  ld   $3e
              d923 0085  ld   $85
              d924 00a2  ld   $a2
              d925 0063  ld   $63
              d926 0021  ld   $21
              d927 0078  ld   $78
              d928 0082  ld   $82
              d929 007f  ld   $7f
              d92a 00e9  ld   $e9
              d92b 00e9  ld   $e9
              d92c 0099  ld   $99
              d92d 0030  ld   $30
              d92e 002b  ld   $2b
              d92f 0078  ld   $78
              d930 00f6  ld   $f6
              d931 002b  ld   $2b
              d932 004c  ld   $4c
              d933 0021  ld   $21
              d934 0078  ld   $78
              d935 00e3  ld   $e3
              d936 0002  ld   $02
              d937 00f6  ld   $f6
              d938 002b  ld   $2b
              d939 004e  ld   $4e
              d93a 0063  ld   $63
              d93b 00ff  ld   $ff
              d93c 0093  ld   $93
              d93d 001b  ld   $1b
              d93e 00ff  ld   $ff
              d93f 0078  ld   $78
              d940 00a0  ld   $a0
              d941 0038  ld   $38
              d942 00cd  ld   $cd
              d943 00d3  ld   $d3
              d944 0075  ld   $75
              d945 0085  ld   $85
              d946 00a2  ld   $a2
              d947 0064  ld   $64
              d948 0035  ld   $35
              d949 0056  ld   $56
              d94a 00d1  ld   $d1
              d94b 00b8  ld   $b8
              d94c 0074  ld   $74
              d94d 0035  ld   $35
              d94e 0056  ld   $56
              d94f 00ae  ld   $ae
              d950 0059  ld   $59
              d951 0000  ld   $00
              d952 0099  ld   $99
              d953 0074  ld   $74
              d954 0085  ld   $85
              d955 00c6  ld   $c6
              d956 0075  ld   $75
              d957 0021  ld   $21
              d958 006a  ld   $6a
              d959 002b  ld   $2b
              d95a 0026  ld   $26
              d95b 0021  ld   $21
              d95c 0072  ld   $72
              d95d 002b  ld   $2b
              d95e 0024  ld   $24
              d95f 0099  ld   $99
              d960 0034  ld   $34
              d961 002b  ld   $2b
              d962 0072  ld   $72
              d963 0011  ld   $11
              d964 00e9  ld   $e9
              d965 0000  ld   $00
              d966 002b  ld   $2b
              d967 0022  ld   $22
              d968 0021  ld   $21
              d969 0034  ld   $34
              d96a 00b4  ld   $b4
              d96b 00e6  ld   $e6
              d96c 0021  ld   $21
              d96d 0074  ld   $74
              d96e 00b8  ld   $b8
              d96f 0034  ld   $34
              d970 002b  ld   $2b
              d971 0074  ld   $74
              d972 0035  ld   $35
              d973 004d  ld   $4d
              d974 00a1  ld   $a1
              d975 0063  ld   $63
              d976 00ff  ld   $ff
              d977 0093  ld   $93
              d978 001b  ld   $1b
              d979 00ff  ld   $ff
              d97a 0079  ld   $79
              d97b 00a0  ld   $a0
              d97c 0040  ld   $40
              d97d 00cd  ld   $cd
              d97e 00bf  ld   $bf
              d97f 0075  ld   $75
              d980 0059  ld   $59
              d981 0000  ld   $00
              d982 002b  ld   $2b
              d983 0064  ld   $64
              d984 002b  ld   $2b
              d985 0060  ld   $60
              d986 0059  ld   $59
              d987 0000  ld   $00
              d988 002b  ld   $2b
              d989 0066  ld   $66
              d98a 0059  ld   $59
              d98b 0001  ld   $01
              d98c 002b  ld   $2b
              d98d 0062  ld   $62
              d98e 0021  ld   $21
              d98f 005c  ld   $5c
              d990 002b  ld   $2b
              d991 004c  ld   $4c
              d992 0021  ld   $21
              d993 005e  ld   $5e
              d994 002b  ld   $2b
              d995 004e  ld   $4e
              d996 0085  ld   $85
              d997 00a2  ld   $a2
              d998 0076  ld   $76
              d999 0085  ld   $85
              d99a 00cf  ld   $cf
              d99b 0065  ld   $65
              d99c 0063  ld   $63
              d99d 00ff  ld   $ff
              d99e 00cd  ld   $cd
              d99f 00db  ld   $db
              d9a0 0075  ld   $75
              d9a1 00cd  ld   $cd
              d9a2 00ce  ld   $ce
              d9a3 0043  ld   $43
              d9a4 0061  ld   $61
              d9a5 0072  ld   $72
              d9a6 0064  ld   $64
              d9a7 0054  ld   $54
              d9a8 0079  ld   $79
              d9a9 0070  ld   $70
              d9aa 0065  ld   $65
              d9ab 0020  ld   $20
              d9ac 0000  ld   $00
              d9ad 0085  ld   $85
              d9ae 00a2  ld   $a2
              d9af 0069  ld   $69
              d9b0 0021  ld   $21
              d9b1 0036  ld   $36
              d9b2 0085  ld   $85
              d9b3 00a2  ld   $a2
              d9b4 0068  ld   $68
              d9b5 0085  ld   $85
              d9b6 00a2  ld   $a2
              d9b7 006d  ld   $6d
              d9b8 0063  ld   $63
              d9b9 00ff  ld   $ff
              d9ba 0093  ld   $93
              d9bb 001b  ld   $1b
              d9bc 00ff  ld   $ff
              d9bd 007a  ld   $7a
              d9be 00a0  ld   $a0
              d9bf 0057  ld   $57
              d9c0 00cd  ld   $cd
              d9c1 00af  ld   $af
              d9c2 000a  ld   $0a
              d9c3 002a  ld   $2a
              d9c4 002a  ld   $2a
              d9c5 002a  ld   $2a
              d9c6 0020  ld   $20
              d9c7 0043  ld   $43
              d9c8 0061  ld   $61
              d9c9 0072  ld   $72
              d9ca 0064  ld   $64
              d9cb 0042  ld   $42
              d9cc 006f  ld   $6f
              d9cd 006f  ld   $6f
              d9ce 0074  ld   $74
              d9cf 000a  ld   $0a
              d9d0 0000  ld   $00
              d9d1 0085  ld   $85
              d9d2 00a2  ld   $a2
              d9d3 0069  ld   $69
              d9d4 0059  ld   $59
              d9d5 0000  ld   $00
              d9d6 005e  ld   $5e
              d9d7 000e  ld   $0e
              d9d8 0085  ld   $85
              d9d9 00a2  ld   $a2
              d9da 0060  ld   $60
              d9db 0085  ld   $85
              d9dc 00c3  ld   $c3
              d9dd 0079  ld   $79
              d9de 0085  ld   $85
              d9df 00a2  ld   $a2
              d9e0 0061  ld   $61
              d9e1 0085  ld   $85
              d9e2 00bb  ld   $bb
              d9e3 0068  ld   $68
              d9e4 0085  ld   $85
              d9e5 00c7  ld   $c7
              d9e6 0060  ld   $60
              d9e7 0035  ld   $35
              d9e8 0072  ld   $72
              d9e9 00d1  ld   $d1
              d9ea 0085  ld   $85
              d9eb 00a2  ld   $a2
              d9ec 0062  ld   $62
              d9ed 0085  ld   $85
              d9ee 00a2  ld   $a2
              d9ef 0079  ld   $79
              d9f0 0085  ld   $85
              d9f1 00a2  ld   $a2
              d9f2 006f  ld   $6f
              d9f3 0059  ld   $59
              d9f4 0020  ld   $20
              d9f5 00f0  ld   $f0
              d9f6 0032  ld   $32
              d9f7 0085  ld   $85
              d9f8 00a2  ld   $a2
              d9f9 006d  ld   $6d
              d9fa 00cd  ld   $cd
              d9fb fe00  bra  ac          ;+-----------------------------------+
              d9fc fcfd  bra  $d9fd       ;|                                   |
              d9fd 1418  ld   $18,y       ;| Trampoline for page $d900 lookups |
              d9fe e006  jmp  y,$06       ;|                                   |
              d9ff c218  st   [$18]       ;+-----------------------------------+
              da00 00f0  ld   $f0
              da01 0053  ld   $53
              da02 0059  ld   $59
              da03 0053  ld   $53
              da04 0054  ld   $54
              da05 0045  ld   $45
              da06 004d  ld   $4d
              da07 002e  ld   $2e
              da08 0047  ld   $47
              da09 0054  ld   $54
              da0a 0031  ld   $31
              da0b 0020  ld   $20
              da0c 006e  ld   $6e
              da0d 006f  ld   $6f
              da0e 0074  ld   $74
              da0f 0020  ld   $20
              da10 0066  ld   $66
              da11 006f  ld   $6f
              da12 0075  ld   $75
              da13 006e  ld   $6e
              da14 0064  ld   $64
              da15 0021  ld   $21
              da16 0000  ld   $00
              da17 0085  ld   $85
              da18 00a2  ld   $a2
              da19 0069  ld   $69
              da1a 00b4  ld   $b4
              da1b 0080  ld   $80
              da1c 0000  ld   $00
              da1d 0000  ld   $00         ;End of Apps/CardBoot/CardBoot.gt1, size 2922
                                          ;+-----------------------------------+
                                          ;| Apps/MainMenu/MainMenu_vX0.gcl    |
                                          ;+-----------------------------------+
              da1e dc42  st   $42,[y,x++] ;'B'
              da1f dc6f  st   $6f,[y,x++] ;'o'
              da20 dc6f  st   $6f,[y,x++] ;'o'
              da21 dc74  st   $74,[y,x++] ;'t'
              da22 dc00  st   $00,[y,x++] ;'\x00'
              da23 dc00  st   $00,[y,x++] ;'\x00'
              da24 dc00  st   $00,[y,x++] ;'\x00'
              da25 dc00  st   $00,[y,x++] ;'\x00'
              da26 00b4  ld   $b4
              da27 c218  st   [$18]
              da28 00ce  ld   $ce
              da29 14e0  ld   $e0,y
              da2a e02e  jmp  y,$2e
              da2b c219  st   [$19]
Main:         da2c 0002  ld   $02         ;| RAM segment address (high byte first)
              da2d 0000  ld   $00         ;|
              da2e 00dd  ld   $dd         ;| Length (1..256)
              da2f 0021  ld   $21         ;0200 LDW
              da30 0011  ld   $11
              da31 0035  ld   $35         ;0202 BCC
              da32 0056  ld   $56         ;0203 LE
              da33 000f  ld   $0f
              da34 0082  ld   $82         ;0205 ANDI
              da35 0010  ld   $10
              da36 0035  ld   $35         ;0207 BCC
              da37 0072  ld   $72         ;0208 NE
              da38 000f  ld   $0f
              da39 0011  ld   $11         ;020a LDWI
              da3a 00c6  ld   $c6
              da3b 00c9  ld   $c9
              da3c 002b  ld   $2b         ;020d STW
              da3d 0024  ld   $24         ;020d '_sysArgs0'
              da3e 00b4  ld   $b4         ;020f SYS
              da3f 00e3  ld   $e3
              da40 00cd  ld   $cd         ;0211 DEF
              da41 005f  ld   $5f
              da42 0021  ld   $21         ;0213 LDW
              da43 0030  ld   $30         ;0213 'Char'
              da44 00e6  ld   $e6         ;0215 SUBI
              da45 0052  ld   $52
              da46 0035  ld   $35         ;0217 BCC
              da47 0053  ld   $53         ;0218 GE
              da48 0021  ld   $21
              da49 00e3  ld   $e3         ;021a ADDI
              da4a 0032  ld   $32
              da4b 002b  ld   $2b         ;021c STW
              da4c 0032  ld   $32         ;021c 'i'
              da4d 0011  ld   $11         ;021e LDWI
              da4e 0000  ld   $00
              da4f 0007  ld   $07
              da50 0090  ld   $90         ;0221 BRA
              da51 0026  ld   $26
              da52 002b  ld   $2b         ;0223 STW
              da53 0032  ld   $32         ;0223 'i'
              da54 0011  ld   $11         ;0225 LDWI
              da55 0000  ld   $00
              da56 0008  ld   $08
              da57 002b  ld   $2b         ;0228 STW
              da58 0034  ld   $34         ;0228 'fontData'
              da59 0021  ld   $21         ;022a LDW
              da5a 0032  ld   $32         ;022a 'i'
              da5b 00e9  ld   $e9         ;022c LSLW
              da5c 00e9  ld   $e9         ;022d LSLW
              da5d 0099  ld   $99         ;022e ADDW
              da5e 0032  ld   $32         ;022e 'i'
              da5f 0099  ld   $99         ;0230 ADDW
              da60 0034  ld   $34         ;0230 'fontData'
              da61 002b  ld   $2b         ;0232 STW
              da62 0034  ld   $34         ;0232 'fontData'
              da63 0059  ld   $59         ;0234 LDI
              da64 0020  ld   $20
              da65 005e  ld   $5e         ;0236 ST
              da66 0024  ld   $24
              da67 0021  ld   $21         ;0238 LDW
              da68 0036  ld   $36         ;0238 'Color'
              da69 005e  ld   $5e         ;023a ST
              da6a 0025  ld   $25
              da6b 0021  ld   $21         ;023c LDW
              da6c 0038  ld   $38         ;023c 'Pos'
              da6d 002b  ld   $2b         ;023e STW
              da6e 0028  ld   $28
              da6f 00e3  ld   $e3         ;0240 ADDI
              da70 0006  ld   $06
              da71 002b  ld   $2b         ;0242 STW
              da72 0038  ld   $38         ;0242 'Pos'
              da73 0011  ld   $11         ;0244 LDWI
              da74 00e1  ld   $e1
              da75 0004  ld   $04
              da76 002b  ld   $2b         ;0247 STW
              da77 0022  ld   $22
              da78 0059  ld   $59         ;0249 LDI
              da79 00fb  ld   $fb
              da7a 002b  ld   $2b         ;024b STW
              da7b 0032  ld   $32         ;024b 'i'
              da7c 0021  ld   $21         ;024d LDW
              da7d 0034  ld   $34         ;024d 'fontData'
              da7e 007f  ld   $7f         ;024f LUP
              da7f 0000  ld   $00
              da80 0093  ld   $93         ;0251 INC
              da81 0034  ld   $34         ;0251 'fontData'
              da82 005e  ld   $5e         ;0253 ST
              da83 0026  ld   $26
              da84 00b4  ld   $b4         ;0255 SYS
              da85 00cc  ld   $cc
              da86 0093  ld   $93         ;0257 INC
              da87 0028  ld   $28
              da88 0093  ld   $93         ;0259 INC
              da89 0032  ld   $32         ;0259 'i'
              da8a 0021  ld   $21         ;025b LDW
              da8b 0032  ld   $32         ;025b 'i'
              da8c 0035  ld   $35         ;025d BCC
              da8d 0072  ld   $72         ;025e NE
              da8e 004b  ld   $4b
              da8f 00ff  ld   $ff         ;0260 RET
              da90 002b  ld   $2b         ;0261 STW
              da91 003a  ld   $3a         ;0261 'PrintChar'
              da92 00cd  ld   $cd         ;0263 DEF
              da93 008c  ld   $8c
              da94 0075  ld   $75         ;0265 PUSH
              da95 002b  ld   $2b         ;0266 STW
              da96 003c  ld   $3c         ;0266 'Text'
              da97 0021  ld   $21         ;0268 LDW
              da98 003c  ld   $3c         ;0268 'Text'
              da99 00ad  ld   $ad         ;026a PEEK
              da9a 0035  ld   $35         ;026b BCC
              da9b 003f  ld   $3f         ;026c EQ
              da9c 008a  ld   $8a
              da9d 002b  ld   $2b         ;026e STW
              da9e 0030  ld   $30         ;026e 'Char'
              da9f 0093  ld   $93         ;0270 INC
              daa0 003c  ld   $3c         ;0270 'Text'
              daa1 008c  ld   $8c         ;0272 XORI
              daa2 0009  ld   $09
              daa3 0035  ld   $35         ;0274 BCC
              daa4 0072  ld   $72         ;0275 NE
              daa5 007d  ld   $7d
              daa6 0021  ld   $21         ;0277 LDW
              daa7 0038  ld   $38         ;0277 'Pos'
              daa8 00e3  ld   $e3         ;0279 ADDI
              daa9 0012  ld   $12
              daaa 002b  ld   $2b         ;027b STW
              daab 0038  ld   $38         ;027b 'Pos'
              daac 0090  ld   $90         ;027d BRA
              daad 0066  ld   $66
              daae 008c  ld   $8c         ;027f XORI
              daaf 0003  ld   $03
              dab0 0035  ld   $35         ;0281 BCC
              dab1 0072  ld   $72         ;0282 NE
              dab2 0086  ld   $86
              dab3 00cf  ld   $cf         ;0284 CALL
              dab4 003e  ld   $3e         ;0284 'Newline'
              dab5 0090  ld   $90         ;0286 BRA
              dab6 0066  ld   $66
              dab7 00cf  ld   $cf         ;0288 CALL
              dab8 003a  ld   $3a         ;0288 'PrintChar'
              dab9 0090  ld   $90         ;028a BRA
              daba 0066  ld   $66
              dabb 0063  ld   $63         ;028c POP
              dabc 00ff  ld   $ff         ;028d RET
              dabd 002b  ld   $2b         ;028e STW
              dabe 0040  ld   $40         ;028e 'PrintText'
              dabf 00cd  ld   $cd         ;0290 DEF
              dac0 00a6  ld   $a6
              dac1 0075  ld   $75         ;0292 PUSH
              dac2 0059  ld   $59         ;0293 LDI
              dac3 002d  ld   $2d
              dac4 002b  ld   $2b         ;0295 STW
              dac5 0030  ld   $30         ;0295 'Char'
              dac6 0059  ld   $59         ;0297 LDI
              dac7 001a  ld   $1a
              dac8 002b  ld   $2b         ;0299 STW
              dac9 0042  ld   $42         ;0299 'j'
              daca 00cf  ld   $cf         ;029b CALL
              dacb 003a  ld   $3a         ;029b 'PrintChar'
              dacc 0021  ld   $21         ;029d LDW
              dacd 0042  ld   $42         ;029d 'j'
              dace 00e6  ld   $e6         ;029f SUBI
              dacf 0001  ld   $01
              dad0 0035  ld   $35         ;02a1 BCC
              dad1 004d  ld   $4d         ;02a2 GT
              dad2 0097  ld   $97
              dad3 00cf  ld   $cf         ;02a4 CALL
              dad4 003e  ld   $3e         ;02a4 'Newline'
              dad5 0063  ld   $63         ;02a6 POP
              dad6 00ff  ld   $ff         ;02a7 RET
              dad7 002b  ld   $2b         ;02a8 STW
              dad8 0044  ld   $44         ;02a8 'PrintDivider'
              dad9 00cd  ld   $cd         ;02aa DEF
              dada 00d6  ld   $d6
              dadb 0075  ld   $75         ;02ac PUSH
              dadc 0021  ld   $21         ;02ad LDW
              dadd 0046  ld   $46         ;02ad 'MenuItem'
              dade 00e6  ld   $e6         ;02af SUBI
              dadf 0005  ld   $05
              dae0 0035  ld   $35         ;02b1 BCC
              dae1 0053  ld   $53         ;02b2 GE
              dae2 00b7  ld   $b7
              dae3 0011  ld   $11         ;02b4 LDWI
              dae4 000b  ld   $0b
              dae5 0020  ld   $20
              dae6 0090  ld   $90         ;02b7 BRA
              dae7 00ba  ld   $ba
              dae8 0011  ld   $11         ;02b9 LDWI
              dae9 0059  ld   $59
              daea 00f8  ld   $f8
              daeb 002b  ld   $2b         ;02bc STW
              daec 0038  ld   $38         ;02bc 'Pos'
              daed 0021  ld   $21         ;02be LDW
              daee 0046  ld   $46         ;02be 'MenuItem'
              daef 002b  ld   $2b         ;02c0 STW
              daf0 0042  ld   $42         ;02c0 'j'
              daf1 0011  ld   $11         ;02c2 LDWI
              daf2 0000  ld   $00
              daf3 0008  ld   $08
              daf4 0099  ld   $99         ;02c5 ADDW
              daf5 0038  ld   $38         ;02c5 'Pos'
              daf6 002b  ld   $2b         ;02c7 STW
              daf7 0038  ld   $38         ;02c7 'Pos'
              daf8 0021  ld   $21         ;02c9 LDW
              daf9 0042  ld   $42         ;02c9 'j'
              dafa 00e6  ld   $e6         ;02cb SUBI
              dafb fe00  bra  ac          ;+-----------------------------------+
              dafc fcfd  bra  $dafd       ;|                                   |
              dafd 1418  ld   $18,y       ;| Trampoline for page $da00 lookups |
              dafe e006  jmp  y,$06       ;|                                   |
              daff c218  st   [$18]       ;+-----------------------------------+
              db00 0001  ld   $01
              db01 0035  ld   $35         ;02cd BCC
              db02 0053  ld   $53         ;02ce GE
              db03 00be  ld   $be
              db04 0059  ld   $59         ;02d0 LDI
              db05 0082  ld   $82
              db06 002b  ld   $2b         ;02d2 STW
              db07 0030  ld   $30         ;02d2 'Char'
              db08 00cf  ld   $cf         ;02d4 CALL
              db09 003a  ld   $3a         ;02d4 'PrintChar'
              db0a 0063  ld   $63         ;02d6 POP
              db0b 00ff  ld   $ff         ;02d7 RET
              db0c 002b  ld   $2b         ;02d8 STW
              db0d 0048  ld   $48         ;02d8 'PrintArrow'
              db0e 0093  ld   $93         ;02da INC
              db0f 001b  ld   $1b         ;02da '_vLR'+1
              db10 00ff  ld   $ff         ;02dc RET
              db11 0003  ld   $03         ;| RAM segment address (high byte first)
              db12 0000  ld   $00         ;|
              db13 00a0  ld   $a0         ;| Length (1..256)
              db14 00cd  ld   $cd         ;0300 DEF
              db15 0099  ld   $99
              db16 0075  ld   $75         ;0302 PUSH
              db17 001a  ld   $1a         ;0303 LD
              db18 000e  ld   $0e
              db19 002b  ld   $2b         ;0305 STW
              db1a 0036  ld   $36         ;0305 'Color'
              db1b 00cf  ld   $cf         ;0307 CALL
              db1c 0048  ld   $48         ;0307 'PrintArrow'
              db1d 001a  ld   $1a         ;0309 LD
              db1e 0011  ld   $11
              db1f 008c  ld   $8c         ;030b XORI
              db20 00fe  ld   $fe
              db21 0035  ld   $35         ;030d BCC
              db22 0072  ld   $72         ;030e NE
              db23 001f  ld   $1f
              db24 00cf  ld   $cf         ;0310 CALL
              db25 004a  ld   $4a         ;0310 'WipeOutArrow'
              db26 0021  ld   $21         ;0312 LDW
              db27 0046  ld   $46         ;0312 'MenuItem'
              db28 00e6  ld   $e6         ;0314 SUBI
              db29 0004  ld   $04
              db2a 0035  ld   $35         ;0316 BCC
              db2b 004d  ld   $4d         ;0317 GT
              db2c 001b  ld   $1b
              db2d 00e3  ld   $e3         ;0319 ADDI
              db2e 0009  ld   $09
              db2f 002b  ld   $2b         ;031b STW
              db30 0046  ld   $46         ;031b 'MenuItem'
              db31 0059  ld   $59         ;031d LDI
              db32 00ef  ld   $ef
              db33 005e  ld   $5e         ;031f ST
              db34 0011  ld   $11
              db35 001a  ld   $1a         ;0321 LD
              db36 0011  ld   $11
              db37 008c  ld   $8c         ;0323 XORI
              db38 00fd  ld   $fd
              db39 0035  ld   $35         ;0325 BCC
              db3a 0072  ld   $72         ;0326 NE
              db3b 0035  ld   $35
              db3c 00cf  ld   $cf         ;0328 CALL
              db3d 004a  ld   $4a         ;0328 'WipeOutArrow'
              db3e 0021  ld   $21         ;032a LDW
              db3f 0046  ld   $46         ;032a 'MenuItem'
              db40 00e6  ld   $e6         ;032c SUBI
              db41 0005  ld   $05
              db42 0035  ld   $35         ;032e BCC
              db43 0050  ld   $50         ;032f LT
              db44 0031  ld   $31
              db45 002b  ld   $2b         ;0331 STW
              db46 0046  ld   $46         ;0331 'MenuItem'
              db47 0059  ld   $59         ;0333 LDI
              db48 00ef  ld   $ef
              db49 005e  ld   $5e         ;0335 ST
              db4a 0011  ld   $11
              db4b 001a  ld   $1a         ;0337 LD
              db4c 0011  ld   $11
              db4d 008c  ld   $8c         ;0339 XORI
              db4e 00fb  ld   $fb
              db4f 0035  ld   $35         ;033b BCC
              db50 0072  ld   $72         ;033c NE
              db51 0050  ld   $50
              db52 00cf  ld   $cf         ;033e CALL
              db53 004a  ld   $4a         ;033e 'WipeOutArrow'
              db54 0021  ld   $21         ;0340 LDW
              db55 0046  ld   $46         ;0340 'MenuItem'
              db56 00e6  ld   $e6         ;0342 SUBI
              db57 0004  ld   $04
              db58 0035  ld   $35         ;0344 BCC
              db59 003f  ld   $3f         ;0345 EQ
              db5a 004c  ld   $4c
              db5b 00e6  ld   $e6         ;0347 SUBI
              db5c 0005  ld   $05
              db5d 0035  ld   $35         ;0349 BCC
              db5e 003f  ld   $3f         ;034a EQ
              db5f 004c  ld   $4c
              db60 0093  ld   $93         ;034c INC
              db61 0046  ld   $46         ;034c 'MenuItem'
              db62 0059  ld   $59         ;034e LDI
              db63 00ef  ld   $ef
              db64 005e  ld   $5e         ;0350 ST
              db65 0011  ld   $11
              db66 001a  ld   $1a         ;0352 LD
              db67 0011  ld   $11
              db68 008c  ld   $8c         ;0354 XORI
              db69 00f7  ld   $f7
              db6a 0035  ld   $35         ;0356 BCC
              db6b 0072  ld   $72         ;0357 NE
              db6c 006d  ld   $6d
              db6d 00cf  ld   $cf         ;0359 CALL
              db6e 004a  ld   $4a         ;0359 'WipeOutArrow'
              db6f 0021  ld   $21         ;035b LDW
              db70 0046  ld   $46         ;035b 'MenuItem'
              db71 0035  ld   $35         ;035d BCC
              db72 003f  ld   $3f         ;035e EQ
              db73 0069  ld   $69
              db74 00e6  ld   $e6         ;0360 SUBI
              db75 0005  ld   $05
              db76 0035  ld   $35         ;0362 BCC
              db77 003f  ld   $3f         ;0363 EQ
              db78 0069  ld   $69
              db79 0021  ld   $21         ;0365 LDW
              db7a 0046  ld   $46         ;0365 'MenuItem'
              db7b 00e6  ld   $e6         ;0367 SUBI
              db7c 0001  ld   $01
              db7d 002b  ld   $2b         ;0369 STW
              db7e 0046  ld   $46         ;0369 'MenuItem'
              db7f 0059  ld   $59         ;036b LDI
              db80 00ef  ld   $ef
              db81 005e  ld   $5e         ;036d ST
              db82 0011  ld   $11
              db83 001a  ld   $1a         ;036f LD
              db84 0011  ld   $11
              db85 0082  ld   $82         ;0371 ANDI
              db86 0080  ld   $80
              db87 0035  ld   $35         ;0373 BCC
              db88 0072  ld   $72         ;0374 NE
              db89 0001  ld   $01
              db8a 0059  ld   $59         ;0376 LDI
              db8b 002a  ld   $2a
              db8c 002b  ld   $2b         ;0378 STW
              db8d 0036  ld   $36         ;0378 'Color'
              db8e 00cf  ld   $cf         ;037a CALL
              db8f 0048  ld   $48         ;037a 'PrintArrow'
              db90 00cd  ld   $cd         ;037c DEF
              db91 0090  ld   $90
              db92 004f  ld   $4f
              db93 0054  ld   $54
              db94 00f0  ld   $f0
              db95 004c  ld   $4c
              db96 005d  ld   $5d
              db97 005f  ld   $5f
              db98 0076  ld   $76
              db99 0065  ld   $65
              db9a 0052  ld   $52
              db9b 0064  ld   $64
              db9c 00d5  ld   $d5
              db9d 0067  ld   $67
              db9e 009a  ld   $9a
              db9f 007b  ld   $7b
              dba0 0012  ld   $12
              dba1 006f  ld   $6f
              dba2 00aa  ld   $aa
              dba3 00a3  ld   $a3
              dba4 0015  ld   $15
              dba5 0086  ld   $86
              dba6 0099  ld   $99         ;0392 ADDW
              dba7 0046  ld   $46         ;0392 'MenuItem'
              dba8 0099  ld   $99         ;0394 ADDW
              dba9 0046  ld   $46         ;0394 'MenuItem'
              dbaa 00f6  ld   $f6         ;0396 DEEK
              dbab 002b  ld   $2b         ;0397 STW
              dbac 004c  ld   $4c         ;0397 'Program'
              dbad 0063  ld   $63         ;0399 POP
              dbae 00ff  ld   $ff         ;039a RET
              dbaf 002b  ld   $2b         ;039b STW
              dbb0 004e  ld   $4e         ;039b 'SelectMenu'
              dbb1 0093  ld   $93         ;039d INC
              dbb2 001b  ld   $1b         ;039d '_vLR'+1
              dbb3 00ff  ld   $ff         ;039f RET
              dbb4 0004  ld   $04         ;| RAM segment address (high byte first)
              dbb5 0000  ld   $00         ;|
              dbb6 00c0  ld   $c0         ;| Length (1..256)
              dbb7 00cd  ld   $cd         ;0400 DEF
              dbb8 000b  ld   $0b
              dbb9 001a  ld   $1a         ;0402 LD
              dbba 0039  ld   $39         ;0402 'Pos'+1
              dbbb 00e3  ld   $e3         ;0404 ADDI
              dbbc 0008  ld   $08
              dbbd 005e  ld   $5e         ;0406 ST
              dbbe 0039  ld   $39         ;0406 'Pos'+1
              dbbf 0059  ld   $59         ;0408 LDI
              dbc0 0002  ld   $02
              dbc1 005e  ld   $5e         ;040a ST
              dbc2 0038  ld   $38         ;040a 'Pos'
              dbc3 00ff  ld   $ff         ;040c RET
              dbc4 002b  ld   $2b         ;040d STW
              dbc5 003e  ld   $3e         ;040d 'Newline'
              dbc6 00cd  ld   $cd         ;040f DEF
              dbc7 006b  ld   $6b
              dbc8 0009  ld   $09         ;0411 9
              dbc9 0053  ld   $53         ;0412 'S'
              dbca 0044  ld   $44         ;0413 'D'
              dbcb 0043  ld   $43         ;0414 'C'
              dbcc 0061  ld   $61         ;0415 'a'
              dbcd 0072  ld   $72         ;0416 'r'
              dbce 0064  ld   $64         ;0417 'd'
              dbcf 0009  ld   $09         ;0418 9
              dbd0 0020  ld   $20         ;0419 ' '
              dbd1 0009  ld   $09         ;041a 9
              dbd2 0053  ld   $53         ;041b 'S'
              dbd3 006e  ld   $6e         ;041c 'n'
              dbd4 0061  ld   $61         ;041d 'a'
              dbd5 006b  ld   $6b         ;041e 'k'
              dbd6 0065  ld   $65         ;041f 'e'
              dbd7 000a  ld   $0a         ;0420 10
              dbd8 0009  ld   $09         ;0421 9
              dbd9 0052  ld   $52         ;0422 'R'
              dbda 0061  ld   $61         ;0423 'a'
              dbdb 0063  ld   $63         ;0424 'c'
              dbdc 0065  ld   $65         ;0425 'e'
              dbdd 0072  ld   $72         ;0426 'r'
              dbde 0009  ld   $09         ;0427 9
              dbdf 0020  ld   $20         ;0428 ' '
              dbe0 0020  ld   $20         ;0429 ' '
              dbe1 0009  ld   $09         ;042a 9
              dbe2 0054  ld   $54         ;042b 'T'
              dbe3 0069  ld   $69         ;042c 'i'
              dbe4 0063  ld   $63         ;042d 'c'
              dbe5 0054  ld   $54         ;042e 'T'
              dbe6 0061  ld   $61         ;042f 'a'
              dbe7 0063  ld   $63         ;0430 'c'
              dbe8 0054  ld   $54         ;0431 'T'
              dbe9 006f  ld   $6f         ;0432 'o'
              dbea 0065  ld   $65         ;0433 'e'
              dbeb 000a  ld   $0a         ;0434 10
              dbec 0009  ld   $09         ;0435 9
              dbed 004d  ld   $4d         ;0436 'M'
              dbee 0061  ld   $61         ;0437 'a'
              dbef 006e  ld   $6e         ;0438 'n'
              dbf0 0064  ld   $64         ;0439 'd'
              dbf1 0065  ld   $65         ;043a 'e'
              dbf2 006c  ld   $6c         ;043b 'l'
              dbf3 0062  ld   $62         ;043c 'b'
              dbf4 0072  ld   $72         ;043d 'r'
              dbf5 006f  ld   $6f         ;043e 'o'
              dbf6 0074  ld   $74         ;043f 't'
              dbf7 0009  ld   $09         ;0440 9
              dbf8 0042  ld   $42         ;0441 'B'
              dbf9 0041  ld   $41         ;0442 'A'
              dbfa 0053  ld   $53         ;0443 'S'
              dbfb fe00  bra  ac          ;+-----------------------------------+
              dbfc fcfd  bra  $dbfd       ;|                                   |
              dbfd 1418  ld   $18,y       ;| Trampoline for page $db00 lookups |
              dbfe e006  jmp  y,$06       ;|                                   |
              dbff c218  st   [$18]       ;+-----------------------------------+
              dc00 0049  ld   $49         ;0444 'I'
              dc01 0043  ld   $43         ;0445 'C'
              dc02 000a  ld   $0a         ;0446 10
              dc03 0009  ld   $09         ;0447 9
              dc04 0043  ld   $43         ;0448 'C'
              dc05 0072  ld   $72         ;0449 'r'
              dc06 0065  ld   $65         ;044a 'e'
              dc07 0064  ld   $64         ;044b 'd'
              dc08 0069  ld   $69         ;044c 'i'
              dc09 0074  ld   $74         ;044d 't'
              dc0a 0073  ld   $73         ;044e 's'
              dc0b 0009  ld   $09         ;044f 9
              dc0c 0009  ld   $09         ;0450 9
              dc0d 004d  ld   $4d         ;0451 'M'
              dc0e 0053  ld   $53         ;0452 'S'
              dc0f 0020  ld   $20         ;0453 ' '
              dc10 0042  ld   $42         ;0454 'B'
              dc11 0041  ld   $41         ;0455 'A'
              dc12 0053  ld   $53         ;0456 'S'
              dc13 0049  ld   $49         ;0457 'I'
              dc14 0043  ld   $43         ;0458 'C'
              dc15 000a  ld   $0a         ;0459 10
              dc16 0009  ld   $09         ;045a 9
              dc17 004c  ld   $4c         ;045b 'L'
              dc18 006f  ld   $6f         ;045c 'o'
              dc19 0061  ld   $61         ;045d 'a'
              dc1a 0064  ld   $64         ;045e 'd'
              dc1b 0065  ld   $65         ;045f 'e'
              dc1c 0072  ld   $72         ;0460 'r'
              dc1d 0009  ld   $09         ;0461 9
              dc1e 0020  ld   $20         ;0462 ' '
              dc1f 0009  ld   $09         ;0463 9
              dc20 0041  ld   $41         ;0464 'A'
              dc21 0070  ld   $70         ;0465 'p'
              dc22 0070  ld   $70         ;0466 'p'
              dc23 006c  ld   $6c         ;0467 'l'
              dc24 0065  ld   $65         ;0468 'e'
              dc25 002d  ld   $2d         ;0469 '-'
              dc26 0031  ld   $31         ;046a '1'
              dc27 000a  ld   $0a         ;046b 10
              dc28 0000  ld   $00         ;046c 0
              dc29 002b  ld   $2b         ;046d STW
              dc2a 0050  ld   $50         ;046d 'MainMenu'
              dc2b 00cd  ld   $cd         ;046f DEF
              dc2c 00b9  ld   $b9
              dc2d 0055  ld   $55         ;0471 'U'
              dc2e 0073  ld   $73         ;0472 's'
              dc2f 0065  ld   $65         ;0473 'e'
              dc30 0020  ld   $20         ;0474 ' '
              dc31 005b  ld   $5b         ;0475 91
              dc32 0041  ld   $41         ;0476 'A'
              dc33 0072  ld   $72         ;0477 'r'
              dc34 0072  ld   $72         ;0478 'r'
              dc35 006f  ld   $6f         ;0479 'o'
              dc36 0077  ld   $77         ;047a 'w'
              dc37 0073  ld   $73         ;047b 's'
              dc38 005d  ld   $5d         ;047c 93
              dc39 0020  ld   $20         ;047d ' '
              dc3a 0074  ld   $74         ;047e 't'
              dc3b 006f  ld   $6f         ;047f 'o'
              dc3c 0020  ld   $20         ;0480 ' '
              dc3d 0073  ld   $73         ;0481 's'
              dc3e 0065  ld   $65         ;0482 'e'
              dc3f 006c  ld   $6c         ;0483 'l'
              dc40 0065  ld   $65         ;0484 'e'
              dc41 0063  ld   $63         ;0485 'c'
              dc42 0074  ld   $74         ;0486 't'
              dc43 000a  ld   $0a         ;0487 10
              dc44 0050  ld   $50         ;0488 'P'
              dc45 0072  ld   $72         ;0489 'r'
              dc46 0065  ld   $65         ;048a 'e'
              dc47 0073  ld   $73         ;048b 's'
              dc48 0073  ld   $73         ;048c 's'
              dc49 0020  ld   $20         ;048d ' '
              dc4a 005b  ld   $5b         ;048e 91
              dc4b 0041  ld   $41         ;048f 'A'
              dc4c 005d  ld   $5d         ;0490 93
              dc4d 0020  ld   $20         ;0491 ' '
              dc4e 0074  ld   $74         ;0492 't'
              dc4f 006f  ld   $6f         ;0493 'o'
              dc50 0020  ld   $20         ;0494 ' '
              dc51 0073  ld   $73         ;0495 's'
              dc52 0074  ld   $74         ;0496 't'
              dc53 0061  ld   $61         ;0497 'a'
              dc54 0072  ld   $72         ;0498 'r'
              dc55 0074  ld   $74         ;0499 't'
              dc56 0020  ld   $20         ;049a ' '
              dc57 0070  ld   $70         ;049b 'p'
              dc58 0072  ld   $72         ;049c 'r'
              dc59 006f  ld   $6f         ;049d 'o'
              dc5a 0067  ld   $67         ;049e 'g'
              dc5b 0072  ld   $72         ;049f 'r'
              dc5c 0061  ld   $61         ;04a0 'a'
              dc5d 006d  ld   $6d         ;04a1 'm'
              dc5e 000a  ld   $0a         ;04a2 10
              dc5f 000a  ld   $0a         ;04a3 10
              dc60 0048  ld   $48         ;04a4 'H'
              dc61 006f  ld   $6f         ;04a5 'o'
              dc62 006c  ld   $6c         ;04a6 'l'
              dc63 0064  ld   $64         ;04a7 'd'
              dc64 0020  ld   $20         ;04a8 ' '
              dc65 005b  ld   $5b         ;04a9 91
              dc66 0053  ld   $53         ;04aa 'S'
              dc67 0074  ld   $74         ;04ab 't'
              dc68 0061  ld   $61         ;04ac 'a'
              dc69 0072  ld   $72         ;04ad 'r'
              dc6a 0074  ld   $74         ;04ae 't'
              dc6b 005d  ld   $5d         ;04af 93
              dc6c 0020  ld   $20         ;04b0 ' '
              dc6d 0066  ld   $66         ;04b1 'f'
              dc6e 006f  ld   $6f         ;04b2 'o'
              dc6f 0072  ld   $72         ;04b3 'r'
              dc70 0020  ld   $20         ;04b4 ' '
              dc71 0072  ld   $72         ;04b5 'r'
              dc72 0065  ld   $65         ;04b6 'e'
              dc73 0073  ld   $73         ;04b7 's'
              dc74 0065  ld   $65         ;04b8 'e'
              dc75 0074  ld   $74         ;04b9 't'
              dc76 0000  ld   $00         ;04ba 0
              dc77 002b  ld   $2b         ;04bb STW
              dc78 0052  ld   $52         ;04bb 'HelpText'
              dc79 0093  ld   $93         ;04bd INC
              dc7a 001b  ld   $1b         ;04bd '_vLR'+1
              dc7b 00ff  ld   $ff         ;04bf RET
              dc7c 0005  ld   $05         ;| RAM segment address (high byte first)
              dc7d 0000  ld   $00         ;|
              dc7e 00b7  ld   $b7         ;| Length (1..256)
              dc7f 00cd  ld   $cd         ;0500 DEF
              dc80 0011  ld   $11
              dc81 0075  ld   $75         ;0502 PUSH
              dc82 0021  ld   $21         ;0503 LDW
              dc83 0038  ld   $38         ;0503 'Pos'
              dc84 00e6  ld   $e6         ;0505 SUBI
              dc85 000c  ld   $0c
              dc86 002b  ld   $2b         ;0507 STW
              dc87 0038  ld   $38         ;0507 'Pos'
              dc88 0059  ld   $59         ;0509 LDI
              dc89 0020  ld   $20
              dc8a 002b  ld   $2b         ;050b STW
              dc8b 0030  ld   $30         ;050b 'Char'
              dc8c 00cf  ld   $cf         ;050d CALL
              dc8d 003a  ld   $3a         ;050d 'PrintChar'
              dc8e 00cf  ld   $cf         ;050f CALL
              dc8f 003a  ld   $3a         ;050f 'PrintChar'
              dc90 0063  ld   $63         ;0511 POP
              dc91 00ff  ld   $ff         ;0512 RET
              dc92 002b  ld   $2b         ;0513 STW
              dc93 004a  ld   $4a         ;0513 'WipeOutArrow'
              dc94 00cd  ld   $cd         ;0515 DEF
              dc95 0030  ld   $30
              dc96 0075  ld   $75         ;0517 PUSH
              dc97 0059  ld   $59         ;0518 LDI
              dc98 002a  ld   $2a
              dc99 002b  ld   $2b         ;051a STW
              dc9a 0036  ld   $36         ;051a 'Color'
              dc9b 00cf  ld   $cf         ;051c CALL
              dc9c 0044  ld   $44         ;051c 'PrintDivider'
              dc9d 0059  ld   $59         ;051e LDI
              dc9e 000f  ld   $0f
              dc9f 002b  ld   $2b         ;0520 STW
              dca0 0036  ld   $36         ;0520 'Color'
              dca1 0021  ld   $21         ;0522 LDW
              dca2 0050  ld   $50         ;0522 'MainMenu'
              dca3 00cf  ld   $cf         ;0524 CALL
              dca4 0040  ld   $40         ;0524 'PrintText'
              dca5 0059  ld   $59         ;0526 LDI
              dca6 002a  ld   $2a
              dca7 002b  ld   $2b         ;0528 STW
              dca8 0036  ld   $36         ;0528 'Color'
              dca9 00cf  ld   $cf         ;052a CALL
              dcaa 0044  ld   $44         ;052a 'PrintDivider'
              dcab 0021  ld   $21         ;052c LDW
              dcac 0052  ld   $52         ;052c 'HelpText'
              dcad 00cf  ld   $cf         ;052e CALL
              dcae 0040  ld   $40         ;052e 'PrintText'
              dcaf 0063  ld   $63         ;0530 POP
              dcb0 00ff  ld   $ff         ;0531 RET
              dcb1 002b  ld   $2b         ;0532 STW
              dcb2 0054  ld   $54         ;0532 'PrintMenu'
              dcb3 001a  ld   $1a         ;0534 LD
              dcb4 0021  ld   $21
              dcb5 0088  ld   $88         ;0536 ORI
              dcb6 0003  ld   $03
              dcb7 005e  ld   $5e         ;0538 ST
              dcb8 0021  ld   $21
              dcb9 0059  ld   $59         ;053a LDI
              dcba 005a  ld   $5a
              dcbb 005e  ld   $5e         ;053c ST
              dcbc 002c  ld   $2c
              dcbd 0011  ld   $11         ;053e LDWI
              dcbe 0002  ld   $02
              dcbf 0020  ld   $20
              dcc0 002b  ld   $2b         ;0541 STW
              dcc1 0038  ld   $38         ;0541 'Pos'
              dcc2 00cf  ld   $cf         ;0543 CALL
              dcc3 0054  ld   $54         ;0543 'PrintMenu'
              dcc4 0059  ld   $59         ;0545 LDI
              dcc5 0000  ld   $00
              dcc6 002b  ld   $2b         ;0547 STW
              dcc7 0046  ld   $46         ;0547 'MenuItem'
              dcc8 00cf  ld   $cf         ;0549 CALL
              dcc9 004e  ld   $4e         ;0549 'SelectMenu'
              dcca 0011  ld   $11         ;054b LDWI
              dccb 0000  ld   $00
              dccc 0008  ld   $08
              dccd 002b  ld   $2b         ;054e STW
              dcce 0028  ld   $28         ;054e '_sysArgs4'
              dccf 0011  ld   $11         ;0550 LDWI
              dcd0 0001  ld   $01
              dcd1 0088  ld   $88
              dcd2 002b  ld   $2b         ;0553 STW
              dcd3 0032  ld   $32         ;0553 'i'
              dcd4 0011  ld   $11         ;0555 LDWI
              dcd5 0080  ld   $80
              dcd6 00ff  ld   $ff
              dcd7 002b  ld   $2b         ;0558 STW
              dcd8 0042  ld   $42         ;0558 'j'
              dcd9 0021  ld   $21         ;055a LDW
              dcda 0038  ld   $38         ;055a 'Pos'
              dcdb 00e3  ld   $e3         ;055c ADDI
              dcdc 0030  ld   $30
              dcdd 00f8  ld   $f8         ;055e ANDW
              dcde 0042  ld   $42         ;055e 'j'
              dcdf 002b  ld   $2b         ;0560 STW
              dce0 0056  ld   $56         ;0560 'q'
              dce1 0011  ld   $11         ;0562 LDWI
              dce2 00e1  ld   $e1
              dce3 0004  ld   $04
              dce4 002b  ld   $2b         ;0565 STW
              dce5 0022  ld   $22         ;0565 '_sysFn'
              dce6 0059  ld   $59         ;0567 LDI
              dce7 0020  ld   $20
              dce8 005e  ld   $5e         ;0569 ST
              dce9 0024  ld   $24
              dcea 005e  ld   $5e         ;056b ST
              dceb 0025  ld   $25
              dcec 0021  ld   $21         ;056d LDW
              dced 0028  ld   $28         ;056d '_sysArgs4'
              dcee 00e3  ld   $e3         ;056f ADDI
              dcef 0030  ld   $30
              dcf0 00f8  ld   $f8         ;0571 ANDW
              dcf1 0042  ld   $42         ;0571 'j'
              dcf2 00fc  ld   $fc         ;0573 XORW
              dcf3 0056  ld   $56         ;0573 'q'
              dcf4 0035  ld   $35         ;0575 BCC
              dcf5 003f  ld   $3f         ;0576 EQ
              dcf6 007f  ld   $7f
              dcf7 001a  ld   $1a         ;0578 LD
              dcf8 0059  ld   $59         ;0578 'p'+1
              dcf9 008c  ld   $8c         ;057a XORI
              dcfa 0078  ld   $78
              dcfb fe00  bra  ac          ;+-----------------------------------+
              dcfc fcfd  bra  $dcfd       ;|                                   |
              dcfd 1418  ld   $18,y       ;| Trampoline for page $dc00 lookups |
              dcfe e006  jmp  y,$06       ;|                                   |
              dcff c218  st   [$18]       ;+-----------------------------------+
              dd00 0035  ld   $35         ;057c BCC
              dd01 003f  ld   $3f         ;057d EQ
              dd02 007f  ld   $7f
              dd03 00b4  ld   $b4         ;057f SYS
              dd04 00cc  ld   $cc
              dd05 0011  ld   $11         ;0581 LDWI
              dd06 0000  ld   $00
              dd07 0008  ld   $08
              dd08 0099  ld   $99         ;0584 921
              dd09 0028  ld   $28         ;0585 40
              dd0a 002b  ld   $2b         ;0586 STW
              dd0b 0028  ld   $28
              dd0c 0035  ld   $35         ;0588 BCC
              dd0d 004d  ld   $4d         ;0589 GT
              dd0e 006d  ld   $6d
              dd0f 0099  ld   $99         ;058b ADDW
              dd10 0032  ld   $32         ;058b 'i'
              dd11 002b  ld   $2b         ;058d STW
              dd12 0028  ld   $28
              dd13 0082  ld   $82         ;058f ANDI
              dd14 00ff  ld   $ff
              dd15 008c  ld   $8c         ;0591 XORI
              dd16 00a0  ld   $a0
              dd17 0035  ld   $35         ;0593 BCC
              dd18 0072  ld   $72         ;0594 NE
              dd19 006b  ld   $6b
              dd1a 0059  ld   $59         ;0596 LDI
              dd1b 00ad  ld   $ad
              dd1c 002b  ld   $2b         ;0598 STW
              dd1d 0022  ld   $22         ;0598 '_sysFn'
              dd1e 0021  ld   $21         ;059a LDW
              dd1f 004c  ld   $4c         ;059a 'Program'
              dd20 002b  ld   $2b         ;059c STW
              dd21 0024  ld   $24         ;059c '_sysArgs0'
              dd22 0011  ld   $11         ;059e LDWI
              dd23 0000  ld   $00
              dd24 0002  ld   $02
              dd25 002b  ld   $2b         ;05a1 STW
              dd26 001a  ld   $1a         ;05a1 '_vLR'
              dd27 0021  ld   $21         ;05a3 LDW
              dd28 0046  ld   $46         ;05a3 'MenuItem'
              dd29 00e6  ld   $e6         ;05a5 SUBI
              dd2a 0008  ld   $08
              dd2b 0035  ld   $35         ;05a7 BCC
              dd2c 003f  ld   $3f         ;05a8 EQ
              dd2d 00aa  ld   $aa
              dd2e 00e6  ld   $e6         ;05aa SUBI
              dd2f 0001  ld   $01
              dd30 0035  ld   $35         ;05ac BCC
              dd31 0072  ld   $72         ;05ad NE
              dd32 00b3  ld   $b3
              dd33 001a  ld   $1a         ;05af LD
              dd34 0021  ld   $21
              dd35 0082  ld   $82         ;05b1 ANDI
              dd36 00f8  ld   $f8
              dd37 005e  ld   $5e         ;05b3 ST
              dd38 0021  ld   $21
              dd39 00b4  ld   $b4         ;05b5 SYS
              dd3a 00e3  ld   $e3
              dd3b 0000  ld   $00         ;End of Apps/MainMenu/MainMenu_vX0.gcl, size 784
                                          ;+-----------------------------------+
                                          ;| Core/Reset_vX0.gcl                |
                                          ;+-----------------------------------+
              dd3c dc4d  st   $4d,[y,x++] ;'M'
              dd3d dc61  st   $61,[y,x++] ;'a'
              dd3e dc69  st   $69,[y,x++] ;'i'
              dd3f dc6e  st   $6e,[y,x++] ;'n'
              dd40 dc00  st   $00,[y,x++] ;'\x00'
              dd41 dc00  st   $00,[y,x++] ;'\x00'
              dd42 dc00  st   $00,[y,x++] ;'\x00'
              dd43 dc00  st   $00,[y,x++] ;'\x00'
              dd44 002c  ld   $2c
              dd45 c218  st   [$18]
              dd46 00da  ld   $da
              dd47 14e0  ld   $e0,y
              dd48 e02e  jmp  y,$2e
              dd49 c219  st   [$19]
Reset:        dd4a 0002  ld   $02         ;| RAM segment address (high byte first)
              dd4b 0000  ld   $00         ;|
              dd4c 00f3  ld   $f3         ;| Length (1..256)
              dd4d 0011  ld   $11         ;0200 LDWI
              dd4e 00f8  ld   $f8
              dd4f 0001  ld   $01
              dd50 002b  ld   $2b         ;0203 STW
              dd51 0030  ld   $30         ;0203 'CtrlBits'
              dd52 00cd  ld   $cd         ;0205 DEF
              dd53 0075  ld   $75
              dd54 0075  ld   $75         ;0207 PUSH
              dd55 001a  ld   $1a         ;0208 LD
              dd56 0001  ld   $01
              dd57 00e6  ld   $e6         ;020a SUBI
              dd58 0001  ld   $01
              dd59 0082  ld   $82         ;020c ANDI
              dd5a 00ff  ld   $ff
              dd5b 00e3  ld   $e3         ;020e ADDI
              dd5c 0001  ld   $01
              dd5d 002b  ld   $2b         ;0210 STW
              dd5e 0032  ld   $32         ;0210 'i'
              dd5f 0011  ld   $11         ;0212 LDWI
              dd60 0009  ld   $09
              dd61 000b  ld   $0b
              dd62 002b  ld   $2b         ;0215 STW
              dd63 0022  ld   $22         ;0215 '_sysFn'
              dd64 0059  ld   $59         ;0217 LDI
              dd65 00aa  ld   $aa
              dd66 005e  ld   $5e         ;0219 ST
              dd67 007c  ld   $7c
              dd68 0059  ld   $59         ;021b LDI
              dd69 007c  ld   $7c
              dd6a 00b4  ld   $b4         ;021d SYS
              dd6b 00fb  ld   $fb
              dd6c 001a  ld   $1a         ;021f LD
              dd6d 007c  ld   $7c
              dd6e 008c  ld   $8c         ;0221 XORI
              dd6f 00aa  ld   $aa
              dd70 0035  ld   $35         ;0223 BCC
              dd71 003f  ld   $3f         ;0224 EQ
              dd72 002a  ld   $2a
              dd73 0059  ld   $59         ;0226 LDI
              dd74 0000  ld   $00
              dd75 00f0  ld   $f0         ;0228 POKE
              dd76 0030  ld   $30         ;0228 'CtrlBits'
              dd77 0090  ld   $90         ;022a BRA
              dd78 0054  ld   $54
              dd79 0011  ld   $11         ;022c LDWI
              dd7a 0024  ld   $24
              dd7b 0080  ld   $80
              dd7c 002b  ld   $2b         ;022f STW
              dd7d 0034  ld   $34         ;022f 'q'
              dd7e 0059  ld   $59         ;0231 LDI
              dd7f 00bc  ld   $bc
              dd80 00b4  ld   $b4         ;0233 SYS
              dd81 00fb  ld   $fb
              dd82 0021  ld   $21         ;0235 LDW
              dd83 0034  ld   $34         ;0235 'q'
              dd84 00ad  ld   $ad         ;0237 PEEK
              dd85 008c  ld   $8c         ;0238 XORI
              dd86 00ff  ld   $ff
              dd87 00f0  ld   $f0         ;023a POKE
              dd88 0034  ld   $34         ;023a 'q'
              dd89 002b  ld   $2b         ;023c STW
              dd8a 0024  ld   $24         ;023c '_sysArgs0'
              dd8b 008c  ld   $8c         ;023e XORI
              dd8c 00ff  ld   $ff
              dd8d 00f0  ld   $f0         ;0240 POKE
              dd8e 0034  ld   $34         ;0240 'q'
              dd8f 00fc  ld   $fc         ;0242 XORW
              dd90 0024  ld   $24         ;0242 '_sysArgs0'
              dd91 0035  ld   $35         ;0244 BCC
              dd92 003f  ld   $3f         ;0245 EQ
              dd93 004f  ld   $4f
              dd94 0059  ld   $59         ;0247 LDI
              dd95 0031  ld   $31
              dd96 002b  ld   $2b         ;0249 STW
              dd97 0036  ld   $36         ;0249 'Char'
              dd98 00cf  ld   $cf         ;024b CALL
              dd99 0038  ld   $38         ;024b 'PrintChar'
              dd9a 0059  ld   $59         ;024d LDI
              dd9b 0070  ld   $70
              dd9c 002b  ld   $2b         ;024f STW
              dd9d 0032  ld   $32         ;024f 'i'
              dd9e 0011  ld   $11         ;0251 LDWI
              dd9f 007c  ld   $7c
              dda0 0080  ld   $80
              dda1 00b4  ld   $b4         ;0254 SYS
              dda2 00fb  ld   $fb
              dda3 0011  ld   $11         ;0256 LDWI
              dda4 002f  ld   $2f
              dda5 002f  ld   $2f
              dda6 002b  ld   $2b         ;0259 STW
              dda7 0036  ld   $36         ;0259 'Char'
              dda8 0021  ld   $21         ;025b LDW
              dda9 0032  ld   $32         ;025b 'i'
              ddaa 0093  ld   $93         ;025d INC
              ddab 0036  ld   $36         ;025d 'Char'
              ddac 00e6  ld   $e6         ;025f SUBI
              ddad 0028  ld   $28
              ddae 0035  ld   $35         ;0261 BCC
              ddaf 0053  ld   $53         ;0262 GE
              ddb0 005b  ld   $5b
              ddb1 00e3  ld   $e3         ;0264 ADDI
              ddb2 0028  ld   $28
              ddb3 0093  ld   $93         ;0266 INC
              ddb4 0037  ld   $37         ;0266 'Char'+1
              ddb5 00e6  ld   $e6         ;0268 SUBI
              ddb6 0004  ld   $04
              ddb7 0035  ld   $35         ;026a BCC
              ddb8 0053  ld   $53         ;026b GE
              ddb9 0064  ld   $64
              ddba 00cf  ld   $cf         ;026d CALL
              ddbb 0038  ld   $38         ;026d 'PrintChar'
              ddbc 001a  ld   $1a         ;026f LD
              ddbd 0037  ld   $37         ;026f 'Char'+1
              ddbe 002b  ld   $2b         ;0271 STW
              ddbf 0036  ld   $36         ;0271 'Char'
              ddc0 00cf  ld   $cf         ;0273 CALL
              ddc1 0038  ld   $38         ;0273 'PrintChar'
              ddc2 0063  ld   $63         ;0275 POP
              ddc3 00ff  ld   $ff         ;0276 RET
              ddc4 002b  ld   $2b         ;0277 STW
              ddc5 003a  ld   $3a         ;0277 'CheckMemory'
              ddc6 00cd  ld   $cd         ;0279 DEF
              ddc7 009d  ld   $9d
              ddc8 0075  ld   $75         ;027b PUSH
              ddc9 002b  ld   $2b         ;027c STW
              ddca 003c  ld   $3c         ;027c 'Text'
              ddcb 0021  ld   $21         ;027e LDW
              ddcc 003c  ld   $3c         ;027e 'Text'
              ddcd 00ad  ld   $ad         ;0280 PEEK
              ddce 0035  ld   $35         ;0281 BCC
              ddcf 003f  ld   $3f         ;0282 EQ
              ddd0 009b  ld   $9b
              ddd1 002b  ld   $2b         ;0284 STW
              ddd2 0036  ld   $36         ;0284 'Char'
              ddd3 008c  ld   $8c         ;0286 XORI
              ddd4 000a  ld   $0a
              ddd5 0035  ld   $35         ;0288 BCC
              ddd6 003f  ld   $3f         ;0289 EQ
              ddd7 008d  ld   $8d
              ddd8 00cf  ld   $cf         ;028b CALL
              ddd9 0038  ld   $38         ;028b 'PrintChar'
              ddda 0090  ld   $90         ;028d BRA
              dddb 0097  ld   $97
              dddc 0059  ld   $59         ;028f LDI
              dddd 0002  ld   $02
              ddde 005e  ld   $5e         ;0291 ST
              dddf 003e  ld   $3e         ;0291 'Pos'
              dde0 001a  ld   $1a         ;0293 LD
              dde1 003f  ld   $3f         ;0293 'Pos'+1
              dde2 00e3  ld   $e3         ;0295 ADDI
              dde3 0008  ld   $08
              dde4 005e  ld   $5e         ;0297 ST
              dde5 003f  ld   $3f         ;0297 'Pos'+1
              dde6 0093  ld   $93         ;0299 INC
              dde7 003c  ld   $3c         ;0299 'Text'
              dde8 0090  ld   $90         ;029b BRA
              dde9 007c  ld   $7c
              ddea 0063  ld   $63         ;029d POP
              ddeb 00ff  ld   $ff         ;029e RET
              ddec 002b  ld   $2b         ;029f STW
              dded 0040  ld   $40         ;029f 'PrintS'
              ddee 00cd  ld   $cd         ;02a1 DEF
              ddef 00ec  ld   $ec
              ddf0 001a  ld   $1a         ;02a3 LD
              ddf1 0036  ld   $36         ;02a3 'Char'
              ddf2 00e6  ld   $e6         ;02a5 SUBI
              ddf3 0052  ld   $52
              ddf4 0035  ld   $35         ;02a7 BCC
              ddf5 0053  ld   $53         ;02a8 GE
              ddf6 00b1  ld   $b1
              ddf7 00e3  ld   $e3         ;02aa ADDI
              ddf8 0032  ld   $32
              ddf9 002b  ld   $2b         ;02ac STW
              ddfa 0032  ld   $32         ;02ac 'i'
              ddfb fe00  bra  ac          ;+-----------------------------------+
              ddfc fcfd  bra  $ddfd       ;|                                   |
              ddfd 1418  ld   $18,y       ;| Trampoline for page $dd00 lookups |
              ddfe e006  jmp  y,$06       ;|                                   |
              ddff c218  st   [$18]       ;+-----------------------------------+
              de00 0011  ld   $11         ;02ae LDWI
              de01 0000  ld   $00
              de02 0007  ld   $07
              de03 0090  ld   $90         ;02b1 BRA
              de04 00b6  ld   $b6
              de05 002b  ld   $2b         ;02b3 STW
              de06 0032  ld   $32         ;02b3 'i'
              de07 0011  ld   $11         ;02b5 LDWI
              de08 0000  ld   $00
              de09 0008  ld   $08
              de0a 002b  ld   $2b         ;02b8 STW
              de0b 0042  ld   $42         ;02b8 'j'
              de0c 0021  ld   $21         ;02ba LDW
              de0d 0032  ld   $32         ;02ba 'i'
              de0e 00e9  ld   $e9         ;02bc LSLW
              de0f 00e9  ld   $e9         ;02bd LSLW
              de10 0099  ld   $99         ;02be ADDW
              de11 0032  ld   $32         ;02be 'i'
              de12 0099  ld   $99         ;02c0 ADDW
              de13 0042  ld   $42         ;02c0 'j'
              de14 002b  ld   $2b         ;02c2 STW
              de15 0042  ld   $42         ;02c2 'j'
              de16 0011  ld   $11         ;02c4 LDWI
              de17 00e1  ld   $e1
              de18 0004  ld   $04
              de19 002b  ld   $2b         ;02c7 STW
              de1a 0022  ld   $22         ;02c7 '_sysFn'
              de1b 0011  ld   $11         ;02c9 LDWI
              de1c 0020  ld   $20
              de1d 003f  ld   $3f
              de1e 002b  ld   $2b         ;02cc STW
              de1f 0024  ld   $24
              de20 0021  ld   $21         ;02ce LDW
              de21 003e  ld   $3e         ;02ce 'Pos'
              de22 002b  ld   $2b         ;02d0 STW
              de23 0028  ld   $28
              de24 00e3  ld   $e3         ;02d2 ADDI
              de25 0006  ld   $06
              de26 002b  ld   $2b         ;02d4 STW
              de27 003e  ld   $3e         ;02d4 'Pos'
              de28 0059  ld   $59         ;02d6 LDI
              de29 0005  ld   $05
              de2a 002b  ld   $2b         ;02d8 STW
              de2b 0032  ld   $32         ;02d8 'i'
              de2c 0021  ld   $21         ;02da LDW
              de2d 0042  ld   $42         ;02da 'j'
              de2e 007f  ld   $7f         ;02dc LUP
              de2f 0000  ld   $00
              de30 005e  ld   $5e         ;02de ST
              de31 0026  ld   $26
              de32 00b4  ld   $b4         ;02e0 SYS
              de33 00cc  ld   $cc
              de34 0093  ld   $93         ;02e2 INC
              de35 0042  ld   $42         ;02e2 'j'
              de36 0093  ld   $93         ;02e4 INC
              de37 0028  ld   $28
              de38 0021  ld   $21         ;02e6 LDW
              de39 0032  ld   $32         ;02e6 'i'
              de3a 00e6  ld   $e6         ;02e8 SUBI
              de3b 0001  ld   $01
              de3c 0035  ld   $35         ;02ea BCC
              de3d 004d  ld   $4d         ;02eb GT
              de3e 00d6  ld   $d6
              de3f 00ff  ld   $ff         ;02ed RET
              de40 002b  ld   $2b         ;02ee STW
              de41 0038  ld   $38         ;02ee 'PrintChar'
              de42 0093  ld   $93         ;02f0 INC
              de43 001b  ld   $1b
              de44 00ff  ld   $ff         ;02f2 RET
              de45 0003  ld   $03         ;| RAM segment address (high byte first)
              de46 0000  ld   $00         ;|
              de47 00ea  ld   $ea         ;| Length (1..256)
              de48 00cd  ld   $cd         ;0300 DEF
              de49 0037  ld   $37
              de4a 002b  ld   $2b         ;0302 STW
              de4b 0032  ld   $32         ;0302 'i'
              de4c 0088  ld   $88         ;0304 ORI
              de4d 00ff  ld   $ff
              de4e 008c  ld   $8c         ;0306 XORI
              de4f 00ff  ld   $ff
              de50 0088  ld   $88         ;0308 ORI
              de51 00fa  ld   $fa
              de52 002b  ld   $2b         ;030a STW
              de53 0044  ld   $44         ;030a 'p'
              de54 001a  ld   $1a         ;030c LD
              de55 0032  ld   $32         ;030c 'i'
              de56 002b  ld   $2b         ;030e STW
              de57 0032  ld   $32         ;030e 'i'
              de58 0059  ld   $59         ;0310 LDI
              de59 0000  ld   $00
              de5a 00f0  ld   $f0         ;0312 POKE
              de5b 0044  ld   $44         ;0312 'p'
              de5c 0093  ld   $93         ;0314 INC
              de5d 0044  ld   $44         ;0314 'p'
              de5e 0059  ld   $59         ;0316 LDI
              de5f 0003  ld   $03
              de60 00f0  ld   $f0         ;0318 POKE
              de61 0044  ld   $44         ;0318 'p'
              de62 0093  ld   $93         ;031a INC
              de63 0044  ld   $44         ;031a 'p'
              de64 0011  ld   $11         ;031c LDWI
              de65 0000  ld   $00
              de66 0009  ld   $09
              de67 0099  ld   $99         ;031f ADDW
              de68 0032  ld   $32         ;031f 'i'
              de69 007f  ld   $7f         ;0321 LUP
              de6a 0000  ld   $00
              de6b 00f0  ld   $f0         ;0323 POKE
              de6c 0044  ld   $44         ;0323 'p'
              de6d 0093  ld   $93         ;0325 INC
              de6e 0044  ld   $44         ;0325 'p'
              de6f 0011  ld   $11         ;0327 LDWI
              de70 0000  ld   $00
              de71 0009  ld   $09
              de72 0099  ld   $99         ;032a ADDW
              de73 0032  ld   $32         ;032a 'i'
              de74 007f  ld   $7f         ;032c LUP
              de75 0001  ld   $01
              de76 00f0  ld   $f0         ;032e POKE
              de77 0044  ld   $44         ;032e 'p'
              de78 0093  ld   $93         ;0330 INC
              de79 0044  ld   $44         ;0330 'p'
              de7a 00f0  ld   $f0         ;0332 POKE
              de7b 0044  ld   $44         ;0332 'p'
              de7c 0093  ld   $93         ;0334 INC
              de7d 0044  ld   $44         ;0334 'p'
              de7e 00f0  ld   $f0         ;0336 POKE
              de7f 0044  ld   $44         ;0336 'p'
              de80 00ff  ld   $ff         ;0338 RET
              de81 002b  ld   $2b         ;0339 STW
              de82 0046  ld   $46         ;0339 'SetupChannel'
              de83 00cd  ld   $cd         ;033b DEF
              de84 00c9  ld   $c9
              de85 0075  ld   $75         ;033d PUSH
              de86 0059  ld   $59         ;033e LDI
              de87 0010  ld   $10
              de88 002b  ld   $2b         ;0340 STW
              de89 0042  ld   $42         ;0340 'j'
              de8a 0059  ld   $59         ;0342 LDI
              de8b 000a  ld   $0a
              de8c 002b  ld   $2b         ;0344 STW
              de8d 0032  ld   $32         ;0344 'i'
              de8e 00cf  ld   $cf         ;0346 CALL
              de8f 0048  ld   $48         ;0346 'SendOnesToCard'
              de90 0021  ld   $21         ;0348 LDW
              de91 0032  ld   $32         ;0348 'i'
              de92 00e6  ld   $e6         ;034a SUBI
              de93 0001  ld   $01
              de94 0035  ld   $35         ;034c BCC
              de95 004d  ld   $4d         ;034d GT
              de96 0042  ld   $42
              de97 0011  ld   $11         ;034f LDWI
              de98 0009  ld   $09
              de99 000b  ld   $0b
              de9a 002b  ld   $2b         ;0352 STW
              de9b 0022  ld   $22         ;0352 '_sysFn'
              de9c 0011  ld   $11         ;0354 LDWI
              de9d 0078  ld   $78
              de9e 0080  ld   $80
              de9f 00b4  ld   $b4         ;0357 SYS
              dea0 00fb  ld   $fb
              dea1 00cd  ld   $cd         ;0359 DEF
              dea2 0061  ld   $61
              dea3 00ff  ld   $ff         ;035b 255
              dea4 00ff  ld   $ff         ;035c 255
              dea5 0040  ld   $40         ;035d 64
              dea6 0000  ld   $00         ;035e 0
              dea7 0000  ld   $00         ;035f 0
              dea8 0000  ld   $00         ;0360 0
              dea9 0000  ld   $00         ;0361 0
              deaa 0095  ld   $95         ;0362 149
              deab 002b  ld   $2b         ;0363 STW
              deac 0044  ld   $44         ;0363 'p'
              dead 0059  ld   $59         ;0365 LDI
              deae 0081  ld   $81
              deaf 002b  ld   $2b         ;0367 STW
              deb0 0034  ld   $34         ;0367 'q'
              deb1 0059  ld   $59         ;0369 LDI
              deb2 0008  ld   $08
              deb3 002b  ld   $2b         ;036b STW
              deb4 0032  ld   $32         ;036b 'i'
              deb5 0021  ld   $21         ;036d LDW
              deb6 0044  ld   $44         ;036d 'p'
              deb7 00ad  ld   $ad         ;036f PEEK
              deb8 0093  ld   $93         ;0370 INC
              deb9 0044  ld   $44         ;0370 'p'
              deba 00f0  ld   $f0         ;0372 POKE
              debb 0034  ld   $34         ;0372 'q'
              debc 0093  ld   $93         ;0374 INC
              debd 0034  ld   $34         ;0374 'q'
              debe 0021  ld   $21         ;0376 LDW
              debf 0032  ld   $32         ;0376 'i'
              dec0 00e6  ld   $e6         ;0378 SUBI
              dec1 0001  ld   $01
              dec2 0035  ld   $35         ;037a BCC
              dec3 004d  ld   $4d         ;037b GT
              dec4 0069  ld   $69
              dec5 0059  ld   $59         ;037d LDI
              dec6 0081  ld   $81
              dec7 002b  ld   $2b         ;037f STW
              dec8 0024  ld   $24         ;037f '_sysArgs0'
              dec9 00e3  ld   $e3         ;0381 ADDI
              deca 0008  ld   $08
              decb 002b  ld   $2b         ;0383 STW
              decc 0026  ld   $26         ;0383 '_sysArgs2'
              decd 0011  ld   $11         ;0385 LDWI
              dece 0015  ld   $15
              decf 000b  ld   $0b
              ded0 002b  ld   $2b         ;0388 STW
              ded1 0022  ld   $22         ;0388 '_sysFn'
              ded2 00b4  ld   $b4         ;038a SYS
              ded3 00cc  ld   $cc
              ded4 0059  ld   $59         ;038c LDI
              ded5 0010  ld   $10
              ded6 002b  ld   $2b         ;038e STW
              ded7 0032  ld   $32         ;038e 'i'
              ded8 00cf  ld   $cf         ;0390 CALL
              ded9 0048  ld   $48         ;0390 'SendOnesToCard'
              deda 0082  ld   $82         ;0392 ANDI
              dedb 0080  ld   $80
              dedc 0035  ld   $35         ;0394 BCC
              dedd 003f  ld   $3f         ;0395 EQ
              dede 009c  ld   $9c
              dedf 0021  ld   $21         ;0397 LDW
              dee0 0032  ld   $32         ;0397 'i'
              dee1 00e6  ld   $e6         ;0399 SUBI
              dee2 0001  ld   $01
              dee3 0035  ld   $35         ;039b BCC
              dee4 004d  ld   $4d         ;039c GT
              dee5 008c  ld   $8c
              dee6 0011  ld   $11         ;039e LDWI
              dee7 0009  ld   $09
              dee8 000b  ld   $0b
              dee9 002b  ld   $2b         ;03a1 STW
              deea 0022  ld   $22         ;03a1 '_sysFn'
              deeb 0011  ld   $11         ;03a3 LDWI
              deec 007c  ld   $7c
              deed 0080  ld   $80
              deee 00b4  ld   $b4         ;03a6 SYS
              deef 00fb  ld   $fb
              def0 001a  ld   $1a         ;03a8 LD
              def1 002a  ld   $2a
              def2 0035  ld   $35         ;03aa BCC
              def3 003f  ld   $3f         ;03ab EQ
              def4 00c7  ld   $c7
              def5 008c  ld   $8c         ;03ad XORI
              def6 0001  ld   $01
              def7 0035  ld   $35         ;03af BCC
              def8 0072  ld   $72         ;03b0 NE
              def9 00c0  ld   $c0
              defa 0011  ld   $11         ;03b2 LDWI
              defb fe00  bra  ac          ;+-----------------------------------+
              defc fcfd  bra  $defd       ;|                                   |
              defd 1418  ld   $18,y       ;| Trampoline for page $de00 lookups |
              defe e006  jmp  y,$06       ;|                                   |
              deff c218  st   [$18]       ;+-----------------------------------+
              df00 00b4  ld   $b4
              df01 00ce  ld   $ce
              df02 002b  ld   $2b         ;03b5 STW
              df03 0024  ld   $24         ;03b5 '_sysArgs0'
              df04 0011  ld   $11         ;03b7 LDWI
              df05 0000  ld   $00
              df06 0002  ld   $02
              df07 002b  ld   $2b         ;03ba STW
              df08 001a  ld   $1a         ;03ba '_vLR'
              df09 0059  ld   $59         ;03bc LDI
              df0a 00ad  ld   $ad
              df0b 002b  ld   $2b         ;03be STW
              df0c 0022  ld   $22         ;03be '_sysFn'
              df0d 00b4  ld   $b4         ;03c0 SYS
              df0e 00e3  ld   $e3
              df0f 0021  ld   $21         ;03c2 LDW
              df10 0042  ld   $42         ;03c2 'j'
              df11 00e6  ld   $e6         ;03c4 SUBI
              df12 0001  ld   $01
              df13 0035  ld   $35         ;03c6 BCC
              df14 004d  ld   $4d         ;03c7 GT
              df15 003e  ld   $3e
              df16 0063  ld   $63         ;03c9 POP
              df17 00ff  ld   $ff         ;03ca RET
              df18 002b  ld   $2b         ;03cb STW
              df19 004a  ld   $4a         ;03cb 'CheckCard'
              df1a 00cd  ld   $cd         ;03cd DEF
              df1b 00e3  ld   $e3
              df1c 0059  ld   $59         ;03cf LDI
              df1d 00ff  ld   $ff
              df1e 005e  ld   $5e         ;03d1 ST
              df1f 002a  ld   $2a
              df20 0059  ld   $59         ;03d3 LDI
              df21 002a  ld   $2a
              df22 002b  ld   $2b         ;03d5 STW
              df23 0024  ld   $24         ;03d5 '_sysArgs0'
              df24 00e3  ld   $e3         ;03d7 ADDI
              df25 0001  ld   $01
              df26 002b  ld   $2b         ;03d9 STW
              df27 0026  ld   $26         ;03d9 '_sysArgs2'
              df28 0011  ld   $11         ;03db LDWI
              df29 0015  ld   $15
              df2a 000b  ld   $0b
              df2b 002b  ld   $2b         ;03de STW
              df2c 0022  ld   $22         ;03de '_sysFn'
              df2d 00b4  ld   $b4         ;03e0 SYS
              df2e 00cc  ld   $cc
              df2f 001a  ld   $1a         ;03e2 LD
              df30 002a  ld   $2a
              df31 00ff  ld   $ff         ;03e4 RET
              df32 002b  ld   $2b         ;03e5 STW
              df33 0048  ld   $48         ;03e5 'SendOnesToCard'
              df34 0093  ld   $93         ;03e7 INC
              df35 001b  ld   $1b
              df36 00ff  ld   $ff         ;03e9 RET
              df37 0004  ld   $04         ;| RAM segment address (high byte first)
              df38 0000  ld   $00         ;|
              df39 00d5  ld   $d5         ;| Length (1..256)
              df3a 0011  ld   $11         ;0400 LDWI
              df3b 000f  ld   $0f
              df3c 000b  ld   $0b
              df3d 002b  ld   $2b         ;0403 STW
              df3e 0022  ld   $22
              df3f 0059  ld   $59         ;0405 LDI
              df40 0000  ld   $00
              df41 00b4  ld   $b4         ;0407 SYS
              df42 00f6  ld   $f6
              df43 0011  ld   $11         ;0409 LDWI
              df44 0012  ld   $12
              df45 000b  ld   $0b
              df46 002b  ld   $2b         ;040c STW
              df47 0022  ld   $22
              df48 0059  ld   $59         ;040e LDI
              df49 0000  ld   $00
              df4a 00b4  ld   $b4         ;0410 SYS
              df4b 00f8  ld   $f8
              df4c 00b4  ld   $b4         ;0412 SYS
              df4d 00f8  ld   $f8
              df4e 00b4  ld   $b4         ;0414 SYS
              df4f 00f8  ld   $f8
              df50 00b4  ld   $b4         ;0416 SYS
              df51 00f8  ld   $f8
              df52 0011  ld   $11         ;0418 LDWI
              df53 0058  ld   $58
              df54 0001  ld   $01
              df55 00cf  ld   $cf         ;041b CALL
              df56 0046  ld   $46         ;041b 'SetupChannel'
              df57 0011  ld   $11         ;041d LDWI
              df58 0070  ld   $70
              df59 0002  ld   $02
              df5a 00cf  ld   $cf         ;0420 CALL
              df5b 0046  ld   $46         ;0420 'SetupChannel'
              df5c 0011  ld   $11         ;0422 LDWI
              df5d 0078  ld   $78
              df5e 0003  ld   $03
              df5f 00cf  ld   $cf         ;0425 CALL
              df60 0046  ld   $46         ;0425 'SetupChannel'
              df61 0011  ld   $11         ;0427 LDWI
              df62 007e  ld   $7e
              df63 0004  ld   $04
              df64 00cf  ld   $cf         ;042a CALL
              df65 0046  ld   $46         ;042a 'SetupChannel'
              df66 0011  ld   $11         ;042c LDWI
              df67 0000  ld   $00
              df68 0001  ld   $01
              df69 002b  ld   $2b         ;042f STW
              df6a 0044  ld   $44         ;042f 'p'
              df6b 0011  ld   $11         ;0431 LDWI
              df6c 0000  ld   $00
              df6d 0008  ld   $08
              df6e 002b  ld   $2b         ;0434 STW
              df6f 0034  ld   $34         ;0434 'q'
              df70 001a  ld   $1a         ;0436 LD
              df71 0035  ld   $35         ;0436 'q'+1
              df72 00f0  ld   $f0         ;0438 POKE
              df73 0044  ld   $44         ;0438 'p'
              df74 0093  ld   $93         ;043a INC
              df75 0044  ld   $44         ;043a 'p'
              df76 0059  ld   $59         ;043c LDI
              df77 0000  ld   $00
              df78 00f0  ld   $f0         ;043e POKE
              df79 0044  ld   $44         ;043e 'p'
              df7a 0093  ld   $93         ;0440 INC
              df7b 0044  ld   $44         ;0440 'p'
              df7c 0093  ld   $93         ;0442 INC
              df7d 0035  ld   $35         ;0442 'q'+1
              df7e 0021  ld   $21         ;0444 LDW
              df7f 0034  ld   $34         ;0444 'q'
              df80 0035  ld   $35         ;0446 BCC
              df81 004d  ld   $4d         ;0447 GT
              df82 0034  ld   $34
              df83 0011  ld   $11         ;0449 LDWI
              df84 0003  ld   $03
              df85 000b  ld   $0b
              df86 002b  ld   $2b         ;044c STW
              df87 0022  ld   $22         ;044c '_sysFn'
              df88 0059  ld   $59         ;044e LDI
              df89 0020  ld   $20
              df8a 005e  ld   $5e         ;0450 ST
              df8b 0025  ld   $25
              df8c 0011  ld   $11         ;0452 LDWI
              df8d 0000  ld   $00
              df8e 0008  ld   $08
              df8f 002b  ld   $2b         ;0455 STW
              df90 0044  ld   $44         ;0455 'p'
              df91 002b  ld   $2b         ;0457 STW
              df92 0026  ld   $26         ;0457 '_sysArgs2'
              df93 0059  ld   $59         ;0459 LDI
              df94 00a0  ld   $a0
              df95 005e  ld   $5e         ;045b ST
              df96 0024  ld   $24
              df97 00b4  ld   $b4         ;045d SYS
              df98 00f4  ld   $f4
              df99 0011  ld   $11         ;045f LDWI
              df9a 0000  ld   $00
              df9b 0001  ld   $01
              df9c 0099  ld   $99         ;0462 ADDW
              df9d 0044  ld   $44         ;0462 'p'
              df9e 0035  ld   $35         ;0464 BCC
              df9f 004d  ld   $4d         ;0465 GT
              dfa0 0053  ld   $53
              dfa1 001a  ld   $1a         ;0467 LD
              dfa2 002e  ld   $2e
              dfa3 0082  ld   $82         ;0469 ANDI
              dfa4 0080  ld   $80
              dfa5 0035  ld   $35         ;046b BCC
              dfa6 0072  ld   $72         ;046c NE
              dfa7 0070  ld   $70
              dfa8 005e  ld   $5e         ;046e ST
              dfa9 002e  ld   $2e
              dfaa 005e  ld   $5e         ;0470 ST
              dfab 002d  ld   $2d
              dfac 0059  ld   $59         ;0472 LDI
              dfad 0009  ld   $09
              dfae 005e  ld   $5e         ;0474 ST
              dfaf 002f  ld   $2f
              dfb0 0011  ld   $11         ;0476 LDWI
              dfb1 0014  ld   $14
              dfb2 0008  ld   $08
              dfb3 002b  ld   $2b         ;0479 STW
              dfb4 003e  ld   $3e         ;0479 'Pos'
              dfb5 00cd  ld   $cd         ;047b DEF
              dfb6 0089  ld   $89
              dfb7 002a  ld   $2a         ;047d '*'
              dfb8 002a  ld   $2a         ;047e '*'
              dfb9 002a  ld   $2a         ;047f '*'
              dfba 0020  ld   $20         ;0480 ' '
              dfbb 0047  ld   $47         ;0481 'G'
              dfbc 0069  ld   $69         ;0482 'i'
              dfbd 0067  ld   $67         ;0483 'g'
              dfbe 0061  ld   $61         ;0484 'a'
              dfbf 0074  ld   $74         ;0485 't'
              dfc0 0072  ld   $72         ;0486 'r'
              dfc1 006f  ld   $6f         ;0487 'o'
              dfc2 006e  ld   $6e         ;0488 'n'
              dfc3 0020  ld   $20         ;0489 ' '
              dfc4 0000  ld   $00         ;048a 0
              dfc5 00cf  ld   $cf         ;048b CALL
              dfc6 0040  ld   $40         ;048b 'PrintS'
              dfc7 00cf  ld   $cf         ;048d CALL
              dfc8 003a  ld   $3a         ;048d 'CheckMemory'
              dfc9 00cd  ld   $cd         ;048f DEF
              dfca 00b0  ld   $b0
              dfcb 004b  ld   $4b         ;0491 'K'
              dfcc 0020  ld   $20         ;0492 ' '
              dfcd 002a  ld   $2a         ;0493 '*'
              dfce 002a  ld   $2a         ;0494 '*'
              dfcf 002a  ld   $2a         ;0495 '*'
              dfd0 0020  ld   $20         ;0496 ' '
              dfd1 000a  ld   $0a         ;0497 10
              dfd2 0020  ld   $20         ;0498 ' '
              dfd3 0054  ld   $54         ;0499 'T'
              dfd4 0054  ld   $54         ;049a 'T'
              dfd5 004c  ld   $4c         ;049b 'L'
              dfd6 0020  ld   $20         ;049c ' '
              dfd7 006d  ld   $6d         ;049d 'm'
              dfd8 0069  ld   $69         ;049e 'i'
              dfd9 0063  ld   $63         ;049f 'c'
              dfda 0072  ld   $72         ;04a0 'r'
              dfdb 006f  ld   $6f         ;04a1 'o'
              dfdc 0063  ld   $63         ;04a2 'c'
              dfdd 006f  ld   $6f         ;04a3 'o'
              dfde 006d  ld   $6d         ;04a4 'm'
              dfdf 0070  ld   $70         ;04a5 'p'
              dfe0 0075  ld   $75         ;04a6 'u'
              dfe1 0074  ld   $74         ;04a7 't'
              dfe2 0065  ld   $65         ;04a8 'e'
              dfe3 0072  ld   $72         ;04a9 'r'
              dfe4 0020  ld   $20         ;04aa ' '
              dfe5 0052  ld   $52         ;04ab 'R'
              dfe6 004f  ld   $4f         ;04ac 'O'
              dfe7 004d  ld   $4d         ;04ad 'M'
              dfe8 0076  ld   $76         ;04ae 'v'
              dfe9 0058  ld   $58         ;04af 'X'
              dfea 0030  ld   $30         ;04b0 '0'
              dfeb 0000  ld   $00         ;04b1 0
              dfec 00cf  ld   $cf         ;04b2 CALL
              dfed 0040  ld   $40         ;04b2 'PrintS'
              dfee 0011  ld   $11         ;04b4 LDWI
              dfef 0000  ld   $00
              dff0 000b  ld   $0b
              dff1 002b  ld   $2b         ;04b7 STW
              dff2 0022  ld   $22         ;04b7 '_sysFn'
              dff3 0059  ld   $59         ;04b9 LDI
              dff4 0001  ld   $01
              dff5 00b4  ld   $b4         ;04bb SYS
              dff6 00e7  ld   $e7
              dff7 0021  ld   $21         ;04bd LDW
              dff8 0030  ld   $30         ;04bd 'CtrlBits'
              dff9 00ad  ld   $ad         ;04bf PEEK
              dffa 0035  ld   $35         ;04c0 BCC
              dffb fe00  bra  ac          ;+-----------------------------------+
              dffc fcfd  bra  $dffd       ;|                                   |
              dffd 1418  ld   $18,y       ;| Trampoline for page $df00 lookups |
              dffe e006  jmp  y,$06       ;|                                   |
              dfff c218  st   [$18]       ;+-----------------------------------+
              e000 003f  ld   $3f         ;04c1 EQ
              e001 00c3  ld   $c3
              e002 00cf  ld   $cf         ;04c3 CALL
              e003 004a  ld   $4a         ;04c3 'CheckCard'
              e004 0011  ld   $11         ;04c5 LDWI
              e005 002c  ld   $2c
              e006 00da  ld   $da
              e007 002b  ld   $2b         ;04c8 STW
              e008 0024  ld   $24         ;04c8 '_sysArgs0'
              e009 0011  ld   $11         ;04ca LDWI
              e00a 0000  ld   $00
              e00b 0002  ld   $02
              e00c 002b  ld   $2b         ;04cd STW
              e00d 001a  ld   $1a         ;04cd '_vLR'
              e00e 0059  ld   $59         ;04cf LDI
              e00f 00ad  ld   $ad
              e010 002b  ld   $2b         ;04d1 STW
              e011 0022  ld   $22         ;04d1 '_sysFn'
              e012 00b4  ld   $b4         ;04d3 SYS
              e013 00e3  ld   $e3
              e014 0000  ld   $00         ;End of Core/Reset_vX0.gcl, size 715
sys_ReadRomDir:
              e015 f01b  beq  .sysDir#20
              e016 1024  ld   $24,x
              e017 1600  ld   ac,y
              e018 0118  ld   [$18]
              e019 a00e  suba $0e
              e01a e200  jmp  y,ac
.sysDir#20:   e01b 1400  ld   $00,y
              e01c 0020  ld   $20
              e01d 14e0  ld   $e0,y
              e01e e200  jmp  y,ac
              e01f 1400  ld   $00,y
.sysDir#25:   e020 dc52  st   $52,[y,x++] ;'R'
              e021 dc65  st   $65,[y,x++] ;'e'
              e022 dc73  st   $73,[y,x++] ;'s'
              e023 dc65  st   $65,[y,x++] ;'e'
              e024 dc74  st   $74,[y,x++] ;'t'
              e025 dc00  st   $00,[y,x++] ;'\x00'
              e026 dc00  st   $00,[y,x++] ;'\x00'
              e027 dc00  st   $00,[y,x++] ;'\x00'
              e028 004a  ld   $4a
              e029 c218  st   [$18]
              e02a 00dd  ld   $dd
              e02b 14e0  ld   $e0,y
              e02c e02e  jmp  y,$2e
              e02d c219  st   [$19]
.sysDir#39:   e02e 1403  ld   $03,y
              e02f e0cb  jmp  y,$cb
              e030 00ea  ld   $ea
              e031 0200  nop              ;202 fillers
              e032 0200  nop
              e033 0200  nop
              * 202 times
              e0fb fe00  bra  ac          ;+-----------------------------------+
              e0fc fcfd  bra  $e0fd       ;|                                   |
              e0fd 1418  ld   $18,y       ;| Trampoline for page $e000 lookups |
              e0fe e006  jmp  y,$06       ;|                                   |
              e0ff c218  st   [$18]       ;+-----------------------------------+
              e100
