* source: Core/ROMvX0.asm.py
                                          186   enableListing()
                                          187   #-----------------------------------------------------------------------
                                          188   #
                                          189   #  Start of core
                                          190   #
                                          191   #-----------------------------------------------------------------------
                                          192   #
                                          193   # Pre-loading the formal interface as a way to get warnings when
                                          194   # accidentally redefined with a different value
                                          195   loadBindings('ROMvX0_interface.json')
                                          196   loadBindings('Core/interface-dev.json') # Provisional values for DEVROM
                                          197
                                          198   # Gigatron clock
                                          199   cpuClock = 6.250e+06
                                          200
                                          201   # Output pin assignment for VGA
                                          202   R, G, B, hSync, vSync = 1, 4, 16, 64, 128
                                          203   syncBits = hSync+vSync # Both pulses negative
                                          204
                                          205   # When the XOUT register is in the circuit, the rising edge triggers its update.
                                          206   # The loop can therefore not be agnostic to the horizontal pulse polarity.
                                          207   assert syncBits & hSync != 0
                                          208
                                          209   # VGA 640x480 defaults (to be adjusted below!)
                                          210   vFront = 10     # Vertical front porch
                                          211   vPulse = 2      # Vertical sync pulse
                                          212   vBack  = 33     # Vertical back porch
                                          213   vgaLines = vFront + vPulse + vBack + 480
                                          214   vgaClock = 25.175e+06
                                          215
                                          216   # Video adjustments for Gigatron
                                          217   # 1. Our clock is (slightly) slower than 1/4th VGA clock. Not all monitors will
                                          218   #    accept the decreased frame rate, so we restore the frame rate to above
                                          219   #    minimum 59.94 Hz by cutting some lines from the vertical front porch.
                                          220   vFrontAdjust = vgaLines - int(4 * cpuClock / vgaClock * vgaLines)
                                          221   vFront -= vFrontAdjust
                                          222   # 2. Extend vertical sync pulse so we can feed the game controller the same
                                          223   #    signal. This is needed for controllers based on the 4021 instead of 74165
                                          224   vPulseExtension = max(0, 8-vPulse)
                                          225   vPulse += vPulseExtension
                                          226   # 3. Borrow these lines from the back porch so the refresh rate remains
                                          227   #    unaffected
                                          228   vBack -= vPulseExtension
                                          229
                                          230   # Start value of vertical blank counter
                                          231   videoYline0 = 1-2*(vFront+vPulse+vBack-2)
                                          232
                                          233   # Mismatch between video lines and sound channels
                                          234   soundDiscontinuity = (vFront+vPulse+vBack) % 4
                                          235
                                          236   # QQVGA resolution
                                          237   qqVgaWidth      = 160
                                          238   qqVgaHeight     = 120
                                          239
                                          240   # Game controller bits (actual controllers in kit have negative output)
                                          241   # +----------------------------------------+
                                          242   # |       Up                        B*     |
                                          243   # |  Left    Right               B     A*  |
                                          244   # |      Down      Select Start     A      |
                                          245   # +----------------------------------------+ *=Auto fire
                                          246   buttonRight     = 1
                                          247   buttonLeft      = 2
                                          248   buttonDown      = 4
                                          249   buttonUp        = 8
                                          250   buttonStart     = 16
                                          251   buttonSelect    = 32
                                          252   buttonB         = 64
                                          253   buttonA         = 128
                                          254
                                          255   #-----------------------------------------------------------------------
                                          256   #
                                          257   #  RAM page 0: zero-page variables
                                          258   #
                                          259   #-----------------------------------------------------------------------
                                          260   #
                                          261   # Memory size in pages from auto-detect
                                          262   memSize         = zpByte()
                                          263
                                          264   # Active interpreter page, swapped with channel, so that we can do a one
                                          265   # instruction vCpuSelect reset, i.e. st(vCpuSelect,[vCpuSelect])
                                          266   vCpuSelect      = zpByte()
                                          267
                                          268   # Next sound sample being synthesized
                                          269   sample          = zpByte()
                                          270   # To save one instruction in the critical inner loop, `sample' is always
                                          271   # reset with its own address instead of, for example, the value 0. Compare:
                                          272   # 1 instruction reset
                                          273   #       st sample,[sample]
                                          274   # 2 instruction reset:
                                          275   #       ld 0
                                          276   #       st [sample]
                                          277   # The difference is not audible. This is fine when the reset/address
                                          278   # value is low and doesn't overflow with 4 channels added to it.
                                          279   # There is an alternative, but it requires pull-down diodes on the data bus:
                                          280   #       st [sample],[sample]
                                          281   assert 4*63 + sample < 256
                                          282   # We pin this reset/address value to 3, so `sample' swings from 3 to 255
                                          283   assert sample == 3
                                          284
                                          285   # Former bootCount and bootCheck (<= ROMv3)
                                          286   vSPH             = zpByte()
                                          287
                                          288   # The current channel number for sound generation. Advanced every scan line
                                          289   # and independent of the vertical refresh to maintain constant oscillation.
                                          290   channel         = zpByte()
                                          291
                                          292   # Entropy harvested from SRAM startup and controller input
                                          293   entropy         = zpByte(2)
                                          294
                                          295   # Audio quantisation bit mask, (needs a HW mod for full realisation)
                                          296   audioBitMask    = zpByte() # 0xFF:0bits to 0x00:8bits, default 0x0F:4bits
                                          297
                                          298   # Visible video
                                          299   videoY          = zpByte() # Counts up from 0 to 238 in steps of 2
                                          300                              # Counts up (and is odd) during vertical blank
                                          301   videoModeB      = zpByte() # Handler for every 2nd line (pixel burst or vCPU)
                                          302   videoModeC      = zpByte() # Handler for every 3rd line (pixel burst or vCPU)
                                          303   videoModeD      = zpByte() # Handler for every 4th line (pixel burst or vCPU)
                                          304
                                          305   nextVideo       = zpByte() # Jump offset to scan line handler (videoA, B, C...)
                                          306   videoPulse      = nextVideo # Used for pulse width modulation
                                          307
                                          308   # Frame counter is good enough as system clock
                                          309   frameCount      = zpByte(1)
                                          310
                                          311   # Serial input (game controller)
                                          312   serialRaw       = zpByte() # New raw serial read
                                          313   serialLast      = zpByte() # Previous serial read
                                          314   buttonState     = zpByte() # Clearable button state
                                          315   resetTimer      = zpByte() # After 2 seconds of holding 'Start', do a soft reset
                                          316                              # XXX move to page 1 to free up space
                                          317
                                          318   # Extended output (blinkenlights in bit 0:3 and audio in bit 4:7). This
                                          319   # value must be present in AC during a rising hSync edge. It then gets
                                          320   # copied to the XOUT register by the hardware. The XOUT register is only
                                          321   # accessible in this indirect manner because it isn't part of the core
                                          322   # CPU architecture.
                                          323   xout            = zpByte()
                                          324   xoutMask        = zpByte() # The blinkenlights and sound on/off state
                                          325
                                          326   # vCPU interpreter
                                          327   vTicks          = zpByte()  # Interpreter ticks are units of 2 clocks
                                          328   vPC             = zpByte(2) # Interpreter program counter, points into RAM
                                          329   vAC             = zpByte(2) # Interpreter accumulator, 16-bits
                                          330   vLR             = zpByte(2) # Return address, for returning after CALL
                                          331   vSP             = zpByte(1) # Stack pointer
                                          332   vTmp            = zpByte()
                                          333   vReturn         = zpByte()  # Return into video loop (in page of vBlankStart)
                                          334
                                          335   # Scratch
                                          336   frameX          = zpByte() # Starting byte within page
                                          337   frameY          = zpByte() # Page of current pixel line (updated by videoA)
                                          338
                                          339   # Vertical blank (reuse some variables used in the visible part)
                                          340   videoSync0      = frameX   # Vertical sync type on current line (0xc0 or 0x40)
                                          341   videoSync1      = frameY   # Same during horizontal pulse (0x80 or 0x00)
                                          342
                                          343   # Versioning for GT1 compatibility
                                          344   # Please refer to Docs/GT1-files.txt for interpreting this variable
                                          345   romType         = zpByte(1)
                                          346
                                          347   # The low 3 bits are repurposed to select the actively updated sound channels.
                                          348   # Valid bit combinations are:
                                          349   #  xxxxx011     Default after reset: 4 channels (page 1,2,3,4)
                                          350   #  xxxxx001     2 channels at double update rate (page 1,2)
                                          351   #  xxxxx000     1 channel at quadruple update rate (page 1)
                                          352   # The main application for this is to free up the high bytes of page 2,3,4.
                                          353   channelMask = symbol('channelMask_v4')
                                          354   assert romType == channelMask
                                          355
                                          356   # SYS function arguments and results/scratch
                                          357   sysFn           = zpByte(2)
                                          358   sysArgs         = zpByte(8)
                                          359
                                          360   # Play sound if non-zero, count down and stop sound when zero
                                          361   soundTimer      = zpByte()
                                          362
                                          363   # Fow now the LED state machine itself is hard-coded in the program ROM
                                          364   #ledTimer        = zpByte() # Number of ticks until next LED change
                                          365   #ledState_v2     = zpByte() # Current LED state
                                          366   #ledTempo        = zpByte() # Next value for ledTimer after LED state change
                                          367   jiffiesTick     = zpByte() # VBlank ticks
                                          368   secondsTickLo   = zpByte() # Seconds ticks low byte
                                          369   secondsTickHi   = zpByte() # Seconds ticks high byte
                                          370
                                          371   # All bytes above userVars, except 0x80, are potentially usable by user code
                                          372   # that refrains from using ROM facilities introduced since ROMv5a.
                                          373   userVars        = zpByte(0)
                                          374
                                          375   # [0x30-0x35]
                                          376   # Saved vCPU context during vIRQ (since ROMv5a)
                                          377   # Code that uses vCPU interrupts should not use these locations.
                                          378   # area register save area
                                          379   vIrqSave        = zpByte(6)
                                          380   userVars1       = zpByte(0)
                                          381
                                          382   # [0x80]
                                          383   # Constant 0x01.
                                          384   zpReset(0x80)
                                          385   oneConst        = zpByte(1)
                                          386   userVars2       = zpByte(0)
                                          387
                                          388   # [0x82-0xB7]
                                          389   # Scratch for certain ops and sys calls introduced in ROMvX0.
                                          390   # Pending more specific information to be inserted here.
                                          391   zpReset(0x82)
                                          392   vX0Scratch      = zpByte(0xB8-0x82)
                                          393
                                          394   # [0xB8-0xBF]
                                          395   # State for ROMvX0 SYS calls with vCPU callbacks.
                                          396   # Pending more specific information to be inserted here.
                                          397   vX0State        = zpByte(0xC0-0xB8)
                                          398
                                          399   # [0xC0-0xCF]
                                          400   # Fixed locations for ROMvX0 opcodes that operate on long and floats.
                                          401   # Pending more specific information to be inserted here.
                                          402   vFAC_reserved   = zpByte(4)     # reserved for float accumulator
                                          403   vLAC            = zpByte(4)     # long accumulator/continued float accumulator
                                          404   vTmpL           = zpByte(4)     # long scratch register
                                          405   vDST            = zpByte(2)     # destination address for copy opcodes.
                                          406   vTmpW           = zpByte(2)     # word scratch register
                                          407
                                          408
                                          409
                                          410   #-----------------------------------------------------------------------
                                          411   #
                                          412   #  RAM page 1: video line table
                                          413   #
                                          414   #-----------------------------------------------------------------------
                                          415   #
                                          416   # Byte 0-239 define the video lines
                                          417   videoTable      = 0x0100 # Indirection table: Y[0] dX[0]  ..., Y[119] dX[119]
                                          418
                                          419   vReset          = 0x01f0
                                          420   vIRQ_v5         = 0x01f6
                                          421   ctrlBits        = 0x01f8
                                          422   videoTop_v5     = 0x01f9 # Number of skip lines
                                          423
                                          424   # Highest bytes are for sound channel variables
                                          425   wavA = 250      # Waveform modulation with `adda'
                                          426   wavX = 251      # Waveform modulation with `xora'
                                          427   keyL = 252      # Frequency low 7 bits (bit7 == 0)
                                          428   keyH = 253      # Frequency high 8 bits
                                          429   oscL = 254      # Phase low 7 bits
                                          430   oscH = 255      # Phase high 8 bits
                                          431
                                          432   #-----------------------------------------------------------------------
                                          433   #  Memory layout
                                          434   #-----------------------------------------------------------------------
                                          435
                                          436   userCode = 0x0200       # Application vCPU code
                                          437   soundTable = 0x0700     # Wave form tables (doubles as right-shift-2 table)
                                          438   screenMemory = 0x0800   # Default start of screen memory: 0x0800 to 0x7fff
                                          439
                                          440   #-----------------------------------------------------------------------
                                          441   #  Application definitions
                                          442   #-----------------------------------------------------------------------
                                          443
                                          444   maxTicks = 30//2                 # Duration of vCPU's slowest virtual opcode (ticks)
                                          445   minTicks = 14//2                 # vcPU's fastest instruction
                                          446   v6502_maxTicks = 38//2           # Max duration of v6502 processing phase (ticks)
                                          447
                                          448   runVcpu_overhead = 5            # Caller overhead (cycles)
                                          449   vCPU_overhead = 9               # Callee overhead of jumping in and out (cycles)
                                          450   v6502_overhead = 11             # Callee overhead for v6502 (cycles)
                                          451
                                          452   v6502_adjust = (v6502_maxTicks - maxTicks) + (v6502_overhead - vCPU_overhead)//2
                                          453   assert v6502_adjust >= 0        # v6502's overhead is a bit more than vCPU
                                          454
                                          455   def runVcpu(n, ref=None, returnTo=None):
                                          456     """Macro to run interpreter for exactly n cycles. Returns 0 in AC.
                                          457
                                          458     - `n' is the number of available Gigatron cycles including overhead.
                                          459       This is converted into interpreter ticks and takes into account
                                          460       the vCPU calling overheads. A `nop' is inserted when necessary
                                          461       for alignment between cycles and ticks.
                                          462     - `returnTo' is where program flow continues after return. If not set
                                          463        explicitely, it will be the first instruction behind the expansion.
                                          464     - If another interpreter than vCPU is active (v6502...), that one
                                          465       must adjust for the timing differences, because runVcpu wouldn't know."""
                                          466
                                          467     overhead = runVcpu_overhead + vCPU_overhead
                                          468     if returnTo == 0x100:         # Special case for videoZ
                                          469       overhead -= 2
                                          470
                                          471     if n is None:
                                          472       # (Clumsily) create a maximum time slice, corresponding to a vTicks
                                          473       # value of 127 (giving 282 cycles). A higher value doesn't work because
                                          474       # then SYS functions that just need 28 cycles (0 excess) won't start.
                                          475       n = (127 + maxTicks) * 2 + overhead
                                          476
                                          477     n -= overhead
                                          478     assert n > 0
                                          479
                                          480     if n % 2 == 1:
                                          481       nop()                       # Tick alignment
                                          482       n -= 1
                                          483     assert n % 2 == 0
                                          484
                                          485     print('runVcpu at $%04x net cycles %3s info %s' % (pc(), n, ref))
                                          486
                                          487     if returnTo != 0x100:
                                          488       if returnTo is None:
                                          489         returnTo = pc() + 5       # Next instruction
                                          490       ld(lo(returnTo))            #0
                                          491       st([vReturn])               #1
                                          492
                                          493     n //= 2
                                          494     n -= maxTicks                 # First instruction always runs
                                          495     assert n < 128
                                          496     assert n >= v6502_adjust
                                          497
                                          498     ld([vCpuSelect],Y)            #2
                                          499     jmp(Y,'ENTER')                #3
                                          500     ld(n)                         #4
                                          501   assert runVcpu_overhead ==       5
                                          502
                                          503   #-----------------------------------------------------------------------
                                          504   #       v6502 definitions
                                          505   #-----------------------------------------------------------------------
                                          506   #
                                          507   # Registers are zero page variables
                                          508   v6502_PC        = vLR           # Program Counter
                                          509   v6502_PCL       = vLR+0         # Program Counter Low
                                          510   v6502_PCH       = vLR+1         # Program Counter High
                                          511   v6502_S         = vSP           # Stack Pointer (kept as "S+1")
                                          512   v6502_A         = vAC+0         # Accumulator
                                          513   v6502_BI        = vAC+1         # B Input Register (used by SBC)
                                          514   v6502_ADL       = sysArgs+0     # Low Address Register
                                          515   v6502_ADH       = sysArgs+1     # High Address Register
                                          516   v6502_IR        = sysArgs+2     # Instruction Register
                                          517   v6502_P         = sysArgs+3     # Processor Status Register (V flag in bit 7)
                                          518   v6502_Qz        = sysArgs+4     # Quick Status Register for Z flag
                                          519   v6502_Qn        = sysArgs+5     # Quick Status Register for N flag
                                          520   v6502_X         = sysArgs+6     # Index Register X
                                          521   v6502_Y         = sysArgs+7     # Index Register Y
                                          522   v6502_Tmp       = vTmp          # Scratch (may be clobbered outside v6502)
                                          523
                                          524   # MOS 6502 definitions for P register
                                          525   v6502_Cflag = 1                 # Carry Flag (unsigned overflow)
                                          526   v6502_Zflag = 2                 # Zero Flag (all bits zero)
                                          527   v6502_Iflag = 4                 # Interrupt Enable Flag (1=Disable)
                                          528   v6502_Dflag = 8                 # Decimal Enable Flag (aka BCD mode, 1=Enable)
                                          529   v6502_Bflag = 16                # Break (or PHP) Instruction Flag
                                          530   v6502_Uflag = 32                # Unused (always 1)
                                          531   v6502_Vflag = 64                # Overflow Flag (signed overflow)
                                          532   v6502_Nflag = 128               # Negative Flag (bit 7 of result)
                                          533
                                          534   # In emulation it is much faster to keep the V flag in bit 7
                                          535   # This can be corrected when importing/exporting with PHP, PLP, etc
                                          536   v6502_Vemu = 128
                                          537
                                          538   # On overflow:
                                          539   #       """Overflow is set if two inputs with the same sign produce
                                          540   #          a result with a different sign. Otherwise it is clear."""
                                          541   # Formula (without carry/borrow in!):
                                          542   #       (A ^ (A+B)) & (B ^ (A+B)) & 0x80
                                          543   # References:
                                          544   #       http://www.righto.com/2012/12/the-6502-overflow-flag-explained.html
                                          545   #       http://6502.org/tutorials/vflag.html
                                          546
                                          547   # Memory layout
                                          548   v6502_Stack     = 0x0000        # 0x0100 is already used in the Gigatron
                                          549   #v6502_NMI      = 0xfffa
                                          550   #v6502_RESET    = 0xfffc
                                          551   #v6502_IRQ      = 0xfffe
                                          552
                                          553
                                          554   #-----------------------------------------------------------------------
                                          555   #
                                          556   #  $0000 ROM page 0: Boot
                                          557   #
                                          558   #-----------------------------------------------------------------------
                                          559
                                          560   align(0x100, size=0x80)
                                          561
                                          562   # ROM type (see also Docs/GT1-files.txt)
                                          563   romTypeValue = symbol('romTypeValue_ROMvX0')
                                          564
                                          565   #ROM's from ROMvX0 onwards will always have the romType at a fixed and known location
              address
              |    encoding
              |    |     instruction
              |    |     |    operands
              |    |     |    |
              V    V     V    V
              0000 0080  ld   $80         566   ld(romTypeValue)
                                          567
                                          568   # Give a first sign of life that can be checked with a voltmeter
              0001 000f  ld   $0f         569   ld(0b1111)                      # LED's
              0002 1880  ld   $80,out     570   ld(syncBits^hSync,OUT)          # Prepare XOUT update, hSync goes down, RGB to black
              0003 18c0  ld   $c0,out     571   ld(syncBits,OUT)                # hSync goes up, updating XOUT, (turn on real LED's)
                                          572
                                          573   # Setup I/O and RAM expander
              0004 c17f  ctrl $7f         574   ctrl(0b01111111)                # Expansion board: (1) reset signal.
              0005 c17c  ctrl $7c         575   ctrl(0b01111100)                # (2) disable SPI slaves, enable RAM bank 1
                                          576   #      ^^^^^^^^
                                          577   #      |||||||`-- SCLK
                                          578   #      ||||||`--- Not connected
                                          579   #      |||||`---- /SS0
                                          580   #      ||||`----- /SS1
                                          581   #      |||`------ /SS2
                                          582   #      ||`------- /SS3
                                          583   #      |`-------- B0
                                          584   #      `--------- B1
                                          585   # bit15 --------- MOSI = 0
                                          586
                                          587   # Simple RAM test and size check by writing to [1<<n] and see if [0] changes or not.
              0006 0001  ld   $01         588   ld(1)                           # Quick RAM test and count
                                          589   label('.countMem0')
.countMem0:   0007 d601  st   [$01],y     590   st([memSize],Y)                 # Store in RAM and load AC in Y
              0008 00ff  ld   $ff         591   ld(255)
              0009 6900  xora [y,$00]     592   xora([Y,0])                     # Invert value from memory
              000a ca00  st   [y,$00]     593   st([Y,0])                       # Test RAM by writing the new value
              000b c200  st   [$00]       594   st([0])                         # Copy result in [0]
              000c 6900  xora [y,$00]     595   xora([Y,0])                     # Read back and compare if written ok
              000d ec0d  bne  $000d       596   bne(pc())                       # Loop forever on RAM failure here
              000e 00ff  ld   $ff         597   ld(255)
              000f 6900  xora [y,$00]     598   xora([Y,0])                     # Invert memory value again
              0010 ca00  st   [y,$00]     599   st([Y,0])                       # To restore original value
              0011 6100  xora [$00]       600   xora([0])                       # Compare with inverted copy
              0012 f016  beq  .countMem1  601   beq('.countMem1')               # If equal, we wrapped around
              0013 0101  ld   [$01]       602   ld([memSize])
              0014 fc07  bra  .countMem0  603   bra('.countMem0')               # Loop to test next address line
              0015 8200  adda ac          604   adda(AC)                        # Executes in the branch delay slot!
                                          605   label('.countMem1')
                                          606
                                          607   #ld(syncBits^hSync,OUT)
                                          608   #ld(syncBits,OUT)
                                          609
                                          610   # Scan the entire RAM space to collect entropy for a random number generator.
                                          611   # The 16-bit address space is scanned, even if less RAM was detected.
.countMem1:   0016 0000  ld   $00         612   ld(0)                           # Collect entropy from RAM
              0017 d218  st   [$18],x     613   st([vAC+0],X)
              0018 d619  st   [$19],y     614   st([vAC+1],Y)
                                          615   label('.initEnt0')
.initEnt0:    0019 0106  ld   [$06]       616   ld([entropy+0])
              001a f41d  bge  .initEnt1   617   bpl('.initEnt1')
              001b 8d00  adda [y,x]       618   adda([Y,X])
              001c 60bf  xora $bf         619   xora(191)
                                          620   label('.initEnt1')
.initEnt1:    001d c206  st   [$06]       621   st([entropy+0])
              001e 0107  ld   [$07]       622   ld([entropy+1])
              001f f422  bge  .initEnt2   623   bpl('.initEnt2')
              0020 8106  adda [$06]       624   adda([entropy+0])
              0021 60c1  xora $c1         625   xora(193)
                                          626   label('.initEnt2')
.initEnt2:    0022 c207  st   [$07]       627   st([entropy+1])
              0023 0118  ld   [$18]       628   ld([vAC+0])
              0024 8001  adda $01         629   adda(1)
              0025 ec19  bne  .initEnt0   630   bne('.initEnt0')
              0026 d218  st   [$18],x     631   st([vAC+0],X)
              0027 0119  ld   [$19]       632   ld([vAC+1])
              0028 8001  adda $01         633   adda(1)
              0029 ec19  bne  .initEnt0   634   bne('.initEnt0')
              002a d619  st   [$19],y     635   st([vAC+1],Y)
                                          636
                                          637   #ld(syncBits^hSync,OUT)
                                          638   #ld(syncBits,OUT)
                                          639
                                          640   # vCPU reset handler
              002b 00ee  ld   $ee         641   ld((vReset&255)-2)              # Setup vCPU reset handler
              002c c216  st   [$16]       642   st([vPC])
              002d 9002  adda $02,x       643   adda(2,X)
              002e 0001  ld   $01         644   ld(vReset>>8)
              002f d617  st   [$17],y     645   st([vPC+1],Y)
              0030 dc59  st   $59,[y,x++] 646   st('LDI',             [Y,Xpp])
              0031 dc4f  st   $4f,[y,x++] 647   st('SYS_Reset_88',    [Y,Xpp])
              0032 dc2b  st   $2b,[y,x++] 648   st('STW',             [Y,Xpp])
              0033 dc22  st   $22,[y,x++] 649   st(sysFn,             [Y,Xpp])
              0034 dcb4  st   $b4,[y,x++] 650   st('SYS',             [Y,Xpp])  # SYS -> SYS_Reset_88 -> SYS_Exec_88
              0035 dce3  st   $e3,[y,x++] 651   st(256-88//2+maxTicks,[Y,Xpp])
              0036 dc00  st   $00,[y,x++] 652   st(0,                 [Y,Xpp])  # vIRQ_v5: Disable interrupts
              0037 dc00  st   $00,[y,x++] 653   st(0,                 [Y,Xpp])  # vIRQ_v5
              0038 dcfc  st   $fc,[y,x++] 654   st(0b11111100,        [Y,Xpp])  # Control register
              0039 dc00  st   $00,[y,x++] 655   st(0,                 [Y,Xpp])  # videoTop
                                          656
              003a 0002  ld   $02         657   ld(hi('ENTER'))                 # Active interpreter (vCPU,v6502) = vCPU
              003b c202  st   [$02]       658   st([vCpuSelect])
                                          659
              003c 00ff  ld   $ff         660   ld(255)                         # Setup serial input
              003d c20e  st   [$0e]       661   st([frameCount])
              003e c20f  st   [$0f]       662   st([serialRaw])
              003f c210  st   [$10]       663   st([serialLast])
              0040 c211  st   [$11]       664   st([buttonState])
              0041 c212  st   [$12]       665   st([resetTimer])                # resetTimer<0 when entering Main.gcl
                                          666
              0042 0000  ld   $00         667   ld(0)
              0043 c200  st   [$00]       668   st([0])                         # Carry lookup ([0x80] in 1st line of vBlank)
              0044 c205  st   [$05]       669   st([channel])
              0045 c22c  st   [$2c]       670   st([soundTimer])
              0046 c22d  st   [$2d]       671   st([jiffiesTick])
              0047 c22e  st   [$2e]       672   st([secondsTickLo])
              0048 c22f  st   [$2f]       673   st([secondsTickHi])
              0049 1880  ld   $80,out     674   ld(syncBits^hSync,OUT)
              004a 18c0  ld   $c0,out     675   ld(syncBits,OUT)                # turn off real LED's
              004b c213  st   [$13]       676   st([xout])                      # Setup for control by video loop
              004c c214  st   [$14]       677   st([xoutMask])                  # audio = 0, SW LED's = 0
                                          678
              004d 1401  ld   $01,y       679   ld(hi('startVideo'),Y)          # Enter video loop at vertical blank
              004e e003  jmp  y,$03       680   jmp(Y,'startVideo')
                                          681
                                          682   #-----------------------------------------------------------------------
                                          683   # Extension SYS_Reset_88: Soft reset
                                          684   #-----------------------------------------------------------------------
                                          685   #
                                          686   # SYS_Reset_88 initiates an immediate Gigatron reset from within the vCPU.
                                          687   # The reset sequence itself is mostly implemented in GCL by Reset.gcl,
                                          688   # which must first be loaded into RAM. But as that takes more than 1 scanline,
                                          689   # some vCPU bootstrapping code gets loaded with SYS_Exec_88.
                                          690   # !!! This function was REMOVED from interface.json
                                          691   # !!! Better use vReset as generic entry point for soft reset
                                          692
                                          693   label('SYS_Reset_88')
                                          694   assert pc()>>8 == 0
                                          695   assert (romTypeValue & 7) == 0
SYS_Reset_88: 004f 141f  ld   $1f,y       696   ld(hi('sys_Reset_88'),Y)        #15
              0050 e041  jmp  y,$41       697   jmp(Y,'sys_Reset_88')           #16
              0051 0080  ld   $80         698   ld(romTypeValue)                #17 Set ROM type/version and clear channel mask
                                          699
                                          700
              0052 0200  nop              701   align(0x80, size=0x80)
              0053 0200  nop
              0054 0200  nop
              * 46 times
                                          702   assert pc() == 0x80
                                          703
                                          704
                                          705   # ADDW moved to page0 to free up room for more instruction slots in page3
                                          706   # This implemetation of ADDW relies on Y=0 and hence cannot be dispatched from any other page
                                          707   label('addw#13')
addw#13:      0080 0118  ld   [$18]       708   ld([vAC])                       #13 Low byte
              0081 c21d  st   [$1d]       709   st([vTmp])                      #14 Store low result
              0082 8500  adda [x]         710   adda([X])                       #15
              0083 c218  st   [$18]       711   st([vAC])                       #16
              0084 e88f  blt  .addw#19    712   bmi('.addw#19')                 #17 Now figure out if there was a carry
              0085 0500  ld   [x]         713   ld([X])                         #18
              0086 de00  st   [y,x++]     714   st([Y,Xpp])                     #29
              0087 411d  ora  [$1d]       715   ora([vTmp])                     #20
              0088 e898  blt  .addw#23    716   bmi('.addw#23')                 #21 If Carry == 1
              0089 0500  ld   [x]         717   ld([X])                         #22
              008a 8119  adda [$19]       718   adda([vAC+1])                   #23
              008b c219  st   [$19]       719   st([vAC+1])                     #24 Store high result
              008c 1403  ld   $03,y       720   ld(hi('REENTER'),Y)             #25
              008d e0cb  jmp  y,$cb       721   jmp(Y,'REENTER')                #26
              008e 00f1  ld   $f1         722   ld(-30/2)                       #27
                                          723   label('.addw#19')
.addw#19:     008f de00  st   [y,x++]     724   st([Y,Xpp])                     #19
              0090 211d  anda [$1d]       725   anda([vTmp])                    #20
              0091 e898  blt  .addw#23    726   bmi('.addw#23')                 #21 If Carry == 1
              0092 0500  ld   [x]         727   ld([X])                         #22
              0093 8119  adda [$19]       728   adda([vAC+1])                   #23
              0094 c219  st   [$19]       729   st([vAC+1])                     #24 Store high result
              0095 1403  ld   $03,y       730   ld(hi('REENTER'),Y)             #25
              0096 e0cb  jmp  y,$cb       731   jmp(Y,'REENTER')                #26
              0097 00f1  ld   $f1         732   ld(-30/2)                       #27
                                          733   label('.addw#23')
.addw#23:     0098 8001  adda $01         734   adda(1)                         #23
              0099 8119  adda [$19]       735   adda([vAC+1])                   #24
              009a c219  st   [$19]       736   st([vAC+1])                     #25 Store high result
              009b 1403  ld   $03,y       737   ld(hi('NEXTY'),Y)               #26
              009c e000  jmp  y,$00       738   jmp(Y,'NEXTY')                  #27
              009d 00f1  ld   $f1         739   ld(-30/2)                       #28
                                          740
                                          741
                                          742   #-----------------------------------------------------------------------
                                          743   # Placeholders for future SYS functions. This works as a kind of jump
                                          744   # table. The indirection allows SYS implementations to be moved around
                                          745   # between ROM versions, at the expense of 2 clock cycles (or 1). When
                                          746   # the function is not present it just acts as a NOP. Of course, when a
                                          747   # SYS function must be patched or extended it needs to have budget for
                                          748   # that in its declared maximum cycle count.
                                          749   #
                                          750   # Technically the same goal can be achieved by starting each function
                                          751   # with 2 nop's, or by overdeclaring their duration in the first place
                                          752   # (a bit is still wise to do). But this can result in fragmentation
                                          753   # of future ROM images. The indirection avoids that.
                                          754   #
                                          755   # An added advantage of having these in ROM page 0 is that it saves one
                                          756   # byte when setting sysFn: LDI+STW (4 bytes) instead of LDWI+STW (5 bytes)
                                          757   #-----------------------------------------------------------------------
                                          758
                                          759   label('SYS_Multiply_s16_vX_66')
SYS_Multiply_s16_vX_66:
              009e 1419  ld   $19,y       760   ld(hi('sys_Multiply_s16'),Y)    #15 slot 0x9e
              009f e000  jmp  y,$00       761   jmp(Y,'sys_Multiply_s16')       #16
              00a0 012a  ld   [$2a]       762   ld([sysArgs+6])                 #17 load mask.lo
                                          763
                                          764   label('SYS_Divide_s16_vX_80')
SYS_Divide_s16_vX_80:
              00a1 1419  ld   $19,y       765   ld(hi('sys_Divide_s16'),Y)      #15 slot 0xa1
              00a2 e038  jmp  y,$38       766   jmp(Y,'sys_Divide_s16')         #16
              00a3 0128  ld   [$28]       767   ld([sysArgs+4])                 #17
                                          768
                                          769   label('SYS_DrawLine_vX_86')
SYS_DrawLine_vX_86:
              00a4 1419  ld   $19,y       770   ld(hi('sys_DrawLine'),Y)        #15 slot 0xa4
              00a5 e07f  jmp  y,$7f       771   jmp(Y,'sys_DrawLine')           #16
              00a6 01a3  ld   [$a3]       772   ld([0xA3])                      #17 fgcolour
                                          773
              00a7 1403  ld   $03,y       774   ld(hi('REENTER'),Y)             #15 slot 0xa7
              00a8 e0cb  jmp  y,$cb       775   jmp(Y,'REENTER')                #16
              00a9 00f6  ld   $f6         776   ld(-20/2)                       #17
                                          777
              00aa 1403  ld   $03,y       778   ld(hi('REENTER'),Y)             #15 slot 0xaa
              00ab e0cb  jmp  y,$cb       779   jmp(Y,'REENTER')                #16
              00ac 00f6  ld   $f6         780   ld(-20/2)                       #17
                                          781
                                          782
                                          783   #-----------------------------------------------------------------------
                                          784   # Extension SYS_Exec_88: Load code from ROM into memory and execute it
                                          785   #-----------------------------------------------------------------------
                                          786   #
                                          787   # This loads the vCPU code with consideration of the current vSP
                                          788   # Used during reset, but also for switching between applications or for
                                          789   # loading data from ROM from within an application (overlays).
                                          790   #
                                          791   # ROM stream format is [<addrH> <addrL> <n&255> n*<byte>]* 0
                                          792   # on top of lookup tables.
                                          793   #
                                          794   # Variables:
                                          795   #       sysArgs[0:1]    ROM pointer (in)
                                          796   #       sysArgs[2:3]    RAM pointer (changed)
                                          797   #       sysArgs[4]      State counter (changed)
                                          798   #       vLR             vCPU continues here (in)
                                          799
                                          800   label('SYS_Exec_88')
SYS_Exec_88:  00ad 1412  ld   $12,y       801   ld(hi('sys_Exec'),Y)            #15 slot 0xad
              00ae e04f  jmp  y,$4f       802   jmp(Y,'sys_Exec')               #16
              00af 0000  ld   $00         803   ld(0)                           #17 Address of loader on zero page
                                          804
              00b0 1403  ld   $03,y       805   ld(hi('REENTER'),Y)             #15 slot 0xb0
              00b1 e0cb  jmp  y,$cb       806   jmp(Y,'REENTER')                #16
              00b2 00f6  ld   $f6         807   ld(-20/2)                       #17
                                          808
              00b3 1403  ld   $03,y       809   ld(hi('REENTER'),Y)             #15 slot 0xb3
              00b4 e0cb  jmp  y,$cb       810   jmp(Y,'REENTER')                #16
              00b5 00f6  ld   $f6         811   ld(-20/2)                       #17
                                          812
                                          813   label('SYS_SpritePattern_vX_134')
SYS_SpritePattern_vX_134:
              00b6 141e  ld   $1e,y       814   ld(hi('sys_SpritePattern'),Y)   #15 slot 0xb6
              00b7 e000  jmp  y,$00       815   jmp(Y,'sys_SpritePattern')      #16
              00b8 1124  ld   [$24],x     816   ld([sysArgs+0],X)               #17 src.lo
                                          817
                                          818   label('SYS_SortUint8Array_vX_52')
SYS_SortUint8Array_vX_52:
              00b9 141a  ld   $1a,y       819   ld(hi('sys_SortUint8Array'),Y)  #15 slot 0xb9
              00ba e08f  jmp  y,$8f       820   jmp(Y,'sys_SortUint8Array')     #16
              00bb 1525  ld   [$25],y     821   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          822
                                          823   label('SYS_SortSprites_vX_62')
SYS_SortSprites_vX_62:
              00bc 141c  ld   $1c,y       824   ld(hi('sys_SortSprites'),Y)     #15 slot 0xbc
              00bd e000  jmp  y,$00       825   jmp(Y,'sys_SortSprites')        #16
              00be 1525  ld   [$25],y     826   ld([sysArgs+1],Y)               #17 array pointer is in sysArgs0
                                          827
                                          828   label('SYS_SortViaIndices_vX_44')
SYS_SortViaIndices_vX_44:
              00bf 141a  ld   $1a,y       829   ld(hi('sys_SortViaIndices'),Y)  #15 slot 0xbf
              00c0 e0d6  jmp  y,$d6       830   jmp(Y,'sys_SortViaIndices')     #16
              00c1 1525  ld   [$25],y     831   ld([sysArgs+1],Y)               #17 src pointer
                                          832
                                          833   label('SYS_MemCopyByte_vX_40')
SYS_MemCopyByte_vX_40:
              00c2 141b  ld   $1b,y       834   ld(hi('sys_MemCopyByte'),Y)     #15 slot 0xc2
              00c3 e000  jmp  y,$00       835   jmp(Y,'sys_MemCopyByte')        #16
              00c4 1525  ld   [$25],y     836   ld([sysArgs+1],Y)               #17 src pointer
                                          837
                                          838   label('SYS_MemCopyWord_vX_48')
SYS_MemCopyWord_vX_48:
              00c5 141b  ld   $1b,y       839   ld(hi('sys_MemCopyWord'),Y)     #15 slot 0xc5
              00c6 e018  jmp  y,$18       840   jmp(Y,'sys_MemCopyWord')        #16
              00c7 1525  ld   [$25],y     841   ld([sysArgs+1],Y)               #17 src pointer
                                          842
                                          843   label('SYS_MemCopyDWord_vX_58')
SYS_MemCopyDWord_vX_58:
              00c8 141b  ld   $1b,y       844   ld(hi('sys_MemCopyDWord'),Y)    #15 slot 0xc8
              00c9 e037  jmp  y,$37       845   jmp(Y,'sys_MemCopyDWord')       #16
              00ca 1525  ld   [$25],y     846   ld([sysArgs+1],Y)               #17 src pointer
                                          847
                                          848   label('SYS_DrawVLine_vX_66')
SYS_DrawVLine_vX_66:
              00cb 141d  ld   $1d,y       849   ld(hi('sys_DrawVLine'),Y)       #15 slot 0xcb
              00cc e000  jmp  y,$00       850   jmp(Y,'sys_DrawVLine')          #16
              00cd 1527  ld   [$27],y     851   ld([sysArgs+3],Y)               #17
                                          852
              00ce 1403  ld   $03,y       853   ld(hi('REENTER'),Y)             #15 slot 0xce
              00cf e0cb  jmp  y,$cb       854   jmp(Y,'REENTER')                #16
              00d0 00f6  ld   $f6         855   ld(-20/2)                       #17
                                          856
                                          857   label('SYS_DrawBullet_vX_140')
SYS_DrawBullet_vX_140:
              00d1 141e  ld   $1e,y       858   ld(hi('sys_DrawBullet'),Y)      #15 slot 0xd1
              00d2 e076  jmp  y,$76       859   jmp(Y,'sys_DrawBullet')         #16
              00d3 1182  ld   [$82],x     860   ld([0x82],X)                    #17, bulletX
                                          861
                                          862   label('SYS_CmpByteBounds_vX_54')
SYS_CmpByteBounds_vX_54:
              00d4 141f  ld   $1f,y       863   ld(hi('sys_CmpByteBounds'),Y)   #15 slot 0xd4
              00d5 e000  jmp  y,$00       864   jmp(Y,'sys_CmpByteBounds')      #16
              00d6 01bf  ld   [$bf]       865   ld([0xBF])                      #17 count
                                          866
                                          867   label('SYS_Divide_u168_vX_56')
SYS_Divide_u168_vX_56:
              00d7 141f  ld   $1f,y       868   ld(hi('sys_Divide_u168'),Y)     #15 slot 0xd7
              00d8 e061  jmp  y,$61       869   jmp(Y,'sys_Divide_u168')        #16
              00d9 0125  ld   [$25]       870   ld([sysArgs+1])                 #17
                                          871
              00da 1403  ld   $03,y       872   ld(hi('REENTER'),Y)             #15 slot 0xda
              00db e0cb  jmp  y,$cb       873   jmp(Y,'REENTER')                #16
              00dc 00f6  ld   $f6         874   ld(-20/2)                       #17
                                          875
              00dd 1403  ld   $03,y       876   ld(hi('REENTER'),Y)             #15 slot 0xdd
              00de e0cb  jmp  y,$cb       877   jmp(Y,'REENTER')                #16
              00df 00f6  ld   $f6         878   ld(-20/2)                       #17
                                          879
              00e0 1403  ld   $03,y       880   ld(hi('REENTER'),Y)             #15 slot 0xe0
              00e1 e0cb  jmp  y,$cb       881   jmp(Y,'REENTER')                #16
              00e2 00f6  ld   $f6         882   ld(-20/2)                       #17
                                          883
                                          884   #-----------------------------------------------------------------------
                                          885   # Extension SYS_ScanMemoryExt_vX_50
                                          886   #-----------------------------------------------------------------------
                                          887   #
                                          888   # SYS function for searching a byte in a 0 to 256 bytes string located
                                          889   # in a different bank. Doesn't cross page boundaries. Returns a
                                          890   # pointer to the target if found or zero. Temporarily deselects SPI
                                          891   # devices.
                                          892   #
                                          893   # sysArgs[0:1]            Start address
                                          894   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          895   # vACL                    Length of the string (0 means 256)
                                          896   # vACH                    Bit 6 and 7 contain the bank number
                                          897
                                          898   label('SYS_ScanMemoryExt_vX_50')
SYS_ScanMemoryExt_vX_50:
              00e3 1430  ld   $30,y       899   ld(hi('sys_ScanMemoryExt'),Y)   #15 slot 0xe3
              00e4 e027  jmp  y,$27       900   jmp(Y,'sys_ScanMemoryExt')      #16
              00e5 0119  ld   [$19]       901   ld([vAC+1])                     #17
                                          902
                                          903
                                          904   #-----------------------------------------------------------------------
                                          905   # Extension SYS_ScanMemory_vX_50
                                          906   #-----------------------------------------------------------------------
                                          907   #
                                          908   # SYS function for searching a byte in a 0 to 256 bytes string.
                                          909   # Returns a pointer to the target if found or zero.  Doesn't cross
                                          910   # page boundaries.
                                          911
                                          912   #
                                          913   # sysArgs[0:1]            Start address
                                          914   # sysArgs[2], sysArgs[3]  Bytes to locate in the string
                                          915   # vACL                    Length of the string (0 means 256)
                                          916
                                          917   label('SYS_ScanMemory_vX_50')
SYS_ScanMemory_vX_50:
              00e6 1430  ld   $30,y       918   ld(hi('sys_ScanMemory'),Y)      #15 slot 0xe6
              00e7 e000  jmp  y,$00       919   jmp(Y,'sys_ScanMemory')         #16
              00e8 1525  ld   [$25],y     920   ld([sysArgs+1],Y)               #17
                                          921
                                          922   #-----------------------------------------------------------------------
                                          923   # Extension SYS_CopyMemory_vX_80
                                          924   #-----------------------------------------------------------------------
                                          925   #
                                          926   # SYS function for copying 1..256 bytes
                                          927   #
                                          928   # sysArgs[0:1]    Destination address
                                          929   # sysArgs[2:3]    Source address
                                          930   # vAC[0]          Count (0 means 256)
                                          931   #
                                          932   # Doesn't cross page boundaries.
                                          933   # Overwrites sysArgs[4:7] and vLR.
                                          934
                                          935   label('SYS_CopyMemory_vX_80')
SYS_CopyMemory_vX_80:
              00e9 142f  ld   $2f,y       936   ld(hi('sys_CopyMemory'),Y)       # 15 slot 0xe9
              00ea e000  jmp  y,$00       937   jmp(Y, 'sys_CopyMemory')         # 16
              00eb 0118  ld   [$18]       938   ld([vAC])                        # 17
                                          939
                                          940   #-----------------------------------------------------------------------
                                          941   # Extension SYS_CopyMemoryExt_vX_100
                                          942   #-----------------------------------------------------------------------
                                          943   #
                                          944   # SYS function for copying 1..256 bytes across banks
                                          945   #
                                          946   # sysArgs[0:1]  Destination address
                                          947   # sysArgs[2:3]  Source address
                                          948   # vAC[0]        Count (0 means 256)
                                          949   # vAC[1]        Bits 7 and 6 contain the destination bank number,
                                          950   #               and bits 5 and 4 the source bank number.
                                          951   #
                                          952   # Doesn't cross page boundaries.
                                          953   # Overwrites sysArgs[4:7], vLR, and vTmp.
                                          954   # Temporarily deselect all SPI devices.
                                          955   # Should not call without expansion board
                                          956
                                          957   label('SYS_CopyMemoryExt_vX_100')
SYS_CopyMemoryExt_vX_100:
              00ec 142f  ld   $2f,y       958   ld(hi('sys_CopyMemoryExt'),Y)    # 15 slot 0xec
              00ed e078  jmp  y,$78       959   jmp(Y, 'sys_CopyMemoryExt')      # 16
              00ee 0119  ld   [$19]       960   ld([vAC+1])                      # 17
                                          961
                                          962   #-----------------------------------------------------------------------
                                          963   # Extension SYS_ReadRomDir_v5_80
                                          964   #-----------------------------------------------------------------------
                                          965   #
                                          966   # Get next entry from ROM file system. Use vAC=0 to get the first entry.
                                          967
                                          968   # Variables:
                                          969   #       vAC             Start address of current entry (inout)
                                          970   #       sysArgs[0:7]    File name, padded with zeroes (out)
                                          971
                                          972   label('SYS_ReadRomDir_v5_80')
SYS_ReadRomDir_v5_80:
              00ef 14f3  ld   $f3,y       973   ld(hi('sys_ReadRomDir'),Y)      #15
              00f0 e000  jmp  y,$00       974   jmp(Y,'sys_ReadRomDir')         #16
              00f1 0119  ld   [$19]       975   ld([vAC+1])                     #17
                                          976
              00f2 0200  nop              977   fillers(until=symbol('SYS_Out_22') & 255)
              00f3 0200  nop
                                          978
                                          979   #-----------------------------------------------------------------------
                                          980   # Extension SYS_Out_22
                                          981   #-----------------------------------------------------------------------
                                          982   #
                                          983   # Send byte to output port
                                          984   #
                                          985   # Variables:
                                          986   #       vAC
                                          987
                                          988   label('SYS_Out_22')
SYS_Out_22:   00f4 1924  ld   [$24],out   989   ld([sysArgs+0],OUT)             #15
              00f5 0200  nop              990   nop()                           #16
              00f6 1403  ld   $03,y       991   ld(hi('REENTER'),Y)             #17
              00f7 e0cb  jmp  y,$cb       992   jmp(Y,'REENTER')                #18
              00f8 00f5  ld   $f5         993   ld(-22/2)                       #19
                                          994
                                          995   #-----------------------------------------------------------------------
                                          996   # Extension SYS_In_24
                                          997   #-----------------------------------------------------------------------
                                          998   #
                                          999   # Read a byte from the input port
                                          1000  #
                                          1001  # Variables:
                                          1002  #       vAC
                                          1003
                                          1004  label('SYS_In_24')
SYS_In_24:    00f9 c318  st   in,[$18]    1005  st(IN, [vAC])                   #15
              00fa 0000  ld   $00         1006  ld(0)                           #16
              00fb c219  st   [$19]       1007  st([vAC+1])                     #17
              00fc 0200  nop              1008  nop()                           #18
              00fd 1403  ld   $03,y       1009  ld(hi('REENTER'),Y)             #19
              00fe e0cb  jmp  y,$cb       1010  jmp(Y,'REENTER')                #20
              00ff 00f4  ld   $f4         1011  ld(-24/2)                       #21
                                          1012
                                          1013  assert pc()&255 == 0
                                          1014
                                          1015  #-----------------------------------------------------------------------
                                          1016  #
                                          1017  #  $0100 ROM page 1: Video loop vertical blank
                                          1018  #
                                          1019  #-----------------------------------------------------------------------
                                          1020  align(0x100, size=0x100)
                                          1021
                                          1022  # Video off mode (also no sound, serial, timer, blinkenlights, ...).
                                          1023  # For benchmarking purposes. This still has the overhead for the vTicks
                                          1024  # administration, time slice granularity etc.
                                          1025  label('videoZ')
                                          1026  videoZ = pc()
videoZ:       0100 1502  ld   [$02],y     1027  runVcpu(None, '---- novideo', returnTo=videoZ)
              0101 e0ff  jmp  y,$ff
              0102 007f  ld   $7f
                                          1028
                                          1029  label('startVideo')             # (Re)start of video signal from idle state
startVideo:   0103 00c0  ld   $c0         1030  ld(syncBits)
                                          1031
                                          1032  # Start of vertical blank interval
                                          1033  label('vBlankStart')
vBlankStart:  0104 c21f  st   [$1f]       1034  st([videoSync0])                #32 Start of vertical blank interval
              0105 0080  ld   $80         1035  ld(syncBits^hSync)              #33
              0106 c220  st   [$20]       1036  st([videoSync1])                #34
                                          1037
                                          1038  # Reset line counter before vCPU can see it
              0107 00b3  ld   $b3         1039  ld(videoYline0)                 #35
              0108 c209  st   [$09]       1040  st([videoY])                    #36
                                          1041
                                          1042  # Update frame count and [0x80] (4 cycles)
              0109 0001  ld   $01         1043  ld(1)                           #37 Reinitialize carry lookup, for robustness
              010a c280  st   [$80]       1044  st([0x80])                      #38
              010b 810e  adda [$0e]       1045  adda([frameCount])              #39 Frame counter
              010c c20e  st   [$0e]       1046  st([frameCount])                #40
                                          1047
                                          1048  # Mix entropy (11 cycles)
              010d 6107  xora [$07]       1049  xora([entropy+1])               #41 Mix entropy
              010e 610f  xora [$0f]       1050  xora([serialRaw])               #42 Mix in serial input
              010f 8106  adda [$06]       1051  adda([entropy+0])               #43
              0110 c206  st   [$06]       1052  st([entropy+0])                 #44
              0111 8116  adda [$16]       1053  adda([vPC])                     #45 Some hidden state
              0112 e815  blt  $0115       1054  bmi(pc()+3)                     #46
              0113 fc16  bra  $0116       1055  bra(pc()+3)                     #47
              0114 6053  xora $53         1056  xora(64+16+2+1)                 #48
              0115 606c  xora $6c         1057  xora(64+32+8+4)                 #48(!)
              0116 8107  adda [$07]       1058  adda([entropy+1])               #49
              0117 c207  st   [$07]       1059  st([entropy+1])                 #50
                                          1060
                                          1061
                                          1062  # Timer
              0118 012d  ld   [$2d]       1063  ld([jiffiesTick])               #51
              0119 8001  adda $01         1064  adda(1)                         #52
              011a c22d  st   [$2d]       1065  st([jiffiesTick])               #53
              011b 603c  xora $3c         1066  xora(60)                        #54
              011c f01f  beq  $011f       1067  beq(pc()+3)                     #55
              011d fc20  bra  $0120       1068  bra(pc()+3)                     #56
              011e 0200  nop              1069  nop()                           #57
              011f c22d  st   [$2d]       1070  st([jiffiesTick])               #57(!)
              0120 f023  beq  $0123       1071  beq(pc()+3)                     #58
              0121 fc24  bra  $0124       1072  bra(pc()+3)                     #59
              0122 0000  ld   $00         1073  ld(0)                           #60
              0123 0001  ld   $01         1074  ld(1)                           #60(!)
                                          1075  beq('vblankExpansion')          #61
              0124 f02e  beq  vblankExpansion
              0125 812e  adda [$2e]       1076  adda([secondsTickLo])           #62
              0126 c22e  st   [$2e]       1077  st([secondsTickLo])             #63
              0127 f02a  beq  $012a       1078  beq(pc()+3)                     #64
              0128 fc2b  bra  $012b       1079  bra(pc()+3)                     #65
              0129 0000  ld   $00         1080  ld(0)                           #66
              012a 0001  ld   $01         1081  ld(1)                           #66(!)
              012b 812f  adda [$2f]       1082  adda([secondsTickHi])           #67
              012c fc35  bra  vPulseInit  1083  bra('vPulseInit')               #68
              012d c22f  st   [$2f]       1084  st([secondsTickHi])             #69
                                          1085
                                          1086  # VBlank expansion area, LED flasher, etc
                                          1087  label('vblankExpansion')
vblankExpansion:
              012e 0200  nop              1088  nop()                           #63
              012f 0200  nop              1089  nop()                           #64
              0130 0200  nop              1090  nop()                           #65
              0131 0200  nop              1091  nop()                           #66
              0132 0200  nop              1092  nop()                           #67
              0133 0200  nop              1093  nop()                           #68
              0134 0200  nop              1094  nop()                           #69
                                          1095
                                          1096  label('vPulseInit')
vPulseInit:   0135 0114  ld   [$14]       1097  ld([xoutMask])                  #70 mask LED's
              0136 2108  anda [$08]       1098  anda([audioBitMask])            #71 configure 4/6/8bit audio
              0137 c214  st   [$14]       1099  st([xoutMask])                  #72 Sound bits will be re-enabled below
              0138 0010  ld   $10         1100  ld(vPulse*2)                    #73 vPulse default length when not modulated
              0139 c20d  st   [$0d]       1101  st([videoPulse])                #74
                                          1102
                                          1103  # When the total number of scan lines per frame is not an exact multiple of the
                                          1104  # (4) channels, there will be an audible discontinuity if no measure is taken.
                                          1105  # This static noise can be suppressed by swallowing the first `lines mod 4'
                                          1106  # partial samples after transitioning into vertical blank. This is easiest if
                                          1107  # the modulo is 0 (do nothing), 1 (reset sample when entering the last visible
                                          1108  # scan line), or 2 (reset sample while in the first blank scan line). For the
                                          1109  # last case there is no solution yet: give a warning.
                                          1110  extra = 0
                                          1111  if soundDiscontinuity == 2:
                                          1112    st(sample, [sample])          # Sound continuity
                                          1113    extra += 1
                                          1114  if soundDiscontinuity > 2:
                                          1115    highlight('Warning: sound discontinuity not suppressed')
                                          1116
                                          1117  # vCPU interrupt
              013a 010e  ld   [$0e]       1118  ld([frameCount])                #75
                                          1119  beq('vBlankFirst#78')           #76
              013b f041  beq  vBlankFirst#78
                                          1120
              013c 0044  ld   $44         1121  runVcpu(183-77-extra,           #77 Application cycles (scan line 0)
              013d c21e  st   [$1e]
              013e 1502  ld   [$02],y
              013f e0ff  jmp  y,$ff
              0140 001f  ld   $1f
                                          1122      '---D line 0 no timeout',
                                          1123      returnTo='vBlankFirst#183')
                                          1124
                                          1125  label('vBlankFirst#78')
vBlankFirst#78:
              0141 1412  ld   $12,y       1126  ld(hi('vBlankFirst#81'),Y)      #78
              0142 e000  jmp  y,$00       1127  jmp(Y,'vBlankFirst#81')         #79
              0143 1401  ld   $01,y       1128  ld(hi(vIRQ_v5),Y)               #80
                                          1129
                                          1130  # Mitigation for rogue channelMask (3 cycles)
                                          1131  label('vBlankFirst#183')
vBlankFirst#183:
              0144 0121  ld   [$21]       1132  ld([channelMask])               #183 Normalize channelMask, for robustness
              0145 20fb  anda $fb         1133  anda(0b11111011)                #184
              0146 c221  st   [$21]       1134  st([channelMask])               #185
                                          1135
                                          1136  # Sound on/off (6 cycles)
              0147 0108  ld   [$08]       1137  ld([audioBitMask])              #186 configure 4/6/8bit audio
              0148 60ff  xora $ff         1138  xora(255)                       #187
              0149 c21d  st   [$1d]       1139  st([vTmp])                      #188
              014a 012c  ld   [$2c]       1140  ld([soundTimer])                #189 Sound on/off
              014b ec4e  bne  $014e       1141  bne(pc()+3)                     #190
              014c fc4f  bra  $014f       1142  bra(pc()+3)                     #191
              014d 0000  ld   $00         1143  ld(0)                           #192 Keeps sound unchanged (should be off here)
              014e 011d  ld   [$1d]       1144  ld([vTmp])                      #192(!) Turns sound back on
              014f 4114  ora  [$14]       1145  ora([xoutMask])                 #193
              0150 c214  st   [$14]       1146  st([xoutMask])                  #194
                                          1147
                                          1148  # Sound timer count down (5 cycles)
              0151 012c  ld   [$2c]       1149  ld([soundTimer])                #195 Sound timer
              0152 f055  beq  $0155       1150  beq(pc()+3)                     #196
              0153 fc56  bra  $0156       1151  bra(pc()+3)                     #197
              0154 a001  suba $01         1152  suba(1)                         #198
              0155 0000  ld   $00         1153  ld(0)                           #198
              0156 c22c  st   [$2c]       1154  st([soundTimer])                #199
                                          1155
              0157 191f  ld   [$1f],out   1156  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1157  label('sound1')
sound1:       0158 0105  ld   [$05]       1158  ld([channel])                   #1 Advance to next sound channel
              0159 2121  anda [$21]       1159  anda([channelMask])             #2
              015a 8001  adda $01         1160  adda(1)                         #3
              015b 1920  ld   [$20],out   1161  ld([videoSync1],OUT)            #4 Start horizontal pulse
              015c d605  st   [$05],y     1162  st([channel],Y)                 #5
              015d 007f  ld   $7f         1163  ld(0x7f)                        #6 Update sound channel
              015e 29fe  anda [y,$fe]     1164  anda([Y,oscL])                  #7
              015f 89fc  adda [y,$fc]     1165  adda([Y,keyL])                  #8
              0160 cafe  st   [y,$fe]     1166  st([Y,oscL])                    #9
              0161 3080  anda $80,x       1167  anda(0x80,X)                    #10
              0162 0500  ld   [x]         1168  ld([X])                         #11
              0163 89ff  adda [y,$ff]     1169  adda([Y,oscH])                  #12
              0164 89fd  adda [y,$fd]     1170  adda([Y,keyH])                  #13
              0165 caff  st   [y,$ff]     1171  st([Y,oscH])                    #14
              0166 20fc  anda $fc         1172  anda(0xfc)                      #15
              0167 69fb  xora [y,$fb]     1173  xora([Y,wavX])                  #16
              0168 1200  ld   ac,x        1174  ld(AC,X)                        #17
              0169 09fa  ld   [y,$fa]     1175  ld([Y,wavA])                    #18
              016a 1407  ld   $07,y       1176  ld(soundTable>>8,Y)             #19
              016b 8d00  adda [y,x]       1177  adda([Y,X])                     #20
              016c e86f  blt  $016f       1178  bmi(pc()+3)                     #21
              016d fc70  bra  $0170       1179  bra(pc()+3)                     #22
              016e 203f  anda $3f         1180  anda(63)                        #23
              016f 003f  ld   $3f         1181  ld(63)                          #23(!)
              0170 8103  adda [$03]       1182  adda([sample])                  #24
              0171 c203  st   [$03]       1183  st([sample])                    #25
                                          1184
              0172 0113  ld   [$13]       1185  ld([xout])                      #26 Gets copied to XOUT
              0173 1412  ld   $12,y       1186  ld(hi('vBlankLast#34'),Y)       #27 Prepare jumping out of page in last line
              0174 191f  ld   [$1f],out   1187  ld([videoSync0],OUT)            #28 End horizontal pulse
                                          1188
                                          1189  # Count through the vertical blank interval until its last scan line
              0175 0109  ld   [$09]       1190  ld([videoY])                    #29
                                          1191  bpl('.vBlankLast#32')           #30
              0176 f4a3  bge  .vBlankLast#32
              0177 8002  adda $02         1192  adda(2)                         #31
              0178 c209  st   [$09]       1193  st([videoY])                    #32
                                          1194
                                          1195  # Determine if we're in the vertical sync pulse
              0179 a0bd  suba $bd         1196  suba(1-2*(vBack+vPulse-1))      #33 Prepare sync values
              017a ec7f  bne  .prepSync36 1197  bne('.prepSync36')              #34 Tests for start of vPulse
              017b a10d  suba [$0d]       1198  suba([videoPulse])              #35
              017c 0040  ld   $40         1199  ld(syncBits^vSync)              #36 Entering vertical sync pulse
              017d fc84  bra  .prepSync39 1200  bra('.prepSync39')              #37
              017e c21f  st   [$1f]       1201  st([videoSync0])                #38
                                          1202  label('.prepSync36')
.prepSync36:  017f ec83  bne  .prepSync38 1203  bne('.prepSync38')              #36 Tests for end of vPulse
              0180 00c0  ld   $c0         1204  ld(syncBits)                    #37
              0181 fc85  bra  .prepSync40 1205  bra('.prepSync40')              #38 Entering vertical back porch
              0182 c21f  st   [$1f]       1206  st([videoSync0])                #39
                                          1207  label('.prepSync38')
.prepSync38:  0183 011f  ld   [$1f]       1208  ld([videoSync0])                #38 Load current value
                                          1209  label('.prepSync39')
.prepSync39:  0184 0200  nop              1210  nop()                           #39
                                          1211  label('.prepSync40')
.prepSync40:  0185 6040  xora $40         1212  xora(hSync)                     #40 Precompute, as during the pulse there is no time
              0186 c220  st   [$20]       1213  st([videoSync1])                #41
                                          1214
                                          1215  # Capture the serial input before the '595 shifts it out
              0187 0109  ld   [$09]       1216  ld([videoY])                    #42 Capture serial input
              0188 60cf  xora $cf         1217  xora(1-2*(vBack-1-1))           #43 Exactly when the 74HC595 has captured all 8 controller bits
              0189 ec8c  bne  $018c       1218  bne(pc()+3)                     #44
              018a fc8d  bra  $018d       1219  bra(pc()+3)                     #45
              018b c30f  st   in,[$0f]    1220  st(IN, [serialRaw])             #46
              018c c000  st   $00,[$00]   1221  st(0,[0])                       #46(!) Reinitialize carry lookup, for robustness
                                          1222
                                          1223  # Update [xout] with the next sound sample every 4 scan lines.
                                          1224  # Keep doing this on 'videoC equivalent' scan lines in vertical blank.
              018d 0109  ld   [$09]       1225  ld([videoY])                    #47
              018e 2006  anda $06         1226  anda(6)                         #48
                                          1227  beq('vBlankSample')             #49
              018f f098  beq  vBlankSample
              0190 0103  ld   [$03]       1228  ld([sample])                    #50
                                          1229
                                          1230  label('vBlankNormal')
vBlankNormal: 0191 0096  ld   $96         1231  runVcpu(199-51, 'AB-D line 1-36')#51 Application cycles (vBlank scan lines without sound sample update)
              0192 c21e  st   [$1e]
              0193 1502  ld   [$02],y
              0194 e0ff  jmp  y,$ff
              0195 0034  ld   $34
              0196 fc58  bra  sound1      1232  bra('sound1')                   #199
              0197 191f  ld   [$1f],out   1233  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1234
                                          1235  label('vBlankSample')
vBlankSample: 0198 4108  ora  [$08]       1236  ora([audioBitMask])             #51 configure 4/6/8bit audio
              0199 2114  anda [$14]       1237  anda([xoutMask])                #52
              019a c213  st   [$13]       1238  st([xout])                      #53 New sound sample is ready
              019b c003  st   $03,[$03]   1239  st(sample, [sample])            #54 Reset for next sample
                                          1240
              019c 00a1  ld   $a1         1241  runVcpu(199-55, '--C- line 3-39')#55 Application cycles (vBlank scan lines with sound sample update)
              019d c21e  st   [$1e]
              019e 1502  ld   [$02],y
              019f e0ff  jmp  y,$ff
              01a0 0032  ld   $32
              01a1 fc58  bra  sound1      1242  bra('sound1')                   #199
              01a2 191f  ld   [$1f],out   1243  ld([videoSync0],OUT)            #0 <New scan line start>
                                          1244
                                          1245  #-----------------------------------------------------------------------
                                          1246
                                          1247  label('.vBlankLast#32')
.vBlankLast#32:
              01a3 e032  jmp  y,$32       1248  jmp(Y,'vBlankLast#34')          #32 Jump out of page for space reasons
                                          1249  #assert hi(controllerType) == hi(pc()) # Assume these share the high address
              01a4 1401  ld   $01,y       1250  ld(hi(pc()),Y)                  #33
                                          1251
                                          1252  label('vBlankLast#52')
                                          1253
                                          1254  # Respond to reset button (14 cycles)
                                          1255  # - ResetTimer decrements as long as just [Start] is pressed down
                                          1256  # - Reaching 0 (normal) or 128 (extended) triggers the soft reset sequence
                                          1257  # - Initial value is 128 (or 255 at boot), first decrement, then check
                                          1258  # - This starts vReset -> SYS_Reset_88 -> SYS_Exec_88 -> Reset.gcl -> Main.gcl
                                          1259  # - Main.gcl then recognizes extended presses if resetTimer is 0..127 ("paasei")
                                          1260  # - This requires a full cycle (4s) in the warm boot scenario
                                          1261  # - Or a half cycle (2s) when pressing [Select] down during hard reset
                                          1262  # - This furthermore requires >=1 frame (and <=128) to have passed between
                                          1263  #   reaching 128 and getting through Reset and the start of Main, while [Start]
                                          1264  #   was still pressed so the count reaches <128. Two reasonable expectations.
                                          1265  # - The unintended power-up scenarios of ROMv1 (pulling SER_DATA low, or
                                          1266  #   pressing [Select] together with another button) now don't trigger anymore.
                                          1267
vBlankLast#52:
              01a5 0111  ld   [$11]       1268  ld([buttonState])               #52 Check [Start] for soft reset
              01a6 60ef  xora $ef         1269  xora(~buttonStart)              #53
              01a7 ecb0  bne  .restart#56 1270  bne('.restart#56')              #54
              01a8 0112  ld   [$12]       1271  ld([resetTimer])                #55 As long as button pressed
              01a9 a001  suba $01         1272  suba(1)                         #56 ... count down the timer
              01aa c212  st   [$12]       1273  st([resetTimer])                #57
              01ab 207f  anda $7f         1274  anda(127)                       #58
              01ac f0b8  beq  .restart#61 1275  beq('.restart#61')              #59 Reset at 0 (normal 2s) or 128 (extended 4s)
              01ad 00ee  ld   $ee         1276  ld((vReset&255)-2)              #60 Start force reset when hitting 0
              01ae fcb7  bra  .restart#63 1277  bra('.restart#63')              #61 ... otherwise do nothing yet
              01af fcb6  bra  .restart#64 1278  bra('.restart#64')              #62
                                          1279  label('.restart#56')
.restart#56:  01b0 0001  ld   $01         1280  wait(62-56)                     #56
              01b1 ecb1  bne  $01b1
              01b2 a001  suba $01
              01b3 0200  nop
              01b4 0080  ld   $80         1281  ld(128)                         #62 Not pressed, reset the timer
              01b5 c212  st   [$12]       1282  st([resetTimer])                #63
                                          1283  label('.restart#64')
.restart#64:  01b6 fcbd  bra  .restart#66 1284  bra('.restart#66')              #64
                                          1285  label('.restart#63')
.restart#63:  01b7 0200  nop              1286  nop()                           #63,65
                                          1287  label('.restart#61')
.restart#61:  01b8 c216  st   [$16]       1288  st([vPC])                       #61 Point vPC at vReset
              01b9 0001  ld   $01         1289  ld(vReset>>8)                   #62
              01ba c217  st   [$17]       1290  st([vPC+1])                     #63
              01bb 0002  ld   $02         1291  ld(hi('ENTER'))                 #64 Set active interpreter to vCPU
              01bc c202  st   [$02]       1292  st([vCpuSelect])                #65
                                          1293  label('.restart#66')
                                          1294
                                          1295  # Switch video mode when (only) select is pressed (16 cycles)
                                          1296  # XXX We could make this a vCPU interrupt
.restart#66:  01bd 0111  ld   [$11]       1297  ld([buttonState])               #66 Check [Select] to switch modes
              01be 60df  xora $df         1298  xora(~buttonSelect)             #67 Only trigger when just [Select] is pressed
              01bf ecd4  bne  .select#70  1299  bne('.select#70')               #68
              01c0 010b  ld   [$0b]       1300  ld([videoModeC])                #69
              01c1 e8c7  blt  .select#72  1301  bmi('.select#72')               #70 Branch when line C is off
              01c2 010a  ld   [$0a]       1302  ld([videoModeB])                #71 Rotate: Off->D->B->C
              01c3 c20b  st   [$0b]       1303  st([videoModeC])                #72
              01c4 010c  ld   [$0c]       1304  ld([videoModeD])                #73
              01c5 c20a  st   [$0a]       1305  st([videoModeB])                #74
              01c6 fccc  bra  .select#77  1306  bra('.select#77')               #75
                                          1307  label('.select#72')
.select#72:   01c7 00f6  ld   $f6         1308  ld('nopixels')                  #72,76
              01c8 000a  ld   $0a         1309  ld('pixels')                    #73 Reset: On->D->B->C
              01c9 c20b  st   [$0b]       1310  st([videoModeC])                #74
              01ca c20a  st   [$0a]       1311  st([videoModeB])                #75
              01cb 0200  nop              1312  nop()                           #76
                                          1313  label('.select#77')
.select#77:   01cc c20c  st   [$0c]       1314  st([videoModeD])                #77
              01cd 0035  ld   $35         1315  wait(188-78)                    #78 Don't waste code space expanding runVcpu here
              01ce ecce  bne  $01ce
              01cf a001  suba $01
              01d0 0200  nop
                                          1316  # AC==255 now
              01d1 c211  st   [$11]       1317  st([buttonState])               #188
                                          1318  bra('vBlankEnd#191')            #189
              01d2 fcdc  bra  vBlankEnd#191
              01d3 0000  ld   $00         1319  ld(0)                           #190
                                          1320  label('.select#70')
                                          1321
                                          1322  # Mitigation of runaway channel variable
.select#70:   01d4 0105  ld   [$05]       1323  ld([channel])                   #70 Normalize channel, for robustness
              01d5 2003  anda $03         1324  anda(0b00000011)                #71
              01d6 c205  st   [$05]       1325  st([channel])                   #72 Stop wild channel updates
                                          1326
              01d7 00dc  ld   $dc         1327  runVcpu(191-73, '---D line 40') #73 Application cycles (scan line 40)
              01d8 c21e  st   [$1e]
              01d9 1502  ld   [$02],y
              01da e0ff  jmp  y,$ff
              01db 0025  ld   $25
                                          1328
                                          1329  # AC==0 now
                                          1330  label('vBlankEnd#191')
vBlankEnd#191:
              01dc 1401  ld   $01,y       1331  ld(videoTop_v5>>8,Y)            #191
              01dd 09f9  ld   [y,$f9]     1332  ld([Y,videoTop_v5])             #192
              01de c209  st   [$09]       1333  st([videoY])                    #193
              01df c21f  st   [$1f]       1334  st([frameX])                    #194
              01e0 ece3  bne  $01e3       1335  bne(pc()+3)                     #195
              01e1 fce4  bra  $01e4       1336  bra(pc()+3)                     #196
              01e2 0001  ld   $01         1337  ld('videoA')                    #197
              01e3 00ec  ld   $ec         1338  ld('videoF')                    #197(!)
              01e4 c20d  st   [$0d]       1339  st([nextVideo])                 #198
              01e5 0105  ld   [$05]       1340  ld([channel])                   #199 Advance to next sound channel
              01e6 2121  anda [$21]       1341  anda([channelMask])             #0 <New scan line start>
              01e7 8001  adda $01         1342  adda(1)                         #1
              01e8 1402  ld   $02,y       1343  ld(hi('sound2'),Y)              #2
              01e9 e0b1  jmp  y,$b1       1344  jmp(Y,'sound2')                 #3
              01ea 1880  ld   $80,out     1345  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1346
              01eb 0200  nop              1347  fillers(until=0xff)
              01ec 0200  nop
              01ed 0200  nop
              * 20 times
                                          1348
                                          1349  #-----------------------------------------------------------------------
                                          1350  # Return point for vCPU slices during visible screen area
                                          1351  #-----------------------------------------------------------------------
                                          1352
                                          1353  assert pc() == 0x1ff            # Enables runVcpu() to re-enter into the next page
              01ff fcae  bra  sound3      1354  bra('sound3')                   #200,0 <New scan line start>
                                          1355
                                          1356  #-----------------------------------------------------------------------
                                          1357  #
                                          1358  #  $0200 ROM page 2: Video loop visible scanlines
                                          1359  #
                                          1360  #-----------------------------------------------------------------------
                                          1361  align(0x100, size=0x100)
              0200 0105  ld   [$05]       1362  ld([channel])                   #1 Advance to next sound channel
                                          1363
                                          1364  # Back porch A: first of 4 repeated scan lines
                                          1365  # - Fetch next Yi and store it for retrieval in the next scan lines
                                          1366  # - Calculate Xi from dXi, but there is no cycle time left to store it as well
                                          1367  label('videoA')
videoA:       0201 00ca  ld   $ca         1368  ld('videoB')                    #29 1st scanline of 4 (always visible)
              0202 c20d  st   [$0d]       1369  st([nextVideo])                 #30
              0203 1401  ld   $01,y       1370  ld(videoTable>>8,Y)             #31
              0204 1109  ld   [$09],x     1371  ld([videoY],X)                  #32
              0205 0d00  ld   [y,x]       1372  ld([Y,X])                       #33
              0206 de00  st   [y,x++]     1373  st([Y,Xpp])                     #34 Just X++
              0207 c220  st   [$20]       1374  st([frameY])                    #35
              0208 0d00  ld   [y,x]       1375  ld([Y,X])                       #36
              0209 911f  adda [$1f],x     1376  adda([frameX],X)                #37
                                          1377  label('pixels')
pixels:       020a 1520  ld   [$20],y     1378  ld([frameY],Y)                  #38
              020b 00c0  ld   $c0         1379  ld(syncBits)                    #39
                                          1380
                                          1381  # Stream 160 pixels from memory location <Yi,Xi> onwards
                                          1382  # Superimpose the sync signal bits to be robust against misprogramming
                                          1383  for i in range(qqVgaWidth):
              020c 5d00  ora  [y,x++],out 1384    ora([Y,Xpp],OUT)              #40-199 Pixel burst
              020d 5d00  ora  [y,x++],out
              020e 5d00  ora  [y,x++],out
              * 160 times
              02ac 18c0  ld   $c0,out     1385  ld(syncBits,OUT)                #0 <New scan line start> Back to black
                                          1386
                                          1387  # Front porch
              02ad 0105  ld   [$05]       1388  ld([channel])                   #1 Advance to next sound channel
                                          1389  label('sound3')                 # Return from vCPU interpreter
sound3:       02ae 2121  anda [$21]       1390  anda([channelMask])             #2
              02af 8001  adda $01         1391  adda(1)                         #3
              02b0 1880  ld   $80,out     1392  ld(syncBits^hSync,OUT)          #4 Start horizontal pulse
                                          1393
                                          1394  # Horizontal sync and sound channel update for scanlines outside vBlank
                                          1395  label('sound2')
sound2:       02b1 d605  st   [$05],y     1396  st([channel],Y)                 #5
              02b2 007f  ld   $7f         1397  ld(0x7f)                        #6
              02b3 29fe  anda [y,$fe]     1398  anda([Y,oscL])                  #7
              02b4 89fc  adda [y,$fc]     1399  adda([Y,keyL])                  #8
              02b5 cafe  st   [y,$fe]     1400  st([Y,oscL])                    #9
              02b6 3080  anda $80,x       1401  anda(0x80,X)                    #10
              02b7 0500  ld   [x]         1402  ld([X])                         #11
              02b8 89ff  adda [y,$ff]     1403  adda([Y,oscH])                  #12
              02b9 89fd  adda [y,$fd]     1404  adda([Y,keyH])                  #13
              02ba caff  st   [y,$ff]     1405  st([Y,oscH])                    #14
              02bb 20fc  anda $fc         1406  anda(0xfc)                      #15
              02bc 69fb  xora [y,$fb]     1407  xora([Y,wavX])                  #16
              02bd 1200  ld   ac,x        1408  ld(AC,X)                        #17
              02be 09fa  ld   [y,$fa]     1409  ld([Y,wavA])                    #18
              02bf 1407  ld   $07,y       1410  ld(soundTable>>8,Y)             #19
              02c0 8d00  adda [y,x]       1411  adda([Y,X])                     #20
              02c1 e8c4  blt  $02c4       1412  bmi(pc()+3)                     #21
              02c2 fcc5  bra  $02c5       1413  bra(pc()+3)                     #22
              02c3 203f  anda $3f         1414  anda(63)                        #23
              02c4 003f  ld   $3f         1415  ld(63)                          #23(!)
              02c5 8103  adda [$03]       1416  adda([sample])                  #24
              02c6 c203  st   [$03]       1417  st([sample])                    #25
                                          1418
              02c7 0113  ld   [$13]       1419  ld([xout])                      #26 Gets copied to XOUT
              02c8 fd0d  bra  [$0d]       1420  bra([nextVideo])                #27
              02c9 18c0  ld   $c0,out     1421  ld(syncBits,OUT)                #28 End horizontal pulse
                                          1422
                                          1423  # Back porch B: second of 4 repeated scan lines
                                          1424  # - Recompute Xi from dXi and store for retrieval in the next scan lines
                                          1425  label('videoB')
videoB:       02ca 00d3  ld   $d3         1426  ld('videoC')                    #29 2nd scanline of 4
              02cb c20d  st   [$0d]       1427  st([nextVideo])                 #30
              02cc 1401  ld   $01,y       1428  ld(videoTable>>8,Y)             #31
              02cd 0109  ld   [$09]       1429  ld([videoY])                    #32
              02ce 9001  adda $01,x       1430  adda(1,X)                       #33
              02cf 011f  ld   [$1f]       1431  ld([frameX])                    #34
              02d0 8d00  adda [y,x]       1432  adda([Y,X])                     #35
              02d1 fd0a  bra  [$0a]       1433  bra([videoModeB])               #36
              02d2 d21f  st   [$1f],x     1434  st([frameX],X)                  #37 Store in RAM and X
                                          1435
                                          1436  # Back porch C: third of 4 repeated scan lines
                                          1437  # - Nothing new to for video do as Yi and Xi are known,
                                          1438  # - This is the time to emit and reset the next sound sample
                                          1439  label('videoC')
videoC:       02d3 00dc  ld   $dc         1440  ld('videoD')                    #29 3rd scanline of 4
              02d4 c20d  st   [$0d]       1441  st([nextVideo])                 #30
              02d5 0103  ld   [$03]       1442  ld([sample])                    #31 New sound sample is ready (didn't fit in the audio loop)
              02d6 4108  ora  [$08]       1443  ora([audioBitMask])             #32 configure 4/6/8bit audio
              02d7 2114  anda [$14]       1444  anda([xoutMask])                #33
              02d8 c213  st   [$13]       1445  st([xout])                      #34 Update [xout] with new sample (4 channels just updated)
              02d9 c003  st   $03,[$03]   1446  st(sample, [sample])            #35 Reset for next sample
              02da fd0b  bra  [$0b]       1447  bra([videoModeC])               #36
              02db 111f  ld   [$1f],x     1448  ld([frameX],X)                  #37
                                          1449
                                          1450  # Back porch D: last of 4 repeated scan lines
                                          1451  # - Calculate the next frame index
                                          1452  # - Decide if this is the last line or not
                                          1453  label('videoD')                 # Default video mode
videoD:       02dc 111f  ld   [$1f],x     1454  ld([frameX], X)                 #29 4th scanline of 4
              02dd 0109  ld   [$09]       1455  ld([videoY])                    #30
              02de a0ee  suba $ee         1456  suba((120-1)*2)                 #31
                                          1457  beq('.lastpixels#34')           #32
              02df f0e5  beq  .lastpixels#34
              02e0 80f0  adda $f0         1458  adda(120*2)                     #33 More pixel lines to go
              02e1 c209  st   [$09]       1459  st([videoY])                    #34
              02e2 0001  ld   $01         1460  ld('videoA')                    #35
              02e3 fd0c  bra  [$0c]       1461  bra([videoModeD])               #36
              02e4 c20d  st   [$0d]       1462  st([nextVideo])                 #37
                                          1463
                                          1464  label('.lastpixels#34')
                                          1465  if soundDiscontinuity == 1:
.lastpixels#34:
              02e5 c003  st   $03,[$03]   1466    st(sample, [sample])          #34 Sound continuity
                                          1467  else:
                                          1468    nop()                         #34
              02e6 00e9  ld   $e9         1469  ld('videoE')                    #35 No more pixel lines to go
              02e7 fd0c  bra  [$0c]       1470  bra([videoModeD])               #36
              02e8 c20d  st   [$0d]       1471  st([nextVideo])                 #37
                                          1472
                                          1473  # Back porch "E": after the last line
                                          1474  # - Go back and and enter vertical blank (program page 2)
                                          1475  label('videoE') # Exit visible area
videoE:       02e9 1401  ld   $01,y       1476  ld(hi('vBlankStart'),Y)         #29 Return to vertical blank interval
              02ea e004  jmp  y,$04       1477  jmp(Y,'vBlankStart')            #30
              02eb 00c0  ld   $c0         1478  ld(syncBits)                    #31
                                          1479
                                          1480  # Video mode that blacks out one or more pixel lines from the top of screen.
                                          1481  # This yields some speed, but also frees up screen memory for other purposes.
                                          1482  # Note: Sound output becomes choppier the more pixel lines are skipped
                                          1483  # Note: The vertical blank driver leaves 0x80 behind in [videoSync1]
                                          1484  label('videoF')
videoF:       02ec 0120  ld   [$20]       1485  ld([videoSync1])                #29 Completely black pixel line
              02ed 8080  adda $80         1486  adda(0x80)                      #30
              02ee d220  st   [$20],x     1487  st([videoSync1],X)              #31
              02ef 011f  ld   [$1f]       1488  ld([frameX])                    #32
              02f0 a500  suba [x]         1489  suba([X])                       #33 Decrements every two VGA scanlines
              02f1 f0f4  beq  .videoF#36  1490  beq('.videoF#36')               #34
              02f2 c21f  st   [$1f]       1491  st([frameX])                    #35
              02f3 fcf6  bra  nopixels    1492  bra('nopixels')                 #36
                                          1493  label('.videoF#36')
.videoF#36:   02f4 0001  ld   $01         1494  ld('videoA')                    #36,37 Transfer to visible screen area
              02f5 c20d  st   [$0d]       1495  st([nextVideo])                 #37
                                          1496  #
                                          1497  # Alternative for pixel burst: faster application mode
                                          1498  label('nopixels')
nopixels:     02f6 00ff  ld   $ff         1499  runVcpu(200-38, 'ABCD line 40-520',
              02f7 c21e  st   [$1e]
              02f8 1502  ld   [$02],y
              02f9 e0ff  jmp  y,$ff
              02fa 003b  ld   $3b
                                          1500    returnTo=0x1ff)               #38 Application interpreter (black scanlines)
                                          1501
                                          1502  #-----------------------------------------------------------------------
                                          1503  #
                                          1504  #  $0300 ROM page 3: Application interpreter primary page
                                          1505  #
                                          1506  #-----------------------------------------------------------------------
                                          1507  #
                                          1508  # Enter the timing-aware application interpreter (aka virtual CPU, vCPU)
                                          1509  #
                                          1510  # This routine will execute as many as possible instructions in the
                                          1511  # allotted time. When time runs out, it synchronizes such that the total
                                          1512  # duration matches the caller's request. Durations are counted in `ticks',
                                          1513  # which are multiples of 2 clock cycles.
                                          1514  #
                                          1515  # Synopsis: Use the runVcpu() macro as entry point
                                          1516
                                          1517  # We let 'ENTER' begin one word before the page boundary, for a bit extra
                                          1518  # precious space in the packed interpreter code page. Although ENTER's
                                          1519  # first instruction is bra() which normally doesn't cross page boundaries,
                                          1520  # in this case it will still jump into the right space, because branches
                                          1521  # from $xxFF land in the next page anyway.
                                          1522  while pc()&255 < 255:
              02fb 0200  nop              1523    nop()
              02fc 0200  nop
              02fd 0200  nop
              02fe 0200  nop
                                          1524  label('ENTER')
ENTER:        02ff fc03  bra  .next2      1525  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          1526  # --- Page boundary ---
                                          1527  align(0x100,size=0x100)
                                          1528  label('NEXTY')                  # Alternative for REENTER
NEXTY:        0300 1517  ld   [$17],y     1529  ld([vPC+1],Y)                   #1
                                          1530
                                          1531  # Fetch next instruction and execute it, but only if there are sufficient
                                          1532  # ticks left for the slowest instruction.
                                          1533  label('NEXT')
NEXT:         0301 8115  adda [$15]       1534  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              0302 e80b  blt  EXIT        1535  blt('EXIT')                     #1 Escape near time out
                                          1536  label('.next2')
.next2:       0303 c215  st   [$15]       1537  st([vTicks])                    #2
              0304 0116  ld   [$16]       1538  ld([vPC])                       #3 Advance vPC
              0305 8002  adda $02         1539  adda(2)                         #4
              0306 d216  st   [$16],x     1540  st([vPC],X)                     #5
              0307 0d00  ld   [y,x]       1541  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              0308 de00  st   [y,x++]     1542  st([Y,Xpp])                     #7 Just X++
              0309 fe00  bra  ac          1543  bra(AC)                         #8 Dispatch
              030a 0d00  ld   [y,x]       1544  ld([Y,X])                       #9 Prefetch operand
                                          1545
                                          1546  # Resync with video driver and transfer control
                                          1547  label('EXIT')
EXIT:         030b 800f  adda $0f         1548  adda(maxTicks)                  #3
                                          1549  label('RESYNC')
RESYNC:       030c e40c  bgt  RESYNC      1550  bgt(pc()&255)                   #4 Resync
              030d a001  suba $01         1551  suba(1)                         #5
              030e 1401  ld   $01,y       1552  ld(hi('vBlankStart'),Y)         #6
              030f e11e  jmp  y,[$1e]     1553  jmp(Y,[vReturn])                #7 To video driver
              0310 0000  ld   $00         1554  ld(0)                           #8 AC should be 0 already. Still..
                                          1555  assert vCPU_overhead ==          9
                                          1556
                                          1557  # pc = 0x0311, Opcode = 0x11
                                          1558  # Instruction LDWI: Load immediate word constant (vAC=D), 24 cycles
                                          1559  label('LDWI')
LDWI:         0311 140b  ld   $0b,y       1560  ld(hi('ldwi#13'),Y)             #10
              0312 e0b0  jmp  y,$b0       1561  jmp(Y,'ldwi#13')                #11
              0313 1517  ld   [$17],y     1562  ld([vPC+1],Y)                   #12
                                          1563
                                          1564  # pc = 0x0314, Opcode = 0x14
                                          1565  # Instruction DEC: Decrement byte var ([D]--), 22 cycles
                                          1566  label('DEC')
DEC:          0314 1416  ld   $16,y       1567  ld(hi('dec#13'),Y)              #10
              0315 e00a  jmp  y,$0a       1568  jmp(Y,'dec#13')                 #11
                                          1569  # dummy                         #12 Overlap
                                          1570  #
                                          1571  # pc = 0x0316, Opcode = 0x16
                                          1572  # Instruction MOVQB: Load a byte var with a small constant 0..255, 28 cycles
                                          1573  label('MOVQB')
MOVQB:        0316 1416  ld   $16,y       1574  ld(hi('movqb#13'),Y)            #10 #12
              0317 e069  jmp  y,$69       1575  jmp(Y,'movqb#13')               #11
                                          1576  # dummy                         #12 Overlap
                                          1577  #
                                          1578  # pc = 0x0318, Opcode = 0x18
                                          1579  # Instruction LSRB: Logical shift right byte var, 28 cycles
                                          1580  label('LSRB')
LSRB:         0318 1416  ld   $16,y       1581  ld(hi('lsrb#13'),Y)             #10 #12
              0319 e0b7  jmp  y,$b7       1582  jmp(Y,'lsrb#13')                #11
                                          1583  # dummy                         #12 Overlap
                                          1584  #
                                          1585  # pc = 0x031a, Opcode = 0x1a
                                          1586  # Instruction LD: Load byte from zero page (vAC=[D]), 22 cycles
                                          1587  label('LD')
LD:           031a 1416  ld   $16,y       1588  ld(hi('ld#13'),Y)               #10 #12
              031b e011  jmp  y,$11       1589  jmp(Y,'ld#13')                  #11
                                          1590  # dummy                         #12 Overlap
                                          1591  #
                                          1592  # pc = 0x031c, Opcode = 0x1c
                                          1593  # Instruction ADDBI: dst.lo = imm + src.lo, 30 cycles
                                          1594  label('ADDBI')
ADDBI:        031c 1435  ld   $35,y       1595  ld(hi('addbi#13'),Y)            #10 #12
              031d e000  jmp  y,$00       1596  jmp(Y,'addbi#13')               #11
              031e 1517  ld   [$17],y     1597  ld([vPC+1],Y)                   #12 vPC.hi
                                          1598
                                          1599  # pc = 0x031f, Opcode = 0x1f
                                          1600  # Instruction SPARE0:
                                          1601  label('SPARE0')
SPARE0:       031f 1403  ld   $03,y       1602  ld(hi('SPARE0'),Y)              #10
              0320 e01f  jmp  y,$1f       1603  jmp(Y,'SPARE0')                 #11
                                          1604  # dummy                         #12 Overlap, not dependent on ld(AC,X) anymore
                                          1605  #
                                          1606  # pc = 0x0321, Opcode = 0x21
                                          1607  # Instruction LDW: Load word from zero page (vAC=[D]+256*[D+1]), 24 cycles
                                          1608  label('LDW')
LDW:          0321 1416  ld   $16,y       1609  ld(hi('ldw#13'),Y)              #10 #12
              0322 e0bf  jmp  y,$bf       1610  jmp(Y,'ldw#13')                 #11
                                          1611  # dummy                         #12 Overlap
                                          1612  #
                                          1613  # pc = 0x0323, Opcode = 0x23
                                          1614  # Instruction PEEKV+: Peek byte at address contained in var, inc var, 30 cycles
                                          1615  label('PEEKV+')
PEEKV+:       0323 1418  ld   $18,y       1616  ld(hi('peekv+#13'),Y)           #10 #12
              0324 e00b  jmp  y,$0b       1617  jmp(Y,'peekv+#13')              #11
                                          1618  # dummy                         #12 Overlap
                                          1619  #
                                          1620  # pc = 0x0325, Opcode = 0x25
                                          1621  # Instruction POKEI: Poke immediate byte into address contained in [vAC], 20 cycles
                                          1622  label('POKEI')
POKEI:        0325 1417  ld   $17,y       1623  ld(hi('pokei#13'),Y)            #10 #12
              0326 e0ca  jmp  y,$ca       1624  jmp(Y,'pokei#13')               #11
                                          1625  # dummy                         #12 Overlap
                                          1626  #
                                          1627  # pc = 0x0327, Opcode = 0x27
                                          1628  # Instruction LSLV: Logical shift left word var, 28 cycles
                                          1629  label('LSLV')
LSLV:         0327 1416  ld   $16,y       1630  ld(hi('lslv#13'),Y)             #10 #12
              0328 e0a3  jmp  y,$a3       1631  jmp(Y,'lslv#13')                #11
                                          1632  # dummy                         #12 Overlap
                                          1633  #
                                          1634  # pc = 0x0329, Opcode = 0x29
                                          1635  # Instruction ADDVB: dst.lo = src0.lo + src1.lo, 36 cycles
                                          1636  label('ADDVB')
ADDVB:        0329 142d  ld   $2d,y       1637  ld(hi('addvb#13'),Y)            #10 #12
              032a e0b4  jmp  y,$b4       1638  jmp(Y,'addvb#13')               #11
                                          1639  # dummy                         #12 Overlap
                                          1640  #
                                          1641  # pc = 0x032b, Opcode = 0x2b
                                          1642  # Instruction STW: Store word in zero page ([D],[D+1]=vAC&255,vAC>>8), 24 cycles
                                          1643  label('STW')
STW:          032b 1416  ld   $16,y       1644  ld(hi('stw#13'),Y)              #10 #12
              032c e0c9  jmp  y,$c9       1645  jmp(Y,'stw#13')                 #11
                                          1646  # dummy                         #12 Overlap
                                          1647  #
                                          1648  # pc = 0x032d, Opcode = 0x2d
                                          1649  # Instruction CNVXY: var = src0.lo | ((src1.lo + 8) <<8), 44 cycles
                                          1650  label('CNVXY')
CNVXY:        032d 142e  ld   $2e,y       1651  ld(hi('cnvxy#13'),Y)            #10 #12
              032e e07c  jmp  y,$7c       1652  jmp(Y,'cnvxy#13')               #11
                                          1653  # dummy                         #12 Overlap
                                          1654  #
                                          1655  # pc = 0x032f, Opcode = 0x2f
                                          1656  # Instruction PREFX2
                                          1657  label('PREFX2')
PREFX2:       032f 1414  ld   $14,y       1658  ld(hi('prefx2#13'),Y)           #10 #12
              0330 e0cd  jmp  y,$cd       1659  jmp(Y,'prefx2#13')              #11
              0331 c22b  st   [$2b]       1660  st([sysArgs+7])                 #12 Operand
                                          1661
                                          1662  # pc = 0x0332, Opcode = 0x32
                                          1663  # Instruction MOVWA: Move 16bits from src zero page var to dst zero page var, vAC=dst, 40 cycles
                                          1664  label('MOVWA')
MOVWA:        0332 1417  ld   $17,y       1665  ld(hi('movwa#13'),Y)            #10
              0333 e0df  jmp  y,$df       1666  jmp(Y,'movwa#13')               #11
              0334 1517  ld   [$17],y     1667  ld([vPC+1],Y)                   #12 vPC.hi
                                          1668
                                          1669  # pc = 0x0335, Opcode = 0x35
                                          1670  # Instruction BCC: Test AC sign and branch conditionally, variable, (24-26), cycles
                                          1671  label('BCC')
BCC:          0335 de00  st   [y,x++]     1672  st([Y,Xpp])                     #10 X++
              0336 143f  ld   $3f,y       1673  ld(0x3f,Y)                      #11
              0337 e200  jmp  y,ac        1674  jmp(Y,AC)                       #12 AC is the conditional operand
                                          1675  # dummy                         #13 Overlap
                                          1676  #
                                          1677  # pc = 0x0338, Opcode = 0x38
                                          1678  # Instruction SUBBI: dst.lo = src.lo - imm, 34 cycles
                                          1679  label('SUBBI')
SUBBI:        0338 1435  ld   $35,y       1680  ld(hi('subbi#13'),Y)            #10 #12
              0339 e010  jmp  y,$10       1681  jmp(Y,'subbi#13')               #11
              033a 1517  ld   [$17],y     1682  ld([vPC+1],Y)                   #12 vPC.hi
                                          1683
                                          1684  # pc = 0x033b, Opcode = 0x3b
                                          1685  # Instruction DEEKV: read word from address contained in var, 28 cycles
                                          1686  label('DEEKV')
DEEKV:        033b 1416  ld   $16,y       1687  ld(hi('deekv#13'),Y)            #10
              033c e093  jmp  y,$93       1688  jmp(Y,'deekv#13')               #11
                                          1689  # dummy                         #12 Overlap
                                          1690  #
                                          1691  # pc = 0x033d, Opcode = 0x3d
                                          1692  # Instruction ARRVW: vAC = imm16 + idx*2, 56 cycles
                                          1693  label('ARRVW')
ARRVW:        033d 1428  ld   $28,y       1694  ld(hi('arrvw#13'),Y)            #10 #12
              033e e0a0  jmp  y,$a0       1695  jmp(Y,'arrvw#13')               #11
                                          1696  # dummy                         #12 Overlap
                                          1697  #
                                          1698  # pc = 0x033f, Opcode = 0x3f
                                          1699  # Instruction LDARRW: vAC = deek [imm16 + idx*2], 62 cycles
                                          1700  label('LDARRW')
LDARRW:       033f 1436  ld   $36,y       1701  ld(hi('ldarrw#13'),Y)           #10
              0340 e037  jmp  y,$37       1702  jmp(Y,'ldarrw#13')              #11
              0341 1517  ld   [$17],y     1703  ld([vPC+1],Y)                   #12 vPC.hi
                                          1704
                                          1705  # pc = 0x0342, Opcode = 0x42
                                          1706  # Instruction ADDVI: dst = src + imm, vAC = dst, 54 cycles
                                          1707  label('ADDVI')
ADDVI:        0342 1428  ld   $28,y       1708  ld(hi('addvi#13'),Y)            #10
              0343 e000  jmp  y,$00       1709  jmp(Y,'addvi#13')               #11
                                          1710  # dummy                         #12 Overlap
                                          1711
                                          1712  # pc = 0x0344, Opcode = 0x44
                                          1713  # Instruction SUBVI: dst = src - imm, vAC = dst, 54 cycles
                                          1714  label('SUBVI')
SUBVI:        0344 1428  ld   $28,y       1715  ld(hi('subvi#13'),Y)            #10 #12
              0345 e02f  jmp  y,$2f       1716  jmp(Y,'subvi#13')               #11
                                          1717  # dummy                         #12 Overlap
                                          1718
                                          1719  # pc = 0x0346, Opcode = 0x46
                                          1720  # Instruction DEEKV+: Deek word at address contained in var, var += 2, 30 cycles
                                          1721  label('DEEKV+')
DEEKV+:       0346 1418  ld   $18,y       1722  ld(hi('deekv+#13'),Y)           #10 #12
              0347 e051  jmp  y,$51       1723  jmp(Y,'deekv+#13')              #11
                                          1724  # dummy                         #12 Overlap
                                          1725  #
                                          1726  # pc = 0x0348, Opcode = 0x48
                                          1727  # Instruction SUBVB: dst.lo = src0.lo - src1.lo, 36 cycles
                                          1728  label('SUBVB')
SUBVB:        0348 142d  ld   $2d,y       1729  ld(hi('subvb#13'),Y)            #10 #12
              0349 e0d0  jmp  y,$d0       1730  jmp(Y,'subvb#13')               #11
                                          1731  # dummy                         #12 Overlap
                                          1732  #
                                          1733  # pc = 0x034a, Opcode = 0x4a
                                          1734  # Instruction DJGE:
                                          1735  label('DJGE')
DJGE:         034a 142b  ld   $2b,y       1736  ld(hi('djge#13'),Y)             #10 #12
              034b e000  jmp  y,$00       1737  jmp(Y,'djge#13')                #11
              034c 1517  ld   [$17],y     1738  ld([vPC+1],Y)                   #12
                                          1739
                                          1740  # pc = 0x034d, Opcode = 0x4d
                                          1741  # Instruction MOVQW: Load a word var with a small constant 0..255, 28 cycles
                                          1742  label('MOVQW')
MOVQW:        034d 1416  ld   $16,y       1743  ld(hi('movqw#13'),Y)            #10 #12
              034e e076  jmp  y,$76       1744  jmp(Y,'movqw#13')               #11
                                          1745  # dummy                         #12 Overlap
                                          1746  #
                                          1747  # pc = 0x034f, Opcode = 0x4f
                                          1748  # Instruction STWM: store [vAC] into [imm16], 30 cycles
                                          1749  label('STWM')
STWM:         034f 142e  ld   $2e,y       1750  ld(hi('stwm#13'),Y)             #10 #12
              0350 e0af  jmp  y,$af       1751  jmp(Y,'stwm#13')                #11
                                          1752  # dummy                         #12 Overlap
                                          1753  #
                                          1754  # pc = 0x0351, Opcode = 0x51
                                          1755  # Instruction STARRW: doke [imm16 + idx*2] with vAC, 62 cycles
                                          1756  label('STARRW')
STARRW:       0351 1436  ld   $36,y       1757  ld(hi('starrw#13'),Y)           #10 #12
              0352 e06f  jmp  y,$6f       1758  jmp(Y,'starrw#13')              #11
                                          1759  # dummy                         #12 Overlap
                                          1760  #
                                          1761  # pc = 0x0353, Opcode = 0x53
                                          1762  # Instruction LDARRB: vAC = peek [imm16 + idx], 54 cycles
                                          1763  label('LDARRB')
LDARRB:       0353 143f  ld   $3f,y       1764  ld(hi('ldarrb#13'),Y)           #10 #12
              0354 e000  jmp  y,$00       1765  jmp(Y,'ldarrb#13')              #11
                                          1766  # dummy                         #12 Overlap
                                          1767  #
                                          1768  # pc = 0x0355, Opcode = 0x55
                                          1769  # Instruction STARRB: poke [imm16 + idx] with vAC.lo, 52 cycles
                                          1770  label('STARRB')
STARRB:       0355 143f  ld   $3f,y       1771  ld(hi('starrb#13'),Y)           #10 #12
              0356 e075  jmp  y,$75       1772  jmp(Y,'starrb#13')              #11
                                          1773  # dummy                         #12 Overlap
                                          1774  #
                                          1775  # pc = 0x0357, Opcode = 0x57
                                          1776  # Instruction STARRI: poke [imm16 + idx] with 8bit imm, 56 cycles
                                          1777  label('STARRI')
STARRI:       0357 143f  ld   $3f,y       1778  ld(hi('starri#13'),Y)           #10 #12
              0358 e0a3  jmp  y,$a3       1779  jmp(Y,'starri#13')              #11
                                          1780  # dummy                         #12 Overlap
                                          1781  #
                                          1782  # pc = 0x0359, Opcode = 0x59
                                          1783  # Instruction LDI: Load immediate small positive constant (vAC=D), 20 cycles
                                          1784  label('LDI')
LDI:          0359 1416  ld   $16,y       1785  ld(hi('ldi#13'),Y)              #10
              035a e019  jmp  y,$19       1786  jmp(Y,'ldi#13')                 #11
                                          1787  # dummy                         #12 Overlap
                                          1788  #
                                          1789  # pc = 0x035b, Opcode = 0x5b
                                          1790  # Instruction PEEKV: Read byte from address contained in var, 28 cycles
                                          1791  label('PEEKV')
PEEKV:        035b 1416  ld   $16,y       1792  ld(hi('peekv#13'),Y)            #10
              035c e085  jmp  y,$85       1793  jmp(Y,'peekv#13')               #11
              035d 1200  ld   ac,x        1794  ld(AC,X)                        #12
                                          1795
                                          1796  # pc = 0x035e, Opcode = 0x5e
                                          1797  # Instruction ST: Store byte in zero page ([D]=vAC&255), 20 cycles
                                          1798  label('ST')
ST:           035e 1416  ld   $16,y       1799  ld(hi('st#13'),Y)               #10
              035f e01f  jmp  y,$1f       1800  jmp(Y,'st#13')                  #11
                                          1801  # dummy                         #12 Overlap
                                          1802  #
                                          1803  # pc = 0x0360, Opcode = 0x60
                                          1804  # Instruction DOKEV+: doke word in vAC to address contained in var, var += 2, 30 cycles
                                          1805  label('DOKEV+')
DOKEV+:       0360 1418  ld   $18,y       1806  ld(hi('dokev+#13'),Y)           #10 #12
              0361 e079  jmp  y,$79       1807  jmp(Y,'dokev+#13')              #11
              0362 1400  ld   $00,y       1808  ld(0,Y)                         #12
                                          1809
                                          1810  # pc = 0x0363, Opcode = 0x63
                                          1811  # Instruction POP: Pop address from stack (vLR,vSP==[vSP]+256*[vSP+1],vSP+2), 30 cycles
                                          1812  label('POP')
POP:          0363 140b  ld   $0b,y       1813  ld(hi('pop#13'),Y)              #10
              0364 e0ba  jmp  y,$ba       1814  jmp(Y,'pop#13')                 #11
                                          1815  # dummy                         #12 Overlap
                                          1816  #
                                          1817  # pc = 0x0365, Opcode = 0x65
                                          1818  # Instruction MOVB: Moves a byte from src var to dst var, 28 cycles
                                          1819  label('MOVB')
MOVB:         0365 1416  ld   $16,y       1820  ld(hi('movb#13'),Y)             #10 #12
              0366 e042  jmp  y,$42       1821  jmp(Y,'movb#13')                #11
                                          1822  # dummy                         #12 Overlap
                                          1823  #
                                          1824  # pc = 0x0367, Opcode = 0x67
                                          1825  # Instruction PEEKA: Peek a byte from [vAC] to var, 24 cycles
                                          1826  label('PEEKA')
PEEKA:        0367 1416  ld   $16,y       1827  ld(hi('peeka#13'),Y)            #10 #12
              0368 e050  jmp  y,$50       1828  jmp(Y,'peeka#13')               #11
                                          1829  # dummy                         #12 Overlap
                                          1830  #
                                          1831  # pc = 0x0369, Opcode = 0x69
                                          1832  # Instruction POKEA: Poke a byte from var to [vAC], 22 cycles
                                          1833  label('POKEA')
POKEA:        0369 1417  ld   $17,y       1834  ld(hi('pokea#13'),Y)            #10 #12
              036a e0b2  jmp  y,$b2       1835  jmp(Y,'pokea#13')               #11
                                          1836  # dummy                         #12 Overlap
                                          1837
                                          1838  # pc = 0x036b, Opcode = 0x6b
                                          1839  # Instruction TEQ: Test for EQ, returns 0x0000 or 0xFFFF in zero page var, 24 cycles
                                          1840  label('TEQ')
TEQ:          036b 1415  ld   $15,y       1841  ld(hi('teq#13'),Y)              #10 #12
              036c e067  jmp  y,$67       1842  jmp(Y,'teq#13')                 #11
                                          1843  # dummy                         #12 Overlap
                                          1844  #
                                          1845  # pc = 0x036d, Opcode = 0x6d
                                          1846  # Instruction TNE: Test for NE, returns 0x0000 or 0xFFFF in zero page var, 24 cycles
                                          1847  label('TNE')
TNE:          036d 1415  ld   $15,y       1848  ld(hi('tne#13'),Y)              #10 #12
              036e e076  jmp  y,$76       1849  jmp(Y,'tne#13')                 #11
                                          1850  # dummy                         #12 Overlap
                                          1851  #
                                          1852  # pc = 0x036f, Opcode = 0x6f
                                          1853  # Instruction DEEKA: Deek a word from [vAC] to var, 30 cycles
                                          1854  label('DEEKA')
DEEKA:        036f 1416  ld   $16,y       1855  ld(hi('deeka#13'),Y)            #10 #12
              0370 e059  jmp  y,$59       1856  jmp(Y,'deeka#13')               #11
              0371 c21d  st   [$1d]       1857  st([vTmp])                      #12 mask
                                          1858
                                          1859  # pc = 0x0372, Opcode = 0x72
                                          1860  # Instruction LDWM: LDWI + DEEK, 30 cycles
                                          1861  label('LDWM')
LDWM:         0372 142e  ld   $2e,y       1862  ld(hi('ldwm#13'),Y)             #10
              0373 e09f  jmp  y,$9f       1863  jmp(Y,'ldwm#13')                #11
              0374 1517  ld   [$17],y     1864  ld([vPC+1],Y)                   #12 vPC.hi
                                          1865
                                          1866  # pc = 0x0375, Opcode = 0x75
                                          1867  # Instruction PUSH: Push vLR on stack ([vSP-2],v[vSP-1],vSP=vLR&255,vLR>>8,vLR-2), 30 cycles
                                          1868  label('PUSH')
PUSH:         0375 140b  ld   $0b,y       1869  ld(hi('push#13'),Y)             #10
              0376 e0ca  jmp  y,$ca       1870  jmp(Y,'push#13')                #11
                                          1871  # dummy                         #12 Overlap
                                          1872  #
                                          1873  # pc = 0x0377, Opcode = 0x77
                                          1874  # Instruction DOKEI: doke immediate word into address contained in [vAC], 28 cycles
                                          1875  label('DOKEI')
DOKEI:        0377 1417  ld   $17,y       1876  ld(hi('dokei#13'),Y)            #10 #12
              0378 e0d0  jmp  y,$d0       1877  jmp(Y,'dokei#13')               #11
                                          1878  # dummy                         #12 Overlap
                                          1879  #
                                          1880  # pc = 0x0379, Opcode = 0x79
                                          1881  # Instruction ARRW: vAC = imm16 + vAC*2, 48 cycles
                                          1882  label('ARRW')
ARRW:         0379 1428  ld   $28,y       1883  ld(hi('arrw#13'),Y)             #10
              037a e076  jmp  y,$76       1884  jmp(Y,'arrw#13')                #11
                                          1885  # dummy                         #12 Overlap
                                          1886  #
                                          1887  # pc = 0x037b, Opcode = 0x7b
                                          1888  # Instruction SCRLHR: horizontal scroll video rectangle, 46 cycles
                                          1889  label('SCRLHR')
SCRLHR:       037b 1431  ld   $31,y       1890  ld(hi('scrlhr#13'),Y)           #10
              037c e023  jmp  y,$23       1891  jmp(Y,'scrlhr#13')              #11
                                          1892  # dummy                         #12 Overlap
                                          1893  #
                                          1894  # pc = 0x037d, Opcode = 0x7d
                                          1895  # Instruction DOKEA: Doke a word from var to [vAC], 30 cycles
                                          1896  label('DOKEA')
DOKEA:        037d 1417  ld   $17,y       1897  ld(hi('dokea#13'),Y)            #10 #12
              037e e0ba  jmp  y,$ba       1898  jmp(Y,'dokea#13')               #11
                                          1899  # dummy                         #12 Overlap
                                          1900
                                          1901  # pc = 0x037f, Opcode = 0x7f
                                          1902  # Instruction LUP: ROM lookup (vAC=ROM[vAC+D]), 26 cycles
                                          1903  label('LUP')
LUP:          037f 1519  ld   [$19],y     1904  ld([vAC+1],Y)                   #10 #12
              0380 e0fb  jmp  y,$fb       1905  jmp(Y,251)                      #11 Trampoline offset
              0381 8118  adda [$18]       1906  adda([vAC])                     #12
                                          1907
                                          1908  # pc = 0x0382, Opcode = 0x82
                                          1909  # Instruction ANDI: Logical-AND with small constant (vAC&=D), 20 cycles
                                          1910  label('ANDI')
ANDI:         0382 1404  ld   $04,y       1911  ld(hi('andi#13'),Y)             #10
              0383 e022  jmp  y,$22       1912  jmp(Y,'andi#13')                #11
              0384 2118  anda [$18]       1913  anda([vAC])                     #12
                                          1914
                                          1915  # pc = 0x0385, Opcode = 0x85
                                          1916  # Instruction CALLI: Goto immediate address and remember vPC (vLR,vPC=vPC+3,$HHLL-2), 28 cycles
                                          1917  label('CALLI')
CALLI:        0385 1417  ld   $17,y       1918  ld(hi('calli#13'),Y)            #10
              0386 e000  jmp  y,$00       1919  jmp(Y,'calli#13')               #11
              0387 0116  ld   [$16]       1920  ld([vPC])                       #12
                                          1921
                                          1922  # pc = 0x0388, Opcode = 0x88
                                          1923  # Instruction ORI: Logical-OR with small constant (vAC|=D), 20 cycles
                                          1924  label('ORI')
ORI:          0388 1416  ld   $16,y       1925  ld(hi('ori#13'),Y)              #10
              0389 e025  jmp  y,$25       1926  jmp(Y,'ori#13')                 #11
                                          1927  # dummy                         #12 Overlap
                                          1928  #
                                          1929  # pc = 0x038a, Opcode = 0x8a
                                          1930  # Instruction PEEKA+: Peek a byte from [vAC] to var, incw vAC, 28-30 cycles
                                          1931  label('PEEKA+')
PEEKA+:       038a 1414  ld   $14,y       1932  ld(hi('peeka+#13'),Y)           #10 #12
              038b e046  jmp  y,$46       1933  jmp(Y,'peeka+#13')              #11
                                          1934  # dummy                         #12 Overlap
                                          1935  #
                                          1936  # pc = 0x038c, Opcode = 0x8c
                                          1937  # Instruction XORI: Logical-XOR with small constant (vAC^=D), 20 cycles
                                          1938  label('XORI')
XORI:         038c 1416  ld   $16,y       1939  ld(hi('xori#13'),Y)             #10 #12
              038d e02a  jmp  y,$2a       1940  jmp(Y,'xori#13')                #11
                                          1941  # dummy                         #12 Overlap
                                          1942  #
                                          1943  # pc = 0x038e, Opcode = 0x8e
                                          1944  # Instruction DBGE:  Decrement byte var and branch if >= 0, 30 cycles
                                          1945  label('DBGE')
DBGE:         038e 142a  ld   $2a,y       1946  ld(hi('dbge#13'),Y)             #10 #12
              038f e0a6  jmp  y,$a6       1947  jmp(Y,'dbge#13')                #11
                                          1948  # dummy                         #12 Overlap
                                          1949  #
                                          1950  # pc = 0x0390, Opcode = 0x90
                                          1951  # Instruction BRA: Branch unconditionally (vPC=(vPC&0xff00)+D), 18 cycles
                                          1952  label('BRA')
BRA:          0390 1416  ld   $16,y       1953  ld(hi('bra#13'),Y)              #10 #12
              0391 e000  jmp  y,$00       1954  jmp(Y,'bra#13')                 #11
              0392 c216  st   [$16]       1955  st([vPC])                       #12
                                          1956
                                          1957  # pc = 0x0393, Opcode = 0x93
                                          1958  # Instruction INC: Increment zero page byte ([D]++), 20 cycles
                                          1959  label('INC')
INC:          0393 1416  ld   $16,y       1960  ld(hi('inc#13'),Y)              #10
              0394 e003  jmp  y,$03       1961  jmp(Y,'inc#13')                 #11
                                          1962  # dummy                         #12 Overlap
                                          1963  #
                                          1964  # pc = 0x0395, Opcode = 0x95
                                          1965  # Instruction INCWA: Increment word var, vAC=var, 26-28 cycles
                                          1966  label('INCWA')
INCWA:        0395 1415  ld   $15,y       1967  ld(hi('incwa#13'),Y)            #10 #12
              0396 e0cd  jmp  y,$cd       1968  jmp(Y,'incwa#13')               #11
                                          1969  # dummy                         #12 Overlap
                                          1970  #
                                          1971  # pc = 0x0397, Opcode = 0x97
                                          1972  # Instruction SPARE1:
                                          1973  label('SPARE1')
SPARE1:       0397 1403  ld   $03,y       1974  ld(hi('SPARE1'),Y)              #10 #12
              0398 e097  jmp  y,$97       1975  jmp(Y,'SPARE1')                 #11
                                          1976  # dummy                         #12 Overlap, not dependent on ld(AC,X) anymore
                                          1977  #
                                          1978  # pc = 0x0399, Opcode = 0x99
                                          1979  # Instruction ADDW: Word addition with zero page (vAC+=[D]+256*[D+1]), 30 cycles
                                          1980  label('ADDW')
ADDW:         0399 1400  ld   $00,y       1981  ld(hi('addw#13'),Y)             #10 #12
              039a e080  jmp  y,$80       1982  jmp(Y,'addw#13')                #11 Y=0
              039b 1200  ld   ac,x        1983  ld(AC,X)                        #12 Address of low byte to be added
                                          1984
                                          1985  # pc = 0x039c, Opcode = 0x9c
                                          1986  # Instruction LDNI: Load an 8bit immediate as a negative 16bit immediate into vAC, 22 cycles
                                          1987  label('LDNI')
LDNI:         039c 1416  ld   $16,y       1988  ld(hi('ldni#13'),Y)             #10
              039d e02f  jmp  y,$2f       1989  jmp(Y,'ldni#13')                #11
                                          1990  # dummy                         #12 Overlap
                                          1991  #
                                          1992  # pc = 0x039e, Opcode = 0x9e
                                          1993  # Instruction DBNE:  Decrement byte var and branch if != 0, 28-30 cycles
                                          1994  label('DBNE')
DBNE:         039e 1415  ld   $15,y       1995  ld(hi('dbne#13'),Y)             #10 #12
              039f e053  jmp  y,$53       1996  jmp(Y,'dbne#13')                #11
                                          1997  #
                                          1998  # pc = 0x03a0, Opcode = 0xa0
                                          1999  # Instruction DEEKR: vAC = DEEK[vAC + idx*2], 52 cycles
                                          2000  label('DEEKR')
DEEKR:        03a0 142e  ld   $2e,y       2001  ld(hi('deekr#13'),Y)            #10 #12
              03a1 e0bf  jmp  y,$bf       2002  jmp(Y,'deekr#13')               #11
                                          2003  # dummy                         #12 Overlap
                                          2004  #
                                          2005  # pc = 0x03a2, Opcode = 0xa2
                                          2006  # Instruction PACKAW: vAC = src0.lo | (src1.lo <<8), 30 cycles
                                          2007  label('PACKAW')
PACKAW:       03a2 142e  ld   $2e,y       2008  ld(hi('packaw#13'),Y)           #10 #12
              03a3 e04a  jmp  y,$4a       2009  jmp(Y,'packaw#13')              #11
                                          2010  # dummy                         #12 Overlap
                                          2011  #
                                          2012  # pc = 0x03a4, Opcode = 0xa4, 26 to 46 cycles
                                          2013  # Instruction DJNE:
                                          2014  label('DJNE')
DJNE:         03a4 142a  ld   $2a,y       2015  ld(hi('djne#13'),Y)             #10 #12
              03a5 e0ba  jmp  y,$ba       2016  jmp(Y,'djne#13')                #11
              03a6 1517  ld   [$17],y     2017  ld([vPC+1],Y)                   #12
                                          2018
                                          2019  # pc = 0x03a7, Opcode = 0xa7
                                          2020  # Instruction CMPI: Compare byte variable to 8bit immediate, 36 cycles
                                          2021  label('CMPI')
CMPI:         03a7 1418  ld   $18,y       2022  ld(hi('cmpi#13'),Y)             #10
              03a8 e09e  jmp  y,$9e       2023  jmp(Y,'cmpi#13')                #11
                                          2024  # dummy                         #12 Overlap
                                          2025
                                          2026  # pc = 0x03a9, Opcode = 0xa9
                                          2027  # Instruction ADDVW: Add two 16bit zero page vars, dst = src0 + src1, vAC = dst, 60 cycles
                                          2028  label('ADDVW')
ADDVW:        03a9 1414  ld   $14,y       2029  ld(hi('addvw#13'),Y)            #10 #12
              03aa e05b  jmp  y,$5b       2030  jmp(Y,'addvw#13')               #11
                                          2031  # dummy                         #12 Overlap
                                          2032
                                          2033  # pc = 0x03ab, Opcode = 0xab
                                          2034  # Instruction SUBVW: Subtract two 16bit zero page vars, dst = src0 - src1, vAC = dst, 58 cycles
                                          2035  label('SUBVW')
SUBVW:        03ab 1414  ld   $14,y       2036  ld(hi('subvw#13'),Y)            #10 #12
              03ac e090  jmp  y,$90       2037  jmp(Y,'subvw#13')               #11
                                          2038  # dummy                         #12 Overlap
                                          2039
                                          2040  # pc = 0x03ad, Opcode = 0xad
                                          2041  # Instruction PEEK: Read byte from memory (vAC=[vAC]), 26 cycles
                                          2042  label('PEEK')
PEEK:         03ad 1404  ld   $04,y       2043  ld(hi('peek#13'),Y)             #10 #12
              03ae e052  jmp  y,$52       2044  jmp(Y,'peek#13')                #11
                                          2045  # dummy                         #12 Overlap
                                          2046  #
                                          2047  # The 'SYS' vCPU instruction first checks the number of desired ticks given by
                                          2048  # the operand. As long as there are insufficient ticks available in the current
                                          2049  # time slice, the instruction will be retried. This will effectively wait for
                                          2050  # the next scan line if the current slice is almost out of time. Then a jump to
                                          2051  # native code is made. This code can do whatever it wants, but it must return
                                          2052  # to the 'REENTER' label when done. When returning, AC must hold (the negative
                                          2053  # of) the actual consumed number of whole ticks for the entire virtual
                                          2054  # instruction cycle (from NEXT to NEXT). This duration may not exceed the prior
                                          2055  # declared duration in the operand + 28 (or maxTicks). The operand specifies the
                                          2056  # (negative) of the maximum number of *extra* ticks that the native call will
                                          2057  # need. The GCL compiler automatically makes this calculation from gross number
                                          2058  # of cycles to excess number of ticks.
                                          2059  # SYS functions can modify vPC to implement repetition. For example to split
                                          2060  # up work into multiple chucks.
                                          2061  label('.sys#13')
.sys#13:      03af 1418  ld   $18,y       2062  ld(hi('.sys#16'),Y)             #13 #12
              03b0 e000  jmp  y,$00       2063  jmp(Y,'.sys#16')                #14
                                          2064  # dummy                         #15 Overlap
                                          2065  #
                                          2066  # pc = 0x03b1, Opcode = 0xb1
                                          2067  # Instruction PREFX1
                                          2068  label('PREFX1')
PREFX1:       03b1 1414  ld   $14,y       2069  ld(hi('prefx1#13'),Y)           #10 #15
              03b2 e0d5  jmp  y,$d5       2070  jmp(Y,'prefx1#13')              #11
              03b3 0023  ld   $23         2071  ld(hi('PREFX1_PAGE'))           #12 ENTER is at $(n-1)ff, where n = instruction page
                                          2072
                                          2073  # pc = 0x03b4, Opcode = 0xb4
                                          2074  # Instruction SYS: Native call, <=256 cycles (<=128 ticks, in reality less)
                                          2075  label('SYS')
SYS:          03b4 8115  adda [$15]       2076  adda([vTicks])                  #10
              03b5 e8af  blt  .sys#13     2077  blt('.sys#13')                  #11
              03b6 1523  ld   [$23],y     2078  ld([sysFn+1],Y)                 #12
              03b7 e122  jmp  y,[$22]     2079  jmp(Y,[sysFn])                  #13
                                          2080  # dummy                         #14 Overlap
                                          2081  #
                                          2082  # pc = 0x03b8, Opcode = 0xb8
                                          2083  # Instruction SUBW: Word subtract with zero page (AC-=[D]+256*[D+1]), 30 cycles
                                          2084  label('SUBW')
SUBW:         03b8 1417  ld   $17,y       2085  ld(hi('subw#13'),Y)             #10 #14
              03b9 e00c  jmp  y,$0c       2086  jmp(Y,'subw#13')                #11 Y=0
              03ba 1200  ld   ac,x        2087  ld(AC,X)                        #12 Address of low byte to be added
                                          2088
                                          2089  # pc = 0x03bb, Opcode = 0xbb
                                          2090  # Instruction JEQ: jump to 16bit address if vAC=0
                                          2091  label('JEQ')
JEQ:          03bb 1418  ld   $18,y       2092  ld(hi('jeq#13'),Y)              #10
              03bc e0c4  jmp  y,$c4       2093  jmp(Y,'jeq#13')                 #11
                                          2094  # dummy                         #12 Overlap
                                          2095  #
                                          2096  # pc = 0x03bd, Opcode = 0xbd
                                          2097  # Instruction JNE: jump to 16bit address if vAC!=0
                                          2098  label('JNE')
JNE:          03bd 1418  ld   $18,y       2099  ld(hi('jne#13'),Y)              #10 #12
              03be e0d6  jmp  y,$d6       2100  jmp(Y,'jne#13')                 #11
                                          2101  # dummy                         #12 Overlap
                                          2102  #
                                          2103  # pc = 0x03bf, Opcode = 0xbf
                                          2104  # Instruction JLT: jump to 16bit address if vAC<0
                                          2105  label('JLT')
JLT:          03bf 1416  ld   $16,y       2106  ld(hi('jlt#13'),Y)              #10 #12
              03c0 e0d2  jmp  y,$d2       2107  jmp(Y,'jlt#13')                 #11
                                          2108  # dummy                         #12 Overlap
                                          2109  #
                                          2110  # pc = 0x03c1, Opcode = 0xc1
                                          2111  # Instruction JGT: jump to 16bit address if vAC>0
                                          2112  label('JGT')
JGT:          03c1 1414  ld   $14,y       2113  ld(hi('jgt#13'),Y)              #10 #12
              03c2 e000  jmp  y,$00       2114  jmp(Y,'jgt#13')                 #11
                                          2115  # dummy                         #12 Overlap
                                          2116  #
                                          2117  # pc = 0x03c3, Opcode = 0xc3
                                          2118  # Instruction JLE: jump to 16bit address if vAC<=0
                                          2119  label('JLE')
JLE:          03c3 1414  ld   $14,y       2120  ld(hi('jle#13'),Y)              #10 #12
              03c4 e019  jmp  y,$19       2121  jmp(Y,'jle#13')                 #11
                                          2122  # dummy                         #12 Overlap
                                          2123  #
                                          2124  # pc = 0x03c5, Opcode = 0xc5
                                          2125  # Instruction JGE: jump to 16bit address if vAC>=0
                                          2126  label('JGE')
JGE:          03c5 1414  ld   $14,y       2127  ld(hi('jge#13'),Y)              #10 #12
              03c6 e035  jmp  y,$35       2128  jmp(Y,'jge#13')                 #11
                                          2129  # dummy                         #12 Overlap
                                          2130  #
                                          2131  # pc = 0x03c7, Opcode = 0xc7
                                          2132  # Instruction PREFX3: switches instruction page to 0x2200
                                          2133  # original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          2134  label('PREFX3')
PREFX3:       03c7 1414  ld   $14,y       2135  ld(hi('prefx3#13'),Y)           #10 #12
              03c8 e0c5  jmp  y,$c5       2136  jmp(Y,'prefx3#13')              #11
              03c9 c22b  st   [$2b]       2137  st([sysArgs+7])                 #12 Second operand
                                          2138
                                          2139  # SYS calls and instruction implementations rely on these labels
                                          2140  label('REENTER_28')
REENTER_28:   03ca 00f2  ld   $f2         2141  ld(-28/2)                       #25
                                          2142  label('REENTER')
REENTER:      03cb fc01  bra  NEXT        2143  bra('NEXT')                     #26 Return from SYS calls
              03cc 1517  ld   [$17],y     2144  ld([vPC+1],Y)                   #27
                                          2145
                                          2146  fillers(until=0xcd)
                                          2147
                                          2148  #
                                          2149  # The instructions below are all implemented in the second code page. Jumping
                                          2150  # back and forth makes each 6 cycles slower, but it also saves space in the
                                          2151  # primary page for the instructions above. Most of them are in fact not very
                                          2152  # critical, as evidenced by the fact that they weren't needed for the first
                                          2153  # Gigatron applications (Snake, Racer, Mandelbrot, Loader). By providing them
                                          2154  # in this way, at least they don't need to be implemented as a SYS extension.
                                          2155  #
                                          2156  # pc = 0x03cd, Opcode = 0xcd
                                          2157  # Instruction DEF: Define data or code (vAC,vPC=vPC+2,(vPC&0xff00)+D), 26 cycles
                                          2158  label('DEF')
DEF:          03cd 1404  ld   $04,y       2159  ld(hi('def#13'),Y)              #10
              03ce e017  jmp  y,$17       2160  jmp(Y,'def#13')                 #11
                                          2161  # dummy                         #12 Overlap
                                          2162  #
                                          2163  # pc = 0x03cf, Opcode = 0xcf
                                          2164  # Instruction CALL: Goto address and remember vPC (vLR,vPC=vPC+2,[D]+256*[D+1]-2), 30 cycles
                                          2165  label('CALL')
CALL:         03cf 1404  ld   $04,y       2166  ld(hi('call#13'),Y)             #10 #12
              03d0 e007  jmp  y,$07       2167  jmp(Y,'call#13')                #11
                                          2168  # dummy                         #12 Overlap
                                          2169  #
                                          2170  # pc = 0x03d1, Opcode = 0xd1
                                          2171  # Instruction POKEV+: Poke byte in vAC to address contained in var, inc var, 30 cycles
                                          2172  label('POKEV+')
POKEV+:       03d1 1418  ld   $18,y       2173  ld(hi('pokev+#13'),Y)           #10 #12
              03d2 e030  jmp  y,$30       2174  jmp(Y,'pokev+#13')              #11
                                          2175  # dummy                         #12 Overlap
                                          2176  #
                                          2177  # pc = 0x03d3, Opcode = 0xd3
                                          2178  # Instruction DOKEI+: doke immediate word into [vAC], vAC += 2, 40 cycles
                                          2179  label('DOKEI+')
DOKEI+:       03d3 1438  ld   $38,y       2180  ld(hi('dokei+#13'),Y)           #10 #12
              03d4 e087  jmp  y,$87       2181  jmp(Y,'dokei+#13')              #11
                                          2182  # dummy                         #12 Overlap
                                          2183  #
                                          2184  # pc = 0x03d5, Opcode = 0xd5
                                          2185  # Instruction TGE: Test for GE, returns 0x0000 or 0xFFFF in zero page var, 24 cycles
                                          2186  label('TGE')
TGE:          03d5 1415  ld   $15,y       2187  ld(hi('tge#13'),Y)              #10 #12
              03d6 e085  jmp  y,$85       2188  jmp(Y,'tge#13')                 #11
                                          2189  # dummy                         #12 Overlap
                                          2190  #
                                          2191  # pc = 0x03d7, Opcode = 0xd7
                                          2192  # Instruction TLT: Test for LT, returns 0x0000 or 0xFFFF in zero page var, 24 cycles
                                          2193  label('TLT')
TLT:          03d7 1415  ld   $15,y       2194  ld(hi('tlt#13'),Y)             #10 #12
              03d8 e093  jmp  y,$93       2195  jmp(Y,'tlt#13')                #11
                                          2196  # dummy                        #12 Overlap
                                          2197  #
                                          2198  # pc = 0x03d9, Opcode = 0xd9
                                          2199  # Instruction TGT: Test for GT, returns 0x0000 or 0xFFFF in zero page var, 24-26 cycles
                                          2200  label('TGT')
TGT:          03d9 1415  ld   $15,y       2201  ld(hi('tgt#13'),Y)             #10 #12
              03da e0a1  jmp  y,$a1       2202  jmp(Y,'tgt#13')                #11
                                          2203  # dummy                        #12 Overlap
                                          2204  #
                                          2205  # pc = 0x03db, Opcode = 0xdb
                                          2206  # Instruction TLE: Test for LE, returns 0x0000 or 0xFFFF in zero page var, 24-26 cycles
                                          2207  label('TLE')
TLE:          03db 1415  ld   $15,y       2208  ld(hi('tle#13'),Y)             #10 #12
              03dc e0b7  jmp  y,$b7       2209  jmp(Y,'tle#13')                #11
                                          2210  # dummy                        #12 Overlap
                                          2211  #
                                          2212  # pc = 0x03dd, Opcode = 0xdd
                                          2213  # Instruction DECWA: Decrement word var, vAC=var, 28-30 cycles
                                          2214  label('DECWA')
DECWA:        03dd 1415  ld   $15,y       2215  ld(hi('decwa#13'),Y)           #10 #12
              03de e0df  jmp  y,$df       2216  jmp(Y,'decwa#13')              #11
                                          2217  # dummy                        #12 Overlap
                                          2218  #
                                          2219  # pc = 0x03df, Opcode = 0xdf
                                          2220  # Instruction ALLOC: Create or destroy stack frame (vSP+=D), 20 cycles
                                          2221  label('ALLOC')
ALLOC:        03df 1416  ld   $16,y       2222  ld(hi('alloc#13'),Y)           #10 #12
              03e0 e03d  jmp  y,$3d       2223  jmp(Y,'alloc#13')              #11
                                          2224  # dummy                        #12 Overlap
                                          2225  #
                                          2226  # pc = 0x03e1, Opcode = 0xe1
                                          2227  # Instruction PACKVW: var = src0.lo | (src1.lo <<8), 42 cycles
                                          2228  label('PACKVW')
PACKVW:       03e1 142e  ld   $2e,y       2229  ld(hi('packvw#13'),Y)           #10 #12
              03e2 e05a  jmp  y,$5a       2230  jmp(Y,'packvw#13')              #11
                                          2231  # dummy                         #12 Overlap
                                          2232  #
                                          2233  # pc = 0x03e3, Opcode = 0xe3
                                          2234  # Instruction ADDI: Add small positive constant (vAC+=D), 26 cycles
                                          2235  label('ADDI')
ADDI:         03e3 1415  ld   $15,y       2236  ld(hi('addi#13'),Y)             #10 #12
              03e4 e000  jmp  y,$00       2237  jmp(Y,'addi#13')                #11
              03e5 c21d  st   [$1d]       2238  st([vTmp])                      #12
                                          2239
                                          2240  # pc = 0x03e6, Opcode = 0xe6
                                          2241  # Instruction SUBI: Subtract small positive constant (vAC+=D), 26 cycles
                                          2242  label('SUBI')
SUBI:         03e6 1415  ld   $15,y       2243  ld(hi('subi#13'),Y)             #10
              03e7 e014  jmp  y,$14       2244  jmp(Y,'subi#13')                #11
              03e8 c21d  st   [$1d]       2245  st([vTmp])                      #12
                                          2246
                                          2247  # pc = 0x03e9, Opcode = 0xe9
                                          2248  # Instruction LSLW: Logical shift left (vAC<<=1), 28 cycles
                                          2249  # Useful, because ADDW can't add vAC to itself. Also more compact.
                                          2250  label('LSLW')
LSLW:         03e9 1404  ld   $04,y       2251  ld(hi('lslw#13'),Y)             #10
              03ea e028  jmp  y,$28       2252  jmp(Y,'lslw#13')                #11
              03eb 0118  ld   [$18]       2253  ld([vAC])                       #12
                                          2254
                                          2255  # pc = 0x03ec, Opcode = 0xec
                                          2256  # Instruction STLW: Store word in stack frame ([vSP+D],[vSP+D+1]=vAC&255,vAC>>8), 24 cycles
                                          2257  label('STLW')
STLW:         03ec 1404  ld   $04,y       2258  ld(hi('stlw#13'),Y)             #10
              03ed e034  jmp  y,$34       2259  jmp(Y,'stlw#13')                #11
                                          2260  #dummy()                        #12 Overlap
                                          2261  #
                                          2262  # pc = 0x03ee, Opcode = 0xee
                                          2263  # Instruction LDLW: Load word from stack frame (vAC=[vSP+D]+256*[vSP+D+1]), 24 cycles
                                          2264  label('LDLW')
LDLW:         03ee 1404  ld   $04,y       2265  ld(hi('ldlw#13'),Y)             #10 #12
              03ef e03d  jmp  y,$3d       2266  jmp(Y,'ldlw#13')                #11
                                          2267  #dummy()                        #12 Overlap
                                          2268  #
                                          2269  # pc = 0x03f0, Opcode = 0xf0
                                          2270  # Instruction POKE: Write byte in memory ([[D+1],[D]]=vAC&255), 26 cycles
                                          2271  label('POKE')
POKE:         03f0 1404  ld   $04,y       2272  ld(hi('poke#13'),Y)             #10 #12
              03f1 e047  jmp  y,$47       2273  jmp(Y,'poke#13')                #11
              03f2 c21d  st   [$1d]       2274  st([vTmp])                      #12
                                          2275
                                          2276  # pc = 0x03f3, Opcode = 0xf3
                                          2277  # Instruction DOKE: Write word in memory ([[D+1],[D]],[[D+1],[D]+1]=vAC&255,vAC>>8), 28 cycles
                                          2278  label('DOKE')
DOKE:         03f3 1404  ld   $04,y       2279  ld(hi('doke#13'),Y)             #10
              03f4 e05e  jmp  y,$5e       2280  jmp(Y,'doke#13')                #11
              03f5 c21d  st   [$1d]       2281  st([vTmp])                      #12
                                          2282
                                          2283  # pc = 0x03f6, Opcode = 0xf6
                                          2284  # Instruction DEEK: Read word from memory (vAC=[vAC]+256*[vAC+1]), 28 cycles
                                          2285  label('DEEK')
DEEK:         03f6 1404  ld   $04,y       2286  ld(hi('deek#13'),Y)             #10
              03f7 e06b  jmp  y,$6b       2287  jmp(Y,'deek#13')                #11
                                          2288  #dummy()                        #12 Overlap
                                          2289  #
                                          2290  # pc = 0x03f8, Opcode = 0xf8
                                          2291  # Instruction ANDW: Word logical-AND with zero page (vAC&=[D]+256*[D+1]), 28 cycles
                                          2292  label('ANDW')
ANDW:         03f8 1404  ld   $04,y       2293  ld(hi('andw#13'),Y)             #10 #12
              03f9 e077  jmp  y,$77       2294  jmp(Y,'andw#13')                #11
                                          2295  #dummy()                        #12 Overlap
                                          2296  #
                                          2297  # pc = 0x03fa, Opcode = 0xfa
                                          2298  # Instruction ORW: Word logical-OR with zero page (vAC|=[D]+256*[D+1]), 28 cycles
                                          2299  label('ORW')
ORW:          03fa 1404  ld   $04,y       2300  ld(hi('orw#13'),Y)              #10 #12
              03fb e083  jmp  y,$83       2301  jmp(Y,'orw#13')                 #11
                                          2302  #dummy()                        #12 Overlap
                                          2303  #
                                          2304  # pc = 0x03fc, Opcode = 0xfc
                                          2305  # Instruction XORW: Word logical-XOR with zero page (vAC^=[D]+256*[D+1]), 28 cycles
                                          2306  label('XORW')
XORW:         03fc 1415  ld   $15,y       2307  ld(hi('xorw#13'),Y)             #10 #12
              03fd e029  jmp  y,$29       2308  jmp(Y,'xorw#13')                #11
              03fe 1200  ld   ac,x        2309  ld(AC,X)                        #12
                                          2310
                                          2311  # pc = 0x03ff, Opcode = 0xff
                                          2312  # Instruction RET: Function return (vPC=vLR-2), 16 cycles
                                          2313  label('RET')
RET:          03ff 011a  ld   [$1a]       2314  ld([vLR])                       #10
                                          2315  assert pc()&255 == 0
                                          2316
                                          2317
                                          2318  #-----------------------------------------------------------------------
                                          2319  #
                                          2320  #  $0400 ROM page 4: Application interpreter extension
                                          2321  #
                                          2322  #-----------------------------------------------------------------------
                                          2323  align(0x100, size=0x100)
                                          2324
                                          2325  # (Continue RET)
              0400 a002  suba $02         2326  suba(2)                         #11
              0401 c216  st   [$16]       2327  st([vPC])                       #12
              0402 011b  ld   [$1b]       2328  ld([vLR+1])                     #13
              0403 c217  st   [$17]       2329  st([vPC+1])                     #14
              0404 1403  ld   $03,y       2330  ld(hi('REENTER'),Y)             #15
              0405 e0cb  jmp  y,$cb       2331  jmp(Y,'REENTER')                #16
              0406 00f6  ld   $f6         2332  ld(-20/2)                       #17
                                          2333
                                          2334  # CALL implementation
                                          2335  label('call#13')
call#13:      0407 1200  ld   ac,x        2336  ld(AC,X)                        #13
              0408 0116  ld   [$16]       2337  ld([vPC])                       #14
              0409 8002  adda $02         2338  adda(2)                         #15 Point to instruction after CALL
              040a c21a  st   [$1a]       2339  st([vLR])                       #16
              040b 0117  ld   [$17]       2340  ld([vPC+1])                     #17
              040c c21b  st   [$1b]       2341  st([vLR+1])                     #18
              040d 1400  ld   $00,y       2342  ld(0,Y)                         #19
              040e 0500  ld   [x]         2343  ld([X])                         #20
              040f de00  st   [y,x++]     2344  st([Y,Xpp])                     #21
              0410 a002  suba $02         2345  suba(2)                         #22 Because NEXT will add 2
              0411 c216  st   [$16]       2346  st([vPC])                       #23
              0412 0500  ld   [x]         2347  ld([X])                         #24
              0413 c217  st   [$17]       2348  st([vPC+1])                     #25
              0414 1403  ld   $03,y       2349  ld(hi('NEXTY'),Y)               #26
              0415 e000  jmp  y,$00       2350  jmp(Y,'NEXTY')                  #27
              0416 00f1  ld   $f1         2351  ld(-30/2)                       #28
                                          2352
                                          2353  # DEF implementation
                                          2354  label('def#13')
def#13:       0417 c21d  st   [$1d]       2355  st([vTmp])                      #13
              0418 0116  ld   [$16]       2356  ld([vPC])                       #14
              0419 8002  adda $02         2357  adda(2)                         #15
              041a c218  st   [$18]       2358  st([vAC])                       #16
              041b 0117  ld   [$17]       2359  ld([vPC+1])                     #17
              041c c219  st   [$19]       2360  st([vAC+1])                     #18
              041d 011d  ld   [$1d]       2361  ld([vTmp])                      #19
              041e c216  st   [$16]       2362  st([vPC])                       #20
              041f 1403  ld   $03,y       2363  ld(hi('REENTER'),Y)             #21
              0420 e0cb  jmp  y,$cb       2364  jmp(Y,'REENTER')                #22
              0421 00f3  ld   $f3         2365  ld(-26/2)                       #23
                                          2366
                                          2367  # ANDI implementation
                                          2368  label('andi#13')
andi#13:      0422 c218  st   [$18]       2369  st([vAC])                       #13
              0423 0000  ld   $00         2370  ld(0)                           #14 Clear high byte
              0424 c219  st   [$19]       2371  st([vAC+1])                     #15
              0425 1403  ld   $03,y       2372  ld(hi('NEXTY'),Y)               #16
              0426 e000  jmp  y,$00       2373  jmp(Y,'NEXTY')                  #17
              0427 00f6  ld   $f6         2374  ld(-20/2)                       #18
                                          2375
                                          2376  # LSLW implementation
                                          2377  label('lslw#13')
lslw#13:      0428 3080  anda $80,x       2378  anda(128,X)                     #13
              0429 8118  adda [$18]       2379  adda([vAC])                     #14
              042a c218  st   [$18]       2380  st([vAC])                       #15
              042b 0500  ld   [x]         2381  ld([X])                         #16
              042c 8119  adda [$19]       2382  adda([vAC+1])                   #17
              042d 8119  adda [$19]       2383  adda([vAC+1])                   #18
              042e c219  st   [$19]       2384  st([vAC+1])                     #19
              042f 0116  ld   [$16]       2385  ld([vPC])                       #20
              0430 a001  suba $01         2386  suba(1)                         #21
              0431 1403  ld   $03,y       2387  ld(hi('REENTER_28'),Y)          #22
              0432 e0ca  jmp  y,$ca       2388  jmp(Y,'REENTER_28')             #23
              0433 c216  st   [$16]       2389  st([vPC])                       #24
                                          2390
                                          2391  # STLW implementation
                                          2392  label('stlw#13')
stlw#13:      0434 1504  ld   [$04],y     2393  ld([vSPH],Y)                    #13
              0435 911c  adda [$1c],x     2394  adda([vSP],X)                   #14
              0436 0118  ld   [$18]       2395  ld([vAC])                       #15
              0437 de00  st   [y,x++]     2396  st([Y,Xpp])                     #16
              0438 0119  ld   [$19]       2397  ld([vAC+1])                     #17
              0439 ce00  st   [y,x]       2398  st([Y,X])                       #18
              043a 1403  ld   $03,y       2399  ld(hi('REENTER'),Y)             #19
              043b e0cb  jmp  y,$cb       2400  jmp(Y,'REENTER')                #20
              043c 00f4  ld   $f4         2401  ld(-24/2)                       #21
                                          2402
                                          2403  # LDLW implementation
                                          2404  label('ldlw#13')
ldlw#13:      043d 1504  ld   [$04],y     2405  ld([vSPH],Y)                    #13
              043e 911c  adda [$1c],x     2406  adda([vSP],X)                   #14
              043f 0d00  ld   [y,x]       2407  ld([Y,X])                       #15
              0440 de00  st   [y,x++]     2408  st([Y,Xpp])                     #16
              0441 c218  st   [$18]       2409  st([vAC])                       #17
              0442 0d00  ld   [y,x]       2410  ld([Y,X])                       #18
              0443 c219  st   [$19]       2411  st([vAC+1])                     #19
              0444 1403  ld   $03,y       2412  ld(hi('NEXTY'),Y)               #20
              0445 e000  jmp  y,$00       2413  jmp(Y,'NEXTY')                  #21
              0446 00f4  ld   $f4         2414  ld(-24/2)                       #22
                                          2415
                                          2416  # POKE implementation
                                          2417  label('poke#13')
poke#13:      0447 9001  adda $01,x       2418  adda(1,X)                       #13
              0448 0500  ld   [x]         2419  ld([X])                         #14
              0449 1600  ld   ac,y        2420  ld(AC,Y)                        #15
              044a 111d  ld   [$1d],x     2421  ld([vTmp],X)                    #16
              044b 0500  ld   [x]         2422  ld([X])                         #17
              044c 1200  ld   ac,x        2423  ld(AC,X)                        #18
              044d 0118  ld   [$18]       2424  ld([vAC])                       #19
              044e ce00  st   [y,x]       2425  st([Y,X])                       #20
              044f 1403  ld   $03,y       2426  ld(hi('REENTER'),Y)             #21
              0450 e0cb  jmp  y,$cb       2427  jmp(Y,'REENTER')                #22
              0451 00f3  ld   $f3         2428  ld(-26/2)                       #23
                                          2429
                                          2430  # PEEK implementation
                                          2431  label('peek#13')
peek#13:      0452 1118  ld   [$18],x     2432  ld([vAC],X)                     #13
              0453 1519  ld   [$19],y     2433  ld([vAC+1],Y)                   #14
              0454 0d00  ld   [y,x]       2434  ld([Y,X])                       #15
              0455 c218  st   [$18]       2435  st([vAC])                       #16
              0456 0000  ld   $00         2436  ld(0)                           #17
              0457 c219  st   [$19]       2437  st([vAC+1])                     #18
              0458 0116  ld   [$16]       2438  ld([vPC])                       #19
              0459 a001  suba $01         2439  suba(1)                         #20
              045a c216  st   [$16]       2440  st([vPC])                       #21
              045b 1403  ld   $03,y       2441  ld(hi('NEXTY'),Y)               #22
              045c e000  jmp  y,$00       2442  jmp(Y,'NEXTY')                  #23
              045d 00f3  ld   $f3         2443  ld(-26/2)                       #24
                                          2444
                                          2445  # DOKE implementation
                                          2446  label('doke#13')
doke#13:      045e 9001  adda $01,x       2447  adda(1,X)                       #13
              045f 0500  ld   [x]         2448  ld([X])                         #14
              0460 1600  ld   ac,y        2449  ld(AC,Y)                        #15
              0461 111d  ld   [$1d],x     2450  ld([vTmp],X)                    #16
              0462 0500  ld   [x]         2451  ld([X])                         #17
              0463 1200  ld   ac,x        2452  ld(AC,X)                        #18
              0464 0118  ld   [$18]       2453  ld([vAC])                       #19
              0465 de00  st   [y,x++]     2454  st([Y,Xpp])                     #20
              0466 0119  ld   [$19]       2455  ld([vAC+1])                     #21
              0467 ce00  st   [y,x]       2456  st([Y,X])                       #22 Incompatible with REENTER_28
              0468 1403  ld   $03,y       2457  ld(hi('REENTER'),Y)             #23
              0469 e0cb  jmp  y,$cb       2458  jmp(Y,'REENTER')                #24
              046a 00f2  ld   $f2         2459  ld(-28/2)                       #25
                                          2460
                                          2461  # DEEK implementation
                                          2462  label('deek#13')
deek#13:      046b 0116  ld   [$16]       2463  ld([vPC])                       #13
              046c a001  suba $01         2464  suba(1)                         #14
              046d c216  st   [$16]       2465  st([vPC])                       #15
              046e 1118  ld   [$18],x     2466  ld([vAC],X)                     #16
              046f 1519  ld   [$19],y     2467  ld([vAC+1],Y)                   #17
              0470 0d00  ld   [y,x]       2468  ld([Y,X])                       #18
              0471 de00  st   [y,x++]     2469  st([Y,Xpp])                     #19 Just X++
              0472 c218  st   [$18]       2470  st([vAC])                       #20
              0473 0d00  ld   [y,x]       2471  ld([Y,X])                       #21
              0474 1403  ld   $03,y       2472  ld(hi('REENTER_28'),Y)          #22
              0475 e0ca  jmp  y,$ca       2473  jmp(Y,'REENTER_28')             #23
              0476 c219  st   [$19]       2474  st([vAC+1])                     #24
                                          2475
                                          2476  # ANDW implementation
                                          2477  label('andw#13')
andw#13:      0477 1200  ld   ac,x        2478  ld(AC,X)                        #13
              0478 1400  ld   $00,y       2479  ld(0,Y)                         #14
              0479 0500  ld   [x]         2480  ld([X])                         #15
              047a de00  st   [y,x++]     2481  st([Y,Xpp])                     #16
              047b 2118  anda [$18]       2482  anda([vAC])                     #17
              047c c218  st   [$18]       2483  st([vAC])                       #18
              047d 0500  ld   [x]         2484  ld([X])                         #19
              047e 2119  anda [$19]       2485  anda([vAC+1])                   #20
              047f c219  st   [$19]       2486  st([vAC+1])                     #21
              0480 1403  ld   $03,y       2487  ld(hi('NEXTY'),Y)               #22
              0481 e000  jmp  y,$00       2488  jmp(Y,'NEXTY')                  #23
              0482 00f3  ld   $f3         2489  ld(-26/2)                       #24
                                          2490
                                          2491  # ORW implementation
                                          2492  label('orw#13')
orw#13:       0483 1200  ld   ac,x        2493  ld(AC,X)                        #13
              0484 1400  ld   $00,y       2494  ld(0,Y)                         #14
              0485 0500  ld   [x]         2495  ld([X])                         #15
              0486 de00  st   [y,x++]     2496  st([Y,Xpp])                     #16
              0487 4118  ora  [$18]       2497  ora([vAC])                      #17
              0488 c218  st   [$18]       2498  st([vAC])                       #18
              0489 0500  ld   [x]         2499  ld([X])                         #19
              048a 4119  ora  [$19]       2500  ora([vAC+1])                    #20
              048b c219  st   [$19]       2501  st([vAC+1])                     #21
              048c 1403  ld   $03,y       2502  ld(hi('NEXTY'),Y)               #22
              048d e000  jmp  y,$00       2503  jmp(Y,'NEXTY')                  #23
              048e 00f3  ld   $f3         2504  ld(-26/2)                       #24
                                          2505
                                          2506
              048f 0200  nop              2507  fillers(until=0xa7)
              0490 0200  nop
              0491 0200  nop
              * 24 times
                                          2508
                                          2509  # pc = 0x04a7
                                          2510  #-----------------------------------------------------------------------
                                          2511  #
                                          2512  #  vCPU extension functions (for acceleration and compaction) follow below.
                                          2513  #
                                          2514  #  The naming convention is: SYS_<CamelCase>[_v<V>]_<N>
                                          2515  #
                                          2516  #  With <N> the maximum number of cycles the function will run
                                          2517  #  (counted from NEXT to NEXT). This is the same number that must
                                          2518  #  be passed to the 'SYS' vCPU instruction as operand, and it will
                                          2519  #  appear in the GCL code upon use.
                                          2520  #
                                          2521  #  If a SYS extension got introduced after ROM v1, the version number of
                                          2522  #  introduction is included in the name. This helps the programmer to be
                                          2523  #  reminded to verify the acutal ROM version and fail gracefully on older
                                          2524  #  ROMs than required. See also Docs/GT1-files.txt on using [romType].
                                          2525  #
                                          2526  #-----------------------------------------------------------------------
                                          2527
                                          2528  #-----------------------------------------------------------------------
                                          2529  # Extension SYS_Random_34: Update entropy and copy to vAC
                                          2530  #-----------------------------------------------------------------------
                                          2531  #
                                          2532  # This same algorithm runs automatically once per vertical blank.
                                          2533  # Use this function to get numbers at a higher rate.
                                          2534  #
                                          2535  # Variables:
                                          2536  #       vAC
                                          2537
                                          2538  label('SYS_Random_34')          # leave name as 34 to remain compatible with previous ROM's
SYS_Random_34:
              04a7 010e  ld   [$0e]       2539  ld([frameCount])                #15
              04a8 6107  xora [$07]       2540  xora([entropy+1])               #16
              04a9 610f  xora [$0f]       2541  xora([serialRaw])               #17
              04aa 8106  adda [$06]       2542  adda([entropy+0])               #18
              04ab c206  st   [$06]       2543  st([entropy+0])                 #19
              04ac c218  st   [$18]       2544  st([vAC+0])                     #20
              04ad 8116  adda [$16]       2545  adda([vPC])                     #21
              04ae e8b1  blt  $04b1       2546  bmi(pc()+3)                     #22
              04af fcb2  bra  $04b2       2547  bra(pc()+3)                     #23
              04b0 6053  xora $53         2548  xora(64+16+2+1)                 #24
              04b1 606c  xora $6c         2549  xora(64+32+8+4)                 #24 (!)
              04b2 8107  adda [$07]       2550  adda([entropy+1])               #25
              04b3 c207  st   [$07]       2551  st([entropy+1])                 #26
              04b4 c219  st   [$19]       2552  st([vAC+1])                     #27
              04b5 1403  ld   $03,y       2553  ld(hi('NEXTY'),Y)               #28
              04b6 e000  jmp  y,$00       2554  jmp(Y,'NEXTY')                  #29
              04b7 00f0  ld   $f0         2555  ld(-32/2)                       #30
                                          2556
              04b8 0200  nop              2557  nop()                           # padding required to remain compatible with previous ROM's
                                          2558  label('SYS_LSRW7_30')
SYS_LSRW7_30: 04b9 0118  ld   [$18]       2559  ld([vAC])                       #15
              04ba 3080  anda $80,x       2560  anda(128,X)                     #16
              04bb 0119  ld   [$19]       2561  ld([vAC+1])                     #17
              04bc 8200  adda ac          2562  adda(AC)                        #18
              04bd 4500  ora  [x]         2563  ora([X])                        #19
              04be c218  st   [$18]       2564  st([vAC])                       #20
              04bf 0119  ld   [$19]       2565  ld([vAC+1])                     #21
              04c0 3080  anda $80,x       2566  anda(128,X)                     #22
              04c1 0500  ld   [x]         2567  ld([X])                         #23
              04c2 c219  st   [$19]       2568  st([vAC+1])                     #24
              04c3 1403  ld   $03,y       2569  ld(hi('REENTER'),Y)             #25
              04c4 e0cb  jmp  y,$cb       2570  jmp(Y,'REENTER')                #26
              04c5 00f1  ld   $f1         2571  ld(-30/2)                       #27
                                          2572
                                          2573  label('SYS_LSRW8_24')
SYS_LSRW8_24: 04c6 0119  ld   [$19]       2574  ld([vAC+1])                     #15
              04c7 c218  st   [$18]       2575  st([vAC])                       #16
              04c8 0000  ld   $00         2576  ld(0)                           #17
              04c9 c219  st   [$19]       2577  st([vAC+1])                     #18
              04ca 1403  ld   $03,y       2578  ld(hi('REENTER'),Y)             #19
              04cb e0cb  jmp  y,$cb       2579  jmp(Y,'REENTER')                #20
              04cc 00f4  ld   $f4         2580  ld(-24/2)                       #21
                                          2581
                                          2582  label('SYS_LSLW8_24')
SYS_LSLW8_24: 04cd 0118  ld   [$18]       2583  ld([vAC])                       #15
              04ce c219  st   [$19]       2584  st([vAC+1])                     #16
              04cf 0000  ld   $00         2585  ld(0)                           #17
              04d0 c218  st   [$18]       2586  st([vAC])                       #18
              04d1 1403  ld   $03,y       2587  ld(hi('REENTER'),Y)             #19
              04d2 e0cb  jmp  y,$cb       2588  jmp(Y,'REENTER')                #20
              04d3 00f4  ld   $f4         2589  ld(-24/2)                       #21
                                          2590
                                          2591  #-----------------------------------------------------------------------
                                          2592  # Extension SYS_Draw4_30
                                          2593  #-----------------------------------------------------------------------
                                          2594  #
                                          2595  # Draw 4 pixels on screen, horizontally next to each other
                                          2596  #
                                          2597  # Variables:
                                          2598  #       sysArgs[0:3]    Pixels (in)
                                          2599  #       sysArgs[4:5]    Position on screen (in)
                                          2600
                                          2601  label('SYS_Draw4_30')
SYS_Draw4_30: 04d4 1128  ld   [$28],x     2602  ld([sysArgs+4],X)               #15
              04d5 1529  ld   [$29],y     2603  ld([sysArgs+5],Y)               #16
              04d6 0124  ld   [$24]       2604  ld([sysArgs+0])                 #17
              04d7 de00  st   [y,x++]     2605  st([Y,Xpp])                     #18
              04d8 0125  ld   [$25]       2606  ld([sysArgs+1])                 #19
              04d9 de00  st   [y,x++]     2607  st([Y,Xpp])                     #20
              04da 0126  ld   [$26]       2608  ld([sysArgs+2])                 #21
              04db de00  st   [y,x++]     2609  st([Y,Xpp])                     #22
              04dc 0127  ld   [$27]       2610  ld([sysArgs+3])                 #23
              04dd de00  st   [y,x++]     2611  st([Y,Xpp])                     #24
              04de 1403  ld   $03,y       2612  ld(hi('REENTER'),Y)             #25
              04df e0cb  jmp  y,$cb       2613  jmp(Y,'REENTER')                #26
              04e0 00f1  ld   $f1         2614  ld(-30/2)                       #27
                                          2615
                                          2616  #-----------------------------------------------------------------------
                                          2617  # Extension SYS_VDrawBits_134:
                                          2618  #-----------------------------------------------------------------------
                                          2619  #
                                          2620  # Draw slice of a character, 8 pixels vertical
                                          2621  #
                                          2622  # Variables:
                                          2623  #       sysArgs[0]      Color 0 "background" (in)
                                          2624  #       sysArgs[1]      Color 1 "pen" (in)
                                          2625  #       sysArgs[2]      8 bits, highest bit first (in, changed)
                                          2626  #       sysArgs[4:5]    Position on screen (in)
                                          2627
                                          2628  label('SYS_VDrawBits_134')
SYS_VDrawBits_134:
              04e1 1412  ld   $12,y       2629  ld(hi('sys_VDrawBits'),Y)       #15
              04e2 e093  jmp  y,$93       2630  jmp(Y,'sys_VDrawBits')          #16
              04e3 1128  ld   [$28],x     2631  ld([sysArgs+4],X)               #17
                                          2632
                                          2633  #-----------------------------------------------------------------------
                                          2634  #
                                          2635  # Interrupt handler:
                                          2636  #       STW  $xx        -> optionally store vCpuSelect
                                          2637  #       ... IRQ payload ...
                                          2638  # either:
                                          2639  #       LDWI $400
                                          2640  #       LUP  0          -> vRTI and don't switch interpreter (immediate resume)
                                          2641  # or:
                                          2642  #       LDWI $400
                                          2643  #       LUP  $xx        -> vRTI and switch interpreter type as stored in [$xx]
              04e4 0200  nop              2644  fillers(until=251-13)
              04e5 0200  nop
              04e6 0200  nop
              * 10 times
                                          2645  label('vRTI#15')
vRTI#15:      04ee 0130  ld   [$30]       2646  ld([vIrqSave+0])                #15 Continue with vCPU in the same timeslice (faster)
              04ef c216  st   [$16]       2647  st([vPC])                       #16
              04f0 0131  ld   [$31]       2648  ld([vIrqSave+1])                #17
              04f1 c217  st   [$17]       2649  st([vPC+1])                     #18
              04f2 0132  ld   [$32]       2650  ld([vIrqSave+2])                #19
              04f3 c218  st   [$18]       2651  st([vAC])                       #20
              04f4 0133  ld   [$33]       2652  ld([vIrqSave+3])                #21
              04f5 c219  st   [$19]       2653  st([vAC+1])                     #22
              04f6 0134  ld   [$34]       2654  ld([vIrqSave+4])                #23 Restore vCpuSelect for PREFIX
              04f7 c202  st   [$02]       2655  st([vCpuSelect])                #24
              04f8 9401  adda $01,y       2656  adda(1,Y)                       #25 Jump to correct PREFIX page, (or page3 by default)
              04f9 e0cb  jmp  y,$cb       2657  jmp(Y,'REENTER')                #26
              04fa 00f1  ld   $f1         2658  ld(-30/2)                       #27
                                          2659  # vRTI entry point
                                          2660  assert(pc()&255 == 251)         # The landing offset 251 for LUP trampoline is fixed
              04fb f0ee  beq  vRTI#15     2661  beq('vRTI#15')                  #13 vRTI sequence
              04fc 9001  adda $01,x       2662  adda(1,X)                       #14
              04fd 1412  ld   $12,y       2663  ld(hi('vRTI#18'),Y)             #15 Switch and wait for end of timeslice (slower)
              04fe e022  jmp  y,$22       2664  jmp(Y,'vRTI#18')                #16
              04ff c21d  st   [$1d]       2665  st([vTmp])                      #17
                                          2666
                                          2667  #-----------------------------------------------------------------------
                                          2668  #
                                          2669  #  $0500 ROM page 5-6: Shift table and code
                                          2670  #
                                          2671  #-----------------------------------------------------------------------
                                          2672
                                          2673  align(0x100, size=0x200)
                                          2674
                                          2675  # Lookup table for i>>n, with n in 1..6
                                          2676  # Indexing ix = i & ~b | (b-1), where b = 1<<(n-1)
                                          2677  #       ...
                                          2678  #       ld   <.ret
                                          2679  #       st   [vTmp]
                                          2680  #       ld   >shiftTable,y
                                          2681  #       <calculate ix>
                                          2682  #       jmp  y,ac
                                          2683  #       bra  $ff
                                          2684  # .ret: ...
                                          2685  #
                                          2686  # i >> 7 can be always be done with RAM: [i&128]
                                          2687  #       ...
                                          2688  #       anda $80,x
                                          2689  #       ld   [x]
                                          2690  #       ...
                                          2691
                                          2692  label('shiftTable')
                                          2693  shiftTable = pc()
                                          2694
                                          2695  for ix in range(255):
                                          2696    for n in range(1,7): # Find first zero
                                          2697      if ~ix & (1 << (n-1)):
                                          2698        break
                                          2699    pattern = ['x' if i<n else '1' if ix&(1<<i) else '0' for i in range(8)]
                                          2700    ld(ix>>n); C('0b%s >> %d' % (''.join(reversed(pattern)), n))
shiftTable:   0500 0000  ld   $00         ;0b0000000x >> 1
              0501 0000  ld   $00         ;0b000000xx >> 2
              0502 0001  ld   $01         ;0b0000001x >> 1
              0503 0000  ld   $00         ;0b00000xxx >> 3
              0504 0002  ld   $02         ;0b0000010x >> 1
              0505 0001  ld   $01         ;0b000001xx >> 2
              0506 0003  ld   $03         ;0b0000011x >> 1
              0507 0000  ld   $00         ;0b0000xxxx >> 4
              0508 0004  ld   $04         ;0b0000100x >> 1
              0509 0002  ld   $02         ;0b000010xx >> 2
              050a 0005  ld   $05         ;0b0000101x >> 1
              050b 0001  ld   $01         ;0b00001xxx >> 3
              050c 0006  ld   $06         ;0b0000110x >> 1
              050d 0003  ld   $03         ;0b000011xx >> 2
              050e 0007  ld   $07         ;0b0000111x >> 1
              050f 0000  ld   $00         ;0b000xxxxx >> 5
              0510 0008  ld   $08         ;0b0001000x >> 1
              0511 0004  ld   $04         ;0b000100xx >> 2
              0512 0009  ld   $09         ;0b0001001x >> 1
              0513 0002  ld   $02         ;0b00010xxx >> 3
              0514 000a  ld   $0a         ;0b0001010x >> 1
              0515 0005  ld   $05         ;0b000101xx >> 2
              0516 000b  ld   $0b         ;0b0001011x >> 1
              0517 0001  ld   $01         ;0b0001xxxx >> 4
              0518 000c  ld   $0c         ;0b0001100x >> 1
              0519 0006  ld   $06         ;0b000110xx >> 2
              051a 000d  ld   $0d         ;0b0001101x >> 1
              051b 0003  ld   $03         ;0b00011xxx >> 3
              051c 000e  ld   $0e         ;0b0001110x >> 1
              051d 0007  ld   $07         ;0b000111xx >> 2
              051e 000f  ld   $0f         ;0b0001111x >> 1
              051f 0000  ld   $00         ;0b00xxxxxx >> 6
              0520 0010  ld   $10         ;0b0010000x >> 1
              0521 0008  ld   $08         ;0b001000xx >> 2
              0522 0011  ld   $11         ;0b0010001x >> 1
              0523 0004  ld   $04         ;0b00100xxx >> 3
              0524 0012  ld   $12         ;0b0010010x >> 1
              0525 0009  ld   $09         ;0b001001xx >> 2
              0526 0013  ld   $13         ;0b0010011x >> 1
              0527 0002  ld   $02         ;0b0010xxxx >> 4
              0528 0014  ld   $14         ;0b0010100x >> 1
              0529 000a  ld   $0a         ;0b001010xx >> 2
              052a 0015  ld   $15         ;0b0010101x >> 1
              052b 0005  ld   $05         ;0b00101xxx >> 3
              052c 0016  ld   $16         ;0b0010110x >> 1
              052d 000b  ld   $0b         ;0b001011xx >> 2
              052e 0017  ld   $17         ;0b0010111x >> 1
              052f 0001  ld   $01         ;0b001xxxxx >> 5
              0530 0018  ld   $18         ;0b0011000x >> 1
              0531 000c  ld   $0c         ;0b001100xx >> 2
              0532 0019  ld   $19         ;0b0011001x >> 1
              0533 0006  ld   $06         ;0b00110xxx >> 3
              0534 001a  ld   $1a         ;0b0011010x >> 1
              0535 000d  ld   $0d         ;0b001101xx >> 2
              0536 001b  ld   $1b         ;0b0011011x >> 1
              0537 0003  ld   $03         ;0b0011xxxx >> 4
              0538 001c  ld   $1c         ;0b0011100x >> 1
              0539 000e  ld   $0e         ;0b001110xx >> 2
              053a 001d  ld   $1d         ;0b0011101x >> 1
              053b 0007  ld   $07         ;0b00111xxx >> 3
              053c 001e  ld   $1e         ;0b0011110x >> 1
              053d 000f  ld   $0f         ;0b001111xx >> 2
              053e 001f  ld   $1f         ;0b0011111x >> 1
              053f 0000  ld   $00         ;0b00xxxxxx >> 6
              0540 0020  ld   $20         ;0b0100000x >> 1
              0541 0010  ld   $10         ;0b010000xx >> 2
              0542 0021  ld   $21         ;0b0100001x >> 1
              0543 0008  ld   $08         ;0b01000xxx >> 3
              0544 0022  ld   $22         ;0b0100010x >> 1
              0545 0011  ld   $11         ;0b010001xx >> 2
              0546 0023  ld   $23         ;0b0100011x >> 1
              0547 0004  ld   $04         ;0b0100xxxx >> 4
              0548 0024  ld   $24         ;0b0100100x >> 1
              0549 0012  ld   $12         ;0b010010xx >> 2
              054a 0025  ld   $25         ;0b0100101x >> 1
              054b 0009  ld   $09         ;0b01001xxx >> 3
              054c 0026  ld   $26         ;0b0100110x >> 1
              054d 0013  ld   $13         ;0b010011xx >> 2
              054e 0027  ld   $27         ;0b0100111x >> 1
              054f 0002  ld   $02         ;0b010xxxxx >> 5
              0550 0028  ld   $28         ;0b0101000x >> 1
              0551 0014  ld   $14         ;0b010100xx >> 2
              0552 0029  ld   $29         ;0b0101001x >> 1
              0553 000a  ld   $0a         ;0b01010xxx >> 3
              0554 002a  ld   $2a         ;0b0101010x >> 1
              0555 0015  ld   $15         ;0b010101xx >> 2
              0556 002b  ld   $2b         ;0b0101011x >> 1
              0557 0005  ld   $05         ;0b0101xxxx >> 4
              0558 002c  ld   $2c         ;0b0101100x >> 1
              0559 0016  ld   $16         ;0b010110xx >> 2
              055a 002d  ld   $2d         ;0b0101101x >> 1
              055b 000b  ld   $0b         ;0b01011xxx >> 3
              055c 002e  ld   $2e         ;0b0101110x >> 1
              055d 0017  ld   $17         ;0b010111xx >> 2
              055e 002f  ld   $2f         ;0b0101111x >> 1
              055f 0001  ld   $01         ;0b01xxxxxx >> 6
              0560 0030  ld   $30         ;0b0110000x >> 1
              0561 0018  ld   $18         ;0b011000xx >> 2
              0562 0031  ld   $31         ;0b0110001x >> 1
              0563 000c  ld   $0c         ;0b01100xxx >> 3
              0564 0032  ld   $32         ;0b0110010x >> 1
              0565 0019  ld   $19         ;0b011001xx >> 2
              0566 0033  ld   $33         ;0b0110011x >> 1
              0567 0006  ld   $06         ;0b0110xxxx >> 4
              0568 0034  ld   $34         ;0b0110100x >> 1
              0569 001a  ld   $1a         ;0b011010xx >> 2
              056a 0035  ld   $35         ;0b0110101x >> 1
              056b 000d  ld   $0d         ;0b01101xxx >> 3
              056c 0036  ld   $36         ;0b0110110x >> 1
              056d 001b  ld   $1b         ;0b011011xx >> 2
              056e 0037  ld   $37         ;0b0110111x >> 1
              056f 0003  ld   $03         ;0b011xxxxx >> 5
              0570 0038  ld   $38         ;0b0111000x >> 1
              0571 001c  ld   $1c         ;0b011100xx >> 2
              0572 0039  ld   $39         ;0b0111001x >> 1
              0573 000e  ld   $0e         ;0b01110xxx >> 3
              0574 003a  ld   $3a         ;0b0111010x >> 1
              0575 001d  ld   $1d         ;0b011101xx >> 2
              0576 003b  ld   $3b         ;0b0111011x >> 1
              0577 0007  ld   $07         ;0b0111xxxx >> 4
              0578 003c  ld   $3c         ;0b0111100x >> 1
              0579 001e  ld   $1e         ;0b011110xx >> 2
              057a 003d  ld   $3d         ;0b0111101x >> 1
              057b 000f  ld   $0f         ;0b01111xxx >> 3
              057c 003e  ld   $3e         ;0b0111110x >> 1
              057d 001f  ld   $1f         ;0b011111xx >> 2
              057e 003f  ld   $3f         ;0b0111111x >> 1
              057f 0001  ld   $01         ;0b01xxxxxx >> 6
              0580 0040  ld   $40         ;0b1000000x >> 1
              0581 0020  ld   $20         ;0b100000xx >> 2
              0582 0041  ld   $41         ;0b1000001x >> 1
              0583 0010  ld   $10         ;0b10000xxx >> 3
              0584 0042  ld   $42         ;0b1000010x >> 1
              0585 0021  ld   $21         ;0b100001xx >> 2
              0586 0043  ld   $43         ;0b1000011x >> 1
              0587 0008  ld   $08         ;0b1000xxxx >> 4
              0588 0044  ld   $44         ;0b1000100x >> 1
              0589 0022  ld   $22         ;0b100010xx >> 2
              058a 0045  ld   $45         ;0b1000101x >> 1
              058b 0011  ld   $11         ;0b10001xxx >> 3
              058c 0046  ld   $46         ;0b1000110x >> 1
              058d 0023  ld   $23         ;0b100011xx >> 2
              058e 0047  ld   $47         ;0b1000111x >> 1
              058f 0004  ld   $04         ;0b100xxxxx >> 5
              0590 0048  ld   $48         ;0b1001000x >> 1
              0591 0024  ld   $24         ;0b100100xx >> 2
              0592 0049  ld   $49         ;0b1001001x >> 1
              0593 0012  ld   $12         ;0b10010xxx >> 3
              0594 004a  ld   $4a         ;0b1001010x >> 1
              0595 0025  ld   $25         ;0b100101xx >> 2
              0596 004b  ld   $4b         ;0b1001011x >> 1
              0597 0009  ld   $09         ;0b1001xxxx >> 4
              0598 004c  ld   $4c         ;0b1001100x >> 1
              0599 0026  ld   $26         ;0b100110xx >> 2
              059a 004d  ld   $4d         ;0b1001101x >> 1
              059b 0013  ld   $13         ;0b10011xxx >> 3
              059c 004e  ld   $4e         ;0b1001110x >> 1
              059d 0027  ld   $27         ;0b100111xx >> 2
              059e 004f  ld   $4f         ;0b1001111x >> 1
              059f 0002  ld   $02         ;0b10xxxxxx >> 6
              05a0 0050  ld   $50         ;0b1010000x >> 1
              05a1 0028  ld   $28         ;0b101000xx >> 2
              05a2 0051  ld   $51         ;0b1010001x >> 1
              05a3 0014  ld   $14         ;0b10100xxx >> 3
              05a4 0052  ld   $52         ;0b1010010x >> 1
              05a5 0029  ld   $29         ;0b101001xx >> 2
              05a6 0053  ld   $53         ;0b1010011x >> 1
              05a7 000a  ld   $0a         ;0b1010xxxx >> 4
              05a8 0054  ld   $54         ;0b1010100x >> 1
              05a9 002a  ld   $2a         ;0b101010xx >> 2
              05aa 0055  ld   $55         ;0b1010101x >> 1
              05ab 0015  ld   $15         ;0b10101xxx >> 3
              05ac 0056  ld   $56         ;0b1010110x >> 1
              05ad 002b  ld   $2b         ;0b101011xx >> 2
              05ae 0057  ld   $57         ;0b1010111x >> 1
              05af 0005  ld   $05         ;0b101xxxxx >> 5
              05b0 0058  ld   $58         ;0b1011000x >> 1
              05b1 002c  ld   $2c         ;0b101100xx >> 2
              05b2 0059  ld   $59         ;0b1011001x >> 1
              05b3 0016  ld   $16         ;0b10110xxx >> 3
              05b4 005a  ld   $5a         ;0b1011010x >> 1
              05b5 002d  ld   $2d         ;0b101101xx >> 2
              05b6 005b  ld   $5b         ;0b1011011x >> 1
              05b7 000b  ld   $0b         ;0b1011xxxx >> 4
              05b8 005c  ld   $5c         ;0b1011100x >> 1
              05b9 002e  ld   $2e         ;0b101110xx >> 2
              05ba 005d  ld   $5d         ;0b1011101x >> 1
              05bb 0017  ld   $17         ;0b10111xxx >> 3
              05bc 005e  ld   $5e         ;0b1011110x >> 1
              05bd 002f  ld   $2f         ;0b101111xx >> 2
              05be 005f  ld   $5f         ;0b1011111x >> 1
              05bf 0002  ld   $02         ;0b10xxxxxx >> 6
              05c0 0060  ld   $60         ;0b1100000x >> 1
              05c1 0030  ld   $30         ;0b110000xx >> 2
              05c2 0061  ld   $61         ;0b1100001x >> 1
              05c3 0018  ld   $18         ;0b11000xxx >> 3
              05c4 0062  ld   $62         ;0b1100010x >> 1
              05c5 0031  ld   $31         ;0b110001xx >> 2
              05c6 0063  ld   $63         ;0b1100011x >> 1
              05c7 000c  ld   $0c         ;0b1100xxxx >> 4
              05c8 0064  ld   $64         ;0b1100100x >> 1
              05c9 0032  ld   $32         ;0b110010xx >> 2
              05ca 0065  ld   $65         ;0b1100101x >> 1
              05cb 0019  ld   $19         ;0b11001xxx >> 3
              05cc 0066  ld   $66         ;0b1100110x >> 1
              05cd 0033  ld   $33         ;0b110011xx >> 2
              05ce 0067  ld   $67         ;0b1100111x >> 1
              05cf 0006  ld   $06         ;0b110xxxxx >> 5
              05d0 0068  ld   $68         ;0b1101000x >> 1
              05d1 0034  ld   $34         ;0b110100xx >> 2
              05d2 0069  ld   $69         ;0b1101001x >> 1
              05d3 001a  ld   $1a         ;0b11010xxx >> 3
              05d4 006a  ld   $6a         ;0b1101010x >> 1
              05d5 0035  ld   $35         ;0b110101xx >> 2
              05d6 006b  ld   $6b         ;0b1101011x >> 1
              05d7 000d  ld   $0d         ;0b1101xxxx >> 4
              05d8 006c  ld   $6c         ;0b1101100x >> 1
              05d9 0036  ld   $36         ;0b110110xx >> 2
              05da 006d  ld   $6d         ;0b1101101x >> 1
              05db 001b  ld   $1b         ;0b11011xxx >> 3
              05dc 006e  ld   $6e         ;0b1101110x >> 1
              05dd 0037  ld   $37         ;0b110111xx >> 2
              05de 006f  ld   $6f         ;0b1101111x >> 1
              05df 0003  ld   $03         ;0b11xxxxxx >> 6
              05e0 0070  ld   $70         ;0b1110000x >> 1
              05e1 0038  ld   $38         ;0b111000xx >> 2
              05e2 0071  ld   $71         ;0b1110001x >> 1
              05e3 001c  ld   $1c         ;0b11100xxx >> 3
              05e4 0072  ld   $72         ;0b1110010x >> 1
              05e5 0039  ld   $39         ;0b111001xx >> 2
              05e6 0073  ld   $73         ;0b1110011x >> 1
              05e7 000e  ld   $0e         ;0b1110xxxx >> 4
              05e8 0074  ld   $74         ;0b1110100x >> 1
              05e9 003a  ld   $3a         ;0b111010xx >> 2
              05ea 0075  ld   $75         ;0b1110101x >> 1
              05eb 001d  ld   $1d         ;0b11101xxx >> 3
              05ec 0076  ld   $76         ;0b1110110x >> 1
              05ed 003b  ld   $3b         ;0b111011xx >> 2
              05ee 0077  ld   $77         ;0b1110111x >> 1
              05ef 0007  ld   $07         ;0b111xxxxx >> 5
              05f0 0078  ld   $78         ;0b1111000x >> 1
              05f1 003c  ld   $3c         ;0b111100xx >> 2
              05f2 0079  ld   $79         ;0b1111001x >> 1
              05f3 001e  ld   $1e         ;0b11110xxx >> 3
              05f4 007a  ld   $7a         ;0b1111010x >> 1
              05f5 003d  ld   $3d         ;0b111101xx >> 2
              05f6 007b  ld   $7b         ;0b1111011x >> 1
              05f7 000f  ld   $0f         ;0b1111xxxx >> 4
              05f8 007c  ld   $7c         ;0b1111100x >> 1
              05f9 003e  ld   $3e         ;0b111110xx >> 2
              05fa 007d  ld   $7d         ;0b1111101x >> 1
              05fb 001f  ld   $1f         ;0b11111xxx >> 3
              05fc 007e  ld   $7e         ;0b1111110x >> 1
              05fd 003f  ld   $3f         ;0b111111xx >> 2
              05fe 007f  ld   $7f         ;0b1111111x >> 1
                                          2701
                                          2702  assert pc()&255 == 255
              05ff fd1d  bra  [$1d]       2703  bra([vTmp])                     # Jumps back into next page
                                          2704
                                          2705  label('SYS_LSRW1_48')
                                          2706  assert pc()&255 == 0            # First instruction on this page *must* be a nop
SYS_LSRW1_48: 0600 0200  nop              2707  nop()                           #15
              0601 1405  ld   $05,y       2708  ld(hi('shiftTable'),Y)          #16 Logical shift right 1 bit (X >> 1)
              0602 0008  ld   $08         2709  ld('.sysLsrw1a')                #17 Shift low byte
              0603 c21d  st   [$1d]       2710  st([vTmp])                      #18
              0604 0118  ld   [$18]       2711  ld([vAC])                       #19
              0605 20fe  anda $fe         2712  anda(0b11111110)                #20
              0606 e200  jmp  y,ac        2713  jmp(Y,AC)                       #21
              0607 fcff  bra  $ff         2714  bra(255)                        #22 bra shiftTable+255
                                          2715  label('.sysLsrw1a')
.sysLsrw1a:   0608 c218  st   [$18]       2716  st([vAC])                       #26
              0609 0119  ld   [$19]       2717  ld([vAC+1])                     #27 Transfer bit 8
              060a 2001  anda $01         2718  anda(1)                         #28
              060b 807f  adda $7f         2719  adda(127)                       #29
              060c 2080  anda $80         2720  anda(128)                       #30
              060d 4118  ora  [$18]       2721  ora([vAC])                      #31
              060e c218  st   [$18]       2722  st([vAC])                       #32
              060f 0015  ld   $15         2723  ld('.sysLsrw1b')                #33 Shift high byte
              0610 c21d  st   [$1d]       2724  st([vTmp])                      #34
              0611 0119  ld   [$19]       2725  ld([vAC+1])                     #35
              0612 20fe  anda $fe         2726  anda(0b11111110)                #36
              0613 e200  jmp  y,ac        2727  jmp(Y,AC)                       #37
              0614 fcff  bra  $ff         2728  bra(255)                        #38 bra shiftTable+255
                                          2729  label('.sysLsrw1b')
.sysLsrw1b:   0615 c219  st   [$19]       2730  st([vAC+1])                     #42
              0616 1403  ld   $03,y       2731  ld(hi('REENTER'),Y)             #43
              0617 e0cb  jmp  y,$cb       2732  jmp(Y,'REENTER')                #44
              0618 00e8  ld   $e8         2733  ld(-48/2)                       #45
                                          2734
                                          2735  label('SYS_LSRW2_52')
SYS_LSRW2_52: 0619 1405  ld   $05,y       2736  ld(hi('shiftTable'),Y)          #15 Logical shift right 2 bit (X >> 2)
              061a 0021  ld   $21         2737  ld('.sysLsrw2a')                #16 Shift low byte
              061b c21d  st   [$1d]       2738  st([vTmp])                      #17
              061c 0118  ld   [$18]       2739  ld([vAC])                       #18
              061d 20fc  anda $fc         2740  anda(0b11111100)                #19
              061e 4001  ora  $01         2741  ora( 0b00000001)                #20
              061f e200  jmp  y,ac        2742  jmp(Y,AC)                       #21
              0620 fcff  bra  $ff         2743  bra(255)                        #22 bra shiftTable+255
                                          2744  label('.sysLsrw2a')
.sysLsrw2a:   0621 c218  st   [$18]       2745  st([vAC])                       #26
              0622 0119  ld   [$19]       2746  ld([vAC+1])                     #27 Transfer bit 8:9
              0623 8200  adda ac          2747  adda(AC)                        #28
              0624 8200  adda ac          2748  adda(AC)                        #29
              0625 8200  adda ac          2749  adda(AC)                        #30
              0626 8200  adda ac          2750  adda(AC)                        #31
              0627 8200  adda ac          2751  adda(AC)                        #32
              0628 8200  adda ac          2752  adda(AC)                        #33
              0629 4118  ora  [$18]       2753  ora([vAC])                      #34
              062a c218  st   [$18]       2754  st([vAC])                       #35
              062b 0032  ld   $32         2755  ld('.sysLsrw2b')                #36 Shift high byte
              062c c21d  st   [$1d]       2756  st([vTmp])                      #37
              062d 0119  ld   [$19]       2757  ld([vAC+1])                     #38
              062e 20fc  anda $fc         2758  anda(0b11111100)                #39
              062f 4001  ora  $01         2759  ora( 0b00000001)                #40
              0630 e200  jmp  y,ac        2760  jmp(Y,AC)                       #41
              0631 fcff  bra  $ff         2761  bra(255)                        #42 bra shiftTable+255
                                          2762  label('.sysLsrw2b')
.sysLsrw2b:   0632 c219  st   [$19]       2763  st([vAC+1])                     #46
              0633 1403  ld   $03,y       2764  ld(hi('REENTER'),Y)             #47
              0634 e0cb  jmp  y,$cb       2765  jmp(Y,'REENTER')                #48
              0635 00e6  ld   $e6         2766  ld(-52/2)                       #49
                                          2767
                                          2768  label('SYS_LSRW3_52')
SYS_LSRW3_52: 0636 1405  ld   $05,y       2769  ld(hi('shiftTable'),Y)          #15 Logical shift right 3 bit (X >> 3)
              0637 003e  ld   $3e         2770  ld('.sysLsrw3a')                #16 Shift low byte
              0638 c21d  st   [$1d]       2771  st([vTmp])                      #17
              0639 0118  ld   [$18]       2772  ld([vAC])                       #18
              063a 20f8  anda $f8         2773  anda(0b11111000)                #19
              063b 4003  ora  $03         2774  ora( 0b00000011)                #20
              063c e200  jmp  y,ac        2775  jmp(Y,AC)                       #21
              063d fcff  bra  $ff         2776  bra(255)                        #22 bra shiftTable+255
                                          2777  label('.sysLsrw3a')
.sysLsrw3a:   063e c218  st   [$18]       2778  st([vAC])                       #26
              063f 0119  ld   [$19]       2779  ld([vAC+1])                     #27 Transfer bit 8:10
              0640 8200  adda ac          2780  adda(AC)                        #28
              0641 8200  adda ac          2781  adda(AC)                        #29
              0642 8200  adda ac          2782  adda(AC)                        #30
              0643 8200  adda ac          2783  adda(AC)                        #31
              0644 8200  adda ac          2784  adda(AC)                        #32
              0645 4118  ora  [$18]       2785  ora([vAC])                      #33
              0646 c218  st   [$18]       2786  st([vAC])                       #34
              0647 004e  ld   $4e         2787  ld('.sysLsrw3b')                #35 Shift high byte
              0648 c21d  st   [$1d]       2788  st([vTmp])                      #36
              0649 0119  ld   [$19]       2789  ld([vAC+1])                     #37
              064a 20f8  anda $f8         2790  anda(0b11111000)                #38
              064b 4003  ora  $03         2791  ora( 0b00000011)                #39
              064c e200  jmp  y,ac        2792  jmp(Y,AC)                       #40
              064d fcff  bra  $ff         2793  bra(255)                        #41 bra shiftTable+255
                                          2794  label('.sysLsrw3b')
.sysLsrw3b:   064e c219  st   [$19]       2795  st([vAC+1])                     #45
              064f 00e6  ld   $e6         2796  ld(-52/2)                       #46
              0650 1403  ld   $03,y       2797  ld(hi('REENTER'),Y)             #47
              0651 e0cb  jmp  y,$cb       2798  jmp(Y,'REENTER')                #48
                                          2799  #nop()                          #49
                                          2800
                                          2801  label('SYS_LSRW4_50')
SYS_LSRW4_50: 0652 1405  ld   $05,y       2802  ld(hi('shiftTable'),Y)          #15,49 Logical shift right 4 bit (X >> 4)
              0653 005a  ld   $5a         2803  ld('.sysLsrw4a')                #16 Shift low byte
              0654 c21d  st   [$1d]       2804  st([vTmp])                      #17
              0655 0118  ld   [$18]       2805  ld([vAC])                       #18
              0656 20f0  anda $f0         2806  anda(0b11110000)                #19
              0657 4007  ora  $07         2807  ora( 0b00000111)                #20
              0658 e200  jmp  y,ac        2808  jmp(Y,AC)                       #21
              0659 fcff  bra  $ff         2809  bra(255)                        #22 bra shiftTable+255
                                          2810  label('.sysLsrw4a')
.sysLsrw4a:   065a c218  st   [$18]       2811  st([vAC])                       #26
              065b 0119  ld   [$19]       2812  ld([vAC+1])                     #27 Transfer bit 8:11
              065c 8200  adda ac          2813  adda(AC)                        #28
              065d 8200  adda ac          2814  adda(AC)                        #29
              065e 8200  adda ac          2815  adda(AC)                        #30
              065f 8200  adda ac          2816  adda(AC)                        #31
              0660 4118  ora  [$18]       2817  ora([vAC])                      #32
              0661 c218  st   [$18]       2818  st([vAC])                       #33
              0662 0069  ld   $69         2819  ld('.sysLsrw4b')                #34 Shift high byte'
              0663 c21d  st   [$1d]       2820  st([vTmp])                      #35
              0664 0119  ld   [$19]       2821  ld([vAC+1])                     #36
              0665 20f0  anda $f0         2822  anda(0b11110000)                #37
              0666 4007  ora  $07         2823  ora( 0b00000111)                #38
              0667 e200  jmp  y,ac        2824  jmp(Y,AC)                       #39
              0668 fcff  bra  $ff         2825  bra(255)                        #40 bra shiftTable+255
                                          2826  label('.sysLsrw4b')
.sysLsrw4b:   0669 c219  st   [$19]       2827  st([vAC+1])                     #44
              066a 1403  ld   $03,y       2828  ld(hi('REENTER'),Y)             #45
              066b e0cb  jmp  y,$cb       2829  jmp(Y,'REENTER')                #46
              066c 00e7  ld   $e7         2830  ld(-50/2)                       #47
                                          2831
                                          2832  label('SYS_LSRW5_50')
SYS_LSRW5_50: 066d 1405  ld   $05,y       2833  ld(hi('shiftTable'),Y)          #15 Logical shift right 5 bit (X >> 5)
              066e 0075  ld   $75         2834  ld('.sysLsrw5a')                #16 Shift low byte
              066f c21d  st   [$1d]       2835  st([vTmp])                      #17
              0670 0118  ld   [$18]       2836  ld([vAC])                       #18
              0671 20e0  anda $e0         2837  anda(0b11100000)                #19
              0672 400f  ora  $0f         2838  ora( 0b00001111)                #20
              0673 e200  jmp  y,ac        2839  jmp(Y,AC)                       #21
              0674 fcff  bra  $ff         2840  bra(255)                        #22 bra shiftTable+255
                                          2841  label('.sysLsrw5a')
.sysLsrw5a:   0675 c218  st   [$18]       2842  st([vAC])                       #26
              0676 0119  ld   [$19]       2843  ld([vAC+1])                     #27 Transfer bit 8:13
              0677 8200  adda ac          2844  adda(AC)                        #28
              0678 8200  adda ac          2845  adda(AC)                        #29
              0679 8200  adda ac          2846  adda(AC)                        #30
              067a 4118  ora  [$18]       2847  ora([vAC])                      #31
              067b c218  st   [$18]       2848  st([vAC])                       #32
              067c 0083  ld   $83         2849  ld('.sysLsrw5b')                #33 Shift high byte
              067d c21d  st   [$1d]       2850  st([vTmp])                      #34
              067e 0119  ld   [$19]       2851  ld([vAC+1])                     #35
              067f 20e0  anda $e0         2852  anda(0b11100000)                #36
              0680 400f  ora  $0f         2853  ora( 0b00001111)                #37
              0681 e200  jmp  y,ac        2854  jmp(Y,AC)                       #38
              0682 fcff  bra  $ff         2855  bra(255)                        #39 bra shiftTable+255
                                          2856  label('.sysLsrw5b')
.sysLsrw5b:   0683 c219  st   [$19]       2857  st([vAC+1])                     #44
              0684 00e7  ld   $e7         2858  ld(-50/2)                       #45
              0685 1403  ld   $03,y       2859  ld(hi('REENTER'),Y)             #46
              0686 e0cb  jmp  y,$cb       2860  jmp(Y,'REENTER')                #47
                                          2861  #nop()                          #48
                                          2862
                                          2863  label('SYS_LSRW6_48')
SYS_LSRW6_48: 0687 1405  ld   $05,y       2864  ld(hi('shiftTable'),Y)          #15,44 Logical shift right 6 bit (X >> 6)
              0688 008f  ld   $8f         2865  ld('.sysLsrw6a')                #16 Shift low byte
              0689 c21d  st   [$1d]       2866  st([vTmp])                      #17
              068a 0118  ld   [$18]       2867  ld([vAC])                       #18
              068b 20c0  anda $c0         2868  anda(0b11000000)                #19
              068c 401f  ora  $1f         2869  ora( 0b00011111)                #20
              068d e200  jmp  y,ac        2870  jmp(Y,AC)                       #21
              068e fcff  bra  $ff         2871  bra(255)                        #22 bra shiftTable+255
                                          2872  label('.sysLsrw6a')
.sysLsrw6a:   068f c218  st   [$18]       2873  st([vAC])                       #26
              0690 0119  ld   [$19]       2874  ld([vAC+1])                     #27 Transfer bit 8:13
              0691 8200  adda ac          2875  adda(AC)                        #28
              0692 8200  adda ac          2876  adda(AC)                        #29
              0693 4118  ora  [$18]       2877  ora([vAC])                      #30
              0694 c218  st   [$18]       2878  st([vAC])                       #31
              0695 009c  ld   $9c         2879  ld('.sysLsrw6b')                #32 Shift high byte
              0696 c21d  st   [$1d]       2880  st([vTmp])                      #33
              0697 0119  ld   [$19]       2881  ld([vAC+1])                     #34
              0698 20c0  anda $c0         2882  anda(0b11000000)                #35
              0699 401f  ora  $1f         2883  ora( 0b00011111)                #36
              069a e200  jmp  y,ac        2884  jmp(Y,AC)                       #37
              069b fcff  bra  $ff         2885  bra(255)                        #38 bra shiftTable+255
                                          2886  label('.sysLsrw6b')
.sysLsrw6b:   069c c219  st   [$19]       2887  st([vAC+1])                     #42
              069d 1403  ld   $03,y       2888  ld(hi('REENTER'),Y)             #43
              069e e0cb  jmp  y,$cb       2889  jmp(Y,'REENTER')                #44
              069f 00e8  ld   $e8         2890  ld(-48/2)                       #45
                                          2891
                                          2892  label('SYS_LSLW4_46')
SYS_LSLW4_46: 06a0 1405  ld   $05,y       2893  ld(hi('shiftTable'),Y)          #15 Logical shift left 4 bit (X << 4)
              06a1 00ae  ld   $ae         2894  ld('.sysLsrl4')                 #16
              06a2 c21d  st   [$1d]       2895  st([vTmp])                      #17
              06a3 0119  ld   [$19]       2896  ld([vAC+1])                     #18
              06a4 8200  adda ac          2897  adda(AC)                        #19
              06a5 8200  adda ac          2898  adda(AC)                        #20
              06a6 8200  adda ac          2899  adda(AC)                        #21
              06a7 8200  adda ac          2900  adda(AC)                        #22
              06a8 c219  st   [$19]       2901  st([vAC+1])                     #23
              06a9 0118  ld   [$18]       2902  ld([vAC])                       #24
              06aa 20f0  anda $f0         2903  anda(0b11110000)                #25
              06ab 4007  ora  $07         2904  ora( 0b00000111)                #26
              06ac e200  jmp  y,ac        2905  jmp(Y,AC)                       #27
              06ad fcff  bra  $ff         2906  bra(255)                        #28 bra shiftTable+255
                                          2907  label('.sysLsrl4')
.sysLsrl4:    06ae 4119  ora  [$19]       2908  ora([vAC+1])                    #32
              06af c219  st   [$19]       2909  st([vAC+1])                     #33
              06b0 0118  ld   [$18]       2910  ld([vAC])                       #34
              06b1 8200  adda ac          2911  adda(AC)                        #35
              06b2 8200  adda ac          2912  adda(AC)                        #36
              06b3 8200  adda ac          2913  adda(AC)                        #37
              06b4 8200  adda ac          2914  adda(AC)                        #38
              06b5 c218  st   [$18]       2915  st([vAC])                       #39
              06b6 00e9  ld   $e9         2916  ld(-46/2)                       #40
              06b7 1403  ld   $03,y       2917  ld(hi('REENTER'),Y)             #41
              06b8 e0cb  jmp  y,$cb       2918  jmp(Y,'REENTER')                #42
                                          2919  #nop()                          #43
                                          2920
                                          2921  #-----------------------------------------------------------------------
                                          2922  #       v6502 right shift instruction
                                          2923  #-----------------------------------------------------------------------
                                          2924
                                          2925  label('v6502_lsr#30')
v6502_lsr#30: 06b9 1525  ld   [$25],y     2926  ld([v6502_ADH],Y)               #30 Result
              06ba ce00  st   [y,x]       2927  st([Y,X])                       #31
              06bb c228  st   [$28]       2928  st([v6502_Qz])                  #32 Z flag
              06bc c229  st   [$29]       2929  st([v6502_Qn])                  #33 N flag
              06bd 140e  ld   $0e,y       2930  ld(hi('v6502_next'),Y)          #34
              06be 00ed  ld   $ed         2931  ld(-38/2)                       #35
              06bf e020  jmp  y,$20       2932  jmp(Y,'v6502_next')             #36
                                          2933  #nop()                          #37 Overlap
                                          2934  #
                                          2935  label('v6502_ror#38')
v6502_ror#38: 06c0 1525  ld   [$25],y     2936  ld([v6502_ADH],Y)               #38,38 Result
              06c1 4119  ora  [$19]       2937  ora([v6502_BI])                 #39 Transfer bit 8
              06c2 ce00  st   [y,x]       2938  st([Y,X])                       #40
              06c3 c228  st   [$28]       2939  st([v6502_Qz])                  #41 Z flag
              06c4 c229  st   [$29]       2940  st([v6502_Qn])                  #42 N flag
              06c5 140e  ld   $0e,y       2941  ld(hi('v6502_next'),Y)          #43
              06c6 e020  jmp  y,$20       2942  jmp(Y,'v6502_next')             #44
              06c7 00e9  ld   $e9         2943  ld(-46/2)                       #45
                                          2944
                                          2945  #-----------------------------------------------------------------------
                                          2946  #       vCPU LSRB
                                          2947  #-----------------------------------------------------------------------
                                          2948
                                          2949  label('.lsrb#24')
.lsrb#24:     06c8 c600  st   [x]         2950  st([X])                         #24
              06c9 1403  ld   $03,y       2951  ld(hi('REENTER'),Y)             #25
              06ca e0cb  jmp  y,$cb       2952  jmp(Y,'REENTER')                #26
              06cb 00f1  ld   $f1         2953  ld(-30/2)                       #27
                                          2954
                                          2955  #-----------------------------------------------------------------------
                                          2956  #       vCPU LSRV
                                          2957  #-----------------------------------------------------------------------
                                          2958
                                          2959  label('.lsrv#27')
.lsrv#27:     06cc 142c  ld   $2c,y       2960  ld(hi('.lsrv#30'),Y)            #27
              06cd e053  jmp  y,$53       2961  jmp(Y,'.lsrv#30')               #28
              06ce c600  st   [x]         2962  st([X])                         #29 shifted byte low
                                          2963
                                          2964  label('.lsrv#51')
.lsrv#51:     06cf c600  st   [x]         2965  st([X])                         #51 shifted byte hi
              06d0 1403  ld   $03,y       2966  ld(hi('NEXTY'),Y)               #52
              06d1 e000  jmp  y,$00       2967  jmp(Y,'NEXTY')                  #53
              06d2 00e4  ld   $e4         2968  ld(-56/2)                       #54
                                          2969
                                          2970  #-----------------------------------------------------------------------
                                          2971  #       vCPU LSRVL
                                          2972  #-----------------------------------------------------------------------
                                          2973
                                          2974  label('.lsrvl#26')
.lsrvl#26:    06d3 142c  ld   $2c,y       2975  ld(hi('.lsrvl#29'),Y)           #26
              06d4 e074  jmp  y,$74       2976  jmp(Y,'.lsrvl#29')              #27
              06d5 c600  st   [x]         2977  st([X])                         #28 shifted byte 0
                                          2978
                                          2979  label('.lsrvl#54')
.lsrvl#54:    06d6 142c  ld   $2c,y       2980  ld(hi('.lsrvl#57'),Y)           #54
              06d7 e08a  jmp  y,$8a       2981  jmp(Y,'.lsrvl#57')              #55
              06d8 c600  st   [x]         2982  st([X])                         #56 shifted byte 1
                                          2983
                                          2984  label('.lsrvl#76')
.lsrvl#76:    06d9 142c  ld   $2c,y       2985  ld(hi('.lsrvl#79'),Y)           #76
              06da e09a  jmp  y,$9a       2986  jmp(Y,'.lsrvl#79')              #77
              06db c600  st   [x]         2987  st([X])                         #78 shifted byte 2
                                          2988
                                          2989  label('.lsrvl#98')
.lsrvl#98:    06dc c600  st   [x]         2990  st([X])                         #98 shifted byte 3
              06dd 1403  ld   $03,y       2991  ld(hi('REENTER'),Y)             #99
              06de e0cb  jmp  y,$cb       2992  jmp(Y,'REENTER')                #100
              06df 00cc  ld   $cc         2993  ld(-104/2)                      #101
                                          2994
                                          2995  #-----------------------------------------------------------------------
                                          2996  #       vCPU NROR (lb3361)
                                          2997  #-----------------------------------------------------------------------
                                          2998
                                          2999  label('nror#35')
nror#35:      06e0 4118  ora  [$18]       3000  ora([vAC])                      #35
              06e1 c600  st   [x]         3001  st([X])                         #36
              06e2 012b  ld   [$2b]       3002  ld([sysArgs+7])                 #37
              06e3 612a  xora [$2a]       3003  xora([sysArgs+6])               #38
              06e4 ece8  bne  nror#41     3004  bne('nror#41')                  #39
              06e5 1403  ld   $03,y       3005  ld(hi('NEXTY'),Y)               #40
              06e6 e000  jmp  y,$00       3006  jmp(Y,'NEXTY')                  #41
              06e7 00ea  ld   $ea         3007  ld(-44/2)                       #42
                                          3008  label('nror#41')
nror#41:      06e8 00f1  ld   $f1         3009  ld(-30/2)                       #41
              06e9 8115  adda [$15]       3010  adda([vTicks])                  #12=42-30
              06ea 1434  ld   $34,y       3011  ld(hi('nror#16'),Y)             #13=43-30
              06eb e037  jmp  y,$37       3012  jmp(Y,'nror#16')                #14=44-30
              06ec c215  st   [$15]       3013  st([vTicks])                    #15=45-30
                                          3014
                                          3015
                                          3016
                                          3017  #-----------------------------------------------------------------------
                                          3018  #
                                          3019  #  $0700 ROM page 7-8: Gigatron font data
                                          3020  #
                                          3021  #-----------------------------------------------------------------------
                                          3022
              06ed 0200  nop              3023  align(0x100, size=0x100)
              06ee 0200  nop
              06ef 0200  nop
              * 19 times
                                          3024
                                          3025  label('font32up')
                                          3026  for ch in range(32, 32+50):
                                          3027    comment = 'Char %s' % repr(chr(ch))
                                          3028    for byte in font.font[ch-32]:
                                          3029      ld(byte)
font32up:     0700 0000  ld   $00         ;Char ' '
              0701 0000  ld   $00
              0702 0000  ld   $00
              * 5 times
              0705 0000  ld   $00         ;Char '!'
              0706 0000  ld   $00
              0707 00fa  ld   $fa
              0708 0000  ld   $00
              0709 0000  ld   $00
              070a 00a0  ld   $a0         ;Char '"'
              070b 00c0  ld   $c0
              070c 0000  ld   $00
              070d 00a0  ld   $a0
              070e 00c0  ld   $c0
              070f 0028  ld   $28         ;Char '#'
              0710 00fe  ld   $fe
              0711 0028  ld   $28
              0712 00fe  ld   $fe
              0713 0028  ld   $28
              0714 0024  ld   $24         ;Char '$'
              0715 0054  ld   $54
              0716 00fe  ld   $fe
              0717 0054  ld   $54
              0718 0048  ld   $48
              0719 00c4  ld   $c4         ;Char '%'
              071a 00c8  ld   $c8
              071b 0010  ld   $10
              071c 0026  ld   $26
              071d 0046  ld   $46
              071e 006c  ld   $6c         ;Char '&'
              071f 0092  ld   $92
              0720 006a  ld   $6a
              0721 0004  ld   $04
              0722 000a  ld   $0a
              0723 0000  ld   $00         ;Char "'"
              0724 00a0  ld   $a0
              0725 00c0  ld   $c0
              0726 0000  ld   $00
              0727 0000  ld   $00
              0728 0000  ld   $00         ;Char '('
              0729 0038  ld   $38
              072a 0044  ld   $44
              072b 0082  ld   $82
              072c 0000  ld   $00
              072d 0000  ld   $00         ;Char ')'
              072e 0082  ld   $82
              072f 0044  ld   $44
              0730 0038  ld   $38
              0731 0000  ld   $00
              0732 0028  ld   $28         ;Char '*'
              0733 0010  ld   $10
              0734 007c  ld   $7c
              0735 0010  ld   $10
              0736 0028  ld   $28
              0737 0010  ld   $10         ;Char '+'
              0738 0010  ld   $10
              0739 007c  ld   $7c
              073a 0010  ld   $10
              073b 0010  ld   $10
              073c 0000  ld   $00         ;Char ','
              073d 0005  ld   $05
              073e 0006  ld   $06
              073f 0000  ld   $00
              0740 0000  ld   $00
              0741 0010  ld   $10         ;Char '-'
              0742 0010  ld   $10
              0743 0010  ld   $10
              * 5 times
              0746 0000  ld   $00         ;Char '.'
              0747 0002  ld   $02
              0748 0002  ld   $02
              0749 0000  ld   $00
              074a 0000  ld   $00
              074b 0000  ld   $00         ;Char '/'
              074c 0006  ld   $06
              074d 0018  ld   $18
              074e 0060  ld   $60
              074f 0000  ld   $00
              0750 007c  ld   $7c         ;Char '0'
              0751 008a  ld   $8a
              0752 0092  ld   $92
              0753 00a2  ld   $a2
              0754 007c  ld   $7c
              0755 0022  ld   $22         ;Char '1'
              0756 0042  ld   $42
              0757 00fe  ld   $fe
              0758 0002  ld   $02
              0759 0002  ld   $02
              075a 0046  ld   $46         ;Char '2'
              075b 008a  ld   $8a
              075c 0092  ld   $92
              075d 0092  ld   $92
              075e 0062  ld   $62
              075f 0044  ld   $44         ;Char '3'
              0760 0082  ld   $82
              0761 0092  ld   $92
              0762 0092  ld   $92
              0763 006c  ld   $6c
              0764 0018  ld   $18         ;Char '4'
              0765 0028  ld   $28
              0766 0048  ld   $48
              0767 00fe  ld   $fe
              0768 0008  ld   $08
              0769 00e4  ld   $e4         ;Char '5'
              076a 00a2  ld   $a2
              076b 00a2  ld   $a2
              076c 00a2  ld   $a2
              076d 009c  ld   $9c
              076e 003c  ld   $3c         ;Char '6'
              076f 0052  ld   $52
              0770 0092  ld   $92
              0771 0092  ld   $92
              0772 000c  ld   $0c
              0773 0080  ld   $80         ;Char '7'
              0774 008e  ld   $8e
              0775 0090  ld   $90
              0776 00a0  ld   $a0
              0777 00c0  ld   $c0
              0778 006c  ld   $6c         ;Char '8'
              0779 0092  ld   $92
              077a 0092  ld   $92
              077b 0092  ld   $92
              077c 006c  ld   $6c
              077d 0060  ld   $60         ;Char '9'
              077e 0092  ld   $92
              077f 0092  ld   $92
              0780 0094  ld   $94
              0781 0078  ld   $78
              0782 0000  ld   $00         ;Char ':'
              0783 0024  ld   $24
              0784 0024  ld   $24
              0785 0000  ld   $00
              0786 0000  ld   $00
              0787 0000  ld   $00         ;Char ';'
              0788 0025  ld   $25
              0789 0026  ld   $26
              078a 0000  ld   $00
              078b 0000  ld   $00
              078c 0010  ld   $10         ;Char '<'
              078d 0028  ld   $28
              078e 0044  ld   $44
              078f 0082  ld   $82
              0790 0000  ld   $00
              0791 0028  ld   $28         ;Char '='
              0792 0028  ld   $28
              0793 0028  ld   $28
              * 5 times
              0796 0000  ld   $00         ;Char '>'
              0797 0082  ld   $82
              0798 0044  ld   $44
              0799 0028  ld   $28
              079a 0010  ld   $10
              079b 0040  ld   $40         ;Char '?'
              079c 0080  ld   $80
              079d 008a  ld   $8a
              079e 0090  ld   $90
              079f 0060  ld   $60
              07a0 007c  ld   $7c         ;Char '@'
              07a1 0082  ld   $82
              07a2 00ba  ld   $ba
              07a3 00aa  ld   $aa
              07a4 0078  ld   $78
              07a5 003e  ld   $3e         ;Char 'A'
              07a6 0048  ld   $48
              07a7 0088  ld   $88
              07a8 0048  ld   $48
              07a9 003e  ld   $3e
              07aa 00fe  ld   $fe         ;Char 'B'
              07ab 0092  ld   $92
              07ac 0092  ld   $92
              07ad 0092  ld   $92
              07ae 006c  ld   $6c
              07af 007c  ld   $7c         ;Char 'C'
              07b0 0082  ld   $82
              07b1 0082  ld   $82
              07b2 0082  ld   $82
              07b3 0044  ld   $44
              07b4 00fe  ld   $fe         ;Char 'D'
              07b5 0082  ld   $82
              07b6 0082  ld   $82
              07b7 0044  ld   $44
              07b8 0038  ld   $38
              07b9 00fe  ld   $fe         ;Char 'E'
              07ba 0092  ld   $92
              07bb 0092  ld   $92
              07bc 0092  ld   $92
              07bd 0082  ld   $82
              07be 00fe  ld   $fe         ;Char 'F'
              07bf 0090  ld   $90
              07c0 0090  ld   $90
              07c1 0090  ld   $90
              07c2 0080  ld   $80
              07c3 007c  ld   $7c         ;Char 'G'
              07c4 0082  ld   $82
              07c5 0082  ld   $82
              07c6 0092  ld   $92
              07c7 005c  ld   $5c
              07c8 00fe  ld   $fe         ;Char 'H'
              07c9 0010  ld   $10
              07ca 0010  ld   $10
              07cb 0010  ld   $10
              07cc 00fe  ld   $fe
              07cd 0000  ld   $00         ;Char 'I'
              07ce 0082  ld   $82
              07cf 00fe  ld   $fe
              07d0 0082  ld   $82
              07d1 0000  ld   $00
              07d2 0004  ld   $04         ;Char 'J'
              07d3 0002  ld   $02
              07d4 0082  ld   $82
              07d5 00fc  ld   $fc
              07d6 0080  ld   $80
              07d7 00fe  ld   $fe         ;Char 'K'
              07d8 0010  ld   $10
              07d9 0028  ld   $28
              07da 0044  ld   $44
              07db 0082  ld   $82
              07dc 00fe  ld   $fe         ;Char 'L'
              07dd 0002  ld   $02
              07de 0002  ld   $02
              07df 0002  ld   $02
              07e0 0002  ld   $02
              07e1 00fe  ld   $fe         ;Char 'M'
              07e2 0040  ld   $40
              07e3 0030  ld   $30
              07e4 0040  ld   $40
              07e5 00fe  ld   $fe
              07e6 00fe  ld   $fe         ;Char 'N'
              07e7 0020  ld   $20
              07e8 0010  ld   $10
              07e9 0008  ld   $08
              07ea 00fe  ld   $fe
              07eb 007c  ld   $7c         ;Char 'O'
              07ec 0082  ld   $82
              07ed 0082  ld   $82
              07ee 0082  ld   $82
              07ef 007c  ld   $7c
              07f0 00fe  ld   $fe         ;Char 'P'
              07f1 0090  ld   $90
              07f2 0090  ld   $90
              07f3 0090  ld   $90
              07f4 0060  ld   $60
              07f5 007c  ld   $7c         ;Char 'Q'
              07f6 0082  ld   $82
              07f7 008a  ld   $8a
              07f8 0084  ld   $84
              07f9 007a  ld   $7a
                                          3030      comment = C(comment)
                                          3031
              07fa 0200  nop              3032  trampoline()
              07fb fe00  bra  ac          ;+-----------------------------------+
              07fc fcfd  bra  $07fd       ;|                                   |
              07fd 1418  ld   $18,y       ;| Trampoline for page $0700 lookups |
              07fe e006  jmp  y,$06       ;|                                   |
              07ff c218  st   [$18]       ;+-----------------------------------+
                                          3033
                                          3034  #-----------------------------------------------------------------------
                                          3035
                                          3036  align(0x100, size=0x100)
                                          3037
                                          3038  label('font82up')
                                          3039  for ch in range(32+50, 132):
                                          3040    comment = 'Char %s' % repr(chr(ch))
                                          3041    for byte in font.font[ch-32]:
                                          3042      ld(byte)
font82up:     0800 00fe  ld   $fe         ;Char 'R'
              0801 0090  ld   $90
              0802 0098  ld   $98
              0803 0094  ld   $94
              0804 0062  ld   $62
              0805 0062  ld   $62         ;Char 'S'
              0806 0092  ld   $92
              0807 0092  ld   $92
              0808 0092  ld   $92
              0809 000c  ld   $0c
              080a 0080  ld   $80         ;Char 'T'
              080b 0080  ld   $80
              080c 00fe  ld   $fe
              080d 0080  ld   $80
              080e 0080  ld   $80
              080f 00fc  ld   $fc         ;Char 'U'
              0810 0002  ld   $02
              0811 0002  ld   $02
              0812 0002  ld   $02
              0813 00fc  ld   $fc
              0814 00f0  ld   $f0         ;Char 'V'
              0815 000c  ld   $0c
              0816 0002  ld   $02
              0817 000c  ld   $0c
              0818 00f0  ld   $f0
              0819 00fe  ld   $fe         ;Char 'W'
              081a 0004  ld   $04
              081b 0018  ld   $18
              081c 0004  ld   $04
              081d 00fe  ld   $fe
              081e 00c6  ld   $c6         ;Char 'X'
              081f 0028  ld   $28
              0820 0010  ld   $10
              0821 0028  ld   $28
              0822 00c6  ld   $c6
              0823 00e0  ld   $e0         ;Char 'Y'
              0824 0010  ld   $10
              0825 000e  ld   $0e
              0826 0010  ld   $10
              0827 00e0  ld   $e0
              0828 0086  ld   $86         ;Char 'Z'
              0829 008a  ld   $8a
              082a 0092  ld   $92
              082b 00a2  ld   $a2
              082c 00c2  ld   $c2
              082d 0000  ld   $00         ;Char '['
              082e 00fe  ld   $fe
              082f 0082  ld   $82
              0830 0082  ld   $82
              0831 0000  ld   $00
              0832 0000  ld   $00         ;Char '\\'
              0833 0060  ld   $60
              0834 0018  ld   $18
              0835 0006  ld   $06
              0836 0000  ld   $00
              0837 0000  ld   $00         ;Char ']'
              0838 0082  ld   $82
              0839 0082  ld   $82
              083a 00fe  ld   $fe
              083b 0000  ld   $00
              083c 0020  ld   $20         ;Char '^'
              083d 0040  ld   $40
              083e 0080  ld   $80
              083f 0040  ld   $40
              0840 0020  ld   $20
              0841 0002  ld   $02         ;Char '_'
              0842 0002  ld   $02
              0843 0002  ld   $02
              * 5 times
              0846 0000  ld   $00         ;Char '`'
              0847 0000  ld   $00
              0848 00c0  ld   $c0
              0849 00a0  ld   $a0
              084a 0000  ld   $00
              084b 0004  ld   $04         ;Char 'a'
              084c 002a  ld   $2a
              084d 002a  ld   $2a
              084e 002a  ld   $2a
              084f 001e  ld   $1e
              0850 00fe  ld   $fe         ;Char 'b'
              0851 0022  ld   $22
              0852 0022  ld   $22
              0853 0022  ld   $22
              0854 001c  ld   $1c
              0855 001c  ld   $1c         ;Char 'c'
              0856 0022  ld   $22
              0857 0022  ld   $22
              0858 0022  ld   $22
              0859 0002  ld   $02
              085a 001c  ld   $1c         ;Char 'd'
              085b 0022  ld   $22
              085c 0022  ld   $22
              085d 0022  ld   $22
              085e 00fe  ld   $fe
              085f 001c  ld   $1c         ;Char 'e'
              0860 002a  ld   $2a
              0861 002a  ld   $2a
              0862 002a  ld   $2a
              0863 0018  ld   $18
              0864 0010  ld   $10         ;Char 'f'
              0865 007e  ld   $7e
              0866 0090  ld   $90
              0867 0080  ld   $80
              0868 0040  ld   $40
              0869 0018  ld   $18         ;Char 'g'
              086a 0025  ld   $25
              086b 0025  ld   $25
              086c 0025  ld   $25
              086d 001e  ld   $1e
              086e 00fe  ld   $fe         ;Char 'h'
              086f 0020  ld   $20
              0870 0020  ld   $20
              0871 0020  ld   $20
              0872 001e  ld   $1e
              0873 0000  ld   $00         ;Char 'i'
              0874 0022  ld   $22
              0875 00be  ld   $be
              0876 0002  ld   $02
              0877 0000  ld   $00
              0878 0002  ld   $02         ;Char 'j'
              0879 0001  ld   $01
              087a 0021  ld   $21
              087b 00be  ld   $be
              087c 0000  ld   $00
              087d 00fe  ld   $fe         ;Char 'k'
              087e 0008  ld   $08
              087f 0018  ld   $18
              0880 0024  ld   $24
              0881 0002  ld   $02
              0882 0000  ld   $00         ;Char 'l'
              0883 0082  ld   $82
              0884 00fe  ld   $fe
              0885 0002  ld   $02
              0886 0000  ld   $00
              0887 003e  ld   $3e         ;Char 'm'
              0888 0020  ld   $20
              0889 001c  ld   $1c
              088a 0020  ld   $20
              088b 001e  ld   $1e
              088c 003e  ld   $3e         ;Char 'n'
              088d 0010  ld   $10
              088e 0020  ld   $20
              088f 0020  ld   $20
              0890 001e  ld   $1e
              0891 001c  ld   $1c         ;Char 'o'
              0892 0022  ld   $22
              0893 0022  ld   $22
              0894 0022  ld   $22
              0895 001c  ld   $1c
              0896 003f  ld   $3f         ;Char 'p'
              0897 0024  ld   $24
              0898 0024  ld   $24
              0899 0024  ld   $24
              089a 0018  ld   $18
              089b 0018  ld   $18         ;Char 'q'
              089c 0024  ld   $24
              089d 0024  ld   $24
              089e 0024  ld   $24
              089f 003f  ld   $3f
              08a0 003e  ld   $3e         ;Char 'r'
              08a1 0010  ld   $10
              08a2 0020  ld   $20
              08a3 0020  ld   $20
              08a4 0010  ld   $10
              08a5 0012  ld   $12         ;Char 's'
              08a6 002a  ld   $2a
              08a7 002a  ld   $2a
              08a8 002a  ld   $2a
              08a9 0004  ld   $04
              08aa 0020  ld   $20         ;Char 't'
              08ab 00fc  ld   $fc
              08ac 0022  ld   $22
              08ad 0002  ld   $02
              08ae 0004  ld   $04
              08af 003c  ld   $3c         ;Char 'u'
              08b0 0002  ld   $02
              08b1 0002  ld   $02
              08b2 0004  ld   $04
              08b3 003e  ld   $3e
              08b4 0038  ld   $38         ;Char 'v'
              08b5 0004  ld   $04
              08b6 0002  ld   $02
              08b7 0004  ld   $04
              08b8 0038  ld   $38
              08b9 003c  ld   $3c         ;Char 'w'
              08ba 0002  ld   $02
              08bb 000c  ld   $0c
              08bc 0002  ld   $02
              08bd 003c  ld   $3c
              08be 0022  ld   $22         ;Char 'x'
              08bf 0014  ld   $14
              08c0 0008  ld   $08
              08c1 0014  ld   $14
              08c2 0022  ld   $22
              08c3 0038  ld   $38         ;Char 'y'
              08c4 0005  ld   $05
              08c5 0005  ld   $05
              08c6 0005  ld   $05
              08c7 003e  ld   $3e
              08c8 0022  ld   $22         ;Char 'z'
              08c9 0026  ld   $26
              08ca 002a  ld   $2a
              08cb 0032  ld   $32
              08cc 0022  ld   $22
              08cd 0010  ld   $10         ;Char '{'
              08ce 006c  ld   $6c
              08cf 0082  ld   $82
              08d0 0082  ld   $82
              08d1 0000  ld   $00
              08d2 0000  ld   $00         ;Char '|'
              08d3 0000  ld   $00
              08d4 00fe  ld   $fe
              08d5 0000  ld   $00
              08d6 0000  ld   $00
              08d7 0000  ld   $00         ;Char '}'
              08d8 0082  ld   $82
              08d9 0082  ld   $82
              08da 006c  ld   $6c
              08db 0010  ld   $10
              08dc 0040  ld   $40         ;Char '~'
              08dd 0080  ld   $80
              08de 0040  ld   $40
              08df 0020  ld   $20
              08e0 0040  ld   $40
              08e1 00fe  ld   $fe         ;Char '\x7f'
              08e2 00fe  ld   $fe
              08e3 00fe  ld   $fe
              * 5 times
              08e6 0010  ld   $10         ;Char '\x80'
              08e7 0038  ld   $38
              08e8 0054  ld   $54
              08e9 0010  ld   $10
              08ea 0010  ld   $10
              08eb 0010  ld   $10         ;Char '\x81'
              08ec 0020  ld   $20
              08ed 007c  ld   $7c
              08ee 0020  ld   $20
              08ef 0010  ld   $10
              08f0 0010  ld   $10         ;Char '\x82'
              08f1 0010  ld   $10
              08f2 0054  ld   $54
              08f3 0038  ld   $38
              08f4 0010  ld   $10
              08f5 0010  ld   $10         ;Char '\x83'
              08f6 0008  ld   $08
              08f7 007c  ld   $7c
              08f8 0008  ld   $08
              08f9 0010  ld   $10
                                          3043      comment = C(comment)
                                          3044
              08fa 0200  nop              3045  trampoline()
              08fb fe00  bra  ac          ;+-----------------------------------+
              08fc fcfd  bra  $08fd       ;|                                   |
              08fd 1418  ld   $18,y       ;| Trampoline for page $0800 lookups |
              08fe e006  jmp  y,$06       ;|                                   |
              08ff c218  st   [$18]       ;+-----------------------------------+
                                          3046
                                          3047  #-----------------------------------------------------------------------
                                          3048  #
                                          3049  #  $0900 ROM page 9: Key table for music
                                          3050  #
                                          3051  #-----------------------------------------------------------------------
                                          3052
                                          3053  align(0x100, size=0x100)
                                          3054  notes = 'CCDDEFFGGAAB'
                                          3055  sampleRate = cpuClock / 200.0 / 4
                                          3056  label('notesTable')
notesTable:   0900 0000  ld   $00         3057  ld(0)
              0901 0000  ld   $00         3058  ld(0)
                                          3059  for i in range(0, 250, 2):
                                          3060    j = i//2-1
                                          3061    freq = 440.0*2.0**((j-57)/12.0)
                                          3062    if j>=0 and freq <= sampleRate/2.0:
                                          3063      key = int(round(32768 * freq / sampleRate))
                                          3064      octave, note = j//12, notes[j%12]
                                          3065      sharp = '-' if notes[j%12-1] != note else '#'
                                          3066      comment = '%s%s%s (%0.1f Hz)' % (note, sharp, octave, freq)
                                          3067      ld(key&127); C(comment); ld(key>>7)
              0902 0045  ld   $45         ;C-0 (16.4 Hz)
              0903 0000  ld   $00
              0904 0049  ld   $49         ;C#0 (17.3 Hz)
              0905 0000  ld   $00
              0906 004d  ld   $4d         ;D-0 (18.4 Hz)
              0907 0000  ld   $00
              0908 0052  ld   $52         ;D#0 (19.4 Hz)
              0909 0000  ld   $00
              090a 0056  ld   $56         ;E-0 (20.6 Hz)
              090b 0000  ld   $00
              090c 005c  ld   $5c         ;F-0 (21.8 Hz)
              090d 0000  ld   $00
              090e 0061  ld   $61         ;F#0 (23.1 Hz)
              090f 0000  ld   $00
              0910 0067  ld   $67         ;G-0 (24.5 Hz)
              0911 0000  ld   $00
              0912 006d  ld   $6d         ;G#0 (26.0 Hz)
              0913 0000  ld   $00
              0914 0073  ld   $73         ;A-0 (27.5 Hz)
              0915 0000  ld   $00
              0916 007a  ld   $7a         ;A#0 (29.1 Hz)
              0917 0000  ld   $00
              0918 0001  ld   $01         ;B-0 (30.9 Hz)
              0919 0001  ld   $01
              091a 0009  ld   $09         ;C-1 (32.7 Hz)
              091b 0001  ld   $01
              091c 0011  ld   $11         ;C#1 (34.6 Hz)
              091d 0001  ld   $01
              091e 001a  ld   $1a         ;D-1 (36.7 Hz)
              091f 0001  ld   $01
              0920 0023  ld   $23         ;D#1 (38.9 Hz)
              0921 0001  ld   $01
              0922 002d  ld   $2d         ;E-1 (41.2 Hz)
              0923 0001  ld   $01
              0924 0037  ld   $37         ;F-1 (43.7 Hz)
              0925 0001  ld   $01
              0926 0042  ld   $42         ;F#1 (46.2 Hz)
              0927 0001  ld   $01
              0928 004e  ld   $4e         ;G-1 (49.0 Hz)
              0929 0001  ld   $01
              092a 005a  ld   $5a         ;G#1 (51.9 Hz)
              092b 0001  ld   $01
              092c 0067  ld   $67         ;A-1 (55.0 Hz)
              092d 0001  ld   $01
              092e 0074  ld   $74         ;A#1 (58.3 Hz)
              092f 0001  ld   $01
              0930 0003  ld   $03         ;B-1 (61.7 Hz)
              0931 0002  ld   $02
              0932 0012  ld   $12         ;C-2 (65.4 Hz)
              0933 0002  ld   $02
              0934 0023  ld   $23         ;C#2 (69.3 Hz)
              0935 0002  ld   $02
              0936 0034  ld   $34         ;D-2 (73.4 Hz)
              0937 0002  ld   $02
              0938 0046  ld   $46         ;D#2 (77.8 Hz)
              0939 0002  ld   $02
              093a 005a  ld   $5a         ;E-2 (82.4 Hz)
              093b 0002  ld   $02
              093c 006e  ld   $6e         ;F-2 (87.3 Hz)
              093d 0002  ld   $02
              093e 0004  ld   $04         ;F#2 (92.5 Hz)
              093f 0003  ld   $03
              0940 001b  ld   $1b         ;G-2 (98.0 Hz)
              0941 0003  ld   $03
              0942 0033  ld   $33         ;G#2 (103.8 Hz)
              0943 0003  ld   $03
              0944 004d  ld   $4d         ;A-2 (110.0 Hz)
              0945 0003  ld   $03
              0946 0069  ld   $69         ;A#2 (116.5 Hz)
              0947 0003  ld   $03
              0948 0006  ld   $06         ;B-2 (123.5 Hz)
              0949 0004  ld   $04
              094a 0025  ld   $25         ;C-3 (130.8 Hz)
              094b 0004  ld   $04
              094c 0045  ld   $45         ;C#3 (138.6 Hz)
              094d 0004  ld   $04
              094e 0068  ld   $68         ;D-3 (146.8 Hz)
              094f 0004  ld   $04
              0950 000c  ld   $0c         ;D#3 (155.6 Hz)
              0951 0005  ld   $05
              0952 0033  ld   $33         ;E-3 (164.8 Hz)
              0953 0005  ld   $05
              0954 005c  ld   $5c         ;F-3 (174.6 Hz)
              0955 0005  ld   $05
              0956 0008  ld   $08         ;F#3 (185.0 Hz)
              0957 0006  ld   $06
              0958 0036  ld   $36         ;G-3 (196.0 Hz)
              0959 0006  ld   $06
              095a 0067  ld   $67         ;G#3 (207.7 Hz)
              095b 0006  ld   $06
              095c 001b  ld   $1b         ;A-3 (220.0 Hz)
              095d 0007  ld   $07
              095e 0052  ld   $52         ;A#3 (233.1 Hz)
              095f 0007  ld   $07
              0960 000c  ld   $0c         ;B-3 (246.9 Hz)
              0961 0008  ld   $08
              0962 0049  ld   $49         ;C-4 (261.6 Hz)
              0963 0008  ld   $08
              0964 000b  ld   $0b         ;C#4 (277.2 Hz)
              0965 0009  ld   $09
              0966 0050  ld   $50         ;D-4 (293.7 Hz)
              0967 0009  ld   $09
              0968 0019  ld   $19         ;D#4 (311.1 Hz)
              0969 000a  ld   $0a
              096a 0067  ld   $67         ;E-4 (329.6 Hz)
              096b 000a  ld   $0a
              096c 0039  ld   $39         ;F-4 (349.2 Hz)
              096d 000b  ld   $0b
              096e 0010  ld   $10         ;F#4 (370.0 Hz)
              096f 000c  ld   $0c
              0970 006c  ld   $6c         ;G-4 (392.0 Hz)
              0971 000c  ld   $0c
              0972 004e  ld   $4e         ;G#4 (415.3 Hz)
              0973 000d  ld   $0d
              0974 0035  ld   $35         ;A-4 (440.0 Hz)
              0975 000e  ld   $0e
              0976 0023  ld   $23         ;A#4 (466.2 Hz)
              0977 000f  ld   $0f
              0978 0017  ld   $17         ;B-4 (493.9 Hz)
              0979 0010  ld   $10
              097a 0013  ld   $13         ;C-5 (523.3 Hz)
              097b 0011  ld   $11
              097c 0015  ld   $15         ;C#5 (554.4 Hz)
              097d 0012  ld   $12
              097e 001f  ld   $1f         ;D-5 (587.3 Hz)
              097f 0013  ld   $13
              0980 0032  ld   $32         ;D#5 (622.3 Hz)
              0981 0014  ld   $14
              0982 004d  ld   $4d         ;E-5 (659.3 Hz)
              0983 0015  ld   $15
              0984 0072  ld   $72         ;F-5 (698.5 Hz)
              0985 0016  ld   $16
              0986 0020  ld   $20         ;F#5 (740.0 Hz)
              0987 0018  ld   $18
              0988 0058  ld   $58         ;G-5 (784.0 Hz)
              0989 0019  ld   $19
              098a 001c  ld   $1c         ;G#5 (830.6 Hz)
              098b 001b  ld   $1b
              098c 006b  ld   $6b         ;A-5 (880.0 Hz)
              098d 001c  ld   $1c
              098e 0046  ld   $46         ;A#5 (932.3 Hz)
              098f 001e  ld   $1e
              0990 002f  ld   $2f         ;B-5 (987.8 Hz)
              0991 0020  ld   $20
              0992 0025  ld   $25         ;C-6 (1046.5 Hz)
              0993 0022  ld   $22
              0994 002a  ld   $2a         ;C#6 (1108.7 Hz)
              0995 0024  ld   $24
              0996 003f  ld   $3f         ;D-6 (1174.7 Hz)
              0997 0026  ld   $26
              0998 0064  ld   $64         ;D#6 (1244.5 Hz)
              0999 0028  ld   $28
              099a 001a  ld   $1a         ;E-6 (1318.5 Hz)
              099b 002b  ld   $2b
              099c 0063  ld   $63         ;F-6 (1396.9 Hz)
              099d 002d  ld   $2d
              099e 003f  ld   $3f         ;F#6 (1480.0 Hz)
              099f 0030  ld   $30
              09a0 0031  ld   $31         ;G-6 (1568.0 Hz)
              09a1 0033  ld   $33
              09a2 0038  ld   $38         ;G#6 (1661.2 Hz)
              09a3 0036  ld   $36
              09a4 0056  ld   $56         ;A-6 (1760.0 Hz)
              09a5 0039  ld   $39
              09a6 000d  ld   $0d         ;A#6 (1864.7 Hz)
              09a7 003d  ld   $3d
              09a8 005e  ld   $5e         ;B-6 (1975.5 Hz)
              09a9 0040  ld   $40
              09aa 004b  ld   $4b         ;C-7 (2093.0 Hz)
              09ab 0044  ld   $44
              09ac 0055  ld   $55         ;C#7 (2217.5 Hz)
              09ad 0048  ld   $48
              09ae 007e  ld   $7e         ;D-7 (2349.3 Hz)
              09af 004c  ld   $4c
              09b0 0048  ld   $48         ;D#7 (2489.0 Hz)
              09b1 0051  ld   $51
              09b2 0034  ld   $34         ;E-7 (2637.0 Hz)
              09b3 0056  ld   $56
              09b4 0046  ld   $46         ;F-7 (2793.8 Hz)
              09b5 005b  ld   $5b
              09b6 007f  ld   $7f         ;F#7 (2960.0 Hz)
              09b7 0060  ld   $60
              09b8 0061  ld   $61         ;G-7 (3136.0 Hz)
              09b9 0066  ld   $66
              09ba 006f  ld   $6f         ;G#7 (3322.4 Hz)
              09bb 006c  ld   $6c
              09bc 002c  ld   $2c         ;A-7 (3520.0 Hz)
              09bd 0073  ld   $73
              09be 001a  ld   $1a         ;A#7 (3729.3 Hz)
              09bf 007a  ld   $7a
                                          3068
                                          3069  # NOTE trampoline, (0x09c0),
                                          3070  label('noteTrampoline')
noteTrampoline:
              09c0 fe00  bra  ac          3071  bra(AC)                         #+1
              09c1 fcc2  bra  $09c2       3072  bra(pc()+1)                     #+3
              09c2 15c1  ld   [$c1],y     3073  ld([0xC1],Y)                    #+4
              09c3 e11d  jmp  y,[$1d]     3074  jmp(Y,[vTmp])                   #+5
              09c4 0200  nop              3075  nop()                           #+6
                                          3076
              09c5 0200  nop              3077  trampoline()
              09c6 0200  nop
              09c7 0200  nop
              * 54 times
              09fb fe00  bra  ac          ;+-----------------------------------+
              09fc fcfd  bra  $09fd       ;|                                   |
              09fd 1418  ld   $18,y       ;| Trampoline for page $0900 lookups |
              09fe e006  jmp  y,$06       ;|                                   |
              09ff c218  st   [$18]       ;+-----------------------------------+
                                          3078
                                          3079  #-----------------------------------------------------------------------
                                          3080  #
                                          3081  #  $0a00 ROM page 10: Inversion table
                                          3082  #
                                          3083  #-----------------------------------------------------------------------
                                          3084
                                          3085  align(0x100, size=0x100)
                                          3086  label('invTable')
                                          3087
                                          3088  # Unit 64, table offset 16 (=1/4), value offset 1: (x+16)*(y+1) == 64*64 - e
                                          3089  for i in range(251):
invTable:     0a00 00ff  ld   $ff         3090    ld(4096//(i+16)-1)
              0a01 00ef  ld   $ef
              0a02 00e2  ld   $e2
              0a03 00d6  ld   $d6
              0a04 00cb  ld   $cb
              0a05 00c2  ld   $c2
              0a06 00b9  ld   $b9
              0a07 00b1  ld   $b1
              0a08 00a9  ld   $a9
              0a09 00a2  ld   $a2
              0a0a 009c  ld   $9c
              0a0b 0096  ld   $96
              0a0c 0091  ld   $91
              0a0d 008c  ld   $8c
              0a0e 0087  ld   $87
              0a0f 0083  ld   $83
              0a10 007f  ld   $7f
              0a11 007b  ld   $7b
              0a12 0077  ld   $77
              0a13 0074  ld   $74
              0a14 0070  ld   $70
              0a15 006d  ld   $6d
              0a16 006a  ld   $6a
              0a17 0068  ld   $68
              0a18 0065  ld   $65
              0a19 0062  ld   $62
              0a1a 0060  ld   $60
              0a1b 005e  ld   $5e
              0a1c 005c  ld   $5c
              0a1d 005a  ld   $5a
              0a1e 0058  ld   $58
              0a1f 0056  ld   $56
              0a20 0054  ld   $54
              0a21 0052  ld   $52
              0a22 0050  ld   $50
              0a23 004f  ld   $4f
              0a24 004d  ld   $4d
              0a25 004c  ld   $4c
              0a26 004a  ld   $4a
              0a27 0049  ld   $49
              0a28 0048  ld   $48
              0a29 0046  ld   $46
              0a2a 0045  ld   $45
              0a2b 0044  ld   $44
              0a2c 0043  ld   $43
              0a2d 0042  ld   $42
              0a2e 0041  ld   $41
              0a2f 0040  ld   $40
              0a30 003f  ld   $3f
              0a31 003e  ld   $3e
              0a32 003d  ld   $3d
              0a33 003c  ld   $3c
              0a34 003b  ld   $3b
              0a35 003a  ld   $3a
              0a36 0039  ld   $39
              0a37 0038  ld   $38
              0a38 0037  ld   $37
              0a39 0037  ld   $37
              0a3a 0036  ld   $36
              0a3b 0035  ld   $35
              0a3c 0034  ld   $34
              0a3d 0034  ld   $34
              0a3e 0033  ld   $33
              0a3f 0032  ld   $32
              0a40 0032  ld   $32
              0a41 0031  ld   $31
              0a42 0030  ld   $30
              0a43 0030  ld   $30
              0a44 002f  ld   $2f
              0a45 002f  ld   $2f
              0a46 002e  ld   $2e
              0a47 002e  ld   $2e
              0a48 002d  ld   $2d
              0a49 002d  ld   $2d
              0a4a 002c  ld   $2c
              0a4b 002c  ld   $2c
              0a4c 002b  ld   $2b
              0a4d 002b  ld   $2b
              0a4e 002a  ld   $2a
              0a4f 002a  ld   $2a
              0a50 0029  ld   $29
              0a51 0029  ld   $29
              0a52 0028  ld   $28
              0a53 0028  ld   $28
              0a54 0027  ld   $27
              0a55 0027  ld   $27
              0a56 0027  ld   $27
              0a57 0026  ld   $26
              0a58 0026  ld   $26
              0a59 0026  ld   $26
              0a5a 0025  ld   $25
              0a5b 0025  ld   $25
              0a5c 0024  ld   $24
              0a5d 0024  ld   $24
              0a5e 0024  ld   $24
              0a5f 0023  ld   $23
              0a60 0023  ld   $23
              0a61 0023  ld   $23
              0a62 0022  ld   $22
              0a63 0022  ld   $22
              0a64 0022  ld   $22
              0a65 0022  ld   $22
              0a66 0021  ld   $21
              0a67 0021  ld   $21
              0a68 0021  ld   $21
              0a69 0020  ld   $20
              0a6a 0020  ld   $20
              0a6b 0020  ld   $20
              0a6c 0020  ld   $20
              0a6d 001f  ld   $1f
              0a6e 001f  ld   $1f
              0a6f 001f  ld   $1f
              0a70 001f  ld   $1f
              0a71 001e  ld   $1e
              0a72 001e  ld   $1e
              0a73 001e  ld   $1e
              0a74 001e  ld   $1e
              0a75 001d  ld   $1d
              0a76 001d  ld   $1d
              0a77 001d  ld   $1d
              0a78 001d  ld   $1d
              0a79 001c  ld   $1c
              0a7a 001c  ld   $1c
              0a7b 001c  ld   $1c
              * 5 times
              0a7e 001b  ld   $1b
              0a7f 001b  ld   $1b
              0a80 001b  ld   $1b
              * 5 times
              0a83 001a  ld   $1a
              0a84 001a  ld   $1a
              0a85 001a  ld   $1a
              * 5 times
              0a88 0019  ld   $19
              0a89 0019  ld   $19
              0a8a 0019  ld   $19
              * 6 times
              0a8e 0018  ld   $18
              0a8f 0018  ld   $18
              0a90 0018  ld   $18
              * 6 times
              0a94 0017  ld   $17
              0a95 0017  ld   $17
              0a96 0017  ld   $17
              * 7 times
              0a9b 0016  ld   $16
              0a9c 0016  ld   $16
              0a9d 0016  ld   $16
              * 8 times
              0aa3 0015  ld   $15
              0aa4 0015  ld   $15
              0aa5 0015  ld   $15
              * 8 times
              0aab 0014  ld   $14
              0aac 0014  ld   $14
              0aad 0014  ld   $14
              * 9 times
              0ab4 0013  ld   $13
              0ab5 0013  ld   $13
              0ab6 0013  ld   $13
              * 9 times
              0abd 0012  ld   $12
              0abe 0012  ld   $12
              0abf 0012  ld   $12
              * 11 times
              0ac8 0011  ld   $11
              0ac9 0011  ld   $11
              0aca 0011  ld   $11
              * 12 times
              0ad4 0010  ld   $10
              0ad5 0010  ld   $10
              0ad6 0010  ld   $10
              * 13 times
              0ae1 000f  ld   $0f
              0ae2 000f  ld   $0f
              0ae3 000f  ld   $0f
              * 16 times
              0af1 000e  ld   $0e
              0af2 000e  ld   $0e
              0af3 000e  ld   $0e
              * 10 times
                                          3091
                                          3092  trampoline()
              0afb fe00  bra  ac          ;+-----------------------------------+
              0afc fcfd  bra  $0afd       ;|                                   |
              0afd 1418  ld   $18,y       ;| Trampoline for page $0a00 lookups |
              0afe e006  jmp  y,$06       ;|                                   |
              0aff c218  st   [$18]       ;+-----------------------------------+
                                          3093
                                          3094  #-----------------------------------------------------------------------
                                          3095  #
                                          3096  #  $0b00 ROM page 11: More SYS functions
                                          3097  #
                                          3098  #-----------------------------------------------------------------------
                                          3099
                                          3100  align(0x100, size=0x100)
                                          3101
                                          3102  #-----------------------------------------------------------------------
                                          3103  # Extension SYS_SetMode_v2_80
                                          3104  #-----------------------------------------------------------------------
                                          3105  #
                                          3106  # Set video mode to 0 to 3 black scanlines per pixel line.
                                          3107  #
                                          3108  # Mainly for making the MODE command available in Tiny BASIC, so that
                                          3109  # the user can experiment. It's adviced to refrain from using
                                          3110  # SYS_SetMode_v2_80 in regular applications. Video mode is a deeply
                                          3111  # personal preference, and the programmer shouldn't overrule the user
                                          3112  # in that choice. The Gigatron philisophy is that the end user has
                                          3113  # the final say on what happens on the system, not the application,
                                          3114  # even if that implies a degraded performance. This doesn't mean that
                                          3115  # all applications must work well in all video modes: mode 1 is still
                                          3116  # the default. If an application really doesn't work at all in that
                                          3117  # mode, it's acceptable to change mode once after loading.
                                          3118  #
                                          3119  # There's no "SYS_GetMode" function.
                                          3120  #
                                          3121  # Variables:
                                          3122  #       vAC bit 0:1     Mode:
                                          3123  #                         0      "ABCD" -> Full mode (slowest)
                                          3124  #                         1      "ABC-" -> Default mode after reset
                                          3125  #                         2      "A-C-" -> at67's mode
                                          3126  #                         3      "A---" -> HGM's mode
                                          3127  #       vAC bit 2:15    Ignored bits and should be 0
                                          3128  #
                                          3129  # Special values (ROM v4):
                                          3130  #       vAC = 1975      Zombie mode (no video signals, no input,
                                          3131  #                        no blinkenlights).
                                          3132  #       vAC = -1        Leave zombie mode and restore previous mode.
                                          3133
                                          3134  # Actual duration is <80 cycles, but keep some room for future extensions
                                          3135  label('SYS_SetMode_v2_80')
SYS_SetMode_v2_80:
              0b00 140b  ld   $0b,y       3136  ld(hi('sys_SetMode'),Y)         #15
              0b01 e054  jmp  y,$54       3137  jmp(Y,'sys_SetMode')            #16
              0b02 011e  ld   [$1e]       3138  ld([vReturn])                   #17
                                          3139
                                          3140  #-----------------------------------------------------------------------
                                          3141  # Extension SYS_SetMemory_v2_54
                                          3142  #-----------------------------------------------------------------------
                                          3143  #
                                          3144  # SYS function for setting 1..256 bytes
                                          3145  #
                                          3146  # sysArgs[0]   Copy count (in, changed)
                                          3147  # sysArgs[1]   Copy value (in)
                                          3148  # sysArgs[2:3] Destination address (in, changed)
                                          3149  #
                                          3150  # Sets up to 8 bytes per invocation before restarting itself through vCPU.
                                          3151  # Doesn't wrap around page boundary. Can run 3 times per 148-cycle time slice.
                                          3152  # All combined that gives a 300% speedup over ROMv4 and before.
                                          3153
                                          3154  label('SYS_SetMemory_v2_54')
SYS_SetMemory_v2_54:
              0b03 0124  ld   [$24]       3155  ld([sysArgs+0])                 #15
                                          3156  bra('sys_SetMemory#18')         #16
              0b04 fc18  bra  sys_SetMemory#18
              0b05 1126  ld   [$26],x     3157  ld([sysArgs+2],X)               #17
                                          3158
                                          3159  #-----------------------------------------------------------------------
                                          3160  # Extension SYS_SendSerial1_v3_80
                                          3161  #-----------------------------------------------------------------------
                                          3162  #
                                          3163  # SYS function for sending data over serial controller port using
                                          3164  # pulse width modulation of the vertical sync signal.
                                          3165  #
                                          3166  # Variables:
                                          3167  #       sysArgs[0:1]    Source address               (in, changed)
                                          3168  #       sysArgs[2]      Start bit mask (typically 1) (in, changed)
                                          3169  #       sysArgs[3]      Number of send frames X      (in, changed)
                                          3170  #
                                          3171  # The sending will abort if input data is detected on the serial port.
                                          3172  # Returns 0 in case of all bits sent, or <>0 in case of abort
                                          3173  #
                                          3174  # This modulates the next upcoming X vertical pulses with the supplied
                                          3175  # data. A zero becomes a 7 line vPulse, a one will be 9 lines.
                                          3176  # After that, the vPulse width falls back to 8 lines (idle).
                                          3177
                                          3178  label('SYS_SendSerial1_v3_80')
SYS_SendSerial1_v3_80:
              0b06 0109  ld   [$09]       3179  ld([videoY])                    #15
                                          3180  bra('sys_SendSerial1')          #16
              0b07 fc83  bra  sys_SendSerial1
              0b08 60b3  xora $b3         3181  xora(videoYline0)               #17 First line of vertical blank
                                          3182
                                          3183  #-----------------------------------------------------------------------
                                          3184  # Extension SYS_ExpanderControl_v4_40
                                          3185  #-----------------------------------------------------------------------
                                          3186  #
                                          3187  # Sets the I/O and RAM expander's control register
                                          3188  #
                                          3189  # Variables:
                                          3190  #       vAC bit 2       Device enable /SS0
                                          3191  #           bit 3       Device enable /SS1
                                          3192  #           bit 4       Device enable /SS2
                                          3193  #           bit 5       Device enable /SS3
                                          3194  #           bit 6       Banking B0
                                          3195  #           bit 7       Banking B1
                                          3196  #           bit 15      Data out MOSI
                                          3197  #       sysArgs[7]      Cache for control state (written to)
                                          3198  #
                                          3199  # Intended for prototyping, and probably too low-level for most applications
                                          3200  # Still there's a safeguard: it's not possible to disable RAM using this
                                          3201
                                          3202  label('SYS_ExpanderControl_v4_40')
SYS_ExpanderControl_v4_40:
              0b09 140d  ld   $0d,y       3203  ld(hi('sys_ExpanderControl'),Y) #15
              0b0a e000  jmp  y,$00       3204  jmp(Y,'sys_ExpanderControl')    #16
              0b0b 000c  ld   $0c         3205  ld(0b00001100)                  #17
                                          3206  #    ^^^^^^^^
                                          3207  #    |||||||`-- SCLK
                                          3208  #    ||||||`--- Not connected
                                          3209  #    |||||`---- /SS0
                                          3210  #    ||||`----- /SS1
                                          3211  #    |||`------ /SS2
                                          3212  #    ||`------- /SS3
                                          3213  #    |`-------- B0
                                          3214  #    `--------- B1
                                          3215
                                          3216  #-----------------------------------------------------------------------
                                          3217  # Extension SYS_Run6502_v4_80
                                          3218  #-----------------------------------------------------------------------
                                          3219  #
                                          3220  # Transfer control to v6502
                                          3221  #
                                          3222  # Calling 6502 code from vCPU goes (only) through this SYS function.
                                          3223  # Directly modifying the vCpuSelect variable is unreliable. The
                                          3224  # control transfer is immediate, without waiting for the current
                                          3225  # time slice to end or first returning to vCPU.
                                          3226  #
                                          3227  # vCPU code and v6502 code can interoperate without much hassle:
                                          3228  # - The v6502 program counter is vLR, and v6502 doesn't touch vPC
                                          3229  # - Returning to vCPU is with the BRK instruction
                                          3230  # - BRK doesn't dump process state on the stack
                                          3231  # - vCPU can save/restore the vLR with PUSH/POP
                                          3232  # - Stacks are shared, vAC is shared
                                          3233  # - vAC can indicate what the v6502 code wants. vAC+1 will be cleared
                                          3234  # - Alternative is to leave a word in sysArgs[6:7] (v6502 X and Y registers)
                                          3235  # - Another way is to set vPC before BRK, and vCPU will continue there(+2)
                                          3236  #
                                          3237  # Calling v6502 code from vCPU looks like this:
                                          3238  #       LDWI  SYS_Run6502_v4_80
                                          3239  #       STW   sysFn
                                          3240  #       LDWI  $6502_start_address
                                          3241  #       STW   vLR
                                          3242  #       SYS   80
                                          3243  #
                                          3244  # Variables:
                                          3245  #       vAC             Accumulator
                                          3246  #       vLR             Program Counter
                                          3247  #       vSP             Stack Pointer (+1)
                                          3248  #       sysArgs[6]      Index Register X
                                          3249  #       sysArgs[7]      Index Register Y
                                          3250  # For info:
                                          3251  #       sysArgs[0:1]    Address Register, free to clobber
                                          3252  #       sysArgs[2]      Instruction Register, free to clobber
                                          3253  #       sysArgs[3:5]    Flags, don't touch
                                          3254  #
                                          3255  # Implementation details::
                                          3256  #
                                          3257  #  The time to reserve for this transition is the maximum time
                                          3258  #  between NEXT and v6502_check. This is
                                          3259  #       SYS call duration + 2*v6502_maxTicks + (v6502_overhead - vCPU_overhead)
                                          3260  #     = 22 + 38 + (11 - 9) = 62 cycles.
                                          3261  #  So reserving 80 cycles is future proof. This isn't overhead, as it includes
                                          3262  #  the fetching of the first 6502 opcode and its operands..
                                          3263  #
                                          3264  #                      0            10                 28=0         9
                                          3265  #    ---+----+---------+------------+------------------+-----------+---
                                          3266  # video | nop| runVcpu |   ENTER    | At least one ins |   EXIT    | video
                                          3267  #    ---+----+---------+------------+------------------+-----------+---
                                          3268  #        sync  prelude  ENTER-to-ins    ins-to-NEXT     NEXT-to-video
                                          3269  #       |<-->|
                                          3270  #        0/1 |<------->|
                                          3271  #                 5    |<----------------------------->|
                                          3272  #          runVCpu_overhead           28               |<--------->|
                                          3273  #                                 2*maxTicks                 9
                                          3274  #                                                      vCPU_overhead
                                          3275  #
                                          3276  #                      0                21                    38=0       11
                                          3277  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3278  # video | nop| runVcpu |   v6502_ENTER  | At least one fetch |v6502_exitB| video
                                          3279  #    ---+----+---------+----------------+--------------------+-----------+---
                                          3280  #        sync  prelude   enter-to-fetch     fetch-to-check    check-to-video
                                          3281  #       |<-->|
                                          3282  #        0/1 |<------->|
                                          3283  #                 5    |<----------------------------------->|
                                          3284  #          runVcpu_overhead           38                     |<--------->|
                                          3285  #                              2*v6520_maxTicks                    11
                                          3286  #                                                            v6502_overhead
                                          3287
                                          3288  label('SYS_Run6502_v4_80')
SYS_Run6502_v4_80:
              0b0c 140d  ld   $0d,y       3289  ld(hi('sys_v6502'),Y)           #15
              0b0d e08b  jmp  y,$8b       3290  jmp(Y,'sys_v6502')              #16
              0b0e 000d  ld   $0d         3291  ld(hi('v6502_ENTER'))           #17 Activate v6502
                                          3292
                                          3293  #-----------------------------------------------------------------------
                                          3294  # Extension SYS_ResetWaveforms_v4_50
                                          3295  #-----------------------------------------------------------------------
                                          3296  #
                                          3297  # soundTable[4x+0] = sawtooth, to be modified into metallic/noise
                                          3298  # soundTable[4x+1] = pulse
                                          3299  # soundTable[4x+2] = triangle
                                          3300  # soundTable[4x+3] = sawtooth, also useful to right shift 2 bits
                                          3301
                                          3302  label('SYS_ResetWaveforms_v4_50')
SYS_ResetWaveforms_v4_50:
              0b0f 1412  ld   $12,y       3303  ld(hi('sys_ResetWaveforms'),Y)  #15 Initial setup of waveforms. [vAC+0]=i
              0b10 e0b2  jmp  y,$b2       3304  jmp(Y,'sys_ResetWaveforms')     #16
              0b11 1407  ld   $07,y       3305  ld(soundTable>>8,Y)             #17
                                          3306
                                          3307  #-----------------------------------------------------------------------
                                          3308  # Extension SYS_ShuffleNoise_v4_46
                                          3309  #-----------------------------------------------------------------------
                                          3310  #
                                          3311  # Use simple 6-bits variation of RC4 to permutate waveform 0 in soundTable
                                          3312
                                          3313  label('SYS_ShuffleNoise_v4_46')
SYS_ShuffleNoise_v4_46:
              0b12 1412  ld   $12,y       3314  ld(hi('sys_ShuffleNoise'),Y)    #15 Shuffle soundTable[4i+0]. [vAC+0]=4j, [vAC+1]=4i
              0b13 e0d3  jmp  y,$d3       3315  jmp(Y,'sys_ShuffleNoise')       #16
              0b14 1407  ld   $07,y       3316  ld(soundTable>>8,Y)             #17
                                          3317
                                          3318  #-----------------------------------------------------------------------
                                          3319  # Extension SYS_SpiExchangeBytes_v4_134
                                          3320  #-----------------------------------------------------------------------
                                          3321  #
                                          3322  # Send AND receive 1..256 bytes over SPI interface
                                          3323
                                          3324  # Variables:
                                          3325  #       sysArgs[0]      Page index start, for both send/receive (in, changed)
                                          3326  #       sysArgs[1]      Memory page for send data (in)
                                          3327  #       sysArgs[2]      Page index stop (in)
                                          3328  #       sysArgs[3]      Memory page for receive data (in)
                                          3329  #       sysArgs[4]      Scratch (changed)
                                          3330
                                          3331  label('SYS_SpiExchangeBytes_v4_134')
SYS_SpiExchangeBytes_v4_134:
              0b15 140d  ld   $0d,y       3332  ld(hi('sys_SpiExchangeBytes'),Y)#15
              0b16 e015  jmp  y,$15       3333  jmp(Y,'sys_SpiExchangeBytes')   #16
              0b17 1401  ld   $01,y       3334  ld(hi(ctrlBits),Y)              #17 Control state as saved by SYS_ExpanderControl
                                          3335
                                          3336
                                          3337  #-----------------------------------------------------------------------
                                          3338  #  SYS Implementations
                                          3339  #-----------------------------------------------------------------------
                                          3340  #
                                          3341  # SYS_SetMemory_54 implementation
                                          3342  label('sys_SetMemory#18')
sys_SetMemory#18:
              0b18 1527  ld   [$27],y     3343  ld([sysArgs+3],Y)               #18
              0b19 f83c  ble  .sysSb#21   3344  ble('.sysSb#21')                #19 Enter fast lane if >=128 or at 0 (-> 256)
              0b1a a008  suba $08         3345  suba(8)                         #20
              0b1b f43e  bge  .sysSb#23   3346  bge('.sysSb#23')                #21 Or when >=8
              0b1c c224  st   [$24]       3347  st([sysArgs+0])                 #22
              0b1d 2004  anda $04         3348  anda(4)                         #23
              0b1e f025  beq  .sysSb#26   3349  beq('.sysSb#26')                #24
              0b1f 0125  ld   [$25]       3350  ld([sysArgs+1])                 #25 Set 4 pixels
              0b20 de00  st   [y,x++]     3351  st([Y,Xpp])                     #26
              0b21 de00  st   [y,x++]     3352  st([Y,Xpp])                     #27
              0b22 de00  st   [y,x++]     3353  st([Y,Xpp])                     #28
              0b23 fc28  bra  .sysSb#31   3354  bra('.sysSb#31')                #29
              0b24 de00  st   [y,x++]     3355  st([Y,Xpp])                     #30
                                          3356  label('.sysSb#26')
.sysSb#26:    0b25 0001  ld   $01         3357  wait(31-26)                     #26
              0b26 ec26  bne  $0b26
              0b27 a001  suba $01
                                          3358  label('.sysSb#31')
.sysSb#31:    0b28 0124  ld   [$24]       3359  ld([sysArgs+0])                 #31
              0b29 2002  anda $02         3360  anda(2)                         #32
              0b2a f02f  beq  .sysSb#35   3361  beq('.sysSb#35')                #33
              0b2b 0125  ld   [$25]       3362  ld([sysArgs+1])                 #34 Set 2 pixels
              0b2c de00  st   [y,x++]     3363  st([Y,Xpp])                     #35
              0b2d fc32  bra  .sysSb#38   3364  bra('.sysSb#38')                #36
              0b2e de00  st   [y,x++]     3365  st([Y,Xpp])                     #37
                                          3366  label('.sysSb#35')
.sysSb#35:    0b2f 0200  nop              3367  wait(38-35)                     #35
              0b30 0200  nop
              0b31 0200  nop
                                          3368  label('.sysSb#38')
.sysSb#38:    0b32 0124  ld   [$24]       3369  ld([sysArgs+0])                 #38
              0b33 2001  anda $01         3370  anda(1)                         #39
              0b34 f037  beq  $0b37       3371  beq(pc()+3)                     #40
              0b35 fc38  bra  $0b38       3372  bra(pc()+3)                     #41
              0b36 0125  ld   [$25]       3373  ld([sysArgs+1])                 #42 Set 1 pixel
              0b37 0d00  ld   [y,x]       3374  ld([Y,X])                       #42(!) No change
              0b38 ce00  st   [y,x]       3375  st([Y,X])                       #43
              0b39 1403  ld   $03,y       3376  ld(hi('NEXTY'),Y)               #44 Return
              0b3a e000  jmp  y,$00       3377  jmp(Y,'NEXTY')                  #45 All done
              0b3b 00e8  ld   $e8         3378  ld(-48/2)                       #46
                                          3379  label('.sysSb#21')
.sysSb#21:    0b3c 0200  nop              3380  nop()                           #21
              0b3d c224  st   [$24]       3381  st([sysArgs+0])                 #22
                                          3382  label('.sysSb#23')
.sysSb#23:    0b3e 0125  ld   [$25]       3383  ld([sysArgs+1])                 #23 Set 8 pixels
              0b3f de00  st   [y,x++]     3384  st([Y,Xpp])                     #24
              0b40 de00  st   [y,x++]     3385  st([Y,Xpp])                     #25
              0b41 de00  st   [y,x++]     3386  st([Y,Xpp])                     #26
              0b42 de00  st   [y,x++]     3387  st([Y,Xpp])                     #27
              0b43 de00  st   [y,x++]     3388  st([Y,Xpp])                     #28
              0b44 de00  st   [y,x++]     3389  st([Y,Xpp])                     #29
              0b45 de00  st   [y,x++]     3390  st([Y,Xpp])                     #30
              0b46 de00  st   [y,x++]     3391  st([Y,Xpp])                     #31
              0b47 0126  ld   [$26]       3392  ld([sysArgs+2])                 #32 Advance write pointer
              0b48 8008  adda $08         3393  adda(8)                         #33
              0b49 c226  st   [$26]       3394  st([sysArgs+2])                 #34
              0b4a 0124  ld   [$24]       3395  ld([sysArgs+0])                 #35
              0b4b f04e  beq  $0b4e       3396  beq(pc()+3)                     #36
              0b4c fc4f  bra  $0b4f       3397  bra(pc()+3)                     #37
              0b4d 00fe  ld   $fe         3398  ld(-2)                          #38 Self-restart when more to do
              0b4e 0000  ld   $00         3399  ld(0)                           #38(!)
              0b4f 8116  adda [$16]       3400  adda([vPC])                     #39
              0b50 c216  st   [$16]       3401  st([vPC])                       #40
              0b51 1403  ld   $03,y       3402  ld(hi('REENTER'),Y)             #41
              0b52 e0cb  jmp  y,$cb       3403  jmp(Y,'REENTER')                #42
              0b53 00e9  ld   $e9         3404  ld(-46/2)                       #43
                                          3405
                                          3406  # SYS_SetMode_80 implementation
                                          3407  label('sys_SetMode')
sys_SetMode:  0b54 ec57  bne  $0b57       3408  bne(pc()+3)                     #18
              0b55 fc57  bra  $0b57       3409  bra(pc()+2)                     #19
              0b56 0003  ld   $03         3410  ld('startVideo')                #20 First enable video if disabled
              0b57 c21e  st   [$1e]       3411  st([vReturn])                   #20,21
              0b58 0119  ld   [$19]       3412  ld([vAC+1])                     #22
              0b59 f063  beq  .sysSm#25   3413  beq('.sysSm#25')                #23
              0b5a 1403  ld   $03,y       3414  ld(hi('REENTER'),Y)             #24
              0b5b 6118  xora [$18]       3415  xora([vAC])                     #25
              0b5c 60b0  xora $b0         3416  xora((1975>>8)^(1975&255))      #26 Poor man\'s 1975 detection
              0b5d ec60  bne  $0b60       3417  bne(pc()+3)                     #27
              0b5e fc61  bra  $0b61       3418  bra(pc()+3)                     #28
                                          3419  assert videoZ == 0x0100
              0b5f c21e  st   [$1e]       3420  st([vReturn])                   #29 DISABLE video/audio/serial/etc
              0b60 0200  nop              3421  nop()                           #29(!) Ignore and return
              0b61 e0cb  jmp  y,$cb       3422  jmp(Y,'REENTER')                #30
              0b62 00ef  ld   $ef         3423  ld(-34/2)                       #31
                                          3424  label('.sysSm#25')
.sysSm#25:    0b63 0118  ld   [$18]       3425  ld([vAC])                       #25 Mode 0,1,2,3
              0b64 2003  anda $03         3426  anda(3)                         #26
              0b65 8068  adda $68         3427  adda('.sysSm#30')               #27
              0b66 fe00  bra  ac          3428  bra(AC)                         #28
              0b67 fc6c  bra  .sysSm#31   3429  bra('.sysSm#31')                #29
                                          3430  label('.sysSm#30')
.sysSm#30:    0b68 000a  ld   $0a         3431  ld('pixels')                    #30 videoB lines
              0b69 000a  ld   $0a         3432  ld('pixels')                    #30
              0b6a 00f6  ld   $f6         3433  ld('nopixels')                  #30
              0b6b 00f6  ld   $f6         3434  ld('nopixels')                  #30
                                          3435  label('.sysSm#31')
.sysSm#31:    0b6c c20a  st   [$0a]       3436  st([videoModeB])                #31
              0b6d 0118  ld   [$18]       3437  ld([vAC])                       #32
              0b6e 2003  anda $03         3438  anda(3)                         #33
              0b6f 8072  adda $72         3439  adda('.sysSm#37')               #34
              0b70 fe00  bra  ac          3440  bra(AC)                         #35
              0b71 fc76  bra  .sysSm#38   3441  bra('.sysSm#38')                #36
                                          3442  label('.sysSm#37')
.sysSm#37:    0b72 000a  ld   $0a         3443  ld('pixels')                    #37 videoC lines
              0b73 000a  ld   $0a         3444  ld('pixels')                    #37
              0b74 000a  ld   $0a         3445  ld('pixels')                    #37
              0b75 00f6  ld   $f6         3446  ld('nopixels')                  #37
                                          3447  label('.sysSm#38')
.sysSm#38:    0b76 c20b  st   [$0b]       3448  st([videoModeC])                #38
              0b77 0118  ld   [$18]       3449  ld([vAC])                       #39
              0b78 2003  anda $03         3450  anda(3)                         #40
              0b79 807c  adda $7c         3451  adda('.sysSm#44')               #41
              0b7a fe00  bra  ac          3452  bra(AC)                         #42
              0b7b fc80  bra  .sysSm#45   3453  bra('.sysSm#45')                #43
                                          3454  label('.sysSm#44')
.sysSm#44:    0b7c 000a  ld   $0a         3455  ld('pixels')                    #44 videoD lines
              0b7d 00f6  ld   $f6         3456  ld('nopixels')                  #44
              0b7e 00f6  ld   $f6         3457  ld('nopixels')                  #44
              0b7f 00f6  ld   $f6         3458  ld('nopixels')                  #44
                                          3459  label('.sysSm#45')
.sysSm#45:    0b80 c20c  st   [$0c]       3460  st([videoModeD])                #45
              0b81 e0cb  jmp  y,$cb       3461  jmp(Y,'REENTER')                #46
              0b82 00e7  ld   $e7         3462  ld(-50/2)                       #47
                                          3463
                                          3464  # SYS_SendSerial1_v3_80 implementation
                                          3465  label('sys_SendSerial1')
sys_SendSerial1:
              0b83 f08a  beq  .sysSs#20   3466  beq('.sysSs#20')                #18
              0b84 1124  ld   [$24],x     3467  ld([sysArgs+0],X)               #19
              0b85 0116  ld   [$16]       3468  ld([vPC])                       #20 Wait for vBlank
              0b86 a002  suba $02         3469  suba(2)                         #21
              0b87 1403  ld   $03,y       3470  ld(hi('REENTER_28'),Y)          #22
              0b88 e0ca  jmp  y,$ca       3471  jmp(Y,'REENTER_28')             #23
              0b89 c216  st   [$16]       3472  st([vPC])                       #24
                                          3473  label('.sysSs#20')
.sysSs#20:    0b8a 1525  ld   [$25],y     3474  ld([sysArgs+1],Y)               #20 Synchronized with vBlank
              0b8b 0d00  ld   [y,x]       3475  ld([Y,X])                       #21 Copy next bit
              0b8c 2126  anda [$26]       3476  anda([sysArgs+2])               #22
              0b8d ec90  bne  $0b90       3477  bne(pc()+3)                     #23
              0b8e fc91  bra  $0b91       3478  bra(pc()+3)                     #24
              0b8f 000e  ld   $0e         3479  ld(7*2)                         #25
              0b90 0012  ld   $12         3480  ld(9*2)                         #25
              0b91 c20d  st   [$0d]       3481  st([videoPulse])                #26
              0b92 0126  ld   [$26]       3482  ld([sysArgs+2])                 #27 Rotate input bit
              0b93 8200  adda ac          3483  adda(AC)                        #28
              0b94 ec97  bne  $0b97       3484  bne(pc()+3)                     #29
              0b95 fc97  bra  $0b97       3485  bra(pc()+2)                     #30
              0b96 0001  ld   $01         3486  ld(1)                           #31
              0b97 c226  st   [$26]       3487  st([sysArgs+2])                 #31,32 (must be idempotent)
              0b98 2001  anda $01         3488  anda(1)                         #33 Optionally increment pointer
              0b99 8124  adda [$24]       3489  adda([sysArgs+0])               #34
              0b9a d224  st   [$24],x     3490  st([sysArgs+0],X)               #35
              0b9b 0127  ld   [$27]       3491  ld([sysArgs+3])                 #36 Frame counter
              0b9c a001  suba $01         3492  suba(1)                         #37
              0b9d f0ac  beq  .sysSs#40   3493  beq('.sysSs#40')                #38
              0b9e 1403  ld   $03,y       3494  ld(hi('REENTER'),Y)             #39
              0b9f c227  st   [$27]       3495  st([sysArgs+3])                 #40
              0ba0 010f  ld   [$0f]       3496  ld([serialRaw])                 #41 Test for anything being sent back
              0ba1 60ff  xora $ff         3497  xora(255)                       #42
              0ba2 f0a7  beq  .sysSs#45   3498  beq('.sysSs#45')                #43
              0ba3 c218  st   [$18]       3499  st([vAC])                       #44 Abort after key press with non-zero error
              0ba4 c219  st   [$19]       3500  st([vAC+1])                     #45
              0ba5 e0cb  jmp  y,$cb       3501  jmp(Y,'REENTER')                #46
              0ba6 00e7  ld   $e7         3502  ld(-50/2)                       #47
                                          3503  label('.sysSs#45')
.sysSs#45:    0ba7 0116  ld   [$16]       3504  ld([vPC])                       #45 Continue sending bits
              0ba8 a002  suba $02         3505  suba(2)                         #46
              0ba9 c216  st   [$16]       3506  st([vPC])                       #47
              0baa e0cb  jmp  y,$cb       3507  jmp(Y,'REENTER')                #48
              0bab 00e6  ld   $e6         3508  ld(-52/2)                       #49
                                          3509  label('.sysSs#40')
.sysSs#40:    0bac c218  st   [$18]       3510  st([vAC])                       #40 Stop sending bits, no error
              0bad c219  st   [$19]       3511  st([vAC+1])                     #41
              0bae e0cb  jmp  y,$cb       3512  jmp(Y,'REENTER')                #42
              0baf 00e9  ld   $e9         3513  ld(-46/2)                       #43
                                          3514
                                          3515
                                          3516  #-----------------------------------------------------------------------
                                          3517  #  vCPU Implementations
                                          3518  #-----------------------------------------------------------------------
                                          3519  #
                                          3520  # LDWI implementation
                                          3521  label('ldwi#13')
ldwi#13:      0bb0 c218  st   [$18]       3522  st([vAC])                       #13 Operand
              0bb1 de00  st   [y,x++]     3523  st([Y,Xpp])                     #14 Just X++
              0bb2 0d00  ld   [y,x]       3524  ld([Y,X])                       #15 Fetch second operand
              0bb3 c219  st   [$19]       3525  st([vAC+1])                     #16
              0bb4 0116  ld   [$16]       3526  ld([vPC])                       #17 Advance vPC one more
              0bb5 8001  adda $01         3527  adda(1)                         #18
              0bb6 c216  st   [$16]       3528  st([vPC])                       #19
              0bb7 1403  ld   $03,y       3529  ld(hi('NEXTY'),Y)               #20
              0bb8 e000  jmp  y,$00       3530  jmp(Y,'NEXTY')                  #21
              0bb9 00f4  ld   $f4         3531  ld(-24/2)                       #22
                                          3532
                                          3533  # POP implementation
                                          3534  label('pop#13')
pop#13:       0bba 1504  ld   [$04],y     3535  ld([vSPH],Y)                    #13 vSP.hi
              0bbb 111c  ld   [$1c],x     3536  ld([vSP],X)                     #14
              0bbc 0d00  ld   [y,x]       3537  ld([Y,X])                       #15
              0bbd de00  st   [y,x++]     3538  st([Y,Xpp])                     #16
              0bbe c21a  st   [$1a]       3539  st([vLR])                       #17
              0bbf 0d00  ld   [y,x]       3540  ld([Y,X])                       #18
              0bc0 c21b  st   [$1b]       3541  st([vLR+1])                     #19
              0bc1 011c  ld   [$1c]       3542  ld([vSP])                       #20
              0bc2 8002  adda $02         3543  adda(2)                         #21
              0bc3 c21c  st   [$1c]       3544  st([vSP])                       #22
              0bc4 0116  ld   [$16]       3545  ld([vPC])                       #23
              0bc5 a001  suba $01         3546  suba(1)                         #24
              0bc6 c216  st   [$16]       3547  st([vPC])                       #25
              0bc7 1403  ld   $03,y       3548  ld(hi('NEXTY'),Y)               #26
              0bc8 e000  jmp  y,$00       3549  jmp(Y,'NEXTY')                  #27
              0bc9 00f1  ld   $f1         3550  ld(-30/2)                       #28
                                          3551
                                          3552  # PUSH implementation
                                          3553  label('push#13')
push#13:      0bca 1504  ld   [$04],y     3554  ld([vSPH],Y)                    #13 vSP.hi
              0bcb 011c  ld   [$1c]       3555  ld([vSP])                       #14
              0bcc a002  suba $02         3556  suba(2)                         #15
              0bcd d21c  st   [$1c],x     3557  st([vSP],X)                     #16
              0bce 011a  ld   [$1a]       3558  ld([vLR])                       #17
              0bcf de00  st   [y,x++]     3559  st([Y,Xpp])                     #18
              0bd0 011b  ld   [$1b]       3560  ld([vLR+1])                     #19
              0bd1 ce00  st   [y,x]       3561  st([Y,X])                       #20
              0bd2 0116  ld   [$16]       3562  ld([vPC])                       #21
              0bd3 a001  suba $01         3563  suba(1)                         #22
              0bd4 c216  st   [$16]       3564  st([vPC])                       #23
              0bd5 1403  ld   $03,y       3565  ld(hi('NEXTY'),Y)               #24
              0bd6 e000  jmp  y,$00       3566  jmp(Y,'NEXTY')                  #25
              0bd7 00f2  ld   $f2         3567  ld(-28/2)                       #26
                                          3568
                                          3569
                                          3570  #-----------------------------------------------------------------------
                                          3571  #
                                          3572  #  $0c00 ROM page 12: More SYS functions (sprites)
                                          3573  #
                                          3574  #       Page 1: vertical blank interval
                                          3575  #       Page 2: visible scanlines
                                          3576  #
                                          3577  #-----------------------------------------------------------------------
                                          3578
              0bd8 0200  nop              3579  align(0x100, size=0x100)
              0bd9 0200  nop
              0bda 0200  nop
              * 40 times
                                          3580
                                          3581  #-----------------------------------------------------------------------
                                          3582  # Extension SYS_Sprite6_v3_64
                                          3583  # Extension SYS_Sprite6x_v3_64
                                          3584  # Extension SYS_Sprite6y_v3_64
                                          3585  # Extension SYS_Sprite6xy_v3_64
                                          3586  #-----------------------------------------------------------------------
                                          3587  #
                                          3588  # Blit sprite in screen memory
                                          3589  #
                                          3590  # Variables
                                          3591  #       vAC             Destination address in screen
                                          3592  #       sysArgs[0:1]    Source address of 6xY pixels (colors 0..63) terminated
                                          3593  #                       by negative byte value N (typically N = -Y)
                                          3594  #       sysArgs[2:7]    Scratch (user as copy buffer)
                                          3595  #
                                          3596  # This SYS function draws a sprite of 6 pixels wide and Y pixels high.
                                          3597  # The pixel data is read sequentually from RAM, in horizontal chunks
                                          3598  # of 6 pixels at a time, and then written to the screen through the
                                          3599  # destination pointer (each chunk underneath the previous), thus
                                          3600  # drawing a 6xY stripe. Pixel values should be non-negative. The first
                                          3601  # negative byte N after a chunk signals the end of the sprite data.
                                          3602  # So the sprite's height Y is determined by the source data and is
                                          3603  # therefore flexible. This negative byte value, typically N == -Y,
                                          3604  # is then used to adjust the destination pointer's high byte, to make
                                          3605  # it easier to draw sprites wider than 6 pixels: just repeat the SYS
                                          3606  # call for as many 6-pixel wide stripes you need. All arguments are
                                          3607  # already left in place to facilitate this. After one call, the source
                                          3608  # pointer will point past that source data, effectively:
                                          3609  #       src += Y * 6 + 1
                                          3610  # The destination pointer will have been adjusted as:
                                          3611  #       dst += (Y + N) * 256 + 6
                                          3612  # (With arithmetic wrapping around on the same memory page)
                                          3613  #
                                          3614  # Y is only limited by source memory, not by CPU cycles. The
                                          3615  # implementation is such that the SYS function self-repeats, each
                                          3616  # time drawing the next 6-pixel chunk. It can typically draw 12
                                          3617  # pixels per scanline this way.
                                          3618
                                          3619  label('SYS_Sprite6_v3_64')
                                          3620
SYS_Sprite6_v3_64:
              0c00 1124  ld   [$24],x     3621  ld([sysArgs+0],X)               #15 Pixel data source address
              0c01 1525  ld   [$25],y     3622  ld([sysArgs+1],Y)               #16
              0c02 0d00  ld   [y,x]       3623  ld([Y,X])                       #17 Next pixel or stop
              0c03 f411  bge  .sysDpx0    3624  bpl('.sysDpx0')                 #18
              0c04 de00  st   [y,x++]     3625  st([Y,Xpp])                     #19 Just X++
                                          3626
              0c05 8119  adda [$19]       3627  adda([vAC+1])                   #20 Adjust dst for convenience
              0c06 c219  st   [$19]       3628  st([vAC+1])                     #21
              0c07 0118  ld   [$18]       3629  ld([vAC])                       #22
              0c08 8006  adda $06         3630  adda(6)                         #23
              0c09 c218  st   [$18]       3631  st([vAC])                       #24
              0c0a 0124  ld   [$24]       3632  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c0b 8001  adda $01         3633  adda(1)                         #26
              0c0c c224  st   [$24]       3634  st([sysArgs+0])                 #27
              0c0d 0200  nop              3635  nop()                           #28
              0c0e 1403  ld   $03,y       3636  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c0f e0cb  jmp  y,$cb       3637  jmp(Y,'REENTER')                #30
              0c10 00ef  ld   $ef         3638  ld(-34/2)                       #31
                                          3639
                                          3640  label('.sysDpx0')
.sysDpx0:     0c11 c226  st   [$26]       3641  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c12 0d00  ld   [y,x]       3642  ld([Y,X])                       #21
              0c13 de00  st   [y,x++]     3643  st([Y,Xpp])                     #22 Just X++
              0c14 c227  st   [$27]       3644  st([sysArgs+3])                 #23
              0c15 0d00  ld   [y,x]       3645  ld([Y,X])                       #24
              0c16 de00  st   [y,x++]     3646  st([Y,Xpp])                     #25 Just X++
              0c17 c228  st   [$28]       3647  st([sysArgs+4])                 #26
              0c18 0d00  ld   [y,x]       3648  ld([Y,X])                       #27
              0c19 de00  st   [y,x++]     3649  st([Y,Xpp])                     #28 Just X++
              0c1a c229  st   [$29]       3650  st([sysArgs+5])                 #29
              0c1b 0d00  ld   [y,x]       3651  ld([Y,X])                       #30
              0c1c de00  st   [y,x++]     3652  st([Y,Xpp])                     #31 Just X++
              0c1d c22a  st   [$2a]       3653  st([sysArgs+6])                 #32
              0c1e 0d00  ld   [y,x]       3654  ld([Y,X])                       #33
              0c1f de00  st   [y,x++]     3655  st([Y,Xpp])                     #34 Just X++
              0c20 c22b  st   [$2b]       3656  st([sysArgs+7])                 #35
                                          3657
              0c21 1118  ld   [$18],x     3658  ld([vAC],X)                     #36 Screen memory destination address
              0c22 1519  ld   [$19],y     3659  ld([vAC+1],Y)                   #37
              0c23 0126  ld   [$26]       3660  ld([sysArgs+2])                 #38 Write 6 pixels
              0c24 de00  st   [y,x++]     3661  st([Y,Xpp])                     #39
              0c25 0127  ld   [$27]       3662  ld([sysArgs+3])                 #40
              0c26 de00  st   [y,x++]     3663  st([Y,Xpp])                     #41
              0c27 0128  ld   [$28]       3664  ld([sysArgs+4])                 #42
              0c28 de00  st   [y,x++]     3665  st([Y,Xpp])                     #43
              0c29 0129  ld   [$29]       3666  ld([sysArgs+5])                 #44
              0c2a de00  st   [y,x++]     3667  st([Y,Xpp])                     #45
              0c2b 012a  ld   [$2a]       3668  ld([sysArgs+6])                 #46
              0c2c de00  st   [y,x++]     3669  st([Y,Xpp])                     #47
              0c2d 012b  ld   [$2b]       3670  ld([sysArgs+7])                 #48
              0c2e de00  st   [y,x++]     3671  st([Y,Xpp])                     #49
                                          3672
              0c2f 0124  ld   [$24]       3673  ld([sysArgs+0])                 #50 src += 6
              0c30 8006  adda $06         3674  adda(6)                         #51
              0c31 c224  st   [$24]       3675  st([sysArgs+0])                 #52
              0c32 0119  ld   [$19]       3676  ld([vAC+1])                     #53 dst += 256
              0c33 8001  adda $01         3677  adda(1)                         #54
              0c34 c219  st   [$19]       3678  st([vAC+1])                     #55
                                          3679
              0c35 0116  ld   [$16]       3680  ld([vPC])                       #56 Self-repeating SYS call
              0c36 a002  suba $02         3681  suba(2)                         #57
              0c37 c216  st   [$16]       3682  st([vPC])                       #58
              0c38 1403  ld   $03,y       3683  ld(hi('REENTER'),Y)             #59
              0c39 e0cb  jmp  y,$cb       3684  jmp(Y,'REENTER')                #60
              0c3a 00e0  ld   $e0         3685  ld(-64/2)                       #61
                                          3686
              0c3b 0200  nop              3687  align(64)
              0c3c 0200  nop
              0c3d 0200  nop
              * 5 times
                                          3688  label('SYS_Sprite6x_v3_64')
                                          3689
SYS_Sprite6x_v3_64:
              0c40 1124  ld   [$24],x     3690  ld([sysArgs+0],X)               #15 Pixel data source address
              0c41 1525  ld   [$25],y     3691  ld([sysArgs+1],Y)               #16
              0c42 0d00  ld   [y,x]       3692  ld([Y,X])                       #17 Next pixel or stop
              0c43 f451  bge  .sysDpx1    3693  bpl('.sysDpx1')                 #18
              0c44 de00  st   [y,x++]     3694  st([Y,Xpp])                     #19 Just X++
                                          3695
              0c45 8119  adda [$19]       3696  adda([vAC+1])                   #20 Adjust dst for convenience
              0c46 c219  st   [$19]       3697  st([vAC+1])                     #21
              0c47 0118  ld   [$18]       3698  ld([vAC])                       #22
              0c48 a006  suba $06         3699  suba(6)                         #23
              0c49 c218  st   [$18]       3700  st([vAC])                       #24
              0c4a 0124  ld   [$24]       3701  ld([sysArgs+0])                 #25 Adjust src for convenience
              0c4b 8001  adda $01         3702  adda(1)                         #26
              0c4c c224  st   [$24]       3703  st([sysArgs+0])                 #27
              0c4d 0200  nop              3704  nop()                           #28
              0c4e 1403  ld   $03,y       3705  ld(hi('REENTER'),Y)             #29 Normal exit (no self-repeat)
              0c4f e0cb  jmp  y,$cb       3706  jmp(Y,'REENTER')                #30
              0c50 00ef  ld   $ef         3707  ld(-34/2)                       #31
                                          3708
                                          3709  label('.sysDpx1')
.sysDpx1:     0c51 c22b  st   [$2b]       3710  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0c52 0d00  ld   [y,x]       3711  ld([Y,X])                       #21
              0c53 de00  st   [y,x++]     3712  st([Y,Xpp])                     #22 Just X++
              0c54 c22a  st   [$2a]       3713  st([sysArgs+6])                 #23
              0c55 0d00  ld   [y,x]       3714  ld([Y,X])                       #24
              0c56 de00  st   [y,x++]     3715  st([Y,Xpp])                     #25 Just X++
              0c57 c229  st   [$29]       3716  st([sysArgs+5])                 #26
              0c58 0d00  ld   [y,x]       3717  ld([Y,X])                       #27
              0c59 de00  st   [y,x++]     3718  st([Y,Xpp])                     #28 Just X++
              0c5a c228  st   [$28]       3719  st([sysArgs+4])                 #29
              0c5b 0d00  ld   [y,x]       3720  ld([Y,X])                       #30
              0c5c de00  st   [y,x++]     3721  st([Y,Xpp])                     #31 Just X++
              0c5d c227  st   [$27]       3722  st([sysArgs+3])                 #32
              0c5e 0d00  ld   [y,x]       3723  ld([Y,X])                       #33
              0c5f de00  st   [y,x++]     3724  st([Y,Xpp])                     #34 Just X++
                                          3725
              0c60 1118  ld   [$18],x     3726  ld([vAC],X)                     #35 Screen memory destination address
              0c61 1519  ld   [$19],y     3727  ld([vAC+1],Y)                   #36
              0c62 de00  st   [y,x++]     3728  st([Y,Xpp])                     #37 Write 6 pixels
              0c63 0127  ld   [$27]       3729  ld([sysArgs+3])                 #38
              0c64 de00  st   [y,x++]     3730  st([Y,Xpp])                     #39
              0c65 0128  ld   [$28]       3731  ld([sysArgs+4])                 #40
              0c66 de00  st   [y,x++]     3732  st([Y,Xpp])                     #41
              0c67 0129  ld   [$29]       3733  ld([sysArgs+5])                 #42
              0c68 de00  st   [y,x++]     3734  st([Y,Xpp])                     #43
              0c69 012a  ld   [$2a]       3735  ld([sysArgs+6])                 #44
              0c6a de00  st   [y,x++]     3736  st([Y,Xpp])                     #45
              0c6b 012b  ld   [$2b]       3737  ld([sysArgs+7])                 #46
              0c6c de00  st   [y,x++]     3738  st([Y,Xpp])                     #47
                                          3739
              0c6d 0124  ld   [$24]       3740  ld([sysArgs+0])                 #48 src += 6
              0c6e 8006  adda $06         3741  adda(6)                         #49
              0c6f c224  st   [$24]       3742  st([sysArgs+0])                 #50
              0c70 0119  ld   [$19]       3743  ld([vAC+1])                     #51 dst += 256
              0c71 8001  adda $01         3744  adda(1)                         #52
              0c72 c219  st   [$19]       3745  st([vAC+1])                     #53
                                          3746
              0c73 0116  ld   [$16]       3747  ld([vPC])                       #54 Self-repeating SYS call
              0c74 a002  suba $02         3748  suba(2)                         #55
              0c75 c216  st   [$16]       3749  st([vPC])                       #56
              0c76 1403  ld   $03,y       3750  ld(hi('REENTER'),Y)             #57
              0c77 e0cb  jmp  y,$cb       3751  jmp(Y,'REENTER')                #58
              0c78 00e1  ld   $e1         3752  ld(-62/2)                       #59
                                          3753
              0c79 0200  nop              3754  align(64)
              0c7a 0200  nop
              0c7b 0200  nop
              * 7 times
                                          3755  label('SYS_Sprite6y_v3_64')
                                          3756
SYS_Sprite6y_v3_64:
              0c80 1124  ld   [$24],x     3757  ld([sysArgs+0],X)               #15 Pixel data source address
              0c81 1525  ld   [$25],y     3758  ld([sysArgs+1],Y)               #16
              0c82 0d00  ld   [y,x]       3759  ld([Y,X])                       #17 Next pixel or stop
              0c83 f493  bge  .sysDpx2    3760  bpl('.sysDpx2')                 #18
              0c84 de00  st   [y,x++]     3761  st([Y,Xpp])                     #19 Just X++
                                          3762
              0c85 60ff  xora $ff         3763  xora(255)                       #20 Adjust dst for convenience
              0c86 8001  adda $01         3764  adda(1)                         #21
              0c87 8119  adda [$19]       3765  adda([vAC+1])                   #22
              0c88 c219  st   [$19]       3766  st([vAC+1])                     #23
              0c89 0118  ld   [$18]       3767  ld([vAC])                       #24
              0c8a 8006  adda $06         3768  adda(6)                         #25
              0c8b c218  st   [$18]       3769  st([vAC])                       #26
              0c8c 0124  ld   [$24]       3770  ld([sysArgs+0])                 #27 Adjust src for convenience
              0c8d 8001  adda $01         3771  adda(1)                         #28
              0c8e c224  st   [$24]       3772  st([sysArgs+0])                 #29
              0c8f 0200  nop              3773  nop()                           #30
              0c90 1403  ld   $03,y       3774  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0c91 e0cb  jmp  y,$cb       3775  jmp(Y,'REENTER')                #32
              0c92 00ee  ld   $ee         3776  ld(-36/2)                       #33
                                          3777
                                          3778  label('.sysDpx2')
.sysDpx2:     0c93 c226  st   [$26]       3779  st([sysArgs+2])                 #20 Gobble 6 pixels into buffer
              0c94 0d00  ld   [y,x]       3780  ld([Y,X])                       #21
              0c95 de00  st   [y,x++]     3781  st([Y,Xpp])                     #22 Just X++
              0c96 c227  st   [$27]       3782  st([sysArgs+3])                 #23
              0c97 0d00  ld   [y,x]       3783  ld([Y,X])                       #24
              0c98 de00  st   [y,x++]     3784  st([Y,Xpp])                     #25 Just X++
              0c99 c228  st   [$28]       3785  st([sysArgs+4])                 #26
              0c9a 0d00  ld   [y,x]       3786  ld([Y,X])                       #27
              0c9b de00  st   [y,x++]     3787  st([Y,Xpp])                     #28 Just X++
              0c9c c229  st   [$29]       3788  st([sysArgs+5])                 #29
              0c9d 0d00  ld   [y,x]       3789  ld([Y,X])                       #30
              0c9e de00  st   [y,x++]     3790  st([Y,Xpp])                     #31 Just X++
              0c9f c22a  st   [$2a]       3791  st([sysArgs+6])                 #32
              0ca0 0d00  ld   [y,x]       3792  ld([Y,X])                       #33
              0ca1 de00  st   [y,x++]     3793  st([Y,Xpp])                     #34 Just X++
              0ca2 c22b  st   [$2b]       3794  st([sysArgs+7])                 #35
                                          3795
              0ca3 1118  ld   [$18],x     3796  ld([vAC],X)                     #36 Screen memory destination address
              0ca4 1519  ld   [$19],y     3797  ld([vAC+1],Y)                   #37
              0ca5 0126  ld   [$26]       3798  ld([sysArgs+2])                 #38 Write 6 pixels
              0ca6 de00  st   [y,x++]     3799  st([Y,Xpp])                     #39
              0ca7 0127  ld   [$27]       3800  ld([sysArgs+3])                 #40
              0ca8 de00  st   [y,x++]     3801  st([Y,Xpp])                     #41
              0ca9 0128  ld   [$28]       3802  ld([sysArgs+4])                 #42
              0caa de00  st   [y,x++]     3803  st([Y,Xpp])                     #43
              0cab 0129  ld   [$29]       3804  ld([sysArgs+5])                 #44
              0cac de00  st   [y,x++]     3805  st([Y,Xpp])                     #45
              0cad 012a  ld   [$2a]       3806  ld([sysArgs+6])                 #46
              0cae de00  st   [y,x++]     3807  st([Y,Xpp])                     #47
              0caf 012b  ld   [$2b]       3808  ld([sysArgs+7])                 #48
              0cb0 de00  st   [y,x++]     3809  st([Y,Xpp])                     #49
                                          3810
              0cb1 0124  ld   [$24]       3811  ld([sysArgs+0])                 #50 src += 6
              0cb2 8006  adda $06         3812  adda(6)                         #51
              0cb3 c224  st   [$24]       3813  st([sysArgs+0])                 #52
              0cb4 0119  ld   [$19]       3814  ld([vAC+1])                     #53 dst -= 256
              0cb5 a001  suba $01         3815  suba(1)                         #54
              0cb6 c219  st   [$19]       3816  st([vAC+1])                     #55
                                          3817
              0cb7 0116  ld   [$16]       3818  ld([vPC])                       #56 Self-repeating SYS call
              0cb8 a002  suba $02         3819  suba(2)                         #57
              0cb9 c216  st   [$16]       3820  st([vPC])                       #58
              0cba 1403  ld   $03,y       3821  ld(hi('REENTER'),Y)             #59
              0cbb e0cb  jmp  y,$cb       3822  jmp(Y,'REENTER')                #60
              0cbc 00e0  ld   $e0         3823  ld(-64/2)                       #61
                                          3824
              0cbd 0200  nop              3825  align(64)
              0cbe 0200  nop
              0cbf 0200  nop
                                          3826  label('SYS_Sprite6xy_v3_64')
                                          3827
SYS_Sprite6xy_v3_64:
              0cc0 1124  ld   [$24],x     3828  ld([sysArgs+0],X)               #15 Pixel data source address
              0cc1 1525  ld   [$25],y     3829  ld([sysArgs+1],Y)               #16
              0cc2 0d00  ld   [y,x]       3830  ld([Y,X])                       #17 Next pixel or stop
              0cc3 f4d3  bge  .sysDpx3    3831  bpl('.sysDpx3')                 #18
              0cc4 de00  st   [y,x++]     3832  st([Y,Xpp])                     #19 Just X++
                                          3833
              0cc5 60ff  xora $ff         3834  xora(255)                       #20 Adjust dst for convenience
              0cc6 8001  adda $01         3835  adda(1)                         #21
              0cc7 8119  adda [$19]       3836  adda([vAC+1])                   #22
              0cc8 c219  st   [$19]       3837  st([vAC+1])                     #23
              0cc9 0118  ld   [$18]       3838  ld([vAC])                       #24
              0cca a006  suba $06         3839  suba(6)                         #25
              0ccb c218  st   [$18]       3840  st([vAC])                       #26
              0ccc 0124  ld   [$24]       3841  ld([sysArgs+0])                 #27 Adjust src for convenience
              0ccd 8001  adda $01         3842  adda(1)                         #28
              0cce c224  st   [$24]       3843  st([sysArgs+0])                 #29
              0ccf 0200  nop              3844  nop()                           #30
              0cd0 1403  ld   $03,y       3845  ld(hi('REENTER'),Y)             #31 Normal exit (no self-repeat)
              0cd1 e0cb  jmp  y,$cb       3846  jmp(Y,'REENTER')                #32
              0cd2 00ee  ld   $ee         3847  ld(-36/2)                       #33
                                          3848
                                          3849  label('.sysDpx3')
.sysDpx3:     0cd3 c22b  st   [$2b]       3850  st([sysArgs+7])                 #20 Gobble 6 pixels into buffer (backwards)
              0cd4 0d00  ld   [y,x]       3851  ld([Y,X])                       #21
              0cd5 de00  st   [y,x++]     3852  st([Y,Xpp])                     #22 Just X++
              0cd6 c22a  st   [$2a]       3853  st([sysArgs+6])                 #23
              0cd7 0d00  ld   [y,x]       3854  ld([Y,X])                       #24
              0cd8 de00  st   [y,x++]     3855  st([Y,Xpp])                     #25 Just X++
              0cd9 c229  st   [$29]       3856  st([sysArgs+5])                 #26
              0cda 0d00  ld   [y,x]       3857  ld([Y,X])                       #27
              0cdb de00  st   [y,x++]     3858  st([Y,Xpp])                     #28 Just X++
              0cdc c228  st   [$28]       3859  st([sysArgs+4])                 #29
              0cdd 0d00  ld   [y,x]       3860  ld([Y,X])                       #30
              0cde de00  st   [y,x++]     3861  st([Y,Xpp])                     #31 Just X++
              0cdf c227  st   [$27]       3862  st([sysArgs+3])                 #32
              0ce0 0d00  ld   [y,x]       3863  ld([Y,X])                       #33
              0ce1 de00  st   [y,x++]     3864  st([Y,Xpp])                     #34 Just X++
                                          3865
              0ce2 1118  ld   [$18],x     3866  ld([vAC],X)                     #35 Screen memory destination address
              0ce3 1519  ld   [$19],y     3867  ld([vAC+1],Y)                   #36
              0ce4 de00  st   [y,x++]     3868  st([Y,Xpp])                     #37 Write 6 pixels
              0ce5 0127  ld   [$27]       3869  ld([sysArgs+3])                 #38
              0ce6 de00  st   [y,x++]     3870  st([Y,Xpp])                     #39
              0ce7 0128  ld   [$28]       3871  ld([sysArgs+4])                 #40
              0ce8 de00  st   [y,x++]     3872  st([Y,Xpp])                     #41
              0ce9 0129  ld   [$29]       3873  ld([sysArgs+5])                 #42
              0cea de00  st   [y,x++]     3874  st([Y,Xpp])                     #43
              0ceb 012a  ld   [$2a]       3875  ld([sysArgs+6])                 #44
              0cec de00  st   [y,x++]     3876  st([Y,Xpp])                     #45
              0ced 012b  ld   [$2b]       3877  ld([sysArgs+7])                 #46
              0cee de00  st   [y,x++]     3878  st([Y,Xpp])                     #47
                                          3879
              0cef 0124  ld   [$24]       3880  ld([sysArgs+0])                 #48 src += 6
              0cf0 8006  adda $06         3881  adda(6)                         #49
              0cf1 c224  st   [$24]       3882  st([sysArgs+0])                 #50
              0cf2 0119  ld   [$19]       3883  ld([vAC+1])                     #51 dst -= 256
              0cf3 a001  suba $01         3884  suba(1)                         #52
              0cf4 c219  st   [$19]       3885  st([vAC+1])                     #53
                                          3886
              0cf5 0116  ld   [$16]       3887  ld([vPC])                       #54 Self-repeating SYS call
              0cf6 a002  suba $02         3888  suba(2)                         #55
              0cf7 c216  st   [$16]       3889  st([vPC])                       #56
              0cf8 1403  ld   $03,y       3890  ld(hi('REENTER'),Y)             #57
              0cf9 e0cb  jmp  y,$cb       3891  jmp(Y,'REENTER')                #58
              0cfa 00e1  ld   $e1         3892  ld(-62/2)                       #59
                                          3893
                                          3894  #-----------------------------------------------------------------------
                                          3895
              0cfb 0200  nop              3896  align(0x100)
              0cfc 0200  nop
              0cfd 0200  nop
              * 5 times
                                          3897
                                          3898  label('sys_ExpanderControl')
                                          3899
sys_ExpanderControl:
              0d00 1401  ld   $01,y       3900  ld(hi(ctrlBits),Y)                  #18
              0d01 2118  anda [$18]       3901  anda([vAC])                         #19 check for special ctrl code space
              0d02 f009  beq  sysEx#22    3902  beq('sysEx#22')                     #20
              0d03 0118  ld   [$18]       3903  ld([vAC])                           #21 load low byte of ctrl code in delay slot
              0d04 20fc  anda $fc         3904  anda(0xfc)                          #22 sanitize normal ctrl code
              0d05 caf8  st   [y,$f8]     3905  st([Y,ctrlBits])                    #23 store in ctrlBits
              0d06 c21d  st   [$1d]       3906  st([vTmp])                          #24 store in vTmp
              0d07 fc0e  bra  sysEx#27    3907  bra('sysEx#27')                     #25 jump to issuing normal ctrl code
              0d08 1519  ld   [$19],y     3908  ld([vAC+1],Y)                       #26 load high byte of ctrl code in delay slot
                                          3909  label('sysEx#22')
sysEx#22:     0d09 30fc  anda $fc,x       3910  anda(0xfc,X)                        #22 * special ctrl code
              0d0a 09f8  ld   [y,$f8]     3911  ld([Y,ctrlBits])                    #23 get previous normal code from ctrlBits
              0d0b c21d  st   [$1d]       3912  st([vTmp])                          #24 save it in vTmp
              0d0c 1519  ld   [$19],y     3913  ld([vAC+1],Y)                       #25 load high byte of ctrl code
              0d0d cd00  ctrl y,x         3914  ctrl(Y,X)                           #26 issue special ctrl code
                                          3915  label('sysEx#27')
sysEx#27:     0d0e 011d  ld   [$1d]       3916  ld([vTmp])                          #27 load saved normal ctrl code
              0d0f 30fc  anda $fc,x       3917  anda(0xfc,X)                        #28 sanitize ctrlBits
              0d10 cd00  ctrl y,x         3918  ctrl(Y,X)                           #29 issue normal ctrl code
              0d11 011d  ld   [$1d]       3919  ld([vTmp])                          #30 always load something after ctrl
              0d12 1403  ld   $03,y       3920  ld(hi('REENTER'),Y)                 #31
              0d13 e0cb  jmp  y,$cb       3921  jmp(Y,'REENTER')                    #32
              0d14 00ee  ld   $ee         3922  ld(-36/2)                           #33
                                          3923
                                          3924  #-----------------------------------------------------------------------
                                          3925
                                          3926  label('sys_SpiExchangeBytes')
                                          3927
sys_SpiExchangeBytes:
              0d15 09f8  ld   [y,$f8]     3928  ld([Y,ctrlBits])                #18
              0d16 c228  st   [$28]       3929  st([sysArgs+4])                 #19
                                          3930
              0d17 1124  ld   [$24],x     3931  ld([sysArgs+0],X)               #20 Fetch byte to send
              0d18 1525  ld   [$25],y     3932  ld([sysArgs+1],Y)               #21
              0d19 0d00  ld   [y,x]       3933  ld([Y,X])                       #22
                                          3934
                                          3935  for i in range(8):
                                          3936    st([vTmp],Y);C('Bit %d'%(7-i))#23+i*12
              0d1a d61d  st   [$1d],y     ;Bit 7
              0d1b 1128  ld   [$28],x     3937    ld([sysArgs+4],X)             #24+i*12
              0d1c dd00  ctrl y,x++       3938    ctrl(Y,Xpp)                   #25+i*12 Set MOSI
              0d1d dd00  ctrl y,x++       3939    ctrl(Y,Xpp)                   #26+i*12 Raise SCLK, disable RAM!
              0d1e 0100  ld   [$00]       3940    ld([0])                       #27+i*12 Get MISO
              0d1f 200f  anda $0f         3941    anda(0b00001111)              #28+i*12 This is why R1 as pull-DOWN is simpler
              0d20 f023  beq  $0d23       3942    beq(pc()+3)                   #29+i*12
              0d21 fc23  bra  $0d23       3943    bra(pc()+2)                   #30+i*12
              0d22 0001  ld   $01         3944    ld(1)                         #31+i*12
              0d23 cd00  ctrl y,x         3945    ctrl(Y,X)                     #32+i*12,29+i*12 (Must be idempotent) Lower SCLK
              0d24 811d  adda [$1d]       3946    adda([vTmp])                  #33+i*12 Shift
              0d25 811d  adda [$1d]       3947    adda([vTmp])                  #34+i*12
              0d26 d61d  st   [$1d],y     ;Bit 6
              0d27 1128  ld   [$28],x
              0d28 dd00  ctrl y,x++
              0d29 dd00  ctrl y,x++
              0d2a 0100  ld   [$00]
              0d2b 200f  anda $0f
              0d2c f02f  beq  $0d2f
              0d2d fc2f  bra  $0d2f
              0d2e 0001  ld   $01
              0d2f cd00  ctrl y,x
              0d30 811d  adda [$1d]
              0d31 811d  adda [$1d]
              0d32 d61d  st   [$1d],y     ;Bit 5
              0d33 1128  ld   [$28],x
              0d34 dd00  ctrl y,x++
              0d35 dd00  ctrl y,x++
              0d36 0100  ld   [$00]
              0d37 200f  anda $0f
              0d38 f03b  beq  $0d3b
              0d39 fc3b  bra  $0d3b
              0d3a 0001  ld   $01
              0d3b cd00  ctrl y,x
              0d3c 811d  adda [$1d]
              0d3d 811d  adda [$1d]
              0d3e d61d  st   [$1d],y     ;Bit 4
              0d3f 1128  ld   [$28],x
              0d40 dd00  ctrl y,x++
              0d41 dd00  ctrl y,x++
              0d42 0100  ld   [$00]
              0d43 200f  anda $0f
              0d44 f047  beq  $0d47
              0d45 fc47  bra  $0d47
              0d46 0001  ld   $01
              0d47 cd00  ctrl y,x
              0d48 811d  adda [$1d]
              0d49 811d  adda [$1d]
              0d4a d61d  st   [$1d],y     ;Bit 3
              0d4b 1128  ld   [$28],x
              0d4c dd00  ctrl y,x++
              0d4d dd00  ctrl y,x++
              0d4e 0100  ld   [$00]
              0d4f 200f  anda $0f
              0d50 f053  beq  $0d53
              0d51 fc53  bra  $0d53
              0d52 0001  ld   $01
              0d53 cd00  ctrl y,x
              0d54 811d  adda [$1d]
              0d55 811d  adda [$1d]
              0d56 d61d  st   [$1d],y     ;Bit 2
              0d57 1128  ld   [$28],x
              0d58 dd00  ctrl y,x++
              0d59 dd00  ctrl y,x++
              0d5a 0100  ld   [$00]
              0d5b 200f  anda $0f
              0d5c f05f  beq  $0d5f
              0d5d fc5f  bra  $0d5f
              0d5e 0001  ld   $01
              0d5f cd00  ctrl y,x
              0d60 811d  adda [$1d]
              0d61 811d  adda [$1d]
              0d62 d61d  st   [$1d],y     ;Bit 1
              0d63 1128  ld   [$28],x
              0d64 dd00  ctrl y,x++
              0d65 dd00  ctrl y,x++
              0d66 0100  ld   [$00]
              0d67 200f  anda $0f
              0d68 f06b  beq  $0d6b
              0d69 fc6b  bra  $0d6b
              0d6a 0001  ld   $01
              0d6b cd00  ctrl y,x
              0d6c 811d  adda [$1d]
              0d6d 811d  adda [$1d]
              0d6e d61d  st   [$1d],y     ;Bit 0
              0d6f 1128  ld   [$28],x
              0d70 dd00  ctrl y,x++
              0d71 dd00  ctrl y,x++
              0d72 0100  ld   [$00]
              0d73 200f  anda $0f
              0d74 f077  beq  $0d77
              0d75 fc77  bra  $0d77
              0d76 0001  ld   $01
              0d77 cd00  ctrl y,x
              0d78 811d  adda [$1d]
              0d79 811d  adda [$1d]
                                          3948
              0d7a 1124  ld   [$24],x     3949  ld([sysArgs+0],X)               #119 Store received byte
              0d7b 1527  ld   [$27],y     3950  ld([sysArgs+3],Y)               #120
              0d7c ce00  st   [y,x]       3951  st([Y,X])                       #121
                                          3952
              0d7d 0124  ld   [$24]       3953  ld([sysArgs+0])                 #122 Advance pointer
              0d7e 8001  adda $01         3954  adda(1)                         #123
              0d7f c224  st   [$24]       3955  st([sysArgs+0])                 #124
                                          3956
              0d80 6126  xora [$26]       3957  xora([sysArgs+2])               #125 Reached end?
              0d81 f088  beq  .sysSpi#128 3958  beq('.sysSpi#128')              #126
                                          3959
              0d82 0116  ld   [$16]       3960  ld([vPC])                       #127 Self-repeating SYS call
              0d83 a002  suba $02         3961  suba(2)                         #128
              0d84 c216  st   [$16]       3962  st([vPC])                       #129
              0d85 1403  ld   $03,y       3963  ld(hi('NEXTY'),Y)               #130
              0d86 e000  jmp  y,$00       3964  jmp(Y,'NEXTY')                  #131
              0d87 00bd  ld   $bd         3965  ld(-134/2)                      #132
                                          3966
                                          3967  label('.sysSpi#128')
.sysSpi#128:  0d88 1403  ld   $03,y       3968  ld(hi('NEXTY'),Y)               #128 Continue program
              0d89 e000  jmp  y,$00       3969  jmp(Y,'NEXTY')                  #129
              0d8a 00be  ld   $be         3970  ld(-132/2)                      #130
                                          3971
                                          3972  #-----------------------------------------------------------------------
                                          3973
                                          3974  label('sys_v6502')
                                          3975
sys_v6502:    0d8b d602  st   [$02],y     3976  st([vCpuSelect],Y)              #18 Activate v6502
              0d8c 00f5  ld   $f5         3977  ld(-22/2)                       #19
              0d8d e0ff  jmp  y,$ff       3978  jmp(Y,'v6502_ENTER')            #20 Transfer control in the same time slice
              0d8e 8115  adda [$15]       3979  adda([vTicks])                  #21
                                          3980  assert (38 - 22)//2 >= v6502_adjust
                                          3981
                                          3982  #-----------------------------------------------------------------------
                                          3983  #       MOS 6502 emulator
                                          3984  #-----------------------------------------------------------------------
                                          3985  #
                                          3986  # Some quirks:
                                          3987  # - Stack in zero page instead of page 1
                                          3988  # - No interrupts
                                          3989  # - No decimal mode (may never be added). D flag is emulated but ignored.
                                          3990  # - BRK switches back to running 16-bits vCPU
                                          3991  # - Illegal opcodes map to BRK, but can read ghost operands before trapping
                                          3992  # - Illegal opcode $ff won't be trapped and cause havoc instead
                                          3993
                                          3994  # Big things TODO:
                                          3995  # XXX Tuning, put most frequent instructions in the primary page
                                          3996
                                          3997  label('v6502_ror')
                                          3998  assert v6502_Cflag == 1
v6502_ror:    0d8f 1525  ld   [$25],y     3999  ld([v6502_ADH],Y)               #12
              0d90 00fc  ld   $fc         4000  ld(-46//2+v6502_maxTicks)       #13 Is there enough time for the excess ticks?
              0d91 8115  adda [$15]       4001  adda([vTicks])                  #14
              0d92 e8a6  blt  .recheck17  4002  blt('.recheck17')               #15
              0d93 0127  ld   [$27]       4003  ld([v6502_P])                   #16 Transfer C to "bit 8"
              0d94 2001  anda $01         4004  anda(1)                         #17
              0d95 807f  adda $7f         4005  adda(127)                       #18
              0d96 2080  anda $80         4006  anda(128)                       #19
              0d97 c219  st   [$19]       4007  st([v6502_BI])                  #20 The real 6502 wouldn't use BI for this
              0d98 0127  ld   [$27]       4008  ld([v6502_P])                   #21 Transfer bit 0 to C
              0d99 20fe  anda $fe         4009  anda(~1)                        #22
              0d9a c227  st   [$27]       4010  st([v6502_P])                   #23
              0d9b 0d00  ld   [y,x]       4011  ld([Y,X])                       #24
              0d9c 2001  anda $01         4012  anda(1)                         #25
              0d9d 4127  ora  [$27]       4013  ora([v6502_P])                  #26
              0d9e c227  st   [$27]       4014  st([v6502_P])                   #27
              0d9f 00c0  ld   $c0         4015  ld('v6502_ror#38')              #28 Shift table lookup
              0da0 c21d  st   [$1d]       4016  st([vTmp])                      #29
              0da1 0d00  ld   [y,x]       4017  ld([Y,X])                       #30
              0da2 20fe  anda $fe         4018  anda(~1)                        #31
              0da3 1405  ld   $05,y       4019  ld(hi('shiftTable'),Y)          #32
              0da4 e200  jmp  y,ac        4020  jmp(Y,AC)                       #33
              0da5 fcff  bra  $ff         4021  bra(255)                        #34 bra shiftTable+255
                                          4022  label('.recheck17')
.recheck17:   0da6 140e  ld   $0e,y       4023  ld(hi('v6502_check'),Y)         #17 Go back to time check before dispatch
              0da7 e0f2  jmp  y,$f2       4024  jmp(Y,'v6502_check')            #18
              0da8 00f6  ld   $f6         4025  ld(-20/2)                       #19
                                          4026
                                          4027  label('v6502_lsr')
                                          4028  assert v6502_Cflag == 1
v6502_lsr:    0da9 1525  ld   [$25],y     4029  ld([v6502_ADH],Y)               #12
              0daa 0127  ld   [$27]       4030  ld([v6502_P])                   #13 Transfer bit 0 to C
              0dab 20fe  anda $fe         4031  anda(~1)                        #14
              0dac c227  st   [$27]       4032  st([v6502_P])                   #15
              0dad 0d00  ld   [y,x]       4033  ld([Y,X])                       #16
              0dae 2001  anda $01         4034  anda(1)                         #17
              0daf 4127  ora  [$27]       4035  ora([v6502_P])                  #18
              0db0 c227  st   [$27]       4036  st([v6502_P])                   #19
              0db1 00b9  ld   $b9         4037  ld('v6502_lsr#30')              #20 Shift table lookup
              0db2 c21d  st   [$1d]       4038  st([vTmp])                      #21
              0db3 0d00  ld   [y,x]       4039  ld([Y,X])                       #22
              0db4 20fe  anda $fe         4040  anda(~1)                        #23
              0db5 1405  ld   $05,y       4041  ld(hi('shiftTable'),Y)          #24
              0db6 e200  jmp  y,ac        4042  jmp(Y,AC)                       #25
              0db7 fcff  bra  $ff         4043  bra(255)                        #26 bra shiftTable+255
                                          4044
                                          4045  label('v6502_rol')
                                          4046  assert v6502_Cflag == 1
v6502_rol:    0db8 1525  ld   [$25],y     4047  ld([v6502_ADH],Y)               #12
              0db9 0d00  ld   [y,x]       4048  ld([Y,X])                       #13
              0dba 2080  anda $80         4049  anda(0x80)                      #14
              0dbb c21d  st   [$1d]       4050  st([v6502_Tmp])                 #15
              0dbc 0127  ld   [$27]       4051  ld([v6502_P])                   #16
              0dbd 2001  anda $01         4052  anda(1)                         #17
                                          4053  label('.rol#18')
.rol#18:      0dbe 8d00  adda [y,x]       4054  adda([Y,X])                     #18
              0dbf 8d00  adda [y,x]       4055  adda([Y,X])                     #19
              0dc0 ce00  st   [y,x]       4056  st([Y,X])                       #20
              0dc1 c228  st   [$28]       4057  st([v6502_Qz])                  #21 Z flag
              0dc2 c229  st   [$29]       4058  st([v6502_Qn])                  #22 N flag
              0dc3 0127  ld   [$27]       4059  ld([v6502_P])                   #23 C Flag
              0dc4 20fe  anda $fe         4060  anda(~1)                        #24
              0dc5 111d  ld   [$1d],x     4061  ld([v6502_Tmp],X)               #25
              0dc6 4500  ora  [x]         4062  ora([X])                        #26
              0dc7 c227  st   [$27]       4063  st([v6502_P])                   #27
              0dc8 140e  ld   $0e,y       4064  ld(hi('v6502_next'),Y)          #28
              0dc9 00f0  ld   $f0         4065  ld(-32/2)                       #29
              0dca e020  jmp  y,$20       4066  jmp(Y,'v6502_next')             #30
                                          4067  #nop()                          #31 Overlap
                                          4068  #
                                          4069  label('v6502_asl')
v6502_asl:    0dcb 1525  ld   [$25],y     4070  ld([v6502_ADH],Y)               #12,32
              0dcc 0d00  ld   [y,x]       4071  ld([Y,X])                       #13
              0dcd 2080  anda $80         4072  anda(0x80)                      #14
              0dce c21d  st   [$1d]       4073  st([v6502_Tmp])                 #15
              0dcf fcbe  bra  .rol#18     4074  bra('.rol#18')                  #16
              0dd0 0000  ld   $00         4075  ld(0)                           #17
                                          4076
                                          4077  label('v6502_jmp1')
v6502_jmp1:   0dd1 0200  nop              4078  nop()                           #12
              0dd2 0124  ld   [$24]       4079  ld([v6502_ADL])                 #13
              0dd3 c21a  st   [$1a]       4080  st([v6502_PCL])                 #14
              0dd4 0125  ld   [$25]       4081  ld([v6502_ADH])                 #15
              0dd5 c21b  st   [$1b]       4082  st([v6502_PCH])                 #16
              0dd6 140e  ld   $0e,y       4083  ld(hi('v6502_next'),Y)          #17
              0dd7 e020  jmp  y,$20       4084  jmp(Y,'v6502_next')             #18
              0dd8 00f6  ld   $f6         4085  ld(-20/2)                       #19
                                          4086
                                          4087  label('v6502_jmp2')
v6502_jmp2:   0dd9 0200  nop              4088  nop()                           #12
              0dda 1525  ld   [$25],y     4089  ld([v6502_ADH],Y)               #13
              0ddb 0d00  ld   [y,x]       4090  ld([Y,X])                       #14
              0ddc de00  st   [y,x++]     4091  st([Y,Xpp])                     #15 (Just X++) Wrap around: bug compatible with NMOS
              0ddd c21a  st   [$1a]       4092  st([v6502_PCL])                 #16
              0dde 0d00  ld   [y,x]       4093  ld([Y,X])                       #17
              0ddf c21b  st   [$1b]       4094  st([v6502_PCH])                 #18
              0de0 140e  ld   $0e,y       4095  ld(hi('v6502_next'),Y)          #19
              0de1 e020  jmp  y,$20       4096  jmp(Y,'v6502_next')             #20
              0de2 00f5  ld   $f5         4097  ld(-22/2)                       #21
                                          4098
                                          4099  label('v6502_pla')
v6502_pla:    0de3 011c  ld   [$1c]       4100  ld([v6502_S])                   #12
              0de4 1200  ld   ac,x        4101  ld(AC,X)                        #13
              0de5 8001  adda $01         4102  adda(1)                         #14
              0de6 c21c  st   [$1c]       4103  st([v6502_S])                   #15
              0de7 0500  ld   [x]         4104  ld([X])                         #16
              0de8 c218  st   [$18]       4105  st([v6502_A])                   #17
              0de9 c228  st   [$28]       4106  st([v6502_Qz])                  #18 Z flag
              0dea c229  st   [$29]       4107  st([v6502_Qn])                  #19 N flag
              0deb 140e  ld   $0e,y       4108  ld(hi('v6502_next'),Y)          #20
              0dec 00f4  ld   $f4         4109  ld(-24/2)                       #21
              0ded e020  jmp  y,$20       4110  jmp(Y,'v6502_next')             #22
                                          4111  #nop()                          #23 Overlap
                                          4112  #
                                          4113  label('v6502_pha')
v6502_pha:    0dee 140e  ld   $0e,y       4114  ld(hi('v6502_next'),Y)          #12,24
              0def 011c  ld   [$1c]       4115  ld([v6502_S])                   #13
              0df0 a001  suba $01         4116  suba(1)                         #14
              0df1 d21c  st   [$1c],x     4117  st([v6502_S],X)                 #15
              0df2 0118  ld   [$18]       4118  ld([v6502_A])                   #16
              0df3 c600  st   [x]         4119  st([X])                         #17
              0df4 e020  jmp  y,$20       4120  jmp(Y,'v6502_next')             #18
              0df5 00f6  ld   $f6         4121  ld(-20/2)                       #19
                                          4122
                                          4123  label('v6502_brk')
v6502_brk:    0df6 0002  ld   $02         4124  ld(hi('ENTER'))                 #12 Switch to vCPU
              0df7 c202  st   [$02]       4125  st([vCpuSelect])                #13
                                          4126  assert v6502_A == vAC
              0df8 0000  ld   $00         4127  ld(0)                           #14
              0df9 c219  st   [$19]       4128  st([vAC+1])                     #15
              0dfa 1403  ld   $03,y       4129  ld(hi('REENTER'),Y)             #16 Switch in the current time slice
              0dfb 00fa  ld   $fa         4130  ld(-22//2+v6502_adjust)         #17
              0dfc e0cb  jmp  y,$cb       4131  jmp(Y,'REENTER')                #18
              0dfd 0200  nop              4132  nop()                           #19
                                          4133
                                          4134  # All interpreter entry points must share the same page offset, because
                                          4135  # this offset is hard-coded as immediate operand in the video driver.
                                          4136  # The Gigatron's original vCPU's 'ENTER' label is already at $2ff, so we
                                          4137  # just use $dff for 'v6502_ENTER'. v6502 actually has two entry points.
                                          4138  # The other is 'v6502_RESUME' at $10ff. It is used for instructions
                                          4139  # that were fetched but not yet executed. Allowing the split gives finer
                                          4140  # granulariy, and hopefully more throughput for the simpler instructions.
                                          4141  # (There is no "overhead" for allowing instruction splitting, because
                                          4142  #  both emulation phases must administer [vTicks] anyway.)
                                          4143  while pc()&255 < 255:
              0dfe 0200  nop              4144    nop()
                                          4145  label('v6502_ENTER')
v6502_ENTER:  0dff fc22  bra  v6502_next2 4146  bra('v6502_next2')              #0 v6502 primary entry point
                                          4147  # --- Page boundary ---
              0e00 a005  suba $05         4148  suba(v6502_adjust)              #1,19 Adjust for vCPU/v6520 timing differences
                                          4149
                                          4150  #19 Addressing modes
                                          4151  (   'v6502_mode0'  ); bra('v6502_modeIZX'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $00 xxx000xx
              0e01 fce0  bra  v6502_modeIZX
              0e02 fc42  bra  v6502_modeIMM
              0e03 fc58  bra  v6502_modeIMP
                                          4152  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeZP');  bra('v6502_modeILL') # $04 xxx001xx
              0e04 fc5d  bra  v6502_modeZP
              0e05 fc5d  bra  v6502_modeZP
              0e06 fc5d  bra  v6502_modeZP
              0e07 fc58  bra  v6502_modeIMP
                                          4153  bra('v6502_modeIMP'); bra('v6502_modeIMM'); bra('v6502_modeACC'); bra('v6502_modeILL') # $08 xxx010xx
              0e08 fc58  bra  v6502_modeIMP
              0e09 fc42  bra  v6502_modeIMM
              0e0a fc52  bra  v6502_modeACC
              0e0b fc58  bra  v6502_modeIMP
                                          4154  bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeABS'); bra('v6502_modeILL') # $0c xxx011xx
              0e0c fc78  bra  v6502_modeABS
              0e0d fc78  bra  v6502_modeABS
              0e0e fc78  bra  v6502_modeABS
              0e0f fc58  bra  v6502_modeIMP
                                          4155  bra('v6502_modeREL'); bra('v6502_modeIZY'); bra('v6502_modeIMM'); bra('v6502_modeILL') # $10 xxx100xx
              0e10 fccf  bra  v6502_modeREL
              0e11 fcab  bra  v6502_modeIZY
              0e12 fc42  bra  v6502_modeIMM
              0e13 fc58  bra  v6502_modeIMP
                                          4156  bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeZPX'); bra('v6502_modeILL') # $14 xxx101xx
              0e14 fc5b  bra  v6502_modeZPX
              0e15 fc5b  bra  v6502_modeZPX
              0e16 fc5b  bra  v6502_modeZPX
              0e17 fc58  bra  v6502_modeIMP
                                          4157  bra('v6502_modeIMP'); bra('v6502_modeABY'); bra('v6502_modeIMP'); bra('v6502_modeILL') # $18 xxx110xx
              0e18 fc58  bra  v6502_modeIMP
              0e19 fc7b  bra  v6502_modeABY
              0e1a fc58  bra  v6502_modeIMP
              0e1b fc58  bra  v6502_modeIMP
                                          4158  bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeABX'); bra('v6502_modeILL') # $1c xxx111xx
              0e1c fc7a  bra  v6502_modeABX
              0e1d fc7a  bra  v6502_modeABX
              0e1e fc7a  bra  v6502_modeABX
              0e1f fc58  bra  v6502_modeIMP
                                          4159
                                          4160  # Special encoding cases for emulator:
                                          4161  #     $00 BRK -         but gets mapped to #$DD      handled in v6502_mode0
                                          4162  #     $20 JSR $DDDD     but gets mapped to #$DD      handled in v6502_mode0 and v6502_JSR
                                          4163  #     $40 RTI -         but gets mapped to #$DD      handled in v6502_mode0
                                          4164  #     $60 RTS -         but gets mapped to #$DD      handled in v6502_mode0
                                          4165  #     $6C JMP ($DDDD)   but gets mapped to $DDDD     handled in v6502_JMP2
                                          4166  #     $96 STX $DD,Y     but gets mapped to $DD,X     handled in v6502_STX2
                                          4167  #     $B6 LDX $DD,Y     but gets mapped to $DD,X     handled in v6502_LDX2
                                          4168  #     $BE LDX $DDDD,Y   but gets mapped to $DDDD,X   handled in v6502_modeABX
                                          4169
                                          4170  label('v6502_next')
v6502_next:   0e20 8115  adda [$15]       4171  adda([vTicks])                  #0
                                          4172  blt('v6502_exitBefore')         #1 No more ticks
              0e21 e83a  blt  v6502_exitBefore
                                          4173  label('v6502_next2')
v6502_next2:  0e22 c215  st   [$15]       4174  st([vTicks])                    #2
                                          4175  #
                                          4176  # Fetch opcode
              0e23 111a  ld   [$1a],x     4177  ld([v6502_PCL],X)               #3
              0e24 151b  ld   [$1b],y     4178  ld([v6502_PCH],Y)               #4
              0e25 0d00  ld   [y,x]       4179  ld([Y,X])                       #5 Fetch IR
              0e26 c226  st   [$26]       4180  st([v6502_IR])                  #6
              0e27 011a  ld   [$1a]       4181  ld([v6502_PCL])                 #7 PC++
              0e28 8001  adda $01         4182  adda(1)                         #8
              0e29 d21a  st   [$1a],x     4183  st([v6502_PCL],X)               #9
              0e2a f02d  beq  $0e2d       4184  beq(pc()+3)                     #10
              0e2b fc2e  bra  $0e2e       4185  bra(pc()+3)                     #11
              0e2c 0000  ld   $00         4186  ld(0)                           #12
              0e2d 0001  ld   $01         4187  ld(1)                           #12(!)
              0e2e 811b  adda [$1b]       4188  adda([v6502_PCH])               #13
              0e2f d61b  st   [$1b],y     4189  st([v6502_PCH],Y)               #14
                                          4190  #
                                          4191  # Get addressing mode and fetch operands
              0e30 0126  ld   [$26]       4192  ld([v6502_IR])                  #15 Get addressing mode
              0e31 201f  anda $1f         4193  anda(31)                        #16
              0e32 fe00  bra  ac          4194  bra(AC)                         #17
              0e33 fc34  bra  .next20     4195  bra('.next20')                  #18
                                          4196  # (jump table)                  #19
                                          4197  label('.next20')
.next20:      0e34 0d00  ld   [y,x]       4198  ld([Y,X])                       #20 Fetch L
                                          4199  # Most opcodes branch away at this point, but IR & 31 == 0 falls through
                                          4200  #
                                          4201  # Implicit Mode for  BRK JSR RTI RTS (<  0x80) -- 26 cycles
                                          4202  # Immediate Mode for LDY CPY CPX     (>= 0x80) -- 36 cycles
                                          4203  label('v6502_mode0')
v6502_mode0:  0e35 0126  ld   [$26]       4204  ld([v6502_IR])                  #21 'xxx0000'
              0e36 e845  blt  .imm24      4205  bmi('.imm24')                   #22
              0e37 011b  ld   [$1b]       4206  ld([v6502_PCH])                 #23
              0e38 fcf2  bra  v6502_check 4207  bra('v6502_check')              #24
              0e39 00f3  ld   $f3         4208  ld(-26/2)                       #25
                                          4209
                                          4210  # Resync with video driver. At this point we're returning BEFORE
                                          4211  # fetching and executing the next instruction.
                                          4212  label('v6502_exitBefore')
v6502_exitBefore:
              0e3a 8013  adda $13         4213  adda(v6502_maxTicks)            #3 Exit BEFORE fetch
              0e3b e43b  bgt  $0e3b       4214  bgt(pc()&255)                   #4 Resync
              0e3c a001  suba $01         4215  suba(1)                         #5
              0e3d 000d  ld   $0d         4216  ld(hi('v6502_ENTER'))           #6 Set entry point to before 'fetch'
              0e3e c202  st   [$02]       4217  st([vCpuSelect])                #7
              0e3f 1401  ld   $01,y       4218  ld(hi('vBlankStart'),Y)         #8
              0e40 e11e  jmp  y,[$1e]     4219  jmp(Y,[vReturn])                #9 To video driver
              0e41 0000  ld   $00         4220  ld(0)                           #10
                                          4221  assert v6502_overhead ==         11
                                          4222
                                          4223  # Immediate Mode: #$FF -- 36 cycles
                                          4224  label('v6502_modeIMM')
v6502_modeIMM:
              0e42 0200  nop              4225  nop()                           #21 Wait for v6502_mode0 to join
              0e43 0200  nop              4226  nop()                           #22
              0e44 011b  ld   [$1b]       4227  ld([v6502_PCH])                 #23 Copy PC
                                          4228  label('.imm24')
.imm24:       0e45 c225  st   [$25]       4229  st([v6502_ADH])                 #24
              0e46 011a  ld   [$1a]       4230  ld([v6502_PCL])                 #25
              0e47 d224  st   [$24],x     4231  st([v6502_ADL],X)               #26
              0e48 8001  adda $01         4232  adda(1)                         #27 PC++
              0e49 c21a  st   [$1a]       4233  st([v6502_PCL])                 #28
              0e4a f04d  beq  $0e4d       4234  beq(pc()+3)                     #29
              0e4b fc4e  bra  $0e4e       4235  bra(pc()+3)                     #30
              0e4c 0000  ld   $00         4236  ld(0)                           #31
              0e4d 0001  ld   $01         4237  ld(1)                           #31(!)
              0e4e 811b  adda [$1b]       4238  adda([v6502_PCH])               #32
              0e4f c21b  st   [$1b]       4239  st([v6502_PCH])                 #33
              0e50 fcf2  bra  v6502_check 4240  bra('v6502_check')              #34
              0e51 00ee  ld   $ee         4241  ld(-36/2)                       #35
                                          4242
                                          4243  # Accumulator Mode: ROL ROR LSL ASR -- 28 cycles
                                          4244  label('v6502_modeACC')
v6502_modeACC:
              0e52 0018  ld   $18         4245  ld(v6502_A&255)                 #21 Address of AC
              0e53 d224  st   [$24],x     4246  st([v6502_ADL],X)               #22
              0e54 0000  ld   $00         4247  ld(v6502_A>>8)                  #23
              0e55 c225  st   [$25]       4248  st([v6502_ADH])                 #24
              0e56 00f2  ld   $f2         4249  ld(-28/2)                       #25
              0e57 fcf2  bra  v6502_check 4250  bra('v6502_check')              #26
                                          4251  #nop()                          #27 Overlap
                                          4252  #
                                          4253  # Implied Mode: no operand -- 24 cycles
                                          4254  label('v6502_modeILL')
                                          4255  label('v6502_modeIMP')
v6502_modeILL:
v6502_modeIMP:
              0e58 0200  nop              4256  nop()                           #21,27
              0e59 fcf2  bra  v6502_check 4257  bra('v6502_check')              #22
              0e5a 00f4  ld   $f4         4258  ld(-24/2)                       #23
                                          4259
                                          4260  # Zero Page Modes: $DD $DD,X $DD,Y -- 36 cycles
                                          4261  label('v6502_modeZPX')
v6502_modeZPX:
              0e5b fc5f  bra  .zp23       4262  bra('.zp23')                    #21
              0e5c 812a  adda [$2a]       4263  adda([v6502_X])                 #22
                                          4264  label('v6502_modeZP')
v6502_modeZP: 0e5d fc5f  bra  .zp23       4265  bra('.zp23')                    #21
              0e5e 0200  nop              4266  nop()                           #22
                                          4267  label('.zp23')
.zp23:        0e5f d224  st   [$24],x     4268  st([v6502_ADL],X)               #23
              0e60 0000  ld   $00         4269  ld(0)                           #24 H=0
              0e61 c225  st   [$25]       4270  st([v6502_ADH])                 #25
              0e62 0001  ld   $01         4271  ld(1)                           #26 PC++
              0e63 811a  adda [$1a]       4272  adda([v6502_PCL])               #27
              0e64 c21a  st   [$1a]       4273  st([v6502_PCL])                 #28
              0e65 f068  beq  $0e68       4274  beq(pc()+3)                     #29
              0e66 fc69  bra  $0e69       4275  bra(pc()+3)                     #30
              0e67 0000  ld   $00         4276  ld(0)                           #31
              0e68 0001  ld   $01         4277  ld(1)                           #31(!)
              0e69 811b  adda [$1b]       4278  adda([v6502_PCH])               #32
              0e6a c21b  st   [$1b]       4279  st([v6502_PCH])                 #33
              0e6b fcf2  bra  v6502_check 4280  bra('v6502_check')              #34
              0e6c 00ee  ld   $ee         4281  ld(-36/2)                       #35
                                          4282
                                          4283  # Possible retry loop for modeABS and modeIZY. Because these need
                                          4284  # more time than the v6502_maxTicks of 38 Gigatron cycles, we may
                                          4285  # have to restart them after the next horizontal pulse.
                                          4286  label('.retry28')
.retry28:     0e6d f070  beq  $0e70       4287  beq(pc()+3)                     #28,37 PC--
              0e6e fc71  bra  $0e71       4288  bra(pc()+3)                     #29
              0e6f 0000  ld   $00         4289  ld(0)                           #30
              0e70 00ff  ld   $ff         4290  ld(-1)                          #30(!)
              0e71 811b  adda [$1b]       4291  adda([v6502_PCH])               #31
              0e72 c21b  st   [$1b]       4292  st([v6502_PCH])                 #32
              0e73 011a  ld   [$1a]       4293  ld([v6502_PCL])                 #33
              0e74 a001  suba $01         4294  suba(1)                         #34
              0e75 c21a  st   [$1a]       4295  st([v6502_PCL])                 #35
              0e76 fc20  bra  v6502_next  4296  bra('v6502_next')               #36 Retry until sufficient time
              0e77 00ed  ld   $ed         4297  ld(-38/2)                       #37
                                          4298
                                          4299  # Absolute Modes: $DDDD $DDDD,X $DDDD,Y -- 64 cycles
                                          4300  label('v6502_modeABS')
v6502_modeABS:
              0e78 fc7d  bra  .abs23      4301  bra('.abs23')                   #21
              0e79 0000  ld   $00         4302  ld(0)                           #22
                                          4303  label('v6502_modeABX')
v6502_modeABX:
              0e7a fc7d  bra  .abs23      4304  bra('.abs23')                   #21
                                          4305  label('v6502_modeABY')
v6502_modeABY:
              0e7b 012a  ld   [$2a]       4306  ld([v6502_X])                   #21,22
              0e7c 012b  ld   [$2b]       4307  ld([v6502_Y])                   #22
                                          4308  label('.abs23')
.abs23:       0e7d c224  st   [$24]       4309  st([v6502_ADL])                 #23
              0e7e 00f3  ld   $f3         4310  ld(-64//2+v6502_maxTicks)       #24 Is there enough time for the excess ticks?
              0e7f 8115  adda [$15]       4311  adda([vTicks])                  #25
              0e80 e86d  blt  .retry28    4312  blt('.retry28')                 #26
              0e81 011a  ld   [$1a]       4313  ld([v6502_PCL])                 #27
              0e82 0126  ld   [$26]       4314  ld([v6502_IR])                  #28 Special case $BE: LDX $DDDD,Y (we got X in ADL)
              0e83 60be  xora $be         4315  xora(0xbe)                      #29
              0e84 f087  beq  $0e87       4316  beq(pc()+3)                     #30
              0e85 fc88  bra  $0e88       4317  bra(pc()+3)                     #31
              0e86 0124  ld   [$24]       4318  ld([v6502_ADL])                 #32
              0e87 012b  ld   [$2b]       4319  ld([v6502_Y])                   #32(!)
              0e88 8d00  adda [y,x]       4320  adda([Y,X])                     #33 Fetch and add L
              0e89 c224  st   [$24]       4321  st([v6502_ADL])                 #34
              0e8a e88e  blt  .abs37      4322  bmi('.abs37')                   #35 Carry?
              0e8b ad00  suba [y,x]       4323  suba([Y,X])                     #36 Gets back original operand
              0e8c fc90  bra  .abs39      4324  bra('.abs39')                   #37
              0e8d 4d00  ora  [y,x]       4325  ora([Y,X])                      #38 Carry in bit 7
                                          4326  label('.abs37')
.abs37:       0e8e 2d00  anda [y,x]       4327  anda([Y,X])                     #37 Carry in bit 7
              0e8f 0200  nop              4328  nop()                           #38
                                          4329  label('.abs39')
.abs39:       0e90 3080  anda $80,x       4330  anda(0x80,X)                    #39 Move carry to bit 0
              0e91 0500  ld   [x]         4331  ld([X])                         #40
              0e92 c225  st   [$25]       4332  st([v6502_ADH])                 #41
              0e93 011a  ld   [$1a]       4333  ld([v6502_PCL])                 #42 PC++
              0e94 8001  adda $01         4334  adda(1)                         #43
              0e95 d21a  st   [$1a],x     4335  st([v6502_PCL],X)               #44
              0e96 f099  beq  $0e99       4336  beq(pc()+3)                     #45
              0e97 fc9a  bra  $0e9a       4337  bra(pc()+3)                     #46
              0e98 0000  ld   $00         4338  ld(0)                           #47
              0e99 0001  ld   $01         4339  ld(1)                           #47(!)
              0e9a 811b  adda [$1b]       4340  adda([v6502_PCH])               #48
              0e9b d61b  st   [$1b],y     4341  st([v6502_PCH],Y)               #49
              0e9c 0d00  ld   [y,x]       4342  ld([Y,X])                       #50 Fetch H
              0e9d 8125  adda [$25]       4343  adda([v6502_ADH])               #51
              0e9e c225  st   [$25]       4344  st([v6502_ADH])                 #52
              0e9f 011a  ld   [$1a]       4345  ld([v6502_PCL])                 #53 PC++
              0ea0 8001  adda $01         4346  adda(1)                         #54
              0ea1 c21a  st   [$1a]       4347  st([v6502_PCL])                 #55
              0ea2 f0a5  beq  $0ea5       4348  beq(pc()+3)                     #56
              0ea3 fca6  bra  $0ea6       4349  bra(pc()+3)                     #57
              0ea4 0000  ld   $00         4350  ld(0)                           #58
              0ea5 0001  ld   $01         4351  ld(1)                           #58(!)
              0ea6 811b  adda [$1b]       4352  adda([v6502_PCH])               #59
              0ea7 c21b  st   [$1b]       4353  st([v6502_PCH])                 #60
              0ea8 1124  ld   [$24],x     4354  ld([v6502_ADL],X)               #61
              0ea9 fcf2  bra  v6502_check 4355  bra('v6502_check')              #62
              0eaa 00e0  ld   $e0         4356  ld(-64/2)                       #63
                                          4357
                                          4358  # Indirect Indexed Mode: ($DD),Y -- 54 cycles
                                          4359  label('v6502_modeIZY')
v6502_modeIZY:
              0eab 1200  ld   ac,x        4360  ld(AC,X)                        #21 $DD
              0eac 1400  ld   $00,y       4361  ld(0,Y)                         #22 $00DD
              0ead 00f8  ld   $f8         4362  ld(-54//2+v6502_maxTicks)       #23 Is there enough time for the excess ticks?
              0eae 8115  adda [$15]       4363  adda([vTicks])                  #24
              0eaf 0200  nop              4364  nop()                           #25
              0eb0 e86d  blt  .retry28    4365  blt('.retry28')                 #26
              0eb1 011a  ld   [$1a]       4366  ld([v6502_PCL])                 #27
              0eb2 8001  adda $01         4367  adda(1)                         #28 PC++
              0eb3 c21a  st   [$1a]       4368  st([v6502_PCL])                 #29
              0eb4 f0b7  beq  $0eb7       4369  beq(pc()+3)                     #30
              0eb5 fcb8  bra  $0eb8       4370  bra(pc()+3)                     #31
              0eb6 0000  ld   $00         4371  ld(0)                           #32
              0eb7 0001  ld   $01         4372  ld(1)                           #32(!)
              0eb8 811b  adda [$1b]       4373  adda([v6502_PCH])               #33
              0eb9 c21b  st   [$1b]       4374  st([v6502_PCH])                 #34
              0eba 0d00  ld   [y,x]       4375  ld([Y,X])                       #35 Read word from zero-page
              0ebb de00  st   [y,x++]     4376  st([Y,Xpp])                     #36 (Just X++) Wrap-around is correct
              0ebc c224  st   [$24]       4377  st([v6502_ADL])                 #37
              0ebd 0d00  ld   [y,x]       4378  ld([Y,X])                       #38
              0ebe c225  st   [$25]       4379  st([v6502_ADH])                 #39
              0ebf 012b  ld   [$2b]       4380  ld([v6502_Y])                   #40 Add Y
              0ec0 8124  adda [$24]       4381  adda([v6502_ADL])               #41
              0ec1 c224  st   [$24]       4382  st([v6502_ADL])                 #42
              0ec2 e8c6  blt  .izy45      4383  bmi('.izy45')                   #43 Carry?
              0ec3 a12b  suba [$2b]       4384  suba([v6502_Y])                 #44 Gets back original operand
              0ec4 fcc8  bra  .izy47      4385  bra('.izy47')                   #45
              0ec5 412b  ora  [$2b]       4386  ora([v6502_Y])                  #46 Carry in bit 7
                                          4387  label('.izy45')
.izy45:       0ec6 212b  anda [$2b]       4388  anda([v6502_Y])                 #45 Carry in bit 7
              0ec7 0200  nop              4389  nop()                           #46
                                          4390  label('.izy47')
.izy47:       0ec8 3080  anda $80,x       4391  anda(0x80,X)                    #47 Move carry to bit 0
              0ec9 0500  ld   [x]         4392  ld([X])                         #48
              0eca 8125  adda [$25]       4393  adda([v6502_ADH])               #49
              0ecb c225  st   [$25]       4394  st([v6502_ADH])                 #50
              0ecc 1124  ld   [$24],x     4395  ld([v6502_ADL],X)               #51
              0ecd fcf2  bra  v6502_check 4396  bra('v6502_check')              #52
              0ece 00e5  ld   $e5         4397  ld(-54/2)                       #53
                                          4398
                                          4399  # Relative Mode: BEQ BNE BPL BMI BCC BCS BVC BVS -- 36 cycles
                                          4400  label('v6502_modeREL')
v6502_modeREL:
              0ecf d224  st   [$24],x     4401  st([v6502_ADL],X)               #21 Offset (Only needed for branch)
              0ed0 e8d3  blt  $0ed3       4402  bmi(pc()+3)                     #22 Sign extend
              0ed1 fcd4  bra  $0ed4       4403  bra(pc()+3)                     #23
              0ed2 0000  ld   $00         4404  ld(0)                           #24
              0ed3 00ff  ld   $ff         4405  ld(255)                         #24(!)
              0ed4 c225  st   [$25]       4406  st([v6502_ADH])                 #25
              0ed5 011a  ld   [$1a]       4407  ld([v6502_PCL])                 #26 PC++ (Needed for both cases)
              0ed6 8001  adda $01         4408  adda(1)                         #27
              0ed7 c21a  st   [$1a]       4409  st([v6502_PCL])                 #28
              0ed8 f0db  beq  $0edb       4410  beq(pc()+3)                     #29
              0ed9 fcdc  bra  $0edc       4411  bra(pc()+3)                     #30
              0eda 0000  ld   $00         4412  ld(0)                           #31
              0edb 0001  ld   $01         4413  ld(1)                           #31(!)
              0edc 811b  adda [$1b]       4414  adda([v6502_PCH])               #32
              0edd c21b  st   [$1b]       4415  st([v6502_PCH])                 #33
              0ede fcf2  bra  v6502_check 4416  bra('v6502_check')              #34
              0edf 00ee  ld   $ee         4417  ld(-36/2)                       #53
                                          4418
                                          4419  # Indexed Indirect Mode: ($DD,X) -- 38 cycles
                                          4420  label('v6502_modeIZX')
v6502_modeIZX:
              0ee0 812a  adda [$2a]       4421  adda([v6502_X])                 #21 Add X
              0ee1 c21d  st   [$1d]       4422  st([v6502_Tmp])                 #22
              0ee2 9001  adda $01,x       4423  adda(1,X)                       #23 Read word from zero-page
              0ee3 0500  ld   [x]         4424  ld([X])                         #24
              0ee4 c225  st   [$25]       4425  st([v6502_ADH])                 #25
              0ee5 111d  ld   [$1d],x     4426  ld([v6502_Tmp],X)               #26
              0ee6 0500  ld   [x]         4427  ld([X])                         #27
              0ee7 d224  st   [$24],x     4428  st([v6502_ADL],X)               #28
              0ee8 011a  ld   [$1a]       4429  ld([v6502_PCL])                 #29 PC++
              0ee9 8001  adda $01         4430  adda(1)                         #30
              0eea c21a  st   [$1a]       4431  st([v6502_PCL])                 #31
              0eeb f0ee  beq  $0eee       4432  beq(pc()+3)                     #32
              0eec fcef  bra  $0eef       4433  bra(pc()+3)                     #33
              0eed 0000  ld   $00         4434  ld(0)                           #34
              0eee 0001  ld   $01         4435  ld(1)                           #34(!)
              0eef 811b  adda [$1b]       4436  adda([v6502_PCH])               #35
              0ef0 c21b  st   [$1b]       4437  st([v6502_PCH])                 #36
              0ef1 00ed  ld   $ed         4438  ld(-38/2)                       #37 !!! Fall through to v6502_check !!!
                                          4439  #
                                          4440  # Update elapsed time for the addressing mode processing.
                                          4441  # Then check if we can immediately execute this instruction.
                                          4442  # Otherwise transfer control to the video driver.
                                          4443  label('v6502_check')
v6502_check:  0ef2 8115  adda [$15]       4444  adda([vTicks])                  #0
                                          4445  blt('v6502_exitAfter')          #1 No more ticks
              0ef3 e8f8  blt  v6502_exitAfter
              0ef4 c215  st   [$15]       4446  st([vTicks])                    #2
              0ef5 140f  ld   $0f,y       4447  ld(hi('v6502_execute'),Y)       #3
              0ef6 e126  jmp  y,[$26]     4448  jmp(Y,[v6502_IR])               #4
              0ef7 fcff  bra  $ff         4449  bra(255)                        #5
                                          4450
                                          4451  # Otherwise resync with video driver. At this point we're returning AFTER
                                          4452  # addressing mode decoding, but before executing the instruction.
                                          4453  label('v6502_exitAfter')
v6502_exitAfter:
              0ef8 8013  adda $13         4454  adda(v6502_maxTicks)            #3 Exit AFTER fetch
              0ef9 e4f9  bgt  $0ef9       4455  bgt(pc()&255)                   #4 Resync
              0efa a001  suba $01         4456  suba(1)                         #5
              0efb 0010  ld   $10         4457  ld(hi('v6502_RESUME'))          #6 Set entry point to before 'execute'
              0efc c202  st   [$02]       4458  st([vCpuSelect])                #7
              0efd 1401  ld   $01,y       4459  ld(hi('vBlankStart'),Y)         #8
              0efe e11e  jmp  y,[$1e]     4460  jmp(Y,[vReturn])                #9 To video driver
              0eff 0000  ld   $00         4461  ld(0)                           #10
                                          4462  assert v6502_overhead ==         11
                                          4463
                                          4464  align(0x100,size=0x100)
                                          4465  label('v6502_execute')
                                          4466  # This page works as a 255-entry (0..254) jump table for 6502 opcodes.
                                          4467  # Jumping into this page must have 'bra 255' in the branch delay slot
                                          4468  # in order to get out again and dispatch to the right continuation.
                                          4469  # X must hold [v6502_ADL],
                                          4470  # Y will hold hi('v6502_execute'),
                                          4471  # A will be loaded with the code offset (this is skipped at offset $ff)
v6502_execute:
              0f00 00fd  ld   $fd         4472  ld('v6502_BRK'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $00
              0f01 0089  ld   $89
              0f02 00fd  ld   $fd
              0f03 00fd  ld   $fd
              0f04 00fd  ld   $fd         4473  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f05 0089  ld   $89
              0f06 00f1  ld   $f1
              0f07 00fd  ld   $fd
              0f08 00f3  ld   $f3         4474  ld('v6502_PHP'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f09 0089  ld   $89
              0f0a 00f1  ld   $f1
              0f0b 00fd  ld   $fd
              0f0c 00fd  ld   $fd         4475  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f0d 0089  ld   $89
              0f0e 00f1  ld   $f1
              0f0f 00fd  ld   $fd
              0f10 003f  ld   $3f         4476  ld('v6502_BPL'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $10
              0f11 0089  ld   $89
              0f12 00fd  ld   $fd
              0f13 00fd  ld   $fd
              0f14 00fd  ld   $fd         4477  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f15 0089  ld   $89
              0f16 00f1  ld   $f1
              0f17 00fd  ld   $fd
              0f18 0036  ld   $36         4478  ld('v6502_CLC'); ld('v6502_ORA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f19 0089  ld   $89
              0f1a 00fd  ld   $fd
              0f1b 00fd  ld   $fd
              0f1c 00fd  ld   $fd         4479  ld('v6502_ILL'); ld('v6502_ORA'); ld('v6502_ASL'); ld('v6502_ILL') #6
              0f1d 0089  ld   $89
              0f1e 00f1  ld   $f1
              0f1f 00fd  ld   $fd
              0f20 009a  ld   $9a         4480  ld('v6502_JSR'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $20
              0f21 0085  ld   $85
              0f22 00fd  ld   $fd
              0f23 00fd  ld   $fd
              0f24 00f5  ld   $f5         4481  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f25 0085  ld   $85
              0f26 00f7  ld   $f7
              0f27 00fd  ld   $fd
              0f28 00f9  ld   $f9         4482  ld('v6502_PLP'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f29 0085  ld   $85
              0f2a 00f7  ld   $f7
              0f2b 00fd  ld   $fd
              0f2c 00f5  ld   $f5         4483  ld('v6502_BIT'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f2d 0085  ld   $85
              0f2e 00f7  ld   $f7
              0f2f 00fd  ld   $fd
              0f30 0042  ld   $42         4484  ld('v6502_BMI'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6 $30
              0f31 0085  ld   $85
              0f32 00fd  ld   $fd
              0f33 00fd  ld   $fd
              0f34 00fd  ld   $fd         4485  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f35 0085  ld   $85
              0f36 00f7  ld   $f7
              0f37 00fd  ld   $fd
              0f38 0038  ld   $38         4486  ld('v6502_SEC'); ld('v6502_AND'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f39 0085  ld   $85
              0f3a 00fd  ld   $fd
              0f3b 00fd  ld   $fd
              0f3c 00fd  ld   $fd         4487  ld('v6502_ILL'); ld('v6502_AND'); ld('v6502_ROL'); ld('v6502_ILL') #6
              0f3d 0085  ld   $85
              0f3e 00f7  ld   $f7
              0f3f 00fd  ld   $fd
              0f40 00d3  ld   $d3         4488  ld('v6502_RTI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $40
              0f41 008c  ld   $8c
              0f42 00fd  ld   $fd
              0f43 00fd  ld   $fd
              0f44 00fd  ld   $fd         4489  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f45 008c  ld   $8c
              0f46 00d7  ld   $d7
              0f47 00fd  ld   $fd
              0f48 00d9  ld   $d9         4490  ld('v6502_PHA'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f49 008c  ld   $8c
              0f4a 00d7  ld   $d7
              0f4b 00fd  ld   $fd
              0f4c 0096  ld   $96         4491  ld('v6502_JMP1');ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f4d 008c  ld   $8c
              0f4e 00d7  ld   $d7
              0f4f 00fd  ld   $fd
              0f50 0045  ld   $45         4492  ld('v6502_BVC'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6 $50
              0f51 008c  ld   $8c
              0f52 00fd  ld   $fd
              0f53 00fd  ld   $fd
              0f54 00fd  ld   $fd         4493  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f55 008c  ld   $8c
              0f56 00d7  ld   $d7
              0f57 00fd  ld   $fd
              0f58 00db  ld   $db         4494  ld('v6502_CLI'); ld('v6502_EOR'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f59 008c  ld   $8c
              0f5a 00fd  ld   $fd
              0f5b 00fd  ld   $fd
              0f5c 00fd  ld   $fd         4495  ld('v6502_ILL'); ld('v6502_EOR'); ld('v6502_LSR'); ld('v6502_ILL') #6
              0f5d 008c  ld   $8c
              0f5e 00d7  ld   $d7
              0f5f 00fd  ld   $fd
              0f60 00dd  ld   $dd         4496  ld('v6502_RTS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $60
              0f61 0001  ld   $01
              0f62 00fd  ld   $fd
              0f63 00fd  ld   $fd
              0f64 00fd  ld   $fd         4497  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f65 0001  ld   $01
              0f66 00d5  ld   $d5
              0f67 00fd  ld   $fd
              0f68 00df  ld   $df         4498  ld('v6502_PLA'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f69 0001  ld   $01
              0f6a 00d5  ld   $d5
              0f6b 00fd  ld   $fd
              0f6c 0098  ld   $98         4499  ld('v6502_JMP2');ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f6d 0001  ld   $01
              0f6e 00d5  ld   $d5
              0f6f 00fd  ld   $fd
              0f70 0049  ld   $49         4500  ld('v6502_BVS'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $70
              0f71 0001  ld   $01
              0f72 00fd  ld   $fd
              0f73 00fd  ld   $fd
              0f74 00fd  ld   $fd         4501  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f75 0001  ld   $01
              0f76 00d5  ld   $d5
              0f77 00fd  ld   $fd
              0f78 00e1  ld   $e1         4502  ld('v6502_SEI'); ld('v6502_ADC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f79 0001  ld   $01
              0f7a 00fd  ld   $fd
              0f7b 00fd  ld   $fd
              0f7c 00fd  ld   $fd         4503  ld('v6502_ILL'); ld('v6502_ADC'); ld('v6502_ROR'); ld('v6502_ILL') #6
              0f7d 0001  ld   $01
              0f7e 00d5  ld   $d5
              0f7f 00fd  ld   $fd
              0f80 00fd  ld   $fd         4504  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $80
              0f81 00c1  ld   $c1
              0f82 00fd  ld   $fd
              0f83 00fd  ld   $fd
              0f84 00c7  ld   $c7         4505  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f85 00c1  ld   $c1
              0f86 00c3  ld   $c3
              0f87 00fd  ld   $fd
              0f88 007f  ld   $7f         4506  ld('v6502_DEY'); ld('v6502_ILL'); ld('v6502_TXA'); ld('v6502_ILL') #6
              0f89 00fd  ld   $fd
              0f8a 00cd  ld   $cd
              0f8b 00fd  ld   $fd
              0f8c 00c7  ld   $c7         4507  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX'); ld('v6502_ILL') #6
              0f8d 00c1  ld   $c1
              0f8e 00c3  ld   $c3
              0f8f 00fd  ld   $fd
              0f90 004d  ld   $4d         4508  ld('v6502_BCC'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $90
              0f91 00c1  ld   $c1
              0f92 00fd  ld   $fd
              0f93 00fd  ld   $fd
              0f94 00c7  ld   $c7         4509  ld('v6502_STY'); ld('v6502_STA'); ld('v6502_STX2');ld('v6502_ILL') #6
              0f95 00c1  ld   $c1
              0f96 00c5  ld   $c5
              0f97 00fd  ld   $fd
              0f98 00cf  ld   $cf         4510  ld('v6502_TYA'); ld('v6502_STA'); ld('v6502_TXS'); ld('v6502_ILL') #6
              0f99 00c1  ld   $c1
              0f9a 00e3  ld   $e3
              0f9b 00fd  ld   $fd
              0f9c 00fd  ld   $fd         4511  ld('v6502_ILL'); ld('v6502_STA'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0f9d 00c1  ld   $c1
              0f9e 00fd  ld   $fd
              0f9f 00fd  ld   $fd
              0fa0 00bf  ld   $bf         4512  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6 $A0
              0fa1 00b9  ld   $b9
              0fa2 00bb  ld   $bb
              0fa3 00fd  ld   $fd
              0fa4 00bf  ld   $bf         4513  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fa5 00b9  ld   $b9
              0fa6 00bb  ld   $bb
              0fa7 00fd  ld   $fd
              0fa8 00cb  ld   $cb         4514  ld('v6502_TAY'); ld('v6502_LDA'); ld('v6502_TAX'); ld('v6502_ILL') #6
              0fa9 00b9  ld   $b9
              0faa 00c9  ld   $c9
              0fab 00fd  ld   $fd
              0fac 00bf  ld   $bf         4515  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fad 00b9  ld   $b9
              0fae 00bb  ld   $bb
              0faf 00fd  ld   $fd
              0fb0 0051  ld   $51         4516  ld('v6502_BCS'); ld('v6502_LDA'); ld('v6502_ILL'); ld('v6502_ILL') #6 $B0
              0fb1 00b9  ld   $b9
              0fb2 00fd  ld   $fd
              0fb3 00fd  ld   $fd
              0fb4 00bf  ld   $bf         4517  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX2');ld('v6502_ILL') #6
              0fb5 00b9  ld   $b9
              0fb6 00bd  ld   $bd
              0fb7 00fd  ld   $fd
              0fb8 00d1  ld   $d1         4518  ld('v6502_CLV'); ld('v6502_LDA'); ld('v6502_TSX'); ld('v6502_ILL') #6
              0fb9 00b9  ld   $b9
              0fba 00e5  ld   $e5
              0fbb 00fd  ld   $fd
              0fbc 00bf  ld   $bf         4519  ld('v6502_LDY'); ld('v6502_LDA'); ld('v6502_LDX'); ld('v6502_ILL') #6
              0fbd 00b9  ld   $b9
              0fbe 00bb  ld   $bb
              0fbf 00fd  ld   $fd
              0fc0 00e7  ld   $e7         4520  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $C0
              0fc1 00e9  ld   $e9
              0fc2 00fd  ld   $fd
              0fc3 00fd  ld   $fd
              0fc4 00e7  ld   $e7         4521  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fc5 00e9  ld   $e9
              0fc6 00eb  ld   $eb
              0fc7 00fd  ld   $fd
              0fc8 007b  ld   $7b         4522  ld('v6502_INY'); ld('v6502_CMP'); ld('v6502_DEX'); ld('v6502_ILL') #6
              0fc9 00e9  ld   $e9
              0fca 0077  ld   $77
              0fcb 00fd  ld   $fd
              0fcc 00e7  ld   $e7         4523  ld('v6502_CPY'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fcd 00e9  ld   $e9
              0fce 00eb  ld   $eb
              0fcf 00fd  ld   $fd
              0fd0 0055  ld   $55         4524  ld('v6502_BNE'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6 $D0
              0fd1 00e9  ld   $e9
              0fd2 00fd  ld   $fd
              0fd3 00fd  ld   $fd
              0fd4 00fd  ld   $fd         4525  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fd5 00e9  ld   $e9
              0fd6 00eb  ld   $eb
              0fd7 00fd  ld   $fd
              0fd8 00ed  ld   $ed         4526  ld('v6502_CLD'); ld('v6502_CMP'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0fd9 00e9  ld   $e9
              0fda 00fd  ld   $fd
              0fdb 00fd  ld   $fd
              0fdc 00fd  ld   $fd         4527  ld('v6502_ILL'); ld('v6502_CMP'); ld('v6502_DEC'); ld('v6502_ILL') #6
              0fdd 00e9  ld   $e9
              0fde 00eb  ld   $eb
              0fdf 00fd  ld   $fd
              0fe0 00ef  ld   $ef         4528  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $E0
              0fe1 0029  ld   $29
              0fe2 00fd  ld   $fd
              0fe3 00fd  ld   $fd
              0fe4 00ef  ld   $ef         4529  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fe5 0029  ld   $29
              0fe6 00b7  ld   $b7
              0fe7 00fd  ld   $fd
              0fe8 006c  ld   $6c         4530  ld('v6502_INX'); ld('v6502_SBC'); ld('v6502_NOP'); ld('v6502_ILL') #6
              0fe9 0029  ld   $29
              0fea 0083  ld   $83
              0feb 00fd  ld   $fd
              0fec 00ef  ld   $ef         4531  ld('v6502_CPX'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0fed 0029  ld   $29
              0fee 00b7  ld   $b7
              0fef 00fd  ld   $fd
              0ff0 0058  ld   $58         4532  ld('v6502_BEQ'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6 $F0
              0ff1 0029  ld   $29
              0ff2 00fd  ld   $fd
              0ff3 00fd  ld   $fd
              0ff4 00fd  ld   $fd         4533  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC'); ld('v6502_ILL') #6
              0ff5 0029  ld   $29
              0ff6 00b7  ld   $b7
              0ff7 00fd  ld   $fd
              0ff8 00fb  ld   $fb         4534  ld('v6502_SED'); ld('v6502_SBC'); ld('v6502_ILL'); ld('v6502_ILL') #6
              0ff9 0029  ld   $29
              0ffa 00fd  ld   $fd
              0ffb 00fd  ld   $fd
              0ffc 00fd  ld   $fd         4535  ld('v6502_ILL'); ld('v6502_SBC'); ld('v6502_INC')                  #6
              0ffd 0029  ld   $29
              0ffe 00b7  ld   $b7
              0fff fe00  bra  ac          4536  bra(AC)                         #6,7 Dispatch into next page
                                          4537  # --- Page boundary ---
                                          4538  align(0x100,size=0x100)
              1000 140e  ld   $0e,y       4539  ld(hi('v6502_next'),Y)          #8 Handy for instructions that don't clobber Y
                                          4540
                                          4541  label('v6502_ADC')
                                          4542  assert pc()&255 == 1
                                          4543  assert v6502_Cflag == 1
                                          4544  assert v6502_Vemu == 128
v6502_ADC:    1001 1525  ld   [$25],y     4545  ld([v6502_ADH],Y)               #9 Must be at page offset 1, so A=1
              1002 2127  anda [$27]       4546  anda([v6502_P])                 #10 Carry in (AC=1 because lo('v6502_ADC')=1)
              1003 8118  adda [$18]       4547  adda([v6502_A])                 #11 Sum
              1004 f020  beq  .adc14      4548  beq('.adc14')                   #12 Danger zone for dropping a carry
              1005 8d00  adda [y,x]       4549  adda([Y,X])                     #13
              1006 c228  st   [$28]       4550  st([v6502_Qz])                  #14 Z flag, don't overwrite left-hand side (A) yet
              1007 c229  st   [$29]       4551  st([v6502_Qn])                  #15 N flag
              1008 6118  xora [$18]       4552  xora([v6502_A])                 #16 V flag, (Q^A) & (B^Q) & 0x80
              1009 c218  st   [$18]       4553  st([v6502_A])                   #17
              100a 0d00  ld   [y,x]       4554  ld([Y,X])                       #18
              100b 6128  xora [$28]       4555  xora([v6502_Qz])                #19
              100c 2118  anda [$18]       4556  anda([v6502_A])                 #20
              100d 2080  anda $80         4557  anda(0x80)                      #21
              100e c21d  st   [$1d]       4558  st([v6502_Tmp])                 #22
              100f 0128  ld   [$28]       4559  ld([v6502_Qz])                  #23 Update A
              1010 c218  st   [$18]       4560  st([v6502_A])                   #24
              1011 e815  blt  .adc27      4561  bmi('.adc27')                   #25 C flag
              1012 ad00  suba [y,x]       4562  suba([Y,X])                     #26
              1013 fc17  bra  .adc29      4563  bra('.adc29')                   #27
              1014 4d00  ora  [y,x]       4564  ora([Y,X])                      #28
                                          4565  label('.adc27')
.adc27:       1015 2d00  anda [y,x]       4566  anda([Y,X])                     #27
              1016 0200  nop              4567  nop()                           #28
                                          4568  label('.adc29')
.adc29:       1017 3080  anda $80,x       4569  anda(0x80,X)                    #29
              1018 0127  ld   [$27]       4570  ld([v6502_P])                   #30 Update P
              1019 207e  anda $7e         4571  anda(~v6502_Vemu&~v6502_Cflag)  #31
              101a 4500  ora  [x]         4572  ora([X])                        #32
              101b 411d  ora  [$1d]       4573  ora([v6502_Tmp])                #33
              101c c227  st   [$27]       4574  st([v6502_P])                   #34
              101d 140e  ld   $0e,y       4575  ld(hi('v6502_next'),Y)          #35
              101e e020  jmp  y,$20       4576  jmp(Y,'v6502_next')             #36
              101f 00ed  ld   $ed         4577  ld(-38/2)                       #37
                                          4578  # Cin=1, A=$FF, B=$DD --> Result=$DD, Cout=1, V=0
                                          4579  # Cin=0, A=$00, B=$DD --> Result=$DD, Cout=0, V=0
                                          4580  label('.adc14')
.adc14:       1020 c218  st   [$18]       4581  st([v6502_A])                   #14 Special case
              1021 c228  st   [$28]       4582  st([v6502_Qz])                  #15 Z flag
              1022 c229  st   [$29]       4583  st([v6502_Qn])                  #16 N flag
              1023 0127  ld   [$27]       4584  ld([v6502_P])                   #17
              1024 207f  anda $7f         4585  anda(0x7f)                      #18 V=0, keep C
              1025 c227  st   [$27]       4586  st([v6502_P])                   #19
              1026 140e  ld   $0e,y       4587  ld(hi('v6502_next'),Y)          #20
              1027 00f4  ld   $f4         4588  ld(-24/2)                       #21
              1028 e020  jmp  y,$20       4589  jmp(Y,'v6502_next')             #22
                                          4590  #nop()                          #23 Overlap
                                          4591  #
                                          4592  label('v6502_SBC')
                                          4593  # No matter how hard we try, v6502_SBC always comes out a lot clumsier
                                          4594  # than v6502_ADC. And that one already barely fits in 38 cycles and is
                                          4595  # hard to follow. So we use a hack: transmorph our SBC into an ADC with
                                          4596  # inverted operand, and then dispatch again. Simple and effective.
v6502_SBC:    1029 1525  ld   [$25],y     4597  ld([v6502_ADH],Y)               #9,24
              102a 0d00  ld   [y,x]       4598  ld([Y,X])                       #10
              102b 60ff  xora $ff         4599  xora(255)                       #11 Invert right-hand side operand
              102c c219  st   [$19]       4600  st([v6502_BI])                  #12 Park modified operand for v6502_ADC
              102d 0019  ld   $19         4601  ld(v6502_BI&255)                #13 Address of BI
              102e d224  st   [$24],x     4602  st([v6502_ADL],X)               #14
              102f 0000  ld   $00         4603  ld(v6502_BI>>8)                 #15
              1030 c225  st   [$25]       4604  st([v6502_ADH])                 #16
              1031 0069  ld   $69         4605  ld(0x69)                        #17 ADC #$xx (Any ADC opcode will do)
              1032 c226  st   [$26]       4606  st([v6502_IR])                  #18
              1033 140e  ld   $0e,y       4607  ld(hi('v6502_check'),Y)         #20 Go back to time check before dispatch
              1034 e0f2  jmp  y,$f2       4608  jmp(Y,'v6502_check')            #20
              1035 00f5  ld   $f5         4609  ld(-22/2)                       #21
                                          4610
                                          4611  # Carry calculation table
                                          4612  #   L7 R7 C7   RX UC SC
                                          4613  #   -- -- -- | -- -- --
                                          4614  #    0  0  0 |  0  0  0
                                          4615  #    0  0  1 |  0  0  0
                                          4616  #    1  0  0 |  0  1 +1
                                          4617  #    1  0  1 |  0  0  0
                                          4618  #    0  1  0 | -1  1  0
                                          4619  #    0  1  1 | -1  0 -1
                                          4620  #    1  1  0 | -1  1  0
                                          4621  #    1  1  1 | -1  1  0
                                          4622  #   -- -- -- | -- -- --
                                          4623  #    ^  ^  ^    ^  ^  ^
                                          4624  #    |  |  |    |  |  `--- Carry of unsigned L + signed R: SC = RX + UC
                                          4625  #    |  |  |    |  `----- Carry of unsigned L + unsigned R: UC = C7 ? L7&R7 : L7|R7
                                          4626  #    |  |  |    `------- Sign extension of signed R
                                          4627  #    |  |  `--------- MSB of unextended L + R
                                          4628  #    |  `----------- MSB of right operand R
                                          4629  #    `------------- MSB of left operand L
                                          4630
                                          4631  label('v6502_CLC')
v6502_CLC:    1036 0127  ld   [$27]       4632  ld([v6502_P])                   #9
              1037 fc3b  bra  .sec12      4633  bra('.sec12')                   #10
                                          4634  label('v6502_SEC')
v6502_SEC:    1038 20fe  anda $fe         4635  anda(~v6502_Cflag)              #9,11 Overlap
              1039 0127  ld   [$27]       4636  ld([v6502_P])                   #10
              103a 4001  ora  $01         4637  ora(v6502_Cflag)                #11
                                          4638  label('.sec12')
.sec12:       103b c227  st   [$27]       4639  st([v6502_P])                   #12
              103c 0200  nop              4640  nop()                           #13
                                          4641  label('.next14')
.next14:      103d e020  jmp  y,$20       4642  jmp(Y,'v6502_next')             #14
              103e 00f8  ld   $f8         4643  ld(-16/2)                       #15
                                          4644
                                          4645  label('v6502_BPL')
v6502_BPL:    103f 0129  ld   [$29]       4646  ld([v6502_Qn])                  #9
              1040 e875  blt  .next12     4647  bmi('.next12')                  #10
              1041 f45b  bge  .branch13   4648  bpl('.branch13')                #11
                                          4649  #nop()                          #12 Overlap
                                          4650  label('v6502_BMI')
v6502_BMI:    1042 0129  ld   [$29]       4651  ld([v6502_Qn])                  #9,12
              1043 f475  bge  .next12     4652  bpl('.next12')                  #10
              1044 e85b  blt  .branch13   4653  bmi('.branch13')                #11
                                          4654  #nop()                          #12 Overlap
                                          4655  label('v6502_BVC')
v6502_BVC:    1045 0127  ld   [$27]       4656  ld([v6502_P])                   #9,12
              1046 2080  anda $80         4657  anda(v6502_Vemu)                #10
              1047 f05b  beq  .branch13   4658  beq('.branch13')                #11
              1048 ec3d  bne  .next14     4659  bne('.next14')                  #12
                                          4660  #nop()                          #13 Overlap
                                          4661  label('v6502_BVS')
v6502_BVS:    1049 0127  ld   [$27]       4662  ld([v6502_P])                   #9,13
              104a 2080  anda $80         4663  anda(v6502_Vemu)                #10
              104b ec5b  bne  .branch13   4664  bne('.branch13')                #11
              104c f03d  beq  .next14     4665  beq('.next14')                  #12
                                          4666  #nop()                          #13 Overlap
                                          4667  label('v6502_BCC')
v6502_BCC:    104d 0127  ld   [$27]       4668  ld([v6502_P])                   #9,13
              104e 2001  anda $01         4669  anda(v6502_Cflag)               #10
              104f f05b  beq  .branch13   4670  beq('.branch13')                #11
              1050 ec3d  bne  .next14     4671  bne('.next14')                  #12
                                          4672  #nop()                          #13 Overlap
                                          4673  label('v6502_BCS')
v6502_BCS:    1051 0127  ld   [$27]       4674  ld([v6502_P])                   #9,13
              1052 2001  anda $01         4675  anda(v6502_Cflag)               #10
              1053 ec5b  bne  .branch13   4676  bne('.branch13')                #11
              1054 f03d  beq  .next14     4677  beq('.next14')                  #12
                                          4678  #nop()                          #13 Overlap
                                          4679  label('v6502_BNE')
v6502_BNE:    1055 0128  ld   [$28]       4680  ld([v6502_Qz])                  #9,13
              1056 f075  beq  .next12     4681  beq('.next12')                  #10
              1057 ec5b  bne  .branch13   4682  bne('.branch13')                #11
                                          4683  #nop()                          #12 Overlap
                                          4684  label('v6502_BEQ')
v6502_BEQ:    1058 0128  ld   [$28]       4685  ld([v6502_Qz])                  #9,12
              1059 ec75  bne  .next12     4686  bne('.next12')                  #10
              105a f05b  beq  .branch13   4687  beq('.branch13')                #11
                                          4688  #nop()                          #12 Overlap
                                          4689  label('.branch13')
.branch13:    105b 0124  ld   [$24]       4690  ld([v6502_ADL])                 #13,12 PC + offset
              105c 811a  adda [$1a]       4691  adda([v6502_PCL])               #14
              105d c21a  st   [$1a]       4692  st([v6502_PCL])                 #15
              105e e862  blt  .bra0       4693  bmi('.bra0')                    #16 Carry
              105f a124  suba [$24]       4694  suba([v6502_ADL])               #17
              1060 fc64  bra  .bra1       4695  bra('.bra1')                    #18
              1061 4124  ora  [$24]       4696  ora([v6502_ADL])                #19
                                          4697  label('.bra0')
.bra0:        1062 2124  anda [$24]       4698  anda([v6502_ADL])               #18
              1063 0200  nop              4699  nop()                           #19
                                          4700  label('.bra1')
.bra1:        1064 3080  anda $80,x       4701  anda(0x80,X)                    #20
              1065 0500  ld   [x]         4702  ld([X])                         #21
              1066 8125  adda [$25]       4703  adda([v6502_ADH])               #22
              1067 811b  adda [$1b]       4704  adda([v6502_PCH])               #23
              1068 c21b  st   [$1b]       4705  st([v6502_PCH])                 #24
              1069 0200  nop              4706  nop()                           #25
              106a e020  jmp  y,$20       4707  jmp(Y,'v6502_next')             #26
              106b 00f2  ld   $f2         4708  ld(-28/2)                       #27
                                          4709
                                          4710  label('v6502_INX')
v6502_INX:    106c 0200  nop              4711  nop()                           #9
              106d 012a  ld   [$2a]       4712  ld([v6502_X])                   #10
              106e 8001  adda $01         4713  adda(1)                         #11
              106f c22a  st   [$2a]       4714  st([v6502_X])                   #12
                                          4715  label('.inx13')
.inx13:       1070 c228  st   [$28]       4716  st([v6502_Qz])                  #13 Z flag
              1071 c229  st   [$29]       4717  st([v6502_Qn])                  #14 N flag
              1072 00f7  ld   $f7         4718  ld(-18/2)                       #15
              1073 e020  jmp  y,$20       4719  jmp(Y,'v6502_next')             #16
              1074 0200  nop              4720  nop()                           #17
                                          4721
                                          4722  label('.next12')
.next12:      1075 e020  jmp  y,$20       4723  jmp(Y,'v6502_next')             #12
              1076 00f9  ld   $f9         4724  ld(-14/2)                       #13
                                          4725
                                          4726  label('v6502_DEX')
v6502_DEX:    1077 012a  ld   [$2a]       4727  ld([v6502_X])                   #9
              1078 a001  suba $01         4728  suba(1)                         #10
              1079 fc70  bra  .inx13      4729  bra('.inx13')                   #11
              107a c22a  st   [$2a]       4730  st([v6502_X])                   #12
                                          4731
                                          4732  label('v6502_INY')
v6502_INY:    107b 012b  ld   [$2b]       4733  ld([v6502_Y])                   #9
              107c 8001  adda $01         4734  adda(1)                         #10
              107d fc70  bra  .inx13      4735  bra('.inx13')                   #11
              107e c22b  st   [$2b]       4736  st([v6502_Y])                   #12
                                          4737
                                          4738  label('v6502_DEY')
v6502_DEY:    107f 012b  ld   [$2b]       4739  ld([v6502_Y])                   #9
              1080 a001  suba $01         4740  suba(1)                         #10
              1081 fc70  bra  .inx13      4741  bra('.inx13')                   #11
              1082 c22b  st   [$2b]       4742  st([v6502_Y])                   #12
                                          4743
                                          4744  label('v6502_NOP')
v6502_NOP:    1083 00fa  ld   $fa         4745  ld(-12/2)                       #9
              1084 e020  jmp  y,$20       4746  jmp(Y,'v6502_next')             #10
                                          4747  #nop()                          #11 Overlap
                                          4748  #
                                          4749  label('v6502_AND')
v6502_AND:    1085 1525  ld   [$25],y     4750  ld([v6502_ADH],Y)               #9,11
              1086 0118  ld   [$18]       4751  ld([v6502_A])                   #10
              1087 fc90  bra  .eor13      4752  bra('.eor13')                   #11
              1088 2d00  anda [y,x]       4753  anda([Y,X])                     #12
                                          4754
                                          4755  label('v6502_ORA')
v6502_ORA:    1089 1525  ld   [$25],y     4756  ld([v6502_ADH],Y)               #9
              108a 0118  ld   [$18]       4757  ld([v6502_A])                   #10
              108b fc90  bra  .eor13      4758  bra('.eor13')                   #11
                                          4759  label('v6502_EOR')
v6502_EOR:    108c 4d00  ora  [y,x]       4760  ora([Y,X])                      #12,9
                                          4761  #
                                          4762  #label('v6502_EOR')
                                          4763  #nop()                          #9 Overlap
              108d 1525  ld   [$25],y     4764  ld([v6502_ADH],Y)               #10
              108e 0118  ld   [$18]       4765  ld([v6502_A])                   #11
              108f 6d00  xora [y,x]       4766  xora([Y,X])                     #12
                                          4767  label('.eor13')
.eor13:       1090 c218  st   [$18]       4768  st([v6502_A])                   #13
              1091 c228  st   [$28]       4769  st([v6502_Qz])                  #14 Z flag
              1092 c229  st   [$29]       4770  st([v6502_Qn])                  #15 N flag
              1093 140e  ld   $0e,y       4771  ld(hi('v6502_next'),Y)          #16
              1094 00f6  ld   $f6         4772  ld(-20/2)                       #17
              1095 e020  jmp  y,$20       4773  jmp(Y,'v6502_next')             #18
                                          4774  #nop()                          #19 Overlap
                                          4775  #
                                          4776  label('v6502_JMP1')
v6502_JMP1:   1096 140d  ld   $0d,y       4777  ld(hi('v6502_jmp1'),Y)          #9,19 JMP $DDDD
              1097 e0d1  jmp  y,$d1       4778  jmp(Y,'v6502_jmp1')             #10
                                          4779  #nop()                          #11 Overlap
                                          4780  label('v6502_JMP2')
v6502_JMP2:   1098 140d  ld   $0d,y       4781  ld(hi('v6502_jmp2'),Y)          #9 JMP ($DDDD)
              1099 e0d9  jmp  y,$d9       4782  jmp(Y,'v6502_jmp2')             #10
                                          4783  #nop()                          #11 Overlap
                                          4784  label('v6502_JSR')
v6502_JSR:    109a 011c  ld   [$1c]       4785  ld([v6502_S])                   #9,11
              109b a002  suba $02         4786  suba(2)                         #10
              109c d21c  st   [$1c],x     4787  st([v6502_S],X)                 #11
              109d 1400  ld   $00,y       4788  ld(v6502_Stack>>8,Y)            #12
              109e 011b  ld   [$1b]       4789  ld([v6502_PCH])                 #13 Let ADL,ADH point to L operand
              109f c225  st   [$25]       4790  st([v6502_ADH])                 #14
              10a0 011a  ld   [$1a]       4791  ld([v6502_PCL])                 #15
              10a1 c224  st   [$24]       4792  st([v6502_ADL])                 #16
              10a2 8001  adda $01         4793  adda(1)                         #17 Push ++PC
              10a3 c21a  st   [$1a]       4794  st([v6502_PCL])                 #18 Let PCL,PCH point to H operand
              10a4 de00  st   [y,x++]     4795  st([Y,Xpp])                     #19
              10a5 f0a8  beq  $10a8       4796  beq(pc()+3)                     #20
              10a6 fca9  bra  $10a9       4797  bra(pc()+3)                     #21
              10a7 0000  ld   $00         4798  ld(0)                           #22
              10a8 0001  ld   $01         4799  ld(1)                           #22(!)
              10a9 811b  adda [$1b]       4800  adda([v6502_PCH])               #23
              10aa c21b  st   [$1b]       4801  st([v6502_PCH])                 #24
              10ab ce00  st   [y,x]       4802  st([Y,X])                       #25
              10ac 1124  ld   [$24],x     4803  ld([v6502_ADL],X)               #26 Fetch L
              10ad 1525  ld   [$25],y     4804  ld([v6502_ADH],Y)               #27
              10ae 0d00  ld   [y,x]       4805  ld([Y,X])                       #28
              10af 111a  ld   [$1a],x     4806  ld([v6502_PCL],X)               #29 Fetch H
              10b0 c21a  st   [$1a]       4807  st([v6502_PCL])                 #30
              10b1 151b  ld   [$1b],y     4808  ld([v6502_PCH],Y)               #31
              10b2 0d00  ld   [y,x]       4809  ld([Y,X])                       #32
              10b3 c21b  st   [$1b]       4810  st([v6502_PCH])                 #33
              10b4 140e  ld   $0e,y       4811  ld(hi('v6502_next'),Y)          #34
              10b5 00ed  ld   $ed         4812  ld(-38/2)                       #35
              10b6 e020  jmp  y,$20       4813  jmp(Y,'v6502_next')             #36
                                          4814  #nop()                          #37 Overlap
                                          4815  #
                                          4816  label('v6502_INC')
v6502_INC:    10b7 1411  ld   $11,y       4817  ld(hi('v6502_inc'),Y)           #9,37
              10b8 e00e  jmp  y,$0e       4818  jmp(Y,'v6502_inc')              #10
                                          4819  #nop()                          #11 Overlap
                                          4820  label('v6502_LDA')
v6502_LDA:    10b9 1411  ld   $11,y       4821  ld(hi('v6502_lda'),Y)           #9,11
              10ba e018  jmp  y,$18       4822  jmp(Y,'v6502_lda')              #10
                                          4823  #nop()                          #11 Overlap
                                          4824  label('v6502_LDX')
v6502_LDX:    10bb 1411  ld   $11,y       4825  ld(hi('v6502_ldx'),Y)           #9,11
              10bc e022  jmp  y,$22       4826  jmp(Y,'v6502_ldx')              #10
                                          4827  #nop()                          #11 Overlap
                                          4828  label('v6502_LDX2')
v6502_LDX2:   10bd 1411  ld   $11,y       4829  ld(hi('v6502_ldx2'),Y)          #9,11
              10be e02a  jmp  y,$2a       4830  jmp(Y,'v6502_ldx2')             #10
                                          4831  #nop()                          #11 Overlap
                                          4832  label('v6502_LDY')
v6502_LDY:    10bf 1411  ld   $11,y       4833  ld(hi('v6502_ldy'),Y)           #9,11
              10c0 e026  jmp  y,$26       4834  jmp(Y,'v6502_ldy')              #10
                                          4835  #nop()                          #11 Overlap
                                          4836  label('v6502_STA')
v6502_STA:    10c1 1411  ld   $11,y       4837  ld(hi('v6502_sta'),Y)           #9,11
              10c2 e034  jmp  y,$34       4838  jmp(Y,'v6502_sta')              #10
                                          4839  #nop()                          #11 Overlap
                                          4840  label('v6502_STX')
v6502_STX:    10c3 1411  ld   $11,y       4841  ld(hi('v6502_stx'),Y)           #9,11
              10c4 e03a  jmp  y,$3a       4842  jmp(Y,'v6502_stx')              #10
                                          4843  #nop()                          #11 Overlap
                                          4844  label('v6502_STX2')
v6502_STX2:   10c5 1411  ld   $11,y       4845  ld(hi('v6502_stx2'),Y)          #9,11
              10c6 e040  jmp  y,$40       4846  jmp(Y,'v6502_stx2')             #10
                                          4847  #nop()                          #11 Overlap
                                          4848  label('v6502_STY')
v6502_STY:    10c7 1411  ld   $11,y       4849  ld(hi('v6502_sty'),Y)           #9,11
              10c8 e048  jmp  y,$48       4850  jmp(Y,'v6502_sty')              #10
                                          4851  #nop()                          #11 Overlap
                                          4852  label('v6502_TAX')
v6502_TAX:    10c9 1411  ld   $11,y       4853  ld(hi('v6502_tax'),Y)           #9,11
              10ca e04d  jmp  y,$4d       4854  jmp(Y,'v6502_tax')              #10
                                          4855  #nop()                          #11 Overlap
                                          4856  label('v6502_TAY')
v6502_TAY:    10cb 1411  ld   $11,y       4857  ld(hi('v6502_tay'),Y)           #9,11
              10cc e062  jmp  y,$62       4858  jmp(Y,'v6502_tay')              #10
                                          4859  #nop()                          #11 Overlap
                                          4860  label('v6502_TXA')
v6502_TXA:    10cd 1411  ld   $11,y       4861  ld(hi('v6502_txa'),Y)           #9,11
              10ce e065  jmp  y,$65       4862  jmp(Y,'v6502_txa')              #10
                                          4863  #nop()                          #11 Overlap
                                          4864  label('v6502_TYA')
v6502_TYA:    10cf 1411  ld   $11,y       4865  ld(hi('v6502_tya'),Y)           #9,11
              10d0 e068  jmp  y,$68       4866  jmp(Y,'v6502_tya')              #10
                                          4867  #nop()                          #11 Overlap
                                          4868  label('v6502_CLV')
v6502_CLV:    10d1 1411  ld   $11,y       4869  ld(hi('v6502_clv'),Y)           #9,11
              10d2 e076  jmp  y,$76       4870  jmp(Y,'v6502_clv')              #10
                                          4871  #nop()                          #11 Overlap
                                          4872  label('v6502_RTI')
v6502_RTI:    10d3 1411  ld   $11,y       4873  ld(hi('v6502_rti'),Y)           #9,11
              10d4 e0e4  jmp  y,$e4       4874  jmp(Y,'v6502_rti')              #10
                                          4875  #nop()                          #11 Overlap
                                          4876  label('v6502_ROR')
v6502_ROR:    10d5 140d  ld   $0d,y       4877  ld(hi('v6502_ror'),Y)           #9,11
              10d6 e08f  jmp  y,$8f       4878  jmp(Y,'v6502_ror')              #10
                                          4879  #nop()                          #11 Overlap
                                          4880  label('v6502_LSR')
v6502_LSR:    10d7 140d  ld   $0d,y       4881  ld(hi('v6502_lsr'),Y)           #9,11
              10d8 e0a9  jmp  y,$a9       4882  jmp(Y,'v6502_lsr')              #10
                                          4883  #nop()                          #11 Overlap
                                          4884  label('v6502_PHA')
v6502_PHA:    10d9 140d  ld   $0d,y       4885  ld(hi('v6502_pha'),Y)           #9,11
              10da e0ee  jmp  y,$ee       4886  jmp(Y,'v6502_pha')              #10
                                          4887  #nop()                          #11 Overlap
                                          4888  label('v6502_CLI')
v6502_CLI:    10db 1411  ld   $11,y       4889  ld(hi('v6502_cli'),Y)           #9,11
              10dc e06b  jmp  y,$6b       4890  jmp(Y,'v6502_cli')              #10
                                          4891  #nop()                          #11 Overlap
                                          4892  label('v6502_RTS')
v6502_RTS:    10dd 1411  ld   $11,y       4893  ld(hi('v6502_rts'),Y)           #9,11
              10de e08f  jmp  y,$8f       4894  jmp(Y,'v6502_rts')              #10
                                          4895  #nop()                          #11 Overlap
                                          4896  label('v6502_PLA')
v6502_PLA:    10df 140d  ld   $0d,y       4897  ld(hi('v6502_pla'),Y)           #9,11
              10e0 e0e3  jmp  y,$e3       4898  jmp(Y,'v6502_pla')              #10
                                          4899  #nop()                          #11 Overlap
                                          4900  label('v6502_SEI')
v6502_SEI:    10e1 1411  ld   $11,y       4901  ld(hi('v6502_sei'),Y)           #9,11
              10e2 e06e  jmp  y,$6e       4902  jmp(Y,'v6502_sei')              #10
                                          4903  #nop()                          #11 Overlap
                                          4904  label('v6502_TXS')
v6502_TXS:    10e3 1411  ld   $11,y       4905  ld(hi('v6502_txs'),Y)           #9,11
              10e4 e05e  jmp  y,$5e       4906  jmp(Y,'v6502_txs')              #10
                                          4907  #nop()                          #11 Overlap
                                          4908  label('v6502_TSX')
v6502_TSX:    10e5 1411  ld   $11,y       4909  ld(hi('v6502_tsx'),Y)           #9,11
              10e6 e054  jmp  y,$54       4910  jmp(Y,'v6502_tsx')              #10
                                          4911  #nop()                          #11 Overlap
                                          4912  label('v6502_CPY')
v6502_CPY:    10e7 1411  ld   $11,y       4913  ld(hi('v6502_cpy'),Y)           #9,11
              10e8 e0bd  jmp  y,$bd       4914  jmp(Y,'v6502_cpy')              #10
                                          4915  #nop()                          #11 Overlap
                                          4916  label('v6502_CMP')
v6502_CMP:    10e9 1411  ld   $11,y       4917  ld(hi('v6502_cmp'),Y)           #9,11
              10ea e0be  jmp  y,$be       4918  jmp(Y,'v6502_cmp')              #10
                                          4919  #nop()                          #11 Overlap
                                          4920  label('v6502_DEC')
v6502_DEC:    10eb 1411  ld   $11,y       4921  ld(hi('v6502_dec'),Y)           #9,11
              10ec e005  jmp  y,$05       4922  jmp(Y,'v6502_dec')              #10
                                          4923  #nop()                          #11 Overlap
                                          4924  label('v6502_CLD')
v6502_CLD:    10ed 1411  ld   $11,y       4925  ld(hi('v6502_cld'),Y)           #9,11
              10ee e071  jmp  y,$71       4926  jmp(Y,'v6502_cld')              #10
                                          4927  #nop()                          #11 Overlap
                                          4928  label('v6502_CPX')
v6502_CPX:    10ef 1411  ld   $11,y       4929  ld(hi('v6502_cpx'),Y)           #9,11
              10f0 e0bb  jmp  y,$bb       4930  jmp(Y,'v6502_cpx')              #10
                                          4931  #nop()                          #11 Overlap
                                          4932  label('v6502_ASL')
v6502_ASL:    10f1 140d  ld   $0d,y       4933  ld(hi('v6502_asl'),Y)           #9,11
              10f2 e0cb  jmp  y,$cb       4934  jmp(Y,'v6502_asl')              #10
                                          4935  #nop()                          #11 Overlap
                                          4936  label('v6502_PHP')
v6502_PHP:    10f3 1411  ld   $11,y       4937  ld(hi('v6502_php'),Y)           #9,11
              10f4 e0a2  jmp  y,$a2       4938  jmp(Y,'v6502_php')              #10
                                          4939  #nop()                          #11 Overlap
                                          4940  label('v6502_BIT')
v6502_BIT:    10f5 1411  ld   $11,y       4941  ld(hi('v6502_bit'),Y)           #9
              10f6 e07d  jmp  y,$7d       4942  jmp(Y,'v6502_bit')              #10
                                          4943  #nop()                          #11 Overlap
                                          4944  label('v6502_ROL')
v6502_ROL:    10f7 140d  ld   $0d,y       4945  ld(hi('v6502_rol'),Y)           #9
              10f8 e0b8  jmp  y,$b8       4946  jmp(Y,'v6502_rol')              #10
                                          4947  #nop()                          #11 Overlap
                                          4948  label('v6502_PLP')
v6502_PLP:    10f9 1411  ld   $11,y       4949  ld(hi('v6502_plp'),Y)           #9
              10fa e0d4  jmp  y,$d4       4950  jmp(Y,'v6502_plp')              #10
                                          4951  #nop()                          #11 Overlap
                                          4952  label('v6502_SED')              # Decimal mode not implemented
v6502_SED:    10fb 1411  ld   $11,y       4953  ld(hi('v6502_sed'),Y)           #9,11
              10fc e074  jmp  y,$74       4954  jmp(Y,'v6502_sed')              #10
                                          4955  #nop()                          #11 Overlap
                                          4956  label('v6502_ILL') # All illegal opcodes map to BRK, except $FF which will crash
                                          4957  label('v6502_BRK')
v6502_ILL:
v6502_BRK:    10fd 140d  ld   $0d,y       4958  ld(hi('v6502_brk'),Y)           #9
              10fe e0f6  jmp  y,$f6       4959  jmp(Y,'v6502_brk')              #10
                                          4960  #nop()                          #11 Overlap
                                          4961
                                          4962  while pc()&255 < 255:
                                          4963    nop()
                                          4964
                                          4965  # `v6502_RESUME' is the interpreter's secondary entry point for when
                                          4966  # the opcode and operands were already fetched, just before the last hPulse.
                                          4967  # It must be at $xxff, prefably somewhere in v6502's own code pages.
                                          4968  label('v6502_RESUME')
                                          4969  assert (pc()&255) == 255
v6502_RESUME: 10ff a005  suba $05         4970  suba(v6502_adjust)              #0,11 v6502 secondary entry point
                                          4971  # --- Page boundary ---
                                          4972  align(0x100,size=0x200)
              1100 c215  st   [$15]       4973  st([vTicks])                    #1
              1101 1124  ld   [$24],x     4974  ld([v6502_ADL],X)               #2
              1102 140f  ld   $0f,y       4975  ld(hi('v6502_execute'),Y)       #3
              1103 e126  jmp  y,[$26]     4976  jmp(Y,[v6502_IR])               #4
              1104 fcff  bra  $ff         4977  bra(255)                        #5
                                          4978
                                          4979  label('v6502_dec')
v6502_dec:    1105 1525  ld   [$25],y     4980  ld([v6502_ADH],Y)               #12
              1106 0d00  ld   [y,x]       4981  ld([Y,X])                       #13
              1107 a001  suba $01         4982  suba(1)                         #14
              1108 ce00  st   [y,x]       4983  st([Y,X])                       #15
              1109 c228  st   [$28]       4984  st([v6502_Qz])                  #16 Z flag
              110a c229  st   [$29]       4985  st([v6502_Qn])                  #17 N flag
              110b 140e  ld   $0e,y       4986  ld(hi('v6502_next'),Y)          #18
              110c 00f5  ld   $f5         4987  ld(-22/2)                       #19
              110d e020  jmp  y,$20       4988  jmp(Y,'v6502_next')             #20
                                          4989  #nop()                          #21 Overlap
                                          4990  #
                                          4991  label('v6502_inc')
v6502_inc:    110e 1525  ld   [$25],y     4992  ld([v6502_ADH],Y)               #12,22
              110f 0d00  ld   [y,x]       4993  ld([Y,X])                       #13
              1110 8001  adda $01         4994  adda(1)                         #14
              1111 ce00  st   [y,x]       4995  st([Y,X])                       #15
              1112 c228  st   [$28]       4996  st([v6502_Qz])                  #16 Z flag
              1113 c229  st   [$29]       4997  st([v6502_Qn])                  #17 N flag
              1114 140e  ld   $0e,y       4998  ld(hi('v6502_next'),Y)          #18
              1115 00f5  ld   $f5         4999  ld(-22/2)                       #19
              1116 e020  jmp  y,$20       5000  jmp(Y,'v6502_next')             #20
              1117 0200  nop              5001  nop()                           #21
                                          5002
                                          5003  label('v6502_lda')
v6502_lda:    1118 0200  nop              5004  nop()                           #12
              1119 1525  ld   [$25],y     5005  ld([v6502_ADH],Y)               #13
              111a 0d00  ld   [y,x]       5006  ld([Y,X])                       #14
              111b c218  st   [$18]       5007  st([v6502_A])                   #15
                                          5008  label('.lda16')
.lda16:       111c c228  st   [$28]       5009  st([v6502_Qz])                  #16 Z flag
              111d c229  st   [$29]       5010  st([v6502_Qn])                  #17 N flag
              111e 0200  nop              5011  nop()                           #18
              111f 140e  ld   $0e,y       5012  ld(hi('v6502_next'),Y)          #19
              1120 e020  jmp  y,$20       5013  jmp(Y,'v6502_next')             #20
              1121 00f5  ld   $f5         5014  ld(-22/2)                       #21
                                          5015
                                          5016  label('v6502_ldx')
v6502_ldx:    1122 1525  ld   [$25],y     5017  ld([v6502_ADH],Y)               #12
              1123 0d00  ld   [y,x]       5018  ld([Y,X])                       #13
              1124 fc1c  bra  .lda16      5019  bra('.lda16')                   #14
              1125 c22a  st   [$2a]       5020  st([v6502_X])                   #15
                                          5021
                                          5022  label('v6502_ldy')
v6502_ldy:    1126 1525  ld   [$25],y     5023  ld([v6502_ADH],Y)               #12
              1127 0d00  ld   [y,x]       5024  ld([Y,X])                       #13
              1128 fc1c  bra  .lda16      5025  bra('.lda16')                   #14
              1129 c22b  st   [$2b]       5026  st([v6502_Y])                   #15
                                          5027
                                          5028  label('v6502_ldx2')
v6502_ldx2:   112a 0124  ld   [$24]       5029  ld([v6502_ADL])                 #12 Special case $B6: LDX $DD,Y
              112b a12a  suba [$2a]       5030  suba([v6502_X])                 #13 Undo X offset
              112c 912b  adda [$2b],x     5031  adda([v6502_Y],X)               #14 Apply Y instead
              112d 0500  ld   [x]         5032  ld([X])                         #15
              112e c22a  st   [$2a]       5033  st([v6502_X])                   #16
              112f c228  st   [$28]       5034  st([v6502_Qz])                  #17 Z flag
              1130 c229  st   [$29]       5035  st([v6502_Qn])                  #18 N flag
              1131 140e  ld   $0e,y       5036  ld(hi('v6502_next'),Y)          #19
              1132 e020  jmp  y,$20       5037  jmp(Y,'v6502_next')             #20
              1133 00f5  ld   $f5         5038  ld(-22/2)                       #21
                                          5039
                                          5040  label('v6502_sta')
v6502_sta:    1134 1525  ld   [$25],y     5041  ld([v6502_ADH],Y)               #12
              1135 0118  ld   [$18]       5042  ld([v6502_A])                   #13
              1136 ce00  st   [y,x]       5043  st([Y,X])                       #14
              1137 140e  ld   $0e,y       5044  ld(hi('v6502_next'),Y)          #15
              1138 e020  jmp  y,$20       5045  jmp(Y,'v6502_next')             #16
              1139 00f7  ld   $f7         5046  ld(-18/2)                       #17
                                          5047
                                          5048  label('v6502_stx')
v6502_stx:    113a 1525  ld   [$25],y     5049  ld([v6502_ADH],Y)               #12
              113b 012a  ld   [$2a]       5050  ld([v6502_X])                   #13
              113c ce00  st   [y,x]       5051  st([Y,X])                       #14
              113d 140e  ld   $0e,y       5052  ld(hi('v6502_next'),Y)          #15
              113e e020  jmp  y,$20       5053  jmp(Y,'v6502_next')             #16
              113f 00f7  ld   $f7         5054  ld(-18/2)                       #17
                                          5055
                                          5056  label('v6502_stx2')
v6502_stx2:   1140 0124  ld   [$24]       5057  ld([v6502_ADL])                 #12 Special case $96: STX $DD,Y
              1141 a12a  suba [$2a]       5058  suba([v6502_X])                 #13 Undo X offset
              1142 912b  adda [$2b],x     5059  adda([v6502_Y],X)               #14 Apply Y instead
              1143 012a  ld   [$2a]       5060  ld([v6502_X])                   #15
              1144 c600  st   [x]         5061  st([X])                         #16
              1145 140e  ld   $0e,y       5062  ld(hi('v6502_next'),Y)          #17
              1146 e020  jmp  y,$20       5063  jmp(Y,'v6502_next')             #18
              1147 00f6  ld   $f6         5064  ld(-20/2)                       #19
                                          5065
                                          5066  label('v6502_sty')
v6502_sty:    1148 1525  ld   [$25],y     5067  ld([v6502_ADH],Y)               #12
              1149 012b  ld   [$2b]       5068  ld([v6502_Y])                   #13
              114a ce00  st   [y,x]       5069  st([Y,X])                       #14
              114b 140e  ld   $0e,y       5070  ld(hi('v6502_next'),Y)          #15
              114c e020  jmp  y,$20       5071  jmp(Y,'v6502_next')             #16
                                          5072  label('v6502_tax')
v6502_tax:    114d 00f7  ld   $f7         5073  ld(-18/2)                       #17,12
                                          5074  #
                                          5075  #label('v6502_tax')
                                          5076  #nop()                          #12 Overlap
              114e 0118  ld   [$18]       5077  ld([v6502_A])                   #13
              114f c22a  st   [$2a]       5078  st([v6502_X])                   #14
                                          5079  label('.tax15')
.tax15:       1150 c228  st   [$28]       5080  st([v6502_Qz])                  #15 Z flag
              1151 c229  st   [$29]       5081  st([v6502_Qn])                  #16 N flag
              1152 140e  ld   $0e,y       5082  ld(hi('v6502_next'),Y)          #17
              1153 e020  jmp  y,$20       5083  jmp(Y,'v6502_next')             #18
                                          5084  label('v6502_tsx')
v6502_tsx:    1154 00f6  ld   $f6         5085  ld(-20/2)                       #19
                                          5086  #
                                          5087  #label('v6502_tsx')
                                          5088  #nop()                          #12 Overlap
              1155 011c  ld   [$1c]       5089  ld([v6502_S])                   #13
              1156 a001  suba $01         5090  suba(1)                         #14 Shift down on export
              1157 c22a  st   [$2a]       5091  st([v6502_X])                   #15
                                          5092  label('.tsx16')
.tsx16:       1158 c228  st   [$28]       5093  st([v6502_Qz])                  #16 Z flag
              1159 c229  st   [$29]       5094  st([v6502_Qn])                  #17 N flag
              115a 0200  nop              5095  nop()                           #18
              115b 140e  ld   $0e,y       5096  ld(hi('v6502_next'),Y)          #19
              115c e020  jmp  y,$20       5097  jmp(Y,'v6502_next')             #20
              115d 00f5  ld   $f5         5098  ld(-22/2)                       #21
                                          5099
                                          5100  label('v6502_txs')
v6502_txs:    115e 012a  ld   [$2a]       5101  ld([v6502_X])                   #12
              115f 8001  adda $01         5102  adda(1)                         #13 Shift up on import
              1160 fc58  bra  .tsx16      5103  bra('.tsx16')                   #14
              1161 c21c  st   [$1c]       5104  st([v6502_S])                   #15
                                          5105
                                          5106  label('v6502_tay')
v6502_tay:    1162 0118  ld   [$18]       5107  ld([v6502_A])                   #12
              1163 fc50  bra  .tax15      5108  bra('.tax15')                   #13
              1164 c22b  st   [$2b]       5109  st([v6502_Y])                   #14
                                          5110
                                          5111  label('v6502_txa')
v6502_txa:    1165 012a  ld   [$2a]       5112  ld([v6502_X])                   #12
              1166 fc50  bra  .tax15      5113  bra('.tax15')                   #13
              1167 c218  st   [$18]       5114  st([v6502_A])                   #14
                                          5115
                                          5116  label('v6502_tya')
v6502_tya:    1168 012b  ld   [$2b]       5117  ld([v6502_Y])                   #12
              1169 fc50  bra  .tax15      5118  bra('.tax15')                   #13
              116a c218  st   [$18]       5119  st([v6502_A])                   #14
                                          5120
                                          5121  label('v6502_cli')
v6502_cli:    116b 0127  ld   [$27]       5122  ld([v6502_P])                   #12
              116c fc79  bra  .clv15      5123  bra('.clv15')                   #13
              116d 20fb  anda $fb         5124  anda(~v6502_Iflag)              #14
                                          5125
                                          5126  label('v6502_sei')
v6502_sei:    116e 0127  ld   [$27]       5127  ld([v6502_P])                   #12
              116f fc79  bra  .clv15      5128  bra('.clv15')                   #13
              1170 4004  ora  $04         5129  ora(v6502_Iflag)                #14
                                          5130
                                          5131  label('v6502_cld')
v6502_cld:    1171 0127  ld   [$27]       5132  ld([v6502_P])                   #12
              1172 fc79  bra  .clv15      5133  bra('.clv15')                   #13
              1173 20f7  anda $f7         5134  anda(~v6502_Dflag)              #14
                                          5135
                                          5136  label('v6502_sed')
v6502_sed:    1174 0127  ld   [$27]       5137  ld([v6502_P])                   #12
              1175 fc79  bra  .clv15      5138  bra('.clv15')                   #13
                                          5139  label('v6502_clv')
v6502_clv:    1176 4008  ora  $08         5140  ora(v6502_Dflag)                #14,12 Overlap
                                          5141  #
                                          5142  #label('v6502_clv')
                                          5143  #nop()                          #12
              1177 0127  ld   [$27]       5144  ld([v6502_P])                   #13
              1178 207f  anda $7f         5145  anda(~v6502_Vemu)               #14
                                          5146  label('.clv15')
.clv15:       1179 c227  st   [$27]       5147  st([v6502_P])                   #15
              117a 140e  ld   $0e,y       5148  ld(hi('v6502_next'),Y)          #16
              117b 00f6  ld   $f6         5149  ld(-20/2)                       #17
              117c e020  jmp  y,$20       5150  jmp(Y,'v6502_next')             #18
                                          5151  label('v6502_bit')
v6502_bit:    117d 0200  nop              5152  nop()                           #19,12
                                          5153  #
                                          5154  #label('v6502_bit')
                                          5155  #nop()                          #12 Overlap
              117e 1124  ld   [$24],x     5156  ld([v6502_ADL],X)               #13
              117f 1525  ld   [$25],y     5157  ld([v6502_ADH],Y)               #14
              1180 0d00  ld   [y,x]       5158  ld([Y,X])                       #15
              1181 c229  st   [$29]       5159  st([v6502_Qn])                  #16 N flag
              1182 2118  anda [$18]       5160  anda([v6502_A])                 #17 This is a reason we keep N and Z in separate bytes
              1183 c228  st   [$28]       5161  st([v6502_Qz])                  #18 Z flag
              1184 0127  ld   [$27]       5162  ld([v6502_P])                   #19
              1185 207f  anda $7f         5163  anda(~v6502_Vemu)               #20
              1186 c227  st   [$27]       5164  st([v6502_P])                   #21
              1187 0d00  ld   [y,x]       5165  ld([Y,X])                       #22
              1188 8200  adda ac          5166  adda(AC)                        #23
              1189 2080  anda $80         5167  anda(v6502_Vemu)                #24
              118a 4127  ora  [$27]       5168  ora([v6502_P])                  #25
              118b c227  st   [$27]       5169  st([v6502_P])                   #26 Update V
              118c 140e  ld   $0e,y       5170  ld(hi('v6502_next'),Y)          #27
              118d e020  jmp  y,$20       5171  jmp(Y,'v6502_next')             #28
              118e 00f1  ld   $f1         5172  ld(-30/2)                       #29
                                          5173
                                          5174  label('v6502_rts')
v6502_rts:    118f 011c  ld   [$1c]       5175  ld([v6502_S])                   #12
              1190 1200  ld   ac,x        5176  ld(AC,X)                        #13
              1191 8002  adda $02         5177  adda(2)                         #14
              1192 c21c  st   [$1c]       5178  st([v6502_S])                   #15
              1193 1400  ld   $00,y       5179  ld(0,Y)                         #16
              1194 0d00  ld   [y,x]       5180  ld([Y,X])                       #17
              1195 de00  st   [y,x++]     5181  st([Y,Xpp])                     #18 Just X++
              1196 8001  adda $01         5182  adda(1)                         #19
              1197 c21a  st   [$1a]       5183  st([v6502_PCL])                 #20
              1198 f09b  beq  $119b       5184  beq(pc()+3)                     #21
              1199 fc9c  bra  $119c       5185  bra(pc()+3)                     #22
              119a 0000  ld   $00         5186  ld(0)                           #23
              119b 0001  ld   $01         5187  ld(1)                           #23(!)
              119c 8d00  adda [y,x]       5188  adda([Y,X])                     #24
              119d c21b  st   [$1b]       5189  st([v6502_PCH])                 #25
              119e 0200  nop              5190  nop()                           #26
              119f 140e  ld   $0e,y       5191  ld(hi('v6502_next'),Y)          #27
              11a0 e020  jmp  y,$20       5192  jmp(Y,'v6502_next')             #28
              11a1 00f1  ld   $f1         5193  ld(-30/2)                       #29
                                          5194
                                          5195  label('v6502_php')
v6502_php:    11a2 011c  ld   [$1c]       5196  ld([v6502_S])                   #12
              11a3 a001  suba $01         5197  suba(1)                         #13
              11a4 d21c  st   [$1c],x     5198  st([v6502_S],X)                 #14
              11a5 0127  ld   [$27]       5199  ld([v6502_P])                   #15
              11a6 20bd  anda $bd         5200  anda(~v6502_Vflag&~v6502_Zflag) #16 Keep Vemu,B,D,I,C
              11a7 f4aa  bge  $11aa       5201  bpl(pc()+3)                     #17 V to bit 6 and clear N
              11a8 fcaa  bra  $11aa       5202  bra(pc()+2)                     #18
              11a9 60c0  xora $c0         5203  xora(v6502_Vflag^v6502_Vemu)    #19
              11aa c600  st   [x]         5204  st([X])                         #19,20
              11ab 0128  ld   [$28]       5205  ld([v6502_Qz])                  #21 Z flag
              11ac f0af  beq  $11af       5206  beq(pc()+3)                     #22
              11ad fcb0  bra  $11b0       5207  bra(pc()+3)                     #23
              11ae 0000  ld   $00         5208  ld(0)                           #24
              11af 0002  ld   $02         5209  ld(v6502_Zflag)                 #24(!)
              11b0 4500  ora  [x]         5210  ora([X])                        #25
              11b1 c600  st   [x]         5211  st([X])                         #26
              11b2 0129  ld   [$29]       5212  ld([v6502_Qn])                  #27 N flag
              11b3 2080  anda $80         5213  anda(0x80)                      #28
              11b4 4500  ora  [x]         5214  ora([X])                        #29
              11b5 4020  ora  $20         5215  ora(v6502_Uflag)                #30 Unused bit
              11b6 c600  st   [x]         5216  st([X])                         #31
              11b7 0200  nop              5217  nop()                           #32
              11b8 140e  ld   $0e,y       5218  ld(hi('v6502_next'),Y)          #33
              11b9 e020  jmp  y,$20       5219  jmp(Y,'v6502_next')             #34
              11ba 00ee  ld   $ee         5220  ld(-36/2)                       #35
                                          5221
                                          5222  label('v6502_cpx')
v6502_cpx:    11bb fcc0  bra  .cmp14      5223  bra('.cmp14')                   #12
              11bc 012a  ld   [$2a]       5224  ld([v6502_X])                   #13
                                          5225
                                          5226  label('v6502_cpy')
v6502_cpy:    11bd fcc0  bra  .cmp14      5227  bra('.cmp14')                   #12
                                          5228  label('v6502_cmp')
v6502_cmp:    11be 012b  ld   [$2b]       5229  ld([v6502_Y])                   #13,12
                                          5230  #
                                          5231  #label('v6502_cmp')             #12 Overlap
                                          5232  assert v6502_Cflag == 1
              11bf 0118  ld   [$18]       5233  ld([v6502_A])                   #13
                                          5234  label('.cmp14')
.cmp14:       11c0 1525  ld   [$25],y     5235  ld([v6502_ADH],Y)               #14
              11c1 e8c7  blt  .cmp17      5236  bmi('.cmp17')                   #15 Carry?
              11c2 ad00  suba [y,x]       5237  suba([Y,X])                     #16
              11c3 c228  st   [$28]       5238  st([v6502_Qz])                  #17 Z flag
              11c4 c229  st   [$29]       5239  st([v6502_Qn])                  #18 N flag
              11c5 fccb  bra  .cmp21      5240  bra('.cmp21')                   #19
              11c6 4d00  ora  [y,x]       5241  ora([Y,X])                      #20
                                          5242  label('.cmp17')
.cmp17:       11c7 c228  st   [$28]       5243  st([v6502_Qz])                  #17 Z flag
              11c8 c229  st   [$29]       5244  st([v6502_Qn])                  #18 N flag
              11c9 2d00  anda [y,x]       5245  anda([Y,X])                     #19
              11ca 0200  nop              5246  nop()                           #20
                                          5247  label('.cmp21')
.cmp21:       11cb 6080  xora $80         5248  xora(0x80)                      #21
              11cc 3080  anda $80,x       5249  anda(0x80,X)                    #22 Move carry to bit 0
              11cd 0127  ld   [$27]       5250  ld([v6502_P])                   #23 C flag
              11ce 20fe  anda $fe         5251  anda(~1)                        #24
              11cf 4500  ora  [x]         5252  ora([X])                        #25
              11d0 c227  st   [$27]       5253  st([v6502_P])                   #26
              11d1 140e  ld   $0e,y       5254  ld(hi('v6502_next'),Y)          #27
              11d2 e020  jmp  y,$20       5255  jmp(Y,'v6502_next')             #28
              11d3 00f1  ld   $f1         5256  ld(-30/2)                       #29
                                          5257
                                          5258  label('v6502_plp')
                                          5259  assert v6502_Nflag == 128
                                          5260  assert 2*v6502_Vflag == v6502_Vemu
v6502_plp:    11d4 011c  ld   [$1c]       5261  ld([v6502_S])                   #12
              11d5 1200  ld   ac,x        5262  ld(AC,X)                        #13
              11d6 8001  adda $01         5263  adda(1)                         #14
              11d7 c21c  st   [$1c]       5264  st([v6502_S])                   #15
              11d8 0500  ld   [x]         5265  ld([X])                         #16
              11d9 c229  st   [$29]       5266  st([v6502_Qn])                  #17 N flag
              11da 2002  anda $02         5267  anda(v6502_Zflag)               #18
              11db 6002  xora $02         5268  xora(v6502_Zflag)               #19
              11dc c228  st   [$28]       5269  st([v6502_Qz])                  #20 Z flag
              11dd 0500  ld   [x]         5270  ld([X])                         #21
              11de 207f  anda $7f         5271  anda(~v6502_Vemu)               #22 V to bit 7
              11df 8040  adda $40         5272  adda(v6502_Vflag)               #23
              11e0 c227  st   [$27]       5273  st([v6502_P])                   #24 All other flags
              11e1 140e  ld   $0e,y       5274  ld(hi('v6502_next'),Y)          #25
              11e2 e020  jmp  y,$20       5275  jmp(Y,'v6502_next')             #26
              11e3 00f2  ld   $f2         5276  ld(-28/2)                       #27
                                          5277
                                          5278  label('v6502_rti')
v6502_rti:    11e4 011c  ld   [$1c]       5279  ld([v6502_S])                   #12
              11e5 1200  ld   ac,x        5280  ld(AC,X)                        #13
              11e6 8003  adda $03         5281  adda(3)                         #14
              11e7 c21c  st   [$1c]       5282  st([v6502_S])                   #15
              11e8 0500  ld   [x]         5283  ld([X])                         #16
              11e9 c229  st   [$29]       5284  st([v6502_Qn])                  #17 N flag
              11ea 2002  anda $02         5285  anda(v6502_Zflag)               #18
              11eb 6002  xora $02         5286  xora(v6502_Zflag)               #19
              11ec c228  st   [$28]       5287  st([v6502_Qz])                  #20 Z flag
              11ed 1400  ld   $00,y       5288  ld(0,Y)                         #21
              11ee 0d00  ld   [y,x]       5289  ld([Y,X])                       #22
              11ef de00  st   [y,x++]     5290  st([Y,Xpp])                     #23 Just X++
              11f0 207f  anda $7f         5291  anda(~v6502_Vemu)               #24 V to bit 7
              11f1 8040  adda $40         5292  adda(v6502_Vflag)               #25
              11f2 c227  st   [$27]       5293  st([v6502_P])                   #26 All other flags
              11f3 0d00  ld   [y,x]       5294  ld([Y,X])                       #27
              11f4 de00  st   [y,x++]     5295  st([Y,Xpp])                     #28 Just X++
              11f5 c21a  st   [$1a]       5296  st([v6502_PCL])                 #29
              11f6 0d00  ld   [y,x]       5297  ld([Y,X])                       #30
              11f7 c21b  st   [$1b]       5298  st([v6502_PCH])                 #31
              11f8 0200  nop              5299  nop()                           #32
              11f9 140e  ld   $0e,y       5300  ld(hi('v6502_next'),Y)          #33
              11fa e020  jmp  y,$20       5301  jmp(Y,'v6502_next')             #34
              11fb 00ee  ld   $ee         5302  ld(-36/2)                       #35
                                          5303
                                          5304  #-----------------------------------------------------------------------
                                          5305  #       Extended vertical blank logic: interrupts
                                          5306  #-----------------------------------------------------------------------
              11fc 0200  nop              5307  align(0x100)
              11fd 0200  nop
              11fe 0200  nop
              11ff 0200  nop
                                          5308
                                          5309  # Check if an IRQ handler is defined
                                          5310  label('vBlankFirst#81')
vBlankFirst#81:
              1200 09f6  ld   [y,$f6]     5311  ld([Y,vIRQ_v5])                 #81
              1201 49f7  ora  [y,$f7]     5312  ora([Y,vIRQ_v5+1])              #82
                                          5313  bne('vBlankFirst#85')           #83
              1202 ec09  bne  vBlankFirst#85
              1203 0116  ld   [$16]       5314  ld([vPC])                       #84
              1204 0044  ld   $44         5315  runVcpu(183-85-extra,           #85 Application cycles (scan line 0)
              1205 c21e  st   [$1e]
              1206 1502  ld   [$02],y
              1207 e0ff  jmp  y,$ff
              1208 001b  ld   $1b
                                          5316      '---D line 0 timeout but no irq',
                                          5317      returnTo='vBlankFirst#183')
                                          5318
                                          5319  label('vBlankFirst#85')
vBlankFirst#85:
              1209 c230  st   [$30]       5320  st([vIrqSave+0])                #85 Save vPC
              120a 0117  ld   [$17]       5321  ld([vPC+1])                     #86
              120b c231  st   [$31]       5322  st([vIrqSave+1])                #87
              120c 0118  ld   [$18]       5323  ld([vAC])                       #88 Save vAC
              120d c232  st   [$32]       5324  st([vIrqSave+2])                #89
              120e 0119  ld   [$19]       5325  ld([vAC+1])                     #90
              120f c233  st   [$33]       5326  st([vIrqSave+3])                #91
              1210 0102  ld   [$02]       5327  ld([vCpuSelect])                #92 Save vCpuSelect for PREFIX
              1211 c234  st   [$34]       5328  st([vIrqSave+4])                #93
              1212 09f6  ld   [y,$f6]     5329  ld([Y,vIRQ_v5])                 #94 Set vPC to vIRQ
              1213 a002  suba $02         5330  suba(2)                         #95
              1214 c216  st   [$16]       5331  st([vPC])                       #96
              1215 09f7  ld   [y,$f7]     5332  ld([Y,vIRQ_v5+1])               #97
              1216 c217  st   [$17]       5333  st([vPC+1])                     #98
              1217 0102  ld   [$02]       5334  ld([vCpuSelect])                #99 Handler must save this if needed
              1218 c219  st   [$19]       5335  st([vAC+1])                     #100
              1219 0000  ld   $00         5336  ld(0)                           #101
              121a c218  st   [$18]       5337  st([vAC])                       #102
              121b 0002  ld   $02         5338  ld(hi('ENTER'))                 #103 Set vCpuSelect to ENTER (=regular vCPU)
              121c c202  st   [$02]       5339  st([vCpuSelect])                #104
              121d 0044  ld   $44         5340  runVcpu(183-105-extra,          #105 Application cycles (scan line 0)
              121e c21e  st   [$1e]
              121f 1502  ld   [$02],y
              1220 e0ff  jmp  y,$ff
              1221 0011  ld   $11
                                          5341      '---D line 0 timeout with irq',
                                          5342      returnTo='vBlankFirst#183')
                                          5343
                                          5344  # vIRQ sequence WITH interpreter switch
                                          5345  label('vRTI#18')
vRTI#18:      1222 0500  ld   [x]         5346  ld([X])                         #18
              1223 c202  st   [$02]       5347  st([vCpuSelect])                #19
              1224 0130  ld   [$30]       5348  ld([0x30])                      #20
              1225 c216  st   [$16]       5349  st([vPC])                       #21
              1226 0131  ld   [$31]       5350  ld([0x31])                      #22
              1227 c217  st   [$17]       5351  st([vPC+1])                     #23
              1228 0132  ld   [$32]       5352  ld([0x32])                      #24
              1229 c218  st   [$18]       5353  st([vAC])                       #25
              122a 0133  ld   [$33]       5354  ld([0x33])                      #26
              122b c219  st   [$19]       5355  st([vAC+1])                     #27
              122c 0200  nop              5356  nop()                           #28
              122d 0200  nop              5357  nop()                           #29
              122e 0200  nop              5358  nop()                           #30 #0 This MUST match maxTicks, (ie maxTicks=30)
              122f 1403  ld   $03,y       5359  ld(hi('RESYNC'),Y)              #1
              1230 e00c  jmp  y,$0c       5360  jmp(Y,'RESYNC')                 #2
              1231 0115  ld   [$15]       5361  ld([vTicks])                    #3
                                          5362
                                          5363  # Entered last line of vertical blank (line 40)
                                          5364  label('vBlankLast#34')
                                          5365
                                          5366  #-----------------------------------------------------------------------
                                          5367  #       Extended vertical blank logic: game controller decoding
                                          5368  #-----------------------------------------------------------------------
                                          5369  #
                                          5370  # Game controller types
                                          5371  # TypeA: Based on 74LS165 shift register (not supported)
                                          5372  # TypeB: Based on CD4021B shift register (standard)
                                          5373  # TypeC: Based on priority encoder
                                          5374  #
                                          5375  # Notes:
                                          5376  # - TypeA was only used during development and first beta test, before ROM v1
                                          5377  # - TypeB appears as type A with negative logic levels
                                          5378  # - TypeB is the game controller type that comes with the original kit and ROM v1
                                          5379  # - TypeB is mimicked by BabelFish / Pluggy McPlugface
                                          5380  # - TypeB requires a prolonged /SER_LATCH, therefore vPulse is 8 scanlines, not 2
                                          5381  # - TypeB and TypeC can be sampled in the same scanline
                                          5382  # - TypeA is 1 scanline shifted as it looks at a different edge (XXX up or down?)
                                          5383  # - TypeC gives incomplete information: lower buttons overshadow higher ones
                                          5384  #
                                          5385  #       TypeC    Alias    Button TypeB
                                          5386  #       00000000  ^@   -> Right  11111110
                                          5387  #       00000001  ^A   -> Left   11111101
                                          5388  #       00000011  ^C   -> Down   11111011
                                          5389  #       00000111  ^G   -> Up     11110111
                                          5390  #       00001111  ^O   -> Start  11101111
                                          5391  #       00011111  ^_   -> Select 11011111
                                          5392  #       00111111  ?    -> B      10111111
                                          5393  #       01111111  DEL  -> A      01111111
                                          5394  #       11111111       -> (None) 11111111
                                          5395  #
                                          5396  #       Conversion formula:
                                          5397  #               f(x) := 254 - x
                                          5398
                                          5399  # Detect controller TypeC codes
vBlankLast#34:
              1232 010f  ld   [$0f]       5400  ld([serialRaw])                 #34 if serialRaw in [0,1,3,7,15,31,63,127,255]
              1233 8001  adda $01         5401  adda(1)                         #35
              1234 210f  anda [$0f]       5402  anda([serialRaw])               #36
              1235 ec46  bne  .buttons#39 5403  bne('.buttons#39')              #37
                                          5404
                                          5405  # TypeC
              1236 010f  ld   [$0f]       5406  ld([serialRaw])                 #38 [TypeC] if serialRaw < serialLast
              1237 8001  adda $01         5407  adda(1)                         #39
              1238 2110  anda [$10]       5408  anda([serialLast])              #40
              1239 ec3d  bne  .buttons#43 5409  bne('.buttons#43')              #41
              123a 00fe  ld   $fe         5410  ld(254)                         #42 then clear the selected bit
              123b 0200  nop              5411  nop()                           #43
              123c fc40  bra  .buttons#46 5412  bra('.buttons#46')              #44
                                          5413  label('.buttons#43')
.buttons#43:  123d a10f  suba [$0f]       5414  suba([serialRaw])               #43,45
              123e 2111  anda [$11]       5415  anda([buttonState])             #44
              123f c211  st   [$11]       5416  st([buttonState])               #45
                                          5417  label('.buttons#46')
.buttons#46:  1240 010f  ld   [$0f]       5418  ld([serialRaw])                 #46 Set the lower bits
              1241 4111  ora  [$11]       5419  ora([buttonState])              #47
                                          5420  label('.buttons#48')
.buttons#48:  1242 c211  st   [$11]       5421  st([buttonState])               #48
              1243 010f  ld   [$0f]       5422  ld([serialRaw])                 #49 Update serialLast for next pass
              1244 e0a5  jmp  y,$a5       5423  jmp(Y,'vBlankLast#52')          #50
              1245 c210  st   [$10]       5424  st([serialLast])                #51
                                          5425
                                          5426  # TypeB
                                          5427  # pChange = pNew & ~pOld
                                          5428  # nChange = nNew | ~nOld {DeMorgan}
                                          5429  label('.buttons#39')
.buttons#39:  1246 00ff  ld   $ff         5430  ld(255)                         #39 [TypeB] Bitwise edge-filter to detect button presses
              1247 6110  xora [$10]       5431  xora([serialLast])              #40
              1248 410f  ora  [$0f]       5432  ora([serialRaw])                #41 Catch button-press events
              1249 2111  anda [$11]       5433  anda([buttonState])             #42 Keep active button presses
              124a 410f  ora  [$0f]       5434  ora([serialRaw])                #43
              124b 0200  nop              5435  nop()                           #44
              124c 0200  nop              5436  nop()                           #45
              124d fc42  bra  .buttons#48 5437  bra('.buttons#48')              #46
              124e 0200  nop              5438  nop()                           #47
                                          5439
                                          5440
                                          5441  #-----------------------------------------------------------------------
                                          5442  #       More SYS functions, (0x1200)
                                          5443  #-----------------------------------------------------------------------
                                          5444  #
                                          5445  # SYS_Exec_88 implementation
                                          5446  label('sys_Exec')
sys_Exec:     124f d617  st   [$17],y     5447  st([vPC+1],Y)                   #18 Clear vPCH and Y
              1250 011c  ld   [$1c]       5448  ld([vSP])                       #19 Place ROM loader below current stack pointer
              1251 a037  suba $37         5449  suba(53+2)                      #20 (AC -> *+0) One extra word for PUSH
              1252 d21d  st   [$1d],x     5450  st([vTmp],X)                    #21
              1253 80fe  adda $fe         5451  adda(-2)                        #22 (AC -> *-2)
              1254 c216  st   [$16]       5452  st([vPC])                       #23
                                          5453  # Start of manually compiled vCPU section
              1255 dc75  st   $75,[y,x++] 5454  st('PUSH',    [Y,Xpp])          #24 *+0
              1256 dccf  st   $cf,[y,x++] 5455  st('CALL',    [Y,Xpp])          #25 *+26 Fetch first byte
              1257 8023  adda $23         5456  adda(33-(-2))                   #26 (AC -> *+33)
              1258 de00  st   [y,x++]     5457  st(           [Y,Xpp])          #27 *+27
              1259 dc5e  st   $5e,[y,x++] 5458  st('ST',      [Y,Xpp])          #28 *+3 Chunk copy loop
              125a dc27  st   $27,[y,x++] 5459  st(sysArgs+3, [Y,Xpp])          #29 *+4 High-address comes first
              125b dccf  st   $cf,[y,x++] 5460  st('CALL',    [Y,Xpp])          #30 *+5
              125c de00  st   [y,x++]     5461  st(           [Y,Xpp])          #31 *+6
              125d dc5e  st   $5e,[y,x++] 5462  st('ST',      [Y,Xpp])          #32 *+7
              125e dc26  st   $26,[y,x++] 5463  st(sysArgs+2, [Y,Xpp])          #33 *+8 Then the low address
              125f dccf  st   $cf,[y,x++] 5464  st('CALL',    [Y,Xpp])          #34 *+9
              1260 de00  st   [y,x++]     5465  st(           [Y,Xpp])          #35 *+10
              1261 dc5e  st   $5e,[y,x++] 5466  st('ST',      [Y,Xpp])          #36 *+11 Byte copy loop
              1262 dc28  st   $28,[y,x++] 5467  st(sysArgs+4, [Y,Xpp])          #37 *+12 Byte count (0 means 256)
              1263 dccf  st   $cf,[y,x++] 5468  st('CALL',    [Y,Xpp])          #38 *+13
              1264 de00  st   [y,x++]     5469  st(           [Y,Xpp])          #39 *+14
              1265 dcf0  st   $f0,[y,x++] 5470  st('POKE',    [Y,Xpp])          #40 *+15
              1266 dc26  st   $26,[y,x++] 5471  st(sysArgs+2, [Y,Xpp])          #41 *+16
              1267 dc93  st   $93,[y,x++] 5472  st('INC',     [Y,Xpp])          #42 *+17
              1268 dc26  st   $26,[y,x++] 5473  st(sysArgs+2, [Y,Xpp])          #43 *+18
              1269 dc1a  st   $1a,[y,x++] 5474  st('LD',      [Y,Xpp])          #44 *+19
              126a dc28  st   $28,[y,x++] 5475  st(sysArgs+4, [Y,Xpp])          #45 *+20
              126b dce6  st   $e6,[y,x++] 5476  st('SUBI',    [Y,Xpp])          #46 *+21
              126c dc01  st   $01,[y,x++] 5477  st(1,         [Y,Xpp])          #47 *+22
              126d dc35  st   $35,[y,x++] 5478  st('BCC',     [Y,Xpp])          #48 *+23
              126e dc72  st   $72,[y,x++] 5479  st('NE',      [Y,Xpp])          #49 *+24
              126f 80e8  adda $e8         5480  adda(11-2-33)                   #50 (AC -> *+9)
              1270 de00  st   [y,x++]     5481  st(           [Y,Xpp])          #51 *+25
              1271 dccf  st   $cf,[y,x++] 5482  st('CALL',    [Y,Xpp])          #52 *+26 Go to next block
              1272 8018  adda $18         5483  adda(33-9)                      #53 (AC -> *+33)
              1273 de00  st   [y,x++]     5484  st(           [Y,Xpp])          #54 *+27
              1274 dc35  st   $35,[y,x++] 5485  st('BCC',     [Y,Xpp])          #55 *+28
              1275 dc72  st   $72,[y,x++] 5486  st('NE',      [Y,Xpp])          #56 *+29
              1276 80e0  adda $e0         5487  adda(3-2-33)                    #57 (AC -> *+1)
              1277 de00  st   [y,x++]     5488  st(           [Y,Xpp])          #58 *+30
              1278 dc63  st   $63,[y,x++] 5489  st('POP',     [Y,Xpp])          #59 *+31 End
              1279 dcff  st   $ff,[y,x++] 5490  st('RET',     [Y,Xpp])          #60 *+32
                                          5491  # Pointer constant pointing to the routine below (for use by CALL)
              127a 8022  adda $22         5492  adda(35-1)                      #61 (AC -> *+35)
              127b de00  st   [y,x++]     5493  st(           [Y,Xpp])          #62 *+33
              127c dc00  st   $00,[y,x++] 5494  st(0,         [Y,Xpp])          #63 *+34
                                          5495  # Routine to read next byte from ROM and advance read pointer
              127d dc1a  st   $1a,[y,x++] 5496  st('LD',      [Y,Xpp])          #64 *+35 Test for end of ROM table
              127e dc24  st   $24,[y,x++] 5497  st(sysArgs+0, [Y,Xpp])          #65 *+36
              127f dc8c  st   $8c,[y,x++] 5498  st('XORI',    [Y,Xpp])          #66 *+37
              1280 dcfb  st   $fb,[y,x++] 5499  st(251,       [Y,Xpp])          #67 *+38
              1281 dc35  st   $35,[y,x++] 5500  st('BCC',     [Y,Xpp])          #68 *+39
              1282 dc72  st   $72,[y,x++] 5501  st('NE',      [Y,Xpp])          #69 *+40
              1283 8009  adda $09         5502  adda(46-2-35)                   #70 (AC -> *+44)
              1284 de00  st   [y,x++]     5503  st(           [Y,Xpp])          #71 *+41
              1285 dc5e  st   $5e,[y,x++] 5504  st('ST',      [Y,Xpp])          #72 *+42 Wrap to next ROM page
              1286 dc24  st   $24,[y,x++] 5505  st(sysArgs+0, [Y,Xpp])          #73 *+43
              1287 dc93  st   $93,[y,x++] 5506  st('INC',     [Y,Xpp])          #74 *+44
              1288 dc25  st   $25,[y,x++] 5507  st(sysArgs+1, [Y,Xpp])          #75 *+45
              1289 dc21  st   $21,[y,x++] 5508  st('LDW',     [Y,Xpp])          #76 *+46 Read next byte from ROM table
              128a dc24  st   $24,[y,x++] 5509  st(sysArgs+0, [Y,Xpp])          #77 *+47
              128b dc7f  st   $7f,[y,x++] 5510  st('LUP',     [Y,Xpp])          #78 *+48
              128c dc00  st   $00,[y,x++] 5511  st(0,         [Y,Xpp])          #79 *+49
              128d dc93  st   $93,[y,x++] 5512  st('INC',     [Y,Xpp])          #80 *+50 Increment read pointer
              128e dc24  st   $24,[y,x++] 5513  st(sysArgs+0, [Y,Xpp])          #81 *+51
              128f dcff  st   $ff,[y,x++] 5514  st('RET',     [Y,Xpp])          #82 *+52 Return
                                          5515  # Return to interpreter
              1290 1403  ld   $03,y       5516  ld(hi('REENTER'),Y)             #83
              1291 e0cb  jmp  y,$cb       5517  jmp(Y,'REENTER')                #84
              1292 00d4  ld   $d4         5518  ld(-88/2)                       #85
                                          5519
                                          5520  # SYS_VDrawBits_134 implementation
                                          5521  label('sys_VDrawBits')
sys_VDrawBits:
              1293 0000  ld   $00         5522  ld(0)                           #18
                                          5523  label('.sysVdb0')
.sysVdb0:     1294 c21d  st   [$1d]       5524  st([vTmp])                      #19+i*25
              1295 9529  adda [$29],y     5525  adda([sysArgs+5],Y)             #20+i*25 Y=[sysPos+1]+[vTmp]
              1296 0126  ld   [$26]       5526  ld([sysArgs+2])                 #21+i*25 Select color
              1297 e89a  blt  $129a       5527  bmi(pc()+3)                     #22+i*25
              1298 fc9b  bra  $129b       5528  bra(pc()+3)                     #23+i*25
              1299 0124  ld   [$24]       5529  ld([sysArgs+0])                 #24+i*25
              129a 0125  ld   [$25]       5530  ld([sysArgs+1])                 #24+i*25(!)
              129b ce00  st   [y,x]       5531  st([Y,X])                       #25+i*25 Draw pixel
              129c 0126  ld   [$26]       5532  ld([sysArgs+2])                 #26+i*25 Shift byte left
              129d 8200  adda ac          5533  adda(AC)                        #27+i*25
              129e c226  st   [$26]       5534  st([sysArgs+2])                 #28+i*25
              129f 011d  ld   [$1d]       5535  ld([vTmp])                      #29+i*25 Unrolled loop (once)
              12a0 8129  adda [$29]       5536  adda([sysArgs+5])               #31+i*25
              12a1 9401  adda $01,y       5537  adda(1,Y)                       #30+i*25 Y=[sysPos+1]+[vTmp]+1
              12a2 0126  ld   [$26]       5538  ld([sysArgs+2])                 #32+i*25 Select color
              12a3 e8a6  blt  $12a6       5539  bmi(pc()+3)                     #33+i*25
              12a4 fca7  bra  $12a7       5540  bra(pc()+3)                     #34+i*25
              12a5 0124  ld   [$24]       5541  ld([sysArgs+0])                 #35+i*25
              12a6 0125  ld   [$25]       5542  ld([sysArgs+1])                 #35+i*25(!)
              12a7 ce00  st   [y,x]       5543  st([Y,X])                       #36+i*25 Draw pixel
              12a8 0126  ld   [$26]       5544  ld([sysArgs+2])                 #37+i*25 Shift byte left
              12a9 8200  adda ac          5545  adda(AC)                        #38+i*25
              12aa c226  st   [$26]       5546  st([sysArgs+2])                 #39+i*25
              12ab 011d  ld   [$1d]       5547  ld([vTmp])                      #40+i*25 Loop counter
              12ac a006  suba $06         5548  suba(6)                         #41+i*25
              12ad ec94  bne  .sysVdb0    5549  bne('.sysVdb0')                 #42+i*25
              12ae 8008  adda $08         5550  adda(8)                         #43+i*25 Steps of 2
              12af 1403  ld   $03,y       5551  ld(hi('REENTER'),Y)             #119
              12b0 e0cb  jmp  y,$cb       5552  jmp(Y,'REENTER')                #120
              12b1 00c2  ld   $c2         5553  ld(-124/2)                      #121
                                          5554
                                          5555  # SYS_ResetWaveforms_v4_50 implementation
                                          5556  label('sys_ResetWaveforms')
sys_ResetWaveforms:
              12b2 0118  ld   [$18]       5557  ld([vAC+0])                     #18 X=4i
              12b3 8200  adda ac          5558  adda(AC)                        #19
              12b4 9200  adda ac,x        5559  adda(AC,X)                      #20
              12b5 0118  ld   [$18]       5560  ld([vAC+0])                     #21
              12b6 de00  st   [y,x++]     5561  st([Y,Xpp])                     #22 Sawtooth: T[4i+0] = i
              12b7 2020  anda $20         5562  anda(0x20)                      #23 Triangle: T[4i+1] = 2i if i<32 else 127-2i
              12b8 ecbb  bne  $12bb       5563  bne(pc()+3)                     #24
              12b9 0118  ld   [$18]       5564  ld([vAC+0])                     #25
              12ba fcbd  bra  $12bd       5565  bra(pc()+3)                     #26
              12bb 8118  adda [$18]       5566  adda([vAC+0])                   #26,27
              12bc 607f  xora $7f         5567  xora(127)                       #27
              12bd de00  st   [y,x++]     5568  st([Y,Xpp])                     #28
              12be 0118  ld   [$18]       5569  ld([vAC+0])                     #29 Pulse: T[4i+2] = 0 if i<32 else 63
              12bf 2020  anda $20         5570  anda(0x20)                      #30
              12c0 ecc3  bne  $12c3       5571  bne(pc()+3)                     #31
              12c1 fcc4  bra  $12c4       5572  bra(pc()+3)                     #32
              12c2 0000  ld   $00         5573  ld(0)                           #33
              12c3 003f  ld   $3f         5574  ld(63)                          #33(!)
              12c4 de00  st   [y,x++]     5575  st([Y,Xpp])                     #34
              12c5 0118  ld   [$18]       5576  ld([vAC+0])                     #35 Sawtooth: T[4i+3] = i
              12c6 ce00  st   [y,x]       5577  st([Y,X])                       #36
              12c7 8001  adda $01         5578  adda(1)                         #37 i += 1
              12c8 c218  st   [$18]       5579  st([vAC+0])                     #38
              12c9 6040  xora $40         5580  xora(64)                        #39 For 64 iterations
              12ca f0cd  beq  $12cd       5581  beq(pc()+3)                     #40
              12cb fcce  bra  $12ce       5582  bra(pc()+3)                     #41
              12cc 00fe  ld   $fe         5583  ld(-2)                          #42
              12cd 0000  ld   $00         5584  ld(0)                           #42(!)
              12ce 8116  adda [$16]       5585  adda([vPC])                     #43
              12cf c216  st   [$16]       5586  st([vPC])                       #44
              12d0 1403  ld   $03,y       5587  ld(hi('REENTER'),Y)             #45
              12d1 e0cb  jmp  y,$cb       5588  jmp(Y,'REENTER')                #46
              12d2 00e7  ld   $e7         5589  ld(-50/2)                       #47
                                          5590
                                          5591  # SYS_ShuffleNoise_v4_46 implementation
                                          5592  label('sys_ShuffleNoise')
sys_ShuffleNoise:
              12d3 1118  ld   [$18],x     5593  ld([vAC+0],X)                   #18 tmp = T[4j]
              12d4 0d00  ld   [y,x]       5594  ld([Y,X])                       #19
              12d5 c21d  st   [$1d]       5595  st([vTmp])                      #20
              12d6 1119  ld   [$19],x     5596  ld([vAC+1],X)                   #21 T[4j] = T[4i]
              12d7 0d00  ld   [y,x]       5597  ld([Y,X])                       #22
              12d8 1118  ld   [$18],x     5598  ld([vAC+0],X)                   #23
              12d9 ce00  st   [y,x]       5599  st([Y,X])                       #24
              12da 8200  adda ac          5600  adda(AC)                        #25 j += T[4i]
              12db 8200  adda ac          5601  adda(AC,)                       #26
              12dc 8118  adda [$18]       5602  adda([vAC+0])                   #27
              12dd c218  st   [$18]       5603  st([vAC+0])                     #28
              12de 1119  ld   [$19],x     5604  ld([vAC+1],X)                   #29 T[4i] = tmp
              12df 011d  ld   [$1d]       5605  ld([vTmp])                      #30
              12e0 ce00  st   [y,x]       5606  st([Y,X])                       #31
              12e1 0119  ld   [$19]       5607  ld([vAC+1])                     #32 i += 1
              12e2 8004  adda $04         5608  adda(4)                         #33
              12e3 c219  st   [$19]       5609  st([vAC+1])                     #34
              12e4 f0e7  beq  $12e7       5610  beq(pc()+3)                     #35 For 64 iterations
              12e5 fce8  bra  $12e8       5611  bra(pc()+3)                     #36
              12e6 00fe  ld   $fe         5612  ld(-2)                          #37
              12e7 0000  ld   $00         5613  ld(0)                           #37(!)
              12e8 8116  adda [$16]       5614  adda([vPC])                     #38
              12e9 c216  st   [$16]       5615  st([vPC])                       #39
              12ea 1403  ld   $03,y       5616  ld(hi('NEXTY'),Y)               #40
              12eb e000  jmp  y,$00       5617  jmp(Y,'NEXTY')                  #41
              12ec 00ea  ld   $ea         5618  ld(-44/2)                       #42
                                          5619
                                          5620
              12ed 0200  nop              5621  fillers(until=0xff)
              12ee 0200  nop
              12ef 0200  nop
              * 18 times
              12ff 0200  nop              5622  align(0x100, size=0x100)
                                          5623
                                          5624
                                          5625  #-----------------------------------------------------------------------
                                          5626  #       More SYS functions, (0x1300)
                                          5627  #-----------------------------------------------------------------------
                                          5628  #
                                          5629  # sys_Multiply_u8, res:u16 = x:u8 * y:u8
                                          5630  # sysArgs0,1=res, sysArgs2=x, sysArgs3=y, sysArgs4=count
                                          5631  label('SYS_Multiply_u8_vX_48')
SYS_Multiply_u8_vX_48:
              1300 0128  ld   [$28]       5632  ld([sysArgs+4])                 #15,
              1301 a001  suba $01         5633  suba(1)                         #16, count--
                                          5634  bge('.sys_multiply_u8_19')      #17,
              1302 f407  bge  .sys_multiply_u8_19
              1303 c228  st   [$28]       5635  st([sysArgs+4])                 #18,
              1304 1403  ld   $03,y       5636  ld(hi('REENTER'),Y)             #19,
              1305 e0cb  jmp  y,$cb       5637  jmp(Y,'REENTER')                #20,
              1306 00f4  ld   $f4         5638  ld(-24/2)                       #21,
                                          5639
                                          5640  label('.sys_multiply_u8_19')
.sys_multiply_u8_19:
              1307 0124  ld   [$24]       5641  ld([sysArgs+0])                 #19,
              1308 3080  anda $80,x       5642  anda(128,X)                     #20,
              1309 8124  adda [$24]       5643  adda([sysArgs+0])               #21,
              130a c224  st   [$24]       5644  st([sysArgs+0])                 #22,
              130b 0500  ld   [x]         5645  ld([X])                         #23,
              130c 8125  adda [$25]       5646  adda([sysArgs+1])               #24,
              130d 8125  adda [$25]       5647  adda([sysArgs+1])               #25,
              130e c225  st   [$25]       5648  st([sysArgs+1])                 #26, result <<1
              130f 0126  ld   [$26]       5649  ld([sysArgs+2])                 #27,
                                          5650  bmi('.sys_multiply_u8_30')      #28, if(x & 0x80)
              1310 e819  blt  .sys_multiply_u8_30
              1311 8126  adda [$26]       5651  adda([sysArgs+2])               #29,
              1312 c226  st   [$26]       5652  st([sysArgs+2])                 #30, x <<= 1
              1313 0116  ld   [$16]       5653  ld([vPC])                       #31,
              1314 a002  suba $02         5654  suba(2)                         #32,
              1315 c216  st   [$16]       5655  st([vPC])                       #33, restart
              1316 1403  ld   $03,y       5656  ld(hi('NEXTY'),Y)               #34,
              1317 e000  jmp  y,$00       5657  jmp(Y,'NEXTY')                  #35,
              1318 00ed  ld   $ed         5658  ld(-38/2)                       #36,
                                          5659
                                          5660  label('.sys_multiply_u8_30')
.sys_multiply_u8_30:
              1319 c226  st   [$26]       5661  st([sysArgs+2])                 #30, x <<= 1
              131a 0124  ld   [$24]       5662  ld([sysArgs+0])                 #31,
              131b 8127  adda [$27]       5663  adda([sysArgs+3])               #32,
              131c c224  st   [$24]       5664  st([sysArgs+0])                 #33, res.lo += y
                                          5665  bmi('.sys_multiply_u8_36')      #34, check carry
              131d e82a  blt  .sys_multiply_u8_36
              131e a127  suba [$27]       5666  suba([sysArgs+3])               #35, initial value of res.lo
              131f 4127  ora  [$27]       5667  ora([sysArgs+3])                #36, carry in bit 7
              1320 3080  anda $80,x       5668  anda(0x80,X)                    #37, move carry to bit 0
              1321 0500  ld   [x]         5669  ld([X])                         #38,
              1322 8125  adda [$25]       5670  adda([sysArgs+1])               #39,
              1323 c225  st   [$25]       5671  st([sysArgs+1])                 #40, res.hi += carry
              1324 0116  ld   [$16]       5672  ld([vPC])                       #41,
              1325 a002  suba $02         5673  suba(2)                         #42,
              1326 c216  st   [$16]       5674  st([vPC])                       #43, restart
              1327 1403  ld   $03,y       5675  ld(hi('NEXTY'),Y)               #44,
              1328 e000  jmp  y,$00       5676  jmp(Y,'NEXTY')                  #45,
              1329 00e8  ld   $e8         5677  ld(-48/2)                       #46,
                                          5678
                                          5679  label('.sys_multiply_u8_36')
.sys_multiply_u8_36:
              132a 2127  anda [$27]       5680  anda([sysArgs+3])               #36, carry in bit 7
              132b 3080  anda $80,x       5681  anda(0x80,X)                    #37, move carry to bit 0
              132c 0500  ld   [x]         5682  ld([X])                         #38,
              132d 8125  adda [$25]       5683  adda([sysArgs+1])               #39,
              132e c225  st   [$25]       5684  st([sysArgs+1])                 #40, res.hi += carry
              132f 0116  ld   [$16]       5685  ld([vPC])                       #41,
              1330 a002  suba $02         5686  suba(2)                         #42,
              1331 c216  st   [$16]       5687  st([vPC])                       #43, restart
              1332 1403  ld   $03,y       5688  ld(hi('NEXTY'),Y)               #44,
              1333 e000  jmp  y,$00       5689  jmp(Y,'NEXTY')                  #45,
              1334 00e8  ld   $e8         5690  ld(-48/2)                       #46,
                                          5691
                                          5692  # leave some room for updates
              1335 0200  nop              5693  fillers(until=0x40)
              1336 0200  nop
              1337 0200  nop
              * 11 times
                                          5694
                                          5695
                                          5696  # sys_OffsetVTableY, sysArgs0 = scanline:8, sysArgs1 = scanCount:8, sysArgs2,3 = videoTable:16
                                          5697  label('SYS_OffsetVTableY_vX_36')
SYS_OffsetVTableY_vX_36:
              1340 0124  ld   [$24]       5698  ld([sysArgs+0])                 #15, scanline
              1341 1126  ld   [$26],x     5699  ld([sysArgs+2],X)               #16,
              1342 1527  ld   [$27],y     5700  ld([sysArgs+3],Y)               #17,
              1343 ce00  st   [y,x]       5701  st([Y,X])                       #18, [videoTable] = scanline
              1344 8001  adda $01         5702  adda(1)                         #19,
              1345 c224  st   [$24]       5703  st([sysArgs+0])                 #20, scanline++
              1346 0126  ld   [$26]       5704  ld([sysArgs+2])                 #21,
              1347 8002  adda $02         5705  adda(2)                         #22,
              1348 c226  st   [$26]       5706  st([sysArgs+2])                 #23, videoTable += 2
              1349 0125  ld   [$25]       5707  ld([sysArgs+1])                 #24,
              134a a001  suba $01         5708  suba(1)                         #25,
                                          5709  beq('.sys_offsetvty_28')        #26,
              134b f053  beq  .sys_offsetvty_28
              134c c225  st   [$25]       5710  st([sysArgs+1])                 #27, scanCount--
              134d 0116  ld   [$16]       5711  ld([vPC])                       #28,
              134e a002  suba $02         5712  suba(2)                         #29,
              134f c216  st   [$16]       5713  st([vPC])                       #30, restart
              1350 1403  ld   $03,y       5714  ld(hi('REENTER'),Y)             #31,
              1351 e0cb  jmp  y,$cb       5715  jmp(Y,'REENTER')                #32,
              1352 00ee  ld   $ee         5716  ld(-36/2)                       #33,
                                          5717  label('.sys_offsetvty_28')
.sys_offsetvty_28:
              1353 1403  ld   $03,y       5718  ld(hi('NEXTY'),Y)               #28,
              1354 e000  jmp  y,$00       5719  jmp(Y,'NEXTY')                  #29,
              1355 00f0  ld   $f0         5720  ld(-32/2)                       #30,
                                          5721
                                          5722  # leave some room for updates
              1356 0200  nop              5723  fillers(until=0x60)
              1357 0200  nop
              1358 0200  nop
              * 10 times
                                          5724
                                          5725
                                          5726  # sys_FillByteSeq, sysArgs0,1=dst, sysArg2=start, sysArg3=step, sysArg4=count
                                          5727  label('SYS_FillByteSeq_vX_36')
SYS_FillByteSeq_vX_36:
              1360 1525  ld   [$25],y     5728  ld([sysArgs+1],Y)               #15 dst pointer
              1361 1124  ld   [$24],x     5729  ld([sysArgs+0],X)               #16,
              1362 0124  ld   [$24]       5730  ld([sysArgs+0])                 #17,
              1363 8001  adda $01         5731  adda(1)                         #18,
              1364 c224  st   [$24]       5732  st([sysArgs+0])                 #19, dst++
              1365 0126  ld   [$26]       5733  ld([sysArgs+2])                 #20,
              1366 ce00  st   [y,x]       5734  st([Y,X])                       #21, start
              1367 8127  adda [$27]       5735  adda([sysArgs+3])               #22,
              1368 c226  st   [$26]       5736  st([sysArgs+2])                 #23, start += step
              1369 0128  ld   [$28]       5737  ld([sysArgs+4])                 #24,
              136a a001  suba $01         5738  suba(1)                         #25,
                                          5739  beq('.sys_fillbyteseq_28')      #26,
              136b f073  beq  .sys_fillbyteseq_28
              136c c228  st   [$28]       5740  st([sysArgs+4])                 #27,
              136d 0116  ld   [$16]       5741  ld([vPC])                       #28,
              136e a002  suba $02         5742  suba(2)                         #29,
              136f c216  st   [$16]       5743  st([vPC])                       #30, restart
              1370 1403  ld   $03,y       5744  ld(hi('REENTER'),Y)             #31,
              1371 e0cb  jmp  y,$cb       5745  jmp(Y,'REENTER')                #32,
              1372 00ee  ld   $ee         5746  ld(-36/2)                       #33,
                                          5747  label('.sys_fillbyteseq_28')
.sys_fillbyteseq_28:
              1373 1403  ld   $03,y       5748  ld(hi('NEXTY'),Y)               #28,
              1374 e000  jmp  y,$00       5749  jmp(Y,'NEXTY')                  #29,
              1375 00f0  ld   $f0         5750  ld(-32/2)                       #30,
                                          5751
                                          5752  # leave some room for updates
              1376 0200  nop              5753  fillers(until=0x80)
              1377 0200  nop
              1378 0200  nop
              * 10 times
                                          5754
                                          5755
                                          5756  # sys_AddInt8Array, sysArgs0,1=src, sysArgs2,3=dst, sysArgs4=index, sysArgs5=count, dst(i) += src(i)
                                          5757  label('SYS_AddInt8Array_vX_40')
SYS_AddInt8Array_vX_40:
              1380 0124  ld   [$24]       5758  ld([sysArgs+0])                 #15,
              1381 9128  adda [$28],x     5759  adda([sysArgs+4],X)             #16,
              1382 1525  ld   [$25],y     5760  ld([sysArgs+1],Y)               #17,
              1383 0d00  ld   [y,x]       5761  ld([Y,X])                       #18,
              1384 c21d  st   [$1d]       5762  st([vTmp])                      #19
              1385 0126  ld   [$26]       5763  ld([sysArgs+2])                 #20,
              1386 9128  adda [$28],x     5764  adda([sysArgs+4],X)             #21,
              1387 1527  ld   [$27],y     5765  ld([sysArgs+3],Y)               #22,
              1388 011d  ld   [$1d]       5766  ld([vTmp])                      #23
              1389 8d00  adda [y,x]       5767  adda([Y,X])                     #24,
              138a ce00  st   [y,x]       5768  st([Y,X])                       #25,
              138b 0129  ld   [$29]       5769  ld([sysArgs+5])                 #26,
              138c a001  suba $01         5770  suba(1)                         #27,
                                          5771  beq('.sys_addint8Array_30')     #28,
              138d f098  beq  .sys_addint8Array_30
              138e c229  st   [$29]       5772  st([sysArgs+5])                 #29,
              138f 0128  ld   [$28]       5773  ld([sysArgs+4])                 #30,
              1390 8001  adda $01         5774  adda(1)                         #31,
              1391 c228  st   [$28]       5775  st([sysArgs+4])                 #32, index++
              1392 0116  ld   [$16]       5776  ld([vPC])                       #33,
              1393 a002  suba $02         5777  suba(2)                         #34,
              1394 c216  st   [$16]       5778  st([vPC])                       #35,
              1395 1403  ld   $03,y       5779  ld(hi('NEXTY'),Y)               #36,
              1396 e000  jmp  y,$00       5780  jmp(Y,'NEXTY')                  #37,
              1397 00ec  ld   $ec         5781  ld(-40/2)                       #38,
                                          5782  label('.sys_addint8Array_30')
.sys_addint8Array_30:
              1398 1403  ld   $03,y       5783  ld(hi('NEXTY'),Y)               #30,
              1399 e000  jmp  y,$00       5784  jmp(Y,'NEXTY')                  #31,
              139a 00ef  ld   $ef         5785  ld(-34/2)                       #32,
                                          5786
                                          5787  # leave some room for updates
              139b 0200  nop              5788  fillers(until=0xa0)
              139c 0200  nop
              139d 0200  nop
              * 5 times
                                          5789
                                          5790
                                          5791  # sys_ParityFill, sysArgs0,1=borderColour:fillColour, sysArgs2,3=X:Y start address
                                          5792  #                 sysArgs4=countXY, sysArgs6=fill toggle, sysArgs7=replace colour
                                          5793  label('SYS_ParityFill_vX_44')
SYS_ParityFill_vX_44:
              13a0 1527  ld   [$27],y     5794  ld([sysArgs+3],Y)               #15,
              13a1 1126  ld   [$26],x     5795  ld([sysArgs+2],X)               #16,
              13a2 0126  ld   [$26]       5796  ld([sysArgs+2])                 #17,
              13a3 8001  adda $01         5797  adda(1)                         #18,
              13a4 c226  st   [$26]       5798  st([sysArgs+2])                 #19, x++
              13a5 0128  ld   [$28]       5799  ld([sysArgs+4])                 #20,
              13a6 a001  suba $01         5800  suba(1)                         #21, countX--
                                          5801  bge('.sys_parityfill_24')       #22,
              13a7 f4be  bge  .sys_parityfill_24
              13a8 c228  st   [$28]       5802  st([sysArgs+4])                 #23,
              13a9 0127  ld   [$27]       5803  ld([sysArgs+3])                 #24,
              13aa 8001  adda $01         5804  adda(1)                         #25,
              13ab c227  st   [$27]       5805  st([sysArgs+3])                 #26, y++
              13ac 0129  ld   [$29]       5806  ld([sysArgs+5])                 #27,
              13ad a001  suba $01         5807  suba(1)                         #28, countY--
              13ae c229  st   [$29]       5808  st([sysArgs+5])                 #29,
                                          5809  bne('.sys_parityfill_32')       #30,
              13af ecb3  bne  .sys_parityfill_32
              13b0 1403  ld   $03,y       5810  ld(hi('REENTER'),Y)             #31,
              13b1 e0cb  jmp  y,$cb       5811  jmp(Y,'REENTER')                #32,
              13b2 00ee  ld   $ee         5812  ld(-36/2)                       #33,
                                          5813  label('.sys_parityfill_32')
.sys_parityfill_32:
              13b3 0182  ld   [$82]       5814  ld([0x82])                      #32,
              13b4 c226  st   [$26]       5815  st([sysArgs+2])                 #33, restore x
              13b5 0183  ld   [$83]       5816  ld([0x83])                      #34,
              13b6 c228  st   [$28]       5817  st([sysArgs+4])                 #35, restore countX
              13b7 0184  ld   [$84]       5818  ld([0x84])                      #36,
              13b8 c22a  st   [$2a]       5819  st([sysArgs+6])                 #37, restore fill toggle
              13b9 0116  ld   [$16]       5820  ld([vPC])                       #38,
              13ba a002  suba $02         5821  suba(2)                         #39,
              13bb c216  st   [$16]       5822  st([vPC])                       #40, restart
              13bc e000  jmp  y,$00       5823  jmp(Y,'NEXTY')                  #41,
              13bd 00ea  ld   $ea         5824  ld(-44/2)                       #42,
                                          5825
                                          5826  label('.sys_parityfill_24')
.sys_parityfill_24:
              13be 012a  ld   [$2a]       5827  ld([sysArgs+6])                 #24, check fill toggle
                                          5828  bne('.sys_parityfill_27')       #25,
              13bf ecc9  bne  .sys_parityfill_27
              13c0 0d00  ld   [y,x]       5829  ld([Y,X])                       #26, get pixel
              13c1 6124  xora [$24]       5830  xora([sysArgs+0])               #27, check border colour
                                          5831  beq('.sys_parityfill_30')       #28,
              13c2 f0d8  beq  .sys_parityfill_30
              13c3 0116  ld   [$16]       5832  ld([vPC])                       #29,
              13c4 a002  suba $02         5833  suba(2)                         #30,
              13c5 c216  st   [$16]       5834  st([vPC])                       #31, restart
              13c6 1403  ld   $03,y       5835  ld(hi('NEXTY'),Y)               #32,
              13c7 e000  jmp  y,$00       5836  jmp(Y,'NEXTY')                  #33,
              13c8 00ee  ld   $ee         5837  ld(-36/2)                       #34,
                                          5838
                                          5839  label('.sys_parityfill_27')
.sys_parityfill_27:
              13c9 6124  xora [$24]       5840  xora([sysArgs+0])               #27, check border colour
                                          5841  beq('.sys_parityfill_30')       #28,
              13ca f0d8  beq  .sys_parityfill_30
              13cb 0d00  ld   [y,x]       5842  ld([Y,X])                       #29, get pixel
              13cc 612b  xora [$2b]       5843  xora([sysArgs+7])               #30, check replace colour
              13cd ecd0  bne  $13d0       5844  bne(pc()+3)                     #31, ignore replace colour
              13ce fcd1  bra  $13d1       5845  bra(pc()+3)                     #32,
              13cf 0125  ld   [$25]       5846  ld([sysArgs+1])                 #33, fill colour
              13d0 0d00  ld   [y,x]       5847  ld([Y,X])                       #33! get pixel
              13d1 ce00  st   [y,x]       5848  st([Y,X])                       #34, set pixel
              13d2 0116  ld   [$16]       5849  ld([vPC])                       #35,
              13d3 a002  suba $02         5850  suba(2)                         #36,
              13d4 c216  st   [$16]       5851  st([vPC])                       #37, restart
              13d5 1403  ld   $03,y       5852  ld(hi('NEXTY'),Y)               #38,
              13d6 e000  jmp  y,$00       5853  jmp(Y,'NEXTY')                  #39,
              13d7 00eb  ld   $eb         5854  ld(-42/2)                       #40,
                                          5855
                                          5856  label('.sys_parityfill_30')
.sys_parityfill_30:
              13d8 012a  ld   [$2a]       5857  ld([sysArgs+6])                 #30,
              13d9 6001  xora $01         5858  xora(0x01)                      #31,
              13da c22a  st   [$2a]       5859  st([sysArgs+6])                 #32, toggle fill
              13db 0116  ld   [$16]       5860  ld([vPC])                       #33,
              13dc a002  suba $02         5861  suba(2)                         #34,
              13dd c216  st   [$16]       5862  st([vPC])                       #35, restart
              13de 1403  ld   $03,y       5863  ld(hi('NEXTY'),Y)               #36,
              13df e000  jmp  y,$00       5864  jmp(Y,'NEXTY')                  #37,
              13e0 00ec  ld   $ec         5865  ld(-40/2)                       #38,
                                          5866
                                          5867
              13e1 0200  nop              5868  fillers(until=0xff)
              13e2 0200  nop
              13e3 0200  nop
              * 30 times
              13ff 0200  nop              5869  align(0x100, size=0x100)
                                          5870
                                          5871  #-----------------------------------------------------------------------
                                          5872  #       More vCPU instruction implementations, (0x1400)
                                          5873  #-----------------------------------------------------------------------
                                          5874  #
                                          5875  # JGT implementation
                                          5876  label('jgt#13')
jgt#13:       1400 0119  ld   [$19]       5877  ld([vAC+1])                     #13
              1401 e80a  blt  .jgt#16     5878  blt('.jgt#16')                  #14 if vAC.hi < 0
              1402 4118  ora  [$18]       5879  ora([vAC])                      #15
              1403 ec10  bne  .jgt#18     5880  bne('.jgt#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              1404 0116  ld   [$16]       5881  ld([vPC])                       #17
              1405 8001  adda $01         5882  adda(1)                         #18
              1406 c216  st   [$16]       5883  st([vPC])                       #19
              1407 1403  ld   $03,y       5884  ld(hi('NEXTY'),Y)               #20
              1408 e000  jmp  y,$00       5885  jmp(Y,'NEXTY')                  #21
              1409 00f4  ld   $f4         5886  ld(-24/2)                       #22
                                          5887  label('.jgt#16')
.jgt#16:      140a 0116  ld   [$16]       5888  ld([vPC])                       #16
              140b 8001  adda $01         5889  adda(1)                         #17
              140c c216  st   [$16]       5890  st([vPC])                       #18
              140d 1403  ld   $03,y       5891  ld(hi('REENTER'),Y)             #19
              140e e0cb  jmp  y,$cb       5892  jmp(Y,'REENTER')                #20
              140f 00f4  ld   $f4         5893  ld(-24/2)                       #21
                                          5894  label('.jgt#18')
.jgt#18:      1410 1517  ld   [$17],y     5895  ld([vPC+1],Y)                   #18 vPC.hi
              1411 0d00  ld   [y,x]       5896  ld([Y,X])                       #19 address of branch destination
              1412 c216  st   [$16]       5897  st([vPC])                       #20
              1413 de00  st   [y,x++]     5898  st([Y,Xpp])                     #21
              1414 0d00  ld   [y,x]       5899  ld([Y,X])                       #22 hi address of jump destination
              1415 c217  st   [$17]       5900  st([vPC+1])                     #23
              1416 1403  ld   $03,y       5901  ld(hi('NEXTY'),Y)               #24
              1417 e000  jmp  y,$00       5902  jmp(Y,'NEXTY')                  #25
              1418 00f2  ld   $f2         5903  ld(-28/2)                       #26
                                          5904
                                          5905  # JLE implementation
                                          5906  label('jle#13')
jle#13:       1419 0119  ld   [$19]       5907  ld([vAC+1])                     #13
              141a e827  blt  .jle#16     5908  blt('.jle#16')                  #14 if vAC.hi < 0
              141b 4118  ora  [$18]       5909  ora([vAC])                      #15
              141c ec30  bne  .jle#18     5910  bne('.jle#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              141d 0116  ld   [$16]       5911  ld([vPC])                       #17
              141e 1517  ld   [$17],y     5912  ld([vPC+1],Y)                   #18 vPC.hi
              141f 0d00  ld   [y,x]       5913  ld([Y,X])                       #19 address of branch destination
              1420 c216  st   [$16]       5914  st([vPC])                       #20
              1421 de00  st   [y,x++]     5915  st([Y,Xpp])                     #21
              1422 0d00  ld   [y,x]       5916  ld([Y,X])                       #22 hi address of jump destination
              1423 c217  st   [$17]       5917  st([vPC+1])                     #23
              1424 1403  ld   $03,y       5918  ld(hi('NEXTY'),Y)               #24
              1425 e000  jmp  y,$00       5919  jmp(Y,'NEXTY')                  #25
              1426 00f2  ld   $f2         5920  ld(-28/2)                       #26
                                          5921  label('.jle#16')
.jle#16:      1427 1517  ld   [$17],y     5922  ld([vPC+1],Y)                   #16 vPC.hi
              1428 0d00  ld   [y,x]       5923  ld([Y,X])                       #17 address of branch destination
              1429 c216  st   [$16]       5924  st([vPC])                       #18
              142a de00  st   [y,x++]     5925  st([Y,Xpp])                     #19
              142b 0d00  ld   [y,x]       5926  ld([Y,X])                       #20 hi address of jump destination
              142c c217  st   [$17]       5927  st([vPC+1])                     #21
              142d 1403  ld   $03,y       5928  ld(hi('NEXTY'),Y)               #22
              142e e000  jmp  y,$00       5929  jmp(Y,'NEXTY')                  #23
              142f 00f3  ld   $f3         5930  ld(-26/2)                       #24
                                          5931  label('.jle#18')
.jle#18:      1430 8001  adda $01         5932  adda(1)                         #18
              1431 c216  st   [$16]       5933  st([vPC])                       #19
              1432 1403  ld   $03,y       5934  ld(hi('NEXTY'),Y)               #20
              1433 e000  jmp  y,$00       5935  jmp(Y,'NEXTY')                  #21
              1434 00f4  ld   $f4         5936  ld(-24/2)                       #22
                                          5937
                                          5938  # JGE implementation
                                          5939  label('jge#13')
jge#13:       1435 0119  ld   [$19]       5940  ld([vAC+1])                     #13
              1436 e841  blt  .jge#16     5941  blt('.jge#16')                  #14 if vAC.hi < 0
              1437 0116  ld   [$16]       5942  ld([vPC])                       #15
              1438 1517  ld   [$17],y     5943  ld([vPC+1],Y)                   #16 vPC.hi
              1439 0d00  ld   [y,x]       5944  ld([Y,X])                       #17 address of branch destination
              143a c216  st   [$16]       5945  st([vPC])                       #18
              143b de00  st   [y,x++]     5946  st([Y,Xpp])                     #19
              143c 0d00  ld   [y,x]       5947  ld([Y,X])                       #20 hi address of jump destination
              143d c217  st   [$17]       5948  st([vPC+1])                     #21
              143e 1403  ld   $03,y       5949  ld(hi('NEXTY'),Y)               #22
              143f e000  jmp  y,$00       5950  jmp(Y,'NEXTY')                  #23
              1440 00f3  ld   $f3         5951  ld(-26/2)                       #24
                                          5952  label('.jge#16')
.jge#16:      1441 8001  adda $01         5953  adda(1)                         #16
              1442 c216  st   [$16]       5954  st([vPC])                       #17
              1443 1403  ld   $03,y       5955  ld(hi('NEXTY'),Y)               #18
              1444 e000  jmp  y,$00       5956  jmp(Y,'NEXTY')                  #19
              1445 00f5  ld   $f5         5957  ld(-22/2)                       #20
                                          5958
                                          5959
                                          5960  # PEEKA+ implementation
                                          5961  label('peeka+#13')
peeka+#13:    1446 c21d  st   [$1d]       5962  st([vTmp])                      #13
              1447 1519  ld   [$19],y     5963  ld([vAC+1],Y)                   #14
              1448 0118  ld   [$18]       5964  ld([vAC])                       #15
              1449 1200  ld   ac,x        5965  ld(AC,X)                        #16
              144a 8001  adda $01         5966  adda(1)                         #17
              144b c218  st   [$18]       5967  st([vAC])                       #18 inc vAC.lo
              144c f053  beq  .peeka+#21  5968  beq('.peeka+#21')               #19 if low byte is 0x00
              144d 0d00  ld   [y,x]       5969  ld([Y,X])                       #20 peek [vAC]
              144e 111d  ld   [$1d],x     5970  ld([vTmp],X)                    #21 dst var
              144f c600  st   [x]         5971  st([X])                         #22 dst.lo = peek [vAC]
              1450 1403  ld   $03,y       5972  ld(hi('REENTER'),Y)             #23
              1451 e0cb  jmp  y,$cb       5973  jmp(Y,'REENTER')                #24
              1452 00f2  ld   $f2         5974  ld(-28/2)                       #25
                                          5975
                                          5976  label('.peeka+#21')
.peeka+#21:   1453 111d  ld   [$1d],x     5977  ld([vTmp],X)                    #21 dst var
              1454 c600  st   [x]         5978  st([X])                         #22 dst.lo = peek [vAC]
              1455 0119  ld   [$19]       5979  ld([vAC+1])                     #23
              1456 8001  adda $01         5980  adda(1)                         #24
              1457 c219  st   [$19]       5981  st([vAC+1])                     #25 inc vAC.hi
              1458 1403  ld   $03,y       5982  ld(hi('NEXTY'),Y)               #26
              1459 e000  jmp  y,$00       5983  jmp(Y,'NEXTY')                  #27
              145a 00f1  ld   $f1         5984  ld(-30/2)                       #28
                                          5985
                                          5986
                                          5987  # ADDVW implementation
                                          5988  label('addvw#13')
addvw#13:     145b 1517  ld   [$17],y     5989  ld([vPC+1],Y)                   #13
              145c de00  st   [y,x++]     5990  st([Y,Xpp])                     #14
              145d c22a  st   [$2a]       5991  st([sysArgs+6])                 #15 dst addr
              145e 00f1  ld   $f1         5992  ld(min(0,maxTicks-60/2))        #16
              145f 8115  adda [$15]       5993  adda([vTicks])                  #17
              1460 e88a  blt  .addvw#20   5994  blt('.addvw#20')                #18 not enough time left, so retry
              1461 0d00  ld   [y,x]       5995  ld([Y,X])                       #19
              1462 de00  st   [y,x++]     5996  st([Y,Xpp])                     #20
              1463 c22b  st   [$2b]       5997  st([sysArgs+7])                 #21 src1 addr
              1464 0d00  ld   [y,x]       5998  ld([Y,X])                       #22
              1465 1200  ld   ac,x        5999  ld(AC,X)                        #23 src0 addr
              1466 1400  ld   $00,y       6000  ld(0,Y)                         #24
              1467 0500  ld   [x]         6001  ld([X])                         #25
              1468 c218  st   [$18]       6002  st([vAC])                       #26 vAC.lo = src0.lo
              1469 de00  st   [y,x++]     6003  st([Y,Xpp])                     #27
              146a 0500  ld   [x]         6004  ld([X])                         #28
              146b c219  st   [$19]       6005  st([vAC+1])                     #29 vAC.hi = src0.hi
              146c 112b  ld   [$2b],x     6006  ld([sysArgs+7],X)               #30
              146d 0118  ld   [$18]       6007  ld([vAC])                       #31
              146e 8500  adda [x]         6008  adda([X])                       #32
              146f c218  st   [$18]       6009  st([vAC])                       #33 vAC.lo = src0.lo + src1.lo
              1470 e874  blt  .addvw#36   6010  bmi('.addvw#36')                #34 calculate carry
              1471 a500  suba [x]         6011  suba([X])                       #35
              1472 fc76  bra  .addvw#38   6012  bra('.addvw#38')                #36
              1473 4500  ora  [x]         6013  ora([X])                        #37 carry in bit 7
                                          6014
                                          6015  label('.addvw#36')
.addvw#36:    1474 2500  anda [x]         6016  anda([X])                       #36 carry in bit 7
              1475 0200  nop              6017  nop()                           #37
                                          6018
                                          6019  label('.addvw#38')
.addvw#38:    1476 3080  anda $80,x       6020  anda(0x80,X)                    #38
              1477 0500  ld   [x]         6021  ld([X])                         #39 carry in bit 0
              1478 c21d  st   [$1d]       6022  st([vTmp])                      #40
              1479 012b  ld   [$2b]       6023  ld([sysArgs+7])                 #41
              147a 9001  adda $01,x       6024  adda(1,X)                       #42
              147b 0500  ld   [x]         6025  ld([X])                         #43
              147c 8119  adda [$19]       6026  adda([vAC+1])                   #44
              147d 811d  adda [$1d]       6027  adda([vTmp])                    #45
              147e c219  st   [$19]       6028  st([vAC+1])                     #46
              147f 112a  ld   [$2a],x     6029  ld([sysArgs+6],X)               #47
              1480 0118  ld   [$18]       6030  ld([vAC])                       #48
              1481 de00  st   [y,x++]     6031  st([Y,Xpp])                     #49
              1482 0119  ld   [$19]       6032  ld([vAC+1])                     #50
              1483 ce00  st   [y,x]       6033  st([Y,X])                       #51
              1484 0116  ld   [$16]       6034  ld([vPC])                       #52
              1485 8002  adda $02         6035  adda(2)                         #53
              1486 c216  st   [$16]       6036  st([vPC])                       #54
              1487 1403  ld   $03,y       6037  ld(hi('REENTER'),Y)             #55
              1488 e0cb  jmp  y,$cb       6038  jmp(Y,'REENTER')                #56
              1489 00e2  ld   $e2         6039  ld(-60/2)                       #57
                                          6040
                                          6041  label('.addvw#20')
.addvw#20:    148a 0116  ld   [$16]       6042  ld([vPC])                       #20 retry instruction
              148b a002  suba $02         6043  suba(2)                         #21
              148c c216  st   [$16]       6044  st([vPC])                       #22
              148d 1403  ld   $03,y       6045  ld(hi('REENTER'),Y)             #23
              148e e0cb  jmp  y,$cb       6046  jmp(Y,'REENTER')                #24
              148f 00f2  ld   $f2         6047  ld(-28/2)                       #25
                                          6048
                                          6049
                                          6050  # SUBVW implementation
                                          6051  label('subvw#13')
subvw#13:     1490 1517  ld   [$17],y     6052  ld([vPC+1],Y)                   #13
              1491 de00  st   [y,x++]     6053  st([Y,Xpp])                     #14
              1492 c22a  st   [$2a]       6054  st([sysArgs+6])                 #15 dst addr
              1493 00f2  ld   $f2         6055  ld(min(0,maxTicks-58/2))        #16
              1494 8115  adda [$15]       6056  adda([vTicks])                  #17
              1495 e8bf  blt  .subvw#20   6057  blt('.subvw#20')                #18 not enough time left, so retry
              1496 0d00  ld   [y,x]       6058  ld([Y,X])                       #19
              1497 de00  st   [y,x++]     6059  st([Y,Xpp])                     #20
              1498 c22b  st   [$2b]       6060  st([sysArgs+7])                 #21 src1 addr
              1499 0d00  ld   [y,x]       6061  ld([Y,X])                       #22
              149a 1200  ld   ac,x        6062  ld(AC,X)                        #23 src0 addr
              149b 1400  ld   $00,y       6063  ld(0,Y)                         #24
              149c 0500  ld   [x]         6064  ld([X])                         #25
              149d c218  st   [$18]       6065  st([vAC])                       #26 vAC.lo = src0.lo
              149e de00  st   [y,x++]     6066  st([Y,Xpp])                     #27
              149f 0500  ld   [x]         6067  ld([X])                         #28
              14a0 c219  st   [$19]       6068  st([vAC+1])                     #29 vAC.hi = src0.hi
              14a1 112b  ld   [$2b],x     6069  ld([sysArgs+7],X)               #30
              14a2 0118  ld   [$18]       6070  ld([vAC])                       #31
              14a3 e8a8  blt  .subvw#34   6071  bmi('.subvw#34')                #32
              14a4 a500  suba [x]         6072  suba([X])                       #33 vAC.lo = src0.lo - src1.lo
              14a5 c218  st   [$18]       6073  st([vAC])                       #34 low result
              14a6 fcab  bra  .subvw#37   6074  bra('.subvw#37')                #35
              14a7 4500  ora  [x]         6075  ora([X])                        #36 borrow in bit 7
                                          6076
                                          6077  label('.subvw#34')
.subvw#34:    14a8 c218  st   [$18]       6078  st([vAC])                       #34 low result
              14a9 2500  anda [x]         6079  anda([X])                       #35 borrow in bit 7
              14aa 0200  nop              6080  nop()                           #36
                                          6081
                                          6082  label('.subvw#37')
.subvw#37:    14ab 3080  anda $80,x       6083  anda(0x80,X)                    #37 borrow to bit 0
              14ac 0119  ld   [$19]       6084  ld([vAC+1])                     #38
              14ad a500  suba [x]         6085  suba([X])                       #39
              14ae c21d  st   [$1d]       6086  st([vTmp])                      #40 src0.hi - borrow
              14af 012b  ld   [$2b]       6087  ld([sysArgs+7])                 #41
              14b0 9001  adda $01,x       6088  adda(1,X)                       #42
              14b1 011d  ld   [$1d]       6089  ld([vTmp])                      #43
              14b2 a500  suba [x]         6090  suba([X])                       #44 src0.hi - borrow - src1.hi
              14b3 c219  st   [$19]       6091  st([vAC+1])                     #45
              14b4 112a  ld   [$2a],x     6092  ld([sysArgs+6],X)               #46
              14b5 0118  ld   [$18]       6093  ld([vAC])                       #47
              14b6 de00  st   [y,x++]     6094  st([Y,Xpp])                     #48
              14b7 0119  ld   [$19]       6095  ld([vAC+1])                     #49
              14b8 ce00  st   [y,x]       6096  st([Y,X])                       #50
              14b9 0116  ld   [$16]       6097  ld([vPC])                       #51
              14ba 8002  adda $02         6098  adda(2)                         #52
              14bb c216  st   [$16]       6099  st([vPC])                       #53
              14bc 1403  ld   $03,y       6100  ld(hi('NEXTY'),Y)               #54
              14bd e000  jmp  y,$00       6101  jmp(Y,'NEXTY')                  #55
              14be 00e3  ld   $e3         6102  ld(-58/2)                       #56
                                          6103
                                          6104  label('.subvw#20')
.subvw#20:    14bf 0116  ld   [$16]       6105  ld([vPC])                       #20 retry instruction
              14c0 a002  suba $02         6106  suba(2)                         #21
              14c1 c216  st   [$16]       6107  st([vPC])                       #22
              14c2 1403  ld   $03,y       6108  ld(hi('REENTER'),Y)             #23
              14c3 e0cb  jmp  y,$cb       6109  jmp(Y,'REENTER')                #24
              14c4 00f2  ld   $f2         6110  ld(-28/2)                       #25
                                          6111
                                          6112
                                          6113  # PREFX3 implementation
                                          6114  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          6115  label('prefx3#13')
prefx3#13:    14c5 0116  ld   [$16]       6116  ld([vPC])                       #13
              14c6 8002  adda $02         6117  adda(2)                         #14
              14c7 c216  st   [$16]       6118  st([vPC])                       #15 Advance vPC
              14c8 0021  ld   $21         6119  ld(hi('PREFX3_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14c9 c202  st   [$02]       6120  st([vCpuSelect])                #17
              14ca 9401  adda $01,y       6121  adda(1,Y)                       #18
              14cb e000  jmp  y,$00       6122  jmp(Y,'NEXTY')                  #19
              14cc 00f5  ld   $f5         6123  ld(-22/2)                       #20
                                          6124
                                          6125  # PREFX2 implementation
                                          6126  label('prefx2#13')
prefx2#13:    14cd 0116  ld   [$16]       6127  ld([vPC])                       #13
              14ce 8001  adda $01         6128  adda(1)                         #14
              14cf c216  st   [$16]       6129  st([vPC])                       #15 Advance vPC
              14d0 0022  ld   $22         6130  ld(hi('PREFX2_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              14d1 c202  st   [$02]       6131  st([vCpuSelect])                #17
              14d2 9401  adda $01,y       6132  adda(1,Y)                       #18
              14d3 e000  jmp  y,$00       6133  jmp(Y,'NEXTY')                  #19
              14d4 00f5  ld   $f5         6134  ld(-22/2)                       #20
                                          6135
                                          6136  # PREFX1 implementation
                                          6137  label('prefx1#13')
prefx1#13:    14d5 c202  st   [$02]       6138  st([vCpuSelect])                #13
              14d6 9401  adda $01,y       6139  adda(1,Y)                       #14
              14d7 e000  jmp  y,$00       6140  jmp(Y,'NEXTY')                  #15
              14d8 00f7  ld   $f7         6141  ld(-18/2)                       #16
                                          6142
                                          6143
              14d9 0200  nop              6144  fillers(until=0xff)
              14da 0200  nop
              14db 0200  nop
              * 38 times
              14ff 0200  nop              6145  align(0x100, size=0x100)
                                          6146
                                          6147  #-----------------------------------------------------------------------
                                          6148  #       More vCPU instruction implementations, (0x1500)
                                          6149  #-----------------------------------------------------------------------
                                          6150  #
                                          6151  # ADDI implementation
                                          6152  label('addi#13')
addi#13:      1500 8118  adda [$18]       6153  adda([vAC])                     #13
              1501 c218  st   [$18]       6154  st([vAC])                       #14 Store low result
              1502 e80c  blt  .addi#17    6155  bmi('.addi#17')                 #15 Now figure out if there was a carry
              1503 a11d  suba [$1d]       6156  suba([vTmp])                    #16 Gets back the initial value of vAC
              1504 411d  ora  [$1d]       6157  ora([vTmp])                     #17 Carry in bit 7
              1505 3080  anda $80,x       6158  anda(0x80,X)                    #18 Move carry to bit 0
              1506 0500  ld   [x]         6159  ld([X])                         #19
              1507 8119  adda [$19]       6160  adda([vAC+1])                   #20 Add the high bytes with carry
              1508 c219  st   [$19]       6161  st([vAC+1])                     #21 Store high result
              1509 1403  ld   $03,y       6162  ld(hi('NEXTY'),Y)               #22
              150a e000  jmp  y,$00       6163  jmp(Y,'NEXTY')                  #23
              150b 00f3  ld   $f3         6164  ld(-26/2)                       #24
                                          6165  label('.addi#17')
.addi#17:     150c 211d  anda [$1d]       6166  anda([vTmp])                    #17 Carry in bit 7
              150d 3080  anda $80,x       6167  anda(0x80,X)                    #18 Move carry to bit 0
              150e 0500  ld   [x]         6168  ld([X])                         #19
              150f 8119  adda [$19]       6169  adda([vAC+1])                   #20 Add the high bytes with carry
              1510 c219  st   [$19]       6170  st([vAC+1])                     #21 Store high result
              1511 1403  ld   $03,y       6171  ld(hi('NEXTY'),Y)               #22
              1512 e000  jmp  y,$00       6172  jmp(Y,'NEXTY')                  #23
              1513 00f3  ld   $f3         6173  ld(-26/2)                       #24
                                          6174
                                          6175  # SUBI implementation
                                          6176  label('subi#13')
subi#13:      1514 0118  ld   [$18]       6177  ld([vAC])                       #13
              1515 e820  blt  .subi#16    6178  bmi('.subi#16')                 #14
              1516 a11d  suba [$1d]       6179  suba([vTmp])                    #15
              1517 c218  st   [$18]       6180  st([vAC])                       #16 Store low result
              1518 411d  ora  [$1d]       6181  ora([vTmp])                     #17 Carry in bit 7
              1519 3080  anda $80,x       6182  anda(0x80,X)                    #18 Move carry to bit 0
              151a 0119  ld   [$19]       6183  ld([vAC+1])                     #19
              151b a500  suba [x]         6184  suba([X])                       #20
              151c c219  st   [$19]       6185  st([vAC+1])                     #21
              151d 1403  ld   $03,y       6186  ld(hi('NEXTY'),Y)               #22
              151e e000  jmp  y,$00       6187  jmp(Y,'NEXTY')                  #23
              151f 00f3  ld   $f3         6188  ld(-26/2)                       #24
                                          6189  label('.subi#16')
.subi#16:     1520 c218  st   [$18]       6190  st([vAC])                       #16 Store low result
              1521 211d  anda [$1d]       6191  anda([vTmp])                    #17 Carry in bit 7
              1522 3080  anda $80,x       6192  anda(0x80,X)                    #18 Move carry to bit 0
              1523 0119  ld   [$19]       6193  ld([vAC+1])                     #19
              1524 a500  suba [x]         6194  suba([X])                       #20
              1525 c219  st   [$19]       6195  st([vAC+1])                     #21
              1526 1403  ld   $03,y       6196  ld(hi('NEXTY'),Y)               #22
              1527 e000  jmp  y,$00       6197  jmp(Y,'NEXTY')                  #23
              1528 00f3  ld   $f3         6198  ld(-26/2)                       #24
                                          6199
                                          6200  # XORW implementation
                                          6201  label('xorw#13')
xorw#13:      1529 1400  ld   $00,y       6202  ld(0,Y)                         #13
              152a 0500  ld   [x]         6203  ld([X])                         #14
              152b de00  st   [y,x++]     6204  st([Y,Xpp])                     #15
              152c 6118  xora [$18]       6205  xora([vAC])                     #16
              152d c218  st   [$18]       6206  st([vAC])                       #17
              152e 0500  ld   [x]         6207  ld([X])                         #18
              152f 6119  xora [$19]       6208  xora([vAC+1])                   #19
              1530 c219  st   [$19]       6209  st([vAC+1])                     #20
              1531 1403  ld   $03,y       6210  ld(hi('REENTER'),Y)             #21
              1532 e0cb  jmp  y,$cb       6211  jmp(Y,'REENTER')                #22
              1533 00f3  ld   $f3         6212  ld(-26/2)                       #23
                                          6213
                                          6214  # INCW implementation
                                          6215  label('incw#13')
incw#13:      1534 1400  ld   $00,y       6216  ld(0,Y)                         #13
              1535 1200  ld   ac,x        6217  ld(AC,X)                        #14 address of low byte to be added
              1536 0500  ld   [x]         6218  ld([X])                         #15
              1537 8001  adda $01         6219  adda(1)                         #16
              1538 f03d  beq  .incw#19    6220  beq('.incw#19')                 #17 if low byte is 0x00
              1539 de00  st   [y,x++]     6221  st([Y,Xpp])                     #18 inc low byte
              153a 1403  ld   $03,y       6222  ld(hi('REENTER'),Y)             #19
              153b e0cb  jmp  y,$cb       6223  jmp(Y,'REENTER')                #20
              153c 00f4  ld   $f4         6224  ld(-24/2)                       #21
                                          6225  label('.incw#19')
.incw#19:     153d 0500  ld   [x]         6226  ld([X])                         #19
              153e 8001  adda $01         6227  adda(1)                         #20
              153f c600  st   [x]         6228  st([X])                         #21 inc high byte
              1540 1403  ld   $03,y       6229  ld(hi('NEXTY'),Y)               #22
              1541 e000  jmp  y,$00       6230  jmp(Y,'NEXTY')                  #23
              1542 00f3  ld   $f3         6231  ld(-26/2)                       #24
                                          6232
                                          6233  # DECW implementation
                                          6234  label('decw#13')
decw#13:      1543 1400  ld   $00,y       6235  ld(0,Y)                         #13
              1544 1200  ld   ac,x        6236  ld(AC,X)                        #14 address of low byte to be added
              1545 0500  ld   [x]         6237  ld([X])                         #15
              1546 a001  suba $01         6238  suba(1)                         #16
              1547 de00  st   [y,x++]     6239  st([Y,Xpp])                     #17 dec low byte
              1548 60ff  xora $ff         6240  xora(0xff)                      #18 if low byte is 0xff
              1549 f04d  beq  .decw#21    6241  beq('.decw#21')                 #19
              154a 1403  ld   $03,y       6242  ld(hi('NEXTY'),Y)               #20
              154b e000  jmp  y,$00       6243  jmp(Y,'NEXTY')                  #21
              154c 00f4  ld   $f4         6244  ld(-24/2)                       #22
                                          6245  label('.decw#21')
.decw#21:     154d 0500  ld   [x]         6246  ld([X])                         #21
              154e a001  suba $01         6247  suba(1)                         #22
              154f c600  st   [x]         6248  st([X])                         #23 dec high byte
              1550 1403  ld   $03,y       6249  ld(hi('NEXTY'),Y)               #24
              1551 e000  jmp  y,$00       6250  jmp(Y,'NEXTY')                  #25
              1552 00f2  ld   $f2         6251  ld(-28/2)                       #26
                                          6252
                                          6253  # DBNE implementation
                                          6254  label('dbne#13')
dbne#13:      1553 1517  ld   [$17],y     6255  ld([vPC+1],Y)                   #13 vPC.hi
              1554 c21d  st   [$1d]       6256  st([vTmp])                      #14 branch offset
              1555 de00  st   [y,x++]     6257  st([Y,Xpp])                     #15 X++, address of counter
              1556 0d00  ld   [y,x]       6258  ld([Y,X])                       #16
              1557 1200  ld   ac,x        6259  ld(AC,X)                        #17 fetch counter
              1558 0500  ld   [x]         6260  ld([X])                         #18
              1559 a001  suba $01         6261  suba(1)                         #19 decrement counter
              155a f061  beq  .dbne#22    6262  beq('.dbne#22')                 #20 if zero BRA
              155b c600  st   [x]         6263  st([X])                         #21
              155c 011d  ld   [$1d]       6264  ld([vTmp])                      #22
              155d c216  st   [$16]       6265  st([vPC])                       #23 BRA to branch offset
              155e 1403  ld   $03,y       6266  ld(hi('NEXTY'),Y)               #24
              155f e000  jmp  y,$00       6267  jmp(Y,'NEXTY')                  #25
              1560 00f2  ld   $f2         6268  ld(-28/2)                       #26
                                          6269  label('.dbne#22')
.dbne#22:     1561 0116  ld   [$16]       6270  ld([vPC])                       #22
              1562 8001  adda $01         6271  adda(1)                         #23
              1563 c216  st   [$16]       6272  st([vPC])                       #24 advance vPC by 1
              1564 1403  ld   $03,y       6273  ld(hi('REENTER'),Y)             #25
              1565 e0cb  jmp  y,$cb       6274  jmp(Y,'REENTER')                #26
              1566 00f1  ld   $f1         6275  ld(-30/2)                       #27
                                          6276
                                          6277  # TEQ implementation
                                          6278  label('teq#13')
teq#13:       1567 1200  ld   ac,x        6279  ld(AC,X)                        #13 address of var
              1568 0119  ld   [$19]       6280  ld([vAC+1])                     #14
              1569 4118  ora  [$18]       6281  ora([vAC])                      #15
              156a f071  beq  .teq#18     6282  beq('.teq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              156b 1400  ld   $00,y       6283  ld(0,Y)                         #17
              156c dc00  st   $00,[y,x++] 6284  st(0,[Y,Xpp])                   #18
              156d cc00  st   $00,[y,x]   6285  st(0,[Y,X])                     #19 var = 0
              156e 1403  ld   $03,y       6286  ld(hi('NEXTY'),Y)               #20
              156f e000  jmp  y,$00       6287  jmp(Y,'NEXTY')                  #21
              1570 00f4  ld   $f4         6288  ld(-24/2)                       #22
                                          6289  label('.teq#18')
.teq#18:      1571 dcff  st   $ff,[y,x++] 6290  st(0xFF,[Y,Xpp])                #18
              1572 ccff  st   $ff,[y,x]   6291  st(0xFF,[Y,X])                  #19 var = -1
              1573 1403  ld   $03,y       6292  ld(hi('NEXTY'),Y)               #20
              1574 e000  jmp  y,$00       6293  jmp(Y,'NEXTY')                  #21
              1575 00f4  ld   $f4         6294  ld(-24/2)                       #22
                                          6295
                                          6296  # TNE implementation
                                          6297  label('tne#13')
tne#13:       1576 1200  ld   ac,x        6298  ld(AC,X)                        #13 address of var
              1577 0119  ld   [$19]       6299  ld([vAC+1])                     #14
              1578 4118  ora  [$18]       6300  ora([vAC])                      #15
              1579 f080  beq  .tne#18     6301  beq('.tne#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              157a 1400  ld   $00,y       6302  ld(0,Y)                         #17
              157b dcff  st   $ff,[y,x++] 6303  st(0xFF,[Y,Xpp])                #18
              157c ccff  st   $ff,[y,x]   6304  st(0xFF,[Y,X])                  #19 var = -1
              157d 1403  ld   $03,y       6305  ld(hi('NEXTY'),Y)               #20
              157e e000  jmp  y,$00       6306  jmp(Y,'NEXTY')                  #21
              157f 00f4  ld   $f4         6307  ld(-24/2)                       #22
                                          6308  label('.tne#18')
.tne#18:      1580 dc00  st   $00,[y,x++] 6309  st(0,[Y,Xpp])                   #18
              1581 cc00  st   $00,[y,x]   6310  st(0,[Y,X])                     #19 var = 0
              1582 1403  ld   $03,y       6311  ld(hi('NEXTY'),Y)               #20
              1583 e000  jmp  y,$00       6312  jmp(Y,'NEXTY')                  #21
              1584 00f4  ld   $f4         6313  ld(-24/2)                       #22
                                          6314
                                          6315  # TGE implementation
                                          6316  label('tge#13')
tge#13:       1585 1200  ld   ac,x        6317  ld(AC,X)                        #13 address of var
              1586 0119  ld   [$19]       6318  ld([vAC+1])                     #14
              1587 e88e  blt  .tge#17     6319  bmi('.tge#17')                  #15 if vAC.hi < 0
              1588 1400  ld   $00,y       6320  ld(0,Y)                         #16
              1589 dcff  st   $ff,[y,x++] 6321  st(0xFF,[Y,Xpp])                #17
              158a ccff  st   $ff,[y,x]   6322  st(0xFF,[Y,X])                  #18 var = -1
              158b 1403  ld   $03,y       6323  ld(hi('REENTER'),Y)             #19
              158c e0cb  jmp  y,$cb       6324  jmp(Y,'REENTER')                #20
              158d 00f4  ld   $f4         6325  ld(-24/2)                       #21
                                          6326  label('.tge#17')
.tge#17:      158e dc00  st   $00,[y,x++] 6327  st(0,[Y,Xpp])                   #17
              158f cc00  st   $00,[y,x]   6328  st(0,[Y,X])                     #18 var = 0
              1590 1403  ld   $03,y       6329  ld(hi('REENTER'),Y)             #19
              1591 e0cb  jmp  y,$cb       6330  jmp(Y,'REENTER')                #20
              1592 00f4  ld   $f4         6331  ld(-24/2)                       #21
                                          6332
                                          6333  # TLT implementation
                                          6334  label('tlt#13')
tlt#13:       1593 1200  ld   ac,x        6335  ld(AC,X)                        #13 address of var
              1594 0119  ld   [$19]       6336  ld([vAC+1])                     #14
              1595 e89c  blt  .tlt#17     6337  bmi('.tlt#17')                  #15 if vAC.hi < 0
              1596 1400  ld   $00,y       6338  ld(0,Y)                         #16
              1597 dc00  st   $00,[y,x++] 6339  st(0,[Y,Xpp])                   #17
              1598 cc00  st   $00,[y,x]   6340  st(0,[Y,X])                     #18 var = 0
              1599 1403  ld   $03,y       6341  ld(hi('REENTER'),Y)             #19
              159a e0cb  jmp  y,$cb       6342  jmp(Y,'REENTER')                #20
              159b 00f4  ld   $f4         6343  ld(-24/2)                       #21
                                          6344  label('.tlt#17')
.tlt#17:      159c dcff  st   $ff,[y,x++] 6345  st(0xFF,[Y,Xpp])                #17
              159d ccff  st   $ff,[y,x]   6346  st(0xFF,[Y,X])                  #18 var = -1
              159e 1403  ld   $03,y       6347  ld(hi('REENTER'),Y)             #19
              159f e0cb  jmp  y,$cb       6348  jmp(Y,'REENTER')                #20
              15a0 00f4  ld   $f4         6349  ld(-24/2)                       #21
                                          6350
                                          6351  # TGT implementation
                                          6352  label('tgt#13')
tgt#13:       15a1 1400  ld   $00,y       6353  ld(0,Y)                         #13
              15a2 1200  ld   ac,x        6354  ld(AC,X)                        #14 address of var
              15a3 0119  ld   [$19]       6355  ld([vAC+1])                     #15
              15a4 e8ad  blt  .tgt#18     6356  blt('.tgt#18')                  #16 if vAC.hi < 0
              15a5 4118  ora  [$18]       6357  ora([vAC])                      #17
              15a6 ecb2  bne  .tgt#20     6358  bne('.tgt#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15a7 0200  nop              6359  nop()                           #19
              15a8 dc00  st   $00,[y,x++] 6360  st(0,[Y,Xpp])                   #20
              15a9 cc00  st   $00,[y,x]   6361  st(0,[Y,X])                     #21 var = 0
              15aa 1403  ld   $03,y       6362  ld(hi('NEXTY'),Y)               #22
              15ab e000  jmp  y,$00       6363  jmp(Y,'NEXTY')                  #23
              15ac 00f3  ld   $f3         6364  ld(-26/2)                       #24
                                          6365  label('.tgt#18')
.tgt#18:      15ad dc00  st   $00,[y,x++] 6366  st(0,[Y,Xpp])                   #18
              15ae cc00  st   $00,[y,x]   6367  st(0,[Y,X])                     #19 var = 0
              15af 1403  ld   $03,y       6368  ld(hi('NEXTY'),Y)               #20
              15b0 e000  jmp  y,$00       6369  jmp(Y,'NEXTY')                  #21
              15b1 00f4  ld   $f4         6370  ld(-24/2)                       #22
                                          6371  label('.tgt#20')
.tgt#20:      15b2 dcff  st   $ff,[y,x++] 6372  st(0xFF,[Y,Xpp])                #20
              15b3 ccff  st   $ff,[y,x]   6373  st(0xFF,[Y,X])                  #21 var = -1
              15b4 1403  ld   $03,y       6374  ld(hi('NEXTY'),Y)               #22
              15b5 e000  jmp  y,$00       6375  jmp(Y,'NEXTY')                  #23
              15b6 00f3  ld   $f3         6376  ld(-26/2)                       #24
                                          6377
                                          6378  # TLE implementation
                                          6379  label('tle#13')
tle#13:       15b7 1400  ld   $00,y       6380  ld(0,Y)                         #13
              15b8 1200  ld   ac,x        6381  ld(AC,X)                        #14 address of var
              15b9 0119  ld   [$19]       6382  ld([vAC+1])                     #15
              15ba e8c3  blt  .tle#18     6383  blt('.tle#18')                  #16 if vAC.hi < 0
              15bb 4118  ora  [$18]       6384  ora([vAC])                      #17
              15bc ecc8  bne  .tle#20     6385  bne('.tle#20')                  #18 if (vAC.hi OR vAC.lo) != 0
              15bd 0200  nop              6386  nop()                           #19
              15be dcff  st   $ff,[y,x++] 6387  st(0xFF,[Y,Xpp])                #20
              15bf ccff  st   $ff,[y,x]   6388  st(0xFF,[Y,X])                  #21 var = -1
              15c0 1403  ld   $03,y       6389  ld(hi('NEXTY'),Y)               #22
              15c1 e000  jmp  y,$00       6390  jmp(Y,'NEXTY')                  #23
              15c2 00f3  ld   $f3         6391  ld(-26/2)                       #24
                                          6392  label('.tle#18')
.tle#18:      15c3 dcff  st   $ff,[y,x++] 6393  st(0xFF,[Y,Xpp])                #18
              15c4 ccff  st   $ff,[y,x]   6394  st(0xFF,[Y,X])                  #19 var = -1
              15c5 1403  ld   $03,y       6395  ld(hi('NEXTY'),Y)               #20
              15c6 e000  jmp  y,$00       6396  jmp(Y,'NEXTY')                  #21
              15c7 00f4  ld   $f4         6397  ld(-24/2)                       #22
                                          6398  label('.tle#20')
.tle#20:      15c8 dc00  st   $00,[y,x++] 6399  st(0,[Y,Xpp])                   #20
              15c9 cc00  st   $00,[y,x]   6400  st(0,[Y,X])                     #21 var = 0
              15ca 1403  ld   $03,y       6401  ld(hi('NEXTY'),Y)               #22
              15cb e000  jmp  y,$00       6402  jmp(Y,'NEXTY')                  #23
              15cc 00f3  ld   $f3         6403  ld(-26/2)                       #24
                                          6404
                                          6405  # INCWA implementation
                                          6406  label('incwa#13')
incwa#13:     15cd 1400  ld   $00,y       6407  ld(0,Y)                         #13
              15ce 1200  ld   ac,x        6408  ld(AC,X)                        #14 address of low byte to be added
              15cf 0500  ld   [x]         6409  ld([X])                         #15
              15d0 8001  adda $01         6410  adda(1)                         #16
              15d1 de00  st   [y,x++]     6411  st([Y,Xpp])                     #17 inc low byte
              15d2 c218  st   [$18]       6412  st([vAC])                       #18
              15d3 f0d9  beq  .incwa#21   6413  beq('.incwa#21')                #19 if low byte is 0x00
              15d4 0500  ld   [x]         6414  ld([X])                         #20
              15d5 c219  st   [$19]       6415  st([vAC+1])                     #21
              15d6 1403  ld   $03,y       6416  ld(hi('NEXTY'),Y)               #22
              15d7 e000  jmp  y,$00       6417  jmp(Y,'NEXTY')                  #23
              15d8 00f3  ld   $f3         6418  ld(-26/2)                       #24
                                          6419  label('.incwa#21')
.incwa#21:    15d9 8001  adda $01         6420  adda(1)                         #21
              15da c600  st   [x]         6421  st([X])                         #22 inc high byte
              15db c219  st   [$19]       6422  st([vAC+1])                     #23
              15dc 1403  ld   $03,y       6423  ld(hi('NEXTY'),Y)               #24
              15dd e000  jmp  y,$00       6424  jmp(Y,'NEXTY')                  #25
              15de 00f2  ld   $f2         6425  ld(-28/2)                       #26
                                          6426
                                          6427  # DECWA implementation
                                          6428  label('decwa#13')
decwa#13:     15df 1400  ld   $00,y       6429  ld(0,Y)                         #13
              15e0 1200  ld   ac,x        6430  ld(AC,X)                        #14 address of low byte to be added
              15e1 0500  ld   [x]         6431  ld([X])                         #15
              15e2 a001  suba $01         6432  suba(1)                         #16
              15e3 de00  st   [y,x++]     6433  st([Y,Xpp])                     #17 dec low byte
              15e4 c218  st   [$18]       6434  st([vAC])                       #18
              15e5 60ff  xora $ff         6435  xora(0xff)                      #19 if low byte is 0xff
              15e6 f0ec  beq  .decwa#22   6436  beq('.decwa#22')                #20
              15e7 0500  ld   [x]         6437  ld([X])                         #21
              15e8 c219  st   [$19]       6438  st([vAC+1])                     #22
              15e9 1403  ld   $03,y       6439  ld(hi('REENTER'),Y)             #23
              15ea e0cb  jmp  y,$cb       6440  jmp(Y,'REENTER')                #24
              15eb 00f2  ld   $f2         6441  ld(-28/2)                       #25
                                          6442  label('.decwa#22')
.decwa#22:    15ec a001  suba $01         6443  suba(1)                         #22
              15ed c600  st   [x]         6444  st([X])                         #23 dec high byte
              15ee c219  st   [$19]       6445  st([vAC+1])                     #24
              15ef 1403  ld   $03,y       6446  ld(hi('REENTER'),Y)             #25
              15f0 e0cb  jmp  y,$cb       6447  jmp(Y,'REENTER')                #26
              15f1 00f1  ld   $f1         6448  ld(-30/2)                       #27
                                          6449
                                          6450
              15f2 0200  nop              6451  fillers(until=0xff)
              15f3 0200  nop
              15f4 0200  nop
              * 13 times
              15ff 0200  nop              6452  align(0x100, size=0x100)
                                          6453
                                          6454  #-----------------------------------------------------------------------
                                          6455  #       More vCPU instruction implementations, (0x1600)
                                          6456  #-----------------------------------------------------------------------
                                          6457  #
                                          6458  # BRA implementation
                                          6459  label('bra#13')
bra#13:       1600 1403  ld   $03,y       6460  ld(hi('REENTER'),Y)             #13
              1601 e0cb  jmp  y,$cb       6461  jmp(Y,'REENTER')                #14
              1602 00f7  ld   $f7         6462  ld(-18/2)                       #15
                                          6463
                                          6464  # INC implementation
                                          6465  label('inc#13')
inc#13:       1603 1200  ld   ac,x        6466  ld(AC,X)                        #13
              1604 0500  ld   [x]         6467  ld([X])                         #14
              1605 8001  adda $01         6468  adda(1)                         #15
              1606 c600  st   [x]         6469  st([X])                         #16
              1607 1403  ld   $03,y       6470  ld(hi('REENTER'),Y)             #17
              1608 e0cb  jmp  y,$cb       6471  jmp(Y,'REENTER')                #18
              1609 00f5  ld   $f5         6472  ld(-22/2)                       #19
                                          6473
                                          6474  # DEC implementation
                                          6475  label('dec#13')
dec#13:       160a 1200  ld   ac,x        6476  ld(AC,X)                        #13
              160b 0500  ld   [x]         6477  ld([X])                         #14
              160c a001  suba $01         6478  suba(1)                         #15
              160d c600  st   [x]         6479  st([X])                         #16
              160e 1403  ld   $03,y       6480  ld(hi('REENTER'),Y)             #17
              160f e0cb  jmp  y,$cb       6481  jmp(Y,'REENTER')                #18
              1610 00f5  ld   $f5         6482  ld(-22/2)                       #19
                                          6483
                                          6484  # LD implementation
                                          6485  label('ld#13')
ld#13:        1611 1200  ld   ac,x        6486  ld(AC,X)                        #13
              1612 0500  ld   [x]         6487  ld([X])                         #14
              1613 c218  st   [$18]       6488  st([vAC])                       #15
              1614 0000  ld   $00         6489  ld(0)                           #16
              1615 c219  st   [$19]       6490  st([vAC+1])                     #17
              1616 1403  ld   $03,y       6491  ld(hi('NEXTY'),Y)               #18
              1617 e000  jmp  y,$00       6492  jmp(Y,'NEXTY')                  #19
              1618 00f5  ld   $f5         6493  ld(-22/2)                       #20
                                          6494
                                          6495  # LDI implementation
                                          6496  label('ldi#13')
ldi#13:       1619 c218  st   [$18]       6497  st([vAC])                       #13
              161a 0000  ld   $00         6498  ld(0)                           #14
              161b c219  st   [$19]       6499  st([vAC+1])                     #15
              161c 1403  ld   $03,y       6500  ld(hi('NEXTY'),Y)               #16
              161d e000  jmp  y,$00       6501  jmp(Y,'NEXTY')                  #17
              161e 00f6  ld   $f6         6502  ld(-20/2)                       #18
                                          6503
                                          6504  # ST implementation
                                          6505  label('st#13')
st#13:        161f 1200  ld   ac,x        6506  ld(AC,X)                        #13
              1620 0118  ld   [$18]       6507  ld([vAC])                       #14
              1621 c600  st   [x]         6508  st([X])                         #15
              1622 1403  ld   $03,y       6509  ld(hi('NEXTY'),Y)               #16
              1623 e000  jmp  y,$00       6510  jmp(Y,'NEXTY')                  #17
              1624 00f6  ld   $f6         6511  ld(-20/2)                       #18
                                          6512
                                          6513  # ORI implementation
                                          6514  label('ori#13')
ori#13:       1625 4118  ora  [$18]       6515  ora([vAC])                      #13
              1626 c218  st   [$18]       6516  st([vAC])                       #14
              1627 1403  ld   $03,y       6517  ld(hi('REENTER'),Y)             #15
              1628 e0cb  jmp  y,$cb       6518  jmp(Y,'REENTER')                #16
              1629 00f6  ld   $f6         6519  ld(-20/2)                       #17
                                          6520
                                          6521  # XORI implementation
                                          6522  label('xori#13')
xori#13:      162a 6118  xora [$18]       6523  xora([vAC])                     #13
              162b c218  st   [$18]       6524  st([vAC])                       #14
              162c 1403  ld   $03,y       6525  ld(hi('REENTER'),Y)             #15
              162d e0cb  jmp  y,$cb       6526  jmp(Y,'REENTER')                #16
              162e 00f6  ld   $f6         6527  ld(-20/2)                       #17
                                          6528
                                          6529  # LDNI implementation
                                          6530  label('ldni#13')
ldni#13:      162f 60ff  xora $ff         6531  xora(255)                       #13
              1630 8001  adda $01         6532  adda(1)                         #14
              1631 c218  st   [$18]       6533  st([vAC])                       #15
              1632 00ff  ld   $ff         6534  ld(255)                         #16
              1633 c219  st   [$19]       6535  st([vAC+1])                     #17
              1634 1403  ld   $03,y       6536  ld(hi('NEXTY'),Y)               #18
              1635 e000  jmp  y,$00       6537  jmp(Y,'NEXTY')                  #19
              1636 00f5  ld   $f5         6538  ld(-22/2)                       #20
                                          6539
                                          6540  # NOTB implementation
                                          6541  label('notb#13')
notb#13:      1637 0500  ld   [x]         6542  ld([X])                         #13
              1638 60ff  xora $ff         6543  xora(255)                       #14
              1639 c600  st   [x]         6544  st([X])                         #15
              163a 1403  ld   $03,y       6545  ld(hi('NEXTY'),Y)               #16
              163b e000  jmp  y,$00       6546  jmp(Y,'NEXTY')                  #17
              163c 00f6  ld   $f6         6547  ld(-20/2)                       #18
                                          6548
                                          6549  # ALLOC implementation
                                          6550  label('alloc#13')
alloc#13:     163d 811c  adda [$1c]       6551  adda([vSP])                     #13
              163e c21c  st   [$1c]       6552  st([vSP])                       #14
              163f 1403  ld   $03,y       6553  ld(hi('REENTER'),Y)             #15
              1640 e0cb  jmp  y,$cb       6554  jmp(Y,'REENTER')                #16
              1641 00f6  ld   $f6         6555  ld(-20/2)                       #17
                                          6556
                                          6557  # MOVB implementation
                                          6558  label('movb#13')
movb#13:      1642 1517  ld   [$17],y     6559  ld([vPC+1],Y)                   #13
              1643 c21d  st   [$1d]       6560  st([vTmp])                      #14 save address of dst var
              1644 de00  st   [y,x++]     6561  st([Y,Xpp])                     #15 X++
              1645 0d00  ld   [y,x]       6562  ld([Y,X])                       #16 address of src var
              1646 1200  ld   ac,x        6563  ld(AC,X)                        #17
              1647 0500  ld   [x]         6564  ld([X])                         #18 get src
              1648 111d  ld   [$1d],x     6565  ld([vTmp],X)                    #19 address of dst var
              1649 c600  st   [x]         6566  st([X])                         #20 dst.lo = src.lo
              164a 0116  ld   [$16]       6567  ld([vPC])                       #21
              164b 8001  adda $01         6568  adda(1)                         #22
              164c c216  st   [$16]       6569  st([vPC])                       #23
              164d 1403  ld   $03,y       6570  ld(hi('NEXTY'),Y)               #24
              164e e000  jmp  y,$00       6571  jmp(Y,'NEXTY')                  #25
              164f 00f2  ld   $f2         6572  ld(-28/2)                       #26
                                          6573
                                          6574  # PEEKA implementation
                                          6575  label('peeka#13')
peeka#13:     1650 c21d  st   [$1d]       6576  st([vTmp])                      #13
              1651 1519  ld   [$19],y     6577  ld([vAC+1],Y)                   #14
              1652 1118  ld   [$18],x     6578  ld([vAC],X)                     #15
              1653 0d00  ld   [y,x]       6579  ld([Y,X])                       #16 peek [vAC]
              1654 111d  ld   [$1d],x     6580  ld([vTmp],X)                    #17 dst var
              1655 c600  st   [x]         6581  st([X])                         #18 dst = peek [vAC]
              1656 1403  ld   $03,y       6582  ld(hi('REENTER'),Y)             #19
              1657 e0cb  jmp  y,$cb       6583  jmp(Y,'REENTER')                #20
              1658 00f4  ld   $f4         6584  ld(-24/2)                       #21
                                          6585
                                          6586  # DEEKA implementation
                                          6587  label('deeka#13')
deeka#13:     1659 1519  ld   [$19],y     6588  ld([vAC+1],Y)                   #13
              165a 1118  ld   [$18],x     6589  ld([vAC],X)                     #14
              165b 0d00  ld   [y,x]       6590  ld([Y,X])                       #15 peek [vAC]
              165c de00  st   [y,x++]     6591  st([Y,Xpp])                     #16
              165d c22a  st   [$2a]       6592  st([sysArgs+6])                 #17
              165e 0d00  ld   [y,x]       6593  ld([Y,X])                       #18 peek [vAC+1]
              165f c22b  st   [$2b]       6594  st([sysArgs+7])                 #19
              1660 1400  ld   $00,y       6595  ld(0,Y)                         #20
              1661 111d  ld   [$1d],x     6596  ld([vTmp],X)                    #21 dst var
              1662 012a  ld   [$2a]       6597  ld([sysArgs+6])                 #22
              1663 de00  st   [y,x++]     6598  st([Y,Xpp])                     #23 [var.lo] = peek [vAC]
              1664 012b  ld   [$2b]       6599  ld([sysArgs+7])                 #24
              1665 ce00  st   [y,x]       6600  st([Y,X])                       #25 [var.hi] = peek [vAC+1]
              1666 1403  ld   $03,y       6601  ld(hi('NEXTY'),Y)               #26
              1667 e000  jmp  y,$00       6602  jmp(Y,'NEXTY')                  #27
              1668 00f1  ld   $f1         6603  ld(-30/2)                       #28
                                          6604
                                          6605  # MOVQB implementation
                                          6606  label('movqb#13')
movqb#13:     1669 1517  ld   [$17],y     6607  ld([vPC+1],Y)                   #13 vPC.hi
              166a c21d  st   [$1d]       6608  st([vTmp])                      #14 immediate value
              166b de00  st   [y,x++]     6609  st([Y,Xpp])                     #15 X++
              166c 0d00  ld   [y,x]       6610  ld([Y,X])                       #16
              166d 1200  ld   ac,x        6611  ld(AC,X)                        #17 address of var
              166e 011d  ld   [$1d]       6612  ld([vTmp])                      #18
              166f c600  st   [x]         6613  st([X])                         #19 var.lo = immediate value
              1670 0116  ld   [$16]       6614  ld([vPC])                       #20
              1671 8001  adda $01         6615  adda(1)                         #21
              1672 c216  st   [$16]       6616  st([vPC])                       #22 advance vPC by 1
              1673 1403  ld   $03,y       6617  ld(hi('REENTER'),Y)             #23
              1674 e0cb  jmp  y,$cb       6618  jmp(Y,'REENTER')                #24
              1675 00f2  ld   $f2         6619  ld(-28/2)                       #25
                                          6620
                                          6621  # MOVQW implementation
                                          6622  label('movqw#13')
movqw#13:     1676 1517  ld   [$17],y     6623  ld([vPC+1],Y)                   #13 vPC.hi
              1677 c21d  st   [$1d]       6624  st([vTmp])                      #14 immediate value
              1678 de00  st   [y,x++]     6625  st([Y,Xpp])                     #15 X++
              1679 0d00  ld   [y,x]       6626  ld([Y,X])                       #16
              167a 1200  ld   ac,x        6627  ld(AC,X)                        #17 address of var
              167b 011d  ld   [$1d]       6628  ld([vTmp])                      #18
              167c 1400  ld   $00,y       6629  ld(0,Y)                         #19
              167d de00  st   [y,x++]     6630  st([Y,Xpp])                     #20 var.lo = immediate value
              167e c400  st   $00,[x]     6631  st(0,[X])                       #21 var.hi = 0
              167f 0116  ld   [$16]       6632  ld([vPC])                       #22
              1680 8001  adda $01         6633  adda(1)                         #23
              1681 c216  st   [$16]       6634  st([vPC])                       #24 advance vPC by 1
              1682 1403  ld   $03,y       6635  ld(hi('REENTER'),Y)             #25
              1683 e0cb  jmp  y,$cb       6636  jmp(Y,'REENTER')                #26
              1684 00f1  ld   $f1         6637  ld(-30/2)                       #27
                                          6638
                                          6639  # PEEKV implementation
                                          6640  label('peekv#13')
peekv#13:     1685 1400  ld   $00,y       6641  ld(0,Y)                         #13
              1686 0d00  ld   [y,x]       6642  ld([Y,X])                       #14 low byte peek address
              1687 de00  st   [y,x++]     6643  st([Y,Xpp])                     #15 X++
              1688 c21d  st   [$1d]       6644  st([vTmp])                      #16
              1689 0d00  ld   [y,x]       6645  ld([Y,X])                       #17 high byte peek address
              168a 1600  ld   ac,y        6646  ld(AC,Y)                        #18
              168b 111d  ld   [$1d],x     6647  ld([vTmp],X)                    #19
              168c 0d00  ld   [y,x]       6648  ld([Y,X])                       #20 peek byte
              168d c218  st   [$18]       6649  st([vAC])                       #21
              168e 0000  ld   $00         6650  ld(0)                           #22
              168f c219  st   [$19]       6651  st([vAC+1])                     #23
              1690 1403  ld   $03,y       6652  ld(hi('NEXTY'),Y)               #24
              1691 e000  jmp  y,$00       6653  jmp(Y,'NEXTY')                  #25
              1692 00f2  ld   $f2         6654  ld(-28/2)                       #26
                                          6655
                                          6656  # DEEKV implementation
                                          6657  label('deekv#13')
deekv#13:     1693 1200  ld   ac,x        6658  ld(AC,X)                        #13
              1694 1400  ld   $00,y       6659  ld(0,Y)                         #14
              1695 0d00  ld   [y,x]       6660  ld([Y,X])                       #15 low byte deek address
              1696 de00  st   [y,x++]     6661  st([Y,Xpp])                     #16 X++
              1697 c21d  st   [$1d]       6662  st([vTmp])                      #17
              1698 0d00  ld   [y,x]       6663  ld([Y,X])                       #18 high byte deek address
              1699 1600  ld   ac,y        6664  ld(AC,Y)                        #19
              169a 111d  ld   [$1d],x     6665  ld([vTmp],X)                    #20
              169b 0d00  ld   [y,x]       6666  ld([Y,X])                       #21 peek low byte
              169c c218  st   [$18]       6667  st([vAC])                       #22
              169d de00  st   [y,x++]     6668  st([Y,Xpp])                     #23 X++
              169e 0d00  ld   [y,x]       6669  ld([Y,X])                       #24 peek high byte
              169f c219  st   [$19]       6670  st([vAC+1])                     #25
              16a0 1403  ld   $03,y       6671  ld(hi('NEXTY'),Y)               #26
              16a1 e000  jmp  y,$00       6672  jmp(Y,'NEXTY')                  #27
              16a2 00f1  ld   $f1         6673  ld(-30/2)                       #28
                                          6674
                                          6675
                                          6676  # LSLV implementation
                                          6677  label('lslv#13')
lslv#13:      16a3 1400  ld   $00,y       6678  ld(0,Y)                         #13
              16a4 1200  ld   ac,x        6679  ld(AC,X)                        #14 var
              16a5 0500  ld   [x]         6680  ld([X])                         #15
              16a6 f4b0  bge  .lslv#18    6681  bge('.lslv#18')                 #16
              16a7 8500  adda [x]         6682  adda([X])                       #17
              16a8 de00  st   [y,x++]     6683  st([Y,Xpp])                     #18 var.lo <<1
              16a9 0500  ld   [x]         6684  ld([X])                         #19
              16aa 8500  adda [x]         6685  adda([X])                       #20
              16ab 4001  ora  $01         6686  ora(1)                          #21
              16ac c600  st   [x]         6687  st([X])                         #22 var.hi <<1 | 1
              16ad 1403  ld   $03,y       6688  ld(hi('REENTER'),Y)             #23
              16ae e0cb  jmp  y,$cb       6689  jmp(Y,'REENTER')                #24
              16af 00f2  ld   $f2         6690  ld(-28/2)                       #25
                                          6691
                                          6692  label('.lslv#18')
.lslv#18:     16b0 de00  st   [y,x++]     6693  st([Y,Xpp])                     #18
              16b1 0500  ld   [x]         6694  ld([X])                         #19
              16b2 8500  adda [x]         6695  adda([X])                       #20
              16b3 c600  st   [x]         6696  st([X])                         #21
              16b4 1403  ld   $03,y       6697  ld(hi('NEXTY'),Y)               #22
              16b5 e000  jmp  y,$00       6698  jmp(Y,'NEXTY')                  #23
              16b6 00f3  ld   $f3         6699  ld(-26/2)                       #24
                                          6700
                                          6701
                                          6702  # LSRB implementation
                                          6703  label('lsrb#13')
lsrb#13:      16b7 1200  ld   ac,x        6704  ld(AC,X)                        #13 var address
              16b8 1405  ld   $05,y       6705  ld(hi('shiftTable'),Y)          #14 logical shift right 1 bit (X >> 1)
              16b9 00c8  ld   $c8         6706  ld('.lsrb#24')                  #15 continuation address
              16ba c21d  st   [$1d]       6707  st([vTmp])                      #16
              16bb 0500  ld   [x]         6708  ld([X])                         #17 load byte from var
              16bc 20fe  anda $fe         6709  anda(0xfe)                      #18
              16bd e200  jmp  y,ac        6710  jmp(Y,AC)                       #19
              16be fcff  bra  $ff         6711  bra(255)                        #20 bra shiftTable+255
                                          6712  #dummy
                                          6713  # continues in page 0x0600 at label('.lsrb#24') after fetching shifted byte from 0x0500
                                          6714
                                          6715  # LDW implementation
                                          6716  label('ldw#13')
ldw#13:       16bf 1400  ld   $00,y       6717  ld(0,Y)                         #13
              16c0 1200  ld   ac,x        6718  ld(AC,X)                        #14 Operand
              16c1 0500  ld   [x]         6719  ld([X])                         #15
              16c2 c218  st   [$18]       6720  st([vAC])                       #16
              16c3 de00  st   [y,x++]     6721  st([Y,Xpp])                     #17 X++
              16c4 0500  ld   [x]         6722  ld([X])                         #18
              16c5 c219  st   [$19]       6723  st([vAC+1])                     #19
              16c6 1403  ld   $03,y       6724  ld(hi('NEXTY'),Y)               #20
              16c7 e000  jmp  y,$00       6725  jmp(Y,'NEXTY')                  #21
              16c8 00f4  ld   $f4         6726  ld(-24/2)                       #22
                                          6727
                                          6728  # STW implementation
                                          6729  label('stw#13')
stw#13:       16c9 1400  ld   $00,y       6730  ld(0,Y)                         #13
              16ca 1200  ld   ac,x        6731  ld(AC,X)                        #14 Operand
              16cb 0118  ld   [$18]       6732  ld([vAC])                       #15
              16cc de00  st   [y,x++]     6733  st([Y,Xpp])                     #16
              16cd 0119  ld   [$19]       6734  ld([vAC+1])                     #17
              16ce c600  st   [x]         6735  st([X])                         #18
              16cf 1403  ld   $03,y       6736  ld(hi('REENTER'),Y)             #19
              16d0 e0cb  jmp  y,$cb       6737  jmp(Y,'REENTER')                #20
              16d1 00f4  ld   $f4         6738  ld(-24/2)                       #21
                                          6739
                                          6740  # JLT implementation
                                          6741  label('jlt#13')
jlt#13:       16d2 1517  ld   [$17],y     6742  ld([vPC+1],Y)                   #13 vPC.hi
              16d3 0119  ld   [$19]       6743  ld([vAC+1])                     #14
              16d4 e8dc  blt  .jlt#17     6744  blt('.jlt#17')                  #15 if vAC.hi < 0
              16d5 0d00  ld   [y,x]       6745  ld([Y,X])                       #16 address of branch destination
              16d6 0116  ld   [$16]       6746  ld([vPC])                       #17
              16d7 8001  adda $01         6747  adda(1)                         #18
              16d8 c216  st   [$16]       6748  st([vPC])                       #19
              16d9 1403  ld   $03,y       6749  ld(hi('NEXTY'),Y)               #20
              16da e000  jmp  y,$00       6750  jmp(Y,'NEXTY')                  #21
              16db 00f4  ld   $f4         6751  ld(-24/2)                       #22
                                          6752  label('.jlt#17')
.jlt#17:      16dc c216  st   [$16]       6753  st([vPC])                       #17
              16dd de00  st   [y,x++]     6754  st([Y,Xpp])                     #18
              16de 0d00  ld   [y,x]       6755  ld([Y,X])                       #19 hi address of jump destination
              16df c217  st   [$17]       6756  st([vPC+1])                     #20
              16e0 1403  ld   $03,y       6757  ld(hi('REENTER'),Y)             #21
              16e1 e0cb  jmp  y,$cb       6758  jmp(Y,'REENTER')                #22
              16e2 00f3  ld   $f3         6759  ld(-26/2)                       #23
                                          6760
                                          6761  # SCRLH implementation
                                          6762  label('scrlh#13')
scrlh#13:     16e3 0500  ld   [x]         6763  ld([X])                         #13 ac = scroll amount
              16e4 1401  ld   $01,y       6764  ld(1,Y)                         #14
              16e5 1001  ld   $01,x       6765  ld(1,X)                         #15
              16e6 8d00  adda [y,x]       6766  adda([Y,X])                     #16 ac += peek(0x0101)
              16e7 ce00  st   [y,x]       6767  st([Y,X])                       #17 poke 0x0101, ac
              16e8 1403  ld   $03,y       6768  ld(hi('NEXTY'),Y)               #18
              16e9 e000  jmp  y,$00       6769  jmp(Y,'NEXTY')                  #19
              16ea 00f5  ld   $f5         6770  ld(-22/2)                       #20
                                          6771
                                          6772
              16eb 0200  nop              6773  fillers(until=0xff)
              16ec 0200  nop
              16ed 0200  nop
              * 20 times
              16ff 0200  nop              6774  align(0x100, size=0x100)
                                          6775
                                          6776  #-----------------------------------------------------------------------
                                          6777  #       More vCPU instruction implementations, (0x1700)
                                          6778  #-----------------------------------------------------------------------
                                          6779  #
                                          6780  # CALLI implementation
                                          6781  label('calli#13')
calli#13:     1700 8003  adda $03         6782  adda(3)                         #13
              1701 c21a  st   [$1a]       6783  st([vLR])                       #14
              1702 0117  ld   [$17]       6784  ld([vPC+1])                     #15
              1703 d61b  st   [$1b],y     6785  st([vLR+1],Y)                   #16
              1704 0d00  ld   [y,x]       6786  ld([Y,X])                       #17
              1705 de00  st   [y,x++]     6787  st([Y,Xpp])                     #18 Just X++
              1706 a002  suba $02         6788  suba(2)                         #19
              1707 c216  st   [$16]       6789  st([vPC])                       #20
              1708 0d00  ld   [y,x]       6790  ld([Y,X])                       #21
              1709 1403  ld   $03,y       6791  ld(hi('REENTER_28'),Y)          #22
              170a e0ca  jmp  y,$ca       6792  jmp(Y,'REENTER_28')             #23
              170b c217  st   [$17]       6793  st([vPC+1])                     #24
                                          6794
                                          6795  # SUBW implemetation
                                          6796  label('subw#13')
subw#13:      170c 8001  adda $01         6797  adda(1)                         #13
              170d c21d  st   [$1d]       6798  st([vTmp])                      #14 Address of high byte to be subtracted
              170e 0118  ld   [$18]       6799  ld([vAC])                       #15 Low byte
              170f e81c  blt  .subw#18    6800  bmi('.subw#18')                 #16
              1710 a500  suba [x]         6801  suba([X])                       #17
              1711 c218  st   [$18]       6802  st([vAC])                       #18 Store low result
              1712 4500  ora  [x]         6803  ora([X])                        #19 Carry in bit 7
              1713 3080  anda $80,x       6804  anda(0x80,X)                    #20 Move carry to bit 0
              1714 0119  ld   [$19]       6805  ld([vAC+1])                     #21
              1715 a500  suba [x]         6806  suba([X])                       #22
              1716 111d  ld   [$1d],x     6807  ld([vTmp],X)                    #23
              1717 a500  suba [x]         6808  suba([X])                       #24
              1718 c219  st   [$19]       6809  st([vAC+1])                     #25
              1719 1403  ld   $03,y       6810  ld(hi('NEXTY'),Y)               #26
              171a e000  jmp  y,$00       6811  jmp(Y,'NEXTY')                  #27
              171b 00f1  ld   $f1         6812  ld(-30/2)                       #28
                                          6813  label('.subw#18')
.subw#18:     171c c218  st   [$18]       6814  st([vAC])                       #18 Store low result
              171d 2500  anda [x]         6815  anda([X])                       #19 Carry in bit 7
              171e 3080  anda $80,x       6816  anda(0x80,X)                    #20 Move carry to bit 0
              171f 0119  ld   [$19]       6817  ld([vAC+1])                     #21
              1720 a500  suba [x]         6818  suba([X])                       #22
              1721 111d  ld   [$1d],x     6819  ld([vTmp],X)                    #23
              1722 a500  suba [x]         6820  suba([X])                       #24
              1723 c219  st   [$19]       6821  st([vAC+1])                     #25
              1724 1403  ld   $03,y       6822  ld(hi('NEXTY'),Y)               #26
              1725 e000  jmp  y,$00       6823  jmp(Y,'NEXTY')                  #27
              1726 00f1  ld   $f1         6824  ld(-30/2)                       #28
                                          6825
                                          6826  # BEQ implementation
                                          6827  label('beq#17')
beq#17:       1727 0119  ld   [$19]       6828  ld([vAC+1])                     #17
              1728 4118  ora  [$18]       6829  ora([vAC])                      #18
              1729 f031  beq  .beq#21     6830  beq('.beq#21')                  #19 if (vAC.hi OR vAC.lo) == 0
              172a 0d00  ld   [y,x]       6831  ld([Y,X])                       #20 address of branch destination
              172b 0116  ld   [$16]       6832  ld([vPC])                       #21
              172c 8001  adda $01         6833  adda(1)                         #22
              172d c216  st   [$16]       6834  st([vPC])                       #23
              172e 1403  ld   $03,y       6835  ld(hi('NEXTY'),Y)               #24
              172f e000  jmp  y,$00       6836  jmp(Y,'NEXTY')                  #25
              1730 00f2  ld   $f2         6837  ld(-28/2)                       #26
                                          6838  label('.beq#21')
.beq#21:      1731 c216  st   [$16]       6839  st([vPC])                       #21
              1732 1403  ld   $03,y       6840  ld(hi('NEXTY'),Y)               #22
              1733 e000  jmp  y,$00       6841  jmp(Y,'NEXTY')                  #23
              1734 00f3  ld   $f3         6842  ld(-26/2)                       #24
                                          6843
                                          6844  # BNE implementation
                                          6845  label('bne#17')
bne#17:       1735 0119  ld   [$19]       6846  ld([vAC+1])                     #17
              1736 4118  ora  [$18]       6847  ora([vAC])                      #18
              1737 ec3f  bne  .bne#21     6848  bne('.bne#21')                  #19 if (vAC.hi OR vAC.lo) != 0
              1738 0d00  ld   [y,x]       6849  ld([Y,X])                       #20 address of branch destination
              1739 0116  ld   [$16]       6850  ld([vPC])                       #21
              173a 8001  adda $01         6851  adda(1)                         #22
              173b c216  st   [$16]       6852  st([vPC])                       #23
              173c 1403  ld   $03,y       6853  ld(hi('NEXTY'),Y)               #24
              173d e000  jmp  y,$00       6854  jmp(Y,'NEXTY')                  #25
              173e 00f2  ld   $f2         6855  ld(-28/2)                       #26
                                          6856  label('.bne#21')
.bne#21:      173f c216  st   [$16]       6857  st([vPC])                       #21
              1740 1403  ld   $03,y       6858  ld(hi('NEXTY'),Y)               #22
              1741 e000  jmp  y,$00       6859  jmp(Y,'NEXTY')                  #23
              1742 00f3  ld   $f3         6860  ld(-26/2)                       #24
                                          6861
                                          6862  # BGT implementation
                                          6863  label('bgt#17')
bgt#17:       1743 0119  ld   [$19]       6864  ld([vAC+1])                     #17
              1744 e84d  blt  .bgt#20     6865  blt('.bgt#20')                  #18 if vAC.hi < 0
              1745 4118  ora  [$18]       6866  ora([vAC])                      #19
              1746 ec53  bne  .bgt#22     6867  bne('.bgt#22')                  #20 if (vAC.hi OR vAC.lo) != 0
              1747 0116  ld   [$16]       6868  ld([vPC])                       #21
              1748 8001  adda $01         6869  adda(1)                         #22
              1749 c216  st   [$16]       6870  st([vPC])                       #23
              174a 1403  ld   $03,y       6871  ld(hi('NEXTY'),Y)               #24
              174b e000  jmp  y,$00       6872  jmp(Y,'NEXTY')                  #25
              174c 00f2  ld   $f2         6873  ld(-28/2)                       #26
                                          6874  label('.bgt#20')
.bgt#20:      174d 0116  ld   [$16]       6875  ld([vPC])                       #20
              174e 8001  adda $01         6876  adda(1)                         #21
              174f c216  st   [$16]       6877  st([vPC])                       #22
              1750 1403  ld   $03,y       6878  ld(hi('REENTER'),Y)             #23
              1751 e0cb  jmp  y,$cb       6879  jmp(Y,'REENTER')                #24
              1752 00f2  ld   $f2         6880  ld(-28/2)                       #25
                                          6881  label('.bgt#22')
.bgt#22:      1753 0d00  ld   [y,x]       6882  ld([Y,X])                       #22 address of branch destination
              1754 c216  st   [$16]       6883  st([vPC])                       #23
              1755 1403  ld   $03,y       6884  ld(hi('NEXTY'),Y)               #24
              1756 e000  jmp  y,$00       6885  jmp(Y,'NEXTY')                  #25
              1757 00f2  ld   $f2         6886  ld(-28/2)                       #26
                                          6887
                                          6888  # BLT implementation
                                          6889  label('blt#17')
blt#17:       1758 0119  ld   [$19]       6890  ld([vAC+1])                     #17
              1759 e860  blt  .blt#20     6891  blt('.blt#20')                  #18 if vAC.hi < 0
              175a 0116  ld   [$16]       6892  ld([vPC])                       #19
              175b 8001  adda $01         6893  adda(1)                         #20
              175c c216  st   [$16]       6894  st([vPC])                       #21
              175d 1403  ld   $03,y       6895  ld(hi('NEXTY'),Y)               #22
              175e e000  jmp  y,$00       6896  jmp(Y,'NEXTY')                  #23
              175f 00f3  ld   $f3         6897  ld(-26/2)                       #24
                                          6898  label('.blt#20')
.blt#20:      1760 0d00  ld   [y,x]       6899  ld([Y,X])                       #20 address of branch destination
              1761 c216  st   [$16]       6900  st([vPC])                       #21
              1762 1403  ld   $03,y       6901  ld(hi('NEXTY'),Y)               #22
              1763 e000  jmp  y,$00       6902  jmp(Y,'NEXTY')                  #23
              1764 00f3  ld   $f3         6903  ld(-26/2)                       #24
                                          6904
                                          6905  # BGE implementation
                                          6906  label('bge#17')
bge#17:       1765 0119  ld   [$19]       6907  ld([vAC+1])                     #17
              1766 e86d  blt  .bge#20     6908  blt('.bge#20')                  #18 if vAC.hi < 0
              1767 0116  ld   [$16]       6909  ld([vPC])                       #19
              1768 0d00  ld   [y,x]       6910  ld([Y,X])                       #20 address of branch destination
              1769 c216  st   [$16]       6911  st([vPC])                       #21
              176a 1403  ld   $03,y       6912  ld(hi('NEXTY'),Y)               #22
              176b e000  jmp  y,$00       6913  jmp(Y,'NEXTY')                  #23
              176c 00f3  ld   $f3         6914  ld(-26/2)                       #24
                                          6915  label('.bge#20')
.bge#20:      176d 8001  adda $01         6916  adda(1)                         #20
              176e c216  st   [$16]       6917  st([vPC])                       #21
              176f 1403  ld   $03,y       6918  ld(hi('NEXTY'),Y)               #22
              1770 e000  jmp  y,$00       6919  jmp(Y,'NEXTY')                  #23
              1771 00f3  ld   $f3         6920  ld(-26/2)                       #24
                                          6921
                                          6922  # BLE implementation
                                          6923  label('ble#17')
ble#17:       1772 0119  ld   [$19]       6924  ld([vAC+1])                     #17
              1773 e87c  blt  .ble#20     6925  blt('.ble#20')                  #18 if vAC.hi < 0
              1774 4118  ora  [$18]       6926  ora([vAC])                      #19
              1775 ec81  bne  .ble#22     6927  bne('.ble#22')                  #20 if (vAC.hi OR vAC.lo) != 0
              1776 0116  ld   [$16]       6928  ld([vPC])                       #21
              1777 0d00  ld   [y,x]       6929  ld([Y,X])                       #22 address of branch destination
              1778 c216  st   [$16]       6930  st([vPC])                       #23
              1779 1403  ld   $03,y       6931  ld(hi('NEXTY'),Y)               #24
              177a e000  jmp  y,$00       6932  jmp(Y,'NEXTY')                  #25
              177b 00f2  ld   $f2         6933  ld(-28/2)                       #26
                                          6934  label('.ble#20')
.ble#20:      177c 0d00  ld   [y,x]       6935  ld([Y,X])                       #20 address of branch destination
              177d c216  st   [$16]       6936  st([vPC])                       #21
              177e 1403  ld   $03,y       6937  ld(hi('NEXTY'),Y)               #22
              177f e000  jmp  y,$00       6938  jmp(Y,'NEXTY')                  #23
              1780 00f3  ld   $f3         6939  ld(-26/2)                       #24
                                          6940  label('.ble#22')
.ble#22:      1781 8001  adda $01         6941  adda(1)                         #22
              1782 c216  st   [$16]       6942  st([vPC])                       #23
              1783 1403  ld   $03,y       6943  ld(hi('NEXTY'),Y)               #24
              1784 e000  jmp  y,$00       6944  jmp(Y,'NEXTY')                  #25
              1785 00f2  ld   $f2         6945  ld(-28/2)                       #26
                                          6946
                                          6947  # ADDBA implementation
                                          6948  label('addba#13')
addba#13:     1786 1200  ld   ac,x        6949  ld(AC,X)                        #13 src var
              1787 0118  ld   [$18]       6950  ld([vAC])                       #14
              1788 8500  adda [x]         6951  adda([X])                       #15
              1789 c218  st   [$18]       6952  st([vAC])                       #16 vAC.lo += var.lo
              178a e894  blt  .addba#19   6953  bmi('.addba#19')                #17 Now figure out if there was a carry
              178b a500  suba [x]         6954  suba([X])                       #18 Gets back the initial value of vAC
              178c 4500  ora  [x]         6955  ora([X])                        #19 Carry in bit 7
              178d 3080  anda $80,x       6956  anda(0x80,X)                    #20 Move carry to bit 0
              178e 0500  ld   [x]         6957  ld([X])                         #21
              178f 8119  adda [$19]       6958  adda([vAC+1])                   #22 Add the high byte and carry
              1790 c219  st   [$19]       6959  st([vAC+1])                     #23 Store high result
              1791 1403  ld   $03,y       6960  ld(hi('NEXTY'),Y)               #24
              1792 e000  jmp  y,$00       6961  jmp(Y,'NEXTY')                  #25
              1793 00f2  ld   $f2         6962  ld(-28/2)                       #26
                                          6963  label('.addba#19')
.addba#19:    1794 2500  anda [x]         6964  anda([X])                       #19 Carry in bit 7
              1795 3080  anda $80,x       6965  anda(0x80,X)                    #20 Move carry to bit 0
              1796 0500  ld   [x]         6966  ld([X])                         #21
              1797 8119  adda [$19]       6967  adda([vAC+1])                   #22 Add high byte and carry
              1798 c219  st   [$19]       6968  st([vAC+1])                     #23 Store high result
              1799 1403  ld   $03,y       6969  ld(hi('NEXTY'),Y)               #24
              179a e000  jmp  y,$00       6970  jmp(Y,'NEXTY')                  #25
              179b 00f2  ld   $f2         6971  ld(-28/2)                       #26
                                          6972
                                          6973  # SUBBA implementation
                                          6974  label('subba#13')
subba#13:     179c 1200  ld   ac,x        6975  ld(AC,X)                        #13 src var
              179d 0118  ld   [$18]       6976  ld([vAC])                       #14
              179e e8a9  blt  .subba#17   6977  bmi('.subba#17')                 #15
              179f a500  suba [x]         6978  suba([X])                       #16
              17a0 c218  st   [$18]       6979  st([vAC])                       #17 vAC.lo -= var.lo
              17a1 4500  ora  [x]         6980  ora([X])                        #18 Borrow in bit 7
              17a2 3080  anda $80,x       6981  anda(0x80,X)                    #19 Move borrow to bit 0
              17a3 0119  ld   [$19]       6982  ld([vAC+1])                     #20
              17a4 a500  suba [x]         6983  suba([X])                       #21 Sub borrow from high byte
              17a5 c219  st   [$19]       6984  st([vAC+1])                     #22 Store high result
              17a6 1403  ld   $03,y       6985  ld(hi('REENTER'),Y)             #23
              17a7 e0cb  jmp  y,$cb       6986  jmp(Y,'REENTER')                #24
              17a8 00f2  ld   $f2         6987  ld(-28/2)                       #25
                                          6988  label('.subba#17')
.subba#17:    17a9 c218  st   [$18]       6989  st([vAC])                       #17
              17aa 2500  anda [x]         6990  anda([X])                       #18 Borrow in bit 7
              17ab 3080  anda $80,x       6991  anda(0x80,X)                    #19 Move borrow to bit 0
              17ac 0119  ld   [$19]       6992  ld([vAC+1])                     #20
              17ad a500  suba [x]         6993  suba([X])                       #21 Sub borrow from high byte
              17ae c219  st   [$19]       6994  st([vAC+1])                     #22 Store high result
              17af 1403  ld   $03,y       6995  ld(hi('REENTER'),Y)             #23
              17b0 e0cb  jmp  y,$cb       6996  jmp(Y,'REENTER')                #24
              17b1 00f2  ld   $f2         6997  ld(-28/2)                       #25
                                          6998
                                          6999  # POKEA implementation
                                          7000  label('pokea#13')
pokea#13:     17b2 1200  ld   ac,x        7001  ld(AC,X)                        #13
              17b3 0500  ld   [x]         7002  ld([X])                         #14 var.lo
              17b4 1118  ld   [$18],x     7003  ld([vAC],X)                     #15
              17b5 1519  ld   [$19],y     7004  ld([vAC+1],Y)                   #16
              17b6 ce00  st   [y,x]       7005  st([Y,X])                       #17 poke [vAC], var.lo
              17b7 1403  ld   $03,y       7006  ld(hi('NEXTY'),Y)               #18
              17b8 e000  jmp  y,$00       7007  jmp(Y,'NEXTY')                  #19
              17b9 00f5  ld   $f5         7008  ld(-22/2)                       #20
                                          7009
                                          7010  # DOKEA implementation
                                          7011  label('dokea#13')
dokea#13:     17ba d21d  st   [$1d],x     7012  st([vTmp],X)                    #13
              17bb 0500  ld   [x]         7013  ld([X])                         #14 var.lo
              17bc 1118  ld   [$18],x     7014  ld([vAC],X)                     #15
              17bd 1519  ld   [$19],y     7015  ld([vAC+1],Y)                   #16
              17be ce00  st   [y,x]       7016  st([Y,X])                       #17 poke [vAC], var.lo
              17bf 011d  ld   [$1d]       7017  ld([vTmp])                      #18
              17c0 9001  adda $01,x       7018  adda(1,X)                       #19
              17c1 0500  ld   [x]         7019  ld([X])                         #20 var.hi
              17c2 c21d  st   [$1d]       7020  st([vTmp])                      #21
              17c3 0118  ld   [$18]       7021  ld([vAC])                       #22
              17c4 9001  adda $01,x       7022  adda(1,X)                       #23
              17c5 011d  ld   [$1d]       7023  ld([vTmp])                      #24
              17c6 ce00  st   [y,x]       7024  st([Y,X])                       #25 poke [vAC+1], var.hi
              17c7 1403  ld   $03,y       7025  ld(hi('NEXTY'),Y)               #26
              17c8 e000  jmp  y,$00       7026  jmp(Y,'NEXTY')                  #27
              17c9 00f1  ld   $f1         7027  ld(-30/2)                       #28
                                          7028
                                          7029  # POKEI implementation
                                          7030  label('pokei#13')
pokei#13:     17ca 1519  ld   [$19],y     7031  ld([vAC+1],Y)                   #13
              17cb 1118  ld   [$18],x     7032  ld([vAC],X)                     #14
              17cc de00  st   [y,x++]     7033  st([Y,Xpp])                     #15
              17cd 1403  ld   $03,y       7034  ld(hi('NEXTY'),Y)               #16
              17ce e000  jmp  y,$00       7035  jmp(Y,'NEXTY')                  #17
              17cf 00f6  ld   $f6         7036  ld(-20/2)                       #18
                                          7037
                                          7038  # DOKEI implementation
                                          7039  label('dokei#13')
dokei#13:     17d0 1517  ld   [$17],y     7040  ld([vPC+1],Y)                   #13
              17d1 c21d  st   [$1d]       7041  st([vTmp])                      #14 imm.hi
              17d2 de00  st   [y,x++]     7042  st([Y,Xpp])                     #15 X++
              17d3 0d00  ld   [y,x]       7043  ld([Y,X])                       #16 imm.lo
              17d4 1519  ld   [$19],y     7044  ld([vAC+1],Y)                   #17
              17d5 1118  ld   [$18],x     7045  ld([vAC],X)                     #18
              17d6 de00  st   [y,x++]     7046  st([Y,Xpp])                     #19
              17d7 011d  ld   [$1d]       7047  ld([vTmp])                      #20
              17d8 ce00  st   [y,x]       7048  st([Y,X])                       #21
              17d9 0116  ld   [$16]       7049  ld([vPC])                       #22
              17da 8001  adda $01         7050  adda(1)                         #23
              17db c216  st   [$16]       7051  st([vPC])                       #24
              17dc 1403  ld   $03,y       7052  ld(hi('REENTER'),Y)             #25
              17dd e0cb  jmp  y,$cb       7053  jmp(Y,'REENTER')                #26
              17de 00f1  ld   $f1         7054  ld(-30/2)                       #27
                                          7055
                                          7056
                                          7057  # MOVWA implementation
                                          7058  label('movwa#13')
movwa#13:     17df c21d  st   [$1d]       7059  st([vTmp])                      #13 address of dst var
              17e0 de00  st   [y,x++]     7060  st([Y,Xpp])                     #14 X++
              17e1 00fb  ld   $fb         7061  ld(min(0,maxTicks-40/2))        #15
              17e2 8115  adda [$15]       7062  adda([vTicks])                  #16
              17e3 e8f9  blt  .movwa#19   7063  blt('.movwa#19')                #17 not enough time left, so retry
              17e4 0d00  ld   [y,x]       7064  ld([Y,X])                       #18
              17e5 1200  ld   ac,x        7065  ld(AC,X)                        #19 address of src var
              17e6 1400  ld   $00,y       7066  ld(0,Y)                         #20
              17e7 0d00  ld   [y,x]       7067  ld([Y,X])                       #21 src.lo
              17e8 de00  st   [y,x++]     7068  st([Y,Xpp])                     #22 X++
              17e9 c22a  st   [$2a]       7069  st([sysArgs+6])                 #23
              17ea 0500  ld   [x]         7070  ld([X])                         #24 src.hi
              17eb c22b  st   [$2b]       7071  st([sysArgs+7])                 #25
              17ec 111d  ld   [$1d],x     7072  ld([vTmp],X)                    #26 address of dst var
              17ed 012a  ld   [$2a]       7073  ld([sysArgs+6])                 #27
              17ee de00  st   [y,x++]     7074  st([Y,Xpp])                     #28 dst.lo = src.lo, X++
              17ef c218  st   [$18]       7075  st([vAC])                       #29 vAC.lo = dst.lo
              17f0 012b  ld   [$2b]       7076  ld([sysArgs+7])                 #30
              17f1 ce00  st   [y,x]       7077  st([Y,X])                       #31 dst.hi = src.hi
              17f2 c219  st   [$19]       7078  st([vAC+1])                     #32 vAC.hi = dst.hi
              17f3 0116  ld   [$16]       7079  ld([vPC])                       #33
              17f4 8001  adda $01         7080  adda(1)                         #34
              17f5 c216  st   [$16]       7081  st([vPC])                       #35 advance vPC by 1
              17f6 1403  ld   $03,y       7082  ld(hi('NEXTY'),Y)               #36
              17f7 e000  jmp  y,$00       7083  jmp(Y,'NEXTY')                  #37
              17f8 00ec  ld   $ec         7084  ld(-40/2)                       #38
                                          7085
                                          7086  label('.movwa#19')
.movwa#19:    17f9 0116  ld   [$16]       7087  ld([vPC])                       #19 retry instruction
              17fa a002  suba $02         7088  suba(2)                         #20
              17fb c216  st   [$16]       7089  st([vPC])                       #21
              17fc 1403  ld   $03,y       7090  ld(hi('NEXTY'),Y)               #22
              17fd e000  jmp  y,$00       7091  jmp(Y,'NEXTY')                  #23
              17fe 00f3  ld   $f3         7092  ld(-26/2)                       #24
                                          7093
                                          7094
                                          7095  fillers(until=0xff)
              17ff 0200  nop              7096  align(0x100, size=0x100)
                                          7097
                                          7098  #-----------------------------------------------------------------------
                                          7099  #       More vCPU instruction implementations, (0x1800)
                                          7100  #-----------------------------------------------------------------------
                                          7101  #
                                          7102  # SYS retry implementation
                                          7103  label('.sys#16')
.sys#16:      1800 0116  ld   [$16]       7104  ld([vPC])                       #16
              1801 a002  suba $02         7105  suba(2)                         #17
              1802 c216  st   [$16]       7106  st([vPC])                       #18
              1803 1403  ld   $03,y       7107  ld(hi('REENTER'),Y)             #19
              1804 e0cb  jmp  y,$cb       7108  jmp(Y,'REENTER')                #20
              1805 00f4  ld   $f4         7109  ld(-24/2)                       #21
                                          7110
                                          7111  # LUP return, no longer part of PEEK
                                          7112  label('lupReturn#19')
lupReturn#19: 1806 0000  ld   $00         7113  ld(0)                           #19
              1807 c219  st   [$19]       7114  st([vAC+1])                     #20
              1808 1403  ld   $03,y       7115  ld(hi('REENTER'),Y)             #21
              1809 e0cb  jmp  y,$cb       7116  jmp(Y,'REENTER')                #22
              180a 00f3  ld   $f3         7117  ld(-26/2)                       #23
                                          7118
                                          7119
                                          7120  # PEEKV+ implementation
                                          7121  label('peekv+#13')
peekv+#13:    180b 1400  ld   $00,y       7122  ld(0,Y)                         #13
              180c 1200  ld   ac,x        7123  ld(AC,X)                        #14
              180d 00fd  ld   $fd         7124  ld(min(0,maxTicks-36/2))        #15
              180e 8115  adda [$15]       7125  adda([vTicks])                  #16
              180f e82a  blt  .peekv+#19  7126  blt('.peekv+#19')               #17 not enough time left, so retry
              1810 0500  ld   [x]         7127  ld([X])                         #18 low byte peek address
              1811 c21d  st   [$1d]       7128  st([vTmp])                      #19
              1812 8001  adda $01         7129  adda(1)                         #20
              1813 de00  st   [y,x++]     7130  st([Y,Xpp])                     #21
              1814 f01f  beq  .peekv+#24  7131  beq('.peekv+#24')               #22 if low byte is 0x00
              1815 0500  ld   [x]         7132  ld([X])                         #23 high byte peek address
              1816 1600  ld   ac,y        7133  ld(AC,Y)                        #24
              1817 111d  ld   [$1d],x     7134  ld([vTmp],X)                    #25
              1818 0d00  ld   [y,x]       7135  ld([Y,X])                       #26
              1819 c218  st   [$18]       7136  st([vAC])                       #27
              181a 0000  ld   $00         7137  ld(0)                           #28
              181b c219  st   [$19]       7138  st([vAC+1])                     #29
              181c 1403  ld   $03,y       7139  ld(hi('NEXTY'),Y)               #30
              181d e000  jmp  y,$00       7140  jmp(Y,'NEXTY')                  #31
              181e 00ef  ld   $ef         7141  ld(-34/2)                       #32
                                          7142
                                          7143  label('.peekv+#24')
.peekv+#24:   181f 1600  ld   ac,y        7144  ld(AC,Y)                        #24
              1820 8001  adda $01         7145  adda(1)                         #25
              1821 c600  st   [x]         7146  st([X])                         #26
              1822 111d  ld   [$1d],x     7147  ld([vTmp],X)                    #27
              1823 0d00  ld   [y,x]       7148  ld([Y,X])                       #28
              1824 c218  st   [$18]       7149  st([vAC])                       #29
              1825 0000  ld   $00         7150  ld(0)                           #30
              1826 c219  st   [$19]       7151  st([vAC+1])                     #31
              1827 1403  ld   $03,y       7152  ld(hi('NEXTY'),Y)               #32
              1828 e000  jmp  y,$00       7153  jmp(Y,'NEXTY')                  #33
              1829 00ee  ld   $ee         7154  ld(-36/2)                       #34
                                          7155
                                          7156  label('.peekv+#19')
.peekv+#19:   182a 0116  ld   [$16]       7157  ld([vPC])                       #19 retry instruction
              182b a002  suba $02         7158  suba(2)                         #20
              182c c216  st   [$16]       7159  st([vPC])                       #21
              182d 1403  ld   $03,y       7160  ld(hi('NEXTY'),Y)               #22
              182e e000  jmp  y,$00       7161  jmp(Y,'NEXTY')                  #23
              182f 00f3  ld   $f3         7162  ld(-26/2)                       #24
                                          7163
                                          7164
                                          7165  # POKEV+ implementation
                                          7166  label('pokev+#13')
pokev+#13:    1830 1400  ld   $00,y       7167  ld(0,Y)                         #13
              1831 1200  ld   ac,x        7168  ld(AC,X)                        #14 Operand
              1832 00fe  ld   $fe         7169  ld(min(0,maxTicks-34/2))        #15
              1833 8115  adda [$15]       7170  adda([vTicks])                  #16
              1834 e84b  blt  .pokev+#19  7171  blt('.pokev+#19')               #17 not enough time left, so retry
              1835 0500  ld   [x]         7172  ld([X])                         #18 low byte poke address
              1836 c21d  st   [$1d]       7173  st([vTmp])                      #19
              1837 8001  adda $01         7174  adda(1)                         #20
              1838 de00  st   [y,x++]     7175  st([Y,Xpp])                     #21
              1839 f042  beq  .pokev+#24  7176  beq('.pokev+#24')               #22 if low byte is 0x00
              183a 0500  ld   [x]         7177  ld([X])                         #23 high byte poke address
              183b 1600  ld   ac,y        7178  ld(AC,Y)                        #24
              183c 111d  ld   [$1d],x     7179  ld([vTmp],X)                    #25
              183d 0118  ld   [$18]       7180  ld([vAC])                       #26
              183e ce00  st   [y,x]       7181  st([Y,X])                       #27
              183f 1403  ld   $03,y       7182  ld(hi('NEXTY'),Y)               #28
              1840 e000  jmp  y,$00       7183  jmp(Y,'NEXTY')                  #29
              1841 00f0  ld   $f0         7184  ld(-32/2)                       #30
                                          7185
                                          7186  label('.pokev+#24')
.pokev+#24:   1842 1600  ld   ac,y        7187  ld(AC,Y)                        #24
              1843 8001  adda $01         7188  adda(1)                         #25
              1844 c600  st   [x]         7189  st([X])                         #26
              1845 111d  ld   [$1d],x     7190  ld([vTmp],X)                    #27
              1846 0118  ld   [$18]       7191  ld([vAC])                       #28
              1847 ce00  st   [y,x]       7192  st([Y,X])                       #29
              1848 1403  ld   $03,y       7193  ld(hi('NEXTY'),Y)               #30
              1849 e000  jmp  y,$00       7194  jmp(Y,'NEXTY')                  #31
              184a 00ef  ld   $ef         7195  ld(-34/2)                       #32
                                          7196
                                          7197  label('.pokev+#19')
.pokev+#19:   184b 0116  ld   [$16]       7198  ld([vPC])                       #19 retry instruction
              184c a002  suba $02         7199  suba(2)                         #20
              184d c216  st   [$16]       7200  st([vPC])                       #21
              184e 1403  ld   $03,y       7201  ld(hi('NEXTY'),Y)               #22
              184f e000  jmp  y,$00       7202  jmp(Y,'NEXTY')                  #23
              1850 00f3  ld   $f3         7203  ld(-26/2)                       #24
                                          7204
                                          7205
                                          7206  # DEEKV+ implementation
                                          7207  label('deekv+#13')
deekv+#13:    1851 1400  ld   $00,y       7208  ld(0,Y)                         #13
              1852 1200  ld   ac,x        7209  ld(AC,X)                        #14
              1853 00fc  ld   $fc         7210  ld(min(0,maxTicks-38/2))        #15
              1854 8115  adda [$15]       7211  adda([vTicks])                  #16
              1855 e873  blt  .deekv+#19  7212  blt('.deekv+#19')               #17 not enough time left, so retry
              1856 0500  ld   [x]         7213  ld([X])                         #18 low byte deek address
              1857 c21d  st   [$1d]       7214  st([vTmp])                      #19
              1858 8002  adda $02         7215  adda(2)                         #20
              1859 de00  st   [y,x++]     7216  st([Y,Xpp])                     #21
              185a 20fe  anda $fe         7217  anda(0xFE)                      #22
              185b f067  beq  .deekv+#25  7218  beq('.deekv+#25')               #23 if low byte is 0x00 or 0x01
              185c 0500  ld   [x]         7219  ld([X])                         #24 high byte deek address
              185d 1600  ld   ac,y        7220  ld(AC,Y)                        #25
              185e 111d  ld   [$1d],x     7221  ld([vTmp],X)                    #26
              185f 0d00  ld   [y,x]       7222  ld([Y,X])                       #27
              1860 de00  st   [y,x++]     7223  st([Y,Xpp])                     #28 X++
              1861 c218  st   [$18]       7224  st([vAC])                       #29
              1862 0d00  ld   [y,x]       7225  ld([Y,X])                       #30
              1863 c219  st   [$19]       7226  st([vAC+1])                     #31
              1864 1403  ld   $03,y       7227  ld(hi('NEXTY'),Y)               #32
              1865 e000  jmp  y,$00       7228  jmp(Y,'NEXTY')                  #33
              1866 00ee  ld   $ee         7229  ld(-36/2)                       #34
                                          7230
                                          7231  label('.deekv+#25')
.deekv+#25:   1867 1600  ld   ac,y        7232  ld(AC,Y)                        #25
              1868 8001  adda $01         7233  adda(1)                         #26
              1869 c600  st   [x]         7234  st([X])                         #27
              186a 111d  ld   [$1d],x     7235  ld([vTmp],X)                    #28
              186b 0d00  ld   [y,x]       7236  ld([Y,X])                       #29
              186c de00  st   [y,x++]     7237  st([Y,Xpp])                     #30 X++
              186d c218  st   [$18]       7238  st([vAC])                       #31
              186e 0d00  ld   [y,x]       7239  ld([Y,X])                       #32
              186f c219  st   [$19]       7240  st([vAC+1])                     #33
              1870 1403  ld   $03,y       7241  ld(hi('NEXTY'),Y)               #34
              1871 e000  jmp  y,$00       7242  jmp(Y,'NEXTY')                  #35
              1872 00ed  ld   $ed         7243  ld(-38/2)                       #36
                                          7244
                                          7245  label('.deekv+#19')
.deekv+#19:   1873 0116  ld   [$16]       7246  ld([vPC])                       #19 retry instruction
              1874 a002  suba $02         7247  suba(2)                         #20
              1875 c216  st   [$16]       7248  st([vPC])                       #21
              1876 1403  ld   $03,y       7249  ld(hi('NEXTY'),Y)               #22
              1877 e000  jmp  y,$00       7250  jmp(Y,'NEXTY')                  #23
              1878 00f3  ld   $f3         7251  ld(-26/2)                       #24
                                          7252
                                          7253
                                          7254  # DOKEV+ implementation
                                          7255  label('dokev+#13')
dokev+#13:    1879 1200  ld   ac,x        7256  ld(AC,X)                        #13
              187a 00fd  ld   $fd         7257  ld(min(0,maxTicks-36/2))        #14
              187b 8115  adda [$15]       7258  adda([vTicks])                  #15
              187c e898  blt  .dokev+#18  7259  blt('.dokev+#18')               #16 not enough time left, so retry
              187d 0500  ld   [x]         7260  ld([X])                         #17 low byte poke address
              187e c21d  st   [$1d]       7261  st([vTmp])                      #18
              187f 8002  adda $02         7262  adda(2)                         #19
              1880 de00  st   [y,x++]     7263  st([Y,Xpp])                     #20
              1881 20fe  anda $fe         7264  anda(0xFE)                      #21
              1882 f08d  beq  .dokev+#24  7265  beq('.dokev+#24')               #22 if low byte is 0x00 or 0x01
              1883 0500  ld   [x]         7266  ld([X])                         #23 high byte poke address
              1884 1600  ld   ac,y        7267  ld(AC,Y)                        #24
              1885 111d  ld   [$1d],x     7268  ld([vTmp],X)                    #25
              1886 0118  ld   [$18]       7269  ld([vAC])                       #26
              1887 de00  st   [y,x++]     7270  st([Y,Xpp])                     #27
              1888 0119  ld   [$19]       7271  ld([vAC+1])                     #28
              1889 ce00  st   [y,x]       7272  st([Y,X])                       #29
              188a 1403  ld   $03,y       7273  ld(hi('NEXTY'),Y)               #30
              188b e000  jmp  y,$00       7274  jmp(Y,'NEXTY')                  #31
              188c 00ef  ld   $ef         7275  ld(-34/2)                       #32
                                          7276
                                          7277  label('.dokev+#24')
.dokev+#24:   188d 1600  ld   ac,y        7278  ld(AC,Y)                        #24
              188e 8001  adda $01         7279  adda(1)                         #25
              188f c600  st   [x]         7280  st([X])                         #26
              1890 111d  ld   [$1d],x     7281  ld([vTmp],X)                    #27
              1891 0118  ld   [$18]       7282  ld([vAC])                       #28
              1892 de00  st   [y,x++]     7283  st([Y,Xpp])                     #29
              1893 0119  ld   [$19]       7284  ld([vAC+1])                     #30
              1894 ce00  st   [y,x]       7285  st([Y,X])                       #31
              1895 1403  ld   $03,y       7286  ld(hi('NEXTY'),Y)               #32
              1896 e000  jmp  y,$00       7287  jmp(Y,'NEXTY')                  #33
              1897 00ee  ld   $ee         7288  ld(-36/2)                       #34
                                          7289
                                          7290  label('.dokev+#18')
.dokev+#18:   1898 0116  ld   [$16]       7291  ld([vPC])                       #18 retry instruction
              1899 a002  suba $02         7292  suba(2)                         #19
              189a c216  st   [$16]       7293  st([vPC])                       #20
              189b 1403  ld   $03,y       7294  ld(hi('REENTER'),Y)             #21
              189c e0cb  jmp  y,$cb       7295  jmp(Y,'REENTER')                #22
              189d 00f3  ld   $f3         7296  ld(-26/2)                       #23
                                          7297
                                          7298
                                          7299  # CMPI implementation
                                          7300  label('cmpi#13')
cmpi#13:      189e c21d  st   [$1d]       7301  st([vTmp])                      #13 immediate value
              189f 00fd  ld   $fd         7302  ld(min(0,maxTicks-36/2))        #14
              18a0 8115  adda [$15]       7303  adda([vTicks])                  #15
              18a1 e8be  blt  .cmpi#18    7304  blt('.cmpi#18')                 #16 not enough time left, so retry
              18a2 1517  ld   [$17],y     7305  ld([vPC+1],Y)                   #17
              18a3 011d  ld   [$1d]       7306  ld([vTmp])                      #18 immediate value
              18a4 de00  st   [y,x++]     7307  st([Y,Xpp])                     #19 X++
              18a5 0d00  ld   [y,x]       7308  ld([Y,X])                       #20 address of var
              18a6 1200  ld   ac,x        7309  ld(AC,X)                        #21
              18a7 0500  ld   [x]         7310  ld([X])                         #22 low byte of var
              18a8 e8b4  blt  .cmpi#25    7311  bmi('.cmpi#25')                 #23
              18a9 a11d  suba [$1d]       7312  suba([vTmp])                    #24
              18aa c218  st   [$18]       7313  st([vAC])                       #25 store low result
              18ab 411d  ora  [$1d]       7314  ora([vTmp])                     #26
              18ac 2080  anda $80         7315  anda(0x80)                      #27
              18ad c219  st   [$19]       7316  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              18ae 0116  ld   [$16]       7317  ld([vPC])                       #29
              18af 8001  adda $01         7318  adda(1)                         #30
              18b0 c216  st   [$16]       7319  st([vPC])                       #31 advance vPC by 1
              18b1 1403  ld   $03,y       7320  ld(hi('NEXTY'),Y)               #32
              18b2 e000  jmp  y,$00       7321  jmp(Y,'NEXTY')                  #33
              18b3 00ee  ld   $ee         7322  ld(-36/2)                       #34
                                          7323  label('.cmpi#25')
.cmpi#25:     18b4 c218  st   [$18]       7324  st([vAC])                       #25 store low result
              18b5 211d  anda [$1d]       7325  anda([vTmp])                    #26
              18b6 2080  anda $80         7326  anda(0x80)                      #27
              18b7 c219  st   [$19]       7327  st([vAC+1])                     #28 [vAC.hi] = sign bit, numerical accuracy is not important
              18b8 0116  ld   [$16]       7328  ld([vPC])                       #29
              18b9 8001  adda $01         7329  adda(1)                         #30
              18ba c216  st   [$16]       7330  st([vPC])                       #31 advance vPC by 1
              18bb 1403  ld   $03,y       7331  ld(hi('NEXTY'),Y)               #32
              18bc e000  jmp  y,$00       7332  jmp(Y,'NEXTY')                  #33
              18bd 00ee  ld   $ee         7333  ld(-36/2)                       #34
                                          7334  label('.cmpi#18')
.cmpi#18:     18be 0116  ld   [$16]       7335  ld([vPC])                       #18 retry instruction
              18bf a002  suba $02         7336  suba(2)                         #19
              18c0 c216  st   [$16]       7337  st([vPC])                       #20
              18c1 1403  ld   $03,y       7338  ld(hi('REENTER'),Y)             #21
              18c2 e0cb  jmp  y,$cb       7339  jmp(Y,'REENTER')                #22
              18c3 00f3  ld   $f3         7340  ld(-26/2)                       #23
                                          7341  # CMPI implementation
                                          7342  #label('cmpi#13')
                                          7343  #st([vTmp])                      #13 immediate value
                                          7344  #ld(min(0,maxTicks-42/2))        #14
                                          7345  #adda([vTicks])                  #15
                                          7346  #blt('.cmpi#18')                 #16 not enough time left, so retry
                                          7347  #ld([vPC+1],Y)                   #17
                                          7348  #ld([vTmp])                      #18 immediate value
                                          7349  #st([Y,Xpp])                     #19 X++
                                          7350  #ld([Y,X])                       #20 address of var
                                          7351  #ld(AC,X)                        #21
                                          7352  #ld(0,Y)                         #22
                                          7353  #ld([X])                         #23 low byte of var
                                          7354  #st([sysArgs+7])                 #24
                                          7355  #st([Y,Xpp])                     #25 X++
                                          7356  #ld([X])                         #26 high byte of var
                                          7357  #beq('.cmpi#29')                 #27 exit if var.hi != 0
                                          7358  #ld([sysArgs+7])                 #28 var.lo
                                          7359  #ld([vPC])                       #29
                                          7360  #adda(1)                         #30
                                          7361  #st([vPC])                       #31 advance vPC by 1
                                          7362  #ld(hi('NEXTY'),Y)               #32
                                          7363  #jmp(Y,'NEXTY')                  #33
                                          7364  #ld(-36/2)                       #34
                                          7365  #
                                          7366  #label('.cmpi#29')
                                          7367  #bmi('.cmpi#31')                 #29
                                          7368  #suba([vTmp])                    #30
                                          7369  #st([vAC])                       #31 store low result
                                          7370  #ora([vTmp])                     #32
                                          7371  #anda(0x80)                      #33
                                          7372  #st([vAC+1])                     #34 [vAC.hi] = sign bit, numerical accuracy is not important
                                          7373  #ld([vPC])                       #35
                                          7374  #adda(1)                         #36
                                          7375  #st([vPC])                       #37 advance vPC by 1
                                          7376  #ld(hi('NEXTY'),Y)               #38
                                          7377  #jmp(Y,'NEXTY')                  #39
                                          7378  #ld(-42/2)                       #40
                                          7379  #
                                          7380  #label('.cmpi#31')
                                          7381  #st([vAC])                       #31 store low result
                                          7382  #anda([vTmp])                    #32
                                          7383  #anda(0x80)                      #33
                                          7384  #st([vAC+1])                     #34 [vAC.hi] = sign bit, numerical accuracy is not important
                                          7385  #ld([vPC])                       #35
                                          7386  #adda(1)                         #36
                                          7387  #st([vPC])                       #37 advance vPC by 1
                                          7388  #ld(hi('NEXTY'),Y)               #38
                                          7389  #jmp(Y,'NEXTY')                  #39
                                          7390  #ld(-42/2)                       #40
                                          7391  #
                                          7392  #label('.cmpi#18')
                                          7393  #ld([vPC])                       #18 retry instruction
                                          7394  #suba(2)                         #19
                                          7395  #st([vPC])                       #20
                                          7396  #ld(hi('REENTER'),Y)             #21
                                          7397  #jmp(Y,'REENTER')                #22
                                          7398  #ld(-26/2)                       #23
                                          7399
                                          7400
                                          7401  # JEQ implementation
                                          7402  label('jeq#13')
jeq#13:       18c4 1517  ld   [$17],y     7403  ld([vPC+1],Y)                   #13 vPC.hi
              18c5 0119  ld   [$19]       7404  ld([vAC+1])                     #14
              18c6 4118  ora  [$18]       7405  ora([vAC])                      #15
              18c7 f0cf  beq  .jeq#18     7406  beq('.jeq#18')                  #16 if (vAC.hi OR vAC.lo) == 0
              18c8 0d00  ld   [y,x]       7407  ld([Y,X])                       #17 lo address of jump destination
              18c9 0116  ld   [$16]       7408  ld([vPC])                       #18
              18ca 8001  adda $01         7409  adda(1)                         #19
              18cb c216  st   [$16]       7410  st([vPC])                       #20
              18cc 1403  ld   $03,y       7411  ld(hi('REENTER'),Y)             #21
              18cd e0cb  jmp  y,$cb       7412  jmp(Y,'REENTER')                #22
              18ce 00f3  ld   $f3         7413  ld(-26/2)                       #23
                                          7414  label('.jeq#18')
.jeq#18:      18cf c216  st   [$16]       7415  st([vPC])                       #18
              18d0 de00  st   [y,x++]     7416  st([Y,Xpp])                     #19
              18d1 0d00  ld   [y,x]       7417  ld([Y,X])                       #20 hi address of jump destination
              18d2 c217  st   [$17]       7418  st([vPC+1])                     #21
              18d3 1403  ld   $03,y       7419  ld(hi('NEXTY'),Y)               #22
              18d4 e000  jmp  y,$00       7420  jmp(Y,'NEXTY')                  #23
              18d5 00f3  ld   $f3         7421  ld(-26/2)                       #24
                                          7422
                                          7423  # JNE implementation
                                          7424  label('jne#13')
jne#13:       18d6 1517  ld   [$17],y     7425  ld([vPC+1],Y)                   #13 vPC.hi
              18d7 0119  ld   [$19]       7426  ld([vAC+1])                     #14
              18d8 4118  ora  [$18]       7427  ora([vAC])                      #15
              18d9 ece1  bne  .jne#18     7428  bne('.jne#18')                  #16 if (vAC.hi OR vAC.lo) != 0
              18da 0d00  ld   [y,x]       7429  ld([Y,X])                       #17 address of branch destination
              18db 0116  ld   [$16]       7430  ld([vPC])                       #18
              18dc 8001  adda $01         7431  adda(1)                         #19
              18dd c216  st   [$16]       7432  st([vPC])                       #20
              18de 1403  ld   $03,y       7433  ld(hi('REENTER'),Y)             #21
              18df e0cb  jmp  y,$cb       7434  jmp(Y,'REENTER')                #22
              18e0 00f3  ld   $f3         7435  ld(-26/2)                       #23
                                          7436  label('.jne#18')
.jne#18:      18e1 c216  st   [$16]       7437  st([vPC])                       #18
              18e2 de00  st   [y,x++]     7438  st([Y,Xpp])                     #19
              18e3 0d00  ld   [y,x]       7439  ld([Y,X])                       #20 hi address of jump destination
              18e4 c217  st   [$17]       7440  st([vPC+1])                     #21
              18e5 1403  ld   $03,y       7441  ld(hi('NEXTY'),Y)               #22
              18e6 e000  jmp  y,$00       7442  jmp(Y,'NEXTY')                  #23
              18e7 00f3  ld   $f3         7443  ld(-26/2)                       #24
                                          7444
                                          7445
              18e8 0200  nop              7446  fillers(until=0xff)
              18e9 0200  nop
              18ea 0200  nop
              * 23 times
              18ff 0200  nop              7447  align(0x100, size=0x100)
                                          7448
                                          7449  #-----------------------------------------------------------------------
                                          7450  #       More sys implementations, (0x1900)
                                          7451  #-----------------------------------------------------------------------
                                          7452  # sys_Multiply_s16, sum:s16 = x:s16 * y:s16
                                          7453  # x:args0:1 y:args2:3 sum:args4:5 mask:args6:7
                                          7454  label('sys_Multiply_s16')
sys_Multiply_s16:
              1900 2126  anda [$26]       7455  anda([sysArgs+2])               #18,
              1901 c218  st   [$18]       7456  st([vAC])                       #19, AC.lo = mask.lo AND y.lo
              1902 012b  ld   [$2b]       7457  ld([sysArgs+7])                 #20, load mask.hio
              1903 2127  anda [$27]       7458  anda([sysArgs+3])               #21,
              1904 c219  st   [$19]       7459  st([vAC+1])                     #22, AC.hi = mask.hi AND y.hi
              1905 4118  ora  [$18]       7460  ora([vAC])                      #23,
                                          7461  beq('.sys_ms16_26')             #24, AC = 0 then skip
              1906 f00e  beq  .sys_ms16_26
              1907 0128  ld   [$28]       7462  ld([sysArgs+4])                 #25, load sum.lo
              1908 8124  adda [$24]       7463  adda([sysArgs+0])               #26, load x.lo
              1909 c228  st   [$28]       7464  st([sysArgs+4])                 #27, sum.lo = sum.lo + x.lo
                                          7465  blt('.sys_ms16_30')             #28, check for carry
              190a e810  blt  .sys_ms16_30
              190b a124  suba [$24]       7466  suba([sysArgs+0])               #29, get original sum.lo back
                                          7467  bra('.sys_ms16_32')             #30,
              190c fc12  bra  .sys_ms16_32
              190d 4124  ora  [$24]       7468  ora([sysArgs+0])                #31, carry in bit 7
                                          7469
                                          7470  label('.sys_ms16_26')
                                          7471  bra('.sys_ms16_28')             #26,
.sys_ms16_26: 190e fc18  bra  .sys_ms16_28
              190f 00e4  ld   $e4         7472  ld(-56/2)                       #27, no accumulate sys ticks
                                          7473
                                          7474  label('.sys_ms16_30')
.sys_ms16_30: 1910 2124  anda [$24]       7475  anda([sysArgs+0])               #30, carry in bit 7
              1911 0200  nop              7476  nop()                           #31,
                                          7477
                                          7478  label('.sys_ms16_32')
.sys_ms16_32: 1912 3080  anda $80,x       7479  anda(0x80,X)                    #32,
              1913 0500  ld   [x]         7480  ld([X])                         #33, move carry to bit 0
              1914 8129  adda [$29]       7481  adda([sysArgs+5])               #34,
              1915 8125  adda [$25]       7482  adda([sysArgs+1])               #35,
              1916 c229  st   [$29]       7483  st([sysArgs+5])                 #36, sum.hi = sum.hi + x.hi
              1917 00df  ld   $df         7484  ld(-66/2)                       #37, accumulate sys ticks
                                          7485
                                          7486  label('.sys_ms16_28')
.sys_ms16_28: 1918 c21d  st   [$1d]       7487  st([vTmp])                      #28,#38,
              1919 0124  ld   [$24]       7488  ld([sysArgs+0])                 #29,#39, AC = x.lo
              191a 3080  anda $80,x       7489  anda(0x80,X)                    #30,#40, X = AC & 0x80
              191b 8124  adda [$24]       7490  adda([sysArgs+0])               #31,#41, AC = x.lo <<1
              191c c224  st   [$24]       7491  st([sysArgs+0])                 #32,#42, x.lo = AC
              191d 0500  ld   [x]         7492  ld([X])                         #33,#43, AC = X >>7
              191e 8125  adda [$25]       7493  adda([sysArgs+1])               #34,#44,
              191f 8125  adda [$25]       7494  adda([sysArgs+1])               #35,#45,
              1920 c225  st   [$25]       7495  st([sysArgs+1])                 #36,#46, x.hi = x.hi <<1 + AC
              1921 012a  ld   [$2a]       7496  ld([sysArgs+6])                 #37,#47, AC = mask.lo
              1922 3080  anda $80,x       7497  anda(0x80,X)                    #38,#48, X = AC & 0x80
              1923 812a  adda [$2a]       7498  adda([sysArgs+6])               #39,#49, AC = mask.lo <<1
              1924 c22a  st   [$2a]       7499  st([sysArgs+6])                 #40,#50, mask.lo = AC
              1925 0500  ld   [x]         7500  ld([X])                         #41,#51, AC = X >>7
              1926 812b  adda [$2b]       7501  adda([sysArgs+7])               #42,#52,
              1927 812b  adda [$2b]       7502  adda([sysArgs+7])               #43,#53,
              1928 c22b  st   [$2b]       7503  st([sysArgs+7])                 #44,#54, mask.hi = mask.hi <<1 + AC
              1929 412a  ora  [$2a]       7504  ora([sysArgs+6])                #45,#55,
                                          7505  beq('.sys_ms16_48')             #46,#56, if mask = 0
              192a f032  beq  .sys_ms16_48
              192b 0128  ld   [$28]       7506  ld([sysArgs+4])                 #47,#57
              192c 0116  ld   [$16]       7507  ld([vPC])                       #48,#58,
              192d a002  suba $02         7508  suba(2)                         #49,#59,
              192e c216  st   [$16]       7509  st([vPC])                       #50,#60, restart SYS function
              192f 1403  ld   $03,y       7510  ld(hi('REENTER'),Y)             #51,#61,
              1930 e0cb  jmp  y,$cb       7511  jmp(Y,'REENTER')                #52,#62,
              1931 011d  ld   [$1d]       7512  ld([vTmp])                      #53,#63,
                                          7513
                                          7514  label('.sys_ms16_48')
.sys_ms16_48: 1932 c218  st   [$18]       7515  st([vAC])                       #48,#58,
              1933 0129  ld   [$29]       7516  ld([sysArgs+5])                 #49,#59,
              1934 c219  st   [$19]       7517  st([vAC+1])                     #50,#60,
              1935 1403  ld   $03,y       7518  ld(hi('REENTER'),Y)             #51,#61,
              1936 e0cb  jmp  y,$cb       7519  jmp(Y,'REENTER')                #52,#62,
              1937 011d  ld   [$1d]       7520  ld([vTmp])                      #53,#63,
                                          7521
                                          7522
                                          7523  #-----------------------------------------------------------------------
                                          7524  # sys_Divide_s16, x:s16 = x:s16 / y:s16, rem:s16 = x:s16 % y:s16
                                          7525  # x:args0:1 y:args2:3 rem:args4:5 mask:args6:7
                                          7526  label('sys_Divide_s16')
sys_Divide_s16:
              1938 3080  anda $80,x       7527  anda(0x80,X)                    #18, X = AC & 0x80
              1939 8128  adda [$28]       7528  adda([sysArgs+4])               #19, AC = rem.lo <<1
              193a c228  st   [$28]       7529  st([sysArgs+4])                 #20, rem.lo = AC
              193b 0500  ld   [x]         7530  ld([X])                         #21, AC = X >>7
              193c 8129  adda [$29]       7531  adda([sysArgs+5])               #22,
              193d 8129  adda [$29]       7532  adda([sysArgs+5])               #23,
              193e c229  st   [$29]       7533  st([sysArgs+5])                 #24, rem.hi = rem.hi <<1 + AC
              193f 0125  ld   [$25]       7534  ld([sysArgs+1])                 #25,
              1940 2080  anda $80         7535  anda(0x80)                      #26, sign of x
                                          7536  beq('.sys_ds16_29')             #27, if x >= 0
              1941 f046  beq  .sys_ds16_29
              1942 0128  ld   [$28]       7537  ld([sysArgs+4])                 #28,
              1943 8001  adda $01         7538  adda(1)                         #29,
                                          7539  bra('.sys_ds16_32')             #30,
              1944 fc49  bra  .sys_ds16_32
              1945 c228  st   [$28]       7540  st([sysArgs+4])                 #31, rem.lo++
                                          7541
                                          7542  label('.sys_ds16_29')
.sys_ds16_29: 1946 0200  nop              7543  nop()                           #29
              1947 0200  nop              7544  nop()                           #30
              1948 0200  nop              7545  nop()                           #31
                                          7546
                                          7547  label('.sys_ds16_32')
.sys_ds16_32: 1949 0124  ld   [$24]       7548  ld([sysArgs+0])                 #32, AC = x.lo
              194a 3080  anda $80,x       7549  anda(0x80,X)                    #33, X = AC & 0x80
              194b 8124  adda [$24]       7550  adda([sysArgs+0])               #34, AC = x.lo <<1
              194c c224  st   [$24]       7551  st([sysArgs+0])                 #35, x.lo = AC
              194d 0500  ld   [x]         7552  ld([X])                         #36, AC = X >>7
              194e 8125  adda [$25]       7553  adda([sysArgs+1])               #37,
              194f 8125  adda [$25]       7554  adda([sysArgs+1])               #38,
              1950 c225  st   [$25]       7555  st([sysArgs+1])                 #39, x.hi = x.hi <<1 + AC
                                          7556
              1951 0128  ld   [$28]       7557  ld([sysArgs+4])                 #40, load rem.lo
                                          7558  blt('.sys_ds16_43')             #41, check for borrow
              1952 e857  blt  .sys_ds16_43
              1953 a126  suba [$26]       7559  suba([sysArgs+2])               #42,
              1954 c218  st   [$18]       7560  st([vAC])                       #43, vAC.lo = rem.lo - y.lo
                                          7561  bra('.sys_ds16_46')             #44,
              1955 fc5a  bra  .sys_ds16_46
              1956 4126  ora  [$26]       7562  ora([sysArgs+2])                #45,
                                          7563
                                          7564  label('.sys_ds16_43')
.sys_ds16_43: 1957 c218  st   [$18]       7565  st([vAC])                       #43,
              1958 2126  anda [$26]       7566  anda([sysArgs+2])               #44,
              1959 0200  nop              7567  nop()                           #45,
                                          7568
                                          7569  label('.sys_ds16_46')
.sys_ds16_46: 195a 3080  anda $80,x       7570  anda(0x80,X)                    #46, move borrow to bit 0
              195b 0129  ld   [$29]       7571  ld([sysArgs+5])                 #47, load rem.hi
              195c a500  suba [x]         7572  suba([X])                       #48,
              195d a127  suba [$27]       7573  suba([sysArgs+3])               #49,
              195e c219  st   [$19]       7574  st([vAC+1])                     #50, vAC.hi = rem.hi - y.hi
                                          7575  blt('.sys_ds16_53')             #51,
              195f e869  blt  .sys_ds16_53
              1960 00dc  ld   $dc         7576  ld(-72/2)                       #52
              1961 0118  ld   [$18]       7577  ld([vAC])                       #53,
              1962 c228  st   [$28]       7578  st([sysArgs+4])                 #54,
              1963 0119  ld   [$19]       7579  ld([vAC+1])                     #55,
              1964 c229  st   [$29]       7580  st([sysArgs+5])                 #56, rem = vAC
              1965 0124  ld   [$24]       7581  ld([sysArgs+0])                 #57,
              1966 8001  adda $01         7582  adda(1)                         #58,
              1967 c224  st   [$24]       7583  st([sysArgs+0])                 #59, x.lo++
              1968 00d8  ld   $d8         7584  ld(-80/2)                       #60,
                                          7585
                                          7586  label('.sys_ds16_53')
.sys_ds16_53: 1969 c21d  st   [$1d]       7587  st([vTmp])                      #53, #61,
              196a 012a  ld   [$2a]       7588  ld([sysArgs+6])                 #54, #62, AC = mask.lo
              196b 3080  anda $80,x       7589  anda(0x80,X)                    #55, #63, X = AC & 0x80
              196c 812a  adda [$2a]       7590  adda([sysArgs+6])               #56, #64, AC = mask.lo <<1
              196d c22a  st   [$2a]       7591  st([sysArgs+6])                 #57, #65, mask.lo = AC
              196e 0500  ld   [x]         7592  ld([X])                         #58, #66, AC = X >>7
              196f 812b  adda [$2b]       7593  adda([sysArgs+7])               #59, #67,
              1970 812b  adda [$2b]       7594  adda([sysArgs+7])               #60, #68,
              1971 c22b  st   [$2b]       7595  st([sysArgs+7])                 #61, #69, mask.hi = mask.hi <<1 + AC
              1972 412a  ora  [$2a]       7596  ora([sysArgs+6])                #62, #70,
                                          7597  bne('.sys_ds16_65')             #63, #71,
              1973 ec7a  bne  .sys_ds16_65
              1974 0116  ld   [$16]       7598  ld([vPC])                       #64, #72,
              1975 0200  nop              7599  nop()                           #65, #73,
              1976 0200  nop              7600  nop()                           #66, #74,
              1977 1403  ld   $03,y       7601  ld(hi('REENTER'),Y)             #67, #75,
              1978 e0cb  jmp  y,$cb       7602  jmp(Y,'REENTER')                #68, #76,
              1979 011d  ld   [$1d]       7603  ld([vTmp])                      #69, #77,
                                          7604
                                          7605  label('.sys_ds16_65')
.sys_ds16_65: 197a a002  suba $02         7606  suba(2)                         #65, #73,
              197b c216  st   [$16]       7607  st([vPC])                       #66, #74, restart SYS function
              197c 1403  ld   $03,y       7608  ld(hi('REENTER'),Y)             #67, #75,
              197d e0cb  jmp  y,$cb       7609  jmp(Y,'REENTER')                #68, #76,
              197e 011d  ld   [$1d]       7610  ld([vTmp])                      #69, #77,
                                          7611
                                          7612
                                          7613  #-----------------------------------------------------------------------
                                          7614  # sys_DrawLine
                                          7615  label('sys_DrawLine')
sys_DrawLine: 197f 1182  ld   [$82],x     7616  ld([0x82],X)                    #18, X = [xy1].lo
              1980 1583  ld   [$83],y     7617  ld([0x83],Y)                    #19, Y = [xy1].hi
              1981 ce00  st   [y,x]       7618  st([Y,X])                       #20, [Y, X] = fgColour
              1982 1184  ld   [$84],x     7619  ld([0x84],X)                    #21, X = [xy2].lo
              1983 1585  ld   [$85],y     7620  ld([0x85],Y)                    #22, Y = [xy2].hi
              1984 ce00  st   [y,x]       7621  st([Y,X])                       #23, [Y, X] = fgColour
                                          7622
              1985 01a0  ld   [$a0]       7623  ld([0xA0])                      #24, num.lo
              1986 819c  adda [$9c]       7624  adda([0x9C])                    #25, sy.lo
              1987 c2a0  st   [$a0]       7625  st([0xA0])                      #26, num.lo = num.lo + sy.lo
                                          7626  blt('.sys_drawl_29')            #27, check for carry
              1988 e88c  blt  .sys_drawl_29
              1989 a19c  suba [$9c]       7627  suba([0x9C])                    #28, get original num.lo back
                                          7628  bra('.sys_drawl_31')            #29,
              198a fc8e  bra  .sys_drawl_31
              198b 419c  ora  [$9c]       7629  ora([0x9C])                     #30, carry in bit 7
                                          7630
                                          7631  label('.sys_drawl_29')
.sys_drawl_29:
              198c 219c  anda [$9c]       7632  anda([0x9C])                    #29, carry in bit 7
              198d 0200  nop              7633  nop()                           #30,
                                          7634
                                          7635  label('.sys_drawl_31')
.sys_drawl_31:
              198e 3080  anda $80,x       7636  anda(0x80,X)                    #31,
              198f 0500  ld   [x]         7637  ld([X])                         #32, move carry to bit 0
              1990 81a1  adda [$a1]       7638  adda([0xA1])                    #33,
              1991 819d  adda [$9d]       7639  adda([0x9D])                    #34,
              1992 c2a1  st   [$a1]       7640  st([0xA1])                      #35, num.hi = num.hi + sy.hi
                                          7641
              1993 01a0  ld   [$a0]       7642  ld([0xA0])                      #36, num.lo
                                          7643  blt('.sys_drawl_39')            #37, check for borrow
              1994 e899  blt  .sys_drawl_39
              1995 a19a  suba [$9a]       7644  suba([0x9A])                    #38, sx.lo
              1996 c218  st   [$18]       7645  st([vAC])                       #39, vAC.lo = num.lo - sx.lo
                                          7646  bra('.sys_drawl_42')            #40,
              1997 fc9c  bra  .sys_drawl_42
              1998 419a  ora  [$9a]       7647  ora([0x9A])                     #41,
                                          7648
                                          7649  label('.sys_drawl_39')
.sys_drawl_39:
              1999 c218  st   [$18]       7650  st([vAC])                       #39,
              199a 219a  anda [$9a]       7651  anda([0x9A])                    #40,
              199b 0200  nop              7652  nop()                           #41,
                                          7653
                                          7654  label('.sys_drawl_42')
.sys_drawl_42:
              199c 3080  anda $80,x       7655  anda(0x80,X)                    #42, move borrow to bit 0
              199d 01a1  ld   [$a1]       7656  ld([0xA1])                      #43, num.hi
              199e a500  suba [x]         7657  suba([X])                       #44,
              199f a19b  suba [$9b]       7658  suba([0x9B])                    #45,
                                          7659  blt('.sys_drawl_48')            #46,
              19a0 e8cf  blt  .sys_drawl_48
              19a1 c219  st   [$19]       7660  st([vAC+1])                     #47, vAC.hi = num.hi - sx.hi
              19a2 0118  ld   [$18]       7661  ld([vAC])                       #48,
              19a3 c2a0  st   [$a0]       7662  st([0xA0])                      #49,
              19a4 0119  ld   [$19]       7663  ld([vAC+1])                     #50,
              19a5 c2a1  st   [$a1]       7664  st([0xA1])                      #51, num = vAC
                                          7665
              19a6 0182  ld   [$82]       7666  ld([0x82])                      #52, xy1.lo
              19a7 8186  adda [$86]       7667  adda([0x86])                    #53, dxy1.lo
              19a8 c282  st   [$82]       7668  st([0x82])                      #54, xy1.lo = xy1.lo + dxy1.lo
                                          7669  blt('.sys_drawl_57')            #55, check for carry
              19a9 e8ad  blt  .sys_drawl_57
              19aa a186  suba [$86]       7670  suba([0x86])                    #56, get original xy1.lo back
                                          7671  bra('.sys_drawl_59')            #57,
              19ab fcaf  bra  .sys_drawl_59
              19ac 4186  ora  [$86]       7672  ora([0x86])                     #58, carry in bit 7
                                          7673
                                          7674  label('.sys_drawl_57')
.sys_drawl_57:
              19ad 2186  anda [$86]       7675  anda([0x86])                    #57, carry in bit 7
              19ae 0200  nop              7676  nop()                           #58,
                                          7677
                                          7678  label('.sys_drawl_59')
.sys_drawl_59:
              19af 3080  anda $80,x       7679  anda(0x80,X)                    #59,
              19b0 0500  ld   [x]         7680  ld([X])                         #60, move carry to bit 0
              19b1 8183  adda [$83]       7681  adda([0x83])                    #61,
              19b2 8187  adda [$87]       7682  adda([0x87])                    #62,
              19b3 c283  st   [$83]       7683  st([0x83])                      #63, xy1.hi = xy1.hi + dxy1.hi
                                          7684
              19b4 0184  ld   [$84]       7685  ld([0x84])                      #64, xy2.lo
                                          7686  blt('.sys_drawl_67')            #65, check for borrow
              19b5 e8ba  blt  .sys_drawl_67
              19b6 a186  suba [$86]       7687  suba([0x86])                    #66, dxy1.lo
              19b7 c284  st   [$84]       7688  st([0x84])                      #67, xy2.lo = xy2.lo - dxy1.lo
                                          7689  bra('.sys_drawl_70')            #68,
              19b8 fcbd  bra  .sys_drawl_70
              19b9 4186  ora  [$86]       7690  ora([0x86])                     #69,
                                          7691
                                          7692  label('.sys_drawl_67')
.sys_drawl_67:
              19ba c284  st   [$84]       7693  st([0x84])                      #67,
              19bb 2186  anda [$86]       7694  anda([0x86])                    #68,
              19bc 0200  nop              7695  nop()                           #69,
                                          7696
                                          7697  label('.sys_drawl_70')
.sys_drawl_70:
              19bd 3080  anda $80,x       7698  anda(0x80,X)                    #70, move borrow to bit 0
              19be 0185  ld   [$85]       7699  ld([0x85])                      #71, xy2.hi
              19bf a500  suba [x]         7700  suba([X])                       #72,
              19c0 a187  suba [$87]       7701  suba([0x87])                    #73,
              19c1 c285  st   [$85]       7702  st([0x85])                      #74, xy2.hi = xy2.hi - dxy1.hi
                                          7703
              19c2 019e  ld   [$9e]       7704  ld([0x9E])                      #75,
              19c3 a001  suba $01         7705  suba(1)                         #76,
                                          7706  bne('.sys_drawl_79')            #77,
              19c4 ecc9  bne  .sys_drawl_79
              19c5 c29e  st   [$9e]       7707  st([0x9E])                      #78, drawLine_count--
              19c6 1403  ld   $03,y       7708  ld(hi('REENTER'),Y)             #79,
              19c7 e0cb  jmp  y,$cb       7709  jmp(Y,'REENTER')                #80,
              19c8 00d6  ld   $d6         7710  ld(-84/2)                       #81,
                                          7711
                                          7712  label('.sys_drawl_79')
.sys_drawl_79:
              19c9 0116  ld   [$16]       7713  ld([vPC])                       #79,
              19ca a002  suba $02         7714  suba(2)                         #80,
              19cb c216  st   [$16]       7715  st([vPC])                       #81, restart
              19cc 1403  ld   $03,y       7716  ld(hi('NEXTY'),Y)               #82,
              19cd e000  jmp  y,$00       7717  jmp(Y,'NEXTY')                  #83,
              19ce 00d5  ld   $d5         7718  ld(-86/2)                       #84,
                                          7719
                                          7720  label('.sys_drawl_48')
.sys_drawl_48:
              19cf 0182  ld   [$82]       7721  ld([0x82])                      #48, xy1.lo
              19d0 8188  adda [$88]       7722  adda([0x88])                    #49, dxy2.lo
              19d1 c282  st   [$82]       7723  st([0x82])                      #50, xy1.lo = xy1.lo + dxy2.lo
                                          7724  blt('.sys_drawl_53')            #51, check for carry
              19d2 e8d6  blt  .sys_drawl_53
              19d3 a188  suba [$88]       7725  suba([0x88])                    #52, get original xy1.lo back
                                          7726  bra('.sys_drawl_55')            #53,
              19d4 fcd8  bra  .sys_drawl_55
              19d5 4188  ora  [$88]       7727  ora([0x88])                     #54, carry in bit 7
                                          7728
                                          7729  label('.sys_drawl_53')
.sys_drawl_53:
              19d6 2188  anda [$88]       7730  anda([0x88])                    #53, carry in bit 7
              19d7 0200  nop              7731  nop()                           #54,
                                          7732
                                          7733  label('.sys_drawl_55')
.sys_drawl_55:
              19d8 3080  anda $80,x       7734  anda(0x80,X)                    #55,
              19d9 0500  ld   [x]         7735  ld([X])                         #56, move carry to bit 0
              19da 8183  adda [$83]       7736  adda([0x83])                    #57,
              19db 8189  adda [$89]       7737  adda([0x89])                    #58,
              19dc c283  st   [$83]       7738  st([0x83])                      #59, xy1.hi = xy1.hi + dxy2.hi
                                          7739
              19dd 0184  ld   [$84]       7740  ld([0x84])                      #60, xy2.lo
                                          7741  blt('.sys_drawl_63')            #61, check for borrow
              19de e8e3  blt  .sys_drawl_63
              19df a188  suba [$88]       7742  suba([0x88])                    #62, dxy2.lo
              19e0 c284  st   [$84]       7743  st([0x84])                      #63, xy2.lo = xy2.lo - dxy2.lo
                                          7744  bra('.sys_drawl_66')            #64,
              19e1 fce6  bra  .sys_drawl_66
              19e2 4188  ora  [$88]       7745  ora([0x88])                     #65,
                                          7746
                                          7747  label('.sys_drawl_63')
.sys_drawl_63:
              19e3 c284  st   [$84]       7748  st([0x84])                      #63,
              19e4 2188  anda [$88]       7749  anda([0x88])                    #64,
              19e5 0200  nop              7750  nop()                           #65,
                                          7751
                                          7752  label('.sys_drawl_66')
.sys_drawl_66:
              19e6 3080  anda $80,x       7753  anda(0x80,X)                    #66, move borrow to bit 0
              19e7 0185  ld   [$85]       7754  ld([0x85])                      #67, xy2.hi
              19e8 a500  suba [x]         7755  suba([X])                       #68,
              19e9 a189  suba [$89]       7756  suba([0x89])                    #69,
              19ea c285  st   [$85]       7757  st([0x85])                      #70, xy2.hi = xy2.hi - dxy2.hi
                                          7758
              19eb 019e  ld   [$9e]       7759  ld([0x9E])                      #71,
              19ec a001  suba $01         7760  suba(1)                         #72,
                                          7761  bne('.sys_drawl_75')            #73,
              19ed ecf2  bne  .sys_drawl_75
              19ee c29e  st   [$9e]       7762  st([0x9E])                      #74, drawLine_count--
              19ef 1403  ld   $03,y       7763  ld(hi('REENTER'),Y)             #75,
              19f0 e0cb  jmp  y,$cb       7764  jmp(Y,'REENTER')                #76,
              19f1 00d8  ld   $d8         7765  ld(-80/2)                       #77,
                                          7766
                                          7767  label('.sys_drawl_75')
.sys_drawl_75:
              19f2 0116  ld   [$16]       7768  ld([vPC])                       #75,
              19f3 a002  suba $02         7769  suba(2)                         #76,
              19f4 c216  st   [$16]       7770  st([vPC])                       #77, restart
              19f5 1403  ld   $03,y       7771  ld(hi('NEXTY'),Y)               #78,
              19f6 e000  jmp  y,$00       7772  jmp(Y,'NEXTY')                  #79,
              19f7 00d7  ld   $d7         7773  ld(-82/2)                       #80,
                                          7774
                                          7775
              19f8 0200  nop              7776  fillers(until=0xff)
              19f9 0200  nop
              19fa 0200  nop
              * 7 times
              19ff 0200  nop              7777  align(0x100, size=0x100)
                                          7778
                                          7779  #-----------------------------------------------------------------------
                                          7780  #       More sys implementations, (0x1A00)
                                          7781  #-----------------------------------------------------------------------
                                          7782  #
                                          7783  # SYS_LoaderNextByteIn_32
                                          7784  # sysArgs[0:1] Current address
                                          7785  # sysArgs[2]   Checksum
                                          7786  # sysArgs[3]   Wait value (videoY)
                                          7787  label('SYS_LoaderNextByteIn_32')
SYS_LoaderNextByteIn_32:
              1a00 0109  ld   [$09]       7788  ld([videoY])                    #15
              1a01 6127  xora [$27]       7789  xora([sysArgs+3])               #16
              1a02 ec10  bne  .sysNbi#19  7790  bne('.sysNbi#19')               #17
              1a03 1124  ld   [$24],x     7791  ld([sysArgs+0],X)               #18
              1a04 1525  ld   [$25],y     7792  ld([sysArgs+1],Y)               #19
              1a05 0300  ld   in          7793  ld(IN)                          #20
              1a06 ce00  st   [y,x]       7794  st([Y,X])                       #21
              1a07 c218  st   [$18]       7795  st([vAC])                       #22
              1a08 8126  adda [$26]       7796  adda([sysArgs+2])               #23
              1a09 c226  st   [$26]       7797  st([sysArgs+2])                 #24
              1a0a 0124  ld   [$24]       7798  ld([sysArgs+0])                 #25
              1a0b 8001  adda $01         7799  adda(1)                         #26
              1a0c c224  st   [$24]       7800  st([sysArgs+0])                 #27
              1a0d 1403  ld   $03,y       7801  ld(hi('NEXTY'),Y)               #28
              1a0e e000  jmp  y,$00       7802  jmp(Y,'NEXTY')                  #29
              1a0f 00f0  ld   $f0         7803  ld(-32/2)                       #30
                                          7804
                                          7805  # Restart the instruction in the next timeslice
                                          7806  label('.sysNbi#19')
.sysNbi#19:   1a10 0116  ld   [$16]       7807  ld([vPC])                       #19
              1a11 a002  suba $02         7808  suba(2)                         #20
              1a12 c216  st   [$16]       7809  st([vPC])                       #21
              1a13 1403  ld   $03,y       7810  ld(hi('NEXTY'),Y)               #22
              1a14 e000  jmp  y,$00       7811  jmp(Y,'NEXTY')                  #23
              1a15 00f3  ld   $f3         7812  ld(-26/2)                       #24
                                          7813
                                          7814
                                          7815  # SYS_LoaderProcessInput_64
                                          7816  # sysArgs[0:1] Source address
                                          7817  # sysArgs[2]   Checksum
                                          7818  # sysArgs[4]   Copy count
                                          7819  # sysArgs[5:6] Destination address
                                          7820  label('SYS_LoaderProcessInput_64')
SYS_LoaderProcessInput_64:
              1a16 1525  ld   [$25],y     7821  ld([sysArgs+1],Y)               #15
              1a17 0126  ld   [$26]       7822  ld([sysArgs+2])                 #16
              1a18 ec3d  bne  .sysPi#19   7823  bne('.sysPi#19')                #17
              1a19 0124  ld   [$24]       7824  ld([sysArgs+0])                 #18
              1a1a b041  suba $41,x       7825  suba(65,X)                      #19 Point at first byte of buffer
              1a1b 0d00  ld   [y,x]       7826  ld([Y,X])                       #20 Command byte
                                          7827  st([Y,Xpp]);                    C('Just X++')#21
              1a1c de00  st   [y,x++]     ;Just X++
              1a1d 604c  xora $4c         7828  xora(ord('L'))                  #22 This loader lumps everything under 'L'
              1a1e ec41  bne  .sysPi#25   7829  bne('.sysPi#25')                #23
                                          7830  ld([Y,X]);                      C('Valid command')#24 Length byte
              1a1f 0d00  ld   [y,x]       ;Valid command
                                          7831  st([Y,Xpp]);                    C('Just X++')#25
              1a20 de00  st   [y,x++]     ;Just X++
              1a21 203f  anda $3f         7832  anda(63)                        #26 Bit 6:7 are garbage
              1a22 c228  st   [$28]       7833  st([sysArgs+4])                 #27 Copy count 0..60
              1a23 8d00  adda [y,x]       7834  adda([Y,X])                     #28 One location past (+1) the last byte of fragment
              1a24 8001  adda $01         7835  adda(1)                         #29 254+1 = $ff becomes 0, 255+1 = $00 becomes 1
              1a25 20fe  anda $fe         7836  anda(0xfe)                      #30 Will be zero only when writing in top 2 bytes of page
              1a26 c21d  st   [$1d]       7837  st([vTmp])                      #31 Remember as first condition
              1a27 0d00  ld   [y,x]       7838  ld([Y,X])                       #32 Low copy address
                                          7839  st([Y,Xpp]);                    C('Just X++')#33
              1a28 de00  st   [y,x++]     ;Just X++
              1a29 c229  st   [$29]       7840  st([sysArgs+5])                 #34
              1a2a 0d00  ld   [y,x]       7841  ld([Y,X])                       #35 High copy address
                                          7842  st([Y,Xpp]);                    C('Just X++')#36
              1a2b de00  st   [y,x++]     ;Just X++
              1a2c c22a  st   [$2a]       7843  st([sysArgs+6])                 #37
              1a2d a001  suba $01         7844  suba(1)                         #38 Check if writing into sound channel page (1..4)
              1a2e 20fc  anda $fc         7845  anda(0xfc)                      #39
              1a2f 411d  ora  [$1d]       7846  ora([vTmp])                     #40 Combine second condition with first
              1a30 c21d  st   [$1d]       7847  st([vTmp])                      #41 Zero when overwriting one of oscL[1..4] or oscH[1..4]
              1a31 0128  ld   [$28]       7848  ld([sysArgs+4])                 #42 Check copy count
              1a32 ec46  bne  .sysPi#45   7849  bne('.sysPi#45')                #43
                                          7850  # Execute code (don't care about checksum anymore)
                                          7851  ld([sysArgs+5]);                C('Execute')#44 Low run address
              1a33 0129  ld   [$29]       ;Execute
              1a34 c21a  st   [$1a]       7852  st([vLR])                       #45 https://forum.gigatron.io/viewtopic.php?p=29#p29
              1a35 a002  suba $02         7853  suba(2)                         #46
              1a36 c216  st   [$16]       7854  st([vPC])                       #47
              1a37 012a  ld   [$2a]       7855  ld([sysArgs+6])                 #48 High run address
              1a38 c217  st   [$17]       7856  st([vPC+1])                     #49
              1a39 c21b  st   [$1b]       7857  st([vLR+1])                     #50
              1a3a 1403  ld   $03,y       7858  ld(hi('REENTER'),Y)             #51
              1a3b e0cb  jmp  y,$cb       7859  jmp(Y,'REENTER')                #52
              1a3c 00e4  ld   $e4         7860  ld(-56/2)                       #53
                                          7861
                                          7862  # Invalid checksum
                                          7863  label('.sysPi#19')
.sysPi#19:    1a3d 0001  ld   $01         7864  wait(25-19);                    C('Invalid checksum')#19 Reset checksum
              1a3e ec3e  bne  $1a3e
              1a3f a001  suba $01
              1a40 0200  nop              ;Invalid checksum
                                          7865
                                          7866  # Unknown command
                                          7867  label('.sysPi#25')
                                          7868  ld(ord('g'));                   C('Unknown command')#25 Reset checksum
.sysPi#25:    1a41 0067  ld   $67         ;Unknown command
              1a42 c226  st   [$26]       7869  st([sysArgs+2])                 #26
              1a43 1403  ld   $03,y       7870  ld(hi('REENTER'),Y)             #27
              1a44 e0cb  jmp  y,$cb       7871  jmp(Y,'REENTER')                #28
              1a45 00f0  ld   $f0         7872  ld(-32/2)                       #29
                                          7873
                                          7874  # Loading data
                                          7875  label('.sysPi#45')
                                          7876  ld([vTmp]);                     C('Loading data')#45
.sysPi#45:    1a46 011d  ld   [$1d]       ;Loading data
              1a47 ec4a  bne  $1a4a       7877  bne(pc()+3)                     #46
              1a48 fc4b  bra  $1a4b       7878  bra(pc()+3)                     #47
                                          7879  ld(0xfc);                       C('Unsafe')#48  Clear low channelMask bits so it becomes safe
              1a49 00fc  ld   $fc         ;Unsafe
                                          7880  ld(0xff);                       C('Safe')#48(!) No change to channelMask because already safe
              1a4a 00ff  ld   $ff         ;Safe
              1a4b 2121  anda [$21]       7881  anda([channelMask])             #49
              1a4c c221  st   [$21]       7882  st([channelMask])               #50
              1a4d 0124  ld   [$24]       7883  ld([sysArgs+0])                 #51 Continue checksum
              1a4e b001  suba $01,x       7884  suba(1,X)                       #52 Point at last byte
              1a4f 0d00  ld   [y,x]       7885  ld([Y,X])                       #53
              1a50 c226  st   [$26]       7886  st([sysArgs+2])                 #54
              1a51 1403  ld   $03,y       7887  ld(hi('REENTER'),Y)             #55
              1a52 e0cb  jmp  y,$cb       7888  jmp(Y,'REENTER')                #56
              1a53 00e2  ld   $e2         7889  ld(-60/2)                       #57
                                          7890
                                          7891
                                          7892  # SYS_LoaderPayloadCopy_34
                                          7893  # sysArgs[0:1] Source address
                                          7894  # sysArgs[4]   Copy count
                                          7895  # sysArgs[5:6] Destination address
                                          7896  label('SYS_LoaderPayloadCopy_34')
SYS_LoaderPayloadCopy_34:
              1a54 0128  ld   [$28]       7897  ld([sysArgs+4])                 #15 Copy count
              1a55 f062  beq  .sysCc#18   7898  beq('.sysCc#18')                #16
              1a56 a001  suba $01         7899  suba(1)                         #17
              1a57 c228  st   [$28]       7900  st([sysArgs+4])                 #18
              1a58 1124  ld   [$24],x     7901  ld([sysArgs+0],X)               #19 Current pointer
              1a59 1525  ld   [$25],y     7902  ld([sysArgs+1],Y)               #20
              1a5a 0d00  ld   [y,x]       7903  ld([Y,X])                       #21
              1a5b 1129  ld   [$29],x     7904  ld([sysArgs+5],X)               #22 Target pointer
              1a5c 152a  ld   [$2a],y     7905  ld([sysArgs+6],Y)               #23
              1a5d ce00  st   [y,x]       7906  st([Y,X])                       #24
              1a5e 0129  ld   [$29]       7907  ld([sysArgs+5])                 #25 Increment target
              1a5f 8001  adda $01         7908  adda(1)                         #26
              1a60 c229  st   [$29]       7909  st([sysArgs+5])                 #27
              1a61 fc66  bra  .sysCc#30   7910  bra('.sysCc#30')                #28
                                          7911
                                          7912  label('.sysCc#18')
.sysCc#18:    1a62 1403  ld   $03,y       7913  ld(hi('REENTER'),Y)             #18,29
              1a63 0004  ld   $04         7914  wait(30-19)                     #19
              1a64 ec64  bne  $1a64
              1a65 a001  suba $01
                                          7915  label('.sysCc#30')
.sysCc#30:    1a66 e0cb  jmp  y,$cb       7916  jmp(Y,'REENTER')                #30
              1a67 00ef  ld   $ef         7917  ld(-34/2)                       #31
                                          7918
                                          7919
                                          7920  # SYS_Unpack_56
                                          7921  # Unpack 3 bytes into 4 pixels
                                          7922  #
                                          7923  # Variables:
                                          7924  #       sysArgs[0:2]    Packed bytes (in)
                                          7925  #       sysArgs[0:3]    Pixels (out)
                                          7926  label('SYS_Unpack_56')
SYS_Unpack_56:
              1a68 1407  ld   $07,y       7927  ld(soundTable>>8,Y)             #15
              1a69 0126  ld   [$26]       7928  ld([sysArgs+2])                 #16 a[2]>>2
              1a6a 5003  ora  $03,x       7929  ora(0x03,X)                     #17
              1a6b 0d00  ld   [y,x]       7930  ld([Y,X])                       #18
              1a6c c227  st   [$27]       7931  st([sysArgs+3])                 #19 -> Pixel 3
                                          7932
              1a6d 0126  ld   [$26]       7933  ld([sysArgs+2])                 #20 (a[2]&3)<<4
              1a6e 2003  anda $03         7934  anda(0x03)                      #21
              1a6f 8200  adda ac          7935  adda(AC)                        #22
              1a70 8200  adda ac          7936  adda(AC)                        #23
              1a71 8200  adda ac          7937  adda(AC)                        #24
              1a72 8200  adda ac          7938  adda(AC)                        #25
              1a73 c226  st   [$26]       7939  st([sysArgs+2])                 #26
              1a74 0125  ld   [$25]       7940  ld([sysArgs+1])                 #27 | a[1]>>4
              1a75 5003  ora  $03,x       7941  ora(0x03,X)                     #28
              1a76 0d00  ld   [y,x]       7942  ld([Y,X])                       #29
              1a77 5003  ora  $03,x       7943  ora(0x03,X)                     #30
              1a78 0d00  ld   [y,x]       7944  ld([Y,X])                       #31
              1a79 4126  ora  [$26]       7945  ora([sysArgs+2])                #32
              1a7a c226  st   [$26]       7946  st([sysArgs+2])                 #33 -> Pixel 2
                                          7947
              1a7b 0125  ld   [$25]       7948  ld([sysArgs+1])                 #34 (a[1]&15)<<2
              1a7c 200f  anda $0f         7949  anda(0x0f)                      #35
              1a7d 8200  adda ac          7950  adda(AC)                        #36
              1a7e 8200  adda ac          7951  adda(AC)                        #37
              1a7f c225  st   [$25]       7952  st([sysArgs+1])                 #38
                                          7953
              1a80 0124  ld   [$24]       7954  ld([sysArgs+0])                 #39 | a[0]>>6
              1a81 5003  ora  $03,x       7955  ora(0x03,X)                     #40
              1a82 0d00  ld   [y,x]       7956  ld([Y,X])                       #41
              1a83 5003  ora  $03,x       7957  ora(0x03,X)                     #42
              1a84 0d00  ld   [y,x]       7958  ld([Y,X])                       #43
              1a85 5003  ora  $03,x       7959  ora(0x03,X)                     #44
              1a86 0d00  ld   [y,x]       7960  ld([Y,X])                       #45
              1a87 4125  ora  [$25]       7961  ora([sysArgs+1])                #46
              1a88 c225  st   [$25]       7962  st([sysArgs+1])                 #47 -> Pixel 1
                                          7963
              1a89 0124  ld   [$24]       7964  ld([sysArgs+0])                 #48 a[1]&63
              1a8a 203f  anda $3f         7965  anda(0x3f)                      #49
              1a8b c224  st   [$24]       7966  st([sysArgs+0])                 #50 -> Pixel 0
                                          7967
              1a8c 1403  ld   $03,y       7968  ld(hi('REENTER'),Y)             #51
              1a8d e0cb  jmp  y,$cb       7969  jmp(Y,'REENTER')                #52
              1a8e 00e4  ld   $e4         7970  ld(-56/2)                       #53
                                          7971
                                          7972
                                          7973  # sys_SortUint8Array, sysArgs0,1=array, sysArg2=i, sysArg3=j, sysArg4=key, sysArg5=length
                                          7974  label('sys_SortUint8Array')
sys_SortUint8Array:
              1a8f 0127  ld   [$27]       7975  ld([sysArgs+3])                 #18,
                                          7976  ble('.sys_sortuint8array_21')   #19, j == 0
              1a90 f8a8  ble  .sys_sortuint8array_21
              1a91 0124  ld   [$24]       7977  ld([sysArgs+0])                 #20,
              1a92 8127  adda [$27]       7978  adda([sysArgs+3])               #21,
              1a93 b001  suba $01,x       7979  suba(1,X)                       #22,
              1a94 0d00  ld   [y,x]       7980  ld([Y,X])                       #23,
                                          7981  bmi('.sys_sortuint8array_26')   #24, convert signed < to unsigned <
              1a95 e899  blt  .sys_sortuint8array_26
              1a96 a128  suba [$28]       7982  suba([sysArgs+4])               #25,
                                          7983  bra('.sys_sortuint8array_28')   #26,
              1a97 fc9b  bra  .sys_sortuint8array_28
              1a98 4128  ora  [$28]       7984  ora([sysArgs+4])                #27, borrow
                                          7985  label('.sys_sortuint8array_26')
.sys_sortuint8array_26:
              1a99 2128  anda [$28]       7986  anda([sysArgs+4])               #26, borrow
              1a9a 0200  nop              7987  nop()                           #27,
                                          7988  label('.sys_sortuint8array_28')
.sys_sortuint8array_28:                   7989  bmi('.sys_sortuint8array_30_0') #28, a[j-1] < key
              1a9b e8b4  blt  .sys_sortuint8array_30_0
              1a9c 0d00  ld   [y,x]       7990  ld([Y,X])                       #29,
              1a9d de00  st   [y,x++]     7991  st([Y,Xpp])                     #30,
              1a9e ce00  st   [y,x]       7992  st([Y,X])                       #31, a[j] = a[j-1]
              1a9f 0127  ld   [$27]       7993  ld([sysArgs+3])                 #32,
              1aa0 a001  suba $01         7994  suba(1)                         #33,
              1aa1 c227  st   [$27]       7995  st([sysArgs+3])                 #34, j--
              1aa2 0116  ld   [$16]       7996  ld([vPC])                       #35,
              1aa3 a002  suba $02         7997  suba(2)                         #36,
              1aa4 c216  st   [$16]       7998  st([vPC])                       #37, restart
              1aa5 1403  ld   $03,y       7999  ld(hi('NEXTY'),Y)               #38,
              1aa6 e000  jmp  y,$00       8000  jmp(Y,'NEXTY')                  #39,
              1aa7 00eb  ld   $eb         8001  ld(-42/2)                       #40,
                                          8002  label('.sys_sortuint8array_21')
.sys_sortuint8array_21:
              1aa8 9127  adda [$27],x     8003  adda([sysArgs+3],X)             #21,
              1aa9 0128  ld   [$28]       8004  ld([sysArgs+4])                 #22,
              1aaa ce00  st   [y,x]       8005  st([Y,X])                       #23, a[j] = key
              1aab 0126  ld   [$26]       8006  ld([sysArgs+2])                 #24,
              1aac 8001  adda $01         8007  adda(1)                         #25,
              1aad c226  st   [$26]       8008  st([sysArgs+2])                 #26, i++
              1aae a129  suba [$29]       8009  suba([sysArgs+5])               #27,
                                          8010  blt('.sys_sortuint8array_30_1') #28, i < length
              1aaf e8c0  blt  .sys_sortuint8array_30_1
              1ab0 0124  ld   [$24]       8011  ld([sysArgs+0])                 #29,
              1ab1 1403  ld   $03,y       8012  ld(hi('NEXTY'),Y)               #30,
              1ab2 e000  jmp  y,$00       8013  jmp(Y,'NEXTY')                  #31,
              1ab3 00ef  ld   $ef         8014  ld(-34/2)                       #32,
                                          8015  label('.sys_sortuint8array_30_0')
.sys_sortuint8array_30_0:
              1ab4 de00  st   [y,x++]     8016  st([Y,Xpp])                     #30,
              1ab5 0128  ld   [$28]       8017  ld([sysArgs+4])                 #31,
              1ab6 ce00  st   [y,x]       8018  st([Y,X])                       #32, a[j] = key
              1ab7 0126  ld   [$26]       8019  ld([sysArgs+2])                 #33,
              1ab8 8001  adda $01         8020  adda(1)                         #34,
              1ab9 c226  st   [$26]       8021  st([sysArgs+2])                 #35, i++
              1aba a129  suba [$29]       8022  suba([sysArgs+5])               #36,
                                          8023  blt('.sys_sortuint8array_39')   #37, i < length
              1abb e8cb  blt  .sys_sortuint8array_39
              1abc 0124  ld   [$24]       8024  ld([sysArgs+0])                 #38,
              1abd 1403  ld   $03,y       8025  ld(hi('REENTER'),Y)             #39,
              1abe e0cb  jmp  y,$cb       8026  jmp(Y,'REENTER')                #40,
              1abf 00ea  ld   $ea         8027  ld(-44/2)                       #41,
                                          8028  label('.sys_sortuint8array_30_1')
.sys_sortuint8array_30_1:
              1ac0 9126  adda [$26],x     8029  adda([sysArgs+2],X)             #30,
              1ac1 0d00  ld   [y,x]       8030  ld([Y,X])                       #31,
              1ac2 c228  st   [$28]       8031  st([sysArgs+4])                 #32, key = a[i]
              1ac3 0126  ld   [$26]       8032  ld([sysArgs+2])                 #33,
              1ac4 c227  st   [$27]       8033  st([sysArgs+3])                 #34, j = i
              1ac5 0116  ld   [$16]       8034  ld([vPC])                       #35,
              1ac6 a002  suba $02         8035  suba(2)                         #36,
              1ac7 c216  st   [$16]       8036  st([vPC])                       #37, restart
              1ac8 1403  ld   $03,y       8037  ld(hi('NEXTY'),Y)               #38,
              1ac9 e000  jmp  y,$00       8038  jmp(Y,'NEXTY')                  #39,
              1aca 00eb  ld   $eb         8039  ld(-42/2)                       #40,
                                          8040  label('.sys_sortuint8array_39')
.sys_sortuint8array_39:
              1acb 9126  adda [$26],x     8041  adda([sysArgs+2],X)             #39,
              1acc 0d00  ld   [y,x]       8042  ld([Y,X])                       #40,
              1acd c228  st   [$28]       8043  st([sysArgs+4])                 #41, key = a[i]
              1ace 0126  ld   [$26]       8044  ld([sysArgs+2])                 #42,
              1acf c227  st   [$27]       8045  st([sysArgs+3])                 #43, j = i
              1ad0 0116  ld   [$16]       8046  ld([vPC])                       #44,
              1ad1 a002  suba $02         8047  suba(2)                         #45,
              1ad2 c216  st   [$16]       8048  st([vPC])                       #46, restart
              1ad3 1403  ld   $03,y       8049  ld(hi('REENTER'),Y)             #47,
              1ad4 e0cb  jmp  y,$cb       8050  jmp(Y,'REENTER')                #48,
              1ad5 00e6  ld   $e6         8051  ld(-52/2)                       #49,
                                          8052
                                          8053
                                          8054  # sys_SortViaIndices, sysArgs0,1=indices, sysArgs2,3=src, sysArg4,5=dst, sysArg6=dst step, vAC=count
                                          8055  label('sys_SortViaIndices')
sys_SortViaIndices:
              1ad6 1124  ld   [$24],x     8056  ld([sysArgs+0],X)               #18,
              1ad7 0d00  ld   [y,x]       8057  ld([Y,X])                       #19, [index]
              1ad8 1527  ld   [$27],y     8058  ld([sysArgs+3],Y)               #20,
              1ad9 9126  adda [$26],x     8059  adda([sysArgs+2],X)             #21, src
              1ada 0d00  ld   [y,x]       8060  ld([Y,X])                       #22, peek(src + index)
              1adb 1529  ld   [$29],y     8061  ld([sysArgs+5],Y)               #23,
              1adc 1128  ld   [$28],x     8062  ld([sysArgs+4],X)               #24, dst
              1add ce00  st   [y,x]       8063  st([Y,X])                       #25,
              1ade 0124  ld   [$24]       8064  ld([sysArgs+0])                 #26,
              1adf 8001  adda $01         8065  adda(1)                         #27,
              1ae0 c224  st   [$24]       8066  st([sysArgs+0])                 #28, indices++
              1ae1 0128  ld   [$28]       8067  ld([sysArgs+4])                 #29,
              1ae2 812a  adda [$2a]       8068  adda([sysArgs+6])               #30,
              1ae3 c228  st   [$28]       8069  st([sysArgs+4])                 #31, dst += step
              1ae4 0118  ld   [$18]       8070  ld([vAC])                       #32,
              1ae5 a001  suba $01         8071  suba(1)                         #33,
                                          8072  beq('.sys_sortviaindices_36')   #34,
              1ae6 f0ee  beq  .sys_sortviaindices_36
              1ae7 c218  st   [$18]       8073  st([vAC])                       #35, count--
              1ae8 0116  ld   [$16]       8074  ld([vPC])                       #36,
              1ae9 a002  suba $02         8075  suba(2)                         #37,
              1aea c216  st   [$16]       8076  st([vPC])                       #38, restart
              1aeb 1403  ld   $03,y       8077  ld(hi('REENTER'),Y)             #39,
              1aec e0cb  jmp  y,$cb       8078  jmp(Y,'REENTER')                #40,
              1aed 00ea  ld   $ea         8079  ld(-44/2)                       #41,
                                          8080  label('.sys_sortviaindices_36')
.sys_sortviaindices_36:
              1aee 1403  ld   $03,y       8081  ld(hi('NEXTY'),Y)               #36,
              1aef e000  jmp  y,$00       8082  jmp(Y,'NEXTY')                  #37,
              1af0 00ec  ld   $ec         8083  ld(-40/2)                       #38,
                                          8084
                                          8085
              1af1 0200  nop              8086  fillers(until=0xff)
              1af2 0200  nop
              1af3 0200  nop
              * 14 times
              1aff 0200  nop              8087  align(0x100, size=0x100)
                                          8088
                                          8089  #-----------------------------------------------------------------------
                                          8090  #       More sys implementations, (0x1B00)
                                          8091  #-----------------------------------------------------------------------
                                          8092  #
                                          8093  # sys_MemCopyByte, sysArgs0,1=src, sysArg2,3=dst, sysArg4=src step, sysArg5=dst step, vAC=count
                                          8094  label('sys_MemCopyByte')
sys_MemCopyByte:
              1b00 1124  ld   [$24],x     8095  ld([sysArgs+0],X)               #18,
              1b01 0d00  ld   [y,x]       8096  ld([Y,X])                       #19, [src]
              1b02 1527  ld   [$27],y     8097  ld([sysArgs+3],Y)               #20,
              1b03 1126  ld   [$26],x     8098  ld([sysArgs+2],X)               #21,
              1b04 ce00  st   [y,x]       8099  st([Y,X])                       #22, [dst] = [src]
              1b05 0124  ld   [$24]       8100  ld([sysArgs+0])                 #23,
              1b06 8128  adda [$28]       8101  adda([sysArgs+4])               #24,
              1b07 c224  st   [$24]       8102  st([sysArgs+0])                 #25, src++
              1b08 0126  ld   [$26]       8103  ld([sysArgs+2])                 #26,
              1b09 8129  adda [$29]       8104  adda([sysArgs+5])               #27,
              1b0a c226  st   [$26]       8105  st([sysArgs+2])                 #28, dst++
              1b0b 0118  ld   [$18]       8106  ld([vAC])                       #29,
              1b0c a001  suba $01         8107  suba(1)                         #30,
                                          8108  beq('.sys_memcopybyte_33')      #31,
              1b0d f015  beq  .sys_memcopybyte_33
              1b0e c218  st   [$18]       8109  st([vAC])                       #32, count--
              1b0f 0116  ld   [$16]       8110  ld([vPC])                       #33,
              1b10 a002  suba $02         8111  suba(2)                         #34,
              1b11 c216  st   [$16]       8112  st([vPC])                       #35, restart
              1b12 1403  ld   $03,y       8113  ld(hi('NEXTY'),Y)               #36,
              1b13 e000  jmp  y,$00       8114  jmp(Y,'NEXTY')                  #37,
              1b14 00ec  ld   $ec         8115  ld(-40/2)                       #38,
                                          8116  label('.sys_memcopybyte_33')
.sys_memcopybyte_33:
              1b15 1403  ld   $03,y       8117  ld(hi('REENTER'),Y)             #33,
              1b16 e0cb  jmp  y,$cb       8118  jmp(Y,'REENTER')                #34,
              1b17 00ed  ld   $ed         8119  ld(-38/2)                       #35,
                                          8120
                                          8121
                                          8122  # sys_MemCopyWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp
                                          8123  label('sys_MemCopyWord')
sys_MemCopyWord:
              1b18 1124  ld   [$24],x     8124  ld([sysArgs+0],X)               #18,
              1b19 0d00  ld   [y,x]       8125  ld([Y,X])                       #19, [src + 0]
              1b1a de00  st   [y,x++]     8126  st([Y,Xpp])                     #20
              1b1b c228  st   [$28]       8127  st([sysArgs+4])                 #21,
              1b1c 0d00  ld   [y,x]       8128  ld([Y,X])                       #22, [src + 1]
              1b1d c229  st   [$29]       8129  st([sysArgs+5])                 #23,
              1b1e 1527  ld   [$27],y     8130  ld([sysArgs+3],Y)               #24,
              1b1f 1126  ld   [$26],x     8131  ld([sysArgs+2],X)               #25,
              1b20 0128  ld   [$28]       8132  ld([sysArgs+4])                 #26,
              1b21 de00  st   [y,x++]     8133  st([Y,Xpp])                     #27, [dst + 0] = [src + 0]
              1b22 0129  ld   [$29]       8134  ld([sysArgs+5])                 #28,
              1b23 ce00  st   [y,x]       8135  st([Y,X])                       #29, [dst + 1] = [src + 1]
              1b24 0124  ld   [$24]       8136  ld([sysArgs+0])                 #30,
              1b25 8002  adda $02         8137  adda(2)                         #31,
              1b26 c224  st   [$24]       8138  st([sysArgs+0])                 #32, src += 2
              1b27 0126  ld   [$26]       8139  ld([sysArgs+2])                 #33,
              1b28 8002  adda $02         8140  adda(2)                         #34,
              1b29 c226  st   [$26]       8141  st([sysArgs+2])                 #35, dst += 2
              1b2a 0118  ld   [$18]       8142  ld([vAC])                       #36,
              1b2b a001  suba $01         8143  suba(1)                         #37,
                                          8144  beq('.sys_memcopyword_40')      #38,
              1b2c f034  beq  .sys_memcopyword_40
              1b2d c218  st   [$18]       8145  st([vAC])                       #39, count--
              1b2e 0116  ld   [$16]       8146  ld([vPC])                       #40,
              1b2f a002  suba $02         8147  suba(2)                         #41,
              1b30 c216  st   [$16]       8148  st([vPC])                       #42, restart
              1b31 1403  ld   $03,y       8149  ld(hi('REENTER'),Y)             #43,
              1b32 e0cb  jmp  y,$cb       8150  jmp(Y,'REENTER')                #44,
              1b33 00e8  ld   $e8         8151  ld(-48/2)                       #45,
                                          8152  label('.sys_memcopyword_40')
.sys_memcopyword_40:
              1b34 1403  ld   $03,y       8153  ld(hi('NEXTY'),Y)               #40,
              1b35 e000  jmp  y,$00       8154  jmp(Y,'NEXTY')                  #41,
              1b36 00ea  ld   $ea         8155  ld(-44/2)                       #42,
                                          8156
                                          8157
                                          8158  # sys_MemCopyDWord, sysArgs0,1=src, sysArg2,3=dst, vAC=count, sysArg4,5=tmp, sysArg6,7=tmp
                                          8159  label('sys_MemCopyDWord')
sys_MemCopyDWord:
              1b37 1124  ld   [$24],x     8160  ld([sysArgs+0],X)               #18,
              1b38 0d00  ld   [y,x]       8161  ld([Y,X])                       #19, [src + 0]
              1b39 de00  st   [y,x++]     8162  st([Y,Xpp])                     #20
              1b3a c228  st   [$28]       8163  st([sysArgs+4])                 #21,
              1b3b 0d00  ld   [y,x]       8164  ld([Y,X])                       #22, [src + 1]
              1b3c de00  st   [y,x++]     8165  st([Y,Xpp])                     #23
              1b3d c229  st   [$29]       8166  st([sysArgs+5])                 #24,
              1b3e 0d00  ld   [y,x]       8167  ld([Y,X])                       #25, [src + 2]
              1b3f de00  st   [y,x++]     8168  st([Y,Xpp])                     #26
              1b40 c22a  st   [$2a]       8169  st([sysArgs+6])                 #27,
              1b41 0d00  ld   [y,x]       8170  ld([Y,X])                       #28, [src + 3]
              1b42 c22b  st   [$2b]       8171  st([sysArgs+7])                 #29,
              1b43 1527  ld   [$27],y     8172  ld([sysArgs+3],Y)               #30,
              1b44 1126  ld   [$26],x     8173  ld([sysArgs+2],X)               #31,
              1b45 0128  ld   [$28]       8174  ld([sysArgs+4])                 #32,
              1b46 de00  st   [y,x++]     8175  st([Y,Xpp])                     #33, [dst + 0] = [src + 0]
              1b47 0129  ld   [$29]       8176  ld([sysArgs+5])                 #34,
              1b48 de00  st   [y,x++]     8177  st([Y,Xpp])                     #35, [dst + 1] = [src + 1]
              1b49 012a  ld   [$2a]       8178  ld([sysArgs+6])                 #36,
              1b4a de00  st   [y,x++]     8179  st([Y,Xpp])                     #37, [dst + 2] = [src + 2]
              1b4b 012b  ld   [$2b]       8180  ld([sysArgs+7])                 #38,
              1b4c ce00  st   [y,x]       8181  st([Y,X])                       #39, [dst + 3] = [src + 3]
              1b4d 0124  ld   [$24]       8182  ld([sysArgs+0])                 #40,
              1b4e 8004  adda $04         8183  adda(4)                         #41,
              1b4f c224  st   [$24]       8184  st([sysArgs+0])                 #42, src += 4
              1b50 0126  ld   [$26]       8185  ld([sysArgs+2])                 #43,
              1b51 8004  adda $04         8186  adda(4)                         #44,
              1b52 c226  st   [$26]       8187  st([sysArgs+2])                 #45, dst += 4
              1b53 0118  ld   [$18]       8188  ld([vAC])                       #46,
              1b54 a001  suba $01         8189  suba(1)                         #47,
                                          8190  beq('.sys_memcopydword_50')     #48,
              1b55 f05d  beq  .sys_memcopydword_50
              1b56 c218  st   [$18]       8191  st([vAC])                       #49, count--
              1b57 0116  ld   [$16]       8192  ld([vPC])                       #50,
              1b58 a002  suba $02         8193  suba(2)                         #51,
              1b59 c216  st   [$16]       8194  st([vPC])                       #52, restart
              1b5a 1403  ld   $03,y       8195  ld(hi('REENTER'),Y)             #53,
              1b5b e0cb  jmp  y,$cb       8196  jmp(Y,'REENTER')                #54,
              1b5c 00e3  ld   $e3         8197  ld(-58/2)                       #55,
                                          8198  label('.sys_memcopydword_50')
.sys_memcopydword_50:
              1b5d 1403  ld   $03,y       8199  ld(hi('NEXTY'),Y)               #50,
              1b5e e000  jmp  y,$00       8200  jmp(Y,'NEXTY')                  #51,
              1b5f 00e5  ld   $e5         8201  ld(-54/2)                       #52,
                                          8202
                                          8203
              1b60 0200  nop              8204  fillers(until=0xff)
              1b61 0200  nop
              1b62 0200  nop
              * 159 times
              1bff 0200  nop              8205  align(0x100, size=0x100)
                                          8206
                                          8207  #-----------------------------------------------------------------------
                                          8208  #       More sys implementations, (0x1C00)
                                          8209  #-----------------------------------------------------------------------
                                          8210  #
                                          8211  # sys_SortSprites, sysArgs0,1=_y_array, sysArg2=i, sysArg3=j, sysArg4=key0, sysArg5=length
                                          8212  #                  sysArgs6,7=_is_array, vAC.lo=key1
                                          8213  label('sys_SortSprites')
sys_SortSprites:
              1c00 0127  ld   [$27]       8214  ld([sysArgs+3])                 #18,
                                          8215  ble('.sys_sortsprites_21')      #19, j <= 0
              1c01 f820  ble  .sys_sortsprites_21
              1c02 0124  ld   [$24]       8216  ld([sysArgs+0])                 #20,
              1c03 8127  adda [$27]       8217  adda([sysArgs+3])               #21,
              1c04 b001  suba $01,x       8218  suba(1,X)                       #22,
              1c05 0d00  ld   [y,x]       8219  ld([Y,X])                       #23,
                                          8220  bmi('.sys_sortsprites_26')      #24, convert signed < to unsigned <
              1c06 e80a  blt  .sys_sortsprites_26
              1c07 a128  suba [$28]       8221  suba([sysArgs+4])               #25,
                                          8222  bra('.sys_sortsprites_28')      #26,
              1c08 fc0c  bra  .sys_sortsprites_28
              1c09 4128  ora  [$28]       8223  ora([sysArgs+4])                #27, borrow
                                          8224  label('.sys_sortsprites_26')
.sys_sortsprites_26:
              1c0a 2128  anda [$28]       8225  anda([sysArgs+4])               #26, borrow
              1c0b 0200  nop              8226  nop()                           #27,
                                          8227  label('.sys_sortsprites_28')
.sys_sortsprites_28:                      8228  bmi('.sys_sortsprites_30')      #28, y[j-1] < key
              1c0c e831  blt  .sys_sortsprites_30
              1c0d 0d00  ld   [y,x]       8229  ld([Y,X])                       #29,
              1c0e de00  st   [y,x++]     8230  st([Y,Xpp])                     #30,
              1c0f ce00  st   [y,x]       8231  st([Y,X])                       #31, y[j] = y[j-1]
              1c10 152b  ld   [$2b],y     8232  ld([sysArgs+7],Y)               #32,
              1c11 012a  ld   [$2a]       8233  ld([sysArgs+6])                 #33,
              1c12 8127  adda [$27]       8234  adda([sysArgs+3])               #34,
              1c13 b001  suba $01,x       8235  suba(1,X)                       #35,
              1c14 0d00  ld   [y,x]       8236  ld([Y,X])                       #36,
              1c15 de00  st   [y,x++]     8237  st([Y,Xpp])                     #37,
              1c16 ce00  st   [y,x]       8238  st([Y,X])                       #38, is[j] = is[j-1]
              1c17 0127  ld   [$27]       8239  ld([sysArgs+3])                 #39,
              1c18 a001  suba $01         8240  suba(1)                         #40,
              1c19 c227  st   [$27]       8241  st([sysArgs+3])                 #41, j--
              1c1a 0116  ld   [$16]       8242  ld([vPC])                       #42,
              1c1b a002  suba $02         8243  suba(2)                         #43,
              1c1c c216  st   [$16]       8244  st([vPC])                       #44, restart
              1c1d 1403  ld   $03,y       8245  ld(hi('REENTER'),Y)             #45,
              1c1e e0cb  jmp  y,$cb       8246  jmp(Y,'REENTER')                #46,
              1c1f 00e7  ld   $e7         8247  ld(-50/2)                       #47,
                                          8248  label('.sys_sortsprites_21')
.sys_sortsprites_21:
              1c20 9127  adda [$27],x     8249  adda([sysArgs+3],X)             #21,
              1c21 0128  ld   [$28]       8250  ld([sysArgs+4])                 #22,
              1c22 ce00  st   [y,x]       8251  st([Y,X])                       #23, y[j] = key0
              1c23 152b  ld   [$2b],y     8252  ld([sysArgs+7],Y)               #24,
              1c24 012a  ld   [$2a]       8253  ld([sysArgs+6])                 #25,
              1c25 9127  adda [$27],x     8254  adda([sysArgs+3],X)             #26,
              1c26 0182  ld   [$82]       8255  ld([0x82])                      #27,
              1c27 ce00  st   [y,x]       8256  st([Y,X])                       #28, is[j] = key1
              1c28 0126  ld   [$26]       8257  ld([sysArgs+2])                 #29,
              1c29 8001  adda $01         8258  adda(1)                         #30,
              1c2a c226  st   [$26]       8259  st([sysArgs+2])                 #31, i++
              1c2b a129  suba [$29]       8260  suba([sysArgs+5])               #32,
                                          8261  blt('.sys_sortsprites_35')      #33, i < length
              1c2c e842  blt  .sys_sortsprites_35
              1c2d 1525  ld   [$25],y     8262  ld([sysArgs+1],Y)               #34,
              1c2e 1403  ld   $03,y       8263  ld(hi('REENTER'),Y)             #35,
              1c2f e0cb  jmp  y,$cb       8264  jmp(Y,'REENTER')                #36,
              1c30 00ec  ld   $ec         8265  ld(-40/2)                       #37,
                                          8266  label('.sys_sortsprites_30')
.sys_sortsprites_30:
              1c31 de00  st   [y,x++]     8267  st([Y,Xpp])                     #30,
              1c32 0128  ld   [$28]       8268  ld([sysArgs+4])                 #31,
              1c33 ce00  st   [y,x]       8269  st([Y,X])                       #32, y[j] = key0
              1c34 152b  ld   [$2b],y     8270  ld([sysArgs+7],Y)               #33,
              1c35 012a  ld   [$2a]       8271  ld([sysArgs+6])                 #34,
              1c36 9127  adda [$27],x     8272  adda([sysArgs+3],X)             #35,
              1c37 0182  ld   [$82]       8273  ld([0x82])                      #36,
              1c38 ce00  st   [y,x]       8274  st([Y,X])                       #37, is[j] = key1
              1c39 0126  ld   [$26]       8275  ld([sysArgs+2])                 #38,
              1c3a 8001  adda $01         8276  adda(1)                         #39,
              1c3b c226  st   [$26]       8277  st([sysArgs+2])                 #40, i++
              1c3c a129  suba [$29]       8278  suba([sysArgs+5])               #41,
                                          8279  blt('.sys_sortsprites_44')      #42, i < length
              1c3d e853  blt  .sys_sortsprites_44
              1c3e 1525  ld   [$25],y     8280  ld([sysArgs+1],Y)               #43
              1c3f 1403  ld   $03,y       8281  ld(hi('NEXTY'),Y)               #44,
              1c40 e000  jmp  y,$00       8282  jmp(Y,'NEXTY')                  #45,
              1c41 00e8  ld   $e8         8283  ld(-48/2)                       #46,
                                          8284  label('.sys_sortsprites_35')
.sys_sortsprites_35:
              1c42 0124  ld   [$24]       8285  ld([sysArgs+0])                 #35,
              1c43 9126  adda [$26],x     8286  adda([sysArgs+2],X)             #36,
              1c44 0d00  ld   [y,x]       8287  ld([Y,X])                       #37,
              1c45 c228  st   [$28]       8288  st([sysArgs+4])                 #38, key0 = y[i]
              1c46 152b  ld   [$2b],y     8289  ld([sysArgs+7],Y)               #39,
              1c47 012a  ld   [$2a]       8290  ld([sysArgs+6])                 #40,
              1c48 9126  adda [$26],x     8291  adda([sysArgs+2],X)             #41,
              1c49 0d00  ld   [y,x]       8292  ld([Y,X])                       #42,
              1c4a c282  st   [$82]       8293  st([0x82])                      #43, key1 = is[i]
              1c4b 0126  ld   [$26]       8294  ld([sysArgs+2])                 #44,
              1c4c c227  st   [$27]       8295  st([sysArgs+3])                 #45, j = i
              1c4d 0116  ld   [$16]       8296  ld([vPC])                       #46,
              1c4e a002  suba $02         8297  suba(2)                         #47,
              1c4f c216  st   [$16]       8298  st([vPC])                       #48, restart
              1c50 1403  ld   $03,y       8299  ld(hi('REENTER'),Y)             #49,
              1c51 e0cb  jmp  y,$cb       8300  jmp(Y,'REENTER')                #50,
              1c52 00e5  ld   $e5         8301  ld(-54/2)                       #51,
                                          8302  label('.sys_sortsprites_44')
.sys_sortsprites_44:
              1c53 0124  ld   [$24]       8303  ld([sysArgs+0])                 #44,
              1c54 9126  adda [$26],x     8304  adda([sysArgs+2],X)             #45,
              1c55 0d00  ld   [y,x]       8305  ld([Y,X])                       #46,
              1c56 c228  st   [$28]       8306  st([sysArgs+4])                 #47, key0 = y[i]
              1c57 152b  ld   [$2b],y     8307  ld([sysArgs+7],Y)               #48,
              1c58 012a  ld   [$2a]       8308  ld([sysArgs+6])                 #49,
              1c59 9126  adda [$26],x     8309  adda([sysArgs+2],X)             #50,
              1c5a 0d00  ld   [y,x]       8310  ld([Y,X])                       #51,
              1c5b c282  st   [$82]       8311  st([0x82])                      #52, key1 = is[i]
              1c5c 0126  ld   [$26]       8312  ld([sysArgs+2])                 #53,
              1c5d c227  st   [$27]       8313  st([sysArgs+3])                 #54, j = i
              1c5e 0116  ld   [$16]       8314  ld([vPC])                       #55,
              1c5f a002  suba $02         8315  suba(2)                         #56,
              1c60 c216  st   [$16]       8316  st([vPC])                       #57, restart
              1c61 1403  ld   $03,y       8317  ld(hi('NEXTY'),Y)               #58,
              1c62 e000  jmp  y,$00       8318  jmp(Y,'NEXTY')                  #59,
              1c63 00e1  ld   $e1         8319  ld(-62/2)                       #60,
                                          8320
                                          8321
              1c64 0200  nop              8322  fillers(until=0xff)
              1c65 0200  nop
              1c66 0200  nop
              * 155 times
              1cff 0200  nop              8323  align(0x100, size=0x100)
                                          8324
                                          8325  #-----------------------------------------------------------------------
                                          8326  #       More sys implementations, (0x1D00)
                                          8327  #-----------------------------------------------------------------------
                                          8328  #
                                          8329  # sys_DrawVLine, sysArgs0,1=count:colour, sysArgs2,3=X:Y address
                                          8330  label('sys_DrawVLine')
sys_DrawVLine:
              1d00 1126  ld   [$26],x     8331  ld([sysArgs+2],X)               #18,
              1d01 0124  ld   [$24]       8332  ld([sysArgs+0])                 #19,
              1d02 a008  suba $08         8333  suba(8)                         #20,
                                          8334  blt('.sys_drawvline_23')        #21,
              1d03 e82e  blt  .sys_drawvline_23
              1d04 0124  ld   [$24]       8335  ld([sysArgs+0])                 #22,
              1d05 0125  ld   [$25]       8336  ld([sysArgs+1])                 #23, 8 pixels
              1d06 ce00  st   [y,x]       8337  st([Y,X])                       #24,
              1d07 0127  ld   [$27]       8338  ld([sysArgs+3])                 #25,
              1d08 9401  adda $01,y       8339  adda(1,Y)                       #26,
              1d09 0125  ld   [$25]       8340  ld([sysArgs+1])                 #27,
              1d0a ce00  st   [y,x]       8341  st([Y,X])                       #28,
              1d0b 0127  ld   [$27]       8342  ld([sysArgs+3])                 #29,
              1d0c 9402  adda $02,y       8343  adda(2,Y)                       #30,
              1d0d 0125  ld   [$25]       8344  ld([sysArgs+1])                 #31,
              1d0e ce00  st   [y,x]       8345  st([Y,X])                       #32,
              1d0f 0127  ld   [$27]       8346  ld([sysArgs+3])                 #33,
              1d10 9403  adda $03,y       8347  adda(3,Y)                       #34,
              1d11 0125  ld   [$25]       8348  ld([sysArgs+1])                 #35,
              1d12 ce00  st   [y,x]       8349  st([Y,X])                       #36,
              1d13 0127  ld   [$27]       8350  ld([sysArgs+3])                 #37,
              1d14 9404  adda $04,y       8351  adda(4,Y)                       #38,
              1d15 0125  ld   [$25]       8352  ld([sysArgs+1])                 #39,
              1d16 ce00  st   [y,x]       8353  st([Y,X])                       #40,
              1d17 0127  ld   [$27]       8354  ld([sysArgs+3])                 #41,
              1d18 9405  adda $05,y       8355  adda(5,Y)                       #42,
              1d19 0125  ld   [$25]       8356  ld([sysArgs+1])                 #43,
              1d1a ce00  st   [y,x]       8357  st([Y,X])                       #44,
              1d1b 0127  ld   [$27]       8358  ld([sysArgs+3])                 #45,
              1d1c 9406  adda $06,y       8359  adda(6,Y)                       #46,
              1d1d 0125  ld   [$25]       8360  ld([sysArgs+1])                 #47,
              1d1e ce00  st   [y,x]       8361  st([Y,X])                       #48,
              1d1f 0127  ld   [$27]       8362  ld([sysArgs+3])                 #49,
              1d20 9407  adda $07,y       8363  adda(7,Y)                       #50,
              1d21 8008  adda $08         8364  adda(8)                         #51,
              1d22 c227  st   [$27]       8365  st([sysArgs+3])                 #52,
              1d23 0125  ld   [$25]       8366  ld([sysArgs+1])                 #53,
              1d24 ce00  st   [y,x]       8367  st([Y,X])                       #54,
              1d25 0124  ld   [$24]       8368  ld([sysArgs+0])                 #55,
              1d26 a008  suba $08         8369  suba(8)                         #56,
              1d27 c224  st   [$24]       8370  st([sysArgs+0])                 #57,
              1d28 0116  ld   [$16]       8371  ld([vPC])                       #58,
              1d29 a002  suba $02         8372  suba(2)                         #59,
              1d2a c216  st   [$16]       8373  st([vPC])                       #60, restart
              1d2b 1403  ld   $03,y       8374  ld(hi('REENTER'),Y)             #61,
              1d2c e0cb  jmp  y,$cb       8375  jmp(Y,'REENTER')                #62,
              1d2d 00df  ld   $df         8376  ld(-66/2)                       #63,
                                          8377  label('.sys_drawvline_23')
.sys_drawvline_23:
              1d2e a004  suba $04         8378  suba(4)                         #23,
                                          8379  blt('.sys_drawvline_26')        #24,
              1d2f e84a  blt  .sys_drawvline_26
              1d30 0124  ld   [$24]       8380  ld([sysArgs+0])                 #25,
              1d31 0125  ld   [$25]       8381  ld([sysArgs+1])                 #26, 4 pixels
              1d32 ce00  st   [y,x]       8382  st([Y,X])                       #27,
              1d33 0127  ld   [$27]       8383  ld([sysArgs+3])                 #28,
              1d34 9401  adda $01,y       8384  adda(1,Y)                       #29,
              1d35 0125  ld   [$25]       8385  ld([sysArgs+1])                 #30,
              1d36 ce00  st   [y,x]       8386  st([Y,X])                       #31,
              1d37 0127  ld   [$27]       8387  ld([sysArgs+3])                 #32,
              1d38 9402  adda $02,y       8388  adda(2,Y)                       #33,
              1d39 0125  ld   [$25]       8389  ld([sysArgs+1])                 #34,
              1d3a ce00  st   [y,x]       8390  st([Y,X])                       #35,
              1d3b 0127  ld   [$27]       8391  ld([sysArgs+3])                 #36,
              1d3c 9403  adda $03,y       8392  adda(3,Y)                       #37,
              1d3d 8004  adda $04         8393  adda(4)                         #38,
              1d3e c227  st   [$27]       8394  st([sysArgs+3])                 #39,
              1d3f 0125  ld   [$25]       8395  ld([sysArgs+1])                 #40,
              1d40 ce00  st   [y,x]       8396  st([Y,X])                       #41,
              1d41 0124  ld   [$24]       8397  ld([sysArgs+0])                 #42,
              1d42 a004  suba $04         8398  suba(4)                         #43,
              1d43 c224  st   [$24]       8399  st([sysArgs+0])                 #44,
              1d44 0116  ld   [$16]       8400  ld([vPC])                       #45,
              1d45 a002  suba $02         8401  suba(2)                         #46,
              1d46 c216  st   [$16]       8402  st([vPC])                       #47, restart
              1d47 1403  ld   $03,y       8403  ld(hi('NEXTY'),Y)               #48,
              1d48 e000  jmp  y,$00       8404  jmp(Y,'NEXTY')                  #49,
              1d49 00e6  ld   $e6         8405  ld(-52/2)                       #50,
                                          8406  label('.sys_drawvline_26')
.sys_drawvline_26:
              1d4a a002  suba $02         8407  suba(2)                         #26,
                                          8408  blt('.sys_drawvline_29')        #27,
              1d4b e85e  blt  .sys_drawvline_29
              1d4c 0124  ld   [$24]       8409  ld([sysArgs+0])                 #28,
              1d4d 0125  ld   [$25]       8410  ld([sysArgs+1])                 #29, 2 pixels
              1d4e ce00  st   [y,x]       8411  st([Y,X])                       #30,
              1d4f 0127  ld   [$27]       8412  ld([sysArgs+3])                 #31,
              1d50 9401  adda $01,y       8413  adda(1,Y)                       #32,
              1d51 8002  adda $02         8414  adda(2)                         #33,
              1d52 c227  st   [$27]       8415  st([sysArgs+3])                 #34,
              1d53 0125  ld   [$25]       8416  ld([sysArgs+1])                 #35,
              1d54 ce00  st   [y,x]       8417  st([Y,X])                       #36,
              1d55 0124  ld   [$24]       8418  ld([sysArgs+0])                 #37,
              1d56 a002  suba $02         8419  suba(2)                         #38,
              1d57 c224  st   [$24]       8420  st([sysArgs+0])                 #39,
              1d58 0116  ld   [$16]       8421  ld([vPC])                       #40,
              1d59 a002  suba $02         8422  suba(2)                         #41,
              1d5a c216  st   [$16]       8423  st([vPC])                       #42, restart
              1d5b 1403  ld   $03,y       8424  ld(hi('REENTER'),Y)             #43,
              1d5c e0cb  jmp  y,$cb       8425  jmp(Y,'REENTER')                #44,
              1d5d 00e8  ld   $e8         8426  ld(-48/2)                       #45,
                                          8427  label('.sys_drawvline_29')
.sys_drawvline_29:
              1d5e a001  suba $01         8428  suba(1)                         #29,
                                          8429  blt('.sys_drawvline_32')        #30,
              1d5f e86c  blt  .sys_drawvline_32
              1d60 0124  ld   [$24]       8430  ld([sysArgs+0])                 #31,
              1d61 0125  ld   [$25]       8431  ld([sysArgs+1])                 #32, 1 pixel
              1d62 ce00  st   [y,x]       8432  st([Y,X])                       #33,
              1d63 0124  ld   [$24]       8433  ld([sysArgs+0])                 #34,
              1d64 a001  suba $01         8434  suba(1)                         #35,
              1d65 c224  st   [$24]       8435  st([sysArgs+0])                 #36,
              1d66 0116  ld   [$16]       8436  ld([vPC])                       #37,
              1d67 a002  suba $02         8437  suba(2)                         #38,
              1d68 c216  st   [$16]       8438  st([vPC])                       #39, restart
              1d69 1403  ld   $03,y       8439  ld(hi('NEXTY'),Y)               #40,
              1d6a e000  jmp  y,$00       8440  jmp(Y,'NEXTY')                  #41,
              1d6b 00ea  ld   $ea         8441  ld(-44/2)                       #42,
                                          8442  label('.sys_drawvline_32')
.sys_drawvline_32:
              1d6c 1403  ld   $03,y       8443  ld(hi('NEXTY'),Y)               #32, done
              1d6d e000  jmp  y,$00       8444  jmp(Y,'NEXTY')                  #33,
              1d6e 00ee  ld   $ee         8445  ld(-36/2)                       #34,
                                          8446
                                          8447
              1d6f 0200  nop              8448  fillers(until=0x80)
              1d70 0200  nop
              1d71 0200  nop
              * 17 times
                                          8449
                                          8450
              1d80 0200  nop              8451  fillers(until=0xff)
              1d81 0200  nop
              1d82 0200  nop
              * 127 times
              1dff 0200  nop              8452  align(0x100, size=0x100)
                                          8453
                                          8454  #-----------------------------------------------------------------------
                                          8455  #       More sys implementations, (0x1E00)
                                          8456  #-----------------------------------------------------------------------
                                          8457  #
                                          8458  # sys_SpritePattern, sysArgs0,1=src, sysArgs2=dstY, sysArgs3=height/2, sysArgs4,5=patternLut
                                          8459  label('sys_SpritePattern')
sys_SpritePattern:
              1e00 1525  ld   [$25],y     8460  ld([sysArgs+1],Y)               #18, src.hi
              1e01 0d00  ld   [y,x]       8461  ld([Y,X])                       #19,
              1e02 de00  st   [y,x++]     8462  st([Y,Xpp])                     #20, src.lo++
              1e03 1526  ld   [$26],y     8463  ld([sysArgs+2],Y)               #21,
              1e04 caa3  st   [y,$a3]     8464  st([Y,0xA3])                    #22, pixel0
              1e05 1525  ld   [$25],y     8465  ld([sysArgs+1],Y)               #23, src.hi
              1e06 0d00  ld   [y,x]       8466  ld([Y,X])                       #24,
              1e07 de00  st   [y,x++]     8467  st([Y,Xpp])                     #25, src.lo++
              1e08 1526  ld   [$26],y     8468  ld([sysArgs+2],Y)               #26,
              1e09 caa5  st   [y,$a5]     8469  st([Y,0xA5])                    #27, pixel1
              1e0a 1525  ld   [$25],y     8470  ld([sysArgs+1],Y)               #28, src.hi
              1e0b 0d00  ld   [y,x]       8471  ld([Y,X])                       #29,
              1e0c de00  st   [y,x++]     8472  st([Y,Xpp])                     #30, src.lo++
              1e0d 1526  ld   [$26],y     8473  ld([sysArgs+2],Y)               #31,
              1e0e caa7  st   [y,$a7]     8474  st([Y,0xA7])                    #32, pixel2
              1e0f 1525  ld   [$25],y     8475  ld([sysArgs+1],Y)               #33, src.hi
              1e10 0d00  ld   [y,x]       8476  ld([Y,X])                       #34,
              1e11 de00  st   [y,x++]     8477  st([Y,Xpp])                     #35, src.lo++
              1e12 1526  ld   [$26],y     8478  ld([sysArgs+2],Y)               #36,
              1e13 caa9  st   [y,$a9]     8479  st([Y,0xA9])                    #37, pixel3
              1e14 1525  ld   [$25],y     8480  ld([sysArgs+1],Y)               #38, src.hi
              1e15 0d00  ld   [y,x]       8481  ld([Y,X])                       #39,
              1e16 de00  st   [y,x++]     8482  st([Y,Xpp])                     #40, src.lo++
              1e17 1526  ld   [$26],y     8483  ld([sysArgs+2],Y)               #41,
              1e18 caab  st   [y,$ab]     8484  st([Y,0xAB])                    #42, pixel4
              1e19 1525  ld   [$25],y     8485  ld([sysArgs+1],Y)               #43, src.hi
              1e1a 0d00  ld   [y,x]       8486  ld([Y,X])                       #44,
              1e1b de00  st   [y,x++]     8487  st([Y,Xpp])                     #45, src.lo++
              1e1c 1526  ld   [$26],y     8488  ld([sysArgs+2],Y)               #46,
              1e1d caad  st   [y,$ad]     8489  st([Y,0xAD])                    #47, pixel5
              1e1e 1525  ld   [$25],y     8490  ld([sysArgs+1],Y)               #48, src.hi
              1e1f 0d00  ld   [y,x]       8491  ld([Y,X])                       #49,
              1e20 de00  st   [y,x++]     8492  st([Y,Xpp])                     #50, src.lo++
              1e21 1526  ld   [$26],y     8493  ld([sysArgs+2],Y)               #51,
              1e22 caaf  st   [y,$af]     8494  st([Y,0xAF])                    #52, pixel6
              1e23 1525  ld   [$25],y     8495  ld([sysArgs+1],Y)               #53, src.hi
              1e24 0d00  ld   [y,x]       8496  ld([Y,X])                       #54,
              1e25 de00  st   [y,x++]     8497  st([Y,Xpp])                     #55, src.lo++
              1e26 1526  ld   [$26],y     8498  ld([sysArgs+2],Y)               #56,
              1e27 cab1  st   [y,$b1]     8499  st([Y,0xB1])                    #57, pixel7
              1e28 1525  ld   [$25],y     8500  ld([sysArgs+1],Y)               #58, src.hi
              1e29 0d00  ld   [y,x]       8501  ld([Y,X])                       #59,
              1e2a de00  st   [y,x++]     8502  st([Y,Xpp])                     #60, src.lo++
              1e2b 1526  ld   [$26],y     8503  ld([sysArgs+2],Y)               #61,
              1e2c cab3  st   [y,$b3]     8504  st([Y,0xB3])                    #62, pixel8
              1e2d 0126  ld   [$26]       8505  ld([sysArgs+2])                 #63,
              1e2e 8001  adda $01         8506  adda(1)                         #64,
              1e2f c226  st   [$26]       8507  st([sysArgs+2])                 #65, dstY++
              1e30 1525  ld   [$25],y     8508  ld([sysArgs+1],Y)               #66, src.hi
              1e31 0d00  ld   [y,x]       8509  ld([Y,X])                       #67,
              1e32 de00  st   [y,x++]     8510  st([Y,Xpp])                     #68, src.lo++
              1e33 1526  ld   [$26],y     8511  ld([sysArgs+2],Y)               #69,
              1e34 caa3  st   [y,$a3]     8512  st([Y,0xA3])                    #70, pixel9
              1e35 1525  ld   [$25],y     8513  ld([sysArgs+1],Y)               #71, src.hi
              1e36 0d00  ld   [y,x]       8514  ld([Y,X])                       #72,
              1e37 de00  st   [y,x++]     8515  st([Y,Xpp])                     #73, src.lo++
              1e38 1526  ld   [$26],y     8516  ld([sysArgs+2],Y)               #74,
              1e39 caa5  st   [y,$a5]     8517  st([Y,0xA5])                    #75, pixel10
              1e3a 1525  ld   [$25],y     8518  ld([sysArgs+1],Y)               #76, src.hi
              1e3b 0d00  ld   [y,x]       8519  ld([Y,X])                       #77,
              1e3c de00  st   [y,x++]     8520  st([Y,Xpp])                     #78, src.lo++
              1e3d 1526  ld   [$26],y     8521  ld([sysArgs+2],Y)               #79,
              1e3e caa7  st   [y,$a7]     8522  st([Y,0xA7])                    #80, pixel11
              1e3f 1525  ld   [$25],y     8523  ld([sysArgs+1],Y)               #81, src.hi
              1e40 0d00  ld   [y,x]       8524  ld([Y,X])                       #82,
              1e41 de00  st   [y,x++]     8525  st([Y,Xpp])                     #83, src.lo++
              1e42 1526  ld   [$26],y     8526  ld([sysArgs+2],Y)               #84,
              1e43 caa9  st   [y,$a9]     8527  st([Y,0xA9])                    #85, pixel12
              1e44 1525  ld   [$25],y     8528  ld([sysArgs+1],Y)               #86, src.hi
              1e45 0d00  ld   [y,x]       8529  ld([Y,X])                       #87,
              1e46 de00  st   [y,x++]     8530  st([Y,Xpp])                     #88, src.lo++
              1e47 1526  ld   [$26],y     8531  ld([sysArgs+2],Y)               #89,
              1e48 caab  st   [y,$ab]     8532  st([Y,0xAB])                    #90, pixel13
              1e49 1525  ld   [$25],y     8533  ld([sysArgs+1],Y)               #91, src.hi
              1e4a 0d00  ld   [y,x]       8534  ld([Y,X])                       #92,
              1e4b de00  st   [y,x++]     8535  st([Y,Xpp])                     #93, src.lo++
              1e4c 1526  ld   [$26],y     8536  ld([sysArgs+2],Y)               #94,
              1e4d caad  st   [y,$ad]     8537  st([Y,0xAD])                    #95, pixel14
              1e4e 1525  ld   [$25],y     8538  ld([sysArgs+1],Y)               #96, src.hi
              1e4f 0d00  ld   [y,x]       8539  ld([Y,X])                       #97,
              1e50 de00  st   [y,x++]     8540  st([Y,Xpp])                     #98, src.lo++
              1e51 1526  ld   [$26],y     8541  ld([sysArgs+2],Y)               #99,
              1e52 caaf  st   [y,$af]     8542  st([Y,0xAF])                    #100, pixel15
              1e53 1525  ld   [$25],y     8543  ld([sysArgs+1],Y)               #101, src.hi
              1e54 0d00  ld   [y,x]       8544  ld([Y,X])                       #102,
              1e55 de00  st   [y,x++]     8545  st([Y,Xpp])                     #103, src.lo++
              1e56 1526  ld   [$26],y     8546  ld([sysArgs+2],Y)               #104,
              1e57 cab1  st   [y,$b1]     8547  st([Y,0xB1])                    #105, pixel16
              1e58 1525  ld   [$25],y     8548  ld([sysArgs+1],Y)               #106, src.hi
              1e59 0d00  ld   [y,x]       8549  ld([Y,X])                       #107,
              1e5a de00  st   [y,x++]     8550  st([Y,Xpp])                     #108, src.lo++
              1e5b 1526  ld   [$26],y     8551  ld([sysArgs+2],Y)               #109,
              1e5c cab3  st   [y,$b3]     8552  st([Y,0xB3])                    #110, pixel17
              1e5d 0126  ld   [$26]       8553  ld([sysArgs+2])                 #111,
              1e5e 8001  adda $01         8554  adda(1)                         #112,
              1e5f c226  st   [$26]       8555  st([sysArgs+2])                 #113, dstY++
                                          8556
              1e60 0128  ld   [$28]       8557  ld([sysArgs+4])                 #114,
              1e61 8002  adda $02         8558  adda(2)                         #115,
              1e62 d228  st   [$28],x     8559  st([sysArgs+4],X)               #116, patternLut += 2
              1e63 1529  ld   [$29],y     8560  ld([sysArgs+5],Y)               #117,
              1e64 0d00  ld   [y,x]       8561  ld([Y,X])                       #118,
              1e65 de00  st   [y,x++]     8562  st([Y,Xpp])                     #119,
              1e66 c224  st   [$24]       8563  st([sysArgs+0])                 #120, src.lo
              1e67 0d00  ld   [y,x]       8564  ld([Y,X])                       #121,
              1e68 c225  st   [$25]       8565  st([sysArgs+1])                 #122, src.hi
                                          8566
              1e69 0127  ld   [$27]       8567  ld([sysArgs+3])                 #123,
              1e6a a001  suba $01         8568  suba(1)                         #124,
              1e6b c227  st   [$27]       8569  st([sysArgs+3])                 #125, height/2 --
                                          8570  beq('.sys_spritepattern_128')   #126,
              1e6c f073  beq  .sys_spritepattern_128
              1e6d 0116  ld   [$16]       8571  ld([vPC])                       #127,
              1e6e a002  suba $02         8572  suba(2)                         #128,
              1e6f c216  st   [$16]       8573  st([vPC])                       #129, restart
              1e70 1403  ld   $03,y       8574  ld(hi('NEXTY'),Y)               #130,
              1e71 e000  jmp  y,$00       8575  jmp(Y,'NEXTY')                  #131,
              1e72 00bd  ld   $bd         8576  ld(-134/2)                      #132,
                                          8577
                                          8578  label('.sys_spritepattern_128')
.sys_spritepattern_128:
              1e73 1403  ld   $03,y       8579  ld(hi('NEXTY'),Y)               #128,
              1e74 e000  jmp  y,$00       8580  jmp(Y,'NEXTY')                  #129,
              1e75 00be  ld   $be         8581  ld(-132/2)                      #130,
                                          8582
                                          8583
                                          8584  # sys_DrawBullet
                                          8585  label('sys_DrawBullet')
sys_DrawBullet:
              1e76 1583  ld   [$83],y     8586  ld([0x83],Y)                    #18, bulletY
              1e77 0d00  ld   [y,x]       8587  ld([Y,X])                       #19, AC = screen
              1e78 1587  ld   [$87],y     8588  ld([0x87],Y)                    #20, bulletData
              1e79 69b4  xora [y,$b4]     8589  xora([Y,0xB4])                  #21, AC ^= bullet
              1e7a 1583  ld   [$83],y     8590  ld([0x83],Y)                    #22, bulletY
              1e7b de00  st   [y,x++]     8591  st([Y,Xpp])                     #23, screen = AC
                                          8592
              1e7c 0d00  ld   [y,x]       8593  ld([Y,X])                       #24, AC = screen
              1e7d 1587  ld   [$87],y     8594  ld([0x87],Y)                    #25, bulletData
              1e7e 69b5  xora [y,$b5]     8595  xora([Y,0xB5])                  #26, AC ^= bullet
              1e7f 1583  ld   [$83],y     8596  ld([0x83],Y)                    #27, bulletY
              1e80 de00  st   [y,x++]     8597  st([Y,Xpp])                     #28, screen = AC
                                          8598
              1e81 0d00  ld   [y,x]       8599  ld([Y,X])                       #29, AC = screen
              1e82 1587  ld   [$87],y     8600  ld([0x87],Y)                    #30, bulletData
              1e83 69b6  xora [y,$b6]     8601  xora([Y,0xB6])                  #31, AC ^= bullet
              1e84 1583  ld   [$83],y     8602  ld([0x83],Y)                    #32, bulletY
              1e85 de00  st   [y,x++]     8603  st([Y,Xpp])                     #33, screen = AC
                                          8604
              1e86 0d00  ld   [y,x]       8605  ld([Y,X])                       #34, AC = screen
              1e87 1587  ld   [$87],y     8606  ld([0x87],Y)                    #35, bulletData
              1e88 69b7  xora [y,$b7]     8607  xora([Y,0xB7])                  #36, AC ^= bullet
              1e89 1583  ld   [$83],y     8608  ld([0x83],Y)                    #37, bulletY
              1e8a de00  st   [y,x++]     8609  st([Y,Xpp])                     #38, screen = AC
                                          8610
              1e8b 1182  ld   [$82],x     8611  ld([0x82],X)                    #39, bulletX
              1e8c 0183  ld   [$83]       8612  ld([0x83])                      #40,
              1e8d 8001  adda $01         8613  adda(1)                         #41,
              1e8e d683  st   [$83],y     8614  st([0x83],Y)                    #42, bulletY++
                                          8615
              1e8f 0d00  ld   [y,x]       8616  ld([Y,X])                       #43, AC = screen
              1e90 1587  ld   [$87],y     8617  ld([0x87],Y)                    #44, bulletData
              1e91 69b8  xora [y,$b8]     8618  xora([Y,0xB8])                  #45, AC ^= bullet
              1e92 1583  ld   [$83],y     8619  ld([0x83],Y)                    #46, bulletY
              1e93 de00  st   [y,x++]     8620  st([Y,Xpp])                     #47, screen = AC
                                          8621
              1e94 0d00  ld   [y,x]       8622  ld([Y,X])                       #48, AC = screen
              1e95 1587  ld   [$87],y     8623  ld([0x87],Y)                    #49, bulletData
              1e96 69b9  xora [y,$b9]     8624  xora([Y,0xB9])                  #50, AC ^= bullet
              1e97 1583  ld   [$83],y     8625  ld([0x83],Y)                    #51, bulletY
              1e98 de00  st   [y,x++]     8626  st([Y,Xpp])                     #52, screen = AC
                                          8627
              1e99 0d00  ld   [y,x]       8628  ld([Y,X])                       #53, AC = screen
              1e9a 1587  ld   [$87],y     8629  ld([0x87],Y)                    #54, bulletData
              1e9b 69ba  xora [y,$ba]     8630  xora([Y,0xBA])                  #55, AC ^= bullet
              1e9c 1583  ld   [$83],y     8631  ld([0x83],Y)                    #56, bulletY
              1e9d de00  st   [y,x++]     8632  st([Y,Xpp])                     #57, screen = AC
                                          8633
              1e9e 0d00  ld   [y,x]       8634  ld([Y,X])                       #58, AC = screen
              1e9f 1587  ld   [$87],y     8635  ld([0x87],Y)                    #59, bulletData
              1ea0 69bb  xora [y,$bb]     8636  xora([Y,0xBB])                  #60, AC ^= bullet
              1ea1 1583  ld   [$83],y     8637  ld([0x83],Y)                    #61, bulletY
              1ea2 de00  st   [y,x++]     8638  st([Y,Xpp])                     #62, screen = AC
                                          8639
              1ea3 1182  ld   [$82],x     8640  ld([0x82],X)                    #63, bulletX
              1ea4 0183  ld   [$83]       8641  ld([0x83])                      #64,
              1ea5 8001  adda $01         8642  adda(1)                         #65,
              1ea6 d683  st   [$83],y     8643  st([0x83],Y)                    #66, bulletY++
                                          8644
              1ea7 0d00  ld   [y,x]       8645  ld([Y,X])                       #67, AC = screen
              1ea8 1587  ld   [$87],y     8646  ld([0x87],Y)                    #68, bulletData
              1ea9 69bc  xora [y,$bc]     8647  xora([Y,0xBC])                  #69, AC ^= bullet
              1eaa 1583  ld   [$83],y     8648  ld([0x83],Y)                    #70, bulletY
              1eab de00  st   [y,x++]     8649  st([Y,Xpp])                     #71, screen = AC
                                          8650
              1eac 0d00  ld   [y,x]       8651  ld([Y,X])                       #72, AC = screen
              1ead 1587  ld   [$87],y     8652  ld([0x87],Y)                    #73, bulletData
              1eae 69bd  xora [y,$bd]     8653  xora([Y,0xBD])                  #74, AC ^= bullet
              1eaf 1583  ld   [$83],y     8654  ld([0x83],Y)                    #75, bulletY
              1eb0 de00  st   [y,x++]     8655  st([Y,Xpp])                     #76, screen = AC
                                          8656
              1eb1 0d00  ld   [y,x]       8657  ld([Y,X])                       #77, AC = screen
              1eb2 1587  ld   [$87],y     8658  ld([0x87],Y)                    #78, bulletData
              1eb3 69be  xora [y,$be]     8659  xora([Y,0xBE])                  #79, AC ^= bullet
              1eb4 1583  ld   [$83],y     8660  ld([0x83],Y)                    #80, bulletY
              1eb5 de00  st   [y,x++]     8661  st([Y,Xpp])                     #81, screen = AC
                                          8662
              1eb6 0d00  ld   [y,x]       8663  ld([Y,X])                       #82, AC = screen
              1eb7 1587  ld   [$87],y     8664  ld([0x87],Y)                    #83, bulletData
              1eb8 69bf  xora [y,$bf]     8665  xora([Y,0xBF])                  #84, AC ^= bullet
              1eb9 1583  ld   [$83],y     8666  ld([0x83],Y)                    #85, bulletY
              1eba de00  st   [y,x++]     8667  st([Y,Xpp])                     #86, screen = AC
                                          8668
              1ebb 1182  ld   [$82],x     8669  ld([0x82],X)                    #87, bulletX
              1ebc 0183  ld   [$83]       8670  ld([0x83])                      #88,
              1ebd 8001  adda $01         8671  adda(1)                         #89,
              1ebe d683  st   [$83],y     8672  st([0x83],Y)                    #90, bulletY++
                                          8673
              1ebf 0d00  ld   [y,x]       8674  ld([Y,X])                       #91, AC = screen
              1ec0 1587  ld   [$87],y     8675  ld([0x87],Y)                    #92, bulletData
              1ec1 69c0  xora [y,$c0]     8676  xora([Y,0xC0])                  #93, AC ^= bullet
              1ec2 1583  ld   [$83],y     8677  ld([0x83],Y)                    #94, bulletY
              1ec3 de00  st   [y,x++]     8678  st([Y,Xpp])                     #95, screen = AC
                                          8679
              1ec4 0d00  ld   [y,x]       8680  ld([Y,X])                       #96, AC = screen
              1ec5 1587  ld   [$87],y     8681  ld([0x87],Y)                    #97, bulletData
              1ec6 69c1  xora [y,$c1]     8682  xora([Y,0xC1])                  #98, AC ^= bullet
              1ec7 1583  ld   [$83],y     8683  ld([0x83],Y)                    #99, bulletY
              1ec8 de00  st   [y,x++]     8684  st([Y,Xpp])                     #100, screen = AC
                                          8685
              1ec9 0d00  ld   [y,x]       8686  ld([Y,X])                       #101, AC = screen
              1eca 1587  ld   [$87],y     8687  ld([0x87],Y)                    #102, bulletData
              1ecb 69c2  xora [y,$c2]     8688  xora([Y,0xC2])                  #103, AC ^= bullet
              1ecc 1583  ld   [$83],y     8689  ld([0x83],Y)                    #104, bulletY
              1ecd de00  st   [y,x++]     8690  st([Y,Xpp])                     #105, screen = AC
                                          8691
              1ece 0d00  ld   [y,x]       8692  ld([Y,X])                       #106, AC = screen
              1ecf 1587  ld   [$87],y     8693  ld([0x87],Y)                    #107, bulletData
              1ed0 69c3  xora [y,$c3]     8694  xora([Y,0xC3])                  #108, AC ^= bullet
              1ed1 1583  ld   [$83],y     8695  ld([0x83],Y)                    #109, bulletY
              1ed2 de00  st   [y,x++]     8696  st([Y,Xpp])                     #110, screen = AC
                                          8697
              1ed3 019c  ld   [$9c]       8698  ld([0x9C])                      #111, register13
              1ed4 8001  adda $01         8699  adda(1)                         #112,
              1ed5 d29c  st   [$9c],x     8700  st([0x9C],X)                    #113, register13++
              1ed6 159d  ld   [$9d],y     8701  ld([0x9D],Y)                    #114,
              1ed7 0d00  ld   [y,x]       8702  ld([Y,X])                       #115, peek(register13)
              1ed8 c282  st   [$82]       8703  st([0x82])                      #116, bulletX
                                          8704
              1ed9 019e  ld   [$9e]       8705  ld([0x9E])                      #117,
              1eda 8001  adda $01         8706  adda(1)                         #118,
              1edb d29e  st   [$9e],x     8707  st([0x9E],X)                    #119, register14++
              1edc 159f  ld   [$9f],y     8708  ld([0x9F],Y)                    #120,
              1edd 0d00  ld   [y,x]       8709  ld([Y,X])                       #121, peek(register14)
              1ede c283  st   [$83]       8710  st([0x83])                      #122, bulletY
                                          8711
              1edf 01a0  ld   [$a0]       8712  ld([0xA0])                      #123,
              1ee0 8001  adda $01         8713  adda(1)                         #124,
              1ee1 d2a0  st   [$a0],x     8714  st([0xA0],X)                    #125, register15++
              1ee2 15a1  ld   [$a1],y     8715  ld([0xA1],Y)                    #126,
              1ee3 0d00  ld   [y,x]       8716  ld([Y,X])                       #127, peek(register15)
              1ee4 c287  st   [$87]       8717  st([0x87])                      #128, bulletData
                                          8718
              1ee5 019a  ld   [$9a]       8719  ld([0x9A])                      #129,
              1ee6 a001  suba $01         8720  suba(1)                         #130,
                                          8721  beq('.sys_drawbullet_133')      #131,
              1ee7 f0ef  beq  .sys_drawbullet_133
              1ee8 c29a  st   [$9a]       8722  st([0x9A])                      #132, register12--
              1ee9 1403  ld   $03,y       8723  ld(hi('NEXTY'),Y)               #133,
              1eea 0116  ld   [$16]       8724  ld([vPC])                       #134,
              1eeb a002  suba $02         8725  suba(2)                         #135,
              1eec c216  st   [$16]       8726  st([vPC])                       #136, restart
              1eed e000  jmp  y,$00       8727  jmp(Y,'NEXTY')                  #137,
              1eee 00ba  ld   $ba         8728  ld(-140/2)                      #138,
                                          8729  label('.sys_drawbullet_133')
.sys_drawbullet_133:
              1eef 1403  ld   $03,y       8730  ld(hi('REENTER'),Y)             #133,
              1ef0 e0cb  jmp  y,$cb       8731  jmp(Y,'REENTER')                #134,
              1ef1 00bb  ld   $bb         8732  ld(-138/2)                      #135,
                                          8733
                                          8734
              1ef2 0200  nop              8735  fillers(until=0xff)
              1ef3 0200  nop
              1ef4 0200  nop
              * 13 times
              1eff 0200  nop              8736  align(0x100, size=0x100)
                                          8737
                                          8738  #-----------------------------------------------------------------------
                                          8739  #       More sys implementations, (0x1F00)
                                          8740  #-----------------------------------------------------------------------
                                          8741  #
                                          8742  # sys_CmpByteBounds, 0xB8,B9=src, 0xBA,BB=vPC_bounds, 0xBC,BD=bounds, 0xBE=index,
                                          8743  #                    0xBF=count, output:vAC.lo=index
                                          8744  label('sys_CmpByteBounds')
sys_CmpByteBounds:
              1f00 a001  suba $01         8745  suba(1)                         #18,
                                          8746  bge('.sys_cmpbytebounds_21')    #19,
              1f01 f406  bge  .sys_cmpbytebounds_21
              1f02 c2bf  st   [$bf]       8747  st([0xBF])                      #20, count--
              1f03 1403  ld   $03,y       8748  ld(hi('REENTER'),Y)             #21,
              1f04 e0cb  jmp  y,$cb       8749  jmp(Y,'REENTER')                #22,
              1f05 00f3  ld   $f3         8750  ld(-26/2)                       #23,
                                          8751  label('.sys_cmpbytebounds_21')
.sys_cmpbytebounds_21:
              1f06 01b8  ld   [$b8]       8752  ld([0xB8])                      #21,
              1f07 91be  adda [$be],x     8753  adda([0xBE],X)                  #22,
              1f08 15b9  ld   [$b9],y     8754  ld([0xB9],Y)                    #23,
              1f09 0d00  ld   [y,x]       8755  ld([Y,X])                       #24,
                                          8756  bmi('.sys_cmpbytebounds_27')    #25,
              1f0a e80e  blt  .sys_cmpbytebounds_27
              1f0b a1bc  suba [$bc]       8757  suba([0xBC])                    #26,
                                          8758  bra('.sys_cmpbytebounds_29')    #27,
              1f0c fc10  bra  .sys_cmpbytebounds_29
              1f0d 41bc  ora  [$bc]       8759  ora([0xBC])                     #28,
                                          8760  label('.sys_cmpbytebounds_27')
.sys_cmpbytebounds_27:
              1f0e 21bc  anda [$bc]       8761  anda([0xBC])                    #27,
              1f0f 0200  nop              8762  nop()                           #28,
                                          8763
                                          8764  label('.sys_cmpbytebounds_29')
.sys_cmpbytebounds_29:                    8765  bpl('.sys_cmpbytebounds_31')    #29,
              1f10 f422  bge  .sys_cmpbytebounds_31
              1f11 0d00  ld   [y,x]       8766  ld([Y,X])                       #30,
              1f12 0116  ld   [$16]       8767  ld([vPC])                       #31, < lbounds
              1f13 c21a  st   [$1a]       8768  st([vLR])                       #32, return to SYS call
              1f14 0117  ld   [$17]       8769  ld([vPC+1])                     #33,
              1f15 c21b  st   [$1b]       8770  st([vLR+1])                     #34,
              1f16 01ba  ld   [$ba]       8771  ld([0xBA])                      #35,
              1f17 a002  suba $02         8772  suba(2)                         #36,
              1f18 c216  st   [$16]       8773  st([vPC])                       #37, NEXT adds 2
              1f19 01bb  ld   [$bb]       8774  ld([0xBB])                      #38,
              1f1a c217  st   [$17]       8775  st([vPC+1])                     #39, bounds call address
              1f1b 01be  ld   [$be]       8776  ld([0xBE])                      #40,
              1f1c c218  st   [$18]       8777  st([vAC])                       #41, vAC.lo = index
              1f1d 8001  adda $01         8778  adda(1)                         #42,
              1f1e c2be  st   [$be]       8779  st([0xBE])                      #43, index++
              1f1f 1403  ld   $03,y       8780  ld(hi('NEXTY'),Y)               #44,
              1f20 e000  jmp  y,$00       8781  jmp(Y,'NEXTY')                  #45,
              1f21 00e8  ld   $e8         8782  ld(-48/2)                       #46,
                                          8783
                                          8784  label('.sys_cmpbytebounds_31')
.sys_cmpbytebounds_31:                    8785  bmi('.sys_cmpbytebounds_33')    #31,
              1f22 e826  blt  .sys_cmpbytebounds_33
              1f23 a1bd  suba [$bd]       8786  suba([0xBD])                    #32,
                                          8787  bra('.sys_cmpbytebounds_35')    #33,
              1f24 fc28  bra  .sys_cmpbytebounds_35
              1f25 41bd  ora  [$bd]       8788  ora([0xBD])                     #34,
                                          8789  label('.sys_cmpbytebounds_33')
.sys_cmpbytebounds_33:
              1f26 21bd  anda [$bd]       8790  anda([0xBD])                    #33,
              1f27 0200  nop              8791  nop()                           #34,
                                          8792  label('.sys_cmpbytebounds_35')
.sys_cmpbytebounds_35:                    8793  bmi('.sys_cmpbytebounds_37')    #35,
              1f28 e839  blt  .sys_cmpbytebounds_37
              1f29 0116  ld   [$16]       8794  ld([vPC])                       #36, >= ubounds
              1f2a c21a  st   [$1a]       8795  st([vLR])                       #37, return to SYS call
              1f2b 0117  ld   [$17]       8796  ld([vPC+1])                     #38,
              1f2c c21b  st   [$1b]       8797  st([vLR+1])                     #39,
              1f2d 01ba  ld   [$ba]       8798  ld([0xBA])                      #40,
              1f2e a002  suba $02         8799  suba(2)                         #41,
              1f2f c216  st   [$16]       8800  st([vPC])                       #42, NEXT adds 2
              1f30 01bb  ld   [$bb]       8801  ld([0xBB])                      #43,
              1f31 c217  st   [$17]       8802  st([vPC+1])                     #44, bounds call address
              1f32 01be  ld   [$be]       8803  ld([0xBE])                      #45,
              1f33 c218  st   [$18]       8804  st([vAC])                       #46, vAC.lo = index
              1f34 8001  adda $01         8805  adda(1)                         #47,
              1f35 c2be  st   [$be]       8806  st([0xBE])                      #48, index++
              1f36 1403  ld   $03,y       8807  ld(hi('REENTER'),Y)             #49,
              1f37 e0cb  jmp  y,$cb       8808  jmp(Y,'REENTER')                #50,
              1f38 00e5  ld   $e5         8809  ld(-54/2)                       #51,
                                          8810
                                          8811  label('.sys_cmpbytebounds_37')
.sys_cmpbytebounds_37:
              1f39 a002  suba $02         8812  suba(2)                         #37,
              1f3a c216  st   [$16]       8813  st([vPC])                       #38, restart
              1f3b 01be  ld   [$be]       8814  ld([0xBE])                      #39,
              1f3c 8001  adda $01         8815  adda(1)                         #40,
              1f3d c2be  st   [$be]       8816  st([0xBE])                      #41, index++
              1f3e 1403  ld   $03,y       8817  ld(hi('NEXTY'),Y)               #42,
              1f3f e000  jmp  y,$00       8818  jmp(Y,'NEXTY')                  #43,
              1f40 00e9  ld   $e9         8819  ld(-46/2)                       #44,
                                          8820
                                          8821
                                          8822  # SYS_Reset_88 implementation
                                          8823  label('sys_Reset_88')
sys_Reset_88: 1f41 c221  st   [$21]       8824  st([romType])                   #18
              1f42 0000  ld   $00         8825  ld(0)                           #19
              1f43 c21c  st   [$1c]       8826  st([vSP])                       #20
              1f44 c204  st   [$04]       8827  st([vSPH])                      #21
              1f45 1401  ld   $01,y       8828  ld(hi('videoTop_v5'),Y)         #22
              1f46 caf9  st   [y,$f9]     8829  st([Y,lo('videoTop_v5')])       #23 Show all 120 pixel lines
              1f47 caf6  st   [y,$f6]     8830  st([Y,vIRQ_v5])                 #24 Disable vIRQ dispatch
              1f48 caf7  st   [y,$f7]     8831  st([Y,vIRQ_v5+1])               #25
              1f49 c22c  st   [$2c]       8832  st([soundTimer])                #26 soundTimer
                                          8833  assert userCode&255 == 0
              1f4a c21a  st   [$1a]       8834  st([vLR])                       #27 vLR
              1f4b 0002  ld   $02         8835  ld(userCode>>8)                 #28
              1f4c c21b  st   [$1b]       8836  st([vLR+1])                     #29
              1f4d 00f6  ld   $f6         8837  ld('nopixels')                  #30 Video mode 3 (fast)
              1f4e c20a  st   [$0a]       8838  st([videoModeB])                #31
              1f4f c20b  st   [$0b]       8839  st([videoModeC])                #32
              1f50 c20c  st   [$0c]       8840  st([videoModeD])                #33
              1f51 00ad  ld   $ad         8841  ld('SYS_Exec_88')               #34 SYS_Exec_88
              1f52 c222  st   [$22]       8842  st([sysFn])                     #35 High byte (remains) 0
              1f53 002b  ld   $2b         8843  ld('Reset')                     #36 Reset.gt1 from EPROM
              1f54 c224  st   [$24]       8844  st([sysArgs+0])                 #37
              1f55 00f1  ld   $f1         8845  ld(hi('Reset'))                 #38
              1f56 c225  st   [$25]       8846  st([sysArgs+1])                 #39
              1f57 0116  ld   [$16]       8847  ld([vPC])                       #40 Force second SYS call
              1f58 a002  suba $02         8848  suba(2)                         #41
              1f59 c216  st   [$16]       8849  st([vPC])                       #42
              1f5a c17f  ctrl $7f         8850  ctrl(0b01111111)                #43 Expansion board: (1) reset signal.
              1f5b c17c  ctrl $7c         8851  ctrl(0b01111100)                #44 (2) disable SPI slaves, enable RAM bank 1
              1f5c 000f  ld   $0f         8852  ld(0x0f)                        #45 default 4bit sound
              1f5d c208  st   [$08]       8853  st([audioBitMask])              #46
              1f5e 1403  ld   $03,y       8854  ld(hi('REENTER'),Y)             #47
              1f5f e0cb  jmp  y,$cb       8855  jmp(Y,'REENTER')                #48
              1f60 00e6  ld   $e6         8856  ld(-52/2)                       #49
                                          8857
                                          8858
                                          8859  #-----------------------------------------------------------------------
                                          8860  # sys_Divide_u168, x:u8 = x:u16 / y:u8, rem:u8 = x:u16 % y:u8
                                          8861  # sysArgs0,1=x, sysArgs2=y, sysArgs4=count, output : sysArgs0=res, sysArgs1=rem
                                          8862  label('sys_Divide_u168')
sys_Divide_u168:
              1f61 c229  st   [$29]       8863  st([sysArgs+5])                 #18, save x.hi
              1f62 0128  ld   [$28]       8864  ld([sysArgs+4])                 #19,
              1f63 a001  suba $01         8865  suba(1)                         #20, count--
                                          8866  bge('.sys_divide_u168_23')      #21,
              1f64 f469  bge  .sys_divide_u168_23
              1f65 c228  st   [$28]       8867  st([sysArgs+4])                 #22,
              1f66 1403  ld   $03,y       8868  ld(hi('REENTER'),Y)             #23,
              1f67 e0cb  jmp  y,$cb       8869  jmp(Y,'REENTER')                #24,
              1f68 00f2  ld   $f2         8870  ld(-28/2)                       #25,
                                          8871
                                          8872  label('.sys_divide_u168_23')
.sys_divide_u168_23:
              1f69 0124  ld   [$24]       8873  ld([sysArgs+0])                 #23,
              1f6a 3080  anda $80,x       8874  anda(128,X)                     #24,
              1f6b 8124  adda [$24]       8875  adda([sysArgs+0])               #25,
              1f6c c224  st   [$24]       8876  st([sysArgs+0])                 #26,
              1f6d 0500  ld   [x]         8877  ld([X])                         #27,
              1f6e 8125  adda [$25]       8878  adda([sysArgs+1])               #28,
              1f6f 8125  adda [$25]       8879  adda([sysArgs+1])               #29,
              1f70 c225  st   [$25]       8880  st([sysArgs+1])                 #30, x <<1
                                          8881  bmi('.sys_divide_u168_33')      #31, unsigned compare
              1f71 e876  blt  .sys_divide_u168_33
              1f72 a126  suba [$26]       8882  suba([sysArgs+2])               #32, x.hi - y
              1f73 c21d  st   [$1d]       8883  st([vTmp])                      #33,
                                          8884  bra('.sys_divide_u168_36')      #34,
              1f74 fc79  bra  .sys_divide_u168_36
              1f75 4126  ora  [$26]       8885  ora([sysArgs+2])                #35,
                                          8886  label('.sys_divide_u168_33')
.sys_divide_u168_33:
              1f76 c21d  st   [$1d]       8887  st([vTmp])                      #33,
              1f77 2126  anda [$26]       8888  anda([sysArgs+2])               #34,
              1f78 0200  nop              8889  nop()                           #35,
                                          8890
                                          8891  label('.sys_divide_u168_36')
.sys_divide_u168_36:                      8892  bmi('.sys_divide_u168_38')      #36,
              1f79 e88f  blt  .sys_divide_u168_38
              1f7a 011d  ld   [$1d]       8893  ld([vTmp])                      #37, x.hi >= y
              1f7b c225  st   [$25]       8894  st([sysArgs+1])                 #38, x.hi = (x.hi - y) <<8
              1f7c 0124  ld   [$24]       8895  ld([sysArgs+0])                 #39,
              1f7d 8001  adda $01         8896  adda(1)                         #40, x.lo++
                                          8897  bne('.sys_divide_u168_43')      #41,
              1f7e ec89  bne  .sys_divide_u168_43
              1f7f c224  st   [$24]       8898  st([sysArgs+0])                 #42,
              1f80 0125  ld   [$25]       8899  ld([sysArgs+1])                 #43,
              1f81 8001  adda $01         8900  adda(1)                         #44, x.hi++
              1f82 c225  st   [$25]       8901  st([sysArgs+1])                 #45,
              1f83 0116  ld   [$16]       8902  ld([vPC])                       #46,
              1f84 a002  suba $02         8903  suba(2)                         #47,
              1f85 c216  st   [$16]       8904  st([vPC])                       #48, restart
              1f86 1403  ld   $03,y       8905  ld(hi('REENTER'),Y)             #49,
              1f87 e0cb  jmp  y,$cb       8906  jmp(Y,'REENTER')                #50,
              1f88 00e5  ld   $e5         8907  ld(-54/2)                       #51,
                                          8908  label('.sys_divide_u168_43')
.sys_divide_u168_43:
              1f89 0116  ld   [$16]       8909  ld([vPC])                       #43,
              1f8a a002  suba $02         8910  suba(2)                         #44,
              1f8b c216  st   [$16]       8911  st([vPC])                       #45, restart
              1f8c 1403  ld   $03,y       8912  ld(hi('NEXTY'),Y)               #46,
              1f8d e000  jmp  y,$00       8913  jmp(Y,'NEXTY')                  #47,
              1f8e 00e7  ld   $e7         8914  ld(-50/2)                       #48,
                                          8915
                                          8916  label('.sys_divide_u168_38')
.sys_divide_u168_38:
              1f8f 0129  ld   [$29]       8917  ld([sysArgs+5])                 #38,
                                          8918  bpl('.sys_divide_u168_41')      #39, msb(x.hi) = 0
              1f90 f4a6  bge  .sys_divide_u168_41
              1f91 011d  ld   [$1d]       8919  ld([vTmp])                      #40, x.hi >= y
              1f92 c225  st   [$25]       8920  st([sysArgs+1])                 #41, x.hi = (x.hi - y) <<8
              1f93 0124  ld   [$24]       8921  ld([sysArgs+0])                 #42,
              1f94 8001  adda $01         8922  adda(1)                         #43, x.lo++
                                          8923  bne('.sys_divide_u168_46')      #44,
              1f95 eca0  bne  .sys_divide_u168_46
              1f96 c224  st   [$24]       8924  st([sysArgs+0])                 #45,
              1f97 0125  ld   [$25]       8925  ld([sysArgs+1])                 #46,
              1f98 8001  adda $01         8926  adda(1)                         #47, x.hi++
              1f99 c225  st   [$25]       8927  st([sysArgs+1])                 #48,
              1f9a 0116  ld   [$16]       8928  ld([vPC])                       #49,
              1f9b a002  suba $02         8929  suba(2)                         #50,
              1f9c c216  st   [$16]       8930  st([vPC])                       #51, restart
              1f9d 1403  ld   $03,y       8931  ld(hi('NEXTY'),Y)               #52,
              1f9e e000  jmp  y,$00       8932  jmp(Y,'NEXTY')                  #53,
              1f9f 00e4  ld   $e4         8933  ld(-56/2)                       #54,
                                          8934  label('.sys_divide_u168_46')
.sys_divide_u168_46:
              1fa0 0116  ld   [$16]       8935  ld([vPC])                       #46,
              1fa1 a002  suba $02         8936  suba(2)                         #47,
              1fa2 c216  st   [$16]       8937  st([vPC])                       #48, restart
              1fa3 1403  ld   $03,y       8938  ld(hi('REENTER'),Y)             #49,
              1fa4 e0cb  jmp  y,$cb       8939  jmp(Y,'REENTER')                #50,
              1fa5 00e5  ld   $e5         8940  ld(-54/2)                       #51,
                                          8941
                                          8942  label('.sys_divide_u168_41')
.sys_divide_u168_41:
              1fa6 0116  ld   [$16]       8943  ld([vPC])                       #41,
              1fa7 a002  suba $02         8944  suba(2)                         #42,
              1fa8 c216  st   [$16]       8945  st([vPC])                       #43, restart
              1fa9 1403  ld   $03,y       8946  ld(hi('NEXTY'),Y)               #44,
              1faa e000  jmp  y,$00       8947  jmp(Y,'NEXTY')                  #45,
              1fab 00e8  ld   $e8         8948  ld(-48/2)                       #46,
                                          8949
                                          8950
              1fac 0200  nop              8951  fillers(until=0xc0)
              1fad 0200  nop
              1fae 0200  nop
              * 20 times
                                          8952
                                          8953  # sys_ConvertVTableX, sysArgs0=dst, sysArgs2=offsetX, sysArgs3=accum, sysArgs4=count
                                          8954  label('SYS_ConvertVTableX_66')
SYS_ConvertVTableX_66:
              1fc0 1401  ld   $01,y       8955  ld(1,Y)                         #15, VTable.hi
              1fc1 1126  ld   [$26],x     8956  ld([sysArgs+2],X)               #16, VTable.lo
              1fc2 0d00  ld   [y,x]       8957  ld([Y,X])                       #17, get VTableX
              1fc3 8127  adda [$27]       8958  adda([sysArgs+3])               #18,
              1fc4 1525  ld   [$25],y     8959  ld([sysArgs+1],Y)               #19, dst.hi
              1fc5 1124  ld   [$24],x     8960  ld([sysArgs+0],X)               #20, dst.lo
              1fc6 ce00  st   [y,x]       8961  st([Y,X])                       #21,
              1fc7 c227  st   [$27]       8962  st([sysArgs+3])                 #22, accum
                                          8963
              1fc8 1401  ld   $01,y       8964  ld(1,Y)                         #23
              1fc9 0124  ld   [$24]       8965  ld([sysArgs+0])                 #24,
              1fca 8001  adda $01         8966  adda(1)                         #25,
              1fcb c224  st   [$24]       8967  st([sysArgs+0])                 #26, dst++
              1fcc 0126  ld   [$26]       8968  ld([sysArgs+2])                 #27,
              1fcd 8002  adda $02         8969  adda(2)                         #28,
              1fce d226  st   [$26],x     8970  st([sysArgs+2],X)               #29, offsetX += 2
              1fcf 0d00  ld   [y,x]       8971  ld([Y,X])                       #30, get video table X
              1fd0 8127  adda [$27]       8972  adda([sysArgs+3])               #31,
              1fd1 1525  ld   [$25],y     8973  ld([sysArgs+1],Y)               #32, dst.hi
              1fd2 1124  ld   [$24],x     8974  ld([sysArgs+0],X)               #33, dst.lo
              1fd3 ce00  st   [y,x]       8975  st([Y,X])                       #34,
              1fd4 c227  st   [$27]       8976  st([sysArgs+3])                 #35, accum
                                          8977
              1fd5 1401  ld   $01,y       8978  ld(1,Y)                         #36
              1fd6 0124  ld   [$24]       8979  ld([sysArgs+0])                 #37,
              1fd7 8001  adda $01         8980  adda(1)                         #38,
              1fd8 c224  st   [$24]       8981  st([sysArgs+0])                 #39, dst++
              1fd9 0126  ld   [$26]       8982  ld([sysArgs+2])                 #40,
              1fda 8002  adda $02         8983  adda(2)                         #41,
              1fdb d226  st   [$26],x     8984  st([sysArgs+2],X)               #42, offsetX += 2
              1fdc 0d00  ld   [y,x]       8985  ld([Y,X])                       #43, get video table X
              1fdd 8127  adda [$27]       8986  adda([sysArgs+3])               #44,
              1fde 1525  ld   [$25],y     8987  ld([sysArgs+1],Y)               #45, dst.hi
              1fdf 1124  ld   [$24],x     8988  ld([sysArgs+0],X)               #46, dst.lo
              1fe0 ce00  st   [y,x]       8989  st([Y,X])                       #47,
              1fe1 c227  st   [$27]       8990  st([sysArgs+3])                 #48, accum
                                          8991
              1fe2 0128  ld   [$28]       8992  ld([sysArgs+4])                 #49,
              1fe3 a001  suba $01         8993  suba(1)                         #50,
              1fe4 c228  st   [$28]       8994  st([sysArgs+4])                 #51, count--
                                          8995  beq('.sys_convertvtablex_54')   #52,
              1fe5 f0f2  beq  .sys_convertvtablex_54
              1fe6 0124  ld   [$24]       8996  ld([sysArgs+0])                 #53,
              1fe7 8001  adda $01         8997  adda(1)                         #54,
              1fe8 c224  st   [$24]       8998  st([sysArgs+0])                 #55, dst++
              1fe9 0126  ld   [$26]       8999  ld([sysArgs+2])                 #56,
              1fea 8002  adda $02         9000  adda(2)                         #57,
              1feb c226  st   [$26]       9001  st([sysArgs+2])                 #58, offsetX += 2
              1fec 0116  ld   [$16]       9002  ld([vPC])                       #59,
              1fed a002  suba $02         9003  suba(2)                         #60,
              1fee c216  st   [$16]       9004  st([vPC])                       #61, restart
              1fef 1403  ld   $03,y       9005  ld(hi('NEXTY'),Y)               #62,
              1ff0 e000  jmp  y,$00       9006  jmp(Y,'NEXTY')                  #63,
              1ff1 00df  ld   $df         9007  ld(-66/2)                       #64,
                                          9008  label('.sys_convertvtablex_54')
.sys_convertvtablex_54:
              1ff2 1403  ld   $03,y       9009  ld(hi('NEXTY'),Y)               #54,
              1ff3 e000  jmp  y,$00       9010  jmp(Y,'NEXTY')                  #55,
              1ff4 00e3  ld   $e3         9011  ld(-58/2)                       #56,
                                          9012
                                          9013
              1ff5 0200  nop              9014  fillers(until=0xff)
              1ff6 0200  nop
              1ff7 0200  nop
              * 10 times
              1fff 0200  nop              9015  align(0x100, size=0x100)
                                          9016
                                          9017  #-----------------------------------------------------------------------
                                          9018  #       More sys implementations, (0x2000)
                                          9019  #-----------------------------------------------------------------------
                                          9020  #
                                          9021  # SYS_DrawSprite_vX_140
                                          9022  label('SYS_DrawSprite_vX_140')
SYS_DrawSprite_vX_140:
              2000 0186  ld   [$86]       9023  ld([0x86])                      #15, spriteEnable
                                          9024  bmi('.sys_drawsprite_18')       #16,
              2001 e89b  blt  .sys_drawsprite_18
              2002 0183  ld   [$83]       9025  ld([0x83])                      #17, spriteY
              2003 8183  adda [$83]       9026  adda([0x83])                    #18, spriteY
              2004 1200  ld   ac,x        9027  ld(AC,X)                        #19,
              2005 1401  ld   $01,y       9028  ld(1,Y)                         #20, 0x0100
              2006 0d00  ld   [y,x]       9029  ld([Y,X])                       #21, VTableY
              2007 c285  st   [$85]       9030  st([0x85])                      #22,
              2008 1525  ld   [$25],y     9031  ld([sysArgs+1],Y)               #23, VTableAbsX.hi
              2009 0124  ld   [$24]       9032  ld([sysArgs+0])                 #24, VTableAbsX.lo
              200a 8183  adda [$83]       9033  adda([0x83])                    #25, spriteY
              200b 1200  ld   ac,x        9034  ld(AC,X)                        #26,
              200c 0182  ld   [$82]       9035  ld([0x82])                      #27, spriteX
              200d 8d00  adda [y,x]       9036  adda([Y,X])                     #28, VTableX offset, (absolute)
              200e d284  st   [$84],x     9037  st([0x84],X)                    #29,
              200f 1585  ld   [$85],y     9038  ld([0x85],Y)                    #30,
                                          9039
              2010 0d00  ld   [y,x]       9040  ld([Y,X])                       #31, get back0
              2011 1587  ld   [$87],y     9041  ld([0x87],Y)                    #32, spriteData
              2012 caa2  st   [y,$a2]     9042  st([Y,0xA2])                    #33, save back0
              2013 09a3  ld   [y,$a3]     9043  ld([Y,0xA3])                    #34, load pixel0
              2014 1585  ld   [$85],y     9044  ld([0x85],Y)                    #35, spriteY
              2015 ec18  bne  $2018       9045  bne(pc()+3)                     #36, colourkey
              2016 fc19  bra  $2019       9046  bra(pc()+3)                     #37,
              2017 0d00  ld   [y,x]       9047  ld([Y,X])                       #38,
              2018 61b8  xora [$b8]       9048  xora([0xB8])                    #38, (!)
              2019 de00  st   [y,x++]     9049  st([Y,Xpp])                     #39, draw pixel0
                                          9050
              201a 0d00  ld   [y,x]       9051  ld([Y,X])                       #40, get back1
              201b 1587  ld   [$87],y     9052  ld([0x87],Y)                    #41, spriteData
              201c caa4  st   [y,$a4]     9053  st([Y,0xA4])                    #42, save back1
              201d 09a5  ld   [y,$a5]     9054  ld([Y,0xA5])                    #43, load pixel1
              201e 1585  ld   [$85],y     9055  ld([0x85],Y)                    #44, spriteY
              201f ec22  bne  $2022       9056  bne(pc()+3)                     #45, colourkey
              2020 fc23  bra  $2023       9057  bra(pc()+3)                     #46,
              2021 0d00  ld   [y,x]       9058  ld([Y,X])                       #47,
              2022 61b8  xora [$b8]       9059  xora([0xB8])                    #47, (!)
              2023 de00  st   [y,x++]     9060  st([Y,Xpp])                     #48, draw pixel1
                                          9061
              2024 0d00  ld   [y,x]       9062  ld([Y,X])                       #49, get back2
              2025 1587  ld   [$87],y     9063  ld([0x87],Y)                    #50, spriteData
              2026 caa6  st   [y,$a6]     9064  st([Y,0xA6])                    #51, save back2
              2027 09a7  ld   [y,$a7]     9065  ld([Y,0xA7])                    #52, load pixel2
              2028 1585  ld   [$85],y     9066  ld([0x85],Y)                    #53, spriteY
              2029 ec2c  bne  $202c       9067  bne(pc()+3)                     #54, colourkey
              202a fc2d  bra  $202d       9068  bra(pc()+3)                     #55,
              202b 0d00  ld   [y,x]       9069  ld([Y,X])                       #56,
              202c 61b8  xora [$b8]       9070  xora([0xB8])                    #56, (!)
              202d de00  st   [y,x++]     9071  st([Y,Xpp])                     #57, draw pixel2
                                          9072
              202e 0d00  ld   [y,x]       9073  ld([Y,X])                       #58, get back3
              202f 1587  ld   [$87],y     9074  ld([0x87],Y)                    #59, spriteData
              2030 caa8  st   [y,$a8]     9075  st([Y,0xA8])                    #60, save back3
              2031 09a9  ld   [y,$a9]     9076  ld([Y,0xA9])                    #61, load pixel3
              2032 1585  ld   [$85],y     9077  ld([0x85],Y)                    #62, spriteY
              2033 ec36  bne  $2036       9078  bne(pc()+3)                     #63, colourkey
              2034 fc37  bra  $2037       9079  bra(pc()+3)                     #64,
              2035 0d00  ld   [y,x]       9080  ld([Y,X])                       #65,
              2036 61b8  xora [$b8]       9081  xora([0xB8])                    #65, (!)
              2037 de00  st   [y,x++]     9082  st([Y,Xpp])                     #66, draw pixel3
                                          9083
              2038 0d00  ld   [y,x]       9084  ld([Y,X])                       #67, get back4
              2039 1587  ld   [$87],y     9085  ld([0x87],Y)                    #68, spriteData
              203a caaa  st   [y,$aa]     9086  st([Y,0xAA])                    #69, save back4
              203b 09ab  ld   [y,$ab]     9087  ld([Y,0xAB])                    #70, load pixel4
              203c 1585  ld   [$85],y     9088  ld([0x85],Y)                    #71, spriteY
              203d ec40  bne  $2040       9089  bne(pc()+3)                     #72, colourkey
              203e fc41  bra  $2041       9090  bra(pc()+3)                     #73,
              203f 0d00  ld   [y,x]       9091  ld([Y,X])                       #74,
              2040 61b8  xora [$b8]       9092  xora([0xB8])                    #74, (!)
              2041 de00  st   [y,x++]     9093  st([Y,Xpp])                     #75, draw pixel4
                                          9094
              2042 0d00  ld   [y,x]       9095  ld([Y,X])                       #76, get back5
              2043 1587  ld   [$87],y     9096  ld([0x87],Y)                    #77, spriteData
              2044 caac  st   [y,$ac]     9097  st([Y,0xAC])                    #78, save back5
              2045 09ad  ld   [y,$ad]     9098  ld([Y,0xAD])                    #79, load pixel5
              2046 1585  ld   [$85],y     9099  ld([0x85],Y)                    #80, spriteY
              2047 ec4a  bne  $204a       9100  bne(pc()+3)                     #81, colourkey
              2048 fc4b  bra  $204b       9101  bra(pc()+3)                     #82,
              2049 0d00  ld   [y,x]       9102  ld([Y,X])                       #83,
              204a 61b8  xora [$b8]       9103  xora([0xB8])                    #83, (!)
              204b de00  st   [y,x++]     9104  st([Y,Xpp])                     #84, draw pixel5
                                          9105
              204c 0d00  ld   [y,x]       9106  ld([Y,X])                       #85, get back6
              204d 1587  ld   [$87],y     9107  ld([0x87],Y)                    #86, spriteData
              204e caae  st   [y,$ae]     9108  st([Y,0xAE])                    #87, save back6
              204f 09af  ld   [y,$af]     9109  ld([Y,0xAF])                    #88, load pixel6
              2050 1585  ld   [$85],y     9110  ld([0x85],Y)                    #89, spriteY
              2051 ec54  bne  $2054       9111  bne(pc()+3)                     #90, colourkey
              2052 fc55  bra  $2055       9112  bra(pc()+3)                     #91,
              2053 0d00  ld   [y,x]       9113  ld([Y,X])                       #92,
              2054 61b8  xora [$b8]       9114  xora([0xB8])                    #92, (!)
              2055 de00  st   [y,x++]     9115  st([Y,Xpp])                     #93, draw pixel6
                                          9116
              2056 0d00  ld   [y,x]       9117  ld([Y,X])                       #94, get back7
              2057 1587  ld   [$87],y     9118  ld([0x87],Y)                    #95, spriteData
              2058 cab0  st   [y,$b0]     9119  st([Y,0xB0])                    #96, save back7
              2059 09b1  ld   [y,$b1]     9120  ld([Y,0xB1])                    #97, load pixel7
              205a 1585  ld   [$85],y     9121  ld([0x85],Y)                    #98, spriteY
              205b ec5e  bne  $205e       9122  bne(pc()+3)                     #99, colourkey
              205c fc5f  bra  $205f       9123  bra(pc()+3)                     #100,
              205d 0d00  ld   [y,x]       9124  ld([Y,X])                       #101,
              205e 61b8  xora [$b8]       9125  xora([0xB8])                    #101, (!)
              205f de00  st   [y,x++]     9126  st([Y,Xpp])                     #102, draw pixel7
                                          9127
              2060 0d00  ld   [y,x]       9128  ld([Y,X])                       #103, get back8
              2061 1587  ld   [$87],y     9129  ld([0x87],Y)                    #104, spriteData
              2062 cab2  st   [y,$b2]     9130  st([Y,0xB2])                    #105, save back8
              2063 09b3  ld   [y,$b3]     9131  ld([Y,0xB3])                    #106, load pixel8
              2064 1585  ld   [$85],y     9132  ld([0x85],Y)                    #107, spriteY
              2065 ec68  bne  $2068       9133  bne(pc()+3)                     #108, colourkey
              2066 fc69  bra  $2069       9134  bra(pc()+3)                     #109,
              2067 0d00  ld   [y,x]       9135  ld([Y,X])                       #110,
              2068 61b8  xora [$b8]       9136  xora([0xB8])                    #110, (!)
              2069 de00  st   [y,x++]     9137  st([Y,Xpp])                     #111, draw pixel8
                                          9138
              206a 1587  ld   [$87],y     9139  ld([0x87],Y)                    #112, spriteData
              206b 0184  ld   [$84]       9140  ld([0x84])                      #113, spriteX
              206c caa0  st   [y,$a0]     9141  st([Y,0xA0])                    #114, spriteOldX
              206d 0185  ld   [$85]       9142  ld([0x85])                      #115, spriteY
              206e caa1  st   [y,$a1]     9143  st([Y,0xA1])                    #116, spriteOldY
              206f 0186  ld   [$86]       9144  ld([0x86])                      #117,
              2070 a001  suba $01         9145  suba(1)                         #118,
              2071 c286  st   [$86]       9146  st([0x86])                      #119, scanLines--
                                          9147  beq('.sys_drawsprite_122')      #120,
              2072 f07f  beq  .sys_drawsprite_122
              2073 0183  ld   [$83]       9148  ld([0x83])                      #121, spriteY
              2074 8001  adda $01         9149  adda(1)                         #122,
              2075 c283  st   [$83]       9150  st([0x83])                      #123, spriteY++
              2076 0187  ld   [$87]       9151  ld([0x87])                      #124,
              2077 8001  adda $01         9152  adda(1)                         #125,
              2078 c287  st   [$87]       9153  st([0x87])                      #126, spriteData++
              2079 0116  ld   [$16]       9154  ld([vPC])                       #127,
              207a a002  suba $02         9155  suba(2)                         #128,
              207b c216  st   [$16]       9156  st([vPC])                       #129, restart
              207c 1403  ld   $03,y       9157  ld(hi('NEXTY'),Y)               #130,
              207d e000  jmp  y,$00       9158  jmp(Y,'NEXTY')                  #131,
              207e 00bd  ld   $bd         9159  ld(-134/2)                      #132,
                                          9160
                                          9161  label('.sys_drawsprite_122')
.sys_drawsprite_122:
              207f 01a0  ld   [$a0]       9162  ld([0xA0])                      #122,
              2080 8004  adda $04         9163  adda(4)                         #123,
              2081 d2a0  st   [$a0],x     9164  st([0xA0],X)                    #124, register15 += 4
              2082 15a1  ld   [$a1],y     9165  ld([0xA1],Y)                    #125,
              2083 0d00  ld   [y,x]       9166  ld([Y,X])                       #126, peek(register15 + 0)
              2084 c282  st   [$82]       9167  st([0x82])                      #127, spriteX
              2085 de00  st   [y,x++]     9168  st([Y,Xpp])                     #128, X++
              2086 0d00  ld   [y,x]       9169  ld([Y,X])                       #129, peek(register15 + 1)
              2087 c283  st   [$83]       9170  st([0x83])                      #130, spriteY
              2088 de00  st   [y,x++]     9171  st([Y,Xpp])                     #131, X++
              2089 0d00  ld   [y,x]       9172  ld([Y,X])                       #132, peek(register15 + 2)
              208a c286  st   [$86]       9173  st([0x86])                      #133, spriteHeight
              208b de00  st   [y,x++]     9174  st([Y,Xpp])                     #134, X++
              208c 0d00  ld   [y,x]       9175  ld([Y,X])                       #135, peek(register15 + 3)
              208d c287  st   [$87]       9176  st([0x87])                      #136, spriteData
              208e 0188  ld   [$88]       9177  ld([0x88])                      #137,
              208f a001  suba $01         9178  suba(1)                         #138,
              2090 c288  st   [$88]       9179  st([0x88])                      #139, register3--, spriteCount
                                          9180  beq('.sys_drawsprite_142')      #140,
              2091 f098  beq  .sys_drawsprite_142
              2092 0116  ld   [$16]       9181  ld([vPC])                       #141,
              2093 a002  suba $02         9182  suba(2)                         #142,
              2094 c216  st   [$16]       9183  st([vPC])                       #143, restart
              2095 1403  ld   $03,y       9184  ld(hi('NEXTY'),Y)               #144,
              2096 e000  jmp  y,$00       9185  jmp(Y,'NEXTY')                  #145,
              2097 00b6  ld   $b6         9186  ld(-148/2)                      #146,
                                          9187  label('.sys_drawsprite_142')
.sys_drawsprite_142:
              2098 1403  ld   $03,y       9188  ld(hi('NEXTY'),Y)               #142,
              2099 e000  jmp  y,$00       9189  jmp(Y,'NEXTY')                  #143,
              209a 00b7  ld   $b7         9190  ld(-146/2)                      #144,
                                          9191
                                          9192  label('.sys_drawsprite_18')
.sys_drawsprite_18:
              209b 01a0  ld   [$a0]       9193  ld([0xA0])                      #18,
              209c 8004  adda $04         9194  adda(4)                         #19,
              209d d2a0  st   [$a0],x     9195  st([0xA0],X)                    #20, register15 += 4
              209e 15a1  ld   [$a1],y     9196  ld([0xA1],Y)                    #21,
              209f 0d00  ld   [y,x]       9197  ld([Y,X])                       #22, peek(register15 + 0)
              20a0 c282  st   [$82]       9198  st([0x82])                      #23, spriteX
              20a1 de00  st   [y,x++]     9199  st([Y,Xpp])                     #24, X++
              20a2 0d00  ld   [y,x]       9200  ld([Y,X])                       #25, peek(register15 + 1)
              20a3 c283  st   [$83]       9201  st([0x83])                      #26, spriteY
              20a4 de00  st   [y,x++]     9202  st([Y,Xpp])                     #27, X++
              20a5 0d00  ld   [y,x]       9203  ld([Y,X])                       #28, peek(register15 + 2)
              20a6 c286  st   [$86]       9204  st([0x86])                      #29, spriteHeight
              20a7 de00  st   [y,x++]     9205  st([Y,Xpp])                     #30, X++
              20a8 0d00  ld   [y,x]       9206  ld([Y,X])                       #31, peek(register15 + 3)
              20a9 c287  st   [$87]       9207  st([0x87])                      #32, spriteData
              20aa 0188  ld   [$88]       9208  ld([0x88])                      #33,
              20ab a001  suba $01         9209  suba(1)                         #34,
              20ac c288  st   [$88]       9210  st([0x88])                      #35, register3--, spriteCount
                                          9211  beq('.sys_drawsprite_38')       #36,
              20ad f0b4  beq  .sys_drawsprite_38
              20ae 0116  ld   [$16]       9212  ld([vPC])                       #37,
              20af a002  suba $02         9213  suba(2)                         #38,
              20b0 c216  st   [$16]       9214  st([vPC])                       #39, restart
              20b1 1403  ld   $03,y       9215  ld(hi('NEXTY'),Y)               #40,
              20b2 e000  jmp  y,$00       9216  jmp(Y,'NEXTY')                  #41,
              20b3 00ea  ld   $ea         9217  ld(-44/2)                       #42,
                                          9218  label('.sys_drawsprite_38')
.sys_drawsprite_38:
              20b4 1403  ld   $03,y       9219  ld(hi('NEXTY'),Y)               #38,
              20b5 e000  jmp  y,$00       9220  jmp(Y,'NEXTY')                  #39,
              20b6 00eb  ld   $eb         9221  ld(-42/2)                       #40,
                                          9222
                                          9223
              20b7 0200  nop              9224  fillers(until=0xc0)
              20b8 0200  nop
              20b9 0200  nop
              * 9 times
                                          9225
                                          9226  # SYS_ScrollVTableY_vX_38, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable
                                          9227  label('SYS_ScrollVTableY_vX_38')
SYS_ScrollVTableY_vX_38:
              20c0 0125  ld   [$25]       9228  ld([sysArgs+1])                 #15,
              20c1 a001  suba $01         9229  suba(1)                         #16,
              20c2 c225  st   [$25]       9230  st([sysArgs+1])                 #17, scanCount--
                                          9231  bge('.sys_scrollvty_20')        #18,
              20c3 f4c8  bge  .sys_scrollvty_20
              20c4 1527  ld   [$27],y     9232  ld([sysArgs+3],Y)               #19, VTable.hi
              20c5 1403  ld   $03,y       9233  ld(hi('NEXTY'),Y)               #20,
              20c6 e000  jmp  y,$00       9234  jmp(Y,'NEXTY')                  #21,
              20c7 00f4  ld   $f4         9235  ld(-24/2)                       #22,
                                          9236  label('.sys_scrollvty_20')
.sys_scrollvty_20:
              20c8 1126  ld   [$26],x     9237  ld([sysArgs+2],X)               #20, VTable.low
              20c9 0d00  ld   [y,x]       9238  ld([Y,X])                       #21, scanline = peek [VTable]
              20ca 8124  adda [$24]       9239  adda([sysArgs+0])               #22, scanline += scrollOffset
              20cb a07f  suba $7f         9240  suba(0x7f)                      #23, scanline -= 0x7f
                                          9241  ble('.sys_scrollvty_26')        #24,
              20cc f8d9  ble  .sys_scrollvty_26
              20cd 807f  adda $7f         9242  adda(0x7F)                      #25, original scanline
              20ce 8088  adda $88         9243  adda(0x88)                      #26, overflow into the range 0x08 to 0x7f
              20cf ce00  st   [y,x]       9244  st([Y,X])                       #27,
              20d0 0126  ld   [$26]       9245  ld([sysArgs+2])                 #28,
              20d1 8002  adda $02         9246  adda(2)                         #29,
              20d2 c226  st   [$26]       9247  st([sysArgs+2])                 #30,
              20d3 0116  ld   [$16]       9248  ld([vPC])                       #31,
              20d4 a002  suba $02         9249  suba(2)                         #32,
              20d5 c216  st   [$16]       9250  st([vPC])                       #33, restart
              20d6 1403  ld   $03,y       9251  ld(hi('NEXTY'),Y)               #34,
              20d7 e000  jmp  y,$00       9252  jmp(Y,'NEXTY')                  #35,
              20d8 00ed  ld   $ed         9253  ld(-38/2)                       #36,
                                          9254
                                          9255  label('.sys_scrollvty_26')
.sys_scrollvty_26:
              20d9 ce00  st   [y,x]       9256  st([Y,X])                       #26,
              20da 0126  ld   [$26]       9257  ld([sysArgs+2])                 #27,
              20db 8002  adda $02         9258  adda(2)                         #28,
              20dc c226  st   [$26]       9259  st([sysArgs+2])                 #29,
              20dd 0116  ld   [$16]       9260  ld([vPC])                       #30,
              20de a002  suba $02         9261  suba(2)                         #31,
              20df c216  st   [$16]       9262  st([vPC])                       #32, restart
              20e0 1403  ld   $03,y       9263  ld(hi('REENTER'),Y)             #33,
              20e1 e0cb  jmp  y,$cb       9264  jmp(Y,'REENTER')                #34,
              20e2 00ed  ld   $ed         9265  ld(-38/2)                       #35,
                                          9266
                                          9267
              20e3 0200  nop              9268  fillers(until=0xff)
              20e4 0200  nop
              20e5 0200  nop
              * 28 times
              20ff 0200  nop              9269  align(0x100, size=0x100)
                                          9270
                                          9271  #-----------------------------------------------------------------------
                                          9272  #       More sys implementations, (0x2100)
                                          9273  #-----------------------------------------------------------------------
                                          9274  # SYS_RestoreSprite_vX_124
                                          9275  label('SYS_RestoreSprite_vX_124')
SYS_RestoreSprite_vX_124:
              2100 0186  ld   [$86]       9276  ld([0x86])                      #15, spriteEnable
                                          9277  bmi('.sys_restoresprite_18')    #16,
              2101 e877  blt  .sys_restoresprite_18
              2102 1587  ld   [$87],y     9278  ld([0x87],Y)                    #17, spriteData
              2103 09a0  ld   [y,$a0]     9279  ld([Y,0xA0])                    #18, spriteOldX
              2104 1200  ld   ac,x        9280  ld(AC,X)                        #19,
              2105 09a1  ld   [y,$a1]     9281  ld([Y,0xA1])                    #20, spriteOldY
              2106 c21d  st   [$1d]       9282  st([vTmp])                      #21,
                                          9283
              2107 09a2  ld   [y,$a2]     9284  ld([Y,0xA2])                    #22, load back0
              2108 151d  ld   [$1d],y     9285  ld([vTmp],Y)                    #23, spriteOldY
              2109 de00  st   [y,x++]     9286  st([Y,Xpp])                     #24, restore back0
                                          9287
              210a 1587  ld   [$87],y     9288  ld([0x87],Y)                    #25, spriteData
              210b 09a4  ld   [y,$a4]     9289  ld([Y,0xA4])                    #26, load back1
              210c 151d  ld   [$1d],y     9290  ld([vTmp],Y)                    #27, spriteOldY
              210d de00  st   [y,x++]     9291  st([Y,Xpp])                     #28, restore back1
                                          9292
              210e 1587  ld   [$87],y     9293  ld([0x87],Y)                    #29, spriteData
              210f 09a6  ld   [y,$a6]     9294  ld([Y,0xA6])                    #30, load back2
              2110 151d  ld   [$1d],y     9295  ld([vTmp],Y)                    #31, spriteOldY
              2111 de00  st   [y,x++]     9296  st([Y,Xpp])                     #32, restore back2
                                          9297
              2112 1587  ld   [$87],y     9298  ld([0x87],Y)                    #33, spriteData
              2113 09a8  ld   [y,$a8]     9299  ld([Y,0xA8])                    #34, load back3
              2114 151d  ld   [$1d],y     9300  ld([vTmp],Y)                    #35, spriteOldY
              2115 de00  st   [y,x++]     9301  st([Y,Xpp])                     #36, restore back3
                                          9302
              2116 1587  ld   [$87],y     9303  ld([0x87],Y)                    #37, spriteData
              2117 09aa  ld   [y,$aa]     9304  ld([Y,0xAA])                    #38, load back4
              2118 151d  ld   [$1d],y     9305  ld([vTmp],Y)                    #39, spriteOldY
              2119 de00  st   [y,x++]     9306  st([Y,Xpp])                     #40, restore back4
                                          9307
              211a 1587  ld   [$87],y     9308  ld([0x87],Y)                    #41, spriteData
              211b 09ac  ld   [y,$ac]     9309  ld([Y,0xAC])                    #42, load back5
              211c 151d  ld   [$1d],y     9310  ld([vTmp],Y)                    #43, spriteOldY
              211d de00  st   [y,x++]     9311  st([Y,Xpp])                     #44, restore back5
                                          9312
              211e 1587  ld   [$87],y     9313  ld([0x87],Y)                    #45, spriteData
              211f 09ae  ld   [y,$ae]     9314  ld([Y,0xAE])                    #46, load back6
              2120 151d  ld   [$1d],y     9315  ld([vTmp],Y)                    #47, spriteOldY
              2121 de00  st   [y,x++]     9316  st([Y,Xpp])                     #48, restore back6
                                          9317
              2122 1587  ld   [$87],y     9318  ld([0x87],Y)                    #49, spriteData
              2123 09b0  ld   [y,$b0]     9319  ld([Y,0xB0])                    #50, load back7
              2124 151d  ld   [$1d],y     9320  ld([vTmp],Y)                    #51, spriteOldY
              2125 de00  st   [y,x++]     9321  st([Y,Xpp])                     #52, restore back7
                                          9322
              2126 1587  ld   [$87],y     9323  ld([0x87],Y)                    #53, spriteData
              2127 09b2  ld   [y,$b2]     9324  ld([Y,0xB2])                    #54, load back8
              2128 151d  ld   [$1d],y     9325  ld([vTmp],Y)                    #55, spriteOldY
              2129 de00  st   [y,x++]     9326  st([Y,Xpp])                     #56, restore back8
                                          9327
              212a 0187  ld   [$87]       9328  ld([0x87])                      #57,
              212b 8001  adda $01         9329  adda(1)                         #58,
              212c d687  st   [$87],y     9330  st([0x87],Y)                    #59, spriteData++
                                          9331
              212d 09a0  ld   [y,$a0]     9332  ld([Y,0xA0])                    #60, spriteOldX
              212e 1200  ld   ac,x        9333  ld(AC,X)                        #61,
              212f 09a1  ld   [y,$a1]     9334  ld([Y,0xA1])                    #62, spriteOldY
              2130 c21d  st   [$1d]       9335  st([vTmp])                      #63,
                                          9336
              2131 09a2  ld   [y,$a2]     9337  ld([Y,0xA2])                    #64, load back0
              2132 151d  ld   [$1d],y     9338  ld([vTmp],Y)                    #65, spriteOldY
              2133 de00  st   [y,x++]     9339  st([Y,Xpp])                     #66, restore back0
                                          9340
              2134 1587  ld   [$87],y     9341  ld([0x87],Y)                    #67, spriteData
              2135 09a4  ld   [y,$a4]     9342  ld([Y,0xA4])                    #68, load back1
              2136 151d  ld   [$1d],y     9343  ld([vTmp],Y)                    #69, spriteOldY
              2137 de00  st   [y,x++]     9344  st([Y,Xpp])                     #70, restore back1
                                          9345
              2138 1587  ld   [$87],y     9346  ld([0x87],Y)                    #71, spriteData
              2139 09a6  ld   [y,$a6]     9347  ld([Y,0xA6])                    #72, load back2
              213a 151d  ld   [$1d],y     9348  ld([vTmp],Y)                    #73, spriteOldY
              213b de00  st   [y,x++]     9349  st([Y,Xpp])                     #74, restore back2
                                          9350
              213c 1587  ld   [$87],y     9351  ld([0x87],Y)                    #75, spriteData
              213d 09a8  ld   [y,$a8]     9352  ld([Y,0xA8])                    #76, load back3
              213e 151d  ld   [$1d],y     9353  ld([vTmp],Y)                    #77, spriteOldY
              213f de00  st   [y,x++]     9354  st([Y,Xpp])                     #78, restore back3
                                          9355
              2140 1587  ld   [$87],y     9356  ld([0x87],Y)                    #79, spriteData
              2141 09aa  ld   [y,$aa]     9357  ld([Y,0xAA])                    #80, load back4
              2142 151d  ld   [$1d],y     9358  ld([vTmp],Y)                    #81, spriteOldY
              2143 de00  st   [y,x++]     9359  st([Y,Xpp])                     #82, restore back4
                                          9360
              2144 1587  ld   [$87],y     9361  ld([0x87],Y)                    #83, spriteData
              2145 09ac  ld   [y,$ac]     9362  ld([Y,0xAC])                    #84, load back5
              2146 151d  ld   [$1d],y     9363  ld([vTmp],Y)                    #85, spriteOldY
              2147 de00  st   [y,x++]     9364  st([Y,Xpp])                     #86, restore back5
                                          9365
              2148 1587  ld   [$87],y     9366  ld([0x87],Y)                    #87, spriteData
              2149 09ae  ld   [y,$ae]     9367  ld([Y,0xAE])                    #88, load back6
              214a 151d  ld   [$1d],y     9368  ld([vTmp],Y)                    #89, spriteOldY
              214b de00  st   [y,x++]     9369  st([Y,Xpp])                     #90, restore back6
                                          9370
              214c 1587  ld   [$87],y     9371  ld([0x87],Y)                    #91, spriteData
              214d 09b0  ld   [y,$b0]     9372  ld([Y,0xB0])                    #92, load back7
              214e 151d  ld   [$1d],y     9373  ld([vTmp],Y)                    #93, spriteOldY
              214f de00  st   [y,x++]     9374  st([Y,Xpp])                     #94, restore back7
                                          9375
              2150 1587  ld   [$87],y     9376  ld([0x87],Y)                    #95, spriteData
              2151 09b2  ld   [y,$b2]     9377  ld([Y,0xB2])                    #96, load back8
              2152 151d  ld   [$1d],y     9378  ld([vTmp],Y)                    #97, spriteOldY
              2153 de00  st   [y,x++]     9379  st([Y,Xpp])                     #98, restore back8
                                          9380
              2154 0186  ld   [$86]       9381  ld([0x86])                      #99,
              2155 a002  suba $02         9382  suba(2)                         #100,
              2156 c286  st   [$86]       9383  st([0x86])                      #101, scanLines -= 2
                                          9384  beq('.sys_restoresprite_104')   #102,
              2157 f061  beq  .sys_restoresprite_104
              2158 0187  ld   [$87]       9385  ld([0x87])                      #103,
              2159 8001  adda $01         9386  adda(1)                         #104,
              215a c287  st   [$87]       9387  st([0x87])                      #105, spriteData++
              215b 0116  ld   [$16]       9388  ld([vPC])                       #106,
              215c a002  suba $02         9389  suba(2)                         #107,
              215d c216  st   [$16]       9390  st([vPC])                       #108, restart
              215e 1403  ld   $03,y       9391  ld(hi('REENTER'),Y)             #109,
              215f e0cb  jmp  y,$cb       9392  jmp(Y,'REENTER')                #110,
              2160 00c7  ld   $c7         9393  ld(-114/2)                      #111,
                                          9394  label('.sys_restoresprite_104')
.sys_restoresprite_104:
              2161 01a0  ld   [$a0]       9395  ld([0xA0])                      #104,
              2162 a004  suba $04         9396  suba(4)                         #105,
              2163 d2a0  st   [$a0],x     9397  st([0xA0],X)                    #106, register15 -= 4
              2164 15a1  ld   [$a1],y     9398  ld([0xA1],Y)                    #107,
              2165 0d00  ld   [y,x]       9399  ld([Y,X])                       #108, peek(register15 + 2)
              2166 c286  st   [$86]       9400  st([0x86])                      #109, spriteHeight
              2167 de00  st   [y,x++]     9401  st([Y,Xpp])                     #110, X++
              2168 0d00  ld   [y,x]       9402  ld([Y,X])                       #111, peek(register15 + 3)
              2169 c287  st   [$87]       9403  st([0x87])                      #112, spriteData
              216a 0188  ld   [$88]       9404  ld([0x88])                      #113,
              216b a001  suba $01         9405  suba(1)                         #114,
              216c c288  st   [$88]       9406  st([0x88])                      #115, numSprites--
                                          9407  beq('.sys_restoresprite_118')   #116,
              216d f074  beq  .sys_restoresprite_118
              216e 0116  ld   [$16]       9408  ld([vPC])                       #117,
              216f a002  suba $02         9409  suba(2)                         #118,
              2170 c216  st   [$16]       9410  st([vPC])                       #119, restart
              2171 1403  ld   $03,y       9411  ld(hi('NEXTY'),Y)               #120,
              2172 e000  jmp  y,$00       9412  jmp(Y,'NEXTY')                  #121,
              2173 00c2  ld   $c2         9413  ld(-124/2)                      #122,
                                          9414  label('.sys_restoresprite_118')
.sys_restoresprite_118:
              2174 1403  ld   $03,y       9415  ld(hi('NEXTY'),Y)               #118,
              2175 e000  jmp  y,$00       9416  jmp(Y,'NEXTY')                  #119,
              2176 00c3  ld   $c3         9417  ld(-122/2)                      #120,
                                          9418
                                          9419  label('.sys_restoresprite_18')
.sys_restoresprite_18:
              2177 01a0  ld   [$a0]       9420  ld([0xA0])                      #18,
              2178 a004  suba $04         9421  suba(4)                         #19,
              2179 d2a0  st   [$a0],x     9422  st([0xA0],X)                    #20, register15 -= 4
              217a 15a1  ld   [$a1],y     9423  ld([0xA1],Y)                    #21,
              217b 0d00  ld   [y,x]       9424  ld([Y,X])                       #22, peek(register15 + 2)
              217c c286  st   [$86]       9425  st([0x86])                      #23, spriteHeight
              217d de00  st   [y,x++]     9426  st([Y,Xpp])                     #24, X++
              217e 0d00  ld   [y,x]       9427  ld([Y,X])                       #25, peek(register15 + 3)
              217f c287  st   [$87]       9428  st([0x87])                      #26, spriteData
              2180 0188  ld   [$88]       9429  ld([0x88])                      #27,
              2181 a001  suba $01         9430  suba(1)                         #28,
              2182 c288  st   [$88]       9431  st([0x88])                      #29, numSprites--
                                          9432  beq('.sys_restoresprite_32')    #30,
              2183 f08a  beq  .sys_restoresprite_32
              2184 0116  ld   [$16]       9433  ld([vPC])                       #31,
              2185 a002  suba $02         9434  suba(2)                         #32,
              2186 c216  st   [$16]       9435  st([vPC])                       #33, restart
              2187 1403  ld   $03,y       9436  ld(hi('NEXTY'),Y)               #34,
              2188 e000  jmp  y,$00       9437  jmp(Y,'NEXTY')                  #35,
              2189 00ed  ld   $ed         9438  ld(-38/2)                       #36,
                                          9439  label('.sys_restoresprite_32')
.sys_restoresprite_32:
              218a 1403  ld   $03,y       9440  ld(hi('NEXTY'),Y)               #32,
              218b e000  jmp  y,$00       9441  jmp(Y,'NEXTY')                  #33,
              218c 00ee  ld   $ee         9442  ld(-36/2)                       #34,
                                          9443
                                          9444
              218d 0200  nop              9445  fillers(until=0xa0)
              218e 0200  nop
              218f 0200  nop
              * 19 times
                                          9446
                                          9447  # SYS_ScrollRectVTableY_vX_44, sysArgs0=scrollOffset, sysArgs1=scanCount, sysArgs2,3=videoTable,
                                          9448  #                              sysArgs4,5=scrollStart,scrollEnd
                                          9449  label('SYS_ScrollRectVTableY_vX_44')
SYS_ScrollRectVTableY_vX_44:
              21a0 0125  ld   [$25]       9450  ld([sysArgs+1])                 #15,
              21a1 a001  suba $01         9451  suba(1)                         #16,
              21a2 c225  st   [$25]       9452  st([sysArgs+1])                 #17, scanCount--
                                          9453  bge('.sys_scrollrectvty_20')    #18,
              21a3 f4a8  bge  .sys_scrollrectvty_20
              21a4 1527  ld   [$27],y     9454  ld([sysArgs+3],Y)               #19, VTable.hi
              21a5 1403  ld   $03,y       9455  ld(hi('NEXTY'),Y)               #20,
              21a6 e000  jmp  y,$00       9456  jmp(Y,'NEXTY')                  #21,
              21a7 00f4  ld   $f4         9457  ld(-24/2)                       #22,
                                          9458  label('.sys_scrollrectvty_20')
.sys_scrollrectvty_20:
              21a8 1126  ld   [$26],x     9459  ld([sysArgs+2],X)               #20, VTable.low
              21a9 0d00  ld   [y,x]       9460  ld([Y,X])                       #21, scanline = peek [VTable]
              21aa 8124  adda [$24]       9461  adda([sysArgs+0])               #22, scanline += scrollOffset
              21ab c21d  st   [$1d]       9462  st([vTmp])                      #23,
              21ac a128  suba [$28]       9463  suba([sysArgs+4])               #24,
                                          9464  bge('.sys_scrollrectvty_27')    #25,
              21ad f4b9  bge  .sys_scrollrectvty_27
              21ae 8129  adda [$29]       9465  adda([sysArgs+5])               #26,
              21af ce00  st   [y,x]       9466  st([Y,X])                       #27,
              21b0 0126  ld   [$26]       9467  ld([sysArgs+2])                 #28,
              21b1 8002  adda $02         9468  adda(2)                         #29,
              21b2 c226  st   [$26]       9469  st([sysArgs+2])                 #30,
              21b3 0116  ld   [$16]       9470  ld([vPC])                       #31,
              21b4 a002  suba $02         9471  suba(2)                         #32,
              21b5 c216  st   [$16]       9472  st([vPC])                       #33, restart
              21b6 1403  ld   $03,y       9473  ld(hi('NEXTY'),Y)               #34,
              21b7 e000  jmp  y,$00       9474  jmp(Y,'NEXTY')                  #35,
              21b8 00ed  ld   $ed         9475  ld(-38/2)                       #36,
                                          9476
                                          9477  label('.sys_scrollrectvty_27')
.sys_scrollrectvty_27:
              21b9 011d  ld   [$1d]       9478  ld([vTmp])                      #27,
              21ba a129  suba [$29]       9479  suba([sysArgs+5])               #28,
                                          9480  blt('.sys_scrollrectvty_31')    #29,
              21bb e8c7  blt  .sys_scrollrectvty_31
              21bc 8128  adda [$28]       9481  adda([sysArgs+4])               #30,
              21bd ce00  st   [y,x]       9482  st([Y,X])                       #31,
              21be 0126  ld   [$26]       9483  ld([sysArgs+2])                 #32,
              21bf 8002  adda $02         9484  adda(2)                         #33,
              21c0 c226  st   [$26]       9485  st([sysArgs+2])                 #34,
              21c1 0116  ld   [$16]       9486  ld([vPC])                       #35,
              21c2 a002  suba $02         9487  suba(2)                         #36,
              21c3 c216  st   [$16]       9488  st([vPC])                       #37, restart
              21c4 1403  ld   $03,y       9489  ld(hi('NEXTY'),Y)               #38,
              21c5 e000  jmp  y,$00       9490  jmp(Y,'NEXTY')                  #39,
              21c6 00eb  ld   $eb         9491  ld(-42/2)                       #40,
                                          9492
                                          9493  label('.sys_scrollrectvty_31')
.sys_scrollrectvty_31:
              21c7 011d  ld   [$1d]       9494  ld([vTmp])                      #31,
              21c8 ce00  st   [y,x]       9495  st([Y,X])                       #32,
              21c9 0126  ld   [$26]       9496  ld([sysArgs+2])                 #33,
              21ca 8002  adda $02         9497  adda(2)                         #34,
              21cb c226  st   [$26]       9498  st([sysArgs+2])                 #35,
              21cc 0116  ld   [$16]       9499  ld([vPC])                       #36,
              21cd a002  suba $02         9500  suba(2)                         #37,
              21ce c216  st   [$16]       9501  st([vPC])                       #38, restart
              21cf 1403  ld   $03,y       9502  ld(hi('REENTER'),Y)             #39,
              21d0 e0cb  jmp  y,$cb       9503  jmp(Y,'REENTER')                #40,
              21d1 00ea  ld   $ea         9504  ld(-44/2)                       #41,
                                          9505
                                          9506
              21d2 0200  nop              9507  fillers(until=0xff)
              21d3 0200  nop
              21d4 0200  nop
              * 45 times
                                          9508
                                          9509  #-----------------------------------------------------------------------
                                          9510  #       PREFX3 instruction page, (0x2200), PREFIX ARG1 OPCODE ARG0
                                          9511  #-----------------------------------------------------------------------
                                          9512  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          9513  #
                                          9514  label('PREFX3_PAGE')
PREFX3_PAGE:  21ff fc03  bra  $2203       9515  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9516  # --- Page boundary ---
                                          9517  align(0x100,size=0x100)
              2200 1517  ld   [$17],y     9518  ld([vPC+1],Y)                   #1
                                          9519
                                          9520  # Fetch next instruction and execute it, but only if there are sufficient
                                          9521  # ticks left for the slowest instruction.
              2201 8115  adda [$15]       9522  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2202 e80b  blt  $220b       9523  blt('EXIT')                     #1 Escape near time out
              2203 c215  st   [$15]       9524  st([vTicks])                    #2
              2204 1116  ld   [$16],x     9525  ld([vPC],X)                     #3 PREFIX+ARG1 is 2 bytes, vPC has been incremented by 2
              2205 0200  nop              9526  nop()                           #4
              2206 c002  st   $02,[$02]   9527  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2207 0d00  ld   [y,x]       9528  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2208 de00  st   [y,x++]     9529  st([Y,Xpp])                     #7 Just X++
              2209 fe00  bra  ac          9530  bra(AC)                         #8 Dispatch
              220a 0d00  ld   [y,x]       9531  ld([Y,X])                       #9 Prefetch operand
                                          9532
                                          9533  # Resync with video driver and transfer control
              220b 800f  adda $0f         9534  adda(maxTicks)                  #3
              220c e40c  bgt  $220c       9535  bgt(pc()&255)                   #4 Resync
              220d a001  suba $01         9536  suba(1)                         #5
              220e 1401  ld   $01,y       9537  ld(hi('vBlankStart'),Y)         #6
              220f e11e  jmp  y,[$1e]     9538  jmp(Y,[vReturn])                #7 To video driver
              2210 0000  ld   $00         9539  ld(0)                           #8 AC should be 0 already. Still..
                                          9540  assert vCPU_overhead ==          9
                                          9541
                                          9542  # pc = 0x2211, Opcode = 0x11
                                          9543  # Instruction STB2: Store vAC.lo into 16bit immediate address, 22 + 20 cycles
                                          9544  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9545  label('STB2')
STB2:         2211 1425  ld   $25,y       9546  ld(hi('stb2#13'),Y)             #10
              2212 e000  jmp  y,$00       9547  jmp(Y,'stb2#13')                #11
              2213 1200  ld   ac,x        9548  ld(AC,X)                        #12
                                          9549
                                          9550  # pc = 0x2214, Opcode = 0x14
                                          9551  # Instruction STW2: Store vAC into 16bit immediate address, 22 + 22 cycles
                                          9552  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          9553  label('STW2')
STW2:         2214 1425  ld   $25,y       9554  ld(hi('stw2#13'),Y)             #10
              2215 e006  jmp  y,$06       9555  jmp(Y,'stw2#13')                #11
              2216 1200  ld   ac,x        9556  ld(AC,X)                        #12
                                          9557
                                          9558  # pc = 0x2217, Opcode = 0x17
                                          9559  # Instruction XCHGB: Exchange two zero byte variables, 22 + 28 cycles
                                          9560  label('XCHGB')
XCHGB:        2217 1425  ld   $25,y       9561  ld(hi('xchgb#13'),Y)            #10
              2218 e00e  jmp  y,$0e       9562  jmp(Y,'xchgb#13')               #11
                                          9563  # dummy                         #12 Overlap
                                          9564  #
                                          9565  # pc = 0x2219, Opcode = 0x19
                                          9566  # Instruction MOVW: Move 16bits from src zero page var to dst zero page var, 22 + 30 cycles
                                          9567  label('MOVW')
MOVW:         2219 1425  ld   $25,y       9568  ld(hi('movw#13'),Y)             #10
              221a e040  jmp  y,$40       9569  jmp(Y,'movw#13')                #11
                                          9570  # dummy                         #12 Overlap
                                          9571  #
                                          9572  # pc = 0x221b, Opcode = 0x1b
                                          9573  # Instruction ADDWI: vAC += imm16, 22 + 28 cycles
                                          9574  label('ADDWI')
ADDWI:        221b 1425  ld   $25,y       9575  ld(hi('addwi#13'),Y)            #10 #12
              221c e050  jmp  y,$50       9576  jmp(Y,'addwi#13')               #11
                                          9577  # dummy                         #12 Overlap
                                          9578  #
                                          9579  # pc = 0x221d, Opcode = 0x1d
                                          9580  # Instruction SUBWI: vAC -= imm16, 22 + 28 cycles
                                          9581  label('SUBWI')
SUBWI:        221d 1425  ld   $25,y       9582  ld(hi('subwi#13'),Y)            #10 #12
              221e e06b  jmp  y,$6b       9583  jmp(Y,'subwi#13')               #11
                                          9584  # dummy                         #12 Overlap
                                          9585  #
                                          9586  # pc = 0x221f, Opcode = 0x1f
                                          9587  # Instruction ANDWI: vAC &= imm16, 22 + 22 cycles
                                          9588  label('ANDWI')
ANDWI:        221f 1425  ld   $25,y       9589  ld(hi('andwi#13'),Y)            #10 #12
              2220 e09d  jmp  y,$9d       9590  jmp(Y,'andwi#13')               #11
                                          9591  # dummy                         #12 Overlap
                                          9592  #
                                          9593  # pc = 0x2221, Opcode = 0x21
                                          9594  # Instruction ORWI: vAC |= imm16, 22 + 22 cycles
                                          9595  label('ORWI')
ORWI:         2221 1425  ld   $25,y       9596  ld(hi('orwi#13'),Y)             #10 #12
              2222 e0a5  jmp  y,$a5       9597  jmp(Y,'orwi#13')                #11
                                          9598  # dummy                         #12 Overlap
                                          9599  #
                                          9600  # pc = 0x2223, Opcode = 0x23
                                          9601  # Instruction XORWI: vAC ^= imm16, 22 + 22 cycles
                                          9602  label('XORWI')
XORWI:        2223 1425  ld   $25,y       9603  ld(hi('xorwi#13'),Y)            #10 #12
              2224 e0ad  jmp  y,$ad       9604  jmp(Y,'xorwi#13')               #11
                                          9605  # dummy                         #12 Overlap
                                          9606  #
                                          9607  # pc = 0x2225, Opcode = 0x25
                                          9608  # Instruction FNT6X8: fontTable = FNT6X8(char), vAC = index(char), 22 + 42 cycles
                                          9609  label('FNT6X8')
FNT6X8:       2225 1435  ld   $35,y       9610  ld(hi('fnt6x8#13'),Y)           #10
              2226 e02a  jmp  y,$2a       9611  jmp(Y,'fnt6x8#13')              #11
              2227 c22a  st   [$2a]       9612  st([sysArgs+6])                 #12 fontChr addr
                                          9613
                                          9614  # pc = 0x2228, Opcode = 0x28
                                          9615  # Instruction FNT4X6: fontTable = FNT4X6(char), vAC = index(char), 22 + 42 cycles
                                          9616  label('FNT4X6')
FNT4X6:       2228 1435  ld   $35,y       9617  ld(hi('fnt4x6#13'),Y)           #10
              2229 e051  jmp  y,$51       9618  jmp(Y,'fnt4x6#13')              #11
                                          9619  # dummy                         #12 Overlap
                                          9620  #
                                          9621  # pc = 0x222a, Opcode = 0x2a
                                          9622  # Instruction CONDII: chooses immediate operand based on condition, (vAC == 0), 22 + 26 cycles
                                          9623  label('CONDII')
CONDII:       222a 1425  ld   $25,y       9624  ld(hi('condii#13'),Y)           #10 #12
              222b e0b5  jmp  y,$b5       9625  jmp(Y,'condii#13')              #11
                                          9626  # dummy                         #12 Overlap
                                          9627  #
                                          9628  # pc = 0x222c, Opcode = 0x2c
                                          9629  # Instruction CONDBB: chooses zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9630  label('CONDBB')
CONDBB:       222c 1425  ld   $25,y       9631  ld(hi('condbb#13'),Y)           #10 #12
              222d e0c2  jmp  y,$c2       9632  jmp(Y,'condbb#13')              #11
              222e 1200  ld   ac,x        9633  ld(AC,X)                        #12
                                          9634
                                          9635  # pc = 0x222f, Opcode = 0x2f
                                          9636  # Instruction CONDIB: chooses between imm and zero page byte var based on condition, (vAC == 0), 22 + 26 cycles
                                          9637  label('CONDIB')
CONDIB:       222f 1425  ld   $25,y       9638  ld(hi('condib#13'),Y)           #10
              2230 e0d1  jmp  y,$d1       9639  jmp(Y,'condib#13')              #11
              2231 c21d  st   [$1d]       9640  st([vTmp])                      #12
                                          9641
                                          9642  # pc = 0x2232, Opcode = 0x32
                                          9643  # Instruction CONDBI: chooses between zero page byte var and imm based on condition, (vAC == 0), 22 + 26 cycles
                                          9644  label('CONDBI')
CONDBI:       2232 1425  ld   $25,y       9645  ld(hi('condbi#13'),Y)           #10
              2233 e0de  jmp  y,$de       9646  jmp(Y,'condbi#13')              #11
                                          9647  # dummy                         #12 Overlap
                                          9648  #
                                          9649  # pc = 0x2234, Opcode = 0x34
                                          9650  # Instruction XCHGW: Exchange two zero word variables, 22 + 46 cycles
                                          9651  label('XCHGW')
XCHGW:        2234 1425  ld   $25,y       9652  ld(hi('xchgw#13'),Y)            #10 #12
              2235 e01c  jmp  y,$1c       9653  jmp(Y,'xchgw#13')               #11
              2236 c22a  st   [$2a]       9654  st([sysArgs+6])                 #12 var1
                                          9655
                                          9656  # pc = 0x2237, Opcode = 0x37
                                          9657  # Instruction OSCPX:
                                          9658  label('OSCPX')
OSCPX:        2237 1428  ld   $28,y       9659  ld(hi('oscpx#13'),Y)            #10
              2238 e0d4  jmp  y,$d4       9660  jmp(Y,'oscpx#13')               #11
                                          9661  # dummy                         #12 Overlap
                                          9662  #
                                          9663  # pc = 0x2239, Opcode = 0x39
                                          9664  # Instruction SWAPB: Swap two bytes in memory, 22 + 46 cycles
                                          9665  label('SWAPB')
SWAPB:        2239 1429  ld   $29,y       9666  ld(hi('swapb#13'),Y)            #10 #12
              223a e093  jmp  y,$93       9667  jmp(Y,'swapb#13')               #11
              223b 1200  ld   ac,x        9668  ld(AC,X)                        #12 var1
                                          9669  #
                                          9670  # pc = 0x223c, Opcode = 0x3c
                                          9671  # Instruction SWAPW: Swap two words in memory, 22 + 58 cycles
                                          9672  label('SWAPW')
SWAPW:        223c 1429  ld   $29,y       9673  ld(hi('swapw#13'),Y)            #10
              223d e0b8  jmp  y,$b8       9674  jmp(Y,'swapw#13')               #11
              223e 1200  ld   ac,x        9675  ld(AC,X)                        #12 var1
                                          9676
                                          9677  # pc = 0x223f, Opcode = 0x3f
                                          9678  # Instruction NEEKA: Peek <n> bytes from [vAC] into [var], 22 + 34*n + 24 cycles
                                          9679  label('NEEKA')
NEEKA:        223f 142a  ld   $2a,y       9680  ld(hi('neeka#13'),Y)            #10
              2240 e06e  jmp  y,$6e       9681  jmp(Y,'neeka#13')               #11
              2241 c22a  st   [$2a]       9682  st([sysArgs+6])                 #12 var
                                          9683
                                          9684  # pc = 0x2242, Opcode = 0x42
                                          9685  # Instruction NOKEA: Poke <n> bytes from [var] into [vAC], 22 + 34*n + 24 cycles
                                          9686  label('NOKEA')
NOKEA:        2242 142a  ld   $2a,y       9687  ld(hi('nokea#13'),Y)            #10
              2243 e08a  jmp  y,$8a       9688  jmp(Y,'nokea#13')               #11
              2244 c22a  st   [$2a]       9689  st([sysArgs+6])                 #12 var
                                          9690
                                          9691  # pc = 0x2245, Opcode = 0x45
                                          9692  # Instruction ADDVL: Add two 32bit zero page vars, dst += src, 22 + 78 cycles
                                          9693  label('ADDVL')
ADDVL:        2245 142b  ld   $2b,y       9694  ld(hi('addvl#13'),Y)            #10
              2246 e02f  jmp  y,$2f       9695  jmp(Y,'addvl#13')               #11
              2247 d22a  st   [$2a],x     9696  st([sysArgs+6],X)               #12 src var
                                          9697
                                          9698  # pc = 0x2248, Opcode = 0x48
                                          9699  # Instruction SUBVL: Subtract two 32bit zero page vars, dst -= src, 22 + 74 cycles
                                          9700  label('SUBVL')
SUBVL:        2248 142b  ld   $2b,y       9701  ld(hi('subvl#13'),Y)            #10
              2249 e079  jmp  y,$79       9702  jmp(Y,'subvl#13')               #11
              224a d22a  st   [$2a],x     9703  st([sysArgs+6],X)               #12 src var
                                          9704
                                          9705  # pc = 0x224c, Opcode = 0x4c
                                          9706  # Instruction ANDVL: And two 32bit zero page vars, dst &= src, 22 + 46 cycles
                                          9707  label('ANDVL')
ANDVL:        224b 142b  ld   $2b,y       9708  ld(hi('andvl#13'),Y)            #10
              224c e0c5  jmp  y,$c5       9709  jmp(Y,'andvl#13')               #11
              224d 1200  ld   ac,x        9710  ld(AC,X)                        #12 src var
                                          9711
                                          9712  # pc = 0x224e, Opcode = 0x4e
                                          9713  # Instruction ORVL: Or two 32bit zero page vars, dst |= src, 22 + 46 cycles
                                          9714  label('ORVL')
ORVL:         224e 142c  ld   $2c,y       9715  ld(hi('orvl#13'),Y)             #10
              224f e000  jmp  y,$00       9716  jmp(Y,'orvl#13')                #11
              2250 1200  ld   ac,x        9717  ld(AC,X)                        #12 src var
                                          9718
                                          9719  # pc = 0x2251, Opcode = 0x51
                                          9720  # Instruction XORVL: Xor two 32bit zero page vars, dst ^= src, 22 + 76 cycles
                                          9721  label('XORVL')
XORVL:        2251 142c  ld   $2c,y       9722  ld(hi('xorvl#13'),Y)            #10
              2252 e024  jmp  y,$24       9723  jmp(Y,'xorvl#13')               #11
              2253 1200  ld   ac,x        9724  ld(AC,X)                        #12 src var
                                          9725
                                          9726  # pc = 0x2254, Opcode = 0x54
                                          9727  # Instruction JEQL: 22 + 40 cycles
                                          9728  label('JEQL')
JEQL:         2254 142d  ld   $2d,y       9729  ld(hi('jeql#13'),Y)             #10
              2255 e000  jmp  y,$00       9730  jmp(Y,'jeql#13')                #11
              2256 c22a  st   [$2a]       9731  st([sysArgs+6])                 #12 jump.hi
                                          9732
                                          9733  # pc = 0x2257, Opcode = 0x57
                                          9734  # Instruction JNEL: 22 + 40 cycles
                                          9735  label('JNEL')
JNEL:         2257 142d  ld   $2d,y       9736  ld(hi('jnel#13'),Y)             #10
              2258 e022  jmp  y,$22       9737  jmp(Y,'jnel#13')                #11
              2259 c22a  st   [$2a]       9738  st([sysArgs+6])                 #12 jump.hi
                                          9739
                                          9740  # pc = 0x225a, Opcode = 0x5a
                                          9741  # Instruction JLTL: 22 + 26 cycles
                                          9742  label('JLTL')
JLTL:         225a 142d  ld   $2d,y       9743  ld(hi('jltl#13'),Y)             #10
              225b e044  jmp  y,$44       9744  jmp(Y,'jltl#13')                #11
              225c c22a  st   [$2a]       9745  st([sysArgs+6])                 #12 jump.hi
                                          9746
                                          9747  # pc = 0x225d, Opcode = 0x5d
                                          9748  # Instruction JGTL: 22 + 42 cycles
                                          9749  label('JGTL')
JGTL:         225d 142d  ld   $2d,y       9750  ld(hi('jgtl#13'),Y)             #10
              225e e053  jmp  y,$53       9751  jmp(Y,'jgtl#13')                #11
              225f c22a  st   [$2a]       9752  st([sysArgs+6])                 #12 jump.hi
                                          9753
                                          9754  # pc = 0x2260, Opcode = 0x60
                                          9755  # Instruction JLEL: 22 + 42 cycles
                                          9756  label('JLEL')
JLEL:         2260 142d  ld   $2d,y       9757  ld(hi('jlel#13'),Y)             #10
              2261 e07a  jmp  y,$7a       9758  jmp(Y,'jlel#13')                #11
              2262 c22a  st   [$2a]       9759  st([sysArgs+6])                 #12 jump.hi
                                          9760
                                          9761  # pc = 0x2263, Opcode = 0x63
                                          9762  # Instruction JGEL: 22 + 26 cycles
                                          9763  label('JGEL')
JGEL:         2263 142d  ld   $2d,y       9764  ld(hi('jgel#13'),Y)             #10
              2264 e0a5  jmp  y,$a5       9765  jmp(Y,'jgel#13')                #11
              2265 c22a  st   [$2a]       9766  st([sysArgs+6])                 #12 jump.hi
                                          9767
                                          9768  # pc = 0x2266, Opcode = 0x66
                                          9769  # Instruction ANDBI: And immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9770  label('ANDBI')
ANDBI:        2266 142e  ld   $2e,y       9771  ld(hi('andbi#13'),Y)            #10
              2267 e000  jmp  y,$00       9772  jmp(Y,'andbi#13')               #11
              2268 1200  ld   ac,x        9773  ld(AC,X)                        #12 address of var
                                          9774
                                          9775  # pc = 0x2269, Opcode = 0x69
                                          9776  # Instruction ORBI: OR immediate byte with byte var, result in byte var, 22 + 20 cycles
                                          9777  label('ORBI')
ORBI:         2269 142e  ld   $2e,y       9778  ld(hi('orbi#13'),Y)             #10
              226a e006  jmp  y,$06       9779  jmp(Y,'orbi#13')                #11
              226b 1200  ld   ac,x        9780  ld(AC,X)                        #12 address of var
                                          9781
                                          9782  # pc = 0x226c, Opcode = 0x6c
                                          9783  # Instruction XORBI: var.lo ^= imm, 22 + 20 cycles
                                          9784  label('XORBI')
XORBI:        226c 142e  ld   $2e,y       9785  ld(hi('xorbi#13'),Y)            #10
              226d e00c  jmp  y,$0c       9786  jmp(Y,'xorbi#13')               #11
              226e 1200  ld   ac,x        9787  ld(AC,X)                        #12 address of var
                                          9788
                                          9789  # pc = 0x226f, Opcode = 0x6f
                                          9790  # Instruction ANDBK: vAC.hi = 0, vAC.lo = var.lo & imm, 22 + 22 cycles
                                          9791  label('ANDBK')
ANDBK:        226f 142e  ld   $2e,y       9792  ld(hi('andbk#13'),Y)            #10
              2270 e012  jmp  y,$12       9793  jmp(Y,'andbk#13')               #11
              2271 1200  ld   ac,x        9794  ld(AC,X)                        #12 address of var
                                          9795
                                          9796  # pc = 0x2272, Opcode = 0x72
                                          9797  # Instruction ORBK: vAC.lo = var.lo | imm, 22 + 22 cycles
                                          9798  label('ORBK')
ORBK:         2272 142e  ld   $2e,y       9799  ld(hi('orbk#13'),Y)             #10
              2273 e01a  jmp  y,$1a       9800  jmp(Y,'orbk#13')                #11
              2274 1200  ld   ac,x        9801  ld(AC,X)                        #12 address of var
                                          9802
                                          9803  # pc = 0x2275, Opcode = 0x75
                                          9804  # Instruction XORBK: vAC.lo = var.lo ^ imm, 22 + 22 cycles
                                          9805  label('XORBK')
XORBK:        2275 142e  ld   $2e,y       9806  ld(hi('xorbk#13'),Y)            #10
              2276 e022  jmp  y,$22       9807  jmp(Y,'xorbk#13')               #11
              2277 1200  ld   ac,x        9808  ld(AC,X)                        #12 address of var
                                          9809
                                          9810  # pc = 0x2278, Opcode = 0x78
                                          9811  # Instruction JMPI, (lb3361): Jump to 16bit address, preserve vLR, 22 + 20 cycles
                                          9812  label('JMPI')
JMPI:         2278 1428  ld   $28,y       9813  ld(hi('jmpi#13'),Y)             #10
              2279 e05e  jmp  y,$5e       9814  jmp(Y,'jmpi#13')                #11
              227a a002  suba $02         9815  suba(2)                         #12
                                          9816
                                          9817  # pc = 0x227b, Opcode = 0x7b
                                          9818  # Instruction SUBIW: vAC = imm16 - vAC, 22 + 28 cycles
                                          9819  label('SUBIW')
SUBIW:        227b 1425  ld   $25,y       9820  ld(hi('subiw#13'),Y)            #10 #12
              227c e083  jmp  y,$83       9821  jmp(Y,'subiw#13')               #11
                                          9822  # dummy                         #12 Overlap
                                          9823  #
                                          9824  # pc = 0x227d, Opcode = 0x7d
                                          9825  # Instruction VADDBW: dst.0 += src.0, dst.1 += src.1, 22 + 30 cycles
                                          9826  label('VADDBW')
VADDBW:       227d 142e  ld   $2e,y       9827  ld(hi('vaddbw#13'),Y)           #10 overlap
              227e e02a  jmp  y,$2a       9828  jmp(Y,'vaddbw#13')              #11
              227f 1200  ld   ac,x        9829  ld(AC,X)                        #12 src var
                                          9830
                                          9831  # pc = 0x2280, Opcode = 0x80
                                          9832  # Instruction VSUBBW: dst.0 -= src.0, dst.1 -= src.1, 22 + 30 cycles
                                          9833  label('VSUBBW')
VSUBBW:       2280 142e  ld   $2e,y       9834  ld(hi('vsubbw#13'),Y)           #10
              2281 e03a  jmp  y,$3a       9835  jmp(Y,'vsubbw#13')              #11
              2282 1200  ld   ac,x        9836  ld(AC,X)                        #12 src var
                                          9837
                                          9838  # pc = 0x2283, Opcode = 0x83
                                          9839  # Instruction VADDBL: dst.0 += src.0, dst.1 += src.1, dst.2 += src.2, dst.3 += src.3, 22 + 46 cycles
                                          9840  label('VADDBL')
VADDBL:       2283 1434  ld   $34,y       9841  ld(hi('vaddbl#13'),Y)           #10
              2284 e0aa  jmp  y,$aa       9842  jmp(Y,'vaddbl#13')              #11
              2285 1200  ld   ac,x        9843  ld(AC,X)                        #12 src var
                                          9844
                                          9845  # pc = 0x2286, Opcode = 0x86
                                          9846  # Instruction VSUBBL: dst.0 -= src.0, dst.1 -= src.1, dst.2 -= src.2, dst.3 -= src.3, 22 + 46 cycles
                                          9847  label('VSUBBL')
VSUBBL:       2286 1434  ld   $34,y       9848  ld(hi('vsubbl#13'),Y)           #10
              2287 e0cf  jmp  y,$cf       9849  jmp(Y,'vsubbl#13')              #11
              2288 1200  ld   ac,x        9850  ld(AC,X)                        #12 src var
                                          9851
                                          9852  # pc = 0x2289 Opcode = 0x89
                                          9853  # Instruction CMPII: if vAC < imm0 vAC=-1, if vAC >= imm1 vAC=1, else vAC=0, 22 + 28 cycles
                                          9854  label('CMPII')
CMPII:        2289 1436  ld   $36,y       9855  ld(hi('cmpii#13'),Y)            #10
              228a e00e  jmp  y,$0e       9856  jmp(Y,'cmpii#13')               #11
                                          9857  # dummy                         #12 Overlap
                                          9858  #
                                          9859  # pc = 0x228b, Opcode = 0x8b
                                          9860  # Instruction IMIDI: init midi, var midiStream, var midiDelay, 22 + 40 cycles
                                          9861  label('IMIDI')
IMIDI:        228b 1431  ld   $31,y       9862  ld(hi('imidi#13'),Y)            #10
              228c e048  jmp  y,$48       9863  jmp(Y,'imidi#13')               #11
              228d d22a  st   [$2a],x     9864  st([sysArgs+6],X)               #12 midi stream
                                          9865
                                          9866  # pc = 0x228e, Opcode = 0x8e
                                          9867  # Instruction PMIDI: play midi without volume, var midiStream, var midiDelay, 22 + 88 cycles
                                          9868  label('PMIDI')
PMIDI:        228e 1431  ld   $31,y       9869  ld(hi('pmidi#13'),Y)            #10
              228f e06e  jmp  y,$6e       9870  jmp(Y,'pmidi#13')               #11
              2290 d22a  st   [$2a],x     9871  st([sysArgs+6],X)               #12 midi stream
                                          9872
                                          9873  # pc = 0x2291, Opcode = 0x91
                                          9874  # Instruction PMIDIV: play midi with volume, var midiStream, var midiDelay, 22 + 106 cycles
                                          9875  label('PMIDIV')
PMIDIV:       2291 1437  ld   $37,y       9876  ld(hi('pmidiv#13'),Y)           #10
              2292 e000  jmp  y,$00       9877  jmp(Y,'pmidiv#13')              #11
              2293 d22a  st   [$2a],x     9878  st([sysArgs+6],X)               #12 midi stream
                                          9879
                                          9880  # pc = 0x2294, Opcode = 0x94
                                          9881  # Instruction MERGE4: merge four arrays into one, 22 + 126 cycles
                                          9882  label('MERGE4')
MERGE4:       2294 1439  ld   $39,y       9883  ld(hi('merge4#13'),Y)           #10
              2295 e000  jmp  y,$00       9884  jmp(Y,'merge4#13')              #11
              2296 c22a  st   [$2a]       9885  st([sysArgs+6])                 #12 output.lo
                                          9886
                                          9887  # SYS calls and instruction implementations rely on these
              2297 0200  nop              9888  fillers(until=0xca)
              2298 0200  nop
              2299 0200  nop
              * 51 times
              22ca 00f2  ld   $f2         9889  ld(-28/2)                       #25
              22cb fc01  bra  $2201       9890  bra('NEXT')                     #26 Return from SYS calls
              22cc 1517  ld   [$17],y     9891  ld([vPC+1],Y)                   #27
                                          9892
                                          9893  # pc = 0x22cd, Opcode = 0xcd
                                          9894  # Instruction MOVL (lb3361): Move long variable. 22+40 cycles
                                          9895  label('MOVL')
MOVL:         22cd 1432  ld   $32,y       9896  ld(hi('movl#13'),Y)             #10
              22ce e000  jmp  y,$00       9897  jmp(Y,'movl#13')                #11
              22cf c22a  st   [$2a]       9898  st([sysArgs+6])                 #12
                                          9899
                                          9900  # pc = 0x22d0, Opcode = 0xd0
                                          9901  # Instruction MOVF (lb3361): Move float variable. 22+46 cycles
                                          9902  label('MOVF')
MOVF:         22d0 1432  ld   $32,y       9903  ld(hi('movf#13'),Y)             #10
              22d1 e01f  jmp  y,$1f       9904  jmp(Y,'movf#13')                #11
              22d2 c22a  st   [$2a]       9905  st([sysArgs+6])                 #12
                                          9906
                                          9907  # pc = 0x22d3 Opcode = 0xd3
                                          9908  # Instruction NROL (lb3361): Left rotate n bytes. 22+18+n*18
                                          9909  # Shift vACsign<-bit(8n-1)<-...<-bit(0)<-vACsign. Destroys vAC
                                          9910  # Encoding: [0xc7,v,0xd3,v+n]
                                          9911  label('NROL')
NROL:         22d3 1434  ld   $34,y       9912  ld(hi('nrol#13'),Y)             #10
              22d4 e010  jmp  y,$10       9913  jmp(Y,'nrol#13')                #11
              22d5 c22a  st   [$2a]       9914  st([sysArgs+6])                 #12
                                          9915
                                          9916  # pc = 0x22d6 Opcode = 0xd6
                                          9917  # Instruction NROR (lb3361): Right rotate n bytes. 22+26+n*32
                                          9918  # Shift vACsign->bit(8n-1)->...->bit(0)->vACsign. Destroys vAC
                                          9919  # Encoding: [0xc7,v+n,0xd6,v]
                                          9920  label('NROR')
NROR:         22d6 1434  ld   $34,y       9921  ld(hi('nror#13'),Y)             #10
              22d7 e034  jmp  y,$34       9922  jmp(Y,'nror#13')                #11
              22d8 c22a  st   [$2a]       9923  st([sysArgs+6])                 #12
                                          9924
                                          9925
                                          9926
              22d9 0200  nop              9927  fillers(until=0xff)
              22da 0200  nop
              22db 0200  nop
              * 38 times
                                          9928
                                          9929  #-----------------------------------------------------------------------
                                          9930  #       PREFX2 instruction page, (0x2300), PREFIX ARG0 OPCODE
                                          9931  #-----------------------------------------------------------------------
                                          9932  #
                                          9933  label('PREFX2_PAGE')
PREFX2_PAGE:  22ff fc03  bra  $2303       9934  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          9935  # --- Page boundary ---
                                          9936  align(0x100,size=0x100)
              2300 1517  ld   [$17],y     9937  ld([vPC+1],Y)                   #1
                                          9938
                                          9939  # Fetch next instruction and execute it, but only if there are sufficient
                                          9940  # ticks left for the slowest instruction.
              2301 8115  adda [$15]       9941  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2302 e80b  blt  $230b       9942  blt('EXIT')                     #1 Escape near time out
              2303 c215  st   [$15]       9943  st([vTicks])                    #2
              2304 0116  ld   [$16]       9944  ld([vPC])                       #3 PREFIX+ARG0 is 2 bytes, vPC has been incremented by 1
              2305 9001  adda $01,x       9945  adda(1,X)                       #4 point to opcode
              2306 c002  st   $02,[$02]   9946  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2307 0d00  ld   [y,x]       9947  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2308 de00  st   [y,x++]     9948  st([Y,Xpp])                     #7 Just X++
              2309 fe00  bra  ac          9949  bra(AC)                         #8 Dispatch
              230a 012b  ld   [$2b]       9950  ld([sysArgs+7])                 #9 Operand
                                          9951
                                          9952  # Resync with video driver and transfer control
              230b 800f  adda $0f         9953  adda(maxTicks)                  #3
              230c e40c  bgt  $230c       9954  bgt(pc()&255)                   #4 Resync
              230d a001  suba $01         9955  suba(1)                         #5
              230e 1401  ld   $01,y       9956  ld(hi('vBlankStart'),Y)         #6
              230f e11e  jmp  y,[$1e]     9957  jmp(Y,[vReturn])                #7 To video driver
              2310 0000  ld   $00         9958  ld(0)                           #8 AC should be 0 already. Still..
                                          9959  assert vCPU_overhead ==          9
                                          9960
                                          9961  # pc = 0x2311, Opcode = 0x11
                                          9962  # Instruction LSLN: Logical shift left vAC, (16bit), n times, 22 + 30*n + 20 cycles
                                          9963  label('LSLN')
LSLN:         2311 1426  ld   $26,y       9964  ld(hi('lsln#13'),Y)             #10
              2312 e000  jmp  y,$00       9965  jmp(Y,'lsln#13')                #11
                                          9966  # dummy                         #12 Overlap
                                          9967  #
                                          9968  # pc = 0x2313, Opcode = 0x13
                                          9969  # Instruction SEXT: Sign extend vAC based on a variable mask, 22 + 24 cycles
                                          9970  label('SEXT')
SEXT:         2313 1426  ld   $26,y       9971  ld(hi('sext#13'),Y)             #10 #12
              2314 e013  jmp  y,$13       9972  jmp(Y,'sext#13')                #11
                                          9973  # dummy                         #12 Overlap
                                          9974  #
                                          9975  # pc = 0x2315, Opcode = 0x15
                                          9976  # Instruction NOTW: Boolean invert var, 22 + 26 cycles
                                          9977  label('NOTW')
NOTW:         2315 1426  ld   $26,y       9978  ld(hi('notw#13'),Y)             #10 #12
              2316 e020  jmp  y,$20       9979  jmp(Y,'notw#13')                #11
                                          9980  # dummy                         #12 Overlap
                                          9981  #
                                          9982  # pc = 0x2317, Opcode = 0x17
                                          9983  # Instruction NEGW: Arithmetic negate var, 22 + 28 cycles
                                          9984  label('NEGW')
NEGW:         2317 1426  ld   $26,y       9985  ld(hi('negw#13'),Y)             #10 #12
              2318 e02b  jmp  y,$2b       9986  jmp(Y,'negw#13')                #11
                                          9987  # dummy                         #12 Overlap
                                          9988  #
                                          9989  # pc = 0x2319, Opcode = 0x19
                                          9990  # Instruction ANDBA: vAC &= var.lo, 22 + 22 cycles
                                          9991  label('ANDBA')
ANDBA:        2319 1426  ld   $26,y       9992  ld(hi('andba#13'),Y)            #10 #12
              231a e03f  jmp  y,$3f       9993  jmp(Y,'andba#13')               #11
              231b 1200  ld   ac,x        9994  ld(AC,X)                        #12
                                          9995
                                          9996  # pc = 0x231c, Opcode = 0x1c
                                          9997  # Instruction ORBA: vAC |= var.lo, 22 + 20 cycles
                                          9998  label('ORBA')
ORBA:         231c 1426  ld   $26,y       9999  ld(hi('orba#13'),Y)             #10
              231d e047  jmp  y,$47       10000  jmp(Y,'orba#13')                #11
              231e 1200  ld   ac,x        10001  ld(AC,X)                        #12
                                          10002
                                          10003  # pc = 0x231f, Opcode = 0x1f
                                          10004  # Instruction XORBA: vAC ^= var.lo, 22 + 20 cycles
                                          10005  label('XORBA')
XORBA:        231f 1426  ld   $26,y       10006  ld(hi('xorba#13'),Y)            #10
              2320 e04d  jmp  y,$4d       10007  jmp(Y,'xorba#13')               #11
              2321 1200  ld   ac,x        10008  ld(AC,X)                        #12
                                          10009
                                          10010  # pc = 0x2322, Opcode = 0x22
                                          10011  # Instruction FREQM: [(((chan & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [0..3], 22 + 26 cycles
                                          10012  label('FREQM')
FREQM:        2322 1426  ld   $26,y       10013  ld(hi('freqm#13'),Y)            #10
              2323 e053  jmp  y,$53       10014  jmp(Y,'freqm#13')               #11
                                          10015  # dummy                         #12 Overlap
                                          10016  #
                                          10017  # pc = 0x2324, Opcode = 0x24
                                          10018  # Instruction FREQA: [((((chan - 1) & 3) + 1) <<8) | 0x00FC] = vAC, chan var = [1..4], 22 + 26 cycles
                                          10019  label('FREQA')
FREQA:        2324 1426  ld   $26,y       10020  ld(hi('freqa#13'),Y)            #10 #12
              2325 e05f  jmp  y,$5f       10021  jmp(Y,'freqa#13')               #11
              2326 1200  ld   ac,x        10022  ld(AC,X)                        #12
                                          10023
                                          10024  # pc = 0x2327, Opcode = 0x27
                                          10025  # Instruction FREQI: [(((imm & 3) + 1) <<8) | 0x00FC] = vAC, chan imm = [0..3], 22 + 24 cycles
                                          10026  label('FREQI')
FREQI:        2327 1426  ld   $26,y       10027  ld(hi('freqi#13'),Y)            #10
              2328 e06b  jmp  y,$6b       10028  jmp(Y,'freqi#13')               #11
                                          10029  # dummy                         #12 Overlap
                                          10030  #
                                          10031  # pc = 0x2329, Opcode = 0x29
                                          10032  # Instruction VOLM: [(((chan & 3) + 1) <<8) | 0x00FA] = vAC.low, chan var = [0..3], 22 + 24 cycles
                                          10033  label('VOLM')
VOLM:         2329 1426  ld   $26,y       10034  ld(hi('volm#13'),Y)             #10 #12
              232a e075  jmp  y,$75       10035  jmp(Y,'volm#13')                #11
              232b 1200  ld   ac,x        10036  ld(AC,X)                        #12
                                          10037
                                          10038  # pc = 0x232c, Opcode = 0x2c
                                          10039  # Instruction VOLA: [((((chan - 1) & 3) + 1) <<8) | 0x00FA] = 63 - vAC.low + 64, chan var = [1..4],  22 + 26 cycles
                                          10040  label('VOLA')
VOLA:         232c 1426  ld   $26,y       10041  ld(hi('vola#13'),Y)             #10
              232d e07e  jmp  y,$7e       10042  jmp(Y,'vola#13')                #11
              232e 1200  ld   ac,x        10043  ld(AC,X)                        #12
                                          10044
                                          10045  # pc = 0x232f, Opcode = 0x2f
                                          10046  # Instruction MODA: [((((chan - 1) & 3) + 1) <<8) | 0x00FB] = vAC.low, chan var = [1..4], 22 + 24 cycles
                                          10047  label('MODA')
MODA:         232f 1426  ld   $26,y       10048  ld(hi('moda#13'),Y)             #10
              2330 e08a  jmp  y,$8a       10049  jmp(Y,'moda#13')                #11
              2331 1200  ld   ac,x        10050  ld(AC,X)                        #12
                                          10051
                                          10052  # pc = 0x2332, Opcode = 0x32
                                          10053  # Instruction MODI: [(((imm & 3) + 1) <<8) | 0x00FA] = (vAC.lo <<8) | 0, chan imm = [0..3], 22 + 24 cycles
                                          10054  label('MODI')
MODI:         2332 1426  ld   $26,y       10055  ld(hi('modi#13'),Y)             #10
              2333 e094  jmp  y,$94       10056  jmp(Y,'modi#13')                #11
                                          10057  # dummy                         #12 Overlap
                                          10058  #
                                          10059  # pc = 0x2334, Opcode = 0x34
                                          10060  # Instruction SMPCPY:
                                          10061  label('SMPCPY')
SMPCPY:       2334 1426  ld   $26,y       10062  ld(hi('smpcpy#13'),Y)           #10 #12
              2335 e0a5  jmp  y,$a5       10063  jmp(Y,'smpcpy#13')              #11
              2336 1200  ld   ac,x        10064  ld(AC,X)                        #12
                                          10065
                                          10066  # pc = 0x2337, Opcode = 0x37
                                          10067  # Instruction CMPHS: Adjust high byte for signed compare (vACH=XXX), 22 + 26 cycles
                                          10068  label('CMPHS')
CMPHS:        2337 1426  ld   $26,y       10069  ld(hi('cmphs#13'),Y)            #10
              2338 e0e0  jmp  y,$e0       10070  jmp(Y,'cmphs#13')               #11
              2339 1200  ld   ac,x        10071  ld(AC,X)                        #12
                                          10072
                                          10073  # pc = 0x233a, Opcode = 0x3a
                                          10074  # Instruction CMPHU: Adjust high byte for unsigned compare (vACH=XXX), 22 + 26 cycles
                                          10075  label('CMPHU')
CMPHU:        233a 1426  ld   $26,y       10076  ld(hi('cmphu#13'),Y)            #10
              233b e0ed  jmp  y,$ed       10077  jmp(Y,'cmphu#13')               #11
              233c 1200  ld   ac,x        10078  ld(AC,X)                        #12
                                          10079
                                          10080  # pc = 0x233d, Opcode = 0x3d
                                          10081  # Instruction LEEKA:
                                          10082  label('LEEKA')
LEEKA:        233d 1429  ld   $29,y       10083  ld(hi('leeka#13'),Y)            #10
              233e e000  jmp  y,$00       10084  jmp(Y,'leeka#13')               #11
                                          10085  # dummy                         #12 Overlap
                                          10086  #
                                          10087  # pc = 0x233f, Opcode = 0x3f
                                          10088  # Instruction LOKEA:
                                          10089  label('LOKEA')
LOKEA:        233f 1429  ld   $29,y       10090  ld(hi('lokea#13'),Y)            #10 #12
              2340 e023  jmp  y,$23       10091  jmp(Y,'lokea#13')               #11
                                          10092  # dummy                         #12 Overlap
                                          10093  #
                                          10094  # pc = 0x2341, Opcode = 0x41
                                          10095  # Instruction FEEKA:
                                          10096  label('FEEKA')
FEEKA:        2341 1429  ld   $29,y       10097  ld(hi('feeka#13'),Y)            #10 #12
              2342 e045  jmp  y,$45       10098  jmp(Y,'feeka#13')               #11
                                          10099  # dummy                         #12 Overlap
                                          10100  #
                                          10101  # pc = 0x2343, Opcode = 0x43
                                          10102  # Instruction FOKEA:
                                          10103  label('FOKEA')
FOKEA:        2343 1429  ld   $29,y       10104  ld(hi('fokea#13'),Y)            #10 #12
              2344 e06c  jmp  y,$6c       10105  jmp(Y,'fokea#13')               #11
                                          10106  # dummy                         #12 Overlap
                                          10107  #
                                          10108  # pc = 0x2345, Opcode = 0x45
                                          10109  # Instruction MEEKA: Peek 8 bytes from [vAC] to [var], 22 + 64 cycles
                                          10110  label('MEEKA')
MEEKA:        2345 142a  ld   $2a,y       10111  ld(hi('meeka#13'),Y)            #10 #12
              2346 e000  jmp  y,$00       10112  jmp(Y,'meeka#13')               #11
                                          10113  # dummy                         #12 Overlap
                                          10114  #
                                          10115  # pc = 0x2347, Opcode = 0x47
                                          10116  # Instruction MOKEA: Poke 8 bytes from [var] to [vAC], 22 + 64 cycles
                                          10117  label('MOKEA')
MOKEA:        2347 142a  ld   $2a,y       10118  ld(hi('mokea#13'),Y)            #10 #12
              2348 e037  jmp  y,$37       10119  jmp(Y,'mokea#13')               #11
                                          10120  # dummy                         #12 Overlap
                                          10121  #
                                          10122  # pc = 0x2349, Opcode = 0x49
                                          10123  # Instruction LSRVL: Logical shift right var long, 22 + 104 cycles
                                          10124  label('LSRVL')
LSRVL:        2349 142c  ld   $2c,y       10125  ld(hi('lsrvl#13'),Y)            #10 #12
              234a e06a  jmp  y,$6a       10126  jmp(Y,'lsrvl#13')               #11
              234b 1200  ld   ac,x        10127  ld(AC,X)                        #12
                                          10128
                                          10129  # pc = 0x234c, Opcode = 0x4c
                                          10130  # Instruction LSLVL: Logical shift left var long, 22 + 56 cycles
                                          10131  label('LSLVL')
LSLVL:        234c 142c  ld   $2c,y       10132  ld(hi('lslvl#13'),Y)            #10
              234d e0af  jmp  y,$af       10133  jmp(Y,'lslvl#13')               #11
              234e 1200  ld   ac,x        10134  ld(AC,X)                        #12
                                          10135
                                          10136  # pc = 0x234f, Opcode = 0x4f
                                          10137  # Instruction INCL: Increment var long, 22 + 36 cycles
                                          10138  label('INCL')
INCL:         234f 1434  ld   $34,y       10139  ld(hi('incl#13'),Y)             #10
              2350 e047  jmp  y,$47       10140  jmp(Y,'incl#13')                #11
              2351 1200  ld   ac,x        10141  ld(AC,X)                        #12
                                          10142
                                          10143  # pc = 0x2352, Opcode = 0x52
                                          10144  # Instruction DECL: Decrement var long, 22 + 40 cycles
                                          10145  label('DECL')
DECL:         2352 1434  ld   $34,y       10146  ld(hi('decl#13'),Y)             #10
              2353 e06b  jmp  y,$6b       10147  jmp(Y,'decl#13')                #11
                                          10148  # dummy                         #12 Overlap
                                          10149  #
                                          10150  # pc = 0x2354 Opcode = 0x54
                                          10151  # Instruction STPX: [vAC.xy] = var, scanline table y taken into account, 22 + 28 cycles
                                          10152  label('STPX')
STPX:         2354 1429  ld   $29,y       10153  ld(hi('stpx#13'),Y)             #10 #12
              2355 e0e9  jmp  y,$e9       10154  jmp(Y,'stpx#13')                #11
              2356 1200  ld   ac,x        10155  ld(AC,X)                        #12
                                          10156
                                          10157  # pc = 0x2357, Opcode = 0x57
                                          10158  # Instruction PRN4X6: print 4x6 font char to screen from var, 22 + 102 cycles
                                          10159  # sysArgs01 = FG/BG COLOUR, sysArgs2 = 3, (LUP count), var = textFont address, vAC = dest addr
                                          10160  label('PRN4X6')
PRN4X6:       2357 1435  ld   $35,y       10161  ld(hi('prn4x6#13'),Y)           #10 #12
              2358 e078  jmp  y,$78       10162  jmp(Y,'prn4x6#13')              #11
                                          10163  # dummy                         #12 Overlap
                                          10164  #
                                          10165  # pc = 0x2359, Opcode = 0x59
                                          10166  # Instruction VTBL: var = VTBL(vAC), 22 + 28 cycles
                                          10167  label('VTBL')
VTBL:         2359 1436  ld   $36,y       10168  ld(hi('vtbl#13'),Y)             #10 #12
              235a e000  jmp  y,$00       10169  jmp(Y,'vtbl#13')                #11
              235b 0119  ld   [$19]       10170  ld([vAC+1])                     #12 y
                                          10171
                                          10172  # pc = 0x235c, Opcode = 0x5c
                                          10173  # Instruction OSCZ: [(((imm & 3) + 1) <<8) | 0x00FE] = 0, chan imm = [0..3], 22 + 22 cycles
                                          10174  label('OSCZ')
OSCZ:         235c 1426  ld   $26,y       10175  ld(hi('oscz#13'),Y)             #10 #12
              235d e09d  jmp  y,$9d       10176  jmp(Y,'oscz#13')                #11
                                          10177  # dummy                         #12 Overlap
                                          10178  #
                                          10179  # pc = 0x235e, Opcode = 0x5e
                                          10180  # Instruction LSL8: vAC.hi = var.lo, vAC.lo = 0, 22 + 22 cycles
                                          10181  label('LSL8')
LSL8:         235e 1427  ld   $27,y       10182  ld(hi('lsl8#13'),Y)             #10 #12
              235f e0d7  jmp  y,$d7       10183  jmp(Y,'lsl8#13')                #11
                                          10184  # dummy                         #12 Overlap
                                          10185  #
                                          10186  # pc = 0x2360, Opcode = 0x60
                                          10187  # Instruction ADDBA: vAC += var.lo, 22 + 28 cycles
                                          10188  label('ADDBA')
ADDBA:        2360 1417  ld   $17,y       10189  ld(hi('addba#13'),Y)            #10 #12
              2361 e086  jmp  y,$86       10190  jmp(Y,'addba#13')               #11
                                          10191  # dummy                         #12 Overlap
                                          10192  #
                                          10193  # pc = 0x2362, Opcode = 0x62
                                          10194  # Instruction SUBBA: vAC -= var.lo, 22 + 28 cycles
                                          10195  label('SUBBA')
SUBBA:        2362 1417  ld   $17,y       10196  ld(hi('subba#13'),Y)            #10 #12
              2363 e09c  jmp  y,$9c       10197  jmp(Y,'subba#13')               #11
                                          10198  # dummy                         #12 Overlap
                                          10199  #
                                          10200  # pc = 0x2364, Opcode = 0x64
                                          10201  # Instruction NOTB: var.lo = ~var.lo, 22 + 20 cycles
                                          10202  label('NOTB')
NOTB:         2364 1416  ld   $16,y       10203  ld(hi('notb#13'),Y)             #10 #12
              2365 e037  jmp  y,$37       10204  jmp(Y,'notb#13')                #11
              2366 1200  ld   ac,x        10205  ld(AC,X)                        #12 address of var
                                          10206
                                          10207  # pc = 0x2367, Opcode = 0x67
                                          10208  # Instruction ABSVW: var = abs(var), 22 + 34 cycles
                                          10209  label('ABSVW')
ABSVW:        2367 1431  ld   $31,y       10210  ld(hi('absvw#13'),Y)            #10
              2368 e000  jmp  y,$00       10211  jmp(Y,'absvw#13')               #11
              2369 c21d  st   [$1d]       10212  st([vTmp])                      #12 address of var.lo
                                          10213
                                          10214  # pc = 0x236a, Opcode = 0x6a
                                          10215  # Instruction INCW: Increment word var, 22 + 24-26 cycles
                                          10216  label('INCW')
INCW:         236a 1415  ld   $15,y       10217  ld(hi('incw#13'),Y)             #10 #12
              236b e034  jmp  y,$34       10218  jmp(Y,'incw#13')                #11
                                          10219  # dummy                         #12 Overlap
                                          10220  #
                                          10221  # pc = 0x236c, Opcode = 0x6c
                                          10222  # Instruction DECW: Decrement word var, 22 + 24-28 cycles
                                          10223  label('DECW')
DECW:         236c 1415  ld   $15,y       10224  ld(hi('decw#13'),Y)             #10 #12
              236d e043  jmp  y,$43       10225  jmp(Y,'decw#13')                #11
                                          10226  # dummy                         #12 Overlap
                                          10227  #
                                          10228  # pc = 0x236e, Opcode = 0x6e
                                          10229  # Instruction WAITVV: more robust WAITVB, 22 + 24 cycles
                                          10230  label('WAITVV')
WAITVV:       236e 1427  ld   $27,y       10231  ld(hi('waitvv#13'),Y)           #10 #12
              236f e0ea  jmp  y,$ea       10232  jmp(Y,'waitvv#13')              #11
              2370 1200  ld   ac,x        10233  ld(AC,X)                        #12
                                          10234
                                          10235  # pc = 0x2371, Opcode = 0x71
                                          10236  # Instruction POKEA+: Poke a byte from var to [vAC], incw vAC, 22 + (26 to 30) cycles
                                          10237  label('POKEA+')
POKEA+:       2371 1428  ld   $28,y       10238  ld(hi('pokea+#13'),Y)           #10
              2372 e064  jmp  y,$64       10239  jmp(Y,'pokea+#13')              #11
                                          10240  # dummy                         #12 Overlap
                                          10241  #
                                          10242  # pc = 0x2373, Opcode = 0x73
                                          10243  # Instruction LSRV: Logical shift right word var, 22 + 56 cycles
                                          10244  label('LSRV')
LSRV:         2373 142c  ld   $2c,y       10245  ld(hi('lsrv#13'),Y)             #10 #12
              2374 e048  jmp  y,$48       10246  jmp(Y,'lsrv#13')                #11
                                          10247  # dummy                         #12 Overlap
                                          10248  #
                                          10249  # pc = 0x2375, Opcode = 0x75
                                          10250  # Instruction DEEKRI: vAC = DEEK[vAC + imm*2], 22 + 42 cycles
                                          10251  label('DEEKRI')
DEEKRI:       2375 1438  ld   $38,y       10252  ld(hi('deekri#13'),Y)           #10 #12
              2376 e0ac  jmp  y,$ac       10253  jmp(Y,'deekri#13')              #11
                                          10254  # dummy                         #12 Overlap
                                          10255  #
                                          10256  # pc = 0x2377, Opcode = 0x77
                                          10257  # Instruction SCRLH: poke 0x0101 with peek(0x0101) + scroll, 22 + 22 cycles
                                          10258  label('SCRLH')
SCRLH:        2377 1416  ld   $16,y       10259  ld(hi('scrlh#13'),Y)            #10 #12
              2378 e0e3  jmp  y,$e3       10260  jmp(Y,'scrlh#13')               #11
              2379 1200  ld   ac,x        10261  ld(AC,X)                        #12
                                          10262
                                          10263  # SYS calls and instruction implementations rely on these
              237a 0200  nop              10264  fillers(until=0xca)
              237b 0200  nop
              237c 0200  nop
              * 80 times
              23ca 00f2  ld   $f2         10265  ld(-28/2)                       #25
              23cb fc01  bra  $2301       10266  bra('NEXT')                     #26 Return from SYS calls
              23cc 1517  ld   [$17],y     10267  ld([vPC+1],Y)                   #27
                                          10268
                                          10269  # pc = 0x23cd, Opcode = 0xcd
                                          10270  # Instruction NCOPY (lb3361): copy n bytes from [vAC] to [vDST]. vAC+=n. vDST+=n
                                          10271  label('NCOPY')
NCOPY:        23cd 1433  ld   $33,y       10272  ld(hi('ncopy#13'),Y)            #10
              23ce e007  jmp  y,$07       10273  jmp(Y,'ncopy#13')               #11
              23cf 0115  ld   [$15]       10274  ld([vTicks])                    #12
                                          10275
                                          10276
                                          10277  # pc = 0x23d0, Opcode = 0xd0
                                          10278  # Instruction STLU (lb3361): store zero extended vAC into long var. 22+26 cycles
                                          10279  label('STLU')
STLU:         23d0 1433  ld   $33,y       10280  ld(hi('stlu#13'),Y)             #10
              23d1 e073  jmp  y,$73       10281  jmp(Y,'stlu#13')                #11
              23d2 1200  ld   ac,x        10282  ld(AC,X)                        #12
                                          10283
                                          10284  # pc = 0x23d3, Opcode = 0xd3
                                          10285  # Instruction STLS (lb3361): store sign extended vAC into long var. 22+28 cycles
                                          10286  label('STLS')
STLS:         23d3 1433  ld   $33,y       10287  ld(hi('stls#13'),Y)             #10
              23d4 e07d  jmp  y,$7d       10288  jmp(Y,'stls#13')                #11
                                          10289  # dummy                         #12 Overlap
                                          10290  #
                                          10291  # pc = 0x23d5, Opcode = 0xd5
                                          10292  # Instruction NOTL (lb3361): complement long var. 22+30 cycles
                                          10293  label('NOTL')
NOTL:         23d5 1434  ld   $34,y       10294  ld(hi('notl#13'),Y)             #10 #12
              23d6 e000  jmp  y,$00       10295  jmp(Y,'notl#13')                #11
              23d7 1200  ld   ac,x        10296  ld(AC,X)                        #12
                                          10297
                                          10298  # pc = 0x23d8, Opcode = 0xd8
                                          10299  # Instruction NEGL (lb3361): negate long var. 22+58(max) cycles
                                          10300  label('NEGL')
NEGL:         23d8 1434  ld   $34,y       10301  ld(hi('negl#13'),Y)             #10
              23d9 e093  jmp  y,$93       10302  jmp(Y,'negl#13')                #11
              23da 1200  ld   ac,x        10303  ld(AC,X)                        #12
                                          10304
                                          10305
              23db 0200  nop              10306  fillers(until=0xff)
              23dc 0200  nop
              23dd 0200  nop
              * 36 times
                                          10307
                                          10308  #-----------------------------------------------------------------------
                                          10309  #       PREFX1 instruction page, (0x2400), PREFIX OPCODE
                                          10310  #-----------------------------------------------------------------------
                                          10311  #
                                          10312  label('PREFX1_PAGE')
PREFX1_PAGE:  23ff fc03  bra  $2403       10313  bra('.next2')                   #0 Enter at '.next2' (so no startup overhead)
                                          10314  # --- Page boundary ---
                                          10315  align(0x100,size=0x100)
              2400 1517  ld   [$17],y     10316  ld([vPC+1],Y)                   #1
                                          10317
                                          10318  # Fetch next instruction and execute it, but only if there are sufficient
                                          10319  # ticks left for the slowest instruction.
              2401 8115  adda [$15]       10320  adda([vTicks])                  #0 Track elapsed ticks (actually counting down: AC<0)
              2402 e80b  blt  $240b       10321  blt('EXIT')                     #1 Escape near time out
              2403 c215  st   [$15]       10322  st([vTicks])                    #2
              2404 0116  ld   [$16]       10323  ld([vPC])                       #3 PREFIX is 1 byte, vPC hasn't been incremented
              2405 9001  adda $01,x       10324  adda(1,X)                       #4
              2406 c002  st   $02,[$02]   10325  st(vCpuSelect,[vCpuSelect])     #5 Reset to default vCPU page
              2407 0d00  ld   [y,x]       10326  ld([Y,X])                       #6 Fetch opcode (actually a branch target)
              2408 de00  st   [y,x++]     10327  st([Y,Xpp])                     #7 Just X++
              2409 fe00  bra  ac          10328  bra(AC)                         #8 Dispatch
              240a 0d00  ld   [y,x]       10329  ld([Y,X])                       #9 Prefetch operand
                                          10330
                                          10331  # Resync with video driver and transfer control
              240b 800f  adda $0f         10332  adda(maxTicks)                  #3
              240c e40c  bgt  $240c       10333  bgt(pc()&255)                   #4 Resync
              240d a001  suba $01         10334  suba(1)                         #5
              240e 1401  ld   $01,y       10335  ld(hi('vBlankStart'),Y)         #6
              240f e11e  jmp  y,[$1e]     10336  jmp(Y,[vReturn])                #7 To video driver
              2410 0000  ld   $00         10337  ld(0)                           #8 AC should be 0 already. Still..
                                          10338  assert vCPU_overhead ==          9
                                          10339
                                          10340  # pc = 0x2411, Opcode = 0x11
                                          10341  # Instruction NOTE: vAC = ROM:[NotesTable + vAC.lo*2], 18 + 48 cycles
                                          10342  label('NOTE')
NOTE:         2411 1427  ld   $27,y       10343  ld(hi('note#13'),Y)             #10
              2412 e000  jmp  y,$00       10344  jmp(Y,'note#13')                #11
              2413 000b  ld   $0b         10345  ld('.note#30')                  #12 low byte of low note return address
                                          10346
                                          10347  # pc = 0x2414, Opcode = 0x14
                                          10348  # Instruction MIDI: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 18 + 50 cycles
                                          10349  label('MIDI')
MIDI:         2414 1427  ld   $27,y       10350  ld(hi('midi#13'),Y)             #10
              2415 e01b  jmp  y,$1b       10351  jmp(Y,'midi#13')                #11
              2416 0027  ld   $27         10352  ld('.midi#31')                  #12 low byte of low midi return address
                                          10353
                                          10354  # pc = 0x2417, Opcode = 0x17
                                          10355  # Instruction XLA, (lb3361): Exchange vLR with vAC, 18 + 28 cycles
                                          10356  label('XLA')
XLA:          2417 1427  ld   $27,y       10357  ld(hi('xla#13'),Y)              #10
              2418 e037  jmp  y,$37       10358  jmp(Y,'xla#13')                 #11
              2419 0118  ld   [$18]       10359  ld([vAC])                       #12
                                          10360
                                          10361  # pc = 0x241a Opcode = 0x1a
                                          10362  # Instruction ADDLP (lb3361): vLAC += [vAC]. 18 + 66 cycles
                                          10363  label('ADDLP')
ADDLP:        241a 1432  ld   $32,y       10364  ld(hi('addlp#13'),Y)            #10
              241b e03f  jmp  y,$3f       10365  jmp(Y,'addlp#13')               #11
              241c 0115  ld   [$15]       10366  ld([vTicks])                    #12
                                          10367
                                          10368  # pc = 0x241d Opcode = 0x1d
                                          10369  # Instruction SUBLP (lb3361): vLAC -= [vAC]. 18 + 60 cycles
                                          10370  label('SUBLP')
SUBLP:        241d 1432  ld   $32,y       10371  ld(hi('sublp#13'),Y)            #10
              241e e07f  jmp  y,$7f       10372  jmp(Y,'sublp#13')               #11
              241f 0115  ld   [$15]       10373  ld([vTicks])                    #12
                                          10374
                                          10375  # pc = 0x2420 Opcode = 0x20
                                          10376  # Instruction ANDLP (lb3361): vLAC &= [vAC]. 18 + 42 cycles
                                          10377  # On return vAC>0 (resp =0, <0) iff LAC>0 (resp =0, <0)
                                          10378  label('ANDLP')
ANDLP:        2420 1432  ld   $32,y       10379  ld(hi('andlp#13'),Y)            #10
              2421 e0b8  jmp  y,$b8       10380  jmp(Y,'andlp#13')               #11
              2422 0115  ld   [$15]       10381  ld([vTicks])                    #12
                                          10382
                                          10383  # pc = 0x2423 Opcode = 0x23
                                          10384  # Instruction ORLP (lb3361): vLAC |= [vAC]. 18 + 42 cycles
                                          10385  # On return vAC>0 (resp =0, <0) iff LAC>0 (resp =0, <0)
                                          10386  label('ORLP')
ORLP:         2423 1432  ld   $32,y       10387  ld(hi('orlp#13'),Y)             #10
              2424 e0d4  jmp  y,$d4       10388  jmp(Y,'orlp#13')                #11
              2425 0115  ld   [$15]       10389  ld([vTicks])                    #12
                                          10390
                                          10391  # pc = 0x2426 Opcode = 0x26
                                          10392  # Instruction XORLP (lb3361): vLAC ^= [vAC]. 18 + 42 cycles
                                          10393  # On return vAC>0 (resp =0, <0) iff LAC>0 (resp =0, <0)
                                          10394  label('XORLP')
XORLP:        2426 1432  ld   $32,y       10395  ld(hi('xorlp#13'),Y)            #10
              2427 e0e7  jmp  y,$e7       10396  jmp(Y,'xorlp#13')               #11
              2428 0115  ld   [$15]       10397  ld([vTicks])                    #12
                                          10398
                                          10399  # pc = 0x2429 Opcode = 0x29
                                          10400  # Instruction CMPLPU (lb3361): compare vLAC and [vAC] unsigned. 18 + 72(max) cycles
                                          10401  # On return vAC>0 (resp =0, <0)
                                          10402  label('CMPLPU')
CMPLPU:       2429 1433  ld   $33,y       10403  ld(hi('cmplpu#13'),Y)           #10
              242a e0a0  jmp  y,$a0       10404  jmp(Y,'cmplpu#13')              #11
              242b 0115  ld   [$15]       10405  ld([vTicks])                    #12
                                          10406
                                          10407  # pc = 0x242c Opcode = 0x2c
                                          10408  # Instruction CMPLPS (lb3361): compare vLAC and [vAC] signed. 18 + 72(max) cycles
                                          10409  # On return vAC>0 (resp =0, <0)
                                          10410  label('CMPLPS')
CMPLPS:       242c 1433  ld   $33,y       10411  ld(hi('cmplps#13'),Y)           #10
              242d e0e0  jmp  y,$e0       10412  jmp(Y,'cmplps#13')              #11
              242e 0115  ld   [$15]       10413  ld([vTicks])                    #12
                                          10414
                                          10415  # pc = 0x242f Opcode = 0x2f
                                          10416  # Instruction RANDW: vAC = rand(65535), uses Marcel's algorithm from SYS_Random_34, 18 + 30 cycles
                                          10417  label('RANDW')
RANDW:        242f 1427  ld   $27,y       10418  ld(hi('randw#13'),Y)            #10
              2430 e045  jmp  y,$45       10419  jmp(Y,'randw#13')               #11
                                          10420  # dummy                         #12 Overlap
                                          10421  #
                                          10422  # pc = 0x2431 Opcode = 0x31
                                          10423  # Instruction LDPX: vAC = [vAC.xy], scanline table y taken into account, 18 + 28 cycles
                                          10424  label('LDPX')
LDPX:         2431 1427  ld   $27,y       10425  ld(hi('ldpx#13'),Y)             #10 #12
              2432 e056  jmp  y,$56       10426  jmp(Y,'ldpx#13')                #11
                                          10427  # dummy                         #12 Overlap
                                          10428  #
                                          10429  # pc = 0x2433 Opcode = 0x33
                                          10430  # Instruction ABSW: vAC = abs(vAC), 18 + (18 or 28) cycles
                                          10431  label('ABSW')
ABSW:         2433 1427  ld   $27,y       10432  ld(hi('absw#13'),Y)             #10 #12
              2434 e064  jmp  y,$64       10433  jmp(Y,'absw#13')                #11
              2435 0119  ld   [$19]       10434  ld([vAC+1])                     #12
                                          10435
                                          10436  # pc = 0x2436 Opcode = 0x36
                                          10437  # Instruction SGNW: vAC = sgn(vAC), 18 + (20, 22 or 26) cycles
                                          10438  label('SGNW')
SGNW:         2436 1427  ld   $27,y       10439  ld(hi('sgnw#13'),Y)             #10
              2437 e07a  jmp  y,$7a       10440  jmp(Y,'sgnw#13')                #11
              2438 0119  ld   [$19]       10441  ld([vAC+1])                     #12
                                          10442
                                          10443  # pc = 0x2439 Opcode = 0x39
                                          10444  # Instruction MULB3: vAC = vAC.lo * 3, 18 + 24 cycles
                                          10445  label('MULB3')
MULB3:        2439 1427  ld   $27,y       10446  ld(hi('mulb3#13'),Y)            #10
              243a e08d  jmp  y,$8d       10447  jmp(Y,'mulb3#13')               #11
                                          10448  # dummy                         #12 Overlap
                                          10449  #
                                          10450  # pc = 0x243b Opcode = 0x3b
                                          10451  # Instruction MULB5: vAC = vAC.lo * 5, 18 + 24 cycles
                                          10452  label('MULB5')
MULB5:        243b 1427  ld   $27,y       10453  ld(hi('mulb5#13'),Y)            #10 #12
              243c e096  jmp  y,$96       10454  jmp(Y,'mulb5#13')               #11
                                          10455  # dummy                         #12 Overlap
                                          10456  #
                                          10457  # pc = 0x243d Opcode = 0x3d
                                          10458  # Instruction MULB6: vAC = vAC.lo * 6, 18 + 26 cycles
                                          10459  label('MULB6')
MULB6:        243d 1427  ld   $27,y       10460  ld(hi('mulb6#13'),Y)            #10 #12
              243e e0a0  jmp  y,$a0       10461  jmp(Y,'mulb6#13')               #11
                                          10462  # dummy                         #12 Overlap
                                          10463  #
                                          10464  # pc = 0x243f Opcode = 0x3f
                                          10465  # Instruction MULB7: vAC = vAC.lo * 7, 18 + 26 cycles
                                          10466  label('MULB7')
MULB7:        243f 1427  ld   $27,y       10467  ld(hi('mulb7#13'),Y)            #10 #12
              2440 e0ab  jmp  y,$ab       10468  jmp(Y,'mulb7#13')               #11
                                          10469  # dummy                         #12 Overlap
                                          10470  #
                                          10471  # pc = 0x2441 Opcode = 0x41
                                          10472  # Instruction MULB8: vAC = vAC.lo * 8, 18 + 24 cycles
                                          10473  label('MULB8')
MULB8:        2441 1427  ld   $27,y       10474  ld(hi('mulb8#13'),Y)            #10 #12
              2442 e0b6  jmp  y,$b6       10475  jmp(Y,'mulb8#13')               #11
                                          10476  # dummy                         #12 Overlap
                                          10477  #
                                          10478  # pc = 0x2443 Opcode = 0x43
                                          10479  # Instruction MULB9: vAC = vAC.lo * 9, 18 + 26 cycles
                                          10480  label('MULB9')
MULB9:        2443 1427  ld   $27,y       10481  ld(hi('mulb9#13'),Y)            #10 #12
              2444 e0c0  jmp  y,$c0       10482  jmp(Y,'mulb9#13')               #11
                                          10483  # dummy                         #12 Overlap
                                          10484  #
                                          10485  # pc = 0x2445 Opcode = 0x45
                                          10486  # Instruction MULB10: vAC = vAC.lo * 10, 18 + 26 cycles
                                          10487  label('MULB10')
MULB10:       2445 1427  ld   $27,y       10488  ld(hi('mulb10#13'),Y)           #10 #12
              2446 e0cb  jmp  y,$cb       10489  jmp(Y,'mulb10#13')              #11
                                          10490  # dummy                         #12 Overlap
                                          10491  #
                                          10492  # pc = 0x2447 Opcode = 0x47
                                          10493  # Instruction WAITVB: wait for VBlank, 18 + 22 cycles
                                          10494  label('WAITVB')
WAITVB:       2447 1427  ld   $27,y       10495  ld(hi('waitvb#13'),Y)           #10 #12
              2448 e0df  jmp  y,$df       10496  jmp(Y,'waitvb#13')              #11
                                          10497  # dummy                         #12 Overlap
                                          10498  #
                                          10499  # pc = 0x2449 Opcode = 0x49
                                          10500  # Instruction MULW3: vAC = vAC * 3, 18 + 40 cycles
                                          10501  label('MULW3')
MULW3:        2449 1436  ld   $36,y       10502  ld(hi('mulw3#13'),Y)            #10 #12
              244a e0a7  jmp  y,$a7       10503  jmp(Y,'mulw3#13')               #11
                                          10504  # dummy                         #12 Overlap
                                          10505  #
                                          10506  # pc = 0x244b Opcode = 0x4b
                                          10507  # Instruction MULW5: vAC = vAC * 5, 18 + 48 cycles
                                          10508  label('MULW5')
MULW5:        244b 1436  ld   $36,y       10509  ld(hi('mulw5#13'),Y)            #10 #12
              244c e0c8  jmp  y,$c8       10510  jmp(Y,'mulw5#13')               #11
                                          10511  # dummy                         #12 Overlap
                                          10512  #
                                          10513  # pc = 0x244d Opcode = 0x4d
                                          10514  # Instruction MULW6: vAC = vAC * 6, 18 + 50 cycles
                                          10515  label('MULW6')
MULW6:        244d 1437  ld   $37,y       10516  ld(hi('mulw6#13'),Y)            #10 #12
              244e e091  jmp  y,$91       10517  jmp(Y,'mulw6#13')               #11
                                          10518  # dummy                         #12 Overlap
                                          10519  #
                                          10520  # pc = 0x244f Opcode = 0x4f
                                          10521  # Instruction MULW7: vAC = vAC * 7, 18 + 58 cycles
                                          10522  label('MULW7')
MULW7:        244f 1437  ld   $37,y       10523  ld(hi('mulw7#13'),Y)            #10 #12
              2450 e0bc  jmp  y,$bc       10524  jmp(Y,'mulw7#13')               #11
                                          10525  # dummy                         #12 Overlap
                                          10526  #
                                          10527  # pc = 0x2451 Opcode = 0x51
                                          10528  # Instruction MULW8: vAC = vAC * 8, 18 + 44 cycles
                                          10529  label('MULW8')
MULW8:        2451 1438  ld   $38,y       10530  ld(hi('mulw8#13'),Y)            #10 #12
              2452 e000  jmp  y,$00       10531  jmp(Y,'mulw8#13')               #11
                                          10532  # dummy                         #12 Overlap
                                          10533  #
                                          10534  # pc = 0x2453 Opcode = 0x53
                                          10535  # Instruction MULW9: vAC = vAC * 9, 18 + 56 cycles
                                          10536  label('MULW9')
MULW9:        2453 1438  ld   $38,y       10537  ld(hi('mulw9#13'),Y)            #10 #12
              2454 e023  jmp  y,$23       10538  jmp(Y,'mulw9#13')               #11
                                          10539  # dummy                         #12 Overlap
                                          10540  #
                                          10541  # pc = 0x2455 Opcode = 0x55
                                          10542  # Instruction MULW10: vAC = vAC * 10, 18 + 58 cycles
                                          10543  label('MULW10')
MULW10:       2455 1438  ld   $38,y       10544  ld(hi('mulw10#13'),Y)           #10 #12
              2456 e054  jmp  y,$54       10545  jmp(Y,'mulw10#13')              #11
                                          10546  # dummy                         #12 Overlap
                                          10547
                                          10548
                                          10549  # SYS calls and instruction implementations rely on these
              2457 0200  nop              10550  fillers(until=0xca)
              2458 0200  nop
              2459 0200  nop
              * 115 times
              24ca 00f2  ld   $f2         10551  ld(-28/2)                       #25
              24cb fc01  bra  $2401       10552  bra('NEXT')                     #26 Return from SYS calls
              24cc 1517  ld   [$17],y     10553  ld([vPC+1],Y)                   #27
                                          10554
                                          10555
              24cd 0200  nop              10556  fillers(until=0xff)
              24ce 0200  nop
              24cf 0200  nop
              * 50 times
              24ff 0200  nop              10557  align(0x100, size=0x100)
                                          10558
                                          10559  #-----------------------------------------------------------------------
                                          10560  #       PREFX3 implementation page, (0x2500)
                                          10561  #-----------------------------------------------------------------------
                                          10562  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2099#p2099
                                          10563  #
                                          10564  # STB2 implementation
                                          10565  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10566  label('stb2#13')
stb2#13:      2500 152b  ld   [$2b],y     10567  ld([sysArgs+7],Y)               #13 Second operand
              2501 0118  ld   [$18]       10568  ld([vAC])                       #14
              2502 ce00  st   [y,x]       10569  st([Y,X])                       #15
              2503 1403  ld   $03,y       10570  ld(hi('NEXTY'),Y)               #16
              2504 e000  jmp  y,$00       10571  jmp(Y,'NEXTY')                  #17
              2505 00f6  ld   $f6         10572  ld(-20/2)                       #18
                                          10573
                                          10574  # STW2 implementation
                                          10575  # Original idea by lb3361, see https://forum.gigatron.io/viewtopic.php?p=2135#p2135
                                          10576  label('stw2#13')
stw2#13:      2506 152b  ld   [$2b],y     10577  ld([sysArgs+7],Y)               #13 Second operand
              2507 0118  ld   [$18]       10578  ld([vAC])                       #14
              2508 de00  st   [y,x++]     10579  st([Y,Xpp])                     #15
              2509 0119  ld   [$19]       10580  ld([vAC+1])                     #16
              250a ce00  st   [y,x]       10581  st([Y,X])                       #17
              250b 1403  ld   $03,y       10582  ld(hi('NEXTY'),Y)               #18
              250c e000  jmp  y,$00       10583  jmp(Y,'NEXTY')                  #19
              250d 00f5  ld   $f5         10584  ld(-22/2)                       #20
                                          10585
                                          10586  # XCHGB implementation
                                          10587  label('xchgb#13')
xchgb#13:     250e c22a  st   [$2a]       10588  st([sysArgs+6])                 #13 1st var
              250f 112b  ld   [$2b],x     10589  ld([sysArgs+7],X)               #14 2nd var
              2510 0500  ld   [x]         10590  ld([X])                         #15
              2511 c21d  st   [$1d]       10591  st([vTmp])                      #16
              2512 112a  ld   [$2a],x     10592  ld([sysArgs+6],X)               #17
              2513 0500  ld   [x]         10593  ld([X])                         #18
              2514 112b  ld   [$2b],x     10594  ld([sysArgs+7],X)               #19
              2515 c600  st   [x]         10595  st([X])                         #20
              2516 112a  ld   [$2a],x     10596  ld([sysArgs+6],X)               #21
              2517 011d  ld   [$1d]       10597  ld([vTmp])                      #22
              2518 c600  st   [x]         10598  st([X])                         #23
              2519 1403  ld   $03,y       10599  ld(hi('NEXTY'),Y)               #24
              251a e000  jmp  y,$00       10600  jmp(Y,'NEXTY')                  #25
              251b 00f2  ld   $f2         10601  ld(-28/2)                       #26
                                          10602
                                          10603  # XCHGW implementation
                                          10604  label('xchgw#13')
xchgw#13:     251c 00f8  ld   $f8         10605  ld(min(0,maxTicks-46/2))        #13
              251d 8115  adda [$15]       10606  adda([vTicks])                  #14
              251e e83b  blt  .xchgw#17   10607  blt('.xchgw#17')                #15 not enough time left, so retry
              251f 1400  ld   $00,y       10608  ld(0,Y)                         #16
              2520 112b  ld   [$2b],x     10609  ld([sysArgs+7],X)               #17
              2521 0500  ld   [x]         10610  ld([X])                         #18
              2522 c21d  st   [$1d]       10611  st([vTmp])                      #19 vTmp = var2.lo
              2523 112a  ld   [$2a],x     10612  ld([sysArgs+6],X)               #20
              2524 0500  ld   [x]         10613  ld([X])                         #21 AC = var1.lo
              2525 112b  ld   [$2b],x     10614  ld([sysArgs+7],X)               #22
              2526 c600  st   [x]         10615  st([X])                         #23 var2.lo = AC
              2527 112a  ld   [$2a],x     10616  ld([sysArgs+6],X)               #24
              2528 011d  ld   [$1d]       10617  ld([vTmp])                      #25
              2529 c600  st   [x]         10618  st([X])                         #26 var1.lo = vTmp
              252a 012b  ld   [$2b]       10619  ld([sysArgs+7])                 #27
              252b 8001  adda $01         10620  adda(1)                         #28
              252c d22b  st   [$2b],x     10621  st([sysArgs+7],X)               #29 inc sysArgs+7
              252d 0500  ld   [x]         10622  ld([X])                         #30
              252e c21d  st   [$1d]       10623  st([vTmp])                      #31 vTmp = var2.hi
              252f 012a  ld   [$2a]       10624  ld([sysArgs+6])                 #32
              2530 9001  adda $01,x       10625  adda(1,X)                       #33
              2531 0500  ld   [x]         10626  ld([X])                         #34 AC = var1.hi
              2532 112b  ld   [$2b],x     10627  ld([sysArgs+7],X)               #35
              2533 c600  st   [x]         10628  st([X])                         #36 var2.hi = AC
              2534 012a  ld   [$2a]       10629  ld([sysArgs+6])                 #37
              2535 9001  adda $01,x       10630  adda(1,X)                       #38
              2536 011d  ld   [$1d]       10631  ld([vTmp])                      #39
              2537 c600  st   [x]         10632  st([X])                         #40 var1.hi = vTmp
              2538 1403  ld   $03,y       10633  ld(hi('REENTER'),Y)             #41
              2539 e0cb  jmp  y,$cb       10634  jmp(Y,'REENTER')                #42
              253a 00e9  ld   $e9         10635  ld(-46/2)                       #43
                                          10636  label('.xchgw#17')
.xchgw#17:    253b 0021  ld   $21         10637  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              253c c202  st   [$02]       10638  st([vCpuSelect])                #18 restore PREFX3 instruction page
              253d 9401  adda $01,y       10639  adda(1,Y)                       #19 retry instruction
              253e e0cb  jmp  y,$cb       10640  jmp(Y,'REENTER')                #20
              253f 00f4  ld   $f4         10641  ld(-24/2)                       #21
                                          10642
                                          10643  # MOVW implementation
                                          10644  label('movw#13')
movw#13:      2540 1200  ld   ac,x        10645  ld(AC,X)                        #13
              2541 8001  adda $01         10646  adda(1)                         #14
              2542 c21d  st   [$1d]       10647  st([vTmp])                      #15 address of src.hi
              2543 0500  ld   [x]         10648  ld([X])                         #16 src.lo
              2544 112b  ld   [$2b],x     10649  ld([sysArgs+7],X)               #17 address of dst.lo
              2545 c600  st   [x]         10650  st([X])                         #18 dst.lo = src.lo
              2546 111d  ld   [$1d],x     10651  ld([vTmp],X)                    #19
              2547 0500  ld   [x]         10652  ld([X])                         #20 src.hi
              2548 c21d  st   [$1d]       10653  st([vTmp])                      #21
              2549 012b  ld   [$2b]       10654  ld([sysArgs+7])                 #22
              254a 9001  adda $01,x       10655  adda(1,X)                       #23 address of dst.hi
              254b 011d  ld   [$1d]       10656  ld([vTmp])                      #24
              254c c600  st   [x]         10657  st([X])                         #25 dst.hi = src.hi
              254d 1403  ld   $03,y       10658  ld(hi('NEXTY'),Y)               #26
              254e e000  jmp  y,$00       10659  jmp(Y,'NEXTY')                  #27
              254f 00f1  ld   $f1         10660  ld(-30/2)                       #28
                                          10661
                                          10662  # ADDWI implementation
                                          10663  label('addwi#13')
addwi#13:     2550 c21d  st   [$1d]       10664  st([vTmp])                      #13 save imm.lo
              2551 8118  adda [$18]       10665  adda([vAC])                     #14
              2552 c218  st   [$18]       10666  st([vAC])                       #15 vAC.lo += imm.lo
              2553 e85d  blt  .addwi#18   10667  bmi('.addwi#18')                #16 overflow
              2554 a11d  suba [$1d]       10668  suba([vTmp])                    #17 restore vAC.lo
              2555 411d  ora  [$1d]       10669  ora([vTmp])                     #18 imm.lo | vAC.lo
              2556 e865  blt  .addwi#21   10670  bmi('.addwi#21')                #19 if carry == 1
              2557 012b  ld   [$2b]       10671  ld([sysArgs+7])                 #20 imm.hi
              2558 8119  adda [$19]       10672  adda([vAC+1])                   #21 carry = 0
              2559 c219  st   [$19]       10673  st([vAC+1])                     #22 vAC.hi += imm.hi
              255a 1403  ld   $03,y       10674  ld(hi('REENTER'),Y)             #23
              255b e0cb  jmp  y,$cb       10675  jmp(Y,'REENTER')                #24
              255c 00f2  ld   $f2         10676  ld(-28/2)                       #25
                                          10677  label('.addwi#18')
.addwi#18:    255d 211d  anda [$1d]       10678  anda([vTmp])                    #18 imm.lo & vAC.lo
              255e e865  blt  .addwi#21   10679  bmi('.addwi#21')                #19 If carry == 1
              255f 012b  ld   [$2b]       10680  ld([sysArgs+7])                 #20 imm.hi
              2560 8119  adda [$19]       10681  adda([vAC+1])                   #21 carry = 0
              2561 c219  st   [$19]       10682  st([vAC+1])                     #22 vAC.hi += imm.hi
              2562 1403  ld   $03,y       10683  ld(hi('REENTER'),Y)             #23
              2563 e0cb  jmp  y,$cb       10684  jmp(Y,'REENTER')                #24
              2564 00f2  ld   $f2         10685  ld(-28/2)                       #25
                                          10686  label('.addwi#21')
.addwi#21:    2565 8001  adda $01         10687  adda(1)                         #21 carry = 1
              2566 8119  adda [$19]       10688  adda([vAC+1])                   #22
              2567 c219  st   [$19]       10689  st([vAC+1])                     #23 vAC.hi = vAC.hi + carry + imm.hi
              2568 1403  ld   $03,y       10690  ld(hi('NEXTY'),Y)               #24
              2569 e000  jmp  y,$00       10691  jmp(Y,'NEXTY')                  #25
              256a 00f2  ld   $f2         10692  ld(-28/2)                       #26
                                          10693
                                          10694  # SUBWI implementation
                                          10695  label('subwi#13')
subwi#13:     256b c21d  st   [$1d]       10696  st([vTmp])                      #13 save imm.lo
              256c 0118  ld   [$18]       10697  ld([vAC])                       #14
              256d e879  blt  .subwi#17   10698  bmi('.subwi#17')                #15 is -ve?
              256e a11d  suba [$1d]       10699  suba([vTmp])                    #16
              256f c218  st   [$18]       10700  st([vAC])                       #17 vAC.lo -= imm.lo
              2570 411d  ora  [$1d]       10701  ora([vTmp])                     #18 borrow in bit 7
              2571 3080  anda $80,x       10702  anda(0x80,X)                    #19 move borrow to bit 0
              2572 0119  ld   [$19]       10703  ld([vAC+1])                     #20
              2573 a500  suba [x]         10704  suba([X])                       #21
              2574 a12b  suba [$2b]       10705  suba([sysArgs+7])               #22
              2575 c219  st   [$19]       10706  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              2576 1403  ld   $03,y       10707  ld(hi('NEXTY'),Y)               #24
              2577 e000  jmp  y,$00       10708  jmp(Y,'NEXTY')                  #25
              2578 00f2  ld   $f2         10709  ld(-28/2)                       #26
                                          10710  label('.subwi#17')
.subwi#17:    2579 c218  st   [$18]       10711  st([vAC])                       #17 vAC.lo -= imm.lo
              257a 211d  anda [$1d]       10712  anda([vTmp])                    #18 borrow in bit 7
              257b 3080  anda $80,x       10713  anda(0x80,X)                    #19 move borrow to bit 0
              257c 0119  ld   [$19]       10714  ld([vAC+1])                     #20
              257d a500  suba [x]         10715  suba([X])                       #21
              257e a12b  suba [$2b]       10716  suba([sysArgs+7])               #22
              257f c219  st   [$19]       10717  st([vAC+1])                     #23 vAC.hi = vAC.hi - borrow - imm.hi
              2580 1403  ld   $03,y       10718  ld(hi('NEXTY'),Y)               #24
              2581 e000  jmp  y,$00       10719  jmp(Y,'NEXTY')                  #25
              2582 00f2  ld   $f2         10720  ld(-28/2)                       #26
                                          10721
                                          10722  # SUBIW implementation
                                          10723  label('subiw#13')
subiw#13:     2583 e891  blt  .subiw#15   10724  bmi('.subiw#15')                #13 is -ve?
              2584 a118  suba [$18]       10725  suba([vAC])                     #14
              2585 c21d  st   [$1d]       10726  st([vTmp])                      #15 vAC.lo = imm.lo - vAC.lo
              2586 4118  ora  [$18]       10727  ora([vAC])                      #16 borrow in bit 7
              2587 3080  anda $80,x       10728  anda(0x80,X)                    #17 move borrow to bit 0
              2588 011d  ld   [$1d]       10729  ld([vTmp])                      #18
              2589 c218  st   [$18]       10730  st([vAC])                       #19 vAC.lo
              258a 012b  ld   [$2b]       10731  ld([sysArgs+7])                 #20 imm.hi
              258b a500  suba [x]         10732  suba([X])                       #21
              258c a119  suba [$19]       10733  suba([vAC+1])                   #22
              258d c219  st   [$19]       10734  st([vAC+1])                     #23 vAC.hi = imm.hi - borrow - vAC.hi
              258e 1403  ld   $03,y       10735  ld(hi('NEXTY'),Y)               #24
              258f e000  jmp  y,$00       10736  jmp(Y,'NEXTY')                  #25
              2590 00f2  ld   $f2         10737  ld(-28/2)                       #26
                                          10738  label('.subiw#15')
.subiw#15:    2591 c21d  st   [$1d]       10739  st([vTmp])                      #15 vAC.lo = imm.lo - vAC.lo
              2592 2118  anda [$18]       10740  anda([vAC])                     #16 borrow in bit 7
              2593 3080  anda $80,x       10741  anda(0x80,X)                    #17 move borrow to bit 0
              2594 011d  ld   [$1d]       10742  ld([vTmp])                      #18
              2595 c218  st   [$18]       10743  st([vAC])                       #19 vAC.lo
              2596 012b  ld   [$2b]       10744  ld([sysArgs+7])                 #20 imm.hi
              2597 a500  suba [x]         10745  suba([X])                       #21
              2598 a119  suba [$19]       10746  suba([vAC+1])                   #22
              2599 c219  st   [$19]       10747  st([vAC+1])                     #23 vAC.hi = imm.hi - borrow - vAC.hi
              259a 1403  ld   $03,y       10748  ld(hi('NEXTY'),Y)               #24
              259b e000  jmp  y,$00       10749  jmp(Y,'NEXTY')                  #25
              259c 00f2  ld   $f2         10750  ld(-28/2)                       #26
                                          10751
                                          10752  # ANDWI implementation
                                          10753  label('andwi#13')
andwi#13:     259d 2118  anda [$18]       10754  anda([vAC])                     #13
              259e c218  st   [$18]       10755  st([vAC])                       #14 vAC.lo &= imm.lo
              259f 012b  ld   [$2b]       10756  ld([sysArgs+7])                 #15
              25a0 2119  anda [$19]       10757  anda([vAC+1])                   #16
              25a1 c219  st   [$19]       10758  st([vAC+1])                     #17 vAC.hi &= imm.hi
              25a2 1403  ld   $03,y       10759  ld(hi('NEXTY'),Y)               #18
              25a3 e000  jmp  y,$00       10760  jmp(Y,'NEXTY')                  #19
              25a4 00f5  ld   $f5         10761  ld(-22/2)                       #20
                                          10762
                                          10763  # ORWI implementation
                                          10764  label('orwi#13')
orwi#13:      25a5 4118  ora  [$18]       10765  ora([vAC])                      #13
              25a6 c218  st   [$18]       10766  st([vAC])                       #14 vAC.lo |= imm.lo
              25a7 012b  ld   [$2b]       10767  ld([sysArgs+7])                 #15
              25a8 4119  ora  [$19]       10768  ora([vAC+1])                    #16
              25a9 c219  st   [$19]       10769  st([vAC+1])                     #17 vAC.hi |= imm.hi
              25aa 1403  ld   $03,y       10770  ld(hi('NEXTY'),Y)               #18
              25ab e000  jmp  y,$00       10771  jmp(Y,'NEXTY')                  #19
              25ac 00f5  ld   $f5         10772  ld(-22/2)                       #20
                                          10773
                                          10774  # XORWI implementation
                                          10775  label('xorwi#13')
xorwi#13:     25ad 6118  xora [$18]       10776  xora([vAC])                     #13
              25ae c218  st   [$18]       10777  st([vAC])                       #14 vAC.lo ^= imm.lo
              25af 012b  ld   [$2b]       10778  ld([sysArgs+7])                 #15
              25b0 6119  xora [$19]       10779  xora([vAC+1])                   #16
              25b1 c219  st   [$19]       10780  st([vAC+1])                     #17 vAC.hi ^= imm.hi
              25b2 1403  ld   $03,y       10781  ld(hi('NEXTY'),Y)               #18
              25b3 e000  jmp  y,$00       10782  jmp(Y,'NEXTY')                  #19
              25b4 00f5  ld   $f5         10783  ld(-22/2)                       #20
                                          10784
                                          10785  # CONDII implementation
                                          10786  label('condii#13')
condii#13:    25b5 c21d  st   [$1d]       10787  st([vTmp])                      #13
              25b6 0118  ld   [$18]       10788  ld([vAC])                       #14
              25b7 4119  ora  [$19]       10789  ora([vAC+1])                    #15
              25b8 ecbb  bne  $25bb       10790  bne(pc()+3)                     #16
              25b9 fcbc  bra  $25bc       10791  bra(pc()+3)                     #17
              25ba 012b  ld   [$2b]       10792  ld([sysArgs+7])                 #18 get result cond == 0
              25bb 011d  ld   [$1d]       10793  ld([vTmp])                      #18 get result cond != 0
              25bc c218  st   [$18]       10794  st([vAC])                       #19 result.lo
              25bd 0000  ld   $00         10795  ld(0)                           #20
              25be c219  st   [$19]       10796  st([vAC+1])                     #21 result.hi = 0
              25bf 1403  ld   $03,y       10797  ld(hi('NEXTY'),Y)               #22
              25c0 e000  jmp  y,$00       10798  jmp(Y,'NEXTY')                  #23
              25c1 00f3  ld   $f3         10799  ld(-26/2)                       #24
                                          10800
                                          10801  # CONDBB implementation
                                          10802  label('condbb#13')
condbb#13:    25c2 0500  ld   [x]         10803  ld([X])                         #13
              25c3 c21d  st   [$1d]       10804  st([vTmp])                      #14
              25c4 112b  ld   [$2b],x     10805  ld([sysArgs+7],X)               #15 get result cond=0
              25c5 0118  ld   [$18]       10806  ld([vAC])                       #16
              25c6 4119  ora  [$19]       10807  ora([vAC+1])                    #17
              25c7 ecca  bne  $25ca       10808  bne(pc()+3)                     #18
              25c8 fccb  bra  $25cb       10809  bra(pc()+3)                     #19
              25c9 0500  ld   [x]         10810  ld([X])                         #20 get result cond == 0
              25ca 011d  ld   [$1d]       10811  ld([vTmp])                      #20 get result cond != 0
              25cb c218  st   [$18]       10812  st([vAC])                       #21 result.lo
              25cc 0000  ld   $00         10813  ld(0)                           #22
              25cd c219  st   [$19]       10814  st([vAC+1])                     #23 result.hi = 0
              25ce 1403  ld   $03,y       10815  ld(hi('NEXTY'),Y)               #24
              25cf e000  jmp  y,$00       10816  jmp(Y,'NEXTY')                  #25
              25d0 00f2  ld   $f2         10817  ld(-28/2)                       #26
                                          10818
                                          10819  # CONDIB implementation
                                          10820  label('condib#13')
condib#13:    25d1 112b  ld   [$2b],x     10821  ld([sysArgs+7],X)               #13 get result cond=0
              25d2 0118  ld   [$18]       10822  ld([vAC])                       #14
              25d3 4119  ora  [$19]       10823  ora([vAC+1])                    #15
              25d4 ecd7  bne  $25d7       10824  bne(pc()+3)                     #16
              25d5 fcd8  bra  $25d8       10825  bra(pc()+3)                     #17
              25d6 0500  ld   [x]         10826  ld([X])                         #18 get result cond == 0
              25d7 011d  ld   [$1d]       10827  ld([vTmp])                      #18 get result cond != 0
              25d8 c218  st   [$18]       10828  st([vAC])                       #19 result.lo
              25d9 0000  ld   $00         10829  ld(0)                           #20
              25da c219  st   [$19]       10830  st([vAC+1])                     #21 result.hi = 0
              25db 1403  ld   $03,y       10831  ld(hi('NEXTY'),Y)               #22
              25dc e000  jmp  y,$00       10832  jmp(Y,'NEXTY')                  #23
              25dd 00f3  ld   $f3         10833  ld(-26/2)                       #24
                                          10834
                                          10835  # CONDBI implementation
                                          10836  label('condbi#13')
condbi#13:    25de 1200  ld   ac,x        10837  ld(AC,X)                        #13
              25df 0118  ld   [$18]       10838  ld([vAC])                       #14
              25e0 4119  ora  [$19]       10839  ora([vAC+1])                    #15
              25e1 ece4  bne  $25e4       10840  bne(pc()+3)                     #16
              25e2 fce5  bra  $25e5       10841  bra(pc()+3)                     #17
              25e3 012b  ld   [$2b]       10842  ld([sysArgs+7])                 #18 get result cond == 0
              25e4 0500  ld   [x]         10843  ld([X])                         #18 get result cond != 0
              25e5 c218  st   [$18]       10844  st([vAC])                       #19 result.lo
              25e6 0000  ld   $00         10845  ld(0)                           #20
              25e7 c219  st   [$19]       10846  st([vAC+1])                     #21 result.hi = 0
              25e8 1403  ld   $03,y       10847  ld(hi('NEXTY'),Y)               #22
              25e9 e000  jmp  y,$00       10848  jmp(Y,'NEXTY')                  #23
              25ea 00f3  ld   $f3         10849  ld(-26/2)                       #24
                                          10850
                                          10851
              25eb 0200  nop              10852  fillers(until=0xff)
              25ec 0200  nop
              25ed 0200  nop
              * 20 times
              25ff 0200  nop              10853  align(0x100, size=0x100)
                                          10854
                                          10855  #-----------------------------------------------------------------------
                                          10856  #       PREFX2 implementation page, (0x2600)
                                          10857  #-----------------------------------------------------------------------
                                          10858  #
                                          10859  # LSLN implementation
                                          10860  label('lsln#13')
lsln#13:      2600 a001  suba $01         10861  suba(1)                         #13
              2601 f406  bge  .lsln#16    10862  bge('.lsln#16')                 #14
              2602 c22b  st   [$2b]       10863  st([sysArgs+7])                 #15
              2603 1403  ld   $03,y       10864  ld(hi('NEXTY'),Y)               #16 exit PREFX2 instruction page
              2604 e000  jmp  y,$00       10865  jmp(Y,'NEXTY')                  #17
              2605 00f6  ld   $f6         10866  ld(-20/2)                       #18
                                          10867  label('.lsln#16')
.lsln#16:     2606 0118  ld   [$18]       10868  ld([vAC])                       #16
              2607 3080  anda $80,x       10869  anda(128,X)                     #17
              2608 8118  adda [$18]       10870  adda([vAC])                     #18
              2609 c218  st   [$18]       10871  st([vAC])                       #19
              260a 0500  ld   [x]         10872  ld([X])                         #20
              260b 8119  adda [$19]       10873  adda([vAC+1])                   #21
              260c 8119  adda [$19]       10874  adda([vAC+1])                   #22
              260d c219  st   [$19]       10875  st([vAC+1])                     #23
              260e 0022  ld   $22         10876  ld(hi('PREFX2_PAGE'))           #24 ENTER is at $(n-1)ff, where n = instruction page
              260f c202  st   [$02]       10877  st([vCpuSelect])                #25 restore PREFX2 instruction page
              2610 9401  adda $01,y       10878  adda(1,Y)                       #26 restart instruction
              2611 e000  jmp  y,$00       10879  jmp(Y,'NEXTY')                  #27
              2612 00f1  ld   $f1         10880  ld(-30/2)                       #28
                                          10881
                                          10882  # SEXT implementation
                                          10883  label('sext#13')
sext#13:      2613 2119  anda [$19]       10884  anda([vAC+1])                   #13
              2614 ec19  bne  .sext#16    10885  bne('.sext#16')                 #14 check mask
              2615 012b  ld   [$2b]       10886  ld([sysArgs+7])                 #15
              2616 1403  ld   $03,y       10887  ld(hi('NEXTY'),Y)               #16
              2617 e000  jmp  y,$00       10888  jmp(Y,'NEXTY')                  #17
              2618 00f6  ld   $f6         10889  ld(-20/2)                       #18
                                          10890  label('.sext#16')
.sext#16:     2619 60ff  xora $ff         10891  xora(255)                       #16
              261a 8001  adda $01         10892  adda(1)                         #17 mask = (~mask) + 1
              261b 4119  ora  [$19]       10893  ora([vAC+1])                    #18
              261c c219  st   [$19]       10894  st([vAC+1])                     #19 set sign bits
              261d 1403  ld   $03,y       10895  ld(hi('NEXTY'),Y)               #20
              261e e000  jmp  y,$00       10896  jmp(Y,'NEXTY')                  #21
              261f 00f4  ld   $f4         10897  ld(-24/2)                       #22
                                          10898
                                          10899  # NOTW implementation
                                          10900  label('notw#13')
notw#13:      2620 112b  ld   [$2b],x     10901  ld([sysArgs+7],X)               #13 PREFX2 saves operand in [sysArgs+7]
              2621 1400  ld   $00,y       10902  ld(0,Y)                         #14
              2622 0500  ld   [x]         10903  ld([X])                         #15
              2623 60ff  xora $ff         10904  xora(255)                       #16
              2624 de00  st   [y,x++]     10905  st([Y,Xpp])                     #17
              2625 0500  ld   [x]         10906  ld([X])                         #18
              2626 60ff  xora $ff         10907  xora(255)                       #19
              2627 c600  st   [x]         10908  st([X])                         #20
              2628 1403  ld   $03,y       10909  ld(hi('REENTER'),Y)             #21
              2629 e0cb  jmp  y,$cb       10910  jmp(Y,'REENTER')                #22
              262a 00f3  ld   $f3         10911  ld(-26/2)                       #23
                                          10912
                                          10913  # NEGW implementation
                                          10914  label('negw#13')
negw#13:      262b 1400  ld   $00,y       10915  ld(0,Y)                         #13
              262c 112b  ld   [$2b],x     10916  ld([sysArgs+7],X)               #14 var addr
              262d 0500  ld   [x]         10917  ld([X])                         #15
              262e 60ff  xora $ff         10918  xora(255)                       #16
              262f 8001  adda $01         10919  adda(1)                         #17
              2630 f038  beq  .negw#20    10920  beq('.negw#20')                 #18
              2631 de00  st   [y,x++]     10921  st([Y,Xpp])                     #19
              2632 0500  ld   [x]         10922  ld([X])                         #20
              2633 60ff  xora $ff         10923  xora(255)                       #21
              2634 c600  st   [x]         10924  st([X])                         #22
              2635 1403  ld   $03,y       10925  ld(hi('REENTER'),Y)             #23
              2636 e0cb  jmp  y,$cb       10926  jmp(Y,'REENTER')                #24
              2637 00f2  ld   $f2         10927  ld(-28/2)                       #25
                                          10928  label('.negw#20')
.negw#20:     2638 0500  ld   [x]         10929  ld([X])                         #20
              2639 60ff  xora $ff         10930  xora(255)                       #21
              263a 8001  adda $01         10931  adda(1)                         #22
              263b c600  st   [x]         10932  st([X])                         #23
              263c 1403  ld   $03,y       10933  ld(hi('NEXTY'),Y)               #24
              263d e000  jmp  y,$00       10934  jmp(Y,'NEXTY')                  #25
              263e 00f2  ld   $f2         10935  ld(-28/2)                       #26
                                          10936
                                          10937  # ANDBA implementation
                                          10938  label('andba#13')
andba#13:     263f 0118  ld   [$18]       10939  ld([vAC])                       #13
              2640 2500  anda [x]         10940  anda([X])                       #14
              2641 c218  st   [$18]       10941  st([vAC])                       #15 vAC.lo &= var.lo
              2642 0000  ld   $00         10942  ld(0)                           #16
              2643 c219  st   [$19]       10943  st([vAC+1])                     #17 Store high result
              2644 1403  ld   $03,y       10944  ld(hi('NEXTY'),Y)               #18
              2645 e000  jmp  y,$00       10945  jmp(Y,'NEXTY')                  #19
              2646 00f5  ld   $f5         10946  ld(-22/2)                       #20
                                          10947
                                          10948  # ORBA implementation
                                          10949  label('orba#13')
orba#13:      2647 0118  ld   [$18]       10950  ld([vAC])                       #13
              2648 4500  ora  [x]         10951  ora([X])                        #14
              2649 c218  st   [$18]       10952  st([vAC])                       #15 vAC.lo |= var.lo
              264a 1403  ld   $03,y       10953  ld(hi('NEXTY'),Y)               #16
              264b e000  jmp  y,$00       10954  jmp(Y,'NEXTY')                  #17
              264c 00f6  ld   $f6         10955  ld(-20/2)                       #18
                                          10956
                                          10957  # XORBA implementation
                                          10958  label('xorba#13')
xorba#13:     264d 0118  ld   [$18]       10959  ld([vAC])                       #13
              264e 6500  xora [x]         10960  xora([X])                       #14
              264f c218  st   [$18]       10961  st([vAC])                       #15 vAC.lo ^= var.lo
              2650 1403  ld   $03,y       10962  ld(hi('NEXTY'),Y)               #16
              2651 e000  jmp  y,$00       10963  jmp(Y,'NEXTY')                  #17
              2652 00f6  ld   $f6         10964  ld(-20/2)                       #18
                                          10965
                                          10966  # FREQM implementation, (frequency control for static data in the correct format, i.e. MIDI)
                                          10967  label('freqm#13')
freqm#13:     2653 112b  ld   [$2b],x     10968  ld([sysArgs+7],X)               #13 chan var, (operand from PREFX2)
              2654 0500  ld   [x]         10969  ld([X])                         #14
              2655 2003  anda $03         10970  anda(3)                         #15
              2656 9401  adda $01,y       10971  adda(1,Y)                       #16
              2657 10fc  ld   $fc,x       10972  ld(0xFC,X)                      #17
              2658 0118  ld   [$18]       10973  ld([vAC])                       #18
              2659 de00  st   [y,x++]     10974  st([Y,Xpp])                     #19
              265a 0119  ld   [$19]       10975  ld([vAC+1])                     #20
              265b ce00  st   [y,x]       10976  st([Y,X])                       #21
              265c 1403  ld   $03,y       10977  ld(hi('NEXTY'),Y)               #22
              265d e000  jmp  y,$00       10978  jmp(Y,'NEXTY')                  #23
              265e 00f3  ld   $f3         10979  ld(-26/2)                       #24
                                          10980
                                          10981  # FREQA implementation
                                          10982  label('freqa#13')
freqa#13:     265f 0500  ld   [x]         10983  ld([X])                         #13
              2660 a001  suba $01         10984  suba(1)                         #14
              2661 2003  anda $03         10985  anda(3)                         #15
              2662 9401  adda $01,y       10986  adda(1,Y)                       #16
              2663 10fc  ld   $fc,x       10987  ld(0xFC,X)                      #17
              2664 0118  ld   [$18]       10988  ld([vAC])                       #18
              2665 de00  st   [y,x++]     10989  st([Y,Xpp])                     #19
              2666 0119  ld   [$19]       10990  ld([vAC+1])                     #20
              2667 ce00  st   [y,x]       10991  st([Y,X])                       #21
              2668 1403  ld   $03,y       10992  ld(hi('NEXTY'),Y)               #22
              2669 e000  jmp  y,$00       10993  jmp(Y,'NEXTY')                  #23
              266a 00f3  ld   $f3         10994  ld(-26/2)                       #24
                                          10995
                                          10996  # FREQI implementation
                                          10997  label('freqi#13')
freqi#13:     266b 2003  anda $03         10998  anda(3)                         #13 channel
              266c 9401  adda $01,y       10999  adda(1,Y)                       #14
              266d 10fc  ld   $fc,x       11000  ld(0xFC,X)                      #15
              266e 0118  ld   [$18]       11001  ld([vAC])                       #16
              266f de00  st   [y,x++]     11002  st([Y,Xpp])                     #17
              2670 0119  ld   [$19]       11003  ld([vAC+1])                     #18
              2671 ce00  st   [y,x]       11004  st([Y,X])                       #19
              2672 1403  ld   $03,y       11005  ld(hi('NEXTY'),Y)               #20
              2673 e000  jmp  y,$00       11006  jmp(Y,'NEXTY')                  #21
              2674 00f4  ld   $f4         11007  ld(-24/2)                       #22
                                          11008
                                          11009  # VOLM implementation, (volume control for static data in the correct format, i.e. MIDI)
                                          11010  label('volm#13')
volm#13:      2675 0500  ld   [x]         11011  ld([X])                         #13 chan var, (operand from PREFX2)
              2676 2003  anda $03         11012  anda(3)                         #14
              2677 9401  adda $01,y       11013  adda(1,Y)                       #15
              2678 10fa  ld   $fa,x       11014  ld(0xFA,X)                      #16
              2679 0118  ld   [$18]       11015  ld([vAC])                       #17
              267a ce00  st   [y,x]       11016  st([Y,X])                       #18
              267b 1403  ld   $03,y       11017  ld(hi('REENTER'),Y)             #19
              267c e0cb  jmp  y,$cb       11018  jmp(Y,'REENTER')                #20
              267d 00f4  ld   $f4         11019  ld(-24/2)                       #21
                                          11020
                                          11021  # VOLA implementation
                                          11022  label('vola#13')
vola#13:      267e 0500  ld   [x]         11023  ld([X])                         #13
              267f a001  suba $01         11024  suba(1)                         #14
              2680 2003  anda $03         11025  anda(3)                         #15
              2681 9401  adda $01,y       11026  adda(1,Y)                       #16
              2682 10fa  ld   $fa,x       11027  ld(0xFA,X)                      #17
              2683 003f  ld   $3f         11028  ld(63)                          #18
              2684 a118  suba [$18]       11029  suba([vAC])                     #19
              2685 8040  adda $40         11030  adda(64)                        #20
              2686 ce00  st   [y,x]       11031  st([Y,X])                       #21
              2687 1403  ld   $03,y       11032  ld(hi('NEXTY'),Y)               #22
              2688 e000  jmp  y,$00       11033  jmp(Y,'NEXTY')                  #23
              2689 00f3  ld   $f3         11034  ld(-26/2)                       #24
                                          11035
                                          11036  # MODA implementation
                                          11037  label('moda#13')
moda#13:      268a 0500  ld   [x]         11038  ld([X])                         #13
              268b a001  suba $01         11039  suba(1)                         #14
              268c 2003  anda $03         11040  anda(3)                         #15
              268d 9401  adda $01,y       11041  adda(1,Y)                       #16
              268e 10fb  ld   $fb,x       11042  ld(0xFB,X)                      #17
              268f 0118  ld   [$18]       11043  ld([vAC])                       #18
              2690 ce00  st   [y,x]       11044  st([Y,X])                       #19
              2691 1403  ld   $03,y       11045  ld(hi('NEXTY'),Y)               #20
              2692 e000  jmp  y,$00       11046  jmp(Y,'NEXTY')                  #21
              2693 00f4  ld   $f4         11047  ld(-24/2)                       #22
                                          11048
                                          11049  # MODI implementation
                                          11050  label('modi#13')
modi#13:      2694 2003  anda $03         11051  anda(3)                         #13
              2695 9401  adda $01,y       11052  adda(1,Y)                       #14
              2696 10fa  ld   $fa,x       11053  ld(0xFA,X)                      #15
              2697 dc00  st   $00,[y,x++] 11054  st(0,[Y,Xpp])                   #16
              2698 0118  ld   [$18]       11055  ld([vAC])                       #17
              2699 ce00  st   [y,x]       11056  st([Y,X])                       #18
              269a 1403  ld   $03,y       11057  ld(hi('REENTER'),Y)             #19
              269b e0cb  jmp  y,$cb       11058  jmp(Y,'REENTER')                #20
              269c 00f4  ld   $f4         11059  ld(-24/2)                       #21
                                          11060
                                          11061  # OSCZ implementation
                                          11062  label('oscz#13')
oscz#13:      269d 2003  anda $03         11063  anda(3)                         #13 channel
              269e 9401  adda $01,y       11064  adda(1,Y)                       #14
              269f 10fe  ld   $fe,x       11065  ld(0xFE,X)                      #15
              26a0 dc00  st   $00,[y,x++] 11066  st(0,[Y,Xpp])                   #16
              26a1 cc00  st   $00,[y,x]   11067  st(0,[Y,X])                     #17
              26a2 1403  ld   $03,y       11068  ld(hi('NEXTY'),Y)               #18
              26a3 e000  jmp  y,$00       11069  jmp(Y,'NEXTY')                  #19
              26a4 00f5  ld   $f5         11070  ld(-22/2)                       #20
                                          11071
                                          11072
                                          11073  # SMPCPY implementation
                                          11074  label('smpcpy#13')
smpcpy#13:    26a5 1400  ld   $00,y       11075  ld(0,Y)                         #13
              26a6 00f1  ld   $f1         11076  ld(min(0,maxTicks-60/2))        #14
              26a7 8115  adda [$15]       11077  adda([vTicks])                  #15
              26a8 e8db  blt  .smpcpy#18  11078  blt('.smpcpy#18')               #16 not enough time left, so retry
              26a9 0500  ld   [x]         11079  ld([X])                         #17 dst address = [dst var]
              26aa de00  st   [y,x++]     11080  st([Y,Xpp])                     #18
              26ab c2b0  st   [$b0]       11081  st([0xB0])                      #19
              26ac 0500  ld   [x]         11082  ld([X])                         #20
              26ad c2b1  st   [$b1]       11083  st([0xB1])                      #21
              26ae 1118  ld   [$18],x     11084  ld([vAC],X)                     #22 low byte of src address
              26af 1519  ld   [$19],y     11085  ld([vAC+1],Y)                   #23 high byte of arc address
              26b0 0d00  ld   [y,x]       11086  ld([Y,X])                       #24
              26b1 c21d  st   [$1d]       11087  st([vTmp])                      #25 packed sample, 4:4
              26b2 1407  ld   $07,y       11088  ld(soundTable>>8,Y)             #26
              26b3 20f0  anda $f0         11089  anda(0xF0)                      #27 high nibble
              26b4 5003  ora  $03,x       11090  ora(0x03,X)                     #28
              26b5 0d00  ld   [y,x]       11091  ld([Y,X])                       #29 high nibble >>2
              26b6 11b0  ld   [$b0],x     11092  ld([0xB0],X)                    #30 low byte dst address
              26b7 15b1  ld   [$b1],y     11093  ld([0xB1],Y)                    #31 high byte dst address
              26b8 ce00  st   [y,x]       11094  st([Y,X])                       #32 [0x0702 + i] = 6bit sample
              26b9 01b0  ld   [$b0]       11095  ld([0xB0])                      #33
              26ba 9004  adda $04,x       11096  adda(4,X)                       #34
              26bb 8008  adda $08         11097  adda(8)                         #35
              26bc c2b0  st   [$b0]       11098  st([0xB0])                      #36
              26bd 011d  ld   [$1d]       11099  ld([vTmp])                      #37 packed sample, 4:4
              26be 200f  anda $0f         11100  anda(0x0F)                      #38 low nibble
              26bf 8200  adda ac          11101  adda(AC)                        #39
              26c0 8200  adda ac          11102  adda(AC)                        #40 low nibble <<2
              26c1 ce00  st   [y,x]       11103  st([Y,X])                       #41 [0x0706 + i] = 6bit sample
              26c2 112b  ld   [$2b],x     11104  ld([sysArgs+7],X)               #42
              26c3 01b0  ld   [$b0]       11105  ld([0xB0])                      #43
              26c4 c600  st   [x]         11106  st([X])                         #44
              26c5 a002  suba $02         11107  suba(0x02)                      #45
              26c6 f0d8  beq  .smpcpy#48  11108  beq('.smpcpy#48')               #46 check for end sample
              26c7 0118  ld   [$18]       11109  ld([vAC])                       #47
              26c8 8001  adda $01         11110  adda(1)                         #48
              26c9 ecd3  bne  .smpcpy#51  11111  bne('.smpcpy#51')               #49
              26ca c218  st   [$18]       11112  st([vAC])                       #50
              26cb 0119  ld   [$19]       11113  ld([vAC+1])                     #51
              26cc 8001  adda $01         11114  adda(1)                         #52
              26cd c219  st   [$19]       11115  st([vAC+1])                     #53
              26ce 0022  ld   $22         11116  ld(hi('PREFX2_PAGE'))           #54 ENTER is at $(n-1)ff, where n = instruction page
              26cf c202  st   [$02]       11117  st([vCpuSelect])                #55 restore PREFX2 instruction page
              26d0 9401  adda $01,y       11118  adda(1,Y)                       #56 restart instruction
              26d1 e000  jmp  y,$00       11119  jmp(Y,'NEXTY')                  #57
              26d2 00e2  ld   $e2         11120  ld(-60/2)                       #58
                                          11121
                                          11122  label('.smpcpy#51')
.smpcpy#51:   26d3 0022  ld   $22         11123  ld(hi('PREFX2_PAGE'))           #51 ENTER is at $(n-1)ff, where n = instruction page
              26d4 c202  st   [$02]       11124  st([vCpuSelect])                #52 restore PREFX2 instruction page
              26d5 9401  adda $01,y       11125  adda(1,Y)                       #53 restart instruction
              26d6 e0cb  jmp  y,$cb       11126  jmp(Y,'REENTER')                #54
              26d7 00e3  ld   $e3         11127  ld(-58/2)                       #55
                                          11128
                                          11129  label('.smpcpy#48')
.smpcpy#48:   26d8 1403  ld   $03,y       11130  ld(hi('NEXTY'),Y)               #48
              26d9 e000  jmp  y,$00       11131  jmp(Y,'NEXTY')                  #49
              26da 00e6  ld   $e6         11132  ld(-52/2)                       #50
                                          11133
                                          11134  label('.smpcpy#18')
.smpcpy#18:   26db 0022  ld   $22         11135  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              26dc c202  st   [$02]       11136  st([vCpuSelect])                #19 restore PREFX2 instruction page
              26dd 9401  adda $01,y       11137  adda(1,Y)                       #20 retry instruction
              26de e000  jmp  y,$00       11138  jmp(Y,'NEXTY')                  #21
              26df 00f4  ld   $f4         11139  ld(-24/2)                       #22
                                          11140
                                          11141
                                          11142  # -------------------------------------------------------------
                                          11143  # vCPU instructions for comparisons between two 16-bit operands
                                          11144  # -------------------------------------------------------------
                                          11145  #
                                          11146  # vCPU's conditional branching (BCC) always compares vAC against 0,
                                          11147  # treating vAC as a two's complement 16-bit number. When we need to
                                          11148  # compare two arbitrary numnbers we normally first take their difference
                                          11149  # with SUBW.  However, when this difference is too large, the subtraction
                                          11150  # overflows and we get the wrong outcome. To get it right over the
                                          11151  # entire range, an elaborate sequence is needed. TinyBASIC uses this
                                          11152  # blurp for its relational operators. (It compares stack variable $02
                                          11153  # with zero page variable $3a.)
                                          11154  #
                                          11155  #       0461  ee 02            LDLW  $02
                                          11156  #       0463  fc 3a            XORW  $3a
                                          11157  #       0465  35 53 6a         BGE   $046c
                                          11158  #       0468  ee 02            LDLW  $02
                                          11159  #       046a  90 6e            BRA   $0470
                                          11160  #       046c  ee 02            LDLW  $02
                                          11161  #       046e  b8 3a            SUBW  $3a
                                          11162  #       0470  35 56 73         BLE   $0475
                                          11163  #
                                          11164  # The CMPHS and CMPHU instructions were introduced to simplify this.
                                          11165  # They inspect both operands to see if there is an overflow risk. If
                                          11166  # so, they modify vAC such that their difference gets smaller, while
                                          11167  # preserving the relation between the two operands. After that, the
                                          11168  # SUBW instruction can't overflow and we achieve a correct comparison.
                                          11169  # Use CMPHS for signed comparisons and CMPHU for unsigned. With these,
                                          11170  # the sequence above becomes:
                                          11171  #
                                          11172  #       0461  ee 02            LDLW  $02
                                          11173  #       0463  1f 3b            CMPHS $3b        Note: high byte of operand
                                          11174  #       0465  b8 3a            SUBW  $3a
                                          11175  #       0467  35 56 73         BLE   $0475
                                          11176  #
                                          11177  # CMPHS/CMPHU don't make much sense other than in combination with
                                          11178  # SUBW. These modify vACH, if needed, as given in the following table:
                                          11179  #
                                          11180  #       vACH  varH  |     vACH
                                          11181  #       bit7  bit7  | CMPHS  CMPHU
                                          11182  #       ---------------------------
                                          11183  #         0     0   |  vACH   vACH      no change needed
                                          11184  #         0     1   | varH+1 varH-1     narrowing the range
                                          11185  #         1     0   | varH-1 varH+1     narrowing the range
                                          11186  #         1     1   |  vACH   vACH      no change needed
                                          11187  #       ---------------------------
                                          11188
                                          11189  # CMPHS implementation
                                          11190  label('cmphs#13')
cmphs#13:     26e0 0500  ld   [x]         11191  ld([X])                         #13
              26e1 6119  xora [$19]       11192  xora([vAC+1])                   #14
              26e2 f4f4  bge  .cmphu#17   11193  bpl('.cmphu#17')                #15 Skip if same sign
              26e3 0119  ld   [$19]       11194  ld([vAC+1])                     #16
              26e4 e8e7  blt  $26e7       11195  bmi(pc()+3)                     #17
              26e5 fce8  bra  .cmphs#20   11196  bra(pc()+3)                     #18
                                          11197
                                          11198  label('.cmphs#19')
.cmphs#19:    26e6 0001  ld   $01         11199  ld(+1)                          #19    vAC < variable
              26e7 00ff  ld   $ff         11200  ld(-1)                          #19(!) vAC > variable
                                          11201
                                          11202  label('.cmphs#20')
.cmphs#20:    26e8 8500  adda [x]         11203  adda([X])                       #20
              26e9 c219  st   [$19]       11204  st([vAC+1])                     #21
              26ea 1403  ld   $03,y       11205  ld(hi('NEXTY'),Y)               #22
              26eb e000  jmp  y,$00       11206  jmp(Y,'NEXTY')                  #23
              26ec 00f3  ld   $f3         11207  ld(-26/2)                       #24
                                          11208
                                          11209  # CMPHU implementation
                                          11210  label('cmphu#13')
cmphu#13:     26ed 0500  ld   [x]         11211  ld([X])                         #13
              26ee 6119  xora [$19]       11212  xora([vAC+1])                   #14
              26ef f4f4  bge  .cmphu#17   11213  bpl('.cmphu#17')                #15 Skip if same sign
              26f0 0119  ld   [$19]       11214  ld([vAC+1])                     #16
              26f1 e8e6  blt  .cmphs#19   11215  bmi('.cmphs#19')                #17
              26f2 fce8  bra  .cmphs#20   11216  bra('.cmphs#20')                #18
              26f3 00ff  ld   $ff         11217  ld(-1)                          #19    vAC > variable
                                          11218
                                          11219  # No-operation for CMPHS/CMPHU when high bits are equal
                                          11220  label('.cmphu#17')
.cmphu#17:    26f4 1403  ld   $03,y       11221  ld(hi('REENTER'),Y)             #17
              26f5 e0cb  jmp  y,$cb       11222  jmp(Y,'REENTER')                #18
              26f6 00f5  ld   $f5         11223  ld(-22/2)                       #19
                                          11224
                                          11225
              26f7 0200  nop              11226  fillers(until=0xff)
              26f8 0200  nop
              26f9 0200  nop
              * 8 times
              26ff 0200  nop              11227  align(0x100, size=0x100)
                                          11228
                                          11229  #-----------------------------------------------------------------------
                                          11230  #       PREFX1 implementation page, (0x2700)
                                          11231  #-----------------------------------------------------------------------
                                          11232  #
                                          11233  # NOTE implementation: vAC = ROM:[NotesTable + vAC.lo*2], 22 + 46 cycles
                                          11234  label('note#13')
note#13:      2700 c21d  st   [$1d]       11235  st([vTmp])                      #13 low byte of low note return address
              2701 00f7  ld   $f7         11236  ld(min(0,maxTicks-48/2))        #14
              2702 8115  adda [$15]       11237  adda([vTicks])                  #15
              2703 e816  blt  .note#18    11238  blt('.note#18')                 #16 not enough time left, so retry
              2704 0027  ld   $27         11239  ld(hi('note#13'))               #17
              2705 c2c1  st   [$c1]       11240  st([0xC1])                      #18
              2706 1409  ld   $09,y       11241  ld(hi('noteTrampoline'),Y)      #19
              2707 0118  ld   [$18]       11242  ld([vAC])                       #20 vAC.lo = note index
              2708 8200  adda ac          11243  adda(AC)                        #21 vAC.lo*2, (low note byte)
              2709 e0c0  jmp  y,$c0       11244  jmp(Y,'noteTrampoline')         #22
              270a c219  st   [$19]       11245  st([vAC+1])                     #23 vAC.hi = vAC.lo*2
                                          11246  label('.note#30')
.note#30:     270b c218  st   [$18]       11247  st([vAC])                       #30 vAC.lo = note.lo
              270c 0012  ld   $12         11248  ld('.note#43')                  #31
              270d c21d  st   [$1d]       11249  st([vTmp])                      #32 low byte of high note return address
              270e 1409  ld   $09,y       11250  ld(hi('noteTrampoline'),Y)      #33
              270f 0119  ld   [$19]       11251  ld([vAC+1])                     #34
              2710 e0c0  jmp  y,$c0       11252  jmp(Y,'noteTrampoline')         #35
              2711 8001  adda $01         11253  adda(1)                         #36 vAC.lo*2 + 1, (high note byte)
                                          11254  label('.note#43')
.note#43:     2712 c219  st   [$19]       11255  st([vAC+1])                     #43
              2713 1403  ld   $03,y       11256  ld(hi('NEXTY'),Y)               #44
              2714 e000  jmp  y,$00       11257  jmp(Y,'NEXTY')                  #45
              2715 00e8  ld   $e8         11258  ld(-48/2)                       #46
                                          11259  label('.note#18')
.note#18:     2716 0023  ld   $23         11260  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2717 c202  st   [$02]       11261  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2718 9401  adda $01,y       11262  adda(1,Y)                       #20 retry instruction
              2719 e000  jmp  y,$00       11263  jmp(Y,'NEXTY')                  #21
              271a 00f4  ld   $f4         11264  ld(-24/2)                       #22
                                          11265
                                          11266  # MIDI implementation: vAC = ROM:[NotesTable + (vAC.lo - 11)*2], 22 + 48 cycles
                                          11267  label('midi#13')
midi#13:      271b c21d  st   [$1d]       11268  st([vTmp])                      #13 low byte of low midi return address
              271c 00f6  ld   $f6         11269  ld(min(0,maxTicks-50/2))        #14
              271d 8115  adda [$15]       11270  adda([vTicks])                  #15
              271e e832  blt  .midi#18    11271  blt('.midi#18')                 #16 not enough time left, so retry
              271f 0027  ld   $27         11272  ld(hi('midi#13'))               #17
              2720 c2c1  st   [$c1]       11273  st([0xC1])                      #18
              2721 1409  ld   $09,y       11274  ld(hi('noteTrampoline'),Y)      #19
              2722 0118  ld   [$18]       11275  ld([vAC])                       #20 vAC.lo = midi index
              2723 a00b  suba $0b         11276  suba(11)                        #21 vAC.lo -= 11
              2724 8200  adda ac          11277  adda(AC)                        #22 vAC.lo*2, (low midi byte)
              2725 e0c0  jmp  y,$c0       11278  jmp(Y,'noteTrampoline')         #23
              2726 c219  st   [$19]       11279  st([vAC+1])                     #24 vAC.hi = vAC.lo*2
                                          11280  label('.midi#31')
.midi#31:     2727 c218  st   [$18]       11281  st([vAC])                       #31 vAC.lo = midi.lo
              2728 002e  ld   $2e         11282  ld('.midi#44')                  #32
              2729 c21d  st   [$1d]       11283  st([vTmp])                      #33 low byte of high midi return address
              272a 1409  ld   $09,y       11284  ld(hi('noteTrampoline'),Y)      #34
              272b 0119  ld   [$19]       11285  ld([vAC+1])                     #35
              272c e0c0  jmp  y,$c0       11286  jmp(Y,'noteTrampoline')         #36
              272d 8001  adda $01         11287  adda(1)                         #37 vAC.lo*2 + 1, (high midi byte)
                                          11288  label('.midi#44')
.midi#44:     272e c219  st   [$19]       11289  st([vAC+1])                     #44
              272f 1403  ld   $03,y       11290  ld(hi('REENTER'),Y)             #45
              2730 e0cb  jmp  y,$cb       11291  jmp(Y,'REENTER')                #46
              2731 00e7  ld   $e7         11292  ld(-50/2)                       #47
                                          11293  label('.midi#18')
.midi#18:     2732 0023  ld   $23         11294  ld(hi('PREFX1_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2733 c202  st   [$02]       11295  st([vCpuSelect])                #19 restore PREFX1 instruction page
              2734 9401  adda $01,y       11296  adda(1,Y)                       #20 retry instruction
              2735 e000  jmp  y,$00       11297  jmp(Y,'NEXTY')                  #21
              2736 00f4  ld   $f4         11298  ld(-24/2)                       #22
                                          11299
                                          11300  # XLA implementation, (lb3361)
                                          11301  label('xla#13')
xla#13:       2737 c21d  st   [$1d]       11302  st([vTmp])                      #13
              2738 011a  ld   [$1a]       11303  ld([vLR])                       #14
              2739 c218  st   [$18]       11304  st([vAC])                       #15
              273a 011d  ld   [$1d]       11305  ld([vTmp])                      #16
              273b c21a  st   [$1a]       11306  st([vLR])                       #17
              273c 0119  ld   [$19]       11307  ld([vAC+1])                     #18
              273d c21d  st   [$1d]       11308  st([vTmp])                      #19
              273e 011b  ld   [$1b]       11309  ld([vLR+1])                     #20
              273f c219  st   [$19]       11310  st([vAC+1])                     #21
              2740 011d  ld   [$1d]       11311  ld([vTmp])                      #22
              2741 c21b  st   [$1b]       11312  st([vLR+1])                     #23
              2742 1403  ld   $03,y       11313  ld(hi('NEXTY'),Y)               #24
              2743 e000  jmp  y,$00       11314  jmp(Y,'NEXTY')                  #25
              2744 00f2  ld   $f2         11315  ld(-28/2)                       #26
                                          11316
                                          11317  # RANDW implementation: uses Marcel's algorithm from SYS_Random_34
                                          11318  label('randw#13')
randw#13:     2745 010e  ld   [$0e]       11319  ld([frameCount])                #13
              2746 6107  xora [$07]       11320  xora([entropy+1])               #14
              2747 610f  xora [$0f]       11321  xora([serialRaw])               #15
              2748 8106  adda [$06]       11322  adda([entropy+0])               #16
              2749 c206  st   [$06]       11323  st([entropy+0])                 #17
              274a c218  st   [$18]       11324  st([vAC+0])                     #18
              274b 8116  adda [$16]       11325  adda([vPC])                     #19
              274c e84f  blt  $274f       11326  bmi(pc()+3)                     #20
              274d fc50  bra  $2750       11327  bra(pc()+3)                     #21
              274e 6053  xora $53         11328  xora(64+16+2+1)                 #22
              274f 606c  xora $6c         11329  xora(64+32+8+4)                 #22(!)
              2750 8107  adda [$07]       11330  adda([entropy+1])               #23
              2751 c207  st   [$07]       11331  st([entropy+1])                 #24
              2752 c219  st   [$19]       11332  st([vAC+1])                     #25
              2753 1403  ld   $03,y       11333  ld(hi('NEXTY'),Y)               #26
              2754 e000  jmp  y,$00       11334  jmp(Y,'NEXTY')                  #27
              2755 00f1  ld   $f1         11335  ld(-30/2)                       #28
                                          11336
                                          11337  # LDPX implementation
                                          11338  label('ldpx#13')
ldpx#13:      2756 0119  ld   [$19]       11339  ld([vAC+1])                     #13 y
              2757 8119  adda [$19]       11340  adda([vAC+1])                   #14 y*2
              2758 1200  ld   ac,x        11341  ld(AC,X)                        #15
              2759 1401  ld   $01,y       11342  ld(1,Y)                         #16 Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              275a 0d00  ld   [y,x]       11343  ld([Y,X])                       #17
              275b 1600  ld   ac,y        11344  ld(AC,Y)                        #18 Y = [Y,X]
              275c 1118  ld   [$18],x     11345  ld([vAC],X)                     #19
              275d 0d00  ld   [y,x]       11346  ld([Y,X])                       #20 colour = [Y,X]
              275e c218  st   [$18]       11347  st([vAC])                       #21
              275f 0000  ld   $00         11348  ld(0)                           #22
              2760 c219  st   [$19]       11349  st([vAC+1])                     #23
              2761 1403  ld   $03,y       11350  ld(hi('NEXTY'),Y)               #24
              2762 e000  jmp  y,$00       11351  jmp(Y,'NEXTY')                  #25
              2763 00f2  ld   $f2         11352  ld(-28/2)                       #26
                                          11353
                                          11354
                                          11355  # ABSW implementation
                                          11356  label('absw#13')
absw#13:      2764 e868  blt  .absw#15    11357  bmi('.absw#15')                 #13
              2765 1403  ld   $03,y       11358  ld(hi('NEXTY'),Y)               #14
              2766 e000  jmp  y,$00       11359  jmp(Y,'NEXTY')                  #15
              2767 00f7  ld   $f7         11360  ld(-18/2)                       #16
                                          11361
                                          11362  label('.absw#15')
.absw#15:     2768 0118  ld   [$18]       11363  ld([vAC])                       #15
              2769 60ff  xora $ff         11364  xora(0xFF)                      #16
              276a 8001  adda $01         11365  adda(1)                         #17
              276b f073  beq  .absw#20    11366  beq('.absw#20')                 #18
              276c c218  st   [$18]       11367  st([vAC])                       #19
              276d 0119  ld   [$19]       11368  ld([vAC+1])                     #20
              276e 60ff  xora $ff         11369  xora(255)                       #21
              276f c219  st   [$19]       11370  st([vAC+1])                     #22
              2770 1403  ld   $03,y       11371  ld(hi('REENTER'),Y)             #23
              2771 e0cb  jmp  y,$cb       11372  jmp(Y,'REENTER')                #24
              2772 00f2  ld   $f2         11373  ld(-28/2)                       #25
                                          11374
                                          11375  label('.absw#20')
.absw#20:     2773 0119  ld   [$19]       11376  ld([vAC+1])                     #20
              2774 60ff  xora $ff         11377  xora(255)                       #21
              2775 8001  adda $01         11378  adda(1)                         #22
              2776 c219  st   [$19]       11379  st([vAC+1])                     #23
              2777 1403  ld   $03,y       11380  ld(hi('NEXTY'),Y)               #24
              2778 e000  jmp  y,$00       11381  jmp(Y,'NEXTY')                  #25
              2779 00f2  ld   $f2         11382  ld(-28/2)                       #26
                                          11383
                                          11384
                                          11385  # SGNW implementation
                                          11386  label('sgnw#13')
sgnw#13:      277a e880  blt  .sgnw#15    11387  bmi('.sgnw#15')                 #13
              277b 4118  ora  [$18]       11388  ora([vAC])                      #14
              277c ec86  bne  .sgnw#17    11389  bne('.sgnw#17')                 #15
              277d 1403  ld   $03,y       11390  ld(hi('NEXTY'),Y)               #16 sgn(vAC) = 0
              277e e000  jmp  y,$00       11391  jmp(Y,'NEXTY')                  #17
              277f 00f6  ld   $f6         11392  ld(-20/2)                       #18
                                          11393
                                          11394  label('.sgnw#15')
.sgnw#15:     2780 00ff  ld   $ff         11395  ld(0xFF)                        #15
              2781 c218  st   [$18]       11396  st([vAC])                       #16
              2782 c219  st   [$19]       11397  st([vAC+1])                     #17
              2783 1403  ld   $03,y       11398  ld(hi('NEXTY'),Y)               #18 sgn(vAC) = -1
              2784 e000  jmp  y,$00       11399  jmp(Y,'NEXTY')                  #19
              2785 00f5  ld   $f5         11400  ld(-22/2)                       #20
                                          11401
                                          11402  label('.sgnw#17')
.sgnw#17:     2786 0001  ld   $01         11403  ld(1)                           #17
              2787 c218  st   [$18]       11404  st([vAC])                       #18
              2788 0000  ld   $00         11405  ld(0)                           #19
              2789 c219  st   [$19]       11406  st([vAC+1])                     #20
              278a 1403  ld   $03,y       11407  ld(hi('REENTER'),Y)             #21 sgn(vAC) = 1
              278b e0cb  jmp  y,$cb       11408  jmp(Y,'REENTER')                #22
              278c 00f3  ld   $f3         11409  ld(-26/2)                       #23
                                          11410
                                          11411
                                          11412  # MULB3 implementation
                                          11413  label('mulb3#13')
mulb3#13:     278d 0118  ld   [$18]       11414  ld([vAC])                       #13
              278e 8200  adda ac          11415  adda(AC)                        #14
              278f 8118  adda [$18]       11416  adda([vAC])                     #15
              2790 c218  st   [$18]       11417  st([vAC])                       #16
              2791 0000  ld   $00         11418  ld(0)                           #17
              2792 c219  st   [$19]       11419  st([vAC+1])                     #18
              2793 1403  ld   $03,y       11420  ld(hi('REENTER'),Y)             #19
              2794 e0cb  jmp  y,$cb       11421  jmp(Y,'REENTER')                #20
              2795 00f4  ld   $f4         11422  ld(-24/2)                       #21
                                          11423
                                          11424  # MULB5 implementation
                                          11425  label('mulb5#13')
mulb5#13:     2796 0118  ld   [$18]       11426  ld([vAC])                       #13
              2797 8200  adda ac          11427  adda(AC)                        #14
              2798 8200  adda ac          11428  adda(AC)                        #15
              2799 8118  adda [$18]       11429  adda([vAC])                     #16
              279a c218  st   [$18]       11430  st([vAC])                       #17
              279b 0000  ld   $00         11431  ld(0)                           #18
              279c c219  st   [$19]       11432  st([vAC+1])                     #19
              279d 1403  ld   $03,y       11433  ld(hi('NEXTY'),Y)               #20
              279e e000  jmp  y,$00       11434  jmp(Y,'NEXTY')                  #21
              279f 00f4  ld   $f4         11435  ld(-24/2)                       #22
                                          11436
                                          11437  # MULB6 implementation
                                          11438  label('mulb6#13')
mulb6#13:     27a0 0118  ld   [$18]       11439  ld([vAC])                       #13
              27a1 8200  adda ac          11440  adda(AC)                        #14
              27a2 8200  adda ac          11441  adda(AC)                        #15
              27a3 8118  adda [$18]       11442  adda([vAC])                     #16
              27a4 8118  adda [$18]       11443  adda([vAC])                     #17
              27a5 c218  st   [$18]       11444  st([vAC])                       #18
              27a6 0000  ld   $00         11445  ld(0)                           #19
              27a7 c219  st   [$19]       11446  st([vAC+1])                     #20
              27a8 1403  ld   $03,y       11447  ld(hi('REENTER'),Y)             #21
              27a9 e0cb  jmp  y,$cb       11448  jmp(Y,'REENTER')                #22
              27aa 00f3  ld   $f3         11449  ld(-26/2)                       #23
                                          11450
                                          11451  # MULB7 implementation, (overflows at the same rate as MULB8)
                                          11452  label('mulb7#13')
mulb7#13:     27ab 0118  ld   [$18]       11453  ld([vAC])                       #13
              27ac 8200  adda ac          11454  adda(AC)                        #14
              27ad 8200  adda ac          11455  adda(AC)                        #15
              27ae 8200  adda ac          11456  adda(AC)                        #16
              27af a118  suba [$18]       11457  suba([vAC])                     #17
              27b0 c218  st   [$18]       11458  st([vAC])                       #18
              27b1 0000  ld   $00         11459  ld(0)                           #19
              27b2 c219  st   [$19]       11460  st([vAC+1])                     #20
              27b3 1403  ld   $03,y       11461  ld(hi('REENTER'),Y)             #21
              27b4 e0cb  jmp  y,$cb       11462  jmp(Y,'REENTER')                #22
              27b5 00f3  ld   $f3         11463  ld(-26/2)                       #23
                                          11464
                                          11465  # MULB8 implementation
                                          11466  label('mulb8#13')
mulb8#13:     27b6 0118  ld   [$18]       11467  ld([vAC])                       #13
              27b7 8200  adda ac          11468  adda(AC)                        #14
              27b8 8200  adda ac          11469  adda(AC)                        #15
              27b9 8200  adda ac          11470  adda(AC)                        #16
              27ba c218  st   [$18]       11471  st([vAC])                       #17
              27bb 0000  ld   $00         11472  ld(0)                           #18
              27bc c219  st   [$19]       11473  st([vAC+1])                     #19
              27bd 1403  ld   $03,y       11474  ld(hi('NEXTY'),Y)               #20
              27be e000  jmp  y,$00       11475  jmp(Y,'NEXTY')                  #21
              27bf 00f4  ld   $f4         11476  ld(-24/2)                       #22
                                          11477
                                          11478  # MULB9 implementation
                                          11479  label('mulb9#13')
mulb9#13:     27c0 0118  ld   [$18]       11480  ld([vAC])                       #13
              27c1 8200  adda ac          11481  adda(AC)                        #14
              27c2 8200  adda ac          11482  adda(AC)                        #15
              27c3 8200  adda ac          11483  adda(AC)                        #16
              27c4 8118  adda [$18]       11484  adda([vAC])                     #17
              27c5 c218  st   [$18]       11485  st([vAC])                       #18
              27c6 0000  ld   $00         11486  ld(0)                           #19
              27c7 c219  st   [$19]       11487  st([vAC+1])                     #20
              27c8 1403  ld   $03,y       11488  ld(hi('REENTER'),Y)             #21
              27c9 e0cb  jmp  y,$cb       11489  jmp(Y,'REENTER')                #22
              27ca 00f3  ld   $f3         11490  ld(-26/2)                       #23
                                          11491
                                          11492  # MULB10 implementation
                                          11493  label('mulb10#13')
mulb10#13:    27cb 0118  ld   [$18]       11494  ld([vAC])                       #13
              27cc 8200  adda ac          11495  adda(AC)                        #14
              27cd 8200  adda ac          11496  adda(AC)                        #15
              27ce 8200  adda ac          11497  adda(AC)                        #16
              27cf 8118  adda [$18]       11498  adda([vAC])                     #17
              27d0 8118  adda [$18]       11499  adda([vAC])                     #18
              27d1 c218  st   [$18]       11500  st([vAC])                       #19
              27d2 0000  ld   $00         11501  ld(0)                           #20
              27d3 c219  st   [$19]       11502  st([vAC+1])                     #21
              27d4 1403  ld   $03,y       11503  ld(hi('NEXTY'),Y)               #22
              27d5 e000  jmp  y,$00       11504  jmp(Y,'NEXTY')                  #23
              27d6 00f3  ld   $f3         11505  ld(-26/2)                       #24
                                          11506
                                          11507  # LSL8 implementation
                                          11508  label('lsl8#13')
lsl8#13:      27d7 1200  ld   ac,x        11509  ld(AC,X)                        #13
              27d8 0500  ld   [x]         11510  ld([X])                         #14
              27d9 c219  st   [$19]       11511  st([vAC+1])                     #15
              27da 0000  ld   $00         11512  ld(0)                           #16
              27db c218  st   [$18]       11513  st([vAC])                       #17
              27dc 1403  ld   $03,y       11514  ld(hi('NEXTY'),Y)               #18
              27dd e000  jmp  y,$00       11515  jmp(Y,'NEXTY')                  #19
              27de 00f5  ld   $f5         11516  ld(-22/2)                       #20
                                          11517
                                          11518  # WAITVB implementation
                                          11519  label('waitvb#13')
waitvb#13:    27df 0109  ld   [$09]       11520  ld([videoY])                    #13
              27e0 60b3  xora $b3         11521  xora(videoYline0)               #14
              27e1 f0e7  beq  .waitvb#17  11522  beq('.waitvb#17')               #15
              27e2 0023  ld   $23         11523  ld(hi('PREFX1_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              27e3 c202  st   [$02]       11524  st([vCpuSelect])                #17 restore PREFX1 instruction page
              27e4 9401  adda $01,y       11525  adda(1,Y)                       #18 retry instruction
              27e5 e000  jmp  y,$00       11526  jmp(Y,'NEXTY')                  #19
              27e6 00f5  ld   $f5         11527  ld(-22/2)                       #20
                                          11528  label('.waitvb#17')
.waitvb#17:   27e7 1403  ld   $03,y       11529  ld(hi('REENTER'),Y)             #17
              27e8 e0cb  jmp  y,$cb       11530  jmp(Y,'REENTER')                #18
              27e9 00f5  ld   $f5         11531  ld(-22/2)                       #19
                                          11532
                                          11533  # WAITVV implementation
                                          11534  label('waitvv#13')
waitvv#13:    27ea 012d  ld   [$2d]       11535  ld([jiffiesTick])               #13
              27eb 6500  xora [x]         11536  xora([X])                       #14
              27ec ecf2  bne  .waitvv#17  11537  bne('.waitvv#17')               #15
              27ed 0022  ld   $22         11538  ld(hi('PREFX2_PAGE'))           #16 ENTER is at $(n-1)ff, where n = instruction page
              27ee c202  st   [$02]       11539  st([vCpuSelect])                #17 restore PREFX2 instruction page
              27ef 9401  adda $01,y       11540  adda(1,Y)                       #18 retry instruction
              27f0 e000  jmp  y,$00       11541  jmp(Y,'NEXTY')                  #19
              27f1 00f5  ld   $f5         11542  ld(-22/2)                       #20
                                          11543  label('.waitvv#17')
.waitvv#17:   27f2 012d  ld   [$2d]       11544  ld([jiffiesTick])               #17
              27f3 c600  st   [x]         11545  st([X])                         #18
              27f4 1403  ld   $03,y       11546  ld(hi('REENTER'),Y)             #19
              27f5 e0cb  jmp  y,$cb       11547  jmp(Y,'REENTER')                #20
              27f6 00f4  ld   $f4         11548  ld(-24/2)                       #21
                                          11549
                                          11550
              27f7 0200  nop              11551  fillers(until=0xff)
              27f8 0200  nop
              27f9 0200  nop
              * 8 times
              27ff 0200  nop              11552  align(0x100, size=0x100)
                                          11553
                                          11554  #-----------------------------------------------------------------------
                                          11555  #       More vCPU instruction implementations, (0x2800)
                                          11556  #-----------------------------------------------------------------------
                                          11557  #
                                          11558  # ADDVI implementation
                                          11559  label('addvi#13')
addvi#13:     2800 1517  ld   [$17],y     11560  ld([vPC+1],Y)                   #13 vPC.hi
              2801 de00  st   [y,x++]     11561  st([Y,Xpp])                     #14 X++
              2802 c22a  st   [$2a]       11562  st([sysArgs+6])                 #15 immediate 8bit
              2803 00f4  ld   $f4         11563  ld(min(0,maxTicks-54/2))        #16
              2804 8115  adda [$15]       11564  adda([vTicks])                  #17
              2805 e829  blt  .addvi#20   11565  blt('.addvi#20')                #18 not enough time left, so retry
              2806 0d00  ld   [y,x]       11566  ld([Y,X])                       #19
              2807 de00  st   [y,x++]     11567  st([Y,Xpp])                     #20 X++
              2808 c22b  st   [$2b]       11568  st([sysArgs+7])                 #21 dst var addr
              2809 0d00  ld   [y,x]       11569  ld([Y,X])                       #22
              280a 1200  ld   ac,x        11570  ld(AC,X)                        #23 src addr
              280b 1400  ld   $00,y       11571  ld(0,Y)                         #24
              280c 0500  ld   [x]         11572  ld([X])                         #25
              280d c218  st   [$18]       11573  st([vAC])                       #26 vAC.lo = src.lo
              280e de00  st   [y,x++]     11574  st([Y,Xpp])                     #27
              280f 0500  ld   [x]         11575  ld([X])                         #28
              2810 c219  st   [$19]       11576  st([vAC+1])                     #29 vAC.hi = src.hi
              2811 0118  ld   [$18]       11577  ld([vAC])                       #30
              2812 812a  adda [$2a]       11578  adda([sysArgs+6])               #31
              2813 c218  st   [$18]       11579  st([vAC])                       #32 vAC.lo = src0.lo + src1.lo
              2814 e818  blt  .addvi#35   11580  bmi('.addvi#35')                #33 calculate carry
              2815 a12a  suba [$2a]       11581  suba([sysArgs+6])               #34
              2816 fc1a  bra  .addvi#37   11582  bra('.addvi#37')                #35
              2817 412a  ora  [$2a]       11583  ora([sysArgs+6])                #36 carry in bit 7
                                          11584
                                          11585  label('.addvi#35')
.addvi#35:    2818 212a  anda [$2a]       11586  anda([sysArgs+6])               #35 carry in bit 7
              2819 0200  nop              11587  nop()                           #36
                                          11588
                                          11589  label('.addvi#37')
.addvi#37:    281a 3080  anda $80,x       11590  anda(0x80,X)                    #37
              281b 0500  ld   [x]         11591  ld([X])                         #38 carry in bit 0
              281c 8119  adda [$19]       11592  adda([vAC+1])                   #39
              281d c219  st   [$19]       11593  st([vAC+1])                     #40
              281e 112b  ld   [$2b],x     11594  ld([sysArgs+7],X)               #41
              281f 0118  ld   [$18]       11595  ld([vAC])                       #42
              2820 de00  st   [y,x++]     11596  st([Y,Xpp])                     #43
              2821 0119  ld   [$19]       11597  ld([vAC+1])                     #44
              2822 ce00  st   [y,x]       11598  st([Y,X])                       #45
              2823 0116  ld   [$16]       11599  ld([vPC])                       #46
              2824 8002  adda $02         11600  adda(2)                         #47
              2825 c216  st   [$16]       11601  st([vPC])                       #48
              2826 1403  ld   $03,y       11602  ld(hi('REENTER'),Y)             #49
              2827 e0cb  jmp  y,$cb       11603  jmp(Y,'REENTER')                #50
              2828 00e5  ld   $e5         11604  ld(-54/2)                       #51
                                          11605
                                          11606  label('.addvi#20')
.addvi#20:    2829 0116  ld   [$16]       11607  ld([vPC])                       #20 retry instruction
              282a a002  suba $02         11608  suba(2)                         #21
              282b c216  st   [$16]       11609  st([vPC])                       #22
              282c 1403  ld   $03,y       11610  ld(hi('REENTER'),Y)             #23
              282d e0cb  jmp  y,$cb       11611  jmp(Y,'REENTER')                #24
              282e 00f2  ld   $f2         11612  ld(-28/2)                       #25
                                          11613
                                          11614
                                          11615  # SUBVI implementation
                                          11616  label('subvi#13')
subvi#13:     282f 1517  ld   [$17],y     11617  ld([vPC+1],Y)                   #13 vPC.hi
              2830 de00  st   [y,x++]     11618  st([Y,Xpp])                     #14 X++
              2831 c22a  st   [$2a]       11619  st([sysArgs+6])                 #15 immediate 8bit
              2832 00f5  ld   $f5         11620  ld(min(0,maxTicks-52/2))        #16
              2833 8115  adda [$15]       11621  adda([vTicks])                  #17
              2834 e858  blt  .subvi#20   11622  blt('.subvi#20')                #18 not enough time left, so retry
              2835 0d00  ld   [y,x]       11623  ld([Y,X])                       #19
              2836 de00  st   [y,x++]     11624  st([Y,Xpp])                     #20 X++
              2837 c22b  st   [$2b]       11625  st([sysArgs+7])                 #21 dst var addr
              2838 0d00  ld   [y,x]       11626  ld([Y,X])                       #22
              2839 1200  ld   ac,x        11627  ld(AC,X)                        #23 src addr
              283a 1400  ld   $00,y       11628  ld(0,Y)                         #24
              283b 0500  ld   [x]         11629  ld([X])                         #25
              283c c218  st   [$18]       11630  st([vAC])                       #26 vAC.lo = src.lo
              283d de00  st   [y,x++]     11631  st([Y,Xpp])                     #27
              283e 0500  ld   [x]         11632  ld([X])                         #28
              283f c219  st   [$19]       11633  st([vAC+1])                     #29 vAC.hi = src.hi
              2840 0118  ld   [$18]       11634  ld([vAC])                       #30
              2841 e846  blt  .subvi#33   11635  bmi('.subvi#33')                #31
              2842 a12a  suba [$2a]       11636  suba([sysArgs+6])               #32
              2843 c218  st   [$18]       11637  st([vAC])                       #33 store low result
              2844 fc49  bra  .subvi#36   11638  bra('.subvi#36')                #34
              2845 412a  ora  [$2a]       11639  ora([sysArgs+6])                #35 borrow in bit 7
                                          11640
                                          11641  label('.subvi#33')
.subvi#33:    2846 c218  st   [$18]       11642  st([vAC])                       #33 store low result
              2847 212a  anda [$2a]       11643  anda([sysArgs+6])               #34 borrow in bit 7
              2848 0200  nop              11644  nop()                           #35
                                          11645
                                          11646  label('.subvi#36')
.subvi#36:    2849 3080  anda $80,x       11647  anda(0x80,X)                    #36 move borrow to bit 0
              284a 0119  ld   [$19]       11648  ld([vAC+1])                     #37
              284b a500  suba [x]         11649  suba([X])                       #38
              284c c219  st   [$19]       11650  st([vAC+1])                     #39 store high result
              284d 112b  ld   [$2b],x     11651  ld([sysArgs+7],X)               #40
              284e 0118  ld   [$18]       11652  ld([vAC])                       #41
              284f de00  st   [y,x++]     11653  st([Y,Xpp])                     #42
              2850 0119  ld   [$19]       11654  ld([vAC+1])                     #43
              2851 c600  st   [x]         11655  st([X])                         #44
              2852 0116  ld   [$16]       11656  ld([vPC])                       #45
              2853 8002  adda $02         11657  adda(2)                         #46
              2854 c216  st   [$16]       11658  st([vPC])                       #47
              2855 1403  ld   $03,y       11659  ld(hi('NEXTY'),Y)               #48
              2856 e000  jmp  y,$00       11660  jmp(Y,'NEXTY')                  #49
              2857 00e6  ld   $e6         11661  ld(-52/2)                       #50
                                          11662
                                          11663  label('.subvi#20')
.subvi#20:    2858 0116  ld   [$16]       11664  ld([vPC])                       #20 retry instruction
              2859 a002  suba $02         11665  suba(2)                         #21
              285a c216  st   [$16]       11666  st([vPC])                       #22
              285b 1403  ld   $03,y       11667  ld(hi('REENTER'),Y)             #23
              285c e0cb  jmp  y,$cb       11668  jmp(Y,'REENTER')                #24
              285d 00f2  ld   $f2         11669  ld(-28/2)                       #25
                                          11670
                                          11671
                                          11672  # JMPI implementation, (lb3361)
                                          11673  label('jmpi#13')
jmpi#13:      285e c216  st   [$16]       11674  st([vPC])                       #13
              285f 012b  ld   [$2b]       11675  ld([sysArgs+7])                 #14
              2860 c217  st   [$17]       11676  st([vPC+1])                     #15
              2861 1403  ld   $03,y       11677  ld(hi('NEXTY'),Y)               #16
              2862 e000  jmp  y,$00       11678  jmp(Y,'NEXTY')                  #17
              2863 00f6  ld   $f6         11679  ld(-20/2)                       #18
                                          11680
                                          11681
                                          11682  # POKEA+ implementation
                                          11683  label('pokea+#13')
pokea+#13:    2864 1200  ld   ac,x        11684  ld(AC,X)                        #13
              2865 0500  ld   [x]         11685  ld([X])                         #14 var.lo
              2866 1118  ld   [$18],x     11686  ld([vAC],X)                     #15
              2867 1519  ld   [$19],y     11687  ld([vAC+1],Y)                   #16
              2868 ce00  st   [y,x]       11688  st([Y,X])                       #17 poke [vAC], var.lo
              2869 0118  ld   [$18]       11689  ld([vAC])                       #18
              286a 8001  adda $01         11690  adda(1)                         #19
              286b f070  beq  .pokea+#22  11691  beq('.pokea+#22')               #20 if low byte is 0x00
              286c c218  st   [$18]       11692  st([vAC])                       #21
              286d 1403  ld   $03,y       11693  ld(hi('NEXTY'),Y)               #22
              286e e000  jmp  y,$00       11694  jmp(Y,'NEXTY')                  #23
              286f 00f3  ld   $f3         11695  ld(-26/2)                       #24
                                          11696
                                          11697  label('.pokea+#22')
.pokea+#22:   2870 0119  ld   [$19]       11698  ld([vAC+1])                     #22
              2871 8001  adda $01         11699  adda(1)                         #23
              2872 c219  st   [$19]       11700  st([vAC+1])                     #24
              2873 1403  ld   $03,y       11701  ld(hi('REENTER'),Y)             #25
              2874 e0cb  jmp  y,$cb       11702  jmp(Y,'REENTER')                #26
              2875 00f1  ld   $f1         11703  ld(-30/2)                       #27
                                          11704
                                          11705
                                          11706  # ARRW implementation
                                          11707  label('arrw#13')
arrw#13:      2876 1517  ld   [$17],y     11708  ld([vPC+1],Y)                   #13 vPC.hi
              2877 de00  st   [y,x++]     11709  st([Y,Xpp])                     #14 X++
              2878 c22a  st   [$2a]       11710  st([sysArgs+6])                 #15 imm.lo
              2879 00f7  ld   $f7         11711  ld(min(0,maxTicks-48/2))        #16
              287a 8115  adda [$15]       11712  adda([vTicks])                  #17
              287b e89a  blt  .arrw#20    11713  blt('.arrw#20')                 #18 not enough time left, so retry
              287c 0d00  ld   [y,x]       11714  ld([Y,X])                       #19
              287d c22b  st   [$2b]       11715  st([sysArgs+7])                 #20 imm.hi
              287e 0118  ld   [$18]       11716  ld([vAC])                       #21 idx.lo
              287f 3080  anda $80,x       11717  anda(0x80,X)                    #22
              2880 8118  adda [$18]       11718  adda([vAC])                     #23
              2881 c218  st   [$18]       11719  st([vAC])                       #24 idx.lo*2
              2882 0500  ld   [x]         11720  ld([X])                         #25 msb idx.lo
              2883 8119  adda [$19]       11721  adda([vAC+1])                   #26
              2884 8119  adda [$19]       11722  adda([vAC+1])                   #27
              2885 c219  st   [$19]       11723  st([vAC+1])                     #28 idx.hi*2
              2886 0118  ld   [$18]       11724  ld([vAC])                       #29
              2887 812a  adda [$2a]       11725  adda([sysArgs+6])               #30
              2888 c218  st   [$18]       11726  st([vAC])                       #31 vAC = imm.lo + idx.lo
              2889 e88d  blt  .arrw#34    11727  bmi('.arrw#34')                 #32 check carry
              288a a12a  suba [$2a]       11728  suba([sysArgs+6])               #33 restore idx.lo
              288b fc8f  bra  .arrw#36    11729  bra('.arrw#36')                 #34
              288c 412a  ora  [$2a]       11730  ora([sysArgs+6])                #35 carry in bit 7
                                          11731
                                          11732  label('.arrw#34')
.arrw#34:     288d 212a  anda [$2a]       11733  anda([sysArgs+6])               #34 carry in bit 7
              288e 0200  nop              11734  nop()                           #35
                                          11735
                                          11736  label('.arrw#36')
.arrw#36:     288f 3080  anda $80,x       11737  anda(0x80,X)                    #36
              2890 0500  ld   [x]         11738  ld([X])                         #37 carry in bit 0
              2891 8119  adda [$19]       11739  adda([vAC+1])                   #38
              2892 812b  adda [$2b]       11740  adda([sysArgs+7])               #39
              2893 c219  st   [$19]       11741  st([vAC+1])                     #40 vAC.hi = imm.hi + idx.hi + carry
              2894 0116  ld   [$16]       11742  ld([vPC])                       #41
              2895 8001  adda $01         11743  adda(1)                         #42
              2896 c216  st   [$16]       11744  st([vPC])                       #43
              2897 1403  ld   $03,y       11745  ld(hi('NEXTY'),Y)               #44
              2898 e000  jmp  y,$00       11746  jmp(Y,'NEXTY')                  #45
              2899 00e8  ld   $e8         11747  ld(-48/2)                       #46
                                          11748
                                          11749  label('.arrw#20')
.arrw#20:     289a 0116  ld   [$16]       11750  ld([vPC])                       #20 retry instruction
              289b a002  suba $02         11751  suba(2)                         #21
              289c c216  st   [$16]       11752  st([vPC])                       #22
              289d 1403  ld   $03,y       11753  ld(hi('REENTER'),Y)             #23
              289e e0cb  jmp  y,$cb       11754  jmp(Y,'REENTER')                #24
              289f 00f2  ld   $f2         11755  ld(-28/2)                       #25
                                          11756
                                          11757
                                          11758  # ARRVW implementation
                                          11759  label('arrvw#13')
arrvw#13:     28a0 1517  ld   [$17],y     11760  ld([vPC+1],Y)                   #13 vPC.hi
              28a1 de00  st   [y,x++]     11761  st([Y,Xpp])                     #14 X++
              28a2 c21d  st   [$1d]       11762  st([vTmp])                      #15 var
              28a3 00f2  ld   $f2         11763  ld(min(0,maxTicks-58/2))        #16
              28a4 8115  adda [$15]       11764  adda([vTicks])                  #17
              28a5 e8ce  blt  .arrvw#20   11765  blt('.arrvw#20')                #18 not enough time left, so retry
              28a6 0d00  ld   [y,x]       11766  ld([Y,X])                       #19
              28a7 de00  st   [y,x++]     11767  st([Y,Xpp])                     #20 X++
              28a8 c218  st   [$18]       11768  st([vAC])                       #21 imm.lo
              28a9 0d00  ld   [y,x]       11769  ld([Y,X])                       #22
              28aa c219  st   [$19]       11770  st([vAC+1])                     #23 imm.hi
              28ab 1400  ld   $00,y       11771  ld(0,Y)                         #24
              28ac 111d  ld   [$1d],x     11772  ld([vTmp],X)                    #25
              28ad 0500  ld   [x]         11773  ld([X])                         #26
              28ae de00  st   [y,x++]     11774  st([Y,Xpp])                     #27 X++
              28af c22a  st   [$2a]       11775  st([sysArgs+6])                 #28 idx.lo
              28b0 0500  ld   [x]         11776  ld([X])                         #29
              28b1 c22b  st   [$2b]       11777  st([sysArgs+7])                 #30 idx.hi
              28b2 012a  ld   [$2a]       11778  ld([sysArgs+6])                 #31
              28b3 3080  anda $80,x       11779  anda(0x80,X)                    #32
              28b4 812a  adda [$2a]       11780  adda([sysArgs+6])               #33
              28b5 c22a  st   [$2a]       11781  st([sysArgs+6])                 #34 idx.lo*2
              28b6 0500  ld   [x]         11782  ld([X])                         #35 msb idx.lo
              28b7 812b  adda [$2b]       11783  adda([sysArgs+7])               #36
              28b8 812b  adda [$2b]       11784  adda([sysArgs+7])               #37
              28b9 c22b  st   [$2b]       11785  st([sysArgs+7])                 #38 idx.hi*2
              28ba 0118  ld   [$18]       11786  ld([vAC])                       #39
              28bb 812a  adda [$2a]       11787  adda([sysArgs+6])               #40
              28bc c218  st   [$18]       11788  st([vAC])                       #41 vAC = vAC.lo + idx.lo
              28bd e8c1  blt  .arrvw#44   11789  bmi('.arrvw#44')                #42 check carry
              28be a12a  suba [$2a]       11790  suba([sysArgs+6])               #43 restore vAC.lo
              28bf fcc3  bra  .arrvw#46   11791  bra('.arrvw#46')                #44
              28c0 412a  ora  [$2a]       11792  ora([sysArgs+6])                #45 carry in bit 7
                                          11793
                                          11794  label('.arrvw#44')
.arrvw#44:    28c1 212a  anda [$2a]       11795  anda([sysArgs+6])               #44 carry in bit 7
              28c2 0200  nop              11796  nop()                           #45
                                          11797
                                          11798  label('.arrvw#46')
.arrvw#46:    28c3 3080  anda $80,x       11799  anda(0x80,X)                    #46
              28c4 0500  ld   [x]         11800  ld([X])                         #47 carry in bit 0
              28c5 8119  adda [$19]       11801  adda([vAC+1])                   #48
              28c6 812b  adda [$2b]       11802  adda([sysArgs+7])               #49
              28c7 c219  st   [$19]       11803  st([vAC+1])                     #50 vAC.hi = vAC.hi + idx.hi + carry
              28c8 0116  ld   [$16]       11804  ld([vPC])                       #51
              28c9 8002  adda $02         11805  adda(2)                         #52
              28ca c216  st   [$16]       11806  st([vPC])                       #53
              28cb 1403  ld   $03,y       11807  ld(hi('NEXTY'),Y)               #54
              28cc e000  jmp  y,$00       11808  jmp(Y,'NEXTY')                  #55
              28cd 00e3  ld   $e3         11809  ld(-58/2)                       #56
                                          11810
                                          11811  label('.arrvw#20')
.arrvw#20:    28ce 0116  ld   [$16]       11812  ld([vPC])                       #20 retry instruction
              28cf a002  suba $02         11813  suba(2)                         #21
              28d0 c216  st   [$16]       11814  st([vPC])                       #22
              28d1 1403  ld   $03,y       11815  ld(hi('REENTER'),Y)             #23
              28d2 e0cb  jmp  y,$cb       11816  jmp(Y,'REENTER')                #24
              28d3 00f2  ld   $f2         11817  ld(-28/2)                       #25
                                          11818
                                          11819
                                          11820  # OSCPX implementation
                                          11821  label('oscpx#13')
oscpx#13:     28d4 d22a  st   [$2a],x     11822  st([sysArgs+6],X)               #13 sample address var
              28d5 00fa  ld   $fa         11823  ld(min(0,maxTicks-42/2))        #14
              28d6 8115  adda [$15]       11824  adda([vTicks])                  #15
              28d7 e8f0  blt  .oscpx#18   11825  blt('.oscpx#18')                #16 not enough time left, so retry
              28d8 0500  ld   [x]         11826  ld([X])                         #17 sample address low byte
              28d9 112b  ld   [$2b],x     11827  ld([sysArgs+7],X)               #18 index var
              28da 8500  adda [x]         11828  adda([X])                       #19 sample address low byte + index
              28db c21d  st   [$1d]       11829  st([vTmp])                      #20
              28dc 012a  ld   [$2a]       11830  ld([sysArgs+6])                 #21
              28dd 9001  adda $01,x       11831  adda(1,X)                       #22
              28de 0500  ld   [x]         11832  ld([X])                         #23
              28df 1600  ld   ac,y        11833  ld(AC,Y)                        #24 sample address high byte
              28e0 111d  ld   [$1d],x     11834  ld([vTmp],X)                    #25
              28e1 0d00  ld   [y,x]       11835  ld([Y,X])                       #26
              28e2 20fc  anda $fc         11836  anda(0xfc)                      #27 6bit sample in upper 8bits
              28e3 1407  ld   $07,y       11837  ld(soundTable>>8,Y)             #28
              28e4 5003  ora  $03,x       11838  ora(0x03,X)                     #29
              28e5 0d00  ld   [y,x]       11839  ld([Y,X])                       #30 6bit sample, (>>2)
              28e6 9519  adda [$19],y     11840  adda([vAC+1],Y)                 #31 dest pixel address high byte
              28e7 0118  ld   [$18]       11841  ld([vAC])                       #32 dest pixel address low byte
              28e8 112b  ld   [$2b],x     11842  ld([sysArgs+7],X)               #33 index
              28e9 8500  adda [x]         11843  adda([X])                       #34 sample address low byte + index
              28ea 1200  ld   ac,x        11844  ld(AC,X)                        #35
              28eb 01a3  ld   [$a3]       11845  ld([0xA3])                      #36 pixel colour
              28ec ce00  st   [y,x]       11846  st([Y,X])                       #37
              28ed 1403  ld   $03,y       11847  ld(hi('NEXTY'),Y)               #38
              28ee e000  jmp  y,$00       11848  jmp(Y,'NEXTY')                  #39
              28ef 00eb  ld   $eb         11849  ld(-42/2)                       #40
                                          11850
                                          11851  label('.oscpx#18')
.oscpx#18:    28f0 0021  ld   $21         11852  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              28f1 c202  st   [$02]       11853  st([vCpuSelect])                #19 restore PREFX3 instruction page
              28f2 9401  adda $01,y       11854  adda(1,Y)                       #20 retry instruction
              28f3 e000  jmp  y,$00       11855  jmp(Y,'NEXTY')                  #21
              28f4 00f4  ld   $f4         11856  ld(-24/2)                       #22
                                          11857
                                          11858
              28f5 0200  nop              11859  fillers(until=0xff)
              28f6 0200  nop
              28f7 0200  nop
              * 10 times
              28ff 0200  nop              11860  align(0x100, size=0x100)
                                          11861
                                          11862  #-----------------------------------------------------------------------
                                          11863  #       More vCPU instruction implementations, (0x2900)
                                          11864  #-----------------------------------------------------------------------
                                          11865  #
                                          11866  # LEEKA implementation
                                          11867  label('leeka#13')
leeka#13:     2900 c21d  st   [$1d]       11868  st([vTmp])                      #13
              2901 00f9  ld   $f9         11869  ld(min(0,maxTicks-44/2))        #14
              2902 8115  adda [$15]       11870  adda([vTicks])                  #15
              2903 e81e  blt  .leeka#18   11871  blt('.leeka#18')                #16 not enough time left, so retry
              2904 1519  ld   [$19],y     11872  ld([vAC+1],Y)                   #17
              2905 1118  ld   [$18],x     11873  ld([vAC],X)                     #18
              2906 0d00  ld   [y,x]       11874  ld([Y,X])                       #19 peek [vAC]
              2907 de00  st   [y,x++]     11875  st([Y,Xpp])                     #20
              2908 c2c8  st   [$c8]       11876  st([vTmpL+0])                   #21
              2909 0d00  ld   [y,x]       11877  ld([Y,X])                       #22 peek [vAC+1]
              290a de00  st   [y,x++]     11878  st([Y,Xpp])                     #23
              290b c2c9  st   [$c9]       11879  st([vTmpL+1])                   #24
              290c 0d00  ld   [y,x]       11880  ld([Y,X])                       #25 peek [vAC+2]
              290d de00  st   [y,x++]     11881  st([Y,Xpp])                     #26
              290e c2ca  st   [$ca]       11882  st([vTmpL+2])                   #27
              290f 0d00  ld   [y,x]       11883  ld([Y,X])                       #28 peek [vAC+3]
              2910 c2cb  st   [$cb]       11884  st([vTmpL+3])                   #29
              2911 1400  ld   $00,y       11885  ld(0,Y)                         #30
              2912 111d  ld   [$1d],x     11886  ld([vTmp],X)                    #31 dst var
              2913 01c8  ld   [$c8]       11887  ld([vTmpL+0])                   #32
              2914 de00  st   [y,x++]     11888  st([Y,Xpp])                     #33 [var.0] = peek [vAC]
              2915 01c9  ld   [$c9]       11889  ld([vTmpL+1])                   #34
              2916 de00  st   [y,x++]     11890  st([Y,Xpp])                     #35 [var.1] = peek [vAC+1]
              2917 01ca  ld   [$ca]       11891  ld([vTmpL+2])                   #36
              2918 de00  st   [y,x++]     11892  st([Y,Xpp])                     #37 [var.2] = peek [vAC+2]
              2919 01cb  ld   [$cb]       11893  ld([vTmpL+3])                   #38
              291a ce00  st   [y,x]       11894  st([Y,X])                       #39 [var.3] = peek [vAC+3]
              291b 1403  ld   $03,y       11895  ld(hi('NEXTY'),Y)               #40
              291c e000  jmp  y,$00       11896  jmp(Y,'NEXTY')                  #41
              291d 00ea  ld   $ea         11897  ld(-44/2)                       #42
                                          11898
                                          11899  label('.leeka#18')
.leeka#18:    291e 0022  ld   $22         11900  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              291f c202  st   [$02]       11901  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2920 9401  adda $01,y       11902  adda(1,Y)                       #20 retry instruction
              2921 e000  jmp  y,$00       11903  jmp(Y,'NEXTY')                  #21
              2922 00f4  ld   $f4         11904  ld(-24/2)                       #22
                                          11905
                                          11906
                                          11907  # LOKEA implementation
                                          11908  label('lokea#13')
lokea#13:     2923 1200  ld   ac,x        11909  ld(AC,X)                        #13
              2924 00f9  ld   $f9         11910  ld(min(0,maxTicks-44/2))        #14
              2925 8115  adda [$15]       11911  adda([vTicks])                  #15
              2926 e840  blt  .lokea#18   11912  blt('.lokea#18')                #16 not enough time left, so retry
              2927 1400  ld   $00,y       11913  ld(0,Y)                         #17
              2928 0500  ld   [x]         11914  ld([X])                         #18 var.0
              2929 de00  st   [y,x++]     11915  st([Y,Xpp])                     #19
              292a c2c8  st   [$c8]       11916  st([vTmpL+0])                   #20
              292b 0500  ld   [x]         11917  ld([X])                         #21 var.1
              292c de00  st   [y,x++]     11918  st([Y,Xpp])                     #22
              292d c2c9  st   [$c9]       11919  st([vTmpL+1])                   #23
              292e 0500  ld   [x]         11920  ld([X])                         #24 var.2
              292f de00  st   [y,x++]     11921  st([Y,Xpp])                     #25
              2930 c2ca  st   [$ca]       11922  st([vTmpL+2])                   #26
              2931 0500  ld   [x]         11923  ld([X])                         #27 var.3
              2932 c2cb  st   [$cb]       11924  st([vTmpL+3])                   #28
              2933 1118  ld   [$18],x     11925  ld([vAC],X)                     #29
              2934 1519  ld   [$19],y     11926  ld([vAC+1],Y)                   #30
              2935 01c8  ld   [$c8]       11927  ld([vTmpL+0])                   #31
              2936 de00  st   [y,x++]     11928  st([Y,Xpp])                     #32 poke [vAC], var.0
              2937 01c9  ld   [$c9]       11929  ld([vTmpL+1])                   #33
              2938 de00  st   [y,x++]     11930  st([Y,Xpp])                     #34 poke [vAC], var.1
              2939 01ca  ld   [$ca]       11931  ld([vTmpL+2])                   #35
              293a de00  st   [y,x++]     11932  st([Y,Xpp])                     #36 poke [vAC], var.2
              293b 01cb  ld   [$cb]       11933  ld([vTmpL+3])                   #37
              293c ce00  st   [y,x]       11934  st([Y,X])                       #38 poke [vAC], var.3
              293d 1403  ld   $03,y       11935  ld(hi('REENTER'),Y)             #39
              293e e0cb  jmp  y,$cb       11936  jmp(Y,'REENTER')                #40
              293f 00ea  ld   $ea         11937  ld(-44/2)                       #41
                                          11938
                                          11939  label('.lokea#18')
.lokea#18:    2940 0022  ld   $22         11940  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2941 c202  st   [$02]       11941  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2942 9401  adda $01,y       11942  adda(1,Y)                       #20 retry instruction
              2943 e000  jmp  y,$00       11943  jmp(Y,'NEXTY')                  #21
              2944 00f4  ld   $f4         11944  ld(-24/2)                       #22
                                          11945
                                          11946
                                          11947  # FEEKA implementation
                                          11948  label('feeka#13')
feeka#13:     2945 1519  ld   [$19],y     11949  ld([vAC+1],Y)                   #13
              2946 00f7  ld   $f7         11950  ld(min(0,maxTicks-48/2))        #14
              2947 8115  adda [$15]       11951  adda([vTicks])                  #15
              2948 e867  blt  .feeka#18   11952  blt('.feeka#18')                #16 not enough time left, so retry
              2949 1118  ld   [$18],x     11953  ld([vAC],X)                     #17
              294a 0d00  ld   [y,x]       11954  ld([Y,X])                       #18 peek [vAC]
              294b de00  st   [y,x++]     11955  st([Y,Xpp])                     #19
              294c c2b0  st   [$b0]       11956  st([0xB0])                      #20
              294d 0d00  ld   [y,x]       11957  ld([Y,X])                       #21 peek [vAC+1]
              294e de00  st   [y,x++]     11958  st([Y,Xpp])                     #22
              294f c2b1  st   [$b1]       11959  st([0xB1])                      #23
              2950 0d00  ld   [y,x]       11960  ld([Y,X])                       #24 peek [vAC+2]
              2951 de00  st   [y,x++]     11961  st([Y,Xpp])                     #25
              2952 c2b2  st   [$b2]       11962  st([0xB2])                      #26
              2953 0d00  ld   [y,x]       11963  ld([Y,X])                       #27 peek [vAC+3]
              2954 de00  st   [y,x++]     11964  st([Y,Xpp])                     #28
              2955 c2b3  st   [$b3]       11965  st([0xB3])                      #29
              2956 0d00  ld   [y,x]       11966  ld([Y,X])                       #30 peek [vAC+4]
              2957 c2b4  st   [$b4]       11967  st([0xB4])                      #31
              2958 1400  ld   $00,y       11968  ld(0,Y)                         #32
              2959 112b  ld   [$2b],x     11969  ld([sysArgs+7],X)               #33 dst var
              295a 01b0  ld   [$b0]       11970  ld([0xB0])                      #34
              295b de00  st   [y,x++]     11971  st([Y,Xpp])                     #35 [var.0] = peek [vAC]
              295c 01b1  ld   [$b1]       11972  ld([0xB1])                      #36
              295d de00  st   [y,x++]     11973  st([Y,Xpp])                     #37 [var.1] = peek [vAC+1]
              295e 01b2  ld   [$b2]       11974  ld([0xB2])                      #38
              295f de00  st   [y,x++]     11975  st([Y,Xpp])                     #39 [var.2] = peek [vAC+2]
              2960 01b3  ld   [$b3]       11976  ld([0xB3])                      #40
              2961 ce00  st   [y,x]       11977  st([Y,X])                       #41 [var.3] = peek [vAC+3]
              2962 01b4  ld   [$b4]       11978  ld([0xB4])                      #42
              2963 ce00  st   [y,x]       11979  st([Y,X])                       #43 [var.4] = peek [vAC+4]
              2964 1403  ld   $03,y       11980  ld(hi('NEXTY'),Y)               #44
              2965 e000  jmp  y,$00       11981  jmp(Y,'NEXTY')                  #45
              2966 00e8  ld   $e8         11982  ld(-48/2)                       #46
                                          11983
                                          11984  label('.feeka#18')
.feeka#18:    2967 0022  ld   $22         11985  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2968 c202  st   [$02]       11986  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2969 9401  adda $01,y       11987  adda(1,Y)                       #20 retry instruction
              296a e000  jmp  y,$00       11988  jmp(Y,'NEXTY')                  #21
              296b 00f4  ld   $f4         11989  ld(-24/2)                       #22
                                          11990
                                          11991
                                          11992  # FOKEA implementation
                                          11993  label('fokea#13')
fokea#13:     296c 112b  ld   [$2b],x     11994  ld([sysArgs+7],X)               #13 var address
              296d 00f7  ld   $f7         11995  ld(min(0,maxTicks-48/2))        #14
              296e 8115  adda [$15]       11996  adda([vTicks])                  #15
              296f e88e  blt  .fokea#18   11997  blt('.fokea#18')                #16 not enough time left, so retry
              2970 1400  ld   $00,y       11998  ld(0,Y)                         #17
              2971 0500  ld   [x]         11999  ld([X])                         #18 [var.0]
              2972 de00  st   [y,x++]     12000  st([Y,Xpp])                     #19
              2973 c2b0  st   [$b0]       12001  st([0xB0])                      #20
              2974 0500  ld   [x]         12002  ld([X])                         #21 [var.1]
              2975 de00  st   [y,x++]     12003  st([Y,Xpp])                     #22
              2976 c2b1  st   [$b1]       12004  st([0xB1])                      #23
              2977 0500  ld   [x]         12005  ld([X])                         #24 [var.2]
              2978 de00  st   [y,x++]     12006  st([Y,Xpp])                     #25
              2979 c2b2  st   [$b2]       12007  st([0xB2])                      #26
              297a 0500  ld   [x]         12008  ld([X])                         #27 [var.3]
              297b de00  st   [y,x++]     12009  st([Y,Xpp])                     #28
              297c c2b3  st   [$b3]       12010  st([0xB3])                      #29
              297d 0500  ld   [x]         12011  ld([X])                         #30 [var.4]
              297e c2b4  st   [$b4]       12012  st([0xB4])                      #31
              297f 1118  ld   [$18],x     12013  ld([vAC],X)                     #32
              2980 1519  ld   [$19],y     12014  ld([vAC+1],Y)                   #33
              2981 01b0  ld   [$b0]       12015  ld([0xB0])                      #34
              2982 de00  st   [y,x++]     12016  st([Y,Xpp])                     #35 poke [vAC], [var.0]
              2983 01b1  ld   [$b1]       12017  ld([0xB1])                      #36
              2984 de00  st   [y,x++]     12018  st([Y,Xpp])                     #37 poke [vAC], [var.1]
              2985 01b2  ld   [$b2]       12019  ld([0xB2])                      #38
              2986 de00  st   [y,x++]     12020  st([Y,Xpp])                     #39 poke [vAC], [var.2]
              2987 01b3  ld   [$b3]       12021  ld([0xB3])                      #40
              2988 ce00  st   [y,x]       12022  st([Y,X])                       #41 poke [vAC], [var.3]
              2989 01b4  ld   [$b4]       12023  ld([0xB4])                      #42
              298a ce00  st   [y,x]       12024  st([Y,X])                       #43 poke [vAC], [var.4]
              298b 1403  ld   $03,y       12025  ld(hi('NEXTY'),Y)               #44
              298c e000  jmp  y,$00       12026  jmp(Y,'NEXTY')                  #45
              298d 00e8  ld   $e8         12027  ld(-48/2)                       #46
                                          12028
                                          12029  label('.fokea#18')
.fokea#18:    298e 0022  ld   $22         12030  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              298f c202  st   [$02]       12031  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2990 9401  adda $01,y       12032  adda(1,Y)                       #20 retry instruction
              2991 e000  jmp  y,$00       12033  jmp(Y,'NEXTY')                  #21
              2992 00f4  ld   $f4         12034  ld(-24/2)                       #22
                                          12035
                                          12036
                                          12037  # SWAPB implementation
                                          12038  label('swapb#13')
swapb#13:     2993 00f8  ld   $f8         12039  ld(min(0,maxTicks-46/2))        #13
              2994 8115  adda [$15]       12040  adda([vTicks])                  #14
              2995 e8b3  blt  .swapb#17   12041  blt('.swapb#17')                #15 not enough time left, so retry
              2996 1400  ld   $00,y       12042  ld(0,Y)                         #16
              2997 0500  ld   [x]         12043  ld([X])                         #17
              2998 de00  st   [y,x++]     12044  st([Y,Xpp])                     #18
              2999 c2b2  st   [$b2]       12045  st([0xB2])                      #19 var1.lo
              299a 0500  ld   [x]         12046  ld([X])                         #20
              299b c2b3  st   [$b3]       12047  st([0xB3])                      #21 var1.hi
              299c 112b  ld   [$2b],x     12048  ld([sysArgs+7],X)               #22 var0
              299d 0500  ld   [x]         12049  ld([X])                         #23
              299e de00  st   [y,x++]     12050  st([Y,Xpp])                     #24
              299f c2b4  st   [$b4]       12051  st([0xB4])                      #25 var0.lo
              29a0 0500  ld   [x]         12052  ld([X])                         #26
              29a1 c2b5  st   [$b5]       12053  st([0xB5])                      #27 var0.hi
              29a2 11b2  ld   [$b2],x     12054  ld([0xB2],X)                    #28
              29a3 15b3  ld   [$b3],y     12055  ld([0xB3],Y)                    #29
              29a4 0d00  ld   [y,x]       12056  ld([Y,X])                       #30
              29a5 c2b1  st   [$b1]       12057  st([0xB1])                      #31 tmp1 = [var1]
              29a6 11b4  ld   [$b4],x     12058  ld([0xB4],X)                    #32
              29a7 15b5  ld   [$b5],y     12059  ld([0xB5],Y)                    #33
              29a8 0d00  ld   [y,x]       12060  ld([Y,X])                       #34
              29a9 c2b0  st   [$b0]       12061  st([0xB0])                      #35 tmp0 = [var0]
              29aa 01b1  ld   [$b1]       12062  ld([0xB1])                      #36
              29ab ce00  st   [y,x]       12063  st([Y,X])                       #37 [var0] = tmp1
              29ac 11b2  ld   [$b2],x     12064  ld([0xB2],X)                    #38
              29ad 15b3  ld   [$b3],y     12065  ld([0xB3],Y)                    #39
              29ae 01b0  ld   [$b0]       12066  ld([0xB0])                      #40
              29af ce00  st   [y,x]       12067  st([Y,X])                       #41 [var1] = tmp0
              29b0 1403  ld   $03,y       12068  ld(hi('NEXTY'),Y)               #42
              29b1 e000  jmp  y,$00       12069  jmp(Y,'NEXTY')                  #43
              29b2 00e9  ld   $e9         12070  ld(-46/2)                       #44
                                          12071
                                          12072  label('.swapb#17')
.swapb#17:    29b3 0021  ld   $21         12073  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29b4 c202  st   [$02]       12074  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29b5 9401  adda $01,y       12075  adda(1,Y)                       #19 retry instruction
              29b6 e0cb  jmp  y,$cb       12076  jmp(Y,'REENTER')                #20
              29b7 00f4  ld   $f4         12077  ld(-24/2)                       #21
                                          12078
                                          12079
                                          12080  # SWAPW implementation
                                          12081  label('swapw#13')
swapw#13:     29b8 00f2  ld   $f2         12082  ld(min(0,maxTicks-58/2))        #13
              29b9 8115  adda [$15]       12083  adda([vTicks])                  #14
              29ba e8e4  blt  .swapw#17   12084  blt('.swapw#17')                #15 not enough time left, so retry
              29bb 1400  ld   $00,y       12085  ld(0,Y)                         #16
              29bc 0500  ld   [x]         12086  ld([X])                         #17
              29bd de00  st   [y,x++]     12087  st([Y,Xpp])                     #18
              29be c2b2  st   [$b2]       12088  st([0xB2])                      #19 var1.lo
              29bf 0500  ld   [x]         12089  ld([X])                         #20
              29c0 c2b3  st   [$b3]       12090  st([0xB3])                      #21 var1.hi
              29c1 112b  ld   [$2b],x     12091  ld([sysArgs+7],X)               #22 var0
              29c2 0500  ld   [x]         12092  ld([X])                         #23
              29c3 de00  st   [y,x++]     12093  st([Y,Xpp])                     #24
              29c4 c2b4  st   [$b4]       12094  st([0xB4])                      #25 var0.lo
              29c5 0500  ld   [x]         12095  ld([X])                         #26
              29c6 c2b5  st   [$b5]       12096  st([0xB5])                      #27 var0.hi
              29c7 11b2  ld   [$b2],x     12097  ld([0xB2],X)                    #28
              29c8 15b3  ld   [$b3],y     12098  ld([0xB3],Y)                    #29
              29c9 0d00  ld   [y,x]       12099  ld([Y,X])                       #30
              29ca de00  st   [y,x++]     12100  st([Y,Xpp])                     #31
              29cb c2b0  st   [$b0]       12101  st([0xB0])                      #32 temp.lo = var1.lo
              29cc 0d00  ld   [y,x]       12102  ld([Y,X])                       #33
              29cd c2b1  st   [$b1]       12103  st([0xB1])                      #34 temp.hi = var1.hi
              29ce 11b4  ld   [$b4],x     12104  ld([0xB4],X)                    #35
              29cf 15b5  ld   [$b5],y     12105  ld([0xB5],Y)                    #36
              29d0 0d00  ld   [y,x]       12106  ld([Y,X])                       #37
              29d1 de00  st   [y,x++]     12107  st([Y,Xpp])                     #38
              29d2 c218  st   [$18]       12108  st([vAC])                       #39
              29d3 0d00  ld   [y,x]       12109  ld([Y,X])                       #40
              29d4 c219  st   [$19]       12110  st([vAC+1])                     #41
              29d5 11b2  ld   [$b2],x     12111  ld([0xB2],X)                    #42
              29d6 15b3  ld   [$b3],y     12112  ld([0xB3],Y)                    #43
              29d7 0118  ld   [$18]       12113  ld([vAC])                       #44
              29d8 de00  st   [y,x++]     12114  st([Y,Xpp])                     #45 var1.lo = var0.lo
              29d9 0119  ld   [$19]       12115  ld([vAC+1])                     #46
              29da ce00  st   [y,x]       12116  st([Y,X])                       #47 var1.lo = var0.lo
              29db 11b4  ld   [$b4],x     12117  ld([0xB4],X)                    #48
              29dc 15b5  ld   [$b5],y     12118  ld([0xB5],Y)                    #49
              29dd 01b0  ld   [$b0]       12119  ld([0xB0])                      #50
              29de de00  st   [y,x++]     12120  st([Y,Xpp])                     #51 var0.lo = temp.lo
              29df 01b1  ld   [$b1]       12121  ld([0xB1])                      #52
              29e0 ce00  st   [y,x]       12122  st([Y,X])                       #53 var0.hi = temp.hi
              29e1 1403  ld   $03,y       12123  ld(hi('NEXTY'),Y)               #54
              29e2 e000  jmp  y,$00       12124  jmp(Y,'NEXTY')                  #55
              29e3 00e3  ld   $e3         12125  ld(-58/2)                       #56
                                          12126
                                          12127  label('.swapw#17')
.swapw#17:    29e4 0021  ld   $21         12128  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              29e5 c202  st   [$02]       12129  st([vCpuSelect])                #18 restore PREFX3 instruction page
              29e6 9401  adda $01,y       12130  adda(1,Y)                       #19 retry instruction
              29e7 e0cb  jmp  y,$cb       12131  jmp(Y,'REENTER')                #20
              29e8 00f4  ld   $f4         12132  ld(-24/2)                       #21
                                          12133
                                          12134
                                          12135  # STPX implementation
                                          12136  label('stpx#13')
stpx#13:      29e9 0500  ld   [x]         12137  ld([X])                         #13
              29ea c21d  st   [$1d]       12138  st([vTmp])                      #14 colour
              29eb 0119  ld   [$19]       12139  ld([vAC+1])                     #15 y
              29ec 8119  adda [$19]       12140  adda([vAC+1])                   #16 y*2
              29ed 1200  ld   ac,x        12141  ld(AC,X)                        #17
              29ee 1401  ld   $01,y       12142  ld(1,Y)                         #18 Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              29ef 0d00  ld   [y,x]       12143  ld([Y,X])                       #19
              29f0 1600  ld   ac,y        12144  ld(AC,Y)                        #20 Y = [Y,X]
              29f1 1118  ld   [$18],x     12145  ld([vAC],X)                     #21
              29f2 011d  ld   [$1d]       12146  ld([vTmp])                      #22
              29f3 ce00  st   [y,x]       12147  st([Y,X])                       #23 [Y,X] = colour
              29f4 1403  ld   $03,y       12148  ld(hi('NEXTY'),Y)               #24
              29f5 e000  jmp  y,$00       12149  jmp(Y,'NEXTY')                  #25
              29f6 00f2  ld   $f2         12150  ld(-28/2)                       #26
                                          12151
                                          12152
              29f7 0200  nop              12153  fillers(until=0xff)
              29f8 0200  nop
              29f9 0200  nop
              * 8 times
              29ff 0200  nop              12154  align(0x100, size=0x100)
                                          12155
                                          12156  #-----------------------------------------------------------------------
                                          12157  #       More vCPU instruction implementations, (0x2A00)
                                          12158  #-----------------------------------------------------------------------
                                          12159  #
                                          12160  # MEEKA implementation
                                          12161  label('meeka#13')
meeka#13:     2a00 c21d  st   [$1d]       12162  st([vTmp])                      #13
              2a01 00ef  ld   $ef         12163  ld(min(0,maxTicks-64/2))        #14
              2a02 8115  adda [$15]       12164  adda([vTicks])                  #15
              2a03 e832  blt  .meeka#18   12165  blt('.meeka#18')                #16 not enough time left, so retry
              2a04 1519  ld   [$19],y     12166  ld([vAC+1],Y)                   #17
              2a05 1118  ld   [$18],x     12167  ld([vAC],X)                     #18
              2a06 0d00  ld   [y,x]       12168  ld([Y,X])                       #19 peek [vAC]
              2a07 de00  st   [y,x++]     12169  st([Y,Xpp])                     #20
              2a08 c2b0  st   [$b0]       12170  st([0xB0])                      #21
              2a09 0d00  ld   [y,x]       12171  ld([Y,X])                       #22 peek [vAC+1]
              2a0a de00  st   [y,x++]     12172  st([Y,Xpp])                     #23
              2a0b c2b1  st   [$b1]       12173  st([0xB1])                      #24
              2a0c 0d00  ld   [y,x]       12174  ld([Y,X])                       #25 peek [vAC+2]
              2a0d de00  st   [y,x++]     12175  st([Y,Xpp])                     #26
              2a0e c2b2  st   [$b2]       12176  st([0xB2])                      #27
              2a0f 0d00  ld   [y,x]       12177  ld([Y,X])                       #28 peek [vAC+3]
              2a10 de00  st   [y,x++]     12178  st([Y,Xpp])                     #29
              2a11 c2b3  st   [$b3]       12179  st([0xB3])                      #30
              2a12 0d00  ld   [y,x]       12180  ld([Y,X])                       #31 peek [vAC+4]
              2a13 de00  st   [y,x++]     12181  st([Y,Xpp])                     #32
              2a14 c2b4  st   [$b4]       12182  st([0xB4])                      #33
              2a15 0d00  ld   [y,x]       12183  ld([Y,X])                       #34 peek [vAC+5]
              2a16 de00  st   [y,x++]     12184  st([Y,Xpp])                     #35
              2a17 c2b5  st   [$b5]       12185  st([0xB5])                      #36
              2a18 0d00  ld   [y,x]       12186  ld([Y,X])                       #37 peek [vAC+6]
              2a19 de00  st   [y,x++]     12187  st([Y,Xpp])                     #38
              2a1a c2b6  st   [$b6]       12188  st([0xB6])                      #39
              2a1b 0d00  ld   [y,x]       12189  ld([Y,X])                       #40 peek [vAC+7]
              2a1c c2b7  st   [$b7]       12190  st([0xB7])                      #41
              2a1d 1400  ld   $00,y       12191  ld(0,Y)                         #42
              2a1e 111d  ld   [$1d],x     12192  ld([vTmp],X)                    #43 dst var
              2a1f 01b0  ld   [$b0]       12193  ld([0xB0])                      #44
              2a20 de00  st   [y,x++]     12194  st([Y,Xpp])                     #45 [var.0] = peek [vAC]
              2a21 01b1  ld   [$b1]       12195  ld([0xB1])                      #46
              2a22 de00  st   [y,x++]     12196  st([Y,Xpp])                     #47 [var.1] = peek [vAC+1]
              2a23 01b2  ld   [$b2]       12197  ld([0xB2])                      #48
              2a24 de00  st   [y,x++]     12198  st([Y,Xpp])                     #49 [var.2] = peek [vAC+2]
              2a25 01b3  ld   [$b3]       12199  ld([0xB3])                      #50
              2a26 de00  st   [y,x++]     12200  st([Y,Xpp])                     #51 [var.3] = peek [vAC+3]
              2a27 01b4  ld   [$b4]       12201  ld([0xB4])                      #52
              2a28 de00  st   [y,x++]     12202  st([Y,Xpp])                     #53 [var.0] = peek [vAC+4]
              2a29 01b5  ld   [$b5]       12203  ld([0xB5])                      #54
              2a2a de00  st   [y,x++]     12204  st([Y,Xpp])                     #55 [var.1] = peek [vAC+5]
              2a2b 01b6  ld   [$b6]       12205  ld([0xB6])                      #56
              2a2c de00  st   [y,x++]     12206  st([Y,Xpp])                     #57 [var.2] = peek [vAC+6]
              2a2d 01b7  ld   [$b7]       12207  ld([0xB7])                      #58
              2a2e ce00  st   [y,x]       12208  st([Y,X])                       #59 [var.3] = peek [vAC+7]
              2a2f 1403  ld   $03,y       12209  ld(hi('NEXTY'),Y)               #60
              2a30 e000  jmp  y,$00       12210  jmp(Y,'NEXTY')                  #61
              2a31 00e0  ld   $e0         12211  ld(-64/2)                       #62
                                          12212
                                          12213  label('.meeka#18')
.meeka#18:    2a32 0022  ld   $22         12214  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a33 c202  st   [$02]       12215  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a34 9401  adda $01,y       12216  adda(1,Y)                       #20 retry instruction
              2a35 e000  jmp  y,$00       12217  jmp(Y,'NEXTY')                  #21
              2a36 00f4  ld   $f4         12218  ld(-24/2)                       #22
                                          12219
                                          12220
                                          12221  # MOKEA
                                          12222  label('mokea#13')
mokea#13:     2a37 112b  ld   [$2b],x     12223  ld([sysArgs+7],X)               #13 var address
              2a38 00ef  ld   $ef         12224  ld(min(0,maxTicks-64/2))        #14
              2a39 8115  adda [$15]       12225  adda([vTicks])                  #15
              2a3a e869  blt  .mokea#18   12226  blt('.mokea#18')                #16 not enough time left, so retry
              2a3b 1400  ld   $00,y       12227  ld(0,Y)                         #17
              2a3c 0500  ld   [x]         12228  ld([X])                         #18 var.0
              2a3d de00  st   [y,x++]     12229  st([Y,Xpp])                     #19
              2a3e c2b0  st   [$b0]       12230  st([0xB0])                      #20
              2a3f 0500  ld   [x]         12231  ld([X])                         #21 var.1
              2a40 de00  st   [y,x++]     12232  st([Y,Xpp])                     #22
              2a41 c2b1  st   [$b1]       12233  st([0xB1])                      #23
              2a42 0500  ld   [x]         12234  ld([X])                         #24 var.2
              2a43 de00  st   [y,x++]     12235  st([Y,Xpp])                     #25
              2a44 c2b2  st   [$b2]       12236  st([0xB2])                      #26
              2a45 0500  ld   [x]         12237  ld([X])                         #27 var.3
              2a46 de00  st   [y,x++]     12238  st([Y,Xpp])                     #28
              2a47 c2b3  st   [$b3]       12239  st([0xB3])                      #29
              2a48 0500  ld   [x]         12240  ld([X])                         #30 var.4
              2a49 de00  st   [y,x++]     12241  st([Y,Xpp])                     #31
              2a4a c2b4  st   [$b4]       12242  st([0xB4])                      #32
              2a4b 0500  ld   [x]         12243  ld([X])                         #33 var.5
              2a4c de00  st   [y,x++]     12244  st([Y,Xpp])                     #34
              2a4d c2b5  st   [$b5]       12245  st([0xB5])                      #35
              2a4e 0500  ld   [x]         12246  ld([X])                         #36 var.6
              2a4f de00  st   [y,x++]     12247  st([Y,Xpp])                     #37
              2a50 c2b6  st   [$b6]       12248  st([0xB6])                      #38
              2a51 0500  ld   [x]         12249  ld([X])                         #39 var.7
              2a52 de00  st   [y,x++]     12250  st([Y,Xpp])                     #40
              2a53 c2b7  st   [$b7]       12251  st([0xB7])                      #41
              2a54 1118  ld   [$18],x     12252  ld([vAC],X)                     #42
              2a55 1519  ld   [$19],y     12253  ld([vAC+1],Y)                   #43
              2a56 01b0  ld   [$b0]       12254  ld([0xB0])                      #44
              2a57 de00  st   [y,x++]     12255  st([Y,Xpp])                     #45 poke [vAC], var.0
              2a58 01b1  ld   [$b1]       12256  ld([0xB1])                      #46
              2a59 de00  st   [y,x++]     12257  st([Y,Xpp])                     #47 poke [vAC], var.1
              2a5a 01b2  ld   [$b2]       12258  ld([0xB2])                      #48
              2a5b de00  st   [y,x++]     12259  st([Y,Xpp])                     #49 poke [vAC], var.2
              2a5c 01b3  ld   [$b3]       12260  ld([0xB3])                      #50
              2a5d de00  st   [y,x++]     12261  st([Y,Xpp])                     #51 poke [vAC], var.3
              2a5e 01b4  ld   [$b4]       12262  ld([0xB4])                      #52
              2a5f de00  st   [y,x++]     12263  st([Y,Xpp])                     #53 poke [vAC], var.4
              2a60 01b5  ld   [$b5]       12264  ld([0xB5])                      #54
              2a61 de00  st   [y,x++]     12265  st([Y,Xpp])                     #55 poke [vAC], var.5
              2a62 01b6  ld   [$b6]       12266  ld([0xB6])                      #56
              2a63 de00  st   [y,x++]     12267  st([Y,Xpp])                     #57 poke [vAC], var.6
              2a64 01b7  ld   [$b7]       12268  ld([0xB7])                      #58
              2a65 de00  st   [y,x++]     12269  st([Y,Xpp])                     #59 poke [vAC], var.7
              2a66 1403  ld   $03,y       12270  ld(hi('NEXTY'),Y)               #60
              2a67 e000  jmp  y,$00       12271  jmp(Y,'NEXTY')                  #61
              2a68 00e0  ld   $e0         12272  ld(-64/2)                       #62
                                          12273
                                          12274  label('.mokea#18')
.mokea#18:    2a69 0022  ld   $22         12275  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2a6a c202  st   [$02]       12276  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2a6b 9401  adda $01,y       12277  adda(1,Y)                       #20 retry instruction
              2a6c e000  jmp  y,$00       12278  jmp(Y,'NEXTY')                  #21
              2a6d 00f4  ld   $f4         12279  ld(-24/2)                       #22
                                          12280
                                          12281
                                          12282  # NEEKA implementation
                                          12283  label('neeka#13')
neeka#13:     2a6e 00fe  ld   $fe         12284  ld(min(0,maxTicks-34/2))        #13
              2a6f 8115  adda [$15]       12285  adda([vTicks])                  #14
              2a70 e885  blt  .neeka#17   12286  blt('.neeka#17')                #15 not enough time left, so retry
              2a71 012b  ld   [$2b]       12287  ld([sysArgs+7])                 #16 number of bytes to peek
              2a72 a001  suba $01         12288  suba(1)                         #17
              2a73 f478  bge  .neeka#20   12289  bge('.neeka#20')                #18
              2a74 c22b  st   [$2b]       12290  st([sysArgs+7])                 #19
              2a75 1403  ld   $03,y       12291  ld(hi('NEXTY'),Y)               #20 done
              2a76 e000  jmp  y,$00       12292  jmp(Y,'NEXTY')                  #21
              2a77 00f4  ld   $f4         12293  ld(-24/2)                       #22
                                          12294
                                          12295  label('.neeka#20')
.neeka#20:    2a78 1519  ld   [$19],y     12296  ld([vAC+1],Y)                   #20
              2a79 9118  adda [$18],x     12297  adda([vAC],X)                   #21
              2a7a 0d00  ld   [y,x]       12298  ld([Y,X])                       #22 peek [vAC + index]
              2a7b c21d  st   [$1d]       12299  st([vTmp])                      #23
              2a7c 012a  ld   [$2a]       12300  ld([sysArgs+6])                 #24
              2a7d 912b  adda [$2b],x     12301  adda([sysArgs+7],X)             #25 var + index
              2a7e 011d  ld   [$1d]       12302  ld([vTmp])                      #26
              2a7f c600  st   [x]         12303  st([X])                         #27 [var + index] = peek [vAC + index]
              2a80 0021  ld   $21         12304  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a81 c202  st   [$02]       12305  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a82 9401  adda $01,y       12306  adda(1,Y)                       #30 restart instruction
              2a83 e000  jmp  y,$00       12307  jmp(Y,'NEXTY')                  #31
              2a84 00ef  ld   $ef         12308  ld(-34/2)                       #32
                                          12309
                                          12310  label('.neeka#17')
.neeka#17:    2a85 0021  ld   $21         12311  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2a86 c202  st   [$02]       12312  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2a87 9401  adda $01,y       12313  adda(1,Y)                       #19 retry instruction
              2a88 e0cb  jmp  y,$cb       12314  jmp(Y,'REENTER')                #20
              2a89 00f4  ld   $f4         12315  ld(-24/2)                       #21
                                          12316
                                          12317
                                          12318  # NOKEA implementation
                                          12319  label('nokea#13')
nokea#13:     2a8a 00fe  ld   $fe         12320  ld(min(0,maxTicks-34/2))        #13
              2a8b 8115  adda [$15]       12321  adda([vTicks])                  #14
              2a8c e8a1  blt  .nokea#17   12322  blt('.nokea#17')                #15 not enough time left, so retry
              2a8d 012b  ld   [$2b]       12323  ld([sysArgs+7])                 #16 number of bytes to peek
              2a8e a001  suba $01         12324  suba(1)                         #17
              2a8f f494  bge  .nokea#20   12325  bge('.nokea#20')                #18
              2a90 c22b  st   [$2b]       12326  st([sysArgs+7])                 #19
              2a91 1403  ld   $03,y       12327  ld(hi('NEXTY'),Y)               #20 done
              2a92 e000  jmp  y,$00       12328  jmp(Y,'NEXTY')                  #21
              2a93 00f4  ld   $f4         12329  ld(-24/2)                       #22
                                          12330
                                          12331  label('.nokea#20')
.nokea#20:    2a94 912a  adda [$2a],x     12332  adda([sysArgs+6],X)             #20 var + index
              2a95 0500  ld   [x]         12333  ld([X])                         #21
              2a96 c21d  st   [$1d]       12334  st([vTmp])                      #22
              2a97 1519  ld   [$19],y     12335  ld([vAC+1],Y)                   #23
              2a98 012b  ld   [$2b]       12336  ld([sysArgs+7])                 #24
              2a99 9118  adda [$18],x     12337  adda([vAC],X)                   #25 vAC + index
              2a9a 011d  ld   [$1d]       12338  ld([vTmp])                      #26
              2a9b ce00  st   [y,x]       12339  st([Y,X])                       #27 [vAC + index] = peek [var + index]
              2a9c 0021  ld   $21         12340  ld(hi('PREFX3_PAGE'))           #28 ENTER is at $(n-1)ff, where n = instruction page
              2a9d c202  st   [$02]       12341  st([vCpuSelect])                #29 restore PREFX3 instruction page
              2a9e 9401  adda $01,y       12342  adda(1,Y)                       #30 restart instruction
              2a9f e000  jmp  y,$00       12343  jmp(Y,'NEXTY')                  #31
              2aa0 00ef  ld   $ef         12344  ld(-34/2)                       #32
                                          12345
                                          12346  label('.nokea#17')
.nokea#17:    2aa1 0021  ld   $21         12347  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              2aa2 c202  st   [$02]       12348  st([vCpuSelect])                #18 restore PREFX3 instruction page
              2aa3 9401  adda $01,y       12349  adda(1,Y)                       #19 retry instruction
              2aa4 e0cb  jmp  y,$cb       12350  jmp(Y,'REENTER')                #20
              2aa5 00f4  ld   $f4         12351  ld(-24/2)                       #21
                                          12352
                                          12353
                                          12354  # DBGE implementation
                                          12355  label('dbge#13')
dbge#13:      2aa6 1517  ld   [$17],y     12356  ld([vPC+1],Y)                   #13 vPC.hi
              2aa7 c21d  st   [$1d]       12357  st([vTmp])                      #14 branch offset
              2aa8 de00  st   [y,x++]     12358  st([Y,Xpp])                     #15 X++, address of counter
              2aa9 0d00  ld   [y,x]       12359  ld([Y,X])                       #16
              2aaa 1200  ld   ac,x        12360  ld(AC,X)                        #17 fetch counter
              2aab 0500  ld   [x]         12361  ld([X])                         #18
              2aac a001  suba $01         12362  suba(1)                         #19 decrement counter
              2aad e8b4  blt  .dbge#22    12363  blt('.dbge#22')                 #20 if < 0 BRA
              2aae c600  st   [x]         12364  st([X])                         #21
              2aaf 011d  ld   [$1d]       12365  ld([vTmp])                      #22
              2ab0 c216  st   [$16]       12366  st([vPC])                       #23 BRA to branch offset
              2ab1 1403  ld   $03,y       12367  ld(hi('NEXTY'),Y)               #24
              2ab2 e000  jmp  y,$00       12368  jmp(Y,'NEXTY')                  #25
              2ab3 00f2  ld   $f2         12369  ld(-28/2)                       #26
                                          12370
                                          12371  label('.dbge#22')
.dbge#22:     2ab4 0116  ld   [$16]       12372  ld([vPC])                       #22
              2ab5 8001  adda $01         12373  adda(1)                         #23
              2ab6 c216  st   [$16]       12374  st([vPC])                       #24 advance vPC by 1
              2ab7 1403  ld   $03,y       12375  ld(hi('REENTER'),Y)             #25
              2ab8 e0cb  jmp  y,$cb       12376  jmp(Y,'REENTER')                #26
              2ab9 00f1  ld   $f1         12377  ld(-30/2)                       #27
                                          12378
                                          12379
                                          12380  # DJNE implementation
                                          12381  label('djne#13')
djne#13:      2aba de00  st   [y,x++]     12382  st([Y,Xpp])                     #13 X++
              2abb c21d  st   [$1d]       12383  st([vTmp])                      #14 var
              2abc 00f8  ld   $f8         12384  ld(min(0,maxTicks-46/2))        #15
              2abd 8115  adda [$15]       12385  adda([vTicks])                  #16
              2abe e8e7  blt  .djne#19    12386  blt('.djne#19')                 #17 not enough time left, so retry
              2abf 0d00  ld   [y,x]       12387  ld([Y,X])                       #18
              2ac0 de00  st   [y,x++]     12388  st([Y,Xpp])                     #19 X++
              2ac1 c22a  st   [$2a]       12389  st([sysArgs+6])                 #20 jump addr.lo
              2ac2 0d00  ld   [y,x]       12390  ld([Y,X])                       #21
              2ac3 c22b  st   [$2b]       12391  st([sysArgs+7])                 #22 jump addr.hi
              2ac4 1400  ld   $00,y       12392  ld(0,Y)                         #23
              2ac5 111d  ld   [$1d],x     12393  ld([vTmp],X)                    #24
              2ac6 0500  ld   [x]         12394  ld([X])                         #25 count.lo
              2ac7 a001  suba $01         12395  suba(1)                         #26
              2ac8 de00  st   [y,x++]     12396  st([Y,Xpp])                     #27 count.lo-- X++
              2ac9 4500  ora  [x]         12397  ora([X])                        #28 count.lo | count.hi
              2aca f0da  beq  .djne#31    12398  beq('.djne#31')                 #19 count = 0
              2acb 111d  ld   [$1d],x     12399  ld([vTmp],X)                    #30
              2acc 0500  ld   [x]         12400  ld([X])                         #31 count.lo
              2acd de00  st   [y,x++]     12401  st([Y,Xpp])                     #32 X++
              2ace 60ff  xora $ff         12402  xora(0xFF)                      #33 if low byte is 0xFF
              2acf ece0  bne  .djne#36    12403  bne('.djne#36')                 #34
              2ad0 0500  ld   [x]         12404  ld([X])                         #35 count.hi
              2ad1 a001  suba $01         12405  suba(1)                         #36
              2ad2 c600  st   [x]         12406  st([X])                         #37
              2ad3 012a  ld   [$2a]       12407  ld([sysArgs+6])                 #38 jump
              2ad4 c216  st   [$16]       12408  st([vPC])                       #39
              2ad5 012b  ld   [$2b]       12409  ld([sysArgs+7])                 #40
              2ad6 c217  st   [$17]       12410  st([vPC+1])                     #41
              2ad7 1403  ld   $03,y       12411  ld(hi('NEXTY'),Y)               #42
              2ad8 e000  jmp  y,$00       12412  jmp(Y,'NEXTY')                  #43
              2ad9 00e9  ld   $e9         12413  ld(-46/2)                       #44
                                          12414
                                          12415  label('.djne#31')
.djne#31:     2ada 0116  ld   [$16]       12416  ld([vPC])                       #31 done
              2adb 8002  adda $02         12417  adda(2)                         #32
              2adc c216  st   [$16]       12418  st([vPC])                       #33
              2add 1403  ld   $03,y       12419  ld(hi('NEXTY'),Y)               #34
              2ade e000  jmp  y,$00       12420  jmp(Y,'NEXTY')                  #35
              2adf 00ed  ld   $ed         12421  ld(-38/2)                       #36
                                          12422
                                          12423  label('.djne#36')
.djne#36:     2ae0 012a  ld   [$2a]       12424  ld([sysArgs+6])                 #36 jump
              2ae1 c216  st   [$16]       12425  st([vPC])                       #37
              2ae2 012b  ld   [$2b]       12426  ld([sysArgs+7])                 #38
              2ae3 c217  st   [$17]       12427  st([vPC+1])                     #39
              2ae4 1403  ld   $03,y       12428  ld(hi('NEXTY'),Y)               #40
              2ae5 e000  jmp  y,$00       12429  jmp(Y,'NEXTY')                  #41
              2ae6 00ea  ld   $ea         12430  ld(-44/2)                       #42
                                          12431
                                          12432  label('.djne#19')
.djne#19:     2ae7 0116  ld   [$16]       12433  ld([vPC])                       #19 retry
              2ae8 a002  suba $02         12434  suba(2)                         #20
              2ae9 c216  st   [$16]       12435  st([vPC])                       #21
              2aea 1403  ld   $03,y       12436  ld(hi('NEXTY'),Y)               #22
              2aeb e000  jmp  y,$00       12437  jmp(Y,'NEXTY')                  #23
              2aec 00f3  ld   $f3         12438  ld(-26/2)                       #24
                                          12439
                                          12440
              2aed 0200  nop              12441  fillers(until=0xff)
              2aee 0200  nop
              2aef 0200  nop
              * 18 times
              2aff 0200  nop              12442  align(0x100, size=0x100)
                                          12443
                                          12444  #-----------------------------------------------------------------------
                                          12445  #       More vCPU instruction implementations, (0x2B00)
                                          12446  #-----------------------------------------------------------------------
                                          12447  #
                                          12448  # DJGE implementation
                                          12449  label('djge#13')
djge#13:      2b00 de00  st   [y,x++]     12450  st([Y,Xpp])                     #13
              2b01 c21d  st   [$1d]       12451  st([vTmp])                      #14 var
              2b02 00fa  ld   $fa         12452  ld(min(0,maxTicks-42/2))        #15
              2b03 8115  adda [$15]       12453  adda([vTicks])                  #16
              2b04 e829  blt  .djge#19    12454  blt('.djge#19')                 #17 not enough time left, so retry
              2b05 0d00  ld   [y,x]       12455  ld([Y,X])                       #18
              2b06 de00  st   [y,x++]     12456  st([Y,Xpp])                     #19
              2b07 c22a  st   [$2a]       12457  st([sysArgs+6])                 #20 jump addr.lo
              2b08 0d00  ld   [y,x]       12458  ld([Y,X])                       #21
              2b09 c22b  st   [$2b]       12459  st([sysArgs+7])                 #22 jump addr.hi
              2b0a 1400  ld   $00,y       12460  ld(0,Y)                         #23
              2b0b 111d  ld   [$1d],x     12461  ld([vTmp],X)                    #24
              2b0c 0500  ld   [x]         12462  ld([X])                         #25 count.lo
              2b0d a001  suba $01         12463  suba(1)                         #26
              2b0e de00  st   [y,x++]     12464  st([Y,Xpp])                     #27 count.lo-- X++
              2b0f 60ff  xora $ff         12465  xora(0xFF)                      #28 if low byte is 0xFF
              2b10 ec1c  bne  .djge#31    12466  bne('.djge#31')                 #29
              2b11 0500  ld   [x]         12467  ld([X])                         #30 count.hi
              2b12 f023  beq  .djge#33    12468  beq('.djge#33')                 #31
              2b13 a001  suba $01         12469  suba(1)                         #32
              2b14 c600  st   [x]         12470  st([X])                         #33
              2b15 012a  ld   [$2a]       12471  ld([sysArgs+6])                 #34 jump
              2b16 c216  st   [$16]       12472  st([vPC])                       #35
              2b17 012b  ld   [$2b]       12473  ld([sysArgs+7])                 #36
              2b18 c217  st   [$17]       12474  st([vPC+1])                     #37
              2b19 1403  ld   $03,y       12475  ld(hi('NEXTY'),Y)               #38
              2b1a e000  jmp  y,$00       12476  jmp(Y,'NEXTY')                  #39
              2b1b 00eb  ld   $eb         12477  ld(-42/2)                       #40
                                          12478
                                          12479  label('.djge#31')
.djge#31:     2b1c 012a  ld   [$2a]       12480  ld([sysArgs+6])                 #31 jump
              2b1d c216  st   [$16]       12481  st([vPC])                       #32
              2b1e 012b  ld   [$2b]       12482  ld([sysArgs+7])                 #33
              2b1f c217  st   [$17]       12483  st([vPC+1])                     #34
              2b20 1403  ld   $03,y       12484  ld(hi('REENTER'),Y)             #35
              2b21 e0cb  jmp  y,$cb       12485  jmp(Y,'REENTER')                #36
              2b22 00ec  ld   $ec         12486  ld(-40/2)                       #37
                                          12487
                                          12488  label('.djge#33')
.djge#33:     2b23 0116  ld   [$16]       12489  ld([vPC])                       #33 done
              2b24 8002  adda $02         12490  adda(2)                         #34
              2b25 c216  st   [$16]       12491  st([vPC])                       #35
              2b26 1403  ld   $03,y       12492  ld(hi('NEXTY'),Y)               #36
              2b27 e000  jmp  y,$00       12493  jmp(Y,'NEXTY')                  #37
              2b28 00ec  ld   $ec         12494  ld(-40/2)                       #38
                                          12495
                                          12496  label('.djge#19')
.djge#19:     2b29 0116  ld   [$16]       12497  ld([vPC])                       #19 retry
              2b2a a002  suba $02         12498  suba(2)                         #20
              2b2b c216  st   [$16]       12499  st([vPC])                       #21
              2b2c 1403  ld   $03,y       12500  ld(hi('NEXTY'),Y)               #22
              2b2d e000  jmp  y,$00       12501  jmp(Y,'NEXTY')                  #23
              2b2e 00f3  ld   $f3         12502  ld(-26/2)                       #24
                                          12503
                                          12504
                                          12505  # ADDVL
                                          12506  label('addvl#13')
addvl#13:     2b2f 0500  ld   [x]         12507  ld([X])                         #13
              2b30 c21d  st   [$1d]       12508  st([vTmp])                      #14 save src.0
              2b31 112b  ld   [$2b],x     12509  ld([sysArgs+7],X)               #15 dst.0
              2b32 00e8  ld   $e8         12510  ld(min(0,maxTicks-78/2))        #16
              2b33 8115  adda [$15]       12511  adda([vTicks])                  #17
              2b34 e874  blt  .addvl#20   12512  blt('.addvl#20')                #18 not enough time left, so retry
              2b35 011d  ld   [$1d]       12513  ld([vTmp])                      #19 src.0
              2b36 8500  adda [x]         12514  adda([X])                       #20
              2b37 c600  st   [x]         12515  st([X])                         #21 dst.0 += src.0
              2b38 e83c  blt  .addvl#24   12516  bmi('.addvl#24')                #22 carry
              2b39 a11d  suba [$1d]       12517  suba([vTmp])                    #23 original dst.0
              2b3a fc3e  bra  .addvl#26   12518  bra('.addvl#26')                #24
              2b3b 411d  ora  [$1d]       12519  ora([vTmp])                     #25 carry in bit 7
                                          12520
                                          12521  label('.addvl#24')
.addvl#24:    2b3c 211d  anda [$1d]       12522  anda([vTmp])                    #24 carry in bit 7
              2b3d 0200  nop              12523  nop()                           #25
                                          12524
                                          12525  label('.addvl#26')
.addvl#26:    2b3e 3080  anda $80,x       12526  anda(0x80,X)                    #26 carry to bit 0
              2b3f 0500  ld   [x]         12527  ld([X])                         #27
              2b40 c21d  st   [$1d]       12528  st([vTmp])                      #28 store carry
              2b41 012a  ld   [$2a]       12529  ld([sysArgs+6])                 #29
              2b42 9001  adda $01,x       12530  adda(1,X)                       #30 src.1
              2b43 011d  ld   [$1d]       12531  ld([vTmp])                      #31
              2b44 8500  adda [x]         12532  adda([X])                       #32
              2b45 c21d  st   [$1d]       12533  st([vTmp])                      #33 src.1 += carry
              2b46 012b  ld   [$2b]       12534  ld([sysArgs+7])                 #34
              2b47 9001  adda $01,x       12535  adda(1,X)                       #35
              2b48 011d  ld   [$1d]       12536  ld([vTmp])                      #36
              2b49 8500  adda [x]         12537  adda([X])                       #37
              2b4a c600  st   [x]         12538  st([X])                         #38 dst.1 += src.1
              2b4b e84f  blt  .addvl#41   12539  bmi('.addvl#41')                #39 carry
              2b4c a11d  suba [$1d]       12540  suba([vTmp])                    #40 original dst.1
              2b4d fc51  bra  .addvl#43   12541  bra('.addvl#43')                #41
              2b4e 411d  ora  [$1d]       12542  ora([vTmp])                     #42 carry in bit 7
                                          12543
                                          12544  label('.addvl#41')
.addvl#41:    2b4f 211d  anda [$1d]       12545  anda([vTmp])                    #41 carry in bit 7
              2b50 0200  nop              12546  nop()                           #42
                                          12547
                                          12548  label('.addvl#43')
.addvl#43:    2b51 3080  anda $80,x       12549  anda(0x80,X)                    #43 carry to bit 0
              2b52 0500  ld   [x]         12550  ld([X])                         #44
              2b53 c21d  st   [$1d]       12551  st([vTmp])                      #45 store carry
              2b54 012a  ld   [$2a]       12552  ld([sysArgs+6])                 #46
              2b55 9002  adda $02,x       12553  adda(2,X)                       #47 src.2
              2b56 011d  ld   [$1d]       12554  ld([vTmp])                      #48
              2b57 8500  adda [x]         12555  adda([X])                       #49
              2b58 c21d  st   [$1d]       12556  st([vTmp])                      #50 src.2 += carry
              2b59 012b  ld   [$2b]       12557  ld([sysArgs+7])                 #51
              2b5a 9002  adda $02,x       12558  adda(2,X)                       #52
              2b5b 011d  ld   [$1d]       12559  ld([vTmp])                      #53
              2b5c 8500  adda [x]         12560  adda([X])                       #54
              2b5d c600  st   [x]         12561  st([X])                         #55 dst.2 += src.2
              2b5e e862  blt  .addvl#58   12562  bmi('.addvl#58')                #56 carry
              2b5f a11d  suba [$1d]       12563  suba([vTmp])                    #57 original dst.2
              2b60 fc64  bra  .addvl#60   12564  bra('.addvl#60')                #58
              2b61 411d  ora  [$1d]       12565  ora([vTmp])                     #59 carry in bit 7
                                          12566
                                          12567  label('.addvl#58')
.addvl#58:    2b62 211d  anda [$1d]       12568  anda([vTmp])                    #58 carry in bit 7
              2b63 0200  nop              12569  nop()                           #59
                                          12570
                                          12571  label('.addvl#60')
.addvl#60:    2b64 3080  anda $80,x       12572  anda(0x80,X)                    #60 carry to bit 0
              2b65 0500  ld   [x]         12573  ld([X])                         #61
              2b66 c21d  st   [$1d]       12574  st([vTmp])                      #62 store carry
              2b67 012a  ld   [$2a]       12575  ld([sysArgs+6])                 #63
              2b68 9003  adda $03,x       12576  adda(3,X)                       #64 src.3
              2b69 011d  ld   [$1d]       12577  ld([vTmp])                      #65
              2b6a 8500  adda [x]         12578  adda([X])                       #66
              2b6b c21d  st   [$1d]       12579  st([vTmp])                      #67 src.3 += carry
              2b6c 012b  ld   [$2b]       12580  ld([sysArgs+7])                 #68
              2b6d 9003  adda $03,x       12581  adda(3,X)                       #69
              2b6e 011d  ld   [$1d]       12582  ld([vTmp])                      #70
              2b6f 8500  adda [x]         12583  adda([X])                       #71
              2b70 c600  st   [x]         12584  st([X])                         #72 dst.3 += src.3
              2b71 1403  ld   $03,y       12585  ld(hi('REENTER'),Y)             #73
              2b72 e0cb  jmp  y,$cb       12586  jmp(Y,'REENTER')                #74
              2b73 00d9  ld   $d9         12587  ld(-78/2)                       #75
                                          12588
                                          12589  label('.addvl#20')
.addvl#20:    2b74 0021  ld   $21         12590  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2b75 c202  st   [$02]       12591  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2b76 9401  adda $01,y       12592  adda(1,Y)                       #22 retry instruction
              2b77 e000  jmp  y,$00       12593  jmp(Y,'NEXTY')                  #23
              2b78 00f3  ld   $f3         12594  ld(-26/2)                       #24
                                          12595
                                          12596
                                          12597  # SUBVL
                                          12598  label('subvl#13')
subvl#13:     2b79 0500  ld   [x]         12599  ld([X])                         #13
              2b7a c21d  st   [$1d]       12600  st([vTmp])                      #14 save src.0
              2b7b 112b  ld   [$2b],x     12601  ld([sysArgs+7],X)               #15 dst.0
              2b7c 00ea  ld   $ea         12602  ld(min(0,maxTicks-74/2))        #16
              2b7d 8115  adda [$15]       12603  adda([vTicks])                  #17
              2b7e e8c0  blt  .subvl#20   12604  blt('.subvl#20')                #18 not enough time left, so retry
              2b7f 0500  ld   [x]         12605  ld([X])                         #19 dst.0
              2b80 e885  blt  .subvl#22   12606  bmi('.subvl#22')                #20
              2b81 a11d  suba [$1d]       12607  suba([vTmp])                    #21
              2b82 c600  st   [x]         12608  st([X])                         #22 dst.0 -= src.0
              2b83 fc88  bra  .subvl#25   12609  bra('.subvl#25')                #23
              2b84 411d  ora  [$1d]       12610  ora([vTmp])                     #24 borrow in bit 7
                                          12611
                                          12612  label('.subvl#22')
.subvl#22:    2b85 c600  st   [x]         12613  st([X])                         #22 dst.0 -= src.0
              2b86 211d  anda [$1d]       12614  anda([vTmp])                    #23 borrow in bit 7
              2b87 0200  nop              12615  nop()                           #24
                                          12616
                                          12617  label('.subvl#25')
.subvl#25:    2b88 3080  anda $80,x       12618  anda(0x80,X)                    #25 borrow to bit 0
              2b89 0500  ld   [x]         12619  ld([X])                         #26
              2b8a c2b0  st   [$b0]       12620  st([0xB0])                      #27 store borrow
              2b8b 012a  ld   [$2a]       12621  ld([sysArgs+6])                 #28
              2b8c 9001  adda $01,x       12622  adda(1,X)                       #29
              2b8d 0500  ld   [x]         12623  ld([X])                         #30
              2b8e c21d  st   [$1d]       12624  st([vTmp])                      #31 src.1
              2b8f 012b  ld   [$2b]       12625  ld([sysArgs+7])                 #32
              2b90 9001  adda $01,x       12626  adda(1,X)                       #33
              2b91 0500  ld   [x]         12627  ld([X])                         #34 dst.1
              2b92 e898  blt  .subvl#37   12628  bmi('.subvl#37')                #35
              2b93 a11d  suba [$1d]       12629  suba([vTmp])                    #36
              2b94 a1b0  suba [$b0]       12630  suba([0xB0])                    #37
              2b95 c600  st   [x]         12631  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b96 fc9c  bra  .subvl#41   12632  bra('.subvl#41')                #39
              2b97 411d  ora  [$1d]       12633  ora([vTmp])                     #40 borrow in bit 7
                                          12634
                                          12635  label('.subvl#37')
.subvl#37:    2b98 a1b0  suba [$b0]       12636  suba([0xB0])                    #37
              2b99 c600  st   [x]         12637  st([X])                         #38 dst.1 = dst.1 - src.1 - borrow
              2b9a 211d  anda [$1d]       12638  anda([vTmp])                    #39 borrow in bit 7
              2b9b 0200  nop              12639  nop()                           #40
                                          12640
                                          12641  label('.subvl#41')
.subvl#41:    2b9c 3080  anda $80,x       12642  anda(0x80,X)                    #41 borrow to bit 0
              2b9d 0500  ld   [x]         12643  ld([X])                         #42
              2b9e c2b0  st   [$b0]       12644  st([0xB0])                      #43 store borrow
              2b9f 012a  ld   [$2a]       12645  ld([sysArgs+6])                 #44
              2ba0 9002  adda $02,x       12646  adda(2,X)                       #45
              2ba1 0500  ld   [x]         12647  ld([X])                         #46
              2ba2 c21d  st   [$1d]       12648  st([vTmp])                      #47 src.2
              2ba3 012b  ld   [$2b]       12649  ld([sysArgs+7])                 #48
              2ba4 9002  adda $02,x       12650  adda(2,X)                       #49
              2ba5 0500  ld   [x]         12651  ld([X])                         #50 dst.2
              2ba6 e8ac  blt  .subvl#53   12652  bmi('.subvl#53')                #51
              2ba7 a11d  suba [$1d]       12653  suba([vTmp])                    #52
              2ba8 a1b0  suba [$b0]       12654  suba([0xB0])                    #53
              2ba9 c600  st   [x]         12655  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2baa fcb0  bra  .subvl#57   12656  bra('.subvl#57')                #55
              2bab 411d  ora  [$1d]       12657  ora([vTmp])                     #56 borrow in bit 7
                                          12658
                                          12659  label('.subvl#53')
.subvl#53:    2bac a1b0  suba [$b0]       12660  suba([0xB0])                    #53
              2bad c600  st   [x]         12661  st([X])                         #54 dst.2 = dst.2 - src.2 - borrow
              2bae 211d  anda [$1d]       12662  anda([vTmp])                    #55 borrow in bit 7
              2baf 0200  nop              12663  nop()                           #56
                                          12664
                                          12665  label('.subvl#57')
.subvl#57:    2bb0 3080  anda $80,x       12666  anda(0x80,X)                    #57 borrow to bit 0
              2bb1 0500  ld   [x]         12667  ld([X])                         #58
              2bb2 c2b0  st   [$b0]       12668  st([0xB0])                      #59 store borrow
              2bb3 012a  ld   [$2a]       12669  ld([sysArgs+6])                 #60
              2bb4 9003  adda $03,x       12670  adda(3,X)                       #61
              2bb5 0500  ld   [x]         12671  ld([X])                         #62
              2bb6 c21d  st   [$1d]       12672  st([vTmp])                      #63 src.3
              2bb7 012b  ld   [$2b]       12673  ld([sysArgs+7])                 #64
              2bb8 9003  adda $03,x       12674  adda(3,X)                       #65 dst.3
              2bb9 0500  ld   [x]         12675  ld([X])                         #66
              2bba a11d  suba [$1d]       12676  suba([vTmp])                    #67
              2bbb a1b0  suba [$b0]       12677  suba([0xB0])                    #68
              2bbc c600  st   [x]         12678  st([X])                         #69 dst.3 = dst.3 - src.3 - borrow
              2bbd 1403  ld   $03,y       12679  ld(hi('NEXTY'),Y)               #70
              2bbe e000  jmp  y,$00       12680  jmp(Y,'NEXTY')                  #71
              2bbf 00db  ld   $db         12681  ld(-74/2)                       #72
                                          12682
                                          12683  label('.subvl#20')
.subvl#20:    2bc0 0021  ld   $21         12684  ld(hi('PREFX3_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              2bc1 c202  st   [$02]       12685  st([vCpuSelect])                #21 restore PREFX3 instruction page
              2bc2 9401  adda $01,y       12686  adda(1,Y)                       #22 retry instruction
              2bc3 e000  jmp  y,$00       12687  jmp(Y,'NEXTY')                  #23
              2bc4 00f3  ld   $f3         12688  ld(-26/2)                       #24
                                          12689
                                          12690
                                          12691  # ANDVL
                                          12692  label('andvl#13')
andvl#13:     2bc5 1400  ld   $00,y       12693  ld(0,Y)                         #13
              2bc6 00f8  ld   $f8         12694  ld(min(0,maxTicks-46/2))        #14
              2bc7 8115  adda [$15]       12695  adda([vTicks])                  #15
              2bc8 e8e4  blt  .andvl#18   12696  blt('.andvl#18')                #16 not enough time left, so retry
              2bc9 0d00  ld   [y,x]       12697  ld([Y,X])                       #17 src.0
              2bca de00  st   [y,x++]     12698  st([Y,Xpp])                     #18
              2bcb c2b0  st   [$b0]       12699  st([0xB0])                      #19
              2bcc 0d00  ld   [y,x]       12700  ld([Y,X])                       #20 src.1
              2bcd de00  st   [y,x++]     12701  st([Y,Xpp])                     #21
              2bce c2b1  st   [$b1]       12702  st([0xB1])                      #22
              2bcf 0d00  ld   [y,x]       12703  ld([Y,X])                       #23 src.2
              2bd0 de00  st   [y,x++]     12704  st([Y,Xpp])                     #24
              2bd1 c2b2  st   [$b2]       12705  st([0xB2])                      #25
              2bd2 0500  ld   [x]         12706  ld([X])                         #26 src.3
              2bd3 c2b3  st   [$b3]       12707  st([0xB3])                      #27
              2bd4 112b  ld   [$2b],x     12708  ld([sysArgs+7],X)               #28
              2bd5 0500  ld   [x]         12709  ld([X])                         #29 dst.0
              2bd6 21b0  anda [$b0]       12710  anda([0xB0])                    #30
              2bd7 de00  st   [y,x++]     12711  st([Y,Xpp])                     #31 dst.0 &= src.0
              2bd8 0500  ld   [x]         12712  ld([X])                         #32 dst.1
              2bd9 21b1  anda [$b1]       12713  anda([0xB1])                    #33
              2bda de00  st   [y,x++]     12714  st([Y,Xpp])                     #34 dst.1 &= src.1
              2bdb 0500  ld   [x]         12715  ld([X])                         #35 dst.2
              2bdc 21b2  anda [$b2]       12716  anda([0xB2])                    #36
              2bdd de00  st   [y,x++]     12717  st([Y,Xpp])                     #37 dst.2 &= src.2
              2bde 0500  ld   [x]         12718  ld([X])                         #38 dst.3
              2bdf 21b3  anda [$b3]       12719  anda([0xB3])                    #39
              2be0 de00  st   [y,x++]     12720  st([Y,Xpp])                     #40 dst.3 &= src.3
              2be1 1403  ld   $03,y       12721  ld(hi('REENTER'),Y)             #41
              2be2 e0cb  jmp  y,$cb       12722  jmp(Y,'REENTER')                #42
              2be3 00e9  ld   $e9         12723  ld(-46/2)                       #43
                                          12724
                                          12725  label('.andvl#18')
.andvl#18:    2be4 0021  ld   $21         12726  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2be5 c202  st   [$02]       12727  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2be6 9401  adda $01,y       12728  adda(1,Y)                       #20 retry instruction
              2be7 e000  jmp  y,$00       12729  jmp(Y,'NEXTY')                  #21
              2be8 00f4  ld   $f4         12730  ld(-24/2)                       #22
                                          12731
                                          12732
              2be9 0200  nop              12733  fillers(until=0xff)
              2bea 0200  nop
              2beb 0200  nop
              * 22 times
              2bff 0200  nop              12734  align(0x100, size=0x100)
                                          12735
                                          12736  #-----------------------------------------------------------------------
                                          12737  #       More vCPU instruction implementations, (0x2C00)
                                          12738  #-----------------------------------------------------------------------
                                          12739  #
                                          12740  # ORVL
                                          12741  label('orvl#13')
orvl#13:      2c00 1400  ld   $00,y       12742  ld(0,Y)                         #13
              2c01 00f8  ld   $f8         12743  ld(min(0,maxTicks-46/2))        #14
              2c02 8115  adda [$15]       12744  adda([vTicks])                  #15
              2c03 e81f  blt  .orvl#18    12745  blt('.orvl#18')                 #16 not enough time left, so retry
              2c04 0d00  ld   [y,x]       12746  ld([Y,X])                       #17 src.0
              2c05 de00  st   [y,x++]     12747  st([Y,Xpp])                     #18
              2c06 c2b0  st   [$b0]       12748  st([0xB0])                      #19
              2c07 0d00  ld   [y,x]       12749  ld([Y,X])                       #20 src.1
              2c08 de00  st   [y,x++]     12750  st([Y,Xpp])                     #21
              2c09 c2b1  st   [$b1]       12751  st([0xB1])                      #22
              2c0a 0d00  ld   [y,x]       12752  ld([Y,X])                       #23 src.2
              2c0b de00  st   [y,x++]     12753  st([Y,Xpp])                     #24
              2c0c c2b2  st   [$b2]       12754  st([0xB2])                      #25
              2c0d 0500  ld   [x]         12755  ld([X])                         #26 src.3
              2c0e c2b3  st   [$b3]       12756  st([0xB3])                      #27
              2c0f 112b  ld   [$2b],x     12757  ld([sysArgs+7],X)               #28
              2c10 0500  ld   [x]         12758  ld([X])                         #29 dst.0
              2c11 41b0  ora  [$b0]       12759  ora([0xB0])                     #30
              2c12 de00  st   [y,x++]     12760  st([Y,Xpp])                     #31 dst.0 |= src.0
              2c13 0500  ld   [x]         12761  ld([X])                         #32 dst.1
              2c14 41b1  ora  [$b1]       12762  ora([0xB1])                     #33
              2c15 de00  st   [y,x++]     12763  st([Y,Xpp])                     #34 dst.1 |= src.1
              2c16 0500  ld   [x]         12764  ld([X])                         #35 dst.2
              2c17 41b2  ora  [$b2]       12765  ora([0xB2])                     #36
              2c18 de00  st   [y,x++]     12766  st([Y,Xpp])                     #37 dst.2 |= src.2
              2c19 0500  ld   [x]         12767  ld([X])                         #38 dst.3
              2c1a 41b3  ora  [$b3]       12768  ora([0xB3])                     #39
              2c1b de00  st   [y,x++]     12769  st([Y,Xpp])                     #40 dst.3 |= src.3
              2c1c 1403  ld   $03,y       12770  ld(hi('REENTER'),Y)             #41
              2c1d e0cb  jmp  y,$cb       12771  jmp(Y,'REENTER')                #42
              2c1e 00e9  ld   $e9         12772  ld(-46/2)                       #43
                                          12773
                                          12774  label('.orvl#18')
.orvl#18:     2c1f 0021  ld   $21         12775  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c20 c202  st   [$02]       12776  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c21 9401  adda $01,y       12777  adda(1,Y)                       #20 retry instruction
              2c22 e000  jmp  y,$00       12778  jmp(Y,'NEXTY')                  #21
              2c23 00f4  ld   $f4         12779  ld(-24/2)                       #22
                                          12780
                                          12781
                                          12782  # XORVL
                                          12783  label('xorvl#13')
xorvl#13:     2c24 1400  ld   $00,y       12784  ld(0,Y)                         #13
              2c25 00f8  ld   $f8         12785  ld(min(0,maxTicks-46/2))        #14
              2c26 8115  adda [$15]       12786  adda([vTicks])                  #15
              2c27 e843  blt  .xorvl#18   12787  blt('.xorvl#18')                #16 not enough time left, so retry
              2c28 0d00  ld   [y,x]       12788  ld([Y,X])                       #17 src.0
              2c29 de00  st   [y,x++]     12789  st([Y,Xpp])                     #18
              2c2a c2b0  st   [$b0]       12790  st([0xB0])                      #19
              2c2b 0d00  ld   [y,x]       12791  ld([Y,X])                       #20 src.1
              2c2c de00  st   [y,x++]     12792  st([Y,Xpp])                     #21
              2c2d c2b1  st   [$b1]       12793  st([0xB1])                      #22
              2c2e 0d00  ld   [y,x]       12794  ld([Y,X])                       #23 src.2
              2c2f de00  st   [y,x++]     12795  st([Y,Xpp])                     #24
              2c30 c2b2  st   [$b2]       12796  st([0xB2])                      #25
              2c31 0500  ld   [x]         12797  ld([X])                         #26 src.3
              2c32 c2b3  st   [$b3]       12798  st([0xB3])                      #27
              2c33 112b  ld   [$2b],x     12799  ld([sysArgs+7],X)               #28
              2c34 0500  ld   [x]         12800  ld([X])                         #29 dst.0
              2c35 61b0  xora [$b0]       12801  xora([0xB0])                    #30
              2c36 de00  st   [y,x++]     12802  st([Y,Xpp])                     #31 dst.0 ^= src.0
              2c37 0500  ld   [x]         12803  ld([X])                         #32 dst.1
              2c38 61b1  xora [$b1]       12804  xora([0xB1])                    #33
              2c39 de00  st   [y,x++]     12805  st([Y,Xpp])                     #34 dst.1 ^= src.1
              2c3a 0500  ld   [x]         12806  ld([X])                         #35 dst.2
              2c3b 61b2  xora [$b2]       12807  xora([0xB2])                    #36
              2c3c de00  st   [y,x++]     12808  st([Y,Xpp])                     #37 dst.2 ^= src.2
              2c3d 0500  ld   [x]         12809  ld([X])                         #38 dst.3
              2c3e 61b3  xora [$b3]       12810  xora([0xB3])                    #39
              2c3f de00  st   [y,x++]     12811  st([Y,Xpp])                     #40 dst.3 ^= src.3
              2c40 1403  ld   $03,y       12812  ld(hi('REENTER'),Y)             #41
              2c41 e0cb  jmp  y,$cb       12813  jmp(Y,'REENTER')                #42
              2c42 00e9  ld   $e9         12814  ld(-46/2)                       #43
                                          12815
                                          12816  label('.xorvl#18')
.xorvl#18:    2c43 0021  ld   $21         12817  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c44 c202  st   [$02]       12818  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2c45 9401  adda $01,y       12819  adda(1,Y)                       #20 retry instruction
              2c46 e000  jmp  y,$00       12820  jmp(Y,'NEXTY')                  #21
              2c47 00f4  ld   $f4         12821  ld(-24/2)                       #22
                                          12822
                                          12823
                                          12824  # LSRV implementation
                                          12825  label('lsrv#13')
lsrv#13:      2c48 d22b  st   [$2b],x     12826  st([sysArgs+7],X)               #13 var address
              2c49 00f3  ld   $f3         12827  ld(min(0,maxTicks-56/2))        #14
              2c4a 8115  adda [$15]       12828  adda([vTicks])                  #15
              2c4b e865  blt  .lsrv#18    12829  blt('.lsrv#18')                 #16 not enough time left, so retry
              2c4c 1405  ld   $05,y       12830  ld(hi('shiftTable'),Y)          #17 (ac >> 1) table
              2c4d 00cc  ld   $cc         12831  ld('.lsrv#27')                  #18 continuation address
              2c4e c21d  st   [$1d]       12832  st([vTmp])                      #19
              2c4f 0500  ld   [x]         12833  ld([X])                         #20 load byte from var
              2c50 20fe  anda $fe         12834  anda(0xfe)                      #21
              2c51 e200  jmp  y,ac        12835  jmp(Y,AC)                       #22
              2c52 fcff  bra  $ff         12836  bra(255)                        #23 bra shiftTable+255
                                          12837  # continues in page 0x0600 at label('.lsrv#27') fetching shifted byte from 0x0500
                                          12838
                                          12839  label('.lsrv#30')
.lsrv#30:     2c53 012b  ld   [$2b]       12840  ld([sysArgs+7])                 #30 low byte address
              2c54 8001  adda $01         12841  adda(1)                         #31
              2c55 d22a  st   [$2a],x     12842  st([sysArgs+6],X)               #32 high byte address
              2c56 0500  ld   [x]         12843  ld([X])                         #33 bit 0 of high byte
              2c57 2001  anda $01         12844  anda(1)                         #34
              2c58 807f  adda $7f         12845  adda(127)                       #35
              2c59 2080  anda $80         12846  anda(128)                       #36
              2c5a 112b  ld   [$2b],x     12847  ld([sysArgs+7],X)               #37
              2c5b 4500  ora  [x]         12848  ora([X])                        #38
              2c5c c600  st   [x]         12849  st([X])                         #39 transfer to bit 7 of low byte
              2c5d 1405  ld   $05,y       12850  ld(hi('shiftTable'),Y)          #40 (ac >> 1) table
              2c5e 00cf  ld   $cf         12851  ld('.lsrv#51')                  #41 continuation address
              2c5f c21d  st   [$1d]       12852  st([vTmp])                      #42
              2c60 112a  ld   [$2a],x     12853  ld([sysArgs+6],X)               #43
              2c61 0500  ld   [x]         12854  ld([X])                         #44
              2c62 20fe  anda $fe         12855  anda(0b11111110)                #45
              2c63 e200  jmp  y,ac        12856  jmp(Y,AC)                       #46
              2c64 fcff  bra  $ff         12857  bra(255)                        #47 bra shiftTable+255
                                          12858  # continues in page 0x0600 at label('.lsrv#51') fetching shifted byte from 0x0500
                                          12859
                                          12860  label('.lsrv#18')
.lsrv#18:     2c65 0022  ld   $22         12861  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2c66 c202  st   [$02]       12862  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2c67 9401  adda $01,y       12863  adda(1,Y)                       #20 retry instruction
              2c68 e000  jmp  y,$00       12864  jmp(Y,'NEXTY')                  #21
              2c69 00f4  ld   $f4         12865  ld(-24/2)                       #22
                                          12866  #ld([vPC])                       #18 retry instruction
                                          12867  #suba(2)                         #19
                                          12868  #st([vPC])                       #20
                                          12869  #ld(hi('REENTER'),Y)             #21
                                          12870  #jmp(Y,'REENTER')                #22
                                          12871  #ld(-26/2)                       #23
                                          12872
                                          12873
                                          12874  # LSRVL implementation
                                          12875  label('lsrvl#13')
lsrvl#13:     2c6a 1405  ld   $05,y       12876  ld(hi('shiftTable'),Y)          #13 (ac >> 1) table
              2c6b 00db  ld   $db         12877  ld(min(0,maxTicks-104/2))       #14
              2c6c 8115  adda [$15]       12878  adda([vTicks])                  #15
              2c6d e8aa  blt  .lsrvl#18   12879  blt('.lsrvl#18')                #16 not enough time left, so retry
              2c6e 00d3  ld   $d3         12880  ld('.lsrvl#26')                 #17 continuation address
              2c6f c21d  st   [$1d]       12881  st([vTmp])                      #18
              2c70 0500  ld   [x]         12882  ld([X])                         #19 load byte 0 from var
              2c71 20fe  anda $fe         12883  anda(0xfe)                      #20
              2c72 e200  jmp  y,ac        12884  jmp(Y,AC)                       #21
              2c73 fcff  bra  $ff         12885  bra(255)                        #22 bra shiftTable+255
                                          12886  # continues in page 0x0600 at label('.lsrvl#26') fetching shifted byte from 0x0500
                                          12887
                                          12888  label('.lsrvl#29')
.lsrvl#29:    2c74 012b  ld   [$2b]       12889  ld([sysArgs+7])                 #29 byte 0 address
              2c75 8001  adda $01         12890  adda(1)                         #30
              2c76 d2b0  st   [$b0],x     12891  st([0xB0],X)                    #31 byte 1 address
              2c77 8001  adda $01         12892  adda(1)                         #32
              2c78 c2b1  st   [$b1]       12893  st([0xB1])                      #33 byte 2 address
              2c79 8001  adda $01         12894  adda(1)                         #34
              2c7a c2b2  st   [$b2]       12895  st([0xB2])                      #35 byte 3 address
              2c7b 0500  ld   [x]         12896  ld([X])                         #36 bit 0 of byte 1
              2c7c 2001  anda $01         12897  anda(1)                         #37
              2c7d 807f  adda $7f         12898  adda(127)                       #38
              2c7e 2080  anda $80         12899  anda(128)                       #39
              2c7f 112b  ld   [$2b],x     12900  ld([sysArgs+7],X)               #40 byte 0 address
              2c80 4500  ora  [x]         12901  ora([X])                        #41
              2c81 c600  st   [x]         12902  st([X])                         #42 transfer to bit 7 of byte 0
              2c82 1405  ld   $05,y       12903  ld(hi('shiftTable'),Y)          #43 (ac >> 1) table
              2c83 00d6  ld   $d6         12904  ld('.lsrvl#54')                 #44 continuation address
              2c84 c21d  st   [$1d]       12905  st([vTmp])                      #45
              2c85 11b0  ld   [$b0],x     12906  ld([0xB0],X)                    #46 byte 1 address
              2c86 0500  ld   [x]         12907  ld([X])                         #47
              2c87 20fe  anda $fe         12908  anda(0b11111110)                #48
              2c88 e200  jmp  y,ac        12909  jmp(Y,AC)                       #49
              2c89 fcff  bra  $ff         12910  bra(255)                        #50 bra shiftTable+255
                                          12911  # continues in page 0x0600 at label('.lsrvl#54') fetching shifted byte from 0x0500
                                          12912
                                          12913  label('.lsrvl#57')
.lsrvl#57:    2c8a 11b1  ld   [$b1],x     12914  ld([0xB1],X)                    #57 byte 2 address
              2c8b 0500  ld   [x]         12915  ld([X])                         #58 bit 0 of byte 2
              2c8c 2001  anda $01         12916  anda(1)                         #59
              2c8d 807f  adda $7f         12917  adda(127)                       #60
              2c8e 2080  anda $80         12918  anda(128)                       #61
              2c8f 11b0  ld   [$b0],x     12919  ld([0xB0],X)                    #62 byte 1 address
              2c90 4500  ora  [x]         12920  ora([X])                        #63
              2c91 c600  st   [x]         12921  st([X])                         #64 transfer to bit 7 of byte 1
              2c92 1405  ld   $05,y       12922  ld(hi('shiftTable'),Y)          #65 (ac >> 1) table
              2c93 00d9  ld   $d9         12923  ld('.lsrvl#76')                 #66 continuation address
              2c94 c21d  st   [$1d]       12924  st([vTmp])                      #67
              2c95 11b1  ld   [$b1],x     12925  ld([0xB1],X)                    #68 byte 2 address
              2c96 0500  ld   [x]         12926  ld([X])                         #69
              2c97 20fe  anda $fe         12927  anda(0b11111110)                #70
              2c98 e200  jmp  y,ac        12928  jmp(Y,AC)                       #71
              2c99 fcff  bra  $ff         12929  bra(255)                        #72 bra shiftTable+255
                                          12930  # continues in page 0x0600 at label('.lsrvl#76') fetching shifted byte from 0x0500
                                          12931
                                          12932  label('.lsrvl#79')
.lsrvl#79:    2c9a 11b2  ld   [$b2],x     12933  ld([0xB2],X)                    #79 byte 3 address
              2c9b 0500  ld   [x]         12934  ld([X])                         #80 bit 0 of byte 3
              2c9c 2001  anda $01         12935  anda(1)                         #81
              2c9d 807f  adda $7f         12936  adda(127)                       #82
              2c9e 2080  anda $80         12937  anda(128)                       #83
              2c9f 11b1  ld   [$b1],x     12938  ld([0xB1],X)                    #84 byte 2 address
              2ca0 4500  ora  [x]         12939  ora([X])                        #85
              2ca1 c600  st   [x]         12940  st([X])                         #86 transfer to bit 7 of byte 2
              2ca2 1405  ld   $05,y       12941  ld(hi('shiftTable'),Y)          #87 (ac >> 1) table
              2ca3 00dc  ld   $dc         12942  ld('.lsrvl#98')                 #88 continuation address
              2ca4 c21d  st   [$1d]       12943  st([vTmp])                      #89
              2ca5 11b2  ld   [$b2],x     12944  ld([0xB2],X)                    #90 byte 3 address
              2ca6 0500  ld   [x]         12945  ld([X])                         #91
              2ca7 20fe  anda $fe         12946  anda(0b11111110)                #92
              2ca8 e200  jmp  y,ac        12947  jmp(Y,AC)                       #93
              2ca9 fcff  bra  $ff         12948  bra(255)                        #94 bra shiftTable+255
                                          12949  # continues in page 0x0600 at label('.lsrvl#98') fetching shifted byte from 0x0500
                                          12950
                                          12951  label('.lsrvl#18')
.lsrvl#18:    2caa 0022  ld   $22         12952  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cab c202  st   [$02]       12953  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2cac 9401  adda $01,y       12954  adda(1,Y)                       #20 retry instruction
              2cad e000  jmp  y,$00       12955  jmp(Y,'NEXTY')                  #21
              2cae 00f4  ld   $f4         12956  ld(-24/2)                       #22
                                          12957
                                          12958
                                          12959  # LSLVL implementation
                                          12960  label('lslvl#13')
lslvl#13:     2caf 1400  ld   $00,y       12961  ld(0,Y)                         #13
              2cb0 00f3  ld   $f3         12962  ld(min(0,maxTicks-56/2))        #14
              2cb1 8115  adda [$15]       12963  adda([vTicks])                  #15
              2cb2 e8dd  blt  .lslvl#18   12964  blt('.lslvl#18')                #16 not enough time left, so retry
              2cb3 0500  ld   [x]         12965  ld([X])                         #17
              2cb4 f4b7  bge  $2cb7       12966  bge(pc()+3)                     #18
              2cb5 fcb8  bra  $2cb8       12967  bra(pc()+3)                     #19
              2cb6 0001  ld   $01         12968  ld(1)                           #20
              2cb7 0000  ld   $00         12969  ld(0)                           #20
              2cb8 c2b0  st   [$b0]       12970  st([0xB0])                      #21 (var.0 & 0x80) >>7
              2cb9 0500  ld   [x]         12971  ld([X])                         #22
              2cba 8500  adda [x]         12972  adda([X])                       #23
              2cbb de00  st   [y,x++]     12973  st([Y,Xpp])                     #24 var.0 <<1
              2cbc 0500  ld   [x]         12974  ld([X])                         #25
              2cbd f4c0  bge  $2cc0       12975  bge(pc()+3)                     #26
              2cbe fcc1  bra  $2cc1       12976  bra(pc()+3)                     #27
              2cbf 0001  ld   $01         12977  ld(1)                           #28
              2cc0 0000  ld   $00         12978  ld(0)                           #28
              2cc1 c2b1  st   [$b1]       12979  st([0xB1])                      #29 (var.1 & 0x80) >>7
              2cc2 0500  ld   [x]         12980  ld([X])                         #30
              2cc3 8500  adda [x]         12981  adda([X])                       #31
              2cc4 41b0  ora  [$b0]       12982  ora([0xB0])                     #32
              2cc5 de00  st   [y,x++]     12983  st([Y,Xpp])                     #33 (var.1 <<1) | [0xB0]
              2cc6 0500  ld   [x]         12984  ld([X])                         #34
              2cc7 f4ca  bge  $2cca       12985  bge(pc()+3)                     #35
              2cc8 fccb  bra  $2ccb       12986  bra(pc()+3)                     #36
              2cc9 0001  ld   $01         12987  ld(1)                           #37
              2cca 0000  ld   $00         12988  ld(0)                           #37
              2ccb c2b0  st   [$b0]       12989  st([0xB0])                      #38 (var.2 & 0x80) >>7
              2ccc 0500  ld   [x]         12990  ld([X])                         #39
              2ccd 8500  adda [x]         12991  adda([X])                       #40
              2cce 41b1  ora  [$b1]       12992  ora([0xB1])                     #41
              2ccf de00  st   [y,x++]     12993  st([Y,Xpp])                     #42 (var.2 <<1) | [0xB1]
              2cd0 0500  ld   [x]         12994  ld([X])                         #43
              2cd1 f4d4  bge  $2cd4       12995  bge(pc()+3)                     #44
              2cd2 fcd5  bra  $2cd5       12996  bra(pc()+3)                     #45
              2cd3 0001  ld   $01         12997  ld(1)                           #46
              2cd4 0000  ld   $00         12998  ld(0)                           #46
              2cd5 c2b1  st   [$b1]       12999  st([0xB1])                      #47 (var.3 & 0x80) >>7
              2cd6 0500  ld   [x]         13000  ld([X])                         #48
              2cd7 8500  adda [x]         13001  adda([X])                       #49
              2cd8 41b0  ora  [$b0]       13002  ora([0xB0])                     #50
              2cd9 de00  st   [y,x++]     13003  st([Y,Xpp])                     #51 (var.3 <<1) | [0xB0]
              2cda 1403  ld   $03,y       13004  ld(hi('NEXTY'),Y)               #52
              2cdb e000  jmp  y,$00       13005  jmp(Y,'NEXTY')                  #53
              2cdc 00e4  ld   $e4         13006  ld(-56/2)                       #54
                                          13007
                                          13008  label('.lslvl#18')
.lslvl#18:    2cdd 0022  ld   $22         13009  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2cde c202  st   [$02]       13010  st([vCpuSelect])                #19 restore PREFX2 instruction page
              2cdf 9401  adda $01,y       13011  adda(1,Y)                       #20 retry instruction
              2ce0 e000  jmp  y,$00       13012  jmp(Y,'NEXTY')                  #21
              2ce1 00f4  ld   $f4         13013  ld(-24/2)                       #22
                                          13014
                                          13015
              2ce2 0200  nop              13016  fillers(until=0xff)
              2ce3 0200  nop
              2ce4 0200  nop
              * 29 times
              2cff 0200  nop              13017  align(0x100, size=0x100)
                                          13018
                                          13019  #-----------------------------------------------------------------------
                                          13020  #       More vCPU instruction implementations, (0x2D00)
                                          13021  #-----------------------------------------------------------------------
                                          13022  #
                                          13023  # JEQL implementation
                                          13024  label('jeql#13')
jeql#13:      2d00 1519  ld   [$19],y     13025  ld([vAC+1],Y)                   #13
              2d01 00fb  ld   $fb         13026  ld(min(0,maxTicks-40/2))        #14
              2d02 8115  adda [$15]       13027  adda([vTicks])                  #15
              2d03 e81d  blt  .jeql#18    13028  blt('.jeql#18')                 #16 not enough time left, so retry
              2d04 1118  ld   [$18],x     13029  ld([vAC],X)                     #17
              2d05 0d00  ld   [y,x]       13030  ld([Y,X])                       #18
              2d06 de00  st   [y,x++]     13031  st([Y,Xpp])                     #19
              2d07 c2b0  st   [$b0]       13032  st([0xB0])                      #20 [vAC].0
              2d08 0d00  ld   [y,x]       13033  ld([Y,X])                       #21
              2d09 de00  st   [y,x++]     13034  st([Y,Xpp])                     #22
              2d0a c2b1  st   [$b1]       13035  st([0xB1])                      #23 [vAC].1
              2d0b 0d00  ld   [y,x]       13036  ld([Y,X])                       #24
              2d0c de00  st   [y,x++]     13037  st([Y,Xpp])                     #25
              2d0d c2b2  st   [$b2]       13038  st([0xB2])                      #26 [vAC].2
              2d0e 0d00  ld   [y,x]       13039  ld([Y,X])                       #27 [vAC].3
              2d0f 41b2  ora  [$b2]       13040  ora([0xB2])                     #28
              2d10 41b1  ora  [$b1]       13041  ora([0xB1])                     #29
              2d11 41b0  ora  [$b0]       13042  ora([0xB0])                     #30
              2d12 ec1a  bne  .jeql#33    13043  bne('.jeql#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d13 012b  ld   [$2b]       13044  ld([sysArgs+7])                 #32 address of branch destination
              2d14 c216  st   [$16]       13045  st([vPC])                       #33
              2d15 012a  ld   [$2a]       13046  ld([sysArgs+6])                 #34
              2d16 c217  st   [$17]       13047  st([vPC+1])                     #35
              2d17 1403  ld   $03,y       13048  ld(hi('NEXTY'),Y)               #36
              2d18 e000  jmp  y,$00       13049  jmp(Y,'NEXTY')                  #37
              2d19 00ec  ld   $ec         13050  ld(-40/2)                       #38
                                          13051
                                          13052  label('.jeql#33')
.jeql#33:     2d1a 1403  ld   $03,y       13053  ld(hi('REENTER'),Y)             #33
              2d1b e0cb  jmp  y,$cb       13054  jmp(Y,'REENTER')                #34
              2d1c 00ed  ld   $ed         13055  ld(-38/2)                       #35
                                          13056
                                          13057  label('.jeql#18')
.jeql#18:     2d1d 0021  ld   $21         13058  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d1e c202  st   [$02]       13059  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d1f 9401  adda $01,y       13060  adda(1,Y)                       #20 retry instruction
              2d20 e000  jmp  y,$00       13061  jmp(Y,'NEXTY')                  #21
              2d21 00f4  ld   $f4         13062  ld(-24/2)                       #22
                                          13063
                                          13064
                                          13065  # JNEL implementation
                                          13066  label('jnel#13')
jnel#13:      2d22 1519  ld   [$19],y     13067  ld([vAC+1],Y)                   #13
              2d23 00fb  ld   $fb         13068  ld(min(0,maxTicks-40/2))        #14
              2d24 8115  adda [$15]       13069  adda([vTicks])                  #15
              2d25 e83f  blt  .jnel#18    13070  blt('.jnel#18')                 #16 not enough time left, so retry
              2d26 1118  ld   [$18],x     13071  ld([vAC],X)                     #17
              2d27 0d00  ld   [y,x]       13072  ld([Y,X])                       #18
              2d28 de00  st   [y,x++]     13073  st([Y,Xpp])                     #19
              2d29 c2b0  st   [$b0]       13074  st([0xB0])                      #20 [vAC].0
              2d2a 0d00  ld   [y,x]       13075  ld([Y,X])                       #21
              2d2b de00  st   [y,x++]     13076  st([Y,Xpp])                     #22
              2d2c c2b1  st   [$b1]       13077  st([0xB1])                      #23 [vAC].1
              2d2d 0d00  ld   [y,x]       13078  ld([Y,X])                       #24
              2d2e de00  st   [y,x++]     13079  st([Y,Xpp])                     #25
              2d2f c2b2  st   [$b2]       13080  st([0xB2])                      #26 [vAC].2
              2d30 0d00  ld   [y,x]       13081  ld([Y,X])                       #27 [vAC].3
              2d31 41b2  ora  [$b2]       13082  ora([0xB2])                     #28
              2d32 41b1  ora  [$b1]       13083  ora([0xB1])                     #29
              2d33 41b0  ora  [$b0]       13084  ora([0xB0])                     #30
              2d34 f03c  beq  .jnel#33    13085  beq('.jnel#33')                 #31 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d35 012b  ld   [$2b]       13086  ld([sysArgs+7])                 #32 address of branch destination
              2d36 c216  st   [$16]       13087  st([vPC])                       #33
              2d37 012a  ld   [$2a]       13088  ld([sysArgs+6])                 #34
              2d38 c217  st   [$17]       13089  st([vPC+1])                     #35
              2d39 1403  ld   $03,y       13090  ld(hi('NEXTY'),Y)               #36
              2d3a e000  jmp  y,$00       13091  jmp(Y,'NEXTY')                  #37
              2d3b 00ec  ld   $ec         13092  ld(-40/2)                       #38
                                          13093
                                          13094  label('.jnel#33')
.jnel#33:     2d3c 1403  ld   $03,y       13095  ld(hi('REENTER'),Y)             #33
              2d3d e0cb  jmp  y,$cb       13096  jmp(Y,'REENTER')                #34
              2d3e 00ed  ld   $ed         13097  ld(-38/2)                       #35
                                          13098
                                          13099  label('.jnel#18')
.jnel#18:     2d3f 0021  ld   $21         13100  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d40 c202  st   [$02]       13101  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d41 9401  adda $01,y       13102  adda(1,Y)                       #20 retry instruction
              2d42 e000  jmp  y,$00       13103  jmp(Y,'NEXTY')                  #21
              2d43 00f4  ld   $f4         13104  ld(-24/2)                       #22
                                          13105
                                          13106
                                          13107  # JLTL implementation
                                          13108  label('jltl#13')
jltl#13:      2d44 1519  ld   [$19],y     13109  ld([vAC+1],Y)                   #13
              2d45 0118  ld   [$18]       13110  ld([vAC])                       #14
              2d46 9003  adda $03,x       13111  adda(3,X)                       #15
              2d47 0d00  ld   [y,x]       13112  ld([Y,X])                       #16
              2d48 e84d  blt  .jltl#19    13113  blt('.jltl#19')                 #17 if [vAC.3] < 0
              2d49 012b  ld   [$2b]       13114  ld([sysArgs+7])                 #18 address of branch destination
              2d4a 1403  ld   $03,y       13115  ld(hi('REENTER'),Y)             #19
              2d4b e0cb  jmp  y,$cb       13116  jmp(Y,'REENTER')                #20
              2d4c 00f4  ld   $f4         13117  ld(-24/2)                       #21
                                          13118
                                          13119  label('.jltl#19')
.jltl#19:     2d4d c216  st   [$16]       13120  st([vPC])                       #19
              2d4e 012a  ld   [$2a]       13121  ld([sysArgs+6])                 #20
              2d4f c217  st   [$17]       13122  st([vPC+1])                     #21
              2d50 1403  ld   $03,y       13123  ld(hi('NEXTY'),Y)               #22
              2d51 e000  jmp  y,$00       13124  jmp(Y,'NEXTY')                  #23
              2d52 00f3  ld   $f3         13125  ld(-26/2)                       #24
                                          13126
                                          13127
                                          13128  # JGTL implementation
                                          13129  label('jgtl#13')
jgtl#13:      2d53 1519  ld   [$19],y     13130  ld([vAC+1],Y)                   #13
              2d54 00fa  ld   $fa         13131  ld(min(0,maxTicks-42/2))        #14
              2d55 8115  adda [$15]       13132  adda([vTicks])                  #15
              2d56 e875  blt  .jgtl#18    13133  blt('.jgtl#18')                 #16 not enough time left, so retry
              2d57 1118  ld   [$18],x     13134  ld([vAC],X)                     #17
              2d58 0d00  ld   [y,x]       13135  ld([Y,X])                       #18
              2d59 de00  st   [y,x++]     13136  st([Y,Xpp])                     #19
              2d5a c2b0  st   [$b0]       13137  st([0xB0])                      #20 [vAC].0
              2d5b 0d00  ld   [y,x]       13138  ld([Y,X])                       #21
              2d5c de00  st   [y,x++]     13139  st([Y,Xpp])                     #22
              2d5d c2b1  st   [$b1]       13140  st([0xB1])                      #23 [vAC].1
              2d5e 0d00  ld   [y,x]       13141  ld([Y,X])                       #24
              2d5f de00  st   [y,x++]     13142  st([Y,Xpp])                     #25
              2d60 c2b2  st   [$b2]       13143  st([0xB2])                      #26 [vAC].2
              2d61 0d00  ld   [y,x]       13144  ld([Y,X])                       #27
              2d62 c2b3  st   [$b3]       13145  st([0xB3])                      #28 [vAC].3
              2d63 e86c  blt  .jgtl#31    13146  blt('.jgtl#31')                 #29 if [vAC.3] < 0
              2d64 41b2  ora  [$b2]       13147  ora([0xB2])                     #30
              2d65 41b1  ora  [$b1]       13148  ora([0xB1])                     #31
              2d66 41b0  ora  [$b0]       13149  ora([0xB0])                     #32
              2d67 ec6f  bne  .jgtl#35    13150  bne('.jgtl#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) != 0
              2d68 012b  ld   [$2b]       13151  ld([sysArgs+7])                 #34 address of branch destination
              2d69 1403  ld   $03,y       13152  ld(hi('REENTER'),Y)             #35
              2d6a e0cb  jmp  y,$cb       13153  jmp(Y,'REENTER')                #36
              2d6b 00ec  ld   $ec         13154  ld(-40/2)                       #37
                                          13155
                                          13156  label('.jgtl#31')
.jgtl#31:     2d6c 1403  ld   $03,y       13157  ld(hi('REENTER'),Y)             #31
              2d6d e0cb  jmp  y,$cb       13158  jmp(Y,'REENTER')                #32
              2d6e 00ee  ld   $ee         13159  ld(-36/2)                       #33
                                          13160
                                          13161  label('.jgtl#35')
.jgtl#35:     2d6f c216  st   [$16]       13162  st([vPC])                       #35
              2d70 012a  ld   [$2a]       13163  ld([sysArgs+6])                 #36
              2d71 c217  st   [$17]       13164  st([vPC+1])                     #37
              2d72 1403  ld   $03,y       13165  ld(hi('NEXTY'),Y)               #38
              2d73 e000  jmp  y,$00       13166  jmp(Y,'NEXTY')                  #39
              2d74 00eb  ld   $eb         13167  ld(-42/2)                       #40
                                          13168
                                          13169  label('.jgtl#18')
.jgtl#18:     2d75 0021  ld   $21         13170  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2d76 c202  st   [$02]       13171  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2d77 9401  adda $01,y       13172  adda(1,Y)                       #20 retry instruction
              2d78 e000  jmp  y,$00       13173  jmp(Y,'NEXTY')                  #21
              2d79 00f4  ld   $f4         13174  ld(-24/2)                       #22
                                          13175
                                          13176
                                          13177  # JLEL implementation
                                          13178  label('jlel#13')
jlel#13:      2d7a 1519  ld   [$19],y     13179  ld([vAC+1],Y)                   #13
              2d7b 00fa  ld   $fa         13180  ld(min(0,maxTicks-42/2))        #14
              2d7c 8115  adda [$15]       13181  adda([vTicks])                  #15
              2d7d e8a0  blt  .jlel#18    13182  blt('.jlel#18')                 #16 not enough time left, so retry
              2d7e 1118  ld   [$18],x     13183  ld([vAC],X)                     #17
              2d7f 0d00  ld   [y,x]       13184  ld([Y,X])                       #18
              2d80 de00  st   [y,x++]     13185  st([Y,Xpp])                     #19
              2d81 c2b0  st   [$b0]       13186  st([0xB0])                      #20 [vAC].0
              2d82 0d00  ld   [y,x]       13187  ld([Y,X])                       #21
              2d83 de00  st   [y,x++]     13188  st([Y,Xpp])                     #22
              2d84 c2b1  st   [$b1]       13189  st([0xB1])                      #23 [vAC].1
              2d85 0d00  ld   [y,x]       13190  ld([Y,X])                       #24
              2d86 de00  st   [y,x++]     13191  st([Y,Xpp])                     #25
              2d87 c2b2  st   [$b2]       13192  st([0xB2])                      #26 [vAC].2
              2d88 0d00  ld   [y,x]       13193  ld([Y,X])                       #27
              2d89 c2b3  st   [$b3]       13194  st([0xB3])                      #28 [vAC].3
              2d8a e893  blt  .jlel#31    13195  blt('.jlel#31')                 #29 if [vAC.3] < 0
              2d8b 41b2  ora  [$b2]       13196  ora([0xB2])                     #30
              2d8c 41b1  ora  [$b1]       13197  ora([0xB1])                     #31
              2d8d 41b0  ora  [$b0]       13198  ora([0xB0])                     #32
              2d8e f09a  beq  .jlel#35    13199  beq('.jlel#35')                 #33 if (vAC.3 OR vAC.2 OR vAC.1 OR vAC.0) == 0
              2d8f 012b  ld   [$2b]       13200  ld([sysArgs+7])                 #34 address of branch destination
              2d90 1403  ld   $03,y       13201  ld(hi('REENTER'),Y)             #35
              2d91 e0cb  jmp  y,$cb       13202  jmp(Y,'REENTER')                #36
              2d92 00ec  ld   $ec         13203  ld(-40/2)                       #37
                                          13204
                                          13205  label('.jlel#31')
.jlel#31:     2d93 012b  ld   [$2b]       13206  ld([sysArgs+7])                 #31 address of branch destination
              2d94 c216  st   [$16]       13207  st([vPC])                       #32
              2d95 012a  ld   [$2a]       13208  ld([sysArgs+6])                 #33
              2d96 c217  st   [$17]       13209  st([vPC+1])                     #34
              2d97 1403  ld   $03,y       13210  ld(hi('REENTER'),Y)             #35
              2d98 e0cb  jmp  y,$cb       13211  jmp(Y,'REENTER')                #36
              2d99 00ec  ld   $ec         13212  ld(-40/2)                       #37
                                          13213
                                          13214  label('.jlel#35')
.jlel#35:     2d9a c216  st   [$16]       13215  st([vPC])                       #35
              2d9b 012a  ld   [$2a]       13216  ld([sysArgs+6])                 #36
              2d9c c217  st   [$17]       13217  st([vPC+1])                     #37
              2d9d 1403  ld   $03,y       13218  ld(hi('NEXTY'),Y)               #38
              2d9e e000  jmp  y,$00       13219  jmp(Y,'NEXTY')                  #39
              2d9f 00eb  ld   $eb         13220  ld(-42/2)                       #40
                                          13221
                                          13222  label('.jlel#18')
.jlel#18:     2da0 0021  ld   $21         13223  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              2da1 c202  st   [$02]       13224  st([vCpuSelect])                #19 restore PREFX3 instruction page
              2da2 9401  adda $01,y       13225  adda(1,Y)                       #20 retry instruction
              2da3 e000  jmp  y,$00       13226  jmp(Y,'NEXTY')                  #21
              2da4 00f4  ld   $f4         13227  ld(-24/2)                       #22
                                          13228
                                          13229
                                          13230  # JGEL implementation
                                          13231  label('jgel#13')
jgel#13:      2da5 1519  ld   [$19],y     13232  ld([vAC+1],Y)                   #13
              2da6 0118  ld   [$18]       13233  ld([vAC])                       #14
              2da7 9003  adda $03,x       13234  adda(3,X)                       #15
              2da8 0d00  ld   [y,x]       13235  ld([Y,X])                       #16
              2da9 e8b1  blt  .jgel#19    13236  blt('.jgel#19')                 #17 if [vAC.3] < 0
              2daa 012b  ld   [$2b]       13237  ld([sysArgs+7])                 #18 address of branch destination
              2dab c216  st   [$16]       13238  st([vPC])                       #19
              2dac 012a  ld   [$2a]       13239  ld([sysArgs+6])                 #20
              2dad c217  st   [$17]       13240  st([vPC+1])                     #21
              2dae 1403  ld   $03,y       13241  ld(hi('NEXTY'),Y)               #22
              2daf e000  jmp  y,$00       13242  jmp(Y,'NEXTY')                  #23
              2db0 00f3  ld   $f3         13243  ld(-26/2)                       #24
                                          13244
                                          13245  label('.jgel#19')
.jgel#19:     2db1 1403  ld   $03,y       13246  ld(hi('REENTER'),Y)             #19
              2db2 e0cb  jmp  y,$cb       13247  jmp(Y,'REENTER')                #20
              2db3 00f4  ld   $f4         13248  ld(-24/2)                       #21
                                          13249
                                          13250
                                          13251  # ADDVB implementation
                                          13252  label('addvb#13')
addvb#13:     2db4 1517  ld   [$17],y     13253  ld([vPC+1],Y)                   #13
              2db5 c21d  st   [$1d]       13254  st([vTmp])                      #14 dst addr
              2db6 de00  st   [y,x++]     13255  st([Y,Xpp])                     #15
              2db7 00fd  ld   $fd         13256  ld(min(0,maxTicks-36/2))        #16
              2db8 8115  adda [$15]       13257  adda([vTicks])                  #17
              2db9 e8ca  blt  .addvb#20   13258  blt('.addvb#20')                #18 not enough time left, so retry
              2dba 0d00  ld   [y,x]       13259  ld([Y,X])                       #19
              2dbb de00  st   [y,x++]     13260  st([Y,Xpp])                     #20
              2dbc c22b  st   [$2b]       13261  st([sysArgs+7])                 #21 src1 addr
              2dbd 0d00  ld   [y,x]       13262  ld([Y,X])                       #22 src0 addr
              2dbe 1200  ld   ac,x        13263  ld(AC,X)                        #23
              2dbf 0500  ld   [x]         13264  ld([X])                         #24 src0.lo
              2dc0 112b  ld   [$2b],x     13265  ld([sysArgs+7],X)               #25
              2dc1 8500  adda [x]         13266  adda([X])                       #26 src0.lo + src1.lo
              2dc2 111d  ld   [$1d],x     13267  ld([vTmp],X)                    #27
              2dc3 c600  st   [x]         13268  st([X])                         #28 dst.lo = src0.lo + src1.lo
              2dc4 0116  ld   [$16]       13269  ld([vPC])                       #29
              2dc5 8002  adda $02         13270  adda(2)                         #30
              2dc6 c216  st   [$16]       13271  st([vPC])                       #31 advance vPC by 2
              2dc7 1403  ld   $03,y       13272  ld(hi('NEXTY'),Y)               #32
              2dc8 e000  jmp  y,$00       13273  jmp(Y,'NEXTY')                  #33
              2dc9 00ee  ld   $ee         13274  ld(-36/2)                       #34
                                          13275
                                          13276  label('.addvb#20')
.addvb#20:    2dca 0116  ld   [$16]       13277  ld([vPC])                       #20 retry instruction
              2dcb a002  suba $02         13278  suba(2)                         #21
              2dcc c216  st   [$16]       13279  st([vPC])                       #22
              2dcd 1403  ld   $03,y       13280  ld(hi('REENTER'),Y)             #23
              2dce e0cb  jmp  y,$cb       13281  jmp(Y,'REENTER')                #24
              2dcf 00f2  ld   $f2         13282  ld(-28/2)                       #25
                                          13283
                                          13284
                                          13285  # SUBVB implementation
                                          13286  label('subvb#13')
subvb#13:     2dd0 1517  ld   [$17],y     13287  ld([vPC+1],Y)                   #13
              2dd1 c21d  st   [$1d]       13288  st([vTmp])                      #14 dst addr
              2dd2 de00  st   [y,x++]     13289  st([Y,Xpp])                     #15
              2dd3 00fd  ld   $fd         13290  ld(min(0,maxTicks-36/2))        #16
              2dd4 8115  adda [$15]       13291  adda([vTicks])                  #17
              2dd5 e8ca  blt  .addvb#20   13292  blt('.addvb#20')                #18 not enough time left, so retry, (reuse '.addvb#20')
              2dd6 0d00  ld   [y,x]       13293  ld([Y,X])                       #19
              2dd7 de00  st   [y,x++]     13294  st([Y,Xpp])                     #20
              2dd8 c22b  st   [$2b]       13295  st([sysArgs+7])                 #21 src1 addr
              2dd9 0d00  ld   [y,x]       13296  ld([Y,X])                       #22 src0 addr
              2dda 1200  ld   ac,x        13297  ld(AC,X)                        #23
              2ddb 0500  ld   [x]         13298  ld([X])                         #24 src0.lo
              2ddc 112b  ld   [$2b],x     13299  ld([sysArgs+7],X)               #25
              2ddd a500  suba [x]         13300  suba([X])                       #26 src0.lo - src1.lo
              2dde 111d  ld   [$1d],x     13301  ld([vTmp],X)                    #27
              2ddf c600  st   [x]         13302  st([X])                         #28 dst.lo = src0.lo - src1.lo
              2de0 0116  ld   [$16]       13303  ld([vPC])                       #29
              2de1 8002  adda $02         13304  adda(2)                         #30
              2de2 c216  st   [$16]       13305  st([vPC])                       #31 advance vPC by 2
              2de3 1403  ld   $03,y       13306  ld(hi('NEXTY'),Y)               #32
              2de4 e000  jmp  y,$00       13307  jmp(Y,'NEXTY')                  #33
              2de5 00ee  ld   $ee         13308  ld(-36/2)                       #34
                                          13309
                                          13310
              2de6 0200  nop              13311  fillers(until=0xff)
              2de7 0200  nop
              2de8 0200  nop
              * 25 times
              2dff 0200  nop              13312  align(0x100, size=0x100)
                                          13313
                                          13314  #-----------------------------------------------------------------------
                                          13315  #       More vCPU instruction implementations, (0x2E00)
                                          13316  #-----------------------------------------------------------------------
                                          13317  #
                                          13318  # ANDBI implementation
                                          13319  label('andbi#13')
andbi#13:     2e00 0500  ld   [x]         13320  ld([X])                         #13
              2e01 212b  anda [$2b]       13321  anda([sysArgs+7])               #14 immediate value
              2e02 c600  st   [x]         13322  st([X])                         #15
              2e03 1403  ld   $03,y       13323  ld(hi('NEXTY'),Y)               #16
              2e04 e000  jmp  y,$00       13324  jmp(Y,'NEXTY')                  #17
              2e05 00f6  ld   $f6         13325  ld(-20/2)                       #18
                                          13326
                                          13327  # ORBI implementation
                                          13328  label('orbi#13')
orbi#13:      2e06 0500  ld   [x]         13329  ld([X])                         #13
              2e07 412b  ora  [$2b]       13330  ora([sysArgs+7])                #14 immediate value
              2e08 c600  st   [x]         13331  st([X])                         #15
              2e09 1403  ld   $03,y       13332  ld(hi('NEXTY'),Y)               #16
              2e0a e000  jmp  y,$00       13333  jmp(Y,'NEXTY')                  #17
              2e0b 00f6  ld   $f6         13334  ld(-20/2)                       #18
                                          13335
                                          13336  # XORBI implementation
                                          13337  label('xorbi#13')
xorbi#13:     2e0c 0500  ld   [x]         13338  ld([X])                         #13
              2e0d 612b  xora [$2b]       13339  xora([sysArgs+7])               #14 immediate value
              2e0e c600  st   [x]         13340  st([X])                         #15
              2e0f 1403  ld   $03,y       13341  ld(hi('NEXTY'),Y)               #16
              2e10 e000  jmp  y,$00       13342  jmp(Y,'NEXTY')                  #17
              2e11 00f6  ld   $f6         13343  ld(-20/2)                       #18
                                          13344
                                          13345  # ANDBK implementation
                                          13346  label('andbk#13')
andbk#13:     2e12 0500  ld   [x]         13347  ld([X])                         #13
              2e13 212b  anda [$2b]       13348  anda([sysArgs+7])               #14 immediate value
              2e14 c218  st   [$18]       13349  st([vAC])                       #15
              2e15 0000  ld   $00         13350  ld(0)                           #16
              2e16 c219  st   [$19]       13351  st([vAC+1])                     #17 clear high result
              2e17 1403  ld   $03,y       13352  ld(hi('NEXTY'),Y)               #18
              2e18 e000  jmp  y,$00       13353  jmp(Y,'NEXTY')                  #19
              2e19 00f5  ld   $f5         13354  ld(-22/2)                       #20
                                          13355
                                          13356  # ORBK implementation
                                          13357  label('orbk#13')
orbk#13:      2e1a 0500  ld   [x]         13358  ld([X])                         #13
              2e1b 412b  ora  [$2b]       13359  ora([sysArgs+7])                #14 immediate value
              2e1c c218  st   [$18]       13360  st([vAC])                       #15
              2e1d 0000  ld   $00         13361  ld(0)                           #16
              2e1e c219  st   [$19]       13362  st([vAC+1])                     #17 clear high result
              2e1f 1403  ld   $03,y       13363  ld(hi('NEXTY'),Y)               #18
              2e20 e000  jmp  y,$00       13364  jmp(Y,'NEXTY')                  #19
              2e21 00f5  ld   $f5         13365  ld(-22/2)                       #20
                                          13366
                                          13367  # XORBK implementation
                                          13368  label('xorbk#13')
xorbk#13:     2e22 0500  ld   [x]         13369  ld([X])                         #13
              2e23 612b  xora [$2b]       13370  xora([sysArgs+7])               #14 immediate value
              2e24 c218  st   [$18]       13371  st([vAC])                       #15
              2e25 0000  ld   $00         13372  ld(0)                           #16
              2e26 c219  st   [$19]       13373  st([vAC+1])                     #17 clear high result
              2e27 1403  ld   $03,y       13374  ld(hi('NEXTY'),Y)               #18
              2e28 e000  jmp  y,$00       13375  jmp(Y,'NEXTY')                  #19
              2e29 00f5  ld   $f5         13376  ld(-22/2)                       #20
                                          13377
                                          13378  # VADDBW implementation
                                          13379  label('vaddbw#13')
vaddbw#13:    2e2a 1400  ld   $00,y       13380  ld(0,Y)                         #13
              2e2b 0500  ld   [x]         13381  ld([X])                         #14
              2e2c de00  st   [y,x++]     13382  st([Y,Xpp])                     #15
              2e2d c2b0  st   [$b0]       13383  st([0xB0])                      #16 src.0
              2e2e 0500  ld   [x]         13384  ld([X])                         #17
              2e2f c2b1  st   [$b1]       13385  st([0xB1])                      #18 src.1
              2e30 112b  ld   [$2b],x     13386  ld([sysArgs+7],X)               #19
              2e31 0500  ld   [x]         13387  ld([X])                         #20
              2e32 81b0  adda [$b0]       13388  adda([0xB0])                    #21
              2e33 de00  st   [y,x++]     13389  st([Y,Xpp])                     #22 dst.0 += src.0
              2e34 0500  ld   [x]         13390  ld([X])                         #23
              2e35 81b1  adda [$b1]       13391  adda([0xB1])                    #24
              2e36 c600  st   [x]         13392  st([X])                         #25 dst.1 += src.1
              2e37 1403  ld   $03,y       13393  ld(hi('NEXTY'),Y)               #26
              2e38 e000  jmp  y,$00       13394  jmp(Y,'NEXTY')                  #27
              2e39 00f1  ld   $f1         13395  ld(-30/2)                       #28
                                          13396
                                          13397  # VSUBBW implementation
                                          13398  label('vsubbw#13')
vsubbw#13:    2e3a 1400  ld   $00,y       13399  ld(0,Y)                         #13
              2e3b 0500  ld   [x]         13400  ld([X])                         #14
              2e3c de00  st   [y,x++]     13401  st([Y,Xpp])                     #15
              2e3d c2b0  st   [$b0]       13402  st([0xB0])                      #16 src.0
              2e3e 0500  ld   [x]         13403  ld([X])                         #17
              2e3f c2b1  st   [$b1]       13404  st([0xB1])                      #18 src.1
              2e40 112b  ld   [$2b],x     13405  ld([sysArgs+7],X)               #19
              2e41 0500  ld   [x]         13406  ld([X])                         #20
              2e42 a1b0  suba [$b0]       13407  suba([0xB0])                    #21
              2e43 de00  st   [y,x++]     13408  st([Y,Xpp])                     #22 dst.0 -= src.0
              2e44 0500  ld   [x]         13409  ld([X])                         #23
              2e45 a1b1  suba [$b1]       13410  suba([0xB1])                    #24
              2e46 c600  st   [x]         13411  st([X])                         #25 dst.1 -= src.1
              2e47 1403  ld   $03,y       13412  ld(hi('NEXTY'),Y)               #26
              2e48 e000  jmp  y,$00       13413  jmp(Y,'NEXTY')                  #27
              2e49 00f1  ld   $f1         13414  ld(-30/2)                       #28
                                          13415
                                          13416  # PACKAW implementation
                                          13417  label('packaw#13')
packaw#13:    2e4a c21d  st   [$1d]       13418  st([vTmp])                      #13 src1 addr
              2e4b 1517  ld   [$17],y     13419  ld([vPC+1],Y)                   #14
              2e4c de00  st   [y,x++]     13420  st([Y,Xpp])                     #15
              2e4d 0d00  ld   [y,x]       13421  ld([Y,X])                       #16 src0 addr
              2e4e 1200  ld   ac,x        13422  ld(AC,X)                        #17
              2e4f 0500  ld   [x]         13423  ld([X])                         #18
              2e50 c218  st   [$18]       13424  st([vAC])                       #19 vAC.lo = src0.lo
              2e51 111d  ld   [$1d],x     13425  ld([vTmp],X)                    #20
              2e52 0500  ld   [x]         13426  ld([X])                         #21
              2e53 c219  st   [$19]       13427  st([vAC+1])                     #22 vAC.hi = src1.lo
              2e54 0116  ld   [$16]       13428  ld([vPC])                       #23
              2e55 8001  adda $01         13429  adda(1)                         #24
              2e56 c216  st   [$16]       13430  st([vPC])                       #25 advance vPC by 1
              2e57 1403  ld   $03,y       13431  ld(hi('NEXTY'),Y)               #26
              2e58 e000  jmp  y,$00       13432  jmp(Y,'NEXTY')                  #27
              2e59 00f1  ld   $f1         13433  ld(-30/2)                       #28
                                          13434
                                          13435
                                          13436  # PACKVW implementation
                                          13437  label('packvw#13')
packvw#13:    2e5a 1517  ld   [$17],y     13438  ld([vPC+1],Y)                   #13
              2e5b c21d  st   [$1d]       13439  st([vTmp])                      #14 var addr
              2e5c de00  st   [y,x++]     13440  st([Y,Xpp])                     #15
              2e5d 00fa  ld   $fa         13441  ld(min(0,maxTicks-42/2))        #16
              2e5e 8115  adda [$15]       13442  adda([vTicks])                  #17
              2e5f e876  blt  .packvw#20  13443  blt('.packvw#20')               #18 not enough time left, so retry
              2e60 0d00  ld   [y,x]       13444  ld([Y,X])                       #19 src1 addr
              2e61 de00  st   [y,x++]     13445  st([Y,Xpp])                     #20
              2e62 c2b1  st   [$b1]       13446  st([0xB1])                      #21 0xB1 = src1 addr
              2e63 0d00  ld   [y,x]       13447  ld([Y,X])                       #22 src0 addr
              2e64 1200  ld   ac,x        13448  ld(AC,X)                        #23
              2e65 0500  ld   [x]         13449  ld([X])                         #24
              2e66 c2b0  st   [$b0]       13450  st([0xB0])                      #25 src0.lo
              2e67 11b1  ld   [$b1],x     13451  ld([0xB1],X)                    #26
              2e68 0500  ld   [x]         13452  ld([X])                         #27
              2e69 c2b1  st   [$b1]       13453  st([0xB1])                      #28 src1.lo
              2e6a 1400  ld   $00,y       13454  ld(0,Y)                         #29
              2e6b 111d  ld   [$1d],x     13455  ld([vTmp],X)                    #30
              2e6c 01b0  ld   [$b0]       13456  ld([0xB0])                      #31
              2e6d de00  st   [y,x++]     13457  st([Y,Xpp])                     #32 var.lo = src0.lo
              2e6e 01b1  ld   [$b1]       13458  ld([0xB1])                      #33
              2e6f c600  st   [x]         13459  st([X])                         #34 var.hi = src1.lo
              2e70 0116  ld   [$16]       13460  ld([vPC])                       #35
              2e71 8002  adda $02         13461  adda(2)                         #36
              2e72 c216  st   [$16]       13462  st([vPC])                       #37 advance vPC by 2
              2e73 1403  ld   $03,y       13463  ld(hi('NEXTY'),Y)               #38
              2e74 e000  jmp  y,$00       13464  jmp(Y,'NEXTY')                  #39
              2e75 00eb  ld   $eb         13465  ld(-42/2)                       #40
                                          13466
                                          13467  label('.packvw#20')
.packvw#20:   2e76 0116  ld   [$16]       13468  ld([vPC])                       #20 retry instruction
              2e77 a002  suba $02         13469  suba(2)                         #21
              2e78 c216  st   [$16]       13470  st([vPC])                       #22
              2e79 1403  ld   $03,y       13471  ld(hi('REENTER'),Y)             #23
              2e7a e0cb  jmp  y,$cb       13472  jmp(Y,'REENTER')                #24
              2e7b 00f2  ld   $f2         13473  ld(-28/2)                       #25
                                          13474
                                          13475
                                          13476  # CNVXY implementation
                                          13477  label('cnvxy#13')
cnvxy#13:     2e7c 1517  ld   [$17],y     13478  ld([vPC+1],Y)                   #13
              2e7d c21d  st   [$1d]       13479  st([vTmp])                      #14 var addr
              2e7e de00  st   [y,x++]     13480  st([Y,Xpp])                     #15
              2e7f 00f9  ld   $f9         13481  ld(min(0,maxTicks-44/2))        #16
              2e80 8115  adda [$15]       13482  adda([vTicks])                  #17
              2e81 e899  blt  .cnvxy#20   13483  blt('.cnvxy#20')                #18 not enough time left, so retry
              2e82 0d00  ld   [y,x]       13484  ld([Y,X])                       #19 src1 addr
              2e83 de00  st   [y,x++]     13485  st([Y,Xpp])                     #20
              2e84 c2b1  st   [$b1]       13486  st([0xB1])                      #21 0xB1 = src1 addr
              2e85 0d00  ld   [y,x]       13487  ld([Y,X])                       #22 src0 addr
              2e86 1200  ld   ac,x        13488  ld(AC,X)                        #23
              2e87 0500  ld   [x]         13489  ld([X])                         #24
              2e88 c2b0  st   [$b0]       13490  st([0xB0])                      #25 src0.lo
              2e89 11b1  ld   [$b1],x     13491  ld([0xB1],X)                    #26
              2e8a 0500  ld   [x]         13492  ld([X])                         #27
              2e8b c2b1  st   [$b1]       13493  st([0xB1])                      #28 src1.lo
              2e8c 1400  ld   $00,y       13494  ld(0,Y)                         #29
              2e8d 111d  ld   [$1d],x     13495  ld([vTmp],X)                    #30
              2e8e 01b0  ld   [$b0]       13496  ld([0xB0])                      #31
              2e8f de00  st   [y,x++]     13497  st([Y,Xpp])                     #32 var.lo = src0.lo
              2e90 01b1  ld   [$b1]       13498  ld([0xB1])                      #33
              2e91 8008  adda $08         13499  adda(8)                         #34
              2e92 c600  st   [x]         13500  st([X])                         #35 var.hi = src1.lo + 8
              2e93 0116  ld   [$16]       13501  ld([vPC])                       #36
              2e94 8002  adda $02         13502  adda(2)                         #37
              2e95 c216  st   [$16]       13503  st([vPC])                       #38 advance vPC by 2
              2e96 1403  ld   $03,y       13504  ld(hi('REENTER'),Y)             #39
              2e97 e0cb  jmp  y,$cb       13505  jmp(Y,'REENTER')                #40
              2e98 00ea  ld   $ea         13506  ld(-44/2)                       #41
                                          13507
                                          13508  label('.cnvxy#20')
.cnvxy#20:    2e99 0116  ld   [$16]       13509  ld([vPC])                       #20 retry instruction
              2e9a a002  suba $02         13510  suba(2)                         #21
              2e9b c216  st   [$16]       13511  st([vPC])                       #22
              2e9c 1403  ld   $03,y       13512  ld(hi('REENTER'),Y)             #23
              2e9d e0cb  jmp  y,$cb       13513  jmp(Y,'REENTER')                #24
              2e9e 00f2  ld   $f2         13514  ld(-28/2)                       #25
                                          13515
                                          13516
                                          13517  # LDWM implementation
                                          13518  label('ldwm#13')
ldwm#13:      2e9f c21d  st   [$1d]       13519  st([vTmp])                      #13 addr.lo
              2ea0 de00  st   [y,x++]     13520  st([Y,Xpp])                     #14
              2ea1 0d00  ld   [y,x]       13521  ld([Y,X])                       #15
              2ea2 1600  ld   ac,y        13522  ld(AC,Y)                        #16 addr.hi
              2ea3 111d  ld   [$1d],x     13523  ld([vTmp],X)                    #17
              2ea4 0d00  ld   [y,x]       13524  ld([Y,X])                       #18
              2ea5 c218  st   [$18]       13525  st([vAC])                       #19 vAC.lo = peek(addr + 0)
              2ea6 de00  st   [y,x++]     13526  st([Y,Xpp])                     #20
              2ea7 0d00  ld   [y,x]       13527  ld([Y,X])                       #21
              2ea8 c219  st   [$19]       13528  st([vAC+1])                     #22 vAC.hi = peek(addr + 1)
              2ea9 0116  ld   [$16]       13529  ld([vPC])                       #23
              2eaa 8001  adda $01         13530  adda(1)                         #24
              2eab c216  st   [$16]       13531  st([vPC])                       #25
              2eac 1403  ld   $03,y       13532  ld(hi('NEXTY'),Y)               #26
              2ead e000  jmp  y,$00       13533  jmp(Y,'NEXTY')                  #27
              2eae 00f1  ld   $f1         13534  ld(-30/2)                       #28
                                          13535
                                          13536  # STWM implementation
                                          13537  label('stwm#13')
stwm#13:      2eaf 1517  ld   [$17],y     13538  ld([vPC+1],Y)                   #13 vPC.hi
              2eb0 c21d  st   [$1d]       13539  st([vTmp])                      #14 addr.lo
              2eb1 de00  st   [y,x++]     13540  st([Y,Xpp])                     #15
              2eb2 0d00  ld   [y,x]       13541  ld([Y,X])                       #16
              2eb3 1600  ld   ac,y        13542  ld(AC,Y)                        #17 addr.hi
              2eb4 111d  ld   [$1d],x     13543  ld([vTmp],X)                    #18
              2eb5 0118  ld   [$18]       13544  ld([vAC])                       #19
              2eb6 de00  st   [y,x++]     13545  st([Y,Xpp])                     #20
              2eb7 0119  ld   [$19]       13546  ld([vAC+1])                     #21
              2eb8 ce00  st   [y,x]       13547  st([Y,X])                       #22
              2eb9 0116  ld   [$16]       13548  ld([vPC])                       #23
              2eba 8001  adda $01         13549  adda(1)                         #24
              2ebb c216  st   [$16]       13550  st([vPC])                       #25
              2ebc 1403  ld   $03,y       13551  ld(hi('NEXTY'),Y)               #26
              2ebd e000  jmp  y,$00       13552  jmp(Y,'NEXTY')                  #27
              2ebe 00f1  ld   $f1         13553  ld(-30/2)                       #28
                                          13554
                                          13555
                                          13556  # DEEKR implementation
                                          13557  label('deekr#13')
deekr#13:     2ebf 1400  ld   $00,y       13558  ld(0,Y)                         #13
              2ec0 1200  ld   ac,x        13559  ld(AC,X)                        #14 index var
              2ec1 00f5  ld   $f5         13560  ld(min(0,maxTicks-52/2))        #15
              2ec2 8115  adda [$15]       13561  adda([vTicks])                  #16
              2ec3 e8e7  blt  .deekr#19   13562  blt('.deekr#19')                #17 not enough time left, so retry
              2ec4 0500  ld   [x]         13563  ld([X])                         #18
              2ec5 de00  st   [y,x++]     13564  st([Y,Xpp])                     #19
              2ec6 c22a  st   [$2a]       13565  st([sysArgs+6])                 #20 index.lo
              2ec7 0500  ld   [x]         13566  ld([X])                         #21
              2ec8 c22b  st   [$2b]       13567  st([sysArgs+7])                 #22 index.hi
              2ec9 012a  ld   [$2a]       13568  ld([sysArgs+6])                 #23
              2eca 3080  anda $80,x       13569  anda(0x80,X)                    #24
              2ecb 812a  adda [$2a]       13570  adda([sysArgs+6])               #25
              2ecc c22a  st   [$2a]       13571  st([sysArgs+6])                 #26 index.lo*2
              2ecd 0500  ld   [x]         13572  ld([X])                         #27 msb index.lo
              2ece 812b  adda [$2b]       13573  adda([sysArgs+7])               #28
              2ecf 812b  adda [$2b]       13574  adda([sysArgs+7])               #29
              2ed0 c22b  st   [$2b]       13575  st([sysArgs+7])                 #30 index.hi*2
              2ed1 0118  ld   [$18]       13576  ld([vAC])                       #31
              2ed2 812a  adda [$2a]       13577  adda([sysArgs+6])               #32
              2ed3 c21d  st   [$1d]       13578  st([vTmp])                      #33 vTmp = vAC.lo + index.lo
              2ed4 e8d8  blt  .deekr#36   13579  bmi('.deekr#36')                #34 check carry
              2ed5 a12a  suba [$2a]       13580  suba([sysArgs+6])               #35 restore vAC.lo
              2ed6 fcda  bra  .deekr#38   13581  bra('.deekr#38')                #36
              2ed7 412a  ora  [$2a]       13582  ora([sysArgs+6])                #37 carry in bit 7
                                          13583
                                          13584  label('.deekr#36')
.deekr#36:    2ed8 212a  anda [$2a]       13585  anda([sysArgs+6])               #36 carry in bit 7
              2ed9 0200  nop              13586  nop()                           #37
                                          13587
                                          13588  label('.deekr#38')
.deekr#38:    2eda 3080  anda $80,x       13589  anda(0x80,X)                    #38
              2edb 0500  ld   [x]         13590  ld([X])                         #39 carry in bit 0
              2edc 8119  adda [$19]       13591  adda([vAC+1])                   #40
              2edd 952b  adda [$2b],y     13592  adda([sysArgs+7],Y)             #41 Y = vAC.hi + index.hi + carry
              2ede 111d  ld   [$1d],x     13593  ld([vTmp],X)                    #42
              2edf 0d00  ld   [y,x]       13594  ld([Y,X])                       #43
              2ee0 c218  st   [$18]       13595  st([vAC])                       #44
              2ee1 de00  st   [y,x++]     13596  st([Y,Xpp])                     #45
              2ee2 0d00  ld   [y,x]       13597  ld([Y,X])                       #46
              2ee3 c219  st   [$19]       13598  st([vAC+1])                     #47
              2ee4 1403  ld   $03,y       13599  ld(hi('NEXTY'),Y)               #48
              2ee5 e000  jmp  y,$00       13600  jmp(Y,'NEXTY')                  #49
              2ee6 00e6  ld   $e6         13601  ld(-52/2)                       #50
                                          13602
                                          13603  label('.deekr#19')
.deekr#19:    2ee7 0116  ld   [$16]       13604  ld([vPC])                       #19 retry instruction
              2ee8 a002  suba $02         13605  suba(2)                         #20
              2ee9 c216  st   [$16]       13606  st([vPC])                       #21
              2eea 1403  ld   $03,y       13607  ld(hi('NEXTY'),Y)               #22
              2eeb e000  jmp  y,$00       13608  jmp(Y,'NEXTY')                  #23
              2eec 00f3  ld   $f3         13609  ld(-26/2)                       #24
                                          13610
                                          13611
                                          13612  # DOKER implementation
                                          13613  #label('doker#13')
                                          13614  #ld([vPC+1],Y)                   #13 vPC.hi
                                          13615  #st([vTmp])                      #14 var addr
                                          13616  #st([Y,Xpp])                     #15
                                          13617  #ld(min(0,maxTicks-62/2))        #16
                                          13618  #adda([vTicks])                  #17
                                          13619  #blt('.doker#20')                #18 not enough time left, so retry
                                          13620  #ld([Y,X])                       #19
                                          13621  #ld(AC,X)                        #20 idx addr
                                          13622  #ld(0,Y)                         #21
                                          13623  #ld([X])                         #22
                                          13624  #st([sysArgs+6])                 #23 idx.lo
                                          13625  #st([Y,Xpp])                     #24 X++
                                          13626  #ld([X])                         #25
                                          13627  #st([sysArgs+7])                 #26 idx.hi
                                          13628  #ld([sysArgs+6])                 #27
                                          13629  #anda(0x80,X)                    #28
                                          13630  #adda([sysArgs+6])               #29
                                          13631  #st([sysArgs+6])                 #30 idx.lo*2
                                          13632  #ld([X])                         #31 msb idx.lo
                                          13633  #adda([sysArgs+7])               #32
                                          13634  #adda([sysArgs+7])               #33
                                          13635  #st([sysArgs+7])                 #34 idx.hi*2
                                          13636  #ld([vAC])                       #35
                                          13637  #adda([sysArgs+6])               #36
                                          13638  #st([vAC])                       #37 vAC.lo = vAC.lo + index.lo
                                          13639  #bmi('.doker#40')                #38 check carry
                                          13640  #suba([sysArgs+6])               #39 restore vAC.lo
                                          13641  #bra('.doker#42')                #40
                                          13642  #ora([sysArgs+6])                #41 carry in bit 7
                                          13643  #
                                          13644  #label('.doker#40')
                                          13645  #anda([sysArgs+6])               #40 carry in bit 7
                                          13646  #nop()                           #41
                                          13647  #
                                          13648  #label('.doker#42')
                                          13649  #anda(0x80,X)                    #42
                                          13650  #ld([X])                         #43 carry in bit 0
                                          13651  #adda([vAC+1])                   #44
                                          13652  #adda([sysArgs+7],Y)             #45 Y = vAC.hi + index.hi + carry
                                          13653  #st([vAC+1])                     #46 for consistancy
                                          13654  #ld([vTmp],X)                    #47
                                          13655  #ld([X])                         #48 var.lo
                                          13656  #ld([vAC],X)                     #49
                                          13657  #st([Y,X])                       #50 poke [vAC], var.lo
                                          13658  #ld([vTmp])                      #51
                                          13659  #adda(1,X)                       #52
                                          13660  #ld([X])                         #53 var.hi
                                          13661  #st([vTmp])                      #54
                                          13662  #ld([vAC])                       #55
                                          13663  #adda(1,X)                       #56
                                          13664  #ld([vTmp])                      #57
                                          13665  #st([Y,X])                       #58 poke [vAC+1], var.hi
                                          13666  #ld([vPC])                       #59
                                          13667  #adda(1)                         #60
                                          13668  #st([vPC])                       #61
                                          13669  #ld(hi('NEXTY'),Y)               #62
                                          13670  #jmp(Y,'NEXTY')                  #63
                                          13671  #ld(-66/2)                       #64
                                          13672  #
                                          13673  #label('.doker#20')
                                          13674  #ld([vPC])                       #20 retry instruction
                                          13675  #suba(2)                         #21
                                          13676  #st([vPC])                       #22
                                          13677  #ld(hi('REENTER'),Y)             #23
                                          13678  #jmp(Y,'REENTER')                #24
                                          13679  #ld(-28/2)                       #25
                                          13680
                                          13681
              2eed 0200  nop              13682  fillers(until=0xff)
              2eee 0200  nop
              2eef 0200  nop
              * 18 times
              2eff 0200  nop              13683  align(0x100, size=0x100)
                                          13684
                                          13685  #-----------------------------------------------------------------------
                                          13686  #  Implementation of SYS_CopyMemory[Ext], (0x2F00)
                                          13687  #-----------------------------------------------------------------------
                                          13688  #
                                          13689  # SYS_CopyMemory_vX_80 implementation, (lb3361)
                                          13690  label('sys_CopyMemory')
sys_CopyMemory:
              2f00 f83e  ble  .sysCm#20   13691  ble('.sysCm#20')                     #18   goto burst6
              2f01 a006  suba $06         13692  suba(6)                              #19
              2f02 f440  bge  .sysCm#22   13693  bge('.sysCm#22')                     #20   goto burst6
              2f03 1527  ld   [$27],y     13694  ld([sysArgs+3],Y)                    #21
              2f04 8003  adda $03         13695  adda(3)                              #22
              2f05 f41d  bge  .sysCm#25   13696  bge('.sysCm#25')                     #23   goto burst3
              2f06 1126  ld   [$26],x     13697  ld([sysArgs+2],X)                    #24
                                          13698
              2f07 8002  adda $02         13699  adda(2)                              #25   single
              2f08 c218  st   [$18]       13700  st([vAC])                            #26
              2f09 0d00  ld   [y,x]       13701  ld([Y,X])                            #27
              2f0a 1525  ld   [$25],y     13702  ld([sysArgs+1],Y)                    #28
              2f0b 1124  ld   [$24],x     13703  ld([sysArgs+0],X)                    #29
              2f0c ce00  st   [y,x]       13704  st([Y,X])                            #30
              2f0d 0124  ld   [$24]       13705  ld([sysArgs+0])                      #31
              2f0e 8001  adda $01         13706  adda(1)                              #32
              2f0f c224  st   [$24]       13707  st([sysArgs+0])                      #33
              2f10 0126  ld   [$26]       13708  ld([sysArgs+2])                      #34
              2f11 8001  adda $01         13709  adda(1)                              #35
              2f12 c226  st   [$26]       13710  st([sysArgs+2])                      #36
              2f13 0118  ld   [$18]       13711  ld([vAC])                            #37
              2f14 f017  beq  $2f17       13712  beq(pc()+3)                          #38
              2f15 fc18  bra  $2f18       13713  bra(pc()+3)                          #39
              2f16 00fe  ld   $fe         13714  ld(-2)                               #40
              2f17 0000  ld   $00         13715  ld(0)                                #40!
              2f18 8116  adda [$16]       13716  adda([vPC])                          #41
              2f19 c216  st   [$16]       13717  st([vPC])                            #42
              2f1a 1403  ld   $03,y       13718  ld(hi('REENTER'),Y)                  #43
              2f1b e0cb  jmp  y,$cb       13719  jmp(Y,'REENTER')                     #44
              2f1c 00e8  ld   $e8         13720  ld(-48/2)                            #45
                                          13721
                                          13722  label('.sysCm#25')
.sysCm#25:    2f1d c218  st   [$18]       13723  st([vAC])                            #25   burst3
                                          13724  for i in range(3):
              2f1e 0d00  ld   [y,x]       13725    ld([Y,X])                            #26+3*i
              2f1f c228  st   [$28]       13726    st([sysArgs+4+i])                    #27+3*i
              2f20 de00  st   [y,x++]     13727    st([Y,Xpp]) if i<2 else None         #28+3*i
              2f21 0d00  ld   [y,x]
              2f22 c229  st   [$29]
              2f23 de00  st   [y,x++]
              2f24 0d00  ld   [y,x]
              2f25 c22a  st   [$2a]
              2f26 1525  ld   [$25],y     13728  ld([sysArgs+1],Y)                    #34
              2f27 1124  ld   [$24],x     13729  ld([sysArgs+0],X)                    #35
                                          13730  for i in range(3):
              2f28 0128  ld   [$28]       13731    ld([sysArgs+4+i])                    #36+2*i
              2f29 de00  st   [y,x++]     13732    st([Y,Xpp])                          #37+2*i
              2f2a 0129  ld   [$29]
              2f2b de00  st   [y,x++]
              2f2c 012a  ld   [$2a]
              2f2d de00  st   [y,x++]
              2f2e 0124  ld   [$24]       13733  ld([sysArgs+0])                      #42
              2f2f 8003  adda $03         13734  adda(3)                              #43
              2f30 c224  st   [$24]       13735  st([sysArgs+0])                      #44
              2f31 0126  ld   [$26]       13736  ld([sysArgs+2])                      #45
              2f32 8003  adda $03         13737  adda(3)                              #46
              2f33 c226  st   [$26]       13738  st([sysArgs+2])                      #47
              2f34 0118  ld   [$18]       13739  ld([vAC])                            #48
              2f35 f038  beq  $2f38       13740  beq(pc()+3)                          #49
              2f36 fc39  bra  $2f39       13741  bra(pc()+3)                          #50
              2f37 00fe  ld   $fe         13742  ld(-2)                               #51
              2f38 0000  ld   $00         13743  ld(0)                                #51!
              2f39 8116  adda [$16]       13744  adda([vPC])                          #52
              2f3a c216  st   [$16]       13745  st([vPC])                            #53
              2f3b 1403  ld   $03,y       13746  ld(hi('NEXTY'),Y)                    #54
              2f3c e000  jmp  y,$00       13747  jmp(Y,'NEXTY')                       #55
              2f3d 00e3  ld   $e3         13748  ld(-58/2)                            #56
                                          13749
                                          13750  label('.sysCm#20')
.sysCm#20:    2f3e 0200  nop              13751  nop()                                #20   burst6
              2f3f 1527  ld   [$27],y     13752  ld([sysArgs+3],Y)                    #21
                                          13753  label('.sysCm#22')
.sysCm#22:    2f40 c218  st   [$18]       13754  st([vAC])                            #22   burst6
              2f41 1126  ld   [$26],x     13755  ld([sysArgs+2],X)                    #23
                                          13756  for i in range(6):
              2f42 0d00  ld   [y,x]       13757    ld([Y,X])                            #24+i*3
              2f43 c21a  st   [$1a]       13758    st([vLR+i if i<2 else sysArgs+2+i])  #25+i*3
              2f44 de00  st   [y,x++]     13759    st([Y,Xpp]) if i<5 else None         #26+i*3 if i<5
              2f45 0d00  ld   [y,x]
              2f46 c21b  st   [$1b]
              2f47 de00  st   [y,x++]
              2f48 0d00  ld   [y,x]
              2f49 c228  st   [$28]
              2f4a de00  st   [y,x++]
              2f4b 0d00  ld   [y,x]
              2f4c c229  st   [$29]
              2f4d de00  st   [y,x++]
              2f4e 0d00  ld   [y,x]
              2f4f c22a  st   [$2a]
              2f50 de00  st   [y,x++]
              2f51 0d00  ld   [y,x]
              2f52 c22b  st   [$2b]
              2f53 1525  ld   [$25],y     13760  ld([sysArgs+1],Y)                    #41
              2f54 1124  ld   [$24],x     13761  ld([sysArgs+0],X)                    #42
                                          13762  for i in range(6):
              2f55 011a  ld   [$1a]       13763    ld([vLR+i if i<2 else sysArgs+2+i])  #43+i*2
              2f56 de00  st   [y,x++]     13764    st([Y,Xpp])                          #44+i*2
              2f57 011b  ld   [$1b]
              2f58 de00  st   [y,x++]
              2f59 0128  ld   [$28]
              2f5a de00  st   [y,x++]
              2f5b 0129  ld   [$29]
              2f5c de00  st   [y,x++]
              2f5d 012a  ld   [$2a]
              2f5e de00  st   [y,x++]
              2f5f 012b  ld   [$2b]
              2f60 de00  st   [y,x++]
              2f61 0124  ld   [$24]       13765  ld([sysArgs+0])                      #55
              2f62 8006  adda $06         13766  adda(6)                              #56
              2f63 c224  st   [$24]       13767  st([sysArgs+0])                      #57
              2f64 0126  ld   [$26]       13768  ld([sysArgs+2])                      #58
              2f65 8006  adda $06         13769  adda(6)                              #59
              2f66 c226  st   [$26]       13770  st([sysArgs+2])                      #60
                                          13771
              2f67 0118  ld   [$18]       13772  ld([vAC])                            #61
              2f68 ec6c  bne  .sysCm#64   13773  bne('.sysCm#64')                     #62
              2f69 1403  ld   $03,y       13774  ld(hi('REENTER'),Y)                  #63
              2f6a e0cb  jmp  y,$cb       13775  jmp(Y,'REENTER')                     #64
              2f6b 00de  ld   $de         13776  ld(-68/2)                            #65
                                          13777
                                          13778  label('.sysCm#64')
.sysCm#64:    2f6c 00e6  ld   $e6         13779  ld(-52/2)                            #64
              2f6d 8115  adda [$15]       13780  adda([vTicks])                       #13 = 65 - 52
              2f6e c215  st   [$15]       13781  st([vTicks])                         #14
              2f6f 80e8  adda $e8         13782  adda(min(0,maxTicks-(26+52)/2))      #15   could probably be min(0,maxTicks-(26+52)/2)
                                          13783  bge('sys_CopyMemory')                #16
              2f70 f400  bge  sys_CopyMemory
              2f71 0118  ld   [$18]       13784  ld([vAC])                            #17
              2f72 00fe  ld   $fe         13785  ld(-2)                               #18   notime
              2f73 8116  adda [$16]       13786  adda([vPC])                          #19
              2f74 c216  st   [$16]       13787  st([vPC])                            #20
              2f75 1403  ld   $03,y       13788  ld(hi('REENTER'),Y)                  #21
              2f76 e0cb  jmp  y,$cb       13789  jmp(Y,'REENTER')                     #22
              2f77 00f3  ld   $f3         13790  ld(-26/2)                            #23
                                          13791
                                          13792
                                          13793  # SYS_CopyMemoryExt_vX_100 implementation, (lb3361)
                                          13794  label('sys_CopyMemoryExt')
sys_CopyMemoryExt:
              2f78 8200  adda ac          13795  adda(AC)                             #18
              2f79 8200  adda ac          13796  adda(AC)                             #19
              2f7a 403c  ora  $3c         13797  ora(0x3c)                            #20
              2f7b c21d  st   [$1d]       13798  st([vTmp])                           #21 [vTmp] = src ctrl value
              2f7c 0119  ld   [$19]       13799  ld([vAC+1])                          #22
              2f7d 20fc  anda $fc         13800  anda(0xfc)                           #23
              2f7e 403c  ora  $3c         13801  ora(0x3c)                            #24
              2f7f c21a  st   [$1a]       13802  st([vLR])                            #25 [vLR] = dest ctrl value
                                          13803
                                          13804  label('.sysCme#26')
.sysCme#26:   2f80 0118  ld   [$18]       13805  ld([vAC])                            #26
              2f81 f8a4  ble  .sysCme#29  13806  ble('.sysCme#29')                    #27   goto burst5
              2f82 a005  suba $05         13807  suba(5)                              #28
              2f83 f4a6  bge  .sysCme#31  13808  bge('.sysCme#31')                    #29   goto burst5
              2f84 1527  ld   [$27],y     13809  ld([sysArgs+3],Y)                    #30
              2f85 8004  adda $04         13810  adda(4)                              #31
                                          13811
              2f86 c218  st   [$18]       13812  st([vAC])                            #32   single
              2f87 111d  ld   [$1d],x     13813  ld([vTmp],X)                         #33
              2f88 c500  ctrl x           13814  ctrl(X)                              #34
              2f89 1126  ld   [$26],x     13815  ld([sysArgs+2],X)                    #35
              2f8a 0d00  ld   [y,x]       13816  ld([Y,X])                            #36
              2f8b 111a  ld   [$1a],x     13817  ld([vLR],X)                          #37
              2f8c c500  ctrl x           13818  ctrl(X)                              #38
              2f8d 1525  ld   [$25],y     13819  ld([sysArgs+1],Y)                    #39
              2f8e 1124  ld   [$24],x     13820  ld([sysArgs+0],X)                    #40
              2f8f ce00  st   [y,x]       13821  st([Y,X])                            #41
              2f90 1401  ld   $01,y       13822  ld(hi(ctrlBits), Y)                  #42
              2f91 09f8  ld   [y,$f8]     13823  ld([Y,ctrlBits])                     #43
              2f92 1200  ld   ac,x        13824  ld(AC,X)                             #44
              2f93 c500  ctrl x           13825  ctrl(X)                              #45
              2f94 0124  ld   [$24]       13826  ld([sysArgs+0])                      #46
              2f95 8001  adda $01         13827  adda(1)                              #47
              2f96 c224  st   [$24]       13828  st([sysArgs+0])                      #48
              2f97 0126  ld   [$26]       13829  ld([sysArgs+2])                      #49
              2f98 8001  adda $01         13830  adda(1)                              #50
              2f99 c226  st   [$26]       13831  st([sysArgs+2])                      #51
              2f9a 0118  ld   [$18]       13832  ld([vAC])                            #52  done?
              2f9b f09e  beq  $2f9e       13833  beq(pc()+3)                          #53
              2f9c fc9f  bra  $2f9f       13834  bra(pc()+3)                          #54
              2f9d 00fe  ld   $fe         13835  ld(-2)                               #55  restart
              2f9e 0000  ld   $00         13836  ld(0)                                #55! finished
              2f9f 8116  adda [$16]       13837  adda([vPC])                          #56
              2fa0 c216  st   [$16]       13838  st([vPC])                            #57
              2fa1 1403  ld   $03,y       13839  ld(hi('NEXTY'),Y)                    #58
              2fa2 e000  jmp  y,$00       13840  jmp(Y,'NEXTY')                       #59
              2fa3 00e1  ld   $e1         13841  ld(-62/2)                            #60
                                          13842
                                          13843  label('.sysCme#29')
.sysCme#29:   2fa4 0200  nop              13844  nop()                                #29   burst5
              2fa5 1527  ld   [$27],y     13845  ld([sysArgs+3],Y)                    #30
                                          13846  label('.sysCme#31')
.sysCme#31:   2fa6 c218  st   [$18]       13847  st([vAC])                            #31   burst5
              2fa7 111d  ld   [$1d],x     13848  ld([vTmp],X)                         #32
              2fa8 c500  ctrl x           13849  ctrl(X)                              #33
              2fa9 1126  ld   [$26],x     13850  ld([sysArgs+2],X)                    #34
                                          13851  for i in range(5):
              2faa 0d00  ld   [y,x]       13852    ld([Y,X])                            #35+i*3
              2fab c21b  st   [$1b]       13853    st([vLR+1 if i<1 else sysArgs+3+i])  #36+i*3
              2fac de00  st   [y,x++]     13854    st([Y,Xpp]) if i<4 else None         #37+i*3 if i<4
              2fad 0d00  ld   [y,x]
              2fae c228  st   [$28]
              2faf de00  st   [y,x++]
              2fb0 0d00  ld   [y,x]
              2fb1 c229  st   [$29]
              2fb2 de00  st   [y,x++]
              2fb3 0d00  ld   [y,x]
              2fb4 c22a  st   [$2a]
              2fb5 de00  st   [y,x++]
              2fb6 0d00  ld   [y,x]
              2fb7 c22b  st   [$2b]
              2fb8 111a  ld   [$1a],x     13855  ld([vLR],X)                          #49
              2fb9 c500  ctrl x           13856  ctrl(X)                              #50
              2fba 1525  ld   [$25],y     13857  ld([sysArgs+1],Y)                    #51
              2fbb 1124  ld   [$24],x     13858  ld([sysArgs+0],X)                    #52
                                          13859  for i in range(5):
              2fbc 011b  ld   [$1b]       13860    ld([vLR+1 if i<1 else sysArgs+3+i])  #53+i*2
              2fbd de00  st   [y,x++]     13861    st([Y,Xpp])                          #54+i*2
              2fbe 0128  ld   [$28]
              2fbf de00  st   [y,x++]
              2fc0 0129  ld   [$29]
              2fc1 de00  st   [y,x++]
              2fc2 012a  ld   [$2a]
              2fc3 de00  st   [y,x++]
              2fc4 012b  ld   [$2b]
              2fc5 de00  st   [y,x++]
              2fc6 0124  ld   [$24]       13862  ld([sysArgs+0])                      #63
              2fc7 8005  adda $05         13863  adda(5)                              #64
              2fc8 c224  st   [$24]       13864  st([sysArgs+0])                      #65
              2fc9 0126  ld   [$26]       13865  ld([sysArgs+2])                      #66
              2fca 8005  adda $05         13866  adda(5)                              #67
              2fcb c226  st   [$26]       13867  st([sysArgs+2])                      #68
                                          13868
              2fcc 0118  ld   [$18]       13869  ld([vAC])                            #69
              2fcd ecd6  bne  .sysCme#72  13870  bne('.sysCme#72')                    #70
              2fce 1401  ld   $01,y       13871  ld(hi(ctrlBits), Y)                  #71  we're done!
              2fcf 09f8  ld   [y,$f8]     13872  ld([Y,ctrlBits])                     #72
              2fd0 30fc  anda $fc,x       13873  anda(0xfc,X)                         #73
              2fd1 c500  ctrl x           13874  ctrl(X)                              #74
              2fd2 011d  ld   [$1d]       13875  ld([vTmp])                           #75  always read after ctrl
              2fd3 1403  ld   $03,y       13876  ld(hi('NEXTY'),Y)                    #76
              2fd4 e000  jmp  y,$00       13877  jmp(Y,'NEXTY')                       #77
              2fd5 00d8  ld   $d8         13878  ld(-80/2)                            #78
                                          13879
                                          13880  label('.sysCme#72')
.sysCme#72:   2fd6 00e6  ld   $e6         13881  ld(-52/2)                            #72
              2fd7 8115  adda [$15]       13882  adda([vTicks])                       #21 = 72 - 52
              2fd8 c215  st   [$15]       13883  st([vTicks])                         #22
              2fd9 80e1  adda $e1         13884  adda(min(0,maxTicks-(40+52)/2))      #23
              2fda f480  bge  .sysCme#26  13885  bge('.sysCme#26')                    #24  enough time for another loop
              2fdb 00fe  ld   $fe         13886  ld(-2)                               #25
              2fdc 8116  adda [$16]       13887  adda([vPC])                          #26  restart
              2fdd c216  st   [$16]       13888  st([vPC])                            #27
              2fde 1401  ld   $01,y       13889  ld(hi(ctrlBits), Y)                  #28
              2fdf 09f8  ld   [y,$f8]     13890  ld([Y,ctrlBits])                     #29
              2fe0 30fc  anda $fc,x       13891  anda(0xfc,X)                         #30
              2fe1 c500  ctrl x           13892  ctrl(X)                              #31
              2fe2 011d  ld   [$1d]       13893  ld([vTmp])                           #32 always read after ctrl
              2fe3 1403  ld   $03,y       13894  ld(hi('REENTER'),Y)                  #33
              2fe4 e0cb  jmp  y,$cb       13895  jmp(Y,'REENTER')                     #34
              2fe5 00ed  ld   $ed         13896  ld(-38/2)                            #35 max: 38 + 52 = 90 cycles
                                          13897
                                          13898
              2fe6 0200  nop              13899  fillers(until=0xff)
              2fe7 0200  nop
              2fe8 0200  nop
              * 25 times
              2fff 0200  nop              13900  align(0x100, size=0x100)
                                          13901
                                          13902  #-----------------------------------------------------------------------
                                          13903  #  Implementation of SYS_ScanMemory[Ext], (0x3000)
                                          13904  #-----------------------------------------------------------------------
                                          13905  #
                                          13906  # SYS_ScanMemory_vX_50 implementation, (lb3361)
                                          13907  label('sys_ScanMemory')
sys_ScanMemory:
              3000 1124  ld   [$24],x     13908  ld([sysArgs+0],X)                    #18
              3001 0d00  ld   [y,x]       13909  ld([Y,X])                            #19
                                          13910  label('.sysSme#20')
.sysSme#20:   3002 6126  xora [$26]       13911  xora([sysArgs+2])                    #20
              3003 f01e  beq  .sysSme#23  13912  beq('.sysSme#23')                    #21
              3004 0d00  ld   [y,x]       13913  ld([Y,X])                            #22
              3005 6127  xora [$27]       13914  xora([sysArgs+3])                    #23
              3006 f021  beq  .sysSme#26  13915  beq('.sysSme#26')                    #24
              3007 0124  ld   [$24]       13916  ld([sysArgs+0])                      #25
              3008 8001  adda $01         13917  adda(1);                             #26
              3009 d224  st   [$24],x     13918  st([sysArgs+0],X)                    #27
              300a 0118  ld   [$18]       13919  ld([vAC])                            #28
              300b a001  suba $01         13920  suba(1)                              #29
              300c f01a  beq  .sysSme#32  13921  beq('.sysSme#32')                    #30 return zero
              300d c218  st   [$18]       13922  st([vAC])                            #31
              300e 00f7  ld   $f7         13923  ld(-18/2)                            #14 = 32 - 18
              300f 8115  adda [$15]       13924  adda([vTicks])                       #15
              3010 c215  st   [$15]       13925  st([vTicks])                         #16
              3011 80f8  adda $f8         13926  adda(min(0,maxTicks -(28+18)/2))     #17
              3012 f402  bge  .sysSme#20  13927  bge('.sysSme#20')                    #18
              3013 0d00  ld   [y,x]       13928  ld([Y,X])                            #19
              3014 00fe  ld   $fe         13929  ld(-2)                               #20 restart
              3015 8116  adda [$16]       13930  adda([vPC])                          #21
              3016 c216  st   [$16]       13931  st([vPC])                            #22
              3017 1403  ld   $03,y       13932  ld(hi('REENTER'),Y)                  #23
              3018 e0cb  jmp  y,$cb       13933  jmp(Y,'REENTER')                     #24
              3019 00f2  ld   $f2         13934  ld(-28/2)                            #25
                                          13935
                                          13936  label('.sysSme#32')
.sysSme#32:   301a c219  st   [$19]       13937  st([vAC+1])                          #32 return zero
              301b 1403  ld   $03,y       13938  ld(hi('REENTER'),Y)                  #33
              301c e0cb  jmp  y,$cb       13939  jmp(Y,'REENTER')                     #34
              301d 00ed  ld   $ed         13940  ld(-38/2)                            #35
                                          13941
                                          13942  label('.sysSme#23')
.sysSme#23:   301e 0200  nop              13943  nop()                                #23 success
              301f 0200  nop              13944  nop()                                #24
              3020 0124  ld   [$24]       13945  ld([sysArgs+0])                      #25
                                          13946  label('.sysSme#26')
.sysSme#26:   3021 c218  st   [$18]       13947  st([vAC])                            #26 success
              3022 0125  ld   [$25]       13948  ld([sysArgs+1])                      #27
              3023 c219  st   [$19]       13949  st([vAC+1])                          #28
              3024 1403  ld   $03,y       13950  ld(hi('REENTER'),Y)                  #29
              3025 e0cb  jmp  y,$cb       13951  jmp(Y,'REENTER')                     #30
              3026 00ef  ld   $ef         13952  ld(-34/2)                            #31
                                          13953
                                          13954
                                          13955  # SYS_ScanMemoryExt_vX_50 implementation, (lb3361)
                                          13956  label('sys_ScanMemoryExt')
sys_ScanMemoryExt:
              3027 503c  ora  $3c,x       13957  ora(0x3c,X)                          #18
              3028 c500  ctrl x           13958  ctrl(X)                              #19
              3029 1525  ld   [$25],y     13959  ld([sysArgs+1],Y)                    #20
              302a 1124  ld   [$24],x     13960  ld([sysArgs+0],X)                    #21
              302b 0d00  ld   [y,x]       13961  ld([Y,X])                            #22
              302c 0200  nop              13962  nop()                                #23
                                          13963  label('.sysSmx#24')
.sysSmx#24:   302d 6126  xora [$26]       13964  xora([sysArgs+2])                    #24
              302e f04a  beq  .sysSmx#27  13965  beq('.sysSmx#27')                    #25
              302f 0d00  ld   [y,x]       13966  ld([Y,X])                            #26
              3030 6127  xora [$27]       13967  xora([sysArgs+3])                    #27
              3031 f04d  beq  .sysSmx#30  13968  beq('.sysSmx#30')                    #28
              3032 0124  ld   [$24]       13969  ld([sysArgs+0])                      #29
              3033 8001  adda $01         13970  adda(1);                             #30
              3034 d224  st   [$24],x     13971  st([sysArgs+0],X)                    #31
              3035 0118  ld   [$18]       13972  ld([vAC])                            #32
              3036 a001  suba $01         13973  suba(1)                              #33
              3037 f053  beq  .sysSmx#36  13974  beq('.sysSmx#36')                    #34 return zero
              3038 c218  st   [$18]       13975  st([vAC])                            #35
              3039 00f7  ld   $f7         13976  ld(-18/2)                            #18 = 36 - 18
              303a 8115  adda [$15]       13977  adda([vTicks])                       #19
              303b c215  st   [$15]       13978  st([vTicks])                         #20
              303c 80f7  adda $f7         13979  adda(min(0,maxTicks -(30+18)/2))     #21
              303d f42d  bge  .sysSmx#24  13980  bge('.sysSmx#24')                    #22
              303e 0d00  ld   [y,x]       13981  ld([Y,X])                            #23
              303f 0116  ld   [$16]       13982  ld([vPC])                            #24
              3040 a002  suba $02         13983  suba(2)                              #25 restart
              3041 c216  st   [$16]       13984  st([vPC])                            #26
              3042 1401  ld   $01,y       13985  ld(hi(ctrlBits),Y)                   #27 restore and return
              3043 09f8  ld   [y,$f8]     13986  ld([Y,ctrlBits])                     #28
              3044 30fc  anda $fc,x       13987  anda(0xfc,X)                         #29
              3045 c500  ctrl x           13988  ctrl(X)                              #30
              3046 011d  ld   [$1d]       13989  ld([vTmp])                           #31
              3047 1403  ld   $03,y       13990  ld(hi('NEXTY'),Y)                    #32
              3048 e000  jmp  y,$00       13991  jmp(Y,'NEXTY')                       #33
              3049 00ee  ld   $ee         13992  ld(-36/2)                            #34
                                          13993
                                          13994  label('.sysSmx#27')
.sysSmx#27:   304a 0200  nop              13995  nop()                                #27 success
              304b 0200  nop              13996  nop()                                #28
              304c 0124  ld   [$24]       13997  ld([sysArgs+0])                      #29
                                          13998  label('.sysSmx#30')
.sysSmx#30:   304d c218  st   [$18]       13999  st([vAC])                            #30 success
              304e 0125  ld   [$25]       14000  ld([sysArgs+1])                      #31
              304f 0200  nop              14001  nop()                                #32
              3050 0200  nop              14002  nop()                                #33
              3051 0200  nop              14003  nop()                                #34
              3052 0200  nop              14004  nop()                                #35
                                          14005  label('.sysSmx#36')
.sysSmx#36:   3053 c219  st   [$19]       14006  st([vAC+1])                          #36
              3054 1401  ld   $01,y       14007  ld(hi(ctrlBits),Y)                   #37 restore and return
              3055 09f8  ld   [y,$f8]     14008  ld([Y,ctrlBits])                     #38
              3056 30fc  anda $fc,x       14009  anda(0xfc,X)                         #39
              3057 c500  ctrl x           14010  ctrl(X)                              #40
              3058 011d  ld   [$1d]       14011  ld([vTmp])                           #41
              3059 1403  ld   $03,y       14012  ld(hi('NEXTY'),Y)                    #42
              305a e000  jmp  y,$00       14013  jmp(Y,'NEXTY')                       #43
              305b 00e9  ld   $e9         14014  ld(-46/2)                            #44
                                          14015
                                          14016
              305c 0200  nop              14017  fillers(until=0x80)
              305d 0200  nop
              305e 0200  nop
              * 36 times
                                          14018
                                          14019  # SYS_LoaderSerialIN
                                          14020  # sysArgs[0]   (in), zero page address of odd videoY waits and first even videoY wait, 207 219 235 251 2
                                          14021  # sysArgs[1]   (in), sysArgs2 address, buffer that receives protocol, packet length and packet address
                                          14022  # sysArgs[2]   (out), protocol, filled in automatically by the Sys call
                                          14023  # sysArgs[3]   (out), packet length, filled in automatically by the Sys call
                                          14024  # sysArgs[4:5] (out), packet address, filled in automatically by the Sys call
                                          14025  # No error checks are performed, (apart from checking protocol)
                                          14026  # No checksums are performed
                                          14027  label('SYS_LoadSerialIn_vX_56')
SYS_LoadSerialIn_vX_56:
              3080 1124  ld   [$24],x     14028  ld([sysArgs+0],X)                   #15
              3081 0109  ld   [$09]       14029  ld([videoY])                        #16
              3082 6500  xora [x]         14030  xora([X])                           #17
              3083 ec95  bne  .sysLsi#20  14031  bne('.sysLsi#20')                   #18 wrong videoY so restart
              3084 0500  ld   [x]         14032  ld([X])                             #19
              3085 2001  anda $01         14033  anda(1)                             #20
              3086 f09b  beq  .sysLsi#23  14034  beq('.sysLsi#23')                   #21 even videoY
              3087 0124  ld   [$24]       14035  ld([sysArgs+0])                     #22
              3088 8001  adda $01         14036  adda(1)                             #23 odd videoY
              3089 c224  st   [$24]       14037  st([sysArgs+0])                     #24
              308a 1125  ld   [$25],x     14038  ld([sysArgs+1],X)                   #25 sysArgs address
              308b c700  st   in,[x]      14039  st(IN,[X])                          #26
              308c 0125  ld   [$25]       14040  ld([sysArgs+1])                     #27
              308d 8001  adda $01         14041  adda(1)                             #28
              308e c225  st   [$25]       14042  st([sysArgs+1])                     #29
              308f 0116  ld   [$16]       14043  ld([vPC])                           #30 restart
              3090 a002  suba $02         14044  suba(2)                             #31
              3091 c216  st   [$16]       14045  st([vPC])                           #32
              3092 1403  ld   $03,y       14046  ld(hi('REENTER'),Y)                 #33
              3093 e0cb  jmp  y,$cb       14047  jmp(Y,'REENTER')                    #34
              3094 00ed  ld   $ed         14048  ld(-38/2)                           #35
                                          14049
                                          14050  # wrong videoY
                                          14051  label('.sysLsi#20')
.sysLsi#20:   3095 0116  ld   [$16]       14052  ld([vPC])                           #20 restart
              3096 a002  suba $02         14053  suba(2)                             #21
              3097 c216  st   [$16]       14054  st([vPC])                           #22
              3098 1403  ld   $03,y       14055  ld(hi('REENTER'),Y)                 #23
              3099 e0cb  jmp  y,$cb       14056  jmp(Y,'REENTER')                    #24
              309a 00f2  ld   $f2         14057  ld(-28/2)                           #25
                                          14058
                                          14059  # even videoY
                                          14060  label('.sysLsi#23')
.sysLsi#23:   309b 0500  ld   [x]         14061  ld([X])                             #23
              309c 8004  adda $04         14062  adda(4)                             #24
              309d c600  st   [x]         14063  st([X])                             #25
              309e 0126  ld   [$26]       14064  ld([sysArgs+2])                     #26 protocol
              309f 604c  xora $4c         14065  xora(ord('L'))                      #27 check valid load
              30a0 ecb3  bne  .sysLsi#30  14066  bne('.sysLsi#30')                   #28 invalid packet
              30a1 0127  ld   [$27]       14067  ld([sysArgs+3])                     #29 check length
              30a2 f0d0  beq  .sysLsi#32  14068  beq('.sysLsi#32')                   #30 execute
              30a3 a001  suba $01         14069  suba(1)                             #31
              30a4 c227  st   [$27]       14070  st([sysArgs+3])                     #32 length--
              30a5 1128  ld   [$28],x     14071  ld([sysArgs+4],X)                   #33
              30a6 1529  ld   [$29],y     14072  ld([sysArgs+5],Y)                   #34
              30a7 cf00  st   in,[y,x]    14073  st(IN,[Y,X])                        #35
              30a8 0127  ld   [$27]       14074  ld([sysArgs+3])                     #36 check length
              30a9 f0c1  beq  .sysLsi#39  14075  beq('.sysLsi#39')                   #37 new packet
              30aa 0128  ld   [$28]       14076  ld([sysArgs+4])                     #38
              30ab 8001  adda $01         14077  adda(1)                             #39
              30ac c228  st   [$28]       14078  st([sysArgs+4])                     #40
              30ad 0116  ld   [$16]       14079  ld([vPC])                           #41 restart
              30ae a002  suba $02         14080  suba(2)                             #42
              30af c216  st   [$16]       14081  st([vPC])                           #43
              30b0 1403  ld   $03,y       14082  ld(hi('NEXTY'),Y)                   #44
              30b1 e000  jmp  y,$00       14083  jmp(Y,'NEXTY')                      #45
              30b2 00e8  ld   $e8         14084  ld(-48/2)                           #46
                                          14085
                                          14086  # even videoY
                                          14087  #label('.sysLsi#23')
                                          14088  #ld([X])                             #23
                                          14089  #adda(4)                             #24
                                          14090  #st([X])                             #25
                                          14091  #ld([sysArgs+2])                     #26 protocol
                                          14092  #xora(ord('L'))                      #27 check valid load
                                          14093  #bne('.sysLsi#30')                   #28 invalid packet
                                          14094  #ld([sysArgs+3])                     #29 check length
                                          14095  #beq('.sysLsi#32')                   #30 execute
                                          14096  #suba(1)                             #31
                                          14097  #st([sysArgs+3])                     #32 length--
                                          14098  #ld([sysArgs+4],X)                   #33
                                          14099  #ld([sysArgs+5],Y)                   #34
                                          14100  #st(IN,[Y,X])                        #35
                                          14101  #ld([sysArgs+3])                     #36 check length
                                          14102  #beq('.sysLsi#39')                   #37 new packet
                                          14103  #ld([sysArgs+4])                     #38
                                          14104  #adda(1)                             #39
                                          14105  #st([sysArgs+4])                     #40 address.lo++
                                          14106  #adda(1)                             #41 254+1+1 = 0, 255+1+1 = 1
                                          14107  #anda(0xfe)                          #42 will be zero only when writing to top 2 bytes of page
                                          14108  #st([vTmp])                          #43 remember as first condition
                                          14109  #ld([sysArgs+5])                     #44 address.hi
                                          14110  #suba(1)                             #45
                                          14111  #anda(0xfc)                          #46 will be zero only when writing to pages 1, 2, 3, 4
                                          14112  #ora([vTmp])                         #47 combine second condition with first
                                          14113  #bne(pc()+3)                         #48 condition is non zero, so do nothing
                                          14114  #bra(pc()+3)                         #49 condition is zero, so disable channels 1, 2, 3
                                          14115  #ld(0xfc);                           #50 disable channels 1, 2, 3
                                          14116  #ld(0xff);                           #50 (!) do nothing
                                          14117  #anda([channelMask])                 #51
                                          14118  #st([channelMask])                   #52
                                          14119  #ld([vPC])                           #53 restart
                                          14120  #suba(2)                             #54
                                          14121  #st([vPC])                           #55
                                          14122  #ld(hi('NEXTY'),Y)                   #56
                                          14123  #jmp(Y,'NEXTY')                      #57
                                          14124  #ld(-60/2)                           #58
                                          14125
                                          14126  # invalid packet
                                          14127  label('.sysLsi#30')
.sysLsi#30:   30b3 0002  ld   $02         14128  ld(2)                               #30
              30b4 c2bc  st   [$bc]       14129  st([0xBC])                          #31 reset even videoY
              30b5 00b8  ld   $b8         14130  ld(0xB8)                            #32
              30b6 c224  st   [$24]       14131  st([sysArgs+0])                     #33 reset videoY address
              30b7 0026  ld   $26         14132  ld(0x26)                            #34
              30b8 c225  st   [$25]       14133  st([sysArgs+1])                     #35 reset sys args address
              30b9 0116  ld   [$16]       14134  ld([vPC])                           #36 restart
              30ba a002  suba $02         14135  suba(2)                             #37
              30bb c216  st   [$16]       14136  st([vPC])                           #38
              30bc 0000  ld   $00         14137  ld(0)                               #39
              30bd c214  st   [$14]       14138  st([xoutMask])                      #40
              30be 1403  ld   $03,y       14139  ld(hi('REENTER'),Y)                 #41
              30bf e0cb  jmp  y,$cb       14140  jmp(Y,'REENTER')                    #42
              30c0 00e9  ld   $e9         14141  ld(-46/2)                           #43
                                          14142
                                          14143  # new packet
                                          14144  label('.sysLsi#39')
.sysLsi#39:   30c1 0002  ld   $02         14145  ld(2)                               #39
              30c2 c2bc  st   [$bc]       14146  st([0xBC])                          #40 reset even videoY
              30c3 00b8  ld   $b8         14147  ld(0xB8)                            #41
              30c4 c224  st   [$24]       14148  st([sysArgs+0])                     #42 reset videoY address
              30c5 0026  ld   $26         14149  ld(0x26)                            #43
              30c6 c225  st   [$25]       14150  st([sysArgs+1])                     #44 reset sys args address
              30c7 0116  ld   [$16]       14151  ld([vPC])                           #45 restart
              30c8 a002  suba $02         14152  suba(2)                             #46
              30c9 c216  st   [$16]       14153  st([vPC])                           #47
              30ca 0129  ld   [$29]       14154  ld([sysArgs+5])                     #48 hi address
              30cb 200f  anda $0f         14155  anda(0x0F)                          #49
              30cc c214  st   [$14]       14156  st([xoutMask])                      #50
              30cd 1403  ld   $03,y       14157  ld(hi('REENTER'),Y)                 #51
              30ce e0cb  jmp  y,$cb       14158  jmp(Y,'REENTER')                    #52
              30cf 00e4  ld   $e4         14159  ld(-56/2)                           #53
                                          14160
                                          14161  # execute
                                          14162  label('.sysLsi#32')
.sysLsi#32:   30d0 0128  ld   [$28]       14163  ld([sysArgs+4])                     #32 low execute address
              30d1 c21a  st   [$1a]       14164  st([vLR])                           #33
              30d2 a002  suba $02         14165  suba(2)                             #34
              30d3 c216  st   [$16]       14166  st([vPC])                           #35
              30d4 0129  ld   [$29]       14167  ld([sysArgs+5])                     #36 high execute address
              30d5 c217  st   [$17]       14168  st([vPC+1])                         #37
              30d6 c21b  st   [$1b]       14169  st([vLR+1])                         #38
              30d7 0000  ld   $00         14170  ld(0)                               #39
              30d8 c214  st   [$14]       14171  st([xoutMask])                      #40
              30d9 1403  ld   $03,y       14172  ld(hi('REENTER'),Y)                 #41
              30da e0cb  jmp  y,$cb       14173  jmp(Y,'REENTER')                    #42
              30db 00e9  ld   $e9         14174  ld(-46/2)                           #43
                                          14175
                                          14176
              30dc 0200  nop              14177  fillers(until=0xff)
              30dd 0200  nop
              30de 0200  nop
              * 35 times
              30ff 0200  nop              14178  align(0x100, size=0x100)
                                          14179
                                          14180  #-----------------------------------------------------------------------
                                          14181  #       More vCPU instruction implementations, (0x3100)
                                          14182  #-----------------------------------------------------------------------
                                          14183  #
                                          14184  # ABSVW implementation
                                          14185  label('absvw#13')
absvw#13:     3100 9001  adda $01,x       14186  adda(1,X)                       #13 address of var.hi
              3101 00fe  ld   $fe         14187  ld(min(0,maxTicks-34/2))        #14
              3102 8115  adda [$15]       14188  adda([vTicks])                  #15
              3103 e81e  blt  .absvw#18   14189  blt('.absvw#18')                #16
              3104 0500  ld   [x]         14190  ld([X])                         #17
              3105 e80a  blt  .absvw#20   14191  bmi('.absvw#20')                #18
              3106 1400  ld   $00,y       14192  ld(0,Y)                         #19
              3107 1403  ld   $03,y       14193  ld(hi('NEXTY'),Y)               #20
              3108 e000  jmp  y,$00       14194  jmp(Y,'NEXTY')                  #21
              3109 00f4  ld   $f4         14195  ld(-24/2)                       #22
                                          14196
                                          14197  label('.absvw#20')
.absvw#20:    310a 111d  ld   [$1d],x     14198  ld([vTmp],X)                    #20
              310b 0500  ld   [x]         14199  ld([X])                         #21
              310c 60ff  xora $ff         14200  xora(0xFF)                      #22
              310d 8001  adda $01         14201  adda(1)                         #23
              310e f017  beq  .absvw#26   14202  beq('.absvw#26')                #24
              310f c600  st   [x]         14203  st([X])                         #25
              3110 de00  st   [y,x++]     14204  st([Y,Xpp])                     #26
              3111 0500  ld   [x]         14205  ld([X])                         #27
              3112 60ff  xora $ff         14206  xora(255)                       #28
              3113 c600  st   [x]         14207  st([X])                         #29
              3114 1403  ld   $03,y       14208  ld(hi('NEXTY'),Y)               #30
              3115 e000  jmp  y,$00       14209  jmp(Y,'NEXTY')                  #31
              3116 00ef  ld   $ef         14210  ld(-34/2)                       #32
                                          14211
                                          14212  label('.absvw#26')
.absvw#26:    3117 de00  st   [y,x++]     14213  st([Y,Xpp])                     #26
              3118 0500  ld   [x]         14214  ld([X])                         #27
              3119 60ff  xora $ff         14215  xora(255)                       #28
              311a c600  st   [x]         14216  st([X])                         #29
              311b 1403  ld   $03,y       14217  ld(hi('NEXTY'),Y)               #30
              311c e000  jmp  y,$00       14218  jmp(Y,'NEXTY')                  #31
              311d 00ef  ld   $ef         14219  ld(-34/2)                       #32
                                          14220
                                          14221  label('.absvw#18')
.absvw#18:    311e 0022  ld   $22         14222  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              311f c202  st   [$02]       14223  st([vCpuSelect])                #19 restore PREFX2 instruction page
              3120 9401  adda $01,y       14224  adda(1,Y)                       #20 retry instruction
              3121 e000  jmp  y,$00       14225  jmp(Y,'NEXTY')                  #21
              3122 00f4  ld   $f4         14226  ld(-24/2)                       #22
                                          14227
                                          14228
                                          14229  # SCRLHR implementation
                                          14230  label('scrlhr#13')
scrlhr#13:    3123 c21d  st   [$1d]       14231  st([vTmp])                      #13 amount imm
              3124 1517  ld   [$17],y     14232  ld([vPC+1],Y)                   #14
              3125 de00  st   [y,x++]     14233  st([Y,Xpp])                     #15
              3126 00f8  ld   $f8         14234  ld(min(0,maxTicks-46/2))        #16
              3127 8115  adda [$15]       14235  adda([vTicks])                  #17
              3128 e842  blt  .scrlhr#20  14236  blt('.scrlhr#20')               #18 not enough time left, so retry
              3129 0d00  ld   [y,x]       14237  ld([Y,X])                       #19
              312a c22a  st   [$2a]       14238  st([sysArgs+6])                 #20 count imm
              312b de00  st   [y,x++]     14239  st([Y,Xpp])                     #21
              312c 0d00  ld   [y,x]       14240  ld([Y,X])                       #22 start imm
              312d 8200  adda ac          14241  adda(AC)                        #23
              312e 8001  adda $01         14242  adda(1)                         #24
              312f d22b  st   [$2b],x     14243  st([sysArgs+7],X)               #25 start_vtbl.lo
              3130 1401  ld   $01,y       14244  ld(1,Y)                         #26
              3131 011d  ld   [$1d]       14245  ld([vTmp])                      #27
              3132 8d00  adda [y,x]       14246  adda([Y,X])                     #28
              3133 ce00  st   [y,x]       14247  st([Y,X])                       #29
              3134 012a  ld   [$2a]       14248  ld([sysArgs+6])                 #30
              3135 8200  adda ac          14249  adda(AC)                        #31
              3136 912b  adda [$2b],x     14250  adda([sysArgs+7],X)             #32 end_vtbl.lo
              3137 011d  ld   [$1d]       14251  ld([vTmp])                      #33
              3138 60ff  xora $ff         14252  xora(0xFF)                      #34
              3139 8001  adda $01         14253  adda(1)                         #35
              313a 8d00  adda [y,x]       14254  adda([Y,X])                     #36
              313b ce00  st   [y,x]       14255  st([Y,X])                       #37
              313c 0116  ld   [$16]       14256  ld([vPC])                       #38
              313d 8002  adda $02         14257  adda(2)                         #39
              313e c216  st   [$16]       14258  st([vPC])                       #40
              313f 1403  ld   $03,y       14259  ld(hi('REENTER'),Y)             #41
              3140 e0cb  jmp  y,$cb       14260  jmp(Y,'REENTER')                #42
              3141 00e9  ld   $e9         14261  ld(-46/2)                       #43
                                          14262
                                          14263  label('.scrlhr#20')
.scrlhr#20:   3142 0116  ld   [$16]       14264  ld([vPC])                       #20
              3143 a002  suba $02         14265  suba(2)                         #21
              3144 c216  st   [$16]       14266  st([vPC])                       #22
              3145 1403  ld   $03,y       14267  ld(hi('REENTER'),Y)             #23
              3146 e0cb  jmp  y,$cb       14268  jmp(Y,'REENTER')                #24
              3147 00f2  ld   $f2         14269  ld(-28/2)                       #25
                                          14270
                                          14271
                                          14272  # IMIDI implementation
                                          14273  label('imidi#13')
imidi#13:     3148 1400  ld   $00,y       14274  ld(0,Y)                         #13
              3149 00fb  ld   $fb         14275  ld(min(0,maxTicks-40/2))        #14
              314a 8115  adda [$15]       14276  adda([vTicks])                  #15
              314b e869  blt  .imidi#18   14277  blt('.imidi#18')                #16 not enough time left, so retry
              314c 0d00  ld   [y,x]       14278  ld([Y,X])                       #17 midiStream.lo
              314d de00  st   [y,x++]     14279  st([Y,Xpp])                     #18
              314e c218  st   [$18]       14280  st([vAC])                       #19
              314f 0d00  ld   [y,x]       14281  ld([Y,X])                       #20 midiStream.hi
              3150 c219  st   [$19]       14282  st([vAC+1])                     #21
              3151 4118  ora  [$18]       14283  ora([vAC])                      #22
              3152 ec59  bne  .imidi#25   14284  bne('.imidi#25')                #23
              3153 0116  ld   [$16]       14285  ld([vPC])                       #24 midiStream = 0
              3154 8004  adda $04         14286  adda(4)                         #25
              3155 c216  st   [$16]       14287  st([vPC])                       #26 skip PMIDI, (next instruction)
              3156 1403  ld   $03,y       14288  ld(hi('REENTER'),Y)             #27
              3157 e0cb  jmp  y,$cb       14289  jmp(Y,'REENTER')                #28
              3158 00f0  ld   $f0         14290  ld(-32/2)                       #29
                                          14291
                                          14292  label('.imidi#25')
.imidi#25:    3159 0005  ld   $05         14293  ld(5)                           #25
              315a c22c  st   [$2c]       14294  st([soundTimer])                #26 pump soundTimer, (allows for 5 VBlanks of latency before audio disruption)
              315b 112b  ld   [$2b],x     14295  ld([sysArgs+7],X)               #27 midiDelay.lo
              315c 0500  ld   [x]         14296  ld([X])                         #28
              315d a001  suba $01         14297  suba(1)                         #29
              315e f866  ble  .imidi#32   14298  ble('.imidi#32')                #30
              315f c600  st   [x]         14299  st([X])                         #31
              3160 0116  ld   [$16]       14300  ld([vPC])                       #32 midiDelay.lo > 0
              3161 8004  adda $04         14301  adda(4)                         #33
              3162 c216  st   [$16]       14302  st([vPC])                       #34 skip PMIDI, (next instruction)
              3163 1403  ld   $03,y       14303  ld(hi('REENTER'),Y)             #35
              3164 e0cb  jmp  y,$cb       14304  jmp(Y,'REENTER')                #36
              3165 00ec  ld   $ec         14305  ld(-40/2)                       #37
                                          14306
                                          14307  label('.imidi#32')
.imidi#32:    3166 1403  ld   $03,y       14308  ld(hi('NEXTY'),Y)               #32 do PMIDI, (next instruction)
              3167 e000  jmp  y,$00       14309  jmp(Y,'NEXTY')                  #33
              3168 00ee  ld   $ee         14310  ld(-36/2)                       #34
                                          14311
                                          14312  label('.imidi#18')
.imidi#18:    3169 0021  ld   $21         14313  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              316a c202  st   [$02]       14314  st([vCpuSelect])                #19 restore PREFX3 instruction page
              316b 9401  adda $01,y       14315  adda(1,Y)                       #20 retry instruction
              316c e000  jmp  y,$00       14316  jmp(Y,'NEXTY')                  #21
              316d 00f4  ld   $f4         14317  ld(-24/2)                       #22
                                          14318
                                          14319
                                          14320  # PMIDI implementation
                                          14321  label('pmidi#13')
pmidi#13:     316e 1400  ld   $00,y       14322  ld(0,Y)                         #13
              316f 00e3  ld   $e3         14323  ld(min(0,maxTicks-88/2))        #14
              3170 8115  adda [$15]       14324  adda([vTicks])                  #15
              3171 e8ad  blt  .pmidi#18   14325  blt('.pmidi#18')                #16 not enough time left, so retry
              3172 1519  ld   [$19],y     14326  ld([vAC+1],Y)                   #17
              3173 1118  ld   [$18],x     14327  ld([vAC],X)                     #18
              3174 0118  ld   [$18]       14328  ld([vAC])                       #19
              3175 8001  adda $01         14329  adda(1)                         #20
              3176 c218  st   [$18]       14330  st([vAC])                       #21
              3177 f07a  beq  $317a       14331  beq(pc()+3)                     #22
              3178 fc7b  bra  $317b       14332  bra(pc()+3)                     #23
              3179 0000  ld   $00         14333  ld(0)                           #24
              317a 0001  ld   $01         14334  ld(1)                           #24 (!)
              317b 8119  adda [$19]       14335  adda([vAC+1])                   #25
              317c c219  st   [$19]       14336  st([vAC+1])                     #26 midiStream++
              317d 0d00  ld   [y,x]       14337  ld([Y,X])                       #27
              317e c2c0  st   [$c0]       14338  st([0xC0])                      #28 midiCommand.lo
              317f 20f0  anda $f0         14339  anda(0xF0)                      #29
              3180 6090  xora $90         14340  xora(0x90)                      #30
              3181 ecb2  bne  .pmidi#33   14341  bne('.pmidi#33')                #31 end note
              3182 1519  ld   [$19],y     14342  ld([vAC+1],Y)                   #32
              3183 1118  ld   [$18],x     14343  ld([vAC],X)                     #33
              3184 0118  ld   [$18]       14344  ld([vAC])                       #34
              3185 8001  adda $01         14345  adda(1)                         #35
              3186 c218  st   [$18]       14346  st([vAC])                       #36
              3187 f08a  beq  $318a       14347  beq(pc()+3)                     #37
              3188 fc8b  bra  $318b       14348  bra(pc()+3)                     #38
              3189 0000  ld   $00         14349  ld(0)                           #39
              318a 0001  ld   $01         14350  ld(1)                           #39 (!)
              318b 8119  adda [$19]       14351  adda([vAC+1])                   #40
              318c c219  st   [$19]       14352  st([vAC+1])                     #41 midiStream++
              318d 0031  ld   $31         14353  ld(hi('pmidi#13'))              #42
              318e c2c1  st   [$c1]       14354  st([0xC1])                      #43
              318f 0098  ld   $98         14355  ld('.pmidi#59_0')               #44 low byte of low midi return address
              3190 c21d  st   [$1d]       14356  st([vTmp])                      #45
              3191 0d00  ld   [y,x]       14357  ld([Y,X])                       #46
              3192 c2c2  st   [$c2]       14358  st([0xC2])                      #47 note
              3193 a00b  suba $0b         14359  suba(11)                        #48 note -= 11
              3194 8200  adda ac          14360  adda(AC)                        #49 note*2
              3195 1409  ld   $09,y       14361  ld(hi('noteTrampoline'),Y)      #50
              3196 e0c0  jmp  y,$c0       14362  jmp(Y,'noteTrampoline')         #51
              3197 c2c3  st   [$c3]       14363  st([0xC3])                      #52 index, (low freq byte)
                                          14364  label('.pmidi#59_0')
.pmidi#59_0:  3198 c2c2  st   [$c2]       14365  st([0xC2])                      #59 freq.lo
              3199 009f  ld   $9f         14366  ld('.pmidi#72')                 #60
              319a c21d  st   [$1d]       14367  st([vTmp])                      #61 low byte of high midi return address
              319b 1409  ld   $09,y       14368  ld(hi('noteTrampoline'),Y)      #62
              319c 01c3  ld   [$c3]       14369  ld([0xC3])                      #63
              319d e0c0  jmp  y,$c0       14370  jmp(Y,'noteTrampoline')         #64
              319e 8001  adda $01         14371  adda(1)                         #65 index + 1, (high freq byte)
                                          14372  label('.pmidi#72')
.pmidi#72:    319f c2c3  st   [$c3]       14373  st([0xC3])                      #72 freq.hi
              31a0 01c0  ld   [$c0]       14374  ld([0xC0])                      #73 midiCommand.lo
              31a1 2003  anda $03         14375  anda(3)                         #74
              31a2 9401  adda $01,y       14376  adda(1,Y)                       #75 chan.hi
              31a3 10fc  ld   $fc,x       14377  ld(0xFC,X)                      #76 chan.lo
              31a4 01c2  ld   [$c2]       14378  ld([0xC2])                      #77
              31a5 de00  st   [y,x++]     14379  st([Y,Xpp])                     #78
              31a6 01c3  ld   [$c3]       14380  ld([0xC3])                      #79
              31a7 ce00  st   [y,x]       14381  st([Y,X])                       #80 [chan] = freq
              31a8 0021  ld   $21         14382  ld(hi('PREFX3_PAGE'))           #81 ENTER is at $(n-1)ff, where n = instruction page
              31a9 c202  st   [$02]       14383  st([vCpuSelect])                #82 restore PREFX3 instruction page
              31aa 9401  adda $01,y       14384  adda(1,Y)                       #83 restart instruction
              31ab e0cb  jmp  y,$cb       14385  jmp(Y,'REENTER')                #84
              31ac 00d4  ld   $d4         14386  ld(-88/2)                       #85
                                          14387
                                          14388  label('.pmidi#18')
.pmidi#18:    31ad 0021  ld   $21         14389  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              31ae c202  st   [$02]       14390  st([vCpuSelect])                #19 restore PREFX3 instruction page
              31af 9401  adda $01,y       14391  adda(1,Y)                       #20 retry instruction
              31b0 e000  jmp  y,$00       14392  jmp(Y,'NEXTY')                  #21
              31b1 00f4  ld   $f4         14393  ld(-24/2)                       #22
                                          14394
                                          14395  # end note
                                          14396  label('.pmidi#33')
.pmidi#33:    31b2 01c0  ld   [$c0]       14397  ld([0xC0])                      #33 midiCommand.lo
              31b3 20f0  anda $f0         14398  anda(0xF0)                      #34
              31b4 6080  xora $80         14399  xora(0x80)                      #35
              31b5 ecc3  bne  .pmidi#38   14400  bne('.pmidi#38')                #36 new segment
              31b6 01c0  ld   [$c0]       14401  ld([0xC0])                      #37 midiCommand.lo
              31b7 2003  anda $03         14402  anda(3)                         #38
              31b8 9401  adda $01,y       14403  adda(1,Y)                       #39 chan.hi
              31b9 10fc  ld   $fc,x       14404  ld(0xFC,X)                      #40 chan.lo
              31ba dc00  st   $00,[y,x++] 14405  st(0,[Y,Xpp])                   #41
              31bb dc00  st   $00,[y,x++] 14406  st(0,[Y,Xpp])                   #42 [chan] = freq
              31bc dc00  st   $00,[y,x++] 14407  st(0,[Y,Xpp])                   #43
              31bd cc00  st   $00,[y,x]   14408  st(0,[Y,X])                     #44
              31be 0021  ld   $21         14409  ld(hi('PREFX3_PAGE'))           #45 ENTER is at $(n-1)ff, where n = instruction page
              31bf c202  st   [$02]       14410  st([vCpuSelect])                #46 restore PREFX3 instruction page
              31c0 9401  adda $01,y       14411  adda(1,Y)                       #47 restart instruction
              31c1 e0cb  jmp  y,$cb       14412  jmp(Y,'REENTER')                #48
              31c2 00e6  ld   $e6         14413  ld(-52/2)                       #49
                                          14414
                                          14415  # new segment
                                          14416  label('.pmidi#38')
.pmidi#38:    31c3 01c0  ld   [$c0]       14417  ld([0xC0])                      #38 midiCommand.lo
              31c4 20f0  anda $f0         14418  anda(0xF0)                      #39
              31c5 60d0  xora $d0         14419  xora(0xD0)                      #40
              31c6 ecdf  bne  .pmidi#43   14420  bne('.pmidi#43')                #41 new delay
              31c7 1519  ld   [$19],y     14421  ld([vAC+1],Y)                   #42
              31c8 1118  ld   [$18],x     14422  ld([vAC],X)                     #43
              31c9 0d00  ld   [y,x]       14423  ld([Y,X])                       #44 peek(midiStream)
              31ca c218  st   [$18]       14424  st([vAC])                       #45 newStream.lo
              31cb de00  st   [y,x++]     14425  st([Y,Xpp])                     #46
              31cc 0d00  ld   [y,x]       14426  ld([Y,X])                       #47 peek(midiStream + 1)
              31cd c219  st   [$19]       14427  st([vAC+1])                     #48 newStream.hi
              31ce 1400  ld   $00,y       14428  ld(0,Y)                         #49
              31cf 112a  ld   [$2a],x     14429  ld([sysArgs+6],X)               #50 midiStream.lo
              31d0 0118  ld   [$18]       14430  ld([vAC])                       #51
              31d1 de00  st   [y,x++]     14431  st([Y,Xpp])                     #52
              31d2 0119  ld   [$19]       14432  ld([vAC+1])                     #53
              31d3 ce00  st   [y,x]       14433  st([Y,X])                       #54 midiStream = vAC
              31d4 0118  ld   [$18]       14434  ld([vAC])                       #55
              31d5 4119  ora  [$19]       14435  ora([vAC+1])                    #56
              31d6 ecda  bne  .pmidi#59_1 14436  bne('.pmidi#59_1')              #57 continue
              31d7 1403  ld   $03,y       14437  ld(hi('NEXTY'),Y)               #58 finished
              31d8 e000  jmp  y,$00       14438  jmp(Y,'NEXTY')                  #59
              31d9 00e1  ld   $e1         14439  ld(-62/2)                       #60
                                          14440
                                          14441  label('.pmidi#59_1')
.pmidi#59_1:  31da 0021  ld   $21         14442  ld(hi('PREFX3_PAGE'))           #59 ENTER is at $(n-1)ff, where n = instruction page
              31db c202  st   [$02]       14443  st([vCpuSelect])                #60 restore PREFX3 instruction page
              31dc 9401  adda $01,y       14444  adda(1,Y)                       #61 restart instruction
              31dd e0cb  jmp  y,$cb       14445  jmp(Y,'REENTER')                #62
              31de 00df  ld   $df         14446  ld(-66/2)                       #63
                                          14447
                                          14448  # new delay
                                          14449  label('.pmidi#43')
.pmidi#43:    31df 1400  ld   $00,y       14450  ld(0,Y)                         #43
              31e0 112a  ld   [$2a],x     14451  ld([sysArgs+6],X)               #44 midiStream.lo
              31e1 0118  ld   [$18]       14452  ld([vAC])                       #45
              31e2 de00  st   [y,x++]     14453  st([Y,Xpp])                     #46
              31e3 0119  ld   [$19]       14454  ld([vAC+1])                     #47
              31e4 ce00  st   [y,x]       14455  st([Y,X])                       #48 midiStream = vAC
              31e5 112b  ld   [$2b],x     14456  ld([sysArgs+7],X)               #49 midiDelay.lo
              31e6 01c0  ld   [$c0]       14457  ld([0xC0])                      #50 midiCommand.lo, (delay)
              31e7 207f  anda $7f         14458  anda(0x7F)                      #51
              31e8 c600  st   [x]         14459  st([X])                         #52
              31e9 1403  ld   $03,y       14460  ld(hi('REENTER'),Y)             #53
              31ea e0cb  jmp  y,$cb       14461  jmp(Y,'REENTER')                #54
              31eb 00e3  ld   $e3         14462  ld(-58/2)                       #55
                                          14463
                                          14464
              31ec 0200  nop              14465  fillers(until=0xff)
              31ed 0200  nop
              31ee 0200  nop
              * 19 times
              31ff 0200  nop              14466  align(0x100, size=0x100)
                                          14467
                                          14468  #-----------------------------------------------------------------------
                                          14469  #  More vCPU instruction implementations, (0x3200)
                                          14470  #-----------------------------------------------------------------------
                                          14471  #
                                          14472  # MOVL implementation, (lb3361)
                                          14473  label('movl#13')
movl#13:      3200 9001  adda $01,x       14474  adda(1,X)                       #13
              3201 00fb  ld   $fb         14475  ld(min(0,maxTicks-40/2))        #14
              3202 8115  adda [$15]       14476  adda([vTicks])                  #15
              3203 e81a  blt  movl#18     14477  blt('movl#18')                  #16
              3204 1400  ld   $00,y       14478  ld(0,Y)                         #17
              3205 0d00  ld   [y,x]       14479  ld([Y,X])                       #18
              3206 de00  st   [y,x++]     14480  st([Y,Xpp])                     #19
              3207 c2c8  st   [$c8]       14481  st([vTmpL])                     #20
              3208 0d00  ld   [y,x]       14482  ld([Y,X])                       #21
              3209 de00  st   [y,x++]     14483  st([Y,Xpp])                     #22
              320a c2c9  st   [$c9]       14484  st([vTmpL+1])                   #23
              320b 0d00  ld   [y,x]       14485  ld([Y,X])                       #24
              320c c2ca  st   [$ca]       14486  st([vTmpL+2])                   #25
              320d 112a  ld   [$2a],x     14487  ld([sysArgs+6],X)               #26
              320e 0d00  ld   [y,x]       14488  ld([Y,X])                       #27
              320f 112b  ld   [$2b],x     14489  ld([sysArgs+7],X)               #28
              3210 de00  st   [y,x++]     14490  st([Y,Xpp])                     #29
              3211 01c8  ld   [$c8]       14491  ld([vTmpL])                     #30
              3212 de00  st   [y,x++]     14492  st([Y,Xpp])                     #31
              3213 01c9  ld   [$c9]       14493  ld([vTmpL+1])                   #32
              3214 de00  st   [y,x++]     14494  st([Y,Xpp])                     #33
              3215 01ca  ld   [$ca]       14495  ld([vTmpL+2])                   #34
              3216 de00  st   [y,x++]     14496  st([Y,Xpp])                     #35
              3217 1403  ld   $03,y       14497  ld(hi('NEXTY'),Y)               #36
              3218 e000  jmp  y,$00       14498  jmp(Y,'NEXTY')                  #37
              3219 00ec  ld   $ec         14499  ld(-40/2)                       #38
                                          14500  label('movl#18')
movl#18:      321a 0021  ld   $21         14501  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              321b c202  st   [$02]       14502  st([vCpuSelect])                #19 restore PREFX3 instruction page
              321c 9401  adda $01,y       14503  adda(1,Y)                       #20 retry instruction
              321d e000  jmp  y,$00       14504  jmp(Y,'NEXTY')                  #21
              321e 00f4  ld   $f4         14505  ld(-24/2)                       #22
                                          14506
                                          14507
                                          14508  # MOVF implementation, (lb3361)
                                          14509  label('movf#13')
movf#13:      321f 9001  adda $01,x       14510  adda(1,X)                       #13
              3220 00f8  ld   $f8         14511  ld(min(0,maxTicks-46/2))        #14
              3221 8115  adda [$15]       14512  adda([vTicks])                  #15
              3222 e81a  blt  movl#18     14513  blt('movl#18')                  #16
              3223 1400  ld   $00,y       14514  ld(0,Y)                         #17
              3224 0d00  ld   [y,x]       14515  ld([Y,X])                       #18
              3225 de00  st   [y,x++]     14516  st([Y,Xpp])                     #19
              3226 c2c8  st   [$c8]       14517  st([vTmpL])                     #20
              3227 0d00  ld   [y,x]       14518  ld([Y,X])                       #21
              3228 de00  st   [y,x++]     14519  st([Y,Xpp])                     #22
              3229 c2c9  st   [$c9]       14520  st([vTmpL+1])                   #23
              322a 0d00  ld   [y,x]       14521  ld([Y,X])                       #24
              322b de00  st   [y,x++]     14522  st([Y,Xpp])                     #25
              322c c2ca  st   [$ca]       14523  st([vTmpL+2])                   #26
              322d 0d00  ld   [y,x]       14524  ld([Y,X])                       #27
              322e c2cb  st   [$cb]       14525  st([vTmpL+3])                   #28
              322f 112a  ld   [$2a],x     14526  ld([sysArgs+6],X)               #29
              3230 0d00  ld   [y,x]       14527  ld([Y,X])                       #30
              3231 112b  ld   [$2b],x     14528  ld([sysArgs+7],X)               #31
              3232 de00  st   [y,x++]     14529  st([Y,Xpp])                     #32
              3233 01c8  ld   [$c8]       14530  ld([vTmpL])                     #33
              3234 de00  st   [y,x++]     14531  st([Y,Xpp])                     #34
              3235 01c9  ld   [$c9]       14532  ld([vTmpL+1])                   #35
              3236 de00  st   [y,x++]     14533  st([Y,Xpp])                     #36
              3237 01ca  ld   [$ca]       14534  ld([vTmpL+2])                   #37
              3238 de00  st   [y,x++]     14535  st([Y,Xpp])                     #38
              3239 01cb  ld   [$cb]       14536  ld([vTmpL+3])                   #39
              323a de00  st   [y,x++]     14537  st([Y,Xpp])                     #40
              323b 0200  nop              14538  nop()                           #41
              323c 1403  ld   $03,y       14539  ld(hi('NEXTY'),Y)               #42
              323d e000  jmp  y,$00       14540  jmp(Y,'NEXTY')                  #43
              323e 00e9  ld   $e9         14541  ld(-46/2)                       #44
                                          14542
                                          14543
                                          14544  # ADDLP implementation, (lb3361)
                                          14545  label('addlp#13')
addlp#13:     323f 80ee  adda $ee         14546  adda(min(0,maxTicks-66/2))      #13
              3240 e87a  blt  addlp#16    14547  blt('addlp#16')                 #14
              3241 1519  ld   [$19],y     14548  ld([vAC+1],Y)                   #15
              3242 1118  ld   [$18],x     14549  ld([vAC],X)                     #16
              3243 01c4  ld   [$c4]       14550  ld([vLAC])                      #17 lac0
              3244 8d00  adda [y,x]       14551  adda([Y,X])                     #18 +arg0
              3245 c2c4  st   [$c4]       14552  st([vLAC])                      #19
              3246 e84a  blt  addlp#22    14553  bmi('addlp#22')                 #20
              3247 ad00  suba [y,x]       14554  suba([Y,X])                     #21 reconstruct lac0
              3248 fc4c  bra  addlp#24    14555  bra('addlp#24')                 #22
              3249 4d00  ora  [y,x]       14556  ora([Y,X])                      #23
                                          14557  label('addlp#22')
addlp#22:     324a 2d00  anda [y,x]       14558  anda([Y,X])                     #22
              324b 0200  nop              14559  nop()                           #23
                                          14560  label('addlp#24')
addlp#24:     324c 3080  anda $80,x       14561  anda(0x80,X)                    #24
              324d 0500  ld   [x]         14562  ld([X])                         #25
              324e c21d  st   [$1d]       14563  st([vTmp])                      #26 save carry
              324f 0118  ld   [$18]       14564  ld([vAC])                       #27
              3250 9001  adda $01,x       14565  adda(1,X)                       #28
              3251 01c5  ld   [$c5]       14566  ld([vLAC+1])                    #29 lac1
              3252 811d  adda [$1d]       14567  adda([vTmp])                    #30 +carry
              3253 8d00  adda [y,x]       14568  adda([Y,X])                     #31 +arg1
              3254 c2c5  st   [$c5]       14569  st([vLAC+1])                    #32
              3255 e85a  blt  addlp#35    14570  bmi('addlp#35')                 #33
              3256 ad00  suba [y,x]       14571  suba([Y,X])                     #34
              3257 a11d  suba [$1d]       14572  suba([vTmp])                    #35 reconstruct lac1
              3258 fc5d  bra  addlp#38    14573  bra('addlp#38')                 #36
              3259 4d00  ora  [y,x]       14574  ora([Y,X])                      #37
                                          14575  label('addlp#35')
addlp#35:     325a a11d  suba [$1d]       14576  suba([vTmp])                    #35
              325b 2d00  anda [y,x]       14577  anda([Y,X])                     #36
              325c 0200  nop              14578  nop()                           #37
                                          14579  label('addlp#38')
addlp#38:     325d 3080  anda $80,x       14580  anda(0x80,X)                    #38
              325e 0500  ld   [x]         14581  ld([X])                         #39
              325f c21d  st   [$1d]       14582  st([vTmp])                      #40
              3260 0118  ld   [$18]       14583  ld([vAC])                       #41
              3261 9002  adda $02,x       14584  adda(2,X)                       #42
              3262 01c6  ld   [$c6]       14585  ld([vLAC+2])                    #43 lac2
              3263 811d  adda [$1d]       14586  adda([vTmp])                    #44 +carry
              3264 8d00  adda [y,x]       14587  adda([Y,X])                     #45 +arg2
              3265 c2c6  st   [$c6]       14588  st([vLAC+2])                    #46
              3266 e86b  blt  addlp#49    14589  bmi('addlp#49')                 #47
              3267 ad00  suba [y,x]       14590  suba([Y,X])                     #48
              3268 a11d  suba [$1d]       14591  suba([vTmp])                    #49 reconstruct lac2
              3269 fc6e  bra  addlp#52    14592  bra('addlp#52')                 #50
              326a 4d00  ora  [y,x]       14593  ora([Y,X])                      #51
                                          14594  label('addlp#49')
addlp#49:     326b a11d  suba [$1d]       14595  suba([vTmp])                    #49
              326c 2d00  anda [y,x]       14596  anda([Y,X])                     #50
              326d 0200  nop              14597  nop()                           #51
                                          14598  label('addlp#52')
addlp#52:     326e 3080  anda $80,x       14599  anda(0x80,X)                    #52
              326f 0500  ld   [x]         14600  ld([X])                         #53
              3270 c21d  st   [$1d]       14601  st([vTmp])                      #54
              3271 0118  ld   [$18]       14602  ld([vAC])                       #55
              3272 9003  adda $03,x       14603  adda(3,X)                       #56
              3273 01c7  ld   [$c7]       14604  ld([vLAC+3])                    #57 lac3
              3274 811d  adda [$1d]       14605  adda([vTmp])                    #58 +carry
              3275 8d00  adda [y,x]       14606  adda([Y,X])                     #59 +arg3
              3276 c2c7  st   [$c7]       14607  st([vLAC+3])                    #60
              3277 1403  ld   $03,y       14608  ld(hi('REENTER'),Y)             #61
              3278 e0cb  jmp  y,$cb       14609  jmp(Y,'REENTER')                #62
              3279 00df  ld   $df         14610  ld(-66/2)                       #63
                                          14611  label('addlp#16')
addlp#16:     327a 0023  ld   $23         14612  ld(hi('PREFX1_PAGE'))           #16 restart
              327b c202  st   [$02]       14613  st([vCpuSelect])                #17
              327c 9401  adda $01,y       14614  adda(1,Y)                       #18
              327d e000  jmp  y,$00       14615  jmp(Y,'NEXTY')                  #19
              327e 00f5  ld   $f5         14616  ld(-22/2)                       #20
                                          14617
                                          14618
                                          14619  # SUBLP implementation, (lb3361)
                                          14620  label('sublp#13')
sublp#13:     327f 80f1  adda $f1         14621  adda(min(0,maxTicks-60/2))      #13
              3280 e87a  blt  addlp#16    14622  blt('addlp#16')                 #14
              3281 1519  ld   [$19],y     14623  ld([vAC+1],Y)                   #15
              3282 1118  ld   [$18],x     14624  ld([vAC],X)                     #16
              3283 01c4  ld   [$c4]       14625  ld([vLAC])                      #17 lac0
              3284 e889  blt  sublp#20    14626  bmi('sublp#20')                 #18
              3285 ad00  suba [y,x]       14627  suba([Y,X])                     #19 -arg0
              3286 c2c4  st   [$c4]       14628  st([vLAC])                      #20
              3287 fc8c  bra  sublp#23    14629  bra('sublp#23')                 #21
              3288 4d00  ora  [y,x]       14630  ora([Y,X])                      #22
                                          14631  label('sublp#20')
sublp#20:     3289 c2c4  st   [$c4]       14632  st([vLAC])                      #20
              328a 2d00  anda [y,x]       14633  anda([Y,X])                     #21
              328b 0200  nop              14634  nop()                           #22
                                          14635  label('sublp#23')
sublp#23:     328c 3080  anda $80,x       14636  anda(0x80,X)                    #23
              328d 0500  ld   [x]         14637  ld([X])                         #24
              328e c21d  st   [$1d]       14638  st([vTmp])                      #25 borrow
              328f 0118  ld   [$18]       14639  ld([vAC])                       #26
              3290 9001  adda $01,x       14640  adda(1,X)                       #27
              3291 01c5  ld   [$c5]       14641  ld([vLAC+1])                    #28 lac1
              3292 e898  blt  sublp#31    14642  bmi('sublp#31')                 #29
              3293 ad00  suba [y,x]       14643  suba([Y,X])                     #30 -arg1
              3294 a11d  suba [$1d]       14644  suba([vTmp])                    #31 -borrow
              3295 c2c5  st   [$c5]       14645  st([vLAC+1])                    #32
              3296 fc9c  bra  sublp#35    14646  bra('sublp#35')                 #33
              3297 4d00  ora  [y,x]       14647  ora([Y,X])                      #34
                                          14648  label('sublp#31')
sublp#31:     3298 a11d  suba [$1d]       14649  suba([vTmp])                    #31
              3299 c2c5  st   [$c5]       14650  st([vLAC+1])                    #32
              329a 2d00  anda [y,x]       14651  anda([Y,X])                     #33
              329b 0200  nop              14652  nop()                           #34
                                          14653  label('sublp#35')
sublp#35:     329c 3080  anda $80,x       14654  anda(0x80,X)                    #35
              329d 0500  ld   [x]         14655  ld([X])                         #36
              329e c21d  st   [$1d]       14656  st([vTmp])                      #37
              329f 0118  ld   [$18]       14657  ld([vAC])                       #38
              32a0 9002  adda $02,x       14658  adda(2,X)                       #39
              32a1 01c6  ld   [$c6]       14659  ld([vLAC+2])                    #40 lac2
              32a2 e8a8  blt  sublp#43    14660  bmi('sublp#43')                 #41
              32a3 ad00  suba [y,x]       14661  suba([Y,X])                     #42 -arg2
              32a4 a11d  suba [$1d]       14662  suba([vTmp])                    #43 -borrow
              32a5 c2c6  st   [$c6]       14663  st([vLAC+2])                    #44
              32a6 fcac  bra  sublp#47    14664  bra('sublp#47')                 #45
              32a7 4d00  ora  [y,x]       14665  ora([Y,X])                      #46
                                          14666  label('sublp#43')
sublp#43:     32a8 a11d  suba [$1d]       14667  suba([vTmp])                    #43
              32a9 c2c6  st   [$c6]       14668  st([vLAC+2])                    #44
              32aa 2d00  anda [y,x]       14669  anda([Y,X])                     #45
              32ab 0200  nop              14670  nop()                           #46
                                          14671  label('sublp#47')
sublp#47:     32ac 3080  anda $80,x       14672  anda(0x80,X)                    #47
              32ad 0500  ld   [x]         14673  ld([X])                         #48
              32ae c21d  st   [$1d]       14674  st([vTmp])                      #49
              32af 0118  ld   [$18]       14675  ld([vAC])                       #50
              32b0 9003  adda $03,x       14676  adda(3,X)                       #51
              32b1 01c7  ld   [$c7]       14677  ld([vLAC+3])                    #52 lac3
              32b2 ad00  suba [y,x]       14678  suba([Y,X])                     #53 -arg3
              32b3 a11d  suba [$1d]       14679  suba([vTmp])                    #54 -borrow
              32b4 c2c7  st   [$c7]       14680  st([vLAC+3])                    #55
              32b5 1403  ld   $03,y       14681  ld(hi('NEXTY'),Y)               #56
              32b6 e000  jmp  y,$00       14682  jmp(Y,'NEXTY')                  #57
              32b7 00e2  ld   $e2         14683  ld(-60/2)                       #58
                                          14684
                                          14685
                                          14686  # ANDLP implementation, (lb3361)
                                          14687  label('andlp#13')
andlp#13:     32b8 80fa  adda $fa         14688  adda(min(0,maxTicks-42/2))      #13
              32b9 e87a  blt  addlp#16    14689  blt('addlp#16')                 #14
              32ba 1519  ld   [$19],y     14690  ld([vAC+1],Y)                   #15
              32bb 1118  ld   [$18],x     14691  ld([vAC],X)                     #16
              32bc 0d00  ld   [y,x]       14692  ld([Y,X])                       #17
              32bd de00  st   [y,x++]     14693  st([Y,Xpp])                     #18
              32be 21c4  anda [$c4]       14694  anda([vLAC+0])                  #19
              32bf c2c4  st   [$c4]       14695  st([vLAC+0])                    #20
              32c0 0d00  ld   [y,x]       14696  ld([Y,X])                       #21
              32c1 de00  st   [y,x++]     14697  st([Y,Xpp])                     #22
              32c2 21c5  anda [$c5]       14698  anda([vLAC+1])                  #23
              32c3 c2c5  st   [$c5]       14699  st([vLAC+1])                    #24
              32c4 0d00  ld   [y,x]       14700  ld([Y,X])                       #25
              32c5 de00  st   [y,x++]     14701  st([Y,Xpp])                     #26
              32c6 21c6  anda [$c6]       14702  anda([vLAC+2])                  #27
              32c7 c2c6  st   [$c6]       14703  st([vLAC+2])                    #28
              32c8 0d00  ld   [y,x]       14704  ld([Y,X])                       #29
              32c9 21c7  anda [$c7]       14705  anda([vLAC+3])                  #30
              32ca 0200  nop              14706  nop()                           #31
                                          14707  label('andlp#32')
andlp#32:     32cb c2c7  st   [$c7]       14708  st([vLAC+3])                    #32
              32cc c219  st   [$19]       14709  st([vAC+1])                     #33
              32cd 01c4  ld   [$c4]       14710  ld([vLAC+0])                    #34
              32ce 41c5  ora  [$c5]       14711  ora([vLAC+1])                   #35
              32cf 41c6  ora  [$c6]       14712  ora([vLAC+2])                   #36
              32d0 c218  st   [$18]       14713  st([vAC])                       #37
              32d1 1403  ld   $03,y       14714  ld(hi('NEXTY'),Y)               #38
              32d2 e000  jmp  y,$00       14715  jmp(Y,'NEXTY')                  #39
              32d3 00eb  ld   $eb         14716  ld(-42/2)                       #40
                                          14717
                                          14718
                                          14719  # ORLP implementation, (lb3361)
                                          14720  label('orlp#13')
orlp#13:      32d4 80fa  adda $fa         14721  adda(min(0,maxTicks-42/2))      #13
              32d5 e87a  blt  addlp#16    14722  blt('addlp#16')                 #14
              32d6 1519  ld   [$19],y     14723  ld([vAC+1],Y)                   #15
              32d7 1118  ld   [$18],x     14724  ld([vAC],X)                     #16
              32d8 0d00  ld   [y,x]       14725  ld([Y,X])                       #17
              32d9 de00  st   [y,x++]     14726  st([Y,Xpp])                     #18
              32da 41c4  ora  [$c4]       14727  ora([vLAC+0])                   #19
              32db c2c4  st   [$c4]       14728  st([vLAC+0])                    #20
              32dc 0d00  ld   [y,x]       14729  ld([Y,X])                       #21
              32dd de00  st   [y,x++]     14730  st([Y,Xpp])                     #22
              32de 41c5  ora  [$c5]       14731  ora([vLAC+1])                   #23
              32df c2c5  st   [$c5]       14732  st([vLAC+1])                    #24
              32e0 0d00  ld   [y,x]       14733  ld([Y,X])                       #25
              32e1 de00  st   [y,x++]     14734  st([Y,Xpp])                     #26
              32e2 41c6  ora  [$c6]       14735  ora([vLAC+2])                   #27
              32e3 c2c6  st   [$c6]       14736  st([vLAC+2])                    #28
              32e4 0d00  ld   [y,x]       14737  ld([Y,X])                       #29
              32e5 fccb  bra  andlp#32    14738  bra('andlp#32')                 #30
              32e6 41c7  ora  [$c7]       14739  ora([vLAC+3])                   #31
                                          14740
                                          14741
                                          14742  # XORLP implementation, (lb3361)
                                          14743  label('xorlp#13')
xorlp#13:     32e7 80fa  adda $fa         14744  adda(min(0,maxTicks-42/2))      #13
              32e8 e87a  blt  addlp#16    14745  blt('addlp#16')                 #14
              32e9 1519  ld   [$19],y     14746  ld([vAC+1],Y)                   #15
              32ea 1118  ld   [$18],x     14747  ld([vAC],X)                     #16
              32eb 0d00  ld   [y,x]       14748  ld([Y,X])                       #17
              32ec de00  st   [y,x++]     14749  st([Y,Xpp])                     #18
              32ed 61c4  xora [$c4]       14750  xora([vLAC+0])                  #19
              32ee c2c4  st   [$c4]       14751  st([vLAC+0])                    #20
              32ef 0d00  ld   [y,x]       14752  ld([Y,X])                       #21
              32f0 de00  st   [y,x++]     14753  st([Y,Xpp])                     #22
              32f1 61c5  xora [$c5]       14754  xora([vLAC+1])                  #23
              32f2 c2c5  st   [$c5]       14755  st([vLAC+1])                    #24
              32f3 0d00  ld   [y,x]       14756  ld([Y,X])                       #25
              32f4 de00  st   [y,x++]     14757  st([Y,Xpp])                     #26
              32f5 61c6  xora [$c6]       14758  xora([vLAC+2])                  #27
              32f6 c2c6  st   [$c6]       14759  st([vLAC+2])                    #28
              32f7 0d00  ld   [y,x]       14760  ld([Y,X])                       #29
              32f8 fccb  bra  andlp#32    14761  bra('andlp#32')                 #30
              32f9 61c7  xora [$c7]       14762  xora([vLAC+3])                  #31
                                          14763
                                          14764
              32fa 0200  nop              14765  fillers(until=0xff)
              32fb 0200  nop
              32fc 0200  nop
              * 5 times
              32ff 0200  nop              14766  align(0x100, size=0x100)
                                          14767
                                          14768  #-----------------------------------------------------------------------
                                          14769  #  More vCPU instruction implementations, (0x3300)
                                          14770  #-----------------------------------------------------------------------
                                          14771  #
                                          14772  # NCOPY implementation, (lb3361)
                                          14773  label('ncopy#16')
ncopy#16:     3300 0022  ld   $22         14774  ld(hi('PREFX2_PAGE'))           #16 restart
              3301 c202  st   [$02]       14775  st([vCpuSelect])                #17
              3302 9401  adda $01,y       14776  adda(1,Y)                       #18
              3303 e000  jmp  y,$00       14777  jmp(Y,'NEXTY')                  #19
              3304 00f5  ld   $f5         14778  ld(-22/2)                       #20
                                          14779
                                          14780  label('ncopy#11')
ncopy#11:     3305 8115  adda [$15]       14781  adda([vTicks])                  #11
              3306 c215  st   [$15]       14782  st([vTicks])                    #12
                                          14783  label('ncopy#13')               #-- entry point
ncopy#13:     3307 80eb  adda $eb         14784  adda(min(0,maxTicks-(22+50)/2)) #13 time for longest path (72 cycles)
              3308 e800  blt  ncopy#16    14785  blt('ncopy#16')                 #14 > restart
              3309 0118  ld   [$18]       14786  ld([vAC])                       #15
              330a 20fc  anda $fc         14787  anda(0xfc)                      #16
              330b 60fc  xora $fc         14788  xora(0xfc)                      #17
              330c f04e  beq  ncopy#20    14789  beq('ncopy#20')                 #18 > slow because src crosses page boundary
              330d 01cc  ld   [$cc]       14790  ld([vDST])                      #19
              330e 20fc  anda $fc         14791  anda(0xfc)                      #20
              330f 60fc  xora $fc         14792  xora(0xfc)                      #21
              3310 f052  beq  ncopy#24    14793  beq('ncopy#24')                 #22 > slow because dst crosses page boundnary
              3311 012b  ld   [$2b]       14794  ld([sysArgs+7])                 #23
              3312 20fc  anda $fc         14795  anda(0xfc)                      #24
              3313 f03a  beq  ncopy#27    14796  beq('ncopy#27')                 #25 > slow because n<4 but no page crossings
              3314 1519  ld   [$19],y     14797  ld([vAC+1],Y)                   #26
              3315 1118  ld   [$18],x     14798  ld([vAC],X)                     #27 four bytes burst
              3316 0d00  ld   [y,x]       14799  ld([Y,X])                       #28
              3317 de00  st   [y,x++]     14800  st([Y,Xpp])                     #29
              3318 c2c8  st   [$c8]       14801  st([vTmpL])                     #30
              3319 0d00  ld   [y,x]       14802  ld([Y,X])                       #31
              331a de00  st   [y,x++]     14803  st([Y,Xpp])                     #32
              331b c2c9  st   [$c9]       14804  st([vTmpL+1])                   #33
              331c 0d00  ld   [y,x]       14805  ld([Y,X])                       #34
              331d de00  st   [y,x++]     14806  st([Y,Xpp])                     #35
              331e c2ca  st   [$ca]       14807  st([vTmpL+2])                   #36
              331f 0d00  ld   [y,x]       14808  ld([Y,X])                       #37
              3320 de00  st   [y,x++]     14809  st([Y,Xpp])                     #38
              3321 c2cb  st   [$cb]       14810  st([vTmpL+3])                   #39
              3322 15cd  ld   [$cd],y     14811  ld([vDST+1],Y)                  #40
              3323 11cc  ld   [$cc],x     14812  ld([vDST],X)                    #41
              3324 01c8  ld   [$c8]       14813  ld([vTmpL])                     #42
              3325 de00  st   [y,x++]     14814  st([Y,Xpp])                     #43
              3326 01c9  ld   [$c9]       14815  ld([vTmpL+1])                   #44
              3327 de00  st   [y,x++]     14816  st([Y,Xpp])                     #45
              3328 01ca  ld   [$ca]       14817  ld([vTmpL+2])                   #46
              3329 de00  st   [y,x++]     14818  st([Y,Xpp])                     #47
              332a 01cb  ld   [$cb]       14819  ld([vTmpL+3])                   #48
              332b de00  st   [y,x++]     14820  st([Y,Xpp])                     #40
              332c 0004  ld   $04         14821  ld(4)                           #50 increment (no page crossing)
              332d 8118  adda [$18]       14822  adda([vAC])                     #51
              332e c218  st   [$18]       14823  st([vAC])                       #52
              332f 0004  ld   $04         14824  ld(4)                           #53
              3330 81cc  adda [$cc]       14825  adda([vDST])                    #54
              3331 c2cc  st   [$cc]       14826  st([vDST])                      #55
              3332 012b  ld   [$2b]       14827  ld([sysArgs+7])                 #56
              3333 a004  suba $04         14828  suba(4)                         #57
              3334 c22b  st   [$2b]       14829  st([sysArgs+7])                 #58
              3335 ec05  bne  ncopy#11    14830  bne('ncopy#11')                 #59-50=9
              3336 00e7  ld   $e7         14831  ld(-50/2)                       #60-50=10
              3337 1403  ld   $03,y       14832  ld(hi('REENTER'),Y)             #61
              3338 e0cb  jmp  y,$cb       14833  jmp(Y,'REENTER')                #62
              3339 00df  ld   $df         14834  ld(-66/2)                       #63
                                          14835
                                          14836  label('ncopy#27')
ncopy#27:     333a 1118  ld   [$18],x     14837  ld([vAC],X)                     #27 one byte, no page crossings
              333b 0d00  ld   [y,x]       14838  ld([Y,X])                       #28
              333c 15cd  ld   [$cd],y     14839  ld([vDST+1],Y)                  #29
              333d 11cc  ld   [$cc],x     14840  ld([vDST],X)                    #30
              333e ce00  st   [y,x]       14841  st([Y,X])                       #31
              333f 0001  ld   $01         14842  ld(1)                           #32 increment (no page crossing)
              3340 8118  adda [$18]       14843  adda([vAC])                     #33
              3341 c218  st   [$18]       14844  st([vAC])                       #34
              3342 0001  ld   $01         14845  ld(1)                           #35
              3343 81cc  adda [$cc]       14846  adda([vDST])                    #36
              3344 c2cc  st   [$cc]       14847  st([vDST])                      #37
              3345 012b  ld   [$2b]       14848  ld([sysArgs+7])                 #38
              3346 a001  suba $01         14849  suba(1)                         #39
              3347 c22b  st   [$2b]       14850  st([sysArgs+7])                 #40
              3348 ec05  bne  ncopy#11    14851  bne('ncopy#11')                 #41-32=9
              3349 00f0  ld   $f0         14852  ld(-32/2)                       #42-32=10
              334a 0200  nop              14853  nop()                           #43
              334b 1403  ld   $03,y       14854  ld(hi('NEXTY'),Y)               #44
              334c e000  jmp  y,$00       14855  jmp(Y,'NEXTY')                  #45
              334d 00e8  ld   $e8         14856  ld(-48/2)                       #46
                                          14857
                                          14858  label('ncopy#20')
ncopy#20:     334e 0200  nop              14859  nop()                           #20
              334f 0200  nop              14860  nop()                           #21
              3350 0200  nop              14861  nop()                           #22
              3351 0200  nop              14862  nop()                           #23
                                          14863  label('ncopy#24')
ncopy#24:     3352 1519  ld   [$19],y     14864  ld([vAC+1],Y)                   #24
              3353 1118  ld   [$18],x     14865  ld([vAC],X)                     #25 one byte, possible page crossings
              3354 0d00  ld   [y,x]       14866  ld([Y,X])                       #26
              3355 15cd  ld   [$cd],y     14867  ld([vDST+1],Y)                  #27
              3356 11cc  ld   [$cc],x     14868  ld([vDST],X)                    #28
              3357 ce00  st   [y,x]       14869  st([Y,X])                       #29
              3358 0001  ld   $01         14870  ld(1)                           #30 increment vAC
              3359 8118  adda [$18]       14871  adda([vAC])                     #31
              335a c218  st   [$18]       14872  st([vAC])                       #32
              335b f05e  beq  $335e       14873  beq(pc()+3)                     #33
              335c fc5f  bra  $335f       14874  bra(pc()+3)                     #34
              335d 0000  ld   $00         14875  ld(0)                           #35
              335e 0001  ld   $01         14876  ld(1)                           #35!
              335f 8119  adda [$19]       14877  adda([vAC+1])                   #36
              3360 c219  st   [$19]       14878  st([vAC+1])                     #37
              3361 0001  ld   $01         14879  ld(1)                           #38 increment vDST
              3362 81cc  adda [$cc]       14880  adda([vDST])                    #39
              3363 c2cc  st   [$cc]       14881  st([vDST])                      #40
              3364 f067  beq  $3367       14882  beq(pc()+3)                     #41
              3365 fc68  bra  $3368       14883  bra(pc()+3)                     #42
              3366 0000  ld   $00         14884  ld(0)                           #43
              3367 0001  ld   $01         14885  ld(1)                           #43!
              3368 81cd  adda [$cd]       14886  adda([vDST+1])                  #44
              3369 c2cd  st   [$cd]       14887  st([vDST+1])                    #45
              336a 0200  nop              14888  nop()                           #46
              336b 012b  ld   [$2b]       14889  ld([sysArgs+7])                 #47 decrement sysArgs7
              336c a001  suba $01         14890  suba(1)                         #48
              336d c22b  st   [$2b]       14891  st([sysArgs+7])                 #49
              336e 1403  ld   $03,y       14892  ld(hi('NEXTY'),Y)               #50
              336f ec05  bne  ncopy#11    14893  bne('ncopy#11')                 #51-42=9
              3370 00eb  ld   $eb         14894  ld(-42/2)                       #52-42=10
              3371 e000  jmp  y,$00       14895  jmp(Y,'NEXTY')                  #53
              3372 00e4  ld   $e4         14896  ld(-56/2)                       #54
                                          14897
                                          14898
                                          14899  # STLU implementation, (lb3361)
                                          14900  label('stlu#13')
stlu#13:      3373 1400  ld   $00,y       14901  ld(0,Y)                         #13
              3374 0118  ld   [$18]       14902  ld([vAC])                       #14
              3375 de00  st   [y,x++]     14903  st([Y,Xpp])                     #15
              3376 0119  ld   [$19]       14904  ld([vAC+1])                     #16
              3377 de00  st   [y,x++]     14905  st([Y,Xpp])                     #17
              3378 dc00  st   $00,[y,x++] 14906  st(0,[Y,Xpp])                   #18
              3379 cc00  st   $00,[y,x]   14907  st(0,[Y,X])                     #19
              337a 1403  ld   $03,y       14908  ld(hi('NEXTY'),Y)               #20
              337b e000  jmp  y,$00       14909  jmp(Y,'NEXTY')                  #21
              337c 00f4  ld   $f4         14910  ld(-24/2)                       #22
                                          14911
                                          14912
                                          14913  # STLS implementation, (lb3361)
                                          14914  label('stls#13')
stls#13:      337d 1200  ld   ac,x        14915  ld(AC,X)                        #13
              337e 1400  ld   $00,y       14916  ld(0,Y)                         #14
              337f 0118  ld   [$18]       14917  ld([vAC])                       #15
              3380 de00  st   [y,x++]     14918  st([Y,Xpp])                     #16
              3381 0119  ld   [$19]       14919  ld([vAC+1])                     #17
              3382 e889  blt  .stls#20    14920  bmi('.stls#20')                 #18
              3383 de00  st   [y,x++]     14921  st([Y,Xpp])                     #19
              3384 dc00  st   $00,[y,x++] 14922  st(0,[Y,Xpp])                   #20
              3385 cc00  st   $00,[y,x]   14923  st(0,[Y,X])                     #21
              3386 1403  ld   $03,y       14924  ld(hi('NEXTY'),Y)               #22
              3387 e000  jmp  y,$00       14925  jmp(Y,'NEXTY')                  #23
              3388 00f3  ld   $f3         14926  ld(-26/2)                       #24
                                          14927  label('.stls#20')
.stls#20:     3389 dcff  st   $ff,[y,x++] 14928  st(0xff,[Y,Xpp])                #20
              338a ccff  st   $ff,[y,x]   14929  st(0xff,[Y,X])                  #21
              338b 1403  ld   $03,y       14930  ld(hi('NEXTY'),Y)               #22
              338c e000  jmp  y,$00       14931  jmp(Y,'NEXTY')                  #23
              338d 00f3  ld   $f3         14932  ld(-26/2)                       #24
                                          14933
                                          14934
                                          14935  # CMPLPU/CMPLPS implementation, (lb3361)
                                          14936  label('cmplp#16')
cmplp#16:     338e 0023  ld   $23         14937  ld(hi('PREFX1_PAGE'))           #16 restart
              338f c202  st   [$02]       14938  st([vCpuSelect])                #17
              3390 9401  adda $01,y       14939  adda(1,Y)                       #18
              3391 e000  jmp  y,$00       14940  jmp(Y,'NEXTY')                  #19
              3392 00f5  ld   $f5         14941  ld(-22/2)                       #20
                                          14942
                                          14943  label('cmplp#lt')
cmplp#lt:     3393 00ff  ld   $ff         14944  ld(0xff)                        #vTmp-7
              3394 c218  st   [$18]       14945  st([vAC])                       #vTmp-6
              3395 c219  st   [$19]       14946  st([vAC+1])                     #vTmp-5
              3396 1403  ld   $03,y       14947  ld(hi('NEXTY'),Y)               #vTmp-4
              3397 e000  jmp  y,$00       14948  jmp(Y,'NEXTY')                  #vTmp-3
              3398 011d  ld   [$1d]       14949  ld([vTmp])                      #vTmp-2
                                          14950
                                          14951  label('cmplp#gt')
cmplp#gt:     3399 0001  ld   $01         14952  ld(1)                           #vTmp-8
              339a c218  st   [$18]       14953  st([vAC])                       #vTmp-7
              339b 0000  ld   $00         14954  ld(0)                           #vTmp-6
              339c c219  st   [$19]       14955  st([vAC+1])                     #vTmp-5
              339d 1403  ld   $03,y       14956  ld(hi('NEXTY'),Y)               #vTmp-4
              339e e000  jmp  y,$00       14957  jmp(Y,'NEXTY')                  #vTmp-3
              339f 011d  ld   [$1d]       14958  ld([vTmp])                      #vTmp-2
                                          14959
                                          14960  label('cmplpu#13')
cmplpu#13:    33a0 80eb  adda $eb         14961  adda(min(0,maxTicks-72/2))      #13
              33a1 e88e  blt  cmplp#16    14962  blt('cmplp#16')                 #14
              33a2 1519  ld   [$19],y     14963  ld([vAC+1],Y)                   #15
                                          14964  # byte3
              33a3 0118  ld   [$18]       14965  ld([vAC])                       #16
              33a4 9003  adda $03,x       14966  adda(3,X)                       #17
              33a5 00ee  ld   $ee         14967  ld(-36/2)                       #18
              33a6 c21d  st   [$1d]       14968  st([vTmp])                      #19
              33a7 01c7  ld   [$c7]       14969  ld([vLAC+3])                    #20
              33a8 6d00  xora [y,x]       14970  xora([Y,X])                     #21
              33a9 e8ad  blt  $33ad       14971  blt(pc()+4)                     #22
              33aa 01c7  ld   [$c7]       14972  ld([vLAC+3])                    #23
              33ab fcaf  bra  cmplp#26    14973  bra('cmplp#26')                 #24
              33ac ad00  suba [y,x]       14974  suba([Y,X])                     #25
              33ad 6080  xora $80         14975  xora(0x80)                      #24
              33ae 4001  ora  $01         14976  ora(1)                          #25
                                          14977  label('cmplp#26')
cmplp#26:     33af e499  bgt  cmplp#gt    14978  bgt('cmplp#gt')                 #26
              33b0 e893  blt  cmplp#lt    14979  blt('cmplp#lt')                 #27
                                          14980  # byte2
              33b1 0118  ld   [$18]       14981  ld([vAC])                       #28
              33b2 9002  adda $02,x       14982  adda(2,X)                       #29
              33b3 00e8  ld   $e8         14983  ld(-48/2)                       #30
              33b4 c21d  st   [$1d]       14984  st([vTmp])                      #31
              33b5 01c6  ld   [$c6]       14985  ld([vLAC+2])                    #32
              33b6 6d00  xora [y,x]       14986  xora([Y,X])                     #33
              33b7 e8bb  blt  $33bb       14987  blt(pc()+4)                     #34
              33b8 01c6  ld   [$c6]       14988  ld([vLAC+2])                    #35
              33b9 fcbd  bra  $33bd       14989  bra(pc()+4)                     #36
              33ba ad00  suba [y,x]       14990  suba([Y,X])                     #37
              33bb 6080  xora $80         14991  xora(0x80)                      #36
              33bc 4001  ora  $01         14992  ora(1)                          #37
              33bd e499  bgt  cmplp#gt    14993  bgt('cmplp#gt')                 #38
              33be e893  blt  cmplp#lt    14994  blt('cmplp#lt')                 #39
                                          14995  # byte1
              33bf 0118  ld   [$18]       14996  ld([vAC])                       #40
              33c0 9001  adda $01,x       14997  adda(1,X)                       #41
              33c1 00e2  ld   $e2         14998  ld(-60/2)                       #42
              33c2 c21d  st   [$1d]       14999  st([vTmp])                      #43
              33c3 01c5  ld   [$c5]       15000  ld([vLAC+1])                    #44
              33c4 6d00  xora [y,x]       15001  xora([Y,X])                     #45
              33c5 e8c9  blt  $33c9       15002  blt(pc()+4)                     #46
              33c6 01c5  ld   [$c5]       15003  ld([vLAC+1])                    #47
              33c7 fccb  bra  $33cb       15004  bra(pc()+4)                     #48
              33c8 ad00  suba [y,x]       15005  suba([Y,X])                     #49
              33c9 6080  xora $80         15006  xora(0x80)                      #48
              33ca 4001  ora  $01         15007  ora(1)                          #49
              33cb e499  bgt  cmplp#gt    15008  bgt('cmplp#gt')                 #50
              33cc e893  blt  cmplp#lt    15009  blt('cmplp#lt')                 #51
                                          15010  # byte0
              33cd 0118  ld   [$18]       15011  ld([vAC])                       #52
              33ce 9000  adda $00,x       15012  adda(0,X)                       #53
              33cf 00dc  ld   $dc         15013  ld(-72/2)                       #54
              33d0 c21d  st   [$1d]       15014  st([vTmp])                      #55
              33d1 01c4  ld   [$c4]       15015  ld([vLAC])                      #56
              33d2 6d00  xora [y,x]       15016  xora([Y,X])                     #57
              33d3 e8d7  blt  $33d7       15017  blt(pc()+4)                     #58
              33d4 01c4  ld   [$c4]       15018  ld([vLAC])                      #59
              33d5 fcd9  bra  $33d9       15019  bra(pc()+4)                     #60
              33d6 ad00  suba [y,x]       15020  suba([Y,X])                     #61
              33d7 6080  xora $80         15021  xora(0x80)                      #60
              33d8 4001  ora  $01         15022  ora(1)                          #61
              33d9 e499  bgt  cmplp#gt    15023  bgt('cmplp#gt')                 #62
              33da e893  blt  cmplp#lt    15024  blt('cmplp#lt')                 #63
              33db c219  st   [$19]       15025  st([vAC+1])                     #64
              33dc c218  st   [$18]       15026  st([vAC])                       #65
              33dd 1403  ld   $03,y       15027  ld(hi('NEXTY'),Y)               #66
              33de e000  jmp  y,$00       15028  jmp(Y,'NEXTY')                  #67
              33df 00dd  ld   $dd         15029  ld(-70/2)                       #68
                                          15030
                                          15031  label('cmplps#13')
cmplps#13:    33e0 80eb  adda $eb         15032  adda(min(0,maxTicks-72/2))      #13
              33e1 e88e  blt  cmplp#16    15033  blt('cmplp#16')                 #14
              33e2 1519  ld   [$19],y     15034  ld([vAC+1],Y)                   #15
                                          15035  #byte3
              33e3 0118  ld   [$18]       15036  ld([vAC])                       #16
              33e4 9003  adda $03,x       15037  adda(3,X)                       #17
              33e5 00ee  ld   $ee         15038  ld(-36/2)                       #18
              33e6 c21d  st   [$1d]       15039  st([vTmp])                      #19
              33e7 01c7  ld   [$c7]       15040  ld([vLAC+3])                    #20
              33e8 6d00  xora [y,x]       15041  xora([Y,X])                     #21
              33e9 e8ed  blt  $33ed       15042  blt(pc()+4)                     #22
              33ea 01c7  ld   [$c7]       15043  ld([vLAC+3])                    #23
              33eb fcaf  bra  cmplp#26    15044  bra('cmplp#26')                 #24
              33ec ad00  suba [y,x]       15045  suba([Y,X])                     #25
              33ed 0200  nop              15046  nop()                           #24
              33ee 4001  ora  $01         15047  ora(1)                          #25
              33ef e499  bgt  cmplp#gt    15048  bgt('cmplp#gt')                 #26
              33f0 e893  blt  cmplp#lt    15049  blt('cmplp#lt')                 #27
                                          15050  #dummy                          #28
                                          15051
                                          15052
              33f1 0200  nop              15053  fillers(until=0xff)
              33f2 0200  nop
              33f3 0200  nop
              * 14 times
              33ff 0200  nop              15054  align(0x100, size=0x100)
                                          15055
                                          15056  #-----------------------------------------------------------------------
                                          15057  #  More vCPU instruction implementations, (0x3400)
                                          15058  #-----------------------------------------------------------------------
                                          15059  #
                                          15060  # NOTL implementation, (lb3361)
                                          15061  label('notl#13')
notl#13:      3400 1400  ld   $00,y       15062  ld(0,Y)                         #13
              3401 0d00  ld   [y,x]       15063  ld([Y,X])                       #14
              3402 60ff  xora $ff         15064  xora(0xff)                      #15
              3403 de00  st   [y,x++]     15065  st([Y,Xpp])                     #16
              3404 0d00  ld   [y,x]       15066  ld([Y,X])                       #17
              3405 60ff  xora $ff         15067  xora(0xff)                      #18
              3406 de00  st   [y,x++]     15068  st([Y,Xpp])                     #19
              3407 0d00  ld   [y,x]       15069  ld([Y,X])                       #20
              3408 60ff  xora $ff         15070  xora(0xff)                      #21
              3409 de00  st   [y,x++]     15071  st([Y,Xpp])                     #22
              340a 0d00  ld   [y,x]       15072  ld([Y,X])                       #23
              340b 60ff  xora $ff         15073  xora(0xff)                      #24
              340c de00  st   [y,x++]     15074  st([Y,Xpp])                     #25
              340d 1403  ld   $03,y       15075  ld(hi('NEXTY'),Y)               #26
              340e e000  jmp  y,$00       15076  jmp(Y,'NEXTY')                  #27
              340f 00f1  ld   $f1         15077  ld(-30/2)                       #28
                                          15078
                                          15079
                                          15080  # NROL implementation, (lb3361)
                                          15081  label('nrol#13')
nrol#13:      3410 112b  ld   [$2b],x     15082  ld([sysArgs+7],X)               #13
              3411 fc15  bra  nrol#16     15083  bra('nrol#16')                  #14
              3412 0115  ld   [$15]       15084  ld([vTicks])                    #15
                                          15085
                                          15086  label('nrol#14')
nrol#14:      3413 8115  adda [$15]       15087  adda([vTicks])                  #14
              3414 c215  st   [$15]       15088  st([vTicks])                    #15
                                          15089  label('nrol#16')
nrol#16:      3415 80fa  adda $fa         15090  adda(min(0,maxTicks-(24+18)/2)) #16
              3416 f41c  bge  nrol#19     15091  bge('nrol#19')                  #17 -> enough time
              3417 0021  ld   $21         15092  ld(hi('PREFX3_PAGE'))           #18 restart
              3418 c202  st   [$02]       15093  st([vCpuSelect])                #19
              3419 9401  adda $01,y       15094  adda(1,Y)                       #20
              341a e000  jmp  y,$00       15095  jmp(Y,'NEXTY')                  #21
              341b 00f4  ld   $f4         15096  ld(-24/2)                       #22
                                          15097
                                          15098  label('nrol#19')
nrol#19:      341c 0119  ld   [$19]       15099  ld([vAC+1])                     #19 enough time
              341d e822  blt  nrol#22     15100  blt('nrol#22')                  #20
              341e 0500  ld   [x]         15101  ld([X])                         #21
              341f c219  st   [$19]       15102  st([vAC+1])                     #22
              3420 fc25  bra  nrol#25     15103  bra('nrol#25')                  #23
              3421 8200  adda ac          15104  adda(AC)                        #24
                                          15105  label('nrol#22')
nrol#22:      3422 c219  st   [$19]       15106  st([vAC+1])                     #22
              3423 8200  adda ac          15107  adda(AC)                        #23
              3424 8001  adda $01         15108  adda(1)                         #24
                                          15109  label('nrol#25')
nrol#25:      3425 c600  st   [x]         15110  st([X])                         #25
              3426 0001  ld   $01         15111  ld(1)                           #26
              3427 812b  adda [$2b]       15112  adda([sysArgs+7])               #27
              3428 d22b  st   [$2b],x     15113  st([sysArgs+7],X)               #28
              3429 612a  xora [$2a]       15114  xora([sysArgs+6])               #29
              342a ec13  bne  nrol#14     15115  bne('nrol#14')                  #30-18=12
              342b 00f7  ld   $f7         15116  ld(-18/2)                       #31-18=13
              342c 1403  ld   $03,y       15117  ld(hi('NEXTY'),Y)               #32
              342d e000  jmp  y,$00       15118  jmp(Y,'NEXTY')                  #33
              342e 00ee  ld   $ee         15119  ld(-36/2)                       #34
                                          15120
                                          15121
                                          15122  # NROR implementation, (lb3361)
                                          15123  label('nror#20')
nror#20:      342f 0021  ld   $21         15124  ld(hi('PREFX3_PAGE'))           #20 restart
              3430 c202  st   [$02]       15125  st([vCpuSelect])                #21
              3431 9401  adda $01,y       15126  adda(1,Y)                       #22
              3432 e000  jmp  y,$00       15127  jmp(Y,'NEXTY')                  #23
              3433 00f3  ld   $f3         15128  ld(-26/2)                       #24
                                          15129
                                          15130  label('nror#13')
nror#13:      3434 00e0  ld   $e0         15131  ld('nror#35')                   #13
              3435 c21d  st   [$1d]       15132  st([vTmp])                      #14
              3436 0115  ld   [$15]       15133  ld([vTicks])                    #15
                                          15134  label('nror#16')
nror#16:      3437 1405  ld   $05,y       15135  ld(hi('shiftTable'),Y)          #16
              3438 80f3  adda $f3         15136  adda(min(0,maxTicks-(26+30)/2)) #17
              3439 e82f  blt  nror#20     15137  blt('nror#20')                  #18
              343a 012b  ld   [$2b]       15138  ld([sysArgs+7])                 #19
              343b a001  suba $01         15139  suba(1)                         #20
              343c d22b  st   [$2b],x     15140  st([sysArgs+7],X)               #21
              343d 0119  ld   [$19]       15141  ld([vAC+1])                     #22
              343e 2080  anda $80         15142  anda(0x80)                      #23
              343f c218  st   [$18]       15143  st([vAC])                       #24
              3440 0500  ld   [x]         15144  ld([X])                         #25
              3441 20fe  anda $fe         15145  anda(0xfe)                      #26
              3442 a500  suba [x]         15146  suba([X])                       #27
              3443 c219  st   [$19]       15147  st([vAC+1])                     #28
              3444 8500  adda [x]         15148  adda([X])                       #29
              3445 e200  jmp  y,ac        15149  jmp(Y,AC)                       #30
              3446 fcff  bra  $ff         15150  bra(255)                        #31 continues in page 0x600
                                          15151
                                          15152
                                          15153  # INCL implementation
                                          15154  label('incl#13')
incl#13:      3447 00fd  ld   $fd         15155  ld(min(0,maxTicks-36/2))        #13
              3448 8115  adda [$15]       15156  adda([vTicks])                  #14
              3449 e866  blt  .incl#17    15157  blt('.incl#17')                 #15 not enough time left, so retry
              344a 1400  ld   $00,y       15158  ld(0,Y)                         #16
              344b 0500  ld   [x]         15159  ld([X])                         #17
                                          15160  label('incl#18')
incl#18:      344c 8001  adda $01         15161  adda(1)                         #18
              344d f052  beq  .incl#21    15162  beq('.incl#21')                 #19 if 0 byte is 0x00
              344e de00  st   [y,x++]     15163  st([Y,Xpp])                     #20 inc 0 byte
              344f 1403  ld   $03,y       15164  ld(hi('REENTER'),Y)             #21
              3450 e0cb  jmp  y,$cb       15165  jmp(Y,'REENTER')                #22
              3451 00f3  ld   $f3         15166  ld(-26/2)                       #23
                                          15167
                                          15168  label('.incl#21')
.incl#21:     3452 0500  ld   [x]         15169  ld([X])                         #21
              3453 8001  adda $01         15170  adda(1)                         #22
              3454 f059  beq  .incl#25    15171  beq('.incl#25')                 #23 if 1 byte is 0x00
              3455 de00  st   [y,x++]     15172  st([Y,Xpp])                     #24 inc 1 byte
              3456 1403  ld   $03,y       15173  ld(hi('REENTER'),Y)             #25
              3457 e0cb  jmp  y,$cb       15174  jmp(Y,'REENTER')                #26
              3458 00f1  ld   $f1         15175  ld(-30/2)                       #27
                                          15176
                                          15177  label('.incl#25')
.incl#25:     3459 0500  ld   [x]         15178  ld([X])                         #25
              345a 8001  adda $01         15179  adda(1)                         #26
              345b f060  beq  .incl#29    15180  beq('.incl#29')                 #27 if 2 byte is 0x00
              345c de00  st   [y,x++]     15181  st([Y,Xpp])                     #28 inc 2 byte
              345d 1403  ld   $03,y       15182  ld(hi('REENTER'),Y)             #29
              345e e0cb  jmp  y,$cb       15183  jmp(Y,'REENTER')                #30
              345f 00ef  ld   $ef         15184  ld(-34/2)                       #31
                                          15185
                                          15186  label('.incl#29')
.incl#29:     3460 0500  ld   [x]         15187  ld([X])                         #29
              3461 8001  adda $01         15188  adda(1)                         #30
              3462 c600  st   [x]         15189  st([X])                         #31 inc high byte
              3463 1403  ld   $03,y       15190  ld(hi('NEXTY'),Y)               #32
              3464 e000  jmp  y,$00       15191  jmp(Y,'NEXTY')                  #33
              3465 00ee  ld   $ee         15192  ld(-36/2)                       #34
                                          15193
                                          15194  label('.incl#17')
.incl#17:     3466 0022  ld   $22         15195  ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              3467 c202  st   [$02]       15196  st([vCpuSelect])                #18 restore PREFX2 instruction page
              3468 9401  adda $01,y       15197  adda(1,Y)                       #19 retry instruction
              3469 e0cb  jmp  y,$cb       15198  jmp(Y,'REENTER')                #20
              346a 00f4  ld   $f4         15199  ld(-24/2)                       #21
                                          15200
                                          15201
                                          15202  # DECL implementation
                                          15203  label('decl#13')
decl#13:      346b 112b  ld   [$2b],x     15204  ld([sysArgs+7],X)               #13 var address
              346c 00fb  ld   $fb         15205  ld(min(0,maxTicks-40/2))        #14
              346d 8115  adda [$15]       15206  adda([vTicks])                  #15
              346e e88e  blt  .decl#18    15207  blt('.decl#18')                 #16 not enough time left, so retry
              346f 1400  ld   $00,y       15208  ld(0,Y)                         #17
              3470 0500  ld   [x]         15209  ld([X])                         #18
              3471 a001  suba $01         15210  suba(1)                         #19
              3472 de00  st   [y,x++]     15211  st([Y,Xpp])                     #20 dec 0 byte
              3473 60ff  xora $ff         15212  xora(0xff)                      #21 if 0 byte is 0xff
              3474 f079  beq  .decl#24    15213  beq('.decl#24')                 #22
              3475 0500  ld   [x]         15214  ld([X])                         #23
              3476 1403  ld   $03,y       15215  ld(hi('NEXTY'),Y)               #24
              3477 e000  jmp  y,$00       15216  jmp(Y,'NEXTY')                  #25
              3478 00f2  ld   $f2         15217  ld(-28/2)                       #26
                                          15218
                                          15219  label('.decl#24')
.decl#24:     3479 a001  suba $01         15220  suba(1)                         #24
              347a de00  st   [y,x++]     15221  st([Y,Xpp])                     #25 dec 1 byte
              347b 60ff  xora $ff         15222  xora(0xff)                      #26 if 1 byte is 0xff
              347c f081  beq  .decl#29    15223  beq('.decl#29')                 #27
              347d 0500  ld   [x]         15224  ld([X])                         #28
              347e 1403  ld   $03,y       15225  ld(hi('REENTER'),Y)             #29
              347f e0cb  jmp  y,$cb       15226  jmp(Y,'REENTER')                #30
              3480 00ef  ld   $ef         15227  ld(-34/2)                       #31
                                          15228
                                          15229  label('.decl#29')
.decl#29:     3481 a001  suba $01         15230  suba(1)                         #29
              3482 de00  st   [y,x++]     15231  st([Y,Xpp])                     #30 dec 2 byte
              3483 60ff  xora $ff         15232  xora(0xff)                      #31 if 2 byte is 0xff
              3484 f089  beq  .decl#34    15233  beq('.decl#34')                 #32
              3485 0500  ld   [x]         15234  ld([X])                         #33
              3486 1403  ld   $03,y       15235  ld(hi('NEXTY'),Y)               #34
              3487 e000  jmp  y,$00       15236  jmp(Y,'NEXTY')                  #35
              3488 00ed  ld   $ed         15237  ld(-38/2)                       #36
                                          15238
                                          15239  label('.decl#34')
.decl#34:     3489 a001  suba $01         15240  suba(1)                         #34
              348a c600  st   [x]         15241  st([X])                         #35 dec 3 byte
              348b 1403  ld   $03,y       15242  ld(hi('NEXTY'),Y)               #36
              348c e000  jmp  y,$00       15243  jmp(Y,'NEXTY')                  #37
              348d 00ec  ld   $ec         15244  ld(-40/2)                       #38
                                          15245
                                          15246  label('.decl#18')
.decl#18:     348e 0022  ld   $22         15247  ld(hi('PREFX2_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              348f c202  st   [$02]       15248  st([vCpuSelect])                #19 restore PREFX2 instruction page
              3490 9401  adda $01,y       15249  adda(1,Y)                       #20 retry instruction
              3491 e000  jmp  y,$00       15250  jmp(Y,'NEXTY')                  #21
              3492 00f4  ld   $f4         15251  ld(-24/2)                       #22
                                          15252
                                          15253
                                          15254  # NEGL implementation, (lb3361)
                                          15255  # Complement then jumps into INCL
                                          15256  label('negl#13')
negl#13:      3493 1400  ld   $00,y       15257  ld(0,Y)                         #13
              3494 00f2  ld   $f2         15258  ld(min(0,maxTicks-(40+18)/2))   #14
              3495 8115  adda [$15]       15259  adda([vTicks])                  #15
              3496 e88e  blt  .decl#18    15260  blt('.decl#18')                 #16 restart
              3497 0d00  ld   [y,x]       15261  ld([Y,X])                       #17
              3498 60ff  xora $ff         15262  xora(0xff)                      #18
              3499 de00  st   [y,x++]     15263  st([Y,Xpp])                     #19
              349a 0d00  ld   [y,x]       15264  ld([Y,X])                       #20
              349b 60ff  xora $ff         15265  xora(0xff)                      #21
              349c de00  st   [y,x++]     15266  st([Y,Xpp])                     #22
              349d 0d00  ld   [y,x]       15267  ld([Y,X])                       #23
              349e 60ff  xora $ff         15268  xora(0xff)                      #24
              349f de00  st   [y,x++]     15269  st([Y,Xpp])                     #25
              34a0 0d00  ld   [y,x]       15270  ld([Y,X])                       #26
              34a1 60ff  xora $ff         15271  xora(0xff)                      #27
              34a2 de00  st   [y,x++]     15272  st([Y,Xpp])                     #28
              34a3 0200  nop              15273  nop()                           #29
              34a4 0115  ld   [$15]       15274  ld([vTicks])                    #30
              34a5 80f7  adda $f7         15275  adda(-18/2)                     #13=31-18
              34a6 c215  st   [$15]       15276  st([vTicks])                    #14
              34a7 112b  ld   [$2b],x     15277  ld([sysArgs+7],X)               #15
              34a8 fc4c  bra  incl#18     15278  bra('incl#18')                  #16
              34a9 0500  ld   [x]         15279  ld([X])                         #17
                                          15280
                                          15281
                                          15282  # VADDBL implementation
                                          15283  label('vaddbl#13')
vaddbl#13:    34aa 1400  ld   $00,y       15284  ld(0,Y)                         #13
              34ab 00f8  ld   $f8         15285  ld(min(0,maxTicks-46/2))        #14
              34ac 8115  adda [$15]       15286  adda([vTicks])                  #15
              34ad e8ca  blt  .vaddbl#18  15287  blt('.vaddbl#18')               #16 not enough time left, so retry
              34ae 0500  ld   [x]         15288  ld([X])                         #17
              34af de00  st   [y,x++]     15289  st([Y,Xpp])                     #18
              34b0 c2b0  st   [$b0]       15290  st([0xB0])                      #19 src.0
              34b1 0500  ld   [x]         15291  ld([X])                         #20
              34b2 de00  st   [y,x++]     15292  st([Y,Xpp])                     #21
              34b3 c2b1  st   [$b1]       15293  st([0xB1])                      #22 src.1
              34b4 0500  ld   [x]         15294  ld([X])                         #23
              34b5 de00  st   [y,x++]     15295  st([Y,Xpp])                     #24
              34b6 c2b2  st   [$b2]       15296  st([0xB2])                      #25 src.2
              34b7 0500  ld   [x]         15297  ld([X])                         #26
              34b8 de00  st   [y,x++]     15298  st([Y,Xpp])                     #27
              34b9 c2b3  st   [$b3]       15299  st([0xB3])                      #28 src.3
              34ba 112b  ld   [$2b],x     15300  ld([sysArgs+7],X)               #29
              34bb 0500  ld   [x]         15301  ld([X])                         #30
              34bc 81b0  adda [$b0]       15302  adda([0xB0])                    #31
              34bd de00  st   [y,x++]     15303  st([Y,Xpp])                     #32 dst.0 += src.0
              34be 0500  ld   [x]         15304  ld([X])                         #33
              34bf 81b1  adda [$b1]       15305  adda([0xB1])                    #34
              34c0 de00  st   [y,x++]     15306  st([Y,Xpp])                     #35 dst.1 += src.1
              34c1 0500  ld   [x]         15307  ld([X])                         #36
              34c2 81b2  adda [$b2]       15308  adda([0xB2])                    #37
              34c3 de00  st   [y,x++]     15309  st([Y,Xpp])                     #38 dst.2 += src.2
              34c4 0500  ld   [x]         15310  ld([X])                         #39
              34c5 81b3  adda [$b3]       15311  adda([0xB3])                    #40
              34c6 c600  st   [x]         15312  st([X])                         #41 dst.3 += src.3
              34c7 1403  ld   $03,y       15313  ld(hi('NEXTY'),Y)               #42
              34c8 e000  jmp  y,$00       15314  jmp(Y,'NEXTY')                  #43
              34c9 00e9  ld   $e9         15315  ld(-46/2)                       #44
                                          15316
                                          15317  label('.vaddbl#18')
.vaddbl#18:   34ca 0021  ld   $21         15318  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              34cb c202  st   [$02]       15319  st([vCpuSelect])                #19 restore PREFX2 instruction page
              34cc 9401  adda $01,y       15320  adda(1,Y)                       #20 retry instruction
              34cd e000  jmp  y,$00       15321  jmp(Y,'NEXTY')                  #21
              34ce 00f4  ld   $f4         15322  ld(-24/2)                       #22
                                          15323
                                          15324
                                          15325  # VSUBBL implementation
                                          15326  label('vsubbl#13')
vsubbl#13:    34cf 1400  ld   $00,y       15327  ld(0,Y)                         #13
              34d0 00f8  ld   $f8         15328  ld(min(0,maxTicks-46/2))        #14
              34d1 8115  adda [$15]       15329  adda([vTicks])                  #15
              34d2 e8ef  blt  .vsubbl#18  15330  blt('.vsubbl#18')               #16 not enough time left, so retry
              34d3 0500  ld   [x]         15331  ld([X])                         #17
              34d4 de00  st   [y,x++]     15332  st([Y,Xpp])                     #18
              34d5 c2b0  st   [$b0]       15333  st([0xB0])                      #19 src.0
              34d6 0500  ld   [x]         15334  ld([X])                         #20
              34d7 de00  st   [y,x++]     15335  st([Y,Xpp])                     #21
              34d8 c2b1  st   [$b1]       15336  st([0xB1])                      #22 src.1
              34d9 0500  ld   [x]         15337  ld([X])                         #23
              34da de00  st   [y,x++]     15338  st([Y,Xpp])                     #24
              34db c2b2  st   [$b2]       15339  st([0xB2])                      #25 src.2
              34dc 0500  ld   [x]         15340  ld([X])                         #26
              34dd de00  st   [y,x++]     15341  st([Y,Xpp])                     #27
              34de c2b3  st   [$b3]       15342  st([0xB3])                      #28 src.3
              34df 112b  ld   [$2b],x     15343  ld([sysArgs+7],X)               #29
              34e0 0500  ld   [x]         15344  ld([X])                         #30
              34e1 a1b0  suba [$b0]       15345  suba([0xB0])                    #31
              34e2 de00  st   [y,x++]     15346  st([Y,Xpp])                     #32 dst.0 -= src.0
              34e3 0500  ld   [x]         15347  ld([X])                         #33
              34e4 a1b1  suba [$b1]       15348  suba([0xB1])                    #34
              34e5 de00  st   [y,x++]     15349  st([Y,Xpp])                     #35 dst.1 -= src.1
              34e6 0500  ld   [x]         15350  ld([X])                         #36
              34e7 a1b2  suba [$b2]       15351  suba([0xB2])                    #37
              34e8 de00  st   [y,x++]     15352  st([Y,Xpp])                     #38 dst.2 -= src.2
              34e9 0500  ld   [x]         15353  ld([X])                         #39
              34ea a1b3  suba [$b3]       15354  suba([0xB3])                    #40
              34eb c600  st   [x]         15355  st([X])                         #41 dst.3 -= src.3
              34ec 1403  ld   $03,y       15356  ld(hi('NEXTY'),Y)               #42
              34ed e000  jmp  y,$00       15357  jmp(Y,'NEXTY')                  #43
              34ee 00e9  ld   $e9         15358  ld(-46/2)                       #44
                                          15359
                                          15360  label('.vsubbl#18')
.vsubbl#18:   34ef 0021  ld   $21         15361  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              34f0 c202  st   [$02]       15362  st([vCpuSelect])                #19 restore PREFX2 instruction page
              34f1 9401  adda $01,y       15363  adda(1,Y)                       #20 retry instruction
              34f2 e000  jmp  y,$00       15364  jmp(Y,'NEXTY')                  #21
              34f3 00f4  ld   $f4         15365  ld(-24/2)                       #22
                                          15366
                                          15367
              34f4 0200  nop              15368  fillers(until=0xff)
              34f5 0200  nop
              34f6 0200  nop
              * 11 times
              34ff 0200  nop              15369  align(0x100, size=0x100)
                                          15370
                                          15371  #-----------------------------------------------------------------------
                                          15372  #  More vCPU instruction implementations, (0x3500)
                                          15373  #-----------------------------------------------------------------------
                                          15374  #
                                          15375  # ADDBI implementation, dst.lo = imm + src.lo, does NOT modify dst.hi
                                          15376  label('addbi#13')
addbi#13:     3500 c21d  st   [$1d]       15377  st([vTmp])                      #13 src var
              3501 de00  st   [y,x++]     15378  st([Y,Xpp])                     #14
              3502 0d00  ld   [y,x]       15379  ld([Y,X])                       #15
              3503 c22b  st   [$2b]       15380  st([sysArgs+7])                 #16 dst var
              3504 de00  st   [y,x++]     15381  st([Y,Xpp])                     #17
              3505 0d00  ld   [y,x]       15382  ld([Y,X])                       #18 imm
              3506 111d  ld   [$1d],x     15383  ld([vTmp],X)                    #19
              3507 8500  adda [x]         15384  adda([X])                       #20
              3508 112b  ld   [$2b],x     15385  ld([sysArgs+7],X)               #21
              3509 c600  st   [x]         15386  st([X])                         #22
              350a 0116  ld   [$16]       15387  ld([vPC])                       #23
              350b 8002  adda $02         15388  adda(2)                         #24
              350c c216  st   [$16]       15389  st([vPC])                       #25
              350d 1403  ld   $03,y       15390  ld(hi('NEXTY'),Y)               #26
              350e e000  jmp  y,$00       15391  jmp(Y,'NEXTY')                  #27
              350f 00f1  ld   $f1         15392  ld(-30/2)                       #28
                                          15393
                                          15394
                                          15395  # SUBBI implementation, dst.lo = src.lo - imm, does NOT modify dst.hi
                                          15396  label('subbi#13')
subbi#13:     3510 c21d  st   [$1d]       15397  st([vTmp])                      #13 imm
              3511 de00  st   [y,x++]     15398  st([Y,Xpp])                     #14
              3512 00fe  ld   $fe         15399  ld(min(0,maxTicks-34/2))        #15
              3513 8115  adda [$15]       15400  adda([vTicks])                  #16
              3514 e824  blt  .subbi#19   15401  blt('.subbi#19')                #17 not enough time left, so retry
              3515 0d00  ld   [y,x]       15402  ld([Y,X])                       #18
              3516 c22b  st   [$2b]       15403  st([sysArgs+7])                 #19 dst var
              3517 de00  st   [y,x++]     15404  st([Y,Xpp])                     #20
              3518 0d00  ld   [y,x]       15405  ld([Y,X])                       #21 src var
              3519 1200  ld   ac,x        15406  ld(AC,X)                        #22
              351a 0500  ld   [x]         15407  ld([X])                         #23
              351b a11d  suba [$1d]       15408  suba([vTmp])                    #24
              351c 112b  ld   [$2b],x     15409  ld([sysArgs+7],X)               #25
              351d c600  st   [x]         15410  st([X])                         #26
              351e 0116  ld   [$16]       15411  ld([vPC])                       #27
              351f 8002  adda $02         15412  adda(2)                         #28
              3520 c216  st   [$16]       15413  st([vPC])                       #29
              3521 1403  ld   $03,y       15414  ld(hi('NEXTY'),Y)               #30
              3522 e000  jmp  y,$00       15415  jmp(Y,'NEXTY')                  #31
              3523 00ef  ld   $ef         15416  ld(-34/2)                       #32
                                          15417
                                          15418  label('.subbi#19')
.subbi#19:    3524 0116  ld   [$16]       15419  ld([vPC])                       #19 retry instruction
              3525 a002  suba $02         15420  suba(2)                         #20
              3526 c216  st   [$16]       15421  st([vPC])                       #21
              3527 1403  ld   $03,y       15422  ld(hi('NEXTY'),Y)               #22
              3528 e000  jmp  y,$00       15423  jmp(Y,'NEXTY')                  #23
              3529 00f3  ld   $f3         15424  ld(-26/2)                       #24
                                          15425
                                          15426
                                          15427  # FNT6X8 implementation
                                          15428  label('fnt6x8#13')
fnt6x8#13:    352a 00fa  ld   $fa         15429  ld(min(0,maxTicks-42/2))        #13
              352b 8115  adda [$15]       15430  adda([vTicks])                  #14
              352c e84c  blt  .fnt6x8#17  15431  blt('.fnt6x8#17')               #15 not enough time left, so retry
              352d 112a  ld   [$2a],x     15432  ld([sysArgs+6],X)               #16
              352e 0500  ld   [x]         15433  ld([X])                         #17 fontChr
              352f e833  blt  fnt6x8#20   15434  bmi('fnt6x8#20')                #18
              3530 a052  suba $52         15435  suba(82)                        #19
              3531 fc35  bra  fnt6x8#22   15436  bra('fnt6x8#22')                #20
              3532 4052  ora  $52         15437  ora(82)                         #21
                                          15438
                                          15439  label('fnt6x8#20')
fnt6x8#20:    3533 2052  anda $52         15440  anda(82)                        #20
              3534 0200  nop              15441  nop()                           #21
                                          15442
                                          15443  label('fnt6x8#22')
fnt6x8#22:    3535 e83b  blt  fnt6x8#24   15444  bmi('fnt6x8#24')                #22
              3536 0500  ld   [x]         15445  ld([X])                         #23 fontChr >= 82
              3537 a052  suba $52         15446  suba(82)                        #24
              3538 c22a  st   [$2a]       15447  st([sysArgs+6])                 #25 sysArgs+6 = fontChr - 82
              3539 fc3f  bra  fnt6x8#28   15448  bra('fnt6x8#28')                #26
              353a 0008  ld   $08         15449  ld(hi('font82up'))              #27 vTmp = font82up.hi
                                          15450
                                          15451  label('fnt6x8#24')
fnt6x8#24:    353b a020  suba $20         15452  suba(32)                        #24 fontChr < 82, (assumes fontChr is 32 to 130)
              353c c22a  st   [$2a]       15453  st([sysArgs+6])                 #25 sysArgs+6 = fontChr - 32
              353d 0007  ld   $07         15454  ld(hi('font32up'))              #26 vTmp = font32up.hi
              353e 0200  nop              15455  nop()                           #27
                                          15456
                                          15457  label('fnt6x8#28')
fnt6x8#28:    353f c21d  st   [$1d]       15458  st([vTmp])                      #28
              3540 1400  ld   $00,y       15459  ld(0,Y)                         #29
              3541 112b  ld   [$2b],x     15460  ld([sysArgs+7],X)               #30
              3542 012a  ld   [$2a]       15461  ld([sysArgs+6])                 #31
              3543 8200  adda ac          15462  adda(AC)                        #32
              3544 8200  adda ac          15463  adda(AC)                        #33
              3545 812a  adda [$2a]       15464  adda([sysArgs+6])               #34
              3546 de00  st   [y,x++]     15465  st([Y,Xpp])                     #35 fontTable.lo = sysArgs+6*5
              3547 011d  ld   [$1d]       15466  ld([vTmp])                      #36
              3548 c600  st   [x]         15467  st([X])                         #37 fontTable.hi = vTmp
              3549 1403  ld   $03,y       15468  ld(hi('NEXTY'),Y)               #38
              354a e000  jmp  y,$00       15469  jmp(Y,'NEXTY')                  #39
              354b 00eb  ld   $eb         15470  ld(-42/2)                       #40
                                          15471
                                          15472  label('.fnt6x8#17')
.fnt6x8#17:   354c 0021  ld   $21         15473  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              354d c202  st   [$02]       15474  st([vCpuSelect])                #18 restore PREFX3 instruction page
              354e 9401  adda $01,y       15475  adda(1,Y)                       #19 retry instruction
              354f e0cb  jmp  y,$cb       15476  jmp(Y,'REENTER')                #20
              3550 00f4  ld   $f4         15477  ld(-24/2)                       #21
                                          15478
                                          15479
                                          15480  # FNT4X6 implementation
                                          15481  label('fnt4x6#13')
fnt4x6#13:    3551 c22a  st   [$2a]       15482  st([sysArgs+6])                 #13 fontChr addr
              3552 00fa  ld   $fa         15483  ld(min(0,maxTicks-42/2))        #14
              3553 8115  adda [$15]       15484  adda([vTicks])                  #15
              3554 e873  blt  .fnt4x6#18  15485  blt('.fnt4x6#18')               #16 not enough time left, so retry
              3555 112a  ld   [$2a],x     15486  ld([sysArgs+6],X)               #17
              3556 0500  ld   [x]         15487  ld([X])                         #18 fontChr
              3557 e85b  blt  fnt4x6#21   15488  bmi('fnt4x6#21')                #19
              3558 a073  suba $73         15489  suba(115)                       #20
              3559 fc5d  bra  fnt4x6#23   15490  bra('fnt4x6#23')                #21
              355a 4073  ora  $73         15491  ora(115)                        #22
                                          15492
                                          15493  label('fnt4x6#21')
fnt4x6#21:    355b 2073  anda $73         15494  anda(115)                       #21
              355c 0200  nop              15495  nop()                           #22
                                          15496
                                          15497  label('fnt4x6#23')
fnt4x6#23:    355d e863  blt  fnt4x6#25   15498  bmi('fnt4x6#25')                #23
              355e 0500  ld   [x]         15499  ld([X])                         #24 fontChr >= 82
              355f a073  suba $73         15500  suba(115)                       #25
              3560 c22a  st   [$2a]       15501  st([sysArgs+6])                 #26 sysArgs+6 = fontChr - 82
              3561 fc67  bra  fnt4x6#29   15502  bra('fnt4x6#29')                #27
              3562 004f  ld   $4f         15503  ld(hi('font4x6_115up'))         #28 vTmp = font4x6_115up.hi
                                          15504
                                          15505  label('fnt4x6#25')
fnt4x6#25:    3563 a020  suba $20         15506  suba(32)                        #25 fontChr < 82, (assumes fontChr is 32 to 130)
              3564 c22a  st   [$2a]       15507  st([sysArgs+6])                 #26 vAC.lo = fontChr - 32
              3565 004e  ld   $4e         15508  ld(hi('font4x6_32up'))          #27 vTmp = font4x6_32up.hi
              3566 0200  nop              15509  nop()                           #28
                                          15510
                                          15511  label('fnt4x6#29')
fnt4x6#29:    3567 c21d  st   [$1d]       15512  st([vTmp])                      #29
              3568 1400  ld   $00,y       15513  ld(0,Y)                         #30
              3569 112b  ld   [$2b],x     15514  ld([sysArgs+7],X)               #31
              356a 012a  ld   [$2a]       15515  ld([sysArgs+6])                 #32
              356b 8200  adda ac          15516  adda(AC)                        #33
              356c 812a  adda [$2a]       15517  adda([sysArgs+6])               #34
              356d de00  st   [y,x++]     15518  st([Y,Xpp])                     #35 fontTable.lo = sysArgs+6*3
              356e 011d  ld   [$1d]       15519  ld([vTmp])                      #36
              356f c600  st   [x]         15520  st([X])                         #37 fontTable.hi = vTmp
              3570 1403  ld   $03,y       15521  ld(hi('NEXTY'),Y)               #38
              3571 e000  jmp  y,$00       15522  jmp(Y,'NEXTY')                  #39
              3572 00eb  ld   $eb         15523  ld(-42/2)                       #40
                                          15524
                                          15525  label('.fnt4x6#18')
.fnt4x6#18:   3573 0021  ld   $21         15526  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              3574 c202  st   [$02]       15527  st([vCpuSelect])                #19 restore PREFX3 instruction page
              3575 9401  adda $01,y       15528  adda(1,Y)                       #20 retry instruction
              3576 e000  jmp  y,$00       15529  jmp(Y,'NEXTY')                  #21
              3577 00f4  ld   $f4         15530  ld(-24/2)                       #22
                                          15531
                                          15532
                                          15533  # PRN4X6 implementation
                                          15534  label('prn4x6#13')
prn4x6#13:    3578 00da  ld   $da         15535  ld(min(0,maxTicks-106/2))       #13
              3579 8115  adda [$15]       15536  adda([vTicks])                  #14
              357a e8db  blt  .prn4x6#17  15537  blt('.prn4x6#17')               #15 not enough time left, so retry
              357b 1400  ld   $00,y       15538  ld(0,Y)                         #16
              357c 112b  ld   [$2b],x     15539  ld([sysArgs+7],X)               #17 textFont addr
              357d 0500  ld   [x]         15540  ld([X])                         #18
              357e c21d  st   [$1d]       15541  st([vTmp])                      #19
              357f de00  st   [y,x++]     15542  st([Y,Xpp])                     #20
              3580 0500  ld   [x]         15543  ld([X])                         #21 LUP to $4E00 or $4F00
              3581 1600  ld   ac,y        15544  ld(AC,Y)                        #22
              3582 011d  ld   [$1d]       15545  ld([vTmp])                      #23
              3583 e200  jmp  y,ac        15546  jmp(Y,AC)                       #24
              3584 fcfd  bra  $fd         15547  bra(0xFD)                       #25 branch to trampoline after fetching byte
                                          15548
                                          15549  label('prn4x6Return')
prn4x6Return: 3585 e888  blt  $3588       15550  bmi(pc()+3)                     #30
              3586 fc89  bra  $3589       15551  bra(pc()+3)                     #31
              3587 0124  ld   [$24]       15552  ld([sysArgs+0])                 #32
              3588 0125  ld   [$25]       15553  ld([sysArgs+1])                 #32(!)
              3589 1519  ld   [$19],y     15554  ld([vAC+1],Y)                   #33
              358a 1118  ld   [$18],x     15555  ld([vAC],X)                     #34 dest addr
              358b de00  st   [y,x++]     15556  st([Y,Xpp])                     #35 draw pixel0
                                          15557
              358c 011d  ld   [$1d]       15558  ld([vTmp])                      #36
              358d 8200  adda ac          15559  adda(AC)                        #37
              358e c21d  st   [$1d]       15560  st([vTmp])                      #38
              358f e892  blt  $3592       15561  bmi(pc()+3)                     #39
              3590 fc93  bra  $3593       15562  bra(pc()+3)                     #40
              3591 0124  ld   [$24]       15563  ld([sysArgs+0])                 #41
              3592 0125  ld   [$25]       15564  ld([sysArgs+1])                 #41(!)
              3593 de00  st   [y,x++]     15565  st([Y,Xpp])                     #42 draw pixel1
                                          15566
              3594 011d  ld   [$1d]       15567  ld([vTmp])                      #43
              3595 8200  adda ac          15568  adda(AC)                        #44
              3596 c21d  st   [$1d]       15569  st([vTmp])                      #45
              3597 e89a  blt  $359a       15570  bmi(pc()+3)                     #46
              3598 fc9b  bra  $359b       15571  bra(pc()+3)                     #47
              3599 0124  ld   [$24]       15572  ld([sysArgs+0])                 #48
              359a 0125  ld   [$25]       15573  ld([sysArgs+1])                 #48(!)
              359b de00  st   [y,x++]     15574  st([Y,Xpp])                     #49 draw pixel2
                                          15575
              359c 011d  ld   [$1d]       15576  ld([vTmp])                      #50
              359d 8200  adda ac          15577  adda(AC)                        #51
              359e c21d  st   [$1d]       15578  st([vTmp])                      #52
              359f e8a2  blt  $35a2       15579  bmi(pc()+3)                     #53
              35a0 fca3  bra  $35a3       15580  bra(pc()+3)                     #54
              35a1 0124  ld   [$24]       15581  ld([sysArgs+0])                 #55
              35a2 0125  ld   [$25]       15582  ld([sysArgs+1])                 #55(!)
              35a3 de00  st   [y,x++]     15583  st([Y,Xpp])                     #56 draw pixel3
                                          15584
              35a4 0119  ld   [$19]       15585  ld([vAC+1])                     #57
              35a5 8001  adda $01         15586  adda(1)                         #58
              35a6 d619  st   [$19],y     15587  st([vAC+1],Y)                   #59
              35a7 1118  ld   [$18],x     15588  ld([vAC],X)                     #60 next scanline addr
                                          15589
              35a8 011d  ld   [$1d]       15590  ld([vTmp])                      #61
              35a9 8200  adda ac          15591  adda(AC)                        #62
              35aa c21d  st   [$1d]       15592  st([vTmp])                      #63
              35ab e8ae  blt  $35ae       15593  bmi(pc()+3)                     #64
              35ac fcaf  bra  $35af       15594  bra(pc()+3)                     #65
              35ad 0124  ld   [$24]       15595  ld([sysArgs+0])                 #66
              35ae 0125  ld   [$25]       15596  ld([sysArgs+1])                 #66(!)
              35af de00  st   [y,x++]     15597  st([Y,Xpp])                     #67 draw pixel4
                                          15598
              35b0 011d  ld   [$1d]       15599  ld([vTmp])                      #68
              35b1 8200  adda ac          15600  adda(AC)                        #69
              35b2 c21d  st   [$1d]       15601  st([vTmp])                      #70
              35b3 e8b6  blt  $35b6       15602  bmi(pc()+3)                     #71
              35b4 fcb7  bra  $35b7       15603  bra(pc()+3)                     #72
              35b5 0124  ld   [$24]       15604  ld([sysArgs+0])                 #73
              35b6 0125  ld   [$25]       15605  ld([sysArgs+1])                 #73(!)
              35b7 de00  st   [y,x++]     15606  st([Y,Xpp])                     #74 draw pixel5
                                          15607
              35b8 011d  ld   [$1d]       15608  ld([vTmp])                      #75
              35b9 8200  adda ac          15609  adda(AC)                        #76
              35ba c21d  st   [$1d]       15610  st([vTmp])                      #77
              35bb e8be  blt  $35be       15611  bmi(pc()+3)                     #78
              35bc fcbf  bra  $35bf       15612  bra(pc()+3)                     #79
              35bd 0124  ld   [$24]       15613  ld([sysArgs+0])                 #80
              35be 0125  ld   [$25]       15614  ld([sysArgs+1])                 #80(!)
              35bf de00  st   [y,x++]     15615  st([Y,Xpp])                     #81 draw pixel6
                                          15616
              35c0 011d  ld   [$1d]       15617  ld([vTmp])                      #82
              35c1 8200  adda ac          15618  adda(AC)                        #83
              35c2 c21d  st   [$1d]       15619  st([vTmp])                      #84
              35c3 e8c6  blt  $35c6       15620  bmi(pc()+3)                     #85
              35c4 fcc7  bra  $35c7       15621  bra(pc()+3)                     #86
              35c5 0124  ld   [$24]       15622  ld([sysArgs+0])                 #87
              35c6 0125  ld   [$25]       15623  ld([sysArgs+1])                 #87(!)
              35c7 de00  st   [y,x++]     15624  st([Y,Xpp])                     #88 draw pixel7
                                          15625
              35c8 0119  ld   [$19]       15626  ld([vAC+1])                     #89
              35c9 8001  adda $01         15627  adda(1)                         #90
              35ca c219  st   [$19]       15628  st([vAC+1])                     #91
                                          15629
              35cb 112b  ld   [$2b],x     15630  ld([sysArgs+7],X)               #92 textFont addr
              35cc 0500  ld   [x]         15631  ld([X])                         #93
              35cd 8001  adda $01         15632  adda(1)                         #94
              35ce c600  st   [x]         15633  st([X])                         #95 increment next byte address
                                          15634
              35cf 0126  ld   [$26]       15635  ld([sysArgs+2])                 #96 LUP counter, (3 LUP's per 4x6 char)
              35d0 a001  suba $01         15636  suba(1)                         #97
              35d1 f0d8  beq  .prn4x6#100 15637  beq('.prn4x6#100')              #98
              35d2 c226  st   [$26]       15638  st([sysArgs+2])                 #99
              35d3 0022  ld   $22         15639  ld(hi('PREFX2_PAGE'))           #100 ENTER is at $(n-1)ff, where n = instruction page
              35d4 c202  st   [$02]       15640  st([vCpuSelect])                #101 restore PREFX2 instruction page
              35d5 9401  adda $01,y       15641  adda(1,Y)                       #102 restart instruction
              35d6 e000  jmp  y,$00       15642  jmp(Y,'NEXTY')                  #103
              35d7 00cb  ld   $cb         15643  ld(-106/2)                      #104
                                          15644
                                          15645  label('.prn4x6#100')
.prn4x6#100:  35d8 1403  ld   $03,y       15646  ld(hi('NEXTY'),Y)               #100
              35d9 e000  jmp  y,$00       15647  jmp(Y,'NEXTY')                  #101
              35da 00cc  ld   $cc         15648  ld(-104/2)                      #102
                                          15649
                                          15650  label('.prn4x6#17')
.prn4x6#17:   35db 0022  ld   $22         15651  ld(hi('PREFX2_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              35dc c202  st   [$02]       15652  st([vCpuSelect])                #18 restore PREFX2 instruction page
              35dd 9401  adda $01,y       15653  adda(1,Y)                       #19 retry instruction
              35de e0cb  jmp  y,$cb       15654  jmp(Y,'REENTER')                #20
              35df 00f4  ld   $f4         15655  ld(-24/2)                       #21
                                          15656
                                          15657
              35e0 0200  nop              15658  fillers(until=0xff)
              35e1 0200  nop
              35e2 0200  nop
              * 31 times
              35ff 0200  nop              15659  align(0x100, size=0x100)
                                          15660
                                          15661  #-----------------------------------------------------------------------
                                          15662  #  More vCPU instruction implementations, (0x3600)
                                          15663  #-----------------------------------------------------------------------
                                          15664  #
                                          15665  # VTBL implementation
                                          15666  label('vtbl#13')
vtbl#13:      3600 8119  adda [$19]       15667  adda([vAC+1])                   #13 y*2
              3601 1200  ld   ac,x        15668  ld(AC,X)                        #14
              3602 1401  ld   $01,y       15669  ld(1,Y)                         #15 Y,X = 0x0100 + 2*y, (0 >= y <= 127)
              3603 0d00  ld   [y,x]       15670  ld([Y,X])                       #16
              3604 c21d  st   [$1d]       15671  st([vTmp])                      #17
              3605 1400  ld   $00,y       15672  ld(0,Y)                         #18
              3606 112b  ld   [$2b],x     15673  ld([sysArgs+7],X)               #19
              3607 0118  ld   [$18]       15674  ld([vAC])                       #20
              3608 de00  st   [y,x++]     15675  st([Y,Xpp])                     #21
              3609 011d  ld   [$1d]       15676  ld([vTmp])                      #22
              360a ce00  st   [y,x]       15677  st([Y,X])                       #23
              360b 1403  ld   $03,y       15678  ld(hi('NEXTY'),Y)               #24
              360c e000  jmp  y,$00       15679  jmp(Y,'NEXTY')                  #25
              360d 00f2  ld   $f2         15680  ld(-28/2)                       #26
                                          15681
                                          15682
                                          15683  # CMPII implementation
                                          15684  label('cmpii#13')
cmpii#13:     360e c22a  st   [$2a]       15685  st([sysArgs+6])                 #13 imm1
              360f 00fd  ld   $fd         15686  ld(min(0,maxTicks-36/2))        #14
              3610 8115  adda [$15]       15687  adda([vTicks])                  #15
              3611 e832  blt  .cmpii#18   15688  blt('.cmpii#18')                #16 not enough time left, so retry
              3612 0118  ld   [$18]       15689  ld([vAC])                       #17
              3613 e817  blt  cmpii#20    15690  bmi('cmpii#20')                 #18
              3614 a12a  suba [$2a]       15691  suba([sysArgs+6])               #19 imm0
              3615 fc19  bra  cmpii#22    15692  bra('cmpii#22')                 #20
              3616 412a  ora  [$2a]       15693  ora([sysArgs+6])                #21
                                          15694
                                          15695  label('cmpii#20')
cmpii#20:     3617 212a  anda [$2a]       15696  anda([sysArgs+6])               #20
              3618 0200  nop              15697  nop()                           #21
                                          15698
                                          15699  label('cmpii#22')
cmpii#22:     3619 f421  bge  cmpii#24    15700  bpl('cmpii#24')                 #22
              361a 0118  ld   [$18]       15701  ld([vAC])                       #23
              361b 00ff  ld   $ff         15702  ld(0xFF)                        #24 vAC < imm0
              361c c218  st   [$18]       15703  st([vAC])                       #25
              361d c219  st   [$19]       15704  st([vAC+1])                     #26
              361e 1403  ld   $03,y       15705  ld(hi('REENTER'),Y)             #27
              361f e0cb  jmp  y,$cb       15706  jmp(Y,'REENTER')                #28
              3620 00f0  ld   $f0         15707  ld(-32/2)                       #29
                                          15708
                                          15709  label('cmpii#24')
cmpii#24:     3621 e825  blt  cmpii#26    15710  bmi('cmpii#26')                 #24
              3622 a12b  suba [$2b]       15711  suba([sysArgs+7])               #25 imm1
              3623 fc27  bra  cmpii#28    15712  bra('cmpii#28')                 #26
              3624 412b  ora  [$2b]       15713  ora([sysArgs+7])                #27
                                          15714
                                          15715  label('cmpii#26')
cmpii#26:     3625 212b  anda [$2b]       15716  anda([sysArgs+7])               #26
              3626 0200  nop              15717  nop()                           #27
                                          15718
                                          15719  label('cmpii#28')
cmpii#28:     3627 e82d  blt  cmpii#30    15720  bmi('cmpii#30')                 #28
              3628 0001  ld   $01         15721  ld(0x01)                        #29 vAC >= imm1
              3629 c218  st   [$18]       15722  st([vAC])                       #30
              362a 1403  ld   $03,y       15723  ld(hi('REENTER'),Y)             #31
              362b e0cb  jmp  y,$cb       15724  jmp(Y,'REENTER')                #32
              362c 00ee  ld   $ee         15725  ld(-36/2)                       #33
                                          15726
                                          15727  label('cmpii#30')
cmpii#30:     362d 0000  ld   $00         15728  ld(0x00)                        #30 imm0 >= vAC < imm1
              362e c218  st   [$18]       15729  st([vAC])                       #31
              362f 1403  ld   $03,y       15730  ld(hi('NEXTY'),Y)               #32
              3630 e000  jmp  y,$00       15731  jmp(Y,'NEXTY')                  #33
              3631 00ee  ld   $ee         15732  ld(-36/2)                       #34
                                          15733
                                          15734  label('.cmpii#18')
.cmpii#18:    3632 0021  ld   $21         15735  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              3633 c202  st   [$02]       15736  st([vCpuSelect])                #19 restore PREFX3 instruction page
              3634 9401  adda $01,y       15737  adda(1,Y)                       #20 retry instruction
              3635 e000  jmp  y,$00       15738  jmp(Y,'NEXTY')                  #21
              3636 00f4  ld   $f4         15739  ld(-24/2)                       #22
                                          15740
                                          15741
                                          15742  # LDARRW implementation
                                          15743  label('ldarrw#13')
ldarrw#13:    3637 de00  st   [y,x++]     15744  st([Y,Xpp])                     #13 X++
              3638 c21d  st   [$1d]       15745  st([vTmp])                      #14 var
              3639 00f0  ld   $f0         15746  ld(min(0,maxTicks-62/2))        #15
              363a 8115  adda [$15]       15747  adda([vTicks])                  #16
              363b e869  blt  .ldarrw#19  15748  blt('.ldarrw#19')               #17 not enough time left, so retry
              363c 0d00  ld   [y,x]       15749  ld([Y,X])                       #18
              363d de00  st   [y,x++]     15750  st([Y,Xpp])                     #19 X++
              363e c2b0  st   [$b0]       15751  st([0xB0])                      #20 imm.lo
              363f 0d00  ld   [y,x]       15752  ld([Y,X])                       #21
              3640 c2b1  st   [$b1]       15753  st([0xB1])                      #22 imm.hi
              3641 1400  ld   $00,y       15754  ld(0,Y)                         #23
              3642 111d  ld   [$1d],x     15755  ld([vTmp],X)                    #24
              3643 0500  ld   [x]         15756  ld([X])                         #25
              3644 de00  st   [y,x++]     15757  st([Y,Xpp])                     #26 X++
              3645 c22a  st   [$2a]       15758  st([sysArgs+6])                 #27 idx.lo
              3646 0500  ld   [x]         15759  ld([X])                         #28
              3647 c22b  st   [$2b]       15760  st([sysArgs+7])                 #29 idx.hi
              3648 012a  ld   [$2a]       15761  ld([sysArgs+6])                 #30
              3649 3080  anda $80,x       15762  anda(0x80,X)                    #31
              364a 812a  adda [$2a]       15763  adda([sysArgs+6])               #32
              364b c22a  st   [$2a]       15764  st([sysArgs+6])                 #33 idx.lo*2
              364c 0500  ld   [x]         15765  ld([X])                         #34 msb idx.lo
              364d 812b  adda [$2b]       15766  adda([sysArgs+7])               #35
              364e 812b  adda [$2b]       15767  adda([sysArgs+7])               #36
              364f c22b  st   [$2b]       15768  st([sysArgs+7])                 #37 idx.hi*2
              3650 01b0  ld   [$b0]       15769  ld([0xB0])                      #38
              3651 812a  adda [$2a]       15770  adda([sysArgs+6])               #39
              3652 c2b0  st   [$b0]       15771  st([0xB0])                      #40 [0xB0] = [0xB0] + idx.lo
              3653 e857  blt  .ldarrw#43  15772  bmi('.ldarrw#43')               #41 check carry
              3654 a12a  suba [$2a]       15773  suba([sysArgs+6])               #42 restore [0xB0]
              3655 fc59  bra  .ldarrw#45  15774  bra('.ldarrw#45')               #43
              3656 412a  ora  [$2a]       15775  ora([sysArgs+6])                #44 carry in bit 7
                                          15776
                                          15777  label('.ldarrw#43')
.ldarrw#43:   3657 212a  anda [$2a]       15778  anda([sysArgs+6])               #43 carry in bit 7
              3658 0200  nop              15779  nop()                           #44
                                          15780
                                          15781  label('.ldarrw#45')
.ldarrw#45:   3659 3080  anda $80,x       15782  anda(0x80,X)                    #45
              365a 0500  ld   [x]         15783  ld([X])                         #46 carry in bit 0
              365b 81b1  adda [$b1]       15784  adda([0xB1])                    #47
              365c 952b  adda [$2b],y     15785  adda([sysArgs+7],Y)             #48 Y = [0xB1] + idx.hi*2 + carry
              365d 11b0  ld   [$b0],x     15786  ld([0xB0],X)                    #49 X = [0xB0] + idx.lo*2
              365e 0d00  ld   [y,x]       15787  ld([Y,X])                       #50
              365f de00  st   [y,x++]     15788  st([Y,Xpp])                     #51
              3660 c218  st   [$18]       15789  st([vAC])                       #52
              3661 0d00  ld   [y,x]       15790  ld([Y,X])                       #53
              3662 c219  st   [$19]       15791  st([vAC+1])                     #54
              3663 0116  ld   [$16]       15792  ld([vPC])                       #55
              3664 8002  adda $02         15793  adda(2)                         #56
              3665 c216  st   [$16]       15794  st([vPC])                       #57
              3666 1403  ld   $03,y       15795  ld(hi('NEXTY'),Y)               #58
              3667 e000  jmp  y,$00       15796  jmp(Y,'NEXTY')                  #59
              3668 00e1  ld   $e1         15797  ld(-62/2)                       #60
                                          15798
                                          15799  label('.ldarrw#19')
.ldarrw#19:   3669 0116  ld   [$16]       15800  ld([vPC])                       #19 retry instruction
              366a a002  suba $02         15801  suba(2)                         #20
              366b c216  st   [$16]       15802  st([vPC])                       #21
              366c 1403  ld   $03,y       15803  ld(hi('NEXTY'),Y)               #22
              366d e000  jmp  y,$00       15804  jmp(Y,'NEXTY')                  #23
              366e 00f3  ld   $f3         15805  ld(-26/2)                       #24
                                          15806
                                          15807
                                          15808  # STARRW implementation
                                          15809  label('starrw#13')
starrw#13:    366f 1517  ld   [$17],y     15810  ld([vPC+1],Y)                   #13 vPC.hi
              3670 de00  st   [y,x++]     15811  st([Y,Xpp])                     #14 X++
              3671 c21d  st   [$1d]       15812  st([vTmp])                      #15 var
              3672 00f0  ld   $f0         15813  ld(min(0,maxTicks-62/2))        #16
              3673 8115  adda [$15]       15814  adda([vTicks])                  #17
              3674 e8a1  blt  .starrw#20  15815  blt('.starrw#20')               #18 not enough time left, so retry
              3675 0d00  ld   [y,x]       15816  ld([Y,X])                       #19
              3676 de00  st   [y,x++]     15817  st([Y,Xpp])                     #20 X++
              3677 c2b0  st   [$b0]       15818  st([0xB0])                      #21 imm.lo
              3678 0d00  ld   [y,x]       15819  ld([Y,X])                       #22
              3679 c2b1  st   [$b1]       15820  st([0xB1])                      #23 imm.hi
              367a 1400  ld   $00,y       15821  ld(0,Y)                         #24
              367b 111d  ld   [$1d],x     15822  ld([vTmp],X)                    #25
              367c 0500  ld   [x]         15823  ld([X])                         #26
              367d de00  st   [y,x++]     15824  st([Y,Xpp])                     #27 X++
              367e c22a  st   [$2a]       15825  st([sysArgs+6])                 #28 idx.lo
              367f 0500  ld   [x]         15826  ld([X])                         #29
              3680 c22b  st   [$2b]       15827  st([sysArgs+7])                 #30 idx.hi
              3681 012a  ld   [$2a]       15828  ld([sysArgs+6])                 #31
              3682 3080  anda $80,x       15829  anda(0x80,X)                    #32
              3683 812a  adda [$2a]       15830  adda([sysArgs+6])               #33
              3684 c22a  st   [$2a]       15831  st([sysArgs+6])                 #34 idx.lo*2
              3685 0500  ld   [x]         15832  ld([X])                         #35 msb idx.lo
              3686 812b  adda [$2b]       15833  adda([sysArgs+7])               #36
              3687 812b  adda [$2b]       15834  adda([sysArgs+7])               #37
              3688 c22b  st   [$2b]       15835  st([sysArgs+7])                 #38 idx.hi*2
              3689 01b0  ld   [$b0]       15836  ld([0xB0])                      #39
              368a 812a  adda [$2a]       15837  adda([sysArgs+6])               #40
              368b c2b0  st   [$b0]       15838  st([0xB0])                      #41 [0xB0] = [0xB0] + idx.lo
              368c e890  blt  .starrw#44  15839  bmi('.starrw#44')               #42 check carry
              368d a12a  suba [$2a]       15840  suba([sysArgs+6])               #43 restore [0xB0]
              368e fc92  bra  .starrw#46  15841  bra('.starrw#46')               #44
              368f 412a  ora  [$2a]       15842  ora([sysArgs+6])                #45 carry in bit 7
                                          15843
                                          15844  label('.starrw#44')
.starrw#44:   3690 212a  anda [$2a]       15845  anda([sysArgs+6])               #44 carry in bit 7
              3691 0200  nop              15846  nop()                           #45
                                          15847
                                          15848  label('.starrw#46')
.starrw#46:   3692 3080  anda $80,x       15849  anda(0x80,X)                    #46
              3693 0500  ld   [x]         15850  ld([X])                         #47 carry in bit 0
              3694 81b1  adda [$b1]       15851  adda([0xB1])                    #48
              3695 952b  adda [$2b],y     15852  adda([sysArgs+7],Y)             #49 Y = [0xB1] + idx.hi*2 + carry
              3696 11b0  ld   [$b0],x     15853  ld([0xB0],X)                    #50 X = [0xB0] + idx.lo*2
              3697 0118  ld   [$18]       15854  ld([vAC])                       #51
              3698 de00  st   [y,x++]     15855  st([Y,Xpp])                     #52
              3699 0119  ld   [$19]       15856  ld([vAC+1])                     #53
              369a ce00  st   [y,x]       15857  st([Y,X])                       #54
              369b 0116  ld   [$16]       15858  ld([vPC])                       #55
              369c 8002  adda $02         15859  adda(2)                         #56
              369d c216  st   [$16]       15860  st([vPC])                       #57
              369e 1403  ld   $03,y       15861  ld(hi('NEXTY'),Y)               #58
              369f e000  jmp  y,$00       15862  jmp(Y,'NEXTY')                  #59
              36a0 00e1  ld   $e1         15863  ld(-62/2)                       #60
                                          15864
                                          15865  label('.starrw#20')
.starrw#20:   36a1 0116  ld   [$16]       15866  ld([vPC])                       #20 retry instruction
              36a2 a002  suba $02         15867  suba(2)                         #21
              36a3 c216  st   [$16]       15868  st([vPC])                       #22
              36a4 1403  ld   $03,y       15869  ld(hi('REENTER'),Y)             #23
              36a5 e0cb  jmp  y,$cb       15870  jmp(Y,'REENTER')                #24
              36a6 00f2  ld   $f2         15871  ld(-28/2)                       #25
                                          15872
                                          15873
                                          15874  # MULW3 implementation
                                          15875  label('mulw3#13')
mulw3#13:     36a7 00fb  ld   $fb         15876  ld(min(0,maxTicks-40/2))        #13
              36a8 8115  adda [$15]       15877  adda([vTicks])                  #14
              36a9 e8c3  blt  .mulw3#17   15878  blt('.mulw3#17')                #15 not enough time left, so retry
              36aa 0118  ld   [$18]       15879  ld([vAC])                       #16
              36ab 3080  anda $80,x       15880  anda(0x80,X)                    #17
              36ac 8118  adda [$18]       15881  adda([vAC])                     #18
              36ad c22a  st   [$2a]       15882  st([sysArgs+6])                 #19 vAC.lo*2
              36ae 0119  ld   [$19]       15883  ld([vAC+1])                     #20
              36af 8119  adda [$19]       15884  adda([vAC+1])                   #21
              36b0 8500  adda [x]         15885  adda([X])                       #22 msb vAC.lo
              36b1 c22b  st   [$2b]       15886  st([sysArgs+7])                 #23 vAC.hi*2
              36b2 0118  ld   [$18]       15887  ld([vAC])                       #24
              36b3 812a  adda [$2a]       15888  adda([sysArgs+6])               #25
              36b4 c218  st   [$18]       15889  st([vAC])                       #26 vAC.lo*2 + vAC.lo
              36b5 e8b9  blt  .mulw3#29   15890  bmi('.mulw3#29')                #27 check carry
              36b6 a12a  suba [$2a]       15891  suba([sysArgs+6])               #28 restore [vAC]
              36b7 fcbb  bra  .mulw3#31   15892  bra('.mulw3#31')                #29
              36b8 412a  ora  [$2a]       15893  ora([sysArgs+6])                #30 carry in bit 7
                                          15894
                                          15895  label('.mulw3#29')
.mulw3#29:    36b9 212a  anda [$2a]       15896  anda([sysArgs+6])               #29 carry in bit 7
              36ba 0200  nop              15897  nop()                           #30
                                          15898
                                          15899  label('.mulw3#31')
.mulw3#31:    36bb 3080  anda $80,x       15900  anda(0x80,X)                    #31
              36bc 0500  ld   [x]         15901  ld([X])                         #32 carry in bit 0
              36bd 812b  adda [$2b]       15902  adda([sysArgs+7])               #33
              36be 8119  adda [$19]       15903  adda([vAC+1])                   #34 vAC.hi*2 + vAC.hi + carry
              36bf c219  st   [$19]       15904  st([vAC+1])                     #35
              36c0 1403  ld   $03,y       15905  ld(hi('NEXTY'),Y)               #36
              36c1 e000  jmp  y,$00       15906  jmp(Y,'NEXTY')                  #37
              36c2 00ec  ld   $ec         15907  ld(-40/2)                       #38
                                          15908
                                          15909  label('.mulw3#17')
.mulw3#17:    36c3 0023  ld   $23         15910  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              36c4 c202  st   [$02]       15911  st([vCpuSelect])                #18 restore PREFX1 instruction page
              36c5 9401  adda $01,y       15912  adda(1,Y)                       #19 retry instruction
              36c6 e0cb  jmp  y,$cb       15913  jmp(Y,'REENTER')                #20
              36c7 00f4  ld   $f4         15914  ld(-24/2)                       #21
                                          15915
                                          15916
                                          15917  # MULW5 implementation
                                          15918  label('mulw5#13')
mulw5#13:     36c8 00f7  ld   $f7         15919  ld(min(0,maxTicks-48/2))        #13
              36c9 8115  adda [$15]       15920  adda([vTicks])                  #14
              36ca e8ec  blt  .mulw5#17   15921  blt('.mulw5#17')                #15 not enough time left, so retry
              36cb 0118  ld   [$18]       15922  ld([vAC])                       #16
              36cc 3080  anda $80,x       15923  anda(0x80,X)                    #17
              36cd 8118  adda [$18]       15924  adda([vAC])                     #18
              36ce c22a  st   [$2a]       15925  st([sysArgs+6])                 #19 vAC.lo*2
              36cf 0119  ld   [$19]       15926  ld([vAC+1])                     #20
              36d0 8119  adda [$19]       15927  adda([vAC+1])                   #21
              36d1 8500  adda [x]         15928  adda([X])                       #22 msb vAC.lo
              36d2 c22b  st   [$2b]       15929  st([sysArgs+7])                 #23 vAC.hi*2
              36d3 012a  ld   [$2a]       15930  ld([sysArgs+6])                 #24
              36d4 3080  anda $80,x       15931  anda(0x80,X)                    #25
              36d5 812a  adda [$2a]       15932  adda([sysArgs+6])               #26
              36d6 c22a  st   [$2a]       15933  st([sysArgs+6])                 #27 vAC.lo*4
              36d7 012b  ld   [$2b]       15934  ld([sysArgs+7])                 #28
              36d8 812b  adda [$2b]       15935  adda([sysArgs+7])               #29
              36d9 8500  adda [x]         15936  adda([X])                       #30 msb sysArgs+6
              36da c22b  st   [$2b]       15937  st([sysArgs+7])                 #31 vAC.hi*4
              36db 0118  ld   [$18]       15938  ld([vAC])                       #32
              36dc 812a  adda [$2a]       15939  adda([sysArgs+6])               #33
              36dd c218  st   [$18]       15940  st([vAC])                       #34 vAC.lo*4 + vAC.lo
              36de e8e2  blt  .mulw5#37   15941  bmi('.mulw5#37')                #35 check carry
              36df a12a  suba [$2a]       15942  suba([sysArgs+6])               #36 restore [vAC]
              36e0 fce4  bra  .mulw5#39   15943  bra('.mulw5#39')                #37
              36e1 412a  ora  [$2a]       15944  ora([sysArgs+6])                #38 carry in bit 7
                                          15945
                                          15946  label('.mulw5#37')
.mulw5#37:    36e2 212a  anda [$2a]       15947  anda([sysArgs+6])               #37 carry in bit 7
              36e3 0200  nop              15948  nop()                           #38
                                          15949
                                          15950  label('.mulw5#39')
.mulw5#39:    36e4 3080  anda $80,x       15951  anda(0x80,X)                    #39
              36e5 0500  ld   [x]         15952  ld([X])                         #40 carry in bit 0
              36e6 812b  adda [$2b]       15953  adda([sysArgs+7])               #41
              36e7 8119  adda [$19]       15954  adda([vAC+1])                   #42 vAC.hi*4 + vAC.hi + carry
              36e8 c219  st   [$19]       15955  st([vAC+1])                     #43
              36e9 1403  ld   $03,y       15956  ld(hi('NEXTY'),Y)               #44
              36ea e000  jmp  y,$00       15957  jmp(Y,'NEXTY')                  #45
              36eb 00e8  ld   $e8         15958  ld(-48/2)                       #46
                                          15959
                                          15960  label('.mulw5#17')
.mulw5#17:    36ec 0023  ld   $23         15961  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              36ed c202  st   [$02]       15962  st([vCpuSelect])                #18 restore PREFX1 instruction page
              36ee 9401  adda $01,y       15963  adda(1,Y)                       #19 retry instruction
              36ef e0cb  jmp  y,$cb       15964  jmp(Y,'REENTER')                #20
              36f0 00f4  ld   $f4         15965  ld(-24/2)                       #21
                                          15966
                                          15967
              36f1 0200  nop              15968  fillers(until=0xff)
              36f2 0200  nop
              36f3 0200  nop
              * 14 times
              36ff 0200  nop              15969  align(0x100, size=0x100)
                                          15970
                                          15971  #-----------------------------------------------------------------------
                                          15972  #  More vCPU instruction implementations, (0x3700)
                                          15973  #-----------------------------------------------------------------------
                                          15974  #
                                          15975  # PMIDIV implementation
                                          15976  label('pmidiv#13')
pmidiv#13:    3700 1400  ld   $00,y       15977  ld(0,Y)                         #13
              3701 00da  ld   $da         15978  ld(min(0,maxTicks-106/2))       #14
              3702 8115  adda [$15]       15979  adda([vTicks])                  #15
              3703 e852  blt  .pmidiv#18  15980  blt('.pmidiv#18')               #16 not enough time left, so retry
              3704 1519  ld   [$19],y     15981  ld([vAC+1],Y)                   #17
              3705 1118  ld   [$18],x     15982  ld([vAC],X)                     #18
              3706 0118  ld   [$18]       15983  ld([vAC])                       #19
              3707 8001  adda $01         15984  adda(1)                         #20
              3708 c218  st   [$18]       15985  st([vAC])                       #21
              3709 f00c  beq  $370c       15986  beq(pc()+3)                     #22
              370a fc0d  bra  $370d       15987  bra(pc()+3)                     #23
              370b 0000  ld   $00         15988  ld(0)                           #24
              370c 0001  ld   $01         15989  ld(1)                           #24 (!)
              370d 8119  adda [$19]       15990  adda([vAC+1])                   #25
              370e c219  st   [$19]       15991  st([vAC+1])                     #26 midiStream++
              370f 0d00  ld   [y,x]       15992  ld([Y,X])                       #27
              3710 c2c0  st   [$c0]       15993  st([0xC0])                      #28 midiCommand.lo
              3711 20f0  anda $f0         15994  anda(0xF0)                      #29
              3712 6090  xora $90         15995  xora(0x90)                      #30
              3713 ec57  bne  .pmidiv#33  15996  bne('.pmidiv#33')               #31 end note
              3714 1519  ld   [$19],y     15997  ld([vAC+1],Y)                   #32
              3715 1118  ld   [$18],x     15998  ld([vAC],X)                     #33
              3716 0118  ld   [$18]       15999  ld([vAC])                       #34
              3717 8001  adda $01         16000  adda(1)                         #35
              3718 c218  st   [$18]       16001  st([vAC])                       #36
              3719 f01c  beq  $371c       16002  beq(pc()+3)                     #37
              371a fc1d  bra  $371d       16003  bra(pc()+3)                     #38
              371b 0000  ld   $00         16004  ld(0)                           #39
              371c 0001  ld   $01         16005  ld(1)                           #39 (!)
              371d 8119  adda [$19]       16006  adda([vAC+1])                   #40
              371e c219  st   [$19]       16007  st([vAC+1])                     #41 midiStream++
              371f 0037  ld   $37         16008  ld(hi('pmidiv#13'))             #42
              3720 c2c1  st   [$c1]       16009  st([0xC1])                      #43
              3721 002a  ld   $2a         16010  ld('.pmidiv#59_0')              #44 low byte of low midi return address
              3722 c21d  st   [$1d]       16011  st([vTmp])                      #45
              3723 0d00  ld   [y,x]       16012  ld([Y,X])                       #46
              3724 c2c2  st   [$c2]       16013  st([0xC2])                      #47 note
              3725 a00b  suba $0b         16014  suba(11)                        #48 note -= 11
              3726 8200  adda ac          16015  adda(AC)                        #49 note*2
              3727 1409  ld   $09,y       16016  ld(hi('noteTrampoline'),Y)      #50
              3728 e0c0  jmp  y,$c0       16017  jmp(Y,'noteTrampoline')         #51
              3729 c2c3  st   [$c3]       16018  st([0xC3])                      #52 index, (low freq byte)
                                          16019  label('.pmidiv#59_0')
.pmidiv#59_0: 372a c2c2  st   [$c2]       16020  st([0xC2])                      #59 freq.lo
              372b 0031  ld   $31         16021  ld('.pmidiv#72')                #60
              372c c21d  st   [$1d]       16022  st([vTmp])                      #61 low byte of high midi return address
              372d 1409  ld   $09,y       16023  ld(hi('noteTrampoline'),Y)      #62
              372e 01c3  ld   [$c3]       16024  ld([0xC3])                      #63
              372f e0c0  jmp  y,$c0       16025  jmp(Y,'noteTrampoline')         #64
              3730 8001  adda $01         16026  adda(1)                         #65 index + 1, (high freq byte)
                                          16027  label('.pmidiv#72')
.pmidiv#72:   3731 c2c3  st   [$c3]       16028  st([0xC3])                      #72 freq.hi
              3732 01c0  ld   [$c0]       16029  ld([0xC0])                      #73 midiCommand.lo
              3733 2003  anda $03         16030  anda(3)                         #74
              3734 9401  adda $01,y       16031  adda(1,Y)                       #75 chan.hi
              3735 10fc  ld   $fc,x       16032  ld(0xFC,X)                      #76 chan.lo
              3736 01c2  ld   [$c2]       16033  ld([0xC2])                      #77
              3737 de00  st   [y,x++]     16034  st([Y,Xpp])                     #78
              3738 01c3  ld   [$c3]       16035  ld([0xC3])                      #79
              3739 ce00  st   [y,x]       16036  st([Y,X])                       #80 [chan] = freq
              373a 1519  ld   [$19],y     16037  ld([vAC+1],Y)                   #81
              373b 1118  ld   [$18],x     16038  ld([vAC],X)                     #82
              373c 0118  ld   [$18]       16039  ld([vAC])                       #83
              373d 8001  adda $01         16040  adda(1)                         #84
              373e c218  st   [$18]       16041  st([vAC])                       #85
              373f f042  beq  $3742       16042  beq(pc()+3)                     #86
              3740 fc43  bra  $3743       16043  bra(pc()+3)                     #87
              3741 0000  ld   $00         16044  ld(0)                           #88
              3742 0001  ld   $01         16045  ld(1)                           #88 (!)
              3743 8119  adda [$19]       16046  adda([vAC+1])                   #89
              3744 c219  st   [$19]       16047  st([vAC+1])                     #90 midiStream++
              3745 0d00  ld   [y,x]       16048  ld([Y,X])                       #91 volume
              3746 c21d  st   [$1d]       16049  st([vTmp])                      #92
              3747 01c0  ld   [$c0]       16050  ld([0xC0])                      #93 midiCommand.lo
              3748 2003  anda $03         16051  anda(3)                         #94
              3749 9401  adda $01,y       16052  adda(1,Y)                       #95
              374a 10fa  ld   $fa,x       16053  ld(0xFA,X)                      #96
              374b 011d  ld   [$1d]       16054  ld([vTmp])                      #97
              374c ce00  st   [y,x]       16055  st([Y,X])                       #98
              374d 0021  ld   $21         16056  ld(hi('PREFX3_PAGE'))           #99 ENTER is at $(n-1)ff, where n = instruction page
              374e c202  st   [$02]       16057  st([vCpuSelect])                #100 restore PREFX3 instruction page
              374f 9401  adda $01,y       16058  adda(1,Y)                       #101 restart instruction
              3750 e0cb  jmp  y,$cb       16059  jmp(Y,'REENTER')                #102
              3751 00cb  ld   $cb         16060  ld(-106/2)                      #103
                                          16061
                                          16062  label('.pmidiv#18')
.pmidiv#18:   3752 0021  ld   $21         16063  ld(hi('PREFX3_PAGE'))           #18 ENTER is at $(n-1)ff, where n = instruction page
              3753 c202  st   [$02]       16064  st([vCpuSelect])                #19 restore PREFX3 instruction page
              3754 9401  adda $01,y       16065  adda(1,Y)                       #20 retry instruction
              3755 e000  jmp  y,$00       16066  jmp(Y,'NEXTY')                  #21
              3756 00f4  ld   $f4         16067  ld(-24/2)                       #22
                                          16068
                                          16069  # end note
                                          16070  label('.pmidiv#33')
.pmidiv#33:   3757 01c0  ld   [$c0]       16071  ld([0xC0])                      #33 midiCommand.lo
              3758 20f0  anda $f0         16072  anda(0xF0)                      #34
              3759 6080  xora $80         16073  xora(0x80)                      #35
              375a ec68  bne  .pmidiv#38  16074  bne('.pmidiv#38')               #36 new segment
              375b 01c0  ld   [$c0]       16075  ld([0xC0])                      #37 midiCommand.lo
              375c 2003  anda $03         16076  anda(3)                         #38
              375d 9401  adda $01,y       16077  adda(1,Y)                       #39 chan.hi
              375e 10fc  ld   $fc,x       16078  ld(0xFC,X)                      #40 chan.lo
              375f dc00  st   $00,[y,x++] 16079  st(0,[Y,Xpp])                   #41
              3760 dc00  st   $00,[y,x++] 16080  st(0,[Y,Xpp])                   #42 [chan] = freq
              3761 dc00  st   $00,[y,x++] 16081  st(0,[Y,Xpp])                   #43
              3762 cc00  st   $00,[y,x]   16082  st(0,[Y,X])                     #44 stop osc
              3763 0021  ld   $21         16083  ld(hi('PREFX3_PAGE'))           #45 ENTER is at $(n-1)ff, where n = instruction page
              3764 c202  st   [$02]       16084  st([vCpuSelect])                #46 restore PREFX3 instruction page
              3765 9401  adda $01,y       16085  adda(1,Y)                       #47 restart instruction
              3766 e0cb  jmp  y,$cb       16086  jmp(Y,'REENTER')                #48
              3767 00e6  ld   $e6         16087  ld(-52/2)                       #49
                                          16088
                                          16089  # new segment
                                          16090  label('.pmidiv#38')
.pmidiv#38:   3768 01c0  ld   [$c0]       16091  ld([0xC0])                      #38 midiCommand.lo
              3769 20f0  anda $f0         16092  anda(0xF0)                      #39
              376a 60d0  xora $d0         16093  xora(0xD0)                      #40
              376b ec84  bne  .pmidiv#43  16094  bne('.pmidiv#43')               #41 new delay
              376c 1519  ld   [$19],y     16095  ld([vAC+1],Y)                   #42
              376d 1118  ld   [$18],x     16096  ld([vAC],X)                     #43
              376e 0d00  ld   [y,x]       16097  ld([Y,X])                       #44 peek(midiStream)
              376f c218  st   [$18]       16098  st([vAC])                       #45 newStream.lo
              3770 de00  st   [y,x++]     16099  st([Y,Xpp])                     #46
              3771 0d00  ld   [y,x]       16100  ld([Y,X])                       #47 peek(midiStream + 1)
              3772 c219  st   [$19]       16101  st([vAC+1])                     #48 newStream.hi
              3773 1400  ld   $00,y       16102  ld(0,Y)                         #49
              3774 112a  ld   [$2a],x     16103  ld([sysArgs+6],X)               #50 midiStream.lo
              3775 0118  ld   [$18]       16104  ld([vAC])                       #51
              3776 de00  st   [y,x++]     16105  st([Y,Xpp])                     #52
              3777 0119  ld   [$19]       16106  ld([vAC+1])                     #53
              3778 ce00  st   [y,x]       16107  st([Y,X])                       #54 midiStream = vAC
              3779 0118  ld   [$18]       16108  ld([vAC])                       #55
              377a 4119  ora  [$19]       16109  ora([vAC+1])                    #56
                                          16110  bne('.pmidiv#59_1')             #57 continue
              377b ec7f  bne  .pmidiv#59_1
              377c 1403  ld   $03,y       16111  ld(hi('NEXTY'),Y)               #58 finished
              377d e000  jmp  y,$00       16112  jmp(Y,'NEXTY')                  #59
              377e 00e1  ld   $e1         16113  ld(-62/2)                       #60
                                          16114
                                          16115  label('.pmidiv#59_1')
.pmidiv#59_1: 377f 0021  ld   $21         16116  ld(hi('PREFX3_PAGE'))           #59 ENTER is at $(n-1)ff, where n = instruction page
              3780 c202  st   [$02]       16117  st([vCpuSelect])                #60 restore PREFX3 instruction page
              3781 9401  adda $01,y       16118  adda(1,Y)                       #61 restart instruction
              3782 e0cb  jmp  y,$cb       16119  jmp(Y,'REENTER')                #62
              3783 00df  ld   $df         16120  ld(-66/2)                       #63
                                          16121
                                          16122  # new delay
                                          16123  label('.pmidiv#43')
.pmidiv#43:   3784 1400  ld   $00,y       16124  ld(0,Y)                         #43
              3785 112a  ld   [$2a],x     16125  ld([sysArgs+6],X)               #44 midiStream.lo
              3786 0118  ld   [$18]       16126  ld([vAC])                       #45
              3787 de00  st   [y,x++]     16127  st([Y,Xpp])                     #46
              3788 0119  ld   [$19]       16128  ld([vAC+1])                     #47
              3789 ce00  st   [y,x]       16129  st([Y,X])                       #48 midiStream = vAC
              378a 112b  ld   [$2b],x     16130  ld([sysArgs+7],X)               #49 midiDelay.lo
              378b 01c0  ld   [$c0]       16131  ld([0xC0])                      #50 midiCommand.lo, (delay)
              378c 207f  anda $7f         16132  anda(0x7F)                      #51
              378d c600  st   [x]         16133  st([X])                         #52
              378e 1403  ld   $03,y       16134  ld(hi('REENTER'),Y)             #53
              378f e0cb  jmp  y,$cb       16135  jmp(Y,'REENTER')                #54
              3790 00e3  ld   $e3         16136  ld(-58/2)                       #55
                                          16137
                                          16138
                                          16139  # MULW6 implementation
                                          16140  label('mulw6#13')
mulw6#13:     3791 00f6  ld   $f6         16141  ld(min(0,maxTicks-50/2))        #13
              3792 8115  adda [$15]       16142  adda([vTicks])                  #14
              3793 e8b7  blt  .mulw6#17   16143  blt('.mulw6#17')                #15 not enough time left, so retry
              3794 0118  ld   [$18]       16144  ld([vAC])                       #16
              3795 3080  anda $80,x       16145  anda(0x80,X)                    #17
              3796 8118  adda [$18]       16146  adda([vAC])                     #18
              3797 c22a  st   [$2a]       16147  st([sysArgs+6])                 #19 vAC.lo*2
              3798 c2b0  st   [$b0]       16148  st([0xB0])                      #20
              3799 0119  ld   [$19]       16149  ld([vAC+1])                     #21
              379a 8119  adda [$19]       16150  adda([vAC+1])                   #22
              379b 8500  adda [x]         16151  adda([X])                       #23 msb vAC.lo
              379c c22b  st   [$2b]       16152  st([sysArgs+7])                 #24 vAC.hi*2
              379d c2b1  st   [$b1]       16153  st([0xB1])                      #25
              379e 012a  ld   [$2a]       16154  ld([sysArgs+6])                 #26
              379f 3080  anda $80,x       16155  anda(0x80,X)                    #27
              37a0 812a  adda [$2a]       16156  adda([sysArgs+6])               #28
              37a1 c22a  st   [$2a]       16157  st([sysArgs+6])                 #29 vAC.lo*4
              37a2 012b  ld   [$2b]       16158  ld([sysArgs+7])                 #30
              37a3 812b  adda [$2b]       16159  adda([sysArgs+7])               #31
              37a4 8500  adda [x]         16160  adda([X])                       #32 msb sysArgs+6
              37a5 c22b  st   [$2b]       16161  st([sysArgs+7])                 #33 vAC.hi*4
              37a6 01b0  ld   [$b0]       16162  ld([0xB0])                      #34
              37a7 812a  adda [$2a]       16163  adda([sysArgs+6])               #35
              37a8 c218  st   [$18]       16164  st([vAC])                       #36 vAC.lo*4 + vAC.lo*2
              37a9 e8ad  blt  .mulw6#39   16165  bmi('.mulw6#39')                #37 check carry
              37aa a12a  suba [$2a]       16166  suba([sysArgs+6])               #38 restore [vAC]
              37ab fcaf  bra  .mulw6#41   16167  bra('.mulw6#41')                #39
              37ac 412a  ora  [$2a]       16168  ora([sysArgs+6])                #40 carry in bit 7
                                          16169
                                          16170  label('.mulw6#39')
.mulw6#39:    37ad 212a  anda [$2a]       16171  anda([sysArgs+6])               #39 carry in bit 7
              37ae 0200  nop              16172  nop()                           #40
                                          16173
                                          16174  label('.mulw6#41')
.mulw6#41:    37af 3080  anda $80,x       16175  anda(0x80,X)                    #41
              37b0 0500  ld   [x]         16176  ld([X])                         #42 carry in bit 0
              37b1 812b  adda [$2b]       16177  adda([sysArgs+7])               #43
              37b2 81b1  adda [$b1]       16178  adda([0xB1])                    #44 vAC.hi*4 + vAC.hi*2 + carry
              37b3 c219  st   [$19]       16179  st([vAC+1])                     #45
              37b4 1403  ld   $03,y       16180  ld(hi('NEXTY'),Y)               #46
              37b5 e000  jmp  y,$00       16181  jmp(Y,'NEXTY')                  #47
              37b6 00e7  ld   $e7         16182  ld(-50/2)                       #48
                                          16183
                                          16184  label('.mulw6#17')
.mulw6#17:    37b7 0023  ld   $23         16185  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              37b8 c202  st   [$02]       16186  st([vCpuSelect])                #18 restore PREFX1 instruction page
              37b9 9401  adda $01,y       16187  adda(1,Y)                       #19 retry instruction
              37ba e0cb  jmp  y,$cb       16188  jmp(Y,'REENTER')                #20
              37bb 00f4  ld   $f4         16189  ld(-24/2)                       #21
                                          16190
                                          16191
                                          16192  # MULW7 implementation, (overflows at the same rate as MULW8)
                                          16193  label('mulw7#13')
mulw7#13:     37bc 00f2  ld   $f2         16194  ld(min(0,maxTicks-58/2))        #13
              37bd 8115  adda [$15]       16195  adda([vTicks])                  #14
              37be e8ea  blt  .mulw7#17   16196  blt('.mulw7#17')                #15 not enough time left, so retry
              37bf 0118  ld   [$18]       16197  ld([vAC])                       #16
              37c0 3080  anda $80,x       16198  anda(0x80,X)                    #17
              37c1 8118  adda [$18]       16199  adda([vAC])                     #18
              37c2 c22a  st   [$2a]       16200  st([sysArgs+6])                 #19 vAC.lo*2
              37c3 0119  ld   [$19]       16201  ld([vAC+1])                     #20
              37c4 8119  adda [$19]       16202  adda([vAC+1])                   #21
              37c5 8500  adda [x]         16203  adda([X])                       #22 msb vAC.lo
              37c6 c22b  st   [$2b]       16204  st([sysArgs+7])                 #23 vAC.hi*2
              37c7 012a  ld   [$2a]       16205  ld([sysArgs+6])                 #24
              37c8 3080  anda $80,x       16206  anda(0x80,X)                    #25
              37c9 812a  adda [$2a]       16207  adda([sysArgs+6])               #26
              37ca c22a  st   [$2a]       16208  st([sysArgs+6])                 #27 vAC.lo*4
              37cb 012b  ld   [$2b]       16209  ld([sysArgs+7])                 #28
              37cc 812b  adda [$2b]       16210  adda([sysArgs+7])               #29
              37cd 8500  adda [x]         16211  adda([X])                       #30 msb sysArgs+6
              37ce c22b  st   [$2b]       16212  st([sysArgs+7])                 #31 vAC.hi*4
              37cf 012a  ld   [$2a]       16213  ld([sysArgs+6])                 #32
              37d0 3080  anda $80,x       16214  anda(0x80,X)                    #33
              37d1 812a  adda [$2a]       16215  adda([sysArgs+6])               #34
              37d2 c22a  st   [$2a]       16216  st([sysArgs+6])                 #35 vAC.lo*8
              37d3 012b  ld   [$2b]       16217  ld([sysArgs+7])                 #36
              37d4 812b  adda [$2b]       16218  adda([sysArgs+7])               #37
              37d5 8500  adda [x]         16219  adda([X])                       #38 msb sysArgs+6
              37d6 c22b  st   [$2b]       16220  st([sysArgs+7])                 #39 vAC.hi*8
              37d7 012a  ld   [$2a]       16221  ld([sysArgs+6])                 #40
              37d8 e8dd  blt  .mulw7#43   16222  bmi('.mulw7#43')                #41 check borrow
              37d9 a118  suba [$18]       16223  suba([vAC])                     #42
              37da c22a  st   [$2a]       16224  st([sysArgs+6])                 #43 vAC.lo*8 - vAC.lo
              37db fce0  bra  .mulw7#46   16225  bra('.mulw7#46')                #44
              37dc 4118  ora  [$18]       16226  ora([vAC])                      #45 borrow in bit 7
                                          16227
                                          16228  label('.mulw7#43')
.mulw7#43:    37dd c22a  st   [$2a]       16229  st([sysArgs+6])                 #43 vAC.lo*8 - vAC.lo
              37de 2118  anda [$18]       16230  anda([vAC])                     #44 borrow in bit 7
              37df 0200  nop              16231  nop()                           #45
                                          16232
                                          16233  label('.mulw7#46')
.mulw7#46:    37e0 3080  anda $80,x       16234  anda(0x80,X)                    #46
              37e1 012a  ld   [$2a]       16235  ld([sysArgs+6])                 #47
              37e2 c218  st   [$18]       16236  st([vAC])                       #48 vAC.lo*8 - vAC.lo
              37e3 012b  ld   [$2b]       16237  ld([sysArgs+7])                 #49
              37e4 a500  suba [x]         16238  suba([X])                       #50
              37e5 a119  suba [$19]       16239  suba([vAC+1])                   #51
              37e6 c219  st   [$19]       16240  st([vAC+1])                     #52 vAC.hi*8 - borrow - vAC.hi
              37e7 1403  ld   $03,y       16241  ld(hi('REENTER'),Y)             #53
              37e8 e0cb  jmp  y,$cb       16242  jmp(Y,'REENTER')                #54
              37e9 00e3  ld   $e3         16243  ld(-58/2)                       #55
                                          16244
                                          16245  label('.mulw7#17')
.mulw7#17:    37ea 0023  ld   $23         16246  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              37eb c202  st   [$02]       16247  st([vCpuSelect])                #18 restore PREFX1 instruction page
              37ec 9401  adda $01,y       16248  adda(1,Y)                       #19 retry instruction
              37ed e0cb  jmp  y,$cb       16249  jmp(Y,'REENTER')                #20
              37ee 00f4  ld   $f4         16250  ld(-24/2)                       #21
                                          16251
                                          16252
              37ef 0200  nop              16253  fillers(until=0xff)
              37f0 0200  nop
              37f1 0200  nop
              * 16 times
              37ff 0200  nop              16254  align(0x100, size=0x100)
                                          16255
                                          16256  #-----------------------------------------------------------------------
                                          16257  #  More vCPU instruction implementations, (0x3800)
                                          16258  #-----------------------------------------------------------------------
                                          16259  #
                                          16260  # MULW8 implementation
                                          16261  label('mulw8#13')
mulw8#13:     3800 00f9  ld   $f9         16262  ld(min(0,maxTicks-44/2))        #13
              3801 8115  adda [$15]       16263  adda([vTicks])                  #14
              3802 e81e  blt  .mulw8#17   16264  blt('.mulw8#17')                #15 not enough time left, so retry
              3803 0118  ld   [$18]       16265  ld([vAC])                       #16
              3804 3080  anda $80,x       16266  anda(0x80,X)                    #17
              3805 8118  adda [$18]       16267  adda([vAC])                     #18
              3806 c22a  st   [$2a]       16268  st([sysArgs+6])                 #19 vAC.lo*2
              3807 0119  ld   [$19]       16269  ld([vAC+1])                     #20
              3808 8119  adda [$19]       16270  adda([vAC+1])                   #21
              3809 8500  adda [x]         16271  adda([X])                       #22 msb vAC.lo
              380a c22b  st   [$2b]       16272  st([sysArgs+7])                 #23 vAC.hi*2
              380b 012a  ld   [$2a]       16273  ld([sysArgs+6])                 #24
              380c 3080  anda $80,x       16274  anda(0x80,X)                    #25
              380d 812a  adda [$2a]       16275  adda([sysArgs+6])               #26
              380e c22a  st   [$2a]       16276  st([sysArgs+6])                 #27 vAC.lo*4
              380f 012b  ld   [$2b]       16277  ld([sysArgs+7])                 #28
              3810 812b  adda [$2b]       16278  adda([sysArgs+7])               #29
              3811 8500  adda [x]         16279  adda([X])                       #30 msb sysArgs+6
              3812 c22b  st   [$2b]       16280  st([sysArgs+7])                 #31 vAC.hi*4
              3813 012a  ld   [$2a]       16281  ld([sysArgs+6])                 #32
              3814 3080  anda $80,x       16282  anda(0x80,X)                    #33
              3815 812a  adda [$2a]       16283  adda([sysArgs+6])               #34
              3816 c218  st   [$18]       16284  st([vAC])                       #35 vAC.lo*8
              3817 012b  ld   [$2b]       16285  ld([sysArgs+7])                 #36
              3818 812b  adda [$2b]       16286  adda([sysArgs+7])               #37
              3819 8500  adda [x]         16287  adda([X])                       #38 msb sysArgs+6
              381a c219  st   [$19]       16288  st([vAC+1])                     #39 vAC.hi*8
              381b 1403  ld   $03,y       16289  ld(hi('NEXTY'),Y)               #40
              381c e000  jmp  y,$00       16290  jmp(Y,'NEXTY')                  #41
              381d 00ea  ld   $ea         16291  ld(-44/2)                       #42
                                          16292
                                          16293  label('.mulw8#17')
.mulw8#17:    381e 0023  ld   $23         16294  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              381f c202  st   [$02]       16295  st([vCpuSelect])                #18 restore PREFX1 instruction page
              3820 9401  adda $01,y       16296  adda(1,Y)                       #19 retry instruction
              3821 e0cb  jmp  y,$cb       16297  jmp(Y,'REENTER')                #20
              3822 00f4  ld   $f4         16298  ld(-24/2)                       #21
                                          16299
                                          16300
                                          16301  # MULW9 implementation
                                          16302  label('mulw9#13')
mulw9#13:     3823 00f3  ld   $f3         16303  ld(min(0,maxTicks-56/2))        #13
              3824 8115  adda [$15]       16304  adda([vTicks])                  #14
              3825 e84f  blt  .mulw9#17   16305  blt('.mulw9#17')                #15 not enough time left, so retry
              3826 0118  ld   [$18]       16306  ld([vAC])                       #16
              3827 3080  anda $80,x       16307  anda(0x80,X)                    #17
              3828 8118  adda [$18]       16308  adda([vAC])                     #18
              3829 c22a  st   [$2a]       16309  st([sysArgs+6])                 #19 vAC.lo*2
              382a 0119  ld   [$19]       16310  ld([vAC+1])                     #20
              382b 8119  adda [$19]       16311  adda([vAC+1])                   #21
              382c 8500  adda [x]         16312  adda([X])                       #22 msb vAC.lo
              382d c22b  st   [$2b]       16313  st([sysArgs+7])                 #23 vAC.hi*2
              382e 012a  ld   [$2a]       16314  ld([sysArgs+6])                 #24
              382f 3080  anda $80,x       16315  anda(0x80,X)                    #25
              3830 812a  adda [$2a]       16316  adda([sysArgs+6])               #26
              3831 c22a  st   [$2a]       16317  st([sysArgs+6])                 #27 vAC.lo*4
              3832 012b  ld   [$2b]       16318  ld([sysArgs+7])                 #28
              3833 812b  adda [$2b]       16319  adda([sysArgs+7])               #29
              3834 8500  adda [x]         16320  adda([X])                       #30 msb sysArgs+6
              3835 c22b  st   [$2b]       16321  st([sysArgs+7])                 #31 vAC.hi*4
              3836 012a  ld   [$2a]       16322  ld([sysArgs+6])                 #32
              3837 3080  anda $80,x       16323  anda(0x80,X)                    #33
              3838 812a  adda [$2a]       16324  adda([sysArgs+6])               #34
              3839 c22a  st   [$2a]       16325  st([sysArgs+6])                 #35 vAC.lo*8
              383a 012b  ld   [$2b]       16326  ld([sysArgs+7])                 #36
              383b 812b  adda [$2b]       16327  adda([sysArgs+7])               #37
              383c 8500  adda [x]         16328  adda([X])                       #38 msb sysArgs+6
              383d c22b  st   [$2b]       16329  st([sysArgs+7])                 #39 vAC.hi*8
              383e 0118  ld   [$18]       16330  ld([vAC])                       #40
              383f 812a  adda [$2a]       16331  adda([sysArgs+6])               #41
              3840 c218  st   [$18]       16332  st([vAC])                       #42 vAC.lo*8 + vAC.lo
              3841 e845  blt  .mulw9#45   16333  bmi('.mulw9#45')                #43 check carry
              3842 a12a  suba [$2a]       16334  suba([sysArgs+6])               #44 restore [vAC]
              3843 fc47  bra  .mulw9#47   16335  bra('.mulw9#47')                #45
              3844 412a  ora  [$2a]       16336  ora([sysArgs+6])                #46 carry in bit 7
                                          16337
                                          16338  label('.mulw9#45')
.mulw9#45:    3845 212a  anda [$2a]       16339  anda([sysArgs+6])               #45 carry in bit 7
              3846 0200  nop              16340  nop()                           #46
                                          16341
                                          16342  label('.mulw9#47')
.mulw9#47:    3847 3080  anda $80,x       16343  anda(0x80,X)                    #47
              3848 0500  ld   [x]         16344  ld([X])                         #48 carry in bit 0
              3849 812b  adda [$2b]       16345  adda([sysArgs+7])               #49
              384a 8119  adda [$19]       16346  adda([vAC+1])                   #50 vAC.hi*8 + vAC.hi + carry
              384b c219  st   [$19]       16347  st([vAC+1])                     #51
              384c 1403  ld   $03,y       16348  ld(hi('NEXTY'),Y)               #52
              384d e000  jmp  y,$00       16349  jmp(Y,'NEXTY')                  #53
              384e 00e4  ld   $e4         16350  ld(-56/2)                       #54
                                          16351
                                          16352  label('.mulw9#17')
.mulw9#17:    384f 0023  ld   $23         16353  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              3850 c202  st   [$02]       16354  st([vCpuSelect])                #18 restore PREFX1 instruction page
              3851 9401  adda $01,y       16355  adda(1,Y)                       #19 retry instruction
              3852 e0cb  jmp  y,$cb       16356  jmp(Y,'REENTER')                #20
              3853 00f4  ld   $f4         16357  ld(-24/2)                       #21
                                          16358
                                          16359
                                          16360  # MULW10 implementation
                                          16361  label('mulw10#13')
mulw10#13:    3854 00f2  ld   $f2         16362  ld(min(0,maxTicks-58/2))        #13
              3855 8115  adda [$15]       16363  adda([vTicks])                  #14
              3856 e882  blt  .mulw10#17  16364  blt('.mulw10#17')               #15 not enough time left, so retry
              3857 0118  ld   [$18]       16365  ld([vAC])                       #16
              3858 3080  anda $80,x       16366  anda(0x80,X)                    #17
              3859 8118  adda [$18]       16367  adda([vAC])                     #18
              385a c22a  st   [$2a]       16368  st([sysArgs+6])                 #19 vAC.lo*2
              385b c2b0  st   [$b0]       16369  st([0xB0])                      #20
              385c 0119  ld   [$19]       16370  ld([vAC+1])                     #21
              385d 8119  adda [$19]       16371  adda([vAC+1])                   #22
              385e 8500  adda [x]         16372  adda([X])                       #23 msb vAC.lo
              385f c22b  st   [$2b]       16373  st([sysArgs+7])                 #24 vAC.hi*2
              3860 c2b1  st   [$b1]       16374  st([0xB1])                      #25
              3861 012a  ld   [$2a]       16375  ld([sysArgs+6])                 #26
              3862 3080  anda $80,x       16376  anda(0x80,X)                    #27
              3863 812a  adda [$2a]       16377  adda([sysArgs+6])               #28
              3864 c22a  st   [$2a]       16378  st([sysArgs+6])                 #29 vAC.lo*4
              3865 012b  ld   [$2b]       16379  ld([sysArgs+7])                 #30
              3866 812b  adda [$2b]       16380  adda([sysArgs+7])               #31
              3867 8500  adda [x]         16381  adda([X])                       #32 msb sysArgs+6
              3868 c22b  st   [$2b]       16382  st([sysArgs+7])                 #33 vAC.hi*4
              3869 012a  ld   [$2a]       16383  ld([sysArgs+6])                 #34
              386a 3080  anda $80,x       16384  anda(0x80,X)                    #35
              386b 812a  adda [$2a]       16385  adda([sysArgs+6])               #36
              386c c22a  st   [$2a]       16386  st([sysArgs+6])                 #37 vAC.lo*8
              386d 012b  ld   [$2b]       16387  ld([sysArgs+7])                 #38
              386e 812b  adda [$2b]       16388  adda([sysArgs+7])               #39
              386f 8500  adda [x]         16389  adda([X])                       #40 msb sysArgs+6
              3870 c22b  st   [$2b]       16390  st([sysArgs+7])                 #41 vAC.hi*8
              3871 01b0  ld   [$b0]       16391  ld([0xB0])                      #42
              3872 812a  adda [$2a]       16392  adda([sysArgs+6])               #43
              3873 c218  st   [$18]       16393  st([vAC])                       #44 vAC.lo*8 + vAC.lo*2
              3874 e878  blt  .mulw10#47  16394  bmi('.mulw10#47')               #45 check carry
              3875 a12a  suba [$2a]       16395  suba([sysArgs+6])               #46 restore [vAC]
              3876 fc7a  bra  .mulw10#49  16396  bra('.mulw10#49')               #47
              3877 412a  ora  [$2a]       16397  ora([sysArgs+6])                #48 carry in bit 7
                                          16398
                                          16399  label('.mulw10#47')
.mulw10#47:   3878 212a  anda [$2a]       16400  anda([sysArgs+6])               #47 carry in bit 7
              3879 0200  nop              16401  nop()                           #48
                                          16402
                                          16403  label('.mulw10#49')
.mulw10#49:   387a 3080  anda $80,x       16404  anda(0x80,X)                    #49
              387b 0500  ld   [x]         16405  ld([X])                         #50 carry in bit 0
              387c 812b  adda [$2b]       16406  adda([sysArgs+7])               #51
              387d 81b1  adda [$b1]       16407  adda([0xB1])                    #52 vAC.hi*8 + vAC.hi*2 + carry
              387e c219  st   [$19]       16408  st([vAC+1])                     #53
              387f 1403  ld   $03,y       16409  ld(hi('NEXTY'),Y)               #54
              3880 e000  jmp  y,$00       16410  jmp(Y,'NEXTY')                  #55
              3881 00e3  ld   $e3         16411  ld(-58/2)                       #56
                                          16412
                                          16413  label('.mulw10#17')
.mulw10#17:   3882 0023  ld   $23         16414  ld(hi('PREFX1_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              3883 c202  st   [$02]       16415  st([vCpuSelect])                #18 restore PREFX1 instruction page
              3884 9401  adda $01,y       16416  adda(1,Y)                       #19 retry instruction
              3885 e0cb  jmp  y,$cb       16417  jmp(Y,'REENTER')                #20
              3886 00f4  ld   $f4         16418  ld(-24/2)                       #21
                                          16419
                                          16420
                                          16421  # DOKEI+ implementation
                                          16422  label('dokei+#13')
dokei+#13:    3887 1517  ld   [$17],y     16423  ld([vPC+1],Y)                   #13
              3888 c21d  st   [$1d]       16424  st([vTmp])                      #14 imm.hi
              3889 de00  st   [y,x++]     16425  st([Y,Xpp])                     #15 X++
              388a 00fb  ld   $fb         16426  ld(min(0,maxTicks-40/2))        #16
              388b 8115  adda [$15]       16427  adda([vTicks])                  #17
              388c e8a6  blt  .dokei+#20  16428  blt('.dokei+#20')               #18 not enough time left, so retry
              388d 0d00  ld   [y,x]       16429  ld([Y,X])                       #19 imm.lo
              388e 1519  ld   [$19],y     16430  ld([vAC+1],Y)                   #20
              388f 1118  ld   [$18],x     16431  ld([vAC],X)                     #21
              3890 de00  st   [y,x++]     16432  st([Y,Xpp])                     #22
              3891 011d  ld   [$1d]       16433  ld([vTmp])                      #23
              3892 ce00  st   [y,x]       16434  st([Y,X])                       #24
              3893 0118  ld   [$18]       16435  ld([vAC])                       #25
              3894 8002  adda $02         16436  adda(2)                         #26
              3895 c218  st   [$18]       16437  st([vAC])                       #27
              3896 20fe  anda $fe         16438  anda(0xFE)                      #28
              3897 f09e  beq  .dokei+#31  16439  beq('.dokei+#31')               #29 if low byte is 0x00 or 0x01
              3898 0116  ld   [$16]       16440  ld([vPC])                       #30
              3899 8001  adda $01         16441  adda(1)                         #31
              389a c216  st   [$16]       16442  st([vPC])                       #32
              389b 1403  ld   $03,y       16443  ld(hi('REENTER'),Y)             #33
              389c e0cb  jmp  y,$cb       16444  jmp(Y,'REENTER')                #34
              389d 00ed  ld   $ed         16445  ld(-38/2)                       #35
                                          16446
                                          16447  label('.dokei+#31')
.dokei+#31:   389e 8001  adda $01         16448  adda(1)                         #31
              389f c216  st   [$16]       16449  st([vPC])                       #32
              38a0 0119  ld   [$19]       16450  ld([vAC+1])                     #33
              38a1 8001  adda $01         16451  adda(1)                         #34
              38a2 c219  st   [$19]       16452  st([vAC+1])                     #35
              38a3 1403  ld   $03,y       16453  ld(hi('NEXTY'),Y)               #36
              38a4 e000  jmp  y,$00       16454  jmp(Y,'NEXTY')                  #37
              38a5 00ec  ld   $ec         16455  ld(-40/2)                       #38
                                          16456
                                          16457  label('.dokei+#20')
.dokei+#20:   38a6 0116  ld   [$16]       16458  ld([vPC])                       #20 retry instruction
              38a7 a002  suba $02         16459  suba(2)                         #21
              38a8 c216  st   [$16]       16460  st([vPC])                       #22
              38a9 1403  ld   $03,y       16461  ld(hi('REENTER'),Y)             #23
              38aa e0cb  jmp  y,$cb       16462  jmp(Y,'REENTER')                #24
              38ab 00f2  ld   $f2         16463  ld(-28/2)                       #25
                                          16464
                                          16465
                                          16466  # DEEKRI implementation
                                          16467  label('deekri#13')
deekri#13:    38ac 3080  anda $80,x       16468  anda(0x80,X)                    #13 msb of immediate 8bit index, (sysArgs+7)
              38ad 812b  adda [$2b]       16469  adda([sysArgs+7])               #14
              38ae c22a  st   [$2a]       16470  st([sysArgs+6])                 #15 index.lo*2
              38af 00fa  ld   $fa         16471  ld(min(0,maxTicks-42/2))        #16
              38b0 8115  adda [$15]       16472  adda([vTicks])                  #17
              38b1 e8ca  blt  .deekri#20  16473  blt('.deekri#20')               #18 not enough time left, so retry
              38b2 0500  ld   [x]         16474  ld([X])                         #19 msb index.lo
              38b3 c22b  st   [$2b]       16475  st([sysArgs+7])                 #20 index.hi
              38b4 0118  ld   [$18]       16476  ld([vAC])                       #21
              38b5 812a  adda [$2a]       16477  adda([sysArgs+6])               #22
              38b6 c21d  st   [$1d]       16478  st([vTmp])                      #23 vTmp = vAC.lo + index.lo
              38b7 e8bb  blt  .deekri#26  16479  bmi('.deekri#26')               #24 check carry
              38b8 a12a  suba [$2a]       16480  suba([sysArgs+6])               #25 restore vAC.lo
              38b9 fcbd  bra  .deekri#28  16481  bra('.deekri#28')               #26
              38ba 412a  ora  [$2a]       16482  ora([sysArgs+6])                #27 carry in bit 7
                                          16483
                                          16484  label('.deekri#26')
.deekri#26:   38bb 212a  anda [$2a]       16485  anda([sysArgs+6])               #26 carry in bit 7
              38bc 0200  nop              16486  nop()                           #27
                                          16487
                                          16488  label('.deekri#28')
.deekri#28:   38bd 3080  anda $80,x       16489  anda(0x80,X)                    #28
              38be 0500  ld   [x]         16490  ld([X])                         #29 carry in bit 0
              38bf 8119  adda [$19]       16491  adda([vAC+1])                   #30
              38c0 952b  adda [$2b],y     16492  adda([sysArgs+7],Y)             #31 Y = vAC.hi + index.hi + carry
              38c1 111d  ld   [$1d],x     16493  ld([vTmp],X)                    #32
              38c2 0d00  ld   [y,x]       16494  ld([Y,X])                       #33
              38c3 c218  st   [$18]       16495  st([vAC])                       #34
              38c4 de00  st   [y,x++]     16496  st([Y,Xpp])                     #35
              38c5 0d00  ld   [y,x]       16497  ld([Y,X])                       #36
              38c6 c219  st   [$19]       16498  st([vAC+1])                     #37
              38c7 1403  ld   $03,y       16499  ld(hi('NEXTY'),Y)               #38
              38c8 e000  jmp  y,$00       16500  jmp(Y,'NEXTY')                  #39
              38c9 00eb  ld   $eb         16501  ld(-42/2)                       #40
                                          16502
                                          16503  label('.deekri#20')
.deekri#20:   38ca 0022  ld   $22         16504  ld(hi('PREFX2_PAGE'))           #20 ENTER is at $(n-1)ff, where n = instruction page
              38cb c202  st   [$02]       16505  st([vCpuSelect])                #21 restore PREFX2 instruction page
              38cc 9401  adda $01,y       16506  adda(1,Y)                       #22 retry instruction
              38cd e000  jmp  y,$00       16507  jmp(Y,'NEXTY')                  #23
              38ce 00f3  ld   $f3         16508  ld(-26/2)                       #24
                                          16509
                                          16510
              38cf 0200  nop              16511  fillers(until=0xff)
              38d0 0200  nop
              38d1 0200  nop
              * 48 times
              38ff 0200  nop              16512  align(0x100, size=0x100)
                                          16513
                                          16514  #-----------------------------------------------------------------------
                                          16515  #  More vCPU instruction implementations, (0x3900)
                                          16516  #-----------------------------------------------------------------------
                                          16517  #
                                          16518  # MERGE4 implementation
                                          16519  label('merge4#13')
merge4#13:    3900 00d0  ld   $d0         16520  ld(min(0,maxTicks-126/2))       #13
              3901 8115  adda [$15]       16521  adda([vTicks])                  #14
              3902 e87b  blt  .merge4#17  16522  blt('.merge4#17')               #15 not enough time left, so retry
              3903 0128  ld   [$28]       16523  ld([sysArgs+4])                 #16 count
              3904 a001  suba $01         16524  suba(1)                         #17
              3905 e878  blt  .merge4#20  16525  blt('.merge4#20')               #18
              3906 c228  st   [$28]       16526  st([sysArgs+4])                 #19 count -= 1
                                          16527
              3907 15b1  ld   [$b1],y     16528  ld([0xB1],Y)                    #20 arrays0.hi
              3908 11b0  ld   [$b0],x     16529  ld([0xB0],X)                    #21 arrays0.lo
              3909 0d00  ld   [y,x]       16530  ld([Y,X])                       #22
              390a c21d  st   [$1d]       16531  st([vTmp])                      #23
              390b 152b  ld   [$2b],y     16532  ld([sysArgs+7],Y)               #24
              390c 0129  ld   [$29]       16533  ld([sysArgs+5])                 #25
              390d 912a  adda [$2a],x     16534  adda([sysArgs+6],X)             #26
              390e 8001  adda $01         16535  adda(1)                         #27
              390f c229  st   [$29]       16536  st([sysArgs+5])                 #28
              3910 812a  adda [$2a]       16537  adda([sysArgs+6])               #29
              3911 f014  beq  $3914       16538  beq(pc()+3)                     #30
              3912 fc15  bra  $3915       16539  bra(pc()+3)                     #31
              3913 0000  ld   $00         16540  ld(0)                           #32
              3914 0001  ld   $01         16541  ld(1)                           #32 (!)
              3915 812b  adda [$2b]       16542  adda([sysArgs+7])               #33
              3916 c22b  st   [$2b]       16543  st([sysArgs+7])                 #34
              3917 011d  ld   [$1d]       16544  ld([vTmp])                      #35
              3918 ce00  st   [y,x]       16545  st([Y,X])                       #36
                                          16546
              3919 15b3  ld   [$b3],y     16547  ld([0xB3],Y)                    #37 arrays1.hi
              391a 11b2  ld   [$b2],x     16548  ld([0xB2],X)                    #38 arrays1.lo
              391b 0d00  ld   [y,x]       16549  ld([Y,X])                       #39
              391c c21d  st   [$1d]       16550  st([vTmp])                      #40
              391d 152b  ld   [$2b],y     16551  ld([sysArgs+7],Y)               #41
              391e 0129  ld   [$29]       16552  ld([sysArgs+5])                 #42
              391f 912a  adda [$2a],x     16553  adda([sysArgs+6],X)             #43
              3920 8001  adda $01         16554  adda(1)                         #44
              3921 c229  st   [$29]       16555  st([sysArgs+5])                 #45
              3922 812a  adda [$2a]       16556  adda([sysArgs+6])               #46
              3923 f026  beq  $3926       16557  beq(pc()+3)                     #47
              3924 fc27  bra  $3927       16558  bra(pc()+3)                     #48
              3925 0000  ld   $00         16559  ld(0)                           #49
              3926 0001  ld   $01         16560  ld(1)                           #49 (!)
              3927 812b  adda [$2b]       16561  adda([sysArgs+7])               #50
              3928 c22b  st   [$2b]       16562  st([sysArgs+7])                 #51
              3929 011d  ld   [$1d]       16563  ld([vTmp])                      #52
              392a ce00  st   [y,x]       16564  st([Y,X])                       #53
                                          16565
              392b 15b5  ld   [$b5],y     16566  ld([0xB5],Y)                    #54 arrays2.hi
              392c 11b4  ld   [$b4],x     16567  ld([0xB4],X)                    #55 arrays2.lo
              392d 0d00  ld   [y,x]       16568  ld([Y,X])                       #56
              392e c21d  st   [$1d]       16569  st([vTmp])                      #57
              392f 152b  ld   [$2b],y     16570  ld([sysArgs+7],Y)               #58
              3930 0129  ld   [$29]       16571  ld([sysArgs+5])                 #59
              3931 912a  adda [$2a],x     16572  adda([sysArgs+6],X)             #60
              3932 8001  adda $01         16573  adda(1)                         #61
              3933 c229  st   [$29]       16574  st([sysArgs+5])                 #62
              3934 812a  adda [$2a]       16575  adda([sysArgs+6])               #63
              3935 f038  beq  $3938       16576  beq(pc()+3)                     #64
              3936 fc39  bra  $3939       16577  bra(pc()+3)                     #65
              3937 0000  ld   $00         16578  ld(0)                           #66
              3938 0001  ld   $01         16579  ld(1)                           #66 (!)
              3939 812b  adda [$2b]       16580  adda([sysArgs+7])               #67
              393a c22b  st   [$2b]       16581  st([sysArgs+7])                 #68
              393b 011d  ld   [$1d]       16582  ld([vTmp])                      #69
              393c ce00  st   [y,x]       16583  st([Y,X])                       #70
                                          16584
              393d 15b7  ld   [$b7],y     16585  ld([0xB7],Y)                    #71 arrays3.hi
              393e 11b6  ld   [$b6],x     16586  ld([0xB6],X)                    #72 arrays3.lo
              393f 0d00  ld   [y,x]       16587  ld([Y,X])                       #73
              3940 c21d  st   [$1d]       16588  st([vTmp])                      #74
              3941 152b  ld   [$2b],y     16589  ld([sysArgs+7],Y)               #75
              3942 0129  ld   [$29]       16590  ld([sysArgs+5])                 #76
              3943 912a  adda [$2a],x     16591  adda([sysArgs+6],X)             #77
              3944 8001  adda $01         16592  adda(1)                         #78
              3945 c229  st   [$29]       16593  st([sysArgs+5])                 #79
              3946 812a  adda [$2a]       16594  adda([sysArgs+6])               #80
              3947 f04a  beq  $394a       16595  beq(pc()+3)                     #81
              3948 fc4b  bra  $394b       16596  bra(pc()+3)                     #82
              3949 0000  ld   $00         16597  ld(0)                           #83
              394a 0001  ld   $01         16598  ld(1)                           #83 (!)
              394b 812b  adda [$2b]       16599  adda([sysArgs+7])               #84
              394c c22b  st   [$2b]       16600  st([sysArgs+7])                 #85
              394d 011d  ld   [$1d]       16601  ld([vTmp])                      #86
              394e ce00  st   [y,x]       16602  st([Y,X])                       #87
                                          16603
              394f 01b0  ld   [$b0]       16604  ld([0xB0])                      #88
              3950 8001  adda $01         16605  adda(1)                         #89
              3951 c2b0  st   [$b0]       16606  st([0xB0])                      #90
              3952 f055  beq  $3955       16607  beq(pc()+3)                     #91
              3953 fc56  bra  $3956       16608  bra(pc()+3)                     #92
              3954 0000  ld   $00         16609  ld(0)                           #93
              3955 0001  ld   $01         16610  ld(1)                           #93 (!)
              3956 81b1  adda [$b1]       16611  adda([0xB1])                    #94
              3957 c2b1  st   [$b1]       16612  st([0xB1])                      #95
                                          16613
              3958 01b2  ld   [$b2]       16614  ld([0xB2])                      #96
              3959 8001  adda $01         16615  adda(1)                         #97
              395a c2b2  st   [$b2]       16616  st([0xB2])                      #98
              395b f05e  beq  $395e       16617  beq(pc()+3)                     #99
              395c fc5f  bra  $395f       16618  bra(pc()+3)                     #100
              395d 0000  ld   $00         16619  ld(0)                           #101
              395e 0001  ld   $01         16620  ld(1)                           #101 (!)
              395f 81b3  adda [$b3]       16621  adda([0xB3])                    #102
              3960 c2b3  st   [$b3]       16622  st([0xB3])                      #103
                                          16623
              3961 01b4  ld   [$b4]       16624  ld([0xB4])                      #104
              3962 8001  adda $01         16625  adda(1)                         #105
              3963 c2b4  st   [$b4]       16626  st([0xB4])                      #106
              3964 f067  beq  $3967       16627  beq(pc()+3)                     #107
              3965 fc68  bra  $3968       16628  bra(pc()+3)                     #108
              3966 0000  ld   $00         16629  ld(0)                           #109
              3967 0001  ld   $01         16630  ld(1)                           #109 (!)
              3968 81b5  adda [$b5]       16631  adda([0xB5])                    #110
              3969 c2b5  st   [$b5]       16632  st([0xB5])                      #111
                                          16633
              396a 01b6  ld   [$b6]       16634  ld([0xB6])                      #112
              396b 8001  adda $01         16635  adda(1)                         #113
              396c c2b6  st   [$b6]       16636  st([0xB6])                      #114
              396d f070  beq  $3970       16637  beq(pc()+3)                     #115
              396e fc71  bra  $3971       16638  bra(pc()+3)                     #116
              396f 0000  ld   $00         16639  ld(0)                           #117
              3970 0001  ld   $01         16640  ld(1)                           #117 (!)
              3971 81b7  adda [$b7]       16641  adda([0xB7])                    #118
              3972 c2b7  st   [$b7]       16642  st([0xB7])                      #119
                                          16643
              3973 0021  ld   $21         16644  ld(hi('PREFX3_PAGE'))           #120 ENTER is at $(n-1)ff, where n = instruction page
              3974 c202  st   [$02]       16645  st([vCpuSelect])                #121 restore PREFX3 instruction page
              3975 9401  adda $01,y       16646  adda(1,Y)                       #122 retry instruction
              3976 e000  jmp  y,$00       16647  jmp(Y,'NEXTY')                  #123
              3977 00c1  ld   $c1         16648  ld(-126/2)                      #124
                                          16649
                                          16650  label('.merge4#20')
.merge4#20:   3978 1403  ld   $03,y       16651  ld(hi('NEXTY'),Y)               #20
              3979 e000  jmp  y,$00       16652  jmp(Y,'NEXTY')                  #21
              397a 00f4  ld   $f4         16653  ld(-24/2)                       #22
                                          16654
                                          16655  label('.merge4#17')
.merge4#17:   397b 0021  ld   $21         16656  ld(hi('PREFX3_PAGE'))           #17 ENTER is at $(n-1)ff, where n = instruction page
              397c c202  st   [$02]       16657  st([vCpuSelect])                #18 restore PREFX3 instruction page
              397d 9401  adda $01,y       16658  adda(1,Y)                       #19 retry instruction
              397e e0cb  jmp  y,$cb       16659  jmp(Y,'REENTER')                #20
              397f 00f4  ld   $f4         16660  ld(-24/2)                       #21
                                          16661
                                          16662
              3980 0200  nop              16663  fillers(until=0xff)
              3981 0200  nop
              3982 0200  nop
              * 127 times
              39ff 0200  nop              16664  align(0x100, size=0x100)
                                          16665
                                          16666  #-----------------------------------------------------------------------
                                          16667  #  More vCPU instruction implementations, (0x3A00)
                                          16668  #-----------------------------------------------------------------------
                                          16669  #
                                          16670
                                          16671
              3a00 0200  nop              16672  fillers(until=0xff)
              3a01 0200  nop
              3a02 0200  nop
              * 255 times
              3aff 0200  nop              16673  align(0x100, size=0x100)
                                          16674
                                          16675  #-----------------------------------------------------------------------
                                          16676  #  More vCPU instruction implementations, (0x3B00)
                                          16677  #-----------------------------------------------------------------------
                                          16678  #
                                          16679
                                          16680
              3b00 0200  nop              16681  fillers(until=0xff)
              3b01 0200  nop
              3b02 0200  nop
              * 255 times
              3bff 0200  nop              16682  align(0x100, size=0x100)
                                          16683
                                          16684  #-----------------------------------------------------------------------
                                          16685  #  More vCPU instruction implementations, (0x3C00)
                                          16686  #-----------------------------------------------------------------------
                                          16687  #
                                          16688
                                          16689
              3c00 0200  nop              16690  fillers(until=0xff)
              3c01 0200  nop
              3c02 0200  nop
              * 255 times
              3cff 0200  nop              16691  align(0x100, size=0x100)
                                          16692
                                          16693  #-----------------------------------------------------------------------
                                          16694  #  More vCPU instruction implementations, (0x3D00)
                                          16695  #-----------------------------------------------------------------------
                                          16696  #
                                          16697
                                          16698
              3d00 0200  nop              16699  fillers(until=0xff)
              3d01 0200  nop
              3d02 0200  nop
              * 255 times
              3dff 0200  nop              16700  align(0x100, size=0x100)
                                          16701
                                          16702  #-----------------------------------------------------------------------
                                          16703  #  More vCPU instruction implementations, (0x3E00)
                                          16704  #-----------------------------------------------------------------------
                                          16705  #
                                          16706
                                          16707
              3e00 0200  nop              16708  fillers(until=0xff)
              3e01 0200  nop
              3e02 0200  nop
              * 255 times
              3eff 0200  nop              16709  align(0x100, size=0x100)
                                          16710
                                          16711  #-----------------------------------------------------------------------
                                          16712  #  Legacy branch springboards, (BCC), and vCPU instructions, (0x3F00)
                                          16713  #-----------------------------------------------------------------------
                                          16714  #
                                          16715  # LDARRB implementation
                                          16716  label('ldarrb#13')
ldarrb#13:    3f00 1517  ld   [$17],y     16717  ld([vPC+1],Y)                   #13 vPC.hi
              3f01 de00  st   [y,x++]     16718  st([Y,Xpp])                     #14 X++
              3f02 c21d  st   [$1d]       16719  st([vTmp])                      #15 var
              3f03 00f4  ld   $f4         16720  ld(min(0,maxTicks-54/2))        #16
              3f04 8115  adda [$15]       16721  adda([vTicks])                  #17
              3f05 e82a  blt  .ldarrb#20  16722  blt('.ldarrb#20')               #18 not enough time left, so retry
              3f06 0d00  ld   [y,x]       16723  ld([Y,X])                       #19
              3f07 de00  st   [y,x++]     16724  st([Y,Xpp])                     #20 X++
              3f08 c218  st   [$18]       16725  st([vAC])                       #21 imm.lo
              3f09 0d00  ld   [y,x]       16726  ld([Y,X])                       #22
              3f0a c219  st   [$19]       16727  st([vAC+1])                     #23 imm.hi
              3f0b 1400  ld   $00,y       16728  ld(0,Y)                         #24
              3f0c 111d  ld   [$1d],x     16729  ld([vTmp],X)                    #25
              3f0d 0500  ld   [x]         16730  ld([X])                         #26
              3f0e de00  st   [y,x++]     16731  st([Y,Xpp])                     #27 X++
              3f0f c22a  st   [$2a]       16732  st([sysArgs+6])                 #28 idx.lo
              3f10 0500  ld   [x]         16733  ld([X])                         #29
              3f11 c22b  st   [$2b]       16734  st([sysArgs+7])                 #30 idx.hi
              3f12 0118  ld   [$18]       16735  ld([vAC])                       #31
              3f13 812a  adda [$2a]       16736  adda([sysArgs+6])               #32
              3f14 c21d  st   [$1d]       16737  st([vTmp])                      #33 vTmp = vAC.lo + idx.lo
              3f15 e819  blt  .ldarrb#36  16738  bmi('.ldarrb#36')               #34 check carry
              3f16 a12a  suba [$2a]       16739  suba([sysArgs+6])               #35 restore vAC.lo
              3f17 fc1b  bra  .ldarrb#38  16740  bra('.ldarrb#38')               #36
              3f18 412a  ora  [$2a]       16741  ora([sysArgs+6])                #37 carry in bit 7
                                          16742
                                          16743  label('.ldarrb#36')
.ldarrb#36:   3f19 212a  anda [$2a]       16744  anda([sysArgs+6])               #36 carry in bit 7
              3f1a 0200  nop              16745  nop()                           #37
                                          16746
                                          16747  label('.ldarrb#38')
.ldarrb#38:   3f1b 3080  anda $80,x       16748  anda(0x80,X)                    #38
              3f1c 0500  ld   [x]         16749  ld([X])                         #39 carry in bit 0
              3f1d 8119  adda [$19]       16750  adda([vAC+1])                   #40
              3f1e 952b  adda [$2b],y     16751  adda([sysArgs+7],Y)             #41 Y = vAC.hi + idx.hi + carry
              3f1f 111d  ld   [$1d],x     16752  ld([vTmp],X)                    #42
              3f20 0d00  ld   [y,x]       16753  ld([Y,X])                       #43
              3f21 c218  st   [$18]       16754  st([vAC])                       #44
              3f22 0000  ld   $00         16755  ld(0)                           #45
              3f23 c219  st   [$19]       16756  st([vAC+1])                     #46
              3f24 0116  ld   [$16]       16757  ld([vPC])                       #47
              3f25 8002  adda $02         16758  adda(2)                         #48
              3f26 c216  st   [$16]       16759  st([vPC])                       #49
              3f27 1403  ld   $03,y       16760  ld(hi('NEXTY'),Y)               #50
              3f28 e000  jmp  y,$00       16761  jmp(Y,'NEXTY')                  #51
              3f29 00e5  ld   $e5         16762  ld(-54/2)                       #52
                                          16763
                                          16764  label('.ldarrb#20')
.ldarrb#20:   3f2a 0116  ld   [$16]       16765  ld([vPC])                       #20 retry instruction
              3f2b a002  suba $02         16766  suba(2)                         #21
              3f2c c216  st   [$16]       16767  st([vPC])                       #22
              3f2d 1403  ld   $03,y       16768  ld(hi('REENTER'),Y)             #23
              3f2e e0cb  jmp  y,$cb       16769  jmp(Y,'REENTER')                #24
              3f2f 00f2  ld   $f2         16770  ld(-28/2)                       #25
                                          16771
                                          16772
                                          16773  # pc = 0x3f3f, Opcode = 0x3f
                                          16774  # Conditional EQ: Branch if zero (if(vACL==0)vPCL=D)
              3f30 0200  nop              16775  fillers(until=0x3f)
              3f31 0200  nop
              3f32 0200  nop
              * 15 times
              3f3f 1417  ld   $17,y       16776  ld(hi('beq#17'),Y)              #14
              3f40 e027  jmp  y,$27       16777  jmp(Y,'beq#17')                 #15
              3f41 1517  ld   [$17],y     16778  ld([vPC+1],Y)                   #16 vPC.hi
                                          16779
                                          16780  # pc = 0x3f4d, Opcode = 0x4d
                                          16781  # Conditional GT: Branch if positive (if(vACL>0)vPCL=D)
              3f42 0200  nop              16782  fillers(until=0x4d)
              3f43 0200  nop
              3f44 0200  nop
              * 11 times
              3f4d 1417  ld   $17,y       16783  ld(hi('bgt#17'),Y)              #13
              3f4e e043  jmp  y,$43       16784  jmp(Y,'bgt#17')                 #14
              3f4f 1517  ld   [$17],y     16785  ld([vPC+1],Y)                   #15 vPC.hi
                                          16786
                                          16787  # pc = 0x3f50, Opcode = 0x50
                                          16788  # Conditional LT: Branch if negative (if(vACL<0)vPCL=D)
              3f50 1417  ld   $17,y       16789  ld(hi('blt#17'),Y)              #13
              3f51 e058  jmp  y,$58       16790  jmp(Y,'blt#17')                 #14
              3f52 1517  ld   [$17],y     16791  ld([vPC+1],Y)                   #15 vPC.hi
                                          16792
                                          16793  # pc = 0x3f53, Opcode = 0x53
                                          16794  # Conditional GE: Branch if positive or zero (if(vACL>=0)vPCL=D)
              3f53 1417  ld   $17,y       16795  ld(hi('bge#17'),Y)              #13
              3f54 e065  jmp  y,$65       16796  jmp(Y,'bge#17')                 #14
              3f55 1517  ld   [$17],y     16797  ld([vPC+1],Y)                   #15 vPC.hi
                                          16798
                                          16799  # pc = 0x3f56, Opcode = 0x56
                                          16800  # Conditional LE: Branch if negative or zero (if(vACL<=0)vPCL=D)
              3f56 1417  ld   $17,y       16801  ld(hi('ble#17'),Y)              #13
              3f57 e072  jmp  y,$72       16802  jmp(Y,'ble#17')                 #14
              3f58 1517  ld   [$17],y     16803  ld([vPC+1],Y)                   #15 vPC.hi
                                          16804
                                          16805  # pc = 0x3f72, Opcode = 0x72
                                          16806  # Conditional NE: Branch if not zero (if(vACL!=0)vPCL=D)
              3f59 0200  nop              16807  fillers(until=0x72)
              3f5a 0200  nop
              3f5b 0200  nop
              * 25 times
              3f72 1417  ld   $17,y       16808  ld(hi('bne#17'),Y)              #13
              3f73 e035  jmp  y,$35       16809  jmp(Y,'bne#17')                 #14
              3f74 1517  ld   [$17],y     16810  ld([vPC+1],Y)                   #15 vPC.hi
                                          16811
                                          16812
                                          16813  # STARRB implementation
                                          16814  label('starrb#13')
starrb#13:    3f75 1517  ld   [$17],y     16815  ld([vPC+1],Y)                   #13 vPC.hi
              3f76 de00  st   [y,x++]     16816  st([Y,Xpp])                     #14 X++
              3f77 c21d  st   [$1d]       16817  st([vTmp])                      #15 var
              3f78 00f5  ld   $f5         16818  ld(min(0,maxTicks-52/2))        #16
              3f79 8115  adda [$15]       16819  adda([vTicks])                  #17
              3f7a e89d  blt  .starrb#20  16820  blt('.starrb#20')               #18 not enough time left, so retry
              3f7b 0d00  ld   [y,x]       16821  ld([Y,X])                       #19
              3f7c de00  st   [y,x++]     16822  st([Y,Xpp])                     #20 X++
              3f7d c2b0  st   [$b0]       16823  st([0xB0])                      #21 imm.lo
              3f7e 0d00  ld   [y,x]       16824  ld([Y,X])                       #22
              3f7f c2b1  st   [$b1]       16825  st([0xB1])                      #23 imm.hi
              3f80 1400  ld   $00,y       16826  ld(0,Y)                         #24
              3f81 111d  ld   [$1d],x     16827  ld([vTmp],X)                    #25
              3f82 0500  ld   [x]         16828  ld([X])                         #26
              3f83 de00  st   [y,x++]     16829  st([Y,Xpp])                     #27 X++
              3f84 c22a  st   [$2a]       16830  st([sysArgs+6])                 #28 idx.lo
              3f85 0500  ld   [x]         16831  ld([X])                         #29
              3f86 c22b  st   [$2b]       16832  st([sysArgs+7])                 #30 idx.hi
              3f87 01b0  ld   [$b0]       16833  ld([0xB0])                      #31
              3f88 812a  adda [$2a]       16834  adda([sysArgs+6])               #32
              3f89 c21d  st   [$1d]       16835  st([vTmp])                      #33 vTmp = vAC.lo + idx.lo
              3f8a e88e  blt  .starrb#36  16836  bmi('.starrb#36')               #34 check carry
              3f8b a12a  suba [$2a]       16837  suba([sysArgs+6])               #35 restore vAC.lo
              3f8c fc90  bra  .starrb#38  16838  bra('.starrb#38')               #36
              3f8d 412a  ora  [$2a]       16839  ora([sysArgs+6])                #37 carry in bit 7
                                          16840
                                          16841  label('.starrb#36')
.starrb#36:   3f8e 212a  anda [$2a]       16842  anda([sysArgs+6])               #36 carry in bit 7
              3f8f 0200  nop              16843  nop()                           #37
                                          16844
                                          16845  label('.starrb#38')
.starrb#38:   3f90 3080  anda $80,x       16846  anda(0x80,X)                    #38
              3f91 0500  ld   [x]         16847  ld([X])                         #39 carry in bit 0
              3f92 81b1  adda [$b1]       16848  adda([0xB1])                    #40
              3f93 952b  adda [$2b],y     16849  adda([sysArgs+7],Y)             #41 Y = vAC.hi + idx.hi + carry
              3f94 111d  ld   [$1d],x     16850  ld([vTmp],X)                    #42
              3f95 0118  ld   [$18]       16851  ld([vAC])                       #43
              3f96 ce00  st   [y,x]       16852  st([Y,X])                       #44
              3f97 0116  ld   [$16]       16853  ld([vPC])                       #45
              3f98 8002  adda $02         16854  adda(2)                         #46
              3f99 c216  st   [$16]       16855  st([vPC])                       #47
              3f9a 1403  ld   $03,y       16856  ld(hi('NEXTY'),Y)               #48
              3f9b e000  jmp  y,$00       16857  jmp(Y,'NEXTY')                  #49
              3f9c 00e6  ld   $e6         16858  ld(-52/2)                       #50
                                          16859
                                          16860  label('.starrb#20')
.starrb#20:   3f9d 0116  ld   [$16]       16861  ld([vPC])                       #20 retry instruction
              3f9e a002  suba $02         16862  suba(2)                         #21
              3f9f c216  st   [$16]       16863  st([vPC])                       #22
              3fa0 1403  ld   $03,y       16864  ld(hi('REENTER'),Y)             #23
              3fa1 e0cb  jmp  y,$cb       16865  jmp(Y,'REENTER')                #24
              3fa2 00f2  ld   $f2         16866  ld(-28/2)                       #25
                                          16867
                                          16868
                                          16869  # STARRI implementation
                                          16870  label('starri#13')
starri#13:    3fa3 1517  ld   [$17],y     16871  ld([vPC+1],Y)                   #13 vPC.hi
              3fa4 de00  st   [y,x++]     16872  st([Y,Xpp])                     #14 X++
              3fa5 c21d  st   [$1d]       16873  st([vTmp])                      #15 var
              3fa6 00f3  ld   $f3         16874  ld(min(0,maxTicks-56/2))        #16
              3fa7 8115  adda [$15]       16875  adda([vTicks])                  #17
              3fa8 e8ce  blt  .starri#20  16876  blt('.starri#20')               #18 not enough time left, so retry
              3fa9 0d00  ld   [y,x]       16877  ld([Y,X])                       #19
              3faa de00  st   [y,x++]     16878  st([Y,Xpp])                     #20 X++
              3fab c2b0  st   [$b0]       16879  st([0xB0])                      #21 addr imm.lo
              3fac 0d00  ld   [y,x]       16880  ld([Y,X])                       #22
              3fad de00  st   [y,x++]     16881  st([Y,Xpp])                     #23 X++
              3fae c2b1  st   [$b1]       16882  st([0xB1])                      #24 addr imm.hi
              3faf 0d00  ld   [y,x]       16883  ld([Y,X])                       #25
              3fb0 c2b2  st   [$b2]       16884  st([0xB2])                      #26 data imm
              3fb1 1400  ld   $00,y       16885  ld(0,Y)                         #27
              3fb2 111d  ld   [$1d],x     16886  ld([vTmp],X)                    #28
              3fb3 0500  ld   [x]         16887  ld([X])                         #29
              3fb4 de00  st   [y,x++]     16888  st([Y,Xpp])                     #30 X++
              3fb5 c22a  st   [$2a]       16889  st([sysArgs+6])                 #31 idx.lo
              3fb6 0500  ld   [x]         16890  ld([X])                         #32
              3fb7 c22b  st   [$2b]       16891  st([sysArgs+7])                 #33 idx.hi
              3fb8 01b0  ld   [$b0]       16892  ld([0xB0])                      #34
              3fb9 812a  adda [$2a]       16893  adda([sysArgs+6])               #35
              3fba c21d  st   [$1d]       16894  st([vTmp])                      #36 vTmp = vAC.lo + idx.lo
              3fbb e8bf  blt  .starri#39  16895  bmi('.starri#39')               #37 check carry
              3fbc a12a  suba [$2a]       16896  suba([sysArgs+6])               #38 restore vAC.lo
              3fbd fcc1  bra  .starri#41  16897  bra('.starri#41')               #39
              3fbe 412a  ora  [$2a]       16898  ora([sysArgs+6])                #40 carry in bit 7
                                          16899
                                          16900  label('.starri#39')
.starri#39:   3fbf 212a  anda [$2a]       16901  anda([sysArgs+6])               #39 carry in bit 7
              3fc0 0200  nop              16902  nop()                           #40
                                          16903
                                          16904  label('.starri#41')
.starri#41:   3fc1 3080  anda $80,x       16905  anda(0x80,X)                    #41
              3fc2 0500  ld   [x]         16906  ld([X])                         #42 carry in bit 0
              3fc3 81b1  adda [$b1]       16907  adda([0xB1])                    #43
              3fc4 952b  adda [$2b],y     16908  adda([sysArgs+7],Y)             #44 Y = vAC.hi + idx.hi + carry
              3fc5 111d  ld   [$1d],x     16909  ld([vTmp],X)                    #45
              3fc6 01b2  ld   [$b2]       16910  ld([0xB2])                      #46
              3fc7 ce00  st   [y,x]       16911  st([Y,X])                       #47
              3fc8 0116  ld   [$16]       16912  ld([vPC])                       #48
              3fc9 8003  adda $03         16913  adda(3)                         #49
              3fca c216  st   [$16]       16914  st([vPC])                       #50
              3fcb 1403  ld   $03,y       16915  ld(hi('REENTER'),Y)             #51
              3fcc e0cb  jmp  y,$cb       16916  jmp(Y,'REENTER')                #52
              3fcd 00e4  ld   $e4         16917  ld(-56/2)                       #53
                                          16918
                                          16919  label('.starri#20')
.starri#20:   3fce 0116  ld   [$16]       16920  ld([vPC])                       #20 retry instruction
              3fcf a002  suba $02         16921  suba(2)                         #21
              3fd0 c216  st   [$16]       16922  st([vPC])                       #22
              3fd1 1403  ld   $03,y       16923  ld(hi('REENTER'),Y)             #23
              3fd2 e0cb  jmp  y,$cb       16924  jmp(Y,'REENTER')                #24
              3fd3 00f2  ld   $f2         16925  ld(-28/2)                       #25
                                          16926
                                          16927
              3fd4 0200  nop              16928  fillers(until=0xff)
              3fd5 0200  nop
              3fd6 0200  nop
              * 43 times
              3fff 0200  nop              16929  align(0x100, size=0x100)
                                          16930
                                          16931  #-----------------------------------------------------------------------
                                          16932  #  More vCPU instruction implementations, (0x4000)
                                          16933  #-----------------------------------------------------------------------
                                          16934  #
                                          16935
                                          16936
              4000 0200  nop              16937  fillers(until=0xff)
              4001 0200  nop
              4002 0200  nop
              * 255 times
              40ff 0200  nop              16938  align(0x100, size=0x100)
                                          16939
                                          16940  #-----------------------------------------------------------------------
                                          16941  #  More vCPU instruction implementations, (0x4100)
                                          16942  #-----------------------------------------------------------------------
                                          16943  #
                                          16944
                                          16945
              4100 0200  nop              16946  fillers(until=0xff)
              4101 0200  nop
              4102 0200  nop
              * 255 times
              41ff 0200  nop              16947  align(0x100, size=0x100)
                                          16948
                                          16949  #-----------------------------------------------------------------------
                                          16950  #  More vCPU instruction implementations, (0x4200)
                                          16951  #-----------------------------------------------------------------------
                                          16952  #
                                          16953
                                          16954
              4200 0200  nop              16955  fillers(until=0xff)
              4201 0200  nop
              4202 0200  nop
              * 255 times
              42ff 0200  nop              16956  align(0x100, size=0x100)
                                          16957
                                          16958  #-----------------------------------------------------------------------
                                          16959  #  More vCPU instruction implementations, (0x4300)
                                          16960  #-----------------------------------------------------------------------
                                          16961  #
                                          16962
                                          16963
              4300 0200  nop              16964  fillers(until=0xff)
              4301 0200  nop
              4302 0200  nop
              * 255 times
              43ff 0200  nop              16965  align(0x100, size=0x100)
                                          16966
                                          16967  #-----------------------------------------------------------------------
                                          16968  #  More vCPU instruction implementations, (0x4400)
                                          16969  #-----------------------------------------------------------------------
                                          16970  #
                                          16971
                                          16972
              4400 0200  nop              16973  fillers(until=0xff)
              4401 0200  nop
              4402 0200  nop
              * 255 times
              44ff 0200  nop              16974  align(0x100, size=0x100)
                                          16975
                                          16976  #-----------------------------------------------------------------------
                                          16977  #  More vCPU instruction implementations, (0x4500)
                                          16978  #-----------------------------------------------------------------------
                                          16979  #
                                          16980
                                          16981
              4500 0200  nop              16982  fillers(until=0xff)
              4501 0200  nop
              4502 0200  nop
              * 255 times
              45ff 0200  nop              16983  align(0x100, size=0x100)
                                          16984
                                          16985  #-----------------------------------------------------------------------
                                          16986  #  More vCPU instruction implementations, (0x4600)
                                          16987  #-----------------------------------------------------------------------
                                          16988  #
                                          16989
                                          16990
              4600 0200  nop              16991  fillers(until=0xff)
              4601 0200  nop
              4602 0200  nop
              * 255 times
              46ff 0200  nop              16992  align(0x100, size=0x100)
                                          16993
                                          16994  #-----------------------------------------------------------------------
                                          16995  #  More vCPU instruction implementations, (0x4700)
                                          16996  #-----------------------------------------------------------------------
                                          16997  #
                                          16998
                                          16999
              4700 0200  nop              17000  fillers(until=0xff)
              4701 0200  nop
              4702 0200  nop
              * 255 times
              47ff 0200  nop              17001  align(0x100, size=0x100)
                                          17002
                                          17003  #-----------------------------------------------------------------------
                                          17004  #  More vCPU instruction implementations, (0x4800)
                                          17005  #-----------------------------------------------------------------------
                                          17006  #
                                          17007
                                          17008
              4800 0200  nop              17009  fillers(until=0xff)
              4801 0200  nop
              4802 0200  nop
              * 255 times
              48ff 0200  nop              17010  align(0x100, size=0x100)
                                          17011
                                          17012  #-----------------------------------------------------------------------
                                          17013  #  More vCPU instruction implementations, (0x4900)
                                          17014  #-----------------------------------------------------------------------
                                          17015  #
                                          17016
                                          17017
              4900 0200  nop              17018  fillers(until=0xff)
              4901 0200  nop
              4902 0200  nop
              * 255 times
              49ff 0200  nop              17019  align(0x100, size=0x100)
                                          17020
                                          17021  #-----------------------------------------------------------------------
                                          17022  #  More vCPU instruction implementations, (0x4A00)
                                          17023  #-----------------------------------------------------------------------
                                          17024  #
                                          17025
                                          17026
              4a00 0200  nop              17027  fillers(until=0xff)
              4a01 0200  nop
              4a02 0200  nop
              * 255 times
              4aff 0200  nop              17028  align(0x100, size=0x100)
                                          17029
                                          17030  #-----------------------------------------------------------------------
                                          17031  #  More vCPU instruction implementations, (0x4B00)
                                          17032  #-----------------------------------------------------------------------
                                          17033  #
                                          17034
                                          17035
              4b00 0200  nop              17036  fillers(until=0xff)
              4b01 0200  nop
              4b02 0200  nop
              * 255 times
              4bff 0200  nop              17037  align(0x100, size=0x100)
                                          17038
                                          17039  #-----------------------------------------------------------------------
                                          17040  #  More vCPU instruction implementations, (0x4C00)
                                          17041  #-----------------------------------------------------------------------
                                          17042  #
                                          17043
                                          17044
              4c00 0200  nop              17045  fillers(until=0xff)
              4c01 0200  nop
              4c02 0200  nop
              * 255 times
              4cff 0200  nop              17046  align(0x100, size=0x100)
                                          17047
                                          17048  #-----------------------------------------------------------------------
                                          17049  #  More vCPU instruction implementations, (0x4D00)
                                          17050  #-----------------------------------------------------------------------
                                          17051  #
                                          17052
                                          17053
              4d00 0200  nop              17054  fillers(until=0xff)
              4d01 0200  nop
              4d02 0200  nop
              * 255 times
              4dff 0200  nop              17055  align(0x100, size=0x100)
                                          17056
                                          17057  #-----------------------------------------------------------------------
                                          17058  #  Gigatron font4x6 data, (0x4E00 )
                                          17059  #-----------------------------------------------------------------------
                                          17060  #
                                          17061  label('font4x6_32up')
                                          17062  for ch in range(32, 32+83):
                                          17063    comment = 'Char4x6 %s' % repr(chr(ch))
                                          17064    for byte in fontvX0.font4x6[ch-32]:
                                          17065      ld(byte)
font4x6_32up: 4e00 0000  ld   $00         ;Char4x6 ' '
              4e01 0000  ld   $00
              4e02 0000  ld   $00
              4e03 0044  ld   $44         ;Char4x6 '!'
              4e04 0040  ld   $40
              4e05 0040  ld   $40
              4e06 00aa  ld   $aa         ;Char4x6 '"'
              4e07 00a0  ld   $a0
              4e08 0000  ld   $00
              4e09 004e  ld   $4e         ;Char4x6 '#'
              4e0a 004e  ld   $4e
              4e0b 0040  ld   $40
              4e0c 0068  ld   $68         ;Char4x6 '$'
              4e0d 0042  ld   $42
              4e0e 00c0  ld   $c0
              4e0f 0082  ld   $82         ;Char4x6 '%'
              4e10 0048  ld   $48
              4e11 0020  ld   $20
              4e12 004a  ld   $4a         ;Char4x6 '&'
              4e13 00ac  ld   $ac
              4e14 0060  ld   $60
              4e15 0044  ld   $44         ;Char4x6 "'"
              4e16 0080  ld   $80
              4e17 0000  ld   $00
              4e18 0024  ld   $24         ;Char4x6 '('
              4e19 0044  ld   $44
              4e1a 0020  ld   $20
              4e1b 0084  ld   $84         ;Char4x6 ')'
              4e1c 0044  ld   $44
              4e1d 0080  ld   $80
              4e1e 000a  ld   $0a         ;Char4x6 '*'
              4e1f 004a  ld   $4a
              4e20 0000  ld   $00
              4e21 0004  ld   $04         ;Char4x6 '+'
              4e22 00e4  ld   $e4
              4e23 0000  ld   $00
              4e24 0000  ld   $00         ;Char4x6 ','
              4e25 0000  ld   $00
              4e26 0048  ld   $48
              4e27 0000  ld   $00         ;Char4x6 '-'
              4e28 00e0  ld   $e0
              4e29 0000  ld   $00
              4e2a 0000  ld   $00         ;Char4x6 '.'
              4e2b 0000  ld   $00
              4e2c 0080  ld   $80
              4e2d 0002  ld   $02         ;Char4x6 '/'
              4e2e 0048  ld   $48
              4e2f 0000  ld   $00
              4e30 00ea  ld   $ea         ;Char4x6 '0'
              4e31 00aa  ld   $aa
              4e32 00e0  ld   $e0
              4e33 004c  ld   $4c         ;Char4x6 '1'
              4e34 0044  ld   $44
              4e35 00e0  ld   $e0
              4e36 00e2  ld   $e2         ;Char4x6 '2'
              4e37 00e8  ld   $e8
              4e38 00e0  ld   $e0
              4e39 00e2  ld   $e2         ;Char4x6 '3'
              4e3a 0062  ld   $62
              4e3b 00e0  ld   $e0
              4e3c 0088  ld   $88         ;Char4x6 '4'
              4e3d 00ce  ld   $ce
              4e3e 0040  ld   $40
              4e3f 00e8  ld   $e8         ;Char4x6 '5'
              4e40 00e2  ld   $e2
              4e41 00e0  ld   $e0
              4e42 00e8  ld   $e8         ;Char4x6 '6'
              4e43 00ea  ld   $ea
              4e44 00e0  ld   $e0
              4e45 00e2  ld   $e2         ;Char4x6 '7'
              4e46 0022  ld   $22
              4e47 0020  ld   $20
              4e48 00ea  ld   $ea         ;Char4x6 '8'
              4e49 00ea  ld   $ea
              4e4a 00e0  ld   $e0
              4e4b 00ea  ld   $ea         ;Char4x6 '9'
              4e4c 00e2  ld   $e2
              4e4d 00e0  ld   $e0
              4e4e 0004  ld   $04         ;Char4x6 ':'
              4e4f 0004  ld   $04
              4e50 0000  ld   $00
              4e51 0000  ld   $00         ;Char4x6 ';'
              4e52 0040  ld   $40
              4e53 0048  ld   $48
              4e54 0024  ld   $24         ;Char4x6 '<'
              4e55 0084  ld   $84
              4e56 0020  ld   $20
              4e57 000e  ld   $0e         ;Char4x6 '='
              4e58 000e  ld   $0e
              4e59 0000  ld   $00
              4e5a 0084  ld   $84         ;Char4x6 '>'
              4e5b 0024  ld   $24
              4e5c 0080  ld   $80
              4e5d 00c2  ld   $c2         ;Char4x6 '?'
              4e5e 0060  ld   $60
              4e5f 0040  ld   $40
              4e60 006a  ld   $6a         ;Char4x6 '@'
              4e61 00e8  ld   $e8
              4e62 0060  ld   $60
              4e63 004a  ld   $4a         ;Char4x6 'A'
              4e64 00ea  ld   $ea
              4e65 00a0  ld   $a0
              4e66 00ca  ld   $ca         ;Char4x6 'B'
              4e67 00ca  ld   $ca
              4e68 00c0  ld   $c0
              4e69 0068  ld   $68         ;Char4x6 'C'
              4e6a 0088  ld   $88
              4e6b 0060  ld   $60
              4e6c 00ca  ld   $ca         ;Char4x6 'D'
              4e6d 00aa  ld   $aa
              4e6e 00c0  ld   $c0
              4e6f 00e8  ld   $e8         ;Char4x6 'E'
              4e70 00c8  ld   $c8
              4e71 00e0  ld   $e0
              4e72 00e8  ld   $e8         ;Char4x6 'F'
              4e73 00c8  ld   $c8
              4e74 0080  ld   $80
              4e75 0068  ld   $68         ;Char4x6 'G'
              4e76 00aa  ld   $aa
              4e77 0060  ld   $60
              4e78 00aa  ld   $aa         ;Char4x6 'H'
              4e79 00ea  ld   $ea
              4e7a 00a0  ld   $a0
              4e7b 00e4  ld   $e4         ;Char4x6 'I'
              4e7c 0044  ld   $44
              4e7d 00e0  ld   $e0
              4e7e 0062  ld   $62         ;Char4x6 'J'
              4e7f 002a  ld   $2a
              4e80 0040  ld   $40
              4e81 00aa  ld   $aa         ;Char4x6 'K'
              4e82 00ca  ld   $ca
              4e83 00a0  ld   $a0
              4e84 0088  ld   $88         ;Char4x6 'L'
              4e85 0088  ld   $88
              4e86 00e0  ld   $e0
              4e87 00ae  ld   $ae         ;Char4x6 'M'
              4e88 00aa  ld   $aa
              4e89 00a0  ld   $a0
              4e8a 00ea  ld   $ea         ;Char4x6 'N'
              4e8b 00aa  ld   $aa
              4e8c 00a0  ld   $a0
              4e8d 004a  ld   $4a         ;Char4x6 'O'
              4e8e 00aa  ld   $aa
              4e8f 0040  ld   $40
              4e90 00ca  ld   $ca         ;Char4x6 'P'
              4e91 00c8  ld   $c8
              4e92 0080  ld   $80
              4e93 004a  ld   $4a         ;Char4x6 'Q'
              4e94 00ae  ld   $ae
              4e95 0060  ld   $60
              4e96 00ca  ld   $ca         ;Char4x6 'R'
              4e97 00ca  ld   $ca
              4e98 00a0  ld   $a0
              4e99 0068  ld   $68         ;Char4x6 'S'
              4e9a 0042  ld   $42
              4e9b 00c0  ld   $c0
              4e9c 00e4  ld   $e4         ;Char4x6 'T'
              4e9d 0044  ld   $44
              4e9e 0040  ld   $40
              4e9f 00aa  ld   $aa         ;Char4x6 'U'
              4ea0 00aa  ld   $aa
              4ea1 00e0  ld   $e0
              4ea2 00aa  ld   $aa         ;Char4x6 'V'
              4ea3 00aa  ld   $aa
              4ea4 0040  ld   $40
              4ea5 00aa  ld   $aa         ;Char4x6 'W'
              4ea6 00ae  ld   $ae
              4ea7 00a0  ld   $a0
              4ea8 00aa  ld   $aa         ;Char4x6 'X'
              4ea9 004a  ld   $4a
              4eaa 00a0  ld   $a0
              4eab 00aa  ld   $aa         ;Char4x6 'Y'
              4eac 00a4  ld   $a4
              4ead 0040  ld   $40
              4eae 00e2  ld   $e2         ;Char4x6 'Z'
              4eaf 0048  ld   $48
              4eb0 00e0  ld   $e0
              4eb1 0064  ld   $64         ;Char4x6 '['
              4eb2 0044  ld   $44
              4eb3 0060  ld   $60
              4eb4 0008  ld   $08         ;Char4x6 '\\'
              4eb5 0042  ld   $42
              4eb6 0000  ld   $00
              4eb7 00c4  ld   $c4         ;Char4x6 ']'
              4eb8 0044  ld   $44
              4eb9 00c0  ld   $c0
              4eba 004a  ld   $4a         ;Char4x6 '^'
              4ebb 0000  ld   $00
              4ebc 0000  ld   $00
              4ebd 0000  ld   $00         ;Char4x6 '_'
              4ebe 0000  ld   $00
              4ebf 00e0  ld   $e0
              4ec0 0084  ld   $84         ;Char4x6 '`'
              4ec1 0000  ld   $00
              4ec2 0000  ld   $00
              4ec3 0006  ld   $06         ;Char4x6 'a'
              4ec4 00aa  ld   $aa
              4ec5 0060  ld   $60
              4ec6 008c  ld   $8c         ;Char4x6 'b'
              4ec7 00aa  ld   $aa
              4ec8 00c0  ld   $c0
              4ec9 0006  ld   $06         ;Char4x6 'c'
              4eca 0088  ld   $88
              4ecb 0060  ld   $60
              4ecc 0026  ld   $26         ;Char4x6 'd'
              4ecd 00aa  ld   $aa
              4ece 0060  ld   $60
              4ecf 0006  ld   $06         ;Char4x6 'e'
              4ed0 00ac  ld   $ac
              4ed1 0060  ld   $60
              4ed2 0064  ld   $64         ;Char4x6 'f'
              4ed3 00e4  ld   $e4
              4ed4 0040  ld   $40
              4ed5 0006  ld   $06         ;Char4x6 'g'
              4ed6 00a6  ld   $a6
              4ed7 002c  ld   $2c
              4ed8 008c  ld   $8c         ;Char4x6 'h'
              4ed9 00aa  ld   $aa
              4eda 00a0  ld   $a0
              4edb 0040  ld   $40         ;Char4x6 'i'
              4edc 0044  ld   $44
              4edd 0040  ld   $40
              4ede 0040  ld   $40         ;Char4x6 'j'
              4edf 0044  ld   $44
              4ee0 004c  ld   $4c
              4ee1 008a  ld   $8a         ;Char4x6 'k'
              4ee2 00ca  ld   $ca
              4ee3 00a0  ld   $a0
              4ee4 0044  ld   $44         ;Char4x6 'l'
              4ee5 0044  ld   $44
              4ee6 0020  ld   $20
              4ee7 000e  ld   $0e         ;Char4x6 'm'
              4ee8 00ea  ld   $ea
              4ee9 00a0  ld   $a0
              4eea 000c  ld   $0c         ;Char4x6 'n'
              4eeb 00aa  ld   $aa
              4eec 00a0  ld   $a0
              4eed 0004  ld   $04         ;Char4x6 'o'
              4eee 00aa  ld   $aa
              4eef 0040  ld   $40
              4ef0 000c  ld   $0c         ;Char4x6 'p'
              4ef1 00aa  ld   $aa
              4ef2 00c8  ld   $c8
              4ef3 0006  ld   $06         ;Char4x6 'q'
              4ef4 00aa  ld   $aa
              4ef5 0062  ld   $62
              4ef6 000c  ld   $0c         ;Char4x6 'r'
              4ef7 00a8  ld   $a8
              4ef8 0080  ld   $80
                                          17066      comment = C(comment)
                                          17067
              4ef9 0200  nop              17068  fillers(until=0xfd)
              4efa 0200  nop
              4efb 0200  nop
              4efc 0200  nop
              4efd 1435  ld   $35,y       17069  ld(hi('prn4x6Return'),Y)        #27 skip a cycle as byte is fetched from table
              4efe e085  jmp  y,$85       17070  jmp(Y,'prn4x6Return')           #28
              4eff c21d  st   [$1d]       17071  st([vTmp])                      #29
                                          17072
                                          17073  align(0x100, size=0x100)
                                          17074
                                          17075  #-----------------------------------------------------------------------
                                          17076  #  Gigatron font4x6 data, (0x4F00 )
                                          17077  #-----------------------------------------------------------------------
                                          17078  #
                                          17079  label('font4x6_115up')
                                          17080  for ch in range(32+83, 132):
                                          17081    comment = 'Char4x6 %s' % repr(chr(ch))
                                          17082    for byte in fontvX0.font4x6[ch-32]:
font4x6_115up:                            17083      ld(byte)
              4f00 0006  ld   $06         ;Char4x6 's'
              4f01 00c6  ld   $c6
              4f02 00c0  ld   $c0
              4f03 004e  ld   $4e         ;Char4x6 't'
              4f04 0044  ld   $44
              4f05 0060  ld   $60
              4f06 000a  ld   $0a         ;Char4x6 'u'
              4f07 00aa  ld   $aa
              4f08 00e0  ld   $e0
              4f09 000a  ld   $0a         ;Char4x6 'v'
              4f0a 00aa  ld   $aa
              4f0b 0040  ld   $40
              4f0c 000a  ld   $0a         ;Char4x6 'w'
              4f0d 00ae  ld   $ae
              4f0e 00e0  ld   $e0
              4f0f 000a  ld   $0a         ;Char4x6 'x'
              4f10 0044  ld   $44
              4f11 00a0  ld   $a0
              4f12 000a  ld   $0a         ;Char4x6 'y'
              4f13 00aa  ld   $aa
              4f14 0044  ld   $44
              4f15 000e  ld   $0e         ;Char4x6 'z'
              4f16 0024  ld   $24
              4f17 00e0  ld   $e0
              4f18 0064  ld   $64         ;Char4x6 '{'
              4f19 00c4  ld   $c4
              4f1a 0060  ld   $60
              4f1b 0044  ld   $44         ;Char4x6 '|'
              4f1c 0044  ld   $44
              4f1d 0040  ld   $40
              4f1e 00c4  ld   $c4         ;Char4x6 '}'
              4f1f 0064  ld   $64
              4f20 00c0  ld   $c0
              4f21 0000  ld   $00         ;Char4x6 '~'
              4f22 00e0  ld   $e0
              4f23 0000  ld   $00
              4f24 00ee  ld   $ee         ;Char4x6 '\x7f'
              4f25 00ee  ld   $ee
              4f26 00e0  ld   $e0
              4f27 0004  ld   $04         ;Char4x6 '\x80'
              4f28 0088  ld   $88
              4f29 0040  ld   $40
              4f2a 0006  ld   $06         ;Char4x6 '\x81'
              4f2b 0090  ld   $90
              4f2c 0000  ld   $00
              4f2d 0002  ld   $02         ;Char4x6 '\x82'
              4f2e 0011  ld   $11
              4f2f 0020  ld   $20
              4f30 0000  ld   $00         ;Char4x6 '\x83'
              4f31 0009  ld   $09
              4f32 0060  ld   $60
                                          17084      comment = C(comment)
                                          17085
              4f33 0200  nop              17086  fillers(until=0xfd)
              4f34 0200  nop
              4f35 0200  nop
              * 202 times
              4ffd 1435  ld   $35,y       17087  ld(hi('prn4x6Return'),Y)        #27 skip a cycle as byte is fetched from table
              4ffe e085  jmp  y,$85       17088  jmp(Y,'prn4x6Return')           #28
              4fff c21d  st   [$1d]       17089  st([vTmp])                      #29
                                          17090
                                          17091  align(0x100, size=0x100)
                                          17092
                                          17093  #-----------------------------------------------------------------------
                                          17094  #
                                          17095  #  End of core
                                          17096  #
                                          17097  #-----------------------------------------------------------------------
                                          17098  disableListing()
                                          ;+-----------------------------------+
                                          ;| SYS_Racer_v1.py                   |
                                          ;+-----------------------------------+
SYS_Racer_v1:
SYS_RacerUpdateVideoX_40:
              5000 1126  ld   [$26],x
              5001 1527  ld   [$27],y
              5002 0d00  ld   [y,x]
              5003 c21d  st   [$1d]
              5004 a128  suba [$28]
              5005 1124  ld   [$24],x
              5006 1525  ld   [$25],y
              5007 ce00  st   [y,x]
              5008 0124  ld   [$24]
              5009 a004  suba $04
              500a c224  st   [$24]
              500b 011d  ld   [$1d]
              500c c228  st   [$28]
              500d 0126  ld   [$26]
              500e 8001  adda $01
              500f c226  st   [$26]
              5010 ec14  bne  .sysRacer0
              5011 0116  ld   [$16]
              5012 fc16  bra  .sysRacer1
              5013 0200  nop
.sysRacer0:   5014 a002  suba $02
              5015 c216  st   [$16]
.sysRacer1:   5016 1403  ld   $03,y
              5017 e0cb  jmp  y,$cb
              5018 00ec  ld   $ec
SYS_RacerUpdateVideoY_40:
              5019 0127  ld   [$27]
              501a 2008  anda $08
              501b ec1e  bne  $501e
              501c fc1f  bra  $501f
              501d 0000  ld   $00
              501e 0001  ld   $01
              501f c21d  st   [$1d]
              5020 1525  ld   [$25],y
              5021 0124  ld   [$24]
              5022 8002  adda $02
              5023 d224  st   [$24],x
              5024 60ee  xora $ee
              5025 c218  st   [$18]
              5026 c219  st   [$19]
              5027 0126  ld   [$26]
              5028 20fe  anda $fe
              5029 811d  adda [$1d]
              502a ce00  st   [y,x]
              502b 0126  ld   [$26]
              502c 8001  adda $01
              502d c226  st   [$26]
              502e 1403  ld   $03,y
              502f e0cb  jmp  y,$cb
              5030 00ec  ld   $ec         ;End of SYS_Racer_v1.py, size 49
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Horizon-256x16.rgb     |
                                          ;+-----------------------------------+
              5031 dc00  st   $00,[y,x++] ;'\x00'
              5032 dc00  st   $00,[y,x++] ;'\x00'
              5033 dc00  st   $00,[y,x++] ;'\x00'
              5034 dc00  st   $00,[y,x++] ;'\x00'
              5035 dc00  st   $00,[y,x++] ;'\x00'
              5036 dc00  st   $00,[y,x++] ;'\x00'
              5037 dc00  st   $00,[y,x++] ;'\x00'
              5038 dc00  st   $00,[y,x++] ;'\x00'
              5039 0000  ld   $00
              503a c218  st   [$18]
              503b 0000  ld   $00
              503c 14f3  ld   $f3,y
              503d e019  jmp  y,$19
              503e c219  st   [$19]
zippedRacerHorizon:
              503f 0041  ld   $41
              5040 0000  ld   $00
              5041 00c3  ld   $c3
              5042 0030  ld   $30
              5043 000c  ld   $0c
              5044 00c3  ld   $c3
              5045 0030  ld   $30
              5046 000c  ld   $0c
              5047 00c3  ld   $c3
              5048 0030  ld   $30
              5049 000c  ld   $0c
              504a 00c3  ld   $c3
              504b 0030  ld   $30
              504c 000c  ld   $0c
              504d 00c3  ld   $c3
              504e 0030  ld   $30
              504f 000c  ld   $0c
              5050 00c3  ld   $c3
              5051 0030  ld   $30
              5052 000c  ld   $0c
              5053 00c3  ld   $c3
              5054 0030  ld   $30
              5055 000c  ld   $0c
              5056 00c3  ld   $c3
              5057 0000  ld   $00
              5058 000c  ld   $0c
              5059 00c3  ld   $c3
              505a 0030  ld   $30
              505b 000c  ld   $0c
              505c 00c3  ld   $c3
              505d 0030  ld   $30
              505e 00fc  ld   $fc
              505f 0002  ld   $02
              5060 0030  ld   $30
              5061 000c  ld   $0c
              5062 00c3  ld   $c3
              5063 0030  ld   $30
              5064 000c  ld   $0c
              5065 00c3  ld   $c3
              5066 0030  ld   $30
              5067 000c  ld   $0c
              5068 00c3  ld   $c3
              5069 0030  ld   $30
              506a 000c  ld   $0c
              506b 00c3  ld   $c3
              506c 0030  ld   $30
              506d 000c  ld   $0c
              506e 00c3  ld   $c3
              506f 0030  ld   $30
              5070 000c  ld   $0c
              5071 00c3  ld   $c3
              5072 0030  ld   $30
              5073 000c  ld   $0c
              5074 00c3  ld   $c3
              5075 0030  ld   $30
              5076 000c  ld   $0c
              5077 00c3  ld   $c3
              5078 0030  ld   $30
              5079 000c  ld   $0c
              507a 00c3  ld   $c3
              507b 0030  ld   $30
              507c 000c  ld   $0c
              507d 00c3  ld   $c3
              507e 0030  ld   $30
              507f 000c  ld   $0c
              5080 00c3  ld   $c3
              5081 0030  ld   $30
              5082 000c  ld   $0c
              5083 00c3  ld   $c3
              5084 0030  ld   $30
              5085 000c  ld   $0c
              5086 00c3  ld   $c3
              5087 0030  ld   $30
              5088 000c  ld   $0c
              5089 00c3  ld   $c3
              508a 0030  ld   $30
              508b 000c  ld   $0c
              508c 00c3  ld   $c3
              508d 0030  ld   $30
              508e 000c  ld   $0c
              508f 00c3  ld   $c3
              5090 0030  ld   $30
              5091 000c  ld   $0c
              5092 00c3  ld   $c3
              5093 0013  ld   $13
              5094 000c  ld   $0c
              5095 00c3  ld   $c3
              5096 0030  ld   $30
              5097 000c  ld   $0c
              5098 00c3  ld   $c3
              5099 002a  ld   $2a
              509a 000c  ld   $0c
              509b 00c3  ld   $c3
              509c 0030  ld   $30
              509d 000c  ld   $0c
              509e 00c3  ld   $c3
              509f 0030  ld   $30
              50a0 000c  ld   $0c
              50a1 00c3  ld   $c3
              50a2 0030  ld   $30
              50a3 000c  ld   $0c
              50a4 00c3  ld   $c3
              50a5 0030  ld   $30
              50a6 000c  ld   $0c
              50a7 00c3  ld   $c3
              50a8 0030  ld   $30
              50a9 000c  ld   $0c
              50aa 00c3  ld   $c3
              50ab 0030  ld   $30
              50ac 000c  ld   $0c
              50ad 00c3  ld   $c3
              50ae 0030  ld   $30
              50af 000c  ld   $0c
              50b0 00c3  ld   $c3
              50b1 0030  ld   $30
              50b2 000c  ld   $0c
              50b3 00c3  ld   $c3
              50b4 0030  ld   $30
              50b5 000c  ld   $0c
              50b6 00c3  ld   $c3
              50b7 0030  ld   $30
              50b8 000c  ld   $0c
              50b9 00c3  ld   $c3
              50ba 0030  ld   $30
              50bb 000c  ld   $0c
              50bc 00c3  ld   $c3
              50bd 0030  ld   $30
              50be 000c  ld   $0c
              50bf 00ab  ld   $ab
              50c0 002a  ld   $2a
              50c1 000c  ld   $0c
              50c2 00c3  ld   $c3
              50c3 0030  ld   $30
              50c4 000c  ld   $0c
              50c5 00c3  ld   $c3
              50c6 0030  ld   $30
              50c7 000c  ld   $0c
              50c8 00c3  ld   $c3
              50c9 0030  ld   $30
              50ca 000c  ld   $0c
              50cb 00c3  ld   $c3
              50cc 0030  ld   $30
              50cd 000c  ld   $0c
              50ce 00c3  ld   $c3
              50cf 00f0  ld   $f0
              50d0 000f  ld   $0f
              50d1 00c3  ld   $c3
              50d2 0030  ld   $30
              50d3 000c  ld   $0c
              50d4 00c3  ld   $c3
              50d5 00f0  ld   $f0
              50d6 000f  ld   $0f
              50d7 00c3  ld   $c3
              50d8 0030  ld   $30
              50d9 000c  ld   $0c
              50da 00c3  ld   $c3
              50db 003f  ld   $3f
              50dc 000c  ld   $0c
              50dd 00c3  ld   $c3
              50de 0030  ld   $30
              50df 000c  ld   $0c
              50e0 00c3  ld   $c3
              50e1 0030  ld   $30
              50e2 000c  ld   $0c
              50e3 00c3  ld   $c3
              50e4 0030  ld   $30
              50e5 000c  ld   $0c
              50e6 00c3  ld   $c3
              50e7 0030  ld   $30
              50e8 000c  ld   $0c
              50e9 00c3  ld   $c3
              50ea 0030  ld   $30
              50eb 000c  ld   $0c
              50ec 00c3  ld   $c3
              50ed 0030  ld   $30
              50ee 000c  ld   $0c
              50ef 00c3  ld   $c3
              50f0 0030  ld   $30
              50f1 000c  ld   $0c
              50f2 00c3  ld   $c3
              50f3 0015  ld   $15
              50f4 000c  ld   $0c
              50f5 00c3  ld   $c3
              50f6 0030  ld   $30
              50f7 000c  ld   $0c
              50f8 00c3  ld   $c3
              50f9 0030  ld   $30
              50fa 000c  ld   $0c
              50fb fe00  bra  ac          ;+-----------------------------------+
              50fc fcfd  bra  $50fd       ;|                                   |
              50fd 1418  ld   $18,y       ;| Trampoline for page $5000 lookups |
              50fe e006  jmp  y,$06       ;|                                   |
              50ff c218  st   [$18]       ;+-----------------------------------+
              5100 00c3  ld   $c3
              5101 0030  ld   $30
              5102 001c  ld   $1c
              5103 0004  ld   $04
              5104 006b  ld   $6b
              5105 0000  ld   $00
              5106 00c3  ld   $c3
              5107 0030  ld   $30
              5108 000c  ld   $0c
              5109 00c3  ld   $c3
              510a 0030  ld   $30
              510b 000c  ld   $0c
              510c 00c3  ld   $c3
              510d 0030  ld   $30
              510e 000c  ld   $0c
              510f 00c3  ld   $c3
              5110 0030  ld   $30
              5111 000c  ld   $0c
              5112 00c3  ld   $c3
              5113 0030  ld   $30
              5114 000c  ld   $0c
              5115 00c3  ld   $c3
              5116 0030  ld   $30
              5117 000c  ld   $0c
              5118 00c3  ld   $c3
              5119 0030  ld   $30
              511a 000c  ld   $0c
              511b 00c3  ld   $c3
              511c 003f  ld   $3f
              511d 0000  ld   $00
              511e 00c3  ld   $c3
              511f 0030  ld   $30
              5120 000c  ld   $0c
              5121 00c3  ld   $c3
              5122 00f0  ld   $f0
              5123 000f  ld   $0f
              5124 00c0  ld   $c0
              5125 0030  ld   $30
              5126 000c  ld   $0c
              5127 00c3  ld   $c3
              5128 0030  ld   $30
              5129 000c  ld   $0c
              512a 00c3  ld   $c3
              512b 0030  ld   $30
              512c 000c  ld   $0c
              512d 00c3  ld   $c3
              512e 0030  ld   $30
              512f 000c  ld   $0c
              5130 00c3  ld   $c3
              5131 0030  ld   $30
              5132 000c  ld   $0c
              5133 00c3  ld   $c3
              5134 0030  ld   $30
              5135 000c  ld   $0c
              5136 00c3  ld   $c3
              5137 0030  ld   $30
              5138 000c  ld   $0c
              5139 00c3  ld   $c3
              513a 0030  ld   $30
              513b 000c  ld   $0c
              513c 00c3  ld   $c3
              513d 0030  ld   $30
              513e 000c  ld   $0c
              513f 00c3  ld   $c3
              5140 0030  ld   $30
              5141 000c  ld   $0c
              5142 00c3  ld   $c3
              5143 0030  ld   $30
              5144 000c  ld   $0c
              5145 00c3  ld   $c3
              5146 0030  ld   $30
              5147 000c  ld   $0c
              5148 00c3  ld   $c3
              5149 0030  ld   $30
              514a 000c  ld   $0c
              514b 00c3  ld   $c3
              514c 0030  ld   $30
              514d 000c  ld   $0c
              514e 00c3  ld   $c3
              514f 0030  ld   $30
              5150 000c  ld   $0c
              5151 00c3  ld   $c3
              5152 0030  ld   $30
              5153 000c  ld   $0c
              5154 00c3  ld   $c3
              5155 0030  ld   $30
              5156 000c  ld   $0c
              5157 00c3  ld   $c3
              5158 002a  ld   $2a
              5159 000c  ld   $0c
              515a 00c3  ld   $c3
              515b 0030  ld   $30
              515c 000c  ld   $0c
              515d 00ab  ld   $ab
              515e 002a  ld   $2a
              515f 000c  ld   $0c
              5160 00c3  ld   $c3
              5161 0030  ld   $30
              5162 000c  ld   $0c
              5163 00c3  ld   $c3
              5164 0030  ld   $30
              5165 000c  ld   $0c
              5166 00c3  ld   $c3
              5167 0030  ld   $30
              5168 000c  ld   $0c
              5169 00c3  ld   $c3
              516a 0030  ld   $30
              516b 000c  ld   $0c
              516c 00c3  ld   $c3
              516d 00ff  ld   $ff
              516e 00fb  ld   $fb
              516f 00bf  ld   $bf
              5170 003f  ld   $3f
              5171 000c  ld   $0c
              5172 00c3  ld   $c3
              5173 0030  ld   $30
              5174 000c  ld   $0c
              5175 00c3  ld   $c3
              5176 0030  ld   $30
              5177 000c  ld   $0c
              5178 00c3  ld   $c3
              5179 0030  ld   $30
              517a 000c  ld   $0c
              517b 00c3  ld   $c3
              517c 0030  ld   $30
              517d 000c  ld   $0c
              517e 00c3  ld   $c3
              517f 0030  ld   $30
              5180 000c  ld   $0c
              5181 00c3  ld   $c3
              5182 0030  ld   $30
              5183 00ac  ld   $ac
              5184 0056  ld   $56
              5185 0095  ld   $95
              5186 000a  ld   $0a
              5187 00c3  ld   $c3
              5188 0030  ld   $30
              5189 000c  ld   $0c
              518a 00c3  ld   $c3
              518b 0030  ld   $30
              518c 000c  ld   $0c
              518d 00c3  ld   $c3
              518e 0030  ld   $30
              518f 000c  ld   $0c
              5190 00c3  ld   $c3
              5191 0030  ld   $30
              5192 000c  ld   $0c
              5193 00c3  ld   $c3
              5194 00f0  ld   $f0
              5195 00ff  ld   $ff
              5196 00c3  ld   $c3
              5197 0030  ld   $30
              5198 000c  ld   $0c
              5199 00c3  ld   $c3
              519a 00f0  ld   $f0
              519b 00ff  ld   $ff
              519c 00c3  ld   $c3
              519d 0030  ld   $30
              519e 000c  ld   $0c
              519f 00c3  ld   $c3
              51a0 00ff  ld   $ff
              51a1 000f  ld   $0f
              51a2 00c3  ld   $c3
              51a3 0030  ld   $30
              51a4 000c  ld   $0c
              51a5 00c3  ld   $c3
              51a6 0030  ld   $30
              51a7 000c  ld   $0c
              51a8 00c3  ld   $c3
              51a9 0030  ld   $30
              51aa 000c  ld   $0c
              51ab 00c3  ld   $c3
              51ac 0030  ld   $30
              51ad 000c  ld   $0c
              51ae 00c3  ld   $c3
              51af 0030  ld   $30
              51b0 000c  ld   $0c
              51b1 00c3  ld   $c3
              51b2 0030  ld   $30
              51b3 000c  ld   $0c
              51b4 00c3  ld   $c3
              51b5 0030  ld   $30
              51b6 000c  ld   $0c
              51b7 00c3  ld   $c3
              51b8 0015  ld   $15
              51b9 000c  ld   $0c
              51ba 00c3  ld   $c3
              51bb 0030  ld   $30
              51bc 000c  ld   $0c
              51bd 00c3  ld   $c3
              51be 0030  ld   $30
              51bf 000c  ld   $0c
              51c0 00c3  ld   $c3
              51c1 0030  ld   $30
              51c2 001c  ld   $1c
              51c3 00ac  ld   $ac
              51c4 0056  ld   $56
              51c5 0060  ld   $60
              51c6 0059  ld   $59
              51c7 0030  ld   $30
              51c8 000c  ld   $0c
              51c9 00c3  ld   $c3
              51ca 0070  ld   $70
              51cb 0055  ld   $55
              51cc 00fd  ld   $fd
              51cd 0055  ld   $55
              51ce 00f5  ld   $f5
              51cf 0057  ld   $57
              51d0 00d5  ld   $d5
              51d1 005f  ld   $5f
              51d2 0055  ld   $55
              51d3 007f  ld   $7f
              51d4 0055  ld   $55
              51d5 00fd  ld   $fd
              51d6 0055  ld   $55
              51d7 0005  ld   $05
              51d8 00c3  ld   $c3
              51d9 0030  ld   $30
              51da 000c  ld   $0c
              51db 00c3  ld   $c3
              51dc 00f0  ld   $f0
              51dd 000b  ld   $0b
              51de 00c0  ld   $c0
              51df 0030  ld   $30
              51e0 000c  ld   $0c
              51e1 00c3  ld   $c3
              51e2 002f  ld   $2f
              51e3 0000  ld   $00
              51e4 00c3  ld   $c3
              51e5 0030  ld   $30
              51e6 000c  ld   $0c
              51e7 00c3  ld   $c3
              51e8 0030  ld   $30
              51e9 000c  ld   $0c
              51ea 00c3  ld   $c3
              51eb 0030  ld   $30
              51ec 000c  ld   $0c
              51ed 00c3  ld   $c3
              51ee 0030  ld   $30
              51ef 000c  ld   $0c
              51f0 00c3  ld   $c3
              51f1 0030  ld   $30
              51f2 000c  ld   $0c
              51f3 00c3  ld   $c3
              51f4 0030  ld   $30
              51f5 000c  ld   $0c
              51f6 00c3  ld   $c3
              51f7 0030  ld   $30
              51f8 000c  ld   $0c
              51f9 00c3  ld   $c3
              51fa 0030  ld   $30
              51fb fe00  bra  ac          ;+-----------------------------------+
              51fc fcfd  bra  $51fd       ;|                                   |
              51fd 1418  ld   $18,y       ;| Trampoline for page $5100 lookups |
              51fe e006  jmp  y,$06       ;|                                   |
              51ff c218  st   [$18]       ;+-----------------------------------+
              5200 000c  ld   $0c
              5201 00c3  ld   $c3
              5202 0030  ld   $30
              5203 000c  ld   $0c
              5204 00c3  ld   $c3
              5205 0030  ld   $30
              5206 000c  ld   $0c
              5207 00c3  ld   $c3
              5208 0030  ld   $30
              5209 000c  ld   $0c
              520a 00c3  ld   $c3
              520b 0030  ld   $30
              520c 000c  ld   $0c
              520d 00c3  ld   $c3
              520e 0030  ld   $30
              520f 000c  ld   $0c
              5210 00c3  ld   $c3
              5211 0030  ld   $30
              5212 000c  ld   $0c
              5213 00c3  ld   $c3
              5214 0030  ld   $30
              5215 000c  ld   $0c
              5216 00c3  ld   $c3
              5217 0030  ld   $30
              5218 000c  ld   $0c
              5219 00c3  ld   $c3
              521a 0030  ld   $30
              521b 000c  ld   $0c
              521c 00c3  ld   $c3
              521d 002a  ld   $2a
              521e 000c  ld   $0c
              521f 00c3  ld   $c3
              5220 00b0  ld   $b0
              5221 00aa  ld   $aa
              5222 00aa  ld   $aa
              5223 002a  ld   $2a
              5224 000c  ld   $0c
              5225 00c3  ld   $c3
              5226 0030  ld   $30
              5227 000c  ld   $0c
              5228 00c3  ld   $c3
              5229 0030  ld   $30
              522a 000c  ld   $0c
              522b 00c3  ld   $c3
              522c 0030  ld   $30
              522d 000c  ld   $0c
              522e 00c3  ld   $c3
              522f 0030  ld   $30
              5230 000c  ld   $0c
              5231 00bf  ld   $bf
              5232 0091  ld   $91
              5233 00f4  ld   $f4
              5234 0046  ld   $46
              5235 00d2  ld   $d2
              5236 000b  ld   $0b
              5237 00c3  ld   $c3
              5238 0030  ld   $30
              5239 000c  ld   $0c
              523a 00c3  ld   $c3
              523b 0030  ld   $30
              523c 000c  ld   $0c
              523d 00c3  ld   $c3
              523e 0030  ld   $30
              523f 000c  ld   $0c
              5240 00c3  ld   $c3
              5241 0030  ld   $30
              5242 000c  ld   $0c
              5243 00c3  ld   $c3
              5244 0030  ld   $30
              5245 00ac  ld   $ac
              5246 00c2  ld   $c2
              5247 00b0  ld   $b0
              5248 00aa  ld   $aa
              5249 00aa  ld   $aa
              524a 00aa  ld   $aa
              524b 00aa  ld   $aa
              524c 00c2  ld   $c2
              524d 00b0  ld   $b0
              524e 000a  ld   $0a
              524f 00c3  ld   $c3
              5250 0030  ld   $30
              5251 000c  ld   $0c
              5252 00c3  ld   $c3
              5253 0030  ld   $30
              5254 000c  ld   $0c
              5255 00c3  ld   $c3
              5256 0030  ld   $30
              5257 000c  ld   $0c
              5258 00c3  ld   $c3
              5259 0030  ld   $30
              525a 00ac  ld   $ac
              525b 00fe  ld   $fe
              525c 00ff  ld   $ff
              525d 003f  ld   $3f
              525e 00c0  ld   $c0
              525f 0030  ld   $30
              5260 00ac  ld   $ac
              5261 00fe  ld   $fe
              5262 00ff  ld   $ff
              5263 003f  ld   $3f
              5264 00c0  ld   $c0
              5265 00b0  ld   $b0
              5266 00fa  ld   $fa
              5267 00ff  ld   $ff
              5268 00ff  ld   $ff
              5269 0000  ld   $00
              526a 00c3  ld   $c3
              526b 0030  ld   $30
              526c 000c  ld   $0c
              526d 00c3  ld   $c3
              526e 0030  ld   $30
              526f 000c  ld   $0c
              5270 00c3  ld   $c3
              5271 0030  ld   $30
              5272 000c  ld   $0c
              5273 00c3  ld   $c3
              5274 0030  ld   $30
              5275 000c  ld   $0c
              5276 00c3  ld   $c3
              5277 0030  ld   $30
              5278 000c  ld   $0c
              5279 00c3  ld   $c3
              527a 0030  ld   $30
              527b 000c  ld   $0c
              527c 0057  ld   $57
              527d 0055  ld   $55
              527e 0005  ld   $05
              527f 00c3  ld   $c3
              5280 0030  ld   $30
              5281 000c  ld   $0c
              5282 00c3  ld   $c3
              5283 0030  ld   $30
              5284 000c  ld   $0c
              5285 00c3  ld   $c3
              5286 0096  ld   $96
              5287 0015  ld   $15
              5288 0058  ld   $58
              5289 006b  ld   $6b
              528a 00b0  ld   $b0
              528b 00ae  ld   $ae
              528c 0030  ld   $30
              528d 000c  ld   $0c
              528e 00c3  ld   $c3
              528f 00f0  ld   $f0
              5290 00ff  ld   $ff
              5291 00ff  ld   $ff
              5292 00ff  ld   $ff
              * 12 times
              529c 000f  ld   $0f
              529d 00c3  ld   $c3
              529e 0030  ld   $30
              529f 000c  ld   $0c
              52a0 00c3  ld   $c3
              52a1 0030  ld   $30
              52a2 00fc  ld   $fc
              52a3 0003  ld   $03
              52a4 0030  ld   $30
              52a5 000c  ld   $0c
              52a6 00ff  ld   $ff
              52a7 0000  ld   $00
              52a8 000c  ld   $0c
              52a9 00c3  ld   $c3
              52aa 0030  ld   $30
              52ab 000c  ld   $0c
              52ac 00c3  ld   $c3
              52ad 0030  ld   $30
              52ae 00fc  ld   $fc
              52af 00bf  ld   $bf
              52b0 0030  ld   $30
              52b1 000c  ld   $0c
              52b2 00c3  ld   $c3
              52b3 0030  ld   $30
              52b4 000c  ld   $0c
              52b5 00c3  ld   $c3
              52b6 0030  ld   $30
              52b7 000c  ld   $0c
              52b8 00c3  ld   $c3
              52b9 0030  ld   $30
              52ba 000c  ld   $0c
              52bb 00c3  ld   $c3
              52bc 0030  ld   $30
              52bd 000c  ld   $0c
              52be 00c3  ld   $c3
              52bf 0030  ld   $30
              52c0 000c  ld   $0c
              52c1 00c3  ld   $c3
              52c2 0030  ld   $30
              52c3 000c  ld   $0c
              52c4 00c3  ld   $c3
              52c5 0030  ld   $30
              52c6 000c  ld   $0c
              52c7 00c3  ld   $c3
              52c8 0030  ld   $30
              52c9 000c  ld   $0c
              52ca 00c3  ld   $c3
              52cb 0030  ld   $30
              52cc 000c  ld   $0c
              52cd 00c3  ld   $c3
              52ce 0030  ld   $30
              52cf 000c  ld   $0c
              52d0 00c3  ld   $c3
              52d1 0030  ld   $30
              52d2 000c  ld   $0c
              52d3 00c3  ld   $c3
              52d4 0030  ld   $30
              52d5 000c  ld   $0c
              52d6 00c3  ld   $c3
              52d7 0030  ld   $30
              52d8 000c  ld   $0c
              52d9 00c3  ld   $c3
              52da 00f0  ld   $f0
              52db 00ff  ld   $ff
              52dc 00ab  ld   $ab
              52dd 00ff  ld   $ff
              52de 000f  ld   $0f
              52df 00c3  ld   $c3
              52e0 006a  ld   $6a
              52e1 00a5  ld   $a5
              52e2 0056  ld   $56
              52e3 002a  ld   $2a
              52e4 000c  ld   $0c
              52e5 00c3  ld   $c3
              52e6 0030  ld   $30
              52e7 000c  ld   $0c
              52e8 00c3  ld   $c3
              52e9 0030  ld   $30
              52ea 000c  ld   $0c
              52eb 00c3  ld   $c3
              52ec 0030  ld   $30
              52ed 000c  ld   $0c
              52ee 00c3  ld   $c3
              52ef 0030  ld   $30
              52f0 00fc  ld   $fc
              52f1 004a  ld   $4a
              52f2 0030  ld   $30
              52f3 00fc  ld   $fc
              52f4 00c2  ld   $c2
              52f5 0070  ld   $70
              52f6 00f4  ld   $f4
              52f7 00c2  ld   $c2
              52f8 0030  ld   $30
              52f9 000c  ld   $0c
              52fa 00c3  ld   $c3
              52fb fe00  bra  ac          ;+-----------------------------------+
              52fc fcfd  bra  $52fd       ;|                                   |
              52fd 1418  ld   $18,y       ;| Trampoline for page $5200 lookups |
              52fe e006  jmp  y,$06       ;|                                   |
              52ff c218  st   [$18]       ;+-----------------------------------+
              5300 0030  ld   $30
              5301 000c  ld   $0c
              5302 00c3  ld   $c3
              5303 0030  ld   $30
              5304 000c  ld   $0c
              5305 00c3  ld   $c3
              5306 0030  ld   $30
              5307 000c  ld   $0c
              5308 00c3  ld   $c3
              5309 00f0  ld   $f0
              530a 00af  ld   $af
              530b 00fe  ld   $fe
              530c 00aa  ld   $aa
              530d 00aa  ld   $aa
              530e 00aa  ld   $aa
              * 6 times
              5312 00bf  ld   $bf
              5313 00fa  ld   $fa
              5314 00c3  ld   $c3
              5315 0030  ld   $30
              5316 000c  ld   $0c
              5317 00c3  ld   $c3
              5318 0030  ld   $30
              5319 000c  ld   $0c
              531a 00c3  ld   $c3
              531b 0030  ld   $30
              531c 000c  ld   $0c
              531d 00c3  ld   $c3
              531e 00f0  ld   $f0
              531f 00ff  ld   $ff
              5320 00ff  ld   $ff
              5321 0030  ld   $30
              5322 000c  ld   $0c
              5323 00c3  ld   $c3
              5324 00f0  ld   $f0
              5325 00ff  ld   $ff
              5326 00ff  ld   $ff
              5327 0030  ld   $30
              5328 000c  ld   $0c
              5329 00c3  ld   $c3
              532a 00ff  ld   $ff
              532b 00ff  ld   $ff
              532c 00c3  ld   $c3
              532d 0030  ld   $30
              532e 000c  ld   $0c
              532f 00c3  ld   $c3
              5330 0030  ld   $30
              5331 000c  ld   $0c
              5332 00c3  ld   $c3
              5333 0030  ld   $30
              5334 000c  ld   $0c
              5335 00c3  ld   $c3
              5336 0030  ld   $30
              5337 000c  ld   $0c
              5338 00c3  ld   $c3
              5339 0030  ld   $30
              533a 000c  ld   $0c
              533b 00c3  ld   $c3
              533c 0030  ld   $30
              533d 000c  ld   $0c
              533e 00c3  ld   $c3
              533f 0030  ld   $30
              5340 000c  ld   $0c
              5341 00c3  ld   $c3
              5342 0015  ld   $15
              5343 000c  ld   $0c
              5344 00c3  ld   $c3
              5345 0030  ld   $30
              5346 000c  ld   $0c
              5347 00c3  ld   $c3
              5348 0030  ld   $30
              5349 000c  ld   $0c
              534a 00c3  ld   $c3
              534b 00eb  ld   $eb
              534c 001a  ld   $1a
              534d 00ac  ld   $ac
              534e 0056  ld   $56
              534f 00b0  ld   $b0
              5350 00a6  ld   $a6
              5351 0030  ld   $30
              5352 000c  ld   $0c
              5353 00c3  ld   $c3
              5354 0070  ld   $70
              5355 0055  ld   $55
              5356 00fd  ld   $fd
              5357 0055  ld   $55
              5358 00f5  ld   $f5
              5359 0057  ld   $57
              535a 00d5  ld   $d5
              535b 005f  ld   $5f
              535c 0055  ld   $55
              535d 007f  ld   $7f
              535e 0055  ld   $55
              535f 00fd  ld   $fd
              5360 0055  ld   $55
              5361 0005  ld   $05
              5362 00c3  ld   $c3
              5363 0030  ld   $30
              5364 000c  ld   $0c
              5365 00c3  ld   $c3
              5366 0030  ld   $30
              5367 000c  ld   $0c
              5368 00bf  ld   $bf
              5369 0000  ld   $00
              536a 00fc  ld   $fc
              536b 0002  ld   $02
              536c 0030  ld   $30
              536d 000c  ld   $0c
              536e 00c3  ld   $c3
              536f 0030  ld   $30
              5370 000c  ld   $0c
              5371 00c3  ld   $c3
              5372 0030  ld   $30
              5373 006c  ld   $6c
              5374 00fc  ld   $fc
              5375 0030  ld   $30
              5376 000c  ld   $0c
              5377 00c3  ld   $c3
              5378 0030  ld   $30
              5379 000c  ld   $0c
              537a 00c3  ld   $c3
              537b 0030  ld   $30
              537c 000c  ld   $0c
              537d 00c3  ld   $c3
              537e 0030  ld   $30
              537f 000c  ld   $0c
              5380 00c3  ld   $c3
              5381 0030  ld   $30
              5382 000c  ld   $0c
              5383 00c3  ld   $c3
              5384 0030  ld   $30
              5385 000c  ld   $0c
              5386 00c3  ld   $c3
              5387 0030  ld   $30
              5388 000c  ld   $0c
              5389 00c3  ld   $c3
              538a 0030  ld   $30
              538b 000c  ld   $0c
              538c 00c3  ld   $c3
              538d 0030  ld   $30
              538e 000c  ld   $0c
              538f 00c3  ld   $c3
              5390 0030  ld   $30
              5391 000c  ld   $0c
              5392 00c3  ld   $c3
              5393 0030  ld   $30
              5394 000c  ld   $0c
              5395 00c3  ld   $c3
              5396 0030  ld   $30
              5397 000c  ld   $0c
              5398 00c3  ld   $c3
              5399 0030  ld   $30
              539a 000c  ld   $0c
              539b 00c3  ld   $c3
              539c 0030  ld   $30
              539d 000c  ld   $0c
              539e 00c3  ld   $c3
              539f 00f0  ld   $f0
              53a0 00af  ld   $af
              53a1 00fe  ld   $fe
              53a2 00ea  ld   $ea
              53a3 000f  ld   $0f
              53a4 00ab  ld   $ab
              53a5 00aa  ld   $aa
              53a6 00aa  ld   $aa
              53a7 00aa  ld   $aa
              53a8 002a  ld   $2a
              53a9 000c  ld   $0c
              53aa 00c3  ld   $c3
              53ab 0030  ld   $30
              53ac 000c  ld   $0c
              53ad 00c3  ld   $c3
              53ae 0030  ld   $30
              53af 000c  ld   $0c
              53b0 00c3  ld   $c3
              53b1 0030  ld   $30
              53b2 000c  ld   $0c
              53b3 00c3  ld   $c3
              53b4 00f0  ld   $f0
              53b5 001b  ld   $1b
              53b6 00bd  ld   $bd
              53b7 0030  ld   $30
              53b8 00fc  ld   $fc
              53b9 00c2  ld   $c2
              53ba 00f0  ld   $f0
              53bb 002b  ld   $2b
              53bc 00bd  ld   $bd
              53bd 0030  ld   $30
              53be 000c  ld   $0c
              53bf 00c3  ld   $c3
              53c0 0030  ld   $30
              53c1 000c  ld   $0c
              53c2 00c3  ld   $c3
              53c3 0030  ld   $30
              53c4 000c  ld   $0c
              53c5 00c3  ld   $c3
              53c6 0030  ld   $30
              53c7 000c  ld   $0c
              53c8 00c3  ld   $c3
              53c9 00f0  ld   $f0
              53ca 00af  ld   $af
              53cb 00ab  ld   $ab
              53cc 0095  ld   $95
              53cd 005a  ld   $5a
              53ce 0055  ld   $55
              53cf 006a  ld   $6a
              53d0 00a5  ld   $a5
              53d1 0056  ld   $56
              53d2 00aa  ld   $aa
              53d3 00fe  ld   $fe
              53d4 00c3  ld   $c3
              53d5 0030  ld   $30
              53d6 000c  ld   $0c
              53d7 00c3  ld   $c3
              53d8 0030  ld   $30
              53d9 000c  ld   $0c
              53da 00c3  ld   $c3
              53db 0030  ld   $30
              53dc 000c  ld   $0c
              53dd 00c3  ld   $c3
              53de 00ff  ld   $ff
              53df 00af  ld   $af
              53e0 00fe  ld   $fe
              53e1 0030  ld   $30
              53e2 000c  ld   $0c
              53e3 00c3  ld   $c3
              53e4 00ff  ld   $ff
              53e5 00af  ld   $af
              53e6 00fe  ld   $fe
              53e7 0030  ld   $30
              53e8 000c  ld   $0c
              53e9 00ff  ld   $ff
              53ea 00bf  ld   $bf
              53eb 00fa  ld   $fa
              53ec 00c3  ld   $c3
              53ed 0030  ld   $30
              53ee 000c  ld   $0c
              53ef 00c3  ld   $c3
              53f0 0030  ld   $30
              53f1 000c  ld   $0c
              53f2 00c3  ld   $c3
              53f3 0030  ld   $30
              53f4 000c  ld   $0c
              53f5 00c3  ld   $c3
              53f6 0030  ld   $30
              53f7 000c  ld   $0c
              53f8 00c3  ld   $c3
              53f9 0030  ld   $30
              53fa 000c  ld   $0c
              53fb fe00  bra  ac          ;+-----------------------------------+
              53fc fcfd  bra  $53fd       ;|                                   |
              53fd 1418  ld   $18,y       ;| Trampoline for page $5300 lookups |
              53fe e006  jmp  y,$06       ;|                                   |
              53ff c218  st   [$18]       ;+-----------------------------------+
              5400 00c3  ld   $c3
              5401 0030  ld   $30
              5402 000c  ld   $0c
              5403 00c3  ld   $c3
              5404 0030  ld   $30
              5405 000c  ld   $0c
              5406 00ab  ld   $ab
              5407 0095  ld   $95
              5408 000a  ld   $0a
              5409 00c3  ld   $c3
              540a 0030  ld   $30
              540b 000c  ld   $0c
              540c 00c3  ld   $c3
              540d 0030  ld   $30
              540e 000c  ld   $0c
              540f 00c3  ld   $c3
              5410 00e9  ld   $e9
              5411 001a  ld   $1a
              5412 0058  ld   $58
              5413 0041  ld   $41
              5414 00b0  ld   $b0
              5415 00ae  ld   $ae
              5416 0030  ld   $30
              5417 000c  ld   $0c
              5418 00c3  ld   $c3
              5419 00b0  ld   $b0
              541a 00ae  ld   $ae
              541b 00fe  ld   $fe
              541c 00aa  ld   $aa
              541d 00fe  ld   $fe
              541e 00ab  ld   $ab
              541f 00ea  ld   $ea
              5420 00af  ld   $af
              5421 00ab  ld   $ab
              5422 00bf  ld   $bf
              5423 00aa  ld   $aa
              5424 00ff  ld   $ff
              5425 00aa  ld   $aa
              5426 000e  ld   $0e
              5427 00c3  ld   $c3
              5428 0030  ld   $30
              5429 000c  ld   $0c
              542a 00c3  ld   $c3
              542b 0030  ld   $30
              542c 000c  ld   $0c
              542d 00c3  ld   $c3
              542e 007f  ld   $7f
              542f 0005  ld   $05
              5430 00c0  ld   $c0
              5431 0030  ld   $30
              5432 000c  ld   $0c
              5433 00c3  ld   $c3
              5434 0030  ld   $30
              5435 000c  ld   $0c
              5436 00c3  ld   $c3
              5437 0030  ld   $30
              5438 00bc  ld   $bc
              5439 00bc  ld   $bc
              543a 0030  ld   $30
              543b 000c  ld   $0c
              543c 00c3  ld   $c3
              543d 0030  ld   $30
              543e 000c  ld   $0c
              543f 00c3  ld   $c3
              5440 0030  ld   $30
              5441 000c  ld   $0c
              5442 00c3  ld   $c3
              5443 0030  ld   $30
              5444 000c  ld   $0c
              5445 00c3  ld   $c3
              5446 0030  ld   $30
              5447 000c  ld   $0c
              5448 00c3  ld   $c3
              5449 0030  ld   $30
              544a 000c  ld   $0c
              544b 00c3  ld   $c3
              544c 0030  ld   $30
              544d 000c  ld   $0c
              544e 00c3  ld   $c3
              544f 0030  ld   $30
              5450 000c  ld   $0c
              5451 00c3  ld   $c3
              5452 0030  ld   $30
              5453 000c  ld   $0c
              5454 00c3  ld   $c3
              5455 0030  ld   $30
              5456 000c  ld   $0c
              5457 00c3  ld   $c3
              5458 0030  ld   $30
              5459 000c  ld   $0c
              545a 00c3  ld   $c3
              545b 0030  ld   $30
              545c 000c  ld   $0c
              545d 00c3  ld   $c3
              545e 0030  ld   $30
              545f 000c  ld   $0c
              5460 00c3  ld   $c3
              5461 0030  ld   $30
              5462 000c  ld   $0c
              5463 00c3  ld   $c3
              5464 00b0  ld   $b0
              5465 00fa  ld   $fa
              5466 00ab  ld   $ab
              5467 00bf  ld   $bf
              5468 000a  ld   $0a
              5469 00ab  ld   $ab
              546a 0095  ld   $95
              546b 005a  ld   $5a
              546c 00a9  ld   $a9
              546d 002a  ld   $2a
              546e 000c  ld   $0c
              546f 00c3  ld   $c3
              5470 0012  ld   $12
              5471 005c  ld   $5c
              5472 00c2  ld   $c2
              5473 0030  ld   $30
              5474 000c  ld   $0c
              5475 00c3  ld   $c3
              5476 0030  ld   $30
              5477 000c  ld   $0c
              5478 00c3  ld   $c3
              5479 00bf  ld   $bf
              547a 0004  ld   $04
              547b 00c3  ld   $c3
              547c 002f  ld   $2f
              547d 00fc  ld   $fc
              547e 00c2  ld   $c2
              547f 002f  ld   $2f
              5480 000c  ld   $0c
              5481 0047  ld   $47
              5482 003f  ld   $3f
              5483 000c  ld   $0c
              5484 00c3  ld   $c3
              5485 0030  ld   $30
              5486 000c  ld   $0c
              5487 00c3  ld   $c3
              5488 0030  ld   $30
              5489 000c  ld   $0c
              548a 00c3  ld   $c3
              548b 0030  ld   $30
              548c 000c  ld   $0c
              548d 00c3  ld   $c3
              548e 00b0  ld   $b0
              548f 00aa  ld   $aa
              5490 00aa  ld   $aa
              5491 0095  ld   $95
              5492 005a  ld   $5a
              5493 00a9  ld   $a9
              5494 006a  ld   $6a
              5495 00a5  ld   $a5
              5496 0056  ld   $56
              5497 00aa  ld   $aa
              5498 00aa  ld   $aa
              5499 00c2  ld   $c2
              549a 0030  ld   $30
              549b 000c  ld   $0c
              549c 00c3  ld   $c3
              549d 0030  ld   $30
              549e 000c  ld   $0c
              549f 00c3  ld   $c3
              54a0 0030  ld   $30
              54a1 000c  ld   $0c
              54a2 000f  ld   $0f
              54a3 003f  ld   $3f
              54a4 00ac  ld   $ac
              54a5 00fe  ld   $fe
              54a6 0030  ld   $30
              54a7 000c  ld   $0c
              54a8 000f  ld   $0f
              54a9 003f  ld   $3f
              54aa 00ac  ld   $ac
              54ab 00fe  ld   $fe
              54ac 0030  ld   $30
              54ad 003c  ld   $3c
              54ae 00fc  ld   $fc
              54af 00b0  ld   $b0
              54b0 00fa  ld   $fa
              54b1 00c3  ld   $c3
              54b2 0030  ld   $30
              54b3 000c  ld   $0c
              54b4 00c3  ld   $c3
              54b5 0030  ld   $30
              54b6 000c  ld   $0c
              54b7 00c3  ld   $c3
              54b8 0030  ld   $30
              54b9 000c  ld   $0c
              54ba 00c3  ld   $c3
              54bb 0030  ld   $30
              54bc 000c  ld   $0c
              54bd 00c3  ld   $c3
              54be 0030  ld   $30
              54bf 000c  ld   $0c
              54c0 00c3  ld   $c3
              54c1 0030  ld   $30
              54c2 000c  ld   $0c
              54c3 00c3  ld   $c3
              54c4 0030  ld   $30
              54c5 000c  ld   $0c
              54c6 00c3  ld   $c3
              54c7 0015  ld   $15
              54c8 000c  ld   $0c
              54c9 00c3  ld   $c3
              54ca 0030  ld   $30
              54cb 000c  ld   $0c
              54cc 00c3  ld   $c3
              54cd 0030  ld   $30
              54ce 000c  ld   $0c
              54cf 00c3  ld   $c3
              54d0 00eb  ld   $eb
              54d1 001a  ld   $1a
              54d2 0004  ld   $04
              54d3 0069  ld   $69
              54d4 00b0  ld   $b0
              54d5 00a6  ld   $a6
              54d6 0030  ld   $30
              54d7 000c  ld   $0c
              54d8 00c3  ld   $c3
              54d9 0070  ld   $70
              54da 0055  ld   $55
              54db 00fd  ld   $fd
              54dc 0055  ld   $55
              54dd 00f5  ld   $f5
              54de 0057  ld   $57
              54df 00d5  ld   $d5
              54e0 005f  ld   $5f
              54e1 0055  ld   $55
              54e2 007f  ld   $7f
              54e3 0055  ld   $55
              54e4 00fd  ld   $fd
              54e5 0055  ld   $55
              54e6 0005  ld   $05
              54e7 00c3  ld   $c3
              54e8 0030  ld   $30
              54e9 000c  ld   $0c
              54ea 00c3  ld   $c3
              54eb 0030  ld   $30
              54ec 000c  ld   $0c
              54ed 00c3  ld   $c3
              54ee 0030  ld   $30
              54ef 0050  ld   $50
              54f0 00fd  ld   $fd
              54f1 0030  ld   $30
              54f2 000c  ld   $0c
              54f3 00c3  ld   $c3
              54f4 0030  ld   $30
              54f5 000c  ld   $0c
              54f6 00c3  ld   $c3
              54f7 0030  ld   $30
              54f8 006c  ld   $6c
              54f9 00fc  ld   $fc
              54fa 0030  ld   $30
              54fb fe00  bra  ac          ;+-----------------------------------+
              54fc fcfd  bra  $54fd       ;|                                   |
              54fd 1418  ld   $18,y       ;| Trampoline for page $5400 lookups |
              54fe e006  jmp  y,$06       ;|                                   |
              54ff c218  st   [$18]       ;+-----------------------------------+
              5500 000c  ld   $0c
              5501 00c3  ld   $c3
              5502 0030  ld   $30
              5503 000c  ld   $0c
              5504 00c3  ld   $c3
              5505 0030  ld   $30
              5506 000c  ld   $0c
              5507 00c3  ld   $c3
              5508 0030  ld   $30
              5509 000c  ld   $0c
              550a 00c3  ld   $c3
              550b 0030  ld   $30
              550c 000c  ld   $0c
              550d 00c3  ld   $c3
              550e 0030  ld   $30
              550f 000c  ld   $0c
              5510 00c3  ld   $c3
              5511 0030  ld   $30
              5512 000c  ld   $0c
              5513 00c3  ld   $c3
              5514 0030  ld   $30
              5515 000c  ld   $0c
              5516 00c3  ld   $c3
              5517 0030  ld   $30
              5518 000c  ld   $0c
              5519 00c3  ld   $c3
              551a 0030  ld   $30
              551b 000c  ld   $0c
              551c 00c3  ld   $c3
              551d 0030  ld   $30
              551e 000c  ld   $0c
              551f 00c3  ld   $c3
              5520 0030  ld   $30
              5521 000c  ld   $0c
              5522 00c3  ld   $c3
              5523 0030  ld   $30
              5524 000c  ld   $0c
              5525 00c3  ld   $c3
              5526 0030  ld   $30
              5527 000c  ld   $0c
              5528 00c3  ld   $c3
              5529 0070  ld   $70
              552a 00a5  ld   $a5
              552b 00fe  ld   $fe
              552c 00ea  ld   $ea
              552d 000f  ld   $0f
              552e 00ab  ld   $ab
              552f 006a  ld   $6a
              5530 00a5  ld   $a5
              5531 0056  ld   $56
              5532 002a  ld   $2a
              5533 000c  ld   $0c
              5534 004b  ld   $4b
              5535 0092  ld   $92
              5536 0054  ld   $54
              5537 0096  ld   $96
              5538 0030  ld   $30
              5539 000c  ld   $0c
              553a 00c3  ld   $c3
              553b 0030  ld   $30
              553c 000c  ld   $0c
              553d 00c3  ld   $c3
              553e 006f  ld   $6f
              553f 0004  ld   $04
              5540 00c3  ld   $c3
              5541 00f0  ld   $f0
              5542 000b  ld   $0b
              5543 00bf  ld   $bf
              5544 0030  ld   $30
              5545 000c  ld   $0c
              5546 004b  ld   $4b
              5547 002f  ld   $2f
              5548 000c  ld   $0c
              5549 00c3  ld   $c3
              554a 0030  ld   $30
              554b 000c  ld   $0c
              554c 00c3  ld   $c3
              554d 0030  ld   $30
              554e 00fc  ld   $fc
              554f 00ff  ld   $ff
              5550 00ff  ld   $ff
              5551 00ff  ld   $ff
              5552 00ff  ld   $ff
              5553 00aa  ld   $aa
              5554 0065  ld   $65
              5555 00a9  ld   $a9
              5556 00aa  ld   $aa
              5557 00aa  ld   $aa
              5558 00aa  ld   $aa
              * 7 times
              555d 0065  ld   $65
              555e 00a9  ld   $a9
              555f 00ff  ld   $ff
              5560 00ff  ld   $ff
              5561 00ff  ld   $ff
              5562 00ff  ld   $ff
              5563 000f  ld   $0f
              5564 00c3  ld   $c3
              5565 0030  ld   $30
              5566 000c  ld   $0c
              5567 00c3  ld   $c3
              5568 0030  ld   $30
              5569 00ac  ld   $ac
              556a 00fe  ld   $fe
              556b 0030  ld   $30
              556c 000c  ld   $0c
              556d 00c3  ld   $c3
              556e 0030  ld   $30
              556f 00ac  ld   $ac
              5570 00fe  ld   $fe
              5571 0030  ld   $30
              5572 000c  ld   $0c
              5573 00c3  ld   $c3
              5574 00b0  ld   $b0
              5575 00fa  ld   $fa
              5576 00c3  ld   $c3
              5577 0030  ld   $30
              5578 000c  ld   $0c
              5579 00c3  ld   $c3
              557a 0030  ld   $30
              557b 000c  ld   $0c
              557c 00c3  ld   $c3
              557d 0030  ld   $30
              557e 000c  ld   $0c
              557f 00c3  ld   $c3
              5580 0030  ld   $30
              5581 000c  ld   $0c
              5582 00c3  ld   $c3
              5583 0030  ld   $30
              5584 000c  ld   $0c
              5585 00c3  ld   $c3
              5586 0030  ld   $30
              5587 000c  ld   $0c
              5588 00c3  ld   $c3
              5589 0030  ld   $30
              558a 000c  ld   $0c
              558b 00c3  ld   $c3
              558c 0015  ld   $15
              558d 000c  ld   $0c
              558e 00c3  ld   $c3
              558f 0030  ld   $30
              5590 000c  ld   $0c
              5591 00c3  ld   $c3
              5592 0030  ld   $30
              5593 000c  ld   $0c
              5594 00c3  ld   $c3
              5595 00e9  ld   $e9
              5596 001a  ld   $1a
              5597 00a4  ld   $a4
              5598 0041  ld   $41
              5599 00b0  ld   $b0
              559a 00ae  ld   $ae
              559b 0030  ld   $30
              559c 000c  ld   $0c
              559d 00c3  ld   $c3
              559e 00b0  ld   $b0
              559f 00aa  ld   $aa
              55a0 00ff  ld   $ff
              55a1 00ba  ld   $ba
              55a2 00fa  ld   $fa
              55a3 00ab  ld   $ab
              55a4 00fa  ld   $fa
              55a5 00af  ld   $af
              55a6 00aa  ld   $aa
              55a7 00bf  ld   $bf
              55a8 00ae  ld   $ae
              55a9 00fe  ld   $fe
              55aa 00ba  ld   $ba
              55ab 000a  ld   $0a
              55ac 00c3  ld   $c3
              55ad 0030  ld   $30
              55ae 000c  ld   $0c
              55af 00c3  ld   $c3
              55b0 0030  ld   $30
              55b1 000c  ld   $0c
              55b2 00c3  ld   $c3
              55b3 00c0  ld   $c0
              55b4 006b  ld   $6b
              55b5 0001  ld   $01
              55b6 002f  ld   $2f
              55b7 000c  ld   $0c
              55b8 00c3  ld   $c3
              55b9 0030  ld   $30
              55ba 000c  ld   $0c
              55bb 00c3  ld   $c3
              55bc 0030  ld   $30
              55bd 00bc  ld   $bc
              55be 00bc  ld   $bc
              55bf 0030  ld   $30
              55c0 000c  ld   $0c
              55c1 00c3  ld   $c3
              55c2 0030  ld   $30
              55c3 000c  ld   $0c
              55c4 00c3  ld   $c3
              55c5 0030  ld   $30
              55c6 000c  ld   $0c
              55c7 00c3  ld   $c3
              55c8 0030  ld   $30
              55c9 000c  ld   $0c
              55ca 00c3  ld   $c3
              55cb 0030  ld   $30
              55cc 000c  ld   $0c
              55cd 00c3  ld   $c3
              55ce 0030  ld   $30
              55cf 000c  ld   $0c
              55d0 00c3  ld   $c3
              55d1 0030  ld   $30
              55d2 000c  ld   $0c
              55d3 00c3  ld   $c3
              55d4 0030  ld   $30
              55d5 000c  ld   $0c
              55d6 00c3  ld   $c3
              55d7 0030  ld   $30
              55d8 000c  ld   $0c
              55d9 00c3  ld   $c3
              55da 0030  ld   $30
              55db 000c  ld   $0c
              55dc 00c3  ld   $c3
              55dd 0030  ld   $30
              55de 000c  ld   $0c
              55df 00c3  ld   $c3
              55e0 0030  ld   $30
              55e1 000c  ld   $0c
              55e2 00c3  ld   $c3
              55e3 0030  ld   $30
              55e4 000c  ld   $0c
              55e5 00c3  ld   $c3
              55e6 0030  ld   $30
              55e7 000c  ld   $0c
              55e8 00c3  ld   $c3
              55e9 00b0  ld   $b0
              55ea 005a  ld   $5a
              55eb 00a9  ld   $a9
              55ec 00bf  ld   $bf
              55ed 000a  ld   $0a
              55ee 00ab  ld   $ab
              55ef 0095  ld   $95
              55f0 005a  ld   $5a
              55f1 00a9  ld   $a9
              55f2 002a  ld   $2a
              55f3 000c  ld   $0c
              55f4 004b  ld   $4b
              55f5 00a3  ld   $a3
              55f6 0094  ld   $94
              55f7 0097  ld   $97
              55f8 0030  ld   $30
              55f9 000c  ld   $0c
              55fa 00c3  ld   $c3
              55fb fe00  bra  ac          ;+-----------------------------------+
              55fc fcfd  bra  $55fd       ;|                                   |
              55fd 1418  ld   $18,y       ;| Trampoline for page $5500 lookups |
              55fe e006  jmp  y,$06       ;|                                   |
              55ff c218  st   [$18]       ;+-----------------------------------+
              5600 0030  ld   $30
              5601 000c  ld   $0c
              5602 00c3  ld   $c3
              5603 00ff  ld   $ff
              5604 00fb  ld   $fb
              5605 00be  ld   $be
              5606 002f  ld   $2f
              5607 00fc  ld   $fc
              5608 00c3  ld   $c3
              5609 00ef  ld   $ef
              560a 00fb  ld   $fb
              560b 00be  ld   $be
              560c 003f  ld   $3f
              560d 000c  ld   $0c
              560e 00c3  ld   $c3
              560f 0030  ld   $30
              5610 000c  ld   $0c
              5611 00c3  ld   $c3
              5612 0030  ld   $30
              5613 00ac  ld   $ac
              5614 0069  ld   $69
              5615 009a  ld   $9a
              5616 00a6  ld   $a6
              5617 0069  ld   $69
              5618 0096  ld   $96
              5619 00aa  ld   $aa
              561a 001a  ld   $1a
              561b 0096  ld   $96
              561c 0065  ld   $65
              561d 0059  ld   $59
              561e 0096  ld   $96
              561f 0065  ld   $65
              5620 0059  ld   $59
              5621 0086  ld   $86
              5622 00aa  ld   $aa
              5623 005a  ld   $5a
              5624 009a  ld   $9a
              5625 00a6  ld   $a6
              5626 0069  ld   $69
              5627 009a  ld   $9a
              5628 0006  ld   $06
              5629 00c3  ld   $c3
              562a 0030  ld   $30
              562b 000c  ld   $0c
              562c 00c3  ld   $c3
              562d 0030  ld   $30
              562e 00ac  ld   $ac
              562f 00fe  ld   $fe
              5630 0030  ld   $30
              5631 000c  ld   $0c
              5632 00c3  ld   $c3
              5633 0030  ld   $30
              5634 00ac  ld   $ac
              5635 00fe  ld   $fe
              5636 0030  ld   $30
              5637 000c  ld   $0c
              5638 00c3  ld   $c3
              5639 00b0  ld   $b0
              563a 00fa  ld   $fa
              563b 00c3  ld   $c3
              563c 0030  ld   $30
              563d 000c  ld   $0c
              563e 00c3  ld   $c3
              563f 0030  ld   $30
              5640 000c  ld   $0c
              5641 00c3  ld   $c3
              5642 0030  ld   $30
              5643 000c  ld   $0c
              5644 00c3  ld   $c3
              5645 0030  ld   $30
              5646 000c  ld   $0c
              5647 00c3  ld   $c3
              5648 0030  ld   $30
              5649 00ac  ld   $ac
              564a 00aa  ld   $aa
              564b 00ff  ld   $ff
              564c 00ff  ld   $ff
              564d 00ff  ld   $ff
              * 5 times
              5650 00c3  ld   $c3
              5651 0015  ld   $15
              5652 000c  ld   $0c
              5653 00c3  ld   $c3
              5654 0030  ld   $30
              5655 000c  ld   $0c
              5656 00c3  ld   $c3
              5657 0030  ld   $30
              5658 000c  ld   $0c
              5659 00c3  ld   $c3
              565a 00eb  ld   $eb
              565b 001a  ld   $1a
              565c 0004  ld   $04
              565d 0069  ld   $69
              565e 00b0  ld   $b0
              565f 00a6  ld   $a6
              5660 0030  ld   $30
              5661 000c  ld   $0c
              5662 00c3  ld   $c3
              5663 0070  ld   $70
              5664 0055  ld   $55
              5665 00fd  ld   $fd
              5666 0055  ld   $55
              5667 00f5  ld   $f5
              5668 0057  ld   $57
              5669 00d5  ld   $d5
              566a 005f  ld   $5f
              566b 0055  ld   $55
              566c 007f  ld   $7f
              566d 0055  ld   $55
              566e 00fd  ld   $fd
              566f 0055  ld   $55
              5670 0005  ld   $05
              5671 00c3  ld   $c3
              5672 0030  ld   $30
              5673 000c  ld   $0c
              5674 00c3  ld   $c3
              5675 0030  ld   $30
              5676 000c  ld   $0c
              5677 0003  ld   $03
              5678 007f  ld   $7f
              5679 0010  ld   $10
              567a 0004  ld   $04
              567b 00c0  ld   $c0
              567c 000f  ld   $0f
              567d 00c3  ld   $c3
              567e 0030  ld   $30
              567f 000c  ld   $0c
              5680 00c3  ld   $c3
              5681 0030  ld   $30
              5682 006c  ld   $6c
              5683 00fc  ld   $fc
              5684 0041  ld   $41
              5685 0010  ld   $10
              5686 0004  ld   $04
              5687 0041  ld   $41
              5688 0010  ld   $10
              5689 0004  ld   $04
              568a 0041  ld   $41
              568b 0010  ld   $10
              568c 0004  ld   $04
              568d 0041  ld   $41
              568e 0010  ld   $10
              568f 0004  ld   $04
              5690 0041  ld   $41
              5691 0010  ld   $10
              5692 0004  ld   $04
              5693 0030  ld   $30
              5694 000c  ld   $0c
              5695 00c3  ld   $c3
              5696 0030  ld   $30
              5697 000c  ld   $0c
              5698 00c3  ld   $c3
              5699 0030  ld   $30
              569a 000c  ld   $0c
              569b 00c3  ld   $c3
              569c 0030  ld   $30
              569d 000c  ld   $0c
              569e 00c3  ld   $c3
              569f 0030  ld   $30
              56a0 000c  ld   $0c
              56a1 00c3  ld   $c3
              56a2 0030  ld   $30
              56a3 000c  ld   $0c
              56a4 00c3  ld   $c3
              56a5 0030  ld   $30
              56a6 000c  ld   $0c
              56a7 00c3  ld   $c3
              56a8 0030  ld   $30
              56a9 000c  ld   $0c
              56aa 00c3  ld   $c3
              56ab 0030  ld   $30
              56ac 000c  ld   $0c
              56ad 00c3  ld   $c3
              56ae 0070  ld   $70
              56af 00a5  ld   $a5
              56b0 00fe  ld   $fe
              56b1 00ea  ld   $ea
              56b2 000f  ld   $0f
              56b3 00ab  ld   $ab
              56b4 006a  ld   $6a
              56b5 00a5  ld   $a5
              56b6 0056  ld   $56
              56b7 002a  ld   $2a
              56b8 001c  ld   $1c
              56b9 0058  ld   $58
              56ba 0081  ld   $81
              56bb 0015  ld   $15
              56bc 0058  ld   $58
              56bd 0011  ld   $11
              56be 000c  ld   $0c
              56bf 00c3  ld   $c3
              56c0 0030  ld   $30
              56c1 000c  ld   $0c
              56c2 00c3  ld   $c3
              56c3 00af  ld   $af
              56c4 0004  ld   $04
              56c5 00c3  ld   $c3
              56c6 00f0  ld   $f0
              56c7 000f  ld   $0f
              56c8 00ff  ld   $ff
              56c9 0030  ld   $30
              56ca 000c  ld   $0c
              56cb 0047  ld   $47
              56cc 002f  ld   $2f
              56cd 000c  ld   $0c
              56ce 00c3  ld   $c3
              56cf 0030  ld   $30
              56d0 000c  ld   $0c
              56d1 00c3  ld   $c3
              56d2 0030  ld   $30
              56d3 005c  ld   $5c
              56d4 0055  ld   $55
              56d5 0055  ld   $55
              56d6 0055  ld   $55
              56d7 0055  ld   $55
              56d8 00d6  ld   $d6
              56d9 00fa  ld   $fa
              56da 005a  ld   $5a
              56db 0069  ld   $69
              56dc 009a  ld   $9a
              56dd 00a6  ld   $a6
              56de 0069  ld   $69
              56df 009a  ld   $9a
              56e0 00a6  ld   $a6
              56e1 00d6  ld   $d6
              56e2 00bb  ld   $bb
              56e3 005a  ld   $5a
              56e4 0055  ld   $55
              56e5 0055  ld   $55
              56e6 0055  ld   $55
              56e7 0055  ld   $55
              56e8 0005  ld   $05
              56e9 00c3  ld   $c3
              56ea 0030  ld   $30
              56eb 000c  ld   $0c
              56ec 00c3  ld   $c3
              56ed 0030  ld   $30
              56ee 00ac  ld   $ac
              56ef 00fe  ld   $fe
              56f0 0030  ld   $30
              56f1 000c  ld   $0c
              56f2 00c3  ld   $c3
              56f3 0030  ld   $30
              56f4 00ac  ld   $ac
              56f5 00fe  ld   $fe
              56f6 0030  ld   $30
              56f7 000c  ld   $0c
              56f8 00c3  ld   $c3
              56f9 00b0  ld   $b0
              56fa 00fa  ld   $fa
              56fb fe00  bra  ac          ;+-----------------------------------+
              56fc fcfd  bra  $56fd       ;|                                   |
              56fd 1418  ld   $18,y       ;| Trampoline for page $5600 lookups |
              56fe e006  jmp  y,$06       ;|                                   |
              56ff c218  st   [$18]       ;+-----------------------------------+
              5700 00c3  ld   $c3
              5701 0030  ld   $30
              5702 000c  ld   $0c
              5703 00c3  ld   $c3
              5704 0030  ld   $30
              5705 000c  ld   $0c
              5706 00c3  ld   $c3
              5707 0030  ld   $30
              5708 000c  ld   $0c
              5709 00c3  ld   $c3
              570a 0030  ld   $30
              570b 000c  ld   $0c
              570c 00ab  ld   $ab
              570d 00aa  ld   $aa
              570e 00aa  ld   $aa
              570f 00aa  ld   $aa
              5710 00aa  ld   $aa
              5711 00fa  ld   $fa
              5712 00ff  ld   $ff
              5713 00ff  ld   $ff
              5714 00ff  ld   $ff
              * 5 times
              5717 000f  ld   $0f
              5718 00c3  ld   $c3
              5719 0030  ld   $30
              571a 000c  ld   $0c
              571b 00c3  ld   $c3
              571c 0030  ld   $30
              571d 000c  ld   $0c
              571e 00c3  ld   $c3
              571f 00e9  ld   $e9
              5720 001a  ld   $1a
              5721 00a4  ld   $a4
              5722 0041  ld   $41
              5723 00b0  ld   $b0
              5724 00ae  ld   $ae
              5725 0030  ld   $30
              5726 000c  ld   $0c
              5727 00c3  ld   $c3
              5728 00b0  ld   $b0
              5729 00aa  ld   $aa
              572a 00ff  ld   $ff
              572b 00aa  ld   $aa
              572c 00fe  ld   $fe
              572d 00ab  ld   $ab
              572e 00ea  ld   $ea
              572f 00af  ld   $af
              5730 00ea  ld   $ea
              5731 00bf  ld   $bf
              5732 00aa  ld   $aa
              5733 00ff  ld   $ff
              5734 00aa  ld   $aa
              5735 000e  ld   $0e
              5736 00c3  ld   $c3
              5737 0030  ld   $30
              5738 000c  ld   $0c
              5739 00c3  ld   $c3
              573a 0030  ld   $30
              573b 000c  ld   $0c
              573c 00bc  ld   $bc
              573d 0081  ld   $81
              573e 0065  ld   $65
              573f 0005  ld   $05
              5740 0020  ld   $20
              5741 00f0  ld   $f0
              5742 00c2  ld   $c2
              5743 0030  ld   $30
              5744 000c  ld   $0c
              5745 00c3  ld   $c3
              5746 0030  ld   $30
              5747 00bc  ld   $bc
              5748 00bc  ld   $bc
              5749 00ff  ld   $ff
              574a 00fb  ld   $fb
              574b 00bf  ld   $bf
              574c 00ff  ld   $ff
              574d 00fb  ld   $fb
              574e 00bf  ld   $bf
              574f 00ff  ld   $ff
              5750 00fb  ld   $fb
              5751 00bf  ld   $bf
              5752 00ff  ld   $ff
              5753 00fb  ld   $fb
              5754 00bf  ld   $bf
              5755 00ff  ld   $ff
              5756 00fb  ld   $fb
              5757 0007  ld   $07
              5758 0030  ld   $30
              5759 000c  ld   $0c
              575a 00c3  ld   $c3
              575b 0030  ld   $30
              575c 000c  ld   $0c
              575d 00c3  ld   $c3
              575e 0030  ld   $30
              575f 000c  ld   $0c
              5760 00c3  ld   $c3
              5761 0030  ld   $30
              5762 000c  ld   $0c
              5763 00c3  ld   $c3
              5764 0030  ld   $30
              5765 000c  ld   $0c
              5766 00c3  ld   $c3
              5767 0030  ld   $30
              5768 000c  ld   $0c
              5769 00c3  ld   $c3
              576a 0030  ld   $30
              576b 000c  ld   $0c
              576c 00c3  ld   $c3
              576d 0030  ld   $30
              576e 000c  ld   $0c
              576f 00c3  ld   $c3
              5770 0030  ld   $30
              5771 000c  ld   $0c
              5772 00c3  ld   $c3
              5773 00b0  ld   $b0
              5774 005a  ld   $5a
              5775 00a9  ld   $a9
              5776 00bf  ld   $bf
              5777 000a  ld   $0a
              5778 00ab  ld   $ab
              5779 0095  ld   $95
              577a 005a  ld   $5a
              577b 00a9  ld   $a9
              577c 002a  ld   $2a
              577d 001c  ld   $1c
              577e 0004  ld   $04
              577f 0041  ld   $41
              5780 0010  ld   $10
              5781 0044  ld   $44
              5782 0011  ld   $11
              5783 000c  ld   $0c
              5784 00c3  ld   $c3
              5785 0030  ld   $30
              5786 000c  ld   $0c
              5787 00c3  ld   $c3
              5788 007f  ld   $7f
              5789 0004  ld   $04
              578a 00c3  ld   $c3
              578b 00ef  ld   $ef
              578c 00ff  ld   $ff
              578d 00fe  ld   $fe
              578e 003f  ld   $3f
              578f 000c  ld   $0c
              5790 004b  ld   $4b
              5791 003f  ld   $3f
              5792 000c  ld   $0c
              5793 00c3  ld   $c3
              5794 0030  ld   $30
              5795 000c  ld   $0c
              5796 00c3  ld   $c3
              5797 0030  ld   $30
              5798 00ac  ld   $ac
              5799 00aa  ld   $aa
              579a 0095  ld   $95
              579b 00aa  ld   $aa
              579c 0056  ld   $56
              579d 00d6  ld   $d6
              579e 00fa  ld   $fa
              579f 005a  ld   $5a
              57a0 006a  ld   $6a
              57a1 00a5  ld   $a5
              57a2 00aa  ld   $aa
              57a3 006a  ld   $6a
              57a4 00a5  ld   $a5
              57a5 00aa  ld   $aa
              57a6 00d6  ld   $d6
              57a7 00bb  ld   $bb
              57a8 005a  ld   $5a
              57a9 0095  ld   $95
              57aa 00aa  ld   $aa
              57ab 0056  ld   $56
              57ac 00aa  ld   $aa
              57ad 000a  ld   $0a
              57ae 00c3  ld   $c3
              57af 0030  ld   $30
              57b0 000c  ld   $0c
              57b1 00c3  ld   $c3
              57b2 0030  ld   $30
              57b3 00ac  ld   $ac
              57b4 00fe  ld   $fe
              57b5 0030  ld   $30
              57b6 000c  ld   $0c
              57b7 00c3  ld   $c3
              57b8 0030  ld   $30
              57b9 00ac  ld   $ac
              57ba 00fe  ld   $fe
              57bb 0030  ld   $30
              57bc 000c  ld   $0c
              57bd 00c3  ld   $c3
              57be 00b0  ld   $b0
              57bf 00fa  ld   $fa
              57c0 00c3  ld   $c3
              57c1 0030  ld   $30
              57c2 000c  ld   $0c
              57c3 00c3  ld   $c3
              57c4 0030  ld   $30
              57c5 000c  ld   $0c
              57c6 00c3  ld   $c3
              57c7 0030  ld   $30
              57c8 000c  ld   $0c
              57c9 00c3  ld   $c3
              57ca 0055  ld   $55
              57cb 0055  ld   $55
              57cc 0055  ld   $55
              * 6 times
              57d0 00aa  ld   $aa
              57d1 00aa  ld   $aa
              57d2 00aa  ld   $aa
              57d3 00ea  ld   $ea
              57d4 00ff  ld   $ff
              57d5 00ff  ld   $ff
              57d6 00ff  ld   $ff
              * 5 times
              57d9 003f  ld   $3f
              57da 000c  ld   $0c
              57db 00c3  ld   $c3
              57dc 0030  ld   $30
              57dd 000c  ld   $0c
              57de 00c3  ld   $c3
              57df 00eb  ld   $eb
              57e0 001a  ld   $1a
              57e1 0004  ld   $04
              57e2 0069  ld   $69
              57e3 00b0  ld   $b0
              57e4 00a6  ld   $a6
              57e5 0030  ld   $30
              57e6 000c  ld   $0c
              57e7 00c3  ld   $c3
              57e8 0070  ld   $70
              57e9 0055  ld   $55
              57ea 00fd  ld   $fd
              57eb 0055  ld   $55
              57ec 00f5  ld   $f5
              57ed 0057  ld   $57
              57ee 00d5  ld   $d5
              57ef 005f  ld   $5f
              57f0 0055  ld   $55
              57f1 007f  ld   $7f
              57f2 0055  ld   $55
              57f3 00fd  ld   $fd
              57f4 0055  ld   $55
              57f5 0005  ld   $05
              57f6 00c3  ld   $c3
              57f7 0030  ld   $30
              57f8 000c  ld   $0c
              57f9 00c3  ld   $c3
              57fa 0030  ld   $30
              57fb fe00  bra  ac          ;+-----------------------------------+
              57fc fcfd  bra  $57fd       ;|                                   |
              57fd 1418  ld   $18,y       ;| Trampoline for page $5700 lookups |
              57fe e006  jmp  y,$06       ;|                                   |
              57ff c218  st   [$18]       ;+-----------------------------------+
              5800 00f0  ld   $f0
              5801 0083  ld   $83
              5802 0081  ld   $81
              5803 0065  ld   $65
              5804 0005  ld   $05
              5805 0020  ld   $20
              5806 0008  ld   $08
              5807 00fc  ld   $fc
              5808 0030  ld   $30
              5809 000c  ld   $0c
              580a 00c3  ld   $c3
              580b 0030  ld   $30
              580c 006c  ld   $6c
              580d 00fc  ld   $fc
              580e 006f  ld   $6f
              580f 0060  ld   $60
              5810 0004  ld   $04
              5811 0046  ld   $46
              5812 0060  ld   $60
              5813 0004  ld   $04
              5814 0046  ld   $46
              5815 0060  ld   $60
              5816 0004  ld   $04
              5817 00c6  ld   $c6
              5818 006f  ld   $6f
              5819 002c  ld   $2c
              581a 0056  ld   $56
              581b 00f0  ld   $f0
              581c 0006  ld   $06
              581d 0030  ld   $30
              581e 000c  ld   $0c
              581f 00c3  ld   $c3
              5820 0030  ld   $30
              5821 000c  ld   $0c
              5822 00c3  ld   $c3
              5823 0030  ld   $30
              5824 000c  ld   $0c
              5825 00c3  ld   $c3
              5826 0030  ld   $30
              5827 000c  ld   $0c
              5828 00c3  ld   $c3
              5829 0030  ld   $30
              582a 000c  ld   $0c
              582b 00c3  ld   $c3
              582c 0030  ld   $30
              582d 000c  ld   $0c
              582e 00c3  ld   $c3
              582f 0030  ld   $30
              5830 000c  ld   $0c
              5831 00c3  ld   $c3
              5832 0030  ld   $30
              5833 000c  ld   $0c
              5834 00c3  ld   $c3
              5835 0030  ld   $30
              5836 000c  ld   $0c
              5837 00c3  ld   $c3
              5838 0070  ld   $70
              5839 00a5  ld   $a5
              583a 00fe  ld   $fe
              583b 00ea  ld   $ea
              583c 000f  ld   $0f
              583d 00ab  ld   $ab
              583e 006a  ld   $6a
              583f 00a5  ld   $a5
              5840 0056  ld   $56
              5841 002a  ld   $2a
              5842 001c  ld   $1c
              5843 0058  ld   $58
              5844 0081  ld   $81
              5845 0015  ld   $15
              5846 0058  ld   $58
              5847 0011  ld   $11
              5848 000c  ld   $0c
              5849 00c3  ld   $c3
              584a 0030  ld   $30
              584b 000c  ld   $0c
              584c 00c3  ld   $c3
              584d 00f0  ld   $f0
              584e 000b  ld   $0b
              584f 00bf  ld   $bf
              5850 003f  ld   $3f
              5851 00fc  ld   $fc
              5852 00c2  ld   $c2
              5853 00ff  ld   $ff
              5854 000f  ld   $0f
              5855 00bf  ld   $bf
              5856 0030  ld   $30
              5857 000c  ld   $0c
              5858 00c3  ld   $c3
              5859 0030  ld   $30
              585a 000c  ld   $0c
              585b 00c3  ld   $c3
              585c 0030  ld   $30
              585d 00ac  ld   $ac
              585e 0069  ld   $69
              585f 0055  ld   $55
              5860 0055  ld   $55
              5861 0055  ld   $55
              5862 0096  ld   $96
              5863 00aa  ld   $aa
              5864 005a  ld   $5a
              5865 00aa  ld   $aa
              5866 006a  ld   $6a
              5867 00a9  ld   $a9
              5868 0096  ld   $96
              5869 00aa  ld   $aa
              586a 00aa  ld   $aa
              586b 0096  ld   $96
              586c 00aa  ld   $aa
              586d 005a  ld   $5a
              586e 0055  ld   $55
              586f 0055  ld   $55
              5870 0055  ld   $55
              5871 009a  ld   $9a
              5872 0006  ld   $06
              5873 00c3  ld   $c3
              5874 0030  ld   $30
              5875 000c  ld   $0c
              5876 00c3  ld   $c3
              5877 0030  ld   $30
              5878 00ac  ld   $ac
              5879 00fe  ld   $fe
              587a 0030  ld   $30
              587b 000c  ld   $0c
              587c 00c3  ld   $c3
              587d 0030  ld   $30
              587e 00ac  ld   $ac
              587f 00fe  ld   $fe
              5880 0030  ld   $30
              5881 000c  ld   $0c
              5882 00c3  ld   $c3
              5883 00b0  ld   $b0
              5884 00fa  ld   $fa
              5885 00c3  ld   $c3
              5886 0030  ld   $30
              5887 000c  ld   $0c
              5888 00c3  ld   $c3
              5889 0030  ld   $30
              588a 000c  ld   $0c
              588b 00c3  ld   $c3
              588c 0030  ld   $30
              588d 0000  ld   $00
              588e 0000  ld   $00
              588f 0000  ld   $00
              * 5 times
              5892 0055  ld   $55
              5893 0055  ld   $55
              5894 0055  ld   $55
              5895 0055  ld   $55
              5896 00a5  ld   $a5
              5897 00aa  ld   $aa
              5898 00aa  ld   $aa
              5899 00aa  ld   $aa
              589a 00fe  ld   $fe
              589b 00ff  ld   $ff
              589c 00ff  ld   $ff
              589d 00ff  ld   $ff
              * 6 times
              58a1 0030  ld   $30
              58a2 000c  ld   $0c
              58a3 00c3  ld   $c3
              58a4 00e9  ld   $e9
              58a5 001a  ld   $1a
              58a6 00a4  ld   $a4
              58a7 0041  ld   $41
              58a8 00b0  ld   $b0
              58a9 00ae  ld   $ae
              58aa 0030  ld   $30
              58ab 000c  ld   $0c
              58ac 00c3  ld   $c3
              58ad 00b0  ld   $b0
              58ae 00ae  ld   $ae
              58af 00fe  ld   $fe
              58b0 00ba  ld   $ba
              58b1 00fa  ld   $fa
              58b2 00ab  ld   $ab
              58b3 00fa  ld   $fa
              58b4 00af  ld   $af
              58b5 00aa  ld   $aa
              58b6 00bf  ld   $bf
              58b7 00ae  ld   $ae
              58b8 00fe  ld   $fe
              58b9 00aa  ld   $aa
              58ba 000e  ld   $0e
              58bb 00c3  ld   $c3
              58bc 0030  ld   $30
              58bd 000c  ld   $0c
              58be 00c3  ld   $c3
              58bf 00c0  ld   $c0
              58c0 001b  ld   $1b
              58c1 0004  ld   $04
              58c2 0041  ld   $41
              58c3 0010  ld   $10
              58c4 0004  ld   $04
              58c5 0041  ld   $41
              58c6 0000  ld   $00
              58c7 0003  ld   $03
              58c8 0030  ld   $30
              58c9 000c  ld   $0c
              58ca 00c3  ld   $c3
              58cb 0030  ld   $30
              58cc 00bc  ld   $bc
              58cd 00bc  ld   $bc
              58ce 00bf  ld   $bf
              58cf 00f1  ld   $f1
              58d0 001a  ld   $1a
              58d1 008b  ld   $8b
              58d2 00b1  ld   $b1
              58d3 0018  ld   $18
              58d4 008b  ld   $8b
              58d5 00b1  ld   $b1
              58d6 0018  ld   $18
              58d7 00c1  ld   $c1
              58d8 00bb  ld   $bb
              58d9 0058  ld   $58
              58da 0046  ld   $46
              58db 00f0  ld   $f0
              58dc 0007  ld   $07
              58dd 0030  ld   $30
              58de 000c  ld   $0c
              58df 00c3  ld   $c3
              58e0 0030  ld   $30
              58e1 000c  ld   $0c
              58e2 00c3  ld   $c3
              58e3 0030  ld   $30
              58e4 000c  ld   $0c
              58e5 00c3  ld   $c3
              58e6 0030  ld   $30
              58e7 000c  ld   $0c
              58e8 00c3  ld   $c3
              58e9 0030  ld   $30
              58ea 000c  ld   $0c
              58eb 00c3  ld   $c3
              58ec 0030  ld   $30
              58ed 000c  ld   $0c
              58ee 00c3  ld   $c3
              58ef 0030  ld   $30
              58f0 000c  ld   $0c
              58f1 00c3  ld   $c3
              58f2 0030  ld   $30
              58f3 000c  ld   $0c
              58f4 00c3  ld   $c3
              58f5 0030  ld   $30
              58f6 000c  ld   $0c
              58f7 00c3  ld   $c3
              58f8 00b0  ld   $b0
              58f9 005a  ld   $5a
              58fa 00a9  ld   $a9
              58fb fe00  bra  ac          ;+-----------------------------------+
              58fc fcfd  bra  $58fd       ;|                                   |
              58fd 1418  ld   $18,y       ;| Trampoline for page $5800 lookups |
              58fe e006  jmp  y,$06       ;|                                   |
              58ff c218  st   [$18]       ;+-----------------------------------+
              5900 00bf  ld   $bf
              5901 000a  ld   $0a
              5902 00ab  ld   $ab
              5903 0095  ld   $95
              5904 005a  ld   $5a
              5905 00a9  ld   $a9
              5906 002a  ld   $2a
              5907 001c  ld   $1c
              5908 0004  ld   $04
              5909 0041  ld   $41
              590a 0010  ld   $10
              590b 0044  ld   $44
              590c 0011  ld   $11
              590d 000c  ld   $0c
              590e 00c3  ld   $c3
              590f 0030  ld   $30
              5910 000c  ld   $0c
              5911 00c3  ld   $c3
              5912 0070  ld   $70
              5913 00f4  ld   $f4
              5914 00fe  ld   $fe
              5915 0030  ld   $30
              5916 00fc  ld   $fc
              5917 00c2  ld   $c2
              5918 00f0  ld   $f0
              5919 00ff  ld   $ff
              591a 004b  ld   $4b
              591b 0030  ld   $30
              591c 000c  ld   $0c
              591d 00c3  ld   $c3
              591e 0030  ld   $30
              591f 000c  ld   $0c
              5920 00c3  ld   $c3
              5921 0030  ld   $30
              5922 00ac  ld   $ac
              5923 0069  ld   $69
              5924 009a  ld   $9a
              5925 00aa  ld   $aa
              5926 006a  ld   $6a
              5927 0016  ld   $16
              5928 00a5  ld   $a5
              5929 005a  ld   $5a
              592a 00aa  ld   $aa
              592b 0061  ld   $61
              592c 00a9  ld   $a9
              592d 0056  ld   $56
              592e 0065  ld   $65
              592f 00a8  ld   $a8
              5930 0056  ld   $56
              5931 0095  ld   $95
              5932 005a  ld   $5a
              5933 009a  ld   $9a
              5934 00aa  ld   $aa
              5935 006a  ld   $6a
              5936 009a  ld   $9a
              5937 0006  ld   $06
              5938 00c3  ld   $c3
              5939 0030  ld   $30
              593a 000c  ld   $0c
              593b 00c3  ld   $c3
              593c 0030  ld   $30
              593d 00ac  ld   $ac
              593e 00fe  ld   $fe
              593f 0030  ld   $30
              5940 000c  ld   $0c
              5941 00c3  ld   $c3
              5942 0030  ld   $30
              5943 00ac  ld   $ac
              5944 00fe  ld   $fe
              5945 0030  ld   $30
              5946 000c  ld   $0c
              5947 00c3  ld   $c3
              5948 00b0  ld   $b0
              5949 00fa  ld   $fa
              594a 00c3  ld   $c3
              594b 0030  ld   $30
              594c 000c  ld   $0c
              594d 00c3  ld   $c3
              594e 0030  ld   $30
              594f 000c  ld   $0c
              5950 00c3  ld   $c3
              5951 0030  ld   $30
              5952 000c  ld   $0c
              5953 0003  ld   $03
              5954 0000  ld   $00
              5955 0000  ld   $00
              5956 0000  ld   $00
              * 5 times
              5959 0054  ld   $54
              595a 0055  ld   $55
              595b 0055  ld   $55
              595c 0055  ld   $55
              595d 0055  ld   $55
              595e 00a5  ld   $a5
              595f 00aa  ld   $aa
              5960 00aa  ld   $aa
              5961 00fa  ld   $fa
              5962 00ff  ld   $ff
              5963 00ff  ld   $ff
              5964 000f  ld   $0f
              5965 00c3  ld   $c3
              5966 0030  ld   $30
              5967 000c  ld   $0c
              5968 00c3  ld   $c3
              5969 00eb  ld   $eb
              596a 001a  ld   $1a
              596b 0004  ld   $04
              596c 0069  ld   $69
              596d 00b0  ld   $b0
              596e 00a6  ld   $a6
              596f 0030  ld   $30
              5970 000c  ld   $0c
              5971 00c3  ld   $c3
              5972 0070  ld   $70
              5973 0055  ld   $55
              5974 00fd  ld   $fd
              5975 0055  ld   $55
              5976 00f5  ld   $f5
              5977 0057  ld   $57
              5978 00d5  ld   $d5
              5979 005f  ld   $5f
              597a 0055  ld   $55
              597b 007f  ld   $7f
              597c 0055  ld   $55
              597d 00fd  ld   $fd
              597e 0055  ld   $55
              597f 0005  ld   $05
              5980 00c3  ld   $c3
              5981 0030  ld   $30
              5982 000c  ld   $0c
              5983 00c3  ld   $c3
              5984 0030  ld   $30
              5985 000c  ld   $0c
              5986 0007  ld   $07
              5987 0096  ld   $96
              5988 0065  ld   $65
              5989 0059  ld   $59
              598a 0001  ld   $01
              598b 000c  ld   $0c
              598c 00c3  ld   $c3
              598d 0030  ld   $30
              598e 000c  ld   $0c
              598f 00c3  ld   $c3
              5990 0030  ld   $30
              5991 006c  ld   $6c
              5992 00fc  ld   $fc
              5993 006f  ld   $6f
              5994 0060  ld   $60
              5995 002c  ld   $2c
              5996 00c6  ld   $c6
              5997 0062  ld   $62
              5998 002c  ld   $2c
              5999 00c6  ld   $c6
              599a 0062  ld   $62
              599b 002c  ld   $2c
              599c 00c6  ld   $c6
              599d 006f  ld   $6f
              599e 0019  ld   $19
              599f 0056  ld   $56
              59a0 00f0  ld   $f0
              59a1 0006  ld   $06
              59a2 0030  ld   $30
              59a3 000c  ld   $0c
              59a4 00c3  ld   $c3
              59a5 0030  ld   $30
              59a6 000c  ld   $0c
              59a7 00c3  ld   $c3
              59a8 0030  ld   $30
              59a9 000c  ld   $0c
              59aa 00c3  ld   $c3
              59ab 0030  ld   $30
              59ac 000c  ld   $0c
              59ad 00c3  ld   $c3
              59ae 0030  ld   $30
              59af 000c  ld   $0c
              59b0 00c3  ld   $c3
              59b1 0030  ld   $30
              59b2 000c  ld   $0c
              59b3 00c3  ld   $c3
              59b4 0030  ld   $30
              59b5 000c  ld   $0c
              59b6 00c3  ld   $c3
              59b7 0030  ld   $30
              59b8 000c  ld   $0c
              59b9 00c3  ld   $c3
              59ba 0030  ld   $30
              59bb 000c  ld   $0c
              59bc 00c3  ld   $c3
              59bd 0070  ld   $70
              59be 00a5  ld   $a5
              59bf 00fe  ld   $fe
              59c0 00ea  ld   $ea
              59c1 000f  ld   $0f
              59c2 00ab  ld   $ab
              59c3 006a  ld   $6a
              59c4 00a5  ld   $a5
              59c5 0056  ld   $56
              59c6 002a  ld   $2a
              59c7 001c  ld   $1c
              59c8 0058  ld   $58
              59c9 0081  ld   $81
              59ca 0015  ld   $15
              59cb 0058  ld   $58
              59cc 0011  ld   $11
              59cd 000c  ld   $0c
              59ce 00c3  ld   $c3
              59cf 0030  ld   $30
              59d0 000c  ld   $0c
              59d1 00c3  ld   $c3
              59d2 0030  ld   $30
              59d3 00fc  ld   $fc
              59d4 00bf  ld   $bf
              59d5 0030  ld   $30
              59d6 00fc  ld   $fc
              59d7 00c2  ld   $c2
              59d8 00f0  ld   $f0
              59d9 00fb  ld   $fb
              59da 00c3  ld   $c3
              59db 0030  ld   $30
              59dc 000c  ld   $0c
              59dd 00c3  ld   $c3
              59de 0030  ld   $30
              59df 000c  ld   $0c
              59e0 00c3  ld   $c3
              59e1 0030  ld   $30
              59e2 005c  ld   $5c
              59e3 00a9  ld   $a9
              59e4 0069  ld   $69
              59e5 0055  ld   $55
              59e6 0055  ld   $55
              59e7 0029  ld   $29
              59e8 0055  ld   $55
              59e9 0055  ld   $55
              59ea 0055  ld   $55
              59eb 0055  ld   $55
              59ec 0051  ld   $51
              59ed 0054  ld   $54
              59ee 0055  ld   $55
              59ef 0055  ld   $55
              59f0 0014  ld   $14
              59f1 0090  ld   $90
              59f2 0052  ld   $52
              59f3 0055  ld   $55
              59f4 0055  ld   $55
              59f5 0055  ld   $55
              59f6 006a  ld   $6a
              59f7 0005  ld   $05
              59f8 00c3  ld   $c3
              59f9 0030  ld   $30
              59fa 000c  ld   $0c
              59fb fe00  bra  ac          ;+-----------------------------------+
              59fc fcfd  bra  $59fd       ;|                                   |
              59fd 1418  ld   $18,y       ;| Trampoline for page $5900 lookups |
              59fe e006  jmp  y,$06       ;|                                   |
              59ff c218  st   [$18]       ;+-----------------------------------+
              5a00 00c3  ld   $c3
              5a01 0030  ld   $30
              5a02 00ac  ld   $ac
              5a03 00fe  ld   $fe
              5a04 0030  ld   $30
              5a05 000c  ld   $0c
              5a06 00c3  ld   $c3
              5a07 0030  ld   $30
              5a08 00ac  ld   $ac
              5a09 00fe  ld   $fe
              5a0a 0030  ld   $30
              5a0b 000c  ld   $0c
              5a0c 00c3  ld   $c3
              5a0d 00b0  ld   $b0
              5a0e 00fa  ld   $fa
              5a0f 00c3  ld   $c3
              5a10 0030  ld   $30
              5a11 000c  ld   $0c
              5a12 00c3  ld   $c3
              5a13 0030  ld   $30
              5a14 000c  ld   $0c
              5a15 00c3  ld   $c3
              5a16 0030  ld   $30
              5a17 000c  ld   $0c
              5a18 00c3  ld   $c3
              5a19 0030  ld   $30
              5a1a 0000  ld   $00
              5a1b 0000  ld   $00
              5a1c 0000  ld   $00
              * 8 times
              5a22 0040  ld   $40
              5a23 0055  ld   $55
              5a24 0055  ld   $55
              5a25 0055  ld   $55
              * 5 times
              5a28 0030  ld   $30
              5a29 000c  ld   $0c
              5a2a 00c3  ld   $c3
              5a2b 0030  ld   $30
              5a2c 000c  ld   $0c
              5a2d 00c3  ld   $c3
              5a2e 00e9  ld   $e9
              5a2f 001a  ld   $1a
              5a30 00a4  ld   $a4
              5a31 0041  ld   $41
              5a32 00b0  ld   $b0
              5a33 00ae  ld   $ae
              5a34 0030  ld   $30
              5a35 000c  ld   $0c
              5a36 00c3  ld   $c3
              5a37 00b0  ld   $b0
              5a38 004a  ld   $4a
              5a39 00d3  ld   $d3
              5a3a 0034  ld   $34
              5a3b 004d  ld   $4d
              5a3c 00d3  ld   $d3
              5a3d 0034  ld   $34
              5a3e 004d  ld   $4d
              5a3f 00d3  ld   $d3
              5a40 0034  ld   $34
              5a41 004d  ld   $4d
              5a42 00d3  ld   $d3
              5a43 00b4  ld   $b4
              5a44 000a  ld   $0a
              5a45 00c3  ld   $c3
              5a46 0030  ld   $30
              5a47 000c  ld   $0c
              5a48 00c3  ld   $c3
              5a49 0030  ld   $30
              5a4a 000c  ld   $0c
              5a4b 0007  ld   $07
              5a4c 0096  ld   $96
              5a4d 0045  ld   $45
              5a4e 0058  ld   $58
              5a4f 0001  ld   $01
              5a50 000c  ld   $0c
              5a51 00c3  ld   $c3
              5a52 0030  ld   $30
              5a53 000c  ld   $0c
              5a54 00c3  ld   $c3
              5a55 0030  ld   $30
              5a56 00bc  ld   $bc
              5a57 00bc  ld   $bc
              5a58 00bf  ld   $bf
              5a59 0011  ld   $11
              5a5a 0018  ld   $18
              5a5b 0081  ld   $81
              5a5c 0011  ld   $11
              5a5d 0018  ld   $18
              5a5e 0081  ld   $81
              5a5f 0011  ld   $11
              5a60 0018  ld   $18
              5a61 00c1  ld   $c1
              5a62 001b  ld   $1b
              5a63 0004  ld   $04
              5a64 0041  ld   $41
              5a65 00f0  ld   $f0
              5a66 0007  ld   $07
              5a67 0030  ld   $30
              5a68 000c  ld   $0c
              5a69 00c3  ld   $c3
              5a6a 0030  ld   $30
              5a6b 000c  ld   $0c
              5a6c 00fc  ld   $fc
              5a6d 0030  ld   $30
              5a6e 000c  ld   $0c
              5a6f 00ff  ld   $ff
              5a70 003f  ld   $3f
              5a71 000c  ld   $0c
              5a72 00c3  ld   $c3
              5a73 003f  ld   $3f
              5a74 00f0  ld   $f0
              5a75 00c3  ld   $c3
              5a76 0030  ld   $30
              5a77 000c  ld   $0c
              5a78 00ff  ld   $ff
              5a79 00c0  ld   $c0
              5a7a 000f  ld   $0f
              5a7b 00c3  ld   $c3
              5a7c 00ff  ld   $ff
              5a7d 000f  ld   $0f
              5a7e 00c3  ld   $c3
              5a7f 0030  ld   $30
              5a80 000c  ld   $0c
              5a81 00c3  ld   $c3
              5a82 00b0  ld   $b0
              5a83 005a  ld   $5a
              5a84 00a9  ld   $a9
              5a85 00bf  ld   $bf
              5a86 000a  ld   $0a
              5a87 00ab  ld   $ab
              5a88 0095  ld   $95
              5a89 005a  ld   $5a
              5a8a 00a9  ld   $a9
              5a8b 002a  ld   $2a
              5a8c 001c  ld   $1c
              5a8d 0004  ld   $04
              5a8e 0041  ld   $41
              5a8f 0010  ld   $10
              5a90 0044  ld   $44
              5a91 0011  ld   $11
              5a92 000c  ld   $0c
              5a93 00c3  ld   $c3
              5a94 0030  ld   $30
              5a95 000c  ld   $0c
              5a96 00c3  ld   $c3
              5a97 00f0  ld   $f0
              5a98 00ff  ld   $ff
              5a99 004b  ld   $4b
              5a9a 00ff  ld   $ff
              5a9b 00fb  ld   $fb
              5a9c 00bf  ld   $bf
              5a9d 00bf  ld   $bf
              5a9e 00f4  ld   $f4
              5a9f 00ff  ld   $ff
              5aa0 0030  ld   $30
              5aa1 000c  ld   $0c
              5aa2 00c3  ld   $c3
              5aa3 0030  ld   $30
              5aa4 000c  ld   $0c
              5aa5 00c3  ld   $c3
              5aa6 0030  ld   $30
              5aa7 00ac  ld   $ac
              5aa8 00aa  ld   $aa
              5aa9 00aa  ld   $aa
              5aaa 005a  ld   $5a
              5aab 00a9  ld   $a9
              5aac 00aa  ld   $aa
              5aad 00aa  ld   $aa
              5aae 00aa  ld   $aa
              * 5 times
              5ab1 006a  ld   $6a
              5ab2 009a  ld   $9a
              5ab3 00aa  ld   $aa
              5ab4 00aa  ld   $aa
              5ab5 00aa  ld   $aa
              * 5 times
              5ab8 006a  ld   $6a
              5ab9 00a5  ld   $a5
              5aba 0069  ld   $69
              5abb 009a  ld   $9a
              5abc 0006  ld   $06
              5abd 00c3  ld   $c3
              5abe 0030  ld   $30
              5abf 000c  ld   $0c
              5ac0 00c3  ld   $c3
              5ac1 0030  ld   $30
              5ac2 00ac  ld   $ac
              5ac3 00fe  ld   $fe
              5ac4 0030  ld   $30
              5ac5 000c  ld   $0c
              5ac6 00c3  ld   $c3
              5ac7 0030  ld   $30
              5ac8 00ac  ld   $ac
              5ac9 00fe  ld   $fe
              5aca 0030  ld   $30
              5acb 000c  ld   $0c
              5acc 00c3  ld   $c3
              5acd 00b0  ld   $b0
              5ace 00fa  ld   $fa
              5acf 00c3  ld   $c3
              5ad0 0030  ld   $30
              5ad1 000c  ld   $0c
              5ad2 00c3  ld   $c3
              5ad3 0030  ld   $30
              5ad4 000c  ld   $0c
              5ad5 00c3  ld   $c3
              5ad6 0030  ld   $30
              5ad7 000c  ld   $0c
              5ad8 00c3  ld   $c3
              5ad9 0030  ld   $30
              5ada 000c  ld   $0c
              5adb 0003  ld   $03
              5adc 0000  ld   $00
              5add 0000  ld   $00
              5ade 0000  ld   $00
              * 11 times
              5ae7 00c3  ld   $c3
              5ae8 0030  ld   $30
              5ae9 000c  ld   $0c
              5aea 00c3  ld   $c3
              5aeb 0030  ld   $30
              5aec 000c  ld   $0c
              5aed 00c3  ld   $c3
              5aee 00eb  ld   $eb
              5aef 001a  ld   $1a
              5af0 0004  ld   $04
              5af1 0069  ld   $69
              5af2 00b0  ld   $b0
              5af3 00a6  ld   $a6
              5af4 0030  ld   $30
              5af5 000c  ld   $0c
              5af6 00c3  ld   $c3
              5af7 0070  ld   $70
              5af8 0005  ld   $05
              5af9 00c3  ld   $c3
              5afa 00fe  ld   $fe
              5afb fe00  bra  ac          ;+-----------------------------------+
              5afc fcfd  bra  $5afd       ;|                                   |
              5afd 1418  ld   $18,y       ;| Trampoline for page $5a00 lookups |
              5afe e006  jmp  y,$06       ;|                                   |
              5aff c218  st   [$18]       ;+-----------------------------------+
              5b00 00ef  ld   $ef
              5b01 00ff  ld   $ff
              5b02 00fe  ld   $fe
              5b03 00ef  ld   $ef
              5b04 00ff  ld   $ff
              5b05 00fe  ld   $fe
              5b06 00ef  ld   $ef
              5b07 00c3  ld   $c3
              5b08 0070  ld   $70
              5b09 0005  ld   $05
              5b0a 00c3  ld   $c3
              5b0b 0030  ld   $30
              5b0c 000c  ld   $0c
              5b0d 00c3  ld   $c3
              5b0e 0030  ld   $30
              5b0f 000c  ld   $0c
              5b10 0007  ld   $07
              5b11 0084  ld   $84
              5b12 0065  ld   $65
              5b13 0059  ld   $59
              5b14 0001  ld   $01
              5b15 000c  ld   $0c
              5b16 00c3  ld   $c3
              5b17 0030  ld   $30
              5b18 000c  ld   $0c
              5b19 00c3  ld   $c3
              5b1a 0030  ld   $30
              5b1b 006c  ld   $6c
              5b1c 00fc  ld   $fc
              5b1d 00ef  ld   $ef
              5b1e 00ff  ld   $ff
              5b1f 00fe  ld   $fe
              5b20 00ef  ld   $ef
              5b21 00ff  ld   $ff
              5b22 00fe  ld   $fe
              5b23 00ef  ld   $ef
              5b24 00ff  ld   $ff
              5b25 00fe  ld   $fe
              5b26 00ef  ld   $ef
              5b27 00ff  ld   $ff
              5b28 00fe  ld   $fe
              5b29 00ef  ld   $ef
              5b2a 00ff  ld   $ff
              5b2b 0006  ld   $06
              5b2c 0030  ld   $30
              5b2d 000c  ld   $0c
              5b2e 00c3  ld   $c3
              5b2f 000c  ld   $0c
              5b30 00f3  ld   $f3
              5b31 0003  ld   $03
              5b32 000c  ld   $0c
              5b33 00c3  ld   $c3
              5b34 0030  ld   $30
              5b35 000c  ld   $0c
              5b36 00c3  ld   $c3
              5b37 0030  ld   $30
              5b38 00cc  ld   $cc
              5b39 00ff  ld   $ff
              5b3a 0033  ld   $33
              5b3b 000c  ld   $0c
              5b3c 00c3  ld   $c3
              5b3d 0000  ld   $00
              5b3e 003f  ld   $3f
              5b3f 00c3  ld   $c3
              5b40 0030  ld   $30
              5b41 000c  ld   $0c
              5b42 00c3  ld   $c3
              5b43 0030  ld   $30
              5b44 000c  ld   $0c
              5b45 000c  ld   $0c
              5b46 00c3  ld   $c3
              5b47 0070  ld   $70
              5b48 00a5  ld   $a5
              5b49 00fe  ld   $fe
              5b4a 00ea  ld   $ea
              5b4b 000f  ld   $0f
              5b4c 00ab  ld   $ab
              5b4d 006a  ld   $6a
              5b4e 00a5  ld   $a5
              5b4f 0056  ld   $56
              5b50 002a  ld   $2a
              5b51 001c  ld   $1c
              5b52 0058  ld   $58
              5b53 0081  ld   $81
              5b54 0015  ld   $15
              5b55 0058  ld   $58
              5b56 0011  ld   $11
              5b57 000c  ld   $0c
              5b58 00c3  ld   $c3
              5b59 0030  ld   $30
              5b5a 000c  ld   $0c
              5b5b 00c3  ld   $c3
              5b5c 00f0  ld   $f0
              5b5d 000f  ld   $0f
              5b5e 00c3  ld   $c3
              5b5f 0052  ld   $52
              5b60 0024  ld   $24
              5b61 0005  ld   $05
              5b62 0012  ld   $12
              5b63 000c  ld   $0c
              5b64 00ff  ld   $ff
              5b65 0030  ld   $30
              5b66 000c  ld   $0c
              5b67 00c3  ld   $c3
              5b68 0030  ld   $30
              5b69 000c  ld   $0c
              5b6a 00c3  ld   $c3
              5b6b 0030  ld   $30
              5b6c 005c  ld   $5c
              5b6d 0055  ld   $55
              5b6e 0055  ld   $55
              5b6f 0055  ld   $55
              5b70 0055  ld   $55
              5b71 0015  ld   $15
              5b72 0055  ld   $55
              5b73 00a9  ld   $a9
              5b74 0095  ld   $95
              5b75 00aa  ld   $aa
              5b76 00aa  ld   $aa
              5b77 00aa  ld   $aa
              5b78 001a  ld   $1a
              5b79 0054  ld   $54
              5b7a 0041  ld   $41
              5b7b 0055  ld   $55
              5b7c 0055  ld   $55
              5b7d 0055  ld   $55
              5b7e 0055  ld   $55
              5b7f 0005  ld   $05
              5b80 0095  ld   $95
              5b81 000a  ld   $0a
              5b82 00c3  ld   $c3
              5b83 0030  ld   $30
              5b84 00cc  ld   $cc
              5b85 0030  ld   $30
              5b86 008c  ld   $8c
              5b87 00fa  ld   $fa
              5b88 00ff  ld   $ff
              5b89 003f  ld   $3f
              5b8a 00c3  ld   $c3
              5b8b 0030  ld   $30
              5b8c 008c  ld   $8c
              5b8d 00fa  ld   $fa
              5b8e 00ff  ld   $ff
              5b8f 003f  ld   $3f
              5b90 00c3  ld   $c3
              5b91 0030  ld   $30
              5b92 00ea  ld   $ea
              5b93 00ff  ld   $ff
              5b94 00ff  ld   $ff
              5b95 000c  ld   $0c
              5b96 00c3  ld   $c3
              5b97 00c0  ld   $c0
              5b98 0030  ld   $30
              5b99 000c  ld   $0c
              5b9a 00c3  ld   $c3
              5b9b 0030  ld   $30
              5b9c 000c  ld   $0c
              5b9d 00c3  ld   $c3
              5b9e 0030  ld   $30
              5b9f 000c  ld   $0c
              5ba0 00c3  ld   $c3
              5ba1 0030  ld   $30
              5ba2 0000  ld   $00
              5ba3 0000  ld   $00
              5ba4 0000  ld   $00
              * 8 times
              5baa 0015  ld   $15
              5bab 000c  ld   $0c
              5bac 00c3  ld   $c3
              5bad 0030  ld   $30
              5bae 000c  ld   $0c
              5baf 00c3  ld   $c3
              5bb0 0030  ld   $30
              5bb1 000c  ld   $0c
              5bb2 00c3  ld   $c3
              5bb3 00e9  ld   $e9
              5bb4 001a  ld   $1a
              5bb5 00a4  ld   $a4
              5bb6 0041  ld   $41
              5bb7 00b0  ld   $b0
              5bb8 00ae  ld   $ae
              5bb9 0030  ld   $30
              5bba 000c  ld   $0c
              5bbb 00c3  ld   $c3
              5bbc 0070  ld   $70
              5bbd 00f5  ld   $f5
              5bbe 00fb  ld   $fb
              5bbf 00bf  ld   $bf
              5bc0 00af  ld   $af
              5bc1 00aa  ld   $aa
              5bc2 00aa  ld   $aa
              5bc3 00aa  ld   $aa
              * 5 times
              5bc6 00fa  ld   $fa
              5bc7 00fb  ld   $fb
              5bc8 007f  ld   $7f
              5bc9 0005  ld   $05
              5bca 00c3  ld   $c3
              5bcb 0030  ld   $30
              5bcc 000c  ld   $0c
              5bcd 00c3  ld   $c3
              5bce 0030  ld   $30
              5bcf 000c  ld   $0c
              5bd0 0007  ld   $07
              5bd1 0084  ld   $84
              5bd2 0065  ld   $65
              5bd3 0059  ld   $59
              5bd4 0001  ld   $01
              5bd5 000c  ld   $0c
              5bd6 00c3  ld   $c3
              5bd7 0030  ld   $30
              5bd8 000c  ld   $0c
              5bd9 00c3  ld   $c3
              5bda 0030  ld   $30
              5bdb 00bc  ld   $bc
              5bdc 00bc  ld   $bc
              5bdd 0000  ld   $00
              5bde 0000  ld   $00
              5bdf 0000  ld   $00
              * 13 times
              5bea 00f0  ld   $f0
              5beb 0007  ld   $07
              5bec 0030  ld   $30
              5bed 000c  ld   $0c
              5bee 0033  ld   $33
              5bef 0008  ld   $08
              5bf0 0082  ld   $82
              5bf1 0020  ld   $20
              5bf2 0008  ld   $08
              5bf3 0082  ld   $82
              5bf4 0020  ld   $20
              5bf5 0008  ld   $08
              5bf6 0082  ld   $82
              5bf7 0020  ld   $20
              5bf8 0008  ld   $08
              5bf9 0082  ld   $82
              5bfa 0020  ld   $20
              5bfb fe00  bra  ac          ;+-----------------------------------+
              5bfc fcfd  bra  $5bfd       ;|                                   |
              5bfd 1418  ld   $18,y       ;| Trampoline for page $5b00 lookups |
              5bfe e006  jmp  y,$06       ;|                                   |
              5bff c218  st   [$18]       ;+-----------------------------------+
              5c00 0008  ld   $08
              5c01 0082  ld   $82
              5c02 0020  ld   $20
              5c03 0008  ld   $08
              5c04 0082  ld   $82
              5c05 0020  ld   $20
              5c06 0008  ld   $08
              5c07 0082  ld   $82
              5c08 0020  ld   $20
              5c09 0008  ld   $08
              5c0a 0003  ld   $03
              5c0b 00c3  ld   $c3
              5c0c 00b0  ld   $b0
              5c0d 005a  ld   $5a
              5c0e 00a9  ld   $a9
              5c0f 00bf  ld   $bf
              5c10 000a  ld   $0a
              5c11 00ab  ld   $ab
              5c12 00aa  ld   $aa
              5c13 00aa  ld   $aa
              5c14 00aa  ld   $aa
              5c15 002a  ld   $2a
              5c16 001c  ld   $1c
              5c17 0004  ld   $04
              5c18 0041  ld   $41
              5c19 0010  ld   $10
              5c1a 0044  ld   $44
              5c1b 0011  ld   $11
              5c1c 000c  ld   $0c
              5c1d 00c3  ld   $c3
              5c1e 0030  ld   $30
              5c1f 000c  ld   $0c
              5c20 00ff  ld   $ff
              5c21 00ff  ld   $ff
              5c22 00ff  ld   $ff
              * 11 times
              5c2b 000f  ld   $0f
              5c2c 00c3  ld   $c3
              5c2d 0030  ld   $30
              5c2e 000c  ld   $0c
              5c2f 00c3  ld   $c3
              5c30 0030  ld   $30
              5c31 005c  ld   $5c
              5c32 0014  ld   $14
              5c33 0045  ld   $45
              5c34 0051  ld   $51
              5c35 0014  ld   $14
              5c36 0045  ld   $45
              5c37 0051  ld   $51
              5c38 0014  ld   $14
              5c39 0045  ld   $45
              5c3a 0051  ld   $51
              5c3b 0014  ld   $14
              5c3c 0045  ld   $45
              5c3d 0051  ld   $51
              5c3e 0014  ld   $14
              5c3f 0045  ld   $45
              5c40 0051  ld   $51
              5c41 0014  ld   $14
              5c42 0045  ld   $45
              5c43 0051  ld   $51
              5c44 0014  ld   $14
              5c45 0045  ld   $45
              5c46 0001  ld   $01
              5c47 00c3  ld   $c3
              5c48 0030  ld   $30
              5c49 0083  ld   $83
              5c4a 0020  ld   $20
              5c4b 0008  ld   $08
              5c4c 0082  ld   $82
              5c4d 0020  ld   $20
              5c4e 0008  ld   $08
              5c4f 0082  ld   $82
              5c50 0020  ld   $20
              5c51 0008  ld   $08
              5c52 0082  ld   $82
              5c53 0020  ld   $20
              5c54 0008  ld   $08
              5c55 0082  ld   $82
              5c56 0020  ld   $20
              5c57 0008  ld   $08
              5c58 0082  ld   $82
              5c59 0020  ld   $20
              5c5a 0008  ld   $08
              5c5b 0082  ld   $82
              5c5c 0030  ld   $30
              5c5d 0030  ld   $30
              5c5e 000c  ld   $0c
              5c5f 00c3  ld   $c3
              5c60 0030  ld   $30
              5c61 000c  ld   $0c
              5c62 00c3  ld   $c3
              5c63 0030  ld   $30
              5c64 000c  ld   $0c
              5c65 00c3  ld   $c3
              5c66 0030  ld   $30
              5c67 000c  ld   $0c
              5c68 0003  ld   $03
              5c69 0000  ld   $00
              5c6a 0000  ld   $00
              5c6b 0000  ld   $00
              * 5 times
              5c6e 00c3  ld   $c3
              5c6f 0015  ld   $15
              5c70 000c  ld   $0c
              5c71 00c3  ld   $c3
              5c72 0030  ld   $30
              5c73 000c  ld   $0c
              5c74 00c3  ld   $c3
              5c75 0030  ld   $30
              5c76 000c  ld   $0c
              5c77 00c3  ld   $c3
              5c78 00eb  ld   $eb
              5c79 001a  ld   $1a
              5c7a 0004  ld   $04         ;End of Apps/Racer/Horizon-256x16.rgb, size 3132
                                          ;+-----------------------------------+
                                          ;| Apps/Racer/Racer_v2.gcl           |
                                          ;+-----------------------------------+
              5c7b dc7a  st   $7a,[y,x++] ;'z'
              5c7c dc69  st   $69,[y,x++] ;'i'
              5c7d dc70  st   $70,[y,x++] ;'p'
              5c7e dc70  st   $70,[y,x++] ;'p'
              5c7f dc65  st   $65,[y,x++] ;'e'
              5c80 dc64  st   $64,[y,x++] ;'d'
              5c81 dc52  st   $52,[y,x++] ;'R'
              5c82 dc61  st   $61,[y,x++] ;'a'
              5c83 003f  ld   $3f
              5c84 c218  st   [$18]
              5c85 0050  ld   $50
              5c86 14f3  ld   $f3,y
              5c87 e019  jmp  y,$19
              5c88 c219  st   [$19]
Racer:        5c89 0002  ld   $02         ;| RAM segment address (high byte first)
              5c8a 0000  ld   $00         ;|
              5c8b 00f7  ld   $f7         ;| Length (1..256)
              5c8c 001a  ld   $1a         ;0200 LD
              5c8d 0021  ld   $21
              5c8e 00e6  ld   $e6         ;0202 SUBI
              5c8f 0020  ld   $20
              5c90 0035  ld   $35         ;0204 BCC
              5c91 0053  ld   $53         ;0205 GE
              5c92 000b  ld   $0b
              5c93 0021  ld   $21         ;0207 LDW
              5c94 000e  ld   $0e         ;0207 '_frameCount'
              5c95 00f3  ld   $f3         ;0209 DOKE
              5c96 0017  ld   $17         ;0209 '_vPCH'
              5c97 0090  ld   $90         ;020b BRA
              5c98 0005  ld   $05
              5c99 00cd  ld   $cd         ;020d DEF
              5c9a 0057  ld   $57
              5c9b 00e6  ld   $e6         ;020f SUBI
              5c9c 0052  ld   $52
              5c9d 0035  ld   $35         ;0211 BCC
              5c9e 0053  ld   $53         ;0212 GE
              5c9f 001b  ld   $1b
              5ca0 00e3  ld   $e3         ;0214 ADDI
              5ca1 0032  ld   $32
              5ca2 002b  ld   $2b         ;0216 STW
              5ca3 0030  ld   $30         ;0216 'i'
              5ca4 0011  ld   $11         ;0218 LDWI
              5ca5 0000  ld   $00
              5ca6 0007  ld   $07
              5ca7 0090  ld   $90         ;021b BRA
              5ca8 0020  ld   $20
              5ca9 002b  ld   $2b         ;021d STW
              5caa 0030  ld   $30         ;021d 'i'
              5cab 0011  ld   $11         ;021f LDWI
              5cac 0000  ld   $00
              5cad 0008  ld   $08
              5cae 002b  ld   $2b         ;0222 STW
              5caf 0032  ld   $32         ;0222 'fontData'
              5cb0 0021  ld   $21         ;0224 LDW
              5cb1 0030  ld   $30         ;0224 'i'
              5cb2 00e9  ld   $e9         ;0226 LSLW
              5cb3 00e9  ld   $e9         ;0227 LSLW
              5cb4 0099  ld   $99         ;0228 ADDW
              5cb5 0030  ld   $30         ;0228 'i'
              5cb6 0099  ld   $99         ;022a ADDW
              5cb7 0032  ld   $32         ;022a 'fontData'
              5cb8 002b  ld   $2b         ;022c STW
              5cb9 0032  ld   $32         ;022c 'fontData'
              5cba 0021  ld   $21         ;022e LDW
              5cbb 0034  ld   $34         ;022e 'BgColor'
              5cbc 005e  ld   $5e         ;0230 ST
              5cbd 0024  ld   $24
              5cbe 0021  ld   $21         ;0232 LDW
              5cbf 0036  ld   $36         ;0232 'Color'
              5cc0 005e  ld   $5e         ;0234 ST
              5cc1 0025  ld   $25
              5cc2 0021  ld   $21         ;0236 LDW
              5cc3 0038  ld   $38         ;0236 'Pos'
              5cc4 002b  ld   $2b         ;0238 STW
              5cc5 0028  ld   $28
              5cc6 0011  ld   $11         ;023a LDWI
              5cc7 00e1  ld   $e1
              5cc8 0004  ld   $04
              5cc9 002b  ld   $2b         ;023d STW
              5cca 0022  ld   $22
              5ccb 0059  ld   $59         ;023f LDI
              5ccc 00fb  ld   $fb
              5ccd 002b  ld   $2b         ;0241 STW
              5cce 0030  ld   $30         ;0241 'i'
              5ccf 0021  ld   $21         ;0243 LDW
              5cd0 0032  ld   $32         ;0243 'fontData'
              5cd1 007f  ld   $7f         ;0245 LUP
              5cd2 0000  ld   $00
              5cd3 0093  ld   $93         ;0247 INC
              5cd4 0032  ld   $32         ;0247 'fontData'
              5cd5 005e  ld   $5e         ;0249 ST
              5cd6 0026  ld   $26
              5cd7 00b4  ld   $b4         ;024b SYS
              5cd8 00cc  ld   $cc
              5cd9 0093  ld   $93         ;024d INC
              5cda 0028  ld   $28
              5cdb 0093  ld   $93         ;024f INC
              5cdc 0030  ld   $30         ;024f 'i'
              5cdd 0021  ld   $21         ;0251 LDW
              5cde 0030  ld   $30         ;0251 'i'
              5cdf 0035  ld   $35         ;0253 BCC
              5ce0 0072  ld   $72         ;0254 NE
              5ce1 0041  ld   $41
              5ce2 0021  ld   $21         ;0256 LDW
              5ce3 0038  ld   $38         ;0256 'Pos'
              5ce4 00ff  ld   $ff         ;0258 RET
              5ce5 002b  ld   $2b         ;0259 STW
              5ce6 003a  ld   $3a         ;0259 'QPrintChar'
              5ce7 00cd  ld   $cd         ;025b DEF
              5ce8 00f0  ld   $f0
              5ce9 001a  ld   $1a         ;025d LD
              5cea 000e  ld   $0e
              5ceb 00b8  ld   $b8         ;025f SUBW
              5cec 003c  ld   $3c         ;025f 'LastFrame'
              5ced 0082  ld   $82         ;0261 ANDI
              5cee 00ff  ld   $ff
              5cef 005e  ld   $5e         ;0263 ST
              5cf0 002b  ld   $2b
              5cf1 0099  ld   $99         ;0265 ADDW
              5cf2 003e  ld   $3e         ;0265 'Time'
              5cf3 0035  ld   $35         ;0267 BCC
              5cf4 0053  ld   $53         ;0268 GE
              5cf5 006b  ld   $6b
              5cf6 0011  ld   $11         ;026a LDWI
              5cf7 00ff  ld   $ff
              5cf8 007f  ld   $7f
              5cf9 002b  ld   $2b         ;026d STW
              5cfa 003e  ld   $3e         ;026d 'Time'
              5cfb fe00  bra  ac          ;+-----------------------------------+
              5cfc fcfd  bra  $5cfd       ;|                                   |
              5cfd 1418  ld   $18,y       ;| Trampoline for page $5c00 lookups |
              5cfe e006  jmp  y,$06       ;|                                   |
              5cff c218  st   [$18]       ;+-----------------------------------+
              5d00 001a  ld   $1a         ;026f LD
              5d01 000e  ld   $0e
              5d02 002b  ld   $2b         ;0271 STW
              5d03 003c  ld   $3c         ;0271 'LastFrame'
              5d04 001a  ld   $1a         ;0273 LD
              5d05 0041  ld   $41         ;0273 'Speed'+1
              5d06 0035  ld   $35         ;0275 BCC
              5d07 0056  ld   $56         ;0276 LE
              5d08 008a  ld   $8a
              5d09 002b  ld   $2b         ;0278 STW
              5d0a 0030  ld   $30         ;0278 'i'
              5d0b 0021  ld   $21         ;027a LDW
              5d0c 0042  ld   $42         ;027a 'CarX'
              5d0d 00b8  ld   $b8         ;027c SUBW
              5d0e 0044  ld   $44         ;027c 'DriftX'
              5d0f 002b  ld   $2b         ;027e STW
              5d10 0042  ld   $42         ;027e 'CarX'
              5d11 0021  ld   $21         ;0280 LDW
              5d12 0046  ld   $46         ;0280 'HorizonX'
              5d13 0099  ld   $99         ;0282 ADDW
              5d14 0048  ld   $48         ;0282 'HorizonDX'
              5d15 002b  ld   $2b         ;0284 STW
              5d16 0046  ld   $46         ;0284 'HorizonX'
              5d17 0021  ld   $21         ;0286 LDW
              5d18 0030  ld   $30         ;0286 'i'
              5d19 00e6  ld   $e6         ;0288 SUBI
              5d1a 0001  ld   $01
              5d1b 0090  ld   $90         ;028a BRA
              5d1c 0073  ld   $73
              5d1d 0059  ld   $59         ;028c LDI
              5d1e 0000  ld   $00
              5d1f 002b  ld   $2b         ;028e STW
              5d20 004a  ld   $4a         ;028e 'Steer'
              5d21 001a  ld   $1a         ;0290 LD
              5d22 0011  ld   $11
              5d23 0082  ld   $82         ;0292 ANDI
              5d24 0001  ld   $01
              5d25 0035  ld   $35         ;0294 BCC
              5d26 0072  ld   $72         ;0295 NE
              5d27 00a0  ld   $a0
              5d28 0011  ld   $11         ;0297 LDWI
              5d29 0000  ld   $00
              5d2a 0002  ld   $02
              5d2b 0099  ld   $99         ;029a ADDW
              5d2c 0042  ld   $42         ;029a 'CarX'
              5d2d 002b  ld   $2b         ;029c STW
              5d2e 0042  ld   $42         ;029c 'CarX'
              5d2f 0059  ld   $59         ;029e LDI
              5d30 0001  ld   $01
              5d31 002b  ld   $2b         ;02a0 STW
              5d32 004a  ld   $4a         ;02a0 'Steer'
              5d33 001a  ld   $1a         ;02a2 LD
              5d34 0011  ld   $11
              5d35 0082  ld   $82         ;02a4 ANDI
              5d36 0002  ld   $02
              5d37 0035  ld   $35         ;02a6 BCC
              5d38 0072  ld   $72         ;02a7 NE
              5d39 00b3  ld   $b3
              5d3a 0011  ld   $11         ;02a9 LDWI
              5d3b 0000  ld   $00
              5d3c 00fe  ld   $fe
              5d3d 0099  ld   $99         ;02ac ADDW
              5d3e 0042  ld   $42         ;02ac 'CarX'
              5d3f 002b  ld   $2b         ;02ae STW
              5d40 0042  ld   $42         ;02ae 'CarX'
              5d41 0011  ld   $11         ;02b0 LDWI
              5d42 00ff  ld   $ff
              5d43 00ff  ld   $ff
              5d44 002b  ld   $2b         ;02b3 STW
              5d45 004a  ld   $4a         ;02b3 'Steer'
              5d46 001a  ld   $1a         ;02b5 LD
              5d47 0011  ld   $11
              5d48 0082  ld   $82         ;02b7 ANDI
              5d49 0080  ld   $80
              5d4a 0035  ld   $35         ;02b9 BCC
              5d4b 0072  ld   $72         ;02ba NE
              5d4c 00cf  ld   $cf
              5d4d 0021  ld   $21         ;02bc LDW
              5d4e 0040  ld   $40         ;02bc 'Speed'
              5d4f 00e3  ld   $e3         ;02be ADDI
              5d50 0010  ld   $10
              5d51 002b  ld   $2b         ;02c0 STW
              5d52 0040  ld   $40         ;02c0 'Speed'
              5d53 0011  ld   $11         ;02c2 LDWI
              5d54 00ff  ld   $ff
              5d55 0005  ld   $05
              5d56 00b8  ld   $b8         ;02c5 SUBW
              5d57 0040  ld   $40         ;02c5 'Speed'
              5d58 0035  ld   $35         ;02c7 BCC
              5d59 0053  ld   $53         ;02c8 GE
              5d5a 00cd  ld   $cd
              5d5b 0011  ld   $11         ;02ca LDWI
              5d5c 00ff  ld   $ff
              5d5d 0005  ld   $05
              5d5e 002b  ld   $2b         ;02cd STW
              5d5f 0040  ld   $40         ;02cd 'Speed'
              5d60 0090  ld   $90         ;02cf BRA
              5d61 00dd  ld   $dd
              5d62 0011  ld   $11         ;02d1 LDWI
              5d63 00f8  ld   $f8
              5d64 00fe  ld   $fe
              5d65 0099  ld   $99         ;02d4 ADDW
              5d66 0040  ld   $40         ;02d4 'Speed'
              5d67 0035  ld   $35         ;02d6 BCC
              5d68 0050  ld   $50         ;02d7 LT
              5d69 00dd  ld   $dd
              5d6a 0021  ld   $21         ;02d9 LDW
              5d6b 0040  ld   $40         ;02d9 'Speed'
              5d6c 00e6  ld   $e6         ;02db SUBI
              5d6d 0008  ld   $08
              5d6e 002b  ld   $2b         ;02dd STW
              5d6f 0040  ld   $40         ;02dd 'Speed'
              5d70 001a  ld   $1a         ;02df LD
              5d71 0011  ld   $11
              5d72 0082  ld   $82         ;02e1 ANDI
              5d73 0040  ld   $40
              5d74 0035  ld   $35         ;02e3 BCC
              5d75 0072  ld   $72         ;02e4 NE
              5d76 00ef  ld   $ef
              5d77 0021  ld   $21         ;02e6 LDW
              5d78 0040  ld   $40         ;02e6 'Speed'
              5d79 00e6  ld   $e6         ;02e8 SUBI
              5d7a 0040  ld   $40
              5d7b 0035  ld   $35         ;02ea BCC
              5d7c 0053  ld   $53         ;02eb GE
              5d7d 00ed  ld   $ed
              5d7e 0059  ld   $59         ;02ed LDI
              5d7f 0000  ld   $00
              5d80 002b  ld   $2b         ;02ef STW
              5d81 0040  ld   $40         ;02ef 'Speed'
              5d82 00ff  ld   $ff         ;02f1 RET
              5d83 002b  ld   $2b         ;02f2 STW
              5d84 004c  ld   $4c         ;02f2 'ControlRaceCar'
              5d85 0093  ld   $93         ;02f4 INC
              5d86 001b  ld   $1b         ;02f4 '_vLR'+1
              5d87 00ff  ld   $ff         ;02f6 RET
              5d88 0003  ld   $03         ;| RAM segment address (high byte first)
              5d89 0000  ld   $00         ;|
              5d8a 00e1  ld   $e1         ;| Length (1..256)
              5d8b 00cd  ld   $cd         ;0300 DEF
              5d8c 0009  ld   $09
              5d8d 0047  ld   $47         ;0302 'G'
              5d8e 0069  ld   $69         ;0303 'i'
              5d8f 0067  ld   $67         ;0304 'g'
              5d90 0061  ld   $61         ;0305 'a'
              5d91 0074  ld   $74         ;0306 't'
              5d92 0072  ld   $72         ;0307 'r'
              5d93 006f  ld   $6f         ;0308 'o'
              5d94 006e  ld   $6e         ;0309 'n'
              5d95 0000  ld   $00         ;030a 0
              5d96 002b  ld   $2b         ;030b STW
              5d97 004e  ld   $4e         ;030b 'GigatronText'
              5d98 00cd  ld   $cd         ;030d DEF
              5d99 001d  ld   $1d
              5d9a 001a  ld   $1a         ;030f LD
              5d9b 000e  ld   $0e
              5d9c 0099  ld   $99         ;0311 ADDW
              5d9d 0050  ld   $50         ;0311 'Delay'
              5d9e 0082  ld   $82         ;0313 ANDI
              5d9f 00ff  ld   $ff
              5da0 002b  ld   $2b         ;0315 STW
              5da1 0052  ld   $52         ;0315 'tmp'
              5da2 001a  ld   $1a         ;0317 LD
              5da3 000e  ld   $0e
              5da4 00b8  ld   $b8         ;0319 SUBW
              5da5 0052  ld   $52         ;0319 'tmp'
              5da6 0035  ld   $35         ;031b BCC
              5da7 0072  ld   $72         ;031c NE
              5da8 0015  ld   $15
              5da9 00ff  ld   $ff         ;031e RET
              5daa 002b  ld   $2b         ;031f STW
              5dab 0054  ld   $54         ;031f 'Wait'
              5dac 00cd  ld   $cd         ;0321 DEF
              5dad 00a1  ld   $a1
              5dae 0021  ld   $21         ;0323 LDW
              5daf 0056  ld   $56         ;0323 'Video'
              5db0 00ad  ld   $ad         ;0325 PEEK
              5db1 0082  ld   $82         ;0326 ANDI
              5db2 00fe  ld   $fe
              5db3 005e  ld   $5e         ;0328 ST
              5db4 0059  ld   $59         ;0328 'p'+1
              5db5 0088  ld   $88         ;032a ORI
              5db6 0001  ld   $01
              5db7 005e  ld   $5e         ;032c ST
              5db8 005b  ld   $5b         ;032c 'q'+1
              5db9 0093  ld   $93         ;032e INC
              5dba 0056  ld   $56         ;032e 'Video'
              5dbb 0059  ld   $59         ;0330 LDI
              5dbc 0000  ld   $00
              5dbd 005e  ld   $5e         ;0332 ST
              5dbe 0058  ld   $58         ;0332 'p'
              5dbf 005e  ld   $5e         ;0334 ST
              5dc0 005a  ld   $5a         ;0334 'q'
              5dc1 0021  ld   $21         ;0336 LDW
              5dc2 0058  ld   $58         ;0336 'p'
              5dc3 00ad  ld   $ad         ;0338 PEEK
              5dc4 002b  ld   $2b         ;0339 STW
              5dc5 0030  ld   $30         ;0339 'i'
              5dc6 0021  ld   $21         ;033b LDW
              5dc7 005a  ld   $5a         ;033b 'q'
              5dc8 00ad  ld   $ad         ;033d PEEK
              5dc9 00b8  ld   $b8         ;033e SUBW
              5dca 0030  ld   $30         ;033e 'i'
              5dcb 002b  ld   $2b         ;0340 STW
              5dcc 0030  ld   $30         ;0340 'i'
              5dcd 0021  ld   $21         ;0342 LDW
              5dce 0058  ld   $58         ;0342 'p'
              5dcf 00ad  ld   $ad         ;0344 PEEK
              5dd0 005e  ld   $5e         ;0345 ST
              5dd1 0058  ld   $58         ;0345 'p'
              5dd2 005e  ld   $5e         ;0347 ST
              5dd3 005a  ld   $5a         ;0347 'q'
              5dd4 0059  ld   $59         ;0349 LDI
              5dd5 0015  ld   $15
              5dd6 00f0  ld   $f0         ;034b POKE
              5dd7 0058  ld   $58         ;034b 'p'
              5dd8 00f0  ld   $f0         ;034d POKE
              5dd9 005a  ld   $5a         ;034d 'q'
              5dda 0093  ld   $93         ;034f INC
              5ddb 0058  ld   $58         ;034f 'p'
              5ddc 0093  ld   $93         ;0351 INC
              5ddd 005a  ld   $5a         ;0351 'q'
              5dde 0021  ld   $21         ;0353 LDW
              5ddf 0030  ld   $30         ;0353 'i'
              5de0 00e6  ld   $e6         ;0355 SUBI
              5de1 0001  ld   $01
              5de2 002b  ld   $2b         ;0357 STW
              5de3 0030  ld   $30         ;0357 'i'
              5de4 0035  ld   $35         ;0359 BCC
              5de5 004d  ld   $4d         ;035a GT
              5de6 0047  ld   $47
              5de7 0021  ld   $21         ;035c LDW
              5de8 005c  ld   $5c         ;035c 'Sprite'
              5de9 002b  ld   $2b         ;035e STW
              5dea 005e  ld   $5e         ;035e 's'
              5deb 0059  ld   $59         ;0360 LDI
              5dec 0000  ld   $00
              5ded 005e  ld   $5e         ;0362 ST
              5dee 0058  ld   $58         ;0362 'p'
              5def 0021  ld   $21         ;0364 LDW
              5df0 0056  ld   $56         ;0364 'Video'
              5df1 00ad  ld   $ad         ;0366 PEEK
              5df2 0099  ld   $99         ;0367 ADDW
              5df3 0060  ld   $60         ;0367 'X'
              5df4 002b  ld   $2b         ;0369 STW
              5df5 0060  ld   $60         ;0369 'X'
              5df6 0021  ld   $21         ;036b LDW
              5df7 005e  ld   $5e         ;036b 's'
              5df8 00ad  ld   $ad         ;036d PEEK
              5df9 0099  ld   $99         ;036e ADDW
              5dfa 0060  ld   $60         ;036e 'X'
              5dfb fe00  bra  ac          ;+-----------------------------------+
              5dfc fcfd  bra  $5dfd       ;|                                   |
              5dfd 1418  ld   $18,y       ;| Trampoline for page $5d00 lookups |
              5dfe e006  jmp  y,$06       ;|                                   |
              5dff c218  st   [$18]       ;+-----------------------------------+
              5e00 00f0  ld   $f0         ;0370 POKE
              5e01 0058  ld   $58         ;0370 'p'
              5e02 005e  ld   $5e         ;0372 ST
              5e03 0058  ld   $58         ;0372 'p'
              5e04 005e  ld   $5e         ;0374 ST
              5e05 005a  ld   $5a         ;0374 'q'
              5e06 0093  ld   $93         ;0376 INC
              5e07 005e  ld   $5e         ;0376 's'
              5e08 0021  ld   $21         ;0378 LDW
              5e09 0058  ld   $58         ;0378 'p'
              5e0a 00ad  ld   $ad         ;037a PEEK
              5e0b 008c  ld   $8c         ;037b XORI
              5e0c 0015  ld   $15
              5e0d 0099  ld   $99         ;037d ADDW
              5e0e 0062  ld   $62         ;037d 'Collision'
              5e0f 002b  ld   $2b         ;037f STW
              5e10 0062  ld   $62         ;037f 'Collision'
              5e11 0021  ld   $21         ;0381 LDW
              5e12 005e  ld   $5e         ;0381 's'
              5e13 00ad  ld   $ad         ;0383 PEEK
              5e14 00f0  ld   $f0         ;0384 POKE
              5e15 0058  ld   $58         ;0384 'p'
              5e16 0093  ld   $93         ;0386 INC
              5e17 0058  ld   $58         ;0386 'p'
              5e18 00f0  ld   $f0         ;0388 POKE
              5e19 005a  ld   $5a         ;0388 'q'
              5e1a 0093  ld   $93         ;038a INC
              5e1b 005a  ld   $5a         ;038a 'q'
              5e1c 0093  ld   $93         ;038c INC
              5e1d 005e  ld   $5e         ;038c 's'
              5e1e 0021  ld   $21         ;038e LDW
              5e1f 005e  ld   $5e         ;038e 's'
              5e20 00ad  ld   $ad         ;0390 PEEK
              5e21 0035  ld   $35         ;0391 BCC
              5e22 0072  ld   $72         ;0392 NE
              5e23 0076  ld   $76
              5e24 0059  ld   $59         ;0394 LDI
              5e25 0000  ld   $00
              5e26 005e  ld   $5e         ;0396 ST
              5e27 005a  ld   $5a         ;0396 'q'
              5e28 001a  ld   $1a         ;0398 LD
              5e29 0058  ld   $58         ;0398 'p'
              5e2a 00f0  ld   $f0         ;039a POKE
              5e2b 005a  ld   $5a         ;039a 'q'
              5e2c 0021  ld   $21         ;039c LDW
              5e2d 0056  ld   $56         ;039c 'Video'
              5e2e 00e3  ld   $e3         ;039e ADDI
              5e2f 0003  ld   $03
              5e30 002b  ld   $2b         ;03a0 STW
              5e31 0056  ld   $56         ;03a0 'Video'
              5e32 00ff  ld   $ff         ;03a2 RET
              5e33 002b  ld   $2b         ;03a3 STW
              5e34 0064  ld   $64         ;03a3 'DrawPixels'
              5e35 00cd  ld   $cd         ;03a5 DEF
              5e36 00da  ld   $da
              5e37 0011  ld   $11         ;03a7 LDWI
              5e38 00fd  ld   $fd
              5e39 0001  ld   $01
              5e3a 002b  ld   $2b         ;03aa STW
              5e3b 0058  ld   $58         ;03aa 'p'
              5e3c 0021  ld   $21         ;03ac LDW
              5e3d 0040  ld   $40         ;03ac 'Speed'
              5e3e 0099  ld   $99         ;03ae ADDW
              5e3f 0040  ld   $40         ;03ae 'Speed'
              5e40 001a  ld   $1a         ;03b0 LD
              5e41 0019  ld   $19
              5e42 00f0  ld   $f0         ;03b2 POKE
              5e43 0058  ld   $58         ;03b2 'p'
              5e44 0093  ld   $93         ;03b4 INC
              5e45 0059  ld   $59         ;03b4 'p'+1
              5e46 00f0  ld   $f0         ;03b6 POKE
              5e47 0058  ld   $58         ;03b6 'p'
              5e48 0093  ld   $93         ;03b8 INC
              5e49 0059  ld   $59         ;03b8 'p'+1
              5e4a 00f0  ld   $f0         ;03ba POKE
              5e4b 0058  ld   $58         ;03ba 'p'
              5e4c 0093  ld   $93         ;03bc INC
              5e4d 0059  ld   $59         ;03bc 'p'+1
              5e4e 00f0  ld   $f0         ;03be POKE
              5e4f 0058  ld   $58         ;03be 'p'
              5e50 0011  ld   $11         ;03c0 LDWI
              5e51 00fc  ld   $fc
              5e52 0001  ld   $01
              5e53 002b  ld   $2b         ;03c3 STW
              5e54 0058  ld   $58         ;03c3 'p'
              5e55 0021  ld   $21         ;03c5 LDW
              5e56 0040  ld   $40         ;03c5 'Speed'
              5e57 0082  ld   $82         ;03c7 ANDI
              5e58 007f  ld   $7f
              5e59 00f0  ld   $f0         ;03c9 POKE
              5e5a 0058  ld   $58         ;03c9 'p'
              5e5b 0093  ld   $93         ;03cb INC
              5e5c 0059  ld   $59         ;03cb 'p'+1
              5e5d 00f0  ld   $f0         ;03cd POKE
              5e5e 0058  ld   $58         ;03cd 'p'
              5e5f 0093  ld   $93         ;03cf INC
              5e60 0059  ld   $59         ;03cf 'p'+1
              5e61 00f0  ld   $f0         ;03d1 POKE
              5e62 0058  ld   $58         ;03d1 'p'
              5e63 0093  ld   $93         ;03d3 INC
              5e64 0059  ld   $59         ;03d3 'p'+1
              5e65 00f0  ld   $f0         ;03d5 POKE
              5e66 0058  ld   $58         ;03d5 'p'
              5e67 0059  ld   $59         ;03d7 LDI
              5e68 000a  ld   $0a
              5e69 005e  ld   $5e         ;03d9 ST
              5e6a 002c  ld   $2c
              5e6b 00ff  ld   $ff         ;03db RET
              5e6c 002b  ld   $2b         ;03dc STW
              5e6d 0066  ld   $66         ;03dc 'PlayEngineSound'
              5e6e 0093  ld   $93         ;03de INC
              5e6f 001b  ld   $1b         ;03de '_vLR'+1
              5e70 00ff  ld   $ff         ;03e0 RET
              5e71 0004  ld   $04         ;| RAM segment address (high byte first)
              5e72 0000  ld   $00         ;|
              5e73 00ef  ld   $ef         ;| Length (1..256)
              5e74 00cd  ld   $cd         ;0400 DEF
              5e75 003e  ld   $3e
              5e76 0075  ld   $75         ;0402 PUSH
              5e77 0011  ld   $11         ;0403 LDWI
              5e78 0080  ld   $80
              5e79 0020  ld   $20
              5e7a 002b  ld   $2b         ;0406 STW
              5e7b 0038  ld   $38         ;0406 'Pos'
              5e7c 0011  ld   $11         ;0408 LDWI
              5e7d 0003  ld   $03
              5e7e 000b  ld   $0b
              5e7f 002b  ld   $2b         ;040b STW
              5e80 0022  ld   $22
              5e81 0059  ld   $59         ;040d LDI
              5e82 0000  ld   $00
              5e83 002b  ld   $2b         ;040f STW
              5e84 0068  ld   $68         ;040f 'Width'
              5e85 0021  ld   $21         ;0411 LDW
              5e86 0068  ld   $68         ;0411 'Width'
              5e87 00e3  ld   $e3         ;0413 ADDI
              5e88 0001  ld   $01
              5e89 002b  ld   $2b         ;0415 STW
              5e8a 0068  ld   $68         ;0415 'Width'
              5e8b 0059  ld   $59         ;0417 LDI
              5e8c 003f  ld   $3f
              5e8d 002b  ld   $2b         ;0419 STW
              5e8e 006a  ld   $6a         ;0419 'CurbColor'
              5e8f 0059  ld   $59         ;041b LDI
              5e90 000c  ld   $0c
              5e91 002b  ld   $2b         ;041d STW
              5e92 006c  ld   $6c         ;041d 'GrassColor'
              5e93 00cf  ld   $cf         ;041f CALL
              5e94 006e  ld   $6e         ;041f 'SetupSegment'
              5e95 0093  ld   $93         ;0421 INC
              5e96 0039  ld   $39         ;0421 'Pos'+1
              5e97 0059  ld   $59         ;0423 LDI
              5e98 0003  ld   $03
              5e99 002b  ld   $2b         ;0425 STW
              5e9a 006a  ld   $6a         ;0425 'CurbColor'
              5e9b 0059  ld   $59         ;0427 LDI
              5e9c 0008  ld   $08
              5e9d 002b  ld   $2b         ;0429 STW
              5e9e 006c  ld   $6c         ;0429 'GrassColor'
              5e9f 00cf  ld   $cf         ;042b CALL
              5ea0 006e  ld   $6e         ;042b 'SetupSegment'
              5ea1 0093  ld   $93         ;042d INC
              5ea2 0039  ld   $39         ;042d 'Pos'+1
              5ea3 0021  ld   $21         ;042f LDW
              5ea4 0038  ld   $38         ;042f 'Pos'
              5ea5 0035  ld   $35         ;0431 BCC
              5ea6 0053  ld   $53         ;0432 GE
              5ea7 000f  ld   $0f
              5ea8 0011  ld   $11         ;0434 LDWI
              5ea9 0000  ld   $00
              5eaa 0074  ld   $74
              5eab 00f0  ld   $f0         ;0437 1008
              5eac 0018  ld   $18         ;0438 24
              5ead 0093  ld   $93         ;0439 INC
              5eae 0019  ld   $19
              5eaf 0035  ld   $35         ;043b BCC
              5eb0 004d  ld   $4d         ;043c GT
              5eb1 0035  ld   $35
              5eb2 0063  ld   $63         ;043e POP
              5eb3 00ff  ld   $ff         ;043f RET
              5eb4 002b  ld   $2b         ;0440 STW
              5eb5 0070  ld   $70         ;0440 'SetupRoad'
              5eb6 00cd  ld   $cd         ;0442 DEF
              5eb7 0086  ld   $86
              5eb8 0021  ld   $21         ;0444 LDW
              5eb9 0068  ld   $68         ;0444 'Width'
              5eba 00e9  ld   $e9         ;0446 LSLW
              5ebb 005e  ld   $5e         ;0447 ST
              5ebc 0024  ld   $24
              5ebd 0021  ld   $21         ;0449 LDW
              5ebe 0038  ld   $38         ;0449 'Pos'
              5ebf 00b8  ld   $b8         ;044b SUBW
              5ec0 0068  ld   $68         ;044b 'Width'
              5ec1 002b  ld   $2b         ;044d STW
              5ec2 0058  ld   $58         ;044d 'p'
              5ec3 002b  ld   $2b         ;044f STW
              5ec4 0026  ld   $26
              5ec5 0059  ld   $59         ;0451 LDI
              5ec6 0015  ld   $15
              5ec7 005e  ld   $5e         ;0453 ST
              5ec8 0025  ld   $25
              5ec9 00b4  ld   $b4         ;0455 SYS
              5eca 00f4  ld   $f4
              5ecb 0059  ld   $59         ;0457 LDI
              5ecc 0080  ld   $80
              5ecd 00b8  ld   $b8         ;0459 SUBW
              5ece 0068  ld   $68         ;0459 'Width'
              5ecf 00e9  ld   $e9         ;045b LSLW
              5ed0 005e  ld   $5e         ;045c ST
              5ed1 0024  ld   $24
              5ed2 0021  ld   $21         ;045e LDW
              5ed3 0038  ld   $38         ;045e 'Pos'
              5ed4 0099  ld   $99         ;0460 ADDW
              5ed5 0068  ld   $68         ;0460 'Width'
              5ed6 002b  ld   $2b         ;0462 STW
              5ed7 005a  ld   $5a         ;0462 'q'
              5ed8 002b  ld   $2b         ;0464 STW
              5ed9 0026  ld   $26
              5eda 0021  ld   $21         ;0466 LDW
              5edb 006c  ld   $6c         ;0466 'GrassColor'
              5edc 005e  ld   $5e         ;0468 ST
              5edd 0025  ld   $25
              5ede 00b4  ld   $b4         ;046a SYS
              5edf 00f4  ld   $f4
              5ee0 0021  ld   $21         ;046c LDW
              5ee1 0068  ld   $68         ;046c 'Width'
              5ee2 00e6  ld   $e6         ;046e SUBI
              5ee3 0008  ld   $08
              5ee4 0035  ld   $35         ;0470 BCC
              5ee5 0056  ld   $56         ;0471 LE
              5ee6 0085  ld   $85
              5ee7 002b  ld   $2b         ;0473 STW
              5ee8 0052  ld   $52         ;0473 'tmp'
              5ee9 0021  ld   $21         ;0475 LDW
              5eea 005a  ld   $5a         ;0475 'q'
              5eeb 00e6  ld   $e6         ;0477 SUBI
              5eec 0001  ld   $01
              5eed 002b  ld   $2b         ;0479 STW
              5eee 005a  ld   $5a         ;0479 'q'
              5eef 0021  ld   $21         ;047b LDW
              5ef0 006a  ld   $6a         ;047b 'CurbColor'
              5ef1 00f0  ld   $f0         ;047d POKE
              5ef2 0058  ld   $58         ;047d 'p'
              5ef3 00f0  ld   $f0         ;047f POKE
              5ef4 005a  ld   $5a         ;047f 'q'
              5ef5 0093  ld   $93         ;0481 INC
              5ef6 0058  ld   $58         ;0481 'p'
              5ef7 0021  ld   $21         ;0483 LDW
              5ef8 0052  ld   $52         ;0483 'tmp'
              5ef9 0090  ld   $90         ;0485 BRA
              5efa 006c  ld   $6c
              5efb fe00  bra  ac          ;+-----------------------------------+
              5efc fcfd  bra  $5efd       ;|                                   |
              5efd 1418  ld   $18,y       ;| Trampoline for page $5e00 lookups |
              5efe e006  jmp  y,$06       ;|                                   |
              5eff c218  st   [$18]       ;+-----------------------------------+
              5f00 00ff  ld   $ff         ;0487 RET
              5f01 002b  ld   $2b         ;0488 STW
              5f02 006e  ld   $6e         ;0488 'SetupSegment'
              5f03 00cd  ld   $cd         ;048a DEF
              5f04 00e8  ld   $e8
              5f05 0075  ld   $75         ;048c PUSH
              5f06 0011  ld   $11         ;048d LDWI
              5f07 000f  ld   $0f
              5f08 000e  ld   $0e
              5f09 002b  ld   $2b         ;0490 STW
              5f0a 0072  ld   $72         ;0490 'Radix'
              5f0b 00cf  ld   $cf         ;0492 CALL
              5f0c 0074  ld   $74         ;0492 'ExtractDigit'
              5f0d 0021  ld   $21         ;0494 LDW
              5f0e 0076  ld   $76         ;0494 'Prev3'
              5f0f 00fc  ld   $fc         ;0496 XORW
              5f10 0078  ld   $78         ;0496 'Char'
              5f11 0035  ld   $35         ;0498 BCC
              5f12 003f  ld   $3f         ;0499 EQ
              5f13 00a1  ld   $a1
              5f14 0021  ld   $21         ;049b LDW
              5f15 0078  ld   $78         ;049b 'Char'
              5f16 002b  ld   $2b         ;049d STW
              5f17 0076  ld   $76         ;049d 'Prev3'
              5f18 00cf  ld   $cf         ;049f CALL
              5f19 003a  ld   $3a         ;049f 'QPrintChar'
              5f1a 0090  ld   $90         ;04a1 BRA
              5f1b 00a3  ld   $a3
              5f1c 0021  ld   $21         ;04a3 LDW
              5f1d 0038  ld   $38         ;04a3 'Pos'
              5f1e 00e3  ld   $e3         ;04a5 ADDI
              5f1f 000c  ld   $0c
              5f20 002b  ld   $2b         ;04a7 STW
              5f21 0038  ld   $38         ;04a7 'Pos'
              5f22 0011  ld   $11         ;04a9 LDWI
              5f23 0058  ld   $58
              5f24 0002  ld   $02
              5f25 002b  ld   $2b         ;04ac STW
              5f26 0072  ld   $72         ;04ac 'Radix'
              5f27 00cf  ld   $cf         ;04ae CALL
              5f28 0074  ld   $74         ;04ae 'ExtractDigit'
              5f29 0021  ld   $21         ;04b0 LDW
              5f2a 007a  ld   $7a         ;04b0 'Prev2'
              5f2b 00fc  ld   $fc         ;04b2 XORW
              5f2c 0078  ld   $78         ;04b2 'Char'
              5f2d 0035  ld   $35         ;04b4 BCC
              5f2e 003f  ld   $3f         ;04b5 EQ
              5f2f 00bd  ld   $bd
              5f30 0021  ld   $21         ;04b7 LDW
              5f31 0078  ld   $78         ;04b7 'Char'
              5f32 002b  ld   $2b         ;04b9 STW
              5f33 007a  ld   $7a         ;04b9 'Prev2'
              5f34 00cf  ld   $cf         ;04bb CALL
              5f35 003a  ld   $3a         ;04bb 'QPrintChar'
              5f36 0090  ld   $90         ;04bd BRA
              5f37 00bf  ld   $bf
              5f38 0021  ld   $21         ;04bf LDW
              5f39 0038  ld   $38         ;04bf 'Pos'
              5f3a 00e3  ld   $e3         ;04c1 ADDI
              5f3b 0006  ld   $06
              5f3c 002b  ld   $2b         ;04c3 STW
              5f3d 0038  ld   $38         ;04c3 'Pos'
              5f3e 0059  ld   $59         ;04c5 LDI
              5f3f 003c  ld   $3c
              5f40 002b  ld   $2b         ;04c7 STW
              5f41 0072  ld   $72         ;04c7 'Radix'
              5f42 00cf  ld   $cf         ;04c9 CALL
              5f43 0074  ld   $74         ;04c9 'ExtractDigit'
              5f44 0021  ld   $21         ;04cb LDW
              5f45 007c  ld   $7c         ;04cb 'Prev1'
              5f46 00fc  ld   $fc         ;04cd XORW
              5f47 0078  ld   $78         ;04cd 'Char'
              5f48 0035  ld   $35         ;04cf BCC
              5f49 003f  ld   $3f         ;04d0 EQ
              5f4a 00d8  ld   $d8
              5f4b 0021  ld   $21         ;04d2 LDW
              5f4c 0078  ld   $78         ;04d2 'Char'
              5f4d 002b  ld   $2b         ;04d4 STW
              5f4e 007c  ld   $7c         ;04d4 'Prev1'
              5f4f 00cf  ld   $cf         ;04d6 CALL
              5f50 003a  ld   $3a         ;04d6 'QPrintChar'
              5f51 0090  ld   $90         ;04d8 BRA
              5f52 00da  ld   $da
              5f53 0021  ld   $21         ;04da LDW
              5f54 0038  ld   $38         ;04da 'Pos'
              5f55 00e3  ld   $e3         ;04dc ADDI
              5f56 000c  ld   $0c
              5f57 002b  ld   $2b         ;04de STW
              5f58 0038  ld   $38         ;04de 'Pos'
              5f59 0059  ld   $59         ;04e0 LDI
              5f5a 0006  ld   $06
              5f5b 002b  ld   $2b         ;04e2 STW
              5f5c 0072  ld   $72         ;04e2 'Radix'
              5f5d 00cf  ld   $cf         ;04e4 CALL
              5f5e 0074  ld   $74         ;04e4 'ExtractDigit'
              5f5f 00cf  ld   $cf         ;04e6 CALL
              5f60 003a  ld   $3a         ;04e6 'QPrintChar'
              5f61 0063  ld   $63         ;04e8 POP
              5f62 00ff  ld   $ff         ;04e9 RET
              5f63 002b  ld   $2b         ;04ea STW
              5f64 007e  ld   $7e         ;04ea 'PrintTime'
              5f65 0093  ld   $93         ;04ec INC
              5f66 001b  ld   $1b         ;04ec '_vLR'+1
              5f67 00ff  ld   $ff         ;04ee RET
              5f68 0005  ld   $05         ;| RAM segment address (high byte first)
              5f69 0000  ld   $00         ;|
              5f6a 00e6  ld   $e6         ;| Length (1..256)
              5f6b 00cd  ld   $cd         ;0500 DEF
              5f6c 0017  ld   $17
              5f6d 0059  ld   $59         ;0502 LDI
              5f6e 0030  ld   $30
              5f6f 002b  ld   $2b         ;0504 STW
              5f70 0078  ld   $78         ;0504 'Char'
              5f71 0021  ld   $21         ;0506 LDW
              5f72 0081  ld   $81         ;0506 'Value'
              5f73 00b8  ld   $b8         ;0508 SUBW
              5f74 0072  ld   $72         ;0508 'Radix'
              5f75 0035  ld   $35         ;050a BCC
              5f76 0050  ld   $50         ;050b LT
              5f77 0014  ld   $14
              5f78 002b  ld   $2b         ;050d STW
              5f79 0081  ld   $81         ;050d 'Value'
              5f7a 0093  ld   $93         ;050f INC
              5f7b 0078  ld   $78         ;050f 'Char'
              5f7c 00b8  ld   $b8         ;0511 SUBW
              5f7d 0072  ld   $72         ;0511 'Radix'
              5f7e 0035  ld   $35         ;0513 BCC
              5f7f 0053  ld   $53         ;0514 GE
              5f80 000b  ld   $0b
              5f81 0021  ld   $21         ;0516 LDW
              5f82 0078  ld   $78         ;0516 'Char'
              5f83 00ff  ld   $ff         ;0518 RET
              5f84 002b  ld   $2b         ;0519 STW
              5f85 0074  ld   $74         ;0519 'ExtractDigit'
              5f86 00cd  ld   $cd         ;051b DEF
              5f87 0032  ld   $32
              5f88 0075  ld   $75         ;051d PUSH
              5f89 002b  ld   $2b         ;051e STW
              5f8a 0083  ld   $83         ;051e 'Text'
              5f8b 0021  ld   $21         ;0520 LDW
              5f8c 0083  ld   $83         ;0520 'Text'
              5f8d 00ad  ld   $ad         ;0522 PEEK
              5f8e 002b  ld   $2b         ;0523 STW
              5f8f 0078  ld   $78         ;0523 'Char'
              5f90 0035  ld   $35         ;0525 BCC
              5f91 003f  ld   $3f         ;0526 EQ
              5f92 0030  ld   $30
              5f93 0093  ld   $93         ;0528 INC
              5f94 0083  ld   $83         ;0528 'Text'
              5f95 00cf  ld   $cf         ;052a CALL
              5f96 003a  ld   $3a         ;052a 'QPrintChar'
              5f97 00e3  ld   $e3         ;052c ADDI
              5f98 0006  ld   $06
              5f99 002b  ld   $2b         ;052e STW
              5f9a 0038  ld   $38         ;052e 'Pos'
              5f9b 0090  ld   $90         ;0530 BRA
              5f9c 001e  ld   $1e
              5f9d 0063  ld   $63         ;0532 POP
              5f9e 00ff  ld   $ff         ;0533 RET
              5f9f 002b  ld   $2b         ;0534 STW
              5fa0 0085  ld   $85         ;0534 'PrintText'
              5fa1 00cd  ld   $cd         ;0536 DEF
              5fa2 00df  ld   $df
              5fa3 0011  ld   $11         ;0538 LDWI
              5fa4 00d0  ld   $d0
              5fa5 0074  ld   $74
              5fa6 002b  ld   $2b         ;053b STW
              5fa7 0058  ld   $58         ;053b 'p'
              5fa8 0059  ld   $59         ;053d LDI
              5fa9 0000  ld   $00
              5faa 002b  ld   $2b         ;053f STW
              5fab 0060  ld   $60         ;053f 'X'
              5fac 0021  ld   $21         ;0541 LDW
              5fad 0087  ld   $87         ;0541 'DX0'
              5fae 002b  ld   $2b         ;0543 STW
              5faf 0089  ld   $89         ;0543 'DX'
              5fb0 0021  ld   $21         ;0545 LDW
              5fb1 008b  ld   $8b         ;0545 'NextTurn'
              5fb2 00b8  ld   $b8         ;0547 SUBW
              5fb3 008d  ld   $8d         ;0547 'Distance'
              5fb4 002b  ld   $2b         ;0549 STW
              5fb5 0052  ld   $52         ;0549 'tmp'
              5fb6 0099  ld   $99         ;054b ADDW
              5fb7 0052  ld   $52         ;054b 'tmp'
              5fb8 002b  ld   $2b         ;054d STW
              5fb9 0052  ld   $52         ;054d 'tmp'
              5fba 0011  ld   $11         ;054f LDWI
              5fbb 0000  ld   $00
              5fbc 000a  ld   $0a
              5fbd 0099  ld   $99         ;0552 ADDW
              5fbe 0052  ld   $52         ;0552 'tmp'
              5fbf 007f  ld   $7f         ;0554 LUP
              5fc0 0035  ld   $35
              5fc1 002b  ld   $2b         ;0556 STW
              5fc2 0052  ld   $52         ;0556 'tmp'
              5fc3 0059  ld   $59         ;0558 LDI
              5fc4 00c5  ld   $c5
              5fc5 0099  ld   $99         ;055a ADDW
              5fc6 0052  ld   $52         ;055a 'tmp'
              5fc7 002b  ld   $2b         ;055c STW
              5fc8 0030  ld   $30         ;055c 'i'
              5fc9 001a  ld   $1a         ;055e LD
              5fca 0061  ld   $61         ;055e 'X'+1
              5fcb 00f0  ld   $f0         ;0560 POKE
              5fcc 0058  ld   $58         ;0560 'p'
              5fcd 0093  ld   $93         ;0562 INC
              5fce 0058  ld   $58         ;0562 'p'
              5fcf 0021  ld   $21         ;0564 LDW
              5fd0 0089  ld   $89         ;0564 'DX'
              5fd1 0099  ld   $99         ;0566 ADDW
              5fd2 008f  ld   $8f         ;0566 'DDX'
              5fd3 002b  ld   $2b         ;0568 STW
              5fd4 0089  ld   $89         ;0568 'DX'
              5fd5 0099  ld   $99         ;056a ADDW
              5fd6 0060  ld   $60         ;056a 'X'
              5fd7 002b  ld   $2b         ;056c STW
              5fd8 0060  ld   $60         ;056c 'X'
              5fd9 0093  ld   $93         ;056e INC
              5fda 0030  ld   $30         ;056e 'i'
              5fdb 0021  ld   $21         ;0570 LDW
              5fdc 0030  ld   $30         ;0570 'i'
              5fdd 0035  ld   $35         ;0572 BCC
              5fde 0072  ld   $72         ;0573 NE
              5fdf 005c  ld   $5c
              5fe0 001a  ld   $1a         ;0575 LD
              5fe1 0061  ld   $61         ;0575 'X'+1
              5fe2 00f0  ld   $f0         ;0577 POKE
              5fe3 0058  ld   $58         ;0577 'p'
              5fe4 0093  ld   $93         ;0579 INC
              5fe5 0058  ld   $58         ;0579 'p'
              5fe6 0021  ld   $21         ;057b LDW
              5fe7 0089  ld   $89         ;057b 'DX'
              5fe8 0099  ld   $99         ;057d ADDW
              5fe9 0091  ld   $91         ;057d 'NextDDX'
              5fea 002b  ld   $2b         ;057f STW
              5feb 0089  ld   $89         ;057f 'DX'
              5fec 0099  ld   $99         ;0581 ADDW
              5fed 0060  ld   $60         ;0581 'X'
              5fee 002b  ld   $2b         ;0583 STW
              5fef 0060  ld   $60         ;0583 'X'
              5ff0 001a  ld   $1a         ;0585 LD
              5ff1 0058  ld   $58         ;0585 'p'
              5ff2 0035  ld   $35         ;0587 BCC
              5ff3 0072  ld   $72         ;0588 NE
              5ff4 0073  ld   $73
              5ff5 0011  ld   $11         ;058a LDWI
              5ff6 00ed  ld   $ed
              5ff7 0001  ld   $01
              5ff8 002b  ld   $2b         ;058d STW
              5ff9 0024  ld   $24
              5ffa 0011  ld   $11         ;058f LDWI
              5ffb fe00  bra  ac          ;+-----------------------------------+
              5ffc fcfd  bra  $5ffd       ;|                                   |
              5ffd 1418  ld   $18,y       ;| Trampoline for page $5f00 lookups |
              5ffe e006  jmp  y,$06       ;|                                   |
              5fff c218  st   [$18]       ;+-----------------------------------+
              6000 00d1  ld   $d1
              6001 0074  ld   $74
              6002 002b  ld   $2b         ;0592 STW
              6003 0026  ld   $26
              6004 00e6  ld   $e6         ;0594 SUBI
              6005 0001  ld   $01
              6006 00ad  ld   $ad         ;0596 PEEK
              6007 002b  ld   $2b         ;0597 STW
              6008 0028  ld   $28
              6009 001a  ld   $1a         ;0599 LD
              600a 0047  ld   $47         ;0599 'HorizonX'+1
              600b 002b  ld   $2b         ;059b STW
              600c 0052  ld   $52         ;059b 'tmp'
              600d 0011  ld   $11         ;059d LDWI
              600e 00d5  ld   $d5
              600f 0074  ld   $74
              6010 00ad  ld   $ad         ;05a0 PEEK
              6011 00e3  ld   $e3         ;05a1 ADDI
              6012 0030  ld   $30
              6013 00b8  ld   $b8         ;05a3 SUBW
              6014 0052  ld   $52         ;05a3 'tmp'
              6015 002b  ld   $2b         ;05a5 STW
              6016 0052  ld   $52         ;05a5 'tmp'
              6017 0011  ld   $11         ;05a7 LDWI
              6018 00d4  ld   $d4
              6019 0074  ld   $74
              601a 00ad  ld   $ad         ;05aa PEEK
              601b 002b  ld   $2b         ;05ab STW
              601c 0087  ld   $87         ;05ab 'DX0'
              601d 0011  ld   $11         ;05ad LDWI
              601e 00ec  ld   $ec
              601f 0074  ld   $74
              6020 00ad  ld   $ad         ;05b0 PEEK
              6021 00b8  ld   $b8         ;05b1 SUBW
              6022 0087  ld   $87         ;05b1 'DX0'
              6023 0082  ld   $82         ;05b3 ANDI
              6024 00ff  ld   $ff
              6025 008c  ld   $8c         ;05b5 XORI
              6026 0080  ld   $80
              6027 00e6  ld   $e6         ;05b7 SUBI
              6028 0080  ld   $80
              6029 002b  ld   $2b         ;05b9 STW
              602a 0087  ld   $87         ;05b9 'DX0'
              602b 0011  ld   $11         ;05bb LDWI
              602c 0011  ld   $11
              602d 0001  ld   $01
              602e 002b  ld   $2b         ;05be STW
              602f 005e  ld   $5e         ;05be 's'
              6030 001a  ld   $1a         ;05c0 LD
              6031 0009  ld   $09
              6032 0082  ld   $82         ;05c2 ANDI
              6033 0001  ld   $01
              6034 0035  ld   $35         ;05c4 BCC
              6035 003f  ld   $3f         ;05c5 EQ
              6036 00be  ld   $be
              6037 001a  ld   $1a         ;05c7 LD
              6038 0047  ld   $47         ;05c7 'HorizonX'+1
              6039 00f0  ld   $f0         ;05c9 POKE
              603a 005e  ld   $5e         ;05c9 's'
              603b 0011  ld   $11         ;05cb LDWI
              603c 0000  ld   $00
              603d 0050  ld   $50
              603e 002b  ld   $2b         ;05ce STW
              603f 0022  ld   $22
              6040 00b4  ld   $b4         ;05d0 SYS
              6041 00fb  ld   $fb
              6042 0021  ld   $21         ;05d2 LDW
              6043 0024  ld   $24
              6044 002b  ld   $2b         ;05d4 STW
              6045 005e  ld   $5e         ;05d4 's'
              6046 0021  ld   $21         ;05d6 LDW
              6047 0028  ld   $28
              6048 002b  ld   $2b         ;05d8 STW
              6049 0060  ld   $60         ;05d8 'X'
              604a 0021  ld   $21         ;05da LDW
              604b 0052  ld   $52         ;05da 'tmp'
              604c 00b8  ld   $b8         ;05dc SUBW
              604d 0060  ld   $60         ;05dc 'X'
              604e 00f0  ld   $f0         ;05de POKE
              604f 005e  ld   $5e         ;05de 's'
              6050 00ff  ld   $ff         ;05e0 RET
              6051 002b  ld   $2b         ;05e1 STW
              6052 0093  ld   $93         ;05e1 'DrawRoad'
              6053 0093  ld   $93         ;05e3 INC
              6054 001b  ld   $1b         ;05e3 '_vLR'+1
              6055 00ff  ld   $ff         ;05e5 RET
              6056 0006  ld   $06         ;| RAM segment address (high byte first)
              6057 0000  ld   $00         ;|
              6058 00df  ld   $df         ;| Length (1..256)
              6059 00cd  ld   $cd         ;0600 DEF
              605a 00a7  ld   $a7
              605b 0075  ld   $75         ;0602 PUSH
              605c 0059  ld   $59         ;0603 LDI
              605d 0000  ld   $00
              605e 002b  ld   $2b         ;0605 STW
              605f 0062  ld   $62         ;0605 'Collision'
              6060 002b  ld   $2b         ;0607 STW
              6061 0076  ld   $76         ;0607 'Prev3'
              6062 002b  ld   $2b         ;0609 STW
              6063 007a  ld   $7a         ;0609 'Prev2'
              6064 002b  ld   $2b         ;060b STW
              6065 007c  ld   $7c         ;060b 'Prev1'
              6066 00cf  ld   $cf         ;060d CALL
              6067 0095  ld   $95         ;060d 'AdvanceCar'
              6068 0021  ld   $21         ;060f LDW
              6069 008d  ld   $8d         ;060f 'Distance'
              606a 0035  ld   $35         ;0611 BCC
              606b 0053  ld   $53         ;0612 GE
              606c 002e  ld   $2e
              606d 0021  ld   $21         ;0614 LDW
              606e 003e  ld   $3e         ;0614 'Time'
              606f 00b8  ld   $b8         ;0616 SUBW
              6070 0097  ld   $97         ;0616 'BestTime'
              6071 0035  ld   $35         ;0618 BCC
              6072 0053  ld   $53         ;0619 GE
              6073 001d  ld   $1d
              6074 0021  ld   $21         ;061b LDW
              6075 003e  ld   $3e         ;061b 'Time'
              6076 002b  ld   $2b         ;061d STW
              6077 0097  ld   $97         ;061d 'BestTime'
              6078 0059  ld   $59         ;061f LDI
              6079 000f  ld   $0f
              607a 00cf  ld   $cf         ;0621 CALL
              607b 0099  ld   $99         ;0621 'PrintBestTime'
              607c 0059  ld   $59         ;0623 LDI
              607d 0000  ld   $00
              607e 002b  ld   $2b         ;0625 STW
              607f 003e  ld   $3e         ;0625 'Time'
              6080 002b  ld   $2b         ;0627 STW
              6081 009b  ld   $9b         ;0627 'Random'
              6082 0011  ld   $11         ;0629 LDWI
              6083 0000  ld   $00
              6084 0074  ld   $74
              6085 002b  ld   $2b         ;062c STW
              6086 008d  ld   $8d         ;062c 'Distance'
              6087 002b  ld   $2b         ;062e STW
              6088 008b  ld   $8b         ;062e 'NextTurn'
              6089 00b8  ld   $b8         ;0630 SUBW
              608a 008b  ld   $8b         ;0630 'NextTurn'
              608b 0035  ld   $35         ;0632 BCC
              608c 0056  ld   $56         ;0633 LE
              608d 0073  ld   $73
              608e 0021  ld   $21         ;0635 LDW
              608f 009b  ld   $9b         ;0635 'Random'
              6090 0099  ld   $99         ;0637 ADDW
              6091 008b  ld   $8b         ;0637 'NextTurn'
              6092 008c  ld   $8c         ;0639 XORI
              6093 006d  ld   $6d
              6094 002b  ld   $2b         ;063b STW
              6095 009b  ld   $9b         ;063b 'Random'
              6096 0082  ld   $82         ;063d ANDI
              6097 001f  ld   $1f
              6098 00e3  ld   $e3         ;063f ADDI
              6099 0028  ld   $28
              609a 0099  ld   $99         ;0641 ADDW
              609b 008b  ld   $8b         ;0641 'NextTurn'
              609c 002b  ld   $2b         ;0643 STW
              609d 008b  ld   $8b         ;0643 'NextTurn'
              609e 001a  ld   $1a         ;0645 LD
              609f 009c  ld   $9c         ;0645 'Random'+1
              60a0 0082  ld   $82         ;0647 ANDI
              60a1 0003  ld   $03
              60a2 00e3  ld   $e3         ;0649 ADDI
              60a3 0001  ld   $01
              60a4 002b  ld   $2b         ;064b STW
              60a5 0030  ld   $30         ;064b 'i'
              60a6 0099  ld   $99         ;064d ADDW
              60a7 0030  ld   $30         ;064d 'i'
              60a8 0099  ld   $99         ;064f ADDW
              60a9 0030  ld   $30         ;064f 'i'
              60aa 00e9  ld   $e9         ;0651 LSLW
              60ab 002b  ld   $2b         ;0652 STW
              60ac 0030  ld   $30         ;0652 'i'
              60ad 0021  ld   $21         ;0654 LDW
              60ae 0091  ld   $91         ;0654 'NextDDX'
              60af 002b  ld   $2b         ;0656 STW
              60b0 008f  ld   $8f         ;0656 'DDX'
              60b1 0035  ld   $35         ;0658 BCC
              60b2 0053  ld   $53         ;0659 GE
              60b3 005d  ld   $5d
              60b4 0099  ld   $99         ;065b ADDW
              60b5 0030  ld   $30         ;065b 'i'
              60b6 0090  ld   $90         ;065d BRA
              60b7 0071  ld   $71
              60b8 0035  ld   $35         ;065f BCC
              60b9 0056  ld   $56         ;0660 LE
              60ba 0064  ld   $64
              60bb 00b8  ld   $b8         ;0662 SUBW
              60bc 0030  ld   $30         ;0662 'i'
              60bd 0090  ld   $90         ;0664 BRA
              60be 0071  ld   $71
              60bf 0021  ld   $21         ;0666 LDW
              60c0 009b  ld   $9b         ;0666 'Random'
              60c1 0035  ld   $35         ;0668 BCC
              60c2 0050  ld   $50         ;0669 LT
              60c3 006d  ld   $6d
              60c4 0021  ld   $21         ;066b LDW
              60c5 0030  ld   $30         ;066b 'i'
              60c6 0090  ld   $90         ;066d BRA
              60c7 0071  ld   $71
              60c8 0059  ld   $59         ;066f LDI
              60c9 0000  ld   $00
              60ca 00b8  ld   $b8         ;0671 SUBW
              60cb 0030  ld   $30         ;0671 'i'
              60cc 002b  ld   $2b         ;0673 STW
              60cd 0091  ld   $91         ;0673 'NextDDX'
              60ce 00cf  ld   $cf         ;0675 CALL
              60cf 0093  ld   $93         ;0675 'DrawRoad'
              60d0 0021  ld   $21         ;0677 LDW
              60d1 008f  ld   $8f         ;0677 'DDX'
              60d2 00e9  ld   $e9         ;0679 LSLW
              60d3 00e9  ld   $e9         ;067a LSLW
              60d4 00e9  ld   $e9         ;067b LSLW
              60d5 002b  ld   $2b         ;067c STW
              60d6 0048  ld   $48         ;067c 'HorizonDX'
              60d7 00e9  ld   $e9         ;067e LSLW
              60d8 002b  ld   $2b         ;067f STW
              60d9 0044  ld   $44         ;067f 'DriftX'
              60da 00cf  ld   $cf         ;0681 CALL
              60db 004c  ld   $4c         ;0681 'ControlRaceCar'
              60dc 00cf  ld   $cf         ;0683 CALL
              60dd 0066  ld   $66         ;0683 'PlayEngineSound'
              60de 00cf  ld   $cf         ;0685 CALL
              60df 009d  ld   $9d         ;0685 'DrawRaceCar'
              60e0 00cf  ld   $cf         ;0687 CALL
              60e1 009f  ld   $9f         ;0687 'DrawGrass'
              60e2 0011  ld   $11         ;0689 LDWI
              60e3 00b5  ld   $b5
              60e4 00b9  ld   $b9
              60e5 0099  ld   $99         ;068c ADDW
              60e6 003e  ld   $3e         ;068c 'Time'
              60e7 0035  ld   $35         ;068e BCC
              60e8 0056  ld   $56         ;068f LE
              60e9 0091  ld   $91
              60ea 002b  ld   $2b         ;0691 STW
              60eb 0062  ld   $62         ;0691 'Collision'
              60ec 0021  ld   $21         ;0693 LDW
              60ed 003e  ld   $3e         ;0693 'Time'
              60ee 002b  ld   $2b         ;0695 STW
              60ef 0081  ld   $81         ;0695 'Value'
              60f0 0011  ld   $11         ;0697 LDWI
              60f1 0001  ld   $01
              60f2 0008  ld   $08
              60f3 002b  ld   $2b         ;069a STW
              60f4 0038  ld   $38         ;069a 'Pos'
              60f5 0059  ld   $59         ;069c LDI
              60f6 003f  ld   $3f
              60f7 002b  ld   $2b         ;069e STW
              60f8 0036  ld   $36         ;069e 'Color'
              60f9 00cf  ld   $cf         ;06a0 CALL
              60fa 007e  ld   $7e         ;06a0 'PrintTime'
              60fb fe00  bra  ac          ;+-----------------------------------+
              60fc fcfd  bra  $60fd       ;|                                   |
              60fd 1418  ld   $18,y       ;| Trampoline for page $6000 lookups |
              60fe e006  jmp  y,$06       ;|                                   |
              60ff c218  st   [$18]       ;+-----------------------------------+
              6100 0021  ld   $21         ;06a2 LDW
              6101 0062  ld   $62         ;06a2 'Collision'
              6102 0035  ld   $35         ;06a4 BCC
              6103 003f  ld   $3f         ;06a5 EQ
              6104 000b  ld   $0b
              6105 0063  ld   $63         ;06a7 POP
              6106 00ff  ld   $ff         ;06a8 RET
              6107 002b  ld   $2b         ;06a9 STW
              6108 00a1  ld   $a1         ;06a9 'PlayGame'
              6109 00cd  ld   $cd         ;06ab DEF
              610a 00b7  ld   $b7
              610b 0002  ld   $02         ;06ad 2
              610c 0040  ld   $40         ;06ae 64
              610d 0040  ld   $40         ;06af 64
              610e 0040  ld   $40         ;06b0 64
              610f 0028  ld   $28         ;06b1 40
              6110 003c  ld   $3c         ;06b2 60
              6111 003c  ld   $3c         ;06b3 60
              6112 0028  ld   $28         ;06b4 40
              6113 0040  ld   $40         ;06b5 64
              6114 0040  ld   $40         ;06b6 64
              6115 0040  ld   $40         ;06b7 64
              6116 0000  ld   $00         ;06b8 0
              6117 002b  ld   $2b         ;06b9 STW
              6118 00a3  ld   $a3         ;06b9 'Car0'
              6119 00cd  ld   $cd         ;06bb DEF
              611a 00c5  ld   $c5
              611b 0003  ld   $03         ;06bd 3
              611c 0028  ld   $28         ;06be 40
              611d 0014  ld   $14         ;06bf 20
              611e 0014  ld   $14         ;06c0 20
              611f 003f  ld   $3f         ;06c1 63
              6120 003f  ld   $3f         ;06c2 63
              6121 0014  ld   $14         ;06c3 20
              6122 0014  ld   $14         ;06c4 20
              6123 0028  ld   $28         ;06c5 40
              6124 0000  ld   $00         ;06c6 0
              6125 002b  ld   $2b         ;06c7 STW
              6126 00a5  ld   $a5         ;06c7 'Car1'
              6127 00cd  ld   $cd         ;06c9 DEF
              6128 00d5  ld   $d5
              6129 0002  ld   $02         ;06cb 2
              612a 0028  ld   $28         ;06cc 40
              612b 0014  ld   $14         ;06cd 20
              612c 0014  ld   $14         ;06ce 20
              612d 0014  ld   $14         ;06cf 20
              612e 0028  ld   $28         ;06d0 40
              612f 0028  ld   $28         ;06d1 40
              6130 0014  ld   $14         ;06d2 20
              6131 0014  ld   $14         ;06d3 20
              6132 0014  ld   $14         ;06d4 20
              6133 0028  ld   $28         ;06d5 40
              6134 0000  ld   $00         ;06d6 0
              6135 002b  ld   $2b         ;06d7 STW
              6136 00a7  ld   $a7         ;06d7 'Car2'
              6137 0011  ld   $11         ;06d9 LDWI
              6138 00a0  ld   $a0
              6139 0008  ld   $08
              613a 002b  ld   $2b         ;06dc STW
              613b 001a  ld   $1a
              613c 00ff  ld   $ff         ;06de RET
              613d 0008  ld   $08         ;| RAM segment address (high byte first)
              613e 00a0  ld   $a0         ;|
              613f 0052  ld   $52         ;| Length (1..256)
              6140 00cd  ld   $cd         ;08a0 DEF
              6141 00b0  ld   $b0
              6142 0000  ld   $00         ;08a2 0
              6143 0040  ld   $40         ;08a3 64
              6144 0040  ld   $40         ;08a4 64
              6145 0040  ld   $40         ;08a5 64
              6146 0040  ld   $40         ;08a6 64
              6147 0028  ld   $28         ;08a7 40
              6148 0014  ld   $14         ;08a8 20
              6149 0014  ld   $14         ;08a9 20
              614a 0014  ld   $14         ;08aa 20
              614b 0014  ld   $14         ;08ab 20
              614c 0028  ld   $28         ;08ac 40
              614d 0040  ld   $40         ;08ad 64
              614e 0040  ld   $40         ;08ae 64
              614f 0040  ld   $40         ;08af 64
              6150 0040  ld   $40         ;08b0 64
              6151 0000  ld   $00         ;08b1 0
              6152 002b  ld   $2b         ;08b2 STW
              6153 00a9  ld   $a9         ;08b2 'Car3'
              6154 00cd  ld   $cd         ;08b4 DEF
              6155 00c4  ld   $c4
              6156 0000  ld   $00         ;08b6 0
              6157 0040  ld   $40         ;08b7 64
              6158 0040  ld   $40         ;08b8 64
              6159 0040  ld   $40         ;08b9 64
              615a 0040  ld   $40         ;08ba 64
              615b 0015  ld   $15         ;08bb 21
              615c 0015  ld   $15         ;08bc 21
              615d 0015  ld   $15         ;08bd 21
              615e 0015  ld   $15         ;08be 21
              615f 0015  ld   $15         ;08bf 21
              6160 0015  ld   $15         ;08c0 21
              6161 0040  ld   $40         ;08c1 64
              6162 0040  ld   $40         ;08c2 64
              6163 0040  ld   $40         ;08c3 64
              6164 0040  ld   $40         ;08c4 64
              6165 0000  ld   $00         ;08c5 0
              6166 002b  ld   $2b         ;08c6 STW
              6167 00ab  ld   $ab         ;08c6 'Car4'
              6168 00cd  ld   $cd         ;08c8 DEF
              6169 00eb  ld   $eb
              616a 0011  ld   $11         ;08ca LDWI
              616b 002e  ld   $2e
              616c 0001  ld   $01
              616d 002b  ld   $2b         ;08cd STW
              616e 0024  ld   $24
              616f 0059  ld   $59         ;08cf LDI
              6170 0020  ld   $20
              6171 005e  ld   $5e         ;08d1 ST
              6172 0026  ld   $26
              6173 0011  ld   $11         ;08d3 LDWI
              6174 0000  ld   $00
              6175 000a  ld   $0a
              6176 002b  ld   $2b         ;08d6 STW
              6177 005a  ld   $5a         ;08d6 'q'
              6178 0011  ld   $11         ;08d8 LDWI
              6179 0019  ld   $19
              617a 0050  ld   $50
              617b 002b  ld   $2b         ;08db STW
              617c 0022  ld   $22
              617d 0021  ld   $21         ;08dd LDW
              617e 005a  ld   $5a         ;08dd 'q'
              617f 007f  ld   $7f         ;08df LUP
              6180 0008  ld   $08
              6181 0099  ld   $99         ;08e1 ADDW
              6182 008d  ld   $8d         ;08e1 'Distance'
              6183 005e  ld   $5e         ;08e3 ST
              6184 0027  ld   $27
              6185 00b4  ld   $b4         ;08e5 SYS
              6186 00fb  ld   $fb
              6187 0093  ld   $93         ;08e7 INC
              6188 005a  ld   $5a         ;08e7 'q'
              6189 0035  ld   $35         ;08e9 BCC
              618a 0072  ld   $72         ;08ea NE
              618b 00db  ld   $db
              618c 00ff  ld   $ff         ;08ec RET
              618d 002b  ld   $2b         ;08ed STW
              618e 009f  ld   $9f         ;08ed 'DrawGrass'
              618f 0093  ld   $93         ;08ef INC
              6190 001b  ld   $1b         ;08ef '_vLR'+1
              6191 00ff  ld   $ff         ;08f1 RET
              6192 0009  ld   $09         ;| RAM segment address (high byte first)
              6193 00a0  ld   $a0         ;|
              6194 0038  ld   $38         ;| Length (1..256)
              6195 00cd  ld   $cd         ;09a0 DEF
              6196 00b8  ld   $b8
              6197 0011  ld   $11         ;09a2 LDWI
              6198 00f7  ld   $f7
              6199 000b  ld   $0b
              619a 002b  ld   $2b         ;09a5 STW
              619b 00ad  ld   $ad         ;09a5 'Indicator'
              619c 0011  ld   $11         ;09a7 LDWI
              619d 006b  ld   $6b
              619e 000c  ld   $0c
              619f 002b  ld   $2b         ;09aa STW
              61a0 00af  ld   $af         ;09aa 'Tracking'
              61a1 0059  ld   $59         ;09ac LDI
              61a2 0000  ld   $00
              61a3 00f0  ld   $f0         ;09ae POKE
              61a4 00af  ld   $af         ;09ae 'Tracking'
              61a5 0093  ld   $93         ;09b0 INC
              61a6 00af  ld   $af         ;09b0 'Tracking'
              61a7 001a  ld   $1a         ;09b2 LD
              61a8 00af  ld   $af         ;09b2 'Tracking'
              61a9 008c  ld   $8c         ;09b4 XORI
              61aa 0076  ld   $76
              61ab 0035  ld   $35         ;09b6 BCC
              61ac 0072  ld   $72         ;09b7 NE
              61ad 00aa  ld   $aa
              61ae 00ff  ld   $ff         ;09b9 RET
              61af 002b  ld   $2b         ;09ba STW
              61b0 00b1  ld   $b1         ;09ba 'SetupIndicator'
              61b1 00cd  ld   $cd         ;09bc DEF
              61b2 00d1  ld   $d1
              61b3 0059  ld   $59         ;09be LDI
              61b4 0000  ld   $00
              61b5 00f0  ld   $f0         ;09c0 POKE
              61b6 00af  ld   $af         ;09c0 'Tracking'
              61b7 001a  ld   $1a         ;09c2 LD
              61b8 008e  ld   $8e         ;09c2 'Distance'+1
              61b9 0099  ld   $99         ;09c4 ADDW
              61ba 00ad  ld   $ad         ;09c4 'Indicator'
              61bb 002b  ld   $2b         ;09c6 STW
              61bc 00af  ld   $af         ;09c6 'Tracking'
              61bd 0059  ld   $59         ;09c8 LDI
              61be 003c  ld   $3c
              61bf 00f0  ld   $f0         ;09ca POKE
              61c0 00af  ld   $af         ;09ca 'Tracking'
              61c1 001a  ld   $1a         ;09cc LD
              61c2 0041  ld   $41         ;09cc 'Speed'+1
              61c3 0099  ld   $99         ;09ce ADDW
              61c4 008d  ld   $8d         ;09ce 'Distance'
              61c5 002b  ld   $2b         ;09d0 STW
              61c6 008d  ld   $8d         ;09d0 'Distance'
              61c7 00ff  ld   $ff         ;09d2 RET
              61c8 002b  ld   $2b         ;09d3 STW
              61c9 0095  ld   $95         ;09d3 'AdvanceCar'
              61ca 0093  ld   $93         ;09d5 INC
              61cb 001b  ld   $1b         ;09d5 '_vLR'+1
              61cc 00ff  ld   $ff         ;09d7 RET
              61cd 000a  ld   $0a         ;| RAM segment address (high byte first)
              61ce 00a0  ld   $a0         ;|
              61cf 0041  ld   $41         ;| Length (1..256)
              61d0 00cd  ld   $cd         ;0aa0 DEF
              61d1 00da  ld   $da
              61d2 0075  ld   $75         ;0aa2 PUSH
              61d3 0011  ld   $11         ;0aa3 LDWI
              61d4 00d9  ld   $d9
              61d5 0001  ld   $01
              61d6 00ad  ld   $ad         ;0aa6 PEEK
              61d7 008c  ld   $8c         ;0aa7 XORI
              61d8 00ff  ld   $ff
              61d9 002b  ld   $2b         ;0aa9 STW
              61da 0060  ld   $60         ;0aa9 'X'
              61db 001a  ld   $1a         ;0aab LD
              61dc 0043  ld   $43         ;0aab 'CarX'+1
              61dd 0099  ld   $99         ;0aad ADDW
              61de 0060  ld   $60         ;0aad 'X'
              61df 002b  ld   $2b         ;0aaf STW
              61e0 0060  ld   $60         ;0aaf 'X'
              61e1 0011  ld   $11         ;0ab1 LDWI
              61e2 00d8  ld   $d8
              61e3 0001  ld   $01
              61e4 002b  ld   $2b         ;0ab4 STW
              61e5 0056  ld   $56         ;0ab4 'Video'
              61e6 0021  ld   $21         ;0ab6 LDW
              61e7 00a3  ld   $a3         ;0ab6 'Car0'
              61e8 002b  ld   $2b         ;0ab8 STW
              61e9 005c  ld   $5c         ;0ab8 'Sprite'
              61ea 00cf  ld   $cf         ;0aba CALL
              61eb 0064  ld   $64         ;0aba 'DrawPixels'
              61ec 0021  ld   $21         ;0abc LDW
              61ed 00a5  ld   $a5         ;0abc 'Car1'
              61ee 002b  ld   $2b         ;0abe STW
              61ef 005c  ld   $5c         ;0abe 'Sprite'
              61f0 00cf  ld   $cf         ;0ac0 CALL
              61f1 0064  ld   $64         ;0ac0 'DrawPixels'
              61f2 0021  ld   $21         ;0ac2 LDW
              61f3 0060  ld   $60         ;0ac2 'X'
              61f4 00b8  ld   $b8         ;0ac4 SUBW
              61f5 004a  ld   $4a         ;0ac4 'Steer'
              61f6 002b  ld   $2b         ;0ac6 STW
              61f7 0060  ld   $60         ;0ac6 'X'
              61f8 0021  ld   $21         ;0ac8 LDW
              61f9 00a7  ld   $a7         ;0ac8 'Car2'
              61fa 002b  ld   $2b         ;0aca STW
              61fb fe00  bra  ac          ;+-----------------------------------+
              61fc fcfd  bra  $61fd       ;|                                   |
              61fd 1418  ld   $18,y       ;| Trampoline for page $6100 lookups |
              61fe e006  jmp  y,$06       ;|                                   |
              61ff c218  st   [$18]       ;+-----------------------------------+
              6200 005c  ld   $5c         ;0aca 'Sprite'
              6201 00cf  ld   $cf         ;0acc CALL
              6202 0064  ld   $64         ;0acc 'DrawPixels'
              6203 0021  ld   $21         ;0ace LDW
              6204 00a9  ld   $a9         ;0ace 'Car3'
              6205 002b  ld   $2b         ;0ad0 STW
              6206 005c  ld   $5c         ;0ad0 'Sprite'
              6207 00cf  ld   $cf         ;0ad2 CALL
              6208 0064  ld   $64         ;0ad2 'DrawPixels'
              6209 0021  ld   $21         ;0ad4 LDW
              620a 00ab  ld   $ab         ;0ad4 'Car4'
              620b 002b  ld   $2b         ;0ad6 STW
              620c 005c  ld   $5c         ;0ad6 'Sprite'
              620d 00cf  ld   $cf         ;0ad8 CALL
              620e 0064  ld   $64         ;0ad8 'DrawPixels'
              620f 0063  ld   $63         ;0ada POP
              6210 00ff  ld   $ff         ;0adb RET
              6211 002b  ld   $2b         ;0adc STW
              6212 009d  ld   $9d         ;0adc 'DrawRaceCar'
              6213 0093  ld   $93         ;0ade INC
              6214 001b  ld   $1b         ;0ade '_vLR'+1
              6215 00ff  ld   $ff         ;0ae0 RET
              6216 000b  ld   $0b         ;| RAM segment address (high byte first)
              6217 00a0  ld   $a0         ;|
              6218 004c  ld   $4c         ;| Length (1..256)
              6219 00cd  ld   $cd         ;0ba0 DEF
              621a 00e5  ld   $e5
              621b 0075  ld   $75         ;0ba2 PUSH
              621c 0059  ld   $59         ;0ba3 LDI
              621d 0030  ld   $30
              621e 002b  ld   $2b         ;0ba5 STW
              621f 0034  ld   $34         ;0ba5 'BgColor'
              6220 0021  ld   $21         ;0ba7 LDW
              6221 0034  ld   $34         ;0ba7 'BgColor'
              6222 005e  ld   $5e         ;0ba9 ST
              6223 0024  ld   $24
              6224 005e  ld   $5e         ;0bab ST
              6225 0025  ld   $25
              6226 0011  ld   $11         ;0bad LDWI
              6227 0000  ld   $00
              6228 0008  ld   $08
              6229 002b  ld   $2b         ;0bb0 STW
              622a 0028  ld   $28
              622b 0011  ld   $11         ;0bb2 LDWI
              622c 00e1  ld   $e1
              622d 0004  ld   $04
              622e 002b  ld   $2b         ;0bb5 STW
              622f 0022  ld   $22
              6230 00b4  ld   $b4         ;0bb7 SYS
              6231 00cc  ld   $cc
              6232 0093  ld   $93         ;0bb9 INC
              6233 0028  ld   $28
              6234 001a  ld   $1a         ;0bbb LD
              6235 0028  ld   $28
              6236 008c  ld   $8c         ;0bbd XORI
              6237 00a0  ld   $a0
              6238 0035  ld   $35         ;0bbf BCC
              6239 0072  ld   $72         ;0bc0 NE
              623a 00b5  ld   $b5
              623b 0059  ld   $59         ;0bc2 LDI
              623c 003f  ld   $3f
              623d 002b  ld   $2b         ;0bc4 STW
              623e 0036  ld   $36         ;0bc4 'Color'
              623f 0011  ld   $11         ;0bc6 LDWI
              6240 0007  ld   $07
              6241 0008  ld   $08
              6242 002b  ld   $2b         ;0bc9 STW
              6243 0038  ld   $38         ;0bc9 'Pos'
              6244 0059  ld   $59         ;0bcb LDI
              6245 003a  ld   $3a
              6246 00cf  ld   $cf         ;0bcd CALL
              6247 003a  ld   $3a         ;0bcd 'QPrintChar'
              6248 00e3  ld   $e3         ;0bcf ADDI
              6249 0012  ld   $12
              624a 002b  ld   $2b         ;0bd1 STW
              624b 0038  ld   $38         ;0bd1 'Pos'
              624c 0059  ld   $59         ;0bd3 LDI
              624d 002e  ld   $2e
              624e 00cf  ld   $cf         ;0bd5 CALL
              624f 003a  ld   $3a         ;0bd5 'QPrintChar'
              6250 00e3  ld   $e3         ;0bd7 ADDI
              6251 001f  ld   $1f
              6252 002b  ld   $2b         ;0bd9 STW
              6253 0038  ld   $38         ;0bd9 'Pos'
              6254 0021  ld   $21         ;0bdb LDW
              6255 004e  ld   $4e         ;0bdb 'GigatronText'
              6256 00cf  ld   $cf         ;0bdd CALL
              6257 0085  ld   $85         ;0bdd 'PrintText'
              6258 0059  ld   $59         ;0bdf LDI
              6259 003c  ld   $3c
              625a 002b  ld   $2b         ;0be1 STW
              625b 0050  ld   $50         ;0be1 'Delay'
              625c 00cf  ld   $cf         ;0be3 CALL
              625d 0054  ld   $54         ;0be3 'Wait'
              625e 0063  ld   $63         ;0be5 POP
              625f 00ff  ld   $ff         ;0be6 RET
              6260 002b  ld   $2b         ;0be7 STW
              6261 00b3  ld   $b3         ;0be7 'Intro'
              6262 0093  ld   $93         ;0be9 INC
              6263 001b  ld   $1b         ;0be9 '_vLR'+1
              6264 00ff  ld   $ff         ;0beb RET
              6265 000c  ld   $0c         ;| RAM segment address (high byte first)
              6266 00a0  ld   $a0         ;|
              6267 0059  ld   $59         ;| Length (1..256)
              6268 00cd  ld   $cd         ;0ca0 DEF
              6269 00f2  ld   $f2
              626a 002b  ld   $2b         ;0ca2 STW
              626b 0036  ld   $36         ;0ca2 'Color'
              626c 0021  ld   $21         ;0ca4 LDW
              626d 0097  ld   $97         ;0ca4 'BestTime'
              626e 002b  ld   $2b         ;0ca6 STW
              626f 0081  ld   $81         ;0ca6 'Value'
              6270 00e3  ld   $e3         ;0ca8 ADDI
              6271 0001  ld   $01
              6272 0035  ld   $35         ;0caa BCC
              6273 0053  ld   $53         ;0cab GE
              6274 00ac  ld   $ac
              6275 00ff  ld   $ff         ;0cad RET
              6276 0075  ld   $75         ;0cae PUSH
              6277 0011  ld   $11         ;0caf LDWI
              6278 007c  ld   $7c
              6279 0008  ld   $08
              627a 002b  ld   $2b         ;0cb2 STW
              627b 0038  ld   $38         ;0cb2 'Pos'
              627c 0011  ld   $11         ;0cb4 LDWI
              627d 000f  ld   $0f
              627e 000e  ld   $0e
              627f 002b  ld   $2b         ;0cb7 STW
              6280 0072  ld   $72         ;0cb7 'Radix'
              6281 00cf  ld   $cf         ;0cb9 CALL
              6282 0074  ld   $74         ;0cb9 'ExtractDigit'
              6283 00cf  ld   $cf         ;0cbb CALL
              6284 003a  ld   $3a         ;0cbb 'QPrintChar'
              6285 00e3  ld   $e3         ;0cbd ADDI
              6286 0006  ld   $06
              6287 002b  ld   $2b         ;0cbf STW
              6288 0038  ld   $38         ;0cbf 'Pos'
              6289 0059  ld   $59         ;0cc1 LDI
              628a 003a  ld   $3a
              628b 00cf  ld   $cf         ;0cc3 CALL
              628c 003a  ld   $3a         ;0cc3 'QPrintChar'
              628d 00e3  ld   $e3         ;0cc5 ADDI
              628e 0006  ld   $06
              628f 002b  ld   $2b         ;0cc7 STW
              6290 0038  ld   $38         ;0cc7 'Pos'
              6291 0011  ld   $11         ;0cc9 LDWI
              6292 0058  ld   $58
              6293 0002  ld   $02
              6294 002b  ld   $2b         ;0ccc STW
              6295 0072  ld   $72         ;0ccc 'Radix'
              6296 00cf  ld   $cf         ;0cce CALL
              6297 0074  ld   $74         ;0cce 'ExtractDigit'
              6298 00cf  ld   $cf         ;0cd0 CALL
              6299 003a  ld   $3a         ;0cd0 'QPrintChar'
              629a 00e3  ld   $e3         ;0cd2 ADDI
              629b 0006  ld   $06
              629c 002b  ld   $2b         ;0cd4 STW
              629d 0038  ld   $38         ;0cd4 'Pos'
              629e 0059  ld   $59         ;0cd6 LDI
              629f 003c  ld   $3c
              62a0 002b  ld   $2b         ;0cd8 STW
              62a1 0072  ld   $72         ;0cd8 'Radix'
              62a2 00cf  ld   $cf         ;0cda CALL
              62a3 0074  ld   $74         ;0cda 'ExtractDigit'
              62a4 00cf  ld   $cf         ;0cdc CALL
              62a5 003a  ld   $3a         ;0cdc 'QPrintChar'
              62a6 00e3  ld   $e3         ;0cde ADDI
              62a7 0006  ld   $06
              62a8 002b  ld   $2b         ;0ce0 STW
              62a9 0038  ld   $38         ;0ce0 'Pos'
              62aa 0059  ld   $59         ;0ce2 LDI
              62ab 002e  ld   $2e
              62ac 00cf  ld   $cf         ;0ce4 CALL
              62ad 003a  ld   $3a         ;0ce4 'QPrintChar'
              62ae 00e3  ld   $e3         ;0ce6 ADDI
              62af 0006  ld   $06
              62b0 002b  ld   $2b         ;0ce8 STW
              62b1 0038  ld   $38         ;0ce8 'Pos'
              62b2 0059  ld   $59         ;0cea LDI
              62b3 0006  ld   $06
              62b4 002b  ld   $2b         ;0cec STW
              62b5 0072  ld   $72         ;0cec 'Radix'
              62b6 00cf  ld   $cf         ;0cee CALL
              62b7 0074  ld   $74         ;0cee 'ExtractDigit'
              62b8 00cf  ld   $cf         ;0cf0 CALL
              62b9 003a  ld   $3a         ;0cf0 'QPrintChar'
              62ba 0063  ld   $63         ;0cf2 POP
              62bb 00ff  ld   $ff         ;0cf3 RET
              62bc 002b  ld   $2b         ;0cf4 STW
              62bd 0099  ld   $99         ;0cf4 'PrintBestTime'
              62be 0093  ld   $93         ;0cf6 INC
              62bf 001b  ld   $1b         ;0cf6 '_vLR'+1
              62c0 00ff  ld   $ff         ;0cf8 RET
              62c1 000d  ld   $0d         ;| RAM segment address (high byte first)
              62c2 00a0  ld   $a0         ;|
              62c3 0056  ld   $56         ;| Length (1..256)
              62c4 00cd  ld   $cd         ;0da0 DEF
              62c5 00ef  ld   $ef
              62c6 0075  ld   $75         ;0da2 PUSH
              62c7 0011  ld   $11         ;0da3 LDWI
              62c8 0035  ld   $35
              62c9 0014  ld   $14
              62ca 002b  ld   $2b         ;0da6 STW
              62cb 0038  ld   $38         ;0da6 'Pos'
              62cc 00cd  ld   $cd         ;0da8 DEF
              62cd 00b2  ld   $b2
              62ce 0047  ld   $47         ;0daa 'G'
              62cf 0041  ld   $41         ;0dab 'A'
              62d0 004d  ld   $4d         ;0dac 'M'
              62d1 0045  ld   $45         ;0dad 'E'
              62d2 0020  ld   $20         ;0dae ' '
              62d3 004f  ld   $4f         ;0daf 'O'
              62d4 0056  ld   $56         ;0db0 'V'
              62d5 0045  ld   $45         ;0db1 'E'
              62d6 0052  ld   $52         ;0db2 'R'
              62d7 0000  ld   $00         ;0db3 0
              62d8 00cf  ld   $cf         ;0db4 CALL
              62d9 0085  ld   $85         ;0db4 'PrintText'
              62da 0011  ld   $11         ;0db6 LDWI
              62db 0011  ld   $11
              62dc 0001  ld   $01
              62dd 002b  ld   $2b         ;0db9 STW
              62de 005e  ld   $5e         ;0db9 's'
              62df 00e3  ld   $e3         ;0dbb ADDI
              62e0 0020  ld   $20
              62e1 002b  ld   $2b         ;0dbd STW
              62e2 00b5  ld   $b5         ;0dbd 't'
              62e3 0059  ld   $59         ;0dbf LDI
              62e4 0001  ld   $01
              62e5 002b  ld   $2b         ;0dc1 STW
              62e6 0050  ld   $50         ;0dc1 'Delay'
              62e7 0021  ld   $21         ;0dc3 LDW
              62e8 005e  ld   $5e         ;0dc3 's'
              62e9 00ad  ld   $ad         ;0dc5 PEEK
              62ea 0082  ld   $82         ;0dc6 ANDI
              62eb 0080  ld   $80
              62ec 0035  ld   $35         ;0dc8 BCC
              62ed 0072  ld   $72         ;0dc9 NE
              62ee 00cd  ld   $cd
              62ef 0059  ld   $59         ;0dcb LDI
              62f0 0001  ld   $01
              62f1 0090  ld   $90         ;0dcd BRA
              62f2 00d0  ld   $d0
              62f3 0011  ld   $11         ;0dcf LDWI
              62f4 00ff  ld   $ff
              62f5 00ff  ld   $ff
              62f6 002b  ld   $2b         ;0dd2 STW
              62f7 0030  ld   $30         ;0dd2 'i'
              62f8 00cf  ld   $cf         ;0dd4 CALL
              62f9 0054  ld   $54         ;0dd4 'Wait'
              62fa 0021  ld   $21         ;0dd6 LDW
              62fb fe00  bra  ac          ;+-----------------------------------+
              62fc fcfd  bra  $62fd       ;|                                   |
              62fd 1418  ld   $18,y       ;| Trampoline for page $6200 lookups |
              62fe e006  jmp  y,$06       ;|                                   |
              62ff c218  st   [$18]       ;+-----------------------------------+
              6300 00b5  ld   $b5         ;0dd6 't'
              6301 00ad  ld   $ad         ;0dd8 PEEK
              6302 00b8  ld   $b8         ;0dd9 SUBW
              6303 0030  ld   $30         ;0dd9 'i'
              6304 00f0  ld   $f0         ;0ddb POKE
              6305 00b5  ld   $b5         ;0ddb 't'
              6306 0021  ld   $21         ;0ddd LDW
              6307 005e  ld   $5e         ;0ddd 's'
              6308 00ad  ld   $ad         ;0ddf PEEK
              6309 0099  ld   $99         ;0de0 ADDW
              630a 0030  ld   $30         ;0de0 'i'
              630b 00f0  ld   $f0         ;0de2 POKE
              630c 005e  ld   $5e         ;0de2 's'
              630d 0082  ld   $82         ;0de4 ANDI
              630e 00ff  ld   $ff
              630f 0035  ld   $35         ;0de6 BCC
              6310 0072  ld   $72         ;0de7 NE
              6311 00d2  ld   $d2
              6312 0059  ld   $59         ;0de9 LDI
              6313 001e  ld   $1e
              6314 002b  ld   $2b         ;0deb STW
              6315 0050  ld   $50         ;0deb 'Delay'
              6316 00cf  ld   $cf         ;0ded CALL
              6317 0054  ld   $54         ;0ded 'Wait'
              6318 0063  ld   $63         ;0def POP
              6319 00ff  ld   $ff         ;0df0 RET
              631a 002b  ld   $2b         ;0df1 STW
              631b 00b7  ld   $b7         ;0df1 'GameOver'
              631c 0093  ld   $93         ;0df3 INC
              631d 001b  ld   $1b         ;0df3 '_vLR'+1
              631e 00ff  ld   $ff         ;0df5 RET
              631f 000e  ld   $0e         ;| RAM segment address (high byte first)
              6320 00a0  ld   $a0         ;|
              6321 005b  ld   $5b         ;| Length (1..256)
              6322 00cd  ld   $cd         ;0ea0 DEF
              6323 00f4  ld   $f4
              6324 0075  ld   $75         ;0ea2 PUSH
              6325 0011  ld   $11         ;0ea3 LDWI
              6326 003f  ld   $3f
              6327 0050  ld   $50
              6328 002b  ld   $2b         ;0ea6 STW
              6329 0058  ld   $58         ;0ea6 'p'
              632a 0011  ld   $11         ;0ea8 LDWI
              632b 0000  ld   $00
              632c 0010  ld   $10
              632d 002b  ld   $2b         ;0eab STW
              632e 005a  ld   $5a         ;0eab 'q'
              632f 00cd  ld   $cd         ;0ead DEF
              6330 00bf  ld   $bf
              6331 001a  ld   $1a         ;0eaf LD
              6332 0058  ld   $58         ;0eaf 'p'
              6333 008c  ld   $8c         ;0eb1 XORI
              6334 00fa  ld   $fa
              6335 0035  ld   $35         ;0eb3 BCC
              6336 003f  ld   $3f         ;0eb4 EQ
              6337 00b8  ld   $b8
              6338 0059  ld   $59         ;0eb6 LDI
              6339 0001  ld   $01
              633a 0090  ld   $90         ;0eb8 BRA
              633b 00ba  ld   $ba
              633c 0059  ld   $59         ;0eba LDI
              633d 0006  ld   $06
              633e 0099  ld   $99         ;0ebc ADDW
              633f 0058  ld   $58         ;0ebc 'p'
              6340 002b  ld   $2b         ;0ebe STW
              6341 0058  ld   $58         ;0ebe 'p'
              6342 00ff  ld   $ff         ;0ec0 RET
              6343 002b  ld   $2b         ;0ec1 STW
              6344 0052  ld   $52         ;0ec1 'tmp'
              6345 0021  ld   $21         ;0ec3 LDW
              6346 0058  ld   $58         ;0ec3 'p'
              6347 007f  ld   $7f         ;0ec5 LUP
              6348 0000  ld   $00
              6349 005e  ld   $5e         ;0ec7 ST
              634a 0024  ld   $24
              634b 00cf  ld   $cf         ;0ec9 CALL
              634c 0052  ld   $52         ;0ec9 'tmp'
              634d 007f  ld   $7f         ;0ecb LUP
              634e 0000  ld   $00
              634f 005e  ld   $5e         ;0ecd ST
              6350 0025  ld   $25
              6351 00cf  ld   $cf         ;0ecf CALL
              6352 0052  ld   $52         ;0ecf 'tmp'
              6353 007f  ld   $7f         ;0ed1 LUP
              6354 0000  ld   $00
              6355 005e  ld   $5e         ;0ed3 ST
              6356 0026  ld   $26
              6357 00cf  ld   $cf         ;0ed5 CALL
              6358 0052  ld   $52         ;0ed5 'tmp'
              6359 0011  ld   $11         ;0ed7 LDWI
              635a 0068  ld   $68
              635b 001a  ld   $1a
              635c 002b  ld   $2b         ;0eda STW
              635d 0022  ld   $22
              635e 00b4  ld   $b4         ;0edc SYS
              635f 00f3  ld   $f3
              6360 0021  ld   $21         ;0ede LDW
              6361 005a  ld   $5a         ;0ede 'q'
              6362 002b  ld   $2b         ;0ee0 STW
              6363 0028  ld   $28
              6364 00e3  ld   $e3         ;0ee2 ADDI
              6365 0004  ld   $04
              6366 002b  ld   $2b         ;0ee4 STW
              6367 005a  ld   $5a         ;0ee4 'q'
              6368 0011  ld   $11         ;0ee6 LDWI
              6369 00d4  ld   $d4
              636a 0004  ld   $04
              636b 002b  ld   $2b         ;0ee9 STW
              636c 0022  ld   $22
              636d 00b4  ld   $b4         ;0eeb SYS
              636e 0000  ld   $00
              636f 001a  ld   $1a         ;0eed LD
              6370 005b  ld   $5b         ;0eed 'q'+1
              6371 008c  ld   $8c         ;0eef XORI
              6372 0020  ld   $20
              6373 0035  ld   $35         ;0ef1 BCC
              6374 0072  ld   $72         ;0ef2 NE
              6375 00c1  ld   $c1
              6376 0063  ld   $63         ;0ef4 POP
              6377 00ff  ld   $ff         ;0ef5 RET
              6378 002b  ld   $2b         ;0ef6 STW
              6379 00b9  ld   $b9         ;0ef6 'SetupHorizon'
              637a 0093  ld   $93         ;0ef8 INC
              637b 001b  ld   $1b         ;0ef8 '_vLR'+1
              637c 00ff  ld   $ff         ;0efa RET
              637d 000f  ld   $0f         ;| RAM segment address (high byte first)
              637e 00a0  ld   $a0         ;|
              637f 0054  ld   $54         ;| Length (1..256)
              6380 00cf  ld   $cf         ;0fa0 CALL
              6381 00b3  ld   $b3         ;0fa0 'Intro'
              6382 0011  ld   $11         ;0fa2 LDWI
              6383 0000  ld   $00
              6384 0074  ld   $74
              6385 002b  ld   $2b         ;0fa5 STW
              6386 008d  ld   $8d         ;0fa5 'Distance'
              6387 002b  ld   $2b         ;0fa7 STW
              6388 008b  ld   $8b         ;0fa7 'NextTurn'
              6389 0011  ld   $11         ;0fa9 LDWI
              638a 00ff  ld   $ff
              638b 007f  ld   $7f
              638c 002b  ld   $2b         ;0fac STW
              638d 0097  ld   $97         ;0fac 'BestTime'
              638e 0059  ld   $59         ;0fae LDI
              638f 0000  ld   $00
              6390 002b  ld   $2b         ;0fb0 STW
              6391 003e  ld   $3e         ;0fb0 'Time'
              6392 002b  ld   $2b         ;0fb2 STW
              6393 0081  ld   $81         ;0fb2 'Value'
              6394 002b  ld   $2b         ;0fb4 STW
              6395 0046  ld   $46         ;0fb4 'HorizonX'
              6396 002b  ld   $2b         ;0fb6 STW
              6397 0044  ld   $44         ;0fb6 'DriftX'
              6398 002b  ld   $2b         ;0fb8 STW
              6399 0040  ld   $40         ;0fb8 'Speed'
              639a 002b  ld   $2b         ;0fba STW
              639b 009b  ld   $9b         ;0fba 'Random'
              639c 002b  ld   $2b         ;0fbc STW
              639d 0087  ld   $87         ;0fbc 'DX0'
              639e 002b  ld   $2b         ;0fbe STW
              639f 008f  ld   $8f         ;0fbe 'DDX'
              63a0 002b  ld   $2b         ;0fc0 STW
              63a1 0091  ld   $91         ;0fc0 'NextDDX'
              63a2 00cf  ld   $cf         ;0fc2 CALL
              63a3 0093  ld   $93         ;0fc2 'DrawRoad'
              63a4 00cf  ld   $cf         ;0fc4 CALL
              63a5 009f  ld   $9f         ;0fc4 'DrawGrass'
              63a6 00cf  ld   $cf         ;0fc6 CALL
              63a7 00b9  ld   $b9         ;0fc6 'SetupHorizon'
              63a8 0011  ld   $11         ;0fc8 LDWI
              63a9 0035  ld   $35
              63aa 0014  ld   $14
              63ab 002b  ld   $2b         ;0fcb STW
              63ac 0038  ld   $38         ;0fcb 'Pos'
              63ad 00cd  ld   $cd         ;0fcd DEF
              63ae 00d7  ld   $d7
              63af 0047  ld   $47         ;0fcf 'G'
              63b0 0045  ld   $45         ;0fd0 'E'
              63b1 0054  ld   $54         ;0fd1 'T'
              63b2 0020  ld   $20         ;0fd2 ' '
              63b3 0052  ld   $52         ;0fd3 'R'
              63b4 0045  ld   $45         ;0fd4 'E'
              63b5 0041  ld   $41         ;0fd5 'A'
              63b6 0044  ld   $44         ;0fd6 'D'
              63b7 0059  ld   $59         ;0fd7 'Y'
              63b8 0000  ld   $00         ;0fd8 0
              63b9 00cf  ld   $cf         ;0fd9 CALL
              63ba 0085  ld   $85         ;0fd9 'PrintText'
              63bb 00cf  ld   $cf         ;0fdb CALL
              63bc 0070  ld   $70         ;0fdb 'SetupRoad'
              63bd 00cf  ld   $cf         ;0fdd CALL
              63be 00b9  ld   $b9         ;0fdd 'SetupHorizon'
              63bf 00cf  ld   $cf         ;0fdf CALL
              63c0 00b1  ld   $b1         ;0fdf 'SetupIndicator'
              63c1 0011  ld   $11         ;0fe1 LDWI
              63c2 0000  ld   $00
              63c3 0079  ld   $79
              63c4 002b  ld   $2b         ;0fe4 STW
              63c5 0042  ld   $42         ;0fe4 'CarX'
              63c6 001a  ld   $1a         ;0fe6 LD
              63c7 000e  ld   $0e
              63c8 002b  ld   $2b         ;0fe8 STW
              63c9 003c  ld   $3c         ;0fe8 'LastFrame'
              63ca 00cf  ld   $cf         ;0fea CALL
              63cb 00a1  ld   $a1         ;0fea 'PlayGame'
              63cc 00cf  ld   $cf         ;0fec CALL
              63cd 00b7  ld   $b7         ;0fec 'GameOver'
              63ce 0059  ld   $59         ;0fee LDI
              63cf 003f  ld   $3f
              63d0 00cf  ld   $cf         ;0ff0 CALL
              63d1 0099  ld   $99         ;0ff0 'PrintBestTime'
              63d2 0090  ld   $90         ;0ff2 BRA
              63d3 00a0  ld   $a0
              63d4 0000  ld   $00         ;End of Apps/Racer/Racer_v2.gcl, size 1868
                                          ;+-----------------------------------+
                                          ;| gbas/menu/Credits_vX0.gt1         |
                                          ;+-----------------------------------+
              63d5 dc52  st   $52,[y,x++] ;'R'
              63d6 dc61  st   $61,[y,x++] ;'a'
              63d7 dc63  st   $63,[y,x++] ;'c'
              63d8 dc65  st   $65,[y,x++] ;'e'
              63d9 dc72  st   $72,[y,x++] ;'r'
              63da dc00  st   $00,[y,x++] ;'\x00'
              63db dc00  st   $00,[y,x++] ;'\x00'
              63dc dc00  st   $00,[y,x++] ;'\x00'
              63dd 0089  ld   $89
              63de c218  st   [$18]
              63df 005c  ld   $5c
              63e0 14f3  ld   $f3,y
              63e1 e019  jmp  y,$19
              63e2 c219  st   [$19]
Credits:      63e3 0000  ld   $00
              63e4 007e  ld   $7e
              63e5 0002  ld   $02
              63e6 0001  ld   $01
              63e7 0001  ld   $01
              63e8 0002  ld   $02
              63e9 0000  ld   $00
              63ea 00f5  ld   $f5
              63eb 0059  ld   $59
              63ec 0080  ld   $80
              63ed 002b  ld   $2b
              63ee 0082  ld   $82
              63ef 0011  ld   $11
              63f0 00a3  ld   $a3
              63f1 007c  ld   $7c
              63f2 00cf  ld   $cf
              63f3 0018  ld   $18
              63f4 0011  ld   $11
              63f5 0020  ld   $20
              63f6 000f  ld   $0f
              63f7 002b  ld   $2b
              63f8 00a2  ld   $a2
              63f9 00c7  ld   $c7
              63fa 0003  ld   $03
              63fb fe00  bra  ac          ;+-----------------------------------+
              63fc fcfd  bra  $63fd       ;|                                   |
              63fd 1418  ld   $18,y       ;| Trampoline for page $6300 lookups |
              63fe e006  jmp  y,$06       ;|                                   |
              63ff c218  st   [$18]       ;+-----------------------------------+
              6400 0069  ld   $69
              6401 0021  ld   $21
              6402 004d  ld   $4d
              6403 0002  ld   $02
              6404 00aa  ld   $aa
              6405 004d  ld   $4d
              6406 0000  ld   $00
              6407 00d6  ld   $d6
              6408 004d  ld   $4d
              6409 0000  ld   $00
              640a 00a6  ld   $a6
              640b 0016  ld   $16
              640c 0000  ld   $00
              640d 002d  ld   $2d
              640e 004d  ld   $4d
              640f 0000  ld   $00
              6410 002e  ld   $2e
              6411 0085  ld   $85
              6412 00bd  ld   $bd
              6413 0079  ld   $79
              6414 004d  ld   $4d
              6415 0002  ld   $02
              6416 0082  ld   $82
              6417 0085  ld   $85
              6418 00a5  ld   $a5
              6419 007a  ld   $7a
              641a 00c7  ld   $c7
              641b 00fd  ld   $fd
              641c 0066  ld   $66
              641d 00aa  ld   $aa
              641e 004d  ld   $4d
              641f 0000  ld   $00
              6420 00a4  ld   $a4
              6421 00c7  ld   $c7
              6422 0010  ld   $10
              6423 0069  ld   $69
              6424 00aa  ld   $aa
              6425 00b1  ld   $b1
              6426 002f  ld   $2f
              6427 0082  ld   $82
              6428 00ff  ld   $ff
              6429 005e  ld   $5e
              642a 00a2  ld   $a2
              642b 00b1  ld   $b1
              642c 002f  ld   $2f
              642d 0082  ld   $82
              642e 00ff  ld   $ff
              642f 005e  ld   $5e
              6430 00a3  ld   $a3
              6431 0016  ld   $16
              6432 0000  ld   $00
              6433 00a4  ld   $a4
              6434 0016  ld   $16
              6435 0000  ld   $00
              6436 00a5  ld   $a5
              6437 0085  ld   $85
              6438 00dc  ld   $dc
              6439 007a  ld   $7a
              643a 0011  ld   $11
              643b 00d8  ld   $d8
              643c 007f  ld   $7f
              643d 0085  ld   $85
              643e 00d6  ld   $d6
              643f 0079  ld   $79
              6440 0011  ld   $11
              6441 00d4  ld   $d4
              6442 007f  ld   $7f
              6443 0085  ld   $85
              6444 00d6  ld   $d6
              6445 0079  ld   $79
              6446 0085  ld   $85
              6447 00a0  ld   $a0
              6448 007e  ld   $7e
              6449 0016  ld   $16
              644a 0000  ld   $00
              644b 00a4  ld   $a4
              644c 0016  ld   $16
              644d 0006  ld   $06
              644e 00a5  ld   $a5
              644f 0085  ld   $85
              6450 00dc  ld   $dc
              6451 007a  ld   $7a
              6452 0011  ld   $11
              6453 00d8  ld   $d8
              6454 007f  ld   $7f
              6455 0085  ld   $85
              6456 00d6  ld   $d6
              6457 0079  ld   $79
              6458 0011  ld   $11
              6459 00d0  ld   $d0
              645a 007f  ld   $7f
              645b 0085  ld   $85
              645c 00d6  ld   $d6
              645d 0079  ld   $79
              645e 0085  ld   $85
              645f 00a0  ld   $a0
              6460 007e  ld   $7e
              6461 0016  ld   $16
              6462 0000  ld   $00
              6463 00a4  ld   $a4
              6464 0016  ld   $16
              6465 000c  ld   $0c
              6466 00a5  ld   $a5
              6467 0085  ld   $85
              6468 00dc  ld   $dc
              6469 007a  ld   $7a
              646a 0011  ld   $11
              646b 00d8  ld   $d8
              646c 007f  ld   $7f
              646d 0085  ld   $85
              646e 00d6  ld   $d6
              646f 0079  ld   $79
              6470 0011  ld   $11
              6471 00cc  ld   $cc
              6472 007f  ld   $7f
              6473 0085  ld   $85
              6474 00d6  ld   $d6
              6475 0079  ld   $79
              6476 0085  ld   $85
              6477 00a0  ld   $a0
              6478 007e  ld   $7e
              6479 0016  ld   $16
              647a 0000  ld   $00
              647b 00a4  ld   $a4
              647c 0016  ld   $16
              647d 0012  ld   $12
              647e 00a5  ld   $a5
              647f 0085  ld   $85
              6480 00dc  ld   $dc
              6481 007a  ld   $7a
              6482 0011  ld   $11
              6483 00d8  ld   $d8
              6484 007f  ld   $7f
              6485 0085  ld   $85
              6486 00d6  ld   $d6
              6487 0079  ld   $79
              6488 0011  ld   $11
              6489 00c8  ld   $c8
              648a 007f  ld   $7f
              648b 0085  ld   $85
              648c 00d6  ld   $d6
              648d 0079  ld   $79
              648e 0085  ld   $85
              648f 00a0  ld   $a0
              6490 007e  ld   $7e
              6491 0016  ld   $16
              6492 0000  ld   $00
              6493 00a4  ld   $a4
              6494 0016  ld   $16
              6495 0018  ld   $18
              6496 00a5  ld   $a5
              6497 0085  ld   $85
              6498 00dc  ld   $dc
              6499 007a  ld   $7a
              649a 0011  ld   $11
              649b 00d8  ld   $d8
              649c 007f  ld   $7f
              649d 0085  ld   $85
              649e 00d6  ld   $d6
              649f 0079  ld   $79
              64a0 0011  ld   $11
              64a1 00c4  ld   $c4
              64a2 007f  ld   $7f
              64a3 0085  ld   $85
              64a4 00d6  ld   $d6
              64a5 0079  ld   $79
              64a6 0085  ld   $85
              64a7 00a0  ld   $a0
              64a8 007e  ld   $7e
              64a9 0016  ld   $16
              64aa 0000  ld   $00
              64ab 00a4  ld   $a4
              64ac 0016  ld   $16
              64ad 001e  ld   $1e
              64ae 00a5  ld   $a5
              64af 0085  ld   $85
              64b0 00dc  ld   $dc
              64b1 007a  ld   $7a
              64b2 0011  ld   $11
              64b3 00d8  ld   $d8
              64b4 007f  ld   $7f
              64b5 0085  ld   $85
              64b6 00d6  ld   $d6
              64b7 0079  ld   $79
              64b8 0011  ld   $11
              64b9 00c0  ld   $c0
              64ba 007f  ld   $7f
              64bb 0085  ld   $85
              64bc 00d6  ld   $d6
              64bd 0079  ld   $79
              64be 0085  ld   $85
              64bf 00a0  ld   $a0
              64c0 007e  ld   $7e
              64c1 0016  ld   $16
              64c2 0000  ld   $00
              64c3 00a4  ld   $a4
              64c4 0016  ld   $16
              64c5 0024  ld   $24
              64c6 00a5  ld   $a5
              64c7 0085  ld   $85
              64c8 00dc  ld   $dc
              64c9 007a  ld   $7a
              64ca 0011  ld   $11
              64cb 00d8  ld   $d8
              64cc 007f  ld   $7f
              64cd 0085  ld   $85
              64ce 00d6  ld   $d6
              64cf 0079  ld   $79
              64d0 0011  ld   $11
              64d1 00bc  ld   $bc
              64d2 007f  ld   $7f
              64d3 0085  ld   $85
              64d4 00d6  ld   $d6
              64d5 0079  ld   $79
              64d6 0085  ld   $85
              64d7 00a0  ld   $a0
              64d8 007e  ld   $7e
              64d9 0016  ld   $16
              64da 0000  ld   $00
              64db 00a4  ld   $a4
              64dc 0016  ld   $16
              64dd 002a  ld   $2a
              64de 00a5  ld   $a5
              64df 0085  ld   $85
              64e0 00dc  ld   $dc
              64e1 007a  ld   $7a
              64e2 0085  ld   $85
              64e3 0000  ld   $00
              64e4 0003  ld   $03
              64e5 0003  ld   $03
              64e6 0000  ld   $00
              64e7 00f9  ld   $f9
              64e8 0011  ld   $11
              64e9 00d8  ld   $d8
              64ea 007f  ld   $7f
              64eb 0085  ld   $85
              64ec 00d6  ld   $d6
              64ed 0079  ld   $79
              64ee 0011  ld   $11
              64ef 00b8  ld   $b8
              64f0 007f  ld   $7f
              64f1 0085  ld   $85
              64f2 00d6  ld   $d6
              64f3 0079  ld   $79
              64f4 0085  ld   $85
              64f5 00a0  ld   $a0
              64f6 007e  ld   $7e
              64f7 0016  ld   $16
              64f8 0000  ld   $00
              64f9 00a4  ld   $a4
              64fa 0016  ld   $16
              64fb fe00  bra  ac          ;+-----------------------------------+
              64fc fcfd  bra  $64fd       ;|                                   |
              64fd 1418  ld   $18,y       ;| Trampoline for page $6400 lookups |
              64fe e006  jmp  y,$06       ;|                                   |
              64ff c218  st   [$18]       ;+-----------------------------------+
              6500 0030  ld   $30
              6501 00a5  ld   $a5
              6502 0085  ld   $85
              6503 00dc  ld   $dc
              6504 007a  ld   $7a
              6505 0011  ld   $11
              6506 00d8  ld   $d8
              6507 007f  ld   $7f
              6508 0085  ld   $85
              6509 00d6  ld   $d6
              650a 0079  ld   $79
              650b 0011  ld   $11
              650c 00b4  ld   $b4
              650d 007f  ld   $7f
              650e 0085  ld   $85
              650f 00d6  ld   $d6
              6510 0079  ld   $79
              6511 0085  ld   $85
              6512 00a0  ld   $a0
              6513 007e  ld   $7e
              6514 0016  ld   $16
              6515 0000  ld   $00
              6516 00a4  ld   $a4
              6517 0016  ld   $16
              6518 0036  ld   $36
              6519 00a5  ld   $a5
              651a 0085  ld   $85
              651b 00dc  ld   $dc
              651c 007a  ld   $7a
              651d 0011  ld   $11
              651e 00d8  ld   $d8
              651f 007f  ld   $7f
              6520 0085  ld   $85
              6521 00d6  ld   $d6
              6522 0079  ld   $79
              6523 0011  ld   $11
              6524 00b0  ld   $b0
              6525 007f  ld   $7f
              6526 0085  ld   $85
              6527 00d6  ld   $d6
              6528 0079  ld   $79
              6529 0085  ld   $85
              652a 00a0  ld   $a0
              652b 007e  ld   $7e
              652c 0016  ld   $16
              652d 0000  ld   $00
              652e 00a4  ld   $a4
              652f 0016  ld   $16
              6530 003c  ld   $3c
              6531 00a5  ld   $a5
              6532 0085  ld   $85
              6533 00dc  ld   $dc
              6534 007a  ld   $7a
              6535 0011  ld   $11
              6536 00d8  ld   $d8
              6537 007f  ld   $7f
              6538 0085  ld   $85
              6539 00d6  ld   $d6
              653a 0079  ld   $79
              653b 0011  ld   $11
              653c 00ac  ld   $ac
              653d 007f  ld   $7f
              653e 0085  ld   $85
              653f 00d6  ld   $d6
              6540 0079  ld   $79
              6541 0085  ld   $85
              6542 00a0  ld   $a0
              6543 007e  ld   $7e
              6544 0016  ld   $16
              6545 0000  ld   $00
              6546 00a4  ld   $a4
              6547 0016  ld   $16
              6548 0042  ld   $42
              6549 00a5  ld   $a5
              654a 0085  ld   $85
              654b 00dc  ld   $dc
              654c 007a  ld   $7a
              654d 0011  ld   $11
              654e 00d8  ld   $d8
              654f 007f  ld   $7f
              6550 0085  ld   $85
              6551 00d6  ld   $d6
              6552 0079  ld   $79
              6553 0011  ld   $11
              6554 00a8  ld   $a8
              6555 007f  ld   $7f
              6556 0085  ld   $85
              6557 00d6  ld   $d6
              6558 0079  ld   $79
              6559 0085  ld   $85
              655a 00a0  ld   $a0
              655b 007e  ld   $7e
              655c 0016  ld   $16
              655d 0000  ld   $00
              655e 00a4  ld   $a4
              655f 0016  ld   $16
              6560 0048  ld   $48
              6561 00a5  ld   $a5
              6562 0085  ld   $85
              6563 00dc  ld   $dc
              6564 007a  ld   $7a
              6565 0011  ld   $11
              6566 00d8  ld   $d8
              6567 007f  ld   $7f
              6568 0085  ld   $85
              6569 00d6  ld   $d6
              656a 0079  ld   $79
              656b 0011  ld   $11
              656c 00a4  ld   $a4
              656d 007f  ld   $7f
              656e 0085  ld   $85
              656f 00d6  ld   $d6
              6570 0079  ld   $79
              6571 0085  ld   $85
              6572 00a0  ld   $a0
              6573 007e  ld   $7e
              6574 0016  ld   $16
              6575 0000  ld   $00
              6576 00a4  ld   $a4
              6577 0016  ld   $16
              6578 004e  ld   $4e
              6579 00a5  ld   $a5
              657a 0085  ld   $85
              657b 00dc  ld   $dc
              657c 007a  ld   $7a
              657d 0011  ld   $11
              657e 00d8  ld   $d8
              657f 007f  ld   $7f
              6580 0085  ld   $85
              6581 00d6  ld   $d6
              6582 0079  ld   $79
              6583 0011  ld   $11
              6584 00a0  ld   $a0
              6585 007f  ld   $7f
              6586 0085  ld   $85
              6587 00d6  ld   $d6
              6588 0079  ld   $79
              6589 0085  ld   $85
              658a 00a0  ld   $a0
              658b 007e  ld   $7e
              658c 0016  ld   $16
              658d 0000  ld   $00
              658e 00a4  ld   $a4
              658f 0016  ld   $16
              6590 0054  ld   $54
              6591 00a5  ld   $a5
              6592 0085  ld   $85
              6593 00dc  ld   $dc
              6594 007a  ld   $7a
              6595 0011  ld   $11
              6596 00d8  ld   $d8
              6597 007f  ld   $7f
              6598 0085  ld   $85
              6599 00d6  ld   $d6
              659a 0079  ld   $79
              659b 0011  ld   $11
              659c 00fc  ld   $fc
              659d 007e  ld   $7e
              659e 0085  ld   $85
              659f 00d6  ld   $d6
              65a0 0079  ld   $79
              65a1 0085  ld   $85
              65a2 00a0  ld   $a0
              65a3 007e  ld   $7e
              65a4 0016  ld   $16
              65a5 0000  ld   $00
              65a6 00a4  ld   $a4
              65a7 0016  ld   $16
              65a8 005a  ld   $5a
              65a9 00a5  ld   $a5
              65aa 0085  ld   $85
              65ab 00dc  ld   $dc
              65ac 007a  ld   $7a
              65ad 0011  ld   $11
              65ae 00d8  ld   $d8
              65af 007f  ld   $7f
              65b0 0085  ld   $85
              65b1 00d6  ld   $d6
              65b2 0079  ld   $79
              65b3 0011  ld   $11
              65b4 00f8  ld   $f8
              65b5 007e  ld   $7e
              65b6 0085  ld   $85
              65b7 00d6  ld   $d6
              65b8 0079  ld   $79
              65b9 0085  ld   $85
              65ba 00a0  ld   $a0
              65bb 007e  ld   $7e
              65bc 0016  ld   $16
              65bd 0000  ld   $00
              65be 00a4  ld   $a4
              65bf 0016  ld   $16
              65c0 0060  ld   $60
              65c1 00a5  ld   $a5
              65c2 0085  ld   $85
              65c3 00dc  ld   $dc
              65c4 007a  ld   $7a
              65c5 0011  ld   $11
              65c6 00d8  ld   $d8
              65c7 007f  ld   $7f
              65c8 0085  ld   $85
              65c9 00d6  ld   $d6
              65ca 0079  ld   $79
              65cb 0011  ld   $11
              65cc 00f4  ld   $f4
              65cd 007e  ld   $7e
              65ce 0085  ld   $85
              65cf 00d6  ld   $d6
              65d0 0079  ld   $79
              65d1 0085  ld   $85
              65d2 00a0  ld   $a0
              65d3 007e  ld   $7e
              65d4 0016  ld   $16
              65d5 0000  ld   $00
              65d6 00a4  ld   $a4
              65d7 0016  ld   $16
              65d8 0066  ld   $66
              65d9 00a5  ld   $a5
              65da 0085  ld   $85
              65db 00dc  ld   $dc
              65dc 007a  ld   $7a
              65dd 0011  ld   $11
              65de 00d8  ld   $d8
              65df 007f  ld   $7f
              65e0 0085  ld   $85
              65e1 00d6  ld   $d6
              65e2 0079  ld   $79
              65e3 0085  ld   $85
              65e4 0000  ld   $00
              65e5 0004  ld   $04
              65e6 0004  ld   $04
              65e7 0000  ld   $00
              65e8 0044  ld   $44
              65e9 0011  ld   $11
              65ea 00f0  ld   $f0
              65eb 007e  ld   $7e
              65ec 0085  ld   $85
              65ed 00d6  ld   $d6
              65ee 0079  ld   $79
              65ef 0085  ld   $85
              65f0 00a0  ld   $a0
              65f1 007e  ld   $7e
              65f2 0016  ld   $16
              65f3 0000  ld   $00
              65f4 00a4  ld   $a4
              65f5 0016  ld   $16
              65f6 006c  ld   $6c
              65f7 00a5  ld   $a5
              65f8 0085  ld   $85
              65f9 00dc  ld   $dc
              65fa 007a  ld   $7a
              65fb fe00  bra  ac          ;+-----------------------------------+
              65fc fcfd  bra  $65fd       ;|                                   |
              65fd 1418  ld   $18,y       ;| Trampoline for page $6500 lookups |
              65fe e006  jmp  y,$06       ;|                                   |
              65ff c218  st   [$18]       ;+-----------------------------------+
              6600 0011  ld   $11
              6601 00d8  ld   $d8
              6602 007f  ld   $7f
              6603 0085  ld   $85
              6604 00d6  ld   $d6
              6605 0079  ld   $79
              6606 0011  ld   $11
              6607 00ec  ld   $ec
              6608 007e  ld   $7e
              6609 0085  ld   $85
              660a 00d6  ld   $d6
              660b 0079  ld   $79
              660c 0085  ld   $85
              660d 00a0  ld   $a0
              660e 007e  ld   $7e
              660f 0016  ld   $16
              6610 0000  ld   $00
              6611 00a4  ld   $a4
              6612 0016  ld   $16
              6613 0072  ld   $72
              6614 00a5  ld   $a5
              6615 0085  ld   $85
              6616 00dc  ld   $dc
              6617 007a  ld   $7a
              6618 0011  ld   $11
              6619 00d8  ld   $d8
              661a 007f  ld   $7f
              661b 0085  ld   $85
              661c 00d6  ld   $d6
              661d 0079  ld   $79
              661e 0011  ld   $11
              661f 00e8  ld   $e8
              6620 007e  ld   $7e
              6621 0085  ld   $85
              6622 00d6  ld   $d6
              6623 0079  ld   $79
              6624 0085  ld   $85
              6625 00a0  ld   $a0
              6626 007e  ld   $7e
              6627 004d  ld   $4d
              6628 003c  ld   $3c
              6629 0082  ld   $82
              662a 0085  ld   $85
              662b 00c5  ld   $c5
              662c 0079  ld   $79
              662d 0085  ld   $85
              662e 0035  ld   $35
              662f 0002  ld   $02
              6630 00b4  ld   $b4
              6631 0080  ld   $80
              6632 0079  ld   $79
              6633 00bd  ld   $bd
              6634 0042  ld   $42
              6635 004d  ld   $4d
              6636 0002  ld   $02
              6637 00a4  ld   $a4
              6638 00c7  ld   $c7
              6639 00fb  ld   $fb
              663a 0066  ld   $66
              663b 00aa  ld   $aa
              663c 00ff  ld   $ff
              663d 002f  ld   $2f
              663e 00d6  ld   $d6
              663f 006e  ld   $6e
              6640 00a4  ld   $a4
              6641 0082  ld   $82
              6642 00c3  ld   $c3
              6643 0079  ld   $79
              6644 00ff  ld   $ff
              6645 0032  ld   $32
              6646 0024  ld   $24
              6647 00a2  ld   $a2
              6648 0021  ld   $21
              6649 00a4  ld   $a4
              664a 002f  ld   $2f
              664b 0028  ld   $28
              664c 0059  ld   $59
              664d 00ff  ld   $ff
              664e 0075  ld   $75
              664f 002b  ld   $2b
              6650 0082  ld   $82
              6651 0085  ld   $85
              6652 00ea  ld   $ea
              6653 0079  ld   $79
              6654 0093  ld   $93
              6655 0082  ld   $82
              6656 0023  ld   $23
              6657 0082  ld   $82
              6658 0035  ld   $35
              6659 003f  ld   $3f
              665a 00e6  ld   $e6
              665b 0085  ld   $85
              665c 00cc  ld   $cc
              665d 007c  ld   $7c
              665e 0090  ld   $90
              665f 00dc  ld   $dc
              6660 0063  ld   $63
              6661 00ff  ld   $ff
              6662 00c7  ld   $c7
              6663 0010  ld   $10
              6664 006f  ld   $6f
              6665 00aa  ld   $aa
              6666 00bd  ld   $bd
              6667 00cb  ld   $cb
              6668 0079  ld   $79
              6669 0011  ld   $11
              666a 00e1  ld   $e1
              666b 0004  ld   $04
              666c 002b  ld   $2b
              666d 0022  ld   $22
              666e 0032  ld   $32
              666f 0024  ld   $24
              6670 00a2  ld   $a2
              6671 0021  ld   $21
              6672 00a4  ld   $a4
              6673 002f  ld   $2f
              6674 0028  ld   $28
              6675 0059  ld   $59
              6676 00ff  ld   $ff
              6677 007a  ld   $7a
              6678 00a5  ld   $a5
              6679 005a  ld   $5a
              667a 0011  ld   $11
              667b 0000  ld   $00
              667c 000b  ld   $0b
              667d 002b  ld   $2b
              667e 0022  ld   $22
              667f 0021  ld   $21
              6680 0082  ld   $82
              6681 00b4  ld   $b4
              6682 00e6  ld   $e6
              6683 00ff  ld   $ff
              6684 00c7  ld   $c7
              6685 0094  ld   $94
              6686 0028  ld   $28
              6687 0092  ld   $92
              6688 0016  ld   $16
              6689 0003  ld   $03
              668a 0026  ld   $26
              668b 0021  ld   $21
              668c 0028  ld   $28
              668d 002f  ld   $2f
              668e 0094  ld   $94
              668f 0057  ld   $57
              6690 001c  ld   $1c
              6691 0028  ld   $28
              6692 0028  ld   $28
              6693 0004  ld   $04
              6694 0075  ld   $75
              6695 0085  ld   $85
              6696 00c5  ld   $c5
              6697 007a  ld   $7a
              6698 0063  ld   $63
              6699 00ff  ld   $ff
              669a 001c  ld   $1c
              669b 00a4  ld   $a4
              669c 00a4  ld   $a4
              669d 0004  ld   $04
              669e 00a7  ld   $a7
              669f 009c  ld   $9c
              66a0 00a4  ld   $a4
              66a1 0035  ld   $35
              66a2 0056  ld   $56
              66a3 00d9  ld   $d9
              66a4 00c7  ld   $c7
              66a5 0008  ld   $08
              66a6 006f  ld   $6f
              66a7 00aa  ld   $aa
              66a8 0035  ld   $35
              66a9 0072  ld   $72
              66aa 00d9  ld   $d9
              66ab 0075  ld   $75
              66ac 0085  ld   $85
              66ad 00be  ld   $be
              66ae 007d  ld   $7d
              66af 0063  ld   $63
              66b0 00ff  ld   $ff
              66b1 00c7  ld   $c7
              66b2 0010  ld   $10
              66b3 006f  ld   $6f
              66b4 00aa  ld   $aa
              66b5 00bd  ld   $bd
              66b6 00a0  ld   $a0
              66b7 007d  ld   $7d
              66b8 00a7  ld   $a7
              66b9 009a  ld   $9a
              66ba 00a4  ld   $a4
              66bb 0035  ld   $35
              66bc 0056  ld   $56
              66bd 00ea  ld   $ea
              66be 0016  ld   $16
              66bf 0000  ld   $00
              66c0 00a4  ld   $a4
              66c1 00a7  ld   $a7
              66c2 0070  ld   $70
              66c3 00a5  ld   $a5
              66c4 0035  ld   $35
              66c5 0050  ld   $50
              66c6 00f8  ld   $f8
              66c7 0016  ld   $16
              66c8 0070  ld   $70
              66c9 00a5  ld   $a5
              66ca 00c7  ld   $c7
              66cb 0004  ld   $04
              66cc 0069  ld   $69
              66cd 00aa  ld   $aa
              66ce 00ff  ld   $ff
              66cf 00c7  ld   $c7
              66d0 00fb  ld   $fb
              66d1 0066  ld   $66
              66d2 00aa  ld   $aa
              66d3 00ff  ld   $ff
              66d4 007b  ld   $7b
              66d5 00a2  ld   $a2
              66d6 005d  ld   $5d
              66d7 001c  ld   $1c
              66d8 00a4  ld   $a4
              66d9 00a4  ld   $a4
              66da 0006  ld   $06
              66db 00a7  ld   $a7
              66dc 009a  ld   $9a
              66dd 00a4  ld   $a4
              66de 0035  ld   $35
              66df 0056  ld   $56
              66e0 00b6  ld   $b6
              66e1 00c7  ld   $c7
              66e2 0008  ld   $08
              66e3 006f  ld   $6f
              66e4 00aa  ld   $aa
              66e5 0035  ld   $35
              66e6 0072  ld   $72
              66e7 00b6  ld   $b6
              66e8 0075  ld   $75
              66e9 0085  ld   $85
              66ea 00a0  ld   $a0
              66eb 007e  ld   $7e
              66ec 0063  ld   $63
              66ed 00ff  ld   $ff
              66ee 0075  ld   $75
              66ef 0011  ld   $11
              66f0 0003  ld   $03
              66f1 000b  ld   $0b
              66f2 002b  ld   $2b
              66f3 0022  ld   $22
              66f4 0065  ld   $65
              66f5 0025  ld   $25
              66f6 00a2  ld   $a2
              66f7 0011  ld   $11
              66f8 0000  ld   $00
              66f9 0001  ld   $01
              66fa 0067  ld   $67
              66fb fe00  bra  ac          ;+-----------------------------------+
              66fc fcfd  bra  $66fd       ;|                                   |
              66fd 1418  ld   $18,y       ;| Trampoline for page $6600 lookups |
              66fe e006  jmp  y,$06       ;|                                   |
              66ff c218  st   [$18]       ;+-----------------------------------+
              6700 0027  ld   $27
              6701 004d  ld   $4d
              6702 0006  ld   $06
              6703 009e  ld   $9e
              6704 0016  ld   $16
              6705 00a0  ld   $a0
              6706 0024  ld   $24
              6707 0016  ld   $16
              6708 0000  ld   $00
              6709 0026  ld   $26
              670a 00b4  ld   $b4
              670b 00f3  ld   $f3
              670c 0093  ld   $93
              670d 0027  ld   $27
              670e 009e  ld   $9e
              670f 00c8  ld   $c8
              6710 009e  ld   $9e
              6711 0085  ld   $85
              6712 00ea  ld   $ea
              6713 0079  ld   $79
              6714 0063  ld   $63
              6715 00ff  ld   $ff
              6716 0075  ld   $75
              6717 0011  ld   $11
              6718 0003  ld   $03
              6719 000b  ld   $0b
              671a 002b  ld   $2b
              671b 0022  ld   $22
              671c 0065  ld   $65
              671d 0025  ld   $25
              671e 00a2  ld   $a2
              671f 0011  ld   $11
              6720 0000  ld   $00
              6721 0001  ld   $01
              6722 0067  ld   $67
              6723 0027  ld   $27
              6724 004d  ld   $4d
              6725 0008  ld   $08
              6726 009e  ld   $9e
              6727 0016  ld   $16
              6728 00a0  ld   $a0
              6729 0024  ld   $24
              672a 0016  ld   $16
              672b 0000  ld   $00
              672c 0026  ld   $26
              672d 00b4  ld   $b4
              672e 00f3  ld   $f3
              672f 0093  ld   $93
              6730 0027  ld   $27
              6731 009e  ld   $9e
              6732 00eb  ld   $eb
              6733 009e  ld   $9e
              6734 0085  ld   $85
              6735 00ea  ld   $ea
              6736 0079  ld   $79
              6737 0063  ld   $63
              6738 00ff  ld   $ff
              6739 007c  ld   $7c
              673a 00a3  ld   $a3
              673b 005c  ld   $5c
              673c 001a  ld   $1a
              673d 0021  ld   $21
              673e 0082  ld   $82
              673f 00fc  ld   $fc
              6740 002b  ld   $2b
              6741 0084  ld   $84
              6742 00b8  ld   $b8
              6743 0082  ld   $82
              6744 0035  ld   $35
              6745 003f  ld   $3f
              6746 00c9  ld   $c9
              6747 0021  ld   $21
              6748 0082  ld   $82
              6749 00e6  ld   $e6
              674a 0080  ld   $80
              674b 0035  ld   $35
              674c 0072  ld   $72
              674d 00bc  ld   $bc
              674e 0021  ld   $21
              674f 0084  ld   $84
              6750 00b8  ld   $b8
              6751 0082  ld   $82
              6752 0035  ld   $35
              6753 003f  ld   $3f
              6754 00c9  ld   $c9
              6755 0090  ld   $90
              6756 00c3  ld   $c3
              6757 0021  ld   $21
              6758 0084  ld   $84
              6759 00b8  ld   $b8
              675a 0082  ld   $82
              675b 0035  ld   $35
              675c 004d  ld   $4d
              675d 00c9  ld   $c9
              675e 001a  ld   $1a
              675f 0006  ld   $06
              6760 00f0  ld   $f0
              6761 007e  ld   $7e
              6762 0090  ld   $90
              6763 00c3  ld   $c3
              6764 00ff  ld   $ff
              6765 002b  ld   $2b
              6766 0092  ld   $92
              6767 00c7  ld   $c7
              6768 0084  ld   $84
              6769 0089  ld   $89
              676a 0020  ld   $20
              676b 0035  ld   $35
              676c 0072  ld   $72
              676d 00fc  ld   $fc
              676e 00c7  ld   $c7
              676f 0010  ld   $10
              6770 006f  ld   $6f
              6771 00aa  ld   $aa
              6772 00bd  ld   $bd
              6773 00ad  ld   $ad
              6774 007a  ld   $7a
              6775 00c7  ld   $c7
              6776 0094  ld   $94
              6777 0025  ld   $25
              6778 0092  ld   $92
              6779 0016  ld   $16
              677a 0005  ld   $05
              677b 0096  ld   $96
              677c 0021  ld   $21
              677d 0094  ld   $94
              677e 007f  ld   $7f
              677f 0000  ld   $00
              6780 005e  ld   $5e
              6781 0026  ld   $26
              6782 00b4  ld   $b4
              6783 00cb  ld   $cb
              6784 0093  ld   $93
              6785 0094  ld   $94
              6786 0093  ld   $93
              6787 0028  ld   $28
              6788 009e  ld   $9e
              6789 00e1  ld   $e1
              678a 0096  ld   $96
              678b 0016  ld   $16
              678c 0000  ld   $00
              678d 0026  ld   $26
              678e 00b4  ld   $b4
              678f 00cb  ld   $cb
              6790 0093  ld   $93
              6791 0028  ld   $28
              6792 0075  ld   $75
              6793 0085  ld   $85
              6794 00a2  ld   $a2
              6795 007b  ld   $7b
              6796 0063  ld   $63
              6797 00ff  ld   $ff
              6798 007d  ld   $7d
              6799 00a2  ld   $a2
              679a 005d  ld   $5d
              679b 00a7  ld   $a7
              679c 009c  ld   $9c
              679d 00a4  ld   $a4
              679e 0035  ld   $35
              679f 0056  ld   $56
              67a0 00a9  ld   $a9
              67a1 0016  ld   $16
              67a2 0000  ld   $00
              67a3 00a4  ld   $a4
              67a4 00a7  ld   $a7
              67a5 0072  ld   $72
              67a6 00a5  ld   $a5
              67a7 0035  ld   $35
              67a8 0050  ld   $50
              67a9 00b7  ld   $b7
              67aa 0016  ld   $16
              67ab 0072  ld   $72
              67ac 00a5  ld   $a5
              67ad 00c7  ld   $c7
              67ae 0004  ld   $04
              67af 0069  ld   $69
              67b0 00aa  ld   $aa
              67b1 00ff  ld   $ff
              67b2 00c7  ld   $c7
              67b3 00fb  ld   $fb
              67b4 0066  ld   $66
              67b5 00aa  ld   $aa
              67b6 00ff  ld   $ff
              67b7 0059  ld   $59
              67b8 0000  ld   $00
              67b9 005e  ld   $5e
              67ba 00a4  ld   $a4
              67bb 005e  ld   $5e
              67bc 0028  ld   $28
              67bd 00c7  ld   $c7
              67be 0002  ld   $02
              67bf 006f  ld   $6f
              67c0 00aa  ld   $aa
              67c1 0035  ld   $35
              67c2 0072  ld   $72
              67c3 00ca  ld   $ca
              67c4 00ff  ld   $ff
              67c5 0075  ld   $75
              67c6 00c7  ld   $c7
              67c7 0004  ld   $04
              67c8 006f  ld   $6f
              67c9 00aa  ld   $aa
              67ca 0035  ld   $35
              67cb 0072  ld   $72
              67cc 00df  ld   $df
              67cd 001c  ld   $1c
              67ce 00a5  ld   $a5
              67cf 00a5  ld   $a5
              67d0 0006  ld   $06
              67d1 00a7  ld   $a7
              67d2 0078  ld   $78
              67d3 00a5  ld   $a5
              67d4 0035  ld   $35
              67d5 0050  ld   $50
              67d6 00f8  ld   $f8
              67d7 0016  ld   $16
              67d8 0072  ld   $72
              67d9 00a5  ld   $a5
              67da 0085  ld   $85
              67db 00b9  ld   $b9
              67dc 007b  ld   $7b
              67dd 0011  ld   $11
              67de 0000  ld   $00
              67df 0001  ld   $01
              67e0 002b  ld   $2b
              67e1 0026  ld   $26
              67e2 0016  ld   $16
              67e3 0006  ld   $06
              67e4 0024  ld   $24
              67e5 0016  ld   $16
              67e6 0078  ld   $78
              67e7 0025  ld   $25
              67e8 0011  ld   $11
              67e9 00c0  ld   $c0
              67ea 0020  ld   $20
              67eb 002b  ld   $2b
              67ec 0022  ld   $22
              67ed 00b4  ld   $b4
              67ee 00fb  ld   $fb
              67ef 00c7  ld   $c7
              67f0 0004  ld   $04
              67f1 0069  ld   $69
              67f2 00aa  ld   $aa
              67f3 0085  ld   $85
              67f4 00cd  ld   $cd
              67f5 0079  ld   $79
              67f6 0063  ld   $63
              67f7 00ff  ld   $ff
              67f8 007e  ld   $7e
              67f9 00a0  ld   $a0
              67fa 0060  ld   $60
              67fb fe00  bra  ac          ;+-----------------------------------+
              67fc fcfd  bra  $67fd       ;|                                   |
              67fd 1418  ld   $18,y       ;| Trampoline for page $6700 lookups |
              67fe e006  jmp  y,$06       ;|                                   |
              67ff c218  st   [$18]       ;+-----------------------------------+
              6800 00c7  ld   $c7
              6801 0010  ld   $10
              6802 006f  ld   $6f
              6803 00aa  ld   $aa
              6804 00bd  ld   $bd
              6805 00bc  ld   $bc
              6806 007d  ld   $7d
              6807 0059  ld   $59
              6808 0002  ld   $02
              6809 005e  ld   $5e
              680a 00a4  ld   $a4
              680b 005e  ld   $5e
              680c 0028  ld   $28
              680d 00c7  ld   $c7
              680e 0002  ld   $02
              680f 006f  ld   $6f
              6810 00aa  ld   $aa
              6811 0035  ld   $35
              6812 0072  ld   $72
              6813 00b3  ld   $b3
              6814 00ff  ld   $ff
              6815 0075  ld   $75
              6816 00c7  ld   $c7
              6817 0004  ld   $04
              6818 006f  ld   $6f
              6819 00aa  ld   $aa
              681a 0035  ld   $35
              681b 0072  ld   $72
              681c 00c8  ld   $c8
              681d 001c  ld   $1c
              681e 00a5  ld   $a5
              681f 00a5  ld   $a5
              6820 0008  ld   $08
              6821 00a7  ld   $a7
              6822 0078  ld   $78
              6823 00a5  ld   $a5
              6824 0035  ld   $35
              6825 0050  ld   $50
              6826 00e1  ld   $e1
              6827 0016  ld   $16
              6828 0070  ld   $70
              6829 00a5  ld   $a5
              682a 0085  ld   $85
              682b 00dc  ld   $dc
              682c 007b  ld   $7b
              682d 0011  ld   $11
              682e 0000  ld   $00
              682f 0001  ld   $01
              6830 002b  ld   $2b
              6831 0026  ld   $26
              6832 0016  ld   $16
              6833 0008  ld   $08
              6834 0024  ld   $24
              6835 0016  ld   $16
              6836 0078  ld   $78
              6837 0025  ld   $25
              6838 0011  ld   $11
              6839 00c0  ld   $c0
              683a 0020  ld   $20
              683b 002b  ld   $2b
              683c 0022  ld   $22
              683d 00b4  ld   $b4
              683e 00fb  ld   $fb
              683f 00c7  ld   $c7
              6840 0004  ld   $04
              6841 0069  ld   $69
              6842 00aa  ld   $aa
              6843 0085  ld   $85
              6844 00ea  ld   $ea
              6845 0079  ld   $79
              6846 0063  ld   $63
              6847 00ff  ld   $ff
              6848 0002  ld   $02
              6849 0031  ld   $31
              684a 0039  ld   $39
              684b 0000  ld   $00
              684c 0002  ld   $02
              684d 0031  ld   $31
              684e 0038  ld   $38
              684f 0000  ld   $00
              6850 0002  ld   $02
              6851 0031  ld   $31
              6852 0037  ld   $37
              6853 0000  ld   $00
              6854 0002  ld   $02
              6855 0031  ld   $31
              6856 0036  ld   $36
              6857 0000  ld   $00
              6858 0002  ld   $02
              6859 0031  ld   $31
              685a 0035  ld   $35
              685b 0000  ld   $00
              685c 0002  ld   $02
              685d 0031  ld   $31
              685e 0034  ld   $34
              685f 0000  ld   $00
              6860 007f  ld   $7f
              6861 00a0  ld   $a0
              6862 0060  ld   $60
              6863 0002  ld   $02
              6864 0031  ld   $31
              6865 0033  ld   $33
              6866 0000  ld   $00
              6867 0002  ld   $02
              6868 0031  ld   $31
              6869 0032  ld   $32
              686a 0000  ld   $00
              686b 0002  ld   $02
              686c 0031  ld   $31
              686d 0031  ld   $31
              686e 0000  ld   $00
              686f 0002  ld   $02
              6870 0031  ld   $31
              6871 0030  ld   $30
              6872 0000  ld   $00
              6873 0002  ld   $02
              6874 0020  ld   $20
              6875 0039  ld   $39
              6876 0000  ld   $00
              6877 0002  ld   $02
              6878 0020  ld   $20
              6879 0038  ld   $38
              687a 0000  ld   $00
              687b 0002  ld   $02
              687c 0020  ld   $20
              687d 0037  ld   $37
              687e 0000  ld   $00
              687f 0002  ld   $02
              6880 0020  ld   $20
              6881 0036  ld   $36
              6882 0000  ld   $00
              6883 0002  ld   $02
              6884 0020  ld   $20
              6885 0035  ld   $35
              6886 0000  ld   $00
              6887 0002  ld   $02
              6888 0020  ld   $20
              6889 0034  ld   $34
              688a 0000  ld   $00
              688b 0002  ld   $02
              688c 0020  ld   $20
              688d 0033  ld   $33
              688e 0000  ld   $00
              688f 0002  ld   $02
              6890 0020  ld   $20
              6891 0032  ld   $32
              6892 0000  ld   $00
              6893 0002  ld   $02
              6894 0020  ld   $20
              6895 0031  ld   $31
              6896 0000  ld   $00
              6897 0002  ld   $02
              6898 0020  ld   $20
              6899 0030  ld   $30
              689a 0000  ld   $00
              689b 0026  ld   $26
              689c 0054  ld   $54
              689d 0065  ld   $65
              689e 0073  ld   $73
              689f 0074  ld   $74
              68a0 0020  ld   $20
              68a1 0043  ld   $43
              68a2 0072  ld   $72
              68a3 0065  ld   $65
              68a4 0064  ld   $64
              68a5 0069  ld   $69
              68a6 0074  ld   $74
              68a7 0073  ld   $73
              68a8 0020  ld   $20
              68a9 002e  ld   $2e
              68aa 002e  ld   $2e
              68ab 002e  ld   $2e
              * 24 times
              68c1 0020  ld   $20
              68c2 0000  ld   $00
              68c3 0000  ld   $00
              68c4 0000  ld   $00         ;End of gbas/menu/Credits_vX0.gt1, size 1250
                                          ;+-----------------------------------+
                                          ;| gbas/menu/Clock_vX0.gt1           |
                                          ;+-----------------------------------+
              68c5 dc43  st   $43,[y,x++] ;'C'
              68c6 dc72  st   $72,[y,x++] ;'r'
              68c7 dc65  st   $65,[y,x++] ;'e'
              68c8 dc64  st   $64,[y,x++] ;'d'
              68c9 dc69  st   $69,[y,x++] ;'i'
              68ca dc74  st   $74,[y,x++] ;'t'
              68cb dc73  st   $73,[y,x++] ;'s'
              68cc dc00  st   $00,[y,x++] ;'\x00'
              68cd 00e3  ld   $e3
              68ce c218  st   [$18]
              68cf 0063  ld   $63
              68d0 14f3  ld   $f3,y
              68d1 e019  jmp  y,$19
              68d2 c219  st   [$19]
Clock:        68d3 0000  ld   $00
              68d4 007e  ld   $7e
              68d5 0002  ld   $02
              68d6 0001  ld   $01
              68d7 0001  ld   $01
              68d8 0002  ld   $02
              68d9 0000  ld   $00
              68da 00f9  ld   $f9
              68db 0059  ld   $59
              68dc 0080  ld   $80
              68dd 002b  ld   $2b
              68de 0082  ld   $82
              68df 0011  ld   $11
              68e0 00a2  ld   $a2
              68e1 0071  ld   $71
              68e2 00cf  ld   $cf
              68e3 0018  ld   $18
              68e4 0011  ld   $11
              68e5 0020  ld   $20
              68e6 000f  ld   $0f
              68e7 002b  ld   $2b
              68e8 00a2  ld   $a2
              68e9 00c7  ld   $c7
              68ea 0003  ld   $03
              68eb 0069  ld   $69
              68ec 0021  ld   $21
              68ed 004d  ld   $4d
              68ee 0002  ld   $02
              68ef 00aa  ld   $aa
              68f0 004d  ld   $4d
              68f1 0000  ld   $00
              68f2 00d6  ld   $d6
              68f3 004d  ld   $4d
              68f4 0000  ld   $00
              68f5 00a6  ld   $a6
              68f6 0016  ld   $16
              68f7 0000  ld   $00
              68f8 002d  ld   $2d
              68f9 004d  ld   $4d
              68fa 0000  ld   $00
              68fb fe00  bra  ac          ;+-----------------------------------+
              68fc fcfd  bra  $68fd       ;|                                   |
              68fd 1418  ld   $18,y       ;| Trampoline for page $6800 lookups |
              68fe e006  jmp  y,$06       ;|                                   |
              68ff c218  st   [$18]       ;+-----------------------------------+
              6900 002e  ld   $2e
              6901 0085  ld   $85
              6902 00ac  ld   $ac
              6903 0069  ld   $69
              6904 0059  ld   $59
              6905 0000  ld   $00
              6906 005e  ld   $5e
              6907 002d  ld   $2d
              6908 002b  ld   $2b
              6909 002e  ld   $2e
              690a 0011  ld   $11
              690b 00da  ld   $da
              690c 0069  ld   $69
              690d 002b  ld   $2b
              690e 0084  ld   $84
              690f 0085  ld   $85
              6910 00cf  ld   $cf
              6911 0069  ld   $69
              6912 0016  ld   $16
              6913 00ff  ld   $ff
              6914 000e  ld   $0e
              6915 0011  ld   $11
              6916 00f6  ld   $f6
              6917 0001  ld   $01
              6918 0077  ld   $77
              6919 006b  ld   $6b
              691a 00e0  ld   $e0
              691b 0085  ld   $85
              691c 00a3  ld   $a3
              691d 0074  ld   $74
              691e 0011  ld   $11
              691f 00f9  ld   $f9
              6920 0001  ld   $01
              6921 0025  ld   $25
              6922 00ee  ld   $ee
              6923 0016  ld   $16
              6924 0015  ld   $15
              6925 00a2  ld   $a2
              6926 0016  ld   $16
              6927 000f  ld   $0f
              6928 00a3  ld   $a3
              6929 004d  ld   $4d
              692a 0002  ld   $02
              692b 0082  ld   $82
              692c 0085  ld   $85
              692d 00c5  ld   $c5
              692e 0069  ld   $69
              692f 0085  ld   $85
              6930 00a1  ld   $a1
              6931 0072  ld   $72
              6932 0011  ld   $11
              6933 00f9  ld   $f9
              6934 0001  ld   $01
              6935 0025  ld   $25
              6936 0000  ld   $00
              6937 00c7  ld   $c7
              6938 00fd  ld   $fd
              6939 0066  ld   $66
              693a 00aa  ld   $aa
              693b 004d  ld   $4d
              693c 0000  ld   $00
              693d 00a4  ld   $a4
              693e 00c7  ld   $c7
              693f 0010  ld   $10
              6940 0069  ld   $69
              6941 00aa  ld   $aa
              6942 004d  ld   $4d
              6943 0000  ld   $00
              6944 0038  ld   $38
              6945 0016  ld   $16
              6946 0002  ld   $02
              6947 00a4  ld   $a4
              6948 0016  ld   $16
              6949 0077  ld   $77
              694a 00a5  ld   $a5
              694b 0085  ld   $85
              694c 00dc  ld   $dc
              694d 006d  ld   $6d
              694e 0011  ld   $11
              694f 00de  ld   $de
              6950 007d  ld   $7d
              6951 0085  ld   $85
              6952 00eb  ld   $eb
              6953 006a  ld   $6a
              6954 0016  ld   $16
              6955 0002  ld   $02
              6956 00a4  ld   $a4
              6957 0016  ld   $16
              6958 0000  ld   $00
              6959 00a5  ld   $a5
              695a 0085  ld   $85
              695b 00dc  ld   $dc
              695c 006d  ld   $6d
              695d 0011  ld   $11
              695e 00d1  ld   $d1
              695f 007d  ld   $7d
              6960 0085  ld   $85
              6961 00eb  ld   $eb
              6962 006a  ld   $6a
              6963 0011  ld   $11
              6964 00a2  ld   $a2
              6965 007d  ld   $7d
              6966 0085  ld   $85
              6967 00a1  ld   $a1
              6968 0076  ld   $76
              6969 0011  ld   $11
              696a 00a0  ld   $a0
              696b 007c  ld   $7c
              696c 002b  ld   $2b
              696d 0084  ld   $84
              696e 0011  ld   $11
              696f 00e3  ld   $e3
              6970 007b  ld   $7b
              6971 0085  ld   $85
              6972 00cf  ld   $cf
              6973 006f  ld   $6f
              6974 0082  ld   $82
              6975 0001  ld   $01
              6976 002b  ld   $2b
              6977 00e8  ld   $e8
              6978 0011  ld   $11
              6979 00a0  ld   $a0
              697a 007c  ld   $7c
              697b 002b  ld   $2b
              697c 0084  ld   $84
              697d 0011  ld   $11
              697e 00e0  ld   $e0
              697f 007b  ld   $7b
              6980 0085  ld   $85
              6981 00cf  ld   $cf
              6982 006f  ld   $6f
              6983 0082  ld   $82
              6984 0001  ld   $01
              6985 00fa  ld   $fa
              6986 00e8  ld   $e8
              6987 00bb  ld   $bb
              6988 00ab  ld   $ab
              6989 0002  ld   $02
              698a 004d  ld   $4d
              698b 0001  ld   $01
              698c 0038  ld   $38
              698d 004d  ld   $4d
              698e 0005  ld   $05
              698f 0082  ld   $82
              6990 0085  ld   $85
              6991 00b4  ld   $b4
              6992 0069  ld   $69
              6993 0059  ld   $59
              6994 0000  ld   $00
              6995 002f  ld   $2f
              6996 0000  ld   $00
              6997 0027  ld   $27
              6998 0011  ld   $11
              6999 00f9  ld   $f9
              699a 0001  ld   $01
              699b 0025  ld   $25
              699c 00ee  ld   $ee
              699d 0085  ld   $85
              699e 00a1  ld   $a1
              699f 0072  ld   $72
              69a0 0011  ld   $11
              69a1 00f9  ld   $f9
              69a2 0001  ld   $01
              69a3 0025  ld   $25
              69a4 0000  ld   $00
              69a5 0011  ld   $11
              69a6 00f6  ld   $f6
              69a7 0070  ld   $70
              69a8 0025  ld   $25
              69a9 000d  ld   $0d
              69aa 0011  ld   $11
              69ab 00fb  ld   $fb
              69ac 0070  ld   $70
              69ad 0025  ld   $25
              69ae 0001  ld   $01
              69af 0032  ld   $32
              69b0 0024  ld   $24
              69b1 003a  ld   $3a
              69b2 004d  ld   $4d
              69b3 000d  ld   $0d
              69b4 0026  ld   $26
              69b5 0085  ld   $85
              69b6 00ba  ld   $ba
              69b7 006d  ld   $6d
              69b8 0032  ld   $32
              69b9 003a  ld   $3a
              69ba 0028  ld   $28
              69bb 00bd  ld   $bd
              69bc 00df  ld   $df
              69bd 0002  ld   $02
              69be 004d  ld   $4d
              69bf 000c  ld   $0c
              69c0 003a  ld   $3a
              69c1 0032  ld   $32
              69c2 0024  ld   $24
              69c3 003c  ld   $3c
              69c4 004d  ld   $4d
              69c5 003c  ld   $3c
              69c6 0026  ld   $26
              69c7 0085  ld   $85
              69c8 00ba  ld   $ba
              69c9 006d  ld   $6d
              69ca 0032  ld   $32
              69cb 003c  ld   $3c
              69cc 0028  ld   $28
              69cd 0032  ld   $32
              69ce 0024  ld   $24
              69cf 003e  ld   $3e
              69d0 004d  ld   $4d
              69d1 003c  ld   $3c
              69d2 0026  ld   $26
              69d3 0085  ld   $85
              69d4 00ba  ld   $ba
              69d5 006d  ld   $6d
              69d6 0085  ld   $85
              69d7 0000  ld   $00
              69d8 0003  ld   $03
              69d9 0003  ld   $03
              69da 0000  ld   $00
              69db 00fa  ld   $fa
              69dc 0032  ld   $32
              69dd 003e  ld   $3e
              69de 0028  ld   $28
              69df 0011  ld   $11
              69e0 00df  ld   $df
              69e1 007b  ld   $7b
              69e2 002b  ld   $2b
              69e3 0082  ld   $82
              69e4 0021  ld   $21
              69e5 003a  ld   $3a
              69e6 00f0  ld   $f0
              69e7 0082  ld   $82
              69e8 0011  ld   $11
              69e9 00de  ld   $de
              69ea 007b  ld   $7b
              69eb 002b  ld   $2b
              69ec 0082  ld   $82
              69ed 0021  ld   $21
              69ee 003c  ld   $3c
              69ef 00f0  ld   $f0
              69f0 0082  ld   $82
              69f1 0011  ld   $11
              69f2 00dd  ld   $dd
              69f3 007b  ld   $7b
              69f4 002b  ld   $2b
              69f5 0082  ld   $82
              69f6 0021  ld   $21
              69f7 003e  ld   $3e
              69f8 00f0  ld   $f0
              69f9 0082  ld   $82
              69fa 0032  ld   $32
              69fb fe00  bra  ac          ;+-----------------------------------+
              69fc fcfd  bra  $69fd       ;|                                   |
              69fd 1418  ld   $18,y       ;| Trampoline for page $6900 lookups |
              69fe e006  jmp  y,$06       ;|                                   |
              69ff c218  st   [$18]       ;+-----------------------------------+
              6a00 0040  ld   $40
              6a01 003a  ld   $3a
              6a02 0032  ld   $32
              6a03 0042  ld   $42
              6a04 003c  ld   $3c
              6a05 0032  ld   $32
              6a06 0044  ld   $44
              6a07 003e  ld   $3e
              6a08 0032  ld   $32
              6a09 0024  ld   $24
              6a0a 003a  ld   $3a
              6a0b 004d  ld   $4d
              6a0c 000c  ld   $0c
              6a0d 0026  ld   $26
              6a0e 0085  ld   $85
              6a0f 00ba  ld   $ba
              6a10 006d  ld   $6d
              6a11 0032  ld   $32
              6a12 0046  ld   $46
              6a13 0028  ld   $28
              6a14 0032  ld   $32
              6a15 0024  ld   $24
              6a16 003c  ld   $3c
              6a17 004d  ld   $4d
              6a18 000c  ld   $0c
              6a19 0026  ld   $26
              6a1a 0085  ld   $85
              6a1b 00ba  ld   $ba
              6a1c 006d  ld   $6d
              6a1d 002b  ld   $2b
              6a1e 0048  ld   $48
              6a1f 002b  ld   $2b
              6a20 004a  ld   $4a
              6a21 0011  ld   $11
              6a22 00f9  ld   $f9
              6a23 0001  ld   $01
              6a24 0025  ld   $25
              6a25 00ee  ld   $ee
              6a26 0085  ld   $85
              6a27 0059  ld   $59
              6a28 0004  ld   $04
              6a29 0085  ld   $85
              6a2a 00a0  ld   $a0
              6a2b 0003  ld   $03
              6a2c 0011  ld   $11
              6a2d 00f9  ld   $f9
              6a2e 0001  ld   $01
              6a2f 0025  ld   $25
              6a30 0000  ld   $00
              6a31 0011  ld   $11
              6a32 00dd  ld   $dd
              6a33 007b  ld   $7b
              6a34 00ad  ld   $ad
              6a35 002b  ld   $2b
              6a36 003e  ld   $3e
              6a37 0021  ld   $21
              6a38 003e  ld   $3e
              6a39 00fc  ld   $fc
              6a3a 0044  ld   $44
              6a3b 00bb  ld   $bb
              6a3c 006d  ld   $6d
              6a3d 0003  ld   $03
              6a3e 0011  ld   $11
              6a3f 00df  ld   $df
              6a40 007b  ld   $7b
              6a41 00ad  ld   $ad
              6a42 002b  ld   $2b
              6a43 003a  ld   $3a
              6a44 0011  ld   $11
              6a45 00de  ld   $de
              6a46 007b  ld   $7b
              6a47 00ad  ld   $ad
              6a48 002b  ld   $2b
              6a49 003c  ld   $3c
              6a4a 0085  ld   $85
              6a4b 00a0  ld   $a0
              6a4c 0003  ld   $03
              6a4d 0032  ld   $32
              6a4e 0044  ld   $44
              6a4f 003e  ld   $3e
              6a50 00c7  ld   $c7
              6a51 00ff  ld   $ff
              6a52 0075  ld   $75
              6a53 000f  ld   $0f
              6a54 00bb  ld   $bb
              6a55 0077  ld   $77
              6a56 0003  ld   $03
              6a57 0085  ld   $85
              6a58 003b  ld   $3b
              6a59 0002  ld   $02
              6a5a 0090  ld   $90
              6a5b 004e  ld   $4e
              6a5c 0075  ld   $75
              6a5d 00c7  ld   $c7
              6a5e 0007  ld   $07
              6a5f 006f  ld   $6f
              6a60 002d  ld   $2d
              6a61 00c7  ld   $c7
              6a62 0066  ld   $66
              6a63 001b  ld   $1b
              6a64 00a0  ld   $a0
              6a65 00ad  ld   $ad
              6a66 002b  ld   $2b
              6a67 00c4  ld   $c4
              6a68 0016  ld   $16
              6a69 0002  ld   $02
              6a6a 0093  ld   $93
              6a6b 0021  ld   $21
              6a6c 00c4  ld   $c4
              6a6d 00e9  ld   $e9
              6a6e 00e9  ld   $e9
              6a6f 00e9  ld   $e9
              6a70 00e9  ld   $e9
              6a71 002b  ld   $2b
              6a72 0094  ld   $94
              6a73 0032  ld   $32
              6a74 0096  ld   $96
              6a75 00c4  ld   $c4
              6a76 004d  ld   $4d
              6a77 0000  ld   $00
              6a78 0098  ld   $98
              6a79 0085  ld   $85
              6a7a 00c6  ld   $c6
              6a7b 006a  ld   $6a
              6a7c 0016  ld   $16
              6a7d 0001  ld   $01
              6a7e 002c  ld   $2c
              6a7f 0063  ld   $63
              6a80 00ff  ld   $ff
              6a81 0075  ld   $75
              6a82 0021  ld   $21
              6a83 0038  ld   $38
              6a84 00bb  ld   $bb
              6a85 00a7  ld   $a7
              6a86 0003  ld   $03
              6a87 0085  ld   $85
              6a88 007b  ld   $7b
              6a89 0003  ld   $03
              6a8a 0085  ld   $85
              6a8b 00d7  ld   $d7
              6a8c 0003  ld   $03
              6a8d 0085  ld   $85
              6a8e 00ec  ld   $ec
              6a8f 0003  ld   $03
              6a90 0085  ld   $85
              6a91 001f  ld   $1f
              6a92 0004  ld   $04
              6a93 0085  ld   $85
              6a94 00b7  ld   $b7
              6a95 0003  ld   $03
              6a96 0063  ld   $63
              6a97 00ff  ld   $ff
              6a98 0075  ld   $75
              6a99 0011  ld   $11
              6a9a 0000  ld   $00
              6a9b 000c  ld   $0c
              6a9c 002b  ld   $2b
              6a9d 00a2  ld   $a2
              6a9e 0016  ld   $16
              6a9f 0041  ld   $41
              6aa0 00a4  ld   $a4
              6aa1 0016  ld   $16
              6aa2 003e  ld   $3e
              6aa3 00a5  ld   $a5
              6aa4 0085  ld   $85
              6aa5 00dc  ld   $dc
              6aa6 006d  ld   $6d
              6aa7 0085  ld   $85
              6aa8 00bb  ld   $bb
              6aa9 006c  ld   $6c
              6aaa 0011  ld   $11
              6aab 00d3  ld   $d3
              6aac 007b  ld   $7b
              6aad 0085  ld   $85
              6aae 00eb  ld   $eb
              6aaf 006a  ld   $6a
              6ab0 0085  ld   $85
              6ab1 00b7  ld   $b7
              6ab2 0077  ld   $77
              6ab3 0016  ld   $16
              6ab4 0010  ld   $10
              6ab5 00a2  ld   $a2
              6ab6 0063  ld   $63
              6ab7 00ff  ld   $ff
              6ab8 0075  ld   $75
              6ab9 002f  ld   $2f
              6aba 00d6  ld   $d6
              6abb 006e  ld   $6e
              6abc 0085  ld   $85
              6abd 00ac  ld   $ac
              6abe 0004  ld   $04
              6abf 0032  ld   $32
              6ac0 004c  ld   $4c
              6ac1 0044  ld   $44
              6ac2 0085  ld   $85
              6ac3 0042  ld   $42
              6ac4 0004  ld   $04
              6ac5 0085  ld   $85
              6ac6 00c7  ld   $c7
              6ac7 0004  ld   $04
              6ac8 0085  ld   $85
              6ac9 00b7  ld   $b7
              6aca 0003  ld   $03
              6acb 0063  ld   $63
              6acc 00ff  ld   $ff
              6acd 0075  ld   $75
              6ace 0021  ld   $21
              6acf 003c  ld   $3c
              6ad0 00fc  ld   $fc
              6ad1 0042  ld   $42
              6ad2 00bb  ld   $bb
              6ad3 0018  ld   $18
              6ad4 0004  ld   $04
              6ad5 0085  ld   $85
              6ad6 00e2  ld   $e2
              6ad7 0004  ld   $04
              6ad8 0085  ld   $85
              6ad9 0000  ld   $00
              6ada 0004  ld   $04
              6adb 0004  ld   $04
              6adc 0000  ld   $00
              6add 00f9  ld   $f9
              6ade 0032  ld   $32
              6adf 0042  ld   $42
              6ae0 003c  ld   $3c
              6ae1 002b  ld   $2b
              6ae2 0024  ld   $24
              6ae3 004d  ld   $4d
              6ae4 000c  ld   $0c
              6ae5 0026  ld   $26
              6ae6 0085  ld   $85
              6ae7 00ba  ld   $ba
              6ae8 006d  ld   $6d
              6ae9 002b  ld   $2b
              6aea 0048  ld   $48
              6aeb 0021  ld   $21
              6aec 0048  ld   $48
              6aed 00fc  ld   $fc
              6aee 004a  ld   $4a
              6aef 00bb  ld   $bb
              6af0 0018  ld   $18
              6af1 0004  ld   $04
              6af2 0085  ld   $85
              6af3 0022  ld   $22
              6af4 0005  ld   $05
              6af5 0032  ld   $32
              6af6 004a  ld   $4a
              6af7 0048  ld   $48
              6af8 0085  ld   $85
              6af9 0007  ld   $07
              6afa 0005  ld   $05
              6afb fe00  bra  ac          ;+-----------------------------------+
              6afc fcfd  bra  $6afd       ;|                                   |
              6afd 1418  ld   $18,y       ;| Trampoline for page $6a00 lookups |
              6afe e006  jmp  y,$06       ;|                                   |
              6aff c218  st   [$18]       ;+-----------------------------------+
              6b00 0063  ld   $63
              6b01 00ff  ld   $ff
              6b02 0075  ld   $75
              6b03 0021  ld   $21
              6b04 003a  ld   $3a
              6b05 00fc  ld   $fc
              6b06 0040  ld   $40
              6b07 00bb  ld   $bb
              6b08 0033  ld   $33
              6b09 0004  ld   $04
              6b0a 0032  ld   $32
              6b0b 0040  ld   $40
              6b0c 003a  ld   $3a
              6b0d 002b  ld   $2b
              6b0e 0024  ld   $24
              6b0f 004d  ld   $4d
              6b10 000c  ld   $0c
              6b11 0026  ld   $26
              6b12 0085  ld   $85
              6b13 00ba  ld   $ba
              6b14 006d  ld   $6d
              6b15 0032  ld   $32
              6b16 0046  ld   $46
              6b17 0028  ld   $28
              6b18 0021  ld   $21
              6b19 0046  ld   $46
              6b1a 00e9  ld   $e9
              6b1b 00e9  ld   $e9
              6b1c 0099  ld   $99
              6b1d 0046  ld   $46
              6b1e 002b  ld   $2b
              6b1f 004e  ld   $4e
              6b20 0085  ld   $85
              6b21 0045  ld   $45
              6b22 0005  ld   $05
              6b23 0063  ld   $63
              6b24 00ff  ld   $ff
              6b25 0075  ld   $75
              6b26 0053  ld   $53
              6b27 004c  ld   $4c
              6b28 00a0  ld   $a0
              6b29 0060  ld   $60
              6b2a 005e  ld   $5e
              6b2b 0082  ld   $82
              6b2c 0053  ld   $53
              6b2d 004c  ld   $4c
              6b2e 00a0  ld   $a0
              6b2f 0061  ld   $61
              6b30 005e  ld   $5e
              6b31 0083  ld   $83
              6b32 0016  ld   $16
              6b33 003f  ld   $3f
              6b34 00a3  ld   $a3
              6b35 0021  ld   $21
              6b36 0082  ld   $82
              6b37 002f  ld   $2f
              6b38 00a3  ld   $a3
              6b39 0054  ld   $54
              6b3a 0063  ld   $63
              6b3b 00ff  ld   $ff
              6b3c 0075  ld   $75
              6b3d 0016  ld   $16
              6b3e 0010  ld   $10
              6b3f 00a3  ld   $a3
              6b40 004d  ld   $4d
              6b41 0050  ld   $50
              6b42 00a0  ld   $a0
              6b43 004d  ld   $4d
              6b44 003b  ld   $3b
              6b45 0096  ld   $96
              6b46 004d  ld   $4d
              6b47 0030  ld   $30
              6b48 0098  ld   $98
              6b49 0085  ld   $85
              6b4a 00ae  ld   $ae
              6b4b 0078  ld   $78
              6b4c 004d  ld   $4d
              6b4d 0050  ld   $50
              6b4e 0050  ld   $50
              6b4f 004d  ld   $4d
              6b50 003b  ld   $3b
              6b51 0052  ld   $52
              6b52 004d  ld   $4d
              6b53 0030  ld   $30
              6b54 0054  ld   $54
              6b55 004d  ld   $4d
              6b56 0000  ld   $00
              6b57 0056  ld   $56
              6b58 0085  ld   $85
              6b59 0068  ld   $68
              6b5a 0005  ld   $05
              6b5b 004d  ld   $4d
              6b5c 0033  ld   $33
              6b5d 0054  ld   $54
              6b5e 004d  ld   $4d
              6b5f 0000  ld   $00
              6b60 0056  ld   $56
              6b61 0085  ld   $85
              6b62 0068  ld   $68
              6b63 0005  ld   $05
              6b64 004d  ld   $4d
              6b65 0035  ld   $35
              6b66 0054  ld   $54
              6b67 004d  ld   $4d
              6b68 0001  ld   $01
              6b69 0056  ld   $56
              6b6a 0085  ld   $85
              6b6b 0068  ld   $68
              6b6c 0005  ld   $05
              6b6d 004d  ld   $4d
              6b6e 0039  ld   $39
              6b6f 0054  ld   $54
              6b70 004d  ld   $4d
              6b71 0003  ld   $03
              6b72 0056  ld   $56
              6b73 0085  ld   $85
              6b74 0068  ld   $68
              6b75 0005  ld   $05
              6b76 004d  ld   $4d
              6b77 0037  ld   $37
              6b78 0054  ld   $54
              6b79 004d  ld   $4d
              6b7a 0002  ld   $02
              6b7b 0056  ld   $56
              6b7c 0085  ld   $85
              6b7d 0068  ld   $68
              6b7e 0005  ld   $05
              6b7f 004d  ld   $4d
              6b80 0000  ld   $00
              6b81 004c  ld   $4c
              6b82 0085  ld   $85
              6b83 0042  ld   $42
              6b84 0004  ld   $04
              6b85 00a7  ld   $a7
              6b86 003b  ld   $3b
              6b87 004c  ld   $4c
              6b88 0093  ld   $93
              6b89 004c  ld   $4c
              6b8a 00bd  ld   $bd
              6b8b 009d  ld   $9d
              6b8c 0004  ld   $04
              6b8d 0063  ld   $63
              6b8e 00ff  ld   $ff
              6b8f 0075  ld   $75
              6b90 0016  ld   $16
              6b91 0010  ld   $10
              6b92 00a3  ld   $a3
              6b93 004d  ld   $4d
              6b94 0050  ld   $50
              6b95 0082  ld   $82
              6b96 004d  ld   $4d
              6b97 003b  ld   $3b
              6b98 0084  ld   $84
              6b99 0053  ld   $53
              6b9a 0044  ld   $44
              6b9b 00a0  ld   $a0
              6b9c 0060  ld   $60
              6b9d 002b  ld   $2b
              6b9e 0086  ld   $86
              6b9f 0053  ld   $53
              6ba0 0044  ld   $44
              6ba1 00a0  ld   $a0
              6ba2 0061  ld   $61
              6ba3 002b  ld   $2b
              6ba4 0088  ld   $88
              6ba5 0085  ld   $85
              6ba6 00a6  ld   $a6
              6ba7 007a  ld   $7a
              6ba8 0063  ld   $63
              6ba9 00ff  ld   $ff
              6baa 0075  ld   $75
              6bab 0016  ld   $16
              6bac 003f  ld   $3f
              6bad 00a3  ld   $a3
              6bae 004d  ld   $4d
              6baf 0050  ld   $50
              6bb0 0082  ld   $82
              6bb1 004d  ld   $4d
              6bb2 003b  ld   $3b
              6bb3 0084  ld   $84
              6bb4 0053  ld   $53
              6bb5 003e  ld   $3e
              6bb6 00a0  ld   $a0
              6bb7 0060  ld   $60
              6bb8 002b  ld   $2b
              6bb9 0086  ld   $86
              6bba 0053  ld   $53
              6bbb 003e  ld   $3e
              6bbc 00a0  ld   $a0
              6bbd 0061  ld   $61
              6bbe 002b  ld   $2b
              6bbf 0088  ld   $88
              6bc0 0085  ld   $85
              6bc1 00a6  ld   $a6
              6bc2 007a  ld   $7a
              6bc3 0063  ld   $63
              6bc4 00ff  ld   $ff
              6bc5 0075  ld   $75
              6bc6 0016  ld   $16
              6bc7 0010  ld   $10
              6bc8 00a3  ld   $a3
              6bc9 004d  ld   $4d
              6bca 0050  ld   $50
              6bcb 0082  ld   $82
              6bcc 004d  ld   $4d
              6bcd 003b  ld   $3b
              6bce 0084  ld   $84
              6bcf 0053  ld   $53
              6bd0 0042  ld   $42
              6bd1 00a0  ld   $a0
              6bd2 0062  ld   $62
              6bd3 002b  ld   $2b
              6bd4 0086  ld   $86
              6bd5 0053  ld   $53
              6bd6 0042  ld   $42
              6bd7 00a0  ld   $a0
              6bd8 0063  ld   $63
              6bd9 0085  ld   $85
              6bda 0000  ld   $00
              6bdb 0005  ld   $05
              6bdc 0005  ld   $05
              6bdd 0000  ld   $00
              6bde 00a8  ld   $a8
              6bdf 002b  ld   $2b
              6be0 0088  ld   $88
              6be1 0085  ld   $85
              6be2 00a6  ld   $a6
              6be3 007a  ld   $7a
              6be4 0063  ld   $63
              6be5 00ff  ld   $ff
              6be6 0075  ld   $75
              6be7 0016  ld   $16
              6be8 002a  ld   $2a
              6be9 00a3  ld   $a3
              6bea 004d  ld   $4d
              6beb 0050  ld   $50
              6bec 0082  ld   $82
              6bed 004d  ld   $4d
              6bee 003b  ld   $3b
              6bef 0084  ld   $84
              6bf0 0053  ld   $53
              6bf1 003c  ld   $3c
              6bf2 00a0  ld   $a0
              6bf3 0062  ld   $62
              6bf4 002b  ld   $2b
              6bf5 0086  ld   $86
              6bf6 0053  ld   $53
              6bf7 003c  ld   $3c
              6bf8 00a0  ld   $a0
              6bf9 0063  ld   $63
              6bfa 002b  ld   $2b
              6bfb fe00  bra  ac          ;+-----------------------------------+
              6bfc fcfd  bra  $6bfd       ;|                                   |
              6bfd 1418  ld   $18,y       ;| Trampoline for page $6b00 lookups |
              6bfe e006  jmp  y,$06       ;|                                   |
              6bff c218  st   [$18]       ;+-----------------------------------+
              6c00 0088  ld   $88
              6c01 0085  ld   $85
              6c02 00a6  ld   $a6
              6c03 007a  ld   $7a
              6c04 0063  ld   $63
              6c05 00ff  ld   $ff
              6c06 0075  ld   $75
              6c07 0016  ld   $16
              6c08 0010  ld   $10
              6c09 00a3  ld   $a3
              6c0a 004d  ld   $4d
              6c0b 0050  ld   $50
              6c0c 0082  ld   $82
              6c0d 004d  ld   $4d
              6c0e 003b  ld   $3b
              6c0f 0084  ld   $84
              6c10 0011  ld   $11
              6c11 00a0  ld   $a0
              6c12 0064  ld   $64
              6c13 0099  ld   $99
              6c14 004e  ld   $4e
              6c15 0099  ld   $99
              6c16 004a  ld   $4a
              6c17 00ad  ld   $ad
              6c18 002b  ld   $2b
              6c19 0086  ld   $86
              6c1a 0011  ld   $11
              6c1b 00a0  ld   $a0
              6c1c 0065  ld   $65
              6c1d 0099  ld   $99
              6c1e 004e  ld   $4e
              6c1f 0099  ld   $99
              6c20 004a  ld   $4a
              6c21 00ad  ld   $ad
              6c22 002b  ld   $2b
              6c23 0088  ld   $88
              6c24 0085  ld   $85
              6c25 00a6  ld   $a6
              6c26 007a  ld   $7a
              6c27 0063  ld   $63
              6c28 00ff  ld   $ff
              6c29 0075  ld   $75
              6c2a 0016  ld   $16
              6c2b 0015  ld   $15
              6c2c 00a3  ld   $a3
              6c2d 004d  ld   $4d
              6c2e 0050  ld   $50
              6c2f 0082  ld   $82
              6c30 004d  ld   $4d
              6c31 003b  ld   $3b
              6c32 0084  ld   $84
              6c33 0011  ld   $11
              6c34 00a0  ld   $a0
              6c35 0064  ld   $64
              6c36 0099  ld   $99
              6c37 004e  ld   $4e
              6c38 0099  ld   $99
              6c39 0048  ld   $48
              6c3a 00ad  ld   $ad
              6c3b 002b  ld   $2b
              6c3c 0086  ld   $86
              6c3d 0011  ld   $11
              6c3e 00a0  ld   $a0
              6c3f 0065  ld   $65
              6c40 0099  ld   $99
              6c41 004e  ld   $4e
              6c42 0099  ld   $99
              6c43 0048  ld   $48
              6c44 00ad  ld   $ad
              6c45 002b  ld   $2b
              6c46 0088  ld   $88
              6c47 0085  ld   $85
              6c48 00a6  ld   $a6
              6c49 007a  ld   $7a
              6c4a 0063  ld   $63
              6c4b 00ff  ld   $ff
              6c4c 0075  ld   $75
              6c4d 0044  ld   $44
              6c4e 0001  ld   $01
              6c4f 00e8  ld   $e8
              6c50 0050  ld   $50
              6c51 0042  ld   $42
              6c52 0001  ld   $01
              6c53 00ea  ld   $ea
              6c54 0050  ld   $50
              6c55 0044  ld   $44
              6c56 0001  ld   $01
              6c57 0058  ld   $58
              6c58 0050  ld   $50
              6c59 0042  ld   $42
              6c5a 0001  ld   $01
              6c5b 00d8  ld   $d8
              6c5c 0050  ld   $50
              6c5d 0044  ld   $44
              6c5e 0001  ld   $01
              6c5f 00e8  ld   $e8
              6c60 0052  ld   $52
              6c61 0042  ld   $42
              6c62 0001  ld   $01
              6c63 00ea  ld   $ea
              6c64 0052  ld   $52
              6c65 0044  ld   $44
              6c66 0001  ld   $01
              6c67 005a  ld   $5a
              6c68 0052  ld   $52
              6c69 0042  ld   $42
              6c6a 0001  ld   $01
              6c6b 00dc  ld   $dc
              6c6c 0052  ld   $52
              6c6d 0065  ld   $65
              6c6e 00a3  ld   $a3
              6c6f 0056  ld   $56
              6c70 002d  ld   $2d
              6c71 0082  ld   $82
              6c72 005a  ld   $5a
              6c73 0058  ld   $58
              6c74 0032  ld   $32
              6c75 0086  ld   $86
              6c76 0054  ld   $54
              6c77 0085  ld   $85
              6c78 00be  ld   $be
              6c79 0074  ld   $74
              6c7a 0095  ld   $95
              6c7b 005a  ld   $5a
              6c7c 00b8  ld   $b8
              6c7d 00dc  ld   $dc
              6c7e 00c3  ld   $c3
              6c7f 0087  ld   $87
              6c80 0005  ld   $05
              6c81 0095  ld   $95
              6c82 0058  ld   $58
              6c83 00b8  ld   $b8
              6c84 00d8  ld   $d8
              6c85 00c3  ld   $c3
              6c86 0077  ld   $77
              6c87 0005  ld   $05
              6c88 0063  ld   $63
              6c89 00ff  ld   $ff
              6c8a 00b4  ld   $b4
              6c8b 0080  ld   $80
              6c8c 0060  ld   $60
              6c8d 00a0  ld   $a0
              6c8e 003c  ld   $3c
              6c8f 0050  ld   $50
              6c90 0055  ld   $55
              6c91 005a  ld   $5a
              6c92 005f  ld   $5f
              6c93 0064  ld   $64
              6c94 0068  ld   $68
              6c95 006c  ld   $6c
              6c96 0070  ld   $70
              6c97 0074  ld   $74
              6c98 0077  ld   $77
              6c99 007a  ld   $7a
              6c9a 007c  ld   $7c
              6c9b 007e  ld   $7e
              6c9c 007f  ld   $7f
              6c9d 0080  ld   $80
              6c9e 0080  ld   $80
              6c9f 0080  ld   $80
              6ca0 007f  ld   $7f
              6ca1 007e  ld   $7e
              6ca2 007c  ld   $7c
              6ca3 007a  ld   $7a
              6ca4 0077  ld   $77
              6ca5 0074  ld   $74
              6ca6 0070  ld   $70
              6ca7 006c  ld   $6c
              6ca8 0068  ld   $68
              6ca9 0064  ld   $64
              6caa 005f  ld   $5f
              6cab 005a  ld   $5a
              6cac 0055  ld   $55
              6cad 0050  ld   $50
              6cae 004b  ld   $4b
              6caf 0046  ld   $46
              6cb0 0041  ld   $41
              6cb1 003c  ld   $3c
              6cb2 0038  ld   $38
              6cb3 0034  ld   $34
              6cb4 0030  ld   $30
              6cb5 002c  ld   $2c
              6cb6 0029  ld   $29
              6cb7 0026  ld   $26
              6cb8 0024  ld   $24
              6cb9 0022  ld   $22
              6cba 0021  ld   $21
              6cbb 0020  ld   $20
              6cbc 0020  ld   $20
              6cbd 0020  ld   $20
              6cbe 0021  ld   $21
              6cbf 0022  ld   $22
              6cc0 0024  ld   $24
              6cc1 0026  ld   $26
              6cc2 0029  ld   $29
              6cc3 002c  ld   $2c
              6cc4 0030  ld   $30
              6cc5 0034  ld   $34
              6cc6 0038  ld   $38
              6cc7 003c  ld   $3c
              6cc8 0041  ld   $41
              6cc9 0046  ld   $46
              6cca 004b  ld   $4b
              6ccb 0061  ld   $61
              6ccc 00a0  ld   $a0
              6ccd 003c  ld   $3c
              6cce 000b  ld   $0b
              6ccf 000b  ld   $0b
              6cd0 000c  ld   $0c
              6cd1 000d  ld   $0d
              6cd2 000f  ld   $0f
              6cd3 0011  ld   $11
              6cd4 0014  ld   $14
              6cd5 0017  ld   $17
              6cd6 001b  ld   $1b
              6cd7 001f  ld   $1f
              6cd8 0023  ld   $23
              6cd9 0027  ld   $27
              6cda 002c  ld   $2c
              6cdb 0031  ld   $31
              6cdc 0036  ld   $36
              6cdd 003b  ld   $3b
              6cde 0040  ld   $40
              6cdf 0045  ld   $45
              6ce0 004a  ld   $4a
              6ce1 004f  ld   $4f
              6ce2 0053  ld   $53
              6ce3 0057  ld   $57
              6ce4 005b  ld   $5b
              6ce5 005f  ld   $5f
              6ce6 0062  ld   $62
              6ce7 0065  ld   $65
              6ce8 0067  ld   $67
              6ce9 0069  ld   $69
              6cea 006a  ld   $6a
              6ceb 006b  ld   $6b
              6cec 006b  ld   $6b
              6ced 006b  ld   $6b
              6cee 006a  ld   $6a
              6cef 0069  ld   $69
              6cf0 0067  ld   $67
              6cf1 0065  ld   $65
              6cf2 0062  ld   $62
              6cf3 005f  ld   $5f
              6cf4 005b  ld   $5b
              6cf5 0057  ld   $57
              6cf6 0053  ld   $53
              6cf7 004f  ld   $4f
              6cf8 004a  ld   $4a
              6cf9 0045  ld   $45
              6cfa 0040  ld   $40
              6cfb fe00  bra  ac          ;+-----------------------------------+
              6cfc fcfd  bra  $6cfd       ;|                                   |
              6cfd 1418  ld   $18,y       ;| Trampoline for page $6c00 lookups |
              6cfe e006  jmp  y,$06       ;|                                   |
              6cff c218  st   [$18]       ;+-----------------------------------+
              6d00 003b  ld   $3b
              6d01 0036  ld   $36
              6d02 0031  ld   $31
              6d03 002c  ld   $2c
              6d04 0027  ld   $27
              6d05 0023  ld   $23
              6d06 001f  ld   $1f
              6d07 001b  ld   $1b
              6d08 0017  ld   $17
              6d09 0014  ld   $14
              6d0a 0011  ld   $11
              6d0b 000f  ld   $0f
              6d0c 000d  ld   $0d
              6d0d 000c  ld   $0c
              6d0e 000b  ld   $0b
              6d0f 0062  ld   $62
              6d10 00a0  ld   $a0
              6d11 003c  ld   $3c
              6d12 0050  ld   $50
              6d13 0054  ld   $54
              6d14 0058  ld   $58
              6d15 005c  ld   $5c
              6d16 0060  ld   $60
              6d17 0064  ld   $64
              6d18 0068  ld   $68
              6d19 006b  ld   $6b
              6d1a 006e  ld   $6e
              6d1b 0070  ld   $70
              6d1c 0073  ld   $73
              6d1d 0075  ld   $75
              6d1e 0076  ld   $76
              6d1f 0077  ld   $77
              6d20 0078  ld   $78
              6d21 0078  ld   $78
              6d22 0078  ld   $78
              6d23 0077  ld   $77
              6d24 0076  ld   $76
              6d25 0075  ld   $75
              6d26 0073  ld   $73
              6d27 0070  ld   $70
              6d28 006e  ld   $6e
              6d29 006b  ld   $6b
              6d2a 0068  ld   $68
              6d2b 0064  ld   $64
              6d2c 0060  ld   $60
              6d2d 005c  ld   $5c
              6d2e 0058  ld   $58
              6d2f 0054  ld   $54
              6d30 0050  ld   $50
              6d31 004c  ld   $4c
              6d32 0048  ld   $48
              6d33 0044  ld   $44
              6d34 0040  ld   $40
              6d35 003c  ld   $3c
              6d36 0038  ld   $38
              6d37 0035  ld   $35
              6d38 0032  ld   $32
              6d39 0030  ld   $30
              6d3a 002d  ld   $2d
              6d3b 002b  ld   $2b
              6d3c 002a  ld   $2a
              6d3d 0029  ld   $29
              6d3e 0028  ld   $28
              6d3f 0028  ld   $28
              6d40 0028  ld   $28
              6d41 0029  ld   $29
              6d42 002a  ld   $2a
              6d43 002b  ld   $2b
              6d44 002d  ld   $2d
              6d45 0030  ld   $30
              6d46 0032  ld   $32
              6d47 0035  ld   $35
              6d48 0038  ld   $38
              6d49 003c  ld   $3c
              6d4a 0040  ld   $40
              6d4b 0044  ld   $44
              6d4c 0048  ld   $48
              6d4d 004c  ld   $4c
              6d4e 0063  ld   $63
              6d4f 00a0  ld   $a0
              6d50 003c  ld   $3c
              6d51 0013  ld   $13
              6d52 0013  ld   $13
              6d53 0014  ld   $14
              6d54 0015  ld   $15
              6d55 0016  ld   $16
              6d56 0018  ld   $18
              6d57 001b  ld   $1b
              6d58 001d  ld   $1d
              6d59 0020  ld   $20
              6d5a 0023  ld   $23
              6d5b 0027  ld   $27
              6d5c 002b  ld   $2b
              6d5d 002f  ld   $2f
              6d5e 0033  ld   $33
              6d5f 0037  ld   $37
              6d60 003b  ld   $3b
              6d61 003f  ld   $3f
              6d62 0043  ld   $43
              6d63 0047  ld   $47
              6d64 004b  ld   $4b
              6d65 004f  ld   $4f
              6d66 0053  ld   $53
              6d67 0056  ld   $56
              6d68 0059  ld   $59
              6d69 005b  ld   $5b
              6d6a 005e  ld   $5e
              6d6b 0060  ld   $60
              6d6c 0061  ld   $61
              6d6d 0062  ld   $62
              6d6e 0063  ld   $63
              6d6f 0063  ld   $63
              6d70 0063  ld   $63
              6d71 0062  ld   $62
              6d72 0061  ld   $61
              6d73 0060  ld   $60
              6d74 005e  ld   $5e
              6d75 005b  ld   $5b
              6d76 0059  ld   $59
              6d77 0056  ld   $56
              6d78 0053  ld   $53
              6d79 004f  ld   $4f
              6d7a 004b  ld   $4b
              6d7b 0047  ld   $47
              6d7c 0043  ld   $43
              6d7d 003f  ld   $3f
              6d7e 003b  ld   $3b
              6d7f 0037  ld   $37
              6d80 0033  ld   $33
              6d81 002f  ld   $2f
              6d82 002b  ld   $2b
              6d83 0027  ld   $27
              6d84 0023  ld   $23
              6d85 0020  ld   $20
              6d86 001d  ld   $1d
              6d87 001b  ld   $1b
              6d88 0018  ld   $18
              6d89 0016  ld   $16
              6d8a 0015  ld   $15
              6d8b 0014  ld   $14
              6d8c 0013  ld   $13
              6d8d 0064  ld   $64
              6d8e 00a0  ld   $a0
              6d8f 003c  ld   $3c
              6d90 0050  ld   $50
              6d91 0053  ld   $53
              6d92 0057  ld   $57
              6d93 005a  ld   $5a
              6d94 005d  ld   $5d
              6d95 0060  ld   $60
              6d96 0063  ld   $63
              6d97 0065  ld   $65
              6d98 0068  ld   $68
              6d99 006a  ld   $6a
              6d9a 006c  ld   $6c
              6d9b 006d  ld   $6d
              6d9c 006e  ld   $6e
              6d9d 006f  ld   $6f
              6d9e 0070  ld   $70
              6d9f 0070  ld   $70
              6da0 0070  ld   $70
              6da1 006f  ld   $6f
              6da2 006e  ld   $6e
              6da3 006d  ld   $6d
              6da4 006c  ld   $6c
              6da5 006a  ld   $6a
              6da6 0068  ld   $68
              6da7 0065  ld   $65
              6da8 0063  ld   $63
              6da9 0060  ld   $60
              6daa 005d  ld   $5d
              6dab 005a  ld   $5a
              6dac 0057  ld   $57
              6dad 0053  ld   $53
              6dae 0050  ld   $50
              6daf 004d  ld   $4d
              6db0 0049  ld   $49
              6db1 0046  ld   $46
              6db2 0043  ld   $43
              6db3 0040  ld   $40
              6db4 003d  ld   $3d
              6db5 003b  ld   $3b
              6db6 0038  ld   $38
              6db7 0036  ld   $36
              6db8 0034  ld   $34
              6db9 0033  ld   $33
              6dba 0032  ld   $32
              6dbb 0031  ld   $31
              6dbc 0030  ld   $30
              6dbd 0030  ld   $30
              6dbe 0030  ld   $30
              6dbf 0031  ld   $31
              6dc0 0032  ld   $32
              6dc1 0033  ld   $33
              6dc2 0034  ld   $34
              6dc3 0036  ld   $36
              6dc4 0038  ld   $38
              6dc5 003b  ld   $3b
              6dc6 003d  ld   $3d
              6dc7 0040  ld   $40
              6dc8 0043  ld   $43
              6dc9 0046  ld   $46
              6dca 0049  ld   $49
              6dcb 004d  ld   $4d
              6dcc 0065  ld   $65
              6dcd 00a0  ld   $a0
              6dce 003c  ld   $3c
              6dcf 001b  ld   $1b
              6dd0 001b  ld   $1b
              6dd1 001c  ld   $1c
              6dd2 001d  ld   $1d
              6dd3 001e  ld   $1e
              6dd4 001f  ld   $1f
              6dd5 0021  ld   $21
              6dd6 0023  ld   $23
              6dd7 0026  ld   $26
              6dd8 0028  ld   $28
              6dd9 002b  ld   $2b
              6dda 002e  ld   $2e
              6ddb 0031  ld   $31
              6ddc 0034  ld   $34
              6ddd 0038  ld   $38
              6dde 003b  ld   $3b
              6ddf 003e  ld   $3e
              6de0 0042  ld   $42
              6de1 0045  ld   $45
              6de2 0048  ld   $48
              6de3 004b  ld   $4b
              6de4 004e  ld   $4e
              6de5 0050  ld   $50
              6de6 0053  ld   $53
              6de7 0055  ld   $55
              6de8 0057  ld   $57
              6de9 0058  ld   $58
              6dea 0059  ld   $59
              6deb 005a  ld   $5a
              6dec 005b  ld   $5b
              6ded 005b  ld   $5b
              6dee 005b  ld   $5b
              6def 005a  ld   $5a
              6df0 0059  ld   $59
              6df1 0058  ld   $58
              6df2 0057  ld   $57
              6df3 0055  ld   $55
              6df4 0053  ld   $53
              6df5 0050  ld   $50
              6df6 004e  ld   $4e
              6df7 004b  ld   $4b
              6df8 0048  ld   $48
              6df9 0045  ld   $45
              6dfa 0042  ld   $42
              6dfb fe00  bra  ac          ;+-----------------------------------+
              6dfc fcfd  bra  $6dfd       ;|                                   |
              6dfd 1418  ld   $18,y       ;| Trampoline for page $6d00 lookups |
              6dfe e006  jmp  y,$06       ;|                                   |
              6dff c218  st   [$18]       ;+-----------------------------------+
              6e00 003e  ld   $3e
              6e01 003b  ld   $3b
              6e02 0038  ld   $38
              6e03 0034  ld   $34
              6e04 0031  ld   $31
              6e05 002e  ld   $2e
              6e06 002b  ld   $2b
              6e07 0028  ld   $28
              6e08 0026  ld   $26
              6e09 0023  ld   $23
              6e0a 0021  ld   $21
              6e0b 001f  ld   $1f
              6e0c 001e  ld   $1e
              6e0d 001d  ld   $1d
              6e0e 001c  ld   $1c
              6e0f 001b  ld   $1b
              6e10 0066  ld   $66
              6e11 00a0  ld   $a0
              6e12 0008  ld   $08
              6e13 003f  ld   $3f
              6e14 0004  ld   $04
              6e15 0015  ld   $15
              6e16 0022  ld   $22
              6e17 002b  ld   $2b
              6e18 0031  ld   $31
              6e19 0036  ld   $36
              6e1a 0039  ld   $39
              6e1b 0069  ld   $69
              6e1c 00ac  ld   $ac
              6e1d 0039  ld   $39
              6e1e 004d  ld   $4d
              6e1f 0002  ld   $02
              6e20 00a4  ld   $a4
              6e21 00c7  ld   $c7
              6e22 00fb  ld   $fb
              6e23 0066  ld   $66
              6e24 00aa  ld   $aa
              6e25 00ff  ld   $ff
              6e26 002f  ld   $2f
              6e27 00d6  ld   $d6
              6e28 006e  ld   $6e
              6e29 00a4  ld   $a4
              6e2a 0082  ld   $82
              6e2b 00b2  ld   $b2
              6e2c 0069  ld   $69
              6e2d 00ff  ld   $ff
              6e2e 0032  ld   $32
              6e2f 0024  ld   $24
              6e30 00a2  ld   $a2
              6e31 0021  ld   $21
              6e32 00a4  ld   $a4
              6e33 002f  ld   $2f
              6e34 0028  ld   $28
              6e35 0059  ld   $59
              6e36 00ff  ld   $ff
              6e37 0011  ld   $11
              6e38 0000  ld   $00
              6e39 000b  ld   $0b
              6e3a 002b  ld   $2b
              6e3b 0022  ld   $22
              6e3c 0021  ld   $21
              6e3d 0082  ld   $82
              6e3e 00b4  ld   $b4
              6e3f 00e6  ld   $e6
              6e40 00ff  ld   $ff
              6e41 0011  ld   $11
              6e42 00e0  ld   $e0
              6e43 006b  ld   $6b
              6e44 0025  ld   $25
              6e45 0075  ld   $75
              6e46 0011  ld   $11
              6e47 00e8  ld   $e8
              6e48 006b  ld   $6b
              6e49 007d  ld   $7d
              6e4a 0084  ld   $84
              6e4b 00ff  ld   $ff
              6e4c 001a  ld   $1a
              6e4d 002d  ld   $2d
              6e4e 0035  ld   $35
              6e4f 0072  ld   $72
              6e50 00e2  ld   $e2
              6e51 0075  ld   $75
              6e52 0085  ld   $85
              6e53 00cd  ld   $cd
              6e54 0070  ld   $70
              6e55 0063  ld   $63
              6e56 00ff  ld   $ff
              6e57 0069  ld   $69
              6e58 00e6  ld   $e6
              6e59 0019  ld   $19
              6e5a 0011  ld   $11
              6e5b 00a8  ld   $a8
              6e5c 007d  ld   $7d
              6e5d 002f  ld   $2f
              6e5e 0092  ld   $92
              6e5f 0047  ld   $47
              6e60 00e3  ld   $e3
              6e61 0008  ld   $08
              6e62 002f  ld   $2f
              6e63 009a  ld   $9a
              6e64 0047  ld   $47
              6e65 00ff  ld   $ff
              6e66 0075  ld   $75
              6e67 005e  ld   $5e
              6e68 0092  ld   $92
              6e69 0085  ld   $85
              6e6a 00ac  ld   $ac
              6e6b 006b  ld   $6b
              6e6c 001a  ld   $1a
              6e6d 0092  ld   $92
              6e6e 0085  ld   $85
              6e6f 00a0  ld   $a0
              6e70 007b  ld   $7b
              6e71 0063  ld   $63
              6e72 00ff  ld   $ff
              6e73 006a  ld   $6a
              6e74 00a7  ld   $a7
              6e75 0058  ld   $58
              6e76 0075  ld   $75
              6e77 00c7  ld   $c7
              6e78 0002  ld   $02
              6e79 0069  ld   $69
              6e7a 00aa  ld   $aa
              6e7b 0085  ld   $85
              6e7c 00b7  ld   $b7
              6e7d 0077  ld   $77
              6e7e 00c7  ld   $c7
              6e7f 00fd  ld   $fd
              6e80 0066  ld   $66
              6e81 00aa  ld   $aa
              6e82 0063  ld   $63
              6e83 00ff  ld   $ff
              6e84 0011  ld   $11
              6e85 00a0  ld   $a0
              6e86 007f  ld   $7f
              6e87 002b  ld   $2b
              6e88 0098  ld   $98
              6e89 0046  ld   $46
              6e8a 0084  ld   $84
              6e8b 002b  ld   $2b
              6e8c 009a  ld   $9a
              6e8d 0023  ld   $23
              6e8e 0098  ld   $98
              6e8f 00d1  ld   $d1
              6e90 009a  ld   $9a
              6e91 0035  ld   $35
              6e92 0072  ld   $72
              6e93 00bc  ld   $bc
              6e94 00ff  ld   $ff
              6e95 0018  ld   $18
              6e96 0094  ld   $94
              6e97 0021  ld   $21
              6e98 0094  ld   $94
              6e99 002f  ld   $2f
              6e9a 0093  ld   $93
              6e9b 0024  ld   $24
              6e9c 001a  ld   $1a
              6e9d 0096  ld   $96
              6e9e 002f  ld   $2f
              6e9f 0093  ld   $93
              6ea0 002c  ld   $2c
              6ea1 001a  ld   $1a
              6ea2 0098  ld   $98
              6ea3 002f  ld   $2f
              6ea4 0093  ld   $93
              6ea5 002f  ld   $2f
              6ea6 00ff  ld   $ff
              6ea7 0075  ld   $75
              6ea8 0011  ld   $11
              6ea9 00a1  ld   $a1
              6eaa 007f  ld   $7f
              6eab 002b  ld   $2b
              6eac 0092  ld   $92
              6ead 0046  ld   $46
              6eae 0084  ld   $84
              6eaf 002b  ld   $2b
              6eb0 009a  ld   $9a
              6eb1 0021  ld   $21
              6eb2 0092  ld   $92
              6eb3 0085  ld   $85
              6eb4 00a1  ld   $a1
              6eb5 006f  ld   $6f
              6eb6 00f3  ld   $f3
              6eb7 009a  ld   $9a
              6eb8 0063  ld   $63
              6eb9 00ff  ld   $ff
              6eba 0075  ld   $75
              6ebb 002b  ld   $2b
              6ebc 0082  ld   $82
              6ebd 0085  ld   $85
              6ebe 00ac  ld   $ac
              6ebf 006b  ld   $6b
              6ec0 0093  ld   $93
              6ec1 0082  ld   $82
              6ec2 0023  ld   $23
              6ec3 0082  ld   $82
              6ec4 0035  ld   $35
              6ec5 003f  ld   $3f
              6ec6 00fb  ld   $fb
              6ec7 0085  ld   $85
              6ec8 00a0  ld   $a0
              6ec9 007b  ld   $7b
              6eca 0090  ld   $90
              6ecb 00f1  ld   $f1
              6ecc 0063  ld   $63
              6ecd 00ff  ld   $ff
              6ece 006b  ld   $6b
              6ecf 00a0  ld   $a0
              6ed0 005f  ld   $5f
              6ed1 0011  ld   $11
              6ed2 00a8  ld   $a8
              6ed3 007d  ld   $7d
              6ed4 002f  ld   $2f
              6ed5 0092  ld   $92
              6ed6 0045  ld   $45
              6ed7 00e3  ld   $e3
              6ed8 0008  ld   $08
              6ed9 002f  ld   $2f
              6eda 009a  ld   $9a
              6edb 0045  ld   $45
              6edc 00ff  ld   $ff
              6edd 00c7  ld   $c7
              6ede 0010  ld   $10
              6edf 006f  ld   $6f
              6ee0 00aa  ld   $aa
              6ee1 00bd  ld   $bd
              6ee2 00ba  ld   $ba
              6ee3 0069  ld   $69
              6ee4 0011  ld   $11
              6ee5 00e1  ld   $e1
              6ee6 0004  ld   $04
              6ee7 002b  ld   $2b
              6ee8 0022  ld   $22
              6ee9 0032  ld   $32
              6eea 0024  ld   $24
              6eeb 00a2  ld   $a2
              6eec 0021  ld   $21
              6eed 00a4  ld   $a4
              6eee 002f  ld   $2f
              6eef 0028  ld   $28
              6ef0 0059  ld   $59
              6ef1 00ff  ld   $ff
              6ef2 002b  ld   $2b
              6ef3 0082  ld   $82
              6ef4 00e6  ld   $e6
              6ef5 000a  ld   $0a
              6ef6 0035  ld   $35
              6ef7 0050  ld   $50
              6ef8 00cc  ld   $cc
              6ef9 002b  ld   $2b
              6efa 0082  ld   $82
              6efb fe00  bra  ac          ;+-----------------------------------+
              6efc fcfd  bra  $6efd       ;|                                   |
              6efd 1418  ld   $18,y       ;| Trampoline for page $6e00 lookups |
              6efe e006  jmp  y,$06       ;|                                   |
              6eff c218  st   [$18]       ;+-----------------------------------+
              6f00 0093  ld   $93
              6f01 0084  ld   $84
              6f02 0090  ld   $90
              6f03 00c1  ld   $c1
              6f04 00c7  ld   $c7
              6f05 0030  ld   $30
              6f06 0072  ld   $72
              6f07 0084  ld   $84
              6f08 00d1  ld   $d1
              6f09 0086  ld   $86
              6f0a 00c7  ld   $c7
              6f0b 0030  ld   $30
              6f0c 0072  ld   $72
              6f0d 0082  ld   $82
              6f0e 00d1  ld   $d1
              6f0f 0086  ld   $86
              6f10 0093  ld   $93
              6f11 0086  ld   $86
              6f12 0016  ld   $16
              6f13 0030  ld   $30
              6f14 0084  ld   $84
              6f15 00ff  ld   $ff
              6f16 00ff  ld   $ff
              6f17 00df  ld   $df
              6f18 00fe  ld   $fe
              6f19 0021  ld   $21
              6f1a 002a  ld   $2a
              6f1b 00ec  ld   $ec
              6f1c 0000  ld   $00
              6f1d 0085  ld   $85
              6f1e 0000  ld   $00
              6f1f 0000  ld   $00
              6f20 0090  ld   $90
              6f21 00ee  ld   $ee
              6f22 00ff  ld   $ff
              6f23 0090  ld   $90
              6f24 00ee  ld   $ee
              6f25 00ff  ld   $ff
              6f26 00ee  ld   $ee
              6f27 0000  ld   $00
              6f28 002b  ld   $2b
              6f29 002a  ld   $2a
              6f2a 00df  ld   $df
              6f2b 0002  ld   $02
              6f2c 0063  ld   $63
              6f2d 0016  ld   $16
              6f2e 00ff  ld   $ff
              6f2f 000e  ld   $0e
              6f30 0011  ld   $11
              6f31 0000  ld   $00
              6f32 0004  ld   $04
              6f33 007f  ld   $7f
              6f34 0000  ld   $00
              6f35 006c  ld   $6c
              6f36 00a5  ld   $a5
              6f37 005a  ld   $5a
              6f38 00c7  ld   $c7
              6f39 0094  ld   $94
              6f3a 0028  ld   $28
              6f3b 0092  ld   $92
              6f3c 0016  ld   $16
              6f3d 0003  ld   $03
              6f3e 0026  ld   $26
              6f3f 0021  ld   $21
              6f40 0028  ld   $28
              6f41 002f  ld   $2f
              6f42 0094  ld   $94
              6f43 0057  ld   $57
              6f44 001c  ld   $1c
              6f45 0028  ld   $28
              6f46 0028  ld   $28
              6f47 0004  ld   $04
              6f48 0075  ld   $75
              6f49 0085  ld   $85
              6f4a 00a2  ld   $a2
              6f4b 006e  ld   $6e
              6f4c 0063  ld   $63
              6f4d 00ff  ld   $ff
              6f4e 0075  ld   $75
              6f4f 004d  ld   $4d
              6f50 0000  ld   $00
              6f51 0084  ld   $84
              6f52 0011  ld   $11
              6f53 00d4  ld   $d4
              6f54 007b  ld   $7b
              6f55 002b  ld   $2b
              6f56 0086  ld   $86
              6f57 0011  ld   $11
              6f58 00df  ld   $df
              6f59 007b  ld   $7b
              6f5a 002b  ld   $2b
              6f5b 0088  ld   $88
              6f5c 00ad  ld   $ad
              6f5d 0085  ld   $85
              6f5e 00c1  ld   $c1
              6f5f 006b  ld   $6b
              6f60 0014  ld   $14
              6f61 0088  ld   $88
              6f62 005b  ld   $5b
              6f63 0088  ld   $88
              6f64 0085  ld   $85
              6f65 00c1  ld   $c1
              6f66 006b  ld   $6b
              6f67 0014  ld   $14
              6f68 0088  ld   $88
              6f69 005b  ld   $5b
              6f6a 0088  ld   $88
              6f6b 0085  ld   $85
              6f6c 00c1  ld   $c1
              6f6d 006b  ld   $6b
              6f6e 0063  ld   $63
              6f6f 00ff  ld   $ff
              6f70 001a  ld   $1a
              6f71 0082  ld   $82
              6f72 0099  ld   $99
              6f73 0096  ld   $96
              6f74 0099  ld   $99
              6f75 009c  ld   $9c
              6f76 0069  ld   $69
              6f77 00a3  ld   $a3
              6f78 001a  ld   $1a
              6f79 0082  ld   $82
              6f7a 00b8  ld   $b8
              6f7b 0096  ld   $96
              6f7c 0099  ld   $99
              6f7d 009c  ld   $9c
              6f7e 0069  ld   $69
              6f7f 00a3  ld   $a3
              6f80 001a  ld   $1a
              6f81 0082  ld   $82
              6f82 0099  ld   $99
              6f83 0096  ld   $96
              6f84 0099  ld   $99
              6f85 009e  ld   $9e
              6f86 0069  ld   $69
              6f87 00a3  ld   $a3
              6f88 001a  ld   $1a
              6f89 0082  ld   $82
              6f8a 00b8  ld   $b8
              6f8b 0096  ld   $96
              6f8c 0099  ld   $99
              6f8d 009e  ld   $9e
              6f8e 0069  ld   $69
              6f8f 00a3  ld   $a3
              6f90 0063  ld   $63
              6f91 00ff  ld   $ff
              6f92 006d  ld   $6d
              6f93 00a4  ld   $a4
              6f94 005b  ld   $5b
              6f95 0085  ld   $85
              6f96 00e6  ld   $e6
              6f97 0069  ld   $69
              6f98 0059  ld   $59
              6f99 007f  ld   $7f
              6f9a 002b  ld   $2b
              6f9b 0092  ld   $92
              6f9c 0085  ld   $85
              6f9d 00a1  ld   $a1
              6f9e 0070  ld   $70
              6f9f 0085  ld   $85
              6fa0 00a0  ld   $a0
              6fa1 006b  ld   $6b
              6fa2 0085  ld   $85
              6fa3 00a6  ld   $a6
              6fa4 0079  ld   $79
              6fa5 0035  ld   $35
              6fa6 003f  ld   $3f
              6fa7 00a2  ld   $a2
              6fa8 0085  ld   $85
              6fa9 00ba  ld   $ba
              6faa 0076  ld   $76
              6fab 0021  ld   $21
              6fac 0024  ld   $24
              6fad 00fc  ld   $fc
              6fae 0026  ld   $26
              6faf 002b  ld   $2b
              6fb0 009e  ld   $9e
              6fb1 002f  ld   $2f
              6fb2 0024  ld   $24
              6fb3 0067  ld   $67
              6fb4 002f  ld   $2f
              6fb5 0026  ld   $26
              6fb6 0067  ld   $67
              6fb7 004d  ld   $4d
              6fb8 00a1  ld   $a1
              6fb9 0022  ld   $22
              6fba 004d  ld   $4d
              6fbb 0000  ld   $00
              6fbc 0028  ld   $28
              6fbd 004d  ld   $4d
              6fbe 0001  ld   $01
              6fbf 002a  ld   $2a
              6fc0 00b4  ld   $b4
              6fc1 00e6  ld   $e6
              6fc2 0021  ld   $21
              6fc3 009e  ld   $9e
              6fc4 0035  ld   $35
              6fc5 0053  ld   $53
              6fc6 00d7  ld   $d7
              6fc7 002f  ld   $2f
              6fc8 0024  ld   $24
              6fc9 0017  ld   $17
              6fca 0021  ld   $21
              6fcb 0024  ld   $24
              6fcc 00ff  ld   $ff
              6fcd 00c7  ld   $c7
              6fce 0010  ld   $10
              6fcf 006f  ld   $6f
              6fd0 00aa  ld   $aa
              6fd1 00bd  ld   $bd
              6fd2 009e  ld   $9e
              6fd3 0075  ld   $75
              6fd4 00a7  ld   $a7
              6fd5 009a  ld   $9a
              6fd6 00a4  ld   $a4
              6fd7 0035  ld   $35
              6fd8 0056  ld   $56
              6fd9 00ea  ld   $ea
              6fda 0016  ld   $16
              6fdb 0000  ld   $00
              6fdc 00a4  ld   $a4
              6fdd 00a7  ld   $a7
              6fde 0070  ld   $70
              6fdf 00a5  ld   $a5
              6fe0 0035  ld   $35
              6fe1 0050  ld   $50
              6fe2 00f8  ld   $f8
              6fe3 0016  ld   $16
              6fe4 0070  ld   $70
              6fe5 00a5  ld   $a5
              6fe6 00c7  ld   $c7
              6fe7 0004  ld   $04
              6fe8 0069  ld   $69
              6fe9 00aa  ld   $aa
              6fea 00ff  ld   $ff
              6feb 00c7  ld   $c7
              6fec 00fb  ld   $fb
              6fed 0066  ld   $66
              6fee 00aa  ld   $aa
              6fef 00ff  ld   $ff
              6ff0 006e  ld   $6e
              6ff1 00a2  ld   $a2
              6ff2 005d  ld   $5d
              6ff3 001c  ld   $1c
              6ff4 00a4  ld   $a4
              6ff5 00a4  ld   $a4
              6ff6 0004  ld   $04
              6ff7 00a7  ld   $a7
              6ff8 009c  ld   $9c
              6ff9 00a4  ld   $a4
              6ffa 0035  ld   $35
              6ffb fe00  bra  ac          ;+-----------------------------------+
              6ffc fcfd  bra  $6ffd       ;|                                   |
              6ffd 1418  ld   $18,y       ;| Trampoline for page $6f00 lookups |
              6ffe e006  jmp  y,$06       ;|                                   |
              6fff c218  st   [$18]       ;+-----------------------------------+
              7000 0056  ld   $56
              7001 00b6  ld   $b6
              7002 00c7  ld   $c7
              7003 0008  ld   $08
              7004 006f  ld   $6f
              7005 00aa  ld   $aa
              7006 0035  ld   $35
              7007 0072  ld   $72
              7008 00b6  ld   $b6
              7009 0075  ld   $75
              700a 0085  ld   $85
              700b 00be  ld   $be
              700c 0073  ld   $73
              700d 0063  ld   $63
              700e 00ff  ld   $ff
              700f 0075  ld   $75
              7010 0011  ld   $11
              7011 0003  ld   $03
              7012 000b  ld   $0b
              7013 002b  ld   $2b
              7014 0022  ld   $22
              7015 0065  ld   $65
              7016 0025  ld   $25
              7017 00a2  ld   $a2
              7018 0011  ld   $11
              7019 0000  ld   $00
              701a 0001  ld   $01
              701b 0067  ld   $67
              701c 0027  ld   $27
              701d 004d  ld   $4d
              701e 0006  ld   $06
              701f 009e  ld   $9e
              7020 0016  ld   $16
              7021 00a0  ld   $a0
              7022 0024  ld   $24
              7023 0016  ld   $16
              7024 0000  ld   $00
              7025 0026  ld   $26
              7026 00b4  ld   $b4
              7027 00f3  ld   $f3
              7028 0093  ld   $93
              7029 0027  ld   $27
              702a 009e  ld   $9e
              702b 00c8  ld   $c8
              702c 009e  ld   $9e
              702d 0085  ld   $85
              702e 00ac  ld   $ac
              702f 006b  ld   $6b
              7030 0063  ld   $63
              7031 00ff  ld   $ff
              7032 0075  ld   $75
              7033 0011  ld   $11
              7034 0003  ld   $03
              7035 000b  ld   $0b
              7036 002b  ld   $2b
              7037 0022  ld   $22
              7038 0065  ld   $65
              7039 0025  ld   $25
              703a 00a2  ld   $a2
              703b 0011  ld   $11
              703c 0000  ld   $00
              703d 0001  ld   $01
              703e 0067  ld   $67
              703f 0027  ld   $27
              7040 004d  ld   $4d
              7041 0008  ld   $08
              7042 009e  ld   $9e
              7043 0016  ld   $16
              7044 00a0  ld   $a0
              7045 0024  ld   $24
              7046 0016  ld   $16
              7047 0000  ld   $00
              7048 0026  ld   $26
              7049 00b4  ld   $b4
              704a 00f3  ld   $f3
              704b 0093  ld   $93
              704c 0027  ld   $27
              704d 009e  ld   $9e
              704e 00eb  ld   $eb
              704f 009e  ld   $9e
              7050 0085  ld   $85
              7051 00ac  ld   $ac
              7052 006b  ld   $6b
              7053 0063  ld   $63
              7054 00ff  ld   $ff
              7055 006f  ld   $6f
              7056 00a1  ld   $a1
              7057 005e  ld   $5e
              7058 002b  ld   $2b
              7059 0092  ld   $92
              705a 004d  ld   $4d
              705b 0000  ld   $00
              705c 0096  ld   $96
              705d 005b  ld   $5b
              705e 0092  ld   $92
              705f 00e6  ld   $e6
              7060 002d  ld   $2d
              7061 0035  ld   $35
              7062 0072  ld   $72
              7063 00ad  ld   $ad
              7064 0093  ld   $93
              7065 0092  ld   $92
              7066 005b  ld   $5b
              7067 0092  ld   $92
              7068 00e6  ld   $e6
              7069 0030  ld   $30
              706a 0035  ld   $35
              706b 0050  ld   $50
              706c 00c7  ld   $c7
              706d 002b  ld   $2b
              706e 0094  ld   $94
              706f 00e6  ld   $e6
              7070 0009  ld   $09
              7071 0035  ld   $35
              7072 004d  ld   $4d
              7073 00c7  ld   $c7
              7074 0021  ld   $21
              7075 0096  ld   $96
              7076 00b1  ld   $b1
              7077 0055  ld   $55
              7078 0099  ld   $99
              7079 0094  ld   $94
              707a 002b  ld   $2b
              707b 0096  ld   $96
              707c 0093  ld   $93
              707d 0092  ld   $92
              707e 0090  ld   $90
              707f 00ad  ld   $ad
              7080 002f  ld   $2f
              7081 0096  ld   $96
              7082 0067  ld   $67
              7083 0021  ld   $21
              7084 0096  ld   $96
              7085 00ff  ld   $ff
              7086 002b  ld   $2b
              7087 0094  ld   $94
              7088 0023  ld   $23
              7089 0084  ld   $84
              708a 002b  ld   $2b
              708b 0088  ld   $88
              708c 0023  ld   $23
              708d 0094  ld   $94
              708e 002b  ld   $2b
              708f 009c  ld   $9c
              7090 0023  ld   $23
              7091 0084  ld   $84
              7092 0035  ld   $35
              7093 003f  ld   $3f
              7094 00ed  ld   $ed
              7095 002b  ld   $2b
              7096 0082  ld   $82
              7097 0023  ld   $23
              7098 0094  ld   $94
              7099 00b8  ld   $b8
              709a 0082  ld   $82
              709b 0035  ld   $35
              709c 0050  ld   $50
              709d 00fa  ld   $fa
              709e 0035  ld   $35
              709f 004d  ld   $4d
              70a0 00ea  ld   $ea
              70a1 0090  ld   $90
              70a2 00d7  ld   $d7
              70a3 0059  ld   $59
              70a4 0000  ld   $00
              70a5 00ff  ld   $ff
              70a6 0021  ld   $21
              70a7 0088  ld   $88
              70a8 00b8  ld   $b8
              70a9 009c  ld   $9c
              70aa 0035  ld   $35
              70ab 0050  ld   $50
              70ac 00ea  ld   $ea
              70ad 0035  ld   $35
              70ae 004d  ld   $4d
              70af 00fa  ld   $fa
              70b0 0059  ld   $59
              70b1 0001  ld   $01
              70b2 00ff  ld   $ff
              70b3 0059  ld   $59
              70b4 0002  ld   $02
              70b5 00ff  ld   $ff
              70b6 0070  ld   $70
              70b7 00a1  ld   $a1
              70b8 005e  ld   $5e
              70b9 0075  ld   $75
              70ba 008c  ld   $8c
              70bb 007f  ld   $7f
              70bc 0035  ld   $35
              70bd 0072  ld   $72
              70be 00af  ld   $af
              70bf 00c7  ld   $c7
              70c0 0020  ld   $20
              70c1 006f  ld   $6f
              70c2 002d  ld   $2d
              70c3 0035  ld   $35
              70c4 0072  ld   $72
              70c5 00af  ld   $af
              70c6 004d  ld   $4d
              70c7 0020  ld   $20
              70c8 0092  ld   $92
              70c9 0032  ld   $32
              70ca 00a4  ld   $a4
              70cb 009a  ld   $9a
              70cc 0021  ld   $21
              70cd 0092  ld   $92
              70ce 0085  ld   $85
              70cf 00f2  ld   $f2
              70d0 0069  ld   $69
              70d1 0063  ld   $63
              70d2 00ff  ld   $ff
              70d3 00a7  ld   $a7
              70d4 00ff  ld   $ff
              70d5 0082  ld   $82
              70d6 0035  ld   $35
              70d7 003f  ld   $3f
              70d8 00ca  ld   $ca
              70d9 0011  ld   $11
              70da 0008  ld   $08
              70db 0020  ld   $20
              70dc 0018  ld   $18
              70dd 0018  ld   $18
              70de 002f  ld   $2f
              70df 0000  ld   $00
              70e0 0027  ld   $27
              70e1 0016  ld   $16
              70e2 0002  ld   $02
              70e3 002c  ld   $2c
              70e4 00ff  ld   $ff
              70e5 0011  ld   $11
              70e6 00dd  ld   $dd
              70e7 007b  ld   $7b
              70e8 002b  ld   $2b
              70e9 008a  ld   $8a
              70ea 00ad  ld   $ad
              70eb 00e3  ld   $e3
              70ec 0001  ld   $01
              70ed 00f0  ld   $f0
              70ee 008a  ld   $8a
              70ef 008c  ld   $8c
              70f0 003c  ld   $3c
              70f1 0035  ld   $35
              70f2 0072  ld   $72
              70f3 00fc  ld   $fc
              70f4 0059  ld   $59
              70f5 0000  ld   $00
              70f6 00d1  ld   $d1
              70f7 008a  ld   $8a
              70f8 005b  ld   $5b
              70f9 008a  ld   $8a
              70fa 00e3  ld   $e3
              70fb fe00  bra  ac          ;+-----------------------------------+
              70fc fcfd  bra  $70fd       ;|                                   |
              70fd 1418  ld   $18,y       ;| Trampoline for page $7000 lookups |
              70fe e006  jmp  y,$06       ;|                                   |
              70ff c218  st   [$18]       ;+-----------------------------------+
              7100 0001  ld   $01
              7101 00f0  ld   $f0
              7102 008a  ld   $8a
              7103 008c  ld   $8c
              7104 003c  ld   $3c
              7105 0035  ld   $35
              7106 0072  ld   $72
              7107 00fc  ld   $fc
              7108 0059  ld   $59
              7109 0000  ld   $00
              710a 00d1  ld   $d1
              710b 008a  ld   $8a
              710c 005b  ld   $5b
              710d 008a  ld   $8a
              710e 00e3  ld   $e3
              710f 0001  ld   $01
              7110 00f0  ld   $f0
              7111 008a  ld   $8a
              7112 00e6  ld   $e6
              7113 0018  ld   $18
              7114 0035  ld   $35
              7115 0050  ld   $50
              7116 00fc  ld   $fc
              7117 0059  ld   $59
              7118 0000  ld   $00
              7119 00f0  ld   $f0
              711a 008a  ld   $8a
              711b 00ff  ld   $ff
              711c 0071  ld   $71
              711d 00a2  ld   $a2
              711e 005d  ld   $5d
              711f 001a  ld   $1a
              7120 0021  ld   $21
              7121 0082  ld   $82
              7122 00fc  ld   $fc
              7123 002b  ld   $2b
              7124 0084  ld   $84
              7125 00b8  ld   $b8
              7126 0082  ld   $82
              7127 0035  ld   $35
              7128 003f  ld   $3f
              7129 00c8  ld   $c8
              712a 0021  ld   $21
              712b 0082  ld   $82
              712c 00e6  ld   $e6
              712d 0080  ld   $80
              712e 0035  ld   $35
              712f 0072  ld   $72
              7130 00bb  ld   $bb
              7131 0021  ld   $21
              7132 0084  ld   $84
              7133 00b8  ld   $b8
              7134 0082  ld   $82
              7135 0035  ld   $35
              7136 003f  ld   $3f
              7137 00c8  ld   $c8
              7138 0090  ld   $90
              7139 00c2  ld   $c2
              713a 0021  ld   $21
              713b 0084  ld   $84
              713c 00b8  ld   $b8
              713d 0082  ld   $82
              713e 0035  ld   $35
              713f 004d  ld   $4d
              7140 00c8  ld   $c8
              7141 001a  ld   $1a
              7142 0006  ld   $06
              7143 00f0  ld   $f0
              7144 007e  ld   $7e
              7145 0090  ld   $90
              7146 00c2  ld   $c2
              7147 00ff  ld   $ff
              7148 0085  ld   $85
              7149 00e6  ld   $e6
              714a 0069  ld   $69
              714b 004d  ld   $4d
              714c 0020  ld   $20
              714d 0092  ld   $92
              714e 0085  ld   $85
              714f 00a1  ld   $a1
              7150 0070  ld   $70
              7151 0085  ld   $85
              7152 00a0  ld   $a0
              7153 006b  ld   $6b
              7154 0011  ld   $11
              7155 00a0  ld   $a0
              7156 007f  ld   $7f
              7157 002b  ld   $2b
              7158 0082  ld   $82
              7159 0021  ld   $21
              715a 0092  ld   $92
              715b 00b8  ld   $b8
              715c 0082  ld   $82
              715d 00e6  ld   $e6
              715e 0001  ld   $01
              715f 00f0  ld   $f0
              7160 0082  ld   $82
              7161 0099  ld   $99
              7162 0082  ld   $82
              7163 00e3  ld   $e3
              7164 0001  ld   $01
              7165 0025  ld   $25
              7166 0000  ld   $00
              7167 00c7  ld   $c7
              7168 003f  ld   $3f
              7169 006f  ld   $6f
              716a 0096  ld   $96
              716b 00e6  ld   $e6
              716c 0005  ld   $05
              716d 0035  ld   $35
              716e 0072  ld   $72
              716f 00f6  ld   $f6
              7170 0085  ld   $85
              7171 00b5  ld   $b5
              7172 006a  ld   $6a
              7173 0090  ld   $90
              7174 00f9  ld   $f9
              7175 0085  ld   $85
              7176 00d8  ld   $d8
              7177 006a  ld   $6a
              7178 0059  ld   $59
              7179 0001  ld   $01
              717a 0063  ld   $63
              717b 00ff  ld   $ff
              717c 0072  ld   $72
              717d 00a1  ld   $a1
              717e 005e  ld   $5e
              717f 0075  ld   $75
              7180 0085  ld   $85
              7181 00a0  ld   $a0
              7182 0078  ld   $78
              7183 004d  ld   $4d
              7184 0008  ld   $08
              7185 0094  ld   $94
              7186 0016  ld   $16
              7187 003c  ld   $3c
              7188 009e  ld   $9e
              7189 0016  ld   $16
              718a 00a0  ld   $a0
              718b 0024  ld   $24
              718c 0016  ld   $16
              718d 0000  ld   $00
              718e 0026  ld   $26
              718f 0065  ld   $65
              7190 0027  ld   $27
              7191 0094  ld   $94
              7192 00b4  ld   $b4
              7193 00f3  ld   $f3
              7194 0016  ld   $16
              7195 00a0  ld   $a0
              7196 0024  ld   $24
              7197 0016  ld   $16
              7198 0000  ld   $00
              7199 0026  ld   $26
              719a 0059  ld   $59
              719b 0087  ld   $87
              719c 00b8  ld   $b8
              719d 0094  ld   $94
              719e 005e  ld   $5e
              719f 0027  ld   $27
              71a0 00b4  ld   $b4
              71a1 00f3  ld   $f3
              71a2 0093  ld   $93
              71a3 0094  ld   $94
              71a4 009e  ld   $9e
              71a5 00a9  ld   $a9
              71a6 009e  ld   $9e
              71a7 0063  ld   $63
              71a8 00ff  ld   $ff
              71a9 0075  ld   $75
              71aa 0029  ld   $29
              71ab 0099  ld   $99
              71ac 0096  ld   $96
              71ad 0083  ld   $83
              71ae 0048  ld   $48
              71af 009b  ld   $9b
              71b0 0096  ld   $96
              71b1 0083  ld   $83
              71b2 0029  ld   $29
              71b3 009d  ld   $9d
              71b4 0094  ld   $94
              71b5 0083  ld   $83
              71b6 0048  ld   $48
              71b7 009f  ld   $9f
              71b8 0094  ld   $94
              71b9 0083  ld   $83
              71ba 001a  ld   $1a
              71bb 0082  ld   $82
              71bc 0099  ld   $99
              71bd 0094  ld   $94
              71be 0099  ld   $99
              71bf 0098  ld   $98
              71c0 0069  ld   $69
              71c1 00a3  ld   $a3
              71c2 001a  ld   $1a
              71c3 0082  ld   $82
              71c4 00b8  ld   $b8
              71c5 0094  ld   $94
              71c6 0099  ld   $99
              71c7 0098  ld   $98
              71c8 0069  ld   $69
              71c9 00a3  ld   $a3
              71ca 001a  ld   $1a
              71cb 0082  ld   $82
              71cc 0099  ld   $99
              71cd 0094  ld   $94
              71ce 0099  ld   $99
              71cf 009a  ld   $9a
              71d0 0069  ld   $69
              71d1 00a3  ld   $a3
              71d2 001a  ld   $1a
              71d3 0082  ld   $82
              71d4 00b8  ld   $b8
              71d5 0094  ld   $94
              71d6 0099  ld   $99
              71d7 009a  ld   $9a
              71d8 0069  ld   $69
              71d9 00a3  ld   $a3
              71da 0085  ld   $85
              71db 00dd  ld   $dd
              71dc 006c  ld   $6c
              71dd 0073  ld   $73
              71de 00a5  ld   $a5
              71df 005a  ld   $5a
              71e0 0032  ld   $32
              71e1 00a4  ld   $a4
              71e2 0098  ld   $98
              71e3 0085  ld   $85
              71e4 00e6  ld   $e6
              71e5 0069  ld   $69
              71e6 0011  ld   $11
              71e7 00a0  ld   $a0
              71e8 007f  ld   $7f
              71e9 0099  ld   $99
              71ea 0094  ld   $94
              71eb 0085  ld   $85
              71ec 00eb  ld   $eb
              71ed 006a  ld   $6a
              71ee 0085  ld   $85
              71ef 00a0  ld   $a0
              71f0 006b  ld   $6b
              71f1 00a9  ld   $a9
              71f2 009a  ld   $9a
              71f3 009c  ld   $9c
              71f4 009a  ld   $9a
              71f5 0059  ld   $59
              71f6 0000  ld   $00
              71f7 0063  ld   $63
              71f8 00ff  ld   $ff
              71f9 0059  ld   $59
              71fa 0000  ld   $00
              71fb fe00  bra  ac          ;+-----------------------------------+
              71fc fcfd  bra  $71fd       ;|                                   |
              71fd 1418  ld   $18,y       ;| Trampoline for page $7100 lookups |
              71fe e006  jmp  y,$06       ;|                                   |
              71ff c218  st   [$18]       ;+-----------------------------------+
              7200 005e  ld   $5e
              7201 00a4  ld   $a4
              7202 005e  ld   $5e
              7203 0028  ld   $28
              7204 00c7  ld   $c7
              7205 0002  ld   $02
              7206 006f  ld   $6f
              7207 00aa  ld   $aa
              7208 0035  ld   $35
              7209 0072  ld   $72
              720a 00ca  ld   $ca
              720b 00ff  ld   $ff
              720c 0075  ld   $75
              720d 00c7  ld   $c7
              720e 0004  ld   $04
              720f 006f  ld   $6f
              7210 00aa  ld   $aa
              7211 0035  ld   $35
              7212 0072  ld   $72
              7213 00df  ld   $df
              7214 001c  ld   $1c
              7215 00a5  ld   $a5
              7216 00a5  ld   $a5
              7217 0006  ld   $06
              7218 00a7  ld   $a7
              7219 0078  ld   $78
              721a 00a5  ld   $a5
              721b 0035  ld   $35
              721c 0050  ld   $50
              721d 00f8  ld   $f8
              721e 0016  ld   $16
              721f 0072  ld   $72
              7220 00a5  ld   $a5
              7221 0085  ld   $85
              7222 00b9  ld   $b9
              7223 006e  ld   $6e
              7224 0011  ld   $11
              7225 0000  ld   $00
              7226 0001  ld   $01
              7227 002b  ld   $2b
              7228 0026  ld   $26
              7229 0016  ld   $16
              722a 0006  ld   $06
              722b 0024  ld   $24
              722c 0016  ld   $16
              722d 0078  ld   $78
              722e 0025  ld   $25
              722f 0011  ld   $11
              7230 00c0  ld   $c0
              7231 0020  ld   $20
              7232 002b  ld   $2b
              7233 0022  ld   $22
              7234 00b4  ld   $b4
              7235 00fb  ld   $fb
              7236 00c7  ld   $c7
              7237 0004  ld   $04
              7238 0069  ld   $69
              7239 00aa  ld   $aa
              723a 0085  ld   $85
              723b 00bc  ld   $bc
              723c 0069  ld   $69
              723d 0063  ld   $63
              723e 00ff  ld   $ff
              723f 0074  ld   $74
              7240 00a3  ld   $a3
              7241 005c  ld   $5c
              7242 0059  ld   $59
              7243 0000  ld   $00
              7244 002f  ld   $2f
              7245 0000  ld   $00
              7246 0027  ld   $27
              7247 002f  ld   $2f
              7248 0001  ld   $01
              7249 0027  ld   $27
              724a 002f  ld   $2f
              724b 0002  ld   $02
              724c 0027  ld   $27
              724d 002f  ld   $2f
              724e 0003  ld   $03
              724f 0027  ld   $27
              7250 002f  ld   $2f
              7251 0000  ld   $00
              7252 005c  ld   $5c
              7253 002f  ld   $2f
              7254 0001  ld   $01
              7255 005c  ld   $5c
              7256 002f  ld   $2f
              7257 0002  ld   $02
              7258 005c  ld   $5c
              7259 002f  ld   $2f
              725a 0003  ld   $03
              725b 005c  ld   $5c
              725c 00ff  ld   $ff
              725d 0075  ld   $75
              725e 0059  ld   $59
              725f 0000  ld   $00
              7260 002b  ld   $2b
              7261 0098  ld   $98
              7262 002b  ld   $2b
              7263 009a  ld   $9a
              7264 002b  ld   $2b
              7265 009c  ld   $9c
              7266 002b  ld   $2b
              7267 009e  ld   $9e
              7268 002b  ld   $2b
              7269 0094  ld   $94
              726a 0032  ld   $32
              726b 0096  ld   $96
              726c 0086  ld   $86
              726d 0059  ld   $59
              726e 0001  ld   $01
              726f 00b8  ld   $b8
              7270 0086  ld   $86
              7271 002b  ld   $2b
              7272 0092  ld   $92
              7273 0085  ld   $85
              7274 00cb  ld   $cb
              7275 0072  ld   $72
              7276 0021  ld   $21
              7277 0092  ld   $92
              7278 0035  ld   $35
              7279 0053  ld   $53
              727a 00e6  ld   $e6
              727b 0021  ld   $21
              727c 0094  ld   $94
              727d 00e9  ld   $e9
              727e 00e9  ld   $e9
              727f 0099  ld   $99
              7280 0092  ld   $92
              7281 00e3  ld   $e3
              7282 0003  ld   $03
              7283 002b  ld   $2b
              7284 0092  ld   $92
              7285 0090  ld   $90
              7286 00f4  ld   $f4
              7287 0021  ld   $21
              7288 0094  ld   $94
              7289 00b8  ld   $b8
              728a 0096  ld   $96
              728b 00e9  ld   $e9
              728c 00e9  ld   $e9
              728d 0099  ld   $99
              728e 0092  ld   $92
              728f 00e3  ld   $e3
              7290 0005  ld   $05
              7291 002b  ld   $2b
              7292 0092  ld   $92
              7293 00dd  ld   $dd
              7294 0096  ld   $96
              7295 0095  ld   $95
              7296 0094  ld   $94
              7297 00b8  ld   $b8
              7298 0096  ld   $96
              7299 0035  ld   $35
              729a 0056  ld   $56
              729b 00d2  ld   $d2
              729c 0063  ld   $63
              729d 00ff  ld   $ff
              729e 0075  ld   $75
              729f 00a0  ld   $a0
              72a0 005f  ld   $5f
              72a1 00a7  ld   $a7
              72a2 009c  ld   $9c
              72a3 00a4  ld   $a4
              72a4 0035  ld   $35
              72a5 0056  ld   $56
              72a6 00a7  ld   $a7
              72a7 0016  ld   $16
              72a8 0000  ld   $00
              72a9 00a4  ld   $a4
              72aa 00a7  ld   $a7
              72ab 0072  ld   $72
              72ac 00a5  ld   $a5
              72ad 0035  ld   $35
              72ae 0050  ld   $50
              72af 00b5  ld   $b5
              72b0 0016  ld   $16
              72b1 0072  ld   $72
              72b2 00a5  ld   $a5
              72b3 00c7  ld   $c7
              72b4 0004  ld   $04
              72b5 0069  ld   $69
              72b6 00aa  ld   $aa
              72b7 00ff  ld   $ff
              72b8 00c7  ld   $c7
              72b9 00fb  ld   $fb
              72ba 0066  ld   $66
              72bb 00aa  ld   $aa
              72bc 00ff  ld   $ff
              72bd 001a  ld   $1a
              72be 0094  ld   $94
              72bf 0035  ld   $35
              72c0 003f  ld   $3f
              72c1 00d0  ld   $d0
              72c2 00e6  ld   $e6
              72c3 0001  ld   $01
              72c4 002b  ld   $2b
              72c5 0094  ld   $94
              72c6 004d  ld   $4d
              72c7 0000  ld   $00
              72c8 009c  ld   $9c
              72c9 0021  ld   $21
              72ca 0092  ld   $92
              72cb 0025  ld   $25
              72cc 0000  ld   $00
              72cd 00dd  ld   $dd
              72ce 0092  ld   $92
              72cf 0025  ld   $25
              72d0 0020  ld   $20
              72d1 0090  ld   $90
              72d2 00f6  ld   $f6
              72d3 0021  ld   $21
              72d4 0098  ld   $98
              72d5 00b8  ld   $b8
              72d6 009a  ld   $9a
              72d7 0035  ld   $35
              72d8 0053  ld   $53
              72d9 00f9  ld   $f9
              72da 00c7  ld   $c7
              72db 0010  ld   $10
              72dc 006f  ld   $6f
              72dd 00aa  ld   $aa
              72de 0035  ld   $35
              72df 0072  ld   $72
              72e0 00e2  ld   $e2
              72e1 009c  ld   $9c
              72e2 0006  ld   $06
              72e3 0090  ld   $90
              72e4 00e4  ld   $e4
              72e5 009c  ld   $9c
              72e6 0004  ld   $04
              72e7 002b  ld   $2b
              72e8 009c  ld   $9c
              72e9 0059  ld   $59
              72ea 0020  ld   $20
              72eb 00d1  ld   $d1
              72ec 0092  ld   $92
              72ed 0021  ld   $21
              72ee 0092  ld   $92
              72ef 0025  ld   $25
              72f0 0000  ld   $00
              72f1 0038  ld   $38
              72f2 0002  ld   $02
              72f3 0092  ld   $92
              72f4 0092  ld   $92
              72f5 0021  ld   $21
              72f6 0092  ld   $92
              72f7 0025  ld   $25
              72f8 0020  ld   $20
              72f9 0085  ld   $85
              72fa 00a5  ld   $a5
              72fb fe00  bra  ac          ;+-----------------------------------+
              72fc fcfd  bra  $72fd       ;|                                   |
              72fd 1418  ld   $18,y       ;| Trampoline for page $7200 lookups |
              72fe e006  jmp  y,$06       ;|                                   |
              72ff c218  st   [$18]       ;+-----------------------------------+
              7300 0073  ld   $73
              7301 0059  ld   $59
              7302 0000  ld   $00
              7303 0063  ld   $63
              7304 00ff  ld   $ff
              7305 0076  ld   $76
              7306 00a1  ld   $a1
              7307 005e  ld   $5e
              7308 0075  ld   $75
              7309 002b  ld   $2b
              730a 0082  ld   $82
              730b 0046  ld   $46
              730c 0082  ld   $82
              730d 002b  ld   $2b
              730e 0084  ld   $84
              730f 0046  ld   $46
              7310 0082  ld   $82
              7311 002b  ld   $2b
              7312 0086  ld   $86
              7313 003b  ld   $3b
              7314 0082  ld   $82
              7315 002b  ld   $2b
              7316 0088  ld   $88
              7317 00c7  ld   $c7
              7318 00fd  ld   $fd
              7319 0066  ld   $66
              731a 00aa  ld   $aa
              731b 0065  ld   $65
              731c 0081  ld   $81
              731d 000f  ld   $0f
              731e 0085  ld   $85
              731f 00ba  ld   $ba
              7320 0076  ld   $76
              7321 0046  ld   $46
              7322 0088  ld   $88
              7323 0035  ld   $35
              7324 003f  ld   $3f
              7325 00f7  ld   $f7
              7326 002b  ld   $2b
              7327 0096  ld   $96
              7328 0082  ld   $82
              7329 0040  ld   $40
              732a 0035  ld   $35
              732b 003f  ld   $3f
              732c 00c7  ld   $c7
              732d 0085  ld   $85
              732e 00a7  ld   $a7
              732f 006a  ld   $6a
              7330 0085  ld   $85
              7331 00e6  ld   $e6
              7332 0069  ld   $69
              7333 0046  ld   $46
              7334 0086  ld   $86
              7335 0085  ld   $85
              7336 00eb  ld   $eb
              7337 006a  ld   $6a
              7338 0085  ld   $85
              7339 00a0  ld   $a0
              733a 006b  ld   $6b
              733b 00c7  ld   $c7
              733c 0080  ld   $80
              733d 006f  ld   $6f
              733e 0096  ld   $96
              733f 0035  ld   $35
              7340 003f  ld   $3f
              7341 00dc  ld   $dc
              7342 0085  ld   $85
              7343 00a7  ld   $a7
              7344 006a  ld   $6a
              7345 0011  ld   $11
              7346 00a1  ld   $a1
              7347 007f  ld   $7f
              7348 002b  ld   $2b
              7349 0092  ld   $92
              734a 004d  ld   $4d
              734b 0000  ld   $00
              734c 0094  ld   $94
              734d 0011  ld   $11
              734e 00a0  ld   $a0
              734f 007f  ld   $7f
              7350 002b  ld   $2b
              7351 009e  ld   $9e
              7352 001a  ld   $1a
              7353 0097  ld   $97
              7354 0099  ld   $99
              7355 009e  ld   $9e
              7356 002b  ld   $2b
              7357 009e  ld   $9e
              7358 0032  ld   $32
              7359 009a  ld   $9a
              735a 00a4  ld   $a4
              735b 002b  ld   $2b
              735c 0098  ld   $98
              735d 0085  ld   $85
              735e 00a4  ld   $a4
              735f 006d  ld   $6d
              7360 00c7  ld   $c7
              7361 0002  ld   $02
              7362 0069  ld   $69
              7363 00aa  ld   $aa
              7364 0063  ld   $63
              7365 00ff  ld   $ff
              7366 0077  ld   $77
              7367 00a0  ld   $a0
              7368 005f  ld   $5f
              7369 001c  ld   $1c
              736a 00a4  ld   $a4
              736b 00a4  ld   $a4
              736c 0006  ld   $06
              736d 00a7  ld   $a7
              736e 009a  ld   $9a
              736f 00a4  ld   $a4
              7370 0035  ld   $35
              7371 0056  ld   $56
              7372 00b4  ld   $b4
              7373 00c7  ld   $c7
              7374 0008  ld   $08
              7375 006f  ld   $6f
              7376 00aa  ld   $aa
              7377 0035  ld   $35
              7378 0072  ld   $72
              7379 00b4  ld   $b4
              737a 0075  ld   $75
              737b 0085  ld   $85
              737c 00b7  ld   $b7
              737d 0077  ld   $77
              737e 0063  ld   $63
              737f 00ff  ld   $ff
              7380 00c7  ld   $c7
              7381 0010  ld   $10
              7382 006f  ld   $6f
              7383 00aa  ld   $aa
              7384 00bd  ld   $bd
              7385 00bc  ld   $bc
              7386 0073  ld   $73
              7387 0059  ld   $59
              7388 0002  ld   $02
              7389 005e  ld   $5e
              738a 00a4  ld   $a4
              738b 005e  ld   $5e
              738c 0028  ld   $28
              738d 00c7  ld   $c7
              738e 0002  ld   $02
              738f 006f  ld   $6f
              7390 00aa  ld   $aa
              7391 0035  ld   $35
              7392 0072  ld   $72
              7393 00ca  ld   $ca
              7394 00ff  ld   $ff
              7395 0075  ld   $75
              7396 00c7  ld   $c7
              7397 0004  ld   $04
              7398 006f  ld   $6f
              7399 00aa  ld   $aa
              739a 0035  ld   $35
              739b 0072  ld   $72
              739c 00df  ld   $df
              739d 001c  ld   $1c
              739e 00a5  ld   $a5
              739f 00a5  ld   $a5
              73a0 0008  ld   $08
              73a1 00a7  ld   $a7
              73a2 0078  ld   $78
              73a3 00a5  ld   $a5
              73a4 0035  ld   $35
              73a5 0050  ld   $50
              73a6 00f8  ld   $f8
              73a7 0016  ld   $16
              73a8 0070  ld   $70
              73a9 00a5  ld   $a5
              73aa 0085  ld   $85
              73ab 00dc  ld   $dc
              73ac 006e  ld   $6e
              73ad 0011  ld   $11
              73ae 0000  ld   $00
              73af 0001  ld   $01
              73b0 002b  ld   $2b
              73b1 0026  ld   $26
              73b2 0016  ld   $16
              73b3 0008  ld   $08
              73b4 0024  ld   $24
              73b5 0016  ld   $16
              73b6 0078  ld   $78
              73b7 0025  ld   $25
              73b8 0011  ld   $11
              73b9 00c0  ld   $c0
              73ba 0020  ld   $20
              73bb 002b  ld   $2b
              73bc 0022  ld   $22
              73bd 00b4  ld   $b4
              73be 00fb  ld   $fb
              73bf 00c7  ld   $c7
              73c0 0004  ld   $04
              73c1 0069  ld   $69
              73c2 00aa  ld   $aa
              73c3 0085  ld   $85
              73c4 00ac  ld   $ac
              73c5 006b  ld   $6b
              73c6 0063  ld   $63
              73c7 00ff  ld   $ff
              73c8 0078  ld   $78
              73c9 00a0  ld   $a0
              73ca 005f  ld   $5f
              73cb 0075  ld   $75
              73cc 0085  ld   $85
              73cd 00ac  ld   $ac
              73ce 0069  ld   $69
              73cf 0011  ld   $11
              73d0 0003  ld   $03
              73d1 000b  ld   $0b
              73d2 002b  ld   $2b
              73d3 0022  ld   $22
              73d4 0065  ld   $65
              73d5 0025  ld   $25
              73d6 00a2  ld   $a2
              73d7 0063  ld   $63
              73d8 00ff  ld   $ff
              73d9 0011  ld   $11
              73da 0003  ld   $03
              73db 000b  ld   $0b
              73dc 002b  ld   $2b
              73dd 0022  ld   $22
              73de 0065  ld   $65
              73df 0025  ld   $25
              73e0 00a3  ld   $a3
              73e1 0059  ld   $59
              73e2 0000  ld   $00
              73e3 002b  ld   $2b
              73e4 0092  ld   $92
              73e5 002b  ld   $2b
              73e6 0094  ld   $94
              73e7 00ab  ld   $ab
              73e8 0082  ld   $82
              73e9 0098  ld   $98
              73ea 00a0  ld   $a0
              73eb 0021  ld   $21
              73ec 00a0  ld   $a0
              73ed 0099  ld   $99
              73ee 0098  ld   $98
              73ef 00b8  ld   $b8
              73f0 0082  ld   $82
              73f1 002b  ld   $2b
              73f2 0088  ld   $88
              73f3 0021  ld   $21
              73f4 0096  ld   $96
              73f5 00b8  ld   $b8
              73f6 0092  ld   $92
              73f7 002d  ld   $2d
              73f8 0026  ld   $26
              73f9 0018  ld   $18
              73fa 0082  ld   $82
              73fb fe00  bra  ac          ;+-----------------------------------+
              73fc fcfd  bra  $73fd       ;|                                   |
              73fd 1418  ld   $18,y       ;| Trampoline for page $7300 lookups |
              73fe e006  jmp  y,$06       ;|                                   |
              73ff c218  st   [$18]       ;+-----------------------------------+
              7400 0065  ld   $65
              7401 0024  ld   $24
              7402 0088  ld   $88
              7403 00b4  ld   $b4
              7404 00f3  ld   $f3
              7405 0021  ld   $21
              7406 0096  ld   $96
              7407 0099  ld   $99
              7408 0092  ld   $92
              7409 002d  ld   $2d
              740a 0026  ld   $26
              740b 0018  ld   $18
              740c 0082  ld   $82
              740d 0065  ld   $65
              740e 0024  ld   $24
              740f 0088  ld   $88
              7410 00b4  ld   $b4
              7411 00f3  ld   $f3
              7412 0021  ld   $21
              7413 0094  ld   $94
              7414 0099  ld   $99
              7415 0092  ld   $92
              7416 0099  ld   $99
              7417 0092  ld   $92
              7418 00e3  ld   $e3
              7419 0001  ld   $01
              741a 002b  ld   $2b
              741b 0094  ld   $94
              741c 0093  ld   $93
              741d 0092  ld   $92
              741e 0035  ld   $35
              741f 0050  ld   $50
              7420 00ba  ld   $ba
              7421 0021  ld   $21
              7422 0094  ld   $94
              7423 00b8  ld   $b8
              7424 0098  ld   $98
              7425 00b8  ld   $b8
              7426 0098  ld   $98
              7427 00e3  ld   $e3
              7428 0001  ld   $01
              7429 002b  ld   $2b
              742a 0094  ld   $94
              742b 009e  ld   $9e
              742c 00ec  ld   $ec
              742d 0098  ld   $98
              742e 00ff  ld   $ff
              742f 0079  ld   $79
              7430 00a6  ld   $a6
              7431 0059  ld   $59
              7432 0075  ld   $75
              7433 0065  ld   $65
              7434 0082  ld   $82
              7435 000f  ld   $0f
              7436 001a  ld   $1a
              7437 0081  ld   $81
              7438 002f  ld   $2f
              7439 0082  ld   $82
              743a 0062  ld   $62
              743b 0035  ld   $35
              743c 003f  ld   $3f
              743d 00f9  ld   $f9
              743e 0085  ld   $85
              743f 00bb  ld   $bb
              7440 0070  ld   $70
              7441 0065  ld   $65
              7442 0081  ld   $81
              7443 0082  ld   $82
              7444 00a7  ld   $a7
              7445 007f  ld   $7f
              7446 0082  ld   $82
              7447 0035  ld   $35
              7448 004d  ld   $4d
              7449 00f9  ld   $f9
              744a 0035  ld   $35
              744b 0072  ld   $72
              744c 00c2  ld   $c2
              744d 0085  ld   $85
              744e 00bc  ld   $bc
              744f 0075  ld   $75
              7450 00a7  ld   $a7
              7451 000a  ld   $0a
              7452 0082  ld   $82
              7453 0035  ld   $35
              7454 0072  ld   $72
              7455 00cb  ld   $cb
              7456 0085  ld   $85
              7457 00cb  ld   $cb
              7458 0071  ld   $71
              7459 0021  ld   $21
              745a 009e  ld   $9e
              745b 00b8  ld   $b8
              745c 0092  ld   $92
              745d 0035  ld   $35
              745e 003f  ld   $3f
              745f 00f9  ld   $f9
              7460 00a7  ld   $a7
              7461 0020  ld   $20
              7462 0082  ld   $82
              7463 0035  ld   $35
              7464 0050  ld   $50
              7465 00f9  ld   $f9
              7466 001a  ld   $1a
              7467 0082  ld   $82
              7468 00d1  ld   $d1
              7469 0092  ld   $92
              746a 0021  ld   $21
              746b 0092  ld   $92
              746c 0025  ld   $25
              746d 0000  ld   $00
              746e 00a7  ld   $a7
              746f 0095  ld   $95
              7470 009a  ld   $9a
              7471 0035  ld   $35
              7472 0050  ld   $50
              7473 00ec  ld   $ec
              7474 0093  ld   $93
              7475 0094  ld   $94
              7476 0059  ld   $59
              7477 0000  ld   $00
              7478 0090  ld   $90
              7479 00f4  ld   $f4
              747a 00c7  ld   $c7
              747b 0010  ld   $10
              747c 006f  ld   $6f
              747d 00aa  ld   $aa
              747e 00c7  ld   $c7
              747f 0006  ld   $06
              7480 002a  ld   $2a
              7481 0004  ld   $04
              7482 002b  ld   $2b
              7483 009c  ld   $9c
              7484 0085  ld   $85
              7485 00a5  ld   $a5
              7486 0073  ld   $73
              7487 0059  ld   $59
              7488 0000  ld   $00
              7489 0063  ld   $63
              748a 00ff  ld   $ff
              748b 007a  ld   $7a
              748c 00a6  ld   $a6
              748d 0059  ld   $59
              748e 0075  ld   $75
              748f 00ab  ld   $ab
              7490 009a  ld   $9a
              7491 0082  ld   $82
              7492 0086  ld   $86
              7493 00b1  ld   $b1
              7494 0036  ld   $36
              7495 002b  ld   $2b
              7496 0092  ld   $92
              7497 002b  ld   $2b
              7498 0096  ld   $96
              7499 002f  ld   $2f
              749a 009a  ld   $9a
              749b 0067  ld   $67
              749c 00ab  ld   $ab
              749d 009c  ld   $9c
              749e 0084  ld   $84
              749f 0088  ld   $88
              74a0 002b  ld   $2b
              74a1 009e  ld   $9e
              74a2 00b1  ld   $b1
              74a3 0036  ld   $36
              74a4 002b  ld   $2b
              74a5 0094  ld   $94
              74a6 002f  ld   $2f
              74a7 009c  ld   $9c
              74a8 0067  ld   $67
              74a9 004d  ld   $4d
              74aa 0000  ld   $00
              74ab 0098  ld   $98
              74ac 0021  ld   $21
              74ad 009a  ld   $9a
              74ae 00b8  ld   $b8
              74af 009c  ld   $9c
              74b0 0035  ld   $35
              74b1 0053  ld   $53
              74b2 00d6  ld   $d6
              74b3 004d  ld   $4d
              74b4 0000  ld   $00
              74b5 0096  ld   $96
              74b6 00c7  ld   $c7
              74b7 009c  ld   $9c
              74b8 0017  ld   $17
              74b9 009a  ld   $9a
              74ba 0021  ld   $21
              74bb 009e  ld   $9e
              74bc 00b1  ld   $b1
              74bd 0036  ld   $36
              74be 002b  ld   $2b
              74bf 0098  ld   $98
              74c0 002d  ld   $2d
              74c1 0082  ld   $82
              74c2 0084  ld   $84
              74c3 0082  ld   $82
              74c4 002d  ld   $2d
              74c5 0084  ld   $84
              74c6 0088  ld   $88
              74c7 0086  ld   $86
              74c8 001a  ld   $1a
              74c9 009a  ld   $9a
              74ca 0018  ld   $18
              74cb 0018  ld   $18
              74cc 00e3  ld   $e3
              74cd 0001  ld   $01
              74ce 002b  ld   $2b
              74cf 00a0  ld   $a0
              74d0 002b  ld   $2b
              74d1 009e  ld   $9e
              74d2 002f  ld   $2f
              74d3 0094  ld   $94
              74d4 005e  ld   $5e
              74d5 0099  ld   $99
              74d6 0092  ld   $92
              74d7 002b  ld   $2b
              74d8 0086  ld   $86
              74d9 002f  ld   $2f
              74da 0098  ld   $98
              74db 005e  ld   $5e
              74dc 0099  ld   $99
              74dd 0096  ld   $96
              74de 002b  ld   $2b
              74df 0088  ld   $88
              74e0 004d  ld   $4d
              74e1 00a4  ld   $a4
              74e2 0022  ld   $22
              74e3 00b4  ld   $b4
              74e4 00e3  ld   $e3
              74e5 0063  ld   $63
              74e6 00ff  ld   $ff
              74e7 007b  ld   $7b
              74e8 00a0  ld   $a0
              74e9 0060  ld   $60
              74ea 002b  ld   $2b
              74eb 0092  ld   $92
              74ec 00c7  ld   $c7
              74ed 0084  ld   $84
              74ee 0089  ld   $89
              74ef 0020  ld   $20
              74f0 0035  ld   $35
              74f1 0072  ld   $72
              74f2 00d0  ld   $d0
              74f3 00c7  ld   $c7
              74f4 0010  ld   $10
              74f5 006f  ld   $6f
              74f6 00aa  ld   $aa
              74f7 00bd  ld   $bd
              74f8 00a3  ld   $a3
              74f9 006c  ld   $6c
              74fa 00c7  ld   $c7
              74fb fe00  bra  ac          ;+-----------------------------------+
              74fc fcfd  bra  $74fd       ;|                                   |
              74fd 1418  ld   $18,y       ;| Trampoline for page $7400 lookups |
              74fe e006  jmp  y,$06       ;|                                   |
              74ff c218  st   [$18]       ;+-----------------------------------+
              7500 0094  ld   $94
              7501 0025  ld   $25
              7502 0092  ld   $92
              7503 0016  ld   $16
              7504 0005  ld   $05
              7505 0096  ld   $96
              7506 0021  ld   $21
              7507 0094  ld   $94
              7508 007f  ld   $7f
              7509 0000  ld   $00
              750a 005e  ld   $5e
              750b 0026  ld   $26
              750c 00b4  ld   $b4
              750d 00cb  ld   $cb
              750e 0093  ld   $93
              750f 0094  ld   $94
              7510 0093  ld   $93
              7511 0028  ld   $28
              7512 009e  ld   $9e
              7513 00b5  ld   $b5
              7514 0096  ld   $96
              7515 0016  ld   $16
              7516 0000  ld   $00
              7517 0026  ld   $26
              7518 00b4  ld   $b4
              7519 00cb  ld   $cb
              751a 0093  ld   $93
              751b 0028  ld   $28
              751c 0075  ld   $75
              751d 0085  ld   $85
              751e 00a0  ld   $a0
              751f 0077  ld   $77
              7520 0063  ld   $63
              7521 00ff  ld   $ff
              7522 0008  ld   $08
              7523 0030  ld   $30
              7524 0030  ld   $30
              7525 003a  ld   $3a
              7526 0030  ld   $30
              7527 0030  ld   $30
              7528 003a  ld   $3a
              7529 0030  ld   $30
              752a 0030  ld   $30
              752b 0000  ld   $00
              752c 0000  ld   $00
              752d 0000  ld   $00
              752e 0000  ld   $00
              752f 0001  ld   $01
              7530 0059  ld   $59
              7531 0000  ld   $00
              7532 0001  ld   $01
              7533 0079  ld   $79
              7534 0000  ld   $00
              7535 0003  ld   $03
              7536 0003  ld   $03
              7537 0003  ld   $03
              * 6 times
              753b 0005  ld   $05
              753c 0002  ld   $02
              753d 0000  ld   $00
              753e 0000  ld   $00
              753f 00cd  ld   $cd
              7540 007d  ld   $7d
              7541 00c9  ld   $c9
              7542 007d  ld   $7d
              7543 00c5  ld   $c5
              7544 007d  ld   $7d
              7545 00b8  ld   $b8
              7546 007d  ld   $7d
              7547 003a  ld   $3a
              7548 0000  ld   $00
              7549 003c  ld   $3c
              754a 0000  ld   $00
              754b 003e  ld   $3e
              754c 0000  ld   $00
              754d 00a0  ld   $a0
              754e 007c  ld   $7c
              754f 007c  ld   $7c
              7550 00a0  ld   $a0
              7551 0002  ld   $02
              7552 0000  ld   $00
              7553 0000  ld   $00
              7554 007d  ld   $7d
              7555 00a2  ld   $a2
              7556 0006  ld   $06
              7557 00f8  ld   $f8
              7558 007b  ld   $7b
              7559 00f0  ld   $f0
              755a 007b  ld   $7b
              755b 00e6  ld   $e6
              755c 007b  ld   $7b
              755d 007d  ld   $7d
              755e 00b8  ld   $b8
              755f 0048  ld   $48
              7560 000b  ld   $0b
              7561 0061  ld   $61
              7562 0075  ld   $75
              7563 0064  ld   $64
              7564 0069  ld   $69
              7565 006f  ld   $6f
              7566 0028  ld   $28
              7567 0079  ld   $79
              7568 002f  ld   $2f
              7569 006e  ld   $6e
              756a 0029  ld   $29
              756b 003a  ld   $3a
              756c 0000  ld   $00
              756d 0002  ld   $02
              756e 0053  ld   $53
              756f 003a  ld   $3a
              7570 0000  ld   $00
              7571 0002  ld   $02
              7572 004d  ld   $4d
              7573 003a  ld   $3a
              7574 0000  ld   $00
              7575 0002  ld   $02
              7576 0048  ld   $48
              7577 003a  ld   $3a
              7578 0000  ld   $00
              7579 000b  ld   $0b
              757a 0045  ld   $45
              757b 006e  ld   $6e
              757c 0074  ld   $74
              757d 0065  ld   $65
              757e 0072  ld   $72
              757f 0020  ld   $20
              7580 0054  ld   $54
              7581 0069  ld   $69
              7582 006d  ld   $6d
              7583 0065  ld   $65
              7584 0020  ld   $20
              7585 0000  ld   $00
              7586 0020  ld   $20
              7587 0048  ld   $48
              7588 0065  ld   $65
              7589 006c  ld   $6c
              758a 0070  ld   $70
              758b 003a  ld   $3a
              758c 0020  ld   $20
              758d 0050  ld   $50
              758e 0072  ld   $72
              758f 0065  ld   $65
              7590 0073  ld   $73
              7591 0073  ld   $73
              7592 0020  ld   $20
              7593 0045  ld   $45
              7594 006e  ld   $6e
              7595 0074  ld   $74
              7596 0065  ld   $65
              7597 0072  ld   $72
              7598 0020  ld   $20
              7599 0074  ld   $74
              759a 006f  ld   $6f
              759b 0020  ld   $20
              759c 0072  ld   $72
              759d 0065  ld   $65
              759e 0073  ld   $73
              759f 0065  ld   $65
              75a0 0074  ld   $74
              75a1 0020  ld   $20
              75a2 0063  ld   $63
              75a3 006c  ld   $6c
              75a4 006f  ld   $6f
              75a5 0063  ld   $63
              75a6 006b  ld   $6b
              75a7 0000  ld   $00
              75a8 0000  ld   $00
              75a9 0000  ld   $00         ;End of gbas/menu/Clock_vX0.gt1, size 3287
                                          ;+-----------------------------------+
                                          ;| gbas/menu/Invader_vX0.gt1         |
                                          ;+-----------------------------------+
              75aa dc43  st   $43,[y,x++] ;'C'
              75ab dc6c  st   $6c,[y,x++] ;'l'
              75ac dc6f  st   $6f,[y,x++] ;'o'
              75ad dc63  st   $63,[y,x++] ;'c'
              75ae dc6b  st   $6b,[y,x++] ;'k'
              75af dc00  st   $00,[y,x++] ;'\x00'
              75b0 dc00  st   $00,[y,x++] ;'\x00'
              75b1 dc00  st   $00,[y,x++] ;'\x00'
              75b2 00d3  ld   $d3
              75b3 c218  st   [$18]
              75b4 0068  ld   $68
              75b5 14f3  ld   $f3,y
              75b6 e019  jmp  y,$19
              75b7 c219  st   [$19]
Invader:      75b8 0000  ld   $00
              75b9 007e  ld   $7e
              75ba 0002  ld   $02
              75bb 0001  ld   $01
              75bc 0001  ld   $01
              75bd 0002  ld   $02
              75be 0000  ld   $00
              75bf 00f8  ld   $f8
              75c0 0059  ld   $59
              75c1 0080  ld   $80
              75c2 002b  ld   $2b
              75c3 0082  ld   $82
              75c4 0011  ld   $11
              75c5 00ac  ld   $ac
              75c6 004f  ld   $4f
              75c7 00cf  ld   $cf
              75c8 0018  ld   $18
              75c9 0011  ld   $11
              75ca 0020  ld   $20
              75cb 000f  ld   $0f
              75cc 002b  ld   $2b
              75cd 00a2  ld   $a2
              75ce 00c7  ld   $c7
              75cf 0003  ld   $03
              75d0 0069  ld   $69
              75d1 0021  ld   $21
              75d2 004d  ld   $4d
              75d3 0002  ld   $02
              75d4 00aa  ld   $aa
              75d5 004d  ld   $4d
              75d6 0000  ld   $00
              75d7 00d6  ld   $d6
              75d8 004d  ld   $4d
              75d9 0000  ld   $00
              75da 00a6  ld   $a6
              75db 0016  ld   $16
              75dc 0000  ld   $00
              75dd 002d  ld   $2d
              75de 004d  ld   $4d
              75df 0000  ld   $00
              75e0 002e  ld   $2e
              75e1 0085  ld   $85
              75e2 00d8  ld   $d8
              75e3 004c  ld   $4c
              75e4 0085  ld   $85
              75e5 00bf  ld   $bf
              75e6 0025  ld   $25
              75e7 0085  ld   $85
              75e8 00fc  ld   $fc
              75e9 0022  ld   $22
              75ea 0085  ld   $85
              75eb 00f1  ld   $f1
              75ec 0021  ld   $21
              75ed 0085  ld   $85
              75ee 00e8  ld   $e8
              75ef 0021  ld   $21
              75f0 002f  ld   $2f
              75f1 00d6  ld   $d6
              75f2 006e  ld   $6e
              75f3 0085  ld   $85
              75f4 00d6  ld   $d6
              75f5 0002  ld   $02
              75f6 0085  ld   $85
              75f7 006d  ld   $6d
              75f8 0002  ld   $02
              75f9 0085  ld   $85
              75fa 00b5  ld   $b5
              75fb fe00  bra  ac          ;+-----------------------------------+
              75fc fcfd  bra  $75fd       ;|                                   |
              75fd 1418  ld   $18,y       ;| Trampoline for page $7500 lookups |
              75fe e006  jmp  y,$06       ;|                                   |
              75ff c218  st   [$18]       ;+-----------------------------------+
              7600 0002  ld   $02
              7601 0085  ld   $85
              7602 0052  ld   $52
              7603 0003  ld   $03
              7604 0085  ld   $85
              7605 00cb  ld   $cb
              7606 0005  ld   $05
              7607 0085  ld   $85
              7608 00f4  ld   $f4
              7609 000d  ld   $0d
              760a 0085  ld   $85
              760b 00d2  ld   $d2
              760c 000c  ld   $0c
              760d 0085  ld   $85
              760e 00fc  ld   $fc
              760f 000f  ld   $0f
              7610 0085  ld   $85
              7611 007d  ld   $7d
              7612 0003  ld   $03
              7613 0085  ld   $85
              7614 00c2  ld   $c2
              7615 0023  ld   $23
              7616 0085  ld   $85
              7617 00cc  ld   $cc
              7618 0013  ld   $13
              7619 0085  ld   $85
              761a 00f6  ld   $f6
              761b 0012  ld   $12
              761c 0085  ld   $85
              761d 00d2  ld   $d2
              761e 0017  ld   $17
              761f 0085  ld   $85
              7620 00bb  ld   $bb
              7621 0013  ld   $13
              7622 001a  ld   $1a
              7623 0052  ld   $52
              7624 00bb  ld   $bb
              7625 0062  ld   $62
              7626 0002  ld   $02
              7627 0090  ld   $90
              7628 0028  ld   $28
              7629 001a  ld   $1a
              762a 0053  ld   $53
              762b 00bb  ld   $bb
              762c 0069  ld   $69
              762d 0002  ld   $02
              762e 0090  ld   $90
              762f 0025  ld   $25
              7630 0090  ld   $90
              7631 002e  ld   $2e
              7632 0075  ld   $75
              7633 0021  ld   $21
              7634 005c  ld   $5c
              7635 00bb  ld   $bb
              7636 0073  ld   $73
              7637 0002  ld   $02
              7638 0063  ld   $63
              7639 00ff  ld   $ff
              763a 001a  ld   $1a
              763b 0057  ld   $57
              763c 00bd  ld   $bd
              763d 007a  ld   $7a
              763e 0002  ld   $02
              763f 0063  ld   $63
              7640 00ff  ld   $ff
              7641 0011  ld   $11
              7642 00e1  ld   $e1
              7643 0004  ld   $04
              7644 002b  ld   $2b
              7645 0022  ld   $22
              7646 0085  ld   $85
              7647 00c3  ld   $c3
              7648 0011  ld   $11
              7649 0011  ld   $11
              764a 0000  ld   $00
              764b 003f  ld   $3f
              764c 002b  ld   $2b
              764d 0024  ld   $24
              764e 0021  ld   $21
              764f 0054  ld   $54
              7650 002b  ld   $2b
              7651 0028  ld   $28
              7652 001a  ld   $1a
              7653 0056  ld   $56
              7654 00bb  ld   $bb
              7655 00a9  ld   $a9
              7656 0002  ld   $02
              7657 0016  ld   $16
              7658 00f8  ld   $f8
              7659 0026  ld   $26
              765a 00b4  ld   $b4
              765b 00cb  ld   $cb
              765c 0038  ld   $38
              765d 0002  ld   $02
              765e 0055  ld   $55
              765f 0055  ld   $55
              7660 00a7  ld   $a7
              7661 000e  ld   $0e
              7662 0055  ld   $55
              7663 00c5  ld   $c5
              7664 00a7  ld   $a7
              7665 0002  ld   $02
              7666 004d  ld   $4d
              7667 0000  ld   $00
              7668 0056  ld   $56
              7669 0016  ld   $16
              766a 0000  ld   $00
              766b 0026  ld   $26
              766c 00b4  ld   $b4
              766d 00cb  ld   $cb
              766e 0063  ld   $63
              766f 00ff  ld   $ff
              7670 0016  ld   $16
              7671 0000  ld   $00
              7672 0026  ld   $26
              7673 00b4  ld   $b4
              7674 00cb  ld   $cb
              7675 004d  ld   $4d
              7676 0000  ld   $00
              7677 0056  ld   $56
              7678 0063  ld   $63
              7679 00ff  ld   $ff
              767a 0075  ld   $75
              767b 00c7  ld   $c7
              767c 0001  ld   $01
              767d 0075  ld   $75
              767e 004c  ld   $4c
              767f 00bd  ld   $bd
              7680 00c8  ld   $c8
              7681 0002  ld   $02
              7682 004d  ld   $4d
              7683 0004  ld   $04
              7684 0082  ld   $82
              7685 002d  ld   $2d
              7686 0084  ld   $84
              7687 0036  ld   $36
              7688 0034  ld   $34
              7689 0085  ld   $85
              768a 00f4  ld   $f4
              768b 004c  ld   $4c
              768c 0085  ld   $85
              768d 00d4  ld   $d4
              768e 0002  ld   $02
              768f 004d  ld   $4d
              7690 0003  ld   $03
              7691 0082  ld   $82
              7692 002d  ld   $2d
              7693 0084  ld   $84
              7694 0036  ld   $36
              7695 0034  ld   $34
              7696 0085  ld   $85
              7697 00a1  ld   $a1
              7698 004f  ld   $4f
              7699 0063  ld   $63
              769a 00ff  ld   $ff
              769b 0075  ld   $75
              769c 00c7  ld   $c7
              769d 00ff  ld   $ff
              769e 0075  ld   $75
              769f 0011  ld   $11
              76a0 002b  ld   $2b
              76a1 00c4  ld   $c4
              76a2 00c7  ld   $c7
              76a3 0001  ld   $01
              76a4 006f  ld   $6f
              76a5 00c4  ld   $c4
              76a6 00bb  ld   $bb
              76a7 00e7  ld   $e7
              76a8 0002  ld   $02
              76a9 0011  ld   $11
              76aa 0001  ld   $01
              76ab 0001  ld   $01
              76ac 002b  ld   $2b
              76ad 004c  ld   $4c
              76ae 00c7  ld   $c7
              76af 0002  ld   $02
              76b0 006f  ld   $6f
              76b1 00c4  ld   $c4
              76b2 00bb  ld   $bb
              76b3 00fe  ld   $fe
              76b4 0003  ld   $03
              76b5 0011  ld   $11
              76b6 0000  ld   $00
              76b7 0001  ld   $01
              76b8 002b  ld   $2b
              76b9 004c  ld   $4c
              76ba 0085  ld   $85
              76bb 0000  ld   $00
              76bc 0003  ld   $03
              76bd 0003  ld   $03
              76be 0000  ld   $00
              76bf 00f9  ld   $f9
              76c0 00c7  ld   $c7
              76c1 0080  ld   $80
              76c2 006f  ld   $6f
              76c3 0074  ld   $74
              76c4 00bd  ld   $bd
              76c5 000f  ld   $0f
              76c6 0003  ld   $03
              76c7 00c7  ld   $c7
              76c8 0080  ld   $80
              76c9 006f  ld   $6f
              76ca 00c4  ld   $c4
              76cb 00bb  ld   $bb
              76cc 000f  ld   $0f
              76cd 0003  ld   $03
              76ce 0085  ld   $85
              76cf 0016  ld   $16
              76d0 0003  ld   $03
              76d1 0032  ld   $32
              76d2 0074  ld   $74
              76d3 00c4  ld   $c4
              76d4 0063  ld   $63
              76d5 00ff  ld   $ff
              76d6 0075  ld   $75
              76d7 001a  ld   $1a
              76d8 0057  ld   $57
              76d9 00bb  ld   $bb
              76da 001c  ld   $1c
              76db 0003  ld   $03
              76dc 0063  ld   $63
              76dd 00ff  ld   $ff
              76de 0093  ld   $93
              76df 0058  ld   $58
              76e0 0011  ld   $11
              76e1 0000  ld   $00
              76e2 0001  ld   $01
              76e3 002b  ld   $2b
              76e4 0070  ld   $70
              76e5 0011  ld   $11
              76e6 0001  ld   $01
              76e7 0001  ld   $01
              76e8 002b  ld   $2b
              76e9 0056  ld   $56
              76ea 001a  ld   $1a
              76eb 004c  ld   $4c
              76ec 00bb  ld   $bb
              76ed 003f  ld   $3f
              76ee 0003  ld   $03
              76ef 0042  ld   $42
              76f0 0006  ld   $06
              76f1 00e8  ld   $e8
              76f2 0034  ld   $34
              76f3 0021  ld   $21
              76f4 0036  ld   $36
              76f5 00e3  ld   $e3
              76f6 0003  ld   $03
              76f7 002f  ld   $2f
              76f8 0018  ld   $18
              76f9 005e  ld   $5e
              76fa 0099  ld   $99
              76fb fe00  bra  ac          ;+-----------------------------------+
              76fc fcfd  bra  $76fd       ;|                                   |
              76fd 1418  ld   $18,y       ;| Trampoline for page $7600 lookups |
              76fe e006  jmp  y,$06       ;|                                   |
              76ff c218  st   [$18]       ;+-----------------------------------+
              7700 00e8  ld   $e8
              7701 002b  ld   $2b
              7702 0054  ld   $54
              7703 0085  ld   $85
              7704 0050  ld   $50
              7705 0003  ld   $03
              7706 0042  ld   $42
              7707 0005  ld   $05
              7708 00e8  ld   $e8
              7709 0034  ld   $34
              770a 0021  ld   $21
              770b 0036  ld   $36
              770c 00e3  ld   $e3
              770d 0003  ld   $03
              770e 002f  ld   $2f
              770f 0018  ld   $18
              7710 005e  ld   $5e
              7711 0099  ld   $99
              7712 00e8  ld   $e8
              7713 002b  ld   $2b
              7714 0054  ld   $54
              7715 0063  ld   $63
              7716 00ff  ld   $ff
              7717 0075  ld   $75
              7718 001a  ld   $1a
              7719 004d  ld   $4d
              771a 00bb  ld   $bb
              771b 0079  ld   $79
              771c 0003  ld   $03
              771d 0016  ld   $16
              771e 0000  ld   $00
              771f 004d  ld   $4d
              7720 001a  ld   $1a
              7721 004c  ld   $4c
              7722 00bb  ld   $bb
              7723 006d  ld   $6d
              7724 0003  ld   $03
              7725 0093  ld   $93
              7726 0034  ld   $34
              7727 0021  ld   $21
              7728 0034  ld   $34
              7729 00e6  ld   $e6
              772a 0093  ld   $93
              772b 00c3  ld   $c3
              772c 006a  ld   $6a
              772d 0003  ld   $03
              772e 004d  ld   $4d
              772f 0093  ld   $93
              7730 0034  ld   $34
              7731 0085  ld   $85
              7732 007b  ld   $7b
              7733 0003  ld   $03
              7734 00dd  ld   $dd
              7735 0034  ld   $34
              7736 0021  ld   $21
              7737 0034  ld   $34
              7738 00e6  ld   $e6
              7739 0001  ld   $01
              773a 00c5  ld   $c5
              773b 0079  ld   $79
              773c 0003  ld   $03
              773d 004d  ld   $4d
              773e 0001  ld   $01
              773f 0034  ld   $34
              7740 0063  ld   $63
              7741 00ff  ld   $ff
              7742 0075  ld   $75
              7743 0021  ld   $21
              7744 005c  ld   $5c
              7745 00bb  ld   $bb
              7746 0083  ld   $83
              7747 0003  ld   $03
              7748 0063  ld   $63
              7749 00ff  ld   $ff
              774a 0021  ld   $21
              774b 0044  ld   $44
              774c 00bd  ld   $bd
              774d 008a  ld   $8a
              774e 0003  ld   $03
              774f 0063  ld   $63
              7750 00ff  ld   $ff
              7751 003b  ld   $3b
              7752 0044  ld   $44
              7753 002b  ld   $2b
              7754 00c8  ld   $c8
              7755 0021  ld   $21
              7756 0044  ld   $44
              7757 00e3  ld   $e3
              7758 0002  ld   $02
              7759 00ad  ld   $ad
              775a 0099  ld   $99
              775b 0038  ld   $38
              775c 002b  ld   $2b
              775d 00c4  ld   $c4
              775e 0021  ld   $21
              775f 0044  ld   $44
              7760 00e3  ld   $e3
              7761 0003  ld   $03
              7762 00ad  ld   $ad
              7763 002b  ld   $2b
              7764 00ea  ld   $ea
              7765 00ab  ld   $ab
              7766 00c6  ld   $c6
              7767 00ea  ld   $ea
              7768 003a  ld   $3a
              7769 0021  ld   $21
              776a 00c6  ld   $c6
              776b 00e6  ld   $e6
              776c 006b  ld   $6b
              776d 00bf  ld   $bf
              776e 00ae  ld   $ae
              776f 0003  ld   $03
              7770 0085  ld   $85
              7771 00da  ld   $da
              7772 0012  ld   $12
              7773 0063  ld   $63
              7774 00ff  ld   $ff
              7775 0021  ld   $21
              7776 0040  ld   $40
              7777 00c3  ld   $c3
              7778 00d4  ld   $d4
              7779 0003  ld   $03
              777a 001a  ld   $1a
              777b 00c9  ld   $c9
              777c 00e6  ld   $e6
              777d 0001  ld   $01
              777e 002b  ld   $2b
              777f 0096  ld   $96
              7780 0053  ld   $53
              7781 0096  ld   $96
              7782 00a2  ld   $a2
              7783 0079  ld   $79
              7784 002b  ld   $2b
              7785 00ea  ld   $ea
              7786 0021  ld   $21
              7787 00c4  ld   $c4
              7788 002f  ld   $2f
              7789 0018  ld   $18
              778a 0073  ld   $73
              778b 0082  ld   $82
              778c 0001  ld   $01
              778d 0099  ld   $99
              778e 00ea  ld   $ea
              778f 002b  ld   $2b
              7790 0082  ld   $82
              7791 002d  ld   $2d
              7792 0084  ld   $84
              7793 00c6  ld   $c6
              7794 00c4  ld   $c4
              7795 0085  ld   $85
              7796 00f4  ld   $f4
              7797 004c  ld   $4c
              7798 0085  ld   $85
              7799 00f4  ld   $f4
              779a 0003  ld   $03
              779b 001a  ld   $1a
              779c 00c9  ld   $c9
              779d 00e6  ld   $e6
              779e 0001  ld   $01
              779f 002b  ld   $2b
              77a0 0096  ld   $96
              77a1 0053  ld   $53
              77a2 0096  ld   $96
              77a3 00a0  ld   $a0
              77a4 0078  ld   $78
              77a5 002b  ld   $2b
              77a6 00ea  ld   $ea
              77a7 0021  ld   $21
              77a8 00c4  ld   $c4
              77a9 002f  ld   $2f
              77aa 0018  ld   $18
              77ab 0073  ld   $73
              77ac 0082  ld   $82
              77ad 0001  ld   $01
              77ae 0099  ld   $99
              77af 00ea  ld   $ea
              77b0 002b  ld   $2b
              77b1 0082  ld   $82
              77b2 002d  ld   $2d
              77b3 0084  ld   $84
              77b4 00c6  ld   $c6
              77b5 00c4  ld   $c4
              77b6 0085  ld   $85
              77b7 00a1  ld   $a1
              77b8 004f  ld   $4f
              77b9 0021  ld   $21
              77ba 0050  ld   $50
              77bb 0085  ld   $85
              77bc 00a0  ld   $a0
              77bd 0004  ld   $04
              77be 0004  ld   $04
              77bf 0000  ld   $00
              77c0 00f8  ld   $f8
              77c1 0000  ld   $00
              77c2 0000  ld   $00
              77c3 0000  ld   $00
              * 12 times
              77cd 0001  ld   $01
              77ce 0001  ld   $01
              77cf 0001  ld   $01
              * 12 times
              77d9 0002  ld   $02
              77da 0002  ld   $02
              77db 0002  ld   $02
              * 12 times
              77e5 0003  ld   $03
              77e6 0003  ld   $03
              77e7 0003  ld   $03
              * 12 times
              77f1 0004  ld   $04
              77f2 0004  ld   $04
              77f3 0004  ld   $04
              * 10 times
              77fb fe00  bra  ac          ;+-----------------------------------+
              77fc fcfd  bra  $77fd       ;|                                   |
              77fd 1418  ld   $18,y       ;| Trampoline for page $7700 lookups |
              77fe e006  jmp  y,$06       ;|                                   |
              77ff c218  st   [$18]       ;+-----------------------------------+
              7800 0004  ld   $04
              7801 0004  ld   $04
              7802 0005  ld   $05
              7803 0005  ld   $05
              7804 0005  ld   $05
              * 12 times
              780e 0006  ld   $06
              780f 0006  ld   $06
              7810 0006  ld   $06
              * 12 times
              781a 0007  ld   $07
              781b 0007  ld   $07
              781c 0007  ld   $07
              * 12 times
              7826 0008  ld   $08
              7827 0008  ld   $08
              7828 0008  ld   $08
              * 12 times
              7832 0009  ld   $09
              7833 0009  ld   $09
              7834 0009  ld   $09
              * 12 times
              783e 000a  ld   $0a
              783f 000a  ld   $0a
              7840 000a  ld   $0a
              * 12 times
              784a 000b  ld   $0b
              784b 000b  ld   $0b
              784c 000b  ld   $0b
              * 12 times
              7856 000c  ld   $0c
              7857 000c  ld   $0c
              7858 000c  ld   $0c
              * 12 times
              7862 000d  ld   $0d
              7863 000d  ld   $0d
              7864 000d  ld   $0d
              7865 000d  ld   $0d
              7866 00bb  ld   $bb
              7867 00ae  ld   $ae
              7868 0004  ld   $04
              7869 004d  ld   $4d
              786a 0011  ld   $11
              786b 0082  ld   $82
              786c 0065  ld   $65
              786d 0084  ld   $84
              786e 00c4  ld   $c4
              786f 0038  ld   $38
              7870 0002  ld   $02
              7871 0085  ld   $85
              7872 00c6  ld   $c6
              7873 0085  ld   $85
              7874 00a1  ld   $a1
              7875 004f  ld   $4f
              7876 0021  ld   $21
              7877 00c4  ld   $c4
              7878 00e6  ld   $e6
              7879 0093  ld   $93
              787a 00bf  ld   $bf
              787b 00bc  ld   $bc
              787c 0004  ld   $04
              787d 009c  ld   $9c
              787e 0002  ld   $02
              787f 002b  ld   $2b
              7880 0042  ld   $42
              7881 0085  ld   $85
              7882 00d2  ld   $d2
              7883 0004  ld   $04
              7884 0021  ld   $21
              7885 00c4  ld   $c4
              7886 00e6  ld   $e6
              7887 0001  ld   $01
              7888 00c1  ld   $c1
              7889 00d0  ld   $d0
              788a 0004  ld   $04
              788b 004d  ld   $4d
              788c 0002  ld   $02
              788d 0042  ld   $42
              788e 00c7  ld   $c7
              788f 0031  ld   $31
              7890 0075  ld   $75
              7891 0059  ld   $59
              7892 00bd  ld   $bd
              7893 00d0  ld   $d0
              7894 0004  ld   $04
              7895 004d  ld   $4d
              7896 0003  ld   $03
              7897 0042  ld   $42
              7898 0021  ld   $21
              7899 0044  ld   $44
              789a 00e3  ld   $e3
              789b 0006  ld   $06
              789c 006f  ld   $6f
              789d 0044  ld   $44
              789e 00c7  ld   $c7
              789f 0080  ld   $80
              78a0 006f  ld   $6f
              78a1 00c8  ld   $c8
              78a2 00bd  ld   $bd
              78a3 00df  ld   $df
              78a4 0004  ld   $04
              78a5 0063  ld   $63
              78a6 00ff  ld   $ff
              78a7 0021  ld   $21
              78a8 0042  ld   $42
              78a9 00fc  ld   $fc
              78aa 0040  ld   $40
              78ab 00bb  ld   $bb
              78ac 00f0  ld   $f0
              78ad 0004  ld   $04
              78ae 004d  ld   $4d
              78af 0001  ld   $01
              78b0 0050  ld   $50
              78b1 0042  ld   $42
              78b2 0008  ld   $08
              78b3 003a  ld   $3a
              78b4 003a  ld   $3a
              78b5 0085  ld   $85
              78b6 007c  ld   $7c
              78b7 0005  ld   $05
              78b8 004d  ld   $4d
              78b9 0000  ld   $00
              78ba 0050  ld   $50
              78bb 0085  ld   $85
              78bc 0078  ld   $78
              78bd 0005  ld   $05
              78be 0005  ld   $05
              78bf 0000  ld   $00
              78c0 00ff  ld   $ff
              78c1 0000  ld   $00
              78c2 0000  ld   $00
              78c3 0000  ld   $00
              * 10 times
              78cb 0001  ld   $01
              78cc 0001  ld   $01
              78cd 0001  ld   $01
              * 10 times
              78d5 0002  ld   $02
              78d6 0002  ld   $02
              78d7 0002  ld   $02
              * 10 times
              78df 0003  ld   $03
              78e0 0003  ld   $03
              78e1 0003  ld   $03
              * 10 times
              78e9 0004  ld   $04
              78ea 0004  ld   $04
              78eb 0004  ld   $04
              * 10 times
              78f3 0005  ld   $05
              78f4 0005  ld   $05
              78f5 0005  ld   $05
              * 8 times
              78fb fe00  bra  ac          ;+-----------------------------------+
              78fc fcfd  bra  $78fd       ;|                                   |
              78fd 1418  ld   $18,y       ;| Trampoline for page $7800 lookups |
              78fe e006  jmp  y,$06       ;|                                   |
              78ff c218  st   [$18]       ;+-----------------------------------+
              7900 0005  ld   $05
              7901 0005  ld   $05
              7902 0006  ld   $06
              7903 0006  ld   $06
              7904 0006  ld   $06
              * 10 times
              790c 0007  ld   $07
              790d 0007  ld   $07
              790e 0007  ld   $07
              * 10 times
              7916 0008  ld   $08
              7917 0008  ld   $08
              7918 0008  ld   $08
              * 10 times
              7920 0009  ld   $09
              7921 0009  ld   $09
              7922 0009  ld   $09
              * 10 times
              792a 000a  ld   $0a
              792b 000a  ld   $0a
              792c 000a  ld   $0a
              * 10 times
              7934 000b  ld   $0b
              7935 000b  ld   $0b
              7936 000b  ld   $0b
              * 10 times
              793e 00a9  ld   $a9
              793f 0038  ld   $38
              7940 0042  ld   $42
              7941 0038  ld   $38
              7942 0032  ld   $32
              7943 0040  ld   $40
              7944 0042  ld   $42
              7945 0063  ld   $63
              7946 00ff  ld   $ff
              7947 0075  ld   $75
              7948 0011  ld   $11
              7949 0000  ld   $00
              794a 000c  ld   $0c
              794b 002b  ld   $2b
              794c 0024  ld   $24
              794d 0011  ld   $11
              794e 00ff  ld   $ff
              794f 00fe  ld   $fe
              7950 0099  ld   $99
              7951 0054  ld   $54
              7952 002b  ld   $2b
              7953 0028  ld   $28
              7954 001a  ld   $1a
              7955 0006  ld   $06
              7956 0082  ld   $82
              7957 00c0  ld   $c0
              7958 005e  ld   $5e
              7959 0026  ld   $26
              795a 00b4  ld   $b4
              795b 00cb  ld   $cb
              795c 0093  ld   $93
              795d 0028  ld   $28
              795e 0016  ld   $16
              795f 0000  ld   $00
              7960 0026  ld   $26
              7961 00b4  ld   $b4
              7962 00cb  ld   $cb
              7963 0093  ld   $93
              7964 0028  ld   $28
              7965 001a  ld   $1a
              7966 0007  ld   $07
              7967 0082  ld   $82
              7968 00c0  ld   $c0
              7969 005e  ld   $5e
              796a 0026  ld   $26
              796b 00b4  ld   $b4
              796c 00cb  ld   $cb
              796d 0063  ld   $63
              796e 00ff  ld   $ff
              796f 0075  ld   $75
              7970 004d  ld   $4d
              7971 0014  ld   $14
              7972 00c6  ld   $c6
              7973 004d  ld   $4d
              7974 005a  ld   $5a
              7975 00c8  ld   $c8
              7976 004d  ld   $4d
              7977 0000  ld   $00
              7978 00c4  ld   $c4
              7979 004d  ld   $4d
              797a 0000  ld   $00
              797b 0082  ld   $82
              797c 002d  ld   $2d
              797d 0084  ld   $84
              797e 00c8  ld   $c8
              797f 00c6  ld   $c6
              7980 0085  ld   $85
              7981 00a1  ld   $a1
              7982 004f  ld   $4f
              7983 0042  ld   $42
              7984 0030  ld   $30
              7985 00c6  ld   $c6
              7986 00c6  ld   $c6
              7987 00a7  ld   $a7
              7988 0002  ld   $02
              7989 00c4  ld   $c4
              798a 0093  ld   $93
              798b 00c4  ld   $c4
              798c 00bd  ld   $bd
              798d 00b1  ld   $b1
              798e 0005  ld   $05
              798f 0063  ld   $63
              7990 00ff  ld   $ff
              7991 0075  ld   $75
              7992 0021  ld   $21
              7993 005c  ld   $5c
              7994 00bb  ld   $bb
              7995 00ed  ld   $ed
              7996 0005  ld   $05
              7997 0093  ld   $93
              7998 005e  ld   $5e
              7999 00c7  ld   $c7
              799a 000a  ld   $0a
              799b 0075  ld   $75
              799c 005e  ld   $5e
              799d 00bd  ld   $bd
              799e 00eb  ld   $eb
              799f 0005  ld   $05
              79a0 004d  ld   $4d
              79a1 0011  ld   $11
              79a2 0082  ld   $82
              79a3 0065  ld   $65
              79a4 0084  ld   $84
              79a5 005c  ld   $5c
              79a6 001c  ld   $1c
              79a7 005d  ld   $5d
              79a8 0085  ld   $85
              79a9 0008  ld   $08
              79aa 0085  ld   $85
              79ab 00a1  ld   $a1
              79ac 004f  ld   $4f
              79ad 0059  ld   $59
              79ae 0000  ld   $00
              79af 005e  ld   $5e
              79b0 005e  ld   $5e
              79b1 002b  ld   $2b
              79b2 005c  ld   $5c
              79b3 0063  ld   $63
              79b4 00ff  ld   $ff
              79b5 001a  ld   $1a
              79b6 0057  ld   $57
              79b7 00bd  ld   $bd
              79b8 00f4  ld   $f4
              79b9 0005  ld   $05
              79ba 0063  ld   $63
              79bb 00ff  ld   $ff
              79bc 001a  ld   $1a
              79bd 0055  ld   $55
              79be 00e6  ld   $e6
              79bf 000b  ld   $0b
              79c0 002b  ld   $2b
              79c1 00e8  ld   $e8
              79c2 0085  ld   $85
              79c3 0000  ld   $00
              79c4 0006  ld   $06
              79c5 0006  ld   $06
              79c6 0000  ld   $00
              79c7 0000  ld   $00
              79c8 00ab  ld   $ab
              79c9 00ca  ld   $ca
              79ca 00e8  ld   $e8
              79cb 003a  ld   $3a
              79cc 0021  ld   $21
              79cd 00ca  ld   $ca
              79ce 00c5  ld   $c5
              79cf 0009  ld   $09
              79d0 0006  ld   $06
              79d1 0063  ld   $63
              79d2 00ff  ld   $ff
              79d3 001a  ld   $1a
              79d4 0054  ld   $54
              79d5 00b8  ld   $b8
              79d6 0038  ld   $38
              79d7 002b  ld   $2b
              79d8 00c8  ld   $c8
              79d9 0021  ld   $21
              79da 00c8  ld   $c8
              79db 00c5  ld   $c5
              79dc 0016  ld   $16
              79dd 0006  ld   $06
              79de 0063  ld   $63
              79df 00ff  ld   $ff
              79e0 0053  ld   $53
              79e1 00c8  ld   $c8
              79e2 0000  ld   $00
              79e3 0004  ld   $04
              79e4 002b  ld   $2b
              79e5 00c4  ld   $c4
              79e6 0021  ld   $21
              79e7 00c4  ld   $c4
              79e8 00e6  ld   $e6
              79e9 000a  ld   $0a
              79ea 00bf  ld   $bf
              79eb 009e  ld   $9e
              79ec 0008  ld   $08
              79ed 0063  ld   $63
              79ee 00ff  ld   $ff
              79ef 0085  ld   $85
              79f0 00a0  ld   $a0
              79f1 0008  ld   $08
              79f2 00a6  ld   $a6
              79f3 006e  ld   $6e
              79f4 00a6  ld   $a6
              79f5 006d  ld   $6d
              79f6 00ba  ld   $ba
              79f7 006c  ld   $6c
              79f8 00b2  ld   $b2
              79f9 006c  ld   $6c
              79fa 00aa  ld   $aa
              79fb fe00  bra  ac          ;+-----------------------------------+
              79fc fcfd  bra  $79fd       ;|                                   |
              79fd 1418  ld   $18,y       ;| Trampoline for page $7900 lookups |
              79fe e006  jmp  y,$06       ;|                                   |
              79ff c218  st   [$18]       ;+-----------------------------------+
              7a00 006c  ld   $6c
              7a01 00a2  ld   $a2
              7a02 006c  ld   $6c
              7a03 00ba  ld   $ba
              7a04 006b  ld   $6b
              7a05 00b2  ld   $b2
              7a06 006b  ld   $6b
              7a07 00aa  ld   $aa
              7a08 006b  ld   $6b
              7a09 00a2  ld   $a2
              7a0a 006b  ld   $6b
              7a0b 00ba  ld   $ba
              7a0c 006a  ld   $6a
              7a0d 00b2  ld   $b2
              7a0e 006a  ld   $6a
              7a0f 00aa  ld   $aa
              7a10 006a  ld   $6a
              7a11 00a2  ld   $a2
              7a12 006a  ld   $6a
              7a13 00ba  ld   $ba
              7a14 0069  ld   $69
              7a15 00b2  ld   $b2
              7a16 0069  ld   $69
              7a17 00aa  ld   $aa
              7a18 0069  ld   $69
              7a19 00a2  ld   $a2
              7a1a 0069  ld   $69
              7a1b 00ba  ld   $ba
              7a1c 0068  ld   $68
              7a1d 00b2  ld   $b2
              7a1e 0068  ld   $68
              7a1f 00aa  ld   $aa
              7a20 0068  ld   $68
              7a21 00a2  ld   $a2
              7a22 0068  ld   $68
              7a23 00ba  ld   $ba
              7a24 0067  ld   $67
              7a25 00b2  ld   $b2
              7a26 0067  ld   $67
              7a27 00aa  ld   $aa
              7a28 0067  ld   $67
              7a29 00a2  ld   $a2
              7a2a 0067  ld   $67
              7a2b 00ba  ld   $ba
              7a2c 0066  ld   $66
              7a2d 00b2  ld   $b2
              7a2e 0066  ld   $66
              7a2f 00aa  ld   $aa
              7a30 0066  ld   $66
              7a31 00a2  ld   $a2
              7a32 0066  ld   $66
              7a33 00ae  ld   $ae
              7a34 0065  ld   $65
              7a35 00a6  ld   $a6
              7a36 0065  ld   $65
              7a37 00a8  ld   $a8
              7a38 0064  ld   $64
              7a39 00a0  ld   $a0
              7a3a 0064  ld   $64
              7a3b 00a8  ld   $a8
              7a3c 0063  ld   $63
              7a3d 00a0  ld   $a0
              7a3e 0063  ld   $63
              7a3f 00ae  ld   $ae
              7a40 0062  ld   $62
              7a41 00a6  ld   $a6
              7a42 0062  ld   $62
              7a43 00ae  ld   $ae
              7a44 0061  ld   $61
              7a45 00a6  ld   $a6
              7a46 0061  ld   $61
              7a47 00ae  ld   $ae
              7a48 0060  ld   $60
              7a49 00a6  ld   $a6
              7a4a 0060  ld   $60
              7a4b 00ae  ld   $ae
              7a4c 005f  ld   $5f
              7a4d 00a6  ld   $a6
              7a4e 005f  ld   $5f
              7a4f 00ae  ld   $ae
              7a50 005e  ld   $5e
              7a51 00a6  ld   $a6
              7a52 005e  ld   $5e
              7a53 00a2  ld   $a2
              7a54 005d  ld   $5d
              7a55 00a2  ld   $a2
              7a56 005c  ld   $5c
              7a57 00a2  ld   $a2
              7a58 005b  ld   $5b
              7a59 00a2  ld   $a2
              7a5a 005a  ld   $5a
              7a5b 00aa  ld   $aa
              7a5c 0056  ld   $56
              7a5d 00a2  ld   $a2
              7a5e 0057  ld   $57
              7a5f 00f2  ld   $f2
              7a60 0055  ld   $55
              7a61 00a0  ld   $a0
              7a62 0058  ld   $58
              7a63 00a0  ld   $a0
              7a64 0056  ld   $56
              7a65 00e8  ld   $e8
              7a66 0055  ld   $55
              7a67 00de  ld   $de
              7a68 0055  ld   $55
              7a69 00d4  ld   $d4
              7a6a 0055  ld   $55
              7a6b 00ca  ld   $ca
              7a6c 0055  ld   $55
              7a6d 00c0  ld   $c0
              7a6e 0055  ld   $55
              7a6f 00b6  ld   $b6
              7a70 0055  ld   $55
              7a71 00ac  ld   $ac
              7a72 0055  ld   $55
              7a73 00a2  ld   $a2
              7a74 0055  ld   $55
              7a75 00f6  ld   $f6
              7a76 0054  ld   $54
              7a77 00ec  ld   $ec
              7a78 0054  ld   $54
              7a79 00e2  ld   $e2
              7a7a 0054  ld   $54
              7a7b 00d8  ld   $d8
              7a7c 0054  ld   $54
              7a7d 00ce  ld   $ce
              7a7e 0054  ld   $54
              7a7f 00c4  ld   $c4
              7a80 0054  ld   $54
              7a81 00ba  ld   $ba
              7a82 0054  ld   $54
              7a83 00b0  ld   $b0
              7a84 0054  ld   $54
              7a85 00a6  ld   $a6
              7a86 0054  ld   $54
              7a87 00a0  ld   $a0
              7a88 006d  ld   $6d
              7a89 00a0  ld   $a0
              7a8a 0065  ld   $65
              7a8b 00a0  ld   $a0
              7a8c 0062  ld   $62
              7a8d 00a0  ld   $a0
              7a8e 0061  ld   $61
              7a8f 00a0  ld   $a0
              7a90 0060  ld   $60
              7a91 00a0  ld   $a0
              7a92 005f  ld   $5f
              7a93 00a0  ld   $a0
              7a94 005e  ld   $5e
              7a95 00a0  ld   $a0
              7a96 0054  ld   $54
              7a97 00fa  ld   $fa
              7a98 0053  ld   $53
              7a99 00f4  ld   $f4
              7a9a 0053  ld   $53
              7a9b 00ee  ld   $ee
              7a9c 0053  ld   $53
              7a9d 00e8  ld   $e8
              7a9e 0053  ld   $53
              7a9f 00e2  ld   $e2
              7aa0 0053  ld   $53
              7aa1 00dc  ld   $dc
              7aa2 0053  ld   $53
              7aa3 00d6  ld   $d6
              7aa4 0053  ld   $53
              7aa5 00c8  ld   $c8
              7aa6 0053  ld   $53
              7aa7 00ba  ld   $ba
              7aa8 0053  ld   $53
              7aa9 00ac  ld   $ac
              7aaa 0053  ld   $53
              7aab 00a6  ld   $a6
              7aac 0053  ld   $53
              7aad 00a0  ld   $a0
              7aae 0053  ld   $53
              7aaf 00fa  ld   $fa
              7ab0 0052  ld   $52
              7ab1 00f4  ld   $f4
              7ab2 0052  ld   $52
              7ab3 00ee  ld   $ee
              7ab4 0052  ld   $52
              7ab5 00e8  ld   $e8
              7ab6 0052  ld   $52
              7ab7 00e2  ld   $e2
              7ab8 0052  ld   $52
              7ab9 00dc  ld   $dc
              7aba 0052  ld   $52
              7abb 00d6  ld   $d6
              7abc 0052  ld   $52
              7abd 00d0  ld   $d0
              7abe 0052  ld   $52
              7abf 00c2  ld   $c2
              7ac0 0052  ld   $52
              7ac1 00b4  ld   $b4
              7ac2 0052  ld   $52
              7ac3 00a6  ld   $a6
              7ac4 0052  ld   $52
              7ac5 00f2  ld   $f2
              7ac6 0051  ld   $51
              7ac7 00e4  ld   $e4
              7ac8 0051  ld   $51
              7ac9 00d6  ld   $d6
              7aca 0051  ld   $51
              7acb 00c8  ld   $c8
              7acc 0051  ld   $51
              7acd 0008  ld   $08
              7ace 00a0  ld   $a0
              7acf 005f  ld   $5f
              7ad0 0053  ld   $53
              7ad1 00ca  ld   $ca
              7ad2 0000  ld   $00
              7ad3 0005  ld   $05
              7ad4 002b  ld   $2b
              7ad5 00ea  ld   $ea
              7ad6 0059  ld   $59
              7ad7 0004  ld   $04
              7ad8 00b8  ld   $b8
              7ad9 00ea  ld   $ea
              7ada 002b  ld   $2b
              7adb 00c6  ld   $c6
              7adc 0021  ld   $21
              7add 00c6  ld   $c6
              7ade 00e6  ld   $e6
              7adf 0005  ld   $05
              7ae0 00bf  ld   $bf
              7ae1 00b3  ld   $b3
              7ae2 0008  ld   $08
              7ae3 0063  ld   $63
              7ae4 00ff  ld   $ff
              7ae5 0021  ld   $21
              7ae6 00c6  ld   $c6
              7ae7 00c5  ld   $c5
              7ae8 00ba  ld   $ba
              7ae9 0008  ld   $08
              7aea 0063  ld   $63
              7aeb 00ff  ld   $ff
              7aec 0032  ld   $32
              7aed 0096  ld   $96
              7aee 00c6  ld   $c6
              7aef 0032  ld   $32
              7af0 0098  ld   $98
              7af1 00c4  ld   $c4
              7af2 0011  ld   $11
              7af3 00a0  ld   $a0
              7af4 0059  ld   $59
              7af5 0085  ld   $85
              7af6 00d1  ld   $d1
              7af7 004c  ld   $4c
              7af8 00f6  ld   $f6
              7af9 002b  ld   $2b
              7afa 00cc  ld   $cc
              7afb fe00  bra  ac          ;+-----------------------------------+
              7afc fcfd  bra  $7afd       ;|                                   |
              7afd 1418  ld   $18,y       ;| Trampoline for page $7a00 lookups |
              7afe e006  jmp  y,$06       ;|                                   |
              7aff c218  st   [$18]       ;+-----------------------------------+
              7b00 006f  ld   $6f
              7b01 00d2  ld   $d2
              7b02 001a  ld   $1a
              7b03 00d3  ld   $d3
              7b04 00bd  ld   $bd
              7b05 00d2  ld   $d2
              7b06 0008  ld   $08
              7b07 0063  ld   $63
              7b08 00ff  ld   $ff
              7b09 0021  ld   $21
              7b0a 00cc  ld   $cc
              7b0b 00e3  ld   $e3
              7b0c 0001  ld   $01
              7b0d 0025  ld   $25
              7b0e 0000  ld   $00
              7b0f 0016  ld   $16
              7b10 0000  ld   $00
              7b11 0056  ld   $56
              7b12 0021  ld   $21
              7b13 00cc  ld   $cc
              7b14 00e3  ld   $e3
              7b15 0004  ld   $04
              7b16 006f  ld   $6f
              7b17 00ce  ld   $ce
              7b18 0021  ld   $21
              7b19 00cc  ld   $cc
              7b1a 00e3  ld   $e3
              7b1b 0006  ld   $06
              7b1c 006f  ld   $6f
              7b1d 00d0  ld   $d0
              7b1e 0042  ld   $42
              7b1f 0006  ld   $06
              7b20 00e8  ld   $e8
              7b21 00ce  ld   $ce
              7b22 007d  ld   $7d
              7b23 00d0  ld   $d0
              7b24 0042  ld   $42
              7b25 0004  ld   $04
              7b26 00e8  ld   $e8
              7b27 00d0  ld   $d0
              7b28 007d  ld   $7d
              7b29 00ce  ld   $ce
              7b2a 0021  ld   $21
              7b2b 0044  ld   $44
              7b2c 00fc  ld   $fc
              7b2d 00cc  ld   $cc
              7b2e 00bd  ld   $bd
              7b2f 00a1  ld   $a1
              7b30 0009  ld   $09
              7b31 0085  ld   $85
              7b32 00a0  ld   $a0
              7b33 0009  ld   $09
              7b34 0009  ld   $09
              7b35 00a0  ld   $a0
              7b36 005f  ld   $5f
              7b37 0032  ld   $32
              7b38 0044  ld   $44
              7b39 00d0  ld   $d0
              7b3a 0032  ld   $32
              7b3b 0096  ld   $96
              7b3c 00c6  ld   $c6
              7b3d 0032  ld   $32
              7b3e 0098  ld   $98
              7b3f 00c4  ld   $c4
              7b40 0011  ld   $11
              7b41 00a4  ld   $a4
              7b42 0070  ld   $70
              7b43 0085  ld   $85
              7b44 00d1  ld   $d1
              7b45 004c  ld   $4c
              7b46 00e3  ld   $e3
              7b47 0001  ld   $01
              7b48 00ad  ld   $ad
              7b49 002b  ld   $2b
              7b4a 004e  ld   $4e
              7b4b 0032  ld   $32
              7b4c 0096  ld   $96
              7b4d 00c6  ld   $c6
              7b4e 0032  ld   $32
              7b4f 0098  ld   $98
              7b50 00c4  ld   $c4
              7b51 0011  ld   $11
              7b52 00a4  ld   $a4
              7b53 0070  ld   $70
              7b54 0085  ld   $85
              7b55 00d1  ld   $d1
              7b56 004c  ld   $4c
              7b57 00f6  ld   $f6
              7b58 00c7  ld   $c7
              7b59 0080  ld   $80
              7b5a 0021  ld   $21
              7b5b 0000  ld   $00
              7b5c 002b  ld   $2b
              7b5d 009c  ld   $9c
              7b5e 0032  ld   $32
              7b5f 0096  ld   $96
              7b60 00c6  ld   $c6
              7b61 0032  ld   $32
              7b62 0098  ld   $98
              7b63 00c4  ld   $c4
              7b64 0011  ld   $11
              7b65 00a4  ld   $a4
              7b66 0070  ld   $70
              7b67 0085  ld   $85
              7b68 00d1  ld   $d1
              7b69 004c  ld   $4c
              7b6a 007d  ld   $7d
              7b6b 009c  ld   $9c
              7b6c 00c7  ld   $c7
              7b6d 0080  ld   $80
              7b6e 006f  ld   $6f
              7b6f 00d2  ld   $d2
              7b70 00bb  ld   $bb
              7b71 00e0  ld   $e0
              7b72 0009  ld   $09
              7b73 005b  ld   $5b
              7b74 00ce  ld   $ce
              7b75 0088  ld   $88
              7b76 0080  ld   $80
              7b77 00f0  ld   $f0
              7b78 00ce  ld   $ce
              7b79 0085  ld   $85
              7b7a 00f9  ld   $f9
              7b7b 0011  ld   $11
              7b7c 0021  ld   $21
              7b7d 00c4  ld   $c4
              7b7e 00e9  ld   $e9
              7b7f 00e9  ld   $e9
              7b80 00e9  ld   $e9
              7b81 002b  ld   $2b
              7b82 00ea  ld   $ea
              7b83 0021  ld   $21
              7b84 00c4  ld   $c4
              7b85 00e9  ld   $e9
              7b86 00e9  ld   $e9
              7b87 0099  ld   $99
              7b88 00ea  ld   $ea
              7b89 0099  ld   $99
              7b8a 0038  ld   $38
              7b8b 002b  ld   $2b
              7b8c 00c8  ld   $c8
              7b8d 0059  ld   $59
              7b8e 0004  ld   $04
              7b8f 00b8  ld   $b8
              7b90 00c6  ld   $c6
              7b91 002b  ld   $2b
              7b92 00c6  ld   $c6
              7b93 0085  ld   $85
              7b94 00a0  ld   $a0
              7b95 000a  ld   $0a
              7b96 000a  ld   $0a
              7b97 00a0  ld   $a0
              7b98 0060  ld   $60
              7b99 0021  ld   $21
              7b9a 00c6  ld   $c6
              7b9b 00e9  ld   $e9
              7b9c 00e9  ld   $e9
              7b9d 00e9  ld   $e9
              7b9e 0099  ld   $99
              7b9f 00c6  ld   $c6
              7ba0 0099  ld   $99
              7ba1 00c6  ld   $c6
              7ba2 002b  ld   $2b
              7ba3 00ea  ld   $ea
              7ba4 00ab  ld   $ab
              7ba5 00ca  ld   $ca
              7ba6 00ea  ld   $ea
              7ba7 003a  ld   $3a
              7ba8 0021  ld   $21
              7ba9 0040  ld   $40
              7baa 00c3  ld   $c3
              7bab 00bf  ld   $bf
              7bac 000a  ld   $0a
              7bad 004d  ld   $4d
              7bae 0012  ld   $12
              7baf 0082  ld   $82
              7bb0 002d  ld   $2d
              7bb1 0084  ld   $84
              7bb2 00ca  ld   $ca
              7bb3 00c8  ld   $c8
              7bb4 0085  ld   $85
              7bb5 00a1  ld   $a1
              7bb6 004f  ld   $4f
              7bb7 0085  ld   $85
              7bb8 00cb  ld   $cb
              7bb9 000a  ld   $0a
              7bba 004d  ld   $4d
              7bbb 0013  ld   $13
              7bbc 0082  ld   $82
              7bbd 002d  ld   $2d
              7bbe 0084  ld   $84
              7bbf 00ca  ld   $ca
              7bc0 00c8  ld   $c8
              7bc1 0085  ld   $85
              7bc2 00f4  ld   $f4
              7bc3 004c  ld   $4c
              7bc4 004d  ld   $4d
              7bc5 0000  ld   $00
              7bc6 005e  ld   $5e
              7bc7 002f  ld   $2f
              7bc8 00ca  ld   $ca
              7bc9 005e  ld   $5e
              7bca 0099  ld   $99
              7bcb 00c8  ld   $c8
              7bcc 002b  ld   $2b
              7bcd 005c  ld   $5c
              7bce 0085  ld   $85
              7bcf 00be  ld   $be
              7bd0 001b  ld   $1b
              7bd1 0021  ld   $21
              7bd2 0050  ld   $50
              7bd3 00bb  ld   $bb
              7bd4 00e8  ld   $e8
              7bd5 000a  ld   $0a
              7bd6 004d  ld   $4d
              7bd7 0011  ld   $11
              7bd8 0082  ld   $82
              7bd9 0065  ld   $65
              7bda 0084  ld   $84
              7bdb 00c8  ld   $c8
              7bdc 0038  ld   $38
              7bdd 0002  ld   $02
              7bde 0085  ld   $85
              7bdf 00ca  ld   $ca
              7be0 0085  ld   $85
              7be1 00a1  ld   $a1
              7be2 004f  ld   $4f
              7be3 0093  ld   $93
              7be4 0059  ld   $59
              7be5 0063  ld   $63
              7be6 00ff  ld   $ff
              7be7 0075  ld   $75
              7be8 004d  ld   $4d
              7be9 0000  ld   $00
              7bea 005a  ld   $5a
              7beb 003f  ld   $3f
              7bec 005a  ld   $5a
              7bed 00a0  ld   $a0
              7bee 006e  ld   $6e
              7bef 002b  ld   $2b
              7bf0 00c4  ld   $c4
              7bf1 0021  ld   $21
              7bf2 00c4  ld   $c4
              7bf3 00bb  ld   $bb
              7bf4 00a4  ld   $a4
              7bf5 000b  ld   $0b
              7bf6 0085  ld   $85
              7bf7 00a0  ld   $a0
              7bf8 000b  ld   $0b
              7bf9 000b  ld   $0b
              7bfa 00a0  ld   $a0
              7bfb fe00  bra  ac          ;+-----------------------------------+
              7bfc fcfd  bra  $7bfd       ;|                                   |
              7bfd 1418  ld   $18,y       ;| Trampoline for page $7b00 lookups |
              7bfe e006  jmp  y,$06       ;|                                   |
              7bff c218  st   [$18]       ;+-----------------------------------+
              7c00 005f  ld   $5f
              7c01 0032  ld   $32
              7c02 00c4  ld   $c4
              7c03 00c4  ld   $c4
              7c04 0085  ld   $85
              7c05 00e3  ld   $e3
              7c06 0011  ld   $11
              7c07 0059  ld   $59
              7c08 0000  ld   $00
              7c09 0051  ld   $51
              7c0a 005a  ld   $5a
              7c0b 00a0  ld   $a0
              7c0c 006e  ld   $6e
              7c0d 00a7  ld   $a7
              7c0e 0002  ld   $02
              7c0f 005a  ld   $5a
              7c10 0093  ld   $93
              7c11 005a  ld   $5a
              7c12 00bd  ld   $bd
              7c13 00f0  ld   $f0
              7c14 000a  ld   $0a
              7c15 0059  ld   $59
              7c16 0000  ld   $00
              7c17 002b  ld   $2b
              7c18 00c6  ld   $c6
              7c19 002b  ld   $2b
              7c1a 00c8  ld   $c8
              7c1b 004d  ld   $4d
              7c1c 003f  ld   $3f
              7c1d 00ca  ld   $ca
              7c1e 0021  ld   $21
              7c1f 00c6  ld   $c6
              7c20 00e9  ld   $e9
              7c21 00c7  ld   $c7
              7c22 007d  ld   $7d
              7c23 001b  ld   $1b
              7c24 00a0  ld   $a0
              7c25 006f  ld   $6f
              7c26 00c8  ld   $c8
              7c27 0016  ld   $16
              7c28 0001  ld   $01
              7c29 0093  ld   $93
              7c2a 0032  ld   $32
              7c2b 0094  ld   $94
              7c2c 00c8  ld   $c8
              7c2d 0032  ld   $32
              7c2e 0096  ld   $96
              7c2f 00ca  ld   $ca
              7c30 004d  ld   $4d
              7c31 0000  ld   $00
              7c32 0098  ld   $98
              7c33 0085  ld   $85
              7c34 00d7  ld   $d7
              7c35 004d  ld   $4d
              7c36 0016  ld   $16
              7c37 0002  ld   $02
              7c38 0093  ld   $93
              7c39 0032  ld   $32
              7c3a 0094  ld   $94
              7c3b 00c8  ld   $c8
              7c3c 0032  ld   $32
              7c3d 0096  ld   $96
              7c3e 00ca  ld   $ca
              7c3f 004d  ld   $4d
              7c40 0000  ld   $00
              7c41 0098  ld   $98
              7c42 0085  ld   $85
              7c43 00d7  ld   $d7
              7c44 004d  ld   $4d
              7c45 0016  ld   $16
              7c46 0003  ld   $03
              7c47 0093  ld   $93
              7c48 0032  ld   $32
              7c49 0094  ld   $94
              7c4a 00c8  ld   $c8
              7c4b 0032  ld   $32
              7c4c 0096  ld   $96
              7c4d 00ca  ld   $ca
              7c4e 004d  ld   $4d
              7c4f 0000  ld   $00
              7c50 0098  ld   $98
              7c51 0085  ld   $85
              7c52 00d7  ld   $d7
              7c53 004d  ld   $4d
              7c54 0016  ld   $16
              7c55 0004  ld   $04
              7c56 0093  ld   $93
              7c57 0032  ld   $32
              7c58 0094  ld   $94
              7c59 00c8  ld   $c8
              7c5a 0032  ld   $32
              7c5b 0096  ld   $96
              7c5c 00ca  ld   $ca
              7c5d 0085  ld   $85
              7c5e 00a0  ld   $a0
              7c5f 000c  ld   $0c
              7c60 000c  ld   $0c
              7c61 00a0  ld   $a0
              7c62 005f  ld   $5f
              7c63 004d  ld   $4d
              7c64 0000  ld   $00
              7c65 0098  ld   $98
              7c66 0085  ld   $85
              7c67 00d7  ld   $d7
              7c68 004d  ld   $4d
              7c69 0093  ld   $93
              7c6a 00c6  ld   $c6
              7c6b 00a7  ld   $a7
              7c6c 0020  ld   $20
              7c6d 00c6  ld   $c6
              7c6e 00bd  ld   $bd
              7c6f 00af  ld   $af
              7c70 000c  ld   $0c
              7c71 004d  ld   $4d
              7c72 0000  ld   $00
              7c73 00c6  ld   $c6
              7c74 0021  ld   $21
              7c75 00ca  ld   $ca
              7c76 002f  ld   $2f
              7c77 0018  ld   $18
              7c78 0073  ld   $73
              7c79 002f  ld   $2f
              7c7a 0018  ld   $18
              7c7b 0073  ld   $73
              7c7c 0082  ld   $82
              7c7d 0001  ld   $01
              7c7e 00e3  ld   $e3
              7c7f 0014  ld   $14
              7c80 002b  ld   $2b
              7c81 0082  ld   $82
              7c82 002d  ld   $2d
              7c83 0084  ld   $84
              7c84 0036  ld   $36
              7c85 0034  ld   $34
              7c86 0085  ld   $85
              7c87 00a1  ld   $a1
              7c88 004f  ld   $4f
              7c89 002f  ld   $2f
              7c8a 00d6  ld   $d6
              7c8b 006e  ld   $6e
              7c8c 004a  ld   $4a
              7c8d 00ca  ld   $ca
              7c8e 00bb  ld   $bb
              7c8f 000b  ld   $0b
              7c90 0085  ld   $85
              7c91 00a0  ld   $a0
              7c92 0050  ld   $50
              7c93 0063  ld   $63
              7c94 00ff  ld   $ff
              7c95 0075  ld   $75
              7c96 00a7  ld   $a7
              7c97 0003  ld   $03
              7c98 004b  ld   $4b
              7c99 00c5  ld   $c5
              7c9a 00d9  ld   $d9
              7c9b 000c  ld   $0c
              7c9c 0063  ld   $63
              7c9d 00ff  ld   $ff
              7c9e 004d  ld   $4d
              7c9f 0000  ld   $00
              7ca0 005a  ld   $5a
              7ca1 003f  ld   $3f
              7ca2 005a  ld   $5a
              7ca3 00a0  ld   $a0
              7ca4 006e  ld   $6e
              7ca5 002b  ld   $2b
              7ca6 00c4  ld   $c4
              7ca7 0021  ld   $21
              7ca8 00c4  ld   $c4
              7ca9 00bb  ld   $bb
              7caa 00dc  ld   $dc
              7cab 000d  ld   $0d
              7cac 0011  ld   $11
              7cad 00e1  ld   $e1
              7cae 0004  ld   $04
              7caf 002b  ld   $2b
              7cb0 0022  ld   $22
              7cb1 0011  ld   $11
              7cb2 0000  ld   $00
              7cb3 003f  ld   $3f
              7cb4 002b  ld   $2b
              7cb5 0024  ld   $24
              7cb6 0021  ld   $21
              7cb7 00c4  ld   $c4
              7cb8 002b  ld   $2b
              7cb9 0028  ld   $28
              7cba 0016  ld   $16
              7cbb 001f  ld   $1f
              7cbc 0026  ld   $26
              7cbd 00b4  ld   $b4
              7cbe 00cb  ld   $cb
              7cbf 0085  ld   $85
              7cc0 00a0  ld   $a0
              7cc1 000d  ld   $0d
              7cc2 000d  ld   $0d
              7cc3 00a0  ld   $a0
              7cc4 005f  ld   $5f
              7cc5 0093  ld   $93
              7cc6 00c5  ld   $c5
              7cc7 00a7  ld   $a7
              7cc8 0079  ld   $79
              7cc9 00c5  ld   $c5
              7cca 00bf  ld   $bf
              7ccb 00b1  ld   $b1
              7ccc 000d  ld   $0d
              7ccd 0016  ld   $16
              7cce 0000  ld   $00
              7ccf 0026  ld   $26
              7cd0 00b4  ld   $b4
              7cd1 00cb  ld   $cb
              7cd2 004d  ld   $4d
              7cd3 0000  ld   $00
              7cd4 00c4  ld   $c4
              7cd5 0085  ld   $85
              7cd6 00db  ld   $db
              7cd7 000d  ld   $0d
              7cd8 0021  ld   $21
              7cd9 00c4  ld   $c4
              7cda 00c7  ld   $c7
              7cdb 0007  ld   $07
              7cdc 001b  ld   $1b
              7cdd 0000  ld   $00
              7cde 00ad  ld   $ad
              7cdf 008c  ld   $8c
              7ce0 000c  ld   $0c
              7ce1 00bd  ld   $bd
              7ce2 00d9  ld   $d9
              7ce3 000d  ld   $0d
              7ce4 0016  ld   $16
              7ce5 0000  ld   $00
              7ce6 0026  ld   $26
              7ce7 00b4  ld   $b4
              7ce8 00cb  ld   $cb
              7ce9 00a7  ld   $a7
              7cea 0072  ld   $72
              7ceb 00c5  ld   $c5
              7cec 00c3  ld   $c3
              7ced 00d3  ld   $d3
              7cee 000d  ld   $0d
              7cef 0059  ld   $59
              7cf0 0000  ld   $00
              7cf1 0051  ld   $51
              7cf2 005a  ld   $5a
              7cf3 00a0  ld   $a0
              7cf4 006e  ld   $6e
              7cf5 0085  ld   $85
              7cf6 00e3  ld   $e3
              7cf7 0012  ld   $12
              7cf8 0063  ld   $63
              7cf9 00ff  ld   $ff
              7cfa 0085  ld   $85
              7cfb fe00  bra  ac          ;+-----------------------------------+
              7cfc fcfd  bra  $7cfd       ;|                                   |
              7cfd 1418  ld   $18,y       ;| Trampoline for page $7c00 lookups |
              7cfe e006  jmp  y,$06       ;|                                   |
              7cff c218  st   [$18]       ;+-----------------------------------+
              7d00 00b2  ld   $b2
              7d01 0012  ld   $12
              7d02 004d  ld   $4d
              7d03 0000  ld   $00
              7d04 00c4  ld   $c4
              7d05 0085  ld   $85
              7d06 00e4  ld   $e4
              7d07 000d  ld   $0d
              7d08 0032  ld   $32
              7d09 00c4  ld   $c4
              7d0a 00c4  ld   $c4
              7d0b 0085  ld   $85
              7d0c 00c3  ld   $c3
              7d0d 000e  ld   $0e
              7d0e 0021  ld   $21
              7d0f 00c4  ld   $c4
              7d10 0051  ld   $51
              7d11 005a  ld   $5a
              7d12 00a0  ld   $a0
              7d13 006e  ld   $6e
              7d14 00a7  ld   $a7
              7d15 0002  ld   $02
              7d16 005a  ld   $5a
              7d17 0093  ld   $93
              7d18 005a  ld   $5a
              7d19 00bd  ld   $bd
              7d1a 00dc  ld   $dc
              7d1b 000c  ld   $0c
              7d1c 0063  ld   $63
              7d1d 00ff  ld   $ff
              7d1e 0075  ld   $75
              7d1f 00c7  ld   $c7
              7d20 0032  ld   $32
              7d21 0075  ld   $75
              7d22 0059  ld   $59
              7d23 00bd  ld   $bd
              7d24 00bf  ld   $bf
              7d25 000e  ld   $0e
              7d26 0085  ld   $85
              7d27 00a0  ld   $a0
              7d28 000e  ld   $0e
              7d29 000e  ld   $0e
              7d2a 00a0  ld   $a0
              7d2b 005e  ld   $5e
              7d2c 0059  ld   $59
              7d2d 0000  ld   $00
              7d2e 002b  ld   $2b
              7d2f 0044  ld   $44
              7d30 002b  ld   $2b
              7d31 0046  ld   $46
              7d32 0021  ld   $21
              7d33 005c  ld   $5c
              7d34 00bd  ld   $bd
              7d35 00bf  ld   $bf
              7d36 000e  ld   $0e
              7d37 0021  ld   $21
              7d38 0072  ld   $72
              7d39 00bd  ld   $bd
              7d3a 00bf  ld   $bf
              7d3b 000e  ld   $0e
              7d3c 0016  ld   $16
              7d3d 0001  ld   $01
              7d3e 0052  ld   $52
              7d3f 0093  ld   $93
              7d40 0032  ld   $32
              7d41 00a7  ld   $a7
              7d42 0001  ld   $01
              7d43 0033  ld   $33
              7d44 00c3  ld   $c3
              7d45 00bb  ld   $bb
              7d46 000e  ld   $0e
              7d47 0018  ld   $18
              7d48 0033  ld   $33
              7d49 001c  ld   $1c
              7d4a 0030  ld   $30
              7d4b 0030  ld   $30
              7d4c 0004  ld   $04
              7d4d 0063  ld   $63
              7d4e 00ff  ld   $ff
              7d4f 0075  ld   $75
              7d50 0021  ld   $21
              7d51 0046  ld   $46
              7d52 00bd  ld   $bd
              7d53 00c9  ld   $c9
              7d54 000e  ld   $0e
              7d55 0063  ld   $63
              7d56 00ff  ld   $ff
              7d57 0021  ld   $21
              7d58 0046  ld   $46
              7d59 00e3  ld   $e3
              7d5a 0006  ld   $06
              7d5b 006f  ld   $6f
              7d5c 0046  ld   $46
              7d5d 00b1  ld   $b1
              7d5e 002f  ld   $2f
              7d5f 002f  ld   $2f
              7d60 0033  ld   $33
              7d61 0019  ld   $19
              7d62 00bb  ld   $bb
              7d63 00dc  ld   $dc
              7d64 000e  ld   $0e
              7d65 004d  ld   $4d
              7d66 0000  ld   $00
              7d67 00c4  ld   $c4
              7d68 0063  ld   $63
              7d69 00ff  ld   $ff
              7d6a 005b  ld   $5b
              7d6b 0046  ld   $46
              7d6c 0082  ld   $82
              7d6d 000f  ld   $0f
              7d6e 002b  ld   $2b
              7d6f 00c6  ld   $c6
              7d70 005b  ld   $5b
              7d71 0046  ld   $46
              7d72 002b  ld   $2b
              7d73 00a0  ld   $a0
              7d74 0085  ld   $85
              7d75 00a0  ld   $a0
              7d76 004d  ld   $4d
              7d77 0082  ld   $82
              7d78 0007  ld   $07
              7d79 002b  ld   $2b
              7d7a 00c8  ld   $c8
              7d7b 0021  ld   $21
              7d7c 0046  ld   $46
              7d7d 00e3  ld   $e3
              7d7e 0002  ld   $02
              7d7f 006f  ld   $6f
              7d80 00ca  ld   $ca
              7d81 00a7  ld   $a7
              7d82 0004  ld   $04
              7d83 00c8  ld   $c8
              7d84 00bd  ld   $bd
              7d85 00cc  ld   $cc
              7d86 000f  ld   $0f
              7d87 0085  ld   $85
              7d88 00a0  ld   $a0
              7d89 000f  ld   $0f
              7d8a 000f  ld   $0f
              7d8b 00a0  ld   $a0
              7d8c 0060  ld   $60
              7d8d 0032  ld   $32
              7d8e 0096  ld   $96
              7d8f 00c8  ld   $c8
              7d90 0032  ld   $32
              7d91 0098  ld   $98
              7d92 00c6  ld   $c6
              7d93 0011  ld   $11
              7d94 00a4  ld   $a4
              7d95 0070  ld   $70
              7d96 0085  ld   $85
              7d97 00d1  ld   $d1
              7d98 004c  ld   $4c
              7d99 00f6  ld   $f6
              7d9a 00c7  ld   $c7
              7d9b 0080  ld   $80
              7d9c 001f  ld   $1f
              7d9d 0000  ld   $00
              7d9e 00bd  ld   $bd
              7d9f 00c9  ld   $c9
              7da0 000f  ld   $0f
              7da1 0021  ld   $21
              7da2 0038  ld   $38
              7da3 002f  ld   $2f
              7da4 00ca  ld   $ca
              7da5 0060  ld   $60
              7da6 00e3  ld   $e3
              7da7 0005  ld   $05
              7da8 002b  ld   $2b
              7da9 00e8  ld   $e8
              7daa 0021  ld   $21
              7dab 003a  ld   $3a
              7dac 002f  ld   $2f
              7dad 00cb  ld   $cb
              7dae 0062  ld   $62
              7daf 00e3  ld   $e3
              7db0 000e  ld   $0e
              7db1 002f  ld   $2f
              7db2 0018  ld   $18
              7db3 005e  ld   $5e
              7db4 0099  ld   $99
              7db5 00e8  ld   $e8
              7db6 002b  ld   $2b
              7db7 00c4  ld   $c4
              7db8 0085  ld   $85
              7db9 00fa  ld   $fa
              7dba 000f  ld   $0f
              7dbb 0042  ld   $42
              7dbc 0001  ld   $01
              7dbd 0096  ld   $96
              7dbe 00c8  ld   $c8
              7dbf 0032  ld   $32
              7dc0 0098  ld   $98
              7dc1 00c6  ld   $c6
              7dc2 0011  ld   $11
              7dc3 00a4  ld   $a4
              7dc4 0070  ld   $70
              7dc5 0085  ld   $85
              7dc6 00d1  ld   $d1
              7dc7 004c  ld   $4c
              7dc8 00f6  ld   $f6
              7dc9 00c7  ld   $c7
              7dca 0080  ld   $80
              7dcb 001f  ld   $1f
              7dcc 0000  ld   $00
              7dcd 00bb  ld   $bb
              7dce 00f8  ld   $f8
              7dcf 000f  ld   $0f
              7dd0 0021  ld   $21
              7dd1 0038  ld   $38
              7dd2 002f  ld   $2f
              7dd3 00ca  ld   $ca
              7dd4 0060  ld   $60
              7dd5 00e3  ld   $e3
              7dd6 0005  ld   $05
              7dd7 002b  ld   $2b
              7dd8 00e8  ld   $e8
              7dd9 0021  ld   $21
              7dda 003a  ld   $3a
              7ddb 002f  ld   $2f
              7ddc 00cb  ld   $cb
              7ddd 0062  ld   $62
              7dde 00e3  ld   $e3
              7ddf 000e  ld   $0e
              7de0 002f  ld   $2f
              7de1 0018  ld   $18
              7de2 005e  ld   $5e
              7de3 0099  ld   $99
              7de4 00e8  ld   $e8
              7de5 002b  ld   $2b
              7de6 00c4  ld   $c4
              7de7 0063  ld   $63
              7de8 00ff  ld   $ff
              7de9 0075  ld   $75
              7dea 0085  ld   $85
              7deb 00a0  ld   $a0
              7dec 0010  ld   $10
              7ded 0010  ld   $10
              7dee 00a0  ld   $a0
              7def 005f  ld   $5f
              7df0 0021  ld   $21
              7df1 0060  ld   $60
              7df2 00bb  ld   $bb
              7df3 00cd  ld   $cd
              7df4 0010  ld   $10
              7df5 004d  ld   $4d
              7df6 0016  ld   $16
              7df7 0082  ld   $82
              7df8 0065  ld   $65
              7df9 0084  ld   $84
              7dfa 0060  ld   $60
              7dfb fe00  bra  ac          ;+-----------------------------------+
              7dfc fcfd  bra  $7dfd       ;|                                   |
              7dfd 1418  ld   $18,y       ;| Trampoline for page $7d00 lookups |
              7dfe e006  jmp  y,$06       ;|                                   |
              7dff c218  st   [$18]       ;+-----------------------------------+
              7e00 001c  ld   $1c
              7e01 0061  ld   $61
              7e02 0085  ld   $85
              7e03 0008  ld   $08
              7e04 0085  ld   $85
              7e05 00a1  ld   $a1
              7e06 004f  ld   $4f
              7e07 0093  ld   $93
              7e08 0062  ld   $62
              7e09 00a7  ld   $a7
              7e0a 0008  ld   $08
              7e0b 0062  ld   $62
              7e0c 00bd  ld   $bd
              7e0d 00cb  ld   $cb
              7e0e 0010  ld   $10
              7e0f 004d  ld   $4d
              7e10 0017  ld   $17
              7e11 0082  ld   $82
              7e12 0065  ld   $65
              7e13 0084  ld   $84
              7e14 0060  ld   $60
              7e15 001c  ld   $1c
              7e16 0061  ld   $61
              7e17 0085  ld   $85
              7e18 0008  ld   $08
              7e19 0085  ld   $85
              7e1a 00a1  ld   $a1
              7e1b 004f  ld   $4f
              7e1c 0059  ld   $59
              7e1d 0000  ld   $00
              7e1e 002b  ld   $2b
              7e1f 0062  ld   $62
              7e20 002b  ld   $2b
              7e21 0060  ld   $60
              7e22 0063  ld   $63
              7e23 00ff  ld   $ff
              7e24 0021  ld   $21
              7e25 005c  ld   $5c
              7e26 00bb  ld   $bb
              7e27 00d4  ld   $d4
              7e28 0010  ld   $10
              7e29 0063  ld   $63
              7e2a 00ff  ld   $ff
              7e2b 001a  ld   $1a
              7e2c 0057  ld   $57
              7e2d 00bd  ld   $bd
              7e2e 00db  ld   $db
              7e2f 0010  ld   $10
              7e30 0063  ld   $63
              7e31 00ff  ld   $ff
              7e32 0021  ld   $21
              7e33 0054  ld   $54
              7e34 00c7  ld   $c7
              7e35 0001  ld   $01
              7e36 001d  ld   $1d
              7e37 0000  ld   $00
              7e38 00ad  ld   $ad
              7e39 008c  ld   $8c
              7e3a 003f  ld   $3f
              7e3b 00bd  ld   $bd
              7e3c 00bf  ld   $bf
              7e3d 0011  ld   $11
              7e3e 004d  ld   $4d
              7e3f 0000  ld   $00
              7e40 005a  ld   $5a
              7e41 003f  ld   $3f
              7e42 005a  ld   $5a
              7e43 00a0  ld   $a0
              7e44 006e  ld   $6e
              7e45 002b  ld   $2b
              7e46 00c4  ld   $c4
              7e47 0021  ld   $21
              7e48 00c4  ld   $c4
              7e49 00bb  ld   $bb
              7e4a 00b7  ld   $b7
              7e4b 0011  ld   $11
              7e4c 001a  ld   $1a
              7e4d 00c4  ld   $c4
              7e4e 002f  ld   $2f
              7e4f 0054  ld   $54
              7e50 001f  ld   $1f
              7e51 0085  ld   $85
              7e52 00a0  ld   $a0
              7e53 0011  ld   $11
              7e54 0011  ld   $11
              7e55 00a0  ld   $a0
              7e56 0060  ld   $60
              7e57 00bd  ld   $bd
              7e58 00b7  ld   $b7
              7e59 0011  ld   $11
              7e5a 0032  ld   $32
              7e5b 00c4  ld   $c4
              7e5c 00c4  ld   $c4
              7e5d 0085  ld   $85
              7e5e 00e3  ld   $e3
              7e5f 0011  ld   $11
              7e60 0059  ld   $59
              7e61 0000  ld   $00
              7e62 0051  ld   $51
              7e63 005a  ld   $5a
              7e64 00a0  ld   $a0
              7e65 006e  ld   $6e
              7e66 0021  ld   $21
              7e67 0054  ld   $54
              7e68 00c7  ld   $c7
              7e69 000b  ld   $0b
              7e6a 001d  ld   $1d
              7e6b 0003  ld   $03
              7e6c 002b  ld   $2b
              7e6d 0060  ld   $60
              7e6e 0063  ld   $63
              7e6f 00ff  ld   $ff
              7e70 00a7  ld   $a7
              7e71 0002  ld   $02
              7e72 005a  ld   $5a
              7e73 0093  ld   $93
              7e74 005a  ld   $5a
              7e75 00bd  ld   $bd
              7e76 00ea  ld   $ea
              7e77 0010  ld   $10
              7e78 0063  ld   $63
              7e79 00ff  ld   $ff
              7e7a 0075  ld   $75
              7e7b 005b  ld   $5b
              7e7c 0054  ld   $54
              7e7d 008c  ld   $8c
              7e7e 000c  ld   $0c
              7e7f 00bd  ld   $bd
              7e80 00d2  ld   $d2
              7e81 0011  ld   $11
              7e82 0016  ld   $16
              7e83 0000  ld   $00
              7e84 0056  ld   $56
              7e85 0085  ld   $85
              7e86 0081  ld   $81
              7e87 0005  ld   $05
              7e88 0085  ld   $85
              7e89 00e1  ld   $e1
              7e8a 0011  ld   $11
              7e8b 005b  ld   $5b
              7e8c 0054  ld   $54
              7e8d 008c  ld   $8c
              7e8e 0003  ld   $03
              7e8f 00bd  ld   $bd
              7e90 00df  ld   $df
              7e91 0011  ld   $11
              7e92 0016  ld   $16
              7e93 0000  ld   $00
              7e94 0056  ld   $56
              7e95 004d  ld   $4d
              7e96 0001  ld   $01
              7e97 006c  ld   $6c
              7e98 0063  ld   $63
              7e99 00ff  ld   $ff
              7e9a 0075  ld   $75
              7e9b 0011  ld   $11
              7e9c 00e1  ld   $e1
              7e9d 0004  ld   $04
              7e9e 002b  ld   $2b
              7e9f 0022  ld   $22
              7ea0 0011  ld   $11
              7ea1 0000  ld   $00
              7ea2 003f  ld   $3f
              7ea3 002b  ld   $2b
              7ea4 0024  ld   $24
              7ea5 0021  ld   $21
              7ea6 00c4  ld   $c4
              7ea7 002b  ld   $2b
              7ea8 0028  ld   $28
              7ea9 0016  ld   $16
              7eaa 0000  ld   $00
              7eab 0026  ld   $26
              7eac 00b4  ld   $b4
              7ead 00cb  ld   $cb
              7eae 0063  ld   $63
              7eaf 00ff  ld   $ff
              7eb0 0075  ld   $75
              7eb1 0011  ld   $11
              7eb2 00e1  ld   $e1
              7eb3 0004  ld   $04
              7eb4 0085  ld   $85
              7eb5 00a0  ld   $a0
              7eb6 0012  ld   $12
              7eb7 0012  ld   $12
              7eb8 00a0  ld   $a0
              7eb9 005f  ld   $5f
              7eba 002b  ld   $2b
              7ebb 0022  ld   $22
              7ebc 0011  ld   $11
              7ebd 0000  ld   $00
              7ebe 003f  ld   $3f
              7ebf 002b  ld   $2b
              7ec0 0024  ld   $24
              7ec1 0021  ld   $21
              7ec2 0054  ld   $54
              7ec3 002b  ld   $2b
              7ec4 0028  ld   $28
              7ec5 0016  ld   $16
              7ec6 0000  ld   $00
              7ec7 0026  ld   $26
              7ec8 00b4  ld   $b4
              7ec9 00cb  ld   $cb
              7eca 0063  ld   $63
              7ecb 00ff  ld   $ff
              7ecc 0075  ld   $75
              7ecd 0011  ld   $11
              7ece 0000  ld   $00
              7ecf 000c  ld   $0c
              7ed0 002b  ld   $2b
              7ed1 0024  ld   $24
              7ed2 0011  ld   $11
              7ed3 00ff  ld   $ff
              7ed4 0002  ld   $02
              7ed5 0099  ld   $99
              7ed6 00c4  ld   $c4
              7ed7 002b  ld   $2b
              7ed8 0028  ld   $28
              7ed9 001a  ld   $1a
              7eda 0006  ld   $06
              7edb 0082  ld   $82
              7edc 0003  ld   $03
              7edd 005e  ld   $5e
              7ede 0026  ld   $26
              7edf 00b4  ld   $b4
              7ee0 00cb  ld   $cb
              7ee1 0093  ld   $93
              7ee2 0028  ld   $28
              7ee3 0016  ld   $16
              7ee4 0000  ld   $00
              7ee5 0026  ld   $26
              7ee6 00b4  ld   $b4
              7ee7 00cb  ld   $cb
              7ee8 0093  ld   $93
              7ee9 0028  ld   $28
              7eea 001a  ld   $1a
              7eeb 0007  ld   $07
              7eec 0082  ld   $82
              7eed 0003  ld   $03
              7eee 005e  ld   $5e
              7eef 0026  ld   $26
              7ef0 00b4  ld   $b4
              7ef1 00cb  ld   $cb
              7ef2 0063  ld   $63
              7ef3 00ff  ld   $ff
              7ef4 0075  ld   $75
              7ef5 0016  ld   $16
              7ef6 0001  ld   $01
              7ef7 0053  ld   $53
              7ef8 0085  ld   $85
              7ef9 00ee  ld   $ee
              7efa 000a  ld   $0a
              7efb fe00  bra  ac          ;+-----------------------------------+
              7efc fcfd  bra  $7efd       ;|                                   |
              7efd 1418  ld   $18,y       ;| Trampoline for page $7e00 lookups |
              7efe e006  jmp  y,$06       ;|                                   |
              7eff c218  st   [$18]       ;+-----------------------------------+
              7f00 0063  ld   $63
              7f01 00ff  ld   $ff
              7f02 0075  ld   $75
              7f03 0014  ld   $14
              7f04 0031  ld   $31
              7f05 0085  ld   $85
              7f06 00f8  ld   $f8
              7f07 001d  ld   $1d
              7f08 0085  ld   $85
              7f09 00ee  ld   $ee
              7f0a 000a  ld   $0a
              7f0b 001a  ld   $1a
              7f0c 0031  ld   $31
              7f0d 00bd  ld   $bd
              7f0e 00f2  ld   $f2
              7f0f 0012  ld   $12
              7f10 0016  ld   $16
              7f11 0001  ld   $01
              7f12 0053  ld   $53
              7f13 0063  ld   $63
              7f14 00ff  ld   $ff
              7f15 0075  ld   $75
              7f16 0021  ld   $21
              7f17 004e  ld   $4e
              7f18 00bd  ld   $bd
              7f19 00a0  ld   $a0
              7f1a 0013  ld   $13
              7f1b 0085  ld   $85
              7f1c 00a0  ld   $a0
              7f1d 0013  ld   $13
              7f1e 0013  ld   $13
              7f1f 00a0  ld   $a0
              7f20 0060  ld   $60
              7f21 0063  ld   $63
              7f22 00ff  ld   $ff
              7f23 0011  ld   $11
              7f24 00b7  ld   $b7
              7f25 0071  ld   $71
              7f26 002b  ld   $2b
              7f27 0096  ld   $96
              7f28 0021  ld   $21
              7f29 004e  ld   $4e
              7f2a 00e6  ld   $e6
              7f2b 0001  ld   $01
              7f2c 00c7  ld   $c7
              7f2d 0075  ld   $75
              7f2e 001b  ld   $1b
              7f2f 00a1  ld   $a1
              7f30 00ad  ld   $ad
              7f31 0085  ld   $85
              7f32 00db  ld   $db
              7f33 004e  ld   $4e
              7f34 0085  ld   $85
              7f35 00ce  ld   $ce
              7f36 001b  ld   $1b
              7f37 004d  ld   $4d
              7f38 0000  ld   $00
              7f39 004e  ld   $4e
              7f3a 0063  ld   $63
              7f3b 00ff  ld   $ff
              7f3c 0075  ld   $75
              7f3d 0093  ld   $93
              7f3e 004a  ld   $4a
              7f3f 00c7  ld   $c7
              7f40 003c  ld   $3c
              7f41 0075  ld   $75
              7f42 004a  ld   $4a
              7f43 00bd  ld   $bd
              7f44 00c8  ld   $c8
              7f45 0013  ld   $13
              7f46 0016  ld   $16
              7f47 0000  ld   $00
              7f48 004a  ld   $4a
              7f49 0093  ld   $93
              7f4a 004b  ld   $4b
              7f4b 0063  ld   $63
              7f4c 00ff  ld   $ff
              7f4d 0075  ld   $75
              7f4e 00a7  ld   $a7
              7f4f 0038  ld   $38
              7f50 003a  ld   $3a
              7f51 00bd  ld   $bd
              7f52 00d3  ld   $d3
              7f53 0013  ld   $13
              7f54 0063  ld   $63
              7f55 00ff  ld   $ff
              7f56 0021  ld   $21
              7f57 006c  ld   $6c
              7f58 00bb  ld   $bb
              7f59 00a3  ld   $a3
              7f5a 0014  ld   $14
              7f5b 0016  ld   $16
              7f5c 0000  ld   $00
              7f5d 0056  ld   $56
              7f5e 0065  ld   $65
              7f5f 006a  ld   $6a
              7f60 0064  ld   $64
              7f61 00c7  ld   $c7
              7f62 000f  ld   $0f
              7f63 006f  ld   $6f
              7f64 0058  ld   $58
              7f65 0079  ld   $79
              7f66 00cc  ld   $cc
              7f67 0056  ld   $56
              7f68 006f  ld   $6f
              7f69 00c8  ld   $c8
              7f6a 0011  ld   $11
              7f6b 00b7  ld   $b7
              7f6c 0071  ld   $71
              7f6d 002b  ld   $2b
              7f6e 0096  ld   $96
              7f6f 0021  ld   $21
              7f70 00c8  ld   $c8
              7f71 0085  ld   $85
              7f72 00db  ld   $db
              7f73 004e  ld   $4e
              7f74 0011  ld   $11
              7f75 00a0  ld   $a0
              7f76 007b  ld   $7b
              7f77 002b  ld   $2b
              7f78 0096  ld   $96
              7f79 0021  ld   $21
              7f7a 00c8  ld   $c8
              7f7b 0085  ld   $85
              7f7c 00db  ld   $db
              7f7d 004e  ld   $4e
              7f7e 0085  ld   $85
              7f7f 00a0  ld   $a0
              7f80 0014  ld   $14
              7f81 0014  ld   $14
              7f82 00a0  ld   $a0
              7f83 005f  ld   $5f
              7f84 0085  ld   $85
              7f85 00ce  ld   $ce
              7f86 001b  ld   $1b
              7f87 0063  ld   $63
              7f88 00ff  ld   $ff
              7f89 00c7  ld   $c7
              7f8a 0001  ld   $01
              7f8b 006f  ld   $6f
              7f8c 004a  ld   $4a
              7f8d 00bb  ld   $bb
              7f8e 00ac  ld   $ac
              7f8f 0014  ld   $14
              7f90 0063  ld   $63
              7f91 00ff  ld   $ff
              7f92 00a7  ld   $a7
              7f93 001c  ld   $1c
              7f94 004b  ld   $4b
              7f95 00bf  ld   $bf
              7f96 00d2  ld   $d2
              7f97 0014  ld   $14
              7f98 0016  ld   $16
              7f99 0003  ld   $03
              7f9a 004b  ld   $4b
              7f9b 00c7  ld   $c7
              7f9c 0001  ld   $01
              7f9d 006f  ld   $6f
              7f9e 0058  ld   $58
              7f9f 002b  ld   $2b
              7fa0 00c6  ld   $c6
              7fa1 0053  ld   $53
              7fa2 00c6  ld   $c6
              7fa3 00c8  ld   $c8
              7fa4 007e  ld   $7e
              7fa5 00c7  ld   $c7
              7fa6 0009  ld   $09
              7fa7 001b  ld   $1b
              7fa8 0000  ld   $00
              7fa9 002b  ld   $2b
              7faa 0064  ld   $64
              7fab 0021  ld   $21
              7fac 00c6  ld   $c6
              7fad 00bb  ld   $bb
              7fae 00d2  ld   $d2
              7faf 0014  ld   $14
              7fb0 0021  ld   $21
              7fb1 0064  ld   $64
              7fb2 00c7  ld   $c7
              7fb3 0080  ld   $80
              7fb4 0021  ld   $21
              7fb5 0000  ld   $00
              7fb6 002b  ld   $2b
              7fb7 0064  ld   $64
              7fb8 0021  ld   $21
              7fb9 006a  ld   $6a
              7fba 00bb  ld   $bb
              7fbb 00e5  ld   $e5
              7fbc 0015  ld   $15
              7fbd 00a7  ld   $a7
              7fbe 000f  ld   $0f
              7fbf 006b  ld   $6b
              7fc0 00c5  ld   $c5
              7fc1 00a7  ld   $a7
              7fc2 0015  ld   $15
              7fc3 001a  ld   $1a
              7fc4 004a  ld   $4a
              7fc5 0018  ld   $18
              7fc6 0018  ld   $18
              7fc7 0018  ld   $18
              7fc8 0018  ld   $18
              7fc9 0082  ld   $82
              7fca 0001  ld   $01
              7fcb 00bb  ld   $bb
              7fcc 00f7  ld   $f7
              7fcd 0014  ld   $14
              7fce 004d  ld   $4d
              7fcf 0025  ld   $25
              7fd0 0082  ld   $82
              7fd1 0065  ld   $65
              7fd2 0084  ld   $84
              7fd3 006a  ld   $6a
              7fd4 0016  ld   $16
              7fd5 0011  ld   $11
              7fd6 0085  ld   $85
              7fd7 0085  ld   $85
              7fd8 00a1  ld   $a1
              7fd9 004f  ld   $4f
              7fda 0085  ld   $85
              7fdb 00a9  ld   $a9
              7fdc 0015  ld   $15
              7fdd 004d  ld   $4d
              7fde 0026  ld   $26
              7fdf 0082  ld   $82
              7fe0 0085  ld   $85
              7fe1 00a0  ld   $a0
              7fe2 0015  ld   $15
              7fe3 0015  ld   $15
              7fe4 00a0  ld   $a0
              7fe5 005f  ld   $5f
              7fe6 0065  ld   $65
              7fe7 0084  ld   $84
              7fe8 006a  ld   $6a
              7fe9 0016  ld   $16
              7fea 0011  ld   $11
              7feb 0085  ld   $85
              7fec 0085  ld   $85
              7fed 00a1  ld   $a1
              7fee 004f  ld   $4f
              7fef 0093  ld   $93
              7ff0 006b  ld   $6b
              7ff1 00c7  ld   $c7
              7ff2 000f  ld   $0f
              7ff3 0075  ld   $75
              7ff4 006b  ld   $6b
              7ff5 00bd  ld   $bd
              7ff6 00cf  ld   $cf
              7ff7 0015  ld   $15
              7ff8 001a  ld   $1a
              7ff9 006a  ld   $6a
              7ffa 00e3  ld   $e3
              7ffb fe00  bra  ac          ;+-----------------------------------+
              7ffc fcfd  bra  $7ffd       ;|                                   |
              7ffd 1418  ld   $18,y       ;| Trampoline for page $7f00 lookups |
              7ffe e006  jmp  y,$06       ;|                                   |
              7fff c218  st   [$18]       ;+-----------------------------------+
              8000 0003  ld   $03
              8001 00c7  ld   $c7
              8002 000a  ld   $0a
              8003 001b  ld   $1b
              8004 0000  ld   $00
              8005 002b  ld   $2b
              8006 00c4  ld   $c4
              8007 004d  ld   $4d
              8008 0027  ld   $27
              8009 0082  ld   $82
              800a 0065  ld   $65
              800b 0084  ld   $84
              800c 006a  ld   $6a
              800d 0016  ld   $16
              800e 0011  ld   $11
              800f 0085  ld   $85
              8010 0085  ld   $85
              8011 00a1  ld   $a1
              8012 004f  ld   $4f
              8013 0032  ld   $32
              8014 00c4  ld   $c4
              8015 00c4  ld   $c4
              8016 0085  ld   $85
              8017 00cf  ld   $cf
              8018 001d  ld   $1d
              8019 0085  ld   $85
              801a 00e7  ld   $e7
              801b 0015  ld   $15
              801c 00c7  ld   $c7
              801d 002d  ld   $2d
              801e 0075  ld   $75
              801f 006b  ld   $6b
              8020 00bd  ld   $bd
              8021 00e5  ld   $e5
              8022 0015  ld   $15
              8023 004d  ld   $4d
              8024 0027  ld   $27
              8025 0082  ld   $82
              8026 0065  ld   $65
              8027 0084  ld   $84
              8028 006a  ld   $6a
              8029 0016  ld   $16
              802a 0011  ld   $11
              802b 0085  ld   $85
              802c 0085  ld   $85
              802d 00a1  ld   $a1
              802e 004f  ld   $4f
              802f 004d  ld   $4d
              8030 0000  ld   $00
              8031 006a  ld   $6a
              8032 0021  ld   $21
              8033 0064  ld   $64
              8034 00bd  ld   $bd
              8035 00ec  ld   $ec
              8036 0015  ld   $15
              8037 0063  ld   $63
              8038 00ff  ld   $ff
              8039 0021  ld   $21
              803a 0064  ld   $64
              803b 00c7  ld   $c7
              803c 007f  ld   $7f
              803d 001f  ld   $1f
              803e 00ff  ld   $ff
              803f 002b  ld   $2b
              8040 00c4  ld   $c4
              8041 0021  ld   $21
              8042 0064  ld   $64
              8043 00c7  ld   $c7
              8044 0080  ld   $80
              8045 001f  ld   $1f
              8046 0000  ld   $00
              8047 0085  ld   $85
              8048 00a0  ld   $a0
              8049 0016  ld   $16
              804a 0016  ld   $16
              804b 00a0  ld   $a0
              804c 005f  ld   $5f
              804d 002b  ld   $2b
              804e 00c6  ld   $c6
              804f 001a  ld   $1a
              8050 0064  ld   $64
              8051 0018  ld   $18
              8052 0018  ld   $18
              8053 0082  ld   $82
              8054 0003  ld   $03
              8055 002b  ld   $2b
              8056 00ca  ld   $ca
              8057 00a7  ld   $a7
              8058 0003  ld   $03
              8059 00ca  ld   $ca
              805a 00bd  ld   $bd
              805b 00b1  ld   $b1
              805c 0016  ld   $16
              805d 004d  ld   $4d
              805e 0000  ld   $00
              805f 00ca  ld   $ca
              8060 001a  ld   $1a
              8061 00c5  ld   $c5
              8062 00e3  ld   $e3
              8063 0003  ld   $03
              8064 002b  ld   $2b
              8065 00cc  ld   $cc
              8066 0021  ld   $21
              8067 00c6  ld   $c6
              8068 00bb  ld   $bb
              8069 00f4  ld   $f4
              806a 0016  ld   $16
              806b 004d  ld   $4d
              806c 0001  ld   $01
              806d 0082  ld   $82
              806e 0065  ld   $65
              806f 0084  ld   $84
              8070 00c4  ld   $c4
              8071 001c  ld   $1c
              8072 00c5  ld   $c5
              8073 0085  ld   $85
              8074 0008  ld   $08
              8075 0085  ld   $85
              8076 00a1  ld   $a1
              8077 004f  ld   $4f
              8078 0059  ld   $59
              8079 0034  ld   $34
              807a 00b8  ld   $b8
              807b 00ca  ld   $ca
              807c 002b  ld   $2b
              807d 0082  ld   $82
              807e 002d  ld   $2d
              807f 0084  ld   $84
              8080 00cc  ld   $cc
              8081 00c4  ld   $c4
              8082 0085  ld   $85
              8083 00a1  ld   $a1
              8084 004f  ld   $4f
              8085 0014  ld   $14
              8086 0064  ld   $64
              8087 001a  ld   $1a
              8088 0064  ld   $64
              8089 00bd  ld   $bd
              808a 00f1  ld   $f1
              808b 0016  ld   $16
              808c 004d  ld   $4d
              808d 0000  ld   $00
              808e 0064  ld   $64
              808f 0059  ld   $59
              8090 0000  ld   $00
              8091 002f  ld   $2f
              8092 0003  ld   $03
              8093 0027  ld   $27
              8094 004d  ld   $4d
              8095 0027  ld   $27
              8096 0082  ld   $82
              8097 0016  ld   $16
              8098 0000  ld   $00
              8099 0084  ld   $84
              809a 0016  ld   $16
              809b 0011  ld   $11
              809c 0085  ld   $85
              809d 0085  ld   $85
              809e 00a1  ld   $a1
              809f 004f  ld   $4f
              80a0 0085  ld   $85
              80a1 00d0  ld   $d0
              80a2 0017  ld   $17
              80a3 004d  ld   $4d
              80a4 0002  ld   $02
              80a5 0082  ld   $82
              80a6 0065  ld   $65
              80a7 0084  ld   $84
              80a8 00c4  ld   $c4
              80a9 0085  ld   $85
              80aa 00a0  ld   $a0
              80ab 0017  ld   $17
              80ac 0017  ld   $17
              80ad 00a0  ld   $a0
              80ae 0060  ld   $60
              80af 001c  ld   $1c
              80b0 00c5  ld   $c5
              80b1 0085  ld   $85
              80b2 0008  ld   $08
              80b3 0085  ld   $85
              80b4 00f4  ld   $f4
              80b5 004c  ld   $4c
              80b6 0059  ld   $59
              80b7 0035  ld   $35
              80b8 0099  ld   $99
              80b9 00ca  ld   $ca
              80ba 002b  ld   $2b
              80bb 0082  ld   $82
              80bc 002d  ld   $2d
              80bd 0084  ld   $84
              80be 00cc  ld   $cc
              80bf 00c4  ld   $c4
              80c0 0085  ld   $85
              80c1 00f4  ld   $f4
              80c2 004c  ld   $4c
              80c3 0093  ld   $93
              80c4 0064  ld   $64
              80c5 00a7  ld   $a7
              80c6 008d  ld   $8d
              80c7 0064  ld   $64
              80c8 00c3  ld   $c3
              80c9 00ce  ld   $ce
              80ca 0017  ld   $17
              80cb 004d  ld   $4d
              80cc 0000  ld   $00
              80cd 0064  ld   $64
              80ce 0059  ld   $59
              80cf 0000  ld   $00
              80d0 002f  ld   $2f
              80d1 0003  ld   $03
              80d2 0027  ld   $27
              80d3 004d  ld   $4d
              80d4 0027  ld   $27
              80d5 0082  ld   $82
              80d6 0016  ld   $16
              80d7 008d  ld   $8d
              80d8 0084  ld   $84
              80d9 0016  ld   $16
              80da 0011  ld   $11
              80db 0085  ld   $85
              80dc 0085  ld   $85
              80dd 00a1  ld   $a1
              80de 004f  ld   $4f
              80df 0063  ld   $63
              80e0 00ff  ld   $ff
              80e1 0075  ld   $75
              80e2 0016  ld   $16
              80e3 00ff  ld   $ff
              80e4 002c  ld   $2c
              80e5 004d  ld   $4d
              80e6 0031  ld   $31
              80e7 009e  ld   $9e
              80e8 001a  ld   $1a
              80e9 0059  ld   $59
              80ea 002b  ld   $2b
              80eb 00a0  ld   $a0
              80ec 0021  ld   $21
              80ed 009e  ld   $9e
              80ee 00b8  ld   $b8
              80ef 00a0  ld   $a0
              80f0 00e3  ld   $e3
              80f1 0003  ld   $03
              80f2 002b  ld   $2b
              80f3 00ca  ld   $ca
              80f4 001a  ld   $1a
              80f5 006e  ld   $6e
              80f6 00bd  ld   $bd
              80f7 00aa  ld   $aa
              80f8 0018  ld   $18
              80f9 00c7  ld   $c7
              80fa 0003  ld   $03
              80fb fe00  bra  ac          ;+-----------------------------------+
              80fc fcfd  bra  $80fd       ;|                                   |
              80fd 1418  ld   $18,y       ;| Trampoline for page $8000 lookups |
              80fe e006  jmp  y,$06       ;|                                   |
              80ff c218  st   [$18]       ;+-----------------------------------+
              8100 006f  ld   $6f
              8101 006f  ld   $6f
              8102 00c7  ld   $c7
              8103 0074  ld   $74
              8104 001b  ld   $1b
              8105 00a0  ld   $a0
              8106 00ad  ld   $ad
              8107 00b1  ld   $b1
              8108 0014  ld   $14
              8109 002b  ld   $2b
              810a 00c6  ld   $c6
              810b 0016  ld   $16
              810c 0001  ld   $01
              810d 0093  ld   $93
              810e 0032  ld   $32
              810f 0094  ld   $94
              8110 00c6  ld   $c6
              8111 0085  ld   $85
              8112 00a0  ld   $a0
              8113 0018  ld   $18
              8114 0018  ld   $18
              8115 00a0  ld   $a0
              8116 0060  ld   $60
              8117 004d  ld   $4d
              8118 003f  ld   $3f
              8119 0096  ld   $96
              811a 004d  ld   $4d
              811b 0003  ld   $03
              811c 0098  ld   $98
              811d 0085  ld   $85
              811e 00d7  ld   $d7
              811f 004d  ld   $4d
              8120 0085  ld   $85
              8121 00c0  ld   $c0
              8122 0018  ld   $18
              8123 0044  ld   $44
              8124 0001  ld   $01
              8125 0082  ld   $82
              8126 00ca  ld   $ca
              8127 0059  ld   $59
              8128 0004  ld   $04
              8129 0085  ld   $85
              812a 00b8  ld   $b8
              812b 004d  ld   $4d
              812c 002f  ld   $2f
              812d 006e  ld   $6e
              812e 001f  ld   $1f
              812f 00bd  ld   $bd
              8130 00be  ld   $be
              8131 0018  ld   $18
              8132 0059  ld   $59
              8133 0000  ld   $00
              8134 002f  ld   $2f
              8135 0000  ld   $00
              8136 0027  ld   $27
              8137 001a  ld   $1a
              8138 006e  ld   $6e
              8139 00b8  ld   $b8
              813a 00ca  ld   $ca
              813b 00bf  ld   $bf
              813c 00cd  ld   $cd
              813d 0018  ld   $18
              813e 0016  ld   $16
              813f 0000  ld   $00
              8140 006e  ld   $6e
              8141 0093  ld   $93
              8142 006f  ld   $6f
              8143 0085  ld   $85
              8144 00d1  ld   $d1
              8145 0018  ld   $18
              8146 0093  ld   $93
              8147 006e  ld   $6e
              8148 001a  ld   $1a
              8149 0071  ld   $71
              814a 00bb  ld   $bb
              814b 00b3  ld   $b3
              814c 0019  ld   $19
              814d 001a  ld   $1a
              814e 0070  ld   $70
              814f 00e9  ld   $e9
              8150 00c7  ld   $c7
              8151 007f  ld   $7f
              8152 001b  ld   $1b
              8153 00a0  ld   $a0
              8154 006f  ld   $6f
              8155 00c6  ld   $c6
              8156 0011  ld   $11
              8157 00e0  ld   $e0
              8158 007f  ld   $7f
              8159 002f  ld   $2f
              815a 0070  ld   $70
              815b 0060  ld   $60
              815c 00ad  ld   $ad
              815d 002b  ld   $2b
              815e 00c8  ld   $c8
              815f 0016  ld   $16
              8160 0002  ld   $02
              8161 0093  ld   $93
              8162 0032  ld   $32
              8163 0094  ld   $94
              8164 00c6  ld   $c6
              8165 0032  ld   $32
              8166 0096  ld   $96
              8167 00c8  ld   $c8
              8168 004d  ld   $4d
              8169 0003  ld   $03
              816a 0098  ld   $98
              816b 0085  ld   $85
              816c 00d7  ld   $d7
              816d 004d  ld   $4d
              816e 0016  ld   $16
              816f 0003  ld   $03
              8170 0093  ld   $93
              8171 0032  ld   $32
              8172 0094  ld   $94
              8173 00c6  ld   $c6
              8174 0085  ld   $85
              8175 00a0  ld   $a0
              8176 0019  ld   $19
              8177 0019  ld   $19
              8178 00a0  ld   $a0
              8179 005e  ld   $5e
              817a 0032  ld   $32
              817b 0096  ld   $96
              817c 00c8  ld   $c8
              817d 004d  ld   $4d
              817e 0000  ld   $00
              817f 0098  ld   $98
              8180 0085  ld   $85
              8181 00d7  ld   $d7
              8182 004d  ld   $4d
              8183 0093  ld   $93
              8184 0070  ld   $70
              8185 00c7  ld   $c7
              8186 0020  ld   $20
              8187 0075  ld   $75
              8188 0070  ld   $70
              8189 00bd  ld   $bd
              818a 00b3  ld   $b3
              818b 0019  ld   $19
              818c 0085  ld   $85
              818d 00be  ld   $be
              818e 001b  ld   $1b
              818f 0021  ld   $21
              8190 0064  ld   $64
              8191 00fa  ld   $fa
              8192 0068  ld   $68
              8193 00bb  ld   $bb
              8194 00d2  ld   $d2
              8195 001a  ld   $1a
              8196 0021  ld   $21
              8197 0066  ld   $66
              8198 00e9  ld   $e9
              8199 00c7  ld   $c7
              819a 007e  ld   $7e
              819b 001b  ld   $1b
              819c 00a0  ld   $a0
              819d 00f6  ld   $f6
              819e 00b8  ld   $b8
              819f 0068  ld   $68
              81a0 002b  ld   $2b
              81a1 00c6  ld   $c6
              81a2 0016  ld   $16
              81a3 0004  ld   $04
              81a4 0093  ld   $93
              81a5 0032  ld   $32
              81a6 0094  ld   $94
              81a7 00c6  ld   $c6
              81a8 004d  ld   $4d
              81a9 0020  ld   $20
              81aa 0096  ld   $96
              81ab 004d  ld   $4d
              81ac 0002  ld   $02
              81ad 0098  ld   $98
              81ae 0085  ld   $85
              81af 00d7  ld   $d7
              81b0 004d  ld   $4d
              81b1 0093  ld   $93
              81b2 0066  ld   $66
              81b3 00a7  ld   $a7
              81b4 000c  ld   $0c
              81b5 0066  ld   $66
              81b6 00bd  ld   $bd
              81b7 00e0  ld   $e0
              81b8 0019  ld   $19
              81b9 004d  ld   $4d
              81ba 0000  ld   $00
              81bb 0066  ld   $66
              81bc 0021  ld   $21
              81bd 006c  ld   $6c
              81be 00bb  ld   $bb
              81bf 00ee  ld   $ee
              81c0 0019  ld   $19
              81c1 004d  ld   $4d
              81c2 0001  ld   $01
              81c3 0068  ld   $68
              81c4 0059  ld   $59
              81c5 0000  ld   $00
              81c6 002b  ld   $2b
              81c7 006c  ld   $6c
              81c8 002b  ld   $2b
              81c9 0064  ld   $64
              81ca 0021  ld   $21
              81cb 0068  ld   $68
              81cc 00bb  ld   $bb
              81cd 00d2  ld   $d2
              81ce 001a  ld   $1a
              81cf 0016  ld   $16
              81d0 0003  ld   $03
              81d1 0093  ld   $93
              81d2 0032  ld   $32
              81d3 00a0  ld   $a0
              81d4 00c6  ld   $c6
              81d5 0085  ld   $85
              81d6 00a0  ld   $a0
              81d7 001a  ld   $1a
              81d8 001a  ld   $1a
              81d9 00a0  ld   $a0
              81da 005f  ld   $5f
              81db 0085  ld   $85
              81dc 00a0  ld   $a0
              81dd 004d  ld   $4d
              81de 002b  ld   $2b
              81df 0094  ld   $94
              81e0 0032  ld   $32
              81e1 0096  ld   $96
              81e2 0048  ld   $48
              81e3 004d  ld   $4d
              81e4 0000  ld   $00
              81e5 0098  ld   $98
              81e6 0085  ld   $85
              81e7 00d7  ld   $d7
              81e8 004d  ld   $4d
              81e9 0021  ld   $21
              81ea 0066  ld   $66
              81eb 00bd  ld   $bd
              81ec 00d2  ld   $d2
              81ed 001a  ld   $1a
              81ee 0021  ld   $21
              81ef 0068  ld   $68
              81f0 00c7  ld   $c7
              81f1 0002  ld   $02
              81f2 001b  ld   $1b
              81f3 0058  ld   $58
              81f4 002b  ld   $2b
              81f5 0068  ld   $68
              81f6 0044  ld   $44
              81f7 000f  ld   $0f
              81f8 0048  ld   $48
              81f9 0048  ld   $48
              81fa 0021  ld   $21
              81fb fe00  bra  ac          ;+-----------------------------------+
              81fc fcfd  bra  $81fd       ;|                                   |
              81fd 1418  ld   $18,y       ;| Trampoline for page $8100 lookups |
              81fe e006  jmp  y,$06       ;|                                   |
              81ff c218  st   [$18]       ;+-----------------------------------+
              8200 0048  ld   $48
              8201 00c1  ld   $c1
              8202 00d2  ld   $d2
              8203 001a  ld   $1a
              8204 004d  ld   $4d
              8205 003c  ld   $3c
              8206 0048  ld   $48
              8207 004d  ld   $4d
              8208 0000  ld   $00
              8209 0068  ld   $68
              820a 0059  ld   $59
              820b 0000  ld   $00
              820c 002f  ld   $2f
              820d 0002  ld   $02
              820e 0027  ld   $27
              820f 0059  ld   $59
              8210 0000  ld   $00
              8211 002f  ld   $2f
              8212 0003  ld   $03
              8213 0027  ld   $27
              8214 0021  ld   $21
              8215 005c  ld   $5c
              8216 00fa  ld   $fa
              8217 0072  ld   $72
              8218 00bb  ld   $bb
              8219 00ba  ld   $ba
              821a 001b  ld   $1b
              821b 0059  ld   $59
              821c 003f  ld   $3f
              821d 00b8  ld   $b8
              821e 0072  ld   $72
              821f 002b  ld   $2b
              8220 00c8  ld   $c8
              8221 0016  ld   $16
              8222 0002  ld   $02
              8223 0093  ld   $93
              8224 001a  ld   $1a
              8225 005f  ld   $5f
              8226 00e9  ld   $e9
              8227 00c7  ld   $c7
              8228 007e  ld   $7e
              8229 001b  ld   $1b
              822a 00c0  ld   $c0
              822b 006f  ld   $6f
              822c 0094  ld   $94
              822d 0032  ld   $32
              822e 0096  ld   $96
              822f 00c8  ld   $c8
              8230 004d  ld   $4d
              8231 0003  ld   $03
              8232 0098  ld   $98
              8233 0085  ld   $85
              8234 00d7  ld   $d7
              8235 004d  ld   $4d
              8236 0093  ld   $93
              8237 005f  ld   $5f
              8238 00c7  ld   $c7
              8239 0003  ld   $03
              823a 0075  ld   $75
              823b 005f  ld   $5f
              823c 0085  ld   $85
              823d 00a0  ld   $a0
              823e 001b  ld   $1b
              823f 001b  ld   $1b
              8240 00a0  ld   $a0
              8241 005e  ld   $5e
              8242 00bd  ld   $bd
              8243 00a4  ld   $a4
              8244 001b  ld   $1b
              8245 0016  ld   $16
              8246 0000  ld   $00
              8247 005f  ld   $5f
              8248 0042  ld   $42
              8249 0002  ld   $02
              824a 0072  ld   $72
              824b 0072  ld   $72
              824c 0021  ld   $21
              824d 0072  ld   $72
              824e 00e6  ld   $e6
              824f 0040  ld   $40
              8250 00bf  ld   $bf
              8251 00ba  ld   $ba
              8252 001b  ld   $1b
              8253 0059  ld   $59
              8254 0000  ld   $00
              8255 005e  ld   $5e
              8256 005f  ld   $5f
              8257 002b  ld   $2b
              8258 0072  ld   $72
              8259 0059  ld   $59
              825a 0000  ld   $00
              825b 002f  ld   $2f
              825c 0001  ld   $01
              825d 0027  ld   $27
              825e 0063  ld   $63
              825f 00ff  ld   $ff
              8260 0075  ld   $75
              8261 004d  ld   $4d
              8262 0000  ld   $00
              8263 0070  ld   $70
              8264 0059  ld   $59
              8265 0000  ld   $00
              8266 002f  ld   $2f
              8267 0001  ld   $01
              8268 0027  ld   $27
              8269 0059  ld   $59
              826a 0000  ld   $00
              826b 002f  ld   $2f
              826c 0002  ld   $02
              826d 0027  ld   $27
              826e 0063  ld   $63
              826f 00ff  ld   $ff
              8270 0075  ld   $75
              8271 0011  ld   $11
              8272 00b7  ld   $b7
              8273 0071  ld   $71
              8274 002b  ld   $2b
              8275 0094  ld   $94
              8276 0011  ld   $11
              8277 00bd  ld   $bd
              8278 0071  ld   $71
              8279 002b  ld   $2b
              827a 0096  ld   $96
              827b 0059  ld   $59
              827c 0006  ld   $06
              827d 0085  ld   $85
              827e 00a0  ld   $a0
              827f 0051  ld   $51
              8280 004d  ld   $4d
              8281 001f  ld   $1f
              8282 00c6  ld   $c6
              8283 004d  ld   $4d
              8284 0000  ld   $00
              8285 00c4  ld   $c4
              8286 0011  ld   $11
              8287 00c2  ld   $c2
              8288 0071  ld   $71
              8289 00b8  ld   $b8
              828a 00c4  ld   $c4
              828b 00ad  ld   $ad
              828c 00e3  ld   $e3
              828d 001a  ld   $1a
              828e 002b  ld   $2b
              828f 0082  ld   $82
              8290 0065  ld   $65
              8291 0084  ld   $84
              8292 00c6  ld   $c6
              8293 0016  ld   $16
              8294 0009  ld   $09
              8295 0085  ld   $85
              8296 0085  ld   $85
              8297 00a1  ld   $a1
              8298 004f  ld   $4f
              8299 0042  ld   $42
              829a 0006  ld   $06
              829b 00c6  ld   $c6
              829c 00c6  ld   $c6
              829d 0085  ld   $85
              829e 00a0  ld   $a0
              829f 001c  ld   $1c
              82a0 001c  ld   $1c
              82a1 00a0  ld   $a0
              82a2 005f  ld   $5f
              82a3 00a7  ld   $a7
              82a4 0005  ld   $05
              82a5 00c4  ld   $c4
              82a6 0093  ld   $93
              82a7 00c4  ld   $c4
              82a8 00bd  ld   $bd
              82a9 00e2  ld   $e2
              82aa 001b  ld   $1b
              82ab 0011  ld   $11
              82ac 00c2  ld   $c2
              82ad 0071  ld   $71
              82ae 002b  ld   $2b
              82af 0094  ld   $94
              82b0 0011  ld   $11
              82b1 00e5  ld   $e5
              82b2 007d  ld   $7d
              82b3 002b  ld   $2b
              82b4 0096  ld   $96
              82b5 0059  ld   $59
              82b6 0006  ld   $06
              82b7 0085  ld   $85
              82b8 00bb  ld   $bb
              82b9 004e  ld   $4e
              82ba 008c  ld   $8c
              82bb 0001  ld   $01
              82bc 00bd  ld   $bd
              82bd 00cc  ld   $cc
              82be 001c  ld   $1c
              82bf 0011  ld   $11
              82c0 00bd  ld   $bd
              82c1 0071  ld   $71
              82c2 002b  ld   $2b
              82c3 0094  ld   $94
              82c4 0011  ld   $11
              82c5 00e0  ld   $e0
              82c6 007d  ld   $7d
              82c7 002b  ld   $2b
              82c8 0096  ld   $96
              82c9 0059  ld   $59
              82ca 0006  ld   $06
              82cb 0085  ld   $85
              82cc 00e0  ld   $e0
              82cd 004c  ld   $4c
              82ce 0085  ld   $85
              82cf 00d0  ld   $d0
              82d0 001c  ld   $1c
              82d1 0063  ld   $63
              82d2 00ff  ld   $ff
              82d3 0075  ld   $75
              82d4 004d  ld   $4d
              82d5 0061  ld   $61
              82d6 00c6  ld   $c6
              82d7 004d  ld   $4d
              82d8 0000  ld   $00
              82d9 00c4  ld   $c4
              82da 0011  ld   $11
              82db 00e5  ld   $e5
              82dc 007d  ld   $7d
              82dd 00b8  ld   $b8
              82de 00c4  ld   $c4
              82df 00ad  ld   $ad
              82e0 00e3  ld   $e3
              82e1 001a  ld   $1a
              82e2 002b  ld   $2b
              82e3 0082  ld   $82
              82e4 0065  ld   $65
              82e5 0084  ld   $84
              82e6 00c6  ld   $c6
              82e7 0016  ld   $16
              82e8 0009  ld   $09
              82e9 0085  ld   $85
              82ea 0085  ld   $85
              82eb 00a1  ld   $a1
              82ec 004f  ld   $4f
              82ed 0042  ld   $42
              82ee 0006  ld   $06
              82ef 00c6  ld   $c6
              82f0 00c6  ld   $c6
              82f1 00a7  ld   $a7
              82f2 0005  ld   $05
              82f3 00c4  ld   $c4
              82f4 0093  ld   $93
              82f5 00c4  ld   $c4
              82f6 00bd  ld   $bd
              82f7 00d5  ld   $d5
              82f8 001c  ld   $1c
              82f9 0063  ld   $63
              82fa 00ff  ld   $ff
              82fb fe00  bra  ac          ;+-----------------------------------+
              82fc fcfd  bra  $82fd       ;|                                   |
              82fd 1418  ld   $18,y       ;| Trampoline for page $8200 lookups |
              82fe e006  jmp  y,$06       ;|                                   |
              82ff c218  st   [$18]       ;+-----------------------------------+
              8300 0075  ld   $75
              8301 004d  ld   $4d
              8302 0024  ld   $24
              8303 0082  ld   $82
              8304 0085  ld   $85
              8305 00a0  ld   $a0
              8306 001d  ld   $1d
              8307 001d  ld   $1d
              8308 00a0  ld   $a0
              8309 005f  ld   $5f
              830a 0016  ld   $16
              830b 0002  ld   $02
              830c 0084  ld   $84
              830d 0016  ld   $16
              830e 0009  ld   $09
              830f 0085  ld   $85
              8310 0085  ld   $85
              8311 00a1  ld   $a1
              8312 004f  ld   $4f
              8313 004d  ld   $4d
              8314 0008  ld   $08
              8315 00c6  ld   $c6
              8316 004d  ld   $4d
              8317 0000  ld   $00
              8318 00c4  ld   $c4
              8319 0011  ld   $11
              831a 00a1  ld   $a1
              831b 007c  ld   $7c
              831c 00b8  ld   $b8
              831d 00c4  ld   $c4
              831e 00ad  ld   $ad
              831f 00e3  ld   $e3
              8320 001a  ld   $1a
              8321 002b  ld   $2b
              8322 0082  ld   $82
              8323 0065  ld   $65
              8324 0084  ld   $84
              8325 00c6  ld   $c6
              8326 0016  ld   $16
              8327 0009  ld   $09
              8328 0085  ld   $85
              8329 0085  ld   $85
              832a 00a1  ld   $a1
              832b 004f  ld   $4f
              832c 0042  ld   $42
              832d 0006  ld   $06
              832e 00c6  ld   $c6
              832f 00c6  ld   $c6
              8330 0095  ld   $95
              8331 00c4  ld   $c4
              8332 008c  ld   $8c
              8333 0002  ld   $02
              8334 00bd  ld   $bd
              8335 00ad  ld   $ad
              8336 001d  ld   $1d
              8337 0063  ld   $63
              8338 00ff  ld   $ff
              8339 0075  ld   $75
              833a 0032  ld   $32
              833b 00c8  ld   $c8
              833c 00c4  ld   $c4
              833d 004d  ld   $4d
              833e 0000  ld   $00
              833f 00c6  ld   $c6
              8340 0011  ld   $11
              8341 00a2  ld   $a2
              8342 007b  ld   $7b
              8343 00b8  ld   $b8
              8344 00c6  ld   $c6
              8345 00ad  ld   $ad
              8346 00e3  ld   $e3
              8347 0028  ld   $28
              8348 002b  ld   $2b
              8349 0082  ld   $82
              834a 0065  ld   $65
              834b 0084  ld   $84
              834c 00c8  ld   $c8
              834d 001c  ld   $1c
              834e 00c9  ld   $c9
              834f 0085  ld   $85
              8350 0008  ld   $08
              8351 0085  ld   $85
              8352 00a1  ld   $a1
              8353 004f  ld   $4f
              8354 001c  ld   $1c
              8355 00c8  ld   $c8
              8356 00c8  ld   $c8
              8357 0004  ld   $04
              8358 00a7  ld   $a7
              8359 0002  ld   $02
              835a 00c6  ld   $c6
              835b 0093  ld   $93
              835c 00c6  ld   $c6
              835d 00bd  ld   $bd
              835e 00d4  ld   $d4
              835f 001d  ld   $1d
              8360 0063  ld   $63
              8361 00ff  ld   $ff
              8362 0075  ld   $75
              8363 004d  ld   $4d
              8364 0001  ld   $01
              8365 00c4  ld   $c4
              8366 0085  ld   $85
              8367 00a0  ld   $a0
              8368 001e  ld   $1e
              8369 001e  ld   $1e
              836a 00a0  ld   $a0
              836b 005e  ld   $5e
              836c 004d  ld   $4d
              836d 0088  ld   $88
              836e 00c6  ld   $c6
              836f 0085  ld   $85
              8370 00b8  ld   $b8
              8371 001e  ld   $1e
              8372 004d  ld   $4d
              8373 0018  ld   $18
              8374 0082  ld   $82
              8375 0065  ld   $65
              8376 0084  ld   $84
              8377 00c6  ld   $c6
              8378 0016  ld   $16
              8379 000c  ld   $0c
              837a 0085  ld   $85
              837b 0085  ld   $85
              837c 00a1  ld   $a1
              837d 004f  ld   $4f
              837e 0042  ld   $42
              837f 0008  ld   $08
              8380 00c6  ld   $c6
              8381 00c6  ld   $c6
              8382 0093  ld   $93
              8383 00c4  ld   $c4
              8384 0021  ld   $21
              8385 00c4  ld   $c4
              8386 002f  ld   $2f
              8387 0031  ld   $31
              8388 0062  ld   $62
              8389 00db  ld   $db
              838a 0018  ld   $18
              838b 00bd  ld   $bd
              838c 00a4  ld   $a4
              838d 001e  ld   $1e
              838e 0085  ld   $85
              838f 00d7  ld   $d7
              8390 001e  ld   $1e
              8391 004d  ld   $4d
              8392 0019  ld   $19
              8393 0082  ld   $82
              8394 0065  ld   $65
              8395 0084  ld   $84
              8396 00c6  ld   $c6
              8397 0016  ld   $16
              8398 000c  ld   $0c
              8399 0085  ld   $85
              839a 0085  ld   $85
              839b 00a1  ld   $a1
              839c 004f  ld   $4f
              839d 0042  ld   $42
              839e 0008  ld   $08
              839f 00c6  ld   $c6
              83a0 00c6  ld   $c6
              83a1 0093  ld   $93
              83a2 00c4  ld   $c4
              83a3 0021  ld   $21
              83a4 00c4  ld   $c4
              83a5 00e6  ld   $e6
              83a6 0003  ld   $03
              83a7 00db  ld   $db
              83a8 0018  ld   $18
              83a9 00bd  ld   $bd
              83aa 00c3  ld   $c3
              83ab 001e  ld   $1e
              83ac 0063  ld   $63
              83ad 00ff  ld   $ff
              83ae 0075  ld   $75
              83af 0059  ld   $59
              83b0 0000  ld   $00
              83b1 002b  ld   $2b
              83b2 00c8  ld   $c8
              83b3 002b  ld   $2b
              83b4 00ca  ld   $ca
              83b5 002b  ld   $2b
              83b6 00cc  ld   $cc
              83b7 004d  ld   $4d
              83b8 0004  ld   $04
              83b9 00c6  ld   $c6
              83ba 004d  ld   $4d
              83bb 0000  ld   $00
              83bc 00c4  ld   $c4
              83bd 0021  ld   $21
              83be 00c8  ld   $c8
              83bf 00bd  ld   $bd
              83c0 00a1  ld   $a1
              83c1 001f  ld   $1f
              83c2 0011  ld   $11
              83c3 00a2  ld   $a2
              83c4 005a  ld   $5a
              83c5 002b  ld   $2b
              83c6 00ca  ld   $ca
              83c7 0085  ld   $85
              83c8 00a0  ld   $a0
              83c9 001f  ld   $1f
              83ca 001f  ld   $1f
              83cb 00a0  ld   $a0
              83cc 005f  ld   $5f
              83cd 0085  ld   $85
              83ce 00b2  ld   $b2
              83cf 001f  ld   $1f
              83d0 0044  ld   $44
              83d1 0001  ld   $01
              83d2 0096  ld   $96
              83d3 00c8  ld   $c8
              83d4 004d  ld   $4d
              83d5 0000  ld   $00
              83d6 0098  ld   $98
              83d7 0011  ld   $11
              83d8 002a  ld   $2a
              83d9 0006  ld   $06
              83da 0085  ld   $85
              83db 00d1  ld   $d1
              83dc 004c  ld   $4c
              83dd 002b  ld   $2b
              83de 00ca  ld   $ca
              83df 00a7  ld   $a7
              83e0 0031  ld   $31
              83e1 00c8  ld   $c8
              83e2 00bd  ld   $bd
              83e3 00be  ld   $be
              83e4 001f  ld   $1f
              83e5 0011  ld   $11
              83e6 00a6  ld   $a6
              83e7 006e  ld   $6e
              83e8 002b  ld   $2b
              83e9 00cc  ld   $cc
              83ea 0085  ld   $85
              83eb 00cf  ld   $cf
              83ec 001f  ld   $1f
              83ed 0042  ld   $42
              83ee 0001  ld   $01
              83ef 0096  ld   $96
              83f0 00c8  ld   $c8
              83f1 004d  ld   $4d
              83f2 0000  ld   $00
              83f3 0098  ld   $98
              83f4 0011  ld   $11
              83f5 002a  ld   $2a
              83f6 0006  ld   $06
              83f7 0085  ld   $85
              83f8 00d1  ld   $d1
              83f9 004c  ld   $4c
              83fa 002b  ld   $2b
              83fb fe00  bra  ac          ;+-----------------------------------+
              83fc fcfd  bra  $83fd       ;|                                   |
              83fd 1418  ld   $18,y       ;| Trampoline for page $8300 lookups |
              83fe e006  jmp  y,$06       ;|                                   |
              83ff c218  st   [$18]       ;+-----------------------------------+
              8400 00cc  ld   $cc
              8401 0032  ld   $32
              8402 0096  ld   $96
              8403 00c8  ld   $c8
              8404 004d  ld   $4d
              8405 0000  ld   $00
              8406 0098  ld   $98
              8407 0011  ld   $11
              8408 002a  ld   $2a
              8409 0006  ld   $06
              840a 0085  ld   $85
              840b 00d1  ld   $d1
              840c 004c  ld   $4c
              840d 002b  ld   $2b
              840e 009c  ld   $9c
              840f 0032  ld   $32
              8410 0096  ld   $96
              8411 00c6  ld   $c6
              8412 0032  ld   $32
              8413 0098  ld   $98
              8414 00c4  ld   $c4
              8415 0011  ld   $11
              8416 00a0  ld   $a0
              8417 0059  ld   $59
              8418 0085  ld   $85
              8419 00d1  ld   $d1
              841a 004c  ld   $4c
              841b 007d  ld   $7d
              841c 009c  ld   $9c
              841d 0032  ld   $32
              841e 0096  ld   $96
              841f 00c6  ld   $c6
              8420 0032  ld   $32
              8421 0098  ld   $98
              8422 00c4  ld   $c4
              8423 0011  ld   $11
              8424 00a4  ld   $a4
              8425 0070  ld   $70
              8426 0085  ld   $85
              8427 00d1  ld   $d1
              8428 004c  ld   $4c
              8429 00f6  ld   $f6
              842a 00c7  ld   $c7
              842b 007f  ld   $7f
              842c 001f  ld   $1f
              842d 00ff  ld   $ff
              842e 0085  ld   $85
              842f 00a0  ld   $a0
              8430 0020  ld   $20
              8431 0020  ld   $20
              8432 00a0  ld   $a0
              8433 005e  ld   $5e
              8434 002b  ld   $2b
              8435 00ce  ld   $ce
              8436 0032  ld   $32
              8437 009c  ld   $9c
              8438 00ce  ld   $ce
              8439 0032  ld   $32
              843a 0096  ld   $96
              843b 00c6  ld   $c6
              843c 0032  ld   $32
              843d 0098  ld   $98
              843e 00c4  ld   $c4
              843f 0011  ld   $11
              8440 00a4  ld   $a4
              8441 0070  ld   $70
              8442 0085  ld   $85
              8443 00d1  ld   $d1
              8444 004c  ld   $4c
              8445 007d  ld   $7d
              8446 009c  ld   $9c
              8447 0021  ld   $21
              8448 00c6  ld   $c6
              8449 00e9  ld   $e9
              844a 00e9  ld   $e9
              844b 00e9  ld   $e9
              844c 00e9  ld   $e9
              844d 0082  ld   $82
              844e 0070  ld   $70
              844f 002f  ld   $2f
              8450 00ce  ld   $ce
              8451 001c  ld   $1c
              8452 002b  ld   $2b
              8453 00e8  ld   $e8
              8454 00c7  ld   $c7
              8455 000f  ld   $0f
              8456 006f  ld   $6f
              8457 00c4  ld   $c4
              8458 00fa  ld   $fa
              8459 00e8  ld   $e8
              845a 005e  ld   $5e
              845b 00ce  ld   $ce
              845c 0032  ld   $32
              845d 009c  ld   $9c
              845e 00ce  ld   $ce
              845f 0032  ld   $32
              8460 0096  ld   $96
              8461 00c8  ld   $c8
              8462 004d  ld   $4d
              8463 0000  ld   $00
              8464 0098  ld   $98
              8465 0011  ld   $11
              8466 002a  ld   $2a
              8467 0006  ld   $06
              8468 0085  ld   $85
              8469 00d1  ld   $d1
              846a 004c  ld   $4c
              846b 007d  ld   $7d
              846c 009c  ld   $9c
              846d 0053  ld   $53
              846e 00c4  ld   $c4
              846f 00a4  ld   $a4
              8470 006f  ld   $6f
              8471 002b  ld   $2b
              8472 00e8  ld   $e8
              8473 0053  ld   $53
              8474 00c6  ld   $c6
              8475 00a0  ld   $a0
              8476 007a  ld   $7a
              8477 002f  ld   $2f
              8478 0018  ld   $18
              8479 005e  ld   $5e
              847a 0099  ld   $99
              847b 00e8  ld   $e8
              847c 002b  ld   $2b
              847d 009c  ld   $9c
              847e 0032  ld   $32
              847f 0096  ld   $96
              8480 00c8  ld   $c8
              8481 004d  ld   $4d
              8482 0001  ld   $01
              8483 0098  ld   $98
              8484 0011  ld   $11
              8485 002a  ld   $2a
              8486 0006  ld   $06
              8487 0085  ld   $85
              8488 00d1  ld   $d1
              8489 004c  ld   $4c
              848a 007d  ld   $7d
              848b 009c  ld   $9c
              848c 0032  ld   $32
              848d 009c  ld   $9c
              848e 00ca  ld   $ca
              848f 0085  ld   $85
              8490 00a0  ld   $a0
              8491 0021  ld   $21
              8492 0021  ld   $21
              8493 00a0  ld   $a0
              8494 005f  ld   $5f
              8495 0032  ld   $32
              8496 0096  ld   $96
              8497 00c8  ld   $c8
              8498 004d  ld   $4d
              8499 0002  ld   $02
              849a 0098  ld   $98
              849b 0011  ld   $11
              849c 002a  ld   $2a
              849d 0006  ld   $06
              849e 0085  ld   $85
              849f 00d1  ld   $d1
              84a0 004c  ld   $4c
              84a1 007d  ld   $7d
              84a2 009c  ld   $9c
              84a3 0032  ld   $32
              84a4 009c  ld   $9c
              84a5 00cc  ld   $cc
              84a6 0032  ld   $32
              84a7 0096  ld   $96
              84a8 00c8  ld   $c8
              84a9 004d  ld   $4d
              84aa 0003  ld   $03
              84ab 0098  ld   $98
              84ac 0011  ld   $11
              84ad 002a  ld   $2a
              84ae 0006  ld   $06
              84af 0085  ld   $85
              84b0 00d1  ld   $d1
              84b1 004c  ld   $4c
              84b2 007d  ld   $7d
              84b3 009c  ld   $9c
              84b4 0093  ld   $93
              84b5 00c8  ld   $c8
              84b6 00a7  ld   $a7
              84b7 0009  ld   $09
              84b8 00c4  ld   $c4
              84b9 0093  ld   $93
              84ba 00c4  ld   $c4
              84bb 00bd  ld   $bd
              84bc 00ef  ld   $ef
              84bd 001e  ld   $1e
              84be 004a  ld   $4a
              84bf 00c6  ld   $c6
              84c0 00ec  ld   $ec
              84c1 001e  ld   $1e
              84c2 004d  ld   $4d
              84c3 0000  ld   $00
              84c4 00c4  ld   $c4
              84c5 0059  ld   $59
              84c6 0000  ld   $00
              84c7 0051  ld   $51
              84c8 00c4  ld   $c4
              84c9 00a0  ld   $a0
              84ca 006e  ld   $6e
              84cb 00a7  ld   $a7
              84cc 0002  ld   $02
              84cd 00c4  ld   $c4
              84ce 0093  ld   $93
              84cf 00c4  ld   $c4
              84d0 00bd  ld   $bd
              84d1 00ce  ld   $ce
              84d2 0021  ld   $21
              84d3 0011  ld   $11
              84d4 00a6  ld   $a6
              84d5 006e  ld   $6e
              84d6 002b  ld   $2b
              84d7 0044  ld   $44
              84d8 0032  ld   $32
              84d9 0046  ld   $46
              84da 0044  ld   $44
              84db 0063  ld   $63
              84dc 00ff  ld   $ff
              84dd 0075  ld   $75
              84de 004d  ld   $4d
              84df 004a  ld   $4a
              84e0 009c  ld   $9c
              84e1 0085  ld   $85
              84e2 00c7  ld   $c7
              84e3 004d  ld   $4d
              84e4 0063  ld   $63
              84e5 00ff  ld   $ff
              84e6 0075  ld   $75
              84e7 0085  ld   $85
              84e8 00a0  ld   $a0
              84e9 0050  ld   $50
              84ea 0011  ld   $11
              84eb 00b7  ld   $b7
              84ec 0071  ld   $71
              84ed 002b  ld   $2b
              84ee 0096  ld   $96
              84ef 0059  ld   $59
              84f0 0000  ld   $00
              84f1 0085  ld   $85
              84f2 00a0  ld   $a0
              84f3 0022  ld   $22
              84f4 0022  ld   $22
              84f5 00a0  ld   $a0
              84f6 0060  ld   $60
              84f7 0085  ld   $85
              84f8 00db  ld   $db
              84f9 004e  ld   $4e
              84fa 0011  ld   $11
              84fb fe00  bra  ac          ;+-----------------------------------+
              84fc fcfd  bra  $84fd       ;|                                   |
              84fd 1418  ld   $18,y       ;| Trampoline for page $8400 lookups |
              84fe e006  jmp  y,$06       ;|                                   |
              84ff c218  st   [$18]       ;+-----------------------------------+
              8500 00a0  ld   $a0
              8501 007b  ld   $7b
              8502 002b  ld   $2b
              8503 0096  ld   $96
              8504 0059  ld   $59
              8505 0000  ld   $00
              8506 0085  ld   $85
              8507 00db  ld   $db
              8508 004e  ld   $4e
              8509 0011  ld   $11
              850a 00a0  ld   $a0
              850b 007c  ld   $7c
              850c 002b  ld   $2b
              850d 0096  ld   $96
              850e 001a  ld   $1a
              850f 0032  ld   $32
              8510 0085  ld   $85
              8511 00db  ld   $db
              8512 004e  ld   $4e
              8513 004d  ld   $4d
              8514 0000  ld   $00
              8515 003c  ld   $3c
              8516 004d  ld   $4d
              8517 0004  ld   $04
              8518 003e  ld   $3e
              8519 0059  ld   $59
              851a 0002  ld   $02
              851b 002b  ld   $2b
              851c 0042  ld   $42
              851d 002b  ld   $2b
              851e 0040  ld   $40
              851f 00a7  ld   $a7
              8520 0018  ld   $18
              8521 0030  ld   $30
              8522 00c3  ld   $c3
              8523 00ca  ld   $ca
              8524 0022  ld   $22
              8525 0016  ld   $16
              8526 0000  ld   $00
              8527 0030  ld   $30
              8528 004d  ld   $4d
              8529 0001  ld   $01
              852a 0038  ld   $38
              852b 0059  ld   $59
              852c 0038  ld   $38
              852d 002f  ld   $2f
              852e 0030  ld   $30
              852f 0060  ld   $60
              8530 002b  ld   $2b
              8531 003a  ld   $3a
              8532 0085  ld   $85
              8533 00d5  ld   $d5
              8534 004f  ld   $4f
              8535 0085  ld   $85
              8536 00ce  ld   $ce
              8537 001b  ld   $1b
              8538 0085  ld   $85
              8539 00d0  ld   $d0
              853a 001c  ld   $1c
              853b 0085  ld   $85
              853c 00f8  ld   $f8
              853d 001d  ld   $1d
              853e 0085  ld   $85
              853f 00f8  ld   $f8
              8540 001c  ld   $1c
              8541 0085  ld   $85
              8542 00a9  ld   $a9
              8543 0005  ld   $05
              8544 0085  ld   $85
              8545 00e2  ld   $e2
              8546 001e  ld   $1e
              8547 00a7  ld   $a7
              8548 0064  ld   $64
              8549 0032  ld   $32
              854a 00bf  ld   $bf
              854b 00f5  ld   $f5
              854c 0022  ld   $22
              854d 0085  ld   $85
              854e 00cb  ld   $cb
              854f 0025  ld   $25
              8550 0085  ld   $85
              8551 00fa  ld   $fa
              8552 0022  ld   $22
              8553 0085  ld   $85
              8554 00ed  ld   $ed
              8555 0025  ld   $25
              8556 0063  ld   $63
              8557 00ff  ld   $ff
              8558 0075  ld   $75
              8559 0085  ld   $85
              855a 00a0  ld   $a0
              855b 0023  ld   $23
              855c 0023  ld   $23
              855d 00a0  ld   $a0
              855e 005e  ld   $5e
              855f 0011  ld   $11
              8560 0000  ld   $00
              8561 0003  ld   $03
              8562 002b  ld   $2b
              8563 0030  ld   $30
              8564 0011  ld   $11
              8565 0000  ld   $00
              8566 001f  ld   $1f
              8567 002b  ld   $2b
              8568 0032  ld   $32
              8569 0011  ld   $11
              856a 00bd  ld   $bd
              856b 0071  ld   $71
              856c 002b  ld   $2b
              856d 0096  ld   $96
              856e 0059  ld   $59
              856f 0000  ld   $00
              8570 0085  ld   $85
              8571 00db  ld   $db
              8572 004e  ld   $4e
              8573 004d  ld   $4d
              8574 003c  ld   $3c
              8575 0048  ld   $48
              8576 004d  ld   $4d
              8577 0001  ld   $01
              8578 0034  ld   $34
              8579 004d  ld   $4d
              857a 0072  ld   $72
              857b 0036  ld   $36
              857c 0085  ld   $85
              857d 00ed  ld   $ed
              857e 0025  ld   $25
              857f 0063  ld   $63
              8580 00ff  ld   $ff
              8581 0075  ld   $75
              8582 00c7  ld   $c7
              8583 000f  ld   $0f
              8584 006f  ld   $6f
              8585 004a  ld   $4a
              8586 008c  ld   $8c
              8587 0001  ld   $01
              8588 00bd  ld   $bd
              8589 00a7  ld   $a7
              858a 0025  ld   $25
              858b 0021  ld   $21
              858c 0078  ld   $78
              858d 00bd  ld   $bd
              858e 00ea  ld   $ea
              858f 0023  ld   $23
              8590 004d  ld   $4d
              8591 0038  ld   $38
              8592 0082  ld   $82
              8593 0016  ld   $16
              8594 0049  ld   $49
              8595 0084  ld   $84
              8596 0016  ld   $16
              8597 0008  ld   $08
              8598 0085  ld   $85
              8599 004d  ld   $4d
              859a 0000  ld   $00
              859b 0098  ld   $98
              859c 0032  ld   $32
              859d 0088  ld   $88
              859e 0076  ld   $76
              859f 0085  ld   $85
              85a0 00bb  ld   $bb
              85a1 0050  ld   $50
              85a2 004d  ld   $4d
              85a3 0001  ld   $01
              85a4 00c4  ld   $c4
              85a5 0085  ld   $85
              85a6 00ab  ld   $ab
              85a7 0025  ld   $25
              85a8 0085  ld   $85
              85a9 00a9  ld   $a9
              85aa 0025  ld   $25
              85ab 00a7  ld   $a7
              85ac 0001  ld   $01
              85ad 0078  ld   $78
              85ae 00bd  ld   $bd
              85af 00b3  ld   $b3
              85b0 0024  ld   $24
              85b1 004d  ld   $4d
              85b2 0038  ld   $38
              85b3 0082  ld   $82
              85b4 0016  ld   $16
              85b5 0049  ld   $49
              85b6 0084  ld   $84
              85b7 0016  ld   $16
              85b8 0008  ld   $08
              85b9 0085  ld   $85
              85ba 0085  ld   $85
              85bb 00a0  ld   $a0
              85bc 0024  ld   $24
              85bd 0024  ld   $24
              85be 00a0  ld   $a0
              85bf 0060  ld   $60
              85c0 004d  ld   $4d
              85c1 0000  ld   $00
              85c2 0098  ld   $98
              85c3 0059  ld   $59
              85c4 0007  ld   $07
              85c5 00b8  ld   $b8
              85c6 0076  ld   $76
              85c7 002b  ld   $2b
              85c8 0088  ld   $88
              85c9 0085  ld   $85
              85ca 00bb  ld   $bb
              85cb 0050  ld   $50
              85cc 004d  ld   $4d
              85cd 0000  ld   $00
              85ce 00c4  ld   $c4
              85cf 0085  ld   $85
              85d0 00ab  ld   $ab
              85d1 0025  ld   $25
              85d2 0085  ld   $85
              85d3 00a9  ld   $a9
              85d4 0025  ld   $25
              85d5 00a7  ld   $a7
              85d6 0002  ld   $02
              85d7 0078  ld   $78
              85d8 00bd  ld   $bd
              85d9 00e3  ld   $e3
              85da 0024  ld   $24
              85db 0059  ld   $59
              85dc 0007  ld   $07
              85dd 00b8  ld   $b8
              85de 0076  ld   $76
              85df 002b  ld   $2b
              85e0 007a  ld   $7a
              85e1 0021  ld   $21
              85e2 0076  ld   $76
              85e3 00bd  ld   $bd
              85e4 00c7  ld   $c7
              85e5 0024  ld   $24
              85e6 004d  ld   $4d
              85e7 0000  ld   $00
              85e8 007a  ld   $7a
              85e9 004d  ld   $4d
              85ea 0038  ld   $38
              85eb 0082  ld   $82
              85ec 0016  ld   $16
              85ed 0049  ld   $49
              85ee 0084  ld   $84
              85ef 001c  ld   $1c
              85f0 0076  ld   $76
              85f1 0085  ld   $85
              85f2 0008  ld   $08
              85f3 0032  ld   $32
              85f4 0098  ld   $98
              85f5 007a  ld   $7a
              85f6 004d  ld   $4d
              85f7 0000  ld   $00
              85f8 0088  ld   $88
              85f9 0085  ld   $85
              85fa 00bb  ld   $bb
              85fb fe00  bra  ac          ;+-----------------------------------+
              85fc fcfd  bra  $85fd       ;|                                   |
              85fd 1418  ld   $18,y       ;| Trampoline for page $8500 lookups |
              85fe e006  jmp  y,$06       ;|                                   |
              85ff c218  st   [$18]       ;+-----------------------------------+
              8600 0050  ld   $50
              8601 004d  ld   $4d
              8602 0001  ld   $01
              8603 00c4  ld   $c4
              8604 0085  ld   $85
              8605 00ab  ld   $ab
              8606 0025  ld   $25
              8607 0085  ld   $85
              8608 00a9  ld   $a9
              8609 0025  ld   $25
              860a 00a7  ld   $a7
              860b 0003  ld   $03
              860c 0078  ld   $78
              860d 00bd  ld   $bd
              860e 00a7  ld   $a7
              860f 0025  ld   $25
              8610 004d  ld   $4d
              8611 0038  ld   $38
              8612 0082  ld   $82
              8613 0016  ld   $16
              8614 0049  ld   $49
              8615 0084  ld   $84
              8616 0059  ld   $59
              8617 000f  ld   $0f
              8618 00b8  ld   $b8
              8619 0076  ld   $76
              861a 005e  ld   $5e
              861b 0085  ld   $85
              861c 0032  ld   $32
              861d 0098  ld   $98
              861e 0076  ld   $76
              861f 004d  ld   $4d
              8620 0000  ld   $00
              8621 0088  ld   $88
              8622 0085  ld   $85
              8623 00a0  ld   $a0
              8624 0025  ld   $25
              8625 0025  ld   $25
              8626 00a0  ld   $a0
              8627 005e  ld   $5e
              8628 0085  ld   $85
              8629 00bb  ld   $bb
              862a 0050  ld   $50
              862b 004d  ld   $4d
              862c 0000  ld   $00
              862d 00c4  ld   $c4
              862e 0085  ld   $85
              862f 00ab  ld   $ab
              8630 0025  ld   $25
              8631 0063  ld   $63
              8632 00ff  ld   $ff
              8633 0075  ld   $75
              8634 0095  ld   $95
              8635 0076  ld   $76
              8636 00a7  ld   $a7
              8637 0007  ld   $07
              8638 0076  ld   $76
              8639 00bd  ld   $bd
              863a 00bb  ld   $bb
              863b 0025  ld   $25
              863c 0032  ld   $32
              863d 0076  ld   $76
              863e 00c4  ld   $c4
              863f 0093  ld   $93
              8640 0078  ld   $78
              8641 00c7  ld   $c7
              8642 0003  ld   $03
              8643 0066  ld   $66
              8644 0078  ld   $78
              8645 0063  ld   $63
              8646 00ff  ld   $ff
              8647 0075  ld   $75
              8648 004d  ld   $4d
              8649 0002  ld   $02
              864a 0082  ld   $82
              864b 0085  ld   $85
              864c 00ea  ld   $ea
              864d 004c  ld   $4c
              864e 004d  ld   $4d
              864f 0000  ld   $00
              8650 00a2  ld   $a2
              8651 0063  ld   $63
              8652 00ff  ld   $ff
              8653 0075  ld   $75
              8654 004d  ld   $4d
              8655 007f  ld   $7f
              8656 00c6  ld   $c6
              8657 0011  ld   $11
              8658 0000  ld   $00
              8659 0001  ld   $01
              865a 002b  ld   $2b
              865b 00c4  ld   $c4
              865c 0011  ld   $11
              865d 00ee  ld   $ee
              865e 0001  ld   $01
              865f 002b  ld   $2b
              8660 00d8  ld   $d8
              8661 004d  ld   $4d
              8662 0002  ld   $02
              8663 00da  ld   $da
              8664 0021  ld   $21
              8665 00c4  ld   $c4
              8666 0069  ld   $69
              8667 00c6  ld   $c6
              8668 00dd  ld   $dd
              8669 00c6  ld   $c6
              866a 00a9  ld   $a9
              866b 00c4  ld   $c4
              866c 00c4  ld   $c4
              866d 00da  ld   $da
              866e 00b8  ld   $b8
              866f 00d8  ld   $d8
              8670 00c3  ld   $c3
              8671 00da  ld   $da
              8672 0025  ld   $25
              8673 0063  ld   $63
              8674 00ff  ld   $ff
              8675 0075  ld   $75
              8676 004d  ld   $4d
              8677 0008  ld   $08
              8678 00c6  ld   $c6
              8679 0011  ld   $11
              867a 0000  ld   $00
              867b 0001  ld   $01
              867c 002b  ld   $2b
              867d 00c4  ld   $c4
              867e 0011  ld   $11
              867f 00ee  ld   $ee
              8680 0001  ld   $01
              8681 002b  ld   $2b
              8682 00d8  ld   $d8
              8683 0085  ld   $85
              8684 00a0  ld   $a0
              8685 0026  ld   $26
              8686 0026  ld   $26
              8687 00a0  ld   $a0
              8688 0016  ld   $16
              8689 004d  ld   $4d
              868a 0002  ld   $02
              868b 00da  ld   $da
              868c 0021  ld   $21
              868d 00c4  ld   $c4
              868e 0069  ld   $69
              868f 00c6  ld   $c6
              8690 0093  ld   $93
              8691 00c6  ld   $c6
              8692 00a9  ld   $a9
              8693 00c4  ld   $c4
              8694 00c4  ld   $c4
              8695 00da  ld   $da
              8696 00b8  ld   $b8
              8697 00d8  ld   $d8
              8698 00c3  ld   $c3
              8699 00a1  ld   $a1
              869a 0026  ld   $26
              869b 0063  ld   $63
              869c 00ff  ld   $ff
              869d 00b4  ld   $b4
              869e 0080  ld   $80
              869f 004c  ld   $4c
              86a0 00d1  ld   $d1
              86a1 002e  ld   $2e
              86a2 00a0  ld   $a0
              86a3 0096  ld   $96
              86a4 0099  ld   $99
              86a5 0098  ld   $98
              86a6 0099  ld   $99
              86a7 0098  ld   $98
              86a8 00ff  ld   $ff
              86a9 004d  ld   $4d
              86aa 0002  ld   $02
              86ab 00a4  ld   $a4
              86ac 00c7  ld   $c7
              86ad 00fb  ld   $fb
              86ae 0066  ld   $66
              86af 00aa  ld   $aa
              86b0 00ff  ld   $ff
              86b1 005e  ld   $5e
              86b2 0092  ld   $92
              86b3 0023  ld   $23
              86b4 0094  ld   $94
              86b5 00d1  ld   $d1
              86b6 0096  ld   $96
              86b7 009e  ld   $9e
              86b8 00e0  ld   $e0
              86b9 0092  ld   $92
              86ba 00ff  ld   $ff
              86bb 0011  ld   $11
              86bc 0000  ld   $00
              86bd 000b  ld   $0b
              86be 002b  ld   $2b
              86bf 0022  ld   $22
              86c0 0021  ld   $21
              86c1 0082  ld   $82
              86c2 00b4  ld   $b4
              86c3 00e6  ld   $e6
              86c4 00ff  ld   $ff
              86c5 0075  ld   $75
              86c6 0011  ld   $11
              86c7 0040  ld   $40
              86c8 000c  ld   $0c
              86c9 002b  ld   $2b
              86ca 0022  ld   $22
              86cb 0085  ld   $85
              86cc 00e9  ld   $e9
              86cd 004d  ld   $4d
              86ce 0063  ld   $63
              86cf 00ff  ld   $ff
              86d0 004d  ld   $4d
              86d1 00a0  ld   $a0
              86d2 005f  ld   $5f
              86d3 0011  ld   $11
              86d4 0052  ld   $52
              86d5 0006  ld   $06
              86d6 002b  ld   $2b
              86d7 0022  ld   $22
              86d8 0021  ld   $21
              86d9 00a0  ld   $a0
              86da 00b4  ld   $b4
              86db 00f5  ld   $f5
              86dc 00ff  ld   $ff
              86dd 0075  ld   $75
              86de 0085  ld   $85
              86df 00d8  ld   $d8
              86e0 004c  ld   $4c
              86e1 0011  ld   $11
              86e2 0003  ld   $03
              86e3 000b  ld   $0b
              86e4 002b  ld   $2b
              86e5 0022  ld   $22
              86e6 0065  ld   $65
              86e7 0025  ld   $25
              86e8 00a2  ld   $a2
              86e9 0063  ld   $63
              86ea 00ff  ld   $ff
              86eb 002b  ld   $2b
              86ec 0084  ld   $84
              86ed 0021  ld   $21
              86ee 0082  ld   $82
              86ef 00b8  ld   $b8
              86f0 0084  ld   $84
              86f1 0035  ld   $35
              86f2 0056  ld   $56
              86f3 00c2  ld   $c2
              86f4 0021  ld   $21
              86f5 0084  ld   $84
              86f6 00ff  ld   $ff
              86f7 0021  ld   $21
              86f8 0082  ld   $82
              86f9 00ff  ld   $ff
              86fa 0059  ld   $59
              86fb fe00  bra  ac          ;+-----------------------------------+
              86fc fcfd  bra  $86fd       ;|                                   |
              86fd 1418  ld   $18,y       ;| Trampoline for page $8600 lookups |
              86fe e006  jmp  y,$06       ;|                                   |
              86ff c218  st   [$18]       ;+-----------------------------------+
              8700 0080  ld   $80
              8701 00b8  ld   $b8
              8702 009c  ld   $9c
              8703 002b  ld   $2b
              8704 009e  ld   $9e
              8705 0018  ld   $18
              8706 009e  ld   $9e
              8707 0059  ld   $59
              8708 0000  ld   $00
              8709 0060  ld   $60
              870a 009c  ld   $9c
              870b 009e  ld   $9e
              870c 00cf  ld   $cf
              870d 009e  ld   $9e
              870e 00ff  ld   $ff
              870f 0018  ld   $18
              8710 0094  ld   $94
              8711 0021  ld   $21
              8712 0094  ld   $94
              8713 002f  ld   $2f
              8714 0093  ld   $93
              8715 0024  ld   $24
              8716 001a  ld   $1a
              8717 0096  ld   $96
              8718 002f  ld   $2f
              8719 0093  ld   $93
              871a 002c  ld   $2c
              871b 001a  ld   $1a
              871c 0098  ld   $98
              871d 002f  ld   $2f
              871e 0093  ld   $93
              871f 002f  ld   $2f
              8720 00ff  ld   $ff
              8721 003d  ld   $3d
              8722 0082  ld   $82
              8723 008e  ld   $8e
              8724 0006  ld   $06
              8725 006f  ld   $6f
              8726 0086  ld   $86
              8727 0090  ld   $90
              8728 00f7  ld   $f7
              8729 002b  ld   $2b
              872a 0024  ld   $24
              872b 0046  ld   $46
              872c 0086  ld   $86
              872d 0099  ld   $99
              872e 0084  ld   $84
              872f 00b4  ld   $b4
              8730 00ee  ld   $ee
              8731 0046  ld   $46
              8732 0086  ld   $86
              8733 0035  ld   $35
              8734 0072  ld   $72
              8735 00ef  ld   $ef
              8736 00ff  ld   $ff
              8737 004e  ld   $4e
              8738 00a2  ld   $a2
              8739 005d  ld   $5d
              873a 002b  ld   $2b
              873b 0086  ld   $86
              873c 0021  ld   $21
              873d 0082  ld   $82
              873e 00b8  ld   $b8
              873f 0086  ld   $86
              8740 0035  ld   $35
              8741 0050  ld   $50
              8742 00af  ld   $af
              8743 002b  ld   $2b
              8744 0082  ld   $82
              8745 0093  ld   $93
              8746 0084  ld   $84
              8747 0090  ld   $90
              8748 00a4  ld   $a4
              8749 0021  ld   $21
              874a 0096  ld   $96
              874b 0069  ld   $69
              874c 0084  ld   $84
              874d 00dd  ld   $dd
              874e 0096  ld   $96
              874f 0016  ld   $16
              8750 0000  ld   $00
              8751 0084  ld   $84
              8752 00ff  ld   $ff
              8753 005e  ld   $5e
              8754 0092  ld   $92
              8755 005b  ld   $5b
              8756 0096  ld   $96
              8757 002b  ld   $2b
              8758 0098  ld   $98
              8759 005b  ld   $5b
              875a 0094  ld   $94
              875b 00b8  ld   $b8
              875c 0098  ld   $98
              875d 0035  ld   $35
              875e 004d  ld   $4d
              875f 00d3  ld   $d3
              8760 0035  ld   $35
              8761 0050  ld   $50
              8762 00d6  ld   $d6
              8763 00dd  ld   $dd
              8764 0096  ld   $96
              8765 00dd  ld   $dd
              8766 0094  ld   $94
              8767 009e  ld   $9e
              8768 00bb  ld   $bb
              8769 0092  ld   $92
              876a 0059  ld   $59
              876b 0000  ld   $00
              876c 00ff  ld   $ff
              876d 0059  ld   $59
              876e 0001  ld   $01
              876f 00ff  ld   $ff
              8770 009c  ld   $9c
              8771 0001  ld   $01
              8772 00ff  ld   $ff
              8773 002b  ld   $2b
              8774 0082  ld   $82
              8775 0075  ld   $75
              8776 0042  ld   $42
              8777 0004  ld   $04
              8778 0096  ld   $96
              8779 0096  ld   $96
              877a 004d  ld   $4d
              877b 0000  ld   $00
              877c 0084  ld   $84
              877d 0011  ld   $11
              877e 0010  ld   $10
              877f 0027  ld   $27
              8780 0085  ld   $85
              8781 00a2  ld   $a2
              8782 004e  ld   $4e
              8783 0011  ld   $11
              8784 00e8  ld   $e8
              8785 0003  ld   $03
              8786 0085  ld   $85
              8787 00a2  ld   $a2
              8788 004e  ld   $4e
              8789 0059  ld   $59
              878a 0064  ld   $64
              878b 0085  ld   $85
              878c 00a2  ld   $a2
              878d 004e  ld   $4e
              878e 0059  ld   $59
              878f 000a  ld   $0a
              8790 0085  ld   $85
              8791 00a2  ld   $a2
              8792 004e  ld   $4e
              8793 0069  ld   $69
              8794 0082  ld   $82
              8795 0063  ld   $63
              8796 00ff  ld   $ff
              8797 004f  ld   $4f
              8798 00a1  ld   $a1
              8799 005e  ld   $5e
              879a 0075  ld   $75
              879b 0011  ld   $11
              879c 0000  ld   $00
              879d 000c  ld   $0c
              879e 002b  ld   $2b
              879f 0022  ld   $22
              87a0 0085  ld   $85
              87a1 00e9  ld   $e9
              87a2 004d  ld   $4d
              87a3 0063  ld   $63
              87a4 00ff  ld   $ff
              87a5 001a  ld   $1a
              87a6 0021  ld   $21
              87a7 0082  ld   $82
              87a8 00fc  ld   $fc
              87a9 002b  ld   $2b
              87aa 0084  ld   $84
              87ab 00b8  ld   $b8
              87ac 0082  ld   $82
              87ad 0035  ld   $35
              87ae 003f  ld   $3f
              87af 00d2  ld   $d2
              87b0 0021  ld   $21
              87b1 0082  ld   $82
              87b2 00e6  ld   $e6
              87b3 0080  ld   $80
              87b4 0035  ld   $35
              87b5 0072  ld   $72
              87b6 00c5  ld   $c5
              87b7 0021  ld   $21
              87b8 0084  ld   $84
              87b9 00b8  ld   $b8
              87ba 0082  ld   $82
              87bb 0035  ld   $35
              87bc 003f  ld   $3f
              87bd 00d2  ld   $d2
              87be 0090  ld   $90
              87bf 00cc  ld   $cc
              87c0 0021  ld   $21
              87c1 0084  ld   $84
              87c2 00b8  ld   $b8
              87c3 0082  ld   $82
              87c4 0035  ld   $35
              87c5 004d  ld   $4d
              87c6 00d2  ld   $d2
              87c7 001a  ld   $1a
              87c8 0006  ld   $06
              87c9 00f0  ld   $f0
              87ca 007e  ld   $7e
              87cb 0090  ld   $90
              87cc 00cc  ld   $cc
              87cd 00ff  ld   $ff
              87ce 0075  ld   $75
              87cf 0085  ld   $85
              87d0 00aa  ld   $aa
              87d1 004d  ld   $4d
              87d2 004d  ld   $4d
              87d3 0008  ld   $08
              87d4 0094  ld   $94
              87d5 0016  ld   $16
              87d6 003c  ld   $3c
              87d7 009e  ld   $9e
              87d8 0016  ld   $16
              87d9 00a0  ld   $a0
              87da 0024  ld   $24
              87db 0016  ld   $16
              87dc 0000  ld   $00
              87dd 0026  ld   $26
              87de 0065  ld   $65
              87df 0027  ld   $27
              87e0 0094  ld   $94
              87e1 00b4  ld   $b4
              87e2 00f3  ld   $f3
              87e3 0016  ld   $16
              87e4 00a0  ld   $a0
              87e5 0024  ld   $24
              87e6 0016  ld   $16
              87e7 0000  ld   $00
              87e8 0026  ld   $26
              87e9 0059  ld   $59
              87ea 0087  ld   $87
              87eb 00b8  ld   $b8
              87ec 0094  ld   $94
              87ed 005e  ld   $5e
              87ee 0027  ld   $27
              87ef 00b4  ld   $b4
              87f0 00f3  ld   $f3
              87f1 0093  ld   $93
              87f2 0094  ld   $94
              87f3 009e  ld   $9e
              87f4 00dd  ld   $dd
              87f5 009e  ld   $9e
              87f6 0063  ld   $63
              87f7 00ff  ld   $ff
              87f8 0050  ld   $50
              87f9 00a0  ld   $a0
              87fa 005f  ld   $5f
              87fb fe00  bra  ac          ;+-----------------------------------+
              87fc fcfd  bra  $87fd       ;|                                   |
              87fd 1418  ld   $18,y       ;| Trampoline for page $8700 lookups |
              87fe e006  jmp  y,$06       ;|                                   |
              87ff c218  st   [$18]       ;+-----------------------------------+
              8800 0059  ld   $59
              8801 0000  ld   $00
              8802 002f  ld   $2f
              8803 0000  ld   $00
              8804 0027  ld   $27
              8805 002f  ld   $2f
              8806 0001  ld   $01
              8807 0027  ld   $27
              8808 002f  ld   $2f
              8809 0002  ld   $02
              880a 0027  ld   $27
              880b 002f  ld   $2f
              880c 0003  ld   $03
              880d 0027  ld   $27
              880e 002f  ld   $2f
              880f 0000  ld   $00
              8810 005c  ld   $5c
              8811 002f  ld   $2f
              8812 0001  ld   $01
              8813 005c  ld   $5c
              8814 002f  ld   $2f
              8815 0002  ld   $02
              8816 005c  ld   $5c
              8817 002f  ld   $2f
              8818 0003  ld   $03
              8819 005c  ld   $5c
              881a 00ff  ld   $ff
              881b 0075  ld   $75
              881c 0011  ld   $11
              881d 0000  ld   $00
              881e 000c  ld   $0c
              881f 002b  ld   $2b
              8820 0022  ld   $22
              8821 0021  ld   $21
              8822 0088  ld   $88
              8823 00b1  ld   $b1
              8824 003d  ld   $3d
              8825 002b  ld   $2b
              8826 0096  ld   $96
              8827 003d  ld   $3d
              8828 0082  ld   $82
              8829 008e  ld   $8e
              882a 0006  ld   $06
              882b 006f  ld   $6f
              882c 0086  ld   $86
              882d 0090  ld   $90
              882e 00dd  ld   $dd
              882f 0085  ld   $85
              8830 00e8  ld   $e8
              8831 0050  ld   $50
              8832 0099  ld   $99
              8833 0096  ld   $96
              8834 002b  ld   $2b
              8835 0024  ld   $24
              8836 0046  ld   $46
              8837 0086  ld   $86
              8838 0099  ld   $99
              8839 0084  ld   $84
              883a 00b4  ld   $b4
              883b 00ee  ld   $ee
              883c 0085  ld   $85
              883d 00e8  ld   $e8
              883e 0050  ld   $50
              883f 0046  ld   $46
              8840 0086  ld   $86
              8841 002b  ld   $2b
              8842 0092  ld   $92
              8843 0035  ld   $35
              8844 0072  ld   $72
              8845 00cd  ld   $cd
              8846 0063  ld   $63
              8847 00ff  ld   $ff
              8848 001a  ld   $1a
              8849 0098  ld   $98
              884a 0035  ld   $35
              884b 0072  ld   $72
              884c 00ee  ld   $ee
              884d 0021  ld   $21
              884e 0092  ld   $92
              884f 00ff  ld   $ff
              8850 00b1  ld   $b1
              8851 003d  ld   $3d
              8852 0099  ld   $99
              8853 0092  ld   $92
              8854 002b  ld   $2b
              8855 0094  ld   $94
              8856 00ad  ld   $ad
              8857 002f  ld   $2f
              8858 0018  ld   $18
              8859 0064  ld   $64
              885a 00f0  ld   $f0
              885b 0094  ld   $94
              885c 0021  ld   $21
              885d 0092  ld   $92
              885e 00ff  ld   $ff
              885f 0051  ld   $51
              8860 00a0  ld   $a0
              8861 0060  ld   $60
              8862 005e  ld   $5e
              8863 0092  ld   $92
              8864 004d  ld   $4d
              8865 0000  ld   $00
              8866 009a  ld   $9a
              8867 005b  ld   $5b
              8868 0096  ld   $96
              8869 002b  ld   $2b
              886a 0098  ld   $98
              886b 0023  ld   $23
              886c 0094  ld   $94
              886d 0099  ld   $99
              886e 0098  ld   $98
              886f 0099  ld   $99
              8870 009a  ld   $9a
              8871 002b  ld   $2b
              8872 0098  ld   $98
              8873 00e6  ld   $e6
              8874 000a  ld   $0a
              8875 0035  ld   $35
              8876 0050  ld   $50
              8877 00ba  ld   $ba
              8878 002b  ld   $2b
              8879 0098  ld   $98
              887a 0059  ld   $59
              887b 0001  ld   $01
              887c 0090  ld   $90
              887d 00bc  ld   $bc
              887e 0059  ld   $59
              887f 0000  ld   $00
              8880 002b  ld   $2b
              8881 009a  ld   $9a
              8882 0021  ld   $21
              8883 0098  ld   $98
              8884 00d1  ld   $d1
              8885 0096  ld   $96
              8886 009e  ld   $9e
              8887 00a3  ld   $a3
              8888 0092  ld   $92
              8889 00ff  ld   $ff
              888a 00aa  ld   $aa
              888b 0059  ld   $59
              888c 0000  ld   $00
              888d 0000  ld   $00
              888e 00d5  ld   $d5
              888f 0058  ld   $58
              8890 0006  ld   $06
              8891 0000  ld   $00
              8892 00aa  ld   $aa
              8893 0058  ld   $58
              8894 000c  ld   $0c
              8895 0000  ld   $00
              8896 0000  ld   $00
              8897 0000  ld   $00
              8898 00af  ld   $af
              8899 0076  ld   $76
              889a 000c  ld   $0c
              889b 0000  ld   $00
              889c 00a8  ld   $a8
              889d 0076  ld   $76
              889e 0006  ld   $06
              889f 0000  ld   $00
              88a0 00a1  ld   $a1
              88a1 0076  ld   $76
              88a2 0000  ld   $00
              88a3 0000  ld   $00
              88a4 0000  ld   $00
              88a5 0000  ld   $00
              88a6 00a3  ld   $a3
              88a7 0078  ld   $78
              88a8 000c  ld   $0c
              88a9 0000  ld   $00
              88aa 00a9  ld   $a9
              88ab 0077  ld   $77
              88ac 0006  ld   $06
              88ad 0000  ld   $00
              88ae 00a2  ld   $a2
              88af 0077  ld   $77
              88b0 0000  ld   $00
              88b1 0000  ld   $00
              88b2 0000  ld   $00
              88b3 0000  ld   $00
              88b4 00ca  ld   $ca
              88b5 007e  ld   $7e
              88b6 000c  ld   $0c
              88b7 0000  ld   $00
              88b8 00b9  ld   $b9
              88b9 007e  ld   $7e
              88ba 0006  ld   $06
              88bb 0000  ld   $00
              88bc 00e6  ld   $e6
              88bd 007d  ld   $7d
              88be 0000  ld   $00
              88bf 0000  ld   $00
              88c0 0000  ld   $00
              88c1 0000  ld   $00
              88c2 0052  ld   $52
              88c3 00a6  ld   $a6
              88c4 005a  ld   $5a
              88c5 00af  ld   $af
              88c6 0076  ld   $76
              88c7 0000  ld   $00
              88c8 0000  ld   $00
              88c9 00a8  ld   $a8
              88ca 0076  ld   $76
              88cb 0006  ld   $06
              88cc 0000  ld   $00
              88cd 00a1  ld   $a1
              88ce 0076  ld   $76
              88cf 000c  ld   $0c
              88d0 0000  ld   $00
              88d1 0000  ld   $00
              88d2 0000  ld   $00
              88d3 00a3  ld   $a3
              88d4 0078  ld   $78
              88d5 0000  ld   $00
              88d6 0000  ld   $00
              88d7 00a9  ld   $a9
              88d8 0077  ld   $77
              88d9 0006  ld   $06
              88da 0000  ld   $00
              88db 00a2  ld   $a2
              88dc 0077  ld   $77
              88dd 000c  ld   $0c
              88de 0000  ld   $00
              88df 0000  ld   $00
              88e0 0000  ld   $00
              88e1 00ca  ld   $ca
              88e2 007e  ld   $7e
              88e3 0000  ld   $00
              88e4 0000  ld   $00
              88e5 00b9  ld   $b9
              88e6 007e  ld   $7e
              88e7 0006  ld   $06
              88e8 0000  ld   $00
              88e9 00e6  ld   $e6
              88ea 007d  ld   $7d
              88eb 000c  ld   $0c
              88ec 0000  ld   $00
              88ed 0000  ld   $00
              88ee 0000  ld   $00
              88ef 00a4  ld   $a4
              88f0 0075  ld   $75
              88f1 0000  ld   $00
              88f2 0000  ld   $00
              88f3 0000  ld   $00
              88f4 0000  ld   $00
              88f5 00a4  ld   $a4
              88f6 0075  ld   $75
              88f7 0000  ld   $00
              88f8 0000  ld   $00
              88f9 0000  ld   $00
              88fa 0000  ld   $00
              88fb fe00  bra  ac          ;+-----------------------------------+
              88fc fcfd  bra  $88fd       ;|                                   |
              88fd 1418  ld   $18,y       ;| Trampoline for page $8800 lookups |
              88fe e006  jmp  y,$06       ;|                                   |
              88ff c218  st   [$18]       ;+-----------------------------------+
              8900 00a4  ld   $a4
              8901 0075  ld   $75
              8902 0000  ld   $00
              8903 0000  ld   $00
              8904 0000  ld   $00
              8905 0000  ld   $00
              8906 00a4  ld   $a4
              8907 0075  ld   $75
              8908 0000  ld   $00
              8909 0000  ld   $00
              890a 0000  ld   $00
              890b 0000  ld   $00
              890c 00a4  ld   $a4
              890d 0072  ld   $72
              890e 0000  ld   $00
              890f 0000  ld   $00
              8910 0000  ld   $00
              8911 0000  ld   $00
              8912 00a4  ld   $a4
              8913 0075  ld   $75
              8914 0000  ld   $00
              8915 0000  ld   $00
              8916 0000  ld   $00
              8917 0000  ld   $00
              8918 00a4  ld   $a4
              8919 0073  ld   $73
              891a 0000  ld   $00
              891b 0000  ld   $00
              891c 0000  ld   $00
              891d 0000  ld   $00
              891e 00a4  ld   $a4
              891f 0075  ld   $75
              8920 0000  ld   $00
              8921 0000  ld   $00
              8922 0000  ld   $00
              8923 0000  ld   $00
              8924 0053  ld   $53
              8925 00a0  ld   $a0
              8926 0060  ld   $60
              8927 00a4  ld   $a4
              8928 0074  ld   $74
              8929 0000  ld   $00
              892a 0000  ld   $00
              892b 0000  ld   $00
              892c 0000  ld   $00
              892d 00a4  ld   $a4
              892e 0075  ld   $75
              892f 0000  ld   $00
              8930 0000  ld   $00
              8931 0000  ld   $00
              8932 0000  ld   $00
              8933 00d5  ld   $d5
              8934 005a  ld   $5a
              8935 0000  ld   $00
              8936 0000  ld   $00
              8937 00aa  ld   $aa
              8938 005a  ld   $5a
              8939 0006  ld   $06
              893a 0000  ld   $00
              893b 00d5  ld   $d5
              893c 0059  ld   $59
              893d 000c  ld   $0c
              893e 0000  ld   $00
              893f 0000  ld   $00
              8940 0000  ld   $00
              8941 00aa  ld   $aa
              8942 005c  ld   $5c
              8943 0000  ld   $00
              8944 0000  ld   $00
              8945 00d5  ld   $d5
              8946 005b  ld   $5b
              8947 0006  ld   $06
              8948 0000  ld   $00
              8949 00aa  ld   $aa
              894a 005b  ld   $5b
              894b 000c  ld   $0c
              894c 0000  ld   $00
              894d 0000  ld   $00
              894e 0000  ld   $00
              894f 00d5  ld   $d5
              8950 005d  ld   $5d
              8951 0000  ld   $00
              8952 0000  ld   $00
              8953 00aa  ld   $aa
              8954 005d  ld   $5d
              8955 0006  ld   $06
              8956 0000  ld   $00
              8957 00d5  ld   $d5
              8958 005c  ld   $5c
              8959 000c  ld   $0c
              895a 0000  ld   $00
              895b 0000  ld   $00
              895c 0000  ld   $00
              895d 00b6  ld   $b6
              895e 005e  ld   $5e
              895f 0000  ld   $00
              8960 0000  ld   $00
              8961 0000  ld   $00
              8962 0000  ld   $00
              8963 00db  ld   $db
              8964 005e  ld   $5e
              8965 0000  ld   $00
              8966 0000  ld   $00
              8967 0000  ld   $00
              8968 0000  ld   $00
              8969 00b6  ld   $b6
              896a 005f  ld   $5f
              896b 0000  ld   $00
              896c 0000  ld   $00
              896d 0000  ld   $00
              896e 0000  ld   $00
              896f 00db  ld   $db
              8970 005f  ld   $5f
              8971 0000  ld   $00
              8972 0000  ld   $00
              8973 0000  ld   $00
              8974 0000  ld   $00
              8975 00b6  ld   $b6
              8976 0060  ld   $60
              8977 0000  ld   $00
              8978 0000  ld   $00
              8979 0000  ld   $00
              897a 0000  ld   $00
              897b 00db  ld   $db
              897c 0060  ld   $60
              897d 0000  ld   $00
              897e 0000  ld   $00
              897f 0000  ld   $00
              8980 0000  ld   $00
              8981 00b6  ld   $b6
              8982 0061  ld   $61
              8983 0000  ld   $00
              8984 0000  ld   $00
              8985 0000  ld   $00
              8986 0000  ld   $00
              8987 0054  ld   $54
              8988 00a0  ld   $a0
              8989 0060  ld   $60
              898a 00db  ld   $db
              898b 0061  ld   $61
              898c 0000  ld   $00
              898d 0000  ld   $00
              898e 0000  ld   $00
              898f 0000  ld   $00
              8990 00b6  ld   $b6
              8991 0065  ld   $65
              8992 0000  ld   $00
              8993 0000  ld   $00
              8994 00db  ld   $db
              8995 0064  ld   $64
              8996 0006  ld   $06
              8997 0000  ld   $00
              8998 0000  ld   $00
              8999 0000  ld   $00
              899a 00b6  ld   $b6
              899b 0076  ld   $76
              899c 0000  ld   $00
              899d 0000  ld   $00
              899e 00db  ld   $db
              899f 0065  ld   $65
              89a0 0006  ld   $06
              89a1 0000  ld   $00
              89a2 0000  ld   $00
              89a3 0000  ld   $00
              89a4 00c3  ld   $c3
              89a5 0067  ld   $67
              89a6 0006  ld   $06
              89a7 0000  ld   $00
              89a8 00c3  ld   $c3
              89a9 0066  ld   $66
              89aa 0000  ld   $00
              89ab 0000  ld   $00
              89ac 0000  ld   $00
              89ad 0000  ld   $00
              89ae 00c3  ld   $c3
              89af 0067  ld   $67
              89b0 0000  ld   $00
              89b1 0000  ld   $00
              89b2 00c3  ld   $c3
              89b3 0066  ld   $66
              89b4 0006  ld   $06
              89b5 0000  ld   $00
              89b6 0000  ld   $00
              89b7 0000  ld   $00
              89b8 00c3  ld   $c3
              89b9 0069  ld   $69
              89ba 0000  ld   $00
              89bb 0000  ld   $00
              89bc 00c3  ld   $c3
              89bd 0068  ld   $68
              89be 0006  ld   $06
              89bf 0000  ld   $00
              89c0 0000  ld   $00
              89c1 0000  ld   $00
              89c2 00c3  ld   $c3
              89c3 006b  ld   $6b
              89c4 0006  ld   $06
              89c5 0000  ld   $00
              89c6 00c3  ld   $c3
              89c7 006a  ld   $6a
              89c8 0000  ld   $00
              89c9 0000  ld   $00
              89ca 0000  ld   $00
              89cb 0000  ld   $00
              89cc 00c3  ld   $c3
              89cd 006d  ld   $6d
              89ce 0006  ld   $06
              89cf 0000  ld   $00
              89d0 00c3  ld   $c3
              89d1 006c  ld   $6c
              89d2 0000  ld   $00
              89d3 0000  ld   $00
              89d4 0000  ld   $00
              89d5 0000  ld   $00
              89d6 00c3  ld   $c3
              89d7 006b  ld   $6b
              89d8 0000  ld   $00
              89d9 0000  ld   $00
              89da 00c3  ld   $c3
              89db 006a  ld   $6a
              89dc 0006  ld   $06
              89dd 0000  ld   $00
              89de 0000  ld   $00
              89df 0000  ld   $00
              89e0 00c3  ld   $c3
              89e1 006d  ld   $6d
              89e2 0000  ld   $00
              89e3 0000  ld   $00
              89e4 00c3  ld   $c3
              89e5 006c  ld   $6c
              89e6 0006  ld   $06
              89e7 0000  ld   $00
              89e8 0000  ld   $00
              89e9 0000  ld   $00
              89ea 0055  ld   $55
              89eb 00a2  ld   $a2
              89ec 005e  ld   $5e
              89ed 00c3  ld   $c3
              89ee 006f  ld   $6f
              89ef 0006  ld   $06
              89f0 0000  ld   $00
              89f1 00c3  ld   $c3
              89f2 006e  ld   $6e
              89f3 0000  ld   $00
              89f4 0000  ld   $00
              89f5 0000  ld   $00
              89f6 0000  ld   $00
              89f7 00c3  ld   $c3
              89f8 0071  ld   $71
              89f9 0006  ld   $06
              89fa 0000  ld   $00
              89fb fe00  bra  ac          ;+-----------------------------------+
              89fc fcfd  bra  $89fd       ;|                                   |
              89fd 1418  ld   $18,y       ;| Trampoline for page $8900 lookups |
              89fe e006  jmp  y,$06       ;|                                   |
              89ff c218  st   [$18]       ;+-----------------------------------+
              8a00 00c3  ld   $c3
              8a01 0070  ld   $70
              8a02 0000  ld   $00
              8a03 0000  ld   $00
              8a04 0000  ld   $00
              8a05 0000  ld   $00
              8a06 00c3  ld   $c3
              8a07 006f  ld   $6f
              8a08 0000  ld   $00
              8a09 0000  ld   $00
              8a0a 00c3  ld   $c3
              8a0b 006e  ld   $6e
              8a0c 0006  ld   $06
              8a0d 0000  ld   $00
              8a0e 0000  ld   $00
              8a0f 0000  ld   $00
              8a10 00c3  ld   $c3
              8a11 0071  ld   $71
              8a12 0000  ld   $00
              8a13 0000  ld   $00
              8a14 00c3  ld   $c3
              8a15 0070  ld   $70
              8a16 0006  ld   $06
              8a17 0000  ld   $00
              8a18 0000  ld   $00
              8a19 0000  ld   $00
              8a1a 00c3  ld   $c3
              8a1b 0073  ld   $73
              8a1c 0006  ld   $06
              8a1d 0000  ld   $00
              8a1e 00c3  ld   $c3
              8a1f 0072  ld   $72
              8a20 0000  ld   $00
              8a21 0000  ld   $00
              8a22 0000  ld   $00
              8a23 0000  ld   $00
              8a24 00c3  ld   $c3
              8a25 0075  ld   $75
              8a26 0006  ld   $06
              8a27 0000  ld   $00
              8a28 00c3  ld   $c3
              8a29 0074  ld   $74
              8a2a 0000  ld   $00
              8a2b 0000  ld   $00
              8a2c 0000  ld   $00
              8a2d 0000  ld   $00
              8a2e 00c3  ld   $c3
              8a2f 0073  ld   $73
              8a30 0000  ld   $00
              8a31 0000  ld   $00
              8a32 00c3  ld   $c3
              8a33 0072  ld   $72
              8a34 0006  ld   $06
              8a35 0000  ld   $00
              8a36 0000  ld   $00
              8a37 0000  ld   $00
              8a38 00c3  ld   $c3
              8a39 0075  ld   $75
              8a3a 0000  ld   $00
              8a3b 0000  ld   $00
              8a3c 00c3  ld   $c3
              8a3d 0074  ld   $74
              8a3e 0006  ld   $06
              8a3f 0000  ld   $00
              8a40 0000  ld   $00
              8a41 0000  ld   $00
              8a42 00d5  ld   $d5
              8a43 0078  ld   $78
              8a44 000c  ld   $0c
              8a45 0000  ld   $00
              8a46 00aa  ld   $aa
              8a47 0078  ld   $78
              8a48 0006  ld   $06
              8a49 0000  ld   $00
              8a4a 00d5  ld   $d5
              8a4b 0077  ld   $77
              8a4c 0000  ld   $00
              8a4d 0000  ld   $00
              8a4e 0000  ld   $00
              8a4f 0000  ld   $00
              8a50 0056  ld   $56
              8a51 00a0  ld   $a0
              8a52 004c  ld   $4c
              8a53 00b0  ld   $b0
              8a54 0077  ld   $77
              8a55 0006  ld   $06
              8a56 0000  ld   $00
              8a57 00db  ld   $db
              8a58 0076  ld   $76
              8a59 0000  ld   $00
              8a5a 0000  ld   $00
              8a5b 0000  ld   $00
              8a5c 0000  ld   $00
              8a5d 00a5  ld   $a5
              8a5e 007c  ld   $7c
              8a5f 0000  ld   $00
              8a60 0000  ld   $00
              8a61 00f9  ld   $f9
              8a62 007e  ld   $7e
              8a63 0000  ld   $00
              8a64 000f  ld   $0f
              8a65 00a5  ld   $a5
              8a66 007b  ld   $7b
              8a67 0006  ld   $06
              8a68 0000  ld   $00
              8a69 00f2  ld   $f2
              8a6a 007e  ld   $7e
              8a6b 0006  ld   $06
              8a6c 000f  ld   $0f
              8a6d 00a5  ld   $a5
              8a6e 007a  ld   $7a
              8a6f 000c  ld   $0c
              8a70 0000  ld   $00
              8a71 00eb  ld   $eb
              8a72 007e  ld   $7e
              8a73 000c  ld   $0c
              8a74 000f  ld   $0f
              8a75 00a5  ld   $a5
              8a76 0079  ld   $79
              8a77 0012  ld   $12
              8a78 0000  ld   $00
              8a79 00e4  ld   $e4
              8a7a 007e  ld   $7e
              8a7b 0012  ld   $12
              8a7c 000f  ld   $0f
              8a7d 0000  ld   $00
              8a7e 0000  ld   $00
              8a7f 0064  ld   $64
              8a80 0000  ld   $00
              8a81 0032  ld   $32
              8a82 0000  ld   $00
              8a83 0032  ld   $32
              8a84 0000  ld   $00
              8a85 0064  ld   $64
              8a86 0000  ld   $00
              8a87 0096  ld   $96
              8a88 0000  ld   $00
              8a89 0064  ld   $64
              8a8a 0000  ld   $00
              8a8b 0064  ld   $64
              8a8c 0000  ld   $00
              8a8d 0032  ld   $32
              8a8e 0000  ld   $00
              8a8f 002c  ld   $2c
              8a90 0001  ld   $01
              8a91 0064  ld   $64
              8a92 0000  ld   $00
              8a93 0064  ld   $64
              8a94 0000  ld   $00
              8a95 0064  ld   $64
              8a96 0000  ld   $00
              8a97 0032  ld   $32
              8a98 0000  ld   $00
              8a99 0096  ld   $96
              8a9a 0000  ld   $00
              8a9b 0064  ld   $64
              8a9c 0000  ld   $00
              8a9d 0032  ld   $32
              8a9e 0000  ld   $00
              8a9f 0057  ld   $57
              8aa0 00a2  ld   $a2
              8aa1 000e  ld   $0e
              8aa2 00d5  ld   $d5
              8aa3 0078  ld   $78
              8aa4 0000  ld   $00
              8aa5 0000  ld   $00
              8aa6 00aa  ld   $aa
              8aa7 0078  ld   $78
              8aa8 0006  ld   $06
              8aa9 0000  ld   $00
              8aaa 00d5  ld   $d5
              8aab 0077  ld   $77
              8aac 000c  ld   $0c
              8aad 0000  ld   $00
              8aae 0000  ld   $00
              8aaf 0000  ld   $00
              8ab0 0058  ld   $58
              8ab1 00a0  ld   $a0
              8ab2 0060  ld   $60
              8ab3 00b0  ld   $b0
              8ab4 0077  ld   $77
              8ab5 0000  ld   $00
              8ab6 0000  ld   $00
              8ab7 00db  ld   $db
              8ab8 0076  ld   $76
              8ab9 0006  ld   $06
              8aba 0000  ld   $00
              8abb 0000  ld   $00
              8abc 0000  ld   $00
              8abd 0011  ld   $11
              8abe 0011  ld   $11
              8abf 0011  ld   $11
              * 6 times
              8ac3 000f  ld   $0f
              8ac4 0011  ld   $11
              8ac5 000f  ld   $0f
              8ac6 000f  ld   $0f
              8ac7 000f  ld   $0f
              8ac8 0011  ld   $11
              8ac9 0011  ld   $11
              8aca 0011  ld   $11
              * 5 times
              8acd 000f  ld   $0f
              8ace 0011  ld   $11
              8acf 000f  ld   $0f
              8ad0 0011  ld   $11
              8ad1 0011  ld   $11
              8ad2 000f  ld   $0f
              8ad3 0011  ld   $11
              8ad4 0011  ld   $11
              8ad5 000f  ld   $0f
              8ad6 0011  ld   $11
              8ad7 000f  ld   $0f
              8ad8 0011  ld   $11
              8ad9 0011  ld   $11
              8ada 0011  ld   $11
              8adb 000f  ld   $0f
              8adc 0011  ld   $11
              8add 000f  ld   $0f
              8ade 0011  ld   $11
              8adf 0011  ld   $11
              8ae0 0011  ld   $11
              * 9 times
              8ae7 00f9  ld   $f9
              8ae8 0011  ld   $11
              8ae9 0011  ld   $11
              8aea 0011  ld   $11
              * 6 times
              8aee 000f  ld   $0f
              8aef 0011  ld   $11
              8af0 0011  ld   $11
              8af1 0011  ld   $11
              8af2 0011  ld   $11
              8af3 000f  ld   $0f
              8af4 000f  ld   $0f
              8af5 000f  ld   $0f
              8af6 0011  ld   $11
              8af7 0011  ld   $11
              8af8 000f  ld   $0f
              8af9 0011  ld   $11
              8afa 000f  ld   $0f
              8afb fe00  bra  ac          ;+-----------------------------------+
              8afc fcfd  bra  $8afd       ;|                                   |
              8afd 1418  ld   $18,y       ;| Trampoline for page $8a00 lookups |
              8afe e006  jmp  y,$06       ;|                                   |
              8aff c218  st   [$18]       ;+-----------------------------------+
              8b00 0011  ld   $11
              8b01 0011  ld   $11
              8b02 0011  ld   $11
              8b03 000f  ld   $0f
              8b04 000f  ld   $0f
              8b05 000f  ld   $0f
              8b06 0011  ld   $11
              8b07 0011  ld   $11
              8b08 0011  ld   $11
              8b09 000f  ld   $0f
              8b0a 0011  ld   $11
              8b0b 000f  ld   $0f
              8b0c 000f  ld   $0f
              8b0d 0011  ld   $11
              8b0e 0011  ld   $11
              8b0f 0011  ld   $11
              8b10 000f  ld   $0f
              8b11 0011  ld   $11
              8b12 0011  ld   $11
              8b13 0011  ld   $11
              * 6 times
              8b17 00f9  ld   $f9
              8b18 0059  ld   $59
              8b19 00a0  ld   $a0
              8b1a 0060  ld   $60
              8b1b 00ec  ld   $ec
              8b1c 0057  ld   $57
              8b1d 00d8  ld   $d8
              8b1e 0057  ld   $57
              8b1f 00c4  ld   $c4
              8b20 0057  ld   $57
              8b21 00b0  ld   $b0
              8b22 0057  ld   $57
              8b23 00ec  ld   $ec
              8b24 0056  ld   $56
              8b25 0011  ld   $11
              8b26 0011  ld   $11
              8b27 0011  ld   $11
              * 14 times
              8b33 000f  ld   $0f
              8b34 000f  ld   $0f
              8b35 0011  ld   $11
              8b36 000f  ld   $0f
              8b37 0011  ld   $11
              8b38 000f  ld   $0f
              8b39 0011  ld   $11
              8b3a 000f  ld   $0f
              8b3b 0011  ld   $11
              8b3c 0011  ld   $11
              8b3d 0011  ld   $11
              8b3e 000f  ld   $0f
              8b3f 0011  ld   $11
              8b40 000f  ld   $0f
              8b41 0011  ld   $11
              8b42 0011  ld   $11
              8b43 0011  ld   $11
              8b44 0011  ld   $11
              8b45 000f  ld   $0f
              8b46 000f  ld   $0f
              8b47 0011  ld   $11
              8b48 0011  ld   $11
              8b49 0011  ld   $11
              * 8 times
              8b4f 00f9  ld   $f9
              8b50 0000  ld   $00
              8b51 0000  ld   $00
              8b52 0000  ld   $00
              * 42 times
              8b7a 00f9  ld   $f9
              8b7b 005a  ld   $5a
              8b7c 00aa  ld   $aa
              8b7d 0056  ld   $56
              8b7e 0000  ld   $00
              8b7f 0000  ld   $00
              8b80 0000  ld   $00
              * 42 times
              8ba8 00f9  ld   $f9
              8ba9 0000  ld   $00
              8baa 0000  ld   $00
              8bab 0000  ld   $00
              * 42 times
              8bd3 00f9  ld   $f9
              8bd4 005b  ld   $5b
              8bd5 00aa  ld   $aa
              8bd6 0056  ld   $56
              8bd7 0013  ld   $13
              8bd8 0013  ld   $13
              8bd9 0000  ld   $00
              8bda 0000  ld   $00
              8bdb 0013  ld   $13
              8bdc 0000  ld   $00
              8bdd 0000  ld   $00
              8bde 0000  ld   $00
              8bdf 0013  ld   $13
              8be0 0000  ld   $00
              8be1 0000  ld   $00
              8be2 0000  ld   $00
              8be3 0013  ld   $13
              8be4 0013  ld   $13
              8be5 0000  ld   $00
              8be6 0000  ld   $00
              8be7 0000  ld   $00
              * 5 times
              8bea 0013  ld   $13
              8beb 0013  ld   $13
              8bec 0000  ld   $00
              8bed 0013  ld   $13
              8bee 0000  ld   $00
              8bef 0013  ld   $13
              8bf0 0013  ld   $13
              8bf1 0013  ld   $13
              8bf2 0000  ld   $00
              8bf3 0000  ld   $00
              8bf4 0000  ld   $00
              8bf5 0013  ld   $13
              8bf6 0000  ld   $00
              8bf7 0000  ld   $00
              8bf8 0013  ld   $13
              8bf9 0000  ld   $00
              8bfa 0000  ld   $00
              8bfb fe00  bra  ac          ;+-----------------------------------+
              8bfc fcfd  bra  $8bfd       ;|                                   |
              8bfd 1418  ld   $18,y       ;| Trampoline for page $8b00 lookups |
              8bfe e006  jmp  y,$06       ;|                                   |
              8bff c218  st   [$18]       ;+-----------------------------------+
              8c00 0000  ld   $00
              8c01 0013  ld   $13
              8c02 0000  ld   $00
              8c03 0000  ld   $00
              8c04 0013  ld   $13
              8c05 0000  ld   $00
              8c06 00f9  ld   $f9
              8c07 0013  ld   $13
              8c08 0013  ld   $13
              8c09 0000  ld   $00
              8c0a 0013  ld   $13
              8c0b 0000  ld   $00
              8c0c 0013  ld   $13
              8c0d 0000  ld   $00
              8c0e 0013  ld   $13
              8c0f 0013  ld   $13
              8c10 0013  ld   $13
              * 6 times
              8c14 0000  ld   $00
              8c15 0013  ld   $13
              8c16 0000  ld   $00
              8c17 0000  ld   $00
              8c18 0000  ld   $00
              8c19 0000  ld   $00
              8c1a 0013  ld   $13
              8c1b 0000  ld   $00
              8c1c 0000  ld   $00
              8c1d 0000  ld   $00
              8c1e 0013  ld   $13
              8c1f 0000  ld   $00
              8c20 0000  ld   $00
              8c21 0013  ld   $13
              8c22 0000  ld   $00
              8c23 0000  ld   $00
              8c24 0000  ld   $00
              8c25 0013  ld   $13
              8c26 0013  ld   $13
              8c27 0000  ld   $00
              8c28 0013  ld   $13
              8c29 0000  ld   $00
              8c2a 0013  ld   $13
              8c2b 0013  ld   $13
              8c2c 0000  ld   $00
              8c2d 0013  ld   $13
              8c2e 0000  ld   $00
              8c2f 0013  ld   $13
              8c30 0000  ld   $00
              8c31 00f9  ld   $f9
              8c32 005c  ld   $5c
              8c33 00aa  ld   $aa
              8c34 0056  ld   $56
              8c35 0013  ld   $13
              8c36 0000  ld   $00
              8c37 0000  ld   $00
              8c38 0000  ld   $00
              8c39 0013  ld   $13
              8c3a 0000  ld   $00
              8c3b 0000  ld   $00
              8c3c 0013  ld   $13
              8c3d 0000  ld   $00
              8c3e 0013  ld   $13
              8c3f 0013  ld   $13
              8c40 0013  ld   $13
              8c41 0000  ld   $00
              8c42 0000  ld   $00
              8c43 0013  ld   $13
              8c44 0013  ld   $13
              8c45 0000  ld   $00
              8c46 0000  ld   $00
              8c47 0013  ld   $13
              8c48 0013  ld   $13
              8c49 0013  ld   $13
              8c4a 0000  ld   $00
              8c4b 0013  ld   $13
              8c4c 0000  ld   $00
              8c4d 0000  ld   $00
              8c4e 0013  ld   $13
              8c4f 0000  ld   $00
              8c50 0013  ld   $13
              8c51 0000  ld   $00
              8c52 0013  ld   $13
              8c53 0013  ld   $13
              8c54 0000  ld   $00
              8c55 0000  ld   $00
              8c56 0013  ld   $13
              8c57 0013  ld   $13
              8c58 0000  ld   $00
              8c59 0013  ld   $13
              8c5a 0000  ld   $00
              8c5b 0013  ld   $13
              8c5c 0013  ld   $13
              8c5d 0000  ld   $00
              8c5e 0000  ld   $00
              8c5f 00f9  ld   $f9
              8c60 0013  ld   $13
              8c61 0000  ld   $00
              8c62 0000  ld   $00
              8c63 0000  ld   $00
              * 5 times
              8c66 0013  ld   $13
              8c67 0000  ld   $00
              8c68 0013  ld   $13
              8c69 0000  ld   $00
              8c6a 0000  ld   $00
              8c6b 0000  ld   $00
              8c6c 0013  ld   $13
              8c6d 0013  ld   $13
              8c6e 0000  ld   $00
              8c6f 0000  ld   $00
              8c70 0000  ld   $00
              * 5 times
              8c73 0013  ld   $13
              8c74 0013  ld   $13
              8c75 0000  ld   $00
              8c76 0000  ld   $00
              8c77 0000  ld   $00
              8c78 0013  ld   $13
              8c79 0013  ld   $13
              8c7a 0013  ld   $13
              8c7b 0000  ld   $00
              8c7c 0000  ld   $00
              8c7d 0000  ld   $00
              8c7e 0013  ld   $13
              8c7f 0000  ld   $00
              8c80 0000  ld   $00
              8c81 0013  ld   $13
              8c82 0000  ld   $00
              8c83 0000  ld   $00
              8c84 0013  ld   $13
              8c85 0000  ld   $00
              8c86 0000  ld   $00
              8c87 0000  ld   $00
              * 5 times
              8c8a 00f9  ld   $f9
              8c8b 005d  ld   $5d
              8c8c 00aa  ld   $aa
              8c8d 0056  ld   $56
              8c8e 0000  ld   $00
              8c8f 0013  ld   $13
              8c90 0000  ld   $00
              8c91 0013  ld   $13
              8c92 0000  ld   $00
              8c93 0000  ld   $00
              8c94 0013  ld   $13
              8c95 0013  ld   $13
              8c96 0013  ld   $13
              8c97 0013  ld   $13
              8c98 0000  ld   $00
              8c99 0013  ld   $13
              8c9a 0013  ld   $13
              8c9b 0000  ld   $00
              8c9c 0013  ld   $13
              8c9d 0013  ld   $13
              8c9e 0013  ld   $13
              8c9f 0000  ld   $00
              8ca0 0000  ld   $00
              8ca1 0013  ld   $13
              8ca2 0013  ld   $13
              8ca3 0000  ld   $00
              8ca4 0013  ld   $13
              8ca5 0013  ld   $13
              8ca6 0013  ld   $13
              * 7 times
              8cab 0000  ld   $00
              8cac 0013  ld   $13
              8cad 0000  ld   $00
              8cae 0013  ld   $13
              8caf 0013  ld   $13
              8cb0 0000  ld   $00
              8cb1 0013  ld   $13
              8cb2 0000  ld   $00
              8cb3 0000  ld   $00
              8cb4 0000  ld   $00
              * 6 times
              8cb8 00f9  ld   $f9
              8cb9 0000  ld   $00
              8cba 0000  ld   $00
              8cbb 0000  ld   $00
              * 5 times
              8cbe 0013  ld   $13
              8cbf 0000  ld   $00
              8cc0 0013  ld   $13
              8cc1 0000  ld   $00
              8cc2 0013  ld   $13
              8cc3 0013  ld   $13
              8cc4 0013  ld   $13
              8cc5 0000  ld   $00
              8cc6 0000  ld   $00
              8cc7 0013  ld   $13
              8cc8 0013  ld   $13
              8cc9 0000  ld   $00
              8cca 0013  ld   $13
              8ccb 0000  ld   $00
              8ccc 0013  ld   $13
              8ccd 0013  ld   $13
              8cce 0000  ld   $00
              8ccf 0013  ld   $13
              8cd0 0013  ld   $13
              8cd1 0000  ld   $00
              8cd2 0013  ld   $13
              8cd3 0000  ld   $00
              8cd4 0013  ld   $13
              8cd5 0000  ld   $00
              8cd6 0013  ld   $13
              8cd7 0013  ld   $13
              8cd8 0000  ld   $00
              8cd9 0000  ld   $00
              8cda 0013  ld   $13
              8cdb 0013  ld   $13
              8cdc 0000  ld   $00
              8cdd 0000  ld   $00
              8cde 0000  ld   $00
              8cdf 0000  ld   $00
              8ce0 0013  ld   $13
              8ce1 0000  ld   $00
              8ce2 0000  ld   $00
              8ce3 00f9  ld   $f9
              8ce4 005e  ld   $5e
              8ce5 00a0  ld   $a0
              8ce6 0006  ld   $06
              8ce7 00b6  ld   $b6
              8ce8 0062  ld   $62
              8ce9 0000  ld   $00
              8cea 0000  ld   $00
              8ceb 0000  ld   $00
              8cec 0000  ld   $00
              8ced 005e  ld   $5e
              8cee 00b6  ld   $b6
              8cef 004a  ld   $4a
              8cf0 003f  ld   $3f
              8cf1 0000  ld   $00
              8cf2 0000  ld   $00
              8cf3 0000  ld   $00
              * 5 times
              8cf6 003f  ld   $3f
              8cf7 0000  ld   $00
              8cf8 0000  ld   $00
              8cf9 0000  ld   $00
              8cfa 0000  ld   $00
              8cfb fe00  bra  ac          ;+-----------------------------------+
              8cfc fcfd  bra  $8cfd       ;|                                   |
              8cfd 1418  ld   $18,y       ;| Trampoline for page $8c00 lookups |
              8cfe e006  jmp  y,$06       ;|                                   |
              8cff c218  st   [$18]       ;+-----------------------------------+
              8d00 0000  ld   $00
              8d01 003f  ld   $3f
              8d02 0000  ld   $00
              8d03 0000  ld   $00
              8d04 0000  ld   $00
              * 5 times
              8d07 003f  ld   $3f
              8d08 0000  ld   $00
              8d09 0000  ld   $00
              8d0a 0000  ld   $00
              * 5 times
              8d0d 003f  ld   $3f
              8d0e 0000  ld   $00
              8d0f 0000  ld   $00
              8d10 0000  ld   $00
              * 5 times
              8d13 003f  ld   $3f
              8d14 003f  ld   $3f
              8d15 003f  ld   $3f
              * 5 times
              8d18 0000  ld   $00
              8d19 00fa  ld   $fa
              8d1a 0000  ld   $00
              8d1b 003f  ld   $3f
              8d1c 003f  ld   $3f
              8d1d 003f  ld   $3f
              8d1e 0000  ld   $00
              8d1f 0000  ld   $00
              8d20 003f  ld   $3f
              8d21 0000  ld   $00
              8d22 0000  ld   $00
              8d23 0000  ld   $00
              8d24 003f  ld   $3f
              8d25 0000  ld   $00
              8d26 003f  ld   $3f
              8d27 0000  ld   $00
              8d28 0000  ld   $00
              8d29 0000  ld   $00
              8d2a 003f  ld   $3f
              8d2b 0000  ld   $00
              8d2c 0000  ld   $00
              8d2d 003f  ld   $3f
              8d2e 003f  ld   $3f
              8d2f 003f  ld   $3f
              8d30 003f  ld   $3f
              8d31 0000  ld   $00
              8d32 0000  ld   $00
              8d33 0000  ld   $00
              * 5 times
              8d36 003f  ld   $3f
              8d37 0000  ld   $00
              8d38 0000  ld   $00
              8d39 003f  ld   $3f
              8d3a 003f  ld   $3f
              8d3b 003f  ld   $3f
              8d3c 0000  ld   $00
              8d3d 0000  ld   $00
              8d3e 00fa  ld   $fa
              8d3f 005f  ld   $5f
              8d40 00a0  ld   $a0
              8d41 0006  ld   $06
              8d42 00db  ld   $db
              8d43 0062  ld   $62
              8d44 0000  ld   $00
              8d45 0000  ld   $00
              8d46 0000  ld   $00
              8d47 0000  ld   $00
              8d48 005f  ld   $5f
              8d49 00b6  ld   $b6
              8d4a 004a  ld   $4a
              8d4b 0000  ld   $00
              8d4c 003f  ld   $3f
              8d4d 003f  ld   $3f
              8d4e 003f  ld   $3f
              8d4f 0000  ld   $00
              8d50 0000  ld   $00
              8d51 003f  ld   $3f
              8d52 0000  ld   $00
              8d53 0000  ld   $00
              8d54 0000  ld   $00
              8d55 003f  ld   $3f
              8d56 0000  ld   $00
              8d57 0000  ld   $00
              8d58 003f  ld   $3f
              8d59 003f  ld   $3f
              8d5a 003f  ld   $3f
              8d5b 0000  ld   $00
              8d5c 0000  ld   $00
              8d5d 003f  ld   $3f
              8d5e 0000  ld   $00
              8d5f 0000  ld   $00
              8d60 0000  ld   $00
              8d61 003f  ld   $3f
              8d62 0000  ld   $00
              8d63 003f  ld   $3f
              8d64 0000  ld   $00
              8d65 0000  ld   $00
              8d66 0000  ld   $00
              8d67 003f  ld   $3f
              8d68 0000  ld   $00
              8d69 0000  ld   $00
              8d6a 003f  ld   $3f
              8d6b 003f  ld   $3f
              8d6c 003f  ld   $3f
              8d6d 0000  ld   $00
              8d6e 0000  ld   $00
              8d6f 00fa  ld   $fa
              8d70 003f  ld   $3f
              8d71 003f  ld   $3f
              8d72 003f  ld   $3f
              * 5 times
              8d75 0000  ld   $00
              8d76 003f  ld   $3f
              8d77 0000  ld   $00
              8d78 0000  ld   $00
              8d79 0000  ld   $00
              8d7a 003f  ld   $3f
              8d7b 0000  ld   $00
              8d7c 0000  ld   $00
              8d7d 0000  ld   $00
              8d7e 0000  ld   $00
              8d7f 003f  ld   $3f
              8d80 0000  ld   $00
              8d81 0000  ld   $00
              8d82 0000  ld   $00
              8d83 0000  ld   $00
              8d84 003f  ld   $3f
              8d85 0000  ld   $00
              8d86 0000  ld   $00
              8d87 0000  ld   $00
              * 5 times
              8d8a 003f  ld   $3f
              8d8b 0000  ld   $00
              8d8c 0000  ld   $00
              8d8d 0000  ld   $00
              * 5 times
              8d90 003f  ld   $3f
              8d91 0000  ld   $00
              8d92 0000  ld   $00
              8d93 0000  ld   $00
              8d94 00fa  ld   $fa
              8d95 0060  ld   $60
              8d96 00a0  ld   $a0
              8d97 0006  ld   $06
              8d98 00b0  ld   $b0
              8d99 0063  ld   $63
              8d9a 0000  ld   $00
              8d9b 0000  ld   $00
              8d9c 0000  ld   $00
              8d9d 0000  ld   $00
              8d9e 0060  ld   $60
              8d9f 00b6  ld   $b6
              8da0 004a  ld   $4a
              8da1 0000  ld   $00
              8da2 003f  ld   $3f
              8da3 003f  ld   $3f
              8da4 003f  ld   $3f
              8da5 0000  ld   $00
              8da6 0000  ld   $00
              8da7 003f  ld   $3f
              8da8 0000  ld   $00
              8da9 0000  ld   $00
              8daa 0000  ld   $00
              * 5 times
              8dad 003f  ld   $3f
              8dae 003f  ld   $3f
              8daf 003f  ld   $3f
              8db0 003f  ld   $3f
              8db1 0000  ld   $00
              8db2 0000  ld   $00
              8db3 003f  ld   $3f
              8db4 0000  ld   $00
              8db5 0000  ld   $00
              8db6 0000  ld   $00
              8db7 003f  ld   $3f
              8db8 0000  ld   $00
              8db9 003f  ld   $3f
              8dba 0000  ld   $00
              8dbb 0000  ld   $00
              8dbc 0000  ld   $00
              8dbd 003f  ld   $3f
              8dbe 0000  ld   $00
              8dbf 0000  ld   $00
              8dc0 003f  ld   $3f
              8dc1 003f  ld   $3f
              8dc2 003f  ld   $3f
              8dc3 0000  ld   $00
              8dc4 0000  ld   $00
              8dc5 00fa  ld   $fa
              8dc6 003f  ld   $3f
              8dc7 003f  ld   $3f
              8dc8 003f  ld   $3f
              * 5 times
              8dcb 0000  ld   $00
              8dcc 003f  ld   $3f
              8dcd 0000  ld   $00
              8dce 0000  ld   $00
              8dcf 0000  ld   $00
              * 6 times
              8dd3 003f  ld   $3f
              8dd4 003f  ld   $3f
              8dd5 003f  ld   $3f
              8dd6 0000  ld   $00
              8dd7 0000  ld   $00
              8dd8 0000  ld   $00
              * 6 times
              8ddc 003f  ld   $3f
              8ddd 0000  ld   $00
              8dde 003f  ld   $3f
              8ddf 0000  ld   $00
              8de0 0000  ld   $00
              8de1 0000  ld   $00
              8de2 003f  ld   $3f
              8de3 0000  ld   $00
              8de4 0000  ld   $00
              8de5 003f  ld   $3f
              8de6 003f  ld   $3f
              8de7 003f  ld   $3f
              8de8 0000  ld   $00
              8de9 0000  ld   $00
              8dea 00fa  ld   $fa
              8deb 0061  ld   $61
              8dec 00a0  ld   $a0
              8ded 0006  ld   $06
              8dee 00ed  ld   $ed
              8def 007d  ld   $7d
              8df0 0000  ld   $00
              8df1 0000  ld   $00
              8df2 0000  ld   $00
              8df3 0000  ld   $00
              8df4 0061  ld   $61
              8df5 00b6  ld   $b6
              8df6 004a  ld   $4a
              8df7 0000  ld   $00
              8df8 0000  ld   $00
              8df9 0000  ld   $00
              8dfa 003f  ld   $3f
              8dfb fe00  bra  ac          ;+-----------------------------------+
              8dfc fcfd  bra  $8dfd       ;|                                   |
              8dfd 1418  ld   $18,y       ;| Trampoline for page $8d00 lookups |
              8dfe e006  jmp  y,$06       ;|                                   |
              8dff c218  st   [$18]       ;+-----------------------------------+
              8e00 0000  ld   $00
              8e01 0000  ld   $00
              8e02 003f  ld   $3f
              8e03 0000  ld   $00
              8e04 0000  ld   $00
              8e05 003f  ld   $3f
              8e06 0000  ld   $00
              8e07 0000  ld   $00
              8e08 003f  ld   $3f
              8e09 0000  ld   $00
              8e0a 0000  ld   $00
              8e0b 003f  ld   $3f
              8e0c 0000  ld   $00
              8e0d 0000  ld   $00
              8e0e 003f  ld   $3f
              8e0f 003f  ld   $3f
              8e10 003f  ld   $3f
              * 5 times
              8e13 0000  ld   $00
              8e14 0000  ld   $00
              8e15 0000  ld   $00
              8e16 0000  ld   $00
              8e17 003f  ld   $3f
              8e18 0000  ld   $00
              8e19 0000  ld   $00
              8e1a 0000  ld   $00
              * 5 times
              8e1d 003f  ld   $3f
              8e1e 0000  ld   $00
              8e1f 0000  ld   $00
              8e20 00fa  ld   $fa
              8e21 0000  ld   $00
              8e22 003f  ld   $3f
              8e23 003f  ld   $3f
              8e24 003f  ld   $3f
              8e25 0000  ld   $00
              8e26 0000  ld   $00
              8e27 003f  ld   $3f
              8e28 0000  ld   $00
              8e29 0000  ld   $00
              8e2a 0000  ld   $00
              8e2b 003f  ld   $3f
              8e2c 0000  ld   $00
              8e2d 0000  ld   $00
              8e2e 0000  ld   $00
              8e2f 003f  ld   $3f
              8e30 003f  ld   $3f
              8e31 0000  ld   $00
              8e32 0000  ld   $00
              8e33 0000  ld   $00
              * 6 times
              8e37 003f  ld   $3f
              8e38 0000  ld   $00
              8e39 003f  ld   $3f
              8e3a 0000  ld   $00
              8e3b 0000  ld   $00
              8e3c 0000  ld   $00
              8e3d 003f  ld   $3f
              8e3e 0000  ld   $00
              8e3f 0000  ld   $00
              8e40 003f  ld   $3f
              8e41 003f  ld   $3f
              8e42 003f  ld   $3f
              8e43 0000  ld   $00
              8e44 0000  ld   $00
              8e45 00fa  ld   $fa
              8e46 0062  ld   $62
              8e47 00a0  ld   $a0
              8e48 0006  ld   $06
              8e49 00d1  ld   $d1
              8e4a 007e  ld   $7e
              8e4b 0000  ld   $00
              8e4c 0000  ld   $00
              8e4d 0000  ld   $00
              8e4e 0000  ld   $00
              8e4f 0062  ld   $62
              8e50 00b6  ld   $b6
              8e51 004a  ld   $4a
              8e52 0000  ld   $00
              8e53 003f  ld   $3f
              8e54 003f  ld   $3f
              8e55 003f  ld   $3f
              8e56 0000  ld   $00
              8e57 0000  ld   $00
              8e58 003f  ld   $3f
              8e59 0000  ld   $00
              8e5a 0000  ld   $00
              8e5b 0000  ld   $00
              8e5c 003f  ld   $3f
              8e5d 0000  ld   $00
              8e5e 0000  ld   $00
              8e5f 0000  ld   $00
              * 5 times
              8e62 003f  ld   $3f
              8e63 0000  ld   $00
              8e64 0000  ld   $00
              8e65 003f  ld   $3f
              8e66 003f  ld   $3f
              8e67 003f  ld   $3f
              8e68 0000  ld   $00
              8e69 0000  ld   $00
              8e6a 003f  ld   $3f
              8e6b 0000  ld   $00
              8e6c 0000  ld   $00
              8e6d 0000  ld   $00
              * 5 times
              8e70 003f  ld   $3f
              8e71 003f  ld   $3f
              8e72 003f  ld   $3f
              * 5 times
              8e75 0000  ld   $00
              8e76 00fa  ld   $fa
              8e77 0000  ld   $00
              8e78 0000  ld   $00
              8e79 003f  ld   $3f
              8e7a 0000  ld   $00
              8e7b 0000  ld   $00
              8e7c 0000  ld   $00
              8e7d 0000  ld   $00
              8e7e 003f  ld   $3f
              8e7f 003f  ld   $3f
              8e80 0000  ld   $00
              8e81 0000  ld   $00
              8e82 0000  ld   $00
              8e83 003f  ld   $3f
              8e84 0000  ld   $00
              8e85 003f  ld   $3f
              8e86 0000  ld   $00
              8e87 0000  ld   $00
              8e88 0000  ld   $00
              * 5 times
              8e8b 003f  ld   $3f
              8e8c 0000  ld   $00
              8e8d 0000  ld   $00
              8e8e 0000  ld   $00
              * 5 times
              8e91 003f  ld   $3f
              8e92 0000  ld   $00
              8e93 0000  ld   $00
              8e94 0000  ld   $00
              8e95 003f  ld   $3f
              8e96 003f  ld   $3f
              8e97 003f  ld   $3f
              * 5 times
              8e9a 0000  ld   $00
              8e9b 00fa  ld   $fa
              8e9c 0063  ld   $63
              8e9d 00b0  ld   $b0
              8e9e 0050  ld   $50
              8e9f 0000  ld   $00
              8ea0 003f  ld   $3f
              8ea1 003f  ld   $3f
              8ea2 003f  ld   $3f
              8ea3 0000  ld   $00
              8ea4 0000  ld   $00
              8ea5 003f  ld   $3f
              8ea6 003f  ld   $3f
              8ea7 0000  ld   $00
              8ea8 0000  ld   $00
              8ea9 003f  ld   $3f
              8eaa 0000  ld   $00
              8eab 003f  ld   $3f
              8eac 0000  ld   $00
              8ead 003f  ld   $3f
              8eae 0000  ld   $00
              8eaf 003f  ld   $3f
              8eb0 0000  ld   $00
              8eb1 003f  ld   $3f
              8eb2 0000  ld   $00
              8eb3 003f  ld   $3f
              8eb4 0000  ld   $00
              8eb5 003f  ld   $3f
              8eb6 0000  ld   $00
              8eb7 003f  ld   $3f
              8eb8 0000  ld   $00
              8eb9 0000  ld   $00
              8eba 003f  ld   $3f
              8ebb 003f  ld   $3f
              8ebc 0000  ld   $00
              8ebd 0000  ld   $00
              8ebe 003f  ld   $3f
              8ebf 003f  ld   $3f
              8ec0 003f  ld   $3f
              8ec1 0000  ld   $00
              8ec2 0000  ld   $00
              8ec3 00fa  ld   $fa
              8ec4 0000  ld   $00
              8ec5 0000  ld   $00
              8ec6 0000  ld   $00
              * 42 times
              8eee 00f9  ld   $f9
              8eef 0064  ld   $64
              8ef0 00b0  ld   $b0
              8ef1 0050  ld   $50
              8ef2 003f  ld   $3f
              8ef3 0000  ld   $00
              8ef4 0000  ld   $00
              8ef5 0000  ld   $00
              8ef6 0000  ld   $00
              8ef7 003f  ld   $3f
              8ef8 0000  ld   $00
              8ef9 003f  ld   $3f
              8efa 0000  ld   $00
              8efb fe00  bra  ac          ;+-----------------------------------+
              8efc fcfd  bra  $8efd       ;|                                   |
              8efd 1418  ld   $18,y       ;| Trampoline for page $8e00 lookups |
              8efe e006  jmp  y,$06       ;|                                   |
              8eff c218  st   [$18]       ;+-----------------------------------+
              8f00 0000  ld   $00
              8f01 003f  ld   $3f
              8f02 0000  ld   $00
              8f03 0000  ld   $00
              8f04 0000  ld   $00
              8f05 003f  ld   $3f
              8f06 003f  ld   $3f
              8f07 0000  ld   $00
              8f08 0000  ld   $00
              8f09 003f  ld   $3f
              8f0a 003f  ld   $3f
              8f0b 0000  ld   $00
              8f0c 0000  ld   $00
              8f0d 003f  ld   $3f
              8f0e 003f  ld   $3f
              8f0f 0000  ld   $00
              8f10 0000  ld   $00
              8f11 003f  ld   $3f
              8f12 003f  ld   $3f
              8f13 0000  ld   $00
              8f14 0000  ld   $00
              8f15 0000  ld   $00
              8f16 003f  ld   $3f
              8f17 0000  ld   $00
              8f18 0000  ld   $00
              8f19 003f  ld   $3f
              8f1a 0000  ld   $00
              8f1b 003f  ld   $3f
              8f1c 0000  ld   $00
              8f1d 0000  ld   $00
              8f1e 0000  ld   $00
              8f1f 0000  ld   $00
              8f20 003f  ld   $3f
              8f21 00f9  ld   $f9
              8f22 0000  ld   $00
              8f23 0000  ld   $00
              8f24 000c  ld   $0c
              8f25 0000  ld   $00
              8f26 0000  ld   $00
              8f27 0000  ld   $00
              8f28 0000  ld   $00
              8f29 000c  ld   $0c
              8f2a 0000  ld   $00
              8f2b 0000  ld   $00
              8f2c 000c  ld   $0c
              8f2d 0000  ld   $00
              8f2e 0000  ld   $00
              8f2f 0000  ld   $00
              8f30 000c  ld   $0c
              8f31 0000  ld   $00
              8f32 0000  ld   $00
              8f33 0000  ld   $00
              8f34 000c  ld   $0c
              8f35 0000  ld   $00
              8f36 0000  ld   $00
              8f37 0000  ld   $00
              8f38 000c  ld   $0c
              8f39 0000  ld   $00
              8f3a 0000  ld   $00
              8f3b 000c  ld   $0c
              8f3c 0000  ld   $00
              8f3d 0000  ld   $00
              8f3e 0000  ld   $00
              8f3f 000c  ld   $0c
              8f40 000c  ld   $0c
              8f41 000c  ld   $0c
              8f42 0000  ld   $00
              8f43 000c  ld   $0c
              8f44 0000  ld   $00
              8f45 0000  ld   $00
              8f46 00fa  ld   $fa
              8f47 0065  ld   $65
              8f48 00a0  ld   $a0
              8f49 0006  ld   $06
              8f4a 00d5  ld   $d5
              8f4b 0063  ld   $63
              8f4c 0000  ld   $00
              8f4d 0000  ld   $00
              8f4e 0000  ld   $00
              8f4f 0000  ld   $00
              8f50 0065  ld   $65
              8f51 00b6  ld   $b6
              8f52 004a  ld   $4a
              8f53 0000  ld   $00
              8f54 0000  ld   $00
              8f55 000c  ld   $0c
              8f56 0000  ld   $00
              8f57 0000  ld   $00
              8f58 000c  ld   $0c
              8f59 000c  ld   $0c
              8f5a 0000  ld   $00
              8f5b 0000  ld   $00
              8f5c 000c  ld   $0c
              8f5d 0000  ld   $00
              8f5e 0000  ld   $00
              8f5f 0000  ld   $00
              8f60 0000  ld   $00
              8f61 000c  ld   $0c
              8f62 0000  ld   $00
              8f63 0000  ld   $00
              8f64 000c  ld   $0c
              8f65 000c  ld   $0c
              8f66 0000  ld   $00
              8f67 0000  ld   $00
              8f68 0000  ld   $00
              8f69 000c  ld   $0c
              8f6a 0000  ld   $00
              8f6b 0000  ld   $00
              8f6c 0000  ld   $00
              8f6d 000c  ld   $0c
              8f6e 000c  ld   $0c
              8f6f 0000  ld   $00
              8f70 000c  ld   $0c
              8f71 0000  ld   $00
              8f72 000c  ld   $0c
              8f73 0000  ld   $00
              8f74 000c  ld   $0c
              8f75 000c  ld   $0c
              8f76 0000  ld   $00
              8f77 00fa  ld   $fa
              8f78 0000  ld   $00
              8f79 0000  ld   $00
              8f7a 0000  ld   $00
              * 8 times
              8f80 000c  ld   $0c
              8f81 0000  ld   $00
              8f82 0000  ld   $00
              8f83 0000  ld   $00
              * 6 times
              8f87 000c  ld   $0c
              8f88 0000  ld   $00
              8f89 0000  ld   $00
              8f8a 000c  ld   $0c
              8f8b 0000  ld   $00
              8f8c 000c  ld   $0c
              8f8d 0000  ld   $00
              8f8e 0000  ld   $00
              8f8f 0000  ld   $00
              8f90 000c  ld   $0c
              8f91 000c  ld   $0c
              8f92 000c  ld   $0c
              8f93 0000  ld   $00
              8f94 0000  ld   $00
              8f95 0000  ld   $00
              8f96 000c  ld   $0c
              8f97 000c  ld   $0c
              8f98 000c  ld   $0c
              8f99 000c  ld   $0c
              8f9a 0000  ld   $00
              8f9b 000c  ld   $0c
              8f9c 00fa  ld   $fa
              8f9d 0066  ld   $66
              8f9e 00c3  ld   $c3
              8f9f 003d  ld   $3d
              8fa0 0000  ld   $00
              8fa1 0000  ld   $00
              8fa2 003f  ld   $3f
              8fa3 0000  ld   $00
              8fa4 0000  ld   $00
              8fa5 0000  ld   $00
              8fa6 0000  ld   $00
              8fa7 003f  ld   $3f
              8fa8 0000  ld   $00
              8fa9 0000  ld   $00
              8faa 003f  ld   $3f
              8fab 0000  ld   $00
              8fac 003f  ld   $3f
              8fad 0000  ld   $00
              8fae 0000  ld   $00
              8faf 003f  ld   $3f
              8fb0 0000  ld   $00
              8fb1 0000  ld   $00
              8fb2 0000  ld   $00
              8fb3 0000  ld   $00
              8fb4 003f  ld   $3f
              8fb5 0000  ld   $00
              8fb6 0000  ld   $00
              8fb7 0000  ld   $00
              * 7 times
              8fbc 003f  ld   $3f
              8fbd 003f  ld   $3f
              8fbe 0000  ld   $00
              8fbf 0000  ld   $00
              8fc0 003f  ld   $3f
              8fc1 0000  ld   $00
              8fc2 0000  ld   $00
              8fc3 0000  ld   $00
              8fc4 003f  ld   $3f
              8fc5 0000  ld   $00
              8fc6 0000  ld   $00
              8fc7 003f  ld   $3f
              8fc8 0000  ld   $00
              8fc9 0000  ld   $00
              8fca 0000  ld   $00
              8fcb 003f  ld   $3f
              8fcc 0000  ld   $00
              8fcd 0000  ld   $00
              8fce 003f  ld   $3f
              8fcf 0000  ld   $00
              8fd0 0000  ld   $00
              8fd1 0000  ld   $00
              8fd2 003f  ld   $3f
              8fd3 0000  ld   $00
              8fd4 0000  ld   $00
              8fd5 0000  ld   $00
              * 9 times
              8fdc 00f6  ld   $f6
              8fdd 0067  ld   $67
              8fde 00c3  ld   $c3
              8fdf 003d  ld   $3d
              8fe0 0000  ld   $00
              8fe1 0000  ld   $00
              8fe2 0000  ld   $00
              8fe3 0000  ld   $00
              8fe4 003f  ld   $3f
              8fe5 0000  ld   $00
              8fe6 0000  ld   $00
              8fe7 0000  ld   $00
              8fe8 003f  ld   $3f
              8fe9 0000  ld   $00
              8fea 0000  ld   $00
              8feb 003f  ld   $3f
              8fec 0000  ld   $00
              8fed 0000  ld   $00
              8fee 0000  ld   $00
              8fef 003f  ld   $3f
              8ff0 0000  ld   $00
              8ff1 0000  ld   $00
              8ff2 0000  ld   $00
              * 6 times
              8ff6 003f  ld   $3f
              8ff7 0000  ld   $00
              8ff8 0000  ld   $00
              8ff9 003f  ld   $3f
              8ffa 003f  ld   $3f
              8ffb fe00  bra  ac          ;+-----------------------------------+
              8ffc fcfd  bra  $8ffd       ;|                                   |
              8ffd 1418  ld   $18,y       ;| Trampoline for page $8f00 lookups |
              8ffe e006  jmp  y,$06       ;|                                   |
              8fff c218  st   [$18]       ;+-----------------------------------+
              9000 0000  ld   $00
              9001 0000  ld   $00
              9002 0000  ld   $00
              * 7 times
              9007 003f  ld   $3f
              9008 0000  ld   $00
              9009 0000  ld   $00
              900a 0000  ld   $00
              900b 0000  ld   $00
              900c 003f  ld   $3f
              900d 0000  ld   $00
              900e 0000  ld   $00
              900f 0000  ld   $00
              9010 0000  ld   $00
              9011 003f  ld   $3f
              9012 0000  ld   $00
              9013 0000  ld   $00
              9014 003f  ld   $3f
              9015 0000  ld   $00
              9016 0000  ld   $00
              9017 0000  ld   $00
              9018 0000  ld   $00
              9019 003f  ld   $3f
              901a 0000  ld   $00
              901b 0000  ld   $00
              901c 0000  ld   $00
              * 7 times
              9021 00f6  ld   $f6
              9022 0068  ld   $68
              9023 00c3  ld   $c3
              9024 003d  ld   $3d
              9025 0000  ld   $00
              9026 0000  ld   $00
              9027 0000  ld   $00
              * 60 times
              9061 00f6  ld   $f6
              9062 0069  ld   $69
              9063 00c3  ld   $c3
              9064 003d  ld   $3d
              9065 0000  ld   $00
              9066 0000  ld   $00
              9067 0000  ld   $00
              * 60 times
              90a1 00f6  ld   $f6
              90a2 006a  ld   $6a
              90a3 00c3  ld   $c3
              90a4 003d  ld   $3d
              90a5 0000  ld   $00
              90a6 0000  ld   $00
              90a7 0000  ld   $00
              * 6 times
              90ab 003f  ld   $3f
              90ac 0000  ld   $00
              90ad 0000  ld   $00
              90ae 0000  ld   $00
              * 5 times
              90b1 003f  ld   $3f
              90b2 003f  ld   $3f
              90b3 0000  ld   $00
              90b4 0000  ld   $00
              90b5 0000  ld   $00
              * 5 times
              90b8 003f  ld   $3f
              90b9 003f  ld   $3f
              90ba 0000  ld   $00
              90bb 0000  ld   $00
              90bc 0000  ld   $00
              90bd 003f  ld   $3f
              90be 003f  ld   $3f
              90bf 003f  ld   $3f
              90c0 0000  ld   $00
              90c1 0000  ld   $00
              90c2 0000  ld   $00
              90c3 0000  ld   $00
              90c4 003f  ld   $3f
              90c5 0000  ld   $00
              90c6 0000  ld   $00
              90c7 0000  ld   $00
              * 6 times
              90cb 003f  ld   $3f
              90cc 0000  ld   $00
              90cd 0000  ld   $00
              90ce 0000  ld   $00
              90cf 0000  ld   $00
              90d0 003f  ld   $3f
              90d1 0000  ld   $00
              90d2 0000  ld   $00
              90d3 0000  ld   $00
              * 16 times
              90e1 00f6  ld   $f6
              90e2 006b  ld   $6b
              90e3 00c3  ld   $c3
              90e4 003d  ld   $3d
              90e5 0000  ld   $00
              90e6 0000  ld   $00
              90e7 0000  ld   $00
              90e8 0000  ld   $00
              90e9 003f  ld   $3f
              90ea 003f  ld   $3f
              90eb 0000  ld   $00
              90ec 0000  ld   $00
              90ed 0000  ld   $00
              90ee 003f  ld   $3f
              90ef 003f  ld   $3f
              90f0 003f  ld   $3f
              90f1 0000  ld   $00
              90f2 0000  ld   $00
              90f3 003f  ld   $3f
              90f4 003f  ld   $3f
              90f5 003f  ld   $3f
              90f6 003f  ld   $3f
              90f7 0000  ld   $00
              90f8 003f  ld   $3f
              90f9 003f  ld   $3f
              90fa 0000  ld   $00
              90fb fe00  bra  ac          ;+-----------------------------------+
              90fc fcfd  bra  $90fd       ;|                                   |
              90fd 1418  ld   $18,y       ;| Trampoline for page $9000 lookups |
              90fe e006  jmp  y,$06       ;|                                   |
              90ff c218  st   [$18]       ;+-----------------------------------+
              9100 003f  ld   $3f
              9101 003f  ld   $3f
              9102 0000  ld   $00
              9103 003f  ld   $3f
              9104 003f  ld   $3f
              9105 003f  ld   $3f
              * 5 times
              9108 0000  ld   $00
              9109 0000  ld   $00
              910a 003f  ld   $3f
              910b 0000  ld   $00
              910c 003f  ld   $3f
              910d 003f  ld   $3f
              910e 0000  ld   $00
              910f 003f  ld   $3f
              9110 0000  ld   $00
              9111 0000  ld   $00
              9112 0000  ld   $00
              * 6 times
              9116 003f  ld   $3f
              9117 0000  ld   $00
              9118 0000  ld   $00
              9119 0000  ld   $00
              * 15 times
              9126 00f6  ld   $f6
              9127 006c  ld   $6c
              9128 00c3  ld   $c3
              9129 003d  ld   $3d
              912a 0000  ld   $00
              912b 0000  ld   $00
              912c 0000  ld   $00
              * 6 times
              9130 003f  ld   $3f
              9131 0000  ld   $00
              9132 0000  ld   $00
              9133 0000  ld   $00
              * 5 times
              9136 003f  ld   $3f
              9137 003f  ld   $3f
              9138 0000  ld   $00
              9139 0000  ld   $00
              913a 0000  ld   $00
              * 5 times
              913d 003f  ld   $3f
              913e 003f  ld   $3f
              913f 0000  ld   $00
              9140 0000  ld   $00
              9141 0000  ld   $00
              9142 003f  ld   $3f
              9143 003f  ld   $3f
              9144 003f  ld   $3f
              9145 0000  ld   $00
              9146 0000  ld   $00
              9147 0000  ld   $00
              9148 003f  ld   $3f
              9149 0000  ld   $00
              914a 0000  ld   $00
              914b 0000  ld   $00
              * 6 times
              914f 003f  ld   $3f
              9150 0000  ld   $00
              9151 0000  ld   $00
              9152 0000  ld   $00
              9153 0000  ld   $00
              9154 003f  ld   $3f
              9155 0000  ld   $00
              9156 003f  ld   $3f
              9157 0000  ld   $00
              9158 0000  ld   $00
              9159 0000  ld   $00
              * 15 times
              9166 00f6  ld   $f6
              9167 006d  ld   $6d
              9168 00a0  ld   $a0
              9169 0006  ld   $06
              916a 00b0  ld   $b0
              916b 0064  ld   $64
              916c 0000  ld   $00
              916d 0000  ld   $00
              916e 0000  ld   $00
              916f 0000  ld   $00
              9170 006d  ld   $6d
              9171 00ae  ld   $ae
              9172 0014  ld   $14
              9173 0000  ld   $00
              9174 0003  ld   $03
              9175 0000  ld   $00
              9176 0003  ld   $03
              9177 0000  ld   $00
              9178 0003  ld   $03
              9179 0000  ld   $00
              917a 0003  ld   $03
              917b 0000  ld   $00
              917c 0003  ld   $03
              917d 0000  ld   $00
              917e 0003  ld   $03
              917f 0000  ld   $00
              9180 0003  ld   $03
              9181 0000  ld   $00
              9182 0003  ld   $03
              9183 0000  ld   $00
              9184 0003  ld   $03
              9185 0000  ld   $00
              9186 0003  ld   $03
              9187 006d  ld   $6d
              9188 00c3  ld   $c3
              9189 003d  ld   $3d
              918a 0000  ld   $00
              918b 0000  ld   $00
              918c 0000  ld   $00
              918d 0000  ld   $00
              918e 003f  ld   $3f
              918f 003f  ld   $3f
              9190 0000  ld   $00
              9191 0000  ld   $00
              9192 0000  ld   $00
              9193 003f  ld   $3f
              9194 003f  ld   $3f
              9195 003f  ld   $3f
              9196 0000  ld   $00
              9197 0000  ld   $00
              9198 003f  ld   $3f
              9199 003f  ld   $3f
              919a 003f  ld   $3f
              919b 003f  ld   $3f
              919c 0000  ld   $00
              919d 003f  ld   $3f
              919e 003f  ld   $3f
              919f 0000  ld   $00
              91a0 003f  ld   $3f
              91a1 003f  ld   $3f
              91a2 0000  ld   $00
              91a3 003f  ld   $3f
              91a4 003f  ld   $3f
              91a5 003f  ld   $3f
              * 5 times
              91a8 0000  ld   $00
              91a9 0000  ld   $00
              91aa 0000  ld   $00
              91ab 003f  ld   $3f
              91ac 0000  ld   $00
              91ad 0000  ld   $00
              91ae 0000  ld   $00
              91af 0000  ld   $00
              91b0 003f  ld   $3f
              91b1 0000  ld   $00
              91b2 003f  ld   $3f
              91b3 003f  ld   $3f
              91b4 0000  ld   $00
              91b5 003f  ld   $3f
              91b6 0000  ld   $00
              91b7 003f  ld   $3f
              91b8 0000  ld   $00
              91b9 0000  ld   $00
              91ba 0000  ld   $00
              * 14 times
              91c6 00f6  ld   $f6
              91c7 006e  ld   $6e
              91c8 00a0  ld   $a0
              91c9 0006  ld   $06
              91ca 0000  ld   $00
              91cb 0000  ld   $00
              91cc 0000  ld   $00
              * 6 times
              91d0 006e  ld   $6e
              91d1 00ae  ld   $ae
              91d2 0014  ld   $14
              91d3 0000  ld   $00
              91d4 0003  ld   $03
              91d5 0000  ld   $00
              91d6 0003  ld   $03
              91d7 0000  ld   $00
              91d8 0003  ld   $03
              91d9 0000  ld   $00
              91da 0003  ld   $03
              91db 0000  ld   $00
              91dc 0003  ld   $03
              91dd 0000  ld   $00
              91de 0003  ld   $03
              91df 0000  ld   $00
              91e0 0003  ld   $03
              91e1 0000  ld   $00
              91e2 0003  ld   $03
              91e3 0000  ld   $00
              91e4 0003  ld   $03
              91e5 0000  ld   $00
              91e6 0003  ld   $03
              91e7 006e  ld   $6e
              91e8 00c3  ld   $c3
              91e9 003d  ld   $3d
              91ea 0000  ld   $00
              91eb 003f  ld   $3f
              91ec 0000  ld   $00
              91ed 0000  ld   $00
              91ee 0000  ld   $00
              91ef 0000  ld   $00
              91f0 003f  ld   $3f
              91f1 0000  ld   $00
              91f2 0000  ld   $00
              91f3 0000  ld   $00
              * 5 times
              91f6 003f  ld   $3f
              91f7 003f  ld   $3f
              91f8 0000  ld   $00
              91f9 0000  ld   $00
              91fa 0000  ld   $00
              91fb fe00  bra  ac          ;+-----------------------------------+
              91fc fcfd  bra  $91fd       ;|                                   |
              91fd 1418  ld   $18,y       ;| Trampoline for page $9100 lookups |
              91fe e006  jmp  y,$06       ;|                                   |
              91ff c218  st   [$18]       ;+-----------------------------------+
              9200 0000  ld   $00
              9201 0000  ld   $00
              9202 003f  ld   $3f
              9203 003f  ld   $3f
              9204 0000  ld   $00
              9205 0000  ld   $00
              9206 0000  ld   $00
              9207 003f  ld   $3f
              9208 003f  ld   $3f
              9209 003f  ld   $3f
              920a 003f  ld   $3f
              920b 0000  ld   $00
              920c 0000  ld   $00
              920d 003f  ld   $3f
              920e 003f  ld   $3f
              920f 0000  ld   $00
              9210 003f  ld   $3f
              9211 0000  ld   $00
              9212 0000  ld   $00
              9213 0000  ld   $00
              9214 003f  ld   $3f
              9215 0000  ld   $00
              9216 003f  ld   $3f
              9217 0000  ld   $00
              9218 0000  ld   $00
              9219 003f  ld   $3f
              921a 0000  ld   $00
              921b 0000  ld   $00
              921c 0000  ld   $00
              * 17 times
              922b 00f6  ld   $f6
              922c 006f  ld   $6f
              922d 00a4  ld   $a4
              922e 001e  ld   $1e
              922f 0000  ld   $00
              9230 000c  ld   $0c
              9231 0018  ld   $18
              9232 0024  ld   $24
              9233 0030  ld   $30
              9234 003c  ld   $3c
              9235 0048  ld   $48
              9236 0054  ld   $54
              9237 0060  ld   $60
              9238 006c  ld   $6c
              9239 0000  ld   $00
              923a 0002  ld   $02
              923b 0000  ld   $00
              923c 0002  ld   $02
              923d 0000  ld   $00
              923e 0002  ld   $02
              923f 0000  ld   $00
              9240 0002  ld   $02
              9241 0000  ld   $00
              9242 0002  ld   $02
              9243 0000  ld   $00
              9244 0002  ld   $02
              9245 0000  ld   $00
              9246 0002  ld   $02
              9247 0000  ld   $00
              9248 0002  ld   $02
              9249 0000  ld   $00
              924a 0002  ld   $02
              924b 0000  ld   $00
              924c 0002  ld   $02
              924d 006f  ld   $6f
              924e 00c3  ld   $c3
              924f 003d  ld   $3d
              9250 0000  ld   $00
              9251 0000  ld   $00
              9252 003f  ld   $3f
              9253 0000  ld   $00
              9254 0000  ld   $00
              9255 0000  ld   $00
              * 6 times
              9259 003f  ld   $3f
              925a 0000  ld   $00
              925b 0000  ld   $00
              925c 0000  ld   $00
              925d 0000  ld   $00
              925e 003f  ld   $3f
              925f 003f  ld   $3f
              9260 003f  ld   $3f
              9261 003f  ld   $3f
              9262 0000  ld   $00
              9263 003f  ld   $3f
              9264 003f  ld   $3f
              9265 0000  ld   $00
              9266 003f  ld   $3f
              9267 003f  ld   $3f
              9268 003f  ld   $3f
              * 9 times
              926f 0000  ld   $00
              9270 003f  ld   $3f
              9271 003f  ld   $3f
              9272 003f  ld   $3f
              * 5 times
              9275 0000  ld   $00
              9276 003f  ld   $3f
              9277 0000  ld   $00
              9278 0000  ld   $00
              9279 0000  ld   $00
              * 6 times
              927d 003f  ld   $3f
              927e 0000  ld   $00
              927f 0000  ld   $00
              9280 0000  ld   $00
              * 14 times
              928c 00f6  ld   $f6
              928d 0070  ld   $70
              928e 00a4  ld   $a4
              928f 001e  ld   $1e
              9290 00a2  ld   $a2
              9291 0071  ld   $71
              9292 00ae  ld   $ae
              9293 0070  ld   $70
              9294 00ae  ld   $ae
              9295 006f  ld   $6f
              9296 00ae  ld   $ae
              9297 006e  ld   $6e
              9298 00ae  ld   $ae
              9299 006d  ld   $6d
              929a 0000  ld   $00
              929b 0002  ld   $02
              929c 0000  ld   $00
              929d 0002  ld   $02
              929e 0000  ld   $00
              929f 0002  ld   $02
              92a0 0000  ld   $00
              92a1 0002  ld   $02
              92a2 0000  ld   $00
              92a3 0002  ld   $02
              92a4 0000  ld   $00
              92a5 0002  ld   $02
              92a6 0000  ld   $00
              92a7 0002  ld   $02
              92a8 0000  ld   $00
              92a9 0002  ld   $02
              92aa 0000  ld   $00
              92ab 0002  ld   $02
              92ac 0000  ld   $00
              92ad 0002  ld   $02
              92ae 0070  ld   $70
              92af 00c3  ld   $c3
              92b0 003d  ld   $3d
              92b1 0000  ld   $00
              92b2 003f  ld   $3f
              92b3 0000  ld   $00
              92b4 0000  ld   $00
              92b5 0000  ld   $00
              92b6 0000  ld   $00
              92b7 003f  ld   $3f
              92b8 0000  ld   $00
              92b9 0000  ld   $00
              92ba 003f  ld   $3f
              92bb 0000  ld   $00
              92bc 0000  ld   $00
              92bd 003f  ld   $3f
              92be 003f  ld   $3f
              92bf 0000  ld   $00
              92c0 003f  ld   $3f
              92c1 0000  ld   $00
              92c2 0000  ld   $00
              92c3 0000  ld   $00
              92c4 003f  ld   $3f
              92c5 003f  ld   $3f
              92c6 003f  ld   $3f
              92c7 0000  ld   $00
              92c8 0000  ld   $00
              92c9 003f  ld   $3f
              92ca 003f  ld   $3f
              92cb 003f  ld   $3f
              92cc 003f  ld   $3f
              92cd 0000  ld   $00
              92ce 0000  ld   $00
              92cf 003f  ld   $3f
              92d0 003f  ld   $3f
              92d1 003f  ld   $3f
              92d2 0000  ld   $00
              92d3 0000  ld   $00
              92d4 0000  ld   $00
              92d5 0000  ld   $00
              92d6 003f  ld   $3f
              92d7 0000  ld   $00
              92d8 0000  ld   $00
              92d9 0000  ld   $00
              * 6 times
              92dd 003f  ld   $3f
              92de 0000  ld   $00
              92df 0000  ld   $00
              92e0 0000  ld   $00
              * 15 times
              92ed 00f6  ld   $f6
              92ee 0071  ld   $71
              92ef 00a2  ld   $a2
              92f0 0014  ld   $14
              92f1 0000  ld   $00
              92f2 0001  ld   $01
              92f3 0000  ld   $00
              92f4 0001  ld   $01
              92f5 0000  ld   $00
              92f6 0001  ld   $01
              92f7 0000  ld   $00
              92f8 0001  ld   $01
              92f9 0000  ld   $00
              92fa 0001  ld   $01
              92fb fe00  bra  ac          ;+-----------------------------------+
              92fc fcfd  bra  $92fd       ;|                                   |
              92fd 1418  ld   $18,y       ;| Trampoline for page $9200 lookups |
              92fe e006  jmp  y,$06       ;|                                   |
              92ff c218  st   [$18]       ;+-----------------------------------+
              9300 0000  ld   $00
              9301 0001  ld   $01
              9302 0000  ld   $00
              9303 0001  ld   $01
              9304 0000  ld   $00
              9305 0001  ld   $01
              9306 0000  ld   $00
              9307 0001  ld   $01
              9308 0080  ld   $80
              9309 0001  ld   $01
              930a 0071  ld   $71
              930b 00b7  ld   $b7
              930c 0049  ld   $49
              930d 0000  ld   $00
              930e 0000  ld   $00
              930f 0000  ld   $00
              * 14 times
              931b 003f  ld   $3f
              931c 0000  ld   $00
              931d 0000  ld   $00
              931e 0000  ld   $00
              931f 003f  ld   $3f
              9320 0000  ld   $00
              9321 0000  ld   $00
              9322 003f  ld   $3f
              9323 0000  ld   $00
              9324 0000  ld   $00
              9325 003f  ld   $3f
              9326 0000  ld   $00
              9327 003f  ld   $3f
              9328 003f  ld   $3f
              9329 003f  ld   $3f
              * 7 times
              932e 0000  ld   $00
              932f 003f  ld   $3f
              9330 003f  ld   $3f
              9331 003f  ld   $3f
              * 8 times
              9337 0000  ld   $00
              9338 003f  ld   $3f
              9339 003f  ld   $3f
              933a 003f  ld   $3f
              * 5 times
              933d 0000  ld   $00
              933e 0000  ld   $00
              933f 003f  ld   $3f
              9340 0000  ld   $00
              9341 0000  ld   $00
              9342 0000  ld   $00
              9343 0000  ld   $00
              9344 003f  ld   $3f
              9345 0000  ld   $00
              9346 0000  ld   $00
              9347 0000  ld   $00
              * 16 times
              9355 00f6  ld   $f6
              9356 0072  ld   $72
              9357 00a4  ld   $a4
              9358 005c  ld   $5c
              9359 0017  ld   $17
              935a 0017  ld   $17
              935b 0017  ld   $17
              935c 0000  ld   $00
              935d 0000  ld   $00
              935e 0000  ld   $00
              935f 0017  ld   $17
              9360 0000  ld   $00
              9361 0000  ld   $00
              9362 0000  ld   $00
              * 5 times
              9365 0017  ld   $17
              9366 0017  ld   $17
              9367 0017  ld   $17
              9368 0000  ld   $00
              9369 0000  ld   $00
              936a 0000  ld   $00
              * 5 times
              936d 0017  ld   $17
              936e 0000  ld   $00
              936f 0000  ld   $00
              9370 0000  ld   $00
              9371 0017  ld   $17
              9372 0017  ld   $17
              9373 0017  ld   $17
              9374 0000  ld   $00
              9375 0000  ld   $00
              9376 0000  ld   $00
              9377 00fb  ld   $fb
              9378 003f  ld   $3f
              9379 0000  ld   $00
              937a 0000  ld   $00
              937b 0000  ld   $00
              * 5 times
              937e 003f  ld   $3f
              937f 003f  ld   $3f
              9380 003f  ld   $3f
              9381 0000  ld   $00
              9382 0000  ld   $00
              9383 0000  ld   $00
              9384 003f  ld   $3f
              9385 003f  ld   $3f
              9386 003f  ld   $3f
              9387 003f  ld   $3f
              9388 0000  ld   $00
              9389 0000  ld   $00
              938a 0000  ld   $00
              938b 0000  ld   $00
              938c 003f  ld   $3f
              938d 003f  ld   $3f
              938e 0000  ld   $00
              938f 0000  ld   $00
              9390 003f  ld   $3f
              9391 003f  ld   $3f
              9392 003f  ld   $3f
              9393 003f  ld   $3f
              9394 0000  ld   $00
              9395 0000  ld   $00
              9396 003f  ld   $3f
              9397 003f  ld   $3f
              9398 0000  ld   $00
              9399 0000  ld   $00
              939a 0000  ld   $00
              * 5 times
              939d 003f  ld   $3f
              939e 003f  ld   $3f
              939f 0000  ld   $00
              93a0 0000  ld   $00
              93a1 0000  ld   $00
              93a2 003f  ld   $3f
              93a3 003f  ld   $3f
              93a4 0000  ld   $00
              93a5 0000  ld   $00
              93a6 0000  ld   $00
              * 16 times
              93b4 00f6  ld   $f6
              93b5 0073  ld   $73
              93b6 00a4  ld   $a4
              93b7 005c  ld   $5c
              93b8 0017  ld   $17
              93b9 0017  ld   $17
              93ba 0017  ld   $17
              93bb 0000  ld   $00
              93bc 0000  ld   $00
              93bd 0000  ld   $00
              * 5 times
              93c0 0017  ld   $17
              93c1 0000  ld   $00
              93c2 0000  ld   $00
              93c3 0000  ld   $00
              93c4 0000  ld   $00
              93c5 0017  ld   $17
              93c6 0017  ld   $17
              93c7 0000  ld   $00
              93c8 0000  ld   $00
              93c9 0000  ld   $00
              * 5 times
              93cc 0017  ld   $17
              93cd 0000  ld   $00
              93ce 0000  ld   $00
              93cf 0000  ld   $00
              93d0 0017  ld   $17
              93d1 0017  ld   $17
              93d2 0017  ld   $17
              93d3 0000  ld   $00
              93d4 0000  ld   $00
              93d5 0000  ld   $00
              93d6 00fb  ld   $fb
              93d7 0000  ld   $00
              93d8 0000  ld   $00
              93d9 0000  ld   $00
              93da 003f  ld   $3f
              93db 003f  ld   $3f
              93dc 003f  ld   $3f
              93dd 0000  ld   $00
              93de 003f  ld   $3f
              93df 003f  ld   $3f
              93e0 003f  ld   $3f
              * 13 times
              93eb 0000  ld   $00
              93ec 0000  ld   $00
              93ed 003f  ld   $3f
              93ee 003f  ld   $3f
              93ef 003f  ld   $3f
              * 8 times
              93f5 0000  ld   $00
              93f6 0000  ld   $00
              93f7 003f  ld   $3f
              93f8 003f  ld   $3f
              93f9 003f  ld   $3f
              93fa 003f  ld   $3f
              93fb fe00  bra  ac          ;+-----------------------------------+
              93fc fcfd  bra  $93fd       ;|                                   |
              93fd 1418  ld   $18,y       ;| Trampoline for page $9300 lookups |
              93fe e006  jmp  y,$06       ;|                                   |
              93ff c218  st   [$18]       ;+-----------------------------------+
              9400 0000  ld   $00
              9401 003f  ld   $3f
              9402 003f  ld   $3f
              9403 0000  ld   $00
              9404 0000  ld   $00
              9405 0000  ld   $00
              * 5 times
              9408 003f  ld   $3f
              9409 003f  ld   $3f
              940a 0000  ld   $00
              940b 0000  ld   $00
              940c 0000  ld   $00
              * 14 times
              9418 00f6  ld   $f6
              9419 0074  ld   $74
              941a 00a0  ld   $a0
              941b 0060  ld   $60
              941c 0028  ld   $28
              941d 0026  ld   $26
              941e 0024  ld   $24
              941f 0022  ld   $22
              9420 0000  ld   $00
              9421 0017  ld   $17
              9422 0000  ld   $00
              9423 0000  ld   $00
              9424 0000  ld   $00
              9425 0000  ld   $00
              9426 0017  ld   $17
              9427 0017  ld   $17
              9428 0000  ld   $00
              9429 0000  ld   $00
              942a 0000  ld   $00
              * 5 times
              942d 0017  ld   $17
              942e 0000  ld   $00
              942f 0000  ld   $00
              9430 0000  ld   $00
              * 5 times
              9433 0017  ld   $17
              9434 0000  ld   $00
              9435 0000  ld   $00
              9436 0000  ld   $00
              9437 0000  ld   $00
              9438 0017  ld   $17
              9439 0017  ld   $17
              943a 0017  ld   $17
              943b 0000  ld   $00
              943c 0000  ld   $00
              943d 0000  ld   $00
              943e 00fb  ld   $fb
              943f 003f  ld   $3f
              9440 0000  ld   $00
              9441 0000  ld   $00
              9442 0000  ld   $00
              * 5 times
              9445 003f  ld   $3f
              9446 003f  ld   $3f
              9447 003f  ld   $3f
              9448 0000  ld   $00
              9449 0000  ld   $00
              944a 0000  ld   $00
              944b 003f  ld   $3f
              944c 003f  ld   $3f
              944d 003f  ld   $3f
              944e 003f  ld   $3f
              944f 0000  ld   $00
              9450 0000  ld   $00
              9451 0000  ld   $00
              9452 0000  ld   $00
              9453 003f  ld   $3f
              9454 003f  ld   $3f
              9455 0000  ld   $00
              9456 0000  ld   $00
              9457 003f  ld   $3f
              9458 003f  ld   $3f
              9459 003f  ld   $3f
              945a 003f  ld   $3f
              945b 0000  ld   $00
              945c 0000  ld   $00
              945d 003f  ld   $3f
              945e 0000  ld   $00
              945f 0000  ld   $00
              9460 0000  ld   $00
              * 5 times
              9463 003f  ld   $3f
              9464 003f  ld   $3f
              9465 0000  ld   $00
              9466 0000  ld   $00
              9467 0000  ld   $00
              * 6 times
              946b 003f  ld   $3f
              946c 003f  ld   $3f
              946d 0000  ld   $00
              946e 0000  ld   $00
              946f 0000  ld   $00
              * 14 times
              947b 00f6  ld   $f6
              947c 0075  ld   $75
              947d 00a1  ld   $a1
              947e 005f  ld   $5f
              947f 001e  ld   $1e
              9480 0014  ld   $14
              9481 000a  ld   $0a
              9482 0017  ld   $17
              9483 0017  ld   $17
              9484 0017  ld   $17
              9485 0000  ld   $00
              9486 0000  ld   $00
              9487 0000  ld   $00
              9488 0017  ld   $17
              9489 0000  ld   $00
              948a 0017  ld   $17
              948b 0000  ld   $00
              948c 0000  ld   $00
              948d 0000  ld   $00
              948e 0017  ld   $17
              948f 0000  ld   $00
              9490 0017  ld   $17
              9491 0000  ld   $00
              9492 0000  ld   $00
              9493 0000  ld   $00
              9494 0017  ld   $17
              9495 0000  ld   $00
              9496 0017  ld   $17
              9497 0000  ld   $00
              9498 0000  ld   $00
              9499 0000  ld   $00
              949a 0017  ld   $17
              949b 0017  ld   $17
              949c 0017  ld   $17
              949d 0000  ld   $00
              949e 0000  ld   $00
              949f 0000  ld   $00
              94a0 00fb  ld   $fb
              94a1 0000  ld   $00
              94a2 0000  ld   $00
              94a3 0000  ld   $00
              94a4 003f  ld   $3f
              94a5 003f  ld   $3f
              94a6 003f  ld   $3f
              94a7 0000  ld   $00
              94a8 003f  ld   $3f
              94a9 003f  ld   $3f
              94aa 003f  ld   $3f
              * 13 times
              94b5 0000  ld   $00
              94b6 0000  ld   $00
              94b7 003f  ld   $3f
              94b8 003f  ld   $3f
              94b9 003f  ld   $3f
              * 8 times
              94bf 0000  ld   $00
              94c0 0000  ld   $00
              94c1 0000  ld   $00
              94c2 003f  ld   $3f
              94c3 003f  ld   $3f
              94c4 003f  ld   $3f
              94c5 0000  ld   $00
              94c6 0000  ld   $00
              94c7 003f  ld   $3f
              94c8 003f  ld   $3f
              94c9 0000  ld   $00
              94ca 0000  ld   $00
              94cb 003f  ld   $3f
              94cc 003f  ld   $3f
              94cd 0000  ld   $00
              94ce 0000  ld   $00
              94cf 0000  ld   $00
              * 16 times
              94dd 00f6  ld   $f6
              94de 0076  ld   $76
              94df 00a1  ld   $a1
              94e0 005f  ld   $5f
              94e1 0003  ld   $03
              94e2 0003  ld   $03
              94e3 0000  ld   $00
              94e4 0000  ld   $00
              94e5 0000  ld   $00
              94e6 0000  ld   $00
              94e7 00ff  ld   $ff
              94e8 0003  ld   $03
              94e9 0003  ld   $03
              94ea 0000  ld   $00
              94eb 0003  ld   $03
              94ec 0003  ld   $03
              94ed 0000  ld   $00
              94ee 00ff  ld   $ff
              94ef 0000  ld   $00
              94f0 0003  ld   $03
              94f1 0000  ld   $00
              94f2 0003  ld   $03
              94f3 0003  ld   $03
              94f4 0000  ld   $00
              94f5 00ff  ld   $ff
              94f6 0000  ld   $00
              94f7 0000  ld   $00
              94f8 0000  ld   $00
              94f9 000c  ld   $0c
              94fa 0000  ld   $00
              94fb fe00  bra  ac          ;+-----------------------------------+
              94fc fcfd  bra  $94fd       ;|                                   |
              94fd 1418  ld   $18,y       ;| Trampoline for page $9400 lookups |
              94fe e006  jmp  y,$06       ;|                                   |
              94ff c218  st   [$18]       ;+-----------------------------------+
              9500 0000  ld   $00
              9501 0000  ld   $00
              9502 0000  ld   $00
              * 6 times
              9506 000c  ld   $0c
              9507 0000  ld   $00
              9508 000c  ld   $0c
              9509 0000  ld   $00
              950a 000c  ld   $0c
              950b 0000  ld   $00
              950c 0000  ld   $00
              950d 0000  ld   $00
              * 6 times
              9511 000c  ld   $0c
              9512 000c  ld   $0c
              9513 000c  ld   $0c
              9514 0000  ld   $00
              9515 000c  ld   $0c
              9516 000c  ld   $0c
              9517 000c  ld   $0c
              9518 000c  ld   $0c
              9519 0000  ld   $00
              951a 000c  ld   $0c
              951b 000c  ld   $0c
              951c 000c  ld   $0c
              * 5 times
              951f 00fa  ld   $fa
              9520 0000  ld   $00
              9521 0000  ld   $00
              9522 0000  ld   $00
              * 6 times
              9526 000c  ld   $0c
              9527 0000  ld   $00
              9528 0000  ld   $00
              9529 0000  ld   $00
              * 5 times
              952c 000c  ld   $0c
              952d 000c  ld   $0c
              952e 000c  ld   $0c
              952f 000c  ld   $0c
              9530 0000  ld   $00
              9531 0000  ld   $00
              9532 000c  ld   $0c
              9533 000c  ld   $0c
              9534 000c  ld   $0c
              * 5 times
              9537 0000  ld   $00
              9538 000c  ld   $0c
              9539 000c  ld   $0c
              953a 000c  ld   $0c
              * 5 times
              953d 0000  ld   $00
              953e 000c  ld   $0c
              953f 000c  ld   $0c
              9540 000c  ld   $0c
              * 5 times
              9543 0000  ld   $00
              9544 00fa  ld   $fa
              9545 0077  ld   $77
              9546 00a2  ld   $a2
              9547 005e  ld   $5e
              9548 0003  ld   $03
              9549 0000  ld   $00
              954a 0003  ld   $03
              954b 0000  ld   $00
              954c 0000  ld   $00
              954d 0000  ld   $00
              954e 00ff  ld   $ff
              954f 0003  ld   $03
              9550 0000  ld   $00
              9551 0003  ld   $03
              9552 0003  ld   $03
              9553 0000  ld   $00
              9554 0003  ld   $03
              9555 00ff  ld   $ff
              9556 0000  ld   $00
              9557 0000  ld   $00
              9558 0000  ld   $00
              * 5 times
              955b 000c  ld   $0c
              955c 0000  ld   $00
              955d 0000  ld   $00
              955e 0000  ld   $00
              955f 0000  ld   $00
              9560 000c  ld   $0c
              9561 000c  ld   $0c
              9562 0000  ld   $00
              9563 000c  ld   $0c
              9564 000c  ld   $0c
              9565 000c  ld   $0c
              * 23 times
              957a 00fa  ld   $fa
              957b 0000  ld   $00
              957c 0000  ld   $00
              957d 0000  ld   $00
              * 6 times
              9581 0003  ld   $03
              9582 0000  ld   $00
              9583 0000  ld   $00
              9584 0000  ld   $00
              * 5 times
              9587 0003  ld   $03
              9588 0003  ld   $03
              9589 0000  ld   $00
              958a 0000  ld   $00
              958b 0000  ld   $00
              * 5 times
              958e 0003  ld   $03
              958f 0003  ld   $03
              9590 0000  ld   $00
              9591 0000  ld   $00
              9592 0000  ld   $00
              9593 0003  ld   $03
              9594 0003  ld   $03
              9595 0003  ld   $03
              9596 0003  ld   $03
              9597 0000  ld   $00
              9598 0000  ld   $00
              9599 0003  ld   $03
              959a 0003  ld   $03
              959b 0000  ld   $00
              959c 0000  ld   $00
              959d 0000  ld   $00
              959e 0000  ld   $00
              959f 0003  ld   $03
              95a0 0000  ld   $00
              95a1 0000  ld   $00
              95a2 0000  ld   $00
              * 5 times
              95a5 00f9  ld   $f9
              95a6 0078  ld   $78
              95a7 00a0  ld   $a0
              95a8 0060  ld   $60
              95a9 000d  ld   $0d
              95aa 0009  ld   $09
              95ab 0005  ld   $05
              95ac 0000  ld   $00
              95ad 0000  ld   $00
              95ae 0003  ld   $03
              95af 0003  ld   $03
              95b0 0000  ld   $00
              95b1 0003  ld   $03
              95b2 00ff  ld   $ff
              95b3 0003  ld   $03
              95b4 0003  ld   $03
              95b5 0003  ld   $03
              * 5 times
              95b8 0000  ld   $00
              95b9 0003  ld   $03
              95ba 0003  ld   $03
              95bb 0003  ld   $03
              * 12 times
              95c5 0000  ld   $00
              95c6 0003  ld   $03
              95c7 0003  ld   $03
              95c8 0000  ld   $00
              95c9 0003  ld   $03
              95ca 0003  ld   $03
              95cb 0003  ld   $03
              * 8 times
              95d1 0000  ld   $00
              95d2 0003  ld   $03
              95d3 0003  ld   $03
              95d4 0000  ld   $00
              95d5 0000  ld   $00
              95d6 0003  ld   $03
              95d7 0000  ld   $00
              95d8 0000  ld   $00
              95d9 0000  ld   $00
              * 6 times
              95dd 00f9  ld   $f9
              95de 0000  ld   $00
              95df 0000  ld   $00
              95e0 0000  ld   $00
              * 5 times
              95e3 0003  ld   $03
              95e4 0000  ld   $00
              95e5 0000  ld   $00
              95e6 0000  ld   $00
              95e7 0003  ld   $03
              95e8 0003  ld   $03
              95e9 0003  ld   $03
              95ea 0000  ld   $00
              95eb 0000  ld   $00
              95ec 0003  ld   $03
              95ed 0003  ld   $03
              95ee 0003  ld   $03
              95ef 0003  ld   $03
              95f0 0000  ld   $00
              95f1 0003  ld   $03
              95f2 0003  ld   $03
              95f3 0000  ld   $00
              95f4 0003  ld   $03
              95f5 0003  ld   $03
              95f6 0003  ld   $03
              * 7 times
              95fb fe00  bra  ac          ;+-----------------------------------+
              95fc fcfd  bra  $95fd       ;|                                   |
              95fd 1418  ld   $18,y       ;| Trampoline for page $9500 lookups |
              95fe e006  jmp  y,$06       ;|                                   |
              95ff c218  st   [$18]       ;+-----------------------------------+
              9600 0003  ld   $03
              9601 0000  ld   $00
              9602 0000  ld   $00
              9603 0003  ld   $03
              9604 0003  ld   $03
              9605 0003  ld   $03
              9606 0000  ld   $00
              9607 0000  ld   $00
              9608 0000  ld   $00
              9609 0000  ld   $00
              960a 0003  ld   $03
              960b 0000  ld   $00
              960c 0000  ld   $00
              960d 00f9  ld   $f9
              960e 0079  ld   $79
              960f 00a2  ld   $a2
              9610 005e  ld   $5e
              9611 000f  ld   $0f
              9612 000b  ld   $0b
              9613 0007  ld   $07
              9614 000c  ld   $0c
              9615 000c  ld   $0c
              9616 0000  ld   $00
              9617 0000  ld   $00
              9618 0000  ld   $00
              9619 0000  ld   $00
              961a 000c  ld   $0c
              961b 000c  ld   $0c
              961c 000c  ld   $0c
              961d 0000  ld   $00
              961e 0000  ld   $00
              961f 0000  ld   $00
              9620 000c  ld   $0c
              9621 000c  ld   $0c
              9622 000c  ld   $0c
              9623 000c  ld   $0c
              9624 0000  ld   $00
              9625 0000  ld   $00
              9626 000c  ld   $0c
              9627 000c  ld   $0c
              9628 000c  ld   $0c
              * 5 times
              962b 0000  ld   $00
              962c 000c  ld   $0c
              962d 000c  ld   $0c
              962e 000c  ld   $0c
              * 66 times
              966e 00ff  ld   $ff
              966f 007a  ld   $7a
              9670 00a0  ld   $a0
              9671 0060  ld   $60
              9672 0028  ld   $28
              9673 001e  ld   $1e
              9674 0014  ld   $14
              9675 000a  ld   $0a
              9676 0000  ld   $00
              9677 000c  ld   $0c
              9678 000c  ld   $0c
              9679 000c  ld   $0c
              * 78 times
              96c5 0000  ld   $00
              96c6 0000  ld   $00
              96c7 0000  ld   $00
              96c8 0000  ld   $00
              96c9 000c  ld   $0c
              96ca 000c  ld   $0c
              96cb 0000  ld   $00
              96cc 0000  ld   $00
              96cd 0000  ld   $00
              * 5 times
              96d0 000c  ld   $0c
              96d1 00ff  ld   $ff
              96d2 007b  ld   $7b
              96d3 00a0  ld   $a0
              96d4 0060  ld   $60
              96d5 0000  ld   $00
              96d6 0000  ld   $00
              96d7 0000  ld   $00
              * 5 times
              96da 000c  ld   $0c
              96db 000c  ld   $0c
              96dc 000c  ld   $0c
              * 33 times
              96fb fe00  bra  ac          ;+-----------------------------------+
              96fc fcfd  bra  $96fd       ;|                                   |
              96fd 1418  ld   $18,y       ;| Trampoline for page $9600 lookups |
              96fe e006  jmp  y,$06       ;|                                   |
              96ff c218  st   [$18]       ;+-----------------------------------+
              9700 000c  ld   $0c
              9701 000c  ld   $0c
              9702 000c  ld   $0c
              * 47 times
              972f 0000  ld   $00
              9730 0000  ld   $00
              9731 0000  ld   $00
              9732 0000  ld   $00
              9733 000c  ld   $0c
              9734 0000  ld   $00
              9735 0000  ld   $00
              9736 0000  ld   $00
              * 5 times
              9739 00ff  ld   $ff
              973a 007c  ld   $7c
              973b 00a0  ld   $a0
              973c 0060  ld   $60
              973d 0000  ld   $00
              973e 0000  ld   $00
              973f 0000  ld   $00
              * 9 times
              9746 000c  ld   $0c
              9747 000c  ld   $0c
              9748 0000  ld   $00
              9749 0000  ld   $00
              974a 0000  ld   $00
              974b 000c  ld   $0c
              974c 000c  ld   $0c
              974d 000c  ld   $0c
              974e 0000  ld   $00
              974f 0000  ld   $00
              9750 000c  ld   $0c
              9751 000c  ld   $0c
              9752 000c  ld   $0c
              9753 000c  ld   $0c
              9754 0000  ld   $00
              9755 000c  ld   $0c
              9756 000c  ld   $0c
              9757 000c  ld   $0c
              * 71 times
              979c 00ff  ld   $ff
              979d 007d  ld   $7d
              979e 00a0  ld   $a0
              979f 0060  ld   $60
              97a0 0009  ld   $09
              97a1 0000  ld   $00
              97a2 0067  ld   $67
              97a3 0000  ld   $00
              97a4 008d  ld   $8d
              97a5 0000  ld   $00
              97a6 005e  ld   $5e
              97a7 0000  ld   $00
              97a8 00c5  ld   $c5
              97a9 0000  ld   $00
              97aa 007a  ld   $7a
              97ab 0000  ld   $00
              97ac 0071  ld   $71
              97ad 0000  ld   $00
              97ae 0071  ld   $71
              97af 0000  ld   $00
              97b0 0009  ld   $09
              97b1 0000  ld   $00
              97b2 00a9  ld   $a9
              97b3 0000  ld   $00
              97b4 001c  ld   $1c
              97b5 0000  ld   $00
              97b6 00a9  ld   $a9
              97b7 0000  ld   $00
              97b8 009f  ld   $9f
              97b9 0000  ld   $00
              97ba 001c  ld   $1c
              97bb 0000  ld   $00
              97bc 0083  ld   $83
              97bd 0000  ld   $00
              97be 0019  ld   $19
              97bf 0001  ld   $01
              97c0 004b  ld   $4b
              97c1 0000  ld   $00
              97c2 0054  ld   $54
              97c3 0000  ld   $00
              97c4 00f4  ld   $f4
              97c5 0000  ld   $00
              97c6 00c5  ld   $c5
              97c7 0000  ld   $00
              97c8 0083  ld   $83
              97c9 0000  ld   $00
              97ca 00e1  ld   $e1
              97cb 0000  ld   $00
              97cc 001c  ld   $1c
              97cd 0000  ld   $00
              97ce 00e1  ld   $e1
              97cf 0000  ld   $00
              97d0 0071  ld   $71
              97d1 0000  ld   $00
              97d2 007a  ld   $7a
              97d3 0000  ld   $00
              97d4 0000  ld   $00
              97d5 0000  ld   $00
              97d6 0096  ld   $96
              97d7 0000  ld   $00
              97d8 00ce  ld   $ce
              97d9 0000  ld   $00
              97da 00bc  ld   $bc
              97db 0000  ld   $00
              97dc 00fd  ld   $fd
              97dd 0000  ld   $00
              97de 0096  ld   $96
              97df 0000  ld   $00
              97e0 0000  ld   $00
              97e1 0000  ld   $00
              * 8 times
              97e7 0003  ld   $03
              97e8 0003  ld   $03
              97e9 0000  ld   $00
              97ea 0000  ld   $00
              97eb 0000  ld   $00
              97ec 00ff  ld   $ff
              97ed 0000  ld   $00
              97ee 0000  ld   $00
              97ef 0000  ld   $00
              * 14 times
              97fb fe00  bra  ac          ;+-----------------------------------+
              97fc fcfd  bra  $97fd       ;|                                   |
              97fd 1418  ld   $18,y       ;| Trampoline for page $9700 lookups |
              97fe e006  jmp  y,$06       ;|                                   |
              97ff c218  st   [$18]       ;+-----------------------------------+
              9800 0000  ld   $00
              9801 0000  ld   $00
              9802 0000  ld   $00
              9803 0000  ld   $00
              9804 00fd  ld   $fd
              9805 007e  ld   $7e
              9806 00a0  ld   $a0
              9807 0018  ld   $18
              9808 00b8  ld   $b8
              9809 000b  ld   $0b
              980a 00e4  ld   $e4
              980b 000c  ld   $0c
              980c 0010  ld   $10
              980d 000e  ld   $0e
              980e 003c  ld   $3c
              980f 000f  ld   $0f
              9810 0068  ld   $68
              9811 0010  ld   $10
              9812 0094  ld   $94
              9813 0011  ld   $11
              9814 00b8  ld   $b8
              9815 000b  ld   $0b
              9816 00e4  ld   $e4
              9817 000c  ld   $0c
              9818 0010  ld   $10
              9819 000e  ld   $0e
              981a 003c  ld   $3c
              981b 000f  ld   $0f
              981c 0068  ld   $68
              981d 0010  ld   $10
              981e 0094  ld   $94
              981f 0011  ld   $11
              9820 007e  ld   $7e
              9821 00b9  ld   $b9
              9822 000d  ld   $0d
              9823 0000  ld   $00
              9824 0003  ld   $03
              9825 0003  ld   $03
              9826 0000  ld   $00
              9827 0003  ld   $03
              9828 0003  ld   $03
              9829 00ff  ld   $ff
              982a 0000  ld   $00
              982b 0000  ld   $00
              982c 0039  ld   $39
              982d 0009  ld   $09
              982e 00d1  ld   $d1
              982f 000e  ld   $0e
              9830 007e  ld   $7e
              9831 00c8  ld   $c8
              9832 0038  ld   $38
              9833 0000  ld   $00
              9834 008d  ld   $8d
              9835 0000  ld   $00
              9836 0003  ld   $03
              9837 0003  ld   $03
              9838 0000  ld   $00
              9839 0003  ld   $03
              983a 0003  ld   $03
              983b 00ff  ld   $ff
              983c 0000  ld   $00
              983d 0000  ld   $00
              983e 000c  ld   $0c
              983f 000c  ld   $0c
              9840 0000  ld   $00
              9841 0000  ld   $00
              9842 000c  ld   $0c
              9843 000c  ld   $0c
              9844 000c  ld   $0c
              * 12 times
              984e 00fd  ld   $fd
              984f 000c  ld   $0c
              9850 000c  ld   $0c
              9851 000c  ld   $0c
              * 6 times
              9855 00ff  ld   $ff
              9856 0000  ld   $00
              9857 0000  ld   $00
              9858 0000  ld   $00
              * 6 times
              985c 00ff  ld   $ff
              985d 0000  ld   $00
              985e 0000  ld   $00
              985f 0000  ld   $00
              * 6 times
              9863 00ff  ld   $ff
              9864 000c  ld   $0c
              9865 000c  ld   $0c
              9866 000c  ld   $0c
              * 6 times
              986a 00ff  ld   $ff
              986b 007f  ld   $7f
              986c 00a0  ld   $a0
              986d 0060  ld   $60
              986e 0020  ld   $20
              986f 004e  ld   $4e
              9870 0007  ld   $07
              9871 004c  ld   $4c
              9872 001e  ld   $1e
              9873 004a  ld   $4a
              9874 0061  ld   $61
              9875 0048  ld   $48
              9876 00cc  ld   $cc
              9877 0046  ld   $46
              9878 005b  ld   $5b
              9879 0045  ld   $45
              987a 000b  ld   $0b
              987b 0044  ld   $44
              987c 00d9  ld   $d9
              987d 0042  ld   $42
              987e 00c2  ld   $c2
              987f 0041  ld   $41
              9880 00c5  ld   $c5
              9881 0040  ld   $40
              9882 00de  ld   $de
              9883 003f  ld   $3f
              9884 000b  ld   $0b
              9885 003f  ld   $3f
              9886 004c  ld   $4c
              9887 003e  ld   $3e
              9888 009e  ld   $9e
              9889 003d  ld   $3d
              988a 00ff  ld   $ff
              988b 003c  ld   $3c
              988c 006e  ld   $6e
              988d 003c  ld   $3c
              988e 00eb  ld   $eb
              988f 003b  ld   $3b
              9890 0073  ld   $73
              9891 003b  ld   $3b
              9892 0006  ld   $06
              9893 003b  ld   $3b
              9894 00a3  ld   $a3
              9895 003a  ld   $3a
              9896 0048  ld   $48
              9897 003a  ld   $3a
              9898 00f6  ld   $f6
              9899 0039  ld   $39
              989a 00ab  ld   $ab
              989b 0039  ld   $39
              989c 0067  ld   $67
              989d 0039  ld   $39
              989e 0028  ld   $28
              989f 0039  ld   $39
              98a0 00f0  ld   $f0
              98a1 0038  ld   $38
              98a2 00bc  ld   $bc
              98a3 0038  ld   $38
              98a4 008d  ld   $8d
              98a5 0038  ld   $38
              98a6 0063  ld   $63
              98a7 0038  ld   $38
              98a8 003c  ld   $3c
              98a9 0038  ld   $38
              98aa 0018  ld   $18
              98ab 0038  ld   $38
              98ac 00f8  ld   $f8
              98ad 0037  ld   $37
              98ae 0020  ld   $20
              98af 0020  ld   $20
              98b0 0020  ld   $20
              * 5 times
              98b3 001f  ld   $1f
              98b4 001f  ld   $1f
              98b5 001e  ld   $1e
              98b6 001e  ld   $1e
              98b7 001d  ld   $1d
              98b8 001b  ld   $1b
              98b9 001a  ld   $1a
              98ba 0019  ld   $19
              98bb 0017  ld   $17
              98bc 0015  ld   $15
              98bd 0013  ld   $13
              98be 0011  ld   $11
              98bf 000f  ld   $0f
              98c0 000d  ld   $0d
              98c1 000b  ld   $0b
              98c2 0009  ld   $09
              98c3 0008  ld   $08
              98c4 0006  ld   $06
              98c5 0005  ld   $05
              98c6 0004  ld   $04
              98c7 0003  ld   $03
              98c8 0002  ld   $02
              98c9 0002  ld   $02
              98ca 0001  ld   $01
              98cb 0001  ld   $01
              98cc 0001  ld   $01
              98cd 0000  ld   $00
              98ce 0000  ld   $00
              98cf 0000  ld   $00         ;End of gbas/menu/Invader_vX0.gt1, size 8984
                                          ;+-----------------------------------+
                                          ;| Apps/TinyBASIC/TinyBASIC_v4.gcl   |
                                          ;+-----------------------------------+
              98d0 dc49  st   $49,[y,x++] ;'I'
              98d1 dc6e  st   $6e,[y,x++] ;'n'
              98d2 dc76  st   $76,[y,x++] ;'v'
              98d3 dc61  st   $61,[y,x++] ;'a'
              98d4 dc64  st   $64,[y,x++] ;'d'
              98d5 dc65  st   $65,[y,x++] ;'e'
              98d6 dc72  st   $72,[y,x++] ;'r'
              98d7 dc00  st   $00,[y,x++] ;'\x00'
              98d8 00b8  ld   $b8
              98d9 c218  st   [$18]
              98da 0075  ld   $75
              98db 14f3  ld   $f3,y
              98dc e019  jmp  y,$19
              98dd c219  st   [$19]
TinyBASIC:    98de 0002  ld   $02         ;| RAM segment address (high byte first)
              98df 0000  ld   $00         ;|
              98e0 00f8  ld   $f8         ;| Length (1..256)
              98e1 0011  ld   $11         ;0200 LDWI
              98e2 00df  ld   $df
              98e3 0001  ld   $01
              98e4 00f6  ld   $f6         ;0203 DEEK
              98e5 002b  ld   $2b         ;0204 STW
              98e6 0030  ld   $30         ;0204 'Pos'
              98e7 00cd  ld   $cd         ;0206 DEF
              98e8 00c3  ld   $c3
              98e9 0075  ld   $75         ;0208 PUSH
              98ea 00cf  ld   $cf         ;0209 CALL
              98eb 0032  ld   $32         ;0209 'Number'
              98ec 0035  ld   $35         ;020b BCC
              98ed 0050  ld   $50         ;020c LT
              98ee 0010  ld   $10
              98ef 00cf  ld   $cf         ;020e CALL
              98f0 0034  ld   $34         ;020e 'Spaces'
              98f1 0063  ld   $63         ;0210 POP
              98f2 00ff  ld   $ff         ;0211 RET
              98f3 0021  ld   $21         ;0212 LDW
              98f4 0036  ld   $36         ;0212 'Active'
              98f5 00ad  ld   $ad         ;0214 PEEK
              98f6 008c  ld   $8c         ;0215 XORI
              98f7 0024  ld   $24
              98f8 0035  ld   $35         ;0217 BCC
              98f9 0072  ld   $72         ;0218 NE
              98fa 0021  ld   $21
              98fb fe00  bra  ac          ;+-----------------------------------+
              98fc fcfd  bra  $98fd       ;|                                   |
              98fd 1418  ld   $18,y       ;| Trampoline for page $9800 lookups |
              98fe e006  jmp  y,$06       ;|                                   |
              98ff c218  st   [$18]       ;+-----------------------------------+
              9900 0011  ld   $11         ;021a LDWI
              9901 00ce  ld   $ce
              9902 0005  ld   $05
              9903 00cf  ld   $cf         ;021d CALL
              9904 0018  ld   $18         ;021d vAC
              9905 00cf  ld   $cf         ;021f CALL
              9906 0034  ld   $34         ;021f 'Spaces'
              9907 0063  ld   $63         ;0221 POP
              9908 00ff  ld   $ff         ;0222 RET
              9909 00cf  ld   $cf         ;0223 CALL
              990a 0038  ld   $38         ;0223 'Keyword'
              990b 0028  ld   $28         ;0225 '('
              990c 0000  ld   $00         ;0226 0
              990d 0035  ld   $35         ;0227 BCC
              990e 003f  ld   $3f         ;0228 EQ
              990f 002c  ld   $2c
              9910 00cf  ld   $cf         ;022a CALL
              9911 003a  ld   $3a         ;022a 'Expression'
              9912 0090  ld   $90         ;022c BRA
              9913 00b8  ld   $b8
              9914 00cf  ld   $cf         ;022e CALL
              9915 0038  ld   $38         ;022e 'Keyword'
              9916 0070  ld   $70         ;0230 'p'
              9917 0065  ld   $65         ;0231 'e'
              9918 0065  ld   $65         ;0232 'e'
              9919 006b  ld   $6b         ;0233 'k'
              991a 0028  ld   $28         ;0234 '('
              991b 0000  ld   $00         ;0235 0
              991c 0035  ld   $35         ;0236 BCC
              991d 003f  ld   $3f         ;0237 EQ
              991e 003e  ld   $3e
              991f 00cf  ld   $cf         ;0239 CALL
              9920 003a  ld   $3a         ;0239 'Expression'
              9921 00ad  ld   $ad         ;023b PEEK
              9922 002b  ld   $2b         ;023c STW
              9923 003c  ld   $3c         ;023c 'Value'
              9924 0090  ld   $90         ;023e BRA
              9925 00b8  ld   $b8
              9926 00cf  ld   $cf         ;0240 CALL
              9927 0038  ld   $38         ;0240 'Keyword'
              9928 0072  ld   $72         ;0242 'r'
              9929 006e  ld   $6e         ;0243 'n'
              992a 0064  ld   $64         ;0244 'd'
              992b 0028  ld   $28         ;0245 '('
              992c 0000  ld   $00         ;0246 0
              992d 0035  ld   $35         ;0247 BCC
              992e 003f  ld   $3f         ;0248 EQ
              992f 005c  ld   $5c
              9930 00cf  ld   $cf         ;024a CALL
              9931 003a  ld   $3a         ;024a 'Expression'
              9932 0011  ld   $11         ;024c LDWI
              9933 00a7  ld   $a7
              9934 0004  ld   $04
              9935 002b  ld   $2b         ;024f STW
              9936 0022  ld   $22         ;024f '_sysFn'
              9937 00b4  ld   $b4         ;0251 SYS
              9938 00fe  ld   $fe
              9939 0035  ld   $35         ;0253 BCC
              993a 0050  ld   $50         ;0254 LT
              993b 004f  ld   $4f
              993c 00cf  ld   $cf         ;0256 CALL
              993d 003e  ld   $3e         ;0256 'Divide'
              993e 0021  ld   $21         ;0258 LDW
              993f 0040  ld   $40         ;0258 'i'
              9940 002b  ld   $2b         ;025a STW
              9941 003c  ld   $3c         ;025a 'Value'
              9942 0090  ld   $90         ;025c BRA
              9943 00b8  ld   $b8
              9944 00cf  ld   $cf         ;025e CALL
              9945 0038  ld   $38         ;025e 'Keyword'
              9946 0075  ld   $75         ;0260 'u'
              9947 0073  ld   $73         ;0261 's'
              9948 0072  ld   $72         ;0262 'r'
              9949 0028  ld   $28         ;0263 '('
              994a 0000  ld   $00         ;0264 0
              994b 0035  ld   $35         ;0265 BCC
              994c 003f  ld   $3f         ;0266 EQ
              994d 006e  ld   $6e
              994e 00cf  ld   $cf         ;0268 CALL
              994f 003a  ld   $3a         ;0268 'Expression'
              9950 00cf  ld   $cf         ;026a CALL
              9951 003c  ld   $3c         ;026a 'Value'
              9952 002b  ld   $2b         ;026c STW
              9953 003c  ld   $3c         ;026c 'Value'
              9954 0090  ld   $90         ;026e BRA
              9955 00b8  ld   $b8
              9956 00cf  ld   $cf         ;0270 CALL
              9957 0042  ld   $42         ;0270 'Variable'
              9958 002b  ld   $2b         ;0272 STW
              9959 0044  ld   $44         ;0272 'k'
              995a 00cf  ld   $cf         ;0274 CALL
              995b 0034  ld   $34         ;0274 'Spaces'
              995c 00cf  ld   $cf         ;0276 CALL
              995d 0038  ld   $38         ;0276 'Keyword'
              995e 0028  ld   $28         ;0278 '('
              995f 0000  ld   $00         ;0279 0
              9960 0035  ld   $35         ;027a BCC
              9961 003f  ld   $3f         ;027b EQ
              9962 00b1  ld   $b1
              9963 0075  ld   $75         ;027d PUSH
              9964 0021  ld   $21         ;027e LDW
              9965 0044  ld   $44         ;027e 'k'
              9966 00ec  ld   $ec         ;0280 STLW
              9967 0000  ld   $00
              9968 00cf  ld   $cf         ;0282 CALL
              9969 003a  ld   $3a         ;0282 'Expression'
              996a 0035  ld   $35         ;0284 BCC
              996b 0053  ld   $53         ;0285 GE
              996c 0087  ld   $87
              996d 00cf  ld   $cf         ;0287 CALL
              996e 0046  ld   $46         ;0287 'ValueError'
              996f 00ee  ld   $ee         ;0289 LDLW
              9970 0000  ld   $00
              9971 002b  ld   $2b         ;028b STW
              9972 0044  ld   $44         ;028b 'k'
              9973 0063  ld   $63         ;028d POP
              9974 001a  ld   $1a         ;028e LD
              9975 0045  ld   $45         ;028e 'k'+1
              9976 00b8  ld   $b8         ;0290 SUBW
              9977 003c  ld   $3c         ;0290 'Value'
              9978 00e6  ld   $e6         ;0292 SUBI
              9979 0002  ld   $02
              997a 005e  ld   $5e         ;0294 ST
              997b 0045  ld   $45         ;0294 'k'+1
              997c 0021  ld   $21         ;0296 LDW
              997d 0048  ld   $48         ;0296 'End'
              997e 00fc  ld   $fc         ;0298 XORW
              997f 0044  ld   $44         ;0298 'k'
              9980 0035  ld   $35         ;029a BCC
              9981 0053  ld   $53         ;029b GE
              9982 009f  ld   $9f
              9983 0021  ld   $21         ;029d LDW
              9984 0048  ld   $48         ;029d 'End'
              9985 0090  ld   $90         ;029f BRA
              9986 00a3  ld   $a3
              9987 0021  ld   $21         ;02a1 LDW
              9988 0044  ld   $44         ;02a1 'k'
              9989 00b8  ld   $b8         ;02a3 SUBW
              998a 0048  ld   $48         ;02a3 'End'
              998b 0035  ld   $35         ;02a5 BCC
              998c 0053  ld   $53         ;02a6 GE
              998d 00a8  ld   $a8
              998e 00cf  ld   $cf         ;02a8 CALL
              998f 0046  ld   $46         ;02a8 'ValueError'
              9990 00cf  ld   $cf         ;02aa CALL
              9991 0038  ld   $38         ;02aa 'Keyword'
              9992 0029  ld   $29         ;02ac ')'
              9993 0000  ld   $00         ;02ad 0
              9994 0035  ld   $35         ;02ae BCC
              9995 0072  ld   $72         ;02af NE
              9996 00b1  ld   $b1
              9997 00cf  ld   $cf         ;02b1 CALL
              9998 004a  ld   $4a         ;02b1 'SyntaxError'
              9999 0021  ld   $21         ;02b3 LDW
              999a 0044  ld   $44         ;02b3 'k'
              999b 00f6  ld   $f6         ;02b5 DEEK
              999c 002b  ld   $2b         ;02b6 STW
              999d 003c  ld   $3c         ;02b6 'Value'
              999e 0063  ld   $63         ;02b8 POP
              999f 00ff  ld   $ff         ;02b9 RET
              99a0 00cf  ld   $cf         ;02ba CALL
              99a1 0038  ld   $38         ;02ba 'Keyword'
              99a2 0029  ld   $29         ;02bc ')'
              99a3 0000  ld   $00         ;02bd 0
              99a4 0035  ld   $35         ;02be BCC
              99a5 0072  ld   $72         ;02bf NE
              99a6 00c1  ld   $c1
              99a7 00cf  ld   $cf         ;02c1 CALL
              99a8 004a  ld   $4a         ;02c1 'SyntaxError'
              99a9 0063  ld   $63         ;02c3 POP
              99aa 00ff  ld   $ff         ;02c4 RET
              99ab 002b  ld   $2b         ;02c5 STW
              99ac 004c  ld   $4c         ;02c5 'Factor'
              99ad 00cd  ld   $cd         ;02c7 DEF
              99ae 00d9  ld   $d9
              99af 0021  ld   $21         ;02c9 LDW
              99b0 001a  ld   $1a
              99b1 002b  ld   $2b         ;02cb STW
              99b2 004e  ld   $4e         ;02cb 'tmp'
              99b3 0021  ld   $21         ;02cd LDW
              99b4 004e  ld   $4e         ;02cd 'tmp'
              99b5 00ad  ld   $ad         ;02cf PEEK
              99b6 0093  ld   $93         ;02d0 INC
              99b7 004e  ld   $4e         ;02d0 'tmp'
              99b8 0035  ld   $35         ;02d2 BCC
              99b9 003f  ld   $3f         ;02d3 EQ
              99ba 00d7  ld   $d7
              99bb 00cf  ld   $cf         ;02d5 CALL
              99bc 0050  ld   $50         ;02d5 'PrintChar'
              99bd 0090  ld   $90         ;02d7 BRA
              99be 00cb  ld   $cb
              99bf 00cf  ld   $cf         ;02d9 CALL
              99c0 004e  ld   $4e         ;02d9 'tmp'
              99c1 002b  ld   $2b         ;02db STW
              99c2 0052  ld   $52         ;02db 'PrintS'
              99c3 00cd  ld   $cd         ;02dd DEF
              99c4 00f1  ld   $f1
              99c5 001a  ld   $1a         ;02df LD
              99c6 000f  ld   $0f
              99c7 008c  ld   $8c         ;02e1 XORI
              99c8 0003  ld   $03
              99c9 0035  ld   $35         ;02e3 BCC
              99ca 0072  ld   $72         ;02e4 NE
              99cb 00f0  ld   $f0
              99cc 0021  ld   $21         ;02e6 LDW
              99cd 0054  ld   $54         ;02e6 'PrintCharScreen'
              99ce 002b  ld   $2b         ;02e8 STW
              99cf 0050  ld   $50         ;02e8 'PrintChar'
              99d0 00cf  ld   $cf         ;02ea CALL
              99d1 0056  ld   $56         ;02ea 'Prompt'
              99d2 0042  ld   $42         ;02ec 'B'
              99d3 0072  ld   $72         ;02ed 'r'
              99d4 0065  ld   $65         ;02ee 'e'
              99d5 0061  ld   $61         ;02ef 'a'
              99d6 006b  ld   $6b         ;02f0 'k'
              99d7 0000  ld   $00         ;02f1 0
              99d8 00ff  ld   $ff         ;02f2 RET
              99d9 002b  ld   $2b         ;02f3 STW
              99da 0058  ld   $58         ;02f3 'TestBreak'
              99db 0093  ld   $93         ;02f5 INC
              99dc 001b  ld   $1b
              99dd 00ff  ld   $ff         ;02f7 RET
              99de 0003  ld   $03         ;| RAM segment address (high byte first)
              99df 0000  ld   $00         ;|
              99e0 00f9  ld   $f9         ;| Length (1..256)
              99e1 00cd  ld   $cd         ;0300 DEF
              99e2 006e  ld   $6e
              99e3 002b  ld   $2b         ;0302 STW
              99e4 0044  ld   $44         ;0302 'k'
              99e5 00e6  ld   $e6         ;0304 SUBI
              99e6 0083  ld   $83
              99e7 0035  ld   $35         ;0306 BCC
              99e8 004d  ld   $4d         ;0307 GT
              99e9 006d  ld   $6d
              99ea 001a  ld   $1a         ;0309 LD
              99eb 0031  ld   $31         ;0309 'Pos'+1
              99ec 00e6  ld   $e6         ;030b SUBI
              99ed 0078  ld   $78
              99ee 0035  ld   $35         ;030d BCC
              99ef 004d  ld   $4d         ;030e GT
              99f0 006d  ld   $6d
              99f1 001a  ld   $1a         ;0310 LD
              99f2 0030  ld   $30         ;0310 'Pos'
              99f3 00e6  ld   $e6         ;0312 SUBI
              99f4 009a  ld   $9a
              99f5 0035  ld   $35         ;0314 BCC
              99f6 0056  ld   $56         ;0315 LE
              99f7 0019  ld   $19
              99f8 0075  ld   $75         ;0317 PUSH
              99f9 00cf  ld   $cf         ;0318 CALL
              99fa 005a  ld   $5a         ;0318 'Newline'
              99fb fe00  bra  ac          ;+-----------------------------------+
              99fc fcfd  bra  $99fd       ;|                                   |
              99fd 1418  ld   $18,y       ;| Trampoline for page $9900 lookups |
              99fe e006  jmp  y,$06       ;|                                   |
              99ff c218  st   [$18]       ;+-----------------------------------+
              9a00 0063  ld   $63         ;031a POP
              9a01 0021  ld   $21         ;031b LDW
              9a02 0044  ld   $44         ;031b 'k'
              9a03 00e6  ld   $e6         ;031d SUBI
              9a04 0052  ld   $52
              9a05 0035  ld   $35         ;031f BCC
              9a06 0053  ld   $53         ;0320 GE
              9a07 0029  ld   $29
              9a08 00e3  ld   $e3         ;0322 ADDI
              9a09 0032  ld   $32
              9a0a 002b  ld   $2b         ;0324 STW
              9a0b 0040  ld   $40         ;0324 'i'
              9a0c 0011  ld   $11         ;0326 LDWI
              9a0d 0000  ld   $00
              9a0e 0007  ld   $07
              9a0f 0090  ld   $90         ;0329 BRA
              9a10 002e  ld   $2e
              9a11 002b  ld   $2b         ;032b STW
              9a12 0040  ld   $40         ;032b 'i'
              9a13 0011  ld   $11         ;032d LDWI
              9a14 0000  ld   $00
              9a15 0008  ld   $08
              9a16 002b  ld   $2b         ;0330 STW
              9a17 0044  ld   $44         ;0330 'k'
              9a18 0021  ld   $21         ;0332 LDW
              9a19 0040  ld   $40         ;0332 'i'
              9a1a 0035  ld   $35         ;0334 BCC
              9a1b 0050  ld   $50         ;0335 LT
              9a1c 006d  ld   $6d
              9a1d 00e9  ld   $e9         ;0337 LSLW
              9a1e 00e9  ld   $e9         ;0338 LSLW
              9a1f 0099  ld   $99         ;0339 ADDW
              9a20 0040  ld   $40         ;0339 'i'
              9a21 0099  ld   $99         ;033b ADDW
              9a22 0044  ld   $44         ;033b 'k'
              9a23 002b  ld   $2b         ;033d STW
              9a24 0044  ld   $44         ;033d 'k'
              9a25 0011  ld   $11         ;033f LDWI
              9a26 00e1  ld   $e1
              9a27 0004  ld   $04
              9a28 002b  ld   $2b         ;0342 STW
              9a29 0022  ld   $22         ;0342 '_sysFn'
              9a2a 0021  ld   $21         ;0344 LDW
              9a2b 002a  ld   $2a         ;0344 '_sysArgs6'
              9a2c 002b  ld   $2b         ;0346 STW
              9a2d 0024  ld   $24         ;0346 '_sysArgs0'
              9a2e 0021  ld   $21         ;0348 LDW
              9a2f 0030  ld   $30         ;0348 'Pos'
              9a30 002b  ld   $2b         ;034a STW
              9a31 0028  ld   $28
              9a32 00ec  ld   $ec         ;034c STLW
              9a33 00fe  ld   $fe
              9a34 00e3  ld   $e3         ;034e ADDI
              9a35 0006  ld   $06
              9a36 002b  ld   $2b         ;0350 STW
              9a37 0030  ld   $30         ;0350 'Pos'
              9a38 0059  ld   $59         ;0352 LDI
              9a39 0005  ld   $05
              9a3a 002b  ld   $2b         ;0354 STW
              9a3b 0040  ld   $40         ;0354 'i'
              9a3c 0021  ld   $21         ;0356 LDW
              9a3d 0044  ld   $44         ;0356 'k'
              9a3e 007f  ld   $7f         ;0358 LUP
              9a3f 0000  ld   $00
              9a40 005e  ld   $5e         ;035a ST
              9a41 0026  ld   $26
              9a42 00b4  ld   $b4         ;035c SYS
              9a43 00cc  ld   $cc
              9a44 0093  ld   $93         ;035e INC
              9a45 0044  ld   $44         ;035e 'k'
              9a46 0093  ld   $93         ;0360 INC
              9a47 0028  ld   $28
              9a48 0021  ld   $21         ;0362 LDW
              9a49 0040  ld   $40         ;0362 'i'
              9a4a 00e6  ld   $e6         ;0364 SUBI
              9a4b 0001  ld   $01
              9a4c 0035  ld   $35         ;0366 BCC
              9a4d 004d  ld   $4d         ;0367 GT
              9a4e 0052  ld   $52
              9a4f 005e  ld   $5e         ;0369 ST
              9a50 0026  ld   $26
              9a51 00b4  ld   $b4         ;036b SYS
              9a52 00cc  ld   $cc
              9a53 00ee  ld   $ee         ;036d LDLW
              9a54 00fe  ld   $fe
              9a55 00ff  ld   $ff         ;036f RET
              9a56 002b  ld   $2b         ;0370 STW
              9a57 0050  ld   $50         ;0370 'PrintChar'
              9a58 002b  ld   $2b         ;0372 STW
              9a59 0054  ld   $54         ;0372 'PrintCharScreen'
              9a5a 00cd  ld   $cd         ;0374 DEF
              9a5b 00f4  ld   $f4
              9a5c 0075  ld   $75         ;0376 PUSH
              9a5d 002b  ld   $2b         ;0377 STW
              9a5e 004e  ld   $4e         ;0377 'tmp'
              9a5f 0011  ld   $11         ;0379 LDWI
              9a60 0000  ld   $00
              9a61 000b  ld   $0b
              9a62 002b  ld   $2b         ;037c STW
              9a63 0022  ld   $22         ;037c '_sysFn'
              9a64 001a  ld   $1a         ;037e LD
              9a65 0021  ld   $21
              9a66 00e6  ld   $e6         ;0380 SUBI
              9a67 0038  ld   $38
              9a68 0035  ld   $35         ;0382 BCC
              9a69 0050  ld   $50         ;0383 LT
              9a6a 0087  ld   $87
              9a6b 00e6  ld   $e6         ;0385 SUBI
              9a6c 00ff  ld   $ff
              9a6d 00b4  ld   $b4         ;0387 SYS
              9a6e 00e7  ld   $e7
              9a6f 0011  ld   $11         ;0389 LDWI
              9a70 00a0  ld   $a0
              9a71 001b  ld   $1b
              9a72 002b  ld   $2b         ;038c STW
              9a73 0036  ld   $36         ;038c 'Active'
              9a74 0021  ld   $21         ;038e LDW
              9a75 004e  ld   $4e         ;038e 'tmp'
              9a76 00f3  ld   $f3         ;0390 DOKE
              9a77 0036  ld   $36         ;0390 'Active'
              9a78 0059  ld   $59         ;0392 LDI
              9a79 00a2  ld   $a2
              9a7a 005e  ld   $5e         ;0394 ST
              9a7b 0036  ld   $36         ;0394 'Active'
              9a7c 0059  ld   $59         ;0396 LDI
              9a7d 007f  ld   $7f
              9a7e 00cf  ld   $cf         ;0398 CALL
              9a7f 0050  ld   $50         ;0398 'PrintChar'
              9a80 002b  ld   $2b         ;039a STW
              9a81 0030  ld   $30         ;039a 'Pos'
              9a82 001a  ld   $1a         ;039c LD
              9a83 000f  ld   $0f
              9a84 002b  ld   $2b         ;039e STW
              9a85 004e  ld   $4e         ;039e 'tmp'
              9a86 001a  ld   $1a         ;03a0 LD
              9a87 000f  ld   $0f
              9a88 00f0  ld   $f0         ;03a2 POKE
              9a89 0036  ld   $36         ;03a2 'Active'
              9a8a 00fc  ld   $fc         ;03a4 XORW
              9a8b 004e  ld   $4e         ;03a4 'tmp'
              9a8c 0035  ld   $35         ;03a6 BCC
              9a8d 0072  ld   $72         ;03a7 NE
              9a8e 00ac  ld   $ac
              9a8f 0021  ld   $21         ;03a9 LDW
              9a90 0036  ld   $36         ;03a9 'Active'
              9a91 00ad  ld   $ad         ;03ab PEEK
              9a92 0090  ld   $90         ;03ac BRA
              9a93 009c  ld   $9c
              9a94 0021  ld   $21         ;03ae LDW
              9a95 0036  ld   $36         ;03ae 'Active'
              9a96 00ad  ld   $ad         ;03b0 PEEK
              9a97 008c  ld   $8c         ;03b1 XORI
              9a98 000a  ld   $0a
              9a99 0035  ld   $35         ;03b3 BCC
              9a9a 003f  ld   $3f         ;03b4 EQ
              9a9b 00ef  ld   $ef
              9a9c 008c  ld   $8c         ;03b6 XORI
              9a9d 0075  ld   $75
              9a9e 0035  ld   $35         ;03b8 BCC
              9a9f 0072  ld   $72         ;03b9 NE
              9aa0 00d0  ld   $d0
              9aa1 0059  ld   $59         ;03bb LDI
              9aa2 0020  ld   $20
              9aa3 00cf  ld   $cf         ;03bd CALL
              9aa4 0050  ld   $50         ;03bd 'PrintChar'
              9aa5 002b  ld   $2b         ;03bf STW
              9aa6 0030  ld   $30         ;03bf 'Pos'
              9aa7 001a  ld   $1a         ;03c1 LD
              9aa8 0030  ld   $30         ;03c1 'Pos'
              9aa9 00e6  ld   $e6         ;03c3 SUBI
              9aaa 0006  ld   $06
              9aab 0035  ld   $35         ;03c5 BCC
              9aac 0050  ld   $50         ;03c6 LT
              9aad 00ce  ld   $ce
              9aae 005e  ld   $5e         ;03c8 ST
              9aaf 0030  ld   $30         ;03c8 'Pos'
              9ab0 0021  ld   $21         ;03ca LDW
              9ab1 0036  ld   $36         ;03ca 'Active'
              9ab2 00e6  ld   $e6         ;03cc SUBI
              9ab3 0001  ld   $01
              9ab4 002b  ld   $2b         ;03ce STW
              9ab5 0036  ld   $36         ;03ce 'Active'
              9ab6 0090  ld   $90         ;03d0 BRA
              9ab7 0094  ld   $94
              9ab8 00e6  ld   $e6         ;03d2 SUBI
              9ab9 0060  ld   $60
              9aba 0035  ld   $35         ;03d4 BCC
              9abb 0053  ld   $53         ;03d5 GE
              9abc 0094  ld   $94
              9abd 001a  ld   $1a         ;03d7 LD
              9abe 0030  ld   $30         ;03d7 'Pos'
              9abf 00e6  ld   $e6         ;03d9 SUBI
              9ac0 0096  ld   $96
              9ac1 0035  ld   $35         ;03db BCC
              9ac2 0050  ld   $50         ;03dc LT
              9ac3 00e6  ld   $e6
              9ac4 0059  ld   $59         ;03de LDI
              9ac5 00a2  ld   $a2
              9ac6 005e  ld   $5e         ;03e0 ST
              9ac7 0036  ld   $36         ;03e0 'Active'
              9ac8 0059  ld   $59         ;03e2 LDI
              9ac9 005c  ld   $5c
              9aca 00cf  ld   $cf         ;03e4 CALL
              9acb 0050  ld   $50         ;03e4 'PrintChar'
              9acc 0090  ld   $90         ;03e6 BRA
              9acd 0094  ld   $94
              9ace 0021  ld   $21         ;03e8 LDW
              9acf 0036  ld   $36         ;03e8 'Active'
              9ad0 00ad  ld   $ad         ;03ea PEEK
              9ad1 00cf  ld   $cf         ;03eb CALL
              9ad2 0050  ld   $50         ;03eb 'PrintChar'
              9ad3 0093  ld   $93         ;03ed INC
              9ad4 0036  ld   $36         ;03ed 'Active'
              9ad5 0090  ld   $90         ;03ef BRA
              9ad6 0094  ld   $94
              9ad7 0011  ld   $11         ;03f1 LDWI
              9ad8 00e8  ld   $e8
              9ad9 0006  ld   $06
              9ada 00cf  ld   $cf         ;03f4 CALL
              9adb 0018  ld   $18         ;03f4 vAC
              9adc 0093  ld   $93         ;03f6 INC
              9add 001b  ld   $1b
              9ade 00ff  ld   $ff         ;03f8 RET
              9adf 0004  ld   $04         ;| RAM segment address (high byte first)
              9ae0 0000  ld   $00         ;|
              9ae1 00f8  ld   $f8         ;| Length (1..256)
              9ae2 002b  ld   $2b         ;0400 STW
              9ae3 005c  ld   $5c         ;0400 'GetLine'
              9ae4 00cd  ld   $cd         ;0402 DEF
              9ae5 00ef  ld   $ef
              9ae6 00cf  ld   $cf         ;0404 CALL
              9ae7 0034  ld   $34         ;0404 'Spaces'
              9ae8 00cf  ld   $cf         ;0406 CALL
              9ae9 0038  ld   $38         ;0406 'Keyword'
              9aea 0067  ld   $67         ;0408 'g'
              9aeb 006f  ld   $6f         ;0409 'o'
              9aec 0074  ld   $74         ;040a 't'
              9aed 006f  ld   $6f         ;040b 'o'
              9aee 0000  ld   $00         ;040c 0
              9aef 0035  ld   $35         ;040d BCC
              9af0 003f  ld   $3f         ;040e EQ
              9af1 0012  ld   $12
              9af2 00cf  ld   $cf         ;0410 CALL
              9af3 003a  ld   $3a         ;0410 'Expression'
              9af4 00cf  ld   $cf         ;0412 CALL
              9af5 005e  ld   $5e         ;0412 'GotoValue'
              9af6 00cf  ld   $cf         ;0414 CALL
              9af7 0038  ld   $38         ;0414 'Keyword'
              9af8 0067  ld   $67         ;0416 'g'
              9af9 006f  ld   $6f         ;0417 'o'
              9afa 0073  ld   $73         ;0418 's'
              9afb fe00  bra  ac          ;+-----------------------------------+
              9afc fcfd  bra  $9afd       ;|                                   |
              9afd 1418  ld   $18,y       ;| Trampoline for page $9a00 lookups |
              9afe e006  jmp  y,$06       ;|                                   |
              9aff c218  st   [$18]       ;+-----------------------------------+
              9b00 0075  ld   $75         ;0419 'u'
              9b01 0062  ld   $62         ;041a 'b'
              9b02 0000  ld   $00         ;041b 0
              9b03 0035  ld   $35         ;041c BCC
              9b04 003f  ld   $3f         ;041d EQ
              9b05 0026  ld   $26
              9b06 00cf  ld   $cf         ;041f CALL
              9b07 003a  ld   $3a         ;041f 'Expression'
              9b08 0075  ld   $75         ;0421 PUSH
              9b09 0021  ld   $21         ;0422 LDW
              9b0a 0036  ld   $36         ;0422 'Active'
              9b0b 00ec  ld   $ec         ;0424 STLW
              9b0c 0000  ld   $00
              9b0d 00cf  ld   $cf         ;0426 CALL
              9b0e 005e  ld   $5e         ;0426 'GotoValue'
              9b0f 00cf  ld   $cf         ;0428 CALL
              9b10 0038  ld   $38         ;0428 'Keyword'
              9b11 0072  ld   $72         ;042a 'r'
              9b12 0065  ld   $65         ;042b 'e'
              9b13 0074  ld   $74         ;042c 't'
              9b14 0075  ld   $75         ;042d 'u'
              9b15 0072  ld   $72         ;042e 'r'
              9b16 006e  ld   $6e         ;042f 'n'
              9b17 0000  ld   $00         ;0430 0
              9b18 0035  ld   $35         ;0431 BCC
              9b19 003f  ld   $3f         ;0432 EQ
              9b1a 003f  ld   $3f
              9b1b 001a  ld   $1a         ;0434 LD
              9b1c 001c  ld   $1c
              9b1d 0035  ld   $35         ;0436 BCC
              9b1e 0072  ld   $72         ;0437 NE
              9b1f 0039  ld   $39
              9b20 00cf  ld   $cf         ;0439 CALL
              9b21 0060  ld   $60         ;0439 'StackError'
              9b22 00f6  ld   $f6         ;043b DEEK
              9b23 002b  ld   $2b         ;043c STW
              9b24 0036  ld   $36         ;043c 'Active'
              9b25 0063  ld   $63         ;043e POP
              9b26 00cf  ld   $cf         ;043f CALL
              9b27 0062  ld   $62         ;043f 'EndOfLine'
              9b28 00cf  ld   $cf         ;0441 CALL
              9b29 0038  ld   $38         ;0441 'Keyword'
              9b2a 0069  ld   $69         ;0443 'i'
              9b2b 0066  ld   $66         ;0444 'f'
              9b2c 0000  ld   $00         ;0445 0
              9b2d 0035  ld   $35         ;0446 BCC
              9b2e 003f  ld   $3f         ;0447 EQ
              9b2f 0096  ld   $96
              9b30 00cf  ld   $cf         ;0449 CALL
              9b31 003a  ld   $3a         ;0449 'Expression'
              9b32 00df  ld   $df         ;044b ALLOC
              9b33 00fc  ld   $fc
              9b34 00ec  ld   $ec         ;044d STLW
              9b35 0002  ld   $02
              9b36 00cf  ld   $cf         ;044f CALL
              9b37 0064  ld   $64         ;044f 'RelOp'
              9b38 0035  ld   $35         ;0451 BCC
              9b39 0072  ld   $72         ;0452 NE
              9b3a 0054  ld   $54
              9b3b 00cf  ld   $cf         ;0454 CALL
              9b3c 004a  ld   $4a         ;0454 'SyntaxError'
              9b3d 00ec  ld   $ec         ;0456 STLW
              9b3e 0000  ld   $00
              9b3f 00cf  ld   $cf         ;0458 CALL
              9b40 003a  ld   $3a         ;0458 'Expression'
              9b41 00cf  ld   $cf         ;045a CALL
              9b42 0038  ld   $38         ;045a 'Keyword'
              9b43 0074  ld   $74         ;045c 't'
              9b44 0068  ld   $68         ;045d 'h'
              9b45 0065  ld   $65         ;045e 'e'
              9b46 006e  ld   $6e         ;045f 'n'
              9b47 0000  ld   $00         ;0460 0
              9b48 00ee  ld   $ee         ;0461 LDLW
              9b49 0002  ld   $02
              9b4a 00fc  ld   $fc         ;0463 XORW
              9b4b 003c  ld   $3c         ;0463 'Value'
              9b4c 0035  ld   $35         ;0465 BCC
              9b4d 0053  ld   $53         ;0466 GE
              9b4e 006a  ld   $6a
              9b4f 00ee  ld   $ee         ;0468 LDLW
              9b50 0002  ld   $02
              9b51 0090  ld   $90         ;046a BRA
              9b52 006e  ld   $6e
              9b53 00ee  ld   $ee         ;046c LDLW
              9b54 0002  ld   $02
              9b55 00b8  ld   $b8         ;046e SUBW
              9b56 003c  ld   $3c         ;046e 'Value'
              9b57 0035  ld   $35         ;0470 BCC
              9b58 0056  ld   $56         ;0471 LE
              9b59 0073  ld   $73
              9b5a 0059  ld   $59         ;0473 LDI
              9b5b 0004  ld   $04
              9b5c 0035  ld   $35         ;0475 BCC
              9b5d 0053  ld   $53         ;0476 GE
              9b5e 0078  ld   $78
              9b5f 0059  ld   $59         ;0478 LDI
              9b60 0001  ld   $01
              9b61 0035  ld   $35         ;047a BCC
              9b62 0072  ld   $72         ;047b NE
              9b63 007d  ld   $7d
              9b64 0059  ld   $59         ;047d LDI
              9b65 0002  ld   $02
              9b66 002b  ld   $2b         ;047f STW
              9b67 0040  ld   $40         ;047f 'i'
              9b68 00ee  ld   $ee         ;0481 LDLW
              9b69 0000  ld   $00
              9b6a 00f8  ld   $f8         ;0483 ANDW
              9b6b 0040  ld   $40         ;0483 'i'
              9b6c 00df  ld   $df         ;0485 ALLOC
              9b6d 0004  ld   $04
              9b6e 0035  ld   $35         ;0487 BCC
              9b6f 003f  ld   $3f         ;0488 EQ
              9b70 008a  ld   $8a
              9b71 00cf  ld   $cf         ;048a CALL
              9b72 0066  ld   $66         ;048a 'Statements'
              9b73 0021  ld   $21         ;048c LDW
              9b74 0036  ld   $36         ;048c 'Active'
              9b75 00ad  ld   $ad         ;048e PEEK
              9b76 0035  ld   $35         ;048f BCC
              9b77 003f  ld   $3f         ;0490 EQ
              9b78 0094  ld   $94
              9b79 0093  ld   $93         ;0492 INC
              9b7a 0036  ld   $36         ;0492 'Active'
              9b7b 0090  ld   $90         ;0494 BRA
              9b7c 008a  ld   $8a
              9b7d 00cf  ld   $cf         ;0496 CALL
              9b7e 0062  ld   $62         ;0496 'EndOfLine'
              9b7f 00cf  ld   $cf         ;0498 CALL
              9b80 0038  ld   $38         ;0498 'Keyword'
              9b81 0070  ld   $70         ;049a 'p'
              9b82 006f  ld   $6f         ;049b 'o'
              9b83 006b  ld   $6b         ;049c 'k'
              9b84 0065  ld   $65         ;049d 'e'
              9b85 0000  ld   $00         ;049e 0
              9b86 0035  ld   $35         ;049f BCC
              9b87 003f  ld   $3f         ;04a0 EQ
              9b88 00b3  ld   $b3
              9b89 00cf  ld   $cf         ;04a2 CALL
              9b8a 003a  ld   $3a         ;04a2 'Expression'
              9b8b 002b  ld   $2b         ;04a4 STW
              9b8c 0068  ld   $68         ;04a4 'Address'
              9b8d 00cf  ld   $cf         ;04a6 CALL
              9b8e 0038  ld   $38         ;04a6 'Keyword'
              9b8f 002c  ld   $2c         ;04a8 ','
              9b90 0000  ld   $00         ;04a9 0
              9b91 0035  ld   $35         ;04aa BCC
              9b92 0072  ld   $72         ;04ab NE
              9b93 00ad  ld   $ad
              9b94 00cf  ld   $cf         ;04ad CALL
              9b95 004a  ld   $4a         ;04ad 'SyntaxError'
              9b96 00cf  ld   $cf         ;04af CALL
              9b97 003a  ld   $3a         ;04af 'Expression'
              9b98 00f0  ld   $f0         ;04b1 POKE
              9b99 0068  ld   $68         ;04b1 'Address'
              9b9a 00cf  ld   $cf         ;04b3 CALL
              9b9b 0062  ld   $62         ;04b3 'EndOfLine'
              9b9c 00cf  ld   $cf         ;04b5 CALL
              9b9d 0038  ld   $38         ;04b5 'Keyword'
              9b9e 0027  ld   $27         ;04b7 "'"
              9b9f 0000  ld   $00         ;04b8 0
              9ba0 0035  ld   $35         ;04b9 BCC
              9ba1 0072  ld   $72         ;04ba NE
              9ba2 00c0  ld   $c0
              9ba3 00cf  ld   $cf         ;04bc CALL
              9ba4 0038  ld   $38         ;04bc 'Keyword'
              9ba5 0072  ld   $72         ;04be 'r'
              9ba6 0065  ld   $65         ;04bf 'e'
              9ba7 006d  ld   $6d         ;04c0 'm'
              9ba8 0000  ld   $00         ;04c1 0
              9ba9 0035  ld   $35         ;04c2 BCC
              9baa 003f  ld   $3f         ;04c3 EQ
              9bab 00cf  ld   $cf
              9bac 0021  ld   $21         ;04c5 LDW
              9bad 0036  ld   $36         ;04c5 'Active'
              9bae 00ad  ld   $ad         ;04c7 PEEK
              9baf 0035  ld   $35         ;04c8 BCC
              9bb0 003f  ld   $3f         ;04c9 EQ
              9bb1 00cd  ld   $cd
              9bb2 0093  ld   $93         ;04cb INC
              9bb3 0036  ld   $36         ;04cb 'Active'
              9bb4 0090  ld   $90         ;04cd BRA
              9bb5 00c3  ld   $c3
              9bb6 00cf  ld   $cf         ;04cf CALL
              9bb7 0062  ld   $62         ;04cf 'EndOfLine'
              9bb8 00cf  ld   $cf         ;04d1 CALL
              9bb9 0038  ld   $38         ;04d1 'Keyword'
              9bba 006c  ld   $6c         ;04d3 'l'
              9bbb 0069  ld   $69         ;04d4 'i'
              9bbc 006e  ld   $6e         ;04d5 'n'
              9bbd 0065  ld   $65         ;04d6 'e'
              9bbe 0000  ld   $00         ;04d7 0
              9bbf 0035  ld   $35         ;04d8 BCC
              9bc0 003f  ld   $3f         ;04d9 EQ
              9bc1 00de  ld   $de
              9bc2 0011  ld   $11         ;04db LDWI
              9bc3 00a0  ld   $a0
              9bc4 0019  ld   $19
              9bc5 00cf  ld   $cf         ;04de CALL
              9bc6 0018  ld   $18         ;04de vAC
              9bc7 00cf  ld   $cf         ;04e0 CALL
              9bc8 0038  ld   $38         ;04e0 'Keyword'
              9bc9 0065  ld   $65         ;04e2 'e'
              9bca 006e  ld   $6e         ;04e3 'n'
              9bcb 0064  ld   $64         ;04e4 'd'
              9bcc 0000  ld   $00         ;04e5 0
              9bcd 0035  ld   $35         ;04e6 BCC
              9bce 003f  ld   $3f         ;04e7 EQ
              9bcf 00ea  ld   $ea
              9bd0 00cf  ld   $cf         ;04e9 CALL
              9bd1 0056  ld   $56         ;04e9 'Prompt'
              9bd2 0000  ld   $00         ;04eb 0
              9bd3 0011  ld   $11         ;04ec LDWI
              9bd4 0000  ld   $00
              9bd5 0005  ld   $05
              9bd6 00cf  ld   $cf         ;04ef CALL
              9bd7 0018  ld   $18         ;04ef vAC
              9bd8 002b  ld   $2b         ;04f1 STW
              9bd9 0066  ld   $66         ;04f1 'Statements'
              9bda 0093  ld   $93         ;04f3 INC
              9bdb 001b  ld   $1b
              9bdc 0093  ld   $93         ;04f5 INC
              9bdd 001b  ld   $1b
              9bde 00ff  ld   $ff         ;04f7 RET
              9bdf 0005  ld   $05         ;| RAM segment address (high byte first)
              9be0 0000  ld   $00         ;|
              9be1 0000  ld   $00         ;| Length (1..256)
              9be2 00cf  ld   $cf         ;0500 CALL
              9be3 0038  ld   $38         ;0500 'Keyword'
              9be4 006e  ld   $6e         ;0502 'n'
              9be5 0065  ld   $65         ;0503 'e'
              9be6 0078  ld   $78         ;0504 'x'
              9be7 0074  ld   $74         ;0505 't'
              9be8 0000  ld   $00         ;0506 0
              9be9 0035  ld   $35         ;0507 BCC
              9bea 003f  ld   $3f         ;0508 EQ
              9beb 0037  ld   $37
              9bec 00cf  ld   $cf         ;050a CALL
              9bed 0042  ld   $42         ;050a 'Variable'
              9bee 002b  ld   $2b         ;050c STW
              9bef 0068  ld   $68         ;050c 'Address'
              9bf0 0075  ld   $75         ;050e PUSH
              9bf1 0021  ld   $21         ;050f LDW
              9bf2 0036  ld   $36         ;050f 'Active'
              9bf3 00ec  ld   $ec         ;0511 STLW
              9bf4 0000  ld   $00
              9bf5 0011  ld   $11         ;0513 LDWI
              9bf6 0000  ld   $00
              9bf7 00ff  ld   $ff
              9bf8 0099  ld   $99         ;0516 ADDW
              9bf9 0068  ld   $68         ;0516 'Address'
              9bfa 00f6  ld   $f6         ;0518 DEEK
              9bfb fe00  bra  ac          ;+-----------------------------------+
              9bfc fcfd  bra  $9bfd       ;|                                   |
              9bfd 1418  ld   $18,y       ;| Trampoline for page $9b00 lookups |
              9bfe e006  jmp  y,$06       ;|                                   |
              9bff c218  st   [$18]       ;+-----------------------------------+
              9c00 0035  ld   $35         ;0519 BCC
              9c01 0072  ld   $72         ;051a NE
              9c02 001c  ld   $1c
              9c03 00cf  ld   $cf         ;051c CALL
              9c04 0046  ld   $46         ;051c 'ValueError'
              9c05 002b  ld   $2b         ;051e STW
              9c06 0036  ld   $36         ;051e 'Active'
              9c07 00cf  ld   $cf         ;0520 CALL
              9c08 003a  ld   $3a         ;0520 'Expression'
              9c09 0021  ld   $21         ;0522 LDW
              9c0a 0068  ld   $68         ;0522 'Address'
              9c0b 00f6  ld   $f6         ;0524 DEEK
              9c0c 00e3  ld   $e3         ;0525 ADDI
              9c0d 0001  ld   $01
              9c0e 00f3  ld   $f3         ;0527 DOKE
              9c0f 0068  ld   $68         ;0527 'Address'
              9c10 00b8  ld   $b8         ;0529 SUBW
              9c11 003c  ld   $3c         ;0529 'Value'
              9c12 0035  ld   $35         ;052b BCC
              9c13 0056  ld   $56         ;052c LE
              9c14 0032  ld   $32
              9c15 00ee  ld   $ee         ;052e LDLW
              9c16 0000  ld   $00
              9c17 002b  ld   $2b         ;0530 STW
              9c18 0036  ld   $36         ;0530 'Active'
              9c19 00cf  ld   $cf         ;0532 CALL
              9c1a 0034  ld   $34         ;0532 'Spaces'
              9c1b 0063  ld   $63         ;0534 POP
              9c1c 00cf  ld   $cf         ;0535 CALL
              9c1d 0058  ld   $58         ;0535 'TestBreak'
              9c1e 00cf  ld   $cf         ;0537 CALL
              9c1f 0062  ld   $62         ;0537 'EndOfLine'
              9c20 00cf  ld   $cf         ;0539 CALL
              9c21 0038  ld   $38         ;0539 'Keyword'
              9c22 0066  ld   $66         ;053b 'f'
              9c23 006f  ld   $6f         ;053c 'o'
              9c24 0072  ld   $72         ;053d 'r'
              9c25 0000  ld   $00         ;053e 0
              9c26 0035  ld   $35         ;053f BCC
              9c27 003f  ld   $3f         ;0540 EQ
              9c28 006c  ld   $6c
              9c29 00cf  ld   $cf         ;0542 CALL
              9c2a 0042  ld   $42         ;0542 'Variable'
              9c2b 002b  ld   $2b         ;0544 STW
              9c2c 0068  ld   $68         ;0544 'Address'
              9c2d 00cf  ld   $cf         ;0546 CALL
              9c2e 0034  ld   $34         ;0546 'Spaces'
              9c2f 00cf  ld   $cf         ;0548 CALL
              9c30 0038  ld   $38         ;0548 'Keyword'
              9c31 003d  ld   $3d         ;054a '='
              9c32 0000  ld   $00         ;054b 0
              9c33 0035  ld   $35         ;054c BCC
              9c34 0072  ld   $72         ;054d NE
              9c35 004f  ld   $4f
              9c36 00cf  ld   $cf         ;054f CALL
              9c37 004a  ld   $4a         ;054f 'SyntaxError'
              9c38 00cf  ld   $cf         ;0551 CALL
              9c39 003a  ld   $3a         ;0551 'Expression'
              9c3a 00f3  ld   $f3         ;0553 DOKE
              9c3b 0068  ld   $68         ;0553 'Address'
              9c3c 00cf  ld   $cf         ;0555 CALL
              9c3d 0038  ld   $38         ;0555 'Keyword'
              9c3e 0074  ld   $74         ;0557 't'
              9c3f 006f  ld   $6f         ;0558 'o'
              9c40 0000  ld   $00         ;0559 0
              9c41 0035  ld   $35         ;055a BCC
              9c42 0072  ld   $72         ;055b NE
              9c43 005d  ld   $5d
              9c44 00cf  ld   $cf         ;055d CALL
              9c45 004a  ld   $4a         ;055d 'SyntaxError'
              9c46 0011  ld   $11         ;055f LDWI
              9c47 0000  ld   $00
              9c48 00ff  ld   $ff
              9c49 0099  ld   $99         ;0562 ADDW
              9c4a 0068  ld   $68         ;0562 'Address'
              9c4b 002b  ld   $2b         ;0564 STW
              9c4c 006a  ld   $6a         ;0564 'j'
              9c4d 0021  ld   $21         ;0566 LDW
              9c4e 0036  ld   $36         ;0566 'Active'
              9c4f 00f3  ld   $f3         ;0568 DOKE
              9c50 006a  ld   $6a         ;0568 'j'
              9c51 00cf  ld   $cf         ;056a CALL
              9c52 003a  ld   $3a         ;056a 'Expression'
              9c53 00cf  ld   $cf         ;056c CALL
              9c54 0062  ld   $62         ;056c 'EndOfLine'
              9c55 00cf  ld   $cf         ;056e CALL
              9c56 0038  ld   $38         ;056e 'Keyword'
              9c57 0061  ld   $61         ;0570 'a'
              9c58 0074  ld   $74         ;0571 't'
              9c59 0000  ld   $00         ;0572 0
              9c5a 0035  ld   $35         ;0573 BCC
              9c5b 003f  ld   $3f         ;0574 EQ
              9c5c 009a  ld   $9a
              9c5d 00cf  ld   $cf         ;0576 CALL
              9c5e 003a  ld   $3a         ;0576 'Expression'
              9c5f 0035  ld   $35         ;0578 BCC
              9c60 0053  ld   $53         ;0579 GE
              9c61 007b  ld   $7b
              9c62 00cf  ld   $cf         ;057b CALL
              9c63 0046  ld   $46         ;057b 'ValueError'
              9c64 005e  ld   $5e         ;057d ST
              9c65 0030  ld   $30         ;057d 'Pos'
              9c66 00cf  ld   $cf         ;057f CALL
              9c67 0038  ld   $38         ;057f 'Keyword'
              9c68 002c  ld   $2c         ;0581 ','
              9c69 0000  ld   $00         ;0582 0
              9c6a 0035  ld   $35         ;0583 BCC
              9c6b 003f  ld   $3f         ;0584 EQ
              9c6c 0098  ld   $98
              9c6d 00cf  ld   $cf         ;0586 CALL
              9c6e 003a  ld   $3a         ;0586 'Expression'
              9c6f 0035  ld   $35         ;0588 BCC
              9c70 0053  ld   $53         ;0589 GE
              9c71 008b  ld   $8b
              9c72 00cf  ld   $cf         ;058b CALL
              9c73 0046  ld   $46         ;058b 'ValueError'
              9c74 00e6  ld   $e6         ;058d SUBI
              9c75 0078  ld   $78
              9c76 0035  ld   $35         ;058f BCC
              9c77 0050  ld   $50         ;0590 LT
              9c78 0092  ld   $92
              9c79 00cf  ld   $cf         ;0592 CALL
              9c7a 0046  ld   $46         ;0592 'ValueError'
              9c7b 00e3  ld   $e3         ;0594 ADDI
              9c7c 00f8  ld   $f8
              9c7d 00e9  ld   $e9         ;0596 LSLW
              9c7e 00ad  ld   $ad         ;0597 PEEK
              9c7f 005e  ld   $5e         ;0598 ST
              9c80 0031  ld   $31         ;0598 'Pos'+1
              9c81 00cf  ld   $cf         ;059a CALL
              9c82 0062  ld   $62         ;059a 'EndOfLine'
              9c83 00cf  ld   $cf         ;059c CALL
              9c84 0038  ld   $38         ;059c 'Keyword'
              9c85 0070  ld   $70         ;059e 'p'
              9c86 0075  ld   $75         ;059f 'u'
              9c87 0074  ld   $74         ;05a0 't'
              9c88 0000  ld   $00         ;05a1 0
              9c89 0035  ld   $35         ;05a2 BCC
              9c8a 003f  ld   $3f         ;05a3 EQ
              9c8b 00a9  ld   $a9
              9c8c 00cf  ld   $cf         ;05a5 CALL
              9c8d 003a  ld   $3a         ;05a5 'Expression'
              9c8e 00cf  ld   $cf         ;05a7 CALL
              9c8f 0050  ld   $50         ;05a7 'PrintChar'
              9c90 00cf  ld   $cf         ;05a9 CALL
              9c91 0062  ld   $62         ;05a9 'EndOfLine'
              9c92 00cf  ld   $cf         ;05ab CALL
              9c93 0038  ld   $38         ;05ab 'Keyword'
              9c94 006d  ld   $6d         ;05ad 'm'
              9c95 006f  ld   $6f         ;05ae 'o'
              9c96 0064  ld   $64         ;05af 'd'
              9c97 0065  ld   $65         ;05b0 'e'
              9c98 0000  ld   $00         ;05b1 0
              9c99 0035  ld   $35         ;05b2 BCC
              9c9a 003f  ld   $3f         ;05b3 EQ
              9c9b 00c7  ld   $c7
              9c9c 00cf  ld   $cf         ;05b5 CALL
              9c9d 003a  ld   $3a         ;05b5 'Expression'
              9c9e 001a  ld   $1a         ;05b7 LD
              9c9f 0021  ld   $21
              9ca0 00e6  ld   $e6         ;05b9 SUBI
              9ca1 0020  ld   $20
              9ca2 0035  ld   $35         ;05bb BCC
              9ca3 0050  ld   $50         ;05bc LT
              9ca4 00c5  ld   $c5
              9ca5 0011  ld   $11         ;05be LDWI
              9ca6 0000  ld   $00
              9ca7 000b  ld   $0b
              9ca8 002b  ld   $2b         ;05c1 STW
              9ca9 0022  ld   $22         ;05c1 '_sysFn'
              9caa 0021  ld   $21         ;05c3 LDW
              9cab 003c  ld   $3c         ;05c3 'Value'
              9cac 00b4  ld   $b4         ;05c5 SYS
              9cad 00e7  ld   $e7
              9cae 00cf  ld   $cf         ;05c7 CALL
              9caf 0062  ld   $62         ;05c7 'EndOfLine'
              9cb0 0011  ld   $11         ;05c9 LDWI
              9cb1 00a0  ld   $a0
              9cb2 0014  ld   $14
              9cb3 00cf  ld   $cf         ;05cc CALL
              9cb4 0018  ld   $18         ;05cc vAC
              9cb5 0059  ld   $59         ;05ce LDI
              9cb6 0000  ld   $00
              9cb7 002b  ld   $2b         ;05d0 STW
              9cb8 003c  ld   $3c         ;05d0 'Value'
              9cb9 00e9  ld   $e9         ;05d2 LSLW
              9cba 00e9  ld   $e9         ;05d3 LSLW
              9cbb 00e9  ld   $e9         ;05d4 LSLW
              9cbc 00e9  ld   $e9         ;05d5 LSLW
              9cbd 002b  ld   $2b         ;05d6 STW
              9cbe 0040  ld   $40         ;05d6 'i'
              9cbf 0093  ld   $93         ;05d8 INC
              9cc0 0036  ld   $36         ;05d8 'Active'
              9cc1 0021  ld   $21         ;05da LDW
              9cc2 0036  ld   $36         ;05da 'Active'
              9cc3 00ad  ld   $ad         ;05dc PEEK
              9cc4 00e6  ld   $e6         ;05dd SUBI
              9cc5 0030  ld   $30
              9cc6 0035  ld   $35         ;05df BCC
              9cc7 0050  ld   $50         ;05e0 LT
              9cc8 00fd  ld   $fd
              9cc9 00e6  ld   $e6         ;05e2 SUBI
              9cca 000a  ld   $0a
              9ccb 0035  ld   $35         ;05e4 BCC
              9ccc 0053  ld   $53         ;05e5 GE
              9ccd 00eb  ld   $eb
              9cce 00e3  ld   $e3         ;05e7 ADDI
              9ccf 000a  ld   $0a
              9cd0 0099  ld   $99         ;05e9 ADDW
              9cd1 0040  ld   $40         ;05e9 'i'
              9cd2 0090  ld   $90         ;05eb BRA
              9cd3 00ce  ld   $ce
              9cd4 0082  ld   $82         ;05ed ANDI
              9cd5 00df  ld   $df
              9cd6 00e6  ld   $e6         ;05ef SUBI
              9cd7 0007  ld   $07
              9cd8 0035  ld   $35         ;05f1 BCC
              9cd9 0050  ld   $50         ;05f2 LT
              9cda 00fd  ld   $fd
              9cdb 00e6  ld   $e6         ;05f4 SUBI
              9cdc 0006  ld   $06
              9cdd 0035  ld   $35         ;05f6 BCC
              9cde 0053  ld   $53         ;05f7 GE
              9cdf 00fd  ld   $fd
              9ce0 00e3  ld   $e3         ;05f9 ADDI
              9ce1 0010  ld   $10
              9ce2 0099  ld   $99         ;05fb ADDW
              9ce3 0040  ld   $40         ;05fb 'i'
              9ce4 0090  ld   $90         ;05fd BRA
              9ce5 00ce  ld   $ce
              9ce6 00ff  ld   $ff         ;05ff RET
              9ce7 0006  ld   $06         ;| RAM segment address (high byte first)
              9ce8 0000  ld   $00         ;|
              9ce9 00fd  ld   $fd         ;| Length (1..256)
              9cea 00cd  ld   $cd         ;0600 DEF
              9ceb 00bb  ld   $bb
              9cec 0075  ld   $75         ;0602 PUSH
              9ced 00cf  ld   $cf         ;0603 CALL
              9cee 0032  ld   $32         ;0603 'Number'
              9cef 0035  ld   $35         ;0605 BCC
              9cf0 0056  ld   $56         ;0606 LE
              9cf1 00b9  ld   $b9
              9cf2 0021  ld   $21         ;0608 LDW
              9cf3 0048  ld   $48         ;0608 'End'
              9cf4 002b  ld   $2b         ;060a STW
              9cf5 0040  ld   $40         ;060a 'i'
              9cf6 002b  ld   $2b         ;060c STW
              9cf7 006a  ld   $6a         ;060c 'j'
              9cf8 00fc  ld   $fc         ;060e XORW
              9cf9 006c  ld   $6c         ;060e 'Begin'
              9cfa 0035  ld   $35         ;0610 BCC
              9cfb fe00  bra  ac          ;+-----------------------------------+
              9cfc fcfd  bra  $9cfd       ;|                                   |
              9cfd 1418  ld   $18,y       ;| Trampoline for page $9c00 lookups |
              9cfe e006  jmp  y,$06       ;|                                   |
              9cff c218  st   [$18]       ;+-----------------------------------+
              9d00 003f  ld   $3f         ;0611 EQ
              9d01 0016  ld   $16
              9d02 0021  ld   $21         ;0613 LDW
              9d03 0048  ld   $48         ;0613 'End'
              9d04 00cf  ld   $cf         ;0615 CALL
              9d05 006e  ld   $6e         ;0615 'PrevBlock'
              9d06 00f6  ld   $f6         ;0617 DEEK
              9d07 00b8  ld   $b8         ;0618 SUBW
              9d08 003c  ld   $3c         ;0618 'Value'
              9d09 0035  ld   $35         ;061a BCC
              9d0a 0050  ld   $50         ;061b LT
              9d0b 005a  ld   $5a
              9d0c 0021  ld   $21         ;061d LDW
              9d0d 006c  ld   $6c         ;061d 'Begin'
              9d0e 002b  ld   $2b         ;061f STW
              9d0f 0040  ld   $40         ;061f 'i'
              9d10 0021  ld   $21         ;0621 LDW
              9d11 0040  ld   $40         ;0621 'i'
              9d12 00f6  ld   $f6         ;0623 DEEK
              9d13 00b8  ld   $b8         ;0624 SUBW
              9d14 003c  ld   $3c         ;0624 'Value'
              9d15 0035  ld   $35         ;0626 BCC
              9d16 0053  ld   $53         ;0627 GE
              9d17 002d  ld   $2d
              9d18 0021  ld   $21         ;0629 LDW
              9d19 0040  ld   $40         ;0629 'i'
              9d1a 00cf  ld   $cf         ;062b CALL
              9d1b 0070  ld   $70         ;062b 'NextBlock'
              9d1c 0090  ld   $90         ;062d BRA
              9d1d 001d  ld   $1d
              9d1e 0035  ld   $35         ;062f BCC
              9d1f 0056  ld   $56         ;0630 LE
              9d20 005a  ld   $5a
              9d21 0021  ld   $21         ;0632 LDW
              9d22 0000  ld   $00
              9d23 00fc  ld   $fc         ;0634 XORW
              9d24 0048  ld   $48         ;0634 'End'
              9d25 0035  ld   $35         ;0636 BCC
              9d26 003f  ld   $3f         ;0637 EQ
              9d27 0058  ld   $58
              9d28 0021  ld   $21         ;0639 LDW
              9d29 006a  ld   $6a         ;0639 'j'
              9d2a 002b  ld   $2b         ;063b STW
              9d2b 0044  ld   $44         ;063b 'k'
              9d2c 00cf  ld   $cf         ;063d CALL
              9d2d 006e  ld   $6e         ;063d 'PrevBlock'
              9d2e 002b  ld   $2b         ;063f STW
              9d2f 006a  ld   $6a         ;063f 'j'
              9d30 002b  ld   $2b         ;0641 STW
              9d31 004e  ld   $4e         ;0641 'tmp'
              9d32 0021  ld   $21         ;0643 LDW
              9d33 004e  ld   $4e         ;0643 'tmp'
              9d34 00ad  ld   $ad         ;0645 PEEK
              9d35 00f0  ld   $f0         ;0646 POKE
              9d36 0044  ld   $44         ;0646 'k'
              9d37 0093  ld   $93         ;0648 INC
              9d38 004e  ld   $4e         ;0648 'tmp'
              9d39 0093  ld   $93         ;064a INC
              9d3a 0044  ld   $44         ;064a 'k'
              9d3b 0021  ld   $21         ;064c LDW
              9d3c 004e  ld   $4e         ;064c 'tmp'
              9d3d 0082  ld   $82         ;064e ANDI
              9d3e 001f  ld   $1f
              9d3f 0035  ld   $35         ;0650 BCC
              9d40 0072  ld   $72         ;0651 NE
              9d41 0041  ld   $41
              9d42 0021  ld   $21         ;0653 LDW
              9d43 006a  ld   $6a         ;0653 'j'
              9d44 00fc  ld   $fc         ;0655 XORW
              9d45 0040  ld   $40         ;0655 'i'
              9d46 0035  ld   $35         ;0657 BCC
              9d47 0072  ld   $72         ;0658 NE
              9d48 0037  ld   $37
              9d49 0059  ld   $59         ;065a LDI
              9d4a 0001  ld   $01
              9d4b 0035  ld   $35         ;065c BCC
              9d4c 003f  ld   $3f         ;065d EQ
              9d4d 0070  ld   $70
              9d4e 0021  ld   $21         ;065f LDW
              9d4f 0000  ld   $00
              9d50 00e6  ld   $e6         ;0661 SUBI
              9d51 0080  ld   $80
              9d52 00e6  ld   $e6         ;0663 SUBI
              9d53 00c0  ld   $c0
              9d54 00fc  ld   $fc         ;0665 XORW
              9d55 0048  ld   $48         ;0665 'End'
              9d56 0035  ld   $35         ;0667 BCC
              9d57 0072  ld   $72         ;0668 NE
              9d58 006a  ld   $6a
              9d59 00cf  ld   $cf         ;066a CALL
              9d5a 004a  ld   $4a         ;066a 'SyntaxError'
              9d5b 0021  ld   $21         ;066c LDW
              9d5c 0048  ld   $48         ;066c 'End'
              9d5d 00cf  ld   $cf         ;066e CALL
              9d5e 0070  ld   $70         ;066e 'NextBlock'
              9d5f 002b  ld   $2b         ;0670 STW
              9d60 0048  ld   $48         ;0670 'End'
              9d61 0021  ld   $21         ;0672 LDW
              9d62 0036  ld   $36         ;0672 'Active'
              9d63 00ad  ld   $ad         ;0674 PEEK
              9d64 0035  ld   $35         ;0675 BCC
              9d65 003f  ld   $3f         ;0676 EQ
              9d66 008a  ld   $8a
              9d67 0021  ld   $21         ;0678 LDW
              9d68 003c  ld   $3c         ;0678 'Value'
              9d69 00f3  ld   $f3         ;067a DOKE
              9d6a 0040  ld   $40         ;067a 'i'
              9d6b 0093  ld   $93         ;067c INC
              9d6c 0040  ld   $40         ;067c 'i'
              9d6d 0093  ld   $93         ;067e INC
              9d6e 0040  ld   $40         ;067e 'i'
              9d6f 0021  ld   $21         ;0680 LDW
              9d70 0036  ld   $36         ;0680 'Active'
              9d71 00ad  ld   $ad         ;0682 PEEK
              9d72 0093  ld   $93         ;0683 INC
              9d73 0036  ld   $36         ;0683 'Active'
              9d74 00f0  ld   $f0         ;0685 POKE
              9d75 0040  ld   $40         ;0685 'i'
              9d76 0035  ld   $35         ;0687 BCC
              9d77 0072  ld   $72         ;0688 NE
              9d78 007c  ld   $7c
              9d79 0090  ld   $90         ;068a BRA
              9d7a 00b7  ld   $b7
              9d7b 0021  ld   $21         ;068c LDW
              9d7c 0040  ld   $40         ;068c 'i'
              9d7d 002b  ld   $2b         ;068e STW
              9d7e 006a  ld   $6a         ;068e 'j'
              9d7f 00fc  ld   $fc         ;0690 XORW
              9d80 0048  ld   $48         ;0690 'End'
              9d81 0035  ld   $35         ;0692 BCC
              9d82 003f  ld   $3f         ;0693 EQ
              9d83 00b1  ld   $b1
              9d84 0021  ld   $21         ;0695 LDW
              9d85 006a  ld   $6a         ;0695 'j'
              9d86 00cf  ld   $cf         ;0697 CALL
              9d87 0070  ld   $70         ;0697 'NextBlock'
              9d88 002b  ld   $2b         ;0699 STW
              9d89 006a  ld   $6a         ;0699 'j'
              9d8a 002b  ld   $2b         ;069b STW
              9d8b 004e  ld   $4e         ;069b 'tmp'
              9d8c 0021  ld   $21         ;069d LDW
              9d8d 004e  ld   $4e         ;069d 'tmp'
              9d8e 00ad  ld   $ad         ;069f PEEK
              9d8f 00f0  ld   $f0         ;06a0 POKE
              9d90 0040  ld   $40         ;06a0 'i'
              9d91 0093  ld   $93         ;06a2 INC
              9d92 004e  ld   $4e         ;06a2 'tmp'
              9d93 0093  ld   $93         ;06a4 INC
              9d94 0040  ld   $40         ;06a4 'i'
              9d95 0021  ld   $21         ;06a6 LDW
              9d96 004e  ld   $4e         ;06a6 'tmp'
              9d97 0082  ld   $82         ;06a8 ANDI
              9d98 001f  ld   $1f
              9d99 0035  ld   $35         ;06aa BCC
              9d9a 0072  ld   $72         ;06ab NE
              9d9b 009b  ld   $9b
              9d9c 0021  ld   $21         ;06ad LDW
              9d9d 006a  ld   $6a         ;06ad 'j'
              9d9e 002b  ld   $2b         ;06af STW
              9d9f 0040  ld   $40         ;06af 'i'
              9da0 0090  ld   $90         ;06b1 BRA
              9da1 008e  ld   $8e
              9da2 0021  ld   $21         ;06b3 LDW
              9da3 0048  ld   $48         ;06b3 'End'
              9da4 00cf  ld   $cf         ;06b5 CALL
              9da5 006e  ld   $6e         ;06b5 'PrevBlock'
              9da6 002b  ld   $2b         ;06b7 STW
              9da7 0048  ld   $48         ;06b7 'End'
              9da8 0021  ld   $21         ;06b9 LDW
              9da9 003c  ld   $3c         ;06b9 'Value'
              9daa 0063  ld   $63         ;06bb POP
              9dab 00ff  ld   $ff         ;06bc RET
              9dac 002b  ld   $2b         ;06bd STW
              9dad 0072  ld   $72         ;06bd 'Insert'
              9dae 0011  ld   $11         ;06bf LDWI
              9daf 003f  ld   $3f
              9db0 0035  ld   $35
              9db1 002b  ld   $2b         ;06c2 STW
              9db2 002a  ld   $2a
              9db3 0011  ld   $11         ;06c4 LDWI
              9db4 00a0  ld   $a0
              9db5 0018  ld   $18
              9db6 002b  ld   $2b         ;06c7 STW
              9db7 005a  ld   $5a         ;06c7 'Newline'
              9db8 00cf  ld   $cf         ;06c9 CALL
              9db9 0018  ld   $18         ;06c9 vAC
              9dba 00cf  ld   $cf         ;06cb CALL
              9dbb 0052  ld   $52         ;06cb 'PrintS'
              9dbc 002a  ld   $2a         ;06cd '*'
              9dbd 002a  ld   $2a         ;06ce '*'
              9dbe 002a  ld   $2a         ;06cf '*'
              9dbf 0020  ld   $20         ;06d0 ' '
              9dc0 0054  ld   $54         ;06d1 'T'
              9dc1 0069  ld   $69         ;06d2 'i'
              9dc2 006e  ld   $6e         ;06d3 'n'
              9dc3 0079  ld   $79         ;06d4 'y'
              9dc4 0020  ld   $20         ;06d5 ' '
              9dc5 0042  ld   $42         ;06d6 'B'
              9dc6 0041  ld   $41         ;06d7 'A'
              9dc7 0053  ld   $53         ;06d8 'S'
              9dc8 0049  ld   $49         ;06d9 'I'
              9dc9 0043  ld   $43         ;06da 'C'
              9dca 0020  ld   $20         ;06db ' '
              9dcb 0044  ld   $44         ;06dc 'D'
              9dcc 0045  ld   $45         ;06dd 'E'
              9dcd 0056  ld   $56         ;06de 'V'
              9dce 0000  ld   $00         ;06df 0
              9dcf 00cf  ld   $cf         ;06e0 CALL
              9dd0 005a  ld   $5a         ;06e0 'Newline'
              9dd1 0011  ld   $11         ;06e2 LDWI
              9dd2 00a0  ld   $a0
              9dd3 0008  ld   $08
              9dd4 002b  ld   $2b         ;06e5 STW
              9dd5 001a  ld   $1a         ;06e5 '_vLR'
              9dd6 00ff  ld   $ff         ;06e7 RET
              9dd7 0059  ld   $59         ;06e8 LDI
              9dd8 0000  ld   $00
              9dd9 00f0  ld   $f0         ;06ea POKE
              9dda 0036  ld   $36         ;06ea 'Active'
              9ddb 0059  ld   $59         ;06ec LDI
              9ddc 0020  ld   $20
              9ddd 00cf  ld   $cf         ;06ee CALL
              9dde 0050  ld   $50         ;06ee 'PrintChar'
              9ddf 00cf  ld   $cf         ;06f0 CALL
              9de0 005a  ld   $5a         ;06f0 'Newline'
              9de1 0059  ld   $59         ;06f2 LDI
              9de2 00a2  ld   $a2
              9de3 005e  ld   $5e         ;06f4 ST
              9de4 0036  ld   $36         ;06f4 'Active'
              9de5 00cf  ld   $cf         ;06f6 CALL
              9de6 0034  ld   $34         ;06f6 'Spaces'
              9de7 0021  ld   $21         ;06f8 LDW
              9de8 0036  ld   $36         ;06f8 'Active'
              9de9 00ad  ld   $ad         ;06fa PEEK
              9dea 0063  ld   $63         ;06fb POP
              9deb 00ff  ld   $ff         ;06fc RET
              9dec 0008  ld   $08         ;| RAM segment address (high byte first)
              9ded 00a0  ld   $a0         ;|
              9dee 005f  ld   $5f         ;| Length (1..256)
              9def 00cd  ld   $cd         ;08a0 DEF
              9df0 00b6  ld   $b6
              9df1 0088  ld   $88         ;08a2 ORI
              9df2 001f  ld   $1f
              9df3 00e3  ld   $e3         ;08a4 ADDI
              9df4 0001  ld   $01
              9df5 002b  ld   $2b         ;08a6 STW
              9df6 004e  ld   $4e         ;08a6 'tmp'
              9df7 0035  ld   $35         ;08a8 BCC
              9df8 0056  ld   $56         ;08a9 LE
              9df9 00b3  ld   $b3
              9dfa 0082  ld   $82         ;08ab ANDI
              9dfb fe00  bra  ac          ;+-----------------------------------+
              9dfc fcfd  bra  $9dfd       ;|                                   |
              9dfd 1418  ld   $18,y       ;| Trampoline for page $9d00 lookups |
              9dfe e006  jmp  y,$06       ;|                                   |
              9dff c218  st   [$18]       ;+-----------------------------------+
              9e00 00e0  ld   $e0
              9e01 0035  ld   $35         ;08ad BCC
              9e02 0072  ld   $72         ;08ae NE
              9e03 00b3  ld   $b3
              9e04 0021  ld   $21         ;08b0 LDW
              9e05 004e  ld   $4e         ;08b0 'tmp'
              9e06 00e3  ld   $e3         ;08b2 ADDI
              9e07 00a0  ld   $a0
              9e08 00ff  ld   $ff         ;08b4 RET
              9e09 0021  ld   $21         ;08b5 LDW
              9e0a 004e  ld   $4e         ;08b5 'tmp'
              9e0b 00ff  ld   $ff         ;08b7 RET
              9e0c 002b  ld   $2b         ;08b8 STW
              9e0d 0070  ld   $70         ;08b8 'NextBlock'
              9e0e 00cd  ld   $cd         ;08ba DEF
              9e0f 00ce  ld   $ce
              9e10 00e6  ld   $e6         ;08bc SUBI
              9e11 0020  ld   $20
              9e12 002b  ld   $2b         ;08be STW
              9e13 004e  ld   $4e         ;08be 'tmp'
              9e14 0035  ld   $35         ;08c0 BCC
              9e15 0050  ld   $50         ;08c1 LT
              9e16 00cb  ld   $cb
              9e17 0082  ld   $82         ;08c3 ANDI
              9e18 0060  ld   $60
              9e19 0035  ld   $35         ;08c5 BCC
              9e1a 0072  ld   $72         ;08c6 NE
              9e1b 00cb  ld   $cb
              9e1c 0021  ld   $21         ;08c8 LDW
              9e1d 004e  ld   $4e         ;08c8 'tmp'
              9e1e 00e6  ld   $e6         ;08ca SUBI
              9e1f 00a0  ld   $a0
              9e20 00ff  ld   $ff         ;08cc RET
              9e21 0021  ld   $21         ;08cd LDW
              9e22 004e  ld   $4e         ;08cd 'tmp'
              9e23 00ff  ld   $ff         ;08cf RET
              9e24 002b  ld   $2b         ;08d0 STW
              9e25 006e  ld   $6e         ;08d0 'PrevBlock'
              9e26 00cd  ld   $cd         ;08d2 DEF
              9e27 00fa  ld   $fa
              9e28 0021  ld   $21         ;08d4 LDW
              9e29 006c  ld   $6c         ;08d4 'Begin'
              9e2a 002b  ld   $2b         ;08d6 STW
              9e2b 0040  ld   $40         ;08d6 'i'
              9e2c 00fc  ld   $fc         ;08d8 XORW
              9e2d 0048  ld   $48         ;08d8 'End'
              9e2e 0035  ld   $35         ;08da BCC
              9e2f 003f  ld   $3f         ;08db EQ
              9e30 00f3  ld   $f3
              9e31 0021  ld   $21         ;08dd LDW
              9e32 0040  ld   $40         ;08dd 'i'
              9e33 00f6  ld   $f6         ;08df DEEK
              9e34 00fc  ld   $fc         ;08e0 XORW
              9e35 003c  ld   $3c         ;08e0 'Value'
              9e36 0035  ld   $35         ;08e2 BCC
              9e37 0072  ld   $72         ;08e3 NE
              9e38 00ed  ld   $ed
              9e39 0021  ld   $21         ;08e5 LDW
              9e3a 0040  ld   $40         ;08e5 'i'
              9e3b 00e3  ld   $e3         ;08e7 ADDI
              9e3c 0002  ld   $02
              9e3d 002b  ld   $2b         ;08e9 STW
              9e3e 0036  ld   $36         ;08e9 'Active'
              9e3f 00cf  ld   $cf         ;08eb CALL
              9e40 0058  ld   $58         ;08eb 'TestBreak'
              9e41 00cf  ld   $cf         ;08ed CALL
              9e42 0066  ld   $66         ;08ed 'Statements'
              9e43 0021  ld   $21         ;08ef LDW
              9e44 0040  ld   $40         ;08ef 'i'
              9e45 00cf  ld   $cf         ;08f1 CALL
              9e46 0070  ld   $70         ;08f1 'NextBlock'
              9e47 0090  ld   $90         ;08f3 BRA
              9e48 00d4  ld   $d4
              9e49 00cf  ld   $cf         ;08f5 CALL
              9e4a 0056  ld   $56         ;08f5 'Prompt'
              9e4b 004c  ld   $4c         ;08f7 'L'
              9e4c 0069  ld   $69         ;08f8 'i'
              9e4d 006e  ld   $6e         ;08f9 'n'
              9e4e 0065  ld   $65         ;08fa 'e'
              9e4f 0000  ld   $00         ;08fb 0
              9e50 0093  ld   $93         ;08fc INC
              9e51 001b  ld   $1b
              9e52 00ff  ld   $ff         ;08fe RET
              9e53 0009  ld   $09         ;| RAM segment address (high byte first)
              9e54 00a0  ld   $a0         ;|
              9e55 005e  ld   $5e         ;| Length (1..256)
              9e56 002b  ld   $2b         ;09a0 STW
              9e57 005e  ld   $5e         ;09a0 'GotoValue'
              9e58 00cd  ld   $cd         ;09a2 DEF
              9e59 00de  ld   $de
              9e5a 0075  ld   $75         ;09a4 PUSH
              9e5b 0035  ld   $35         ;09a5 BCC
              9e5c 0053  ld   $53         ;09a6 GE
              9e5d 00b0  ld   $b0
              9e5e 0059  ld   $59         ;09a8 LDI
              9e5f 0000  ld   $00
              9e60 00b8  ld   $b8         ;09aa SUBW
              9e61 003c  ld   $3c         ;09aa 'Value'
              9e62 002b  ld   $2b         ;09ac STW
              9e63 003c  ld   $3c         ;09ac 'Value'
              9e64 0059  ld   $59         ;09ae LDI
              9e65 002d  ld   $2d
              9e66 00cf  ld   $cf         ;09b0 CALL
              9e67 0050  ld   $50         ;09b0 'PrintChar'
              9e68 0059  ld   $59         ;09b2 LDI
              9e69 0000  ld   $00
              9e6a 002b  ld   $2b         ;09b4 STW
              9e6b 0044  ld   $44         ;09b4 'k'
              9e6c 0021  ld   $21         ;09b6 LDW
              9e6d 003c  ld   $3c         ;09b6 'Value'
              9e6e 0035  ld   $35         ;09b8 BCC
              9e6f 0053  ld   $53         ;09b9 GE
              9e70 00c4  ld   $c4
              9e71 0011  ld   $11         ;09bb LDWI
              9e72 00d0  ld   $d0
              9e73 008a  ld   $8a
              9e74 0099  ld   $99         ;09be ADDW
              9e75 003c  ld   $3c         ;09be 'Value'
              9e76 002b  ld   $2b         ;09c0 STW
              9e77 003c  ld   $3c         ;09c0 'Value'
              9e78 0059  ld   $59         ;09c2 LDI
              9e79 0003  ld   $03
              9e7a 002b  ld   $2b         ;09c4 STW
              9e7b 0044  ld   $44         ;09c4 'k'
              9e7c 0011  ld   $11         ;09c6 LDWI
              9e7d 0010  ld   $10
              9e7e 0027  ld   $27
              9e7f 00cf  ld   $cf         ;09c9 CALL
              9e80 0074  ld   $74         ;09c9 'PrintDigit'
              9e81 0011  ld   $11         ;09cb LDWI
              9e82 00e8  ld   $e8
              9e83 0003  ld   $03
              9e84 00cf  ld   $cf         ;09ce CALL
              9e85 0074  ld   $74         ;09ce 'PrintDigit'
              9e86 0059  ld   $59         ;09d0 LDI
              9e87 0064  ld   $64
              9e88 00cf  ld   $cf         ;09d2 CALL
              9e89 0074  ld   $74         ;09d2 'PrintDigit'
              9e8a 0059  ld   $59         ;09d4 LDI
              9e8b 000a  ld   $0a
              9e8c 00cf  ld   $cf         ;09d6 CALL
              9e8d 0074  ld   $74         ;09d6 'PrintDigit'
              9e8e 0059  ld   $59         ;09d8 LDI
              9e8f 0030  ld   $30
              9e90 0099  ld   $99         ;09da ADDW
              9e91 003c  ld   $3c         ;09da 'Value'
              9e92 00cf  ld   $cf         ;09dc CALL
              9e93 0050  ld   $50         ;09dc 'PrintChar'
              9e94 0063  ld   $63         ;09de POP
              9e95 00ff  ld   $ff         ;09df RET
              9e96 002b  ld   $2b         ;09e0 STW
              9e97 0076  ld   $76         ;09e0 'PrintValue'
              9e98 00cd  ld   $cd         ;09e2 DEF
              9e99 00ea  ld   $ea
              9e9a 00cf  ld   $cf         ;09e4 CALL
              9e9b 0056  ld   $56         ;09e4 'Prompt'
              9e9c 0053  ld   $53         ;09e6 'S'
              9e9d 0074  ld   $74         ;09e7 't'
              9e9e 0061  ld   $61         ;09e8 'a'
              9e9f 0063  ld   $63         ;09e9 'c'
              9ea0 006b  ld   $6b         ;09ea 'k'
              9ea1 0000  ld   $00         ;09eb 0
              9ea2 002b  ld   $2b         ;09ec STW
              9ea3 0060  ld   $60         ;09ec 'StackError'
              9ea4 00cd  ld   $cd         ;09ee DEF
              9ea5 00f7  ld   $f7
              9ea6 00cf  ld   $cf         ;09f0 CALL
              9ea7 0056  ld   $56         ;09f0 'Prompt'
              9ea8 0053  ld   $53         ;09f2 'S'
              9ea9 0079  ld   $79         ;09f3 'y'
              9eaa 006e  ld   $6e         ;09f4 'n'
              9eab 0074  ld   $74         ;09f5 't'
              9eac 0061  ld   $61         ;09f6 'a'
              9ead 0078  ld   $78         ;09f7 'x'
              9eae 0000  ld   $00         ;09f8 0
              9eaf 002b  ld   $2b         ;09f9 STW
              9eb0 004a  ld   $4a         ;09f9 'SyntaxError'
              9eb1 0093  ld   $93         ;09fb INC
              9eb2 001b  ld   $1b
              9eb3 00ff  ld   $ff         ;09fd RET
              9eb4 000a  ld   $0a         ;| RAM segment address (high byte first)
              9eb5 00a0  ld   $a0         ;|
              9eb6 005f  ld   $5f         ;| Length (1..256)
              9eb7 00cd  ld   $cd         ;0aa0 DEF
              9eb8 00d2  ld   $d2
              9eb9 0021  ld   $21         ;0aa2 LDW
              9eba 001a  ld   $1a
              9ebb 002b  ld   $2b         ;0aa4 STW
              9ebc 004e  ld   $4e         ;0aa4 'tmp'
              9ebd 0021  ld   $21         ;0aa6 LDW
              9ebe 0036  ld   $36         ;0aa6 'Active'
              9ebf 002b  ld   $2b         ;0aa8 STW
              9ec0 006a  ld   $6a         ;0aa8 'j'
              9ec1 0021  ld   $21         ;0aaa LDW
              9ec2 004e  ld   $4e         ;0aaa 'tmp'
              9ec3 00ad  ld   $ad         ;0aac PEEK
              9ec4 0093  ld   $93         ;0aad INC
              9ec5 004e  ld   $4e         ;0aad 'tmp'
              9ec6 0035  ld   $35         ;0aaf BCC
              9ec7 003f  ld   $3f         ;0ab0 EQ
              9ec8 00ce  ld   $ce
              9ec9 002b  ld   $2b         ;0ab2 STW
              9eca 0040  ld   $40         ;0ab2 'i'
              9ecb 0021  ld   $21         ;0ab4 LDW
              9ecc 0036  ld   $36         ;0ab4 'Active'
              9ecd 00ad  ld   $ad         ;0ab6 PEEK
              9ece 0088  ld   $88         ;0ab7 ORI
              9ecf 0020  ld   $20
              9ed0 00fc  ld   $fc         ;0ab9 XORW
              9ed1 0040  ld   $40         ;0ab9 'i'
              9ed2 0035  ld   $35         ;0abb BCC
              9ed3 0072  ld   $72         ;0abc NE
              9ed4 00c0  ld   $c0
              9ed5 0093  ld   $93         ;0abe INC
              9ed6 0036  ld   $36         ;0abe 'Active'
              9ed7 0090  ld   $90         ;0ac0 BRA
              9ed8 00a8  ld   $a8
              9ed9 0021  ld   $21         ;0ac2 LDW
              9eda 006a  ld   $6a         ;0ac2 'j'
              9edb 002b  ld   $2b         ;0ac4 STW
              9edc 0036  ld   $36         ;0ac4 'Active'
              9edd 0021  ld   $21         ;0ac6 LDW
              9ede 004e  ld   $4e         ;0ac6 'tmp'
              9edf 00ad  ld   $ad         ;0ac8 PEEK
              9ee0 0093  ld   $93         ;0ac9 INC
              9ee1 004e  ld   $4e         ;0ac9 'tmp'
              9ee2 0035  ld   $35         ;0acb BCC
              9ee3 0072  ld   $72         ;0acc NE
              9ee4 00c4  ld   $c4
              9ee5 00cf  ld   $cf         ;0ace CALL
              9ee6 004e  ld   $4e         ;0ace 'tmp'
              9ee7 00cf  ld   $cf         ;0ad0 CALL
              9ee8 0034  ld   $34         ;0ad0 'Spaces'
              9ee9 00cf  ld   $cf         ;0ad2 CALL
              9eea 004e  ld   $4e         ;0ad2 'tmp'
              9eeb 002b  ld   $2b         ;0ad4 STW
              9eec 0038  ld   $38         ;0ad4 'Keyword'
              9eed 00cd  ld   $cd         ;0ad6 DEF
              9eee 00fa  ld   $fa
              9eef 0011  ld   $11         ;0ad8 LDWI
              9ef0 0000  ld   $00
              9ef1 0080  ld   $80
              9ef2 002b  ld   $2b         ;0adb STW
              9ef3 003c  ld   $3c         ;0adb 'Value'
              9ef4 00e9  ld   $e9         ;0add LSLW
              9ef5 00e9  ld   $e9         ;0ade LSLW
              9ef6 0099  ld   $99         ;0adf ADDW
              9ef7 003c  ld   $3c         ;0adf 'Value'
              9ef8 00e9  ld   $e9         ;0ae1 LSLW
              9ef9 002b  ld   $2b         ;0ae2 STW
              9efa 0040  ld   $40         ;0ae2 'i'
              9efb fe00  bra  ac          ;+-----------------------------------+
              9efc fcfd  bra  $9efd       ;|                                   |
              9efd 1418  ld   $18,y       ;| Trampoline for page $9e00 lookups |
              9efe e006  jmp  y,$06       ;|                                   |
              9eff c218  st   [$18]       ;+-----------------------------------+
              9f00 0021  ld   $21         ;0ae4 LDW
              9f01 0036  ld   $36         ;0ae4 'Active'
              9f02 00ad  ld   $ad         ;0ae6 PEEK
              9f03 00e6  ld   $e6         ;0ae7 SUBI
              9f04 0030  ld   $30
              9f05 0035  ld   $35         ;0ae9 BCC
              9f06 0050  ld   $50         ;0aea LT
              9f07 00f7  ld   $f7
              9f08 00e6  ld   $e6         ;0aec SUBI
              9f09 000a  ld   $0a
              9f0a 0035  ld   $35         ;0aee BCC
              9f0b 0053  ld   $53         ;0aef GE
              9f0c 00f7  ld   $f7
              9f0d 00e3  ld   $e3         ;0af1 ADDI
              9f0e 000a  ld   $0a
              9f0f 0099  ld   $99         ;0af3 ADDW
              9f10 0040  ld   $40         ;0af3 'i'
              9f11 0093  ld   $93         ;0af5 INC
              9f12 0036  ld   $36         ;0af5 'Active'
              9f13 0090  ld   $90         ;0af7 BRA
              9f14 00d9  ld   $d9
              9f15 0021  ld   $21         ;0af9 LDW
              9f16 003c  ld   $3c         ;0af9 'Value'
              9f17 00ff  ld   $ff         ;0afb RET
              9f18 0093  ld   $93         ;0afc INC
              9f19 001b  ld   $1b
              9f1a 00ff  ld   $ff         ;0afe RET
              9f1b 000b  ld   $0b         ;| RAM segment address (high byte first)
              9f1c 00a0  ld   $a0         ;|
              9f1d 0060  ld   $60         ;| Length (1..256)
              9f1e 002b  ld   $2b         ;0ba0 STW
              9f1f 0032  ld   $32         ;0ba0 'Number'
              9f20 00cd  ld   $cd         ;0ba2 DEF
              9f21 00d1  ld   $d1
              9f22 0021  ld   $21         ;0ba4 LDW
              9f23 0036  ld   $36         ;0ba4 'Active'
              9f24 00ad  ld   $ad         ;0ba6 PEEK
              9f25 0035  ld   $35         ;0ba7 BCC
              9f26 003f  ld   $3f         ;0ba8 EQ
              9f27 00b3  ld   $b3
              9f28 008c  ld   $8c         ;0baa XORI
              9f29 003a  ld   $3a
              9f2a 0035  ld   $35         ;0bac BCC
              9f2b 0072  ld   $72         ;0bad NE
              9f2c 00b1  ld   $b1
              9f2d 0093  ld   $93         ;0baf INC
              9f2e 0036  ld   $36         ;0baf 'Active'
              9f2f 00cf  ld   $cf         ;0bb1 CALL
              9f30 0066  ld   $66         ;0bb1 'Statements'
              9f31 00cf  ld   $cf         ;0bb3 CALL
              9f32 004a  ld   $4a         ;0bb3 'SyntaxError'
              9f33 0021  ld   $21         ;0bb5 LDW
              9f34 0036  ld   $36         ;0bb5 'Active'
              9f35 00cf  ld   $cf         ;0bb7 CALL
              9f36 0070  ld   $70         ;0bb7 'NextBlock'
              9f37 002b  ld   $2b         ;0bb9 STW
              9f38 0036  ld   $36         ;0bb9 'Active'
              9f39 00fc  ld   $fc         ;0bbb XORW
              9f3a 0048  ld   $48         ;0bbb 'End'
              9f3b 0035  ld   $35         ;0bbd BCC
              9f3c 003f  ld   $3f         ;0bbe EQ
              9f3d 00ce  ld   $ce
              9f3e 0011  ld   $11         ;0bc0 LDWI
              9f3f 00c0  ld   $c0
              9f40 001b  ld   $1b
              9f41 00fc  ld   $fc         ;0bc3 XORW
              9f42 0036  ld   $36         ;0bc3 'Active'
              9f43 0035  ld   $35         ;0bc5 BCC
              9f44 003f  ld   $3f         ;0bc6 EQ
              9f45 00ce  ld   $ce
              9f46 0021  ld   $21         ;0bc8 LDW
              9f47 0036  ld   $36         ;0bc8 'Active'
              9f48 00e3  ld   $e3         ;0bca ADDI
              9f49 0002  ld   $02
              9f4a 002b  ld   $2b         ;0bcc STW
              9f4b 0036  ld   $36         ;0bcc 'Active'
              9f4c 00cf  ld   $cf         ;0bce CALL
              9f4d 0066  ld   $66         ;0bce 'Statements'
              9f4e 00cf  ld   $cf         ;0bd0 CALL
              9f4f 0056  ld   $56         ;0bd0 'Prompt'
              9f50 0000  ld   $00         ;0bd2 0
              9f51 002b  ld   $2b         ;0bd3 STW
              9f52 0062  ld   $62         ;0bd3 'EndOfLine'
              9f53 00cd  ld   $cd         ;0bd5 DEF
              9f54 00fb  ld   $fb
              9f55 0021  ld   $21         ;0bd7 LDW
              9f56 0000  ld   $00
              9f57 002b  ld   $2b         ;0bd9 STW
              9f58 0040  ld   $40         ;0bd9 'i'
              9f59 0059  ld   $59         ;0bdb LDI
              9f5a 0002  ld   $02
              9f5b 002b  ld   $2b         ;0bdd STW
              9f5c 006a  ld   $6a         ;0bdd 'j'
              9f5d 0021  ld   $21         ;0bdf LDW
              9f5e 0040  ld   $40         ;0bdf 'i'
              9f5f 00e6  ld   $e6         ;0be1 SUBI
              9f60 0036  ld   $36
              9f61 002b  ld   $2b         ;0be3 STW
              9f62 0040  ld   $40         ;0be3 'i'
              9f63 0059  ld   $59         ;0be5 LDI
              9f64 0000  ld   $00
              9f65 00f0  ld   $f0         ;0be7 POKE
              9f66 0040  ld   $40         ;0be7 'i'
              9f67 0093  ld   $93         ;0be9 INC
              9f68 0040  ld   $40         ;0be9 'i'
              9f69 001a  ld   $1a         ;0beb LD
              9f6a 0040  ld   $40         ;0beb 'i'
              9f6b 0035  ld   $35         ;0bed BCC
              9f6c 0072  ld   $72         ;0bee NE
              9f6d 00e3  ld   $e3
              9f6e 0021  ld   $21         ;0bf0 LDW
              9f6f 006a  ld   $6a         ;0bf0 'j'
              9f70 00e6  ld   $e6         ;0bf2 SUBI
              9f71 0001  ld   $01
              9f72 0035  ld   $35         ;0bf4 BCC
              9f73 0072  ld   $72         ;0bf5 NE
              9f74 00db  ld   $db
              9f75 0011  ld   $11         ;0bf7 LDWI
              9f76 00c0  ld   $c0
              9f77 001b  ld   $1b
              9f78 002b  ld   $2b         ;0bfa STW
              9f79 006c  ld   $6c         ;0bfa 'Begin'
              9f7a 00ff  ld   $ff         ;0bfc RET
              9f7b 0093  ld   $93         ;0bfd INC
              9f7c 001b  ld   $1b
              9f7d 00ff  ld   $ff         ;0bff RET
              9f7e 000c  ld   $0c         ;| RAM segment address (high byte first)
              9f7f 00a0  ld   $a0         ;|
              9f80 0060  ld   $60         ;| Length (1..256)
              9f81 002b  ld   $2b         ;0ca0 STW
              9f82 0078  ld   $78         ;0ca0 'Clear'
              9f83 00cd  ld   $cd         ;0ca2 DEF
              9f84 00ed  ld   $ed
              9f85 0075  ld   $75         ;0ca4 PUSH
              9f86 001a  ld   $1a         ;0ca5 LD
              9f87 001c  ld   $1c
              9f88 00e6  ld   $e6         ;0ca7 SUBI
              9f89 008d  ld   $8d
              9f8a 0035  ld   $35         ;0ca9 BCC
              9f8b 0053  ld   $53         ;0caa GE
              9f8c 00ac  ld   $ac
              9f8d 00cf  ld   $cf         ;0cac CALL
              9f8e 0060  ld   $60         ;0cac 'StackError'
              9f8f 00cf  ld   $cf         ;0cae CALL
              9f90 0038  ld   $38         ;0cae 'Keyword'
              9f91 002d  ld   $2d         ;0cb0 '-'
              9f92 0000  ld   $00         ;0cb1 0
              9f93 0035  ld   $35         ;0cb2 BCC
              9f94 003f  ld   $3f         ;0cb3 EQ
              9f95 00bb  ld   $bb
              9f96 00cf  ld   $cf         ;0cb5 CALL
              9f97 007a  ld   $7a         ;0cb5 'Term'
              9f98 0059  ld   $59         ;0cb7 LDI
              9f99 0000  ld   $00
              9f9a 00b8  ld   $b8         ;0cb9 SUBW
              9f9b 003c  ld   $3c         ;0cb9 'Value'
              9f9c 0090  ld   $90         ;0cbb BRA
              9f9d 00c1  ld   $c1
              9f9e 00cf  ld   $cf         ;0cbd CALL
              9f9f 0038  ld   $38         ;0cbd 'Keyword'
              9fa0 002b  ld   $2b         ;0cbf '+'
              9fa1 0000  ld   $00         ;0cc0 0
              9fa2 00cf  ld   $cf         ;0cc1 CALL
              9fa3 007a  ld   $7a         ;0cc1 'Term'
              9fa4 0075  ld   $75         ;0cc3 PUSH
              9fa5 00ec  ld   $ec         ;0cc4 STLW
              9fa6 0000  ld   $00
              9fa7 00cf  ld   $cf         ;0cc6 CALL
              9fa8 0038  ld   $38         ;0cc6 'Keyword'
              9fa9 002b  ld   $2b         ;0cc8 '+'
              9faa 0000  ld   $00         ;0cc9 0
              9fab 0035  ld   $35         ;0cca BCC
              9fac 003f  ld   $3f         ;0ccb EQ
              9fad 00d5  ld   $d5
              9fae 00cf  ld   $cf         ;0ccd CALL
              9faf 007a  ld   $7a         ;0ccd 'Term'
              9fb0 00ee  ld   $ee         ;0ccf LDLW
              9fb1 0000  ld   $00
              9fb2 0099  ld   $99         ;0cd1 ADDW
              9fb3 003c  ld   $3c         ;0cd1 'Value'
              9fb4 00ec  ld   $ec         ;0cd3 STLW
              9fb5 0000  ld   $00
              9fb6 0090  ld   $90         ;0cd5 BRA
              9fb7 00c4  ld   $c4
              9fb8 00cf  ld   $cf         ;0cd7 CALL
              9fb9 0038  ld   $38         ;0cd7 'Keyword'
              9fba 002d  ld   $2d         ;0cd9 '-'
              9fbb 0000  ld   $00         ;0cda 0
              9fbc 0035  ld   $35         ;0cdb BCC
              9fbd 003f  ld   $3f         ;0cdc EQ
              9fbe 00e6  ld   $e6
              9fbf 00cf  ld   $cf         ;0cde CALL
              9fc0 007a  ld   $7a         ;0cde 'Term'
              9fc1 00ee  ld   $ee         ;0ce0 LDLW
              9fc2 0000  ld   $00
              9fc3 00b8  ld   $b8         ;0ce2 SUBW
              9fc4 003c  ld   $3c         ;0ce2 'Value'
              9fc5 00ec  ld   $ec         ;0ce4 STLW
              9fc6 0000  ld   $00
              9fc7 0090  ld   $90         ;0ce6 BRA
              9fc8 00c4  ld   $c4
              9fc9 00ee  ld   $ee         ;0ce8 LDLW
              9fca 0000  ld   $00
              9fcb 002b  ld   $2b         ;0cea STW
              9fcc 003c  ld   $3c         ;0cea 'Value'
              9fcd 0063  ld   $63         ;0cec POP
              9fce 0063  ld   $63         ;0ced POP
              9fcf 00ff  ld   $ff         ;0cee RET
              9fd0 002b  ld   $2b         ;0cef STW
              9fd1 003a  ld   $3a         ;0cef 'Expression'
              9fd2 00cd  ld   $cd         ;0cf1 DEF
              9fd3 00f9  ld   $f9
              9fd4 00cf  ld   $cf         ;0cf3 CALL
              9fd5 0056  ld   $56         ;0cf3 'Prompt'
              9fd6 0056  ld   $56         ;0cf5 'V'
              9fd7 0061  ld   $61         ;0cf6 'a'
              9fd8 006c  ld   $6c         ;0cf7 'l'
              9fd9 0075  ld   $75         ;0cf8 'u'
              9fda 0065  ld   $65         ;0cf9 'e'
              9fdb 0000  ld   $00         ;0cfa 0
              9fdc 002b  ld   $2b         ;0cfb STW
              9fdd 0046  ld   $46         ;0cfb 'ValueError'
              9fde 0093  ld   $93         ;0cfd INC
              9fdf 001b  ld   $1b
              9fe0 00ff  ld   $ff         ;0cff RET
              9fe1 000d  ld   $0d         ;| RAM segment address (high byte first)
              9fe2 00a0  ld   $a0         ;|
              9fe3 0060  ld   $60         ;| Length (1..256)
              9fe4 00cd  ld   $cd         ;0da0 DEF
              9fe5 00e4  ld   $e4
              9fe6 0075  ld   $75         ;0da2 PUSH
              9fe7 00cf  ld   $cf         ;0da3 CALL
              9fe8 004c  ld   $4c         ;0da3 'Factor'
              9fe9 0075  ld   $75         ;0da5 PUSH
              9fea 0021  ld   $21         ;0da6 LDW
              9feb 003c  ld   $3c         ;0da6 'Value'
              9fec 00ec  ld   $ec         ;0da8 STLW
              9fed 0000  ld   $00
              9fee 00cf  ld   $cf         ;0daa CALL
              9fef 0038  ld   $38         ;0daa 'Keyword'
              9ff0 002a  ld   $2a         ;0dac '*'
              9ff1 0000  ld   $00         ;0dad 0
              9ff2 0035  ld   $35         ;0dae BCC
              9ff3 003f  ld   $3f         ;0daf EQ
              9ff4 00b9  ld   $b9
              9ff5 00cf  ld   $cf         ;0db1 CALL
              9ff6 004c  ld   $4c         ;0db1 'Factor'
              9ff7 00ee  ld   $ee         ;0db3 LDLW
              9ff8 0000  ld   $00
              9ff9 00cf  ld   $cf         ;0db5 CALL
              9ffa 007c  ld   $7c         ;0db5 'Multiply'
              9ffb fe00  bra  ac          ;+-----------------------------------+
              9ffc fcfd  bra  $9ffd       ;|                                   |
              9ffd 1418  ld   $18,y       ;| Trampoline for page $9f00 lookups |
              9ffe e006  jmp  y,$06       ;|                                   |
              9fff c218  st   [$18]       ;+-----------------------------------+
              a000 00ec  ld   $ec         ;0db7 STLW
              a001 0000  ld   $00
              a002 0090  ld   $90         ;0db9 BRA
              a003 00a8  ld   $a8
              a004 00cf  ld   $cf         ;0dbb CALL
              a005 0038  ld   $38         ;0dbb 'Keyword'
              a006 002f  ld   $2f         ;0dbd '/'
              a007 0000  ld   $00         ;0dbe 0
              a008 0035  ld   $35         ;0dbf BCC
              a009 003f  ld   $3f         ;0dc0 EQ
              a00a 00ca  ld   $ca
              a00b 00cf  ld   $cf         ;0dc2 CALL
              a00c 004c  ld   $4c         ;0dc2 'Factor'
              a00d 00ee  ld   $ee         ;0dc4 LDLW
              a00e 0000  ld   $00
              a00f 00cf  ld   $cf         ;0dc6 CALL
              a010 003e  ld   $3e         ;0dc6 'Divide'
              a011 00ec  ld   $ec         ;0dc8 STLW
              a012 0000  ld   $00
              a013 0090  ld   $90         ;0dca BRA
              a014 00a8  ld   $a8
              a015 00cf  ld   $cf         ;0dcc CALL
              a016 0038  ld   $38         ;0dcc 'Keyword'
              a017 0025  ld   $25         ;0dce '%'
              a018 0000  ld   $00         ;0dcf 0
              a019 0035  ld   $35         ;0dd0 BCC
              a01a 003f  ld   $3f         ;0dd1 EQ
              a01b 00dd  ld   $dd
              a01c 00cf  ld   $cf         ;0dd3 CALL
              a01d 004c  ld   $4c         ;0dd3 'Factor'
              a01e 00ee  ld   $ee         ;0dd5 LDLW
              a01f 0000  ld   $00
              a020 00cf  ld   $cf         ;0dd7 CALL
              a021 003e  ld   $3e         ;0dd7 'Divide'
              a022 0021  ld   $21         ;0dd9 LDW
              a023 0040  ld   $40         ;0dd9 'i'
              a024 00ec  ld   $ec         ;0ddb STLW
              a025 0000  ld   $00
              a026 0090  ld   $90         ;0ddd BRA
              a027 00a8  ld   $a8
              a028 00ee  ld   $ee         ;0ddf LDLW
              a029 0000  ld   $00
              a02a 002b  ld   $2b         ;0de1 STW
              a02b 003c  ld   $3c         ;0de1 'Value'
              a02c 0063  ld   $63         ;0de3 POP
              a02d 0063  ld   $63         ;0de4 POP
              a02e 00ff  ld   $ff         ;0de5 RET
              a02f 002b  ld   $2b         ;0de6 STW
              a030 007a  ld   $7a         ;0de6 'Term'
              a031 0093  ld   $93         ;0de8 INC
              a032 001b  ld   $1b
              a033 00ff  ld   $ff         ;0dea RET
              a034 00cf  ld   $cf         ;0deb CALL
              a035 0038  ld   $38         ;0deb 'Keyword'
              a036 0072  ld   $72         ;0ded 'r'
              a037 0075  ld   $75         ;0dee 'u'
              a038 006e  ld   $6e         ;0def 'n'
              a039 0000  ld   $00         ;0df0 0
              a03a 0035  ld   $35         ;0df1 BCC
              a03b 003f  ld   $3f         ;0df2 EQ
              a03c 00f9  ld   $f9
              a03d 00cf  ld   $cf         ;0df4 CALL
              a03e 0078  ld   $78         ;0df4 'Clear'
              a03f 00f6  ld   $f6         ;0df6 DEEK
              a040 002b  ld   $2b         ;0df7 STW
              a041 003c  ld   $3c         ;0df7 'Value'
              a042 00cf  ld   $cf         ;0df9 CALL
              a043 005e  ld   $5e         ;0df9 'GotoValue'
              a044 0011  ld   $11         ;0dfb LDWI
              a045 00a0  ld   $a0
              a046 0016  ld   $16
              a047 00cf  ld   $cf         ;0dfe CALL
              a048 0018  ld   $18         ;0dfe vAC
              a049 000e  ld   $0e         ;| RAM segment address (high byte first)
              a04a 00a0  ld   $a0         ;|
              a04b 0060  ld   $60         ;| Length (1..256)
              a04c 00cd  ld   $cd         ;0ea0 DEF
              a04d 00fb  ld   $fb
              a04e 002b  ld   $2b         ;0ea2 STW
              a04f 006a  ld   $6a         ;0ea2 'j'
              a050 00fc  ld   $fc         ;0ea4 XORW
              a051 003c  ld   $3c         ;0ea4 'Value'
              a052 002b  ld   $2b         ;0ea6 STW
              a053 0044  ld   $44         ;0ea6 'k'
              a054 0021  ld   $21         ;0ea8 LDW
              a055 006a  ld   $6a         ;0ea8 'j'
              a056 0035  ld   $35         ;0eaa BCC
              a057 0053  ld   $53         ;0eab GE
              a058 00b1  ld   $b1
              a059 0059  ld   $59         ;0ead LDI
              a05a 0000  ld   $00
              a05b 00b8  ld   $b8         ;0eaf SUBW
              a05c 006a  ld   $6a         ;0eaf 'j'
              a05d 002b  ld   $2b         ;0eb1 STW
              a05e 006a  ld   $6a         ;0eb1 'j'
              a05f 0021  ld   $21         ;0eb3 LDW
              a060 003c  ld   $3c         ;0eb3 'Value'
              a061 0035  ld   $35         ;0eb5 BCC
              a062 0053  ld   $53         ;0eb6 GE
              a063 00bc  ld   $bc
              a064 0059  ld   $59         ;0eb8 LDI
              a065 0000  ld   $00
              a066 00b8  ld   $b8         ;0eba SUBW
              a067 003c  ld   $3c         ;0eba 'Value'
              a068 002b  ld   $2b         ;0ebc STW
              a069 003c  ld   $3c         ;0ebc 'Value'
              a06a 0035  ld   $35         ;0ebe BCC
              a06b 0072  ld   $72         ;0ebf NE
              a06c 00c1  ld   $c1
              a06d 00cf  ld   $cf         ;0ec1 CALL
              a06e 0046  ld   $46         ;0ec1 'ValueError'
              a06f 0059  ld   $59         ;0ec3 LDI
              a070 0000  ld   $00
              a071 002b  ld   $2b         ;0ec5 STW
              a072 0040  ld   $40         ;0ec5 'i'
              a073 002b  ld   $2b         ;0ec7 STW
              a074 004e  ld   $4e         ;0ec7 'tmp'
              a075 0021  ld   $21         ;0ec9 LDW
              a076 0040  ld   $40         ;0ec9 'i'
              a077 0099  ld   $99         ;0ecb ADDW
              a078 0040  ld   $40         ;0ecb 'i'
              a079 002b  ld   $2b         ;0ecd STW
              a07a 0040  ld   $40         ;0ecd 'i'
              a07b 0021  ld   $21         ;0ecf LDW
              a07c 006a  ld   $6a         ;0ecf 'j'
              a07d 0035  ld   $35         ;0ed1 BCC
              a07e 0053  ld   $53         ;0ed2 GE
              a07f 00d4  ld   $d4
              a080 0093  ld   $93         ;0ed4 INC
              a081 0040  ld   $40         ;0ed4 'i'
              a082 0021  ld   $21         ;0ed6 LDW
              a083 006a  ld   $6a         ;0ed6 'j'
              a084 0099  ld   $99         ;0ed8 ADDW
              a085 006a  ld   $6a         ;0ed8 'j'
              a086 002b  ld   $2b         ;0eda STW
              a087 006a  ld   $6a         ;0eda 'j'
              a088 0021  ld   $21         ;0edc LDW
              a089 0040  ld   $40         ;0edc 'i'
              a08a 00b8  ld   $b8         ;0ede SUBW
              a08b 003c  ld   $3c         ;0ede 'Value'
              a08c 0035  ld   $35         ;0ee0 BCC
              a08d 0050  ld   $50         ;0ee1 LT
              a08e 00e5  ld   $e5
              a08f 002b  ld   $2b         ;0ee3 STW
              a090 0040  ld   $40         ;0ee3 'i'
              a091 0093  ld   $93         ;0ee5 INC
              a092 006a  ld   $6a         ;0ee5 'j'
              a093 0021  ld   $21         ;0ee7 LDW
              a094 004e  ld   $4e         ;0ee7 'tmp'
              a095 00e3  ld   $e3         ;0ee9 ADDI
              a096 0001  ld   $01
              a097 0082  ld   $82         ;0eeb ANDI
              a098 000f  ld   $0f
              a099 0035  ld   $35         ;0eed BCC
              a09a 0072  ld   $72         ;0eee NE
              a09b 00c5  ld   $c5
              a09c 0021  ld   $21         ;0ef0 LDW
              a09d 0044  ld   $44         ;0ef0 'k'
              a09e 0035  ld   $35         ;0ef2 BCC
              a09f 0053  ld   $53         ;0ef3 GE
              a0a0 00f8  ld   $f8
              a0a1 0059  ld   $59         ;0ef5 LDI
              a0a2 0000  ld   $00
              a0a3 00b8  ld   $b8         ;0ef7 SUBW
              a0a4 006a  ld   $6a         ;0ef7 'j'
              a0a5 00ff  ld   $ff         ;0ef9 RET
              a0a6 0021  ld   $21         ;0efa LDW
              a0a7 006a  ld   $6a         ;0efa 'j'
              a0a8 00ff  ld   $ff         ;0efc RET
              a0a9 0093  ld   $93         ;0efd INC
              a0aa 001b  ld   $1b
              a0ab 00ff  ld   $ff         ;0eff RET
              a0ac 000f  ld   $0f         ;| RAM segment address (high byte first)
              a0ad 00a0  ld   $a0         ;|
              a0ae 005e  ld   $5e         ;| Length (1..256)
              a0af 002b  ld   $2b         ;0fa0 STW
              a0b0 003e  ld   $3e         ;0fa0 'Divide'
              a0b1 00cd  ld   $cd         ;0fa2 DEF
              a0b2 00c7  ld   $c7
              a0b3 002b  ld   $2b         ;0fa4 STW
              a0b4 004e  ld   $4e         ;0fa4 'tmp'
              a0b5 0059  ld   $59         ;0fa6 LDI
              a0b6 0000  ld   $00
              a0b7 002b  ld   $2b         ;0fa8 STW
              a0b8 006a  ld   $6a         ;0fa8 'j'
              a0b9 0059  ld   $59         ;0faa LDI
              a0ba 0001  ld   $01
              a0bb 002b  ld   $2b         ;0fac STW
              a0bc 0040  ld   $40         ;0fac 'i'
              a0bd 00f8  ld   $f8         ;0fae ANDW
              a0be 004e  ld   $4e         ;0fae 'tmp'
              a0bf 0035  ld   $35         ;0fb0 BCC
              a0c0 003f  ld   $3f         ;0fb1 EQ
              a0c1 00b7  ld   $b7
              a0c2 0021  ld   $21         ;0fb3 LDW
              a0c3 006a  ld   $6a         ;0fb3 'j'
              a0c4 0099  ld   $99         ;0fb5 ADDW
              a0c5 003c  ld   $3c         ;0fb5 'Value'
              a0c6 002b  ld   $2b         ;0fb7 STW
              a0c7 006a  ld   $6a         ;0fb7 'j'
              a0c8 0021  ld   $21         ;0fb9 LDW
              a0c9 003c  ld   $3c         ;0fb9 'Value'
              a0ca 0099  ld   $99         ;0fbb ADDW
              a0cb 003c  ld   $3c         ;0fbb 'Value'
              a0cc 002b  ld   $2b         ;0fbd STW
              a0cd 003c  ld   $3c         ;0fbd 'Value'
              a0ce 0021  ld   $21         ;0fbf LDW
              a0cf 0040  ld   $40         ;0fbf 'i'
              a0d0 0099  ld   $99         ;0fc1 ADDW
              a0d1 0040  ld   $40         ;0fc1 'i'
              a0d2 0035  ld   $35         ;0fc3 BCC
              a0d3 0072  ld   $72         ;0fc4 NE
              a0d4 00aa  ld   $aa
              a0d5 0021  ld   $21         ;0fc6 LDW
              a0d6 006a  ld   $6a         ;0fc6 'j'
              a0d7 00ff  ld   $ff         ;0fc8 RET
              a0d8 002b  ld   $2b         ;0fc9 STW
              a0d9 007c  ld   $7c         ;0fc9 'Multiply'
              a0da 00cd  ld   $cd         ;0fcb DEF
              a0db 00e6  ld   $e6
              a0dc 0021  ld   $21         ;0fcd LDW
              a0dd 0000  ld   $00
              a0de 002b  ld   $2b         ;0fcf STW
              a0df 0040  ld   $40         ;0fcf 'i'
              a0e0 0021  ld   $21         ;0fd1 LDW
              a0e1 0036  ld   $36         ;0fd1 'Active'
              a0e2 00ad  ld   $ad         ;0fd3 PEEK
              a0e3 0082  ld   $82         ;0fd4 ANDI
              a0e4 005f  ld   $5f
              a0e5 00e6  ld   $e6         ;0fd6 SUBI
              a0e6 0040  ld   $40
              a0e7 0035  ld   $35         ;0fd8 BCC
              a0e8 0050  ld   $50         ;0fd9 LT
              a0e9 00e4  ld   $e4
              a0ea 00e6  ld   $e6         ;0fdb SUBI
              a0eb 001b  ld   $1b
              a0ec 0035  ld   $35         ;0fdd BCC
              a0ed 0053  ld   $53         ;0fde GE
              a0ee 00e4  ld   $e4
              a0ef 0093  ld   $93         ;0fe0 INC
              a0f0 0036  ld   $36         ;0fe0 'Active'
              a0f1 00e9  ld   $e9         ;0fe2 LSLW
              a0f2 0099  ld   $99         ;0fe3 ADDW
              a0f3 0040  ld   $40         ;0fe3 'i'
              a0f4 00ff  ld   $ff         ;0fe5 RET
              a0f5 00cf  ld   $cf         ;0fe6 CALL
              a0f6 004a  ld   $4a         ;0fe6 'SyntaxError'
              a0f7 002b  ld   $2b         ;0fe8 STW
              a0f8 0042  ld   $42         ;0fe8 'Variable'
              a0f9 00cd  ld   $cd         ;0fea DEF
              a0fa 00f7  ld   $f7
              a0fb fe00  bra  ac          ;+-----------------------------------+
              a0fc fcfd  bra  $a0fd       ;|                                   |
              a0fd 1418  ld   $18,y       ;| Trampoline for page $a000 lookups |
              a0fe e006  jmp  y,$06       ;|                                   |
              a0ff c218  st   [$18]       ;+-----------------------------------+
              a100 0021  ld   $21         ;0fec LDW
              a101 0036  ld   $36         ;0fec 'Active'
              a102 00ad  ld   $ad         ;0fee PEEK
              a103 008c  ld   $8c         ;0fef XORI
              a104 0020  ld   $20
              a105 0035  ld   $35         ;0ff1 BCC
              a106 0072  ld   $72         ;0ff2 NE
              a107 00f6  ld   $f6
              a108 0093  ld   $93         ;0ff4 INC
              a109 0036  ld   $36         ;0ff4 'Active'
              a10a 0090  ld   $90         ;0ff6 BRA
              a10b 00ea  ld   $ea
              a10c 00ff  ld   $ff         ;0ff8 RET
              a10d 002b  ld   $2b         ;0ff9 STW
              a10e 0034  ld   $34         ;0ff9 'Spaces'
              a10f 0093  ld   $93         ;0ffb INC
              a110 001b  ld   $1b
              a111 00ff  ld   $ff         ;0ffd RET
              a112 0010  ld   $10         ;| RAM segment address (high byte first)
              a113 00a0  ld   $a0         ;|
              a114 0060  ld   $60         ;| Length (1..256)
              a115 00cd  ld   $cd         ;10a0 DEF
              a116 00fb  ld   $fb
              a117 0075  ld   $75         ;10a2 PUSH
              a118 0021  ld   $21         ;10a3 LDW
              a119 006c  ld   $6c         ;10a3 'Begin'
              a11a 002b  ld   $2b         ;10a5 STW
              a11b 006a  ld   $6a         ;10a5 'j'
              a11c 00fc  ld   $fc         ;10a7 XORW
              a11d 0048  ld   $48         ;10a7 'End'
              a11e 0035  ld   $35         ;10a9 BCC
              a11f 003f  ld   $3f         ;10aa EQ
              a120 00c9  ld   $c9
              a121 00cf  ld   $cf         ;10ac CALL
              a122 0058  ld   $58         ;10ac 'TestBreak'
              a123 0021  ld   $21         ;10ae LDW
              a124 006a  ld   $6a         ;10ae 'j'
              a125 00f6  ld   $f6         ;10b0 DEEK
              a126 002b  ld   $2b         ;10b1 STW
              a127 003c  ld   $3c         ;10b1 'Value'
              a128 00cf  ld   $cf         ;10b3 CALL
              a129 0076  ld   $76         ;10b3 'PrintValue'
              a12a 0093  ld   $93         ;10b5 INC
              a12b 006a  ld   $6a         ;10b5 'j'
              a12c 0093  ld   $93         ;10b7 INC
              a12d 006a  ld   $6a         ;10b7 'j'
              a12e 0021  ld   $21         ;10b9 LDW
              a12f 006a  ld   $6a         ;10b9 'j'
              a130 00ad  ld   $ad         ;10bb PEEK
              a131 0035  ld   $35         ;10bc BCC
              a132 003f  ld   $3f         ;10bd EQ
              a133 00c1  ld   $c1
              a134 00cf  ld   $cf         ;10bf CALL
              a135 0050  ld   $50         ;10bf 'PrintChar'
              a136 0090  ld   $90         ;10c1 BRA
              a137 00b5  ld   $b5
              a138 00cf  ld   $cf         ;10c3 CALL
              a139 005a  ld   $5a         ;10c3 'Newline'
              a13a 0021  ld   $21         ;10c5 LDW
              a13b 006a  ld   $6a         ;10c5 'j'
              a13c 00cf  ld   $cf         ;10c7 CALL
              a13d 0070  ld   $70         ;10c7 'NextBlock'
              a13e 0090  ld   $90         ;10c9 BRA
              a13f 00a3  ld   $a3
              a140 002b  ld   $2b         ;10cb STW
              a141 003c  ld   $3c         ;10cb 'Value'
              a142 0021  ld   $21         ;10cd LDW
              a143 0000  ld   $00
              a144 00e6  ld   $e6         ;10cf SUBI
              a145 0080  ld   $80
              a146 00e6  ld   $e6         ;10d1 SUBI
              a147 00c0  ld   $c0
              a148 00fc  ld   $fc         ;10d3 XORW
              a149 006a  ld   $6a         ;10d3 'j'
              a14a 0035  ld   $35         ;10d5 BCC
              a14b 003f  ld   $3f         ;10d6 EQ
              a14c 00e2  ld   $e2
              a14d 0021  ld   $21         ;10d8 LDW
              a14e 006a  ld   $6a         ;10d8 'j'
              a14f 00cf  ld   $cf         ;10da CALL
              a150 0070  ld   $70         ;10da 'NextBlock'
              a151 002b  ld   $2b         ;10dc STW
              a152 006a  ld   $6a         ;10dc 'j'
              a153 0021  ld   $21         ;10de LDW
              a154 003c  ld   $3c         ;10de 'Value'
              a155 00e3  ld   $e3         ;10e0 ADDI
              a156 0020  ld   $20
              a157 0090  ld   $90         ;10e2 BRA
              a158 00c9  ld   $c9
              a159 0021  ld   $21         ;10e4 LDW
              a15a 0050  ld   $50         ;10e4 'PrintChar'
              a15b 00fc  ld   $fc         ;10e6 XORW
              a15c 0054  ld   $54         ;10e6 'PrintCharScreen'
              a15d 0035  ld   $35         ;10e8 BCC
              a15e 0072  ld   $72         ;10e9 NE
              a15f 00f9  ld   $f9
              a160 00cf  ld   $cf         ;10eb CALL
              a161 0076  ld   $76         ;10eb 'PrintValue'
              a162 00cf  ld   $cf         ;10ed CALL
              a163 0052  ld   $52         ;10ed 'PrintS'
              a164 0020  ld   $20         ;10ef ' '
              a165 0062  ld   $62         ;10f0 'b'
              a166 0079  ld   $79         ;10f1 'y'
              a167 0074  ld   $74         ;10f2 't'
              a168 0065  ld   $65         ;10f3 'e'
              a169 0073  ld   $73         ;10f4 's'
              a16a 0020  ld   $20         ;10f5 ' '
              a16b 0066  ld   $66         ;10f6 'f'
              a16c 0072  ld   $72         ;10f7 'r'
              a16d 0065  ld   $65         ;10f8 'e'
              a16e 0065  ld   $65         ;10f9 'e'
              a16f 0000  ld   $00         ;10fa 0
              a170 0063  ld   $63         ;10fb POP
              a171 00ff  ld   $ff         ;10fc RET
              a172 0093  ld   $93         ;10fd INC
              a173 001b  ld   $1b
              a174 00ff  ld   $ff         ;10ff RET
              a175 0011  ld   $11         ;| RAM segment address (high byte first)
              a176 00a0  ld   $a0         ;|
              a177 0060  ld   $60         ;| Length (1..256)
              a178 002b  ld   $2b         ;11a0 STW
              a179 007e  ld   $7e         ;11a0 'List'
              a17a 00cd  ld   $cd         ;11a2 DEF
              a17b 00c1  ld   $c1
              a17c 0075  ld   $75         ;11a4 PUSH
              a17d 002b  ld   $2b         ;11a5 STW
              a17e 0040  ld   $40         ;11a5 'i'
              a17f 0021  ld   $21         ;11a7 LDW
              a180 003c  ld   $3c         ;11a7 'Value'
              a181 00b8  ld   $b8         ;11a9 SUBW
              a182 0040  ld   $40         ;11a9 'i'
              a183 0035  ld   $35         ;11ab BCC
              a184 0050  ld   $50         ;11ac LT
              a185 00b2  ld   $b2
              a186 002b  ld   $2b         ;11ae STW
              a187 003c  ld   $3c         ;11ae 'Value'
              a188 0093  ld   $93         ;11b0 INC
              a189 0044  ld   $44         ;11b0 'k'
              a18a 0090  ld   $90         ;11b2 BRA
              a18b 00a7  ld   $a7
              a18c 0021  ld   $21         ;11b4 LDW
              a18d 0044  ld   $44         ;11b4 'k'
              a18e 0035  ld   $35         ;11b6 BCC
              a18f 003f  ld   $3f         ;11b7 EQ
              a190 00bf  ld   $bf
              a191 0088  ld   $88         ;11b9 ORI
              a192 0030  ld   $30
              a193 00cf  ld   $cf         ;11bb CALL
              a194 0050  ld   $50         ;11bb 'PrintChar'
              a195 0059  ld   $59         ;11bd LDI
              a196 0030  ld   $30
              a197 002b  ld   $2b         ;11bf STW
              a198 0044  ld   $44         ;11bf 'k'
              a199 0063  ld   $63         ;11c1 POP
              a19a 00ff  ld   $ff         ;11c2 RET
              a19b 002b  ld   $2b         ;11c3 STW
              a19c 0074  ld   $74         ;11c3 'PrintDigit'
              a19d 00cd  ld   $cd         ;11c5 DEF
              a19e 00f1  ld   $f1
              a19f 0075  ld   $75         ;11c7 PUSH
              a1a0 0059  ld   $59         ;11c8 LDI
              a1a1 0000  ld   $00
              a1a2 002b  ld   $2b         ;11ca STW
              a1a3 0044  ld   $44         ;11ca 'k'
              a1a4 00cf  ld   $cf         ;11cc CALL
              a1a5 0038  ld   $38         ;11cc 'Keyword'
              a1a6 003c  ld   $3c         ;11ce '<'
              a1a7 0000  ld   $00         ;11cf 0
              a1a8 0035  ld   $35         ;11d0 BCC
              a1a9 003f  ld   $3f         ;11d1 EQ
              a1aa 00d3  ld   $d3
              a1ab 0093  ld   $93         ;11d3 INC
              a1ac 0044  ld   $44         ;11d3 'k'
              a1ad 00cf  ld   $cf         ;11d5 CALL
              a1ae 0038  ld   $38         ;11d5 'Keyword'
              a1af 003e  ld   $3e         ;11d7 '>'
              a1b0 0000  ld   $00         ;11d8 0
              a1b1 0035  ld   $35         ;11d9 BCC
              a1b2 003f  ld   $3f         ;11da EQ
              a1b3 00e0  ld   $e0
              a1b4 0021  ld   $21         ;11dc LDW
              a1b5 0044  ld   $44         ;11dc 'k'
              a1b6 00e3  ld   $e3         ;11de ADDI
              a1b7 0004  ld   $04
              a1b8 002b  ld   $2b         ;11e0 STW
              a1b9 0044  ld   $44         ;11e0 'k'
              a1ba 00cf  ld   $cf         ;11e2 CALL
              a1bb 0038  ld   $38         ;11e2 'Keyword'
              a1bc 003d  ld   $3d         ;11e4 '='
              a1bd 0000  ld   $00         ;11e5 0
              a1be 0035  ld   $35         ;11e6 BCC
              a1bf 003f  ld   $3f         ;11e7 EQ
              a1c0 00ed  ld   $ed
              a1c1 0021  ld   $21         ;11e9 LDW
              a1c2 0044  ld   $44         ;11e9 'k'
              a1c3 00e3  ld   $e3         ;11eb ADDI
              a1c4 0002  ld   $02
              a1c5 002b  ld   $2b         ;11ed STW
              a1c6 0044  ld   $44         ;11ed 'k'
              a1c7 0021  ld   $21         ;11ef LDW
              a1c8 0044  ld   $44         ;11ef 'k'
              a1c9 0063  ld   $63         ;11f1 POP
              a1ca 00ff  ld   $ff         ;11f2 RET
              a1cb 002b  ld   $2b         ;11f3 STW
              a1cc 0064  ld   $64         ;11f3 'RelOp'
              a1cd 0011  ld   $11         ;11f5 LDWI
              a1ce 00a0  ld   $a0
              a1cf 001b  ld   $1b
              a1d0 00f6  ld   $f6         ;11f8 DEEK
              a1d1 002b  ld   $2b         ;11f9 STW
              a1d2 0048  ld   $48         ;11f9 'End'
              a1d3 00e3  ld   $e3         ;11fb ADDI
              a1d4 0002  ld   $02
              a1d5 0093  ld   $93         ;11fd INC
              a1d6 001b  ld   $1b
              a1d7 00ff  ld   $ff         ;11ff RET
              a1d8 0012  ld   $12         ;| RAM segment address (high byte first)
              a1d9 00a0  ld   $a0         ;|
              a1da 005d  ld   $5d         ;| Length (1..256)
              a1db 002b  ld   $2b         ;12a0 STW
              a1dc 0036  ld   $36         ;12a0 'Active'
              a1dd 00cd  ld   $cd         ;12a2 DEF
              a1de 00f7  ld   $f7
              a1df 0021  ld   $21         ;12a4 LDW
              a1e0 001a  ld   $1a
              a1e1 002b  ld   $2b         ;12a6 STW
              a1e2 004e  ld   $4e         ;12a6 'tmp'
              a1e3 001a  ld   $1a         ;12a8 LD
              a1e4 0030  ld   $30         ;12a8 'Pos'
              a1e5 00e6  ld   $e6         ;12aa SUBI
              a1e6 0002  ld   $02
              a1e7 0035  ld   $35         ;12ac BCC
              a1e8 0056  ld   $56         ;12ad LE
              a1e9 00af  ld   $af
              a1ea 00cf  ld   $cf         ;12af CALL
              a1eb 005a  ld   $5a         ;12af 'Newline'
              a1ec 0059  ld   $59         ;12b1 LDI
              a1ed 0000  ld   $00
              a1ee 005e  ld   $5e         ;12b3 ST
              a1ef 001c  ld   $1c
              a1f0 0021  ld   $21         ;12b5 LDW
              a1f1 004e  ld   $4e         ;12b5 'tmp'
              a1f2 00ad  ld   $ad         ;12b7 PEEK
              a1f3 0035  ld   $35         ;12b8 BCC
              a1f4 003f  ld   $3f         ;12b9 EQ
              a1f5 00e3  ld   $e3
              a1f6 0059  ld   $59         ;12bb LDI
              a1f7 003f  ld   $3f
              a1f8 00cf  ld   $cf         ;12bd CALL
              a1f9 0050  ld   $50         ;12bd 'PrintChar'
              a1fa 0021  ld   $21         ;12bf LDW
              a1fb fe00  bra  ac          ;+-----------------------------------+
              a1fc fcfd  bra  $a1fd       ;|                                   |
              a1fd 1418  ld   $18,y       ;| Trampoline for page $a100 lookups |
              a1fe e006  jmp  y,$06       ;|                                   |
              a1ff c218  st   [$18]       ;+-----------------------------------+
              a200 004e  ld   $4e         ;12bf 'tmp'
              a201 00ad  ld   $ad         ;12c1 PEEK
              a202 0093  ld   $93         ;12c2 INC
              a203 004e  ld   $4e         ;12c2 'tmp'
              a204 0035  ld   $35         ;12c4 BCC
              a205 0072  ld   $72         ;12c5 NE
              a206 00bb  ld   $bb
              a207 00cf  ld   $cf         ;12c7 CALL
              a208 0052  ld   $52         ;12c7 'PrintS'
              a209 0020  ld   $20         ;12c9 ' '
              a20a 0065  ld   $65         ;12ca 'e'
              a20b 0072  ld   $72         ;12cb 'r'
              a20c 0072  ld   $72         ;12cc 'r'
              a20d 006f  ld   $6f         ;12cd 'o'
              a20e 0072  ld   $72         ;12ce 'r'
              a20f 0000  ld   $00         ;12cf 0
              a210 00e6  ld   $e6         ;12d0 SUBI
              a211 0020  ld   $20
              a212 00f8  ld   $f8         ;12d2 ANDW
              a213 0036  ld   $36         ;12d2 'Active'
              a214 00f6  ld   $f6         ;12d4 DEEK
              a215 0035  ld   $35         ;12d5 BCC
              a216 003f  ld   $3f         ;12d6 EQ
              a217 00e1  ld   $e1
              a218 002b  ld   $2b         ;12d8 STW
              a219 003c  ld   $3c         ;12d8 'Value'
              a21a 00cf  ld   $cf         ;12da CALL
              a21b 0052  ld   $52         ;12da 'PrintS'
              a21c 0020  ld   $20         ;12dc ' '
              a21d 0069  ld   $69         ;12dd 'i'
              a21e 006e  ld   $6e         ;12de 'n'
              a21f 0020  ld   $20         ;12df ' '
              a220 0000  ld   $00         ;12e0 0
              a221 00cf  ld   $cf         ;12e1 CALL
              a222 0076  ld   $76         ;12e1 'PrintValue'
              a223 00cf  ld   $cf         ;12e3 CALL
              a224 005a  ld   $5a         ;12e3 'Newline'
              a225 00cf  ld   $cf         ;12e5 CALL
              a226 0052  ld   $52         ;12e5 'PrintS'
              a227 004f  ld   $4f         ;12e7 'O'
              a228 006b  ld   $6b         ;12e8 'k'
              a229 0000  ld   $00         ;12e9 0
              a22a 00cf  ld   $cf         ;12ea CALL
              a22b 005a  ld   $5a         ;12ea 'Newline'
              a22c 0059  ld   $59         ;12ec LDI
              a22d 0000  ld   $00
              a22e 00cf  ld   $cf         ;12ee CALL
              a22f 005c  ld   $5c         ;12ee 'GetLine'
              a230 0035  ld   $35         ;12f0 BCC
              a231 003f  ld   $3f         ;12f1 EQ
              a232 00ea  ld   $ea
              a233 00cf  ld   $cf         ;12f3 CALL
              a234 0072  ld   $72         ;12f3 'Insert'
              a235 0035  ld   $35         ;12f5 BCC
              a236 004d  ld   $4d         ;12f6 GT
              a237 00ea  ld   $ea
              a238 0011  ld   $11         ;12f8 785
              a239 002b  ld   $2b         ;12f9 STW
              a23a 0056  ld   $56         ;12f9 'Prompt'
              a23b 00cf  ld   $cf         ;12fb CALL
              a23c 0066  ld   $66         ;12fb 'Statements'
              a23d 0013  ld   $13         ;| RAM segment address (high byte first)
              a23e 00a0  ld   $a0         ;|
              a23f 0059  ld   $59         ;| Length (1..256)
              a240 0021  ld   $21         ;13a0 LDW
              a241 0036  ld   $36         ;13a0 'Active'
              a242 00ad  ld   $ad         ;13a2 PEEK
              a243 0035  ld   $35         ;13a3 BCC
              a244 003f  ld   $3f         ;13a4 EQ
              a245 00f3  ld   $f3
              a246 008c  ld   $8c         ;13a6 XORI
              a247 003a  ld   $3a
              a248 0035  ld   $35         ;13a8 BCC
              a249 003f  ld   $3f         ;13a9 EQ
              a24a 00f3  ld   $f3
              a24b 0021  ld   $21         ;13ab LDW
              a24c 0036  ld   $36         ;13ab 'Active'
              a24d 00ad  ld   $ad         ;13ad PEEK
              a24e 0035  ld   $35         ;13ae BCC
              a24f 003f  ld   $3f         ;13af EQ
              a250 00f1  ld   $f1
              a251 008c  ld   $8c         ;13b1 XORI
              a252 003a  ld   $3a
              a253 0035  ld   $35         ;13b3 BCC
              a254 003f  ld   $3f         ;13b4 EQ
              a255 00f1  ld   $f1
              a256 008c  ld   $8c         ;13b6 XORI
              a257 0018  ld   $18
              a258 0035  ld   $35         ;13b8 BCC
              a259 0072  ld   $72         ;13b9 NE
              a25a 00ce  ld   $ce
              a25b 0093  ld   $93         ;13bb INC
              a25c 0036  ld   $36         ;13bb 'Active'
              a25d 00cf  ld   $cf         ;13bd CALL
              a25e 0038  ld   $38         ;13bd 'Keyword'
              a25f 0022  ld   $22         ;13bf 34
              a260 0000  ld   $00         ;13c0 0
              a261 0035  ld   $35         ;13c1 BCC
              a262 0072  ld   $72         ;13c2 NE
              a263 00cc  ld   $cc
              a264 0021  ld   $21         ;13c4 LDW
              a265 0036  ld   $36         ;13c4 'Active'
              a266 00ad  ld   $ad         ;13c6 PEEK
              a267 0035  ld   $35         ;13c7 BCC
              a268 003f  ld   $3f         ;13c8 EQ
              a269 00cc  ld   $cc
              a26a 00cf  ld   $cf         ;13ca CALL
              a26b 0050  ld   $50         ;13ca 'PrintChar'
              a26c 0090  ld   $90         ;13cc BRA
              a26d 00b9  ld   $b9
              a26e 0090  ld   $90         ;13ce BRA
              a26f 00d2  ld   $d2
              a270 00cf  ld   $cf         ;13d0 CALL
              a271 003a  ld   $3a         ;13d0 'Expression'
              a272 00cf  ld   $cf         ;13d2 CALL
              a273 0076  ld   $76         ;13d2 'PrintValue'
              a274 00cf  ld   $cf         ;13d4 CALL
              a275 0038  ld   $38         ;13d4 'Keyword'
              a276 002c  ld   $2c         ;13d6 44
              a277 0000  ld   $00         ;13d7 0
              a278 0035  ld   $35         ;13d8 BCC
              a279 003f  ld   $3f         ;13d9 EQ
              a27a 00e8  ld   $e8
              a27b 0059  ld   $59         ;13db LDI
              a27c 0020  ld   $20
              a27d 00cf  ld   $cf         ;13dd CALL
              a27e 0050  ld   $50         ;13dd 'PrintChar'
              a27f 001a  ld   $1a         ;13df LD
              a280 0030  ld   $30         ;13df 'Pos'
              a281 00e6  ld   $e6         ;13e1 SUBI
              a282 0002  ld   $02
              a283 0082  ld   $82         ;13e3 ANDI
              a284 0007  ld   $07
              a285 0035  ld   $35         ;13e5 BCC
              a286 0072  ld   $72         ;13e6 NE
              a287 00d9  ld   $d9
              a288 0090  ld   $90         ;13e8 BRA
              a289 00a9  ld   $a9
              a28a 00cf  ld   $cf         ;13ea CALL
              a28b 0038  ld   $38         ;13ea 'Keyword'
              a28c 003b  ld   $3b         ;13ec 59
              a28d 0000  ld   $00         ;13ed 0
              a28e 0035  ld   $35         ;13ee BCC
              a28f 0072  ld   $72         ;13ef NE
              a290 00a9  ld   $a9
              a291 00cf  ld   $cf         ;13f1 CALL
              a292 005a  ld   $5a         ;13f1 'Newline'
              a293 0090  ld   $90         ;13f3 BRA
              a294 00f5  ld   $f5
              a295 00cf  ld   $cf         ;13f5 CALL
              a296 005a  ld   $5a         ;13f5 'Newline'
              a297 00cf  ld   $cf         ;13f7 CALL
              a298 0062  ld   $62         ;13f7 'EndOfLine'
              a299 0014  ld   $14         ;| RAM segment address (high byte first)
              a29a 00a0  ld   $a0         ;|
              a29b 005f  ld   $5f         ;| Length (1..256)
              a29c 00cf  ld   $cf         ;14a0 CALL
              a29d 0038  ld   $38         ;14a0 'Keyword'
              a29e 003f  ld   $3f         ;14a2 '?'
              a29f 0000  ld   $00         ;14a3 0
              a2a0 0035  ld   $35         ;14a4 BCC
              a2a1 0072  ld   $72         ;14a5 NE
              a2a2 00ad  ld   $ad
              a2a3 00cf  ld   $cf         ;14a7 CALL
              a2a4 0038  ld   $38         ;14a7 'Keyword'
              a2a5 0070  ld   $70         ;14a9 'p'
              a2a6 0072  ld   $72         ;14aa 'r'
              a2a7 0069  ld   $69         ;14ab 'i'
              a2a8 006e  ld   $6e         ;14ac 'n'
              a2a9 0074  ld   $74         ;14ad 't'
              a2aa 0000  ld   $00         ;14ae 0
              a2ab 0035  ld   $35         ;14af BCC
              a2ac 003f  ld   $3f         ;14b0 EQ
              a2ad 00b5  ld   $b5
              a2ae 0011  ld   $11         ;14b2 LDWI
              a2af 00a0  ld   $a0
              a2b0 0013  ld   $13
              a2b1 00cf  ld   $cf         ;14b5 CALL
              a2b2 0018  ld   $18         ;14b5 vAC
              a2b3 00cf  ld   $cf         ;14b7 CALL
              a2b4 0038  ld   $38         ;14b7 'Keyword'
              a2b5 0069  ld   $69         ;14b9 'i'
              a2b6 006e  ld   $6e         ;14ba 'n'
              a2b7 0070  ld   $70         ;14bb 'p'
              a2b8 0075  ld   $75         ;14bc 'u'
              a2b9 0074  ld   $74         ;14bd 't'
              a2ba 0000  ld   $00         ;14be 0
              a2bb 0035  ld   $35         ;14bf BCC
              a2bc 003f  ld   $3f         ;14c0 EQ
              a2bd 00f8  ld   $f8
              a2be 0021  ld   $21         ;14c2 LDW
              a2bf 0036  ld   $36         ;14c2 'Active'
              a2c0 00ad  ld   $ad         ;14c4 PEEK
              a2c1 00cf  ld   $cf         ;14c5 CALL
              a2c2 0050  ld   $50         ;14c5 'PrintChar'
              a2c3 00cf  ld   $cf         ;14c7 CALL
              a2c4 0042  ld   $42         ;14c7 'Variable'
              a2c5 002b  ld   $2b         ;14c9 STW
              a2c6 0068  ld   $68         ;14c9 'Address'
              a2c7 00cf  ld   $cf         ;14cb CALL
              a2c8 0034  ld   $34         ;14cb 'Spaces'
              a2c9 00df  ld   $df         ;14cd ALLOC
              a2ca 00fc  ld   $fc
              a2cb 0021  ld   $21         ;14cf LDW
              a2cc 0036  ld   $36         ;14cf 'Active'
              a2cd 00ec  ld   $ec         ;14d1 STLW
              a2ce 0002  ld   $02
              a2cf 0088  ld   $88         ;14d3 ORI
              a2d0 001f  ld   $1f
              a2d1 00e6  ld   $e6         ;14d5 SUBI
              a2d2 001f  ld   $1f
              a2d3 00f6  ld   $f6         ;14d7 DEEK
              a2d4 00ec  ld   $ec         ;14d8 STLW
              a2d5 0000  ld   $00
              a2d6 0059  ld   $59         ;14da LDI
              a2d7 003f  ld   $3f
              a2d8 00cf  ld   $cf         ;14dc CALL
              a2d9 0050  ld   $50         ;14dc 'PrintChar'
              a2da 00cf  ld   $cf         ;14de CALL
              a2db 005a  ld   $5a         ;14de 'Newline'
              a2dc 00ee  ld   $ee         ;14e0 LDLW
              a2dd 0000  ld   $00
              a2de 00cf  ld   $cf         ;14e2 CALL
              a2df 005c  ld   $5c         ;14e2 'GetLine'
              a2e0 0035  ld   $35         ;14e4 BCC
              a2e1 003f  ld   $3f         ;14e5 EQ
              a2e2 00d8  ld   $d8
              a2e3 00cf  ld   $cf         ;14e7 CALL
              a2e4 003a  ld   $3a         ;14e7 'Expression'
              a2e5 00f3  ld   $f3         ;14e9 DOKE
              a2e6 0068  ld   $68         ;14e9 'Address'
              a2e7 00ee  ld   $ee         ;14eb LDLW
              a2e8 0002  ld   $02
              a2e9 002b  ld   $2b         ;14ed STW
              a2ea 0036  ld   $36         ;14ed 'Active'
              a2eb 00df  ld   $df         ;14ef ALLOC
              a2ec 0004  ld   $04
              a2ed 00cf  ld   $cf         ;14f1 CALL
              a2ee 0038  ld   $38         ;14f1 'Keyword'
              a2ef 002c  ld   $2c         ;14f3 ','
              a2f0 0000  ld   $00         ;14f4 0
              a2f1 0035  ld   $35         ;14f5 BCC
              a2f2 0072  ld   $72         ;14f6 NE
              a2f3 00c0  ld   $c0
              a2f4 00cf  ld   $cf         ;14f8 CALL
              a2f5 0062  ld   $62         ;14f8 'EndOfLine'
              a2f6 0011  ld   $11         ;14fa LDWI
              a2f7 00a0  ld   $a0
              a2f8 0015  ld   $15
              a2f9 00cf  ld   $cf         ;14fd CALL
              a2fa 0018  ld   $18         ;14fd vAC
              a2fb fe00  bra  ac          ;+-----------------------------------+
              a2fc fcfd  bra  $a2fd       ;|                                   |
              a2fd 1418  ld   $18,y       ;| Trampoline for page $a200 lookups |
              a2fe e006  jmp  y,$06       ;|                                   |
              a2ff c218  st   [$18]       ;+-----------------------------------+
              a300 0015  ld   $15         ;| RAM segment address (high byte first)
              a301 00a0  ld   $a0         ;|
              a302 0058  ld   $58         ;| Length (1..256)
              a303 00cf  ld   $cf         ;15a0 CALL
              a304 0038  ld   $38         ;15a0 'Keyword'
              a305 0063  ld   $63         ;15a2 'c'
              a306 006c  ld   $6c         ;15a3 'l'
              a307 0073  ld   $73         ;15a4 's'
              a308 0000  ld   $00         ;15a5 0
              a309 0035  ld   $35         ;15a6 BCC
              a30a 003f  ld   $3f         ;15a7 EQ
              a30b 00cb  ld   $cb
              a30c 0011  ld   $11         ;15a9 LDWI
              a30d 0000  ld   $00
              a30e 0001  ld   $01
              a30f 00ad  ld   $ad         ;15ac PEEK
              a310 005e  ld   $5e         ;15ad ST
              a311 0031  ld   $31         ;15ad 'Pos'+1
              a312 0059  ld   $59         ;15af LDI
              a313 000e  ld   $0e
              a314 002b  ld   $2b         ;15b1 STW
              a315 006a  ld   $6a         ;15b1 'j'
              a316 00cf  ld   $cf         ;15b3 CALL
              a317 005a  ld   $5a         ;15b3 'Newline'
              a318 0021  ld   $21         ;15b5 LDW
              a319 006a  ld   $6a         ;15b5 'j'
              a31a 00e6  ld   $e6         ;15b7 SUBI
              a31b 0001  ld   $01
              a31c 0035  ld   $35         ;15b9 BCC
              a31d 004d  ld   $4d         ;15ba GT
              a31e 00af  ld   $af
              a31f 00cf  ld   $cf         ;15bc CALL
              a320 005a  ld   $5a         ;15bc 'Newline'
              a321 0011  ld   $11         ;15be LDWI
              a322 0000  ld   $00
              a323 0001  ld   $01
              a324 00ad  ld   $ad         ;15c1 PEEK
              a325 008c  ld   $8c         ;15c2 XORI
              a326 0008  ld   $08
              a327 0035  ld   $35         ;15c4 BCC
              a328 0072  ld   $72         ;15c5 NE
              a329 00ba  ld   $ba
              a32a 0059  ld   $59         ;15c7 LDI
              a32b 0008  ld   $08
              a32c 005e  ld   $5e         ;15c9 ST
              a32d 0031  ld   $31         ;15c9 'Pos'+1
              a32e 00cf  ld   $cf         ;15cb CALL
              a32f 0062  ld   $62         ;15cb 'EndOfLine'
              a330 00cf  ld   $cf         ;15cd CALL
              a331 0038  ld   $38         ;15cd 'Keyword'
              a332 006c  ld   $6c         ;15cf 'l'
              a333 0069  ld   $69         ;15d0 'i'
              a334 0073  ld   $73         ;15d1 's'
              a335 0074  ld   $74         ;15d2 't'
              a336 0000  ld   $00         ;15d3 0
              a337 0035  ld   $35         ;15d4 BCC
              a338 003f  ld   $3f         ;15d5 EQ
              a339 00d9  ld   $d9
              a33a 00cf  ld   $cf         ;15d7 CALL
              a33b 007e  ld   $7e         ;15d7 'List'
              a33c 00cf  ld   $cf         ;15d9 CALL
              a33d 0062  ld   $62         ;15d9 'EndOfLine'
              a33e 00cf  ld   $cf         ;15db CALL
              a33f 0038  ld   $38         ;15db 'Keyword'
              a340 0073  ld   $73         ;15dd 's'
              a341 0061  ld   $61         ;15de 'a'
              a342 0076  ld   $76         ;15df 'v'
              a343 0065  ld   $65         ;15e0 'e'
              a344 0000  ld   $00         ;15e1 0
              a345 0035  ld   $35         ;15e2 BCC
              a346 003f  ld   $3f         ;15e3 EQ
              a347 00f1  ld   $f1
              a348 001a  ld   $1a         ;15e5 LD
              a349 0021  ld   $21
              a34a 00e6  ld   $e6         ;15e7 SUBI
              a34b 0028  ld   $28
              a34c 0035  ld   $35         ;15e9 BCC
              a34d 0053  ld   $53         ;15ea GE
              a34e 00ec  ld   $ec
              a34f 00cf  ld   $cf         ;15ec CALL
              a350 0046  ld   $46         ;15ec 'ValueError'
              a351 0011  ld   $11         ;15ee LDWI
              a352 00a0  ld   $a0
              a353 0017  ld   $17
              a354 00cf  ld   $cf         ;15f1 CALL
              a355 0018  ld   $18         ;15f1 vAC
              a356 0011  ld   $11         ;15f3 LDWI
              a357 00eb  ld   $eb
              a358 000d  ld   $0d
              a359 00cf  ld   $cf         ;15f6 CALL
              a35a 0018  ld   $18         ;15f6 vAC
              a35b 0016  ld   $16         ;| RAM segment address (high byte first)
              a35c 00a0  ld   $a0         ;|
              a35d 0060  ld   $60         ;| Length (1..256)
              a35e 00cf  ld   $cf         ;16a0 CALL
              a35f 0038  ld   $38         ;16a0 'Keyword'
              a360 006e  ld   $6e         ;16a2 'n'
              a361 0065  ld   $65         ;16a3 'e'
              a362 0077  ld   $77         ;16a4 'w'
              a363 0000  ld   $00         ;16a5 0
              a364 0035  ld   $35         ;16a6 BCC
              a365 003f  ld   $3f         ;16a7 EQ
              a366 00b0  ld   $b0
              a367 00cf  ld   $cf         ;16a9 CALL
              a368 0078  ld   $78         ;16a9 'Clear'
              a369 002b  ld   $2b         ;16ab STW
              a36a 0048  ld   $48         ;16ab 'End'
              a36b 00cf  ld   $cf         ;16ad CALL
              a36c 007e  ld   $7e         ;16ad 'List'
              a36d 00cf  ld   $cf         ;16af CALL
              a36e 0056  ld   $56         ;16af 'Prompt'
              a36f 0000  ld   $00         ;16b1 0
              a370 00cf  ld   $cf         ;16b2 CALL
              a371 0038  ld   $38         ;16b2 'Keyword'
              a372 006c  ld   $6c         ;16b4 'l'
              a373 0065  ld   $65         ;16b5 'e'
              a374 0074  ld   $74         ;16b6 't'
              a375 0000  ld   $00         ;16b7 0
              a376 00cf  ld   $cf         ;16b8 CALL
              a377 0042  ld   $42         ;16b8 'Variable'
              a378 002b  ld   $2b         ;16ba STW
              a379 0068  ld   $68         ;16ba 'Address'
              a37a 00cf  ld   $cf         ;16bc CALL
              a37b 0034  ld   $34         ;16bc 'Spaces'
              a37c 00cf  ld   $cf         ;16be CALL
              a37d 0038  ld   $38         ;16be 'Keyword'
              a37e 0028  ld   $28         ;16c0 40
              a37f 0000  ld   $00         ;16c1 0
              a380 0035  ld   $35         ;16c2 BCC
              a381 003f  ld   $3f         ;16c3 EQ
              a382 00ef  ld   $ef
              a383 00cf  ld   $cf         ;16c5 CALL
              a384 003a  ld   $3a         ;16c5 'Expression'
              a385 0035  ld   $35         ;16c7 BCC
              a386 0053  ld   $53         ;16c8 GE
              a387 00ca  ld   $ca
              a388 00cf  ld   $cf         ;16ca CALL
              a389 0046  ld   $46         ;16ca 'ValueError'
              a38a 001a  ld   $1a         ;16cc LD
              a38b 0069  ld   $69         ;16cc 'Address'+1
              a38c 00b8  ld   $b8         ;16ce SUBW
              a38d 003c  ld   $3c         ;16ce 'Value'
              a38e 00e6  ld   $e6         ;16d0 SUBI
              a38f 0002  ld   $02
              a390 005e  ld   $5e         ;16d2 ST
              a391 0069  ld   $69         ;16d2 'Address'+1
              a392 0021  ld   $21         ;16d4 LDW
              a393 0048  ld   $48         ;16d4 'End'
              a394 00fc  ld   $fc         ;16d6 XORW
              a395 0068  ld   $68         ;16d6 'Address'
              a396 0035  ld   $35         ;16d8 BCC
              a397 0053  ld   $53         ;16d9 GE
              a398 00dd  ld   $dd
              a399 0021  ld   $21         ;16db LDW
              a39a 0048  ld   $48         ;16db 'End'
              a39b 0090  ld   $90         ;16dd BRA
              a39c 00e1  ld   $e1
              a39d 0021  ld   $21         ;16df LDW
              a39e 0068  ld   $68         ;16df 'Address'
              a39f 00b8  ld   $b8         ;16e1 SUBW
              a3a0 0048  ld   $48         ;16e1 'End'
              a3a1 0035  ld   $35         ;16e3 BCC
              a3a2 0053  ld   $53         ;16e4 GE
              a3a3 00e6  ld   $e6
              a3a4 00cf  ld   $cf         ;16e6 CALL
              a3a5 0046  ld   $46         ;16e6 'ValueError'
              a3a6 00cf  ld   $cf         ;16e8 CALL
              a3a7 0038  ld   $38         ;16e8 'Keyword'
              a3a8 0029  ld   $29         ;16ea 41
              a3a9 0000  ld   $00         ;16eb 0
              a3aa 0035  ld   $35         ;16ec BCC
              a3ab 0072  ld   $72         ;16ed NE
              a3ac 00ef  ld   $ef
              a3ad 00cf  ld   $cf         ;16ef CALL
              a3ae 004a  ld   $4a         ;16ef 'SyntaxError'
              a3af 00cf  ld   $cf         ;16f1 CALL
              a3b0 0038  ld   $38         ;16f1 'Keyword'
              a3b1 003d  ld   $3d         ;16f3 '='
              a3b2 0000  ld   $00         ;16f4 0
              a3b3 0035  ld   $35         ;16f5 BCC
              a3b4 0072  ld   $72         ;16f6 NE
              a3b5 00f8  ld   $f8
              a3b6 00cf  ld   $cf         ;16f8 CALL
              a3b7 004a  ld   $4a         ;16f8 'SyntaxError'
              a3b8 00cf  ld   $cf         ;16fa CALL
              a3b9 003a  ld   $3a         ;16fa 'Expression'
              a3ba 00f3  ld   $f3         ;16fc DOKE
              a3bb 0068  ld   $68         ;16fc 'Address'
              a3bc 00cf  ld   $cf         ;16fe CALL
              a3bd 0062  ld   $62         ;16fe 'EndOfLine'
              a3be 0017  ld   $17         ;| RAM segment address (high byte first)
              a3bf 00a0  ld   $a0         ;|
              a3c0 005f  ld   $5f         ;| Length (1..256)
              a3c1 0021  ld   $21         ;17a0 LDW
              a3c2 0000  ld   $00
              a3c3 005e  ld   $5e         ;17a2 ST
              a3c4 0027  ld   $27
              a3c5 00e6  ld   $e6         ;17a4 SUBI
              a3c6 0060  ld   $60
              a3c7 002b  ld   $2b         ;17a6 STW
              a3c8 0068  ld   $68         ;17a6 'Address'
              a3c9 00cd  ld   $cd         ;17a8 DEF
              a3ca 00e8  ld   $e8
              a3cb 0075  ld   $75         ;17aa PUSH
              a3cc 002b  ld   $2b         ;17ab STW
              a3cd 0044  ld   $44         ;17ab 'k'
              a3ce 001a  ld   $1a         ;17ad LD
              a3cf 0027  ld   $27
              a3d0 00e3  ld   $e3         ;17af ADDI
              a3d1 0008  ld   $08
              a3d2 005e  ld   $5e         ;17b1 ST
              a3d3 0027  ld   $27
              a3d4 001a  ld   $1a         ;17b3 LD
              a3d5 0030  ld   $30         ;17b3 'Pos'
              a3d6 00e6  ld   $e6         ;17b5 SUBI
              a3d7 0006  ld   $06
              a3d8 0035  ld   $35         ;17b7 BCC
              a3d9 0053  ld   $53         ;17b8 GE
              a3da 00de  ld   $de
              a3db 0059  ld   $59         ;17ba LDI
              a3dc 000a  ld   $0a
              a3dd 00f0  ld   $f0         ;17bc POKE
              a3de 0068  ld   $68         ;17bc 'Address'
              a3df 0021  ld   $21         ;17be LDW
              a3e0 0068  ld   $68         ;17be 'Address'
              a3e1 0088  ld   $88         ;17c0 ORI
              a3e2 001f  ld   $1f
              a3e3 008c  ld   $8c         ;17c2 XORI
              a3e4 001f  ld   $1f
              a3e5 002b  ld   $2b         ;17c4 STW
              a3e6 0068  ld   $68         ;17c4 'Address'
              a3e7 002b  ld   $2b         ;17c6 STW
              a3e8 0024  ld   $24
              a3e9 0059  ld   $59         ;17c8 LDI
              a3ea 0001  ld   $01
              a3eb 005e  ld   $5e         ;17ca ST
              a3ec 0026  ld   $26
              a3ed 0011  ld   $11         ;17cc LDWI
              a3ee 0006  ld   $06
              a3ef 000b  ld   $0b
              a3f0 002b  ld   $2b         ;17cf STW
              a3f1 0022  ld   $22         ;17cf '_sysFn'
              a3f2 00b4  ld   $b4         ;17d1 SYS
              a3f3 00e7  ld   $e7
              a3f4 0035  ld   $35         ;17d3 BCC
              a3f5 003f  ld   $3f         ;17d4 EQ
              a3f6 00da  ld   $da
              a3f7 0059  ld   $59         ;17d6 LDI
              a3f8 0003  ld   $03
              a3f9 005e  ld   $5e         ;17d8 ST
              a3fa 000f  ld   $0f
              a3fb fe00  bra  ac          ;+-----------------------------------+
              a3fc fcfd  bra  $a3fd       ;|                                   |
              a3fd 1418  ld   $18,y       ;| Trampoline for page $a300 lookups |
              a3fe e006  jmp  y,$06       ;|                                   |
              a3ff c218  st   [$18]       ;+-----------------------------------+
              a400 00cf  ld   $cf         ;17da CALL
              a401 0058  ld   $58         ;17da 'TestBreak'
              a402 0059  ld   $59         ;17dc LDI
              a403 0008  ld   $08
              a404 005e  ld   $5e         ;17de ST
              a405 0027  ld   $27
              a406 0021  ld   $21         ;17e0 LDW
              a407 0044  ld   $44         ;17e0 'k'
              a408 00f0  ld   $f0         ;17e2 POKE
              a409 0068  ld   $68         ;17e2 'Address'
              a40a 0093  ld   $93         ;17e4 INC
              a40b 0068  ld   $68         ;17e4 'Address'
              a40c 00cf  ld   $cf         ;17e6 CALL
              a40d 0054  ld   $54         ;17e6 'PrintCharScreen'
              a40e 0063  ld   $63         ;17e8 POP
              a40f 00ff  ld   $ff         ;17e9 RET
              a410 002b  ld   $2b         ;17ea STW
              a411 0050  ld   $50         ;17ea 'PrintChar'
              a412 001a  ld   $1a         ;17ec LD
              a413 000f  ld   $0f
              a414 008c  ld   $8c         ;17ee XORI
              a415 00ff  ld   $ff
              a416 0035  ld   $35         ;17f0 BCC
              a417 0072  ld   $72         ;17f1 NE
              a418 00ea  ld   $ea
              a419 00cf  ld   $cf         ;17f3 CALL
              a41a 007e  ld   $7e         ;17f3 'List'
              a41b 0059  ld   $59         ;17f5 LDI
              a41c 0020  ld   $20
              a41d 00cf  ld   $cf         ;17f7 CALL
              a41e 0050  ld   $50         ;17f7 'PrintChar'
              a41f 0021  ld   $21         ;17f9 LDW
              a420 0054  ld   $54         ;17f9 'PrintCharScreen'
              a421 002b  ld   $2b         ;17fb STW
              a422 0050  ld   $50         ;17fb 'PrintChar'
              a423 00cf  ld   $cf         ;17fd CALL
              a424 0062  ld   $62         ;17fd 'EndOfLine'
              a425 0018  ld   $18         ;| RAM segment address (high byte first)
              a426 00a0  ld   $a0         ;|
              a427 0060  ld   $60         ;| Length (1..256)
              a428 0011  ld   $11         ;18a0 LDWI
              a429 00e1  ld   $e1
              a42a 0004  ld   $04
              a42b 002b  ld   $2b         ;18a3 STW
              a42c 0022  ld   $22         ;18a3 '_sysFn'
              a42d 0059  ld   $59         ;18a5 LDI
              a42e 0000  ld   $00
              a42f 005e  ld   $5e         ;18a7 ST
              a430 0030  ld   $30         ;18a7 'Pos'
              a431 005e  ld   $5e         ;18a9 ST
              a432 0026  ld   $26
              a433 001a  ld   $1a         ;18ab LD
              a434 0031  ld   $31         ;18ab 'Pos'+1
              a435 00e3  ld   $e3         ;18ad ADDI
              a436 000f  ld   $0f
              a437 0082  ld   $82         ;18af ANDI
              a438 0078  ld   $78
              a439 0035  ld   $35         ;18b1 BCC
              a43a 0072  ld   $72         ;18b2 NE
              a43b 00b4  ld   $b4
              a43c 0059  ld   $59         ;18b4 LDI
              a43d 0008  ld   $08
              a43e 005e  ld   $5e         ;18b6 ST
              a43f 0031  ld   $31         ;18b6 'Pos'+1
              a440 0021  ld   $21         ;18b8 LDW
              a441 002a  ld   $2a
              a442 002b  ld   $2b         ;18ba STW
              a443 0024  ld   $24
              a444 0021  ld   $21         ;18bc LDW
              a445 0030  ld   $30         ;18bc 'Pos'
              a446 002b  ld   $2b         ;18be STW
              a447 0028  ld   $28
              a448 00b4  ld   $b4         ;18c0 SYS
              a449 00cc  ld   $cc
              a44a 0093  ld   $93         ;18c2 INC
              a44b 0028  ld   $28
              a44c 00b4  ld   $b4         ;18c4 SYS
              a44d 00cc  ld   $cc
              a44e 0093  ld   $93         ;18c6 INC
              a44f 0028  ld   $28
              a450 001a  ld   $1a         ;18c8 LD
              a451 0028  ld   $28
              a452 008c  ld   $8c         ;18ca XORI
              a453 00a0  ld   $a0
              a454 0035  ld   $35         ;18cc BCC
              a455 0072  ld   $72         ;18cd NE
              a456 00be  ld   $be
              a457 0011  ld   $11         ;18cf LDWI
              a458 0000  ld   $00
              a459 0001  ld   $01
              a45a 002b  ld   $2b         ;18d2 STW
              a45b 0040  ld   $40         ;18d2 'i'
              a45c 0088  ld   $88         ;18d4 ORI
              a45d 00ff  ld   $ff
              a45e 00f6  ld   $f6         ;18d6 DEEK
              a45f 00b8  ld   $b8         ;18d7 SUBW
              a460 0030  ld   $30         ;18d7 'Pos'
              a461 001a  ld   $1a         ;18d9 LD
              a462 0019  ld   $19
              a463 0035  ld   $35         ;18db BCC
              a464 0072  ld   $72         ;18dc NE
              a465 00f9  ld   $f9
              a466 0021  ld   $21         ;18de LDW
              a467 0040  ld   $40         ;18de 'i'
              a468 00e3  ld   $e3         ;18e0 ADDI
              a469 0010  ld   $10
              a46a 002b  ld   $2b         ;18e2 STW
              a46b 0024  ld   $24         ;18e2 '_sysArgs0'
              a46c 00ad  ld   $ad         ;18e4 PEEK
              a46d 005e  ld   $5e         ;18e5 ST
              a46e 0026  ld   $26
              a46f 0021  ld   $21         ;18e7 LDW
              a470 0040  ld   $40         ;18e7 'i'
              a471 00ad  ld   $ad         ;18e9 PEEK
              a472 00f0  ld   $f0         ;18ea POKE
              a473 0024  ld   $24         ;18ea '_sysArgs0'
              a474 001a  ld   $1a         ;18ec LD
              a475 0026  ld   $26
              a476 00f0  ld   $f0         ;18ee POKE
              a477 0040  ld   $40         ;18ee 'i'
              a478 0093  ld   $93         ;18f0 INC
              a479 0040  ld   $40         ;18f0 'i'
              a47a 0093  ld   $93         ;18f2 INC
              a47b 0040  ld   $40         ;18f2 'i'
              a47c 001a  ld   $1a         ;18f4 LD
              a47d 0040  ld   $40         ;18f4 'i'
              a47e 008c  ld   $8c         ;18f6 XORI
              a47f 00e0  ld   $e0
              a480 0035  ld   $35         ;18f8 BCC
              a481 0072  ld   $72         ;18f9 NE
              a482 00dc  ld   $dc
              a483 0093  ld   $93         ;18fb INC
              a484 0030  ld   $30         ;18fb 'Pos'
              a485 0093  ld   $93         ;18fd INC
              a486 0030  ld   $30         ;18fd 'Pos'
              a487 00ff  ld   $ff         ;18ff RET
              a488 0019  ld   $19         ;| RAM segment address (high byte first)
              a489 00a0  ld   $a0         ;|
              a48a 0060  ld   $60         ;| Length (1..256)
              a48b 0059  ld   $59         ;19a0 LDI
              a48c 0001  ld   $01
              a48d 002b  ld   $2b         ;19a2 STW
              a48e 0024  ld   $24
              a48f 0011  ld   $11         ;19a4 LDWI
              a490 0000  ld   $00
              a491 0001  ld   $01
              a492 002b  ld   $2b         ;19a7 STW
              a493 0026  ld   $26
              a494 00cf  ld   $cf         ;19a9 CALL
              a495 003a  ld   $3a         ;19a9 'Expression'
              a496 0075  ld   $75         ;19ab PUSH
              a497 00ec  ld   $ec         ;19ac STLW
              a498 0000  ld   $00
              a499 00cf  ld   $cf         ;19ae CALL
              a49a 0038  ld   $38         ;19ae 'Keyword'
              a49b 002c  ld   $2c         ;19b0 ','
              a49c 0000  ld   $00         ;19b1 0
              a49d 0035  ld   $35         ;19b2 BCC
              a49e 0072  ld   $72         ;19b3 NE
              a49f 00b5  ld   $b5
              a4a0 00cf  ld   $cf         ;19b5 CALL
              a4a1 004a  ld   $4a         ;19b5 'SyntaxError'
              a4a2 00cf  ld   $cf         ;19b7 CALL
              a4a3 003a  ld   $3a         ;19b7 'Expression'
              a4a4 002b  ld   $2b         ;19b9 STW
              a4a5 006a  ld   $6a         ;19b9 'j'
              a4a6 0035  ld   $35         ;19bb BCC
              a4a7 0053  ld   $53         ;19bc GE
              a4a8 00c8  ld   $c8
              a4a9 0059  ld   $59         ;19be LDI
              a4aa 0000  ld   $00
              a4ab 00b8  ld   $b8         ;19c0 952
              a4ac 0026  ld   $26         ;19c1 38
              a4ad 002b  ld   $2b         ;19c2 STW
              a4ae 0026  ld   $26
              a4af 0059  ld   $59         ;19c4 LDI
              a4b0 0000  ld   $00
              a4b1 00b8  ld   $b8         ;19c6 SUBW
              a4b2 006a  ld   $6a         ;19c6 'j'
              a4b3 002b  ld   $2b         ;19c8 STW
              a4b4 006a  ld   $6a         ;19c8 'j'
              a4b5 00ee  ld   $ee         ;19ca LDLW
              a4b6 0000  ld   $00
              a4b7 002b  ld   $2b         ;19cc STW
              a4b8 0040  ld   $40         ;19cc 'i'
              a4b9 0035  ld   $35         ;19ce BCC
              a4ba 0053  ld   $53         ;19cf GE
              a4bb 00db  ld   $db
              a4bc 0059  ld   $59         ;19d1 LDI
              a4bd 0000  ld   $00
              a4be 00b8  ld   $b8         ;19d3 952
              a4bf 0024  ld   $24         ;19d4 36
              a4c0 002b  ld   $2b         ;19d5 STW
              a4c1 0024  ld   $24
              a4c2 0059  ld   $59         ;19d7 LDI
              a4c3 0000  ld   $00
              a4c4 00b8  ld   $b8         ;19d9 SUBW
              a4c5 0040  ld   $40         ;19d9 'i'
              a4c6 002b  ld   $2b         ;19db STW
              a4c7 0040  ld   $40         ;19db 'i'
              a4c8 00b8  ld   $b8         ;19dd SUBW
              a4c9 006a  ld   $6a         ;19dd 'j'
              a4ca 0035  ld   $35         ;19df BCC
              a4cb 0053  ld   $53         ;19e0 GE
              a4cc 00f8  ld   $f8
              a4cd 0021  ld   $21         ;19e2 LDW
              a4ce 0040  ld   $40         ;19e2 'i'
              a4cf 002b  ld   $2b         ;19e4 STW
              a4d0 004e  ld   $4e         ;19e4 'tmp'
              a4d1 0021  ld   $21         ;19e6 LDW
              a4d2 006a  ld   $6a         ;19e6 'j'
              a4d3 002b  ld   $2b         ;19e8 STW
              a4d4 0040  ld   $40         ;19e8 'i'
              a4d5 0021  ld   $21         ;19ea LDW
              a4d6 004e  ld   $4e         ;19ea 'tmp'
              a4d7 002b  ld   $2b         ;19ec STW
              a4d8 006a  ld   $6a         ;19ec 'j'
              a4d9 0021  ld   $21         ;19ee LDW
              a4da 0024  ld   $24
              a4db 002b  ld   $2b         ;19f0 STW
              a4dc 004e  ld   $4e         ;19f0 'tmp'
              a4dd 0021  ld   $21         ;19f2 LDW
              a4de 0026  ld   $26
              a4df 002b  ld   $2b         ;19f4 STW
              a4e0 0024  ld   $24
              a4e1 0021  ld   $21         ;19f6 LDW
              a4e2 004e  ld   $4e         ;19f6 'tmp'
              a4e3 002b  ld   $2b         ;19f8 STW
              a4e4 0026  ld   $26
              a4e5 0063  ld   $63         ;19fa POP
              a4e6 0011  ld   $11         ;19fb LDWI
              a4e7 00a0  ld   $a0
              a4e8 001a  ld   $1a
              a4e9 00cf  ld   $cf         ;19fe CALL
              a4ea 0018  ld   $18         ;19fe vAC
              a4eb 001a  ld   $1a         ;| RAM segment address (high byte first)
              a4ec 00a0  ld   $a0         ;|
              a4ed 0060  ld   $60         ;| Length (1..256)
              a4ee 0021  ld   $21         ;1aa0 LDW
              a4ef 003c  ld   $3c         ;1aa0 'Value'
              a4f0 0035  ld   $35         ;1aa2 BCC
              a4f1 0053  ld   $53         ;1aa3 GE
              a4f2 00a8  ld   $a8
              a4f3 0011  ld   $11         ;1aa5 LDWI
              a4f4 0000  ld   $00
              a4f5 0078  ld   $78
              a4f6 0090  ld   $90         ;1aa8 BRA
              a4f7 00ab  ld   $ab
              a4f8 0011  ld   $11         ;1aaa LDWI
              a4f9 0000  ld   $00
              a4fa 0088  ld   $88
              a4fb fe00  bra  ac          ;+-----------------------------------+
              a4fc fcfd  bra  $a4fd       ;|                                   |
              a4fd 1418  ld   $18,y       ;| Trampoline for page $a400 lookups |
              a4fe e006  jmp  y,$06       ;|                                   |
              a4ff c218  st   [$18]       ;+-----------------------------------+
              a500 002b  ld   $2b         ;1aad STW
              a501 0028  ld   $28
              a502 0021  ld   $21         ;1aaf LDW
              a503 0040  ld   $40         ;1aaf 'i'
              a504 002b  ld   $2b         ;1ab1 STW
              a505 004e  ld   $4e         ;1ab1 'tmp'
              a506 002b  ld   $2b         ;1ab3 STW
              a507 0044  ld   $44         ;1ab3 'k'
              a508 001a  ld   $1a         ;1ab5 LD
              a509 002b  ld   $2b
              a50a 00f0  ld   $f0         ;1ab7 POKE
              a50b 0030  ld   $30         ;1ab7 'Pos'
              a50c 0021  ld   $21         ;1ab9 LDW
              a50d 004e  ld   $4e         ;1ab9 'tmp'
              a50e 00e6  ld   $e6         ;1abb SUBI
              a50f 0001  ld   $01
              a510 002b  ld   $2b         ;1abd STW
              a511 004e  ld   $4e         ;1abd 'tmp'
              a512 0035  ld   $35         ;1abf BCC
              a513 0050  ld   $50         ;1ac0 LT
              a514 00fc  ld   $fc
              a515 0021  ld   $21         ;1ac2 LDW
              a516 0044  ld   $44         ;1ac2 'k'
              a517 00b8  ld   $b8         ;1ac4 SUBW
              a518 006a  ld   $6a         ;1ac4 'j'
              a519 00b8  ld   $b8         ;1ac6 SUBW
              a51a 006a  ld   $6a         ;1ac6 'j'
              a51b 002b  ld   $2b         ;1ac8 STW
              a51c 0044  ld   $44         ;1ac8 'k'
              a51d 0035  ld   $35         ;1aca BCC
              a51e 0053  ld   $53         ;1acb GE
              a51f 00d7  ld   $d7
              a520 0099  ld   $99         ;1acd ADDW
              a521 0040  ld   $40         ;1acd 'i'
              a522 0099  ld   $99         ;1acf ADDW
              a523 0040  ld   $40         ;1acf 'i'
              a524 002b  ld   $2b         ;1ad1 STW
              a525 0044  ld   $44         ;1ad1 'k'
              a526 0021  ld   $21         ;1ad3 LDW
              a527 0026  ld   $26
              a528 0099  ld   $99         ;1ad5 ADDW
              a529 0030  ld   $30         ;1ad5 'Pos'
              a52a 002b  ld   $2b         ;1ad7 STW
              a52b 0030  ld   $30         ;1ad7 'Pos'
              a52c 0021  ld   $21         ;1ad9 LDW
              a52d 0024  ld   $24
              a52e 0099  ld   $99         ;1adb ADDW
              a52f 0030  ld   $30         ;1adb 'Pos'
              a530 002b  ld   $2b         ;1add STW
              a531 0030  ld   $30         ;1add 'Pos'
              a532 001a  ld   $1a         ;1adf LD
              a533 0030  ld   $30         ;1adf 'Pos'
              a534 00e6  ld   $e6         ;1ae1 SUBI
              a535 00a0  ld   $a0
              a536 0035  ld   $35         ;1ae3 BCC
              a537 0050  ld   $50         ;1ae4 LT
              a538 00ed  ld   $ed
              a539 0035  ld   $35         ;1ae6 BCC
              a53a 0056  ld   $56         ;1ae7 LE
              a53b 00eb  ld   $eb
              a53c 0093  ld   $93         ;1ae9 INC
              a53d 0031  ld   $31         ;1ae9 'Pos'+1
              a53e 00e3  ld   $e3         ;1aeb ADDI
              a53f 0040  ld   $40
              a540 005e  ld   $5e         ;1aed ST
              a541 0030  ld   $30         ;1aed 'Pos'
              a542 001a  ld   $1a         ;1aef LD
              a543 0031  ld   $31         ;1aef 'Pos'+1
              a544 0082  ld   $82         ;1af1 ANDI
              a545 0078  ld   $78
              a546 0035  ld   $35         ;1af3 BCC
              a547 0072  ld   $72         ;1af4 NE
              a548 00fa  ld   $fa
              a549 0021  ld   $21         ;1af6 LDW
              a54a 0028  ld   $28
              a54b 0099  ld   $99         ;1af8 ADDW
              a54c 0030  ld   $30         ;1af8 'Pos'
              a54d 002b  ld   $2b         ;1afa STW
              a54e 0030  ld   $30         ;1afa 'Pos'
              a54f 0090  ld   $90         ;1afc BRA
              a550 00b3  ld   $b3
              a551 00cf  ld   $cf         ;1afe CALL
              a552 0062  ld   $62         ;1afe 'EndOfLine'
              a553 001b  ld   $1b         ;| RAM segment address (high byte first)
              a554 00a0  ld   $a0         ;|
              a555 0006  ld   $06         ;| Length (1..256)
              a556 00a0  ld   $a0         ;1ba0 _Buffer
              a557 001b  ld   $1b
              a558 004e  ld   $4e         ;1ba2 'N'
              a559 0045  ld   $45         ;1ba3 'E'
              a55a 0057  ld   $57         ;1ba4 'W'
              a55b 0000  ld   $00         ;1ba5 0
              a55c 0000  ld   $00         ;End of Apps/TinyBASIC/TinyBASIC_v4.gcl, size 3199
                                          ;+-----------------------------------+
                                          ;| Apps/WozMon/WozMon_v2.gcl         |
                                          ;+-----------------------------------+
              a55d dc54  st   $54,[y,x++] ;'T'
              a55e dc69  st   $69,[y,x++] ;'i'
              a55f dc6e  st   $6e,[y,x++] ;'n'
              a560 dc79  st   $79,[y,x++] ;'y'
              a561 dc42  st   $42,[y,x++] ;'B'
              a562 dc41  st   $41,[y,x++] ;'A'
              a563 dc53  st   $53,[y,x++] ;'S'
              a564 dc49  st   $49,[y,x++] ;'I'
              a565 00de  ld   $de
              a566 c218  st   [$18]
              a567 0098  ld   $98
              a568 14f3  ld   $f3,y
              a569 e019  jmp  y,$19
              a56a c219  st   [$19]
WozMon:       a56b 0002  ld   $02         ;| RAM segment address (high byte first)
              a56c 0000  ld   $00         ;|
              a56d 00e2  ld   $e2         ;| Length (1..256)
              a56e 00cd  ld   $cd         ;0200 DEF
              a56f 000a  ld   $0a
              a570 002a  ld   $2a
              a571 002a  ld   $2a
              a572 0020  ld   $20
              a573 0057  ld   $57
              a574 006f  ld   $6f
              a575 007a  ld   $7a
              a576 004d  ld   $4d
              a577 006f  ld   $6f
              a578 006e  ld   $6e
              a579 0000  ld   $00
              a57a 002b  ld   $2b         ;020c STW
              a57b 0030  ld   $30         ;020c 'tmp'
              a57c 0011  ld   $11         ;020e LDWI
              a57d 00df  ld   $df
              a57e 0001  ld   $01
              a57f 00f6  ld   $f6         ;0211 DEEK
              a580 002b  ld   $2b         ;0212 STW
              a581 0032  ld   $32         ;0212 'Pos'
              a582 00cd  ld   $cd         ;0214 DEF
              a583 0060  ld   $60
              a584 00e6  ld   $e6         ;0216 SUBI
              a585 0052  ld   $52
              a586 0035  ld   $35         ;0218 BCC
              a587 0053  ld   $53         ;0219 GE
              a588 0022  ld   $22
              a589 00e3  ld   $e3         ;021b ADDI
              a58a 0032  ld   $32
              a58b 002b  ld   $2b         ;021d STW
              a58c 0034  ld   $34         ;021d 'i'
              a58d 0011  ld   $11         ;021f LDWI
              a58e 0000  ld   $00
              a58f 0007  ld   $07
              a590 0090  ld   $90         ;0222 BRA
              a591 0027  ld   $27
              a592 002b  ld   $2b         ;0224 STW
              a593 0034  ld   $34         ;0224 'i'
              a594 0011  ld   $11         ;0226 LDWI
              a595 0000  ld   $00
              a596 0008  ld   $08
              a597 002b  ld   $2b         ;0229 STW
              a598 0036  ld   $36         ;0229 'k'
              a599 0021  ld   $21         ;022b LDW
              a59a 0034  ld   $34         ;022b 'i'
              a59b 00e9  ld   $e9         ;022d LSLW
              a59c 00e9  ld   $e9         ;022e LSLW
              a59d 0099  ld   $99         ;022f ADDW
              a59e 0034  ld   $34         ;022f 'i'
              a59f 0099  ld   $99         ;0231 ADDW
              a5a0 0036  ld   $36         ;0231 'k'
              a5a1 002b  ld   $2b         ;0233 STW
              a5a2 0036  ld   $36         ;0233 'k'
              a5a3 0011  ld   $11         ;0235 LDWI
              a5a4 00e1  ld   $e1
              a5a5 0004  ld   $04
              a5a6 002b  ld   $2b         ;0238 STW
              a5a7 0022  ld   $22
              a5a8 0021  ld   $21         ;023a LDW
              a5a9 002a  ld   $2a
              a5aa 002b  ld   $2b         ;023c STW
              a5ab 0024  ld   $24
              a5ac 0021  ld   $21         ;023e LDW
              a5ad 0032  ld   $32         ;023e 'Pos'
              a5ae 002b  ld   $2b         ;0240 STW
              a5af 0028  ld   $28
              a5b0 00ec  ld   $ec         ;0242 STLW
              a5b1 00fe  ld   $fe
              a5b2 00e3  ld   $e3         ;0244 ADDI
              a5b3 0006  ld   $06
              a5b4 002b  ld   $2b         ;0246 STW
              a5b5 0032  ld   $32         ;0246 'Pos'
              a5b6 0059  ld   $59         ;0248 LDI
              a5b7 0005  ld   $05
              a5b8 002b  ld   $2b         ;024a STW
              a5b9 0034  ld   $34         ;024a 'i'
              a5ba 0021  ld   $21         ;024c LDW
              a5bb 0036  ld   $36         ;024c 'k'
              a5bc 007f  ld   $7f         ;024e LUP
              a5bd 0000  ld   $00
              a5be 005e  ld   $5e         ;0250 ST
              a5bf 0026  ld   $26
              a5c0 00b4  ld   $b4         ;0252 SYS
              a5c1 00cc  ld   $cc
              a5c2 0093  ld   $93         ;0254 INC
              a5c3 0036  ld   $36         ;0254 'k'
              a5c4 0093  ld   $93         ;0256 INC
              a5c5 0028  ld   $28
              a5c6 0021  ld   $21         ;0258 LDW
              a5c7 0034  ld   $34         ;0258 'i'
              a5c8 00e6  ld   $e6         ;025a SUBI
              a5c9 0001  ld   $01
              a5ca 0035  ld   $35         ;025c BCC
              a5cb 004d  ld   $4d         ;025d GT
              a5cc 0048  ld   $48
              a5cd 00ee  ld   $ee         ;025f LDLW
              a5ce 00fe  ld   $fe
              a5cf 00ff  ld   $ff         ;0261 RET
              a5d0 002b  ld   $2b         ;0262 STW
              a5d1 0038  ld   $38         ;0262 'PrintChar'
              a5d2 00cd  ld   $cd         ;0264 DEF
              a5d3 00ad  ld   $ad
              a5d4 001a  ld   $1a         ;0266 LD
              a5d5 0032  ld   $32         ;0266 'Pos'
              a5d6 0035  ld   $35         ;0268 BCC
              a5d7 003f  ld   $3f         ;0269 EQ
              a5d8 00ac  ld   $ac
              a5d9 0011  ld   $11         ;026b LDWI
              a5da 00e1  ld   $e1
              a5db 0004  ld   $04
              a5dc 002b  ld   $2b         ;026e STW
              a5dd 0022  ld   $22
              a5de 0011  ld   $11         ;0270 LDWI
              a5df 0000  ld   $00
              a5e0 0008  ld   $08
              a5e1 005e  ld   $5e         ;0273 ST
              a5e2 0032  ld   $32         ;0273 'Pos'
              a5e3 0099  ld   $99         ;0275 ADDW
              a5e4 0032  ld   $32         ;0275 'Pos'
              a5e5 0035  ld   $35         ;0277 BCC
              a5e6 0053  ld   $53         ;0278 GE
              a5e7 007b  ld   $7b
              a5e8 0011  ld   $11         ;027a LDWI
              a5e9 0000  ld   $00
              a5ea 0008  ld   $08
              a5eb 002b  ld   $2b         ;027d STW
              a5ec 0032  ld   $32         ;027d 'Pos'
              a5ed 002b  ld   $2b         ;027f STW
              a5ee 0028  ld   $28
              a5ef 005e  ld   $5e         ;0281 ST
              a5f0 0026  ld   $26
              a5f1 00b4  ld   $b4         ;0283 SYS
              a5f2 00cc  ld   $cc
              a5f3 0093  ld   $93         ;0285 INC
              a5f4 0028  ld   $28
              a5f5 001a  ld   $1a         ;0287 LD
              a5f6 0028  ld   $28
              a5f7 008c  ld   $8c         ;0289 XORI
              a5f8 00a0  ld   $a0
              a5f9 0035  ld   $35         ;028b BCC
              a5fa 0072  ld   $72         ;028c NE
              a5fb fe00  bra  ac          ;+-----------------------------------+
              a5fc fcfd  bra  $a5fd       ;|                                   |
              a5fd 1418  ld   $18,y       ;| Trampoline for page $a500 lookups |
              a5fe e006  jmp  y,$06       ;|                                   |
              a5ff c218  st   [$18]       ;+-----------------------------------+
              a600 0081  ld   $81
              a601 0011  ld   $11         ;028e LDWI
              a602 00ee  ld   $ee
              a603 0001  ld   $01
              a604 002b  ld   $2b         ;0291 STW
              a605 0034  ld   $34         ;0291 'i'
              a606 0021  ld   $21         ;0293 LDW
              a607 0034  ld   $34         ;0293 'i'
              a608 00ad  ld   $ad         ;0295 PEEK
              a609 00e6  ld   $e6         ;0296 SUBI
              a60a 0078  ld   $78
              a60b 0035  ld   $35         ;0298 BCC
              a60c 0053  ld   $53         ;0299 GE
              a60d 009d  ld   $9d
              a60e 008c  ld   $8c         ;029b XORI
              a60f 0080  ld   $80
              a610 0090  ld   $90         ;029d BRA
              a611 009f  ld   $9f
              a612 008c  ld   $8c         ;029f XORI
              a613 0008  ld   $08
              a614 00f0  ld   $f0         ;02a1 POKE
              a615 0034  ld   $34         ;02a1 'i'
              a616 0021  ld   $21         ;02a3 LDW
              a617 0034  ld   $34         ;02a3 'i'
              a618 00e6  ld   $e6         ;02a5 SUBI
              a619 0002  ld   $02
              a61a 002b  ld   $2b         ;02a7 STW
              a61b 0034  ld   $34         ;02a7 'i'
              a61c 008c  ld   $8c         ;02a9 XORI
              a61d 00fe  ld   $fe
              a61e 0035  ld   $35         ;02ab BCC
              a61f 0072  ld   $72         ;02ac NE
              a620 0091  ld   $91
              a621 00ff  ld   $ff         ;02ae RET
              a622 002b  ld   $2b         ;02af STW
              a623 003a  ld   $3a         ;02af 'CNewline'
              a624 00cd  ld   $cd         ;02b1 DEF
              a625 00d9  ld   $d9
              a626 0075  ld   $75         ;02b3 PUSH
              a627 002b  ld   $2b         ;02b4 STW
              a628 0030  ld   $30         ;02b4 'tmp'
              a629 0011  ld   $11         ;02b6 LDWI
              a62a 0052  ld   $52
              a62b 0006  ld   $06
              a62c 002b  ld   $2b         ;02b9 STW
              a62d 0022  ld   $22
              a62e 0021  ld   $21         ;02bb LDW
              a62f 0030  ld   $30         ;02bb 'tmp'
              a630 00b4  ld   $b4         ;02bd SYS
              a631 00f6  ld   $f6
              a632 00e6  ld   $e6         ;02bf SUBI
              a633 000a  ld   $0a
              a634 0035  ld   $35         ;02c1 BCC
              a635 0050  ld   $50         ;02c2 LT
              a636 00c4  ld   $c4
              a637 00e3  ld   $e3         ;02c4 ADDI
              a638 0007  ld   $07
              a639 00e3  ld   $e3         ;02c6 ADDI
              a63a 003a  ld   $3a
              a63b 00cf  ld   $cf         ;02c8 CALL
              a63c 0038  ld   $38         ;02c8 'PrintChar'
              a63d 0021  ld   $21         ;02ca LDW
              a63e 0030  ld   $30         ;02ca 'tmp'
              a63f 0082  ld   $82         ;02cc ANDI
              a640 000f  ld   $0f
              a641 00e6  ld   $e6         ;02ce SUBI
              a642 000a  ld   $0a
              a643 0035  ld   $35         ;02d0 BCC
              a644 0050  ld   $50         ;02d1 LT
              a645 00d3  ld   $d3
              a646 00e3  ld   $e3         ;02d3 ADDI
              a647 0007  ld   $07
              a648 00e3  ld   $e3         ;02d5 ADDI
              a649 003a  ld   $3a
              a64a 00cf  ld   $cf         ;02d7 CALL
              a64b 0038  ld   $38         ;02d7 'PrintChar'
              a64c 0063  ld   $63         ;02d9 POP
              a64d 00ff  ld   $ff         ;02da RET
              a64e 002b  ld   $2b         ;02db STW
              a64f 003c  ld   $3c         ;02db 'PrintByte'
              a650 0011  ld   $11         ;02dd LDWI
              a651 0000  ld   $00
              a652 0003  ld   $03
              a653 00cf  ld   $cf         ;02e0 CALL
              a654 0018  ld   $18         ;02e0 vAC
              a655 0003  ld   $03         ;| RAM segment address (high byte first)
              a656 0000  ld   $00         ;|
              a657 00f3  ld   $f3         ;| Length (1..256)
              a658 00cd  ld   $cd         ;0300 DEF
              a659 00d3  ld   $d3
              a65a 0075  ld   $75         ;0302 PUSH
              a65b 0059  ld   $59         ;0303 LDI
              a65c 0080  ld   $80
              a65d 002b  ld   $2b         ;0305 STW
              a65e 003e  ld   $3e         ;0305 'Buffer'
              a65f 00cf  ld   $cf         ;0307 CALL
              a660 003a  ld   $3a         ;0307 'CNewline'
              a661 0093  ld   $93         ;0309 INC
              a662 003e  ld   $3e         ;0309 'Buffer'
              a663 0021  ld   $21         ;030b LDW
              a664 003e  ld   $3e         ;030b 'Buffer'
              a665 00ad  ld   $ad         ;030d PEEK
              a666 0035  ld   $35         ;030e BCC
              a667 003f  ld   $3f         ;030f EQ
              a668 00d1  ld   $d1
              a669 00e6  ld   $e6         ;0311 SUBI
              a66a 002e  ld   $2e
              a66b 0035  ld   $35         ;0313 BCC
              a66c 0050  ld   $50         ;0314 LT
              a66d 0007  ld   $07
              a66e 0035  ld   $35         ;0316 BCC
              a66f 0072  ld   $72         ;0317 NE
              a670 001d  ld   $1d
              a671 0059  ld   $59         ;0319 LDI
              a672 0001  ld   $01
              a673 002b  ld   $2b         ;031b STW
              a674 0040  ld   $40         ;031b 'Mode'
              a675 0090  ld   $90         ;031d BRA
              a676 0007  ld   $07
              a677 00e6  ld   $e6         ;031f SUBI
              a678 000c  ld   $0c
              a679 0035  ld   $35         ;0321 BCC
              a67a 0072  ld   $72         ;0322 NE
              a67b 0028  ld   $28
              a67c 00e6  ld   $e6         ;0324 SUBI
              a67d 0001  ld   $01
              a67e 002b  ld   $2b         ;0326 STW
              a67f 0040  ld   $40         ;0326 'Mode'
              a680 0090  ld   $90         ;0328 BRA
              a681 0007  ld   $07
              a682 00e6  ld   $e6         ;032a SUBI
              a683 0018  ld   $18
              a684 0035  ld   $35         ;032c BCC
              a685 0072  ld   $72         ;032d NE
              a686 0031  ld   $31
              a687 00cf  ld   $cf         ;032f CALL
              a688 0042  ld   $42         ;032f 'Examine'
              a689 0090  ld   $90         ;0331 BRA
              a68a 0007  ld   $07
              a68b 0059  ld   $59         ;0333 LDI
              a68c 0000  ld   $00
              a68d 002b  ld   $2b         ;0335 STW
              a68e 0030  ld   $30         ;0335 'tmp'
              a68f 002b  ld   $2b         ;0337 STW
              a690 0044  ld   $44         ;0337 'Value'
              a691 00e9  ld   $e9         ;0339 LSLW
              a692 00e9  ld   $e9         ;033a LSLW
              a693 00e9  ld   $e9         ;033b LSLW
              a694 00e9  ld   $e9         ;033c LSLW
              a695 002b  ld   $2b         ;033d STW
              a696 0034  ld   $34         ;033d 'i'
              a697 0021  ld   $21         ;033f LDW
              a698 003e  ld   $3e         ;033f 'Buffer'
              a699 00ad  ld   $ad         ;0341 PEEK
              a69a 0093  ld   $93         ;0342 INC
              a69b 003e  ld   $3e         ;0342 'Buffer'
              a69c 00e6  ld   $e6         ;0344 SUBI
              a69d 0030  ld   $30
              a69e 0035  ld   $35         ;0346 BCC
              a69f 0050  ld   $50         ;0347 LT
              a6a0 0068  ld   $68
              a6a1 00e6  ld   $e6         ;0349 SUBI
              a6a2 000a  ld   $0a
              a6a3 0035  ld   $35         ;034b BCC
              a6a4 0053  ld   $53         ;034c GE
              a6a5 0054  ld   $54
              a6a6 002b  ld   $2b         ;034e STW
              a6a7 0030  ld   $30         ;034e 'tmp'
              a6a8 00e3  ld   $e3         ;0350 ADDI
              a6a9 000a  ld   $0a
              a6aa 0099  ld   $99         ;0352 ADDW
              a6ab 0034  ld   $34         ;0352 'i'
              a6ac 0090  ld   $90         ;0354 BRA
              a6ad 0035  ld   $35
              a6ae 00e6  ld   $e6         ;0356 SUBI
              a6af 0006  ld   $06
              a6b0 0082  ld   $82         ;0358 ANDI
              a6b1 001f  ld   $1f
              a6b2 0035  ld   $35         ;035a BCC
              a6b3 0056  ld   $56         ;035b LE
              a6b4 0068  ld   $68
              a6b5 00e6  ld   $e6         ;035d SUBI
              a6b6 0007  ld   $07
              a6b7 0035  ld   $35         ;035f BCC
              a6b8 0053  ld   $53         ;0360 GE
              a6b9 0068  ld   $68
              a6ba 002b  ld   $2b         ;0362 STW
              a6bb 0030  ld   $30         ;0362 'tmp'
              a6bc 00e3  ld   $e3         ;0364 ADDI
              a6bd 0010  ld   $10
              a6be 0099  ld   $99         ;0366 ADDW
              a6bf 0034  ld   $34         ;0366 'i'
              a6c0 0090  ld   $90         ;0368 BRA
              a6c1 0035  ld   $35
              a6c2 0021  ld   $21         ;036a LDW
              a6c3 0030  ld   $30         ;036a 'tmp'
              a6c4 0035  ld   $35         ;036c BCC
              a6c5 003f  ld   $3f         ;036d EQ
              a6c6 00cd  ld   $cd
              a6c7 0021  ld   $21         ;036f LDW
              a6c8 003e  ld   $3e         ;036f 'Buffer'
              a6c9 00e6  ld   $e6         ;0371 SUBI
              a6ca 0002  ld   $02
              a6cb 002b  ld   $2b         ;0373 STW
              a6cc 003e  ld   $3e         ;0373 'Buffer'
              a6cd 0021  ld   $21         ;0375 LDW
              a6ce 0040  ld   $40         ;0375 'Mode'
              a6cf 0035  ld   $35         ;0377 BCC
              a6d0 0053  ld   $53         ;0378 GE
              a6d1 0084  ld   $84
              a6d2 0021  ld   $21         ;037a LDW
              a6d3 0044  ld   $44         ;037a 'Value'
              a6d4 00f0  ld   $f0         ;037c POKE
              a6d5 0046  ld   $46         ;037c 'Store'
              a6d6 0021  ld   $21         ;037e LDW
              a6d7 0046  ld   $46         ;037e 'Store'
              a6d8 00e3  ld   $e3         ;0380 ADDI
              a6d9 0001  ld   $01
              a6da 002b  ld   $2b         ;0382 STW
              a6db 0046  ld   $46         ;0382 'Store'
              a6dc 0090  ld   $90         ;0384 BRA
              a6dd 0007  ld   $07
              a6de 0035  ld   $35         ;0386 BCC
              a6df 0072  ld   $72         ;0387 NE
              a6e0 0091  ld   $91
              a6e1 00cf  ld   $cf         ;0389 CALL
              a6e2 003a  ld   $3a         ;0389 'CNewline'
              a6e3 0021  ld   $21         ;038b LDW
              a6e4 0044  ld   $44         ;038b 'Value'
              a6e5 002b  ld   $2b         ;038d STW
              a6e6 0046  ld   $46         ;038d 'Store'
              a6e7 00e6  ld   $e6         ;038f SUBI
              a6e8 0001  ld   $01
              a6e9 002b  ld   $2b         ;0391 STW
              a6ea 0042  ld   $42         ;0391 'Examine'
              a6eb 0021  ld   $21         ;0393 LDW
              a6ec 0042  ld   $42         ;0393 'Examine'
              a6ed 00b8  ld   $b8         ;0395 SUBW
              a6ee 0044  ld   $44         ;0395 'Value'
              a6ef 0035  ld   $35         ;0397 BCC
              a6f0 0053  ld   $53         ;0398 GE
              a6f1 00c7  ld   $c7
              a6f2 0021  ld   $21         ;039a LDW
              a6f3 0042  ld   $42         ;039a 'Examine'
              a6f4 00e3  ld   $e3         ;039c ADDI
              a6f5 0001  ld   $01
              a6f6 002b  ld   $2b         ;039e STW
              a6f7 0042  ld   $42         ;039e 'Examine'
              a6f8 0082  ld   $82         ;03a0 ANDI
              a6f9 0007  ld   $07
              a6fa 0035  ld   $35         ;03a2 BCC
              a6fb fe00  bra  ac          ;+-----------------------------------+
              a6fc fcfd  bra  $a6fd       ;|                                   |
              a6fd 1418  ld   $18,y       ;| Trampoline for page $a600 lookups |
              a6fe e006  jmp  y,$06       ;|                                   |
              a6ff c218  st   [$18]       ;+-----------------------------------+
              a700 0072  ld   $72         ;03a3 NE
              a701 00a5  ld   $a5
              a702 00cf  ld   $cf         ;03a5 CALL
              a703 003a  ld   $3a         ;03a5 'CNewline'
              a704 001a  ld   $1a         ;03a7 LD
              a705 0032  ld   $32         ;03a7 'Pos'
              a706 0035  ld   $35         ;03a9 BCC
              a707 0072  ld   $72         ;03aa NE
              a708 00ba  ld   $ba
              a709 0059  ld   $59         ;03ac LDI
              a70a 0002  ld   $02
              a70b 005e  ld   $5e         ;03ae ST
              a70c 0032  ld   $32         ;03ae 'Pos'
              a70d 001a  ld   $1a         ;03b0 LD
              a70e 0043  ld   $43         ;03b0 'Examine'+1
              a70f 00cf  ld   $cf         ;03b2 CALL
              a710 003c  ld   $3c         ;03b2 'PrintByte'
              a711 001a  ld   $1a         ;03b4 LD
              a712 0042  ld   $42         ;03b4 'Examine'
              a713 00cf  ld   $cf         ;03b6 CALL
              a714 003c  ld   $3c         ;03b6 'PrintByte'
              a715 0059  ld   $59         ;03b8 LDI
              a716 003a  ld   $3a
              a717 00cf  ld   $cf         ;03ba CALL
              a718 0038  ld   $38         ;03ba 'PrintChar'
              a719 0021  ld   $21         ;03bc LDW
              a71a 0032  ld   $32         ;03bc 'Pos'
              a71b 00e3  ld   $e3         ;03be ADDI
              a71c 0004  ld   $04
              a71d 002b  ld   $2b         ;03c0 STW
              a71e 0032  ld   $32         ;03c0 'Pos'
              a71f 0021  ld   $21         ;03c2 LDW
              a720 0042  ld   $42         ;03c2 'Examine'
              a721 00ad  ld   $ad         ;03c4 PEEK
              a722 00cf  ld   $cf         ;03c5 CALL
              a723 003c  ld   $3c         ;03c5 'PrintByte'
              a724 0090  ld   $90         ;03c7 BRA
              a725 0091  ld   $91
              a726 0059  ld   $59         ;03c9 LDI
              a727 0000  ld   $00
              a728 002b  ld   $2b         ;03cb STW
              a729 0040  ld   $40         ;03cb 'Mode'
              a72a 0090  ld   $90         ;03cd BRA
              a72b 0007  ld   $07
              a72c 0059  ld   $59         ;03cf LDI
              a72d 005c  ld   $5c
              a72e 00cf  ld   $cf         ;03d1 CALL
              a72f 0038  ld   $38         ;03d1 'PrintChar'
              a730 0063  ld   $63         ;03d3 POP
              a731 00ff  ld   $ff         ;03d4 RET
              a732 002b  ld   $2b         ;03d5 STW
              a733 0048  ld   $48         ;03d5 'ProcessBuffer'
              a734 0093  ld   $93         ;03d7 INC
              a735 0032  ld   $32         ;03d7 'Pos'
              a736 0011  ld   $11         ;03d9 LDWI
              a737 0020  ld   $20
              a738 000f  ld   $0f
              a739 002b  ld   $2b         ;03dc STW
              a73a 002a  ld   $2a
              a73b 005e  ld   $5e         ;03de ST
              a73c 0024  ld   $24
              a73d 00cf  ld   $cf         ;03e0 CALL
              a73e 003a  ld   $3a         ;03e0 'CNewline'
              a73f 0059  ld   $59         ;03e2 LDI
              a740 002a  ld   $2a
              a741 00cf  ld   $cf         ;03e4 CALL
              a742 0038  ld   $38         ;03e4 'PrintChar'
              a743 0021  ld   $21         ;03e6 LDW
              a744 0030  ld   $30         ;03e6 'tmp'
              a745 00ad  ld   $ad         ;03e8 PEEK
              a746 0093  ld   $93         ;03e9 INC
              a747 0030  ld   $30         ;03e9 'tmp'
              a748 0035  ld   $35         ;03eb BCC
              a749 0072  ld   $72         ;03ec NE
              a74a 00e2  ld   $e2
              a74b 0011  ld   $11         ;03ee LDWI
              a74c 0000  ld   $00
              a74d 0004  ld   $04
              a74e 00cf  ld   $cf         ;03f1 CALL
              a74f 0018  ld   $18         ;03f1 vAC
              a750 0004  ld   $04         ;| RAM segment address (high byte first)
              a751 0000  ld   $00         ;|
              a752 0072  ld   $72         ;| Length (1..256)
              a753 0059  ld   $59         ;0400 LDI
              a754 0081  ld   $81
              a755 002b  ld   $2b         ;0402 STW
              a756 003e  ld   $3e         ;0402 'Buffer'
              a757 00cf  ld   $cf         ;0404 CALL
              a758 003a  ld   $3a         ;0404 'CNewline'
              a759 0059  ld   $59         ;0406 LDI
              a75a 007f  ld   $7f
              a75b 005e  ld   $5e         ;0408 ST
              a75c 002b  ld   $2b
              a75d 00cf  ld   $cf         ;040a CALL
              a75e 0038  ld   $38         ;040a 'PrintChar'
              a75f 002b  ld   $2b         ;040c STW
              a760 0032  ld   $32         ;040c 'Pos'
              a761 001a  ld   $1a         ;040e LD
              a762 000f  ld   $0f
              a763 002b  ld   $2b         ;0410 STW
              a764 0030  ld   $30         ;0410 'tmp'
              a765 001a  ld   $1a         ;0412 LD
              a766 000f  ld   $0f
              a767 00f0  ld   $f0         ;0414 POKE
              a768 003e  ld   $3e         ;0414 'Buffer'
              a769 00fc  ld   $fc         ;0416 XORW
              a76a 0030  ld   $30         ;0416 'tmp'
              a76b 0035  ld   $35         ;0418 BCC
              a76c 0072  ld   $72         ;0419 NE
              a76d 001e  ld   $1e
              a76e 0021  ld   $21         ;041b LDW
              a76f 003e  ld   $3e         ;041b 'Buffer'
              a770 00ad  ld   $ad         ;041d PEEK
              a771 0090  ld   $90         ;041e BRA
              a772 000e  ld   $0e
              a773 0021  ld   $21         ;0420 LDW
              a774 003e  ld   $3e         ;0420 'Buffer'
              a775 00ad  ld   $ad         ;0422 PEEK
              a776 008c  ld   $8c         ;0423 XORI
              a777 000a  ld   $0a
              a778 0035  ld   $35         ;0425 BCC
              a779 003f  ld   $3f         ;0426 EQ
              a77a 0060  ld   $60
              a77b 008c  ld   $8c         ;0428 XORI
              a77c 0075  ld   $75
              a77d 0035  ld   $35         ;042a BCC
              a77e 0072  ld   $72         ;042b NE
              a77f 0042  ld   $42
              a780 0059  ld   $59         ;042d LDI
              a781 0020  ld   $20
              a782 00cf  ld   $cf         ;042f CALL
              a783 0038  ld   $38         ;042f 'PrintChar'
              a784 002b  ld   $2b         ;0431 STW
              a785 0032  ld   $32         ;0431 'Pos'
              a786 001a  ld   $1a         ;0433 LD
              a787 0032  ld   $32         ;0433 'Pos'
              a788 00e6  ld   $e6         ;0435 SUBI
              a789 0006  ld   $06
              a78a 0035  ld   $35         ;0437 BCC
              a78b 0050  ld   $50         ;0438 LT
              a78c 0040  ld   $40
              a78d 005e  ld   $5e         ;043a ST
              a78e 0032  ld   $32         ;043a 'Pos'
              a78f 0021  ld   $21         ;043c LDW
              a790 003e  ld   $3e         ;043c 'Buffer'
              a791 00e6  ld   $e6         ;043e SUBI
              a792 0001  ld   $01
              a793 002b  ld   $2b         ;0440 STW
              a794 003e  ld   $3e         ;0440 'Buffer'
              a795 0090  ld   $90         ;0442 BRA
              a796 0004  ld   $04
              a797 00e6  ld   $e6         ;0444 SUBI
              a798 0060  ld   $60
              a799 0035  ld   $35         ;0446 BCC
              a79a 0053  ld   $53         ;0447 GE
              a79b 0004  ld   $04
              a79c 001a  ld   $1a         ;0449 LD
              a79d 0032  ld   $32         ;0449 'Pos'
              a79e 008c  ld   $8c         ;044b XORI
              a79f 0096  ld   $96
              a7a0 0035  ld   $35         ;044d BCC
              a7a1 0072  ld   $72         ;044e NE
              a7a2 0057  ld   $57
              a7a3 0059  ld   $59         ;0450 LDI
              a7a4 005c  ld   $5c
              a7a5 00cf  ld   $cf         ;0452 CALL
              a7a6 0038  ld   $38         ;0452 'PrintChar'
              a7a7 0011  ld   $11         ;0454 LDWI
              a7a8 0000  ld   $00
              a7a9 0004  ld   $04
              a7aa 00cf  ld   $cf         ;0457 CALL
              a7ab 0018  ld   $18         ;0457 vAC
              a7ac 0021  ld   $21         ;0459 LDW
              a7ad 003e  ld   $3e         ;0459 'Buffer'
              a7ae 00ad  ld   $ad         ;045b PEEK
              a7af 00cf  ld   $cf         ;045c CALL
              a7b0 0038  ld   $38         ;045c 'PrintChar'
              a7b1 0093  ld   $93         ;045e INC
              a7b2 003e  ld   $3e         ;045e 'Buffer'
              a7b3 0090  ld   $90         ;0460 BRA
              a7b4 0004  ld   $04
              a7b5 00f0  ld   $f0         ;0462 POKE
              a7b6 003e  ld   $3e         ;0462 'Buffer'
              a7b7 002b  ld   $2b         ;0464 STW
              a7b8 0040  ld   $40         ;0464 'Mode'
              a7b9 0059  ld   $59         ;0466 LDI
              a7ba 0020  ld   $20
              a7bb 00cf  ld   $cf         ;0468 CALL
              a7bc 0038  ld   $38         ;0468 'PrintChar'
              a7bd 0059  ld   $59         ;046a LDI
              a7be 000f  ld   $0f
              a7bf 005e  ld   $5e         ;046c ST
              a7c0 002b  ld   $2b
              a7c1 00cf  ld   $cf         ;046e CALL
              a7c2 0048  ld   $48         ;046e 'ProcessBuffer'
              a7c3 0090  ld   $90         ;0470 BRA
              a7c4 00fe  ld   $fe
              a7c5 0000  ld   $00         ;End of Apps/WozMon/WozMon_v2.gcl, size 603
                                          ;+-----------------------------------+
                                          ;| Apps/Apple-1/Apple-1_v2.gt1       |
                                          ;+-----------------------------------+
              a7c6 dc57  st   $57,[y,x++] ;'W'
              a7c7 dc6f  st   $6f,[y,x++] ;'o'
              a7c8 dc7a  st   $7a,[y,x++] ;'z'
              a7c9 dc4d  st   $4d,[y,x++] ;'M'
              a7ca dc6f  st   $6f,[y,x++] ;'o'
              a7cb dc6e  st   $6e,[y,x++] ;'n'
              a7cc dc00  st   $00,[y,x++] ;'\x00'
              a7cd dc00  st   $00,[y,x++] ;'\x00'
              a7ce 006b  ld   $6b
              a7cf c218  st   [$18]
              a7d0 00a5  ld   $a5
              a7d1 14f3  ld   $f3,y
              a7d2 e019  jmp  y,$19
              a7d3 c219  st   [$19]
Apple1:       a7d4 0002  ld   $02
              a7d5 0000  ld   $00
              a7d6 0054  ld   $54
              a7d7 001a  ld   $1a
              a7d8 0021  ld   $21
              a7d9 00e6  ld   $e6
              a7da 0040  ld   $40
              a7db 0035  ld   $35
              a7dc 0053  ld   $53
              a7dd 000b  ld   $0b
              a7de 0021  ld   $21
              a7df 000e  ld   $0e
              a7e0 00f3  ld   $f3
              a7e1 0017  ld   $17
              a7e2 0090  ld   $90
              a7e3 0005  ld   $05
              a7e4 0059  ld   $59
              a7e5 00a0  ld   $a0
              a7e6 002b  ld   $2b
              a7e7 0024  ld   $24
              a7e8 0011  ld   $11
              a7e9 0060  ld   $60
              a7ea 007e  ld   $7e
              a7eb 002b  ld   $2b
              a7ec 0026  ld   $26
              a7ed 0011  ld   $11
              a7ee 0003  ld   $03
              a7ef 000b  ld   $0b
              a7f0 002b  ld   $2b
              a7f1 0022  ld   $22
              a7f2 00b4  ld   $b4
              a7f3 00f3  ld   $f3
              a7f4 0011  ld   $11
              a7f5 00ee  ld   $ee
              a7f6 0001  ld   $01
              a7f7 002b  ld   $2b
              a7f8 007a  ld   $7a
              a7f9 0059  ld   $59
              a7fa 007e  ld   $7e
              a7fb fe00  bra  ac          ;+-----------------------------------+
              a7fc fcfd  bra  $a7fd       ;|                                   |
              a7fd 1418  ld   $18,y       ;| Trampoline for page $a700 lookups |
              a7fe e006  jmp  y,$06       ;|                                   |
              a7ff c218  st   [$18]       ;+-----------------------------------+
              a800 00f0  ld   $f0
              a801 007a  ld   $7a
              a802 001a  ld   $1a
              a803 007a  ld   $7a
              a804 00e6  ld   $e6
              a805 0002  ld   $02
              a806 005e  ld   $5e
              a807 007a  ld   $7a
              a808 0035  ld   $35
              a809 0053  ld   $53
              a80a 0020  ld   $20
              a80b 0011  ld   $11
              a80c 0001  ld   $01
              a80d 0001  ld   $01
              a80e 002b  ld   $2b
              a80f 007a  ld   $7a
              a810 0059  ld   $59
              a811 0060  ld   $60
              a812 00f0  ld   $f0
              a813 007a  ld   $7a
              a814 0011  ld   $11
              a815 00ff  ld   $ff
              a816 0010  ld   $10
              a817 002b  ld   $2b
              a818 007a  ld   $7a
              a819 0011  ld   $11
              a81a 00f6  ld   $f6
              a81b 0001  ld   $01
              a81c 002b  ld   $2b
              a81d 007c  ld   $7c
              a81e 0011  ld   $11
              a81f 0000  ld   $00
              a820 005e  ld   $5e
              a821 00f3  ld   $f3
              a822 007c  ld   $7c
              a823 0059  ld   $59
              a824 00fe  ld   $fe
              a825 005e  ld   $5e
              a826 000e  ld   $0e
              a827 0011  ld   $11
              a828 0000  ld   $00
              a829 005f  ld   $5f
              a82a 002b  ld   $2b
              a82b 001a  ld   $1a
              a82c 0011  ld   $11
              a82d 00ac  ld   $ac
              a82e 005e  ld   $5e
              a82f 00ff  ld   $ff
              a830 0003  ld   $03
              a831 0000  ld   $00
              a832 00cf  ld   $cf
              a833 00a2  ld   $a2
              a834 0024  ld   $24
              a835 00bd  ld   $bd
              a836 0093  ld   $93
              a837 0003  ld   $03
              a838 0020  ld   $20
              a839 00ef  ld   $ef
              a83a 00ff  ld   $ff
              a83b 00ca  ld   $ca
              a83c 00d0  ld   $d0
              a83d 00f7  ld   $f7
              a83e 0086  ld   $86
              a83f 00e2  ld   $e2
              a840 00e6  ld   $e6
              a841 00e3  ld   $e3
              a842 00d0  ld   $d0
              a843 0002  ld   $02
              a844 00e6  ld   $e6
              a845 00e4  ld   $e4
              a846 00ad  ld   $ad
              a847 0011  ld   $11
              a848 00d0  ld   $d0
              a849 0010  ld   $10
              a84a 00f5  ld   $f5
              a84b 0020  ld   $20
              a84c 00c6  ld   $c6
              a84d 0003  ld   $03
              a84e 00e6  ld   $e6
              a84f 00e2  ld   $e2
              a850 00a5  ld   $a5
              a851 00e2  ld   $e2
              a852 0029  ld   $29
              a853 000f  ld   $0f
              a854 00c9  ld   $c9
              a855 000a  ld   $0a
              a856 00b0  ld   $b0
              a857 00f6  ld   $f6
              a858 0020  ld   $20
              a859 00c1  ld   $c1
              a85a 0003  ld   $03
              a85b 00a5  ld   $a5
              a85c 00e2  ld   $e2
              a85d 0020  ld   $20
              a85e 00dc  ld   $dc
              a85f 00ff  ld   $ff
              a860 00a9  ld   $a9
              a861 00a0  ld   $a0
              a862 00a8  ld   $a8
              a863 0020  ld   $20
              a864 00ef  ld   $ef
              a865 00ff  ld   $ff
              a866 00a5  ld   $a5
              a867 00e3  ld   $e3
              a868 0085  ld   $85
              a869 00e5  ld   $e5
              a86a 00a5  ld   $a5
              a86b 00e4  ld   $e4
              a86c 00a2  ld   $a2
              a86d 0005  ld   $05
              a86e 0094  ld   $94
              a86f 00e5  ld   $e5
              a870 00a0  ld   $a0
              a871 0003  ld   $03
              a872 004a  ld   $4a
              a873 0026  ld   $26
              a874 00e5  ld   $e5
              a875 0036  ld   $36
              a876 00e5  ld   $e5
              a877 0088  ld   $88
              a878 00d0  ld   $d0
              a879 00f8  ld   $f8
              a87a 00ca  ld   $ca
              a87b 00d0  ld   $d0
              a87c 00f1  ld   $f1
              a87d 0020  ld   $20
              a87e 00c6  ld   $c6
              a87f 0003  ld   $03
              a880 0020  ld   $20
              a881 00ef  ld   $ef
              a882 00ff  ld   $ff
              a883 0049  ld   $49
              a884 00b0  ld   $b0
              a885 00c9  ld   $c9
              a886 0008  ld   $08
              a887 00b0  ld   $b0
              a888 00cf  ld   $cf
              a889 0095  ld   $95
              a88a 00ef  ld   $ef
              a88b 00ca  ld   $ca
              a88c 00e0  ld   $e0
              a88d 00fb  ld   $fb
              a88e 00d0  ld   $d0
              a88f 00ed  ld   $ed
              a890 00a0  ld   $a0
              a891 00fb  ld   $fb
              a892 00a9  ld   $a9
              a893 00a0  ld   $a0
              a894 0020  ld   $20
              a895 00ef  ld   $ef
              a896 00ff  ld   $ff
              a897 00b5  ld   $b5
              a898 00f0  ld   $f0
              a899 00d5  ld   $d5
              a89a 00eb  ld   $eb
              a89b 00d0  ld   $d0
              a89c 000d  ld   $0d
              a89d 0094  ld   $94
              a89e 00eb  ld   $eb
              a89f 00a9  ld   $a9
              a8a0 00ab  ld   $ab
              a8a1 0095  ld   $95
              a8a2 00f0  ld   $f0
              a8a3 00c8  ld   $c8
              a8a4 00d0  ld   $d0
              a8a5 00ee  ld   $ee
              a8a6 00a2  ld   $a2
              a8a7 002d  ld   $2d
              a8a8 00d0  ld   $d0
              a8a9 008b  ld   $8b
              a8aa 00e8  ld   $e8
              a8ab 00d0  ld   $d0
              a8ac 00ea  ld   $ea
              a8ad 00a0  ld   $a0
              a8ae 00fb  ld   $fb
              a8af 00b6  ld   $b6
              a8b0 00f0  ld   $f0
              a8b1 008a  ld   $8a
              a8b2 00a2  ld   $a2
              a8b3 00fb  ld   $fb
              a8b4 00d5  ld   $d5
              a8b5 00eb  ld   $eb
              a8b6 00d0  ld   $d0
              a8b7 0007  ld   $07
              a8b8 0094  ld   $94
              a8b9 00eb  ld   $eb
              a8ba 00a9  ld   $a9
              a8bb 00ad  ld   $ad
              a8bc 0020  ld   $20
              a8bd 00ef  ld   $ef
              a8be 00ff  ld   $ff
              a8bf 00e8  ld   $e8
              a8c0 00d0  ld   $d0
              a8c1 00f2  ld   $f2
              a8c2 00c8  ld   $c8
              a8c3 00d0  ld   $d0
              a8c4 00ea  ld   $ea
              a8c5 00f0  ld   $f0
              a8c6 0087  ld   $87
              a8c7 00bf  ld   $bf
              a8c8 00d9  ld   $d9
              a8c9 00c4  ld   $c4
              a8ca 00c1  ld   $c1
              a8cb 00c5  ld   $c5
              a8cc 00d2  ld   $d2
              a8cd 008d  ld   $8d
              a8ce 008d  ld   $8d
              a8cf 00b7  ld   $b7
              a8d0 00ad  ld   $ad
              a8d1 00b0  ld   $b0
              a8d2 00a0  ld   $a0
              a8d3 00cd  ld   $cd
              a8d4 00cf  ld   $cf
              a8d5 00d2  ld   $d2
              a8d6 00c6  ld   $c6
              a8d7 00a0  ld   $a0
              a8d8 00d3  ld   $d3
              a8d9 00d4  ld   $d4
              a8da 00c9  ld   $c9
              a8db 00c7  ld   $c7
              a8dc 00c9  ld   $c9
              a8dd 00c4  ld   $c4
              a8de 00a0  ld   $a0
              a8df 00c5  ld   $c5
              a8e0 00d6  ld   $d6
              a8e1 00c9  ld   $c9
              a8e2 00c6  ld   $c6
              a8e3 00a0  ld   $a0
              a8e4 00d3  ld   $d3
              a8e5 00d3  ld   $d3
              a8e6 00c5  ld   $c5
              a8e7 00d5  ld   $d5
              a8e8 00c7  ld   $c7
              a8e9 008d  ld   $8d
              a8ea 008d  ld   $8d
              a8eb 00ce  ld   $ce
              a8ec 00c9  ld   $c9
              a8ed 00d7  ld   $d7
              a8ee 00a0  ld   $a0
              a8ef 00d5  ld   $d5
              a8f0 00cf  ld   $cf
              a8f1 00d9  ld   $d9
              a8f2 00a0  ld   $a0
              a8f3 00ab  ld   $ab
              a8f4 00a9  ld   $a9
              a8f5 008d  ld   $8d
              a8f6 004c  ld   $4c
              a8f7 00ef  ld   $ef
              a8f8 00ff  ld   $ff
              a8f9 00ad  ld   $ad
              a8fa 0011  ld   $11
              a8fb fe00  bra  ac          ;+-----------------------------------+
              a8fc fcfd  bra  $a8fd       ;|                                   |
              a8fd 1418  ld   $18,y       ;| Trampoline for page $a800 lookups |
              a8fe e006  jmp  y,$06       ;|                                   |
              a8ff c218  st   [$18]       ;+-----------------------------------+
              a900 00d0  ld   $d0
              a901 0010  ld   $10
              a902 00fb  ld   $fb
              a903 00ad  ld   $ad
              a904 0010  ld   $10
              a905 00d0  ld   $d0
              a906 0060  ld   $60
              a907 0004  ld   $04
              a908 0000  ld   $00
              a909 0000  ld   $00
              a90a 00d8  ld   $d8
              a90b 00a2  ld   $a2
              a90c 00ff  ld   $ff
              a90d 009a  ld   $9a
              a90e 00a9  ld   $a9
              a90f 002a  ld   $2a
              a910 0085  ld   $85
              a911 005a  ld   $5a
              a912 0020  ld   $20
              a913 0055  ld   $55
              a914 0005  ld   $05
              a915 00a9  ld   $a9
              a916 008b  ld   $8b
              a917 0085  ld   $85
              a918 0058  ld   $58
              a919 00a9  ld   $a9
              a91a 0006  ld   $06
              a91b 0085  ld   $85
              a91c 0059  ld   $59
              a91d 0020  ld   $20
              a91e 00ad  ld   $ad
              a91f 0004  ld   $04
              a920 0020  ld   $20
              a921 00cb  ld   $cb
              a922 0004  ld   $04
              a923 00d0  ld   $d0
              a924 000e  ld   $0e
              a925 00a9  ld   $a9
              a926 00be  ld   $be
              a927 0085  ld   $85
              a928 0058  ld   $58
              a929 00a9  ld   $a9
              a92a 0006  ld   $06
              a92b 0085  ld   $85
              a92c 0059  ld   $59
              a92d 0020  ld   $20
              a92e 00ad  ld   $ad
              a92f 0004  ld   $04
              a930 0020  ld   $20
              a931 00e8  ld   $e8
              a932 0004  ld   $04
              a933 0020  ld   $20
              a934 001f  ld   $1f
              a935 0006  ld   $06
              a936 0020  ld   $20
              a937 006a  ld   $6a
              a938 0005  ld   $05
              a939 0020  ld   $20
              a93a 00e8  ld   $e8
              a93b 0004  ld   $04
              a93c 0020  ld   $20
              a93d 00a8  ld   $a8
              a93e 0004  ld   $04
              a93f 0020  ld   $20
              a940 0009  ld   $09
              a941 0005  ld   $05
              a942 0020  ld   $20
              a943 0027  ld   $27
              a944 0005  ld   $05
              a945 0020  ld   $20
              a946 00bb  ld   $bb
              a947 0004  ld   $04
              a948 00c9  ld   $c9
              a949 0051  ld   $51
              a94a 00d0  ld   $d0
              a94b 0003  ld   $03
              a94c 004c  ld   $4c
              a94d 009a  ld   $9a
              a94e 0004  ld   $04
              a94f 0020  ld   $20
              a950 009e  ld   $9e
              a951 0005  ld   $05
              a952 00a5  ld   $a5
              a953 0051  ld   $51
              a954 00c9  ld   $c9
              a955 0010  ld   $10
              a956 00d0  ld   $d0
              a957 000a  ld   $0a
              a958 00c6  ld   $c6
              a959 005d  ld   $5d
              a95a 00f0  ld   $f0
              a95b 00b6  ld   $b6
              a95c 0020  ld   $20
              a95d 0038  ld   $38
              a95e 0005  ld   $05
              a95f 004c  ld   $4c
              a960 003b  ld   $3b
              a961 0004  ld   $04
              a962 0020  ld   $20
              a963 00e8  ld   $e8
              a964 0004  ld   $04
              a965 0020  ld   $20
              a966 00a8  ld   $a8
              a967 0004  ld   $04
              a968 0020  ld   $20
              a969 000c  ld   $0c
              a96a 0006  ld   $06
              a96b 00f0  ld   $f0
              a96c 0003  ld   $03
              a96d 004c  ld   $4c
              a96e 0035  ld   $35
              a96f 0004  ld   $04
              a970 0020  ld   $20
              a971 0043  ld   $43
              a972 0005  ld   $05
              a973 00a9  ld   $a9
              a974 008e  ld   $8e
              a975 0085  ld   $85
              a976 0058  ld   $58
              a977 00a9  ld   $a9
              a978 0007  ld   $07
              a979 0085  ld   $85
              a97a 0059  ld   $59
              a97b 0020  ld   $20
              a97c 00ad  ld   $ad
              a97d 0004  ld   $04
              a97e 00a5  ld   $a5
              a97f 0055  ld   $55
              a980 0020  ld   $20
              a981 00ef  ld   $ef
              a982 00ff  ld   $ff
              a983 00a9  ld   $a9
              a984 00a3  ld   $a3
              a985 0085  ld   $85
              a986 0058  ld   $58
              a987 00a9  ld   $a9
              a988 0007  ld   $07
              a989 0085  ld   $85
              a98a 0059  ld   $59
              a98b 0020  ld   $20
              a98c 00ad  ld   $ad
              a98d 0004  ld   $04
              a98e 0020  ld   $20
              a98f 0027  ld   $27
              a990 0005  ld   $05
              a991 00a9  ld   $a9
              a992 00bb  ld   $bb
              a993 0085  ld   $85
              a994 0058  ld   $58
              a995 00a9  ld   $a9
              a996 0007  ld   $07
              a997 0085  ld   $85
              a998 0059  ld   $59
              a999 0020  ld   $20
              a99a 00ad  ld   $ad
              a99b 0004  ld   $04
              a99c 0020  ld   $20
              a99d 00cb  ld   $cb
              a99e 0004  ld   $04
              a99f 00d0  ld   $d0
              a9a0 0003  ld   $03
              a9a1 004c  ld   $4c
              a9a2 0029  ld   $29
              a9a3 0004  ld   $04
              a9a4 00a9  ld   $a9
              a9a5 00d0  ld   $d0
              a9a6 0085  ld   $85
              a9a7 0058  ld   $58
              a9a8 00a9  ld   $a9
              a9a9 0007  ld   $07
              a9aa 0085  ld   $85
              a9ab 0059  ld   $59
              a9ac 0020  ld   $20
              a9ad 00ad  ld   $ad
              a9ae 0004  ld   $04
              a9af 004c  ld   $4c
              a9b0 0000  ld   $00
              a9b1 00c1  ld   $c1
              a9b2 00a9  ld   $a9
              a9b3 000d  ld   $0d
              a9b4 004c  ld   $4c
              a9b5 00ef  ld   $ef
              a9b6 00ff  ld   $ff
              a9b7 00a0  ld   $a0
              a9b8 0000  ld   $00
              a9b9 00b1  ld   $b1
              a9ba 0058  ld   $58
              a9bb 00f0  ld   $f0
              a9bc 0007  ld   $07
              a9bd 0020  ld   $20
              a9be 00ef  ld   $ef
              a9bf 00ff  ld   $ff
              a9c0 00c8  ld   $c8
              a9c1 004c  ld   $4c
              a9c2 00af  ld   $af
              a9c3 0004  ld   $04
              a9c4 0060  ld   $60
              a9c5 0020  ld   $20
              a9c6 00de  ld   $de
              a9c7 0004  ld   $04
              a9c8 00ad  ld   $ad
              a9c9 0011  ld   $11
              a9ca 00d0  ld   $d0
              a9cb 0010  ld   $10
              a9cc 00f8  ld   $f8
              a9cd 00ad  ld   $ad
              a9ce 0010  ld   $10
              a9cf 00d0  ld   $d0
              a9d0 0029  ld   $29
              a9d1 007f  ld   $7f
              a9d2 004c  ld   $4c
              a9d3 00ef  ld   $ef
              a9d4 00ff  ld   $ff
              a9d5 0020  ld   $20
              a9d6 00bb  ld   $bb
              a9d7 0004  ld   $04
              a9d8 00c9  ld   $c9
              a9d9 004e  ld   $4e
              a9da 00f0  ld   $f0
              a9db 000a  ld   $0a
              a9dc 00c9  ld   $c9
              a9dd 0059  ld   $59
              a9de 00f0  ld   $f0
              a9df 0007  ld   $07
              a9e0 0020  ld   $20
              a9e1 0038  ld   $38
              a9e2 0005  ld   $05
              a9e3 004c  ld   $4c
              a9e4 00cb  ld   $cb
              a9e5 0004  ld   $04
              a9e6 00ba  ld   $ba
              a9e7 0060  ld   $60
              a9e8 00a5  ld   $a5
              a9e9 005a  ld   $5a
              a9ea 000a  ld   $0a
              a9eb 0090  ld   $90
              a9ec 0002  ld   $02
              a9ed 0049  ld   $49
              a9ee 00a9  ld   $a9
              a9ef 0085  ld   $85
              a9f0 005a  ld   $5a
              a9f1 0060  ld   $60
              a9f2 0020  ld   $20
              a9f3 00a8  ld   $a8
              a9f4 0004  ld   $04
              a9f5 0020  ld   $20
              a9f6 00a8  ld   $a8
              a9f7 0004  ld   $04
              a9f8 00a2  ld   $a2
              a9f9 0000  ld   $00
              a9fa 00a0  ld   $a0
              a9fb fe00  bra  ac          ;+-----------------------------------+
              a9fc fcfd  bra  $a9fd       ;|                                   |
              a9fd 1418  ld   $18,y       ;| Trampoline for page $a900 lookups |
              a9fe e006  jmp  y,$06       ;|                                   |
              a9ff c218  st   [$18]       ;+-----------------------------------+
              aa00 0004  ld   $04
              aa01 00b5  ld   $b5
              aa02 0040  ld   $40
              aa03 0020  ld   $20
              aa04 00ef  ld   $ef
              aa05 00ff  ld   $ff
              aa06 0088  ld   $88
              aa07 00d0  ld   $d0
              aa08 0005  ld   $05
              aa09 00a0  ld   $a0
              aa0a 0004  ld   $04
              aa0b 0020  ld   $20
              aa0c 00a8  ld   $a8
              aa0d 0004  ld   $04
              aa0e 00e8  ld   $e8
              aa0f 0005  ld   $05
              aa10 0000  ld   $00
              aa11 0000  ld   $00
              aa12 00e0  ld   $e0
              aa13 0010  ld   $10
              aa14 00d0  ld   $d0
              aa15 00ee  ld   $ee
              aa16 00a9  ld   $a9
              aa17 0008  ld   $08
              aa18 0085  ld   $85
              aa19 005d  ld   $5d
              aa1a 0060  ld   $60
              aa1b 00e6  ld   $e6
              aa1c 0056  ld   $56
              aa1d 00a5  ld   $a5
              aa1e 0056  ld   $56
              aa1f 0029  ld   $29
              aa20 000f  ld   $0f
              aa21 00c9  ld   $c9
              aa22 000a  ld   $0a
              aa23 00b0  ld   $b0
              aa24 00f6  ld   $f6
              aa25 00a5  ld   $a5
              aa26 0056  ld   $56
              aa27 0038  ld   $38
              aa28 00e9  ld   $e9
              aa29 00a0  ld   $a0
              aa2a 0090  ld   $90
              aa2b 000c  ld   $0c
              aa2c 0085  ld   $85
              aa2d 0056  ld   $56
              aa2e 00e6  ld   $e6
              aa2f 0057  ld   $57
              aa30 00a5  ld   $a5
              aa31 0057  ld   $57
              aa32 0029  ld   $29
              aa33 000f  ld   $0f
              aa34 00c9  ld   $c9
              aa35 000a  ld   $0a
              aa36 00b0  ld   $b0
              aa37 00f6  ld   $f6
              aa38 0060  ld   $60
              aa39 00a5  ld   $a5
              aa3a 0057  ld   $57
              aa3b 00f0  ld   $f0
              aa3c 0003  ld   $03
              aa3d 0020  ld   $20
              aa3e 00dc  ld   $dc
              aa3f 00ff  ld   $ff
              aa40 00a5  ld   $a5
              aa41 0056  ld   $56
              aa42 0020  ld   $20
              aa43 00dc  ld   $dc
              aa44 00ff  ld   $ff
              aa45 00a9  ld   $a9
              aa46 0020  ld   $20
              aa47 004c  ld   $4c
              aa48 00ef  ld   $ef
              aa49 00ff  ld   $ff
              aa4a 00a9  ld   $a9
              aa4b 007a  ld   $7a
              aa4c 0085  ld   $85
              aa4d 0058  ld   $58
              aa4e 00a9  ld   $a9
              aa4f 0007  ld   $07
              aa50 0085  ld   $85
              aa51 0059  ld   $59
              aa52 004c  ld   $4c
              aa53 00ad  ld   $ad
              aa54 0004  ld   $04
              aa55 00a5  ld   $a5
              aa56 005a  ld   $5a
              aa57 0029  ld   $29
              aa58 0038  ld   $38
              aa59 00aa  ld   $aa
              aa5a 00bd  ld   $bd
              aa5b 0049  ld   $49
              aa5c 0006  ld   $06
              aa5d 00f0  ld   $f0
              aa5e 0007  ld   $07
              aa5f 0020  ld   $20
              aa60 00ef  ld   $ef
              aa61 00ff  ld   $ff
              aa62 00e8  ld   $e8
              aa63 004c  ld   $4c
              aa64 0048  ld   $48
              aa65 0005  ld   $05
              aa66 0060  ld   $60
              aa67 00a9  ld   $a9
              aa68 0020  ld   $20
              aa69 0085  ld   $85
              aa6a 004f  ld   $4f
              aa6b 00a9  ld   $a9
              aa6c 000f  ld   $0f
              aa6d 0085  ld   $85
              aa6e 0052  ld   $52
              aa6f 00a2  ld   $a2
              aa70 000f  ld   $0f
              aa71 00a0  ld   $a0
              aa72 004f  ld   $4f
              aa73 0098  ld   $98
              aa74 009d  ld   $9d
              aa75 003f  ld   $3f
              aa76 0000  ld   $00
              aa77 0088  ld   $88
              aa78 00ca  ld   $ca
              aa79 00d0  ld   $d0
              aa7a 00f8  ld   $f8
              aa7b 0060  ld   $60
              aa7c 00a9  ld   $a9
              aa7d 0000  ld   $00
              aa7e 0085  ld   $85
              aa7f 0056  ld   $56
              aa80 0085  ld   $85
              aa81 0057  ld   $57
              aa82 0085  ld   $85
              aa83 005c  ld   $5c
              aa84 00a6  ld   $a6
              aa85 0055  ld   $55
              aa86 00bd  ld   $bd
              aa87 0013  ld   $13
              aa88 0006  ld   $06
              aa89 0085  ld   $85
              aa8a 005b  ld   $5b
              aa8b 0020  ld   $20
              aa8c 00de  ld   $de
              aa8d 0004  ld   $04
              aa8e 00a5  ld   $a5
              aa8f 005a  ld   $5a
              aa90 0029  ld   $29
              aa91 000f  ld   $0f
              aa92 0018  ld   $18
              aa93 0069  ld   $69
              aa94 0041  ld   $41
              aa95 00c5  ld   $c5
              aa96 005c  ld   $5c
              aa97 00f0  ld   $f0
              aa98 00f2  ld   $f2
              aa99 0020  ld   $20
              aa9a 009e  ld   $9e
              aa9b 0005  ld   $05
              aa9c 00a5  ld   $a5
              aa9d 0051  ld   $51
              aa9e 00c9  ld   $c9
              aa9f 0010  ld   $10
              aaa0 00f0  ld   $f0
              aaa1 00e9  ld   $e9
              aaa2 00a5  ld   $a5
              aaa3 0050  ld   $50
              aaa4 0085  ld   $85
              aaa5 005c  ld   $5c
              aaa6 00c6  ld   $c6
              aaa7 005b  ld   $5b
              aaa8 00d0  ld   $d0
              aaa9 00e1  ld   $e1
              aaaa 0020  ld   $20
              aaab 000c  ld   $0c
              aaac 0006  ld   $06
              aaad 00f0  ld   $f0
              aaae 00cd  ld   $cd
              aaaf 0060  ld   $60
              aab0 0085  ld   $85
              aab1 0050  ld   $50
              aab2 00c9  ld   $c9
              aab3 0020  ld   $20
              aab4 00f0  ld   $f0
              aab5 003c  ld   $3c
              aab6 00a2  ld   $a2
              aab7 0000  ld   $00
              aab8 00b5  ld   $b5
              aab9 0040  ld   $40
              aaba 00c5  ld   $c5
              aabb 0050  ld   $50
              aabc 00f0  ld   $f0
              aabd 0008  ld   $08
              aabe 00e8  ld   $e8
              aabf 00e0  ld   $e0
              aac0 0010  ld   $10
              aac1 00d0  ld   $d0
              aac2 00f5  ld   $f5
              aac3 004c  ld   $4c
              aac4 00e0  ld   $e0
              aac5 0005  ld   $05
              aac6 0086  ld   $86
              aac7 0051  ld   $51
              aac8 008a  ld   $8a
              aac9 0029  ld   $29
              aaca 000c  ld   $0c
              aacb 0085  ld   $85
              aacc 0053  ld   $53
              aacd 00a5  ld   $a5
              aace 0052  ld   $52
              aacf 0029  ld   $29
              aad0 000c  ld   $0c
              aad1 00c5  ld   $c5
              aad2 0053  ld   $53
              aad3 00d0  ld   $d0
              aad4 0010  ld   $10
              aad5 008a  ld   $8a
              aad6 0038  ld   $38
              aad7 00e5  ld   $e5
              aad8 0052  ld   $52
              aad9 0010  ld   $10
              aada 0005  ld   $05
              aadb 00a9  ld   $a9
              aadc 00ff  ld   $ff
              aadd 004c  ld   $4c
              aade 00f2  ld   $f2
              aadf 0005  ld   $05
              aae0 00a9  ld   $a9
              aae1 0001  ld   $01
              aae2 004c  ld   $4c
              aae3 00f2  ld   $f2
              aae4 0005  ld   $05
              aae5 008a  ld   $8a
              aae6 0029  ld   $29
              aae7 0003  ld   $03
              aae8 0085  ld   $85
              aae9 0053  ld   $53
              aaea 00a5  ld   $a5
              aaeb 0052  ld   $52
              aaec 0029  ld   $29
              aaed 0003  ld   $03
              aaee 00c5  ld   $c5
              aaef 0053  ld   $53
              aaf0 00f0  ld   $f0
              aaf1 0005  ld   $05
              aaf2 00a2  ld   $a2
              aaf3 0010  ld   $10
              aaf4 0086  ld   $86
              aaf5 0051  ld   $51
              aaf6 0060  ld   $60
              aaf7 008a  ld   $8a
              aaf8 0038  ld   $38
              aaf9 00e5  ld   $e5
              aafa 0052  ld   $52
              aafb fe00  bra  ac          ;+-----------------------------------+
              aafc fcfd  bra  $aafd       ;|                                   |
              aafd 1418  ld   $18,y       ;| Trampoline for page $aa00 lookups |
              aafe e006  jmp  y,$06       ;|                                   |
              aaff c218  st   [$18]       ;+-----------------------------------+
              ab00 0010  ld   $10
              ab01 0005  ld   $05
              ab02 00a9  ld   $a9
              ab03 00fc  ld   $fc
              ab04 004c  ld   $4c
              ab05 00f2  ld   $f2
              ab06 0005  ld   $05
              ab07 00a9  ld   $a9
              ab08 0004  ld   $04
              ab09 0085  ld   $85
              ab0a 0054  ld   $54
              ab0b 00a5  ld   $a5
              ab0c 0052  ld   $52
              ab0d 00aa  ld   $aa
              ab0e 0018  ld   $18
              ab0f 0065  ld   $65
              ab10 0054  ld   $54
              ab11 00a8  ld   $a8
              ab12 00b9  ld   $b9
              ab13 0040  ld   $40
              ab14 0000  ld   $00
              ab15 0095  ld   $95
              ab16 0040  ld   $40
              ab17 0006  ld   $06
              ab18 0000  ld   $00
              ab19 0000  ld   $00
              ab1a 00a9  ld   $a9
              ab1b 0020  ld   $20
              ab1c 0099  ld   $99
              ab1d 0040  ld   $40
              ab1e 0000  ld   $00
              ab1f 0084  ld   $84
              ab20 0052  ld   $52
              ab21 00c4  ld   $c4
              ab22 0051  ld   $51
              ab23 00d0  ld   $d0
              ab24 00e9  ld   $e9
              ab25 0060  ld   $60
              ab26 00a2  ld   $a2
              ab27 000f  ld   $0f
              ab28 00a9  ld   $a9
              ab29 004f  ld   $4f
              ab2a 0085  ld   $85
              ab2b 0053  ld   $53
              ab2c 00bd  ld   $bd
              ab2d 003f  ld   $3f
              ab2e 0000  ld   $00
              ab2f 00c5  ld   $c5
              ab30 0053  ld   $53
              ab31 00d0  ld   $d0
              ab32 0005  ld   $05
              ab33 00c6  ld   $c6
              ab34 0053  ld   $53
              ab35 00ca  ld   $ca
              ab36 00d0  ld   $d0
              ab37 00f4  ld   $f4
              ab38 0060  ld   $60
              ab39 00a9  ld   $a9
              ab3a 0060  ld   $60
              ab3b 0085  ld   $85
              ab3c 0058  ld   $58
              ab3d 00a9  ld   $a9
              ab3e 0007  ld   $07
              ab3f 0085  ld   $85
              ab40 0059  ld   $59
              ab41 0020  ld   $20
              ab42 00ad  ld   $ad
              ab43 0004  ld   $04
              ab44 0020  ld   $20
              ab45 00bb  ld   $bb
              ab46 0004  ld   $04
              ab47 0085  ld   $85
              ab48 0055  ld   $55
              ab49 00c9  ld   $c9
              ab4a 0031  ld   $31
              ab4b 0010  ld   $10
              ab4c 0003  ld   $03
              ab4d 004c  ld   $4c
              ab4e 003e  ld   $3e
              ab4f 0006  ld   $06
              ab50 00a9  ld   $a9
              ab51 0035  ld   $35
              ab52 0038  ld   $38
              ab53 00e5  ld   $e5
              ab54 0055  ld   $55
              ab55 0030  ld   $30
              ab56 0001  ld   $01
              ab57 0060  ld   $60
              ab58 0020  ld   $20
              ab59 0038  ld   $38
              ab5a 0005  ld   $05
              ab5b 004c  ld   $4c
              ab5c 002a  ld   $2a
              ab5d 0006  ld   $06
              ab5e 0003  ld   $03
              ab5f 0009  ld   $09
              ab60 0013  ld   $13
              ab61 0023  ld   $23
              ab62 00ff  ld   $ff
              ab63 0048  ld   $48
              ab64 004f  ld   $4f
              ab65 004f  ld   $4f
              ab66 0052  ld   $52
              ab67 0041  ld   $41
              ab68 0059  ld   $59
              ab69 0021  ld   $21
              ab6a 0000  ld   $00
              ab6b 0048  ld   $48
              ab6c 0055  ld   $55
              ab6d 005a  ld   $5a
              ab6e 005a  ld   $5a
              ab6f 0041  ld   $41
              ab70 0048  ld   $48
              ab71 0021  ld   $21
              ab72 0000  ld   $00
              ab73 0057  ld   $57
              ab74 004f  ld   $4f
              ab75 004f  ld   $4f
              ab76 0048  ld   $48
              ab77 004f  ld   $4f
              ab78 004f  ld   $4f
              ab79 0021  ld   $21
              ab7a 0000  ld   $00
              ab7b 0059  ld   $59
              ab7c 0049  ld   $49
              ab7d 0050  ld   $50
              ab7e 0050  ld   $50
              ab7f 0049  ld   $49
              ab80 0045  ld   $45
              ab81 0021  ld   $21
              ab82 0000  ld   $00
              ab83 0053  ld   $53
              ab84 0057  ld   $57
              ab85 0045  ld   $45
              ab86 0045  ld   $45
              ab87 0054  ld   $54
              ab88 0021  ld   $21
              ab89 0000  ld   $00
              ab8a 0000  ld   $00
              ab8b 0043  ld   $43
              ab8c 004f  ld   $4f
              ab8d 004f  ld   $4f
              ab8e 004c  ld   $4c
              ab8f 0021  ld   $21
              ab90 0000  ld   $00
              ab91 0000  ld   $00
              ab92 0000  ld   $00
              ab93 004e  ld   $4e
              ab94 0049  ld   $49
              ab95 0043  ld   $43
              ab96 0045  ld   $45
              ab97 0021  ld   $21
              ab98 0000  ld   $00
              ab99 0000  ld   $00
              ab9a 0000  ld   $00
              ab9b 0047  ld   $47
              ab9c 0041  ld   $41
              ab9d 0044  ld   $44
              ab9e 005a  ld   $5a
              ab9f 004f  ld   $4f
              aba0 004f  ld   $4f
              aba1 004b  ld   $4b
              aba2 0053  ld   $53
              aba3 0021  ld   $21
              aba4 0000  ld   $00
              aba5 000d  ld   $0d
              aba6 000d  ld   $0d
              aba7 0031  ld   $31
              aba8 0035  ld   $35
              aba9 0020  ld   $20
              abaa 0050  ld   $50
              abab 0055  ld   $55
              abac 005a  ld   $5a
              abad 005a  ld   $5a
              abae 004c  ld   $4c
              abaf 0045  ld   $45
              abb0 0020  ld   $20
              abb1 002d  ld   $2d
              abb2 0020  ld   $20
              abb3 0042  ld   $42
              abb4 0059  ld   $59
              abb5 0020  ld   $20
              abb6 004a  ld   $4a
              abb7 0045  ld   $45
              abb8 0046  ld   $46
              abb9 0046  ld   $46
              abba 0020  ld   $20
              abbb 004a  ld   $4a
              abbc 0045  ld   $45
              abbd 0054  ld   $54
              abbe 0054  ld   $54
              abbf 004f  ld   $4f
              abc0 004e  ld   $4e
              abc1 000d  ld   $0d
              abc2 000d  ld   $0d
              abc3 0049  ld   $49
              abc4 004e  ld   $4e
              abc5 0053  ld   $53
              abc6 0054  ld   $54
              abc7 0052  ld   $52
              abc8 0055  ld   $55
              abc9 0043  ld   $43
              abca 0054  ld   $54
              abcb 0049  ld   $49
              abcc 004f  ld   $4f
              abcd 004e  ld   $4e
              abce 0053  ld   $53
              abcf 0020  ld   $20
              abd0 0028  ld   $28
              abd1 0059  ld   $59
              abd2 002f  ld   $2f
              abd3 004e  ld   $4e
              abd4 0029  ld   $29
              abd5 003f  ld   $3f
              abd6 0020  ld   $20
              abd7 0000  ld   $00
              abd8 000d  ld   $0d
              abd9 000d  ld   $0d
              abda 0054  ld   $54
              abdb 0059  ld   $59
              abdc 0050  ld   $50
              abdd 0045  ld   $45
              abde 0020  ld   $20
              abdf 0041  ld   $41
              abe0 0020  ld   $20
              abe1 004c  ld   $4c
              abe2 0045  ld   $45
              abe3 0054  ld   $54
              abe4 0054  ld   $54
              abe5 0045  ld   $45
              abe6 0052  ld   $52
              abe7 0020  ld   $20
              abe8 004f  ld   $4f
              abe9 004e  ld   $4e
              abea 0020  ld   $20
              abeb 0054  ld   $54
              abec 0048  ld   $48
              abed 0045  ld   $45
              abee 0020  ld   $20
              abef 0053  ld   $53
              abf0 0041  ld   $41
              abf1 004d  ld   $4d
              abf2 0045  ld   $45
              abf3 000d  ld   $0d
              abf4 0052  ld   $52
              abf5 004f  ld   $4f
              abf6 0057  ld   $57
              abf7 0020  ld   $20
              abf8 004f  ld   $4f
              abf9 0052  ld   $52
              abfa 0020  ld   $20
              abfb fe00  bra  ac          ;+-----------------------------------+
              abfc fcfd  bra  $abfd       ;|                                   |
              abfd 1418  ld   $18,y       ;| Trampoline for page $ab00 lookups |
              abfe e006  jmp  y,$06       ;|                                   |
              abff c218  st   [$18]       ;+-----------------------------------+
              ac00 0043  ld   $43
              ac01 004f  ld   $4f
              ac02 004c  ld   $4c
              ac03 0055  ld   $55
              ac04 004d  ld   $4d
              ac05 004e  ld   $4e
              ac06 0020  ld   $20
              ac07 0041  ld   $41
              ac08 0053  ld   $53
              ac09 0020  ld   $20
              ac0a 0054  ld   $54
              ac0b 0048  ld   $48
              ac0c 0045  ld   $45
              ac0d 0020  ld   $20
              ac0e 0045  ld   $45
              ac0f 004d  ld   $4d
              ac10 0050  ld   $50
              ac11 0054  ld   $54
              ac12 0059  ld   $59
              ac13 000d  ld   $0d
              ac14 0053  ld   $53
              ac15 0050  ld   $50
              ac16 0041  ld   $41
              ac17 0043  ld   $43
              ac18 0045  ld   $45
              ac19 0020  ld   $20
              ac1a 0054  ld   $54
              ac1b 004f  ld   $4f
              ac1c 0020  ld   $20
              ac1d 0053  ld   $53
              ac1e 004c  ld   $4c
              ac1f 0007  ld   $07
              ac20 0000  ld   $00
              ac21 00d8  ld   $d8
              ac22 0049  ld   $49
              ac23 0044  ld   $44
              ac24 0045  ld   $45
              ac25 0020  ld   $20
              ac26 0054  ld   $54
              ac27 0048  ld   $48
              ac28 0041  ld   $41
              ac29 0054  ld   $54
              ac2a 0020  ld   $20
              ac2b 004c  ld   $4c
              ac2c 0045  ld   $45
              ac2d 0054  ld   $54
              ac2e 0054  ld   $54
              ac2f 0045  ld   $45
              ac30 0052  ld   $52
              ac31 000d  ld   $0d
              ac32 0028  ld   $28
              ac33 0041  ld   $41
              ac34 004e  ld   $4e
              ac35 0044  ld   $44
              ac36 0020  ld   $20
              ac37 0041  ld   $41
              ac38 004e  ld   $4e
              ac39 0059  ld   $59
              ac3a 0020  ld   $20
              ac3b 0042  ld   $42
              ac3c 0045  ld   $45
              ac3d 0054  ld   $54
              ac3e 0057  ld   $57
              ac3f 0045  ld   $45
              ac40 0045  ld   $45
              ac41 004e  ld   $4e
              ac42 0029  ld   $29
              ac43 0020  ld   $20
              ac44 0054  ld   $54
              ac45 004f  ld   $4f
              ac46 0057  ld   $57
              ac47 0041  ld   $41
              ac48 0052  ld   $52
              ac49 0044  ld   $44
              ac4a 0053  ld   $53
              ac4b 000d  ld   $0d
              ac4c 0054  ld   $54
              ac4d 0048  ld   $48
              ac4e 0045  ld   $45
              ac4f 0020  ld   $20
              ac50 0053  ld   $53
              ac51 0050  ld   $50
              ac52 0041  ld   $41
              ac53 0043  ld   $43
              ac54 0045  ld   $45
              ac55 002e  ld   $2e
              ac56 0020  ld   $20
              ac57 0054  ld   $54
              ac58 0059  ld   $59
              ac59 0050  ld   $50
              ac5a 0045  ld   $45
              ac5b 0020  ld   $20
              ac5c 0051  ld   $51
              ac5d 0020  ld   $20
              ac5e 0054  ld   $54
              ac5f 004f  ld   $4f
              ac60 0020  ld   $20
              ac61 0051  ld   $51
              ac62 0055  ld   $55
              ac63 0049  ld   $49
              ac64 0054  ld   $54
              ac65 002e  ld   $2e
              ac66 000d  ld   $0d
              ac67 0054  ld   $54
              ac68 0048  ld   $48
              ac69 0049  ld   $49
              ac6a 0053  ld   $53
              ac6b 0020  ld   $20
              ac6c 0049  ld   $49
              ac6d 0053  ld   $53
              ac6e 0020  ld   $20
              ac6f 0054  ld   $54
              ac70 0048  ld   $48
              ac71 0045  ld   $45
              ac72 0020  ld   $20
              ac73 0053  ld   $53
              ac74 004f  ld   $4f
              ac75 004c  ld   $4c
              ac76 0056  ld   $56
              ac77 0045  ld   $45
              ac78 0044  ld   $44
              ac79 0020  ld   $20
              ac7a 0050  ld   $50
              ac7b 0055  ld   $55
              ac7c 005a  ld   $5a
              ac7d 005a  ld   $5a
              ac7e 004c  ld   $4c
              ac7f 0045  ld   $45
              ac80 003a  ld   $3a
              ac81 0000  ld   $00
              ac82 000d  ld   $0d
              ac83 0044  ld   $44
              ac84 0049  ld   $49
              ac85 0046  ld   $46
              ac86 0046  ld   $46
              ac87 0049  ld   $49
              ac88 0043  ld   $43
              ac89 0055  ld   $55
              ac8a 004c  ld   $4c
              ac8b 0054  ld   $54
              ac8c 0059  ld   $59
              ac8d 0020  ld   $20
              ac8e 004c  ld   $4c
              ac8f 0045  ld   $45
              ac90 0056  ld   $56
              ac91 0045  ld   $45
              ac92 004c  ld   $4c
              ac93 0020  ld   $20
              ac94 0028  ld   $28
              ac95 0031  ld   $31
              ac96 002d  ld   $2d
              ac97 0035  ld   $35
              ac98 0029  ld   $29
              ac99 003f  ld   $3f
              ac9a 0020  ld   $20
              ac9b 0000  ld   $00
              ac9c 000d  ld   $0d
              ac9d 0053  ld   $53
              ac9e 004f  ld   $4f
              ac9f 0052  ld   $52
              aca0 0052  ld   $52
              aca1 0059  ld   $59
              aca2 002e  ld   $2e
              aca3 0020  ld   $20
              aca4 0054  ld   $54
              aca5 0052  ld   $52
              aca6 0059  ld   $59
              aca7 0020  ld   $20
              aca8 0041  ld   $41
              aca9 0047  ld   $47
              acaa 0041  ld   $41
              acab 0049  ld   $49
              acac 004e  ld   $4e
              acad 003a  ld   $3a
              acae 0020  ld   $20
              acaf 0000  ld   $00
              acb0 0020  ld   $20
              acb1 0059  ld   $59
              acb2 004f  ld   $4f
              acb3 0055  ld   $55
              acb4 0020  ld   $20
              acb5 0053  ld   $53
              acb6 004f  ld   $4f
              acb7 004c  ld   $4c
              acb8 0056  ld   $56
              acb9 0045  ld   $45
              acba 0044  ld   $44
              acbb 000d  ld   $0d
              acbc 0041  ld   $41
              acbd 0020  ld   $20
              acbe 004c  ld   $4c
              acbf 0045  ld   $45
              acc0 0056  ld   $56
              acc1 0045  ld   $45
              acc2 004c  ld   $4c
              acc3 0020  ld   $20
              acc4 0000  ld   $00
              acc5 0020  ld   $20
              acc6 0050  ld   $50
              acc7 0055  ld   $55
              acc8 005a  ld   $5a
              acc9 005a  ld   $5a
              acca 004c  ld   $4c
              accb 0045  ld   $45
              accc 0021  ld   $21
              accd 000d  ld   $0d
              acce 000d  ld   $0d
              accf 0054  ld   $54
              acd0 004f  ld   $4f
              acd1 0054  ld   $54
              acd2 0041  ld   $41
              acd3 004c  ld   $4c
              acd4 0020  ld   $20
              acd5 004d  ld   $4d
              acd6 004f  ld   $4f
              acd7 0056  ld   $56
              acd8 0045  ld   $45
              acd9 0053  ld   $53
              acda 003a  ld   $3a
              acdb 0020  ld   $20
              acdc 0000  ld   $00
              acdd 000d  ld   $0d
              acde 000d  ld   $0d
              acdf 0050  ld   $50
              ace0 004c  ld   $4c
              ace1 0041  ld   $41
              ace2 0059  ld   $59
              ace3 0020  ld   $20
              ace4 0041  ld   $41
              ace5 0047  ld   $47
              ace6 0041  ld   $41
              ace7 0049  ld   $49
              ace8 004e  ld   $4e
              ace9 0020  ld   $20
              acea 0028  ld   $28
              aceb 0059  ld   $59
              acec 002f  ld   $2f
              aced 004e  ld   $4e
              acee 0029  ld   $29
              acef 003f  ld   $3f
              acf0 0020  ld   $20
              acf1 0000  ld   $00
              acf2 000d  ld   $0d
              acf3 000d  ld   $0d
              acf4 0042  ld   $42
              acf5 0059  ld   $59
              acf6 0045  ld   $45
              acf7 0021  ld   $21
              acf8 000d  ld   $0d
              acf9 0000  ld   $00
              acfa 000b  ld   $0b
              acfb fe00  bra  ac          ;+-----------------------------------+
              acfc fcfd  bra  $acfd       ;|                                   |
              acfd 1418  ld   $18,y       ;| Trampoline for page $ac00 lookups |
              acfe e006  jmp  y,$06       ;|                                   |
              acff c218  st   [$18]       ;+-----------------------------------+
              ad00 00e5  ld   $e5
              ad01 001b  ld   $1b
              ad02 0020  ld   $20
              ad03 00ef  ld   $ef
              ad04 00ff  ld   $ff
              ad05 00e8  ld   $e8
              ad06 00bd  ld   $bd
              ad07 00f1  ld   $f1
              ad08 000b  ld   $0b
              ad09 00d0  ld   $d0
              ad0a 00f7  ld   $f7
              ad0b 004c  ld   $4c
              ad0c 009d  ld   $9d
              ad0d 000c  ld   $0c
              ad0e 000d  ld   $0d
              ad0f 0055  ld   $55
              ad10 0053  ld   $53
              ad11 0041  ld   $41
              ad12 0047  ld   $47
              ad13 0045  ld   $45
              ad14 003a  ld   $3a
              ad15 000d  ld   $0d
              ad16 0020  ld   $20
              ad17 0021  ld   $21
              ad18 0038  ld   $38
              ad19 0030  ld   $30
              ad1a 0030  ld   $30
              ad1b 003a  ld   $3a
              ad1c 0050  ld   $50
              ad1d 000c  ld   $0c
              ad1e 0000  ld   $00
              ad1f 008a  ld   $8a
              ad20 0048  ld   $48
              ad21 0041  ld   $41
              ad22 0020  ld   $20
              ad23 0020  ld   $20
              ad24 0020  ld   $20
              ad25 0020  ld   $20
              ad26 0041  ld   $41
              ad27 0053  ld   $53
              ad28 0053  ld   $53
              ad29 0045  ld   $45
              ad2a 004d  ld   $4d
              ad2b 0042  ld   $42
              ad2c 004c  ld   $4c
              ad2d 0045  ld   $45
              ad2e 0020  ld   $20
              ad2f 0031  ld   $31
              ad30 0053  ld   $53
              ad31 0054  ld   $54
              ad32 000d  ld   $0d
              ad33 0020  ld   $20
              ad34 0021  ld   $21
              ad35 0020  ld   $20
              ad36 004c  ld   $4c
              ad37 0044  ld   $44
              ad38 0041  ld   $41
              ad39 0020  ld   $20
              ad3a 0023  ld   $23
              ad3b 0031  ld   $31
              ad3c 0020  ld   $20
              ad3d 0020  ld   $20
              ad3e 0020  ld   $20
              ad3f 0020  ld   $20
              ad40 0041  ld   $41
              ad41 0053  ld   $53
              ad42 0053  ld   $53
              ad43 0045  ld   $45
              ad44 004d  ld   $4d
              ad45 0042  ld   $42
              ad46 004c  ld   $4c
              ad47 0045  ld   $45
              ad48 0020  ld   $20
              ad49 004e  ld   $4e
              ad4a 0045  ld   $45
              ad4b 0058  ld   $58
              ad4c 0054  ld   $54
              ad4d 000d  ld   $0d
              ad4e 0020  ld   $20
              ad4f 0021  ld   $21
              ad50 0038  ld   $38
              ad51 0030  ld   $30
              ad52 0030  ld   $30
              ad53 004c  ld   $4c
              ad54 0020  ld   $20
              ad55 0020  ld   $20
              ad56 0020  ld   $20
              * 7 times
              ad5b 0044  ld   $44
              ad5c 0049  ld   $49
              ad5d 0053  ld   $53
              ad5e 0041  ld   $41
              ad5f 0053  ld   $53
              ad60 0053  ld   $53
              ad61 0045  ld   $45
              ad62 004d  ld   $4d
              ad63 0042  ld   $42
              ad64 004c  ld   $4c
              ad65 0045  ld   $45
              ad66 000d  ld   $0d
              ad67 0020  ld   $20
              ad68 0021  ld   $21
              ad69 004c  ld   $4c
              ad6a 0020  ld   $20
              ad6b 0020  ld   $20
              ad6c 0020  ld   $20
              * 10 times
              ad74 004e  ld   $4e
              ad75 0045  ld   $45
              ad76 0058  ld   $58
              ad77 0054  ld   $54
              ad78 0020  ld   $20
              ad79 0053  ld   $53
              ad7a 0043  ld   $43
              ad7b 0052  ld   $52
              ad7c 0045  ld   $45
              ad7d 0045  ld   $45
              ad7e 004e  ld   $4e
              ad7f 000d  ld   $0d
              ad80 0020  ld   $20
              ad81 0021  ld   $21
              ad82 0028  ld   $28
              ad83 0052  ld   $52
              ad84 0045  ld   $45
              ad85 0054  ld   $54
              ad86 0055  ld   $55
              ad87 0052  ld   $52
              ad88 004e  ld   $4e
              ad89 0029  ld   $29
              ad8a 0020  ld   $20
              ad8b 0020  ld   $20
              ad8c 0020  ld   $20
              ad8d 0045  ld   $45
              ad8e 0058  ld   $58
              ad8f 0049  ld   $49
              ad90 0054  ld   $54
              ad91 000d  ld   $0d
              ad92 0020  ld   $20
              ad93 0042  ld   $42
              ad94 0045  ld   $45
              ad95 0045  ld   $45
              ad96 0052  ld   $52
              ad97 0020  ld   $20
              ad98 0020  ld   $20
              ad99 0020  ld   $20
              * 8 times
              ad9f 0053  ld   $53
              ada0 004b  ld   $4b
              ada1 0049  ld   $49
              ada2 0050  ld   $50
              ada3 0020  ld   $20
              ada4 0055  ld   $55
              ada5 0053  ld   $53
              ada6 0041  ld   $41
              ada7 0047  ld   $47
              ada8 0045  ld   $45
              ada9 0000  ld   $00
              adaa 000c  ld   $0c
              adab 008a  ld   $8a
              adac 0076  ld   $76
              adad 00a9  ld   $a9
              adae 000c  ld   $0c
              adaf 0048  ld   $48
              adb0 0020  ld   $20
              adb1 00fd  ld   $fd
              adb2 000d  ld   $0d
              adb3 0020  ld   $20
              adb4 00f1  ld   $f1
              adb5 000e  ld   $0e
              adb6 0085  ld   $85
              adb7 0044  ld   $44
              adb8 0084  ld   $84
              adb9 0045  ld   $45
              adba 0068  ld   $68
              adbb 0038  ld   $38
              adbc 00e9  ld   $e9
              adbd 0001  ld   $01
              adbe 00d0  ld   $d0
              adbf 00ef  ld   $ef
              adc0 0020  ld   $20
              adc1 0095  ld   $95
              adc2 000e  ld   $0e
              adc3 008a  ld   $8a
              adc4 00d0  ld   $d0
              adc5 0003  ld   $03
              adc6 004c  ld   $4c
              adc7 001f  ld   $1f
              adc8 00ff  ld   $ff
              adc9 00a0  ld   $a0
              adca 0000  ld   $00
              adcb 0020  ld   $20
              adcc 00c0  ld   $c0
              adcd 000e  ld   $0e
              adce 0048  ld   $48
              adcf 008a  ld   $8a
              add0 00f0  ld   $f0
              add1 0007  ld   $07
              add2 00b5  ld   $b5
              add3 0046  ld   $46
              add4 0095  ld   $95
              add5 0044  ld   $44
              add6 00ca  ld   $ca
              add7 0010  ld   $10
              add8 00f9  ld   $f9
              add9 0068  ld   $68
              adda 00c9  ld   $c9
              addb 0005  ld   $05
              addc 00f0  ld   $f0
              addd 00cf  ld   $cf
              adde 00c9  ld   $c9
              addf 0099  ld   $99
              ade0 00f0  ld   $f0
              ade1 0004  ld   $04
              ade2 00c9  ld   $c9
              ade3 0093  ld   $93
              ade4 00d0  ld   $d0
              ade5 0076  ld   $76
              ade6 00a9  ld   $a9
              ade7 0003  ld   $03
              ade8 0085  ld   $85
              ade9 0047  ld   $47
              adea 0020  ld   $20
              adeb 00b2  ld   $b2
              adec 000e  ld   $0e
              aded 000a  ld   $0a
              adee 00e9  ld   $e9
              adef 00be  ld   $be
              adf0 00c5  ld   $c5
              adf1 00c2  ld   $c2
              adf2 0090  ld   $90
              adf3 0068  ld   $68
              adf4 000a  ld   $0a
              adf5 000a  ld   $0a
              adf6 00a2  ld   $a2
              adf7 0004  ld   $04
              adf8 000a  ld   $0a
              adf9 0026  ld   $26
              adfa 004a  ld   $4a
              adfb fe00  bra  ac          ;+-----------------------------------+
              adfc fcfd  bra  $adfd       ;|                                   |
              adfd 1418  ld   $18,y       ;| Trampoline for page $ad00 lookups |
              adfe e006  jmp  y,$06       ;|                                   |
              adff c218  st   [$18]       ;+-----------------------------------+
              ae00 0026  ld   $26
              ae01 004b  ld   $4b
              ae02 00ca  ld   $ca
              ae03 0010  ld   $10
              ae04 00f8  ld   $f8
              ae05 00c6  ld   $c6
              ae06 0047  ld   $47
              ae07 00f0  ld   $f0
              ae08 00f4  ld   $f4
              ae09 0010  ld   $10
              ae0a 00e4  ld   $e4
              ae0b 00a2  ld   $a2
              ae0c 0005  ld   $05
              ae0d 0020  ld   $20
              ae0e 00b2  ld   $b2
              ae0f 000e  ld   $0e
              ae10 0084  ld   $84
              ae11 003a  ld   $3a
              ae12 00dd  ld   $dd
              ae13 0052  ld   $52
              ae14 000f  ld   $0f
              ae15 00d0  ld   $d0
              ae16 0013  ld   $13
              ae17 0020  ld   $20
              ae18 00b2  ld   $b2
              ae19 000e  ld   $0e
              ae1a 00dd  ld   $dd
              ae1b 0058  ld   $58
              ae1c 000f  ld   $0f
              ae1d 00f0  ld   $f0
              ae1e 000d  ld   $0d
              ae1f 00bd  ld   $bd
              ae20 0058  ld   $58
              ae21 000f  ld   $0f
              ae22 00f0  ld   $f0
              ae23 0007  ld   $07
              ae24 00c9  ld   $c9
              ae25 00a4  ld   $a4
              ae26 00f0  ld   $f0
              ae27 0003  ld   $03
              ae28 000d  ld   $0d
              ae29 0000  ld   $00
              ae2a 0000  ld   $00
              ae2b 00a4  ld   $a4
              ae2c 003a  ld   $3a
              ae2d 0018  ld   $18
              ae2e 0088  ld   $88
              ae2f 0026  ld   $26
              ae30 004c  ld   $4c
              ae31 00e0  ld   $e0
              ae32 0003  ld   $03
              ae33 00d0  ld   $d0
              ae34 000d  ld   $0d
              ae35 0020  ld   $20
              ae36 00c0  ld   $c0
              ae37 000e  ld   $0e
              ae38 00a5  ld   $a5
              ae39 0049  ld   $49
              ae3a 00f0  ld   $f0
              ae3b 0001  ld   $01
              ae3c 00e8  ld   $e8
              ae3d 0086  ld   $86
              ae3e 0038  ld   $38
              ae3f 00a2  ld   $a2
              ae40 0003  ld   $03
              ae41 0088  ld   $88
              ae42 0086  ld   $86
              ae43 0047  ld   $47
              ae44 00ca  ld   $ca
              ae45 0010  ld   $10
              ae46 00c9  ld   $c9
              ae47 00a5  ld   $a5
              ae48 004c  ld   $4c
              ae49 000a  ld   $0a
              ae4a 000a  ld   $0a
              ae4b 0005  ld   $05
              ae4c 0038  ld   $38
              ae4d 00c9  ld   $c9
              ae4e 0020  ld   $20
              ae4f 00b0  ld   $b0
              ae50 0006  ld   $06
              ae51 00a6  ld   $a6
              ae52 0038  ld   $38
              ae53 00f0  ld   $f0
              ae54 0002  ld   $02
              ae55 0009  ld   $09
              ae56 0080  ld   $80
              ae57 0085  ld   $85
              ae58 004c  ld   $4c
              ae59 0084  ld   $84
              ae5a 003a  ld   $3a
              ae5b 00b9  ld   $b9
              ae5c 0000  ld   $00
              ae5d 0002  ld   $02
              ae5e 00c9  ld   $c9
              ae5f 00bb  ld   $bb
              ae60 00f0  ld   $f0
              ae61 0004  ld   $04
              ae62 00c9  ld   $c9
              ae63 008d  ld   $8d
              ae64 00d0  ld   $d0
              ae65 002c  ld   $2c
              ae66 00a5  ld   $a5
              ae67 0047  ld   $47
              ae68 0020  ld   $20
              ae69 00b7  ld   $b7
              ae6a 000d  ld   $0d
              ae6b 00aa  ld   $aa
              ae6c 00bd  ld   $bd
              ae6d 009e  ld   $9e
              ae6e 000f  ld   $0f
              ae6f 00c5  ld   $c5
              ae70 004a  ld   $4a
              ae71 00d0  ld   $d0
              ae72 0013  ld   $13
              ae73 00bd  ld   $bd
              ae74 005e  ld   $5e
              ae75 000f  ld   $0f
              ae76 00c5  ld   $c5
              ae77 004b  ld   $4b
              ae78 00d0  ld   $d0
              ae79 000c  ld   $0c
              ae7a 00a5  ld   $a5
              ae7b 004c  ld   $4c
              ae7c 00a4  ld   $a4
              ae7d 0040  ld   $40
              ae7e 00c0  ld   $c0
              ae7f 009d  ld   $9d
              ae80 00f0  ld   $f0
              ae81 0020  ld   $20
              ae82 00c5  ld   $c5
              ae83 0040  ld   $40
              ae84 00f0  ld   $f0
              ae85 0037  ld   $37
              ae86 00c6  ld   $c6
              ae87 0047  ld   $47
              ae88 00d0  ld   $d0
              ae89 00dc  ld   $dc
              ae8a 00e6  ld   $e6
              ae8b 004c  ld   $4c
              ae8c 00c6  ld   $c6
              ae8d 0038  ld   $38
              ae8e 00f0  ld   $f0
              ae8f 00d6  ld   $d6
              ae90 00a4  ld   $a4
              ae91 003a  ld   $3a
              ae92 0098  ld   $98
              ae93 00aa  ld   $aa
              ae94 0020  ld   $20
              ae95 00bb  ld   $bb
              ae96 000e  ld   $0e
              ae97 0020  ld   $20
              ae98 0079  ld   $79
              ae99 000e  ld   $0e
              ae9a 00a9  ld   $a9
              ae9b 00de  ld   $de
              ae9c 0020  ld   $20
              ae9d 00ef  ld   $ef
              ae9e 00ff  ld   $ff
              ae9f 004c  ld   $4c
              aea0 009d  ld   $9d
              aea1 000c  ld   $0c
              aea2 00e9  ld   $e9
              aea3 0081  ld   $81
              aea4 004a  ld   $4a
              aea5 00d0  ld   $d0
              aea6 00e9  ld   $e9
              aea7 00a4  ld   $a4
              aea8 0049  ld   $49
              aea9 00a6  ld   $a6
              aeaa 0048  ld   $48
              aeab 00d0  ld   $d0
              aeac 0001  ld   $01
              aead 0088  ld   $88
              aeae 00ca  ld   $ca
              aeaf 008a  ld   $8a
              aeb0 0018  ld   $18
              aeb1 00e5  ld   $e5
              aeb2 0044  ld   $44
              aeb3 0085  ld   $85
              aeb4 0048  ld   $48
              aeb5 0010  ld   $10
              aeb6 0001  ld   $01
              aeb7 00c8  ld   $c8
              aeb8 0098  ld   $98
              aeb9 00e5  ld   $e5
              aeba 0045  ld   $45
              aebb 00d0  ld   $d0
              aebc 0043  ld   $43
              aebd 00a4  ld   $a4
              aebe 0041  ld   $41
              aebf 00b9  ld   $b9
              aec0 0047  ld   $47
              aec1 0000  ld   $00
              aec2 0091  ld   $91
              aec3 0044  ld   $44
              aec4 0088  ld   $88
              aec5 0010  ld   $10
              aec6 00f8  ld   $f8
              aec7 00a9  ld   $a9
              aec8 0001  ld   $01
              aec9 004c  ld   $4c
              aeca 008c  ld   $8c
              aecb 000c  ld   $0c
              aecc 00a6  ld   $a6
              aecd 0044  ld   $44
              aece 00a4  ld   $a4
              aecf 0045  ld   $45
              aed0 0020  ld   $20
              aed1 00bb  ld   $bb
              aed2 000e  ld   $0e
              aed3 0020  ld   $20
              aed4 006f  ld   $6f
              aed5 000e  ld   $0e
              aed6 00a0  ld   $a0
              aed7 0000  ld   $00
              aed8 00a9  ld   $a9
              aed9 00ad  ld   $ad
              aeda 0020  ld   $20
              aedb 00ef  ld   $ef
              aedc 00ff  ld   $ff
              aedd 0020  ld   $20
              aede 0077  ld   $77
              aedf 000e  ld   $0e
              aee0 00a1  ld   $a1
              aee1 0044  ld   $44
              aee2 00a8  ld   $a8
              aee3 004a  ld   $4a
              aee4 0090  ld   $90
              aee5 000b  ld   $0b
              aee6 004a  ld   $4a
              aee7 00b0  ld   $b0
              aee8 0017  ld   $17
              aee9 00c9  ld   $c9
              aeea 0022  ld   $22
              aeeb 00f0  ld   $f0
              aeec 0013  ld   $13
              aeed 0029  ld   $29
              aeee 0007  ld   $07
              aeef 0009  ld   $09
              aef0 0080  ld   $80
              aef1 004a  ld   $4a
              aef2 00aa  ld   $aa
              aef3 00bd  ld   $bd
              aef4 0000  ld   $00
              aef5 000f  ld   $0f
              aef6 00b0  ld   $b0
              aef7 0004  ld   $04
              aef8 004a  ld   $4a
              aef9 004a  ld   $4a
              aefa 004a  ld   $4a
              aefb fe00  bra  ac          ;+-----------------------------------+
              aefc fcfd  bra  $aefd       ;|                                   |
              aefd 1418  ld   $18,y       ;| Trampoline for page $ae00 lookups |
              aefe e006  jmp  y,$06       ;|                                   |
              aeff c218  st   [$18]       ;+-----------------------------------+
              af00 004a  ld   $4a
              af01 0029  ld   $29
              af02 000f  ld   $0f
              af03 00d0  ld   $d0
              af04 0004  ld   $04
              af05 00a0  ld   $a0
              af06 0080  ld   $80
              af07 00a9  ld   $a9
              af08 0000  ld   $00
              af09 00aa  ld   $aa
              af0a 00bd  ld   $bd
              af0b 0044  ld   $44
              af0c 000f  ld   $0f
              af0d 0085  ld   $85
              af0e 0040  ld   $40
              af0f 0029  ld   $29
              af10 0003  ld   $03
              af11 0085  ld   $85
              af12 0041  ld   $41
              af13 0098  ld   $98
              af14 0029  ld   $29
              af15 008f  ld   $8f
              af16 00aa  ld   $aa
              af17 0098  ld   $98
              af18 00a0  ld   $a0
              af19 0003  ld   $03
              af1a 00e0  ld   $e0
              af1b 008a  ld   $8a
              af1c 00f0  ld   $f0
              af1d 000b  ld   $0b
              af1e 004a  ld   $4a
              af1f 0090  ld   $90
              af20 0008  ld   $08
              af21 004a  ld   $4a
              af22 004a  ld   $4a
              af23 0009  ld   $09
              af24 0020  ld   $20
              af25 0088  ld   $88
              af26 00d0  ld   $d0
              af27 00fa  ld   $fa
              af28 00c8  ld   $c8
              af29 0088  ld   $88
              af2a 00d0  ld   $d0
              af2b 00f2  ld   $f2
              af2c 0060  ld   $60
              af2d 0020  ld   $20
              af2e 00a1  ld   $a1
              af2f 000d  ld   $0d
              af30 000e  ld   $0e
              af31 0000  ld   $00
              af32 0000  ld   $00
              af33 0048  ld   $48
              af34 00b1  ld   $b1
              af35 0044  ld   $44
              af36 0020  ld   $20
              af37 00dc  ld   $dc
              af38 00ff  ld   $ff
              af39 00a2  ld   $a2
              af3a 0001  ld   $01
              af3b 0020  ld   $20
              af3c 0079  ld   $79
              af3d 000e  ld   $0e
              af3e 00c4  ld   $c4
              af3f 0041  ld   $41
              af40 00c8  ld   $c8
              af41 0090  ld   $90
              af42 00f1  ld   $f1
              af43 00a2  ld   $a2
              af44 0003  ld   $03
              af45 00c0  ld   $c0
              af46 0003  ld   $03
              af47 0090  ld   $90
              af48 00f2  ld   $f2
              af49 0068  ld   $68
              af4a 00a8  ld   $a8
              af4b 00b9  ld   $b9
              af4c 005e  ld   $5e
              af4d 000f  ld   $0f
              af4e 0085  ld   $85
              af4f 0042  ld   $42
              af50 00b9  ld   $b9
              af51 009e  ld   $9e
              af52 000f  ld   $0f
              af53 0085  ld   $85
              af54 0043  ld   $43
              af55 00a9  ld   $a9
              af56 0000  ld   $00
              af57 00a0  ld   $a0
              af58 0005  ld   $05
              af59 0006  ld   $06
              af5a 0043  ld   $43
              af5b 0026  ld   $26
              af5c 0042  ld   $42
              af5d 002a  ld   $2a
              af5e 0088  ld   $88
              af5f 00d0  ld   $d0
              af60 00f8  ld   $f8
              af61 0069  ld   $69
              af62 00bf  ld   $bf
              af63 0020  ld   $20
              af64 00ef  ld   $ef
              af65 00ff  ld   $ff
              af66 00ca  ld   $ca
              af67 00d0  ld   $d0
              af68 00ec  ld   $ec
              af69 0020  ld   $20
              af6a 0077  ld   $77
              af6b 000e  ld   $0e
              af6c 00a2  ld   $a2
              af6d 0006  ld   $06
              af6e 00e0  ld   $e0
              af6f 0003  ld   $03
              af70 00d0  ld   $d0
              af71 0012  ld   $12
              af72 00a4  ld   $a4
              af73 0041  ld   $41
              af74 00f0  ld   $f0
              af75 000e  ld   $0e
              af76 00a5  ld   $a5
              af77 0040  ld   $40
              af78 00c9  ld   $c9
              af79 00e8  ld   $e8
              af7a 00b1  ld   $b1
              af7b 0044  ld   $44
              af7c 00b0  ld   $b0
              af7d 001c  ld   $1c
              af7e 0020  ld   $20
              af7f 00dc  ld   $dc
              af80 00ff  ld   $ff
              af81 0088  ld   $88
              af82 00d0  ld   $d0
              af83 00f2  ld   $f2
              af84 0006  ld   $06
              af85 0040  ld   $40
              af86 0090  ld   $90
              af87 000e  ld   $0e
              af88 00bd  ld   $bd
              af89 0051  ld   $51
              af8a 000f  ld   $0f
              af8b 0020  ld   $20
              af8c 00ef  ld   $ef
              af8d 00ff  ld   $ff
              af8e 00bd  ld   $bd
              af8f 0057  ld   $57
              af90 000f  ld   $0f
              af91 00f0  ld   $f0
              af92 0003  ld   $03
              af93 0020  ld   $20
              af94 00ef  ld   $ef
              af95 00ff  ld   $ff
              af96 00ca  ld   $ca
              af97 00d0  ld   $d0
              af98 00d5  ld   $d5
              af99 0060  ld   $60
              af9a 0020  ld   $20
              af9b 00f4  ld   $f4
              af9c 000e  ld   $0e
              af9d 00aa  ld   $aa
              af9e 00e8  ld   $e8
              af9f 00d0  ld   $d0
              afa0 0001  ld   $01
              afa1 00c8  ld   $c8
              afa2 0098  ld   $98
              afa3 0020  ld   $20
              afa4 00dc  ld   $dc
              afa5 00ff  ld   $ff
              afa6 008a  ld   $8a
              afa7 004c  ld   $4c
              afa8 00dc  ld   $dc
              afa9 00ff  ld   $ff
              afaa 00a2  ld   $a2
              afab 0001  ld   $01
              afac 00a9  ld   $a9
              afad 00a0  ld   $a0
              afae 0020  ld   $20
              afaf 00ef  ld   $ef
              afb0 00ff  ld   $ff
              afb1 00ca  ld   $ca
              afb2 00d0  ld   $d0
              afb3 00f8  ld   $f8
              afb4 0060  ld   $60
              afb5 00c9  ld   $c9
              afb6 009b  ld   $9b
              afb7 00f0  ld   $f0
              afb8 000a  ld   $0a
              afb9 0020  ld   $20
              afba 00ef  ld   $ef
              afbb 00ff  ld   $ff
              afbc 00c9  ld   $c9
              afbd 00df  ld   $df
              afbe 00f0  ld   $f0
              afbf 0012  ld   $12
              afc0 00e8  ld   $e8
              afc1 0010  ld   $10
              afc2 0012  ld   $12
              afc3 00a9  ld   $a9
              afc4 00dc  ld   $dc
              afc5 0020  ld   $20
              afc6 00ef  ld   $ef
              afc7 00ff  ld   $ff
              afc8 0020  ld   $20
              afc9 00bb  ld   $bb
              afca 000e  ld   $0e
              afcb 00a9  ld   $a9
              afcc 00a1  ld   $a1
              afcd 0020  ld   $20
              afce 00ef  ld   $ef
              afcf 00ff  ld   $ff
              afd0 00a2  ld   $a2
              afd1 0001  ld   $01
              afd2 00ca  ld   $ca
              afd3 0030  ld   $30
              afd4 00f3  ld   $f3
              afd5 002c  ld   $2c
              afd6 0011  ld   $11
              afd7 00d0  ld   $d0
              afd8 0010  ld   $10
              afd9 00fb  ld   $fb
              afda 00ad  ld   $ad
              afdb 0010  ld   $10
              afdc 00d0  ld   $d0
              afdd 009d  ld   $9d
              afde 0000  ld   $00
              afdf 0002  ld   $02
              afe0 00c9  ld   $c9
              afe1 008d  ld   $8d
              afe2 00d0  ld   $d0
              afe3 00d1  ld   $d1
              afe4 0060  ld   $60
              afe5 00b9  ld   $b9
              afe6 0000  ld   $00
              afe7 0002  ld   $02
              afe8 00c8  ld   $c8
              afe9 00c9  ld   $c9
              afea 00a0  ld   $a0
              afeb 00f0  ld   $f0
              afec 00f8  ld   $f8
              afed 0060  ld   $60
              afee 00a9  ld   $a9
              afef 008d  ld   $8d
              aff0 004c  ld   $4c
              aff1 00ef  ld   $ef
              aff2 00ff  ld   $ff
              aff3 00a2  ld   $a2
              aff4 0000  ld   $00
              aff5 0086  ld   $86
              aff6 0048  ld   $48
              aff7 0086  ld   $86
              aff8 0049  ld   $49
              aff9 00f0  ld   $f0
              affa 0015  ld   $15
              affb fe00  bra  ac          ;+-----------------------------------+
              affc fcfd  bra  $affd       ;|                                   |
              affd 1418  ld   $18,y       ;| Trampoline for page $af00 lookups |
              affe e006  jmp  y,$06       ;|                                   |
              afff c218  st   [$18]       ;+-----------------------------------+
              b000 00a2  ld   $a2
              b001 0003  ld   $03
              b002 000a  ld   $0a
              b003 000a  ld   $0a
              b004 000a  ld   $0a
              * 5 times
              b007 0026  ld   $26
              b008 0048  ld   $48
              b009 0026  ld   $26
              b00a 0049  ld   $49
              b00b 00ca  ld   $ca
              b00c 0010  ld   $10
              b00d 00f8  ld   $f8
              b00e 00b5  ld   $b5
              b00f 0049  ld   $49
              b010 0095  ld   $95
              b011 0047  ld   $47
              b012 00e8  ld   $e8
              b013 00f0  ld   $f0
              b014 00f9  ld   $f9
              b015 00b9  ld   $b9
              b016 0000  ld   $00
              b017 0002  ld   $02
              b018 00c8  ld   $c8
              b019 0049  ld   $49
              b01a 00b0  ld   $b0
              b01b 00c9  ld   $c9
              b01c 000a  ld   $0a
              b01d 0090  ld   $90
              b01e 00e1  ld   $e1
              b01f 0069  ld   $69
              b020 0088  ld   $88
              b021 00c9  ld   $c9
              b022 00fa  ld   $fa
              b023 00b0  ld   $b0
              b024 00db  ld   $db
              b025 0060  ld   $60
              b026 004c  ld   $4c
              b027 00e9  ld   $e9
              b028 000b  ld   $0b
              b029 00a5  ld   $a5
              b02a 0041  ld   $41
              b02b 0038  ld   $38
              b02c 00a4  ld   $a4
              b02d 0045  ld   $45
              b02e 00aa  ld   $aa
              b02f 0010  ld   $10
              b030 0001  ld   $01
              b031 0088  ld   $88
              b032 0065  ld   $65
              b033 0044  ld   $44
              b034 0090  ld   $90
              b035 0001  ld   $01
              b036 00c8  ld   $c8
              b037 0060  ld   $60
              b038 000f  ld   $0f
              b039 0000  ld   $00
              b03a 00de  ld   $de
              b03b 0040  ld   $40
              b03c 0002  ld   $02
              b03d 0045  ld   $45
              b03e 0003  ld   $03
              b03f 00d0  ld   $d0
              b040 0008  ld   $08
              b041 0040  ld   $40
              b042 0009  ld   $09
              b043 0030  ld   $30
              b044 0022  ld   $22
              b045 0045  ld   $45
              b046 0033  ld   $33
              b047 00d0  ld   $d0
              b048 0008  ld   $08
              b049 0040  ld   $40
              b04a 0009  ld   $09
              b04b 0040  ld   $40
              b04c 0002  ld   $02
              b04d 0045  ld   $45
              b04e 0033  ld   $33
              b04f 00d0  ld   $d0
              b050 0008  ld   $08
              b051 0040  ld   $40
              b052 0009  ld   $09
              b053 0040  ld   $40
              b054 0002  ld   $02
              b055 0045  ld   $45
              b056 00b3  ld   $b3
              b057 00d0  ld   $d0
              b058 0008  ld   $08
              b059 0040  ld   $40
              b05a 0009  ld   $09
              b05b 0000  ld   $00
              b05c 0022  ld   $22
              b05d 0044  ld   $44
              b05e 0033  ld   $33
              b05f 00d0  ld   $d0
              b060 008c  ld   $8c
              b061 0044  ld   $44
              b062 0000  ld   $00
              b063 0011  ld   $11
              b064 0022  ld   $22
              b065 0044  ld   $44
              b066 0033  ld   $33
              b067 00d0  ld   $d0
              b068 008c  ld   $8c
              b069 0044  ld   $44
              b06a 009a  ld   $9a
              b06b 0010  ld   $10
              b06c 0022  ld   $22
              b06d 0044  ld   $44
              b06e 0033  ld   $33
              b06f 00d0  ld   $d0
              b070 0008  ld   $08
              b071 0040  ld   $40
              b072 0009  ld   $09
              b073 0010  ld   $10
              b074 0022  ld   $22
              b075 0044  ld   $44
              b076 0033  ld   $33
              b077 00d0  ld   $d0
              b078 0008  ld   $08
              b079 0040  ld   $40
              b07a 0009  ld   $09
              b07b 0062  ld   $62
              b07c 0013  ld   $13
              b07d 0078  ld   $78
              b07e 00a9  ld   $a9
              b07f 0000  ld   $00
              b080 0021  ld   $21
              b081 0081  ld   $81
              b082 0082  ld   $82
              b083 0000  ld   $00
              b084 0000  ld   $00
              b085 0059  ld   $59
              b086 004d  ld   $4d
              b087 0091  ld   $91
              b088 0092  ld   $92
              b089 0086  ld   $86
              b08a 004a  ld   $4a
              b08b 0085  ld   $85
              b08c 009d  ld   $9d
              b08d 00ac  ld   $ac
              b08e 00a9  ld   $a9
              b08f 00ac  ld   $ac
              b090 00a3  ld   $a3
              b091 00a8  ld   $a8
              b092 00a4  ld   $a4
              b093 00d9  ld   $d9
              b094 0000  ld   $00
              b095 00d8  ld   $d8
              b096 00a4  ld   $a4
              b097 00a4  ld   $a4
              b098 0000  ld   $00
              b099 001c  ld   $1c
              b09a 008a  ld   $8a
              b09b 001c  ld   $1c
              b09c 0023  ld   $23
              b09d 005d  ld   $5d
              b09e 008b  ld   $8b
              b09f 001b  ld   $1b
              b0a0 00a1  ld   $a1
              b0a1 009d  ld   $9d
              b0a2 008a  ld   $8a
              b0a3 001d  ld   $1d
              b0a4 0023  ld   $23
              b0a5 009d  ld   $9d
              b0a6 008b  ld   $8b
              b0a7 001d  ld   $1d
              b0a8 00a1  ld   $a1
              b0a9 0000  ld   $00
              b0aa 0029  ld   $29
              b0ab 0019  ld   $19
              b0ac 00ae  ld   $ae
              b0ad 0069  ld   $69
              b0ae 00a8  ld   $a8
              b0af 0019  ld   $19
              b0b0 0023  ld   $23
              b0b1 0024  ld   $24
              b0b2 0053  ld   $53
              b0b3 001b  ld   $1b
              b0b4 0023  ld   $23
              b0b5 0024  ld   $24
              b0b6 0053  ld   $53
              b0b7 0019  ld   $19
              b0b8 00a1  ld   $a1
              b0b9 0000  ld   $00
              b0ba 001a  ld   $1a
              b0bb 005b  ld   $5b
              b0bc 005b  ld   $5b
              b0bd 00a5  ld   $a5
              b0be 0069  ld   $69
              b0bf 0024  ld   $24
              b0c0 0024  ld   $24
              b0c1 00ae  ld   $ae
              b0c2 00ae  ld   $ae
              b0c3 00a8  ld   $a8
              b0c4 00ad  ld   $ad
              b0c5 0029  ld   $29
              b0c6 0000  ld   $00
              b0c7 007c  ld   $7c
              b0c8 0000  ld   $00
              b0c9 0015  ld   $15
              b0ca 009c  ld   $9c
              b0cb 006d  ld   $6d
              b0cc 009c  ld   $9c
              b0cd 00a5  ld   $a5
              b0ce 0069  ld   $69
              b0cf 0029  ld   $29
              b0d0 0053  ld   $53
              b0d1 0084  ld   $84
              b0d2 0013  ld   $13
              b0d3 0034  ld   $34
              b0d4 0011  ld   $11
              b0d5 00a5  ld   $a5
              b0d6 0069  ld   $69
              b0d7 0023  ld   $23
              b0d8 00a0  ld   $a0
              b0d9 00d8  ld   $d8
              b0da 0062  ld   $62
              b0db 005a  ld   $5a
              b0dc 0048  ld   $48
              b0dd 0026  ld   $26
              b0de 0062  ld   $62
              b0df 0094  ld   $94
              b0e0 0088  ld   $88
              b0e1 0054  ld   $54
              b0e2 0044  ld   $44
              b0e3 00c8  ld   $c8
              b0e4 0054  ld   $54
              b0e5 0068  ld   $68
              b0e6 0044  ld   $44
              b0e7 00e8  ld   $e8
              b0e8 0094  ld   $94
              b0e9 0000  ld   $00
              b0ea 00b4  ld   $b4
              b0eb 0008  ld   $08
              b0ec 0084  ld   $84
              b0ed 0074  ld   $74
              b0ee 00b4  ld   $b4
              b0ef 0028  ld   $28
              b0f0 006e  ld   $6e
              b0f1 0074  ld   $74
              b0f2 00f4  ld   $f4
              b0f3 00cc  ld   $cc
              b0f4 004a  ld   $4a
              b0f5 0072  ld   $72
              b0f6 00f2  ld   $f2
              b0f7 00a4  ld   $a4
              b0f8 008a  ld   $8a
              b0f9 0000  ld   $00
              b0fa 00aa  ld   $aa
              b0fb fe00  bra  ac          ;+-----------------------------------+
              b0fc fcfd  bra  $b0fd       ;|                                   |
              b0fd 1418  ld   $18,y       ;| Trampoline for page $b000 lookups |
              b0fe e006  jmp  y,$06       ;|                                   |
              b0ff c218  st   [$18]       ;+-----------------------------------+
              b100 00a2  ld   $a2
              b101 00a2  ld   $a2
              b102 0074  ld   $74
              b103 0074  ld   $74
              b104 0074  ld   $74
              b105 0072  ld   $72
              b106 0044  ld   $44
              b107 0068  ld   $68
              b108 00b2  ld   $b2
              b109 0032  ld   $32
              b10a 00b2  ld   $b2
              b10b 0000  ld   $00
              b10c 0022  ld   $22
              b10d 0026  ld   $26
              b10e 001a  ld   $1a
              b10f 001a  ld   $1a
              b110 0026  ld   $26
              b111 0026  ld   $26
              b112 0072  ld   $72
              b113 0072  ld   $72
              b114 0088  ld   $88
              b115 00c8  ld   $c8
              b116 00c4  ld   $c4
              b117 00ca  ld   $ca
              b118 0026  ld   $26
              b119 0048  ld   $48
              b11a 0044  ld   $44
              b11b 0044  ld   $44
              b11c 00a2  ld   $a2
              b11d 00c8  ld   $c8
              b11e 005e  ld   $5e
              b11f 0000  ld   $00
              b120 00e3  ld   $e3
              b121 0075  ld   $75
              b122 002b  ld   $2b
              b123 003e  ld   $3e
              b124 001a  ld   $1a
              b125 003d  ld   $3d
              b126 00fc  ld   $fc
              b127 000f  ld   $0f
              b128 0082  ld   $82
              b129 00ff  ld   $ff
              b12a 0035  ld   $35
              b12b 003f  ld   $3f
              b12c 003b  ld   $3b
              b12d 0011  ld   $11
              b12e 0010  ld   $10
              b12f 00d0  ld   $d0
              b130 002b  ld   $2b
              b131 0030  ld   $30
              b132 001a  ld   $1a
              b133 000f  ld   $0f
              b134 005e  ld   $5e
              b135 003d  ld   $3d
              b136 008c  ld   $8c
              b137 00ff  ld   $ff
              b138 0035  ld   $35
              b139 003f  ld   $3f
              b13a 003b  ld   $3b
              b13b 008c  ld   $8c
              b13c 00ff  ld   $ff
              b13d 00e6  ld   $e6
              b13e 0060  ld   $60
              b13f 0035  ld   $35
              b140 0050  ld   $50
              b141 0021  ld   $21
              b142 00e6  ld   $e6
              b143 0020  ld   $20
              b144 00e3  ld   $e3
              b145 0060  ld   $60
              b146 008c  ld   $8c
              b147 000a  ld   $0a
              b148 0035  ld   $35
              b149 0072  ld   $72
              b14a 002a  ld   $2a
              b14b 0059  ld   $59
              b14c 0007  ld   $07
              b14d 008c  ld   $8c
              b14e 000a  ld   $0a
              b14f 008c  ld   $8c
              b150 001a  ld   $1a
              b151 0035  ld   $35
              b152 0072  ld   $72
              b153 0033  ld   $33
              b154 00ec  ld   $ec
              b155 0000  ld   $00
              b156 008c  ld   $8c
              b157 001a  ld   $1a
              b158 0082  ld   $82
              b159 007f  ld   $7f
              b15a 00e6  ld   $e6
              b15b 0080  ld   $80
              b15c 00f3  ld   $f3
              b15d 0030  ld   $30
              b15e 0011  ld   $11
              b15f 0012  ld   $12
              b160 00d0  ld   $d0
              b161 002b  ld   $2b
              b162 0030  ld   $30
              b163 00ad  ld   $ad
              b164 0035  ld   $35
              b165 003f  ld   $3f
              b166 0075  ld   $75
              b167 005e  ld   $5e
              b168 003c  ld   $3c
              b169 0088  ld   $88
              b16a 0080  ld   $80
              b16b 0085  ld   $85
              b16c 000f  ld   $0f
              b16d 005f  ld   $5f
              b16e 001a  ld   $1a
              b16f 001c  ld   $1c
              b170 00e3  ld   $e3
              b171 0002  ld   $02
              b172 00f6  ld   $f6
              b173 00e3  ld   $e3
              b174 0042  ld   $42
              b175 0035  ld   $35
              b176 0072  ld   $72
              b177 005b  ld   $5b
              b178 0021  ld   $21
              b179 007a  ld   $7a
              b17a 00e6  ld   $e6
              b17b 0002  ld   $02
              b17c 002b  ld   $2b
              b17d 007a  ld   $7a
              b17e 0059  ld   $59
              b17f 0000  ld   $00
              b180 00f0  ld   $f0
              b181 0030  ld   $30
              b182 0011  ld   $11
              b183 0010  ld   $10
              b184 00d0  ld   $d0
              b185 002b  ld   $2b
              b186 0030  ld   $30
              b187 00ad  ld   $ad
              b188 0035  ld   $35
              b189 003f  ld   $3f
              b18a 006c  ld   $6c
              b18b 00fc  ld   $fc
              b18c 003c  ld   $3c
              b18d 0082  ld   $82
              b18e 007f  ld   $7f
              b18f 0035  ld   $35
              b190 0072  ld   $72
              b191 0071  ld   $71
              b192 00f3  ld   $f3
              b193 0030  ld   $30
              b194 0059  ld   $59
              b195 001f  ld   $1f
              b196 005e  ld   $5e
              b197 003c  ld   $3c
              b198 001a  ld   $1a
              b199 003c  ld   $3c
              b19a 00e6  ld   $e6
              b19b 0001  ld   $01
              b19c 0035  ld   $35
              b19d 0053  ld   $53
              b19e 0089  ld   $89
              b19f 0059  ld   $59
              b1a0 00a0  ld   $a0
              b1a1 0085  ld   $85
              b1a2 000f  ld   $0f
              b1a3 005f  ld   $5f
              b1a4 0021  ld   $21
              b1a5 007a  ld   $7a
              b1a6 00e6  ld   $e6
              b1a7 0006  ld   $06
              b1a8 002b  ld   $2b
              b1a9 007a  ld   $7a
              b1aa 0059  ld   $59
              b1ab 001e  ld   $1e
              b1ac 005e  ld   $5e
              b1ad 003c  ld   $3c
              b1ae 008c  ld   $8c
              b1af 0014  ld   $14
              b1b0 0035  ld   $35
              b1b1 0072  ld   $72
              b1b2 009b  ld   $9b
              b1b3 0059  ld   $59
              b1b4 00c0  ld   $c0
              b1b5 0085  ld   $85
              b1b6 000f  ld   $0f
              b1b7 005f  ld   $5f
              b1b8 0021  ld   $21
              b1b9 007a  ld   $7a
              b1ba 00e6  ld   $e6
              b1bb 0006  ld   $06
              b1bc 002b  ld   $2b
              b1bd 007a  ld   $7a
              b1be 0011  ld   $11
              b1bf 0007  ld   $07
              b1c0 005f  ld   $5f
              b1c1 002b  ld   $2b
              b1c2 0030  ld   $30
              b1c3 0063  ld   $63
              b1c4 0059  ld   $59
              b1c5 00ff  ld   $ff
              b1c6 005e  ld   $5e
              b1c7 000e  ld   $0e
              b1c8 0011  ld   $11
              b1c9 0000  ld   $00
              b1ca 0004  ld   $04
              b1cb 007f  ld   $7f
              b1cc 003e  ld   $3e
              b1cd 0018  ld   $18
              b1ce 00a2  ld   $a2
              b1cf 0000  ld   $00
              b1d0 00a0  ld   $a0
              b1d1 000c  ld   $0c
              b1d2 00b9  ld   $b9
              b1d3 00ce  ld   $ce
              b1d4 005e  ld   $5e
              b1d5 0084  ld   $84
              b1d6 003a  ld   $3a
              b1d7 00a0  ld   $a0
              b1d8 0007  ld   $07
              b1d9 009d  ld   $9d
              b1da 0000  ld   $00
              b1db 0001  ld   $01
              b1dc 0069  ld   $69
              b1dd 0001  ld   $01
              b1de 00e8  ld   $e8
              b1df 00e8  ld   $e8
              b1e0 0088  ld   $88
              b1e1 00d0  ld   $d0
              b1e2 00f6  ld   $f6
              b1e3 00e8  ld   $e8
              b1e4 00e8  ld   $e8
              b1e5 00e8  ld   $e8
              b1e6 00e8  ld   $e8
              b1e7 00a4  ld   $a4
              b1e8 003a  ld   $3a
              b1e9 0088  ld   $88
              b1ea 0010  ld   $10
              b1eb 00e6  ld   $e6
              b1ec 004c  ld   $4c
              b1ed 0005  ld   $05
              b1ee 00c1  ld   $c1
              b1ef 0077  ld   $77
              b1f0 0070  ld   $70
              b1f1 0056  ld   $56
              b1f2 004f  ld   $4f
              b1f3 0048  ld   $48
              b1f4 0041  ld   $41
              b1f5 003a  ld   $3a
              b1f6 0033  ld   $33
              b1f7 002c  ld   $2c
              b1f8 0025  ld   $25
              b1f9 001e  ld   $1e
              b1fa 0017  ld   $17
              b1fb fe00  bra  ac          ;+-----------------------------------+
              b1fc fcfd  bra  $b1fd       ;|                                   |
              b1fd 1418  ld   $18,y       ;| Trampoline for page $b100 lookups |
              b1fe e006  jmp  y,$06       ;|                                   |
              b1ff c218  st   [$18]       ;+-----------------------------------+
              b200 0010  ld   $10
              b201 00d8  ld   $d8
              b202 0058  ld   $58
              b203 00a2  ld   $a2
              b204 00f7  ld   $f7
              b205 009a  ld   $9a
              b206 004c  ld   $4c
              b207 001a  ld   $1a
              b208 00ff  ld   $ff
              b209 005f  ld   $5f
              b20a 0000  ld   $00
              b20b 0000  ld   $00
              b20c 002b  ld   $2b
              b20d 001a  ld   $1a
              b20e 0011  ld   $11
              b20f 000c  ld   $0c
              b210 000b  ld   $0b
              b211 002b  ld   $2b
              b212 0022  ld   $22
              b213 00b4  ld   $b4
              b214 00e6  ld   $e6
              b215 0011  ld   $11
              b216 00fe  ld   $fe
              b217 00ff  ld   $ff
              b218 00f6  ld   $f6
              b219 0090  ld   $90
              b21a 00fe  ld   $fe
              b21b 002b  ld   $2b
              b21c 007c  ld   $7c
              b21d 00df  ld   $df
              b21e 00fa  ld   $fa
              b21f 0021  ld   $21
              b220 0024  ld   $24
              b221 00ec  ld   $ec
              b222 0000  ld   $00
              b223 0021  ld   $21
              b224 0026  ld   $26
              b225 00ec  ld   $ec
              b226 0002  ld   $02
              b227 0021  ld   $21
              b228 0028  ld   $28
              b229 00ec  ld   $ec
              b22a 0004  ld   $04
              b22b 0011  ld   $11
              b22c 00e1  ld   $e1
              b22d 0004  ld   $04
              b22e 002b  ld   $2b
              b22f 0022  ld   $22
              b230 0011  ld   $11
              b231 0000  ld   $00
              b232 003f  ld   $3f
              b233 002b  ld   $2b
              b234 0024  ld   $24
              b235 005e  ld   $5e
              b236 0026  ld   $26
              b237 0021  ld   $21
              b238 007c  ld   $7c
              b239 005e  ld   $5e
              b23a 0027  ld   $27
              b23b 008c  ld   $8c
              b23c 008d  ld   $8d
              b23d 0035  ld   $35
              b23e 003f  ld   $3f
              b23f 003b  ld   $3b
              b240 001a  ld   $1a
              b241 007a  ld   $7a
              b242 00e6  ld   $e6
              b243 00fb  ld   $fb
              b244 0035  ld   $35
              b245 0056  ld   $56
              b246 003b  ld   $3b
              b247 0059  ld   $59
              b248 0000  ld   $00
              b249 0035  ld   $35
              b24a 0072  ld   $72
              b24b 0096  ld   $96
              b24c 0021  ld   $21
              b24d 007a  ld   $7a
              b24e 002b  ld   $2b
              b24f 0028  ld   $28
              b250 0082  ld   $82
              b251 00ff  ld   $ff
              b252 00e6  ld   $e6
              b253 00fb  ld   $fb
              b254 0035  ld   $35
              b255 004d  ld   $4d
              b256 004c  ld   $4c
              b257 0011  ld   $11
              b258 00fb  ld   $fb
              b259 00ff  ld   $ff
              b25a 00b4  ld   $b4
              b25b 00cb  ld   $cb
              b25c 0093  ld   $93
              b25d 0028  ld   $28
              b25e 00e3  ld   $e3
              b25f 0001  ld   $01
              b260 0035  ld   $35
              b261 0050  ld   $50
              b262 004c  ld   $4c
              b263 0059  ld   $59
              b264 0061  ld   $61
              b265 005e  ld   $5e
              b266 007a  ld   $7a
              b267 00e3  ld   $e3
              b268 009f  ld   $9f
              b269 002b  ld   $2b
              b26a 007c  ld   $7c
              b26b 00ad  ld   $ad
              b26c 005e  ld   $5e
              b26d 007b  ld   $7b
              b26e 0021  ld   $21
              b26f 007a  ld   $7a
              b270 00e6  ld   $e6
              b271 0002  ld   $02
              b272 002b  ld   $2b
              b273 0028  ld   $28
              b274 0011  ld   $11
              b275 0000  ld   $00
              b276 0007  ld   $07
              b277 0099  ld   $99
              b278 0028  ld   $28
              b279 00ad  ld   $ad
              b27a 0082  ld   $82
              b27b 0001  ld   $01
              b27c 005e  ld   $5e
              b27d 0026  ld   $26
              b27e 00b4  ld   $b4
              b27f 00cb  ld   $cb
              b280 0093  ld   $93
              b281 0028  ld   $28
              b282 001a  ld   $1a
              b283 0028  ld   $28
              b284 0035  ld   $35
              b285 0072  ld   $72
              b286 0066  ld   $66
              b287 0021  ld   $21
              b288 007c  ld   $7c
              b289 00e3  ld   $e3
              b28a 0012  ld   $12
              b28b 002b  ld   $2b
              b28c 007e  ld   $7e
              b28d 00ad  ld   $ad
              b28e 005e  ld   $5e
              b28f 0026  ld   $26
              b290 0021  ld   $21
              b291 007c  ld   $7c
              b292 00ad  ld   $ad
              b293 00f0  ld   $f0
              b294 007e  ld   $7e
              b295 001a  ld   $1a
              b296 0026  ld   $26
              b297 00f0  ld   $f0
              b298 007c  ld   $7c
              b299 0093  ld   $93
              b29a 007c  ld   $7c
              b29b 0093  ld   $93
              b29c 007c  ld   $7c
              b29d 001a  ld   $1a
              b29e 007c  ld   $7c
              b29f 008c  ld   $8c
              b2a0 00d8  ld   $d8
              b2a1 0035  ld   $35
              b2a2 0072  ld   $72
              b2a3 0079  ld   $79
              b2a4 001a  ld   $1a
              b2a5 0027  ld   $27
              b2a6 00e6  ld   $e6
              b2a7 00a0  ld   $a0
              b2a8 0035  ld   $35
              b2a9 0050  ld   $50
              b2aa 00ef  ld   $ef
              b2ab 00e6  ld   $e6
              b2ac 0040  ld   $40
              b2ad 0035  ld   $35
              b2ae 0050  ld   $50
              b2af 00a4  ld   $a4
              b2b0 00e6  ld   $e6
              b2b1 0020  ld   $20
              b2b2 00e3  ld   $e3
              b2b3 000e  ld   $0e
              b2b4 0035  ld   $35
              b2b5 0053  ld   $53
              b2b6 00b2  ld   $b2
              b2b7 00e3  ld   $e3
              b2b8 0032  ld   $32
              b2b9 002b  ld   $2b
              b2ba 007c  ld   $7c
              b2bb 0011  ld   $11
              b2bc 0000  ld   $00
              b2bd 0007  ld   $07
              b2be 0090  ld   $90
              b2bf 00b7  ld   $b7
              b2c0 002b  ld   $2b
              b2c1 007c  ld   $7c
              b2c2 0011  ld   $11
              b2c3 0000  ld   $00
              b2c4 0008  ld   $08
              b2c5 002b  ld   $2b
              b2c6 007e  ld   $7e
              b2c7 0021  ld   $21
              b2c8 007c  ld   $7c
              b2c9 00e9  ld   $e9
              b2ca 00e9  ld   $e9
              b2cb 0099  ld   $99
              b2cc 007c  ld   $7c
              b2cd 0099  ld   $99
              b2ce 007e  ld   $7e
              b2cf 002b  ld   $2b
              b2d0 007e  ld   $7e
              b2d1 0021  ld   $21
              b2d2 007a  ld   $7a
              b2d3 002b  ld   $2b
              b2d4 0028  ld   $28
              b2d5 00e3  ld   $e3
              b2d6 0006  ld   $06
              b2d7 002b  ld   $2b
              b2d8 007a  ld   $7a
              b2d9 0059  ld   $59
              b2da 0005  ld   $05
              b2db 002b  ld   $2b
              b2dc 007c  ld   $7c
              b2dd 0021  ld   $21
              b2de 007e  ld   $7e
              b2df 007f  ld   $7f
              b2e0 0000  ld   $00
              b2e1 0082  ld   $82
              b2e2 00fe  ld   $fe
              b2e3 005e  ld   $5e
              b2e4 0026  ld   $26
              b2e5 0011  ld   $11
              b2e6 0000  ld   $00
              b2e7 0007  ld   $07
              b2e8 0099  ld   $99
              b2e9 0028  ld   $28
              b2ea 00ad  ld   $ad
              b2eb 0035  ld   $35
              b2ec 003f  ld   $3f
              b2ed 00e2  ld   $e2
              b2ee 0093  ld   $93
              b2ef 0026  ld   $26
              b2f0 00b4  ld   $b4
              b2f1 00cb  ld   $cb
              b2f2 0093  ld   $93
              b2f3 007e  ld   $7e
              b2f4 0093  ld   $93
              b2f5 0028  ld   $28
              b2f6 0021  ld   $21
              b2f7 007c  ld   $7c
              b2f8 00e6  ld   $e6
              b2f9 0001  ld   $01
              b2fa 0035  ld   $35
              b2fb fe00  bra  ac          ;+-----------------------------------+
              b2fc fcfd  bra  $b2fd       ;|                                   |
              b2fd 1418  ld   $18,y       ;| Trampoline for page $b200 lookups |
              b2fe e006  jmp  y,$06       ;|                                   |
              b2ff c218  st   [$18]       ;+-----------------------------------+
              b300 004d  ld   $4d
              b301 00cd  ld   $cd
              b302 00ee  ld   $ee
              b303 0000  ld   $00
              b304 002b  ld   $2b
              b305 0024  ld   $24
              b306 00ee  ld   $ee
              b307 0002  ld   $02
              b308 002b  ld   $2b
              b309 0026  ld   $26
              b30a 00ee  ld   $ee
              b30b 0004  ld   $04
              b30c 002b  ld   $2b
              b30d 0028  ld   $28
              b30e 00df  ld   $df
              b30f 0006  ld   $06
              b310 00ff  ld   $ff
              b311 00c1  ld   $c1
              b312 0000  ld   $00
              b313 0058  ld   $58
              b314 00a9  ld   $a9
              b315 00aa  ld   $aa
              b316 0020  ld   $20
              b317 00ef  ld   $ef
              b318 00ff  ld   $ff
              b319 00ae  ld   $ae
              b31a 0000  ld   $00
              b31b 00c2  ld   $c2
              b31c 00bd  ld   $bd
              b31d 0000  ld   $00
              b31e 00c2  ld   $c2
              b31f 0020  ld   $20
              b320 00ef  ld   $ef
              b321 00ff  ld   $ff
              b322 00ca  ld   $ca
              b323 00d0  ld   $d0
              b324 00f7  ld   $f7
              b325 00ae  ld   $ae
              b326 0025  ld   $25
              b327 00c1  ld   $c1
              b328 00bd  ld   $bd
              b329 0025  ld   $25
              b32a 00c1  ld   $c1
              b32b 0020  ld   $20
              b32c 00ef  ld   $ef
              b32d 00ff  ld   $ff
              b32e 00ca  ld   $ca
              b32f 00d0  ld   $d0
              b330 00f7  ld   $f7
              b331 002c  ld   $2c
              b332 0012  ld   $12
              b333 00d0  ld   $d0
              b334 0030  ld   $30
              b335 00fb  ld   $fb
              b336 004c  ld   $4c
              b337 0000  ld   $00
              b338 00ff  ld   $ff
              b339 0032  ld   $32
              b33a 008d  ld   $8d
              b33b 00ce  ld   $ce
              b33c 00cf  ld   $cf
              b33d 00cd  ld   $cd
              b33e 00da  ld   $da
              b33f 00cf  ld   $cf
              b340 00d7  ld   $d7
              b341 00a0  ld   $a0
              b342 00da  ld   $da
              b343 00ad  ld   $ad
              b344 00cc  ld   $cc
              b345 00d4  ld   $d4
              b346 00c3  ld   $c3
              b347 008d  ld   $8d
              b348 00d4  ld   $d4
              b349 00d2  ld   $d2
              b34a 00c1  ld   $c1
              b34b 00d4  ld   $d4
              b34c 00d3  ld   $d3
              b34d 00a0  ld   $a0
              b34e 00cd  ld   $cd
              b34f 00d2  ld   $d2
              b350 00c1  ld   $c1
              b351 00d7  ld   $d7
              b352 00a0  ld   $a0
              b353 00c3  ld   $c3
              b354 00c9  ld   $c9
              b355 00d3  ld   $d3
              b356 00c1  ld   $c1
              b357 00c2  ld   $c2
              b358 00a0  ld   $a0
              b359 00d2  ld   $d2
              b35a 00b3  ld   $b3
              b35b 00c2  ld   $c2
              b35c 00b2  ld   $b2
              b35d 00c5  ld   $c5
              b35e 008d  ld   $8d
              b35f 00c3  ld   $c3
              b360 00c9  ld   $c9
              b361 00d3  ld   $d3
              b362 00c1  ld   $c1
              b363 00c2  ld   $c2
              b364 00a0  ld   $a0
              b365 00d2  ld   $d2
              b366 00c5  ld   $c5
              b367 00c7  ld   $c7
              b368 00c5  ld   $c5
              b369 00d4  ld   $d4
              b36a 00ce  ld   $ce
              b36b 00c9  ld   $c9
              b36c 00c2  ld   $c2
              b36d 0000  ld   $00
              b36e 005b  ld   $5b
              b36f 005a  ld   $5a
              b370 00a0  ld   $a0
              b371 00d2  ld   $d2
              b372 00b0  ld   $b0
              b373 00b0  ld   $b0
              b374 00b0  ld   $b0
              b375 00c5  ld   $c5
              b376 008d  ld   $8d
              b377 00d5  ld   $d5
              b378 00ce  ld   $ce
              b379 00c5  ld   $c5
              b37a 00cd  ld   $cd
              b37b 00a0  ld   $a0
              b37c 00d2  ld   $d2
              b37d 00b0  ld   $b0
              b37e 00b0  ld   $b0
              b37f 00b1  ld   $b1
              b380 00c3  ld   $c3
              b381 008d  ld   $8d
              b382 00d2  ld   $d2
              b383 00c5  ld   $c5
              b384 00cc  ld   $cc
              b385 00c2  ld   $c2
              b386 00cd  ld   $cd
              b387 00c5  ld   $c5
              b388 00d3  ld   $d3
              b389 00d3  ld   $d3
              b38a 00c1  ld   $c1
              b38b 00ad  ld   $ad
              b38c 00c9  ld   $c9
              b38d 00ce  ld   $ce
              b38e 00c9  ld   $c9
              b38f 00cd  ld   $cd
              b390 00a0  ld   $a0
              b391 00a0  ld   $a0
              b392 00d2  ld   $d2
              b393 00c5  ld   $c5
              b394 00c5  ld   $c5
              b395 00c5  ld   $c5
              b396 008d  ld   $8d
              b397 00c5  ld   $c5
              b398 00cc  ld   $cc
              b399 00da  ld   $da
              b39a 00da  ld   $da
              b39b 00d5  ld   $d5
              b39c 00d0  ld   $d0
              b39d 00ad  ld   $ad
              b39e 00b5  ld   $b5
              b39f 00b1  ld   $b1
              b3a0 00a0  ld   $a0
              b3a1 00a0  ld   $a0
              b3a2 00d2  ld   $d2
              b3a3 00b0  ld   $b0
              b3a4 00b0  ld   $b0
              b3a5 00b4  ld   $b4
              b3a6 008d  ld   $8d
              b3a7 00c4  ld   $c4
              b3a8 00ce  ld   $ce
              b3a9 00c9  ld   $c9
              b3aa 00cd  ld   $cd
              b3ab 00d2  ld   $d2
              b3ac 00c5  ld   $c5
              b3ad 00d4  ld   $d4
              b3ae 00d3  ld   $d3
              b3af 00c1  ld   $c1
              b3b0 00cd  ld   $cd
              b3b1 00a0  ld   $a0
              b3b2 00a0  ld   $a0
              b3b3 00d2  ld   $d2
              b3b4 00b0  ld   $b0
              b3b5 00b0  ld   $b0
              b3b6 00b3  ld   $b3
              b3b7 008d  ld   $8d
              b3b8 008d  ld   $8d
              b3b9 00cc  ld   $cc
              b3ba 00d4  ld   $d4
              b3bb 00d4  ld   $d4
              b3bc 00a0  ld   $a0
              b3bd 00ce  ld   $ce
              b3be 00cf  ld   $cf
              b3bf 00a0  ld   $a0
              b3c0 00b1  ld   $b1
              b3c1 00ad  ld   $ad
              b3c2 00c5  ld   $c5
              b3c3 00cc  ld   $cc
              b3c4 00d0  ld   $d0
              b3c5 00d0  ld   $d0
              b3c6 00c1  ld   $c1
              b3c7 008d  ld   $8d
              b3c8 008d  ld   $8d
              b3c9 008d  ld   $8d
              b3ca 00d0  ld   $d0
              b3cb 0010  ld   $10
              b3cc 0004  ld   $04
              b3cd 0000  ld   $00
              b3ce 0000  ld   $00
              b3cf 0000  ld   $00
              b3d0 0000  ld   $00
              b3d1 00e0  ld   $e0
              b3d2 0000  ld   $00
              b3d3 0000  ld   $00
              b3d4 004c  ld   $4c
              b3d5 00b0  ld   $b0
              b3d6 00e2  ld   $e2
              b3d7 00ad  ld   $ad
              b3d8 0011  ld   $11
              b3d9 00d0  ld   $d0
              b3da 0010  ld   $10
              b3db 00fb  ld   $fb
              b3dc 00ad  ld   $ad
              b3dd 0010  ld   $10
              b3de 00d0  ld   $d0
              b3df 0060  ld   $60
              b3e0 008a  ld   $8a
              b3e1 0029  ld   $29
              b3e2 0020  ld   $20
              b3e3 00f0  ld   $f0
              b3e4 0023  ld   $23
              b3e5 00a9  ld   $a9
              b3e6 00a0  ld   $a0
              b3e7 0085  ld   $85
              b3e8 0044  ld   $44
              b3e9 004c  ld   $4c
              b3ea 00c9  ld   $c9
              b3eb 00e3  ld   $e3
              b3ec 00a9  ld   $a9
              b3ed 0020  ld   $20
              b3ee 00c5  ld   $c5
              b3ef 0081  ld   $81
              b3f0 00b0  ld   $b0
              b3f1 000c  ld   $0c
              b3f2 00a9  ld   $a9
              b3f3 008d  ld   $8d
              b3f4 00a0  ld   $a0
              b3f5 0007  ld   $07
              b3f6 0020  ld   $20
              b3f7 00c9  ld   $c9
              b3f8 00e3  ld   $e3
              b3f9 00a9  ld   $a9
              b3fa 00a0  ld   $a0
              b3fb fe00  bra  ac          ;+-----------------------------------+
              b3fc fcfd  bra  $b3fd       ;|                                   |
              b3fd 1418  ld   $18,y       ;| Trampoline for page $b300 lookups |
              b3fe e006  jmp  y,$06       ;|                                   |
              b3ff c218  st   [$18]       ;+-----------------------------------+
              b400 0088  ld   $88
              b401 00d0  ld   $d0
              b402 00f8  ld   $f8
              b403 00a0  ld   $a0
              b404 0000  ld   $00
              b405 00b1  ld   $b1
              b406 0042  ld   $42
              b407 00e6  ld   $e6
              b408 0042  ld   $42
              b409 00d0  ld   $d0
              b40a 0002  ld   $02
              b40b 00e6  ld   $e6
              b40c 0043  ld   $43
              b40d 0060  ld   $60
              b40e 0020  ld   $20
              b40f 0015  ld   $15
              b410 00e7  ld   $e7
              b411 0020  ld   $20
              b412 0076  ld   $76
              b413 00e5  ld   $e5
              b414 00a5  ld   $a5
              b415 0042  ld   $42
              b416 00c5  ld   $c5
              b417 0046  ld   $46
              b418 00a5  ld   $a5
              b419 0043  ld   $43
              b41a 00e5  ld   $e5
              b41b 0047  ld   $47
              b41c 00b0  ld   $b0
              b41d 00ef  ld   $ef
              b41e 0020  ld   $20
              b41f 006d  ld   $6d
              b420 00e0  ld   $e0
              b421 004c  ld   $4c
              b422 003b  ld   $3b
              b423 00e0  ld   $e0
              b424 00a5  ld   $a5
              b425 00ca  ld   $ca
              b426 0085  ld   $85
              b427 0042  ld   $42
              b428 00a5  ld   $a5
              b429 00cb  ld   $cb
              b42a 0085  ld   $85
              b42b 0043  ld   $43
              b42c 00a5  ld   $a5
              b42d 004c  ld   $4c
              b42e 0085  ld   $85
              b42f 0046  ld   $46
              b430 00a5  ld   $a5
              b431 004d  ld   $4d
              b432 0085  ld   $85
              b433 0047  ld   $47
              b434 00d0  ld   $d0
              b435 00de  ld   $de
              b436 0020  ld   $20
              b437 0015  ld   $15
              b438 00e7  ld   $e7
              b439 0020  ld   $20
              b43a 006d  ld   $6d
              b43b 00e5  ld   $e5
              b43c 00a5  ld   $a5
              b43d 0044  ld   $44
              b43e 0085  ld   $85
              b43f 0042  ld   $42
              b440 00a5  ld   $a5
              b441 0045  ld   $45
              b442 0085  ld   $85
              b443 0043  ld   $43
              b444 00b0  ld   $b0
              b445 00c7  ld   $c7
              b446 0086  ld   $86
              b447 00d8  ld   $d8
              b448 00a9  ld   $a9
              b449 00a0  ld   $a0
              b44a 0085  ld   $85
              b44b 0082  ld   $82
              b44c 0020  ld   $20
              b44d 002a  ld   $2a
              b44e 00e0  ld   $e0
              b44f 0098  ld   $98
              b450 0085  ld   $85
              b451 0044  ld   $44
              b452 0020  ld   $20
              b453 002a  ld   $2a
              b454 00e0  ld   $e0
              b455 00aa  ld   $aa
              b456 0020  ld   $20
              b457 002a  ld   $2a
              b458 00e0  ld   $e0
              b459 0020  ld   $20
              b45a 001b  ld   $1b
              b45b 00e5  ld   $e5
              b45c 0020  ld   $20
              b45d 0018  ld   $18
              b45e 00e0  ld   $e0
              b45f 0084  ld   $84
              b460 0082  ld   $82
              b461 00aa  ld   $aa
              b462 0010  ld   $10
              b463 0018  ld   $18
              b464 000a  ld   $0a
              b465 0010  ld   $10
              b466 00e9  ld   $e9
              b467 00a5  ld   $a5
              b468 0044  ld   $44
              b469 00d0  ld   $d0
              b46a 0003  ld   $03
              b46b 0020  ld   $20
              b46c 0011  ld   $11
              b46d 00e0  ld   $e0
              b46e 008a  ld   $8a
              b46f 0020  ld   $20
              b470 00c9  ld   $c9
              b471 00e3  ld   $e3
              b472 00a9  ld   $a9
              b473 0025  ld   $25
              b474 0020  ld   $20
              b475 001a  ld   $1a
              b476 00e0  ld   $e0
              b477 00aa  ld   $aa
              b478 0030  ld   $30
              b479 00f5  ld   $f5
              b47a 0085  ld   $85
              b47b 0044  ld   $44
              b47c 00c9  ld   $c9
              b47d 0001  ld   $01
              b47e 00d0  ld   $d0
              b47f 0005  ld   $05
              b480 00a6  ld   $a6
              b481 00d8  ld   $d8
              b482 004c  ld   $4c
              b483 00cd  ld   $cd
              b484 00e3  ld   $e3
              b485 0048  ld   $48
              b486 0084  ld   $84
              b487 00ce  ld   $ce
              b488 00a2  ld   $a2
              b489 00ed  ld   $ed
              b48a 0086  ld   $86
              b48b 00cf  ld   $cf
              b48c 00c9  ld   $c9
              b48d 0051  ld   $51
              b48e 0090  ld   $90
              b48f 0004  ld   $04
              b490 00c6  ld   $c6
              b491 00cf  ld   $cf
              b492 00e9  ld   $e9
              b493 0050  ld   $50
              b494 0048  ld   $48
              b495 00b1  ld   $b1
              b496 00ce  ld   $ce
              b497 00aa  ld   $aa
              b498 0088  ld   $88
              b499 00b1  ld   $b1
              b49a 00ce  ld   $ce
              b49b 0010  ld   $10
              b49c 00fa  ld   $fa
              b49d 00e0  ld   $e0
              b49e 00c0  ld   $c0
              b49f 00b0  ld   $b0
              b4a0 0004  ld   $04
              b4a1 00e0  ld   $e0
              b4a2 0000  ld   $00
              b4a3 0030  ld   $30
              b4a4 00f2  ld   $f2
              b4a5 00aa  ld   $aa
              b4a6 0068  ld   $68
              b4a7 00e9  ld   $e9
              b4a8 0001  ld   $01
              b4a9 00d0  ld   $d0
              b4aa 00e9  ld   $e9
              b4ab 0024  ld   $24
              b4ac 0044  ld   $44
              b4ad 0030  ld   $30
              b4ae 0003  ld   $03
              b4af 0020  ld   $20
              b4b0 00f8  ld   $f8
              b4b1 00ef  ld   $ef
              b4b2 00b1  ld   $b1
              b4b3 00ce  ld   $ce
              b4b4 0010  ld   $10
              b4b5 0010  ld   $10
              b4b6 00aa  ld   $aa
              b4b7 0029  ld   $29
              b4b8 003f  ld   $3f
              b4b9 0085  ld   $85
              b4ba 0044  ld   $44
              b4bb 0018  ld   $18
              b4bc 0069  ld   $69
              b4bd 00a0  ld   $a0
              b4be 0020  ld   $20
              b4bf 00c9  ld   $c9
              b4c0 00e3  ld   $e3
              b4c1 0088  ld   $88
              b4c2 00e0  ld   $e0
              b4c3 00c0  ld   $c0
              b4c4 0090  ld   $90
              b4c5 00ec  ld   $ec
              b4c6 0020  ld   $20
              b4c7 000c  ld   $0c
              b4c8 00e0  ld   $e0
              b4c9 0068  ld   $68
              b4ca 00c9  ld   $c9
              b4cb 005d  ld   $5d
              b4cc 00f0  ld   $f0
              b4cd 00a4  ld   $a4
              b4ce 00c9  ld   $c9
              b4cf 0028  ld   $28
              b4d0 00d0  ld   $d0
              b4d1 008a  ld   $8a
              b4d2 00f0  ld   $f0
              b4d3 009e  ld   $9e
              b4d4 0020  ld   $20
              b4d5 0018  ld   $18
              b4d6 00e1  ld   $e1
              b4d7 0095  ld   $95
              b4d8 0050  ld   $50
              b4d9 00e1  ld   $e1
              b4da 0000  ld   $00
              b4db 0000  ld   $00
              b4dc 00d5  ld   $d5
              b4dd 0088  ld   $88
              b4de 0090  ld   $90
              b4df 0011  ld   $11
              b4e0 00a0  ld   $a0
              b4e1 002b  ld   $2b
              b4e2 004c  ld   $4c
              b4e3 00e0  ld   $e0
              b4e4 00e3  ld   $e3
              b4e5 0020  ld   $20
              b4e6 0034  ld   $34
              b4e7 00ee  ld   $ee
              b4e8 00d5  ld   $d5
              b4e9 0050  ld   $50
              b4ea 0090  ld   $90
              b4eb 00f4  ld   $f4
              b4ec 0020  ld   $20
              b4ed 00e4  ld   $e4
              b4ee 00ef  ld   $ef
              b4ef 0095  ld   $95
              b4f0 0088  ld   $88
              b4f1 004c  ld   $4c
              b4f2 0023  ld   $23
              b4f3 00e8  ld   $e8
              b4f4 0020  ld   $20
              b4f5 0034  ld   $34
              b4f6 00ee  ld   $ee
              b4f7 00f0  ld   $f0
              b4f8 00e7  ld   $e7
              b4f9 0038  ld   $38
              b4fa 00e9  ld   $e9
              b4fb fe00  bra  ac          ;+-----------------------------------+
              b4fc fcfd  bra  $b4fd       ;|                                   |
              b4fd 1418  ld   $18,y       ;| Trampoline for page $b400 lookups |
              b4fe e006  jmp  y,$06       ;|                                   |
              b4ff c218  st   [$18]       ;+-----------------------------------+
              b500 0001  ld   $01
              b501 0060  ld   $60
              b502 0020  ld   $20
              b503 0018  ld   $18
              b504 00e1  ld   $e1
              b505 0095  ld   $95
              b506 0050  ld   $50
              b507 0018  ld   $18
              b508 00f5  ld   $f5
              b509 0088  ld   $88
              b50a 004c  ld   $4c
              b50b 0002  ld   $02
              b50c 00e1  ld   $e1
              b50d 00a0  ld   $a0
              b50e 0014  ld   $14
              b50f 00d0  ld   $d0
              b510 00d6  ld   $d6
              b511 0020  ld   $20
              b512 0018  ld   $18
              b513 00e1  ld   $e1
              b514 00e8  ld   $e8
              b515 00b5  ld   $b5
              b516 0050  ld   $50
              b517 0085  ld   $85
              b518 00da  ld   $da
              b519 0065  ld   $65
              b51a 00ce  ld   $ce
              b51b 0048  ld   $48
              b51c 00a8  ld   $a8
              b51d 00b5  ld   $b5
              b51e 0088  ld   $88
              b51f 0085  ld   $85
              b520 00db  ld   $db
              b521 0065  ld   $65
              b522 00cf  ld   $cf
              b523 0048  ld   $48
              b524 00c4  ld   $c4
              b525 00ca  ld   $ca
              b526 00e5  ld   $e5
              b527 00cb  ld   $cb
              b528 00b0  ld   $b0
              b529 00e3  ld   $e3
              b52a 00a5  ld   $a5
              b52b 00da  ld   $da
              b52c 0069  ld   $69
              b52d 00fe  ld   $fe
              b52e 0085  ld   $85
              b52f 00da  ld   $da
              b530 00a9  ld   $a9
              b531 00ff  ld   $ff
              b532 00a8  ld   $a8
              b533 0065  ld   $65
              b534 00db  ld   $db
              b535 0085  ld   $85
              b536 00db  ld   $db
              b537 00c8  ld   $c8
              b538 00b1  ld   $b1
              b539 00da  ld   $da
              b53a 00d9  ld   $d9
              b53b 00cc  ld   $cc
              b53c 0000  ld   $00
              b53d 00d0  ld   $d0
              b53e 000f  ld   $0f
              b53f 0098  ld   $98
              b540 00f0  ld   $f0
              b541 00f5  ld   $f5
              b542 0068  ld   $68
              b543 0091  ld   $91
              b544 00da  ld   $da
              b545 0099  ld   $99
              b546 00cc  ld   $cc
              b547 0000  ld   $00
              b548 0088  ld   $88
              b549 0010  ld   $10
              b54a 00f7  ld   $f7
              b54b 00e8  ld   $e8
              b54c 0060  ld   $60
              b54d 00ea  ld   $ea
              b54e 00a0  ld   $a0
              b54f 0080  ld   $80
              b550 00d0  ld   $d0
              b551 0095  ld   $95
              b552 00a9  ld   $a9
              b553 0000  ld   $00
              b554 0020  ld   $20
              b555 000a  ld   $0a
              b556 00e7  ld   $e7
              b557 00a0  ld   $a0
              b558 0002  ld   $02
              b559 0094  ld   $94
              b55a 0088  ld   $88
              b55b 0020  ld   $20
              b55c 000a  ld   $0a
              b55d 00e7  ld   $e7
              b55e 00a9  ld   $a9
              b55f 00bf  ld   $bf
              b560 0020  ld   $20
              b561 00c9  ld   $c9
              b562 00e3  ld   $e3
              b563 00a0  ld   $a0
              b564 0000  ld   $00
              b565 0020  ld   $20
              b566 009e  ld   $9e
              b567 00e2  ld   $e2
              b568 0094  ld   $94
              b569 0088  ld   $88
              b56a 00ea  ld   $ea
              b56b 00ea  ld   $ea
              b56c 00ea  ld   $ea
              b56d 00b5  ld   $b5
              b56e 0051  ld   $51
              b56f 0085  ld   $85
              b570 00ce  ld   $ce
              b571 00b5  ld   $b5
              b572 0089  ld   $89
              b573 0085  ld   $85
              b574 00cf  ld   $cf
              b575 00e8  ld   $e8
              b576 00e8  ld   $e8
              b577 0020  ld   $20
              b578 00bc  ld   $bc
              b579 00e1  ld   $e1
              b57a 00b5  ld   $b5
              b57b 004e  ld   $4e
              b57c 00d5  ld   $d5
              b57d 0086  ld   $86
              b57e 00b0  ld   $b0
              b57f 0015  ld   $15
              b580 00f6  ld   $f6
              b581 004e  ld   $4e
              b582 00a8  ld   $a8
              b583 00b1  ld   $b1
              b584 00ce  ld   $ce
              b585 00b4  ld   $b4
              b586 0050  ld   $50
              b587 00c4  ld   $c4
              b588 0044  ld   $44
              b589 0090  ld   $90
              b58a 0004  ld   $04
              b58b 00a0  ld   $a0
              b58c 0083  ld   $83
              b58d 00d0  ld   $d0
              b58e 00c1  ld   $c1
              b58f 0091  ld   $91
              b590 00da  ld   $da
              b591 00f6  ld   $f6
              b592 0050  ld   $50
              b593 0090  ld   $90
              b594 00e5  ld   $e5
              b595 00b4  ld   $b4
              b596 0050  ld   $50
              b597 008a  ld   $8a
              b598 0091  ld   $91
              b599 00da  ld   $da
              b59a 00e8  ld   $e8
              b59b 00e8  ld   $e8
              b59c 0060  ld   $60
              b59d 00b5  ld   $b5
              b59e 0051  ld   $51
              b59f 0085  ld   $85
              b5a0 00da  ld   $da
              b5a1 0038  ld   $38
              b5a2 00e9  ld   $e9
              b5a3 0002  ld   $02
              b5a4 0085  ld   $85
              b5a5 0044  ld   $44
              b5a6 00b5  ld   $b5
              b5a7 0089  ld   $89
              b5a8 0085  ld   $85
              b5a9 00db  ld   $db
              b5aa 00e9  ld   $e9
              b5ab 0000  ld   $00
              b5ac 0085  ld   $85
              b5ad 0045  ld   $45
              b5ae 00a0  ld   $a0
              b5af 0000  ld   $00
              b5b0 00b1  ld   $b1
              b5b1 0044  ld   $44
              b5b2 0018  ld   $18
              b5b3 00e5  ld   $e5
              b5b4 00da  ld   $da
              b5b5 0085  ld   $85
              b5b6 0044  ld   $44
              b5b7 0060  ld   $60
              b5b8 00b5  ld   $b5
              b5b9 0053  ld   $53
              b5ba 0085  ld   $85
              b5bb 00ce  ld   $ce
              b5bc 00b5  ld   $b5
              b5bd 008b  ld   $8b
              b5be 0085  ld   $85
              b5bf 00cf  ld   $cf
              b5c0 00b5  ld   $b5
              b5c1 0051  ld   $51
              b5c2 0085  ld   $85
              b5c3 00da  ld   $da
              b5c4 00b5  ld   $b5
              b5c5 0089  ld   $89
              b5c6 0085  ld   $85
              b5c7 00db  ld   $db
              b5c8 00e8  ld   $e8
              b5c9 00e8  ld   $e8
              b5ca 00e8  ld   $e8
              b5cb 00a0  ld   $a0
              b5cc 0000  ld   $00
              b5cd 0094  ld   $94
              b5ce 0088  ld   $88
              b5cf 0094  ld   $94
              b5d0 00a8  ld   $a8
              b5d1 00c8  ld   $c8
              b5d2 0094  ld   $94
              b5d3 0050  ld   $50
              b5d4 00b5  ld   $b5
              b5d5 004d  ld   $4d
              b5d6 00d5  ld   $d5
              b5d7 0085  ld   $85
              b5d8 0008  ld   $08
              b5d9 0048  ld   $48
              b5da 00b5  ld   $b5
              b5db 004f  ld   $4f
              b5dc 00d5  ld   $d5
              b5dd 0087  ld   $87
              b5de 0090  ld   $90
              b5df 0007  ld   $07
              b5e0 0068  ld   $68
              b5e1 00e2  ld   $e2
              b5e2 0000  ld   $00
              b5e3 0000  ld   $00
              b5e4 0028  ld   $28
              b5e5 00b0  ld   $b0
              b5e6 0002  ld   $02
              b5e7 0056  ld   $56
              b5e8 0050  ld   $50
              b5e9 0060  ld   $60
              b5ea 00a8  ld   $a8
              b5eb 00b1  ld   $b1
              b5ec 00ce  ld   $ce
              b5ed 0085  ld   $85
              b5ee 0044  ld   $44
              b5ef 0068  ld   $68
              b5f0 00a8  ld   $a8
              b5f1 0028  ld   $28
              b5f2 00b0  ld   $b0
              b5f3 00f3  ld   $f3
              b5f4 00b1  ld   $b1
              b5f5 00da  ld   $da
              b5f6 00c5  ld   $c5
              b5f7 0044  ld   $44
              b5f8 00d0  ld   $d0
              b5f9 00ed  ld   $ed
              b5fa 00f6  ld   $f6
              b5fb fe00  bra  ac          ;+-----------------------------------+
              b5fc fcfd  bra  $b5fd       ;|                                   |
              b5fd 1418  ld   $18,y       ;| Trampoline for page $b500 lookups |
              b5fe e006  jmp  y,$06       ;|                                   |
              b5ff c218  st   [$18]       ;+-----------------------------------+
              b600 004f  ld   $4f
              b601 00f6  ld   $f6
              b602 004d  ld   $4d
              b603 00b0  ld   $b0
              b604 00d7  ld   $d7
              b605 0020  ld   $20
              b606 00d7  ld   $d7
              b607 00e1  ld   $e1
              b608 004c  ld   $4c
              b609 0036  ld   $36
              b60a 00e7  ld   $e7
              b60b 0020  ld   $20
              b60c 0054  ld   $54
              b60d 00e2  ld   $e2
              b60e 0006  ld   $06
              b60f 00ce  ld   $ce
              b610 0026  ld   $26
              b611 00cf  ld   $cf
              b612 0090  ld   $90
              b613 000d  ld   $0d
              b614 0018  ld   $18
              b615 00a5  ld   $a5
              b616 0046  ld   $46
              b617 0065  ld   $65
              b618 00da  ld   $da
              b619 0085  ld   $85
              b61a 0046  ld   $46
              b61b 00a5  ld   $a5
              b61c 0047  ld   $47
              b61d 0065  ld   $65
              b61e 00db  ld   $db
              b61f 0085  ld   $85
              b620 0047  ld   $47
              b621 0088  ld   $88
              b622 00f0  ld   $f0
              b623 0009  ld   $09
              b624 0006  ld   $06
              b625 0046  ld   $46
              b626 0026  ld   $26
              b627 0047  ld   $47
              b628 0010  ld   $10
              b629 00e4  ld   $e4
              b62a 004c  ld   $4c
              b62b 007e  ld   $7e
              b62c 00e7  ld   $e7
              b62d 00a5  ld   $a5
              b62e 0046  ld   $46
              b62f 0020  ld   $20
              b630 0008  ld   $08
              b631 00e7  ld   $e7
              b632 00a5  ld   $a5
              b633 0047  ld   $47
              b634 0095  ld   $95
              b635 00a8  ld   $a8
              b636 0006  ld   $06
              b637 0045  ld   $45
              b638 0090  ld   $90
              b639 0028  ld   $28
              b63a 004c  ld   $4c
              b63b 006f  ld   $6f
              b63c 00e7  ld   $e7
              b63d 00a9  ld   $a9
              b63e 0055  ld   $55
              b63f 0085  ld   $85
              b640 0045  ld   $45
              b641 0020  ld   $20
              b642 005b  ld   $5b
              b643 00e2  ld   $e2
              b644 00a5  ld   $a5
              b645 00ce  ld   $ce
              b646 0085  ld   $85
              b647 00da  ld   $da
              b648 00a5  ld   $a5
              b649 00cf  ld   $cf
              b64a 0085  ld   $85
              b64b 00db  ld   $db
              b64c 0020  ld   $20
              b64d 0015  ld   $15
              b64e 00e7  ld   $e7
              b64f 0084  ld   $84
              b650 0046  ld   $46
              b651 0084  ld   $84
              b652 0047  ld   $47
              b653 00a5  ld   $a5
              b654 00cf  ld   $cf
              b655 0010  ld   $10
              b656 0009  ld   $09
              b657 00ca  ld   $ca
              b658 0006  ld   $06
              b659 0045  ld   $45
              b65a 0020  ld   $20
              b65b 006f  ld   $6f
              b65c 00e7  ld   $e7
              b65d 0020  ld   $20
              b65e 0015  ld   $15
              b65f 00e7  ld   $e7
              b660 00a0  ld   $a0
              b661 0010  ld   $10
              b662 0060  ld   $60
              b663 0020  ld   $20
              b664 006c  ld   $6c
              b665 00ee  ld   $ee
              b666 00f0  ld   $f0
              b667 00c5  ld   $c5
              b668 00ff  ld   $ff
              b669 00c9  ld   $c9
              b66a 0084  ld   $84
              b66b 00d0  ld   $d0
              b66c 0002  ld   $02
              b66d 0046  ld   $46
              b66e 0078  ld   $78
              b66f 00c9  ld   $c9
              b670 00df  ld   $df
              b671 00f0  ld   $f0
              b672 0011  ld   $11
              b673 00c9  ld   $c9
              b674 009b  ld   $9b
              b675 00f0  ld   $f0
              b676 0006  ld   $06
              b677 0099  ld   $99
              b678 0000  ld   $00
              b679 0002  ld   $02
              b67a 00c8  ld   $c8
              b67b 0010  ld   $10
              b67c 000a  ld   $0a
              b67d 00a0  ld   $a0
              b67e 008b  ld   $8b
              b67f 0020  ld   $20
              b680 00c4  ld   $c4
              b681 00e3  ld   $e3
              b682 00a0  ld   $a0
              b683 0001  ld   $01
              b684 0088  ld   $88
              b685 0030  ld   $30
              b686 00f6  ld   $f6
              b687 0020  ld   $20
              b688 0003  ld   $03
              b689 00e0  ld   $e0
              b68a 00ea  ld   $ea
              b68b 00ea  ld   $ea
              b68c 0020  ld   $20
              b68d 00c9  ld   $c9
              b68e 00e3  ld   $e3
              b68f 00c9  ld   $c9
              b690 008d  ld   $8d
              b691 00d0  ld   $d0
              b692 00d6  ld   $d6
              b693 00a9  ld   $a9
              b694 00df  ld   $df
              b695 0099  ld   $99
              b696 0000  ld   $00
              b697 0002  ld   $02
              b698 0060  ld   $60
              b699 0020  ld   $20
              b69a 00d3  ld   $d3
              b69b 00ef  ld   $ef
              b69c 0020  ld   $20
              b69d 00cd  ld   $cd
              b69e 00e3  ld   $e3
              b69f 0046  ld   $46
              b6a0 00d9  ld   $d9
              b6a1 00a9  ld   $a9
              b6a2 00be  ld   $be
              b6a3 0020  ld   $20
              b6a4 00c9  ld   $c9
              b6a5 00e3  ld   $e3
              b6a6 00a0  ld   $a0
              b6a7 0000  ld   $00
              b6a8 0084  ld   $84
              b6a9 0082  ld   $82
              b6aa 0024  ld   $24
              b6ab 0078  ld   $78
              b6ac 0010  ld   $10
              b6ad 000c  ld   $0c
              b6ae 00a6  ld   $a6
              b6af 0076  ld   $76
              b6b0 00a5  ld   $a5
              b6b1 0077  ld   $77
              b6b2 0020  ld   $20
              b6b3 001b  ld   $1b
              b6b4 00e5  ld   $e5
              b6b5 00a9  ld   $a9
              b6b6 00a0  ld   $a0
              b6b7 0020  ld   $20
              b6b8 00c9  ld   $c9
              b6b9 00e3  ld   $e3
              b6ba 00a2  ld   $a2
              b6bb 00ff  ld   $ff
              b6bc 009a  ld   $9a
              b6bd 0020  ld   $20
              b6be 009e  ld   $9e
              b6bf 00e2  ld   $e2
              b6c0 0084  ld   $84
              b6c1 00e9  ld   $e9
              b6c2 008a  ld   $8a
              b6c3 0085  ld   $85
              b6c4 00c8  ld   $c8
              b6c5 00a2  ld   $a2
              b6c6 0018  ld   $18
              b6c7 0020  ld   $20
              b6c8 0091  ld   $91
              b6c9 00e4  ld   $e4
              b6ca 00a5  ld   $a5
              b6cb 00c8  ld   $c8
              b6cc 0069  ld   $69
              b6cd 0000  ld   $00
              b6ce 0085  ld   $85
              b6cf 00de  ld   $de
              b6d0 00a9  ld   $a9
              b6d1 0000  ld   $00
              b6d2 00aa  ld   $aa
              b6d3 0069  ld   $69
              b6d4 0002  ld   $02
              b6d5 0085  ld   $85
              b6d6 00df  ld   $df
              b6d7 00a1  ld   $a1
              b6d8 00de  ld   $de
              b6d9 0029  ld   $29
              b6da 00f0  ld   $f0
              b6db 00c9  ld   $c9
              b6dc 00b0  ld   $b0
              b6dd 00f0  ld   $f0
              b6de 0003  ld   $03
              b6df 004c  ld   $4c
              b6e0 0083  ld   $83
              b6e1 00e8  ld   $e8
              b6e2 00a0  ld   $a0
              b6e3 0002  ld   $02
              b6e4 00b1  ld   $b1
              b6e5 00de  ld   $de
              b6e6 0099  ld   $99
              b6e7 00cd  ld   $cd
              b6e8 0000  ld   $00
              b6e9 00e3  ld   $e3
              b6ea 0000  ld   $00
              b6eb 0000  ld   $00
              b6ec 0088  ld   $88
              b6ed 00d0  ld   $d0
              b6ee 00f8  ld   $f8
              b6ef 0020  ld   $20
              b6f0 008a  ld   $8a
              b6f1 00e3  ld   $e3
              b6f2 00a5  ld   $a5
              b6f3 00e9  ld   $e9
              b6f4 00e5  ld   $e5
              b6f5 00c8  ld   $c8
              b6f6 00c9  ld   $c9
              b6f7 0004  ld   $04
              b6f8 00f0  ld   $f0
              b6f9 00a8  ld   $a8
              b6fa 0091  ld   $91
              b6fb fe00  bra  ac          ;+-----------------------------------+
              b6fc fcfd  bra  $b6fd       ;|                                   |
              b6fd 1418  ld   $18,y       ;| Trampoline for page $b600 lookups |
              b6fe e006  jmp  y,$06       ;|                                   |
              b6ff c218  st   [$18]       ;+-----------------------------------+
              b700 00de  ld   $de
              b701 00a5  ld   $a5
              b702 00ca  ld   $ca
              b703 00f1  ld   $f1
              b704 00de  ld   $de
              b705 0085  ld   $85
              b706 0044  ld   $44
              b707 00a5  ld   $a5
              b708 00cb  ld   $cb
              b709 00e9  ld   $e9
              b70a 0000  ld   $00
              b70b 0085  ld   $85
              b70c 0045  ld   $45
              b70d 00a5  ld   $a5
              b70e 0044  ld   $44
              b70f 00c5  ld   $c5
              b710 00cc  ld   $cc
              b711 00a5  ld   $a5
              b712 0045  ld   $45
              b713 00e5  ld   $e5
              b714 00cd  ld   $cd
              b715 0090  ld   $90
              b716 0045  ld   $45
              b717 00a5  ld   $a5
              b718 00ca  ld   $ca
              b719 00f1  ld   $f1
              b71a 00de  ld   $de
              b71b 0085  ld   $85
              b71c 0046  ld   $46
              b71d 00a5  ld   $a5
              b71e 00cb  ld   $cb
              b71f 00e9  ld   $e9
              b720 0000  ld   $00
              b721 0085  ld   $85
              b722 0047  ld   $47
              b723 00b1  ld   $b1
              b724 00ca  ld   $ca
              b725 0091  ld   $91
              b726 0046  ld   $46
              b727 00e6  ld   $e6
              b728 00ca  ld   $ca
              b729 00d0  ld   $d0
              b72a 0002  ld   $02
              b72b 00e6  ld   $e6
              b72c 00cb  ld   $cb
              b72d 00a5  ld   $a5
              b72e 0042  ld   $42
              b72f 00c5  ld   $c5
              b730 00ca  ld   $ca
              b731 00a5  ld   $a5
              b732 0043  ld   $43
              b733 00e5  ld   $e5
              b734 00cb  ld   $cb
              b735 00b0  ld   $b0
              b736 00e0  ld   $e0
              b737 00b5  ld   $b5
              b738 0044  ld   $44
              b739 0095  ld   $95
              b73a 00ca  ld   $ca
              b73b 00ca  ld   $ca
              b73c 0010  ld   $10
              b73d 00f9  ld   $f9
              b73e 00b1  ld   $b1
              b73f 00de  ld   $de
              b740 00a8  ld   $a8
              b741 0088  ld   $88
              b742 00b1  ld   $b1
              b743 00de  ld   $de
              b744 0091  ld   $91
              b745 0046  ld   $46
              b746 0098  ld   $98
              b747 00d0  ld   $d0
              b748 00f8  ld   $f8
              b749 0024  ld   $24
              b74a 0078  ld   $78
              b74b 0010  ld   $10
              b74c 0009  ld   $09
              b74d 00b5  ld   $b5
              b74e 0077  ld   $77
              b74f 0075  ld   $75
              b750 0075  ld   $75
              b751 0095  ld   $95
              b752 0077  ld   $77
              b753 00e8  ld   $e8
              b754 00f0  ld   $f0
              b755 00f7  ld   $f7
              b756 0010  ld   $10
              b757 007e  ld   $7e
              b758 0000  ld   $00
              b759 0000  ld   $00
              b75a 0000  ld   $00
              b75b 0000  ld   $00
              b75c 00a0  ld   $a0
              b75d 0014  ld   $14
              b75e 00d0  ld   $d0
              b75f 0071  ld   $71
              b760 0020  ld   $20
              b761 0015  ld   $15
              b762 00e7  ld   $e7
              b763 00a5  ld   $a5
              b764 0042  ld   $42
              b765 0085  ld   $85
              b766 0046  ld   $46
              b767 00a5  ld   $a5
              b768 0043  ld   $43
              b769 0085  ld   $85
              b76a 0047  ld   $47
              b76b 0020  ld   $20
              b76c 0075  ld   $75
              b76d 00e5  ld   $e5
              b76e 00a5  ld   $a5
              b76f 0042  ld   $42
              b770 0085  ld   $85
              b771 0044  ld   $44
              b772 00a5  ld   $a5
              b773 0043  ld   $43
              b774 0085  ld   $85
              b775 0045  ld   $45
              b776 00d0  ld   $d0
              b777 000e  ld   $0e
              b778 0020  ld   $20
              b779 0015  ld   $15
              b77a 00e7  ld   $e7
              b77b 0020  ld   $20
              b77c 006d  ld   $6d
              b77d 00e5  ld   $e5
              b77e 00a5  ld   $a5
              b77f 0046  ld   $46
              b780 0085  ld   $85
              b781 0042  ld   $42
              b782 00a5  ld   $a5
              b783 0047  ld   $47
              b784 0085  ld   $85
              b785 0043  ld   $43
              b786 00a0  ld   $a0
              b787 0000  ld   $00
              b788 00a5  ld   $a5
              b789 00ca  ld   $ca
              b78a 00c5  ld   $c5
              b78b 0044  ld   $44
              b78c 00a5  ld   $a5
              b78d 00cb  ld   $cb
              b78e 00e5  ld   $e5
              b78f 0045  ld   $45
              b790 00b0  ld   $b0
              b791 0016  ld   $16
              b792 00a5  ld   $a5
              b793 0044  ld   $44
              b794 00d0  ld   $d0
              b795 0002  ld   $02
              b796 00c6  ld   $c6
              b797 0045  ld   $45
              b798 00c6  ld   $c6
              b799 0044  ld   $44
              b79a 00a5  ld   $a5
              b79b 0046  ld   $46
              b79c 00d0  ld   $d0
              b79d 0002  ld   $02
              b79e 00c6  ld   $c6
              b79f 0047  ld   $47
              b7a0 00c6  ld   $c6
              b7a1 0046  ld   $46
              b7a2 00b1  ld   $b1
              b7a3 0044  ld   $44
              b7a4 0091  ld   $91
              b7a5 0046  ld   $46
              b7a6 0090  ld   $90
              b7a7 00e0  ld   $e0
              b7a8 00a5  ld   $a5
              b7a9 0046  ld   $46
              b7aa 0085  ld   $85
              b7ab 00ca  ld   $ca
              b7ac 00a5  ld   $a5
              b7ad 0047  ld   $47
              b7ae 0085  ld   $85
              b7af 00cb  ld   $cb
              b7b0 0060  ld   $60
              b7b1 0020  ld   $20
              b7b2 00c9  ld   $c9
              b7b3 00e3  ld   $e3
              b7b4 00c8  ld   $c8
              b7b5 00b9  ld   $b9
              b7b6 0000  ld   $00
              b7b7 00eb  ld   $eb
              b7b8 0030  ld   $30
              b7b9 00f7  ld   $f7
              b7ba 00c9  ld   $c9
              b7bb 008d  ld   $8d
              b7bc 00d0  ld   $d0
              b7bd 0006  ld   $06
              b7be 00a9  ld   $a9
              b7bf 0000  ld   $00
              b7c0 0085  ld   $85
              b7c1 0081  ld   $81
              b7c2 00a9  ld   $a9
              b7c3 008d  ld   $8d
              b7c4 00e6  ld   $e6
              b7c5 0081  ld   $81
              b7c6 004c  ld   $4c
              b7c7 00ef  ld   $ef
              b7c8 00ff  ld   $ff
              b7c9 00ea  ld   $ea
              b7ca 00ea  ld   $ea
              b7cb 00ea  ld   $ea
              * 6 times
              b7cf 00a0  ld   $a0
              b7d0 0006  ld   $06
              b7d1 0020  ld   $20
              b7d2 00d3  ld   $d3
              b7d3 00ee  ld   $ee
              b7d4 0024  ld   $24
              b7d5 00d9  ld   $d9
              b7d6 0030  ld   $30
              b7d7 0003  ld   $03
              b7d8 004c  ld   $4c
              b7d9 00b6  ld   $b6
              b7da 00e2  ld   $e2
              b7db 004c  ld   $4c
              b7dc 009a  ld   $9a
              b7dd 00eb  ld   $eb
              b7de 002a  ld   $2a
              b7df 0069  ld   $69
              b7e0 00a0  ld   $a0
              b7e1 00dd  ld   $dd
              b7e2 0000  ld   $00
              b7e3 0002  ld   $02
              b7e4 00d0  ld   $d0
              b7e5 0053  ld   $53
              b7e6 00b1  ld   $b1
              b7e7 0086  ld   $86
              b7e8 000a  ld   $0a
              b7e9 0030  ld   $30
              b7ea 0006  ld   $06
              b7eb 0088  ld   $88
              b7ec 00b1  ld   $b1
              b7ed 0086  ld   $86
              b7ee 0030  ld   $30
              b7ef 0029  ld   $29
              b7f0 00c8  ld   $c8
              b7f1 00e4  ld   $e4
              b7f2 0000  ld   $00
              b7f3 0000  ld   $00
              b7f4 0086  ld   $86
              b7f5 00c8  ld   $c8
              b7f6 0098  ld   $98
              b7f7 0048  ld   $48
              b7f8 00a2  ld   $a2
              b7f9 0000  ld   $00
              b7fa 00a1  ld   $a1
              b7fb fe00  bra  ac          ;+-----------------------------------+
              b7fc fcfd  bra  $b7fd       ;|                                   |
              b7fd 1418  ld   $18,y       ;| Trampoline for page $b700 lookups |
              b7fe e006  jmp  y,$06       ;|                                   |
              b7ff c218  st   [$18]       ;+-----------------------------------+
              b800 0086  ld   $86
              b801 00aa  ld   $aa
              b802 004a  ld   $4a
              b803 0049  ld   $49
              b804 0048  ld   $48
              b805 0011  ld   $11
              b806 0086  ld   $86
              b807 00c9  ld   $c9
              b808 00c0  ld   $c0
              b809 0090  ld   $90
              b80a 0001  ld   $01
              b80b 00e8  ld   $e8
              b80c 00c8  ld   $c8
              b80d 00d0  ld   $d0
              b80e 00f3  ld   $f3
              b80f 0068  ld   $68
              b810 00a8  ld   $a8
              b811 008a  ld   $8a
              b812 004c  ld   $4c
              b813 00c0  ld   $c0
              b814 00e4  ld   $e4
              b815 00e6  ld   $e6
              b816 00e9  ld   $e9
              b817 00a6  ld   $a6
              b818 00e9  ld   $e9
              b819 00f0  ld   $f0
              b81a 00bc  ld   $bc
              b81b 009d  ld   $9d
              b81c 0000  ld   $00
              b81d 0002  ld   $02
              b81e 0060  ld   $60
              b81f 00a6  ld   $a6
              b820 00c8  ld   $c8
              b821 00a9  ld   $a9
              b822 00a0  ld   $a0
              b823 00e8  ld   $e8
              b824 00dd  ld   $dd
              b825 0000  ld   $00
              b826 0002  ld   $02
              b827 00b0  ld   $b0
              b828 00fa  ld   $fa
              b829 00b1  ld   $b1
              b82a 0086  ld   $86
              b82b 0029  ld   $29
              b82c 003f  ld   $3f
              b82d 004a  ld   $4a
              b82e 00d0  ld   $d0
              b82f 00b6  ld   $b6
              b830 00bd  ld   $bd
              b831 0000  ld   $00
              b832 0002  ld   $02
              b833 00b0  ld   $b0
              b834 0006  ld   $06
              b835 0069  ld   $69
              b836 003f  ld   $3f
              b837 00c9  ld   $c9
              b838 001a  ld   $1a
              b839 0090  ld   $90
              b83a 006f  ld   $6f
              b83b 0069  ld   $69
              b83c 004f  ld   $4f
              b83d 00c9  ld   $c9
              b83e 000a  ld   $0a
              b83f 0090  ld   $90
              b840 0069  ld   $69
              b841 00a6  ld   $a6
              b842 0085  ld   $85
              b843 00c8  ld   $c8
              b844 00b1  ld   $b1
              b845 0086  ld   $86
              b846 0029  ld   $29
              b847 00e0  ld   $e0
              b848 00c9  ld   $c9
              b849 0020  ld   $20
              b84a 00f0  ld   $f0
              b84b 007a  ld   $7a
              b84c 00b5  ld   $b5
              b84d 00b0  ld   $b0
              b84e 0085  ld   $85
              b84f 00c8  ld   $c8
              b850 00b5  ld   $b5
              b851 00d1  ld   $d1
              b852 0085  ld   $85
              b853 00e9  ld   $e9
              b854 0088  ld   $88
              b855 00b1  ld   $b1
              b856 0086  ld   $86
              b857 000a  ld   $0a
              b858 0010  ld   $10
              b859 00fa  ld   $fa
              b85a 0088  ld   $88
              b85b 00b0  ld   $b0
              b85c 0038  ld   $38
              b85d 000a  ld   $0a
              b85e 0030  ld   $30
              b85f 0035  ld   $35
              b860 00b4  ld   $b4
              b861 0058  ld   $58
              b862 0084  ld   $84
              b863 0087  ld   $87
              b864 00b4  ld   $b4
              b865 0090  ld   $90
              b866 00e8  ld   $e8
              b867 0010  ld   $10
              b868 00da  ld   $da
              b869 00f0  ld   $f0
              b86a 00b3  ld   $b3
              b86b 00c9  ld   $c9
              b86c 007e  ld   $7e
              b86d 00b0  ld   $b0
              b86e 0022  ld   $22
              b86f 00ca  ld   $ca
              b870 0010  ld   $10
              b871 0004  ld   $04
              b872 00a0  ld   $a0
              b873 0006  ld   $06
              b874 0010  ld   $10
              b875 0029  ld   $29
              b876 0094  ld   $94
              b877 0090  ld   $90
              b878 00a4  ld   $a4
              b879 0087  ld   $87
              b87a 0094  ld   $94
              b87b 0058  ld   $58
              b87c 00a4  ld   $a4
              b87d 00c8  ld   $c8
              b87e 0094  ld   $94
              b87f 00b0  ld   $b0
              b880 00a4  ld   $a4
              b881 00e9  ld   $e9
              b882 0094  ld   $94
              b883 00d1  ld   $d1
              b884 0029  ld   $29
              b885 001f  ld   $1f
              b886 00a8  ld   $a8
              b887 00b9  ld   $b9
              b888 0020  ld   $20
              b889 00ec  ld   $ec
              b88a 000a  ld   $0a
              b88b 00a8  ld   $a8
              b88c 00a9  ld   $a9
              b88d 0076  ld   $76
              b88e 002a  ld   $2a
              b88f 0085  ld   $85
              b890 0087  ld   $87
              b891 00d0  ld   $d0
              b892 0001  ld   $01
              b893 00c8  ld   $c8
              b894 00c8  ld   $c8
              b895 0086  ld   $86
              b896 0085  ld   $85
              b897 00b1  ld   $b1
              b898 0086  ld   $86
              b899 0030  ld   $30
              b89a 0084  ld   $84
              b89b 00d0  ld   $d0
              b89c 0005  ld   $05
              b89d 00a0  ld   $a0
              b89e 000e  ld   $0e
              b89f 004c  ld   $4c
              b8a0 00e0  ld   $e0
              b8a1 00e3  ld   $e3
              b8a2 00c9  ld   $c9
              b8a3 0003  ld   $03
              b8a4 00b0  ld   $b0
              b8a5 00c3  ld   $c3
              b8a6 004a  ld   $4a
              b8a7 00a6  ld   $a6
              b8a8 00c8  ld   $c8
              b8a9 00e8  ld   $e8
              b8aa 00bd  ld   $bd
              b8ab 0000  ld   $00
              b8ac 0002  ld   $02
              b8ad 0090  ld   $90
              b8ae 0004  ld   $04
              b8af 00c9  ld   $c9
              b8b0 00a2  ld   $a2
              b8b1 00f0  ld   $f0
              b8b2 000a  ld   $0a
              b8b3 00c9  ld   $c9
              b8b4 00df  ld   $df
              b8b5 00f0  ld   $f0
              b8b6 0006  ld   $06
              b8b7 0086  ld   $86
              b8b8 00c8  ld   $c8
              b8b9 0020  ld   $20
              b8ba 001c  ld   $1c
              b8bb 00e4  ld   $e4
              b8bc 00c8  ld   $c8
              b8bd 0088  ld   $88
              b8be 00a6  ld   $a6
              b8bf 0085  ld   $85
              b8c0 00b1  ld   $b1
              b8c1 0086  ld   $86
              b8c2 0088  ld   $88
              b8c3 000a  ld   $0a
              b8c4 0010  ld   $10
              b8c5 00cf  ld   $cf
              b8c6 00b4  ld   $b4
              b8c7 0058  ld   $58
              b8c8 0084  ld   $84
              b8c9 0087  ld   $87
              b8ca 00b4  ld   $b4
              b8cb 0090  ld   $90
              b8cc 00e8  ld   $e8
              b8cd 00b1  ld   $b1
              b8ce 0086  ld   $86
              b8cf 0029  ld   $29
              b8d0 009f  ld   $9f
              b8d1 00d0  ld   $d0
              b8d2 00ed  ld   $ed
              b8d3 0085  ld   $85
              b8d4 0072  ld   $72
              b8d5 0085  ld   $85
              b8d6 0073  ld   $73
              b8d7 0098  ld   $98
              b8d8 0048  ld   $48
              b8d9 0086  ld   $86
              b8da 0085  ld   $85
              b8db 00b4  ld   $b4
              b8dc 00d0  ld   $d0
              b8dd 0084  ld   $84
              b8de 00c9  ld   $c9
              b8df 0018  ld   $18
              b8e0 00a9  ld   $a9
              b8e1 000a  ld   $0a
              b8e2 0085  ld   $85
              b8e3 0079  ld   $79
              b8e4 00a2  ld   $a2
              b8e5 0000  ld   $00
              b8e6 00c8  ld   $c8
              b8e7 00b9  ld   $b9
              b8e8 0000  ld   $00
              b8e9 0002  ld   $02
              b8ea 0029  ld   $29
              b8eb 000f  ld   $0f
              b8ec 0065  ld   $65
              b8ed 0072  ld   $72
              b8ee 0048  ld   $48
              b8ef 008a  ld   $8a
              b8f0 0065  ld   $65
              b8f1 0073  ld   $73
              b8f2 0030  ld   $30
              b8f3 001c  ld   $1c
              b8f4 00aa  ld   $aa
              b8f5 0068  ld   $68
              b8f6 00c6  ld   $c6
              b8f7 0079  ld   $79
              b8f8 00d0  ld   $d0
              b8f9 00e5  ld   $e5
              b8fa 0000  ld   $00
              b8fb fe00  bra  ac          ;+-----------------------------------+
              b8fc fcfd  bra  $b8fd       ;|                                   |
              b8fd 1418  ld   $18,y       ;| Trampoline for page $b800 lookups |
              b8fe e006  jmp  y,$06       ;|                                   |
              b8ff c218  st   [$18]       ;+-----------------------------------+
              b900 0000  ld   $00
              b901 00f2  ld   $f2
              b902 0085  ld   $85
              b903 0072  ld   $72
              b904 0086  ld   $86
              b905 0073  ld   $73
              b906 00c4  ld   $c4
              b907 00e9  ld   $e9
              b908 00d0  ld   $d0
              b909 00de  ld   $de
              b90a 00a4  ld   $a4
              b90b 00c9  ld   $c9
              b90c 00c8  ld   $c8
              b90d 0084  ld   $84
              b90e 00e9  ld   $e9
              b90f 0020  ld   $20
              b910 001c  ld   $1c
              b911 00e4  ld   $e4
              b912 0068  ld   $68
              b913 00a8  ld   $a8
              b914 00a5  ld   $a5
              b915 0073  ld   $73
              b916 00b0  ld   $b0
              b917 00a9  ld   $a9
              b918 00a0  ld   $a0
              b919 0000  ld   $00
              b91a 0010  ld   $10
              b91b 008b  ld   $8b
              b91c 0085  ld   $85
              b91d 0073  ld   $73
              b91e 0086  ld   $86
              b91f 0072  ld   $72
              b920 00a2  ld   $a2
              b921 0004  ld   $04
              b922 0086  ld   $86
              b923 00c9  ld   $c9
              b924 00a9  ld   $a9
              b925 00b0  ld   $b0
              b926 0085  ld   $85
              b927 0079  ld   $79
              b928 00a5  ld   $a5
              b929 0072  ld   $72
              b92a 00dd  ld   $dd
              b92b 0063  ld   $63
              b92c 00e5  ld   $e5
              b92d 00a5  ld   $a5
              b92e 0073  ld   $73
              b92f 00fd  ld   $fd
              b930 0068  ld   $68
              b931 00e5  ld   $e5
              b932 0090  ld   $90
              b933 000d  ld   $0d
              b934 0085  ld   $85
              b935 0073  ld   $73
              b936 00a5  ld   $a5
              b937 0072  ld   $72
              b938 00fd  ld   $fd
              b939 0063  ld   $63
              b93a 00e5  ld   $e5
              b93b 0085  ld   $85
              b93c 0072  ld   $72
              b93d 00e6  ld   $e6
              b93e 0079  ld   $79
              b93f 00d0  ld   $d0
              b940 00e7  ld   $e7
              b941 00a5  ld   $a5
              b942 0079  ld   $79
              b943 00e8  ld   $e8
              b944 00ca  ld   $ca
              b945 00f0  ld   $f0
              b946 000e  ld   $0e
              b947 00c9  ld   $c9
              b948 00b0  ld   $b0
              b949 00f0  ld   $f0
              b94a 0002  ld   $02
              b94b 0085  ld   $85
              b94c 00c9  ld   $c9
              b94d 0024  ld   $24
              b94e 00c9  ld   $c9
              b94f 0030  ld   $30
              b950 0004  ld   $04
              b951 00a5  ld   $a5
              b952 0082  ld   $82
              b953 00f0  ld   $f0
              b954 000b  ld   $0b
              b955 0020  ld   $20
              b956 00c9  ld   $c9
              b957 00e3  ld   $e3
              b958 0024  ld   $24
              b959 0078  ld   $78
              b95a 0010  ld   $10
              b95b 0004  ld   $04
              b95c 0099  ld   $99
              b95d 0000  ld   $00
              b95e 0002  ld   $02
              b95f 00c8  ld   $c8
              b960 00ca  ld   $ca
              b961 0010  ld   $10
              b962 00c1  ld   $c1
              b963 0060  ld   $60
              b964 0001  ld   $01
              b965 000a  ld   $0a
              b966 0064  ld   $64
              b967 00e8  ld   $e8
              b968 0010  ld   $10
              b969 0000  ld   $00
              b96a 0000  ld   $00
              b96b 0000  ld   $00
              b96c 0003  ld   $03
              b96d 0027  ld   $27
              b96e 00a5  ld   $a5
              b96f 00ca  ld   $ca
              b970 0085  ld   $85
              b971 0046  ld   $46
              b972 00a5  ld   $a5
              b973 00cb  ld   $cb
              b974 0085  ld   $85
              b975 0047  ld   $47
              b976 00e8  ld   $e8
              b977 00a5  ld   $a5
              b978 0047  ld   $47
              b979 0085  ld   $85
              b97a 0045  ld   $45
              b97b 00a5  ld   $a5
              b97c 0046  ld   $46
              b97d 0085  ld   $85
              b97e 0044  ld   $44
              b97f 00c5  ld   $c5
              b980 004c  ld   $4c
              b981 00a5  ld   $a5
              b982 0045  ld   $45
              b983 00e5  ld   $e5
              b984 004d  ld   $4d
              b985 00b0  ld   $b0
              b986 0026  ld   $26
              b987 00a0  ld   $a0
              b988 0001  ld   $01
              b989 00b1  ld   $b1
              b98a 0044  ld   $44
              b98b 00e5  ld   $e5
              b98c 00ce  ld   $ce
              b98d 00c8  ld   $c8
              b98e 00b1  ld   $b1
              b98f 0044  ld   $44
              b990 00e5  ld   $e5
              b991 00cf  ld   $cf
              b992 00b0  ld   $b0
              b993 0019  ld   $19
              b994 00a0  ld   $a0
              b995 0000  ld   $00
              b996 00a5  ld   $a5
              b997 0046  ld   $46
              b998 0071  ld   $71
              b999 0044  ld   $44
              b99a 0085  ld   $85
              b99b 0046  ld   $46
              b99c 0090  ld   $90
              b99d 0003  ld   $03
              b99e 00e6  ld   $e6
              b99f 0047  ld   $47
              b9a0 0018  ld   $18
              b9a1 00c8  ld   $c8
              b9a2 00a5  ld   $a5
              b9a3 00ce  ld   $ce
              b9a4 00f1  ld   $f1
              b9a5 0044  ld   $44
              b9a6 00c8  ld   $c8
              b9a7 00a5  ld   $a5
              b9a8 00cf  ld   $cf
              b9a9 00f1  ld   $f1
              b9aa 0044  ld   $44
              b9ab 00b0  ld   $b0
              b9ac 00ca  ld   $ca
              b9ad 0060  ld   $60
              b9ae 0046  ld   $46
              b9af 0078  ld   $78
              b9b0 00a5  ld   $a5
              b9b1 004c  ld   $4c
              b9b2 0085  ld   $85
              b9b3 00ca  ld   $ca
              b9b4 00a5  ld   $a5
              b9b5 004d  ld   $4d
              b9b6 0085  ld   $85
              b9b7 00cb  ld   $cb
              b9b8 00a5  ld   $a5
              b9b9 004a  ld   $4a
              b9ba 0085  ld   $85
              b9bb 00cc  ld   $cc
              b9bc 00a5  ld   $a5
              b9bd 004b  ld   $4b
              b9be 0085  ld   $85
              b9bf 00cd  ld   $cd
              b9c0 00a9  ld   $a9
              b9c1 0000  ld   $00
              b9c2 0085  ld   $85
              b9c3 0083  ld   $83
              b9c4 0085  ld   $85
              b9c5 0084  ld   $84
              b9c6 0085  ld   $85
              b9c7 0086  ld   $86
              b9c8 00a9  ld   $a9
              b9c9 0000  ld   $00
              b9ca 0085  ld   $85
              b9cb 001d  ld   $1d
              b9cc 0060  ld   $60
              b9cd 00a5  ld   $a5
              b9ce 00d0  ld   $d0
              b9cf 0069  ld   $69
              b9d0 0005  ld   $05
              b9d1 0085  ld   $85
              b9d2 00d2  ld   $d2
              b9d3 00a5  ld   $a5
              b9d4 00d1  ld   $d1
              b9d5 0069  ld   $69
              b9d6 0000  ld   $00
              b9d7 0085  ld   $85
              b9d8 00d3  ld   $d3
              b9d9 00a5  ld   $a5
              b9da 00d2  ld   $d2
              b9db 00c5  ld   $c5
              b9dc 00ca  ld   $ca
              b9dd 00a5  ld   $a5
              b9de 00d3  ld   $d3
              b9df 00e5  ld   $e5
              b9e0 00cb  ld   $cb
              b9e1 0090  ld   $90
              b9e2 0003  ld   $03
              b9e3 004c  ld   $4c
              b9e4 006b  ld   $6b
              b9e5 00e3  ld   $e3
              b9e6 00a5  ld   $a5
              b9e7 00ce  ld   $ce
              b9e8 0091  ld   $91
              b9e9 00d0  ld   $d0
              b9ea 00a5  ld   $a5
              b9eb 00cf  ld   $cf
              b9ec 00c8  ld   $c8
              b9ed 0091  ld   $91
              b9ee 00d0  ld   $d0
              b9ef 00a5  ld   $a5
              b9f0 00d2  ld   $d2
              b9f1 00c8  ld   $c8
              b9f2 0091  ld   $91
              b9f3 00d0  ld   $d0
              b9f4 00a5  ld   $a5
              b9f5 00d3  ld   $d3
              b9f6 00c8  ld   $c8
              b9f7 0091  ld   $91
              b9f8 00d0  ld   $d0
              b9f9 00a9  ld   $a9
              b9fa 0000  ld   $00
              b9fb fe00  bra  ac          ;+-----------------------------------+
              b9fc fcfd  bra  $b9fd       ;|                                   |
              b9fd 1418  ld   $18,y       ;| Trampoline for page $b900 lookups |
              b9fe e006  jmp  y,$06       ;|                                   |
              b9ff c218  st   [$18]       ;+-----------------------------------+
              ba00 00c8  ld   $c8
              ba01 0091  ld   $91
              ba02 00d0  ld   $d0
              ba03 00c8  ld   $c8
              ba04 0091  ld   $91
              ba05 00d0  ld   $d0
              ba06 00e6  ld   $e6
              ba07 0000  ld   $00
              ba08 0000  ld   $00
              ba09 00a5  ld   $a5
              ba0a 00d2  ld   $d2
              ba0b 0085  ld   $85
              ba0c 00cc  ld   $cc
              ba0d 00a5  ld   $a5
              ba0e 00d3  ld   $d3
              ba0f 0085  ld   $85
              ba10 00cd  ld   $cd
              ba11 00a5  ld   $a5
              ba12 00d0  ld   $d0
              ba13 0090  ld   $90
              ba14 0043  ld   $43
              ba15 0085  ld   $85
              ba16 00ce  ld   $ce
              ba17 0084  ld   $84
              ba18 00cf  ld   $cf
              ba19 0020  ld   $20
              ba1a 00ff  ld   $ff
              ba1b 00e6  ld   $e6
              ba1c 0030  ld   $30
              ba1d 000e  ld   $0e
              ba1e 00c9  ld   $c9
              ba1f 0040  ld   $40
              ba20 00f0  ld   $f0
              ba21 000a  ld   $0a
              ba22 004c  ld   $4c
              ba23 0028  ld   $28
              ba24 00e6  ld   $e6
              ba25 0006  ld   $06
              ba26 00c9  ld   $c9
              ba27 0049  ld   $49
              ba28 00d0  ld   $d0
              ba29 0007  ld   $07
              ba2a 00a9  ld   $a9
              ba2b 0049  ld   $49
              ba2c 0085  ld   $85
              ba2d 00cf  ld   $cf
              ba2e 0020  ld   $20
              ba2f 00ff  ld   $ff
              ba30 00e6  ld   $e6
              ba31 00a5  ld   $a5
              ba32 004b  ld   $4b
              ba33 0085  ld   $85
              ba34 00d1  ld   $d1
              ba35 00a5  ld   $a5
              ba36 004a  ld   $4a
              ba37 0085  ld   $85
              ba38 00d0  ld   $d0
              ba39 00c5  ld   $c5
              ba3a 00cc  ld   $cc
              ba3b 00a5  ld   $a5
              ba3c 00d1  ld   $d1
              ba3d 00e5  ld   $e5
              ba3e 00cd  ld   $cd
              ba3f 00b0  ld   $b0
              ba40 0094  ld   $94
              ba41 00b1  ld   $b1
              ba42 00d0  ld   $d0
              ba43 00c8  ld   $c8
              ba44 00c5  ld   $c5
              ba45 00ce  ld   $ce
              ba46 00d0  ld   $d0
              ba47 0006  ld   $06
              ba48 00b1  ld   $b1
              ba49 00d0  ld   $d0
              ba4a 00c5  ld   $c5
              ba4b 00cf  ld   $cf
              ba4c 00f0  ld   $f0
              ba4d 000e  ld   $0e
              ba4e 00c8  ld   $c8
              ba4f 00b1  ld   $b1
              ba50 00d0  ld   $d0
              ba51 0048  ld   $48
              ba52 00c8  ld   $c8
              ba53 00b1  ld   $b1
              ba54 00d0  ld   $d0
              ba55 0085  ld   $85
              ba56 00d1  ld   $d1
              ba57 0068  ld   $68
              ba58 00a0  ld   $a0
              ba59 0000  ld   $00
              ba5a 00f0  ld   $f0
              ba5b 00db  ld   $db
              ba5c 00a5  ld   $a5
              ba5d 00d0  ld   $d0
              ba5e 0069  ld   $69
              ba5f 0003  ld   $03
              ba60 0020  ld   $20
              ba61 000a  ld   $0a
              ba62 00e7  ld   $e7
              ba63 00a5  ld   $a5
              ba64 00d1  ld   $d1
              ba65 0069  ld   $69
              ba66 0000  ld   $00
              ba67 0095  ld   $95
              ba68 0088  ld   $88
              ba69 00a5  ld   $a5
              ba6a 00cf  ld   $cf
              ba6b 00c9  ld   $c9
              ba6c 0040  ld   $40
              ba6d 00d0  ld   $d0
              ba6e 001c  ld   $1c
              ba6f 0088  ld   $88
              ba70 0098  ld   $98
              ba71 0020  ld   $20
              ba72 000a  ld   $0a
              ba73 00e7  ld   $e7
              ba74 0088  ld   $88
              ba75 0094  ld   $94
              ba76 0088  ld   $88
              ba77 00a0  ld   $a0
              ba78 0003  ld   $03
              ba79 00f6  ld   $f6
              ba7a 0088  ld   $88
              ba7b 00c8  ld   $c8
              ba7c 00b1  ld   $b1
              ba7d 00d0  ld   $d0
              ba7e 0030  ld   $30
              ba7f 00f9  ld   $f9
              ba80 0010  ld   $10
              ba81 0009  ld   $09
              ba82 00a9  ld   $a9
              ba83 0000  ld   $00
              ba84 0085  ld   $85
              ba85 00d4  ld   $d4
              ba86 0085  ld   $85
              ba87 00d5  ld   $d5
              ba88 00a2  ld   $a2
              ba89 0018  ld   $18
              ba8a 0048  ld   $48
              ba8b 00a0  ld   $a0
              ba8c 0000  ld   $00
              ba8d 00b1  ld   $b1
              ba8e 00de  ld   $de
              ba8f 0010  ld   $10
              ba90 0018  ld   $18
              ba91 000a  ld   $0a
              ba92 0030  ld   $30
              ba93 0081  ld   $81
              ba94 0020  ld   $20
              ba95 00ff  ld   $ff
              ba96 00e6  ld   $e6
              ba97 0020  ld   $20
              ba98 0008  ld   $08
              ba99 00e7  ld   $e7
              ba9a 0020  ld   $20
              ba9b 00ff  ld   $ff
              ba9c 00e6  ld   $e6
              ba9d 0095  ld   $95
              ba9e 00a8  ld   $a8
              ba9f 0024  ld   $24
              baa0 00d4  ld   $d4
              baa1 0010  ld   $10
              baa2 0001  ld   $01
              baa3 00ca  ld   $ca
              baa4 0020  ld   $20
              baa5 00ff  ld   $ff
              baa6 00e6  ld   $e6
              baa7 00b0  ld   $b0
              baa8 00e6  ld   $e6
              baa9 00c9  ld   $c9
              baaa 0028  ld   $28
              baab 00d0  ld   $d0
              baac 001f  ld   $1f
              baad 00a5  ld   $a5
              baae 00de  ld   $de
              baaf 0020  ld   $20
              bab0 000a  ld   $0a
              bab1 00e7  ld   $e7
              bab2 00a5  ld   $a5
              bab3 00df  ld   $df
              bab4 0095  ld   $95
              bab5 0088  ld   $88
              bab6 0024  ld   $24
              bab7 00d4  ld   $d4
              bab8 0030  ld   $30
              bab9 000b  ld   $0b
              baba 00a9  ld   $a9
              babb 0001  ld   $01
              babc 0020  ld   $20
              babd 000a  ld   $0a
              babe 00e7  ld   $e7
              babf 00a9  ld   $a9
              bac0 0000  ld   $00
              bac1 0095  ld   $95
              bac2 0088  ld   $88
              bac3 00f6  ld   $f6
              bac4 0088  ld   $88
              bac5 0020  ld   $20
              bac6 00ff  ld   $ff
              bac7 00e6  ld   $e6
              bac8 0030  ld   $30
              bac9 00f9  ld   $f9
              baca 00b0  ld   $b0
              bacb 00d3  ld   $d3
              bacc 0024  ld   $24
              bacd 00d4  ld   $d4
              bace 0010  ld   $10
              bacf 0006  ld   $06
              bad0 00c9  ld   $c9
              bad1 0004  ld   $04
              bad2 00b0  ld   $b0
              bad3 00d0  ld   $d0
              bad4 0046  ld   $46
              bad5 00d4  ld   $d4
              bad6 00a8  ld   $a8
              bad7 0085  ld   $85
              bad8 00d6  ld   $d6
              bad9 00b9  ld   $b9
              bada 0098  ld   $98
              badb 00e9  ld   $e9
              badc 0029  ld   $29
              badd 0055  ld   $55
              bade 000a  ld   $0a
              badf 0085  ld   $85
              bae0 00d7  ld   $d7
              bae1 0068  ld   $68
              bae2 00a8  ld   $a8
              bae3 00b9  ld   $b9
              bae4 0098  ld   $98
              bae5 00e9  ld   $e9
              bae6 0029  ld   $29
              bae7 00aa  ld   $aa
              bae8 00c5  ld   $c5
              bae9 00d7  ld   $d7
              baea 00b0  ld   $b0
              baeb 0009  ld   $09
              baec 0098  ld   $98
              baed 0048  ld   $48
              baee 0020  ld   $20
              baef 00ff  ld   $ff
              baf0 00e6  ld   $e6
              baf1 00a5  ld   $a5
              baf2 00d6  ld   $d6
              baf3 0090  ld   $90
              baf4 0095  ld   $95
              baf5 00b9  ld   $b9
              baf6 0010  ld   $10
              baf7 00ea  ld   $ea
              baf8 0085  ld   $85
              baf9 00ce  ld   $ce
              bafa 00b9  ld   $b9
              bafb fe00  bra  ac          ;+-----------------------------------+
              bafc fcfd  bra  $bafd       ;|                                   |
              bafd 1418  ld   $18,y       ;| Trampoline for page $ba00 lookups |
              bafe e006  jmp  y,$06       ;|                                   |
              baff c218  st   [$18]       ;+-----------------------------------+
              bb00 0088  ld   $88
              bb01 00ea  ld   $ea
              bb02 0085  ld   $85
              bb03 00cf  ld   $cf
              bb04 0020  ld   $20
              bb05 00fc  ld   $fc
              bb06 00e6  ld   $e6
              bb07 004c  ld   $4c
              bb08 00d8  ld   $d8
              bb09 00e6  ld   $e6
              bb0a 006c  ld   $6c
              bb0b 00ce  ld   $ce
              bb0c 0000  ld   $00
              bb0d 00e6  ld   $e6
              bb0e 00e7  ld   $e7
              bb0f 0000  ld   $00
              bb10 0000  ld   $00
              bb11 00de  ld   $de
              bb12 00d0  ld   $d0
              bb13 0002  ld   $02
              bb14 00e6  ld   $e6
              bb15 00df  ld   $df
              bb16 00b1  ld   $b1
              bb17 00de  ld   $de
              bb18 0060  ld   $60
              bb19 0094  ld   $94
              bb1a 0087  ld   $87
              bb1b 00ca  ld   $ca
              bb1c 0030  ld   $30
              bb1d 0003  ld   $03
              bb1e 0095  ld   $95
              bb1f 0050  ld   $50
              bb20 0060  ld   $60
              bb21 00a0  ld   $a0
              bb22 0066  ld   $66
              bb23 004c  ld   $4c
              bb24 00e0  ld   $e0
              bb25 00e3  ld   $e3
              bb26 00a0  ld   $a0
              bb27 0000  ld   $00
              bb28 00b5  ld   $b5
              bb29 0050  ld   $50
              bb2a 0085  ld   $85
              bb2b 00ce  ld   $ce
              bb2c 00b5  ld   $b5
              bb2d 00a8  ld   $a8
              bb2e 0085  ld   $85
              bb2f 00cf  ld   $cf
              bb30 00b5  ld   $b5
              bb31 0088  ld   $88
              bb32 00f0  ld   $f0
              bb33 000e  ld   $0e
              bb34 0085  ld   $85
              bb35 00cf  ld   $cf
              bb36 00b1  ld   $b1
              bb37 00ce  ld   $ce
              bb38 0048  ld   $48
              bb39 00c8  ld   $c8
              bb3a 00b1  ld   $b1
              bb3b 00ce  ld   $ce
              bb3c 0085  ld   $85
              bb3d 00cf  ld   $cf
              bb3e 0068  ld   $68
              bb3f 0085  ld   $85
              bb40 00ce  ld   $ce
              bb41 0088  ld   $88
              bb42 00e8  ld   $e8
              bb43 0060  ld   $60
              bb44 0020  ld   $20
              bb45 004a  ld   $4a
              bb46 00e7  ld   $e7
              bb47 0020  ld   $20
              bb48 0015  ld   $15
              bb49 00e7  ld   $e7
              bb4a 0098  ld   $98
              bb4b 0020  ld   $20
              bb4c 0008  ld   $08
              bb4d 00e7  ld   $e7
              bb4e 0095  ld   $95
              bb4f 00a8  ld   $a8
              bb50 00c5  ld   $c5
              bb51 00ce  ld   $ce
              bb52 00d0  ld   $d0
              bb53 0006  ld   $06
              bb54 00c5  ld   $c5
              bb55 00cf  ld   $cf
              bb56 00d0  ld   $d0
              bb57 0002  ld   $02
              bb58 00f6  ld   $f6
              bb59 0050  ld   $50
              bb5a 0060  ld   $60
              bb5b 0020  ld   $20
              bb5c 0082  ld   $82
              bb5d 00e7  ld   $e7
              bb5e 0020  ld   $20
              bb5f 0059  ld   $59
              bb60 00e7  ld   $e7
              bb61 0020  ld   $20
              bb62 0015  ld   $15
              bb63 00e7  ld   $e7
              bb64 0024  ld   $24
              bb65 00cf  ld   $cf
              bb66 0030  ld   $30
              bb67 001b  ld   $1b
              bb68 00ca  ld   $ca
              bb69 0060  ld   $60
              bb6a 0020  ld   $20
              bb6b 0015  ld   $15
              bb6c 00e7  ld   $e7
              bb6d 00a5  ld   $a5
              bb6e 00cf  ld   $cf
              bb6f 00d0  ld   $d0
              bb70 0004  ld   $04
              bb71 00a5  ld   $a5
              bb72 00ce  ld   $ce
              bb73 00f0  ld   $f0
              bb74 00f3  ld   $f3
              bb75 00a9  ld   $a9
              bb76 00ff  ld   $ff
              bb77 0020  ld   $20
              bb78 0008  ld   $08
              bb79 00e7  ld   $e7
              bb7a 0095  ld   $95
              bb7b 00a8  ld   $a8
              bb7c 0024  ld   $24
              bb7d 00cf  ld   $cf
              bb7e 0030  ld   $30
              bb7f 00e9  ld   $e9
              bb80 0020  ld   $20
              bb81 0015  ld   $15
              bb82 00e7  ld   $e7
              bb83 0098  ld   $98
              bb84 0038  ld   $38
              bb85 00e5  ld   $e5
              bb86 00ce  ld   $ce
              bb87 0020  ld   $20
              bb88 0008  ld   $08
              bb89 00e7  ld   $e7
              bb8a 0098  ld   $98
              bb8b 00e5  ld   $e5
              bb8c 00cf  ld   $cf
              bb8d 0050  ld   $50
              bb8e 0023  ld   $23
              bb8f 00a0  ld   $a0
              bb90 0000  ld   $00
              bb91 0010  ld   $10
              bb92 0090  ld   $90
              bb93 0020  ld   $20
              bb94 006f  ld   $6f
              bb95 00e7  ld   $e7
              bb96 0020  ld   $20
              bb97 0015  ld   $15
              bb98 00e7  ld   $e7
              bb99 00a5  ld   $a5
              bb9a 00ce  ld   $ce
              bb9b 0085  ld   $85
              bb9c 00da  ld   $da
              bb9d 00a5  ld   $a5
              bb9e 00cf  ld   $cf
              bb9f 0085  ld   $85
              bba0 00db  ld   $db
              bba1 0020  ld   $20
              bba2 0015  ld   $15
              bba3 00e7  ld   $e7
              bba4 0018  ld   $18
              bba5 00a5  ld   $a5
              bba6 00ce  ld   $ce
              bba7 0065  ld   $65
              bba8 00da  ld   $da
              bba9 0020  ld   $20
              bbaa 0008  ld   $08
              bbab 00e7  ld   $e7
              bbac 00a5  ld   $a5
              bbad 00cf  ld   $cf
              bbae 0065  ld   $65
              bbaf 00db  ld   $db
              bbb0 0070  ld   $70
              bbb1 00dd  ld   $dd
              bbb2 0095  ld   $95
              bbb3 00a8  ld   $a8
              bbb4 0060  ld   $60
              bbb5 0020  ld   $20
              bbb6 0015  ld   $15
              bbb7 00e7  ld   $e7
              bbb8 00a4  ld   $a4
              bbb9 00ce  ld   $ce
              bbba 00f0  ld   $f0
              bbbb 0005  ld   $05
              bbbc 0088  ld   $88
              bbbd 00a5  ld   $a5
              bbbe 00cf  ld   $cf
              bbbf 00f0  ld   $f0
              bbc0 000c  ld   $0c
              bbc1 0060  ld   $60
              bbc2 00a5  ld   $a5
              bbc3 0081  ld   $81
              bbc4 0009  ld   $09
              bbc5 0007  ld   $07
              bbc6 00a8  ld   $a8
              bbc7 00c8  ld   $c8
              bbc8 00a9  ld   $a9
              bbc9 00a0  ld   $a0
              bbca 0020  ld   $20
              bbcb 00c9  ld   $c9
              bbcc 00e3  ld   $e3
              bbcd 00c4  ld   $c4
              bbce 0081  ld   $81
              bbcf 00b0  ld   $b0
              bbd0 00f7  ld   $f7
              bbd1 0060  ld   $60
              bbd2 0020  ld   $20
              bbd3 00b1  ld   $b1
              bbd4 00e7  ld   $e7
              bbd5 0020  ld   $20
              bbd6 0015  ld   $15
              bbd7 00e7  ld   $e7
              bbd8 00a5  ld   $a5
              bbd9 00cf  ld   $cf
              bbda 0010  ld   $10
              bbdb 000a  ld   $0a
              bbdc 00a9  ld   $a9
              bbdd 00ad  ld   $ad
              bbde 0020  ld   $20
              bbdf 00c9  ld   $c9
              bbe0 00e3  ld   $e3
              bbe1 0020  ld   $20
              bbe2 0072  ld   $72
              bbe3 00e7  ld   $e7
              bbe4 0050  ld   $50
              bbe5 00ef  ld   $ef
              bbe6 0088  ld   $88
              bbe7 0084  ld   $84
              bbe8 00d5  ld   $d5
              bbe9 0086  ld   $86
              bbea 00cf  ld   $cf
              bbeb 00a6  ld   $a6
              bbec 00ce  ld   $ce
              bbed 0020  ld   $20
              bbee 001b  ld   $1b
              bbef 00e5  ld   $e5
              bbf0 00a6  ld   $a6
              bbf1 00cf  ld   $cf
              bbf2 0060  ld   $60
              bbf3 0020  ld   $20
              bbf4 0015  ld   $15
              bbf5 00e7  ld   $e7
              bbf6 00a5  ld   $a5
              bbf7 00ce  ld   $ce
              bbf8 0085  ld   $85
              bbf9 0076  ld   $76
              bbfa 00a5  ld   $a5
              bbfb fe00  bra  ac          ;+-----------------------------------+
              bbfc fcfd  bra  $bbfd       ;|                                   |
              bbfd 1418  ld   $18,y       ;| Trampoline for page $bb00 lookups |
              bbfe e006  jmp  y,$06       ;|                                   |
              bbff c218  st   [$18]       ;+-----------------------------------+
              bc00 00cf  ld   $cf
              bc01 0085  ld   $85
              bc02 0077  ld   $77
              bc03 0088  ld   $88
              bc04 0084  ld   $84
              bc05 0078  ld   $78
              bc06 00c8  ld   $c8
              bc07 00a9  ld   $a9
              bc08 000a  ld   $0a
              bc09 0085  ld   $85
              bc0a 0074  ld   $74
              bc0b 0084  ld   $84
              bc0c 0075  ld   $75
              bc0d 0060  ld   $60
              bc0e 0020  ld   $20
              bc0f 0015  ld   $15
              bc10 00e7  ld   $e7
              bc11 00a5  ld   $a5
              bc12 00ce  ld   $ce
              bc13 00a4  ld   $a4
              bc14 00cf  ld   $cf
              bc15 0010  ld   $10
              bc16 00e8  ld   $e8
              bc17 0000  ld   $00
              bc18 0000  ld   $00
              bc19 00f2  ld   $f2
              bc1a 0020  ld   $20
              bc1b 0015  ld   $15
              bc1c 00e7  ld   $e7
              bc1d 00b5  ld   $b5
              bc1e 0050  ld   $50
              bc1f 0085  ld   $85
              bc20 00da  ld   $da
              bc21 00b5  ld   $b5
              bc22 0088  ld   $88
              bc23 0085  ld   $85
              bc24 00db  ld   $db
              bc25 00a5  ld   $a5
              bc26 00ce  ld   $ce
              bc27 0091  ld   $91
              bc28 00da  ld   $da
              bc29 00c8  ld   $c8
              bc2a 00a5  ld   $a5
              bc2b 00cf  ld   $cf
              bc2c 0091  ld   $91
              bc2d 00da  ld   $da
              bc2e 00e8  ld   $e8
              bc2f 0060  ld   $60
              bc30 0068  ld   $68
              bc31 0068  ld   $68
              bc32 0024  ld   $24
              bc33 00d5  ld   $d5
              bc34 0010  ld   $10
              bc35 0005  ld   $05
              bc36 0020  ld   $20
              bc37 00cd  ld   $cd
              bc38 00e3  ld   $e3
              bc39 0046  ld   $46
              bc3a 00d5  ld   $d5
              bc3b 0060  ld   $60
              bc3c 00a0  ld   $a0
              bc3d 00ff  ld   $ff
              bc3e 0084  ld   $84
              bc3f 00d7  ld   $d7
              bc40 0060  ld   $60
              bc41 0020  ld   $20
              bc42 00cd  ld   $cd
              bc43 00ef  ld   $ef
              bc44 00f0  ld   $f0
              bc45 0007  ld   $07
              bc46 00a9  ld   $a9
              bc47 0025  ld   $25
              bc48 0085  ld   $85
              bc49 00d6  ld   $d6
              bc4a 0088  ld   $88
              bc4b 0084  ld   $84
              bc4c 00d4  ld   $d4
              bc4d 00e8  ld   $e8
              bc4e 0060  ld   $60
              bc4f 00a5  ld   $a5
              bc50 00ca  ld   $ca
              bc51 00a4  ld   $a4
              bc52 00cb  ld   $cb
              bc53 00d0  ld   $d0
              bc54 005a  ld   $5a
              bc55 00a0  ld   $a0
              bc56 0041  ld   $41
              bc57 00a5  ld   $a5
              bc58 0084  ld   $84
              bc59 00c9  ld   $c9
              bc5a 0008  ld   $08
              bc5b 00b0  ld   $b0
              bc5c 005e  ld   $5e
              bc5d 00a8  ld   $a8
              bc5e 00e6  ld   $e6
              bc5f 0084  ld   $84
              bc60 00a5  ld   $a5
              bc61 00de  ld   $de
              bc62 0099  ld   $99
              bc63 0000  ld   $00
              bc64 0011  ld   $11
              bc65 00a5  ld   $a5
              bc66 00df  ld   $df
              bc67 0099  ld   $99
              bc68 0008  ld   $08
              bc69 0011  ld   $11
              bc6a 00a5  ld   $a5
              bc6b 00dc  ld   $dc
              bc6c 0099  ld   $99
              bc6d 0010  ld   $10
              bc6e 0011  ld   $11
              bc6f 00a5  ld   $a5
              bc70 00dd  ld   $dd
              bc71 0099  ld   $99
              bc72 0018  ld   $18
              bc73 0011  ld   $11
              bc74 0020  ld   $20
              bc75 0015  ld   $15
              bc76 00e7  ld   $e7
              bc77 0020  ld   $20
              bc78 006d  ld   $6d
              bc79 00e5  ld   $e5
              bc7a 0090  ld   $90
              bc7b 0004  ld   $04
              bc7c 00a0  ld   $a0
              bc7d 0037  ld   $37
              bc7e 00d0  ld   $d0
              bc7f 003b  ld   $3b
              bc80 00a5  ld   $a5
              bc81 0044  ld   $44
              bc82 00a4  ld   $a4
              bc83 0045  ld   $45
              bc84 0085  ld   $85
              bc85 00dc  ld   $dc
              bc86 0084  ld   $84
              bc87 00dd  ld   $dd
              bc88 002c  ld   $2c
              bc89 0011  ld   $11
              bc8a 00d0  ld   $d0
              bc8b 0030  ld   $30
              bc8c 004f  ld   $4f
              bc8d 0018  ld   $18
              bc8e 0069  ld   $69
              bc8f 0003  ld   $03
              bc90 0090  ld   $90
              bc91 0001  ld   $01
              bc92 00c8  ld   $c8
              bc93 00a2  ld   $a2
              bc94 00ff  ld   $ff
              bc95 0086  ld   $86
              bc96 00d9  ld   $d9
              bc97 009a  ld   $9a
              bc98 0085  ld   $85
              bc99 00de  ld   $de
              bc9a 0084  ld   $84
              bc9b 00df  ld   $df
              bc9c 0020  ld   $20
              bc9d 0079  ld   $79
              bc9e 00e6  ld   $e6
              bc9f 0024  ld   $24
              bca0 00d9  ld   $d9
              bca1 0010  ld   $10
              bca2 0049  ld   $49
              bca3 0018  ld   $18
              bca4 00a0  ld   $a0
              bca5 0000  ld   $00
              bca6 00a5  ld   $a5
              bca7 00dc  ld   $dc
              bca8 0071  ld   $71
              bca9 00dc  ld   $dc
              bcaa 00a4  ld   $a4
              bcab 00dd  ld   $dd
              bcac 0090  ld   $90
              bcad 0001  ld   $01
              bcae 00c8  ld   $c8
              bcaf 00c5  ld   $c5
              bcb0 004c  ld   $4c
              bcb1 00d0  ld   $d0
              bcb2 00d1  ld   $d1
              bcb3 00c4  ld   $c4
              bcb4 004d  ld   $4d
              bcb5 00d0  ld   $d0
              bcb6 00cd  ld   $cd
              bcb7 00a0  ld   $a0
              bcb8 0034  ld   $34
              bcb9 0046  ld   $46
              bcba 00d9  ld   $d9
              bcbb 004c  ld   $4c
              bcbc 00e0  ld   $e0
              bcbd 00e3  ld   $e3
              bcbe 00a0  ld   $a0
              bcbf 004a  ld   $4a
              bcc0 00a5  ld   $a5
              bcc1 0084  ld   $84
              bcc2 00f0  ld   $f0
              bcc3 00f7  ld   $f7
              bcc4 00c6  ld   $c6
              bcc5 0084  ld   $84
              bcc6 00a8  ld   $a8
              bcc7 00b9  ld   $b9
              bcc8 000f  ld   $0f
              bcc9 0011  ld   $11
              bcca 0085  ld   $85
              bccb 00dc  ld   $dc
              bccc 00b9  ld   $b9
              bccd 0017  ld   $17
              bcce 0011  ld   $11
              bccf 0085  ld   $85
              bcd0 00dd  ld   $dd
              bcd1 00be  ld   $be
              bcd2 0087  ld   $87
              bcd3 0000  ld   $00
              bcd4 00b9  ld   $b9
              bcd5 0007  ld   $07
              bcd6 0011  ld   $11
              bcd7 00a8  ld   $a8
              bcd8 008a  ld   $8a
              bcd9 004c  ld   $4c
              bcda 007a  ld   $7a
              bcdb 00e8  ld   $e8
              bcdc 00a0  ld   $a0
              bcdd 0063  ld   $63
              bcde 0020  ld   $20
              bcdf 00c4  ld   $c4
              bce0 00e3  ld   $e3
              bce1 00a0  ld   $a0
              bce2 0001  ld   $01
              bce3 00b1  ld   $b1
              bce4 00dc  ld   $dc
              bce5 00aa  ld   $aa
              bce6 00c8  ld   $c8
              bce7 00b1  ld   $b1
              bce8 00dc  ld   $dc
              bce9 0020  ld   $20
              bcea 001b  ld   $1b
              bceb 00e5  ld   $e5
              bcec 004c  ld   $4c
              bced 00b3  ld   $b3
              bcee 00e2  ld   $e2
              bcef 00c6  ld   $c6
              bcf0 0083  ld   $83
              bcf1 00a0  ld   $a0
              bcf2 005b  ld   $5b
              bcf3 00a5  ld   $a5
              bcf4 0083  ld   $83
              bcf5 00f0  ld   $f0
              bcf6 00c4  ld   $c4
              bcf7 00a8  ld   $a8
              bcf8 00b5  ld   $b5
              bcf9 0050  ld   $50
              bcfa 00d9  ld   $d9
              bcfb fe00  bra  ac          ;+-----------------------------------+
              bcfc fcfd  bra  $bcfd       ;|                                   |
              bcfd 1418  ld   $18,y       ;| Trampoline for page $bc00 lookups |
              bcfe e006  jmp  y,$06       ;|                                   |
              bcff c218  st   [$18]       ;+-----------------------------------+
              bd00 00ff  ld   $ff
              bd01 0011  ld   $11
              bd02 00d0  ld   $d0
              bd03 00f0  ld   $f0
              bd04 00b5  ld   $b5
              bd05 0088  ld   $88
              bd06 00d9  ld   $d9
              bd07 0007  ld   $07
              bd08 0012  ld   $12
              bd09 00d0  ld   $d0
              bd0a 00e9  ld   $e9
              bd0b 00b9  ld   $b9
              bd0c 000f  ld   $0f
              bd0d 0012  ld   $12
              bd0e 0085  ld   $85
              bd0f 00da  ld   $da
              bd10 00b9  ld   $b9
              bd11 0017  ld   $17
              bd12 0012  ld   $12
              bd13 0085  ld   $85
              bd14 00db  ld   $db
              bd15 0020  ld   $20
              bd16 0015  ld   $15
              bd17 00e7  ld   $e7
              bd18 00ca  ld   $ca
              bd19 0020  ld   $20
              bd1a 0093  ld   $93
              bd1b 00e7  ld   $e7
              bd1c 0020  ld   $20
              bd1d 0001  ld   $01
              bd1e 00e9  ld   $e9
              bd1f 0000  ld   $00
              bd20 0000  ld   $00
              bd21 00e8  ld   $e8
              bd22 00ca  ld   $ca
              bd23 00a4  ld   $a4
              bd24 0083  ld   $83
              bd25 00b9  ld   $b9
              bd26 0047  ld   $47
              bd27 0012  ld   $12
              bd28 0095  ld   $95
              bd29 00a7  ld   $a7
              bd2a 00b9  ld   $b9
              bd2b 003f  ld   $3f
              bd2c 0012  ld   $12
              bd2d 00a0  ld   $a0
              bd2e 0000  ld   $00
              bd2f 0020  ld   $20
              bd30 0008  ld   $08
              bd31 00e7  ld   $e7
              bd32 0020  ld   $20
              bd33 0082  ld   $82
              bd34 00e7  ld   $e7
              bd35 0020  ld   $20
              bd36 0059  ld   $59
              bd37 00e7  ld   $e7
              bd38 0020  ld   $20
              bd39 0015  ld   $15
              bd3a 00e7  ld   $e7
              bd3b 00a4  ld   $a4
              bd3c 0083  ld   $83
              bd3d 00a5  ld   $a5
              bd3e 00ce  ld   $ce
              bd3f 00f0  ld   $f0
              bd40 0005  ld   $05
              bd41 0059  ld   $59
              bd42 0017  ld   $17
              bd43 0012  ld   $12
              bd44 0010  ld   $10
              bd45 0012  ld   $12
              bd46 00b9  ld   $b9
              bd47 001f  ld   $1f
              bd48 0012  ld   $12
              bd49 0085  ld   $85
              bd4a 00dc  ld   $dc
              bd4b 00b9  ld   $b9
              bd4c 0027  ld   $27
              bd4d 0012  ld   $12
              bd4e 0085  ld   $85
              bd4f 00dd  ld   $dd
              bd50 00be  ld   $be
              bd51 002f  ld   $2f
              bd52 0012  ld   $12
              bd53 00b9  ld   $b9
              bd54 0037  ld   $37
              bd55 0012  ld   $12
              bd56 00d0  ld   $d0
              bd57 0087  ld   $87
              bd58 00c6  ld   $c6
              bd59 0083  ld   $83
              bd5a 0060  ld   $60
              bd5b 00a0  ld   $a0
              bd5c 0054  ld   $54
              bd5d 00a5  ld   $a5
              bd5e 0083  ld   $83
              bd5f 00c9  ld   $c9
              bd60 0008  ld   $08
              bd61 00f0  ld   $f0
              bd62 009a  ld   $9a
              bd63 00e6  ld   $e6
              bd64 0083  ld   $83
              bd65 00a8  ld   $a8
              bd66 00b5  ld   $b5
              bd67 0050  ld   $50
              bd68 0099  ld   $99
              bd69 0000  ld   $00
              bd6a 0012  ld   $12
              bd6b 00b5  ld   $b5
              bd6c 0088  ld   $88
              bd6d 0099  ld   $99
              bd6e 0008  ld   $08
              bd6f 0012  ld   $12
              bd70 0060  ld   $60
              bd71 0020  ld   $20
              bd72 0015  ld   $15
              bd73 00e7  ld   $e7
              bd74 00a4  ld   $a4
              bd75 0083  ld   $83
              bd76 00a5  ld   $a5
              bd77 00ce  ld   $ce
              bd78 0099  ld   $99
              bd79 003f  ld   $3f
              bd7a 0012  ld   $12
              bd7b 00a5  ld   $a5
              bd7c 00cf  ld   $cf
              bd7d 0099  ld   $99
              bd7e 0047  ld   $47
              bd7f 0012  ld   $12
              bd80 00a9  ld   $a9
              bd81 0001  ld   $01
              bd82 0099  ld   $99
              bd83 000f  ld   $0f
              bd84 0012  ld   $12
              bd85 00a9  ld   $a9
              bd86 0000  ld   $00
              bd87 0099  ld   $99
              bd88 0017  ld   $17
              bd89 0012  ld   $12
              bd8a 00a5  ld   $a5
              bd8b 00dc  ld   $dc
              bd8c 0099  ld   $99
              bd8d 001f  ld   $1f
              bd8e 0012  ld   $12
              bd8f 00a5  ld   $a5
              bd90 00dd  ld   $dd
              bd91 0099  ld   $99
              bd92 0027  ld   $27
              bd93 0012  ld   $12
              bd94 00a5  ld   $a5
              bd95 00de  ld   $de
              bd96 0099  ld   $99
              bd97 002f  ld   $2f
              bd98 0012  ld   $12
              bd99 00a5  ld   $a5
              bd9a 00df  ld   $df
              bd9b 0099  ld   $99
              bd9c 0037  ld   $37
              bd9d 0012  ld   $12
              bd9e 0060  ld   $60
              bd9f 0020  ld   $20
              bda0 0015  ld   $15
              bda1 00e7  ld   $e7
              bda2 00a4  ld   $a4
              bda3 0083  ld   $83
              bda4 00a5  ld   $a5
              bda5 00ce  ld   $ce
              bda6 0099  ld   $99
              bda7 000f  ld   $0f
              bda8 0012  ld   $12
              bda9 00a5  ld   $a5
              bdaa 00cf  ld   $cf
              bdab 004c  ld   $4c
              bdac 0066  ld   $66
              bdad 00e9  ld   $e9
              bdae 0000  ld   $00
              bdaf 0000  ld   $00
              bdb0 0000  ld   $00
              * 14 times
              bdbc 00ab  ld   $ab
              bdbd 0003  ld   $03
              bdbe 0003  ld   $03
              bdbf 0003  ld   $03
              * 14 times
              bdcb 003f  ld   $3f
              bdcc 003f  ld   $3f
              bdcd 00c0  ld   $c0
              bdce 00c0  ld   $c0
              bdcf 003c  ld   $3c
              bdd0 003c  ld   $3c
              bdd1 003c  ld   $3c
              * 7 times
              bdd6 0030  ld   $30
              bdd7 000f  ld   $0f
              bdd8 00c0  ld   $c0
              bdd9 00cc  ld   $cc
              bdda 00ff  ld   $ff
              bddb 0055  ld   $55
              bddc 0000  ld   $00
              bddd 00ab  ld   $ab
              bdde 00ab  ld   $ab
              bddf 0003  ld   $03
              bde0 0003  ld   $03
              bde1 00ff  ld   $ff
              bde2 00ff  ld   $ff
              bde3 0055  ld   $55
              bde4 00ff  ld   $ff
              bde5 00ff  ld   $ff
              bde6 0055  ld   $55
              bde7 00cf  ld   $cf
              bde8 00cf  ld   $cf
              bde9 00cf  ld   $cf
              * 5 times
              bdec 00ff  ld   $ff
              bded 0055  ld   $55
              bdee 00c3  ld   $c3
              bdef 00c3  ld   $c3
              bdf0 00c3  ld   $c3
              bdf1 0055  ld   $55
              bdf2 00f0  ld   $f0
              bdf3 00f0  ld   $f0
              bdf4 00cf  ld   $cf
              bdf5 0056  ld   $56
              bdf6 0056  ld   $56
              bdf7 0056  ld   $56
              bdf8 0055  ld   $55
              bdf9 00ff  ld   $ff
              bdfa 00ff  ld   $ff
              bdfb fe00  bra  ac          ;+-----------------------------------+
              bdfc fcfd  bra  $bdfd       ;|                                   |
              bdfd 1418  ld   $18,y       ;| Trampoline for page $bd00 lookups |
              bdfe e006  jmp  y,$06       ;|                                   |
              bdff c218  st   [$18]       ;+-----------------------------------+
              be00 0055  ld   $55
              be01 0003  ld   $03
              be02 0003  ld   $03
              be03 0003  ld   $03
              * 7 times
              be08 00ff  ld   $ff
              be09 00ff  ld   $ff
              be0a 00ff  ld   $ff
              be0b 0003  ld   $03
              be0c 0003  ld   $03
              be0d 0003  ld   $03
              * 16 times
              be1b 0000  ld   $00
              be1c 00ab  ld   $ab
              be1d 0003  ld   $03
              be1e 0057  ld   $57
              be1f 0003  ld   $03
              be20 0003  ld   $03
              be21 0003  ld   $03
              be22 0003  ld   $03
              be23 0007  ld   $07
              be24 0003  ld   $03
              be25 0003  ld   $03
              be26 00ea  ld   $ea
              be27 0000  ld   $00
              be28 0000  ld   $00
              be29 0003  ld   $03
              be2a 0003  ld   $03
              be2b 0003  ld   $03
              * 10 times
              be33 00aa  ld   $aa
              be34 00ff  ld   $ff
              be35 00ff  ld   $ff
              be36 00ff  ld   $ff
              * 5 times
              be39 0017  ld   $17
              be3a 00ff  ld   $ff
              be3b 00ff  ld   $ff
              be3c 0019  ld   $19
              be3d 005d  ld   $5d
              be3e 0035  ld   $35
              be3f 004b  ld   $4b
              be40 00f2  ld   $f2
              be41 00ec  ld   $ec
              be42 0087  ld   $87
              be43 006f  ld   $6f
              be44 00ad  ld   $ad
              be45 00b7  ld   $b7
              be46 00e2  ld   $e2
              be47 00f8  ld   $f8
              be48 0054  ld   $54
              be49 0080  ld   $80
              be4a 0096  ld   $96
              be4b 0085  ld   $85
              be4c 0082  ld   $82
              be4d 0022  ld   $22
              be4e 0010  ld   $10
              be4f 0033  ld   $33
              be50 004a  ld   $4a
              be51 0013  ld   $13
              be52 0006  ld   $06
              be53 000b  ld   $0b
              be54 004a  ld   $4a
              be55 0001  ld   $01
              be56 0040  ld   $40
              be57 0047  ld   $47
              be58 007a  ld   $7a
              be59 0000  ld   $00
              be5a 00ff  ld   $ff
              be5b 0023  ld   $23
              be5c 0009  ld   $09
              be5d 005b  ld   $5b
              be5e 0016  ld   $16
              be5f 00b6  ld   $b6
              be60 00cb  ld   $cb
              be61 00ff  ld   $ff
              be62 00ff  ld   $ff
              be63 00fb  ld   $fb
              be64 00ff  ld   $ff
              be65 00ff  ld   $ff
              be66 0024  ld   $24
              be67 00f6  ld   $f6
              be68 004e  ld   $4e
              be69 0059  ld   $59
              be6a 0050  ld   $50
              be6b 0000  ld   $00
              be6c 00ff  ld   $ff
              be6d 0023  ld   $23
              be6e 00a3  ld   $a3
              be6f 006f  ld   $6f
              be70 0036  ld   $36
              be71 0023  ld   $23
              be72 00d7  ld   $d7
              be73 001c  ld   $1c
              be74 0022  ld   $22
              be75 00c2  ld   $c2
              be76 00ae  ld   $ae
              be77 00ba  ld   $ba
              be78 0023  ld   $23
              be79 00ff  ld   $ff
              be7a 00ff  ld   $ff
              be7b 0021  ld   $21
              be7c 0030  ld   $30
              be7d 001e  ld   $1e
              be7e 0003  ld   $03
              be7f 00c4  ld   $c4
              be80 0020  ld   $20
              be81 0000  ld   $00
              be82 00c1  ld   $c1
              be83 00ff  ld   $ff
              be84 00ff  ld   $ff
              be85 00ff  ld   $ff
              be86 00a0  ld   $a0
              be87 0030  ld   $30
              be88 001e  ld   $1e
              be89 00a4  ld   $a4
              be8a 00d3  ld   $d3
              be8b 00b6  ld   $b6
              be8c 00bc  ld   $bc
              be8d 00aa  ld   $aa
              be8e 003a  ld   $3a
              be8f 0001  ld   $01
              be90 0050  ld   $50
              be91 007e  ld   $7e
              be92 00d8  ld   $d8
              be93 00d8  ld   $d8
              be94 00a5  ld   $a5
              be95 003c  ld   $3c
              be96 00ff  ld   $ff
              be97 0016  ld   $16
              be98 005b  ld   $5b
              be99 0028  ld   $28
              be9a 0003  ld   $03
              be9b 00c4  ld   $c4
              be9c 001d  ld   $1d
              be9d 0000  ld   $00
              be9e 000c  ld   $0c
              be9f 004e  ld   $4e
              bea0 0000  ld   $00
              bea1 003e  ld   $3e
              bea2 0000  ld   $00
              bea3 00a6  ld   $a6
              bea4 00b0  ld   $b0
              bea5 0000  ld   $00
              bea6 00bc  ld   $bc
              bea7 00c6  ld   $c6
              bea8 0057  ld   $57
              bea9 008c  ld   $8c
              beaa 0001  ld   $01
              beab 0027  ld   $27
              beac 00ff  ld   $ff
              bead 00ff  ld   $ff
              beae 00ff  ld   $ff
              * 5 times
              beb1 00e8  ld   $e8
              beb2 00ff  ld   $ff
              beb3 00ff  ld   $ff
              beb4 00e8  ld   $e8
              beb5 00e0  ld   $e0
              beb6 00e0  ld   $e0
              beb7 00e0  ld   $e0
              beb8 00ef  ld   $ef
              beb9 00ef  ld   $ef
              beba 00e3  ld   $e3
              bebb 00e3  ld   $e3
              bebc 00e5  ld   $e5
              bebd 00e5  ld   $e5
              bebe 00e7  ld   $e7
              bebf 00e7  ld   $e7
              bec0 00ee  ld   $ee
              bec1 00ef  ld   $ef
              bec2 00ef  ld   $ef
              bec3 00e7  ld   $e7
              bec4 00e7  ld   $e7
              bec5 00e2  ld   $e2
              bec6 00ef  ld   $ef
              bec7 00e7  ld   $e7
              bec8 00e7  ld   $e7
              bec9 00ec  ld   $ec
              beca 00ec  ld   $ec
              becb 00ec  ld   $ec
              becc 00e7  ld   $e7
              becd 00ec  ld   $ec
              bece 00ec  ld   $ec
              becf 00ec  ld   $ec
              bed0 00e2  ld   $e2
              bed1 0000  ld   $00
              bed2 00ff  ld   $ff
              bed3 00e8  ld   $e8
              bed4 00e1  ld   $e1
              bed5 00e8  ld   $e8
              bed6 00e8  ld   $e8
              bed7 00ef  ld   $ef
              bed8 00eb  ld   $eb
              bed9 00ff  ld   $ff
              beda 00ff  ld   $ff
              bedb 00e0  ld   $e0
              bedc 00ff  ld   $ff
              bedd 00ff  ld   $ff
              bede 00ef  ld   $ef
              bedf 00ee  ld   $ee
              bee0 00ef  ld   $ef
              bee1 00e7  ld   $e7
              bee2 00e7  ld   $e7
              bee3 0000  ld   $00
              bee4 00ff  ld   $ff
              bee5 00e8  ld   $e8
              bee6 00e7  ld   $e7
              bee7 00e7  ld   $e7
              bee8 00e7  ld   $e7
              bee9 00e8  ld   $e8
              beea 00e1  ld   $e1
              beeb 00e2  ld   $e2
              beec 00ee  ld   $ee
              beed 00ee  ld   $ee
              beee 00ee  ld   $ee
              beef 00ee  ld   $ee
              bef0 00e8  ld   $e8
              bef1 00ff  ld   $ff
              bef2 00ff  ld   $ff
              bef3 00e1  ld   $e1
              bef4 00e1  ld   $e1
              bef5 00ef  ld   $ef
              bef6 00ee  ld   $ee
              bef7 00e7  ld   $e7
              bef8 00e8  ld   $e8
              bef9 00ee  ld   $ee
              befa 00e7  ld   $e7
              befb fe00  bra  ac          ;+-----------------------------------+
              befc fcfd  bra  $befd       ;|                                   |
              befd 1418  ld   $18,y       ;| Trampoline for page $be00 lookups |
              befe e006  jmp  y,$06       ;|                                   |
              beff c218  st   [$18]       ;+-----------------------------------+
              bf00 00ff  ld   $ff
              bf01 00ff  ld   $ff
              bf02 00ff  ld   $ff
              bf03 00ee  ld   $ee
              bf04 00e1  ld   $e1
              bf05 00ef  ld   $ef
              bf06 00e7  ld   $e7
              bf07 00e8  ld   $e8
              bf08 00ef  ld   $ef
              bf09 00ef  ld   $ef
              bf0a 00eb  ld   $eb
              bf0b 00e9  ld   $e9
              bf0c 00e8  ld   $e8
              bf0d 00e9  ld   $e9
              bf0e 00e9  ld   $e9
              bf0f 00e8  ld   $e8
              bf10 00e8  ld   $e8
              bf11 00e8  ld   $e8
              bf12 00e8  ld   $e8
              bf13 00ff  ld   $ff
              bf14 00e8  ld   $e8
              bf15 00e8  ld   $e8
              bf16 00e8  ld   $e8
              bf17 00ee  ld   $ee
              bf18 00e7  ld   $e7
              bf19 00e8  ld   $e8
              bf1a 00ef  ld   $ef
              bf1b 00ef  ld   $ef
              bf1c 00ee  ld   $ee
              bf1d 00ef  ld   $ef
              bf1e 00ee  ld   $ee
              bf1f 00ef  ld   $ef
              bf20 00ee  ld   $ee
              bf21 00ee  ld   $ee
              bf22 00ef  ld   $ef
              bf23 00ee  ld   $ee
              bf24 00ee  ld   $ee
              bf25 00ee  ld   $ee
              bf26 00e1  ld   $e1
              bf27 00e8  ld   $e8
              bf28 00e8  ld   $e8
              bf29 00ff  ld   $ff
              bf2a 00ff  ld   $ff
              bf2b 00ff  ld   $ff
              * 5 times
              bf2e 00eb  ld   $eb
              bf2f 0000  ld   $00
              bf30 0000  ld   $00
              bf31 00be  ld   $be
              bf32 00b3  ld   $b3
              bf33 00b2  ld   $b2
              bf34 00b7  ld   $b7
              bf35 00b6  ld   $b6
              bf36 0037  ld   $37
              bf37 00d4  ld   $d4
              bf38 00cf  ld   $cf
              bf39 00cf  ld   $cf
              bf3a 00a0  ld   $a0
              bf3b 00cc  ld   $cc
              bf3c 00cf  ld   $cf
              bf3d 00ce  ld   $ce
              bf3e 0047  ld   $47
              bf3f 00d3  ld   $d3
              bf40 00d9  ld   $d9
              bf41 00ce  ld   $ce
              bf42 00d4  ld   $d4
              bf43 00c1  ld   $c1
              bf44 0058  ld   $58
              bf45 00cd  ld   $cd
              bf46 00c5  ld   $c5
              bf47 00cd  ld   $cd
              bf48 00a0  ld   $a0
              bf49 00c6  ld   $c6
              bf4a 00d5  ld   $d5
              bf4b 00cc  ld   $cc
              bf4c 004c  ld   $4c
              bf4d 00d4  ld   $d4
              bf4e 00cf  ld   $cf
              bf4f 00cf  ld   $cf
              bf50 00a0  ld   $a0
              bf51 00cd  ld   $cd
              bf52 00c1  ld   $c1
              bf53 00ce  ld   $ce
              bf54 00d9  ld   $d9
              bf55 00a0  ld   $a0
              bf56 00d0  ld   $d0
              bf57 00c1  ld   $c1
              bf58 00d2  ld   $d2
              bf59 00c5  ld   $c5
              bf5a 00ce  ld   $ce
              bf5b 0053  ld   $53
              bf5c 00d3  ld   $d3
              bf5d 00d4  ld   $d4
              bf5e 00d2  ld   $d2
              bf5f 00c9  ld   $c9
              bf60 00ce  ld   $ce
              bf61 0047  ld   $47
              bf62 00ce  ld   $ce
              bf63 00cf  ld   $cf
              bf64 00a0  ld   $a0
              bf65 00c5  ld   $c5
              bf66 00ce  ld   $ce
              bf67 0044  ld   $44
              bf68 00c2  ld   $c2
              bf69 00c1  ld   $c1
              bf6a 00c4  ld   $c4
              bf6b 00a0  ld   $a0
              bf6c 00c2  ld   $c2
              bf6d 00d2  ld   $d2
              bf6e 00c1  ld   $c1
              bf6f 00ce  ld   $ce
              bf70 00c3  ld   $c3
              bf71 0048  ld   $48
              bf72 00be  ld   $be
              bf73 00b8  ld   $b8
              bf74 00a0  ld   $a0
              bf75 00c7  ld   $c7
              bf76 00cf  ld   $cf
              bf77 00d3  ld   $d3
              bf78 00d5  ld   $d5
              bf79 00c2  ld   $c2
              bf7a 0053  ld   $53
              bf7b 00c2  ld   $c2
              bf7c 00c1  ld   $c1
              bf7d 00c4  ld   $c4
              bf7e 00a0  ld   $a0
              bf7f 00d2  ld   $d2
              bf80 00c5  ld   $c5
              bf81 00d4  ld   $d4
              bf82 00d5  ld   $d5
              bf83 00d2  ld   $d2
              bf84 004e  ld   $4e
              bf85 00be  ld   $be
              bf86 00b8  ld   $b8
              bf87 00a0  ld   $a0
              bf88 00c6  ld   $c6
              bf89 00cf  ld   $cf
              bf8a 00d2  ld   $d2
              bf8b 0053  ld   $53
              bf8c 00c2  ld   $c2
              bf8d 00c1  ld   $c1
              bf8e 00c4  ld   $c4
              bf8f 00a0  ld   $a0
              bf90 00ce  ld   $ce
              bf91 00c5  ld   $c5
              bf92 00d8  ld   $d8
              bf93 0054  ld   $54
              bf94 00d3  ld   $d3
              bf95 00d4  ld   $d4
              bf96 00cf  ld   $cf
              bf97 00d0  ld   $d0
              bf98 00d0  ld   $d0
              bf99 00c5  ld   $c5
              bf9a 00c4  ld   $c4
              bf9b 00a0  ld   $a0
              bf9c 00c1  ld   $c1
              bf9d 00d4  ld   $d4
              bf9e 0020  ld   $20
              bf9f 00aa  ld   $aa
              bfa0 00aa  ld   $aa
              bfa1 00aa  ld   $aa
              bfa2 0020  ld   $20
              bfa3 00a0  ld   $a0
              bfa4 00c5  ld   $c5
              bfa5 00d2  ld   $d2
              bfa6 00d2  ld   $d2
              bfa7 000d  ld   $0d
              bfa8 00be  ld   $be
              bfa9 00b2  ld   $b2
              bfaa 00b5  ld   $b5
              bfab 0035  ld   $35
              bfac 00d2  ld   $d2
              bfad 00c1  ld   $c1
              bfae 00ce  ld   $ce
              bfaf 00c7  ld   $c7
              bfb0 0045  ld   $45
              bfb1 00c4  ld   $c4
              bfb2 00c9  ld   $c9
              bfb3 004d  ld   $4d
              bfb4 00d3  ld   $d3
              bfb5 00d4  ld   $d4
              bfb6 00d2  ld   $d2
              bfb7 00a0  ld   $a0
              bfb8 00cf  ld   $cf
              bfb9 00d6  ld   $d6
              bfba 00c6  ld   $c6
              bfbb 004c  ld   $4c
              bfbc 00dc  ld   $dc
              bfbd 000d  ld   $0d
              bfbe 00d2  ld   $d2
              bfbf 00c5  ld   $c5
              bfc0 00d4  ld   $d4
              bfc1 00d9  ld   $d9
              bfc2 00d0  ld   $d0
              bfc3 00c5  ld   $c5
              bfc4 00a0  ld   $a0
              bfc5 00cc  ld   $cc
              bfc6 00c9  ld   $c9
              bfc7 00ce  ld   $ce
              bfc8 00c5  ld   $c5
              bfc9 008d  ld   $8d
              bfca 003f  ld   $3f
              bfcb 0046  ld   $46
              bfcc 00d9  ld   $d9
              bfcd 0090  ld   $90
              bfce 0003  ld   $03
              bfcf 004c  ld   $4c
              bfd0 00c3  ld   $c3
              bfd1 00e8  ld   $e8
              bfd2 00a6  ld   $a6
              bfd3 00cf  ld   $cf
              bfd4 009a  ld   $9a
              bfd5 00a6  ld   $a6
              bfd6 00ce  ld   $ce
              bfd7 00a0  ld   $a0
              bfd8 008d  ld   $8d
              bfd9 00d0  ld   $d0
              bfda 0002  ld   $02
              bfdb 00a0  ld   $a0
              bfdc 0099  ld   $99
              bfdd 0020  ld   $20
              bfde 00c4  ld   $c4
              bfdf 00e3  ld   $e3
              bfe0 0086  ld   $86
              bfe1 00ce  ld   $ce
              bfe2 00ba  ld   $ba
              bfe3 0086  ld   $86
              bfe4 00cf  ld   $cf
              bfe5 00a0  ld   $a0
              bfe6 00fe  ld   $fe
              bfe7 0084  ld   $84
              bfe8 00d9  ld   $d9
              bfe9 00c8  ld   $c8
              bfea 0084  ld   $84
              bfeb 00c8  ld   $c8
              bfec 0020  ld   $20
              bfed 0099  ld   $99
              bfee 00e2  ld   $e2
              bfef 0084  ld   $84
              bff0 00e9  ld   $e9
              bff1 00a2  ld   $a2
              bff2 0018  ld   $18
              bff3 00a9  ld   $a9
              bff4 0030  ld   $30
              bff5 0020  ld   $20
              bff6 0091  ld   $91
              bff7 00e4  ld   $e4
              bff8 00e6  ld   $e6
              bff9 00d9  ld   $d9
              bffa 00a6  ld   $a6
              bffb fe00  bra  ac          ;+-----------------------------------+
              bffc fcfd  bra  $bffd       ;|                                   |
              bffd 1418  ld   $18,y       ;| Trampoline for page $bf00 lookups |
              bffe e006  jmp  y,$06       ;|                                   |
              bfff c218  st   [$18]       ;+-----------------------------------+
              c000 00ce  ld   $ce
              c001 00a4  ld   $a4
              c002 00c8  ld   $c8
              c003 000a  ld   $0a
              c004 0085  ld   $85
              c005 00ce  ld   $ce
              c006 00c8  ld   $c8
              c007 00b9  ld   $b9
              c008 0000  ld   $00
              c009 0002  ld   $02
              c00a 00c9  ld   $c9
              c00b 0074  ld   $74
              c00c 00f0  ld   $f0
              c00d 00d2  ld   $d2
              c00e 0049  ld   $49
              c00f 00b0  ld   $b0
              c010 00c9  ld   $c9
              c011 000a  ld   $0a
              c012 00b0  ld   $b0
              c013 00f0  ld   $f0
              c014 00c8  ld   $c8
              c015 00c8  ld   $c8
              c016 0084  ld   $84
              c017 00c8  ld   $c8
              c018 00b9  ld   $b9
              c019 0000  ld   $00
              c01a 0002  ld   $02
              c01b 0048  ld   $48
              c01c 00b9  ld   $b9
              c01d 00ff  ld   $ff
              c01e 0001  ld   $01
              c01f 00a0  ld   $a0
              c020 0000  ld   $00
              c021 0020  ld   $20
              c022 0008  ld   $08
              c023 00e7  ld   $e7
              c024 0068  ld   $68
              c025 0095  ld   $95
              c026 00a8  ld   $a8
              c027 00a5  ld   $a5
              c028 00ce  ld   $ce
              c029 00c9  ld   $c9
              c02a 00c7  ld   $c7
              c02b 00d0  ld   $d0
              c02c 0003  ld   $03
              c02d 0020  ld   $20
              c02e 006f  ld   $6f
              c02f 00e7  ld   $e7
              c030 004c  ld   $4c
              c031 0001  ld   $01
              c032 00e8  ld   $e8
              c033 00ff  ld   $ff
              c034 00ff  ld   $ff
              c035 00ff  ld   $ff
              c036 00ec  ld   $ec
              c037 0000  ld   $00
              c038 0000  ld   $00
              c039 0050  ld   $50
              c03a 0020  ld   $20
              c03b 0013  ld   $13
              c03c 00ec  ld   $ec
              c03d 00d0  ld   $d0
              c03e 0015  ld   $15
              c03f 0020  ld   $20
              c040 000b  ld   $0b
              c041 00ec  ld   $ec
              c042 00d0  ld   $d0
              c043 0010  ld   $10
              c044 0020  ld   $20
              c045 0082  ld   $82
              c046 00e7  ld   $e7
              c047 0020  ld   $20
              c048 006f  ld   $6f
              c049 00e7  ld   $e7
              c04a 0050  ld   $50
              c04b 0003  ld   $03
              c04c 0020  ld   $20
              c04d 0082  ld   $82
              c04e 00e7  ld   $e7
              c04f 0020  ld   $20
              c050 0059  ld   $59
              c051 00e7  ld   $e7
              c052 0056  ld   $56
              c053 0050  ld   $50
              c054 004c  ld   $4c
              c055 0036  ld   $36
              c056 00e7  ld   $e7
              c057 00ff  ld   $ff
              c058 00ff  ld   $ff
              c059 00c1  ld   $c1
              c05a 00ff  ld   $ff
              c05b 007f  ld   $7f
              c05c 00d1  ld   $d1
              c05d 00cc  ld   $cc
              c05e 00c7  ld   $c7
              c05f 00cf  ld   $cf
              c060 00ce  ld   $ce
              c061 00c5  ld   $c5
              c062 009a  ld   $9a
              c063 0098  ld   $98
              c064 008b  ld   $8b
              c065 0096  ld   $96
              c066 0095  ld   $95
              c067 0093  ld   $93
              c068 00bf  ld   $bf
              c069 00b2  ld   $b2
              c06a 0032  ld   $32
              c06b 002d  ld   $2d
              c06c 002b  ld   $2b
              c06d 00bc  ld   $bc
              c06e 00b0  ld   $b0
              c06f 00ac  ld   $ac
              c070 00be  ld   $be
              c071 0035  ld   $35
              c072 008e  ld   $8e
              c073 0061  ld   $61
              c074 00ff  ld   $ff
              c075 00ff  ld   $ff
              c076 00ff  ld   $ff
              c077 00dd  ld   $dd
              c078 00fb  ld   $fb
              c079 0020  ld   $20
              c07a 00c9  ld   $c9
              c07b 00ef  ld   $ef
              c07c 0015  ld   $15
              c07d 004f  ld   $4f
              c07e 0010  ld   $10
              c07f 0005  ld   $05
              c080 0020  ld   $20
              c081 00c9  ld   $c9
              c082 00ef  ld   $ef
              c083 0035  ld   $35
              c084 004f  ld   $4f
              c085 0095  ld   $95
              c086 0050  ld   $50
              c087 0010  ld   $10
              c088 00cb  ld   $cb
              c089 004c  ld   $4c
              c08a 00c9  ld   $c9
              c08b 00ef  ld   $ef
              c08c 0040  ld   $40
              c08d 0060  ld   $60
              c08e 008d  ld   $8d
              c08f 0060  ld   $60
              c090 008b  ld   $8b
              c091 0000  ld   $00
              c092 007e  ld   $7e
              c093 008c  ld   $8c
              c094 0033  ld   $33
              c095 0000  ld   $00
              c096 0000  ld   $00
              c097 0060  ld   $60
              c098 0003  ld   $03
              c099 00bf  ld   $bf
              c09a 0012  ld   $12
              c09b 0000  ld   $00
              c09c 0040  ld   $40
              c09d 0089  ld   $89
              c09e 00c9  ld   $c9
              c09f 0047  ld   $47
              c0a0 009d  ld   $9d
              c0a1 0017  ld   $17
              c0a2 0068  ld   $68
              c0a3 009d  ld   $9d
              c0a4 000a  ld   $0a
              c0a5 0000  ld   $00
              c0a6 0040  ld   $40
              c0a7 0060  ld   $60
              c0a8 008d  ld   $8d
              c0a9 0060  ld   $60
              c0aa 008b  ld   $8b
              c0ab 0000  ld   $00
              c0ac 007e  ld   $7e
              c0ad 008c  ld   $8c
              c0ae 003c  ld   $3c
              c0af 0000  ld   $00
              c0b0 0000  ld   $00
              c0b1 0060  ld   $60
              c0b2 0003  ld   $03
              c0b3 00bf  ld   $bf
              c0b4 001b  ld   $1b
              c0b5 004b  ld   $4b
              c0b6 0067  ld   $67
              c0b7 00b4  ld   $b4
              c0b8 00a1  ld   $a1
              c0b9 0007  ld   $07
              c0ba 008c  ld   $8c
              c0bb 0007  ld   $07
              c0bc 00ae  ld   $ae
              c0bd 00a9  ld   $a9
              c0be 00ac  ld   $ac
              c0bf 00a8  ld   $a8
              c0c0 0067  ld   $67
              c0c1 008c  ld   $8c
              c0c2 0007  ld   $07
              c0c3 00b4  ld   $b4
              c0c4 00af  ld   $af
              c0c5 00ac  ld   $ac
              c0c6 00b0  ld   $b0
              c0c7 0067  ld   $67
              c0c8 009d  ld   $9d
              c0c9 00b2  ld   $b2
              c0ca 00af  ld   $af
              c0cb 00ac  ld   $ac
              c0cc 00af  ld   $af
              c0cd 00a3  ld   $a3
              c0ce 0067  ld   $67
              c0cf 008c  ld   $8c
              c0d0 0007  ld   $07
              c0d1 00a5  ld   $a5
              c0d2 00ab  ld   $ab
              c0d3 00af  ld   $af
              c0d4 00b0  ld   $b0
              c0d5 00f4  ld   $f4
              c0d6 00ae  ld   $ae
              c0d7 00a9  ld   $a9
              c0d8 00b2  ld   $b2
              c0d9 00b0  ld   $b0
              c0da 007f  ld   $7f
              c0db 000e  ld   $0e
              c0dc 0027  ld   $27
              c0dd 00b4  ld   $b4
              c0de 00ae  ld   $ae
              c0df 00a9  ld   $a9
              c0e0 00b2  ld   $b2
              c0e1 00b0  ld   $b0
              c0e2 007f  ld   $7f
              c0e3 000e  ld   $0e
              c0e4 0028  ld   $28
              c0e5 00b4  ld   $b4
              c0e6 00ae  ld   $ae
              c0e7 00a9  ld   $a9
              c0e8 00b2  ld   $b2
              c0e9 00b0  ld   $b0
              c0ea 0064  ld   $64
              c0eb 0007  ld   $07
              c0ec 00a6  ld   $a6
              c0ed 00a9  ld   $a9
              c0ee 0067  ld   $67
              c0ef 00af  ld   $af
              c0f0 00b4  ld   $b4
              c0f1 00af  ld   $af
              c0f2 00a7  ld   $a7
              c0f3 0078  ld   $78
              c0f4 00b4  ld   $b4
              c0f5 00a5  ld   $a5
              c0f6 00ac  ld   $ac
              c0f7 0078  ld   $78
              c0f8 007f  ld   $7f
              c0f9 0002  ld   $02
              c0fa 00ad  ld   $ad
              c0fb fe00  bra  ac          ;+-----------------------------------+
              c0fc fcfd  bra  $c0fd       ;|                                   |
              c0fd 1418  ld   $18,y       ;| Trampoline for page $c000 lookups |
              c0fe e006  jmp  y,$06       ;|                                   |
              c0ff c218  st   [$18]       ;+-----------------------------------+
              c100 00a5  ld   $a5
              c101 00b2  ld   $b2
              c102 0067  ld   $67
              c103 00a2  ld   $a2
              c104 00b5  ld   $b5
              c105 00b3  ld   $b3
              c106 00af  ld   $af
              c107 00a7  ld   $a7
              c108 00ee  ld   $ee
              c109 00b2  ld   $b2
              c10a 00b5  ld   $b5
              c10b 00b4  ld   $b4
              c10c 00a5  ld   $a5
              c10d 00b2  ld   $b2
              c10e 007e  ld   $7e
              c10f 008c  ld   $8c
              c110 0039  ld   $39
              c111 00b4  ld   $b4
              c112 00b8  ld   $b8
              c113 00a5  ld   $a5
              c114 00ae  ld   $ae
              c115 0067  ld   $67
              c116 00b0  ld   $b0
              c117 00a5  ld   $a5
              c118 00b4  ld   $b4
              c119 00b3  ld   $b3
              c11a 0027  ld   $27
              c11b 00af  ld   $af
              c11c 00b4  ld   $b4
              c11d 0007  ld   $07
              c11e 009d  ld   $9d
              c11f 0019  ld   $19
              c120 00b2  ld   $b2
              c121 00af  ld   $af
              c122 00a6  ld   $a6
              c123 007f  ld   $7f
              c124 0005  ld   $05
              c125 0037  ld   $37
              c126 00b4  ld   $b4
              c127 00b5  ld   $b5
              c128 00b0  ld   $b0
              c129 00ae  ld   $ae
              c12a 00a9  ld   $a9
              c12b 007f  ld   $7f
              c12c 0005  ld   $05
              c12d 0028  ld   $28
              c12e 00b4  ld   $b4
              c12f 00b5  ld   $b5
              c130 00b0  ld   $b0
              c131 00ae  ld   $ae
              c132 00a9  ld   $a9
              c133 007f  ld   $7f
              c134 0005  ld   $05
              c135 002a  ld   $2a
              c136 00b4  ld   $b4
              c137 00b5  ld   $b5
              c138 00b0  ld   $b0
              c139 00ae  ld   $ae
              c13a 00a9  ld   $a9
              c13b 00e4  ld   $e4
              c13c 00ae  ld   $ae
              c13d 00a5  ld   $a5
              c13e 00ed  ld   $ed
              c13f 0000  ld   $00
              c140 0000  ld   $00
              c141 0000  ld   $00
              c142 00ff  ld   $ff
              c143 00ff  ld   $ff
              c144 0047  ld   $47
              c145 00a2  ld   $a2
              c146 00a1  ld   $a1
              c147 00b4  ld   $b4
              c148 007f  ld   $7f
              c149 000d  ld   $0d
              c14a 0030  ld   $30
              c14b 00ad  ld   $ad
              c14c 00a9  ld   $a9
              c14d 00a4  ld   $a4
              c14e 007f  ld   $7f
              c14f 000d  ld   $0d
              c150 0023  ld   $23
              c151 00ad  ld   $ad
              c152 00a9  ld   $a9
              c153 00a4  ld   $a4
              c154 0067  ld   $67
              c155 00ac  ld   $ac
              c156 00ac  ld   $ac
              c157 00a1  ld   $a1
              c158 00a3  ld   $a3
              c159 0000  ld   $00
              c15a 0040  ld   $40
              c15b 0080  ld   $80
              c15c 00c0  ld   $c0
              c15d 00c1  ld   $c1
              c15e 0080  ld   $80
              c15f 0000  ld   $00
              c160 0047  ld   $47
              c161 008c  ld   $8c
              c162 0068  ld   $68
              c163 008c  ld   $8c
              c164 00db  ld   $db
              c165 0067  ld   $67
              c166 009b  ld   $9b
              c167 0068  ld   $68
              c168 009b  ld   $9b
              c169 0050  ld   $50
              c16a 008c  ld   $8c
              c16b 0063  ld   $63
              c16c 008c  ld   $8c
              c16d 007f  ld   $7f
              c16e 0001  ld   $01
              c16f 0051  ld   $51
              c170 0007  ld   $07
              c171 0088  ld   $88
              c172 0029  ld   $29
              c173 0084  ld   $84
              c174 0080  ld   $80
              c175 00c4  ld   $c4
              c176 0080  ld   $80
              c177 0057  ld   $57
              c178 0071  ld   $71
              c179 0007  ld   $07
              c17a 0088  ld   $88
              c17b 0014  ld   $14
              c17c 00ed  ld   $ed
              c17d 00a5  ld   $a5
              c17e 00ad  ld   $ad
              c17f 00af  ld   $af
              c180 00ac  ld   $ac
              c181 00ed  ld   $ed
              c182 00a5  ld   $a5
              c183 00ad  ld   $ad
              c184 00a9  ld   $a9
              c185 00a8  ld   $a8
              c186 00f2  ld   $f2
              c187 00af  ld   $af
              c188 00ac  ld   $ac
              c189 00af  ld   $af
              c18a 00a3  ld   $a3
              c18b 0071  ld   $71
              c18c 0008  ld   $08
              c18d 0088  ld   $88
              c18e 00ae  ld   $ae
              c18f 00a5  ld   $a5
              c190 00ac  ld   $ac
              c191 0068  ld   $68
              c192 0083  ld   $83
              c193 0008  ld   $08
              c194 0068  ld   $68
              c195 009d  ld   $9d
              c196 0008  ld   $08
              c197 0071  ld   $71
              c198 0007  ld   $07
              c199 0088  ld   $88
              c19a 0060  ld   $60
              c19b 0076  ld   $76
              c19c 00b4  ld   $b4
              c19d 00af  ld   $af
              c19e 00ae  ld   $ae
              c19f 0076  ld   $76
              c1a0 008d  ld   $8d
              c1a1 0076  ld   $76
              c1a2 008b  ld   $8b
              c1a3 0051  ld   $51
              c1a4 0007  ld   $07
              c1a5 0088  ld   $88
              c1a6 0019  ld   $19
              c1a7 00b8  ld   $b8
              c1a8 00a4  ld   $a4
              c1a9 00ae  ld   $ae
              c1aa 00b2  ld   $b2
              c1ab 00f2  ld   $f2
              c1ac 00b3  ld   $b3
              c1ad 00b5  ld   $b5
              c1ae 00f3  ld   $f3
              c1af 00a2  ld   $a2
              c1b0 00a1  ld   $a1
              c1b1 00ee  ld   $ee
              c1b2 00a7  ld   $a7
              c1b3 00b3  ld   $b3
              c1b4 00e4  ld   $e4
              c1b5 00ae  ld   $ae
              c1b6 00b2  ld   $b2
              c1b7 00eb  ld   $eb
              c1b8 00a5  ld   $a5
              c1b9 00a5  ld   $a5
              c1ba 00b0  ld   $b0
              c1bb 0051  ld   $51
              c1bc 0007  ld   $07
              c1bd 0088  ld   $88
              c1be 0039  ld   $39
              c1bf 0081  ld   $81
              c1c0 00c1  ld   $c1
              c1c1 004f  ld   $4f
              c1c2 007f  ld   $7f
              c1c3 000f  ld   $0f
              c1c4 002f  ld   $2f
              c1c5 0000  ld   $00
              c1c6 0051  ld   $51
              c1c7 0006  ld   $06
              c1c8 0088  ld   $88
              c1c9 0029  ld   $29
              c1ca 00c2  ld   $c2
              c1cb 000c  ld   $0c
              c1cc 0082  ld   $82
              c1cd 0057  ld   $57
              c1ce 008c  ld   $8c
              c1cf 006a  ld   $6a
              c1d0 008c  ld   $8c
              c1d1 0042  ld   $42
              c1d2 00ae  ld   $ae
              c1d3 00a5  ld   $a5
              c1d4 00a8  ld   $a8
              c1d5 00b4  ld   $b4
              c1d6 0060  ld   $60
              c1d7 00ae  ld   $ae
              c1d8 00a5  ld   $a5
              c1d9 00a8  ld   $a8
              c1da 00b4  ld   $b4
              c1db 004f  ld   $4f
              c1dc 007e  ld   $7e
              c1dd 001e  ld   $1e
              c1de 0035  ld   $35
              c1df 008c  ld   $8c
              c1e0 0027  ld   $27
              c1e1 0051  ld   $51
              c1e2 0007  ld   $07
              c1e3 0088  ld   $88
              c1e4 0009  ld   $09
              c1e5 008b  ld   $8b
              c1e6 00fe  ld   $fe
              c1e7 00e4  ld   $e4
              c1e8 00af  ld   $af
              c1e9 00ad  ld   $ad
              c1ea 00f2  ld   $f2
              c1eb 00af  ld   $af
              c1ec 00e4  ld   $e4
              c1ed 00ae  ld   $ae
              c1ee 00a1  ld   $a1
              c1ef 00dc  ld   $dc
              c1f0 00de  ld   $de
              c1f1 009c  ld   $9c
              c1f2 00dd  ld   $dd
              c1f3 009c  ld   $9c
              c1f4 00de  ld   $de
              c1f5 00dd  ld   $dd
              c1f6 009e  ld   $9e
              c1f7 00c3  ld   $c3
              c1f8 00dd  ld   $dd
              c1f9 00cf  ld   $cf
              c1fa 00ca  ld   $ca
              c1fb fe00  bra  ac          ;+-----------------------------------+
              c1fc fcfd  bra  $c1fd       ;|                                   |
              c1fd 1418  ld   $18,y       ;| Trampoline for page $c100 lookups |
              c1fe e006  jmp  y,$06       ;|                                   |
              c1ff c218  st   [$18]       ;+-----------------------------------+
              c200 00cd  ld   $cd
              c201 00cb  ld   $cb
              c202 0000  ld   $00
              c203 0047  ld   $47
              c204 009d  ld   $9d
              c205 00ad  ld   $ad
              c206 00a5  ld   $a5
              c207 00ad  ld   $ad
              c208 00af  ld   $af
              c209 00ac  ld   $ac
              c20a 0076  ld   $76
              c20b 009d  ld   $9d
              c20c 00ad  ld   $ad
              c20d 00a5  ld   $a5
              c20e 00ad  ld   $ad
              c20f 00a9  ld   $a9
              c210 00a8  ld   $a8
              c211 00e6  ld   $e6
              c212 00a6  ld   $a6
              c213 00af  ld   $af
              c214 0060  ld   $60
              c215 008c  ld   $8c
              c216 0020  ld   $20
              c217 00af  ld   $af
              c218 00b4  ld   $b4
              c219 00b5  ld   $b5
              c21a 00a1  ld   $a1
              c21b 00f2  ld   $f2
              c21c 00ac  ld   $ac
              c21d 00a3  ld   $a3
              c21e 00f2  ld   $f2
              c21f 00a3  ld   $a3
              c220 00b3  ld   $b3
              c221 0060  ld   $60
              c222 008c  ld   $8c
              c223 0020  ld   $20
              c224 00ac  ld   $ac
              c225 00a5  ld   $a5
              c226 00a4  ld   $a4
              c227 00ee  ld   $ee
              c228 00b5  ld   $b5
              c229 00b2  ld   $b2
              c22a 0060  ld   $60
              c22b 00ae  ld   $ae
              c22c 00b5  ld   $b5
              c22d 00b2  ld   $b2
              c22e 00f4  ld   $f4
              c22f 00b3  ld   $b3
              c230 00a9  ld   $a9
              c231 00ac  ld   $ac
              c232 0060  ld   $60
              c233 008c  ld   $8c
              c234 0020  ld   $20
              c235 00b4  ld   $b4
              c236 00b3  ld   $b3
              c237 00a9  ld   $a9
              c238 00ac  ld   $ac
              c239 007a  ld   $7a
              c23a 007e  ld   $7e
              c23b 009a  ld   $9a
              c23c 0022  ld   $22
              c23d 0020  ld   $20
              c23e 0000  ld   $00
              c23f 0060  ld   $60
              c240 0003  ld   $03
              c241 00bf  ld   $bf
              c242 0060  ld   $60
              c243 0003  ld   $03
              c244 00bf  ld   $bf
              c245 001f  ld   $1f
              c246 00ee  ld   $ee
              c247 0000  ld   $00
              c248 0000  ld   $00
              c249 0020  ld   $20
              c24a 00b1  ld   $b1
              c24b 00e7  ld   $e7
              c24c 00e8  ld   $e8
              c24d 00e8  ld   $e8
              c24e 00b5  ld   $b5
              c24f 004f  ld   $4f
              c250 0085  ld   $85
              c251 00da  ld   $da
              c252 00b5  ld   $b5
              c253 0087  ld   $87
              c254 0085  ld   $85
              c255 00db  ld   $db
              c256 00b4  ld   $b4
              c257 004e  ld   $4e
              c258 0098  ld   $98
              c259 00d5  ld   $d5
              c25a 0086  ld   $86
              c25b 00b0  ld   $b0
              c25c 0009  ld   $09
              c25d 00b1  ld   $b1
              c25e 00da  ld   $da
              c25f 0020  ld   $20
              c260 00c9  ld   $c9
              c261 00e3  ld   $e3
              c262 00c8  ld   $c8
              c263 004c  ld   $4c
              c264 000f  ld   $0f
              c265 00ee  ld   $ee
              c266 00a9  ld   $a9
              c267 00ff  ld   $ff
              c268 0085  ld   $85
              c269 00d5  ld   $d5
              c26a 0060  ld   $60
              c26b 00e8  ld   $e8
              c26c 00a9  ld   $a9
              c26d 0000  ld   $00
              c26e 0095  ld   $95
              c26f 0088  ld   $88
              c270 0095  ld   $95
              c271 00a8  ld   $a8
              c272 00b5  ld   $b5
              c273 0087  ld   $87
              c274 0038  ld   $38
              c275 00f5  ld   $f5
              c276 004f  ld   $4f
              c277 0095  ld   $95
              c278 0050  ld   $50
              c279 004c  ld   $4c
              c27a 0023  ld   $23
              c27b 00e8  ld   $e8
              c27c 00ff  ld   $ff
              c27d 0020  ld   $20
              c27e 0015  ld   $15
              c27f 00e7  ld   $e7
              c280 00a5  ld   $a5
              c281 00cf  ld   $cf
              c282 00d0  ld   $d0
              c283 0028  ld   $28
              c284 00a5  ld   $a5
              c285 00ce  ld   $ce
              c286 0060  ld   $60
              c287 0020  ld   $20
              c288 0034  ld   $34
              c289 00ee  ld   $ee
              c28a 00a4  ld   $a4
              c28b 00c8  ld   $c8
              c28c 00c9  ld   $c9
              c28d 0030  ld   $30
              c28e 00b0  ld   $b0
              c28f 0021  ld   $21
              c290 00c0  ld   $c0
              c291 0028  ld   $28
              c292 00b0  ld   $b0
              c293 001d  ld   $1d
              c294 0060  ld   $60
              c295 00ea  ld   $ea
              c296 00ea  ld   $ea
              c297 0020  ld   $20
              c298 0034  ld   $34
              c299 00ee  ld   $ee
              c29a 0060  ld   $60
              c29b 00ea  ld   $ea
              c29c 008a  ld   $8a
              c29d 00a2  ld   $a2
              c29e 0001  ld   $01
              c29f 00b4  ld   $b4
              c2a0 00ce  ld   $ce
              c2a1 0094  ld   $94
              c2a2 004c  ld   $4c
              c2a3 00b4  ld   $b4
              c2a4 0048  ld   $48
              c2a5 0094  ld   $94
              c2a6 00ca  ld   $ca
              c2a7 00ca  ld   $ca
              c2a8 00f0  ld   $f0
              c2a9 00f5  ld   $f5
              c2aa 00aa  ld   $aa
              c2ab 0060  ld   $60
              c2ac 00a0  ld   $a0
              c2ad 0077  ld   $77
              c2ae 004c  ld   $4c
              c2af 00e0  ld   $e0
              c2b0 00e3  ld   $e3
              c2b1 00a0  ld   $a0
              c2b2 007b  ld   $7b
              c2b3 00d0  ld   $d0
              c2b4 00f9  ld   $f9
              c2b5 0020  ld   $20
              c2b6 0054  ld   $54
              c2b7 00e2  ld   $e2
              c2b8 00a5  ld   $a5
              c2b9 00da  ld   $da
              c2ba 00d0  ld   $d0
              c2bb 0007  ld   $07
              c2bc 00a5  ld   $a5
              c2bd 00db  ld   $db
              c2be 00d0  ld   $d0
              c2bf 0003  ld   $03
              c2c0 004c  ld   $4c
              c2c1 007e  ld   $7e
              c2c2 00e7  ld   $e7
              c2c3 0006  ld   $06
              c2c4 00ce  ld   $ce
              c2c5 0026  ld   $26
              c2c6 00cf  ld   $cf
              c2c7 0026  ld   $26
              c2c8 0046  ld   $46
              c2c9 0026  ld   $26
              c2ca 0047  ld   $47
              c2cb 00a5  ld   $a5
              c2cc 0046  ld   $46
              c2cd 00c5  ld   $c5
              c2ce 00da  ld   $da
              c2cf 00a5  ld   $a5
              c2d0 0047  ld   $47
              c2d1 00e5  ld   $e5
              c2d2 00db  ld   $db
              c2d3 0090  ld   $90
              c2d4 000a  ld   $0a
              c2d5 0085  ld   $85
              c2d6 0047  ld   $47
              c2d7 00a5  ld   $a5
              c2d8 0046  ld   $46
              c2d9 00e5  ld   $e5
              c2da 00da  ld   $da
              c2db 0085  ld   $85
              c2dc 0046  ld   $46
              c2dd 00e6  ld   $e6
              c2de 00ce  ld   $ce
              c2df 0088  ld   $88
              c2e0 00d0  ld   $d0
              c2e1 00e1  ld   $e1
              c2e2 0060  ld   $60
              c2e3 00ff  ld   $ff
              c2e4 00ff  ld   $ff
              c2e5 00ff  ld   $ff
              * 6 times
              c2e9 0020  ld   $20
              c2ea 0015  ld   $15
              c2eb 00e7  ld   $e7
              c2ec 006c  ld   $6c
              c2ed 00ce  ld   $ce
              c2ee 0000  ld   $00
              c2ef 00a5  ld   $a5
              c2f0 004c  ld   $4c
              c2f1 00d0  ld   $d0
              c2f2 0002  ld   $02
              c2f3 00c6  ld   $c6
              c2f4 004d  ld   $4d
              c2f5 00c6  ld   $c6
              c2f6 004c  ld   $4c
              c2f7 00a5  ld   $a5
              c2f8 0048  ld   $48
              c2f9 00d0  ld   $d0
              c2fa 0002  ld   $02
              c2fb fe00  bra  ac          ;+-----------------------------------+
              c2fc fcfd  bra  $c2fd       ;|                                   |
              c2fd 1418  ld   $18,y       ;| Trampoline for page $c200 lookups |
              c2fe e006  jmp  y,$06       ;|                                   |
              c2ff c218  st   [$18]       ;+-----------------------------------+
              c300 00c6  ld   $c6
              c301 0049  ld   $49
              c302 00c6  ld   $c6
              c303 0048  ld   $48
              c304 00a0  ld   $a0
              c305 0000  ld   $00
              c306 00b1  ld   $b1
              c307 004c  ld   $4c
              c308 0091  ld   $91
              c309 0048  ld   $48
              c30a 00a5  ld   $a5
              c30b 00ca  ld   $ca
              c30c 00c5  ld   $c5
              c30d 004c  ld   $4c
              c30e 00a5  ld   $a5
              c30f 00cb  ld   $cb
              c310 00e5  ld   $e5
              c311 004d  ld   $4d
              c312 0090  ld   $90
              c313 00e0  ld   $e0
              c314 004c  ld   $4c
              c315 0053  ld   $53
              c316 00ee  ld   $ee
              c317 00c9  ld   $c9
              c318 0028  ld   $28
              c319 00b0  ld   $b0
              c31a 009b  ld   $9b
              c31b 00a8  ld   $a8
              c31c 00a5  ld   $a5
              c31d 00c8  ld   $c8
              c31e 0060  ld   $60
              c31f 00ea  ld   $ea
              c320 00ea  ld   $ea
              c321 0098  ld   $98
              c322 00aa  ld   $aa
              c323 00a0  ld   $a0
              c324 006e  ld   $6e
              c325 0020  ld   $20
              c326 00c4  ld   $c4
              c327 00e3  ld   $e3
              c328 008a  ld   $8a
              c329 00a8  ld   $a8
              c32a 0020  ld   $20
              c32b 00c4  ld   $c4
              c32c 00e3  ld   $e3
              c32d 00a0  ld   $a0
              c32e 0072  ld   $72
              c32f 004c  ld   $4c
              c330 00c4  ld   $c4
              c331 00e3  ld   $e3
              c332 0020  ld   $20
              c333 0015  ld   $15
              c334 00e7  ld   $e7
              c335 0006  ld   $06
              c336 00ce  ld   $ce
              c337 0026  ld   $26
              c338 00cf  ld   $cf
              c339 0030  ld   $30
              c33a 00fa  ld   $fa
              c33b 00b0  ld   $b0
              c33c 00dc  ld   $dc
              c33d 00d0  ld   $d0
              c33e 0004  ld   $04
              c33f 00c5  ld   $c5
              c340 00ce  ld   $ce
              c341 00b0  ld   $b0
              c342 00d6  ld   $d6
              c343 0060  ld   $60
              c344 0020  ld   $20
              c345 0015  ld   $15
              c346 00e7  ld   $e7
              c347 00b1  ld   $b1
              c348 00ce  ld   $ce
              c349 0094  ld   $94
              c34a 00a7  ld   $a7
              c34b 004c  ld   $4c
              c34c 0008  ld   $08
              c34d 00e7  ld   $e7
              c34e 00ef  ld   $ef
              c34f 0000  ld   $00
              c350 0000  ld   $00
              c351 0020  ld   $20
              c352 0034  ld   $34
              c353 00ee  ld   $ee
              c354 00a5  ld   $a5
              c355 00ce  ld   $ce
              c356 0048  ld   $48
              c357 0020  ld   $20
              c358 0015  ld   $15
              c359 00e7  ld   $e7
              c35a 0068  ld   $68
              c35b 0091  ld   $91
              c35c 00ce  ld   $ce
              c35d 0060  ld   $60
              c35e 00ff  ld   $ff
              c35f 00ff  ld   $ff
              c360 00ff  ld   $ff
              c361 0020  ld   $20
              c362 006c  ld   $6c
              c363 00ee  ld   $ee
              c364 00a5  ld   $a5
              c365 00ce  ld   $ce
              c366 0085  ld   $85
              c367 0046  ld   $46
              c368 00a5  ld   $a5
              c369 00cf  ld   $cf
              c36a 0085  ld   $85
              c36b 0047  ld   $47
              c36c 004c  ld   $4c
              c36d 0044  ld   $44
              c36e 00e2  ld   $e2
              c36f 0020  ld   $20
              c370 00e4  ld   $e4
              c371 00ee  ld   $ee
              c372 004c  ld   $4c
              c373 0034  ld   $34
              c374 00e1  ld   $e1
              c375 0020  ld   $20
              c376 00e4  ld   $e4
              c377 00ee  ld   $ee
              c378 00b4  ld   $b4
              c379 0088  ld   $88
              c37a 00b5  ld   $b5
              c37b 0050  ld   $50
              c37c 0069  ld   $69
              c37d 00fe  ld   $fe
              c37e 00b0  ld   $b0
              c37f 0001  ld   $01
              c380 0088  ld   $88
              c381 0085  ld   $85
              c382 00da  ld   $da
              c383 0084  ld   $84
              c384 00db  ld   $db
              c385 0018  ld   $18
              c386 0065  ld   $65
              c387 00ce  ld   $ce
              c388 0095  ld   $95
              c389 0050  ld   $50
              c38a 0098  ld   $98
              c38b 0065  ld   $65
              c38c 00cf  ld   $cf
              c38d 0095  ld   $95
              c38e 0088  ld   $88
              c38f 00a0  ld   $a0
              c390 0000  ld   $00
              c391 00b5  ld   $b5
              c392 0050  ld   $50
              c393 00d1  ld   $d1
              c394 00da  ld   $da
              c395 00c8  ld   $c8
              c396 00b5  ld   $b5
              c397 0088  ld   $88
              c398 00f1  ld   $f1
              c399 00da  ld   $da
              c39a 00b0  ld   $b0
              c39b 0080  ld   $80
              c39c 004c  ld   $4c
              c39d 0023  ld   $23
              c39e 00e8  ld   $e8
              c39f 0020  ld   $20
              c3a0 0015  ld   $15
              c3a1 00e7  ld   $e7
              c3a2 00a5  ld   $a5
              c3a3 004e  ld   $4e
              c3a4 0020  ld   $20
              c3a5 0008  ld   $08
              c3a6 00e7  ld   $e7
              c3a7 00a5  ld   $a5
              c3a8 004f  ld   $4f
              c3a9 00d0  ld   $d0
              c3aa 0004  ld   $04
              c3ab 00c5  ld   $c5
              c3ac 004e  ld   $4e
              c3ad 0069  ld   $69
              c3ae 0000  ld   $00
              c3af 0029  ld   $29
              c3b0 007f  ld   $7f
              c3b1 0085  ld   $85
              c3b2 004f  ld   $4f
              c3b3 0095  ld   $95
              c3b4 00a8  ld   $a8
              c3b5 00a0  ld   $a0
              c3b6 0011  ld   $11
              c3b7 00a5  ld   $a5
              c3b8 004f  ld   $4f
              c3b9 000a  ld   $0a
              c3ba 0018  ld   $18
              c3bb 0069  ld   $69
              c3bc 0040  ld   $40
              c3bd 000a  ld   $0a
              c3be 0026  ld   $26
              c3bf 004e  ld   $4e
              c3c0 0026  ld   $26
              c3c1 004f  ld   $4f
              c3c2 0088  ld   $88
              c3c3 00d0  ld   $d0
              c3c4 00f2  ld   $f2
              c3c5 00a5  ld   $a5
              c3c6 00ce  ld   $ce
              c3c7 0020  ld   $20
              c3c8 0008  ld   $08
              c3c9 00e7  ld   $e7
              c3ca 00a5  ld   $a5
              c3cb 00cf  ld   $cf
              c3cc 0095  ld   $95
              c3cd 00a8  ld   $a8
              c3ce 004c  ld   $4c
              c3cf 007a  ld   $7a
              c3d0 00e2  ld   $e2
              c3d1 0020  ld   $20
              c3d2 0015  ld   $15
              c3d3 00e7  ld   $e7
              c3d4 00a4  ld   $a4
              c3d5 00ce  ld   $ce
              c3d6 00c4  ld   $c4
              c3d7 004c  ld   $4c
              c3d8 00a5  ld   $a5
              c3d9 00cf  ld   $cf
              c3da 00e5  ld   $e5
              c3db 004d  ld   $4d
              c3dc 0090  ld   $90
              c3dd 001f  ld   $1f
              c3de 0084  ld   $84
              c3df 0048  ld   $48
              c3e0 00a5  ld   $a5
              c3e1 00cf  ld   $cf
              c3e2 0085  ld   $85
              c3e3 0049  ld   $49
              c3e4 004c  ld   $4c
              c3e5 00b6  ld   $b6
              c3e6 00ee  ld   $ee
              c3e7 0020  ld   $20
              c3e8 0015  ld   $15
              c3e9 00e7  ld   $e7
              c3ea 00a4  ld   $a4
              c3eb 00ce  ld   $ce
              c3ec 00c4  ld   $c4
              c3ed 00ca  ld   $ca
              c3ee 00a5  ld   $a5
              c3ef 00cf  ld   $cf
              c3f0 00e5  ld   $e5
              c3f1 00cb  ld   $cb
              c3f2 00b0  ld   $b0
              c3f3 0009  ld   $09
              c3f4 0084  ld   $84
              c3f5 004a  ld   $4a
              c3f6 00a5  ld   $a5
              c3f7 00cf  ld   $cf
              c3f8 0085  ld   $85
              c3f9 004b  ld   $4b
              c3fa 004c  ld   $4c
              c3fb fe00  bra  ac          ;+-----------------------------------+
              c3fc fcfd  bra  $c3fd       ;|                                   |
              c3fd 1418  ld   $18,y       ;| Trampoline for page $c300 lookups |
              c3fe e006  jmp  y,$06       ;|                                   |
              c3ff c218  st   [$18]       ;+-----------------------------------+
              c400 00b7  ld   $b7
              c401 00e5  ld   $e5
              c402 004c  ld   $4c
              c403 00cb  ld   $cb
              c404 00ee  ld   $ee
              c405 00ea  ld   $ea
              c406 00ea  ld   $ea
              c407 00ea  ld   $ea
              c408 00ea  ld   $ea
              c409 0020  ld   $20
              c40a 00c9  ld   $c9
              c40b 00ef  ld   $ef
              c40c 0020  ld   $20
              c40d 0071  ld   $71
              c40e 00e1  ld   $e1
              c40f 004c  ld   $4c
              c410 00bf  ld   $bf
              c411 00ef  ld   $ef
              c412 0020  ld   $20
              c413 0003  ld   $03
              c414 00ee  ld   $ee
              c415 00a9  ld   $a9
              c416 00ff  ld   $ff
              c417 0085  ld   $85
              c418 00c8  ld   $c8
              c419 00a9  ld   $a9
              c41a 0074  ld   $74
              c41b 008d  ld   $8d
              c41c 0000  ld   $00
              c41d 0002  ld   $02
              c41e 0060  ld   $60
              c41f 0020  ld   $20
              c420 0036  ld   $36
              c421 00e7  ld   $e7
              c422 00e8  ld   $e8
              c423 0020  ld   $20
              c424 0036  ld   $36
              c425 00e7  ld   $e7
              c426 00b5  ld   $b5
              c427 0050  ld   $50
              c428 0060  ld   $60
              c429 00a9  ld   $a9
              c42a 0000  ld   $00
              c42b 0085  ld   $85
              c42c 004a  ld   $4a
              c42d 0085  ld   $85
              c42e 004c  ld   $4c
              c42f 00a9  ld   $a9
              c430 0008  ld   $08
              c431 0085  ld   $85
              c432 004b  ld   $4b
              c433 00a9  ld   $a9
              c434 0010  ld   $10
              c435 0085  ld   $85
              c436 004d  ld   $4d
              c437 004c  ld   $4c
              c438 00ad  ld   $ad
              c439 00e5  ld   $e5
              c43a 00d5  ld   $d5
              c43b 0088  ld   $88
              c43c 00d0  ld   $d0
              c43d 0001  ld   $01
              c43e 0018  ld   $18
              c43f 004c  ld   $4c
              c440 0002  ld   $02
              c441 00e1  ld   $e1
              c442 0020  ld   $20
              c443 00b7  ld   $b7
              c444 00e5  ld   $e5
              c445 004c  ld   $4c
              c446 0036  ld   $36
              c447 00e8  ld   $e8
              c448 0020  ld   $20
              c449 00b7  ld   $b7
              c44a 00e5  ld   $e5
              c44b 004c  ld   $4c
              c44c 005b  ld   $5b
              c44d 00e8  ld   $e8
              c44e 00e0  ld   $e0
              c44f 0080  ld   $80
              c450 00d0  ld   $d0
              c451 0001  ld   $01
              c452 0088  ld   $88
              c453 004c  ld   $4c
              c454 000c  ld   $0c
              c455 00e0  ld   $e0
              c456 00ff  ld   $ff
              c457 0000  ld   $00
              c458 0000  ld   $00
              c459 00d8  ld   $d8
              c45a 0058  ld   $58
              c45b 00a0  ld   $a0
              c45c 007f  ld   $7f
              c45d 008c  ld   $8c
              c45e 0012  ld   $12
              c45f 00d0  ld   $d0
              c460 00a9  ld   $a9
              c461 00a7  ld   $a7
              c462 008d  ld   $8d
              c463 0011  ld   $11
              c464 00d0  ld   $d0
              c465 008d  ld   $8d
              c466 0013  ld   $13
              c467 00d0  ld   $d0
              c468 00c9  ld   $c9
              c469 00df  ld   $df
              c46a 00f0  ld   $f0
              c46b 0013  ld   $13
              c46c 00c9  ld   $c9
              c46d 009b  ld   $9b
              c46e 00f0  ld   $f0
              c46f 0003  ld   $03
              c470 00c8  ld   $c8
              c471 0010  ld   $10
              c472 000f  ld   $0f
              c473 00a9  ld   $a9
              c474 00dc  ld   $dc
              c475 0020  ld   $20
              c476 00ef  ld   $ef
              c477 00ff  ld   $ff
              c478 00a9  ld   $a9
              c479 008d  ld   $8d
              c47a 0020  ld   $20
              c47b 00ef  ld   $ef
              c47c 00ff  ld   $ff
              c47d 00a0  ld   $a0
              c47e 0001  ld   $01
              c47f 0088  ld   $88
              c480 0030  ld   $30
              c481 00f6  ld   $f6
              c482 00ad  ld   $ad
              c483 0011  ld   $11
              c484 00d0  ld   $d0
              c485 0010  ld   $10
              c486 00fb  ld   $fb
              c487 00ad  ld   $ad
              c488 0010  ld   $10
              c489 00d0  ld   $d0
              c48a 0099  ld   $99
              c48b 0000  ld   $00
              c48c 0002  ld   $02
              c48d 0020  ld   $20
              c48e 00ef  ld   $ef
              c48f 00ff  ld   $ff
              c490 00c9  ld   $c9
              c491 008d  ld   $8d
              c492 00d0  ld   $d0
              c493 00d4  ld   $d4
              c494 00a0  ld   $a0
              c495 00ff  ld   $ff
              c496 00a9  ld   $a9
              c497 0000  ld   $00
              c498 00aa  ld   $aa
              c499 000a  ld   $0a
              c49a 0085  ld   $85
              c49b 003b  ld   $3b
              c49c 00c8  ld   $c8
              c49d 00b9  ld   $b9
              c49e 0000  ld   $00
              c49f 0002  ld   $02
              c4a0 00c9  ld   $c9
              c4a1 008d  ld   $8d
              c4a2 00f0  ld   $f0
              c4a3 00d4  ld   $d4
              c4a4 00c9  ld   $c9
              c4a5 00ae  ld   $ae
              c4a6 0090  ld   $90
              c4a7 00f4  ld   $f4
              c4a8 00f0  ld   $f0
              c4a9 00f0  ld   $f0
              c4aa 00c9  ld   $c9
              c4ab 00ba  ld   $ba
              c4ac 00f0  ld   $f0
              c4ad 00eb  ld   $eb
              c4ae 00c9  ld   $c9
              c4af 00d2  ld   $d2
              c4b0 00f0  ld   $f0
              c4b1 003b  ld   $3b
              c4b2 0086  ld   $86
              c4b3 0038  ld   $38
              c4b4 0086  ld   $86
              c4b5 0039  ld   $39
              c4b6 0084  ld   $84
              c4b7 003a  ld   $3a
              c4b8 00b9  ld   $b9
              c4b9 0000  ld   $00
              c4ba 0002  ld   $02
              c4bb 0049  ld   $49
              c4bc 00b0  ld   $b0
              c4bd 00c9  ld   $c9
              c4be 000a  ld   $0a
              c4bf 0090  ld   $90
              c4c0 0006  ld   $06
              c4c1 0069  ld   $69
              c4c2 0088  ld   $88
              c4c3 00c9  ld   $c9
              c4c4 00fa  ld   $fa
              c4c5 0090  ld   $90
              c4c6 0011  ld   $11
              c4c7 000a  ld   $0a
              c4c8 000a  ld   $0a
              c4c9 000a  ld   $0a
              c4ca 000a  ld   $0a
              c4cb 00a2  ld   $a2
              c4cc 0004  ld   $04
              c4cd 000a  ld   $0a
              c4ce 0026  ld   $26
              c4cf 0038  ld   $38
              c4d0 0026  ld   $26
              c4d1 0039  ld   $39
              c4d2 00ca  ld   $ca
              c4d3 00d0  ld   $d0
              c4d4 00f8  ld   $f8
              c4d5 00c8  ld   $c8
              c4d6 00d0  ld   $d0
              c4d7 00e0  ld   $e0
              c4d8 00c4  ld   $c4
              c4d9 003a  ld   $3a
              c4da 00f0  ld   $f0
              c4db 0097  ld   $97
              c4dc 0024  ld   $24
              c4dd 003b  ld   $3b
              c4de 0050  ld   $50
              c4df 0010  ld   $10
              c4e0 00a5  ld   $a5
              c4e1 0038  ld   $38
              c4e2 0081  ld   $81
              c4e3 0036  ld   $36
              c4e4 00e6  ld   $e6
              c4e5 0036  ld   $36
              c4e6 00d0  ld   $d0
              c4e7 00b5  ld   $b5
              c4e8 00e6  ld   $e6
              c4e9 0037  ld   $37
              c4ea 004c  ld   $4c
              c4eb 0044  ld   $44
              c4ec 00ff  ld   $ff
              c4ed 006c  ld   $6c
              c4ee 0034  ld   $34
              c4ef 0000  ld   $00
              c4f0 0030  ld   $30
              c4f1 002b  ld   $2b
              c4f2 00a2  ld   $a2
              c4f3 0002  ld   $02
              c4f4 00b5  ld   $b5
              c4f5 0037  ld   $37
              c4f6 0095  ld   $95
              c4f7 0035  ld   $35
              c4f8 0095  ld   $95
              c4f9 0033  ld   $33
              c4fa 00ca  ld   $ca
              c4fb fe00  bra  ac          ;+-----------------------------------+
              c4fc fcfd  bra  $c4fd       ;|                                   |
              c4fd 1418  ld   $18,y       ;| Trampoline for page $c400 lookups |
              c4fe e006  jmp  y,$06       ;|                                   |
              c4ff c218  st   [$18]       ;+-----------------------------------+
              c500 00d0  ld   $d0
              c501 00f7  ld   $f7
              c502 00d0  ld   $d0
              c503 0014  ld   $14
              c504 00a9  ld   $a9
              c505 008d  ld   $8d
              c506 0020  ld   $20
              c507 00ef  ld   $ef
              c508 00ff  ld   $ff
              c509 00a5  ld   $a5
              c50a 0035  ld   $35
              c50b 0020  ld   $20
              c50c 00dc  ld   $dc
              c50d 00ff  ld   $ff
              c50e 00a5  ld   $a5
              c50f 0034  ld   $34
              c510 0020  ld   $20
              c511 00dc  ld   $dc
              c512 00ff  ld   $ff
              c513 00a9  ld   $a9
              c514 00ba  ld   $ba
              c515 0020  ld   $20
              c516 00ef  ld   $ef
              c517 00ff  ld   $ff
              c518 00a9  ld   $a9
              c519 00a0  ld   $a0
              c51a 0020  ld   $20
              c51b 00ef  ld   $ef
              c51c 00ff  ld   $ff
              c51d 00a1  ld   $a1
              c51e 0034  ld   $34
              c51f 0020  ld   $20
              c520 00dc  ld   $dc
              c521 00ff  ld   $ff
              c522 0086  ld   $86
              c523 003b  ld   $3b
              c524 00a5  ld   $a5
              c525 0034  ld   $34
              c526 00c5  ld   $c5
              c527 0038  ld   $38
              c528 00a5  ld   $a5
              c529 0035  ld   $35
              c52a 00e5  ld   $e5
              c52b 0039  ld   $39
              c52c 00b0  ld   $b0
              c52d 00c1  ld   $c1
              c52e 00e6  ld   $e6
              c52f 0034  ld   $34
              c530 00d0  ld   $d0
              c531 0002  ld   $02
              c532 00e6  ld   $e6
              c533 0035  ld   $35
              c534 00a5  ld   $a5
              c535 0034  ld   $34
              c536 0029  ld   $29
              c537 0007  ld   $07
              c538 0010  ld   $10
              c539 00c8  ld   $c8
              c53a 0048  ld   $48
              c53b 004a  ld   $4a
              c53c 004a  ld   $4a
              c53d 004a  ld   $4a
              c53e 004a  ld   $4a
              c53f 0020  ld   $20
              c540 00e5  ld   $e5
              c541 00ff  ld   $ff
              c542 0068  ld   $68
              c543 0029  ld   $29
              c544 000f  ld   $0f
              c545 0009  ld   $09
              c546 00b0  ld   $b0
              c547 00c9  ld   $c9
              c548 00ba  ld   $ba
              c549 0090  ld   $90
              c54a 0002  ld   $02
              c54b 0069  ld   $69
              c54c 0006  ld   $06
              c54d 008d  ld   $8d
              c54e 0012  ld   $12
              c54f 00d0  ld   $d0
              c550 002c  ld   $2c
              c551 0012  ld   $12
              c552 00d0  ld   $d0
              c553 00d0  ld   $d0
              c554 00fb  ld   $fb
              c555 0060  ld   $60
              c556 0000  ld   $00
              c557 0000  ld   $00
              c558 0000  ld   $00
              * 5 times
              c55b 00ff  ld   $ff
              c55c 00db  ld   $db
              c55d 005e  ld   $5e
              c55e 0000  ld   $00
              c55f 0000  ld   $00         ;End of Apps/Apple-1/Apple-1_v2.gt1, size 7564
                                          ;+-----------------------------------+
                                          ;| Apps/Horizon/Horizon_at67_v1.gt1  |
                                          ;+-----------------------------------+
              c560 dc41  st   $41,[y,x++] ;'A'
              c561 dc70  st   $70,[y,x++] ;'p'
              c562 dc70  st   $70,[y,x++] ;'p'
              c563 dc6c  st   $6c,[y,x++] ;'l'
              c564 dc65  st   $65,[y,x++] ;'e'
              c565 dc31  st   $31,[y,x++] ;'1'
              c566 dc00  st   $00,[y,x++] ;'\x00'
              c567 dc00  st   $00,[y,x++] ;'\x00'
              c568 00d4  ld   $d4
              c569 c218  st   [$18]
              c56a 00a7  ld   $a7
              c56b 14f3  ld   $f3,y
              c56c e019  jmp  y,$19
              c56d c219  st   [$19]
Egg:          c56e 0002  ld   $02
              c56f 0000  ld   $00
              c570 00c0  ld   $c0
              c571 0011  ld   $11
              c572 00b4  ld   $b4
              c573 0026  ld   $26
              c574 002b  ld   $2b
              c575 00dc  ld   $dc
              c576 0011  ld   $11
              c577 00bd  ld   $bd
              c578 0026  ld   $26
              c579 002b  ld   $2b
              c57a 00d0  ld   $d0
              c57b 0011  ld   $11
              c57c 00c6  ld   $c6
              c57d 0026  ld   $26
              c57e 002b  ld   $2b
              c57f 00d2  ld   $d2
              c580 0011  ld   $11
              c581 00cf  ld   $cf
              c582 0026  ld   $26
              c583 002b  ld   $2b
              c584 00d4  ld   $d4
              c585 0011  ld   $11
              c586 00d8  ld   $d8
              c587 0026  ld   $26
              c588 002b  ld   $2b
              c589 00d6  ld   $d6
              c58a 0011  ld   $11
              c58b 00e1  ld   $e1
              c58c 0026  ld   $26
              c58d 002b  ld   $2b
              c58e 00d8  ld   $d8
              c58f 0011  ld   $11
              c590 00ea  ld   $ea
              c591 0026  ld   $26
              c592 002b  ld   $2b
              c593 00da  ld   $da
              c594 0011  ld   $11
              c595 0020  ld   $20
              c596 000f  ld   $0f
              c597 002b  ld   $2b
              c598 00a2  ld   $a2
              c599 0011  ld   $11
              c59a 0001  ld   $01
              c59b 0000  ld   $00
              c59c 002b  ld   $2b
              c59d 00ac  ld   $ac
              c59e 0011  ld   $11
              c59f 0000  ld   $00
              c5a0 00ff  ld   $ff
              c5a1 002b  ld   $2b
              c5a2 00ae  ld   $ae
              c5a3 0011  ld   $11
              c5a4 0000  ld   $00
              c5a5 0000  ld   $00
              c5a6 002b  ld   $2b
              c5a7 00a6  ld   $a6
              c5a8 0059  ld   $59
              c5a9 0000  ld   $00
              c5aa 005e  ld   $5e
              c5ab 002c  ld   $2c
              c5ac 0011  ld   $11
              c5ad 00a0  ld   $a0
              c5ae 0025  ld   $25
              c5af 00cf  ld   $cf
              c5b0 0018  ld   $18
              c5b1 0011  ld   $11
              c5b2 00c3  ld   $c3
              c5b3 0025  ld   $25
              c5b4 00cf  ld   $cf
              c5b5 0018  ld   $18
              c5b6 0059  ld   $59
              c5b7 0000  ld   $00
              c5b8 002b  ld   $2b
              c5b9 0030  ld   $30
              c5ba 002b  ld   $2b
              c5bb 0032  ld   $32
              c5bc 002b  ld   $2b
              c5bd 0034  ld   $34
              c5be 002b  ld   $2b
              c5bf 0036  ld   $36
              c5c0 002b  ld   $2b
              c5c1 0038  ld   $38
              c5c2 002b  ld   $2b
              c5c3 003a  ld   $3a
              c5c4 002b  ld   $2b
              c5c5 003c  ld   $3c
              c5c6 0059  ld   $59
              c5c7 003f  ld   $3f
              c5c8 002b  ld   $2b
              c5c9 003e  ld   $3e
              c5ca 0059  ld   $59
              c5cb 0003  ld   $03
              c5cc 002b  ld   $2b
              c5cd 0040  ld   $40
              c5ce 0059  ld   $59
              c5cf 0020  ld   $20
              c5d0 002b  ld   $2b
              c5d1 0042  ld   $42
              c5d2 0011  ld   $11
              c5d3 00a0  ld   $a0
              c5d4 0026  ld   $26
              c5d5 002b  ld   $2b
              c5d6 0084  ld   $84
              c5d7 0059  ld   $59
              c5d8 003f  ld   $3f
              c5d9 00f3  ld   $f3
              c5da 0084  ld   $84
              c5db 0011  ld   $11
              c5dc 00a2  ld   $a2
              c5dd 0026  ld   $26
              c5de 002b  ld   $2b
              c5df 0084  ld   $84
              c5e0 0059  ld   $59
              c5e1 002a  ld   $2a
              c5e2 00f3  ld   $f3
              c5e3 0084  ld   $84
              c5e4 0011  ld   $11
              c5e5 00a4  ld   $a4
              c5e6 0026  ld   $26
              c5e7 002b  ld   $2b
              c5e8 0084  ld   $84
              c5e9 0059  ld   $59
              c5ea 0015  ld   $15
              c5eb 00f3  ld   $f3
              c5ec 0084  ld   $84
              c5ed 0011  ld   $11
              c5ee 00a6  ld   $a6
              c5ef 0026  ld   $26
              c5f0 002b  ld   $2b
              c5f1 0084  ld   $84
              c5f2 0059  ld   $59
              c5f3 0000  ld   $00
              c5f4 00f3  ld   $f3
              c5f5 0084  ld   $84
              c5f6 0011  ld   $11
              c5f7 00aa  ld   $aa
              c5f8 0026  ld   $26
              c5f9 002b  ld   $2b
              c5fa 0084  ld   $84
              c5fb fe00  bra  ac          ;+-----------------------------------+
              c5fc fcfd  bra  $c5fd       ;|                                   |
              c5fd 1418  ld   $18,y       ;| Trampoline for page $c500 lookups |
              c5fe e006  jmp  y,$06       ;|                                   |
              c5ff c218  st   [$18]       ;+-----------------------------------+
              c600 0059  ld   $59
              c601 0003  ld   $03
              c602 00f3  ld   $f3
              c603 0084  ld   $84
              c604 0011  ld   $11
              c605 00ac  ld   $ac
              c606 0026  ld   $26
              c607 002b  ld   $2b
              c608 0084  ld   $84
              c609 0059  ld   $59
              c60a 0002  ld   $02
              c60b 00f3  ld   $f3
              c60c 0084  ld   $84
              c60d 0011  ld   $11
              c60e 00ae  ld   $ae
              c60f 0026  ld   $26
              c610 002b  ld   $2b
              c611 0084  ld   $84
              c612 0059  ld   $59
              c613 0001  ld   $01
              c614 00f3  ld   $f3
              c615 0084  ld   $84
              c616 0011  ld   $11
              c617 00b0  ld   $b0
              c618 0026  ld   $26
              c619 002b  ld   $2b
              c61a 0084  ld   $84
              c61b 0059  ld   $59
              c61c 0000  ld   $00
              c61d 00f3  ld   $f3
              c61e 0084  ld   $84
              c61f 0059  ld   $59
              c620 0000  ld   $00
              c621 002b  ld   $2b
              c622 0044  ld   $44
              c623 002b  ld   $2b
              c624 0046  ld   $46
              c625 0059  ld   $59
              c626 0036  ld   $36
              c627 002b  ld   $2b
              c628 0048  ld   $48
              c629 0059  ld   $59
              c62a 0077  ld   $77
              c62b 002b  ld   $2b
              c62c 0030  ld   $30
              c62d 0021  ld   $21
              c62e 0042  ld   $42
              c62f 002b  ld   $2b
              c630 00b0  ld   $b0
              c631 0011  ld   $11
              c632 00ff  ld   $ff
              c633 00ff  ld   $ff
              c634 002b  ld   $2b
              c635 00b2  ld   $b2
              c636 0002  ld   $02
              c637 00c0  ld   $c0
              c638 0037  ld   $37
              c639 0011  ld   $11
              c63a 00a0  ld   $a0
              c63b 0026  ld   $26
              c63c 0099  ld   $99
              c63d 0046  ld   $46
              c63e 0099  ld   $99
              c63f 0046  ld   $46
              c640 00f6  ld   $f6
              c641 002b  ld   $2b
              c642 003e  ld   $3e
              c643 0011  ld   $11
              c644 00aa  ld   $aa
              c645 0026  ld   $26
              c646 0099  ld   $99
              c647 0046  ld   $46
              c648 0099  ld   $99
              c649 0046  ld   $46
              c64a 00f6  ld   $f6
              c64b 002b  ld   $2b
              c64c 0040  ld   $40
              c64d 0021  ld   $21
              c64e 0044  ld   $44
              c64f 00e3  ld   $e3
              c650 0001  ld   $01
              c651 002b  ld   $2b
              c652 0044  ld   $44
              c653 0021  ld   $21
              c654 0044  ld   $44
              c655 00b8  ld   $b8
              c656 0048  ld   $48
              c657 0035  ld   $35
              c658 003f  ld   $3f
              c659 00e4  ld   $e4
              c65a 0011  ld   $11
              c65b 000d  ld   $0d
              c65c 0003  ld   $03
              c65d 00cf  ld   $cf
              c65e 0018  ld   $18
              c65f 0021  ld   $21
              c660 0046  ld   $46
              c661 00e3  ld   $e3
              c662 0001  ld   $01
              c663 002b  ld   $2b
              c664 0046  ld   $46
              c665 0059  ld   $59
              c666 0000  ld   $00
              c667 002b  ld   $2b
              c668 0044  ld   $44
              c669 002b  ld   $2b
              c66a 00de  ld   $de
              c66b 0011  ld   $11
              c66c 0000  ld   $00
              c66d 0003  ld   $03
              c66e 00cf  ld   $cf
              c66f 0018  ld   $18
              c670 0003  ld   $03
              c671 0000  ld   $00
              c672 000d  ld   $0d
              c673 0021  ld   $21
              c674 00de  ld   $de
              c675 0021  ld   $21
              c676 0048  ld   $48
              c677 002b  ld   $2b
              c678 0098  ld   $98
              c679 0011  ld   $11
              c67a 00f3  ld   $f3
              c67b 0026  ld   $26
              c67c 00cf  ld   $cf
              c67d 0018  ld   $18
              c67e 002b  ld   $2b
              c67f 0048  ld   $48
              c680 0003  ld   $03
              c681 000d  ld   $0d
              c682 002c  ld   $2c
              c683 0021  ld   $21
              c684 0030  ld   $30
              c685 002b  ld   $2b
              c686 003c  ld   $3c
              c687 0011  ld   $11
              c688 00a7  ld   $a7
              c689 0004  ld   $04
              c68a 00cf  ld   $cf
              c68b 0018  ld   $18
              c68c 0021  ld   $21
              c68d 0030  ld   $30
              c68e 00b8  ld   $b8
              c68f 0042  ld   $42
              c690 00e3  ld   $e3
              c691 0028  ld   $28
              c692 002b  ld   $2b
              c693 00c0  ld   $c0
              c694 0011  ld   $11
              c695 0090  ld   $90
              c696 0001  ld   $01
              c697 002b  ld   $2b
              c698 0082  ld   $82
              c699 0021  ld   $21
              c69a 00c0  ld   $c0
              c69b 002b  ld   $2b
              c69c 0084  ld   $84
              c69d 0011  ld   $11
              c69e 00a0  ld   $a0
              c69f 0024  ld   $24
              c6a0 00cf  ld   $cf
              c6a1 0018  ld   $18
              c6a2 0082  ld   $82
              c6a3 0001  ld   $01
              c6a4 0035  ld   $35
              c6a5 0072  ld   $72
              c6a6 0037  ld   $37
              c6a7 0021  ld   $21
              c6a8 003e  ld   $3e
              c6a9 00fc  ld   $fc
              c6aa 0040  ld   $40
              c6ab 002b  ld   $2b
              c6ac 0036  ld   $36
              c6ad 0090  ld   $90
              c6ae 003b  ld   $3b
              c6af 0003  ld   $03
              c6b0 0039  ld   $39
              c6b1 0004  ld   $04
              c6b2 0059  ld   $59
              c6b3 0000  ld   $00
              c6b4 002b  ld   $2b
              c6b5 0036  ld   $36
              c6b6 0003  ld   $03
              c6b7 003d  ld   $3d
              c6b8 0029  ld   $29
              c6b9 0059  ld   $59
              c6ba 0050  ld   $50
              c6bb 002b  ld   $2b
              c6bc 0082  ld   $82
              c6bd 0021  ld   $21
              c6be 003a  ld   $3a
              c6bf 002b  ld   $2b
              c6c0 0084  ld   $84
              c6c1 0011  ld   $11
              c6c2 00a0  ld   $a0
              c6c3 0024  ld   $24
              c6c4 00cf  ld   $cf
              c6c5 0018  ld   $18
              c6c6 0021  ld   $21
              c6c7 0092  ld   $92
              c6c8 002b  ld   $2b
              c6c9 0034  ld   $34
              c6ca 0021  ld   $21
              c6cb 0030  ld   $30
              c6cc 00e3  ld   $e3
              c6cd 0008  ld   $08
              c6ce 002b  ld   $2b
              c6cf 00c0  ld   $c0
              c6d0 001a  ld   $1a
              c6d1 00c0  ld   $c0
              c6d2 005e  ld   $5e
              c6d3 0039  ld   $39
              c6d4 0059  ld   $59
              c6d5 0000  ld   $00
              c6d6 002b  ld   $2b
              c6d7 0032  ld   $32
              c6d8 0021  ld   $21
              c6d9 003a  ld   $3a
              c6da 00e3  ld   $e3
              c6db 009f  ld   $9f
              c6dc 002b  ld   $2b
              c6dd 00b4  ld   $b4
              c6de 0059  ld   $59
              c6df 0001  ld   $01
              c6e0 002b  ld   $2b
              c6e1 00b6  ld   $b6
              c6e2 0003  ld   $03
              c6e3 0066  ld   $66
              c6e4 000d  ld   $0d
              c6e5 0021  ld   $21
              c6e6 0034  ld   $34
              c6e7 0035  ld   $35
              c6e8 0072  ld   $72
              c6e9 0071  ld   $71
              c6ea 0021  ld   $21
              c6eb 003a  ld   $3a
              c6ec 00e6  ld   $e6
              c6ed 0001  ld   $01
              c6ee 002b  ld   $2b
              c6ef 0034  ld   $34
              c6f0 0090  ld   $90
              c6f1 0077  ld   $77
              c6f2 0003  ld   $03
              c6f3 0073  ld   $73
              c6f4 0006  ld   $06
              c6f5 0021  ld   $21
              c6f6 0034  ld   $34
              c6f7 00e6  ld   $e6
              c6f8 0001  ld   $01
              c6f9 002b  ld   $2b
              c6fa 0034  ld   $34
              c6fb fe00  bra  ac          ;+-----------------------------------+
              c6fc fcfd  bra  $c6fd       ;|                                   |
              c6fd 1418  ld   $18,y       ;| Trampoline for page $c600 lookups |
              c6fe e006  jmp  y,$06       ;|                                   |
              c6ff c218  st   [$18]       ;+-----------------------------------+
              c700 0003  ld   $03
              c701 0079  ld   $79
              c702 0011  ld   $11
              c703 0021  ld   $21
              c704 0034  ld   $34
              c705 0099  ld   $99
              c706 0034  ld   $34
              c707 00b8  ld   $b8
              c708 003a  ld   $3a
              c709 0035  ld   $35
              c70a 0050  ld   $50
              c70b 0088  ld   $88
              c70c 0021  ld   $21
              c70d 003e  ld   $3e
              c70e 00fc  ld   $fc
              c70f 0036  ld   $36
              c710 002b  ld   $2b
              c711 004a  ld   $4a
              c712 0090  ld   $90
              c713 008e  ld   $8e
              c714 0003  ld   $03
              c715 008a  ld   $8a
              c716 0006  ld   $06
              c717 0021  ld   $21
              c718 0040  ld   $40
              c719 00fc  ld   $fc
              c71a 0036  ld   $36
              c71b 002b  ld   $2b
              c71c 004a  ld   $4a
              c71d 0003  ld   $03
              c71e 0090  ld   $90
              c71f 004a  ld   $4a
              c720 0021  ld   $21
              c721 0038  ld   $38
              c722 0099  ld   $99
              c723 0032  ld   $32
              c724 002b  ld   $2b
              c725 00c0  ld   $c0
              c726 0021  ld   $21
              c727 004a  ld   $4a
              c728 00f0  ld   $f0
              c729 00c0  ld   $c0
              c72a 0021  ld   $21
              c72b 0032  ld   $32
              c72c 0099  ld   $99
              c72d 00b6  ld   $b6
              c72e 002b  ld   $2b
              c72f 0032  ld   $32
              c730 00b8  ld   $b8
              c731 00b4  ld   $b4
              c732 0035  ld   $35
              c733 004d  ld   $4d
              c734 00a8  ld   $a8
              c735 0011  ld   $11
              c736 0066  ld   $66
              c737 0003  ld   $03
              c738 00cf  ld   $cf
              c739 0018  ld   $18
              c73a 0021  ld   $21
              c73b 0030  ld   $30
              c73c 0099  ld   $99
              c73d 0030  ld   $30
              c73e 002b  ld   $2b
              c73f 00c0  ld   $c0
              c740 0011  ld   $11
              c741 00f9  ld   $f9
              c742 0001  ld   $01
              c743 002b  ld   $2b
              c744 0082  ld   $82
              c745 0021  ld   $21
              c746 00c0  ld   $c0
              c747 00f0  ld   $f0
              c748 0082  ld   $82
              c749 0021  ld   $21
              c74a 0030  ld   $30
              c74b 0099  ld   $99
              c74c 00b2  ld   $b2
              c74d 002b  ld   $2b
              c74e 0030  ld   $30
              c74f 00b8  ld   $b8
              c750 00b0  ld   $b0
              c751 0035  ld   $35
              c752 0050  ld   $50
              c753 00c7  ld   $c7
              c754 0011  ld   $11
              c755 00c0  ld   $c0
              c756 0002  ld   $02
              c757 00cf  ld   $cf
              c758 0018  ld   $18
              c759 0011  ld   $11
              c75a 00f9  ld   $f9
              c75b 0001  ld   $01
              c75c 002b  ld   $2b
              c75d 0082  ld   $82
              c75e 0059  ld   $59
              c75f 0000  ld   $00
              c760 00f0  ld   $f0
              c761 0082  ld   $82
              c762 0059  ld   $59
              c763 0000  ld   $00
              c764 002b  ld   $2b
              c765 0032  ld   $32
              c766 0059  ld   $59
              c767 0008  ld   $08
              c768 002b  ld   $2b
              c769 004c  ld   $4c
              c76a 0003  ld   $03
              c76b 00da  ld   $da
              c76c 001f  ld   $1f
              c76d 0021  ld   $21
              c76e 0032  ld   $32
              c76f 0082  ld   $82
              c770 00ff  ld   $ff
              c771 002b  ld   $2b
              c772 0034  ld   $34
              c773 0059  ld   $59
              c774 0000  ld   $00
              c775 002b  ld   $2b
              c776 0036  ld   $36
              c777 0011  ld   $11
              c778 00f0  ld   $f0
              c779 0001  ld   $01
              c77a 002b  ld   $2b
              c77b 004e  ld   $4e
              c77c 0021  ld   $21
              c77d 0042  ld   $42
              c77e 002b  ld   $2b
              c77f 003c  ld   $3c
              c780 0011  ld   $11
              c781 00a7  ld   $a7
              c782 0004  ld   $04
              c783 00cf  ld   $cf
              c784 0018  ld   $18
              c785 002b  ld   $2b
              c786 00de  ld   $de
              c787 0011  ld   $11
              c788 0000  ld   $00
              c789 0004  ld   $04
              c78a 00cf  ld   $cf
              c78b 0018  ld   $18
              c78c 0004  ld   $04
              c78d 0000  ld   $00
              c78e 000e  ld   $0e
              c78f 0021  ld   $21
              c790 00de  ld   $de
              c791 0059  ld   $59
              c792 0000  ld   $00
              c793 002b  ld   $2b
              c794 0030  ld   $30
              c795 0021  ld   $21
              c796 003a  ld   $3a
              c797 002b  ld   $2b
              c798 00b0  ld   $b0
              c799 0059  ld   $59
              c79a 0001  ld   $01
              c79b 002b  ld   $2b
              c79c 00b2  ld   $b2
              c79d 0004  ld   $04
              c79e 000e  ld   $0e
              c79f 002e  ld   $2e
              c7a0 0021  ld   $21
              c7a1 0036  ld   $36
              c7a2 0099  ld   $99
              c7a3 0034  ld   $34
              c7a4 002b  ld   $2b
              c7a5 0036  ld   $36
              c7a6 0021  ld   $21
              c7a7 0030  ld   $30
              c7a8 0099  ld   $99
              c7a9 00b2  ld   $b2
              c7aa 002b  ld   $2b
              c7ab 0030  ld   $30
              c7ac 00b8  ld   $b8
              c7ad 00b0  ld   $b0
              c7ae 0035  ld   $35
              c7af 004d  ld   $4d
              c7b0 0022  ld   $22
              c7b1 0011  ld   $11
              c7b2 000e  ld   $0e
              c7b3 0004  ld   $04
              c7b4 00cf  ld   $cf
              c7b5 0018  ld   $18
              c7b6 0021  ld   $21
              c7b7 0034  ld   $34
              c7b8 0099  ld   $99
              c7b9 0034  ld   $34
              c7ba 002b  ld   $2b
              c7bb 0034  ld   $34
              c7bc 0011  ld   $11
              c7bd 0001  ld   $01
              c7be 0001  ld   $01
              c7bf 0099  ld   $99
              c7c0 0042  ld   $42
              c7c1 0099  ld   $99
              c7c2 0042  ld   $42
              c7c3 002b  ld   $2b
              c7c4 004a  ld   $4a
              c7c5 0059  ld   $59
              c7c6 0001  ld   $01
              c7c7 002b  ld   $2b
              c7c8 0082  ld   $82
              c7c9 0011  ld   $11
              c7ca 00a0  ld   $a0
              c7cb 0023  ld   $23
              c7cc 00cf  ld   $cf
              c7cd 0018  ld   $18
              c7ce 0004  ld   $04
              c7cf 003c  ld   $3c
              c7d0 0035  ld   $35
              c7d1 001a  ld   $1a
              c7d2 0037  ld   $37
              c7d3 00f0  ld   $f0
              c7d4 004a  ld   $4a
              c7d5 0021  ld   $21
              c7d6 0036  ld   $36
              c7d7 0082  ld   $82
              c7d8 00ff  ld   $ff
              c7d9 0099  ld   $99
              c7da 0034  ld   $34
              c7db 002b  ld   $2b
              c7dc 0036  ld   $36
              c7dd 0021  ld   $21
              c7de 004a  ld   $4a
              c7df 00e3  ld   $e3
              c7e0 0004  ld   $04
              c7e1 002b  ld   $2b
              c7e2 004a  ld   $4a
              c7e3 00b8  ld   $b8
              c7e4 004e  ld   $4e
              c7e5 0035  ld   $35
              c7e6 0053  ld   $53
              c7e7 0056  ld   $56
              c7e8 0011  ld   $11
              c7e9 003c  ld   $3c
              c7ea 0004  ld   $04
              c7eb 00cf  ld   $cf
              c7ec 0018  ld   $18
              c7ed 0059  ld   $59
              c7ee 0011  ld   $11
              c7ef 00ad  ld   $ad
              c7f0 002b  ld   $2b
              c7f1 0082  ld   $82
              c7f2 0059  ld   $59
              c7f3 0000  ld   $00
              c7f4 002b  ld   $2b
              c7f5 0084  ld   $84
              c7f6 0011  ld   $11
              c7f7 00bb  ld   $bb
              c7f8 0023  ld   $23
              c7f9 00cf  ld   $cf
              c7fa 0018  ld   $18
              c7fb fe00  bra  ac          ;+-----------------------------------+
              c7fc fcfd  bra  $c7fd       ;|                                   |
              c7fd 1418  ld   $18,y       ;| Trampoline for page $c700 lookups |
              c7fe e006  jmp  y,$06       ;|                                   |
              c7ff c218  st   [$18]       ;+-----------------------------------+
              c800 0021  ld   $21
              c801 0032  ld   $32
              c802 0099  ld   $99
              c803 004c  ld   $4c
              c804 002b  ld   $2b
              c805 0032  ld   $32
              c806 0011  ld   $11
              c807 00da  ld   $da
              c808 0003  ld   $03
              c809 00cf  ld   $cf
              c80a 0018  ld   $18
              c80b 0004  ld   $04
              c80c 0071  ld   $71
              c80d 0010  ld   $10
              c80e 0075  ld   $75
              c80f 0021  ld   $21
              c810 004c  ld   $4c
              c811 00e3  ld   $e3
              c812 0001  ld   $01
              c813 002b  ld   $2b
              c814 004c  ld   $4c
              c815 00e6  ld   $e6
              c816 0020  ld   $20
              c817 0035  ld   $35
              c818 0056  ld   $56
              c819 007f  ld   $7f
              c81a 0059  ld   $59
              c81b 0020  ld   $20
              c81c 002b  ld   $2b
              c81d 004c  ld   $4c
              c81e 0004  ld   $04
              c81f 0081  ld   $81
              c820 0002  ld   $02
              c821 0063  ld   $63
              c822 00ff  ld   $ff
              c823 0004  ld   $04
              c824 0083  ld   $83
              c825 0014  ld   $14
              c826 0075  ld   $75
              c827 0021  ld   $21
              c828 004c  ld   $4c
              c829 00e6  ld   $e6
              c82a 0001  ld   $01
              c82b 002b  ld   $2b
              c82c 004c  ld   $4c
              c82d 0011  ld   $11
              c82e 00e0  ld   $e0
              c82f 00ff  ld   $ff
              c830 00b8  ld   $b8
              c831 004c  ld   $4c
              c832 0035  ld   $35
              c833 0050  ld   $50
              c834 0095  ld   $95
              c835 0011  ld   $11
              c836 00e0  ld   $e0
              c837 00ff  ld   $ff
              c838 002b  ld   $2b
              c839 004c  ld   $4c
              c83a 0004  ld   $04
              c83b 0097  ld   $97
              c83c 0002  ld   $02
              c83d 0063  ld   $63
              c83e 00ff  ld   $ff
              c83f 0004  ld   $04
              c840 0099  ld   $99
              c841 0007  ld   $07
              c842 0075  ld   $75
              c843 0059  ld   $59
              c844 0000  ld   $00
              c845 002b  ld   $2b
              c846 004c  ld   $4c
              c847 0063  ld   $63
              c848 00ff  ld   $ff
              c849 0004  ld   $04
              c84a 00a0  ld   $a0
              c84b 0007  ld   $07
              c84c 0075  ld   $75
              c84d 0059  ld   $59
              c84e 0000  ld   $00
              c84f 002b  ld   $2b
              c850 004c  ld   $4c
              c851 0063  ld   $63
              c852 00ff  ld   $ff
              c853 0004  ld   $04
              c854 00a7  ld   $a7
              c855 0017  ld   $17
              c856 0075  ld   $75
              c857 0011  ld   $11
              c858 00e9  ld   $e9
              c859 00ff  ld   $ff
              c85a 0099  ld   $99
              c85b 003c  ld   $3c
              c85c 002b  ld   $2b
              c85d 003a  ld   $3a
              c85e 0021  ld   $21
              c85f 003a  ld   $3a
              c860 00e3  ld   $e3
              c861 0001  ld   $01
              c862 002b  ld   $2b
              c863 00c0  ld   $c0
              c864 0011  ld   $11
              c865 00fe  ld   $fe
              c866 00ff  ld   $ff
              c867 00f8  ld   $f8
              c868 00c0  ld   $c0
              c869 002b  ld   $2b
              c86a 003a  ld   $3a
              c86b 0063  ld   $63
              c86c 00ff  ld   $ff
              c86d 0004  ld   $04
              c86e 00be  ld   $be
              c86f 0002  ld   $02
              c870 0090  ld   $90
              c871 00bc  ld   $bc
              c872 0022  ld   $22
              c873 00a0  ld   $a0
              c874 0008  ld   $08
              c875 0071  ld   $71
              c876 0004  ld   $04
              c877 0083  ld   $83
              c878 0004  ld   $04
              c879 0099  ld   $99
              c87a 0004  ld   $04
              c87b 00a0  ld   $a0
              c87c 0004  ld   $04
              c87d 0022  ld   $22
              c87e 00a8  ld   $a8
              c87f 001f  ld   $1f
              c880 0075  ld   $75
              c881 0059  ld   $59
              c882 0008  ld   $08
              c883 002b  ld   $2b
              c884 0098  ld   $98
              c885 0011  ld   $11
              c886 0000  ld   $00
              c887 0001  ld   $01
              c888 002b  ld   $2b
              c889 009a  ld   $9a
              c88a 00cf  ld   $cf
              c88b 00dc  ld   $dc
              c88c 0021  ld   $21
              c88d 0098  ld   $98
              c88e 00f3  ld   $f3
              c88f 009a  ld   $9a
              c890 0093  ld   $93
              c891 009a  ld   $9a
              c892 0093  ld   $93
              c893 009a  ld   $9a
              c894 0093  ld   $93
              c895 0098  ld   $98
              c896 001a  ld   $1a
              c897 0098  ld   $98
              c898 00e6  ld   $e6
              c899 0080  ld   $80
              c89a 0035  ld   $35
              c89b 0050  ld   $50
              c89c 00b0  ld   $b0
              c89d 0063  ld   $63
              c89e 00ff  ld   $ff
              c89f 0023  ld   $23
              c8a0 00a0  ld   $a0
              c8a1 001b  ld   $1b
              c8a2 0021  ld   $21
              c8a3 0082  ld   $82
              c8a4 00e6  ld   $e6
              c8a5 0001  ld   $01
              c8a6 002b  ld   $2b
              c8a7 0082  ld   $82
              c8a8 0035  ld   $35
              c8a9 0053  ld   $53
              c8aa 00a8  ld   $a8
              c8ab 00ff  ld   $ff
              c8ac 001a  ld   $1a
              c8ad 000e  ld   $0e
              c8ae 00b8  ld   $b8
              c8af 00aa  ld   $aa
              c8b0 0035  ld   $35
              c8b1 003f  ld   $3f
              c8b2 00a8  ld   $a8
              c8b3 001a  ld   $1a
              c8b4 000e  ld   $0e
              c8b5 002b  ld   $2b
              c8b6 00aa  ld   $aa
              c8b7 0075  ld   $75
              c8b8 00cf  ld   $cf
              c8b9 00dc  ld   $dc
              c8ba 0063  ld   $63
              c8bb 0090  ld   $90
              c8bc 009e  ld   $9e
              c8bd 0023  ld   $23
              c8be 00bb  ld   $bb
              c8bf 003a  ld   $3a
              c8c0 0075  ld   $75
              c8c1 0011  ld   $11
              c8c2 00f5  ld   $f5
              c8c3 0023  ld   $23
              c8c4 002b  ld   $2b
              c8c5 0086  ld   $86
              c8c6 002b  ld   $2b
              c8c7 0092  ld   $92
              c8c8 0011  ld   $11
              c8c9 00a0  ld   $a0
              c8ca 0022  ld   $22
              c8cb 002b  ld   $2b
              c8cc 0088  ld   $88
              c8cd 0021  ld   $21
              c8ce 0092  ld   $92
              c8cf 00f6  ld   $f6
              c8d0 002b  ld   $2b
              c8d1 0094  ld   $94
              c8d2 001a  ld   $1a
              c8d3 0095  ld   $95
              c8d4 0082  ld   $82
              c8d5 0080  ld   $80
              c8d6 0035  ld   $35
              c8d7 003f  ld   $3f
              c8d8 00db  ld   $db
              c8d9 0021  ld   $21
              c8da 0084  ld   $84
              c8db 0035  ld   $35
              c8dc 003f  ld   $3f
              c8dd 00d9  ld   $d9
              c8de 00cf  ld   $cf
              c8df 0084  ld   $84
              c8e0 0063  ld   $63
              c8e1 00ff  ld   $ff
              c8e2 0021  ld   $21
              c8e3 0094  ld   $94
              c8e4 00b8  ld   $b8
              c8e5 0082  ld   $82
              c8e6 0035  ld   $35
              c8e7 003f  ld   $3f
              c8e8 00e8  ld   $e8
              c8e9 0093  ld   $93
              c8ea 0092  ld   $92
              c8eb 0093  ld   $93
              c8ec 0092  ld   $92
              c8ed 0090  ld   $90
              c8ee 00c6  ld   $c6
              c8ef 0021  ld   $21
              c8f0 0092  ld   $92
              c8f1 00b8  ld   $b8
              c8f2 0086  ld   $86
              c8f3 0099  ld   $99
              c8f4 0088  ld   $88
              c8f5 00f6  ld   $f6
              c8f6 00cf  ld   $cf
              c8f7 0018  ld   $18
              c8f8 0063  ld   $63
              c8f9 00ff  ld   $ff
              c8fa 0023  ld   $23
              c8fb fe00  bra  ac          ;+-----------------------------------+
              c8fc fcfd  bra  $c8fd       ;|                                   |
              c8fd 1418  ld   $18,y       ;| Trampoline for page $c800 lookups |
              c8fe e006  jmp  y,$06       ;|                                   |
              c8ff c218  st   [$18]       ;+-----------------------------------+
              c900 00f5  ld   $f5
              c901 000a  ld   $0a
              c902 00fe  ld   $fe
              c903 0000  ld   $00
              c904 00fd  ld   $fd
              c905 0000  ld   $00
              c906 00bf  ld   $bf
              c907 0000  ld   $00
              c908 007f  ld   $7f
              c909 0000  ld   $00
              c90a 00ff  ld   $ff
              c90b 00ff  ld   $ff
              c90c 0024  ld   $24
              c90d 00a0  ld   $a0
              c90e 005a  ld   $5a
              c90f 0021  ld   $21
              c910 0082  ld   $82
              c911 00fc  ld   $fc
              c912 0084  ld   $84
              c913 002b  ld   $2b
              c914 0094  ld   $94
              c915 0021  ld   $21
              c916 0082  ld   $82
              c917 0035  ld   $35
              c918 0053  ld   $53
              c919 00af  ld   $af
              c91a 0059  ld   $59
              c91b 0000  ld   $00
              c91c 00b8  ld   $b8
              c91d 0082  ld   $82
              c91e 002b  ld   $2b
              c91f 0082  ld   $82
              c920 0021  ld   $21
              c921 0084  ld   $84
              c922 0035  ld   $35
              c923 0053  ld   $53
              c924 00ba  ld   $ba
              c925 0059  ld   $59
              c926 0000  ld   $00
              c927 00b8  ld   $b8
              c928 0084  ld   $84
              c929 002b  ld   $2b
              c92a 0084  ld   $84
              c92b 0059  ld   $59
              c92c 0000  ld   $00
              c92d 002b  ld   $2b
              c92e 0092  ld   $92
              c92f 002b  ld   $2b
              c930 0096  ld   $96
              c931 0021  ld   $21
              c932 0092  ld   $92
              c933 0099  ld   $99
              c934 0092  ld   $92
              c935 002b  ld   $2b
              c936 0092  ld   $92
              c937 0021  ld   $21
              c938 0082  ld   $82
              c939 0035  ld   $35
              c93a 0053  ld   $53
              c93b 00cd  ld   $cd
              c93c 0093  ld   $93
              c93d 0092  ld   $92
              c93e 0021  ld   $21
              c93f 0082  ld   $82
              c940 0099  ld   $99
              c941 0082  ld   $82
              c942 002b  ld   $2b
              c943 0082  ld   $82
              c944 0021  ld   $21
              c945 0092  ld   $92
              c946 00b8  ld   $b8
              c947 0084  ld   $84
              c948 0035  ld   $35
              c949 0050  ld   $50
              c94a 00de  ld   $de
              c94b 002b  ld   $2b
              c94c 0092  ld   $92
              c94d 0093  ld   $93
              c94e 0082  ld   $82
              c94f 0075  ld   $75
              c950 00cf  ld   $cf
              c951 00dc  ld   $dc
              c952 0063  ld   $63
              c953 0021  ld   $21
              c954 0096  ld   $96
              c955 00e3  ld   $e3
              c956 0001  ld   $01
              c957 0082  ld   $82
              c958 000f  ld   $0f
              c959 0035  ld   $35
              c95a 0072  ld   $72
              c95b 00be  ld   $be
              c95c 0021  ld   $21
              c95d 0094  ld   $94
              c95e 0035  ld   $35
              c95f 0053  ld   $53
              c960 00f5  ld   $f5
              c961 0059  ld   $59
              c962 0000  ld   $00
              c963 00b8  ld   $b8
              c964 0082  ld   $82
              c965 00ff  ld   $ff
              c966 0021  ld   $21
              c967 0082  ld   $82
              c968 00ff  ld   $ff
              c969 0025  ld   $25
              c96a 00a0  ld   $a0
              c96b 0023  ld   $23
              c96c 0075  ld   $75
              c96d 0011  ld   $11
              c96e 00a8  ld   $a8
              c96f 0022  ld   $22
              c970 00cf  ld   $cf
              c971 0018  ld   $18
              c972 0011  ld   $11
              c973 0002  ld   $02
              c974 0000  ld   $00
              c975 002b  ld   $2b
              c976 00a4  ld   $a4
              c977 0011  ld   $11
              c978 00ff  ld   $ff
              c979 007f  ld   $7f
              c97a 00f8  ld   $f8
              c97b 00ac  ld   $ac
              c97c 002b  ld   $2b
              c97d 00ac  ld   $ac
              c97e 001a  ld   $1a
              c97f 00a2  ld   $a2
              c980 005e  ld   $5e
              c981 0024  ld   $24
              c982 005e  ld   $5e
              c983 0025  ld   $25
              c984 005e  ld   $5e
              c985 0026  ld   $26
              c986 005e  ld   $5e
              c987 0027  ld   $27
              c988 0011  ld   $11
              c989 00d4  ld   $d4
              c98a 0004  ld   $04
              c98b 002b  ld   $2b
              c98c 0022  ld   $22
              c98d 0063  ld   $63
              c98e 00ff  ld   $ff
              c98f 0025  ld   $25
              c990 00c3  ld   $c3
              c991 003a  ld   $3a
              c992 0075  ld   $75
              c993 0011  ld   $11
              c994 00a0  ld   $a0
              c995 0025  ld   $25
              c996 00cf  ld   $cf
              c997 0018  ld   $18
              c998 0011  ld   $11
              c999 0000  ld   $00
              c99a 0008  ld   $08
              c99b 002b  ld   $2b
              c99c 0028  ld   $28
              c99d 001a  ld   $1a
              c99e 0029  ld   $29
              c99f 005e  ld   $5e
              c9a0 0094  ld   $94
              c9a1 00cf  ld   $cf
              c9a2 00dc  ld   $dc
              c9a3 001a  ld   $1a
              c9a4 0094  ld   $94
              c9a5 005e  ld   $5e
              c9a6 0029  ld   $29
              c9a7 00b4  ld   $b4
              c9a8 00ff  ld   $ff
              c9a9 0011  ld   $11
              c9aa 0087  ld   $87
              c9ab 0000  ld   $00
              c9ac 00b8  ld   $b8
              c9ad 0094  ld   $94
              c9ae 005e  ld   $5e
              c9af 0029  ld   $29
              c9b0 00b4  ld   $b4
              c9b1 00ff  ld   $ff
              c9b2 001a  ld   $1a
              c9b3 0028  ld   $28
              c9b4 00e3  ld   $e3
              c9b5 0004  ld   $04
              c9b6 005e  ld   $5e
              c9b7 0028  ld   $28
              c9b8 00e6  ld   $e6
              c9b9 00a0  ld   $a0
              c9ba 0035  ld   $35
              c9bb 0050  ld   $50
              c9bc 00d0  ld   $d0
              c9bd 0059  ld   $59
              c9be 0000  ld   $00
              c9bf 005e  ld   $5e
              c9c0 0028  ld   $28
              c9c1 0093  ld   $93
              c9c2 0094  ld   $94
              c9c3 001a  ld   $1a
              c9c4 0094  ld   $94
              c9c5 00e6  ld   $e6
              c9c6 0044  ld   $44
              c9c7 0035  ld   $35
              c9c8 0050  ld   $50
              c9c9 00d0  ld   $d0
              c9ca 0063  ld   $63
              c9cb 00ff  ld   $ff
              c9cc 0026  ld   $26
              c9cd 00a0  ld   $a0
              c9ce 000a  ld   $0a
              c9cf 0000  ld   $00
              c9d0 0000  ld   $00
              c9d1 0000  ld   $00
              * 10 times
              c9d9 0026  ld   $26
              c9da 00aa  ld   $aa
              c9db 000a  ld   $0a
              c9dc 0000  ld   $00
              c9dd 0000  ld   $00
              c9de 0000  ld   $00
              * 10 times
              c9e6 0026  ld   $26
              c9e7 00b4  ld   $b4
              c9e8 0009  ld   $09
              c9e9 0075  ld   $75
              c9ea 0011  ld   $11
              c9eb 00bc  ld   $bc
              c9ec 0026  ld   $26
              c9ed 00cf  ld   $cf
              c9ee 0018  ld   $18
              c9ef 0063  ld   $63
              c9f0 00ff  ld   $ff
              c9f1 00ff  ld   $ff
              c9f2 0026  ld   $26
              c9f3 00bd  ld   $bd
              c9f4 0009  ld   $09
              c9f5 0035  ld   $35
              c9f6 003f  ld   $3f
              c9f7 00c1  ld   $c1
              c9f8 0059  ld   $59
              c9f9 0000  ld   $00
              c9fa 00ff  ld   $ff
              c9fb fe00  bra  ac          ;+-----------------------------------+
              c9fc fcfd  bra  $c9fd       ;|                                   |
              c9fd 1418  ld   $18,y       ;| Trampoline for page $c900 lookups |
              c9fe e006  jmp  y,$06       ;|                                   |
              c9ff c218  st   [$18]       ;+-----------------------------------+
              ca00 0059  ld   $59
              ca01 0001  ld   $01
              ca02 00ff  ld   $ff
              ca03 0026  ld   $26
              ca04 00c6  ld   $c6
              ca05 0009  ld   $09
              ca06 0035  ld   $35
              ca07 0072  ld   $72
              ca08 00ca  ld   $ca
              ca09 0059  ld   $59
              ca0a 0000  ld   $00
              ca0b 00ff  ld   $ff
              ca0c 0059  ld   $59
              ca0d 0001  ld   $01
              ca0e 00ff  ld   $ff
              ca0f 0026  ld   $26
              ca10 00cf  ld   $cf
              ca11 0009  ld   $09
              ca12 0035  ld   $35
              ca13 0056  ld   $56
              ca14 00d3  ld   $d3
              ca15 0059  ld   $59
              ca16 0000  ld   $00
              ca17 00ff  ld   $ff
              ca18 0059  ld   $59
              ca19 0001  ld   $01
              ca1a 00ff  ld   $ff
              ca1b 0026  ld   $26
              ca1c 00d8  ld   $d8
              ca1d 0009  ld   $09
              ca1e 0035  ld   $35
              ca1f 0053  ld   $53
              ca20 00dc  ld   $dc
              ca21 0059  ld   $59
              ca22 0000  ld   $00
              ca23 00ff  ld   $ff
              ca24 0059  ld   $59
              ca25 0001  ld   $01
              ca26 00ff  ld   $ff
              ca27 0026  ld   $26
              ca28 00e1  ld   $e1
              ca29 0009  ld   $09
              ca2a 0035  ld   $35
              ca2b 0050  ld   $50
              ca2c 00e5  ld   $e5
              ca2d 0059  ld   $59
              ca2e 0000  ld   $00
              ca2f 00ff  ld   $ff
              ca30 0059  ld   $59
              ca31 0001  ld   $01
              ca32 00ff  ld   $ff
              ca33 0026  ld   $26
              ca34 00ea  ld   $ea
              ca35 0009  ld   $09
              ca36 0035  ld   $35
              ca37 004d  ld   $4d
              ca38 00ee  ld   $ee
              ca39 0059  ld   $59
              ca3a 0000  ld   $00
              ca3b 00ff  ld   $ff
              ca3c 0059  ld   $59
              ca3d 0001  ld   $01
              ca3e 00ff  ld   $ff
              ca3f 0026  ld   $26
              ca40 00f3  ld   $f3
              ca41 000a  ld   $0a
              ca42 0011  ld   $11
              ca43 0000  ld   $00
              ca44 0006  ld   $06
              ca45 002b  ld   $2b
              ca46 0022  ld   $22
              ca47 0021  ld   $21
              ca48 0098  ld   $98
              ca49 00b4  ld   $b4
              ca4a 00f6  ld   $f6
              ca4b 00ff  ld   $ff
              ca4c 0000  ld   $00
              ca4d 0000  ld   $00         ;End of Apps/Horizon/Horizon_at67_v1.gt1, size 1248
                                          ;+-----------------------------------+
                                          ;| gbas/browser/Browser_SDCard_ROMvX0.gt1 |
                                          ;+-----------------------------------+
              ca4e dc45  st   $45,[y,x++] ;'E'
              ca4f dc67  st   $67,[y,x++] ;'g'
              ca50 dc67  st   $67,[y,x++] ;'g'
              ca51 dc00  st   $00,[y,x++] ;'\x00'
              ca52 dc00  st   $00,[y,x++] ;'\x00'
              ca53 dc00  st   $00,[y,x++] ;'\x00'
              ca54 dc00  st   $00,[y,x++] ;'\x00'
              ca55 dc00  st   $00,[y,x++] ;'\x00'
              ca56 006e  ld   $6e
              ca57 c218  st   [$18]
              ca58 00c5  ld   $c5
              ca59 14f3  ld   $f3,y
              ca5a e019  jmp  y,$19
              ca5b c219  st   [$19]
SDCard:       ca5c 0000  ld   $00
              ca5d 007e  ld   $7e
              ca5e 0002  ld   $02
              ca5f 0001  ld   $01
              ca60 0001  ld   $01
              ca61 0002  ld   $02
              ca62 0000  ld   $00
              ca63 00f8  ld   $f8
              ca64 0059  ld   $59
              ca65 0080  ld   $80
              ca66 002b  ld   $2b
              ca67 0082  ld   $82
              ca68 0011  ld   $11
              ca69 00a5  ld   $a5
              ca6a 0064  ld   $64
              ca6b 00cf  ld   $cf
              ca6c 0018  ld   $18
              ca6d 0011  ld   $11
              ca6e 0020  ld   $20
              ca6f 000f  ld   $0f
              ca70 002b  ld   $2b
              ca71 00a2  ld   $a2
              ca72 00c7  ld   $c7
              ca73 0003  ld   $03
              ca74 0069  ld   $69
              ca75 0021  ld   $21
              ca76 004d  ld   $4d
              ca77 0002  ld   $02
              ca78 00aa  ld   $aa
              ca79 004d  ld   $4d
              ca7a 0000  ld   $00
              ca7b 00d6  ld   $d6
              ca7c 004d  ld   $4d
              ca7d 0000  ld   $00
              ca7e 00a6  ld   $a6
              ca7f 0016  ld   $16
              ca80 0000  ld   $00
              ca81 002d  ld   $2d
              ca82 004d  ld   $4d
              ca83 0000  ld   $00
              ca84 002e  ld   $2e
              ca85 0085  ld   $85
              ca86 00e1  ld   $e1
              ca87 0060  ld   $60
              ca88 0011  ld   $11
              ca89 00fe  ld   $fe
              ca8a 007c  ld   $7c
              ca8b 002b  ld   $2b
              ca8c 0084  ld   $84
              ca8d 0011  ld   $11
              ca8e 00a0  ld   $a0
              ca8f 007d  ld   $7d
              ca90 0085  ld   $85
              ca91 00a2  ld   $a2
              ca92 0062  ld   $62
              ca93 0011  ld   $11
              ca94 00fe  ld   $fe
              ca95 007c  ld   $7c
              ca96 002b  ld   $2b
              ca97 0084  ld   $84
              ca98 0011  ld   $11
              ca99 00a0  ld   $a0
              ca9a 007b  ld   $7b
              ca9b 0085  ld   $85
              ca9c 00a2  ld   $a2
              ca9d 0062  ld   $62
              ca9e 0011  ld   $11
              ca9f 00fe  ld   $fe
              caa0 007c  ld   $7c
              caa1 002b  ld   $2b
              caa2 0084  ld   $84
              caa3 0011  ld   $11
              caa4 00a0  ld   $a0
              caa5 007a  ld   $7a
              caa6 0085  ld   $85
              caa7 00a2  ld   $a2
              caa8 0062  ld   $62
              caa9 0085  ld   $85
              caaa 00c4  ld   $c4
              caab 0009  ld   $09
              caac 0085  ld   $85
              caad 00e1  ld   $e1
              caae 0008  ld   $08
              caaf 0085  ld   $85
              cab0 00b3  ld   $b3
              cab1 0009  ld   $09
              cab2 0085  ld   $85
              cab3 00b1  ld   $b1
              cab4 0004  ld   $04
              cab5 0085  ld   $85
              cab6 00f2  ld   $f2
              cab7 0008  ld   $08
              cab8 0085  ld   $85
              cab9 009c  ld   $9c
              caba 0002  ld   $02
              cabb 0085  ld   $85
              cabc 00e7  ld   $e7
              cabd 0002  ld   $02
              cabe 0021  ld   $21
              cabf 003e  ld   $3e
              cac0 00bb  ld   $bb
              cac1 004f  ld   $4f
              cac2 0002  ld   $02
              cac3 0085  ld   $85
              cac4 00a5  ld   $a5
              cac5 0009  ld   $09
              cac6 0085  ld   $85
              cac7 003a  ld   $3a
              cac8 0003  ld   $03
              cac9 004d  ld   $4d
              caca 0000  ld   $00
              cacb 0048  ld   $48
              cacc 004d  ld   $4d
              cacd 00ff  ld   $ff
              cace 004a  ld   $4a
              cacf 002f  ld   $2f
              cad0 00d6  ld   $d6
              cad1 006e  ld   $6e
              cad2 0085  ld   $85
              cad3 006e  ld   $6e
              cad4 0005  ld   $05
              cad5 0021  ld   $21
              cad6 0044  ld   $44
              cad7 00bb  ld   $bb
              cad8 0076  ld   $76
              cad9 0002  ld   $02
              cada 0090  ld   $90
              cadb 0043  ld   $43
              cadc 0093  ld   $93
              cadd 0048  ld   $48
              cade 0090  ld   $90
              cadf 0069  ld   $69
              cae0 00b4  ld   $b4
              cae1 0080  ld   $80
              cae2 0075  ld   $75
              cae3 0011  ld   $11
              cae4 0006  ld   $06
              cae5 000b  ld   $0b
              cae6 002b  ld   $2b
              cae7 0022  ld   $22
              cae8 0032  ld   $32
              cae9 0024  ld   $24
              caea 0030  ld   $30
              caeb 004d  ld   $4d
              caec 0001  ld   $01
              caed 0026  ld   $26
              caee 001a  ld   $1a
              caef 0032  ld   $32
              caf0 00e9  ld   $e9
              caf1 00e9  ld   $e9
              caf2 00e9  ld   $e9
              caf3 002b  ld   $2b
              caf4 0027  ld   $27
              caf5 00b4  ld   $b4
              caf6 00e6  ld   $e6
              caf7 002b  ld   $2b
              caf8 0034  ld   $34
              caf9 0021  ld   $21
              cafa 0034  ld   $34
              cafb fe00  bra  ac          ;+-----------------------------------+
              cafc fcfd  bra  $cafd       ;|                                   |
              cafd 1418  ld   $18,y       ;| Trampoline for page $ca00 lookups |
              cafe e006  jmp  y,$06       ;|                                   |
              caff c218  st   [$18]       ;+-----------------------------------+
              cb00 00bd  ld   $bd
              cb01 007d  ld   $7d
              cb02 0002  ld   $02
              cb03 0063  ld   $63
              cb04 00ff  ld   $ff
              cb05 0075  ld   $75
              cb06 0032  ld   $32
              cb07 0022  ld   $22
              cb08 006e  ld   $6e
              cb09 0011  ld   $11
              cb0a 00ae  ld   $ae
              cb0b 007c  ld   $7c
              cb0c 002b  ld   $2b
              cb0d 0028  ld   $28
              cb0e 0032  ld   $32
              cb0f 0024  ld   $24
              cb10 0028  ld   $28
              cb11 0016  ld   $16
              cb12 00cf  ld   $cf
              cb13 0027  ld   $27
              cb14 00b4  ld   $b4
              cb15 00fe  ld   $fe
              cb16 005b  ld   $5b
              cb17 0028  ld   $28
              cb18 008c  ld   $8c
              cb19 00ff  ld   $ff
              cb1a 00bb  ld   $bb
              cb1b 00a3  ld   $a3
              cb1c 0002  ld   $02
              cb1d 0016  ld   $16
              cb1e 00db  ld   $db
              cb1f 0027  ld   $27
              cb20 00b4  ld   $b4
              cb21 00fe  ld   $fe
              cb22 0016  ld   $16
              cb23 00eb  ld   $eb
              cb24 0027  ld   $27
              cb25 00b4  ld   $b4
              cb26 00fe  ld   $fe
              cb27 0016  ld   $16
              cb28 00fb  ld   $fb
              cb29 0027  ld   $27
              cb2a 00b4  ld   $b4
              cb2b 00fe  ld   $fe
              cb2c 0016  ld   $16
              cb2d 003c  ld   $3c
              cb2e 0028  ld   $28
              cb2f 0016  ld   $16
              cb30 0002  ld   $02
              cb31 0027  ld   $27
              cb32 00b4  ld   $b4
              cb33 00fe  ld   $fe
              cb34 001c  ld   $1c
              cb35 0027  ld   $27
              cb36 0027  ld   $27
              cb37 0004  ld   $04
              cb38 009e  ld   $9e
              cb39 00c7  ld   $c7
              cb3a 0028  ld   $28
              cb3b 0016  ld   $16
              cb3c 00b9  ld   $b9
              cb3d 0027  ld   $27
              cb3e 00b4  ld   $b4
              cb3f 00fe  ld   $fe
              cb40 0011  ld   $11
              cb41 00ae  ld   $ae
              cb42 007c  ld   $7c
              cb43 00ad  ld   $ad
              cb44 002b  ld   $2b
              cb45 003e  ld   $3e
              cb46 0011  ld   $11
              cb47 00af  ld   $af
              cb48 007c  ld   $7c
              cb49 00ad  ld   $ad
              cb4a 0082  ld   $82
              cb4b 003f  ld   $3f
              cb4c 002b  ld   $2b
              cb4d 0040  ld   $40
              cb4e 0063  ld   $63
              cb4f 00ff  ld   $ff
              cb50 0075  ld   $75
              cb51 004d  ld   $4d
              cb52 0002  ld   $02
              cb53 004c  ld   $4c
              cb54 0021  ld   $21
              cb55 0040  ld   $40
              cb56 00bd  ld   $bd
              cb57 00f0  ld   $f0
              cb58 0002  ld   $02
              cb59 0063  ld   $63
              cb5a 00ff  ld   $ff
              cb5b 00a7  ld   $a7
              cb5c 0064  ld   $64
              cb5d 0036  ld   $36
              cb5e 0085  ld   $85
              cb5f 0000  ld   $00
              cb60 0003  ld   $03
              cb61 0003  ld   $03
              cb62 0000  ld   $00
              cb63 00f9  ld   $f9
              cb64 00bd  ld   $bd
              cb65 0003  ld   $03
              cb66 0003  ld   $03
              cb67 0063  ld   $63
              cb68 00ff  ld   $ff
              cb69 004d  ld   $4d
              cb6a 0000  ld   $00
              cb6b 004e  ld   $4e
              cb6c 0053  ld   $53
              cb6d 004c  ld   $4c
              cb6e 00ae  ld   $ae
              cb6f 007c  ld   $7c
              cb70 002b  ld   $2b
              cb71 0050  ld   $50
              cb72 0032  ld   $32
              cb73 0096  ld   $96
              cb74 0036  ld   $36
              cb75 0032  ld   $32
              cb76 0098  ld   $98
              cb77 004e  ld   $4e
              cb78 0011  ld   $11
              cb79 0038  ld   $38
              cb7a 0006  ld   $06
              cb7b 0085  ld   $85
              cb7c 00a1  ld   $a1
              cb7d 0078  ld   $78
              cb7e 0069  ld   $69
              cb7f 0050  ld   $50
              cb80 0093  ld   $93
              cb81 004c  ld   $4c
              cb82 0093  ld   $93
              cb83 004e  ld   $4e
              cb84 0021  ld   $21
              cb85 0050  ld   $50
              cb86 00bd  ld   $bd
              cb87 0006  ld   $06
              cb88 0003  ld   $03
              cb89 0093  ld   $93
              cb8a 0036  ld   $36
              cb8b 00a7  ld   $a7
              cb8c 0064  ld   $64
              cb8d 0036  ld   $36
              cb8e 00bd  ld   $bd
              cb8f 002d  ld   $2d
              cb90 0003  ld   $03
              cb91 0063  ld   $63
              cb92 00ff  ld   $ff
              cb93 0021  ld   $21
              cb94 004c  ld   $4c
              cb95 00e6  ld   $e6
              cb96 0002  ld   $02
              cb97 00fc  ld   $fc
              cb98 0040  ld   $40
              cb99 00bd  ld   $bd
              cb9a 0003  ld   $03
              cb9b 0003  ld   $03
              cb9c 0063  ld   $63
              cb9d 00ff  ld   $ff
              cb9e 0075  ld   $75
              cb9f 0044  ld   $44
              cba0 0012  ld   $12
              cba1 00e8  ld   $e8
              cba2 0036  ld   $36
              cba3 0032  ld   $32
              cba4 0082  ld   $82
              cba5 0038  ld   $38
              cba6 0021  ld   $21
              cba7 00e8  ld   $e8
              cba8 0085  ld   $85
              cba9 00b9  ld   $b9
              cbaa 0061  ld   $61
              cbab 002b  ld   $2b
              cbac 0082  ld   $82
              cbad 0059  ld   $59
              cbae 0000  ld   $00
              cbaf 0085  ld   $85
              cbb0 00aa  ld   $aa
              cbb1 0061  ld   $61
              cbb2 002b  ld   $2b
              cbb3 0052  ld   $52
              cbb4 0042  ld   $42
              cbb5 0011  ld   $11
              cbb6 00e8  ld   $e8
              cbb7 0038  ld   $38
              cbb8 0044  ld   $44
              cbb9 0001  ld   $01
              cbba 00ea  ld   $ea
              cbbb 0036  ld   $36
              cbbc 0032  ld   $32
              cbbd 0082  ld   $82
              cbbe 00e8  ld   $e8
              cbbf 0021  ld   $21
              cbc0 00ea  ld   $ea
              cbc1 0085  ld   $85
              cbc2 00b9  ld   $b9
              cbc3 0061  ld   $61
              cbc4 002b  ld   $2b
              cbc5 0054  ld   $54
              cbc6 0032  ld   $32
              cbc7 0056  ld   $56
              cbc8 0052  ld   $52
              cbc9 0032  ld   $32
              cbca 00d8  ld   $d8
              cbcb 0054  ld   $54
              cbcc 0032  ld   $32
              cbcd 0096  ld   $96
              cbce 0056  ld   $56
              cbcf 004d  ld   $4d
              cbd0 0000  ld   $00
              cbd1 0098  ld   $98
              cbd2 0011  ld   $11
              cbd3 0038  ld   $38
              cbd4 0006  ld   $06
              cbd5 0085  ld   $85
              cbd6 00a1  ld   $a1
              cbd7 0078  ld   $78
              cbd8 00e3  ld   $e3
              cbd9 0001  ld   $01
              cbda 002b  ld   $2b
              cbdb 0058  ld   $58
              cbdc 005b  ld   $5b
              cbdd 0058  ld   $58
              cbde 002b  ld   $2b
              cbdf 005a  ld   $5a
              cbe0 0021  ld   $21
              cbe1 0058  ld   $58
              cbe2 00e6  ld   $e6
              cbe3 0001  ld   $01
              cbe4 00ad  ld   $ad
              cbe5 002b  ld   $2b
              cbe6 005c  ld   $5c
              cbe7 0021  ld   $21
              cbe8 0056  ld   $56
              cbe9 00b8  ld   $b8
              cbea 0038  ld   $38
              cbeb 00fc  ld   $fc
              cbec 003a  ld   $3a
              cbed 00bd  ld   $bd
              cbee 00a3  ld   $a3
              cbef 0003  ld   $03
              cbf0 00a7  ld   $a7
              cbf1 0001  ld   $01
              cbf2 005c  ld   $5c
              cbf3 00bd  ld   $bd
              cbf4 0098  ld   $98
              cbf5 0003  ld   $03
              cbf6 0011  ld   $11
              cbf7 003f  ld   $3f
              cbf8 0020  ld   $20
              cbf9 002b  ld   $2b
              cbfa 00a2  ld   $a2
              cbfb fe00  bra  ac          ;+-----------------------------------+
              cbfc fcfd  bra  $cbfd       ;|                                   |
              cbfd 1418  ld   $18,y       ;| Trampoline for page $cb00 lookups |
              cbfe e006  jmp  y,$06       ;|                                   |
              cbff c218  st   [$18]       ;+-----------------------------------+
              cc00 0085  ld   $85
              cc01 009f  ld   $9f
              cc02 0003  ld   $03
              cc03 0011  ld   $11
              cc04 002a  ld   $2a
              cc05 0020  ld   $20
              cc06 002b  ld   $2b
              cc07 00a2  ld   $a2
              cc08 0032  ld   $32
              cc09 0042  ld   $42
              cc0a 0058  ld   $58
              cc0b 0085  ld   $85
              cc0c 00b8  ld   $b8
              cc0d 0003  ld   $03
              cc0e 00a7  ld   $a7
              cc0f 0001  ld   $01
              cc10 005c  ld   $5c
              cc11 00bd  ld   $bd
              cc12 00b1  ld   $b1
              cc13 0003  ld   $03
              cc14 0011  ld   $11
              cc15 0020  ld   $20
              cc16 003f  ld   $3f
              cc17 002b  ld   $2b
              cc18 00a2  ld   $a2
              cc19 0085  ld   $85
              cc1a 00b8  ld   $b8
              cc1b 0003  ld   $03
              cc1c 0011  ld   $11
              cc1d 0020  ld   $20
              cc1e 002a  ld   $2a
              cc1f 002b  ld   $2b
              cc20 00a2  ld   $a2
              cc21 00ab  ld   $ab
              cc22 005e  ld   $5e
              cc23 0038  ld   $38
              cc24 0056  ld   $56
              cc25 0021  ld   $21
              cc26 005e  ld   $5e
              cc27 00bf  ld   $bf
              cc28 00d7  ld   $d7
              cc29 0003  ld   $03
              cc2a 001a  ld   $1a
              cc2b 005e  ld   $5e
              cc2c 00b1  ld   $b1
              cc2d 003d  ld   $3d
              cc2e 005e  ld   $5e
              cc2f 00a5  ld   $a5
              cc30 0016  ld   $16
              cc31 0002  ld   $02
              cc32 00a4  ld   $a4
              cc33 0085  ld   $85
              cc34 00dc  ld   $dc
              cc35 0062  ld   $62
              cc36 0021  ld   $21
              cc37 0058  ld   $58
              cc38 0085  ld   $85
              cc39 00eb  ld   $eb
              cc3a 0061  ld   $61
              cc3b 0059  ld   $59
              cc3c 000c  ld   $0c
              cc3d 00b8  ld   $b8
              cc3e 005a  ld   $5a
              cc3f 0085  ld   $85
              cc40 00d8  ld   $d8
              cc41 0061  ld   $61
              cc42 0095  ld   $95
              cc43 0056  ld   $56
              cc44 00b8  ld   $b8
              cc45 00d8  ld   $d8
              cc46 00c3  ld   $c3
              cc47 0066  ld   $66
              cc48 0003  ld   $03
              cc49 0063  ld   $63
              cc4a 00ff  ld   $ff
              cc4b 0075  ld   $75
              cc4c 0044  ld   $44
              cc4d 0012  ld   $12
              cc4e 00e8  ld   $e8
              cc4f 0036  ld   $36
              cc50 0032  ld   $32
              cc51 0082  ld   $82
              cc52 0038  ld   $38
              cc53 0021  ld   $21
              cc54 00e8  ld   $e8
              cc55 0085  ld   $85
              cc56 00b9  ld   $b9
              cc57 0061  ld   $61
              cc58 002b  ld   $2b
              cc59 0082  ld   $82
              cc5a 0059  ld   $59
              cc5b 0000  ld   $00
              cc5c 0085  ld   $85
              cc5d 00aa  ld   $aa
              cc5e 0061  ld   $61
              cc5f 0085  ld   $85
              cc60 0000  ld   $00
              cc61 0004  ld   $04
              cc62 0004  ld   $04
              cc63 0000  ld   $00
              cc64 00f8  ld   $f8
              cc65 002b  ld   $2b
              cc66 0052  ld   $52
              cc67 00a9  ld   $a9
              cc68 0060  ld   $60
              cc69 003c  ld   $3c
              cc6a 0052  ld   $52
              cc6b 0032  ld   $32
              cc6c 0096  ld   $96
              cc6d 0060  ld   $60
              cc6e 004d  ld   $4d
              cc6f 0000  ld   $00
              cc70 0098  ld   $98
              cc71 0011  ld   $11
              cc72 0038  ld   $38
              cc73 0006  ld   $06
              cc74 0085  ld   $85
              cc75 00a1  ld   $a1
              cc76 0078  ld   $78
              cc77 00e3  ld   $e3
              cc78 0001  ld   $01
              cc79 002b  ld   $2b
              cc7a 0062  ld   $62
              cc7b 005b  ld   $5b
              cc7c 0062  ld   $62
              cc7d 002b  ld   $2b
              cc7e 0064  ld   $64
              cc7f 0021  ld   $21
              cc80 0062  ld   $62
              cc81 00e6  ld   $e6
              cc82 0001  ld   $01
              cc83 00ad  ld   $ad
              cc84 002b  ld   $2b
              cc85 005c  ld   $5c
              cc86 00a7  ld   $a7
              cc87 0001  ld   $01
              cc88 005c  ld   $5c
              cc89 00bd  ld   $bd
              cc8a 002d  ld   $2d
              cc8b 0004  ld   $04
              cc8c 0011  ld   $11
              cc8d 0020  ld   $20
              cc8e 003f  ld   $3f
              cc8f 002b  ld   $2b
              cc90 00a2  ld   $a2
              cc91 0085  ld   $85
              cc92 0034  ld   $34
              cc93 0004  ld   $04
              cc94 0011  ld   $11
              cc95 0020  ld   $20
              cc96 002a  ld   $2a
              cc97 002b  ld   $2b
              cc98 00a2  ld   $a2
              cc99 00ab  ld   $ab
              cc9a 0066  ld   $66
              cc9b 0052  ld   $52
              cc9c 0060  ld   $60
              cc9d 001a  ld   $1a
              cc9e 0066  ld   $66
              cc9f 00b1  ld   $b1
              cca0 003d  ld   $3d
              cca1 005e  ld   $5e
              cca2 00a5  ld   $a5
              cca3 0016  ld   $16
              cca4 0002  ld   $02
              cca5 00a4  ld   $a4
              cca6 0085  ld   $85
              cca7 00dc  ld   $dc
              cca8 0062  ld   $62
              cca9 0021  ld   $21
              ccaa 0062  ld   $62
              ccab 0085  ld   $85
              ccac 00eb  ld   $eb
              ccad 0061  ld   $61
              ccae 0059  ld   $59
              ccaf 000c  ld   $0c
              ccb0 00b8  ld   $b8
              ccb1 0064  ld   $64
              ccb2 0085  ld   $85
              ccb3 00d8  ld   $d8
              ccb4 0061  ld   $61
              ccb5 0032  ld   $32
              ccb6 003c  ld   $3c
              ccb7 003a  ld   $3a
              ccb8 00a9  ld   $a9
              ccb9 0068  ld   $68
              ccba 003a  ld   $3a
              ccbb 0052  ld   $52
              ccbc 0032  ld   $32
              ccbd 0096  ld   $96
              ccbe 0068  ld   $68
              ccbf 004d  ld   $4d
              ccc0 0000  ld   $00
              ccc1 0098  ld   $98
              ccc2 0011  ld   $11
              ccc3 0038  ld   $38
              ccc4 0006  ld   $06
              ccc5 0085  ld   $85
              ccc6 00a1  ld   $a1
              ccc7 0078  ld   $78
              ccc8 00e3  ld   $e3
              ccc9 0001  ld   $01
              ccca 002b  ld   $2b
              cccb 006a  ld   $6a
              cccc 005b  ld   $5b
              cccd 006a  ld   $6a
              ccce 002b  ld   $2b
              cccf 006c  ld   $6c
              ccd0 0021  ld   $21
              ccd1 006a  ld   $6a
              ccd2 00e6  ld   $e6
              ccd3 0001  ld   $01
              ccd4 00ad  ld   $ad
              ccd5 002b  ld   $2b
              ccd6 005c  ld   $5c
              ccd7 00a7  ld   $a7
              ccd8 0001  ld   $01
              ccd9 005c  ld   $5c
              ccda 00bd  ld   $bd
              ccdb 007e  ld   $7e
              ccdc 0004  ld   $04
              ccdd 0011  ld   $11
              ccde 003f  ld   $3f
              ccdf 0020  ld   $20
              cce0 002b  ld   $2b
              cce1 00a2  ld   $a2
              cce2 0085  ld   $85
              cce3 0085  ld   $85
              cce4 0004  ld   $04
              cce5 0011  ld   $11
              cce6 002a  ld   $2a
              cce7 0020  ld   $20
              cce8 002b  ld   $2b
              cce9 00a2  ld   $a2
              ccea 00ab  ld   $ab
              cceb 0066  ld   $66
              ccec 0052  ld   $52
              cced 0068  ld   $68
              ccee 001a  ld   $1a
              ccef 0066  ld   $66
              ccf0 00b1  ld   $b1
              ccf1 003d  ld   $3d
              ccf2 005e  ld   $5e
              ccf3 00a5  ld   $a5
              ccf4 0016  ld   $16
              ccf5 0002  ld   $02
              ccf6 00a4  ld   $a4
              ccf7 0085  ld   $85
              ccf8 00dc  ld   $dc
              ccf9 0062  ld   $62
              ccfa 0021  ld   $21
              ccfb fe00  bra  ac          ;+-----------------------------------+
              ccfc fcfd  bra  $ccfd       ;|                                   |
              ccfd 1418  ld   $18,y       ;| Trampoline for page $cc00 lookups |
              ccfe e006  jmp  y,$06       ;|                                   |
              ccff c218  st   [$18]       ;+-----------------------------------+
              cd00 006a  ld   $6a
              cd01 0085  ld   $85
              cd02 00eb  ld   $eb
              cd03 0061  ld   $61
              cd04 0059  ld   $59
              cd05 000c  ld   $0c
              cd06 00b8  ld   $b8
              cd07 006c  ld   $6c
              cd08 0085  ld   $85
              cd09 00d8  ld   $d8
              cd0a 0061  ld   $61
              cd0b 0032  ld   $32
              cd0c 0042  ld   $42
              cd0d 006a  ld   $6a
              cd0e 0063  ld   $63
              cd0f 00ff  ld   $ff
              cd10 0075  ld   $75
              cd11 004d  ld   $4d
              cd12 0000  ld   $00
              cd13 006e  ld   $6e
              cd14 0011  ld   $11
              cd15 0000  ld   $00
              cd16 001a  ld   $1a
              cd17 002b  ld   $2b
              cd18 006e  ld   $6e
              cd19 0063  ld   $63
              cd1a 00ff  ld   $ff
              cd1b 0075  ld   $75
              cd1c 0011  ld   $11
              cd1d 00ef  ld   $ef
              cd1e 007c  ld   $7c
              cd1f 0025  ld   $25
              cd20 0003  ld   $03
              cd21 0011  ld   $11
              cd22 00a0  ld   $a0
              cd23 007a  ld   $7a
              cd24 00ad  ld   $ad
              cd25 002b  ld   $2b
              cd26 0070  ld   $70
              cd27 0059  ld   $59
              cd28 0002  ld   $02
              cd29 0099  ld   $99
              cd2a 0070  ld   $70
              cd2b 002b  ld   $2b
              cd2c 0032  ld   $32
              cd2d 0021  ld   $21
              cd2e 0070  ld   $70
              cd2f 00c3  ld   $c3
              cd30 00e8  ld   $e8
              cd31 0004  ld   $04
              cd32 0042  ld   $42
              cd33 0001  ld   $01
              cd34 00e8  ld   $e8
              cd35 0070  ld   $70
              cd36 004d  ld   $4d
              cd37 0001  ld   $01
              cd38 0056  ld   $56
              cd39 0042  ld   $42
              cd3a 0001  ld   $01
              cd3b 00d8  ld   $d8
              cd3c 0070  ld   $70
              cd3d 0011  ld   $11
              cd3e 00ef  ld   $ef
              cd3f 007c  ld   $7c
              cd40 0099  ld   $99
              cd41 0056  ld   $56
              cd42 002b  ld   $2b
              cd43 00e8  ld   $e8
              cd44 0053  ld   $53
              cd45 0056  ld   $56
              cd46 00a0  ld   $a0
              cd47 007a  ld   $7a
              cd48 00f0  ld   $f0
              cd49 00e8  ld   $e8
              cd4a 0095  ld   $95
              cd4b 0056  ld   $56
              cd4c 00b8  ld   $b8
              cd4d 00d8  ld   $d8
              cd4e 00c3  ld   $c3
              cd4f 00d1  ld   $d1
              cd50 0004  ld   $04
              cd51 0085  ld   $85
              cd52 00ef  ld   $ef
              cd53 0004  ld   $04
              cd54 0011  ld   $11
              cd55 00f0  ld   $f0
              cd56 007c  ld   $7c
              cd57 0025  ld   $25
              cd58 0000  ld   $00
              cd59 0085  ld   $85
              cd5a 007e  ld   $7e
              cd5b 0002  ld   $02
              cd5c 0085  ld   $85
              cd5d 00c8  ld   $c8
              cd5e 0008  ld   $08
              cd5f 0085  ld   $85
              cd60 0000  ld   $00
              cd61 0005  ld   $05
              cd62 0005  ld   $05
              cd63 0000  ld   $00
              cd64 00ff  ld   $ff
              cd65 0011  ld   $11
              cd66 00fe  ld   $fe
              cd67 007c  ld   $7c
              cd68 002b  ld   $2b
              cd69 0084  ld   $84
              cd6a 0011  ld   $11
              cd6b 00a0  ld   $a0
              cd6c 007a  ld   $7a
              cd6d 0085  ld   $85
              cd6e 00a2  ld   $a2
              cd6f 0062  ld   $62
              cd70 0063  ld   $63
              cd71 00ff  ld   $ff
              cd72 0075  ld   $75
              cd73 0085  ld   $85
              cd74 00e1  ld   $e1
              cd75 0008  ld   $08
              cd76 0011  ld   $11
              cd77 00ef  ld   $ef
              cd78 007c  ld   $7c
              cd79 0025  ld   $25
              cd7a 0002  ld   $02
              cd7b 0032  ld   $32
              cd7c 0084  ld   $84
              cd7d 0042  ld   $42
              cd7e 0011  ld   $11
              cd7f 00a0  ld   $a0
              cd80 007d  ld   $7d
              cd81 0085  ld   $85
              cd82 00a2  ld   $a2
              cd83 0062  ld   $62
              cd84 0011  ld   $11
              cd85 00a0  ld   $a0
              cd86 007d  ld   $7d
              cd87 00ad  ld   $ad
              cd88 002b  ld   $2b
              cd89 0070  ld   $70
              cd8a 0042  ld   $42
              cd8b 0001  ld   $01
              cd8c 00e8  ld   $e8
              cd8d 0070  ld   $70
              cd8e 004d  ld   $4d
              cd8f 0001  ld   $01
              cd90 0056  ld   $56
              cd91 0042  ld   $42
              cd92 0001  ld   $01
              cd93 00d8  ld   $d8
              cd94 0070  ld   $70
              cd95 0011  ld   $11
              cd96 00ef  ld   $ef
              cd97 007c  ld   $7c
              cd98 0099  ld   $99
              cd99 0056  ld   $56
              cd9a 002b  ld   $2b
              cd9b 00e8  ld   $e8
              cd9c 0053  ld   $53
              cd9d 0056  ld   $56
              cd9e 00a0  ld   $a0
              cd9f 007d  ld   $7d
              cda0 00f0  ld   $f0
              cda1 00e8  ld   $e8
              cda2 0095  ld   $95
              cda3 0056  ld   $56
              cda4 00b8  ld   $b8
              cda5 00d8  ld   $d8
              cda6 00c3  ld   $c3
              cda7 002e  ld   $2e
              cda8 0005  ld   $05
              cda9 0011  ld   $11
              cdaa 0000  ld   $00
              cdab 00ff  ld   $ff
              cdac 002b  ld   $2b
              cdad 00a2  ld   $a2
              cdae 0085  ld   $85
              cdaf 00c2  ld   $c2
              cdb0 0062  ld   $62
              cdb1 0085  ld   $85
              cdb2 00a2  ld   $a2
              cdb3 0065  ld   $65
              cdb4 00c7  ld   $c7
              cdb5 00ef  ld   $ef
              cdb6 0066  ld   $66
              cdb7 00aa  ld   $aa
              cdb8 0059  ld   $59
              cdb9 0002  ld   $02
              cdba 0099  ld   $99
              cdbb 0070  ld   $70
              cdbc 002b  ld   $2b
              cdbd 0032  ld   $32
              cdbe 0085  ld   $85
              cdbf 007e  ld   $7e
              cdc0 0002  ld   $02
              cdc1 0016  ld   $16
              cdc2 0000  ld   $00
              cdc3 0004  ld   $04
              cdc4 0016  ld   $16
              cdc5 0000  ld   $00
              cdc6 001c  ld   $1c
              cdc7 0011  ld   $11
              cdc8 0085  ld   $85
              cdc9 00d4  ld   $d4
              cdca 002b  ld   $2b
              cdcb 0024  ld   $24
              cdcc 0059  ld   $59
              cdcd 00a8  ld   $a8
              cdce 0085  ld   $85
              cdcf 00da  ld   $da
              cdd0 0060  ld   $60
              cdd1 0063  ld   $63
              cdd2 00ff  ld   $ff
              cdd3 0075  ld   $75
              cdd4 001a  ld   $1a
              cdd5 000f  ld   $0f
              cdd6 002b  ld   $2b
              cdd7 0072  ld   $72
              cdd8 0021  ld   $21
              cdd9 0072  ld   $72
              cdda 00fc  ld   $fc
              cddb 004a  ld   $4a
              cddc 00bb  ld   $bb
              cddd 0087  ld   $87
              cdde 0005  ld   $05
              cddf 004d  ld   $4d
              cde0 0000  ld   $00
              cde1 0048  ld   $48
              cde2 0032  ld   $32
              cde3 004a  ld   $4a
              cde4 0072  ld   $72
              cde5 0032  ld   $32
              cde6 0082  ld   $82
              cde7 0072  ld   $72
              cde8 004d  ld   $4d
              cde9 0000  ld   $00
              cdea 0084  ld   $84
              cdeb 0085  ld   $85
              cdec 00ce  ld   $ce
              cded 0064  ld   $64
              cdee 0021  ld   $21
              cdef 0048  ld   $48
              cdf0 00e6  ld   $e6
              cdf1 0019  ld   $19
              cdf2 00c3  ld   $c3
              cdf3 00a4  ld   $a4
              cdf4 0005  ld   $05
              cdf5 0021  ld   $21
              cdf6 0048  ld   $48
              cdf7 002f  ld   $2f
              cdf8 0018  ld   $18
              cdf9 0073  ld   $73
              cdfa 002f  ld   $2f
              cdfb fe00  bra  ac          ;+-----------------------------------+
              cdfc fcfd  bra  $cdfd       ;|                                   |
              cdfd 1418  ld   $18,y       ;| Trampoline for page $cd00 lookups |
              cdfe e006  jmp  y,$06       ;|                                   |
              cdff c218  st   [$18]       ;+-----------------------------------+
              ce00 0018  ld   $18
              ce01 0073  ld   $73
              ce02 0082  ld   $82
              ce03 0001  ld   $01
              ce04 00bb  ld   $bb
              ce05 00a4  ld   $a4
              ce06 0005  ld   $05
              ce07 0032  ld   $32
              ce08 0082  ld   $82
              ce09 0072  ld   $72
              ce0a 004d  ld   $4d
              ce0b 0000  ld   $00
              ce0c 0084  ld   $84
              ce0d 0085  ld   $85
              ce0e 00ce  ld   $ce
              ce0f 0064  ld   $64
              ce10 0063  ld   $63
              ce11 00ff  ld   $ff
              ce12 0075  ld   $75
              ce13 0085  ld   $85
              ce14 0020  ld   $20
              ce15 0006  ld   $06
              ce16 0063  ld   $63
              ce17 00ff  ld   $ff
              ce18 0075  ld   $75
              ce19 0085  ld   $85
              ce1a 0020  ld   $20
              ce1b 0006  ld   $06
              ce1c 0063  ld   $63
              ce1d 00ff  ld   $ff
              ce1e 0075  ld   $75
              ce1f 0042  ld   $42
              ce20 0012  ld   $12
              ce21 0038  ld   $38
              ce22 0038  ld   $38
              ce23 0044  ld   $44
              ce24 0012  ld   $12
              ce25 00e8  ld   $e8
              ce26 0036  ld   $36
              ce27 0032  ld   $32
              ce28 0082  ld   $82
              ce29 0038  ld   $38
              ce2a 0021  ld   $21
              ce2b 00e8  ld   $e8
              ce2c 0085  ld   $85
              ce2d 00b9  ld   $b9
              ce2e 0061  ld   $61
              ce2f 002b  ld   $2b
              ce30 0082  ld   $82
              ce31 0059  ld   $59
              ce32 0000  ld   $00
              ce33 0085  ld   $85
              ce34 00aa  ld   $aa
              ce35 0061  ld   $61
              ce36 002b  ld   $2b
              ce37 0038  ld   $38
              ce38 0085  ld   $85
              ce39 003a  ld   $3a
              ce3a 0003  ld   $03
              ce3b 0063  ld   $63
              ce3c 00ff  ld   $ff
              ce3d 0075  ld   $75
              ce3e 0044  ld   $44
              ce3f 0012  ld   $12
              ce40 0038  ld   $38
              ce41 0038  ld   $38
              ce42 0032  ld   $32
              ce43 0082  ld   $82
              ce44 0038  ld   $38
              ce45 0059  ld   $59
              ce46 0000  ld   $00
              ce47 0085  ld   $85
              ce48 00aa  ld   $aa
              ce49 0061  ld   $61
              ce4a 002b  ld   $2b
              ce4b 0038  ld   $38
              ce4c 0085  ld   $85
              ce4d 003a  ld   $3a
              ce4e 0003  ld   $03
              ce4f 0063  ld   $63
              ce50 00ff  ld   $ff
              ce51 0075  ld   $75
              ce52 0093  ld   $93
              ce53 003a  ld   $3a
              ce54 0044  ld   $44
              ce55 0001  ld   $01
              ce56 0082  ld   $82
              ce57 0036  ld   $36
              ce58 0059  ld   $59
              ce59 0011  ld   $11
              ce5a 0085  ld   $85
              ce5b 00b9  ld   $b9
              ce5c 0061  ld   $61
              ce5d 002b  ld   $2b
              ce5e 00ea  ld   $ea
              ce5f 0021  ld   $21
              ce60 003a  ld   $3a
              ce61 00b8  ld   $b8
              ce62 00ea  ld   $ea
              ce63 00c3  ld   $c3
              ce64 0001  ld   $01
              ce65 0006  ld   $06
              ce66 0085  ld   $85
              ce67 0000  ld   $00
              ce68 0006  ld   $06
              ce69 0006  ld   $06
              ce6a 0000  ld   $00
              ce6b 0037  ld   $37
              ce6c 004d  ld   $4d
              ce6d 0000  ld   $00
              ce6e 003a  ld   $3a
              ce6f 0085  ld   $85
              ce70 00e2  ld   $e2
              ce71 0003  ld   $03
              ce72 0063  ld   $63
              ce73 00ff  ld   $ff
              ce74 0075  ld   $75
              ce75 00dd  ld   $dd
              ce76 003a  ld   $3a
              ce77 0021  ld   $21
              ce78 003a  ld   $3a
              ce79 00c5  ld   $c5
              ce7a 0019  ld   $19
              ce7b 0006  ld   $06
              ce7c 0044  ld   $44
              ce7d 0001  ld   $01
              ce7e 0082  ld   $82
              ce7f 0036  ld   $36
              ce80 0059  ld   $59
              ce81 0011  ld   $11
              ce82 0085  ld   $85
              ce83 00b9  ld   $b9
              ce84 0061  ld   $61
              ce85 002b  ld   $2b
              ce86 003a  ld   $3a
              ce87 0085  ld   $85
              ce88 00e2  ld   $e2
              ce89 0003  ld   $03
              ce8a 0063  ld   $63
              ce8b 00ff  ld   $ff
              ce8c 0075  ld   $75
              ce8d 0021  ld   $21
              ce8e 0042  ld   $42
              ce8f 00e6  ld   $e6
              ce90 0001  ld   $01
              ce91 00ad  ld   $ad
              ce92 002b  ld   $2b
              ce93 0074  ld   $74
              ce94 00a7  ld   $a7
              ce95 0001  ld   $01
              ce96 0074  ld   $74
              ce97 00bd  ld   $bd
              ce98 009e  ld   $9e
              ce99 0008  ld   $08
              ce9a 004d  ld   $4d
              ce9b 0000  ld   $00
              ce9c 0044  ld   $44
              ce9d 0085  ld   $85
              ce9e 000d  ld   $0d
              ce9f 0005  ld   $05
              cea0 0085  ld   $85
              cea1 00a0  ld   $a0
              cea2 0008  ld   $08
              cea3 0006  ld   $06
              cea4 0038  ld   $38
              cea5 00c8  ld   $c8
              cea6 00f1  ld   $f1
              cea7 0079  ld   $79
              cea8 00e2  ld   $e2
              cea9 0079  ld   $79
              ceaa 00d3  ld   $d3
              ceab 0079  ld   $79
              ceac 00c4  ld   $c4
              cead 0079  ld   $79
              ceae 00b5  ld   $b5
              ceaf 0079  ld   $79
              ceb0 00a6  ld   $a6
              ceb1 0079  ld   $79
              ceb2 00f1  ld   $f1
              ceb3 0078  ld   $78
              ceb4 00e2  ld   $e2
              ceb5 0078  ld   $78
              ceb6 00d3  ld   $d3
              ceb7 0078  ld   $78
              ceb8 00c4  ld   $c4
              ceb9 0078  ld   $78
              ceba 00b5  ld   $b5
              cebb 0078  ld   $78
              cebc 00a6  ld   $a6
              cebd 0078  ld   $78
              cebe 00f1  ld   $f1
              cebf 0077  ld   $77
              cec0 00e2  ld   $e2
              cec1 0077  ld   $77
              cec2 00d3  ld   $d3
              cec3 0077  ld   $77
              cec4 00c4  ld   $c4
              cec5 0077  ld   $77
              cec6 00b5  ld   $b5
              cec7 0077  ld   $77
              cec8 00a6  ld   $a6
              cec9 0077  ld   $77
              ceca 00f1  ld   $f1
              cecb 0076  ld   $76
              cecc 00e2  ld   $e2
              cecd 0076  ld   $76
              cece 00d3  ld   $d3
              cecf 0076  ld   $76
              ced0 00c4  ld   $c4
              ced1 0076  ld   $76
              ced2 00b5  ld   $b5
              ced3 0076  ld   $76
              ced4 00a6  ld   $a6
              ced5 0076  ld   $76
              ced6 00f1  ld   $f1
              ced7 0075  ld   $75
              ced8 00e2  ld   $e2
              ced9 0075  ld   $75
              ceda 00d3  ld   $d3
              cedb 0075  ld   $75
              cedc 00c4  ld   $c4
              cedd 0075  ld   $75
              cede 00b5  ld   $b5
              cedf 0075  ld   $75
              cee0 00a6  ld   $a6
              cee1 0075  ld   $75
              cee2 00f1  ld   $f1
              cee3 0074  ld   $74
              cee4 00e2  ld   $e2
              cee5 0074  ld   $74
              cee6 00d3  ld   $d3
              cee7 0074  ld   $74
              cee8 00c4  ld   $c4
              cee9 0074  ld   $74
              ceea 00b5  ld   $b5
              ceeb 0074  ld   $74
              ceec 00a6  ld   $a6
              ceed 0074  ld   $74
              ceee 00f1  ld   $f1
              ceef 0073  ld   $73
              cef0 00e2  ld   $e2
              cef1 0073  ld   $73
              cef2 00d3  ld   $d3
              cef3 0073  ld   $73
              cef4 00c4  ld   $c4
              cef5 0073  ld   $73
              cef6 00b5  ld   $b5
              cef7 0073  ld   $73
              cef8 00a6  ld   $a6
              cef9 0073  ld   $73
              cefa 00f1  ld   $f1
              cefb fe00  bra  ac          ;+-----------------------------------+
              cefc fcfd  bra  $cefd       ;|                                   |
              cefd 1418  ld   $18,y       ;| Trampoline for page $ce00 lookups |
              cefe e006  jmp  y,$06       ;|                                   |
              ceff c218  st   [$18]       ;+-----------------------------------+
              cf00 0072  ld   $72
              cf01 00e2  ld   $e2
              cf02 0072  ld   $72
              cf03 00d3  ld   $d3
              cf04 0072  ld   $72
              cf05 00c4  ld   $c4
              cf06 0072  ld   $72
              cf07 00b5  ld   $b5
              cf08 0072  ld   $72
              cf09 00a6  ld   $a6
              cf0a 0072  ld   $72
              cf0b 00f1  ld   $f1
              cf0c 0071  ld   $71
              cf0d 00e2  ld   $e2
              cf0e 0071  ld   $71
              cf0f 00d3  ld   $d3
              cf10 0071  ld   $71
              cf11 00c4  ld   $c4
              cf12 0071  ld   $71
              cf13 00b5  ld   $b5
              cf14 0071  ld   $71
              cf15 00a6  ld   $a6
              cf16 0071  ld   $71
              cf17 00f1  ld   $f1
              cf18 0070  ld   $70
              cf19 00e2  ld   $e2
              cf1a 0070  ld   $70
              cf1b 00d3  ld   $d3
              cf1c 0070  ld   $70
              cf1d 00c4  ld   $c4
              cf1e 0070  ld   $70
              cf1f 00b5  ld   $b5
              cf20 0070  ld   $70
              cf21 00a6  ld   $a6
              cf22 0070  ld   $70
              cf23 00f1  ld   $f1
              cf24 006f  ld   $6f
              cf25 00e2  ld   $e2
              cf26 006f  ld   $6f
              cf27 00d3  ld   $d3
              cf28 006f  ld   $6f
              cf29 00c4  ld   $c4
              cf2a 006f  ld   $6f
              cf2b 00b5  ld   $b5
              cf2c 006f  ld   $6f
              cf2d 00a6  ld   $a6
              cf2e 006f  ld   $6f
              cf2f 00f1  ld   $f1
              cf30 006e  ld   $6e
              cf31 00e2  ld   $e2
              cf32 006e  ld   $6e
              cf33 00d3  ld   $d3
              cf34 006e  ld   $6e
              cf35 00c4  ld   $c4
              cf36 006e  ld   $6e
              cf37 00b5  ld   $b5
              cf38 006e  ld   $6e
              cf39 00a6  ld   $a6
              cf3a 006e  ld   $6e
              cf3b 00f1  ld   $f1
              cf3c 006d  ld   $6d
              cf3d 00e2  ld   $e2
              cf3e 006d  ld   $6d
              cf3f 00d3  ld   $d3
              cf40 006d  ld   $6d
              cf41 00c4  ld   $c4
              cf42 006d  ld   $6d
              cf43 00b5  ld   $b5
              cf44 006d  ld   $6d
              cf45 00a6  ld   $a6
              cf46 006d  ld   $6d
              cf47 00f1  ld   $f1
              cf48 006c  ld   $6c
              cf49 00e2  ld   $e2
              cf4a 006c  ld   $6c
              cf4b 00d3  ld   $d3
              cf4c 006c  ld   $6c
              cf4d 00c4  ld   $c4
              cf4e 006c  ld   $6c
              cf4f 00b5  ld   $b5
              cf50 006c  ld   $6c
              cf51 00a6  ld   $a6
              cf52 006c  ld   $6c
              cf53 00f1  ld   $f1
              cf54 006b  ld   $6b
              cf55 00e2  ld   $e2
              cf56 006b  ld   $6b
              cf57 00d3  ld   $d3
              cf58 006b  ld   $6b
              cf59 00c4  ld   $c4
              cf5a 006b  ld   $6b
              cf5b 00b5  ld   $b5
              cf5c 006b  ld   $6b
              cf5d 00a6  ld   $a6
              cf5e 006b  ld   $6b
              cf5f 00f1  ld   $f1
              cf60 006a  ld   $6a
              cf61 00e2  ld   $e2
              cf62 006a  ld   $6a
              cf63 00d3  ld   $d3
              cf64 006a  ld   $6a
              cf65 00c4  ld   $c4
              cf66 006a  ld   $6a
              cf67 00b5  ld   $b5
              cf68 006a  ld   $6a
              cf69 00a6  ld   $a6
              cf6a 006a  ld   $6a
              cf6b 00f1  ld   $f1
              cf6c 0069  ld   $69
              cf6d 00e2  ld   $e2
              cf6e 0069  ld   $69
              cf6f 00d3  ld   $d3
              cf70 0069  ld   $69
              cf71 00c4  ld   $c4
              cf72 0069  ld   $69
              cf73 0008  ld   $08
              cf74 00a0  ld   $a0
              cf75 005e  ld   $5e
              cf76 00a7  ld   $a7
              cf77 0003  ld   $03
              cf78 0074  ld   $74
              cf79 00bd  ld   $bd
              cf7a 00b2  ld   $b2
              cf7b 0008  ld   $08
              cf7c 004d  ld   $4d
              cf7d 0002  ld   $02
              cf7e 0044  ld   $44
              cf7f 0011  ld   $11
              cf80 00fe  ld   $fe
              cf81 007c  ld   $7c
              cf82 002b  ld   $2b
              cf83 0084  ld   $84
              cf84 0011  ld   $11
              cf85 00a0  ld   $a0
              cf86 007a  ld   $7a
              cf87 0085  ld   $85
              cf88 00a2  ld   $a2
              cf89 0062  ld   $62
              cf8a 00a7  ld   $a7
              cf8b 0002  ld   $02
              cf8c 0074  ld   $74
              cf8d 00bd  ld   $bd
              cf8e 00c4  ld   $c4
              cf8f 0008  ld   $08
              cf90 004d  ld   $4d
              cf91 0001  ld   $01
              cf92 0044  ld   $44
              cf93 0032  ld   $32
              cf94 0084  ld   $84
              cf95 0042  ld   $42
              cf96 0011  ld   $11
              cf97 00a0  ld   $a0
              cf98 007a  ld   $7a
              cf99 0085  ld   $85
              cf9a 00a2  ld   $a2
              cf9b 0062  ld   $62
              cf9c 0063  ld   $63
              cf9d 00ff  ld   $ff
              cf9e 0075  ld   $75
              cf9f 0032  ld   $32
              cfa0 0022  ld   $22
              cfa1 006e  ld   $6e
              cfa2 004d  ld   $4d
              cfa3 0046  ld   $46
              cfa4 0024  ld   $24
              cfa5 0016  ld   $16
              cfa6 00cf  ld   $cf
              cfa7 0027  ld   $27
              cfa8 00b4  ld   $b4
              cfa9 00fe  ld   $fe
              cfaa 001a  ld   $1a
              cfab 0046  ld   $46
              cfac 00bd  ld   $bd
              cfad 00ca  ld   $ca
              cfae 0008  ld   $08
              cfaf 004d  ld   $4d
              cfb0 0002  ld   $02
              cfb1 0082  ld   $82
              cfb2 0085  ld   $85
              cfb3 00e9  ld   $e9
              cfb4 0060  ld   $60
              cfb5 0063  ld   $63
              cfb6 00ff  ld   $ff
              cfb7 0075  ld   $75
              cfb8 004d  ld   $4d
              cfb9 0001  ld   $01
              cfba 0032  ld   $32
              cfbb 0011  ld   $11
              cfbc 00ef  ld   $ef
              cfbd 007c  ld   $7c
              cfbe 0025  ld   $25
              cfbf 0006  ld   $06
              cfc0 0085  ld   $85
              cfc1 007e  ld   $7e
              cfc2 0002  ld   $02
              cfc3 002f  ld   $2f
              cfc4 00d6  ld   $d6
              cfc5 006e  ld   $6e
              cfc6 0063  ld   $63
              cfc7 00ff  ld   $ff
              cfc8 0075  ld   $75
              cfc9 004d  ld   $4d
              cfca 0001  ld   $01
              cfcb 0032  ld   $32
              cfcc 0011  ld   $11
              cfcd 00ef  ld   $ef
              cfce 007c  ld   $7c
              cfcf 0025  ld   $25
              cfd0 0001  ld   $01
              cfd1 0085  ld   $85
              cfd2 00a0  ld   $a0
              cfd3 0009  ld   $09
              cfd4 0009  ld   $09
              cfd5 00a0  ld   $a0
              cfd6 005e  ld   $5e
              cfd7 0085  ld   $85
              cfd8 007e  ld   $7e
              cfd9 0002  ld   $02
              cfda 0063  ld   $63
              cfdb 00ff  ld   $ff
              cfdc 0075  ld   $75
              cfdd 004d  ld   $4d
              cfde 0001  ld   $01
              cfdf 0032  ld   $32
              cfe0 0011  ld   $11
              cfe1 00ef  ld   $ef
              cfe2 007c  ld   $7c
              cfe3 0025  ld   $25
              cfe4 0004  ld   $04
              cfe5 0085  ld   $85
              cfe6 007e  ld   $7e
              cfe7 0002  ld   $02
              cfe8 0063  ld   $63
              cfe9 00ff  ld   $ff
              cfea 0075  ld   $75
              cfeb 004d  ld   $4d
              cfec 0001  ld   $01
              cfed 0032  ld   $32
              cfee 0011  ld   $11
              cfef 00ef  ld   $ef
              cff0 007c  ld   $7c
              cff1 0025  ld   $25
              cff2 0005  ld   $05
              cff3 0085  ld   $85
              cff4 007e  ld   $7e
              cff5 0002  ld   $02
              cff6 0085  ld   $85
              cff7 00c8  ld   $c8
              cff8 0008  ld   $08
              cff9 0063  ld   $63
              cffa 00ff  ld   $ff
              cffb fe00  bra  ac          ;+-----------------------------------+
              cffc fcfd  bra  $cffd       ;|                                   |
              cffd 1418  ld   $18,y       ;| Trampoline for page $cf00 lookups |
              cffe e006  jmp  y,$06       ;|                                   |
              cfff c218  st   [$18]       ;+-----------------------------------+
              d000 0075  ld   $75
              d001 004d  ld   $4d
              d002 0032  ld   $32
              d003 009c  ld   $9c
              d004 0085  ld   $85
              d005 00c8  ld   $c8
              d006 0061  ld   $61
              d007 0085  ld   $85
              d008 00a6  ld   $a6
              d009 0004  ld   $04
              d00a 0011  ld   $11
              d00b 00ef  ld   $ef
              d00c 007c  ld   $7c
              d00d 002b  ld   $2b
              d00e 0030  ld   $30
              d00f 004d  ld   $4d
              d010 0002  ld   $02
              d011 0082  ld   $82
              d012 0085  ld   $85
              d013 00a0  ld   $a0
              d014 0069  ld   $69
              d015 0011  ld   $11
              d016 0020  ld   $20
              d017 002a  ld   $2a
              d018 002b  ld   $2b
              d019 00a2  ld   $a2
              d01a 0085  ld   $85
              d01b 00c2  ld   $c2
              d01c 0062  ld   $62
              d01d 0085  ld   $85
              d01e 00a2  ld   $a2
              d01f 0065  ld   $65
              d020 004d  ld   $4d
              d021 0000  ld   $00
              d022 00a4  ld   $a4
              d023 00c7  ld   $c7
              d024 0010  ld   $10
              d025 0069  ld   $69
              d026 00aa  ld   $aa
              d027 00c7  ld   $c7
              d028 00fd  ld   $fd
              d029 0066  ld   $66
              d02a 00aa  ld   $aa
              d02b 0016  ld   $16
              d02c 0010  ld   $10
              d02d 00a2  ld   $a2
              d02e 0016  ld   $16
              d02f 0000  ld   $00
              d030 00a4  ld   $a4
              d031 0016  ld   $16
              d032 006c  ld   $6c
              d033 00a5  ld   $a5
              d034 0085  ld   $85
              d035 00dc  ld   $dc
              d036 0062  ld   $62
              d037 0085  ld   $85
              d038 00a0  ld   $a0
              d039 000a  ld   $0a
              d03a 000a  ld   $0a
              d03b 00a0  ld   $a0
              d03c 0052  ld   $52
              d03d 0011  ld   $11
              d03e 00a1  ld   $a1
              d03f 0079  ld   $79
              d040 0085  ld   $85
              d041 00eb  ld   $eb
              d042 0061  ld   $61
              d043 0011  ld   $11
              d044 00a2  ld   $a2
              d045 007c  ld   $7c
              d046 002b  ld   $2b
              d047 00c4  ld   $c4
              d048 004d  ld   $4d
              d049 003f  ld   $3f
              d04a 00c6  ld   $c6
              d04b 0085  ld   $85
              d04c 00e2  ld   $e2
              d04d 000a  ld   $0a
              d04e 0011  ld   $11
              d04f 00e3  ld   $e3
              d050 0068  ld   $68
              d051 0085  ld   $85
              d052 00eb  ld   $eb
              d053 0061  ld   $61
              d054 0016  ld   $16
              d055 0000  ld   $00
              d056 00a4  ld   $a4
              d057 0016  ld   $16
              d058 0072  ld   $72
              d059 00a5  ld   $a5
              d05a 0085  ld   $85
              d05b 00dc  ld   $dc
              d05c 0062  ld   $62
              d05d 0011  ld   $11
              d05e 00aa  ld   $aa
              d05f 0069  ld   $69
              d060 0085  ld   $85
              d061 00eb  ld   $eb
              d062 0061  ld   $61
              d063 0011  ld   $11
              d064 00b1  ld   $b1
              d065 0069  ld   $69
              d066 002b  ld   $2b
              d067 00c4  ld   $c4
              d068 004d  ld   $4d
              d069 003f  ld   $3f
              d06a 00c6  ld   $c6
              d06b 0085  ld   $85
              d06c 00e2  ld   $e2
              d06d 000a  ld   $0a
              d06e 0011  ld   $11
              d06f 00cf  ld   $cf
              d070 0068  ld   $68
              d071 0085  ld   $85
              d072 00eb  ld   $eb
              d073 0061  ld   $61
              d074 0011  ld   $11
              d075 0020  ld   $20
              d076 002a  ld   $2a
              d077 002b  ld   $2b
              d078 00a2  ld   $a2
              d079 00c7  ld   $c7
              d07a 0002  ld   $02
              d07b 0069  ld   $69
              d07c 00aa  ld   $aa
              d07d 0063  ld   $63
              d07e 00ff  ld   $ff
              d07f 0075  ld   $75
              d080 0065  ld   $65
              d081 00a3  ld   $a3
              d082 00c6  ld   $c6
              d083 0021  ld   $21
              d084 00c4  ld   $c4
              d085 0085  ld   $85
              d086 00eb  ld   $eb
              d087 0061  ld   $61
              d088 0016  ld   $16
              d089 002a  ld   $2a
              d08a 00a3  ld   $a3
              d08b 0063  ld   $63
              d08c 00ff  ld   $ff
              d08d 00b4  ld   $b4
              d08e 0080  ld   $80
              d08f 0060  ld   $60
              d090 00da  ld   $da
              d091 0025  ld   $25
              d092 002b  ld   $2b
              d093 001a  ld   $1a
              d094 004d  ld   $4d
              d095 00ad  ld   $ad
              d096 0022  ld   $22
              d097 00b4  ld   $b4
              d098 00e2  ld   $e2
              d099 004d  ld   $4d
              d09a 0002  ld   $02
              d09b 00a4  ld   $a4
              d09c 00c7  ld   $c7
              d09d 00fb  ld   $fb
              d09e 0066  ld   $66
              d09f 00aa  ld   $aa
              d0a0 00ff  ld   $ff
              d0a1 002f  ld   $2f
              d0a2 00d6  ld   $d6
              d0a3 006e  ld   $6e
              d0a4 00a4  ld   $a4
              d0a5 0082  ld   $82
              d0a6 00e7  ld   $e7
              d0a7 0060  ld   $60
              d0a8 00ff  ld   $ff
              d0a9 0075  ld   $75
              d0aa 0085  ld   $85
              d0ab 00e1  ld   $e1
              d0ac 0060  ld   $60
              d0ad 0011  ld   $11
              d0ae 0003  ld   $03
              d0af 000b  ld   $0b
              d0b0 002b  ld   $2b
              d0b1 0022  ld   $22
              d0b2 0065  ld   $65
              d0b3 0025  ld   $25
              d0b4 00a2  ld   $a2
              d0b5 0063  ld   $63
              d0b6 00ff  ld   $ff
              d0b7 0061  ld   $61
              d0b8 00a1  ld   $a1
              d0b9 005e  ld   $5e
              d0ba 0032  ld   $32
              d0bb 0024  ld   $24
              d0bc 00a2  ld   $a2
              d0bd 0021  ld   $21
              d0be 00a4  ld   $a4
              d0bf 002f  ld   $2f
              d0c0 0028  ld   $28
              d0c1 0059  ld   $59
              d0c2 00ff  ld   $ff
              d0c3 002b  ld   $2b
              d0c4 0084  ld   $84
              d0c5 0021  ld   $21
              d0c6 0082  ld   $82
              d0c7 00b8  ld   $b8
              d0c8 0084  ld   $84
              d0c9 0035  ld   $35
              d0ca 0053  ld   $53
              d0cb 00b4  ld   $b4
              d0cc 0021  ld   $21
              d0cd 0084  ld   $84
              d0ce 00ff  ld   $ff
              d0cf 0021  ld   $21
              d0d0 0082  ld   $82
              d0d1 00ff  ld   $ff
              d0d2 002b  ld   $2b
              d0d3 0084  ld   $84
              d0d4 0021  ld   $21
              d0d5 0082  ld   $82
              d0d6 00b8  ld   $b8
              d0d7 0084  ld   $84
              d0d8 0035  ld   $35
              d0d9 0056  ld   $56
              d0da 00c3  ld   $c3
              d0db 0021  ld   $21
              d0dc 0084  ld   $84
              d0dd 00ff  ld   $ff
              d0de 0021  ld   $21
              d0df 0082  ld   $82
              d0e0 00ff  ld   $ff
              d0e1 0059  ld   $59
              d0e2 0080  ld   $80
              d0e3 00b8  ld   $b8
              d0e4 009c  ld   $9c
              d0e5 002b  ld   $2b
              d0e6 009e  ld   $9e
              d0e7 0018  ld   $18
              d0e8 009e  ld   $9e
              d0e9 0059  ld   $59
              d0ea 0000  ld   $00
              d0eb 0060  ld   $60
              d0ec 009c  ld   $9c
              d0ed 009e  ld   $9e
              d0ee 00d0  ld   $d0
              d0ef 009e  ld   $9e
              d0f0 00ff  ld   $ff
              d0f1 0075  ld   $75
              d0f2 0035  ld   $35
              d0f3 003f  ld   $3f
              d0f4 00e7  ld   $e7
              d0f5 005e  ld   $5e
              d0f6 0084  ld   $84
              d0f7 0085  ld   $85
              d0f8 00a0  ld   $a0
              d0f9 0068  ld   $68
              d0fa 0059  ld   $59
              d0fb fe00  bra  ac          ;+-----------------------------------+
              d0fc fcfd  bra  $d0fd       ;|                                   |
              d0fd 1418  ld   $18,y       ;| Trampoline for page $d000 lookups |
              d0fe e006  jmp  y,$06       ;|                                   |
              d0ff c218  st   [$18]       ;+-----------------------------------+
              d100 0020  ld   $20
              d101 0085  ld   $85
              d102 00cc  ld   $cc
              d103 0065  ld   $65
              d104 009e  ld   $9e
              d105 00df  ld   $df
              d106 0084  ld   $84
              d107 0063  ld   $63
              d108 00ff  ld   $ff
              d109 0075  ld   $75
              d10a 002b  ld   $2b
              d10b 0082  ld   $82
              d10c 0085  ld   $85
              d10d 00a0  ld   $a0
              d10e 0068  ld   $68
              d10f 0093  ld   $93
              d110 0082  ld   $82
              d111 0023  ld   $23
              d112 0082  ld   $82
              d113 0035  ld   $35
              d114 003f  ld   $3f
              d115 00fb  ld   $fb
              d116 0085  ld   $85
              d117 00cc  ld   $cc
              d118 0065  ld   $65
              d119 0090  ld   $90
              d11a 00f1  ld   $f1
              d11b 0063  ld   $63
              d11c 00ff  ld   $ff
              d11d 0062  ld   $62
              d11e 00a2  ld   $a2
              d11f 005d  ld   $5d
              d120 002b  ld   $2b
              d121 0086  ld   $86
              d122 0023  ld   $23
              d123 0084  ld   $84
              d124 00d1  ld   $d1
              d125 0086  ld   $86
              d126 0035  ld   $35
              d127 0072  ld   $72
              d128 00a2  ld   $a2
              d129 00ff  ld   $ff
              d12a 00c7  ld   $c7
              d12b 0094  ld   $94
              d12c 0028  ld   $28
              d12d 0092  ld   $92
              d12e 0016  ld   $16
              d12f 0003  ld   $03
              d130 0026  ld   $26
              d131 0021  ld   $21
              d132 0028  ld   $28
              d133 002f  ld   $2f
              d134 0094  ld   $94
              d135 0057  ld   $57
              d136 001c  ld   $1c
              d137 0028  ld   $28
              d138 0028  ld   $28
              d139 0004  ld   $04
              d13a 0075  ld   $75
              d13b 0085  ld   $85
              d13c 00a2  ld   $a2
              d13d 0063  ld   $63
              d13e 0063  ld   $63
              d13f 00ff  ld   $ff
              d140 0075  ld   $75
              d141 004d  ld   $4d
              d142 0008  ld   $08
              d143 0098  ld   $98
              d144 0011  ld   $11
              d145 0000  ld   $00
              d146 0001  ld   $01
              d147 002b  ld   $2b
              d148 009a  ld   $9a
              d149 0016  ld   $16
              d14a 0078  ld   $78
              d14b 0096  ld   $96
              d14c 0021  ld   $21
              d14d 0098  ld   $98
              d14e 0060  ld   $60
              d14f 009a  ld   $9a
              d150 0093  ld   $93
              d151 0098  ld   $98
              d152 009e  ld   $9e
              d153 00cc  ld   $cc
              d154 0096  ld   $96
              d155 0085  ld   $85
              d156 00e1  ld   $e1
              d157 0060  ld   $60
              d158 0063  ld   $63
              d159 00ff  ld   $ff
              d15a 00c7  ld   $c7
              d15b 0010  ld   $10
              d15c 006f  ld   $6f
              d15d 00aa  ld   $aa
              d15e 00bd  ld   $bd
              d15f 00a0  ld   $a0
              d160 0066  ld   $66
              d161 00a7  ld   $a7
              d162 009a  ld   $9a
              d163 00a4  ld   $a4
              d164 0035  ld   $35
              d165 0056  ld   $56
              d166 00ea  ld   $ea
              d167 0016  ld   $16
              d168 0000  ld   $00
              d169 00a4  ld   $a4
              d16a 00a7  ld   $a7
              d16b 0070  ld   $70
              d16c 00a5  ld   $a5
              d16d 0035  ld   $35
              d16e 0050  ld   $50
              d16f 00f8  ld   $f8
              d170 0016  ld   $16
              d171 0070  ld   $70
              d172 00a5  ld   $a5
              d173 00c7  ld   $c7
              d174 0004  ld   $04
              d175 0069  ld   $69
              d176 00aa  ld   $aa
              d177 00ff  ld   $ff
              d178 00c7  ld   $c7
              d179 00fb  ld   $fb
              d17a 0066  ld   $66
              d17b 00aa  ld   $aa
              d17c 00ff  ld   $ff
              d17d 0063  ld   $63
              d17e 00a2  ld   $a2
              d17f 005d  ld   $5d
              d180 001c  ld   $1c
              d181 00a4  ld   $a4
              d182 00a4  ld   $a4
              d183 0004  ld   $04
              d184 00a7  ld   $a7
              d185 009c  ld   $9c
              d186 00a4  ld   $a4
              d187 0035  ld   $35
              d188 0056  ld   $56
              d189 00b6  ld   $b6
              d18a 00c7  ld   $c7
              d18b 0008  ld   $08
              d18c 006f  ld   $6f
              d18d 00aa  ld   $aa
              d18e 0035  ld   $35
              d18f 0072  ld   $72
              d190 00b6  ld   $b6
              d191 0075  ld   $75
              d192 0085  ld   $85
              d193 00be  ld   $be
              d194 0066  ld   $66
              d195 0063  ld   $63
              d196 00ff  ld   $ff
              d197 0075  ld   $75
              d198 0011  ld   $11
              d199 0003  ld   $03
              d19a 000b  ld   $0b
              d19b 002b  ld   $2b
              d19c 0022  ld   $22
              d19d 0065  ld   $65
              d19e 0025  ld   $25
              d19f 00a2  ld   $a2
              d1a0 0011  ld   $11
              d1a1 0000  ld   $00
              d1a2 0001  ld   $01
              d1a3 0067  ld   $67
              d1a4 0027  ld   $27
              d1a5 004d  ld   $4d
              d1a6 0006  ld   $06
              d1a7 009e  ld   $9e
              d1a8 0016  ld   $16
              d1a9 00a0  ld   $a0
              d1aa 0024  ld   $24
              d1ab 0016  ld   $16
              d1ac 0000  ld   $00
              d1ad 0026  ld   $26
              d1ae 00b4  ld   $b4
              d1af 00f3  ld   $f3
              d1b0 0093  ld   $93
              d1b1 0027  ld   $27
              d1b2 009e  ld   $9e
              d1b3 00c8  ld   $c8
              d1b4 009e  ld   $9e
              d1b5 0085  ld   $85
              d1b6 00a0  ld   $a0
              d1b7 0068  ld   $68
              d1b8 0063  ld   $63
              d1b9 00ff  ld   $ff
              d1ba 0075  ld   $75
              d1bb 0011  ld   $11
              d1bc 0003  ld   $03
              d1bd 000b  ld   $0b
              d1be 002b  ld   $2b
              d1bf 0022  ld   $22
              d1c0 0065  ld   $65
              d1c1 0025  ld   $25
              d1c2 00a2  ld   $a2
              d1c3 0011  ld   $11
              d1c4 0000  ld   $00
              d1c5 0001  ld   $01
              d1c6 0067  ld   $67
              d1c7 0027  ld   $27
              d1c8 004d  ld   $4d
              d1c9 0008  ld   $08
              d1ca 009e  ld   $9e
              d1cb 0016  ld   $16
              d1cc 00a0  ld   $a0
              d1cd 0024  ld   $24
              d1ce 0016  ld   $16
              d1cf 0000  ld   $00
              d1d0 0026  ld   $26
              d1d1 00b4  ld   $b4
              d1d2 00f3  ld   $f3
              d1d3 0093  ld   $93
              d1d4 0027  ld   $27
              d1d5 009e  ld   $9e
              d1d6 00eb  ld   $eb
              d1d7 009e  ld   $9e
              d1d8 0085  ld   $85
              d1d9 00a0  ld   $a0
              d1da 0068  ld   $68
              d1db 0063  ld   $63
              d1dc 00ff  ld   $ff
              d1dd 0064  ld   $64
              d1de 00a5  ld   $a5
              d1df 005a  ld   $5a
              d1e0 001a  ld   $1a
              d1e1 0021  ld   $21
              d1e2 0082  ld   $82
              d1e3 00fc  ld   $fc
              d1e4 002b  ld   $2b
              d1e5 0084  ld   $84
              d1e6 00b8  ld   $b8
              d1e7 0082  ld   $82
              d1e8 0035  ld   $35
              d1e9 003f  ld   $3f
              d1ea 00cb  ld   $cb
              d1eb 0021  ld   $21
              d1ec 0082  ld   $82
              d1ed 00e6  ld   $e6
              d1ee 0080  ld   $80
              d1ef 0035  ld   $35
              d1f0 0072  ld   $72
              d1f1 00be  ld   $be
              d1f2 0021  ld   $21
              d1f3 0084  ld   $84
              d1f4 00b8  ld   $b8
              d1f5 0082  ld   $82
              d1f6 0035  ld   $35
              d1f7 003f  ld   $3f
              d1f8 00cb  ld   $cb
              d1f9 0090  ld   $90
              d1fa 00c5  ld   $c5
              d1fb fe00  bra  ac          ;+-----------------------------------+
              d1fc fcfd  bra  $d1fd       ;|                                   |
              d1fd 1418  ld   $18,y       ;| Trampoline for page $d100 lookups |
              d1fe e006  jmp  y,$06       ;|                                   |
              d1ff c218  st   [$18]       ;+-----------------------------------+
              d200 0021  ld   $21
              d201 0084  ld   $84
              d202 00b8  ld   $b8
              d203 0082  ld   $82
              d204 0035  ld   $35
              d205 004d  ld   $4d
              d206 00cb  ld   $cb
              d207 001a  ld   $1a
              d208 0006  ld   $06
              d209 00f0  ld   $f0
              d20a 007e  ld   $7e
              d20b 0090  ld   $90
              d20c 00c5  ld   $c5
              d20d 00ff  ld   $ff
              d20e 0075  ld   $75
              d20f 0011  ld   $11
              d210 00c1  ld   $c1
              d211 0068  ld   $68
              d212 002b  ld   $2b
              d213 0086  ld   $86
              d214 002b  ld   $2b
              d215 0092  ld   $92
              d216 0011  ld   $11
              d217 00b5  ld   $b5
              d218 0068  ld   $68
              d219 002b  ld   $2b
              d21a 0088  ld   $88
              d21b 003b  ld   $3b
              d21c 0092  ld   $92
              d21d 0035  ld   $35
              d21e 0072  ld   $72
              d21f 00e7  ld   $e7
              d220 0021  ld   $21
              d221 0084  ld   $84
              d222 0035  ld   $35
              d223 003f  ld   $3f
              d224 00e5  ld   $e5
              d225 00cf  ld   $cf
              d226 0084  ld   $84
              d227 0063  ld   $63
              d228 00ff  ld   $ff
              d229 00b8  ld   $b8
              d22a 0082  ld   $82
              d22b 0035  ld   $35
              d22c 003f  ld   $3f
              d22d 00f2  ld   $f2
              d22e 001c  ld   $1c
              d22f 0092  ld   $92
              d230 0092  ld   $92
              d231 0002  ld   $02
              d232 0090  ld   $90
              d233 00d9  ld   $d9
              d234 0021  ld   $21
              d235 0092  ld   $92
              d236 00b8  ld   $b8
              d237 0086  ld   $86
              d238 0099  ld   $99
              d239 0088  ld   $88
              d23a 00f6  ld   $f6
              d23b 00cf  ld   $cf
              d23c 0018  ld   $18
              d23d 0063  ld   $63
              d23e 00ff  ld   $ff
              d23f 0065  ld   $65
              d240 00a2  ld   $a2
              d241 005d  ld   $5d
              d242 0075  ld   $75
              d243 0085  ld   $85
              d244 00f1  ld   $f1
              d245 0060  ld   $60
              d246 004d  ld   $4d
              d247 0008  ld   $08
              d248 0094  ld   $94
              d249 0016  ld   $16
              d24a 003c  ld   $3c
              d24b 009e  ld   $9e
              d24c 0016  ld   $16
              d24d 00a0  ld   $a0
              d24e 0024  ld   $24
              d24f 0016  ld   $16
              d250 0000  ld   $00
              d251 0026  ld   $26
              d252 0065  ld   $65
              d253 0027  ld   $27
              d254 0094  ld   $94
              d255 00b4  ld   $b4
              d256 00f3  ld   $f3
              d257 0016  ld   $16
              d258 00a0  ld   $a0
              d259 0024  ld   $24
              d25a 0016  ld   $16
              d25b 0000  ld   $00
              d25c 0026  ld   $26
              d25d 0059  ld   $59
              d25e 0087  ld   $87
              d25f 00b8  ld   $b8
              d260 0094  ld   $94
              d261 005e  ld   $5e
              d262 0027  ld   $27
              d263 00b4  ld   $b4
              d264 00f3  ld   $f3
              d265 0093  ld   $93
              d266 0094  ld   $94
              d267 009e  ld   $9e
              d268 00aa  ld   $aa
              d269 009e  ld   $9e
              d26a 0063  ld   $63
              d26b 00ff  ld   $ff
              d26c 002b  ld   $2b
              d26d 0092  ld   $92
              d26e 00c7  ld   $c7
              d26f 0084  ld   $84
              d270 0089  ld   $89
              d271 0020  ld   $20
              d272 0035  ld   $35
              d273 0072  ld   $72
              d274 00fc  ld   $fc
              d275 00c7  ld   $c7
              d276 0010  ld   $10
              d277 006f  ld   $6f
              d278 00aa  ld   $aa
              d279 00bd  ld   $bd
              d27a 00aa  ld   $aa
              d27b 0062  ld   $62
              d27c 00c7  ld   $c7
              d27d 0094  ld   $94
              d27e 0025  ld   $25
              d27f 0092  ld   $92
              d280 0016  ld   $16
              d281 0005  ld   $05
              d282 0096  ld   $96
              d283 0021  ld   $21
              d284 0094  ld   $94
              d285 007f  ld   $7f
              d286 0000  ld   $00
              d287 005e  ld   $5e
              d288 0026  ld   $26
              d289 00b4  ld   $b4
              d28a 00cb  ld   $cb
              d28b 0093  ld   $93
              d28c 0094  ld   $94
              d28d 0093  ld   $93
              d28e 0028  ld   $28
              d28f 009e  ld   $9e
              d290 00e1  ld   $e1
              d291 0096  ld   $96
              d292 0016  ld   $16
              d293 0000  ld   $00
              d294 0026  ld   $26
              d295 00b4  ld   $b4
              d296 00cb  ld   $cb
              d297 0093  ld   $93
              d298 0028  ld   $28
              d299 0075  ld   $75
              d29a 0085  ld   $85
              d29b 00a0  ld   $a0
              d29c 0067  ld   $67
              d29d 0063  ld   $63
              d29e 00ff  ld   $ff
              d29f 0066  ld   $66
              d2a0 00a2  ld   $a2
              d2a1 005d  ld   $5d
              d2a2 00a7  ld   $a7
              d2a3 009c  ld   $9c
              d2a4 00a4  ld   $a4
              d2a5 0035  ld   $35
              d2a6 0056  ld   $56
              d2a7 00a9  ld   $a9
              d2a8 0016  ld   $16
              d2a9 0000  ld   $00
              d2aa 00a4  ld   $a4
              d2ab 00a7  ld   $a7
              d2ac 0072  ld   $72
              d2ad 00a5  ld   $a5
              d2ae 0035  ld   $35
              d2af 0050  ld   $50
              d2b0 00b7  ld   $b7
              d2b1 0016  ld   $16
              d2b2 0072  ld   $72
              d2b3 00a5  ld   $a5
              d2b4 00c7  ld   $c7
              d2b5 0004  ld   $04
              d2b6 0069  ld   $69
              d2b7 00aa  ld   $aa
              d2b8 00ff  ld   $ff
              d2b9 00c7  ld   $c7
              d2ba 00fb  ld   $fb
              d2bb 0066  ld   $66
              d2bc 00aa  ld   $aa
              d2bd 00ff  ld   $ff
              d2be 0059  ld   $59
              d2bf 0000  ld   $00
              d2c0 005e  ld   $5e
              d2c1 00a4  ld   $a4
              d2c2 005e  ld   $5e
              d2c3 0028  ld   $28
              d2c4 00c7  ld   $c7
              d2c5 0002  ld   $02
              d2c6 006f  ld   $6f
              d2c7 00aa  ld   $aa
              d2c8 0035  ld   $35
              d2c9 0072  ld   $72
              d2ca 00ca  ld   $ca
              d2cb 00ff  ld   $ff
              d2cc 0075  ld   $75
              d2cd 00c7  ld   $c7
              d2ce 0004  ld   $04
              d2cf 006f  ld   $6f
              d2d0 00aa  ld   $aa
              d2d1 0035  ld   $35
              d2d2 0072  ld   $72
              d2d3 00df  ld   $df
              d2d4 001c  ld   $1c
              d2d5 00a5  ld   $a5
              d2d6 00a5  ld   $a5
              d2d7 0006  ld   $06
              d2d8 00a7  ld   $a7
              d2d9 0078  ld   $78
              d2da 00a5  ld   $a5
              d2db 0035  ld   $35
              d2dc 0050  ld   $50
              d2dd 00f8  ld   $f8
              d2de 0016  ld   $16
              d2df 0072  ld   $72
              d2e0 00a5  ld   $a5
              d2e1 0085  ld   $85
              d2e2 00b9  ld   $b9
              d2e3 0063  ld   $63
              d2e4 0011  ld   $11
              d2e5 0000  ld   $00
              d2e6 0001  ld   $01
              d2e7 002b  ld   $2b
              d2e8 0026  ld   $26
              d2e9 0016  ld   $16
              d2ea 0006  ld   $06
              d2eb 0024  ld   $24
              d2ec 0016  ld   $16
              d2ed 0078  ld   $78
              d2ee 0025  ld   $25
              d2ef 0011  ld   $11
              d2f0 00c0  ld   $c0
              d2f1 0020  ld   $20
              d2f2 002b  ld   $2b
              d2f3 0022  ld   $22
              d2f4 00b4  ld   $b4
              d2f5 00fb  ld   $fb
              d2f6 00c7  ld   $c7
              d2f7 0004  ld   $04
              d2f8 0069  ld   $69
              d2f9 00aa  ld   $aa
              d2fa 0085  ld   $85
              d2fb fe00  bra  ac          ;+-----------------------------------+
              d2fc fcfd  bra  $d2fd       ;|                                   |
              d2fd 1418  ld   $18,y       ;| Trampoline for page $d200 lookups |
              d2fe e006  jmp  y,$06       ;|                                   |
              d2ff c218  st   [$18]       ;+-----------------------------------+
              d300 00a1  ld   $a1
              d301 0061  ld   $61
              d302 0063  ld   $63
              d303 00ff  ld   $ff
              d304 0067  ld   $67
              d305 00a0  ld   $a0
              d306 005f  ld   $5f
              d307 001c  ld   $1c
              d308 00a4  ld   $a4
              d309 00a4  ld   $a4
              d30a 0006  ld   $06
              d30b 00a7  ld   $a7
              d30c 009a  ld   $9a
              d30d 00a4  ld   $a4
              d30e 0035  ld   $35
              d30f 0056  ld   $56
              d310 00b4  ld   $b4
              d311 00c7  ld   $c7
              d312 0008  ld   $08
              d313 006f  ld   $6f
              d314 00aa  ld   $aa
              d315 0035  ld   $35
              d316 0072  ld   $72
              d317 00b4  ld   $b4
              d318 0075  ld   $75
              d319 0085  ld   $85
              d31a 00b7  ld   $b7
              d31b 0067  ld   $67
              d31c 0063  ld   $63
              d31d 00ff  ld   $ff
              d31e 00c7  ld   $c7
              d31f 0010  ld   $10
              d320 006f  ld   $6f
              d321 00aa  ld   $aa
              d322 00bd  ld   $bd
              d323 00bc  ld   $bc
              d324 0066  ld   $66
              d325 0059  ld   $59
              d326 0002  ld   $02
              d327 005e  ld   $5e
              d328 00a4  ld   $a4
              d329 005e  ld   $5e
              d32a 0028  ld   $28
              d32b 00c7  ld   $c7
              d32c 0002  ld   $02
              d32d 006f  ld   $6f
              d32e 00aa  ld   $aa
              d32f 0035  ld   $35
              d330 0072  ld   $72
              d331 00ca  ld   $ca
              d332 00ff  ld   $ff
              d333 0075  ld   $75
              d334 00c7  ld   $c7
              d335 0004  ld   $04
              d336 006f  ld   $6f
              d337 00aa  ld   $aa
              d338 0035  ld   $35
              d339 0072  ld   $72
              d33a 00df  ld   $df
              d33b 001c  ld   $1c
              d33c 00a5  ld   $a5
              d33d 00a5  ld   $a5
              d33e 0008  ld   $08
              d33f 00a7  ld   $a7
              d340 0078  ld   $78
              d341 00a5  ld   $a5
              d342 0035  ld   $35
              d343 0050  ld   $50
              d344 00f8  ld   $f8
              d345 0016  ld   $16
              d346 0070  ld   $70
              d347 00a5  ld   $a5
              d348 0085  ld   $85
              d349 00dc  ld   $dc
              d34a 0063  ld   $63
              d34b 0011  ld   $11
              d34c 0000  ld   $00
              d34d 0001  ld   $01
              d34e 002b  ld   $2b
              d34f 0026  ld   $26
              d350 0016  ld   $16
              d351 0008  ld   $08
              d352 0024  ld   $24
              d353 0016  ld   $16
              d354 0078  ld   $78
              d355 0025  ld   $25
              d356 0011  ld   $11
              d357 00c0  ld   $c0
              d358 0020  ld   $20
              d359 002b  ld   $2b
              d35a 0022  ld   $22
              d35b 00b4  ld   $b4
              d35c 00fb  ld   $fb
              d35d 00c7  ld   $c7
              d35e 0004  ld   $04
              d35f 0069  ld   $69
              d360 00aa  ld   $aa
              d361 0085  ld   $85
              d362 00a0  ld   $a0
              d363 0068  ld   $68
              d364 0063  ld   $63
              d365 00ff  ld   $ff
              d366 0068  ld   $68
              d367 00a0  ld   $a0
              d368 0060  ld   $60
              d369 00c7  ld   $c7
              d36a 0010  ld   $10
              d36b 006f  ld   $6f
              d36c 00aa  ld   $aa
              d36d 00bd  ld   $bd
              d36e 009f  ld   $9f
              d36f 0061  ld   $61
              d370 0011  ld   $11
              d371 00e1  ld   $e1
              d372 0004  ld   $04
              d373 002b  ld   $2b
              d374 0022  ld   $22
              d375 0032  ld   $32
              d376 0024  ld   $24
              d377 00a2  ld   $a2
              d378 0021  ld   $21
              d379 00a4  ld   $a4
              d37a 002f  ld   $2f
              d37b 0028  ld   $28
              d37c 0059  ld   $59
              d37d 00ff  ld   $ff
              d37e 00a8  ld   $a8
              d37f 0005  ld   $05
              d380 00ae  ld   $ae
              d381 0005  ld   $05
              d382 00b4  ld   $b4
              d383 0005  ld   $05
              d384 00d3  ld   $d3
              d385 0005  ld   $05
              d386 00e7  ld   $e7
              d387 0005  ld   $05
              d388 0008  ld   $08
              d389 0006  ld   $06
              d38a 007f  ld   $7f
              d38b 0000  ld   $00
              d38c 000a  ld   $0a
              d38d 0000  ld   $00
              d38e 00fe  ld   $fe
              d38f 0000  ld   $00
              d390 00fd  ld   $fd
              d391 0000  ld   $00
              d392 00fb  ld   $fb
              d393 0000  ld   $00
              d394 00f7  ld   $f7
              d395 0000  ld   $00
              d396 0000  ld   $00
              d397 0000  ld   $00
              d398 0012  ld   $12
              d399 0054  ld   $54
              d39a 004f  ld   $4f
              d39b 0020  ld   $20
              d39c 004c  ld   $4c
              d39d 0049  ld   $49
              d39e 0053  ld   $53
              d39f 0054  ld   $54
              d3a0 0020  ld   $20
              d3a1 004f  ld   $4f
              d3a2 0052  ld   $52
              d3a3 0020  ld   $20
              d3a4 0045  ld   $45
              d3a5 0058  ld   $58
              d3a6 0045  ld   $45
              d3a7 0043  ld   $43
              d3a8 0055  ld   $55
              d3a9 0054  ld   $54
              d3aa 0045  ld   $45
              d3ab 0000  ld   $00
              d3ac 001b  ld   $1b
              d3ad 0054  ld   $54
              d3ae 004f  ld   $4f
              d3af 0020  ld   $20
              d3b0 0053  ld   $53
              d3b1 0045  ld   $45
              d3b2 004c  ld   $4c
              d3b3 0045  ld   $45
              d3b4 0043  ld   $43
              d3b5 0054  ld   $54
              d3b6 0020  ld   $20
              d3b7 0061  ld   $61
              d3b8 006e  ld   $6e
              d3b9 0064  ld   $64
              d3ba 0020  ld   $20
              d3bb 0050  ld   $50
              d3bc 0041  ld   $41
              d3bd 0047  ld   $47
              d3be 0045  ld   $45
              d3bf 0020  ld   $20
              d3c0 0055  ld   $55
              d3c1 0050  ld   $50
              d3c2 002f  ld   $2f
              d3c3 0044  ld   $44
              d3c4 004f  ld   $4f
              d3c5 0057  ld   $57
              d3c6 004e  ld   $4e
              d3c7 0020  ld   $20
              d3c8 0000  ld   $00
              d3c9 0069  ld   $69
              d3ca 00a0  ld   $a0
              d3cb 0024  ld   $24
              d3cc 0011  ld   $11
              d3cd 0000  ld   $00
              d3ce 000b  ld   $0b
              d3cf 002b  ld   $2b
              d3d0 0022  ld   $22
              d3d1 0021  ld   $21
              d3d2 0082  ld   $82
              d3d3 00b4  ld   $b4
              d3d4 00e6  ld   $e6
              d3d5 00ff  ld   $ff
              d3d6 0005  ld   $05
              d3d7 0050  ld   $50
              d3d8 0052  ld   $52
              d3d9 0045  ld   $45
              d3da 0053  ld   $53
              d3db 0053  ld   $53
              d3dc 0000  ld   $00
              d3dd 0011  ld   $11
              d3de 0020  ld   $20
              d3df 005b  ld   $5b
              d3e0 0041  ld   $41
              d3e1 005d  ld   $5d
              d3e2 005b  ld   $5b
              d3e3 0045  ld   $45
              d3e4 004e  ld   $4e
              d3e5 0054  ld   $54
              d3e6 0045  ld   $45
              d3e7 0052  ld   $52
              d3e8 005d  ld   $5d
              d3e9 005b  ld   $5b
              d3ea 0044  ld   $44
              d3eb 0045  ld   $45
              d3ec 004c  ld   $4c
              d3ed 005d  ld   $5d
              d3ee 0020  ld   $20
              d3ef 0000  ld   $00
              d3f0 0078  ld   $78
              d3f1 00a1  ld   $a1
              d3f2 0005  ld   $05
              d3f3 00a0  ld   $a0
              d3f4 0096  ld   $96
              d3f5 0099  ld   $99
              d3f6 0098  ld   $98
              d3f7 00ff  ld   $ff
              d3f8 0079  ld   $79
              d3f9 00a1  ld   $a1
              d3fa 0005  ld   $05
              d3fb fe00  bra  ac          ;+-----------------------------------+
              d3fc fcfd  bra  $d3fd       ;|                                   |
              d3fd 1418  ld   $18,y       ;| Trampoline for page $d300 lookups |
              d3fe e006  jmp  y,$06       ;|                                   |
              d3ff c218  st   [$18]       ;+-----------------------------------+
              d400 0003  ld   $03
              d401 0055  ld   $55
              d402 0053  ld   $53
              d403 0045  ld   $45
              d404 0000  ld   $00
              d405 007a  ld   $7a
              d406 00a0  ld   $a0
              d407 0002  ld   $02
              d408 0000  ld   $00
              d409 0000  ld   $00
              d40a 007b  ld   $7b
              d40b 00a0  ld   $a0
              d40c 0002  ld   $02
              d40d 0000  ld   $00
              d40e 0000  ld   $00
              d40f 007c  ld   $7c
              d410 00a2  ld   $a2
              d411 005e  ld   $5e
              d412 000a  ld   $0a
              d413 0020  ld   $20
              d414 005b  ld   $5b
              d415 0041  ld   $41
              d416 0052  ld   $52
              d417 0052  ld   $52
              d418 004f  ld   $4f
              d419 0057  ld   $57
              d41a 0053  ld   $53
              d41b 005d  ld   $5d
              d41c 0020  ld   $20
              d41d 0000  ld   $00
              d41e 0000  ld   $00
              d41f 0000  ld   $00
              * 83 times
              d470 007d  ld   $7d
              d471 00a0  ld   $a0
              d472 0002  ld   $02
              d473 0000  ld   $00
              d474 0000  ld   $00
              d475 0000  ld   $00
              d476 0000  ld   $00         ;End of gbas/browser/Browser_SDCard_ROMvX0.gt1, size 2587
                                          ;+-----------------------------------+
                                          ;| gasm/loader/Loader_ROMvX0.gt1     |
                                          ;+-----------------------------------+
              d477 dc53  st   $53,[y,x++] ;'S'
              d478 dc44  st   $44,[y,x++] ;'D'
              d479 dc43  st   $43,[y,x++] ;'C'
              d47a dc61  st   $61,[y,x++] ;'a'
              d47b dc72  st   $72,[y,x++] ;'r'
              d47c dc64  st   $64,[y,x++] ;'d'
              d47d dc00  st   $00,[y,x++] ;'\x00'
              d47e dc00  st   $00,[y,x++] ;'\x00'
              d47f 005c  ld   $5c
              d480 c218  st   [$18]
              d481 00ca  ld   $ca
              d482 14f3  ld   $f3,y
              d483 e019  jmp  y,$19
              d484 c219  st   [$19]
Loader:       d485 0000  ld   $00
              d486 00a8  ld   $a8
              d487 0015  ld   $15
              d488 0011  ld   $11
              d489 0080  ld   $80
              d48a 0030  ld   $30
              d48b 002b  ld   $2b
              d48c 0022  ld   $22
              d48d 0016  ld   $16
              d48e 00b8  ld   $b8
              d48f 0024  ld   $24
              d490 0016  ld   $16
              d491 0026  ld   $26
              d492 0025  ld   $25
              d493 00b4  ld   $b4
              d494 00f2  ld   $f2
              d495 0000  ld   $00
              d496 0000  ld   $00
              d497 0000  ld   $00
              d498 00cf  ld   $cf
              d499 00db  ld   $db
              d49a 00eb  ld   $eb
              d49b 00fb  ld   $fb
              d49c 0002  ld   $02
              d49d 0000  ld   $00
              d49e 0000  ld   $00         ;End of gasm/loader/Loader_ROMvX0.gt1, size 26
                                          ;+-----------------------------------+
                                          ;| Apps/CardBoot/CardBoot.gt1        |
                                          ;+-----------------------------------+
              d49f dc4c  st   $4c,[y,x++] ;'L'
              d4a0 dc6f  st   $6f,[y,x++] ;'o'
              d4a1 dc61  st   $61,[y,x++] ;'a'
              d4a2 dc64  st   $64,[y,x++] ;'d'
              d4a3 dc65  st   $65,[y,x++] ;'e'
              d4a4 dc72  st   $72,[y,x++] ;'r'
              d4a5 dc00  st   $00,[y,x++] ;'\x00'
              d4a6 dc00  st   $00,[y,x++] ;'\x00'
              d4a7 0085  ld   $85
              d4a8 c218  st   [$18]
              d4a9 00d4  ld   $d4
              d4aa 14f3  ld   $f3,y
              d4ab e019  jmp  y,$19
              d4ac c219  st   [$19]
Boot:         d4ad 0002  ld   $02
              d4ae 0000  ld   $00
              d4af 004c  ld   $4c
              d4b0 001a  ld   $1a
              d4b1 0021  ld   $21
              d4b2 00e6  ld   $e6
              d4b3 0040  ld   $40
              d4b4 0035  ld   $35
              d4b5 0053  ld   $53
              d4b6 000b  ld   $0b
              d4b7 0021  ld   $21
              d4b8 000e  ld   $0e
              d4b9 00f3  ld   $f3
              d4ba 0017  ld   $17
              d4bb 0090  ld   $90
              d4bc 0005  ld   $05
              d4bd 0011  ld   $11
              d4be 0000  ld   $00
              d4bf 007d  ld   $7d
              d4c0 002b  ld   $2b
              d4c1 0030  ld   $30
              d4c2 0011  ld   $11
              d4c3 00f9  ld   $f9
              d4c4 0001  ld   $01
              d4c5 002b  ld   $2b
              d4c6 0032  ld   $32
              d4c7 0059  ld   $59
              d4c8 0000  ld   $00
              d4c9 0085  ld   $85
              d4ca 00b1  ld   $b1
              d4cb 0072  ld   $72
              d4cc 0059  ld   $59
              d4cd 0020  ld   $20
              d4ce 00f0  ld   $f0
              d4cf 0032  ld   $32
              d4d0 0011  ld   $11
              d4d1 00e8  ld   $e8
              d4d2 0001  ld   $01
              d4d3 002b  ld   $2b
              d4d4 0034  ld   $34
              d4d5 0059  ld   $59
              d4d6 007b  ld   $7b
              d4d7 00f0  ld   $f0
              d4d8 0034  ld   $34
              d4d9 0021  ld   $21
              d4da 0034  ld   $34
              d4db 00e3  ld   $e3
              d4dc 0002  ld   $02
              d4dd 002b  ld   $2b
              d4de 0034  ld   $34
              d4df 0011  ld   $11
              d4e0 00f0  ld   $f0
              d4e1 0001  ld   $01
              d4e2 00fc  ld   $fc
              d4e3 0034  ld   $34
              d4e4 0035  ld   $35
              d4e5 0072  ld   $72
              d4e6 0023  ld   $23
              d4e7 0011  ld   $11
              d4e8 007c  ld   $7c
              d4e9 0000  ld   $00
              d4ea 005e  ld   $5e
              d4eb 0027  ld   $27
              d4ec 0059  ld   $59
              d4ed 00ff  ld   $ff
              d4ee 002b  ld   $2b
              d4ef 0025  ld   $25
              d4f0 0059  ld   $59
              d4f1 0000  ld   $00
              d4f2 005e  ld   $5e
              d4f3 0024  ld   $24
              d4f4 00b4  ld   $b4
              d4f5 00f3  ld   $f3
              d4f6 0011  ld   $11
              d4f7 00a0  ld   $a0
              d4f8 0058  ld   $58
              d4f9 002b  ld   $2b
              d4fa 001a  ld   $1a
              d4fb fe00  bra  ac          ;+-----------------------------------+
              d4fc fcfd  bra  $d4fd       ;|                                   |
              d4fd 1418  ld   $18,y       ;| Trampoline for page $d400 lookups |
              d4fe e006  jmp  y,$06       ;|                                   |
              d4ff c218  st   [$18]       ;+-----------------------------------+
              d500 00ff  ld   $ff
              d501 0058  ld   $58
              d502 00a0  ld   $a0
              d503 0042  ld   $42
              d504 00cd  ld   $cd
              d505 00c8  ld   $c8
              d506 0075  ld   $75
              d507 0059  ld   $59
              d508 0000  ld   $00
              d509 002b  ld   $2b
              d50a 0036  ld   $36
              d50b 0059  ld   $59
              d50c 000a  ld   $0a
              d50d 002b  ld   $2b
              d50e 0034  ld   $34
              d50f 0085  ld   $85
              d510 00bc  ld   $bc
              d511 005d  ld   $5d
              d512 0021  ld   $21
              d513 0034  ld   $34
              d514 00e6  ld   $e6
              d515 0001  ld   $01
              d516 0035  ld   $35
              d517 004d  ld   $4d
              d518 00a7  ld   $a7
              d519 0085  ld   $85
              d51a 00a2  ld   $a2
              d51b 005d  ld   $5d
              d51c 00cd  ld   $cd
              d51d 00be  ld   $be
              d51e 0040  ld   $40
              d51f 0000  ld   $00
              d520 0000  ld   $00
              d521 0000  ld   $00
              d522 0000  ld   $00
              d523 0095  ld   $95
              d524 0085  ld   $85
              d525 00a2  ld   $a2
              d526 005f  ld   $5f
              d527 0085  ld   $85
              d528 00da  ld   $da
              d529 005f  ld   $5f
              d52a 008c  ld   $8c
              d52b 0001  ld   $01
              d52c 0063  ld   $63
              d52d 00ff  ld   $ff
              d52e 00cd  ld   $cd
              d52f 00dd  ld   $dd
              d530 0075  ld   $75
              d531 0085  ld   $85
              d532 00a2  ld   $a2
              d533 0058  ld   $58
              d534 0035  ld   $35
              d535 003f  ld   $3f
              d536 00db  ld   $db
              d537 0085  ld   $85
              d538 00af  ld   $af
              d539 005d  ld   $5d
              d53a 001a  ld   $1a
              d53b 000e  ld   $0e
              d53c 00e6  ld   $e6
              d53d 003c  ld   $3c
              d53e 0035  ld   $35
              d53f 0050  ld   $50
              d540 00cb  ld   $cb
              d541 0063  ld   $63
              d542 00ff  ld   $ff
              d543 0093  ld   $93
              d544 001b  ld   $1b
              d545 00ff  ld   $ff
              d546 0059  ld   $59
              d547 00a0  ld   $a0
              d548 0044  ld   $44
              d549 00cd  ld   $cd
              d54a 00df  ld   $df
              d54b 0075  ld   $75
              d54c 0085  ld   $85
              d54d 00a2  ld   $a2
              d54e 005d  ld   $5d
              d54f 00cd  ld   $cd
              d550 00ac  ld   $ac
              d551 0048  ld   $48
              d552 0000  ld   $00
              d553 0000  ld   $00
              d554 0001  ld   $01
              d555 00aa  ld   $aa
              d556 0087  ld   $87
              d557 0085  ld   $85
              d558 00a2  ld   $a2
              d559 005f  ld   $5f
              d55a 0085  ld   $85
              d55b 00da  ld   $da
              d55c 005f  ld   $5f
              d55d 008c  ld   $8c
              d55e 00ff  ld   $ff
              d55f 0035  ld   $35
              d560 003f  ld   $3f
              d561 00d9  ld   $d9
              d562 0021  ld   $21
              d563 0038  ld   $38
              d564 0082  ld   $82
              d565 0004  ld   $04
              d566 0035  ld   $35
              d567 003f  ld   $3f
              d568 00c4  ld   $c4
              d569 0059  ld   $59
              d56a 0001  ld   $01
              d56b 002b  ld   $2b
              d56c 0036  ld   $36
              d56d 0090  ld   $90
              d56e 00d9  ld   $d9
              d56f 0085  ld   $85
              d570 00bc  ld   $bc
              d571 005d  ld   $5d
              d572 0085  ld   $85
              d573 00bc  ld   $bc
              d574 005d  ld   $5d
              d575 0085  ld   $85
              d576 00bc  ld   $bc
              d577 005d  ld   $5d
              d578 0085  ld   $85
              d579 00bc  ld   $bc
              d57a 005d  ld   $5d
              d57b 008c  ld   $8c
              d57c 00aa  ld   $aa
              d57d 0035  ld   $35
              d57e 0072  ld   $72
              d57f 00d9  ld   $d9
              d580 0059  ld   $59
              d581 0002  ld   $02
              d582 002b  ld   $2b
              d583 0036  ld   $36
              d584 0021  ld   $21
              d585 0038  ld   $38
              d586 0082  ld   $82
              d587 00fa  ld   $fa
              d588 0063  ld   $63
              d589 00ff  ld   $ff
              d58a 0093  ld   $93
              d58b 001b  ld   $1b
              d58c 00ff  ld   $ff
              d58d 005a  ld   $5a
              d58e 00a0  ld   $a0
              d58f 0044  ld   $44
              d590 00cd  ld   $cd
              d591 00ca  ld   $ca
              d592 0075  ld   $75
              d593 0085  ld   $85
              d594 00a2  ld   $a2
              d595 005d  ld   $5d
              d596 00cd  ld   $cd
              d597 00ac  ld   $ac
              d598 007a  ld   $7a
              d599 0000  ld   $00
              d59a 0000  ld   $00
              d59b 0000  ld   $00
              * 5 times
              d59e 0085  ld   $85
              d59f 00a2  ld   $a2
              d5a0 005f  ld   $5f
              d5a1 0085  ld   $85
              d5a2 00da  ld   $da
              d5a3 005f  ld   $5f
              d5a4 0085  ld   $85
              d5a5 00bc  ld   $bc
              d5a6 005d  ld   $5d
              d5a7 0082  ld   $82
              d5a8 0040  ld   $40
              d5a9 0035  ld   $35
              d5aa 003f  ld   $3f
              d5ab 00be  ld   $be
              d5ac 0059  ld   $59
              d5ad 0004  ld   $04
              d5ae 002b  ld   $2b
              d5af 0036  ld   $36
              d5b0 0085  ld   $85
              d5b1 00bc  ld   $bc
              d5b2 005d  ld   $5d
              d5b3 0085  ld   $85
              d5b4 00bc  ld   $bc
              d5b5 005d  ld   $5d
              d5b6 0021  ld   $21
              d5b7 0038  ld   $38
              d5b8 0082  ld   $82
              d5b9 00fe  ld   $fe
              d5ba 0063  ld   $63
              d5bb 00ff  ld   $ff
              d5bc 00cd  ld   $cd
              d5bd 00df  ld   $df
              d5be 0075  ld   $75
              d5bf 00cd  ld   $cd
              d5c0 00d5  ld   $d5
              d5c1 0077  ld   $77
              d5c2 0000  ld   $00
              d5c3 0000  ld   $00
              d5c4 0000  ld   $00
              * 5 times
              d5c7 0085  ld   $85
              d5c8 00a2  ld   $a2
              d5c9 005f  ld   $5f
              d5ca 0085  ld   $85
              d5cb 00da  ld   $da
              d5cc 005f  ld   $5f
              d5cd 0082  ld   $82
              d5ce 00fe  ld   $fe
              d5cf 0063  ld   $63
              d5d0 00ff  ld   $ff
              d5d1 0093  ld   $93
              d5d2 001b  ld   $1b
              d5d3 00ff  ld   $ff
              d5d4 005b  ld   $5b
              d5d5 00a0  ld   $a0
              d5d6 0055  ld   $55
              d5d7 00cd  ld   $cd
              d5d8 00c4  ld   $c4
              d5d9 0075  ld   $75
              d5da 0021  ld   $21
              d5db 0036  ld   $36
              d5dc 008c  ld   $8c
              d5dd 0001  ld   $01
              d5de 0035  ld   $35
              d5df 0072  ld   $72
              d5e0 00b2  ld   $b2
              d5e1 00cd  ld   $cd
              d5e2 00b0  ld   $b0
              d5e3 0069  ld   $69
              d5e4 0000  ld   $00
              d5e5 0000  ld   $00
              d5e6 0000  ld   $00
              * 5 times
              d5e9 0090  ld   $90
              d5ea 00ba  ld   $ba
              d5eb 00cd  ld   $cd
              d5ec 00ba  ld   $ba
              d5ed 0069  ld   $69
              d5ee 0040  ld   $40
              d5ef 0000  ld   $00
              d5f0 0000  ld   $00
              d5f1 0000  ld   $00
              d5f2 0000  ld   $00
              d5f3 0085  ld   $85
              d5f4 00a2  ld   $a2
              d5f5 005f  ld   $5f
              d5f6 0085  ld   $85
              d5f7 00da  ld   $da
              d5f8 005f  ld   $5f
              d5f9 0082  ld   $82
              d5fa 00fe  ld   $fe
              d5fb fe00  bra  ac          ;+-----------------------------------+
              d5fc fcfd  bra  $d5fd       ;|                                   |
              d5fd 1418  ld   $18,y       ;| Trampoline for page $d500 lookups |
              d5fe e006  jmp  y,$06       ;|                                   |
              d5ff c218  st   [$18]       ;+-----------------------------------+
              d600 0063  ld   $63
              d601 00ff  ld   $ff
              d602 00cd  ld   $cd
              d603 00db  ld   $db
              d604 0075  ld   $75
              d605 0085  ld   $85
              d606 00ce  ld   $ce
              d607 005a  ld   $5a
              d608 0085  ld   $85
              d609 00a2  ld   $a2
              d60a 005b  ld   $5b
              d60b 0021  ld   $21
              d60c 0038  ld   $38
              d60d 0035  ld   $35
              d60e 003f  ld   $3f
              d60f 00d9  ld   $d9
              d610 001a  ld   $1a
              d611 000e  ld   $0e
              d612 00e6  ld   $e6
              d613 0078  ld   $78
              d614 0035  ld   $35
              d615 0050  ld   $50
              d616 00c7  ld   $c7
              d617 0063  ld   $63
              d618 00ff  ld   $ff
              d619 00cd  ld   $cd
              d61a 00f0  ld   $f0
              d61b 0075  ld   $75
              d61c 00cd  ld   $cd
              d61d 00e6  ld   $e6
              d61e 0050  ld   $50
              d61f 0000  ld   $00
              d620 0000  ld   $00
              d621 0002  ld   $02
              d622 0000  ld   $00
              d623 0000  ld   $00
              d624 0085  ld   $85
              d625 00a2  ld   $a2
              d626 005f  ld   $5f
              d627 0085  ld   $85
              d628 00da  ld   $da
              d629 005f  ld   $5f
              d62a 0082  ld   $82
              d62b 00fe  ld   $fe
              d62c 0063  ld   $63
              d62d 00ff  ld   $ff
              d62e 0093  ld   $93
              d62f 001b  ld   $1b
              d630 00ff  ld   $ff
              d631 005c  ld   $5c
              d632 00a0  ld   $a0
              d633 0041  ld   $41
              d634 00cd  ld   $cd
              d635 00dc  ld   $dc
              d636 0075  ld   $75
              d637 00cd  ld   $cd
              d638 00a9  ld   $a9
              d639 0051  ld   $51
              d63a 0000  ld   $00
              d63b 0000  ld   $00
              d63c 0000  ld   $00
              * 5 times
              d63f 002b  ld   $2b
              d640 003a  ld   $3a
              d641 002b  ld   $2b
              d642 003c  ld   $3c
              d643 001a  ld   $1a
              d644 003f  ld   $3f
              d645 0093  ld   $93
              d646 003c  ld   $3c
              d647 00f0  ld   $f0
              d648 003c  ld   $3c
              d649 001a  ld   $1a
              d64a 003e  ld   $3e
              d64b 0093  ld   $93
              d64c 003c  ld   $3c
              d64d 00f0  ld   $f0
              d64e 003c  ld   $3c
              d64f 001a  ld   $1a
              d650 0041  ld   $41
              d651 0093  ld   $93
              d652 003c  ld   $3c
              d653 00f0  ld   $f0
              d654 003c  ld   $3c
              d655 001a  ld   $1a
              d656 0040  ld   $40
              d657 0093  ld   $93
              d658 003c  ld   $3c
              d659 00f0  ld   $f0
              d65a 003c  ld   $3c
              d65b 0021  ld   $21
              d65c 003a  ld   $3a
              d65d 0085  ld   $85
              d65e 00a2  ld   $a2
              d65f 005f  ld   $5f
              d660 0085  ld   $85
              d661 00da  ld   $da
              d662 005f  ld   $5f
              d663 0082  ld   $82
              d664 00fe  ld   $fe
              d665 0035  ld   $35
              d666 0072  ld   $72
              d667 00da  ld   $da
              d668 0085  ld   $85
              d669 00bc  ld   $bc
              d66a 005d  ld   $5d
              d66b 008c  ld   $8c
              d66c 00ff  ld   $ff
              d66d 0035  ld   $35
              d66e 003f  ld   $3f
              d66f 00d2  ld   $d2
              d670 0063  ld   $63
              d671 00ff  ld   $ff
              d672 0093  ld   $93
              d673 001b  ld   $1b
              d674 00ff  ld   $ff
              d675 005d  ld   $5d
              d676 00a0  ld   $a0
              d677 0035  ld   $35
              d678 00cd  ld   $cd
              d679 00ab  ld   $ab
              d67a 0011  ld   $11
              d67b 0009  ld   $09
              d67c 000b  ld   $0b
              d67d 002b  ld   $2b
              d67e 0022  ld   $22
              d67f 0011  ld   $11
              d680 0078  ld   $78
              d681 0080  ld   $80
              d682 00b4  ld   $b4
              d683 00fa  ld   $fa
              d684 00ff  ld   $ff
              d685 00cd  ld   $cd
              d686 00b8  ld   $b8
              d687 0011  ld   $11
              d688 0009  ld   $09
              d689 000b  ld   $0b
              d68a 002b  ld   $2b
              d68b 0022  ld   $22
              d68c 0011  ld   $11
              d68d 007c  ld   $7c
              d68e 0080  ld   $80
              d68f 00b4  ld   $b4
              d690 00fa  ld   $fa
              d691 00ff  ld   $ff
              d692 00cd  ld   $cd
              d693 00d0  ld   $d0
              d694 0059  ld   $59
              d695 00ff  ld   $ff
              d696 005e  ld   $5e
              d697 002a  ld   $2a
              d698 0059  ld   $59
              d699 002a  ld   $2a
              d69a 002b  ld   $2b
              d69b 0024  ld   $24
              d69c 00e3  ld   $e3
              d69d 0001  ld   $01
              d69e 002b  ld   $2b
              d69f 0026  ld   $26
              d6a0 0011  ld   $11
              d6a1 0015  ld   $15
              d6a2 000b  ld   $0b
              d6a3 002b  ld   $2b
              d6a4 0022  ld   $22
              d6a5 00b4  ld   $b4
              d6a6 00cb  ld   $cb
              d6a7 001a  ld   $1a
              d6a8 002a  ld   $2a
              d6a9 00ff  ld   $ff
              d6aa 0093  ld   $93
              d6ab 001b  ld   $1b
              d6ac 00ff  ld   $ff
              d6ad 005e  ld   $5e
              d6ae 00a0  ld   $a0
              d6af 0029  ld   $29
              d6b0 00cd  ld   $cd
              d6b1 00c4  ld   $c4
              d6b2 00fc  ld   $fc
              d6b3 0043  ld   $43
              d6b4 005e  ld   $5e
              d6b5 0043  ld   $43
              d6b6 0059  ld   $59
              d6b7 0008  ld   $08
              d6b8 002b  ld   $2b
              d6b9 0034  ld   $34
              d6ba 0021  ld   $21
              d6bb 0042  ld   $42
              d6bc 0035  ld   $35
              d6bd 0053  ld   $53
              d6be 00b8  ld   $b8
              d6bf 0099  ld   $99
              d6c0 0042  ld   $42
              d6c1 002b  ld   $2b
              d6c2 0042  ld   $42
              d6c3 0011  ld   $11
              d6c4 0021  ld   $21
              d6c5 0010  ld   $10
              d6c6 00fc  ld   $fc
              d6c7 0042  ld   $42
              d6c8 0090  ld   $90
              d6c9 00ba  ld   $ba
              d6ca 0099  ld   $99
              d6cb 0042  ld   $42
              d6cc 002b  ld   $2b
              d6cd 0042  ld   $42
              d6ce 0021  ld   $21
              d6cf 0034  ld   $34
              d6d0 00e6  ld   $e6
              d6d1 0001  ld   $01
              d6d2 0035  ld   $35
              d6d3 004d  ld   $4d
              d6d4 00a6  ld   $a6
              d6d5 00ff  ld   $ff
              d6d6 0093  ld   $93
              d6d7 001b  ld   $1b
              d6d8 00ff  ld   $ff
              d6d9 005f  ld   $5f
              d6da 00a0  ld   $a0
              d6db 0057  ld   $57
              d6dc 00cd  ld   $cd
              d6dd 00d6  ld   $d6
              d6de 0075  ld   $75
              d6df 002b  ld   $2b
              d6e0 003a  ld   $3a
              d6e1 0021  ld   $21
              d6e2 0044  ld   $44
              d6e3 002b  ld   $2b
              d6e4 003c  ld   $3c
              d6e5 0059  ld   $59
              d6e6 00ff  ld   $ff
              d6e7 00f0  ld   $f0
              d6e8 003c  ld   $3c
              d6e9 0093  ld   $93
              d6ea 003c  ld   $3c
              d6eb 00f0  ld   $f0
              d6ec 003c  ld   $3c
              d6ed 0093  ld   $93
              d6ee 003c  ld   $3c
              d6ef 0059  ld   $59
              d6f0 0006  ld   $06
              d6f1 002b  ld   $2b
              d6f2 0034  ld   $34
              d6f3 0021  ld   $21
              d6f4 003a  ld   $3a
              d6f5 00ad  ld   $ad
              d6f6 0093  ld   $93
              d6f7 003a  ld   $3a
              d6f8 00f0  ld   $f0
              d6f9 003c  ld   $3c
              d6fa 0093  ld   $93
              d6fb fe00  bra  ac          ;+-----------------------------------+
              d6fc fcfd  bra  $d6fd       ;|                                   |
              d6fd 1418  ld   $18,y       ;| Trampoline for page $d600 lookups |
              d6fe e006  jmp  y,$06       ;|                                   |
              d6ff c218  st   [$18]       ;+-----------------------------------+
              d700 003c  ld   $3c
              d701 0021  ld   $21
              d702 0034  ld   $34
              d703 00e6  ld   $e6
              d704 0001  ld   $01
              d705 0035  ld   $35
              d706 004d  ld   $4d
              d707 00b3  ld   $b3
              d708 0021  ld   $21
              d709 0044  ld   $44
              d70a 002b  ld   $2b
              d70b 0024  ld   $24
              d70c 00e3  ld   $e3
              d70d 0008  ld   $08
              d70e 002b  ld   $2b
              d70f 0026  ld   $26
              d710 0011  ld   $11
              d711 0015  ld   $15
              d712 000b  ld   $0b
              d713 002b  ld   $2b
              d714 0022  ld   $22
              d715 00b4  ld   $b4
              d716 00cb  ld   $cb
              d717 0063  ld   $63
              d718 00ff  ld   $ff
              d719 00cd  ld   $cd
              d71a 00f2  ld   $f2
              d71b 0075  ld   $75
              d71c 0059  ld   $59
              d71d 0008  ld   $08
              d71e 002b  ld   $2b
              d71f 0034  ld   $34
              d720 0085  ld   $85
              d721 00bc  ld   $bc
              d722 005d  ld   $5d
              d723 0082  ld   $82
              d724 0080  ld   $80
              d725 0035  ld   $35
              d726 003f  ld   $3f
              d727 00ec  ld   $ec
              d728 0021  ld   $21
              d729 0034  ld   $34
              d72a 00e6  ld   $e6
              d72b 0001  ld   $01
              d72c 0035  ld   $35
              d72d 004d  ld   $4d
              d72e 00db  ld   $db
              d72f 001a  ld   $1a
              d730 002a  ld   $2a
              d731 002b  ld   $2b
              d732 0038  ld   $38
              d733 0063  ld   $63
              d734 00ff  ld   $ff
              d735 0093  ld   $93
              d736 001b  ld   $1b
              d737 00ff  ld   $ff
              d738 0060  ld   $60
              d739 00a0  ld   $a0
              d73a 004f  ld   $4f
              d73b 00cd  ld   $cd
              d73c 00c3  ld   $c3
              d73d 0075  ld   $75
              d73e 0085  ld   $85
              d73f 00cc  ld   $cc
              d740 0058  ld   $58
              d741 0085  ld   $85
              d742 00a2  ld   $a2
              d743 0059  ld   $59
              d744 0085  ld   $85
              d745 00c8  ld   $c8
              d746 005b  ld   $5b
              d747 0021  ld   $21
              d748 0036  ld   $36
              d749 00e6  ld   $e6
              d74a 0002  ld   $02
              d74b 0035  ld   $35
              d74c 0072  ld   $72
              d74d 00b4  ld   $b4
              d74e 0085  ld   $85
              d74f 00a2  ld   $a2
              d750 005a  ld   $5a
              d751 0021  ld   $21
              d752 0036  ld   $36
              d753 00e6  ld   $e6
              d754 0002  ld   $02
              d755 0035  ld   $35
              d756 004d  ld   $4d
              d757 00be  ld   $be
              d758 0085  ld   $85
              d759 00df  ld   $df
              d75a 005b  ld   $5b
              d75b 0085  ld   $85
              d75c 00af  ld   $af
              d75d 005d  ld   $5d
              d75e 0063  ld   $63
              d75f 00ff  ld   $ff
              d760 00cd  ld   $cd
              d761 00ea  ld   $ea
              d762 0075  ld   $75
              d763 0085  ld   $85
              d764 00a2  ld   $a2
              d765 0063  ld   $63
              d766 00cd  ld   $cd
              d767 00d3  ld   $d3
              d768 0056  ld   $56
              d769 006f  ld   $6f
              d76a 006c  ld   $6c
              d76b 002e  ld   $2e
              d76c 0049  ld   $49
              d76d 0044  ld   $44
              d76e 0020  ld   $20
              d76f 0000  ld   $00
              d770 0085  ld   $85
              d771 00a2  ld   $a2
              d772 0069  ld   $69
              d773 0059  ld   $59
              d774 000b  ld   $0b
              d775 0099  ld   $99
              d776 0030  ld   $30
              d777 00f6  ld   $f6
              d778 002b  ld   $2b
              d779 0046  ld   $46
              d77a 0085  ld   $85
              d77b 00ce  ld   $ce
              d77c 0067  ld   $67
              d77d 0011  ld   $11
              d77e 0000  ld   $00
              d77f 0002  ld   $02
              d780 00fc  ld   $fc
              d781 0046  ld   $46
              d782 0085  ld   $85
              d783 00bb  ld   $bb
              d784 0068  ld   $68
              d785 0063  ld   $63
              d786 00ff  ld   $ff
              d787 0093  ld   $93
              d788 001b  ld   $1b
              d789 00ff  ld   $ff
              d78a 0061  ld   $61
              d78b 00a0  ld   $a0
              d78c 005e  ld   $5e
              d78d 00cd  ld   $cd
              d78e 00ea  ld   $ea
              d78f 0075  ld   $75
              d790 0059  ld   $59
              d791 0000  ld   $00
              d792 002b  ld   $2b
              d793 0040  ld   $40
              d794 002b  ld   $2b
              d795 003e  ld   $3e
              d796 0085  ld   $85
              d797 00a2  ld   $a2
              d798 0063  ld   $63
              d799 00cd  ld   $cd
              d79a 00b1  ld   $b1
              d79b 004d  ld   $4d
              d79c 0042  ld   $42
              d79d 0052  ld   $52
              d79e 0020  ld   $20
              d79f 0000  ld   $00
              d7a0 0085  ld   $85
              d7a1 00a2  ld   $a2
              d7a2 0069  ld   $69
              d7a3 0011  ld   $11
              d7a4 00fe  ld   $fe
              d7a5 0001  ld   $01
              d7a6 0099  ld   $99
              d7a7 0030  ld   $30
              d7a8 00f6  ld   $f6
              d7a9 002b  ld   $2b
              d7aa 0046  ld   $46
              d7ab 0011  ld   $11
              d7ac 0055  ld   $55
              d7ad 00aa  ld   $aa
              d7ae 00fc  ld   $fc
              d7af 0046  ld   $46
              d7b0 0035  ld   $35
              d7b1 0072  ld   $72
              d7b2 00e8  ld   $e8
              d7b3 0011  ld   $11
              d7b4 00c6  ld   $c6
              d7b5 0001  ld   $01
              d7b6 0099  ld   $99
              d7b7 0030  ld   $30
              d7b8 00f6  ld   $f6
              d7b9 002b  ld   $2b
              d7ba 0040  ld   $40
              d7bb 0011  ld   $11
              d7bc 00c8  ld   $c8
              d7bd 0001  ld   $01
              d7be 0099  ld   $99
              d7bf 0030  ld   $30
              d7c0 00f6  ld   $f6
              d7c1 002b  ld   $2b
              d7c2 003e  ld   $3e
              d7c3 0011  ld   $11
              d7c4 00c2  ld   $c2
              d7c5 0001  ld   $01
              d7c6 0099  ld   $99
              d7c7 0030  ld   $30
              d7c8 00ad  ld   $ad
              d7c9 002b  ld   $2b
              d7ca 0046  ld   $46
              d7cb 0085  ld   $85
              d7cc 00a2  ld   $a2
              d7cd 0068  ld   $68
              d7ce 0059  ld   $59
              d7cf 000b  ld   $0b
              d7d0 00fc  ld   $fc
              d7d1 0046  ld   $46
              d7d2 0035  ld   $35
              d7d3 003f  ld   $3f
              d7d4 00e8  ld   $e8
              d7d5 008c  ld   $8c
              d7d6 0007  ld   $07
              d7d7 0063  ld   $63
              d7d8 00ff  ld   $ff
              d7d9 00cd  ld   $cd
              d7da 00f9  ld   $f9
              d7db 002b  ld   $2b
              d7dc 0048  ld   $48
              d7dd 0099  ld   $99
              d7de 0048  ld   $48
              d7df 00e6  ld   $e6
              d7e0 0001  ld   $01
              d7e1 005e  ld   $5e
              d7e2 0019  ld   $19
              d7e3 0088  ld   $88
              d7e4 00ff  ld   $ff
              d7e5 002b  ld   $2b
              d7e6 004a  ld   $4a
              d7e7 00ff  ld   $ff
              d7e8 0093  ld   $93
              d7e9 001b  ld   $1b
              d7ea 00ff  ld   $ff
              d7eb 0062  ld   $62
              d7ec 00a0  ld   $a0
              d7ed 0060  ld   $60
              d7ee 00cd  ld   $cd
              d7ef 00fb  ld   $fb
              d7f0 0075  ld   $75
              d7f1 0059  ld   $59
              d7f2 000d  ld   $0d
              d7f3 0099  ld   $99
              d7f4 0030  ld   $30
              d7f5 00ad  ld   $ad
              d7f6 0085  ld   $85
              d7f7 00ee  ld   $ee
              d7f8 0061  ld   $61
              d7f9 0021  ld   $21
              d7fa 0040  ld   $40
              d7fb fe00  bra  ac          ;+-----------------------------------+
              d7fc fcfd  bra  $d7fd       ;|                                   |
              d7fd 1418  ld   $18,y       ;| Trampoline for page $d700 lookups |
              d7fe e006  jmp  y,$06       ;|                                   |
              d7ff c218  st   [$18]       ;+-----------------------------------+
              d800 002b  ld   $2b
              d801 004c  ld   $4c
              d802 0021  ld   $21
              d803 003e  ld   $3e
              d804 002b  ld   $2b
              d805 004e  ld   $4e
              d806 0059  ld   $59
              d807 000e  ld   $0e
              d808 0099  ld   $99
              d809 0030  ld   $30
              d80a 00f6  ld   $f6
              d80b 002b  ld   $2b
              d80c 0050  ld   $50
              d80d 0085  ld   $85
              d80e 00d2  ld   $d2
              d80f 0066  ld   $66
              d810 002b  ld   $2b
              d811 0052  ld   $52
              d812 0021  ld   $21
              d813 004e  ld   $4e
              d814 002b  ld   $2b
              d815 0054  ld   $54
              d816 0059  ld   $59
              d817 0024  ld   $24
              d818 0099  ld   $99
              d819 0030  ld   $30
              d81a 00f6  ld   $f6
              d81b 002b  ld   $2b
              d81c 0050  ld   $50
              d81d 0059  ld   $59
              d81e 0026  ld   $26
              d81f 0099  ld   $99
              d820 0030  ld   $30
              d821 00f6  ld   $f6
              d822 002b  ld   $2b
              d823 0056  ld   $56
              d824 0085  ld   $85
              d825 00d6  ld   $d6
              d826 0066  ld   $66
              d827 0085  ld   $85
              d828 00d6  ld   $d6
              d829 0066  ld   $66
              d82a 0059  ld   $59
              d82b 0000  ld   $00
              d82c 00b8  ld   $b8
              d82d 0048  ld   $48
              d82e 00b8  ld   $b8
              d82f 0048  ld   $48
              d830 002b  ld   $2b
              d831 0050  ld   $50
              d832 0011  ld   $11
              d833 00ff  ld   $ff
              d834 00ff  ld   $ff
              d835 002b  ld   $2b
              d836 0056  ld   $56
              d837 0085  ld   $85
              d838 00d6  ld   $d6
              d839 0066  ld   $66
              d83a 002b  ld   $2b
              d83b 0058  ld   $58
              d83c 0021  ld   $21
              d83d 004e  ld   $4e
              d83e 002b  ld   $2b
              d83f 005a  ld   $5a
              d840 0059  ld   $59
              d841 002c  ld   $2c
              d842 0099  ld   $99
              d843 0030  ld   $30
              d844 00f6  ld   $f6
              d845 002b  ld   $2b
              d846 005c  ld   $5c
              d847 0059  ld   $59
              d848 002e  ld   $2e
              d849 0099  ld   $99
              d84a 0030  ld   $30
              d84b 00f6  ld   $f6
              d84c 002b  ld   $2b
              d84d 005e  ld   $5e
              d84e 0063  ld   $63
              d84f 00ff  ld   $ff
              d850 0093  ld   $93
              d851 001b  ld   $1b
              d852 00ff  ld   $ff
              d853 0063  ld   $63
              d854 00a0  ld   $a0
              d855 003e  ld   $3e
              d856 00cd  ld   $cd
              d857 00d9  ld   $d9
              d858 0075  ld   $75
              d859 0085  ld   $85
              d85a 00a2  ld   $a2
              d85b 005d  ld   $5d
              d85c 0021  ld   $21
              d85d 0036  ld   $36
              d85e 00e6  ld   $e6
              d85f 0002  ld   $02
              d860 0035  ld   $35
              d861 004d  ld   $4d
              d862 00ae  ld   $ae
              d863 0085  ld   $85
              d864 00a2  ld   $a2
              d865 0066  ld   $66
              d866 0085  ld   $85
              d867 00a2  ld   $a2
              d868 005c  ld   $5c
              d869 001a  ld   $1a
              d86a 002a  ld   $2a
              d86b 008c  ld   $8c
              d86c 00fe  ld   $fe
              d86d 0035  ld   $35
              d86e 0072  ld   $72
              d86f 00d7  ld   $d7
              d870 0011  ld   $11
              d871 0015  ld   $15
              d872 000b  ld   $0b
              d873 002b  ld   $2b
              d874 0022  ld   $22
              d875 0011  ld   $11
              d876 0000  ld   $00
              d877 007c  ld   $7c
              d878 002b  ld   $2b
              d879 0024  ld   $24
              d87a 0021  ld   $21
              d87b 0030  ld   $30
              d87c 002b  ld   $2b
              d87d 0026  ld   $26
              d87e 00b4  ld   $b4
              d87f 00cb  ld   $cb
              d880 0093  ld   $93
              d881 0027  ld   $27
              d882 00b4  ld   $b4
              d883 00cb  ld   $cb
              d884 0085  ld   $85
              d885 00bc  ld   $bc
              d886 005d  ld   $5d
              d887 0085  ld   $85
              d888 00bc  ld   $bc
              d889 005d  ld   $5d
              d88a 0085  ld   $85
              d88b 00af  ld   $af
              d88c 005d  ld   $5d
              d88d 0059  ld   $59
              d88e 0000  ld   $00
              d88f 0063  ld   $63
              d890 00ff  ld   $ff
              d891 0093  ld   $93
              d892 001b  ld   $1b
              d893 00ff  ld   $ff
              d894 0064  ld   $64
              d895 00a0  ld   $a0
              d896 0050  ld   $50
              d897 00cd  ld   $cd
              d898 00eb  ld   $eb
              d899 0075  ld   $75
              d89a 0021  ld   $21
              d89b 0060  ld   $60
              d89c 00fc  ld   $fc
              d89d 0062  ld   $62
              d89e 0035  ld   $35
              d89f 0072  ld   $72
              d8a0 00ae  ld   $ae
              d8a1 0021  ld   $21
              d8a2 0064  ld   $64
              d8a3 00fc  ld   $fc
              d8a4 0066  ld   $66
              d8a5 001a  ld   $1a
              d8a6 0019  ld   $19
              d8a7 0035  ld   $35
              d8a8 0072  ld   $72
              d8a9 00b5  ld   $b5
              d8aa 0021  ld   $21
              d8ab 0066  ld   $66
              d8ac 0090  ld   $90
              d8ad 00bb  ld   $bb
              d8ae 0021  ld   $21
              d8af 0064  ld   $64
              d8b0 0088  ld   $88
              d8b1 00ff  ld   $ff
              d8b2 00e3  ld   $e3
              d8b3 0001  ld   $01
              d8b4 00b8  ld   $b8
              d8b5 0064  ld   $64
              d8b6 002b  ld   $2b
              d8b7 0068  ld   $68
              d8b8 0035  ld   $35
              d8b9 003f  ld   $3f
              d8ba 00e5  ld   $e5
              d8bb 0011  ld   $11
              d8bc 00ff  ld   $ff
              d8bd 0001  ld   $01
              d8be 00f8  ld   $f8
              d8bf 0064  ld   $64
              d8c0 0035  ld   $35
              d8c1 003f  ld   $3f
              d8c2 00ce  ld   $ce
              d8c3 0099  ld   $99
              d8c4 0030  ld   $30
              d8c5 0090  ld   $90
              d8c6 00e5  ld   $e5
              d8c7 0085  ld   $85
              d8c8 00a2  ld   $a2
              d8c9 0063  ld   $63
              d8ca 0035  ld   $35
              d8cb 0072  ld   $72
              d8cc 00db  ld   $db
              d8cd 0085  ld   $85
              d8ce 00a2  ld   $a2
              d8cf 0075  ld   $75
              d8d0 0021  ld   $21
              d8d1 0030  ld   $30
              d8d2 0090  ld   $90
              d8d3 00e5  ld   $e5
              d8d4 0021  ld   $21
              d8d5 0060  ld   $60
              d8d6 002b  ld   $2b
              d8d7 0062  ld   $62
              d8d8 0021  ld   $21
              d8d9 0064  ld   $64
              d8da 002b  ld   $2b
              d8db 0066  ld   $66
              d8dc 0059  ld   $59
              d8dd 0000  ld   $00
              d8de 002b  ld   $2b
              d8df 006a  ld   $6a
              d8e0 0021  ld   $21
              d8e1 0068  ld   $68
              d8e2 0063  ld   $63
              d8e3 00ff  ld   $ff
              d8e4 0093  ld   $93
              d8e5 001b  ld   $1b
              d8e6 00ff  ld   $ff
              d8e7 0065  ld   $65
              d8e8 00a0  ld   $a0
              d8e9 0060  ld   $60
              d8ea 00cd  ld   $cd
              d8eb 00cb  ld   $cb
              d8ec 0075  ld   $75
              d8ed 0059  ld   $59
              d8ee 0000  ld   $00
              d8ef 002b  ld   $2b
              d8f0 0064  ld   $64
              d8f1 002b  ld   $2b
              d8f2 0060  ld   $60
              d8f3 0021  ld   $21
              d8f4 003a  ld   $3a
              d8f5 00e3  ld   $e3
              d8f6 001c  ld   $1c
              d8f7 00f6  ld   $f6
              d8f8 002b  ld   $2b
              d8f9 0066  ld   $66
              d8fa 0021  ld   $21
              d8fb fe00  bra  ac          ;+-----------------------------------+
              d8fc fcfd  bra  $d8fd       ;|                                   |
              d8fd 1418  ld   $18,y       ;| Trampoline for page $d800 lookups |
              d8fe e006  jmp  y,$06       ;|                                   |
              d8ff c218  st   [$18]       ;+-----------------------------------+
              d900 003a  ld   $3a
              d901 00e3  ld   $e3
              d902 001e  ld   $1e
              d903 00f6  ld   $f6
              d904 002b  ld   $2b
              d905 0062  ld   $62
              d906 0021  ld   $21
              d907 003a  ld   $3a
              d908 00e3  ld   $e3
              d909 001a  ld   $1a
              d90a 00f6  ld   $f6
              d90b 002b  ld   $2b
              d90c 004c  ld   $4c
              d90d 0021  ld   $21
              d90e 003a  ld   $3a
              d90f 00e3  ld   $e3
              d910 0014  ld   $14
              d911 00f6  ld   $f6
              d912 002b  ld   $2b
              d913 004e  ld   $4e
              d914 0085  ld   $85
              d915 00a2  ld   $a2
              d916 0076  ld   $76
              d917 0085  ld   $85
              d918 00cf  ld   $cf
              d919 0065  ld   $65
              d91a 0063  ld   $63
              d91b 00ff  ld   $ff
              d91c 00cd  ld   $cd
              d91d 00fb  ld   $fb
              d91e 0075  ld   $75
              d91f 001a  ld   $1a
              d920 004f  ld   $4f
              d921 0082  ld   $82
              d922 000f  ld   $0f
              d923 005e  ld   $5e
              d924 004f  ld   $4f
              d925 0059  ld   $59
              d926 0001  ld   $01
              d927 002b  ld   $2b
              d928 0046  ld   $46
              d929 00b8  ld   $b8
              d92a 0048  ld   $48
              d92b 0035  ld   $35
              d92c 0053  ld   $53
              d92d 00e6  ld   $e6
              d92e 0085  ld   $85
              d92f 00c2  ld   $c2
              d930 0066  ld   $66
              d931 0021  ld   $21
              d932 0046  ld   $46
              d933 0099  ld   $99
              d934 0046  ld   $46
              d935 0090  ld   $90
              d936 00d6  ld   $d6
              d937 0021  ld   $21
              d938 0058  ld   $58
              d939 002b  ld   $2b
              d93a 0050  ld   $50
              d93b 0021  ld   $21
              d93c 005a  ld   $5a
              d93d 002b  ld   $2b
              d93e 0056  ld   $56
              d93f 0085  ld   $85
              d940 00d6  ld   $d6
              d941 0066  ld   $66
              d942 0021  ld   $21
              d943 004c  ld   $4c
              d944 002b  ld   $2b
              d945 0040  ld   $40
              d946 0021  ld   $21
              d947 004e  ld   $4e
              d948 002b  ld   $2b
              d949 003e  ld   $3e
              d94a 0063  ld   $63
              d94b 00ff  ld   $ff
              d94c 0093  ld   $93
              d94d 001b  ld   $1b
              d94e 00ff  ld   $ff
              d94f 0066  ld   $66
              d950 00a0  ld   $a0
              d951 005f  ld   $5f
              d952 00cd  ld   $cd
              d953 00be  ld   $be
              d954 0075  ld   $75
              d955 0059  ld   $59
              d956 0000  ld   $00
              d957 005e  ld   $5e
              d958 0050  ld   $50
              d959 001a  ld   $1a
              d95a 004c  ld   $4c
              d95b 005e  ld   $5e
              d95c 0051  ld   $51
              d95d 001a  ld   $1a
              d95e 004d  ld   $4d
              d95f 005e  ld   $5e
              d960 0056  ld   $56
              d961 001a  ld   $1a
              d962 004e  ld   $4e
              d963 005e  ld   $5e
              d964 0057  ld   $57
              d965 0021  ld   $21
              d966 0050  ld   $50
              d967 002b  ld   $2b
              d968 004c  ld   $4c
              d969 0021  ld   $21
              d96a 0056  ld   $56
              d96b 002b  ld   $2b
              d96c 004e  ld   $4e
              d96d 0085  ld   $85
              d96e 00d6  ld   $d6
              d96f 0066  ld   $66
              d970 0063  ld   $63
              d971 00ff  ld   $ff
              d972 00cd  ld   $cd
              d973 00fa  ld   $fa
              d974 0075  ld   $75
              d975 0021  ld   $21
              d976 004c  ld   $4c
              d977 002b  ld   $2b
              d978 0050  ld   $50
              d979 0021  ld   $21
              d97a 004e  ld   $4e
              d97b 002b  ld   $2b
              d97c 0056  ld   $56
              d97d 0085  ld   $85
              d97e 00d6  ld   $d6
              d97f 0066  ld   $66
              d980 0021  ld   $21
              d981 0056  ld   $56
              d982 0063  ld   $63
              d983 00ff  ld   $ff
              d984 0059  ld   $59
              d985 0000  ld   $00
              d986 002b  ld   $2b
              d987 0056  ld   $56
              d988 0021  ld   $21
              d989 004c  ld   $4c
              d98a 00fc  ld   $fc
              d98b 0050  ld   $50
              d98c 0035  ld   $35
              d98d 0053  ld   $53
              d98e 00df  ld   $df
              d98f 0021  ld   $21
              d990 004c  ld   $4c
              d991 0090  ld   $90
              d992 00e2  ld   $e2
              d993 0011  ld   $11
              d994 0000  ld   $00
              d995 0080  ld   $80
              d996 0099  ld   $99
              d997 0050  ld   $50
              d998 0035  ld   $35
              d999 0050  ld   $50
              d99a 00ed  ld   $ed
              d99b 0021  ld   $21
              d99c 004e  ld   $4e
              d99d 00e3  ld   $e3
              d99e 0001  ld   $01
              d99f 002b  ld   $2b
              d9a0 004e  ld   $4e
              d9a1 0021  ld   $21
              d9a2 004e  ld   $4e
              d9a3 0099  ld   $99
              d9a4 0056  ld   $56
              d9a5 002b  ld   $2b
              d9a6 004e  ld   $4e
              d9a7 0021  ld   $21
              d9a8 004c  ld   $4c
              d9a9 0099  ld   $99
              d9aa 0050  ld   $50
              d9ab 002b  ld   $2b
              d9ac 004c  ld   $4c
              d9ad 00ff  ld   $ff
              d9ae 0093  ld   $93
              d9af 001b  ld   $1b
              d9b0 00ff  ld   $ff
              d9b1 0067  ld   $67
              d9b2 00a0  ld   $a0
              d9b3 0040  ld   $40
              d9b4 00cd  ld   $cd
              d9b5 00b8  ld   $b8
              d9b6 0075  ld   $75
              d9b7 00e6  ld   $e6
              d9b8 0020  ld   $20
              d9b9 0035  ld   $35
              d9ba 0053  ld   $53
              d9bb 00aa  ld   $aa
              d9bc 0059  ld   $59
              d9bd 007f  ld   $7f
              d9be 0090  ld   $90
              d9bf 00b1  ld   $b1
              d9c0 00e6  ld   $e6
              d9c1 0060  ld   $60
              d9c2 0035  ld   $35
              d9c3 0050  ld   $50
              d9c4 00b1  ld   $b1
              d9c5 0059  ld   $59
              d9c6 007f  ld   $7f
              d9c7 0082  ld   $82
              d9c8 007f  ld   $7f
              d9c9 0085  ld   $85
              d9ca 00a2  ld   $a2
              d9cb 006e  ld   $6e
              d9cc 0063  ld   $63
              d9cd 00ff  ld   $ff
              d9ce 00cd  ld   $cd
              d9cf 00ca  ld   $ca
              d9d0 0075  ld   $75
              d9d1 0021  ld   $21
              d9d2 004e  ld   $4e
              d9d3 0085  ld   $85
              d9d4 00ce  ld   $ce
              d9d5 0067  ld   $67
              d9d6 0021  ld   $21
              d9d7 004c  ld   $4c
              d9d8 0085  ld   $85
              d9d9 00ce  ld   $ce
              d9da 0067  ld   $67
              d9db 0085  ld   $85
              d9dc 00a2  ld   $a2
              d9dd 006d  ld   $6d
              d9de 0063  ld   $63
              d9df 00ff  ld   $ff
              d9e0 00cd  ld   $cd
              d9e1 00db  ld   $db
              d9e2 0075  ld   $75
              d9e3 002b  ld   $2b
              d9e4 0046  ld   $46
              d9e5 001a  ld   $1a
              d9e6 0047  ld   $47
              d9e7 0085  ld   $85
              d9e8 00a2  ld   $a2
              d9e9 0068  ld   $68
              d9ea 001a  ld   $1a
              d9eb 0046  ld   $46
              d9ec 0085  ld   $85
              d9ed 00a2  ld   $a2
              d9ee 0068  ld   $68
              d9ef 0063  ld   $63
              d9f0 00ff  ld   $ff
              d9f1 0093  ld   $93
              d9f2 001b  ld   $1b
              d9f3 00ff  ld   $ff
              d9f4 0068  ld   $68
              d9f5 00a0  ld   $a0
              d9f6 0054  ld   $54
              d9f7 00cd  ld   $cd
              d9f8 00b7  ld   $b7
              d9f9 0075  ld   $75
              d9fa 00df  ld   $df
              d9fb fe00  bra  ac          ;+-----------------------------------+
              d9fc fcfd  bra  $d9fd       ;|                                   |
              d9fd 1418  ld   $18,y       ;| Trampoline for page $d900 lookups |
              d9fe e006  jmp  y,$06       ;|                                   |
              d9ff c218  st   [$18]       ;+-----------------------------------+
              da00 00fe  ld   $fe
              da01 00ec  ld   $ec
              da02 0000  ld   $00
              da03 00e9  ld   $e9
              da04 00e9  ld   $e9
              da05 00e9  ld   $e9
              da06 00e9  ld   $e9
              da07 001a  ld   $1a
              da08 0019  ld   $19
              da09 0085  ld   $85
              da0a 00de  ld   $de
              da0b 0068  ld   $68
              da0c 00ee  ld   $ee
              da0d 0000  ld   $00
              da0e 00df  ld   $df
              da0f 0002  ld   $02
              da10 0085  ld   $85
              da11 00de  ld   $de
              da12 0068  ld   $68
              da13 0063  ld   $63
              da14 00ff  ld   $ff
              da15 00cd  ld   $cd
              da16 00da  ld   $da
              da17 0075  ld   $75
              da18 002b  ld   $2b
              da19 0046  ld   $46
              da1a 0035  ld   $35
              da1b 0072  ld   $72
              da1c 00c8  ld   $c8
              da1d 00cd  ld   $cd
              da1e 00c6  ld   $c6
              da1f 0020  ld   $20
              da20 004f  ld   $4f
              da21 004b  ld   $4b
              da22 000a  ld   $0a
              da23 0000  ld   $00
              da24 0090  ld   $90
              da25 00d3  ld   $d3
              da26 00cd  ld   $cd
              da27 00d3  ld   $d3
              da28 0020  ld   $20
              da29 0046  ld   $46
              da2a 0041  ld   $41
              da2b 0049  ld   $49
              da2c 004c  ld   $4c
              da2d 0045  ld   $45
              da2e 0044  ld   $44
              da2f 000a  ld   $0a
              da30 0000  ld   $00
              da31 0085  ld   $85
              da32 00a2  ld   $a2
              da33 0069  ld   $69
              da34 0021  ld   $21
              da35 0046  ld   $46
              da36 0063  ld   $63
              da37 00ff  ld   $ff
              da38 00cd  ld   $cd
              da39 00ef  ld   $ef
              da3a 0075  ld   $75
              da3b 0082  ld   $82
              da3c 000f  ld   $0f
              da3d 00e6  ld   $e6
              da3e 000a  ld   $0a
              da3f 0035  ld   $35
              da40 0053  ld   $53
              da41 00e8  ld   $e8
              da42 00e3  ld   $e3
              da43 003a  ld   $3a
              da44 0090  ld   $90
              da45 00ea  ld   $ea
              da46 00e3  ld   $e3
              da47 0041  ld   $41
              da48 0085  ld   $85
              da49 00a2  ld   $a2
              da4a 006e  ld   $6e
              da4b 0063  ld   $63
              da4c 00ff  ld   $ff
              da4d 0093  ld   $93
              da4e 001b  ld   $1b
              da4f 00ff  ld   $ff
              da50 0069  ld   $69
              da51 00a0  ld   $a0
              da52 004f  ld   $4f
              da53 00cd  ld   $cd
              da54 00be  ld   $be
              da55 0075  ld   $75
              da56 002b  ld   $2b
              da57 003c  ld   $3c
              da58 0021  ld   $21
              da59 003c  ld   $3c
              da5a 00ad  ld   $ad
              da5b 0035  ld   $35
              da5c 003f  ld   $3f
              da5d 00bc  ld   $bc
              da5e 008c  ld   $8c
              da5f 000a  ld   $0a
              da60 0035  ld   $35
              da61 003f  ld   $3f
              da62 00b5  ld   $b5
              da63 008c  ld   $8c
              da64 000a  ld   $0a
              da65 0085  ld   $85
              da66 00a2  ld   $a2
              da67 006e  ld   $6e
              da68 0090  ld   $90
              da69 00b8  ld   $b8
              da6a 0085  ld   $85
              da6b 00a2  ld   $a2
              da6c 006d  ld   $6d
              da6d 0093  ld   $93
              da6e 003c  ld   $3c
              da6f 0090  ld   $90
              da70 00a3  ld   $a3
              da71 0063  ld   $63
              da72 00ff  ld   $ff
              da73 00cd  ld   $cd
              da74 00ea  ld   $ea
              da75 0075  ld   $75
              da76 00cd  ld   $cd
              da77 00cb  ld   $cb
              da78 0056  ld   $56
              da79 006f  ld   $6f
              da7a 006c  ld   $6c
              da7b 0075  ld   $75
              da7c 006d  ld   $6d
              da7d 0065  ld   $65
              da7e 0020  ld   $20
              da7f 0000  ld   $00
              da80 0085  ld   $85
              da81 00a2  ld   $a2
              da82 0069  ld   $69
              da83 0021  ld   $21
              da84 003a  ld   $3a
              da85 002b  ld   $2b
              da86 003c  ld   $3c
              da87 0059  ld   $59
              da88 000b  ld   $0b
              da89 002b  ld   $2b
              da8a 0046  ld   $46
              da8b 0021  ld   $21
              da8c 003c  ld   $3c
              da8d 00ad  ld   $ad
              da8e 0093  ld   $93
              da8f 003c  ld   $3c
              da90 0085  ld   $85
              da91 00a2  ld   $a2
              da92 0067  ld   $67
              da93 0021  ld   $21
              da94 0046  ld   $46
              da95 00e6  ld   $e6
              da96 0001  ld   $01
              da97 0035  ld   $35
              da98 004d  ld   $4d
              da99 00d4  ld   $d4
              da9a 0085  ld   $85
              da9b 00a2  ld   $a2
              da9c 006d  ld   $6d
              da9d 0063  ld   $63
              da9e 00ff  ld   $ff
              da9f 0093  ld   $93
              daa0 001b  ld   $1b
              daa1 00ff  ld   $ff
              daa2 006a  ld   $6a
              daa3 00a0  ld   $a0
              daa4 0050  ld   $50
              daa5 00cd  ld   $cd
              daa6 00b5  ld   $b5
              daa7 0075  ld   $75
              daa8 002b  ld   $2b
              daa9 006c  ld   $6c
              daaa 0059  ld   $59
              daab 0030  ld   $30
              daac 002b  ld   $2b
              daad 0046  ld   $46
              daae 0059  ld   $59
              daaf 000a  ld   $0a
              dab0 0085  ld   $85
              dab1 00a2  ld   $a2
              dab2 006c  ld   $6c
              dab3 0021  ld   $21
              dab4 006c  ld   $6c
              dab5 00e3  ld   $e3
              dab6 0030  ld   $30
              dab7 0085  ld   $85
              dab8 00a2  ld   $a2
              dab9 006e  ld   $6e
              daba 0063  ld   $63
              dabb 00ff  ld   $ff
              dabc 00cd  ld   $cd
              dabd 00eb  ld   $eb
              dabe 0075  ld   $75
              dabf 0011  ld   $11
              dac0 0000  ld   $00
              dac1 0006  ld   $06
              dac2 002b  ld   $2b
              dac3 0022  ld   $22
              dac4 0021  ld   $21
              dac5 003a  ld   $3a
              dac6 00e3  ld   $e3
              dac7 0011  ld   $11
              dac8 00ad  ld   $ad
              dac9 00b4  ld   $b4
              daca 00f6  ld   $f6
              dacb 00e6  ld   $e6
              dacc 0014  ld   $14
              dacd 0035  ld   $35
              dace 0053  ld   $53
              dacf 00cb  ld   $cb
              dad0 00e3  ld   $e3
              dad1 0064  ld   $64
              dad2 0085  ld   $85
              dad3 00a2  ld   $a2
              dad4 006a  ld   $6a
              dad5 0011  ld   $11
              dad6 006d  ld   $6d
              dad7 0006  ld   $06
              dad8 002b  ld   $2b
              dad9 0022  ld   $22
              dada 0021  ld   $21
              dadb 003a  ld   $3a
              dadc 00e3  ld   $e3
              dadd 0010  ld   $10
              dade 00f6  ld   $f6
              dadf 00b4  ld   $b4
              dae0 00f5  ld   $f5
              dae1 0082  ld   $82
              dae2 000f  ld   $0f
              dae3 0085  ld   $85
              dae4 00a2  ld   $a2
              dae5 006a  ld   $6a
              dae6 0021  ld   $21
              dae7 003a  ld   $3a
              dae8 00e3  ld   $e3
              dae9 0010  ld   $10
              daea 00ad  ld   $ad
              daeb 0082  ld   $82
              daec 001f  ld   $1f
              daed 0085  ld   $85
              daee 00a2  ld   $a2
              daef 006a  ld   $6a
              daf0 0063  ld   $63
              daf1 00ff  ld   $ff
              daf2 0093  ld   $93
              daf3 001b  ld   $1b
              daf4 00ff  ld   $ff
              daf5 006b  ld   $6b
              daf6 00a0  ld   $a0
              daf7 0055  ld   $55
              daf8 00cd  ld   $cd
              daf9 00bb  ld   $bb
              dafa 0075  ld   $75
              dafb fe00  bra  ac          ;+-----------------------------------+
              dafc fcfd  bra  $dafd       ;|                                   |
              dafd 1418  ld   $18,y       ;| Trampoline for page $da00 lookups |
              dafe e006  jmp  y,$06       ;|                                   |
              daff c218  st   [$18]       ;+-----------------------------------+
              db00 0085  ld   $85
              db01 00b9  ld   $b9
              db02 006a  ld   $6a
              db03 0059  ld   $59
              db04 0004  ld   $04
              db05 0099  ld   $99
              db06 006e  ld   $6e
              db07 002b  ld   $2b
              db08 006e  ld   $6e
              db09 0085  ld   $85
              db0a 00a2  ld   $a2
              db0b 0070  ld   $70
              db0c 0059  ld   $59
              db0d 0004  ld   $04
              db0e 0099  ld   $99
              db0f 006e  ld   $6e
              db10 002b  ld   $2b
              db11 006e  ld   $6e
              db12 0085  ld   $85
              db13 00bf  ld   $bf
              db14 006b  ld   $6b
              db15 0085  ld   $85
              db16 00a2  ld   $a2
              db17 006d  ld   $6d
              db18 0063  ld   $63
              db19 00ff  ld   $ff
              db1a 00cd  ld   $cd
              db1b 00f0  ld   $f0
              db1c 0075  ld   $75
              db1d 0021  ld   $21
              db1e 003a  ld   $3a
              db1f 002b  ld   $2b
              db20 003c  ld   $3c
              db21 0059  ld   $59
              db22 000b  ld   $0b
              db23 002b  ld   $2b
              db24 0046  ld   $46
              db25 008c  ld   $8c
              db26 0003  ld   $03
              db27 0035  ld   $35
              db28 0072  ld   $72
              db29 00d8  ld   $d8
              db2a 0021  ld   $21
              db2b 003c  ld   $3c
              db2c 00ad  ld   $ad
              db2d 008c  ld   $8c
              db2e 0020  ld   $20
              db2f 0035  ld   $35
              db30 003f  ld   $3f
              db31 00d8  ld   $d8
              db32 0059  ld   $59
              db33 002e  ld   $2e
              db34 0085  ld   $85
              db35 00a2  ld   $a2
              db36 006e  ld   $6e
              db37 0021  ld   $21
              db38 003c  ld   $3c
              db39 00ad  ld   $ad
              db3a 0093  ld   $93
              db3b 003c  ld   $3c
              db3c 008c  ld   $8c
              db3d 0020  ld   $20
              db3e 0035  ld   $35
              db3f 003f  ld   $3f
              db40 00e7  ld   $e7
              db41 008c  ld   $8c
              db42 0020  ld   $20
              db43 0085  ld   $85
              db44 00a2  ld   $a2
              db45 0067  ld   $67
              db46 0021  ld   $21
              db47 0046  ld   $46
              db48 00e6  ld   $e6
              db49 0001  ld   $01
              db4a 0035  ld   $35
              db4b 004d  ld   $4d
              db4c 00c4  ld   $c4
              db4d 0063  ld   $63
              db4e 00ff  ld   $ff
              db4f 0093  ld   $93
              db50 001b  ld   $1b
              db51 00ff  ld   $ff
              db52 006c  ld   $6c
              db53 00a0  ld   $a0
              db54 002c  ld   $2c
              db55 00cd  ld   $cd
              db56 00c7  ld   $c7
              db57 0075  ld   $75
              db58 002b  ld   $2b
              db59 0034  ld   $34
              db5a 0021  ld   $21
              db5b 006c  ld   $6c
              db5c 00b8  ld   $b8
              db5d 0034  ld   $34
              db5e 0035  ld   $35
              db5f 0050  ld   $50
              db60 00b0  ld   $b0
              db61 002b  ld   $2b
              db62 006c  ld   $6c
              db63 0093  ld   $93
              db64 0046  ld   $46
              db65 0090  ld   $90
              db66 00a5  ld   $a5
              db67 0021  ld   $21
              db68 0046  ld   $46
              db69 0035  ld   $35
              db6a 0072  ld   $72
              db6b 00bc  ld   $bc
              db6c 0059  ld   $59
              db6d 0020  ld   $20
              db6e 0085  ld   $85
              db6f 00a2  ld   $a2
              db70 006e  ld   $6e
              db71 0090  ld   $90
              db72 00c5  ld   $c5
              db73 0088  ld   $88
              db74 0030  ld   $30
              db75 0085  ld   $85
              db76 00a2  ld   $a2
              db77 006e  ld   $6e
              db78 0059  ld   $59
              db79 0030  ld   $30
              db7a 002b  ld   $2b
              db7b 0046  ld   $46
              db7c 0063  ld   $63
              db7d 00ff  ld   $ff
              db7e 0093  ld   $93
              db7f 001b  ld   $1b
              db80 00ff  ld   $ff
              db81 006d  ld   $6d
              db82 00a0  ld   $a0
              db83 004c  ld   $4c
              db84 00cd  ld   $cd
              db85 00e7  ld   $e7
              db86 0011  ld   $11
              db87 0000  ld   $00
              db88 003f  ld   $3f
              db89 002b  ld   $2b
              db8a 0024  ld   $24
              db8b 0059  ld   $59
              db8c 0000  ld   $00
              db8d 005e  ld   $5e
              db8e 006e  ld   $6e
              db8f 0011  ld   $11
              db90 0020  ld   $20
              db91 0001  ld   $01
              db92 00ad  ld   $ad
              db93 005e  ld   $5e
              db94 006f  ld   $6f
              db95 0021  ld   $21
              db96 006e  ld   $6e
              db97 002b  ld   $2b
              db98 0028  ld   $28
              db99 005e  ld   $5e
              db9a 0026  ld   $26
              db9b 0011  ld   $11
              db9c 00e1  ld   $e1
              db9d 0004  ld   $04
              db9e 002b  ld   $2b
              db9f 0022  ld   $22
              dba0 00b4  ld   $b4
              dba1 00cb  ld   $cb
              dba2 0093  ld   $93
              dba3 0028  ld   $28
              dba4 001a  ld   $1a
              dba5 0028  ld   $28
              dba6 008c  ld   $8c
              dba7 00a0  ld   $a0
              dba8 0035  ld   $35
              dba9 0072  ld   $72
              dbaa 00b5  ld   $b5
              dbab 0059  ld   $59
              dbac 0001  ld   $01
              dbad 005e  ld   $5e
              dbae 0035  ld   $35
              dbaf 0059  ld   $59
              dbb0 00c0  ld   $c0
              dbb1 00e3  ld   $e3
              dbb2 001e  ld   $1e
              dbb3 005e  ld   $5e
              dbb4 0034  ld   $34
              dbb5 0021  ld   $21
              dbb6 0034  ld   $34
              dbb7 00ad  ld   $ad
              dbb8 00e6  ld   $e6
              dbb9 0070  ld   $70
              dbba 0035  ld   $35
              dbbb 0053  ld   $53
              dbbc 00db  ld   $db
              dbbd 00e3  ld   $e3
              dbbe 0078  ld   $78
              dbbf 0090  ld   $90
              dbc0 00dd  ld   $dd
              dbc1 00e3  ld   $e3
              dbc2 0018  ld   $18
              dbc3 00f0  ld   $f0
              dbc4 0034  ld   $34
              dbc5 001a  ld   $1a
              dbc6 0034  ld   $34
              dbc7 00e6  ld   $e6
              dbc8 0020  ld   $20
              dbc9 0035  ld   $35
              dbca 004d  ld   $4d
              dbcb 00cb  ld   $cb
              dbcc 00ff  ld   $ff
              dbcd 0093  ld   $93
              dbce 001b  ld   $1b
              dbcf 00ff  ld   $ff
              dbd0 006e  ld   $6e
              dbd1 00a0  ld   $a0
              dbd2 004e  ld   $4e
              dbd3 00cd  ld   $cd
              dbd4 00e9  ld   $e9
              dbd5 00e6  ld   $e6
              dbd6 0052  ld   $52
              dbd7 0035  ld   $35
              dbd8 0053  ld   $53
              dbd9 00ae  ld   $ae
              dbda 00e3  ld   $e3
              dbdb 0032  ld   $32
              dbdc 002b  ld   $2b
              dbdd 0034  ld   $34
              dbde 0011  ld   $11
              dbdf 0000  ld   $00
              dbe0 0007  ld   $07
              dbe1 0090  ld   $90
              dbe2 00b3  ld   $b3
              dbe3 002b  ld   $2b
              dbe4 0034  ld   $34
              dbe5 0011  ld   $11
              dbe6 0000  ld   $00
              dbe7 0008  ld   $08
              dbe8 002b  ld   $2b
              dbe9 0070  ld   $70
              dbea 0021  ld   $21
              dbeb 0034  ld   $34
              dbec 00e9  ld   $e9
              dbed 00e9  ld   $e9
              dbee 0099  ld   $99
              dbef 0034  ld   $34
              dbf0 0099  ld   $99
              dbf1 0070  ld   $70
              dbf2 002b  ld   $2b
              dbf3 0070  ld   $70
              dbf4 0011  ld   $11
              dbf5 0000  ld   $00
              dbf6 003f  ld   $3f
              dbf7 002b  ld   $2b
              dbf8 0024  ld   $24
              dbf9 0021  ld   $21
              dbfa 006e  ld   $6e
              dbfb fe00  bra  ac          ;+-----------------------------------+
              dbfc fcfd  bra  $dbfd       ;|                                   |
              dbfd 1418  ld   $18,y       ;| Trampoline for page $db00 lookups |
              dbfe e006  jmp  y,$06       ;|                                   |
              dbff c218  st   [$18]       ;+-----------------------------------+
              dc00 002b  ld   $2b
              dc01 0028  ld   $28
              dc02 00e3  ld   $e3
              dc03 0006  ld   $06
              dc04 002b  ld   $2b
              dc05 006e  ld   $6e
              dc06 0011  ld   $11
              dc07 00e1  ld   $e1
              dc08 0004  ld   $04
              dc09 002b  ld   $2b
              dc0a 0022  ld   $22
              dc0b 0059  ld   $59
              dc0c 0005  ld   $05
              dc0d 002b  ld   $2b
              dc0e 0034  ld   $34
              dc0f 0021  ld   $21
              dc10 0070  ld   $70
              dc11 007f  ld   $7f
              dc12 0000  ld   $00
              dc13 005e  ld   $5e
              dc14 0026  ld   $26
              dc15 00b4  ld   $b4
              dc16 00cb  ld   $cb
              dc17 0093  ld   $93
              dc18 0070  ld   $70
              dc19 0093  ld   $93
              dc1a 0028  ld   $28
              dc1b 0021  ld   $21
              dc1c 0034  ld   $34
              dc1d 00e6  ld   $e6
              dc1e 0001  ld   $01
              dc1f 0035  ld   $35
              dc20 004d  ld   $4d
              dc21 00d3  ld   $d3
              dc22 00ff  ld   $ff
              dc23 0093  ld   $93
              dc24 001b  ld   $1b
              dc25 00ff  ld   $ff
              dc26 006f  ld   $6f
              dc27 00a0  ld   $a0
              dc28 004f  ld   $4f
              dc29 00cd  ld   $cd
              dc2a 00ea  ld   $ea
              dc2b 0075  ld   $75
              dc2c 0085  ld   $85
              dc2d 00a2  ld   $a2
              dc2e 0064  ld   $64
              dc2f 0021  ld   $21
              dc30 006a  ld   $6a
              dc31 002b  ld   $2b
              dc32 003a  ld   $3a
              dc33 00ad  ld   $ad
              dc34 0035  ld   $35
              dc35 003f  ld   $3f
              dc36 00e8  ld   $e8
              dc37 008c  ld   $8c
              dc38 00e5  ld   $e5
              dc39 0035  ld   $35
              dc3a 003f  ld   $3f
              dc3b 00e1  ld   $e1
              dc3c 0021  ld   $21
              dc3d 003a  ld   $3a
              dc3e 00e3  ld   $e3
              dc3f 000b  ld   $0b
              dc40 00ad  ld   $ad
              dc41 002b  ld   $2b
              dc42 0046  ld   $46
              dc43 008c  ld   $8c
              dc44 000f  ld   $0f
              dc45 0035  ld   $35
              dc46 003f  ld   $3f
              dc47 00e1  ld   $e1
              dc48 0082  ld   $82
              dc49 0002  ld   $02
              dc4a 0035  ld   $35
              dc4b 003f  ld   $3f
              dc4c 00e1  ld   $e1
              dc4d 0021  ld   $21
              dc4e 0046  ld   $46
              dc4f 0082  ld   $82
              dc50 0008  ld   $08
              dc51 0035  ld   $35
              dc52 003f  ld   $3f
              dc53 00ce  ld   $ce
              dc54 0085  ld   $85
              dc55 00c2  ld   $c2
              dc56 0069  ld   $69
              dc57 0090  ld   $90
              dc58 00e1  ld   $e1
              dc59 0085  ld   $85
              dc5a 00a2  ld   $a2
              dc5b 006b  ld   $6b
              dc5c 0085  ld   $85
              dc5d 00a2  ld   $a2
              dc5e 0074  ld   $74
              dc5f 0035  ld   $35
              dc60 0072  ld   $72
              dc61 00e1  ld   $e1
              dc62 0059  ld   $59
              dc63 00d0  ld   $d0
              dc64 00f0  ld   $f0
              dc65 0032  ld   $32
              dc66 0085  ld   $85
              dc67 00a2  ld   $a2
              dc68 0073  ld   $73
              dc69 0085  ld   $85
              dc6a 00cd  ld   $cd
              dc6b 0074  ld   $74
              dc6c 0059  ld   $59
              dc6d 0020  ld   $20
              dc6e 0085  ld   $85
              dc6f 00c6  ld   $c6
              dc70 0075  ld   $75
              dc71 0090  ld   $90
              dc72 00a1  ld   $a1
              dc73 0063  ld   $63
              dc74 00ff  ld   $ff
              dc75 0093  ld   $93
              dc76 001b  ld   $1b
              dc77 00ff  ld   $ff
              dc78 0070  ld   $70
              dc79 00a0  ld   $a0
              dc7a 005e  ld   $5e
              dc7b 00cd  ld   $cd
              dc7c 00f9  ld   $f9
              dc7d 0075  ld   $75
              dc7e 0021  ld   $21
              dc7f 003a  ld   $3a
              dc80 00e3  ld   $e3
              dc81 000b  ld   $0b
              dc82 00ad  ld   $ad
              dc83 0082  ld   $82
              dc84 0010  ld   $10
              dc85 0035  ld   $35
              dc86 003f  ld   $3f
              dc87 00b7  ld   $b7
              dc88 00cd  ld   $cd
              dc89 00b5  ld   $b5
              dc8a 0020  ld   $20
              dc8b 0020  ld   $20
              dc8c 003c  ld   $3c
              dc8d 0044  ld   $44
              dc8e 0049  ld   $49
              dc8f 0052  ld   $52
              dc90 003e  ld   $3e
              dc91 0000  ld   $00
              dc92 0090  ld   $90
              dc93 00f4  ld   $f4
              dc94 0021  ld   $21
              dc95 003a  ld   $3a
              dc96 00e3  ld   $e3
              dc97 001c  ld   $1c
              dc98 00f6  ld   $f6
              dc99 002b  ld   $2b
              dc9a 004c  ld   $4c
              dc9b 0021  ld   $21
              dc9c 003a  ld   $3a
              dc9d 00e3  ld   $e3
              dc9e 001e  ld   $1e
              dc9f 00f6  ld   $f6
              dca0 002b  ld   $2b
              dca1 004e  ld   $4e
              dca2 0085  ld   $85
              dca3 00a2  ld   $a2
              dca4 0071  ld   $71
              dca5 0059  ld   $59
              dca6 0000  ld   $00
              dca7 002b  ld   $2b
              dca8 0070  ld   $70
              dca9 0059  ld   $59
              dcaa 0008  ld   $08
              dcab 002b  ld   $2b
              dcac 0034  ld   $34
              dcad 0021  ld   $21
              dcae 003c  ld   $3c
              dcaf 00ad  ld   $ad
              dcb0 008c  ld   $8c
              dcb1 0030  ld   $30
              dcb2 0035  ld   $35
              dcb3 0072  ld   $72
              dcb4 00f0  ld   $f0
              dcb5 0021  ld   $21
              dcb6 0034  ld   $34
              dcb7 00e6  ld   $e6
              dcb8 0006  ld   $06
              dcb9 0035  ld   $35
              dcba 0053  ld   $53
              dcbb 00e5  ld   $e5
              dcbc 0059  ld   $59
              dcbd 0020  ld   $20
              dcbe 00f0  ld   $f0
              dcbf 003c  ld   $3c
              dcc0 0090  ld   $90
              dcc1 00e7  ld   $e7
              dcc2 0093  ld   $93
              dcc3 0070  ld   $70
              dcc4 0093  ld   $93
              dcc5 003c  ld   $3c
              dcc6 0021  ld   $21
              dcc7 0034  ld   $34
              dcc8 00e6  ld   $e6
              dcc9 0001  ld   $01
              dcca 0035  ld   $35
              dccb 0053  ld   $53
              dccc 00ce  ld   $ce
              dccd 0021  ld   $21
              dcce 0044  ld   $44
              dccf 0099  ld   $99
              dcd0 0070  ld   $70
              dcd1 0085  ld   $85
              dcd2 00a2  ld   $a2
              dcd3 0069  ld   $69
              dcd4 0063  ld   $63
              dcd5 00ff  ld   $ff
              dcd6 0093  ld   $93
              dcd7 001b  ld   $1b
              dcd8 00ff  ld   $ff
              dcd9 0071  ld   $71
              dcda 00a0  ld   $a0
              dcdb 0060  ld   $60
              dcdc 00cd  ld   $cd
              dcdd 00fb  ld   $fb
              dcde 0075  ld   $75
              dcdf 0059  ld   $59
              dce0 0009  ld   $09
              dce1 002b  ld   $2b
              dce2 0034  ld   $34
              dce3 0021  ld   $21
              dce4 0044  ld   $44
              dce5 0099  ld   $99
              dce6 0034  ld   $34
              dce7 002b  ld   $2b
              dce8 003c  ld   $3c
              dce9 0059  ld   $59
              dcea 0030  ld   $30
              dceb 00f0  ld   $f0
              dcec 003c  ld   $3c
              dced 0021  ld   $21
              dcee 0034  ld   $34
              dcef 00e6  ld   $e6
              dcf0 0001  ld   $01
              dcf1 0035  ld   $35
              dcf2 0053  ld   $53
              dcf3 00a3  ld   $a3
              dcf4 0059  ld   $59
              dcf5 001f  ld   $1f
              dcf6 002b  ld   $2b
              dcf7 0070  ld   $70
              dcf8 0085  ld   $85
              dcf9 00c2  ld   $c2
              dcfa 0066  ld   $66
              dcfb fe00  bra  ac          ;+-----------------------------------+
              dcfc fcfd  bra  $dcfd       ;|                                   |
              dcfd 1418  ld   $18,y       ;| Trampoline for page $dc00 lookups |
              dcfe e006  jmp  y,$06       ;|                                   |
              dcff c218  st   [$18]       ;+-----------------------------------+
              dd00 0035  ld   $35
              dd01 0050  ld   $50
              dd02 00c4  ld   $c4
              dd03 0059  ld   $59
              dd04 006a  ld   $6a
              dd05 0090  ld   $90
              dd06 00c6  ld   $c6
              dd07 0059  ld   $59
              dd08 0069  ld   $69
              dd09 002b  ld   $2b
              dd0a 0046  ld   $46
              dd0b 0059  ld   $59
              dd0c 0009  ld   $09
              dd0d 002b  ld   $2b
              dd0e 0034  ld   $34
              dd0f 0021  ld   $21
              dd10 0044  ld   $44
              dd11 0099  ld   $99
              dd12 0034  ld   $34
              dd13 002b  ld   $2b
              dd14 003c  ld   $3c
              dd15 0021  ld   $21
              dd16 003c  ld   $3c
              dd17 00ad  ld   $ad
              dd18 00e9  ld   $e9
              dd19 00b8  ld   $b8
              dd1a 0046  ld   $46
              dd1b 0035  ld   $35
              dd1c 0053  ld   $53
              dd1d 00e3  ld   $e3
              dd1e 00e3  ld   $e3
              dd1f 003a  ld   $3a
              dd20 00f0  ld   $f0
              dd21 003c  ld   $3c
              dd22 0059  ld   $59
              dd23 006a  ld   $6a
              dd24 0090  ld   $90
              dd25 00e9  ld   $e9
              dd26 00e3  ld   $e3
              dd27 0030  ld   $30
              dd28 00f0  ld   $f0
              dd29 003c  ld   $3c
              dd2a 0059  ld   $59
              dd2b 0069  ld   $69
              dd2c 002b  ld   $2b
              dd2d 0046  ld   $46
              dd2e 0021  ld   $21
              dd2f 0034  ld   $34
              dd30 00e6  ld   $e6
              dd31 0001  ld   $01
              dd32 0035  ld   $35
              dd33 0053  ld   $53
              dd34 00ca  ld   $ca
              dd35 0021  ld   $21
              dd36 0070  ld   $70
              dd37 00e6  ld   $e6
              dd38 0001  ld   $01
              dd39 0035  ld   $35
              dd3a 0053  ld   $53
              dd3b 00b8  ld   $b8
              dd3c 0063  ld   $63
              dd3d 00ff  ld   $ff
              dd3e 0093  ld   $93
              dd3f 001b  ld   $1b
              dd40 00ff  ld   $ff
              dd41 0072  ld   $72
              dd42 00a0  ld   $a0
              dd43 004f  ld   $4f
              dd44 00cd  ld   $cd
              dd45 00ab  ld   $ab
              dd46 002d  ld   $2d
              dd47 002d  ld   $2d
              dd48 002d  ld   $2d
              * 10 times
              dd50 0000  ld   $00
              dd51 002b  ld   $2b
              dd52 0044  ld   $44
              dd53 00cd  ld   $cd
              dd54 00ea  ld   $ea
              dd55 0075  ld   $75
              dd56 005e  ld   $5e
              dd57 0025  ld   $25
              dd58 0011  ld   $11
              dd59 0003  ld   $03
              dd5a 000b  ld   $0b
              dd5b 002b  ld   $2b
              dd5c 0022  ld   $22
              dd5d 0059  ld   $59
              dd5e 0018  ld   $18
              dd5f 002b  ld   $2b
              dd60 0034  ld   $34
              dd61 0011  ld   $11
              dd62 0020  ld   $20
              dd63 0001  ld   $01
              dd64 002b  ld   $2b
              dd65 0046  ld   $46
              dd66 0021  ld   $21
              dd67 0034  ld   $34
              dd68 00f0  ld   $f0
              dd69 0046  ld   $46
              dd6a 005e  ld   $5e
              dd6b 0027  ld   $27
              dd6c 0059  ld   $59
              dd6d 0000  ld   $00
              dd6e 005e  ld   $5e
              dd6f 0026  ld   $26
              dd70 0059  ld   $59
              dd71 00a0  ld   $a0
              dd72 005e  ld   $5e
              dd73 0024  ld   $24
              dd74 00b4  ld   $b4
              dd75 00f3  ld   $f3
              dd76 0059  ld   $59
              dd77 0001  ld   $01
              dd78 0099  ld   $99
              dd79 0034  ld   $34
              dd7a 002b  ld   $2b
              dd7b 0034  ld   $34
              dd7c 0059  ld   $59
              dd7d 0002  ld   $02
              dd7e 0099  ld   $99
              dd7f 0046  ld   $46
              dd80 002b  ld   $2b
              dd81 0046  ld   $46
              dd82 0011  ld   $11
              dd83 00f0  ld   $f0
              dd84 0001  ld   $01
              dd85 00fc  ld   $fc
              dd86 0046  ld   $46
              dd87 0035  ld   $35
              dd88 0072  ld   $72
              dd89 00c0  ld   $c0
              dd8a 0059  ld   $59
              dd8b 0000  ld   $00
              dd8c 00f0  ld   $f0
              dd8d 0032  ld   $32
              dd8e 0063  ld   $63
              dd8f 00ff  ld   $ff
              dd90 0093  ld   $93
              dd91 001b  ld   $1b
              dd92 00ff  ld   $ff
              dd93 0073  ld   $73
              dd94 00a0  ld   $a0
              dd95 0056  ld   $56
              dd96 00cd  ld   $cd
              dd97 00f1  ld   $f1
              dd98 0075  ld   $75
              dd99 00cd  ld   $cd
              dd9a 00ac  ld   $ac
              dd9b 004c  ld   $4c
              dd9c 006f  ld   $6f
              dd9d 0061  ld   $61
              dd9e 0064  ld   $64
              dd9f 0069  ld   $69
              dda0 006e  ld   $6e
              dda1 0067  ld   $67
              dda2 0020  ld   $20
              dda3 0000  ld   $00
              dda4 0085  ld   $85
              dda5 00a2  ld   $a2
              dda6 0069  ld   $69
              dda7 0085  ld   $85
              dda8 00bf  ld   $bf
              dda9 006b  ld   $6b
              ddaa 0085  ld   $85
              ddab 00a2  ld   $a2
              ddac 0065  ld   $65
              ddad 0085  ld   $85
              ddae 00de  ld   $de
              ddaf 0075  ld   $75
              ddb0 005e  ld   $5e
              ddb1 0073  ld   $73
              ddb2 0085  ld   $85
              ddb3 00de  ld   $de
              ddb4 0075  ld   $75
              ddb5 005e  ld   $5e
              ddb6 0072  ld   $72
              ddb7 0085  ld   $85
              ddb8 00de  ld   $de
              ddb9 0075  ld   $75
              ddba 00e6  ld   $e6
              ddbb 0001  ld   $01
              ddbc 0082  ld   $82
              ddbd 00ff  ld   $ff
              ddbe 00e3  ld   $e3
              ddbf 0001  ld   $01
              ddc0 002b  ld   $2b
              ddc1 0074  ld   $74
              ddc2 0085  ld   $85
              ddc3 00a2  ld   $a2
              ddc4 0078  ld   $78
              ddc5 0021  ld   $21
              ddc6 0074  ld   $74
              ddc7 0035  ld   $35
              ddc8 0072  ld   $72
              ddc9 00d8  ld   $d8
              ddca 0085  ld   $85
              ddcb 00de  ld   $de
              ddcc 0075  ld   $75
              ddcd 0035  ld   $35
              ddce 0072  ld   $72
              ddcf 00b8  ld   $b8
              ddd0 0085  ld   $85
              ddd1 00de  ld   $de
              ddd2 0075  ld   $75
              ddd3 005e  ld   $5e
              ddd4 0073  ld   $73
              ddd5 0085  ld   $85
              ddd6 00de  ld   $de
              ddd7 0075  ld   $75
              ddd8 005e  ld   $5e
              ddd9 0072  ld   $72
              ddda 0085  ld   $85
              dddb 00de  ld   $de
              dddc 0075  ld   $75
              dddd 0035  ld   $35
              ddde 0050  ld   $50
              dddf 00ec  ld   $ec
              dde0 0059  ld   $59
              dde1 0000  ld   $00
              dde2 002b  ld   $2b
              dde3 0072  ld   $72
              dde4 0085  ld   $85
              dde5 00af  ld   $af
              dde6 005d  ld   $5d
              dde7 0063  ld   $63
              dde8 00ff  ld   $ff
              dde9 0093  ld   $93
              ddea 001b  ld   $1b
              ddeb 00ff  ld   $ff
              ddec 0074  ld   $74
              dded 00a0  ld   $a0
              ddee 003c  ld   $3c
              ddef 00cd  ld   $cd
              ddf0 00c9  ld   $c9
              ddf1 00cd  ld   $cd
              ddf2 00ae  ld   $ae
              ddf3 0053  ld   $53
              ddf4 0059  ld   $59
              ddf5 0053  ld   $53
              ddf6 0054  ld   $54
              ddf7 0045  ld   $45
              ddf8 004d  ld   $4d
              ddf9 0020  ld   $20
              ddfa 0020  ld   $20
              ddfb fe00  bra  ac          ;+-----------------------------------+
              ddfc fcfd  bra  $ddfd       ;|                                   |
              ddfd 1418  ld   $18,y       ;| Trampoline for page $dd00 lookups |
              ddfe e006  jmp  y,$06       ;|                                   |
              ddff c218  st   [$18]       ;+-----------------------------------+
              de00 0047  ld   $47
              de01 0054  ld   $54
              de02 0031  ld   $31
              de03 0000  ld   $00
              de04 002b  ld   $2b
              de05 003c  ld   $3c
              de06 0021  ld   $21
              de07 003a  ld   $3a
              de08 002b  ld   $2b
              de09 0034  ld   $34
              de0a 0021  ld   $21
              de0b 003c  ld   $3c
              de0c 00ad  ld   $ad
              de0d 0093  ld   $93
              de0e 003c  ld   $3c
              de0f 0035  ld   $35
              de10 003f  ld   $3f
              de11 00c8  ld   $c8
              de12 002b  ld   $2b
              de13 0070  ld   $70
              de14 0021  ld   $21
              de15 0034  ld   $34
              de16 00ad  ld   $ad
              de17 0093  ld   $93
              de18 0034  ld   $34
              de19 00fc  ld   $fc
              de1a 0070  ld   $70
              de1b 0035  ld   $35
              de1c 003f  ld   $3f
              de1d 00b4  ld   $b4
              de1e 00ff  ld   $ff
              de1f 00cd  ld   $cd
              de20 00d7  ld   $d7
              de21 0059  ld   $59
              de22 0020  ld   $20
              de23 0085  ld   $85
              de24 00b1  ld   $b1
              de25 0072  ld   $72
              de26 0021  ld   $21
              de27 0072  ld   $72
              de28 0035  ld   $35
              de29 003f  ld   $3f
              de2a 00d2  ld   $d2
              de2b 00cf  ld   $cf
              de2c 0018  ld   $18
              de2d 0093  ld   $93
              de2e 001b  ld   $1b
              de2f 00ff  ld   $ff
              de30 0075  ld   $75
              de31 00a0  ld   $a0
              de32 0059  ld   $59
              de33 00cd  ld   $cd
              de34 00c2  ld   $c2
              de35 0075  ld   $75
              de36 0093  ld   $93
              de37 0040  ld   $40
              de38 0011  ld   $11
              de39 0000  ld   $00
              de3a 0002  ld   $02
              de3b 0099  ld   $99
              de3c 0064  ld   $64
              de3d 00f8  ld   $f8
              de3e 004a  ld   $4a
              de3f 0035  ld   $35
              de40 0072  ld   $72
              de41 00c0  ld   $c0
              de42 0021  ld   $21
              de43 0076  ld   $76
              de44 00e3  ld   $e3
              de45 0004  ld   $04
              de46 002b  ld   $2b
              de47 0076  ld   $76
              de48 00f6  ld   $f6
              de49 002b  ld   $2b
              de4a 004c  ld   $4c
              de4b 0021  ld   $21
              de4c 0076  ld   $76
              de4d 00e3  ld   $e3
              de4e 0002  ld   $02
              de4f 00f6  ld   $f6
              de50 002b  ld   $2b
              de51 004e  ld   $4e
              de52 0085  ld   $85
              de53 00cf  ld   $cf
              de54 0065  ld   $65
              de55 0063  ld   $63
              de56 00ff  ld   $ff
              de57 00cd  ld   $cd
              de58 00da  ld   $da
              de59 002b  ld   $2b
              de5a 0034  ld   $34
              de5b 0099  ld   $99
              de5c 0064  ld   $64
              de5d 002b  ld   $2b
              de5e 0064  ld   $64
              de5f 0035  ld   $35
              de60 0072  ld   $72
              de61 00d3  ld   $d3
              de62 0059  ld   $59
              de63 0001  ld   $01
              de64 0099  ld   $99
              de65 0060  ld   $60
              de66 002b  ld   $2b
              de67 0060  ld   $60
              de68 0021  ld   $21
              de69 0068  ld   $68
              de6a 00b8  ld   $b8
              de6b 0034  ld   $34
              de6c 002b  ld   $2b
              de6d 0068  ld   $68
              de6e 00ff  ld   $ff
              de6f 00cd  ld   $cd
              de70 00f4  ld   $f4
              de71 0075  ld   $75
              de72 0085  ld   $85
              de73 00a2  ld   $a2
              de74 0064  ld   $64
              de75 0035  ld   $35
              de76 0056  ld   $56
              de77 00ef  ld   $ef
              de78 0059  ld   $59
              de79 0001  ld   $01
              de7a 0085  ld   $85
              de7b 00c6  ld   $c6
              de7c 0075  ld   $75
              de7d 0021  ld   $21
              de7e 006a  ld   $6a
              de7f 00ad  ld   $ad
              de80 0093  ld   $93
              de81 006a  ld   $6a
              de82 0090  ld   $90
              de83 00f2  ld   $f2
              de84 0011  ld   $11
              de85 00ff  ld   $ff
              de86 00ff  ld   $ff
              de87 0063  ld   $63
              de88 00ff  ld   $ff
              de89 0093  ld   $93
              de8a 001b  ld   $1b
              de8b 00ff  ld   $ff
              de8c 0076  ld   $76
              de8d 00a0  ld   $a0
              de8e 0044  ld   $44
              de8f 00cd  ld   $cd
              de90 00df  ld   $df
              de91 0075  ld   $75
              de92 0011  ld   $11
              de93 0000  ld   $00
              de94 007f  ld   $7f
              de95 002b  ld   $2b
              de96 0076  ld   $76
              de97 0021  ld   $21
              de98 004c  ld   $4c
              de99 00f3  ld   $f3
              de9a 0076  ld   $76
              de9b 0093  ld   $93
              de9c 0076  ld   $76
              de9d 0093  ld   $93
              de9e 0076  ld   $76
              de9f 0021  ld   $21
              dea0 004e  ld   $4e
              dea1 00f3  ld   $f3
              dea2 0076  ld   $76
              dea3 0093  ld   $93
              dea4 0076  ld   $76
              dea5 0093  ld   $93
              dea6 0076  ld   $76
              dea7 0011  ld   $11
              dea8 0000  ld   $00
              dea9 00f0  ld   $f0
              deaa 00fa  ld   $fa
              deab 004e  ld   $4e
              deac 00e3  ld   $e3
              dead 0001  ld   $01
              deae 0035  ld   $35
              deaf 0072  ld   $72
              deb0 00c6  ld   $c6
              deb1 0059  ld   $59
              deb2 0007  ld   $07
              deb3 00fa  ld   $fa
              deb4 004c  ld   $4c
              deb5 00e3  ld   $e3
              deb6 0001  ld   $01
              deb7 0035  ld   $35
              deb8 003f  ld   $3f
              deb9 00ce  ld   $ce
              deba 0085  ld   $85
              debb 00a2  ld   $a2
              debc 0077  ld   $77
              debd 0090  ld   $90
              debe 00a6  ld   $a6
              debf 0011  ld   $11
              dec0 0000  ld   $00
              dec1 007f  ld   $7f
              dec2 002b  ld   $2b
              dec3 0076  ld   $76
              dec4 00f6  ld   $f6
              dec5 002b  ld   $2b
              dec6 004c  ld   $4c
              dec7 0021  ld   $21
              dec8 0076  ld   $76
              dec9 00e3  ld   $e3
              deca 0002  ld   $02
              decb 00f6  ld   $f6
              decc 002b  ld   $2b
              decd 004e  ld   $4e
              dece 0063  ld   $63
              decf 00ff  ld   $ff
              ded0 0093  ld   $93
              ded1 001b  ld   $1b
              ded2 00ff  ld   $ff
              ded3 0077  ld   $77
              ded4 00a0  ld   $a0
              ded5 005d  ld   $5d
              ded6 00cd  ld   $cd
              ded7 00f8  ld   $f8
              ded8 0075  ld   $75
              ded9 001a  ld   $1a
              deda 004d  ld   $4d
              dedb 005e  ld   $5e
              dedc 0050  ld   $50
              dedd 001a  ld   $1a
              dede 004e  ld   $4e
              dedf 005e  ld   $5e
              dee0 0051  ld   $51
              dee1 001a  ld   $1a
              dee2 004f  ld   $4f
              dee3 002b  ld   $2b
              dee4 0056  ld   $56
              dee5 001a  ld   $1a
              dee6 004c  ld   $4c
              dee7 002b  ld   $2b
              dee8 0078  ld   $78
              dee9 0082  ld   $82
              deea 0080  ld   $80
              deeb 00ad  ld   $ad
              deec 002b  ld   $2b
              deed 004c  ld   $4c
              deee 0059  ld   $59
              deef 0000  ld   $00
              def0 002b  ld   $2b
              def1 004e  ld   $4e
              def2 0085  ld   $85
              def3 00d6  ld   $d6
              def4 0066  ld   $66
              def5 0085  ld   $85
              def6 00d6  ld   $d6
              def7 0066  ld   $66
              def8 0021  ld   $21
              def9 0052  ld   $52
              defa 002b  ld   $2b
              defb fe00  bra  ac          ;+-----------------------------------+
              defc fcfd  bra  $defd       ;|                                   |
              defd 1418  ld   $18,y       ;| Trampoline for page $de00 lookups |
              defe e006  jmp  y,$06       ;|                                   |
              deff c218  st   [$18]       ;+-----------------------------------+
              df00 0050  ld   $50
              df01 0021  ld   $21
              df02 0054  ld   $54
              df03 002b  ld   $2b
              df04 0056  ld   $56
              df05 0085  ld   $85
              df06 00d6  ld   $d6
              df07 0066  ld   $66
              df08 00fc  ld   $fc
              df09 0040  ld   $40
              df0a 0035  ld   $35
              df0b 0072  ld   $72
              df0c 00d4  ld   $d4
              df0d 0021  ld   $21
              df0e 004e  ld   $4e
              df0f 00fc  ld   $fc
              df10 003e  ld   $3e
              df11 0035  ld   $35
              df12 003f  ld   $3f
              df13 00e2  ld   $e2
              df14 0021  ld   $21
              df15 004c  ld   $4c
              df16 002b  ld   $2b
              df17 0040  ld   $40
              df18 0021  ld   $21
              df19 004e  ld   $4e
              df1a 002b  ld   $2b
              df1b 003e  ld   $3e
              df1c 0085  ld   $85
              df1d 00a2  ld   $a2
              df1e 0063  ld   $63
              df1f 0021  ld   $21
              df20 0078  ld   $78
              df21 0082  ld   $82
              df22 007f  ld   $7f
              df23 00e9  ld   $e9
              df24 00e9  ld   $e9
              df25 0099  ld   $99
              df26 0030  ld   $30
              df27 002b  ld   $2b
              df28 0078  ld   $78
              df29 00f6  ld   $f6
              df2a 002b  ld   $2b
              df2b 004c  ld   $4c
              df2c 0021  ld   $21
              df2d 0078  ld   $78
              df2e 00e3  ld   $e3
              df2f 0002  ld   $02
              df30 00f6  ld   $f6
              df31 002b  ld   $2b
              df32 004e  ld   $4e
              df33 0063  ld   $63
              df34 00ff  ld   $ff
              df35 0093  ld   $93
              df36 001b  ld   $1b
              df37 00ff  ld   $ff
              df38 0078  ld   $78
              df39 00a0  ld   $a0
              df3a 0038  ld   $38
              df3b 00cd  ld   $cd
              df3c 00d3  ld   $d3
              df3d 0075  ld   $75
              df3e 0085  ld   $85
              df3f 00a2  ld   $a2
              df40 0064  ld   $64
              df41 0035  ld   $35
              df42 0056  ld   $56
              df43 00d1  ld   $d1
              df44 00b8  ld   $b8
              df45 0074  ld   $74
              df46 0035  ld   $35
              df47 0056  ld   $56
              df48 00ae  ld   $ae
              df49 0059  ld   $59
              df4a 0000  ld   $00
              df4b 0099  ld   $99
              df4c 0074  ld   $74
              df4d 0085  ld   $85
              df4e 00c6  ld   $c6
              df4f 0075  ld   $75
              df50 0021  ld   $21
              df51 006a  ld   $6a
              df52 002b  ld   $2b
              df53 0026  ld   $26
              df54 0021  ld   $21
              df55 0072  ld   $72
              df56 002b  ld   $2b
              df57 0024  ld   $24
              df58 0099  ld   $99
              df59 0034  ld   $34
              df5a 002b  ld   $2b
              df5b 0072  ld   $72
              df5c 0011  ld   $11
              df5d 00e9  ld   $e9
              df5e 0000  ld   $00
              df5f 002b  ld   $2b
              df60 0022  ld   $22
              df61 0021  ld   $21
              df62 0034  ld   $34
              df63 00b4  ld   $b4
              df64 00e6  ld   $e6
              df65 0021  ld   $21
              df66 0074  ld   $74
              df67 00b8  ld   $b8
              df68 0034  ld   $34
              df69 002b  ld   $2b
              df6a 0074  ld   $74
              df6b 0035  ld   $35
              df6c 004d  ld   $4d
              df6d 00a1  ld   $a1
              df6e 0063  ld   $63
              df6f 00ff  ld   $ff
              df70 0093  ld   $93
              df71 001b  ld   $1b
              df72 00ff  ld   $ff
              df73 0079  ld   $79
              df74 00a0  ld   $a0
              df75 0040  ld   $40
              df76 00cd  ld   $cd
              df77 00bf  ld   $bf
              df78 0075  ld   $75
              df79 0059  ld   $59
              df7a 0000  ld   $00
              df7b 002b  ld   $2b
              df7c 0064  ld   $64
              df7d 002b  ld   $2b
              df7e 0060  ld   $60
              df7f 0059  ld   $59
              df80 0000  ld   $00
              df81 002b  ld   $2b
              df82 0066  ld   $66
              df83 0059  ld   $59
              df84 0001  ld   $01
              df85 002b  ld   $2b
              df86 0062  ld   $62
              df87 0021  ld   $21
              df88 005c  ld   $5c
              df89 002b  ld   $2b
              df8a 004c  ld   $4c
              df8b 0021  ld   $21
              df8c 005e  ld   $5e
              df8d 002b  ld   $2b
              df8e 004e  ld   $4e
              df8f 0085  ld   $85
              df90 00a2  ld   $a2
              df91 0076  ld   $76
              df92 0085  ld   $85
              df93 00cf  ld   $cf
              df94 0065  ld   $65
              df95 0063  ld   $63
              df96 00ff  ld   $ff
              df97 00cd  ld   $cd
              df98 00db  ld   $db
              df99 0075  ld   $75
              df9a 00cd  ld   $cd
              df9b 00ce  ld   $ce
              df9c 0043  ld   $43
              df9d 0061  ld   $61
              df9e 0072  ld   $72
              df9f 0064  ld   $64
              dfa0 0054  ld   $54
              dfa1 0079  ld   $79
              dfa2 0070  ld   $70
              dfa3 0065  ld   $65
              dfa4 0020  ld   $20
              dfa5 0000  ld   $00
              dfa6 0085  ld   $85
              dfa7 00a2  ld   $a2
              dfa8 0069  ld   $69
              dfa9 0021  ld   $21
              dfaa 0036  ld   $36
              dfab 0085  ld   $85
              dfac 00a2  ld   $a2
              dfad 0068  ld   $68
              dfae 0085  ld   $85
              dfaf 00a2  ld   $a2
              dfb0 006d  ld   $6d
              dfb1 0063  ld   $63
              dfb2 00ff  ld   $ff
              dfb3 0093  ld   $93
              dfb4 001b  ld   $1b
              dfb5 00ff  ld   $ff
              dfb6 007a  ld   $7a
              dfb7 00a0  ld   $a0
              dfb8 0057  ld   $57
              dfb9 00cd  ld   $cd
              dfba 00af  ld   $af
              dfbb 000a  ld   $0a
              dfbc 002a  ld   $2a
              dfbd 002a  ld   $2a
              dfbe 002a  ld   $2a
              dfbf 0020  ld   $20
              dfc0 0043  ld   $43
              dfc1 0061  ld   $61
              dfc2 0072  ld   $72
              dfc3 0064  ld   $64
              dfc4 0042  ld   $42
              dfc5 006f  ld   $6f
              dfc6 006f  ld   $6f
              dfc7 0074  ld   $74
              dfc8 000a  ld   $0a
              dfc9 0000  ld   $00
              dfca 0085  ld   $85
              dfcb 00a2  ld   $a2
              dfcc 0069  ld   $69
              dfcd 0059  ld   $59
              dfce 0000  ld   $00
              dfcf 005e  ld   $5e
              dfd0 000e  ld   $0e
              dfd1 0085  ld   $85
              dfd2 00a2  ld   $a2
              dfd3 0060  ld   $60
              dfd4 0085  ld   $85
              dfd5 00c3  ld   $c3
              dfd6 0079  ld   $79
              dfd7 0085  ld   $85
              dfd8 00a2  ld   $a2
              dfd9 0061  ld   $61
              dfda 0085  ld   $85
              dfdb 00bb  ld   $bb
              dfdc 0068  ld   $68
              dfdd 0085  ld   $85
              dfde 00c7  ld   $c7
              dfdf 0060  ld   $60
              dfe0 0035  ld   $35
              dfe1 0072  ld   $72
              dfe2 00d1  ld   $d1
              dfe3 0085  ld   $85
              dfe4 00a2  ld   $a2
              dfe5 0062  ld   $62
              dfe6 0085  ld   $85
              dfe7 00a2  ld   $a2
              dfe8 0079  ld   $79
              dfe9 0085  ld   $85
              dfea 00a2  ld   $a2
              dfeb 006f  ld   $6f
              dfec 0059  ld   $59
              dfed 0020  ld   $20
              dfee 00f0  ld   $f0
              dfef 0032  ld   $32
              dff0 0085  ld   $85
              dff1 00a2  ld   $a2
              dff2 006d  ld   $6d
              dff3 00cd  ld   $cd
              dff4 00f0  ld   $f0
              dff5 0053  ld   $53
              dff6 0059  ld   $59
              dff7 0053  ld   $53
              dff8 0054  ld   $54
              dff9 0045  ld   $45
              dffa 004d  ld   $4d
              dffb fe00  bra  ac          ;+-----------------------------------+
              dffc fcfd  bra  $dffd       ;|                                   |
              dffd 1418  ld   $18,y       ;| Trampoline for page $df00 lookups |
              dffe e006  jmp  y,$06       ;|                                   |
              dfff c218  st   [$18]       ;+-----------------------------------+
              e000 002e  ld   $2e
              e001 0047  ld   $47
              e002 0054  ld   $54
              e003 0031  ld   $31
              e004 0020  ld   $20
              e005 006e  ld   $6e
              e006 006f  ld   $6f
              e007 0074  ld   $74
              e008 0020  ld   $20
              e009 0066  ld   $66
              e00a 006f  ld   $6f
              e00b 0075  ld   $75
              e00c 006e  ld   $6e
              e00d 0064  ld   $64
              e00e 0021  ld   $21
              e00f 0000  ld   $00
              e010 0085  ld   $85
              e011 00a2  ld   $a2
              e012 0069  ld   $69
              e013 00b4  ld   $b4
              e014 0080  ld   $80
              e015 0000  ld   $00
              e016 0000  ld   $00         ;End of Apps/CardBoot/CardBoot.gt1, size 2922
                                          ;+-----------------------------------+
                                          ;| gbas/menu/MainMenu_vX0.gt1        |
                                          ;+-----------------------------------+
              e017 dc42  st   $42,[y,x++] ;'B'
              e018 dc6f  st   $6f,[y,x++] ;'o'
              e019 dc6f  st   $6f,[y,x++] ;'o'
              e01a dc74  st   $74,[y,x++] ;'t'
              e01b dc00  st   $00,[y,x++] ;'\x00'
              e01c dc00  st   $00,[y,x++] ;'\x00'
              e01d dc00  st   $00,[y,x++] ;'\x00'
              e01e dc00  st   $00,[y,x++] ;'\x00'
              e01f 00ad  ld   $ad
              e020 c218  st   [$18]
              e021 00d4  ld   $d4
              e022 14f3  ld   $f3,y
              e023 e019  jmp  y,$19
              e024 c219  st   [$19]
Main:         e025 0000  ld   $00
              e026 007e  ld   $7e
              e027 0002  ld   $02
              e028 0001  ld   $01
              e029 0001  ld   $01
              e02a 0002  ld   $02
              e02b 0000  ld   $00
              e02c 00f5  ld   $f5
              e02d 0059  ld   $59
              e02e 0080  ld   $80
              e02f 002b  ld   $2b
              e030 0082  ld   $82
              e031 0011  ld   $11
              e032 00a0  ld   $a0
              e033 006b  ld   $6b
              e034 00cf  ld   $cf
              e035 0018  ld   $18
              e036 0011  ld   $11
              e037 0020  ld   $20
              e038 000f  ld   $0f
              e039 002b  ld   $2b
              e03a 00a2  ld   $a2
              e03b 00c7  ld   $c7
              e03c 0003  ld   $03
              e03d 0069  ld   $69
              e03e 0021  ld   $21
              e03f 004d  ld   $4d
              e040 0002  ld   $02
              e041 00aa  ld   $aa
              e042 004d  ld   $4d
              e043 0000  ld   $00
              e044 00d6  ld   $d6
              e045 004d  ld   $4d
              e046 0000  ld   $00
              e047 00a6  ld   $a6
              e048 0016  ld   $16
              e049 0000  ld   $00
              e04a 002d  ld   $2d
              e04b 004d  ld   $4d
              e04c 0000  ld   $00
              e04d 002e  ld   $2e
              e04e 0085  ld   $85
              e04f 00a5  ld   $a5
              e050 0062  ld   $62
              e051 0011  ld   $11
              e052 00c0  ld   $c0
              e053 0062  ld   $62
              e054 002b  ld   $2b
              e055 0084  ld   $84
              e056 0085  ld   $85
              e057 00b5  ld   $b5
              e058 0062  ld   $62
              e059 0016  ld   $16
              e05a 00ff  ld   $ff
              e05b 000e  ld   $0e
              e05c 0011  ld   $11
              e05d 00f6  ld   $f6
              e05e 0001  ld   $01
              e05f 0077  ld   $77
              e060 0065  ld   $65
              e061 00be  ld   $be
              e062 0011  ld   $11
              e063 00f6  ld   $f6
              e064 0068  ld   $68
              e065 0025  ld   $25
              e066 000d  ld   $0d
              e067 0011  ld   $11
              e068 00fb  ld   $fb
              e069 0068  ld   $68
              e06a 0025  ld   $25
              e06b 0001  ld   $01
              e06c 00c7  ld   $c7
              e06d 00fd  ld   $fd
              e06e 0066  ld   $66
              e06f 00aa  ld   $aa
              e070 004d  ld   $4d
              e071 0000  ld   $00
              e072 00a4  ld   $a4
              e073 00c7  ld   $c7
              e074 0010  ld   $10
              e075 0069  ld   $69
              e076 00aa  ld   $aa
              e077 0016  ld   $16
              e078 0020  ld   $20
              e079 00a3  ld   $a3
              e07a 004d  ld   $4d
              e07b 0000  ld   $00
              e07c 0082  ld   $82
              e07d 004d  ld   $4d
              e07e 0000  ld   $00
              e07f 0084  ld   $84
              e080 004d  ld   $4d
              e081 009f  ld   $9f
              e082 0086  ld   $86
              e083 004d  ld   $4d
              e084 001b  ld   $1b
              e085 0088  ld   $88
              e086 0085  ld   $85
              e087 00c2  ld   $c2
              e088 006c  ld   $6c
              e089 0016  ld   $16
              e08a 0010  ld   $10
              e08b 00a3  ld   $a3
              e08c 004d  ld   $4d
              e08d 0002  ld   $02
              e08e 0082  ld   $82
              e08f 004d  ld   $4d
              e090 0002  ld   $02
              e091 0084  ld   $84
              e092 004d  ld   $4d
              e093 009d  ld   $9d
              e094 0086  ld   $86
              e095 004d  ld   $4d
              e096 0019  ld   $19
              e097 0088  ld   $88
              e098 0085  ld   $85
              e099 00c2  ld   $c2
              e09a 006c  ld   $6c
              e09b 0016  ld   $16
              e09c 0020  ld   $20
              e09d 00a3  ld   $a3
              e09e 004d  ld   $4d
              e09f 0000  ld   $00
              e0a0 0082  ld   $82
              e0a1 004d  ld   $4d
              e0a2 005b  ld   $5b
              e0a3 0084  ld   $84
              e0a4 004d  ld   $4d
              e0a5 009f  ld   $9f
              e0a6 0086  ld   $86
              e0a7 004d  ld   $4d
              e0a8 0077  ld   $77
              e0a9 0088  ld   $88
              e0aa 0085  ld   $85
              e0ab 00c2  ld   $c2
              e0ac 006c  ld   $6c
              e0ad 0016  ld   $16
              e0ae 0010  ld   $10
              e0af 00a3  ld   $a3
              e0b0 004d  ld   $4d
              e0b1 0002  ld   $02
              e0b2 0082  ld   $82
              e0b3 004d  ld   $4d
              e0b4 005d  ld   $5d
              e0b5 0084  ld   $84
              e0b6 004d  ld   $4d
              e0b7 009d  ld   $9d
              e0b8 0086  ld   $86
              e0b9 004d  ld   $4d
              e0ba 0075  ld   $75
              e0bb 0088  ld   $88
              e0bc 0085  ld   $85
              e0bd 00c2  ld   $c2
              e0be 006c  ld   $6c
              e0bf 0016  ld   $16
              e0c0 0020  ld   $20
              e0c1 00a3  ld   $a3
              e0c2 004d  ld   $4d
              e0c3 0000  ld   $00
              e0c4 0082  ld   $82
              e0c5 004d  ld   $4d
              e0c6 001c  ld   $1c
              e0c7 0084  ld   $84
              e0c8 004d  ld   $4d
              e0c9 0001  ld   $01
              e0ca 0086  ld   $86
              e0cb 004d  ld   $4d
              e0cc 005a  ld   $5a
              e0cd 0088  ld   $88
              e0ce 0085  ld   $85
              e0cf 00c2  ld   $c2
              e0d0 006c  ld   $6c
              e0d1 0016  ld   $16
              e0d2 0020  ld   $20
              e0d3 00a3  ld   $a3
              e0d4 004d  ld   $4d
              e0d5 009e  ld   $9e
              e0d6 0082  ld   $82
              e0d7 004d  ld   $4d
              e0d8 001c  ld   $1c
              e0d9 0084  ld   $84
              e0da 004d  ld   $4d
              e0db 009f  ld   $9f
              e0dc 0086  ld   $86
              e0dd 004d  ld   $4d
              e0de 005a  ld   $5a
              e0df 0088  ld   $88
              e0e0 0085  ld   $85
              e0e1 00c2  ld   $c2
              e0e2 006c  ld   $6c
              e0e3 0085  ld   $85
              e0e4 0086  ld   $86
              e0e5 0005  ld   $05
              e0e6 0011  ld   $11
              e0e7 0000  ld   $00
              e0e8 000c  ld   $0c
              e0e9 002b  ld   $2b
              e0ea 00a2  ld   $a2
              e0eb 004d  ld   $4d
              e0ec 0026  ld   $26
              e0ed 0038  ld   $38
              e0ee 004d  ld   $4d
              e0ef 0000  ld   $00
              e0f0 003a  ld   $3a
              e0f1 0016  ld   $16
              e0f2 0018  ld   $18
              e0f3 00a4  ld   $a4
              e0f4 0065  ld   $65
              e0f5 00a5  ld   $a5
              e0f6 0038  ld   $38
              e0f7 0085  ld   $85
              e0f8 00b9  ld   $b9
              e0f9 0066  ld   $66
              e0fa 003f  ld   $3f
              e0fb fe00  bra  ac          ;+-----------------------------------+
              e0fc fcfd  bra  $e0fd       ;|                                   |
              e0fd 1418  ld   $18,y       ;| Trampoline for page $e000 lookups |
              e0fe e006  jmp  y,$06       ;|                                   |
              e0ff c218  st   [$18]       ;+-----------------------------------+
              e100 003a  ld   $3a
              e101 00b0  ld   $b0
              e102 007f  ld   $7f
              e103 0085  ld   $85
              e104 00d6  ld   $d6
              e105 0063  ld   $63
              e106 0085  ld   $85
              e107 00b7  ld   $b7
              e108 0070  ld   $70
              e109 0016  ld   $16
              e10a 0062  ld   $62
              e10b 00a4  ld   $a4
              e10c 0065  ld   $65
              e10d 00a5  ld   $a5
              e10e 0038  ld   $38
              e10f 0085  ld   $85
              e110 00b9  ld   $b9
              e111 0066  ld   $66
              e112 0021  ld   $21
              e113 003a  ld   $3a
              e114 00e3  ld   $e3
              e115 0005  ld   $05
              e116 0079  ld   $79
              e117 00b0  ld   $b0
              e118 007f  ld   $7f
              e119 00f6  ld   $f6
              e11a 0085  ld   $85
              e11b 00d6  ld   $d6
              e11c 0063  ld   $63
              e11d 0085  ld   $85
              e11e 00b7  ld   $b7
              e11f 0070  ld   $70
              e120 0042  ld   $42
              e121 0008  ld   $08
              e122 0038  ld   $38
              e123 0038  ld   $38
              e124 0085  ld   $85
              e125 0000  ld   $00
              e126 0003  ld   $03
              e127 0003  ld   $03
              e128 0000  ld   $00
              e129 00f9  ld   $f9
              e12a 00a7  ld   $a7
              e12b 0004  ld   $04
              e12c 003a  ld   $3a
              e12d 0093  ld   $93
              e12e 003a  ld   $3a
              e12f 00bd  ld   $bd
              e130 00c2  ld   $c2
              e131 0002  ld   $02
              e132 0011  ld   $11
              e133 0010  ld   $10
              e134 002a  ld   $2a
              e135 002b  ld   $2b
              e136 00a2  ld   $a2
              e137 0016  ld   $16
              e138 0024  ld   $24
              e139 00a4  ld   $a4
              e13a 0016  ld   $16
              e13b 005f  ld   $5f
              e13c 00a5  ld   $a5
              e13d 0085  ld   $85
              e13e 00b9  ld   $b9
              e13f 0066  ld   $66
              e140 0011  ld   $11
              e141 00dd  ld   $dd
              e142 007e  ld   $7e
              e143 0085  ld   $85
              e144 00d6  ld   $d6
              e145 0063  ld   $63
              e146 0011  ld   $11
              e147 00f4  ld   $f4
              e148 007e  ld   $7e
              e149 002b  ld   $2b
              e14a 00c4  ld   $c4
              e14b 004d  ld   $4d
              e14c 003f  ld   $3f
              e14d 00c6  ld   $c6
              e14e 0085  ld   $85
              e14f 00f0  ld   $f0
              e150 0003  ld   $03
              e151 0011  ld   $11
              e152 00d2  ld   $d2
              e153 007e  ld   $7e
              e154 0085  ld   $85
              e155 00d6  ld   $d6
              e156 0063  ld   $63
              e157 0016  ld   $16
              e158 001c  ld   $1c
              e159 00a4  ld   $a4
              e15a 0016  ld   $16
              e15b 0067  ld   $67
              e15c 00a5  ld   $a5
              e15d 0085  ld   $85
              e15e 00b9  ld   $b9
              e15f 0066  ld   $66
              e160 0011  ld   $11
              e161 00cb  ld   $cb
              e162 007e  ld   $7e
              e163 0085  ld   $85
              e164 00d6  ld   $d6
              e165 0063  ld   $63
              e166 0011  ld   $11
              e167 00ed  ld   $ed
              e168 007e  ld   $7e
              e169 002b  ld   $2b
              e16a 00c4  ld   $c4
              e16b 004d  ld   $4d
              e16c 003f  ld   $3f
              e16d 00c6  ld   $c6
              e16e 0085  ld   $85
              e16f 00f0  ld   $f0
              e170 0003  ld   $03
              e171 0011  ld   $11
              e172 00b9  ld   $b9
              e173 007e  ld   $7e
              e174 0085  ld   $85
              e175 00d6  ld   $d6
              e176 0063  ld   $63
              e177 0016  ld   $16
              e178 0024  ld   $24
              e179 00a4  ld   $a4
              e17a 0016  ld   $16
              e17b 006f  ld   $6f
              e17c 00a5  ld   $a5
              e17d 0085  ld   $85
              e17e 00b9  ld   $b9
              e17f 0066  ld   $66
              e180 0011  ld   $11
              e181 00b3  ld   $b3
              e182 007e  ld   $7e
              e183 0085  ld   $85
              e184 00d6  ld   $d6
              e185 0063  ld   $63
              e186 0011  ld   $11
              e187 00e2  ld   $e2
              e188 007e  ld   $7e
              e189 002b  ld   $2b
              e18a 00c4  ld   $c4
              e18b 004d  ld   $4d
              e18c 003f  ld   $3f
              e18d 00c6  ld   $c6
              e18e 0085  ld   $85
              e18f 00f0  ld   $f0
              e190 0003  ld   $03
              e191 0011  ld   $11
              e192 00a8  ld   $a8
              e193 007e  ld   $7e
              e194 0085  ld   $85
              e195 00d6  ld   $d6
              e196 0063  ld   $63
              e197 0085  ld   $85
              e198 00b7  ld   $b7
              e199 0070  ld   $70
              e19a 0011  ld   $11
              e19b 0000  ld   $00
              e19c 0015  ld   $15
              e19d 002b  ld   $2b
              e19e 00a2  ld   $a2
              e19f 0016  ld   $16
              e1a0 0003  ld   $03
              e1a1 00a4  ld   $a4
              e1a2 0016  ld   $16
              e1a3 0055  ld   $55
              e1a4 00a5  ld   $a5
              e1a5 0085  ld   $85
              e1a6 00b9  ld   $b9
              e1a7 0066  ld   $66
              e1a8 0011  ld   $11
              e1a9 00a0  ld   $a0
              e1aa 007e  ld   $7e
              e1ab 0085  ld   $85
              e1ac 00d6  ld   $d6
              e1ad 0063  ld   $63
              e1ae 0016  ld   $16
              e1af 008e  ld   $8e
              e1b0 00a4  ld   $a4
              e1b1 0016  ld   $16
              e1b2 0055  ld   $55
              e1b3 00a5  ld   $a5
              e1b4 0085  ld   $85
              e1b5 00b9  ld   $b9
              e1b6 0066  ld   $66
              e1b7 0059  ld   $59
              e1b8 0079  ld   $79
              e1b9 0085  ld   $85
              e1ba 00d6  ld   $d6
              e1bb 0063  ld   $63
              e1bc 0011  ld   $11
              e1bd 00fd  ld   $fd
              e1be 007d  ld   $7d
              e1bf 0085  ld   $85
              e1c0 00d6  ld   $d6
              e1c1 0063  ld   $63
              e1c2 004d  ld   $4d
              e1c3 0012  ld   $12
              e1c4 003c  ld   $3c
              e1c5 004d  ld   $4d
              e1c6 0026  ld   $26
              e1c7 0038  ld   $38
              e1c8 0059  ld   $59
              e1c9 0000  ld   $00
              e1ca 002b  ld   $2b
              e1cb 003e  ld   $3e
              e1cc 002b  ld   $2b
              e1cd 0040  ld   $40
              e1ce 002b  ld   $2b
              e1cf 0042  ld   $42
              e1d0 002b  ld   $2b
              e1d1 0044  ld   $44
              e1d2 0011  ld   $11
              e1d3 0097  ld   $97
              e1d4 0010  ld   $10
              e1d5 002b  ld   $2b
              e1d6 0046  ld   $46
              e1d7 0011  ld   $11
              e1d8 0097  ld   $97
              e1d9 0017  ld   $17
              e1da 002b  ld   $2b
              e1db 0048  ld   $48
              e1dc 0016  ld   $16
              e1dd 0003  ld   $03
              e1de 0087  ld   $87
              e1df 0011  ld   $11
              e1e0 00a0  ld   $a0
              e1e1 0075  ld   $75
              e1e2 002b  ld   $2b
              e1e3 0092  ld   $92
              e1e4 0085  ld   $85
              e1e5 00f9  ld   $f9
              e1e6 0061  ld   $61
              e1e7 0085  ld   $85
              e1e8 00a1  ld   $a1
              e1e9 0073  ld   $73
              e1ea 0085  ld   $85
              e1eb 00ce  ld   $ce
              e1ec 0006  ld   $06
              e1ed 0085  ld   $85
              e1ee 0075  ld   $75
              e1ef 0005  ld   $05
              e1f0 002f  ld   $2f
              e1f1 00d6  ld   $d6
              e1f2 006e  ld   $6e
              e1f3 001a  ld   $1a
              e1f4 0011  ld   $11
              e1f5 002b  ld   $2b
              e1f6 0082  ld   $82
              e1f7 004d  ld   $4d
              e1f8 0000  ld   $00
              e1f9 0084  ld   $84
              e1fa 0085  ld   $85
              e1fb fe00  bra  ac          ;+-----------------------------------+
              e1fc fcfd  bra  $e1fd       ;|                                   |
              e1fd 1418  ld   $18,y       ;| Trampoline for page $e100 lookups |
              e1fe e006  jmp  y,$06       ;|                                   |
              e1ff c218  st   [$18]       ;+-----------------------------------+
              e200 00ce  ld   $ce
              e201 0067  ld   $67
              e202 0065  ld   $65
              e203 00a3  ld   $a3
              e204 002d  ld   $2d
              e205 00e1  ld   $e1
              e206 00a4  ld   $a4
              e207 0038  ld   $38
              e208 003c  ld   $3c
              e209 0085  ld   $85
              e20a 00b9  ld   $b9
              e20b 0066  ld   $66
              e20c 0059  ld   $59
              e20d 003e  ld   $3e
              e20e 0085  ld   $85
              e20f 00e4  ld   $e4
              e210 0062  ld   $62
              e211 0085  ld   $85
              e212 0008  ld   $08
              e213 0004  ld   $04
              e214 0085  ld   $85
              e215 004f  ld   $4f
              e216 0004  ld   $04
              e217 0085  ld   $85
              e218 0034  ld   $34
              e219 0004  ld   $04
              e21a 0095  ld   $95
              e21b 003e  ld   $3e
              e21c 0085  ld   $85
              e21d 00c6  ld   $c6
              e21e 0003  ld   $03
              e21f 0075  ld   $75
              e220 0065  ld   $65
              e221 00a3  ld   $a3
              e222 00c6  ld   $c6
              e223 0021  ld   $21
              e224 00c4  ld   $c4
              e225 0085  ld   $85
              e226 0000  ld   $00
              e227 0004  ld   $04
              e228 0004  ld   $04
              e229 0000  ld   $00
              e22a 00f8  ld   $f8
              e22b 0085  ld   $85
              e22c 00d6  ld   $d6
              e22d 0063  ld   $63
              e22e 0016  ld   $16
              e22f 002a  ld   $2a
              e230 00a3  ld   $a3
              e231 0063  ld   $63
              e232 00ff  ld   $ff
              e233 0075  ld   $75
              e234 0011  ld   $11
              e235 00fd  ld   $fd
              e236 0073  ld   $73
              e237 00ad  ld   $ad
              e238 00fc  ld   $fc
              e239 0042  ld   $42
              e23a 00bb  ld   $bb
              e23b 0030  ld   $30
              e23c 0004  ld   $04
              e23d 0011  ld   $11
              e23e 00fd  ld   $fd
              e23f 0073  ld   $73
              e240 00ad  ld   $ad
              e241 002b  ld   $2b
              e242 0042  ld   $42
              e243 0011  ld   $11
              e244 0000  ld   $00
              e245 0015  ld   $15
              e246 002b  ld   $2b
              e247 00a2  ld   $a2
              e248 0016  ld   $16
              e249 0040  ld   $40
              e24a 00a4  ld   $a4
              e24b 0016  ld   $16
              e24c 0055  ld   $55
              e24d 00a5  ld   $a5
              e24e 0085  ld   $85
              e24f 00b9  ld   $b9
              e250 0066  ld   $66
              e251 0085  ld   $85
              e252 00dd  ld   $dd
              e253 0065  ld   $65
              e254 0011  ld   $11
              e255 00f3  ld   $f3
              e256 0073  ld   $73
              e257 0085  ld   $85
              e258 00d6  ld   $d6
              e259 0063  ld   $63
              e25a 0085  ld   $85
              e25b 00b7  ld   $b7
              e25c 0070  ld   $70
              e25d 0063  ld   $63
              e25e 00ff  ld   $ff
              e25f 0075  ld   $75
              e260 00c7  ld   $c7
              e261 0003  ld   $03
              e262 006f  ld   $6f
              e263 003e  ld   $3e
              e264 00bd  ld   $bd
              e265 004b  ld   $4b
              e266 0004  ld   $04
              e267 0053  ld   $53
              e268 0044  ld   $44
              e269 00e5  ld   $e5
              e26a 007d  ld   $7d
              e26b 005e  ld   $5e
              e26c 0014  ld   $14
              e26d 0095  ld   $95
              e26e 0044  ld   $44
              e26f 00a7  ld   $a7
              e270 0018  ld   $18
              e271 0044  ld   $44
              e272 00bd  ld   $bd
              e273 004b  ld   $4b
              e274 0004  ld   $04
              e275 004d  ld   $4d
              e276 0000  ld   $00
              e277 0044  ld   $44
              e278 0063  ld   $63
              e279 00ff  ld   $ff
              e27a 0075  ld   $75
              e27b 004d  ld   $4d
              e27c 0000  ld   $00
              e27d 003a  ld   $3a
              e27e 003f  ld   $3f
              e27f 003a  ld   $3a
              e280 00c0  ld   $c0
              e281 007a  ld   $7a
              e282 0051  ld   $51
              e283 003a  ld   $3a
              e284 00c0  ld   $c0
              e285 007c  ld   $7c
              e286 002b  ld   $2b
              e287 004a  ld   $4a
              e288 003f  ld   $3f
              e289 003a  ld   $3a
              e28a 00c0  ld   $c0
              e28b 0079  ld   $79
              e28c 0051  ld   $51
              e28d 003a  ld   $3a
              e28e 00c0  ld   $c0
              e28f 007b  ld   $7b
              e290 002b  ld   $2b
              e291 004c  ld   $4c
              e292 003f  ld   $3f
              e293 003a  ld   $3a
              e294 00c0  ld   $c0
              e295 007a  ld   $7a
              e296 002b  ld   $2b
              e297 00e8  ld   $e8
              e298 003f  ld   $3f
              e299 003a  ld   $3a
              e29a 00c0  ld   $c0
              e29b 0078  ld   $78
              e29c 0099  ld   $99
              e29d 00e8  ld   $e8
              e29e 0051  ld   $51
              e29f 003a  ld   $3a
              e2a0 00c0  ld   $c0
              e2a1 007a  ld   $7a
              e2a2 002b  ld   $2b
              e2a3 004e  ld   $4e
              e2a4 003f  ld   $3f
              e2a5 003a  ld   $3a
              e2a6 00c0  ld   $c0
              e2a7 0079  ld   $79
              e2a8 002b  ld   $2b
              e2a9 00e8  ld   $e8
              e2aa 003f  ld   $3f
              e2ab 003a  ld   $3a
              e2ac 00c0  ld   $c0
              e2ad 0075  ld   $75
              e2ae 0099  ld   $99
              e2af 00e8  ld   $e8
              e2b0 0051  ld   $51
              e2b1 003a  ld   $3a
              e2b2 00c0  ld   $c0
              e2b3 0079  ld   $79
              e2b4 002b  ld   $2b
              e2b5 0050  ld   $50
              e2b6 0021  ld   $21
              e2b7 004e  ld   $4e
              e2b8 00b1  ld   $b1
              e2b9 0033  ld   $33
              e2ba 00c7  ld   $c7
              e2bb 004f  ld   $4f
              e2bc 007b  ld   $7b
              e2bd 0000  ld   $00
              e2be 00c5  ld   $c5
              e2bf 0097  ld   $97
              e2c0 0004  ld   $04
              e2c1 0085  ld   $85
              e2c2 002b  ld   $2b
              e2c3 0005  ld   $05
              e2c4 0021  ld   $21
              e2c5 0050  ld   $50
              e2c6 00b1  ld   $b1
              e2c7 0033  ld   $33
              e2c8 00c7  ld   $c7
              e2c9 001f  ld   $1f
              e2ca 007b  ld   $7b
              e2cb 0000  ld   $00
              e2cc 00c5  ld   $c5
              e2cd 00a5  ld   $a5
              e2ce 0004  ld   $04
              e2cf 0085  ld   $85
              e2d0 002b  ld   $2b
              e2d1 0005  ld   $05
              e2d2 001c  ld   $1c
              e2d3 004b  ld   $4b
              e2d4 0052  ld   $52
              e2d5 0050  ld   $50
              e2d6 001c  ld   $1c
              e2d7 004d  ld   $4d
              e2d8 0054  ld   $54
              e2d9 003c  ld   $3c
              e2da 00a2  ld   $a2
              e2db 0054  ld   $54
              e2dc 0052  ld   $52
              e2dd 00b1  ld   $b1
              e2de 0031  ld   $31
              e2df 0082  ld   $82
              e2e0 0080  ld   $80
              e2e1 00bb  ld   $bb
              e2e2 00c0  ld   $c0
              e2e3 0004  ld   $04
              e2e4 00a2  ld   $a2
              e2e5 0054  ld   $54
              e2e6 0052  ld   $52
              e2e7 0016  ld   $16
              e2e8 0000  ld   $00
              e2e9 00a3  ld   $a3
              e2ea 002f  ld   $2f
              e2eb 00a3  ld   $a3
              e2ec 0054  ld   $54
              e2ed 003f  ld   $3f
              e2ee 003a  ld   $3a
              e2ef 00a4  ld   $a4
              e2f0 007d  ld   $7d
              e2f1 002b  ld   $2b
              e2f2 0056  ld   $56
              e2f3 001c  ld   $1c
              e2f4 004f  ld   $4f
              e2f5 0052  ld   $52
              e2f6 0050  ld   $50
              e2f7 001c  ld   $1c
              e2f8 0051  ld   $51
              e2f9 0054  ld   $54
              e2fa 003c  ld   $3c
              e2fb fe00  bra  ac          ;+-----------------------------------+
              e2fc fcfd  bra  $e2fd       ;|                                   |
              e2fd 1418  ld   $18,y       ;| Trampoline for page $e200 lookups |
              e2fe e006  jmp  y,$06       ;|                                   |
              e2ff c218  st   [$18]       ;+-----------------------------------+
              e300 00a2  ld   $a2
              e301 0054  ld   $54
              e302 0052  ld   $52
              e303 00b1  ld   $b1
              e304 0031  ld   $31
              e305 00bd  ld   $bd
              e306 001f  ld   $1f
              e307 0005  ld   $05
              e308 0021  ld   $21
              e309 0056  ld   $56
              e30a 00e6  ld   $e6
              e30b 0014  ld   $14
              e30c 00c3  ld   $c3
              e30d 00e9  ld   $e9
              e30e 0004  ld   $04
              e30f 00a2  ld   $a2
              e310 0054  ld   $54
              e311 0052  ld   $52
              e312 0016  ld   $16
              e313 00bf  ld   $bf
              e314 00a3  ld   $a3
              e315 002f  ld   $2f
              e316 00a3  ld   $a3
              e317 0054  ld   $54
              e318 0085  ld   $85
              e319 0019  ld   $19
              e31a 0005  ld   $05
              e31b 0021  ld   $21
              e31c 0056  ld   $56
              e31d 00e6  ld   $e6
              e31e 000a  ld   $0a
              e31f 00c3  ld   $c3
              e320 0007  ld   $07
              e321 0005  ld   $05
              e322 00a2  ld   $a2
              e323 0054  ld   $54
              e324 0052  ld   $52
              e325 0085  ld   $85
              e326 0000  ld   $00
              e327 0005  ld   $05
              e328 0005  ld   $05
              e329 0000  ld   $00
              e32a 00fd  ld   $fd
              e32b 0016  ld   $16
              e32c 00aa  ld   $aa
              e32d 00a3  ld   $a3
              e32e 002f  ld   $2f
              e32f 00a3  ld   $a3
              e330 0054  ld   $54
              e331 0085  ld   $85
              e332 0019  ld   $19
              e333 0005  ld   $05
              e334 0021  ld   $21
              e335 0056  ld   $56
              e336 00e6  ld   $e6
              e337 0004  ld   $04
              e338 00c3  ld   $c3
              e339 0017  ld   $17
              e33a 0005  ld   $05
              e33b 00a2  ld   $a2
              e33c 0054  ld   $54
              e33d 0052  ld   $52
              e33e 0016  ld   $16
              e33f 0095  ld   $95
              e340 00a3  ld   $a3
              e341 002f  ld   $2f
              e342 00a3  ld   $a3
              e343 0054  ld   $54
              e344 0021  ld   $21
              e345 0056  ld   $56
              e346 00e3  ld   $e3
              e347 0001  ld   $01
              e348 0051  ld   $51
              e349 003a  ld   $3a
              e34a 00a4  ld   $a4
              e34b 007d  ld   $7d
              e34c 00a7  ld   $a7
              e34d 001f  ld   $1f
              e34e 003a  ld   $3a
              e34f 0093  ld   $93
              e350 003a  ld   $3a
              e351 00bd  ld   $bd
              e352 0051  ld   $51
              e353 0004  ld   $04
              e354 0063  ld   $63
              e355 00ff  ld   $ff
              e356 0075  ld   $75
              e357 0059  ld   $59
              e358 0000  ld   $00
              e359 0051  ld   $51
              e35a 003a  ld   $3a
              e35b 00a4  ld   $a4
              e35c 007d  ld   $7d
              e35d 0059  ld   $59
              e35e 0000  ld   $00
              e35f 0051  ld   $51
              e360 003a  ld   $3a
              e361 00c0  ld   $c0
              e362 007a  ld   $7a
              e363 0059  ld   $59
              e364 0000  ld   $00
              e365 0051  ld   $51
              e366 003a  ld   $3a
              e367 00c0  ld   $c0
              e368 0079  ld   $79
              e369 00b1  ld   $b1
              e36a 002f  ld   $2f
              e36b 00c7  ld   $c7
              e36c 0007  ld   $07
              e36d 001f  ld   $1f
              e36e 00ff  ld   $ff
              e36f 00c7  ld   $c7
              e370 0004  ld   $04
              e371 001d  ld   $1d
              e372 0000  ld   $00
              e373 0051  ld   $51
              e374 003a  ld   $3a
              e375 00c0  ld   $c0
              e376 0078  ld   $78
              e377 00b1  ld   $b1
              e378 002f  ld   $2f
              e379 00c7  ld   $c7
              e37a 0007  ld   $07
              e37b 001f  ld   $1f
              e37c 00ff  ld   $ff
              e37d 00c7  ld   $c7
              e37e 0004  ld   $04
              e37f 001d  ld   $1d
              e380 0000  ld   $00
              e381 0051  ld   $51
              e382 003a  ld   $3a
              e383 00c0  ld   $c0
              e384 0075  ld   $75
              e385 003f  ld   $3f
              e386 003a  ld   $3a
              e387 00c0  ld   $c0
              e388 0078  ld   $78
              e389 00b1  ld   $b1
              e38a 0033  ld   $33
              e38b 00e6  ld   $e6
              e38c 00c8  ld   $c8
              e38d 00d9  ld   $d9
              e38e 00ea  ld   $ea
              e38f 003f  ld   $3f
              e390 003a  ld   $3a
              e391 00c0  ld   $c0
              e392 0075  ld   $75
              e393 00b1  ld   $b1
              e394 0033  ld   $33
              e395 00e6  ld   $e6
              e396 00c8  ld   $c8
              e397 00d9  ld   $d9
              e398 0018  ld   $18
              e399 00fa  ld   $fa
              e39a 00ea  ld   $ea
              e39b 00bb  ld   $bb
              e39c 003c  ld   $3c
              e39d 0005  ld   $05
              e39e 0063  ld   $63
              e39f 00ff  ld   $ff
              e3a0 0075  ld   $75
              e3a1 004d  ld   $4d
              e3a2 0000  ld   $00
              e3a3 003a  ld   $3a
              e3a4 0085  ld   $85
              e3a5 002b  ld   $2b
              e3a6 0005  ld   $05
              e3a7 00a7  ld   $a7
              e3a8 001f  ld   $1f
              e3a9 003a  ld   $3a
              e3aa 0093  ld   $93
              e3ab 003a  ld   $3a
              e3ac 00bd  ld   $bd
              e3ad 0077  ld   $77
              e3ae 0005  ld   $05
              e3af 0063  ld   $63
              e3b0 00ff  ld   $ff
              e3b1 0075  ld   $75
              e3b2 004d  ld   $4d
              e3b3 0000  ld   $00
              e3b4 0058  ld   $58
              e3b5 003f  ld   $3f
              e3b6 0058  ld   $58
              e3b7 00dc  ld   $dc
              e3b8 0074  ld   $74
              e3b9 002b  ld   $2b
              e3ba 00c4  ld   $c4
              e3bb 004d  ld   $4d
              e3bc 0000  ld   $00
              e3bd 00c6  ld   $c6
              e3be 004d  ld   $4d
              e3bf 0002  ld   $02
              e3c0 00c8  ld   $c8
              e3c1 004d  ld   $4d
              e3c2 0002  ld   $02
              e3c3 00ca  ld   $ca
              e3c4 003f  ld   $3f
              e3c5 0058  ld   $58
              e3c6 00a0  ld   $a0
              e3c7 0078  ld   $78
              e3c8 002b  ld   $2b
              e3c9 00cc  ld   $cc
              e3ca 003f  ld   $3f
              e3cb 0058  ld   $58
              e3cc 00ee  ld   $ee
              e3cd 0074  ld   $74
              e3ce 002b  ld   $2b
              e3cf 00ce  ld   $ce
              e3d0 0085  ld   $85
              e3d1 00e4  ld   $e4
              e3d2 0005  ld   $05
              e3d3 003f  ld   $3f
              e3d4 0058  ld   $58
              e3d5 00dc  ld   $dc
              e3d6 0074  ld   $74
              e3d7 002b  ld   $2b
              e3d8 00c4  ld   $c4
              e3d9 004d  ld   $4d
              e3da 003f  ld   $3f
              e3db 00c6  ld   $c6
              e3dc 004d  ld   $4d
              e3dd 0000  ld   $00
              e3de 00c8  ld   $c8
              e3df 004d  ld   $4d
              e3e0 0000  ld   $00
              e3e1 00ca  ld   $ca
              e3e2 003f  ld   $3f
              e3e3 0058  ld   $58
              e3e4 00a0  ld   $a0
              e3e5 0078  ld   $78
              e3e6 002b  ld   $2b
              e3e7 00cc  ld   $cc
              e3e8 003f  ld   $3f
              e3e9 0058  ld   $58
              e3ea 00ee  ld   $ee
              e3eb 0074  ld   $74
              e3ec 002b  ld   $2b
              e3ed 00ce  ld   $ce
              e3ee 0085  ld   $85
              e3ef 00e4  ld   $e4
              e3f0 0005  ld   $05
              e3f1 00a7  ld   $a7
              e3f2 0008  ld   $08
              e3f3 0058  ld   $58
              e3f4 0093  ld   $93
              e3f5 0058  ld   $58
              e3f6 00bd  ld   $bd
              e3f7 0088  ld   $88
              e3f8 0005  ld   $05
              e3f9 0011  ld   $11
              e3fa 0010  ld   $10
              e3fb fe00  bra  ac          ;+-----------------------------------+
              e3fc fcfd  bra  $e3fd       ;|                                   |
              e3fd 1418  ld   $18,y       ;| Trampoline for page $e300 lookups |
              e3fe e006  jmp  y,$06       ;|                                   |
              e3ff c218  st   [$18]       ;+-----------------------------------+
              e400 003f  ld   $3f
              e401 002b  ld   $2b
              e402 00a2  ld   $a2
              e403 0016  ld   $16
              e404 0051  ld   $51
              e405 00a4  ld   $a4
              e406 0016  ld   $16
              e407 0013  ld   $13
              e408 00a5  ld   $a5
              e409 0085  ld   $85
              e40a 00b9  ld   $b9
              e40b 0066  ld   $66
              e40c 0011  ld   $11
              e40d 00c9  ld   $c9
              e40e 0074  ld   $74
              e40f 0085  ld   $85
              e410 00d6  ld   $d6
              e411 0063  ld   $63
              e412 0063  ld   $63
              e413 00ff  ld   $ff
              e414 0075  ld   $75
              e415 0065  ld   $65
              e416 00a3  ld   $a3
              e417 00c6  ld   $c6
              e418 0042  ld   $42
              e419 0001  ld   $01
              e41a 00e8  ld   $e8
              e41b 00ca  ld   $ca
              e41c 0032  ld   $32
              e41d 005a  ld   $5a
              e41e 00ca  ld   $ca
              e41f 0042  ld   $42
              e420 0001  ld   $01
              e421 00d8  ld   $d8
              e422 00ca  ld   $ca
              e423 0042  ld   $42
              e424 0001  ld   $01
              e425 00e8  ld   $e8
              e426 00c8  ld   $c8
              e427 0032  ld   $32
              e428 003a  ld   $3a
              e429 00c8  ld   $c8
              e42a 0085  ld   $85
              e42b 0000  ld   $00
              e42c 0006  ld   $06
              e42d 0006  ld   $06
              e42e 0000  ld   $00
              e42f 00ff  ld   $ff
              e430 0042  ld   $42
              e431 0001  ld   $01
              e432 00dc  ld   $dc
              e433 00c8  ld   $c8
              e434 0059  ld   $59
              e435 000d  ld   $0d
              e436 0099  ld   $99
              e437 00cc  ld   $cc
              e438 0099  ld   $99
              e439 003a  ld   $3a
              e43a 005e  ld   $5e
              e43b 00a4  ld   $a4
              e43c 0059  ld   $59
              e43d 0013  ld   $13
              e43e 0099  ld   $99
              e43f 00ce  ld   $ce
              e440 0099  ld   $99
              e441 005a  ld   $5a
              e442 005e  ld   $5e
              e443 00a5  ld   $a5
              e444 0085  ld   $85
              e445 00b9  ld   $b9
              e446 0066  ld   $66
              e447 0032  ld   $32
              e448 0090  ld   $90
              e449 00c4  ld   $c4
              e44a 0085  ld   $85
              e44b 00c9  ld   $c9
              e44c 006b  ld   $6b
              e44d 0095  ld   $95
              e44e 003a  ld   $3a
              e44f 00b8  ld   $b8
              e450 00dc  ld   $dc
              e451 00c3  ld   $c3
              e452 0002  ld   $02
              e453 0006  ld   $06
              e454 0095  ld   $95
              e455 005a  ld   $5a
              e456 00b8  ld   $b8
              e457 00d8  ld   $d8
              e458 00c3  ld   $c3
              e459 00f1  ld   $f1
              e45a 0005  ld   $05
              e45b 0063  ld   $63
              e45c 00ff  ld   $ff
              e45d 0075  ld   $75
              e45e 004d  ld   $4d
              e45f 0000  ld   $00
              e460 003e  ld   $3e
              e461 0016  ld   $16
              e462 0015  ld   $15
              e463 00a3  ld   $a3
              e464 0016  ld   $16
              e465 0040  ld   $40
              e466 00a4  ld   $a4
              e467 0016  ld   $16
              e468 0055  ld   $55
              e469 00a5  ld   $a5
              e46a 0085  ld   $85
              e46b 00b9  ld   $b9
              e46c 0066  ld   $66
              e46d 0011  ld   $11
              e46e 00a0  ld   $a0
              e46f 007a  ld   $7a
              e470 0085  ld   $85
              e471 00a1  ld   $a1
              e472 006f  ld   $6f
              e473 0016  ld   $16
              e474 0048  ld   $48
              e475 00a4  ld   $a4
              e476 0085  ld   $85
              e477 00b9  ld   $b9
              e478 0066  ld   $66
              e479 0011  ld   $11
              e47a 00b3  ld   $b3
              e47b 0074  ld   $74
              e47c 0085  ld   $85
              e47d 00a1  ld   $a1
              e47e 006f  ld   $6f
              e47f 0016  ld   $16
              e480 0054  ld   $54
              e481 00a4  ld   $a4
              e482 0085  ld   $85
              e483 00b9  ld   $b9
              e484 0066  ld   $66
              e485 0011  ld   $11
              e486 00a9  ld   $a9
              e487 0074  ld   $74
              e488 0085  ld   $85
              e489 00a1  ld   $a1
              e48a 006f  ld   $6f
              e48b 0032  ld   $32
              e48c 0024  ld   $24
              e48d 005c  ld   $5c
              e48e 004d  ld   $4d
              e48f 000d  ld   $0d
              e490 0026  ld   $26
              e491 0085  ld   $85
              e492 00a0  ld   $a0
              e493 006c  ld   $6c
              e494 0032  ld   $32
              e495 005c  ld   $5c
              e496 0028  ld   $28
              e497 00bd  ld   $bd
              e498 006b  ld   $6b
              e499 0006  ld   $06
              e49a 004d  ld   $4d
              e49b 000c  ld   $0c
              e49c 005c  ld   $5c
              e49d 0032  ld   $32
              e49e 0024  ld   $24
              e49f 005e  ld   $5e
              e4a0 004d  ld   $4d
              e4a1 003c  ld   $3c
              e4a2 0026  ld   $26
              e4a3 0085  ld   $85
              e4a4 00a0  ld   $a0
              e4a5 006c  ld   $6c
              e4a6 0032  ld   $32
              e4a7 005e  ld   $5e
              e4a8 0028  ld   $28
              e4a9 0032  ld   $32
              e4aa 0024  ld   $24
              e4ab 0060  ld   $60
              e4ac 004d  ld   $4d
              e4ad 003c  ld   $3c
              e4ae 0026  ld   $26
              e4af 0085  ld   $85
              e4b0 00a0  ld   $a0
              e4b1 006c  ld   $6c
              e4b2 0032  ld   $32
              e4b3 0060  ld   $60
              e4b4 0028  ld   $28
              e4b5 0011  ld   $11
              e4b6 00ff  ld   $ff
              e4b7 0073  ld   $73
              e4b8 002b  ld   $2b
              e4b9 0082  ld   $82
              e4ba 0021  ld   $21
              e4bb 005c  ld   $5c
              e4bc 00f0  ld   $f0
              e4bd 0082  ld   $82
              e4be 0011  ld   $11
              e4bf 00fe  ld   $fe
              e4c0 0073  ld   $73
              e4c1 002b  ld   $2b
              e4c2 0082  ld   $82
              e4c3 0021  ld   $21
              e4c4 005e  ld   $5e
              e4c5 00f0  ld   $f0
              e4c6 0082  ld   $82
              e4c7 0011  ld   $11
              e4c8 00fd  ld   $fd
              e4c9 0073  ld   $73
              e4ca 002b  ld   $2b
              e4cb 0082  ld   $82
              e4cc 0021  ld   $21
              e4cd 0060  ld   $60
              e4ce 00f0  ld   $f0
              e4cf 0082  ld   $82
              e4d0 00c7  ld   $c7
              e4d1 00fd  ld   $fd
              e4d2 0066  ld   $66
              e4d3 00aa  ld   $aa
              e4d4 0063  ld   $63
              e4d5 00ff  ld   $ff
              e4d6 0075  ld   $75
              e4d7 0085  ld   $85
              e4d8 00a1  ld   $a1
              e4d9 006a  ld   $6a
              e4da 0011  ld   $11
              e4db 00f6  ld   $f6
              e4dc 0001  ld   $01
              e4dd 0077  ld   $77
              e4de 0000  ld   $00
              e4df 0000  ld   $00
              e4e0 0011  ld   $11
              e4e1 0000  ld   $00
              e4e2 0002  ld   $02
              e4e3 002b  ld   $2b
              e4e4 0062  ld   $62
              e4e5 003f  ld   $3f
              e4e6 0040  ld   $40
              e4e7 00a0  ld   $a0
              e4e8 007f  ld   $7f
              e4e9 002b  ld   $2b
              e4ea 0064  ld   $64
              e4eb 00a7  ld   $a7
              e4ec 0005  ld   $05
              e4ed 0040  ld   $40
              e4ee 00bd  ld   $bd
              e4ef 00c2  ld   $c2
              e4f0 0006  ld   $06
              e4f1 004d  ld   $4d
              e4f2 00a8  ld   $a8
              e4f3 0062  ld   $62
              e4f4 0032  ld   $32
              e4f5 0024  ld   $24
              e4f6 0064  ld   $64
              e4f7 0021  ld   $21
              e4f8 0062  ld   $62
              e4f9 0085  ld   $85
              e4fa 00a0  ld   $a0
              e4fb fe00  bra  ac          ;+-----------------------------------+
              e4fc fcfd  bra  $e4fd       ;|                                   |
              e4fd 1418  ld   $18,y       ;| Trampoline for page $e400 lookups |
              e4fe e006  jmp  y,$06       ;|                                   |
              e4ff c218  st   [$18]       ;+-----------------------------------+
              e500 0065  ld   $65
              e501 0063  ld   $63
              e502 00ff  ld   $ff
              e503 0075  ld   $75
              e504 0016  ld   $16
              e505 0002  ld   $02
              e506 0087  ld   $87
              e507 0085  ld   $85
              e508 00a0  ld   $a0
              e509 0064  ld   $64
              e50a 0063  ld   $63
              e50b 00ff  ld   $ff
              e50c 0075  ld   $75
              e50d 0011  ld   $11
              e50e 0008  ld   $08
              e50f 0020  ld   $20
              e510 002f  ld   $2f
              e511 0000  ld   $00
              e512 0027  ld   $27
              e513 0016  ld   $16
              e514 0002  ld   $02
              e515 002c  ld   $2c
              e516 0016  ld   $16
              e517 00ef  ld   $ef
              e518 0011  ld   $11
              e519 0063  ld   $63
              e51a 00ff  ld   $ff
              e51b 0075  ld   $75
              e51c 004d  ld   $4d
              e51d 0002  ld   $02
              e51e 00c4  ld   $c4
              e51f 0085  ld   $85
              e520 00d7  ld   $d7
              e521 0006  ld   $06
              e522 0085  ld   $85
              e523 00a6  ld   $a6
              e524 0006  ld   $06
              e525 0063  ld   $63
              e526 00ff  ld   $ff
              e527 0075  ld   $75
              e528 004d  ld   $4d
              e529 0002  ld   $02
              e52a 00c4  ld   $c4
              e52b 0085  ld   $85
              e52c 00d7  ld   $d7
              e52d 0006  ld   $06
              e52e 0085  ld   $85
              e52f 002d  ld   $2d
              e530 0006  ld   $06
              e531 0085  ld   $85
              e532 00a0  ld   $a0
              e533 0008  ld   $08
              e534 0008  ld   $08
              e535 00a0  ld   $a0
              e536 005d  ld   $5d
              e537 0016  ld   $16
              e538 00ef  ld   $ef
              e539 0011  ld   $11
              e53a 0063  ld   $63
              e53b 00ff  ld   $ff
              e53c 0075  ld   $75
              e53d 00e1  ld   $e1
              e53e 00a4  ld   $a4
              e53f 0038  ld   $38
              e540 003c  ld   $3c
              e541 0085  ld   $85
              e542 00b9  ld   $b9
              e543 0066  ld   $66
              e544 0059  ld   $59
              e545 0020  ld   $20
              e546 0085  ld   $85
              e547 00e4  ld   $e4
              e548 0062  ld   $62
              e549 00a7  ld   $a7
              e54a 005c  ld   $5c
              e54b 003c  ld   $3c
              e54c 00bd  ld   $bd
              e54d 00b8  ld   $b8
              e54e 0008  ld   $08
              e54f 0063  ld   $63
              e550 00ff  ld   $ff
              e551 004d  ld   $4d
              e552 005c  ld   $5c
              e553 003c  ld   $3c
              e554 004d  ld   $4d
              e555 0002  ld   $02
              e556 00c4  ld   $c4
              e557 0085  ld   $85
              e558 00d7  ld   $d7
              e559 0006  ld   $06
              e55a 0042  ld   $42
              e55b 0005  ld   $05
              e55c 0040  ld   $40
              e55d 0040  ld   $40
              e55e 0063  ld   $63
              e55f 00ff  ld   $ff
              e560 0075  ld   $75
              e561 00e1  ld   $e1
              e562 00a4  ld   $a4
              e563 0038  ld   $38
              e564 003c  ld   $3c
              e565 0085  ld   $85
              e566 00b9  ld   $b9
              e567 0066  ld   $66
              e568 0059  ld   $59
              e569 0020  ld   $20
              e56a 0085  ld   $85
              e56b 00e4  ld   $e4
              e56c 0062  ld   $62
              e56d 00a7  ld   $a7
              e56e 0012  ld   $12
              e56f 003c  ld   $3c
              e570 00bd  ld   $bd
              e571 00dc  ld   $dc
              e572 0008  ld   $08
              e573 0063  ld   $63
              e574 00ff  ld   $ff
              e575 004d  ld   $4d
              e576 0012  ld   $12
              e577 003c  ld   $3c
              e578 004d  ld   $4d
              e579 0002  ld   $02
              e57a 00c4  ld   $c4
              e57b 0085  ld   $85
              e57c 00d7  ld   $d7
              e57d 0006  ld   $06
              e57e 0044  ld   $44
              e57f 0005  ld   $05
              e580 0040  ld   $40
              e581 0040  ld   $40
              e582 0063  ld   $63
              e583 00ff  ld   $ff
              e584 0075  ld   $75
              e585 00e1  ld   $e1
              e586 00a4  ld   $a4
              e587 0038  ld   $38
              e588 003c  ld   $3c
              e589 0085  ld   $85
              e58a 00b9  ld   $b9
              e58b 0066  ld   $66
              e58c 0059  ld   $59
              e58d 0020  ld   $20
              e58e 0085  ld   $85
              e58f 00e4  ld   $e4
              e590 0062  ld   $62
              e591 0085  ld   $85
              e592 00a0  ld   $a0
              e593 0009  ld   $09
              e594 0009  ld   $09
              e595 00a0  ld   $a0
              e596 0060  ld   $60
              e597 0042  ld   $42
              e598 0008  ld   $08
              e599 0038  ld   $38
              e59a 0038  ld   $38
              e59b 0021  ld   $21
              e59c 0038  ld   $38
              e59d 00e6  ld   $e6
              e59e 0046  ld   $46
              e59f 00c3  ld   $c3
              e5a0 00ae  ld   $ae
              e5a1 0009  ld   $09
              e5a2 004d  ld   $4d
              e5a3 0046  ld   $46
              e5a4 0038  ld   $38
              e5a5 0063  ld   $63
              e5a6 00ff  ld   $ff
              e5a7 004d  ld   $4d
              e5a8 0002  ld   $02
              e5a9 00c4  ld   $c4
              e5aa 0085  ld   $85
              e5ab 00d7  ld   $d7
              e5ac 0006  ld   $06
              e5ad 0042  ld   $42
              e5ae 0001  ld   $01
              e5af 0040  ld   $40
              e5b0 0040  ld   $40
              e5b1 00a7  ld   $a7
              e5b2 0012  ld   $12
              e5b3 003c  ld   $3c
              e5b4 006b  ld   $6b
              e5b5 00e8  ld   $e8
              e5b6 0021  ld   $21
              e5b7 0040  ld   $40
              e5b8 00e6  ld   $e6
              e5b9 0004  ld   $04
              e5ba 00d9  ld   $d9
              e5bb 0018  ld   $18
              e5bc 00f8  ld   $f8
              e5bd 00e8  ld   $e8
              e5be 00bb  ld   $bb
              e5bf 00cb  ld   $cb
              e5c0 0009  ld   $09
              e5c1 004d  ld   $4d
              e5c2 0004  ld   $04
              e5c3 0040  ld   $40
              e5c4 00a7  ld   $a7
              e5c5 005c  ld   $5c
              e5c6 003c  ld   $3c
              e5c7 006b  ld   $6b
              e5c8 00e8  ld   $e8
              e5c9 0021  ld   $21
              e5ca 0040  ld   $40
              e5cb 00e6  ld   $e6
              e5cc 0009  ld   $09
              e5cd 00d9  ld   $d9
              e5ce 0018  ld   $18
              e5cf 00f8  ld   $f8
              e5d0 00e8  ld   $e8
              e5d1 00bb  ld   $bb
              e5d2 00de  ld   $de
              e5d3 0009  ld   $09
              e5d4 004d  ld   $4d
              e5d5 0009  ld   $09
              e5d6 0040  ld   $40
              e5d7 0063  ld   $63
              e5d8 00ff  ld   $ff
              e5d9 0075  ld   $75
              e5da 00e1  ld   $e1
              e5db 00a4  ld   $a4
              e5dc 0038  ld   $38
              e5dd 003c  ld   $3c
              e5de 0085  ld   $85
              e5df 00b9  ld   $b9
              e5e0 0066  ld   $66
              e5e1 0059  ld   $59
              e5e2 0020  ld   $20
              e5e3 0085  ld   $85
              e5e4 00e4  ld   $e4
              e5e5 0062  ld   $62
              e5e6 0044  ld   $44
              e5e7 0008  ld   $08
              e5e8 0038  ld   $38
              e5e9 0038  ld   $38
              e5ea 0021  ld   $21
              e5eb 0038  ld   $38
              e5ec 00e6  ld   $e6
              e5ed 0026  ld   $26
              e5ee 00c5  ld   $c5
              e5ef 00a0  ld   $a0
              e5f0 000a  ld   $0a
              e5f1 004d  ld   $4d
              e5f2 0026  ld   $26
              e5f3 0038  ld   $38
              e5f4 0085  ld   $85
              e5f5 00a0  ld   $a0
              e5f6 000a  ld   $0a
              e5f7 000a  ld   $0a
              e5f8 00a0  ld   $a0
              e5f9 0034  ld   $34
              e5fa 0063  ld   $63
              e5fb fe00  bra  ac          ;+-----------------------------------+
              e5fc fcfd  bra  $e5fd       ;|                                   |
              e5fd 1418  ld   $18,y       ;| Trampoline for page $e500 lookups |
              e5fe e006  jmp  y,$06       ;|                                   |
              e5ff c218  st   [$18]       ;+-----------------------------------+
              e600 00ff  ld   $ff
              e601 004d  ld   $4d
              e602 0002  ld   $02
              e603 00c4  ld   $c4
              e604 0085  ld   $85
              e605 00d7  ld   $d7
              e606 0006  ld   $06
              e607 0044  ld   $44
              e608 0001  ld   $01
              e609 0040  ld   $40
              e60a 0040  ld   $40
              e60b 00a7  ld   $a7
              e60c 0012  ld   $12
              e60d 003c  ld   $3c
              e60e 006b  ld   $6b
              e60f 00e8  ld   $e8
              e610 0021  ld   $21
              e611 0040  ld   $40
              e612 00d7  ld   $d7
              e613 0018  ld   $18
              e614 00f8  ld   $f8
              e615 00e8  ld   $e8
              e616 00bb  ld   $bb
              e617 00bb  ld   $bb
              e618 000a  ld   $0a
              e619 004d  ld   $4d
              e61a 0000  ld   $00
              e61b 0040  ld   $40
              e61c 00a7  ld   $a7
              e61d 005c  ld   $5c
              e61e 003c  ld   $3c
              e61f 006b  ld   $6b
              e620 00e8  ld   $e8
              e621 0021  ld   $21
              e622 0040  ld   $40
              e623 00e6  ld   $e6
              e624 0005  ld   $05
              e625 00d7  ld   $d7
              e626 0018  ld   $18
              e627 00f8  ld   $f8
              e628 00e8  ld   $e8
              e629 00bb  ld   $bb
              e62a 00ce  ld   $ce
              e62b 000a  ld   $0a
              e62c 004d  ld   $4d
              e62d 0005  ld   $05
              e62e 0040  ld   $40
              e62f 0063  ld   $63
              e630 00ff  ld   $ff
              e631 00b4  ld   $b4
              e632 0080  ld   $80
              e633 0061  ld   $61
              e634 00f9  ld   $f9
              e635 0006  ld   $06
              e636 0075  ld   $75
              e637 0085  ld   $85
              e638 00a0  ld   $a0
              e639 0064  ld   $64
              e63a 0063  ld   $63
              e63b 00ff  ld   $ff
              e63c 0062  ld   $62
              e63d 00a5  ld   $a5
              e63e 0026  ld   $26
              e63f 004d  ld   $4d
              e640 0002  ld   $02
              e641 00a4  ld   $a4
              e642 00c7  ld   $c7
              e643 00fb  ld   $fb
              e644 0066  ld   $66
              e645 00aa  ld   $aa
              e646 00ff  ld   $ff
              e647 002f  ld   $2f
              e648 00d6  ld   $d6
              e649 006e  ld   $6e
              e64a 00a4  ld   $a4
              e64b 0082  ld   $82
              e64c 00ab  ld   $ab
              e64d 0062  ld   $62
              e64e 00ff  ld   $ff
              e64f 0011  ld   $11
              e650 00be  ld   $be
              e651 0065  ld   $65
              e652 0025  ld   $25
              e653 0075  ld   $75
              e654 0011  ld   $11
              e655 00c6  ld   $c6
              e656 0065  ld   $65
              e657 007d  ld   $7d
              e658 0084  ld   $84
              e659 00ff  ld   $ff
              e65a 001a  ld   $1a
              e65b 002d  ld   $2d
              e65c 0035  ld   $35
              e65d 0072  ld   $72
              e65e 00c8  ld   $c8
              e65f 0075  ld   $75
              e660 0085  ld   $85
              e661 00cd  ld   $cd
              e662 0068  ld   $68
              e663 0063  ld   $63
              e664 00ff  ld   $ff
              e665 0062  ld   $62
              e666 00cc  ld   $cc
              e667 0033  ld   $33
              e668 0011  ld   $11
              e669 00b9  ld   $b9
              e66a 0074  ld   $74
              e66b 002f  ld   $2f
              e66c 0092  ld   $92
              e66d 0047  ld   $47
              e66e 00e3  ld   $e3
              e66f 0008  ld   $08
              e670 002f  ld   $2f
              e671 009a  ld   $9a
              e672 0047  ld   $47
              e673 00ff  ld   $ff
              e674 0011  ld   $11
              e675 00b9  ld   $b9
              e676 0074  ld   $74
              e677 002f  ld   $2f
              e678 0092  ld   $92
              e679 0045  ld   $45
              e67a 00e3  ld   $e3
              e67b 0008  ld   $08
              e67c 002f  ld   $2f
              e67d 009a  ld   $9a
              e67e 0045  ld   $45
              e67f 00ff  ld   $ff
              e680 0075  ld   $75
              e681 005e  ld   $5e
              e682 0092  ld   $92
              e683 0085  ld   $85
              e684 00ea  ld   $ea
              e685 0063  ld   $63
              e686 001a  ld   $1a
              e687 0092  ld   $92
              e688 0085  ld   $85
              e689 00cc  ld   $cc
              e68a 0069  ld   $69
              e68b 0063  ld   $63
              e68c 00ff  ld   $ff
              e68d 0075  ld   $75
              e68e 00c7  ld   $c7
              e68f 0002  ld   $02
              e690 0069  ld   $69
              e691 00aa  ld   $aa
              e692 0085  ld   $85
              e693 00b7  ld   $b7
              e694 0070  ld   $70
              e695 00c7  ld   $c7
              e696 00fd  ld   $fd
              e697 0066  ld   $66
              e698 00aa  ld   $aa
              e699 0063  ld   $63
              e69a 00ff  ld   $ff
              e69b 0063  ld   $63
              e69c 00a4  ld   $a4
              e69d 005b  ld   $5b
              e69e 0075  ld   $75
              e69f 0085  ld   $85
              e6a0 00a5  ld   $a5
              e6a1 0062  ld   $62
              e6a2 0011  ld   $11
              e6a3 0003  ld   $03
              e6a4 000b  ld   $0b
              e6a5 002b  ld   $2b
              e6a6 0022  ld   $22
              e6a7 0065  ld   $65
              e6a8 0025  ld   $25
              e6a9 00a2  ld   $a2
              e6aa 0063  ld   $63
              e6ab 00ff  ld   $ff
              e6ac 0011  ld   $11
              e6ad 00a0  ld   $a0
              e6ae 0077  ld   $77
              e6af 002b  ld   $2b
              e6b0 0098  ld   $98
              e6b1 0046  ld   $46
              e6b2 0084  ld   $84
              e6b3 002b  ld   $2b
              e6b4 009a  ld   $9a
              e6b5 0023  ld   $23
              e6b6 0098  ld   $98
              e6b7 00d1  ld   $d1
              e6b8 009a  ld   $9a
              e6b9 0035  ld   $35
              e6ba 0072  ld   $72
              e6bb 00b9  ld   $b9
              e6bc 00ff  ld   $ff
              e6bd 0075  ld   $75
              e6be 0011  ld   $11
              e6bf 00a1  ld   $a1
              e6c0 0077  ld   $77
              e6c1 002b  ld   $2b
              e6c2 0092  ld   $92
              e6c3 0046  ld   $46
              e6c4 0084  ld   $84
              e6c5 002b  ld   $2b
              e6c6 009a  ld   $9a
              e6c7 0021  ld   $21
              e6c8 0092  ld   $92
              e6c9 0085  ld   $85
              e6ca 00a0  ld   $a0
              e6cb 0067  ld   $67
              e6cc 00f3  ld   $f3
              e6cd 009a  ld   $9a
              e6ce 0063  ld   $63
              e6cf 00ff  ld   $ff
              e6d0 0075  ld   $75
              e6d1 002b  ld   $2b
              e6d2 0082  ld   $82
              e6d3 0085  ld   $85
              e6d4 00ea  ld   $ea
              e6d5 0063  ld   $63
              e6d6 0093  ld   $93
              e6d7 0082  ld   $82
              e6d8 0023  ld   $23
              e6d9 0082  ld   $82
              e6da 0035  ld   $35
              e6db 003f  ld   $3f
              e6dc 00e6  ld   $e6
              e6dd 0085  ld   $85
              e6de 00cc  ld   $cc
              e6df 0069  ld   $69
              e6e0 0090  ld   $90
              e6e1 00dc  ld   $dc
              e6e2 0063  ld   $63
              e6e3 00ff  ld   $ff
              e6e4 00c7  ld   $c7
              e6e5 0010  ld   $10
              e6e6 006f  ld   $6f
              e6e7 00aa  ld   $aa
              e6e8 00bd  ld   $bd
              e6e9 009f  ld   $9f
              e6ea 0068  ld   $68
              e6eb 0011  ld   $11
              e6ec 00e1  ld   $e1
              e6ed 0004  ld   $04
              e6ee 002b  ld   $2b
              e6ef 0022  ld   $22
              e6f0 0032  ld   $32
              e6f1 0024  ld   $24
              e6f2 00a2  ld   $a2
              e6f3 0021  ld   $21
              e6f4 00a4  ld   $a4
              e6f5 002f  ld   $2f
              e6f6 0028  ld   $28
              e6f7 0059  ld   $59
              e6f8 00ff  ld   $ff
              e6f9 0064  ld   $64
              e6fa 00a0  ld   $a0
              e6fb fe00  bra  ac          ;+-----------------------------------+
              e6fc fcfd  bra  $e6fd       ;|                                   |
              e6fd 1418  ld   $18,y       ;| Trampoline for page $e600 lookups |
              e6fe e006  jmp  y,$06       ;|                                   |
              e6ff c218  st   [$18]       ;+-----------------------------------+
              e700 005f  ld   $5f
              e701 0075  ld   $75
              e702 0085  ld   $85
              e703 00a3  ld   $a3
              e704 006d  ld   $6d
              e705 0063  ld   $63
              e706 001a  ld   $1a
              e707 0087  ld   $87
              e708 002f  ld   $2f
              e709 0000  ld   $00
              e70a 0032  ld   $32
              e70b 002f  ld   $2f
              e70c 0001  ld   $01
              e70d 0032  ld   $32
              e70e 002f  ld   $2f
              e70f 0002  ld   $02
              e710 0032  ld   $32
              e711 002f  ld   $2f
              e712 0003  ld   $03
              e713 0032  ld   $32
              e714 00ff  ld   $ff
              e715 00c7  ld   $c7
              e716 0094  ld   $94
              e717 0028  ld   $28
              e718 0092  ld   $92
              e719 0016  ld   $16
              e71a 0003  ld   $03
              e71b 0026  ld   $26
              e71c 0021  ld   $21
              e71d 0028  ld   $28
              e71e 002f  ld   $2f
              e71f 0094  ld   $94
              e720 0057  ld   $57
              e721 001c  ld   $1c
              e722 0028  ld   $28
              e723 0028  ld   $28
              e724 0004  ld   $04
              e725 0075  ld   $75
              e726 0085  ld   $85
              e727 00a7  ld   $a7
              e728 0065  ld   $65
              e729 0063  ld   $63
              e72a 00ff  ld   $ff
              e72b 0085  ld   $85
              e72c 00cc  ld   $cc
              e72d 0062  ld   $62
              e72e 0059  ld   $59
              e72f 007f  ld   $7f
              e730 002b  ld   $2b
              e731 0092  ld   $92
              e732 0085  ld   $85
              e733 00a0  ld   $a0
              e734 0069  ld   $69
              e735 0085  ld   $85
              e736 00d8  ld   $d8
              e737 0062  ld   $62
              e738 0085  ld   $85
              e739 00a6  ld   $a6
              e73a 0071  ld   $71
              e73b 0035  ld   $35
              e73c 003f  ld   $3f
              e73d 00c8  ld   $c8
              e73e 0085  ld   $85
              e73f 00ba  ld   $ba
              e740 006f  ld   $6f
              e741 002b  ld   $2b
              e742 0082  ld   $82
              e743 00e6  ld   $e6
              e744 000a  ld   $0a
              e745 0035  ld   $35
              e746 0050  ld   $50
              e747 00eb  ld   $eb
              e748 002b  ld   $2b
              e749 0082  ld   $82
              e74a 0093  ld   $93
              e74b 0084  ld   $84
              e74c 0090  ld   $90
              e74d 00e0  ld   $e0
              e74e 00c7  ld   $c7
              e74f 0030  ld   $30
              e750 0072  ld   $72
              e751 0084  ld   $84
              e752 00d1  ld   $d1
              e753 0086  ld   $86
              e754 00c7  ld   $c7
              e755 0030  ld   $30
              e756 0072  ld   $72
              e757 0082  ld   $82
              e758 00d1  ld   $d1
              e759 0086  ld   $86
              e75a 0093  ld   $93
              e75b 0086  ld   $86
              e75c 0016  ld   $16
              e75d 0030  ld   $30
              e75e 0084  ld   $84
              e75f 00ff  ld   $ff
              e760 0065  ld   $65
              e761 00a0  ld   $a0
              e762 005f  ld   $5f
              e763 002b  ld   $2b
              e764 001a  ld   $1a
              e765 004d  ld   $4d
              e766 00ad  ld   $ad
              e767 0022  ld   $22
              e768 00b4  ld   $b4
              e769 00e2  ld   $e2
              e76a 001c  ld   $1c
              e76b 00a4  ld   $a4
              e76c 00a4  ld   $a4
              e76d 0004  ld   $04
              e76e 00a7  ld   $a7
              e76f 009c  ld   $9c
              e770 00a4  ld   $a4
              e771 0035  ld   $35
              e772 0056  ld   $56
              e773 00bb  ld   $bb
              e774 00c7  ld   $c7
              e775 0008  ld   $08
              e776 006f  ld   $6f
              e777 00aa  ld   $aa
              e778 0035  ld   $35
              e779 0072  ld   $72
              e77a 00bb  ld   $bb
              e77b 0075  ld   $75
              e77c 0085  ld   $85
              e77d 00be  ld   $be
              e77e 006d  ld   $6d
              e77f 0063  ld   $63
              e780 00ff  ld   $ff
              e781 00ff  ld   $ff
              e782 00df  ld   $df
              e783 00fe  ld   $fe
              e784 0021  ld   $21
              e785 002a  ld   $2a
              e786 00ec  ld   $ec
              e787 0000  ld   $00
              e788 0085  ld   $85
              e789 0000  ld   $00
              e78a 0000  ld   $00
              e78b 0090  ld   $90
              e78c 00cc  ld   $cc
              e78d 00ff  ld   $ff
              e78e 0090  ld   $90
              e78f 00cc  ld   $cc
              e790 00ff  ld   $ff
              e791 00ee  ld   $ee
              e792 0000  ld   $00
              e793 002b  ld   $2b
              e794 002a  ld   $2a
              e795 00df  ld   $df
              e796 0002  ld   $02
              e797 0063  ld   $63
              e798 0016  ld   $16
              e799 00ff  ld   $ff
              e79a 000e  ld   $0e
              e79b 0011  ld   $11
              e79c 0000  ld   $00
              e79d 0004  ld   $04
              e79e 007f  ld   $7f
              e79f 0000  ld   $00
              e7a0 0075  ld   $75
              e7a1 004d  ld   $4d
              e7a2 0000  ld   $00
              e7a3 0084  ld   $84
              e7a4 0011  ld   $11
              e7a5 00f4  ld   $f4
              e7a6 0073  ld   $73
              e7a7 002b  ld   $2b
              e7a8 0086  ld   $86
              e7a9 0011  ld   $11
              e7aa 00ff  ld   $ff
              e7ab 0073  ld   $73
              e7ac 002b  ld   $2b
              e7ad 0088  ld   $88
              e7ae 00ad  ld   $ad
              e7af 0085  ld   $85
              e7b0 00e0  ld   $e0
              e7b1 0064  ld   $64
              e7b2 0014  ld   $14
              e7b3 0088  ld   $88
              e7b4 005b  ld   $5b
              e7b5 0088  ld   $88
              e7b6 0085  ld   $85
              e7b7 00e0  ld   $e0
              e7b8 0064  ld   $64
              e7b9 0014  ld   $14
              e7ba 0088  ld   $88
              e7bb 005b  ld   $5b
              e7bc 0088  ld   $88
              e7bd 0085  ld   $85
              e7be 00e0  ld   $e0
              e7bf 0064  ld   $64
              e7c0 0063  ld   $63
              e7c1 00ff  ld   $ff
              e7c2 0066  ld   $66
              e7c3 00a0  ld   $a0
              e7c4 005f  ld   $5f
              e7c5 0032  ld   $32
              e7c6 00a4  ld   $a4
              e7c7 0098  ld   $98
              e7c8 0085  ld   $85
              e7c9 00cc  ld   $cc
              e7ca 0062  ld   $62
              e7cb 0011  ld   $11
              e7cc 00a0  ld   $a0
              e7cd 0077  ld   $77
              e7ce 0099  ld   $99
              e7cf 0094  ld   $94
              e7d0 0085  ld   $85
              e7d1 00d6  ld   $d6
              e7d2 0063  ld   $63
              e7d3 0085  ld   $85
              e7d4 00d8  ld   $d8
              e7d5 0062  ld   $62
              e7d6 00a9  ld   $a9
              e7d7 009a  ld   $9a
              e7d8 009c  ld   $9c
              e7d9 009a  ld   $9a
              e7da 0059  ld   $59
              e7db 0000  ld   $00
              e7dc 0063  ld   $63
              e7dd 00ff  ld   $ff
              e7de 00c7  ld   $c7
              e7df 0010  ld   $10
              e7e0 006f  ld   $6f
              e7e1 00aa  ld   $aa
              e7e2 00bd  ld   $bd
              e7e3 009e  ld   $9e
              e7e4 006e  ld   $6e
              e7e5 00a7  ld   $a7
              e7e6 009a  ld   $9a
              e7e7 00a4  ld   $a4
              e7e8 0035  ld   $35
              e7e9 0056  ld   $56
              e7ea 00c7  ld   $c7
              e7eb 0016  ld   $16
              e7ec 0000  ld   $00
              e7ed 00a4  ld   $a4
              e7ee 00a7  ld   $a7
              e7ef 0070  ld   $70
              e7f0 00a5  ld   $a5
              e7f1 0035  ld   $35
              e7f2 0050  ld   $50
              e7f3 00d5  ld   $d5
              e7f4 0016  ld   $16
              e7f5 0070  ld   $70
              e7f6 00a5  ld   $a5
              e7f7 00c7  ld   $c7
              e7f8 0004  ld   $04
              e7f9 0069  ld   $69
              e7fa 00aa  ld   $aa
              e7fb fe00  bra  ac          ;+-----------------------------------+
              e7fc fcfd  bra  $e7fd       ;|                                   |
              e7fd 1418  ld   $18,y       ;| Trampoline for page $e700 lookups |
              e7fe e006  jmp  y,$06       ;|                                   |
              e7ff c218  st   [$18]       ;+-----------------------------------+
              e800 00ff  ld   $ff
              e801 00c7  ld   $c7
              e802 00fb  ld   $fb
              e803 0066  ld   $66
              e804 00aa  ld   $aa
              e805 00ff  ld   $ff
              e806 0075  ld   $75
              e807 0011  ld   $11
              e808 0003  ld   $03
              e809 000b  ld   $0b
              e80a 002b  ld   $2b
              e80b 0022  ld   $22
              e80c 0065  ld   $65
              e80d 0025  ld   $25
              e80e 00a2  ld   $a2
              e80f 0011  ld   $11
              e810 0000  ld   $00
              e811 0001  ld   $01
              e812 0067  ld   $67
              e813 0027  ld   $27
              e814 004d  ld   $4d
              e815 0006  ld   $06
              e816 009e  ld   $9e
              e817 0016  ld   $16
              e818 00a0  ld   $a0
              e819 0024  ld   $24
              e81a 0016  ld   $16
              e81b 0000  ld   $00
              e81c 0026  ld   $26
              e81d 00b4  ld   $b4
              e81e 00f3  ld   $f3
              e81f 0093  ld   $93
              e820 0027  ld   $27
              e821 009e  ld   $9e
              e822 00eb  ld   $eb
              e823 009e  ld   $9e
              e824 0085  ld   $85
              e825 00ea  ld   $ea
              e826 0063  ld   $63
              e827 0063  ld   $63
              e828 00ff  ld   $ff
              e829 0067  ld   $67
              e82a 00a0  ld   $a0
              e82b 005f  ld   $5f
              e82c 002b  ld   $2b
              e82d 0092  ld   $92
              e82e 004d  ld   $4d
              e82f 0000  ld   $00
              e830 0096  ld   $96
              e831 005b  ld   $5b
              e832 0092  ld   $92
              e833 00e6  ld   $e6
              e834 002d  ld   $2d
              e835 0035  ld   $35
              e836 0072  ld   $72
              e837 00ac  ld   $ac
              e838 0093  ld   $93
              e839 0092  ld   $92
              e83a 005b  ld   $5b
              e83b 0092  ld   $92
              e83c 00e6  ld   $e6
              e83d 0030  ld   $30
              e83e 0035  ld   $35
              e83f 0050  ld   $50
              e840 00c6  ld   $c6
              e841 002b  ld   $2b
              e842 0094  ld   $94
              e843 00e6  ld   $e6
              e844 0009  ld   $09
              e845 0035  ld   $35
              e846 004d  ld   $4d
              e847 00c6  ld   $c6
              e848 0021  ld   $21
              e849 0096  ld   $96
              e84a 00b1  ld   $b1
              e84b 0055  ld   $55
              e84c 0099  ld   $99
              e84d 0094  ld   $94
              e84e 002b  ld   $2b
              e84f 0096  ld   $96
              e850 0093  ld   $93
              e851 0092  ld   $92
              e852 0090  ld   $90
              e853 00ac  ld   $ac
              e854 002f  ld   $2f
              e855 0096  ld   $96
              e856 0067  ld   $67
              e857 0021  ld   $21
              e858 0096  ld   $96
              e859 00ff  ld   $ff
              e85a 0075  ld   $75
              e85b 0011  ld   $11
              e85c 00e5  ld   $e5
              e85d 0073  ld   $73
              e85e 002b  ld   $2b
              e85f 0086  ld   $86
              e860 002b  ld   $2b
              e861 0092  ld   $92
              e862 0011  ld   $11
              e863 00d9  ld   $d9
              e864 0073  ld   $73
              e865 002b  ld   $2b
              e866 0088  ld   $88
              e867 003b  ld   $3b
              e868 0092  ld   $92
              e869 0035  ld   $35
              e86a 0072  ld   $72
              e86b 00e7  ld   $e7
              e86c 0021  ld   $21
              e86d 0084  ld   $84
              e86e 0035  ld   $35
              e86f 003f  ld   $3f
              e870 00e5  ld   $e5
              e871 00cf  ld   $cf
              e872 0084  ld   $84
              e873 0063  ld   $63
              e874 00ff  ld   $ff
              e875 00b8  ld   $b8
              e876 0082  ld   $82
              e877 0035  ld   $35
              e878 003f  ld   $3f
              e879 00f2  ld   $f2
              e87a 001c  ld   $1c
              e87b 0092  ld   $92
              e87c 0092  ld   $92
              e87d 0002  ld   $02
              e87e 0090  ld   $90
              e87f 00d9  ld   $d9
              e880 0021  ld   $21
              e881 0092  ld   $92
              e882 00b8  ld   $b8
              e883 0086  ld   $86
              e884 0099  ld   $99
              e885 0088  ld   $88
              e886 00f6  ld   $f6
              e887 00cf  ld   $cf
              e888 0018  ld   $18
              e889 0063  ld   $63
              e88a 00ff  ld   $ff
              e88b 0068  ld   $68
              e88c 00a1  ld   $a1
              e88d 005e  ld   $5e
              e88e 0032  ld   $32
              e88f 0024  ld   $24
              e890 00a2  ld   $a2
              e891 0021  ld   $21
              e892 00a4  ld   $a4
              e893 002f  ld   $2f
              e894 0028  ld   $28
              e895 0059  ld   $59
              e896 00ff  ld   $ff
              e897 0075  ld   $75
              e898 0011  ld   $11
              e899 0003  ld   $03
              e89a 000b  ld   $0b
              e89b 002b  ld   $2b
              e89c 0022  ld   $22
              e89d 0065  ld   $65
              e89e 0025  ld   $25
              e89f 00a2  ld   $a2
              e8a0 0011  ld   $11
              e8a1 0000  ld   $00
              e8a2 0001  ld   $01
              e8a3 0067  ld   $67
              e8a4 0027  ld   $27
              e8a5 004d  ld   $4d
              e8a6 0008  ld   $08
              e8a7 009e  ld   $9e
              e8a8 0016  ld   $16
              e8a9 00a0  ld   $a0
              e8aa 0024  ld   $24
              e8ab 0016  ld   $16
              e8ac 0000  ld   $00
              e8ad 0026  ld   $26
              e8ae 00b4  ld   $b4
              e8af 00f3  ld   $f3
              e8b0 0093  ld   $93
              e8b1 0027  ld   $27
              e8b2 009e  ld   $9e
              e8b3 00b9  ld   $b9
              e8b4 009e  ld   $9e
              e8b5 0085  ld   $85
              e8b6 00ea  ld   $ea
              e8b7 0063  ld   $63
              e8b8 0063  ld   $63
              e8b9 00ff  ld   $ff
              e8ba 0011  ld   $11
              e8bb 00fd  ld   $fd
              e8bc 0073  ld   $73
              e8bd 002b  ld   $2b
              e8be 008a  ld   $8a
              e8bf 00ad  ld   $ad
              e8c0 00e3  ld   $e3
              e8c1 0001  ld   $01
              e8c2 00f0  ld   $f0
              e8c3 008a  ld   $8a
              e8c4 008c  ld   $8c
              e8c5 003c  ld   $3c
              e8c6 0035  ld   $35
              e8c7 0072  ld   $72
              e8c8 00fc  ld   $fc
              e8c9 0059  ld   $59
              e8ca 0000  ld   $00
              e8cb 00d1  ld   $d1
              e8cc 008a  ld   $8a
              e8cd 005b  ld   $5b
              e8ce 008a  ld   $8a
              e8cf 00e3  ld   $e3
              e8d0 0001  ld   $01
              e8d1 00f0  ld   $f0
              e8d2 008a  ld   $8a
              e8d3 008c  ld   $8c
              e8d4 003c  ld   $3c
              e8d5 0035  ld   $35
              e8d6 0072  ld   $72
              e8d7 00fc  ld   $fc
              e8d8 0059  ld   $59
              e8d9 0000  ld   $00
              e8da 00d1  ld   $d1
              e8db 008a  ld   $8a
              e8dc 005b  ld   $5b
              e8dd 008a  ld   $8a
              e8de 00e3  ld   $e3
              e8df 0001  ld   $01
              e8e0 00f0  ld   $f0
              e8e1 008a  ld   $8a
              e8e2 00e6  ld   $e6
              e8e3 0018  ld   $18
              e8e4 0035  ld   $35
              e8e5 0050  ld   $50
              e8e6 00fc  ld   $fc
              e8e7 0059  ld   $59
              e8e8 0000  ld   $00
              e8e9 00f0  ld   $f0
              e8ea 008a  ld   $8a
              e8eb 00ff  ld   $ff
              e8ec 0069  ld   $69
              e8ed 00a0  ld   $a0
              e8ee 005f  ld   $5f
              e8ef 0075  ld   $75
              e8f0 008c  ld   $8c
              e8f1 007f  ld   $7f
              e8f2 0035  ld   $35
              e8f3 0072  ld   $72
              e8f4 00ae  ld   $ae
              e8f5 00c7  ld   $c7
              e8f6 0020  ld   $20
              e8f7 006f  ld   $6f
              e8f8 002d  ld   $2d
              e8f9 0035  ld   $35
              e8fa 0072  ld   $72
              e8fb fe00  bra  ac          ;+-----------------------------------+
              e8fc fcfd  bra  $e8fd       ;|                                   |
              e8fd 1418  ld   $18,y       ;| Trampoline for page $e800 lookups |
              e8fe e006  jmp  y,$06       ;|                                   |
              e8ff c218  st   [$18]       ;+-----------------------------------+
              e900 00ae  ld   $ae
              e901 004d  ld   $4d
              e902 0020  ld   $20
              e903 0092  ld   $92
              e904 0032  ld   $32
              e905 00a4  ld   $a4
              e906 009a  ld   $9a
              e907 0021  ld   $21
              e908 0092  ld   $92
              e909 0085  ld   $85
              e90a 00e4  ld   $e4
              e90b 0062  ld   $62
              e90c 0063  ld   $63
              e90d 00ff  ld   $ff
              e90e 00a7  ld   $a7
              e90f 00ff  ld   $ff
              e910 0082  ld   $82
              e911 0035  ld   $35
              e912 003f  ld   $3f
              e913 00c9  ld   $c9
              e914 0011  ld   $11
              e915 0008  ld   $08
              e916 0020  ld   $20
              e917 0018  ld   $18
              e918 0018  ld   $18
              e919 002f  ld   $2f
              e91a 0000  ld   $00
              e91b 0027  ld   $27
              e91c 0016  ld   $16
              e91d 0002  ld   $02
              e91e 002c  ld   $2c
              e91f 00ff  ld   $ff
              e920 002b  ld   $2b
              e921 0092  ld   $92
              e922 00c7  ld   $c7
              e923 0084  ld   $84
              e924 0089  ld   $89
              e925 0020  ld   $20
              e926 0035  ld   $35
              e927 0072  ld   $72
              e928 00fc  ld   $fc
              e929 00c7  ld   $c7
              e92a 0010  ld   $10
              e92b 006f  ld   $6f
              e92c 00aa  ld   $aa
              e92d 00bd  ld   $bd
              e92e 00b2  ld   $b2
              e92f 0064  ld   $64
              e930 00c7  ld   $c7
              e931 0094  ld   $94
              e932 0025  ld   $25
              e933 0092  ld   $92
              e934 0016  ld   $16
              e935 0005  ld   $05
              e936 0096  ld   $96
              e937 0021  ld   $21
              e938 0094  ld   $94
              e939 007f  ld   $7f
              e93a 0000  ld   $00
              e93b 005e  ld   $5e
              e93c 0026  ld   $26
              e93d 00b4  ld   $b4
              e93e 00cb  ld   $cb
              e93f 0093  ld   $93
              e940 0094  ld   $94
              e941 0093  ld   $93
              e942 0028  ld   $28
              e943 009e  ld   $9e
              e944 00e1  ld   $e1
              e945 0096  ld   $96
              e946 0016  ld   $16
              e947 0000  ld   $00
              e948 0026  ld   $26
              e949 00b4  ld   $b4
              e94a 00cb  ld   $cb
              e94b 0093  ld   $93
              e94c 0028  ld   $28
              e94d 0075  ld   $75
              e94e 0085  ld   $85
              e94f 00a0  ld   $a0
              e950 0070  ld   $70
              e951 0063  ld   $63
              e952 00ff  ld   $ff
              e953 006a  ld   $6a
              e954 00a1  ld   $a1
              e955 005e  ld   $5e
              e956 0075  ld   $75
              e957 0085  ld   $85
              e958 00a4  ld   $a4
              e959 0063  ld   $63
              e95a 004d  ld   $4d
              e95b 0008  ld   $08
              e95c 0094  ld   $94
              e95d 0016  ld   $16
              e95e 003c  ld   $3c
              e95f 009e  ld   $9e
              e960 0016  ld   $16
              e961 00a0  ld   $a0
              e962 0024  ld   $24
              e963 0016  ld   $16
              e964 0000  ld   $00
              e965 0026  ld   $26
              e966 0065  ld   $65
              e967 0027  ld   $27
              e968 0094  ld   $94
              e969 00b4  ld   $b4
              e96a 00f3  ld   $f3
              e96b 0016  ld   $16
              e96c 00a0  ld   $a0
              e96d 0024  ld   $24
              e96e 0016  ld   $16
              e96f 0000  ld   $00
              e970 0026  ld   $26
              e971 0059  ld   $59
              e972 0087  ld   $87
              e973 00b8  ld   $b8
              e974 0094  ld   $94
              e975 005e  ld   $5e
              e976 0027  ld   $27
              e977 00b4  ld   $b4
              e978 00f3  ld   $f3
              e979 0093  ld   $93
              e97a 0094  ld   $94
              e97b 009e  ld   $9e
              e97c 00a9  ld   $a9
              e97d 009e  ld   $9e
              e97e 0063  ld   $63
              e97f 00ff  ld   $ff
              e980 0085  ld   $85
              e981 00cc  ld   $cc
              e982 0062  ld   $62
              e983 004d  ld   $4d
              e984 0020  ld   $20
              e985 0092  ld   $92
              e986 0085  ld   $85
              e987 00a0  ld   $a0
              e988 0069  ld   $69
              e989 0085  ld   $85
              e98a 00d8  ld   $d8
              e98b 0062  ld   $62
              e98c 0011  ld   $11
              e98d 00a0  ld   $a0
              e98e 0077  ld   $77
              e98f 002b  ld   $2b
              e990 0082  ld   $82
              e991 0021  ld   $21
              e992 0092  ld   $92
              e993 00b8  ld   $b8
              e994 0082  ld   $82
              e995 00e6  ld   $e6
              e996 0001  ld   $01
              e997 00f0  ld   $f0
              e998 0082  ld   $82
              e999 0099  ld   $99
              e99a 0082  ld   $82
              e99b 00e3  ld   $e3
              e99c 0001  ld   $01
              e99d 0025  ld   $25
              e99e 0000  ld   $00
              e99f 00c7  ld   $c7
              e9a0 003f  ld   $3f
              e9a1 006f  ld   $6f
              e9a2 0096  ld   $96
              e9a3 00e6  ld   $e6
              e9a4 0005  ld   $05
              e9a5 0035  ld   $35
              e9a6 0072  ld   $72
              e9a7 00f6  ld   $f6
              e9a8 0085  ld   $85
              e9a9 00b2  ld   $b2
              e9aa 0063  ld   $63
              e9ab 0090  ld   $90
              e9ac 00f9  ld   $f9
              e9ad 0085  ld   $85
              e9ae 00c3  ld   $c3
              e9af 0063  ld   $63
              e9b0 0059  ld   $59
              e9b1 0001  ld   $01
              e9b2 0063  ld   $63
              e9b3 00ff  ld   $ff
              e9b4 006b  ld   $6b
              e9b5 00a0  ld   $a0
              e9b6 005f  ld   $5f
              e9b7 001a  ld   $1a
              e9b8 0021  ld   $21
              e9b9 0082  ld   $82
              e9ba 00fc  ld   $fc
              e9bb 002b  ld   $2b
              e9bc 0084  ld   $84
              e9bd 00b8  ld   $b8
              e9be 0082  ld   $82
              e9bf 0035  ld   $35
              e9c0 003f  ld   $3f
              e9c1 00c6  ld   $c6
              e9c2 0021  ld   $21
              e9c3 0082  ld   $82
              e9c4 00e6  ld   $e6
              e9c5 0080  ld   $80
              e9c6 0035  ld   $35
              e9c7 0072  ld   $72
              e9c8 00b9  ld   $b9
              e9c9 0021  ld   $21
              e9ca 0084  ld   $84
              e9cb 00b8  ld   $b8
              e9cc 0082  ld   $82
              e9cd 0035  ld   $35
              e9ce 003f  ld   $3f
              e9cf 00c6  ld   $c6
              e9d0 0090  ld   $90
              e9d1 00c0  ld   $c0
              e9d2 0021  ld   $21
              e9d3 0084  ld   $84
              e9d4 00b8  ld   $b8
              e9d5 0082  ld   $82
              e9d6 0035  ld   $35
              e9d7 004d  ld   $4d
              e9d8 00c6  ld   $c6
              e9d9 001a  ld   $1a
              e9da 0006  ld   $06
              e9db 00f0  ld   $f0
              e9dc 007e  ld   $7e
              e9dd 0090  ld   $90
              e9de 00c0  ld   $c0
              e9df 00ff  ld   $ff
              e9e0 0075  ld   $75
              e9e1 001a  ld   $1a
              e9e2 00a4  ld   $a4
              e9e3 002b  ld   $2b
              e9e4 0082  ld   $82
              e9e5 001a  ld   $1a
              e9e6 00a5  ld   $a5
              e9e7 002b  ld   $2b
              e9e8 0084  ld   $84
              e9e9 0046  ld   $46
              e9ea 0090  ld   $90
              e9eb 002b  ld   $2b
              e9ec 0086  ld   $86
              e9ed 00e6  ld   $e6
              e9ee 00ff  ld   $ff
              e9ef 0035  ld   $35
              e9f0 003f  ld   $3f
              e9f1 00f2  ld   $f2
              e9f2 0021  ld   $21
              e9f3 0082  ld   $82
              e9f4 0099  ld   $99
              e9f5 0086  ld   $86
              e9f6 002b  ld   $2b
              e9f7 0086  ld   $86
              e9f8 005e  ld   $5e
              e9f9 00a4  ld   $a4
              e9fa 0046  ld   $46
              e9fb fe00  bra  ac          ;+-----------------------------------+
              e9fc fcfd  bra  $e9fd       ;|                                   |
              e9fd 1418  ld   $18,y       ;| Trampoline for page $e900 lookups |
              e9fe e006  jmp  y,$06       ;|                                   |
              e9ff c218  st   [$18]       ;+-----------------------------------+
              ea00 0090  ld   $90
              ea01 002b  ld   $2b
              ea02 0088  ld   $88
              ea03 0021  ld   $21
              ea04 0084  ld   $84
              ea05 0099  ld   $99
              ea06 0088  ld   $88
              ea07 002b  ld   $2b
              ea08 0088  ld   $88
              ea09 005e  ld   $5e
              ea0a 00a5  ld   $a5
              ea0b 0085  ld   $85
              ea0c 00a6  ld   $a6
              ea0d 0072  ld   $72
              ea0e 0090  ld   $90
              ea0f 00c8  ld   $c8
              ea10 0016  ld   $16
              ea11 0099  ld   $99
              ea12 009e  ld   $9e
              ea13 0085  ld   $85
              ea14 00a0  ld   $a0
              ea15 0072  ld   $72
              ea16 0085  ld   $85
              ea17 00a0  ld   $a0
              ea18 0071  ld   $71
              ea19 0063  ld   $63
              ea1a 00ff  ld   $ff
              ea1b 006c  ld   $6c
              ea1c 00a0  ld   $a0
              ea1d 005f  ld   $5f
              ea1e 0021  ld   $21
              ea1f 0024  ld   $24
              ea20 00fc  ld   $fc
              ea21 0026  ld   $26
              ea22 002b  ld   $2b
              ea23 009e  ld   $9e
              ea24 002f  ld   $2f
              ea25 0024  ld   $24
              ea26 0067  ld   $67
              ea27 002f  ld   $2f
              ea28 0026  ld   $26
              ea29 0067  ld   $67
              ea2a 004d  ld   $4d
              ea2b 00a1  ld   $a1
              ea2c 0022  ld   $22
              ea2d 004d  ld   $4d
              ea2e 0000  ld   $00
              ea2f 0028  ld   $28
              ea30 004d  ld   $4d
              ea31 0001  ld   $01
              ea32 002a  ld   $2a
              ea33 00b4  ld   $b4
              ea34 00e6  ld   $e6
              ea35 0021  ld   $21
              ea36 009e  ld   $9e
              ea37 0035  ld   $35
              ea38 0053  ld   $53
              ea39 00bd  ld   $bd
              ea3a 002f  ld   $2f
              ea3b 0024  ld   $24
              ea3c 0017  ld   $17
              ea3d 0021  ld   $21
              ea3e 0024  ld   $24
              ea3f 00ff  ld   $ff
              ea40 0011  ld   $11
              ea41 0003  ld   $03
              ea42 000b  ld   $0b
              ea43 002b  ld   $2b
              ea44 0022  ld   $22
              ea45 00ab  ld   $ab
              ea46 0094  ld   $94
              ea47 0084  ld   $84
              ea48 0088  ld   $88
              ea49 0035  ld   $35
              ea4a 0053  ld   $53
              ea4b 00d2  ld   $d2
              ea4c 0065  ld   $65
              ea4d 0084  ld   $84
              ea4e 0088  ld   $88
              ea4f 002f  ld   $2f
              ea50 0094  ld   $94
              ea51 0017  ld   $17
              ea52 001c  ld   $1c
              ea53 0084  ld   $84
              ea54 0084  ld   $84
              ea55 0008  ld   $08
              ea56 0093  ld   $93
              ea57 0094  ld   $94
              ea58 001a  ld   $1a
              ea59 0086  ld   $86
              ea5a 00b8  ld   $b8
              ea5b 0082  ld   $82
              ea5c 0035  ld   $35
              ea5d 0053  ld   $53
              ea5e 00e5  ld   $e5
              ea5f 0065  ld   $65
              ea60 0082  ld   $82
              ea61 0086  ld   $86
              ea62 002f  ld   $2f
              ea63 0018  ld   $18
              ea64 0017  ld   $17
              ea65 00e3  ld   $e3
              ea66 0001  ld   $01
              ea67 005e  ld   $5e
              ea68 0092  ld   $92
              ea69 0065  ld   $65
              ea6a 0025  ld   $25
              ea6b 00a3  ld   $a3
              ea6c 0065  ld   $65
              ea6d 0027  ld   $27
              ea6e 0084  ld   $84
              ea6f 0065  ld   $65
              ea70 0024  ld   $24
              ea71 0092  ld   $92
              ea72 0065  ld   $65
              ea73 0026  ld   $26
              ea74 0082  ld   $82
              ea75 00b4  ld   $b4
              ea76 00f3  ld   $f3
              ea77 0093  ld   $93
              ea78 0027  ld   $27
              ea79 009e  ld   $9e
              ea7a 00ef  ld   $ef
              ea7b 0094  ld   $94
              ea7c 00ff  ld   $ff
              ea7d 006d  ld   $6d
              ea7e 00a3  ld   $a3
              ea7f 005c  ld   $5c
              ea80 0059  ld   $59
              ea81 0000  ld   $00
              ea82 002f  ld   $2f
              ea83 0000  ld   $00
              ea84 0027  ld   $27
              ea85 002f  ld   $2f
              ea86 0001  ld   $01
              ea87 0027  ld   $27
              ea88 002f  ld   $2f
              ea89 0002  ld   $02
              ea8a 0027  ld   $27
              ea8b 002f  ld   $2f
              ea8c 0003  ld   $03
              ea8d 0027  ld   $27
              ea8e 002f  ld   $2f
              ea8f 0000  ld   $00
              ea90 005c  ld   $5c
              ea91 002f  ld   $2f
              ea92 0001  ld   $01
              ea93 005c  ld   $5c
              ea94 002f  ld   $2f
              ea95 0002  ld   $02
              ea96 005c  ld   $5c
              ea97 002f  ld   $2f
              ea98 0003  ld   $03
              ea99 005c  ld   $5c
              ea9a 00ff  ld   $ff
              ea9b 0059  ld   $59
              ea9c 0000  ld   $00
              ea9d 005e  ld   $5e
              ea9e 00a4  ld   $a4
              ea9f 005e  ld   $5e
              eaa0 0028  ld   $28
              eaa1 00c7  ld   $c7
              eaa2 0002  ld   $02
              eaa3 006f  ld   $6f
              eaa4 00aa  ld   $aa
              eaa5 0035  ld   $35
              eaa6 0072  ld   $72
              eaa7 00ca  ld   $ca
              eaa8 00ff  ld   $ff
              eaa9 0075  ld   $75
              eaaa 00c7  ld   $c7
              eaab 0004  ld   $04
              eaac 006f  ld   $6f
              eaad 00aa  ld   $aa
              eaae 0035  ld   $35
              eaaf 0072  ld   $72
              eab0 00df  ld   $df
              eab1 001c  ld   $1c
              eab2 00a5  ld   $a5
              eab3 00a5  ld   $a5
              eab4 0006  ld   $06
              eab5 00a7  ld   $a7
              eab6 0078  ld   $78
              eab7 00a5  ld   $a5
              eab8 0035  ld   $35
              eab9 0050  ld   $50
              eaba 00f8  ld   $f8
              eabb 0016  ld   $16
              eabc 0072  ld   $72
              eabd 00a5  ld   $a5
              eabe 0085  ld   $85
              eabf 00dc  ld   $dc
              eac0 0066  ld   $66
              eac1 0011  ld   $11
              eac2 0000  ld   $00
              eac3 0001  ld   $01
              eac4 002b  ld   $2b
              eac5 0026  ld   $26
              eac6 0016  ld   $16
              eac7 0006  ld   $06
              eac8 0024  ld   $24
              eac9 0016  ld   $16
              eaca 0078  ld   $78
              eacb 0025  ld   $25
              eacc 0011  ld   $11
              eacd 00c0  ld   $c0
              eace 0020  ld   $20
              eacf 002b  ld   $2b
              ead0 0022  ld   $22
              ead1 00b4  ld   $b4
              ead2 00fb  ld   $fb
              ead3 00c7  ld   $c7
              ead4 0004  ld   $04
              ead5 0069  ld   $69
              ead6 00aa  ld   $aa
              ead7 0085  ld   $85
              ead8 00a1  ld   $a1
              ead9 0068  ld   $68
              eada 0063  ld   $63
              eadb 00ff  ld   $ff
              eadc 006e  ld   $6e
              eadd 00a0  ld   $a0
              eade 005f  ld   $5f
              eadf 00a7  ld   $a7
              eae0 009c  ld   $9c
              eae1 00a4  ld   $a4
              eae2 0035  ld   $35
              eae3 0056  ld   $56
              eae4 00a7  ld   $a7
              eae5 0016  ld   $16
              eae6 0000  ld   $00
              eae7 00a4  ld   $a4
              eae8 00a7  ld   $a7
              eae9 0072  ld   $72
              eaea 00a5  ld   $a5
              eaeb 0035  ld   $35
              eaec 0050  ld   $50
              eaed 00b5  ld   $b5
              eaee 0016  ld   $16
              eaef 0072  ld   $72
              eaf0 00a5  ld   $a5
              eaf1 00c7  ld   $c7
              eaf2 0004  ld   $04
              eaf3 0069  ld   $69
              eaf4 00aa  ld   $aa
              eaf5 00ff  ld   $ff
              eaf6 00c7  ld   $c7
              eaf7 00fb  ld   $fb
              eaf8 0066  ld   $66
              eaf9 00aa  ld   $aa
              eafa 00ff  ld   $ff
              eafb fe00  bra  ac          ;+-----------------------------------+
              eafc fcfd  bra  $eafd       ;|                                   |
              eafd 1418  ld   $18,y       ;| Trampoline for page $ea00 lookups |
              eafe e006  jmp  y,$06       ;|                                   |
              eaff c218  st   [$18]       ;+-----------------------------------+
              eb00 001a  ld   $1a
              eb01 0094  ld   $94
              eb02 0035  ld   $35
              eb03 003f  ld   $3f
              eb04 00d0  ld   $d0
              eb05 00e6  ld   $e6
              eb06 0001  ld   $01
              eb07 002b  ld   $2b
              eb08 0094  ld   $94
              eb09 004d  ld   $4d
              eb0a 0000  ld   $00
              eb0b 009c  ld   $9c
              eb0c 0021  ld   $21
              eb0d 0092  ld   $92
              eb0e 0025  ld   $25
              eb0f 0000  ld   $00
              eb10 00dd  ld   $dd
              eb11 0092  ld   $92
              eb12 0025  ld   $25
              eb13 0020  ld   $20
              eb14 0090  ld   $90
              eb15 00f6  ld   $f6
              eb16 0021  ld   $21
              eb17 0098  ld   $98
              eb18 00b8  ld   $b8
              eb19 009a  ld   $9a
              eb1a 0035  ld   $35
              eb1b 0053  ld   $53
              eb1c 00f9  ld   $f9
              eb1d 00c7  ld   $c7
              eb1e 0010  ld   $10
              eb1f 006f  ld   $6f
              eb20 00aa  ld   $aa
              eb21 0035  ld   $35
              eb22 0072  ld   $72
              eb23 00e2  ld   $e2
              eb24 009c  ld   $9c
              eb25 0006  ld   $06
              eb26 0090  ld   $90
              eb27 00e4  ld   $e4
              eb28 009c  ld   $9c
              eb29 0004  ld   $04
              eb2a 002b  ld   $2b
              eb2b 009c  ld   $9c
              eb2c 0059  ld   $59
              eb2d 0020  ld   $20
              eb2e 00d1  ld   $d1
              eb2f 0092  ld   $92
              eb30 0021  ld   $21
              eb31 0092  ld   $92
              eb32 0025  ld   $25
              eb33 0000  ld   $00
              eb34 0038  ld   $38
              eb35 0002  ld   $02
              eb36 0092  ld   $92
              eb37 0092  ld   $92
              eb38 0021  ld   $21
              eb39 0092  ld   $92
              eb3a 0025  ld   $25
              eb3b 0020  ld   $20
              eb3c 0085  ld   $85
              eb3d 00a0  ld   $a0
              eb3e 0066  ld   $66
              eb3f 0059  ld   $59
              eb40 0000  ld   $00
              eb41 0063  ld   $63
              eb42 00ff  ld   $ff
              eb43 006f  ld   $6f
              eb44 00a1  ld   $a1
              eb45 005e  ld   $5e
              eb46 0075  ld   $75
              eb47 002b  ld   $2b
              eb48 0082  ld   $82
              eb49 0046  ld   $46
              eb4a 0082  ld   $82
              eb4b 002b  ld   $2b
              eb4c 0084  ld   $84
              eb4d 0046  ld   $46
              eb4e 0082  ld   $82
              eb4f 002b  ld   $2b
              eb50 0086  ld   $86
              eb51 003b  ld   $3b
              eb52 0082  ld   $82
              eb53 002b  ld   $2b
              eb54 0088  ld   $88
              eb55 00c7  ld   $c7
              eb56 00fd  ld   $fd
              eb57 0066  ld   $66
              eb58 00aa  ld   $aa
              eb59 0065  ld   $65
              eb5a 0081  ld   $81
              eb5b 000f  ld   $0f
              eb5c 0085  ld   $85
              eb5d 00ba  ld   $ba
              eb5e 006f  ld   $6f
              eb5f 0046  ld   $46
              eb60 0088  ld   $88
              eb61 0035  ld   $35
              eb62 003f  ld   $3f
              eb63 00f7  ld   $f7
              eb64 002b  ld   $2b
              eb65 0096  ld   $96
              eb66 0082  ld   $82
              eb67 0040  ld   $40
              eb68 0035  ld   $35
              eb69 003f  ld   $3f
              eb6a 00c7  ld   $c7
              eb6b 0085  ld   $85
              eb6c 00f1  ld   $f1
              eb6d 0062  ld   $62
              eb6e 0085  ld   $85
              eb6f 00cc  ld   $cc
              eb70 0062  ld   $62
              eb71 0046  ld   $46
              eb72 0086  ld   $86
              eb73 0085  ld   $85
              eb74 00d6  ld   $d6
              eb75 0063  ld   $63
              eb76 0085  ld   $85
              eb77 00d8  ld   $d8
              eb78 0062  ld   $62
              eb79 00c7  ld   $c7
              eb7a 0080  ld   $80
              eb7b 006f  ld   $6f
              eb7c 0096  ld   $96
              eb7d 0035  ld   $35
              eb7e 003f  ld   $3f
              eb7f 00dc  ld   $dc
              eb80 0085  ld   $85
              eb81 00f1  ld   $f1
              eb82 0062  ld   $62
              eb83 0011  ld   $11
              eb84 00a1  ld   $a1
              eb85 0077  ld   $77
              eb86 002b  ld   $2b
              eb87 0092  ld   $92
              eb88 004d  ld   $4d
              eb89 0000  ld   $00
              eb8a 0094  ld   $94
              eb8b 0011  ld   $11
              eb8c 00a0  ld   $a0
              eb8d 0077  ld   $77
              eb8e 002b  ld   $2b
              eb8f 009e  ld   $9e
              eb90 001a  ld   $1a
              eb91 0097  ld   $97
              eb92 0099  ld   $99
              eb93 009e  ld   $9e
              eb94 002b  ld   $2b
              eb95 009e  ld   $9e
              eb96 0032  ld   $32
              eb97 009a  ld   $9a
              eb98 00a4  ld   $a4
              eb99 002b  ld   $2b
              eb9a 0098  ld   $98
              eb9b 0085  ld   $85
              eb9c 00ca  ld   $ca
              eb9d 0064  ld   $64
              eb9e 00c7  ld   $c7
              eb9f 0002  ld   $02
              eba0 0069  ld   $69
              eba1 00aa  ld   $aa
              eba2 0063  ld   $63
              eba3 00ff  ld   $ff
              eba4 0070  ld   $70
              eba5 00a0  ld   $a0
              eba6 005f  ld   $5f
              eba7 001c  ld   $1c
              eba8 00a4  ld   $a4
              eba9 00a4  ld   $a4
              ebaa 0006  ld   $06
              ebab 00a7  ld   $a7
              ebac 009a  ld   $9a
              ebad 00a4  ld   $a4
              ebae 0035  ld   $35
              ebaf 0056  ld   $56
              ebb0 00b4  ld   $b4
              ebb1 00c7  ld   $c7
              ebb2 0008  ld   $08
              ebb3 006f  ld   $6f
              ebb4 00aa  ld   $aa
              ebb5 0035  ld   $35
              ebb6 0072  ld   $72
              ebb7 00b4  ld   $b4
              ebb8 0075  ld   $75
              ebb9 0085  ld   $85
              ebba 00b7  ld   $b7
              ebbb 0070  ld   $70
              ebbc 0063  ld   $63
              ebbd 00ff  ld   $ff
              ebbe 00c7  ld   $c7
              ebbf 0010  ld   $10
              ebc0 006f  ld   $6f
              ebc1 00aa  ld   $aa
              ebc2 00bd  ld   $bd
              ebc3 00bc  ld   $bc
              ebc4 006d  ld   $6d
              ebc5 0059  ld   $59
              ebc6 0002  ld   $02
              ebc7 005e  ld   $5e
              ebc8 00a4  ld   $a4
              ebc9 005e  ld   $5e
              ebca 0028  ld   $28
              ebcb 00c7  ld   $c7
              ebcc 0002  ld   $02
              ebcd 006f  ld   $6f
              ebce 00aa  ld   $aa
              ebcf 0035  ld   $35
              ebd0 0072  ld   $72
              ebd1 00ca  ld   $ca
              ebd2 00ff  ld   $ff
              ebd3 0075  ld   $75
              ebd4 00c7  ld   $c7
              ebd5 0004  ld   $04
              ebd6 006f  ld   $6f
              ebd7 00aa  ld   $aa
              ebd8 0035  ld   $35
              ebd9 0072  ld   $72
              ebda 00df  ld   $df
              ebdb 001c  ld   $1c
              ebdc 00a5  ld   $a5
              ebdd 00a5  ld   $a5
              ebde 0008  ld   $08
              ebdf 00a7  ld   $a7
              ebe0 0078  ld   $78
              ebe1 00a5  ld   $a5
              ebe2 0035  ld   $35
              ebe3 0050  ld   $50
              ebe4 00f8  ld   $f8
              ebe5 0016  ld   $16
              ebe6 0070  ld   $70
              ebe7 00a5  ld   $a5
              ebe8 0085  ld   $85
              ebe9 00aa  ld   $aa
              ebea 0068  ld   $68
              ebeb 0011  ld   $11
              ebec 0000  ld   $00
              ebed 0001  ld   $01
              ebee 002b  ld   $2b
              ebef 0026  ld   $26
              ebf0 0016  ld   $16
              ebf1 0008  ld   $08
              ebf2 0024  ld   $24
              ebf3 0016  ld   $16
              ebf4 0078  ld   $78
              ebf5 0025  ld   $25
              ebf6 0011  ld   $11
              ebf7 00c0  ld   $c0
              ebf8 0020  ld   $20
              ebf9 002b  ld   $2b
              ebfa 0022  ld   $22
              ebfb fe00  bra  ac          ;+-----------------------------------+
              ebfc fcfd  bra  $ebfd       ;|                                   |
              ebfd 1418  ld   $18,y       ;| Trampoline for page $eb00 lookups |
              ebfe e006  jmp  y,$06       ;|                                   |
              ebff c218  st   [$18]       ;+-----------------------------------+
              ec00 00b4  ld   $b4
              ec01 00fb  ld   $fb
              ec02 00c7  ld   $c7
              ec03 0004  ld   $04
              ec04 0069  ld   $69
              ec05 00aa  ld   $aa
              ec06 0085  ld   $85
              ec07 00ea  ld   $ea
              ec08 0063  ld   $63
              ec09 0063  ld   $63
              ec0a 00ff  ld   $ff
              ec0b 0071  ld   $71
              ec0c 00a0  ld   $a0
              ec0d 005f  ld   $5f
              ec0e 0011  ld   $11
              ec0f 00e9  ld   $e9
              ec10 006b  ld   $6b
              ec11 0069  ld   $69
              ec12 009e  ld   $9e
              ec13 00ff  ld   $ff
              ec14 0075  ld   $75
              ec15 0065  ld   $65
              ec16 0082  ld   $82
              ec17 000f  ld   $0f
              ec18 001a  ld   $1a
              ec19 0081  ld   $81
              ec1a 002f  ld   $2f
              ec1b 0082  ld   $82
              ec1c 0062  ld   $62
              ec1d 0035  ld   $35
              ec1e 003f  ld   $3f
              ec1f 00f9  ld   $f9
              ec20 0085  ld   $85
              ec21 00ba  ld   $ba
              ec22 0069  ld   $69
              ec23 0065  ld   $65
              ec24 0081  ld   $81
              ec25 0082  ld   $82
              ec26 00a7  ld   $a7
              ec27 007f  ld   $7f
              ec28 0082  ld   $82
              ec29 0035  ld   $35
              ec2a 004d  ld   $4d
              ec2b 00f9  ld   $f9
              ec2c 0035  ld   $35
              ec2d 0072  ld   $72
              ec2e 00c2  ld   $c2
              ec2f 0085  ld   $85
              ec30 00bc  ld   $bc
              ec31 006e  ld   $6e
              ec32 00a7  ld   $a7
              ec33 000a  ld   $0a
              ec34 0082  ld   $82
              ec35 0035  ld   $35
              ec36 0072  ld   $72
              ec37 00cb  ld   $cb
              ec38 0085  ld   $85
              ec39 00cb  ld   $cb
              ec3a 006a  ld   $6a
              ec3b 0021  ld   $21
              ec3c 009e  ld   $9e
              ec3d 00b8  ld   $b8
              ec3e 0092  ld   $92
              ec3f 0035  ld   $35
              ec40 003f  ld   $3f
              ec41 00f9  ld   $f9
              ec42 00a7  ld   $a7
              ec43 0020  ld   $20
              ec44 0082  ld   $82
              ec45 0035  ld   $35
              ec46 0050  ld   $50
              ec47 00f9  ld   $f9
              ec48 001a  ld   $1a
              ec49 0082  ld   $82
              ec4a 00d1  ld   $d1
              ec4b 0092  ld   $92
              ec4c 0021  ld   $21
              ec4d 0092  ld   $92
              ec4e 0025  ld   $25
              ec4f 0000  ld   $00
              ec50 00a7  ld   $a7
              ec51 0095  ld   $95
              ec52 009a  ld   $9a
              ec53 0035  ld   $35
              ec54 0050  ld   $50
              ec55 00ec  ld   $ec
              ec56 0093  ld   $93
              ec57 0094  ld   $94
              ec58 0059  ld   $59
              ec59 0000  ld   $00
              ec5a 0090  ld   $90
              ec5b 00f4  ld   $f4
              ec5c 00c7  ld   $c7
              ec5d 0010  ld   $10
              ec5e 006f  ld   $6f
              ec5f 00aa  ld   $aa
              ec60 00c7  ld   $c7
              ec61 0006  ld   $06
              ec62 002a  ld   $2a
              ec63 0004  ld   $04
              ec64 002b  ld   $2b
              ec65 009c  ld   $9c
              ec66 0085  ld   $85
              ec67 00a0  ld   $a0
              ec68 0066  ld   $66
              ec69 0059  ld   $59
              ec6a 0000  ld   $00
              ec6b 0063  ld   $63
              ec6c 00ff  ld   $ff
              ec6d 0072  ld   $72
              ec6e 00a0  ld   $a0
              ec6f 005f  ld   $5f
              ec70 0011  ld   $11
              ec71 00dd  ld   $dd
              ec72 006b  ld   $6b
              ec73 0069  ld   $69
              ec74 009e  ld   $9e
              ec75 00ff  ld   $ff
              ec76 0075  ld   $75
              ec77 00ab  ld   $ab
              ec78 009a  ld   $9a
              ec79 0082  ld   $82
              ec7a 0086  ld   $86
              ec7b 00b1  ld   $b1
              ec7c 0036  ld   $36
              ec7d 002b  ld   $2b
              ec7e 0092  ld   $92
              ec7f 002b  ld   $2b
              ec80 0096  ld   $96
              ec81 002f  ld   $2f
              ec82 009a  ld   $9a
              ec83 0067  ld   $67
              ec84 00ab  ld   $ab
              ec85 009c  ld   $9c
              ec86 0084  ld   $84
              ec87 0088  ld   $88
              ec88 002b  ld   $2b
              ec89 009e  ld   $9e
              ec8a 00b1  ld   $b1
              ec8b 0036  ld   $36
              ec8c 002b  ld   $2b
              ec8d 0094  ld   $94
              ec8e 002f  ld   $2f
              ec8f 009c  ld   $9c
              ec90 0067  ld   $67
              ec91 004d  ld   $4d
              ec92 0000  ld   $00
              ec93 0098  ld   $98
              ec94 0021  ld   $21
              ec95 009a  ld   $9a
              ec96 00b8  ld   $b8
              ec97 009c  ld   $9c
              ec98 0035  ld   $35
              ec99 0053  ld   $53
              ec9a 00d6  ld   $d6
              ec9b 004d  ld   $4d
              ec9c 0000  ld   $00
              ec9d 0096  ld   $96
              ec9e 00c7  ld   $c7
              ec9f 009c  ld   $9c
              eca0 0017  ld   $17
              eca1 009a  ld   $9a
              eca2 0021  ld   $21
              eca3 009e  ld   $9e
              eca4 00b1  ld   $b1
              eca5 0036  ld   $36
              eca6 002b  ld   $2b
              eca7 0098  ld   $98
              eca8 002d  ld   $2d
              eca9 0082  ld   $82
              ecaa 0084  ld   $84
              ecab 0082  ld   $82
              ecac 002d  ld   $2d
              ecad 0084  ld   $84
              ecae 0088  ld   $88
              ecaf 0086  ld   $86
              ecb0 001a  ld   $1a
              ecb1 009a  ld   $9a
              ecb2 0018  ld   $18
              ecb3 0018  ld   $18
              ecb4 00e3  ld   $e3
              ecb5 0001  ld   $01
              ecb6 002b  ld   $2b
              ecb7 00a0  ld   $a0
              ecb8 002b  ld   $2b
              ecb9 009e  ld   $9e
              ecba 002f  ld   $2f
              ecbb 0094  ld   $94
              ecbc 005e  ld   $5e
              ecbd 0099  ld   $99
              ecbe 0092  ld   $92
              ecbf 002b  ld   $2b
              ecc0 0086  ld   $86
              ecc1 002f  ld   $2f
              ecc2 0098  ld   $98
              ecc3 005e  ld   $5e
              ecc4 0099  ld   $99
              ecc5 0096  ld   $96
              ecc6 002b  ld   $2b
              ecc7 0088  ld   $88
              ecc8 004d  ld   $4d
              ecc9 00a4  ld   $a4
              ecca 0022  ld   $22
              eccb 00b4  ld   $b4
              eccc 00e3  ld   $e3
              eccd 0063  ld   $63
              ecce 00ff  ld   $ff
              eccf 0073  ld   $73
              ecd0 00a1  ld   $a1
              ecd1 005f  ld   $5f
              ecd2 0075  ld   $75
              ecd3 0023  ld   $23
              ecd4 0092  ld   $92
              ecd5 005e  ld   $5e
              ecd6 0096  ld   $96
              ecd7 0082  ld   $82
              ecd8 00f0  ld   $f0
              ecd9 008c  ld   $8c
              ecda 0090  ld   $90
              ecdb 0035  ld   $35
              ecdc 0072  ld   $72
              ecdd 00b4  ld   $b4
              ecde 0023  ld   $23
              ecdf 0092  ld   $92
              ece0 00b1  ld   $b1
              ece1 0014  ld   $14
              ece2 002f  ld   $2f
              ece3 0096  ld   $96
              ece4 0022  ld   $22
              ece5 0090  ld   $90
              ece6 00a0  ld   $a0
              ece7 008c  ld   $8c
              ece8 0010  ld   $10
              ece9 0035  ld   $35
              ecea 0072  ld   $72
              eceb 00be  ld   $be
              ecec 002f  ld   $2f
              eced 0096  ld   $96
              ecee 0022  ld   $22
              ecef 0090  ld   $90
              ecf0 00a0  ld   $a0
              ecf1 008c  ld   $8c
              ecf2 0050  ld   $50
              ecf3 0035  ld   $35
              ecf4 0072  ld   $72
              ecf5 00cc  ld   $cc
              ecf6 003b  ld   $3b
              ecf7 0092  ld   $92
              ecf8 002b  ld   $2b
              ecf9 0092  ld   $92
              ecfa 0035  ld   $35
              ecfb fe00  bra  ac          ;+-----------------------------------+
              ecfc fcfd  bra  $ecfd       ;|                                   |
              ecfd 1418  ld   $18,y       ;| Trampoline for page $ec00 lookups |
              ecfe e006  jmp  y,$06       ;|                                   |
              ecff c218  st   [$18]       ;+-----------------------------------+
              ed00 0072  ld   $72
              ed01 00a0  ld   $a0
              ed02 0063  ld   $63
              ed03 00ff  ld   $ff
              ed04 001a  ld   $1a
              ed05 0096  ld   $96
              ed06 005e  ld   $5e
              ed07 002c  ld   $2c
              ed08 002b  ld   $2b
              ed09 0082  ld   $82
              ed0a 0085  ld   $85
              ed0b 00ad  ld   $ad
              ed0c 0062  ld   $62
              ed0d 0090  ld   $90
              ed0e 00a0  ld   $a0
              ed0f 00e6  ld   $e6
              ed10 0006  ld   $06
              ed11 00f2  ld   $f2
              ed12 0006  ld   $06
              ed13 00a5  ld   $a5
              ed14 0008  ld   $08
              ed15 00c9  ld   $c9
              ed16 0008  ld   $08
              ed17 00ed  ld   $ed
              ed18 0008  ld   $08
              ed19 00e2  ld   $e2
              ed1a 0009  ld   $09
              ed1b 007f  ld   $7f
              ed1c 0000  ld   $00
              ed1d 000a  ld   $0a
              ed1e 0000  ld   $00
              ed1f 00fe  ld   $fe
              ed20 0000  ld   $00
              ed21 00fd  ld   $fd
              ed22 0000  ld   $00
              ed23 00fb  ld   $fb
              ed24 0000  ld   $00
              ed25 00f7  ld   $f7
              ed26 0000  ld   $00
              ed27 0000  ld   $00
              ed28 0000  ld   $00
              ed29 0008  ld   $08
              ed2a 0030  ld   $30
              ed2b 0030  ld   $30
              ed2c 003a  ld   $3a
              ed2d 0030  ld   $30
              ed2e 0030  ld   $30
              ed2f 003a  ld   $3a
              ed30 0030  ld   $30
              ed31 0030  ld   $30
              ed32 0000  ld   $00
              ed33 0000  ld   $00
              ed34 0000  ld   $00
              ed35 0000  ld   $00
              ed36 0074  ld   $74
              ed37 00a1  ld   $a1
              ed38 0018  ld   $18
              ed39 0003  ld   $03
              ed3a 0003  ld   $03
              ed3b 0000  ld   $00
              ed3c 0000  ld   $00
              ed3d 00a1  ld   $a1
              ed3e 0079  ld   $79
              ed3f 0060  ld   $60
              ed40 0000  ld   $00
              ed41 00a7  ld   $a7
              ed42 0074  ld   $74
              ed43 00a5  ld   $a5
              ed44 0074  ld   $74
              ed45 00a1  ld   $a1
              ed46 0074  ld   $74
              ed47 0003  ld   $03
              ed48 0003  ld   $03
              ed49 0000  ld   $00
              ed4a 0000  ld   $00
              ed4b 00a0  ld   $a0
              ed4c 007c  ld   $7c
              ed4d 00be  ld   $be
              ed4e 0075  ld   $75
              ed4f 00af  ld   $af
              ed50 0074  ld   $74
              ed51 0074  ld   $74
              ed52 00c9  ld   $c9
              ed53 0037  ld   $37
              ed54 0011  ld   $11
              ed55 0054  ld   $54
              ed56 0054  ld   $54
              ed57 004c  ld   $4c
              ed58 0020  ld   $20
              ed59 006d  ld   $6d
              ed5a 0069  ld   $69
              ed5b 0063  ld   $63
              ed5c 0072  ld   $72
              ed5d 006f  ld   $6f
              ed5e 0063  ld   $63
              ed5f 006f  ld   $6f
              ed60 006d  ld   $6d
              ed61 0070  ld   $70
              ed62 0075  ld   $75
              ed63 0074  ld   $74
              ed64 0065  ld   $65
              ed65 0072  ld   $72
              ed66 0000  ld   $00
              ed67 00aa  ld   $aa
              ed68 007c  ld   $7c
              ed69 00a4  ld   $a4
              ed6a 007c  ld   $7c
              ed6b 00ba  ld   $ba
              ed6c 007b  ld   $7b
              ed6d 00aa  ld   $aa
              ed6e 007c  ld   $7c
              ed6f 00a4  ld   $a4
              ed70 007b  ld   $7b
              ed71 00a6  ld   $a6
              ed72 007a  ld   $7a
              ed73 00b6  ld   $b6
              ed74 0079  ld   $79
              ed75 00a4  ld   $a4
              ed76 0079  ld   $79
              ed77 00b2  ld   $b2
              ed78 0078  ld   $78
              ed79 0000  ld   $00
              ed7a 0000  ld   $00
              ed7b 00fc  ld   $fc
              ed7c 00ff  ld   $ff
              ed7d 00f0  ld   $f0
              ed7e 00ff  ld   $ff
              ed7f 0000  ld   $00
              ed80 0000  ld   $00
              ed81 00f4  ld   $f4
              ed82 00ff  ld   $ff
              ed83 00f0  ld   $f0
              ed84 00ff  ld   $ff
              ed85 00fc  ld   $fc
              ed86 00ff  ld   $ff
              ed87 00fc  ld   $fc
              ed88 00ff  ld   $ff
              ed89 00fc  ld   $fc
              ed8a 00ff  ld   $ff
              ed8b 0075  ld   $75
              ed8c 00a0  ld   $a0
              ed8d 0060  ld   $60
              ed8e 0090  ld   $90
              ed8f 003c  ld   $3c
              ed90 0091  ld   $91
              ed91 0040  ld   $40
              ed92 0092  ld   $92
              ed93 0043  ld   $43
              ed94 0093  ld   $93
              ed95 0048  ld   $48
              ed96 000c  ld   $0c
              ed97 0080  ld   $80
              ed98 0081  ld   $81
              ed99 0082  ld   $82
              ed9a 0083  ld   $83
              ed9b 0001  ld   $01
              ed9c 0090  ld   $90
              ed9d 003c  ld   $3c
              ed9e 0091  ld   $91
              ed9f 0040  ld   $40
              eda0 0092  ld   $92
              eda1 0043  ld   $43
              eda2 0093  ld   $93
              eda3 0048  ld   $48
              eda4 0024  ld   $24
              eda5 0080  ld   $80
              eda6 0081  ld   $81
              eda7 0082  ld   $82
              eda8 0083  ld   $83
              eda9 00d0  ld   $d0
              edaa 0000  ld   $00
              edab 0000  ld   $00
              edac 00a1  ld   $a1
              edad 0079  ld   $79
              edae 0000  ld   $00
              edaf 0000  ld   $00
              edb0 0000  ld   $00
              * 64 times
              edee 0078  ld   $78
              edef 00a0  ld   $a0
              edf0 0060  ld   $60
              edf1 0000  ld   $00
              edf2 0000  ld   $00
              edf3 0013  ld   $13
              edf4 0000  ld   $00
              edf5 0013  ld   $13
              edf6 0000  ld   $00
              edf7 0017  ld   $17
              edf8 0000  ld   $00
              edf9 002a  ld   $2a
              edfa 0000  ld   $00
              edfb fe00  bra  ac          ;+-----------------------------------+
              edfc fcfd  bra  $edfd       ;|                                   |
              edfd 1418  ld   $18,y       ;| Trampoline for page $ed00 lookups |
              edfe e006  jmp  y,$06       ;|                                   |
              edff c218  st   [$18]       ;+-----------------------------------+
              ee00 003d  ld   $3d
              ee01 0000  ld   $00
              ee02 0050  ld   $50
              ee03 0000  ld   $00
              ee04 0063  ld   $63
              ee05 0000  ld   $00
              ee06 0076  ld   $76
              ee07 0000  ld   $00
              ee08 0000  ld   $00
              ee09 0000  ld   $00
              ee0a 00f8  ld   $f8
              ee0b 00ff  ld   $ff
              ee0c 000f  ld   $0f
              ee0d 0000  ld   $00
              ee0e 0000  ld   $00
              ee0f 0000  ld   $00
              * 5 times
              ee12 0008  ld   $08
              ee13 0000  ld   $00
              ee14 00ff  ld   $ff
              ee15 0000  ld   $00
              ee16 0000  ld   $00
              ee17 0000  ld   $00
              * 65 times
              ee56 0079  ld   $79
              ee57 00a1  ld   $a1
              ee58 005f  ld   $5f
              ee59 0001  ld   $01
              ee5a 003a  ld   $3a
              ee5b 0000  ld   $00
              ee5c 0000  ld   $00
              ee5d 0000  ld   $00
              ee5e 00f8  ld   $f8
              ee5f 00ff  ld   $ff
              ee60 000f  ld   $0f
              ee61 0000  ld   $00
              ee62 0000  ld   $00
              ee63 0000  ld   $00
              * 5 times
              ee66 0008  ld   $08
              ee67 0000  ld   $00
              ee68 00f1  ld   $f1
              ee69 00ff  ld   $ff
              ee6a 0000  ld   $00
              ee6b 0000  ld   $00
              ee6c 00ff  ld   $ff
              ee6d 0000  ld   $00
              ee6e 0000  ld   $00
              ee6f 0000  ld   $00
              ee70 00f8  ld   $f8
              ee71 00ff  ld   $ff
              ee72 000f  ld   $0f
              ee73 0000  ld   $00
              ee74 0000  ld   $00
              ee75 0000  ld   $00
              ee76 00ff  ld   $ff
              ee77 0000  ld   $00
              ee78 0000  ld   $00
              ee79 0000  ld   $00
              * 65 times
              eeb8 007a  ld   $7a
              eeb9 00a0  ld   $a0
              eeba 0060  ld   $60
              eebb 00a0  ld   $a0
              eebc 007d  ld   $7d
              eebd 00a2  ld   $a2
              eebe 007c  ld   $7c
              eebf 00a0  ld   $a0
              eec0 007b  ld   $7b
              eec1 0000  ld   $00
              eec2 0000  ld   $00
              eec3 0000  ld   $00
              * 6 times
              eec7 0004  ld   $04
              eec8 0000  ld   $00
              eec9 000f  ld   $0f
              eeca 0000  ld   $00
              eecb 0000  ld   $00
              eecc 0000  ld   $00
              eecd 00f1  ld   $f1
              eece 00ff  ld   $ff
              eecf 0000  ld   $00
              eed0 0000  ld   $00
              eed1 0000  ld   $00
              eed2 0000  ld   $00
              eed3 0008  ld   $08
              eed4 0000  ld   $00
              eed5 000f  ld   $0f
              eed6 0000  ld   $00
              eed7 0000  ld   $00
              eed8 0000  ld   $00
              eed9 00ff  ld   $ff
              eeda 0000  ld   $00
              eedb 0000  ld   $00
              eedc 0000  ld   $00
              * 33 times
              eefb fe00  bra  ac          ;+-----------------------------------+
              eefc fcfd  bra  $eefd       ;|                                   |
              eefd 1418  ld   $18,y       ;| Trampoline for page $ee00 lookups |
              eefe e006  jmp  y,$06       ;|                                   |
              eeff c218  st   [$18]       ;+-----------------------------------+
              ef00 0000  ld   $00
              ef01 0000  ld   $00
              ef02 0000  ld   $00
              * 32 times
              ef20 007b  ld   $7b
              ef21 00a0  ld   $a0
              ef22 0060  ld   $60
              ef23 0003  ld   $03
              ef24 0003  ld   $03
              ef25 0000  ld   $00
              ef26 0000  ld   $00
              ef27 000f  ld   $0f
              ef28 0000  ld   $00
              ef29 0000  ld   $00
              ef2a 0000  ld   $00
              * 5 times
              ef2d 0008  ld   $08
              ef2e 0000  ld   $00
              ef2f 00f1  ld   $f1
              ef30 00ff  ld   $ff
              ef31 0000  ld   $00
              ef32 0000  ld   $00
              ef33 0000  ld   $00
              ef34 0000  ld   $00
              ef35 00fc  ld   $fc
              ef36 00ff  ld   $ff
              ef37 000e  ld   $0e
              ef38 0000  ld   $00
              ef39 0000  ld   $00
              ef3a 0000  ld   $00
              ef3b 00ff  ld   $ff
              ef3c 0000  ld   $00
              ef3d 0000  ld   $00
              ef3e 0000  ld   $00
              * 5 times
              ef41 00ff  ld   $ff
              ef42 0000  ld   $00
              ef43 0000  ld   $00
              ef44 0000  ld   $00
              * 65 times
              ef83 007c  ld   $7c
              ef84 00a0  ld   $a0
              ef85 0060  ld   $60
              ef86 005e  ld   $5e
              ef87 0000  ld   $00
              ef88 00a2  ld   $a2
              ef89 007d  ld   $7d
              ef8a 0000  ld   $00
              ef8b 0000  ld   $00
              ef8c 00f8  ld   $f8
              ef8d 00ff  ld   $ff
              ef8e 00ff  ld   $ff
              ef8f 0000  ld   $00
              ef90 000f  ld   $0f
              ef91 0000  ld   $00
              ef92 0000  ld   $00
              ef93 0000  ld   $00
              * 5 times
              ef96 00f4  ld   $f4
              ef97 00ff  ld   $ff
              ef98 00f1  ld   $f1
              ef99 00ff  ld   $ff
              ef9a 0000  ld   $00
              ef9b 0000  ld   $00
              ef9c 0000  ld   $00
              ef9d 0000  ld   $00
              ef9e 0008  ld   $08
              ef9f 0000  ld   $00
              efa0 000e  ld   $0e
              efa1 0000  ld   $00
              efa2 0000  ld   $00
              efa3 0000  ld   $00
              efa4 00ff  ld   $ff
              efa5 0000  ld   $00
              efa6 0000  ld   $00
              efa7 0000  ld   $00
              * 65 times
              efe6 007d  ld   $7d
              efe7 00a0  ld   $a0
              efe8 0044  ld   $44
              efe9 005c  ld   $5c
              efea 0000  ld   $00
              efeb 0000  ld   $00
              efec 0000  ld   $00
              * 17 times
              effb fe00  bra  ac          ;+-----------------------------------+
              effc fcfd  bra  $effd       ;|                                   |
              effd 1418  ld   $18,y       ;| Trampoline for page $ef00 lookups |
              effe e006  jmp  y,$06       ;|                                   |
              efff c218  st   [$18]       ;+-----------------------------------+
              f000 0000  ld   $00
              f001 0000  ld   $00
              f002 0000  ld   $00
              * 50 times
              f032 007d  ld   $7d
              f033 00e5  ld   $e5
              f034 001b  ld   $1b
              f035 000f  ld   $0f
              f036 0007  ld   $07
              f037 0003  ld   $03
              f038 0001  ld   $01
              f039 0002  ld   $02
              f03a 0004  ld   $04
              f03b 0008  ld   $08
              f03c 0004  ld   $04
              f03d 0002  ld   $02
              f03e 0001  ld   $01
              f03f 0003  ld   $03
              f040 0007  ld   $07
              f041 000f  ld   $0f
              f042 000e  ld   $0e
              f043 000c  ld   $0c
              f044 0008  ld   $08
              f045 0004  ld   $04
              f046 0002  ld   $02
              f047 0001  ld   $01
              f048 0002  ld   $02
              f049 0004  ld   $04
              f04a 0008  ld   $08
              f04b 000c  ld   $0c
              f04c 000e  ld   $0e
              f04d 0001  ld   $01
              f04e 004b  ld   $4b
              f04f 0000  ld   $00
              f050 007e  ld   $7e
              f051 00a0  ld   $a0
              f052 0060  ld   $60
              f053 0006  ld   $06
              f054 0052  ld   $52
              f055 004f  ld   $4f
              f056 004d  ld   $4d
              f057 0076  ld   $76
              f058 0058  ld   $58
              f059 0030  ld   $30
              f05a 0000  ld   $00
              f05b 0009  ld   $09
              f05c 0046  ld   $46
              f05d 004f  ld   $4f
              f05e 0052  ld   $52
              f05f 0020  ld   $20
              f060 0052  ld   $52
              f061 0045  ld   $45
              f062 0053  ld   $53
              f063 0045  ld   $45
              f064 0054  ld   $54
              f065 0000  ld   $00
              f066 0004  ld   $04
              f067 0048  ld   $48
              f068 004f  ld   $4f
              f069 004c  ld   $4c
              f06a 0044  ld   $44
              f06b 0000  ld   $00
              f06c 0010  ld   $10
              f06d 0054  ld   $54
              f06e 004f  ld   $4f
              f06f 0020  ld   $20
              f070 0053  ld   $53
              f071 0054  ld   $54
              f072 0041  ld   $41
              f073 0052  ld   $52
              f074 0054  ld   $54
              f075 0020  ld   $20
              f076 0050  ld   $50
              f077 0052  ld   $52
              f078 004f  ld   $4f
              f079 0047  ld   $47
              f07a 0052  ld   $52
              f07b 0041  ld   $41
              f07c 004d  ld   $4d
              f07d 0000  ld   $00
              f07e 0005  ld   $05
              f07f 0050  ld   $50
              f080 0052  ld   $52
              f081 0045  ld   $45
              f082 0053  ld   $53
              f083 0053  ld   $53
              f084 0000  ld   $00
              f085 0009  ld   $09
              f086 0054  ld   $54
              f087 004f  ld   $4f
              f088 0020  ld   $20
              f089 0053  ld   $53
              f08a 0045  ld   $45
              f08b 004c  ld   $4c
              f08c 0045  ld   $45
              f08d 0043  ld   $43
              f08e 0054  ld   $54
              f08f 0000  ld   $00
              f090 0003  ld   $03
              f091 0055  ld   $55
              f092 0053  ld   $53
              f093 0045  ld   $45
              f094 0000  ld   $00
              f095 0009  ld   $09
              f096 0020  ld   $20
              f097 005b  ld   $5b
              f098 0053  ld   $53
              f099 0054  ld   $54
              f09a 0041  ld   $41
              f09b 0052  ld   $52
              f09c 0054  ld   $54
              f09d 005d  ld   $5d
              f09e 0020  ld   $20
              f09f 0000  ld   $00
              f0a0 0005  ld   $05
              f0a1 0020  ld   $20
              f0a2 005b  ld   $5b
              f0a3 0041  ld   $41
              f0a4 005d  ld   $5d
              f0a5 0020  ld   $20
              f0a6 0000  ld   $00
              f0a7 000a  ld   $0a
              f0a8 0020  ld   $20
              f0a9 005b  ld   $5b
              f0aa 0041  ld   $41
              f0ab 0052  ld   $52
              f0ac 0052  ld   $52
              f0ad 004f  ld   $4f
              f0ae 0057  ld   $57
              f0af 0053  ld   $53
              f0b0 005d  ld   $5d
              f0b1 0020  ld   $20
              f0b2 0000  ld   $00
              f0b3 007f  ld   $7f
              f0b4 00a0  ld   $a0
              f0b5 0060  ld   $60
              f0b6 005c  ld   $5c
              f0b7 00ca  ld   $ca
              f0b8 00d3  ld   $d3
              f0b9 0068  ld   $68
              f0ba 00e3  ld   $e3
              f0bb 0063  ld   $63
              f0bc 0089  ld   $89
              f0bd 005c  ld   $5c
              f0be 00b8  ld   $b8
              f0bf 0075  ld   $75
              f0c0 0085  ld   $85
              f0c1 00d4  ld   $d4
              f0c2 00de  ld   $de
              f0c3 0098  ld   $98
              f0c4 00d4  ld   $d4
              f0c5 00a7  ld   $a7
              f0c6 00f8  ld   $f8
              f0c7 007f  ld   $7f
              f0c8 00f1  ld   $f1
              f0c9 007f  ld   $7f
              f0ca 00e8  ld   $e8
              f0cb 007f  ld   $7f
              f0cc 00e1  ld   $e1
              f0cd 007f  ld   $7f
              f0ce 00d8  ld   $d8
              f0cf 007f  ld   $7f
              f0d0 00d0  ld   $d0
              f0d1 007f  ld   $7f
              f0d2 00c9  ld   $c9
              f0d3 007f  ld   $7f
              f0d4 00c0  ld   $c0
              f0d5 007f  ld   $7f
              f0d6 0007  ld   $07
              f0d7 0041  ld   $41
              f0d8 0050  ld   $50
              f0d9 0050  ld   $50
              f0da 004c  ld   $4c
              f0db 0045  ld   $45
              f0dc 002d  ld   $2d
              f0dd 0031  ld   $31
              f0de 0000  ld   $00
              f0df 0005  ld   $05
              f0e0 0042  ld   $42
              f0e1 0041  ld   $41
              f0e2 0053  ld   $53
              f0e3 0049  ld   $49
              f0e4 0043  ld   $43
              f0e5 0000  ld   $00
              f0e6 0006  ld   $06
              f0e7 004c  ld   $4c
              f0e8 004f  ld   $4f
              f0e9 0041  ld   $41
              f0ea 0044  ld   $44
              f0eb 0045  ld   $45
              f0ec 0052  ld   $52
              f0ed 0000  ld   $00
              f0ee 0007  ld   $07
              f0ef 0049  ld   $49
              f0f0 004e  ld   $4e
              f0f1 0056  ld   $56
              f0f2 0041  ld   $41
              f0f3 0044  ld   $44
              f0f4 0045  ld   $45
              f0f5 0052  ld   $52
              f0f6 0000  ld   $00
              f0f7 0005  ld   $05
              f0f8 0052  ld   $52
              f0f9 0041  ld   $41
              f0fa 0043  ld   $43
              f0fb fe00  bra  ac          ;+-----------------------------------+
              f0fc fcfd  bra  $f0fd       ;|                                   |
              f0fd 1418  ld   $18,y       ;| Trampoline for page $f000 lookups |
              f0fe e006  jmp  y,$06       ;|                                   |
              f0ff c218  st   [$18]       ;+-----------------------------------+
              f100 0045  ld   $45
              f101 0052  ld   $52
              f102 0000  ld   $00
              f103 0007  ld   $07
              f104 0043  ld   $43
              f105 0052  ld   $52
              f106 0045  ld   $45
              f107 0044  ld   $44
              f108 0049  ld   $49
              f109 0054  ld   $54
              f10a 0053  ld   $53
              f10b 0000  ld   $00
              f10c 0005  ld   $05
              f10d 0043  ld   $43
              f10e 004c  ld   $4c
              f10f 004f  ld   $4f
              f110 0043  ld   $43
              f111 004b  ld   $4b
              f112 0000  ld   $00
              f113 0006  ld   $06
              f114 0053  ld   $53
              f115 0044  ld   $44
              f116 0043  ld   $43
              f117 0041  ld   $41
              f118 0052  ld   $52
              f119 0044  ld   $44
              f11a 0000  ld   $00
              f11b 0000  ld   $00
              f11c 0000  ld   $00         ;End of gbas/menu/MainMenu_vX0.gt1, size 4344
                                          ;+-----------------------------------+
                                          ;| Core/Reset_vX0.gcl                |
                                          ;+-----------------------------------+
              f11d dc4d  st   $4d,[y,x++] ;'M'
              f11e dc61  st   $61,[y,x++] ;'a'
              f11f dc69  st   $69,[y,x++] ;'i'
              f120 dc6e  st   $6e,[y,x++] ;'n'
              f121 dc00  st   $00,[y,x++] ;'\x00'
              f122 dc00  st   $00,[y,x++] ;'\x00'
              f123 dc00  st   $00,[y,x++] ;'\x00'
              f124 dc00  st   $00,[y,x++] ;'\x00'
              f125 0025  ld   $25
              f126 c218  st   [$18]
              f127 00e0  ld   $e0
              f128 14f3  ld   $f3,y
              f129 e019  jmp  y,$19
              f12a c219  st   [$19]
Reset:        f12b 0002  ld   $02         ;| RAM segment address (high byte first)
              f12c 0000  ld   $00         ;|
              f12d 0084  ld   $84         ;| Length (1..256)
              f12e 0011  ld   $11         ;0200 LDWI
              f12f 00f8  ld   $f8
              f130 0001  ld   $01
              f131 002b  ld   $2b         ;0203 STW
              f132 0030  ld   $30         ;0203 'CtrlBits'
              f133 00cd  ld   $cd         ;0205 DEF
              f134 007d  ld   $7d
              f135 0075  ld   $75         ;0207 PUSH
              f136 001a  ld   $1a         ;0208 LD
              f137 0001  ld   $01
              f138 00e6  ld   $e6         ;020a SUBI
              f139 0001  ld   $01
              f13a 0082  ld   $82         ;020c ANDI
              f13b 00ff  ld   $ff
              f13c 00e3  ld   $e3         ;020e ADDI
              f13d 0001  ld   $01
              f13e 002b  ld   $2b         ;0210 STW
              f13f 0032  ld   $32         ;0210 'i'
              f140 0059  ld   $59         ;0212 LDI
              f141 0020  ld   $20
              f142 005e  ld   $5e         ;0214 ST
              f143 007a  ld   $7a
              f144 0011  ld   $11         ;0216 LDWI
              f145 0009  ld   $09
              f146 000b  ld   $0b
              f147 002b  ld   $2b         ;0219 STW
              f148 0022  ld   $22         ;0219 '_sysFn'
              f149 0059  ld   $59         ;021b LDI
              f14a 00aa  ld   $aa
              f14b 005e  ld   $5e         ;021d ST
              f14c 007c  ld   $7c
              f14d 0059  ld   $59         ;021f LDI
              f14e 007c  ld   $7c
              f14f 00b4  ld   $b4         ;0221 SYS
              f150 00fb  ld   $fb
              f151 001a  ld   $1a         ;0223 LD
              f152 007c  ld   $7c
              f153 008c  ld   $8c         ;0225 XORI
              f154 00aa  ld   $aa
              f155 0035  ld   $35         ;0227 BCC
              f156 003f  ld   $3f         ;0228 EQ
              f157 002e  ld   $2e
              f158 0059  ld   $59         ;022a LDI
              f159 0000  ld   $00
              f15a 00f0  ld   $f0         ;022c POKE
              f15b 0030  ld   $30         ;022c 'CtrlBits'
              f15c 0090  ld   $90         ;022e BRA
              f15d 0058  ld   $58
              f15e 0011  ld   $11         ;0230 LDWI
              f15f 0024  ld   $24
              f160 0080  ld   $80
              f161 002b  ld   $2b         ;0233 STW
              f162 0034  ld   $34         ;0233 'q'
              f163 0059  ld   $59         ;0235 LDI
              f164 00bc  ld   $bc
              f165 00b4  ld   $b4         ;0237 SYS
              f166 00fb  ld   $fb
              f167 0021  ld   $21         ;0239 LDW
              f168 0034  ld   $34         ;0239 'q'
              f169 00ad  ld   $ad         ;023b PEEK
              f16a 008c  ld   $8c         ;023c XORI
              f16b 00ff  ld   $ff
              f16c 00f0  ld   $f0         ;023e POKE
              f16d 0034  ld   $34         ;023e 'q'
              f16e 002b  ld   $2b         ;0240 STW
              f16f 0024  ld   $24         ;0240 '_sysArgs0'
              f170 008c  ld   $8c         ;0242 XORI
              f171 00ff  ld   $ff
              f172 00f0  ld   $f0         ;0244 POKE
              f173 0034  ld   $34         ;0244 'q'
              f174 00fc  ld   $fc         ;0246 XORW
              f175 0024  ld   $24         ;0246 '_sysArgs0'
              f176 0035  ld   $35         ;0248 BCC
              f177 003f  ld   $3f         ;0249 EQ
              f178 0053  ld   $53
              f179 0059  ld   $59         ;024b LDI
              f17a 0031  ld   $31
              f17b 002b  ld   $2b         ;024d STW
              f17c 0036  ld   $36         ;024d 'Char'
              f17d 005e  ld   $5e         ;024f ST
              f17e 007a  ld   $7a
              f17f 0059  ld   $59         ;0251 LDI
              f180 0070  ld   $70
              f181 002b  ld   $2b         ;0253 STW
              f182 0032  ld   $32         ;0253 'i'
              f183 0011  ld   $11         ;0255 LDWI
              f184 007c  ld   $7c
              f185 0080  ld   $80
              f186 00b4  ld   $b4         ;0258 SYS
              f187 00fb  ld   $fb
              f188 0011  ld   $11         ;025a LDWI
              f189 002f  ld   $2f
              f18a 002f  ld   $2f
              f18b 002b  ld   $2b         ;025d STW
              f18c 0036  ld   $36         ;025d 'Char'
              f18d 0021  ld   $21         ;025f LDW
              f18e 0032  ld   $32         ;025f 'i'
              f18f 0093  ld   $93         ;0261 INC
              f190 0036  ld   $36         ;0261 'Char'
              f191 00e6  ld   $e6         ;0263 SUBI
              f192 0028  ld   $28
              f193 0035  ld   $35         ;0265 BCC
              f194 0053  ld   $53         ;0266 GE
              f195 005f  ld   $5f
              f196 00e3  ld   $e3         ;0268 ADDI
              f197 0028  ld   $28
              f198 0093  ld   $93         ;026a INC
              f199 0037  ld   $37         ;026a 'Char'+1
              f19a 00e6  ld   $e6         ;026c SUBI
              f19b 0004  ld   $04
              f19c 0035  ld   $35         ;026e BCC
              f19d 0053  ld   $53         ;026f GE
              f19e 0068  ld   $68
              f19f 0021  ld   $21         ;0271 LDW
              f1a0 0036  ld   $36         ;0271 'Char'
              f1a1 002b  ld   $2b         ;0273 STW
              f1a2 007b  ld   $7b
              f1a3 0059  ld   $59         ;0275 LDI
              f1a4 0003  ld   $03
              f1a5 005e  ld   $5e         ;0277 ST
              f1a6 0079  ld   $79
              f1a7 0059  ld   $59         ;0279 LDI
              f1a8 0000  ld   $00
              f1a9 005e  ld   $5e         ;027b ST
              f1aa 007d  ld   $7d
              f1ab 0063  ld   $63         ;027d POP
              f1ac 00ff  ld   $ff         ;027e RET
              f1ad 002b  ld   $2b         ;027f STW
              f1ae 0038  ld   $38         ;027f 'CheckMemory'
              f1af 0093  ld   $93         ;0281 INC
              f1b0 001b  ld   $1b
              f1b1 00ff  ld   $ff         ;0283 RET
              f1b2 0003  ld   $03         ;| RAM segment address (high byte first)
              f1b3 0000  ld   $00         ;|
              f1b4 00af  ld   $af         ;| Length (1..256)
              f1b5 00cd  ld   $cd         ;0300 DEF
              f1b6 008e  ld   $8e
              f1b7 0075  ld   $75         ;0302 PUSH
              f1b8 0059  ld   $59         ;0303 LDI
              f1b9 0010  ld   $10
              f1ba 002b  ld   $2b         ;0305 STW
              f1bb 003a  ld   $3a         ;0305 'j'
              f1bc 0059  ld   $59         ;0307 LDI
              f1bd 000a  ld   $0a
              f1be 002b  ld   $2b         ;0309 STW
              f1bf 0032  ld   $32         ;0309 'i'
              f1c0 00cf  ld   $cf         ;030b CALL
              f1c1 003c  ld   $3c         ;030b 'SendOnesToCard'
              f1c2 0021  ld   $21         ;030d LDW
              f1c3 0032  ld   $32         ;030d 'i'
              f1c4 00e6  ld   $e6         ;030f SUBI
              f1c5 0001  ld   $01
              f1c6 0035  ld   $35         ;0311 BCC
              f1c7 004d  ld   $4d         ;0312 GT
              f1c8 0007  ld   $07
              f1c9 0011  ld   $11         ;0314 LDWI
              f1ca 0009  ld   $09
              f1cb 000b  ld   $0b
              f1cc 002b  ld   $2b         ;0317 STW
              f1cd 0022  ld   $22         ;0317 '_sysFn'
              f1ce 0011  ld   $11         ;0319 LDWI
              f1cf 0078  ld   $78
              f1d0 0080  ld   $80
              f1d1 00b4  ld   $b4         ;031c SYS
              f1d2 00fb  ld   $fb
              f1d3 00cd  ld   $cd         ;031e DEF
              f1d4 0026  ld   $26
              f1d5 00ff  ld   $ff         ;0320 255
              f1d6 00ff  ld   $ff         ;0321 255
              f1d7 0040  ld   $40         ;0322 64
              f1d8 0000  ld   $00         ;0323 0
              f1d9 0000  ld   $00         ;0324 0
              f1da 0000  ld   $00         ;0325 0
              f1db 0000  ld   $00         ;0326 0
              f1dc 0095  ld   $95         ;0327 149
              f1dd 002b  ld   $2b         ;0328 STW
              f1de 003e  ld   $3e         ;0328 'p'
              f1df 0059  ld   $59         ;032a LDI
              f1e0 0081  ld   $81
              f1e1 002b  ld   $2b         ;032c STW
              f1e2 0034  ld   $34         ;032c 'q'
              f1e3 0059  ld   $59         ;032e LDI
              f1e4 0008  ld   $08
              f1e5 002b  ld   $2b         ;0330 STW
              f1e6 0032  ld   $32         ;0330 'i'
              f1e7 0021  ld   $21         ;0332 LDW
              f1e8 003e  ld   $3e         ;0332 'p'
              f1e9 00ad  ld   $ad         ;0334 PEEK
              f1ea 0093  ld   $93         ;0335 INC
              f1eb 003e  ld   $3e         ;0335 'p'
              f1ec 00f0  ld   $f0         ;0337 POKE
              f1ed 0034  ld   $34         ;0337 'q'
              f1ee 0093  ld   $93         ;0339 INC
              f1ef 0034  ld   $34         ;0339 'q'
              f1f0 0021  ld   $21         ;033b LDW
              f1f1 0032  ld   $32         ;033b 'i'
              f1f2 00e6  ld   $e6         ;033d SUBI
              f1f3 0001  ld   $01
              f1f4 0035  ld   $35         ;033f BCC
              f1f5 004d  ld   $4d         ;0340 GT
              f1f6 002e  ld   $2e
              f1f7 0059  ld   $59         ;0342 LDI
              f1f8 0081  ld   $81
              f1f9 002b  ld   $2b         ;0344 STW
              f1fa 0024  ld   $24         ;0344 '_sysArgs0'
              f1fb fe00  bra  ac          ;+-----------------------------------+
              f1fc fcfd  bra  $f1fd       ;|                                   |
              f1fd 1418  ld   $18,y       ;| Trampoline for page $f100 lookups |
              f1fe e006  jmp  y,$06       ;|                                   |
              f1ff c218  st   [$18]       ;+-----------------------------------+
              f200 00e3  ld   $e3         ;0346 ADDI
              f201 0008  ld   $08
              f202 002b  ld   $2b         ;0348 STW
              f203 0026  ld   $26         ;0348 '_sysArgs2'
              f204 0011  ld   $11         ;034a LDWI
              f205 0015  ld   $15
              f206 000b  ld   $0b
              f207 002b  ld   $2b         ;034d STW
              f208 0022  ld   $22         ;034d '_sysFn'
              f209 00b4  ld   $b4         ;034f SYS
              f20a 00cc  ld   $cc
              f20b 0059  ld   $59         ;0351 LDI
              f20c 0010  ld   $10
              f20d 002b  ld   $2b         ;0353 STW
              f20e 0032  ld   $32         ;0353 'i'
              f20f 00cf  ld   $cf         ;0355 CALL
              f210 003c  ld   $3c         ;0355 'SendOnesToCard'
              f211 0082  ld   $82         ;0357 ANDI
              f212 0080  ld   $80
              f213 0035  ld   $35         ;0359 BCC
              f214 003f  ld   $3f         ;035a EQ
              f215 0061  ld   $61
              f216 0021  ld   $21         ;035c LDW
              f217 0032  ld   $32         ;035c 'i'
              f218 00e6  ld   $e6         ;035e SUBI
              f219 0001  ld   $01
              f21a 0035  ld   $35         ;0360 BCC
              f21b 004d  ld   $4d         ;0361 GT
              f21c 0051  ld   $51
              f21d 0011  ld   $11         ;0363 LDWI
              f21e 0009  ld   $09
              f21f 000b  ld   $0b
              f220 002b  ld   $2b         ;0366 STW
              f221 0022  ld   $22         ;0366 '_sysFn'
              f222 0011  ld   $11         ;0368 LDWI
              f223 007c  ld   $7c
              f224 0080  ld   $80
              f225 00b4  ld   $b4         ;036b SYS
              f226 00fb  ld   $fb
              f227 001a  ld   $1a         ;036d LD
              f228 002a  ld   $2a
              f229 0035  ld   $35         ;036f BCC
              f22a 003f  ld   $3f         ;0370 EQ
              f22b 008c  ld   $8c
              f22c 008c  ld   $8c         ;0372 XORI
              f22d 0001  ld   $01
              f22e 0035  ld   $35         ;0374 BCC
              f22f 0072  ld   $72         ;0375 NE
              f230 0085  ld   $85
              f231 0011  ld   $11         ;0377 LDWI
              f232 00ad  ld   $ad
              f233 00d4  ld   $d4
              f234 002b  ld   $2b         ;037a STW
              f235 0024  ld   $24         ;037a '_sysArgs0'
              f236 0011  ld   $11         ;037c LDWI
              f237 0000  ld   $00
              f238 0002  ld   $02
              f239 002b  ld   $2b         ;037f STW
              f23a 001a  ld   $1a         ;037f '_vLR'
              f23b 0059  ld   $59         ;0381 LDI
              f23c 00ad  ld   $ad
              f23d 002b  ld   $2b         ;0383 STW
              f23e 0022  ld   $22         ;0383 '_sysFn'
              f23f 00b4  ld   $b4         ;0385 SYS
              f240 00e3  ld   $e3
              f241 0021  ld   $21         ;0387 LDW
              f242 003a  ld   $3a         ;0387 'j'
              f243 00e6  ld   $e6         ;0389 SUBI
              f244 0001  ld   $01
              f245 0035  ld   $35         ;038b BCC
              f246 004d  ld   $4d         ;038c GT
              f247 0003  ld   $03
              f248 0063  ld   $63         ;038e POP
              f249 00ff  ld   $ff         ;038f RET
              f24a 002b  ld   $2b         ;0390 STW
              f24b 0040  ld   $40         ;0390 'CheckCard'
              f24c 00cd  ld   $cd         ;0392 DEF
              f24d 00a8  ld   $a8
              f24e 0059  ld   $59         ;0394 LDI
              f24f 00ff  ld   $ff
              f250 005e  ld   $5e         ;0396 ST
              f251 002a  ld   $2a
              f252 0059  ld   $59         ;0398 LDI
              f253 002a  ld   $2a
              f254 002b  ld   $2b         ;039a STW
              f255 0024  ld   $24         ;039a '_sysArgs0'
              f256 00e3  ld   $e3         ;039c ADDI
              f257 0001  ld   $01
              f258 002b  ld   $2b         ;039e STW
              f259 0026  ld   $26         ;039e '_sysArgs2'
              f25a 0011  ld   $11         ;03a0 LDWI
              f25b 0015  ld   $15
              f25c 000b  ld   $0b
              f25d 002b  ld   $2b         ;03a3 STW
              f25e 0022  ld   $22         ;03a3 '_sysFn'
              f25f 00b4  ld   $b4         ;03a5 SYS
              f260 00cc  ld   $cc
              f261 001a  ld   $1a         ;03a7 LD
              f262 002a  ld   $2a
              f263 00ff  ld   $ff         ;03a9 RET
              f264 002b  ld   $2b         ;03aa STW
              f265 003c  ld   $3c         ;03aa 'SendOnesToCard'
              f266 0093  ld   $93         ;03ac INC
              f267 001b  ld   $1b
              f268 00ff  ld   $ff         ;03ae RET
              f269 0004  ld   $04         ;| RAM segment address (high byte first)
              f26a 0000  ld   $00         ;|
              f26b 007b  ld   $7b         ;| Length (1..256)
              f26c 0011  ld   $11         ;0400 LDWI
              f26d 000f  ld   $0f
              f26e 000b  ld   $0b
              f26f 002b  ld   $2b         ;0403 STW
              f270 0022  ld   $22
              f271 0059  ld   $59         ;0405 LDI
              f272 0000  ld   $00
              f273 00b4  ld   $b4         ;0407 SYS
              f274 00f6  ld   $f6
              f275 0011  ld   $11         ;0409 LDWI
              f276 0012  ld   $12
              f277 000b  ld   $0b
              f278 002b  ld   $2b         ;040c STW
              f279 0022  ld   $22
              f27a 0059  ld   $59         ;040e LDI
              f27b 0000  ld   $00
              f27c 00b4  ld   $b4         ;0410 SYS
              f27d 00f8  ld   $f8
              f27e 00b4  ld   $b4         ;0412 SYS
              f27f 00f8  ld   $f8
              f280 00b4  ld   $b4         ;0414 SYS
              f281 00f8  ld   $f8
              f282 00b4  ld   $b4         ;0416 SYS
              f283 00f8  ld   $f8
              f284 0011  ld   $11         ;0418 LDWI
              f285 0000  ld   $00
              f286 0001  ld   $01
              f287 002b  ld   $2b         ;041b STW
              f288 003e  ld   $3e         ;041b 'p'
              f289 0011  ld   $11         ;041d LDWI
              f28a 0000  ld   $00
              f28b 0008  ld   $08
              f28c 002b  ld   $2b         ;0420 STW
              f28d 0034  ld   $34         ;0420 'q'
              f28e 001a  ld   $1a         ;0422 LD
              f28f 0035  ld   $35         ;0422 'q'+1
              f290 00f0  ld   $f0         ;0424 POKE
              f291 003e  ld   $3e         ;0424 'p'
              f292 0093  ld   $93         ;0426 INC
              f293 003e  ld   $3e         ;0426 'p'
              f294 0059  ld   $59         ;0428 LDI
              f295 0000  ld   $00
              f296 00f0  ld   $f0         ;042a POKE
              f297 003e  ld   $3e         ;042a 'p'
              f298 0093  ld   $93         ;042c INC
              f299 003e  ld   $3e         ;042c 'p'
              f29a 0093  ld   $93         ;042e INC
              f29b 0035  ld   $35         ;042e 'q'+1
              f29c 0021  ld   $21         ;0430 LDW
              f29d 0034  ld   $34         ;0430 'q'
              f29e 0035  ld   $35         ;0432 BCC
              f29f 004d  ld   $4d         ;0433 GT
              f2a0 0020  ld   $20
              f2a1 0011  ld   $11         ;0435 LDWI
              f2a2 0003  ld   $03
              f2a3 000b  ld   $0b
              f2a4 002b  ld   $2b         ;0438 STW
              f2a5 0022  ld   $22         ;0438 '_sysFn'
              f2a6 0059  ld   $59         ;043a LDI
              f2a7 0000  ld   $00
              f2a8 005e  ld   $5e         ;043c ST
              f2a9 0025  ld   $25
              f2aa 0011  ld   $11         ;043e LDWI
              f2ab 0000  ld   $00
              f2ac 0008  ld   $08
              f2ad 002b  ld   $2b         ;0441 STW
              f2ae 003e  ld   $3e         ;0441 'p'
              f2af 002b  ld   $2b         ;0443 STW
              f2b0 0026  ld   $26         ;0443 '_sysArgs2'
              f2b1 0059  ld   $59         ;0445 LDI
              f2b2 00a0  ld   $a0
              f2b3 005e  ld   $5e         ;0447 ST
              f2b4 0024  ld   $24
              f2b5 00b4  ld   $b4         ;0449 SYS
              f2b6 00f4  ld   $f4
              f2b7 0011  ld   $11         ;044b LDWI
              f2b8 0000  ld   $00
              f2b9 0001  ld   $01
              f2ba 0099  ld   $99         ;044e ADDW
              f2bb 003e  ld   $3e         ;044e 'p'
              f2bc 0035  ld   $35         ;0450 BCC
              f2bd 004d  ld   $4d         ;0451 GT
              f2be 003f  ld   $3f
              f2bf 0011  ld   $11         ;0453 LDWI
              f2c0 0014  ld   $14
              f2c1 0008  ld   $08
              f2c2 002b  ld   $2b         ;0456 STW
              f2c3 0042  ld   $42         ;0456 'Pos'
              f2c4 00cf  ld   $cf         ;0458 CALL
              f2c5 0038  ld   $38         ;0458 'CheckMemory'
              f2c6 0011  ld   $11         ;045a LDWI
              f2c7 0000  ld   $00
              f2c8 000b  ld   $0b
              f2c9 002b  ld   $2b         ;045d STW
              f2ca 0022  ld   $22         ;045d '_sysFn'
              f2cb 0059  ld   $59         ;045f LDI
              f2cc 0002  ld   $02
              f2cd 00b4  ld   $b4         ;0461 SYS
              f2ce 00e7  ld   $e7
              f2cf 0021  ld   $21         ;0463 LDW
              f2d0 0030  ld   $30         ;0463 'CtrlBits'
              f2d1 00ad  ld   $ad         ;0465 PEEK
              f2d2 0035  ld   $35         ;0466 BCC
              f2d3 003f  ld   $3f         ;0467 EQ
              f2d4 0069  ld   $69
              f2d5 00cf  ld   $cf         ;0469 CALL
              f2d6 0040  ld   $40         ;0469 'CheckCard'
              f2d7 0011  ld   $11         ;046b LDWI
              f2d8 0025  ld   $25
              f2d9 00e0  ld   $e0
              f2da 002b  ld   $2b         ;046e STW
              f2db 0024  ld   $24         ;046e '_sysArgs0'
              f2dc 0011  ld   $11         ;0470 LDWI
              f2dd 0000  ld   $00
              f2de 0002  ld   $02
              f2df 002b  ld   $2b         ;0473 STW
              f2e0 001a  ld   $1a         ;0473 '_vLR'
              f2e1 0059  ld   $59         ;0475 LDI
              f2e2 00ad  ld   $ad
              f2e3 002b  ld   $2b         ;0477 STW
              f2e4 0022  ld   $22         ;0477 '_sysFn'
              f2e5 00b4  ld   $b4         ;0479 SYS
              f2e6 00e3  ld   $e3
              f2e7 0000  ld   $00         ;End of Core/Reset_vX0.gcl, size 445
              f2e8 0200  nop              ;19 fillers
              f2e9 0200  nop
              f2ea 0200  nop
              * 19 times
              f2fb fe00  bra  ac          ;+-----------------------------------+
              f2fc fcfd  bra  $f2fd       ;|                                   |
              f2fd 1418  ld   $18,y       ;| Trampoline for page $f200 lookups |
              f2fe e006  jmp  y,$06       ;|                                   |
              f2ff c218  st   [$18]       ;+-----------------------------------+
sys_ReadRomDir:
              f300 f006  beq  .sysDir#20
              f301 1024  ld   $24,x
              f302 1600  ld   ac,y
              f303 0118  ld   [$18]
              f304 a00e  suba $0e
              f305 e200  jmp  y,ac
.sysDir#20:   f306 1400  ld   $00,y
              f307 000b  ld   $0b
              f308 14f3  ld   $f3,y
              f309 e200  jmp  y,ac
              f30a 1400  ld   $00,y
.sysDir#25:   f30b dc52  st   $52,[y,x++] ;'R'
              f30c dc65  st   $65,[y,x++] ;'e'
              f30d dc73  st   $73,[y,x++] ;'s'
              f30e dc65  st   $65,[y,x++] ;'e'
              f30f dc74  st   $74,[y,x++] ;'t'
              f310 dc00  st   $00,[y,x++] ;'\x00'
              f311 dc00  st   $00,[y,x++] ;'\x00'
              f312 dc00  st   $00,[y,x++] ;'\x00'
              f313 002b  ld   $2b
              f314 c218  st   [$18]
              f315 00f1  ld   $f1
              f316 14f3  ld   $f3,y
              f317 e019  jmp  y,$19
              f318 c219  st   [$19]
.sysDir#39:   f319 1403  ld   $03,y
              f31a e0cb  jmp  y,$cb
              f31b 00ea  ld   $ea
              f31c 0200  nop              ;223 fillers
              f31d 0200  nop
              f31e 0200  nop
              * 223 times
              f3fb fe00  bra  ac          ;+-----------------------------------+
              f3fc fcfd  bra  $f3fd       ;|                                   |
              f3fd 1418  ld   $18,y       ;| Trampoline for page $f300 lookups |
              f3fe e006  jmp  y,$06       ;|                                   |
              f3ff c218  st   [$18]       ;+-----------------------------------+
              f400
